source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805600c.2 = global i32 0
@global_var_8056024.3 = local_unnamed_addr global i32* @global_var_805600c.2
@global_var_80549b4.5 = constant [4 x i8] c"GET\00"
@global_var_805498d.6 = constant i32 1210056751
@global_var_80549bf.7 = constant i32 540737568
@global_var_805498f.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_80549a7.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_80549c6.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_80549b8.11 = constant [9 x i8] c"Cookie: \00"
@global_var_80549c1.12 = constant [3 x i8] c"; \00"
@global_var_80549c4.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_80549c9.14 = constant i32 1952972859
@global_var_80549cb.15 = constant [5 x i8] c"http\00"
@global_var_80549da.16 = constant i32 -1623588825
@global_var_80549d0.17 = constant [5 x i8] c"url=\00"
@global_var_80549d5.18 = constant [5 x i8] c"POST\00"
@global_var_80550a4.19 = constant i32 1481506877
@global_var_80560d4.20 = local_unnamed_addr global i32 0
@global_var_80560e0.21 = local_unnamed_addr global i32 0
@global_var_80560d8.22 = local_unnamed_addr global i32 0
@global_var_80560dc.23 = local_unnamed_addr global i32 0
@global_var_8056130.24 = local_unnamed_addr global i32 0
@global_var_805610a.25 = local_unnamed_addr global i32 0
@global_var_8056110.26 = local_unnamed_addr global i32 0
@global_var_8056100.27 = global i32 0
@global_var_8056118.29 = local_unnamed_addr global i32 0
@global_var_8056124.30 = local_unnamed_addr global i32 0
@global_var_8056114.31 = global i32 0
@global_var_8056178.32 = local_unnamed_addr global i32 0
@global_var_8056104.33 = local_unnamed_addr global i32 0
@global_var_805615c.34 = local_unnamed_addr global i32 0
@global_var_805610c.35 = local_unnamed_addr global i32 0
@global_var_8056174.36 = local_unnamed_addr global i32 0
@global_var_80560e4.38 = local_unnamed_addr global i32 0
@global_var_8056128.39 = local_unnamed_addr global i32 0
@global_var_8056168.40 = local_unnamed_addr global i32 0
@global_var_80561a0.41 = global i32 0
@global_var_8056154.43 = global i32 0
@global_var_8056380.44 = global i32 0
@global_var_805603c.45 = global i32 0
@global_var_805642c.47 = global i32 0
@global_var_8056430.48 = local_unnamed_addr global i32 0
@global_var_8056434.49 = global i32 0
@global_var_8056440.50 = local_unnamed_addr global i32 0
@global_var_8056734.51 = global i32 0
@global_var_805675c.52 = local_unnamed_addr global i32 0
@global_var_805674c.53 = local_unnamed_addr global i32 0
@global_var_8056750.54 = local_unnamed_addr global i32 0
@global_var_8056754.55 = local_unnamed_addr global i32 0
@global_var_8056758.56 = local_unnamed_addr global i32 0
@global_var_8056764.57 = local_unnamed_addr global i32 0
@global_var_8056770.58 = local_unnamed_addr global i32 0
@global_var_8056768.59 = local_unnamed_addr global i32 0
@global_var_8056774.60 = local_unnamed_addr global i32 0
@global_var_8056748.61 = local_unnamed_addr global i32 0
@global_var_8056744.63 = local_unnamed_addr global i32 0
@global_var_805676c.64 = local_unnamed_addr global i32 0
@global_var_805643c.65 = local_unnamed_addr global i32 0
@global_var_8056054.66 = global i32 0
@global_var_805606c.68 = global i32 0
@global_var_8056138.69 = local_unnamed_addr global i32 0
@global_var_8056000.71 = global i32 -1
@global_var_8053f1d.72 = constant i32 -294069
@global_var_8056148.73 = local_unnamed_addr global i32 0
@global_var_805614c.74 = local_unnamed_addr global i32 0
@global_var_805567c.75 = constant [10 x i8] c"/dev/null\00"
@global_var_8056144.77 = local_unnamed_addr global i32 0
@global_var_805613c.78 = local_unnamed_addr global i32 0
@global_var_8056140.79 = local_unnamed_addr global i32 0
@global_var_80557a0.81 = constant i32 33554944
@global_var_8054103.82 = constant i32 1928542531
@global_var_8054127.83 = constant i32 1928542531
@global_var_8056158.84 = local_unnamed_addr global i32 0
@global_var_8056088.85 = local_unnamed_addr global i32* @global_var_80557a0.81
@global_var_8056778.86 = local_unnamed_addr global i32 0
@global_var_805677c.87 = local_unnamed_addr global i32 0
@global_var_80560a0.1 = local_unnamed_addr global i8 0
@global_var_8056116.28 = local_unnamed_addr global i16 0
@global_var_805612c.37 = local_unnamed_addr global i16 0
@global_var_8056038.42 = local_unnamed_addr global i16 -4641
@global_var_8056400.46 = global i8 0
@global_var_8056760.62 = local_unnamed_addr global i8 0
@global_var_8056134.67 = local_unnamed_addr global i8 0
@global_var_8056150.76 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 57207
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8054940()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_80560a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8056024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80560a0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8056024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80560a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134568352)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134570000 to i32*), align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* %ecx.global-to-local, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_8053fb9(i32 134538064, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134564198, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134564198, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134564198, i32 20, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 19, i32 ptrtoint ([4 x i8]* @global_var_80549b4.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp137 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp137, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 21, i32 ptrtoint (i32* @global_var_805498d.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a160(i8 %v4_8048205, i32 %v0_8048203, i32 23, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a160(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_805274e(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp239 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_8051c80(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_8051c80(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_8051c80(i8* %tmp239)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5213 = call i32 @function_8051c80(i8* %tmp239)
  store i32 %v2_80482a5213, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4214 = icmp eq i32 %v2_80482a5213, 0
  store i1 %v12_80482b4214, i1* %zf.global-to-local, align 1
  %v7_80482b6215 = icmp sgt i32 %v2_80482a5213, 0
  br i1 %v7_80482b6215, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0218 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be217 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8216 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp239, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be217, %v4_80482a0218
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be217, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8216, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be217, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_8051c80(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 512
  %.v0_80482dd = select i1 %v7_80482e7, i32 512, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_80511c0(i8 39)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_80511c0(i8 40)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_80511c0(i8 41)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_80511c0(i8 42)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_80511c0(i8 43)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_80511c0(i8 44)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_80511c0(i8 45)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_80511c0(i8 46)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 47, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_80511c0(i8 47)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 48, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_80511c0(i8 48)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 49, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_80511c0(i8 49)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_80532cf(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp138 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp138, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d5 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d5, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d5 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8051ca0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_8051c80(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_8052727(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8051ca0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8051ca0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8051ca0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp240, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v0_8048463 = call i32 @function_804eb30()
  store i32 %v0_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp244 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp244, 0
  br i1 %v4_8048478, label %bb139, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp244 to i32
  %v5_8048478 = lshr i32 %v0_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb139

bb139:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v0_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb139
  %v0_804848a = call i32 @function_804eb30()
  %v1_804848a = sext i32 %v0_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v0_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v1_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v0_80484ea = call i32 @function_80524b4()
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v0_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp140, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_80521f3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_80521f3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v4_8048608 = call i32 @function_80529d4(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v4_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v4_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v4_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_805215d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_805215d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v0_8048664 = call i32 @function_8052999()
  store i32 %v0_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_80527f9(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v4_804871c = call i32 @function_8051d10(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v4_804873a = call i32 @function_8051d10(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80549bf.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_805498f.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_80549a7.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 35, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_80511c0(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 35, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 35, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8051140(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 36, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_80511c0(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 36, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 36, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8051140(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 37, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_80511c0(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 37, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 37, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8051140(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 38, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_80511c0(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 38, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 38, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8051140(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 43, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80549bf.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v0_8048aab = call i32 @function_8052090()
  store i32 %v0_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp141, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_80549b8.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp142, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80549c1.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8051ff0()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_8051c80(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_8052923()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp241, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_80523fa()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v0_8048d2d = call i32 @function_80524b4()
  store i32 %v0_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v0_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp143, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_805284f()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_80521f3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v4_8048e89 = call i32 @function_8051d10(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_80528ad()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp144, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80549c4.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8051d30()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80549c4.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8051d30()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 49, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v0_8048f1e = call i32 @function_8051f70()
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v0_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 48, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v0_8048f4f = call i32 @function_8051f70()
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v0_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 47, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v0_8048f8b = call i32 @function_8051f70()
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v0_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 47, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v0_8048fb6 = call i32 @function_8051f70()
  store i32 %v0_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v0_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v0_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8051d30()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 46, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v0_804902d = call i32 @function_8051f70()
  store i32 %v0_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v0_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 44, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v0_804906b = call i32 @function_8051f70()
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v0_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 44, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v0_8049096 = call i32 @function_8051f70()
  store i32 %v0_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v0_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v0_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8051d30()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 45, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v0_804910d = call i32 @function_8051f70()
  store i32 %v0_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v0_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 43, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v0_8049140 = call i32 @function_8051f70()
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v0_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 43, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v0_804916b = call i32 @function_8051f70()
  store i32 %v0_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v0_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v0_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8051d30()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8051d80(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge6 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge6, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 42, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v0_80491fe = call i32 @function_8051f70()
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v0_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 42, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v0_8049230 = call i32 @function_8051f70()
  store i32 %v0_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v0_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8051d30()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_80549c9.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8051d30()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp145, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_80549c9.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8051d30()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp146, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_8052040()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 41, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v0_80493ee = call i32 @function_8051f70()
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v0_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 41, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v0_8049419 = call i32 @function_8051f70()
  store i32 %v0_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v0_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v0_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8051d30()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80549cb.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8051d30()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_80526fd(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_80528ad()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_8052727(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp147 = icmp slt i32 %v3_80495d1, 1
  %tmp148 = icmp eq i1 %tmp147, false
  br i1 %tmp148, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_8052727(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 39, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8051d30()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 39, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8051d30()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_80549da.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8051d30()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8051d30()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8051d30()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_80549c9.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8051d30()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_80549c9.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8051d30()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8051d80(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_80526fd(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_80528ad()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_80521f3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 40, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v0_8049870 = call i32 @function_8051f70()
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v0_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 40, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v0_804989b = call i32 @function_8051f70()
  store i32 %v0_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v0_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v0_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8051d30()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp242 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp242, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp243 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp243, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80549d0.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v0_8049977 = call i32 @function_8051f70()
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v0_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80549d0.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v0_80499ab = call i32 @function_8051f70()
  store i32 %v0_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v0_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8051d80(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00187 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00187, i1* %zf.global-to-local, align 1
  %v2_8049a03189 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03189, align 4
  %v0_8049a05190 = call i32 @function_80524b4()
  store i32 %v0_8049a05190, i32* %eax.global-to-local, align 4
  %v0_8049a0a191 = load i32, i32* @esp, align 4
  %v1_8049a0a192 = add i32 %v0_8049a0a191, 16
  %v1_8049a0d193 = load i32, i32* @ebx, align 4
  %v7_8049a0d194 = icmp ult i32 %v0_8049a05190, %v1_8049a0d193
  %v12_8049a0d195 = icmp eq i32 %v0_8049a05190, %v1_8049a0d193
  store i1 %v12_8049a0d195, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d194, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a196 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a191, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a196, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a196 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v0_80499f8 = call i32 @function_8053c34()
  store i32 %v0_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v0_8049a05 = call i32 @function_80524b4()
  store i32 %v0_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v0_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v0_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a192, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80549cb.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v0_8049a2f = call i32 @function_8051f70()
  store i32 %v0_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v0_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80549c4.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8051d30()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80549d5.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8051ff0()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_80528ad()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_8052727(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76173 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76173, i32* %ecx.global-to-local, align 4
  %v2_8049b79174 = add i32 %v0_8049b54, 20916
  %v3_8049b79175 = inttoptr i32 %v2_8049b79174 to i32*
  store i32 1, i32* %v3_8049b79175, align 4
  %v0_8049b80176 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80177 = inttoptr i32 %v0_8049b80176 to i8*
  %v2_8049b80178 = load i8, i8* %v1_8049b80177, align 1
  %v3_8049b80179 = zext i8 %v2_8049b80178 to i32
  %v4_8049b80180 = load i32, i32* @edx, align 4
  %v5_8049b80181 = and i32 %v4_8049b80180, -256
  %v6_8049b80182 = or i32 %v5_8049b80181, %v3_8049b80179
  store i32 %v6_8049b80182, i32* %edx.global-to-local, align 4
  %v4_8049b82183 = icmp eq i8 %v2_8049b80178, 0
  store i1 %v4_8049b82183, i1* %zf.global-to-local, align 1
  %v1_8049b84184 = icmp eq i1 %v4_8049b82183, false
  br i1 %v1_8049b84184, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80186 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80178, %dec_label_pc_8049b65 ]
  %v0_8049b80185 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80176, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80186, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp149, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v4_8049bf1 = call i32 @function_8051d10(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp150, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_80549b4.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8051ff0()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80185, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v4_8049c9a = call i32 @function_8051d10(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp151, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb209, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp152, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v4_8049d53 = call i32 @function_8051d10(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp153 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp153, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_80550a4.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_80549da.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8051d30()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8051ca0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_8052727(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1197 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1197, i32* %ecx.global-to-local, align 4
  %v2_8049ed4198 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4199 = inttoptr i32 %v2_8049ed4198 to i32*
  store i32 1, i32* %v3_8049ed4199, align 4
  %v0_8049edb200 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb201 = inttoptr i32 %v0_8049edb200 to i8*
  %v2_8049edb202 = load i8, i8* %v1_8049edb201, align 1
  %v3_8049edb203 = zext i8 %v2_8049edb202 to i32
  %v4_8049edb204 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb205 = and i32 %v4_8049edb204, -256
  %v6_8049edb206 = or i32 %v5_8049edb205, %v3_8049edb203
  store i32 %v6_8049edb206, i32* %edx.global-to-local, align 4
  %v4_8049edd207 = icmp eq i8 %v2_8049edb202, 0
  store i1 %v4_8049edd207, i1* %zf.global-to-local, align 1
  %v1_8049edf208 = icmp eq i1 %v4_8049edd207, false
  br i1 %v1_8049edf208, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb210 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb202, %dec_label_pc_8049ec0 ]
  %v0_8049edb209 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb200, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb210, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_8051c80(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 50, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_80511c0(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 50, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_8051110(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8051ca0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 50, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8051140(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8051ca0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 51, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_80511c0(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 51, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_8051110(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8051ca0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 51, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8051140(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 52, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_80511c0(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 52, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_8051110(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8051ca0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 52, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8051140(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 53, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_80511c0(i8 102)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 53, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_8051110(i32 134564198, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8051ca0(i8* inttoptr (i32 134564198 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 53, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8051140(i8 102)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v4_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 23, 22, 26, 5, 4, 3, 2, 1, 0, 32, 31, 30, 29, 28, 27, 13, 12, 14, 18, 17, 20, 19, 16, 15, 25, 24, 33, 21, 60, 6, 8, 7, 36, 35, 34, 11, 10, 9, 59, 57, 58, 61, 62, 53, 54, 49, 50, 51, 52, 55, 56, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 %stack_var_-20924.0.ph, { 12, 15, 14, 11, 10, 26, 25, 24, 23, 22, 13, 9, 16, 8, 17, 7, 19, 18, 6, 21, 20, 5, 4, 3, 1, 2, 39, 38, 37, 36, 35, 32, 31, 29, 28, 27, 0, 30, 40, 34, 33 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp244, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp239, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804816e, { 1, 0, 2 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 2, 3, 4, 5, 6, 7, 14, 15, 16, 8, 9, 17, 18, 19, 20, 21, 23, 22, 10, 24, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 25, 26, 27, 28, 29, 30, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 72, 0, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 87, 11, 12, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 222, 223, 224, 225, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 212, 211, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 241, 242, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 273, 274, 243, 244, 245, 246, 247, 248, 257, 258, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 286, 287, 275, 276, 277, 278, 281, 282, 279, 280, 1, 13, 283, 284, 285, 295, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 4, 7, 8, 9, 5, 33, 11, 10, 1, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 6, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 96, 97, 98, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 172, 173, 174, 175, 176, 177, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 84, 85, 86, 82, 88, 89, 90, 91, 92, 93, 94, 95, 148, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 160, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 168, 0, 170, 171 }
  uselistorder i32* %edi.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 8, 5, 9, 10, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 23, 33, 24, 25, 26, 27, 28, 29, 35, 55, 56, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 118, 119, 116, 117, 120, 121, 42, 43, 44, 45, 46, 47, 48, 50, 51, 49, 52, 53, 54, 104, 105, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 437, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 37, 38, 39, 40, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 0, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 151, 152, 164, 165, 153, 154, 155, 156, 167, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 515, 188, 189, 190, 191, 192, 193, 496, 497, 498, 499, 500, 501, 503, 502, 504, 505, 506, 507, 508, 509, 512, 513, 514, 516, 517, 518, 519, 520, 194, 510, 511, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 236, 237, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 243, 244, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 269, 270, 266, 267, 268, 262, 263, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 409, 410, 414, 411, 412, 413, 415, 416, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 457, 458, 459, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 430, 431, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 485, 452, 453, 454, 455, 456, 486, 487, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 477, 478, 1, 22, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495 }
  uselistorder i32 ()* @function_8051f70, { 18, 17, 16, 15, 14, 13, 12, 1, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_8051ff0, { 2, 1, 0 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 7, { 3, 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @function_8051ca0, { 0, 1, 2, 4, 3, 6, 7, 8, 9, 5, 10, 11, 12, 13, 37, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 8, 6, 7 }
  uselistorder i32 (i8*)* @function_8051c80, { 1, 2, 5, 6, 7, 8, 9, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 55, 20, 21, 22, 49, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 0, 52, 53, 54 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_80549b4.5 to i32), { 1, 0 }
  uselistorder i32 134564198, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb139, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a160(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a160:
  %v0_804a160 = load i32, i32* @edi, align 4
  %v0_804a161 = load i32, i32* @esi, align 4
  %v0_804a162 = load i32, i32* @ebx, align 4
  %v4_804a166 = zext i8 %arg1 to i32
  %v2_804a16e = icmp eq i8 %arg1, 0
  %v4_804a178 = urem i32 %arg3, 256
  %v5_804a178 = load i32, i32* @eax, align 4
  %v6_804a178 = and i32 %v5_804a178, -256
  %v7_804a178 = or i32 %v6_804a178, %v4_804a178
  br i1 %v2_804a16e, label %dec_label_pc_804a1a5, label %dec_label_pc_804a182

dec_label_pc_804a182:                             ; preds = %dec_label_pc_804a160
  %v1_804a182 = trunc i32 %arg3 to i8
  %v3_804a186 = add i32 %arg2, 4
  %v4_804a186 = inttoptr i32 %v3_804a186 to i8*
  %v5_804a186 = load i8, i8* %v4_804a186, align 1
  %v16_804a186 = icmp eq i8 %v1_804a182, %v5_804a186
  br i1 %v16_804a186, label %dec_label_pc_804a1ac, label %dec_label_pc_804a18b

dec_label_pc_804a18b:                             ; preds = %dec_label_pc_804a182
  br label %dec_label_pc_804a1a0

dec_label_pc_804a192:                             ; preds = %dec_label_pc_804a1a0
  %v1_804a192 = add i32 %v0_804a195.in, 12
  %v2_804a192 = inttoptr i32 %v1_804a192 to i8*
  %v3_804a192 = load i8, i8* %v2_804a192, align 1
  %v4_804a192 = zext i8 %v3_804a192 to i32
  %v6_804a192 = and i32 %v5_804a192, -256
  %v7_804a192 = or i32 %v4_804a192, %v6_804a192
  %v16_804a19a = icmp eq i8 %v1_804a182, %v3_804a192
  br i1 %v16_804a19a, label %dec_label_pc_804a1ac, label %dec_label_pc_804a1a0

dec_label_pc_804a1a0:                             ; preds = %dec_label_pc_804a192, %dec_label_pc_804a18b
  %v5_804a192 = phi i32 [ %v7_804a192, %dec_label_pc_804a192 ], [ %v7_804a178, %dec_label_pc_804a18b ]
  %v0_804a195.in = phi i32 [ %v0_804a195, %dec_label_pc_804a192 ], [ %arg2, %dec_label_pc_804a18b ]
  %v0_804a1a0 = phi i32 [ %v1_804a1a0, %dec_label_pc_804a192 ], [ 0, %dec_label_pc_804a18b ]
  %v0_804a195 = add i32 %v0_804a195.in, 8
  %v1_804a1a0 = add i32 %v0_804a1a0, 1
  store i32 %v1_804a1a0, i32* @ecx, align 4
  %v12_804a1a1 = icmp eq i32 %v4_804a166, %v1_804a1a0
  %v1_804a1a3 = icmp eq i1 %v12_804a1a1, false
  br i1 %v1_804a1a3, label %dec_label_pc_804a192, label %dec_label_pc_804a1a5

dec_label_pc_804a1a5:                             ; preds = %dec_label_pc_804a1a0, %dec_label_pc_804a1ac, %dec_label_pc_804a160
  store i32 %v0_804a162, i32* @ebx, align 4
  store i32 %v0_804a161, i32* @esi, align 4
  store i32 %v0_804a160, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a1ac:                             ; preds = %dec_label_pc_804a192, %dec_label_pc_804a182
  %v0_804a1ac = phi i32 [ %arg2, %dec_label_pc_804a182 ], [ %v0_804a195, %dec_label_pc_804a192 ]
  %v1_804a1ac = inttoptr i32 %v0_804a1ac to i32*
  %v2_804a1ac = load i32, i32* %v1_804a1ac, align 4
  %sext = mul i32 %v2_804a1ac, 16777216
  %v2_804a1ae = icmp eq i32 %sext, 0
  br i1 %v2_804a1ae, label %dec_label_pc_804a1a5, label %dec_label_pc_804a1b2

dec_label_pc_804a1b2:                             ; preds = %dec_label_pc_804a1ac
  store i32 %v0_804a162, i32* @ebx, align 4
  store i32 %v0_804a161, i32* @esi, align 4
  store i32 %v0_804a160, i32* @edi, align 4
  %v2_804a1c2 = sdiv i32 %sext, 16777216
  %v3_804a1c2 = inttoptr i32 %v2_804a1c2 to i8*
  %v4_804a1c2 = call i32 @function_8051d80(i8* %v3_804a1c2, i32 10)
  ret i32 %v4_804a1c2

; uselistorder directives
  uselistorder i32 %v1_804a1a0, { 0, 2, 1 }
  uselistorder i32 %v0_804a195.in, { 1, 0 }
  uselistorder i32 %v0_804a162, { 1, 0 }
  uselistorder i32 %v0_804a161, { 1, 0 }
  uselistorder i32 %v0_804a160, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a1a5, { 1, 0, 2 }
}

define i32 @function_804d5e0() local_unnamed_addr {
dec_label_pc_804d5e0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d5e7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d605, label %dec_label_pc_804d5f0

dec_label_pc_804d5f0:                             ; preds = %dec_label_pc_804d5e0, %dec_label_pc_804d5f0
  %v0_804d5fe = phi i32 [ %v2_804d5fe, %dec_label_pc_804d5f0 ], [ 0, %dec_label_pc_804d5e0 ]
  %v0_804d5f3 = phi i32 [ %v1_804d5f3, %dec_label_pc_804d5f0 ], [ %tmp11, %dec_label_pc_804d5e0 ]
  %v0_804d5fb = phi i32 [ %v1_804d5fb, %dec_label_pc_804d5f0 ], [ %v4_804d5e7, %dec_label_pc_804d5e0 ]
  %v1_804d5f0 = inttoptr i32 %v0_804d5fb to i16*
  %v2_804d5f0 = load i16, i16* %v1_804d5f0, align 2
  %v3_804d5f0 = zext i16 %v2_804d5f0 to i32
  %v1_804d5f3 = add i32 %v0_804d5f3, -2
  %v1_804d5fb = add i32 %v0_804d5fb, 2
  %v2_804d5fe = add i32 %v3_804d5f0, %v0_804d5fe
  %v5_804d600 = icmp eq i32 %v1_804d5f3, 0
  %v9_804d600 = icmp eq i32 %v0_804d5f3, 3
  %v2_804d603 = or i1 %v9_804d600, %v5_804d600
  br i1 %v2_804d603, label %dec_label_pc_804d605.loopexit, label %dec_label_pc_804d5f0

dec_label_pc_804d605.loopexit:                    ; preds = %dec_label_pc_804d5f0
  br label %dec_label_pc_804d605

dec_label_pc_804d605:                             ; preds = %dec_label_pc_804d605.loopexit, %dec_label_pc_804d5e0
  %v0_804d60b = phi i32 [ %v2_804d5fe, %dec_label_pc_804d605.loopexit ], [ 0, %dec_label_pc_804d5e0 ]
  %v0_804d608 = phi i32 [ %v1_804d5fb, %dec_label_pc_804d605.loopexit ], [ %v4_804d5e7, %dec_label_pc_804d5e0 ]
  %v0_804d605 = phi i32 [ %v1_804d5f3, %dec_label_pc_804d605.loopexit ], [ %tmp11, %dec_label_pc_804d5e0 ]
  %v8_804d605 = icmp eq i32 %v0_804d605, 1
  %v1_804d606 = icmp eq i1 %v8_804d605, false
  br i1 %v1_804d606, label %dec_label_pc_804d60d, label %dec_label_pc_804d608

dec_label_pc_804d608:                             ; preds = %dec_label_pc_804d605
  %v1_804d608 = inttoptr i32 %v0_804d608 to i8*
  %v2_804d608 = load i8, i8* %v1_804d608, align 1
  %v3_804d608 = sext i8 %v2_804d608 to i32
  %v2_804d60b = add i32 %v3_804d608, %v0_804d60b
  br label %dec_label_pc_804d60d

dec_label_pc_804d60d:                             ; preds = %dec_label_pc_804d605, %dec_label_pc_804d608
  %v0_804d60d = phi i32 [ %v0_804d60b, %dec_label_pc_804d605 ], [ %v2_804d60b, %dec_label_pc_804d608 ]
  %v1_804d60f = urem i32 %v0_804d60d, 65536
  %v2_804d612 = udiv i32 %v0_804d60d, 65536
  %v2_804d616 = add nuw nsw i32 %v1_804d60f, %v2_804d612
  %v2_804d61a = udiv i32 %v2_804d616, 65536
  %v2_804d61d = add nuw nsw i32 %v2_804d61a, %v2_804d616
  %v1_804d61f = urem i32 %v2_804d61d, 65536
  %v1_804d622 = xor i32 %v1_804d61f, 65535
  ret i32 %v1_804d622

; uselistorder directives
  uselistorder i32 %v2_804d616, { 1, 0 }
  uselistorder i32 %v0_804d60b, { 1, 0 }
  uselistorder i32 %v1_804d5f3, { 0, 2, 1 }
  uselistorder i32 %v4_804d5e7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d60d, { 1, 0 }
  uselistorder label %dec_label_pc_804d5f0, { 1, 0 }
}

define i32 @function_804d630() local_unnamed_addr {
dec_label_pc_804d630:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d645 = ptrtoint i16* %tmp14 to i32
  %v1_804d64e = add i32 %tmp17, 12
  %v2_804d64e = inttoptr i32 %v1_804d64e to i32*
  %v3_804d64e = load i32, i32* %v2_804d64e, align 4
  %v1_804d651 = add i32 %tmp17, 16
  %v2_804d651 = inttoptr i32 %v1_804d651 to i32*
  %v3_804d651 = load i32, i32* %v2_804d651, align 4
  %v7_804d657 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d657, label %dec_label_pc_804d660, label %dec_label_pc_804d675

dec_label_pc_804d660:                             ; preds = %dec_label_pc_804d630, %dec_label_pc_804d660
  %v0_804d66e = phi i32 [ %v2_804d66e, %dec_label_pc_804d660 ], [ 0, %dec_label_pc_804d630 ]
  %v0_804d663 = phi i32 [ %v1_804d663, %dec_label_pc_804d660 ], [ %tmp16, %dec_label_pc_804d630 ]
  %v0_804d66b = phi i32 [ %v1_804d66b, %dec_label_pc_804d660 ], [ %v4_804d645, %dec_label_pc_804d630 ]
  %v1_804d660 = inttoptr i32 %v0_804d66b to i16*
  %v2_804d660 = load i16, i16* %v1_804d660, align 2
  %v3_804d660 = zext i16 %v2_804d660 to i32
  %v1_804d663 = add i32 %v0_804d663, -2
  %v1_804d66b = add i32 %v0_804d66b, 2
  %v2_804d66e = add i32 %v3_804d660, %v0_804d66e
  %v1_804d670 = add i32 %v0_804d663, -3
  %v6_804d670 = sub i32 2, %v0_804d663
  %v7_804d670 = and i32 %v1_804d663, %v6_804d670
  %v8_804d670 = icmp slt i32 %v7_804d670, 0
  %v9_804d670 = icmp eq i32 %v1_804d670, 0
  %v10_804d670 = icmp slt i32 %v1_804d670, 0
  %v3_804d673 = icmp eq i1 %v10_804d670, %v8_804d670
  %v4_804d673 = icmp eq i1 %v9_804d670, false
  %v5_804d673 = and i1 %v4_804d673, %v3_804d673
  br i1 %v5_804d673, label %dec_label_pc_804d660, label %dec_label_pc_804d675.loopexit

dec_label_pc_804d675.loopexit:                    ; preds = %dec_label_pc_804d660
  br label %dec_label_pc_804d675

dec_label_pc_804d675:                             ; preds = %dec_label_pc_804d675.loopexit, %dec_label_pc_804d630
  %v0_804d6e0 = phi i32 [ %v2_804d66e, %dec_label_pc_804d675.loopexit ], [ 0, %dec_label_pc_804d630 ]
  %v0_804d6de = phi i32 [ %v1_804d66b, %dec_label_pc_804d675.loopexit ], [ %v4_804d645, %dec_label_pc_804d630 ]
  %v0_804d675 = phi i32 [ %v1_804d663, %dec_label_pc_804d675.loopexit ], [ %tmp16, %dec_label_pc_804d630 ]
  %v8_804d675 = icmp eq i32 %v0_804d675, 1
  br i1 %v8_804d675, label %dec_label_pc_804d6dc, label %dec_label_pc_804d678

dec_label_pc_804d678:                             ; preds = %dec_label_pc_804d675, %dec_label_pc_804d6dc
  %v0_804d686 = phi i32 [ %v0_804d6e0, %dec_label_pc_804d675 ], [ %v2_804d6e0, %dec_label_pc_804d6dc ]
  %v2_804d67c = udiv i32 %v3_804d651, 65536
  %v1_804d67f = add i32 %tmp17, 9
  %v2_804d67f = inttoptr i32 %v1_804d67f to i8*
  %v3_804d67f = load i8, i8* %v2_804d67f, align 1
  %v1_804d682 = zext i8 %v3_804d67f to i16
  %v2_804d682 = call i16 @llvm.bswap.i16(i16 %v1_804d682)
  %v3_804d682 = zext i16 %v2_804d682 to i32
  %v2_804d686 = add i32 %v0_804d686, %v2_804d67c
  %v2_804d68e = add i32 %v2_804d686, %v3_804d682
  %v1_804d694 = urem i32 %v3_804d64e, 65536
  %v2_804d69a = udiv i32 %v3_804d64e, 65536
  %v1_804d6a1 = urem i32 %v3_804d651, 65536
  %v4_804d6a9 = zext i16 %tmp15 to i32
  %v2_804d69d = add nuw nsw i32 %v2_804d69a, %v4_804d6a9
  %v2_804d6a7 = add nuw nsw i32 %v2_804d69d, %v1_804d694
  %v2_804d6b4 = add nuw nsw i32 %v2_804d6a7, %v1_804d6a1
  %v2_804d6b6 = add i32 %v2_804d6b4, %v2_804d68e
  %tmp = icmp ult i32 %v2_804d6b6, 65536
  br i1 %tmp, label %dec_label_pc_804d6ce, label %dec_label_pc_804d6c0

dec_label_pc_804d6c0:                             ; preds = %dec_label_pc_804d678, %dec_label_pc_804d6c0
  %v2_804d6c53 = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6c0 ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v2_804d6c94.in = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6c0 ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v2_804d6c94 = udiv i32 %v2_804d6c94.in, 65536
  %v1_804d6c0 = urem i32 %v2_804d6c53, 65536
  %v2_804d6c5 = add nuw nsw i32 %v1_804d6c0, %v2_804d6c94
  %tmp25 = icmp ult i32 %v2_804d6c5, 65536
  %v1_804d6cc = icmp eq i1 %tmp25, false
  br i1 %v1_804d6cc, label %dec_label_pc_804d6c0, label %dec_label_pc_804d6ce.loopexit

dec_label_pc_804d6ce.loopexit:                    ; preds = %dec_label_pc_804d6c0
  br label %dec_label_pc_804d6ce

dec_label_pc_804d6ce:                             ; preds = %dec_label_pc_804d6ce.loopexit, %dec_label_pc_804d678
  %v0_804d6ce = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6ce.loopexit ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v1_804d6ce = urem i32 %v0_804d6ce, 65536
  %v1_804d6d2 = xor i32 %v1_804d6ce, 65535
  ret i32 %v1_804d6d2

dec_label_pc_804d6dc:                             ; preds = %dec_label_pc_804d675
  %v1_804d6de = inttoptr i32 %v0_804d6de to i8*
  %v2_804d6de = load i8, i8* %v1_804d6de, align 1
  %v3_804d6de = zext i8 %v2_804d6de to i32
  %v2_804d6e0 = add i32 %v3_804d6de, %v0_804d6e0
  br label %dec_label_pc_804d678

; uselistorder directives
  uselistorder i32 %v2_804d6c5, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d6b6, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d670, { 1, 0 }
  uselistorder i32 %v1_804d663, { 0, 2, 1 }
  uselistorder i32 %v3_804d651, { 1, 0 }
  uselistorder i32 %v4_804d645, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d6c0, { 1, 0 }
  uselistorder label %dec_label_pc_804d678, { 1, 0 }
  uselistorder label %dec_label_pc_804d660, { 1, 0 }
}

define i32 @function_804eb30() local_unnamed_addr {
dec_label_pc_804eb30:
  %v0_804eb30 = load i32, i32* @global_var_80560d4.20, align 4
  %v0_804eb38 = load i32, i32* @global_var_80560e0.21, align 32
  %v2_804eb3e = mul i32 %v0_804eb30, 2048
  %v2_804eb43 = udiv i32 %v0_804eb38, 524288
  store i32 %v2_804eb43, i32* @ecx, align 4
  %v2_804eb46 = xor i32 %v2_804eb3e, %v0_804eb30
  %v0_804eb48 = load i32, i32* @global_var_80560d8.22, align 8
  store i32 %v0_804eb48, i32* @global_var_80560d4.20, align 4
  %v0_804eb52 = load i32, i32* @global_var_80560dc.23, align 4
  store i32 %v0_804eb52, i32* @global_var_80560d8.22, align 8
  store i32 %v0_804eb38, i32* @global_var_80560dc.23, align 4
  %v2_804eb64 = xor i32 %v2_804eb43, %v0_804eb38
  %v2_804eb66 = udiv i32 %v2_804eb46, 256
  %v2_804eb69 = xor i32 %v2_804eb66, %v2_804eb46
  %v2_804eb6b = xor i32 %v2_804eb69, %v2_804eb64
  store i32 %v2_804eb6b, i32* @global_var_80560e0.21, align 32
  ret i32 %v2_804eb6b

; uselistorder directives
  uselistorder i32 %v2_804eb46, { 1, 0 }
  uselistorder i32 %v2_804eb43, { 1, 0 }
  uselistorder i32 %v0_804eb38, { 1, 2, 0 }
  uselistorder i32 %v0_804eb30, { 1, 0 }
}

define i32 @function_804ec90() local_unnamed_addr {
dec_label_pc_804ec90:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804ec90 = load i32, i32* @ebx, align 4
  %v0_804ec91 = load i32, i32* @eax, align 4
  store i32 %v0_804ec91, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804ecb6 = add i32 %v0_804ec91, 4
  %v2_804ecb6 = inttoptr i32 %v1_804ecb6 to i32*
  %v3_804ecb6 = load i32, i32* %v2_804ecb6, align 4
  %v10_804ecb9 = icmp eq i32 %v3_804ecb6, -1
  br i1 %v10_804ecb9, label %dec_label_pc_804ec90.dec_label_pc_804ecca_crit_edge, label %dec_label_pc_804ecbe

dec_label_pc_804ec90.dec_label_pc_804ecca_crit_edge: ; preds = %dec_label_pc_804ec90
  br label %dec_label_pc_804ecca

dec_label_pc_804ecbe:                             ; preds = %dec_label_pc_804ec90
  %v1_804ecc2 = call i32 @function_80521f3(i32 %v3_804ecb6)
  br label %dec_label_pc_804ecca

dec_label_pc_804ecca:                             ; preds = %dec_label_pc_804ec90.dec_label_pc_804ecca_crit_edge, %dec_label_pc_804ecbe
  %v0_804ecca = phi i32 [ -1, %dec_label_pc_804ec90.dec_label_pc_804ecca_crit_edge ], [ %v1_804ecc2, %dec_label_pc_804ecbe ]
  store i32 %v0_804ecca, i32* %stack_var_-32, align 4
  %v4_804ecd1 = call i32 @function_80529d4(i32 2, i32 1, i32 0, i32 %v0_804ecca)
  %v1_804ecd9 = load i32, i32* @ebx, align 4
  %v2_804ecd9 = add i32 %v1_804ecd9, 4
  %v3_804ecd9 = inttoptr i32 %v2_804ecd9 to i32*
  store i32 %v4_804ecd1, i32* %v3_804ecd9, align 4
  %v1_804ecdc = add i32 %v4_804ecd1, 1
  %v8_804ecdc = icmp eq i32 %v1_804ecdc, 0
  br i1 %v8_804ecdc, label %dec_label_pc_804ecca.dec_label_pc_804ed53_crit_edge, label %dec_label_pc_804ecdf

dec_label_pc_804ecca.dec_label_pc_804ed53_crit_edge: ; preds = %dec_label_pc_804ecca
  br label %dec_label_pc_804ed53

dec_label_pc_804ecdf:                             ; preds = %dec_label_pc_804ecca
  store i32 %v1_804ecdc, i32* %stack_var_-32, align 4
  %v0_804ece1 = load i32, i32* @ebx, align 4
  %v1_804ece1 = add i32 %v0_804ece1, 28
  store i32 %v1_804ece1, i32* @eax, align 4
  %v1_804ece9 = add i32 %v0_804ece1, 24
  %v2_804ece9 = inttoptr i32 %v1_804ece9 to i32*
  store i32 0, i32* %v2_804ece9, align 4
  %v0_804ecf0 = load i32, i32* @eax, align 4
  %v3_804ecf1 = load i32, i32* %stack_var_-32, align 4
  %v4_804ecf1 = call i32 @function_8051d10(i32 %v0_804ecf0, i32 256, i32 %v1_804ecdc, i32 %v3_804ecf1)
  %v0_804ecf9 = load i32, i32* @ebx, align 4
  %v1_804ecf9 = add i32 %v0_804ecf9, 4
  %v2_804ecf9 = inttoptr i32 %v1_804ecf9 to i32*
  %v3_804ecf9 = load i32, i32* %v2_804ecf9, align 4
  %v3_804ed01 = call i32 @function_805215d(i32 %v3_804ecf9, i32 3, i32 0)
  %v0_804ed09 = load i32, i32* @ebx, align 4
  %v1_804ed09 = add i32 %v0_804ed09, 4
  %v2_804ed09 = inttoptr i32 %v1_804ed09 to i32*
  %v3_804ed09 = load i32, i32* %v2_804ed09, align 4
  %v12_804ed0c = or i32 %v3_804ed01, 2048
  %v3_804ed13 = call i32 @function_805215d(i32 %v3_804ed09, i32 4, i32 %v12_804ed0c)
  %v0_804ed18 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804ed2e = load i32, i32* @global_var_8056130.24, align 16
  %v2_804ed33 = add i32 %v0_804ed18, 8
  %v3_804ed33 = inttoptr i32 %v2_804ed33 to i32*
  store i32 %v0_804ed2e, i32* %v3_804ed33, align 4
  %v2_804ed36 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804ed3d = load i32, i32* @ebx, align 4
  %v1_804ed3d = add i32 %v0_804ed3d, 4
  %v2_804ed3d = inttoptr i32 %v1_804ed3d to i32*
  %v3_804ed3d = load i32, i32* %v2_804ed3d, align 4
  store i32 %v3_804ed3d, i32* %edx.global-to-local, align 4
  %v1_804ed40 = add i32 %v0_804ed3d, 12
  %v2_804ed40 = inttoptr i32 %v1_804ed40 to i32*
  store i32 1, i32* %v2_804ed40, align 4
  %v0_804ed4a = load i32, i32* %edx.global-to-local, align 4
  %v3_804ed4b = call i32 @function_80527f9(i32 %v0_804ed4a, i32 %v2_804ed36, i32 16)
  br label %dec_label_pc_804ed53

dec_label_pc_804ed53:                             ; preds = %dec_label_pc_804ecca.dec_label_pc_804ed53_crit_edge, %dec_label_pc_804ecdf
  %v0_804ed57 = phi i32 [ 0, %dec_label_pc_804ecca.dec_label_pc_804ed53_crit_edge ], [ %v3_804ed4b, %dec_label_pc_804ecdf ]
  store i32 %v0_804ec90, i32* @ebx, align 4
  ret i32 %v0_804ed57

; uselistorder directives
  uselistorder i32 %v3_804ecb6, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8051d10, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ed53, { 1, 0 }
  uselistorder label %dec_label_pc_804ecca, { 1, 0 }
}

define i32 @function_804fef0() local_unnamed_addr {
dec_label_pc_804fef0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_80503c3, %dec_label_pc_804fef0
  %v0_804fef0 = load i32, i32* @global_var_8056130.24, align 16
  store i32 %v0_804fef0, i32* @esi, align 4
  %v0_804fef6 = load i32, i32* @esp, align 4
  %v1_804fef6 = add i32 %v0_804fef6, 16
  %v2_804fef6 = inttoptr i32 %v1_804fef6 to i32*
  %v3_804fef6 = load i32, i32* %v2_804fef6, align 4
  %v15_804fef6 = icmp eq i32 %v3_804fef6, %v0_804fef0
  br i1 %v15_804fef6, label %dec_label_pc_80501af, label %dec_label_pc_804ff00

dec_label_pc_804ff00:                             ; preds = %.loopexit
  %v1_804ff00 = add i32 %v0_804fef6, 1812
  store i32 %v1_804ff00, i32* @ebp, align 4
  %v1_804ff07 = add i32 %v0_804fef6, 1856
  %v2_804ff07 = inttoptr i32 %v1_804ff07 to i32*
  store i32 0, i32* %v2_804ff07, align 4
  %v0_80500b5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80500b5

dec_label_pc_804ff17:                             ; preds = %dec_label_pc_8050129
  %v11_804ff17 = icmp eq i8 %v2_805010c, -84
  br i1 %v11_804ff17, label %dec_label_pc_8050174, label %dec_label_pc_804ff20

dec_label_pc_804ff20:                             ; preds = %dec_label_pc_804ff17
  %v10_804ff20 = icmp eq i8 %v2_805010c, 100
  br i1 %v10_804ff20, label %dec_label_pc_804ff20.dec_label_pc_8050140_crit_edge, label %dec_label_pc_804ff29

dec_label_pc_804ff20.dec_label_pc_8050140_crit_edge: ; preds = %dec_label_pc_804ff20
  %.pre = trunc i32 %v2_8050103 to i8
  br label %dec_label_pc_8050140

dec_label_pc_804ff29:                             ; preds = %dec_label_pc_8050137, %dec_label_pc_804ff20
  %v11_804ff29 = icmp eq i8 %v2_805010c, -87
  br i1 %v11_804ff29, label %dec_label_pc_805018f, label %dec_label_pc_804ff32

dec_label_pc_804ff32:                             ; preds = %dec_label_pc_8050186, %dec_label_pc_804ff29
  %v0_804ff32 = phi i32 [ %v0_8050186, %dec_label_pc_8050186 ], [ %v5_8050101, %dec_label_pc_804ff29 ]
  %v0_804ffba66 = phi i32 [ %v0_805017d, %dec_label_pc_8050186 ], [ %v2_8050103, %dec_label_pc_804ff29 ]
  %v1_804ff32 = trunc i32 %v0_804ff32 to i8
  %v11_804ff32 = icmp eq i8 %v1_804ff32, -58
  br i1 %v11_804ff32, label %dec_label_pc_8050157, label %dec_label_pc_804ff3b

dec_label_pc_804ff3b:                             ; preds = %dec_label_pc_805018f, %dec_label_pc_805014e, %dec_label_pc_804ff32
  %v0_804ff3b = phi i32 [ %v0_804ff3b73, %dec_label_pc_805018f ], [ %v5_8050101, %dec_label_pc_805014e ], [ %v0_804ff32, %dec_label_pc_804ff32 ]
  %v0_804ffba65 = phi i32 [ %v0_805018f, %dec_label_pc_805018f ], [ %v2_8050103, %dec_label_pc_805014e ], [ %v0_804ffba66, %dec_label_pc_804ff32 ]
  %v1_804ff3b = trunc i32 %v0_804ff3b to i8
  %tmp255 = icmp ult i8 %v1_804ff3b, -32
  br i1 %tmp255, label %dec_label_pc_804ff44, label %dec_label_pc_80500f6.preheader

dec_label_pc_804ff44:                             ; preds = %dec_label_pc_8050140, %dec_label_pc_8050174.dec_label_pc_804ff44_crit_edge, %dec_label_pc_8050160, %dec_label_pc_804ff3b, %dec_label_pc_8050157
  %v0_804ffba = phi i32 [ %v0_805017d, %dec_label_pc_8050174.dec_label_pc_804ff44_crit_edge ], [ %v0_8050160, %dec_label_pc_8050160 ], [ %v0_804ffba65, %dec_label_pc_804ff3b ], [ %v0_8050160, %dec_label_pc_8050157 ], [ %v2_8050103, %dec_label_pc_8050140 ]
  %v0_804ffc8 = phi i32 [ %v0_804ff44.pre, %dec_label_pc_8050174.dec_label_pc_804ff44_crit_edge ], [ %v0_804ff4462, %dec_label_pc_8050160 ], [ %v0_804ff3b, %dec_label_pc_804ff3b ], [ %v0_804ff4462, %dec_label_pc_8050157 ], [ %v5_8050101, %dec_label_pc_8050140 ]
  %v1_804ff44 = add i32 %v0_804ffc8, -6
  store i32 %v1_804ff44, i32* %eax.global-to-local, align 4
  %v1_804ff47 = trunc i32 %v1_804ff44 to i8
  %tmp256 = or i8 %v1_804ff47, 1
  %tmp257 = icmp eq i8 %tmp256, 1
  br i1 %tmp257, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff4f

dec_label_pc_804ff4f:                             ; preds = %dec_label_pc_804ff44
  %v1_804ff4f = trunc i32 %v0_804ffc8 to i8
  %v10_804ff4f = icmp eq i8 %v1_804ff4f, 11
  br i1 %v10_804ff4f, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff58

dec_label_pc_804ff58:                             ; preds = %dec_label_pc_804ff4f
  %v10_804ff58 = icmp eq i8 %v1_804ff4f, 21
  br i1 %v10_804ff58, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff61

dec_label_pc_804ff61:                             ; preds = %dec_label_pc_804ff58
  %v10_804ff61 = icmp eq i8 %v1_804ff4f, 22
  br i1 %v10_804ff61, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff6a

dec_label_pc_804ff6a:                             ; preds = %dec_label_pc_804ff61
  %v10_804ff6a = icmp eq i8 %v1_804ff4f, 26
  br i1 %v10_804ff6a, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff73

dec_label_pc_804ff73:                             ; preds = %dec_label_pc_804ff6a
  %v10_804ff73 = icmp eq i8 %v1_804ff4f, 28
  br i1 %v10_804ff73, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff7c

dec_label_pc_804ff7c:                             ; preds = %dec_label_pc_804ff73
  %v10_804ff7c = icmp eq i8 %v1_804ff4f, 29
  br i1 %v10_804ff7c, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff85

dec_label_pc_804ff85:                             ; preds = %dec_label_pc_804ff7c
  %v10_804ff85 = icmp eq i8 %v1_804ff4f, 30
  br i1 %v10_804ff85, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff8e

dec_label_pc_804ff8e:                             ; preds = %dec_label_pc_804ff85
  %v10_804ff8e = icmp eq i8 %v1_804ff4f, 33
  br i1 %v10_804ff8e, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff97

dec_label_pc_804ff97:                             ; preds = %dec_label_pc_804ff8e
  %v10_804ff97 = icmp eq i8 %v1_804ff4f, 55
  br i1 %v10_804ff97, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ffa0

dec_label_pc_804ffa0:                             ; preds = %dec_label_pc_804ff97
  %v11_804ffa0 = icmp eq i8 %v1_804ff4f, -42
  br i1 %v11_804ffa0, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ffa9

dec_label_pc_804ffa9:                             ; preds = %dec_label_pc_804ffa0
  %v11_804ffa9 = icmp eq i8 %v1_804ff4f, -41
  br i1 %v11_804ffa9, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ffb2

dec_label_pc_804ffb2:                             ; preds = %dec_label_pc_804ffa9
  %v0_804ffb4 = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_805610a.25 to i16*), align 4
  %v1_804ffba = mul i32 %v0_804ffba, 65536
  %v2_804ffc5 = and i32 %v1_804ffba, 16711680
  %v2_804ffc8 = mul i32 %v0_804ffc8, 16777216
  %v1_804ffb4 = mul i32 %v0_804ffb4, 256
  %v2_804ffce = or i32 %v2_804ffc5, %v2_804ffc8
  %v0_804ffd0 = load i32, i32* @edi, align 4
  %v1_804ffd2 = urem i32 %v0_804ffd0, 256
  store i32 %v1_804ffd2, i32* %eax.global-to-local, align 4
  %v2_804ffd7 = or i32 %v1_804ffd2, %v2_804ffce
  store i32 %v2_804ffd7, i32* %ecx.global-to-local, align 4
  %v2_804ffd9 = or i32 %v1_804ffd2, %v1_804ffb4
  %v1_804ffdb = load i32, i32* @esp, align 4
  %v2_804ffdb = add i32 %v1_804ffdb, -4
  %v3_804ffdb = inttoptr i32 %v2_804ffdb to i32*
  store i32 %v2_804ffd7, i32* %v3_804ffdb, align 4
  %v1_804ffdc = trunc i32 %v2_804ffd9 to i16
  %v2_804ffdc = call i16 @llvm.bswap.i16(i16 %v1_804ffdc)
  %v3_804ffdc = zext i16 %v2_804ffdc to i32
  %v1_804ffe0 = udiv i32 %v2_804ffce, 65536
  %v2_804ffe0 = mul nuw i32 %v3_804ffdc, 65536
  %v1_804ffe3 = trunc i32 %v1_804ffe0 to i16
  %v2_804ffe3 = call i16 @llvm.bswap.i16(i16 %v1_804ffe3)
  %v3_804ffe3 = zext i16 %v2_804ffe3 to i32
  %v6_804ffe3 = or i32 %v2_804ffe0, %v3_804ffe3
  store i32 %v6_804ffe3, i32* %edx.global-to-local, align 4
  %v0_804ffe7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ffe7 = add i32 %v1_804ffdb, -8
  %v3_804ffe7 = inttoptr i32 %v2_804ffe7 to i32*
  store i32 %v0_804ffe7, i32* %v3_804ffe7, align 4
  %v0_804ffe8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804ffe8, i32* @global_var_8056110.26, align 16
  %v1_804ffee = add i32 %v1_804ffdb, -12
  %v2_804ffee = inttoptr i32 %v1_804ffee to i32*
  store i32 20, i32* %v2_804ffee, align 4
  %v1_804fff0 = add i32 %v1_804ffdb, -16
  %v2_804fff0 = inttoptr i32 %v1_804fff0 to i32*
  store i32 ptrtoint (i32* @global_var_8056100.27 to i32), i32* %v2_804fff0, align 4
  %v0_804fff5 = call i32 @function_804d5e0()
  %v1_804fff5 = trunc i32 %v0_804fff5 to i16
  store i32 %v0_804fff5, i32* %eax.global-to-local, align 4
  %v0_804fffa = load i32, i32* @esp, align 4
  %v1_804fffa = add i32 %v0_804fffa, 1872
  %v2_804fffa = inttoptr i32 %v1_804fffa to i32*
  %v3_804fffa = load i32, i32* %v2_804fffa, align 4
  store i16 %v1_804fff5, i16* bitcast (i32* @global_var_805610a.25 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_8050010 = ashr i32 %v3_804fffa, 31
  %v2_8050016 = zext i32 %v3_804fffa to i64
  %v4_8050016 = zext i32 %v2_8050010 to i64
  %v5_8050016 = mul nuw i64 %v4_8050016, 4294967296
  %v6_8050016 = or i64 %v5_8050016, %v2_8050016
  %v10_8050016 = srem i64 %v6_8050016, 10
  %v11_8050016 = trunc i64 %v10_8050016 to i32
  store i32 %v11_8050016, i32* %edx.global-to-local, align 4
  %v1_8050018 = icmp eq i32 %v11_8050016, 0
  %v1_805001a = icmp eq i1 %v1_8050018, false
  %. = select i1 %v1_805001a, i16 5888, i16 4873
  store i16 %., i16* @global_var_8056116.28, align 2
  %v0_8050029 = load i32, i32* @global_var_8056110.26, align 16
  store i32 %v0_8050029, i32* %eax.global-to-local, align 4
  %v1_805002e = add i32 %v0_804fffa, 12
  %v2_805002e = inttoptr i32 %v1_805002e to i32*
  store i32 20, i32* %v2_805002e, align 4
  %v0_8050030 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050030, i32* @global_var_8056118.29, align 8
  %v1_8050035 = add i32 %v0_804fffa, 8
  %v2_8050035 = inttoptr i32 %v1_8050035 to i32*
  store i32 5120, i32* %v2_8050035, align 4
  store i16 0, i16* bitcast (i32* @global_var_8056124.30 to i16*), align 4
  %v1_8050043 = add i32 %v0_804fffa, 4
  %v2_8050043 = inttoptr i32 %v1_8050043 to i32*
  store i32 ptrtoint (i32* @global_var_8056114.31 to i32), i32* %v2_8050043, align 4
  %v2_8050048 = inttoptr i32 %v0_804fffa to i32*
  store i32 ptrtoint (i32* @global_var_8056100.27 to i32), i32* %v2_8050048, align 4
  %v0_805004d = call i32 @function_804d630()
  %v1_805004d = trunc i32 %v0_805004d to i16
  store i16 %v1_805004d, i16* bitcast (i32* @global_var_8056124.30 to i16*), align 4
  %v0_8050058 = load i32, i32* @global_var_8056110.26, align 16
  store i32 %v0_8050058, i32* %eax.global-to-local, align 4
  %v1_805005d = load i32, i32* @esp, align 4
  %v2_805005d = add i32 %v1_805005d, 1832
  %v3_805005d = inttoptr i32 %v2_805005d to i32*
  store i32 %v0_8050058, i32* %v3_805005d, align 4
  %v0_8050064 = load i16, i16* @global_var_8056116.28, align 2
  %v1_8050064 = zext i16 %v0_8050064 to i32
  %v2_8050064 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050064 = and i32 %v2_8050064, -65536
  %v4_8050064 = or i32 %v3_8050064, %v1_8050064
  store i32 %v4_8050064, i32* %eax.global-to-local, align 4
  %v0_805006a = load i32, i32* @esp, align 4
  %v1_805006a = add i32 %v0_805006a, 1828
  %v2_805006a = inttoptr i32 %v1_805006a to i16*
  store i16 2, i16* %v2_805006a, align 2
  %v0_8050074 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050074 = trunc i32 %v0_8050074 to i16
  %v2_8050074 = load i32, i32* @esp, align 4
  %v3_8050074 = add i32 %v2_8050074, 1830
  %v4_8050074 = inttoptr i32 %v3_8050074 to i16*
  store i16 %v1_8050074, i16* %v4_8050074, align 2
  %v0_805007c = load i32, i32* @esp, align 4
  %v1_805007c = inttoptr i32 %v0_805007c to i32*
  %v3_805007c = add i32 %v0_805007c, 4
  %v0_805007d = load i32, i32* @global_var_8056178.32, align 8
  store i32 %v0_805007d, i32* %eax.global-to-local, align 4
  %v1_8050082 = inttoptr i32 %v3_805007c to i32*
  %v2_8050082 = load i32, i32* %v1_8050082, align 4
  store i32 %v2_8050082, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_8050082, align 4
  %v0_8050085 = load i32, i32* @ebp, align 4
  store i32 %v0_8050085, i32* %v1_805007c, align 4
  %v1_8050086 = add i32 %v0_805007c, -4
  %v2_8050086 = inttoptr i32 %v1_8050086 to i32*
  store i32 16384, i32* %v2_8050086, align 4
  %v1_805008b = add i32 %v0_805007c, -8
  %v2_805008b = inttoptr i32 %v1_805008b to i32*
  store i32 40, i32* %v2_805008b, align 4
  %v1_805008d = add i32 %v0_805007c, -12
  %v2_805008d = inttoptr i32 %v1_805008d to i32*
  store i32 ptrtoint (i32* @global_var_8056100.27 to i32), i32* %v2_805008d, align 4
  %v0_8050092 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050092 = add i32 %v0_805007c, -16
  %v3_8050092 = inttoptr i32 %v2_8050092 to i32*
  store i32 %v0_8050092, i32* %v3_8050092, align 4
  %v0_8050093 = call i32 @function_8052956()
  store i32 %v0_8050093, i32* %eax.global-to-local, align 4
  %v0_8050098 = load i32, i32* @esp, align 4
  %v1_8050098 = add i32 %v0_8050098, 1888
  %v2_8050098 = inttoptr i32 %v1_8050098 to i32*
  %v3_8050098 = load i32, i32* %v2_8050098, align 4
  %v1_805009f = add i32 %v3_8050098, 1
  store i32 %v1_805009f, i32* %eax.global-to-local, align 4
  store i32 %v1_805009f, i32* %v2_8050098, align 4
  %v0_80500a7 = load i32, i32* @esp, align 4
  %v1_80500a7 = add i32 %v0_80500a7, 32
  %v0_80500aa = load i32, i32* %eax.global-to-local, align 4
  %v1_80500aa = add i32 %v0_80500aa, -383
  %v6_80500aa = sub i32 382, %v0_80500aa
  %v7_80500aa = and i32 %v6_80500aa, %v0_80500aa
  %v8_80500aa = icmp slt i32 %v7_80500aa, 0
  %v9_80500aa = icmp eq i32 %v1_80500aa, 0
  %v10_80500aa = icmp slt i32 %v1_80500aa, 0
  %v3_80500af = icmp eq i1 %v10_80500aa, %v8_80500aa
  %v4_80500af = icmp eq i1 %v9_80500aa, false
  %v5_80500af = and i1 %v4_80500af, %v3_80500af
  br i1 %v5_80500af, label %dec_label_pc_80501ab, label %dec_label_pc_80500b5

dec_label_pc_80500b5:                             ; preds = %dec_label_pc_804ffb2, %dec_label_pc_804ff00
  %v0_80500b5 = phi i32 [ %v1_80500a7, %dec_label_pc_804ffb2 ], [ %v0_80500b5.pre, %dec_label_pc_804ff00 ]
  %v1_80500b5 = add i32 %v0_80500b5, 1812
  %v2_80500b5 = inttoptr i32 %v1_80500b5 to i32*
  store i32 0, i32* %v2_80500b5, align 4
  %v0_80500c0 = load i32, i32* @esp, align 4
  %v1_80500c0 = add i32 %v0_80500c0, 1816
  %v2_80500c0 = inttoptr i32 %v1_80500c0 to i32*
  store i32 0, i32* %v2_80500c0, align 4
  %v0_80500cb = load i32, i32* @esp, align 4
  %v1_80500cb = add i32 %v0_80500cb, 1820
  %v2_80500cb = inttoptr i32 %v1_80500cb to i32*
  store i32 0, i32* %v2_80500cb, align 4
  %v0_80500d6 = load i32, i32* @esp, align 4
  %v1_80500d6 = add i32 %v0_80500d6, 1824
  %v2_80500d6 = inttoptr i32 %v1_80500d6 to i32*
  store i32 0, i32* %v2_80500d6, align 4
  %v0_80500e1 = call i32 @function_804eb30()
  %v1_80500e1 = trunc i32 %v0_80500e1 to i16
  store i16 %v1_80500e1, i16* bitcast (i32* @global_var_8056104.33 to i16*), align 4
  %v0_80500ec = load i32, i32* @global_var_805615c.34, align 4
  store i32 %v0_80500ec, i32* %eax.global-to-local, align 4
  store i32 %v0_80500ec, i32* @global_var_805610c.35, align 4
  br label %dec_label_pc_80500f6.preheader

dec_label_pc_80500f6.preheader:                   ; preds = %dec_label_pc_80500b5, %dec_label_pc_804ff44, %dec_label_pc_804ff4f, %dec_label_pc_804ff58, %dec_label_pc_804ff61, %dec_label_pc_804ff6a, %dec_label_pc_804ff73, %dec_label_pc_804ff7c, %dec_label_pc_804ff85, %dec_label_pc_804ff8e, %dec_label_pc_804ff97, %dec_label_pc_804ffa0, %dec_label_pc_804ffa9, %dec_label_pc_8050160, %dec_label_pc_805017d, %dec_label_pc_804ff3b, %dec_label_pc_805018f
  br label %dec_label_pc_80500f6

dec_label_pc_80500f6:                             ; preds = %dec_label_pc_8050149, %dec_label_pc_8050132, %dec_label_pc_8050124, %dec_label_pc_805011f, %dec_label_pc_8050118, %dec_label_pc_8050114, %dec_label_pc_8050110, %dec_label_pc_80500f6, %dec_label_pc_80500f6.preheader
  %v0_80500f6 = call i32 @function_804eb30()
  store i32 %v0_80500f6, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_80500f6, 65536
  %v1_80500fb = sdiv i32 %sext, 65536
  %v2_8050101 = urem i32 %v0_80500f6, 256
  %v3_8050101 = load i32, i32* @ecx, align 4
  %v4_8050101 = and i32 %v3_8050101, -256
  %v5_8050101 = or i32 %v4_8050101, %v2_8050101
  store i32 %v5_8050101, i32* @ecx, align 4
  %v2_8050103 = udiv i32 %v1_80500fb, 256
  store i32 %v2_8050103, i32* @ebx, align 4
  %v2_8050106 = udiv i32 %v1_80500fb, 65536
  store i32 %v2_8050106, i32* @edx, align 4
  %v2_8050109 = udiv i32 %v1_80500fb, 16777216
  store i32 %v2_8050109, i32* @edi, align 4
  %v2_805010c = trunc i32 %v0_80500f6 to i8
  %v11_805010c = icmp eq i8 %v2_805010c, 127
  br i1 %v11_805010c, label %dec_label_pc_80500f6, label %dec_label_pc_8050110

dec_label_pc_8050110:                             ; preds = %dec_label_pc_80500f6
  %v6_8050110 = icmp eq i8 %v2_805010c, 0
  br i1 %v6_8050110, label %dec_label_pc_80500f6, label %dec_label_pc_8050114

dec_label_pc_8050114:                             ; preds = %dec_label_pc_8050110
  %v11_8050114 = icmp eq i8 %v2_805010c, 3
  br i1 %v11_8050114, label %dec_label_pc_80500f6, label %dec_label_pc_8050118

dec_label_pc_8050118:                             ; preds = %dec_label_pc_8050114
  %v2_8050118 = add nsw i32 %v1_80500fb, -15
  store i32 %v2_8050118, i32* %eax.global-to-local, align 4
  %v1_805011b = trunc i32 %v2_8050118 to i8
  %tmp258 = or i8 %v1_805011b, 1
  %tmp259 = icmp eq i8 %tmp258, 1
  br i1 %tmp259, label %dec_label_pc_80500f6, label %dec_label_pc_805011f

dec_label_pc_805011f:                             ; preds = %dec_label_pc_8050118
  %v10_805011f = icmp eq i8 %v2_805010c, 56
  br i1 %v10_805011f, label %dec_label_pc_80500f6, label %dec_label_pc_8050124

dec_label_pc_8050124:                             ; preds = %dec_label_pc_805011f
  %v10_8050124 = icmp eq i8 %v2_805010c, 10
  br i1 %v10_8050124, label %dec_label_pc_80500f6, label %dec_label_pc_8050129

dec_label_pc_8050129:                             ; preds = %dec_label_pc_8050124
  %v8_8050129 = icmp eq i8 %v2_805010c, -64
  %v1_805012c = icmp eq i1 %v8_8050129, false
  br i1 %v1_805012c, label %dec_label_pc_804ff17, label %dec_label_pc_8050132

dec_label_pc_8050132:                             ; preds = %dec_label_pc_8050129
  %v1_8050132 = trunc i32 %v2_8050103 to i8
  %v11_8050132 = icmp eq i8 %v1_8050132, -88
  br i1 %v11_8050132, label %dec_label_pc_80500f6, label %dec_label_pc_8050137

dec_label_pc_8050137:                             ; preds = %dec_label_pc_8050132
  %v10_8050137 = icmp eq i8 %v2_805010c, 100
  %v1_805013a = icmp eq i1 %v10_8050137, false
  br i1 %v1_805013a, label %dec_label_pc_804ff29, label %dec_label_pc_8050140

dec_label_pc_8050140:                             ; preds = %dec_label_pc_804ff20.dec_label_pc_8050140_crit_edge, %dec_label_pc_8050137
  %v1_8050140.pre-phi = phi i8 [ %.pre, %dec_label_pc_804ff20.dec_label_pc_8050140_crit_edge ], [ %v1_8050132, %dec_label_pc_8050137 ]
  %tmp260 = icmp ult i8 %v1_8050140.pre-phi, 64
  br i1 %tmp260, label %dec_label_pc_804ff44, label %dec_label_pc_8050149

dec_label_pc_8050149:                             ; preds = %dec_label_pc_8050140
  %tmp261 = icmp ult i8 %v1_8050140.pre-phi, 127
  br i1 %tmp261, label %dec_label_pc_80500f6, label %dec_label_pc_805014e

dec_label_pc_805014e:                             ; preds = %dec_label_pc_8050149
  %v11_805014e = icmp eq i8 %v2_805010c, -58
  %v1_8050151 = icmp eq i1 %v11_805014e, false
  br i1 %v1_8050151, label %dec_label_pc_804ff3b, label %dec_label_pc_8050157

dec_label_pc_8050157:                             ; preds = %dec_label_pc_805014e, %dec_label_pc_804ff32
  %v0_8050160 = phi i32 [ %v2_8050103, %dec_label_pc_805014e ], [ %v0_804ffba66, %dec_label_pc_804ff32 ]
  %v0_804ff4462 = phi i32 [ %v5_8050101, %dec_label_pc_805014e ], [ %v0_804ff32, %dec_label_pc_804ff32 ]
  %v1_8050157 = trunc i32 %v0_8050160 to i8
  %tmp262 = icmp ult i8 %v1_8050157, 18
  br i1 %tmp262, label %dec_label_pc_804ff44, label %dec_label_pc_8050160

dec_label_pc_8050160:                             ; preds = %dec_label_pc_8050157
  %tmp263 = or i8 %v1_8050157, 1
  %tmp264 = icmp eq i8 %tmp263, 19
  br i1 %tmp264, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_804ff44

dec_label_pc_805016a:                             ; preds = %dec_label_pc_8050fea
  store i32 0, i32* %v2_805016d, align 4
  %v1_805016f = call i32 @function_8053bcd(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805016f, i32* %eax.global-to-local, align 4
  %v0_8050174.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050174

dec_label_pc_8050174:                             ; preds = %dec_label_pc_804ff17, %dec_label_pc_805016a
  %v0_805017d = phi i32 [ %v0_8050174.pre, %dec_label_pc_805016a ], [ %v2_8050103, %dec_label_pc_804ff17 ]
  %v1_8050174 = trunc i32 %v0_805017d to i8
  %tmp265 = icmp ult i8 %v1_8050174, 16
  br i1 %tmp265, label %dec_label_pc_8050174.dec_label_pc_804ff44_crit_edge, label %dec_label_pc_805017d

dec_label_pc_8050174.dec_label_pc_804ff44_crit_edge: ; preds = %dec_label_pc_8050174
  %v0_804ff44.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ff44

dec_label_pc_805017d:                             ; preds = %dec_label_pc_8050174
  %tmp266 = icmp ult i8 %v1_8050174, 32
  br i1 %tmp266, label %dec_label_pc_80500f6.preheader, label %dec_label_pc_8050186

dec_label_pc_8050186:                             ; preds = %dec_label_pc_805017d
  %v0_8050186 = load i32, i32* @ecx, align 4
  %v1_8050186 = trunc i32 %v0_8050186 to i8
  %v11_8050186 = icmp eq i8 %v1_8050186, -87
  %v1_8050189 = icmp eq i1 %v11_8050186, false
  br i1 %v1_8050189, label %dec_label_pc_804ff32, label %dec_label_pc_805018f

dec_label_pc_805018f:                             ; preds = %dec_label_pc_8050186, %dec_label_pc_804ff29
  %v0_804ff3b73 = phi i32 [ %v0_8050186, %dec_label_pc_8050186 ], [ %v5_8050101, %dec_label_pc_804ff29 ]
  %v0_805018f = phi i32 [ %v0_805017d, %dec_label_pc_8050186 ], [ %v2_8050103, %dec_label_pc_804ff29 ]
  %v1_805018f = trunc i32 %v0_805018f to i8
  %v11_805018f = icmp eq i8 %v1_805018f, -1
  %v1_8050192 = icmp eq i1 %v11_805018f, false
  br i1 %v1_8050192, label %dec_label_pc_804ff3b, label %dec_label_pc_80500f6.preheader

dec_label_pc_80501ab:                             ; preds = %dec_label_pc_804ffb2
  %v0_80501ab = load i32, i32* @esi, align 4
  %v2_80501ab = add i32 %v0_80500a7, 48
  %v3_80501ab = inttoptr i32 %v2_80501ab to i32*
  store i32 %v0_80501ab, i32* %v3_80501ab, align 4
  br label %dec_label_pc_80501af

dec_label_pc_80501af:                             ; preds = %.loopexit, %dec_label_pc_80501ab
  %v1_80501af = call i32 @function_80526fd(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80501af, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80501b6 = load i32, i32* @esp, align 4
  %v2_80501b6 = add i32 %v1_80501b6, 24
  %v3_80501b6 = inttoptr i32 %v2_80501b6 to i32*
  store i32 %v1_80501af, i32* %v3_80501b6, align 4
  br label %dec_label_pc_80501ba

dec_label_pc_80501ba:                             ; preds = %dec_label_pc_8050257, %dec_label_pc_805024f, %dec_label_pc_8050247, %dec_label_pc_805023f, %dec_label_pc_8050233, %dec_label_pc_8050227, %dec_label_pc_8050220, %dec_label_pc_805020e, %dec_label_pc_8050202, %dec_label_pc_80501fd, %dec_label_pc_80502b9, %dec_label_pc_80501af
  %v0_80501ba = load i32, i32* @esp, align 4
  %v1_80501ba = add i32 %v0_80501ba, 24
  %v2_80501ba = inttoptr i32 %v1_80501ba to i32*
  %v3_80501ba = load i32, i32* %v2_80501ba, align 4
  store i32 %v3_80501ba, i32* %eax.global-to-local, align 4
  %v1_80501be = inttoptr i32 %v3_80501ba to i32*
  store i32 0, i32* %v1_80501be, align 4
  %v0_80501c4 = load i32, i32* @edi, align 4
  %v1_80501c4 = load i32, i32* @esp, align 4
  %v2_80501c4 = add i32 %v1_80501c4, -4
  %v3_80501c4 = inttoptr i32 %v2_80501c4 to i32*
  store i32 %v0_80501c4, i32* %v3_80501c4, align 4
  %v0_80501c5 = load i32, i32* @edi, align 4
  %v2_80501c5 = add i32 %v1_80501c4, -8
  %v3_80501c5 = inttoptr i32 %v2_80501c5 to i32*
  store i32 %v0_80501c5, i32* %v3_80501c5, align 4
  %v1_80501c6 = add i32 %v1_80501c4, -12
  %v2_80501c6 = inttoptr i32 %v1_80501c6 to i32*
  store i32 0, i32* %v2_80501c6, align 4
  %v1_80501c8 = add i32 %v1_80501c4, -16
  %v2_80501c8 = inttoptr i32 %v1_80501c8 to i32*
  store i32 0, i32* %v2_80501c8, align 4
  %v1_80501ca = add i32 %v1_80501c4, -20
  %v2_80501ca = inttoptr i32 %v1_80501ca to i32*
  store i32 16384, i32* %v2_80501ca, align 4
  %v1_80501cf = add i32 %v1_80501c4, -24
  %v2_80501cf = inttoptr i32 %v1_80501cf to i32*
  store i32 1514, i32* %v2_80501cf, align 4
  %v0_80501d4 = load i32, i32* @global_var_8056178.32, align 8
  store i32 %v0_80501d4, i32* %esi.global-to-local, align 4
  %v1_80501da = add i32 %v1_80501c4, 42
  store i32 %v1_80501da, i32* %edx.global-to-local, align 4
  %v2_80501de = add i32 %v1_80501c4, -28
  %v3_80501de = inttoptr i32 %v2_80501de to i32*
  store i32 %v1_80501da, i32* %v3_80501de, align 4
  %v0_80501df = load i32, i32* %esi.global-to-local, align 4
  %v2_80501df = add i32 %v1_80501c4, -32
  %v3_80501df = inttoptr i32 %v2_80501df to i32*
  store i32 %v0_80501df, i32* %v3_80501df, align 4
  %v0_80501e0 = call i32 @function_80528e0()
  store i32 %v0_80501e0, i32* %eax.global-to-local, align 4
  %v0_80501e5 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_80501e0, 1
  br i1 %tmp, label %dec_label_pc_80502d0, label %dec_label_pc_80501f0

dec_label_pc_80501f0:                             ; preds = %dec_label_pc_80501ba
  %v1_80501f0 = add i32 %v0_80501e5, 56
  %v2_80501f0 = inttoptr i32 %v1_80501f0 to i32*
  %v3_80501f0 = load i32, i32* %v2_80501f0, align 4
  store i32 %v3_80501f0, i32* %ecx.global-to-local, align 4
  %v1_80501f4 = inttoptr i32 %v3_80501f0 to i32*
  %v2_80501f4 = load i32, i32* %v1_80501f4, align 4
  %v11_80501f4 = icmp eq i32 %v2_80501f4, 11
  br i1 %v11_80501f4, label %dec_label_pc_80502d0, label %dec_label_pc_80501fd

dec_label_pc_80501fd:                             ; preds = %dec_label_pc_80501f0
  %tmp267 = icmp ult i32 %v0_80501e0, 40
  br i1 %tmp267, label %dec_label_pc_80501ba, label %dec_label_pc_8050202

dec_label_pc_8050202:                             ; preds = %dec_label_pc_80501fd
  %v1_8050202 = add i32 %v0_80501e5, 90
  %v2_8050202 = inttoptr i32 %v1_8050202 to i32*
  %v3_8050202 = load i32, i32* %v2_8050202, align 4
  store i32 %v3_8050202, i32* %eax.global-to-local, align 4
  %v1_8050206 = load i32, i32* @global_var_805615c.34, align 4
  %v12_8050206 = icmp eq i32 %v3_8050202, %v1_8050206
  %v1_805020c = icmp eq i1 %v12_8050206, false
  br i1 %v1_805020c, label %dec_label_pc_80501ba, label %dec_label_pc_805020e

dec_label_pc_805020e:                             ; preds = %dec_label_pc_8050202
  %v1_805020e = add i32 %v0_80501e5, 83
  %v2_805020e = inttoptr i32 %v1_805020e to i8*
  %v3_805020e = load i8, i8* %v2_805020e, align 1
  %v12_805020e = icmp eq i8 %v3_805020e, 6
  %v1_8050213 = icmp eq i1 %v12_805020e, false
  br i1 %v1_8050213, label %dec_label_pc_80501ba, label %dec_label_pc_8050215

dec_label_pc_8050215:                             ; preds = %dec_label_pc_805020e
  %v1_8050215 = add i32 %v0_80501e5, 94
  %v2_8050215 = inttoptr i32 %v1_8050215 to i32*
  %v3_8050215 = load i32, i32* %v2_8050215, align 4
  store i32 %v3_8050215, i32* %esi.global-to-local, align 4
  %v1_8050219 = trunc i32 %v3_8050215 to i16
  %v7_8050219 = icmp eq i16 %v1_8050219, 5888
  br i1 %v7_8050219, label %dec_label_pc_8050227, label %dec_label_pc_8050220

dec_label_pc_8050220:                             ; preds = %dec_label_pc_8050215
  %v10_8050220 = icmp eq i16 %v1_8050219, 4873
  %v1_8050225 = icmp eq i1 %v10_8050220, false
  br i1 %v1_8050225, label %dec_label_pc_80501ba, label %dec_label_pc_8050227

dec_label_pc_8050227:                             ; preds = %dec_label_pc_8050220, %dec_label_pc_8050215
  %v1_8050227 = add i32 %v0_80501e5, 46
  %v2_8050227 = inttoptr i32 %v1_8050227 to i16*
  %v3_8050227 = load i16, i16* %v2_8050227, align 2
  %v4_8050227 = zext i16 %v3_8050227 to i32
  %v6_8050227 = and i32 %v3_8050202, -65536
  %v7_8050227 = or i32 %v4_8050227, %v6_8050227
  store i32 %v7_8050227, i32* %eax.global-to-local, align 4
  %v3_805022c = add i32 %v0_80501e5, 96
  %v4_805022c = inttoptr i32 %v3_805022c to i16*
  %v5_805022c = load i16, i16* %v4_805022c, align 2
  %v16_805022c = icmp eq i16 %v3_8050227, %v5_805022c
  %v1_8050231 = icmp eq i1 %v16_805022c, false
  br i1 %v1_8050231, label %dec_label_pc_80501ba, label %dec_label_pc_8050233

dec_label_pc_8050233:                             ; preds = %dec_label_pc_8050227
  %v1_8050233 = add i32 %v0_80501e5, 107
  %v2_8050233 = inttoptr i32 %v1_8050233 to i8*
  %v3_8050233 = load i8, i8* %v2_8050233, align 1
  %v4_8050233 = zext i8 %v3_8050233 to i32
  %v6_8050233 = and i32 %v7_8050227, -256
  %v7_8050233 = or i32 %v4_8050233, %v6_8050233
  store i32 %v7_8050233, i32* %eax.global-to-local, align 4
  %v2_8050237 = and i8 %v3_8050233, 2
  %v3_8050237 = icmp eq i8 %v2_8050237, 0
  br i1 %v3_8050237, label %dec_label_pc_80501ba, label %dec_label_pc_805023f

dec_label_pc_805023f:                             ; preds = %dec_label_pc_8050233
  %v2_805023f = and i32 %v4_8050233, 16
  %v3_805023f = icmp eq i32 %v2_805023f, 0
  br i1 %v3_805023f, label %dec_label_pc_80501ba, label %dec_label_pc_8050247

dec_label_pc_8050247:                             ; preds = %dec_label_pc_805023f
  %v2_8050247 = and i32 %v4_8050233, 4
  %v3_8050247 = icmp eq i32 %v2_8050247, 0
  %v1_8050249 = icmp eq i1 %v3_8050247, false
  br i1 %v1_8050249, label %dec_label_pc_80501ba, label %dec_label_pc_805024f

dec_label_pc_805024f:                             ; preds = %dec_label_pc_8050247
  %tmp274 = urem i8 %v3_8050233, 2
  %v3_805024f = icmp eq i8 %tmp274, 0
  %v1_8050251 = icmp eq i1 %v3_805024f, false
  br i1 %v1_8050251, label %dec_label_pc_80501ba, label %dec_label_pc_8050257

dec_label_pc_8050257:                             ; preds = %dec_label_pc_805024f
  %v1_8050257 = add i32 %v0_80501e5, 102
  %v2_8050257 = inttoptr i32 %v1_8050257 to i32*
  %v3_8050257 = load i32, i32* %v2_8050257, align 4
  %v1_805025b = trunc i32 %v3_8050257 to i16
  %v2_805025b = call i16 @llvm.bswap.i16(i16 %v1_805025b)
  %v3_805025b = zext i16 %v2_805025b to i32
  %v1_805025f = udiv i32 %v3_8050257, 65536
  %v2_805025f = mul nuw i32 %v3_805025b, 65536
  %v1_8050262 = trunc i32 %v1_805025f to i16
  %v2_8050262 = call i16 @llvm.bswap.i16(i16 %v1_8050262)
  %v3_8050262 = zext i16 %v2_8050262 to i32
  %v6_8050262 = or i32 %v3_8050262, %v2_805025f
  store i32 %v6_8050262, i32* %eax.global-to-local, align 4
  %v1_8050266 = add i32 %v6_8050262, -1
  %v1_8050269 = trunc i32 %v1_8050266 to i16
  %v2_8050269 = call i16 @llvm.bswap.i16(i16 %v1_8050269)
  %v3_8050269 = zext i16 %v2_8050269 to i32
  %v1_805026d = udiv i32 %v1_8050266, 65536
  %v2_805026d = mul nuw i32 %v3_8050269, 65536
  %v1_8050270 = trunc i32 %v1_805026d to i16
  %v2_8050270 = call i16 @llvm.bswap.i16(i16 %v1_8050270)
  %v3_8050270 = zext i16 %v2_8050270 to i32
  %v6_8050270 = or i32 %v3_8050270, %v2_805026d
  store i32 %v6_8050270, i32* %edx.global-to-local, align 4
  %v1_8050274 = add i32 %v0_80501e5, 86
  %v2_8050274 = inttoptr i32 %v1_8050274 to i32*
  %v3_8050274 = load i32, i32* %v2_8050274, align 4
  %v15_8050274 = icmp eq i32 %v3_8050274, %v6_8050270
  %v1_8050278 = icmp eq i1 %v15_8050274, false
  br i1 %v1_8050278, label %dec_label_pc_80501ba, label %dec_label_pc_805027e

dec_label_pc_805027e:                             ; preds = %dec_label_pc_8050257
  %v0_805027e = load i32, i32* @ebx, align 4
  %v1_805027e = add i32 %v0_805027e, -255
  %v6_805027e = sub i32 254, %v0_805027e
  %v7_805027e = and i32 %v6_805027e, %v0_805027e
  %v8_805027e = icmp slt i32 %v7_805027e, 0
  %v9_805027e = icmp eq i32 %v1_805027e, 0
  %v10_805027e = icmp slt i32 %v1_805027e, 0
  %v3_8050284 = icmp eq i1 %v10_805027e, %v8_805027e
  %v4_8050284 = icmp eq i1 %v9_805027e, false
  %v5_8050284 = and i1 %v4_8050284, %v3_8050284
  br i1 %v5_8050284, label %dec_label_pc_80502d0, label %dec_label_pc_8050286

dec_label_pc_8050286:                             ; preds = %dec_label_pc_805027e
  %v0_8050289 = load i32, i32* @global_var_8056174.36, align 4
  store i32 %v0_8050289, i32* %ecx.global-to-local, align 4
  %v2_805028f = mul i32 %v0_805027e, 288
  %v2_8050292 = add i32 %v0_8050289, %v2_805028f
  store i32 %v2_8050292, i32* @eax, align 4
  %v1_8050294 = add i32 %v2_8050292, 12
  %v2_8050294 = inttoptr i32 %v1_8050294 to i32*
  %v3_8050294 = load i32, i32* %v2_8050294, align 4
  %v1_8050297 = add i32 %v2_8050292, 288
  store i32 %v1_8050297, i32* %ecx.global-to-local, align 4
  %v1_805029d = icmp eq i32 %v3_8050294, 0
  br i1 %v1_805029d, label %dec_label_pc_80502b9, label %dec_label_pc_80502a1

dec_label_pc_80502a1:                             ; preds = %dec_label_pc_8050286, %dec_label_pc_80502aa
  %v0_80502aa = phi i32 [ %v1_80502ac, %dec_label_pc_80502aa ], [ %v1_8050297, %dec_label_pc_8050286 ]
  %v0_80502a1 = phi i32 [ %v1_80502a1, %dec_label_pc_80502aa ], [ %v0_805027e, %dec_label_pc_8050286 ]
  %v1_80502a1 = add i32 %v0_80502a1, 1
  store i32 %v1_80502a1, i32* @ebx, align 4
  %v6_80502a2 = icmp eq i32 %v0_80502a1, 255
  br i1 %v6_80502a2, label %dec_label_pc_80502d0.loopexit, label %dec_label_pc_80502aa

dec_label_pc_80502aa:                             ; preds = %dec_label_pc_80502a1
  store i32 %v0_80502aa, i32* @eax, align 4
  %v1_80502ac = add i32 %v0_80502aa, 288
  store i32 %v1_80502ac, i32* %ecx.global-to-local, align 4
  %v1_80502b2 = add i32 %v0_80502aa, 12
  %v2_80502b2 = inttoptr i32 %v1_80502b2 to i32*
  %v3_80502b2 = load i32, i32* %v2_80502b2, align 4
  store i32 %v3_80502b2, i32* @edi, align 4
  %v1_80502b5 = icmp eq i32 %v3_80502b2, 0
  %v1_80502b7 = icmp eq i1 %v1_80502b5, false
  br i1 %v1_80502b7, label %dec_label_pc_80502a1, label %dec_label_pc_80502b9.loopexit

dec_label_pc_80502b9.loopexit:                    ; preds = %dec_label_pc_80502aa
  br label %dec_label_pc_80502b9

dec_label_pc_80502b9:                             ; preds = %dec_label_pc_80502b9.loopexit, %dec_label_pc_8050286
  %v1_80502b9 = phi i32 [ %v0_80502aa, %dec_label_pc_80502b9.loopexit ], [ %v2_8050292, %dec_label_pc_8050286 ]
  %v2_80502b9 = add i32 %v1_80502b9, 16
  %v3_80502b9 = inttoptr i32 %v2_80502b9 to i32*
  store i32 %v6_8050270, i32* %v3_80502b9, align 4
  %v0_80502bc = load i32, i32* %esi.global-to-local, align 4
  %v1_80502bc = trunc i32 %v0_80502bc to i16
  %v2_80502bc = load i32, i32* @eax, align 4
  %v3_80502bc = add i32 %v2_80502bc, 20
  %v4_80502bc = inttoptr i32 %v3_80502bc to i16*
  store i16 %v1_80502bc, i16* %v4_80502bc, align 2
  %v0_80502c0 = call i32 @function_804ec90()
  store i32 %v0_80502c0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80501ba

dec_label_pc_80502d0.loopexit:                    ; preds = %dec_label_pc_80502a1
  br label %dec_label_pc_80502d0

dec_label_pc_80502d0:                             ; preds = %dec_label_pc_805027e, %dec_label_pc_80501f0, %dec_label_pc_80501ba, %dec_label_pc_80502d0.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_80502d9 = add i32 %v0_80501e5, 36
  %v2_80502d9 = inttoptr i32 %v1_80502d9 to i32*
  %v3_80502d9 = load i32, i32* %v2_80502d9, align 4
  %v4_80502d9 = inttoptr i32 %v3_80502d9 to i8*
  %v5_80502de = call i8* @_memset(i8* %v4_80502d9, i32 0, i32 32)
  %v0_80502e0 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80502e0, i32* %ecx.global-to-local, align 4
  %v0_80502e2 = load i32, i32* @esp, align 4
  %v1_80502e2 = inttoptr i32 %v0_80502e2 to i32*
  %v2_80502e2 = load i32, i32* %v1_80502e2, align 4
  %v3_80502e2 = inttoptr i32 %v2_80502e2 to i8*
  %v2_80502e6 = load i32, i32* %eax.global-to-local, align 4
  %v5_80502e6 = call i8* @_memset(i8* %v3_80502e2, i32 %v2_80502e6, i32 %v0_80502e0)
  %v6_80502e6 = ptrtoint i8* %v5_80502e6 to i32
  store i32 %v6_80502e6, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_80502ea = load i32, i32* @esp, align 4
  %v1_80502ea = add i32 %v0_80502ea, 1856
  %v2_80502ea = inttoptr i32 %v1_80502ea to i32*
  store i32 0, i32* %v2_80502ea, align 4
  store i32 0, i32* @esi, align 4
  %v0_80502f7.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80502f7

dec_label_pc_80502f7:                             ; preds = %dec_label_pc_805034a, %dec_label_pc_80502d0
  %v0_80502f7 = phi i32 [ %v0_8050359, %dec_label_pc_805034a ], [ %v0_80502f7.pre, %dec_label_pc_80502d0 ]
  %v0_80502fa = load i32, i32* @global_var_8056174.36, align 4
  store i32 %v0_80502fa, i32* %eax.global-to-local, align 4
  %v2_80502ff = mul i32 %v0_80502f7, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_8050307 = add i32 %v0_80502fa, %v2_80502ff
  store i32 %v2_8050307, i32* @ebx, align 4
  %v1_8050309 = add i32 %v2_8050307, 12
  %v2_8050309 = inttoptr i32 %v1_8050309 to i32*
  %v3_8050309 = load i32, i32* %v2_8050309, align 4
  store i32 %v3_8050309, i32* %edx.global-to-local, align 4
  %v1_805030c = add i32 %v3_8050309, -1
  %v5_805030c = icmp eq i32 %v3_8050309, 0
  %v9_805030c = icmp eq i32 %v1_805030c, 0
  %v2_805030f = or i1 %v5_805030c, %v9_805030c
  br i1 %v2_805030f, label %dec_label_pc_8050de7, label %dec_label_pc_8050315

dec_label_pc_8050315:                             ; preds = %dec_label_pc_80502f7, %dec_label_pc_8050def
  %v1_805031f = phi i32 [ 30, %dec_label_pc_80502f7 ], [ 5, %dec_label_pc_8050def ]
  %v0_8050315 = load i32, i32* @global_var_8056130.24, align 16
  store i32 %v0_8050315, i32* %eax.global-to-local, align 4
  %v1_805031a = add i32 %v2_8050307, 8
  %v2_805031a = inttoptr i32 %v1_805031a to i32*
  %v3_805031a = load i32, i32* %v2_805031a, align 4
  %v2_805031d = sub i32 %v0_8050315, %v3_805031a
  store i32 %v2_805031d, i32* %eax.global-to-local, align 4
  %tmp268 = icmp ugt i32 %v2_805031d, %v1_805031f
  br i1 %tmp268, label %dec_label_pc_8050eb0, label %dec_label_pc_8050327

dec_label_pc_8050327:                             ; preds = %dec_label_pc_8050315
  store i32 %v1_805030c, i32* %edx.global-to-local, align 4
  %v1_8050df6 = add i32 %v2_8050307, 4
  %v2_8050df6 = inttoptr i32 %v1_8050df6 to i32*
  %v3_8050df6 = load i32, i32* %v2_8050df6, align 4
  %v1_8050dfb = urem i32 %v3_8050df6, 32
  store i32 %v1_8050dfb, i32* %eax.global-to-local, align 4
  %v2_8050dfe = udiv i32 %v3_8050df6, 32
  store i32 %v2_8050dfe, i32* %edx.global-to-local, align 4
  %v0_8050e01 = load i32, i32* @esp, align 4
  %v2_8050e01 = mul nuw nsw i32 %v2_8050dfe, 4
  br i1 %v9_805030c, label %dec_label_pc_8050df6, label %dec_label_pc_805032e

dec_label_pc_805032e:                             ; preds = %dec_label_pc_8050327
  %v3_8050339 = add nuw nsw i32 %v2_8050e01, 1684
  %v4_8050339 = add i32 %v3_8050339, %v0_8050e01
  %v5_8050339 = inttoptr i32 %v4_8050339 to i32*
  %v6_8050339 = load i32, i32* %v5_8050339, align 4
  %v9_8050339 = shl i32 1, %v1_8050dfb
  %v12_8050339 = or i32 %v6_8050339, %v9_8050339
  store i32 %v12_8050339, i32* %v5_8050339, align 4
  %v0_8050341 = load i32, i32* @ebx, align 4
  %v1_8050341 = add i32 %v0_8050341, 4
  %v2_8050341 = inttoptr i32 %v1_8050341 to i32*
  %v3_8050341 = load i32, i32* %v2_8050341, align 4
  store i32 %v3_8050341, i32* %eax.global-to-local, align 4
  %v0_8050344 = load i32, i32* @edi, align 4
  %v2_8050344 = sub i32 %v0_8050344, %v3_8050341
  %v8_8050344 = xor i32 %v0_8050344, %v3_8050341
  %v9_8050344 = xor i32 %v2_8050344, %v0_8050344
  %v10_8050344 = and i32 %v9_8050344, %v8_8050344
  %v11_8050344 = icmp slt i32 %v10_8050344, 0
  %v13_8050344 = icmp slt i32 %v2_8050344, 0
  %v2_8050346 = icmp eq i1 %v13_8050344, %v11_8050344
  br i1 %v2_8050346, label %dec_label_pc_805034a, label %dec_label_pc_8050348

dec_label_pc_8050348:                             ; preds = %dec_label_pc_805032e
  store i32 %v3_8050341, i32* @edi, align 4
  br label %dec_label_pc_805034a

dec_label_pc_805034a:                             ; preds = %dec_label_pc_8050df6, %dec_label_pc_8050de7, %dec_label_pc_805032e, %dec_label_pc_8050ef0, %dec_label_pc_8050edd, %dec_label_pc_8050e14, %dec_label_pc_8050348
  %v0_805034a = load i32, i32* @esp, align 4
  %v1_805034a = add i32 %v0_805034a, 1856
  %v2_805034a = inttoptr i32 %v1_805034a to i32*
  %v3_805034a = load i32, i32* %v2_805034a, align 4
  %v1_8050351 = add i32 %v3_805034a, 1
  store i32 %v1_8050351, i32* %eax.global-to-local, align 4
  store i32 %v1_8050351, i32* %v2_805034a, align 4
  %v0_8050359 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050359 = add i32 %v0_8050359, -255
  %v6_8050359 = sub i32 254, %v0_8050359
  %v7_8050359 = and i32 %v6_8050359, %v0_8050359
  %v8_8050359 = icmp slt i32 %v7_8050359, 0
  %v9_8050359 = icmp eq i32 %v1_8050359, 0
  %v10_8050359 = icmp slt i32 %v1_8050359, 0
  %v3_805035e = icmp ne i1 %v10_8050359, %v8_8050359
  %v4_805035e = or i1 %v9_8050359, %v3_805035e
  br i1 %v4_805035e, label %dec_label_pc_80502f7, label %dec_label_pc_8050360

dec_label_pc_8050360:                             ; preds = %dec_label_pc_805034a
  %v0_8050360 = load i32, i32* @esp, align 4
  %v1_8050360 = add i32 %v0_8050360, 1844
  %v2_8050360 = inttoptr i32 %v1_8050360 to i32*
  store i32 0, i32* %v2_8050360, align 4
  %v0_805036b = load i32, i32* @esp, align 4
  %v1_805036b = add i32 %v0_805036b, 1840
  %v2_805036b = inttoptr i32 %v1_805036b to i32*
  store i32 1, i32* %v2_805036b, align 4
  %v0_8050376 = load i32, i32* @esp, align 4
  %v0_8050379 = load i32, i32* @edi, align 4
  %v1_8050379 = load i32, i32* @esi, align 4
  %v2_8050379 = sub i32 %v0_8050379, %v1_8050379
  %v8_8050379 = xor i32 %v1_8050379, %v0_8050379
  %v9_8050379 = xor i32 %v2_8050379, %v0_8050379
  %v10_8050379 = and i32 %v9_8050379, %v8_8050379
  %v11_8050379 = icmp slt i32 %v10_8050379, 0
  %v13_8050379 = icmp slt i32 %v2_8050379, 0
  %v1_805037b = add i32 %v0_8050376, 1840
  %v2_8050382 = add i32 %v0_8050376, -16
  %v3_8050382 = inttoptr i32 %v2_8050382 to i32*
  store i32 %v1_805037b, i32* %v3_8050382, align 4
  %v1_8050383 = add i32 %v0_8050376, -20
  %v2_8050383 = inttoptr i32 %v1_8050383 to i32*
  store i32 0, i32* %v2_8050383, align 4
  %v1_8050385 = add i32 %v0_8050376, 1556
  store i32 %v1_8050385, i32* %edx.global-to-local, align 4
  %v0_805038c = load i32, i32* @edi, align 4
  store i32 %v0_805038c, i32* %eax.global-to-local, align 4
  %v2_805038e = add i32 %v0_8050376, -24
  %v3_805038e = inttoptr i32 %v2_805038e to i32*
  store i32 %v1_8050385, i32* %v3_805038e, align 4
  %v1_805038f = add i32 %v0_8050376, 1684
  store i32 %v1_805038f, i32* %ecx.global-to-local, align 4
  %v2_8050396 = add i32 %v0_8050376, -28
  %v3_8050396 = inttoptr i32 %v2_8050396 to i32*
  store i32 %v1_805038f, i32* %v3_8050396, align 4
  %v2_8050397 = icmp eq i1 %v13_8050379, %v11_8050379
  br i1 %v2_8050397, label %dec_label_pc_8050360.dec_label_pc_805039b_crit_edge, label %dec_label_pc_8050399

dec_label_pc_8050360.dec_label_pc_805039b_crit_edge: ; preds = %dec_label_pc_8050360
  %v0_805039b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805039b

dec_label_pc_8050399:                             ; preds = %dec_label_pc_8050360
  %v0_8050399 = load i32, i32* @esi, align 4
  store i32 %v0_8050399, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805039b

dec_label_pc_805039b:                             ; preds = %dec_label_pc_8050360.dec_label_pc_805039b_crit_edge, %dec_label_pc_8050399
  %v0_805039b = phi i32 [ %v0_805039b.pre, %dec_label_pc_8050360.dec_label_pc_805039b_crit_edge ], [ %v0_8050399, %dec_label_pc_8050399 ]
  %v1_805039b = add i32 %v0_805039b, 1
  store i32 %v1_805039b, i32* %eax.global-to-local, align 4
  %v2_805039c = add i32 %v0_8050376, -32
  %v3_805039c = inttoptr i32 %v2_805039c to i32*
  store i32 %v1_805039b, i32* %v3_805039c, align 4
  %v0_805039d = call i32 @function_80523fa()
  store i32 %v0_805039d, i32* %eax.global-to-local, align 4
  %v0_80503a2 = load i32, i32* @esp, align 4
  %v1_80503a5 = add i32 %v0_80503a2, 16
  %v2_80503a5 = inttoptr i32 %v1_80503a5 to i32*
  store i32 0, i32* %v2_80503a5, align 4
  %v0_80503a7 = call i32 @function_80524b4()
  %v0_80503ac = load i32, i32* @esp, align 4
  %v1_80503ac = add i32 %v0_80503ac, 1872
  %v2_80503ac = inttoptr i32 %v1_80503ac to i32*
  store i32 0, i32* %v2_80503ac, align 4
  store i32 %v0_80503a7, i32* @global_var_8056130.24, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80503dd

dec_label_pc_80503c3:                             ; preds = %dec_label_pc_8050426.backedge, %dec_label_pc_8050426.preheader, %dec_label_pc_8050a5f, %dec_label_pc_805040f, %dec_label_pc_80503dd, %dec_label_pc_8050fbc, %dec_label_pc_8050f62, %dec_label_pc_8050a97
  %v0_80503c3 = load i32, i32* @esp, align 4
  %v1_80503c3 = add i32 %v0_80503c3, 1856
  %v2_80503c3 = inttoptr i32 %v1_80503c3 to i32*
  %v3_80503c3 = load i32, i32* %v2_80503c3, align 4
  %v1_80503ca = add i32 %v3_80503c3, 1
  store i32 %v1_80503ca, i32* %eax.global-to-local, align 4
  store i32 %v1_80503ca, i32* %v2_80503c3, align 4
  %v0_80503d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80503d2 = add i32 %v0_80503d2, -255
  %v6_80503d2 = sub i32 254, %v0_80503d2
  %v7_80503d2 = and i32 %v6_80503d2, %v0_80503d2
  %v8_80503d2 = icmp slt i32 %v7_80503d2, 0
  %v9_80503d2 = icmp eq i32 %v1_80503d2, 0
  %v10_80503d2 = icmp slt i32 %v1_80503d2, 0
  %v3_80503d7 = icmp eq i1 %v10_80503d2, %v8_80503d2
  %v4_80503d7 = icmp eq i1 %v9_80503d2, false
  %v5_80503d7 = and i1 %v4_80503d7, %v3_80503d7
  br i1 %v5_80503d7, label %.loopexit, label %dec_label_pc_80503dd

dec_label_pc_80503dd:                             ; preds = %dec_label_pc_80503c3, %dec_label_pc_805039b
  %v0_80503dd = phi i32 [ %v0_80503d2, %dec_label_pc_80503c3 ], [ 0, %dec_label_pc_805039b ]
  %v0_80503e0 = load i32, i32* @global_var_8056174.36, align 4
  store i32 %v0_80503e0, i32* %eax.global-to-local, align 4
  %v2_80503e5 = mul i32 %v0_80503dd, 288
  %v2_80503e8 = add i32 %v0_80503e0, %v2_80503e5
  store i32 %v2_80503e8, i32* @edi, align 4
  %v1_80503ea = add i32 %v2_80503e8, 4
  %v2_80503ea = inttoptr i32 %v1_80503ea to i32*
  %v3_80503ea = load i32, i32* %v2_80503ea, align 4
  store i32 %v3_80503ea, i32* %ecx.global-to-local, align 4
  %v10_80503ed = icmp eq i32 %v3_80503ea, -1
  br i1 %v10_80503ed, label %dec_label_pc_80503c3, label %dec_label_pc_80503f2

dec_label_pc_80503f2:                             ; preds = %dec_label_pc_80503dd
  %v2_80503f6 = udiv i32 %v3_80503ea, 32
  store i32 %v2_80503f6, i32* %edx.global-to-local, align 4
  %v1_80503f9 = urem i32 %v3_80503ea, 32
  store i32 %v1_80503f9, i32* %eax.global-to-local, align 4
  %v0_80503fc = load i32, i32* @esp, align 4
  %v2_80503fc = mul nuw nsw i32 %v2_80503f6, 4
  %v3_80503fc = add nuw nsw i32 %v2_80503fc, 1556
  %v4_80503fc = add i32 %v3_80503fc, %v0_80503fc
  %v5_80503fc = inttoptr i32 %v4_80503fc to i32*
  %v6_80503fc = load i32, i32* %v5_80503fc, align 4
  %v9_80503fc = shl i32 1, %v1_80503f9
  %v10_80503fc = and i32 %v6_80503fc, %v9_80503fc
  %v11_80503fc = icmp ne i32 %v10_80503fc, 0
  %v1_8050404 = zext i1 %v11_80503fc to i32
  store i32 %v1_8050404, i32* %eax.global-to-local, align 4
  %v4_8050407 = icmp eq i1 %v11_80503fc, false
  %v1_8050409 = icmp eq i1 %v4_8050407, false
  br i1 %v1_8050409, label %dec_label_pc_8050e20, label %dec_label_pc_805040f

dec_label_pc_805040f:                             ; preds = %dec_label_pc_80503f2, %dec_label_pc_8050f05
  %v0_8050417 = phi i32 [ %v0_80503fc, %dec_label_pc_80503f2 ], [ %v0_8050417.pre, %dec_label_pc_8050f05 ]
  %v0_805040f = phi i32 [ %v3_80503ea, %dec_label_pc_80503f2 ], [ %v0_805040f.pre, %dec_label_pc_8050f05 ]
  %v2_8050411 = udiv i32 %v0_805040f, 32
  store i32 %v2_8050411, i32* %ecx.global-to-local, align 4
  %v1_8050414 = urem i32 %v0_805040f, 32
  store i32 %v1_8050414, i32* %eax.global-to-local, align 4
  %v2_8050417 = mul nuw nsw i32 %v2_8050411, 4
  %v3_8050417 = add i32 %v0_8050417, 1684
  %v4_8050417 = add i32 %v3_8050417, %v2_8050417
  %v5_8050417 = inttoptr i32 %v4_8050417 to i32*
  %v6_8050417 = load i32, i32* %v5_8050417, align 4
  %v9_8050417 = shl i32 1, %v1_8050414
  %v10_8050417 = and i32 %v6_8050417, %v9_8050417
  %v11_8050417 = icmp ne i32 %v10_8050417, 0
  %v1_805041f = zext i1 %v11_8050417 to i32
  store i32 %v1_805041f, i32* %eax.global-to-local, align 4
  %v4_8050422 = icmp eq i1 %v11_8050417, false
  br i1 %v4_8050422, label %dec_label_pc_80503c3, label %dec_label_pc_8050426.preheader

dec_label_pc_8050426.preheader:                   ; preds = %dec_label_pc_805040f
  %v0_805042626 = load i32, i32* @edi, align 4
  %v1_805042627 = add i32 %v0_805042626, 12
  %v2_805042628 = inttoptr i32 %v1_805042627 to i32*
  %v3_805042629 = load i32, i32* %v2_805042628, align 4
  store i32 %v3_805042629, i32* %eax.global-to-local, align 4
  %v1_805042930 = icmp eq i32 %v3_805042629, 0
  br i1 %v1_805042930, label %dec_label_pc_80503c3, label %dec_label_pc_805042d

dec_label_pc_805042d:                             ; preds = %dec_label_pc_8050426.preheader, %dec_label_pc_8050426.backedge.dec_label_pc_805042d_crit_edge
  %v1_8050430 = phi i32 [ %v1_8050430.pre, %dec_label_pc_8050426.backedge.dec_label_pc_805042d_crit_edge ], [ %v0_8050417, %dec_label_pc_8050426.preheader ]
  %v0_805042d = phi i32 [ %v0_8050426, %dec_label_pc_8050426.backedge.dec_label_pc_805042d_crit_edge ], [ %v0_805042626, %dec_label_pc_8050426.preheader ]
  %v1_805042d = add i32 %v0_805042d, 28
  store i32 %v1_805042d, i32* %eax.global-to-local, align 4
  %v2_8050430 = add i32 %v1_8050430, 8
  %v3_8050430 = inttoptr i32 %v2_8050430 to i32*
  store i32 %v1_805042d, i32* %v3_8050430, align 4
  %v0_8050434 = load i32, i32* @edi, align 4
  %v1_8050434 = add i32 %v0_8050434, 24
  %v2_8050434 = inttoptr i32 %v1_8050434 to i32*
  %v3_8050434 = load i32, i32* %v2_8050434, align 4
  %v9_8050434 = icmp eq i32 %v3_8050434, 256
  br i1 %v9_8050434, label %dec_label_pc_8050ab9, label %dec_label_pc_8050441

dec_label_pc_8050441:                             ; preds = %dec_label_pc_805042d, %dec_label_pc_8050ab9
  %v0_8050441 = load i32, i32* @esp, align 4
  %v1_8050441 = add i32 %v0_8050441, 24
  %v2_8050441 = inttoptr i32 %v1_8050441 to i32*
  %v3_8050441 = load i32, i32* %v2_8050441, align 4
  store i32 %v3_8050441, i32* %ecx.global-to-local, align 4
  %v1_8050445 = add i32 %v0_8050441, 8
  %v2_8050445 = inttoptr i32 %v1_8050445 to i32*
  %v3_8050445 = load i32, i32* %v2_8050445, align 4
  store i32 %v3_8050445, i32* %ebx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v1_805044e = inttoptr i32 %v3_8050441 to i32*
  store i32 0, i32* %v1_805044e, align 4
  %v0_8050454 = load i32, i32* @edi, align 4
  %v1_8050454 = add i32 %v0_8050454, 24
  %v2_8050454 = inttoptr i32 %v1_8050454 to i32*
  %v3_8050454 = load i32, i32* %v2_8050454, align 4
  store i32 %v3_8050454, i32* %edx.global-to-local, align 4
  %v0_8050457 = load i32, i32* @esp, align 4
  %v1_8050457 = add i32 %v0_8050457, -4
  %v2_8050457 = inttoptr i32 %v1_8050457 to i32*
  store i32 16384, i32* %v2_8050457, align 4
  %v0_805045c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805045c = load i32, i32* %edx.global-to-local, align 4
  %v2_805045c = add i32 %v1_805045c, %v0_805045c
  store i32 %v2_805045c, i32* @ebx, align 4
  %v0_805045e = load i32, i32* %eax.global-to-local, align 4
  %v2_805045e = sub i32 %v0_805045e, %v1_805045c
  store i32 %v2_805045e, i32* %eax.global-to-local, align 4
  %v2_8050460 = add i32 %v0_8050457, -8
  %v3_8050460 = inttoptr i32 %v2_8050460 to i32*
  store i32 %v2_805045e, i32* %v3_8050460, align 4
  %v0_8050461 = load i32, i32* @ebx, align 4
  %v2_8050461 = add i32 %v0_8050457, -12
  %v3_8050461 = inttoptr i32 %v2_8050461 to i32*
  store i32 %v0_8050461, i32* %v3_8050461, align 4
  %v0_8050462 = load i32, i32* @edi, align 4
  %v1_8050462 = add i32 %v0_8050462, 4
  %v2_8050462 = inttoptr i32 %v1_8050462 to i32*
  %v3_8050462 = load i32, i32* %v2_8050462, align 4
  %v2_8050465 = add i32 %v0_8050457, -16
  %v3_8050465 = inttoptr i32 %v2_8050465 to i32*
  store i32 %v3_8050462, i32* %v3_8050465, align 4
  %v0_8050466 = call i32 @function_80528ad()
  store i32 %v0_8050466, i32* %eax.global-to-local, align 4
  %v0_805046b = load i32, i32* @esp, align 4
  %v1_805046b = add i32 %v0_805046b, 16
  %tmp131 = icmp slt i32 %v0_8050466, 1
  br i1 %tmp131, label %dec_label_pc_8050a50, label %dec_label_pc_8050477

dec_label_pc_8050477:                             ; preds = %dec_label_pc_8050441
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8050479

dec_label_pc_8050479:                             ; preds = %dec_label_pc_8050483, %dec_label_pc_8050477
  %v0_805047f = phi i32 [ %v1_8050483, %dec_label_pc_8050483 ], [ 0, %dec_label_pc_8050477 ]
  %v1_8050479 = load i32, i32* @ebx, align 4
  %v2_8050479 = add i32 %v1_8050479, %v0_805047f
  %v3_8050479 = inttoptr i32 %v2_8050479 to i8*
  %v4_8050479 = load i8, i8* %v3_8050479, align 1
  %v5_8050479 = icmp eq i8 %v4_8050479, 0
  %v1_805047d = icmp eq i1 %v5_8050479, false
  br i1 %v1_805047d, label %dec_label_pc_8050483, label %dec_label_pc_805047f

dec_label_pc_805047f:                             ; preds = %dec_label_pc_8050479
  store i8 65, i8* %v3_8050479, align 1
  %v0_8050483.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050483

dec_label_pc_8050483:                             ; preds = %dec_label_pc_8050479, %dec_label_pc_805047f
  %v0_8050483 = phi i32 [ %v0_805047f, %dec_label_pc_8050479 ], [ %v0_8050483.pre, %dec_label_pc_805047f ]
  %v1_8050483 = add i32 %v0_8050483, 1
  store i32 %v1_8050483, i32* @edx, align 4
  %v12_8050484 = icmp eq i32 %v0_8050466, %v1_8050483
  %v1_8050486 = icmp eq i1 %v12_8050484, false
  br i1 %v1_8050486, label %dec_label_pc_8050479, label %dec_label_pc_8050488

dec_label_pc_8050488:                             ; preds = %dec_label_pc_8050483, %dec_label_pc_8050a56
  %v0_8050488 = load i32, i32* @edi, align 4
  %v1_8050488 = add i32 %v0_8050488, 24
  %v2_8050488 = inttoptr i32 %v1_8050488 to i32*
  %v3_8050488 = load i32, i32* %v2_8050488, align 4
  %v2_805048b = add i32 %v3_8050488, %v0_8050466
  store i32 %v2_805048b, i32* @ebx, align 4
  %v0_805048d = load i32, i32* @global_var_8056130.24, align 16
  store i32 %v0_805048d, i32* %eax.global-to-local, align 4
  store i32 %v2_805048b, i32* %v2_8050488, align 4
  %v0_8050495 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050495 = load i32, i32* @edi, align 4
  %v2_8050495 = add i32 %v1_8050495, 8
  %v3_8050495 = inttoptr i32 %v2_8050495 to i32*
  store i32 %v0_8050495, i32* %v3_8050495, align 4
  br label %dec_label_pc_8050498

dec_label_pc_8050498:                             ; preds = %dec_label_pc_8050873, %dec_label_pc_8050488
  %v0_8050498 = load i32, i32* @edi, align 4
  %v1_8050498 = add i32 %v0_8050498, 12
  %v2_8050498 = inttoptr i32 %v1_8050498 to i32*
  %v3_8050498 = load i32, i32* %v2_8050498, align 4
  store i32 %v3_8050498, i32* %eax.global-to-local, align 4
  switch i32 %v3_8050498, label %dec_label_pc_8050426.backedge [
    i32 2, label %dec_label_pc_80504a8
    i32 3, label %dec_label_pc_805053b
    i32 4, label %dec_label_pc_8050608
    i32 5, label %dec_label_pc_80506a0
    i32 6, label %dec_label_pc_8050730
    i32 7, label %dec_label_pc_8050893
    i32 8, label %dec_label_pc_80506e5
    i32 9, label %dec_label_pc_80508d8
    i32 10, label %dec_label_pc_80507e7
  ]

dec_label_pc_80504a8:                             ; preds = %dec_label_pc_8050498
  %v0_80504a8 = load i32, i32* @esp, align 4
  %v1_80504a8 = add i32 %v0_80504a8, 8
  %v2_80504a8 = inttoptr i32 %v1_80504a8 to i32*
  %v3_80504a8 = load i32, i32* %v2_80504a8, align 4
  store i32 %v3_80504a8, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_80504ae = add i32 %v0_8050498, 24
  %v2_80504ae = inttoptr i32 %v1_80504ae to i32*
  %v3_80504ae = load i32, i32* %v2_80504ae, align 4
  store i32 %v3_80504ae, i32* %edx.global-to-local, align 4
  %v2_80504b117 = sub i32 0, %v3_80504ae
  %v10_80504b121 = and i32 %v3_80504ae, %v2_80504b117
  %v11_80504b122 = icmp slt i32 %v10_80504b121, 0
  %v13_80504b124 = icmp slt i32 %v2_80504b117, 0
  %v2_80504b325 = icmp eq i1 %v13_80504b124, %v11_80504b122
  br i1 %v2_80504b325, label %dec_label_pc_8050a41.thread, label %dec_label_pc_80504b5.preheader

dec_label_pc_8050a41.thread:                      ; preds = %dec_label_pc_80504a8
  br label %dec_label_pc_8050426.backedge

dec_label_pc_80504b5.preheader:                   ; preds = %dec_label_pc_80504a8, %dec_label_pc_80504b1.backedge
  %v0_805052f122 = phi i32 [ %v0_805052f124, %dec_label_pc_80504b1.backedge ], [ %v0_8050498, %dec_label_pc_80504a8 ]
  %v0_8050992115 = phi i32 [ %v0_80504b1, %dec_label_pc_80504b1.backedge ], [ 0, %dec_label_pc_80504a8 ]
  %v5_80504c7108 = phi i32 [ %v5_80504c7109, %dec_label_pc_80504b1.backedge ], [ 2, %dec_label_pc_80504a8 ]
  %v1_80504c1106 = phi i32 [ %v1_80504b1, %dec_label_pc_80504b1.backedge ], [ %v3_80504ae, %dec_label_pc_80504a8 ]
  %v0_80504ba103 = phi i32 [ %v0_80504ba104, %dec_label_pc_80504b1.backedge ], [ %v0_80504a8, %dec_label_pc_80504a8 ]
  br label %dec_label_pc_80504b5

dec_label_pc_80504b5:                             ; preds = %dec_label_pc_80504b5.preheader, %dec_label_pc_8050506
  %v0_805052f125 = phi i32 [ %v0_805052f122, %dec_label_pc_80504b5.preheader ], [ %v0_805051d, %dec_label_pc_8050506 ]
  %v0_8050992 = phi i32 [ %v0_8050992115, %dec_label_pc_80504b5.preheader ], [ %v0_8050523, %dec_label_pc_8050506 ]
  %v5_80504c7 = phi i32 [ %v5_80504c7108, %dec_label_pc_80504b5.preheader ], [ %v0_8050518, %dec_label_pc_8050506 ]
  %v1_80504c1 = phi i32 [ %v1_80504c1106, %dec_label_pc_80504b5.preheader ], [ %v3_805051d, %dec_label_pc_8050506 ]
  %v0_80509b1 = phi i32 [ %v0_80504ba103, %dec_label_pc_80504b5.preheader ], [ %v1_8050520, %dec_label_pc_8050506 ]
  %v0_80504b5 = load i32, i32* @ebx, align 4
  %v1_80504b5 = inttoptr i32 %v0_80504b5 to i8*
  %v2_80504b5 = load i8, i8* %v1_80504b5, align 1
  %v12_80504b5 = icmp eq i8 %v2_80504b5, -1
  %v1_80504b8 = icmp eq i1 %v12_80504b5, false
  br i1 %v1_80504b8, label %dec_label_pc_8050527, label %dec_label_pc_80504ba

dec_label_pc_80504ba:                             ; preds = %dec_label_pc_80504b5
  %v1_80504ba = add i32 %v0_80509b1, 8
  %v2_80504ba = inttoptr i32 %v1_80504ba to i32*
  %v3_80504ba = load i32, i32* %v2_80504ba, align 4
  %v1_80504be = add i32 %v0_80504b5, 1
  store i32 %v1_80504be, i32* @esi, align 4
  %v2_80504c1 = add i32 %v3_80504ba, %v1_80504c1
  store i32 %v2_80504c1, i32* %ecx.global-to-local, align 4
  %tmp269 = icmp ugt i32 %v2_80504c1, %v1_80504be
  br i1 %tmp269, label %dec_label_pc_80504c7, label %dec_label_pc_8050527

dec_label_pc_80504c7:                             ; preds = %dec_label_pc_80504ba
  %v2_80504c7 = inttoptr i32 %v1_80504be to i8*
  %v3_80504c7 = load i8, i8* %v2_80504c7, align 1
  %v4_80504c7 = zext i8 %v3_80504c7 to i32
  %v6_80504c7 = and i32 %v5_80504c7, -256
  %v7_80504c7 = or i32 %v4_80504c7, %v6_80504c7
  store i32 %v7_80504c7, i32* %eax.global-to-local, align 4
  %v11_80504ca = icmp eq i8 %v3_80504c7, -1
  br i1 %v11_80504ca, label %dec_label_pc_805098f, label %dec_label_pc_80504d2

dec_label_pc_80504d2:                             ; preds = %dec_label_pc_80504c7
  %v11_80504d2 = icmp eq i8 %v3_80504c7, -3
  br i1 %v11_80504d2, label %dec_label_pc_80509b1, label %dec_label_pc_80504da

dec_label_pc_80504da:                             ; preds = %dec_label_pc_80504d2
  %v1_80504da = add i32 %v0_80504b5, 2
  store i32 %v1_80504da, i32* %eax.global-to-local, align 4
  %tmp270 = icmp ugt i32 %v2_80504c1, %v1_80504da
  br i1 %tmp270, label %dec_label_pc_80504e1, label %dec_label_pc_8050527

dec_label_pc_80504e1:                             ; preds = %dec_label_pc_80504da, %dec_label_pc_8050f8b, %dec_label_pc_8050f93, %dec_label_pc_8050a39
  %v0_80504e1 = load i32, i32* @esi, align 4
  %v1_80504e1 = inttoptr i32 %v0_80504e1 to i8*
  %v2_80504e1 = load i8, i8* %v1_80504e1, align 1
  %v3_80504e1 = zext i8 %v2_80504e1 to i32
  %v4_80504e1 = load i32, i32* %eax.global-to-local, align 4
  %v5_80504e1 = and i32 %v4_80504e1, -256
  %v6_80504e1 = or i32 %v5_80504e1, %v3_80504e1
  store i32 %v6_80504e1, i32* %eax.global-to-local, align 4
  %v11_80504e3 = icmp eq i8 %v2_80504e1, -3
  br i1 %v11_80504e3, label %dec_label_pc_805099a, label %dec_label_pc_80504eb

dec_label_pc_80504eb:                             ; preds = %dec_label_pc_80504e1
  %v11_80504eb = icmp eq i8 %v2_80504e1, -5
  br i1 %v11_80504eb, label %dec_label_pc_8050adc, label %dec_label_pc_80504f3

dec_label_pc_80504f3:                             ; preds = %dec_label_pc_80504eb, %dec_label_pc_8050adc
  %v5_80504f3 = phi i32 [ %v6_80504e1, %dec_label_pc_80504eb ], [ %v5_80504f3.pre, %dec_label_pc_8050adc ]
  %v0_80504f3 = load i32, i32* @ebx, align 4
  %v1_80504f3 = add i32 %v0_80504f3, 2
  %v2_80504f3 = inttoptr i32 %v1_80504f3 to i8*
  %v3_80504f3 = load i8, i8* %v2_80504f3, align 1
  %v4_80504f3 = zext i8 %v3_80504f3 to i32
  %v6_80504f3 = and i32 %v5_80504f3, -256
  %v7_80504f3 = or i32 %v4_80504f3, %v6_80504f3
  store i32 %v7_80504f3, i32* %eax.global-to-local, align 4
  %v11_80504f6 = icmp eq i8 %v3_80504f3, -3
  br i1 %v11_80504f6, label %dec_label_pc_80509a8, label %dec_label_pc_80504fe

dec_label_pc_80504fe:                             ; preds = %dec_label_pc_805099a, %dec_label_pc_80504f3
  %v0_8050ab0 = phi i32 [ %v0_805099d, %dec_label_pc_805099a ], [ %v0_80504f3, %dec_label_pc_80504f3 ]
  %v0_80504fe = phi i32 [ %v7_805099d, %dec_label_pc_805099a ], [ %v7_80504f3, %dec_label_pc_80504f3 ]
  %v1_80504fe = trunc i32 %v0_80504fe to i8
  %v11_80504fe = icmp eq i8 %v1_80504fe, -5
  br i1 %v11_80504fe, label %dec_label_pc_8050ab0, label %dec_label_pc_8050506

dec_label_pc_8050506:                             ; preds = %dec_label_pc_80504fe, %dec_label_pc_8050ab0, %dec_label_pc_80509a8
  %v0_8050506 = load i32, i32* @esp, align 4
  %v1_8050506 = add i32 %v0_8050506, -4
  %v2_8050506 = inttoptr i32 %v1_8050506 to i32*
  store i32 16384, i32* %v2_8050506, align 4
  %v1_805050b = add i32 %v0_8050506, -8
  %v2_805050b = inttoptr i32 %v1_805050b to i32*
  store i32 3, i32* %v2_805050b, align 4
  %v0_805050d = load i32, i32* @ebx, align 4
  %v2_805050d = add i32 %v0_8050506, -12
  %v3_805050d = inttoptr i32 %v2_805050d to i32*
  store i32 %v0_805050d, i32* %v3_805050d, align 4
  %v0_805050e = load i32, i32* @ebp, align 4
  %v1_805050e = add i32 %v0_805050e, 3
  store i32 %v1_805050e, i32* @ebp, align 4
  %v0_8050511 = load i32, i32* @edi, align 4
  %v1_8050511 = add i32 %v0_8050511, 4
  %v2_8050511 = inttoptr i32 %v1_8050511 to i32*
  %v3_8050511 = load i32, i32* %v2_8050511, align 4
  store i32 %v3_8050511, i32* @esi, align 4
  %v0_8050514 = load i32, i32* @ebx, align 4
  %v1_8050514 = add i32 %v0_8050514, 3
  store i32 %v1_8050514, i32* @ebx, align 4
  %v2_8050517 = add i32 %v0_8050506, -16
  %v3_8050517 = inttoptr i32 %v2_8050517 to i32*
  store i32 %v3_8050511, i32* %v3_8050517, align 4
  %v0_8050518 = call i32 @function_8052923()
  store i32 %v0_8050518, i32* %eax.global-to-local, align 4
  %v0_805051d = load i32, i32* @edi, align 4
  %v1_805051d = add i32 %v0_805051d, 24
  %v2_805051d = inttoptr i32 %v1_805051d to i32*
  %v3_805051d = load i32, i32* %v2_805051d, align 4
  store i32 %v3_805051d, i32* %edx.global-to-local, align 4
  %v0_8050520 = load i32, i32* @esp, align 4
  %v1_8050520 = add i32 %v0_8050520, 16
  %v0_8050523 = load i32, i32* @ebp, align 4
  %v2_8050523 = sub i32 %v0_8050523, %v3_805051d
  %v8_8050523 = xor i32 %v0_8050523, %v3_805051d
  %v9_8050523 = xor i32 %v2_8050523, %v0_8050523
  %v10_8050523 = and i32 %v9_8050523, %v8_8050523
  %v11_8050523 = icmp slt i32 %v10_8050523, 0
  %v13_8050523 = icmp slt i32 %v2_8050523, 0
  %v2_8050525 = icmp eq i1 %v13_8050523, %v11_8050523
  br i1 %v2_8050525, label %dec_label_pc_8050527, label %dec_label_pc_80504b5

dec_label_pc_8050527:                             ; preds = %dec_label_pc_80504b1.backedge, %dec_label_pc_80504da, %dec_label_pc_80504ba, %dec_label_pc_8050506, %dec_label_pc_80504b5, %dec_label_pc_80509b1.dec_label_pc_8050527.loopexit_crit_edge
  %v0_805052f = phi i32 [ %v0_8050a15, %dec_label_pc_80509b1.dec_label_pc_8050527.loopexit_crit_edge ], [ %v0_805051d, %dec_label_pc_8050506 ], [ %v0_805052f125, %dec_label_pc_80504da ], [ %v0_805052f125, %dec_label_pc_80504ba ], [ %v0_805052f125, %dec_label_pc_80504b5 ], [ %v0_805052f124, %dec_label_pc_80504b1.backedge ]
  %v0_8050527 = phi i32 [ %v0_8050527.pre.pre, %dec_label_pc_80509b1.dec_label_pc_8050527.loopexit_crit_edge ], [ %v0_8050523, %dec_label_pc_8050506 ], [ %v0_8050992, %dec_label_pc_80504da ], [ %v0_8050992, %dec_label_pc_80504ba ], [ %v0_8050992, %dec_label_pc_80504b5 ], [ %v0_80504b1, %dec_label_pc_80504b1.backedge ]
  %tmp132 = icmp slt i32 %v0_8050527, 1
  br i1 %tmp132, label %dec_label_pc_8050a41, label %dec_label_pc_805052f

dec_label_pc_805052f:                             ; preds = %dec_label_pc_8050527
  %v1_805052f = add i32 %v0_805052f, 12
  %v2_805052f = inttoptr i32 %v1_805052f to i32*
  store i32 3, i32* %v2_805052f, align 4
  br label %dec_label_pc_8050868

dec_label_pc_805053b:                             ; preds = %dec_label_pc_8050498
  %v1_805053b = add i32 %v0_8050498, 24
  %v2_805053b = inttoptr i32 %v1_805053b to i32*
  %v3_805053b = load i32, i32* %v2_805053b, align 4
  %v1_805053e = add i32 %v3_805053b, -1
  store i32 %v1_805053e, i32* %eax.global-to-local, align 4
  %tmp133 = icmp slt i32 %v1_805053e, 1
  br i1 %tmp133, label %dec_label_pc_8050577, label %dec_label_pc_8050543.preheader

dec_label_pc_8050543.preheader:                   ; preds = %dec_label_pc_805053b
  %v7_8050543.pre = load i32, i32* @edx, align 4
  %v2_8050543 = add i32 %v0_8050498, 28
  br label %dec_label_pc_8050543

dec_label_pc_8050543:                             ; preds = %dec_label_pc_8050543.preheader, %dec_label_pc_8050574
  %v7_8050543 = phi i32 [ %v7_8050543.pre, %dec_label_pc_8050543.preheader ], [ %v9_8050543, %dec_label_pc_8050574 ]
  %v0_8050b5d = phi i32 [ %v1_805053e, %dec_label_pc_8050543.preheader ], [ %v1_8050574, %dec_label_pc_8050574 ]
  %v3_8050543 = add i32 %v2_8050543, %v0_8050b5d
  %v4_8050543 = inttoptr i32 %v3_8050543 to i8*
  %v5_8050543 = load i8, i8* %v4_8050543, align 1
  %v6_8050543 = zext i8 %v5_8050543 to i32
  %v8_8050543 = and i32 %v7_8050543, -256
  %v9_8050543 = or i32 %v6_8050543, %v8_8050543
  store i32 %v9_8050543, i32* %edx.global-to-local, align 4
  %v10_8050547 = icmp eq i8 %v5_8050543, 58
  br i1 %v10_8050547, label %dec_label_pc_8050b5d, label %dec_label_pc_8050550

dec_label_pc_8050550:                             ; preds = %dec_label_pc_8050543
  %v10_8050550 = icmp eq i8 %v5_8050543, 62
  br i1 %v10_8050550, label %dec_label_pc_8050b5d, label %dec_label_pc_8050559

dec_label_pc_8050559:                             ; preds = %dec_label_pc_8050550
  %v10_8050559 = icmp eq i8 %v5_8050543, 36
  br i1 %v10_8050559, label %dec_label_pc_8050b5d, label %dec_label_pc_8050562

dec_label_pc_8050562:                             ; preds = %dec_label_pc_8050559
  %v10_8050562 = icmp eq i8 %v5_8050543, 35
  br i1 %v10_8050562, label %dec_label_pc_8050b5d, label %dec_label_pc_805056b

dec_label_pc_805056b:                             ; preds = %dec_label_pc_8050562
  %v10_805056b = icmp eq i8 %v5_8050543, 37
  br i1 %v10_805056b, label %dec_label_pc_8050b5d, label %dec_label_pc_8050574

dec_label_pc_8050574:                             ; preds = %dec_label_pc_805056b
  %v1_8050574 = add i32 %v0_8050b5d, -1
  %v8_8050574 = icmp eq i32 %v1_8050574, 0
  store i32 %v1_8050574, i32* %eax.global-to-local, align 4
  %v1_8050575 = icmp eq i1 %v8_8050574, false
  br i1 %v1_8050575, label %dec_label_pc_8050543, label %dec_label_pc_8050577

dec_label_pc_8050577:                             ; preds = %dec_label_pc_8050574, %dec_label_pc_8050b5d, %dec_label_pc_805053b
  %v0_8050577 = load i32, i32* @esp, align 4
  %v1_805057a = add i32 %v0_8050577, -16
  %v2_805057a = inttoptr i32 %v1_805057a to i32*
  store i32 30, i32* %v2_805057a, align 4
  %v2_805057c = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805057c, i32* %eax.global-to-local, align 4
  %v0_8050581 = load i32, i32* @esp, align 4
  %v1_8050581 = inttoptr i32 %v0_8050581 to i32*
  store i32 31, i32* %v1_8050581, align 4
  %v2_8050588 = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050588, i32* %eax.global-to-local, align 4
  %v0_805058d = load i32, i32* @esp, align 4
  %v1_805058d = inttoptr i32 %v0_805058d to i32*
  %v2_805058d = load i32, i32* %v1_805058d, align 4
  store i32 %v2_805058d, i32* %ecx.global-to-local, align 4
  %v3_805058d = add i32 %v0_805058d, 4
  %v1_805058e = inttoptr i32 %v3_805058d to i32*
  %v2_805058e = load i32, i32* %v1_805058e, align 4
  store i32 %v2_805058e, i32* %ebx.global-to-local, align 4
  %v1_805058f = add i32 %v0_805058d, 1868
  store i32 %v1_805058f, i32* %ecx.global-to-local, align 4
  store i32 %v1_805058f, i32* %v1_805058e, align 4
  store i32 30, i32* %v1_805058d, align 4
  %v3_8050599 = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050599, i32* %eax.global-to-local, align 4
  store i32 %v3_8050599, i32* @ebx, align 4
  %v0_80505a0 = load i32, i32* @esp, align 4
  %v1_80505a0 = inttoptr i32 %v0_80505a0 to i32*
  %v2_80505a0 = load i32, i32* %v1_80505a0, align 4
  store i32 %v2_80505a0, i32* %eax.global-to-local, align 4
  %v3_80505a0 = add i32 %v0_80505a0, 4
  %v1_80505a1 = inttoptr i32 %v3_80505a0 to i32*
  %v2_80505a1 = load i32, i32* %v1_80505a1, align 4
  store i32 %v2_80505a1, i32* %edx.global-to-local, align 4
  %v1_80505a2 = add i32 %v0_80505a0, 1864
  store i32 %v1_80505a2, i32* %eax.global-to-local, align 4
  store i32 %v1_80505a2, i32* %v1_80505a1, align 4
  store i32 31, i32* %v1_80505a0, align 4
  %v3_80505ac = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80505ac, i32* %eax.global-to-local, align 4
  store i32 %v3_80505ac, i32* @esi, align 4
  %v0_80505b3 = load i32, i32* @esp, align 4
  %v1_80505b3 = add i32 %v0_80505b3, 1868
  %v2_80505b3 = inttoptr i32 %v1_80505b3 to i32*
  %v3_80505b3 = load i32, i32* %v2_80505b3, align 4
  %v1_80505ba = add i32 %v3_80505b3, -1
  store i32 %v1_80505ba, i32* %eax.global-to-local, align 4
  %v2_80505bb = add i32 %v0_80505b3, -4
  %v3_80505bb = inttoptr i32 %v2_80505bb to i32*
  store i32 %v1_80505ba, i32* %v3_80505bb, align 4
  %v0_80505bc = load i32, i32* @ebx, align 4
  %v2_80505bc = add i32 %v0_80505b3, -8
  %v3_80505bc = inttoptr i32 %v2_80505bc to i32*
  store i32 %v0_80505bc, i32* %v3_80505bc, align 4
  %v0_80505bd = load i32, i32* @edi, align 4
  %v1_80505bd = add i32 %v0_80505bd, 24
  %v2_80505bd = inttoptr i32 %v1_80505bd to i32*
  %v3_80505bd = load i32, i32* %v2_80505bd, align 4
  store i32 %v3_80505bd, i32* %eax.global-to-local, align 4
  %v2_80505c0 = add i32 %v0_80505b3, -12
  %v3_80505c0 = inttoptr i32 %v2_80505c0 to i32*
  store i32 %v3_80505bd, i32* %v3_80505c0, align 4
  %v1_80505c1 = add i32 %v0_80505b3, 24
  %v2_80505c1 = inttoptr i32 %v1_80505c1 to i32*
  %v3_80505c1 = load i32, i32* %v2_80505c1, align 4
  store i32 %v3_80505c1, i32* %eax.global-to-local, align 4
  %v2_80505c5 = add i32 %v0_80505b3, -16
  %v3_80505c5 = inttoptr i32 %v2_80505c5 to i32*
  store i32 %v3_80505c1, i32* %v3_80505c5, align 4
  %v0_80505c6 = call i32 @function_8051d30()
  %v0_80505cb = load i32, i32* @esp, align 4
  %v1_80505cb = add i32 %v0_80505cb, 32
  %v8_80505ce = icmp eq i32 %v0_80505c6, -1
  %v1_80505cf = icmp eq i1 %v8_80505ce, false
  %v2_80505cf = zext i1 %v1_80505cf to i32
  %v2_80505d2 = icmp eq i1 %v1_80505cf, false
  store i32 %v2_80505cf, i32* %eax.global-to-local, align 4
  store i32 %v2_80505cf, i32* @ebp, align 4
  br i1 %v2_80505d2, label %dec_label_pc_8050f16, label %dec_label_pc_80505e1

dec_label_pc_80505e1:                             ; preds = %dec_label_pc_8050f16, %dec_label_pc_8050577
  %v0_80505e1 = phi i32 [ %v1_8050f2e, %dec_label_pc_8050f16 ], [ %v1_80505cb, %dec_label_pc_8050577 ]
  %v1_80505e4 = add i32 %v0_80505e1, -16
  %v2_80505e4 = inttoptr i32 %v1_80505e4 to i32*
  store i32 30, i32* %v2_80505e4, align 4
  %v2_80505e6 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80505e6, i32* %eax.global-to-local, align 4
  %v0_80505eb = load i32, i32* @esp, align 4
  %v1_80505eb = inttoptr i32 %v0_80505eb to i32*
  store i32 31, i32* %v1_80505eb, align 4
  %v2_80505f2 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80505f2, i32* %eax.global-to-local, align 4
  %v0_80505fa = load i32, i32* @ebp, align 4
  %v10_80505fa = icmp eq i32 %v0_80505fa, -1
  %v1_80505fd = icmp eq i1 %v10_80505fa, false
  br i1 %v1_80505fd, label %dec_label_pc_8050b69, label %dec_label_pc_8050426.backedge

dec_label_pc_8050608:                             ; preds = %dec_label_pc_8050498
  %v1_8050608 = add i32 %v0_8050498, 24
  %v2_8050608 = inttoptr i32 %v1_8050608 to i32*
  %v3_8050608 = load i32, i32* %v2_8050608, align 4
  %v1_805060b = add i32 %v3_8050608, -1
  store i32 %v1_805060b, i32* %eax.global-to-local, align 4
  %tmp134 = icmp slt i32 %v1_805060b, 1
  br i1 %tmp134, label %dec_label_pc_805063b, label %dec_label_pc_8050610.preheader

dec_label_pc_8050610.preheader:                   ; preds = %dec_label_pc_8050608
  %v7_8050610.pre = load i32, i32* @edx, align 4
  %v2_8050610 = add i32 %v0_8050498, 28
  br label %dec_label_pc_8050610

dec_label_pc_8050610:                             ; preds = %dec_label_pc_8050610.preheader, %dec_label_pc_8050638
  %v7_8050610 = phi i32 [ %v7_8050610.pre, %dec_label_pc_8050610.preheader ], [ %v9_8050610, %dec_label_pc_8050638 ]
  %v0_8050ca0 = phi i32 [ %v1_805060b, %dec_label_pc_8050610.preheader ], [ %v1_8050638, %dec_label_pc_8050638 ]
  %v3_8050610 = add i32 %v2_8050610, %v0_8050ca0
  %v4_8050610 = inttoptr i32 %v3_8050610 to i8*
  %v5_8050610 = load i8, i8* %v4_8050610, align 1
  %v6_8050610 = zext i8 %v5_8050610 to i32
  %v8_8050610 = and i32 %v7_8050610, -256
  %v9_8050610 = or i32 %v6_8050610, %v8_8050610
  store i32 %v9_8050610, i32* %edx.global-to-local, align 4
  %v10_8050614 = icmp eq i8 %v5_8050610, 58
  br i1 %v10_8050614, label %dec_label_pc_8050ca0, label %dec_label_pc_805061d

dec_label_pc_805061d:                             ; preds = %dec_label_pc_8050610
  %v10_805061d = icmp eq i8 %v5_8050610, 62
  br i1 %v10_805061d, label %dec_label_pc_8050ca0, label %dec_label_pc_8050626

dec_label_pc_8050626:                             ; preds = %dec_label_pc_805061d
  %v10_8050626 = icmp eq i8 %v5_8050610, 36
  br i1 %v10_8050626, label %dec_label_pc_8050ca0, label %dec_label_pc_805062f

dec_label_pc_805062f:                             ; preds = %dec_label_pc_8050626
  %v10_805062f = icmp eq i8 %v5_8050610, 35
  br i1 %v10_805062f, label %dec_label_pc_8050ca0, label %dec_label_pc_8050638

dec_label_pc_8050638:                             ; preds = %dec_label_pc_805062f
  %v1_8050638 = add i32 %v0_8050ca0, -1
  %v8_8050638 = icmp eq i32 %v1_8050638, 0
  store i32 %v1_8050638, i32* %eax.global-to-local, align 4
  %v1_8050639 = icmp eq i1 %v8_8050638, false
  br i1 %v1_8050639, label %dec_label_pc_8050610, label %dec_label_pc_805063b

dec_label_pc_805063b:                             ; preds = %dec_label_pc_8050638, %dec_label_pc_8050ca0, %dec_label_pc_8050608
  %v0_805063b = load i32, i32* @esp, align 4
  %v1_805063e = add i32 %v0_805063b, -16
  %v2_805063e = inttoptr i32 %v1_805063e to i32*
  store i32 29, i32* %v2_805063e, align 4
  %v2_8050640 = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050640, i32* %eax.global-to-local, align 4
  %v0_8050645 = load i32, i32* @esp, align 4
  %v1_8050645 = inttoptr i32 %v0_8050645 to i32*
  %v2_8050645 = load i32, i32* %v1_8050645, align 4
  store i32 %v2_8050645, i32* %eax.global-to-local, align 4
  %v3_8050645 = add i32 %v0_8050645, 4
  %v1_8050646 = inttoptr i32 %v3_8050645 to i32*
  %v2_8050646 = load i32, i32* %v1_8050646, align 4
  store i32 %v2_8050646, i32* %edx.global-to-local, align 4
  %v1_8050647 = add i32 %v0_8050645, 1868
  store i32 %v1_8050647, i32* %eax.global-to-local, align 4
  store i32 %v1_8050647, i32* %v1_8050646, align 4
  store i32 29, i32* %v1_8050645, align 4
  %v3_8050651 = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050651, i32* %eax.global-to-local, align 4
  %v0_8050656 = load i32, i32* @esp, align 4
  %v1_8050656 = add i32 %v0_8050656, 1868
  %v2_8050656 = inttoptr i32 %v1_8050656 to i32*
  %v3_8050656 = load i32, i32* %v2_8050656, align 4
  %v1_805065d = add i32 %v3_8050656, -1
  store i32 %v1_805065d, i32* %edx.global-to-local, align 4
  %v2_805065e = add i32 %v0_8050656, -4
  %v3_805065e = inttoptr i32 %v2_805065e to i32*
  store i32 %v1_805065d, i32* %v3_805065e, align 4
  %v2_805065f = add i32 %v0_8050656, -8
  %v3_805065f = inttoptr i32 %v2_805065f to i32*
  store i32 %v3_8050651, i32* %v3_805065f, align 4
  %v0_8050660 = load i32, i32* @edi, align 4
  %v1_8050660 = add i32 %v0_8050660, 24
  %v2_8050660 = inttoptr i32 %v1_8050660 to i32*
  %v3_8050660 = load i32, i32* %v2_8050660, align 4
  store i32 %v3_8050660, i32* %eax.global-to-local, align 4
  %v2_8050663 = add i32 %v0_8050656, -12
  %v3_8050663 = inttoptr i32 %v2_8050663 to i32*
  store i32 %v3_8050660, i32* %v3_8050663, align 4
  %v1_8050664 = add i32 %v0_8050656, 24
  %v2_8050664 = inttoptr i32 %v1_8050664 to i32*
  %v3_8050664 = load i32, i32* %v2_8050664, align 4
  %v2_8050668 = add i32 %v0_8050656, -16
  %v3_8050668 = inttoptr i32 %v2_8050668 to i32*
  store i32 %v3_8050664, i32* %v3_8050668, align 4
  %v0_8050669 = call i32 @function_8051d30()
  %v0_805066e = load i32, i32* @esp, align 4
  %v8_8050671 = icmp eq i32 %v0_8050669, -1
  %v1_8050672 = icmp eq i1 %v8_8050671, false
  %v2_8050672 = zext i1 %v1_8050672 to i32
  %v2_8050675 = icmp eq i1 %v1_8050672, false
  store i32 %v2_8050672, i32* %eax.global-to-local, align 4
  store i32 %v2_8050672, i32* @ebp, align 4
  %v1_8050f9e = add i32 %v0_805066e, 16
  %v2_8050f9e = inttoptr i32 %v1_8050f9e to i32*
  store i32 29, i32* %v2_8050f9e, align 4
  %v2_8050fa0 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050fa0, i32* %eax.global-to-local, align 4
  br i1 %v2_8050675, label %dec_label_pc_8050426.backedge, label %dec_label_pc_8050684

dec_label_pc_8050684:                             ; preds = %dec_label_pc_805063b
  %v0_8050691 = load i32, i32* @ebp, align 4
  %v10_8050691 = icmp eq i32 %v0_8050691, -1
  %v1_8050694 = icmp eq i1 %v10_8050691, false
  br i1 %v1_8050694, label %dec_label_pc_8050cac, label %dec_label_pc_8050426.backedge

dec_label_pc_80506a0:                             ; preds = %dec_label_pc_8050498
  %v1_80506a0 = add i32 %v0_8050498, 24
  %v2_80506a0 = inttoptr i32 %v1_80506a0 to i32*
  %v3_80506a0 = load i32, i32* %v2_80506a0, align 4
  %v1_80506a3 = add i32 %v3_80506a0, -1
  store i32 %v1_80506a3, i32* %eax.global-to-local, align 4
  %tmp135 = icmp slt i32 %v1_80506a3, 1
  br i1 %tmp135, label %dec_label_pc_8050426.backedge, label %dec_label_pc_80506ac.preheader

dec_label_pc_80506ac.preheader:                   ; preds = %dec_label_pc_80506a0
  %v7_80506ac.pre = load i32, i32* @edx, align 4
  %v2_80506ac = add i32 %v0_8050498, 28
  br label %dec_label_pc_80506ac

dec_label_pc_80506ac:                             ; preds = %dec_label_pc_80506ac.preheader, %dec_label_pc_80506dd
  %v7_80506ac = phi i32 [ %v7_80506ac.pre, %dec_label_pc_80506ac.preheader ], [ %v9_80506ac, %dec_label_pc_80506dd ]
  %v0_8050bae = phi i32 [ %v1_80506a3, %dec_label_pc_80506ac.preheader ], [ %v1_80506dd, %dec_label_pc_80506dd ]
  %v3_80506ac = add i32 %v2_80506ac, %v0_8050bae
  %v4_80506ac = inttoptr i32 %v3_80506ac to i8*
  %v5_80506ac = load i8, i8* %v4_80506ac, align 1
  %v6_80506ac = zext i8 %v5_80506ac to i32
  %v8_80506ac = and i32 %v7_80506ac, -256
  %v9_80506ac = or i32 %v6_80506ac, %v8_80506ac
  store i32 %v9_80506ac, i32* %edx.global-to-local, align 4
  %v10_80506b0 = icmp eq i8 %v5_80506ac, 58
  br i1 %v10_80506b0, label %dec_label_pc_8050bae, label %dec_label_pc_80506b9

dec_label_pc_80506b9:                             ; preds = %dec_label_pc_80506ac
  %v10_80506b9 = icmp eq i8 %v5_80506ac, 62
  br i1 %v10_80506b9, label %dec_label_pc_8050bae, label %dec_label_pc_80506c2

dec_label_pc_80506c2:                             ; preds = %dec_label_pc_80506b9
  %v10_80506c2 = icmp eq i8 %v5_80506ac, 36
  br i1 %v10_80506c2, label %dec_label_pc_8050bae, label %dec_label_pc_80506cb

dec_label_pc_80506cb:                             ; preds = %dec_label_pc_80506c2
  %v10_80506cb = icmp eq i8 %v5_80506ac, 35
  br i1 %v10_80506cb, label %dec_label_pc_8050bae, label %dec_label_pc_80506d4

dec_label_pc_80506d4:                             ; preds = %dec_label_pc_80506cb
  %v10_80506d4 = icmp eq i8 %v5_80506ac, 37
  br i1 %v10_80506d4, label %dec_label_pc_8050bae, label %dec_label_pc_80506dd

dec_label_pc_80506dd:                             ; preds = %dec_label_pc_80506d4
  %v1_80506dd = add i32 %v0_8050bae, -1
  %v8_80506dd = icmp eq i32 %v1_80506dd, 0
  store i32 %v1_80506dd, i32* %eax.global-to-local, align 4
  %v1_80506de = icmp eq i1 %v8_80506dd, false
  br i1 %v1_80506de, label %dec_label_pc_80506ac, label %dec_label_pc_8050426.backedge

dec_label_pc_80506e5:                             ; preds = %dec_label_pc_8050498
  %v1_80506e5 = add i32 %v0_8050498, 24
  %v2_80506e5 = inttoptr i32 %v1_80506e5 to i32*
  %v3_80506e5 = load i32, i32* %v2_80506e5, align 4
  %v1_80506e8 = add i32 %v3_80506e5, -1
  store i32 %v1_80506e8, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_80506e8, 1
  br i1 %tmp136, label %dec_label_pc_8050426.backedge, label %dec_label_pc_80506f1.preheader

dec_label_pc_80506f1.preheader:                   ; preds = %dec_label_pc_80506e5
  %v7_80506f1.pre = load i32, i32* @edx, align 4
  %v2_80506f1 = add i32 %v0_8050498, 28
  br label %dec_label_pc_80506f1

dec_label_pc_80506f1:                             ; preds = %dec_label_pc_80506f1.preheader, %dec_label_pc_8050722
  %v7_80506f1 = phi i32 [ %v7_80506f1.pre, %dec_label_pc_80506f1.preheader ], [ %v9_80506f1, %dec_label_pc_8050722 ]
  %v0_8050ae4 = phi i32 [ %v1_80506e8, %dec_label_pc_80506f1.preheader ], [ %v1_8050722, %dec_label_pc_8050722 ]
  %v3_80506f1 = add i32 %v2_80506f1, %v0_8050ae4
  %v4_80506f1 = inttoptr i32 %v3_80506f1 to i8*
  %v5_80506f1 = load i8, i8* %v4_80506f1, align 1
  %v6_80506f1 = zext i8 %v5_80506f1 to i32
  %v8_80506f1 = and i32 %v7_80506f1, -256
  %v9_80506f1 = or i32 %v6_80506f1, %v8_80506f1
  store i32 %v9_80506f1, i32* %edx.global-to-local, align 4
  %v10_80506f5 = icmp eq i8 %v5_80506f1, 58
  br i1 %v10_80506f5, label %dec_label_pc_8050ae4, label %dec_label_pc_80506fe

dec_label_pc_80506fe:                             ; preds = %dec_label_pc_80506f1
  %v10_80506fe = icmp eq i8 %v5_80506f1, 62
  br i1 %v10_80506fe, label %dec_label_pc_8050ae4, label %dec_label_pc_8050707

dec_label_pc_8050707:                             ; preds = %dec_label_pc_80506fe
  %v10_8050707 = icmp eq i8 %v5_80506f1, 36
  br i1 %v10_8050707, label %dec_label_pc_8050ae4, label %dec_label_pc_8050710

dec_label_pc_8050710:                             ; preds = %dec_label_pc_8050707
  %v10_8050710 = icmp eq i8 %v5_80506f1, 35
  br i1 %v10_8050710, label %dec_label_pc_8050ae4, label %dec_label_pc_8050719

dec_label_pc_8050719:                             ; preds = %dec_label_pc_8050710
  %v10_8050719 = icmp eq i8 %v5_80506f1, 37
  br i1 %v10_8050719, label %dec_label_pc_8050ae4, label %dec_label_pc_8050722

dec_label_pc_8050722:                             ; preds = %dec_label_pc_8050719
  %v1_8050722 = add i32 %v0_8050ae4, -1
  %v8_8050722 = icmp eq i32 %v1_8050722, 0
  store i32 %v1_8050722, i32* %eax.global-to-local, align 4
  %v1_8050723 = icmp eq i1 %v8_8050722, false
  br i1 %v1_8050723, label %dec_label_pc_80506f1, label %dec_label_pc_8050426.backedge

dec_label_pc_8050730:                             ; preds = %dec_label_pc_8050498
  %v1_8050730 = add i32 %v0_8050498, 24
  %v2_8050730 = inttoptr i32 %v1_8050730 to i32*
  %v3_8050730 = load i32, i32* %v2_8050730, align 4
  %v1_8050733 = add i32 %v3_8050730, -1
  store i32 %v1_8050733, i32* %eax.global-to-local, align 4
  %tmp137 = icmp slt i32 %v1_8050733, 1
  br i1 %tmp137, label %dec_label_pc_8050426.backedge, label %dec_label_pc_805073c

dec_label_pc_805073c:                             ; preds = %dec_label_pc_8050730
  %v2_805073c = add i32 %v0_8050498, 27
  %v3_805073c = add i32 %v2_805073c, %v3_8050730
  %v4_805073c = inttoptr i32 %v3_805073c to i8*
  %v5_805073c = load i8, i8* %v4_805073c, align 1
  %v6_805073c = zext i8 %v5_805073c to i32
  %v7_805073c = load i32, i32* @edx, align 4
  %v8_805073c = and i32 %v7_805073c, -256
  %v9_805073c = or i32 %v8_805073c, %v6_805073c
  store i32 %v9_805073c, i32* %edx.global-to-local, align 4
  %v10_8050740 = icmp eq i8 %v5_805073c, 62
  br i1 %v10_8050740, label %dec_label_pc_805076e.thread, label %dec_label_pc_8050745

dec_label_pc_8050745:                             ; preds = %dec_label_pc_805073c
  %v10_8050745 = icmp eq i8 %v5_805073c, 58
  br i1 %v10_8050745, label %dec_label_pc_805076e.thread, label %dec_label_pc_805074a

dec_label_pc_805074a:                             ; preds = %dec_label_pc_8050745, %dec_label_pc_8050769
  %v0_8050759 = phi i32 [ %v1_8050759, %dec_label_pc_8050769 ], [ %v1_8050733, %dec_label_pc_8050745 ]
  %v7_8050760 = phi i32 [ %v9_8050760, %dec_label_pc_8050769 ], [ %v9_805073c, %dec_label_pc_8050745 ]
  %v1_805074a = trunc i32 %v7_8050760 to i8
  %v10_805074a = icmp eq i8 %v1_805074a, 36
  br i1 %v10_805074a, label %dec_label_pc_805076e, label %dec_label_pc_805074f

dec_label_pc_805074f:                             ; preds = %dec_label_pc_805074a
  %v10_805074f = icmp eq i8 %v1_805074a, 35
  br i1 %v10_805074f, label %dec_label_pc_805076e, label %dec_label_pc_8050754

dec_label_pc_8050754:                             ; preds = %dec_label_pc_805074f
  %v10_8050754 = icmp eq i8 %v1_805074a, 37
  br i1 %v10_8050754, label %dec_label_pc_805076e, label %dec_label_pc_8050759

dec_label_pc_8050759:                             ; preds = %dec_label_pc_8050754
  %v1_8050759 = add i32 %v0_8050759, -1
  %v8_8050759 = icmp eq i32 %v1_8050759, 0
  store i32 %v1_8050759, i32* %eax.global-to-local, align 4
  br i1 %v8_8050759, label %dec_label_pc_8050426.backedge, label %dec_label_pc_8050760

dec_label_pc_8050760:                             ; preds = %dec_label_pc_8050759
  %v3_8050760 = add i32 %v2_805073c, %v0_8050759
  %v4_8050760 = inttoptr i32 %v3_8050760 to i8*
  %v5_8050760 = load i8, i8* %v4_8050760, align 1
  %v6_8050760 = zext i8 %v5_8050760 to i32
  %v8_8050760 = and i32 %v7_8050760, -256
  %v9_8050760 = or i32 %v6_8050760, %v8_8050760
  store i32 %v9_8050760, i32* %edx.global-to-local, align 4
  %v10_8050764 = icmp eq i8 %v5_8050760, 58
  br i1 %v10_8050764, label %dec_label_pc_805076e, label %dec_label_pc_8050769

dec_label_pc_8050769:                             ; preds = %dec_label_pc_8050760
  %v10_8050769 = icmp eq i8 %v5_8050760, 62
  %v1_805076c = icmp eq i1 %v10_8050769, false
  br i1 %v1_805076c, label %dec_label_pc_805074a, label %dec_label_pc_805076e

dec_label_pc_805076e.thread:                      ; preds = %dec_label_pc_8050745, %dec_label_pc_805073c
  store i32 %v3_8050730, i32* @ebp, align 4
  br label %dec_label_pc_805077a

dec_label_pc_805076e:                             ; preds = %dec_label_pc_8050769, %dec_label_pc_8050760, %dec_label_pc_8050754, %dec_label_pc_805074f, %dec_label_pc_805074a
  %v0_805076e = phi i32 [ %v0_8050759, %dec_label_pc_805074a ], [ %v0_8050759, %dec_label_pc_805074f ], [ %v0_8050759, %dec_label_pc_8050754 ], [ %v1_8050759, %dec_label_pc_8050760 ], [ %v1_8050759, %dec_label_pc_8050769 ]
  %v1_805076e = add i32 %v0_805076e, 1
  store i32 %v1_805076e, i32* @ebp, align 4
  %v10_8050771 = icmp eq i32 %v0_805076e, -2
  br i1 %v10_8050771, label %dec_label_pc_8050426.backedge, label %dec_label_pc_805077a

dec_label_pc_805077a:                             ; preds = %dec_label_pc_805076e.thread, %dec_label_pc_805076e
  %v1_805076e155 = phi i32 [ %v3_8050730, %dec_label_pc_805076e.thread ], [ %v1_805076e, %dec_label_pc_805076e ]
  %tmp138 = icmp slt i32 %v1_805076e155, 1
  br i1 %tmp138, label %dec_label_pc_8050a41, label %dec_label_pc_8050782

dec_label_pc_8050782:                             ; preds = %dec_label_pc_805077a
  %v0_8050782 = load i32, i32* @esp, align 4
  %v1_8050785 = add i32 %v0_8050782, -16
  %v2_8050785 = inttoptr i32 %v1_8050785 to i32*
  store i32 24, i32* %v2_8050785, align 4
  %v2_8050787 = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050787, i32* %eax.global-to-local, align 4
  %v0_805078c = load i32, i32* @esp, align 4
  %v1_805078c = inttoptr i32 %v0_805078c to i32*
  %v2_805078c = load i32, i32* %v1_805078c, align 4
  store i32 %v2_805078c, i32* %eax.global-to-local, align 4
  %v3_805078c = add i32 %v0_805078c, 4
  %v1_805078d = inttoptr i32 %v3_805078c to i32*
  %v2_805078d = load i32, i32* %v1_805078d, align 4
  store i32 %v2_805078d, i32* %edx.global-to-local, align 4
  %v1_805078e = add i32 %v0_805078c, 1864
  store i32 %v1_805078e, i32* %eax.global-to-local, align 4
  store i32 %v1_805078e, i32* %v1_805078d, align 4
  store i32 24, i32* %v1_805078c, align 4
  %v3_8050798 = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050798, i32* %eax.global-to-local, align 4
  %v0_805079d = load i32, i32* @esp, align 4
  %v1_805079d = add i32 %v0_805079d, -4
  %v2_805079d = inttoptr i32 %v1_805079d to i32*
  store i32 16384, i32* %v2_805079d, align 4
  %v1_80507a2 = add i32 %v0_805079d, 1864
  %v2_80507a2 = inttoptr i32 %v1_80507a2 to i32*
  %v3_80507a2 = load i32, i32* %v2_80507a2, align 4
  store i32 %v3_80507a2, i32* @esi, align 4
  %v2_80507a9 = add i32 %v0_805079d, -8
  %v3_80507a9 = inttoptr i32 %v2_80507a9 to i32*
  store i32 %v3_80507a2, i32* %v3_80507a9, align 4
  %v2_80507aa = add i32 %v0_805079d, -12
  %v3_80507aa = inttoptr i32 %v2_80507aa to i32*
  store i32 %v3_8050798, i32* %v3_80507aa, align 4
  %v0_80507ab = load i32, i32* @edi, align 4
  %v1_80507ab = add i32 %v0_80507ab, 4
  %v2_80507ab = inttoptr i32 %v1_80507ab to i32*
  %v3_80507ab = load i32, i32* %v2_80507ab, align 4
  store i32 %v3_80507ab, i32* @ebx, align 4
  %v2_80507ae = add i32 %v0_805079d, -16
  %v3_80507ae = inttoptr i32 %v2_80507ae to i32*
  store i32 %v3_80507ab, i32* %v3_80507ae, align 4
  %v0_80507af = call i32 @function_8052923()
  store i32 %v0_80507af, i32* %eax.global-to-local, align 4
  %v0_80507b4 = load i32, i32* @esp, align 4
  %v1_80507b7 = add i32 %v0_80507b4, 28
  %v2_80507b7 = inttoptr i32 %v1_80507b7 to i32*
  store i32 16384, i32* %v2_80507b7, align 4
  %v1_80507bc = add i32 %v0_80507b4, 24
  %v2_80507bc = inttoptr i32 %v1_80507bc to i32*
  store i32 2, i32* %v2_80507bc, align 4
  %v1_80507be = add i32 %v0_80507b4, 20
  %v2_80507be = inttoptr i32 %v1_80507be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_80507be, align 4
  %v0_80507c3 = load i32, i32* @edi, align 4
  %v1_80507c3 = add i32 %v0_80507c3, 4
  %v2_80507c3 = inttoptr i32 %v1_80507c3 to i32*
  %v3_80507c3 = load i32, i32* %v2_80507c3, align 4
  store i32 %v3_80507c3, i32* %ecx.global-to-local, align 4
  %v2_80507c6 = add i32 %v0_80507b4, 16
  %v3_80507c6 = inttoptr i32 %v2_80507c6 to i32*
  store i32 %v3_80507c3, i32* %v3_80507c6, align 4
  %v0_80507c7 = call i32 @function_8052923()
  store i32 %v0_80507c7, i32* %eax.global-to-local, align 4
  %v0_80507cc = load i32, i32* @esp, align 4
  %v1_80507cc = inttoptr i32 %v0_80507cc to i32*
  store i32 24, i32* %v1_80507cc, align 4
  %v2_80507d3 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80507d3, i32* %eax.global-to-local, align 4
  %v0_80507db = load i32, i32* @edi, align 4
  %v1_80507db = add i32 %v0_80507db, 12
  %v2_80507db = inttoptr i32 %v1_80507db to i32*
  store i32 7, i32* %v2_80507db, align 4
  br label %dec_label_pc_8050868

dec_label_pc_80507e7:                             ; preds = %dec_label_pc_8050498
  %v0_80507e7 = load i32, i32* @esp, align 4
  %v1_80507ea = add i32 %v0_80507e7, -16
  %v2_80507ea = inttoptr i32 %v1_80507ea to i32*
  store i32 28, i32* %v2_80507ea, align 4
  %v2_80507ec = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80507ec, i32* %eax.global-to-local, align 4
  %v0_80507f1 = load i32, i32* @esp, align 4
  %v1_80507f1 = inttoptr i32 %v0_80507f1 to i32*
  %v2_80507f1 = load i32, i32* %v1_80507f1, align 4
  store i32 %v2_80507f1, i32* %eax.global-to-local, align 4
  %v3_80507f1 = add i32 %v0_80507f1, 4
  %v1_80507f2 = inttoptr i32 %v3_80507f1 to i32*
  %v1_80507f3 = add i32 %v0_80507f1, 1868
  store i32 %v1_80507f3, i32* %edx.global-to-local, align 4
  store i32 %v1_80507f3, i32* %v1_80507f2, align 4
  store i32 28, i32* %v1_80507f1, align 4
  %v3_80507fd = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80507fd, i32* %eax.global-to-local, align 4
  %v0_8050802 = load i32, i32* @esp, align 4
  %v1_8050802 = add i32 %v0_8050802, 1868
  %v2_8050802 = inttoptr i32 %v1_8050802 to i32*
  %v3_8050802 = load i32, i32* %v2_8050802, align 4
  %v1_8050809 = add i32 %v3_8050802, -1
  store i32 %v1_8050809, i32* %edx.global-to-local, align 4
  %v2_805080a = add i32 %v0_8050802, -4
  %v3_805080a = inttoptr i32 %v2_805080a to i32*
  store i32 %v1_8050809, i32* %v3_805080a, align 4
  %v2_805080b = add i32 %v0_8050802, -8
  %v3_805080b = inttoptr i32 %v2_805080b to i32*
  store i32 %v3_80507fd, i32* %v3_805080b, align 4
  %v0_805080c = load i32, i32* @edi, align 4
  %v1_805080c = add i32 %v0_805080c, 24
  %v2_805080c = inttoptr i32 %v1_805080c to i32*
  %v3_805080c = load i32, i32* %v2_805080c, align 4
  store i32 %v3_805080c, i32* %eax.global-to-local, align 4
  %v2_805080f = add i32 %v0_8050802, -12
  %v3_805080f = inttoptr i32 %v2_805080f to i32*
  store i32 %v3_805080c, i32* %v3_805080f, align 4
  %v1_8050810 = add i32 %v0_8050802, 24
  %v2_8050810 = inttoptr i32 %v1_8050810 to i32*
  %v3_8050810 = load i32, i32* %v2_8050810, align 4
  store i32 %v3_8050810, i32* %eax.global-to-local, align 4
  %v2_8050814 = add i32 %v0_8050802, -16
  %v3_8050814 = inttoptr i32 %v2_8050814 to i32*
  store i32 %v3_8050810, i32* %v3_8050814, align 4
  %v0_8050815 = call i32 @function_8051d30()
  %v0_805081a = load i32, i32* @esp, align 4
  %v1_805081d = add i32 %v0_8050815, 1
  %v8_805081d = icmp eq i32 %v1_805081d, 0
  store i32 %v1_805081d, i32* %eax.global-to-local, align 4
  %v1_8050d45 = add i32 %v0_805081a, 16
  %v2_8050d45 = inttoptr i32 %v1_8050d45 to i32*
  store i32 28, i32* %v2_8050d45, align 4
  %v2_8050d47 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d47, i32* %eax.global-to-local, align 4
  %v0_8050d4c = load i32, i32* @esp, align 4
  %v1_8050d4c = inttoptr i32 %v0_8050d4c to i32*
  br i1 %v8_805081d, label %dec_label_pc_8050d42, label %dec_label_pc_8050824

dec_label_pc_8050824:                             ; preds = %dec_label_pc_80507e7
  %v2_805082e = load i32, i32* %v1_8050d4c, align 4
  store i32 %v2_805082e, i32* %eax.global-to-local, align 4
  %v0_805082f = load i32, i32* @edi, align 4
  %v1_805082f = add i32 %v0_805082f, 4
  %v2_805082f = inttoptr i32 %v1_805082f to i32*
  %v3_805082f = load i32, i32* %v2_805082f, align 4
  store i32 %v3_805082f, i32* %eax.global-to-local, align 4
  store i32 %v3_805082f, i32* %v1_8050d4c, align 4
  %v1_8050833 = call i32 @function_80521f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050833, i32* %eax.global-to-local, align 4
  %v0_8050838 = load i32, i32* @edi, align 4
  %v1_8050838 = add i32 %v0_8050838, 284
  %v2_8050838 = inttoptr i32 %v1_8050838 to i8*
  %v3_8050838 = load i8, i8* %v2_8050838, align 1
  %v4_8050838 = zext i8 %v3_8050838 to i32
  %v6_8050838 = and i32 %v1_8050833, -256
  %v7_8050838 = or i32 %v4_8050838, %v6_8050838
  %v1_8050841 = add i32 %v7_8050838, 1
  store i32 %v1_8050841, i32* %eax.global-to-local, align 4
  %v1_8050842 = add i32 %v0_8050838, 4
  %v2_8050842 = inttoptr i32 %v1_8050842 to i32*
  store i32 -1, i32* %v2_8050842, align 4
  %v0_8050849 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050849 = trunc i32 %v0_8050849 to i8
  %v2_8050849 = load i32, i32* @edi, align 4
  %v3_8050849 = add i32 %v2_8050849, 284
  %v4_8050849 = inttoptr i32 %v3_8050849 to i8*
  store i8 %v1_8050849, i8* %v4_8050849, align 1
  %v0_805084f = load i32, i32* %eax.global-to-local, align 4
  %v1_805084f = trunc i32 %v0_805084f to i8
  %v10_805084f = icmp eq i8 %v1_805084f, 10
  %v1_8050851 = icmp eq i1 %v10_805084f, false
  %v0_8050d33 = load i32, i32* @edi, align 4
  br i1 %v1_8050851, label %dec_label_pc_8050d33, label %dec_label_pc_8050857

dec_label_pc_8050857:                             ; preds = %dec_label_pc_8050824
  %v1_8050857 = add i32 %v0_8050d33, 284
  %v2_8050857 = inttoptr i32 %v1_8050857 to i8*
  store i8 0, i8* %v2_8050857, align 1
  %v0_805085e = load i32, i32* @edi, align 4
  %v1_805085e = add i32 %v0_805085e, 12
  %v2_805085e = inttoptr i32 %v1_805085e to i32*
  store i32 0, i32* %v2_805085e, align 4
  store i32 -1, i32* @ebp, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050868:                             ; preds = %dec_label_pc_8050a41, %dec_label_pc_805092a, %dec_label_pc_8050c3b, %dec_label_pc_8050bc2, %dec_label_pc_8050cb4, %dec_label_pc_8050b71, %dec_label_pc_805052f, %dec_label_pc_8050dc5, %dec_label_pc_8050d33, %dec_label_pc_8050782, %dec_label_pc_8050af8, %dec_label_pc_8050857
  %v0_8050868 = load i32, i32* @edi, align 4
  %v1_8050868 = add i32 %v0_8050868, 24
  %v2_8050868 = inttoptr i32 %v1_8050868 to i32*
  %v3_8050868 = load i32, i32* %v2_8050868, align 4
  store i32 %v3_8050868, i32* @edx, align 4
  store i32 %v3_8050868, i32* %eax.global-to-local, align 4
  %v1_805086d = load i32, i32* @ebp, align 4
  %v2_805086d = sub i32 %v3_8050868, %v1_805086d
  %v8_805086d = xor i32 %v1_805086d, %v3_8050868
  %v9_805086d = xor i32 %v2_805086d, %v3_8050868
  %v10_805086d = and i32 %v9_805086d, %v8_805086d
  %v11_805086d = icmp slt i32 %v10_805086d, 0
  %v12_805086d = icmp eq i32 %v2_805086d, 0
  %v13_805086d = icmp slt i32 %v2_805086d, 0
  %v3_805086f = icmp ne i1 %v13_805086d, %v11_805086d
  %v4_805086f = or i1 %v12_805086d, %v3_805086f
  br i1 %v4_805086f, label %dec_label_pc_8050873, label %dec_label_pc_8050871

dec_label_pc_8050871:                             ; preds = %dec_label_pc_8050868
  store i32 %v1_805086d, i32* @edx, align 4
  br label %dec_label_pc_8050873

dec_label_pc_8050873:                             ; preds = %dec_label_pc_8050868, %dec_label_pc_8050871
  %v1_8050873 = phi i32 [ %v3_8050868, %dec_label_pc_8050868 ], [ %v1_805086d, %dec_label_pc_8050871 ]
  %v2_8050873 = sub i32 %v3_8050868, %v1_8050873
  store i32 %v2_8050873, i32* %eax.global-to-local, align 4
  store i32 %v2_8050873, i32* %v2_8050868, align 4
  %v0_8050878 = load i32, i32* @ebx, align 4
  %v1_8050878 = load i32, i32* @esp, align 4
  %v2_8050878 = add i32 %v1_8050878, -4
  %v3_8050878 = inttoptr i32 %v2_8050878 to i32*
  store i32 %v0_8050878, i32* %v3_8050878, align 4
  %v0_8050879 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050879 = add i32 %v1_8050878, -8
  %v3_8050879 = inttoptr i32 %v2_8050879 to i32*
  store i32 %v0_8050879, i32* %v3_8050879, align 4
  %v1_805087a = add i32 %v1_8050878, 8
  %v2_805087a = inttoptr i32 %v1_805087a to i32*
  %v3_805087a = load i32, i32* %v2_805087a, align 4
  %v1_805087e = load i32, i32* @edx, align 4
  %v2_805087e = add i32 %v1_805087e, %v3_805087a
  store i32 %v2_805087e, i32* %eax.global-to-local, align 4
  %v2_8050880 = add i32 %v1_8050878, -12
  %v3_8050880 = inttoptr i32 %v2_8050880 to i32*
  store i32 %v2_805087e, i32* %v3_8050880, align 4
  %v3_8050881 = load i32, i32* %v2_805087a, align 4
  store i32 %v3_8050881, i32* %ecx.global-to-local, align 4
  %v2_8050885 = add i32 %v1_8050878, -16
  %v3_8050885 = inttoptr i32 %v2_8050885 to i32*
  store i32 %v3_8050881, i32* %v3_8050885, align 4
  %v4_8050886 = call i32 @function_8052727(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050886, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050498

dec_label_pc_8050893:                             ; preds = %dec_label_pc_8050498
  %v1_8050893 = add i32 %v0_8050498, 24
  %v2_8050893 = inttoptr i32 %v1_8050893 to i32*
  %v3_8050893 = load i32, i32* %v2_8050893, align 4
  %v1_8050896 = add i32 %v3_8050893, -1
  store i32 %v1_8050896, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_8050896, 1
  br i1 %tmp139, label %dec_label_pc_8050426.backedge, label %dec_label_pc_805089f.preheader

dec_label_pc_805089f.preheader:                   ; preds = %dec_label_pc_8050893
  %v7_805089f.pre = load i32, i32* @edx, align 4
  %v2_805089f = add i32 %v0_8050498, 28
  br label %dec_label_pc_805089f

dec_label_pc_805089f:                             ; preds = %dec_label_pc_805089f.preheader, %dec_label_pc_80508d0
  %v7_805089f = phi i32 [ %v7_805089f.pre, %dec_label_pc_805089f.preheader ], [ %v9_805089f, %dec_label_pc_80508d0 ]
  %v0_8050c27 = phi i32 [ %v1_8050896, %dec_label_pc_805089f.preheader ], [ %v1_80508d0, %dec_label_pc_80508d0 ]
  %v3_805089f = add i32 %v2_805089f, %v0_8050c27
  %v4_805089f = inttoptr i32 %v3_805089f to i8*
  %v5_805089f = load i8, i8* %v4_805089f, align 1
  %v6_805089f = zext i8 %v5_805089f to i32
  %v8_805089f = and i32 %v7_805089f, -256
  %v9_805089f = or i32 %v6_805089f, %v8_805089f
  store i32 %v9_805089f, i32* %edx.global-to-local, align 4
  %v10_80508a3 = icmp eq i8 %v5_805089f, 58
  br i1 %v10_80508a3, label %dec_label_pc_8050c27, label %dec_label_pc_80508ac

dec_label_pc_80508ac:                             ; preds = %dec_label_pc_805089f
  %v10_80508ac = icmp eq i8 %v5_805089f, 62
  br i1 %v10_80508ac, label %dec_label_pc_8050c27, label %dec_label_pc_80508b5

dec_label_pc_80508b5:                             ; preds = %dec_label_pc_80508ac
  %v10_80508b5 = icmp eq i8 %v5_805089f, 36
  br i1 %v10_80508b5, label %dec_label_pc_8050c27, label %dec_label_pc_80508be

dec_label_pc_80508be:                             ; preds = %dec_label_pc_80508b5
  %v10_80508be = icmp eq i8 %v5_805089f, 35
  br i1 %v10_80508be, label %dec_label_pc_8050c27, label %dec_label_pc_80508c7

dec_label_pc_80508c7:                             ; preds = %dec_label_pc_80508be
  %v10_80508c7 = icmp eq i8 %v5_805089f, 37
  br i1 %v10_80508c7, label %dec_label_pc_8050c27, label %dec_label_pc_80508d0

dec_label_pc_80508d0:                             ; preds = %dec_label_pc_80508c7
  %v1_80508d0 = add i32 %v0_8050c27, -1
  %v8_80508d0 = icmp eq i32 %v1_80508d0, 0
  store i32 %v1_80508d0, i32* %eax.global-to-local, align 4
  %v1_80508d1 = icmp eq i1 %v8_80508d0, false
  br i1 %v1_80508d1, label %dec_label_pc_805089f, label %dec_label_pc_8050426.backedge

dec_label_pc_80508d8:                             ; preds = %dec_label_pc_8050498
  %v1_80508d8 = add i32 %v0_8050498, 24
  %v2_80508d8 = inttoptr i32 %v1_80508d8 to i32*
  %v3_80508d8 = load i32, i32* %v2_80508d8, align 4
  %v1_80508db = add i32 %v3_80508d8, -1
  store i32 %v1_80508db, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_80508db, 1
  br i1 %tmp140, label %dec_label_pc_8050426.backedge, label %dec_label_pc_80508e4

dec_label_pc_80508e4:                             ; preds = %dec_label_pc_80508d8
  %v2_80508e4 = add i32 %v0_8050498, 27
  %v3_80508e4 = add i32 %v2_80508e4, %v3_80508d8
  %v4_80508e4 = inttoptr i32 %v3_80508e4 to i8*
  %v5_80508e4 = load i8, i8* %v4_80508e4, align 1
  %v6_80508e4 = zext i8 %v5_80508e4 to i32
  %v7_80508e4 = load i32, i32* @edx, align 4
  %v8_80508e4 = and i32 %v7_80508e4, -256
  %v9_80508e4 = or i32 %v8_80508e4, %v6_80508e4
  store i32 %v9_80508e4, i32* %edx.global-to-local, align 4
  %v10_80508e8 = icmp eq i8 %v5_80508e4, 62
  br i1 %v10_80508e8, label %dec_label_pc_8050916.thread, label %dec_label_pc_80508ed

dec_label_pc_80508ed:                             ; preds = %dec_label_pc_80508e4
  %v10_80508ed = icmp eq i8 %v5_80508e4, 58
  br i1 %v10_80508ed, label %dec_label_pc_8050916.thread, label %dec_label_pc_80508f2

dec_label_pc_80508f2:                             ; preds = %dec_label_pc_80508ed, %dec_label_pc_8050911
  %v0_8050901 = phi i32 [ %v1_8050901, %dec_label_pc_8050911 ], [ %v1_80508db, %dec_label_pc_80508ed ]
  %v7_8050908 = phi i32 [ %v9_8050908, %dec_label_pc_8050911 ], [ %v9_80508e4, %dec_label_pc_80508ed ]
  %v1_80508f2 = trunc i32 %v7_8050908 to i8
  %v10_80508f2 = icmp eq i8 %v1_80508f2, 36
  br i1 %v10_80508f2, label %dec_label_pc_8050916, label %dec_label_pc_80508f7

dec_label_pc_80508f7:                             ; preds = %dec_label_pc_80508f2
  %v10_80508f7 = icmp eq i8 %v1_80508f2, 35
  br i1 %v10_80508f7, label %dec_label_pc_8050916, label %dec_label_pc_80508fc

dec_label_pc_80508fc:                             ; preds = %dec_label_pc_80508f7
  %v10_80508fc = icmp eq i8 %v1_80508f2, 37
  br i1 %v10_80508fc, label %dec_label_pc_8050916, label %dec_label_pc_8050901

dec_label_pc_8050901:                             ; preds = %dec_label_pc_80508fc
  %v1_8050901 = add i32 %v0_8050901, -1
  %v8_8050901 = icmp eq i32 %v1_8050901, 0
  store i32 %v1_8050901, i32* %eax.global-to-local, align 4
  br i1 %v8_8050901, label %dec_label_pc_8050426.backedge, label %dec_label_pc_8050908

dec_label_pc_8050908:                             ; preds = %dec_label_pc_8050901
  %v3_8050908 = add i32 %v2_80508e4, %v0_8050901
  %v4_8050908 = inttoptr i32 %v3_8050908 to i8*
  %v5_8050908 = load i8, i8* %v4_8050908, align 1
  %v6_8050908 = zext i8 %v5_8050908 to i32
  %v8_8050908 = and i32 %v7_8050908, -256
  %v9_8050908 = or i32 %v6_8050908, %v8_8050908
  store i32 %v9_8050908, i32* %edx.global-to-local, align 4
  %v10_805090c = icmp eq i8 %v5_8050908, 58
  br i1 %v10_805090c, label %dec_label_pc_8050916, label %dec_label_pc_8050911

dec_label_pc_8050911:                             ; preds = %dec_label_pc_8050908
  %v10_8050911 = icmp eq i8 %v5_8050908, 62
  %v1_8050914 = icmp eq i1 %v10_8050911, false
  br i1 %v1_8050914, label %dec_label_pc_80508f2, label %dec_label_pc_8050916

dec_label_pc_8050916.thread:                      ; preds = %dec_label_pc_80508ed, %dec_label_pc_80508e4
  store i32 %v3_80508d8, i32* @ebp, align 4
  br label %dec_label_pc_8050922

dec_label_pc_8050916:                             ; preds = %dec_label_pc_8050911, %dec_label_pc_8050908, %dec_label_pc_80508fc, %dec_label_pc_80508f7, %dec_label_pc_80508f2
  %v0_8050916 = phi i32 [ %v0_8050901, %dec_label_pc_80508f2 ], [ %v0_8050901, %dec_label_pc_80508f7 ], [ %v0_8050901, %dec_label_pc_80508fc ], [ %v1_8050901, %dec_label_pc_8050908 ], [ %v1_8050901, %dec_label_pc_8050911 ]
  %v1_8050916 = add i32 %v0_8050916, 1
  store i32 %v1_8050916, i32* @ebp, align 4
  %v10_8050919 = icmp eq i32 %v0_8050916, -2
  br i1 %v10_8050919, label %dec_label_pc_8050426.backedge, label %dec_label_pc_8050922

dec_label_pc_8050922:                             ; preds = %dec_label_pc_8050916.thread, %dec_label_pc_8050916
  %v1_8050916158 = phi i32 [ %v3_80508d8, %dec_label_pc_8050916.thread ], [ %v1_8050916, %dec_label_pc_8050916 ]
  %tmp141 = icmp slt i32 %v1_8050916158, 1
  br i1 %tmp141, label %dec_label_pc_8050a41, label %dec_label_pc_805092a

dec_label_pc_805092a:                             ; preds = %dec_label_pc_8050922
  %v0_805092a = load i32, i32* @esp, align 4
  %v1_805092d = add i32 %v0_805092a, -16
  %v2_805092d = inttoptr i32 %v1_805092d to i32*
  store i32 26, i32* %v2_805092d, align 4
  %v2_805092f = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805092f, i32* %eax.global-to-local, align 4
  %v0_8050934 = load i32, i32* @esp, align 4
  %v1_8050934 = inttoptr i32 %v0_8050934 to i32*
  %v2_8050934 = load i32, i32* %v1_8050934, align 4
  store i32 %v2_8050934, i32* %eax.global-to-local, align 4
  %v3_8050934 = add i32 %v0_8050934, 4
  %v1_8050935 = inttoptr i32 %v3_8050934 to i32*
  %v2_8050935 = load i32, i32* %v1_8050935, align 4
  store i32 %v2_8050935, i32* %edx.global-to-local, align 4
  %v1_8050936 = add i32 %v0_8050934, 1868
  store i32 %v1_8050936, i32* %eax.global-to-local, align 4
  store i32 %v1_8050936, i32* %v1_8050935, align 4
  store i32 26, i32* %v1_8050934, align 4
  %v3_8050940 = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050940, i32* %eax.global-to-local, align 4
  %v0_8050945 = load i32, i32* @esp, align 4
  %v1_8050945 = add i32 %v0_8050945, -4
  %v2_8050945 = inttoptr i32 %v1_8050945 to i32*
  store i32 16384, i32* %v2_8050945, align 4
  %v1_805094a = add i32 %v0_8050945, 1868
  %v2_805094a = inttoptr i32 %v1_805094a to i32*
  %v3_805094a = load i32, i32* %v2_805094a, align 4
  store i32 %v3_805094a, i32* @esi, align 4
  %v2_8050951 = add i32 %v0_8050945, -8
  %v3_8050951 = inttoptr i32 %v2_8050951 to i32*
  store i32 %v3_805094a, i32* %v3_8050951, align 4
  %v2_8050952 = add i32 %v0_8050945, -12
  %v3_8050952 = inttoptr i32 %v2_8050952 to i32*
  store i32 %v3_8050940, i32* %v3_8050952, align 4
  %v0_8050953 = load i32, i32* @edi, align 4
  %v1_8050953 = add i32 %v0_8050953, 4
  %v2_8050953 = inttoptr i32 %v1_8050953 to i32*
  %v3_8050953 = load i32, i32* %v2_8050953, align 4
  store i32 %v3_8050953, i32* @ebx, align 4
  %v2_8050956 = add i32 %v0_8050945, -16
  %v3_8050956 = inttoptr i32 %v2_8050956 to i32*
  store i32 %v3_8050953, i32* %v3_8050956, align 4
  %v0_8050957 = call i32 @function_8052923()
  store i32 %v0_8050957, i32* %eax.global-to-local, align 4
  %v0_805095c = load i32, i32* @esp, align 4
  %v1_805095f = add i32 %v0_805095c, 28
  %v2_805095f = inttoptr i32 %v1_805095f to i32*
  store i32 16384, i32* %v2_805095f, align 4
  %v1_8050964 = add i32 %v0_805095c, 24
  %v2_8050964 = inttoptr i32 %v1_8050964 to i32*
  store i32 2, i32* %v2_8050964, align 4
  %v1_8050966 = add i32 %v0_805095c, 20
  %v2_8050966 = inttoptr i32 %v1_8050966 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_8050966, align 4
  %v0_805096b = load i32, i32* @edi, align 4
  %v1_805096b = add i32 %v0_805096b, 4
  %v2_805096b = inttoptr i32 %v1_805096b to i32*
  %v3_805096b = load i32, i32* %v2_805096b, align 4
  store i32 %v3_805096b, i32* %ecx.global-to-local, align 4
  %v2_805096e = add i32 %v0_805095c, 16
  %v3_805096e = inttoptr i32 %v2_805096e to i32*
  store i32 %v3_805096b, i32* %v3_805096e, align 4
  %v0_805096f = call i32 @function_8052923()
  store i32 %v0_805096f, i32* %eax.global-to-local, align 4
  %v0_8050974 = load i32, i32* @esp, align 4
  %v1_8050974 = inttoptr i32 %v0_8050974 to i32*
  store i32 26, i32* %v1_8050974, align 4
  %v2_805097b = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805097b, i32* %eax.global-to-local, align 4
  %v0_8050983 = load i32, i32* @edi, align 4
  %v1_8050983 = add i32 %v0_8050983, 12
  %v2_8050983 = inttoptr i32 %v1_8050983 to i32*
  store i32 10, i32* %v2_8050983, align 4
  br label %dec_label_pc_8050868

dec_label_pc_805098f:                             ; preds = %dec_label_pc_80504c7
  %v1_805098f = add i32 %v0_80504b5, 2
  store i32 %v1_805098f, i32* @ebx, align 4
  %v1_8050992 = add i32 %v0_8050992, 2
  store i32 %v1_8050992, i32* @ebp, align 4
  br label %dec_label_pc_80504b1.backedge

dec_label_pc_80504b1.backedge:                    ; preds = %dec_label_pc_805098f, %dec_label_pc_8050cf2
  %v0_805052f124 = phi i32 [ %v0_805052f125, %dec_label_pc_805098f ], [ %v0_8050d2b, %dec_label_pc_8050cf2 ]
  %v1_80504b1 = phi i32 [ %v1_80504c1, %dec_label_pc_805098f ], [ %v3_8050d2b, %dec_label_pc_8050cf2 ]
  %v0_80504b1 = phi i32 [ %v1_8050992, %dec_label_pc_805098f ], [ %v0_80504b1.pre, %dec_label_pc_8050cf2 ]
  %v5_80504c7109 = phi i32 [ %v7_80504c7, %dec_label_pc_805098f ], [ %v0_8050d23, %dec_label_pc_8050cf2 ]
  %v0_80504ba104 = phi i32 [ %v0_80509b1, %dec_label_pc_805098f ], [ %v1_8050d28, %dec_label_pc_8050cf2 ]
  %v2_80504b1 = sub i32 %v0_80504b1, %v1_80504b1
  %v8_80504b1 = xor i32 %v0_80504b1, %v1_80504b1
  %v9_80504b1 = xor i32 %v2_80504b1, %v0_80504b1
  %v10_80504b1 = and i32 %v9_80504b1, %v8_80504b1
  %v11_80504b1 = icmp slt i32 %v10_80504b1, 0
  %v13_80504b1 = icmp slt i32 %v2_80504b1, 0
  %v2_80504b3 = icmp eq i1 %v13_80504b1, %v11_80504b1
  br i1 %v2_80504b3, label %dec_label_pc_8050527, label %dec_label_pc_80504b5.preheader

dec_label_pc_805099a:                             ; preds = %dec_label_pc_80504e1
  store i8 -4, i8* %v1_80504e1, align 1
  %v0_805099d = load i32, i32* @ebx, align 4
  %v1_805099d = add i32 %v0_805099d, 2
  %v2_805099d = inttoptr i32 %v1_805099d to i8*
  %v3_805099d = load i8, i8* %v2_805099d, align 1
  %v4_805099d = zext i8 %v3_805099d to i32
  %v5_805099d = load i32, i32* %eax.global-to-local, align 4
  %v6_805099d = and i32 %v5_805099d, -256
  %v7_805099d = or i32 %v6_805099d, %v4_805099d
  store i32 %v7_805099d, i32* %eax.global-to-local, align 4
  %v11_80509a0 = icmp eq i8 %v3_805099d, -3
  %v1_80509a2 = icmp eq i1 %v11_80509a0, false
  br i1 %v1_80509a2, label %dec_label_pc_80504fe, label %dec_label_pc_80509a8

dec_label_pc_80509a8:                             ; preds = %dec_label_pc_805099a, %dec_label_pc_80504f3
  %v0_80509a8 = phi i32 [ %v0_805099d, %dec_label_pc_805099a ], [ %v0_80504f3, %dec_label_pc_80504f3 ]
  %v1_80509a8 = add i32 %v0_80509a8, 2
  %v2_80509a8 = inttoptr i32 %v1_80509a8 to i8*
  store i8 -4, i8* %v2_80509a8, align 1
  br label %dec_label_pc_8050506

dec_label_pc_80509b1:                             ; preds = %dec_label_pc_80504d2
  %v1_80509b1 = add i32 %v0_80509b1, 1863
  %v2_80509b1 = inttoptr i32 %v1_80509b1 to i8*
  store i8 -1, i8* %v2_80509b1, align 1
  %v0_80509b9 = load i32, i32* @esp, align 4
  %v1_80509b9 = add i32 %v0_80509b9, 1864
  %v2_80509b9 = inttoptr i32 %v1_80509b9 to i8*
  store i8 -5, i8* %v2_80509b9, align 1
  %v0_80509c1 = load i32, i32* @esp, align 4
  %v1_80509c1 = add i32 %v0_80509c1, 1865
  %v2_80509c1 = inttoptr i32 %v1_80509c1 to i8*
  store i8 31, i8* %v2_80509c1, align 1
  %v0_80509c9 = load i32, i32* @esp, align 4
  %v1_80509c9 = add i32 %v0_80509c9, 1831
  %v2_80509c9 = inttoptr i32 %v1_80509c9 to i8*
  store i8 -1, i8* %v2_80509c9, align 1
  %v0_80509d1 = load i32, i32* @esp, align 4
  %v1_80509d1 = add i32 %v0_80509d1, 1832
  %v2_80509d1 = inttoptr i32 %v1_80509d1 to i8*
  store i8 -6, i8* %v2_80509d1, align 1
  %v0_80509d9 = load i32, i32* @esp, align 4
  %v1_80509d9 = add i32 %v0_80509d9, 1833
  %v2_80509d9 = inttoptr i32 %v1_80509d9 to i8*
  store i8 31, i8* %v2_80509d9, align 1
  %v0_80509e1 = load i32, i32* @esp, align 4
  %v1_80509e1 = add i32 %v0_80509e1, 1834
  %v2_80509e1 = inttoptr i32 %v1_80509e1 to i8*
  store i8 0, i8* %v2_80509e1, align 1
  %v0_80509e9 = load i32, i32* @esp, align 4
  %v1_80509e9 = add i32 %v0_80509e9, 1835
  %v2_80509e9 = inttoptr i32 %v1_80509e9 to i8*
  store i8 80, i8* %v2_80509e9, align 1
  %v0_80509f1 = load i32, i32* @esp, align 4
  %v1_80509f1 = add i32 %v0_80509f1, 1836
  %v2_80509f1 = inttoptr i32 %v1_80509f1 to i8*
  store i8 0, i8* %v2_80509f1, align 1
  %v0_80509f9 = load i32, i32* @esp, align 4
  %v1_80509f9 = add i32 %v0_80509f9, 1837
  %v2_80509f9 = inttoptr i32 %v1_80509f9 to i8*
  store i8 24, i8* %v2_80509f9, align 1
  %v0_8050a01 = load i32, i32* @esp, align 4
  %v1_8050a01 = add i32 %v0_8050a01, 1838
  %v2_8050a01 = inttoptr i32 %v1_8050a01 to i8*
  store i8 -1, i8* %v2_8050a01, align 1
  %v0_8050a09 = load i32, i32* @esp, align 4
  %v1_8050a09 = add i32 %v0_8050a09, 1839
  %v2_8050a09 = inttoptr i32 %v1_8050a09 to i8*
  store i8 -16, i8* %v2_8050a09, align 1
  %v0_8050a11 = load i32, i32* @esp, align 4
  %v1_8050a11 = add i32 %v0_8050a11, 8
  %v2_8050a11 = inttoptr i32 %v1_8050a11 to i32*
  %v3_8050a11 = load i32, i32* %v2_8050a11, align 4
  store i32 %v3_8050a11, i32* %eax.global-to-local, align 4
  %v0_8050a15 = load i32, i32* @edi, align 4
  %v1_8050a15 = add i32 %v0_8050a15, 24
  %v2_8050a15 = inttoptr i32 %v1_8050a15 to i32*
  %v3_8050a15 = load i32, i32* %v2_8050a15, align 4
  store i32 %v3_8050a15, i32* %ecx.global-to-local, align 4
  %v0_8050a18 = load i32, i32* @ebx, align 4
  %v1_8050a18 = add i32 %v0_8050a18, 2
  store i32 %v1_8050a18, i32* %edx.global-to-local, align 4
  %v2_8050a1b = add i32 %v3_8050a15, %v3_8050a11
  store i32 %v2_8050a1b, i32* %eax.global-to-local, align 4
  %tmp271 = icmp ugt i32 %v2_8050a1b, %v1_8050a18
  br i1 %tmp271, label %dec_label_pc_8050a25, label %dec_label_pc_80509b1.dec_label_pc_8050527.loopexit_crit_edge

dec_label_pc_80509b1.dec_label_pc_8050527.loopexit_crit_edge: ; preds = %dec_label_pc_80509b1
  %v0_8050527.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8050527

dec_label_pc_8050a25:                             ; preds = %dec_label_pc_80509b1
  %v2_8050a25 = inttoptr i32 %v1_8050a18 to i8*
  %v3_8050a25 = load i8, i8* %v2_8050a25, align 1
  %v12_8050a25 = icmp eq i8 %v3_8050a25, 31
  br i1 %v12_8050a25, label %dec_label_pc_8050cf2, label %dec_label_pc_8050a2f

dec_label_pc_8050a2f:                             ; preds = %dec_label_pc_8050a25
  %v1_8050a2f = inttoptr i32 %v0_8050a18 to i8*
  %v2_8050a2f = load i8, i8* %v1_8050a2f, align 1
  %v3_8050a2f = zext i8 %v2_8050a2f to i32
  %v5_8050a2f = and i32 %v2_8050a1b, -256
  %v6_8050a2f = or i32 %v3_8050a2f, %v5_8050a2f
  store i32 %v6_8050a2f, i32* %eax.global-to-local, align 4
  %v11_8050a31 = icmp eq i8 %v2_8050a2f, -3
  %v1_8050a33 = icmp eq i1 %v11_8050a31, false
  br i1 %v1_8050a33, label %dec_label_pc_8050f8b, label %dec_label_pc_8050a39

dec_label_pc_8050a39:                             ; preds = %dec_label_pc_8050a2f
  store i8 -4, i8* %v1_8050a2f, align 1
  br label %dec_label_pc_80504e1

dec_label_pc_8050a41:                             ; preds = %dec_label_pc_8050922, %dec_label_pc_8050c33, %dec_label_pc_8050bba, %dec_label_pc_8050cac, %dec_label_pc_8050b69, %dec_label_pc_8050527, %dec_label_pc_8050d99, %dec_label_pc_805077a, %dec_label_pc_8050af0
  %v0_8050a41 = phi i32 [ %v1_8050916158, %dec_label_pc_8050922 ], [ %v1_8050c27, %dec_label_pc_8050c33 ], [ %v1_8050bae, %dec_label_pc_8050bba ], [ %v0_8050cac, %dec_label_pc_8050cac ], [ %v0_8050b69, %dec_label_pc_8050b69 ], [ %v0_8050527, %dec_label_pc_8050527 ], [ %v0_8050d90, %dec_label_pc_8050d99 ], [ %v1_805076e155, %dec_label_pc_805077a ], [ %v1_8050ae4, %dec_label_pc_8050af0 ]
  %v1_8050a41 = icmp eq i32 %v0_8050a41, 0
  %v1_8050a43 = icmp eq i1 %v1_8050a41, false
  br i1 %v1_8050a43, label %dec_label_pc_8050868, label %dec_label_pc_8050426.backedge

dec_label_pc_8050a50:                             ; preds = %dec_label_pc_8050441
  %v1_805046e = icmp eq i32 %v0_8050466, 0
  br i1 %v1_805046e, label %dec_label_pc_8050fad, label %dec_label_pc_8050a56

dec_label_pc_8050a56:                             ; preds = %dec_label_pc_8050a50
  %v10_8050a56 = icmp eq i32 %v0_8050466, -1
  %v1_8050a59 = icmp eq i1 %v10_8050a56, false
  br i1 %v1_8050a59, label %dec_label_pc_8050488, label %dec_label_pc_8050a5f

dec_label_pc_8050a5f:                             ; preds = %dec_label_pc_8050a56
  %v1_8050a5f = add i32 %v0_805046b, 40
  %v2_8050a5f = inttoptr i32 %v1_8050a5f to i32*
  %v3_8050a5f = load i32, i32* %v2_8050a5f, align 4
  store i32 %v3_8050a5f, i32* %edx.global-to-local, align 4
  %v1_8050a63 = inttoptr i32 %v3_8050a5f to i32*
  %v2_8050a63 = load i32, i32* %v1_8050a63, align 4
  %v11_8050a63 = icmp eq i32 %v2_8050a63, 11
  br i1 %v11_8050a63, label %dec_label_pc_80503c3, label %dec_label_pc_8050a6c

dec_label_pc_8050a6c:                             ; preds = %dec_label_pc_8050a5f, %dec_label_pc_8050fad
  %v0_8050a6c = phi i32 [ %v1_805046b, %dec_label_pc_8050a5f ], [ %v0_8050a6c.pre, %dec_label_pc_8050fad ]
  %v0_8050a6f = load i32, i32* @edi, align 4
  %v1_8050a6f = add i32 %v0_8050a6f, 4
  %v2_8050a6f = inttoptr i32 %v1_8050a6f to i32*
  %v3_8050a6f = load i32, i32* %v2_8050a6f, align 4
  store i32 %v3_8050a6f, i32* @esi, align 4
  %v2_8050a72 = add i32 %v0_8050a6c, -16
  %v3_8050a72 = inttoptr i32 %v2_8050a72 to i32*
  store i32 %v3_8050a6f, i32* %v3_8050a72, align 4
  %v1_8050a73 = call i32 @function_80521f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050a73, i32* %eax.global-to-local, align 4
  %v0_8050a78 = load i32, i32* @edi, align 4
  %v1_8050a78 = add i32 %v0_8050a78, 284
  %v2_8050a78 = inttoptr i32 %v1_8050a78 to i8*
  %v3_8050a78 = load i8, i8* %v2_8050a78, align 1
  %v4_8050a78 = zext i8 %v3_8050a78 to i32
  %v6_8050a78 = and i32 %v1_8050a73, -256
  %v7_8050a78 = or i32 %v4_8050a78, %v6_8050a78
  %v1_8050a81 = add i32 %v7_8050a78, 1
  store i32 %v1_8050a81, i32* %eax.global-to-local, align 4
  %v1_8050a82 = add i32 %v0_8050a78, 4
  %v2_8050a82 = inttoptr i32 %v1_8050a82 to i32*
  store i32 -1, i32* %v2_8050a82, align 4
  %v0_8050a89 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a89 = trunc i32 %v0_8050a89 to i8
  %v2_8050a89 = load i32, i32* @edi, align 4
  %v3_8050a89 = add i32 %v2_8050a89, 284
  %v4_8050a89 = inttoptr i32 %v3_8050a89 to i8*
  store i8 %v1_8050a89, i8* %v4_8050a89, align 1
  %v0_8050a8f = load i32, i32* %eax.global-to-local, align 4
  %v1_8050a8f = trunc i32 %v0_8050a8f to i8
  %tmp272 = icmp ult i8 %v1_8050a8f, 10
  %v0_8050fbc = load i32, i32* @edi, align 4
  br i1 %tmp272, label %dec_label_pc_8050fbc, label %dec_label_pc_8050a97

dec_label_pc_8050a97:                             ; preds = %dec_label_pc_8050a6c
  %v1_8050a97 = add i32 %v0_8050fbc, 284
  %v2_8050a97 = inttoptr i32 %v1_8050a97 to i8*
  store i8 0, i8* %v2_8050a97, align 1
  %v0_8050a9e = load i32, i32* @edi, align 4
  %v1_8050a9e = add i32 %v0_8050a9e, 12
  %v2_8050a9e = inttoptr i32 %v1_8050a9e to i32*
  store i32 0, i32* %v2_8050a9e, align 4
  br label %dec_label_pc_80503c3

dec_label_pc_8050ab0:                             ; preds = %dec_label_pc_80504fe
  %v1_8050ab0 = add i32 %v0_8050ab0, 2
  %v2_8050ab0 = inttoptr i32 %v1_8050ab0 to i8*
  store i8 -3, i8* %v2_8050ab0, align 1
  br label %dec_label_pc_8050506

dec_label_pc_8050ab9:                             ; preds = %dec_label_pc_805042d
  %v0_8050ab9 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050ab9, i32* %edx.global-to-local, align 4
  %v1_8050abb = load i32, i32* @esp, align 4
  %v2_8050abb = add i32 %v1_8050abb, -4
  %v3_8050abb = inttoptr i32 %v2_8050abb to i32*
  store i32 %v0_8050ab9, i32* %v3_8050abb, align 4
  %v0_8050abc = load i32, i32* @edi, align 4
  %v1_8050abc = add i32 %v0_8050abc, 92
  store i32 %v1_8050abc, i32* %eax.global-to-local, align 4
  %v1_8050abf = add i32 %v1_8050abb, -8
  %v2_8050abf = inttoptr i32 %v1_8050abf to i32*
  store i32 192, i32* %v2_8050abf, align 4
  %v0_8050ac4 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050ac4 = add i32 %v1_8050abb, -12
  %v3_8050ac4 = inttoptr i32 %v2_8050ac4 to i32*
  store i32 %v0_8050ac4, i32* %v3_8050ac4, align 4
  %v0_8050ac5 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050ac5 = add i32 %v1_8050abb, -16
  %v3_8050ac5 = inttoptr i32 %v2_8050ac5 to i32*
  store i32 %v0_8050ac5, i32* %v3_8050ac5, align 4
  %v4_8050ac6 = call i32 @function_8052727(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050ac6, i32* %eax.global-to-local, align 4
  %v0_8050acb = load i32, i32* @edi, align 4
  %v1_8050acb = add i32 %v0_8050acb, 24
  %v2_8050acb = inttoptr i32 %v1_8050acb to i32*
  %v3_8050acb = load i32, i32* %v2_8050acb, align 4
  %v1_8050ace = add i32 %v3_8050acb, -64
  store i32 %v1_8050ace, i32* %eax.global-to-local, align 4
  store i32 %v1_8050ace, i32* %v2_8050acb, align 4
  br label %dec_label_pc_8050441

dec_label_pc_8050adc:                             ; preds = %dec_label_pc_80504eb
  store i8 -3, i8* %v1_80504e1, align 1
  %v5_80504f3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80504f3

dec_label_pc_8050ae4:                             ; preds = %dec_label_pc_8050719, %dec_label_pc_8050710, %dec_label_pc_8050707, %dec_label_pc_80506fe, %dec_label_pc_80506f1
  %v1_8050ae4 = add i32 %v0_8050ae4, 1
  store i32 %v1_8050ae4, i32* @ebp, align 4
  %v10_8050ae7 = icmp eq i32 %v0_8050ae4, -2
  br i1 %v10_8050ae7, label %dec_label_pc_8050426.backedge, label %dec_label_pc_8050af0

dec_label_pc_8050af0:                             ; preds = %dec_label_pc_8050ae4
  %tmp142 = icmp slt i32 %v1_8050ae4, 1
  br i1 %tmp142, label %dec_label_pc_8050a41, label %dec_label_pc_8050af8

dec_label_pc_8050af8:                             ; preds = %dec_label_pc_8050af0
  %v0_8050af8 = load i32, i32* @esp, align 4
  %v1_8050afb = add i32 %v0_8050af8, -16
  %v2_8050afb = inttoptr i32 %v1_8050afb to i32*
  store i32 25, i32* %v2_8050afb, align 4
  %v2_8050afd = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050afd, i32* %eax.global-to-local, align 4
  %v0_8050b02 = load i32, i32* @esp, align 4
  %v1_8050b02 = inttoptr i32 %v0_8050b02 to i32*
  %v2_8050b02 = load i32, i32* %v1_8050b02, align 4
  store i32 %v2_8050b02, i32* %eax.global-to-local, align 4
  %v3_8050b02 = add i32 %v0_8050b02, 4
  %v1_8050b03 = inttoptr i32 %v3_8050b02 to i32*
  %v2_8050b03 = load i32, i32* %v1_8050b03, align 4
  store i32 %v2_8050b03, i32* %edx.global-to-local, align 4
  %v1_8050b04 = add i32 %v0_8050b02, 1868
  store i32 %v1_8050b04, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050b04, i32* %v1_8050b03, align 4
  store i32 25, i32* %v1_8050b02, align 4
  %v3_8050b0e = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050b0e, i32* %eax.global-to-local, align 4
  %v0_8050b13 = load i32, i32* @esp, align 4
  %v1_8050b13 = add i32 %v0_8050b13, -4
  %v2_8050b13 = inttoptr i32 %v1_8050b13 to i32*
  store i32 16384, i32* %v2_8050b13, align 4
  %v1_8050b18 = add i32 %v0_8050b13, 1868
  %v2_8050b18 = inttoptr i32 %v1_8050b18 to i32*
  %v3_8050b18 = load i32, i32* %v2_8050b18, align 4
  store i32 %v3_8050b18, i32* @esi, align 4
  %v2_8050b1f = add i32 %v0_8050b13, -8
  %v3_8050b1f = inttoptr i32 %v2_8050b1f to i32*
  store i32 %v3_8050b18, i32* %v3_8050b1f, align 4
  %v2_8050b20 = add i32 %v0_8050b13, -12
  %v3_8050b20 = inttoptr i32 %v2_8050b20 to i32*
  store i32 %v3_8050b0e, i32* %v3_8050b20, align 4
  %v0_8050b21 = load i32, i32* @edi, align 4
  %v1_8050b21 = add i32 %v0_8050b21, 4
  %v2_8050b21 = inttoptr i32 %v1_8050b21 to i32*
  %v3_8050b21 = load i32, i32* %v2_8050b21, align 4
  store i32 %v3_8050b21, i32* @ebx, align 4
  %v2_8050b24 = add i32 %v0_8050b13, -16
  %v3_8050b24 = inttoptr i32 %v2_8050b24 to i32*
  store i32 %v3_8050b21, i32* %v3_8050b24, align 4
  %v0_8050b25 = call i32 @function_8052923()
  store i32 %v0_8050b25, i32* %eax.global-to-local, align 4
  %v0_8050b2a = load i32, i32* @esp, align 4
  %v1_8050b2d = add i32 %v0_8050b2a, 28
  %v2_8050b2d = inttoptr i32 %v1_8050b2d to i32*
  store i32 16384, i32* %v2_8050b2d, align 4
  %v1_8050b32 = add i32 %v0_8050b2a, 24
  %v2_8050b32 = inttoptr i32 %v1_8050b32 to i32*
  store i32 2, i32* %v2_8050b32, align 4
  %v1_8050b34 = add i32 %v0_8050b2a, 20
  %v2_8050b34 = inttoptr i32 %v1_8050b34 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_8050b34, align 4
  %v0_8050b39 = load i32, i32* @edi, align 4
  %v1_8050b39 = add i32 %v0_8050b39, 4
  %v2_8050b39 = inttoptr i32 %v1_8050b39 to i32*
  %v3_8050b39 = load i32, i32* %v2_8050b39, align 4
  store i32 %v3_8050b39, i32* %ecx.global-to-local, align 4
  %v2_8050b3c = add i32 %v0_8050b2a, 16
  %v3_8050b3c = inttoptr i32 %v2_8050b3c to i32*
  store i32 %v3_8050b39, i32* %v3_8050b3c, align 4
  %v0_8050b3d = call i32 @function_8052923()
  store i32 %v0_8050b3d, i32* %eax.global-to-local, align 4
  %v0_8050b42 = load i32, i32* @esp, align 4
  %v1_8050b42 = inttoptr i32 %v0_8050b42 to i32*
  store i32 25, i32* %v1_8050b42, align 4
  %v2_8050b49 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050b49, i32* %eax.global-to-local, align 4
  %v0_8050b51 = load i32, i32* @edi, align 4
  %v1_8050b51 = add i32 %v0_8050b51, 12
  %v2_8050b51 = inttoptr i32 %v1_8050b51 to i32*
  store i32 9, i32* %v2_8050b51, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050b5d:                             ; preds = %dec_label_pc_805056b, %dec_label_pc_8050562, %dec_label_pc_8050559, %dec_label_pc_8050550, %dec_label_pc_8050543
  %v1_8050b5d = add i32 %v0_8050b5d, 1
  store i32 %v1_8050b5d, i32* @ebp, align 4
  %v10_8050b60 = icmp eq i32 %v0_8050b5d, -2
  br i1 %v10_8050b60, label %dec_label_pc_8050577, label %dec_label_pc_8050b69

dec_label_pc_8050b69:                             ; preds = %dec_label_pc_8050b5d, %dec_label_pc_80505e1
  %v0_8050b69 = phi i32 [ %v1_8050b5d, %dec_label_pc_8050b5d ], [ %v0_80505fa, %dec_label_pc_80505e1 ]
  %tmp143 = icmp slt i32 %v0_8050b69, 1
  br i1 %tmp143, label %dec_label_pc_8050a41, label %dec_label_pc_8050b71

dec_label_pc_8050b71:                             ; preds = %dec_label_pc_8050b69
  %v0_8050b71 = load i32, i32* @edi, align 4
  %v1_8050b71 = inttoptr i32 %v0_8050b71 to i32*
  %v2_8050b71 = load i32, i32* %v1_8050b71, align 4
  store i32 %v2_8050b71, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050b75 = load i32, i32* @esp, align 4
  %v1_8050b75 = add i32 %v0_8050b75, -4
  %v2_8050b75 = inttoptr i32 %v1_8050b75 to i32*
  store i32 16384, i32* %v2_8050b75, align 4
  %v0_8050b7a = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b7a = add i32 %v0_8050b7a, 12
  %v2_8050b7a = inttoptr i32 %v1_8050b7a to i8*
  %v3_8050b7a = load i8, i8* %v2_8050b7a, align 1
  %v4_8050b7a = zext i8 %v3_8050b7a to i32
  %v5_8050b7a = load i32, i32* %eax.global-to-local, align 4
  %v6_8050b7a = and i32 %v5_8050b7a, -256
  %v7_8050b7a = or i32 %v6_8050b7a, %v4_8050b7a
  store i32 %v7_8050b7a, i32* %eax.global-to-local, align 4
  %v2_8050b7d = add i32 %v0_8050b75, -8
  %v3_8050b7d = inttoptr i32 %v2_8050b7d to i32*
  store i32 %v7_8050b7a, i32* %v3_8050b7d, align 4
  %v0_8050b7e = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b7e = inttoptr i32 %v0_8050b7e to i32*
  %v2_8050b7e = load i32, i32* %v1_8050b7e, align 4
  store i32 %v2_8050b7e, i32* @esi, align 4
  %v2_8050b80 = add i32 %v0_8050b75, -12
  %v3_8050b80 = inttoptr i32 %v2_8050b80 to i32*
  store i32 %v2_8050b7e, i32* %v3_8050b80, align 4
  %v0_8050b81 = load i32, i32* @edi, align 4
  %v1_8050b81 = add i32 %v0_8050b81, 4
  %v2_8050b81 = inttoptr i32 %v1_8050b81 to i32*
  %v3_8050b81 = load i32, i32* %v2_8050b81, align 4
  store i32 %v3_8050b81, i32* @ebx, align 4
  %v2_8050b84 = add i32 %v0_8050b75, -16
  %v3_8050b84 = inttoptr i32 %v2_8050b84 to i32*
  store i32 %v3_8050b81, i32* %v3_8050b84, align 4
  %v0_8050b85 = call i32 @function_8052923()
  store i32 %v0_8050b85, i32* %eax.global-to-local, align 4
  %v0_8050b8a = load i32, i32* @esp, align 4
  %v1_8050b8a = add i32 %v0_8050b8a, -4
  %v2_8050b8a = inttoptr i32 %v1_8050b8a to i32*
  store i32 16384, i32* %v2_8050b8a, align 4
  %v1_8050b8f = add i32 %v0_8050b8a, -8
  %v2_8050b8f = inttoptr i32 %v1_8050b8f to i32*
  store i32 2, i32* %v2_8050b8f, align 4
  %v1_8050b91 = add i32 %v0_8050b8a, -12
  %v2_8050b91 = inttoptr i32 %v1_8050b91 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_8050b91, align 4
  %v0_8050b96 = load i32, i32* @edi, align 4
  %v1_8050b96 = add i32 %v0_8050b96, 4
  %v2_8050b96 = inttoptr i32 %v1_8050b96 to i32*
  %v3_8050b96 = load i32, i32* %v2_8050b96, align 4
  store i32 %v3_8050b96, i32* %ecx.global-to-local, align 4
  %v2_8050b99 = add i32 %v0_8050b8a, -16
  %v3_8050b99 = inttoptr i32 %v2_8050b99 to i32*
  store i32 %v3_8050b96, i32* %v3_8050b99, align 4
  %v0_8050b9a = call i32 @function_8052923()
  store i32 %v0_8050b9a, i32* %eax.global-to-local, align 4
  %v0_8050ba2 = load i32, i32* @edi, align 4
  %v1_8050ba2 = add i32 %v0_8050ba2, 12
  %v2_8050ba2 = inttoptr i32 %v1_8050ba2 to i32*
  store i32 4, i32* %v2_8050ba2, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050bae:                             ; preds = %dec_label_pc_80506d4, %dec_label_pc_80506cb, %dec_label_pc_80506c2, %dec_label_pc_80506b9, %dec_label_pc_80506ac
  %v1_8050bae = add i32 %v0_8050bae, 1
  store i32 %v1_8050bae, i32* @ebp, align 4
  %v10_8050bb1 = icmp eq i32 %v0_8050bae, -2
  br i1 %v10_8050bb1, label %dec_label_pc_8050426.backedge, label %dec_label_pc_8050bba

dec_label_pc_8050bba:                             ; preds = %dec_label_pc_8050bae
  %tmp144 = icmp slt i32 %v1_8050bae, 1
  br i1 %tmp144, label %dec_label_pc_8050a41, label %dec_label_pc_8050bc2

dec_label_pc_8050bc2:                             ; preds = %dec_label_pc_8050bba
  %v0_8050bc2 = load i32, i32* @esp, align 4
  %v1_8050bc5 = add i32 %v0_8050bc2, -16
  %v2_8050bc5 = inttoptr i32 %v1_8050bc5 to i32*
  store i32 23, i32* %v2_8050bc5, align 4
  %v2_8050bc7 = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050bc7, i32* %eax.global-to-local, align 4
  %v0_8050bcc = load i32, i32* @esp, align 4
  %v1_8050bcc = inttoptr i32 %v0_8050bcc to i32*
  %v2_8050bcc = load i32, i32* %v1_8050bcc, align 4
  store i32 %v2_8050bcc, i32* %eax.global-to-local, align 4
  %v3_8050bcc = add i32 %v0_8050bcc, 4
  %v1_8050bcd = inttoptr i32 %v3_8050bcc to i32*
  %v1_8050bce = add i32 %v0_8050bcc, 1868
  store i32 %v1_8050bce, i32* %edx.global-to-local, align 4
  store i32 %v1_8050bce, i32* %v1_8050bcd, align 4
  store i32 23, i32* %v1_8050bcc, align 4
  %v3_8050bd8 = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050bd8, i32* %eax.global-to-local, align 4
  %v0_8050bdd = load i32, i32* @esp, align 4
  %v1_8050bdd = add i32 %v0_8050bdd, -4
  %v2_8050bdd = inttoptr i32 %v1_8050bdd to i32*
  store i32 16384, i32* %v2_8050bdd, align 4
  %v1_8050be2 = add i32 %v0_8050bdd, 1868
  %v2_8050be2 = inttoptr i32 %v1_8050be2 to i32*
  %v3_8050be2 = load i32, i32* %v2_8050be2, align 4
  store i32 %v3_8050be2, i32* @esi, align 4
  %v2_8050be9 = add i32 %v0_8050bdd, -8
  %v3_8050be9 = inttoptr i32 %v2_8050be9 to i32*
  store i32 %v3_8050be2, i32* %v3_8050be9, align 4
  %v2_8050bea = add i32 %v0_8050bdd, -12
  %v3_8050bea = inttoptr i32 %v2_8050bea to i32*
  store i32 %v3_8050bd8, i32* %v3_8050bea, align 4
  %v0_8050beb = load i32, i32* @edi, align 4
  %v1_8050beb = add i32 %v0_8050beb, 4
  %v2_8050beb = inttoptr i32 %v1_8050beb to i32*
  %v3_8050beb = load i32, i32* %v2_8050beb, align 4
  store i32 %v3_8050beb, i32* @ebx, align 4
  %v2_8050bee = add i32 %v0_8050bdd, -16
  %v3_8050bee = inttoptr i32 %v2_8050bee to i32*
  store i32 %v3_8050beb, i32* %v3_8050bee, align 4
  %v0_8050bef = call i32 @function_8052923()
  store i32 %v0_8050bef, i32* %eax.global-to-local, align 4
  %v0_8050bf4 = load i32, i32* @esp, align 4
  %v1_8050bf7 = add i32 %v0_8050bf4, 28
  %v2_8050bf7 = inttoptr i32 %v1_8050bf7 to i32*
  store i32 16384, i32* %v2_8050bf7, align 4
  %v1_8050bfc = add i32 %v0_8050bf4, 24
  %v2_8050bfc = inttoptr i32 %v1_8050bfc to i32*
  store i32 2, i32* %v2_8050bfc, align 4
  %v1_8050bfe = add i32 %v0_8050bf4, 20
  %v2_8050bfe = inttoptr i32 %v1_8050bfe to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_8050bfe, align 4
  %v0_8050c03 = load i32, i32* @edi, align 4
  %v1_8050c03 = add i32 %v0_8050c03, 4
  %v2_8050c03 = inttoptr i32 %v1_8050c03 to i32*
  %v3_8050c03 = load i32, i32* %v2_8050c03, align 4
  store i32 %v3_8050c03, i32* %ecx.global-to-local, align 4
  %v2_8050c06 = add i32 %v0_8050bf4, 16
  %v3_8050c06 = inttoptr i32 %v2_8050c06 to i32*
  store i32 %v3_8050c03, i32* %v3_8050c06, align 4
  %v0_8050c07 = call i32 @function_8052923()
  store i32 %v0_8050c07, i32* %eax.global-to-local, align 4
  %v0_8050c0c = load i32, i32* @esp, align 4
  %v1_8050c0c = inttoptr i32 %v0_8050c0c to i32*
  store i32 23, i32* %v1_8050c0c, align 4
  %v2_8050c13 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050c13, i32* %eax.global-to-local, align 4
  %v0_8050c1b = load i32, i32* @edi, align 4
  %v1_8050c1b = add i32 %v0_8050c1b, 12
  %v2_8050c1b = inttoptr i32 %v1_8050c1b to i32*
  store i32 6, i32* %v2_8050c1b, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050c27:                             ; preds = %dec_label_pc_80508c7, %dec_label_pc_80508be, %dec_label_pc_80508b5, %dec_label_pc_80508ac, %dec_label_pc_805089f
  %v1_8050c27 = add i32 %v0_8050c27, 1
  store i32 %v1_8050c27, i32* @ebp, align 4
  %v10_8050c2a = icmp eq i32 %v0_8050c27, -2
  br i1 %v10_8050c2a, label %dec_label_pc_8050426.backedge, label %dec_label_pc_8050c33

dec_label_pc_8050c33:                             ; preds = %dec_label_pc_8050c27
  %tmp145 = icmp slt i32 %v1_8050c27, 1
  br i1 %tmp145, label %dec_label_pc_8050a41, label %dec_label_pc_8050c3b

dec_label_pc_8050c3b:                             ; preds = %dec_label_pc_8050c33
  %v0_8050c3b = load i32, i32* @esp, align 4
  %v1_8050c3e = add i32 %v0_8050c3b, -16
  %v2_8050c3e = inttoptr i32 %v1_8050c3e to i32*
  store i32 22, i32* %v2_8050c3e, align 4
  %v2_8050c40 = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050c40, i32* %eax.global-to-local, align 4
  %v0_8050c45 = load i32, i32* @esp, align 4
  %v1_8050c45 = inttoptr i32 %v0_8050c45 to i32*
  %v2_8050c45 = load i32, i32* %v1_8050c45, align 4
  store i32 %v2_8050c45, i32* %eax.global-to-local, align 4
  %v3_8050c45 = add i32 %v0_8050c45, 4
  %v1_8050c46 = inttoptr i32 %v3_8050c45 to i32*
  %v2_8050c46 = load i32, i32* %v1_8050c46, align 4
  store i32 %v2_8050c46, i32* %edx.global-to-local, align 4
  %v1_8050c47 = add i32 %v0_8050c45, 1864
  store i32 %v1_8050c47, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c47, i32* %v1_8050c46, align 4
  store i32 22, i32* %v1_8050c45, align 4
  %v3_8050c51 = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050c51, i32* %eax.global-to-local, align 4
  %v0_8050c56 = load i32, i32* @esp, align 4
  %v1_8050c56 = add i32 %v0_8050c56, -4
  %v2_8050c56 = inttoptr i32 %v1_8050c56 to i32*
  store i32 16384, i32* %v2_8050c56, align 4
  %v1_8050c5b = add i32 %v0_8050c56, 1864
  %v2_8050c5b = inttoptr i32 %v1_8050c5b to i32*
  %v3_8050c5b = load i32, i32* %v2_8050c5b, align 4
  store i32 %v3_8050c5b, i32* @esi, align 4
  %v2_8050c62 = add i32 %v0_8050c56, -8
  %v3_8050c62 = inttoptr i32 %v2_8050c62 to i32*
  store i32 %v3_8050c5b, i32* %v3_8050c62, align 4
  %v2_8050c63 = add i32 %v0_8050c56, -12
  %v3_8050c63 = inttoptr i32 %v2_8050c63 to i32*
  store i32 %v3_8050c51, i32* %v3_8050c63, align 4
  %v0_8050c64 = load i32, i32* @edi, align 4
  %v1_8050c64 = add i32 %v0_8050c64, 4
  %v2_8050c64 = inttoptr i32 %v1_8050c64 to i32*
  %v3_8050c64 = load i32, i32* %v2_8050c64, align 4
  store i32 %v3_8050c64, i32* @ebx, align 4
  %v2_8050c67 = add i32 %v0_8050c56, -16
  %v3_8050c67 = inttoptr i32 %v2_8050c67 to i32*
  store i32 %v3_8050c64, i32* %v3_8050c67, align 4
  %v0_8050c68 = call i32 @function_8052923()
  store i32 %v0_8050c68, i32* %eax.global-to-local, align 4
  %v0_8050c6d = load i32, i32* @esp, align 4
  %v1_8050c70 = add i32 %v0_8050c6d, 28
  %v2_8050c70 = inttoptr i32 %v1_8050c70 to i32*
  store i32 16384, i32* %v2_8050c70, align 4
  %v1_8050c75 = add i32 %v0_8050c6d, 24
  %v2_8050c75 = inttoptr i32 %v1_8050c75 to i32*
  store i32 2, i32* %v2_8050c75, align 4
  %v1_8050c77 = add i32 %v0_8050c6d, 20
  %v2_8050c77 = inttoptr i32 %v1_8050c77 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_8050c77, align 4
  %v0_8050c7c = load i32, i32* @edi, align 4
  %v1_8050c7c = add i32 %v0_8050c7c, 4
  %v2_8050c7c = inttoptr i32 %v1_8050c7c to i32*
  %v3_8050c7c = load i32, i32* %v2_8050c7c, align 4
  store i32 %v3_8050c7c, i32* %ecx.global-to-local, align 4
  %v2_8050c7f = add i32 %v0_8050c6d, 16
  %v3_8050c7f = inttoptr i32 %v2_8050c7f to i32*
  store i32 %v3_8050c7c, i32* %v3_8050c7f, align 4
  %v0_8050c80 = call i32 @function_8052923()
  store i32 %v0_8050c80, i32* %eax.global-to-local, align 4
  %v0_8050c85 = load i32, i32* @esp, align 4
  %v1_8050c85 = inttoptr i32 %v0_8050c85 to i32*
  store i32 22, i32* %v1_8050c85, align 4
  %v2_8050c8c = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050c8c, i32* %eax.global-to-local, align 4
  %v0_8050c94 = load i32, i32* @edi, align 4
  %v1_8050c94 = add i32 %v0_8050c94, 12
  %v2_8050c94 = inttoptr i32 %v1_8050c94 to i32*
  store i32 8, i32* %v2_8050c94, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050ca0:                             ; preds = %dec_label_pc_805062f, %dec_label_pc_8050626, %dec_label_pc_805061d, %dec_label_pc_8050610
  %v1_8050ca0 = add i32 %v0_8050ca0, 1
  store i32 %v1_8050ca0, i32* @ebp, align 4
  %v10_8050ca3 = icmp eq i32 %v0_8050ca0, -2
  br i1 %v10_8050ca3, label %dec_label_pc_805063b, label %dec_label_pc_8050cac

dec_label_pc_8050cac:                             ; preds = %dec_label_pc_8050ca0, %dec_label_pc_8050684
  %v0_8050cac = phi i32 [ %v1_8050ca0, %dec_label_pc_8050ca0 ], [ %v0_8050691, %dec_label_pc_8050684 ]
  %tmp146 = icmp slt i32 %v0_8050cac, 1
  br i1 %tmp146, label %dec_label_pc_8050a41, label %dec_label_pc_8050cb4

dec_label_pc_8050cb4:                             ; preds = %dec_label_pc_8050cac
  %v0_8050cb4 = load i32, i32* @edi, align 4
  %v1_8050cb4 = inttoptr i32 %v0_8050cb4 to i32*
  %v2_8050cb4 = load i32, i32* %v1_8050cb4, align 4
  store i32 %v2_8050cb4, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050cb8 = load i32, i32* @esp, align 4
  %v1_8050cb8 = add i32 %v0_8050cb8, -4
  %v2_8050cb8 = inttoptr i32 %v1_8050cb8 to i32*
  store i32 16384, i32* %v2_8050cb8, align 4
  %v0_8050cbd = load i32, i32* %edx.global-to-local, align 4
  %v1_8050cbd = add i32 %v0_8050cbd, 13
  %v2_8050cbd = inttoptr i32 %v1_8050cbd to i8*
  %v3_8050cbd = load i8, i8* %v2_8050cbd, align 1
  %v4_8050cbd = zext i8 %v3_8050cbd to i32
  %v5_8050cbd = load i32, i32* %eax.global-to-local, align 4
  %v6_8050cbd = and i32 %v5_8050cbd, -256
  %v7_8050cbd = or i32 %v6_8050cbd, %v4_8050cbd
  store i32 %v7_8050cbd, i32* %eax.global-to-local, align 4
  %v2_8050cc0 = add i32 %v0_8050cb8, -8
  %v3_8050cc0 = inttoptr i32 %v2_8050cc0 to i32*
  store i32 %v7_8050cbd, i32* %v3_8050cc0, align 4
  %v0_8050cc1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050cc1 = add i32 %v0_8050cc1, 4
  %v2_8050cc1 = inttoptr i32 %v1_8050cc1 to i32*
  %v3_8050cc1 = load i32, i32* %v2_8050cc1, align 4
  store i32 %v3_8050cc1, i32* @esi, align 4
  %v2_8050cc4 = add i32 %v0_8050cb8, -12
  %v3_8050cc4 = inttoptr i32 %v2_8050cc4 to i32*
  store i32 %v3_8050cc1, i32* %v3_8050cc4, align 4
  %v0_8050cc5 = load i32, i32* @edi, align 4
  %v1_8050cc5 = add i32 %v0_8050cc5, 4
  %v2_8050cc5 = inttoptr i32 %v1_8050cc5 to i32*
  %v3_8050cc5 = load i32, i32* %v2_8050cc5, align 4
  store i32 %v3_8050cc5, i32* @ebx, align 4
  %v2_8050cc8 = add i32 %v0_8050cb8, -16
  %v3_8050cc8 = inttoptr i32 %v2_8050cc8 to i32*
  store i32 %v3_8050cc5, i32* %v3_8050cc8, align 4
  %v0_8050cc9 = call i32 @function_8052923()
  store i32 %v0_8050cc9, i32* %eax.global-to-local, align 4
  %v0_8050cce = load i32, i32* @esp, align 4
  %v1_8050cce = add i32 %v0_8050cce, -4
  %v2_8050cce = inttoptr i32 %v1_8050cce to i32*
  store i32 16384, i32* %v2_8050cce, align 4
  %v1_8050cd3 = add i32 %v0_8050cce, -8
  %v2_8050cd3 = inttoptr i32 %v1_8050cd3 to i32*
  store i32 2, i32* %v2_8050cd3, align 4
  %v1_8050cd5 = add i32 %v0_8050cce, -12
  %v2_8050cd5 = inttoptr i32 %v1_8050cd5 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80549c6.10 to i32), i32* %v2_8050cd5, align 4
  %v0_8050cda = load i32, i32* @edi, align 4
  %v1_8050cda = add i32 %v0_8050cda, 4
  %v2_8050cda = inttoptr i32 %v1_8050cda to i32*
  %v3_8050cda = load i32, i32* %v2_8050cda, align 4
  store i32 %v3_8050cda, i32* %ecx.global-to-local, align 4
  %v2_8050cdd = add i32 %v0_8050cce, -16
  %v3_8050cdd = inttoptr i32 %v2_8050cdd to i32*
  store i32 %v3_8050cda, i32* %v3_8050cdd, align 4
  %v0_8050cde = call i32 @function_8052923()
  store i32 %v0_8050cde, i32* %eax.global-to-local, align 4
  %v0_8050ce6 = load i32, i32* @edi, align 4
  %v1_8050ce6 = add i32 %v0_8050ce6, 12
  %v2_8050ce6 = inttoptr i32 %v1_8050ce6 to i32*
  store i32 5, i32* %v2_8050ce6, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050cf2:                             ; preds = %dec_label_pc_8050a25
  %v1_8050cf2 = add i32 %v0_8050a11, -4
  %v2_8050cf2 = inttoptr i32 %v1_8050cf2 to i32*
  store i32 16384, i32* %v2_8050cf2, align 4
  %v1_8050cf7 = add i32 %v0_8050a11, -8
  %v2_8050cf7 = inttoptr i32 %v1_8050cf7 to i32*
  store i32 3, i32* %v2_8050cf7, align 4
  %v1_8050cf9 = add i32 %v0_8050a11, 1863
  store i32 %v1_8050cf9, i32* %eax.global-to-local, align 4
  %v0_8050d00 = load i32, i32* @ebx, align 4
  %v1_8050d00 = add i32 %v0_8050d00, 3
  store i32 %v1_8050d00, i32* @ebx, align 4
  %v2_8050d03 = add i32 %v0_8050a11, -12
  %v3_8050d03 = inttoptr i32 %v2_8050d03 to i32*
  store i32 %v1_8050cf9, i32* %v3_8050d03, align 4
  %v0_8050d04 = load i32, i32* @ebp, align 4
  %v1_8050d04 = add i32 %v0_8050d04, 3
  store i32 %v1_8050d04, i32* @ebp, align 4
  %v0_8050d07 = load i32, i32* @edi, align 4
  %v1_8050d07 = add i32 %v0_8050d07, 4
  %v2_8050d07 = inttoptr i32 %v1_8050d07 to i32*
  %v3_8050d07 = load i32, i32* %v2_8050d07, align 4
  store i32 %v3_8050d07, i32* %eax.global-to-local, align 4
  %v2_8050d0a = add i32 %v0_8050a11, -16
  %v3_8050d0a = inttoptr i32 %v2_8050d0a to i32*
  store i32 %v3_8050d07, i32* %v3_8050d0a, align 4
  %v0_8050d0b = call i32 @function_8052923()
  %v0_8050d10 = load i32, i32* @esp, align 4
  %v1_8050d10 = add i32 %v0_8050d10, -4
  %v2_8050d10 = inttoptr i32 %v1_8050d10 to i32*
  store i32 16384, i32* %v2_8050d10, align 4
  %v1_8050d15 = add i32 %v0_8050d10, -8
  %v2_8050d15 = inttoptr i32 %v1_8050d15 to i32*
  store i32 9, i32* %v2_8050d15, align 4
  %v1_8050d17 = add i32 %v0_8050d10, 1847
  store i32 %v1_8050d17, i32* %eax.global-to-local, align 4
  %v2_8050d1e = add i32 %v0_8050d10, -12
  %v3_8050d1e = inttoptr i32 %v2_8050d1e to i32*
  store i32 %v1_8050d17, i32* %v3_8050d1e, align 4
  %v0_8050d1f = load i32, i32* @edi, align 4
  %v1_8050d1f = add i32 %v0_8050d1f, 4
  %v2_8050d1f = inttoptr i32 %v1_8050d1f to i32*
  %v3_8050d1f = load i32, i32* %v2_8050d1f, align 4
  store i32 %v3_8050d1f, i32* %eax.global-to-local, align 4
  %v2_8050d22 = add i32 %v0_8050d10, -16
  %v3_8050d22 = inttoptr i32 %v2_8050d22 to i32*
  store i32 %v3_8050d1f, i32* %v3_8050d22, align 4
  %v0_8050d23 = call i32 @function_8052923()
  store i32 %v0_8050d23, i32* %eax.global-to-local, align 4
  %v0_8050d28 = load i32, i32* @esp, align 4
  %v1_8050d28 = add i32 %v0_8050d28, 32
  %v0_8050d2b = load i32, i32* @edi, align 4
  %v1_8050d2b = add i32 %v0_8050d2b, 24
  %v2_8050d2b = inttoptr i32 %v1_8050d2b to i32*
  %v3_8050d2b = load i32, i32* %v2_8050d2b, align 4
  store i32 %v3_8050d2b, i32* %edx.global-to-local, align 4
  %v0_80504b1.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80504b1.backedge

dec_label_pc_8050d33:                             ; preds = %dec_label_pc_8050824
  store i32 %v0_8050d33, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_8050d38 = call i32 @function_804ec90()
  store i32 %v0_8050d38, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050d42:                             ; preds = %dec_label_pc_80507e7
  store i32 27, i32* %v1_8050d4c, align 4
  %v2_8050d53 = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d53, i32* %eax.global-to-local, align 4
  %v0_8050d58 = load i32, i32* @esp, align 4
  %v1_8050d58 = inttoptr i32 %v0_8050d58 to i32*
  %v3_8050d58 = add i32 %v0_8050d58, 4
  %v1_8050d59 = inttoptr i32 %v3_8050d58 to i32*
  %v2_8050d59 = load i32, i32* %v1_8050d59, align 4
  store i32 %v2_8050d59, i32* %eax.global-to-local, align 4
  %v1_8050d5a = add i32 %v0_8050d58, 1868
  store i32 %v1_8050d5a, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050d5a, i32* %v1_8050d59, align 4
  store i32 27, i32* %v1_8050d58, align 4
  %v3_8050d64 = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050d64, i32* %eax.global-to-local, align 4
  %v0_8050d69 = load i32, i32* @esp, align 4
  %v1_8050d69 = add i32 %v0_8050d69, 1868
  %v2_8050d69 = inttoptr i32 %v1_8050d69 to i32*
  %v3_8050d69 = load i32, i32* %v2_8050d69, align 4
  %v1_8050d70 = add i32 %v3_8050d69, -1
  store i32 %v1_8050d70, i32* %edx.global-to-local, align 4
  %v2_8050d71 = add i32 %v0_8050d69, -4
  %v3_8050d71 = inttoptr i32 %v2_8050d71 to i32*
  store i32 %v1_8050d70, i32* %v3_8050d71, align 4
  %v2_8050d72 = add i32 %v0_8050d69, -8
  %v3_8050d72 = inttoptr i32 %v2_8050d72 to i32*
  store i32 %v3_8050d64, i32* %v3_8050d72, align 4
  %v0_8050d73 = load i32, i32* @edi, align 4
  %v1_8050d73 = add i32 %v0_8050d73, 24
  %v2_8050d73 = inttoptr i32 %v1_8050d73 to i32*
  %v3_8050d73 = load i32, i32* %v2_8050d73, align 4
  store i32 %v3_8050d73, i32* @esi, align 4
  %v2_8050d76 = add i32 %v0_8050d69, -12
  %v3_8050d76 = inttoptr i32 %v2_8050d76 to i32*
  store i32 %v3_8050d73, i32* %v3_8050d76, align 4
  %v1_8050d77 = add i32 %v0_8050d69, 24
  %v2_8050d77 = inttoptr i32 %v1_8050d77 to i32*
  %v3_8050d77 = load i32, i32* %v2_8050d77, align 4
  store i32 %v3_8050d77, i32* @ebx, align 4
  %v2_8050d7b = add i32 %v0_8050d69, -16
  %v3_8050d7b = inttoptr i32 %v2_8050d7b to i32*
  store i32 %v3_8050d77, i32* %v3_8050d7b, align 4
  %v0_8050d7c = call i32 @function_8051d30()
  store i32 %v0_8050d7c, i32* %eax.global-to-local, align 4
  %v0_8050d81 = load i32, i32* @esp, align 4
  store i32 %v0_8050d7c, i32* @ebp, align 4
  %v1_8050d86 = add i32 %v0_8050d81, 16
  %v2_8050d86 = inttoptr i32 %v1_8050d86 to i32*
  store i32 27, i32* %v2_8050d86, align 4
  %v2_8050d88 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050d88, i32* %eax.global-to-local, align 4
  %v0_8050d8d = load i32, i32* @esp, align 4
  %v0_8050d90 = load i32, i32* @ebp, align 4
  %v10_8050d90 = icmp eq i32 %v0_8050d90, -1
  br i1 %v10_8050d90, label %dec_label_pc_8050426.backedge, label %dec_label_pc_8050d99

dec_label_pc_8050d99:                             ; preds = %dec_label_pc_8050d42
  %tmp147 = icmp slt i32 %v0_8050d90, 1
  br i1 %tmp147, label %dec_label_pc_8050a41, label %dec_label_pc_8050da1

dec_label_pc_8050da1:                             ; preds = %dec_label_pc_8050d99
  %v0_8050da1 = load i32, i32* @edi, align 4
  %v1_8050da1 = add i32 %v0_8050da1, 20
  %v2_8050da1 = inttoptr i32 %v1_8050da1 to i32*
  %v3_8050da1 = load i32, i32* %v2_8050da1, align 4
  store i32 %v3_8050da1, i32* %edx.global-to-local, align 4
  %v1_8050da4 = add i32 %v0_8050da1, 16
  %v2_8050da4 = inttoptr i32 %v1_8050da4 to i32*
  %v3_8050da4 = load i32, i32* %v2_8050da4, align 4
  store i32 %v3_8050da4, i32* %eax.global-to-local, align 4
  %v1_8050da7 = inttoptr i32 %v0_8050da1 to i32*
  %v2_8050da7 = load i32, i32* %v1_8050da7, align 4
  store i32 %v2_8050da7, i32* @esi, align 4
  %v2_8050da9 = add i32 %v0_8050d8d, 1864
  %v3_8050da9 = inttoptr i32 %v2_8050da9 to i32*
  store i32 %v3_8050da4, i32* %v3_8050da9, align 4
  %v0_8050db0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050db0 = trunc i32 %v0_8050db0 to i16
  %v2_8050db0 = load i32, i32* @esp, align 4
  %v3_8050db0 = add i32 %v2_8050db0, 1866
  %v4_8050db0 = inttoptr i32 %v3_8050db0 to i16*
  store i16 %v1_8050db0, i16* %v4_8050db0, align 2
  %v0_8050db8 = call i32 @function_8052221()
  store i32 %v0_8050db8, i32* %eax.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_8050db8, 1
  br i1 %tmp148, label %dec_label_pc_8050fe3, label %dec_label_pc_8050dc5

dec_label_pc_8050dc5:                             ; preds = %dec_label_pc_8050fe3, %dec_label_pc_8050da1
  %v0_8050dc5 = load i32, i32* @esp, align 4
  %v0_8050dc8 = load i32, i32* @edi, align 4
  %v1_8050dc8 = add i32 %v0_8050dc8, 4
  %v2_8050dc8 = inttoptr i32 %v1_8050dc8 to i32*
  %v3_8050dc8 = load i32, i32* %v2_8050dc8, align 4
  store i32 %v3_8050dc8, i32* @esi, align 4
  %v2_8050dcb = add i32 %v0_8050dc5, -16
  %v3_8050dcb = inttoptr i32 %v2_8050dcb to i32*
  store i32 %v3_8050dc8, i32* %v3_8050dcb, align 4
  %v1_8050dcc = call i32 @function_80521f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050dcc, i32* %eax.global-to-local, align 4
  %v0_8050dd4 = load i32, i32* @edi, align 4
  %v1_8050dd4 = add i32 %v0_8050dd4, 4
  %v2_8050dd4 = inttoptr i32 %v1_8050dd4 to i32*
  store i32 -1, i32* %v2_8050dd4, align 4
  %v0_8050ddb = load i32, i32* @edi, align 4
  %v1_8050ddb = add i32 %v0_8050ddb, 12
  %v2_8050ddb = inttoptr i32 %v1_8050ddb to i32*
  store i32 0, i32* %v2_8050ddb, align 4
  br label %dec_label_pc_8050868

dec_label_pc_8050de7:                             ; preds = %dec_label_pc_80502f7
  br i1 %v5_805030c, label %dec_label_pc_805034a, label %dec_label_pc_8050def

dec_label_pc_8050def:                             ; preds = %dec_label_pc_8050de7
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050315

dec_label_pc_8050df6:                             ; preds = %dec_label_pc_8050327
  %v3_8050e01 = add nuw nsw i32 %v2_8050e01, 1556
  %v4_8050e01 = add i32 %v3_8050e01, %v0_8050e01
  %v5_8050e01 = inttoptr i32 %v4_8050e01 to i32*
  %v6_8050e01 = load i32, i32* %v5_8050e01, align 4
  %v9_8050e01 = shl i32 1, %v1_8050dfb
  %v12_8050e01 = or i32 %v6_8050e01, %v9_8050e01
  store i32 %v12_8050e01, i32* %v5_8050e01, align 4
  %v0_8050e09 = load i32, i32* @ebx, align 4
  %v1_8050e09 = add i32 %v0_8050e09, 4
  %v2_8050e09 = inttoptr i32 %v1_8050e09 to i32*
  %v3_8050e09 = load i32, i32* %v2_8050e09, align 4
  store i32 %v3_8050e09, i32* %eax.global-to-local, align 4
  %v0_8050e0c = load i32, i32* @esi, align 4
  %v2_8050e0c = sub i32 %v0_8050e0c, %v3_8050e09
  %v8_8050e0c = xor i32 %v0_8050e0c, %v3_8050e09
  %v9_8050e0c = xor i32 %v2_8050e0c, %v0_8050e0c
  %v10_8050e0c = and i32 %v9_8050e0c, %v8_8050e0c
  %v11_8050e0c = icmp slt i32 %v10_8050e0c, 0
  %v13_8050e0c = icmp slt i32 %v2_8050e0c, 0
  %v2_8050e0e = icmp eq i1 %v13_8050e0c, %v11_8050e0c
  br i1 %v2_8050e0e, label %dec_label_pc_805034a, label %dec_label_pc_8050e14

dec_label_pc_8050e14:                             ; preds = %dec_label_pc_8050df6
  store i32 %v3_8050e09, i32* @esi, align 4
  br label %dec_label_pc_805034a

dec_label_pc_8050e20:                             ; preds = %dec_label_pc_80503f2
  %v1_8050e20 = add i32 %v0_80503fc, 1848
  %v2_8050e20 = inttoptr i32 %v1_8050e20 to i32*
  store i32 0, i32* %v2_8050e20, align 4
  %v0_8050e2b = load i32, i32* @esp, align 4
  %v1_8050e2b = add i32 %v0_8050e2b, 1852
  %v2_8050e2b = inttoptr i32 %v1_8050e2b to i32*
  store i32 4, i32* %v2_8050e2b, align 4
  %v0_8050e36 = load i32, i32* @esp, align 4
  %v1_8050e39 = add i32 %v0_8050e36, 1852
  %v2_8050e40 = add i32 %v0_8050e36, -16
  %v3_8050e40 = inttoptr i32 %v2_8050e40 to i32*
  store i32 %v1_8050e39, i32* %v3_8050e40, align 4
  %v1_8050e41 = add i32 %v0_8050e36, 1848
  store i32 %v1_8050e41, i32* %eax.global-to-local, align 4
  %v2_8050e48 = add i32 %v0_8050e36, -20
  %v3_8050e48 = inttoptr i32 %v2_8050e48 to i32*
  store i32 %v1_8050e41, i32* %v3_8050e48, align 4
  %v1_8050e49 = add i32 %v0_8050e36, -24
  %v2_8050e49 = inttoptr i32 %v1_8050e49 to i32*
  store i32 4, i32* %v2_8050e49, align 4
  %v1_8050e4b = add i32 %v0_8050e36, -28
  %v2_8050e4b = inttoptr i32 %v1_8050e4b to i32*
  store i32 1, i32* %v2_8050e4b, align 4
  %v0_8050e4d = load i32, i32* @edi, align 4
  %v1_8050e4d = add i32 %v0_8050e4d, 4
  %v2_8050e4d = inttoptr i32 %v1_8050e4d to i32*
  %v3_8050e4d = load i32, i32* %v2_8050e4d, align 4
  store i32 %v3_8050e4d, i32* %eax.global-to-local, align 4
  %v2_8050e50 = add i32 %v0_8050e36, -32
  %v3_8050e50 = inttoptr i32 %v2_8050e50 to i32*
  store i32 %v3_8050e4d, i32* %v3_8050e50, align 4
  %v0_8050e51 = call i32 @function_805284f()
  store i32 %v0_8050e51, i32* %eax.global-to-local, align 4
  %v0_8050e56 = load i32, i32* @esp, align 4
  %v2_8050e59 = add i32 %v0_8050e56, 1880
  %v3_8050e59 = inttoptr i32 %v2_8050e59 to i32*
  %v4_8050e59 = load i32, i32* %v3_8050e59, align 4
  %v5_8050e59 = or i32 %v4_8050e59, %v0_8050e51
  %v6_8050e59 = icmp eq i32 %v5_8050e59, 0
  store i32 %v5_8050e59, i32* %eax.global-to-local, align 4
  %v1_8050e60 = icmp eq i1 %v6_8050e59, false
  br i1 %v1_8050e60, label %dec_label_pc_8050f62, label %dec_label_pc_8050e66

dec_label_pc_8050e66:                             ; preds = %dec_label_pc_8050e20
  %v0_8050e66 = load i32, i32* @edi, align 4
  %v1_8050e66 = add i32 %v0_8050e66, 12
  %v2_8050e66 = inttoptr i32 %v1_8050e66 to i32*
  store i32 2, i32* %v2_8050e66, align 4
  %v0_8050e6d = call i32 @function_804eb30()
  %v1_8050e6d = sext i32 %v0_8050e6d to i64
  %v0_8050e72 = load i16, i16* @global_var_805612c.37, align 4
  %v1_8050e72 = zext i16 %v0_8050e72 to i32
  %v0_8050e7f = load i32, i32* @global_var_80560e4.38, align 4
  store i32 %v0_8050e7f, i32* @ebx, align 4
  store i32 %v1_8050e72, i32* %ecx.global-to-local, align 4
  %v8_8050e89 = zext i16 %v0_8050e72 to i64
  %v9_8050e89 = udiv i64 %v1_8050e6d, %v8_8050e89
  %v10_8050e89 = trunc i64 %v9_8050e89 to i32
  store i32 %v10_8050e89, i32* %eax.global-to-local, align 4
  %v11_8050e89 = urem i64 %v1_8050e6d, %v8_8050e89
  %v12_8050e89 = trunc i64 %v11_8050e89 to i32
  store i32 %v12_8050e89, i32* %edx.global-to-local, align 4
  %tmp149 = icmp slt i32 %v0_8050e7f, 1
  br i1 %tmp149, label %dec_label_pc_8050f03, label %dec_label_pc_8050e8f

dec_label_pc_8050e8f:                             ; preds = %dec_label_pc_8050e66
  %v0_8050e8f = load i32, i32* @global_var_8056128.39, align 8
  store i32 %v0_8050e8f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8050ea0 = trunc i64 %v11_8050e89 to i16
  br label %dec_label_pc_8050ea0

dec_label_pc_8050e98:                             ; preds = %dec_label_pc_8050ea6, %dec_label_pc_8050ea0
  %v1_8050e98 = add i32 %v0_8050e98, 1
  store i32 %v1_8050e98, i32* %ecx.global-to-local, align 4
  %v1_8050e99 = add i32 %v0_8050e99, 16
  store i32 %v1_8050e99, i32* %eax.global-to-local, align 4
  %v12_8050e9c = icmp eq i32 %v0_8050e7f, %v1_8050e98
  br i1 %v12_8050e9c, label %dec_label_pc_8050f03.loopexit, label %dec_label_pc_8050ea0

dec_label_pc_8050ea0:                             ; preds = %dec_label_pc_8050e98, %dec_label_pc_8050e8f
  %v0_8050e98 = phi i32 [ %v1_8050e98, %dec_label_pc_8050e98 ], [ 0, %dec_label_pc_8050e8f ]
  %v0_8050e99 = phi i32 [ %v1_8050e99, %dec_label_pc_8050e98 ], [ %v0_8050e8f, %dec_label_pc_8050e8f ]
  %v3_8050ea0 = add i32 %v0_8050e99, 8
  %v4_8050ea0 = inttoptr i32 %v3_8050ea0 to i16*
  %v5_8050ea0 = load i16, i16* %v4_8050ea0, align 2
  %v11_8050ea0 = icmp ult i16 %v1_8050ea0, %v5_8050ea0
  br i1 %v11_8050ea0, label %dec_label_pc_8050e98, label %dec_label_pc_8050ea6

dec_label_pc_8050ea6:                             ; preds = %dec_label_pc_8050ea0
  %v3_8050ea6 = add i32 %v0_8050e99, 10
  %v4_8050ea6 = inttoptr i32 %v3_8050ea6 to i16*
  %v5_8050ea6 = load i16, i16* %v4_8050ea6, align 2
  %v11_8050ea6 = icmp ult i16 %v1_8050ea0, %v5_8050ea6
  %v1_8050eaa = icmp eq i1 %v11_8050ea6, false
  br i1 %v1_8050eaa, label %dec_label_pc_8050e98, label %dec_label_pc_8050f05.loopexit

dec_label_pc_8050eb0:                             ; preds = %dec_label_pc_8050315
  %v0_8050eb0 = load i32, i32* @esp, align 4
  %v1_8050eb3 = add i32 %v2_8050307, 4
  %v2_8050eb3 = inttoptr i32 %v1_8050eb3 to i32*
  %v3_8050eb3 = load i32, i32* %v2_8050eb3, align 4
  store i32 %v3_8050eb3, i32* %edx.global-to-local, align 4
  %v2_8050eb6 = add i32 %v0_8050eb0, -16
  %v3_8050eb6 = inttoptr i32 %v2_8050eb6 to i32*
  store i32 %v3_8050eb3, i32* %v3_8050eb6, align 4
  %v1_8050eb7 = call i32 @function_80521f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050eb7, i32* %eax.global-to-local, align 4
  %v0_8050ebf = load i32, i32* @ebx, align 4
  %v1_8050ebf = add i32 %v0_8050ebf, 4
  %v2_8050ebf = inttoptr i32 %v1_8050ebf to i32*
  store i32 -1, i32* %v2_8050ebf, align 4
  %v0_8050ec6 = load i32, i32* @ebx, align 4
  %v1_8050ec6 = add i32 %v0_8050ec6, 12
  %v2_8050ec6 = inttoptr i32 %v1_8050ec6 to i32*
  %v3_8050ec6 = load i32, i32* %v2_8050ec6, align 4
  %tmp273 = icmp ult i32 %v3_8050ec6, 3
  br i1 %tmp273, label %dec_label_pc_8050ef0, label %dec_label_pc_8050ecc

dec_label_pc_8050ecc:                             ; preds = %dec_label_pc_8050eb0
  %v1_8050ecc = add i32 %v0_8050ec6, 284
  %v2_8050ecc = inttoptr i32 %v1_8050ecc to i8*
  %v3_8050ecc = load i8, i8* %v2_8050ecc, align 1
  %v4_8050ecc = zext i8 %v3_8050ecc to i32
  %v6_8050ecc = and i32 %v1_8050eb7, -256
  %v7_8050ecc = or i32 %v4_8050ecc, %v6_8050ecc
  %v1_8050ed2 = add i32 %v7_8050ecc, 1
  %v10_8050ed2 = trunc i32 %v1_8050ed2 to i8
  store i32 %v1_8050ed2, i32* %eax.global-to-local, align 4
  store i8 %v10_8050ed2, i8* %v2_8050ecc, align 1
  %v0_8050ed9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050ed9 = trunc i32 %v0_8050ed9 to i8
  %v10_8050ed9 = icmp eq i8 %v1_8050ed9, 10
  %v0_8050ef0.pre = load i32, i32* @ebx, align 4
  br i1 %v10_8050ed9, label %dec_label_pc_8050ef0, label %dec_label_pc_8050edd

dec_label_pc_8050edd:                             ; preds = %dec_label_pc_8050ecc
  store i32 %v0_8050ef0.pre, i32* @eax, align 4
  %v0_8050edf = call i32 @function_804ec90()
  store i32 %v0_8050edf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805034a

dec_label_pc_8050ef0:                             ; preds = %dec_label_pc_8050ecc, %dec_label_pc_8050eb0
  %v0_8050ef0 = phi i32 [ %v0_8050ec6, %dec_label_pc_8050eb0 ], [ %v0_8050ef0.pre, %dec_label_pc_8050ecc ]
  %v1_8050ef0 = add i32 %v0_8050ef0, 284
  %v2_8050ef0 = inttoptr i32 %v1_8050ef0 to i8*
  store i8 0, i8* %v2_8050ef0, align 1
  %v0_8050ef7 = load i32, i32* @ebx, align 4
  %v1_8050ef7 = add i32 %v0_8050ef7, 12
  %v2_8050ef7 = inttoptr i32 %v1_8050ef7 to i32*
  store i32 0, i32* %v2_8050ef7, align 4
  br label %dec_label_pc_805034a

dec_label_pc_8050f03.loopexit:                    ; preds = %dec_label_pc_8050e98
  br label %dec_label_pc_8050f03

dec_label_pc_8050f03:                             ; preds = %dec_label_pc_8050f03.loopexit, %dec_label_pc_8050e66
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f05

dec_label_pc_8050f05.loopexit:                    ; preds = %dec_label_pc_8050ea6
  br label %dec_label_pc_8050f05

dec_label_pc_8050f05:                             ; preds = %dec_label_pc_8050f05.loopexit, %dec_label_pc_8050f03
  %v0_8050f08 = phi i32 [ %v0_8050e99, %dec_label_pc_8050f05.loopexit ], [ 0, %dec_label_pc_8050f03 ]
  %v0_8050f05 = load i32, i32* @edi, align 4
  %v1_8050f05 = add i32 %v0_8050f05, 4
  %v2_8050f05 = inttoptr i32 %v1_8050f05 to i32*
  %v3_8050f05 = load i32, i32* %v2_8050f05, align 4
  store i32 %v3_8050f05, i32* %ecx.global-to-local, align 4
  %v2_8050f08 = inttoptr i32 %v0_8050f05 to i32*
  store i32 %v0_8050f08, i32* %v2_8050f08, align 4
  %v0_8050f0a = load i32, i32* @edi, align 4
  %v1_8050f0a = add i32 %v0_8050f0a, 24
  %v2_8050f0a = inttoptr i32 %v1_8050f0a to i32*
  store i32 0, i32* %v2_8050f0a, align 4
  %v0_805040f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8050417.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805040f

dec_label_pc_8050f16:                             ; preds = %dec_label_pc_8050577
  %v1_8050f16 = add i32 %v0_80505cb, 1880
  %v2_8050f16 = inttoptr i32 %v1_8050f16 to i32*
  %v3_8050f16 = load i32, i32* %v2_8050f16, align 4
  %v1_8050f1d = add i32 %v3_8050f16, -1
  store i32 %v1_8050f1d, i32* %eax.global-to-local, align 4
  %v2_8050f1e = add i32 %v0_80505cb, 28
  %v3_8050f1e = inttoptr i32 %v2_8050f1e to i32*
  store i32 %v1_8050f1d, i32* %v3_8050f1e, align 4
  %v0_8050f1f = load i32, i32* @esi, align 4
  %v2_8050f1f = add i32 %v0_80505cb, 24
  %v3_8050f1f = inttoptr i32 %v2_8050f1f to i32*
  store i32 %v0_8050f1f, i32* %v3_8050f1f, align 4
  %v0_8050f20 = load i32, i32* @edi, align 4
  %v1_8050f20 = add i32 %v0_8050f20, 24
  %v2_8050f20 = inttoptr i32 %v1_8050f20 to i32*
  %v3_8050f20 = load i32, i32* %v2_8050f20, align 4
  store i32 %v3_8050f20, i32* %eax.global-to-local, align 4
  %v2_8050f23 = add i32 %v0_80505cb, 20
  %v3_8050f23 = inttoptr i32 %v2_8050f23 to i32*
  store i32 %v3_8050f20, i32* %v3_8050f23, align 4
  %v1_8050f24 = add i32 %v0_80505cb, 40
  %v2_8050f24 = inttoptr i32 %v1_8050f24 to i32*
  %v3_8050f24 = load i32, i32* %v2_8050f24, align 4
  %v2_8050f28 = add i32 %v0_80505cb, 16
  %v3_8050f28 = inttoptr i32 %v2_8050f28 to i32*
  store i32 %v3_8050f24, i32* %v3_8050f28, align 4
  %v0_8050f29 = call i32 @function_8051d30()
  %v0_8050f2e = load i32, i32* @esp, align 4
  %v1_8050f2e = add i32 %v0_8050f2e, 16
  %v8_8050f31 = icmp eq i32 %v0_8050f29, -1
  %v1_8050f32 = icmp eq i1 %v8_8050f31, false
  %v2_8050f32 = zext i1 %v1_8050f32 to i32
  %v2_8050f35 = icmp eq i1 %v1_8050f32, false
  store i32 %v2_8050f32, i32* %eax.global-to-local, align 4
  store i32 %v2_8050f32, i32* @ebp, align 4
  %v1_8050f3e = icmp eq i1 %v2_8050f35, false
  br i1 %v1_8050f3e, label %dec_label_pc_80505e1, label %dec_label_pc_8050f44

dec_label_pc_8050f44:                             ; preds = %dec_label_pc_8050f16
  %v2_8050f47 = inttoptr i32 %v0_8050f2e to i32*
  store i32 30, i32* %v2_8050f47, align 4
  %v2_8050f49 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050f49, i32* %eax.global-to-local, align 4
  %v0_8050f4e = load i32, i32* @esp, align 4
  %v1_8050f4e = inttoptr i32 %v0_8050f4e to i32*
  store i32 31, i32* %v1_8050f4e, align 4
  %v2_8050f55 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050f55, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050426.backedge

dec_label_pc_8050426.backedge:                    ; preds = %dec_label_pc_805063b, %dec_label_pc_8050a41, %dec_label_pc_8050684, %dec_label_pc_80505e1, %dec_label_pc_8050498, %dec_label_pc_8050916, %dec_label_pc_80508d8, %dec_label_pc_8050c27, %dec_label_pc_8050893, %dec_label_pc_8050ae4, %dec_label_pc_80506e5, %dec_label_pc_8050bae, %dec_label_pc_80506a0, %dec_label_pc_8050d42, %dec_label_pc_805076e, %dec_label_pc_8050730, %dec_label_pc_8050901, %dec_label_pc_8050722, %dec_label_pc_80508d0, %dec_label_pc_8050759, %dec_label_pc_80506dd, %dec_label_pc_8050a41.thread, %dec_label_pc_8050f44
  %v0_8050426 = load i32, i32* @edi, align 4
  %v1_8050426 = add i32 %v0_8050426, 12
  %v2_8050426 = inttoptr i32 %v1_8050426 to i32*
  %v3_8050426 = load i32, i32* %v2_8050426, align 4
  store i32 %v3_8050426, i32* %eax.global-to-local, align 4
  %v1_8050429 = icmp eq i32 %v3_8050426, 0
  br i1 %v1_8050429, label %dec_label_pc_80503c3, label %dec_label_pc_8050426.backedge.dec_label_pc_805042d_crit_edge

dec_label_pc_8050426.backedge.dec_label_pc_805042d_crit_edge: ; preds = %dec_label_pc_8050426.backedge
  %v1_8050430.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805042d

dec_label_pc_8050f62:                             ; preds = %dec_label_pc_8050e20
  %v0_8050f65 = load i32, i32* @edi, align 4
  %v1_8050f65 = add i32 %v0_8050f65, 4
  %v2_8050f65 = inttoptr i32 %v1_8050f65 to i32*
  %v3_8050f65 = load i32, i32* %v2_8050f65, align 4
  store i32 %v3_8050f65, i32* %eax.global-to-local, align 4
  %v2_8050f68 = add i32 %v0_8050e56, 16
  %v3_8050f68 = inttoptr i32 %v2_8050f68 to i32*
  store i32 %v3_8050f65, i32* %v3_8050f68, align 4
  %v1_8050f69 = call i32 @function_80521f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050f69, i32* %eax.global-to-local, align 4
  %v0_8050f71 = load i32, i32* @edi, align 4
  %v1_8050f71 = add i32 %v0_8050f71, 4
  %v2_8050f71 = inttoptr i32 %v1_8050f71 to i32*
  store i32 -1, i32* %v2_8050f71, align 4
  %v0_8050f78 = load i32, i32* @edi, align 4
  %v1_8050f78 = add i32 %v0_8050f78, 284
  %v2_8050f78 = inttoptr i32 %v1_8050f78 to i8*
  store i8 0, i8* %v2_8050f78, align 1
  %v0_8050f7f = load i32, i32* @edi, align 4
  %v1_8050f7f = add i32 %v0_8050f7f, 12
  %v2_8050f7f = inttoptr i32 %v1_8050f7f to i32*
  store i32 0, i32* %v2_8050f7f, align 4
  br label %dec_label_pc_80503c3

dec_label_pc_8050f8b:                             ; preds = %dec_label_pc_8050a2f
  %v11_8050f8b = icmp eq i8 %v2_8050a2f, -5
  %v1_8050f8d = icmp eq i1 %v11_8050f8b, false
  br i1 %v1_8050f8d, label %dec_label_pc_80504e1, label %dec_label_pc_8050f93

dec_label_pc_8050f93:                             ; preds = %dec_label_pc_8050f8b
  store i8 -3, i8* %v1_8050a2f, align 1
  br label %dec_label_pc_80504e1

dec_label_pc_8050fad:                             ; preds = %dec_label_pc_8050a50
  %v1_8050fad = add i32 %v0_805046b, 40
  %v2_8050fad = inttoptr i32 %v1_8050fad to i32*
  %v3_8050fad = load i32, i32* %v2_8050fad, align 4
  store i32 %v3_8050fad, i32* %eax.global-to-local, align 4
  %v1_8050fb1 = inttoptr i32 %v3_8050fad to i32*
  store i32 104, i32* %v1_8050fb1, align 4
  %v0_8050a6c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050a6c

dec_label_pc_8050fbc:                             ; preds = %dec_label_pc_8050a6c
  store i32 %v0_8050fbc, i32* @eax, align 4
  %v0_8050fbe = call i32 @function_804ec90()
  store i32 %v0_8050fbe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80503c3

dec_label_pc_8050fe3:                             ; preds = %dec_label_pc_8050da1
  %v1_8050fe3 = add i32 %v0_8050db8, 1
  %v8_8050fe3 = icmp eq i32 %v1_8050fe3, 0
  store i32 %v1_8050fe3, i32* %eax.global-to-local, align 4
  br i1 %v8_8050fe3, label %dec_label_pc_8050dc5, label %dec_label_pc_8050fea

dec_label_pc_8050fea:                             ; preds = %dec_label_pc_8050fe3
  %v0_8050fea = load i32, i32* @ecx, align 4
  %v1_8050fea = load i32, i32* @esp, align 4
  %v2_8050fea = add i32 %v1_8050fea, -4
  %v3_8050fea = inttoptr i32 %v2_8050fea to i32*
  store i32 %v0_8050fea, i32* %v3_8050fea, align 4
  %v1_8050feb = add i32 %v1_8050fea, -8
  %v2_8050feb = inttoptr i32 %v1_8050feb to i32*
  store i32 0, i32* %v2_8050feb, align 4
  %v1_8050fed = add i32 %v1_8050fea, -12
  %v2_8050fed = inttoptr i32 %v1_8050fed to i32*
  store i32 1, i32* %v2_8050fed, align 4
  %v1_8050fef = add i32 %v1_8050fea, -16
  %v2_8050fef = inttoptr i32 %v1_8050fef to i32*
  store i32 2, i32* %v2_8050fef, align 4
  %v4_8050ff1 = call i32 @function_80529d4(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050ff1, i32* @eax, align 4
  %v0_8050ff6 = load i32, i32* @esp, align 4
  %sext7 = mul i32 %v4_8050ff1, 16777216
  %v1_8050ff9 = sdiv i32 %sext7, 16777216
  store i32 %v1_8050ff9, i32* @ebx, align 4
  %tmp275 = icmp eq i32 %sext7, -16777216
  %v2_805016d = inttoptr i32 %v0_8050ff6 to i32*
  br i1 %tmp275, label %dec_label_pc_805016a, label %dec_label_pc_8051004

dec_label_pc_8051004:                             ; preds = %dec_label_pc_8050fea
  store i32 2, i32* %v2_805016d, align 4
  %v2_8051009 = call i32 @function_80511c0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051009, i32* %eax.global-to-local, align 4
  %v0_805100e = load i32, i32* @esp, align 4
  %v1_805100e = inttoptr i32 %v0_805100e to i32*
  %v2_805100e = load i32, i32* %v1_805100e, align 4
  store i32 %v2_805100e, i32* %eax.global-to-local, align 4
  %v3_805100e = add i32 %v0_805100e, 4
  %v1_805100f = inttoptr i32 %v3_805100e to i32*
  %v2_805100f = load i32, i32* %v1_805100f, align 4
  store i32 %v2_805100f, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_805100f, align 4
  store i32 -1378207815, i32* @global_var_8056168.40, align 8
  store i32 2, i32* %v1_805100e, align 4
  %v3_805101e = call i32 @function_8051110(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_805101e = inttoptr i32 %v3_805101e to i16*
  store i32 %v3_805101e, i32* %eax.global-to-local, align 4
  %v3_8051023 = load i16, i16* %v4_805101e, align 2
  %v4_8051023 = zext i16 %v3_8051023 to i32
  %v7_8051023 = and i32 %v3_805101e, -65536
  %v8_8051023 = or i32 %v4_8051023, %v7_8051023
  store i32 %v8_8051023, i32* %eax.global-to-local, align 4
  %v0_8051026 = load i32, i32* @esp, align 4
  %v1_8051026 = inttoptr i32 %v0_8051026 to i32*
  store i32 2, i32* %v1_8051026, align 4
  %v0_805102d = load i32, i32* %eax.global-to-local, align 4
  %v1_805102d = trunc i32 %v0_805102d to i16
  %v2_805102d = load i32, i32* @esp, align 4
  %v3_805102d = add i32 %v2_805102d, 1830
  %v4_805102d = inttoptr i32 %v3_805102d to i16*
  store i16 %v1_805102d, i16* %v4_805102d, align 2
  %v2_8051035 = call i32 @function_8051140(i8 ptrtoint (i32* @0 to i8))
  %v0_805103a = load i32, i32* @esp, align 4
  %v1_805103a = add i32 %v0_805103a, 1828
  store i32 %v1_805103a, i32* %eax.global-to-local, align 4
  %v1_8051044 = add i32 %v0_805103a, 8
  %v2_8051044 = inttoptr i32 %v1_8051044 to i32*
  store i32 16, i32* %v2_8051044, align 4
  %v0_8051046 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051046 = add i32 %v0_805103a, 4
  %v3_8051046 = inttoptr i32 %v2_8051046 to i32*
  store i32 %v0_8051046, i32* %v3_8051046, align 4
  %v0_8051047 = load i32, i32* @ebx, align 4
  %v3_8051047 = inttoptr i32 %v0_805103a to i32*
  store i32 %v0_8051047, i32* %v3_8051047, align 4
  %v3_8051048 = call i32 @function_80527f9(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_805104d = load i32, i32* @esp, align 4
  %v1_805104d = add i32 %v0_805104d, 16
  %v1_8051050 = add i32 %v3_8051048, 1
  %v8_8051050 = icmp eq i32 %v1_8051050, 0
  store i32 %v1_8051050, i32* %eax.global-to-local, align 4
  %v1_8051051 = icmp eq i1 %v8_8051050, false
  br i1 %v1_8051051, label %dec_label_pc_8051068, label %dec_label_pc_8051053

dec_label_pc_8051053:                             ; preds = %dec_label_pc_8051004
  br label %dec_label_pc_8051056

dec_label_pc_8051056:                             ; preds = %dec_label_pc_8051068, %dec_label_pc_8051053
  %storemerge4.in = phi i32 [ %v0_805104d, %dec_label_pc_8051053 ], [ %v0_8051103, %dec_label_pc_8051068 ]
  %v0_8051056 = load i32, i32* @ebx, align 4
  %v3_8051056 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v0_8051056, i32* %v3_8051056, align 4
  %v1_8051057 = call i32 @function_80521f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051057, i32* @eax, align 4
  %v0_805105c = load i32, i32* @esp, align 4
  %v1_805105c = inttoptr i32 %v0_805105c to i32*
  store i32 0, i32* %v1_805105c, align 4
  %v1_8051063 = call i32 @function_8053bcd(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051063, i32* %eax.global-to-local, align 4
  %v0_8051068.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051068

dec_label_pc_8051068:                             ; preds = %dec_label_pc_8051004, %dec_label_pc_8051056
  %v0_8051068 = phi i32 [ %v1_805104d, %dec_label_pc_8051004 ], [ %v0_8051068.pre, %dec_label_pc_8051056 ]
  %v1_8051068 = add i32 %v0_8051068, 1852
  %v2_8051068 = inttoptr i32 %v1_8051068 to i8*
  store i8 0, i8* %v2_8051068, align 1
  %v0_8051070 = load i32, i32* @esp, align 4
  %v1_8051070 = add i32 %v0_8051070, -4
  %v2_8051070 = inttoptr i32 %v1_8051070 to i32*
  store i32 16384, i32* %v2_8051070, align 4
  %v1_8051075 = add i32 %v0_8051070, -8
  %v2_8051075 = inttoptr i32 %v1_8051075 to i32*
  store i32 1, i32* %v2_8051075, align 4
  %v1_8051077 = add i32 %v0_8051070, 1852
  store i32 %v1_8051077, i32* %eax.global-to-local, align 4
  %v2_805107e = add i32 %v0_8051070, -12
  %v3_805107e = inttoptr i32 %v2_805107e to i32*
  store i32 %v1_8051077, i32* %v3_805107e, align 4
  %v0_805107f = load i32, i32* @ebx, align 4
  %v2_805107f = add i32 %v0_8051070, -16
  %v3_805107f = inttoptr i32 %v2_805107f to i32*
  store i32 %v0_805107f, i32* %v3_805107f, align 4
  %v0_8051080 = call i32 @function_8052923()
  %v0_8051085 = load i32, i32* @esp, align 4
  %v1_8051085 = add i32 %v0_8051085, -4
  %v2_8051085 = inttoptr i32 %v1_8051085 to i32*
  store i32 16384, i32* %v2_8051085, align 4
  %v1_805108a = add i32 %v0_8051085, -8
  %v2_805108a = inttoptr i32 %v1_805108a to i32*
  store i32 4, i32* %v2_805108a, align 4
  %v1_805108c = add i32 %v0_8051085, 1864
  store i32 %v1_805108c, i32* %eax.global-to-local, align 4
  %v2_8051093 = add i32 %v0_8051085, -12
  %v3_8051093 = inttoptr i32 %v2_8051093 to i32*
  store i32 %v1_805108c, i32* %v3_8051093, align 4
  %v0_8051094 = load i32, i32* @ebx, align 4
  %v2_8051094 = add i32 %v0_8051085, -16
  %v3_8051094 = inttoptr i32 %v2_8051094 to i32*
  store i32 %v0_8051094, i32* %v3_8051094, align 4
  %v0_8051095 = call i32 @function_8052923()
  %v0_805109a = load i32, i32* @esp, align 4
  %v1_805109d = add i32 %v0_805109a, 28
  %v2_805109d = inttoptr i32 %v1_805109d to i32*
  store i32 16384, i32* %v2_805109d, align 4
  %v1_80510a2 = add i32 %v0_805109a, 24
  %v2_80510a2 = inttoptr i32 %v1_80510a2 to i32*
  store i32 2, i32* %v2_80510a2, align 4
  %v1_80510a4 = add i32 %v0_805109a, 1898
  store i32 %v1_80510a4, i32* %eax.global-to-local, align 4
  %v2_80510ab = add i32 %v0_805109a, 20
  %v3_80510ab = inttoptr i32 %v2_80510ab to i32*
  store i32 %v1_80510a4, i32* %v3_80510ab, align 4
  %v0_80510ac = load i32, i32* @ebx, align 4
  %v2_80510ac = add i32 %v0_805109a, 16
  %v3_80510ac = inttoptr i32 %v2_80510ac to i32*
  store i32 %v0_80510ac, i32* %v3_80510ac, align 4
  %v0_80510ad = call i32 @function_8052923()
  %v0_80510b2 = load i32, i32* @esi, align 4
  %v1_80510b2 = add i32 %v0_80510b2, 12
  store i32 %v1_80510b2, i32* %eax.global-to-local, align 4
  %v0_80510b5 = load i32, i32* @esp, align 4
  %v1_80510b5 = add i32 %v0_80510b5, -4
  %v2_80510b5 = inttoptr i32 %v1_80510b5 to i32*
  store i32 16384, i32* %v2_80510b5, align 4
  %v1_80510ba = add i32 %v0_80510b5, -8
  %v2_80510ba = inttoptr i32 %v1_80510ba to i32*
  store i32 1, i32* %v2_80510ba, align 4
  %v0_80510bc = load i32, i32* %eax.global-to-local, align 4
  %v2_80510bc = add i32 %v0_80510b5, -12
  %v3_80510bc = inttoptr i32 %v2_80510bc to i32*
  store i32 %v0_80510bc, i32* %v3_80510bc, align 4
  %v0_80510bd = load i32, i32* @ebx, align 4
  %v2_80510bd = add i32 %v0_80510b5, -16
  %v3_80510bd = inttoptr i32 %v2_80510bd to i32*
  store i32 %v0_80510bd, i32* %v3_80510bd, align 4
  %v0_80510be = call i32 @function_8052923()
  %v0_80510c3 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80510c8 = add i32 %v0_80510c3, 28
  %v2_80510c8 = inttoptr i32 %v1_80510c8 to i32*
  store i32 16384, i32* %v2_80510c8, align 4
  %v0_80510cd = load i32, i32* @esi, align 4
  %v1_80510cd = add i32 %v0_80510cd, 12
  %v2_80510cd = inttoptr i32 %v1_80510cd to i8*
  %v3_80510cd = load i8, i8* %v2_80510cd, align 1
  %v4_80510cd = zext i8 %v3_80510cd to i32
  %v5_80510cd = load i32, i32* %eax.global-to-local, align 4
  %v6_80510cd = and i32 %v5_80510cd, -256
  %v7_80510cd = or i32 %v6_80510cd, %v4_80510cd
  store i32 %v7_80510cd, i32* %eax.global-to-local, align 4
  %v2_80510d0 = add i32 %v0_80510c3, 24
  %v3_80510d0 = inttoptr i32 %v2_80510d0 to i32*
  store i32 %v7_80510cd, i32* %v3_80510d0, align 4
  %v0_80510d1 = load i32, i32* @esi, align 4
  %v1_80510d1 = inttoptr i32 %v0_80510d1 to i32*
  %v2_80510d1 = load i32, i32* %v1_80510d1, align 4
  store i32 %v2_80510d1, i32* %eax.global-to-local, align 4
  %v2_80510d3 = add i32 %v0_80510c3, 20
  %v3_80510d3 = inttoptr i32 %v2_80510d3 to i32*
  store i32 %v2_80510d1, i32* %v3_80510d3, align 4
  %v0_80510d4 = load i32, i32* @ebx, align 4
  %v2_80510d4 = add i32 %v0_80510c3, 16
  %v3_80510d4 = inttoptr i32 %v2_80510d4 to i32*
  store i32 %v0_80510d4, i32* %v3_80510d4, align 4
  %v0_80510d5 = call i32 @function_8052923()
  %v0_80510da = load i32, i32* @esi, align 4
  %v1_80510da = add i32 %v0_80510da, 13
  store i32 %v1_80510da, i32* %eax.global-to-local, align 4
  %v0_80510dd = load i32, i32* @esp, align 4
  %v1_80510dd = add i32 %v0_80510dd, -4
  %v2_80510dd = inttoptr i32 %v1_80510dd to i32*
  store i32 16384, i32* %v2_80510dd, align 4
  %v1_80510e2 = add i32 %v0_80510dd, -8
  %v2_80510e2 = inttoptr i32 %v1_80510e2 to i32*
  store i32 1, i32* %v2_80510e2, align 4
  %v0_80510e4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80510e4 = add i32 %v0_80510dd, -12
  %v3_80510e4 = inttoptr i32 %v2_80510e4 to i32*
  store i32 %v0_80510e4, i32* %v3_80510e4, align 4
  %v0_80510e5 = load i32, i32* @ebx, align 4
  %v2_80510e5 = add i32 %v0_80510dd, -16
  %v3_80510e5 = inttoptr i32 %v2_80510e5 to i32*
  store i32 %v0_80510e5, i32* %v3_80510e5, align 4
  %v0_80510e6 = call i32 @function_8052923()
  %v0_80510eb = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80510f0 = add i32 %v0_80510eb, 28
  %v2_80510f0 = inttoptr i32 %v1_80510f0 to i32*
  store i32 16384, i32* %v2_80510f0, align 4
  %v0_80510f5 = load i32, i32* @esi, align 4
  %v1_80510f5 = add i32 %v0_80510f5, 13
  %v2_80510f5 = inttoptr i32 %v1_80510f5 to i8*
  %v3_80510f5 = load i8, i8* %v2_80510f5, align 1
  %v4_80510f5 = zext i8 %v3_80510f5 to i32
  %v5_80510f5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80510f5 = and i32 %v5_80510f5, -256
  %v7_80510f5 = or i32 %v6_80510f5, %v4_80510f5
  store i32 %v7_80510f5, i32* %eax.global-to-local, align 4
  %v2_80510f8 = add i32 %v0_80510eb, 24
  %v3_80510f8 = inttoptr i32 %v2_80510f8 to i32*
  store i32 %v7_80510f5, i32* %v3_80510f8, align 4
  %v0_80510f9 = load i32, i32* @esi, align 4
  %v1_80510f9 = add i32 %v0_80510f9, 4
  %v2_80510f9 = inttoptr i32 %v1_80510f9 to i32*
  %v3_80510f9 = load i32, i32* %v2_80510f9, align 4
  %v2_80510fc = add i32 %v0_80510eb, 20
  %v3_80510fc = inttoptr i32 %v2_80510fc to i32*
  store i32 %v3_80510f9, i32* %v3_80510fc, align 4
  %v0_80510fd = load i32, i32* @ebx, align 4
  %v2_80510fd = add i32 %v0_80510eb, 16
  %v3_80510fd = inttoptr i32 %v2_80510fd to i32*
  store i32 %v0_80510fd, i32* %v3_80510fd, align 4
  %v0_80510fe = call i32 @function_8052923()
  store i32 %v0_80510fe, i32* %eax.global-to-local, align 4
  %v0_8051103 = load i32, i32* @esp, align 4
  %v1_8051103 = inttoptr i32 %v0_8051103 to i32*
  %v2_8051103 = load i32, i32* %v1_8051103, align 4
  store i32 %v2_8051103, i32* @edi, align 4
  br label %dec_label_pc_8051056

; uselistorder directives
  uselistorder i32 %v0_8051103, { 1, 0 }
  uselistorder i32 %v0_8050426, { 1, 0 }
  uselistorder i32 %v0_8050e99, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050e98, { 1, 0, 2 }
  uselistorder i16 %v1_8050ea0, { 1, 0 }
  uselistorder i64 %v8_8050e89, { 1, 0 }
  uselistorder i32 %v2_8050e0c, { 1, 0 }
  uselistorder i32 %v3_8050e09, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050db8, { 1, 0, 2 }
  uselistorder i32 %v0_8050d90, { 2, 1, 0 }
  uselistorder i32 %v0_8050d69, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v3_8050d2b, { 1, 0 }
  uselistorder i32 %v0_8050d2b, { 1, 0 }
  uselistorder i32 %v0_8050d23, { 1, 0 }
  uselistorder i32 %v0_8050cac, { 1, 0 }
  uselistorder i32 %v1_8050c27, { 1, 2, 0 }
  uselistorder i32 %v1_8050bae, { 1, 2, 0 }
  uselistorder i32 %v0_8050b69, { 1, 0 }
  uselistorder i32 %v1_8050ae4, { 1, 2, 0 }
  uselistorder i32 %v0_8050fbc, { 1, 0 }
  uselistorder i32 %v2_8050a1b, { 1, 0, 2 }
  uselistorder i32 %v1_8050a18, { 1, 0, 2 }
  uselistorder i32 %v0_8050a15, { 1, 0 }
  uselistorder i32 %v0_8050a11, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v7_805099d, { 1, 0 }
  uselistorder i32 %v0_805099d, { 1, 2, 0 }
  uselistorder i32 %v2_80504b1, { 1, 0 }
  uselistorder i32 %v0_80504b1, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_80504b1, { 0, 2, 1 }
  uselistorder i32 %v0_805052f124, { 1, 0 }
  uselistorder i32 %v9_8050908, { 1, 0 }
  uselistorder i32 %v1_8050901, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8050901, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_80508d8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80508d0, { 2, 1, 0 }
  uselistorder i32 %v9_805089f, { 1, 0 }
  uselistorder i32 %v0_8050c27, { 0, 1, 3, 2 }
  uselistorder i32 %v2_805086d, { 1, 2, 0 }
  uselistorder i32 %v1_805086d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050868, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_8050d33, { 1, 0 }
  uselistorder i32* %v1_8050d4c, { 2, 0, 1 }
  uselistorder i32 %v0_8050802, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v9_8050760, { 1, 0 }
  uselistorder i32 %v1_8050759, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8050759, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_8050730, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050722, { 2, 1, 0 }
  uselistorder i32 %v9_80506f1, { 1, 0 }
  uselistorder i32 %v0_8050ae4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80506dd, { 2, 1, 0 }
  uselistorder i32 %v9_80506ac, { 1, 0 }
  uselistorder i32 %v0_8050bae, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050691, { 1, 0 }
  uselistorder i32 %v0_8050656, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_8050638, { 2, 1, 0 }
  uselistorder i32 %v9_8050610, { 1, 0 }
  uselistorder i32 %v0_8050ca0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80505fa, { 1, 0 }
  uselistorder i32 %v0_80505b3, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_8050574, { 2, 1, 0 }
  uselistorder i32 %v9_8050543, { 1, 0 }
  uselistorder i32 %v0_8050b5d, { 0, 1, 3, 2 }
  uselistorder i32 %v2_8050523, { 1, 0 }
  uselistorder i32 %v0_8050523, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_805051d, { 0, 1, 3, 2 }
  uselistorder i32 %v0_805051d, { 0, 2, 1 }
  uselistorder i32 %v0_8050518, { 1, 0 }
  uselistorder i32 %v0_80504f3, { 1, 0, 2 }
  uselistorder i8* %v1_80504e1, { 1, 0, 2 }
  uselistorder i32 %v1_80504be, { 1, 0, 2 }
  uselistorder i32 %v0_80509b1, { 1, 0, 2 }
  uselistorder i32 %v0_8050992, { 3, 0, 1, 2 }
  uselistorder i32 %v0_805052f125, { 3, 0, 1, 2 }
  uselistorder i32 %v2_80504b117, { 1, 0 }
  uselistorder i32 %v3_8050498, { 1, 0 }
  uselistorder i32 %v0_8050498, { 1, 15, 2, 13, 3, 12, 4, 14, 5, 11, 6, 10, 7, 9, 0, 8, 16 }
  uselistorder i32 %v1_8050483, { 0, 2, 1 }
  uselistorder i32 %v0_805047f, { 1, 0 }
  uselistorder i32 %v0_8050466, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_805045c, { 1, 0 }
  uselistorder i32 %v1_8050414, { 1, 0 }
  uselistorder i32 %v2_8050411, { 1, 0 }
  uselistorder i32 %v0_805040f, { 1, 0 }
  uselistorder i32 %v0_80503fc, { 2, 1, 0 }
  uselistorder i32 %v1_80503f9, { 1, 0 }
  uselistorder i32 %v2_80503f6, { 1, 0 }
  uselistorder i32 %v3_80503ea, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_80503d2, { 1, 0 }
  uselistorder i32 %v0_80503d2, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050379, { 1, 0 }
  uselistorder i32 %v1_8050359, { 1, 0 }
  uselistorder i32 %v0_8050359, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8050344, { 1, 0 }
  uselistorder i32 %v3_8050341, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050dfe, { 1, 0 }
  uselistorder i32 %v1_8050dfb, { 2, 1, 0 }
  uselistorder i32 %v3_8050309, { 1, 0, 2 }
  uselistorder i32 %v2_8050307, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80502ac, { 1, 0 }
  uselistorder i32 %v1_80502a1, { 1, 0 }
  uselistorder i32 %v0_80502a1, { 1, 0 }
  uselistorder i32 %v0_80502aa, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805027e, { 1, 0 }
  uselistorder i32 %v0_805027e, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_8050270, { 1, 0, 2 }
  uselistorder i32 %v4_8050233, { 1, 2, 0 }
  uselistorder i32 %v3_8050202, { 1, 0, 2 }
  uselistorder i32 %v0_8050186, { 0, 2, 1 }
  uselistorder i32 %v0_805017d, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804ff4462, { 1, 0 }
  uselistorder i32 %v0_8050160, { 2, 1, 0 }
  uselistorder i8 %v1_8050132, { 1, 0 }
  uselistorder i8 %v2_805010c, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_8050103, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_8050101, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_80500fb, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80500f6, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80500aa, { 1, 0 }
  uselistorder i32 %v0_804fffa, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804fff5, { 1, 0 }
  uselistorder i32 %v1_804ffd2, { 0, 2, 1 }
  uselistorder i32 %v0_804ff32, { 2, 0, 1 }
  uselistorder i32 %v0_804fef6, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 43, 23, 24, 44, 45, 46, 19, 8, 9, 10, 3, 6, 14, 15, 16, 52, 26, 27, 28, 20, 0, 1, 2, 4, 47, 48, 49, 50, 51, 5, 7, 11, 12, 13, 17, 18, 21, 22, 29, 30, 31, 32, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32* %ecx.global-to-local, { 10, 11, 12, 13, 14, 15, 31, 3, 1, 2, 4, 33, 34, 7, 0, 8, 32, 5, 6, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %eax.global-to-local, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 190, 191, 192, 193, 194, 196, 47, 108, 109, 110, 189, 62, 63, 64, 65, 66, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 197, 199, 198, 200, 201, 202, 203, 204, 206, 86, 87, 88, 89, 90, 49, 50, 51, 52, 53, 9, 10, 11, 12, 13, 14, 15, 39, 40, 41, 42, 43, 44, 67, 68, 69, 70, 71, 228, 229, 230, 231, 232, 233, 102, 125, 126, 127, 128, 140, 129, 130, 131, 132, 91, 92, 93, 94, 103, 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 95, 96, 97, 98, 99, 207, 208, 209, 210, 211, 212, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 37, 38, 45, 46, 48, 54, 55, 56, 57, 58, 59, 60, 61, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100, 101, 104, 105, 106, 107, 133, 134, 135, 136, 137, 138, 139, 141, 234, 142, 143, 144, 145, 146, 187, 188, 147, 148, 149, 150, 151, 152, 153, 154, 155, 124, 156, 161, 157, 159, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 195, 184, 186, 185, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183 }
  uselistorder i32 ()* @function_805284f, { 1, 0 }
  uselistorder i32 1852, { 1, 2, 0, 3 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 (i8)* @function_8051140, { 12, 4, 5, 13, 1, 2, 16, 0, 14, 15, 3, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20 }
  uselistorder i32 ()* @function_8051d30, { 23, 21, 20, 24, 22, 19, 18, 17, 16, 15, 14, 5, 4, 3, 13, 12, 11, 2, 1, 0, 10, 9, 8, 7, 6 }
  uselistorder i32 1864, { 6, 0, 4, 5, 7, 2, 3, 1 }
  uselistorder i32 (i32, i32*)* @function_8051110, { 10, 11, 1, 2, 14, 0, 12, 13, 3, 4, 5, 6, 7, 8, 9, 15, 16, 31, 17, 18, 19, 37, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36 }
  uselistorder i32 1868, { 10, 8, 2, 3, 4, 5, 6, 7, 11, 9, 12, 1, 13, 0 }
  uselistorder i32 (i8)* @function_80511c0, { 10, 11, 1, 2, 14, 0, 12, 13, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 18, 19, 0, 1, 20, 21, 12, 13, 8, 9, 14, 15, 16, 17, 22, 23, 10, 11, 6, 7, 2, 3, 4, 5 }
  uselistorder i8 37, { 5, 3, 2, 4, 1, 0 }
  uselistorder i8 35, { 6, 4, 3, 5, 2, 1, 0 }
  uselistorder i8 36, { 6, 4, 3, 5, 2, 1, 0 }
  uselistorder i8 62, { 7, 8, 5, 3, 4, 6, 2, 1, 0 }
  uselistorder i8 58, { 7, 8, 5, 3, 4, 6, 2, 1, 0 }
  uselistorder i32 ()* @function_8052923, { 20, 19, 18, 17, 16, 15, 14, 7, 6, 11, 10, 22, 21, 13, 12, 9, 8, 2, 1, 24, 23, 4, 3, 5, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 ()* @function_80528ad, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_80524b4, { 4, 3, 0, 2, 1 }
  uselistorder i32 ()* @function_80523fa, { 1, 0 }
  uselistorder i32 1556, { 1, 2, 0 }
  uselistorder i32 1684, { 1, 0, 2 }
  uselistorder i32 ()* @function_804ec90, { 3, 2, 0, 1 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 2, 3, 1 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 ()* @function_804eb30, { 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_8056116.28, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1856, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051068, { 1, 0 }
  uselistorder label %dec_label_pc_8050426.backedge, { 22, 13, 7, 11, 9, 1, 5, 16, 6, 18, 8, 14, 19, 15, 17, 10, 20, 12, 2, 0, 3, 21, 4 }
  uselistorder label %dec_label_pc_8050a6c, { 1, 0 }
  uselistorder label %dec_label_pc_8050a41, { 6, 3, 1, 2, 4, 8, 0, 7, 5 }
  uselistorder label %dec_label_pc_80504b1.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8050922, { 1, 0 }
  uselistorder label %dec_label_pc_80508f2, { 1, 0 }
  uselistorder label %dec_label_pc_805089f, { 1, 0 }
  uselistorder label %dec_label_pc_8050873, { 1, 0 }
  uselistorder label %dec_label_pc_8050868, { 7, 8, 4, 2, 3, 5, 10, 0, 1, 11, 9, 6 }
  uselistorder label %dec_label_pc_805077a, { 1, 0 }
  uselistorder label %dec_label_pc_805074a, { 1, 0 }
  uselistorder label %dec_label_pc_80506f1, { 1, 0 }
  uselistorder label %dec_label_pc_80506ac, { 1, 0 }
  uselistorder label %dec_label_pc_805063b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050610, { 1, 0 }
  uselistorder label %dec_label_pc_8050577, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050543, { 1, 0 }
  uselistorder label %dec_label_pc_8050527, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8050506, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80504f3, { 1, 0 }
  uselistorder label %dec_label_pc_80504e1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_80504b5, { 1, 0 }
  uselistorder label %dec_label_pc_80504b5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8050488, { 1, 0 }
  uselistorder label %dec_label_pc_8050483, { 1, 0 }
  uselistorder label %dec_label_pc_8050441, { 1, 0 }
  uselistorder label %dec_label_pc_805042d, { 1, 0 }
  uselistorder label %dec_label_pc_805040f, { 1, 0 }
  uselistorder label %dec_label_pc_80503c3, { 5, 6, 0, 7, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_805039b, { 1, 0 }
  uselistorder label %dec_label_pc_805034a, { 3, 4, 5, 0, 1, 6, 2 }
  uselistorder label %dec_label_pc_8050315, { 1, 0 }
  uselistorder label %dec_label_pc_80502d0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80502a1, { 1, 0 }
  uselistorder label %dec_label_pc_80501ba, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_80501af, { 1, 0 }
  uselistorder label %dec_label_pc_8050174, { 1, 0 }
  uselistorder label %dec_label_pc_8050140, { 1, 0 }
  uselistorder label %dec_label_pc_80500f6.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_804ff44, { 1, 2, 4, 0, 3 }
}

define i32 @function_8051110(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8051110:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_8051118 = icmp eq i32* %arg2, null
  %v1_805111a = mul i32 %arg1, 8
  store i32 %v1_805111a, i32* @edx, align 4
  br i1 %v1_8051118, label %dec_label_pc_8051133, label %dec_label_pc_8051129

dec_label_pc_8051129:                             ; preds = %dec_label_pc_8051110
  %v1_8051129 = add i32 %v1_805111a, add (i32 ptrtoint (i32* @global_var_80561a0.41 to i32), i32 4)
  %v2_8051129 = inttoptr i32 %v1_8051129 to i32*
  %v3_8051129 = load i32, i32* %v2_8051129, align 4
  %v1_805112c = urem i32 %v3_8051129, 65536
  store i32 %v1_805112c, i32* %arg2, align 4
  %v0_8051133.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051133

dec_label_pc_8051133:                             ; preds = %dec_label_pc_8051110, %dec_label_pc_8051129
  %v0_8051133 = phi i32 [ %v1_805111a, %dec_label_pc_8051110 ], [ %v0_8051133.pre, %dec_label_pc_8051129 ]
  %v1_8051133 = add i32 %v0_8051133, ptrtoint (i32* @global_var_80561a0.41 to i32)
  %v2_8051133 = inttoptr i32 %v1_8051133 to i32*
  %v3_8051133 = load i32, i32* %v2_8051133, align 4
  ret i32 %v3_8051133

; uselistorder directives
  uselistorder label %dec_label_pc_8051133, { 1, 0 }
}

define i32 @function_8051140(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051140:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051149 = zext i8 %arg1 to i32
  %v1_805114d = mul nuw nsw i32 %v4_8051149, 8
  %v2_805114d = add i32 %v1_805114d, ptrtoint (i32* @global_var_80561a0.41 to i32)
  store i32 %v2_805114d, i32* @ecx, align 4
  %v0_8051154 = load i16, i16* @global_var_8056038.42, align 2
  %v1_8051154 = sext i16 %v0_8051154 to i32
  %v1_8051159 = add i32 %v1_805114d, add (i32 ptrtoint (i32* @global_var_80561a0.41 to i32), i32 4)
  %v2_8051159 = inttoptr i32 %v1_8051159 to i16*
  %v3_8051159 = load i16, i16* %v2_8051159, align 4
  %v4_8051159 = icmp eq i16 %v3_8051159, 0
  br i1 %v4_8051159, label %dec_label_pc_80511aa, label %dec_label_pc_8051160

dec_label_pc_8051160:                             ; preds = %dec_label_pc_8051140
  store i32 %v1_8051154, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051168 = udiv i32 %v1_8051154, 16777216
  %v2_805116b = udiv i32 %v1_8051154, 256
  store i32 %v2_805116b, i32* %edi.global-to-local, align 4
  %v5_805116e = trunc i32 %v2_8051168 to i8
  store i8 %v5_805116e, i8* %stack_var_-44, align 1
  %v2_8051171 = udiv i32 %v1_8051154, 65536
  store i32 %v2_8051171, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051174

dec_label_pc_8051174:                             ; preds = %dec_label_pc_8051174.dec_label_pc_8051174_crit_edge, %dec_label_pc_8051160
  %v0_805117a = phi i32 [ %v0_805117a.pre, %dec_label_pc_8051174.dec_label_pc_8051174_crit_edge ], [ %v1_8051154, %dec_label_pc_8051160 ]
  %v0_8051176 = phi i32 [ %v1_80511a6, %dec_label_pc_8051174.dec_label_pc_8051174_crit_edge ], [ 0, %dec_label_pc_8051160 ]
  %v0_8051174 = phi i32 [ %v0_805119e, %dec_label_pc_8051174.dec_label_pc_8051174_crit_edge ], [ %v2_805114d, %dec_label_pc_8051160 ]
  %v1_8051174 = inttoptr i32 %v0_8051174 to i32*
  %v2_8051174 = load i32, i32* %v1_8051174, align 4
  %v2_8051178 = add i32 %v2_8051174, %v0_8051176
  %v1_805117c = inttoptr i32 %v2_8051178 to i8*
  %v2_805117c = load i8, i8* %v1_805117c, align 1
  %v4_805117c = trunc i32 %v0_805117a to i8
  %v5_805117c = xor i8 %v2_805117c, %v4_805117c
  store i8 %v5_805117c, i8* %v1_805117c, align 1
  %v0_805117e = load i32, i32* %edx.global-to-local, align 4
  %v0_8051180 = load i32, i32* @ecx, align 4
  %v1_8051180 = inttoptr i32 %v0_8051180 to i32*
  %v2_8051180 = load i32, i32* %v1_8051180, align 4
  %v2_8051182 = add i32 %v2_8051180, %v0_805117e
  %v0_8051184 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051186 = inttoptr i32 %v2_8051182 to i8*
  %v2_8051186 = load i8, i8* %v1_8051186, align 1
  %v4_8051186 = trunc i32 %v0_8051184 to i8
  %v5_8051186 = xor i8 %v2_8051186, %v4_8051186
  store i8 %v5_8051186, i8* %v1_8051186, align 1
  %v0_8051188 = load i32, i32* %edx.global-to-local, align 4
  %v0_805118a = load i32, i32* @ecx, align 4
  %v1_805118a = inttoptr i32 %v0_805118a to i32*
  %v2_805118a = load i32, i32* %v1_805118a, align 4
  %v2_805118c = add i32 %v2_805118a, %v0_8051188
  %v0_805118e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051190 = inttoptr i32 %v2_805118c to i8*
  %v2_8051190 = load i8, i8* %v1_8051190, align 1
  %v4_8051190 = trunc i32 %v0_805118e to i8
  %v5_8051190 = xor i8 %v2_8051190, %v4_8051190
  store i8 %v5_8051190, i8* %v1_8051190, align 1
  %v0_8051192 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051194 = load i32, i32* @ecx, align 4
  %v1_8051194 = inttoptr i32 %v0_8051194 to i32*
  %v2_8051194 = load i32, i32* %v1_8051194, align 4
  %v1_8051196 = add i32 %v0_8051192, 1
  store i32 %v1_8051196, i32* %edx.global-to-local, align 4
  %v2_8051197 = add i32 %v2_8051194, %v0_8051192
  %v2_8051199 = load i8, i8* %stack_var_-44, align 1
  %v1_805119c = inttoptr i32 %v2_8051197 to i8*
  %v2_805119c = load i8, i8* %v1_805119c, align 1
  %v5_805119c = xor i8 %v2_805119c, %v2_8051199
  store i8 %v5_805119c, i8* %v1_805119c, align 1
  %v0_805119e = load i32, i32* @ecx, align 4
  %v1_805119e = add i32 %v0_805119e, 4
  %v2_805119e = inttoptr i32 %v1_805119e to i32*
  %v3_805119e = load i32, i32* %v2_805119e, align 4
  %v1_80511a1 = urem i32 %v3_805119e, 65536
  %v1_80511a6 = load i32, i32* %edx.global-to-local, align 4
  %v8_80511a8 = icmp sgt i32 %v1_80511a1, %v1_80511a6
  br i1 %v8_80511a8, label %dec_label_pc_8051174.dec_label_pc_8051174_crit_edge, label %dec_label_pc_80511aa.loopexit

dec_label_pc_8051174.dec_label_pc_8051174_crit_edge: ; preds = %dec_label_pc_8051174
  %v0_805117a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051174

dec_label_pc_80511aa.loopexit:                    ; preds = %dec_label_pc_8051174
  br label %dec_label_pc_80511aa

dec_label_pc_80511aa:                             ; preds = %dec_label_pc_80511aa.loopexit, %dec_label_pc_8051140
  %v0_80511b1 = phi i32 [ %v1_80511a1, %dec_label_pc_80511aa.loopexit ], [ %v1_8051154, %dec_label_pc_8051140 ]
  ret i32 %v0_80511b1

; uselistorder directives
  uselistorder i32 %v1_80511a6, { 1, 0 }
  uselistorder i32 %v1_80511a1, { 1, 0 }
  uselistorder i32 %v0_805119e, { 1, 0 }
  uselistorder i32 %v1_8051154, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_80511c0(i8 %arg1) local_unnamed_addr {
dec_label_pc_80511c0:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_80511c9 = zext i8 %arg1 to i32
  %v1_80511cd = mul nuw nsw i32 %v4_80511c9, 8
  %v2_80511cd = add i32 %v1_80511cd, ptrtoint (i32* @global_var_80561a0.41 to i32)
  store i32 %v2_80511cd, i32* %ecx.global-to-local, align 4
  %v0_80511d4 = load i16, i16* @global_var_8056038.42, align 2
  %v1_80511d4 = sext i16 %v0_80511d4 to i32
  %v1_80511d9 = add i32 %v1_80511cd, add (i32 ptrtoint (i32* @global_var_80561a0.41 to i32), i32 4)
  %v2_80511d9 = inttoptr i32 %v1_80511d9 to i16*
  %v3_80511d9 = load i16, i16* %v2_80511d9, align 4
  %v4_80511d9 = icmp eq i16 %v3_80511d9, 0
  br i1 %v4_80511d9, label %dec_label_pc_805122a, label %dec_label_pc_80511e0

dec_label_pc_80511e0:                             ; preds = %dec_label_pc_80511c0
  store i32 %v1_80511d4, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_80511e8 = udiv i32 %v1_80511d4, 16777216
  %v2_80511eb = udiv i32 %v1_80511d4, 256
  store i32 %v2_80511eb, i32* %edi.global-to-local, align 4
  %v5_80511ee = trunc i32 %v2_80511e8 to i8
  store i8 %v5_80511ee, i8* %stack_var_-44, align 1
  %v2_80511f1 = udiv i32 %v1_80511d4, 65536
  store i32 %v2_80511f1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80511f4

dec_label_pc_80511f4:                             ; preds = %dec_label_pc_80511f4.dec_label_pc_80511f4_crit_edge, %dec_label_pc_80511e0
  %v0_80511fa = phi i32 [ %v0_80511fa.pre, %dec_label_pc_80511f4.dec_label_pc_80511f4_crit_edge ], [ %v1_80511d4, %dec_label_pc_80511e0 ]
  %v0_80511f6 = phi i32 [ %v1_8051226, %dec_label_pc_80511f4.dec_label_pc_80511f4_crit_edge ], [ 0, %dec_label_pc_80511e0 ]
  %v0_80511f4 = phi i32 [ %v0_805121e, %dec_label_pc_80511f4.dec_label_pc_80511f4_crit_edge ], [ %v2_80511cd, %dec_label_pc_80511e0 ]
  %v1_80511f4 = inttoptr i32 %v0_80511f4 to i32*
  %v2_80511f4 = load i32, i32* %v1_80511f4, align 4
  %v2_80511f8 = add i32 %v2_80511f4, %v0_80511f6
  %v1_80511fc = inttoptr i32 %v2_80511f8 to i8*
  %v2_80511fc = load i8, i8* %v1_80511fc, align 1
  %v4_80511fc = trunc i32 %v0_80511fa to i8
  %v5_80511fc = xor i8 %v2_80511fc, %v4_80511fc
  store i8 %v5_80511fc, i8* %v1_80511fc, align 1
  %v0_80511fe = load i32, i32* %edx.global-to-local, align 4
  %v0_8051200 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051200 = inttoptr i32 %v0_8051200 to i32*
  %v2_8051200 = load i32, i32* %v1_8051200, align 4
  %v2_8051202 = add i32 %v2_8051200, %v0_80511fe
  %v0_8051204 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051206 = inttoptr i32 %v2_8051202 to i8*
  %v2_8051206 = load i8, i8* %v1_8051206, align 1
  %v4_8051206 = trunc i32 %v0_8051204 to i8
  %v5_8051206 = xor i8 %v2_8051206, %v4_8051206
  store i8 %v5_8051206, i8* %v1_8051206, align 1
  %v0_8051208 = load i32, i32* %edx.global-to-local, align 4
  %v0_805120a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805120a = inttoptr i32 %v0_805120a to i32*
  %v2_805120a = load i32, i32* %v1_805120a, align 4
  %v2_805120c = add i32 %v2_805120a, %v0_8051208
  %v0_805120e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051210 = inttoptr i32 %v2_805120c to i8*
  %v2_8051210 = load i8, i8* %v1_8051210, align 1
  %v4_8051210 = trunc i32 %v0_805120e to i8
  %v5_8051210 = xor i8 %v2_8051210, %v4_8051210
  store i8 %v5_8051210, i8* %v1_8051210, align 1
  %v0_8051212 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051214 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051214 = inttoptr i32 %v0_8051214 to i32*
  %v2_8051214 = load i32, i32* %v1_8051214, align 4
  %v1_8051216 = add i32 %v0_8051212, 1
  store i32 %v1_8051216, i32* %edx.global-to-local, align 4
  %v2_8051217 = add i32 %v2_8051214, %v0_8051212
  %v2_8051219 = load i8, i8* %stack_var_-44, align 1
  %v1_805121c = inttoptr i32 %v2_8051217 to i8*
  %v2_805121c = load i8, i8* %v1_805121c, align 1
  %v5_805121c = xor i8 %v2_805121c, %v2_8051219
  store i8 %v5_805121c, i8* %v1_805121c, align 1
  %v0_805121e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805121e = add i32 %v0_805121e, 4
  %v2_805121e = inttoptr i32 %v1_805121e to i32*
  %v3_805121e = load i32, i32* %v2_805121e, align 4
  %v1_8051221 = urem i32 %v3_805121e, 65536
  %v1_8051226 = load i32, i32* %edx.global-to-local, align 4
  %v8_8051228 = icmp sgt i32 %v1_8051221, %v1_8051226
  br i1 %v8_8051228, label %dec_label_pc_80511f4.dec_label_pc_80511f4_crit_edge, label %dec_label_pc_805122a.loopexit

dec_label_pc_80511f4.dec_label_pc_80511f4_crit_edge: ; preds = %dec_label_pc_80511f4
  %v0_80511fa.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80511f4

dec_label_pc_805122a.loopexit:                    ; preds = %dec_label_pc_80511f4
  br label %dec_label_pc_805122a

dec_label_pc_805122a:                             ; preds = %dec_label_pc_805122a.loopexit, %dec_label_pc_80511c0
  %v0_8051231 = phi i32 [ %v1_8051221, %dec_label_pc_805122a.loopexit ], [ %v1_80511d4, %dec_label_pc_80511c0 ]
  ret i32 %v0_8051231

; uselistorder directives
  uselistorder i32 %v1_8051226, { 1, 0 }
  uselistorder i32 %v1_8051221, { 1, 0 }
  uselistorder i32 %v0_805121e, { 1, 0 }
  uselistorder i32 %v1_80511d4, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80561a0.41 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_8056038.42, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80561a0.41 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8051c80(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051c80:
  %v4_8051c80 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051c80, i32* @edx, align 4
  %v2_8051c86 = load i8, i8* %arg1, align 1
  %v3_8051c86 = icmp eq i8 %v2_8051c86, 0
  br i1 %v3_8051c86, label %dec_label_pc_8051c97, label %dec_label_pc_8051c90

dec_label_pc_8051c90:                             ; preds = %dec_label_pc_8051c80, %dec_label_pc_8051c90
  %v0_8051c90 = phi i32 [ %v1_8051c90, %dec_label_pc_8051c90 ], [ 0, %dec_label_pc_8051c80 ]
  %v1_8051c90 = add i32 %v0_8051c90, 1
  %v2_8051c91 = add i32 %v1_8051c90, %v4_8051c80
  %v3_8051c91 = inttoptr i32 %v2_8051c91 to i8*
  %v4_8051c91 = load i8, i8* %v3_8051c91, align 1
  %v5_8051c91 = icmp eq i8 %v4_8051c91, 0
  %v1_8051c95 = icmp eq i1 %v5_8051c91, false
  br i1 %v1_8051c95, label %dec_label_pc_8051c90, label %dec_label_pc_8051c97

dec_label_pc_8051c97:                             ; preds = %dec_label_pc_8051c90, %dec_label_pc_8051c80
  %v0_8051c97 = phi i32 [ 0, %dec_label_pc_8051c80 ], [ %v1_8051c90, %dec_label_pc_8051c90 ]
  ret i32 %v0_8051c97

; uselistorder directives
  uselistorder label %dec_label_pc_8051c90, { 1, 0 }
}

define i32 @function_8051ca0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051ca0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ca1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ca1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8051ca6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051ca6, i32* %edx.global-to-local, align 4
  %v2_8051caa = load i8, i8* %tmp15, align 1
  %v3_8051caa = icmp eq i8 %v2_8051caa, 0
  br i1 %v3_8051caa, label %dec_label_pc_8051cd4, label %dec_label_pc_8051caf

dec_label_pc_8051caf:                             ; preds = %dec_label_pc_8051ca0
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051cb1

dec_label_pc_8051cb1:                             ; preds = %dec_label_pc_8051cb1, %dec_label_pc_8051caf
  %v0_8051cb1 = phi i32 [ %v1_8051cb1, %dec_label_pc_8051cb1 ], [ 0, %dec_label_pc_8051caf ]
  %v1_8051cb1 = add i32 %v0_8051cb1, 1
  store i32 %v1_8051cb1, i32* %esi.global-to-local, align 4
  %v2_8051cb2 = add i32 %v1_8051cb1, %arg2
  %v3_8051cb2 = inttoptr i32 %v2_8051cb2 to i8*
  %v4_8051cb2 = load i8, i8* %v3_8051cb2, align 1
  %v5_8051cb2 = icmp eq i8 %v4_8051cb2, 0
  %v1_8051cb6 = icmp eq i1 %v5_8051cb2, false
  br i1 %v1_8051cb6, label %dec_label_pc_8051cb1, label %dec_label_pc_8051cb8

dec_label_pc_8051cb8:                             ; preds = %dec_label_pc_8051cb1
  %v10_8051cb8 = icmp eq i32 %v0_8051cb1, -2
  br i1 %v10_8051cb8, label %dec_label_pc_8051ccf, label %dec_label_pc_8051cbd

dec_label_pc_8051cbd:                             ; preds = %dec_label_pc_8051cb8
  store i32 %v4_8051ca6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8051cb1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051cc3

dec_label_pc_8051cc3:                             ; preds = %dec_label_pc_8051cd4, %dec_label_pc_8051cbd, %dec_label_pc_8051cc3.dec_label_pc_8051cc3_crit_edge
  %v2_8051cc6 = phi i32 [ %v1_8051cc9, %dec_label_pc_8051cc3.dec_label_pc_8051cc3_crit_edge ], [ %v4_8051ca6, %dec_label_pc_8051cbd ], [ %v4_8051ca6, %dec_label_pc_8051cd4 ]
  %v0_8051cc5 = phi i32 [ %v0_8051cca, %dec_label_pc_8051cc3.dec_label_pc_8051cc3_crit_edge ], [ %v1_8051cb1, %dec_label_pc_8051cbd ], [ 0, %dec_label_pc_8051cd4 ]
  %v4_8051cc3 = phi i32 [ %v4_8051cc3.pre, %dec_label_pc_8051cc3.dec_label_pc_8051cc3_crit_edge ], [ %arg2, %dec_label_pc_8051cbd ], [ %arg2, %dec_label_pc_8051cd4 ]
  %v0_8051cc3 = phi i32 [ %v1_8051cc8, %dec_label_pc_8051cc3.dec_label_pc_8051cc3_crit_edge ], [ %arg2, %dec_label_pc_8051cbd ], [ %arg2, %dec_label_pc_8051cd4 ]
  %v1_8051cc3 = inttoptr i32 %v0_8051cc3 to i8*
  %v2_8051cc3 = load i8, i8* %v1_8051cc3, align 1
  %v3_8051cc3 = zext i8 %v2_8051cc3 to i32
  %v5_8051cc3 = and i32 %v4_8051cc3, -256
  %v6_8051cc3 = or i32 %v3_8051cc3, %v5_8051cc3
  store i32 %v6_8051cc3, i32* %eax.global-to-local, align 4
  %v1_8051cc5 = add i32 %v0_8051cc5, -1
  store i32 %v1_8051cc5, i32* %edx.global-to-local, align 4
  %v3_8051cc6 = inttoptr i32 %v2_8051cc6 to i8*
  store i8 %v2_8051cc3, i8* %v3_8051cc6, align 1
  %v0_8051cc8 = load i32, i32* @ecx, align 4
  %v1_8051cc8 = add i32 %v0_8051cc8, 1
  store i32 %v1_8051cc8, i32* @ecx, align 4
  %v0_8051cc9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051cc9 = add i32 %v0_8051cc9, 1
  store i32 %v1_8051cc9, i32* %ebx.global-to-local, align 4
  %v0_8051cca = load i32, i32* %edx.global-to-local, align 4
  %v10_8051cca = icmp eq i32 %v0_8051cca, -1
  %v1_8051ccd = icmp eq i1 %v10_8051cca, false
  br i1 %v1_8051ccd, label %dec_label_pc_8051cc3.dec_label_pc_8051cc3_crit_edge, label %dec_label_pc_8051ccf.loopexit

dec_label_pc_8051cc3.dec_label_pc_8051cc3_crit_edge: ; preds = %dec_label_pc_8051cc3
  %v4_8051cc3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051cc3

dec_label_pc_8051ccf.loopexit:                    ; preds = %dec_label_pc_8051cc3
  %v0_8051ccf.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051cd1.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051ccf

dec_label_pc_8051ccf:                             ; preds = %dec_label_pc_8051ccf.loopexit, %dec_label_pc_8051cb8
  %v2_8051cd1 = phi i32 [ %v2_8051cd1.pre, %dec_label_pc_8051ccf.loopexit ], [ %v0_8051ca1, %dec_label_pc_8051cb8 ]
  %v0_8051ccf = phi i32 [ %v0_8051ccf.pre, %dec_label_pc_8051ccf.loopexit ], [ %v1_8051cb1, %dec_label_pc_8051cb8 ]
  store i32 %v0_8051ccf, i32* %eax.global-to-local, align 4
  store i32 %v2_8051cd1, i32* @ebx, align 4
  ret i32 %v0_8051ccf

dec_label_pc_8051cd4:                             ; preds = %dec_label_pc_8051ca0
  store i32 %v4_8051ca6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051cc3

; uselistorder directives
  uselistorder i32 %v0_8051ccf, { 1, 0 }
  uselistorder i32 %v1_8051cc9, { 1, 0 }
  uselistorder i32 %v1_8051cc8, { 1, 0 }
  uselistorder i32 %v1_8051cb1, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8051ca6, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8051cc3, { 0, 2, 1 }
}

define i32 @function_8051d10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051d10:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8051d18 = icmp eq i32 %arg2, 0
  br i1 %v1_8051d18, label %dec_label_pc_8051d10.dec_label_pc_8051d29_crit_edge, label %dec_label_pc_8051d1c

dec_label_pc_8051d10.dec_label_pc_8051d29_crit_edge: ; preds = %dec_label_pc_8051d10
  %v0_8051d29.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051d29

dec_label_pc_8051d1c:                             ; preds = %dec_label_pc_8051d10
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8051d205 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_8051d205, align 1
  %v0_8051d246 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d247 = add i32 %v0_8051d246, 1
  store i32 %v1_8051d247, i32* %eax.global-to-local, align 4
  %v12_8051d258 = icmp eq i32 %v1_8051d247, %arg2
  %v1_8051d279 = icmp eq i1 %v12_8051d258, false
  br i1 %v1_8051d279, label %dec_label_pc_8051d20.dec_label_pc_8051d20_crit_edge, label %dec_label_pc_8051d29

dec_label_pc_8051d20.dec_label_pc_8051d20_crit_edge: ; preds = %dec_label_pc_8051d1c, %dec_label_pc_8051d20.dec_label_pc_8051d20_crit_edge
  %v1_8051d2410 = phi i32 [ %v1_8051d24, %dec_label_pc_8051d20.dec_label_pc_8051d20_crit_edge ], [ %v1_8051d247, %dec_label_pc_8051d1c ]
  %v1_8051d20.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051d20 = add i32 %v1_8051d2410, %v1_8051d20.pre
  %v3_8051d20 = inttoptr i32 %v2_8051d20 to i8*
  store i8 0, i8* %v3_8051d20, align 1
  %v0_8051d24 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051d24 = add i32 %v0_8051d24, 1
  store i32 %v1_8051d24, i32* %eax.global-to-local, align 4
  %v12_8051d25 = icmp eq i32 %v1_8051d24, %arg2
  %v1_8051d27 = icmp eq i1 %v12_8051d25, false
  br i1 %v1_8051d27, label %dec_label_pc_8051d20.dec_label_pc_8051d20_crit_edge, label %dec_label_pc_8051d29

dec_label_pc_8051d29:                             ; preds = %dec_label_pc_8051d1c, %dec_label_pc_8051d20.dec_label_pc_8051d20_crit_edge, %dec_label_pc_8051d10.dec_label_pc_8051d29_crit_edge
  %v0_8051d29 = phi i32 [ %v0_8051d29.pre, %dec_label_pc_8051d10.dec_label_pc_8051d29_crit_edge ], [ %v1_8051d247, %dec_label_pc_8051d1c ], [ %v1_8051d24, %dec_label_pc_8051d20.dec_label_pc_8051d20_crit_edge ]
  ret i32 %v0_8051d29

; uselistorder directives
  uselistorder i32 %v1_8051d24, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051d29, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051d20.dec_label_pc_8051d20_crit_edge, { 1, 0 }
}

define i32 @function_8051d30() local_unnamed_addr {
dec_label_pc_8051d30:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_8051d45 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_8051d45, label %dec_label_pc_8051d47, label %dec_label_pc_8051d50

dec_label_pc_8051d47:                             ; preds = %dec_label_pc_8051d62, %dec_label_pc_8051d30, %dec_label_pc_8051d50
  br label %dec_label_pc_8051d4a

dec_label_pc_8051d4a:                             ; preds = %dec_label_pc_8051d75, %dec_label_pc_8051d47
  %storemerge = phi i32 [ -1, %dec_label_pc_8051d47 ], [ %v0_8051d63, %dec_label_pc_8051d75 ]
  ret i32 %storemerge

dec_label_pc_8051d50:                             ; preds = %dec_label_pc_8051d30
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_8051d47, label %dec_label_pc_8051d54

dec_label_pc_8051d54:                             ; preds = %dec_label_pc_8051d50
  %v2_8051d6c = add i32 %tmp, -1
  br label %dec_label_pc_8051d68

dec_label_pc_8051d60:                             ; preds = %dec_label_pc_8051d68
  br label %dec_label_pc_8051d62

dec_label_pc_8051d62:                             ; preds = %dec_label_pc_8051d75, %dec_label_pc_8051d60
  %v2_8051d703 = phi i32 [ %v1_8051d75, %dec_label_pc_8051d75 ], [ 0, %dec_label_pc_8051d60 ]
  %v1_8051d62 = add i32 %v0_8051d62, 1
  %v1_8051d63 = add i32 %v0_8051d63, 1
  %v12_8051d64 = icmp eq i32 %tmp10, %v1_8051d62
  br i1 %v12_8051d64, label %dec_label_pc_8051d47, label %dec_label_pc_8051d68

dec_label_pc_8051d68:                             ; preds = %dec_label_pc_8051d62, %dec_label_pc_8051d54
  %v0_8051d62 = phi i32 [ %v1_8051d62, %dec_label_pc_8051d62 ], [ 0, %dec_label_pc_8051d54 ]
  %v0_8051d75 = phi i32 [ %v2_8051d703, %dec_label_pc_8051d62 ], [ 0, %dec_label_pc_8051d54 ]
  %v0_8051d63 = phi i32 [ %v1_8051d63, %dec_label_pc_8051d62 ], [ 1, %dec_label_pc_8051d54 ]
  %v3_8051d6c = add i32 %v2_8051d6c, %v0_8051d63
  %v4_8051d6c = inttoptr i32 %v3_8051d6c to i8*
  %v5_8051d6c = load i8, i8* %v4_8051d6c, align 1
  %v4_8051d70 = add i32 %v0_8051d75, %tmp8
  %v5_8051d70 = inttoptr i32 %v4_8051d70 to i8*
  %v6_8051d70 = load i8, i8* %v5_8051d70, align 1
  %v17_8051d70 = icmp eq i8 %v5_8051d6c, %v6_8051d70
  %v1_8051d73 = icmp eq i1 %v17_8051d70, false
  br i1 %v1_8051d73, label %dec_label_pc_8051d60, label %dec_label_pc_8051d75

dec_label_pc_8051d75:                             ; preds = %dec_label_pc_8051d68
  %v1_8051d75 = add i32 %v0_8051d75, 1
  %v12_8051d76 = icmp eq i32 %tmp9, %v1_8051d75
  %v1_8051d78 = icmp eq i1 %v12_8051d76, false
  br i1 %v1_8051d78, label %dec_label_pc_8051d62, label %dec_label_pc_8051d4a

; uselistorder directives
  uselistorder i32 %v0_8051d63, { 2, 0, 1 }
  uselistorder i32 %v0_8051d75, { 1, 0 }
  uselistorder i32 %v1_8051d62, { 1, 0 }
  uselistorder label %dec_label_pc_8051d47, { 0, 2, 1 }
}

define i32 @function_8051d80(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051d80:
  %v4_8051d87 = ptrtoint i8* %arg1 to i32
  %v4_8051d90.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051d90

dec_label_pc_8051d90:                             ; preds = %dec_label_pc_8051da4, %dec_label_pc_8051da0, %dec_label_pc_8051d90, %dec_label_pc_8051d80
  %v4_8051d90 = phi i32 [ %v4_8051d90.pre, %dec_label_pc_8051d80 ], [ %v6_8051d90, %dec_label_pc_8051d90 ], [ %v6_8051d90, %dec_label_pc_8051da0 ], [ %v6_8051d90, %dec_label_pc_8051da4 ]
  %v0_8051d92 = phi i32 [ %v4_8051d87, %dec_label_pc_8051d80 ], [ %v1_8051d92, %dec_label_pc_8051d90 ], [ %v1_8051d92, %dec_label_pc_8051da0 ], [ %v1_8051d92, %dec_label_pc_8051da4 ]
  %v1_8051d90 = inttoptr i32 %v0_8051d92 to i8*
  %v2_8051d90 = load i8, i8* %v1_8051d90, align 1
  %v3_8051d90 = zext i8 %v2_8051d90 to i32
  %v5_8051d90 = and i32 %v4_8051d90, -256
  %v6_8051d90 = or i32 %v3_8051d90, %v5_8051d90
  %v1_8051d92 = add i32 %v0_8051d92, 1
  %v7_8051d9c = icmp eq i8 %v2_8051d90, 32
  br i1 %v7_8051d9c, label %dec_label_pc_8051d90, label %dec_label_pc_8051da0

dec_label_pc_8051da0:                             ; preds = %dec_label_pc_8051d90
  %v10_8051da0 = icmp eq i8 %v2_8051d90, 9
  br i1 %v10_8051da0, label %dec_label_pc_8051d90, label %dec_label_pc_8051da4

dec_label_pc_8051da4:                             ; preds = %dec_label_pc_8051da0
  %v10_8051da4 = icmp eq i8 %v2_8051d90, 10
  br i1 %v10_8051da4, label %dec_label_pc_8051d90, label %dec_label_pc_8051da8

dec_label_pc_8051da8:                             ; preds = %dec_label_pc_8051da4
  %tmp41 = sext i32 %arg2 to i64
  %v10_8051da8 = icmp eq i8 %v2_8051d90, 45
  br i1 %v10_8051da8, label %dec_label_pc_8051e5d, label %dec_label_pc_8051db1

dec_label_pc_8051db1:                             ; preds = %dec_label_pc_8051da8
  %v10_8051db1 = icmp eq i8 %v2_8051d90, 43
  br i1 %v10_8051db1, label %dec_label_pc_8051e8d, label %dec_label_pc_8051dba

dec_label_pc_8051dba:                             ; preds = %dec_label_pc_8051db1, %dec_label_pc_8051e8d
  %v0_8051e0430 = phi i32 [ %v1_8051d92, %dec_label_pc_8051db1 ], [ %v1_8051e90, %dec_label_pc_8051e8d ]
  %v0_8051e3016.in = phi i8 [ %v2_8051d90, %dec_label_pc_8051db1 ], [ %v2_8051e8d, %dec_label_pc_8051e8d ]
  %v2_8051e0e9 = phi i8 [ %v2_8051d90, %dec_label_pc_8051db1 ], [ %v2_8051e8d, %dec_label_pc_8051e8d ]
  br label %dec_label_pc_8051dc7

dec_label_pc_8051dc7:                             ; preds = %dec_label_pc_8051e5d, %dec_label_pc_8051dba
  %v0_8051e0429 = phi i32 [ %v1_8051e65, %dec_label_pc_8051e5d ], [ %v0_8051e0430, %dec_label_pc_8051dba ]
  %v0_8051e3015.in = phi i8 [ %v2_8051e5d, %dec_label_pc_8051e5d ], [ %v0_8051e3016.in, %dec_label_pc_8051dba ]
  %v2_8051e0e8 = phi i8 [ %v2_8051e5d, %dec_label_pc_8051e5d ], [ %v2_8051e0e9, %dec_label_pc_8051dba ]
  %v0_8051dc7 = phi i64 [ 2147483648, %dec_label_pc_8051e5d ], [ 2147483647, %dec_label_pc_8051dba ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_8051e5d ], [ 0, %dec_label_pc_8051dba ]
  %v12_8051dcb = udiv i64 %v0_8051dc7, %tmp41
  %v13_8051dcb = trunc i64 %v12_8051dcb to i32
  %v14_8051dcb = urem i64 %v0_8051dc7, %tmp41
  %v15_8051dcb = trunc i64 %v14_8051dcb to i32
  br label %dec_label_pc_8051e0e

dec_label_pc_8051de0:                             ; preds = %dec_label_pc_8051e0e
  %v1_8051de0 = add nsw i32 %v0_8051de0, -48
  %v7_8051de7 = icmp slt i32 %v1_8051de0, %arg2
  br i1 %v7_8051de7, label %dec_label_pc_8051de9, label %dec_label_pc_8051e3a

dec_label_pc_8051de9:                             ; preds = %dec_label_pc_8051de0, %dec_label_pc_8051e30
  %v1_8051e01 = phi i32 [ %v1_8051de0, %dec_label_pc_8051de0 ], [ %v2_8051e32, %dec_label_pc_8051e30 ]
  %v2_8051de9 = icmp slt i32 %v0_8051de9, 0
  br i1 %v2_8051de9, label %dec_label_pc_8051e58, label %dec_label_pc_8051ded

dec_label_pc_8051ded:                             ; preds = %dec_label_pc_8051de9
  %tmp42 = icmp ugt i32 %v0_8051ded, %v13_8051dcb
  br i1 %tmp42, label %dec_label_pc_8051e58, label %dec_label_pc_8051df3

dec_label_pc_8051df3:                             ; preds = %dec_label_pc_8051ded
  %v15_8051ded = icmp eq i32 %v0_8051ded, %v13_8051dcb
  br i1 %v15_8051ded, label %dec_label_pc_8051e52, label %dec_label_pc_8051df5

dec_label_pc_8051df5:                             ; preds = %dec_label_pc_8051e52, %dec_label_pc_8051df3
  %v4_8051dfe = mul i32 %v1_8051dfe, %arg2
  %v2_8051e01 = add i32 %v1_8051e01, %v4_8051dfe
  br label %dec_label_pc_8051e04

dec_label_pc_8051e04:                             ; preds = %dec_label_pc_8051e58, %dec_label_pc_8051df5
  %v1_8051dfe26 = phi i32 [ %v1_8051dfe, %dec_label_pc_8051e58 ], [ %v2_8051e01, %dec_label_pc_8051df5 ]
  %v0_8051e4220 = phi i32 [ %v0_8051ded, %dec_label_pc_8051e58 ], [ %v2_8051e01, %dec_label_pc_8051df5 ]
  %v0_8051e3a19 = phi i32 [ -1, %dec_label_pc_8051e58 ], [ 1, %dec_label_pc_8051df5 ]
  %v1_8051e04 = inttoptr i32 %v0_8051e04 to i8*
  %v2_8051e04 = load i8, i8* %v1_8051e04, align 1
  %v1_8051e0a = add i32 %v0_8051e04, 1
  br label %dec_label_pc_8051e0e

dec_label_pc_8051e0e:                             ; preds = %dec_label_pc_8051dc7, %dec_label_pc_8051e04
  %v0_8051e04 = phi i32 [ %v0_8051e0429, %dec_label_pc_8051dc7 ], [ %v1_8051e0a, %dec_label_pc_8051e04 ]
  %v1_8051dfe = phi i32 [ 0, %dec_label_pc_8051dc7 ], [ %v1_8051dfe26, %dec_label_pc_8051e04 ]
  %v0_8051ded = phi i32 [ 0, %dec_label_pc_8051dc7 ], [ %v0_8051e4220, %dec_label_pc_8051e04 ]
  %v0_8051de9 = phi i32 [ 0, %dec_label_pc_8051dc7 ], [ %v0_8051e3a19, %dec_label_pc_8051e04 ]
  %v0_8051de0.in = phi i8 [ %v0_8051e3015.in, %dec_label_pc_8051dc7 ], [ %v2_8051e04, %dec_label_pc_8051e04 ]
  %v2_8051e0e = phi i8 [ %v2_8051e0e8, %dec_label_pc_8051dc7 ], [ %v2_8051e04, %dec_label_pc_8051e04 ]
  %v0_8051de0 = sext i8 %v0_8051de0.in to i32
  %v1_8051e11 = add i8 %v2_8051e0e, -48
  %tmp43 = icmp ult i8 %v1_8051e11, 10
  br i1 %tmp43, label %dec_label_pc_8051de0, label %dec_label_pc_8051e18

dec_label_pc_8051e18:                             ; preds = %dec_label_pc_8051e0e
  %v1_8051e18 = add i8 %v2_8051e0e, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_8051e18, 26
  br i1 %tmp44, label %dec_label_pc_8051e30, label %dec_label_pc_8051e24

dec_label_pc_8051e24:                             ; preds = %dec_label_pc_8051e18
  %v1_8051e24 = add i8 %v2_8051e0e, -97
  %tmp45 = icmp ult i8 %v1_8051e24, 26
  br i1 %tmp45, label %dec_label_pc_8051e2b, label %dec_label_pc_8051e3a

dec_label_pc_8051e2b:                             ; preds = %dec_label_pc_8051e24
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8051e30

dec_label_pc_8051e30:                             ; preds = %dec_label_pc_8051e18, %dec_label_pc_8051e2b
  %v1_8051e32 = phi i32 [ 55, %dec_label_pc_8051e18 ], [ 87, %dec_label_pc_8051e2b ]
  %v2_8051e32 = sub nsw i32 %v0_8051de0, %v1_8051e32
  %v7_8051e38 = icmp slt i32 %v2_8051e32, %arg2
  br i1 %v7_8051e38, label %dec_label_pc_8051de9, label %dec_label_pc_8051e3a

dec_label_pc_8051e3a:                             ; preds = %dec_label_pc_8051de0, %dec_label_pc_8051e24, %dec_label_pc_8051e30
  %v2_8051e3a = icmp slt i32 %v0_8051de9, 0
  br i1 %v2_8051e3a, label %dec_label_pc_8051e79, label %dec_label_pc_8051e3e

dec_label_pc_8051e3e:                             ; preds = %dec_label_pc_8051e3a
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_8051e44 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_8051e44, label %dec_label_pc_8051e4a, label %dec_label_pc_8051e48

dec_label_pc_8051e48:                             ; preds = %dec_label_pc_8051e3e
  %v1_8051e48 = sub i32 0, %v0_8051ded
  br label %dec_label_pc_8051e4a

dec_label_pc_8051e4a:                             ; preds = %dec_label_pc_8051e3e, %dec_label_pc_8051e48
  %v0_8051e51 = phi i32 [ %v0_8051ded, %dec_label_pc_8051e3e ], [ %v1_8051e48, %dec_label_pc_8051e48 ]
  ret i32 %v0_8051e51

dec_label_pc_8051e52:                             ; preds = %dec_label_pc_8051df3
  %v5_8051e52 = sub i32 %v1_8051e01, %v15_8051dcb
  %v11_8051e52 = xor i32 %v1_8051e01, %v15_8051dcb
  %v12_8051e52 = xor i32 %v5_8051e52, %v1_8051e01
  %v13_8051e52 = and i32 %v12_8051e52, %v11_8051e52
  %v14_8051e52 = icmp slt i32 %v13_8051e52, 0
  %v15_8051e52 = icmp eq i32 %v5_8051e52, 0
  %v16_8051e52 = icmp slt i32 %v5_8051e52, 0
  %v3_8051e56 = icmp ne i1 %v16_8051e52, %v14_8051e52
  %v4_8051e56 = or i1 %v15_8051e52, %v3_8051e56
  br i1 %v4_8051e56, label %dec_label_pc_8051df5, label %dec_label_pc_8051e58

dec_label_pc_8051e58:                             ; preds = %dec_label_pc_8051ded, %dec_label_pc_8051e52, %dec_label_pc_8051de9
  br label %dec_label_pc_8051e04

dec_label_pc_8051e5d:                             ; preds = %dec_label_pc_8051da8
  %v1_8051e5d = inttoptr i32 %v1_8051d92 to i8*
  %v2_8051e5d = load i8, i8* %v1_8051e5d, align 1
  %v1_8051e65 = add i32 %v0_8051d92, 2
  br label %dec_label_pc_8051dc7

dec_label_pc_8051e79:                             ; preds = %dec_label_pc_8051e3a
  %v8_8051e79 = icmp eq i32 %stack_var_-20.0, 0
  %v2_8051e7e = zext i1 %v8_8051e79 to i32
  %v1_8051e833 = or i32 %v2_8051e7e, -2147483648
  ret i32 %v1_8051e833

dec_label_pc_8051e8d:                             ; preds = %dec_label_pc_8051db1
  %v1_8051e8d = inttoptr i32 %v1_8051d92 to i8*
  %v2_8051e8d = load i8, i8* %v1_8051e8d, align 1
  %v1_8051e90 = add i32 %v0_8051d92, 2
  br label %dec_label_pc_8051dba

; uselistorder directives
  uselistorder i32 %v5_8051e52, { 1, 2, 0 }
  uselistorder i32 %v2_8051e32, { 1, 0 }
  uselistorder i8 %v2_8051e04, { 1, 0 }
  uselistorder i32 %v2_8051e01, { 1, 0 }
  uselistorder i32 %v1_8051e01, { 0, 1, 3, 2 }
  uselistorder i32 %v13_8051dcb, { 1, 0 }
  uselistorder i32 %v1_8051d92, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8051d90, { 2, 1, 0 }
  uselistorder i8 %v2_8051d90, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8051d92, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 4, 2, 3, 5, 10, 7, 8, 11, 9, 6 }
  uselistorder i8 32, { 1, 2, 3, 6, 7, 4, 8, 9, 10, 0, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051e58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051e4a, { 1, 0 }
  uselistorder label %dec_label_pc_8051e3a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051e30, { 1, 0 }
  uselistorder label %dec_label_pc_8051e0e, { 1, 0 }
  uselistorder label %dec_label_pc_8051de9, { 1, 0 }
  uselistorder label %dec_label_pc_8051dba, { 1, 0 }
}

define i32 @function_8051ef0() local_unnamed_addr {
dec_label_pc_8051ef0:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_8051efd = call i32 @function_80526fd(i32 16)
  %v1_8051f02 = inttoptr i32 %v1_8051efd to i32*
  store i32 0, i32* %v1_8051f02, align 4
  %v4_8051f0f = call i32 @function_80529d4(i32 2, i32 2, i32 0, i32 %v1_8051efd)
  store i32 %v4_8051f0f, i32* %esi.global-to-local, align 4
  %v10_8051f1b = icmp eq i32 %v4_8051f0f, -1
  br i1 %v10_8051f1b, label %dec_label_pc_8051f62, label %dec_label_pc_8051f20

dec_label_pc_8051f20:                             ; preds = %dec_label_pc_8051ef0
  %v2_8051f20 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8051f20, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8051f3f = call i32 @function_80527f9(i32 %v4_8051f0f, i32 %v2_8051f20, i32 16)
  %v2_8051f47 = ptrtoint i32* %stack_var_-12 to i32
  %v0_8051f4d = load i32, i32* %esi.global-to-local, align 4
  %v3_8051f4e = call i32 @function_8052824(i32 %v0_8051f4d, i32 %v2_8051f20, i32 %v2_8051f47)
  %v1_8051f56 = call i32 @function_80521f3(i32 %v0_8051f4d)
  br label %dec_label_pc_8051f62

dec_label_pc_8051f62:                             ; preds = %dec_label_pc_8051ef0, %dec_label_pc_8051f20
  %v0_8051f67 = phi i32 [ 0, %dec_label_pc_8051ef0 ], [ 134744072, %dec_label_pc_8051f20 ]
  ret i32 %v0_8051f67

; uselistorder directives
  uselistorder i32 %v4_8051f0f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80527f9, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_80529d4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8051f62, { 1, 0 }
}

define i32 @function_8051f70() local_unnamed_addr {
dec_label_pc_8051f70:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i8* @__decompiler_undefined_function_2()
  %v4_8051f77 = ptrtoint i8* %tmp18 to i32
  %v2_8051f82 = load i8, i8* %tmp18, align 1
  %v3_8051f82 = icmp eq i8 %v2_8051f82, 0
  br i1 %v3_8051f82, label %dec_label_pc_8051f98, label %dec_label_pc_8051f88

dec_label_pc_8051f88:                             ; preds = %dec_label_pc_8051f70, %dec_label_pc_8051f88
  %v2_8051f88 = phi i32 [ %v1_8051f8b, %dec_label_pc_8051f88 ], [ 0, %dec_label_pc_8051f70 ]
  %v1_8051f8b = add i32 %v2_8051f88, 1
  %v2_8051f92 = add i32 %v1_8051f8b, %v4_8051f77
  %v3_8051f92 = inttoptr i32 %v2_8051f92 to i8*
  %v4_8051f92 = load i8, i8* %v3_8051f92, align 1
  %v5_8051f92 = icmp eq i8 %v4_8051f92, 0
  %v1_8051f96 = icmp eq i1 %v5_8051f92, false
  br i1 %v1_8051f96, label %dec_label_pc_8051f88, label %dec_label_pc_8051f98

dec_label_pc_8051f98:                             ; preds = %dec_label_pc_8051f88, %dec_label_pc_8051f70
  %v2_8051fcf = phi i32 [ 0, %dec_label_pc_8051f70 ], [ %v1_8051f8b, %dec_label_pc_8051f88 ]
  %v4_8051f9e = ptrtoint i8* %tmp to i32
  %tmp25 = icmp slt i32 %tmp17, 1
  br i1 %tmp25, label %dec_label_pc_8051fcc, label %dec_label_pc_8051fa6.preheader

dec_label_pc_8051fa6.preheader:                   ; preds = %dec_label_pc_8051f98
  %v4_8051fa6.pre = load i32, i32* @ecx, align 4
  %v6_8051fa8.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051fa6

dec_label_pc_8051fa6:                             ; preds = %dec_label_pc_8051fa6.preheader, %dec_label_pc_8051fc7
  %v0_8051fc7 = phi i32 [ %tmp17, %dec_label_pc_8051fa6.preheader ], [ %v1_8051fc7, %dec_label_pc_8051fc7 ]
  %v6_8051fa8 = phi i32 [ %v6_8051fa8.pre, %dec_label_pc_8051fa6.preheader ], [ %v2_8051fc1, %dec_label_pc_8051fc7 ]
  %v0_8051fd5 = phi i32 [ 0, %dec_label_pc_8051fa6.preheader ], [ %v1_8051fa89, %dec_label_pc_8051fc7 ]
  %v4_8051fa6 = phi i32 [ %v4_8051fa6.pre, %dec_label_pc_8051fa6.preheader ], [ %v0_8051fc1, %dec_label_pc_8051fc7 ]
  %v0_8051fac = phi i32 [ %v4_8051f9e, %dec_label_pc_8051fa6.preheader ], [ %v1_8051fac, %dec_label_pc_8051fc7 ]
  %v1_8051fa6 = inttoptr i32 %v0_8051fac to i8*
  %v2_8051fa6 = load i8, i8* %v1_8051fa6, align 1
  %v3_8051fa6 = zext i8 %v2_8051fa6 to i32
  %v5_8051fa6 = and i32 %v4_8051fa6, -256
  %v6_8051fa6 = or i32 %v3_8051fa6, %v5_8051fa6
  store i32 %v6_8051fa6, i32* @ecx, align 4
  %v2_8051fa8 = add i32 %v0_8051fd5, %v4_8051f77
  %v3_8051fa8 = inttoptr i32 %v2_8051fa8 to i8*
  %v4_8051fa8 = load i8, i8* %v3_8051fa8, align 1
  %v5_8051fa8 = zext i8 %v4_8051fa8 to i32
  %v7_8051fa8 = and i32 %v6_8051fa8, -256
  %v8_8051fa8 = or i32 %v5_8051fa8, %v7_8051fa8
  %v1_8051fac = add i32 %v0_8051fac, 1
  %v1_8051fad = add i8 %v2_8051fa6, -65
  %v8_8051fb2 = icmp ugt i8 %v1_8051fad, 25
  br i1 %v8_8051fb2, label %dec_label_pc_8051fb7, label %dec_label_pc_8051fb4

dec_label_pc_8051fb4:                             ; preds = %dec_label_pc_8051fa6
  %v1_8051fb4 = or i32 %v6_8051fa6, 96
  store i32 %v1_8051fb4, i32* @ecx, align 4
  br label %dec_label_pc_8051fb7

dec_label_pc_8051fb7:                             ; preds = %dec_label_pc_8051fa6, %dec_label_pc_8051fb4
  %v0_8051fc1 = phi i32 [ %v6_8051fa6, %dec_label_pc_8051fa6 ], [ %v1_8051fb4, %dec_label_pc_8051fb4 ]
  %v1_8051fb7 = add i8 %v4_8051fa8, -65
  %v8_8051fbc = icmp ugt i8 %v1_8051fb7, 25
  br i1 %v8_8051fbc, label %dec_label_pc_8051fc1, label %dec_label_pc_8051fbe

dec_label_pc_8051fbe:                             ; preds = %dec_label_pc_8051fb7
  %v1_8051fbe = or i32 %v8_8051fa8, 96
  br label %dec_label_pc_8051fc1

dec_label_pc_8051fc1:                             ; preds = %dec_label_pc_8051fb7, %dec_label_pc_8051fbe
  %v2_8051fc1 = phi i32 [ %v8_8051fa8, %dec_label_pc_8051fb7 ], [ %v1_8051fbe, %dec_label_pc_8051fbe ]
  %v1_8051fc1 = trunc i32 %v0_8051fc1 to i8
  %v3_8051fc1 = trunc i32 %v2_8051fc1 to i8
  %v15_8051fc1 = icmp eq i8 %v1_8051fc1, %v3_8051fc1
  br i1 %v15_8051fc1, label %dec_label_pc_8051fd5, label %dec_label_pc_8051fc5

dec_label_pc_8051fc5:                             ; preds = %dec_label_pc_8051fc1
  br label %dec_label_pc_8051fc7

dec_label_pc_8051fc7:                             ; preds = %dec_label_pc_8051fd5, %dec_label_pc_8051fc5
  %v1_8051fa89 = phi i32 [ %v1_8051fd5, %dec_label_pc_8051fd5 ], [ 0, %dec_label_pc_8051fc5 ]
  %v1_8051fc7 = add i32 %v0_8051fc7, -1
  %tmp26 = icmp slt i32 %v1_8051fc7, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8051fa6, label %dec_label_pc_8051fcc

dec_label_pc_8051fcc:                             ; preds = %dec_label_pc_8051fc7, %dec_label_pc_8051f98
  ret i32 -1

dec_label_pc_8051fd5:                             ; preds = %dec_label_pc_8051fc1
  %v1_8051fd5 = add i32 %v0_8051fd5, 1
  %v14_8051fd6 = icmp eq i32 %v2_8051fcf, %v1_8051fd5
  %v1_8051fd9 = icmp eq i1 %v14_8051fd6, false
  br i1 %v1_8051fd9, label %dec_label_pc_8051fc7, label %dec_label_pc_8051fdb

dec_label_pc_8051fdb:                             ; preds = %dec_label_pc_8051fd5
  store i32 %v4_8051f9e, i32* @ecx, align 4
  %v2_8051fe1 = sub i32 %v1_8051fac, %v4_8051f9e
  ret i32 %v2_8051fe1

; uselistorder directives
  uselistorder i32 %v1_8051fc7, { 1, 0 }
  uselistorder i32 %v0_8051fd5, { 1, 0 }
  uselistorder i32 %v4_8051f9e, { 2, 1, 0 }
  uselistorder i8* %tmp18, { 1, 0 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051fc1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fb7, { 1, 0 }
  uselistorder label %dec_label_pc_8051fa6, { 1, 0 }
  uselistorder label %dec_label_pc_8051f88, { 1, 0 }
}

define i32 @function_8051ff0() local_unnamed_addr {
dec_label_pc_8051ff0:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8051ff2 = ptrtoint i8* %tmp13 to i32
  %v4_8051ff8 = ptrtoint i8* %tmp to i32
  %v2_8051ffc = load i8, i8* %tmp13, align 1
  %v3_8051ffc = icmp eq i8 %v2_8051ffc, 0
  br i1 %v3_8051ffc, label %dec_label_pc_8052008, label %dec_label_pc_8052001

dec_label_pc_8052001:                             ; preds = %dec_label_pc_8051ff0, %dec_label_pc_8052001
  %v0_8052001 = phi i32 [ %v1_8052001, %dec_label_pc_8052001 ], [ 0, %dec_label_pc_8051ff0 ]
  %v1_8052001 = add i32 %v0_8052001, 1
  %v2_8052002 = add i32 %v1_8052001, %v4_8051ff2
  %v3_8052002 = inttoptr i32 %v2_8052002 to i8*
  %v4_8052002 = load i8, i8* %v3_8052002, align 1
  %v5_8052002 = icmp eq i8 %v4_8052002, 0
  %v1_8052006 = icmp eq i1 %v5_8052002, false
  br i1 %v1_8052006, label %dec_label_pc_8052001, label %dec_label_pc_8052008

dec_label_pc_8052008:                             ; preds = %dec_label_pc_8052001, %dec_label_pc_8051ff0
  %v0_8052019 = phi i32 [ 0, %dec_label_pc_8051ff0 ], [ %v1_8052001, %dec_label_pc_8052001 ]
  %v2_805200a = load i8, i8* %tmp, align 1
  %v3_805200a = icmp eq i8 %v2_805200a, 0
  br i1 %v3_805200a, label %dec_label_pc_8052017, label %dec_label_pc_8052010

dec_label_pc_8052010:                             ; preds = %dec_label_pc_8052008, %dec_label_pc_8052010
  %v0_8052010 = phi i32 [ %v1_8052010, %dec_label_pc_8052010 ], [ 0, %dec_label_pc_8052008 ]
  %v1_8052010 = add i32 %v0_8052010, 1
  %v2_8052011 = add i32 %v1_8052010, %v4_8051ff8
  %v3_8052011 = inttoptr i32 %v2_8052011 to i8*
  %v4_8052011 = load i8, i8* %v3_8052011, align 1
  %v5_8052011 = icmp eq i8 %v4_8052011, 0
  %v1_8052015 = icmp eq i1 %v5_8052011, false
  br i1 %v1_8052015, label %dec_label_pc_8052010, label %dec_label_pc_8052017

dec_label_pc_8052017:                             ; preds = %dec_label_pc_8052010, %dec_label_pc_8052008
  %v0_8052017 = phi i32 [ 0, %dec_label_pc_8052008 ], [ %v1_8052010, %dec_label_pc_8052010 ]
  %v12_8052019 = icmp eq i32 %v0_8052019, %v0_8052017
  br i1 %v12_8052019, label %dec_label_pc_8052024.preheader, label %dec_label_pc_805201d

dec_label_pc_8052024.preheader:                   ; preds = %dec_label_pc_8052017
  %v10_805202518 = icmp eq i32 %v0_8052019, 0
  br i1 %v10_805202518, label %dec_label_pc_8052032, label %dec_label_pc_805202a

dec_label_pc_805201d:                             ; preds = %dec_label_pc_805202a, %dec_label_pc_8052017
  ret i32 0

dec_label_pc_8052022:                             ; preds = %dec_label_pc_805202a
  %v3_805202a = zext i8 %v2_805202a to i32
  %v5_805202a = and i32 %v4_805202a20, -256
  %v6_805202a = or i32 %v3_805202a, %v5_805202a
  %v1_8052022 = add i32 %v0_805202221, 1
  %v1_8052023 = add i32 %v0_805202319, 1
  %v10_8052025 = icmp eq i32 %v1_805202422, 0
  br i1 %v10_8052025, label %dec_label_pc_8052032, label %dec_label_pc_805202a

dec_label_pc_805202a:                             ; preds = %dec_label_pc_8052024.preheader, %dec_label_pc_8052022
  %v1_805202422.in = phi i32 [ %v1_805202422, %dec_label_pc_8052022 ], [ %v0_8052019, %dec_label_pc_8052024.preheader ]
  %v4_805202a20 = phi i32 [ %v6_805202a, %dec_label_pc_8052022 ], [ %v0_8052019, %dec_label_pc_8052024.preheader ]
  %v0_805202221 = phi i32 [ %v1_8052022, %dec_label_pc_8052022 ], [ %v4_8051ff2, %dec_label_pc_8052024.preheader ]
  %v0_805202319 = phi i32 [ %v1_8052023, %dec_label_pc_8052022 ], [ %v4_8051ff8, %dec_label_pc_8052024.preheader ]
  %v1_805202422 = add i32 %v1_805202422.in, -1
  %v1_805202a = inttoptr i32 %v0_805202221 to i8*
  %v2_805202a = load i8, i8* %v1_805202a, align 1
  %v3_805202c = inttoptr i32 %v0_805202319 to i8*
  %v4_805202c = load i8, i8* %v3_805202c, align 1
  %v15_805202c = icmp eq i8 %v2_805202a, %v4_805202c
  br i1 %v15_805202c, label %dec_label_pc_8052022, label %dec_label_pc_805201d

dec_label_pc_8052032:                             ; preds = %dec_label_pc_8052022, %dec_label_pc_8052024.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v0_8052019, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805202a, { 1, 0 }
  uselistorder label %dec_label_pc_8052010, { 1, 0 }
  uselistorder label %dec_label_pc_8052001, { 1, 0 }
}

define i32 @function_8052040() local_unnamed_addr {
dec_label_pc_8052040:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_8052042 = ptrtoint i8* %tmp14 to i32
  %v4_8052048 = ptrtoint i8* %tmp13 to i32
  %v2_8052050 = load i8, i8* %tmp14, align 1
  %v3_8052050 = icmp eq i8 %v2_8052050, 0
  br i1 %v3_8052050, label %dec_label_pc_805205c, label %dec_label_pc_8052055

dec_label_pc_8052055:                             ; preds = %dec_label_pc_8052040, %dec_label_pc_8052055
  %v0_8052055 = phi i32 [ %v1_8052055, %dec_label_pc_8052055 ], [ 0, %dec_label_pc_8052040 ]
  %v1_8052055 = add i32 %v0_8052055, 1
  %v2_8052056 = add i32 %v1_8052055, %v4_8052042
  %v3_8052056 = inttoptr i32 %v2_8052056 to i8*
  %v4_8052056 = load i8, i8* %v3_8052056, align 1
  %v5_8052056 = icmp eq i8 %v4_8052056, 0
  %v1_805205a = icmp eq i1 %v5_8052056, false
  br i1 %v1_805205a, label %dec_label_pc_8052055, label %dec_label_pc_805205c

dec_label_pc_805205c:                             ; preds = %dec_label_pc_8052055, %dec_label_pc_8052040
  %v1_805206a = phi i32 [ 0, %dec_label_pc_8052040 ], [ %v1_8052055, %dec_label_pc_8052055 ]
  %v2_805205e = load i8, i8* %tmp13, align 1
  %v3_805205e = icmp eq i8 %v2_805205e, 0
  br i1 %v3_805205e, label %dec_label_pc_805206a, label %dec_label_pc_8052063

dec_label_pc_8052063:                             ; preds = %dec_label_pc_805205c, %dec_label_pc_8052063
  %v0_8052063 = phi i32 [ %v1_8052063, %dec_label_pc_8052063 ], [ 0, %dec_label_pc_805205c ]
  %v1_8052063 = add i32 %v0_8052063, 1
  %v2_8052064 = add i32 %v1_8052063, %v4_8052048
  %v3_8052064 = inttoptr i32 %v2_8052064 to i8*
  %v4_8052064 = load i8, i8* %v3_8052064, align 1
  %v5_8052064 = icmp eq i8 %v4_8052064, 0
  %v1_8052068 = icmp eq i1 %v5_8052064, false
  br i1 %v1_8052068, label %dec_label_pc_8052063, label %dec_label_pc_805206a

dec_label_pc_805206a:                             ; preds = %dec_label_pc_8052063, %dec_label_pc_805205c
  %v1_805206e = phi i32 [ 0, %dec_label_pc_805205c ], [ %v1_8052063, %dec_label_pc_8052063 ]
  %v8_805206c = icmp sgt i32 %tmp, %v1_805206a
  br i1 %v8_805206c, label %dec_label_pc_8052072, label %dec_label_pc_805206e

dec_label_pc_805206e:                             ; preds = %dec_label_pc_805206a
  %v7_8052070 = icmp sgt i32 %tmp, %v1_805206e
  br i1 %v7_8052070, label %dec_label_pc_8052072, label %dec_label_pc_8052079.preheader

dec_label_pc_8052079.preheader:                   ; preds = %dec_label_pc_805206e
  %v10_805207a19 = icmp eq i32 %tmp, 0
  br i1 %v10_805207a19, label %dec_label_pc_8052074, label %dec_label_pc_805207f

dec_label_pc_8052072:                             ; preds = %dec_label_pc_805207f, %dec_label_pc_805206e, %dec_label_pc_805206a
  br label %dec_label_pc_8052074

dec_label_pc_8052074:                             ; preds = %dec_label_pc_8052079.preheader, %dec_label_pc_8052077, %dec_label_pc_8052072
  %storemerge = phi i32 [ 0, %dec_label_pc_8052072 ], [ 1, %dec_label_pc_8052077 ], [ 1, %dec_label_pc_8052079.preheader ]
  ret i32 %storemerge

dec_label_pc_8052077:                             ; preds = %dec_label_pc_805207f
  %v3_805207f = zext i8 %v2_805207f to i32
  %v5_805207f = and i32 %v4_805207f21, -256
  %v6_805207f = or i32 %v3_805207f, %v5_805207f
  %v1_8052077 = add i32 %v0_805207722, 1
  %v1_8052078 = add i32 %v0_805207820, 1
  %v10_805207a = icmp eq i32 %v1_805207923, 0
  br i1 %v10_805207a, label %dec_label_pc_8052074, label %dec_label_pc_805207f

dec_label_pc_805207f:                             ; preds = %dec_label_pc_8052079.preheader, %dec_label_pc_8052077
  %v1_805207923.in = phi i32 [ %v1_805207923, %dec_label_pc_8052077 ], [ %tmp, %dec_label_pc_8052079.preheader ]
  %v0_805207722 = phi i32 [ %v1_8052077, %dec_label_pc_8052077 ], [ %v4_8052042, %dec_label_pc_8052079.preheader ]
  %v4_805207f21 = phi i32 [ %v6_805207f, %dec_label_pc_8052077 ], [ %v1_805206e, %dec_label_pc_8052079.preheader ]
  %v0_805207820 = phi i32 [ %v1_8052078, %dec_label_pc_8052077 ], [ %v4_8052048, %dec_label_pc_8052079.preheader ]
  %v1_805207923 = add i32 %v1_805207923.in, -1
  %v1_805207f = inttoptr i32 %v0_805207722 to i8*
  %v2_805207f = load i8, i8* %v1_805207f, align 1
  %v3_8052081 = inttoptr i32 %v0_805207820 to i8*
  %v4_8052081 = load i8, i8* %v3_8052081, align 1
  %v15_8052081 = icmp eq i8 %v2_805207f, %v4_8052081
  br i1 %v15_8052081, label %dec_label_pc_8052077, label %dec_label_pc_8052072

; uselistorder directives
  uselistorder label %dec_label_pc_805207f, { 1, 0 }
  uselistorder label %dec_label_pc_8052074, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052063, { 1, 0 }
  uselistorder label %dec_label_pc_8052055, { 1, 0 }
}

define i32 @function_8052090() local_unnamed_addr {
dec_label_pc_8052090:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp20 = call i64 @__decompiler_undefined_function_5()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v12_8052094 = ptrtoint i32* %stack_var_-64 to i32
  %v4_8052097 = inttoptr i32 %tmp22 to i8*
  store i32 %tmp21, i32* %eax.global-to-local, align 4
  %v4_805209f = trunc i64 %tmp20 to i32
  store i32 %v4_805209f, i32* %esi.global-to-local, align 4
  %v2_80520a3 = icmp eq i32 %tmp22, 0
  br i1 %v2_80520a3, label %dec_label_pc_8052110, label %dec_label_pc_80520a7

dec_label_pc_80520a7:                             ; preds = %dec_label_pc_8052090
  %v1_80520a7 = icmp eq i32 %tmp21, 0
  %v2_80520a7 = icmp slt i32 %tmp21, 0
  br i1 %v1_80520a7, label %dec_label_pc_8052120, label %dec_label_pc_80520ab

dec_label_pc_80520ab:                             ; preds = %dec_label_pc_80520a7
  %v9_80520b0 = icmp eq i32 %v4_805209f, 10
  br i1 %v9_80520b0, label %dec_label_pc_805213d, label %dec_label_pc_80520b9

dec_label_pc_80520b9:                             ; preds = %dec_label_pc_805213d, %dec_label_pc_80520ab
  br label %dec_label_pc_80520bd

dec_label_pc_80520bd:                             ; preds = %dec_label_pc_8052145, %dec_label_pc_80520b9
  %storemerge32 = phi i32 [ %tmp21, %dec_label_pc_80520b9 ], [ %v1_8052147, %dec_label_pc_8052145 ]
  %v0_80520c43 = phi i32 [ %tmp21, %dec_label_pc_80520b9 ], [ %v1_8052147, %dec_label_pc_8052145 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_80520b9 ], [ 1, %dec_label_pc_8052145 ]
  store i32 %storemerge32, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520c2

dec_label_pc_80520c2:                             ; preds = %dec_label_pc_80520c2.dec_label_pc_80520c2_crit_edge, %dec_label_pc_80520bd
  %v2_80520d3 = phi i32 [ %v2_80520d3.pre, %dec_label_pc_80520c2.dec_label_pc_80520c2_crit_edge ], [ %v12_8052094, %dec_label_pc_80520bd ]
  %v3_80520d3 = phi i32 [ %v1_80520db, %dec_label_pc_80520c2.dec_label_pc_80520c2_crit_edge ], [ 32, %dec_label_pc_80520bd ]
  %v0_80520c6 = phi i32 [ %v0_80520dc, %dec_label_pc_80520c2.dec_label_pc_80520c2_crit_edge ], [ %v4_805209f, %dec_label_pc_80520bd ]
  %v0_80520c4 = phi i32 [ %div18, %dec_label_pc_80520c2.dec_label_pc_80520c2_crit_edge ], [ %v0_80520c43, %dec_label_pc_80520bd ]
  %tmp29 = urem i32 %v0_80520c4, %v0_80520c6
  %v7_80520ce = icmp sgt i32 %tmp29, 9
  %v1_80520d0.v1_80520cb.v = select i1 %v7_80520ce, i32 55, i32 48
  %v1_80520d0.v1_80520cb = add i32 %v1_80520d0.v1_80520cb.v, %tmp29
  %v1_80520d3 = trunc i32 %v1_80520d0.v1_80520cb to i8
  %v4_80520d3 = add i32 %v3_80520d3, 14
  %v5_80520d3 = add i32 %v4_80520d3, %v2_80520d3
  %v6_80520d3 = inttoptr i32 %v5_80520d3 to i8*
  store i8 %v1_80520d3, i8* %v6_80520d3, align 1
  %v0_80520d9 = load i32, i32* %ecx.global-to-local, align 4
  %v0_80520db = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520db = add i32 %v0_80520db, -1
  store i32 %v1_80520db, i32* %ebx.global-to-local, align 4
  %v0_80520dc = load i32, i32* %esi.global-to-local, align 4
  %div18 = udiv i32 %v0_80520d9, %v0_80520dc
  store i32 %div18, i32* %eax.global-to-local, align 4
  %tmp30 = urem i32 %v0_80520d9, %v0_80520dc
  store i32 %tmp30, i32* %edx.global-to-local, align 4
  store i32 %div18, i32* %ecx.global-to-local, align 4
  %v2_80520e0 = icmp ugt i32 %v0_80520dc, %v0_80520d9
  %v1_80520e2 = icmp eq i1 %v2_80520e0, false
  br i1 %v1_80520e2, label %dec_label_pc_80520c2.dec_label_pc_80520c2_crit_edge, label %dec_label_pc_80520e4

dec_label_pc_80520c2.dec_label_pc_80520c2_crit_edge: ; preds = %dec_label_pc_80520c2
  %v2_80520d3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80520c2

dec_label_pc_80520e4:                             ; preds = %dec_label_pc_80520c2
  %v0_80520e4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80520e4 = icmp eq i32 %v0_80520e4, 0
  %v1_80520e6 = icmp eq i1 %v1_80520e4, false
  br i1 %v1_80520e6, label %dec_label_pc_8052136, label %dec_label_pc_80520e8

dec_label_pc_80520e8:                             ; preds = %dec_label_pc_80520e4
  store i32 %v0_80520db, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520e9

dec_label_pc_80520e9:                             ; preds = %dec_label_pc_8052136, %dec_label_pc_80520e8
  %v1_80520e9 = phi i32 [ %v1_80520e9.pre, %dec_label_pc_8052136 ], [ %v0_80520db, %dec_label_pc_80520e8 ]
  %v0_80520e9 = load i32, i32* @esp, align 4
  %v2_80520e9 = add i32 %v1_80520e9, 14
  %v3_80520e9 = add i32 %v2_80520e9, %v0_80520e9
  store i32 %v3_80520e9, i32* %eax.global-to-local, align 4
  %v1_80520ed = inttoptr i32 %v3_80520e9 to i8*
  %v2_80520ed = load i8, i8* %v1_80520ed, align 1
  %v3_80520ed = icmp eq i8 %v2_80520ed, 0
  br i1 %v3_80520ed, label %dec_label_pc_8052155, label %dec_label_pc_80520f2

dec_label_pc_80520f2:                             ; preds = %dec_label_pc_80520e9
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80520f4

dec_label_pc_80520f4:                             ; preds = %dec_label_pc_80520f4, %dec_label_pc_80520f2
  %v0_80520f4 = phi i32 [ %v1_80520f4, %dec_label_pc_80520f4 ], [ 0, %dec_label_pc_80520f2 ]
  %v1_80520f4 = add i32 %v0_80520f4, 1
  store i32 %v1_80520f4, i32* %ecx.global-to-local, align 4
  %v2_80520f5 = add i32 %v1_80520f4, %v3_80520e9
  %v3_80520f5 = inttoptr i32 %v2_80520f5 to i8*
  %v4_80520f5 = load i8, i8* %v3_80520f5, align 1
  %v5_80520f5 = icmp eq i8 %v4_80520f5, 0
  %v1_80520f9 = icmp eq i1 %v5_80520f5, false
  br i1 %v1_80520f9, label %dec_label_pc_80520f4, label %dec_label_pc_80520fb

dec_label_pc_80520fb:                             ; preds = %dec_label_pc_80520f4
  %v10_80520fb = icmp eq i32 %v0_80520f4, -2
  br i1 %v10_80520fb, label %dec_label_pc_8052110, label %dec_label_pc_8052100

dec_label_pc_8052100:                             ; preds = %dec_label_pc_80520fb
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_80520e9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052104

dec_label_pc_8052104:                             ; preds = %dec_label_pc_8052155, %dec_label_pc_8052100, %dec_label_pc_8052104.dec_label_pc_8052104_crit_edge
  %v2_8052107 = phi i32 [ %v1_805210a, %dec_label_pc_8052104.dec_label_pc_8052104_crit_edge ], [ %tmp22, %dec_label_pc_8052100 ], [ %tmp22, %dec_label_pc_8052155 ]
  %v0_8052106 = phi i32 [ %v0_805210b, %dec_label_pc_8052104.dec_label_pc_8052104_crit_edge ], [ %v1_80520f4, %dec_label_pc_8052100 ], [ 0, %dec_label_pc_8052155 ]
  %v4_8052104 = phi i32 [ %v4_8052104.pre, %dec_label_pc_8052104.dec_label_pc_8052104_crit_edge ], [ %v3_80520e9, %dec_label_pc_8052100 ], [ %v3_80520e9, %dec_label_pc_8052155 ]
  %v0_8052104 = phi i32 [ %v1_8052109, %dec_label_pc_8052104.dec_label_pc_8052104_crit_edge ], [ %v3_80520e9, %dec_label_pc_8052100 ], [ %v3_80520e9, %dec_label_pc_8052155 ]
  %v1_8052104 = inttoptr i32 %v0_8052104 to i8*
  %v2_8052104 = load i8, i8* %v1_8052104, align 1
  %v3_8052104 = zext i8 %v2_8052104 to i32
  %v5_8052104 = and i32 %v4_8052104, -256
  %v6_8052104 = or i32 %v3_8052104, %v5_8052104
  store i32 %v6_8052104, i32* %eax.global-to-local, align 4
  %v1_8052106 = add i32 %v0_8052106, -1
  store i32 %v1_8052106, i32* %ecx.global-to-local, align 4
  %v3_8052107 = inttoptr i32 %v2_8052107 to i8*
  store i8 %v2_8052104, i8* %v3_8052107, align 1
  %v0_8052109 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052109 = add i32 %v0_8052109, 1
  store i32 %v1_8052109, i32* %edx.global-to-local, align 4
  %v0_805210a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805210a = add i32 %v0_805210a, 1
  store i32 %v1_805210a, i32* %ebx.global-to-local, align 4
  %v0_805210b = load i32, i32* %ecx.global-to-local, align 4
  %v10_805210b = icmp eq i32 %v0_805210b, -1
  %v1_805210e = icmp eq i1 %v10_805210b, false
  br i1 %v1_805210e, label %dec_label_pc_8052104.dec_label_pc_8052104_crit_edge, label %dec_label_pc_8052110.loopexit

dec_label_pc_8052104.dec_label_pc_8052104_crit_edge: ; preds = %dec_label_pc_8052104
  %v4_8052104.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052104

dec_label_pc_8052110.loopexit:                    ; preds = %dec_label_pc_8052104
  br label %dec_label_pc_8052110

dec_label_pc_8052110:                             ; preds = %dec_label_pc_8052110.loopexit, %dec_label_pc_80520fb, %dec_label_pc_8052090
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_8052120:                             ; preds = %dec_label_pc_80520a7
  store i8 48, i8* %v4_8052097, align 1
  %v2_8052123 = add i32 %tmp22, 1
  %v3_8052123 = inttoptr i32 %v2_8052123 to i8*
  store i8 0, i8* %v3_8052123, align 1
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_8052136:                             ; preds = %dec_label_pc_80520e4
  %v0_8052136 = load i32, i32* @esp, align 4
  %v2_8052136 = add i32 %v0_80520db, 13
  %v3_8052136 = add i32 %v2_8052136, %v0_8052136
  %v4_8052136 = inttoptr i32 %v3_8052136 to i8*
  store i8 45, i8* %v4_8052136, align 1
  %v1_80520e9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520e9

dec_label_pc_805213d:                             ; preds = %dec_label_pc_80520ab
  %v1_805213f = icmp eq i1 %v2_80520a7, false
  br i1 %v1_805213f, label %dec_label_pc_80520b9, label %dec_label_pc_8052145

dec_label_pc_8052145:                             ; preds = %dec_label_pc_805213d
  %v1_8052147 = sub i32 0, %tmp21
  br label %dec_label_pc_80520bd

dec_label_pc_8052155:                             ; preds = %dec_label_pc_80520e9
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_80520e9, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052104

; uselistorder directives
  uselistorder i32 %v1_805210a, { 1, 0 }
  uselistorder i32 %v1_8052109, { 1, 0 }
  uselistorder i32 %v1_80520f4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80520e9, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div18, { 1, 2, 0 }
  uselistorder i32 %v1_80520db, { 1, 0 }
  uselistorder i32 %v4_805209f, { 1, 0, 2 }
  uselistorder i32 %tmp22, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %tmp21, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i8 48, { 1, 0 }
  uselistorder label %dec_label_pc_8052104, { 0, 2, 1 }
}

define i32 @function_805215d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805215d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805215d = load i32, i32* @edi, align 4
  %v0_805215e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052172 = add i32 %arg2, -12
  %v6_805217c = icmp ugt i32 %v1_8052172, 2
  br i1 %v6_805217c, label %dec_label_pc_805218c, label %dec_label_pc_805217e

dec_label_pc_805217e:                             ; preds = %dec_label_pc_805215d
  %v4_8052182 = call i32 @function_80521b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8052172)
  br label %dec_label_pc_80521ae

dec_label_pc_805218c:                             ; preds = %dec_label_pc_805215d
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052194 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052194, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8052194, -4095
  br i1 %tmp17, label %dec_label_pc_80521ac, label %dec_label_pc_80521a0

dec_label_pc_80521a0:                             ; preds = %dec_label_pc_805218c
  %v1_80521a0 = call i32 @function_80526fd(i32 %v0_805215e)
  %v0_80521a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80521a5 = sub i32 0, %v0_80521a5
  %v2_80521a7 = inttoptr i32 %v1_80521a0 to i32*
  store i32 %v1_80521a5, i32* %v2_80521a7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80521ac

dec_label_pc_80521ac:                             ; preds = %dec_label_pc_805218c, %dec_label_pc_80521a0
  %v0_80521ac = phi i32 [ %v2_8052194, %dec_label_pc_805218c ], [ -1, %dec_label_pc_80521a0 ]
  br label %dec_label_pc_80521ae

dec_label_pc_80521ae:                             ; preds = %dec_label_pc_805217e, %dec_label_pc_80521ac
  %v0_80521b3 = phi i32 [ %v4_8052182, %dec_label_pc_805217e ], [ %v0_80521ac, %dec_label_pc_80521ac ]
  store i32 %v0_805215e, i32* @ebx, align 4
  store i32 %v0_805215d, i32* @edi, align 4
  ret i32 %v0_80521b3

; uselistorder directives
  uselistorder i32 %v2_8052194, { 1, 0, 2 }
  uselistorder i32 %v0_805215e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80521ae, { 1, 0 }
  uselistorder label %dec_label_pc_80521ac, { 1, 0 }
}

define i32 @function_80521b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80521b4:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521b4 = load i32, i32* @edi, align 4
  store i32 %v0_80521b4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80521cc = load i32, i32* @ebx, align 4
  %v1_80521d4 = call i32 @int80_syscall(i32 221)
  store i32 %v1_80521d4, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_80521d4, -4095
  br i1 %tmp12, label %dec_label_pc_80521ec, label %dec_label_pc_80521e0

dec_label_pc_80521e0:                             ; preds = %dec_label_pc_80521b4
  %v1_80521e0 = call i32 @function_80526fd(i32 %v0_80521cc)
  %v0_80521e5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80521e5 = sub i32 0, %v0_80521e5
  %v2_80521e7 = inttoptr i32 %v1_80521e0 to i32*
  store i32 %v1_80521e5, i32* %v2_80521e7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80521f1.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80521ec

dec_label_pc_80521ec:                             ; preds = %dec_label_pc_80521b4, %dec_label_pc_80521e0
  %v2_80521f1 = phi i32 [ %v0_80521b4, %dec_label_pc_80521b4 ], [ %v2_80521f1.pre, %dec_label_pc_80521e0 ]
  %v0_80521ec = phi i32 [ %v1_80521d4, %dec_label_pc_80521b4 ], [ -1, %dec_label_pc_80521e0 ]
  store i32 %v2_80521f1, i32* %edi.global-to-local, align 4
  ret i32 %v0_80521ec

; uselistorder directives
  uselistorder i32 %v1_80521d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521ec, { 1, 0 }
}

define i32 @function_80521f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_80521f3:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521f3 = load i32, i32* @edi, align 4
  store i32 %v0_80521f3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80521fb = load i32, i32* @ebx, align 4
  %v1_8052203 = call i32 @close(i32 %arg1)
  store i32 %v0_80521fb, i32* @ebx, align 4
  store i32 %v1_8052203, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8052203, -4095
  br i1 %tmp9, label %dec_label_pc_805221b, label %dec_label_pc_805220f

dec_label_pc_805220f:                             ; preds = %dec_label_pc_80521f3
  %v1_805220f = call i32 @function_80526fd(i32 %v0_80521fb)
  %v0_8052214 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052214 = sub i32 0, %v0_8052214
  %v2_8052216 = inttoptr i32 %v1_805220f to i32*
  store i32 %v1_8052214, i32* %v2_8052216, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805221f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805221b

dec_label_pc_805221b:                             ; preds = %dec_label_pc_80521f3, %dec_label_pc_805220f
  %v2_805221f = phi i32 [ %v0_80521f3, %dec_label_pc_80521f3 ], [ %v2_805221f.pre, %dec_label_pc_805220f ]
  %v0_805221b = phi i32 [ %v1_8052203, %dec_label_pc_80521f3 ], [ -1, %dec_label_pc_805220f ]
  store i32 %v2_805221f, i32* @edi, align 4
  ret i32 %v0_805221b

; uselistorder directives
  uselistorder i32 %v1_8052203, { 1, 0, 2 }
  uselistorder i32 %v0_80521fb, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805221b, { 1, 0 }
}

define i32 @function_8052221() local_unnamed_addr {
dec_label_pc_8052221:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052221 = load i32, i32* @ebx, align 4
  store i32 %v0_8052221, i32* %stack_var_-4, align 4
  %v1_805222a = call i32 @fork(i32 %v0_8052221)
  store i32 %v1_805222a, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805222a, -4095
  br i1 %tmp7, label %dec_label_pc_8052241, label %dec_label_pc_8052235

dec_label_pc_8052235:                             ; preds = %dec_label_pc_8052221
  %v1_8052235 = call i32 @function_80526fd(i32 %v0_8052221)
  %v0_805223a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805223a = sub i32 0, %v0_805223a
  %v2_805223c = inttoptr i32 %v1_8052235 to i32*
  store i32 %v1_805223a, i32* %v2_805223c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052245.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052241

dec_label_pc_8052241:                             ; preds = %dec_label_pc_8052221, %dec_label_pc_8052235
  %v2_8052245 = phi i32 [ %v0_8052221, %dec_label_pc_8052221 ], [ %v2_8052245.pre, %dec_label_pc_8052235 ]
  %v0_8052241 = phi i32 [ %v1_805222a, %dec_label_pc_8052221 ], [ -1, %dec_label_pc_8052235 ]
  store i32 %v2_8052245, i32* @ebx, align 4
  ret i32 %v0_8052241

; uselistorder directives
  uselistorder i32 %v1_805222a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052241, { 1, 0 }
}

define i32 @function_8052247() local_unnamed_addr {
dec_label_pc_8052247:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052247 = load i32, i32* @ebx, align 4
  store i32 %v0_8052247, i32* %stack_var_-4, align 4
  %v1_8052250 = call i32 @getpid(i32 %v0_8052247)
  store i32 %v1_8052250, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052250, -4095
  br i1 %tmp7, label %dec_label_pc_8052267, label %dec_label_pc_805225b

dec_label_pc_805225b:                             ; preds = %dec_label_pc_8052247
  %v1_805225b = call i32 @function_80526fd(i32 %v0_8052247)
  %v0_8052260 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052260 = sub i32 0, %v0_8052260
  %v2_8052262 = inttoptr i32 %v1_805225b to i32*
  store i32 %v1_8052260, i32* %v2_8052262, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805226b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052267

dec_label_pc_8052267:                             ; preds = %dec_label_pc_8052247, %dec_label_pc_805225b
  %v2_805226b = phi i32 [ %v0_8052247, %dec_label_pc_8052247 ], [ %v2_805226b.pre, %dec_label_pc_805225b ]
  %v0_8052267 = phi i32 [ %v1_8052250, %dec_label_pc_8052247 ], [ -1, %dec_label_pc_805225b ]
  %v2_8052269 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052269, i32* @edx, align 4
  store i32 %v2_805226b, i32* @ebx, align 4
  ret i32 %v0_8052267

; uselistorder directives
  uselistorder i32 %v1_8052250, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052267, { 1, 0 }
}

define i32 @function_805226d() local_unnamed_addr {
dec_label_pc_805226d:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805226d = load i32, i32* @ebx, align 4
  store i32 %v0_805226d, i32* %stack_var_-4, align 4
  %v1_8052276 = call i32 @getppid(i32 %v0_805226d)
  store i32 %v1_8052276, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052276, -4095
  br i1 %tmp7, label %dec_label_pc_805228d, label %dec_label_pc_8052281

dec_label_pc_8052281:                             ; preds = %dec_label_pc_805226d
  %v1_8052281 = call i32 @function_80526fd(i32 %v0_805226d)
  %v0_8052286 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052286 = sub i32 0, %v0_8052286
  %v2_8052288 = inttoptr i32 %v1_8052281 to i32*
  store i32 %v1_8052286, i32* %v2_8052288, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052291.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805228d

dec_label_pc_805228d:                             ; preds = %dec_label_pc_805226d, %dec_label_pc_8052281
  %v2_8052291 = phi i32 [ %v0_805226d, %dec_label_pc_805226d ], [ %v2_8052291.pre, %dec_label_pc_8052281 ]
  %v0_805228d = phi i32 [ %v1_8052276, %dec_label_pc_805226d ], [ -1, %dec_label_pc_8052281 ]
  store i32 %v2_8052291, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805228d

; uselistorder directives
  uselistorder i32 %v1_8052276, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805228d, { 1, 0 }
}

define i32 @function_8052293(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052293:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052293 = load i32, i32* @edi, align 4
  store i32 %v0_8052293, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80522ab = load i32, i32* @ebx, align 4
  %v2_80522b3 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_80522b3, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_80522b3, -4095
  br i1 %tmp12, label %dec_label_pc_80522cb, label %dec_label_pc_80522bf

dec_label_pc_80522bf:                             ; preds = %dec_label_pc_8052293
  %v1_80522bf = call i32 @function_80526fd(i32 %v0_80522ab)
  %v0_80522c4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80522c4 = sub i32 0, %v0_80522c4
  %v2_80522c6 = inttoptr i32 %v1_80522bf to i32*
  store i32 %v1_80522c4, i32* %v2_80522c6, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80522d0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522cb

dec_label_pc_80522cb:                             ; preds = %dec_label_pc_8052293, %dec_label_pc_80522bf
  %v2_80522d0 = phi i32 [ %v0_8052293, %dec_label_pc_8052293 ], [ %v2_80522d0.pre, %dec_label_pc_80522bf ]
  %v0_80522cb = phi i32 [ %v2_80522b3, %dec_label_pc_8052293 ], [ -1, %dec_label_pc_80522bf ]
  store i32 %v2_80522d0, i32* %edi.global-to-local, align 4
  ret i32 %v0_80522cb

; uselistorder directives
  uselistorder i32 %v2_80522b3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522cb, { 1, 0 }
}

define i32 @function_80522d2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80522d2:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80522d2 = load i32, i32* @ebx, align 4
  store i32 %v0_80522d2, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80522e5 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_80522e5, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80522e5, -4095
  br i1 %tmp9, label %dec_label_pc_80522fe, label %dec_label_pc_80522f2

dec_label_pc_80522f2:                             ; preds = %dec_label_pc_80522d2
  %v1_80522f2 = call i32 @function_80526fd(i32 %v0_80522d2)
  %v0_80522f7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80522f7 = sub i32 0, %v0_80522f7
  %v2_80522f9 = inttoptr i32 %v1_80522f2 to i32*
  store i32 %v1_80522f7, i32* %v2_80522f9, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052302.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522fe

dec_label_pc_80522fe:                             ; preds = %dec_label_pc_80522d2, %dec_label_pc_80522f2
  %v2_8052302 = phi i32 [ %v0_80522d2, %dec_label_pc_80522d2 ], [ %v2_8052302.pre, %dec_label_pc_80522f2 ]
  %v0_80522fe = phi i32 [ %v2_80522e5, %dec_label_pc_80522d2 ], [ -1, %dec_label_pc_80522f2 ]
  %v2_8052300 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052300, i32* @edx, align 4
  store i32 %v2_8052302, i32* @ebx, align 4
  ret i32 %v0_80522fe

; uselistorder directives
  uselistorder i32 %v2_80522e5, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80522fe, { 1, 0 }
}

define i32 @function_8052304(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052304:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8052305 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_805230b = sdiv i32 %sext, 16777216
  %v4_805230f = ptrtoint i8* %arg1 to i32
  %v3_8052313 = and i32 %arg2, 64
  %v4_8052313 = icmp eq i32 %v3_8052313, 0
  br i1 %v4_8052313, label %dec_label_pc_8052324, label %dec_label_pc_8052318

dec_label_pc_8052318:                             ; preds = %dec_label_pc_8052304
  br label %dec_label_pc_8052324

dec_label_pc_8052324:                             ; preds = %dec_label_pc_8052304, %dec_label_pc_8052318
  store i32 %v4_805230f, i32* %ebx.global-to-local, align 4
  %v5_805232f = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_805230b)
  store i32 %v5_805232f, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_805232f, -4095
  br i1 %tmp15, label %dec_label_pc_8052347, label %dec_label_pc_805233b

dec_label_pc_805233b:                             ; preds = %dec_label_pc_8052324
  %v1_805233b = call i32 @function_80526fd(i32 %v0_8052305)
  %v0_8052340 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052340 = sub i32 0, %v0_8052340
  %v2_8052342 = inttoptr i32 %v1_805233b to i32*
  store i32 %v1_8052340, i32* %v2_8052342, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052347

dec_label_pc_8052347:                             ; preds = %dec_label_pc_8052324, %dec_label_pc_805233b
  %v0_8052347 = phi i32 [ %v5_805232f, %dec_label_pc_8052324 ], [ -1, %dec_label_pc_805233b ]
  store i32 %v0_8052305, i32* @ebx, align 4
  ret i32 %v0_8052347

; uselistorder directives
  uselistorder i32 %v5_805232f, { 1, 0, 2 }
  uselistorder i32 %v0_8052305, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052347, { 1, 0 }
  uselistorder label %dec_label_pc_8052324, { 1, 0 }
}

define i32 @function_805234f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805234f:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052350 = load i32, i32* @esi, align 4
  store i32 %v0_8052350, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8052368 = load i32, i32* @ebx, align 4
  %v5_8052370 = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_8052370, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_8052370, -4095
  br i1 %tmp12, label %dec_label_pc_8052388, label %dec_label_pc_805237c

dec_label_pc_805237c:                             ; preds = %dec_label_pc_805234f
  %v1_805237c = call i32 @function_80526fd(i32 %v0_8052368)
  %v0_8052381 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052381 = sub i32 0, %v0_8052381
  %v2_8052383 = inttoptr i32 %v1_805237c to i32*
  store i32 %v1_8052381, i32* %v2_8052383, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805238b.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052388

dec_label_pc_8052388:                             ; preds = %dec_label_pc_805234f, %dec_label_pc_805237c
  %v2_805238b = phi i32 [ %v0_8052350, %dec_label_pc_805234f ], [ %v2_805238b.pre, %dec_label_pc_805237c ]
  %v0_8052388 = phi i32 [ %v5_8052370, %dec_label_pc_805234f ], [ -1, %dec_label_pc_805237c ]
  store i32 %v2_805238b, i32* %esi.global-to-local, align 4
  ret i32 %v0_8052388

; uselistorder directives
  uselistorder i32 %v5_8052370, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052388, { 1, 0 }
}

define i32 @function_805238e(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805238e:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805238e = load i32, i32* @edi, align 4
  store i32 %v0_805238e, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805239e = load i32, i32* @ebx, align 4
  %v4_80523a6 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_80523a6, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80523a6, -4095
  br i1 %tmp12, label %dec_label_pc_80523be, label %dec_label_pc_80523b2

dec_label_pc_80523b2:                             ; preds = %dec_label_pc_805238e
  %v1_80523b2 = call i32 @function_80526fd(i32 %v0_805239e)
  %v0_80523b7 = load i32, i32* %edi.global-to-local, align 4
  %v1_80523b7 = sub i32 0, %v0_80523b7
  %v2_80523b9 = inttoptr i32 %v1_80523b2 to i32*
  store i32 %v1_80523b7, i32* %v2_80523b9, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80523c2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80523be

dec_label_pc_80523be:                             ; preds = %dec_label_pc_805238e, %dec_label_pc_80523b2
  %v2_80523c2 = phi i32 [ %v0_805238e, %dec_label_pc_805238e ], [ %v2_80523c2.pre, %dec_label_pc_80523b2 ]
  %v0_80523be = phi i32 [ %v4_80523a6, %dec_label_pc_805238e ], [ -1, %dec_label_pc_80523b2 ]
  store i32 %v2_80523c2, i32* %edi.global-to-local, align 4
  ret i32 %v0_80523be

; uselistorder directives
  uselistorder i32 %v4_80523a6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80523be, { 1, 0 }
}

define i32 @function_80523c4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80523c4:
  %edi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to i8*
  %stack_var_-4 = alloca i32, align 4
  %v0_80523c4 = load i32, i32* @edi, align 4
  store i32 %v0_80523c4, i32* %stack_var_-4, align 4
  %v4_80523c8 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80523c8, i32* %edi.global-to-local, align 4
  %v0_80523d4 = load i32, i32* @ebx, align 4
  %v7_80523dc = call i32 @readlink(i8* %arg1, i8* %tmp5, i32 %arg3)
  store i32 %v7_80523dc, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_80523dc, -4095
  br i1 %tmp13, label %dec_label_pc_80523f4, label %dec_label_pc_80523e8

dec_label_pc_80523e8:                             ; preds = %dec_label_pc_80523c4
  %v1_80523e8 = call i32 @function_80526fd(i32 %v0_80523d4)
  %v0_80523ed = load i32, i32* %edi.global-to-local, align 4
  %v1_80523ed = sub i32 0, %v0_80523ed
  %v2_80523ef = inttoptr i32 %v1_80523e8 to i32*
  store i32 %v1_80523ed, i32* %v2_80523ef, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80523f8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80523f4

dec_label_pc_80523f4:                             ; preds = %dec_label_pc_80523c4, %dec_label_pc_80523e8
  %v2_80523f8 = phi i32 [ %v0_80523c4, %dec_label_pc_80523c4 ], [ %v2_80523f8.pre, %dec_label_pc_80523e8 ]
  %v0_80523f4 = phi i32 [ %v7_80523dc, %dec_label_pc_80523c4 ], [ -1, %dec_label_pc_80523e8 ]
  store i32 %v2_80523f8, i32* %edi.global-to-local, align 4
  ret i32 %v0_80523f4

; uselistorder directives
  uselistorder i32 %v7_80523dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80523f4, { 1, 0 }
}

define i32 @function_80523fa() local_unnamed_addr {
dec_label_pc_80523fa:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80523fb = load i32, i32* @esi, align 4
  store i32 %v0_80523fb, i32* %stack_var_-8, align 4
  %v0_8052413 = load i32, i32* @ebx, align 4
  %v1_805241b = call i32 @int80_syscall(i32 142)
  store i32 %v0_8052413, i32* @ebx, align 4
  store i32 %v1_805241b, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_805241b, -4095
  br i1 %tmp12, label %dec_label_pc_8052433, label %dec_label_pc_8052427

dec_label_pc_8052427:                             ; preds = %dec_label_pc_80523fa
  %v1_8052427 = call i32 @function_80526fd(i32 %v0_8052413)
  %v0_805242c = load i32, i32* %esi.global-to-local, align 4
  %v1_805242c = sub i32 0, %v0_805242c
  %v2_805242e = inttoptr i32 %v1_8052427 to i32*
  store i32 %v1_805242c, i32* %v2_805242e, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052436.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052433

dec_label_pc_8052433:                             ; preds = %dec_label_pc_80523fa, %dec_label_pc_8052427
  %v2_8052436 = phi i32 [ %v0_80523fb, %dec_label_pc_80523fa ], [ %v2_8052436.pre, %dec_label_pc_8052427 ]
  %v0_8052433 = phi i32 [ %v1_805241b, %dec_label_pc_80523fa ], [ -1, %dec_label_pc_8052427 ]
  store i32 %v2_8052436, i32* @esi, align 4
  ret i32 %v0_8052433

; uselistorder directives
  uselistorder i32 %v1_805241b, { 1, 0, 2 }
  uselistorder i32 %v0_8052413, { 1, 0 }
  uselistorder label %dec_label_pc_8052433, { 1, 0 }
}

define i32 @function_8052439() local_unnamed_addr {
dec_label_pc_8052439:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052439 = load i32, i32* @ebx, align 4
  store i32 %v0_8052439, i32* %stack_var_-4, align 4
  %v1_8052442 = call i32 @setsid(i32 %v0_8052439)
  store i32 %v1_8052442, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052442, -4095
  br i1 %tmp7, label %dec_label_pc_8052459, label %dec_label_pc_805244d

dec_label_pc_805244d:                             ; preds = %dec_label_pc_8052439
  %v1_805244d = call i32 @function_80526fd(i32 %v0_8052439)
  %v0_8052452 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052452 = sub i32 0, %v0_8052452
  %v2_8052454 = inttoptr i32 %v1_805244d to i32*
  store i32 %v1_8052452, i32* %v2_8052454, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805245d.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052459

dec_label_pc_8052459:                             ; preds = %dec_label_pc_8052439, %dec_label_pc_805244d
  %v2_805245d = phi i32 [ %v0_8052439, %dec_label_pc_8052439 ], [ %v2_805245d.pre, %dec_label_pc_805244d ]
  %v0_8052459 = phi i32 [ %v1_8052442, %dec_label_pc_8052439 ], [ -1, %dec_label_pc_805244d ]
  store i32 %v2_805245d, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052459

; uselistorder directives
  uselistorder i32 %v1_8052442, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052459, { 1, 0 }
}

define i32 @function_805245f(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805245f:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8052460 = load i32, i32* @esi, align 4
  %v4_8052464 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8052464, i32* @ecx, align 4
  %v2_8052470 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8052470, label %dec_label_pc_8052489, label %dec_label_pc_8052474

dec_label_pc_8052474:                             ; preds = %dec_label_pc_805245f
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8052489, label %dec_label_pc_8052479

dec_label_pc_8052479:                             ; preds = %dec_label_pc_8052474
  %v1_8052479 = call i32 @function_80526fd(i32 %v0_8052460)
  %v1_805247e = inttoptr i32 %v1_8052479 to i32*
  store i32 22, i32* %v1_805247e, align 4
  br label %dec_label_pc_80524b0

dec_label_pc_8052489:                             ; preds = %dec_label_pc_8052474, %dec_label_pc_805245f
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805248e = load i32, i32* @ebx, align 4
  %v7_8052496 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805248e, i32* @ebx, align 4
  store i32 %v7_8052496, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8052496, -4095
  br i1 %tmp12, label %dec_label_pc_80524b0, label %dec_label_pc_80524a2

dec_label_pc_80524a2:                             ; preds = %dec_label_pc_8052489
  %v1_80524a2 = call i32 @function_80526fd(i32 %v0_805248e)
  %v0_80524a7 = load i32, i32* %esi.global-to-local, align 4
  %v1_80524a7 = sub i32 0, %v0_80524a7
  %v2_80524a9 = inttoptr i32 %v1_80524a2 to i32*
  store i32 %v1_80524a7, i32* %v2_80524a9, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524b0

dec_label_pc_80524b0:                             ; preds = %dec_label_pc_80524a2, %dec_label_pc_8052489, %dec_label_pc_8052479
  %storemerge = phi i32 [ -1, %dec_label_pc_8052479 ], [ %v7_8052496, %dec_label_pc_8052489 ], [ -1, %dec_label_pc_80524a2 ]
  %v2_80524b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80524b0, i32* @edx, align 4
  store i32 %v0_8052460, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8052496, { 1, 0, 2 }
  uselistorder i32 %v0_805248e, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_80524b4() local_unnamed_addr {
dec_label_pc_80524b4:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80524b4 = load i32, i32* @edi, align 4
  store i32 %v0_80524b4, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_80524bc = load i32, i32* @ebx, align 4
  %v1_80524c4 = inttoptr i32 %tmp to i32*
  %v2_80524c4 = call i32 @time(i32* %v1_80524c4)
  store i32 %v0_80524bc, i32* @ebx, align 4
  store i32 %v2_80524c4, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80524c4, -4095
  br i1 %tmp9, label %dec_label_pc_80524dc, label %dec_label_pc_80524d0

dec_label_pc_80524d0:                             ; preds = %dec_label_pc_80524b4
  %v1_80524d0 = call i32 @function_80526fd(i32 %v0_80524bc)
  %v0_80524d5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80524d5 = sub i32 0, %v0_80524d5
  %v2_80524d7 = inttoptr i32 %v1_80524d0 to i32*
  store i32 %v1_80524d5, i32* %v2_80524d7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80524e0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80524dc

dec_label_pc_80524dc:                             ; preds = %dec_label_pc_80524b4, %dec_label_pc_80524d0
  %v2_80524e0 = phi i32 [ %v0_80524b4, %dec_label_pc_80524b4 ], [ %v2_80524e0.pre, %dec_label_pc_80524d0 ]
  %v0_80524dc = phi i32 [ %v2_80524c4, %dec_label_pc_80524b4 ], [ -1, %dec_label_pc_80524d0 ]
  store i32 %v2_80524e0, i32* @edi, align 4
  ret i32 %v0_80524dc

; uselistorder directives
  uselistorder i32 %v2_80524c4, { 1, 0, 2 }
  uselistorder i32 %v0_80524bc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80524dc, { 1, 0 }
}

define i32 @function_80524e2(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80524e2:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80524e2 = load i32, i32* @edi, align 4
  store i32 %v0_80524e2, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80524f2 = load i32, i32* @ebx, align 4
  %v4_80524fa = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_80524fa, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80524fa, -4095
  br i1 %tmp12, label %dec_label_pc_8052512, label %dec_label_pc_8052506

dec_label_pc_8052506:                             ; preds = %dec_label_pc_80524e2
  %v1_8052506 = call i32 @function_80526fd(i32 %v0_80524f2)
  %v0_805250b = load i32, i32* %edi.global-to-local, align 4
  %v1_805250b = sub i32 0, %v0_805250b
  %v2_805250d = inttoptr i32 %v1_8052506 to i32*
  store i32 %v1_805250b, i32* %v2_805250d, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052516.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052512

dec_label_pc_8052512:                             ; preds = %dec_label_pc_80524e2, %dec_label_pc_8052506
  %v2_8052516 = phi i32 [ %v0_80524e2, %dec_label_pc_80524e2 ], [ %v2_8052516.pre, %dec_label_pc_8052506 ]
  %v0_8052512 = phi i32 [ %v4_80524fa, %dec_label_pc_80524e2 ], [ -1, %dec_label_pc_8052506 ]
  store i32 %v2_8052516, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052512

; uselistorder directives
  uselistorder i32 %v4_80524fa, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052512, { 1, 0 }
}

define i32 @function_8052518(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052518:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_805251a = load i32, i32* @ebx, align 4
  %v12_805251b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp3, i32* @edi, align 4
  %v2_8052522 = load i32, i32* %arg1, align 4
  %v12_8052522 = icmp eq i32 %v2_8052522, -1
  %v1_8052525 = icmp eq i1 %v12_8052522, false
  br i1 %v1_8052525, label %dec_label_pc_8052537, label %dec_label_pc_8052527

dec_label_pc_8052527:                             ; preds = %dec_label_pc_8052518
  %v1_8052527 = call i32 @function_80526fd(i32 %v0_805251a)
  %v1_805252c = inttoptr i32 %v1_8052527 to i32*
  store i32 9, i32* %v1_805252c, align 4
  br label %dec_label_pc_8052581

dec_label_pc_8052537:                             ; preds = %dec_label_pc_8052518
  %v1_8052537 = add i32 %tmp3, 24
  store i32 %v12_805251b, i32* @esi, align 4
  %v2_8052546 = call i32 @function_8053f44(i32 %v12_805251b, i32 134561601)
  %v1_805254e = call i32 @function_8053f41(i32 %v1_8052537)
  store i32 %v1_805254e, i32* @eax, align 4
  %v0_8052553 = load i32, i32* @edi, align 4
  %v1_8052553 = inttoptr i32 %v0_8052553 to i32*
  %v2_8052553 = load i32, i32* %v1_8052553, align 4
  store i32 %v2_8052553, i32* @ebx, align 4
  store i32 -1, i32* %v1_8052553, align 4
  %v2_8052560 = call i32 @function_8053f44(i32 %v12_805251b, i32 1)
  %v0_8052566 = load i32, i32* @edi, align 4
  %v1_8052566 = add i32 %v0_8052566, 12
  %v2_8052566 = inttoptr i32 %v1_8052566 to i32*
  %v3_8052566 = load i32, i32* %v2_8052566, align 4
  %v1_8052569 = call i32 @function_8053920(i32 %v3_8052566)
  %v0_805256e = load i32, i32* @edi, align 4
  %v1_8052571 = call i32 @function_8053920(i32 %v0_805256e)
  %v0_8052576 = load i32, i32* @ebx, align 4
  %v1_8052579 = call i32 @function_80521f3(i32 %v0_8052576)
  br label %dec_label_pc_8052581

dec_label_pc_8052581:                             ; preds = %dec_label_pc_8052527, %dec_label_pc_8052537
  %v0_8052587 = phi i32 [ -1, %dec_label_pc_8052527 ], [ %v1_8052579, %dec_label_pc_8052537 ]
  ret i32 %v0_8052587

; uselistorder directives
  uselistorder label %dec_label_pc_8052581, { 1, 0 }
}

define i32 @function_8052588(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052588:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8052599 = inttoptr i32 %arg1 to i8*
  %v3_8052599 = call i32 @function_8052304(i8* %v2_8052599, i32 67584)
  store i32 %v3_8052599, i32* %eax.global-to-local, align 4
  store i32 %v3_8052599, i32* @edi, align 4
  %v2_80525a3 = icmp slt i32 %v3_8052599, 0
  br i1 %v2_80525a3, label %dec_label_pc_8052670, label %dec_label_pc_80525ab

dec_label_pc_80525ab:                             ; preds = %dec_label_pc_8052588
  %v0_80525ab = load i32, i32* @ebx, align 4
  %v2_80525ad = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_80525ad, i32* %eax.global-to-local, align 4
  store i32 %v3_8052599, i32* %stack_var_-124, align 4
  %v4_80525b3 = call i32 @function_805433e(i32 %v3_8052599, i32 %v2_80525ad, i32 %v0_80525ab, i32 %v0_80525ab)
  store i32 %v4_80525b3, i32* %eax.global-to-local, align 4
  %v2_80525bb = icmp slt i32 %v4_80525b3, 0
  br i1 %v2_80525bb, label %dec_label_pc_80525d1, label %dec_label_pc_80525bf

dec_label_pc_80525bf:                             ; preds = %dec_label_pc_80525ab
  %v0_80525c4 = load i32, i32* @edi, align 4
  store i32 %v0_80525c4, i32* %stack_var_-124, align 4
  %v3_80525c5 = call i32 @function_805215d(i32 %v0_80525c4, i32 2, i32 1)
  store i32 %v3_80525c5, i32* %eax.global-to-local, align 4
  %v2_80525cd = icmp slt i32 %v3_80525c5, 0
  %v1_80525cf = icmp eq i1 %v2_80525cd, false
  br i1 %v1_80525cf, label %dec_label_pc_80525e7, label %dec_label_pc_80525d1

dec_label_pc_80525d1:                             ; preds = %dec_label_pc_80525bf, %dec_label_pc_80525ab
  %v0_80525d1 = load i32, i32* %stack_var_-124, align 4
  %v1_80525d1 = call i32 @function_80526fd(i32 %v0_80525d1)
  store i32 %v1_80525d1, i32* %eax.global-to-local, align 4
  store i32 %v1_80525d1, i32* @ebx, align 4
  %v1_80525db = inttoptr i32 %v1_80525d1 to i32*
  %v2_80525db = load i32, i32* %v1_80525db, align 4
  %v0_80525dd = load i32, i32* @edi, align 4
  store i32 %v0_80525dd, i32* %stack_var_-124, align 4
  %v1_80525de = call i32 @function_80521f3(i32 %v0_80525dd)
  store i32 %v1_80525de, i32* %eax.global-to-local, align 4
  %v1_80525e3 = load i32, i32* @ebx, align 4
  %v2_80525e3 = inttoptr i32 %v1_80525e3 to i32*
  store i32 %v2_80525db, i32* %v2_80525e3, align 4
  br label %dec_label_pc_805265c

dec_label_pc_80525e7:                             ; preds = %dec_label_pc_80525bf
  store i32 48, i32* %stack_var_-124, align 4
  %v1_80525ec = call i32 @function_8052b5b(i32 48)
  store i32 %v1_80525ec, i32* %eax.global-to-local, align 4
  store i32 %v1_80525ec, i32* @ebx, align 4
  %v1_80525f6 = icmp eq i32 %v1_80525ec, 0
  br i1 %v1_80525f6, label %dec_label_pc_8052648, label %dec_label_pc_80525fa

dec_label_pc_80525fa:                             ; preds = %dec_label_pc_80525e7
  %v0_80525fa = load i32, i32* @edi, align 4
  %v2_80525fa = inttoptr i32 %v1_80525ec to i32*
  store i32 %v0_80525fa, i32* %v2_80525fa, align 4
  %v1_80525fc = add i32 %v1_80525ec, 16
  %v2_80525fc = inttoptr i32 %v1_80525fc to i32*
  store i32 0, i32* %v2_80525fc, align 4
  %v1_8052603 = add i32 %v1_80525ec, 8
  %v2_8052603 = inttoptr i32 %v1_8052603 to i32*
  store i32 0, i32* %v2_8052603, align 4
  %v1_805260a = add i32 %v1_80525ec, 4
  %v2_805260a = inttoptr i32 %v1_805260a to i32*
  store i32 0, i32* %v2_805260a, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8052615 = load i32, i32* @ebx, align 4
  %v2_8052615 = add i32 %v1_8052615, 20
  %v3_8052615 = inttoptr i32 %v2_8052615 to i32*
  store i32 %tmp, i32* %v3_8052615, align 4
  %v0_8052618 = load i32, i32* %eax.global-to-local, align 4
  %v6_805261d = icmp ugt i32 %v0_8052618, 511
  br i1 %v6_805261d, label %dec_label_pc_8052626, label %dec_label_pc_805261f

dec_label_pc_805261f:                             ; preds = %dec_label_pc_80525fa
  %v0_805261f = load i32, i32* @ebx, align 4
  %v1_805261f = add i32 %v0_805261f, 20
  %v2_805261f = inttoptr i32 %v1_805261f to i32*
  store i32 512, i32* %v2_805261f, align 4
  br label %dec_label_pc_8052626

dec_label_pc_8052626:                             ; preds = %dec_label_pc_80525fa, %dec_label_pc_805261f
  %v0_8052628 = load i32, i32* @ebx, align 4
  %v1_8052628 = add i32 %v0_8052628, 20
  %v2_8052628 = inttoptr i32 %v1_8052628 to i32*
  %v3_8052628 = load i32, i32* %v2_8052628, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_805262d = call i32 @function_80532cf(i64 1, i32 %v3_8052628)
  store i32 %v3_805262d, i32* %eax.global-to-local, align 4
  %v1_8052635 = load i32, i32* @ebx, align 4
  %v2_8052635 = add i32 %v1_8052635, 12
  %v3_8052635 = inttoptr i32 %v2_8052635 to i32*
  store i32 %v3_805262d, i32* %v3_8052635, align 4
  %v1_8052638 = icmp eq i32 %v3_805262d, 0
  %v1_805263a = icmp eq i1 %v1_8052638, false
  br i1 %v1_805263a, label %dec_label_pc_8052660, label %dec_label_pc_805263c

dec_label_pc_805263c:                             ; preds = %dec_label_pc_8052626
  %v0_805263f = load i32, i32* @ebx, align 4
  store i32 %v0_805263f, i32* %stack_var_-124, align 4
  %v1_8052640 = call i32 @function_8053920(i32 %v0_805263f)
  store i32 %v1_8052640, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052648

dec_label_pc_8052648:                             ; preds = %dec_label_pc_80525e7, %dec_label_pc_805263c
  %v0_805264b = load i32, i32* @edi, align 4
  store i32 %v0_805264b, i32* %stack_var_-124, align 4
  %v1_805264c = call i32 @function_80521f3(i32 %v0_805264b)
  store i32 %v1_805264c, i32* %eax.global-to-local, align 4
  %v1_8052651 = call i32 @function_80526fd(i32 %v0_805264b)
  store i32 %v1_8052651, i32* %eax.global-to-local, align 4
  %v1_8052656 = inttoptr i32 %v1_8052651 to i32*
  store i32 12, i32* %v1_8052656, align 4
  br label %dec_label_pc_805265c

dec_label_pc_805265c:                             ; preds = %dec_label_pc_80525d1, %dec_label_pc_8052648
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805266d

dec_label_pc_8052660:                             ; preds = %dec_label_pc_8052626
  %v0_8052662 = load i32, i32* @ebx, align 4
  %v1_8052662 = add i32 %v0_8052662, 24
  store i32 %v1_8052662, i32* %eax.global-to-local, align 4
  store i32 %v1_8052662, i32* %stack_var_-124, align 4
  %v1_8052668 = call i32 @function_8053f41(i32 %v1_8052662)
  store i32 %v1_8052668, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805266d

dec_label_pc_805266d:                             ; preds = %dec_label_pc_805265c, %dec_label_pc_8052660
  br label %dec_label_pc_8052670

dec_label_pc_8052670:                             ; preds = %dec_label_pc_8052588, %dec_label_pc_805266d
  %v0_8052673 = load i32, i32* @ebx, align 4
  store i32 %v0_8052673, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052673

; uselistorder directives
  uselistorder i32 %v3_805262d, { 1, 0, 2 }
  uselistorder i32 %v1_80525ec, { 0, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_80525d1, { 1, 0, 2 }
  uselistorder i32 %v3_8052599, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 512, { 2, 0, 1 }
  uselistorder i32 (i32)* @function_80521f3, { 14, 13, 12, 11, 10, 9, 8, 5, 7, 4, 6, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052670, { 1, 0 }
  uselistorder label %dec_label_pc_805266d, { 1, 0 }
  uselistorder label %dec_label_pc_805265c, { 1, 0 }
  uselistorder label %dec_label_pc_8052648, { 1, 0 }
  uselistorder label %dec_label_pc_8052626, { 1, 0 }
}

define i32 @function_8052679(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052679:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v1_8052682 = add i32 %tmp3, 24
  store i32 %v1_8052682, i32* @ebx, align 4
  %v2_805268b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805268b, i32* @eax, align 4
  %v2_8052690 = call i32 @function_8053f44(i32 %v2_805268b, i32 134561601)
  %v0_8052695 = load i32, i32* @ebx, align 4
  %v1_8052698 = call i32 @function_8053f41(i32 %v0_8052695)
  br label %dec_label_pc_80526a0

dec_label_pc_80526a0:                             ; preds = %dec_label_pc_80526cb, %dec_label_pc_8052679
  %v0_80526a0 = load i32, i32* @esi, align 4
  %v1_80526a0 = add i32 %v0_80526a0, 8
  %v2_80526a0 = inttoptr i32 %v1_80526a0 to i32*
  %v3_80526a0 = load i32, i32* %v2_80526a0, align 4
  %v2_80526a3 = add i32 %v0_80526a0, 4
  %v3_80526a3 = inttoptr i32 %v2_80526a3 to i32*
  %v4_80526a3 = load i32, i32* %v3_80526a3, align 4
  %v6_80526a6 = icmp ugt i32 %v3_80526a0, %v4_80526a3
  br i1 %v6_80526a6, label %dec_label_pc_80526cb, label %dec_label_pc_80526a8

dec_label_pc_80526a8:                             ; preds = %dec_label_pc_80526a0
  %v0_80526a8 = load i32, i32* @edx, align 4
  %v1_80526a9 = add i32 %v0_80526a0, 20
  %v2_80526a9 = inttoptr i32 %v1_80526a9 to i32*
  %v3_80526a9 = load i32, i32* %v2_80526a9, align 4
  %v1_80526ac = add i32 %v0_80526a0, 12
  %v2_80526ac = inttoptr i32 %v1_80526ac to i32*
  %v3_80526ac = load i32, i32* %v2_80526ac, align 4
  %v1_80526af = inttoptr i32 %v0_80526a0 to i32*
  %v2_80526af = load i32, i32* %v1_80526af, align 4
  %v4_80526b1 = call i32 @function_8054386(i32 %v2_80526af, i32 %v3_80526ac, i32 %v3_80526a9, i32 %v0_80526a8)
  %tmp13 = icmp slt i32 %v4_80526b1, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_80526c1, label %dec_label_pc_80526bd

dec_label_pc_80526bd:                             ; preds = %dec_label_pc_80526a8
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80526e7

dec_label_pc_80526c1:                             ; preds = %dec_label_pc_80526a8
  %v1_80526c1 = load i32, i32* @esi, align 4
  %v2_80526c1 = add i32 %v1_80526c1, 8
  %v3_80526c1 = inttoptr i32 %v2_80526c1 to i32*
  store i32 %v4_80526b1, i32* %v3_80526c1, align 4
  %v0_80526c4 = load i32, i32* @esi, align 4
  %v1_80526c4 = add i32 %v0_80526c4, 4
  %v2_80526c4 = inttoptr i32 %v1_80526c4 to i32*
  store i32 0, i32* %v2_80526c4, align 4
  %v0_80526cb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80526cb

dec_label_pc_80526cb:                             ; preds = %dec_label_pc_80526a0, %dec_label_pc_80526c1
  %v1_80526d9 = phi i32 [ %v0_80526a0, %dec_label_pc_80526a0 ], [ %v0_80526cb.pre, %dec_label_pc_80526c1 ]
  %v1_80526cb = add i32 %v1_80526d9, 4
  %v2_80526cb = inttoptr i32 %v1_80526cb to i32*
  %v3_80526cb = load i32, i32* %v2_80526cb, align 4
  %v2_80526d0 = add i32 %v1_80526d9, 12
  %v3_80526d0 = inttoptr i32 %v2_80526d0 to i32*
  %v4_80526d0 = load i32, i32* %v3_80526d0, align 4
  %v5_80526d0 = add i32 %v4_80526d0, %v3_80526cb
  store i32 %v5_80526d0, i32* @ebx, align 4
  %v1_80526d3 = add i32 %v5_80526d0, 8
  %v2_80526d3 = inttoptr i32 %v1_80526d3 to i16*
  %v3_80526d3 = load i16, i16* %v2_80526d3, align 2
  %v4_80526d3 = zext i16 %v3_80526d3 to i32
  store i32 %v4_80526d3, i32* @edx, align 4
  %v2_80526d7 = add i32 %v4_80526d3, %v3_80526cb
  store i32 %v2_80526d7, i32* %v2_80526cb, align 4
  %v0_80526dc = load i32, i32* @ebx, align 4
  %v1_80526dc = add i32 %v0_80526dc, 4
  %v2_80526dc = inttoptr i32 %v1_80526dc to i32*
  %v3_80526dc = load i32, i32* %v2_80526dc, align 4
  %v1_80526df = load i32, i32* @esi, align 4
  %v2_80526df = add i32 %v1_80526df, 16
  %v3_80526df = inttoptr i32 %v2_80526df to i32*
  store i32 %v3_80526dc, i32* %v3_80526df, align 4
  %v0_80526e2 = load i32, i32* @ebx, align 4
  %v1_80526e2 = inttoptr i32 %v0_80526e2 to i32*
  %v2_80526e2 = load i32, i32* %v1_80526e2, align 4
  %v3_80526e2 = icmp eq i32 %v2_80526e2, 0
  br i1 %v3_80526e2, label %dec_label_pc_80526a0, label %dec_label_pc_80526e7.loopexit

dec_label_pc_80526e7.loopexit:                    ; preds = %dec_label_pc_80526cb
  br label %dec_label_pc_80526e7

dec_label_pc_80526e7:                             ; preds = %dec_label_pc_80526e7.loopexit, %dec_label_pc_80526bd
  store i32 %v2_805268b, i32* @eax, align 4
  %v2_80526f0 = call i32 @function_8053f44(i32 %v2_805268b, i32 1)
  %v0_80526f5 = load i32, i32* @ebx, align 4
  ret i32 %v0_80526f5

; uselistorder directives
  uselistorder i32 %v1_80526d9, { 1, 0 }
  uselistorder i32 %v0_80526a0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_80526cb, { 1, 0 }
}

define i32 @function_80526fd(i32 %arg1) local_unnamed_addr {
dec_label_pc_80526fd:
  ret i32 ptrtoint (i32* @global_var_8056154.43 to i32)
}

define i32 @function_8052703() local_unnamed_addr {
dec_label_pc_8052703:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_805270b = bitcast i32* %stack_var_-16 to %tms*
  %v2_805270b = call i32 @function_805475b(%tms* %v1_805270b)
  %v4_8052710 = trunc i64 %tmp to i32
  %v4_8052714 = load i32, i32* %stack_var_-16, align 4
  %v5_8052714 = add i32 %v4_8052714, %v4_8052710
  %v3_805271b = mul i32 %v5_8052714, 10000
  %v1_8052721 = and i32 %v3_805271b, 2147483632
  ret i32 %v1_8052721

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8052727(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052727:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052728 = load i32, i32* @esi, align 4
  store i32 %v0_8052728, i32* %stack_var_-8, align 4
  %v4_8052729 = ptrtoint i8* %arg1 to i32
  %v9_8052735 = icmp ugt i8* %tmp3, %arg1
  %v1_8052737 = icmp eq i1 %v9_8052735, false
  br i1 %v1_8052737, label %dec_label_pc_805273f, label %dec_label_pc_8052739

dec_label_pc_8052739:                             ; preds = %dec_label_pc_8052727
  %v7_805273b = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_805274b

dec_label_pc_805273f:                             ; preds = %dec_label_pc_8052727
  %v3_805273f = add i32 %arg2, -1
  %v4_805273f = add i32 %v3_805273f, %arg3
  %v5_805273f = inttoptr i32 %v4_805273f to i8*
  %v3_8052743 = add i32 %v4_8052729, -1
  %v4_8052743 = add i32 %v3_8052743, %arg3
  %v5_8052743 = inttoptr i32 %v4_8052743 to i8*
  %v7_8052748 = call i8* @_memcpy(i8* %v5_8052743, i8* %v5_805273f, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_805274b

dec_label_pc_805274b:                             ; preds = %dec_label_pc_8052739, %dec_label_pc_805273f
  %v2_805274b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805274b, i32* @esi, align 4
  ret i32 %v4_8052729

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805274b, { 1, 0 }
}

define i32 @function_805274e(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805274e:
  %v0_805274e = load i32, i32* @edi, align 4
  %v4_8052757 = ptrtoint i8* %arg1 to i32
  %v5_805275b = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805274e, i32* @edi, align 4
  ret i32 %v4_8052757

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_8052763(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052763:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052764 = load i32, i32* @esi, align 4
  store i32 %v0_8052764, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805276c = ptrtoint i8* %arg1 to i32
  store i32 %v4_805276c, i32* %edi.global-to-local, align 4
  %v4_8052770.pre = load i32, i32* @eax, align 4
  %v8_8052770.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8052770

dec_label_pc_8052770:                             ; preds = %dec_label_pc_8052770.dec_label_pc_8052770_crit_edge, %dec_label_pc_8052763
  %v2_8052771 = phi i32 [ %v7_8052771, %dec_label_pc_8052770.dec_label_pc_8052770_crit_edge ], [ %v4_805276c, %dec_label_pc_8052763 ]
  %v8_8052770 = phi i1 [ %v5_8052771, %dec_label_pc_8052770.dec_label_pc_8052770_crit_edge ], [ %v8_8052770.pre, %dec_label_pc_8052763 ]
  %v4_8052770 = phi i32 [ %v0_8052772, %dec_label_pc_8052770.dec_label_pc_8052770_crit_edge ], [ %v4_8052770.pre, %dec_label_pc_8052763 ]
  %v7_8052770 = phi i32 [ %v0_8052770.pre, %dec_label_pc_8052770.dec_label_pc_8052770_crit_edge ], [ %arg2, %dec_label_pc_8052763 ]
  %v1_8052770 = inttoptr i32 %v7_8052770 to i8*
  %v2_8052770 = load i8, i8* %v1_8052770, align 1
  %v3_8052770 = zext i8 %v2_8052770 to i32
  %v5_8052770 = and i32 %v4_8052770, -256
  %v6_8052770 = or i32 %v3_8052770, %v5_8052770
  store i32 %v6_8052770, i32* %eax.global-to-local, align 4
  %v9_8052770 = select i1 %v8_8052770, i32 -1, i32 1
  %v10_8052770 = add i32 %v7_8052770, %v9_8052770
  store i32 %v10_8052770, i32* %esi.global-to-local, align 4
  %v3_8052771 = inttoptr i32 %v2_8052771 to i8*
  store i8 %v2_8052770, i8* %v3_8052771, align 1
  %v4_8052771 = load i32, i32* %edi.global-to-local, align 4
  %v5_8052771 = load i1, i1* @df, align 1
  %v6_8052771 = select i1 %v5_8052771, i32 -1, i32 1
  %v7_8052771 = add i32 %v6_8052771, %v4_8052771
  store i32 %v7_8052771, i32* %edi.global-to-local, align 4
  %v0_8052772 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052772 = trunc i32 %v0_8052772 to i8
  %v4_8052772 = icmp eq i8 %v3_8052772, 0
  %v1_8052774 = icmp eq i1 %v4_8052772, false
  br i1 %v1_8052774, label %dec_label_pc_8052770.dec_label_pc_8052770_crit_edge, label %dec_label_pc_8052776

dec_label_pc_8052770.dec_label_pc_8052770_crit_edge: ; preds = %dec_label_pc_8052770
  %v0_8052770.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052770

dec_label_pc_8052776:                             ; preds = %dec_label_pc_8052770
  store i32 %v4_805276c, i32* %eax.global-to-local, align 4
  %v2_805277b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805277b, i32* %esi.global-to-local, align 4
  ret i32 %v4_805276c

; uselistorder directives
  uselistorder i32 %v0_8052772, { 1, 0 }
  uselistorder i32 %v7_8052771, { 1, 0 }
  uselistorder i1 %v5_8052771, { 1, 0 }
  uselistorder i32 %v4_805276c, { 1, 2, 0, 3 }
}

define i32 @function_805277e(i32 %arg1) local_unnamed_addr {
dec_label_pc_805277e:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052781 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805278a = inttoptr i32 %arg1 to i8*
  %v3_805278a = call i32 @function_805482d(i8* %v2_805278a, i32 %v2_8052781)
  %v1_8052795 = icmp eq i32 %v3_805278a, 0
  br i1 %v1_8052795, label %dec_label_pc_805279d, label %dec_label_pc_8052799

dec_label_pc_8052799:                             ; preds = %dec_label_pc_805277e
  %v3_8052799 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805279d

dec_label_pc_805279d:                             ; preds = %dec_label_pc_805277e, %dec_label_pc_8052799
  %v0_805279d = phi i32 [ -1, %dec_label_pc_805277e ], [ %v3_8052799, %dec_label_pc_8052799 ]
  ret i32 %v0_805279d

; uselistorder directives
  uselistorder label %dec_label_pc_805279d, { 1, 0 }
}

define i32 @function_80527a3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527a3:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527be = ptrtoint i32* %stack_var_-12 to i32
  %v2_80527c5 = call i32 @function_8054277(i32 5, i32 %v2_80527be)
  ret i32 %v2_80527c5

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80527ce(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527ce:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80527e9 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80527f0 = call i32 @function_8054277(i32 2, i32 %v2_80527e9)
  ret i32 %v2_80527f0

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80527f9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80527f9:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052814 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805281b = call i32 @function_8054277(i32 3, i32 %v2_8052814)
  ret i32 %v2_805281b

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8052824(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052824:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805283f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052846 = call i32 @function_8054277(i32 6, i32 %v2_805283f)
  ret i32 %v2_8052846

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805284f() local_unnamed_addr {
dec_label_pc_805284f:
  %stack_var_-20 = alloca i32, align 4
  %v2_805287a = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052881 = call i32 @function_8054277(i32 15, i32 %v2_805287a)
  ret i32 %v2_8052881
}

define i32 @function_805288a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805288a:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805289d = ptrtoint i32* %stack_var_-8 to i32
  %v2_80528a4 = call i32 @function_8054277(i32 4, i32 %v2_805289d)
  ret i32 %v2_80528a4

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_80528ad() local_unnamed_addr {
dec_label_pc_80528ad:
  %stack_var_-16 = alloca i32, align 4
  %v2_80528d0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80528d7 = call i32 @function_8054277(i32 10, i32 %v2_80528d0)
  ret i32 %v2_80528d7
}

define i32 @function_80528e0() local_unnamed_addr {
dec_label_pc_80528e0:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052913 = ptrtoint i32* %stack_var_-24 to i32
  %v2_805291a = call i32 @function_8054277(i32 12, i32 %v2_8052913)
  ret i32 %v2_805291a
}

define i32 @function_8052923() local_unnamed_addr {
dec_label_pc_8052923:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052946 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805294d = call i32 @function_8054277(i32 9, i32 %v2_8052946)
  ret i32 %v2_805294d
}

define i32 @function_8052956() local_unnamed_addr {
dec_label_pc_8052956:
  %stack_var_-24 = alloca i32, align 4
  %v2_8052989 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052990 = call i32 @function_8054277(i32 11, i32 %v2_8052989)
  ret i32 %v2_8052990
}

define i32 @function_8052999() local_unnamed_addr {
dec_label_pc_8052999:
  %stack_var_-20 = alloca i32, align 4
  %v2_80529c4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_80529cb = call i32 @function_8054277(i32 14, i32 %v2_80529c4)
  ret i32 %v2_80529cb
}

define i32 @function_80529d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80529d4:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80529ef = ptrtoint i32* %stack_var_-12 to i32
  %v2_80529f6 = call i32 @function_8054277(i32 1, i32 %v2_80529ef)
  ret i32 %v2_80529f6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8054277, { 5, 4, 7, 3, 6, 2, 11, 1, 8, 0, 10, 9 }
}

define i32 @function_80529ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_80529ff:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8052a17, label %dec_label_pc_8052a0a

dec_label_pc_8052a0a:                             ; preds = %dec_label_pc_80529ff
  %v1_8052a0a = add i32 %arg1, -64
  %v3_8052a0a = sub i32 63, %arg1
  %v4_8052a0a = and i32 %v3_8052a0a, %arg1
  %v5_8052a0a = icmp slt i32 %v4_8052a0a, 0
  %v6_8052a0a = icmp eq i32 %v1_8052a0a, 0
  %v7_8052a0a = icmp slt i32 %v1_8052a0a, 0
  %v3_8052a0d = icmp eq i1 %v7_8052a0a, %v5_8052a0a
  %v4_8052a0d = icmp eq i1 %v6_8052a0a, false
  %v5_8052a0d = and i1 %v4_8052a0d, %v3_8052a0d
  br i1 %v5_8052a0d, label %dec_label_pc_8052a17, label %dec_label_pc_8052a0f

dec_label_pc_8052a0f:                             ; preds = %dec_label_pc_8052a0a
  %v4_8052a12 = call i32 @function_8052b15(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8052a17

dec_label_pc_8052a17:                             ; preds = %dec_label_pc_8052a0a, %dec_label_pc_80529ff, %dec_label_pc_8052a0f
  %v1_8052a17 = call i32 @function_80526fd(i32 ptrtoint (i32* @0 to i32))
  %v1_8052a1c = inttoptr i32 %v1_8052a17 to i32*
  store i32 22, i32* %v1_8052a1c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8052a0a, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8052a17, { 2, 0, 1 }
}

define i32 @function_8052a29(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052a29:
  %v3_8052a37 = inttoptr i32 %arg1 to i8*
  %v4_8052a37 = call i32 @function_805274e(i8* %v3_8052a37, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8052a42(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052a42:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8052a42 = load i32, i32* @ebx, align 4
  %v15_8052a43 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052a57 = icmp eq i32 %arg2, -1
  br i1 %v10_8052a57, label %dec_label_pc_8052a65, label %dec_label_pc_8052a5c

dec_label_pc_8052a5c:                             ; preds = %dec_label_pc_8052a42
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_8052a65, label %dec_label_pc_8052a60

dec_label_pc_8052a60:                             ; preds = %dec_label_pc_8052a5c
  %v7_8052a63 = icmp sgt i32 %arg1, 64
  br i1 %v7_8052a63, label %dec_label_pc_8052a65, label %dec_label_pc_8052a80.lr.ph

dec_label_pc_8052a65:                             ; preds = %dec_label_pc_8052a60, %dec_label_pc_8052a5c, %dec_label_pc_8052a42
  %v1_8052a65 = call i32 @function_80526fd(i32 %v0_8052a42)
  store i32 %v1_8052a65, i32* %eax.global-to-local, align 4
  %v1_8052a6a = inttoptr i32 %v1_8052a65 to i32*
  store i32 22, i32* %v1_8052a6a, align 4
  br label %dec_label_pc_8052ae6

dec_label_pc_8052a80.lr.ph:                       ; preds = %dec_label_pc_8052a60
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8052a8027 = add i32 %v15_8052a43, 284
  %v5_8052a8028 = inttoptr i32 %v4_8052a8027 to i32*
  store i32 0, i32* %v5_8052a8028, align 4
  %v0_8052a8b29 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a8b30 = add i32 %v0_8052a8b29, -1
  %v9_8052a8b31 = icmp slt i32 %v1_8052a8b30, 0
  store i32 %v1_8052a8b30, i32* %eax.global-to-local, align 4
  %v1_8052a8c32 = icmp eq i1 %v9_8052a8b31, false
  br i1 %v1_8052a8c32, label %dec_label_pc_8052a80.dec_label_pc_8052a80_crit_edge, label %dec_label_pc_8052a8e

dec_label_pc_8052a80.dec_label_pc_8052a80_crit_edge: ; preds = %dec_label_pc_8052a80.lr.ph, %dec_label_pc_8052a80.dec_label_pc_8052a80_crit_edge
  %v1_8052a8b33 = phi i32 [ %v1_8052a8b, %dec_label_pc_8052a80.dec_label_pc_8052a80_crit_edge ], [ %v1_8052a8b30, %dec_label_pc_8052a80.lr.ph ]
  %v0_8052a80.pre = load i32, i32* @esp, align 4
  %v2_8052a80 = mul i32 %v1_8052a8b33, 4
  %v3_8052a80 = add i32 %v0_8052a80.pre, 160
  %v4_8052a80 = add i32 %v3_8052a80, %v2_8052a80
  %v5_8052a80 = inttoptr i32 %v4_8052a80 to i32*
  store i32 0, i32* %v5_8052a80, align 4
  %v0_8052a8b = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a8b = add i32 %v0_8052a8b, -1
  %v9_8052a8b = icmp slt i32 %v1_8052a8b, 0
  store i32 %v1_8052a8b, i32* %eax.global-to-local, align 4
  %v1_8052a8c = icmp eq i1 %v9_8052a8b, false
  br i1 %v1_8052a8c, label %dec_label_pc_8052a80.dec_label_pc_8052a80_crit_edge, label %dec_label_pc_8052a8e

dec_label_pc_8052a8e:                             ; preds = %dec_label_pc_8052a80.dec_label_pc_8052a80_crit_edge, %dec_label_pc_8052a80.lr.ph
  %v0_8052a8e = load i32, i32* @edx, align 4
  %v2_8052a91 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8052a91, i32* %eax.global-to-local, align 4
  %v4_8052a99 = call i32 @function_8052b15(i32 %v2_8052a91, i32 %arg1, i32 %v0_8052a8e, i32 %v0_8052a8e)
  store i32 %v4_8052a99, i32* %eax.global-to-local, align 4
  %v2_8052aa1 = icmp slt i32 %v4_8052a99, 0
  br i1 %v2_8052aa1, label %dec_label_pc_8052ae6, label %dec_label_pc_8052aa5

dec_label_pc_8052aa5:                             ; preds = %dec_label_pc_8052a8e
  %v4_8052aad = call i32 @function_8052af1(i32 ptrtoint (i32* @global_var_8056380.44 to i32), i32 %arg1, i32 %v4_8052a99, i32 %v4_8052a99)
  %v2_8052ac6 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052acb = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052acb, i32* %eax.global-to-local, align 4
  %v4_8052ad4 = call i32 @function_8054183(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8052ac6)
  store i32 %v4_8052ad4, i32* %eax.global-to-local, align 4
  %v2_8052adc = icmp slt i32 %v4_8052ad4, 0
  br i1 %v2_8052adc, label %dec_label_pc_8052ae6, label %dec_label_pc_8052ae0

dec_label_pc_8052ae0:                             ; preds = %dec_label_pc_8052aa5
  %v3_8052ae0 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8052ae9

dec_label_pc_8052ae6:                             ; preds = %dec_label_pc_8052aa5, %dec_label_pc_8052a8e, %dec_label_pc_8052a65
  br label %dec_label_pc_8052ae9

dec_label_pc_8052ae9:                             ; preds = %dec_label_pc_8052ae0, %dec_label_pc_8052ae6
  %storemerge = phi i32 [ -1, %dec_label_pc_8052ae6 ], [ %v3_8052ae0, %dec_label_pc_8052ae0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052a8b, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 5, 6 }
  uselistorder i32 284, { 0, 4, 5, 6, 7, 8, 9, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_8052ae9, { 1, 0 }
  uselistorder label %dec_label_pc_8052a80.dec_label_pc_8052a80_crit_edge, { 1, 0 }
}

define i32 @function_8052af1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052af1:
  %v1_8052aff = add i32 %arg2, -1
  %v1_8052b02 = urem i32 %v1_8052aff, 32
  %v2_8052b02 = icmp eq i32 %v1_8052b02, 0
  %v2_8052b05 = udiv i32 %v1_8052aff, 32
  br i1 %v2_8052b02, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052af1
  %v5_8052b08 = shl i32 1, %v1_8052b02
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052af1, %bb
  %v6_8052b0a = phi i32 [ 1, %dec_label_pc_8052af1 ], [ %v5_8052b08, %bb ]
  %v2_8052b0a = mul nuw nsw i32 %v2_8052b05, 4
  %v3_8052b0a = add i32 %v2_8052b0a, %arg1
  %v4_8052b0a = inttoptr i32 %v3_8052b0a to i32*
  %v5_8052b0a = load i32, i32* %v4_8052b0a, align 4
  %v7_8052b0a = and i32 %v5_8052b0a, %v6_8052b0a
  %v8_8052b0a = icmp eq i32 %v7_8052b0a, 0
  %v1_8052b0e = icmp eq i1 %v8_8052b0a, false
  %v2_8052b0e = zext i1 %v1_8052b0e to i32
  ret i32 %v2_8052b0e

; uselistorder directives
  uselistorder i32 %v1_8052b02, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052b15(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b15:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b15 = load i32, i32* @ebx, align 4
  store i32 %v0_8052b15, i32* %stack_var_-4, align 4
  %v1_8052b23 = add i32 %arg2, -1
  %v1_8052b26 = urem i32 %v1_8052b23, 32
  %v2_8052b26 = icmp eq i32 %v1_8052b26, 0
  store i32 %v1_8052b26, i32* @ecx, align 4
  %v2_8052b29 = udiv i32 %v1_8052b23, 32
  store i32 %v2_8052b29, i32* @edx, align 4
  br i1 %v2_8052b26, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8052b15
  %v5_8052b2c = shl i32 1, %v1_8052b26
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8052b15, %bb
  %v6_8052b2e = phi i32 [ 1, %dec_label_pc_8052b15 ], [ %v5_8052b2c, %bb ]
  %v2_8052b2e = mul nuw nsw i32 %v2_8052b29, 4
  %v3_8052b2e = add i32 %v2_8052b2e, %arg1
  %v4_8052b2e = inttoptr i32 %v3_8052b2e to i32*
  %v5_8052b2e = load i32, i32* %v4_8052b2e, align 4
  %v7_8052b2e = or i32 %v5_8052b2e, %v6_8052b2e
  store i32 %v7_8052b2e, i32* %v4_8052b2e, align 4
  %v2_8052b33 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052b33, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8052b29, { 1, 0 }
  uselistorder i32 %v1_8052b26, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8052b35() local_unnamed_addr {
dec_label_pc_8052b35:
  %v0_8052b35 = load i32, i32* @eax, align 4
  %v6_8052b48 = icmp ugt i32 %v0_8052b35, 16777215
  br i1 %v6_8052b48, label %dec_label_pc_8052b59, label %dec_label_pc_8052b4a

dec_label_pc_8052b4a:                             ; preds = %dec_label_pc_8052b35
  %tmp = icmp ult i32 %v0_8052b35, 256
  %v2_8052b38 = udiv i32 %v0_8052b35, 256
  %v2_8052b4a = call i32 @llvm.ctlz.i32(i32 %v2_8052b38, i1 true)
  %v3_8052b4a = xor i32 %v2_8052b4a, 31
  %v5_8052b4a = select i1 %tmp, i32 95, i32 %v3_8052b4a
  %v1_8052b4d = add nuw nsw i32 %v5_8052b4a, 6
  %v2_8052b50 = urem i32 %v1_8052b4d, 32
  %v4_8052b50 = icmp eq i32 %v2_8052b50, 0
  br i1 %v4_8052b50, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052b4a
  %v5_8052b50 = lshr i32 %v0_8052b35, %v2_8052b50
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052b4a, %bb
  %v0_8052b52 = phi i32 [ %v0_8052b35, %dec_label_pc_8052b4a ], [ %v5_8052b50, %bb ]
  %v1_8052b52 = urem i32 %v0_8052b52, 4
  %v2_8052b55 = mul nuw nsw i32 %v5_8052b4a, 4
  %v3_8052b55 = or i32 %v1_8052b52, 32
  %v4_8052b55 = add nuw nsw i32 %v3_8052b55, %v2_8052b55
  br label %dec_label_pc_8052b59

dec_label_pc_8052b59:                             ; preds = %dec_label_pc_8052b35, %bb4
  %v0_8052b5a = phi i32 [ 95, %dec_label_pc_8052b35 ], [ %v4_8052b55, %bb4 ]
  ret i32 %v0_8052b5a

; uselistorder directives
  uselistorder i32 %v2_8052b50, { 1, 0 }
  uselistorder i32 %v0_8052b35, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052b59, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8052b5b(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052b5b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052b5b = load i32, i32* @ebp, align 4
  %v0_8052b5c = load i32, i32* @edi, align 4
  %v0_8052b5d = load i32, i32* @esi, align 4
  %v0_8052b5e = load i32, i32* @ebx, align 4
  store i32 %v0_8052b5e, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052b70 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052b70, i32* @eax, align 4
  store i32 %v2_8052b70, i32* %stack_var_-92, align 4
  %v2_8052b75 = call i32 @function_8053f44(i32 %v2_8052b70, i32 134561601)
  store i32 %v2_8052b75, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805603c.45 to i32), i32* %stack_var_-92, align 4
  %v1_8052b81 = call i32 @function_8053f41(i32 ptrtoint (i32* @global_var_805603c.45 to i32))
  store i32 %v1_8052b81, i32* %eax.global-to-local, align 4
  %v0_8052b89 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8052b89, -32
  br i1 %tmp124, label %dec_label_pc_8052ba0, label %dec_label_pc_8052b8e

dec_label_pc_8052b8e:                             ; preds = %dec_label_pc_8052b5b
  %v0_8052b8e = load i32, i32* %stack_var_-92, align 4
  %v1_8052b8e = call i32 @function_80526fd(i32 %v0_8052b8e)
  store i32 %v1_8052b8e, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8052b95 = inttoptr i32 %v1_8052b8e to i32*
  store i32 12, i32* %v1_8052b95, align 4
  br label %dec_label_pc_80532c5

dec_label_pc_8052ba0:                             ; preds = %dec_label_pc_8052b5b
  %v1_8052ba0 = add i32 %v0_8052b89, 11
  %tmp125 = icmp ult i32 %v1_8052ba0, 16
  br i1 %tmp125, label %dec_label_pc_8052bb7, label %dec_label_pc_8052bb0

dec_label_pc_8052bb0:                             ; preds = %dec_label_pc_8052ba0
  %v1_8052bb0 = and i32 %v1_8052ba0, -8
  br label %dec_label_pc_8052bb7

dec_label_pc_8052bb7:                             ; preds = %dec_label_pc_8052ba0, %dec_label_pc_8052bb0
  %storemerge135 = phi i32 [ %v1_8052bb0, %dec_label_pc_8052bb0 ], [ %v1_8052ba0, %dec_label_pc_8052ba0 ]
  %v1_8052f4f = phi i32 [ %v1_8052bb0, %dec_label_pc_8052bb0 ], [ 16, %dec_label_pc_8052ba0 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8052bb7 = load i8, i8* @global_var_8056400.46, align 1
  %v1_8052bb7 = sext i8 %v0_8052bb7 to i32
  store i32 %v1_8052bb7, i32* @ebx, align 4
  %v3_8052bbd = urem i8 %v0_8052bb7, 2
  %v4_8052bbd = icmp eq i8 %v3_8052bbd, 0
  %v1_8052bc0 = icmp eq i1 %v4_8052bbd, false
  br i1 %v1_8052bc0, label %dec_label_pc_8052bdf, label %dec_label_pc_8052bc2

dec_label_pc_8052bc2:                             ; preds = %dec_label_pc_8052bb7
  %v2_8052bc2 = icmp eq i8 %v0_8052bb7, 0
  %v1_8052bc4 = icmp eq i1 %v2_8052bc2, false
  br i1 %v1_8052bc4, label %dec_label_pc_8052eba, label %dec_label_pc_8052bca

dec_label_pc_8052bca:                             ; preds = %dec_label_pc_8052bc2
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* %stack_var_-92, align 4
  %v2_8052bd2 = call i32 @function_8053778(i32* bitcast (i8* @global_var_8056400.46 to i32*))
  store i32 %v2_8052bd2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052eba

dec_label_pc_8052bdf:                             ; preds = %dec_label_pc_8052bb7
  %v11_8052bdf = trunc i32 %v1_8052f4f to i8
  %v8_8052be3 = icmp ugt i8 %v11_8052bdf, %v0_8052bb7
  br i1 %v8_8052be3, label %dec_label_pc_8052c00, label %dec_label_pc_8052be5

dec_label_pc_8052be5:                             ; preds = %dec_label_pc_8052bdf
  %v2_8052be9 = udiv i32 %v1_8052f4f, 2
  store i32 %v2_8052be9, i32* %eax.global-to-local, align 4
  %v1_8052beb = add i32 %v2_8052be9, ptrtoint (i8* @global_var_8056400.46 to i32)
  store i32 %v1_8052beb, i32* %ecx.global-to-local, align 4
  %v1_8052bf1 = add i32 %v2_8052be9, add (i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32 -4)
  %v2_8052bf1 = inttoptr i32 %v1_8052bf1 to i32*
  %v3_8052bf1 = load i32, i32* %v2_8052bf1, align 4
  store i32 %v3_8052bf1, i32* %edx.global-to-local, align 4
  %v1_8052bf4 = icmp eq i32 %v3_8052bf1, 0
  br i1 %v1_8052bf4, label %dec_label_pc_8052c00, label %dec_label_pc_8052bf8

dec_label_pc_8052bf8:                             ; preds = %dec_label_pc_8052be5
  %v1_8052bf8 = add i32 %v3_8052bf1, 8
  %v2_8052bf8 = inttoptr i32 %v1_8052bf8 to i32*
  %v3_8052bf8 = load i32, i32* %v2_8052bf8, align 4
  store i32 %v3_8052bf8, i32* %eax.global-to-local, align 4
  store i32 %v3_8052bf8, i32* %v2_8052bf1, align 4
  br label %dec_label_pc_8052c39

dec_label_pc_8052c00:                             ; preds = %dec_label_pc_8052be5, %dec_label_pc_8052bdf
  %v8_8052c00 = icmp ult i32 %v1_8052f4f, 255
  %v6_8052c08 = icmp ugt i32 %v1_8052f4f, 255
  store i32 %v1_8052f4f, i32* @eax, align 4
  br i1 %v6_8052c08, label %dec_label_pc_8052c41, label %dec_label_pc_8052c0a

dec_label_pc_8052c0a:                             ; preds = %dec_label_pc_8052c00
  %v2_8052c0e = udiv i32 %v1_8052f4f, 8
  store i32 %v2_8052c0e, i32* %eax.global-to-local, align 4
  %v1_8052c15 = mul nuw i32 %v2_8052c0e, 8
  %v2_8052c15 = add i32 %v1_8052c15, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v2_8052c15, i32* %ecx.global-to-local, align 4
  %v1_8052c1c = add i32 %v1_8052c15, add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 12)
  %v2_8052c1c = inttoptr i32 %v1_8052c1c to i32*
  %v3_8052c1c = load i32, i32* %v2_8052c1c, align 4
  store i32 %v3_8052c1c, i32* %edx.global-to-local, align 4
  %v12_8052c1f = icmp eq i32 %v3_8052c1c, %v2_8052c15
  br i1 %v12_8052c1f, label %dec_label_pc_8052d3d.preheader, label %dec_label_pc_8052c27

dec_label_pc_8052c27:                             ; preds = %dec_label_pc_8052c0a
  store i32 %v1_8052f4f, i32* %ebx.global-to-local, align 4
  %v1_8052c2b = add i32 %v3_8052c1c, 12
  %v2_8052c2b = inttoptr i32 %v1_8052c2b to i32*
  %v3_8052c2b = load i32, i32* %v2_8052c2b, align 4
  store i32 %v3_8052c2b, i32* %eax.global-to-local, align 4
  store i32 %v3_8052c2b, i32* %v2_8052c1c, align 4
  %v0_8052c31 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052c31 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052c31 = add i32 %v0_8052c31, 4
  %v3_8052c31 = add i32 %v2_8052c31, %v1_8052c31
  %v4_8052c31 = inttoptr i32 %v3_8052c31 to i32*
  %v5_8052c31 = load i32, i32* %v4_8052c31, align 4
  %v6_8052c31 = or i32 %v5_8052c31, 1
  store i32 %v6_8052c31, i32* %v4_8052c31, align 4
  %v0_8052c36 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052c36 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c36 = add i32 %v1_8052c36, 8
  %v3_8052c36 = inttoptr i32 %v2_8052c36 to i32*
  store i32 %v0_8052c36, i32* %v3_8052c36, align 4
  br label %dec_label_pc_8052c39

dec_label_pc_8052c39:                             ; preds = %dec_label_pc_8052fd6, %dec_label_pc_8052fe8, %dec_label_pc_8052bf8, %dec_label_pc_8052c27
  %v0_8052c39 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052c39 = add i32 %v0_8052c39, 8
  store i32 %v1_8052c39, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532b4

dec_label_pc_8052c41:                             ; preds = %dec_label_pc_8052c00
  %v0_8052c45 = call i32 @function_8052b35()
  store i32 %v0_8052c45, i32* %eax.global-to-local, align 4
  %v3_8052c4a = and i8 %v0_8052bb7, 2
  %v4_8052c4a = icmp eq i8 %v3_8052c4a, 0
  %v6_8052c4a = zext i8 %v3_8052c4a to i32
  %v9_8052c4a = and i32 %v1_8052bb7, -256
  %v10_8052c4a = or i32 %v9_8052c4a, %v6_8052c4a
  store i32 %v10_8052c4a, i32* @ebx, align 4
  br i1 %v4_8052c4a, label %dec_label_pc_8052d3d.preheader, label %dec_label_pc_8052c57

dec_label_pc_8052c57:                             ; preds = %dec_label_pc_8052c41
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* %stack_var_-92, align 4
  %v2_8052c5f = call i32 @function_8053778(i32* bitcast (i8* @global_var_8056400.46 to i32*))
  store i32 %v2_8052c5f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d3d.preheader

dec_label_pc_8052d3d.preheader:                   ; preds = %dec_label_pc_8052c57, %dec_label_pc_8052c0a, %dec_label_pc_8052c41
  %stack_var_-40.0.ph = phi i32 [ %v2_8052c0e, %dec_label_pc_8052c0a ], [ %v0_8052c45, %dec_label_pc_8052c57 ], [ %v0_8052c45, %dec_label_pc_8052c41 ]
  %v0_8052d3d9 = load i32, i32* @global_var_8056440.50, align 64
  store i32 %v0_8052d3d9, i32* @ebp, align 4
  %v9_8052d4315 = icmp eq i32 %v0_8052d3d9, 134571060
  %v1_8052d4917 = icmp eq i1 %v9_8052d4315, false
  br i1 %v1_8052d4917, label %dec_label_pc_8052c6c.lr.ph, label %dec_label_pc_8052d4f

dec_label_pc_8052c6c.lr.ph:                       ; preds = %dec_label_pc_8052d3d.preheader
  %v1_8052c93 = add i32 %v1_8052f4f, 16
  br label %dec_label_pc_8052c6c

dec_label_pc_8052c6c:                             ; preds = %dec_label_pc_8052c6c.lr.ph, %dec_label_pc_8052d3d
  %v1_8053266 = phi i32 [ %v0_8052d3d9, %dec_label_pc_8052c6c.lr.ph ], [ %v0_8052d3d, %dec_label_pc_8052d3d ]
  %v1_8052c6c = add i32 %v1_8053266, 4
  %v2_8052c6c = inttoptr i32 %v1_8052c6c to i32*
  %v3_8052c6c = load i32, i32* %v2_8052c6c, align 4
  %v1_8052c6f = add i32 %v1_8053266, 12
  %v2_8052c6f = inttoptr i32 %v1_8052c6f to i32*
  %v3_8052c6f = load i32, i32* %v2_8052c6f, align 4
  store i32 %v3_8052c6f, i32* %edx.global-to-local, align 4
  %v1_8052c72 = and i32 %v3_8052c6c, -4
  store i32 %v1_8052c72, i32* @edi, align 4
  br i1 %v6_8052c08, label %dec_label_pc_8052c9e, label %dec_label_pc_8052c7f

dec_label_pc_8052c7f:                             ; preds = %dec_label_pc_8052c6c
  %v9_8052c7f = icmp eq i32 %v3_8052c6f, 134571060
  %v1_8052c85 = icmp eq i1 %v9_8052c7f, false
  br i1 %v1_8052c85, label %dec_label_pc_8052c9e, label %dec_label_pc_8052c87

dec_label_pc_8052c87:                             ; preds = %dec_label_pc_8052c7f
  %v1_8052c87 = load i32, i32* @global_var_8056430.48, align 16
  %v12_8052c87 = icmp eq i32 %v1_8053266, %v1_8052c87
  %v1_8052c8d = icmp eq i1 %v12_8052c87, false
  br i1 %v1_8052c8d, label %dec_label_pc_8052c9e, label %dec_label_pc_8052c8f

dec_label_pc_8052c8f:                             ; preds = %dec_label_pc_8052c87
  store i32 %v1_8052c93, i32* %eax.global-to-local, align 4
  %v6_8052c98 = icmp ugt i32 %v1_8052c72, %v1_8052c93
  br i1 %v6_8052c98, label %dec_label_pc_805324f, label %dec_label_pc_8052c9e

dec_label_pc_8052c9e:                             ; preds = %dec_label_pc_8052c8f, %dec_label_pc_8052c87, %dec_label_pc_8052c7f, %dec_label_pc_8052c6c
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %eax.global-to-local, align 4
  %v2_8052ca3 = add i32 %v3_8052c6f, 8
  %v3_8052ca3 = inttoptr i32 %v2_8052ca3 to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v3_8052ca3, align 4
  %v0_8052ca6 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052ca6, i32* @global_var_8056440.50, align 4
  %v0_8052ca9 = load i32, i32* @edi, align 4
  %v15_8052ca9 = icmp eq i32 %v0_8052ca9, %v1_8052f4f
  br i1 %v15_8052ca9, label %dec_label_pc_8053290, label %dec_label_pc_8052cb3

dec_label_pc_8052cb3:                             ; preds = %dec_label_pc_8052c9e
  %v6_8052cb9 = icmp ugt i32 %v0_8052ca9, 255
  br i1 %v6_8052cb9, label %dec_label_pc_8052ccc, label %dec_label_pc_8052cbb

dec_label_pc_8052cbb:                             ; preds = %dec_label_pc_8052cb3
  %v2_8052cbd = udiv i32 %v0_8052ca9, 8
  store i32 %v2_8052cbd, i32* %esi.global-to-local, align 4
  %v1_8052cc0 = mul nuw i32 %v2_8052cbd, 8
  %v2_8052cc0 = add i32 %v1_8052cc0, 134571052
  store i32 %v2_8052cc0, i32* @ebx, align 4
  %v1_8052cc7 = add i32 %v1_8052cc0, 134571060
  %v2_8052cc7 = inttoptr i32 %v1_8052cc7 to i32*
  %v3_8052cc7 = load i32, i32* %v2_8052cc7, align 4
  store i32 %v3_8052cc7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d15

dec_label_pc_8052ccc:                             ; preds = %dec_label_pc_8052cb3
  store i32 %v0_8052ca9, i32* @eax, align 4
  %v0_8052cce = call i32 @function_8052b35()
  store i32 %v0_8052cce, i32* %esi.global-to-local, align 4
  %v1_8052cd5 = mul i32 %v0_8052cce, 8
  %v2_8052cd5 = add i32 %v1_8052cd5, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v2_8052cd5, i32* %eax.global-to-local, align 4
  %v1_8052cdc = add i32 %v1_8052cd5, add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 8)
  %v2_8052cdc = inttoptr i32 %v1_8052cdc to i32*
  %v3_8052cdc = load i32, i32* %v2_8052cdc, align 4
  store i32 %v3_8052cdc, i32* %edx.global-to-local, align 4
  store i32 %v3_8052cdc, i32* @ebx, align 4
  %v12_8052ce5 = icmp eq i32 %v3_8052cdc, %v2_8052cd5
  br i1 %v12_8052ce5, label %dec_label_pc_8052d15, label %dec_label_pc_8052ce9

dec_label_pc_8052ce9:                             ; preds = %dec_label_pc_8052ccc
  %v1_8052ce9 = add i32 %v1_8052cd5, add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 12)
  %v2_8052ce9 = inttoptr i32 %v1_8052ce9 to i32*
  %v3_8052ce9 = load i32, i32* %v2_8052ce9, align 4
  store i32 %v3_8052ce9, i32* @ebx, align 4
  %v0_8052cec = load i32, i32* @edi, align 4
  %v2_8052cec = add i32 %v3_8052ce9, 4
  %v3_8052cec = inttoptr i32 %v2_8052cec to i32*
  %v4_8052cec = load i32, i32* %v3_8052cec, align 4
  %v10_8052cec = icmp ult i32 %v0_8052cec, %v4_8052cec
  %v1_8052cef = icmp eq i1 %v10_8052cec, false
  br i1 %v1_8052cef, label %dec_label_pc_8052cf7, label %dec_label_pc_8052d15

dec_label_pc_8052cf7:                             ; preds = %dec_label_pc_8052ce9
  %v1_8052cf9 = or i32 %v0_8052cec, 1
  store i32 %v1_8052cf9, i32* %eax.global-to-local, align 4
  store i32 %v3_8052cdc, i32* %ebx.global-to-local, align 4
  %v2_8052d0d105 = add i32 %v3_8052cdc, 4
  %v3_8052d0d106 = inttoptr i32 %v2_8052d0d105 to i32*
  %v4_8052d0d107 = load i32, i32* %v3_8052d0d106, align 4
  %v10_8052d0d108 = icmp ult i32 %v1_8052cf9, %v4_8052d0d107
  br i1 %v10_8052d0d108, label %dec_label_pc_8052cfe, label %dec_label_pc_8052d12

dec_label_pc_8052cfe:                             ; preds = %dec_label_pc_8052cf7, %dec_label_pc_8052cfe
  %v0_8052d12109 = phi i32 [ %v3_8052d02, %dec_label_pc_8052cfe ], [ %v3_8052cdc, %dec_label_pc_8052cf7 ]
  store i32 %v0_8052d12109, i32* %ecx.global-to-local, align 4
  %v1_8052d02 = add i32 %v0_8052d12109, 8
  %v2_8052d02 = inttoptr i32 %v1_8052d02 to i32*
  %v3_8052d02 = load i32, i32* %v2_8052d02, align 4
  store i32 %v3_8052d02, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052d02, i32* %ebx.global-to-local, align 4
  %v2_8052d0d = add i32 %v3_8052d02, 4
  %v3_8052d0d = inttoptr i32 %v2_8052d0d to i32*
  %v4_8052d0d = load i32, i32* %v3_8052d0d, align 4
  %v10_8052d0d = icmp ult i32 %v1_8052cf9, %v4_8052d0d
  br i1 %v10_8052d0d, label %dec_label_pc_8052cfe, label %dec_label_pc_8052d12

dec_label_pc_8052d12:                             ; preds = %dec_label_pc_8052cfe, %dec_label_pc_8052cf7
  %v0_8052d12.lcssa = phi i32 [ %v3_8052cdc, %dec_label_pc_8052cf7 ], [ %v3_8052d02, %dec_label_pc_8052cfe ]
  %v1_8052d12 = add i32 %v0_8052d12.lcssa, 12
  %v2_8052d12 = inttoptr i32 %v1_8052d12 to i32*
  %v3_8052d12 = load i32, i32* %v2_8052d12, align 4
  store i32 %v3_8052d12, i32* @ebx, align 4
  br label %dec_label_pc_8052d15

dec_label_pc_8052d15:                             ; preds = %dec_label_pc_8052cbb, %dec_label_pc_8052ce9, %dec_label_pc_8052ccc, %dec_label_pc_8052d12
  %v0_8052d15 = phi i32 [ %v0_8052cce, %dec_label_pc_8052ccc ], [ %v0_8052cce, %dec_label_pc_8052d12 ], [ %v0_8052cce, %dec_label_pc_8052ce9 ], [ %v2_8052cbd, %dec_label_pc_8052cbb ]
  %stack_var_-64.1 = phi i32 [ %v2_8052cd5, %dec_label_pc_8052ccc ], [ %v0_8052d12.lcssa, %dec_label_pc_8052d12 ], [ %v2_8052cd5, %dec_label_pc_8052ce9 ], [ %v3_8052cc7, %dec_label_pc_8052cbb ]
  %v1_8052d17 = urem i32 %v0_8052d15, 32
  %v2_8052d17 = icmp eq i32 %v1_8052d17, 0
  store i32 %v1_8052d17, i32* %esi.global-to-local, align 4
  store i32 %v1_8052d17, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052d21 = sdiv i32 %v0_8052d15, 32
  store i32 %v2_8052d21, i32* %edx.global-to-local, align 4
  br i1 %v2_8052d17, label %dec_label_pc_8052d3d, label %bb

bb:                                               ; preds = %dec_label_pc_8052d15
  %v5_8052d24 = shl i32 1, %v1_8052d17
  store i32 %v5_8052d24, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d3d

dec_label_pc_8052d3d:                             ; preds = %dec_label_pc_8052d15, %bb
  %v5_8052d26 = phi i32 [ 1, %dec_label_pc_8052d15 ], [ %v5_8052d24, %bb ]
  %v1_8052d26 = mul nsw i32 %v2_8052d21, 4
  %v2_8052d26 = add i32 %v1_8052d26, ptrtoint (i32* @global_var_8056734.51 to i32)
  %v3_8052d26 = inttoptr i32 %v2_8052d26 to i32*
  %v4_8052d26 = load i32, i32* %v3_8052d26, align 4
  %v6_8052d26 = or i32 %v4_8052d26, %v5_8052d26
  store i32 %v6_8052d26, i32* %v3_8052d26, align 4
  %v0_8052d2d = load i32, i32* @ebx, align 4
  %v1_8052d2d = load i32, i32* @ebp, align 4
  %v2_8052d2d = add i32 %v1_8052d2d, 12
  %v3_8052d2d = inttoptr i32 %v2_8052d2d to i32*
  store i32 %v0_8052d2d, i32* %v3_8052d2d, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052d34 = load i32, i32* @ebp, align 4
  %v2_8052d34 = add i32 %v1_8052d34, 8
  %v3_8052d34 = inttoptr i32 %v2_8052d34 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052d34, align 4
  %v0_8052d37 = load i32, i32* @ebp, align 4
  %v1_8052d37 = load i32, i32* @ebx, align 4
  %v2_8052d37 = add i32 %v1_8052d37, 8
  %v3_8052d37 = inttoptr i32 %v2_8052d37 to i32*
  store i32 %v0_8052d37, i32* %v3_8052d37, align 4
  %v0_8052d3a = load i32, i32* @ebp, align 4
  %v1_8052d3a = load i32, i32* @esi, align 4
  %v2_8052d3a = add i32 %v1_8052d3a, 12
  %v3_8052d3a = inttoptr i32 %v2_8052d3a to i32*
  store i32 %v0_8052d3a, i32* %v3_8052d3a, align 4
  %v0_8052d3d = load i32, i32* @global_var_8056440.50, align 64
  store i32 %v0_8052d3d, i32* @ebp, align 4
  %v9_8052d43 = icmp eq i32 %v0_8052d3d, 134571060
  %v1_8052d49 = icmp eq i1 %v9_8052d43, false
  br i1 %v1_8052d49, label %dec_label_pc_8052c6c, label %dec_label_pc_8052d4f

dec_label_pc_8052d4f:                             ; preds = %dec_label_pc_8052d3d, %dec_label_pc_8052d3d.preheader
  br i1 %v8_8052c00, label %dec_label_pc_8052ddd, label %dec_label_pc_8052d5d

dec_label_pc_8052d5d:                             ; preds = %dec_label_pc_8052d4f
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052d61 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052d61 = add i32 %v1_8052d61, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v2_8052d61, i32* %edx.global-to-local, align 4
  %v1_8052d68 = add i32 %v1_8052d61, add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 12)
  %v2_8052d68 = inttoptr i32 %v1_8052d68 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052d68, align 4
  br label %dec_label_pc_8052dd9

dec_label_pc_8052d6d:                             ; preds = %dec_label_pc_8052dd9
  %v1_8052d6d = add i32 %v4_8052d84, 4
  %v2_8052d6d = inttoptr i32 %v1_8052d6d to i32*
  %v3_8052d6d = load i32, i32* %v2_8052d6d, align 4
  store i32 %v3_8052d6d, i32* %ebx.global-to-local, align 4
  %v1_8052d70 = add i32 %v4_8052d84, 12
  %v2_8052d70 = inttoptr i32 %v1_8052d70 to i32*
  %v3_8052d70 = load i32, i32* %v2_8052d70, align 4
  store i32 %v3_8052d70, i32* @ecx, align 4
  %v1_8052d73 = and i32 %v3_8052d6d, -4
  store i32 %v1_8052d73, i32* @ebx, align 4
  %v10_8052d76 = icmp ult i32 %v1_8052d73, %v1_8052f4f
  br i1 %v10_8052d76, label %dec_label_pc_8052dd9, label %dec_label_pc_8052d7c

dec_label_pc_8052d7c:                             ; preds = %dec_label_pc_8052d6d
  %v1_8052d7c = add i32 %v4_8052d84, 8
  %v2_8052d7c = inttoptr i32 %v1_8052d7c to i32*
  %v3_8052d7c = load i32, i32* %v2_8052d7c, align 4
  store i32 %v3_8052d7c, i32* @edx, align 4
  %v1_8052d7f = add i32 %v3_8052d7c, 12
  %v2_8052d7f = inttoptr i32 %v1_8052d7f to i32*
  %v3_8052d7f = load i32, i32* %v2_8052d7f, align 4
  %v15_8052d7f = icmp eq i32 %v3_8052d7f, %v4_8052d84
  %v1_8052d82 = icmp eq i1 %v15_8052d7f, false
  br i1 %v1_8052d82, label %dec_label_pc_8052d89, label %dec_label_pc_8052d84

dec_label_pc_8052d84:                             ; preds = %dec_label_pc_8052d7c
  %v1_8052d84 = add i32 %v3_8052d70, 8
  %v2_8052d84 = inttoptr i32 %v1_8052d84 to i32*
  %v3_8052d84 = load i32, i32* %v2_8052d84, align 4
  %v15_8052d84 = icmp eq i32 %v3_8052d84, %v4_8052d84
  br i1 %v15_8052d84, label %dec_label_pc_8052d8e, label %dec_label_pc_8052d89

dec_label_pc_8052d89:                             ; preds = %dec_label_pc_8052d84, %dec_label_pc_8052d7c
  %v0_8052d89 = call i32 @function_8053abc()
  store i32 %v0_8052d89, i32* %eax.global-to-local, align 4
  %v0_8052d8e.pre = load i32, i32* @ebx, align 4
  %v0_8052d94.pre = load i32, i32* @ecx, align 4
  %v1_8052d94.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052d8e

dec_label_pc_8052d8e:                             ; preds = %dec_label_pc_8052d84, %dec_label_pc_8052d89
  %v1_8052d94 = phi i32 [ %v3_8052d7c, %dec_label_pc_8052d84 ], [ %v1_8052d94.pre, %dec_label_pc_8052d89 ]
  %v0_8052d94 = phi i32 [ %v3_8052d70, %dec_label_pc_8052d84 ], [ %v0_8052d94.pre, %dec_label_pc_8052d89 ]
  %v0_8052d8e = phi i32 [ %v1_8052d73, %dec_label_pc_8052d84 ], [ %v0_8052d8e.pre, %dec_label_pc_8052d89 ]
  %v5_8052d90 = sub i32 %v0_8052d8e, %v1_8052f4f
  store i32 %v5_8052d90, i32* %esi.global-to-local, align 4
  %v2_8052d94 = add i32 %v1_8052d94, 12
  %v3_8052d94 = inttoptr i32 %v2_8052d94 to i32*
  store i32 %v0_8052d94, i32* %v3_8052d94, align 4
  %v0_8052d97 = load i32, i32* @edx, align 4
  %v1_8052d97 = load i32, i32* @ecx, align 4
  %v2_8052d97 = add i32 %v1_8052d97, 8
  %v3_8052d97 = inttoptr i32 %v2_8052d97 to i32*
  store i32 %v0_8052d97, i32* %v3_8052d97, align 4
  %v0_8052d9a = load i32, i32* %esi.global-to-local, align 4
  %v0_8052d9d = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d9d = add i32 %v0_8052d9d, 8
  store i32 %v1_8052d9d, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8052d9a, 16
  br i1 %tmp126, label %dec_label_pc_805329e, label %dec_label_pc_8052da6

dec_label_pc_8052da6:                             ; preds = %dec_label_pc_8052d8e
  %v2_8052daa = add i32 %v0_8052d9d, %v1_8052f4f
  store i32 %v2_8052daa, i32* %edx.global-to-local, align 4
  %v1_8052dad = or i32 %v1_8052f4f, 1
  store i32 %v1_8052dad, i32* %ebx.global-to-local, align 4
  %v2_8052db0 = add i32 %v0_8052d9d, 4
  %v3_8052db0 = inttoptr i32 %v2_8052db0 to i32*
  store i32 %v1_8052dad, i32* %v3_8052db0, align 4
  %v0_8052db3 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052db5 = or i32 %v0_8052db3, 1
  store i32 %v1_8052db5, i32* %eax.global-to-local, align 4
  %v0_8052db8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052db8 = load i32, i32* @ebp, align 4
  %v2_8052db8 = add i32 %v1_8052db8, 8
  %v3_8052db8 = inttoptr i32 %v2_8052db8 to i32*
  store i32 %v0_8052db8, i32* %v3_8052db8, align 4
  %v0_8052dbb = load i32, i32* %edx.global-to-local, align 4
  %v1_8052dbb = load i32, i32* @ebp, align 4
  %v2_8052dbb = add i32 %v1_8052dbb, 12
  %v3_8052dbb = inttoptr i32 %v2_8052dbb to i32*
  store i32 %v0_8052dbb, i32* %v3_8052dbb, align 4
  %v0_8052dbe = load i32, i32* %edx.global-to-local, align 4
  %v1_8052dbe = add i32 %v0_8052dbe, 8
  %v2_8052dbe = inttoptr i32 %v1_8052dbe to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8052dbe, align 4
  %v0_8052dc5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052dc5 = add i32 %v0_8052dc5, 12
  %v2_8052dc5 = inttoptr i32 %v1_8052dc5 to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8052dc5, align 4
  %v0_8052dcc = load i32, i32* %eax.global-to-local, align 4
  %v1_8052dcc = load i32, i32* %edx.global-to-local, align 4
  %v2_8052dcc = add i32 %v1_8052dcc, 4
  %v3_8052dcc = inttoptr i32 %v2_8052dcc to i32*
  store i32 %v0_8052dcc, i32* %v3_8052dcc, align 4
  %v0_8052dcf = load i32, i32* %esi.global-to-local, align 4
  %v1_8052dcf = load i32, i32* %edx.global-to-local, align 4
  %v3_8052dcf = add i32 %v1_8052dcf, %v0_8052dcf
  %v4_8052dcf = inttoptr i32 %v3_8052dcf to i32*
  store i32 %v0_8052dcf, i32* %v4_8052dcf, align 4
  br label %dec_label_pc_80532a3

dec_label_pc_8052dd9:                             ; preds = %dec_label_pc_8052d6d, %dec_label_pc_8052d5d
  %v4_8052d84 = phi i32 [ %storemerge1.pre, %dec_label_pc_8052d5d ], [ %v3_8052d70, %dec_label_pc_8052d6d ]
  store i32 %v4_8052d84, i32* %eax.global-to-local, align 4
  %v12_8052dd9 = icmp eq i32 %v4_8052d84, %v2_8052d61
  %v1_8052ddb = icmp eq i1 %v12_8052dd9, false
  br i1 %v1_8052ddb, label %dec_label_pc_8052d6d, label %dec_label_pc_8052ddd.loopexit

dec_label_pc_8052ddd.loopexit:                    ; preds = %dec_label_pc_8052dd9
  br label %dec_label_pc_8052ddd

dec_label_pc_8052ddd:                             ; preds = %dec_label_pc_8052ddd.loopexit, %dec_label_pc_8052d4f
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052de6 = add i32 %stack_var_-40.0.ph, 1
  %v2_8052de9 = udiv i32 %v1_8052de6, 32
  store i32 %v2_8052de9, i32* @edi, align 4
  %v1_8052dec = mul i32 %v1_8052de6, 8
  %v2_8052dec = add i32 %v1_8052dec, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v2_8052dec, i32* %ebx.global-to-local, align 4
  %v1_8052df3 = urem i32 %v1_8052de6, 32
  %v2_8052df3 = icmp eq i32 %v1_8052df3, 0
  store i32 %v1_8052df3, i32* %ecx.global-to-local, align 4
  %v1_8052df6 = mul nuw nsw i32 %v2_8052de9, 4
  %v2_8052df6 = add i32 %v1_8052df6, ptrtoint (i32* @global_var_8056734.51 to i32)
  %v3_8052df6 = inttoptr i32 %v2_8052df6 to i32*
  %v4_8052df6 = load i32, i32* %v3_8052df6, align 4
  store i32 %v4_8052df6, i32* %edx.global-to-local, align 4
  br i1 %v2_8052df3, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_8052ddd
  %v5_8052dfd = shl i32 1, %v1_8052df3
  store i32 %v5_8052dfd, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052ddd, %bb88, %dec_label_pc_8052e3e
  %v1_8052dff = phi i32 [ %v1_8052dff.pre, %dec_label_pc_8052e3e ], [ %v4_8052df6, %bb88 ], [ %v4_8052df6, %dec_label_pc_8052ddd ]
  %v0_8052e03 = phi i32 [ %v0_8052dff.pre, %dec_label_pc_8052e3e ], [ %v5_8052dfd, %bb88 ], [ 1, %dec_label_pc_8052ddd ]
  %tmp89 = icmp ule i32 %v0_8052e03, %v1_8052dff
  %v1_8052e03 = icmp eq i32 %v0_8052e03, 0
  %v1_8052e05 = icmp eq i1 %v1_8052e03, false
  %or.cond = and i1 %tmp89, %v1_8052e05
  br i1 %or.cond, label %dec_label_pc_8052e03.dec_label_pc_8052e33.preheader_crit_edge, label %dec_label_pc_8052e07.preheader

dec_label_pc_8052e03.dec_label_pc_8052e33.preheader_crit_edge: ; preds = %.preheader
  %v0_8052e2e7.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052e33.preheader

dec_label_pc_8052e07.preheader:                   ; preds = %.preheader
  %v0_8052e07.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052e07

dec_label_pc_8052e07:                             ; preds = %dec_label_pc_8052e07.preheader, %dec_label_pc_8052e11
  %v0_8052e07 = phi i32 [ %v0_8052e07.pre, %dec_label_pc_8052e07.preheader ], [ %v1_8052e07, %dec_label_pc_8052e11 ]
  %v1_8052e07 = add i32 %v0_8052e07, 1
  store i32 %v1_8052e07, i32* @edi, align 4
  %v6_8052e0b = icmp ugt i32 %v1_8052e07, 2
  br i1 %v6_8052e0b, label %dec_label_pc_8052eba.loopexit, label %dec_label_pc_8052e11

dec_label_pc_8052e11:                             ; preds = %dec_label_pc_8052e07
  %v1_8052e11 = mul i32 %v1_8052e07, 4
  %v2_8052e11 = add i32 %v1_8052e11, ptrtoint (i32* @global_var_8056734.51 to i32)
  %v3_8052e11 = inttoptr i32 %v2_8052e11 to i32*
  %v4_8052e11 = load i32, i32* %v3_8052e11, align 4
  store i32 %v4_8052e11, i32* %edx.global-to-local, align 4
  %v1_8052e18 = icmp eq i32 %v4_8052e11, 0
  br i1 %v1_8052e18, label %dec_label_pc_8052e07, label %dec_label_pc_8052e1c

dec_label_pc_8052e1c:                             ; preds = %dec_label_pc_8052e11
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052e23 = mul i32 %v1_8052e07, 256
  store i32 %v2_8052e23, i32* %eax.global-to-local, align 4
  %v1_8052e26 = add i32 %v2_8052e23, ptrtoint (i32* @global_var_805642c.47 to i32)
  store i32 %v1_8052e26, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052e33.preheader

dec_label_pc_8052e33.preheader:                   ; preds = %dec_label_pc_8052e03.dec_label_pc_8052e33.preheader_crit_edge, %dec_label_pc_8052e1c
  %v0_8052e2e7 = phi i32 [ %v1_8052e26, %dec_label_pc_8052e1c ], [ %v0_8052e2e7.pre, %dec_label_pc_8052e03.dec_label_pc_8052e33.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052e1c ], [ %v0_8052e03, %dec_label_pc_8052e03.dec_label_pc_8052e33.preheader_crit_edge ]
  %v0_8052e45 = phi i32 [ %v4_8052e11, %dec_label_pc_8052e1c ], [ %v1_8052dff, %dec_label_pc_8052e03.dec_label_pc_8052e33.preheader_crit_edge ]
  %v2_8052e334 = and i32 %v0_8052e45, %esi.promoted
  %v3_8052e335 = icmp eq i32 %v2_8052e334, 0
  br i1 %v3_8052e335, label %dec_label_pc_8052e2e, label %dec_label_pc_8052e37

dec_label_pc_8052e2e:                             ; preds = %dec_label_pc_8052e33.preheader, %dec_label_pc_8052e2e
  %v2_8052e3118 = phi i32 [ %v2_8052e31, %dec_label_pc_8052e2e ], [ %esi.promoted, %dec_label_pc_8052e33.preheader ]
  %v0_8052e2e8 = phi i32 [ %v1_8052e2e, %dec_label_pc_8052e2e ], [ %v0_8052e2e7, %dec_label_pc_8052e33.preheader ]
  %v1_8052e2e = add i32 %v0_8052e2e8, 8
  %v2_8052e31 = mul i32 %v2_8052e3118, 2
  %v2_8052e33 = and i32 %v2_8052e31, %v0_8052e45
  %v3_8052e33 = icmp eq i32 %v2_8052e33, 0
  br i1 %v3_8052e33, label %dec_label_pc_8052e2e, label %dec_label_pc_8052e33.dec_label_pc_8052e37_crit_edge

dec_label_pc_8052e33.dec_label_pc_8052e37_crit_edge: ; preds = %dec_label_pc_8052e2e
  store i32 %v1_8052e2e, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052e31, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052e37

dec_label_pc_8052e37:                             ; preds = %dec_label_pc_8052e33.dec_label_pc_8052e37_crit_edge, %dec_label_pc_8052e33.preheader
  %v0_8052e47 = phi i32 [ %v2_8052e31, %dec_label_pc_8052e33.dec_label_pc_8052e37_crit_edge ], [ %esi.promoted, %dec_label_pc_8052e33.preheader ]
  %v1_8052e61 = phi i32 [ %v1_8052e2e, %dec_label_pc_8052e33.dec_label_pc_8052e37_crit_edge ], [ %v0_8052e2e7, %dec_label_pc_8052e33.preheader ]
  %v1_8052e37 = add i32 %v1_8052e61, 12
  %v2_8052e37 = inttoptr i32 %v1_8052e37 to i32*
  %v3_8052e37 = load i32, i32* %v2_8052e37, align 4
  store i32 %v3_8052e37, i32* %ecx.global-to-local, align 4
  %v12_8052e3a = icmp eq i32 %v3_8052e37, %v1_8052e61
  %v1_8052e3c = icmp eq i1 %v12_8052e3a, false
  br i1 %v1_8052e3c, label %dec_label_pc_8052e52, label %dec_label_pc_8052e3e

dec_label_pc_8052e3e:                             ; preds = %dec_label_pc_8052e37
  %v1_8052e40 = add i32 %v3_8052e37, 8
  store i32 %v1_8052e40, i32* %ebx.global-to-local, align 4
  %v1_8052e43 = sub i32 -1, %v0_8052e47
  store i32 %v1_8052e43, i32* %eax.global-to-local, align 4
  %v2_8052e45 = and i32 %v0_8052e45, %v1_8052e43
  store i32 %v2_8052e45, i32* %edx.global-to-local, align 4
  %v2_8052e47 = mul i32 %v0_8052e47, 2
  store i32 %v2_8052e47, i32* %esi.global-to-local, align 4
  %v1_8052e49 = load i32, i32* @edi, align 4
  %v2_8052e49 = mul i32 %v1_8052e49, 4
  %v3_8052e49 = add i32 %v2_8052e49, ptrtoint (i32* @global_var_8056734.51 to i32)
  %v4_8052e49 = inttoptr i32 %v3_8052e49 to i32*
  store i32 %v2_8052e45, i32* %v4_8052e49, align 4
  %v0_8052dff.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052dff.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052e52:                             ; preds = %dec_label_pc_8052e37
  %v1_8052e52 = add i32 %v3_8052e37, 4
  %v2_8052e52 = inttoptr i32 %v1_8052e52 to i32*
  %v3_8052e52 = load i32, i32* %v2_8052e52, align 4
  store i32 %v3_8052e52, i32* %edx.global-to-local, align 4
  %v1_8052e55 = add i32 %v3_8052e37, 12
  %v2_8052e55 = inttoptr i32 %v1_8052e55 to i32*
  %v3_8052e55 = load i32, i32* %v2_8052e55, align 4
  store i32 %v3_8052e55, i32* %eax.global-to-local, align 4
  %v1_8052e58 = and i32 %v3_8052e52, -4
  store i32 %v1_8052e58, i32* %edx.global-to-local, align 4
  %v5_8052e5d = sub i32 %v1_8052e58, %v1_8052f4f
  store i32 %v5_8052e5d, i32* %esi.global-to-local, align 4
  store i32 %v3_8052e55, i32* %v2_8052e37, align 4
  %v0_8052e64 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e64 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e64 = add i32 %v1_8052e64, 8
  %v3_8052e64 = inttoptr i32 %v2_8052e64 to i32*
  store i32 %v0_8052e64, i32* %v3_8052e64, align 4
  %v0_8052e67 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8052e67, 16
  br i1 %tmp127, label %dec_label_pc_8052e6c, label %dec_label_pc_8052e73

dec_label_pc_8052e6c:                             ; preds = %dec_label_pc_8052e52
  %v0_8052e6c = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052e6c = load i32, i32* %edx.global-to-local, align 4
  %v2_8052e6c = add i32 %v0_8052e6c, 4
  %v3_8052e6c = add i32 %v2_8052e6c, %v1_8052e6c
  %v4_8052e6c = inttoptr i32 %v3_8052e6c to i32*
  %v5_8052e6c = load i32, i32* %v4_8052e6c, align 4
  %v6_8052e6c = or i32 %v5_8052e6c, 1
  store i32 %v6_8052e6c, i32* %v4_8052e6c, align 4
  br label %dec_label_pc_8052eb2

dec_label_pc_8052e73:                             ; preds = %dec_label_pc_8052e52
  store i32 %v1_8052f4f, i32* %eax.global-to-local, align 4
  %v0_8052e7c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052e7c = add i32 %v0_8052e7c, %v1_8052f4f
  store i32 %v2_8052e7c, i32* %edx.global-to-local, align 4
  %v1_8052e7f = load i32, i32* @ebp, align 4
  %v2_8052e7f = add i32 %v1_8052e7f, 8
  %v3_8052e7f = inttoptr i32 %v2_8052e7f to i32*
  store i32 %v2_8052e7c, i32* %v3_8052e7f, align 4
  %v0_8052e82 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e82 = load i32, i32* @ebp, align 4
  %v2_8052e82 = add i32 %v1_8052e82, 12
  %v3_8052e82 = inttoptr i32 %v2_8052e82 to i32*
  store i32 %v0_8052e82, i32* %v3_8052e82, align 4
  %v0_8052e85 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e85 = add i32 %v0_8052e85, 8
  %v2_8052e85 = inttoptr i32 %v1_8052e85 to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8052e85, align 4
  %v0_8052e8c = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e8c = add i32 %v0_8052e8c, 12
  %v2_8052e8c = inttoptr i32 %v1_8052e8c to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8052e8c, align 4
  br i1 %v6_8052c08, label %dec_label_pc_8052e9b, label %dec_label_pc_8052e95

dec_label_pc_8052e95:                             ; preds = %dec_label_pc_8052e73
  %v0_8052e95 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052e95, i32* @global_var_8056430.48, align 16
  br label %dec_label_pc_8052e9b

dec_label_pc_8052e9b:                             ; preds = %dec_label_pc_8052e73, %dec_label_pc_8052e95
  %v4_8052e9b = or i32 %v1_8052f4f, 1
  %v0_8052ea0 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052e9b, i32* %ebx.global-to-local, align 4
  %v1_8052ea6 = or i32 %v0_8052ea0, 1
  store i32 %v1_8052ea6, i32* %eax.global-to-local, align 4
  %v1_8052ea9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052ea9 = add i32 %v1_8052ea9, 4
  %v3_8052ea9 = inttoptr i32 %v2_8052ea9 to i32*
  store i32 %v4_8052e9b, i32* %v3_8052ea9, align 4
  %v0_8052eac = load i32, i32* %esi.global-to-local, align 4
  %v1_8052eac = load i32, i32* %edx.global-to-local, align 4
  %v3_8052eac = add i32 %v1_8052eac, %v0_8052eac
  %v4_8052eac = inttoptr i32 %v3_8052eac to i32*
  store i32 %v0_8052eac, i32* %v4_8052eac, align 4
  %v0_8052eaf = load i32, i32* %eax.global-to-local, align 4
  %v1_8052eaf = load i32, i32* %edx.global-to-local, align 4
  %v2_8052eaf = add i32 %v1_8052eaf, 4
  %v3_8052eaf = inttoptr i32 %v2_8052eaf to i32*
  store i32 %v0_8052eaf, i32* %v3_8052eaf, align 4
  br label %dec_label_pc_8052eb2

dec_label_pc_8052eb2:                             ; preds = %dec_label_pc_8052e6c, %dec_label_pc_8052e9b
  %v0_8052eb2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052eb2 = add i32 %v0_8052eb2, 8
  store i32 %v1_8052eb2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532b4

dec_label_pc_8052eba.loopexit:                    ; preds = %dec_label_pc_8052e07
  br label %dec_label_pc_8052eba

dec_label_pc_8052eba:                             ; preds = %dec_label_pc_8052eba.loopexit, %dec_label_pc_8052bc2, %dec_label_pc_8052bca
  %v0_8052eba = load i32, i32* @global_var_805642c.47, align 4
  store i32 %v0_8052eba, i32* @ebx, align 4
  %v1_8052ec4 = add i32 %v1_8052f4f, 16
  store i32 %v1_8052ec4, i32* @esi, align 4
  %v1_8052ec7 = add i32 %v0_8052eba, 4
  %v2_8052ec7 = inttoptr i32 %v1_8052ec7 to i32*
  %v3_8052ec7 = load i32, i32* %v2_8052ec7, align 4
  %v1_8052ece = and i32 %v3_8052ec7, -4
  store i32 %v1_8052ece, i32* %ecx.global-to-local, align 4
  %v7_8052ed1 = icmp ult i32 %v1_8052ece, %v1_8052ec4
  br i1 %v7_8052ed1, label %dec_label_pc_8052ef1, label %dec_label_pc_8052ed5

dec_label_pc_8052ed5:                             ; preds = %dec_label_pc_8052eba
  %v2_8052ed9 = add i32 %v0_8052eba, %v1_8052f4f
  store i32 %v2_8052ed9, i32* %edx.global-to-local, align 4
  %v1_8052edc = or i32 %v1_8052f4f, 1
  store i32 %v1_8052edc, i32* %eax.global-to-local, align 4
  store i32 %v2_8052ed9, i32* @global_var_805642c.47, align 4
  store i32 %v1_8052edc, i32* %v2_8052ec7, align 4
  %v0_8052ee8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052ee8 = sub i32 %v0_8052ee8, %v1_8052f4f
  store i32 %v5_8052ee8, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053244

dec_label_pc_8052ef1:                             ; preds = %dec_label_pc_8052eba
  %v0_8052ef1 = load i32, i32* @global_var_805675c.52, align 4
  store i32 %v0_8052ef1, i32* %edx.global-to-local, align 4
  %v0_8052ef7 = load i8, i8* @global_var_8056400.46, align 1024
  %v1_8052ef7 = and i8 %v0_8052ef7, 2
  %v2_8052ef7 = icmp eq i8 %v1_8052ef7, 0
  br i1 %v2_8052ef7, label %dec_label_pc_8052f25, label %dec_label_pc_8052f00

dec_label_pc_8052f00:                             ; preds = %dec_label_pc_8052ef1
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* %stack_var_-92, align 4
  %v2_8052f08 = call i32 @function_8053778(i32* bitcast (i8* @global_var_8056400.46 to i32*))
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* @ebx, align 4
  %v1_8052f12 = add i32 %v1_8052f4f, -7
  store i32 %v1_8052f12, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f12, i32* %stack_var_-92, align 4
  %v1_8052f16 = call i32 @function_8052b5b(i32 %v1_8052f12)
  store i32 %v1_8052f16, i32* %eax.global-to-local, align 4
  store i32 %v1_8052f16, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532b4

dec_label_pc_8052f25:                             ; preds = %dec_label_pc_8052ef1
  %v1_8052f25 = add i32 %v0_8052ef1, -1
  store i32 %v1_8052f25, i32* @ecx, align 4
  store i32 %v1_8052f4f, i32* @ebx, align 4
  %v1_8052f30 = load i32, i32* @global_var_805674c.53, align 4
  %v7_8052f30 = icmp ult i32 %v1_8052f4f, %v1_8052f30
  br i1 %v7_8052f30, label %dec_label_pc_8052ff2, label %dec_label_pc_8052f3c

dec_label_pc_8052f3c:                             ; preds = %dec_label_pc_8052f25
  %v0_8052f3c = load i32, i32* @global_var_8056750.54, align 16
  store i32 %v0_8052f3c, i32* %eax.global-to-local, align 4
  %v1_8052f41 = load i32, i32* @global_var_8056754.55, align 4
  %v5_8052f47 = icmp slt i32 %v0_8052f3c, %v1_8052f41
  br i1 %v5_8052f47, label %dec_label_pc_8052f4d, label %dec_label_pc_8052ff2

dec_label_pc_8052f4d:                             ; preds = %dec_label_pc_8052f3c
  %v2_8052f4f = add i32 %v1_8052f4f, 10
  %v3_8052f4f = add i32 %v2_8052f4f, %v0_8052ef1
  %v1_8052f53 = sub i32 0, %v0_8052ef1
  store i32 %v1_8052f53, i32* %eax.global-to-local, align 4
  %v2_8052f55 = and i32 %v3_8052f4f, %v1_8052f53
  store i32 %v2_8052f55, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_8052f55, %v1_8052f4f
  br i1 %tmp128, label %dec_label_pc_8052f61, label %dec_label_pc_8052ff2

dec_label_pc_8052f61:                             ; preds = %dec_label_pc_8052f4d
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052f6e = call i32 @function_805425c(i32 0, i32 %v2_8052f55, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052f25, i32 %v1_8052f25)
  store i32 %v8_8052f6e, i32* %eax.global-to-local, align 4
  store i32 %v8_8052f6e, i32* %edx.global-to-local, align 4
  %v10_8052f78 = icmp eq i32 %v8_8052f6e, -1
  br i1 %v10_8052f78, label %dec_label_pc_8052f61.dec_label_pc_8052ff2_crit_edge, label %dec_label_pc_8052f7d

dec_label_pc_8052f61.dec_label_pc_8052ff2_crit_edge: ; preds = %dec_label_pc_8052f61
  %v0_8052ff2.pre = load i32, i32* @global_var_805642c.47, align 4
  br label %dec_label_pc_8052ff2

dec_label_pc_8052f7d:                             ; preds = %dec_label_pc_8052f61
  %v1_8052f7f = urem i32 %v8_8052f6e, 8
  %v2_8052f7f = icmp eq i32 %v1_8052f7f, 0
  store i32 %v1_8052f7f, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052f7f, label %dec_label_pc_8052f97, label %dec_label_pc_8052f84

dec_label_pc_8052f84:                             ; preds = %dec_label_pc_8052f7d
  %v0_8052f89 = load i32, i32* @ebx, align 4
  %v2_8052f8b = sub nsw i32 8, %v1_8052f7f
  store i32 %v2_8052f8b, i32* %eax.global-to-local, align 4
  %v2_8052f8d = add i32 %v2_8052f8b, %v8_8052f6e
  store i32 %v2_8052f8d, i32* %edx.global-to-local, align 4
  %v2_8052f8f = sub i32 %v0_8052f89, %v2_8052f8b
  store i32 %v2_8052f8f, i32* %esi.global-to-local, align 4
  %v2_8052f91 = inttoptr i32 %v2_8052f8d to i32*
  store i32 %v2_8052f8b, i32* %v2_8052f91, align 4
  br label %dec_label_pc_8052f9f

dec_label_pc_8052f97:                             ; preds = %dec_label_pc_8052f7d
  %v1_8052f97 = inttoptr i32 %v8_8052f6e to i32*
  store i32 0, i32* %v1_8052f97, align 4
  br label %dec_label_pc_8052f9f

dec_label_pc_8052f9f:                             ; preds = %dec_label_pc_8052f84, %dec_label_pc_8052f97
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052f84 ], [ @ebx, %dec_label_pc_8052f97 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052f9f = or i32 %storemerge, 2
  %v1_8052fa2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052fa2 = add i32 %v1_8052fa2, 4
  %v3_8052fa2 = inttoptr i32 %v2_8052fa2 to i32*
  store i32 %v1_8052f9f, i32* %v3_8052fa2, align 4
  %v0_8052fa5 = load i32, i32* @global_var_8056750.54, align 16
  %v1_8052faa = add i32 %v0_8052fa5, 1
  store i32 %v1_8052faa, i32* %eax.global-to-local, align 4
  store i32 %v1_8052faa, i32* @global_var_8056750.54, align 16
  %v1_8052fb0 = load i32, i32* @global_var_8056758.56, align 8
  %v7_8052fb6 = icmp sgt i32 %v1_8052faa, %v1_8052fb0
  br i1 %v7_8052fb6, label %dec_label_pc_8052fb8, label %dec_label_pc_8052fbd

dec_label_pc_8052fb8:                             ; preds = %dec_label_pc_8052f9f
  store i32 %v1_8052faa, i32* @global_var_8056758.56, align 8
  br label %dec_label_pc_8052fbd

dec_label_pc_8052fbd:                             ; preds = %dec_label_pc_8052f9f, %dec_label_pc_8052fb8
  %v0_8052fbd = load i32, i32* @global_var_8056764.57, align 4
  %v1_8052fc2 = load i32, i32* @ebx, align 4
  %v2_8052fc2 = add i32 %v1_8052fc2, %v0_8052fbd
  store i32 %v2_8052fc2, i32* %eax.global-to-local, align 4
  store i32 %v2_8052fc2, i32* @global_var_8056764.57, align 4
  %v1_8052fc9 = load i32, i32* @global_var_8056770.58, align 16
  %tmp129 = icmp ugt i32 %v2_8052fc2, %v1_8052fc9
  br i1 %tmp129, label %dec_label_pc_8052fd1, label %dec_label_pc_8052fd6

dec_label_pc_8052fd1:                             ; preds = %dec_label_pc_8052fbd
  store i32 %v2_8052fc2, i32* @global_var_8056770.58, align 16
  br label %dec_label_pc_8052fd6

dec_label_pc_8052fd6:                             ; preds = %dec_label_pc_8052fbd, %dec_label_pc_8052fd1
  %v1_8052fd6 = load i32, i32* @global_var_8056768.59, align 8
  %v2_8052fd6 = add i32 %v1_8052fd6, %v2_8052fc2
  store i32 %v2_8052fd6, i32* %eax.global-to-local, align 4
  %v1_8052fdc = load i32, i32* @global_var_8056774.60, align 4
  %tmp130 = icmp ugt i32 %v2_8052fd6, %v1_8052fdc
  br i1 %tmp130, label %dec_label_pc_8052fe8, label %dec_label_pc_8052c39

dec_label_pc_8052fe8:                             ; preds = %dec_label_pc_8052fd6
  store i32 %v2_8052fd6, i32* @global_var_8056774.60, align 4
  br label %dec_label_pc_8052c39

dec_label_pc_8052ff2:                             ; preds = %dec_label_pc_8052f4d, %dec_label_pc_8052f61.dec_label_pc_8052ff2_crit_edge, %dec_label_pc_8052f3c, %dec_label_pc_8052f25
  %v0_8052ff2 = phi i32 [ %v0_8052ff2.pre, %dec_label_pc_8052f61.dec_label_pc_8052ff2_crit_edge ], [ %v0_8052eba, %dec_label_pc_8052f3c ], [ %v0_8052eba, %dec_label_pc_8052f4d ], [ %v0_8052eba, %dec_label_pc_8052f25 ]
  store i32 %v0_8052ff2, i32* %eax.global-to-local, align 4
  %v1_8052ffb = add i32 %v0_8052ff2, 4
  %v2_8052ffb = inttoptr i32 %v1_8052ffb to i32*
  %v3_8052ffb = load i32, i32* %v2_8052ffb, align 4
  %v1_8053005 = and i32 %v3_8052ffb, -4
  %v2_8053005 = icmp eq i32 %v1_8053005, 0
  store i32 %v1_8053005, i32* @ebp, align 4
  %v1_8053008 = load i32, i32* @global_var_8056748.61, align 8
  %v2_8053008 = add i32 %v1_8053008, %v1_8052ec4
  store i32 %v2_8053008, i32* %eax.global-to-local, align 4
  %v0_805300e = load i8, i8* @global_var_8056760.62, align 32
  %v1_805300e = urem i8 %v0_805300e, 2
  %v2_805300e = icmp eq i8 %v1_805300e, 0
  br i1 %v2_805300e, label %dec_label_pc_8053019, label %dec_label_pc_8053017

dec_label_pc_8053017:                             ; preds = %dec_label_pc_8052ff2
  %v2_8053017 = sub i32 %v2_8053008, %v1_8053005
  store i32 %v2_8053017, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053019

dec_label_pc_8053019:                             ; preds = %dec_label_pc_8052ff2, %dec_label_pc_8053017
  %v0_805301d = phi i32 [ %v2_8053008, %dec_label_pc_8052ff2 ], [ %v2_8053017, %dec_label_pc_8053017 ]
  %v5_805301d = add i32 %v0_805301d, %v1_8052f25
  store i32 %v5_805301d, i32* %eax.global-to-local, align 4
  %v1_8053021 = sub i32 0, %v0_8052ef1
  store i32 %v1_8053021, i32* %edx.global-to-local, align 4
  %v2_8053029 = and i32 %v5_805301d, %v1_8053021
  store i32 %v2_8053029, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_8053029, 1
  br i1 %tmp91, label %dec_label_pc_8053043, label %dec_label_pc_805302d

dec_label_pc_805302d:                             ; preds = %dec_label_pc_8053019
  store i32 %v2_8053029, i32* %stack_var_-92, align 4
  %v1_8053031 = call i32 @function_805470d(i32 %v2_8053029)
  store i32 %v1_8053031, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  store i32 %v1_8053031, i32* @ebx, align 4
  %v10_805303e = icmp eq i32 %v1_8053031, -1
  %v1_8053041 = icmp eq i1 %v10_805303e, false
  br i1 %v1_8053041, label %dec_label_pc_8053099.dec_label_pc_80530a2_crit_edge, label %dec_label_pc_805302d.dec_label_pc_8053043_crit_edge

dec_label_pc_805302d.dec_label_pc_8053043_crit_edge: ; preds = %dec_label_pc_805302d
  %v0_8053043.pre = load i8, i8* @global_var_8056760.62, align 32
  br label %dec_label_pc_8053043

dec_label_pc_8053043:                             ; preds = %dec_label_pc_805302d.dec_label_pc_8053043_crit_edge, %dec_label_pc_8053019
  %v0_805306f = phi i32 [ -1, %dec_label_pc_805302d.dec_label_pc_8053043_crit_edge ], [ %v1_8053021, %dec_label_pc_8053019 ]
  %v0_8053043 = phi i8 [ %v0_8053043.pre, %dec_label_pc_805302d.dec_label_pc_8053043_crit_edge ], [ %v0_805300e, %dec_label_pc_8053019 ]
  %v1_8053043 = urem i8 %v0_8053043, 2
  %v2_8053043 = icmp eq i8 %v1_8053043, 0
  br i1 %v2_8053043, label %dec_label_pc_8053043.dec_label_pc_8053058_crit_edge, label %dec_label_pc_805304c

dec_label_pc_8053043.dec_label_pc_8053058_crit_edge: ; preds = %dec_label_pc_8053043
  %v0_8053058.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053058

dec_label_pc_805304c:                             ; preds = %dec_label_pc_8053043
  %v2_8053050 = add i32 %v1_8053005, %v1_8052f25
  store i32 %v2_8053050, i32* %eax.global-to-local, align 4
  %v0_8053052 = load i32, i32* @esi, align 4
  %v2_8053052 = add i32 %v0_8053052, %v2_8053050
  %v5_8053054 = and i32 %v2_8053052, %v1_8053021
  store i32 %v5_8053054, i32* @esi, align 4
  br label %dec_label_pc_8053058

dec_label_pc_8053058:                             ; preds = %dec_label_pc_8053043.dec_label_pc_8053058_crit_edge, %dec_label_pc_805304c
  %v0_8053058 = phi i32 [ %v0_8053058.pre, %dec_label_pc_8053043.dec_label_pc_8053058_crit_edge ], [ %v5_8053054, %dec_label_pc_805304c ]
  %tmp131 = icmp ult i32 %v0_8053058, 1048576
  br i1 %tmp131, label %dec_label_pc_8053060, label %dec_label_pc_8053065

dec_label_pc_8053060:                             ; preds = %dec_label_pc_8053058
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8053065

dec_label_pc_8053065:                             ; preds = %dec_label_pc_8053058, %dec_label_pc_8053060
  %v0_8053079 = phi i32 [ %v0_8053058, %dec_label_pc_8053058 ], [ 1048576, %dec_label_pc_8053060 ]
  %tmp132 = icmp ugt i32 %v0_8053079, %v1_8052f4f
  br i1 %tmp132, label %dec_label_pc_805306f, label %dec_label_pc_80532a7

dec_label_pc_805306f:                             ; preds = %dec_label_pc_8053065
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805307c = call i32 @function_805425c(i32 0, i32 %v0_8053079, i32 3, i32 34, i32 0, i32 0, i32 %v0_805306f, i32 %v0_805306f)
  store i32 %v8_805307c, i32* %eax.global-to-local, align 4
  store i32 %v8_805307c, i32* @ebx, align 4
  %v10_8053086 = icmp eq i32 %v8_805307c, -1
  br i1 %v10_8053086, label %dec_label_pc_80532a7, label %dec_label_pc_8053099.thread

dec_label_pc_8053099.thread:                      ; preds = %dec_label_pc_805306f
  %v0_805308f = load i8, i8* @global_var_8056760.62, align 1
  %v2_805308f = and i8 %v0_805308f, -2
  store i8 %v2_805308f, i8* @global_var_8056760.62, align 32
  %v1_8053096 = load i32, i32* @esi, align 4
  %v2_8053096 = add i32 %v1_8053096, %v8_805307c
  store i32 %v2_8053096, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80530a2

dec_label_pc_8053099.dec_label_pc_80530a2_crit_edge: ; preds = %dec_label_pc_805302d
  %v1_80530a6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80530a2

dec_label_pc_80530a2:                             ; preds = %dec_label_pc_8053099.dec_label_pc_80530a2_crit_edge, %dec_label_pc_8053099.thread
  %v1_80530a6 = phi i32 [ %v1_8053096, %dec_label_pc_8053099.thread ], [ %v1_80530a6.pre, %dec_label_pc_8053099.dec_label_pc_80530a2_crit_edge ]
  %v0_805316e94 = phi i32 [ %v8_805307c, %dec_label_pc_8053099.thread ], [ %v1_8053031, %dec_label_pc_8053099.dec_label_pc_80530a2_crit_edge ]
  %v0_805316093 = phi i32 [ %v2_8053096, %dec_label_pc_8053099.thread ], [ -1, %dec_label_pc_8053099.dec_label_pc_80530a2_crit_edge ]
  %v0_80530a6 = load i32, i32* @global_var_8056768.59, align 8
  %v2_80530a6 = add i32 %v1_80530a6, %v0_80530a6
  store i32 %v2_80530a6, i32* @global_var_8056768.59, align 8
  %v2_80530ac = add i32 %v1_8053005, %v0_8052ff2
  store i32 %v2_80530ac, i32* %ecx.global-to-local, align 4
  %v2_80530ae = sub i32 %v0_805316e94, %v2_80530ac
  %v7_80530ae = icmp ult i32 %v0_805316e94, %v2_80530ac
  %v12_80530ae = icmp eq i32 %v2_80530ae, 0
  %v1_80530b0 = icmp eq i1 %v12_80530ae, false
  br i1 %v1_80530b0, label %dec_label_pc_80530c9, label %dec_label_pc_80530b2

dec_label_pc_80530b2:                             ; preds = %dec_label_pc_80530a2
  %v10_80530b2 = icmp eq i32 %v0_805316093, -1
  %v1_80530b5 = icmp eq i1 %v10_80530b2, false
  br i1 %v1_80530b5, label %dec_label_pc_80530c9, label %dec_label_pc_80530b7

dec_label_pc_80530b7:                             ; preds = %dec_label_pc_80530b2
  %v2_80530b7 = add i32 %v1_80530a6, %v1_8053005
  store i32 %v0_8052ff2, i32* %ecx.global-to-local, align 4
  %v1_80530be = or i32 %v2_80530b7, 1
  store i32 %v1_80530be, i32* %eax.global-to-local, align 4
  store i32 %v1_80530be, i32* %v2_8052ffb, align 4
  br label %dec_label_pc_80531f6

dec_label_pc_80530c9:                             ; preds = %dec_label_pc_80530b2, %dec_label_pc_80530a2
  %v0_80530c9 = load i8, i8* @global_var_8056760.62, align 1
  %v1_80530c9 = sext i8 %v0_80530c9 to i32
  store i32 %v1_80530c9, i32* %eax.global-to-local, align 4
  %v2_80530ce = urem i8 %v0_80530c9, 2
  %v3_80530ce = icmp eq i8 %v2_80530ce, 0
  br i1 %v3_80530ce, label %dec_label_pc_80530e2, label %dec_label_pc_80530d2

dec_label_pc_80530d2:                             ; preds = %dec_label_pc_80530c9
  br i1 %v2_8053005, label %dec_label_pc_80530e2, label %dec_label_pc_80530d6

dec_label_pc_80530d6:                             ; preds = %dec_label_pc_80530d2
  %v1_80530d8 = icmp eq i1 %v7_80530ae, false
  br i1 %v1_80530d8, label %dec_label_pc_80530e2, label %dec_label_pc_80530da

dec_label_pc_80530da:                             ; preds = %dec_label_pc_80530d6
  %v1_80530da = and i32 %v1_80530c9, -2
  %v4_80530da = trunc i32 %v1_80530da to i8
  store i32 %v1_80530da, i32* %eax.global-to-local, align 4
  store i8 %v4_80530da, i8* @global_var_8056760.62, align 32
  br label %dec_label_pc_80530e2

dec_label_pc_80530e2:                             ; preds = %dec_label_pc_80530d6, %dec_label_pc_80530d2, %dec_label_pc_80530c9, %dec_label_pc_80530da
  %v0_80530e2 = phi i8 [ %v0_80530c9, %dec_label_pc_80530d6 ], [ %v0_80530c9, %dec_label_pc_80530d2 ], [ %v0_80530c9, %dec_label_pc_80530c9 ], [ %v4_80530da, %dec_label_pc_80530da ]
  %v1_80530e2 = urem i8 %v0_80530e2, 2
  %v2_80530e2 = icmp eq i8 %v1_80530e2, 0
  br i1 %v2_80530e2, label %dec_label_pc_8053160, label %dec_label_pc_80530eb

dec_label_pc_80530eb:                             ; preds = %dec_label_pc_80530e2
  br i1 %v2_8053005, label %dec_label_pc_80530f9, label %dec_label_pc_80530ef

dec_label_pc_80530ef:                             ; preds = %dec_label_pc_80530eb
  store i32 %v2_80530ae, i32* %eax.global-to-local, align 4
  %v2_80530f3 = add i32 %v2_80530a6, %v2_80530ae
  store i32 %v2_80530f3, i32* @global_var_8056768.59, align 8
  br label %dec_label_pc_80530f9

dec_label_pc_80530f9:                             ; preds = %dec_label_pc_80530eb, %dec_label_pc_80530ef
  %v1_80530fb = urem i32 %v0_805316e94, 8
  %v2_80530fb = icmp eq i32 %v1_80530fb, 0
  store i32 %v1_80530fb, i32* %edx.global-to-local, align 4
  %v1_80530fe = icmp eq i1 %v2_80530fb, false
  br i1 %v1_80530fe, label %dec_label_pc_8053106, label %dec_label_pc_8053100

dec_label_pc_8053100:                             ; preds = %dec_label_pc_80530f9
  store i32 %v0_805316e94, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053110

dec_label_pc_8053106:                             ; preds = %dec_label_pc_80530f9
  %v2_805310b = sub nsw i32 8, %v1_80530fb
  store i32 %v2_805310b, i32* %eax.global-to-local, align 4
  %v2_805310d = add i32 %v2_805310b, %v0_805316e94
  store i32 %v2_805310d, i32* @edi, align 4
  br label %dec_label_pc_8053110

dec_label_pc_8053110:                             ; preds = %dec_label_pc_8053100, %dec_label_pc_8053106
  %v0_8053113 = phi i32 [ 0, %dec_label_pc_8053100 ], [ %v2_805310b, %dec_label_pc_8053106 ]
  %v2_8053110 = add i32 %v1_80530a6, %v0_805316e94
  %v2_8053113 = add i32 %v0_8053113, %v1_8053005
  store i32 %v2_8053113, i32* %ecx.global-to-local, align 4
  %v2_805311c = add i32 %v2_8053113, %v2_8053110
  store i32 %v2_805311c, i32* %edx.global-to-local, align 4
  %v2_8053122 = add i32 %v2_805311c, %v1_8052f25
  %v5_8053125 = and i32 %v2_8053122, %v1_8053021
  %v2_805312c = sub i32 %v5_8053125, %v2_805311c
  store i32 %v2_805312c, i32* %eax.global-to-local, align 4
  %v2_805312e = add i32 %v2_805312c, %v2_8053113
  store i32 %v2_805312e, i32* @esi, align 4
  store i32 %v2_805312e, i32* %stack_var_-92, align 4
  %v1_8053132 = call i32 @function_805470d(i32 %v2_805312e)
  store i32 %v1_8053132, i32* %eax.global-to-local, align 4
  store i32 %v1_8053132, i32* %edx.global-to-local, align 4
  %v10_805313c = icmp eq i32 %v1_8053132, -1
  %v1_805313f = icmp eq i1 %v10_805313c, false
  br i1 %v1_805313f, label %dec_label_pc_805314f, label %dec_label_pc_8053141

dec_label_pc_8053141:                             ; preds = %dec_label_pc_8053110
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053146 = call i32 @function_805470d(i32 0)
  store i32 %v1_8053146, i32* %eax.global-to-local, align 4
  store i32 %v1_8053146, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053183

dec_label_pc_805314f:                             ; preds = %dec_label_pc_8053110
  %v1_805314f = load i32, i32* @ebx, align 4
  %v7_805314f = icmp ult i32 %v1_8053132, %v1_805314f
  %v1_8053151 = icmp eq i1 %v7_805314f, false
  br i1 %v1_8053151, label %dec_label_pc_8053188, label %dec_label_pc_8053153

dec_label_pc_8053153:                             ; preds = %dec_label_pc_805314f
  %v0_8053153 = load i8, i8* @global_var_8056760.62, align 1
  %v2_8053153 = and i8 %v0_8053153, -2
  store i8 %v2_8053153, i8* @global_var_8056760.62, align 32
  store i32 %v2_8053110, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053167

dec_label_pc_8053160:                             ; preds = %dec_label_pc_80530e2
  %v10_8053160 = icmp eq i32 %v0_805316093, -1
  br i1 %v10_8053160, label %dec_label_pc_805316b, label %dec_label_pc_8053165

dec_label_pc_8053165:                             ; preds = %dec_label_pc_8053160
  store i32 %v0_805316e94, i32* @edi, align 4
  br label %dec_label_pc_8053167

dec_label_pc_8053167:                             ; preds = %dec_label_pc_8053153, %dec_label_pc_8053165
  %v0_805318858 = phi i32 [ %v2_8053110, %dec_label_pc_8053153 ], [ %v0_805316093, %dec_label_pc_8053165 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053188

dec_label_pc_805316b:                             ; preds = %dec_label_pc_8053160
  store i32 %v0_805316e94, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053172 = call i32 @function_805470d(i32 0)
  store i32 %v1_8053172, i32* %edx.global-to-local, align 4
  %v1_8053179 = load i32, i32* @ebx, align 4
  %v2_8053179 = sub i32 %v1_8053172, %v1_8053179
  %v1_805317b = load i32, i32* @esi, align 4
  %v2_805317b = sub i32 %v2_8053179, %v1_805317b
  store i32 %v2_805317b, i32* %eax.global-to-local, align 4
  %v0_805317d = load i32, i32* @global_var_8056768.59, align 8
  %v2_805317d = add i32 %v0_805317d, %v2_805317b
  store i32 %v2_805317d, i32* @global_var_8056768.59, align 8
  br label %dec_label_pc_8053183

dec_label_pc_8053183:                             ; preds = %dec_label_pc_8053141, %dec_label_pc_805316b
  %v0_805318857 = phi i32 [ %v1_8053146, %dec_label_pc_8053141 ], [ %v1_8053172, %dec_label_pc_805316b ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053188

dec_label_pc_8053188:                             ; preds = %dec_label_pc_805314f, %dec_label_pc_8053167, %dec_label_pc_8053183
  %v0_805318d = phi i32 [ %v1_8053132, %dec_label_pc_805314f ], [ %v0_805318858, %dec_label_pc_8053167 ], [ %v0_805318857, %dec_label_pc_8053183 ]
  %v10_8053188 = icmp eq i32 %v0_805318d, -1
  br i1 %v10_8053188, label %dec_label_pc_80531f6, label %dec_label_pc_805318d

dec_label_pc_805318d:                             ; preds = %dec_label_pc_8053188
  %v1_805318d = load i32, i32* @edi, align 4
  %v2_805318d = sub i32 %v0_805318d, %v1_805318d
  store i32 %v2_805318d, i32* %edx.global-to-local, align 4
  store i32 %v1_805318d, i32* @global_var_805642c.47, align 4
  %v1_8053195 = load i32, i32* @esi, align 4
  %v2_8053195 = add i32 %v1_8053195, %v2_805318d
  %v1_8053198 = or i32 %v2_8053195, 1
  store i32 %v1_8053198, i32* %eax.global-to-local, align 4
  %v2_805319b = add i32 %v1_805318d, 4
  %v3_805319b = inttoptr i32 %v2_805319b to i32*
  store i32 %v1_8053198, i32* %v3_805319b, align 4
  %v0_805319e = load i32, i32* @global_var_8056768.59, align 8
  %v1_805319e = load i32, i32* @esi, align 4
  %v2_805319e = add i32 %v1_805319e, %v0_805319e
  store i32 %v2_805319e, i32* @global_var_8056768.59, align 8
  br i1 %v2_8053005, label %dec_label_pc_80531f6, label %dec_label_pc_80531a8

dec_label_pc_80531a8:                             ; preds = %dec_label_pc_805318d
  %v1_80531a8 = add i32 %v1_8053005, -12
  store i32 %v0_8052ff2, i32* %ecx.global-to-local, align 4
  %v1_80531af = and i32 %v1_80531a8, -8
  store i32 %v1_80531af, i32* %eax.global-to-local, align 4
  %v1_80531b4 = or i32 %v1_80531af, 1
  store i32 %v1_80531b4, i32* %edx.global-to-local, align 4
  %v5_80531b7 = icmp ult i32 %v1_80531af, 15
  store i32 %v1_80531b4, i32* %v2_8052ffb, align 4
  %v0_80531bd = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531bd = load i32, i32* %eax.global-to-local, align 4
  %v2_80531bd = add i32 %v0_80531bd, 4
  %v3_80531bd = add i32 %v2_80531bd, %v1_80531bd
  %v4_80531bd = inttoptr i32 %v3_80531bd to i32*
  store i32 5, i32* %v4_80531bd, align 4
  %v0_80531c5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531c5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80531c5 = add i32 %v0_80531c5, 8
  %v3_80531c5 = add i32 %v2_80531c5, %v1_80531c5
  %v4_80531c5 = inttoptr i32 %v3_80531c5 to i32*
  store i32 5, i32* %v4_80531c5, align 4
  br i1 %v5_80531b7, label %dec_label_pc_80531f6, label %dec_label_pc_80531cf

dec_label_pc_80531cf:                             ; preds = %dec_label_pc_80531a8
  %v0_80531d2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80531d4 = add i32 %v0_80531d2, 8
  store i32 %v1_80531d4, i32* %eax.global-to-local, align 4
  %v0_80531d7 = load i32, i32* @global_var_8056744.63, align 4
  store i32 %v0_80531d7, i32* @ebx, align 4
  store i32 %v1_80531d4, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8056744.63, align 4
  %v1_80531e8 = call i32 @function_8053920(i32 %v1_80531d4)
  store i32 %v1_80531e8, i32* %eax.global-to-local, align 4
  %v0_80531ed = load i32, i32* @ebx, align 4
  store i32 %v0_80531ed, i32* @global_var_8056744.63, align 4
  br label %dec_label_pc_80531f6

dec_label_pc_80531f6:                             ; preds = %dec_label_pc_80531a8, %dec_label_pc_805318d, %dec_label_pc_8053188, %dec_label_pc_80530b7, %dec_label_pc_80531cf
  %v0_80531f6 = load i32, i32* @global_var_8056768.59, align 8
  store i32 %v0_80531f6, i32* %eax.global-to-local, align 4
  %v1_80531fb = load i32, i32* @global_var_805676c.64, align 4
  %tmp133 = icmp ugt i32 %v0_80531f6, %v1_80531fb
  br i1 %tmp133, label %dec_label_pc_8053203, label %dec_label_pc_8053208

dec_label_pc_8053203:                             ; preds = %dec_label_pc_80531f6
  store i32 %v0_80531f6, i32* @global_var_805676c.64, align 4
  br label %dec_label_pc_8053208

dec_label_pc_8053208:                             ; preds = %dec_label_pc_80531f6, %dec_label_pc_8053203
  %v1_8053208 = load i32, i32* @global_var_8056764.57, align 4
  %v2_8053208 = add i32 %v1_8053208, %v0_80531f6
  store i32 %v2_8053208, i32* %eax.global-to-local, align 4
  %v1_805320e = load i32, i32* @global_var_8056774.60, align 4
  %tmp134 = icmp ugt i32 %v2_8053208, %v1_805320e
  br i1 %tmp134, label %dec_label_pc_8053216, label %dec_label_pc_805321b

dec_label_pc_8053216:                             ; preds = %dec_label_pc_8053208
  store i32 %v2_8053208, i32* @global_var_8056774.60, align 4
  br label %dec_label_pc_805321b

dec_label_pc_805321b:                             ; preds = %dec_label_pc_8053208, %dec_label_pc_8053216
  %v0_805321b = load i32, i32* @global_var_805642c.47, align 4
  store i32 %v0_805321b, i32* @ebx, align 4
  %v1_8053221 = add i32 %v0_805321b, 4
  %v2_8053221 = inttoptr i32 %v1_8053221 to i32*
  %v3_8053221 = load i32, i32* %v2_8053221, align 4
  %v1_8053224 = and i32 %v3_8053221, -4
  store i32 %v1_8053224, i32* %ecx.global-to-local, align 4
  %v10_8053227 = icmp ult i32 %v1_8053224, %v1_8052ec4
  br i1 %v10_8053227, label %dec_label_pc_80532a7, label %dec_label_pc_805322d

dec_label_pc_805322d:                             ; preds = %dec_label_pc_805321b
  store i32 %v1_8052f4f, i32* %esi.global-to-local, align 4
  %v2_8053233 = sub i32 %v1_8053224, %v1_8052f4f
  store i32 %v2_8053233, i32* %ecx.global-to-local, align 4
  %v2_8053235 = add i32 %v0_805321b, %v1_8052f4f
  store i32 %v2_8053235, i32* %edx.global-to-local, align 4
  %v1_8053238 = or i32 %v1_8052f4f, 1
  store i32 %v1_8053238, i32* %eax.global-to-local, align 4
  store i32 %v2_8053235, i32* @global_var_805642c.47, align 4
  store i32 %v1_8053238, i32* %v2_8053221, align 4
  %v0_8053244.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053244

dec_label_pc_8053244:                             ; preds = %dec_label_pc_8052ed5, %dec_label_pc_805322d
  %v0_8053244 = phi i32 [ %v5_8052ee8, %dec_label_pc_8052ed5 ], [ %v0_8053244.pre, %dec_label_pc_805322d ]
  %v1_8053244 = or i32 %v0_8053244, 1
  store i32 %v1_8053244, i32* %ecx.global-to-local, align 4
  %v0_8053247 = load i32, i32* @ebx, align 4
  %v1_8053247 = add i32 %v0_8053247, 8
  store i32 %v1_8053247, i32* %ebx.global-to-local, align 4
  %v1_805324a = load i32, i32* %edx.global-to-local, align 4
  %v2_805324a = add i32 %v1_805324a, 4
  %v3_805324a = inttoptr i32 %v2_805324a to i32*
  store i32 %v1_8053244, i32* %v3_805324a, align 4
  br label %dec_label_pc_80532b4

dec_label_pc_805324f:                             ; preds = %dec_label_pc_8052c8f
  %v5_8053255 = sub i32 %v1_8052c72, %v1_8052f4f
  store i32 %v5_8053255, i32* %eax.global-to-local, align 4
  %v2_8053259 = add i32 %v1_8053266, %v1_8052f4f
  store i32 %v2_8053259, i32* %edx.global-to-local, align 4
  %v1_805325d = or i32 %v1_8052f4f, 1
  store i32 %v2_8053259, i32* @global_var_8056430.48, align 16
  store i32 %v1_805325d, i32* %v2_8052c6c, align 4
  %v0_8053269 = load i32, i32* %eax.global-to-local, align 4
  %v0_805326b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805326b, i32* @global_var_805643c.65, align 4
  %v1_8053271 = or i32 %v0_8053269, 1
  store i32 %v1_8053271, i32* %ecx.global-to-local, align 4
  store i32 %v0_805326b, i32* @global_var_8056440.50, align 64
  %v1_805327a = add i32 %v0_805326b, 8
  %v2_805327a = inttoptr i32 %v1_805327a to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_805327a, align 4
  %v0_8053281 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053281 = add i32 %v0_8053281, 12
  %v2_8053281 = inttoptr i32 %v1_8053281 to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8053281, align 4
  %v0_8053288 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053288 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053288 = add i32 %v1_8053288, 4
  %v3_8053288 = inttoptr i32 %v2_8053288 to i32*
  store i32 %v0_8053288, i32* %v3_8053288, align 4
  %v0_805328b = load i32, i32* %eax.global-to-local, align 4
  %v1_805328b = load i32, i32* %edx.global-to-local, align 4
  %v3_805328b = add i32 %v1_805328b, %v0_805328b
  %v4_805328b = inttoptr i32 %v3_805328b to i32*
  store i32 %v0_805328b, i32* %v4_805328b, align 4
  br label %dec_label_pc_8053299

dec_label_pc_8053290:                             ; preds = %dec_label_pc_8052c9e
  store i32 %v1_8052f4f, i32* %ebx.global-to-local, align 4
  %v0_8053294 = load i32, i32* @ebp, align 4
  %v2_8053294 = or i32 %v1_8052f4f, 4
  %v3_8053294 = add i32 %v0_8053294, %v2_8053294
  %v4_8053294 = inttoptr i32 %v3_8053294 to i32*
  %v5_8053294 = load i32, i32* %v4_8053294, align 4
  %v6_8053294 = or i32 %v5_8053294, 1
  store i32 %v6_8053294, i32* %v4_8053294, align 4
  br label %dec_label_pc_8053299

dec_label_pc_8053299:                             ; preds = %dec_label_pc_805324f, %dec_label_pc_8053290
  %v0_8053299 = load i32, i32* @ebp, align 4
  %v1_8053299 = add i32 %v0_8053299, 8
  store i32 %v1_8053299, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532b4

dec_label_pc_805329e:                             ; preds = %dec_label_pc_8052d8e
  %v1_805329e = load i32, i32* @ebx, align 4
  %v2_805329e = add i32 %v0_8052d9d, 4
  %v3_805329e = add i32 %v2_805329e, %v1_805329e
  %v4_805329e = inttoptr i32 %v3_805329e to i32*
  %v5_805329e = load i32, i32* %v4_805329e, align 4
  %v6_805329e = or i32 %v5_805329e, 1
  store i32 %v6_805329e, i32* %v4_805329e, align 4
  br label %dec_label_pc_80532a3

dec_label_pc_80532a3:                             ; preds = %dec_label_pc_8052da6, %dec_label_pc_805329e
  %v0_80532a3 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80532a3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80532b4

dec_label_pc_80532a7:                             ; preds = %dec_label_pc_8053065, %dec_label_pc_805321b, %dec_label_pc_805306f
  %v0_80532a7 = load i32, i32* %stack_var_-92, align 4
  %v1_80532a7 = call i32 @function_80526fd(i32 %v0_80532a7)
  store i32 %v1_80532a7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80532ae = inttoptr i32 %v1_80532a7 to i32*
  store i32 12, i32* %v1_80532ae, align 4
  br label %dec_label_pc_80532b4

dec_label_pc_80532b4:                             ; preds = %dec_label_pc_80532a3, %dec_label_pc_8053299, %dec_label_pc_8053244, %dec_label_pc_8052f00, %dec_label_pc_8052eb2, %dec_label_pc_8052c39, %dec_label_pc_80532a7
  store i32 %v2_8052b70, i32* @eax, align 4
  store i32 %v2_8052b70, i32* %stack_var_-92, align 4
  %v2_80532bd = call i32 @function_8053f44(i32 %v2_8052b70, i32 1)
  store i32 %v2_80532bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532c5

dec_label_pc_80532c5:                             ; preds = %dec_label_pc_8052b8e, %dec_label_pc_80532b4
  %v0_80532c8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80532c8, i32* %eax.global-to-local, align 4
  %v2_80532ca = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80532ca, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052b5d, i32* @esi, align 4
  store i32 %v0_8052b5c, i32* @edi, align 4
  store i32 %v0_8052b5b, i32* @ebp, align 4
  ret i32 %v0_80532c8

; uselistorder directives
  uselistorder i32 %v0_805328b, { 1, 0 }
  uselistorder i32 %v0_805326b, { 1, 0, 2 }
  uselistorder i32 %v2_8053208, { 1, 0, 2 }
  uselistorder i32 %v0_80531f6, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805318d, { 1, 0 }
  uselistorder i32 %v2_805317b, { 1, 0 }
  uselistorder i32 %v1_8053132, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805311c, { 1, 0, 2 }
  uselistorder i32 %v2_8053110, { 1, 2, 0 }
  uselistorder i32 %v2_805310b, { 1, 0, 2 }
  uselistorder i32 %v1_80530fb, { 2, 1, 0 }
  uselistorder i8 %v0_80530c9, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80530ac, { 1, 0, 2 }
  uselistorder i32 %v0_805316093, { 2, 0, 1 }
  uselistorder i32 %v0_805316e94, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_80530a6, { 2, 1, 0 }
  uselistorder i32 %v8_805307c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053079, { 1, 0 }
  uselistorder i32 %v0_8053058, { 1, 0 }
  uselistorder i32 %v2_8053029, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8053021, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_805300e, { 1, 0 }
  uselistorder i1 %v2_8053005, { 2, 1, 0 }
  uselistorder i32 %v1_8053005, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_8052ff2, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8052fd6, { 1, 0, 2 }
  uselistorder i32 %v2_8052fc2, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052f8b, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052f7f, { 2, 1, 0 }
  uselistorder i32 %v8_8052f6e, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052f55, { 1, 0, 2 }
  uselistorder i32 %v0_8052ef1, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052ec4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052eba, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052eac, { 1, 0 }
  uselistorder i32 %v1_8052e43, { 1, 0 }
  uselistorder i32 %v3_8052e37, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052e47, { 1, 0 }
  uselistorder i32 %v2_8052e31, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052e2e7, { 1, 0 }
  uselistorder i32 %v2_8052e23, { 1, 0 }
  uselistorder i32 %v1_8052e07, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052e03, { 2, 1, 0 }
  uselistorder i32 %v1_8052dff, { 1, 0 }
  uselistorder i32 %v1_8052df3, { 2, 1, 0 }
  uselistorder i32 %v2_8052de9, { 1, 0 }
  uselistorder i32 %v1_8052de6, { 1, 2, 0 }
  uselistorder i32 %v4_8052d84, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8052dcf, { 1, 0 }
  uselistorder i32 %v0_8052d9d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052d70, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052d3d, { 0, 2, 1 }
  uselistorder i32 %v2_8052d21, { 1, 0 }
  uselistorder i32 %v1_8052d17, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052d12.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052d02, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052cf9, { 1, 0, 2 }
  uselistorder i32 %v2_8052cd5, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052cbd, { 2, 1, 0 }
  uselistorder i32 %v0_8052ca9, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052c6f, { 1, 0, 2 }
  uselistorder i32 %v1_8053266, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8052d3d9, { 1, 0, 2 }
  uselistorder i32 %v3_8052c1c, { 1, 0, 2 }
  uselistorder i32 %v2_8052c0e, { 2, 1, 0 }
  uselistorder i32 %v2_8052be9, { 2, 1, 0 }
  uselistorder i8 %v0_8052bb7, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8052f4f, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8052ba0, { 0, 2, 1 }
  uselistorder i32 %v0_8052b89, { 1, 0 }
  uselistorder i32 %v2_8052b70, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 22, 21, 23, 24, 28, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 17, 10, 18, 11, 12, 13, 14, 15, 16, 0, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8056760.62, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_805425c, { 1, 0 }
  uselistorder i32 134571060, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8056440.50, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_8052b35, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805642c.47 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805642c.47 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80532c5, { 1, 0 }
  uselistorder label %dec_label_pc_80532b4, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80532a7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80532a3, { 1, 0 }
  uselistorder label %dec_label_pc_8053299, { 1, 0 }
  uselistorder label %dec_label_pc_8053244, { 1, 0 }
  uselistorder label %dec_label_pc_805321b, { 1, 0 }
  uselistorder label %dec_label_pc_8053208, { 1, 0 }
  uselistorder label %dec_label_pc_80531f6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053188, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053183, { 1, 0 }
  uselistorder label %dec_label_pc_8053167, { 1, 0 }
  uselistorder label %dec_label_pc_8053110, { 1, 0 }
  uselistorder label %dec_label_pc_80530f9, { 1, 0 }
  uselistorder label %dec_label_pc_80530e2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053065, { 1, 0 }
  uselistorder label %dec_label_pc_8053058, { 1, 0 }
  uselistorder label %dec_label_pc_8053019, { 1, 0 }
  uselistorder label %dec_label_pc_8052ff2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052fd6, { 1, 0 }
  uselistorder label %dec_label_pc_8052fbd, { 1, 0 }
  uselistorder label %dec_label_pc_8052f9f, { 1, 0 }
  uselistorder label %dec_label_pc_8052eba, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052eb2, { 1, 0 }
  uselistorder label %dec_label_pc_8052e9b, { 1, 0 }
  uselistorder label %dec_label_pc_8052e2e, { 1, 0 }
  uselistorder label %dec_label_pc_8052e33.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052e07, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052d8e, { 1, 0 }
  uselistorder label %dec_label_pc_8052d3d, { 1, 0 }
  uselistorder label %dec_label_pc_8052d15, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052cfe, { 1, 0 }
  uselistorder label %dec_label_pc_8052c6c, { 1, 0 }
  uselistorder label %dec_label_pc_8052d3d.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c39, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052bb7, { 1, 0 }
}

define i32 @function_80532cf(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80532cf:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80532cf = load i32, i32* @edi, align 4
  %v0_80532d1 = load i32, i32* @ebx, align 4
  %v12_80532d2 = ptrtoint i32* %stack_var_-28 to i32
  %v4_80532d5 = trunc i64 %arg1 to i32
  %sext = mul i64 %arg1, 4294967296
  %v2_80532df = sdiv i64 %sext, 4294967296
  %v3_80532df = sext i32 %arg2 to i64
  %v4_80532df = mul nsw i64 %v3_80532df, %v2_80532df
  %v5_80532df = trunc i64 %v4_80532df to i32
  store i32 %v5_80532df, i32* @ebx, align 4
  %v2_80532e2 = icmp eq i32 %v4_80532d5, 0
  br i1 %v2_80532e2, label %dec_label_pc_8053304, label %dec_label_pc_80532e6

dec_label_pc_80532e6:                             ; preds = %dec_label_pc_80532cf
  store i32 %v4_80532d5, i32* @edi, align 4
  %div = udiv i32 %v5_80532df, %v4_80532d5
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_80532ee = icmp eq i32 %div, %arg2
  br i1 %v12_80532ee, label %dec_label_pc_8053304, label %dec_label_pc_80532f2

dec_label_pc_80532f2:                             ; preds = %dec_label_pc_80532e6
  %v1_80532f2 = call i32 @function_80526fd(i32 %v0_80532d1)
  store i32 %v1_80532f2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80532f9 = inttoptr i32 %v1_80532f2 to i32*
  store i32 12, i32* %v1_80532f9, align 4
  br label %dec_label_pc_80533ba

dec_label_pc_8053304:                             ; preds = %dec_label_pc_80532e6, %dec_label_pc_80532cf
  store i32 %v12_80532d2, i32* @eax, align 4
  %v2_8053314 = call i32 @function_8053f44(i32 %v12_80532d2, i32 134561601)
  store i32 %v2_8053314, i32* %eax.global-to-local, align 4
  %v1_8053320 = call i32 @function_8053f41(i32 ptrtoint (i32* @global_var_805603c.45 to i32))
  store i32 %v1_8053320, i32* %eax.global-to-local, align 4
  %v0_8053325 = load i32, i32* @ebx, align 4
  %v1_8053328 = call i32 @function_8052b5b(i32 %v0_8053325)
  store i32 %v1_8053328, i32* %eax.global-to-local, align 4
  store i32 %v1_8053328, i32* %ebx.global-to-local, align 4
  %v1_8053332 = icmp eq i32 %v1_8053328, 0
  br i1 %v1_8053332, label %dec_label_pc_80533a9, label %dec_label_pc_8053336

dec_label_pc_8053336:                             ; preds = %dec_label_pc_8053304
  %v1_8053336 = add i32 %v1_8053328, -4
  %v2_8053336 = inttoptr i32 %v1_8053336 to i32*
  %v3_8053336 = load i32, i32* %v2_8053336, align 4
  store i32 %v3_8053336, i32* %eax.global-to-local, align 4
  %v2_8053339 = and i32 %v3_8053336, 2
  %v3_8053339 = icmp eq i32 %v2_8053339, 0
  %v1_805333b = icmp eq i1 %v3_8053339, false
  br i1 %v1_805333b, label %dec_label_pc_80533a9, label %dec_label_pc_805333d

dec_label_pc_805333d:                             ; preds = %dec_label_pc_8053336
  %v1_805333d3 = add i32 %v3_8053336, -4
  %v1_8053340 = and i32 %v1_805333d3, -4
  %v2_8053345 = udiv i32 %v1_8053340, 4
  store i32 %v2_8053345, i32* %eax.global-to-local, align 4
  %v5_8053348 = icmp ult i32 %v1_8053340, 36
  %tmp = and i32 %v1_805333d3, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_805334b = or i1 %v5_8053348, %tmp18
  br i1 %v2_805334b, label %dec_label_pc_805335c, label %dec_label_pc_805334d

dec_label_pc_805334d:                             ; preds = %dec_label_pc_805333d
  %v3_8053352 = inttoptr i32 %v1_8053328 to i8*
  %v4_8053352 = call i32 @function_805274e(i8* %v3_8053352, i32 0, i32 %v1_8053340)
  store i32 %v4_8053352, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533a9

dec_label_pc_805335c:                             ; preds = %dec_label_pc_805333d
  %v1_805335c = inttoptr i32 %v1_8053328 to i32*
  store i32 0, i32* %v1_805335c, align 4
  %v0_8053362 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053362 = add i32 %v0_8053362, 4
  %v2_8053362 = inttoptr i32 %v1_8053362 to i32*
  store i32 0, i32* %v2_8053362, align 4
  %v0_8053369 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053369 = add i32 %v0_8053369, 8
  %v2_8053369 = inttoptr i32 %v1_8053369 to i32*
  store i32 0, i32* %v2_8053369, align 4
  %v0_8053370 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8053370, 5
  br i1 %tmp15, label %dec_label_pc_80533a9, label %dec_label_pc_8053375

dec_label_pc_8053375:                             ; preds = %dec_label_pc_805335c
  %v0_8053375 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053375 = add i32 %v0_8053375, 12
  %v2_8053375 = inttoptr i32 %v1_8053375 to i32*
  store i32 0, i32* %v2_8053375, align 4
  %v0_805337c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805337c = add i32 %v0_805337c, 16
  %v2_805337c = inttoptr i32 %v1_805337c to i32*
  store i32 0, i32* %v2_805337c, align 4
  %v0_8053383 = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8053383, 7
  br i1 %tmp16, label %dec_label_pc_80533a9, label %dec_label_pc_8053388

dec_label_pc_8053388:                             ; preds = %dec_label_pc_8053375
  %v0_8053388 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053388 = add i32 %v0_8053388, 20
  %v2_8053388 = inttoptr i32 %v1_8053388 to i32*
  store i32 0, i32* %v2_8053388, align 4
  %v0_805338f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805338f = add i32 %v0_805338f, 24
  %v2_805338f = inttoptr i32 %v1_805338f to i32*
  store i32 0, i32* %v2_805338f, align 4
  %v0_8053396 = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_8053396, 9
  br i1 %tmp17, label %dec_label_pc_80533a9, label %dec_label_pc_805339b

dec_label_pc_805339b:                             ; preds = %dec_label_pc_8053388
  %v0_805339b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805339b = add i32 %v0_805339b, 28
  %v2_805339b = inttoptr i32 %v1_805339b to i32*
  store i32 0, i32* %v2_805339b, align 4
  %v0_80533a2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80533a2 = add i32 %v0_80533a2, 32
  %v2_80533a2 = inttoptr i32 %v1_80533a2 to i32*
  store i32 0, i32* %v2_80533a2, align 4
  br label %dec_label_pc_80533a9

dec_label_pc_80533a9:                             ; preds = %dec_label_pc_8053388, %dec_label_pc_8053375, %dec_label_pc_805335c, %dec_label_pc_8053336, %dec_label_pc_8053304, %dec_label_pc_805334d, %dec_label_pc_805339b
  store i32 %v12_80532d2, i32* @eax, align 4
  %v2_80533b2 = call i32 @function_8053f44(i32 %v12_80532d2, i32 1)
  store i32 %v2_80533b2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533ba

dec_label_pc_80533ba:                             ; preds = %dec_label_pc_80532f2, %dec_label_pc_80533a9
  %v0_80533bd = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80533bd, i32* %eax.global-to-local, align 4
  store i32 %v0_80532d1, i32* @ebx, align 4
  store i32 %v0_80532cf, i32* @edi, align 4
  ret i32 %v0_80533bd

; uselistorder directives
  uselistorder i32 %v1_8053340, { 2, 1, 0 }
  uselistorder i32 %v1_8053328, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_80533ba, { 1, 0 }
  uselistorder label %dec_label_pc_80533a9, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_80533c3(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80533c3:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80533c6 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_80533ce = icmp eq i32* %arg1, null
  %v1_80533d3 = icmp eq i1 %v4_80533ce, false
  br i1 %v1_80533d3, label %dec_label_pc_80533e5, label %dec_label_pc_80533d5

dec_label_pc_80533d5:                             ; preds = %dec_label_pc_80533c3
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_80533d9 = call i32 @function_8052b5b(i32 %arg2)
  store i32 %v1_80533d9, i32* %eax.global-to-local, align 4
  store i32 %v1_80533d9, i32* @ebx, align 4
  br label %dec_label_pc_80536de

dec_label_pc_80533e5:                             ; preds = %dec_label_pc_80533c3
  %v1_80533e5 = icmp eq i32 %arg2, 0
  %v1_80533e7 = icmp eq i1 %v1_80533e5, false
  br i1 %v1_80533e7, label %dec_label_pc_80533fa, label %dec_label_pc_80533e9

dec_label_pc_80533e9:                             ; preds = %dec_label_pc_80533e5
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80533f0 = call i32 @function_8053920(i32 %tmp7)
  store i32 %v1_80533f0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536de

dec_label_pc_80533fa:                             ; preds = %dec_label_pc_80533e5
  %v2_8053405 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053405, i32* @eax, align 4
  store i32 %v2_8053405, i32* %stack_var_-60, align 4
  %v2_805340a = call i32 @function_8053f44(i32 %v2_8053405, i32 134561601)
  store i32 %v2_805340a, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805603c.45 to i32), i32* %stack_var_-60, align 4
  %v1_8053416 = call i32 @function_8053f41(i32 ptrtoint (i32* @global_var_805603c.45 to i32))
  store i32 %v1_8053416, i32* %eax.global-to-local, align 4
  %v0_805341e = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_805341e, -32
  br i1 %tmp20, label %dec_label_pc_8053435, label %dec_label_pc_8053423

dec_label_pc_8053423:                             ; preds = %dec_label_pc_80533fa
  %v0_8053423 = load i32, i32* %stack_var_-60, align 4
  %v1_8053423 = call i32 @function_80526fd(i32 %v0_8053423)
  store i32 %v1_8053423, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805342a = inttoptr i32 %v1_8053423 to i32*
  store i32 12, i32* %v1_805342a, align 4
  br label %dec_label_pc_80536e1

dec_label_pc_8053435:                             ; preds = %dec_label_pc_80533fa
  %v1_8053435 = add i32 %v0_805341e, 11
  %tmp21 = icmp ult i32 %v1_8053435, 16
  br i1 %tmp21, label %dec_label_pc_805344c, label %dec_label_pc_8053445

dec_label_pc_8053445:                             ; preds = %dec_label_pc_8053435
  %v1_8053445 = and i32 %v1_8053435, -8
  br label %dec_label_pc_805344c

dec_label_pc_805344c:                             ; preds = %dec_label_pc_8053435, %dec_label_pc_8053445
  %stack_var_-40.0 = phi i32 [ %v1_8053445, %dec_label_pc_8053445 ], [ 16, %dec_label_pc_8053435 ]
  %storemerge27 = phi i32 [ %v1_8053445, %dec_label_pc_8053445 ], [ %v1_8053435, %dec_label_pc_8053435 ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_8053450 = add i32 %tmp7, -8
  store i32 %v1_8053450, i32* @edi, align 4
  %v1_8053453 = add i32 %tmp7, -4
  %v2_8053453 = inttoptr i32 %v1_8053453 to i32*
  %v3_8053453 = load i32, i32* %v2_8053453, align 4
  store i32 %v3_8053453, i32* %edx.global-to-local, align 4
  %v1_8053458 = and i32 %v3_8053453, -4
  store i32 %v1_8053458, i32* %eax.global-to-local, align 4
  %v2_805345f = and i32 %v3_8053453, 2
  %v3_805345f = icmp eq i32 %v2_805345f, 0
  %v1_8053462 = icmp eq i1 %v3_805345f, false
  br i1 %v1_8053462, label %dec_label_pc_80535fc, label %dec_label_pc_8053468

dec_label_pc_8053468:                             ; preds = %dec_label_pc_805344c
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053458, i32* @ebx, align 4
  %v7_805346e = icmp ult i32 %v1_8053458, %stack_var_-40.0
  %v1_8053470 = icmp eq i1 %v7_805346e, false
  br i1 %v1_8053470, label %dec_label_pc_80535a7, label %dec_label_pc_8053476

dec_label_pc_8053476:                             ; preds = %dec_label_pc_8053468
  %v2_8053476 = add i32 %v1_8053458, %v1_8053450
  store i32 %v2_8053476, i32* @esi, align 4
  %v1_8053479 = load i32, i32* @global_var_805642c.47, align 4
  %v12_8053479 = icmp eq i32 %v2_8053476, %v1_8053479
  %v1_805347f = icmp eq i1 %v12_8053479, false
  %v1_80534b9 = add i32 %v2_8053476, 4
  %v2_80534b9 = inttoptr i32 %v1_80534b9 to i32*
  %v3_80534b9 = load i32, i32* %v2_80534b9, align 4
  br i1 %v1_805347f, label %dec_label_pc_80534b9, label %dec_label_pc_8053481

dec_label_pc_8053481:                             ; preds = %dec_label_pc_8053476
  %v1_8053486 = and i32 %v3_80534b9, -4
  %v2_8053489 = add i32 %v1_8053486, %v1_8053458
  store i32 %v2_8053489, i32* %ecx.global-to-local, align 4
  %v1_805348f = add i32 %stack_var_-40.0, 16
  store i32 %v1_805348f, i32* %eax.global-to-local, align 4
  %v7_8053492 = icmp ult i32 %v2_8053489, %v1_805348f
  br i1 %v7_8053492, label %dec_label_pc_80534f7, label %dec_label_pc_8053496

dec_label_pc_8053496:                             ; preds = %dec_label_pc_8053481
  %v1_8053496 = urem i32 %v3_8053453, 2
  %v5_8053499 = or i32 %v1_8053496, %stack_var_-40.0
  store i32 %v5_8053499, i32* %edx.global-to-local, align 4
  store i32 %v5_8053499, i32* %v2_8053453, align 4
  %v0_80534a4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80534a4 = sub i32 %v0_80534a4, %stack_var_-40.0
  %v0_80534a6 = load i32, i32* @edi, align 4
  %v2_80534a6 = add i32 %v0_80534a6, %stack_var_-40.0
  store i32 %v2_80534a6, i32* %eax.global-to-local, align 4
  %v1_80534a9 = or i32 %v2_80534a4, 1
  store i32 %v1_80534a9, i32* %ecx.global-to-local, align 4
  store i32 %v2_80534a6, i32* @global_var_805642c.47, align 4
  %v2_80534b1 = add i32 %v2_80534a6, 4
  %v3_80534b1 = inttoptr i32 %v2_80534b1 to i32*
  store i32 %v1_80534a9, i32* %v3_80534b1, align 4
  br label %dec_label_pc_80536cc

dec_label_pc_80534b9:                             ; preds = %dec_label_pc_8053476
  store i32 %v3_80534b9, i32* %edx.global-to-local, align 4
  %v1_80534be = and i32 %v3_80534b9, -2
  store i32 %v1_80534be, i32* %eax.global-to-local, align 4
  %v3_80534c1 = add i32 %v1_80534b9, %v1_80534be
  %v4_80534c1 = inttoptr i32 %v3_80534c1 to i8*
  %v5_80534c1 = load i8, i8* %v4_80534c1, align 1
  %v6_80534c1 = urem i8 %v5_80534c1, 2
  %v7_80534c1 = icmp eq i8 %v6_80534c1, 0
  %v1_80534c6 = icmp eq i1 %v7_80534c1, false
  br i1 %v1_80534c6, label %dec_label_pc_80534f7, label %dec_label_pc_80534c8

dec_label_pc_80534c8:                             ; preds = %dec_label_pc_80534b9
  %v1_80534c8 = and i32 %v3_80534b9, -4
  store i32 %v1_80534c8, i32* %edx.global-to-local, align 4
  %v2_80534cf = add i32 %v1_80534c8, %v1_8053458
  store i32 %v2_80534cf, i32* @ebx, align 4
  %v10_80534d1 = icmp ult i32 %v2_80534cf, %stack_var_-40.0
  br i1 %v10_80534d1, label %dec_label_pc_80534f7, label %dec_label_pc_80534d7

dec_label_pc_80534d7:                             ; preds = %dec_label_pc_80534c8
  %v1_80534d7 = add i32 %v1_8053458, %tmp7
  %v2_80534d7 = inttoptr i32 %v1_80534d7 to i32*
  %v3_80534d7 = load i32, i32* %v2_80534d7, align 4
  store i32 %v3_80534d7, i32* @edx, align 4
  %v1_80534da = add i32 %v2_8053476, 12
  %v2_80534da = inttoptr i32 %v1_80534da to i32*
  %v3_80534da = load i32, i32* %v2_80534da, align 4
  store i32 %v3_80534da, i32* %eax.global-to-local, align 4
  %v1_80534dd = add i32 %v3_80534d7, 12
  %v2_80534dd = inttoptr i32 %v1_80534dd to i32*
  %v3_80534dd = load i32, i32* %v2_80534dd, align 4
  %v15_80534dd = icmp eq i32 %v3_80534dd, %v2_8053476
  %v1_80534e0 = icmp eq i1 %v15_80534dd, false
  br i1 %v1_80534e0, label %dec_label_pc_80534e7, label %dec_label_pc_80534e2

dec_label_pc_80534e2:                             ; preds = %dec_label_pc_80534d7
  %v1_80534e2 = add i32 %v3_80534da, 8
  %v2_80534e2 = inttoptr i32 %v1_80534e2 to i32*
  %v3_80534e2 = load i32, i32* %v2_80534e2, align 4
  %v15_80534e2 = icmp eq i32 %v3_80534e2, %v2_8053476
  br i1 %v15_80534e2, label %dec_label_pc_80534ec, label %dec_label_pc_80534e7

dec_label_pc_80534e7:                             ; preds = %dec_label_pc_80534e2, %dec_label_pc_80534d7
  %v0_80534e7 = call i32 @function_8053abc()
  store i32 %v0_80534e7, i32* %eax.global-to-local, align 4
  %v1_80534ec.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80534ec

dec_label_pc_80534ec:                             ; preds = %dec_label_pc_80534e2, %dec_label_pc_80534e7
  %v1_80534ec = phi i32 [ %v3_80534d7, %dec_label_pc_80534e2 ], [ %v1_80534ec.pre, %dec_label_pc_80534e7 ]
  %v0_80534ec = phi i32 [ %v3_80534da, %dec_label_pc_80534e2 ], [ %v0_80534e7, %dec_label_pc_80534e7 ]
  %v2_80534ec = add i32 %v1_80534ec, 12
  %v3_80534ec = inttoptr i32 %v2_80534ec to i32*
  store i32 %v0_80534ec, i32* %v3_80534ec, align 4
  %v0_80534ef = load i32, i32* @edx, align 4
  %v1_80534ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80534ef = add i32 %v1_80534ef, 8
  %v3_80534ef = inttoptr i32 %v2_80534ef to i32*
  store i32 %v0_80534ef, i32* %v3_80534ef, align 4
  %v0_80535a7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80535a7

dec_label_pc_80534f7:                             ; preds = %dec_label_pc_80534c8, %dec_label_pc_80534b9, %dec_label_pc_8053481
  %v1_80534fe = add i32 %stack_var_-40.0, -7
  store i32 %v1_80534fe, i32* %eax.global-to-local, align 4
  store i32 %v1_80534fe, i32* %stack_var_-60, align 4
  %v1_8053502 = call i32 @function_8052b5b(i32 %v1_80534fe)
  store i32 %v1_8053502, i32* %eax.global-to-local, align 4
  store i32 %v1_8053502, i32* %edx.global-to-local, align 4
  %v1_805350c = icmp eq i32 %v1_8053502, 0
  br i1 %v1_805350c, label %dec_label_pc_80536c8, label %dec_label_pc_8053514

dec_label_pc_8053514:                             ; preds = %dec_label_pc_80534f7
  %v1_8053514 = add i32 %v1_8053502, -8
  store i32 %v1_8053514, i32* %ebx.global-to-local, align 4
  %v1_8053517 = load i32, i32* @esi, align 4
  %v12_8053517 = icmp eq i32 %v1_8053514, %v1_8053517
  %v1_8053519 = add i32 %v1_8053502, -4
  %v2_8053519 = inttoptr i32 %v1_8053519 to i32*
  %v3_8053519 = load i32, i32* %v2_8053519, align 4
  store i32 %v3_8053519, i32* %eax.global-to-local, align 4
  %v1_805351c = icmp eq i1 %v12_8053517, false
  br i1 %v1_805351c, label %dec_label_pc_805352a, label %dec_label_pc_805351e

dec_label_pc_805351e:                             ; preds = %dec_label_pc_8053514
  %v1_805351e = and i32 %v3_8053519, -4
  store i32 %v1_805351e, i32* %eax.global-to-local, align 4
  store i32 %v1_8053458, i32* %edx.global-to-local, align 4
  %v2_8053525 = add i32 %v1_805351e, %v1_8053458
  store i32 %v2_8053525, i32* @ebx, align 4
  br label %dec_label_pc_80535a7

dec_label_pc_805352a:                             ; preds = %dec_label_pc_8053514
  %v1_805352e = add i32 %v1_8053458, -4
  store i32 %v1_805352e, i32* %eax.global-to-local, align 4
  %v2_8053533 = udiv i32 %v1_805352e, 4
  store i32 %v2_8053533, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805352e, 37
  br i1 %tmp, label %dec_label_pc_805354c, label %dec_label_pc_805353b

dec_label_pc_805353b:                             ; preds = %dec_label_pc_805352a
  store i32 %v1_8053502, i32* %stack_var_-60, align 4
  %v3_8053542 = inttoptr i32 %v1_8053502 to i16*
  %v4_8053542 = call i32 @function_8054806(i16* %v3_8053542, i32 %tmp7, i32 %v1_805352e)
  store i32 %v4_8053542, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053593

dec_label_pc_805354c:                             ; preds = %dec_label_pc_805352a
  store i32 %tmp7, i32* @esi, align 4
  %v2_8053553 = load i32, i32* %arg1, align 4
  store i32 %v2_8053553, i32* %eax.global-to-local, align 4
  %v2_8053555 = inttoptr i32 %v1_8053502 to i32*
  store i32 %v2_8053553, i32* %v2_8053555, align 4
  %v0_8053557 = load i32, i32* @esi, align 4
  %v1_8053557 = add i32 %v0_8053557, 4
  %v2_8053557 = inttoptr i32 %v1_8053557 to i32*
  %v3_8053557 = load i32, i32* %v2_8053557, align 4
  store i32 %v3_8053557, i32* %eax.global-to-local, align 4
  %v1_805355a = load i32, i32* %edx.global-to-local, align 4
  %v2_805355a = add i32 %v1_805355a, 4
  %v3_805355a = inttoptr i32 %v2_805355a to i32*
  store i32 %v3_8053557, i32* %v3_805355a, align 4
  %v0_805355d = load i32, i32* @esi, align 4
  %v1_805355d = add i32 %v0_805355d, 8
  %v2_805355d = inttoptr i32 %v1_805355d to i32*
  %v3_805355d = load i32, i32* %v2_805355d, align 4
  store i32 %v3_805355d, i32* %eax.global-to-local, align 4
  %v1_8053560 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053560 = add i32 %v1_8053560, 8
  %v3_8053560 = inttoptr i32 %v2_8053560 to i32*
  store i32 %v3_805355d, i32* %v3_8053560, align 4
  %tmp28 = icmp ult i32 %v1_805352e, 17
  br i1 %tmp28, label %dec_label_pc_8053593, label %dec_label_pc_8053565

dec_label_pc_8053565:                             ; preds = %dec_label_pc_805354c
  %v0_8053565 = load i32, i32* @esi, align 4
  %v1_8053565 = add i32 %v0_8053565, 12
  %v2_8053565 = inttoptr i32 %v1_8053565 to i32*
  %v3_8053565 = load i32, i32* %v2_8053565, align 4
  store i32 %v3_8053565, i32* %eax.global-to-local, align 4
  %v0_8053568 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805356b = load i32, i32* %edx.global-to-local, align 4
  %v2_805356b = add i32 %v1_805356b, 12
  %v3_805356b = inttoptr i32 %v2_805356b to i32*
  store i32 %v3_8053565, i32* %v3_805356b, align 4
  %v0_805356e = load i32, i32* @esi, align 4
  %v1_805356e = add i32 %v0_805356e, 16
  %v2_805356e = inttoptr i32 %v1_805356e to i32*
  %v3_805356e = load i32, i32* %v2_805356e, align 4
  store i32 %v3_805356e, i32* %eax.global-to-local, align 4
  %v1_8053571 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053571 = add i32 %v1_8053571, 16
  %v3_8053571 = inttoptr i32 %v2_8053571 to i32*
  store i32 %v3_805356e, i32* %v3_8053571, align 4
  %tmp22 = icmp ult i32 %v0_8053568, 7
  br i1 %tmp22, label %dec_label_pc_8053593, label %dec_label_pc_8053576

dec_label_pc_8053576:                             ; preds = %dec_label_pc_8053565
  %v0_8053576 = load i32, i32* @esi, align 4
  %v1_8053576 = add i32 %v0_8053576, 20
  %v2_8053576 = inttoptr i32 %v1_8053576 to i32*
  %v3_8053576 = load i32, i32* %v2_8053576, align 4
  store i32 %v3_8053576, i32* %eax.global-to-local, align 4
  %v0_8053579 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805357c = load i32, i32* %edx.global-to-local, align 4
  %v2_805357c = add i32 %v1_805357c, 20
  %v3_805357c = inttoptr i32 %v2_805357c to i32*
  store i32 %v3_8053576, i32* %v3_805357c, align 4
  %v0_805357f = load i32, i32* @esi, align 4
  %v1_805357f = add i32 %v0_805357f, 24
  %v2_805357f = inttoptr i32 %v1_805357f to i32*
  %v3_805357f = load i32, i32* %v2_805357f, align 4
  store i32 %v3_805357f, i32* %eax.global-to-local, align 4
  %v1_8053582 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053582 = add i32 %v1_8053582, 24
  %v3_8053582 = inttoptr i32 %v2_8053582 to i32*
  store i32 %v3_805357f, i32* %v3_8053582, align 4
  %tmp23 = icmp ult i32 %v0_8053579, 9
  br i1 %tmp23, label %dec_label_pc_8053593, label %dec_label_pc_8053587

dec_label_pc_8053587:                             ; preds = %dec_label_pc_8053576
  %v0_8053587 = load i32, i32* @esi, align 4
  %v1_8053587 = add i32 %v0_8053587, 28
  %v2_8053587 = inttoptr i32 %v1_8053587 to i32*
  %v3_8053587 = load i32, i32* %v2_8053587, align 4
  store i32 %v3_8053587, i32* %eax.global-to-local, align 4
  %v1_805358a = load i32, i32* %edx.global-to-local, align 4
  %v2_805358a = add i32 %v1_805358a, 28
  %v3_805358a = inttoptr i32 %v2_805358a to i32*
  store i32 %v3_8053587, i32* %v3_805358a, align 4
  %v0_805358d = load i32, i32* @esi, align 4
  %v1_805358d = add i32 %v0_805358d, 32
  %v2_805358d = inttoptr i32 %v1_805358d to i32*
  %v3_805358d = load i32, i32* %v2_805358d, align 4
  store i32 %v3_805358d, i32* %eax.global-to-local, align 4
  %v1_8053590 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053590 = add i32 %v1_8053590, 32
  %v3_8053590 = inttoptr i32 %v2_8053590 to i32*
  store i32 %v3_805358d, i32* %v3_8053590, align 4
  br label %dec_label_pc_8053593

dec_label_pc_8053593:                             ; preds = %dec_label_pc_8053576, %dec_label_pc_8053565, %dec_label_pc_805354c, %dec_label_pc_805353b, %dec_label_pc_8053587
  %v0_8053596 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053596 = add i32 %v0_8053596, 8
  store i32 %v1_8053596, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_805359d = call i32 @function_8053920(i32 %tmp7)
  br label %dec_label_pc_80536c3

dec_label_pc_80535a7:                             ; preds = %dec_label_pc_8053468, %dec_label_pc_805351e, %dec_label_pc_80534ec
  %v1_80535b8 = phi i32 [ %v1_8053458, %dec_label_pc_8053468 ], [ %v2_8053525, %dec_label_pc_805351e ], [ %v0_80535a7.pre, %dec_label_pc_80534ec ]
  %v5_80535a9 = sub i32 %v1_80535b8, %stack_var_-40.0
  store i32 %v5_80535a9, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_80535a9, 16
  br i1 %tmp24, label %dec_label_pc_80535b2, label %dec_label_pc_80535c4

dec_label_pc_80535b2:                             ; preds = %dec_label_pc_80535a7
  %v0_80535b2 = load i32, i32* @edi, align 4
  %v1_80535b2 = add i32 %v0_80535b2, 4
  %v2_80535b2 = inttoptr i32 %v1_80535b2 to i32*
  %v3_80535b2 = load i32, i32* %v2_80535b2, align 4
  %v1_80535b5 = urem i32 %v3_80535b2, 2
  %v2_80535b8 = or i32 %v1_80535b5, %v1_80535b8
  store i32 %v2_80535b8, i32* %eax.global-to-local, align 4
  store i32 %v2_80535b8, i32* %v2_80535b2, align 4
  %v0_80535bd = load i32, i32* @edi, align 4
  %v1_80535bd = load i32, i32* @ebx, align 4
  %v2_80535bd = add i32 %v0_80535bd, 4
  %v3_80535bd = add i32 %v2_80535bd, %v1_80535bd
  %v4_80535bd = inttoptr i32 %v3_80535bd to i32*
  %v5_80535bd = load i32, i32* %v4_80535bd, align 4
  %v6_80535bd = or i32 %v5_80535bd, 1
  store i32 %v6_80535bd, i32* %v4_80535bd, align 4
  br label %dec_label_pc_80535f4

dec_label_pc_80535c4:                             ; preds = %dec_label_pc_80535a7
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_80535c8 = load i32, i32* @edi, align 4
  %v2_80535c8 = add i32 %v0_80535c8, %stack_var_-40.0
  store i32 %v2_80535c8, i32* %eax.global-to-local, align 4
  %v1_80535cb = add i32 %v0_80535c8, 4
  %v2_80535cb = inttoptr i32 %v1_80535cb to i32*
  %v3_80535cb = load i32, i32* %v2_80535cb, align 4
  %v1_80535ce = urem i32 %v3_80535cb, 2
  %v5_80535d1 = or i32 %v1_80535ce, %stack_var_-40.0
  store i32 %v5_80535d1, i32* %v2_80535cb, align 4
  %v0_80535db = load i32, i32* %ecx.global-to-local, align 4
  %v1_80535dd = or i32 %v0_80535db, 1
  store i32 %v1_80535dd, i32* %edx.global-to-local, align 4
  %v1_80535e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80535e0 = add i32 %v1_80535e0, 4
  %v3_80535e0 = inttoptr i32 %v2_80535e0 to i32*
  store i32 %v1_80535dd, i32* %v3_80535e0, align 4
  %v0_80535e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80535e3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80535e3 = add i32 %v0_80535e3, 4
  %v3_80535e3 = add i32 %v2_80535e3, %v1_80535e3
  %v4_80535e3 = inttoptr i32 %v3_80535e3 to i32*
  %v5_80535e3 = load i32, i32* %v4_80535e3, align 4
  %v6_80535e3 = or i32 %v5_80535e3, 1
  store i32 %v6_80535e3, i32* %v4_80535e3, align 4
  %v0_80535e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80535e8 = add i32 %v0_80535e8, 8
  store i32 %v1_80535e8, i32* %eax.global-to-local, align 4
  store i32 %v1_80535e8, i32* %stack_var_-60, align 4
  %v1_80535ec = call i32 @function_8053920(i32 %v1_80535e8)
  store i32 %v1_80535ec, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535f4

dec_label_pc_80535f4:                             ; preds = %dec_label_pc_80535b2, %dec_label_pc_80535c4
  %v0_80535f4 = load i32, i32* @edi, align 4
  %v1_80535f4 = add i32 %v0_80535f4, 8
  store i32 %v1_80535f4, i32* @ebx, align 4
  br label %dec_label_pc_80536d0

dec_label_pc_80535fc:                             ; preds = %dec_label_pc_805344c
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_8053600 = load i32, i32* @global_var_805675c.52, align 4
  %v1_8053605 = add i32 %v0_8053600, -1
  store i32 %v1_8053605, i32* %eax.global-to-local, align 4
  %v2_805360a = inttoptr i32 %v1_8053450 to i32*
  %v3_805360a = load i32, i32* %v2_805360a, align 4
  store i32 %v3_805360a, i32* @ebp, align 4
  %v1_805360d = or i32 %stack_var_-40.0, 4
  store i32 %v1_805360d, i32* %stack_var_-44, align 4
  %v2_8053613 = add i32 %v3_805360a, %v1_8053605
  store i32 %v2_8053613, i32* %edx.global-to-local, align 4
  %v1_8053616 = sub i32 0, %v0_8053600
  store i32 %v1_8053616, i32* %eax.global-to-local, align 4
  %v2_8053618 = add i32 %v2_8053613, %v1_805360d
  %v2_805361b = and i32 %v2_8053618, %v1_8053616
  store i32 %v2_805361b, i32* @esi, align 4
  %v2_805361f = sub i32 %v2_805361b, %v3_805360a
  store i32 %v2_805361f, i32* @ebx, align 4
  %v15_8053621 = icmp eq i32 %v1_8053458, %v2_805361f
  br i1 %v15_8053621, label %dec_label_pc_80536cc, label %dec_label_pc_805362b

dec_label_pc_805362b:                             ; preds = %dec_label_pc_80535fc
  %v2_8053632 = sub i32 %v1_8053450, %v3_805360a
  store i32 %v2_8053632, i32* @edi, align 4
  %v2_8053634 = add i32 %v3_805360a, %v1_8053458
  store i32 %v2_8053634, i32* %eax.global-to-local, align 4
  store i32 %v2_8053632, i32* %stack_var_-60, align 4
  %v6_8053638 = inttoptr i32 %v2_8053632 to i32*
  %v7_8053638 = call i32 @function_805466a(i32* %v6_8053638, i32 %v2_8053634, i32 %v2_805361b, i32 1, i32 %v1_805360d, i32 %v1_8053458)
  store i32 %v7_8053638, i32* %eax.global-to-local, align 4
  %v10_8053640 = icmp eq i32 %v7_8053638, -1
  br i1 %v10_8053640, label %dec_label_pc_8053684, label %dec_label_pc_8053645

dec_label_pc_8053645:                             ; preds = %dec_label_pc_805362b
  %v1_8053645 = load i32, i32* @ebp, align 4
  %v2_8053645 = add i32 %v1_8053645, %v7_8053638
  store i32 %v2_8053645, i32* %edx.global-to-local, align 4
  %v0_8053648 = load i32, i32* @ebx, align 4
  %v1_8053648 = or i32 %v0_8053648, 2
  store i32 %v1_8053648, i32* %ebx.global-to-local, align 4
  %v0_805364b = load i32, i32* @esi, align 4
  store i32 %v0_805364b, i32* %eax.global-to-local, align 4
  %v2_805364d = add i32 %v2_8053645, 4
  %v3_805364d = inttoptr i32 %v2_805364d to i32*
  store i32 %v1_8053648, i32* %v3_805364d, align 4
  %v0_8053650 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053650 = sub i32 %v0_8053650, %v1_8053458
  %v1_8053654 = load i32, i32* @global_var_8056764.57, align 4
  %v2_8053654 = add i32 %v1_8053654, %v5_8053650
  store i32 %v2_8053654, i32* %eax.global-to-local, align 4
  store i32 %v2_8053654, i32* @global_var_8056764.57, align 4
  %v1_805365f = load i32, i32* @global_var_8056770.58, align 16
  %tmp25 = icmp ugt i32 %v2_8053654, %v1_805365f
  br i1 %tmp25, label %dec_label_pc_8053667, label %dec_label_pc_805366c

dec_label_pc_8053667:                             ; preds = %dec_label_pc_8053645
  store i32 %v2_8053654, i32* @global_var_8056770.58, align 16
  br label %dec_label_pc_805366c

dec_label_pc_805366c:                             ; preds = %dec_label_pc_8053645, %dec_label_pc_8053667
  %v1_805366c = load i32, i32* @global_var_8056768.59, align 8
  %v2_805366c = add i32 %v1_805366c, %v2_8053654
  store i32 %v2_805366c, i32* %eax.global-to-local, align 4
  %v1_8053672 = load i32, i32* @global_var_8056774.60, align 4
  %tmp26 = icmp ugt i32 %v2_805366c, %v1_8053672
  br i1 %tmp26, label %dec_label_pc_805367a, label %dec_label_pc_805367f

dec_label_pc_805367a:                             ; preds = %dec_label_pc_805366c
  store i32 %v2_805366c, i32* @global_var_8056774.60, align 4
  br label %dec_label_pc_805367f

dec_label_pc_805367f:                             ; preds = %dec_label_pc_805366c, %dec_label_pc_805367a
  %v0_805367f = load i32, i32* %edx.global-to-local, align 4
  %v1_805367f = add i32 %v0_805367f, 8
  store i32 %v1_805367f, i32* @ebx, align 4
  br label %dec_label_pc_80536d0

dec_label_pc_8053684:                             ; preds = %dec_label_pc_805362b
  %v2_8053684 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8053684, i32* %eax.global-to-local, align 4
  %v10_8053687 = icmp ult i32 %v1_8053458, %v2_8053684
  %v1_805368b = icmp eq i1 %v10_8053687, false
  br i1 %v1_805368b, label %dec_label_pc_80536cc, label %dec_label_pc_805368d

dec_label_pc_805368d:                             ; preds = %dec_label_pc_8053684
  %v1_8053694 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053694, i32* %eax.global-to-local, align 4
  store i32 %v1_8053694, i32* %stack_var_-60, align 4
  %v1_8053698 = call i32 @function_8052b5b(i32 %v1_8053694)
  store i32 %v1_8053698, i32* %eax.global-to-local, align 4
  store i32 %v1_8053698, i32* @ebx, align 4
  %v1_80536a2 = icmp eq i32 %v1_8053698, 0
  br i1 %v1_80536a2, label %dec_label_pc_80536c8, label %dec_label_pc_80536a6

dec_label_pc_80536a6:                             ; preds = %dec_label_pc_805368d
  %v1_80536ab = add i32 %v1_8053458, -8
  store i32 %v1_80536ab, i32* %eax.global-to-local, align 4
  store i32 %v1_8053698, i32* %stack_var_-60, align 4
  %v3_80536b4 = inttoptr i32 %v1_8053698 to i16*
  %v4_80536b4 = call i32 @function_8054806(i16* %v3_80536b4, i32 %tmp7, i32 %v1_80536ab)
  store i32 %v4_80536b4, i32* %eax.global-to-local, align 4
  store i32 %v1_8053698, i32* %edx.global-to-local, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80536be = call i32 @function_8053920(i32 %tmp7)
  br label %dec_label_pc_80536c3

dec_label_pc_80536c3:                             ; preds = %dec_label_pc_8053593, %dec_label_pc_80536a6
  %storemerge = phi i32 [ %v1_80536be, %dec_label_pc_80536a6 ], [ %v1_805359d, %dec_label_pc_8053593 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536d0

dec_label_pc_80536c8:                             ; preds = %dec_label_pc_805368d, %dec_label_pc_80534f7
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80536d0

dec_label_pc_80536cc:                             ; preds = %dec_label_pc_8053684, %dec_label_pc_80535fc, %dec_label_pc_8053496
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_80536d0

dec_label_pc_80536d0:                             ; preds = %dec_label_pc_80536c8, %dec_label_pc_80536c3, %dec_label_pc_805367f, %dec_label_pc_80535f4, %dec_label_pc_80536cc
  store i32 %v2_8053405, i32* @eax, align 4
  store i32 %v2_8053405, i32* %stack_var_-60, align 4
  %v2_80536d9 = call i32 @function_8053f44(i32 %v2_8053405, i32 1)
  store i32 %v2_80536d9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536de

dec_label_pc_80536de:                             ; preds = %dec_label_pc_80533e9, %dec_label_pc_80533d5, %dec_label_pc_80536d0
  br label %dec_label_pc_80536e1

dec_label_pc_80536e1:                             ; preds = %dec_label_pc_8053423, %dec_label_pc_80536de
  %v0_80536e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80536e4, i32* %eax.global-to-local, align 4
  store i32 %v0_80533c6, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80536e4

; uselistorder directives
  uselistorder i32 %v1_8053698, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_805366c, { 1, 0, 2 }
  uselistorder i32 %v2_8053654, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053632, { 1, 0, 2 }
  uselistorder i32 %v1_805360d, { 1, 0, 2 }
  uselistorder i32 %v3_805360a, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80535c8, { 1, 0 }
  uselistorder i32 %v1_805352e, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8053502, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_80534a6, { 1, 0, 2 }
  uselistorder i32 %v3_80534b9, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8053476, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053458, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053450, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_8053445, { 1, 0 }
  uselistorder i32 %v1_8053435, { 0, 2, 1 }
  uselistorder i32 %v0_805341e, { 1, 0 }
  uselistorder i32 %v2_8053405, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15, 16, 17, 18, 19 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_8053920, { 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32)* @function_8052b5b, { 5, 4, 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80536e1, { 1, 0 }
  uselistorder label %dec_label_pc_80536de, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80536d0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80536c3, { 1, 0 }
  uselistorder label %dec_label_pc_805367f, { 1, 0 }
  uselistorder label %dec_label_pc_805366c, { 1, 0 }
  uselistorder label %dec_label_pc_80535f4, { 1, 0 }
  uselistorder label %dec_label_pc_80535a7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053593, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80534ec, { 1, 0 }
  uselistorder label %dec_label_pc_805344c, { 1, 0 }
}

define i32 @function_80536eb() local_unnamed_addr {
dec_label_pc_80536eb:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80536f2 = load i32, i32* @edx, align 4
  store i32 %v0_80536f2, i32* %ebp.global-to-local, align 4
  %v1_80536f4 = add i32 %v0_80536f2, 860
  %v2_80536f4 = inttoptr i32 %v1_80536f4 to i32*
  %v3_80536f4 = load i32, i32* %v2_80536f4, align 4
  store i32 %v3_80536f4, i32* %ecx.global-to-local, align 4
  %v1_80536fa = add i32 %v0_80536f2, 44
  %v2_80536fa = inttoptr i32 %v1_80536fa to i32*
  %v3_80536fa = load i32, i32* %v2_80536fa, align 4
  %v1_80536fd = add i32 %v3_80536fa, 4
  %v2_80536fd = inttoptr i32 %v1_80536fd to i32*
  %v3_80536fd = load i32, i32* %v2_80536fd, align 4
  %v1_8053700 = and i32 %v3_80536fd, -4
  store i32 %v1_8053700, i32* @esi, align 4
  %v1_8053705 = load i32, i32* @eax, align 4
  %v2_8053705 = add i32 %v3_80536f4, -17
  %v2_8053707 = add i32 %v2_8053705, %v1_8053700
  %v3_8053707 = sub i32 %v2_8053707, %v1_8053705
  %div = udiv i32 %v3_8053707, %v3_80536f4
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_805370f = add i32 %div, -1
  %v4_8053712 = mul i32 %v1_805370f, %v3_80536f4
  store i32 %v4_8053712, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8053712, 1
  br i1 %tmp11, label %dec_label_pc_805376e, label %dec_label_pc_8053719

dec_label_pc_8053719:                             ; preds = %dec_label_pc_80536eb
  %v1_805371e = call i32 @function_805470d(i32 0)
  store i32 %v1_805371e, i32* %edi.global-to-local, align 4
  %v0_8053725 = load i32, i32* @esi, align 4
  store i32 %v0_8053725, i32* %eax.global-to-local, align 4
  %v1_8053727 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053727 = add i32 %v1_8053727, 44
  %v3_8053727 = inttoptr i32 %v2_8053727 to i32*
  %v4_8053727 = load i32, i32* %v3_8053727, align 4
  %v5_8053727 = add i32 %v4_8053727, %v0_8053725
  store i32 %v5_8053727, i32* %eax.global-to-local, align 4
  %v12_805372d = icmp eq i32 %v1_805371e, %v5_8053727
  %v1_805372f = icmp eq i1 %v12_805372d, false
  br i1 %v1_805372f, label %dec_label_pc_805376e, label %dec_label_pc_8053731

dec_label_pc_8053731:                             ; preds = %dec_label_pc_8053719
  %v1_8053734 = sub i32 0, %v4_8053712
  store i32 %v1_8053734, i32* @ebx, align 4
  %v1_8053737 = call i32 @function_805470d(i32 %v1_8053734)
  store i32 %v1_8053737, i32* %eax.global-to-local, align 4
  %v1_8053743 = call i32 @function_805470d(i32 0)
  store i32 %v1_8053743, i32* %eax.global-to-local, align 4
  %v10_805374b = icmp eq i32 %v1_8053743, -1
  br i1 %v10_805374b, label %dec_label_pc_805376e, label %dec_label_pc_8053750

dec_label_pc_8053750:                             ; preds = %dec_label_pc_8053731
  %v0_8053750 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053752 = sub i32 %v0_8053750, %v1_8053743
  %v12_8053752 = icmp eq i32 %v2_8053752, 0
  store i32 %v2_8053752, i32* %ecx.global-to-local, align 4
  br i1 %v12_8053752, label %dec_label_pc_805376e, label %dec_label_pc_8053756

dec_label_pc_8053756:                             ; preds = %dec_label_pc_8053750
  %v0_8053756 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053756 = add i32 %v0_8053756, 44
  %v2_8053756 = inttoptr i32 %v1_8053756 to i32*
  %v3_8053756 = load i32, i32* %v2_8053756, align 4
  store i32 %v3_8053756, i32* %eax.global-to-local, align 4
  %v1_8053759 = add i32 %v0_8053756, 872
  %v2_8053759 = inttoptr i32 %v1_8053759 to i32*
  %v3_8053759 = load i32, i32* %v2_8053759, align 4
  %v5_8053759 = sub i32 %v3_8053759, %v2_8053752
  store i32 %v5_8053759, i32* %v2_8053759, align 4
  %v0_805375f = load i32, i32* @esi, align 4
  %v1_805375f = load i32, i32* %ecx.global-to-local, align 4
  %v2_805375f = sub i32 %v0_805375f, %v1_805375f
  %v1_8053761 = or i32 %v2_805375f, 1
  %v1_8053764 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053764 = add i32 %v1_8053764, 4
  %v3_8053764 = inttoptr i32 %v2_8053764 to i32*
  store i32 %v1_8053761, i32* %v3_8053764, align 4
  br label %dec_label_pc_8053770

dec_label_pc_805376e:                             ; preds = %dec_label_pc_8053750, %dec_label_pc_8053731, %dec_label_pc_8053719, %dec_label_pc_80536eb
  br label %dec_label_pc_8053770

dec_label_pc_8053770:                             ; preds = %dec_label_pc_8053756, %dec_label_pc_805376e
  %storemerge = phi i32 [ 1, %dec_label_pc_8053756 ], [ 0, %dec_label_pc_805376e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053743, { 1, 0, 2 }
  uselistorder i32 %v4_8053712, { 1, 2, 0 }
  uselistorder i32 %v3_80536f4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_805470d, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053770, { 1, 0 }
}

define i32 @function_8053778(i32* %arg1) local_unnamed_addr {
dec_label_pc_8053778:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8053779 = load i32, i32* @edi, align 4
  %v0_805377a = load i32, i32* @esi, align 4
  %v0_805377b = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_8053783 = load i32, i32* %arg1, align 4
  store i32 %v2_8053783, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805378a = icmp eq i32 %v2_8053783, 0
  br i1 %v1_805378a, label %dec_label_pc_80538a4.lr.ph, label %dec_label_pc_8053792

dec_label_pc_80538a4.lr.ph:                       ; preds = %dec_label_pc_8053778
  %v3_80538a8 = add i32 %tmp20, 44
  br label %dec_label_pc_80538a4

dec_label_pc_8053792:                             ; preds = %dec_label_pc_8053778
  %v1_8053796 = and i32 %v2_8053783, -3
  store i32 %v1_8053796, i32* %arg1, align 4
  %v1_805379b = add i32 %tmp20, 52
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_80537b7 = udiv i32 %v1_8053796, 8
  %v2_80537ba = mul nuw i32 %v2_80537b7, 4
  %v3_80537ba = add i32 %tmp20, -4
  %v4_80537ba = add i32 %v3_80537ba, %v2_80537ba
  store i32 %v4_80537ba, i32* %eax.global-to-local, align 4
  %v2_8053881 = add i32 %tmp20, 44
  %v3_8053881 = inttoptr i32 %v2_8053881 to i32*
  %v1_8053854 = add i32 %tmp20, 60
  %v2_8053854 = inttoptr i32 %v1_8053854 to i32*
  br label %dec_label_pc_80537c2

dec_label_pc_80537c2:                             ; preds = %dec_label_pc_805389a, %dec_label_pc_8053792
  %v0_80537d0.in = phi i32 [ %tmp20, %dec_label_pc_8053792 ], [ %v0_80537d0, %dec_label_pc_805389a ]
  %v0_80537d0 = add i32 %v0_80537d0.in, 4
  store i32 %v0_80537d0, i32* %eax.global-to-local, align 4
  %v1_80537c6 = inttoptr i32 %v0_80537d0 to i32*
  %v2_80537c6 = load i32, i32* %v1_80537c6, align 4
  store i32 %v2_80537c6, i32* @ecx, align 4
  %v1_80537c8 = icmp eq i32 %v2_80537c6, 0
  br i1 %v1_80537c8, label %dec_label_pc_8053890, label %dec_label_pc_80537d0

dec_label_pc_80537d0:                             ; preds = %dec_label_pc_80537c2
  store i32 0, i32* %v1_80537c6, align 4
  %v0_80537d6.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80537d6

dec_label_pc_80537d6:                             ; preds = %dec_label_pc_8053884, %dec_label_pc_80537d0
  %v0_80537f3 = phi i32 [ %v3_80537d6, %dec_label_pc_8053884 ], [ %v0_80537d6.pre, %dec_label_pc_80537d0 ]
  %v1_80537d6 = add i32 %v0_80537f3, 8
  %v2_80537d6 = inttoptr i32 %v1_80537d6 to i32*
  %v3_80537d6 = load i32, i32* %v2_80537d6, align 4
  store i32 %v3_80537d6, i32* %edx.global-to-local, align 4
  %v1_80537dd = add i32 %v0_80537f3, 4
  %v2_80537dd = inttoptr i32 %v1_80537dd to i32*
  %v3_80537dd = load i32, i32* %v2_80537dd, align 4
  store i32 %v3_80537dd, i32* %eax.global-to-local, align 4
  %v1_80537e2 = and i32 %v3_80537dd, -2
  store i32 %v1_80537e2, i32* @edi, align 4
  %v2_80537e5 = urem i32 %v3_80537dd, 2
  %v3_80537e5 = icmp eq i32 %v2_80537e5, 0
  %v2_80537e7 = add i32 %v1_80537e2, %v0_80537f3
  store i32 %v2_80537e7, i32* @ebx, align 4
  %v1_80537ea = add i32 %v2_80537e7, 4
  %v2_80537ea = inttoptr i32 %v1_80537ea to i32*
  %v3_80537ea = load i32, i32* %v2_80537ea, align 4
  store i32 %v3_80537ea, i32* %edx.global-to-local, align 4
  %v1_80537f1 = icmp eq i1 %v3_80537e5, false
  br i1 %v1_80537f1, label %dec_label_pc_8053813, label %dec_label_pc_80537f3

dec_label_pc_80537f3:                             ; preds = %dec_label_pc_80537d6
  %v1_80537f3 = inttoptr i32 %v0_80537f3 to i32*
  %v2_80537f3 = load i32, i32* %v1_80537f3, align 4
  store i32 %v2_80537f3, i32* %ebp.global-to-local, align 4
  %v2_80537f7 = sub i32 %v0_80537f3, %v2_80537f3
  store i32 %v2_80537f7, i32* %eax.global-to-local, align 4
  %v1_80537f9 = add i32 %v2_80537f7, 8
  %v2_80537f9 = inttoptr i32 %v1_80537f9 to i32*
  %v3_80537f9 = load i32, i32* %v2_80537f9, align 4
  store i32 %v3_80537f9, i32* @esi, align 4
  %v1_80537fc = add i32 %v2_80537f7, 12
  %v2_80537fc = inttoptr i32 %v1_80537fc to i32*
  %v3_80537fc = load i32, i32* %v2_80537fc, align 4
  store i32 %v3_80537fc, i32* %edx.global-to-local, align 4
  %v1_80537ff = add i32 %v3_80537f9, 12
  %v2_80537ff = inttoptr i32 %v1_80537ff to i32*
  %v3_80537ff = load i32, i32* %v2_80537ff, align 4
  store i32 %v3_80537ff, i32* @ecx, align 4
  %v12_8053802 = icmp eq i32 %v3_80537ff, %v2_80537f7
  %v1_8053804 = icmp eq i1 %v12_8053802, false
  br i1 %v1_8053804, label %dec_label_pc_8053843, label %dec_label_pc_8053806

dec_label_pc_8053806:                             ; preds = %dec_label_pc_80537f3
  %v1_8053806 = add i32 %v3_80537fc, 8
  %v2_8053806 = inttoptr i32 %v1_8053806 to i32*
  %v3_8053806 = load i32, i32* %v2_8053806, align 4
  %v15_8053806 = icmp eq i32 %v3_8053806, %v3_80537ff
  %v1_8053809 = icmp eq i1 %v15_8053806, false
  br i1 %v1_8053809, label %dec_label_pc_8053843, label %dec_label_pc_805380b

dec_label_pc_805380b:                             ; preds = %dec_label_pc_8053806
  %v2_805380b = add i32 %v2_80537f3, %v1_80537e2
  store i32 %v2_805380b, i32* @edi, align 4
  store i32 %v3_80537fc, i32* %v2_80537ff, align 4
  %v0_8053810 = load i32, i32* @esi, align 4
  %v1_8053810 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053810 = add i32 %v1_8053810, 8
  %v3_8053810 = inttoptr i32 %v2_8053810 to i32*
  store i32 %v0_8053810, i32* %v3_8053810, align 4
  %v0_805381e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053813

dec_label_pc_8053813:                             ; preds = %dec_label_pc_80537d6, %dec_label_pc_805380b
  %v1_8053827 = phi i32 [ %v2_80537e7, %dec_label_pc_80537d6 ], [ %v0_805381e.pre, %dec_label_pc_805380b ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_805381b = and i32 %v3_80537ea, -4
  store i32 %v1_805381b, i32* %ebp.global-to-local, align 4
  %v4_805381e = load i32, i32* %v3_8053881, align 4
  %v15_805381e = icmp eq i32 %v1_8053827, %v4_805381e
  br i1 %v15_805381e, label %dec_label_pc_8053874, label %dec_label_pc_8053823

dec_label_pc_8053823:                             ; preds = %dec_label_pc_8053813
  %v2_8053823 = add i32 %v1_8053827, 4
  %v3_8053823 = add i32 %v2_8053823, %v1_805381b
  %v4_8053823 = inttoptr i32 %v3_8053823 to i32*
  %v5_8053823 = load i32, i32* %v4_8053823, align 4
  store i32 %v5_8053823, i32* %eax.global-to-local, align 4
  %v3_8053827 = inttoptr i32 %v2_8053823 to i32*
  store i32 %v1_805381b, i32* %v3_8053827, align 4
  %v0_805382a = load i32, i32* %eax.global-to-local, align 4
  %v1_805382a = urem i32 %v0_805382a, 2
  %v2_805382a = icmp eq i32 %v1_805382a, 0
  store i32 %v1_805382a, i32* %eax.global-to-local, align 4
  %v1_805382f = icmp eq i1 %v2_805382a, false
  br i1 %v1_805382f, label %dec_label_pc_8053850, label %dec_label_pc_8053831

dec_label_pc_8053831:                             ; preds = %dec_label_pc_8053823
  %v0_8053831 = load i32, i32* @ebx, align 4
  %v1_8053831 = add i32 %v0_8053831, 8
  %v2_8053831 = inttoptr i32 %v1_8053831 to i32*
  %v3_8053831 = load i32, i32* %v2_8053831, align 4
  store i32 %v3_8053831, i32* @edx, align 4
  %v1_8053834 = add i32 %v0_8053831, 12
  %v2_8053834 = inttoptr i32 %v1_8053834 to i32*
  %v3_8053834 = load i32, i32* %v2_8053834, align 4
  store i32 %v3_8053834, i32* %eax.global-to-local, align 4
  %v1_8053837 = add i32 %v3_8053831, 12
  %v2_8053837 = inttoptr i32 %v1_8053837 to i32*
  %v3_8053837 = load i32, i32* %v2_8053837, align 4
  store i32 %v3_8053837, i32* @esi, align 4
  %v12_805383a = icmp eq i32 %v3_8053837, %v0_8053831
  %v1_805383c = icmp eq i1 %v12_805383a, false
  br i1 %v1_805383c, label %dec_label_pc_8053843, label %dec_label_pc_805383e

dec_label_pc_805383e:                             ; preds = %dec_label_pc_8053831
  %v1_805383e = add i32 %v3_8053834, 8
  %v2_805383e = inttoptr i32 %v1_805383e to i32*
  %v3_805383e = load i32, i32* %v2_805383e, align 4
  %v15_805383e = icmp eq i32 %v3_805383e, %v3_8053837
  br i1 %v15_805383e, label %dec_label_pc_8053848, label %dec_label_pc_8053843

dec_label_pc_8053843:                             ; preds = %dec_label_pc_805383e, %dec_label_pc_8053831, %dec_label_pc_8053806, %dec_label_pc_80537f3
  %v0_8053843 = call i32 @function_8053abc()
  store i32 %v0_8053843, i32* %eax.global-to-local, align 4
  %v1_805384a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053848

dec_label_pc_8053848:                             ; preds = %dec_label_pc_805383e, %dec_label_pc_8053843
  %v1_805384a = phi i32 [ %v3_8053831, %dec_label_pc_805383e ], [ %v1_805384a.pre, %dec_label_pc_8053843 ]
  %v0_805384a = phi i32 [ %v3_8053834, %dec_label_pc_805383e ], [ %v0_8053843, %dec_label_pc_8053843 ]
  %v0_8053848 = load i32, i32* @edi, align 4
  %v1_8053848 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053848 = add i32 %v1_8053848, %v0_8053848
  store i32 %v2_8053848, i32* @edi, align 4
  %v2_805384a = add i32 %v1_805384a, 12
  %v3_805384a = inttoptr i32 %v2_805384a to i32*
  store i32 %v0_805384a, i32* %v3_805384a, align 4
  %v0_805384d = load i32, i32* @edx, align 4
  %v1_805384d = load i32, i32* %eax.global-to-local, align 4
  %v2_805384d = add i32 %v1_805384d, 8
  %v3_805384d = inttoptr i32 %v2_805384d to i32*
  store i32 %v0_805384d, i32* %v3_805384d, align 4
  br label %dec_label_pc_8053850

dec_label_pc_8053850:                             ; preds = %dec_label_pc_8053823, %dec_label_pc_8053848
  store i32 %v1_805379b, i32* %eax.global-to-local, align 4
  %v3_8053854 = load i32, i32* %v2_8053854, align 4
  store i32 %v3_8053854, i32* %edx.global-to-local, align 4
  %v0_8053857 = load i32, i32* @ecx, align 4
  store i32 %v0_8053857, i32* %v2_8053854, align 4
  %v0_805385a = load i32, i32* @edi, align 4
  %v1_805385c = or i32 %v0_805385a, 1
  store i32 %v1_805385c, i32* %eax.global-to-local, align 4
  %v0_805385f = load i32, i32* @ecx, align 4
  %v1_805385f = load i32, i32* %edx.global-to-local, align 4
  %v2_805385f = add i32 %v1_805385f, 12
  %v3_805385f = inttoptr i32 %v2_805385f to i32*
  store i32 %v0_805385f, i32* %v3_805385f, align 4
  %v0_8053862 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053862 = load i32, i32* @ecx, align 4
  %v2_8053862 = add i32 %v1_8053862, 4
  %v3_8053862 = inttoptr i32 %v2_8053862 to i32*
  store i32 %v0_8053862, i32* %v3_8053862, align 4
  store i32 %v1_805379b, i32* %eax.global-to-local, align 4
  %v0_8053869 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053869 = load i32, i32* @ecx, align 4
  %v2_8053869 = add i32 %v1_8053869, 8
  %v3_8053869 = inttoptr i32 %v2_8053869 to i32*
  store i32 %v0_8053869, i32* %v3_8053869, align 4
  %v0_805386c = load i32, i32* %eax.global-to-local, align 4
  %v1_805386c = load i32, i32* @ecx, align 4
  %v2_805386c = add i32 %v1_805386c, 12
  %v3_805386c = inttoptr i32 %v2_805386c to i32*
  store i32 %v0_805386c, i32* %v3_805386c, align 4
  %v0_805386f = load i32, i32* @edi, align 4
  %v1_805386f = load i32, i32* @ecx, align 4
  %v3_805386f = add i32 %v1_805386f, %v0_805386f
  %v4_805386f = inttoptr i32 %v3_805386f to i32*
  store i32 %v0_805386f, i32* %v4_805386f, align 4
  br label %dec_label_pc_8053884

dec_label_pc_8053874:                             ; preds = %dec_label_pc_8053813
  %v0_8053874 = load i32, i32* @edi, align 4
  %v2_8053874 = add i32 %v0_8053874, %v1_805381b
  %v1_8053877 = or i32 %v2_8053874, 1
  store i32 %v1_8053877, i32* %eax.global-to-local, align 4
  %v1_805387a = load i32, i32* @ecx, align 4
  %v2_805387a = add i32 %v1_805387a, 4
  %v3_805387a = inttoptr i32 %v2_805387a to i32*
  store i32 %v1_8053877, i32* %v3_805387a, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v0_8053881 = load i32, i32* @ecx, align 4
  store i32 %v0_8053881, i32* %v3_8053881, align 4
  br label %dec_label_pc_8053884

dec_label_pc_8053884:                             ; preds = %dec_label_pc_8053850, %dec_label_pc_8053874
  store i32 %v3_80537d6, i32* @ecx, align 4
  %v1_8053888 = icmp eq i32 %v3_80537d6, 0
  %v1_805388a = icmp eq i1 %v1_8053888, false
  br i1 %v1_805388a, label %dec_label_pc_80537d6, label %dec_label_pc_8053890

dec_label_pc_8053890:                             ; preds = %dec_label_pc_8053884, %dec_label_pc_80537c2
  %v15_8053894 = icmp eq i32 %v0_80537d0, %v4_80537ba
  br i1 %v15_8053894, label %dec_label_pc_8053918, label %dec_label_pc_805389a

dec_label_pc_805389a:                             ; preds = %dec_label_pc_8053890
  br label %dec_label_pc_80537c2

dec_label_pc_80538a4:                             ; preds = %dec_label_pc_80538a4.lr.ph, %dec_label_pc_80538a4
  %v1_80538a8 = phi i32 [ 1, %dec_label_pc_80538a4.lr.ph ], [ %v0_80538b3, %dec_label_pc_80538a4 ]
  %v2_80538a8 = mul i32 %v1_80538a8, 8
  %v4_80538a8 = add i32 %v3_80538a8, %v2_80538a8
  store i32 %v4_80538a8, i32* %eax.global-to-local, align 4
  %v1_80538ac = add i32 %v1_80538a8, 1
  store i32 %v1_80538ac, i32* %edx.global-to-local, align 4
  %v2_80538ad = add i32 %v4_80538a8, 12
  %v3_80538ad = inttoptr i32 %v2_80538ad to i32*
  store i32 %v4_80538a8, i32* %v3_80538ad, align 4
  %v0_80538b0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80538b0 = add i32 %v0_80538b0, 8
  %v3_80538b0 = inttoptr i32 %v2_80538b0 to i32*
  store i32 %v0_80538b0, i32* %v3_80538b0, align 4
  %v0_80538b3 = load i32, i32* %edx.global-to-local, align 4
  %v7_80538b6 = icmp sgt i32 %v0_80538b3, 95
  br i1 %v7_80538b6, label %dec_label_pc_80538b8, label %dec_label_pc_80538a4

dec_label_pc_80538b8:                             ; preds = %dec_label_pc_80538a4
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_80538bc = add i32 %tmp20, 864
  %v2_80538bc = inttoptr i32 %v1_80538bc to i32*
  %v3_80538bc = load i32, i32* %v2_80538bc, align 4
  %v4_80538bc = or i32 %v3_80538bc, 1
  store i32 %v4_80538bc, i32* %v2_80538bc, align 4
  %v0_80538c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538c3 = add i32 %v0_80538c3, 840
  %v2_80538c3 = inttoptr i32 %v1_80538c3 to i32*
  store i32 0, i32* %v2_80538c3, align 4
  %v0_80538cd = load i32, i32* %eax.global-to-local, align 4
  %v1_80538cd = add i32 %v0_80538cd, 852
  %v2_80538cd = inttoptr i32 %v1_80538cd to i32*
  store i32 65536, i32* %v2_80538cd, align 4
  %v0_80538d7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538d7 = add i32 %v0_80538d7, 844
  %v2_80538d7 = inttoptr i32 %v1_80538d7 to i32*
  store i32 262144, i32* %v2_80538d7, align 4
  %v0_80538e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538e1 = add i32 %v0_80538e1, 836
  %v2_80538e1 = inttoptr i32 %v1_80538e1 to i32*
  store i32 262144, i32* %v2_80538e1, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_80538f2 = load i32, i32* %arg1, align 4
  %v1_80538f4 = urem i32 %v2_80538f2, 4
  %v1_80538f7 = or i32 %v1_80538f4, 72
  store i32 %v1_80538f7, i32* %arg1, align 4
  %v1_80538fe = add i32 %tmp20, 52
  store i32 %v1_80538fe, i32* %eax.global-to-local, align 4
  %v2_8053901 = add i32 %tmp20, 44
  %v3_8053901 = inttoptr i32 %v2_8053901 to i32*
  store i32 %v1_80538fe, i32* %v3_8053901, align 4
  %v1_8053906 = call i32 @function_8053dbd(i32 30)
  store i32 %v1_8053906, i32* %eax.global-to-local, align 4
  %v2_8053912 = add i32 %tmp20, 860
  %v3_8053912 = inttoptr i32 %v2_8053912 to i32*
  store i32 %v1_8053906, i32* %v3_8053912, align 4
  br label %dec_label_pc_8053918

dec_label_pc_8053918:                             ; preds = %dec_label_pc_8053890, %dec_label_pc_80538b8
  store i32 %v0_805377b, i32* @ebx, align 4
  store i32 %v0_805377a, i32* @esi, align 4
  store i32 %v0_8053779, i32* @edi, align 4
  %v0_805391f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805391f

; uselistorder directives
  uselistorder i32 %v0_80538b3, { 1, 0 }
  uselistorder i32 %v0_80538b0, { 1, 0 }
  uselistorder i32 %v1_80538a8, { 1, 0 }
  uselistorder i32 %v0_805386f, { 1, 0 }
  uselistorder i32 %v1_805382a, { 1, 0 }
  uselistorder i32 %v2_8053823, { 1, 0 }
  uselistorder i32 %v1_805381b, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053827, { 1, 0 }
  uselistorder i32 %v3_80537d6, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80537f3, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80537d0, { 2, 0, 1, 3 }
  uselistorder i32* %v3_8053881, { 1, 0 }
  uselistorder i32 %v1_805379b, { 1, 0 }
  uselistorder i32 %tmp20, { 6, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_8053918, { 1, 0 }
  uselistorder label %dec_label_pc_80538a4, { 1, 0 }
  uselistorder label %dec_label_pc_8053884, { 1, 0 }
  uselistorder label %dec_label_pc_8053850, { 1, 0 }
  uselistorder label %dec_label_pc_8053848, { 1, 0 }
  uselistorder label %dec_label_pc_8053813, { 1, 0 }
}

define i32 @function_8053920(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053920:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053920 = load i32, i32* @ebp, align 4
  %v0_8053921 = load i32, i32* @edi, align 4
  %v0_8053922 = load i32, i32* @esi, align 4
  %v0_8053923 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805392b = icmp eq i32 %arg1, 0
  br i1 %v1_805392b, label %dec_label_pc_8053ab4, label %dec_label_pc_8053933

dec_label_pc_8053933:                             ; preds = %dec_label_pc_8053920
  %v2_805393e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805393e, i32* @eax, align 4
  %v2_8053943 = call i32 @function_8053f44(i32 %v2_805393e, i32 134561601)
  store i32 %v2_8053943, i32* %eax.global-to-local, align 4
  %v1_805394f = call i32 @function_8053f41(i32 ptrtoint (i32* @global_var_805603c.45 to i32))
  %v1_8053954 = add i32 %arg1, -8
  store i32 %v1_8053954, i32* @ecx, align 4
  %v0_8053957 = load i8, i8* @global_var_8056400.46, align 1
  %v1_8053957 = sext i8 %v0_8053957 to i32
  store i32 %v1_8053957, i32* %eax.global-to-local, align 4
  %v1_805395f = add i32 %arg1, -4
  %v2_805395f = inttoptr i32 %v1_805395f to i32*
  %v3_805395f = load i32, i32* %v2_805395f, align 4
  store i32 %v3_805395f, i32* %edx.global-to-local, align 4
  %v1_8053964 = and i32 %v3_805395f, -4
  %v4_8053964 = trunc i32 %v1_8053964 to i8
  store i32 %v1_8053964, i32* @ebx, align 4
  %v8_8053969 = icmp ugt i8 %v4_8053964, %v0_8053957
  br i1 %v8_8053969, label %dec_label_pc_805398b, label %dec_label_pc_805396b

dec_label_pc_805396b:                             ; preds = %dec_label_pc_8053933
  %v2_805396b = udiv i32 %v3_805395f, 8
  %v1_805396e = or i32 %v1_8053957, 3
  %v3_805396e = trunc i32 %v1_805396e to i8
  store i32 %v1_805396e, i32* %eax.global-to-local, align 4
  store i8 %v3_805396e, i8* @global_var_8056400.46, align 1024
  %v1_8053976 = mul nuw i32 %v2_805396b, 4
  %v2_8053976 = add i32 %v1_8053976, ptrtoint (i8* @global_var_8056400.46 to i32)
  store i32 %v2_8053976, i32* %edx.global-to-local, align 4
  %v1_805397d = add i32 %v1_8053976, add (i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32 -4)
  %v2_805397d = inttoptr i32 %v1_805397d to i32*
  %v3_805397d = load i32, i32* %v2_805397d, align 4
  store i32 %v3_805397d, i32* %eax.global-to-local, align 4
  %v3_8053980 = inttoptr i32 %arg1 to i32*
  store i32 %v3_805397d, i32* %v3_8053980, align 4
  %v0_8053983 = load i32, i32* @ecx, align 4
  %v1_8053983 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053983 = add i32 %v1_8053983, -4
  %v3_8053983 = inttoptr i32 %v2_8053983 to i32*
  store i32 %v0_8053983, i32* %v3_8053983, align 4
  br label %dec_label_pc_8053aa3

dec_label_pc_805398b:                             ; preds = %dec_label_pc_8053933
  %v1_805398b = trunc i32 %v3_805395f to i8
  %v2_805398b = and i8 %v1_805398b, 2
  %v3_805398b = icmp eq i8 %v2_805398b, 0
  %v5_805398b = zext i8 %v2_805398b to i32
  %v7_805398b = and i32 %v3_805395f, -256
  %v8_805398b = or i32 %v5_805398b, %v7_805398b
  store i32 %v8_805398b, i32* %edx.global-to-local, align 4
  %v1_805398e = icmp eq i1 %v3_805398b, false
  br i1 %v1_805398e, label %dec_label_pc_8053a83, label %dec_label_pc_8053994

dec_label_pc_8053994:                             ; preds = %dec_label_pc_805398b
  %v1_8053994 = or i32 %v1_8053957, 1
  %v3_8053994 = trunc i32 %v1_8053994 to i8
  store i32 %v1_8053994, i32* %eax.global-to-local, align 4
  %v2_8053997 = add i32 %v1_8053964, %v1_8053954
  store i32 %v2_8053997, i32* @esi, align 4
  store i8 %v3_8053994, i8* @global_var_8056400.46, align 1024
  %v1_805399f = add i32 %v2_8053997, 4
  %v2_805399f = inttoptr i32 %v1_805399f to i32*
  %v3_805399f = load i32, i32* %v2_805399f, align 4
  store i32 %v3_805399f, i32* %eax.global-to-local, align 4
  %v2_80539a6 = inttoptr i32 %v1_805395f to i8*
  %v3_80539a6 = load i8, i8* %v2_80539a6, align 1
  %v4_80539a6 = urem i8 %v3_80539a6, 2
  %v5_80539a6 = icmp eq i8 %v4_80539a6, 0
  %v1_80539aa = icmp eq i1 %v5_80539a6, false
  br i1 %v1_80539aa, label %dec_label_pc_80539cd, label %dec_label_pc_80539ac

dec_label_pc_80539ac:                             ; preds = %dec_label_pc_8053994
  %v2_80539ac = inttoptr i32 %v1_8053954 to i32*
  %v3_80539ac = load i32, i32* %v2_80539ac, align 4
  store i32 %v3_80539ac, i32* @ebp, align 4
  %v2_80539b1 = sub i32 %v1_8053954, %v3_80539ac
  store i32 %v2_80539b1, i32* %eax.global-to-local, align 4
  %v1_80539b3 = add i32 %v2_80539b1, 8
  %v2_80539b3 = inttoptr i32 %v1_80539b3 to i32*
  %v3_80539b3 = load i32, i32* %v2_80539b3, align 4
  store i32 %v3_80539b3, i32* @edi, align 4
  %v1_80539b6 = add i32 %v2_80539b1, 12
  %v2_80539b6 = inttoptr i32 %v1_80539b6 to i32*
  %v3_80539b6 = load i32, i32* %v2_80539b6, align 4
  store i32 %v3_80539b6, i32* %edx.global-to-local, align 4
  %v1_80539b9 = add i32 %v3_80539b3, 12
  %v2_80539b9 = inttoptr i32 %v1_80539b9 to i32*
  %v3_80539b9 = load i32, i32* %v2_80539b9, align 4
  store i32 %v3_80539b9, i32* @ecx, align 4
  %v12_80539bc = icmp eq i32 %v3_80539b9, %v2_80539b1
  %v1_80539be = icmp eq i1 %v12_80539bc, false
  br i1 %v1_80539be, label %dec_label_pc_80539fc, label %dec_label_pc_80539c0

dec_label_pc_80539c0:                             ; preds = %dec_label_pc_80539ac
  %v1_80539c0 = add i32 %v3_80539b6, 8
  %v2_80539c0 = inttoptr i32 %v1_80539c0 to i32*
  %v3_80539c0 = load i32, i32* %v2_80539c0, align 4
  %v15_80539c0 = icmp eq i32 %v3_80539c0, %v3_80539b9
  %v1_80539c3 = icmp eq i1 %v15_80539c0, false
  br i1 %v1_80539c3, label %dec_label_pc_80539fc, label %dec_label_pc_80539c5

dec_label_pc_80539c5:                             ; preds = %dec_label_pc_80539c0
  %v2_80539c5 = add i32 %v3_80539ac, %v1_8053964
  store i32 %v2_80539c5, i32* @ebx, align 4
  store i32 %v3_80539b6, i32* %v2_80539b9, align 4
  %v0_80539ca = load i32, i32* @edi, align 4
  %v1_80539ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80539ca = add i32 %v1_80539ca, 8
  %v3_80539ca = inttoptr i32 %v2_80539ca to i32*
  store i32 %v0_80539ca, i32* %v3_80539ca, align 4
  %v0_80539d4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80539cd

dec_label_pc_80539cd:                             ; preds = %dec_label_pc_8053994, %dec_label_pc_80539c5
  %v1_80539e0 = phi i32 [ %v2_8053997, %dec_label_pc_8053994 ], [ %v0_80539d4.pre, %dec_label_pc_80539c5 ]
  %v1_80539d1 = and i32 %v3_805399f, -4
  store i32 %v1_80539d1, i32* @ebp, align 4
  %v1_80539d4 = load i32, i32* @global_var_805642c.47, align 4
  %v12_80539d4 = icmp eq i32 %v1_80539e0, %v1_80539d4
  br i1 %v12_80539d4, label %dec_label_pc_8053a2e, label %dec_label_pc_80539dc

dec_label_pc_80539dc:                             ; preds = %dec_label_pc_80539cd
  %v2_80539dc = add i32 %v1_80539e0, 4
  %v3_80539dc = add i32 %v2_80539dc, %v1_80539d1
  %v4_80539dc = inttoptr i32 %v3_80539dc to i32*
  %v5_80539dc = load i32, i32* %v4_80539dc, align 4
  store i32 %v5_80539dc, i32* %eax.global-to-local, align 4
  %v3_80539e0 = inttoptr i32 %v2_80539dc to i32*
  store i32 %v1_80539d1, i32* %v3_80539e0, align 4
  %v0_80539e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80539e3 = urem i32 %v0_80539e3, 2
  %v2_80539e3 = icmp eq i32 %v1_80539e3, 0
  store i32 %v1_80539e3, i32* %eax.global-to-local, align 4
  %v1_80539e8 = icmp eq i1 %v2_80539e3, false
  br i1 %v1_80539e8, label %dec_label_pc_8053a09, label %dec_label_pc_80539ea

dec_label_pc_80539ea:                             ; preds = %dec_label_pc_80539dc
  %v0_80539ea = load i32, i32* @esi, align 4
  %v1_80539ea = add i32 %v0_80539ea, 8
  %v2_80539ea = inttoptr i32 %v1_80539ea to i32*
  %v3_80539ea = load i32, i32* %v2_80539ea, align 4
  store i32 %v3_80539ea, i32* @edx, align 4
  %v1_80539ed = add i32 %v0_80539ea, 12
  %v2_80539ed = inttoptr i32 %v1_80539ed to i32*
  %v3_80539ed = load i32, i32* %v2_80539ed, align 4
  store i32 %v3_80539ed, i32* %eax.global-to-local, align 4
  %v1_80539f0 = add i32 %v3_80539ea, 12
  %v2_80539f0 = inttoptr i32 %v1_80539f0 to i32*
  %v3_80539f0 = load i32, i32* %v2_80539f0, align 4
  store i32 %v3_80539f0, i32* @edi, align 4
  %v12_80539f3 = icmp eq i32 %v3_80539f0, %v0_80539ea
  %v1_80539f5 = icmp eq i1 %v12_80539f3, false
  br i1 %v1_80539f5, label %dec_label_pc_80539fc, label %dec_label_pc_80539f7

dec_label_pc_80539f7:                             ; preds = %dec_label_pc_80539ea
  %v1_80539f7 = add i32 %v3_80539ed, 8
  %v2_80539f7 = inttoptr i32 %v1_80539f7 to i32*
  %v3_80539f7 = load i32, i32* %v2_80539f7, align 4
  %v15_80539f7 = icmp eq i32 %v3_80539f7, %v3_80539f0
  br i1 %v15_80539f7, label %dec_label_pc_8053a01, label %dec_label_pc_80539fc

dec_label_pc_80539fc:                             ; preds = %dec_label_pc_80539f7, %dec_label_pc_80539ea, %dec_label_pc_80539c0, %dec_label_pc_80539ac
  %v0_80539fc = call i32 @function_8053abc()
  store i32 %v0_80539fc, i32* %eax.global-to-local, align 4
  %v1_8053a01.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053a01

dec_label_pc_8053a01:                             ; preds = %dec_label_pc_80539f7, %dec_label_pc_80539fc
  %v1_8053a01 = phi i32 [ %v3_80539ea, %dec_label_pc_80539f7 ], [ %v1_8053a01.pre, %dec_label_pc_80539fc ]
  %v0_8053a01 = phi i32 [ %v3_80539ed, %dec_label_pc_80539f7 ], [ %v0_80539fc, %dec_label_pc_80539fc ]
  %v2_8053a01 = add i32 %v1_8053a01, 12
  %v3_8053a01 = inttoptr i32 %v2_8053a01 to i32*
  store i32 %v0_8053a01, i32* %v3_8053a01, align 4
  %v0_8053a04 = load i32, i32* @edx, align 4
  %v1_8053a04 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a04 = add i32 %v1_8053a04, 8
  %v3_8053a04 = inttoptr i32 %v2_8053a04 to i32*
  store i32 %v0_8053a04, i32* %v3_8053a04, align 4
  %v0_8053a07 = load i32, i32* @ebx, align 4
  %v1_8053a07 = load i32, i32* @ebp, align 4
  %v2_8053a07 = add i32 %v1_8053a07, %v0_8053a07
  store i32 %v2_8053a07, i32* @ebx, align 4
  br label %dec_label_pc_8053a09

dec_label_pc_8053a09:                             ; preds = %dec_label_pc_80539dc, %dec_label_pc_8053a01
  %v0_8053a09 = load i32, i32* @global_var_805643c.65, align 4
  store i32 %v0_8053a09, i32* %eax.global-to-local, align 4
  %v0_8053a0e = load i32, i32* @ecx, align 4
  %v1_8053a0e = add i32 %v0_8053a0e, 12
  %v2_8053a0e = inttoptr i32 %v1_8053a0e to i32*
  store i32 ptrtoint (i32* @global_var_8056434.49 to i32), i32* %v2_8053a0e, align 4
  %v0_8053a15 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a15 = load i32, i32* @ecx, align 4
  %v2_8053a15 = add i32 %v1_8053a15, 8
  %v3_8053a15 = inttoptr i32 %v2_8053a15 to i32*
  store i32 %v0_8053a15, i32* %v3_8053a15, align 4
  %v0_8053a18 = load i32, i32* @ebx, align 4
  %v1_8053a18 = load i32, i32* @ecx, align 4
  %v3_8053a18 = add i32 %v1_8053a18, %v0_8053a18
  %v4_8053a18 = inttoptr i32 %v3_8053a18 to i32*
  store i32 %v0_8053a18, i32* %v4_8053a18, align 4
  %v0_8053a1b = load i32, i32* @ecx, align 4
  %v1_8053a1b = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a1b = add i32 %v1_8053a1b, 12
  %v3_8053a1b = inttoptr i32 %v2_8053a1b to i32*
  store i32 %v0_8053a1b, i32* %v3_8053a1b, align 4
  %v0_8053a1e = load i32, i32* @ebx, align 4
  %v1_8053a20 = or i32 %v0_8053a1e, 1
  store i32 %v1_8053a20, i32* %eax.global-to-local, align 4
  %v0_8053a23 = load i32, i32* @ecx, align 4
  store i32 %v0_8053a23, i32* @global_var_805643c.65, align 4
  %v2_8053a29 = add i32 %v0_8053a23, 4
  %v3_8053a29 = inttoptr i32 %v2_8053a29 to i32*
  store i32 %v1_8053a20, i32* %v3_8053a29, align 4
  br label %dec_label_pc_8053a3e

dec_label_pc_8053a2e:                             ; preds = %dec_label_pc_80539cd
  %v0_8053a2e = load i32, i32* @ebx, align 4
  %v2_8053a2e = add i32 %v0_8053a2e, %v1_80539d1
  store i32 %v2_8053a2e, i32* @ebx, align 4
  %v1_8053a32 = or i32 %v2_8053a2e, 1
  store i32 %v1_8053a32, i32* %eax.global-to-local, align 4
  %v1_8053a35 = load i32, i32* @ecx, align 4
  %v2_8053a35 = add i32 %v1_8053a35, 4
  %v3_8053a35 = inttoptr i32 %v2_8053a35 to i32*
  store i32 %v1_8053a32, i32* %v3_8053a35, align 4
  %v0_8053a38 = load i32, i32* @ecx, align 4
  store i32 %v0_8053a38, i32* @global_var_805642c.47, align 4
  br label %dec_label_pc_8053a3e

dec_label_pc_8053a3e:                             ; preds = %dec_label_pc_8053a09, %dec_label_pc_8053a2e
  %v0_8053a3e = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053a3e, 131072
  br i1 %tmp21, label %dec_label_pc_8053aa3, label %dec_label_pc_8053a46

dec_label_pc_8053a46:                             ; preds = %dec_label_pc_8053a3e
  %v0_8053a46 = load i8, i8* @global_var_8056400.46, align 1024
  %v1_8053a46 = and i8 %v0_8053a46, 2
  %v2_8053a46 = icmp eq i8 %v1_8053a46, 0
  br i1 %v2_8053a46, label %dec_label_pc_8053a5f, label %dec_label_pc_8053a4f

dec_label_pc_8053a4f:                             ; preds = %dec_label_pc_8053a46
  %v2_8053a57 = call i32 @function_8053778(i32* bitcast (i8* @global_var_8056400.46 to i32*))
  store i32 %v2_8053a57, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a5f

dec_label_pc_8053a5f:                             ; preds = %dec_label_pc_8053a46, %dec_label_pc_8053a4f
  %v0_8053a5f = load i32, i32* @global_var_805642c.47, align 4
  store i32 %v0_8053a5f, i32* %eax.global-to-local, align 4
  %v1_8053a64 = add i32 %v0_8053a5f, 4
  %v2_8053a64 = inttoptr i32 %v1_8053a64 to i32*
  %v3_8053a64 = load i32, i32* %v2_8053a64, align 4
  %v1_8053a67 = and i32 %v3_8053a64, -4
  store i32 %v1_8053a67, i32* %eax.global-to-local, align 4
  %v1_8053a6a = load i32, i32* @global_var_8056744.63, align 4
  %v7_8053a6a = icmp ult i32 %v1_8053a67, %v1_8053a6a
  br i1 %v7_8053a6a, label %dec_label_pc_8053aa3, label %dec_label_pc_8053a72

dec_label_pc_8053a72:                             ; preds = %dec_label_pc_8053a5f
  store i32 ptrtoint (i8* @global_var_8056400.46 to i32), i32* @edx, align 4
  %v0_8053a77 = load i32, i32* @global_var_8056748.61, align 8
  store i32 %v0_8053a77, i32* @eax, align 4
  %v0_8053a7c = call i32 @function_80536eb()
  store i32 %v0_8053a7c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053aa3

dec_label_pc_8053a83:                             ; preds = %dec_label_pc_805398b
  %v2_8053a83 = inttoptr i32 %v1_8053954 to i32*
  %v3_8053a83 = load i32, i32* %v2_8053a83, align 4
  store i32 %v3_8053a83, i32* %edx.global-to-local, align 4
  %v0_8053a86 = load i32, i32* @global_var_8056750.54, align 16
  %v1_8053a86 = add i32 %v0_8053a86, -1
  store i32 %v1_8053a86, i32* @global_var_8056750.54, align 16
  %v2_8053a8c = add i32 %v3_8053a83, %v1_8053964
  store i32 %v2_8053a8c, i32* %eax.global-to-local, align 4
  %v2_8053a8f = sub i32 %v1_8053954, %v3_8053a83
  %v0_8053a95 = load i32, i32* @global_var_8056764.57, align 4
  %v2_8053a95 = sub i32 %v0_8053a95, %v2_8053a8c
  store i32 %v2_8053a95, i32* @global_var_8056764.57, align 4
  %v4_8053a9b = inttoptr i32 %v2_8053a8f to i32*
  %v5_8053a9b = call i32 @function_80546a9(i32* %v4_8053a9b, i32 %v2_8053a8c, i32 %v1_8053964, i32 %v1_8053964)
  store i32 %v5_8053a9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053aa3

dec_label_pc_8053aa3:                             ; preds = %dec_label_pc_8053a5f, %dec_label_pc_8053a3e, %dec_label_pc_8053a72, %dec_label_pc_805396b, %dec_label_pc_8053a83
  store i32 %v2_805393e, i32* @eax, align 4
  %v2_8053aac = call i32 @function_8053f44(i32 %v2_805393e, i32 1)
  store i32 %v2_8053aac, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ab4

dec_label_pc_8053ab4:                             ; preds = %dec_label_pc_8053920, %dec_label_pc_8053aa3
  %.0 = phi i32 [ undef, %dec_label_pc_8053920 ], [ %v2_8053aac, %dec_label_pc_8053aa3 ]
  store i32 %v0_8053923, i32* @ebx, align 4
  store i32 %v0_8053922, i32* @esi, align 4
  store i32 %v0_8053921, i32* @edi, align 4
  store i32 %v0_8053920, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053a83, { 1, 0, 2 }
  uselistorder i32 %v0_8053a18, { 1, 0 }
  uselistorder i32 %v1_80539e3, { 1, 0 }
  uselistorder i32 %v2_80539dc, { 1, 0 }
  uselistorder i32 %v1_80539d1, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80539e0, { 1, 0 }
  uselistorder i32 %v1_8053964, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_805395f, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8053954, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8056400.46 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8056434.49 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805642c.47, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8056400.46 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8056400.46, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805603c.45 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053ab4, { 1, 0 }
  uselistorder label %dec_label_pc_8053aa3, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053a5f, { 1, 0 }
  uselistorder label %dec_label_pc_8053a3e, { 1, 0 }
  uselistorder label %dec_label_pc_8053a09, { 1, 0 }
  uselistorder label %dec_label_pc_8053a01, { 1, 0 }
  uselistorder label %dec_label_pc_80539cd, { 1, 0 }
}

define i32 @function_8053abc() local_unnamed_addr {
dec_label_pc_8053ad7.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053ac8 = call i32 @function_8053f41(i32 ptrtoint (i32* @global_var_8056054.66 to i32))
  %v12_8053ad2 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053ad748 = add i32 %v12_8053ad2, 276
  %v5_8053ad749 = inttoptr i32 %v4_8053ad748 to i32*
  store i32 0, i32* %v5_8053ad749, align 4
  %v0_8053ae250 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ae251 = add i32 %v0_8053ae250, -1
  %v9_8053ae252 = icmp slt i32 %v1_8053ae251, 0
  store i32 %v1_8053ae251, i32* %eax.global-to-local, align 4
  %v1_8053ae353 = icmp eq i1 %v9_8053ae252, false
  br i1 %v1_8053ae353, label %dec_label_pc_8053ad7.dec_label_pc_8053ad7_crit_edge, label %dec_label_pc_8053ae5

dec_label_pc_8053ad7.dec_label_pc_8053ad7_crit_edge: ; preds = %dec_label_pc_8053ad7.lr.ph, %dec_label_pc_8053ad7.dec_label_pc_8053ad7_crit_edge
  %v1_8053ae254 = phi i32 [ %v1_8053ae2, %dec_label_pc_8053ad7.dec_label_pc_8053ad7_crit_edge ], [ %v1_8053ae251, %dec_label_pc_8053ad7.lr.ph ]
  %v0_8053ad7.pre = load i32, i32* @esp, align 4
  %v2_8053ad7 = mul i32 %v1_8053ae254, 4
  %v3_8053ad7 = add i32 %v0_8053ad7.pre, 152
  %v4_8053ad7 = add i32 %v3_8053ad7, %v2_8053ad7
  %v5_8053ad7 = inttoptr i32 %v4_8053ad7 to i32*
  store i32 0, i32* %v5_8053ad7, align 4
  %v0_8053ae2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ae2 = add i32 %v0_8053ae2, -1
  %v9_8053ae2 = icmp slt i32 %v1_8053ae2, 0
  store i32 %v1_8053ae2, i32* %eax.global-to-local, align 4
  %v1_8053ae3 = icmp eq i1 %v9_8053ae2, false
  br i1 %v1_8053ae3, label %dec_label_pc_8053ad7.dec_label_pc_8053ad7_crit_edge, label %dec_label_pc_8053ae5

dec_label_pc_8053ae5:                             ; preds = %dec_label_pc_8053ad7.dec_label_pc_8053ad7_crit_edge, %dec_label_pc_8053ad7.lr.ph
  %v0_8053ae5 = load i32, i32* @ebx, align 4
  %v2_8053ae9 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053ae9, i32* @ebx, align 4
  %v4_8053af1 = call i32 @function_8052b15(i32 %v2_8053ae9, i32 6, i32 %v0_8053ae5, i32 %v0_8053ae5)
  store i32 %v4_8053af1, i32* %eax.global-to-local, align 4
  %v1_8053af9 = icmp eq i32 %v4_8053af1, 0
  %v1_8053afb = icmp eq i1 %v1_8053af9, false
  br i1 %v1_8053afb, label %dec_label_pc_8053b0b, label %dec_label_pc_8053afd

dec_label_pc_8053afd:                             ; preds = %dec_label_pc_8053ae5
  %v3_8053b03 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053b03 = call i32 @function_805245f(i32 1, %_TYPEDEF_sigset_t* %v3_8053b03, i32 0)
  store i32 %v4_8053b03, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b0b

dec_label_pc_8053b0b:                             ; preds = %dec_label_pc_8053ae5, %dec_label_pc_8053afd
  %v2_8053b4323 = phi i32 [ %v4_8053af1, %dec_label_pc_8053ae5 ], [ %v4_8053b03, %dec_label_pc_8053afd ]
  %v0_8053b0b = load i8, i8* @global_var_8056134.67, align 4
  %v1_8053b0b = icmp eq i8 %v0_8053b0b, 0
  %v1_8053b12 = icmp eq i1 %v1_8053b0b, false
  br i1 %v1_8053b12, label %dec_label_pc_8053b43, label %dec_label_pc_8053b14

dec_label_pc_8053b14:                             ; preds = %dec_label_pc_8053b0b
  store i8 1, i8* @global_var_8056134.67, align 4
  br label %dec_label_pc_8053b1b

dec_label_pc_8053b1b:                             ; preds = %dec_label_pc_8053b82, %dec_label_pc_8053b14
  %v1_8053b23 = call i32 @function_8053f41(i32 ptrtoint (i32* @global_var_8056054.66 to i32))
  store i32 %v1_8053b23, i32* %eax.global-to-local, align 4
  %v1_8053b2f = call i32 @function_80548c1(i32 6)
  store i32 %v1_8053b2f, i32* %eax.global-to-local, align 4
  %v1_8053b3b = call i32 @function_8053f41(i32 ptrtoint (i32* @global_var_8056054.66 to i32))
  store i32 %v1_8053b3b, i32* %eax.global-to-local, align 4
  %v0_8053b43.pre = load i8, i8* @global_var_8056134.67, align 4
  br label %dec_label_pc_8053b43

dec_label_pc_8053b43:                             ; preds = %dec_label_pc_8053b0b, %dec_label_pc_8053b1b
  %v2_8053b43 = phi i32 [ %v2_8053b4323, %dec_label_pc_8053b0b ], [ %v1_8053b3b, %dec_label_pc_8053b1b ]
  %v0_8053b43 = phi i8 [ %v0_8053b0b, %dec_label_pc_8053b0b ], [ %v0_8053b43.pre, %dec_label_pc_8053b1b ]
  %v1_8053b43 = zext i8 %v0_8053b43 to i32
  %v3_8053b43 = and i32 %v2_8053b43, -256
  %v4_8053b43 = or i32 %v1_8053b43, %v3_8053b43
  store i32 %v4_8053b43, i32* %eax.global-to-local, align 4
  %v10_8053b48 = icmp eq i8 %v0_8053b43, 1
  %v1_8053b4a = icmp eq i1 %v10_8053b48, false
  br i1 %v1_8053b4a, label %dec_label_pc_8053ba4, label %dec_label_pc_8053b77.lr.ph

dec_label_pc_8053b77.lr.ph:                       ; preds = %dec_label_pc_8053b43
  store i8 2, i8* @global_var_8056134.67, align 4
  %v2_8053b5b = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053b5b, i32* %eax.global-to-local, align 4
  %v3_8053b60 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053b60 = call i32 @function_805274e(i8* %v3_8053b60, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053b7740 = add i32 %v12_8053ad2, 140
  %v5_8053b7741 = inttoptr i32 %v4_8053b7740 to i32*
  store i32 -1, i32* %v5_8053b7741, align 4
  %v0_8053b7f42 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b7f43 = add i32 %v0_8053b7f42, -1
  %v9_8053b7f44 = icmp slt i32 %v1_8053b7f43, 0
  store i32 %v1_8053b7f43, i32* %eax.global-to-local, align 4
  %v1_8053b8045 = icmp eq i1 %v9_8053b7f44, false
  br i1 %v1_8053b8045, label %dec_label_pc_8053b77.dec_label_pc_8053b77_crit_edge, label %dec_label_pc_8053b82

dec_label_pc_8053b77.dec_label_pc_8053b77_crit_edge: ; preds = %dec_label_pc_8053b77.lr.ph, %dec_label_pc_8053b77.dec_label_pc_8053b77_crit_edge
  %v1_8053b7f46 = phi i32 [ %v1_8053b7f, %dec_label_pc_8053b77.dec_label_pc_8053b77_crit_edge ], [ %v1_8053b7f43, %dec_label_pc_8053b77.lr.ph ]
  %v0_8053b77.pre = load i32, i32* @esp, align 4
  %v2_8053b77 = mul i32 %v1_8053b7f46, 4
  %v3_8053b77 = add i32 %v0_8053b77.pre, 16
  %v4_8053b77 = add i32 %v3_8053b77, %v2_8053b77
  %v5_8053b77 = inttoptr i32 %v4_8053b77 to i32*
  store i32 -1, i32* %v5_8053b77, align 4
  %v0_8053b7f = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b7f = add i32 %v0_8053b7f, -1
  %v9_8053b7f = icmp slt i32 %v1_8053b7f, 0
  store i32 %v1_8053b7f, i32* %eax.global-to-local, align 4
  %v1_8053b80 = icmp eq i1 %v9_8053b7f, false
  br i1 %v1_8053b80, label %dec_label_pc_8053b77.dec_label_pc_8053b77_crit_edge, label %dec_label_pc_8053b82

dec_label_pc_8053b82:                             ; preds = %dec_label_pc_8053b77.dec_label_pc_8053b77_crit_edge, %dec_label_pc_8053b77.lr.ph
  store i32 %v2_8053b5b, i32* %eax.global-to-local, align 4
  %v4_8053b97 = call i32 @function_8054183(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8053b97, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b1b

dec_label_pc_8053ba4:                             ; preds = %dec_label_pc_8053b43
  %v10_8053ba4 = icmp eq i8 %v0_8053b43, 2
  %v1_8053ba6 = icmp eq i1 %v10_8053ba4, false
  br i1 %v1_8053ba6, label %dec_label_pc_8053bb0, label %dec_label_pc_8053bb0.thread

dec_label_pc_8053bb0.thread:                      ; preds = %dec_label_pc_8053ba4
  store i8 3, i8* @global_var_8056134.67, align 4
  br label %dec_label_pc_8053bb9

dec_label_pc_8053bb0:                             ; preds = %dec_label_pc_8053ba4
  %v9_8053bb0 = icmp eq i8 %v0_8053b43, 3
  %v1_8053bb7 = icmp eq i1 %v9_8053bb0, false
  br i1 %v1_8053bb7, label %dec_label_pc_8053bca, label %dec_label_pc_8053bb9

dec_label_pc_8053bb9:                             ; preds = %dec_label_pc_8053bb0.thread, %dec_label_pc_8053bb0
  store i8 4, i8* @global_var_8056134.67, align 4
  %v1_8053bc5 = call i32 @function_80542e4(i32 127)
  unreachable

dec_label_pc_8053bca:                             ; preds = %dec_label_pc_8053bb0, %dec_label_pc_8053bca
  br label %dec_label_pc_8053bca

; uselistorder directives
  uselistorder i32 %v1_8053b7f, { 2, 1, 0 }
  uselistorder i32 %v1_8053ae2, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 1, 15, 16, 6, 7, 8, 9, 10, 11, 12, 14, 13, 0, 17, 18 }
  uselistorder i8 3, { 0, 2, 1 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_8056134.67, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053bca, { 1, 0 }
  uselistorder label %dec_label_pc_8053bb9, { 1, 0 }
  uselistorder label %dec_label_pc_8053b77.dec_label_pc_8053b77_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053b43, { 1, 0 }
  uselistorder label %dec_label_pc_8053b0b, { 1, 0 }
  uselistorder label %dec_label_pc_8053ad7.dec_label_pc_8053ad7_crit_edge, { 1, 0 }
}

define i32 @function_8053bcd(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053bcd:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053be0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053be0, i32* @ebx, align 4
  %v2_8053be5 = call i32 @function_8053f44(i32 %v2_8053be0, i32 134561601)
  %v1_8053bf1 = call i32 @function_8053f41(i32 ptrtoint (i32* @global_var_805606c.68 to i32))
  %v0_8053bf6 = load i32, i32* @global_var_8056138.69, align 8
  store i32 %v0_8053bf6, i32* @eax, align 4
  %v1_8053bfe = icmp eq i32 %v0_8053bf6, 0
  br i1 %v1_8053bfe, label %dec_label_pc_8053c0b, label %dec_label_pc_8053c02

dec_label_pc_8053c02:                             ; preds = %dec_label_pc_8053bcd
  %v0_8053c05 = load i32, i32* @esi, align 4
  %v1_8053c06 = call i32 @unknown_0(i32 %v0_8053c05)
  store i32 %v1_8053c06, i32* @eax, align 4
  br label %dec_label_pc_8053c0b

dec_label_pc_8053c0b:                             ; preds = %dec_label_pc_8053bcd, %dec_label_pc_8053c02
  %v2_8053c10 = call i32 @function_8053f44(i32 %v2_8053be0, i32 1)
  %v0_8053c15 = call i32 @function_8053f02()
  %v0_8053c2e = load i32, i32* @esi, align 4
  %v1_8053c2f = call i32 @function_80542e4(i32 %v0_8053c2e)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_80542e4, { 1, 0 }
  uselistorder i32 (i32)* @function_8053f41, { 8, 7, 6, 5, 4, 10, 2, 3, 1, 0, 9 }
  uselistorder i32 (i32, i32)* @function_8053f44, { 9, 8, 7, 6, 13, 12, 5, 2, 4, 3, 1, 0, 11, 10 }
  uselistorder label %dec_label_pc_8053c0b, { 1, 0 }
}

define i32 @function_8053c34() local_unnamed_addr {
dec_label_pc_8053c34:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053c34 = load i32, i32* @ebp, align 4
  %v0_8053c35 = load i32, i32* @edi, align 4
  %v0_8053c36 = load i32, i32* @esi, align 4
  %v0_8053c37 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %tmp32, i32* %edx.global-to-local, align 4
  %v1_8053c4a = icmp eq i32 %tmp32, 0
  %v1_8053c4c = icmp eq i1 %v1_8053c4a, false
  br i1 %v1_8053c4c, label %dec_label_pc_8053c53.lr.ph, label %dec_label_pc_8053dab

dec_label_pc_8053c53.lr.ph:                       ; preds = %dec_label_pc_8053c34
  %v15_8053c38 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053c5356 = add i32 %v15_8053c38, 416
  %v5_8053c5357 = inttoptr i32 %v4_8053c5356 to i32*
  store i32 0, i32* %v5_8053c5357, align 4
  %v0_8053c5e58 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c5e59 = add i32 %v0_8053c5e58, -1
  %v9_8053c5e60 = icmp slt i32 %v1_8053c5e59, 0
  store i32 %v1_8053c5e59, i32* %eax.global-to-local, align 4
  %v1_8053c5f61 = icmp eq i1 %v9_8053c5e60, false
  br i1 %v1_8053c5f61, label %dec_label_pc_8053c53.dec_label_pc_8053c53_crit_edge, label %dec_label_pc_8053c61

dec_label_pc_8053c53.dec_label_pc_8053c53_crit_edge: ; preds = %dec_label_pc_8053c53.lr.ph, %dec_label_pc_8053c53.dec_label_pc_8053c53_crit_edge
  %v1_8053c5e62 = phi i32 [ %v1_8053c5e, %dec_label_pc_8053c53.dec_label_pc_8053c53_crit_edge ], [ %v1_8053c5e59, %dec_label_pc_8053c53.lr.ph ]
  %v0_8053c53.pre = load i32, i32* @esp, align 4
  %v2_8053c53 = mul i32 %v1_8053c5e62, 4
  %v3_8053c53 = add i32 %v0_8053c53.pre, 292
  %v4_8053c53 = add i32 %v3_8053c53, %v2_8053c53
  %v5_8053c53 = inttoptr i32 %v4_8053c53 to i32*
  store i32 0, i32* %v5_8053c53, align 4
  %v0_8053c5e = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c5e = add i32 %v0_8053c5e, -1
  %v9_8053c5e = icmp slt i32 %v1_8053c5e, 0
  store i32 %v1_8053c5e, i32* %eax.global-to-local, align 4
  %v1_8053c5f = icmp eq i1 %v9_8053c5e, false
  br i1 %v1_8053c5f, label %dec_label_pc_8053c53.dec_label_pc_8053c53_crit_edge, label %dec_label_pc_8053c61

dec_label_pc_8053c61:                             ; preds = %dec_label_pc_8053c53.dec_label_pc_8053c53_crit_edge, %dec_label_pc_8053c53.lr.ph
  %v1_8053c5e.lcssa = phi i32 [ %v1_8053c5e59, %dec_label_pc_8053c53.lr.ph ], [ %v1_8053c5e, %dec_label_pc_8053c53.dec_label_pc_8053c53_crit_edge ]
  store i32 %tmp32, i32* %stack_var_-24, align 4
  %v2_8053c77 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053c77, i32* @ebx, align 4
  store i32 %v2_8053c77, i32* %stack_var_-460, align 4
  %v4_8053c7f = call i32 @function_8052b15(i32 %v2_8053c77, i32 17, i32 %v1_8053c5e.lcssa, i32 %v1_8053c5e.lcssa)
  store i32 %v4_8053c7f, i32* %eax.global-to-local, align 4
  %v2_8053c87 = icmp slt i32 %v4_8053c7f, 0
  br i1 %v2_8053c87, label %dec_label_pc_8053daf, label %dec_label_pc_8053c8f

dec_label_pc_8053c8f:                             ; preds = %dec_label_pc_8053c61
  %v2_8053c90 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053c90, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053c9b = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053c9b = call i32 @function_805245f(i32 0, %_TYPEDEF_sigset_t* %v3_8053c9b, i32 %v2_8053c90)
  store i32 %v4_8053c9b, i32* %eax.global-to-local, align 4
  %v1_8053ca3 = icmp eq i32 %v4_8053c9b, 0
  %v1_8053ca5 = icmp eq i1 %v1_8053ca3, false
  br i1 %v1_8053ca5, label %dec_label_pc_8053daf, label %dec_label_pc_8053cab

dec_label_pc_8053cab:                             ; preds = %dec_label_pc_8053c8f
  store i32 %v2_8053c90, i32* %stack_var_-460, align 4
  %v4_8053cb0 = call i32 @function_8052af1(i32 %v2_8053c90, i32 17, i32 %v4_8053c9b, i32 %v4_8053c9b)
  store i32 %v4_8053cb0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053cbd = icmp eq i32 %v4_8053cb0, 0
  br i1 %v1_8053cbd, label %dec_label_pc_8053cc6.lr.ph, label %dec_label_pc_8053d79

dec_label_pc_8053cc6.lr.ph:                       ; preds = %dec_label_pc_8053cab
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_8053c5357, align 4
  %v0_8053cd150 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053cd151 = add i32 %v0_8053cd150, -1
  %v9_8053cd152 = icmp slt i32 %v1_8053cd151, 0
  store i32 %v1_8053cd151, i32* %edx.global-to-local, align 4
  %v1_8053cd253 = icmp eq i1 %v9_8053cd152, false
  br i1 %v1_8053cd253, label %dec_label_pc_8053cc6.dec_label_pc_8053cc6_crit_edge, label %dec_label_pc_8053cd4

dec_label_pc_8053cc6.dec_label_pc_8053cc6_crit_edge: ; preds = %dec_label_pc_8053cc6.lr.ph, %dec_label_pc_8053cc6.dec_label_pc_8053cc6_crit_edge
  %v1_8053cd154 = phi i32 [ %v1_8053cd1, %dec_label_pc_8053cc6.dec_label_pc_8053cc6_crit_edge ], [ %v1_8053cd151, %dec_label_pc_8053cc6.lr.ph ]
  %v0_8053cc6.pre = load i32, i32* @esp, align 4
  %v2_8053cc6 = mul i32 %v1_8053cd154, 4
  %v3_8053cc6 = add i32 %v0_8053cc6.pre, 292
  %v4_8053cc6 = add i32 %v3_8053cc6, %v2_8053cc6
  %v5_8053cc6 = inttoptr i32 %v4_8053cc6 to i32*
  store i32 0, i32* %v5_8053cc6, align 4
  %v0_8053cd1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053cd1 = add i32 %v0_8053cd1, -1
  %v9_8053cd1 = icmp slt i32 %v1_8053cd1, 0
  store i32 %v1_8053cd1, i32* %edx.global-to-local, align 4
  %v1_8053cd2 = icmp eq i1 %v9_8053cd1, false
  br i1 %v1_8053cd2, label %dec_label_pc_8053cc6.dec_label_pc_8053cc6_crit_edge, label %dec_label_pc_8053cd4

dec_label_pc_8053cd4:                             ; preds = %dec_label_pc_8053cc6.dec_label_pc_8053cc6_crit_edge, %dec_label_pc_8053cc6.lr.ph
  store i32 %v2_8053c77, i32* %eax.global-to-local, align 4
  store i32 %v2_8053c77, i32* %stack_var_-460, align 4
  %v4_8053ce0 = call i32 @function_8052b15(i32 %v2_8053c77, i32 17, i32 0, i32 0)
  store i32 %v4_8053ce0, i32* %eax.global-to-local, align 4
  %v2_8053ce8 = icmp slt i32 %v4_8053ce0, 0
  br i1 %v2_8053ce8, label %dec_label_pc_8053daf, label %dec_label_pc_8053cf0

dec_label_pc_8053cf0:                             ; preds = %dec_label_pc_8053cd4
  %v2_8053cf1 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053cf1, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053cfa = call i32 @function_8054183(i32 17, i32* null, i32 %v2_8053cf1)
  store i32 %v4_8053cfa, i32* %eax.global-to-local, align 4
  %v2_8053d02 = icmp slt i32 %v4_8053cfa, 0
  %v1_8053d04 = icmp eq i1 %v2_8053d02, false
  br i1 %v1_8053d04, label %dec_label_pc_8053d2e, label %dec_label_pc_8053d06

dec_label_pc_8053d06:                             ; preds = %dec_label_pc_8053cf0
  %v0_8053d06 = load i32, i32* %stack_var_-460, align 4
  %v1_8053d06 = call i32 @function_80526fd(i32 %v0_8053d06)
  store i32 %v1_8053d06, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d06, i32* @ebx, align 4
  %v1_8053d0d = inttoptr i32 %v1_8053d06 to i32*
  %v2_8053d0d = load i32, i32* %v1_8053d0d, align 4
  store i32 %v2_8053d0d, i32* @esi, align 4
  store i32 %v2_8053c90, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053d1c = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053d1c = call i32 @function_805245f(i32 2, %_TYPEDEF_sigset_t* %v3_8053d1c, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053d27 = load i32, i32* @esi, align 4
  %v1_8053d27 = load i32, i32* @ebx, align 4
  %v2_8053d27 = inttoptr i32 %v1_8053d27 to i32*
  store i32 %v0_8053d27, i32* %v2_8053d27, align 4
  %v0_8053dbc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053db2

dec_label_pc_8053d2e:                             ; preds = %dec_label_pc_8053cf0
  %v3_8053d2e = load i32, i32* %stack_var_-420, align 4
  %v12_8053d2e = icmp eq i32 %v3_8053d2e, 1
  %v2_8053d3a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053d3a, i32* @ebx, align 4
  %v1_8053d41 = icmp eq i1 %v12_8053d2e, false
  br i1 %v1_8053d41, label %dec_label_pc_8053d68, label %dec_label_pc_8053d43

dec_label_pc_8053d43:                             ; preds = %dec_label_pc_8053d2e
  %v0_8053d43 = load i32, i32* @edi, align 4
  store i32 %v2_8053d3a, i32* %stack_var_-460, align 4
  %v4_8053d47 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053d47 = call i32 @function_80546db(%timespec* %v4_8053d47, i32 %v2_8053d3a, i32 %v0_8053d43, i32 %v0_8053d43)
  store i32 %v5_8053d47, i32* %eax.global-to-local, align 4
  store i32 %v5_8053d47, i32* @edi, align 4
  %v1_8053d4e = call i32 @function_80526fd(i32 %v2_8053d3a)
  store i32 %v1_8053d4e, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d4e, i32* @ebx, align 4
  %v1_8053d58 = inttoptr i32 %v1_8053d4e to i32*
  %v2_8053d58 = load i32, i32* %v1_8053d58, align 4
  store i32 %v2_8053d58, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053d5f = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053d5f = call i32 @function_805245f(i32 2, %_TYPEDEF_sigset_t* %v3_8053d5f, i32 0)
  store i32 %v4_8053d5f, i32* %eax.global-to-local, align 4
  %v0_8053d64 = load i32, i32* @esi, align 4
  %v1_8053d64 = load i32, i32* @ebx, align 4
  %v2_8053d64 = inttoptr i32 %v1_8053d64 to i32*
  store i32 %v0_8053d64, i32* %v2_8053d64, align 4
  %v0_8053d8e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053d8b

dec_label_pc_8053d68:                             ; preds = %dec_label_pc_8053d2e
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053d6e = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053d6e = call i32 @function_805245f(i32 2, %_TYPEDEF_sigset_t* %v3_8053d6e, i32 0)
  store i32 %v4_8053d6e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053d84

dec_label_pc_8053d79:                             ; preds = %dec_label_pc_8053cab
  %v2_8053d7b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053d7b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d84

dec_label_pc_8053d84:                             ; preds = %dec_label_pc_8053d68, %dec_label_pc_8053d79
  %storemerge3.pre-phi = phi i32 [ %v2_8053d3a, %dec_label_pc_8053d68 ], [ %v2_8053d7b, %dec_label_pc_8053d79 ]
  %v3_8053d84 = phi i32 [ %v2_8053c90, %dec_label_pc_8053d68 ], [ %v4_8053cb0, %dec_label_pc_8053d79 ]
  %v2_8053d84 = phi i32 [ 0, %dec_label_pc_8053d68 ], [ %v4_8053cb0, %dec_label_pc_8053d79 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053d84 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053d84 = call i32 @function_80546db(%timespec* %v4_8053d84, i32 %storemerge3.pre-phi, i32 %v2_8053d84, i32 %v3_8053d84)
  store i32 %v5_8053d84, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d8b

dec_label_pc_8053d8b:                             ; preds = %dec_label_pc_8053d43, %dec_label_pc_8053d84
  %v0_8053d8e = phi i32 [ %v0_8053d8e.pre, %dec_label_pc_8053d43 ], [ %v5_8053d84, %dec_label_pc_8053d84 ]
  %v1_8053d8e = icmp eq i32 %v0_8053d8e, 0
  br i1 %v1_8053d8e, label %dec_label_pc_8053dab, label %dec_label_pc_8053d92

dec_label_pc_8053d92:                             ; preds = %dec_label_pc_8053d8b
  %v4_8053da2 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053da2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053db2

dec_label_pc_8053dab:                             ; preds = %dec_label_pc_8053c34, %dec_label_pc_8053d8b
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053db2

dec_label_pc_8053daf:                             ; preds = %dec_label_pc_8053cd4, %dec_label_pc_8053c8f, %dec_label_pc_8053c61
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053db2

dec_label_pc_8053db2:                             ; preds = %dec_label_pc_8053dab, %dec_label_pc_8053d92, %dec_label_pc_8053d06, %dec_label_pc_8053daf
  %v0_8053dbc = phi i32 [ 0, %dec_label_pc_8053dab ], [ %v4_8053da2, %dec_label_pc_8053d92 ], [ %v0_8053dbc.pre, %dec_label_pc_8053d06 ], [ -1, %dec_label_pc_8053daf ]
  store i32 %v0_8053c37, i32* @ebx, align 4
  store i32 %v0_8053c36, i32* @esi, align 4
  store i32 %v0_8053c35, i32* @edi, align 4
  store i32 %v0_8053c34, i32* @ebp, align 4
  ret i32 %v0_8053dbc

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8053d4e, { 1, 0, 2 }
  uselistorder i32 %v2_8053d3a, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8053cd1, { 2, 1, 0 }
  uselistorder i32 %v4_8053cb0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8053c90, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8053c77, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053c5e, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 3, 2, 0, 6, 7, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 24, 25, 23 }
  uselistorder i32 (i32, i32*, i32)* @function_8054183, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052b15, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_8053db2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053dab, { 1, 0 }
  uselistorder label %dec_label_pc_8053d8b, { 1, 0 }
  uselistorder label %dec_label_pc_8053d84, { 1, 0 }
  uselistorder label %dec_label_pc_8053cc6.dec_label_pc_8053cc6_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053c53.dec_label_pc_8053c53_crit_edge, { 1, 0 }
}

define i32 @function_8053dbd(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053dbd:
  switch i32 %arg1, label %dec_label_pc_8053ddc [
    i32 0, label %dec_label_pc_8053dec
    i32 1, label %dec_label_pc_8053ed1
    i32 2, label %dec_label_pc_8053df6
    i32 3, label %dec_label_pc_8053e00
    i32 4, label %dec_label_pc_8053e0a
    i32 5, label %dec_label_pc_8053ea0
    i32 6, label %dec_label_pc_8053e12
    i32 7, label %dec_label_pc_8053dd2
    i32 8, label %dec_label_pc_8053dd2
    i32 9, label %dec_label_pc_8053dd2
    i32 10, label %dec_label_pc_8053dd2
    i32 11, label %dec_label_pc_8053dd2
    i32 12, label %dec_label_pc_8053dd2
    i32 13, label %dec_label_pc_8053dd2
    i32 14, label %dec_label_pc_8053dd2
    i32 15, label %dec_label_pc_8053dd2
    i32 16, label %dec_label_pc_8053dd2
    i32 17, label %dec_label_pc_8053dd2
    i32 18, label %dec_label_pc_8053dd2
    i32 19, label %dec_label_pc_8053dd2
    i32 20, label %dec_label_pc_8053dd2
    i32 21, label %dec_label_pc_8053dd2
    i32 22, label %dec_label_pc_8053dd2
    i32 23, label %dec_label_pc_8053ed1
    i32 24, label %dec_label_pc_8053ed1
    i32 25, label %dec_label_pc_8053edd
    i32 26, label %dec_label_pc_8053eae
    i32 27, label %dec_label_pc_8053ed1
    i32 28, label %dec_label_pc_8053e24
    i32 29, label %dec_label_pc_8053ea7
    i32 30, label %dec_label_pc_8053e1c
    i32 31, label %dec_label_pc_8053ebc
    i32 32, label %dec_label_pc_8053ed1
    i32 33, label %dec_label_pc_8053ed1
    i32 34, label %dec_label_pc_8053ed1
    i32 35, label %dec_label_pc_8053eb5
    i32 36, label %dec_label_pc_8053ee4
    i32 37, label %dec_label_pc_8053eeb
    i32 38, label %dec_label_pc_8053ee4
    i32 39, label %dec_label_pc_8053e2e
    i32 40, label %dec_label_pc_8053ef2
    i32 41, label %dec_label_pc_8053ed1
    i32 42, label %dec_label_pc_8053ebc
    i32 43, label %dec_label_pc_8053eeb
    i32 44, label %dec_label_pc_8053ef9
    i32 45, label %dec_label_pc_8053eeb
    i32 46, label %dec_label_pc_8053ea7
    i32 47, label %dec_label_pc_8053ea7
    i32 48, label %dec_label_pc_8053ea7
    i32 49, label %dec_label_pc_8053ed1
    i32 50, label %dec_label_pc_8053ed1
    i32 51, label %dec_label_pc_8053ea7
    i32 52, label %dec_label_pc_8053ea7
    i32 53, label %dec_label_pc_8053ed1
    i32 54, label %dec_label_pc_8053ed1
    i32 55, label %dec_label_pc_8053ed1
    i32 56, label %dec_label_pc_8053ed1
    i32 57, label %dec_label_pc_8053ed1
    i32 58, label %dec_label_pc_8053ed1
    i32 59, label %dec_label_pc_8053ed1
    i32 60, label %dec_label_pc_8053ed1
    i32 61, label %dec_label_pc_8053ed1
    i32 62, label %dec_label_pc_8053ed1
    i32 63, label %dec_label_pc_8053ed1
    i32 64, label %dec_label_pc_8053ed1
    i32 65, label %dec_label_pc_8053ed1
    i32 66, label %dec_label_pc_8053ed1
    i32 67, label %dec_label_pc_8053dd2
    i32 68, label %dec_label_pc_8053dd2
    i32 69, label %dec_label_pc_8053eb5
    i32 70, label %dec_label_pc_8053eb5
    i32 71, label %dec_label_pc_8053eb5
    i32 72, label %dec_label_pc_8053ebc
    i32 73, label %dec_label_pc_8053ec3
    i32 74, label %dec_label_pc_8053eca
    i32 75, label %dec_label_pc_8053e38
    i32 76, label %dec_label_pc_8053eca
    i32 77, label %dec_label_pc_8053dd2
    i32 78, label %dec_label_pc_8053dd2
    i32 79, label %dec_label_pc_8053dd2
    i32 80, label %dec_label_pc_8053dd2
    i32 81, label %dec_label_pc_8053dd2
    i32 82, label %dec_label_pc_8053dd2
    i32 83, label %dec_label_pc_8053dd2
    i32 84, label %dec_label_pc_8053dd2
    i32 85, label %dec_label_pc_8053ed1
    i32 86, label %dec_label_pc_8053ed1
    i32 87, label %dec_label_pc_8053eae
    i32 88, label %dec_label_pc_8053e42
    i32 89, label %dec_label_pc_8053e4c
    i32 90, label %dec_label_pc_8053ec3
    i32 91, label %dec_label_pc_8053dd2
    i32 92, label %dec_label_pc_8053dd2
    i32 93, label %dec_label_pc_8053dd2
    i32 94, label %dec_label_pc_8053dd2
    i32 95, label %dec_label_pc_8053ea7
    i32 96, label %dec_label_pc_8053ed1
    i32 97, label %dec_label_pc_8053ed1
    i32 98, label %dec_label_pc_8053dd2
    i32 99, label %dec_label_pc_8053dd2
    i32 100, label %dec_label_pc_8053dd2
    i32 101, label %dec_label_pc_8053e56
    i32 102, label %dec_label_pc_8053e99
    i32 103, label %dec_label_pc_8053ed6
    i32 104, label %dec_label_pc_8053eae
    i32 105, label %dec_label_pc_8053e60
    i32 106, label %dec_label_pc_8053ebc
    i32 107, label %dec_label_pc_8053ebc
    i32 108, label %dec_label_pc_8053ea0
    i32 109, label %dec_label_pc_8053edd
    i32 110, label %dec_label_pc_8053ef9
    i32 111, label %dec_label_pc_8053e99
    i32 112, label %dec_label_pc_8053ed6
    i32 113, label %dec_label_pc_8053ef9
    i32 114, label %dec_label_pc_8053e6a
    i32 115, label %dec_label_pc_8053ef2
    i32 116, label %dec_label_pc_8053ed1
    i32 117, label %dec_label_pc_8053ed1
    i32 118, label %dec_label_pc_8053e74
    i32 119, label %dec_label_pc_8053e7e
    i32 120, label %dec_label_pc_8053eeb
    i32 121, label %dec_label_pc_8053eae
    i32 122, label %dec_label_pc_8053eae
    i32 123, label %dec_label_pc_8053eae
    i32 124, label %dec_label_pc_8053eae
    i32 125, label %dec_label_pc_8053dd2
    i32 126, label %dec_label_pc_8053dd2
    i32 127, label %dec_label_pc_8053ed1
    i32 128, label %dec_label_pc_8053ed1
    i32 129, label %dec_label_pc_8053dd2
    i32 130, label %dec_label_pc_8053dd2
    i32 131, label %dec_label_pc_8053ed1
    i32 149, label %dec_label_pc_8053e85
  ]

dec_label_pc_8053dd2:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ddc:                             ; preds = %dec_label_pc_8053dbd
  %v1_8053ddc = call i32 @function_80526fd(i32 ptrtoint (i32* @0 to i32))
  %v1_8053de1 = inttoptr i32 %v1_8053ddc to i32*
  store i32 22, i32* %v1_8053de1, align 4
  br label %dec_label_pc_8053ed1

dec_label_pc_8053dec:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053df6:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e00:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e0a:                             ; preds = %dec_label_pc_8053dbd
  %v0_8053e0d = call i32 @function_8054509()
  br label %dec_label_pc_8053e12

dec_label_pc_8053e12:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053e0a
  br label %dec_label_pc_8053efe

dec_label_pc_8053e1c:                             ; preds = %dec_label_pc_8053dbd
  %v0_8053e1f = call i32 @function_80545a0()
  br label %dec_label_pc_8053e24

dec_label_pc_8053e24:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053e1c
  br label %dec_label_pc_8053efe

dec_label_pc_8053e2e:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e38:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e42:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e4c:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e56:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e60:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e6a:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e74:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e7e:                             ; preds = %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053e85:                             ; preds = %dec_label_pc_8053dbd
  %v5_8053e8b = call i32 @function_805430c(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053e93 = icmp slt i32 %v5_8053e8b, 0
  %v1_8053e95 = icmp eq i1 %v2_8053e93, false
  br i1 %v1_8053e95, label %dec_label_pc_8053ea7, label %dec_label_pc_8053ed1

dec_label_pc_8053e99:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ea0:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ea7:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053e85
  br label %dec_label_pc_8053efe

dec_label_pc_8053eae:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053eb5:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ebc:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ec3:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053eca:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ed1:                             ; preds = %dec_label_pc_8053e85, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053ddc
  br label %dec_label_pc_8053efe

dec_label_pc_8053ed6:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053edd:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ee4:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053eeb:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ef2:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053ef9:                             ; preds = %dec_label_pc_8053dbd, %dec_label_pc_8053dbd, %dec_label_pc_8053dbd
  br label %dec_label_pc_8053efe

dec_label_pc_8053efe:                             ; preds = %dec_label_pc_8053ef2, %dec_label_pc_8053eeb, %dec_label_pc_8053ee4, %dec_label_pc_8053edd, %dec_label_pc_8053ed6, %dec_label_pc_8053eca, %dec_label_pc_8053ec3, %dec_label_pc_8053ebc, %dec_label_pc_8053eb5, %dec_label_pc_8053eae, %dec_label_pc_8053ea0, %dec_label_pc_8053e99, %dec_label_pc_8053ea7, %dec_label_pc_8053e7e, %dec_label_pc_8053e74, %dec_label_pc_8053e6a, %dec_label_pc_8053e60, %dec_label_pc_8053e56, %dec_label_pc_8053e4c, %dec_label_pc_8053e42, %dec_label_pc_8053e38, %dec_label_pc_8053e2e, %dec_label_pc_8053e24, %dec_label_pc_8053e12, %dec_label_pc_8053e00, %dec_label_pc_8053df6, %dec_label_pc_8053dec, %dec_label_pc_8053dd2, %dec_label_pc_8053ed1, %dec_label_pc_8053ef9
  %v0_8053f01 = phi i32 [ 255, %dec_label_pc_8053ef2 ], [ 2048, %dec_label_pc_8053eeb ], [ 99, %dec_label_pc_8053ee4 ], [ 20, %dec_label_pc_8053edd ], [ -128, %dec_label_pc_8053ed6 ], [ 1024, %dec_label_pc_8053eca ], [ 4, %dec_label_pc_8053ec3 ], [ 32, %dec_label_pc_8053ebc ], [ 256, %dec_label_pc_8053eb5 ], [ 2147483647, %dec_label_pc_8053eae ], [ 16, %dec_label_pc_8053ea0 ], [ 127, %dec_label_pc_8053e99 ], [ 200112, %dec_label_pc_8053ea7 ], [ 9, %dec_label_pc_8053e7e ], [ 65535, %dec_label_pc_8053e74 ], [ -32768, %dec_label_pc_8053e6a ], [ -2147483648, %dec_label_pc_8053e60 ], [ 8, %dec_label_pc_8053e56 ], [ 500, %dec_label_pc_8053e4c ], [ 4096, %dec_label_pc_8053e42 ], [ 16384, %dec_label_pc_8053e38 ], [ 1000, %dec_label_pc_8053e2e ], [ 32768, %dec_label_pc_8053e24 ], [ 6, %dec_label_pc_8053e12 ], [ 65536, %dec_label_pc_8053e00 ], [ 100, %dec_label_pc_8053df6 ], [ 131072, %dec_label_pc_8053dec ], [ 1, %dec_label_pc_8053dd2 ], [ -1, %dec_label_pc_8053ed1 ], [ 32767, %dec_label_pc_8053ef9 ]
  ret i32 %v0_8053f01

; uselistorder directives
  uselistorder i32 65536, { 32, 33, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 14, 12, 15, 17, 16, 18, 1, 19, 0, 2, 22, 20, 23, 21, 26, 24, 25, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 22, 23, 18, 19, 3, 4, 16, 17, 20, 21, 14, 15, 1, 2, 12, 13, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 65535, { 2, 0, 1, 3 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 3, 1, 0, 2 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 2, 0, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 96, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 4, 0, 1, 2, 3 }
  uselistorder i32 60, { 2, 0, 1 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 49, { 1, 2, 0 }
  uselistorder i32 47, { 1, 2, 3, 0 }
  uselistorder i32 46, { 2, 0, 3, 1 }
  uselistorder i32 43, { 1, 2, 3, 4, 0 }
  uselistorder i32 42, { 2, 0, 3, 4, 1 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 37, { 1, 0, 2, 3, 4 }
  uselistorder i32 34, { 2, 0, 1 }
  uselistorder i32 27, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 23, { 1, 2, 3, 4, 0 }
  uselistorder i32 21, { 1, 0 }
  uselistorder i32 17, { 6, 4, 5, 2, 3, 1, 0 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder i32 9, { 3, 6, 0, 1, 5, 8, 4, 10, 9, 7, 11, 2 }
  uselistorder i32 6, { 0, 5, 2, 3, 1, 8, 4, 7, 6 }
  uselistorder i32 5, { 5, 0, 8, 9, 3, 2, 7, 6, 1, 4 }
  uselistorder label %dec_label_pc_8053efe, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8053ed1, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8053ea7, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053e24, { 1, 0 }
  uselistorder label %dec_label_pc_8053e12, { 1, 0 }
}

define i32 @function_8053f02() local_unnamed_addr {
dec_label_pc_8053f02:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053f02 = load i32, i32* @ebx, align 4
  store i32 %v0_8053f02, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32 0), label %dec_label_pc_8053f16, label %dec_label_pc_8053f23

dec_label_pc_8053f16:                             ; preds = %dec_label_pc_8053f02, %dec_label_pc_8053f16
  %v1_8053f1d6 = phi i32 [ %v1_8053f1d, %dec_label_pc_8053f16 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32 -1), %dec_label_pc_8053f02 ]
  store i32 ptrtoint (i32* @global_var_8053f1d.72 to i32), i32* %stack_var_-16, align 4
  %v5_8053f16 = mul i32 %v1_8053f1d6, 4
  %v6_8053f16 = add i32 %v5_8053f16, ptrtoint (i32* @global_var_8056000.71 to i32)
  %v7_8053f16 = inttoptr i32 %v6_8053f16 to i32*
  %v8_8053f16 = load i32, i32* %v7_8053f16, align 4
  call void @__pseudo_call(i32 %v8_8053f16)
  %v0_8053f1d.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f1d = add i32 %v0_8053f1d.pre, -1
  store i32 %v1_8053f1d, i32* %ebx.global-to-local, align 4
  %v10_8053f1e = icmp eq i32 %v0_8053f1d.pre, 0
  %v1_8053f21 = icmp eq i1 %v10_8053f1e, false
  br i1 %v1_8053f21, label %dec_label_pc_8053f16, label %dec_label_pc_8053f23

dec_label_pc_8053f23:                             ; preds = %dec_label_pc_8053f16, %dec_label_pc_8053f02
  %v0_8053f23 = load i32, i32* @global_var_8056148.73, align 8
  %v1_8053f28 = icmp eq i32 %v0_8053f23, 0
  br i1 %v1_8053f28, label %dec_label_pc_8053f2e, label %dec_label_pc_8053f2c

dec_label_pc_8053f2c:                             ; preds = %dec_label_pc_8053f23
  %v0_8053f2c = load i32, i32* %stack_var_-16, align 4
  %v1_8053f2c = call i32 @unknown_0(i32 %v0_8053f2c)
  br label %dec_label_pc_8053f2e

dec_label_pc_8053f2e:                             ; preds = %dec_label_pc_8053f2c, %dec_label_pc_8053f23
  %v0_8053f2e = load i32, i32* @global_var_805614c.74, align 4
  store i32 %v0_8053f2e, i32* @ecx, align 4
  %v1_8053f34 = icmp eq i32 %v0_8053f2e, 0
  br i1 %v1_8053f34, label %dec_label_pc_8053f3d, label %dec_label_pc_8053f38

dec_label_pc_8053f38:                             ; preds = %dec_label_pc_8053f2e
  %v2_8053f3a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053f3a, i32* %ebx.global-to-local, align 4
  %v0_8053f3b = load i32, i32* %stack_var_-16, align 4
  %v1_8053f3b = call i32 @unknown_0(i32 %v0_8053f3b)
  br label %dec_label_pc_8053f3d

dec_label_pc_8053f3d:                             ; preds = %dec_label_pc_8053f2e, %dec_label_pc_8053f38
  %v2_8053f3d = load i32, i32* %stack_var_-16, align 4
  %v2_8053f3e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053f3e, i32* @edx, align 4
  ret i32 %v2_8053f3d

; uselistorder directives
  uselistorder i32 %v1_8053f1d, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053f3d, { 1, 0 }
  uselistorder label %dec_label_pc_8053f16, { 1, 0 }
}

define i32 @function_8053f41(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053f41:
  ret i32 0
}

define i32 @function_8053f44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053f44:
  %v0_8053f44 = load i32, i32* @eax, align 4
  ret i32 %v0_8053f44
}

define i32 @function_8053f45() local_unnamed_addr {
dec_label_pc_8053f45:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8053f45 = load i32, i32* @esi, align 4
  %v0_8053f46 = load i32, i32* @ebx, align 4
  %v0_8053f4a = load i32, i32* @eax, align 4
  store i32 %v0_8053f4a, i32* @esi, align 4
  %v0_8053f4c = load i32, i32* @edx, align 4
  store i32 %v0_8053f4c, i32* @ebx, align 4
  %v4_8053f51 = call i32 @function_805215d(i32 %v0_8053f4a, i32 1, i32 %tmp6)
  %v8_8053f59 = icmp eq i32 %v4_8053f51, -1
  %v1_8053f5a = icmp eq i1 %v8_8053f59, false
  br i1 %v1_8053f5a, label %dec_label_pc_8053f75, label %dec_label_pc_8053f5c

dec_label_pc_8053f5c:                             ; preds = %dec_label_pc_8053f45
  %v0_8053f5e = load i32, i32* @ebx, align 4
  %v6_8053f64 = call i32 @function_8052304(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805567c.75, i32 0, i32 0), i32 %v0_8053f5e)
  %v1_8053f6c = load i32, i32* @esi, align 4
  %v12_8053f6c = icmp eq i32 %v6_8053f64, %v1_8053f6c
  br i1 %v12_8053f6c, label %dec_label_pc_8053f75, label %dec_label_pc_8053f70

dec_label_pc_8053f70:                             ; preds = %dec_label_pc_8053f5c
  %v0_8053f70 = call i32 @function_8053abc()
  br label %dec_label_pc_8053f75

dec_label_pc_8053f75:                             ; preds = %dec_label_pc_8053f5c, %dec_label_pc_8053f45, %dec_label_pc_8053f70
  %v2_8053f75 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8053f46, i32* @ebx, align 4
  store i32 %v0_8053f45, i32* @esi, align 4
  ret i32 %v2_8053f75

; uselistorder directives
  uselistorder i32 ()* @function_8053abc, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_8052304, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805215d, { 2, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8053f75, { 2, 0, 1 }
}

define i32 @function_8053f79() local_unnamed_addr {
dec_label_pc_8053f79:
  %v0_8053f7c = load i8, i8* @global_var_8056150.76, align 16
  %v1_8053f7c = icmp eq i8 %v0_8053f7c, 0
  %v1_8053f83 = icmp eq i1 %v1_8053f7c, false
  br i1 %v1_8053f83, label %dec_label_pc_8053f79.dec_label_pc_8053fb5_crit_edge, label %dec_label_pc_8053f85

dec_label_pc_8053f79.dec_label_pc_8053fb5_crit_edge: ; preds = %dec_label_pc_8053f79
  %v0_8053fb8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8053fb5

dec_label_pc_8053f85:                             ; preds = %dec_label_pc_8053f79
  store i8 1, i8* @global_var_8056150.76, align 16
  store i32 4096, i32* @global_var_8056144.77, align 4
  br label %dec_label_pc_8053fb5

dec_label_pc_8053fb5:                             ; preds = %dec_label_pc_8053f79.dec_label_pc_8053fb5_crit_edge, %dec_label_pc_8053f85
  %v0_8053fb8 = phi i32 [ %v0_8053fb8.pre, %dec_label_pc_8053f79.dec_label_pc_8053fb5_crit_edge ], [ 0, %dec_label_pc_8053f85 ]
  ret i32 %v0_8053fb8

; uselistorder directives
  uselistorder i8 1, { 8, 0, 9, 3, 4, 5, 1, 2, 10, 11, 12, 13, 6, 7 }
  uselistorder i8* @global_var_8056150.76, { 1, 0 }
  uselistorder label %dec_label_pc_8053fb5, { 1, 0 }
}

define i32 @function_8053fb9(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8053fb9:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v0_8053fba = load i32, i32* @edi, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805613c.78, align 4
  store i32 %arg6, i32* @global_var_805614c.74, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_8053ff0 = mul i32 %arg2, 4
  %v3_8053ff0 = add i32 %tmp44, %v2_8053ff0
  %v1_8053ff3 = add i32 %v3_8053ff0, 4
  store i32 %v1_8053ff3, i32* @global_var_8056140.79, align 64
  %v3_8053ffb = load i32, i32* %arg3, align 4
  %v14_8053ffb = icmp eq i32 %v1_8053ff3, %v3_8053ffb
  %v1_8053ffd = icmp eq i1 %v14_8053ffb, false
  br i1 %v1_8053ffd, label %dec_label_pc_8054005, label %dec_label_pc_8053fff

dec_label_pc_8053fff:                             ; preds = %dec_label_pc_8053fb9
  store i32 %v3_8053ff0, i32* @global_var_8056140.79, align 64
  br label %dec_label_pc_8054005

dec_label_pc_8054005:                             ; preds = %dec_label_pc_8053fb9, %dec_label_pc_8053fff
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_805400a = ptrtoint i32* %stack_var_-136 to i32
  %v3_805400f = bitcast i32* %stack_var_-136 to i8*
  %v4_805400f = call i32 @function_805274e(i8* %v3_805400f, i32 0, i32 120)
  %v0_8054014 = load i32, i32* @global_var_8056140.79, align 64
  br label %dec_label_pc_805401c

dec_label_pc_805401c:                             ; preds = %dec_label_pc_805401c, %dec_label_pc_8054005
  %v0_805401c = phi i32 [ %v1_805401f, %dec_label_pc_805401c ], [ %v0_8054014, %dec_label_pc_8054005 ]
  %v1_805401c = inttoptr i32 %v0_805401c to i32*
  %v2_805401c = load i32, i32* %v1_805401c, align 4
  %v3_805401c = icmp eq i32 %v2_805401c, 0
  %v1_805401f = add i32 %v0_805401c, 4
  %v1_8054022 = icmp eq i1 %v3_805401c, false
  br i1 %v1_8054022, label %dec_label_pc_805401c, label %dec_label_pc_8054043.preheader

dec_label_pc_8054043.preheader:                   ; preds = %dec_label_pc_805401c
  store i32 %v1_805401f, i32* @ebx, align 4
  %v1_805404322 = inttoptr i32 %v1_805401f to i32*
  %v2_805404323 = load i32, i32* %v1_805404322, align 4
  %v3_805404324 = icmp eq i32 %v2_805404323, 0
  %v1_805404626 = icmp eq i1 %v3_805404324, false
  br i1 %v1_805404626, label %dec_label_pc_8054028.lr.ph, label %dec_label_pc_8054048

dec_label_pc_8054028.lr.ph:                       ; preds = %dec_label_pc_8054043.preheader
  %v3_8054008 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054033 = add i32 %v3_8054008, 32
  br label %dec_label_pc_8054028

dec_label_pc_8054028:                             ; preds = %dec_label_pc_8054028.lr.ph, %dec_label_pc_8054040
  %v1_8054033 = phi i32 [ %v2_805404323, %dec_label_pc_8054028.lr.ph ], [ %v2_8054043, %dec_label_pc_8054040 ]
  %v0_8054032 = phi i32 [ %v1_805401f, %dec_label_pc_8054028.lr.ph ], [ %v1_8054040, %dec_label_pc_8054040 ]
  %v6_805402d = icmp ugt i32 %v1_8054033, 14
  br i1 %v6_805402d, label %dec_label_pc_8054040, label %dec_label_pc_805402f

dec_label_pc_805402f:                             ; preds = %dec_label_pc_8054028
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_8054032, i32* %stack_var_-168, align 4
  %v2_8054033 = mul i32 %v1_8054033, 8
  %v4_8054033 = add i32 %v3_8054033, %v2_8054033
  %v3_8054038 = inttoptr i32 %v4_8054033 to i16*
  %v4_8054038 = call i32 @function_8054806(i16* %v3_8054038, i32 %v0_8054032, i32 8)
  %v0_8054040.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054040

dec_label_pc_8054040:                             ; preds = %dec_label_pc_8054028, %dec_label_pc_805402f
  %v0_8054040 = phi i32 [ %v0_8054032, %dec_label_pc_8054028 ], [ %v0_8054040.pre, %dec_label_pc_805402f ]
  %v1_8054040 = add i32 %v0_8054040, 8
  store i32 %v1_8054040, i32* @ebx, align 4
  %v1_8054043 = inttoptr i32 %v1_8054040 to i32*
  %v2_8054043 = load i32, i32* %v1_8054043, align 4
  %v3_8054043 = icmp eq i32 %v2_8054043, 0
  %v1_8054046 = icmp eq i1 %v3_8054043, false
  br i1 %v1_8054046, label %dec_label_pc_8054028, label %dec_label_pc_8054048

dec_label_pc_8054048:                             ; preds = %dec_label_pc_8054040, %dec_label_pc_8054043.preheader
  store i32 %v2_805400a, i32* @eax, align 4
  %v0_805404c = call i32 @function_80548d9()
  store i32 %v0_805404c, i32* @eax, align 4
  %v0_8054051 = call i32 @function_8053f79()
  %v1_805405a = icmp eq i32 %tmp39, 0
  %v1_805405c = icmp eq i1 %v1_805405a, false
  br i1 %v1_805405c, label %dec_label_pc_8054062, label %dec_label_pc_805405e

dec_label_pc_805405e:                             ; preds = %dec_label_pc_8054048
  %v1_805405e = and i32 %tmp39, -65536
  %v2_805405e = or i32 %v1_805405e, 4096
  br label %dec_label_pc_8054062

dec_label_pc_8054062:                             ; preds = %dec_label_pc_8054048, %dec_label_pc_805405e
  %v0_8054062 = phi i32 [ %tmp39, %dec_label_pc_8054048 ], [ %v2_805405e, %dec_label_pc_805405e ]
  store i32 %v0_8054062, i32* @global_var_8056144.77, align 4
  %v13_8054067 = icmp eq i32 %tmp38, -1
  %v1_805406c = icmp eq i1 %v13_8054067, false
  br i1 %v1_805406c, label %dec_label_pc_8054097, label %dec_label_pc_805406e

dec_label_pc_805406e:                             ; preds = %dec_label_pc_8054062
  %v0_805406e = call i32 @function_80545e5()
  store i32 %v0_805406e, i32* @ebx, align 4
  %v0_8054075 = call i32 @function_8054554()
  %v0_805407a = load i32, i32* @ebx, align 4
  %v12_805407a = icmp eq i32 %v0_805407a, %v0_8054075
  %v1_805407c = icmp eq i1 %v12_805407a, false
  br i1 %v1_805407c, label %dec_label_pc_80540ad, label %dec_label_pc_805407e

dec_label_pc_805407e:                             ; preds = %dec_label_pc_805406e
  %v0_805407e = call i32 @function_805457a()
  store i32 %v0_805407e, i32* @ebx, align 4
  %v0_8054085 = call i32 @function_805452e()
  %v0_805408a = load i32, i32* @ebx, align 4
  %v12_805408a = icmp eq i32 %v0_805408a, %v0_8054085
  %v1_805408c = icmp eq i1 %v12_805408a, false
  br i1 %v1_805408c, label %dec_label_pc_80540ad, label %dec_label_pc_805408e.thread

dec_label_pc_805408e.thread:                      ; preds = %dec_label_pc_805407e
  br label %dec_label_pc_80540d7

dec_label_pc_8054097:                             ; preds = %dec_label_pc_8054062
  %v15_8054097 = icmp eq i32 %tmp38, %tmp37
  %v1_805409b = icmp eq i1 %v15_8054097, false
  br i1 %v1_805409b, label %dec_label_pc_80540ad, label %dec_label_pc_805409d

dec_label_pc_805409d:                             ; preds = %dec_label_pc_8054097
  br label %dec_label_pc_80540ad

dec_label_pc_80540ad:                             ; preds = %dec_label_pc_805409d, %dec_label_pc_8054097, %dec_label_pc_805407e, %dec_label_pc_805406e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80540b4 = call i32 @function_8053f45()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80540c3 = call i32 @function_8053f45()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80540d2 = call i32 @function_8053f45()
  br label %dec_label_pc_80540d7

dec_label_pc_80540d7:                             ; preds = %dec_label_pc_805408e.thread, %dec_label_pc_80540ad
  store i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32* %esi.global-to-local, align 4
  %v0_80540dc = load i32, i32* @edi, align 4
  %v1_80540dc = inttoptr i32 %v0_80540dc to i32*
  %v2_80540dc = load i32, i32* %v1_80540dc, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32* %esi.global-to-local, align 4
  store i32 %v2_80540dc, i32* inttoptr (i32 134570116 to i32*), align 4
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8056148.73, align 8
  br i1 icmp ult (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569981), i32 7), label %dec_label_pc_8054108, label %dec_label_pc_80540fc

dec_label_pc_80540fc:                             ; preds = %dec_label_pc_80540d7, %dec_label_pc_80540fc
  %v4_80540fc = phi i32 [ %v1_8054103, %dec_label_pc_80540fc ], [ 0, %dec_label_pc_80540d7 ]
  store i32 ptrtoint (i32* @global_var_8054103.82 to i32), i32* %stack_var_-164, align 4
  %v5_80540fc = mul i32 %v4_80540fc, 4
  %v6_80540fc = add i32 %v5_80540fc, ptrtoint (i32* @global_var_8056000.71 to i32)
  %v7_80540fc = inttoptr i32 %v6_80540fc to i32*
  %v8_80540fc = load i32, i32* %v7_80540fc, align 4
  call void @__pseudo_call(i32 %v8_80540fc)
  %v0_8054103 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054103 = add i32 %v0_8054103, 1
  store i32 %v1_8054103, i32* %ebx.global-to-local, align 4
  %v1_8054104 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054104 = icmp ult i32 %v1_8054103, %v1_8054104
  br i1 %v7_8054104, label %dec_label_pc_80540fc, label %dec_label_pc_8054108

dec_label_pc_8054108:                             ; preds = %dec_label_pc_80540fc, %dec_label_pc_80540d7
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), i32 0), label %dec_label_pc_8054120, label %dec_label_pc_805412c

dec_label_pc_8054120:                             ; preds = %dec_label_pc_8054108, %dec_label_pc_8054120
  %v4_8054120 = phi i32 [ %v1_8054127, %dec_label_pc_8054120 ], [ 0, %dec_label_pc_8054108 ]
  store i32 ptrtoint (i32* @global_var_8054127.83 to i32), i32* %stack_var_-164, align 4
  %v5_8054120 = mul i32 %v4_8054120, 4
  %v6_8054120 = add i32 %v5_8054120, ptrtoint (i32* @global_var_8056000.71 to i32)
  %v7_8054120 = inttoptr i32 %v6_8054120 to i32*
  %v8_8054120 = load i32, i32* %v7_8054120, align 4
  call void @__pseudo_call(i32 %v8_8054120)
  %v0_8054127 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054127 = add i32 %v0_8054127, 1
  store i32 %v1_8054127, i32* %ebx.global-to-local, align 4
  %v1_8054128 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054128 = icmp ult i32 %v1_8054127, %v1_8054128
  br i1 %v7_8054128, label %dec_label_pc_8054120, label %dec_label_pc_805412c

dec_label_pc_805412c:                             ; preds = %dec_label_pc_8054120, %dec_label_pc_8054108
  %v0_8054135 = load i32, i32* %stack_var_-164, align 4
  %v1_8054135 = call i32 @function_80526fd(i32 %v0_8054135)
  %v1_805413a = inttoptr i32 %v1_8054135 to i32*
  store i32 0, i32* %v1_805413a, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8053fba)
  %v0_805416a = load i32, i32* @eax, align 4
  %v1_805416d = call i32 @function_8053bcd(i32 %v0_805416a)
  %v0_8054179 = load i32, i32* @ebx, align 4
  %v1_8054179 = inttoptr i32 %v0_8054179 to %sigcontext*
  %v2_8054179 = call i32 @sigreturn(%sigcontext* %v1_8054179)
  %v0_8054181 = load i32, i32* @ebx, align 4
  %v1_8054181 = inttoptr i32 %v0_8054181 to %sigcontext*
  %v2_8054181 = call i32 @sigreturn(%sigcontext* %v1_8054181)
  ret i32 %v2_8054181

; uselistorder directives
  uselistorder i32 %v1_8054127, { 1, 2, 0 }
  uselistorder i32 %v1_8054103, { 1, 2, 0 }
  uselistorder i32 %v2_8054043, { 1, 0 }
  uselistorder i32 %v1_8054040, { 2, 1, 0 }
  uselistorder i32 %v1_805401f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805401c, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_8053bcd, { 1, 2, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), i32 2), { 1, 3, 2, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056000.71 to i32), i32 -134569984), { 0, 2, 1 }
  uselistorder i32 ()* @function_8053f45, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 3, 0, 1, 2, 4 }
  uselistorder i32 120, { 8, 22, 23, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8054120, { 1, 0 }
  uselistorder label %dec_label_pc_80540fc, { 1, 0 }
  uselistorder label %dec_label_pc_80540d7, { 1, 0 }
  uselistorder label %dec_label_pc_8054062, { 1, 0 }
  uselistorder label %dec_label_pc_8054040, { 1, 0 }
  uselistorder label %dec_label_pc_8054028, { 1, 0 }
  uselistorder label %dec_label_pc_8054005, { 1, 0 }
}

define i32 @function_8054183(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054183:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054183 = load i32, i32* @esi, align 4
  %v0_8054184 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054199 = icmp eq i32* %arg2, null
  br i1 %v1_8054199, label %dec_label_pc_80541ec, label %dec_label_pc_805419d

dec_label_pc_805419d:                             ; preds = %dec_label_pc_8054183
  %v2_805419d = load i32, i32* %arg2, align 4
  store i32 %v2_805419d, i32* %stack_var_-148, align 4
  %v1_80541a6 = add i32 %tmp11, 4
  %v3_80541b8 = bitcast i32* %stack_var_-136 to i16*
  %v4_80541b8 = call i32 @function_8054806(i16* %v3_80541b8, i32 %v1_80541a6, i32 128)
  %v1_80541bd = add i32 %tmp11, 132
  %v2_80541d7 = inttoptr i32 %v1_80541bd to i8*
  %v3_80541d7 = load i8, i8* %v2_80541d7, align 1
  %v4_80541d7 = and i8 %v3_80541d7, 4
  %v5_80541d7 = icmp eq i8 %v4_80541d7, 0
  %v1_80541de = icmp eq i1 %v5_80541d7, false
  br i1 %v1_80541de, label %dec_label_pc_80541ec, label %dec_label_pc_80541e0

dec_label_pc_80541e0:                             ; preds = %dec_label_pc_805419d
  br label %dec_label_pc_80541ec

dec_label_pc_80541ec:                             ; preds = %dec_label_pc_80541e0, %dec_label_pc_805419d, %dec_label_pc_8054183
  %v1_80541ee = icmp eq i32 %arg3, 0
  br i1 %v1_80541ee, label %dec_label_pc_80541f6, label %dec_label_pc_80541f2

dec_label_pc_80541f2:                             ; preds = %dec_label_pc_80541ec
  %v2_80541f2 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_80541f6

dec_label_pc_80541f6:                             ; preds = %dec_label_pc_80541ec, %dec_label_pc_80541f2
  %v0_8054205 = phi i32 [ 0, %dec_label_pc_80541ec ], [ %v2_80541f2, %dec_label_pc_80541f2 ]
  br i1 %v1_8054199, label %dec_label_pc_8054203, label %dec_label_pc_80541fc

dec_label_pc_80541fc:                             ; preds = %dec_label_pc_80541f6
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8054203

dec_label_pc_8054203:                             ; preds = %dec_label_pc_80541f6, %dec_label_pc_80541fc
  %v0_8054206 = phi %sigaction* [ null, %dec_label_pc_80541f6 ], [ %phitmp, %dec_label_pc_80541fc ]
  %v5_805420e = call i32 @function_80542a9(i32 %arg1, %sigaction* %v0_8054206, i32 %v0_8054205, i32 8)
  store i32 %v5_805420e, i32* %ebx.global-to-local, align 4
  br i1 %v1_80541ee, label %dec_label_pc_8054251, label %dec_label_pc_805421c

dec_label_pc_805421c:                             ; preds = %dec_label_pc_8054203
  %v2_805421c = icmp slt i32 %v5_805420e, 0
  br i1 %v2_805421c, label %dec_label_pc_8054251, label %dec_label_pc_8054220

dec_label_pc_8054220:                             ; preds = %dec_label_pc_805421c
  %v3_8054220 = load i32, i32* %stack_var_-288, align 4
  %v2_8054224 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054220, i32* %v2_8054224, align 4
  %v2_805422c = ptrtoint i32* %stack_var_-276 to i32
  %v1_8054231 = add i32 %arg3, 4
  %v3_8054235 = inttoptr i32 %v1_8054231 to i16*
  %v4_8054235 = call i32 @function_8054806(i16* %v3_8054235, i32 %v2_805422c, i32 128)
  %v2_805423e = add i32 %arg3, 132
  %v3_805423e = inttoptr i32 %v2_805423e to i32*
  %v2_805424b = add i32 %arg3, 136
  %v3_805424b = inttoptr i32 %v2_805424b to i32*
  %v0_8054251.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054251

dec_label_pc_8054251:                             ; preds = %dec_label_pc_805421c, %dec_label_pc_8054203, %dec_label_pc_8054220
  %v0_8054251 = phi i32 [ %v5_805420e, %dec_label_pc_805421c ], [ %v5_805420e, %dec_label_pc_8054203 ], [ %v0_8054251.pre, %dec_label_pc_8054220 ]
  store i32 %v0_8054184, i32* @ebx, align 4
  store i32 %v0_8054183, i32* @esi, align 4
  ret i32 %v0_8054251

; uselistorder directives
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 1, 2, 3, 4, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8054251, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054203, { 1, 0 }
  uselistorder label %dec_label_pc_80541f6, { 1, 0 }
}

define i32 @function_805425c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_805425c:
  %stack_var_4 = alloca i32, align 4
  %v0_805425c = load i32, i32* @ebx, align 4
  %v2_8054267 = load i32, i32* @ecx, align 4
  %v4_8054267 = load i32, i32* @esi, align 4
  %v5_8054267 = load i32, i32* @edi, align 4
  %v6_8054267 = load i32, i32* @ebp, align 4
  %v7_8054267 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8054267, i32 %v0_805425c, i32 %v4_8054267, i32 %v5_8054267, i32 %v6_8054267)
  %v8_8054267 = ptrtoint i32* %v7_8054267 to i32
  store i32 %v0_805425c, i32* @ebx, align 4
  %v3_8054270 = icmp ugt i32* %v7_8054267, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_8054270, i32 134564129)
  ret i32 %v8_8054267

; uselistorder directives
  uselistorder i32* @ebp, { 5, 36, 37, 38, 39, 40, 41, 42, 43, 6, 7, 44, 45, 46, 47, 48, 49, 50, 51, 56, 52, 53, 54, 55, 4, 57, 20, 10, 11, 12, 3, 24, 25, 17, 9, 16, 21, 15, 2, 26, 8, 0, 27, 13, 14, 1, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 76, 77, 79, 80, 81, 82, 83, 34, 35 }
  uselistorder i32* @ecx, { 5, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 34, 35, 36, 1, 37, 13, 12, 38, 39, 40, 2, 41, 42, 43, 3, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 7, 8, 4, 9, 10, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 6, 81, 82, 83, 84 }
}

define i32 @function_8054277(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054277:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054277 = load i32, i32* @ebx, align 4
  store i32 %v0_8054277, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805428a = call i32 @int80_syscall(i32 102)
  store i32 %v1_805428a, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_805428a, -4095
  br i1 %tmp9, label %dec_label_pc_80542a3, label %dec_label_pc_8054297

dec_label_pc_8054297:                             ; preds = %dec_label_pc_8054277
  %v1_8054297 = call i32 @function_80526fd(i32 %v0_8054277)
  %v0_805429c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805429c = sub i32 0, %v0_805429c
  %v2_805429e = inttoptr i32 %v1_8054297 to i32*
  store i32 %v1_805429c, i32* %v2_805429e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80542a7.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80542a3

dec_label_pc_80542a3:                             ; preds = %dec_label_pc_8054277, %dec_label_pc_8054297
  %v2_80542a7 = phi i32 [ %v0_8054277, %dec_label_pc_8054277 ], [ %v2_80542a7.pre, %dec_label_pc_8054297 ]
  %v0_80542a3 = phi i32 [ %v1_805428a, %dec_label_pc_8054277 ], [ -1, %dec_label_pc_8054297 ]
  %v2_80542a5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80542a5, i32* @edx, align 4
  store i32 %v2_80542a7, i32* @ebx, align 4
  ret i32 %v0_80542a3

; uselistorder directives
  uselistorder i32 %v1_805428a, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80542a3, { 1, 0 }
}

define i32 @function_80542a9(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80542a9:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_80542aa = load i32, i32* @esi, align 4
  store i32 %v0_80542aa, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80542be = load i32, i32* @ebx, align 4
  %v7_80542c6 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_80542c6, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_80542c6, -4095
  br i1 %tmp14, label %dec_label_pc_80542de, label %dec_label_pc_80542d2

dec_label_pc_80542d2:                             ; preds = %dec_label_pc_80542a9
  %v1_80542d2 = call i32 @function_80526fd(i32 %v0_80542be)
  %v0_80542d7 = load i32, i32* %esi.global-to-local, align 4
  %v1_80542d7 = sub i32 0, %v0_80542d7
  %v2_80542d9 = inttoptr i32 %v1_80542d2 to i32*
  store i32 %v1_80542d7, i32* %v2_80542d9, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80542e1.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80542de

dec_label_pc_80542de:                             ; preds = %dec_label_pc_80542a9, %dec_label_pc_80542d2
  %v2_80542e1 = phi i32 [ %v0_80542aa, %dec_label_pc_80542a9 ], [ %v2_80542e1.pre, %dec_label_pc_80542d2 ]
  %v0_80542de = phi i32 [ %v7_80542c6, %dec_label_pc_80542a9 ], [ -1, %dec_label_pc_80542d2 ]
  store i32 %v2_80542e1, i32* @esi, align 4
  ret i32 %v0_80542de

; uselistorder directives
  uselistorder i32 %v7_80542c6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80542de, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_80542e4(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_80542e4:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_805430c(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805430c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805430c = load i32, i32* @ebx, align 4
  store i32 %v0_805430c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805431f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805431f, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_805431f, -4095
  br i1 %tmp10, label %dec_label_pc_8054338, label %dec_label_pc_805432c

dec_label_pc_805432c:                             ; preds = %dec_label_pc_805430c
  %v1_805432c = call i32 @function_80526fd(i32 %v0_805430c)
  %v0_8054331 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054331 = sub i32 0, %v0_8054331
  %v2_8054333 = inttoptr i32 %v1_805432c to i32*
  store i32 %v1_8054331, i32* %v2_8054333, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805433c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054338

dec_label_pc_8054338:                             ; preds = %dec_label_pc_805430c, %dec_label_pc_805432c
  %v2_805433c = phi i32 [ %v0_805430c, %dec_label_pc_805430c ], [ %v2_805433c.pre, %dec_label_pc_805432c ]
  %v0_8054338 = phi i32 [ %v4_805431f, %dec_label_pc_805430c ], [ -1, %dec_label_pc_805432c ]
  store i32 %v2_805433c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054338

; uselistorder directives
  uselistorder i32 %v4_805431f, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054338, { 1, 0 }
}

define i32 @function_805433e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805433e:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805433e = load i32, i32* @ebx, align 4
  store i32 %v0_805433e, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_8054351 = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_8054351, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_8054351, -4095
  br i1 %tmp13, label %dec_label_pc_805436c, label %dec_label_pc_805435e

dec_label_pc_805435e:                             ; preds = %dec_label_pc_805433e
  %v1_805435e = call i32 @function_80526fd(i32 %v0_805433e)
  %v0_8054363 = load i32, i32* @ebx, align 4
  %v1_8054363 = sub i32 0, %v0_8054363
  %v2_8054365 = inttoptr i32 %v1_805435e to i32*
  store i32 %v1_8054363, i32* %v2_8054365, align 4
  %v2_8054384.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805437f

dec_label_pc_805436c:                             ; preds = %dec_label_pc_805433e
  %v1_805436c = icmp eq i32 %v4_8054351, 0
  %v1_805436e = icmp eq i1 %v1_805436c, false
  br i1 %v1_805436e, label %dec_label_pc_805437f, label %dec_label_pc_8054370

dec_label_pc_8054370:                             ; preds = %dec_label_pc_805436c
  %v4_8054377 = bitcast i32* %stack_var_-68 to i16*
  %v5_8054377 = call i32 @function_8054789(i16* %v4_8054377, i32 %arg2, i32 %v4_8054351, i32 %v4_8054351)
  %v0_805437f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805437f

dec_label_pc_805437f:                             ; preds = %dec_label_pc_805436c, %dec_label_pc_805435e, %dec_label_pc_8054370
  %v2_8054384 = phi i32 [ %v0_805433e, %dec_label_pc_805436c ], [ %v2_8054384.pre, %dec_label_pc_805435e ], [ %v0_805433e, %dec_label_pc_8054370 ]
  %v0_805437f = phi i32 [ %v4_8054351, %dec_label_pc_805436c ], [ -1, %dec_label_pc_805435e ], [ %v0_805437f.pre, %dec_label_pc_8054370 ]
  store i32 %v2_8054384, i32* @ebx, align 4
  ret i32 %v0_805437f

; uselistorder directives
  uselistorder i32 %v4_8054351, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805437f, { 2, 0, 1 }
}

define i32 @function_8054386(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054386:
  %eax.global-to-local = alloca i32, align 4
  %v0_8054386 = load i32, i32* @edi, align 4
  %v0_8054387 = load i32, i32* @esi, align 4
  %v0_8054388 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_805438d = load i32, i32* @edx, align 4
  %v7_8054397 = inttoptr i32 %arg2 to i32*
  %v8_8054397 = call i32 @function_80543f5(i32 %arg1, i32* %v7_8054397, i32 %arg3, i32 %v0_805438d, i32 %v0_8054388, i32 %v0_8054387, i32 %v0_8054386)
  store i32 %v8_8054397, i32* %eax.global-to-local, align 4
  store i32 %v8_8054397, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8054397, 1
  br i1 %tmp24, label %dec_label_pc_80543ef, label %dec_label_pc_80543a5

dec_label_pc_80543a5:                             ; preds = %dec_label_pc_8054386
  %v0_80543a5 = load i32, i32* @ebx, align 4
  %v2_80543a5 = add i32 %v0_80543a5, %v8_8054397
  store i32 %v2_80543a5, i32* @edi, align 4
  %v7_80543eb4 = icmp ult i32 %v0_80543a5, %v2_80543a5
  br i1 %v7_80543eb4, label %dec_label_pc_80543aa, label %dec_label_pc_80543ef

dec_label_pc_80543aa:                             ; preds = %dec_label_pc_80543a5, %dec_label_pc_80543aa
  %v0_80543aa = phi i32 [ %v2_80543e9, %dec_label_pc_80543aa ], [ %v0_80543a5, %dec_label_pc_80543a5 ]
  %v1_80543aa = add i32 %v0_80543aa, 8
  %v2_80543aa = inttoptr i32 %v1_80543aa to i32*
  %v3_80543aa = load i32, i32* %v2_80543aa, align 4
  store i32 %v3_80543aa, i32* %eax.global-to-local, align 4
  %v2_80543ad = add i32 %v0_80543aa, 4
  %v3_80543ad = inttoptr i32 %v2_80543ad to i32*
  store i32 %v3_80543aa, i32* %v3_80543ad, align 4
  %v0_80543b0 = load i32, i32* @ebx, align 4
  %v1_80543b0 = add i32 %v0_80543b0, 16
  %v2_80543b0 = inttoptr i32 %v1_80543b0 to i32*
  %v3_80543b0 = load i32, i32* %v2_80543b0, align 4
  store i32 %v3_80543b0, i32* %eax.global-to-local, align 4
  %v1_80543b3 = trunc i32 %v3_80543b0 to i16
  %v3_80543b3 = add i32 %v0_80543b0, 8
  %v4_80543b3 = inttoptr i32 %v3_80543b3 to i16*
  store i16 %v1_80543b3, i16* %v4_80543b3, align 2
  %v0_80543b7 = load i32, i32* @ebx, align 4
  %v1_80543b7 = add i32 %v0_80543b7, 18
  %v2_80543b7 = inttoptr i32 %v1_80543b7 to i8*
  %v3_80543b7 = load i8, i8* %v2_80543b7, align 1
  %v4_80543b7 = zext i8 %v3_80543b7 to i32
  %v5_80543b7 = load i32, i32* %eax.global-to-local, align 4
  %v6_80543b7 = and i32 %v5_80543b7, -256
  %v7_80543b7 = or i32 %v6_80543b7, %v4_80543b7
  store i32 %v7_80543b7, i32* %eax.global-to-local, align 4
  %v3_80543ba = add i32 %v0_80543b7, 10
  %v4_80543ba = inttoptr i32 %v3_80543ba to i8*
  store i8 %v3_80543b7, i8* %v4_80543ba, align 1
  %v0_80543be = load i32, i32* @ebx, align 4
  %v1_80543be = add i32 %v0_80543be, 8
  %v2_80543be = inttoptr i32 %v1_80543be to i16*
  %v3_80543be = load i16, i16* %v2_80543be, align 2
  %v4_80543be = zext i16 %v3_80543be to i32
  %v1_80543c2 = add nsw i32 %v4_80543be, -19
  %v1_80543c6 = add i32 %v0_80543be, 19
  %v1_80543ca = add i32 %v0_80543be, 11
  store i32 %v1_80543ca, i32* %eax.global-to-local, align 4
  %v3_80543ce = inttoptr i32 %v1_80543ca to i8*
  %v4_80543ce = call i32 @function_8052727(i8* %v3_80543ce, i32 %v1_80543c6, i32 %v1_80543c2)
  store i32 %v4_80543ce, i32* %eax.global-to-local, align 4
  %v0_80543d6 = load i32, i32* @ebx, align 4
  %v1_80543d6 = add i32 %v0_80543d6, 8
  %v2_80543d6 = inttoptr i32 %v1_80543d6 to i16*
  %v3_80543d6 = load i16, i16* %v2_80543d6, align 2
  %v4_80543d6 = zext i16 %v3_80543d6 to i32
  store i32 %v4_80543d6, i32* %eax.global-to-local, align 4
  %v3_80543dd = inttoptr i32 %v0_80543d6 to i8*
  %v4_80543dd = call i32 @function_8052727(i8* %v3_80543dd, i32 %v0_80543d6, i32 %v4_80543d6)
  store i32 %v4_80543dd, i32* %eax.global-to-local, align 4
  %v0_80543e2 = load i32, i32* @ebx, align 4
  %v1_80543e2 = add i32 %v0_80543e2, 8
  %v2_80543e2 = inttoptr i32 %v1_80543e2 to i16*
  %v3_80543e2 = load i16, i16* %v2_80543e2, align 2
  %v4_80543e2 = zext i16 %v3_80543e2 to i32
  store i32 %v4_80543e2, i32* %eax.global-to-local, align 4
  %v2_80543e9 = add i32 %v4_80543e2, %v0_80543e2
  store i32 %v2_80543e9, i32* @ebx, align 4
  %v1_80543eb = load i32, i32* @edi, align 4
  %v7_80543eb = icmp ult i32 %v2_80543e9, %v1_80543eb
  br i1 %v7_80543eb, label %dec_label_pc_80543aa, label %dec_label_pc_80543eb.dec_label_pc_80543ef.loopexit_crit_edge

dec_label_pc_80543eb.dec_label_pc_80543ef.loopexit_crit_edge: ; preds = %dec_label_pc_80543aa
  %v0_80543ef.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80543ef

dec_label_pc_80543ef:                             ; preds = %dec_label_pc_80543a5, %dec_label_pc_80543eb.dec_label_pc_80543ef.loopexit_crit_edge, %dec_label_pc_8054386
  %v0_80543ef = phi i32 [ %v8_8054397, %dec_label_pc_8054386 ], [ %v0_80543ef.pre.pre, %dec_label_pc_80543eb.dec_label_pc_80543ef.loopexit_crit_edge ], [ %v8_8054397, %dec_label_pc_80543a5 ]
  store i32 %v0_80543ef, i32* %eax.global-to-local, align 4
  store i32 %v0_8054387, i32* @esi, align 4
  store i32 %v0_8054386, i32* @edi, align 4
  ret i32 %v0_80543ef

; uselistorder directives
  uselistorder i32 %v0_80543ef, { 1, 0 }
  uselistorder i32 %v2_80543e9, { 1, 2, 0 }
  uselistorder i32 %v0_80543d6, { 1, 0, 2 }
  uselistorder i32 %v0_80543be, { 1, 0, 2 }
  uselistorder i32 %v0_80543aa, { 1, 0 }
  uselistorder i32 %v0_80543a5, { 0, 2, 1 }
  uselistorder i32 %v8_8054397, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_8052727, { 6, 7, 1, 0, 2, 3, 4, 5, 8 }
  uselistorder i32 11, { 7, 5, 6, 8, 4, 0, 1, 2, 3, 9, 10 }
  uselistorder label %dec_label_pc_80543ef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80543aa, { 1, 0 }
}

define i32 @function_80543f5(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_80543f5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_80543f8 = load i32, i32* @edi, align 4
  %v0_80543fa = load i32, i32* @ebx, align 4
  %v15_80543fb = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8054404 = add i32 %arg3, 30
  %v1_805440a = and i32 %v1_8054404, -16
  %v2_805440d = sub i32 %v15_80543fb, %v1_805440a
  %v1_805440f = add i32 %v2_805440d, 15
  %v1_8054413 = and i32 %v1_805440f, -16
  %v1_8054419 = inttoptr i32 %v1_8054413 to %linux_dirent64*
  store i32 %v1_8054413, i32* %ecx.global-to-local, align 4
  %v2_805441b = add i32 %v2_805440d, -4
  %v3_805441b = inttoptr i32 %v2_805441b to i32*
  store i32 %v0_80543fa, i32* %v3_805441b, align 4
  %v0_805441c = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_8054423 = call i32 @getdents64(i32 %v0_805441c, %linux_dirent64* %v1_8054419, i32 %arg3)
  store i32 %v5_8054423, i32* %eax.global-to-local, align 4
  %v0_8054425 = load i32, i32* @esp, align 4
  %v3_8054425 = add i32 %v0_8054425, 4
  %tmp41 = icmp ult i32 %v5_8054423, -4095
  br i1 %tmp41, label %dec_label_pc_805443f, label %dec_label_pc_8054430

dec_label_pc_8054430:                             ; preds = %dec_label_pc_80543f5
  %v1_8054430 = call i32 @function_80526fd(i32 %v5_8054423)
  store i32 %v1_8054430, i32* %eax.global-to-local, align 4
  %v4_8054435 = sub i32 0, %v5_8054423
  %v2_805443b = inttoptr i32 %v1_8054430 to i32*
  store i32 %v4_8054435, i32* %v2_805443b, align 4
  br label %dec_label_pc_8054501

dec_label_pc_805443f:                             ; preds = %dec_label_pc_80543f5
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_8054413, i32* @ebx, align 4
  %v5_80544f1 = add i32 %v5_8054423, %v1_8054413
  store i32 %v5_80544f1, i32* %eax.global-to-local, align 4
  %v7_80544f430 = icmp ult i32 %v1_8054413, %v5_80544f1
  br i1 %v7_80544f430, label %dec_label_pc_805445e.lr.ph, label %dec_label_pc_80544fc

dec_label_pc_805445e.lr.ph:                       ; preds = %dec_label_pc_805443f
  %v5_805446b = add i32 %tmp14, %arg3
  br label %dec_label_pc_805445e

dec_label_pc_805445e:                             ; preds = %dec_label_pc_805445e.lr.ph, %dec_label_pc_80544a0
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_805445e.lr.ph ], [ %v3_80544a3, %dec_label_pc_80544a0 ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_805445e.lr.ph ], [ %v3_80544a0, %dec_label_pc_80544a0 ]
  %v0_80544ac34 = phi i32 [ %v1_8054413, %dec_label_pc_805445e.lr.ph ], [ %v2_80544e9, %dec_label_pc_80544a0 ]
  %v1_80544b133 = phi i32 [ %tmp14, %dec_label_pc_805445e.lr.ph ], [ %v2_805446e, %dec_label_pc_80544a0 ]
  %v0_805447832 = phi i32 [ %v3_8054425, %dec_label_pc_805445e.lr.ph ], [ %v1_80544eb, %dec_label_pc_80544a0 ]
  %v1_805445e = add i32 %v0_80544ac34, 16
  %v2_805445e = inttoptr i32 %v1_805445e to i16*
  %v3_805445e = load i16, i16* %v2_805445e, align 2
  %v4_805445e = zext i16 %v3_805445e to i32
  %v1_8054462 = add nuw nsw i32 %v4_805445e, 3
  %v1_8054468 = and i32 %v1_8054462, 131068
  store i32 %v1_8054468, i32* %ecx.global-to-local, align 4
  store i32 %v5_805446b, i32* %eax.global-to-local, align 4
  %v2_805446e = add i32 %v1_8054468, %v1_80544b133
  %tmp42 = icmp ugt i32 %v2_805446e, %v5_805446b
  br i1 %tmp42, label %dec_label_pc_8054478, label %dec_label_pc_80544a0

dec_label_pc_8054478:                             ; preds = %dec_label_pc_805445e
  %v1_8054478 = add i32 %v0_805447832, -4
  %v2_8054478 = inttoptr i32 %v1_8054478 to i32*
  store i32 0, i32* %v2_8054478, align 4
  %v5_805447a = add i32 %v0_805447832, -8
  %v6_805447a = inttoptr i32 %v5_805447a to i32*
  store i32 %stack_var_-32.036, i32* %v6_805447a, align 4
  %v5_805447d = add i32 %v0_805447832, -12
  %v6_805447d = inttoptr i32 %v5_805447d to i32*
  store i32 %stack_var_-36.035, i32* %v6_805447d, align 4
  %v5_8054480 = add i32 %v0_805447832, -16
  %v6_8054480 = inttoptr i32 %v5_8054480 to i32*
  store i32 %arg1, i32* %v6_8054480, align 4
  %v1_8054483 = call i32 @function_805460b(i32 %v2_805446e)
  store i32 %v1_8054483, i32* %eax.global-to-local, align 4
  %v0_805448b = load i32, i32* @esi, align 4
  %v15_805448b = icmp eq i32 %v0_805448b, %tmp14
  %v1_805448e = icmp eq i1 %v15_805448b, false
  br i1 %v1_805448e, label %dec_label_pc_80544fc, label %dec_label_pc_8054490

dec_label_pc_8054490:                             ; preds = %dec_label_pc_8054478
  %v1_8054490 = call i32 @function_80526fd(i32 %v2_805446e)
  store i32 %v1_8054490, i32* %eax.global-to-local, align 4
  %v1_8054495 = inttoptr i32 %v1_8054490 to i32*
  store i32 22, i32* %v1_8054495, align 4
  br label %dec_label_pc_8054501

dec_label_pc_80544a0:                             ; preds = %dec_label_pc_805445e
  %v1_80544a0 = add i32 %v0_80544ac34, 8
  %v2_80544a0 = inttoptr i32 %v1_80544a0 to i32*
  %v3_80544a0 = load i32, i32* %v2_80544a0, align 4
  store i32 %v3_80544a0, i32* %eax.global-to-local, align 4
  %v1_80544a3 = add i32 %v0_80544ac34, 12
  %v2_80544a3 = inttoptr i32 %v1_80544a3 to i32*
  %v3_80544a3 = load i32, i32* %v2_80544a3, align 4
  %v1_80544ac = inttoptr i32 %v0_80544ac34 to i32*
  %v2_80544ac = load i32, i32* %v1_80544ac, align 4
  store i32 %v2_80544ac, i32* %eax.global-to-local, align 4
  %v1_80544ae = add i32 %v0_80544ac34, 4
  %v2_80544ae = inttoptr i32 %v1_80544ae to i32*
  %v3_80544ae = load i32, i32* %v2_80544ae, align 4
  %v2_80544b1 = add i32 %v1_80544b133, 4
  %v3_80544b1 = inttoptr i32 %v2_80544b1 to i32*
  store i32 %v3_80544ae, i32* %v3_80544b1, align 4
  %v0_80544b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80544b4 = load i32, i32* @esi, align 4
  %v2_80544b4 = inttoptr i32 %v1_80544b4 to i32*
  store i32 %v0_80544b4, i32* %v2_80544b4, align 4
  %v0_80544b6 = load i32, i32* @ebx, align 4
  %v1_80544b6 = add i32 %v0_80544b6, 8
  %v2_80544b6 = inttoptr i32 %v1_80544b6 to i32*
  %v3_80544b6 = load i32, i32* %v2_80544b6, align 4
  store i32 %v3_80544b6, i32* %eax.global-to-local, align 4
  %v1_80544b9 = add i32 %v0_80544b6, 12
  %v2_80544b9 = inttoptr i32 %v1_80544b9 to i32*
  %v3_80544b9 = load i32, i32* %v2_80544b9, align 4
  %v1_80544bc = load i32, i32* @esi, align 4
  %v2_80544bc = add i32 %v1_80544bc, 12
  %v3_80544bc = inttoptr i32 %v2_80544bc to i32*
  store i32 %v3_80544b9, i32* %v3_80544bc, align 4
  %v0_80544bf = load i32, i32* %eax.global-to-local, align 4
  %v1_80544bf = load i32, i32* @esi, align 4
  %v2_80544bf = add i32 %v1_80544bf, 8
  %v3_80544bf = inttoptr i32 %v2_80544bf to i32*
  store i32 %v0_80544bf, i32* %v3_80544bf, align 4
  %v0_80544c2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80544c2 = trunc i32 %v0_80544c2 to i16
  %v2_80544c2 = load i32, i32* @esi, align 4
  %v3_80544c2 = add i32 %v2_80544c2, 16
  %v4_80544c2 = inttoptr i32 %v3_80544c2 to i16*
  store i16 %v1_80544c2, i16* %v4_80544c2, align 2
  %v0_80544c6 = load i32, i32* @ebx, align 4
  %v1_80544c6 = add i32 %v0_80544c6, 18
  %v2_80544c6 = inttoptr i32 %v1_80544c6 to i8*
  %v3_80544c6 = load i8, i8* %v2_80544c6, align 1
  %v4_80544c6 = zext i8 %v3_80544c6 to i32
  %v5_80544c6 = load i32, i32* %eax.global-to-local, align 4
  %v6_80544c6 = and i32 %v5_80544c6, -256
  %v7_80544c6 = or i32 %v6_80544c6, %v4_80544c6
  store i32 %v7_80544c6, i32* %eax.global-to-local, align 4
  %v2_80544c9 = load i32, i32* @esi, align 4
  %v3_80544c9 = add i32 %v2_80544c9, 18
  %v4_80544c9 = inttoptr i32 %v3_80544c9 to i8*
  store i8 %v3_80544c6, i8* %v4_80544c9, align 1
  %v0_80544cc = load i32, i32* %eax.global-to-local, align 4
  %v1_80544cc = load i32, i32* @esp, align 4
  %v2_80544cc = add i32 %v1_80544cc, -4
  %v3_80544cc = inttoptr i32 %v2_80544cc to i32*
  store i32 %v0_80544cc, i32* %v3_80544cc, align 4
  %v0_80544cd = load i32, i32* @ebx, align 4
  %v1_80544cd = add i32 %v0_80544cd, 16
  %v2_80544cd = inttoptr i32 %v1_80544cd to i16*
  %v3_80544cd = load i16, i16* %v2_80544cd, align 2
  %v4_80544cd = zext i16 %v3_80544cd to i32
  %v1_80544d1 = add nsw i32 %v4_80544cd, -19
  %v2_80544d4 = add i32 %v1_80544cc, -8
  %v3_80544d4 = inttoptr i32 %v2_80544d4 to i32*
  store i32 %v1_80544d1, i32* %v3_80544d4, align 4
  %v0_80544d5 = load i32, i32* @ebx, align 4
  %v1_80544d5 = add i32 %v0_80544d5, 19
  %v2_80544d8 = add i32 %v1_80544cc, -12
  %v3_80544d8 = inttoptr i32 %v2_80544d8 to i32*
  store i32 %v1_80544d5, i32* %v3_80544d8, align 4
  %v0_80544d9 = load i32, i32* @esi, align 4
  %v1_80544d9 = add i32 %v0_80544d9, 19
  store i32 %v1_80544d9, i32* %eax.global-to-local, align 4
  %v2_80544dc = add i32 %v1_80544cc, -16
  %v3_80544dc = inttoptr i32 %v2_80544dc to i32*
  store i32 %v1_80544d9, i32* %v3_80544dc, align 4
  %v3_80544dd = inttoptr i32 %v2_805446e to i16*
  %v4_80544dd = call i32 @function_8054806(i16* %v3_80544dd, i32 %v3_80544a0, i32 %v3_80544a3)
  store i32 %v4_80544dd, i32* %eax.global-to-local, align 4
  %v0_80544e2 = load i32, i32* @ebx, align 4
  %v1_80544e2 = add i32 %v0_80544e2, 16
  %v2_80544e2 = inttoptr i32 %v1_80544e2 to i16*
  %v3_80544e2 = load i16, i16* %v2_80544e2, align 2
  %v4_80544e2 = zext i16 %v3_80544e2 to i32
  store i32 %v2_805446e, i32* @esi, align 4
  %v2_80544e9 = add i32 %v4_80544e2, %v0_80544e2
  store i32 %v2_80544e9, i32* @ebx, align 4
  %v0_80544eb = load i32, i32* @esp, align 4
  %v1_80544eb = add i32 %v0_80544eb, 16
  store i32 %v5_80544f1, i32* %eax.global-to-local, align 4
  %v7_80544f4 = icmp ult i32 %v2_80544e9, %v5_80544f1
  br i1 %v7_80544f4, label %dec_label_pc_805445e, label %dec_label_pc_80544fc

dec_label_pc_80544fc:                             ; preds = %dec_label_pc_805443f, %dec_label_pc_80544a0, %dec_label_pc_8054478
  %v0_80544fc = phi i32 [ %v0_805448b, %dec_label_pc_8054478 ], [ %tmp14, %dec_label_pc_805443f ], [ %v2_805446e, %dec_label_pc_80544a0 ]
  store i32 %v0_80544fc, i32* %eax.global-to-local, align 4
  %v5_80544fe = sub i32 %v0_80544fc, %tmp14
  br label %dec_label_pc_8054501

dec_label_pc_8054501:                             ; preds = %dec_label_pc_8054490, %dec_label_pc_8054430, %dec_label_pc_80544fc
  %storemerge = phi i32 [ %v5_80544fe, %dec_label_pc_80544fc ], [ -1, %dec_label_pc_8054430 ], [ -1, %dec_label_pc_8054490 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80543fa, i32* @ebx, align 4
  store i32 %v0_80543f8, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80544fc, { 1, 0 }
  uselistorder i32 %v2_80544e9, { 0, 2, 1 }
  uselistorder i32 %v3_80544a3, { 1, 0 }
  uselistorder i32 %v3_80544a0, { 1, 2, 0 }
  uselistorder i32 %v2_805446e, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_805447832, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80544ac34, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_80544f1, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8054423, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 17, 1, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 0, 19 }
  uselistorder i32 (i16*, i32, i32)* @function_8054806, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 19, { 2, 3, 4, 1, 0 }
  uselistorder i32 18, { 1, 2, 3, 0 }
  uselistorder i32 22, { 3, 7, 0, 1, 2, 8, 4, 5, 6 }
  uselistorder i32 -12, { 17, 34, 86, 87, 47, 48, 49, 50, 51, 52, 36, 18, 40, 20, 44, 42, 38, 19, 45, 35, 46, 21, 53, 43, 41, 39, 37, 22, 54, 55, 23, 33, 24, 29, 26, 25, 59, 60, 0, 61, 1, 2, 79, 74, 75, 76, 30, 31, 73, 32, 77, 78, 62, 3, 4, 27, 28, 5, 63, 64, 6, 7, 65, 8, 66, 9, 10, 67, 11, 68, 12, 13, 69, 14, 70, 15, 71, 72, 56, 57, 58, 80, 81, 82, 83, 84, 16, 85 }
  uselistorder i32 -8, { 0, 8, 73, 69, 71, 70, 72, 74, 75, 22, 23, 24, 25, 26, 27, 10, 11, 15, 2, 19, 17, 13, 1, 20, 9, 21, 28, 29, 18, 16, 14, 12, 3, 30, 31, 4, 66, 5, 51, 38, 6, 35, 36, 37, 61, 55, 56, 57, 52, 53, 54, 58, 59, 60, 39, 40, 7, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 32, 33, 34, 62, 63, 64, 65, 67, 68 }
  uselistorder i32* @esp, { 34, 35, 36, 2, 3, 4, 5, 6, 175, 176, 0, 47, 48, 49, 50, 51, 52, 53, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 7, 10, 95, 96, 11, 124, 125, 126, 127, 63, 64, 65, 66, 67, 68, 106, 107, 89, 90, 42, 43, 44, 45, 46, 84, 85, 86, 87, 88, 97, 98, 79, 80, 81, 82, 83, 129, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 37, 38, 39, 40, 41, 120, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 121, 122, 123, 130, 131, 132, 133, 158, 134, 135, 136, 137, 138, 139, 128, 140, 141, 142, 143, 144, 145, 154, 155, 156, 146, 147, 148, 149, 150, 151, 152, 153, 8, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 13, 177, 178, 179, 180, 171, 172, 173, 174, 18, 181, 182, 183, 184, 17, 189, 190, 191, 192, 28, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 185, 186, 187, 188, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 19, 218, 219, 220, 29, 221, 222, 223, 224, 225, 226, 227, 229, 228, 1, 230, 231, 232, 233, 234, 235, 236, 237, 16, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 27, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 12, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 21, 20, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 22, 301, 302, 303, 304, 305, 306, 307, 23, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 24, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 25, 328, 329, 26, 330, 331, 332, 333, 334, 335, 336, 337, 338, 15, 30, 339, 340, 341, 342, 343, 344, 345, 31, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 32, 445, 446, 447, 448, 449, 450, 451, 452, 33, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 14, 470, 471, 472 }
  uselistorder i32 15, { 2, 1, 3, 0 }
  uselistorder i32 -16, { 14, 43, 121, 122, 66, 67, 68, 69, 70, 44, 45, 71, 72, 48, 15, 53, 18, 60, 61, 56, 57, 49, 17, 62, 63, 46, 47, 64, 65, 19, 73, 74, 58, 59, 54, 55, 50, 51, 52, 16, 20, 21, 75, 76, 22, 118, 79, 78, 42, 77, 2, 89, 3, 24, 35, 105, 25, 90, 30, 28, 92, 29, 1, 23, 88, 26, 91, 27, 4, 12, 40, 41, 107, 11, 108, 109, 36, 37, 106, 38, 110, 39, 93, 5, 94, 31, 95, 32, 96, 6, 97, 7, 98, 99, 8, 100, 101, 9, 102, 103, 33, 104, 10, 34, 111, 112, 80, 81, 82, 83, 84, 85, 86, 87, 113, 114, 115, 116, 123, 0, 117, 13, 119, 120 }
  uselistorder i32 30, { 4, 3, 2, 5, 6, 7, 8, 1, 9, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054501, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80544fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805445e, { 1, 0 }
}

define i32 @function_8054509() local_unnamed_addr {
dec_label_pc_8054509:
  %stack_var_-8 = alloca i32, align 4
  %v2_805450c = ptrtoint i32* %stack_var_-8 to i32
  %v2_8054513 = call i32 @function_80545b3(i32 7, i32 %v2_805450c)
  %v2_8054520 = icmp slt i32 %v2_8054513, 0
  br i1 %v2_8054520, label %dec_label_pc_8054528, label %dec_label_pc_8054524

dec_label_pc_8054524:                             ; preds = %dec_label_pc_8054509
  %v3_8054524 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054528

dec_label_pc_8054528:                             ; preds = %dec_label_pc_8054509, %dec_label_pc_8054524
  %v0_8054528 = phi i32 [ 256, %dec_label_pc_8054509 ], [ %v3_8054524, %dec_label_pc_8054524 ]
  ret i32 %v0_8054528

; uselistorder directives
  uselistorder i32 7, { 4, 0, 5, 1, 2, 7, 6, 8, 9, 3 }
  uselistorder label %dec_label_pc_8054528, { 1, 0 }
}

define i32 @function_805452e() local_unnamed_addr {
dec_label_pc_805452e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805452e = load i32, i32* @ebx, align 4
  store i32 %v0_805452e, i32* %stack_var_-4, align 4
  %v1_8054537 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054537, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054537, -4095
  br i1 %tmp7, label %dec_label_pc_805454e, label %dec_label_pc_8054542

dec_label_pc_8054542:                             ; preds = %dec_label_pc_805452e
  %v1_8054542 = call i32 @function_80526fd(i32 %v0_805452e)
  %v0_8054547 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054547 = sub i32 0, %v0_8054547
  %v2_8054549 = inttoptr i32 %v1_8054542 to i32*
  store i32 %v1_8054547, i32* %v2_8054549, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054552.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805454e

dec_label_pc_805454e:                             ; preds = %dec_label_pc_805452e, %dec_label_pc_8054542
  %v2_8054552 = phi i32 [ %v0_805452e, %dec_label_pc_805452e ], [ %v2_8054552.pre, %dec_label_pc_8054542 ]
  %v0_805454e = phi i32 [ %v1_8054537, %dec_label_pc_805452e ], [ -1, %dec_label_pc_8054542 ]
  store i32 %v2_8054552, i32* @ebx, align 4
  ret i32 %v0_805454e

; uselistorder directives
  uselistorder i32 %v1_8054537, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805454e, { 1, 0 }
}

define i32 @function_8054554() local_unnamed_addr {
dec_label_pc_8054554:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054554 = load i32, i32* @ebx, align 4
  store i32 %v0_8054554, i32* %stack_var_-4, align 4
  %v1_805455d = call i32 @int80_syscall(i32 201)
  store i32 %v1_805455d, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805455d, -4095
  br i1 %tmp7, label %dec_label_pc_8054574, label %dec_label_pc_8054568

dec_label_pc_8054568:                             ; preds = %dec_label_pc_8054554
  %v1_8054568 = call i32 @function_80526fd(i32 %v0_8054554)
  %v0_805456d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805456d = sub i32 0, %v0_805456d
  %v2_805456f = inttoptr i32 %v1_8054568 to i32*
  store i32 %v1_805456d, i32* %v2_805456f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054578.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054574

dec_label_pc_8054574:                             ; preds = %dec_label_pc_8054554, %dec_label_pc_8054568
  %v2_8054578 = phi i32 [ %v0_8054554, %dec_label_pc_8054554 ], [ %v2_8054578.pre, %dec_label_pc_8054568 ]
  %v0_8054574 = phi i32 [ %v1_805455d, %dec_label_pc_8054554 ], [ -1, %dec_label_pc_8054568 ]
  store i32 %v2_8054578, i32* @ebx, align 4
  ret i32 %v0_8054574

; uselistorder directives
  uselistorder i32 %v1_805455d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054574, { 1, 0 }
}

define i32 @function_805457a() local_unnamed_addr {
dec_label_pc_805457a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805457a = load i32, i32* @ebx, align 4
  store i32 %v0_805457a, i32* %stack_var_-4, align 4
  %v1_8054583 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8054583, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054583, -4095
  br i1 %tmp7, label %dec_label_pc_805459a, label %dec_label_pc_805458e

dec_label_pc_805458e:                             ; preds = %dec_label_pc_805457a
  %v1_805458e = call i32 @function_80526fd(i32 %v0_805457a)
  %v0_8054593 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054593 = sub i32 0, %v0_8054593
  %v2_8054595 = inttoptr i32 %v1_805458e to i32*
  store i32 %v1_8054593, i32* %v2_8054595, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805459e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805459a

dec_label_pc_805459a:                             ; preds = %dec_label_pc_805457a, %dec_label_pc_805458e
  %v2_805459e = phi i32 [ %v0_805457a, %dec_label_pc_805457a ], [ %v2_805459e.pre, %dec_label_pc_805458e ]
  %v0_805459a = phi i32 [ %v1_8054583, %dec_label_pc_805457a ], [ -1, %dec_label_pc_805458e ]
  store i32 %v2_805459e, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805459a

; uselistorder directives
  uselistorder i32 %v1_8054583, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805459a, { 1, 0 }
}

define i32 @function_80545a0() local_unnamed_addr {
dec_label_pc_80545a0:
  %v0_80545a0 = load i32, i32* @global_var_8056144.77, align 4
  %v1_80545aa = icmp eq i32 %v0_80545a0, 0
  br i1 %v1_80545aa, label %dec_label_pc_80545b0, label %dec_label_pc_80545ae

dec_label_pc_80545ae:                             ; preds = %dec_label_pc_80545a0
  br label %dec_label_pc_80545b0

dec_label_pc_80545b0:                             ; preds = %dec_label_pc_80545a0, %dec_label_pc_80545ae
  %v0_80545b0 = phi i32 [ 4096, %dec_label_pc_80545a0 ], [ %v0_80545a0, %dec_label_pc_80545ae ]
  ret i32 %v0_80545b0

; uselistorder directives
  uselistorder i32 4096, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80545b0, { 1, 0 }
}

define i32 @function_80545b3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80545b3:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80545b3 = load i32, i32* @ebx, align 4
  store i32 %v0_80545b3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80545c6 = call i32 @int80_syscall(i32 191)
  store i32 %v1_80545c6, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80545c6, -4095
  br i1 %tmp9, label %dec_label_pc_80545df, label %dec_label_pc_80545d3

dec_label_pc_80545d3:                             ; preds = %dec_label_pc_80545b3
  %v1_80545d3 = call i32 @function_80526fd(i32 %v0_80545b3)
  %v0_80545d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80545d8 = sub i32 0, %v0_80545d8
  %v2_80545da = inttoptr i32 %v1_80545d3 to i32*
  store i32 %v1_80545d8, i32* %v2_80545da, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80545e3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80545df

dec_label_pc_80545df:                             ; preds = %dec_label_pc_80545b3, %dec_label_pc_80545d3
  %v2_80545e3 = phi i32 [ %v0_80545b3, %dec_label_pc_80545b3 ], [ %v2_80545e3.pre, %dec_label_pc_80545d3 ]
  %v0_80545df = phi i32 [ %v1_80545c6, %dec_label_pc_80545b3 ], [ -1, %dec_label_pc_80545d3 ]
  store i32 %v2_80545e3, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80545df

; uselistorder directives
  uselistorder i32 %v1_80545c6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80545df, { 1, 0 }
}

define i32 @function_80545e5() local_unnamed_addr {
dec_label_pc_80545e5:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80545e5 = load i32, i32* @ebx, align 4
  store i32 %v0_80545e5, i32* %stack_var_-4, align 4
  %v1_80545ee = call i32 @int80_syscall(i32 199)
  store i32 %v1_80545ee, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80545ee, -4095
  br i1 %tmp7, label %dec_label_pc_8054605, label %dec_label_pc_80545f9

dec_label_pc_80545f9:                             ; preds = %dec_label_pc_80545e5
  %v1_80545f9 = call i32 @function_80526fd(i32 %v0_80545e5)
  %v0_80545fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_80545fe = sub i32 0, %v0_80545fe
  %v2_8054600 = inttoptr i32 %v1_80545f9 to i32*
  store i32 %v1_80545fe, i32* %v2_8054600, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054609.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054605

dec_label_pc_8054605:                             ; preds = %dec_label_pc_80545e5, %dec_label_pc_80545f9
  %v2_8054609 = phi i32 [ %v0_80545e5, %dec_label_pc_80545e5 ], [ %v2_8054609.pre, %dec_label_pc_80545f9 ]
  %v0_8054605 = phi i32 [ %v1_80545ee, %dec_label_pc_80545e5 ], [ -1, %dec_label_pc_80545f9 ]
  store i32 %v2_8054609, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054605

; uselistorder directives
  uselistorder i32 %v1_80545ee, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054605, { 1, 0 }
}

define i32 @function_805460b(i32 %arg1) local_unnamed_addr {
dec_label_pc_805460b:
  %esi.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_8054621 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8054621, i32* %esi.global-to-local, align 4
  %v1_8054638 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054638, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8054638, -4095
  br i1 %tmp18, label %dec_label_pc_8054652, label %dec_label_pc_8054644

dec_label_pc_8054644:                             ; preds = %dec_label_pc_805460b
  %v2_8054625 = ashr i32 %tmp8, 31
  %v1_8054644 = call i32 @function_80526fd(i32 %v2_8054625)
  %v0_8054649 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054649 = sub i32 0, %v0_8054649
  %v2_805464b = inttoptr i32 %v1_8054644 to i32*
  store i32 %v1_8054649, i32* %v2_805464b, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054656

dec_label_pc_8054652:                             ; preds = %dec_label_pc_805460b
  %v1_8054652 = icmp eq i32 %v1_8054638, 0
  br i1 %v1_8054652, label %dec_label_pc_805465b, label %dec_label_pc_8054656

dec_label_pc_8054656:                             ; preds = %dec_label_pc_8054652, %dec_label_pc_8054644
  %v0_8054656 = phi i32 [ %v1_8054638, %dec_label_pc_8054652 ], [ -1, %dec_label_pc_8054644 ]
  br label %dec_label_pc_8054663

dec_label_pc_805465b:                             ; preds = %dec_label_pc_8054652
  %v3_805465b = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8054663

dec_label_pc_8054663:                             ; preds = %dec_label_pc_8054656, %dec_label_pc_805465b
  %v0_8054669 = phi i32 [ %v0_8054656, %dec_label_pc_8054656 ], [ %v3_805465b, %dec_label_pc_805465b ]
  ret i32 %v0_8054669

; uselistorder directives
  uselistorder i32 %v1_8054638, { 1, 2, 0, 3 }
  uselistorder i32 31, { 8, 6, 1, 2, 3, 4, 7, 5, 9, 10, 11, 12, 13, 0, 14 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054663, { 1, 0 }
}

define i32 @function_805466a(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_805466a:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805466b = load i32, i32* @esi, align 4
  store i32 %v0_805466b, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054683 = load i32, i32* @ebx, align 4
  %v5_805468b = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_805468b = ptrtoint i32* %v5_805468b to i32
  store i32 %v0_8054683, i32* @ebx, align 4
  store i32 %v6_805468b, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_805468b, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8054697, label %dec_label_pc_80546a3

dec_label_pc_8054697:                             ; preds = %dec_label_pc_805466a
  %v1_8054697 = call i32 @function_80526fd(i32 %v0_8054683)
  %v0_805469c = load i32, i32* %esi.global-to-local, align 4
  %v1_805469c = sub i32 0, %v0_805469c
  %v2_805469e = inttoptr i32 %v1_8054697 to i32*
  store i32 %v1_805469c, i32* %v2_805469e, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80546a6.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80546a3

dec_label_pc_80546a3:                             ; preds = %dec_label_pc_805466a, %dec_label_pc_8054697
  %v2_80546a6 = phi i32 [ %v0_805466b, %dec_label_pc_805466a ], [ %v2_80546a6.pre, %dec_label_pc_8054697 ]
  %v0_80546a3 = phi i32 [ %v6_805468b, %dec_label_pc_805466a ], [ -1, %dec_label_pc_8054697 ]
  store i32 %v2_80546a6, i32* @esi, align 4
  ret i32 %v0_80546a3

; uselistorder directives
  uselistorder i32 %v0_8054683, { 1, 0 }
  uselistorder label %dec_label_pc_80546a3, { 1, 0 }
}

define i32 @function_80546a9(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80546a9:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_80546a9 = load i32, i32* @ebx, align 4
  store i32 %v0_80546a9, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_80546bc = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_80546bc, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_80546bc, -4095
  br i1 %tmp10, label %dec_label_pc_80546d5, label %dec_label_pc_80546c9

dec_label_pc_80546c9:                             ; preds = %dec_label_pc_80546a9
  %v1_80546c9 = call i32 @function_80526fd(i32 %v0_80546a9)
  %v0_80546ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546ce = sub i32 0, %v0_80546ce
  %v2_80546d0 = inttoptr i32 %v1_80546c9 to i32*
  store i32 %v1_80546ce, i32* %v2_80546d0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80546d9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80546d5

dec_label_pc_80546d5:                             ; preds = %dec_label_pc_80546a9, %dec_label_pc_80546c9
  %v2_80546d9 = phi i32 [ %v0_80546a9, %dec_label_pc_80546a9 ], [ %v2_80546d9.pre, %dec_label_pc_80546c9 ]
  %v0_80546d5 = phi i32 [ %v3_80546bc, %dec_label_pc_80546a9 ], [ -1, %dec_label_pc_80546c9 ]
  store i32 %v2_80546d9, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80546d5

; uselistorder directives
  uselistorder i32 %v3_80546bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80546d5, { 1, 0 }
}

define i32 @function_80546db(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80546db:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_80546db = load i32, i32* @ebx, align 4
  store i32 %v0_80546db, i32* %stack_var_-4, align 4
  %v4_80546df = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_80546df, i32* %ebx.global-to-local, align 4
  %v6_80546ee = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp5)
  store i32 %v6_80546ee, i32* %ebx.global-to-local, align 4
  %tmp12 = icmp ult i32 %v6_80546ee, -4095
  br i1 %tmp12, label %dec_label_pc_8054707, label %dec_label_pc_80546fb

dec_label_pc_80546fb:                             ; preds = %dec_label_pc_80546db
  %v1_80546fb = call i32 @function_80526fd(i32 %v0_80546db)
  %v0_8054700 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054700 = sub i32 0, %v0_8054700
  %v2_8054702 = inttoptr i32 %v1_80546fb to i32*
  store i32 %v1_8054700, i32* %v2_8054702, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805470b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054707

dec_label_pc_8054707:                             ; preds = %dec_label_pc_80546db, %dec_label_pc_80546fb
  %v2_805470b = phi i32 [ %v0_80546db, %dec_label_pc_80546db ], [ %v2_805470b.pre, %dec_label_pc_80546fb ]
  %v0_8054707 = phi i32 [ %v6_80546ee, %dec_label_pc_80546db ], [ -1, %dec_label_pc_80546fb ]
  store i32 %v2_805470b, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054707

; uselistorder directives
  uselistorder i32 %v6_80546ee, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054707, { 1, 0 }
}

define i32 @function_805470d(i32 %arg1) local_unnamed_addr {
dec_label_pc_805470d:
  %v0_805470e = load i32, i32* @ebx, align 4
  %v0_8054712 = load i32, i32* @global_var_8056158.84, align 8
  %v1_8054712 = icmp eq i32 %v0_8054712, 0
  %v1_805471d = icmp eq i1 %v1_8054712, false
  br i1 %v1_805471d, label %dec_label_pc_8054730, label %dec_label_pc_805471f

dec_label_pc_805471f:                             ; preds = %dec_label_pc_805470d
  %v1_8054724 = call i32 @function_80548eb(i32 0)
  %v2_805472c = icmp slt i32 %v1_8054724, 0
  br i1 %v2_805472c, label %dec_label_pc_8054752, label %dec_label_pc_805471f.dec_label_pc_8054730_crit_edge

dec_label_pc_805471f.dec_label_pc_8054730_crit_edge: ; preds = %dec_label_pc_805471f
  %v0_8054732.pre = load i32, i32* @global_var_8056158.84, align 8
  br label %dec_label_pc_8054730

dec_label_pc_8054730:                             ; preds = %dec_label_pc_805471f.dec_label_pc_8054730_crit_edge, %dec_label_pc_805470d
  %v0_8054740 = phi i32 [ %v0_8054732.pre, %dec_label_pc_805471f.dec_label_pc_8054730_crit_edge ], [ %v0_8054712, %dec_label_pc_805470d ]
  %v1_8054730 = icmp eq i32 %arg1, 0
  %v1_8054737 = icmp eq i1 %v1_8054730, false
  br i1 %v1_8054737, label %dec_label_pc_805473d, label %dec_label_pc_8054739

dec_label_pc_8054739:                             ; preds = %dec_label_pc_8054730
  br label %dec_label_pc_8054755

dec_label_pc_805473d:                             ; preds = %dec_label_pc_8054730
  store i32 %v0_8054740, i32* @ebx, align 4
  %v2_8054742 = add i32 %v0_8054740, %arg1
  %v1_8054746 = call i32 @function_80548eb(i32 %v2_8054742)
  %v2_805474e = icmp slt i32 %v1_8054746, 0
  %v1_8054750 = icmp eq i1 %v2_805474e, false
  br i1 %v1_8054750, label %dec_label_pc_805473d.dec_label_pc_8054755_crit_edge, label %dec_label_pc_8054752

dec_label_pc_805473d.dec_label_pc_8054755_crit_edge: ; preds = %dec_label_pc_805473d
  %v0_8054755.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054755

dec_label_pc_8054752:                             ; preds = %dec_label_pc_805473d, %dec_label_pc_805471f
  br label %dec_label_pc_8054755

dec_label_pc_8054755:                             ; preds = %dec_label_pc_805473d.dec_label_pc_8054755_crit_edge, %dec_label_pc_8054739, %dec_label_pc_8054752
  %v0_8054755 = phi i32 [ %v0_8054755.pre, %dec_label_pc_805473d.dec_label_pc_8054755_crit_edge ], [ %v0_8054740, %dec_label_pc_8054739 ], [ -1, %dec_label_pc_8054752 ]
  store i32 %v0_805470e, i32* @ebx, align 4
  ret i32 %v0_8054755

; uselistorder directives
  uselistorder i32 %v0_8054740, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_80548eb, { 1, 0 }
  uselistorder label %dec_label_pc_8054755, { 2, 0, 1 }
}

define i32 @function_805475b(%tms* %arg1) local_unnamed_addr {
dec_label_pc_805475b:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805475b = load i32, i32* @edi, align 4
  store i32 %v0_805475b, i32* %stack_var_-4, align 4
  %v4_805475f = ptrtoint %tms* %arg1 to i32
  store i32 %v4_805475f, i32* %edi.global-to-local, align 4
  %v0_8054763 = load i32, i32* @ebx, align 4
  %v3_805476b = call i32 @times(%tms* %arg1)
  store i32 %v3_805476b, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_805476b, -4095
  br i1 %tmp9, label %dec_label_pc_8054783, label %dec_label_pc_8054777

dec_label_pc_8054777:                             ; preds = %dec_label_pc_805475b
  %v1_8054777 = call i32 @function_80526fd(i32 %v0_8054763)
  %v0_805477c = load i32, i32* %edi.global-to-local, align 4
  %v1_805477c = sub i32 0, %v0_805477c
  %v2_805477e = inttoptr i32 %v1_8054777 to i32*
  store i32 %v1_805477c, i32* %v2_805477e, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8054787.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054783

dec_label_pc_8054783:                             ; preds = %dec_label_pc_805475b, %dec_label_pc_8054777
  %v2_8054787 = phi i32 [ %v0_805475b, %dec_label_pc_805475b ], [ %v2_8054787.pre, %dec_label_pc_8054777 ]
  %v0_8054783 = phi i32 [ %v3_805476b, %dec_label_pc_805475b ], [ -1, %dec_label_pc_8054777 ]
  store i32 %v2_8054787, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054783

; uselistorder directives
  uselistorder i32 %v3_805476b, { 1, 0, 2 }
  uselistorder i32* @edi, { 11, 12, 13, 14, 15, 16, 108, 3, 109, 110, 111, 112, 0, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 4, 5, 6, 7, 8, 9, 10, 131, 145, 146, 132, 133, 134, 135, 136, 137, 138, 139, 1, 140, 141, 142, 143, 144, 147, 148, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 149, 150, 27, 28, 29, 151, 152, 153, 154, 155, 156, 36, 76, 77, 78, 79, 107, 62, 80, 81, 82, 83, 37, 38, 39, 40, 41, 68, 69, 70, 57, 58, 59, 60, 33, 34, 35, 54, 55, 56, 63, 64, 65, 66, 51, 52, 53, 84, 85, 86, 75, 87, 88, 89, 71, 30, 31, 32, 72, 43, 42, 44, 45, 46, 47, 48, 49, 50, 61, 67, 73, 74, 90, 91, 92, 93, 94, 95, 2, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 179, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054783, { 1, 0 }
}

define i32 @function_8054789(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054789:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805478a = load i32, i32* @ebx, align 4
  store i32 %v0_805478a, i32* %stack_var_-8, align 4
  %v4_805478e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805478e, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_805479b = inttoptr i32 %arg2 to i8*
  %v4_805479b = call i32 @function_805274e(i8* %v3_805479b, i32 0, i32 88)
  store i32 %v4_805479b, i32* %eax.global-to-local, align 4
  %v2_80547a0 = load i16, i16* %arg1, align 2
  %v3_80547a0 = zext i16 %v2_80547a0 to i32
  store i32 %v3_80547a0, i32* %eax.global-to-local, align 4
  %v0_80547a3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80547a3 = add i32 %v0_80547a3, 4
  %v2_80547a3 = inttoptr i32 %v1_80547a3 to i32*
  store i32 0, i32* %v2_80547a3, align 4
  %v0_80547aa = load i32, i32* %eax.global-to-local, align 4
  %v1_80547aa = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547aa = inttoptr i32 %v1_80547aa to i32*
  store i32 %v0_80547aa, i32* %v2_80547aa, align 4
  %v0_80547ac = load i32, i32* %esi.global-to-local, align 4
  %v1_80547ac = add i32 %v0_80547ac, 4
  %v2_80547ac = inttoptr i32 %v1_80547ac to i32*
  %v3_80547ac = load i32, i32* %v2_80547ac, align 4
  store i32 %v3_80547ac, i32* %eax.global-to-local, align 4
  %v1_80547af = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547af = add i32 %v1_80547af, 12
  %v3_80547af = inttoptr i32 %v2_80547af to i32*
  store i32 %v3_80547ac, i32* %v3_80547af, align 4
  %v0_80547b2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547b2 = add i32 %v0_80547b2, 8
  %v2_80547b2 = inttoptr i32 %v1_80547b2 to i16*
  %v3_80547b2 = load i16, i16* %v2_80547b2, align 2
  %v4_80547b2 = zext i16 %v3_80547b2 to i32
  store i32 %v4_80547b2, i32* %eax.global-to-local, align 4
  %v1_80547b6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547b6 = add i32 %v1_80547b6, 16
  %v3_80547b6 = inttoptr i32 %v2_80547b6 to i32*
  store i32 %v4_80547b2, i32* %v3_80547b6, align 4
  %v0_80547b9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547b9 = add i32 %v0_80547b9, 10
  %v2_80547b9 = inttoptr i32 %v1_80547b9 to i16*
  %v3_80547b9 = load i16, i16* %v2_80547b9, align 2
  %v4_80547b9 = zext i16 %v3_80547b9 to i32
  store i32 %v4_80547b9, i32* %eax.global-to-local, align 4
  %v1_80547bd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547bd = add i32 %v1_80547bd, 20
  %v3_80547bd = inttoptr i32 %v2_80547bd to i32*
  store i32 %v4_80547b9, i32* %v3_80547bd, align 4
  %v0_80547c0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547c0 = add i32 %v0_80547c0, 12
  %v2_80547c0 = inttoptr i32 %v1_80547c0 to i16*
  %v3_80547c0 = load i16, i16* %v2_80547c0, align 2
  %v4_80547c0 = zext i16 %v3_80547c0 to i32
  store i32 %v4_80547c0, i32* %eax.global-to-local, align 4
  %v1_80547c4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547c4 = add i32 %v1_80547c4, 24
  %v3_80547c4 = inttoptr i32 %v2_80547c4 to i32*
  store i32 %v4_80547c0, i32* %v3_80547c4, align 4
  %v0_80547c7 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547c7 = add i32 %v0_80547c7, 14
  %v2_80547c7 = inttoptr i32 %v1_80547c7 to i16*
  %v3_80547c7 = load i16, i16* %v2_80547c7, align 2
  %v4_80547c7 = zext i16 %v3_80547c7 to i32
  store i32 %v4_80547c7, i32* %eax.global-to-local, align 4
  %v1_80547cb = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547cb = add i32 %v1_80547cb, 28
  %v3_80547cb = inttoptr i32 %v2_80547cb to i32*
  store i32 %v4_80547c7, i32* %v3_80547cb, align 4
  %v0_80547ce = load i32, i32* %esi.global-to-local, align 4
  %v1_80547ce = add i32 %v0_80547ce, 16
  %v2_80547ce = inttoptr i32 %v1_80547ce to i16*
  %v3_80547ce = load i16, i16* %v2_80547ce, align 2
  %v4_80547ce = zext i16 %v3_80547ce to i32
  store i32 %v4_80547ce, i32* %eax.global-to-local, align 4
  %v0_80547d2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80547d2 = add i32 %v0_80547d2, 36
  %v2_80547d2 = inttoptr i32 %v1_80547d2 to i32*
  store i32 0, i32* %v2_80547d2, align 4
  %v0_80547d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80547d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547d9 = add i32 %v1_80547d9, 32
  %v3_80547d9 = inttoptr i32 %v2_80547d9 to i32*
  store i32 %v0_80547d9, i32* %v3_80547d9, align 4
  %v0_80547dc = load i32, i32* %esi.global-to-local, align 4
  %v1_80547dc = add i32 %v0_80547dc, 20
  %v2_80547dc = inttoptr i32 %v1_80547dc to i32*
  %v3_80547dc = load i32, i32* %v2_80547dc, align 4
  store i32 %v3_80547dc, i32* %eax.global-to-local, align 4
  %v1_80547df = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547df = add i32 %v1_80547df, 44
  %v3_80547df = inttoptr i32 %v2_80547df to i32*
  store i32 %v3_80547dc, i32* %v3_80547df, align 4
  %v0_80547e2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547e2 = add i32 %v0_80547e2, 24
  %v2_80547e2 = inttoptr i32 %v1_80547e2 to i32*
  %v3_80547e2 = load i32, i32* %v2_80547e2, align 4
  store i32 %v3_80547e2, i32* %eax.global-to-local, align 4
  %v1_80547e5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547e5 = add i32 %v1_80547e5, 48
  %v3_80547e5 = inttoptr i32 %v2_80547e5 to i32*
  store i32 %v3_80547e2, i32* %v3_80547e5, align 4
  %v0_80547e8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547e8 = add i32 %v0_80547e8, 28
  %v2_80547e8 = inttoptr i32 %v1_80547e8 to i32*
  %v3_80547e8 = load i32, i32* %v2_80547e8, align 4
  store i32 %v3_80547e8, i32* %eax.global-to-local, align 4
  %v1_80547eb = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547eb = add i32 %v1_80547eb, 52
  %v3_80547eb = inttoptr i32 %v2_80547eb to i32*
  store i32 %v3_80547e8, i32* %v3_80547eb, align 4
  %v0_80547ee = load i32, i32* %esi.global-to-local, align 4
  %v1_80547ee = add i32 %v0_80547ee, 32
  %v2_80547ee = inttoptr i32 %v1_80547ee to i32*
  %v3_80547ee = load i32, i32* %v2_80547ee, align 4
  store i32 %v3_80547ee, i32* %eax.global-to-local, align 4
  %v1_80547f1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547f1 = add i32 %v1_80547f1, 56
  %v3_80547f1 = inttoptr i32 %v2_80547f1 to i32*
  store i32 %v3_80547ee, i32* %v3_80547f1, align 4
  %v0_80547f4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547f4 = add i32 %v0_80547f4, 40
  %v2_80547f4 = inttoptr i32 %v1_80547f4 to i32*
  %v3_80547f4 = load i32, i32* %v2_80547f4, align 4
  store i32 %v3_80547f4, i32* %eax.global-to-local, align 4
  %v1_80547f7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547f7 = add i32 %v1_80547f7, 64
  %v3_80547f7 = inttoptr i32 %v2_80547f7 to i32*
  store i32 %v3_80547f4, i32* %v3_80547f7, align 4
  %v0_80547fa = load i32, i32* %esi.global-to-local, align 4
  %v1_80547fa = add i32 %v0_80547fa, 48
  %v2_80547fa = inttoptr i32 %v1_80547fa to i32*
  %v3_80547fa = load i32, i32* %v2_80547fa, align 4
  store i32 %v3_80547fa, i32* %eax.global-to-local, align 4
  %v1_80547fd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80547fd = add i32 %v1_80547fd, 72
  %v3_80547fd = inttoptr i32 %v2_80547fd to i32*
  store i32 %v3_80547fa, i32* %v3_80547fd, align 4
  %v2_8054803 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054803, i32* @ebx, align 4
  ret i32 %v3_80547fa

; uselistorder directives
  uselistorder i32 72, { 3, 2, 4, 5, 6, 7, 0, 8, 9, 10, 11, 1 }
  uselistorder i32 64, { 7, 6, 3, 2, 1, 4, 0, 5 }
  uselistorder i32 40, { 7, 6, 1, 3, 2, 0, 8, 4, 9, 10, 11, 5 }
  uselistorder i32 56, { 3, 2, 0, 4, 5, 1 }
  uselistorder i32 52, { 3, 2, 7, 8, 4, 5, 6, 1, 0 }
  uselistorder i32 48, { 7, 8, 6, 3, 4, 0, 1, 9, 10, 2, 5 }
  uselistorder i32 32, { 39, 40, 45, 31, 36, 46, 47, 37, 38, 48, 1, 0, 2, 3, 35, 4, 5, 6, 7, 8, 32, 49, 42, 41, 10, 9, 12, 11, 13, 14, 34, 33, 43, 44, 50, 15, 16, 17, 18, 51, 19, 20, 52, 53, 22, 21, 24, 23, 25, 26, 54, 27, 28, 29, 30, 55 }
  uselistorder i32 36, { 5, 4, 0, 3, 1, 2, 6, 7, 8, 9, 10 }
  uselistorder i32 14, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 24, { 22, 23, 18, 19, 20, 55, 21, 24, 25, 1, 2, 13, 38, 0, 46, 14, 28, 41, 10, 8, 11, 47, 42, 12, 26, 27, 43, 15, 29, 30, 9, 31, 32, 33, 34, 35, 7, 36, 37, 6, 39, 40, 44, 45, 48, 49, 50, 51, 53, 54, 52, 5, 16, 4, 3, 56, 17 }
  uselistorder i32 20, { 19, 20, 7, 15, 16, 17, 32, 18, 21, 22, 23, 1, 2, 14, 0, 24, 11, 9, 12, 13, 10, 25, 26, 27, 28, 29, 30, 33, 31, 6, 4, 5, 3, 34, 35, 36, 8 }
  uselistorder i32 16, { 46, 47, 39, 40, 41, 42, 43, 44, 19, 35, 64, 3, 36, 37, 38, 0, 4, 65, 66, 6, 5, 67, 1, 7, 45, 48, 20, 23, 34, 11, 12, 30, 49, 50, 8, 52, 9, 54, 51, 31, 27, 25, 28, 29, 13, 26, 10, 53, 55, 32, 56, 22, 57, 59, 21, 58, 60, 61, 62, 68, 63, 69, 73, 15, 74, 75, 76, 77, 78, 79, 80, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 2, 91, 92, 93, 94, 95, 96, 97, 98, 18, 99, 16, 17, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 14, 122, 33, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 24 }
  uselistorder i32 8, { 91, 80, 81, 82, 83, 84, 85, 86, 87, 39, 103, 40, 104, 68, 41, 69, 106, 107, 108, 109, 110, 111, 112, 3, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 4, 72, 73, 74, 75, 76, 77, 78, 79, 123, 124, 125, 126, 127, 128, 45, 5, 46, 6, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 44, 146, 147, 7, 148, 149, 150, 151, 8, 152, 88, 89, 90, 92, 105, 153, 154, 155, 47, 97, 93, 94, 48, 95, 96, 70, 98, 99, 100, 101, 9, 102, 0, 1, 156, 36, 157, 14, 15, 13, 20, 158, 12, 18, 19, 49, 43, 50, 51, 16, 52, 17, 53, 2, 10, 37, 159, 21, 54, 22, 55, 23, 24, 25, 26, 56, 27, 28, 29, 57, 30, 58, 160, 59, 31, 60, 32, 61, 161, 62, 33, 63, 34, 64, 65, 66, 35, 11, 162, 38, 163, 67, 71, 42 }
  uselistorder i32 (i8*, i32, i32)* @function_805274e, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8054806(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054806:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054807 = load i32, i32* @esi, align 4
  store i32 %v0_8054807, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8054808 = sdiv i32 %sext, 16777216
  store i32 %v4_8054808, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8054812 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8054812, i32* %edi.global-to-local, align 4
  %v2_8054816 = udiv i32 %v4_8054808, 4
  %v3_8054819 = inttoptr i32 %arg2 to i8*
  %v4_8054819 = bitcast i16* %arg1 to i8*
  %v5_8054819 = call i8* @_memcpy(i8* %v4_8054819, i8* %v3_8054819, i32 %v2_8054816)
  %v0_805481b = load i32, i32* %eax.global-to-local, align 4
  %v2_805481b = and i32 %v0_805481b, 2
  %v3_805481b = icmp eq i32 %v2_805481b, 0
  br i1 %v3_805481b, label %dec_label_pc_8054821, label %dec_label_pc_805481f

dec_label_pc_805481f:                             ; preds = %dec_label_pc_8054806
  %v0_805481f = load i32, i32* %esi.global-to-local, align 4
  %v1_805481f = inttoptr i32 %v0_805481f to i16*
  %v2_805481f = load i16, i16* %v1_805481f, align 2
  %v3_805481f = load i32, i32* %edi.global-to-local, align 4
  %v4_805481f = inttoptr i32 %v3_805481f to i16*
  store i16 %v2_805481f, i16* %v4_805481f, align 2
  %v5_805481f = load i32, i32* %edi.global-to-local, align 4
  %v6_805481f = load i32, i32* %esi.global-to-local, align 4
  %v7_805481f = load i1, i1* @df, align 1
  %v8_805481f = select i1 %v7_805481f, i32 -2, i32 2
  %v9_805481f = add i32 %v8_805481f, %v5_805481f
  %v10_805481f = add i32 %v8_805481f, %v6_805481f
  store i32 %v9_805481f, i32* %edi.global-to-local, align 4
  store i32 %v10_805481f, i32* %esi.global-to-local, align 4
  %v0_8054821.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054821

dec_label_pc_8054821:                             ; preds = %dec_label_pc_8054806, %dec_label_pc_805481f
  %v0_8054821 = phi i32 [ %v0_805481b, %dec_label_pc_8054806 ], [ %v0_8054821.pre, %dec_label_pc_805481f ]
  %v2_8054821 = urem i32 %v0_8054821, 2
  %v3_8054821 = icmp eq i32 %v2_8054821, 0
  br i1 %v3_8054821, label %dec_label_pc_8054826, label %dec_label_pc_8054825

dec_label_pc_8054825:                             ; preds = %dec_label_pc_8054821
  %v0_8054825 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054825 = inttoptr i32 %v0_8054825 to i8*
  %v2_8054825 = load i8, i8* %v1_8054825, align 1
  %v3_8054825 = load i32, i32* %edi.global-to-local, align 4
  %v4_8054825 = inttoptr i32 %v3_8054825 to i8*
  store i8 %v2_8054825, i8* %v4_8054825, align 1
  %v5_8054825 = load i32, i32* %edi.global-to-local, align 4
  %v6_8054825 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054825 = load i1, i1* @df, align 1
  %v8_8054825 = select i1 %v7_8054825, i32 -1, i32 1
  %v9_8054825 = add i32 %v8_8054825, %v5_8054825
  %v10_8054825 = add i32 %v8_8054825, %v6_8054825
  store i32 %v9_8054825, i32* %edi.global-to-local, align 4
  store i32 %v10_8054825, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054826

dec_label_pc_8054826:                             ; preds = %dec_label_pc_8054821, %dec_label_pc_8054825
  store i32 %v4_8054812, i32* %eax.global-to-local, align 4
  %v2_805482a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805482a, i32* @esi, align 4
  ret i32 %v4_8054812

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 -2, { 18, 19, 17, 20, 0, 1, 3, 6, 4, 2, 7, 8, 5, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 4, { 3, 94, 95, 86, 87, 88, 89, 165, 166, 168, 169, 0, 170, 171, 172, 167, 45, 72, 173, 175, 176, 178, 181, 182, 183, 184, 185, 186, 4, 187, 188, 189, 190, 191, 1, 192, 179, 180, 75, 47, 76, 77, 78, 79, 80, 81, 82, 5, 84, 83, 193, 6, 194, 46, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 10, 215, 216, 218, 217, 7, 177, 174, 85, 50, 90, 91, 92, 93, 96, 219, 220, 51, 103, 104, 52, 105, 133, 134, 135, 136, 137, 138, 139, 140, 141, 106, 107, 108, 130, 131, 121, 122, 123, 100, 101, 102, 118, 119, 120, 125, 126, 127, 115, 116, 117, 144, 145, 97, 98, 99, 109, 110, 111, 112, 113, 114, 124, 128, 129, 132, 73, 146, 147, 148, 149, 150, 142, 143, 48, 156, 14, 151, 49, 152, 153, 154, 155, 221, 222, 157, 158, 159, 160, 161, 162, 163, 164, 9, 223, 224, 225, 41, 19, 20, 18, 25, 17, 23, 24, 226, 227, 228, 11, 53, 54, 55, 21, 56, 22, 57, 2, 229, 15, 230, 42, 12, 231, 26, 58, 27, 59, 28, 232, 29, 30, 31, 60, 32, 33, 34, 61, 35, 62, 63, 36, 64, 37, 65, 233, 66, 38, 67, 39, 68, 234, 69, 70, 235, 40, 236, 237, 238, 239, 241, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 16, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 43, 13, 8, 278, 44, 71, 279, 74 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 7, 6, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* @esi, { 80, 81, 12, 13, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 38, 39, 82, 83, 11, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 87, 88, 89, 103, 107, 2, 108, 109, 110, 111, 112, 113, 114, 104, 105, 106, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 115, 116, 117, 118, 119, 120, 121, 0, 122, 123, 124, 125, 3, 126, 9, 127, 128, 129, 130, 27, 131, 132, 40, 4, 41, 42, 43, 44, 45, 101, 102, 133, 134, 46, 49, 50, 51, 52, 53, 54, 62, 68, 69, 55, 56, 57, 61, 48, 60, 63, 59, 70, 47, 58, 64, 65, 66, 67, 71, 72, 73, 74, 75, 135, 136, 137, 76, 77, 78, 8, 138, 139, 79, 140, 141, 5, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 6, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 10, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 7, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263 }
  uselistorder label %dec_label_pc_8054826, { 1, 0 }
  uselistorder label %dec_label_pc_8054821, { 1, 0 }
}

define i32 @function_805482d(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805482d:
  %v1_8054838 = icmp eq i8* %arg1, null
  br i1 %v1_8054838, label %dec_label_pc_80548b9, label %dec_label_pc_805483c

dec_label_pc_805483c:                             ; preds = %dec_label_pc_805482d
  %v4_8054834 = ptrtoint i8* %arg1 to i32
  %v0_805484a.pre = load i32, i32* bitcast (i32** @global_var_8056088.85 to i32*), align 8
  br label %dec_label_pc_8054847

dec_label_pc_8054847:                             ; preds = %dec_label_pc_805483c, %dec_label_pc_8054890
  %v0_8054890 = phi i32 [ 0, %dec_label_pc_805483c ], [ %v2_8054896, %dec_label_pc_8054890 ]
  %v2_8054893 = phi i32 [ 1, %dec_label_pc_805483c ], [ %v3_8054893, %dec_label_pc_8054890 ]
  %v0_8054847 = phi i32 [ %v4_8054834, %dec_label_pc_805483c ], [ %v0_80548474, %dec_label_pc_8054890 ]
  %v1_8054847 = inttoptr i32 %v0_8054847 to i8*
  %v2_8054847 = load i8, i8* %v1_8054847, align 1
  %v3_8054847 = sext i8 %v2_8054847 to i32
  %v2_8054850 = mul nsw i32 %v3_8054847, 2
  %v3_8054850 = add i32 %v2_8054850, %v0_805484a.pre
  %v4_8054850 = inttoptr i32 %v3_8054850 to i8*
  %v5_8054850 = load i8, i8* %v4_8054850, align 1
  %v6_8054850 = and i8 %v5_8054850, 8
  %v7_8054850 = icmp eq i8 %v6_8054850, 0
  br i1 %v7_8054850, label %dec_label_pc_80548b9, label %dec_label_pc_8054857

dec_label_pc_8054857:                             ; preds = %dec_label_pc_8054847
  %v4_805486b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805486b

dec_label_pc_805485b:                             ; preds = %dec_label_pc_805486b
  %v3_805485b = mul i32 %v1_805485b, 10
  %v2_805485e = add i32 %v3_805485b, -48
  %v3_805485e = add i32 %v2_805485e, %v2_805486d
  %v1_8054862 = add i32 %v3_805485e, -255
  %v6_8054862 = sub i32 254, %v3_805485e
  %v7_8054862 = and i32 %v6_8054862, %v3_805485e
  %v8_8054862 = icmp slt i32 %v7_8054862, 0
  %v9_8054862 = icmp eq i32 %v1_8054862, 0
  %v10_8054862 = icmp slt i32 %v1_8054862, 0
  %v3_8054868 = icmp eq i1 %v10_8054862, %v8_8054862
  %v4_8054868 = icmp eq i1 %v9_8054862, false
  %v5_8054868 = and i1 %v4_8054868, %v3_8054868
  br i1 %v5_8054868, label %dec_label_pc_80548b9, label %dec_label_pc_805486a

dec_label_pc_805486a:                             ; preds = %dec_label_pc_805485b
  %v1_805486a = add i32 %v0_805486a, 1
  br label %dec_label_pc_805486b

dec_label_pc_805486b:                             ; preds = %dec_label_pc_8054857, %dec_label_pc_805486a
  %v1_805485b = phi i32 [ 0, %dec_label_pc_8054857 ], [ %v3_805485e, %dec_label_pc_805486a ]
  %v4_805486b = phi i32 [ %v4_805486b.pre, %dec_label_pc_8054857 ], [ %v6_805486b, %dec_label_pc_805486a ]
  %v0_805486a = phi i32 [ %v0_8054847, %dec_label_pc_8054857 ], [ %v1_805486a, %dec_label_pc_805486a ]
  %v1_805486b = inttoptr i32 %v0_805486a to i8*
  %v2_805486b = load i8, i8* %v1_805486b, align 1
  %v3_805486b = zext i8 %v2_805486b to i32
  %v5_805486b = and i32 %v4_805486b, -256
  %v6_805486b = or i32 %v3_805486b, %v5_805486b
  store i32 %v6_805486b, i32* @edx, align 4
  %v2_805486d = sext i8 %v2_805486b to i32
  %v2_8054870 = mul nsw i32 %v2_805486d, 2
  %v3_8054870 = add i32 %v2_8054870, %v0_805484a.pre
  %v4_8054870 = inttoptr i32 %v3_8054870 to i16*
  %v5_8054870 = load i16, i16* %v4_8054870, align 2
  %v2_8054875 = and i16 %v5_8054870, 8
  %v3_8054875 = icmp eq i16 %v2_8054875, 0
  %v1_8054877 = icmp eq i1 %v3_8054875, false
  br i1 %v1_8054877, label %dec_label_pc_805485b, label %dec_label_pc_8054879

dec_label_pc_8054879:                             ; preds = %dec_label_pc_805486b
  %v8_8054879 = sub nsw i32 2, %v2_8054893
  %v9_8054879 = and i32 %v8_8054879, %v2_8054893
  %v10_8054879 = icmp slt i32 %v9_8054879, 0
  %v11_8054879 = icmp eq i32 %v2_8054893, 3
  %v12_8054879 = icmp slt i32 %v2_8054893, 3
  %v3_805487d = icmp eq i1 %v12_8054879, %v10_8054879
  %v4_805487d = icmp eq i1 %v11_8054879, false
  %v5_805487d = and i1 %v4_805487d, %v3_805487d
  br i1 %v5_805487d, label %dec_label_pc_8054887, label %dec_label_pc_805487f

dec_label_pc_805487f:                             ; preds = %dec_label_pc_8054879
  %v10_805487f = icmp eq i8 %v2_805486b, 46
  %v1_8054882 = icmp eq i1 %v10_805487f, false
  br i1 %v1_8054882, label %dec_label_pc_80548b9, label %dec_label_pc_8054884

dec_label_pc_8054884:                             ; preds = %dec_label_pc_805487f
  %v1_8054884 = add i32 %v0_805486a, 1
  br label %dec_label_pc_8054890

dec_label_pc_8054887:                             ; preds = %dec_label_pc_8054879
  %v1_8054887 = add i32 %v0_805486a, 1
  %v4_8054888 = icmp eq i8 %v2_805486b, 0
  br i1 %v4_8054888, label %dec_label_pc_8054890, label %dec_label_pc_805488c

dec_label_pc_805488c:                             ; preds = %dec_label_pc_8054887
  %v2_805488c = and i16 %v5_8054870, 32
  %v3_805488c = icmp eq i16 %v2_805488c, 0
  br i1 %v3_805488c, label %dec_label_pc_80548b9, label %dec_label_pc_8054890

dec_label_pc_8054890:                             ; preds = %dec_label_pc_805488c, %dec_label_pc_8054887, %dec_label_pc_8054884
  %v0_80548474 = phi i32 [ %v1_8054887, %dec_label_pc_805488c ], [ %v1_8054887, %dec_label_pc_8054887 ], [ %v1_8054884, %dec_label_pc_8054884 ]
  %v2_8054890 = mul i32 %v0_8054890, 256
  %v3_8054893 = add nuw nsw i32 %v2_8054893, 1
  %v2_8054896 = or i32 %v1_805485b, %v2_8054890
  %v7_805489c = icmp sgt i32 %v2_8054893, 3
  br i1 %v7_805489c, label %dec_label_pc_805489e, label %dec_label_pc_8054847

dec_label_pc_805489e:                             ; preds = %dec_label_pc_8054890
  %v4_80548a3 = icmp eq i32 %arg2, 0
  br i1 %v4_80548a3, label %dec_label_pc_80548bb, label %dec_label_pc_80548aa

dec_label_pc_80548aa:                             ; preds = %dec_label_pc_805489e
  %v1_80548ae = call i32 @llvm.bswap.i32(i32 %v2_8054896)
  %v2_80548b0 = inttoptr i32 %arg2 to i32*
  store i32 %v1_80548ae, i32* %v2_80548b0, align 4
  br label %dec_label_pc_80548bb

dec_label_pc_80548b9:                             ; preds = %dec_label_pc_805488c, %dec_label_pc_805487f, %dec_label_pc_8054847, %dec_label_pc_805485b, %dec_label_pc_805482d
  br label %dec_label_pc_80548bb

dec_label_pc_80548bb:                             ; preds = %dec_label_pc_805489e, %dec_label_pc_80548aa, %dec_label_pc_80548b9
  %v0_80548c0 = phi i32 [ 1, %dec_label_pc_805489e ], [ 1, %dec_label_pc_80548aa ], [ 0, %dec_label_pc_80548b9 ]
  ret i32 %v0_80548c0

; uselistorder directives
  uselistorder i32 %v2_805486d, { 1, 0 }
  uselistorder i32 %v6_805486b, { 1, 0 }
  uselistorder i8 %v2_805486b, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805486a, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8054862, { 1, 0 }
  uselistorder i32 %v3_805485e, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8054893, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 16, 17, 2, 3, 0, 4, 5, 18, 14, 6, 7, 9, 8, 15, 10, 11, 12, 13 }
  uselistorder i32 3, { 1, 2, 0, 15, 10, 23, 6, 7, 9, 3, 4, 16, 17, 18, 19, 20, 21, 22, 11, 8, 5, 24, 13, 14, 25, 12 }
  uselistorder i16 0, { 0, 1, 6, 7, 4, 5, 2, 3 }
  uselistorder i32 -256, { 2, 4, 5, 29, 30, 31, 3, 32, 33, 34, 35, 36, 37, 38, 9, 10, 25, 16, 18, 26, 20, 21, 6, 7, 8, 11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 27, 28, 39, 40, 41, 42, 0, 43, 44, 45, 1, 46, 47, 48, 49, 50 }
  uselistorder i32 10, { 1, 8, 7, 5, 11, 3, 0, 10, 9, 6, 4, 2, 12, 13, 14 }
  uselistorder i8 0, { 17, 18, 30, 31, 32, 33, 34, 35, 16, 36, 37, 38, 39, 40, 41, 5, 42, 19, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 2, 57, 58, 59, 60, 20, 24, 25, 26, 22, 23, 21, 27, 0, 28, 29, 6, 7, 61, 62, 3, 64, 65, 63, 66, 67, 68, 69, 4, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 14, 90, 1, 91, 8, 15, 9, 10, 11, 12, 13 }
  uselistorder i32 2, { 37, 39, 40, 1, 64, 15, 65, 16, 34, 0, 22, 31, 23, 32, 24, 33, 2, 3, 4, 38, 5, 6, 7, 17, 18, 66, 8, 9, 20, 10, 25, 19, 21, 28, 26, 27, 13, 12, 43, 44, 45, 46, 47, 61, 51, 42, 50, 52, 49, 53, 54, 55, 56, 57, 58, 41, 48, 59, 60, 11, 35, 30, 29, 14, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 36 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80548bb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80548b9, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805486b, { 1, 0 }
  uselistorder label %dec_label_pc_8054847, { 1, 0 }
}

define i32 @function_80548c1(i32 %arg1) local_unnamed_addr {
dec_label_pc_80548c1:
  %v0_80548c4 = call i32 @function_8052247()
  %v0_80548c9 = load i32, i32* @edx, align 4
  %v4_80548d0 = call i32 @function_80522d2(i32 %v0_80548c4, i32 %arg1, i32 %v0_80548c9, i32 %v0_80548c9)
  ret i32 %v4_80548d0

; uselistorder directives
  uselistorder i32* @edx, { 31, 17, 1, 18, 33, 35, 36, 38, 37, 34, 42, 43, 2, 44, 45, 3, 46, 41, 14, 4, 15, 47, 5, 48, 40, 16, 19, 20, 39, 30, 32, 6, 49, 7, 50, 21, 11, 23, 24, 25, 22, 12, 10, 9, 8, 26, 13, 27, 29, 28, 0, 51, 52, 53, 54, 55, 56, 57 }
}

define i32 @function_80548d9() local_unnamed_addr {
dec_label_pc_80548d9:
  %v0_80548d9 = load i32, i32* @eax, align 4
  %v1_80548d9 = add i32 %v0_80548d9, 28
  %v2_80548d9 = inttoptr i32 %v1_80548d9 to i32*
  %v3_80548d9 = load i32, i32* %v2_80548d9, align 4
  store i32 %v3_80548d9, i32* @global_var_8056778.86, align 8
  %v1_80548e2 = add i32 %v0_80548d9, 44
  %v2_80548e2 = inttoptr i32 %v1_80548e2 to i32*
  %v3_80548e2 = load i32, i32* %v2_80548e2, align 4
  store i32 %v3_80548e2, i32* @global_var_805677c.87, align 4
  ret i32 %v3_80548e2

; uselistorder directives
  uselistorder i32 44, { 4, 3, 2, 8, 10, 9, 5, 6, 7, 11, 12, 13, 14, 0, 1 }
  uselistorder i32 28, { 28, 16, 17, 13, 14, 15, 29, 4, 5, 11, 0, 8, 6, 9, 10, 18, 19, 20, 21, 7, 22, 23, 24, 25, 26, 27, 30, 3, 12, 2, 1, 31, 32, 33 }
}

define i32 @function_80548eb(i32 %arg1) local_unnamed_addr {
dec_label_pc_80548eb:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80548eb = load i32, i32* @ebx, align 4
  store i32 %v0_80548eb, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80548fe = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80548fe, i32* @global_var_8056158.84, align 8
  %v7_8054909 = icmp ult i32 %v1_80548fe, %arg1
  %v1_805490b = icmp eq i1 %v7_8054909, false
  br i1 %v1_805490b, label %dec_label_pc_805491b, label %dec_label_pc_805490d

dec_label_pc_805490d:                             ; preds = %dec_label_pc_80548eb
  %v1_805490d = call i32 @function_80526fd(i32 %v0_80548eb)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8054915 = inttoptr i32 %v1_805490d to i32*
  store i32 12, i32* %v1_8054915, align 4
  %v0_805491b.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_805491f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805491b

dec_label_pc_805491b:                             ; preds = %dec_label_pc_80548eb, %dec_label_pc_805490d
  %v2_805491f = phi i32 [ %v0_80548eb, %dec_label_pc_80548eb ], [ %v2_805491f.pre, %dec_label_pc_805490d ]
  %v0_805491b = phi i32 [ 0, %dec_label_pc_80548eb ], [ %v0_805491b.pre, %dec_label_pc_805490d ]
  store i32 %v2_805491f, i32* @ebx, align 4
  ret i32 %v0_805491b

; uselistorder directives
  uselistorder i32 %v1_80548fe, { 1, 0 }
  uselistorder i32 12, { 100, 70, 71, 65, 66, 67, 58, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 59, 60, 61, 62, 63, 64, 116, 134, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 56, 133, 57, 68, 69, 72, 73, 74, 77, 78, 88, 99, 89, 90, 91, 79, 84, 76, 83, 85, 86, 82, 92, 75, 80, 81, 87, 93, 54, 94, 96, 97, 27, 95, 98, 0, 1, 25, 9, 8, 7, 15, 52, 20, 31, 32, 30, 16, 37, 29, 35, 36, 17, 135, 6, 33, 34, 3, 5, 28, 136, 53, 137, 141, 138, 139, 140, 38, 39, 40, 41, 18, 19, 42, 43, 44, 142, 45, 46, 47, 48, 49, 50, 51, 4, 21, 22, 10, 11, 12, 13, 14, 143, 23, 2, 24, 144, 145, 26, 55 }
  uselistorder i32* @global_var_8056158.84, { 1, 0, 2 }
  uselistorder i32 45, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805491b, { 1, 0 }
}

define i32 @function_8054921() local_unnamed_addr {
dec_label_pc_8054921:
  %v0_8054924 = load i32, i32* @eax, align 4
  %v1_8054926 = sub i32 0, %v0_8054924
  %v1_8054928 = call i32 @function_80526fd(i32 ptrtoint (i32* @0 to i32))
  %v2_805492d = inttoptr i32 %v1_8054928 to i32*
  store i32 %v1_8054926, i32* %v2_805492d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_80526fd, { 30, 29, 46, 26, 25, 50, 45, 24, 51, 23, 22, 21, 44, 1, 0, 52, 20, 19, 18, 16, 15, 14, 49, 3, 11, 4, 48, 47, 43, 42, 41, 40, 10, 13, 12, 39, 9, 38, 37, 36, 17, 28, 35, 34, 27, 32, 8, 7, 6, 33, 31, 5, 2 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 8, 7, 31, 32, 17, 15, 18, 9, 10, 11, 19, 33, 34, 35, 36, 16, 14, 12, 13, 37, 20, 40, 39, 113, 38, 74, 75, 96, 97, 98, 76, 77, 78, 79, 73, 88, 89, 90, 87, 81, 82, 83, 84, 85, 86, 80, 41, 99, 100, 101, 102, 103, 91, 92, 93, 94, 95, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119 }
}

define i32 @function_8054940() local_unnamed_addr {
dec_label_pc_8054940:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805494c = load i32, i32* @global_var_8056000.71, align 8192
  %v10_8054951 = icmp eq i32 %v0_805494c, -1
  br i1 %v10_8054951, label %dec_label_pc_8054962, label %dec_label_pc_8054956.preheader

dec_label_pc_8054956.preheader:                   ; preds = %dec_label_pc_8054940
  br label %dec_label_pc_8054956

dec_label_pc_8054956:                             ; preds = %dec_label_pc_8054956.preheader, %dec_label_pc_8054956
  %v4_8054959 = phi i32 [ %v0_805494c, %dec_label_pc_8054956.preheader ], [ %v2_805495b, %dec_label_pc_8054956 ]
  %v0_8054956 = phi i32 [ ptrtoint (i32* @global_var_8056000.71 to i32), %dec_label_pc_8054956.preheader ], [ %v1_8054956, %dec_label_pc_8054956 ]
  %v1_8054956 = add i32 %v0_8054956, -4
  call void @__pseudo_call(i32 %v4_8054959)
  %v1_805495b = inttoptr i32 %v1_8054956 to i32*
  %v2_805495b = load i32, i32* %v1_805495b, align 4
  %v10_805495d = icmp eq i32 %v2_805495b, -1
  %v1_8054960 = icmp eq i1 %v10_805495d, false
  br i1 %v1_8054960, label %dec_label_pc_8054956, label %dec_label_pc_8054962.loopexit

dec_label_pc_8054962.loopexit:                    ; preds = %dec_label_pc_8054956
  %v2_8054962.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054962

dec_label_pc_8054962:                             ; preds = %dec_label_pc_8054962.loopexit, %dec_label_pc_8054940
  %v2_8054962 = phi i32 [ %v2_8054962.pre, %dec_label_pc_8054962.loopexit ], [ %tmp6, %dec_label_pc_8054940 ]
  ret i32 %v2_8054962

; uselistorder directives
  uselistorder i32 %v0_805494c, { 1, 0 }
  uselistorder i1 false, { 93, 94, 37, 38, 40, 39, 95, 96, 97, 42, 43, 98, 101, 102, 103, 104, 105, 107, 10, 108, 109, 106, 100, 99, 25, 110, 111, 112, 1, 114, 115, 0, 116, 117, 118, 119, 3, 120, 121, 122, 123, 2, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 124, 26, 27, 28, 29, 30, 31, 32, 33, 34, 137, 138, 139, 140, 141, 142, 143, 144, 145, 9, 147, 146, 151, 148, 149, 150, 11, 152, 153, 113, 35, 4, 36, 41, 154, 155, 13, 44, 45, 46, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 14, 166, 167, 168, 169, 5, 170, 171, 172, 49, 62, 57, 16, 58, 67, 68, 69, 63, 64, 65, 47, 48, 50, 51, 52, 53, 54, 18, 55, 56, 59, 17, 60, 61, 66, 70, 71, 19, 72, 20, 92, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 86, 89, 87, 88, 90, 173, 174, 175, 176, 177, 6, 179, 180, 181, 178, 182, 183, 184, 185, 186, 187, 7, 188, 189, 190, 191, 15, 192, 193, 194, 195, 196, 197, 198, 22, 21, 199, 23, 200, 201, 202, 203, 8, 24, 12, 204 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 95, 96, 97, 98, 11, 99, 3, 94, 19, 90, 12, 91, 92, 93, 13, 0, 9, 10, 100, 101, 102, 103, 104, 105, 106, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 7, 50, 8, 51, 52, 53, 2, 6, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 4, 5, 82, 83, 84, 85, 86, 87, 88, 1, 89 }
  uselistorder i32 ptrtoint (i32* @global_var_8056000.71 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 19, 20, 0, 98, 177, 58, 99, 59, 60, 100, 61, 101, 62, 102, 63, 103, 64, 104, 65, 105, 66, 106, 67, 107, 68, 108, 17, 18, 8, 7, 69, 70, 109, 71, 110, 72, 111, 21, 1, 112, 57, 73, 74, 113, 114, 115, 10, 116, 9, 117, 178, 12, 13, 118, 11, 119, 22, 179, 23, 120, 180, 26, 25, 27, 28, 15, 29, 75, 30, 121, 24, 181, 6, 122, 123, 95, 124, 14, 31, 2, 76, 168, 169, 182, 183, 77, 170, 32, 78, 125, 79, 126, 55, 56, 127, 80, 128, 81, 129, 82, 130, 83, 131, 84, 132, 85, 133, 86, 134, 87, 135, 88, 136, 89, 137, 90, 138, 91, 139, 92, 140, 93, 141, 33, 142, 143, 3, 4, 5, 144, 34, 94, 184, 96, 35, 145, 173, 52, 146, 174, 171, 39, 147, 148, 175, 36, 149, 150, 151, 152, 153, 172, 154, 155, 156, 157, 158, 159, 160, 38, 54, 161, 162, 163, 37, 53, 164, 165, 166, 40, 167, 176, 16, 41, 185, 186, 187, 42, 188, 189, 48, 43, 190, 44, 45, 46, 47, 191, 49, 192, 50, 51, 193, 194, 97 }
  uselistorder i32 1, { 222, 223, 77, 136, 137, 337, 338, 339, 340, 138, 376, 224, 34, 33, 35, 225, 23, 22, 21, 226, 24, 227, 64, 228, 30, 229, 60, 230, 49, 231, 109, 232, 50, 233, 104, 234, 103, 235, 105, 236, 237, 63, 62, 61, 155, 47, 239, 238, 240, 32, 241, 36, 243, 242, 78, 244, 248, 247, 246, 245, 13, 377, 378, 379, 251, 250, 249, 15, 14, 139, 252, 255, 254, 253, 106, 140, 214, 331, 125, 261, 260, 259, 258, 257, 256, 100, 101, 156, 262, 215, 265, 264, 263, 82, 157, 381, 382, 383, 266, 51, 52, 384, 385, 141, 386, 387, 388, 55, 53, 54, 216, 380, 158, 83, 84, 85, 86, 159, 142, 333, 334, 335, 336, 269, 268, 267, 58, 57, 56, 59, 160, 270, 41, 42, 162, 389, 390, 391, 392, 393, 394, 395, 396, 397, 161, 398, 399, 400, 401, 402, 143, 403, 404, 111, 144, 405, 406, 407, 408, 145, 146, 409, 410, 411, 273, 272, 271, 16, 17, 18, 20, 19, 147, 148, 274, 149, 150, 163, 278, 277, 276, 275, 27, 164, 217, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 341, 342, 292, 39, 38, 37, 293, 294, 165, 166, 295, 296, 151, 298, 297, 72, 167, 299, 300, 12, 301, 99, 302, 40, 303, 80, 304, 93, 305, 110, 306, 4, 307, 71, 3, 309, 308, 48, 310, 65, 311, 108, 313, 312, 107, 314, 81, 315, 29, 316, 31, 28, 412, 413, 414, 415, 213, 317, 91, 87, 89, 88, 90, 92, 416, 417, 112, 113, 418, 419, 0, 420, 421, 422, 423, 424, 168, 425, 169, 426, 319, 318, 79, 427, 152, 205, 428, 429, 153, 430, 431, 170, 432, 115, 26, 25, 433, 434, 435, 320, 74, 75, 73, 76, 436, 437, 219, 66, 68, 67, 70, 69, 438, 220, 43, 45, 44, 46, 345, 346, 347, 348, 349, 350, 359, 360, 171, 361, 362, 187, 188, 175, 356, 181, 344, 177, 355, 173, 357, 183, 354, 363, 185, 343, 186, 182, 351, 352, 179, 353, 180, 184, 178, 176, 174, 172, 358, 364, 189, 365, 366, 375, 367, 368, 369, 370, 373, 190, 374, 95, 97, 96, 94, 98, 371, 372, 218, 322, 321, 102, 1, 206, 2, 126, 127, 439, 440, 441, 442, 443, 116, 117, 444, 445, 446, 447, 448, 194, 119, 120, 193, 121, 197, 122, 449, 450, 195, 123, 124, 196, 451, 118, 114, 452, 453, 454, 455, 456, 207, 128, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 201, 135, 134, 467, 208, 129, 468, 469, 470, 471, 472, 198, 473, 474, 199, 475, 209, 130, 476, 210, 131, 477, 478, 211, 132, 479, 480, 212, 133, 481, 482, 483, 484, 485, 200, 486, 488, 489, 487, 202, 490, 491, 492, 493, 191, 192, 494, 495, 496, 497, 203, 332, 204, 498, 154, 329, 328, 327, 326, 325, 324, 323, 221, 11, 7, 9, 8, 5, 6, 10, 330 }
  uselistorder label %dec_label_pc_8054956, { 1, 0 }
}

define i32 @function_8054966() local_unnamed_addr {
entry:
  %v0_8054969 = load i32, i32* @ebx, align 4
  %v1_805496a = call i32 @function_80480b0(i32 %v0_8054969)
  store i32 %v1_805496a, i32* @eax, align 4
  %v0_8054975 = call i32 @function_80480c0()
  ret i32 %v0_8054975

; uselistorder directives
  uselistorder i32* @eax, { 7, 32, 33, 35, 36, 37, 38, 40, 10, 41, 0, 39, 4, 6, 34, 42, 44, 45, 43, 17, 18, 46, 52, 47, 48, 50, 51, 49, 1, 19, 20, 8, 2, 9, 11, 22, 23, 21, 27, 28, 29, 24, 25, 26, 53, 12, 13, 14, 54, 55, 56, 57, 58, 15, 16, 59, 30, 31, 3, 5 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 387, 47, 206, 48, 267, 268, 49, 269, 270, 271, 50, 108, 109, 280, 281, 51, 273, 390, 391, 392, 126, 393, 394, 395, 256, 274, 275, 396, 254, 253, 397, 398, 399, 255, 276, 277, 282, 283, 251, 400, 401, 402, 52, 403, 110, 408, 409, 8, 53, 207, 9, 208, 209, 411, 412, 102, 413, 54, 193, 55, 127, 128, 0, 404, 405, 406, 56, 252, 201, 57, 210, 414, 1, 111, 112, 58, 415, 416, 59, 60, 418, 417, 23, 24, 419, 422, 129, 194, 423, 425, 424, 21, 22, 426, 407, 61, 427, 27, 195, 62, 113, 429, 432, 431, 25, 26, 435, 436, 437, 438, 439, 114, 440, 441, 442, 130, 433, 131, 434, 132, 211, 257, 44, 258, 115, 212, 259, 443, 444, 445, 446, 447, 448, 449, 450, 451, 116, 117, 452, 213, 464, 214, 215, 133, 196, 216, 134, 197, 63, 217, 453, 454, 64, 65, 135, 198, 46, 455, 456, 457, 66, 67, 136, 199, 45, 458, 103, 459, 37, 460, 461, 463, 218, 462, 2, 430, 420, 421, 260, 261, 263, 262, 28, 29, 3, 118, 264, 265, 266, 272, 278, 279, 219, 220, 284, 285, 286, 287, 288, 289, 290, 291, 221, 292, 465, 428, 293, 466, 294, 295, 296, 410, 119, 388, 297, 298, 389, 302, 467, 468, 469, 222, 470, 6, 68, 223, 471, 137, 472, 473, 120, 474, 10, 30, 38, 11, 39, 12, 475, 4, 31, 40, 13, 41, 14, 70, 69, 42, 15, 71, 72, 299, 203, 476, 477, 478, 479, 480, 481, 75, 74, 73, 482, 125, 77, 76, 78, 224, 483, 225, 226, 7, 79, 227, 43, 16, 80, 228, 81, 229, 230, 231, 303, 304, 305, 307, 308, 325, 375, 326, 83, 232, 327, 84, 233, 328, 329, 330, 331, 309, 234, 235, 332, 333, 317, 323, 324, 300, 301, 318, 319, 320, 310, 311, 312, 313, 314, 315, 316, 321, 322, 17, 105, 106, 101, 236, 82, 237, 334, 104, 335, 336, 85, 372, 373, 374, 238, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 204, 239, 349, 240, 86, 241, 352, 353, 354, 355, 356, 121, 122, 357, 358, 359, 242, 306, 367, 368, 369, 370, 360, 361, 362, 366, 371, 87, 123, 350, 351, 88, 200, 89, 363, 364, 365, 18, 90, 205, 19, 138, 91, 92, 376, 377, 378, 379, 380, 381, 484, 485, 382, 383, 486, 487, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 488, 489, 490, 491, 492, 493, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 35, 549, 550, 551, 552, 553, 554, 555, 93, 243, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 244, 594, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 94, 245, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 139, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 95, 246, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 96, 247, 719, 720, 202, 721, 722, 248, 723, 724, 725, 97, 249, 726, 36, 727, 20, 32, 33, 34, 728, 729, 730, 731, 732, 733, 734, 735, 124, 98, 99, 5, 384, 385, 386, 100, 250, 107, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 736, 737, 738, 739, 740, 741, 742, 743 }
  uselistorder i32* @ebx, { 17, 164, 165, 68, 69, 42, 170, 1, 171, 172, 173, 174, 20, 21, 175, 19, 176, 177, 178, 179, 180, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 2, 71, 72, 73, 18, 181, 182, 183, 184, 185, 186, 187, 188, 189, 15, 16, 198, 199, 200, 201, 13, 3, 12, 192, 195, 196, 197, 190, 202, 203, 204, 205, 206, 207, 208, 209, 191, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 4, 231, 232, 217, 218, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 5, 33, 34, 35, 36, 37, 38, 39, 233, 259, 260, 261, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 14, 244, 245, 246, 247, 248, 6, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 212, 213, 40, 41, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 262, 263, 210, 211, 91, 264, 265, 92, 93, 94, 193, 194, 166, 167, 95, 96, 168, 169, 100, 101, 266, 267, 268, 269, 270, 97, 271, 272, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 132, 8, 133, 134, 135, 136, 112, 120, 121, 116, 99, 115, 117, 114, 122, 123, 124, 98, 125, 113, 118, 119, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 152, 153, 154, 7, 155, 143, 144, 145, 146, 147, 148, 149, 150, 151, 273, 274, 275, 156, 157, 158, 159, 276, 277, 278, 279, 9, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 280, 281, 282, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 0, 312, 313, 314, 315, 316, 11, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 10, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 160, 161, 162, 163 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
